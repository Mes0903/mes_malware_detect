
8eff332ab33fde8c4e9145d620f7d9beabbd7075e46e45bc87167a2c66e604c7.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rcx
   140001005:	push   rbp
   140001006:	push   rsi
   140001007:	push   rdi
   140001008:	push   r12
   14000100a:	push   r13
   14000100c:	sub    rsp,0x30
   140001010:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001019:	mov    QWORD PTR [rsp+0x70],rbx
   14000101e:	mov    rbx,rcx
   140001021:	call   0x14000669c
   140001026:	mov    rcx,rax
   140001029:	xor    ebp,ebp
   14000102b:	mov    edx,ebp
   14000102d:	test   rax,rax
   140001030:	setne  dl
   140001033:	test   edx,edx
   140001035:	jne    0x140001042
   140001037:	mov    ecx,0x80004005
   14000103c:	call   0x1400015c0
   140001041:	int3   
   140001042:	mov    rax,QWORD PTR [rax]
   140001045:	call   QWORD PTR [rax+0x18]
   140001048:	add    rax,0x18
   14000104c:	mov    QWORD PTR [rbx],rax
   14000104f:	lea    r13,[rip+0x356aa]        # 0x140036700
   140001056:	mov    r12,r13
   140001059:	shr    r12,0x10
   14000105d:	jne    0x14000107f
   14000105f:	movzx  edi,r13w
   140001063:	mov    ecx,edi
   140001065:	call   0x140006688
   14000106a:	test   rax,rax
   14000106d:	je     0x14000109e
   14000106f:	mov    r8d,edi
   140001072:	mov    rdx,rax
   140001075:	mov    rcx,rbx
   140001078:	call   0x140001ba0
   14000107d:	jmp    0x14000109e
   14000107f:	xor    eax,eax
   140001081:	or     rcx,0xffffffffffffffff
   140001085:	mov    rdi,r13
   140001088:	repnz scas ax,WORD PTR es:[rdi]
   14000108b:	not    rcx
   14000108e:	lea    r8d,[rcx-0x1]
   140001092:	mov    rdx,r13
   140001095:	mov    rcx,rbx
   140001098:	call   0x140001840
   14000109d:	nop
   14000109e:	lea    rsi,[rbx+0x8]
   1400010a2:	mov    QWORD PTR [rsp+0x68],rsi
   1400010a7:	call   0x14000669c
   1400010ac:	mov    rcx,rax
   1400010af:	test   rax,rax
   1400010b2:	setne  bpl
   1400010b6:	test   ebp,ebp
   1400010b8:	jne    0x1400010c5
   1400010ba:	mov    ecx,0x80004005
   1400010bf:	call   0x1400015c0
   1400010c4:	int3   
   1400010c5:	mov    rax,QWORD PTR [rax]
   1400010c8:	call   QWORD PTR [rax+0x18]
   1400010cb:	add    rax,0x18
   1400010cf:	mov    QWORD PTR [rsi],rax
   1400010d2:	test   r12,r12
   1400010d5:	jne    0x1400010f7
   1400010d7:	movzx  edi,r13w
   1400010db:	mov    ecx,edi
   1400010dd:	call   0x140006688
   1400010e2:	test   rax,rax
   1400010e5:	je     0x140001116
   1400010e7:	mov    r8d,edi
   1400010ea:	mov    rdx,rax
   1400010ed:	mov    rcx,rsi
   1400010f0:	call   0x140001ba0
   1400010f5:	jmp    0x140001116
   1400010f7:	xor    eax,eax
   1400010f9:	or     rcx,0xffffffffffffffff
   1400010fd:	mov    rdi,r13
   140001100:	repnz scas ax,WORD PTR es:[rdi]
   140001103:	not    rcx
   140001106:	lea    r8d,[rcx-0x1]
   14000110a:	mov    rdx,r13
   14000110d:	mov    rcx,rsi
   140001110:	call   0x140001840
   140001115:	nop
   140001116:	mov    BYTE PTR [rbx+0x10],0x0
   14000111a:	mov    rax,rbx
   14000111d:	mov    rbx,QWORD PTR [rsp+0x70]
   140001122:	add    rsp,0x30
   140001126:	pop    r13
   140001128:	pop    r12
   14000112a:	pop    rdi
   14000112b:	pop    rsi
   14000112c:	pop    rbp
   14000112d:	ret    
   14000112e:	int3   
   14000112f:	int3   
   140001130:	rex push rbp
   140001132:	sub    rsp,0x20
   140001136:	mov    rbp,rdx
   140001139:	mov    rcx,QWORD PTR [rbp+0x60]
   14000113d:	call   0x140001dc0
   140001142:	add    rsp,0x20
   140001146:	pop    rbp
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rbp
   140001152:	sub    rsp,0x20
   140001156:	mov    rbp,rdx
   140001159:	mov    rcx,QWORD PTR [rbp+0x60]
   14000115d:	call   0x140001dc0
   140001162:	add    rsp,0x20
   140001166:	pop    rbp
   140001167:	ret    
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	rex push rbp
   140001172:	sub    rsp,0x20
   140001176:	mov    rbp,rdx
   140001179:	mov    rcx,QWORD PTR [rbp+0x68]
   14000117d:	call   0x140001dc0
   140001182:	add    rsp,0x20
   140001186:	pop    rbp
   140001187:	ret    
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	mov    QWORD PTR [rsp+0x8],rbx
   140001195:	push   rdi
   140001196:	sub    rsp,0x20
   14000119a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000119e:	mov    rdi,rcx
   1400011a1:	sub    rdx,0x18
   1400011a5:	or     ebx,0xffffffff
   1400011a8:	mov    eax,ebx
   1400011aa:	lock xadd DWORD PTR [rdx+0x10],eax
   1400011af:	add    eax,ebx
   1400011b1:	test   eax,eax
   1400011b3:	jg     0x1400011be
   1400011b5:	mov    rcx,QWORD PTR [rdx]
   1400011b8:	mov    rax,QWORD PTR [rcx]
   1400011bb:	call   QWORD PTR [rax+0x8]
   1400011be:	mov    rdx,QWORD PTR [rdi]
   1400011c1:	sub    rdx,0x18
   1400011c5:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400011ca:	add    ebx,0xffffffff
   1400011cd:	test   ebx,ebx
   1400011cf:	jg     0x1400011da
   1400011d1:	mov    rcx,QWORD PTR [rdx]
   1400011d4:	mov    rax,QWORD PTR [rcx]
   1400011d7:	call   QWORD PTR [rax+0x8]
   1400011da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011df:	add    rsp,0x20
   1400011e3:	pop    rdi
   1400011e4:	ret    
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	rex push rdi
   1400011f2:	push   r12
   1400011f4:	push   r13
   1400011f6:	sub    rsp,0x30
   1400011fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001203:	mov    QWORD PTR [rsp+0x50],rbx
   140001208:	mov    QWORD PTR [rsp+0x58],rbp
   14000120d:	mov    QWORD PTR [rsp+0x60],rsi
   140001212:	movzx  r13d,r8b
   140001216:	mov    rsi,rdx
   140001219:	mov    r12,rcx
   14000121c:	call   0x14000669c
   140001221:	mov    rcx,rax
   140001224:	xor    eax,eax
   140001226:	test   rcx,rcx
   140001229:	setne  al
   14000122c:	test   eax,eax
   14000122e:	jne    0x14000123b
   140001230:	mov    ecx,0x80004005
   140001235:	call   0x1400015c0
   14000123a:	int3   
   14000123b:	mov    rax,QWORD PTR [rcx]
   14000123e:	call   QWORD PTR [rax+0x18]
   140001241:	lea    rbx,[rax+0x18]
   140001245:	mov    QWORD PTR [rsp+0x20],rbx
   14000124a:	or     rbp,0xffffffffffffffff
   14000124e:	test   rsi,rsi
   140001251:	je     0x140001296
   140001253:	test   rsi,0xffffffffffff0000
   14000125a:	jne    0x140001282
   14000125c:	movzx  edi,si
   14000125f:	mov    ecx,edi
   140001261:	call   0x140006688
   140001266:	test   rax,rax
   140001269:	je     0x1400012ad
   14000126b:	mov    r8d,edi
   14000126e:	mov    rdx,rax
   140001271:	lea    rcx,[rsp+0x20]
   140001276:	call   0x140001ba0
   14000127b:	mov    rbx,QWORD PTR [rsp+0x20]
   140001280:	jmp    0x1400012ad
   140001282:	xor    eax,eax
   140001284:	mov    rcx,rbp
   140001287:	mov    rdi,rsi
   14000128a:	repnz scas ax,WORD PTR es:[rdi]
   14000128d:	not    rcx
   140001290:	sub    rcx,0x1
   140001294:	jmp    0x140001298
   140001296:	xor    ecx,ecx
   140001298:	mov    r8d,ecx
   14000129b:	mov    rdx,rsi
   14000129e:	lea    rcx,[rsp+0x20]
   1400012a3:	call   0x140001840
   1400012a8:	mov    rbx,QWORD PTR [rsp+0x20]
   1400012ad:	test   r13b,r13b
   1400012b0:	je     0x140001453
   1400012b6:	movsxd rdi,DWORD PTR [rbx-0x10]
   1400012ba:	mov    ecx,0x1
   1400012bf:	sub    ecx,DWORD PTR [rbx-0x8]
   1400012c2:	mov    eax,DWORD PTR [rbx-0xc]
   1400012c5:	sub    eax,edi
   1400012c7:	or     eax,ecx
   1400012c9:	jge    0x1400012dc
   1400012cb:	mov    edx,edi
   1400012cd:	lea    rcx,[rsp+0x20]
   1400012d2:	call   0x1400015e0
   1400012d7:	mov    rbx,QWORD PTR [rsp+0x20]
   1400012dc:	lea    eax,[rdi+0x1]
   1400012df:	movsxd rdx,eax
   1400012e2:	mov    rcx,rbx
   1400012e5:	call   0x140019280
   1400012ea:	test   edi,edi
   1400012ec:	js     0x140001448
   1400012f2:	cmp    edi,DWORD PTR [rbx-0xc]
   1400012f5:	jg     0x140001448
   1400012fb:	mov    DWORD PTR [rbx-0x10],edi
   1400012fe:	mov    WORD PTR [rbx+rdi*2],0x0
   140001304:	xor    eax,eax
   140001306:	mov    rcx,rbp
   140001309:	lea    rdi,[rip+0x353f0]        # 0x140036700
   140001310:	repnz scas ax,WORD PTR es:[rdi]
   140001313:	not    rcx
   140001316:	lea    r8d,[rcx-0x1]
   14000131a:	lea    rdx,[rip+0x353df]        # 0x140036700
   140001321:	mov    rcx,r12
   140001324:	call   0x140001840
   140001329:	xor    r11d,r11d
   14000132c:	lea    rdi,[rip+0x353ad]        # 0x1400366e0
   140001333:	mov    rsi,rbx
   140001336:	mov    ecx,0xc
   14000133b:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000133e:	je     0x140001347
   140001340:	sbb    r11d,r11d
   140001343:	sbb    r11d,0xffffffff
   140001347:	test   r11d,r11d
   14000134a:	sete   al
   14000134d:	test   al,al
   14000134f:	je     0x140001415
   140001355:	lea    rdi,[rbx-0x18]
   140001359:	mov    rsi,QWORD PTR [r12]
   14000135d:	sub    rsi,0x18
   140001361:	cmp    rdi,rsi
   140001364:	je     0x140001415
   14000136a:	cmp    DWORD PTR [rsi+0x10],0x0
   14000136e:	jl     0x140001406
   140001374:	mov    rcx,QWORD PTR [rdi]
   140001377:	cmp    rcx,QWORD PTR [rsi]
   14000137a:	jne    0x140001406
   140001380:	mov    rax,QWORD PTR [rcx]
   140001383:	call   QWORD PTR [rax+0x20]
   140001386:	mov    rcx,rax
   140001389:	cmp    DWORD PTR [rdi+0x10],0x0
   14000138d:	jl     0x14000139e
   14000138f:	cmp    rax,QWORD PTR [rdi]
   140001392:	jne    0x14000139e
   140001394:	mov    rbx,rdi
   140001397:	lock add DWORD PTR [rdi+0x10],0x1
   14000139c:	jmp    0x1400013dd
   14000139e:	mov    rax,QWORD PTR [rax]
   1400013a1:	mov    r8d,0x2
   1400013a7:	mov    edx,DWORD PTR [rdi+0x8]
   1400013aa:	call   QWORD PTR [rax]
   1400013ac:	mov    rbx,rax
   1400013af:	test   rax,rax
   1400013b2:	jne    0x1400013ba
   1400013b4:	call   0x1400016f0
   1400013b9:	int3   
   1400013ba:	mov    eax,DWORD PTR [rdi+0x8]
   1400013bd:	mov    DWORD PTR [rbx+0x8],eax
   1400013c0:	mov    eax,DWORD PTR [rdi+0x8]
   1400013c3:	add    eax,0x1
   1400013c6:	movsxd rdx,eax
   1400013c9:	lea    r9,[rdx+rdx*1]
   1400013cd:	lea    r8,[rdi+0x18]
   1400013d1:	add    rdx,rdx
   1400013d4:	lea    rcx,[rbx+0x18]
   1400013d8:	call   0x140018ee0
   1400013dd:	mov    eax,ebp
   1400013df:	lock xadd DWORD PTR [rsi+0x10],eax
   1400013e4:	add    eax,0xffffffff
   1400013e7:	test   eax,eax
   1400013e9:	jg     0x1400013f7
   1400013eb:	mov    rcx,QWORD PTR [rsi]
   1400013ee:	mov    rax,QWORD PTR [rcx]
   1400013f1:	mov    rdx,rsi
   1400013f4:	call   QWORD PTR [rax+0x8]
   1400013f7:	lea    rax,[rbx+0x18]
   1400013fb:	mov    QWORD PTR [r12],rax
   1400013ff:	mov    rbx,QWORD PTR [rsp+0x20]
   140001404:	jmp    0x140001415
   140001406:	mov    r8d,DWORD PTR [rbx-0x10]
   14000140a:	mov    rdx,rbx
   14000140d:	mov    rcx,r12
   140001410:	call   0x140001840
   140001415:	xor    eax,eax
   140001417:	lea    rdi,[rip+0x352da]        # 0x1400366f8
   14000141e:	mov    rsi,rbx
   140001421:	mov    ecx,0x4
   140001426:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001429:	je     0x140001430
   14000142b:	sbb    eax,eax
   14000142d:	sbb    eax,0xffffffff
   140001430:	test   eax,eax
   140001432:	sete   al
   140001435:	test   al,al
   140001437:	je     0x140001541
   14000143d:	mov    BYTE PTR [r12+0x10],0x1
   140001443:	jmp    0x140001541
   140001448:	mov    ecx,0x80070057
   14000144d:	call   0x1400015c0
   140001452:	int3   
   140001453:	xor    eax,eax
   140001455:	lea    rdi,[rip+0x35284]        # 0x1400366e0
   14000145c:	mov    rsi,QWORD PTR [r12]
   140001460:	mov    ecx,0xc
   140001465:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001468:	je     0x14000146f
   14000146a:	sbb    eax,eax
   14000146c:	sbb    eax,0xffffffff
   14000146f:	test   eax,eax
   140001471:	sete   al
   140001474:	test   al,al
   140001476:	je     0x140001541
   14000147c:	lea    rsi,[rbx-0x18]
   140001480:	mov    rdi,QWORD PTR [r12+0x8]
   140001485:	sub    rdi,0x18
   140001489:	cmp    rsi,rdi
   14000148c:	je     0x140001541
   140001492:	cmp    DWORD PTR [rdi+0x10],0x0
   140001496:	jl     0x14000152f
   14000149c:	mov    rcx,QWORD PTR [rsi]
   14000149f:	cmp    rcx,QWORD PTR [rdi]
   1400014a2:	jne    0x14000152f
   1400014a8:	mov    rax,QWORD PTR [rcx]
   1400014ab:	call   QWORD PTR [rax+0x20]
   1400014ae:	mov    rcx,rax
   1400014b1:	cmp    DWORD PTR [rsi+0x10],0x0
   1400014b5:	jl     0x1400014c6
   1400014b7:	cmp    rax,QWORD PTR [rsi]
   1400014ba:	jne    0x1400014c6
   1400014bc:	mov    rbx,rsi
   1400014bf:	lock add DWORD PTR [rsi+0x10],0x1
   1400014c4:	jmp    0x140001505
   1400014c6:	mov    rax,QWORD PTR [rax]
   1400014c9:	mov    r8d,0x2
   1400014cf:	mov    edx,DWORD PTR [rsi+0x8]
   1400014d2:	call   QWORD PTR [rax]
   1400014d4:	mov    rbx,rax
   1400014d7:	test   rax,rax
   1400014da:	jne    0x1400014e2
   1400014dc:	call   0x1400016f0
   1400014e1:	int3   
   1400014e2:	mov    eax,DWORD PTR [rsi+0x8]
   1400014e5:	mov    DWORD PTR [rbx+0x8],eax
   1400014e8:	mov    eax,DWORD PTR [rsi+0x8]
   1400014eb:	add    eax,0x1
   1400014ee:	movsxd rdx,eax
   1400014f1:	lea    r9,[rdx+rdx*1]
   1400014f5:	lea    r8,[rsi+0x18]
   1400014f9:	add    rdx,rdx
   1400014fc:	lea    rcx,[rbx+0x18]
   140001500:	call   0x140018ee0
   140001505:	mov    eax,ebp
   140001507:	lock xadd DWORD PTR [rdi+0x10],eax
   14000150c:	add    eax,0xffffffff
   14000150f:	test   eax,eax
   140001511:	jg     0x14000151f
   140001513:	mov    rcx,QWORD PTR [rdi]
   140001516:	mov    rax,QWORD PTR [rcx]
   140001519:	mov    rdx,rdi
   14000151c:	call   QWORD PTR [rax+0x8]
   14000151f:	lea    rax,[rbx+0x18]
   140001523:	mov    QWORD PTR [r12+0x8],rax
   140001528:	mov    rbx,QWORD PTR [rsp+0x20]
   14000152d:	jmp    0x140001541
   14000152f:	mov    r8d,DWORD PTR [rbx-0x10]
   140001533:	mov    rdx,rbx
   140001536:	lea    rcx,[r12+0x8]
   14000153b:	call   0x140001840
   140001540:	nop
   140001541:	lea    rdx,[rbx-0x18]
   140001545:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000154a:	add    ebp,0xffffffff
   14000154d:	test   ebp,ebp
   14000154f:	jg     0x14000155a
   140001551:	mov    rcx,QWORD PTR [rdx]
   140001554:	mov    rax,QWORD PTR [rcx]
   140001557:	call   QWORD PTR [rax+0x8]
   14000155a:	mov    al,0x1
   14000155c:	mov    rbx,QWORD PTR [rsp+0x50]
   140001561:	mov    rbp,QWORD PTR [rsp+0x58]
   140001566:	mov    rsi,QWORD PTR [rsp+0x60]
   14000156b:	add    rsp,0x30
   14000156f:	pop    r13
   140001571:	pop    r12
   140001573:	pop    rdi
   140001574:	ret    
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	rex push rbp
   140001582:	sub    rsp,0x20
   140001586:	mov    rbp,rdx
   140001589:	lea    rcx,[rbp+0x20]
   14000158d:	call   0x140001dc0
   140001592:	add    rsp,0x20
   140001596:	pop    rbp
   140001597:	ret    
   140001598:	int3   
   140001599:	int3   
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	rex push rbp
   1400015a2:	sub    rsp,0x20
   1400015a6:	mov    rbp,rdx
   1400015a9:	lea    rcx,[rbp+0x20]
   1400015ad:	call   0x140001dc0
   1400015b2:	add    rsp,0x20
   1400015b6:	pop    rbp
   1400015b7:	ret    
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	sub    rsp,0x28
   1400015c4:	cmp    ecx,0x8007000e
   1400015ca:	jne    0x1400015d2
   1400015cc:	call   0x1400063c0
   1400015d1:	int3   
   1400015d2:	call   0x140006170
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	sub    rsp,0x28
   1400015e4:	mov    r8d,edx
   1400015e7:	mov    rdx,QWORD PTR [rcx]
   1400015ea:	mov    eax,DWORD PTR [rdx-0x10]
   1400015ed:	cmp    eax,r8d
   1400015f0:	cmovg  r8d,eax
   1400015f4:	cmp    DWORD PTR [rdx-0x8],0x1
   1400015f8:	jle    0x140001606
   1400015fa:	mov    edx,r8d
   1400015fd:	add    rsp,0x28
   140001601:	jmp    0x140001640
   140001606:	mov    edx,DWORD PTR [rdx-0xc]
   140001609:	cmp    edx,r8d
   14000160c:	jge    0x14000163a
   14000160e:	cmp    edx,0x400
   140001614:	jle    0x14000162c
   140001616:	add    edx,0x400
   14000161c:	cmp    edx,r8d
   14000161f:	cmovl  edx,r8d
   140001623:	add    rsp,0x28
   140001627:	jmp    0x140001700
   14000162c:	add    edx,edx
   14000162e:	cmp    edx,r8d
   140001631:	cmovl  edx,r8d
   140001635:	call   0x140001700
   14000163a:	add    rsp,0x28
   14000163e:	ret    
   14000163f:	int3   
   140001640:	mov    QWORD PTR [rsp+0x8],rbx
   140001645:	mov    QWORD PTR [rsp+0x10],rbp
   14000164a:	mov    QWORD PTR [rsp+0x18],rsi
   14000164f:	mov    QWORD PTR [rsp+0x20],rdi
   140001654:	push   r12
   140001656:	sub    rsp,0x20
   14000165a:	mov    rbx,QWORD PTR [rcx]
   14000165d:	mov    rsi,rcx
   140001660:	mov    edi,edx
   140001662:	mov    rcx,QWORD PTR [rbx-0x18]
   140001666:	mov    ebp,DWORD PTR [rbx-0x10]
   140001669:	mov    rax,QWORD PTR [rcx]
   14000166c:	call   QWORD PTR [rax+0x20]
   14000166f:	mov    r8d,0x2
   140001675:	mov    edx,edi
   140001677:	mov    r9,QWORD PTR [rax]
   14000167a:	mov    rcx,rax
   14000167d:	call   QWORD PTR [r9]
   140001680:	test   rax,rax
   140001683:	mov    r12,rax
   140001686:	jne    0x14000168e
   140001688:	call   0x1400016f0
   14000168d:	int3   
   14000168e:	cmp    ebp,edi
   140001690:	mov    r8,rbx
   140001693:	cmovl  edi,ebp
   140001696:	add    edi,0x1
   140001699:	movsxd rdx,edi
   14000169c:	lea    rdi,[rax+0x18]
   1400016a0:	add    rdx,rdx
   1400016a3:	mov    rcx,rdi
   1400016a6:	mov    r9,rdx
   1400016a9:	call   0x140018ee0
   1400016ae:	mov    DWORD PTR [r12+0x8],ebp
   1400016b3:	or     eax,0xffffffff
   1400016b6:	lock xadd DWORD PTR [rbx-0x8],eax
   1400016bb:	add    eax,0xffffffff
   1400016be:	test   eax,eax
   1400016c0:	jg     0x1400016d0
   1400016c2:	mov    rcx,QWORD PTR [rbx-0x18]
   1400016c6:	lea    rdx,[rbx-0x18]
   1400016ca:	mov    rax,QWORD PTR [rcx]
   1400016cd:	call   QWORD PTR [rax+0x8]
   1400016d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016d5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400016da:	mov    QWORD PTR [rsi],rdi
   1400016dd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400016e2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400016e7:	add    rsp,0x20
   1400016eb:	pop    r12
   1400016ed:	ret    
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	sub    rsp,0x28
   1400016f4:	mov    ecx,0x8007000e
   1400016f9:	call   0x1400015c0
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	rex push rbx
   140001702:	sub    rsp,0x20
   140001706:	mov    r8d,edx
   140001709:	mov    rdx,QWORD PTR [rcx]
   14000170c:	mov    rbx,rcx
   14000170f:	mov    rcx,QWORD PTR [rdx-0x18]
   140001713:	sub    rdx,0x18
   140001717:	cmp    DWORD PTR [rdx+0xc],r8d
   14000171b:	jge    0x140001746
   14000171d:	test   r8d,r8d
   140001720:	jle    0x140001746
   140001722:	mov    rax,QWORD PTR [rcx]
   140001725:	mov    r9d,0x2
   14000172b:	call   QWORD PTR [rax+0x10]
   14000172e:	test   rax,rax
   140001731:	jne    0x140001739
   140001733:	call   0x1400016f0
   140001738:	int3   
   140001739:	add    rax,0x18
   14000173d:	mov    QWORD PTR [rbx],rax
   140001740:	add    rsp,0x20
   140001744:	pop    rbx
   140001745:	ret    
   140001746:	call   0x1400016f0
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    QWORD PTR [rsp+0x8],rbx
   140001755:	mov    QWORD PTR [rsp+0x10],rbp
   14000175a:	mov    QWORD PTR [rsp+0x18],rsi
   14000175f:	push   rdi
   140001760:	sub    rsp,0x20
   140001764:	mov    rdx,QWORD PTR [rdx]
   140001767:	mov    rbx,QWORD PTR [rcx]
   14000176a:	mov    rsi,rcx
   14000176d:	lea    rdi,[rdx-0x18]
   140001771:	sub    rbx,0x18
   140001775:	cmp    rdi,rbx
   140001778:	je     0x140001820
   14000177e:	cmp    DWORD PTR [rbx+0x10],0x0
   140001782:	jl     0x140001814
   140001788:	mov    rcx,QWORD PTR [rdi]
   14000178b:	cmp    rcx,QWORD PTR [rbx]
   14000178e:	jne    0x140001814
   140001794:	mov    rax,QWORD PTR [rcx]
   140001797:	call   QWORD PTR [rax+0x20]
   14000179a:	cmp    DWORD PTR [rdi+0x10],0x0
   14000179e:	mov    rcx,rax
   1400017a1:	jl     0x1400017b2
   1400017a3:	cmp    rax,QWORD PTR [rdi]
   1400017a6:	jne    0x1400017b2
   1400017a8:	mov    rbp,rdi
   1400017ab:	lock add DWORD PTR [rdi+0x10],0x1
   1400017b0:	jmp    0x1400017f0
   1400017b2:	mov    rax,QWORD PTR [rax]
   1400017b5:	mov    edx,DWORD PTR [rdi+0x8]
   1400017b8:	mov    r8d,0x2
   1400017be:	call   QWORD PTR [rax]
   1400017c0:	test   rax,rax
   1400017c3:	mov    rbp,rax
   1400017c6:	jne    0x1400017ce
   1400017c8:	call   0x1400016f0
   1400017cd:	int3   
   1400017ce:	mov    eax,DWORD PTR [rdi+0x8]
   1400017d1:	lea    r8,[rdi+0x18]
   1400017d5:	lea    rcx,[rbp+0x18]
   1400017d9:	mov    DWORD PTR [rbp+0x8],eax
   1400017dc:	mov    eax,DWORD PTR [rdi+0x8]
   1400017df:	add    eax,0x1
   1400017e2:	movsxd rdx,eax
   1400017e5:	add    rdx,rdx
   1400017e8:	mov    r9,rdx
   1400017eb:	call   0x140018ee0
   1400017f0:	or     eax,0xffffffff
   1400017f3:	lock xadd DWORD PTR [rbx+0x10],eax
   1400017f8:	add    eax,0xffffffff
   1400017fb:	test   eax,eax
   1400017fd:	jg     0x14000180b
   1400017ff:	mov    rcx,QWORD PTR [rbx]
   140001802:	mov    rdx,rbx
   140001805:	mov    rax,QWORD PTR [rcx]
   140001808:	call   QWORD PTR [rax+0x8]
   14000180b:	lea    rax,[rbp+0x18]
   14000180f:	mov    QWORD PTR [rsi],rax
   140001812:	jmp    0x140001820
   140001814:	mov    r8d,DWORD PTR [rdx-0x10]
   140001818:	mov    rcx,rsi
   14000181b:	call   0x140001840
   140001820:	mov    rbx,QWORD PTR [rsp+0x30]
   140001825:	mov    rbp,QWORD PTR [rsp+0x38]
   14000182a:	mov    rax,rsi
   14000182d:	mov    rsi,QWORD PTR [rsp+0x40]
   140001832:	add    rsp,0x20
   140001836:	pop    rdi
   140001837:	ret    
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    QWORD PTR [rsp+0x18],rbx
   140001845:	mov    QWORD PTR [rsp+0x20],rbp
   14000184a:	push   rdi
   14000184b:	sub    rsp,0x20
   14000184f:	test   r8d,r8d
   140001852:	movsxd rdi,r8d
   140001855:	mov    rbp,rdx
   140001858:	mov    rbx,rcx
   14000185b:	jne    0x1400018e4
   140001861:	mov    rax,QWORD PTR [rcx]
   140001864:	cmp    DWORD PTR [rax-0x10],r8d
   140001868:	mov    rdi,QWORD PTR [rax-0x18]
   14000186c:	lea    rdx,[rax-0x18]
   140001870:	je     0x140001979
   140001876:	cmp    DWORD PTR [rdx+0x10],r8d
   14000187a:	jge    0x1400018ac
   14000187c:	cmp    DWORD PTR [rax-0xc],r8d
   140001880:	jge    0x14000188d
   140001882:	mov    ecx,0x80070057
   140001887:	call   0x1400015c0
   14000188c:	int3   
   14000188d:	mov    DWORD PTR [rax-0x10],0x0
   140001894:	mov    rax,QWORD PTR [rcx]
   140001897:	mov    WORD PTR [rax],0x0
   14000189c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018a1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018a6:	add    rsp,0x20
   1400018aa:	pop    rdi
   1400018ab:	ret    
   1400018ac:	or     eax,0xffffffff
   1400018af:	lock xadd DWORD PTR [rdx+0x10],eax
   1400018b4:	add    eax,0xffffffff
   1400018b7:	test   eax,eax
   1400018b9:	jg     0x1400018c4
   1400018bb:	mov    rcx,QWORD PTR [rdx]
   1400018be:	mov    rax,QWORD PTR [rcx]
   1400018c1:	call   QWORD PTR [rax+0x8]
   1400018c4:	mov    rax,QWORD PTR [rdi]
   1400018c7:	mov    rcx,rdi
   1400018ca:	call   QWORD PTR [rax+0x18]
   1400018cd:	add    rax,0x18
   1400018d1:	mov    QWORD PTR [rbx],rax
   1400018d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018d9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018de:	add    rsp,0x20
   1400018e2:	pop    rdi
   1400018e3:	ret    
   1400018e4:	test   rdx,rdx
   1400018e7:	jne    0x1400018f4
   1400018e9:	mov    ecx,0x80070057
   1400018ee:	call   0x1400015c0
   1400018f3:	int3   
   1400018f4:	mov    rax,QWORD PTR [rcx]
   1400018f7:	mov    QWORD PTR [rsp+0x30],rsi
   1400018fc:	mov    QWORD PTR [rsp+0x38],r12
   140001901:	mov    esi,DWORD PTR [rax-0x10]
   140001904:	mov    r12,rdx
   140001907:	mov    ecx,0x1
   14000190c:	sub    ecx,DWORD PTR [rax-0x8]
   14000190f:	sub    r12,rax
   140001912:	mov    eax,DWORD PTR [rax-0xc]
   140001915:	sub    eax,edi
   140001917:	sar    r12,1
   14000191a:	or     ecx,eax
   14000191c:	jge    0x140001928
   14000191e:	mov    edx,edi
   140001920:	mov    rcx,rbx
   140001923:	call   0x1400015e0
   140001928:	cmp    r12,rsi
   14000192b:	mov    rcx,QWORD PTR [rbx]
   14000192e:	ja     0x140001945
   140001930:	lea    rsi,[rdi+rdi*1]
   140001934:	lea    r8,[rcx+r12*2]
   140001938:	mov    r9,rsi
   14000193b:	mov    rdx,rsi
   14000193e:	call   0x140018fb0
   140001943:	jmp    0x140001957
   140001945:	lea    rsi,[rdi+rdi*1]
   140001949:	mov    r8,rbp
   14000194c:	mov    r9,rsi
   14000194f:	mov    rdx,rsi
   140001952:	call   0x140018ee0
   140001957:	test   edi,edi
   140001959:	mov    r12,QWORD PTR [rsp+0x38]
   14000195e:	js     0x140001989
   140001960:	mov    rax,QWORD PTR [rbx]
   140001963:	cmp    edi,DWORD PTR [rax-0xc]
   140001966:	jg     0x140001989
   140001968:	mov    DWORD PTR [rax-0x10],edi
   14000196b:	mov    rax,QWORD PTR [rbx]
   14000196e:	mov    WORD PTR [rsi+rax*1],0x0
   140001974:	mov    rsi,QWORD PTR [rsp+0x30]
   140001979:	mov    rbx,QWORD PTR [rsp+0x40]
   14000197e:	mov    rbp,QWORD PTR [rsp+0x48]
   140001983:	add    rsp,0x20
   140001987:	pop    rdi
   140001988:	ret    
   140001989:	mov    ecx,0x80070057
   14000198e:	call   0x1400015c0
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019a5:	push   rdi
   1400019a6:	sub    rsp,0x20
   1400019aa:	mov    rax,QWORD PTR [rcx]
   1400019ad:	mov    rbx,rcx
   1400019b0:	cmp    DWORD PTR [rax-0x10],0x0
   1400019b4:	mov    rdi,QWORD PTR [rax-0x18]
   1400019b8:	lea    rdx,[rax-0x18]
   1400019bc:	je     0x140001a17
   1400019be:	cmp    DWORD PTR [rdx+0x10],0x0
   1400019c2:	jge    0x1400019ef
   1400019c4:	cmp    DWORD PTR [rax-0xc],0x0
   1400019c8:	jge    0x1400019d5
   1400019ca:	mov    ecx,0x80070057
   1400019cf:	call   0x1400015c0
   1400019d4:	int3   
   1400019d5:	mov    DWORD PTR [rax-0x10],0x0
   1400019dc:	mov    rax,QWORD PTR [rcx]
   1400019df:	mov    WORD PTR [rax],0x0
   1400019e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019e9:	add    rsp,0x20
   1400019ed:	pop    rdi
   1400019ee:	ret    
   1400019ef:	or     eax,0xffffffff
   1400019f2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400019f7:	add    eax,0xffffffff
   1400019fa:	test   eax,eax
   1400019fc:	jg     0x140001a07
   1400019fe:	mov    rcx,QWORD PTR [rdx]
   140001a01:	mov    rax,QWORD PTR [rcx]
   140001a04:	call   QWORD PTR [rax+0x8]
   140001a07:	mov    rax,QWORD PTR [rdi]
   140001a0a:	mov    rcx,rdi
   140001a0d:	call   QWORD PTR [rax+0x18]
   140001a10:	add    rax,0x18
   140001a14:	mov    QWORD PTR [rbx],rax
   140001a17:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a1c:	add    rsp,0x20
   140001a20:	pop    rdi
   140001a21:	ret    
   140001a22:	int3   
   140001a23:	int3   
   140001a24:	int3   
   140001a25:	int3   
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	mov    QWORD PTR [rsp+0x8],rbx
   140001a35:	push   rdi
   140001a36:	sub    rsp,0x20
   140001a3a:	mov    rbx,rcx
   140001a3d:	mov    rcx,QWORD PTR [rcx]
   140001a40:	mov    rax,QWORD PTR [rcx]
   140001a43:	call   QWORD PTR [rax+0x20]
   140001a46:	cmp    DWORD PTR [rbx+0x10],0x0
   140001a4a:	mov    rcx,rax
   140001a4d:	jl     0x140001a6a
   140001a4f:	cmp    rax,QWORD PTR [rbx]
   140001a52:	jne    0x140001a6a
   140001a54:	mov    rdi,rbx
   140001a57:	lock add DWORD PTR [rbx+0x10],0x1
   140001a5c:	mov    rax,rbx
   140001a5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a64:	add    rsp,0x20
   140001a68:	pop    rdi
   140001a69:	ret    
   140001a6a:	mov    rax,QWORD PTR [rax]
   140001a6d:	mov    edx,DWORD PTR [rbx+0x8]
   140001a70:	mov    r8d,0x2
   140001a76:	call   QWORD PTR [rax]
   140001a78:	test   rax,rax
   140001a7b:	mov    rdi,rax
   140001a7e:	jne    0x140001a86
   140001a80:	call   0x1400016f0
   140001a85:	int3   
   140001a86:	mov    eax,DWORD PTR [rbx+0x8]
   140001a89:	lea    r8,[rbx+0x18]
   140001a8d:	lea    rcx,[rdi+0x18]
   140001a91:	mov    DWORD PTR [rdi+0x8],eax
   140001a94:	mov    eax,DWORD PTR [rbx+0x8]
   140001a97:	add    eax,0x1
   140001a9a:	movsxd rdx,eax
   140001a9d:	add    rdx,rdx
   140001aa0:	mov    r9,rdx
   140001aa3:	call   0x140018ee0
   140001aa8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001aad:	mov    rax,rdi
   140001ab0:	add    rsp,0x20
   140001ab4:	pop    rdi
   140001ab5:	ret    
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ac5:	push   rdi
   140001ac6:	sub    rsp,0x30
   140001aca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ad3:	mov    QWORD PTR [rsp+0x48],rbx
   140001ad8:	mov    QWORD PTR [rsp+0x50],rsi
   140001add:	mov    rbx,rdx
   140001ae0:	mov    rsi,rcx
   140001ae3:	call   0x14000669c
   140001ae8:	mov    rcx,rax
   140001aeb:	xor    eax,eax
   140001aed:	test   rcx,rcx
   140001af0:	setne  al
   140001af3:	test   eax,eax
   140001af5:	jne    0x140001b02
   140001af7:	mov    ecx,0x80004005
   140001afc:	call   0x1400015c0
   140001b01:	int3   
   140001b02:	mov    rax,QWORD PTR [rcx]
   140001b05:	call   QWORD PTR [rax+0x18]
   140001b08:	add    rax,0x18
   140001b0c:	mov    QWORD PTR [rsi],rax
   140001b0f:	test   rbx,rbx
   140001b12:	je     0x140001b51
   140001b14:	test   rbx,0xffffffffffff0000
   140001b1b:	jne    0x140001b3c
   140001b1d:	movzx  edi,bx
   140001b20:	mov    ecx,edi
   140001b22:	call   0x140006688
   140001b27:	test   rax,rax
   140001b2a:	je     0x140001b62
   140001b2c:	mov    r8d,edi
   140001b2f:	mov    rdx,rax
   140001b32:	mov    rcx,rsi
   140001b35:	call   0x140001ba0
   140001b3a:	jmp    0x140001b62
   140001b3c:	xor    eax,eax
   140001b3e:	or     rcx,0xffffffffffffffff
   140001b42:	mov    rdi,rbx
   140001b45:	repnz scas ax,WORD PTR es:[rdi]
   140001b48:	not    rcx
   140001b4b:	sub    rcx,0x1
   140001b4f:	jmp    0x140001b53
   140001b51:	xor    ecx,ecx
   140001b53:	mov    r8d,ecx
   140001b56:	mov    rdx,rbx
   140001b59:	mov    rcx,rsi
   140001b5c:	call   0x140001840
   140001b61:	nop
   140001b62:	mov    rax,rsi
   140001b65:	mov    rbx,QWORD PTR [rsp+0x48]
   140001b6a:	mov    rsi,QWORD PTR [rsp+0x50]
   140001b6f:	add    rsp,0x30
   140001b73:	pop    rdi
   140001b74:	ret    
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	rex push rbp
   140001b82:	sub    rsp,0x20
   140001b86:	mov    rbp,rdx
   140001b89:	mov    rcx,QWORD PTR [rbp+0x40]
   140001b8d:	call   0x140001dc0
   140001b92:	add    rsp,0x20
   140001b96:	pop    rbp
   140001b97:	ret    
   140001b98:	int3   
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ba5:	mov    QWORD PTR [rsp+0x10],rbp
   140001baa:	mov    QWORD PTR [rsp+0x18],rsi
   140001baf:	mov    QWORD PTR [rsp+0x20],rdi
   140001bb4:	push   r12
   140001bb6:	sub    rsp,0x20
   140001bba:	mov    eax,r8d
   140001bbd:	mov    rbp,rdx
   140001bc0:	mov    ebx,r8d
   140001bc3:	shr    eax,0x4
   140001bc6:	mov    rsi,rcx
   140001bc9:	mov    r8d,0x6
   140001bcf:	add    ax,0x1
   140001bd3:	mov    rcx,rbp
   140001bd6:	movzx  edx,ax
   140001bd9:	call   QWORD PTR [rip+0x2f8b1]        # 0x140031490
   140001bdf:	test   rax,rax
   140001be2:	mov    r12,rax
   140001be5:	je     0x140001d02
   140001beb:	mov    rdx,rax
   140001bee:	mov    rcx,rbp
   140001bf1:	call   QWORD PTR [rip+0x2f8a1]        # 0x140031498
   140001bf7:	test   rax,rax
   140001bfa:	je     0x140001d02
   140001c00:	mov    rcx,rax
   140001c03:	call   QWORD PTR [rip+0x2f897]        # 0x1400314a0
   140001c09:	test   rax,rax
   140001c0c:	mov    rdi,rax
   140001c0f:	je     0x140001d02
   140001c15:	mov    rdx,r12
   140001c18:	mov    rcx,rbp
   140001c1b:	call   QWORD PTR [rip+0x2f88f]        # 0x1400314b0
   140001c21:	mov    r11d,eax
   140001c24:	add    r11,rdi
   140001c27:	and    ebx,0xf
   140001c2a:	jbe    0x140001c46
   140001c2c:	data16 data16 xchg ax,ax
   140001c30:	cmp    rdi,r11
   140001c33:	jae    0x140001d02
   140001c39:	add    ebx,0xffffffff
   140001c3c:	movzx  eax,WORD PTR [rdi]
   140001c3f:	lea    rdi,[rdi+rax*2+0x2]
   140001c44:	jne    0x140001c30
   140001c46:	cmp    rdi,r11
   140001c49:	jae    0x140001d02
   140001c4f:	movzx  eax,WORD PTR [rdi]
   140001c52:	test   ax,ax
   140001c55:	je     0x140001d02
   140001c5b:	movzx  ebx,ax
   140001c5e:	mov    rax,QWORD PTR [rsi]
   140001c61:	mov    ecx,0x1
   140001c66:	sub    ecx,DWORD PTR [rax-0x8]
   140001c69:	mov    eax,DWORD PTR [rax-0xc]
   140001c6c:	sub    eax,ebx
   140001c6e:	or     ecx,eax
   140001c70:	jge    0x140001c7c
   140001c72:	mov    edx,ebx
   140001c74:	mov    rcx,rsi
   140001c77:	call   0x1400015e0
   140001c7c:	movzx  ecx,WORD PTR [rdi]
   140001c7f:	lea    r8,[rdi+0x2]
   140001c83:	cmp    ecx,0xffffffff
   140001c86:	jne    0x140001c99
   140001c88:	or     rcx,0xffffffffffffffff
   140001c8c:	xor    eax,eax
   140001c8e:	mov    rdi,r8
   140001c91:	repnz scas ax,WORD PTR es:[rdi]
   140001c94:	not    rcx
   140001c97:	and    ecx,ecx
   140001c99:	movsxd r9,ecx
   140001c9c:	mov    rcx,QWORD PTR [rsi]
   140001c9f:	lea    rdi,[rbx+rbx*1]
   140001ca3:	mov    rdx,rdi
   140001ca6:	add    r9,r9
   140001ca9:	call   0x140018ee0
   140001cae:	test   eax,eax
   140001cb0:	je     0x140001cd8
   140001cb2:	cmp    eax,0xc
   140001cb5:	je     0x140001cd2
   140001cb7:	cmp    eax,0x16
   140001cba:	je     0x140001ccc
   140001cbc:	cmp    eax,0x22
   140001cbf:	je     0x140001ccc
   140001cc1:	cmp    eax,0x50
   140001cc4:	je     0x140001cd8
   140001cc6:	call   0x140006408
   140001ccb:	int3   
   140001ccc:	call   0x140006408
   140001cd1:	int3   
   140001cd2:	call   0x1400063c0
   140001cd7:	int3   
   140001cd8:	test   ebx,ebx
   140001cda:	js     0x140001cf7
   140001cdc:	mov    rcx,QWORD PTR [rsi]
   140001cdf:	cmp    ebx,DWORD PTR [rcx-0xc]
   140001ce2:	jg     0x140001cf7
   140001ce4:	mov    DWORD PTR [rcx-0x10],ebx
   140001ce7:	mov    rcx,QWORD PTR [rsi]
   140001cea:	mov    eax,0x1
   140001cef:	mov    WORD PTR [rdi+rcx*1],0x0
   140001cf5:	jmp    0x140001d04
   140001cf7:	mov    ecx,0x80070057
   140001cfc:	call   0x1400015c0
   140001d01:	int3   
   140001d02:	xor    eax,eax
   140001d04:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d09:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d13:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d18:	add    rsp,0x20
   140001d1c:	pop    r12
   140001d1e:	ret    
   140001d1f:	int3   
   140001d20:	mov    QWORD PTR [rsp+0x10],rbp
   140001d25:	mov    QWORD PTR [rsp+0x18],rsi
   140001d2a:	push   rdi
   140001d2b:	sub    rsp,0x20
   140001d2f:	mov    edi,r8d
   140001d32:	mov    rsi,rdx
   140001d35:	mov    rbp,rcx
   140001d38:	call   QWORD PTR [rip+0x2f75a]        # 0x140031498
   140001d3e:	test   rax,rax
   140001d41:	jne    0x140001d53
   140001d43:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d48:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d4d:	add    rsp,0x20
   140001d51:	pop    rdi
   140001d52:	ret    
   140001d53:	mov    rcx,rax
   140001d56:	mov    QWORD PTR [rsp+0x30],rbx
   140001d5b:	call   QWORD PTR [rip+0x2f73f]        # 0x1400314a0
   140001d61:	test   rax,rax
   140001d64:	mov    rbx,rax
   140001d67:	je     0x140001d97
   140001d69:	mov    rdx,rsi
   140001d6c:	mov    rcx,rbp
   140001d6f:	call   QWORD PTR [rip+0x2f73b]        # 0x1400314b0
   140001d75:	mov    r11d,eax
   140001d78:	add    r11,rbx
   140001d7b:	and    edi,0xf
   140001d7e:	jbe    0x140001d92
   140001d80:	cmp    rbx,r11
   140001d83:	jae    0x140001d97
   140001d85:	add    edi,0xffffffff
   140001d88:	movzx  eax,WORD PTR [rbx]
   140001d8b:	lea    rbx,[rbx+rax*2+0x2]
   140001d90:	jne    0x140001d80
   140001d92:	cmp    rbx,r11
   140001d95:	jb     0x140001d9b
   140001d97:	xor    eax,eax
   140001d99:	jmp    0x140001da7
   140001d9b:	xor    eax,eax
   140001d9d:	cmp    WORD PTR [rbx],ax
   140001da0:	cmove  rbx,rax
   140001da4:	mov    rax,rbx
   140001da7:	mov    rbx,QWORD PTR [rsp+0x30]
   140001dac:	mov    rbp,QWORD PTR [rsp+0x38]
   140001db1:	mov    rsi,QWORD PTR [rsp+0x40]
   140001db6:	add    rsp,0x20
   140001dba:	pop    rdi
   140001dbb:	ret    
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	sub    rsp,0x28
   140001dc4:	mov    rdx,QWORD PTR [rcx]
   140001dc7:	sub    rdx,0x18
   140001dcb:	or     eax,0xffffffff
   140001dce:	lock xadd DWORD PTR [rdx+0x10],eax
   140001dd3:	add    eax,0xffffffff
   140001dd6:	test   eax,eax
   140001dd8:	jg     0x140001de3
   140001dda:	mov    rcx,QWORD PTR [rdx]
   140001ddd:	mov    rax,QWORD PTR [rcx]
   140001de0:	call   QWORD PTR [rax+0x8]
   140001de3:	add    rsp,0x28
   140001de7:	ret    
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    QWORD PTR [rsp+0x10],rbx
   140001df5:	mov    QWORD PTR [rsp+0x18],rsi
   140001dfa:	push   rdi
   140001dfb:	sub    rsp,0x20
   140001dff:	mov    rbx,QWORD PTR [rcx+0x8]
   140001e03:	mov    rsi,rdx
   140001e06:	mov    DWORD PTR [rsp+0x30],0x0
   140001e0e:	mov    rcx,QWORD PTR [rbx-0x18]
   140001e12:	mov    rax,QWORD PTR [rcx]
   140001e15:	call   QWORD PTR [rax+0x20]
   140001e18:	cmp    DWORD PTR [rbx-0x8],0x0
   140001e1c:	mov    rcx,rax
   140001e1f:	jl     0x140001e32
   140001e21:	cmp    rax,QWORD PTR [rbx-0x18]
   140001e25:	jne    0x140001e32
   140001e27:	lea    rdi,[rbx-0x18]
   140001e2b:	lock add DWORD PTR [rbx-0x8],0x1
   140001e30:	jmp    0x140001e6f
   140001e32:	mov    rax,QWORD PTR [rax]
   140001e35:	mov    edx,DWORD PTR [rbx-0x10]
   140001e38:	mov    r8d,0x2
   140001e3e:	call   QWORD PTR [rax]
   140001e40:	test   rax,rax
   140001e43:	mov    rdi,rax
   140001e46:	jne    0x140001e4e
   140001e48:	call   0x1400016f0
   140001e4d:	int3   
   140001e4e:	mov    eax,DWORD PTR [rbx-0x10]
   140001e51:	lea    rcx,[rdi+0x18]
   140001e55:	mov    r8,rbx
   140001e58:	mov    DWORD PTR [rdi+0x8],eax
   140001e5b:	mov    eax,DWORD PTR [rbx-0x10]
   140001e5e:	add    eax,0x1
   140001e61:	movsxd rdx,eax
   140001e64:	add    rdx,rdx
   140001e67:	mov    r9,rdx
   140001e6a:	call   0x140018ee0
   140001e6f:	mov    rbx,QWORD PTR [rsp+0x38]
   140001e74:	lea    rax,[rdi+0x18]
   140001e78:	mov    QWORD PTR [rsi],rax
   140001e7b:	mov    rax,rsi
   140001e7e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e83:	add    rsp,0x20
   140001e87:	pop    rdi
   140001e88:	ret    
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	int3   
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	lea    rax,[rip+0x348b9]        # 0x140036750
   140001e97:	ret    
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ea5:	push   rdi
   140001ea6:	sub    rsp,0x30
   140001eaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001eb3:	mov    QWORD PTR [rsp+0x48],rbx
   140001eb8:	mov    QWORD PTR [rsp+0x50],rsi
   140001ebd:	mov    esi,edx
   140001ebf:	mov    rbx,rcx
   140001ec2:	lea    rax,[rip+0x34b5f]        # 0x140036a28
   140001ec9:	mov    QWORD PTR [rcx+0x158],rax
   140001ed0:	mov    rdx,QWORD PTR [rcx+0x160]
   140001ed7:	sub    rdx,0x18
   140001edb:	or     edi,0xffffffff
   140001ede:	mov    eax,edi
   140001ee0:	lock xadd DWORD PTR [rdx+0x10],eax
   140001ee5:	add    eax,edi
   140001ee7:	test   eax,eax
   140001ee9:	jg     0x140001ef5
   140001eeb:	mov    rcx,QWORD PTR [rdx]
   140001eee:	mov    rax,QWORD PTR [rcx]
   140001ef1:	call   QWORD PTR [rax+0x8]
   140001ef4:	nop
   140001ef5:	mov    rdx,QWORD PTR [rbx+0x148]
   140001efc:	sub    rdx,0x18
   140001f00:	mov    eax,edi
   140001f02:	lock xadd DWORD PTR [rdx+0x10],eax
   140001f07:	add    eax,0xffffffff
   140001f0a:	test   eax,eax
   140001f0c:	jg     0x140001f17
   140001f0e:	mov    rcx,QWORD PTR [rdx]
   140001f11:	mov    rax,QWORD PTR [rcx]
   140001f14:	call   QWORD PTR [rax+0x8]
   140001f17:	mov    rdx,QWORD PTR [rbx+0x140]
   140001f1e:	sub    rdx,0x18
   140001f22:	lock xadd DWORD PTR [rdx+0x10],edi
   140001f27:	add    edi,0xffffffff
   140001f2a:	test   edi,edi
   140001f2c:	jg     0x140001f38
   140001f2e:	mov    rcx,QWORD PTR [rdx]
   140001f31:	mov    rax,QWORD PTR [rcx]
   140001f34:	call   QWORD PTR [rax+0x8]
   140001f37:	nop
   140001f38:	mov    rcx,rbx
   140001f3b:	call   0x140007dfc
   140001f40:	test   sil,0x1
   140001f44:	je     0x140001f53
   140001f46:	mov    rcx,rbx
   140001f49:	call   0x140006160
   140001f4e:	mov    rax,rbx
   140001f51:	jmp    0x140001f56
   140001f53:	mov    rax,rbx
   140001f56:	mov    rbx,QWORD PTR [rsp+0x48]
   140001f5b:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f60:	add    rsp,0x30
   140001f64:	pop    rdi
   140001f65:	ret    
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	rex push rbp
   140001f72:	sub    rsp,0x20
   140001f76:	mov    rbp,rdx
   140001f79:	mov    rcx,QWORD PTR [rbp+0x40]
   140001f7d:	call   0x140007dfc
   140001f82:	add    rsp,0x20
   140001f86:	pop    rbp
   140001f87:	ret    
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	rex push rbp
   140001f92:	sub    rsp,0x20
   140001f96:	mov    rbp,rdx
   140001f99:	mov    rcx,QWORD PTR [rbp+0x40]
   140001f9d:	add    rcx,0x140
   140001fa4:	call   0x140001190
   140001fa9:	add    rsp,0x20
   140001fad:	pop    rbp
   140001fae:	ret    
   140001faf:	int3   
   140001fb0:	rex push rbx
   140001fb2:	sub    rsp,0x20
   140001fb6:	mov    rbx,rcx
   140001fb9:	lea    rcx,[rsp+0x38]
   140001fbe:	mov    DWORD PTR [rsp+0x38],0x8
   140001fc6:	mov    DWORD PTR [rsp+0x3c],0xff
   140001fce:	call   QWORD PTR [rip+0x2f07c]        # 0x140031050
   140001fd4:	mov    rcx,rbx
   140001fd7:	call   0x1400073d0
   140001fdc:	mov    rcx,rbx
   140001fdf:	call   0x140002020
   140001fe4:	test   al,al
   140001fe6:	je     0x140002013
   140001fe8:	cmp    BYTE PTR [rbx+0x150],0x0
   140001fef:	mov    rcx,rbx
   140001ff2:	je     0x140002001
   140001ff4:	call   0x140002250
   140001ff9:	xor    eax,eax
   140001ffb:	add    rsp,0x20
   140001fff:	pop    rbx
   140002000:	ret    
   140002001:	call   0x140002b80
   140002006:	cmp    eax,0x6
   140002009:	jne    0x140002013
   14000200b:	mov    rcx,rbx
   14000200e:	call   0x1400024e0
   140002013:	xor    eax,eax
   140002015:	add    rsp,0x20
   140002019:	pop    rbx
   14000201a:	ret    
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	rex push rsi
   140002022:	push   rdi
   140002023:	push   r12
   140002025:	push   r13
   140002027:	push   r14
   140002029:	sub    rsp,0x30
   14000202d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002036:	mov    QWORD PTR [rsp+0x60],rbx
   14000203b:	mov    QWORD PTR [rsp+0x78],rbp
   140002040:	mov    rbp,rcx
   140002043:	mov    r13b,0x1
   140002046:	mov    rax,QWORD PTR [rip+0x434ab]        # 0x1400454f8
   14000204d:	mov    rbx,QWORD PTR [rax]
   140002050:	call   0x14000669c
   140002055:	mov    rcx,rax
   140002058:	xor    r14d,r14d
   14000205b:	mov    edx,r14d
   14000205e:	test   rax,rax
   140002061:	setne  dl
   140002064:	test   edx,edx
   140002066:	jne    0x140002073
   140002068:	mov    ecx,0x80004005
   14000206d:	call   0x1400015c0
   140002072:	int3   
   140002073:	mov    rax,QWORD PTR [rax]
   140002076:	call   QWORD PTR [rax+0x18]
   140002079:	lea    rsi,[rax+0x18]
   14000207d:	mov    QWORD PTR [rsp+0x68],rsi
   140002082:	or     r12,0xffffffffffffffff
   140002086:	test   rbx,rbx
   140002089:	je     0x1400020ce
   14000208b:	test   rbx,0xffffffffffff0000
   140002092:	jne    0x1400020ba
   140002094:	movzx  edi,bx
   140002097:	mov    ecx,edi
   140002099:	call   0x140006688
   14000209e:	test   rax,rax
   1400020a1:	je     0x1400020e6
   1400020a3:	mov    r8d,edi
   1400020a6:	mov    rdx,rax
   1400020a9:	lea    rcx,[rsp+0x68]
   1400020ae:	call   0x140001ba0
   1400020b3:	mov    rsi,QWORD PTR [rsp+0x68]
   1400020b8:	jmp    0x1400020e6
   1400020ba:	xor    eax,eax
   1400020bc:	mov    rcx,r12
   1400020bf:	mov    rdi,rbx
   1400020c2:	repnz scas ax,WORD PTR es:[rdi]
   1400020c5:	not    rcx
   1400020c8:	sub    rcx,0x1
   1400020cc:	jmp    0x1400020d1
   1400020ce:	mov    ecx,r14d
   1400020d1:	mov    r8d,ecx
   1400020d4:	mov    rdx,rbx
   1400020d7:	lea    rcx,[rsp+0x68]
   1400020dc:	call   0x140001840
   1400020e1:	mov    rsi,QWORD PTR [rsp+0x68]
   1400020e6:	mov    DWORD PTR [rbp+0x168],r14d
   1400020ed:	test   rsi,rsi
   1400020f0:	jne    0x1400020f7
   1400020f2:	mov    eax,r14d
   1400020f5:	jmp    0x140002109
   1400020f7:	xor    eax,eax
   1400020f9:	mov    rcx,r12
   1400020fc:	mov    rdi,rsi
   1400020ff:	repnz scas ax,WORD PTR es:[rdi]
   140002102:	not    rcx
   140002105:	lea    rax,[rcx-0x1]
   140002109:	lea    rcx,[rbp+0x160]
   140002110:	mov    r8d,eax
   140002113:	mov    rdx,rsi
   140002116:	call   0x140001840
   14000211b:	nop
   14000211c:	lea    rdx,[rsi-0x18]
   140002120:	mov    eax,r12d
   140002123:	lock xadd DWORD PTR [rdx+0x10],eax
   140002128:	add    eax,0xffffffff
   14000212b:	test   eax,eax
   14000212d:	jg     0x140002138
   14000212f:	mov    rcx,QWORD PTR [rdx]
   140002132:	mov    rax,QWORD PTR [rcx]
   140002135:	call   QWORD PTR [rax+0x8]
   140002138:	mov    esi,0x1
   14000213d:	mov    ecx,DWORD PTR [rip+0x433a5]        # 0x1400454e8
   140002143:	cmp    ecx,esi
   140002145:	jle    0x1400021a0
   140002147:	mov    edi,0x8
   14000214c:	data16 data16 xchg ax,ax
   140002150:	mov    rax,QWORD PTR [rip+0x433a1]        # 0x1400454f8
   140002157:	mov    rdx,QWORD PTR [rdi+rax*1]
   14000215b:	xor    r8b,r8b
   14000215e:	add    esi,0x1
   140002161:	cmp    esi,ecx
   140002163:	sete   r9b
   140002167:	movzx  eax,WORD PTR [rdx]
   14000216a:	cmp    ax,0x2d
   14000216e:	je     0x140002176
   140002170:	cmp    ax,0x2f
   140002174:	jne    0x14000217d
   140002176:	mov    r8b,0x1
   140002179:	add    rdx,0x2
   14000217d:	lea    rcx,[rbp+0x140]
   140002184:	call   0x1400011f0
   140002189:	test   al,al
   14000218b:	je     0x14000219d
   14000218d:	add    rdi,0x8
   140002191:	mov    ecx,DWORD PTR [rip+0x43351]        # 0x1400454e8
   140002197:	cmp    esi,ecx
   140002199:	jl     0x140002150
   14000219b:	jmp    0x1400021a0
   14000219d:	xor    r13b,r13b
   1400021a0:	lea    rcx,[rbp+0x140]
   1400021a7:	lea    rdx,[rsp+0x70]
   1400021ac:	call   0x140001df0
   1400021b1:	lea    rdi,[rip+0x34548]        # 0x140036700
   1400021b8:	mov    rsi,QWORD PTR [rax]
   1400021bb:	mov    ecx,0x1
   1400021c0:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400021c3:	sete   dil
   1400021c7:	mov    rdx,QWORD PTR [rsp+0x70]
   1400021cc:	add    rdx,0xffffffffffffffe8
   1400021d0:	lock xadd DWORD PTR [rdx+0x10],r12d
   1400021d6:	add    r12d,0xffffffff
   1400021da:	test   r12d,r12d
   1400021dd:	jg     0x1400021e8
   1400021df:	mov    rcx,QWORD PTR [rdx]
   1400021e2:	mov    rax,QWORD PTR [rcx]
   1400021e5:	call   QWORD PTR [rax+0x8]
   1400021e8:	movzx  eax,r13b
   1400021ec:	test   dil,dil
   1400021ef:	cmovne eax,r14d
   1400021f3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400021f8:	mov    rbp,QWORD PTR [rsp+0x78]
   1400021fd:	add    rsp,0x30
   140002201:	pop    r14
   140002203:	pop    r13
   140002205:	pop    r12
   140002207:	pop    rdi
   140002208:	pop    rsi
   140002209:	ret    
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	rex push rbp
   140002212:	sub    rsp,0x20
   140002216:	mov    rbp,rdx
   140002219:	lea    rcx,[rbp+0x68]
   14000221d:	call   0x140001dc0
   140002222:	add    rsp,0x20
   140002226:	pop    rbp
   140002227:	ret    
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	rex push rbp
   140002232:	sub    rsp,0x20
   140002236:	mov    rbp,rdx
   140002239:	lea    rcx,[rbp+0x68]
   14000223d:	call   0x140001dc0
   140002242:	add    rsp,0x20
   140002246:	pop    rbp
   140002247:	ret    
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	rex push rbx
   140002252:	push   rsi
   140002253:	push   rdi
   140002254:	sub    rsp,0x90
   14000225b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140002264:	mov    rsi,rcx
   140002267:	call   0x14000669c
   14000226c:	mov    rcx,rax
   14000226f:	xor    ebx,ebx
   140002271:	mov    edx,ebx
   140002273:	test   rax,rax
   140002276:	setne  dl
   140002279:	test   edx,edx
   14000227b:	jne    0x140002288
   14000227d:	mov    ecx,0x80004005
   140002282:	call   0x1400015c0
   140002287:	int3   
   140002288:	mov    rax,QWORD PTR [rax]
   14000228b:	call   QWORD PTR [rax+0x18]
   14000228e:	add    rax,0x18
   140002292:	mov    QWORD PTR [rsp+0x48],rax
   140002297:	lea    rax,[rip+0x3478a]        # 0x140036a28
   14000229e:	mov    QWORD PTR [rsp+0x40],rax
   1400022a3:	mov    DWORD PTR [rsp+0x50],ebx
   1400022a7:	lea    rcx,[rsp+0x40]
   1400022ac:	call   0x1400041b0
   1400022b1:	lea    rcx,[rsp+0xc0]
   1400022b9:	call   0x140004dc0
   1400022be:	nop
   1400022bf:	mov    rdx,QWORD PTR [rax]
   1400022c2:	lea    rcx,[rsp+0x40]
   1400022c7:	call   0x1400031e0
   1400022cc:	nop
   1400022cd:	mov    rdx,QWORD PTR [rsp+0xc0]
   1400022d5:	add    rdx,0xffffffffffffffe8
   1400022d9:	or     edi,0xffffffff
   1400022dc:	mov    eax,edi
   1400022de:	lock xadd DWORD PTR [rdx+0x10],eax
   1400022e3:	add    eax,edi
   1400022e5:	test   eax,eax
   1400022e7:	jg     0x1400022f2
   1400022e9:	mov    rcx,QWORD PTR [rdx]
   1400022ec:	mov    rax,QWORD PTR [rcx]
   1400022ef:	call   QWORD PTR [rax+0x8]
   1400022f2:	lea    rdx,[rip+0x34407]        # 0x140036700
   1400022f9:	lea    rcx,[rsp+0x40]
   1400022fe:	call   0x140003a50
   140002303:	lea    rdx,[rip+0x34456]        # 0x140036760
   14000230a:	lea    rcx,[rsp+0x40]
   14000230f:	call   0x1400031e0
   140002314:	xor    r8d,r8d
   140002317:	mov    rdx,QWORD PTR [rsp+0x48]
   14000231c:	mov    rcx,QWORD PTR [rsi+0x160]
   140002323:	call   QWORD PTR [rip+0x2f15f]        # 0x140031488
   140002329:	test   eax,eax
   14000232b:	je     0x140002432
   140002331:	call   0x14000669c
   140002336:	mov    rcx,rax
   140002339:	test   rax,rax
   14000233c:	setne  bl
   14000233f:	test   ebx,ebx
   140002341:	jne    0x14000234e
   140002343:	mov    ecx,0x80004005
   140002348:	call   0x1400015c0
   14000234d:	int3   
   14000234e:	mov    rax,QWORD PTR [rax]
   140002351:	call   QWORD PTR [rax+0x18]
   140002354:	add    rax,0x18
   140002358:	mov    QWORD PTR [rsp+0xb8],rax
   140002360:	lea    rcx,[rsi+0x140]
   140002367:	lea    rdx,[rsp+0xc8]
   14000236f:	call   0x140001df0
   140002374:	nop
   140002375:	mov    r8,QWORD PTR [rax]
   140002378:	lea    rdx,[rip+0x343f9]        # 0x140036778
   14000237f:	lea    rcx,[rsp+0xb8]
   140002387:	call   0x140002e70
   14000238c:	nop
   14000238d:	mov    rdx,QWORD PTR [rsp+0xc8]
   140002395:	add    rdx,0xffffffffffffffe8
   140002399:	mov    eax,edi
   14000239b:	lock xadd DWORD PTR [rdx+0x10],eax
   1400023a0:	add    eax,0xffffffff
   1400023a3:	test   eax,eax
   1400023a5:	jg     0x1400023b0
   1400023a7:	mov    rcx,QWORD PTR [rdx]
   1400023aa:	mov    rax,QWORD PTR [rcx]
   1400023ad:	call   QWORD PTR [rax+0x8]
   1400023b0:	lea    rdx,[rsp+0x30]
   1400023b5:	lea    rcx,[rsp+0x40]
   1400023ba:	call   0x140003740
   1400023bf:	mov    rbx,QWORD PTR [rax]
   1400023c2:	call   QWORD PTR [rip+0x2f410]        # 0x1400317d8
   1400023c8:	mov    rcx,rax
   1400023cb:	mov    DWORD PTR [rsp+0x28],0x1
   1400023d3:	mov    QWORD PTR [rsp+0x20],rbx
   1400023d8:	mov    r9,QWORD PTR [rsp+0xb8]
   1400023e0:	mov    r8,QWORD PTR [rsp+0x48]
   1400023e5:	xor    edx,edx
   1400023e7:	call   QWORD PTR [rip+0x2f10b]        # 0x1400314f8
   1400023ed:	mov    rdx,QWORD PTR [rsp+0x30]
   1400023f2:	add    rdx,0xffffffffffffffe8
   1400023f6:	mov    eax,edi
   1400023f8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400023fd:	add    eax,0xffffffff
   140002400:	test   eax,eax
   140002402:	jg     0x14000240e
   140002404:	mov    rcx,QWORD PTR [rdx]
   140002407:	mov    rax,QWORD PTR [rcx]
   14000240a:	call   QWORD PTR [rax+0x8]
   14000240d:	nop
   14000240e:	mov    rdx,QWORD PTR [rsp+0xb8]
   140002416:	add    rdx,0xffffffffffffffe8
   14000241a:	mov    eax,edi
   14000241c:	lock xadd DWORD PTR [rdx+0x10],eax
   140002421:	add    eax,0xffffffff
   140002424:	test   eax,eax
   140002426:	jg     0x140002432
   140002428:	mov    rcx,QWORD PTR [rdx]
   14000242b:	mov    rax,QWORD PTR [rcx]
   14000242e:	call   QWORD PTR [rax+0x8]
   140002431:	nop
   140002432:	mov    rdx,QWORD PTR [rsp+0x48]
   140002437:	add    rdx,0xffffffffffffffe8
   14000243b:	lock xadd DWORD PTR [rdx+0x10],edi
   140002440:	add    edi,0xffffffff
   140002443:	test   edi,edi
   140002445:	jg     0x140002450
   140002447:	mov    rcx,QWORD PTR [rdx]
   14000244a:	mov    rax,QWORD PTR [rcx]
   14000244d:	call   QWORD PTR [rax+0x8]
   140002450:	add    rsp,0x90
   140002457:	pop    rdi
   140002458:	pop    rsi
   140002459:	pop    rbx
   14000245a:	ret    
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	rex push rbp
   140002462:	sub    rsp,0x20
   140002466:	mov    rbp,rdx
   140002469:	lea    rcx,[rbp+0x40]
   14000246d:	call   0x140002fb0
   140002472:	add    rsp,0x20
   140002476:	pop    rbp
   140002477:	ret    
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	rex push rbp
   140002482:	sub    rsp,0x20
   140002486:	mov    rbp,rdx
   140002489:	lea    rcx,[rbp+0xc0]
   140002490:	call   0x140001dc0
   140002495:	add    rsp,0x20
   140002499:	pop    rbp
   14000249a:	ret    
   14000249b:	int3   
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	rex push rbp
   1400024a2:	sub    rsp,0x20
   1400024a6:	mov    rbp,rdx
   1400024a9:	lea    rcx,[rbp+0xb8]
   1400024b0:	call   0x140001dc0
   1400024b5:	add    rsp,0x20
   1400024b9:	pop    rbp
   1400024ba:	ret    
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	rex push rbp
   1400024c2:	sub    rsp,0x20
   1400024c6:	mov    rbp,rdx
   1400024c9:	lea    rcx,[rbp+0xc8]
   1400024d0:	call   0x140001dc0
   1400024d5:	add    rsp,0x20
   1400024d9:	pop    rbp
   1400024da:	ret    
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	rex push rbp
   1400024e2:	push   rsi
   1400024e3:	push   rdi
   1400024e4:	push   r12
   1400024e6:	push   r13
   1400024e8:	sub    rsp,0xa0
   1400024ef:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   1400024fb:	mov    QWORD PTR [rsp+0xd0],rbx
   140002503:	mov    r12,rcx
   140002506:	call   0x14000669c
   14000250b:	mov    rcx,rax
   14000250e:	xor    r13d,r13d
   140002511:	mov    edx,r13d
   140002514:	test   rax,rax
   140002517:	setne  dl
   14000251a:	test   edx,edx
   14000251c:	jne    0x140002529
   14000251e:	mov    ecx,0x80004005
   140002523:	call   0x1400015c0
   140002528:	int3   
   140002529:	mov    rax,QWORD PTR [rax]
   14000252c:	call   QWORD PTR [rax+0x18]
   14000252f:	add    rax,0x18
   140002533:	mov    QWORD PTR [rsp+0xe0],rax
   14000253b:	lea    rcx,[r12+0x140]
   140002543:	lea    rdx,[rsp+0x50]
   140002548:	call   0x140001df0
   14000254d:	nop
   14000254e:	mov    r9,QWORD PTR [rax]
   140002551:	lea    r8,[rip+0x34248]        # 0x1400367a0
   140002558:	lea    rdx,[rip+0x342b1]        # 0x140036810
   14000255f:	lea    rcx,[rsp+0xe0]
   140002567:	call   0x140002e70
   14000256c:	nop
   14000256d:	mov    rdx,QWORD PTR [rsp+0x50]
   140002572:	add    rdx,0xffffffffffffffe8
   140002576:	or     rbx,0xffffffffffffffff
   14000257a:	mov    eax,ebx
   14000257c:	lock xadd DWORD PTR [rdx+0x10],eax
   140002581:	add    eax,ebx
   140002583:	test   eax,eax
   140002585:	jg     0x140002590
   140002587:	mov    rcx,QWORD PTR [rdx]
   14000258a:	mov    rax,QWORD PTR [rcx]
   14000258d:	call   QWORD PTR [rax+0x8]
   140002590:	call   0x14000669c
   140002595:	mov    rdx,rax
   140002598:	mov    ecx,r13d
   14000259b:	test   rax,rax
   14000259e:	setne  cl
   1400025a1:	test   ecx,ecx
   1400025a3:	jne    0x1400025b0
   1400025a5:	mov    ecx,0x80004005
   1400025aa:	call   0x1400015c0
   1400025af:	int3   
   1400025b0:	mov    rax,QWORD PTR [rax]
   1400025b3:	mov    rcx,rdx
   1400025b6:	call   QWORD PTR [rax+0x18]
   1400025b9:	lea    r10,[rax+0x18]
   1400025bd:	mov    QWORD PTR [rsp+0x30],r10
   1400025c2:	mov    QWORD PTR [rsp+0x38],r13
   1400025c7:	mov    DWORD PTR [rsp+0x40],r13d
   1400025cc:	xor    eax,eax
   1400025ce:	mov    rcx,rbx
   1400025d1:	lea    rdi,[rip+0x34128]        # 0x140036700
   1400025d8:	repnz scas ax,WORD PTR es:[rdi]
   1400025db:	not    rcx
   1400025de:	sub    rcx,0x1
   1400025e2:	mov    rdi,rcx
   1400025e5:	test   ecx,ecx
   1400025e7:	jne    0x140002650
   1400025e9:	lea    rdx,[r10-0x18]
   1400025ed:	mov    rdi,QWORD PTR [rdx]
   1400025f0:	cmp    DWORD PTR [rdx+0x8],eax
   1400025f3:	je     0x1400026e5
   1400025f9:	cmp    DWORD PTR [rdx+0x10],eax
   1400025fc:	jge    0x140002622
   1400025fe:	cmp    DWORD PTR [r10-0xc],eax
   140002602:	jge    0x14000260f
   140002604:	mov    ecx,0x80070057
   140002609:	call   0x1400015c0
   14000260e:	int3   
   14000260f:	mov    DWORD PTR [r10-0x10],r13d
   140002613:	mov    rax,QWORD PTR [rsp+0x30]
   140002618:	mov    WORD PTR [rax],0x0
   14000261d:	jmp    0x1400026e5
   140002622:	mov    eax,ebx
   140002624:	lock xadd DWORD PTR [rdx+0x10],eax
   140002629:	add    eax,0xffffffff
   14000262c:	test   eax,eax
   14000262e:	jg     0x140002639
   140002630:	mov    rcx,QWORD PTR [rdx]
   140002633:	mov    rax,QWORD PTR [rcx]
   140002636:	call   QWORD PTR [rax+0x8]
   140002639:	mov    rax,QWORD PTR [rdi]
   14000263c:	mov    rcx,rdi
   14000263f:	call   QWORD PTR [rax+0x18]
   140002642:	add    rax,0x18
   140002646:	mov    QWORD PTR [rsp+0x30],rax
   14000264b:	jmp    0x1400026e5
   140002650:	mov    esi,DWORD PTR [r10-0x10]
   140002654:	lea    rbp,[rip+0x340a5]        # 0x140036700
   14000265b:	sub    rbp,r10
   14000265e:	sar    rbp,1
   140002661:	mov    ecx,0x1
   140002666:	sub    ecx,DWORD PTR [r10-0x8]
   14000266a:	mov    eax,DWORD PTR [r10-0xc]
   14000266e:	sub    eax,edi
   140002670:	or     eax,ecx
   140002672:	jge    0x140002685
   140002674:	mov    edx,edi
   140002676:	lea    rcx,[rsp+0x30]
   14000267b:	call   0x1400015e0
   140002680:	mov    r10,QWORD PTR [rsp+0x30]
   140002685:	cmp    rbp,rsi
   140002688:	ja     0x1400026a5
   14000268a:	movsxd rax,edi
   14000268d:	lea    rsi,[rax+rax*1]
   140002691:	lea    r8,[r10+rbp*2]
   140002695:	mov    r9,rsi
   140002698:	mov    rdx,rsi
   14000269b:	mov    rcx,r10
   14000269e:	call   0x140018fb0
   1400026a3:	jmp    0x1400026c1
   1400026a5:	movsxd rax,edi
   1400026a8:	lea    rsi,[rax+rax*1]
   1400026ac:	mov    r9,rsi
   1400026af:	lea    r8,[rip+0x3404a]        # 0x140036700
   1400026b6:	mov    rdx,rsi
   1400026b9:	mov    rcx,r10
   1400026bc:	call   0x140018ee0
   1400026c1:	test   edi,edi
   1400026c3:	js     0x140002a5d
   1400026c9:	mov    rax,QWORD PTR [rsp+0x30]
   1400026ce:	cmp    edi,DWORD PTR [rax-0xc]
   1400026d1:	jg     0x140002a5d
   1400026d7:	mov    DWORD PTR [rax-0x10],edi
   1400026da:	mov    rax,QWORD PTR [rsp+0x30]
   1400026df:	mov    WORD PTR [rsi+rax*1],0x0
   1400026e5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400026ea:	test   rcx,rcx
   1400026ed:	je     0x1400026f5
   1400026ef:	call   QWORD PTR [rip+0x2e92b]        # 0x140031020
   1400026f5:	mov    QWORD PTR [rsp+0x38],r13
   1400026fa:	mov    DWORD PTR [rsp+0x40],r13d
   1400026ff:	mov    rdx,QWORD PTR [rsp+0xe0]
   140002707:	lea    rcx,[rsp+0x30]
   14000270c:	call   0x1400054b0
   140002711:	lea    rcx,[rsp+0x38]
   140002716:	mov    QWORD PTR [rsp+0x20],rcx
   14000271b:	mov    r9d,0x20019
   140002721:	xor    r8d,r8d
   140002724:	mov    rdx,QWORD PTR [rsp+0x30]
   140002729:	mov    rcx,rax
   14000272c:	call   QWORD PTR [rip+0x2e8ce]        # 0x140031000
   140002732:	mov    DWORD PTR [rsp+0x40],eax
   140002736:	test   eax,eax
   140002738:	je     0x14000279f
   14000273a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000273f:	test   rcx,rcx
   140002742:	je     0x14000274a
   140002744:	call   QWORD PTR [rip+0x2e8d6]        # 0x140031020
   14000274a:	mov    QWORD PTR [rsp+0x38],r13
   14000274f:	mov    DWORD PTR [rsp+0x40],r13d
   140002754:	mov    rdx,QWORD PTR [rsp+0x30]
   140002759:	add    rdx,0xffffffffffffffe8
   14000275d:	mov    eax,ebx
   14000275f:	lock xadd DWORD PTR [rdx+0x10],eax
   140002764:	add    eax,0xffffffff
   140002767:	test   eax,eax
   140002769:	jg     0x140002775
   14000276b:	mov    rcx,QWORD PTR [rdx]
   14000276e:	mov    rax,QWORD PTR [rcx]
   140002771:	call   QWORD PTR [rax+0x8]
   140002774:	nop
   140002775:	mov    rdx,QWORD PTR [rsp+0xe0]
   14000277d:	add    rdx,0xffffffffffffffe8
   140002781:	lock xadd DWORD PTR [rdx+0x10],ebx
   140002786:	add    ebx,0xffffffff
   140002789:	test   ebx,ebx
   14000278b:	jg     0x140002a68
   140002791:	mov    rcx,QWORD PTR [rdx]
   140002794:	mov    rax,QWORD PTR [rcx]
   140002797:	call   QWORD PTR [rax+0x8]
   14000279a:	jmp    0x140002a68
   14000279f:	lea    r8,[rip+0x3407a]        # 0x140036820
   1400027a6:	lea    rdx,[rsp+0xe8]
   1400027ae:	lea    rcx,[rsp+0x30]
   1400027b3:	call   0x140005010
   1400027b8:	nop
   1400027b9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400027be:	test   rcx,rcx
   1400027c1:	je     0x1400027c9
   1400027c3:	call   QWORD PTR [rip+0x2e857]        # 0x140031020
   1400027c9:	mov    QWORD PTR [rsp+0x38],r13
   1400027ce:	mov    DWORD PTR [rsp+0x40],r13d
   1400027d3:	lea    rcx,[rsp+0x60]
   1400027d8:	call   0x140008e48
   1400027dd:	nop
   1400027de:	lea    rax,[rsp+0xd8]
   1400027e6:	mov    QWORD PTR [rsp+0x90],rax
   1400027ee:	call   0x14000669c
   1400027f3:	mov    rdx,rax
   1400027f6:	mov    ecx,r13d
   1400027f9:	test   rax,rax
   1400027fc:	setne  cl
   1400027ff:	test   ecx,ecx
   140002801:	jne    0x14000280e
   140002803:	mov    ecx,0x80004005
   140002808:	call   0x1400015c0
   14000280d:	int3   
   14000280e:	mov    rax,QWORD PTR [rax]
   140002811:	mov    rcx,rdx
   140002814:	call   QWORD PTR [rax+0x18]
   140002817:	add    rax,0x18
   14000281b:	mov    QWORD PTR [rsp+0xd8],rax
   140002823:	lea    rdx,[rip+0x34012]        # 0x14003683c
   14000282a:	test   rdx,0xffffffffffff0000
   140002831:	jne    0x140002857
   140002833:	movzx  edi,dx
   140002836:	mov    ecx,edi
   140002838:	call   0x140006688
   14000283d:	test   rax,rax
   140002840:	je     0x140002877
   140002842:	mov    r8d,edi
   140002845:	mov    rdx,rax
   140002848:	lea    rcx,[rsp+0xd8]
   140002850:	call   0x140001ba0
   140002855:	jmp    0x140002877
   140002857:	xor    eax,eax
   140002859:	mov    rcx,rbx
   14000285c:	mov    rdi,rdx
   14000285f:	repnz scas ax,WORD PTR es:[rdi]
   140002862:	not    rcx
   140002865:	lea    r8d,[rcx-0x1]
   140002869:	lea    rcx,[rsp+0xd8]
   140002871:	call   0x140001840
   140002876:	nop
   140002877:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000287f:	mov    rcx,QWORD PTR [rdi-0x18]
   140002883:	mov    rax,QWORD PTR [rcx]
   140002886:	call   QWORD PTR [rax+0x20]
   140002889:	mov    rcx,rax
   14000288c:	cmp    DWORD PTR [rdi-0x8],0x0
   140002890:	jl     0x1400028a3
   140002892:	cmp    rax,QWORD PTR [rdi-0x18]
   140002896:	jne    0x1400028a3
   140002898:	lea    rsi,[rdi-0x18]
   14000289c:	lock add DWORD PTR [rdi-0x8],0x1
   1400028a1:	jmp    0x1400028e1
   1400028a3:	mov    rax,QWORD PTR [rax]
   1400028a6:	mov    r8d,0x2
   1400028ac:	mov    edx,DWORD PTR [rdi-0x10]
   1400028af:	call   QWORD PTR [rax]
   1400028b1:	mov    rsi,rax
   1400028b4:	test   rax,rax
   1400028b7:	jne    0x1400028bf
   1400028b9:	call   0x1400016f0
   1400028be:	int3   
   1400028bf:	mov    eax,DWORD PTR [rdi-0x10]
   1400028c2:	mov    DWORD PTR [rsi+0x8],eax
   1400028c5:	mov    eax,DWORD PTR [rdi-0x10]
   1400028c8:	add    eax,0x1
   1400028cb:	movsxd rdx,eax
   1400028ce:	lea    r9,[rdx+rdx*1]
   1400028d2:	mov    r8,rdi
   1400028d5:	add    rdx,rdx
   1400028d8:	lea    rcx,[rsi+0x18]
   1400028dc:	call   0x140018ee0
   1400028e1:	lea    rax,[rsi+0x18]
   1400028e5:	mov    QWORD PTR [rsp+0x58],rax
   1400028ea:	lea    r8,[rsp+0x60]
   1400028ef:	lea    rdx,[rsp+0xd8]
   1400028f7:	lea    rcx,[rsp+0x58]
   1400028fc:	call   0x140005bb0
   140002901:	test   al,al
   140002903:	je     0x1400029d0
   140002909:	mov    BYTE PTR [r12+0x1a0],0x1
   140002912:	mov    esi,r13d
   140002915:	mov    rdi,r13
   140002918:	mov    rdx,QWORD PTR [rsp+0x70]
   14000291d:	lea    rax,[rdx-0x1]
   140002921:	test   rax,rax
   140002924:	js     0x1400029d0
   14000292a:	data16 xchg ax,ax
   14000292d:	data16 xchg ax,ax
   140002930:	test   rdi,rdi
   140002933:	js     0x1400029ca
   140002939:	cmp    rdi,rdx
   14000293c:	jge    0x1400029ca
   140002942:	mov    rax,QWORD PTR [rsp+0x68]
   140002947:	mov    rbp,QWORD PTR [rax+rdi*8]
   14000294b:	mov    rcx,rbp
   14000294e:	call   0x14002fe8c
   140002953:	cmp    eax,0x5
   140002956:	je     0x14000295d
   140002958:	cmp    eax,0x2
   14000295b:	jne    0x1400029ac
   14000295d:	call   QWORD PTR [rip+0x2ee75]        # 0x1400317d8
   140002963:	mov    QWORD PTR [rsp+0x48],rax
   140002968:	mov    ecx,0x23
   14000296d:	cmp    BYTE PTR [r12+0x1a0],0x0
   140002976:	je     0x140002986
   140002978:	mov    ecx,0x3
   14000297d:	mov    BYTE PTR [r12+0x1a0],0x0
   140002986:	lea    rdx,[rsp+0x48]
   14000298b:	call   0x14002fe80
   140002990:	lea    r9,[rip+0x33ea9]        # 0x140036840
   140002997:	xor    edx,edx
   140002999:	lea    r8d,[rdx+0x2]
   14000299d:	mov    rcx,rbp
   1400029a0:	call   0x14002fe86
   1400029a5:	cmp    eax,0x642
   1400029aa:	je     0x1400029d0
   1400029ac:	add    esi,0x1
   1400029af:	add    rdi,0x1
   1400029b3:	mov    rdx,QWORD PTR [rsp+0x70]
   1400029b8:	lea    rcx,[rdx-0x1]
   1400029bc:	movsxd rax,esi
   1400029bf:	cmp    rax,rcx
   1400029c2:	jle    0x140002930
   1400029c8:	jmp    0x1400029d0
   1400029ca:	call   0x140006408
   1400029cf:	nop
   1400029d0:	lea    rcx,[rsp+0x60]
   1400029d5:	call   0x140009110
   1400029da:	nop
   1400029db:	mov    rdx,QWORD PTR [rsp+0xe8]
   1400029e3:	add    rdx,0xffffffffffffffe8
   1400029e7:	mov    eax,ebx
   1400029e9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400029ee:	add    eax,0xffffffff
   1400029f1:	test   eax,eax
   1400029f3:	jg     0x1400029ff
   1400029f5:	mov    rcx,QWORD PTR [rdx]
   1400029f8:	mov    rax,QWORD PTR [rcx]
   1400029fb:	call   QWORD PTR [rax+0x8]
   1400029fe:	nop
   1400029ff:	mov    rcx,QWORD PTR [rsp+0x38]
   140002a04:	test   rcx,rcx
   140002a07:	je     0x140002a0f
   140002a09:	call   QWORD PTR [rip+0x2e611]        # 0x140031020
   140002a0f:	mov    QWORD PTR [rsp+0x38],r13
   140002a14:	mov    DWORD PTR [rsp+0x40],r13d
   140002a19:	mov    rdx,QWORD PTR [rsp+0x30]
   140002a1e:	add    rdx,0xffffffffffffffe8
   140002a22:	mov    eax,ebx
   140002a24:	lock xadd DWORD PTR [rdx+0x10],eax
   140002a29:	add    eax,0xffffffff
   140002a2c:	test   eax,eax
   140002a2e:	jg     0x140002a3a
   140002a30:	mov    rcx,QWORD PTR [rdx]
   140002a33:	mov    rax,QWORD PTR [rcx]
   140002a36:	call   QWORD PTR [rax+0x8]
   140002a39:	nop
   140002a3a:	mov    rdx,QWORD PTR [rsp+0xe0]
   140002a42:	add    rdx,0xffffffffffffffe8
   140002a46:	lock xadd DWORD PTR [rdx+0x10],ebx
   140002a4b:	add    ebx,0xffffffff
   140002a4e:	test   ebx,ebx
   140002a50:	jg     0x140002a68
   140002a52:	mov    rcx,QWORD PTR [rdx]
   140002a55:	mov    rax,QWORD PTR [rcx]
   140002a58:	call   QWORD PTR [rax+0x8]
   140002a5b:	jmp    0x140002a68
   140002a5d:	mov    ecx,0x80070057
   140002a62:	call   0x1400015c0
   140002a67:	nop
   140002a68:	mov    rbx,QWORD PTR [rsp+0xd0]
   140002a70:	add    rsp,0xa0
   140002a77:	pop    r13
   140002a79:	pop    r12
   140002a7b:	pop    rdi
   140002a7c:	pop    rsi
   140002a7d:	pop    rbp
   140002a7e:	ret    
   140002a7f:	int3   
   140002a80:	rex push rbp
   140002a82:	sub    rsp,0x20
   140002a86:	mov    rbp,rdx
   140002a89:	lea    rcx,[rbp+0xe0]
   140002a90:	call   0x140001dc0
   140002a95:	add    rsp,0x20
   140002a99:	pop    rbp
   140002a9a:	ret    
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	rex push rbp
   140002aa2:	sub    rsp,0x20
   140002aa6:	mov    rbp,rdx
   140002aa9:	lea    rcx,[rbp+0x50]
   140002aad:	call   0x140001dc0
   140002ab2:	add    rsp,0x20
   140002ab6:	pop    rbp
   140002ab7:	ret    
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	rex push rbp
   140002ac2:	sub    rsp,0x20
   140002ac6:	mov    rbp,rdx
   140002ac9:	lea    rcx,[rbp+0x30]
   140002acd:	call   0x140001dc0
   140002ad2:	add    rsp,0x20
   140002ad6:	pop    rbp
   140002ad7:	ret    
   140002ad8:	int3   
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	rex push rbp
   140002ae2:	sub    rsp,0x20
   140002ae6:	mov    rbp,rdx
   140002ae9:	lea    rcx,[rbp+0x30]
   140002aed:	call   0x140004fc0
   140002af2:	add    rsp,0x20
   140002af6:	pop    rbp
   140002af7:	ret    
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	rex push rbp
   140002b02:	sub    rsp,0x20
   140002b06:	mov    rbp,rdx
   140002b09:	lea    rcx,[rbp+0xe8]
   140002b10:	call   0x140001dc0
   140002b15:	add    rsp,0x20
   140002b19:	pop    rbp
   140002b1a:	ret    
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	rex push rbp
   140002b22:	sub    rsp,0x20
   140002b26:	mov    rbp,rdx
   140002b29:	lea    rcx,[rbp+0x60]
   140002b2d:	call   0x140009110
   140002b32:	add    rsp,0x20
   140002b36:	pop    rbp
   140002b37:	ret    
   140002b38:	int3   
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	rex push rbp
   140002b42:	sub    rsp,0x20
   140002b46:	mov    rbp,rdx
   140002b49:	mov    rcx,QWORD PTR [rbp+0x90]
   140002b50:	call   0x140001dc0
   140002b55:	add    rsp,0x20
   140002b59:	pop    rbp
   140002b5a:	ret    
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	rex push rbp
   140002b62:	sub    rsp,0x20
   140002b66:	mov    rbp,rdx
   140002b69:	mov    rcx,QWORD PTR [rbp+0x90]
   140002b70:	call   0x140001dc0
   140002b75:	add    rsp,0x20
   140002b79:	pop    rbp
   140002b7a:	ret    
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	rex push rbp
   140002b82:	push   rsi
   140002b83:	push   rdi
   140002b84:	push   r12
   140002b86:	push   r13
   140002b88:	sub    rsp,0x30
   140002b8c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b95:	mov    QWORD PTR [rsp+0x60],rbx
   140002b9a:	call   0x14000669c
   140002b9f:	mov    rdx,rax
   140002ba2:	xor    ecx,ecx
   140002ba4:	test   rax,rax
   140002ba7:	setne  cl
   140002baa:	test   ecx,ecx
   140002bac:	jne    0x140002bb9
   140002bae:	mov    ecx,0x80004005
   140002bb3:	call   0x1400015c0
   140002bb8:	int3   
   140002bb9:	mov    rax,QWORD PTR [rax]
   140002bbc:	mov    rcx,rdx
   140002bbf:	call   QWORD PTR [rax+0x18]
   140002bc2:	add    rax,0x18
   140002bc6:	mov    QWORD PTR [rsp+0x70],rax
   140002bcb:	call   0x14000669c
   140002bd0:	mov    rdx,rax
   140002bd3:	xor    ecx,ecx
   140002bd5:	test   rax,rax
   140002bd8:	setne  cl
   140002bdb:	test   ecx,ecx
   140002bdd:	jne    0x140002bea
   140002bdf:	mov    ecx,0x80004005
   140002be4:	call   0x1400015c0
   140002be9:	int3   
   140002bea:	mov    rax,QWORD PTR [rax]
   140002bed:	mov    rcx,rdx
   140002bf0:	call   QWORD PTR [rax+0x18]
   140002bf3:	lea    rbx,[rax+0x18]
   140002bf7:	mov    QWORD PTR [rsp+0x68],rbx
   140002bfc:	lea    r13,[rip+0x33afd]        # 0x140036700
   140002c03:	or     rsi,0xffffffffffffffff
   140002c07:	test   r13,0xffffffffffff0000
   140002c0e:	jne    0x140002c3e
   140002c10:	movzx  edi,r13w
   140002c14:	mov    ecx,edi
   140002c16:	call   0x140006688
   140002c1b:	test   rax,rax
   140002c1e:	je     0x140002d35
   140002c24:	mov    r8d,edi
   140002c27:	mov    rdx,rax
   140002c2a:	lea    rcx,[rsp+0x68]
   140002c2f:	call   0x140001ba0
   140002c34:	mov    rbx,QWORD PTR [rsp+0x68]
   140002c39:	jmp    0x140002d35
   140002c3e:	xor    eax,eax
   140002c40:	mov    rcx,rsi
   140002c43:	mov    rdi,r13
   140002c46:	repnz scas ax,WORD PTR es:[rdi]
   140002c49:	not    rcx
   140002c4c:	sub    rcx,0x1
   140002c50:	mov    rdi,rcx
   140002c53:	test   ecx,ecx
   140002c55:	jne    0x140002cb5
   140002c57:	lea    rdx,[rbx-0x18]
   140002c5b:	mov    rdi,QWORD PTR [rdx]
   140002c5e:	cmp    DWORD PTR [rdx+0x8],eax
   140002c61:	je     0x140002d35
   140002c67:	cmp    DWORD PTR [rdx+0x10],eax
   140002c6a:	jge    0x140002c87
   140002c6c:	cmp    DWORD PTR [rbx-0xc],eax
   140002c6f:	jge    0x140002c7c
   140002c71:	mov    ecx,0x80070057
   140002c76:	call   0x1400015c0
   140002c7b:	int3   
   140002c7c:	mov    DWORD PTR [rbx-0x10],eax
   140002c7f:	mov    WORD PTR [rbx],ax
   140002c82:	jmp    0x140002d35
   140002c87:	mov    eax,esi
   140002c89:	lock xadd DWORD PTR [rdx+0x10],eax
   140002c8e:	add    eax,0xffffffff
   140002c91:	test   eax,eax
   140002c93:	jg     0x140002c9e
   140002c95:	mov    rcx,QWORD PTR [rdx]
   140002c98:	mov    rax,QWORD PTR [rcx]
   140002c9b:	call   QWORD PTR [rax+0x8]
   140002c9e:	mov    rax,QWORD PTR [rdi]
   140002ca1:	mov    rcx,rdi
   140002ca4:	call   QWORD PTR [rax+0x18]
   140002ca7:	lea    rbx,[rax+0x18]
   140002cab:	mov    QWORD PTR [rsp+0x68],rbx
   140002cb0:	jmp    0x140002d35
   140002cb5:	mov    ebp,DWORD PTR [rbx-0x10]
   140002cb8:	mov    r12,r13
   140002cbb:	sub    r12,rbx
   140002cbe:	sar    r12,1
   140002cc1:	mov    ecx,0x1
   140002cc6:	sub    ecx,DWORD PTR [rbx-0x8]
   140002cc9:	mov    eax,DWORD PTR [rbx-0xc]
   140002ccc:	sub    eax,edi
   140002cce:	or     eax,ecx
   140002cd0:	jge    0x140002ce3
   140002cd2:	mov    edx,edi
   140002cd4:	lea    rcx,[rsp+0x68]
   140002cd9:	call   0x1400015e0
   140002cde:	mov    rbx,QWORD PTR [rsp+0x68]
   140002ce3:	cmp    r12,rbp
   140002ce6:	ja     0x140002d03
   140002ce8:	movsxd rax,edi
   140002ceb:	lea    rbp,[rax+rax*1]
   140002cef:	lea    r8,[rbx+r12*2]
   140002cf3:	mov    r9,rbp
   140002cf6:	mov    rdx,rbp
   140002cf9:	mov    rcx,rbx
   140002cfc:	call   0x140018fb0
   140002d01:	jmp    0x140002d1b
   140002d03:	movsxd rax,edi
   140002d06:	lea    rbp,[rax+rax*1]
   140002d0a:	mov    r9,rbp
   140002d0d:	mov    r8,r13
   140002d10:	mov    rdx,rbp
   140002d13:	mov    rcx,rbx
   140002d16:	call   0x140018ee0
   140002d1b:	test   edi,edi
   140002d1d:	js     0x140002ddb
   140002d23:	cmp    edi,DWORD PTR [rbx-0xc]
   140002d26:	jg     0x140002ddb
   140002d2c:	mov    DWORD PTR [rbx-0x10],edi
   140002d2f:	mov    WORD PTR [rbx+rbp*1],0x0
   140002d35:	mov    ecx,0x81
   140002d3a:	call   0x140006688
   140002d3f:	test   rax,rax
   140002d42:	je     0x140002d57
   140002d44:	mov    r8d,0x81
   140002d4a:	mov    rdx,rax
   140002d4d:	lea    rcx,[rsp+0x70]
   140002d52:	call   0x140001ba0
   140002d57:	mov    ecx,0x82
   140002d5c:	call   0x140006688
   140002d61:	test   rax,rax
   140002d64:	je     0x140002d7e
   140002d66:	mov    r8d,0x82
   140002d6c:	mov    rdx,rax
   140002d6f:	lea    rcx,[rsp+0x68]
   140002d74:	call   0x140001ba0
   140002d79:	mov    rbx,QWORD PTR [rsp+0x68]
   140002d7e:	call   QWORD PTR [rip+0x2ea54]        # 0x1400317d8
   140002d84:	mov    rcx,rax
   140002d87:	mov    r9d,0x24
   140002d8d:	mov    r8,QWORD PTR [rsp+0x70]
   140002d92:	mov    rdx,rbx
   140002d95:	call   QWORD PTR [rip+0x2ea35]        # 0x1400317d0
   140002d9b:	mov    edi,eax
   140002d9d:	lea    rdx,[rbx-0x18]
   140002da1:	mov    ecx,esi
   140002da3:	lock xadd DWORD PTR [rdx+0x10],ecx
   140002da8:	add    ecx,0xffffffff
   140002dab:	test   ecx,ecx
   140002dad:	jg     0x140002db9
   140002daf:	mov    rcx,QWORD PTR [rdx]
   140002db2:	mov    rax,QWORD PTR [rcx]
   140002db5:	call   QWORD PTR [rax+0x8]
   140002db8:	nop
   140002db9:	mov    rdx,QWORD PTR [rsp+0x70]
   140002dbe:	add    rdx,0xffffffffffffffe8
   140002dc2:	lock xadd DWORD PTR [rdx+0x10],esi
   140002dc7:	add    esi,0xffffffff
   140002dca:	test   esi,esi
   140002dcc:	jg     0x140002dd7
   140002dce:	mov    rcx,QWORD PTR [rdx]
   140002dd1:	mov    rax,QWORD PTR [rcx]
   140002dd4:	call   QWORD PTR [rax+0x8]
   140002dd7:	mov    eax,edi
   140002dd9:	jmp    0x140002de6
   140002ddb:	mov    ecx,0x80070057
   140002de0:	call   0x1400015c0
   140002de5:	nop
   140002de6:	mov    rbx,QWORD PTR [rsp+0x60]
   140002deb:	add    rsp,0x30
   140002def:	pop    r13
   140002df1:	pop    r12
   140002df3:	pop    rdi
   140002df4:	pop    rsi
   140002df5:	pop    rbp
   140002df6:	ret    
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	rex push rbp
   140002e02:	sub    rsp,0x20
   140002e06:	mov    rbp,rdx
   140002e09:	lea    rcx,[rbp+0x70]
   140002e0d:	call   0x140001dc0
   140002e12:	add    rsp,0x20
   140002e16:	pop    rbp
   140002e17:	ret    
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	rex push rbp
   140002e22:	sub    rsp,0x20
   140002e26:	mov    rbp,rdx
   140002e29:	lea    rcx,[rbp+0x68]
   140002e2d:	call   0x140001dc0
   140002e32:	add    rsp,0x20
   140002e36:	pop    rbp
   140002e37:	ret    
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	rex push rbp
   140002e42:	sub    rsp,0x20
   140002e46:	mov    rbp,rdx
   140002e49:	lea    rcx,[rbp+0x68]
   140002e4d:	call   0x140001dc0
   140002e52:	add    rsp,0x20
   140002e56:	pop    rbp
   140002e57:	ret    
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	ret    0x0
   140002e63:	int3   
   140002e64:	int3   
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	mov    QWORD PTR [rsp+0x10],rdx
   140002e75:	mov    QWORD PTR [rsp+0x18],r8
   140002e7a:	mov    QWORD PTR [rsp+0x20],r9
   140002e7f:	push   rbp
   140002e80:	push   rsi
   140002e81:	push   rdi
   140002e82:	sub    rsp,0x30
   140002e86:	test   rdx,rdx
   140002e89:	mov    rsi,rdx
   140002e8c:	mov    rdi,rcx
   140002e8f:	lea    rbp,[rsp+0x60]
   140002e94:	jne    0x140002ea1
   140002e96:	mov    ecx,0x80070057
   140002e9b:	call   0x1400015c0
   140002ea0:	int3   
   140002ea1:	mov    rdx,rbp
   140002ea4:	mov    rcx,rsi
   140002ea7:	mov    QWORD PTR [rsp+0x28],rbx
   140002eac:	call   0x140019db0
   140002eb1:	mov    rcx,QWORD PTR [rdi]
   140002eb4:	mov    edx,0x1
   140002eb9:	sub    edx,DWORD PTR [rcx-0x8]
   140002ebc:	mov    ecx,DWORD PTR [rcx-0xc]
   140002ebf:	movsxd rbx,eax
   140002ec2:	sub    ecx,ebx
   140002ec4:	or     edx,ecx
   140002ec6:	jge    0x140002ed2
   140002ec8:	mov    edx,ebx
   140002eca:	mov    rcx,rdi
   140002ecd:	call   0x1400015e0
   140002ed2:	mov    rcx,QWORD PTR [rdi]
   140002ed5:	lea    eax,[rbx+0x1]
   140002ed8:	mov    r9,rbp
   140002edb:	movsxd rdx,eax
   140002ede:	mov    r8,rsi
   140002ee1:	call   0x1400195e0
   140002ee6:	test   ebx,ebx
   140002ee8:	js     0x140002f0b
   140002eea:	mov    rax,QWORD PTR [rdi]
   140002eed:	cmp    ebx,DWORD PTR [rax-0xc]
   140002ef0:	jg     0x140002f0b
   140002ef2:	mov    DWORD PTR [rax-0x10],ebx
   140002ef5:	mov    rax,QWORD PTR [rdi]
   140002ef8:	mov    WORD PTR [rax+rbx*2],0x0
   140002efe:	mov    rbx,QWORD PTR [rsp+0x28]
   140002f03:	add    rsp,0x30
   140002f07:	pop    rdi
   140002f08:	pop    rsi
   140002f09:	pop    rbp
   140002f0a:	ret    
   140002f0b:	mov    ecx,0x80070057
   140002f10:	call   0x1400015c0
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	jmp    0x140006160
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	mov    rcx,QWORD PTR [rcx+0x40]
   140002f34:	mov    edx,0x1
   140002f39:	rex.W jmp QWORD PTR [rip+0x2e868]        # 0x1400317a8
   140002f40:	mov    rcx,QWORD PTR [rcx+0x40]
   140002f44:	xor    edx,edx
   140002f46:	rex.W jmp QWORD PTR [rip+0x2e85b]        # 0x1400317a8
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	mov    QWORD PTR [rsp+0x8],rbx
   140002f55:	push   rdi
   140002f56:	sub    rsp,0x20
   140002f5a:	lea    rax,[rip+0x33ac7]        # 0x140036a28
   140002f61:	mov    edi,edx
   140002f63:	mov    rbx,rcx
   140002f66:	mov    QWORD PTR [rcx],rax
   140002f69:	mov    rdx,QWORD PTR [rcx+0x8]
   140002f6d:	sub    rdx,0x18
   140002f71:	or     eax,0xffffffff
   140002f74:	lock xadd DWORD PTR [rdx+0x10],eax
   140002f79:	add    eax,0xffffffff
   140002f7c:	test   eax,eax
   140002f7e:	jg     0x140002f89
   140002f80:	mov    rcx,QWORD PTR [rdx]
   140002f83:	mov    rax,QWORD PTR [rcx]
   140002f86:	call   QWORD PTR [rax+0x8]
   140002f89:	test   dil,0x1
   140002f8d:	je     0x140002f97
   140002f8f:	mov    rcx,rbx
   140002f92:	call   0x140006160
   140002f97:	mov    rax,rbx
   140002f9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f9f:	add    rsp,0x20
   140002fa3:	pop    rdi
   140002fa4:	ret    
   140002fa5:	int3   
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	sub    rsp,0x28
   140002fb4:	lea    rax,[rip+0x33a6d]        # 0x140036a28
   140002fbb:	mov    QWORD PTR [rcx],rax
   140002fbe:	mov    rdx,QWORD PTR [rcx+0x8]
   140002fc2:	sub    rdx,0x18
   140002fc6:	or     eax,0xffffffff
   140002fc9:	lock xadd DWORD PTR [rdx+0x10],eax
   140002fce:	add    eax,0xffffffff
   140002fd1:	test   eax,eax
   140002fd3:	jg     0x140002fde
   140002fd5:	mov    rcx,QWORD PTR [rdx]
   140002fd8:	mov    rax,QWORD PTR [rcx]
   140002fdb:	call   QWORD PTR [rax+0x8]
   140002fde:	add    rsp,0x28
   140002fe2:	ret    
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140002ff5:	push   rbp
   140002ff6:	push   rsi
   140002ff7:	push   rdi
   140002ff8:	sub    rsp,0x30
   140002ffc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003005:	mov    QWORD PTR [rsp+0x60],rbx
   14000300a:	mov    rsi,rdx
   14000300d:	mov    DWORD PTR [rsp+0x50],0x0
   140003015:	mov    rbx,QWORD PTR [rcx+0x8]
   140003019:	call   0x14000669c
   14000301e:	mov    rdx,rax
   140003021:	xor    ecx,ecx
   140003023:	test   rax,rax
   140003026:	setne  cl
   140003029:	test   ecx,ecx
   14000302b:	jne    0x140003038
   14000302d:	mov    ecx,0x80004005
   140003032:	call   0x1400015c0
   140003037:	int3   
   140003038:	mov    rax,QWORD PTR [rax]
   14000303b:	mov    rcx,rdx
   14000303e:	call   QWORD PTR [rax+0x18]
   140003041:	add    rax,0x18
   140003045:	mov    QWORD PTR [rsi],rax
   140003048:	test   rbx,rbx
   14000304b:	je     0x14000308a
   14000304d:	test   rbx,0xffffffffffff0000
   140003054:	jne    0x140003075
   140003056:	movzx  edi,bx
   140003059:	mov    ecx,edi
   14000305b:	call   0x140006688
   140003060:	test   rax,rax
   140003063:	je     0x14000309b
   140003065:	mov    r8d,edi
   140003068:	mov    rdx,rax
   14000306b:	mov    rcx,rsi
   14000306e:	call   0x140001ba0
   140003073:	jmp    0x14000309b
   140003075:	xor    eax,eax
   140003077:	or     rcx,0xffffffffffffffff
   14000307b:	mov    rdi,rbx
   14000307e:	repnz scas ax,WORD PTR es:[rdi]
   140003081:	not    rcx
   140003084:	sub    rcx,0x1
   140003088:	jmp    0x14000308c
   14000308a:	xor    ecx,ecx
   14000308c:	mov    r8d,ecx
   14000308f:	mov    rdx,rbx
   140003092:	mov    rcx,rsi
   140003095:	call   0x140001840
   14000309a:	nop
   14000309b:	mov    ebp,0x1
   1400030a0:	mov    DWORD PTR [rsp+0x50],ebp
   1400030a4:	mov    rbx,QWORD PTR [rsi]
   1400030a7:	xor    edi,edi
   1400030a9:	movzx  eax,WORD PTR [rbx]
   1400030ac:	test   ax,ax
   1400030af:	je     0x14000312b
   1400030b1:	movzx  edx,ax
   1400030b4:	lea    rcx,[rip+0x3394d]        # 0x140036a08
   1400030bb:	call   0x14001a080
   1400030c0:	test   rax,rax
   1400030c3:	je     0x1400030cf
   1400030c5:	test   rdi,rdi
   1400030c8:	jne    0x1400030d1
   1400030ca:	mov    rdi,rbx
   1400030cd:	jmp    0x1400030d1
   1400030cf:	xor    edi,edi
   1400030d1:	add    rbx,0x2
   1400030d5:	mov    ax,WORD PTR [rbx]
   1400030d8:	test   ax,ax
   1400030db:	jne    0x1400030b1
   1400030dd:	test   rdi,rdi
   1400030e0:	je     0x14000312b
   1400030e2:	mov    rax,QWORD PTR [rsi]
   1400030e5:	sub    rdi,rax
   1400030e8:	sar    rdi,1
   1400030eb:	mov    ecx,ebp
   1400030ed:	sub    ecx,DWORD PTR [rax-0x8]
   1400030f0:	mov    eax,DWORD PTR [rax-0xc]
   1400030f3:	sub    eax,edi
   1400030f5:	or     eax,ecx
   1400030f7:	jge    0x140003103
   1400030f9:	mov    edx,edi
   1400030fb:	mov    rcx,rsi
   1400030fe:	call   0x1400015e0
   140003103:	test   edi,edi
   140003105:	js     0x140003120
   140003107:	mov    rax,QWORD PTR [rsi]
   14000310a:	cmp    edi,DWORD PTR [rax-0xc]
   14000310d:	jg     0x140003120
   14000310f:	mov    DWORD PTR [rax-0x10],edi
   140003112:	movsxd rcx,edi
   140003115:	mov    rax,QWORD PTR [rsi]
   140003118:	mov    WORD PTR [rax+rcx*2],0x0
   14000311e:	jmp    0x14000312b
   140003120:	mov    ecx,0x80070057
   140003125:	call   0x1400015c0
   14000312a:	int3   
   14000312b:	mov    rax,QWORD PTR [rsi]
   14000312e:	mov    ebx,DWORD PTR [rax-0x10]
   140003131:	lea    edi,[rbx+0x1]
   140003134:	sub    ebp,DWORD PTR [rax-0x8]
   140003137:	mov    eax,DWORD PTR [rax-0xc]
   14000313a:	sub    eax,edi
   14000313c:	or     eax,ebp
   14000313e:	jge    0x14000314a
   140003140:	mov    edx,edi
   140003142:	mov    rcx,rsi
   140003145:	call   0x1400015e0
   14000314a:	mov    rcx,QWORD PTR [rsi]
   14000314d:	mov    WORD PTR [rcx+rbx*2],0x5c
   140003153:	test   edi,edi
   140003155:	js     0x140003173
   140003157:	mov    rax,QWORD PTR [rsi]
   14000315a:	cmp    edi,DWORD PTR [rax-0xc]
   14000315d:	jg     0x140003173
   14000315f:	mov    DWORD PTR [rax-0x10],edi
   140003162:	movsxd rcx,edi
   140003165:	mov    rax,QWORD PTR [rsi]
   140003168:	mov    WORD PTR [rax+rcx*2],0x0
   14000316e:	mov    rax,rsi
   140003171:	jmp    0x14000317e
   140003173:	mov    ecx,0x80070057
   140003178:	call   0x1400015c0
   14000317d:	nop
   14000317e:	mov    rbx,QWORD PTR [rsp+0x60]
   140003183:	add    rsp,0x30
   140003187:	pop    rdi
   140003188:	pop    rsi
   140003189:	pop    rbp
   14000318a:	ret    
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	rex push rbp
   140003192:	sub    rsp,0x20
   140003196:	mov    rbp,rdx
   140003199:	mov    rcx,QWORD PTR [rbp+0x58]
   14000319d:	call   0x140001dc0
   1400031a2:	add    rsp,0x20
   1400031a6:	pop    rbp
   1400031a7:	ret    
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	rex push rbp
   1400031b2:	sub    rsp,0x20
   1400031b6:	mov    rbp,rdx
   1400031b9:	mov    eax,DWORD PTR [rbp+0x50]
   1400031bc:	and    eax,0x1
   1400031bf:	test   eax,eax
   1400031c1:	je     0x1400031d0
   1400031c3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400031c7:	mov    rcx,QWORD PTR [rbp+0x58]
   1400031cb:	call   0x140001dc0
   1400031d0:	add    rsp,0x20
   1400031d4:	pop    rbp
   1400031d5:	ret    
   1400031d6:	int3   
   1400031d7:	int3   
   1400031d8:	int3   
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400031e5:	mov    QWORD PTR [rsp+0x18],r8
   1400031ea:	mov    QWORD PTR [rsp+0x20],r9
   1400031ef:	push   rbx
   1400031f0:	push   rbp
   1400031f1:	push   rsi
   1400031f2:	push   rdi
   1400031f3:	push   r12
   1400031f5:	push   r13
   1400031f7:	push   r14
   1400031f9:	push   r15
   1400031fb:	sub    rsp,0x48
   1400031ff:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140003208:	mov    r15,rcx
   14000320b:	mov    rsi,QWORD PTR [rcx+0x8]
   14000320f:	call   0x14000669c
   140003214:	mov    rcx,rax
   140003217:	xor    edx,edx
   140003219:	test   rax,rax
   14000321c:	setne  dl
   14000321f:	test   edx,edx
   140003221:	jne    0x14000322e
   140003223:	mov    ecx,0x80004005
   140003228:	call   0x1400015c0
   14000322d:	int3   
   14000322e:	mov    rax,QWORD PTR [rax]
   140003231:	call   QWORD PTR [rax+0x18]
   140003234:	lea    rbp,[rax+0x18]
   140003238:	mov    QWORD PTR [rsp+0x28],rbp
   14000323d:	or     r12,0xffffffffffffffff
   140003241:	test   rsi,rsi
   140003244:	je     0x140003289
   140003246:	test   rsi,0xffffffffffff0000
   14000324d:	jne    0x140003275
   14000324f:	movzx  edi,si
   140003252:	mov    ecx,edi
   140003254:	call   0x140006688
   140003259:	test   rax,rax
   14000325c:	je     0x1400032a0
   14000325e:	mov    r8d,edi
   140003261:	mov    rdx,rax
   140003264:	lea    rcx,[rsp+0x28]
   140003269:	call   0x140001ba0
   14000326e:	mov    rbp,QWORD PTR [rsp+0x28]
   140003273:	jmp    0x1400032a0
   140003275:	xor    eax,eax
   140003277:	mov    rcx,r12
   14000327a:	mov    rdi,rsi
   14000327d:	repnz scas ax,WORD PTR es:[rdi]
   140003280:	not    rcx
   140003283:	sub    rcx,0x1
   140003287:	jmp    0x14000328b
   140003289:	xor    ecx,ecx
   14000328b:	mov    r8d,ecx
   14000328e:	mov    rdx,rsi
   140003291:	lea    rcx,[rsp+0x28]
   140003296:	call   0x140001840
   14000329b:	mov    rbp,QWORD PTR [rsp+0x28]
   1400032a0:	mov    rsi,rbp
   1400032a3:	xor    edi,edi
   1400032a5:	cmp    WORD PTR [rbp+0x0],di
   1400032a9:	je     0x14000332a
   1400032ab:	xchg   ax,ax
   1400032ad:	data16 xchg ax,ax
   1400032b0:	movzx  edx,WORD PTR [rsi]
   1400032b3:	lea    rcx,[rip+0x3374e]        # 0x140036a08
   1400032ba:	call   0x14001a080
   1400032bf:	test   rax,rax
   1400032c2:	je     0x1400032ce
   1400032c4:	test   rdi,rdi
   1400032c7:	jne    0x1400032d0
   1400032c9:	mov    rdi,rsi
   1400032cc:	jmp    0x1400032d0
   1400032ce:	xor    edi,edi
   1400032d0:	add    rsi,0x2
   1400032d4:	cmp    WORD PTR [rsi],0x0
   1400032d8:	jne    0x1400032b0
   1400032da:	test   rdi,rdi
   1400032dd:	je     0x14000332a
   1400032df:	sub    rdi,rbp
   1400032e2:	sar    rdi,1
   1400032e5:	mov    ecx,0x1
   1400032ea:	sub    ecx,DWORD PTR [rbp-0x8]
   1400032ed:	mov    eax,DWORD PTR [rbp-0xc]
   1400032f0:	sub    eax,edi
   1400032f2:	or     eax,ecx
   1400032f4:	jge    0x140003307
   1400032f6:	mov    edx,edi
   1400032f8:	lea    rcx,[rsp+0x28]
   1400032fd:	call   0x1400015e0
   140003302:	mov    rbp,QWORD PTR [rsp+0x28]
   140003307:	test   edi,edi
   140003309:	js     0x14000331f
   14000330b:	cmp    edi,DWORD PTR [rbp-0xc]
   14000330e:	jg     0x14000331f
   140003310:	mov    DWORD PTR [rbp-0x10],edi
   140003313:	movsxd rax,edi
   140003316:	mov    WORD PTR [rbp+rax*2+0x0],0x0
   14000331d:	jmp    0x14000332a
   14000331f:	mov    ecx,0x80070057
   140003324:	call   0x1400015c0
   140003329:	int3   
   14000332a:	call   0x14000669c
   14000332f:	mov    rdx,rax
   140003332:	xor    ecx,ecx
   140003334:	test   rax,rax
   140003337:	setne  cl
   14000333a:	test   ecx,ecx
   14000333c:	jne    0x140003349
   14000333e:	mov    ecx,0x80004005
   140003343:	call   0x1400015c0
   140003348:	int3   
   140003349:	mov    rax,QWORD PTR [rax]
   14000334c:	mov    rcx,rdx
   14000334f:	call   QWORD PTR [rax+0x18]
   140003352:	lea    rbx,[rax+0x18]
   140003356:	mov    QWORD PTR [rsp+0x20],rbx
   14000335b:	lea    rdx,[rip+0x3339e]        # 0x140036700
   140003362:	test   rdx,0xffffffffffff0000
   140003369:	jne    0x140003398
   14000336b:	movzx  edi,dx
   14000336e:	mov    ecx,edi
   140003370:	call   0x140006688
   140003375:	test   rax,rax
   140003378:	je     0x14000349c
   14000337e:	mov    r8d,edi
   140003381:	mov    rdx,rax
   140003384:	lea    rcx,[rsp+0x20]
   140003389:	call   0x140001ba0
   14000338e:	mov    rbx,QWORD PTR [rsp+0x20]
   140003393:	jmp    0x14000349c
   140003398:	xor    eax,eax
   14000339a:	mov    rcx,r12
   14000339d:	mov    rdi,rdx
   1400033a0:	repnz scas ax,WORD PTR es:[rdi]
   1400033a3:	not    rcx
   1400033a6:	sub    rcx,0x1
   1400033aa:	mov    rdi,rcx
   1400033ad:	test   ecx,ecx
   1400033af:	jne    0x140003415
   1400033b1:	lea    rdx,[rbx-0x18]
   1400033b5:	mov    rdi,QWORD PTR [rdx]
   1400033b8:	cmp    DWORD PTR [rdx+0x8],eax
   1400033bb:	je     0x14000349c
   1400033c1:	cmp    DWORD PTR [rdx+0x10],eax
   1400033c4:	jge    0x1400033e1
   1400033c6:	cmp    DWORD PTR [rbx-0xc],eax
   1400033c9:	jge    0x1400033d6
   1400033cb:	mov    ecx,0x80070057
   1400033d0:	call   0x1400015c0
   1400033d5:	int3   
   1400033d6:	mov    DWORD PTR [rbx-0x10],eax
   1400033d9:	mov    WORD PTR [rbx],ax
   1400033dc:	jmp    0x14000349c
   1400033e1:	mov    eax,r12d
   1400033e4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400033e9:	add    eax,0xffffffff
   1400033ec:	test   eax,eax
   1400033ee:	jg     0x1400033f9
   1400033f0:	mov    rcx,QWORD PTR [rdx]
   1400033f3:	mov    rax,QWORD PTR [rcx]
   1400033f6:	call   QWORD PTR [rax+0x8]
   1400033f9:	mov    rax,QWORD PTR [rdi]
   1400033fc:	mov    rcx,rdi
   1400033ff:	call   QWORD PTR [rax+0x18]
   140003402:	lea    rbx,[rax+0x18]
   140003406:	mov    QWORD PTR [rsp+0x20],rbx
   14000340b:	mov    rbp,QWORD PTR [rsp+0x28]
   140003410:	jmp    0x14000349c
   140003415:	mov    esi,DWORD PTR [rbx-0x10]
   140003418:	mov    r13,rdx
   14000341b:	sub    r13,rbx
   14000341e:	sar    r13,1
   140003421:	mov    ecx,0x1
   140003426:	sub    ecx,DWORD PTR [rbx-0x8]
   140003429:	mov    eax,DWORD PTR [rbx-0xc]
   14000342c:	sub    eax,edi
   14000342e:	or     eax,ecx
   140003430:	jge    0x14000344a
   140003432:	mov    edx,edi
   140003434:	lea    rcx,[rsp+0x20]
   140003439:	call   0x1400015e0
   14000343e:	mov    rbx,QWORD PTR [rsp+0x20]
   140003443:	lea    rdx,[rip+0x332b6]        # 0x140036700
   14000344a:	cmp    r13,rsi
   14000344d:	ja     0x14000346a
   14000344f:	movsxd rax,edi
   140003452:	lea    rsi,[rax+rax*1]
   140003456:	lea    r8,[rbx+r13*2]
   14000345a:	mov    r9,rsi
   14000345d:	mov    rdx,rsi
   140003460:	mov    rcx,rbx
   140003463:	call   0x140018fb0
   140003468:	jmp    0x140003482
   14000346a:	movsxd rax,edi
   14000346d:	lea    rsi,[rax+rax*1]
   140003471:	mov    r9,rsi
   140003474:	mov    r8,rdx
   140003477:	mov    rdx,rsi
   14000347a:	mov    rcx,rbx
   14000347d:	call   0x140018ee0
   140003482:	test   edi,edi
   140003484:	js     0x14000369a
   14000348a:	cmp    edi,DWORD PTR [rbx-0xc]
   14000348d:	jg     0x14000369a
   140003493:	mov    DWORD PTR [rbx-0x10],edi
   140003496:	mov    WORD PTR [rsi+rbx*1],0x0
   14000349c:	lea    r13,[rsp+0xa0]
   1400034a4:	mov    QWORD PTR [rsp+0x38],r13
   1400034a9:	mov    rsi,QWORD PTR [rsp+0x98]
   1400034b1:	test   rsi,rsi
   1400034b4:	jne    0x1400034c1
   1400034b6:	mov    ecx,0x80070057
   1400034bb:	call   0x1400015c0
   1400034c0:	int3   
   1400034c1:	mov    rdx,r13
   1400034c4:	mov    rcx,rsi
   1400034c7:	call   0x140019db0
   1400034cc:	movsxd rdi,eax
   1400034cf:	mov    edx,0x1
   1400034d4:	sub    edx,DWORD PTR [rbx-0x8]
   1400034d7:	mov    ecx,DWORD PTR [rbx-0xc]
   1400034da:	sub    ecx,edi
   1400034dc:	or     ecx,edx
   1400034de:	jge    0x1400034f1
   1400034e0:	mov    edx,edi
   1400034e2:	lea    rcx,[rsp+0x20]
   1400034e7:	call   0x1400015e0
   1400034ec:	mov    rbx,QWORD PTR [rsp+0x20]
   1400034f1:	lea    eax,[rdi+0x1]
   1400034f4:	movsxd rdx,eax
   1400034f7:	mov    r9,r13
   1400034fa:	mov    r8,rsi
   1400034fd:	mov    rcx,rbx
   140003500:	call   0x1400195e0
   140003505:	test   edi,edi
   140003507:	js     0x14000368f
   14000350d:	cmp    edi,DWORD PTR [rbx-0xc]
   140003510:	jg     0x14000368f
   140003516:	mov    DWORD PTR [rbx-0x10],edi
   140003519:	mov    WORD PTR [rbx+rdi*2],0x0
   14000351f:	mov    rdi,rbx
   140003522:	cmp    WORD PTR [rbx],0x0
   140003526:	je     0x1400035ec
   14000352c:	data16 data16 xchg ax,ax
   140003530:	movzx  edx,WORD PTR [rdi]
   140003533:	lea    rcx,[rip+0x334ce]        # 0x140036a08
   14000353a:	call   0x14001a080
   14000353f:	test   rax,rax
   140003542:	je     0x14000354e
   140003544:	add    rdi,0x2
   140003548:	cmp    WORD PTR [rdi],0x0
   14000354c:	jne    0x140003530
   14000354e:	cmp    rdi,rbx
   140003551:	je     0x1400035ec
   140003557:	sub    rdi,rbx
   14000355a:	sar    rdi,1
   14000355d:	mov    edx,DWORD PTR [rbx-0x10]
   140003560:	mov    ecx,0x1
   140003565:	sub    ecx,DWORD PTR [rbx-0x8]
   140003568:	mov    eax,DWORD PTR [rbx-0xc]
   14000356b:	sub    eax,edx
   14000356d:	or     eax,ecx
   14000356f:	jge    0x140003580
   140003571:	lea    rcx,[rsp+0x20]
   140003576:	call   0x1400015e0
   14000357b:	mov    rbx,QWORD PTR [rsp+0x20]
   140003580:	movsxd rax,edi
   140003583:	lea    r8,[rbx+rax*2]
   140003587:	mov    esi,DWORD PTR [rbx-0x10]
   14000358a:	sub    esi,edi
   14000358c:	lea    eax,[rsi+0x1]
   14000358f:	movsxd rdx,eax
   140003592:	add    rdx,rdx
   140003595:	mov    r9,rdx
   140003598:	mov    rcx,rbx
   14000359b:	call   0x140018fb0
   1400035a0:	test   eax,eax
   1400035a2:	je     0x1400035ca
   1400035a4:	cmp    eax,0xc
   1400035a7:	je     0x1400035c4
   1400035a9:	cmp    eax,0x16
   1400035ac:	je     0x1400035be
   1400035ae:	cmp    eax,0x22
   1400035b1:	je     0x1400035be
   1400035b3:	cmp    eax,0x50
   1400035b6:	je     0x1400035ca
   1400035b8:	call   0x140006408
   1400035bd:	int3   
   1400035be:	call   0x140006408
   1400035c3:	int3   
   1400035c4:	call   0x1400063c0
   1400035c9:	int3   
   1400035ca:	test   esi,esi
   1400035cc:	js     0x1400035e1
   1400035ce:	cmp    esi,DWORD PTR [rbx-0xc]
   1400035d1:	jg     0x1400035e1
   1400035d3:	mov    DWORD PTR [rbx-0x10],esi
   1400035d6:	movsxd rax,esi
   1400035d9:	mov    WORD PTR [rbx+rax*2],0x0
   1400035df:	jmp    0x1400035ec
   1400035e1:	mov    ecx,0x80070057
   1400035e6:	call   0x1400015c0
   1400035eb:	int3   
   1400035ec:	xor    eax,eax
   1400035ee:	lea    rdi,[rip+0x3310b]        # 0x140036700
   1400035f5:	mov    rsi,rbp
   1400035f8:	mov    ecx,0x1
   1400035fd:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140003600:	je     0x140003607
   140003602:	sbb    eax,eax
   140003604:	sbb    eax,0xffffffff
   140003607:	test   eax,eax
   140003609:	sete   al
   14000360c:	test   al,al
   14000360e:	je     0x140003638
   140003610:	mov    DWORD PTR [r15+0x10],0x0
   140003618:	xor    eax,eax
   14000361a:	mov    rcx,r12
   14000361d:	mov    rdi,rbx
   140003620:	repnz scas ax,WORD PTR es:[rdi]
   140003623:	not    rcx
   140003626:	lea    r8d,[rcx-0x1]
   14000362a:	mov    rdx,rbx
   14000362d:	lea    rcx,[r15+0x8]
   140003631:	call   0x140001840
   140003636:	jmp    0x14000364f
   140003638:	mov    r9,rbx
   14000363b:	mov    r8,rbp
   14000363e:	lea    rdx,[rip+0x333cb]        # 0x140036a10
   140003645:	lea    rcx,[r15+0x8]
   140003649:	call   0x140002e70
   14000364e:	nop
   14000364f:	lea    rdx,[rbx-0x18]
   140003653:	mov    eax,r12d
   140003656:	lock xadd DWORD PTR [rdx+0x10],eax
   14000365b:	add    eax,0xffffffff
   14000365e:	test   eax,eax
   140003660:	jg     0x14000366c
   140003662:	mov    rcx,QWORD PTR [rdx]
   140003665:	mov    rax,QWORD PTR [rcx]
   140003668:	call   QWORD PTR [rax+0x8]
   14000366b:	nop
   14000366c:	mov    rdx,QWORD PTR [rsp+0x28]
   140003671:	add    rdx,0xffffffffffffffe8
   140003675:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000367b:	add    r12d,0xffffffff
   14000367f:	test   r12d,r12d
   140003682:	jg     0x1400036a5
   140003684:	mov    rcx,QWORD PTR [rdx]
   140003687:	mov    rax,QWORD PTR [rcx]
   14000368a:	call   QWORD PTR [rax+0x8]
   14000368d:	jmp    0x1400036a5
   14000368f:	mov    ecx,0x80070057
   140003694:	call   0x1400015c0
   140003699:	nop
   14000369a:	mov    ecx,0x80070057
   14000369f:	call   0x1400015c0
   1400036a4:	nop
   1400036a5:	add    rsp,0x48
   1400036a9:	pop    r15
   1400036ab:	pop    r14
   1400036ad:	pop    r13
   1400036af:	pop    r12
   1400036b1:	pop    rdi
   1400036b2:	pop    rsi
   1400036b3:	pop    rbp
   1400036b4:	pop    rbx
   1400036b5:	ret    
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	rex push rbp
   1400036c2:	sub    rsp,0x20
   1400036c6:	mov    rbp,rdx
   1400036c9:	lea    rcx,[rbp+0x28]
   1400036cd:	call   0x140001dc0
   1400036d2:	add    rsp,0x20
   1400036d6:	pop    rbp
   1400036d7:	ret    
   1400036d8:	int3   
   1400036d9:	int3   
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	rex push rbp
   1400036e2:	sub    rsp,0x20
   1400036e6:	mov    rbp,rdx
   1400036e9:	lea    rcx,[rbp+0x28]
   1400036ed:	call   0x140001dc0
   1400036f2:	add    rsp,0x20
   1400036f6:	pop    rbp
   1400036f7:	ret    
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	rex push rbp
   140003702:	sub    rsp,0x20
   140003706:	mov    rbp,rdx
   140003709:	lea    rcx,[rbp+0x20]
   14000370d:	call   0x140001dc0
   140003712:	add    rsp,0x20
   140003716:	pop    rbp
   140003717:	ret    
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	rex push rbp
   140003722:	sub    rsp,0x20
   140003726:	mov    rbp,rdx
   140003729:	lea    rcx,[rbp+0x20]
   14000372d:	call   0x140001dc0
   140003732:	add    rsp,0x20
   140003736:	pop    rbp
   140003737:	ret    
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	mov    QWORD PTR [rsp+0x10],rdx
   140003745:	push   rbx
   140003746:	push   rbp
   140003747:	push   rsi
   140003748:	push   rdi
   140003749:	push   r12
   14000374b:	sub    rsp,0x30
   14000374f:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003758:	mov    rbp,rdx
   14000375b:	mov    rbx,rcx
   14000375e:	mov    DWORD PTR [rsp+0x70],0x0
   140003766:	call   0x14000669c
   14000376b:	mov    rcx,rax
   14000376e:	xor    eax,eax
   140003770:	test   rcx,rcx
   140003773:	setne  al
   140003776:	test   eax,eax
   140003778:	jne    0x140003785
   14000377a:	mov    ecx,0x80004005
   14000377f:	call   0x1400015c0
   140003784:	int3   
   140003785:	mov    rax,QWORD PTR [rcx]
   140003788:	call   QWORD PTR [rax+0x18]
   14000378b:	add    rax,0x18
   14000378f:	mov    QWORD PTR [rbp+0x0],rax
   140003793:	lea    rdx,[rip+0x32f66]        # 0x140036700
   14000379a:	or     rsi,0xffffffffffffffff
   14000379e:	test   rdx,0xffffffffffff0000
   1400037a5:	jne    0x1400037c6
   1400037a7:	movzx  edi,dx
   1400037aa:	mov    ecx,edi
   1400037ac:	call   0x140006688
   1400037b1:	test   rax,rax
   1400037b4:	je     0x1400037e1
   1400037b6:	mov    r8d,edi
   1400037b9:	mov    rdx,rax
   1400037bc:	mov    rcx,rbp
   1400037bf:	call   0x140001ba0
   1400037c4:	jmp    0x1400037e1
   1400037c6:	xor    eax,eax
   1400037c8:	mov    rcx,rsi
   1400037cb:	mov    rdi,rdx
   1400037ce:	repnz scas ax,WORD PTR es:[rdi]
   1400037d1:	not    rcx
   1400037d4:	lea    r8d,[rcx-0x1]
   1400037d8:	mov    rcx,rbp
   1400037db:	call   0x140001840
   1400037e0:	nop
   1400037e1:	mov    r12d,0x1
   1400037e7:	mov    DWORD PTR [rsp+0x70],r12d
   1400037ec:	mov    rbx,QWORD PTR [rbx+0x8]
   1400037f0:	call   0x14000669c
   1400037f5:	mov    rdx,rax
   1400037f8:	xor    ecx,ecx
   1400037fa:	test   rax,rax
   1400037fd:	setne  cl
   140003800:	test   ecx,ecx
   140003802:	jne    0x14000380f
   140003804:	mov    ecx,0x80004005
   140003809:	call   0x1400015c0
   14000380e:	int3   
   14000380f:	mov    rax,QWORD PTR [rax]
   140003812:	mov    rcx,rdx
   140003815:	call   QWORD PTR [rax+0x18]
   140003818:	lea    rdi,[rax+0x18]
   14000381c:	mov    QWORD PTR [rsp+0x78],rdi
   140003821:	test   rbx,rbx
   140003824:	je     0x140003869
   140003826:	test   rbx,0xffffffffffff0000
   14000382d:	jne    0x140003855
   14000382f:	movzx  ebx,bx
   140003832:	mov    ecx,ebx
   140003834:	call   0x140006688
   140003839:	test   rax,rax
   14000383c:	je     0x140003880
   14000383e:	mov    r8d,ebx
   140003841:	mov    rdx,rax
   140003844:	lea    rcx,[rsp+0x78]
   140003849:	call   0x140001ba0
   14000384e:	mov    rdi,QWORD PTR [rsp+0x78]
   140003853:	jmp    0x140003880
   140003855:	xor    eax,eax
   140003857:	mov    rcx,rsi
   14000385a:	mov    rdi,rbx
   14000385d:	repnz scas ax,WORD PTR es:[rdi]
   140003860:	not    rcx
   140003863:	sub    rcx,0x1
   140003867:	jmp    0x14000386b
   140003869:	xor    ecx,ecx
   14000386b:	mov    r8d,ecx
   14000386e:	mov    rdx,rbx
   140003871:	lea    rcx,[rsp+0x78]
   140003876:	call   0x140001840
   14000387b:	mov    rdi,QWORD PTR [rsp+0x78]
   140003880:	mov    rax,rdi
   140003883:	xor    ebx,ebx
   140003885:	movzx  ecx,WORD PTR [rdi]
   140003888:	test   cx,cx
   14000388b:	je     0x1400038fa
   14000388d:	data16 xchg ax,ax
   140003890:	cmp    cx,0x5c
   140003894:	jne    0x1400038a0
   140003896:	test   rbx,rbx
   140003899:	jne    0x1400038a2
   14000389b:	mov    rbx,rax
   14000389e:	jmp    0x1400038a2
   1400038a0:	xor    ebx,ebx
   1400038a2:	add    rax,0x2
   1400038a6:	mov    cx,WORD PTR [rax]
   1400038a9:	test   cx,cx
   1400038ac:	jne    0x140003890
   1400038ae:	test   rbx,rbx
   1400038b1:	je     0x1400038fa
   1400038b3:	sub    rbx,rdi
   1400038b6:	sar    rbx,1
   1400038b9:	sub    r12d,DWORD PTR [rdi-0x8]
   1400038bd:	mov    eax,DWORD PTR [rdi-0xc]
   1400038c0:	sub    eax,ebx
   1400038c2:	or     eax,r12d
   1400038c5:	jge    0x1400038d8
   1400038c7:	mov    edx,ebx
   1400038c9:	lea    rcx,[rsp+0x78]
   1400038ce:	call   0x1400015e0
   1400038d3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400038d8:	test   ebx,ebx
   1400038da:	js     0x1400038ef
   1400038dc:	cmp    ebx,DWORD PTR [rdi-0xc]
   1400038df:	jg     0x1400038ef
   1400038e1:	mov    DWORD PTR [rdi-0x10],ebx
   1400038e4:	movsxd rax,ebx
   1400038e7:	mov    WORD PTR [rdi+rax*2],0x0
   1400038ed:	jmp    0x1400038fa
   1400038ef:	mov    ecx,0x80070057
   1400038f4:	call   0x1400015c0
   1400038f9:	int3   
   1400038fa:	mov    dx,0x5c
   1400038fe:	mov    rcx,rdi
   140003901:	call   0x14001a120
   140003906:	test   rax,rax
   140003909:	jne    0x14000390f
   14000390b:	mov    eax,esi
   14000390d:	jmp    0x140003915
   14000390f:	sub    rax,rdi
   140003912:	sar    rax,1
   140003915:	lea    r9d,[rax+0x1]
   140003919:	test   r9d,r9d
   14000391c:	jle    0x140003969
   14000391e:	xor    r8d,r8d
   140003921:	lea    rdx,[rsp+0x20]
   140003926:	lea    rcx,[rsp+0x78]
   14000392b:	call   0x140004760
   140003930:	nop
   140003931:	mov    rdx,rax
   140003934:	mov    rcx,rbp
   140003937:	call   0x140001750
   14000393c:	nop
   14000393d:	mov    rdx,QWORD PTR [rsp+0x20]
   140003942:	add    rdx,0xffffffffffffffe8
   140003946:	mov    eax,esi
   140003948:	lock xadd DWORD PTR [rdx+0x10],eax
   14000394d:	add    eax,0xffffffff
   140003950:	test   eax,eax
   140003952:	jg     0x140003964
   140003954:	mov    rcx,QWORD PTR [rdx]
   140003957:	mov    rax,QWORD PTR [rcx]
   14000395a:	call   QWORD PTR [rax+0x8]
   14000395d:	mov    rdi,QWORD PTR [rsp+0x78]
   140003962:	jmp    0x140003969
   140003964:	mov    rdi,QWORD PTR [rsp+0x78]
   140003969:	lea    rdx,[rdi-0x18]
   14000396d:	lock xadd DWORD PTR [rdx+0x10],esi
   140003972:	add    esi,0xffffffff
   140003975:	test   esi,esi
   140003977:	jg     0x140003982
   140003979:	mov    rcx,QWORD PTR [rdx]
   14000397c:	mov    rax,QWORD PTR [rcx]
   14000397f:	call   QWORD PTR [rax+0x8]
   140003982:	mov    rax,rbp
   140003985:	add    rsp,0x30
   140003989:	pop    r12
   14000398b:	pop    rdi
   14000398c:	pop    rsi
   14000398d:	pop    rbp
   14000398e:	pop    rbx
   14000398f:	ret    
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	int3   
   140003995:	int3   
   140003996:	int3   
   140003997:	int3   
   140003998:	int3   
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	rex push rbp
   1400039a2:	sub    rsp,0x20
   1400039a6:	mov    rbp,rdx
   1400039a9:	mov    rcx,QWORD PTR [rbp+0x68]
   1400039ad:	call   0x140001dc0
   1400039b2:	add    rsp,0x20
   1400039b6:	pop    rbp
   1400039b7:	ret    
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	rex push rbp
   1400039c2:	sub    rsp,0x20
   1400039c6:	mov    rbp,rdx
   1400039c9:	mov    eax,DWORD PTR [rbp+0x70]
   1400039cc:	and    eax,0x1
   1400039cf:	test   eax,eax
   1400039d1:	je     0x1400039e0
   1400039d3:	and    DWORD PTR [rbp+0x70],0xfffffffe
   1400039d7:	mov    rcx,QWORD PTR [rbp+0x68]
   1400039db:	call   0x140001dc0
   1400039e0:	add    rsp,0x20
   1400039e4:	pop    rbp
   1400039e5:	ret    
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	rex push rbp
   1400039f2:	sub    rsp,0x20
   1400039f6:	mov    rbp,rdx
   1400039f9:	lea    rcx,[rbp+0x78]
   1400039fd:	call   0x140001dc0
   140003a02:	add    rsp,0x20
   140003a06:	pop    rbp
   140003a07:	ret    
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	rex push rbp
   140003a12:	sub    rsp,0x20
   140003a16:	mov    rbp,rdx
   140003a19:	lea    rcx,[rbp+0x78]
   140003a1d:	call   0x140001dc0
   140003a22:	add    rsp,0x20
   140003a26:	pop    rbp
   140003a27:	ret    
   140003a28:	int3   
   140003a29:	int3   
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	rex push rbp
   140003a32:	sub    rsp,0x20
   140003a36:	mov    rbp,rdx
   140003a39:	lea    rcx,[rbp+0x20]
   140003a3d:	call   0x140001dc0
   140003a42:	add    rsp,0x20
   140003a46:	pop    rbp
   140003a47:	ret    
   140003a48:	int3   
   140003a49:	int3   
   140003a4a:	int3   
   140003a4b:	int3   
   140003a4c:	int3   
   140003a4d:	int3   
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	rex push rbp
   140003a52:	push   rsi
   140003a53:	push   rdi
   140003a54:	push   r12
   140003a56:	push   r13
   140003a58:	push   r14
   140003a5a:	push   r15
   140003a5c:	sub    rsp,0x50
   140003a60:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140003a69:	mov    QWORD PTR [rsp+0x90],rbx
   140003a71:	mov    rbx,rcx
   140003a74:	lea    r15,[rip+0x32c85]        # 0x140036700
   140003a7b:	call   0x14000669c
   140003a80:	mov    rcx,rax
   140003a83:	xor    r13d,r13d
   140003a86:	mov    edx,r13d
   140003a89:	test   rax,rax
   140003a8c:	setne  dl
   140003a8f:	test   edx,edx
   140003a91:	jne    0x140003a9e
   140003a93:	mov    ecx,0x80004005
   140003a98:	call   0x1400015c0
   140003a9d:	int3   
   140003a9e:	mov    rax,QWORD PTR [rax]
   140003aa1:	call   QWORD PTR [rax+0x18]
   140003aa4:	lea    rbp,[rax+0x18]
   140003aa8:	mov    QWORD PTR [rsp+0xa8],rbp
   140003ab0:	mov    r12,r15
   140003ab3:	or     r14,0xffffffffffffffff
   140003ab7:	shr    r12,0x10
   140003abb:	jne    0x140003aea
   140003abd:	movzx  edi,r15w
   140003ac1:	mov    ecx,edi
   140003ac3:	call   0x140006688
   140003ac8:	test   rax,rax
   140003acb:	je     0x140003b14
   140003acd:	mov    r8d,edi
   140003ad0:	mov    rdx,rax
   140003ad3:	lea    rcx,[rsp+0xa8]
   140003adb:	call   0x140001ba0
   140003ae0:	mov    rbp,QWORD PTR [rsp+0xa8]
   140003ae8:	jmp    0x140003b14
   140003aea:	xor    eax,eax
   140003aec:	mov    rcx,r14
   140003aef:	mov    rdi,r15
   140003af2:	repnz scas ax,WORD PTR es:[rdi]
   140003af5:	not    rcx
   140003af8:	lea    r8d,[rcx-0x1]
   140003afc:	mov    rdx,r15
   140003aff:	lea    rcx,[rsp+0xa8]
   140003b07:	call   0x140001840
   140003b0c:	mov    rbp,QWORD PTR [rsp+0xa8]
   140003b14:	xor    eax,eax
   140003b16:	mov    rdi,r15
   140003b19:	mov    rsi,rbp
   140003b1c:	mov    ecx,0x1
   140003b21:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140003b24:	je     0x140003b2b
   140003b26:	sbb    eax,eax
   140003b28:	sbb    eax,0xffffffff
   140003b2b:	test   eax,eax
   140003b2d:	sete   al
   140003b30:	test   al,al
   140003b32:	je     0x140003c3d
   140003b38:	lea    rdx,[rsp+0x28]
   140003b3d:	mov    rcx,rbx
   140003b40:	call   0x140002ff0
   140003b45:	nop
   140003b46:	mov    rdx,QWORD PTR [rax]
   140003b49:	lea    rdi,[rdx-0x18]
   140003b4d:	add    rbp,0xffffffffffffffe8
   140003b51:	cmp    rdi,rbp
   140003b54:	je     0x140003c0a
   140003b5a:	cmp    DWORD PTR [rbp+0x10],0x0
   140003b5e:	jl     0x140003bf8
   140003b64:	mov    rcx,QWORD PTR [rdi]
   140003b67:	cmp    rcx,QWORD PTR [rbp+0x0]
   140003b6b:	jne    0x140003bf8
   140003b71:	mov    rax,QWORD PTR [rcx]
   140003b74:	call   QWORD PTR [rax+0x20]
   140003b77:	mov    rcx,rax
   140003b7a:	cmp    DWORD PTR [rdi+0x10],0x0
   140003b7e:	jl     0x140003b8f
   140003b80:	cmp    rax,QWORD PTR [rdi]
   140003b83:	jne    0x140003b8f
   140003b85:	mov    rsi,rdi
   140003b88:	lock add DWORD PTR [rdi+0x10],0x1
   140003b8d:	jmp    0x140003bce
   140003b8f:	mov    rax,QWORD PTR [rax]
   140003b92:	mov    r8d,0x2
   140003b98:	mov    edx,DWORD PTR [rdi+0x8]
   140003b9b:	call   QWORD PTR [rax]
   140003b9d:	mov    rsi,rax
   140003ba0:	test   rax,rax
   140003ba3:	jne    0x140003bab
   140003ba5:	call   0x1400016f0
   140003baa:	int3   
   140003bab:	mov    eax,DWORD PTR [rdi+0x8]
   140003bae:	mov    DWORD PTR [rsi+0x8],eax
   140003bb1:	mov    eax,DWORD PTR [rdi+0x8]
   140003bb4:	add    eax,0x1
   140003bb7:	movsxd rdx,eax
   140003bba:	lea    r9,[rdx+rdx*1]
   140003bbe:	lea    r8,[rdi+0x18]
   140003bc2:	add    rdx,rdx
   140003bc5:	lea    rcx,[rsi+0x18]
   140003bc9:	call   0x140018ee0
   140003bce:	mov    eax,r14d
   140003bd1:	lock xadd DWORD PTR [rbp+0x10],eax
   140003bd6:	add    eax,0xffffffff
   140003bd9:	test   eax,eax
   140003bdb:	jg     0x140003bea
   140003bdd:	mov    rcx,QWORD PTR [rbp+0x0]
   140003be1:	mov    rax,QWORD PTR [rcx]
   140003be4:	mov    rdx,rbp
   140003be7:	call   QWORD PTR [rax+0x8]
   140003bea:	lea    rax,[rsi+0x18]
   140003bee:	mov    QWORD PTR [rsp+0xa8],rax
   140003bf6:	jmp    0x140003c0a
   140003bf8:	mov    r8d,DWORD PTR [rdx-0x10]
   140003bfc:	lea    rcx,[rsp+0xa8]
   140003c04:	call   0x140001840
   140003c09:	nop
   140003c0a:	mov    rdx,QWORD PTR [rsp+0x28]
   140003c0f:	add    rdx,0xffffffffffffffe8
   140003c13:	mov    eax,r14d
   140003c16:	lock xadd DWORD PTR [rdx+0x10],eax
   140003c1b:	add    eax,0xffffffff
   140003c1e:	test   eax,eax
   140003c20:	jg     0x140003c35
   140003c22:	mov    rcx,QWORD PTR [rdx]
   140003c25:	mov    rax,QWORD PTR [rcx]
   140003c28:	call   QWORD PTR [rax+0x8]
   140003c2b:	mov    rbp,QWORD PTR [rsp+0xa8]
   140003c33:	jmp    0x140003c3d
   140003c35:	mov    rbp,QWORD PTR [rsp+0xa8]
   140003c3d:	call   0x14000669c
   140003c42:	mov    rdx,rax
   140003c45:	mov    ecx,r13d
   140003c48:	test   rax,rax
   140003c4b:	setne  cl
   140003c4e:	test   ecx,ecx
   140003c50:	jne    0x140003c5d
   140003c52:	mov    ecx,0x80004005
   140003c57:	call   0x1400015c0
   140003c5c:	int3   
   140003c5d:	mov    rax,QWORD PTR [rax]
   140003c60:	mov    rcx,rdx
   140003c63:	call   QWORD PTR [rax+0x18]
   140003c66:	lea    rbx,[rax+0x18]
   140003c6a:	mov    QWORD PTR [rsp+0x20],rbx
   140003c6f:	test   r12,r12
   140003c72:	jne    0x140003ca2
   140003c74:	movzx  edi,r15w
   140003c78:	mov    ecx,edi
   140003c7a:	call   0x140006688
   140003c7f:	test   rax,rax
   140003c82:	je     0x140003da3
   140003c88:	mov    r8d,edi
   140003c8b:	mov    rdx,rax
   140003c8e:	lea    rcx,[rsp+0x20]
   140003c93:	call   0x140001ba0
   140003c98:	mov    rbx,QWORD PTR [rsp+0x20]
   140003c9d:	jmp    0x140003da3
   140003ca2:	xor    eax,eax
   140003ca4:	mov    rcx,r14
   140003ca7:	mov    rdi,r15
   140003caa:	repnz scas ax,WORD PTR es:[rdi]
   140003cad:	not    rcx
   140003cb0:	sub    rcx,0x1
   140003cb4:	mov    rdi,rcx
   140003cb7:	test   ecx,ecx
   140003cb9:	jne    0x140003d23
   140003cbb:	lea    rdx,[rbx-0x18]
   140003cbf:	mov    rdi,QWORD PTR [rdx]
   140003cc2:	cmp    DWORD PTR [rdx+0x8],eax
   140003cc5:	je     0x140003da3
   140003ccb:	cmp    DWORD PTR [rdx+0x10],eax
   140003cce:	jge    0x140003cec
   140003cd0:	cmp    DWORD PTR [rbx-0xc],eax
   140003cd3:	jge    0x140003ce0
   140003cd5:	mov    ecx,0x80070057
   140003cda:	call   0x1400015c0
   140003cdf:	int3   
   140003ce0:	mov    DWORD PTR [rbx-0x10],r13d
   140003ce4:	mov    WORD PTR [rbx],ax
   140003ce7:	jmp    0x140003da3
   140003cec:	mov    eax,r14d
   140003cef:	lock xadd DWORD PTR [rdx+0x10],eax
   140003cf4:	add    eax,0xffffffff
   140003cf7:	test   eax,eax
   140003cf9:	jg     0x140003d04
   140003cfb:	mov    rcx,QWORD PTR [rdx]
   140003cfe:	mov    rax,QWORD PTR [rcx]
   140003d01:	call   QWORD PTR [rax+0x8]
   140003d04:	mov    rax,QWORD PTR [rdi]
   140003d07:	mov    rcx,rdi
   140003d0a:	call   QWORD PTR [rax+0x18]
   140003d0d:	lea    rbx,[rax+0x18]
   140003d11:	mov    QWORD PTR [rsp+0x20],rbx
   140003d16:	mov    rbp,QWORD PTR [rsp+0xa8]
   140003d1e:	jmp    0x140003da3
   140003d23:	mov    esi,DWORD PTR [rbx-0x10]
   140003d26:	mov    r12,r15
   140003d29:	sub    r12,rbx
   140003d2c:	sar    r12,1
   140003d2f:	mov    ecx,0x1
   140003d34:	sub    ecx,DWORD PTR [rbx-0x8]
   140003d37:	mov    eax,DWORD PTR [rbx-0xc]
   140003d3a:	sub    eax,edi
   140003d3c:	or     eax,ecx
   140003d3e:	jge    0x140003d51
   140003d40:	mov    edx,edi
   140003d42:	lea    rcx,[rsp+0x20]
   140003d47:	call   0x1400015e0
   140003d4c:	mov    rbx,QWORD PTR [rsp+0x20]
   140003d51:	cmp    r12,rsi
   140003d54:	ja     0x140003d71
   140003d56:	movsxd rax,edi
   140003d59:	lea    rsi,[rax+rax*1]
   140003d5d:	lea    r8,[rbx+r12*2]
   140003d61:	mov    r9,rsi
   140003d64:	mov    rdx,rsi
   140003d67:	mov    rcx,rbx
   140003d6a:	call   0x140018fb0
   140003d6f:	jmp    0x140003d89
   140003d71:	movsxd rax,edi
   140003d74:	lea    rsi,[rax+rax*1]
   140003d78:	mov    r9,rsi
   140003d7b:	mov    r8,r15
   140003d7e:	mov    rdx,rsi
   140003d81:	mov    rcx,rbx
   140003d84:	call   0x140018ee0
   140003d89:	test   edi,edi
   140003d8b:	js     0x1400040cc
   140003d91:	cmp    edi,DWORD PTR [rbx-0xc]
   140003d94:	jg     0x1400040cc
   140003d9a:	mov    DWORD PTR [rbx-0x10],edi
   140003d9d:	mov    WORD PTR [rsi+rbx*1],0x0
   140003da3:	mov    DWORD PTR [rsp+0xa0],r13d
   140003dab:	mov    r12d,0x1
   140003db1:	lea    rax,[rbp-0x10]
   140003db5:	mov    QWORD PTR [rsp+0x38],rax
   140003dba:	data16 xchg ax,ax
   140003dbd:	data16 xchg ax,ax
   140003dc0:	test   r12d,r12d
   140003dc3:	js     0x140003df3
   140003dc5:	cmp    r12d,DWORD PTR [rax]
   140003dc8:	jg     0x140003df3
   140003dca:	movsxd rax,r12d
   140003dcd:	lea    rcx,[rbp+rax*2+0x0]
   140003dd2:	lea    rdx,[rip+0x32c2f]        # 0x140036a08
   140003dd9:	call   0x14001a0b0
   140003dde:	mov    r12,rax
   140003de1:	test   rax,rax
   140003de4:	jne    0x140003deb
   140003de6:	mov    r12d,r14d
   140003de9:	jmp    0x140003df6
   140003deb:	sub    r12,rbp
   140003dee:	sar    r12,1
   140003df1:	jmp    0x140003df6
   140003df3:	mov    r12d,r14d
   140003df6:	add    r12d,0x1
   140003dfa:	mov    r8d,r12d
   140003dfd:	lea    rdx,[rsp+0x30]
   140003e02:	lea    rcx,[rsp+0xa8]
   140003e0a:	call   0x140004910
   140003e0f:	nop
   140003e10:	mov    rbp,QWORD PTR [rax]
   140003e13:	lea    rsi,[rbp-0x18]
   140003e17:	lea    rdi,[rbx-0x18]
   140003e1b:	cmp    rsi,rdi
   140003e1e:	je     0x140003fb1
   140003e24:	cmp    DWORD PTR [rdi+0x10],0x0
   140003e28:	jl     0x140003ebe
   140003e2e:	mov    rcx,QWORD PTR [rsi]
   140003e31:	cmp    rcx,QWORD PTR [rdi]
   140003e34:	jne    0x140003ebe
   140003e3a:	mov    rax,QWORD PTR [rcx]
   140003e3d:	call   QWORD PTR [rax+0x20]
   140003e40:	mov    rcx,rax
   140003e43:	cmp    DWORD PTR [rsi+0x10],0x0
   140003e47:	jl     0x140003e58
   140003e49:	cmp    rax,QWORD PTR [rsi]
   140003e4c:	jne    0x140003e58
   140003e4e:	mov    rbx,rsi
   140003e51:	lock add DWORD PTR [rsi+0x10],0x1
   140003e56:	jmp    0x140003e95
   140003e58:	mov    rax,QWORD PTR [rax]
   140003e5b:	mov    r8d,0x2
   140003e61:	mov    edx,DWORD PTR [rsi+0x8]
   140003e64:	call   QWORD PTR [rax]
   140003e66:	mov    rbx,rax
   140003e69:	test   rax,rax
   140003e6c:	je     0x140004060
   140003e72:	mov    ecx,DWORD PTR [rsi+0x8]
   140003e75:	mov    DWORD PTR [rax+0x8],ecx
   140003e78:	mov    ecx,DWORD PTR [rsi+0x8]
   140003e7b:	add    ecx,0x1
   140003e7e:	movsxd rdx,ecx
   140003e81:	lea    r9,[rdx+rdx*1]
   140003e85:	lea    r8,[rsi+0x18]
   140003e89:	add    rdx,rdx
   140003e8c:	lea    rcx,[rax+0x18]
   140003e90:	call   0x140018ee0
   140003e95:	mov    eax,r14d
   140003e98:	lock xadd DWORD PTR [rdi+0x10],eax
   140003e9d:	add    eax,0xffffffff
   140003ea0:	test   eax,eax
   140003ea2:	jg     0x140003eb0
   140003ea4:	mov    rcx,QWORD PTR [rdi]
   140003ea7:	mov    rax,QWORD PTR [rcx]
   140003eaa:	mov    rdx,rdi
   140003ead:	call   QWORD PTR [rax+0x8]
   140003eb0:	lea    rax,[rbx+0x18]
   140003eb4:	mov    QWORD PTR [rsp+0x20],rax
   140003eb9:	jmp    0x140003fb1
   140003ebe:	movsxd rsi,DWORD PTR [rbp-0x10]
   140003ec2:	test   esi,esi
   140003ec4:	jne    0x140003f23
   140003ec6:	mov    rsi,QWORD PTR [rdi]
   140003ec9:	cmp    DWORD PTR [rdi+0x8],0x0
   140003ecd:	je     0x140003fb1
   140003ed3:	cmp    DWORD PTR [rdi+0x10],0x0
   140003ed7:	jge    0x140003ef1
   140003ed9:	cmp    DWORD PTR [rbx-0xc],0x0
   140003edd:	jl     0x140004066
   140003ee3:	mov    DWORD PTR [rbx-0x10],r13d
   140003ee7:	mov    WORD PTR [rbx],0x0
   140003eec:	jmp    0x140003fb1
   140003ef1:	mov    eax,r14d
   140003ef4:	lock xadd DWORD PTR [rdi+0x10],eax
   140003ef9:	add    eax,0xffffffff
   140003efc:	test   eax,eax
   140003efe:	jg     0x140003f0c
   140003f00:	mov    rcx,QWORD PTR [rdi]
   140003f03:	mov    rax,QWORD PTR [rcx]
   140003f06:	mov    rdx,rdi
   140003f09:	call   QWORD PTR [rax+0x8]
   140003f0c:	mov    rax,QWORD PTR [rsi]
   140003f0f:	mov    rcx,rsi
   140003f12:	call   QWORD PTR [rax+0x18]
   140003f15:	add    rax,0x18
   140003f19:	mov    QWORD PTR [rsp+0x20],rax
   140003f1e:	jmp    0x140003fb1
   140003f23:	test   rbp,rbp
   140003f26:	je     0x14000407c
   140003f2c:	mov    r15d,DWORD PTR [rbx-0x10]
   140003f30:	mov    r13,rbp
   140003f33:	sub    r13,rbx
   140003f36:	sar    r13,1
   140003f39:	mov    ecx,0x1
   140003f3e:	sub    ecx,DWORD PTR [rdi+0x10]
   140003f41:	mov    eax,DWORD PTR [rdi+0xc]
   140003f44:	sub    eax,esi
   140003f46:	or     eax,ecx
   140003f48:	jge    0x140003f5b
   140003f4a:	mov    edx,esi
   140003f4c:	lea    rcx,[rsp+0x20]
   140003f51:	call   0x1400015e0
   140003f56:	mov    rbx,QWORD PTR [rsp+0x20]
   140003f5b:	cmp    r13,r15
   140003f5e:	ja     0x140003f78
   140003f60:	lea    rdi,[rsi+rsi*1]
   140003f64:	lea    r8,[rbx+r13*2]
   140003f68:	mov    r9,rdi
   140003f6b:	mov    rdx,rdi
   140003f6e:	mov    rcx,rbx
   140003f71:	call   0x140018fb0
   140003f76:	jmp    0x140003f8d
   140003f78:	lea    rdi,[rsi+rsi*1]
   140003f7c:	mov    r9,rdi
   140003f7f:	mov    r8,rbp
   140003f82:	mov    rdx,rdi
   140003f85:	mov    rcx,rbx
   140003f88:	call   0x140018ee0
   140003f8d:	test   esi,esi
   140003f8f:	js     0x140004071
   140003f95:	cmp    esi,DWORD PTR [rbx-0xc]
   140003f98:	jg     0x140004071
   140003f9e:	mov    DWORD PTR [rbx-0x10],esi
   140003fa1:	mov    WORD PTR [rdi+rbx*1],0x0
   140003fa7:	xor    r13d,r13d
   140003faa:	lea    r15,[rip+0x3274f]        # 0x140036700
   140003fb1:	mov    rdx,QWORD PTR [rsp+0x30]
   140003fb6:	add    rdx,0xffffffffffffffe8
   140003fba:	mov    eax,r14d
   140003fbd:	lock xadd DWORD PTR [rdx+0x10],eax
   140003fc2:	add    eax,0xffffffff
   140003fc5:	test   eax,eax
   140003fc7:	jg     0x140003fd2
   140003fc9:	mov    rcx,QWORD PTR [rdx]
   140003fcc:	mov    rax,QWORD PTR [rcx]
   140003fcf:	call   QWORD PTR [rax+0x8]
   140003fd2:	xor    eax,eax
   140003fd4:	mov    rdi,r15
   140003fd7:	mov    rbx,QWORD PTR [rsp+0x20]
   140003fdc:	mov    rsi,rbx
   140003fdf:	mov    ecx,0x1
   140003fe4:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140003fe7:	je     0x140003fee
   140003fe9:	sbb    eax,eax
   140003feb:	sbb    eax,0xffffffff
   140003fee:	test   eax,eax
   140003ff0:	setne  al
   140003ff3:	test   al,al
   140003ff5:	je     0x140004042
   140003ff7:	xor    edx,edx
   140003ff9:	mov    rcx,rbx
   140003ffc:	call   QWORD PTR [rip+0x2d47e]        # 0x140031480
   140004002:	test   eax,eax
   140004004:	jne    0x140004023
   140004006:	call   QWORD PTR [rip+0x2d46c]        # 0x140031478
   14000400c:	cmp    eax,0xb7
   140004011:	je     0x140004039
   140004013:	cmp    eax,0x3
   140004016:	je     0x140004030
   140004018:	mov    edi,eax
   14000401a:	mov    DWORD PTR [rsp+0xa0],eax
   140004021:	jmp    0x140004049
   140004023:	mov    edi,r13d
   140004026:	mov    DWORD PTR [rsp+0xa0],r13d
   14000402e:	jmp    0x140004049
   140004030:	mov    edi,DWORD PTR [rsp+0xa0]
   140004037:	jmp    0x140004049
   140004039:	mov    edi,DWORD PTR [rsp+0xa0]
   140004040:	jmp    0x140004049
   140004042:	mov    edi,DWORD PTR [rsp+0xa0]
   140004049:	test   r12d,r12d
   14000404c:	jle    0x140004087
   14000404e:	mov    rbp,QWORD PTR [rsp+0xa8]
   140004056:	mov    rax,QWORD PTR [rsp+0x38]
   14000405b:	jmp    0x140003dc0
   140004060:	call   0x1400016f0
   140004065:	int3   
   140004066:	mov    ecx,0x80070057
   14000406b:	call   0x1400015c0
   140004070:	int3   
   140004071:	mov    ecx,0x80070057
   140004076:	call   0x1400015c0
   14000407b:	int3   
   14000407c:	mov    ecx,0x80070057
   140004081:	call   0x1400015c0
   140004086:	nop
   140004087:	lea    rdx,[rbx-0x18]
   14000408b:	mov    eax,r14d
   14000408e:	lock xadd DWORD PTR [rdx+0x10],eax
   140004093:	add    eax,0xffffffff
   140004096:	test   eax,eax
   140004098:	jg     0x1400040a4
   14000409a:	mov    rcx,QWORD PTR [rdx]
   14000409d:	mov    rax,QWORD PTR [rcx]
   1400040a0:	call   QWORD PTR [rax+0x8]
   1400040a3:	nop
   1400040a4:	mov    rdx,QWORD PTR [rsp+0xa8]
   1400040ac:	add    rdx,0xffffffffffffffe8
   1400040b0:	lock xadd DWORD PTR [rdx+0x10],r14d
   1400040b6:	add    r14d,0xffffffff
   1400040ba:	test   r14d,r14d
   1400040bd:	jg     0x1400040c8
   1400040bf:	mov    rcx,QWORD PTR [rdx]
   1400040c2:	mov    rax,QWORD PTR [rcx]
   1400040c5:	call   QWORD PTR [rax+0x8]
   1400040c8:	mov    eax,edi
   1400040ca:	jmp    0x1400040d7
   1400040cc:	mov    ecx,0x80070057
   1400040d1:	call   0x1400015c0
   1400040d6:	nop
   1400040d7:	mov    rbx,QWORD PTR [rsp+0x90]
   1400040df:	add    rsp,0x50
   1400040e3:	pop    r15
   1400040e5:	pop    r14
   1400040e7:	pop    r13
   1400040e9:	pop    r12
   1400040eb:	pop    rdi
   1400040ec:	pop    rsi
   1400040ed:	pop    rbp
   1400040ee:	ret    
   1400040ef:	int3   
   1400040f0:	rex push rbp
   1400040f2:	sub    rsp,0x20
   1400040f6:	mov    rbp,rdx
   1400040f9:	lea    rcx,[rbp+0xa8]
   140004100:	call   0x140001dc0
   140004105:	add    rsp,0x20
   140004109:	pop    rbp
   14000410a:	ret    
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	rex push rbp
   140004112:	sub    rsp,0x20
   140004116:	mov    rbp,rdx
   140004119:	lea    rcx,[rbp+0xa8]
   140004120:	call   0x140001dc0
   140004125:	add    rsp,0x20
   140004129:	pop    rbp
   14000412a:	ret    
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	rex push rbp
   140004132:	sub    rsp,0x20
   140004136:	mov    rbp,rdx
   140004139:	lea    rcx,[rbp+0x28]
   14000413d:	call   0x140001dc0
   140004142:	add    rsp,0x20
   140004146:	pop    rbp
   140004147:	ret    
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	rex push rbp
   140004152:	sub    rsp,0x20
   140004156:	mov    rbp,rdx
   140004159:	lea    rcx,[rbp+0x20]
   14000415d:	call   0x140001dc0
   140004162:	add    rsp,0x20
   140004166:	pop    rbp
   140004167:	ret    
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	rex push rbp
   140004172:	sub    rsp,0x20
   140004176:	mov    rbp,rdx
   140004179:	lea    rcx,[rbp+0x20]
   14000417d:	call   0x140001dc0
   140004182:	add    rsp,0x20
   140004186:	pop    rbp
   140004187:	ret    
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	rex push rbp
   140004192:	sub    rsp,0x20
   140004196:	mov    rbp,rdx
   140004199:	lea    rcx,[rbp+0x30]
   14000419d:	call   0x140001dc0
   1400041a2:	add    rsp,0x20
   1400041a6:	pop    rbp
   1400041a7:	ret    
   1400041a8:	int3   
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	mov    rax,rsp
   1400041b3:	push   rsi
   1400041b4:	push   rdi
   1400041b5:	push   r12
   1400041b7:	push   r13
   1400041b9:	push   r14
   1400041bb:	sub    rsp,0x250
   1400041c2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400041cb:	mov    QWORD PTR [rax+0x10],rbx
   1400041cf:	mov    QWORD PTR [rax+0x18],rbp
   1400041d3:	mov    rax,QWORD PTR [rip+0x3bdf6]        # 0x14003ffd0
   1400041da:	xor    rax,rsp
   1400041dd:	mov    QWORD PTR [rsp+0x240],rax
   1400041e5:	mov    r14,rcx
   1400041e8:	xor    dil,dil
   1400041eb:	mov    WORD PTR [rsp+0x30],0x0
   1400041f2:	xor    edx,edx
   1400041f4:	mov    r8d,0x206
   1400041fa:	lea    rcx,[rsp+0x32]
   1400041ff:	call   0x14001b520
   140004204:	lea    rdx,[rsp+0x30]
   140004209:	mov    ecx,0x104
   14000420e:	call   QWORD PTR [rip+0x2d25c]        # 0x140031470
   140004214:	test   eax,eax
   140004216:	je     0x1400044b4
   14000421c:	call   0x14000669c
   140004221:	mov    rdx,rax
   140004224:	xor    ecx,ecx
   140004226:	test   rax,rax
   140004229:	setne  cl
   14000422c:	test   ecx,ecx
   14000422e:	jne    0x14000423b
   140004230:	mov    ecx,0x80004005
   140004235:	call   0x1400015c0
   14000423a:	int3   
   14000423b:	mov    rax,QWORD PTR [rax]
   14000423e:	mov    rcx,rdx
   140004241:	call   QWORD PTR [rax+0x18]
   140004244:	lea    rbx,[rax+0x18]
   140004248:	mov    QWORD PTR [rsp+0x20],rbx
   14000424d:	lea    rcx,[rsp+0x30]
   140004252:	lea    rax,[rsp+0x30]
   140004257:	mov    r12d,0x1
   14000425d:	or     r13,0xffffffffffffffff
   140004261:	test   rax,0xffffffffffff0000
   140004267:	jne    0x140004296
   140004269:	movzx  edi,cx
   14000426c:	mov    ecx,edi
   14000426e:	call   0x140006688
   140004273:	test   rax,rax
   140004276:	je     0x140004391
   14000427c:	mov    r8d,edi
   14000427f:	mov    rdx,rax
   140004282:	lea    rcx,[rsp+0x20]
   140004287:	call   0x140001ba0
   14000428c:	mov    rbx,QWORD PTR [rsp+0x20]
   140004291:	jmp    0x140004391
   140004296:	xor    eax,eax
   140004298:	mov    rcx,r13
   14000429b:	lea    rdi,[rsp+0x30]
   1400042a0:	repnz scas ax,WORD PTR es:[rdi]
   1400042a3:	not    rcx
   1400042a6:	sub    rcx,r12
   1400042a9:	mov    rdi,rcx
   1400042ac:	test   ecx,ecx
   1400042ae:	jne    0x14000430f
   1400042b0:	lea    rdx,[rbx-0x18]
   1400042b4:	mov    rdi,QWORD PTR [rdx]
   1400042b7:	cmp    DWORD PTR [rdx+0x8],eax
   1400042ba:	je     0x140004391
   1400042c0:	cmp    DWORD PTR [rdx+0x10],eax
   1400042c3:	jge    0x1400042e0
   1400042c5:	cmp    DWORD PTR [rbx-0xc],eax
   1400042c8:	jge    0x1400042d5
   1400042ca:	mov    ecx,0x80070057
   1400042cf:	call   0x1400015c0
   1400042d4:	int3   
   1400042d5:	mov    DWORD PTR [rbx-0x10],eax
   1400042d8:	mov    WORD PTR [rbx],ax
   1400042db:	jmp    0x140004391
   1400042e0:	mov    eax,r13d
   1400042e3:	lock xadd DWORD PTR [rdx+0x10],eax
   1400042e8:	add    eax,0xffffffff
   1400042eb:	test   eax,eax
   1400042ed:	jg     0x1400042f8
   1400042ef:	mov    rcx,QWORD PTR [rdx]
   1400042f2:	mov    rax,QWORD PTR [rcx]
   1400042f5:	call   QWORD PTR [rax+0x8]
   1400042f8:	mov    rax,QWORD PTR [rdi]
   1400042fb:	mov    rcx,rdi
   1400042fe:	call   QWORD PTR [rax+0x18]
   140004301:	lea    rbx,[rax+0x18]
   140004305:	mov    QWORD PTR [rsp+0x20],rbx
   14000430a:	jmp    0x140004391
   14000430f:	mov    esi,DWORD PTR [rbx-0x10]
   140004312:	lea    rbp,[rsp+0x30]
   140004317:	sub    rbp,rbx
   14000431a:	sar    rbp,1
   14000431d:	mov    ecx,r12d
   140004320:	sub    ecx,DWORD PTR [rbx-0x8]
   140004323:	mov    eax,DWORD PTR [rbx-0xc]
   140004326:	sub    eax,edi
   140004328:	or     eax,ecx
   14000432a:	jge    0x14000433d
   14000432c:	mov    edx,edi
   14000432e:	lea    rcx,[rsp+0x20]
   140004333:	call   0x1400015e0
   140004338:	mov    rbx,QWORD PTR [rsp+0x20]
   14000433d:	cmp    rbp,rsi
   140004340:	ja     0x14000435d
   140004342:	movsxd rax,edi
   140004345:	lea    rsi,[rax+rax*1]
   140004349:	lea    r8,[rbx+rbp*2]
   14000434d:	mov    r9,rsi
   140004350:	mov    rdx,rsi
   140004353:	mov    rcx,rbx
   140004356:	call   0x140018fb0
   14000435b:	jmp    0x140004377
   14000435d:	movsxd rax,edi
   140004360:	lea    rsi,[rax+rax*1]
   140004364:	mov    r9,rsi
   140004367:	lea    r8,[rsp+0x30]
   14000436c:	mov    rdx,rsi
   14000436f:	mov    rcx,rbx
   140004372:	call   0x140018ee0
   140004377:	test   edi,edi
   140004379:	js     0x1400044a9
   14000437f:	cmp    edi,DWORD PTR [rbx-0xc]
   140004382:	jg     0x1400044a9
   140004388:	mov    DWORD PTR [rbx-0x10],edi
   14000438b:	mov    WORD PTR [rsi+rbx*1],0x0
   140004391:	mov    rsi,rbx
   140004394:	xor    edi,edi
   140004396:	cmp    WORD PTR [rbx],di
   140004399:	je     0x140004417
   14000439b:	xchg   ax,ax
   14000439d:	data16 xchg ax,ax
   1400043a0:	movzx  edx,WORD PTR [rsi]
   1400043a3:	lea    rcx,[rip+0x3265e]        # 0x140036a08
   1400043aa:	call   0x14001a080
   1400043af:	test   rax,rax
   1400043b2:	je     0x1400043be
   1400043b4:	test   rdi,rdi
   1400043b7:	jne    0x1400043c0
   1400043b9:	mov    rdi,rsi
   1400043bc:	jmp    0x1400043c0
   1400043be:	xor    edi,edi
   1400043c0:	add    rsi,0x2
   1400043c4:	cmp    WORD PTR [rsi],0x0
   1400043c8:	jne    0x1400043a0
   1400043ca:	test   rdi,rdi
   1400043cd:	je     0x140004417
   1400043cf:	sub    rdi,rbx
   1400043d2:	sar    rdi,1
   1400043d5:	mov    ecx,r12d
   1400043d8:	sub    ecx,DWORD PTR [rbx-0x8]
   1400043db:	mov    eax,DWORD PTR [rbx-0xc]
   1400043de:	sub    eax,edi
   1400043e0:	or     eax,ecx
   1400043e2:	jge    0x1400043f5
   1400043e4:	mov    edx,edi
   1400043e6:	lea    rcx,[rsp+0x20]
   1400043eb:	call   0x1400015e0
   1400043f0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400043f5:	test   edi,edi
   1400043f7:	js     0x14000440c
   1400043f9:	cmp    edi,DWORD PTR [rbx-0xc]
   1400043fc:	jg     0x14000440c
   1400043fe:	mov    DWORD PTR [rbx-0x10],edi
   140004401:	movsxd rax,edi
   140004404:	mov    WORD PTR [rbx+rax*2],0x0
   14000440a:	jmp    0x140004417
   14000440c:	mov    ecx,0x80070057
   140004411:	call   0x1400015c0
   140004416:	int3   
   140004417:	mov    esi,DWORD PTR [rbx-0x10]
   14000441a:	lea    edi,[rsi+0x1]
   14000441d:	sub    r12d,DWORD PTR [rbx-0x8]
   140004421:	mov    eax,DWORD PTR [rbx-0xc]
   140004424:	sub    eax,edi
   140004426:	or     eax,r12d
   140004429:	jge    0x14000443c
   14000442b:	mov    edx,edi
   14000442d:	lea    rcx,[rsp+0x20]
   140004432:	call   0x1400015e0
   140004437:	mov    rbx,QWORD PTR [rsp+0x20]
   14000443c:	mov    WORD PTR [rbx+rsi*2],0x5c
   140004442:	test   edi,edi
   140004444:	js     0x14000449e
   140004446:	cmp    edi,DWORD PTR [rbx-0xc]
   140004449:	jg     0x14000449e
   14000444b:	mov    DWORD PTR [rbx-0x10],edi
   14000444e:	movsxd rax,edi
   140004451:	mov    WORD PTR [rbx+rax*2],0x0
   140004457:	mov    DWORD PTR [r14+0x10],0x0
   14000445f:	xor    eax,eax
   140004461:	mov    rcx,r13
   140004464:	mov    rdi,rbx
   140004467:	repnz scas ax,WORD PTR es:[rdi]
   14000446a:	not    rcx
   14000446d:	lea    r8d,[rcx-0x1]
   140004471:	lea    rcx,[r14+0x8]
   140004475:	mov    rdx,rbx
   140004478:	call   0x140001840
   14000447d:	mov    dil,0x1
   140004480:	lea    rdx,[rbx-0x18]
   140004484:	lock xadd DWORD PTR [rdx+0x10],r13d
   14000448a:	add    r13d,0xffffffff
   14000448e:	test   r13d,r13d
   140004491:	jg     0x1400044b4
   140004493:	mov    rcx,QWORD PTR [rdx]
   140004496:	mov    rax,QWORD PTR [rcx]
   140004499:	call   QWORD PTR [rax+0x8]
   14000449c:	jmp    0x1400044b4
   14000449e:	mov    ecx,0x80070057
   1400044a3:	call   0x1400015c0
   1400044a8:	nop
   1400044a9:	mov    ecx,0x80070057
   1400044ae:	call   0x1400015c0
   1400044b3:	nop
   1400044b4:	mov    al,dil
   1400044b7:	mov    rcx,QWORD PTR [rsp+0x240]
   1400044bf:	xor    rcx,rsp
   1400044c2:	call   0x140019370
   1400044c7:	lea    r11,[rsp+0x250]
   1400044cf:	mov    rbx,QWORD PTR [r11+0x38]
   1400044d3:	mov    rbp,QWORD PTR [r11+0x40]
   1400044d7:	mov    rsp,r11
   1400044da:	pop    r14
   1400044dc:	pop    r13
   1400044de:	pop    r12
   1400044e0:	pop    rdi
   1400044e1:	pop    rsi
   1400044e2:	ret    
   1400044e3:	int3   
   1400044e4:	int3   
   1400044e5:	int3   
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	int3   
   1400044ed:	int3   
   1400044ee:	int3   
   1400044ef:	int3   
   1400044f0:	rex push rbp
   1400044f2:	sub    rsp,0x20
   1400044f6:	mov    rbp,rdx
   1400044f9:	lea    rcx,[rbp+0x20]
   1400044fd:	call   0x140001dc0
   140004502:	add    rsp,0x20
   140004506:	pop    rbp
   140004507:	ret    
   140004508:	int3   
   140004509:	int3   
   14000450a:	int3   
   14000450b:	int3   
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	rex push rbp
   140004512:	sub    rsp,0x20
   140004516:	mov    rbp,rdx
   140004519:	lea    rcx,[rbp+0x20]
   14000451d:	call   0x140001dc0
   140004522:	add    rsp,0x20
   140004526:	pop    rbp
   140004527:	ret    
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	mov    QWORD PTR [rsp+0x10],rdx
   140004535:	push   rsi
   140004536:	push   rdi
   140004537:	push   r12
   140004539:	push   r13
   14000453b:	push   r14
   14000453d:	sub    rsp,0x30
   140004541:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000454a:	mov    QWORD PTR [rsp+0x60],rbx
   14000454f:	mov    QWORD PTR [rsp+0x70],rbp
   140004554:	mov    rbp,r9
   140004557:	mov    rdi,r8
   14000455a:	mov    rbx,rdx
   14000455d:	mov    rsi,rcx
   140004560:	mov    DWORD PTR [rsp+0x78],0x0
   140004568:	movsxd rax,DWORD PTR [r9]
   14000456b:	test   eax,eax
   14000456d:	jns    0x14000457a
   14000456f:	mov    ecx,0x80070057
   140004574:	call   0x1400015c0
   140004579:	int3   
   14000457a:	test   r8,r8
   14000457d:	je     0x1400045e9
   14000457f:	cmp    WORD PTR [r8],0x0
   140004584:	je     0x1400045e9
   140004586:	mov    rcx,QWORD PTR [rcx]
   140004589:	lea    r12,[rcx+rax*2]
   14000458d:	movsxd rax,DWORD PTR [rcx-0x10]
   140004591:	lea    r13,[rcx+rax*2]
   140004595:	cmp    r12,r13
   140004598:	jae    0x1400046a7
   14000459e:	mov    rdx,r8
   1400045a1:	mov    rcx,r12
   1400045a4:	call   0x140019fe0
   1400045a9:	mov    r14,rax
   1400045ac:	movsxd rcx,eax
   1400045af:	lea    rcx,[r12+rcx*2]
   1400045b3:	cmp    rcx,r13
   1400045b6:	jae    0x1400046a7
   1400045bc:	mov    rdx,rdi
   1400045bf:	call   0x14001a030
   1400045c4:	mov    ecx,DWORD PTR [rbp+0x0]
   1400045c7:	lea    r8d,[r14+rcx*1]
   1400045cb:	lea    ecx,[r8+rax*1+0x1]
   1400045d0:	mov    DWORD PTR [rbp+0x0],ecx
   1400045d3:	mov    r9d,eax
   1400045d6:	mov    rdx,rbx
   1400045d9:	mov    rcx,rsi
   1400045dc:	call   0x140004760
   1400045e1:	mov    rax,rbx
   1400045e4:	jmp    0x1400046f9
   1400045e9:	mov    rcx,QWORD PTR [rcx]
   1400045ec:	cmp    eax,DWORD PTR [rcx-0x10]
   1400045ef:	jge    0x1400046a7
   1400045f5:	mov    rcx,QWORD PTR [rcx-0x18]
   1400045f9:	test   rcx,rcx
   1400045fc:	je     0x14000460c
   1400045fe:	mov    rax,QWORD PTR [rcx]
   140004601:	call   QWORD PTR [rax+0x20]
   140004604:	mov    rdi,rax
   140004607:	test   rax,rax
   14000460a:	jne    0x14000461d
   14000460c:	call   0x14000669c
   140004611:	mov    rdx,QWORD PTR [rax]
   140004614:	mov    rcx,rax
   140004617:	call   QWORD PTR [rdx+0x20]
   14000461a:	mov    rdi,rax
   14000461d:	mov    rdx,QWORD PTR [rsi]
   140004620:	movsxd rcx,DWORD PTR [rbp+0x0]
   140004624:	lea    rsi,[rdx+rcx*2]
   140004628:	xor    ecx,ecx
   14000462a:	test   rdi,rdi
   14000462d:	setne  cl
   140004630:	test   ecx,ecx
   140004632:	jne    0x14000463f
   140004634:	mov    ecx,0x80004005
   140004639:	call   0x1400015c0
   14000463e:	int3   
   14000463f:	mov    rax,QWORD PTR [rdi]
   140004642:	mov    rcx,rdi
   140004645:	call   QWORD PTR [rax+0x18]
   140004648:	add    rax,0x18
   14000464c:	mov    QWORD PTR [rbx],rax
   14000464f:	test   rsi,rsi
   140004652:	je     0x140004691
   140004654:	test   rsi,0xffffffffffff0000
   14000465b:	jne    0x14000467c
   14000465d:	movzx  edi,si
   140004660:	mov    ecx,edi
   140004662:	call   0x140006688
   140004667:	test   rax,rax
   14000466a:	je     0x1400046a2
   14000466c:	mov    r8d,edi
   14000466f:	mov    rdx,rax
   140004672:	mov    rcx,rbx
   140004675:	call   0x140001ba0
   14000467a:	jmp    0x1400046a2
   14000467c:	xor    eax,eax
   14000467e:	or     rcx,0xffffffffffffffff
   140004682:	mov    rdi,rsi
   140004685:	repnz scas ax,WORD PTR es:[rdi]
   140004688:	not    rcx
   14000468b:	sub    rcx,0x1
   14000468f:	jmp    0x140004693
   140004691:	xor    ecx,ecx
   140004693:	mov    r8d,ecx
   140004696:	mov    rdx,rsi
   140004699:	mov    rcx,rbx
   14000469c:	call   0x140001840
   1400046a1:	nop
   1400046a2:	mov    rax,rbx
   1400046a5:	jmp    0x1400046f9
   1400046a7:	mov    DWORD PTR [rbp+0x0],0xffffffff
   1400046ae:	mov    rax,QWORD PTR [rsi]
   1400046b1:	mov    rcx,QWORD PTR [rax-0x18]
   1400046b5:	test   rcx,rcx
   1400046b8:	je     0x1400046c8
   1400046ba:	mov    rax,QWORD PTR [rcx]
   1400046bd:	call   QWORD PTR [rax+0x20]
   1400046c0:	mov    rcx,rax
   1400046c3:	test   rax,rax
   1400046c6:	jne    0x1400046d9
   1400046c8:	call   0x14000669c
   1400046cd:	mov    rdx,QWORD PTR [rax]
   1400046d0:	mov    rcx,rax
   1400046d3:	call   QWORD PTR [rdx+0x20]
   1400046d6:	mov    rcx,rax
   1400046d9:	test   rcx,rcx
   1400046dc:	jne    0x1400046e9
   1400046de:	mov    ecx,0x80004005
   1400046e3:	call   0x1400015c0
   1400046e8:	int3   
   1400046e9:	mov    rax,QWORD PTR [rcx]
   1400046ec:	call   QWORD PTR [rax+0x18]
   1400046ef:	add    rax,0x18
   1400046f3:	mov    QWORD PTR [rbx],rax
   1400046f6:	mov    rax,rbx
   1400046f9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400046fe:	mov    rbp,QWORD PTR [rsp+0x70]
   140004703:	add    rsp,0x30
   140004707:	pop    r14
   140004709:	pop    r13
   14000470b:	pop    r12
   14000470d:	pop    rdi
   14000470e:	pop    rsi
   14000470f:	ret    
   140004710:	rex push rbp
   140004712:	sub    rsp,0x20
   140004716:	mov    rbp,rdx
   140004719:	mov    rcx,QWORD PTR [rbp+0x68]
   14000471d:	call   0x140001dc0
   140004722:	add    rsp,0x20
   140004726:	pop    rbp
   140004727:	ret    
   140004728:	int3   
   140004729:	int3   
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	rex push rbx
   140004732:	sub    rsp,0x20
   140004736:	mov    rax,QWORD PTR [rcx]
   140004739:	mov    rbx,rdx
   14000473c:	mov    DWORD PTR [rsp+0x40],0x0
   140004744:	mov    r9d,DWORD PTR [rax-0x10]
   140004748:	sub    r9d,r8d
   14000474b:	call   0x140004760
   140004750:	mov    rax,rbx
   140004753:	add    rsp,0x20
   140004757:	pop    rbx
   140004758:	ret    
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	mov    QWORD PTR [rsp+0x8],rbx
   140004765:	mov    QWORD PTR [rsp+0x10],rbp
   14000476a:	mov    QWORD PTR [rsp+0x20],rsi
   14000476f:	push   rdi
   140004770:	sub    rsp,0x20
   140004774:	mov    edi,r8d
   140004777:	xor    r8d,r8d
   14000477a:	mov    ebx,r9d
   14000477d:	test   edi,edi
   14000477f:	mov    eax,0x7fffffff
   140004784:	mov    rsi,rdx
   140004787:	cmovs  edi,r8d
   14000478b:	test   r9d,r9d
   14000478e:	mov    rbp,rcx
   140004791:	cmovs  ebx,r8d
   140004795:	sub    eax,edi
   140004797:	mov    DWORD PTR [rsp+0x40],r8d
   14000479c:	cmp    eax,ebx
   14000479e:	jl     0x140004900
   1400047a4:	mov    rdx,QWORD PTR [rcx]
   1400047a7:	lea    eax,[rdi+rbx*1]
   1400047aa:	mov    ecx,DWORD PTR [rdx-0x10]
   1400047ad:	cmp    eax,ecx
   1400047af:	jle    0x1400047b5
   1400047b1:	mov    ebx,ecx
   1400047b3:	sub    ebx,edi
   1400047b5:	cmp    edi,ecx
   1400047b7:	cmovg  ebx,r8d
   1400047bb:	test   edi,edi
   1400047bd:	jne    0x14000484d
   1400047c3:	cmp    ebx,ecx
   1400047c5:	jne    0x14000484d
   1400047cb:	mov    rcx,QWORD PTR [rdx-0x18]
   1400047cf:	lea    rbx,[rdx-0x18]
   1400047d3:	mov    rax,QWORD PTR [rcx]
   1400047d6:	call   QWORD PTR [rax+0x20]
   1400047d9:	cmp    DWORD PTR [rbx+0x10],edi
   1400047dc:	mov    rcx,rax
   1400047df:	jl     0x1400047f0
   1400047e1:	cmp    rax,QWORD PTR [rbx]
   1400047e4:	jne    0x1400047f0
   1400047e6:	mov    rdi,rbx
   1400047e9:	lock add DWORD PTR [rbx+0x10],0x1
   1400047ee:	jmp    0x14000482e
   1400047f0:	mov    rax,QWORD PTR [rax]
   1400047f3:	mov    edx,DWORD PTR [rbx+0x8]
   1400047f6:	mov    r8d,0x2
   1400047fc:	call   QWORD PTR [rax]
   1400047fe:	test   rax,rax
   140004801:	mov    rdi,rax
   140004804:	jne    0x14000480c
   140004806:	call   0x1400016f0
   14000480b:	int3   
   14000480c:	mov    eax,DWORD PTR [rbx+0x8]
   14000480f:	lea    r8,[rbx+0x18]
   140004813:	lea    rcx,[rdi+0x18]
   140004817:	mov    DWORD PTR [rdi+0x8],eax
   14000481a:	mov    eax,DWORD PTR [rbx+0x8]
   14000481d:	add    eax,0x1
   140004820:	movsxd rdx,eax
   140004823:	add    rdx,rdx
   140004826:	mov    r9,rdx
   140004829:	call   0x140018ee0
   14000482e:	lea    rax,[rdi+0x18]
   140004832:	mov    QWORD PTR [rsi],rax
   140004835:	mov    rbx,QWORD PTR [rsp+0x30]
   14000483a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000483f:	mov    rax,rsi
   140004842:	mov    rsi,QWORD PTR [rsp+0x48]
   140004847:	add    rsp,0x20
   14000484b:	pop    rdi
   14000484c:	ret    
   14000484d:	mov    rcx,QWORD PTR [rdx-0x18]
   140004851:	test   rcx,rcx
   140004854:	je     0x140004864
   140004856:	mov    rax,QWORD PTR [rcx]
   140004859:	call   QWORD PTR [rax+0x20]
   14000485c:	test   rax,rax
   14000485f:	mov    r11,rax
   140004862:	jne    0x140004875
   140004864:	call   0x14000669c
   140004869:	mov    rcx,rax
   14000486c:	mov    rdx,QWORD PTR [rax]
   14000486f:	call   QWORD PTR [rdx+0x20]
   140004872:	mov    r11,rax
   140004875:	test   r11,r11
   140004878:	mov    rcx,QWORD PTR [rbp+0x0]
   14000487c:	movsxd rdx,edi
   14000487f:	lea    rdi,[rcx+rdx*2]
   140004883:	jne    0x140004890
   140004885:	mov    ecx,0x80004005
   14000488a:	call   0x1400015c0
   14000488f:	int3   
   140004890:	test   rdi,rdi
   140004893:	jne    0x1400048a4
   140004895:	test   ebx,ebx
   140004897:	je     0x1400048a4
   140004899:	mov    ecx,0x80070057
   14000489e:	call   0x1400015c0
   1400048a3:	int3   
   1400048a4:	mov    rax,QWORD PTR [r11]
   1400048a7:	mov    r8d,0x2
   1400048ad:	mov    edx,ebx
   1400048af:	mov    rcx,r11
   1400048b2:	call   QWORD PTR [rax]
   1400048b4:	test   rax,rax
   1400048b7:	jne    0x1400048bf
   1400048b9:	call   0x1400016f0
   1400048be:	int3   
   1400048bf:	add    rax,0x18
   1400048c3:	test   ebx,ebx
   1400048c5:	mov    QWORD PTR [rsi],rax
   1400048c8:	js     0x1400048f5
   1400048ca:	cmp    ebx,DWORD PTR [rax-0xc]
   1400048cd:	jg     0x1400048f5
   1400048cf:	mov    DWORD PTR [rax-0x10],ebx
   1400048d2:	movsxd rax,ebx
   1400048d5:	mov    r8,rdi
   1400048d8:	lea    rdx,[rax+rax*1]
   1400048dc:	mov    rax,QWORD PTR [rsi]
   1400048df:	mov    WORD PTR [rdx+rax*1],0x0
   1400048e5:	mov    rcx,QWORD PTR [rsi]
   1400048e8:	mov    r9,rdx
   1400048eb:	call   0x140018ee0
   1400048f0:	jmp    0x140004835
   1400048f5:	mov    ecx,0x80070057
   1400048fa:	call   0x1400015c0
   1400048ff:	int3   
   140004900:	mov    ecx,0x80070057
   140004905:	call   0x1400015c0
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	mov    QWORD PTR [rsp+0x8],rbx
   140004915:	mov    QWORD PTR [rsp+0x10],rsi
   14000491a:	push   rdi
   14000491b:	sub    rsp,0x20
   14000491f:	xor    eax,eax
   140004921:	test   r8d,r8d
   140004924:	mov    rsi,rcx
   140004927:	mov    rcx,QWORD PTR [rcx]
   14000492a:	mov    ebx,r8d
   14000492d:	mov    rdi,rdx
   140004930:	cmovs  ebx,eax
   140004933:	mov    DWORD PTR [rsp+0x40],eax
   140004937:	cmp    ebx,DWORD PTR [rcx-0x10]
   14000493a:	jl     0x1400049ba
   14000493c:	lea    rbx,[rcx-0x18]
   140004940:	mov    rcx,QWORD PTR [rcx-0x18]
   140004944:	mov    rax,QWORD PTR [rcx]
   140004947:	call   QWORD PTR [rax+0x20]
   14000494a:	cmp    DWORD PTR [rbx+0x10],0x0
   14000494e:	mov    rcx,rax
   140004951:	jl     0x140004962
   140004953:	cmp    rax,QWORD PTR [rbx]
   140004956:	jne    0x140004962
   140004958:	mov    rsi,rbx
   14000495b:	lock add DWORD PTR [rbx+0x10],0x1
   140004960:	jmp    0x1400049a0
   140004962:	mov    rax,QWORD PTR [rax]
   140004965:	mov    edx,DWORD PTR [rbx+0x8]
   140004968:	mov    r8d,0x2
   14000496e:	call   QWORD PTR [rax]
   140004970:	test   rax,rax
   140004973:	mov    rsi,rax
   140004976:	jne    0x14000497e
   140004978:	call   0x1400016f0
   14000497d:	int3   
   14000497e:	mov    eax,DWORD PTR [rbx+0x8]
   140004981:	lea    r8,[rbx+0x18]
   140004985:	lea    rcx,[rsi+0x18]
   140004989:	mov    DWORD PTR [rsi+0x8],eax
   14000498c:	mov    eax,DWORD PTR [rbx+0x8]
   14000498f:	add    eax,0x1
   140004992:	movsxd rdx,eax
   140004995:	add    rdx,rdx
   140004998:	mov    r9,rdx
   14000499b:	call   0x140018ee0
   1400049a0:	lea    rax,[rsi+0x18]
   1400049a4:	mov    QWORD PTR [rdi],rax
   1400049a7:	mov    rax,rdi
   1400049aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049af:	mov    rsi,QWORD PTR [rsp+0x38]
   1400049b4:	add    rsp,0x20
   1400049b8:	pop    rdi
   1400049b9:	ret    
   1400049ba:	mov    rcx,QWORD PTR [rcx-0x18]
   1400049be:	test   rcx,rcx
   1400049c1:	je     0x1400049d1
   1400049c3:	mov    rax,QWORD PTR [rcx]
   1400049c6:	call   QWORD PTR [rax+0x20]
   1400049c9:	test   rax,rax
   1400049cc:	mov    rcx,rax
   1400049cf:	jne    0x1400049e2
   1400049d1:	call   0x14000669c
   1400049d6:	mov    rcx,rax
   1400049d9:	mov    rdx,QWORD PTR [rax]
   1400049dc:	call   QWORD PTR [rdx+0x20]
   1400049df:	mov    rcx,rax
   1400049e2:	test   rcx,rcx
   1400049e5:	mov    rsi,QWORD PTR [rsi]
   1400049e8:	jne    0x1400049f5
   1400049ea:	mov    ecx,0x80004005
   1400049ef:	call   0x1400015c0
   1400049f4:	int3   
   1400049f5:	test   rsi,rsi
   1400049f8:	jne    0x140004a09
   1400049fa:	test   ebx,ebx
   1400049fc:	je     0x140004a09
   1400049fe:	mov    ecx,0x80070057
   140004a03:	call   0x1400015c0
   140004a08:	int3   
   140004a09:	mov    rax,QWORD PTR [rcx]
   140004a0c:	mov    r8d,0x2
   140004a12:	mov    edx,ebx
   140004a14:	call   QWORD PTR [rax]
   140004a16:	test   rax,rax
   140004a19:	jne    0x140004a21
   140004a1b:	call   0x1400016f0
   140004a20:	int3   
   140004a21:	add    rax,0x18
   140004a25:	test   ebx,ebx
   140004a27:	mov    QWORD PTR [rdi],rax
   140004a2a:	js     0x140004a65
   140004a2c:	cmp    ebx,DWORD PTR [rax-0xc]
   140004a2f:	jg     0x140004a65
   140004a31:	mov    DWORD PTR [rax-0x10],ebx
   140004a34:	movsxd rax,ebx
   140004a37:	mov    r8,rsi
   140004a3a:	lea    rdx,[rax+rax*1]
   140004a3e:	mov    rax,QWORD PTR [rdi]
   140004a41:	mov    WORD PTR [rdx+rax*1],0x0
   140004a47:	mov    rcx,QWORD PTR [rdi]
   140004a4a:	mov    r9,rdx
   140004a4d:	call   0x140018ee0
   140004a52:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a57:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a5c:	mov    rax,rdi
   140004a5f:	add    rsp,0x20
   140004a63:	pop    rdi
   140004a64:	ret    
   140004a65:	mov    ecx,0x80070057
   140004a6a:	call   0x1400015c0
   140004a6f:	int3   
   140004a70:	mov    QWORD PTR [rsp+0x8],rcx
   140004a75:	push   rsi
   140004a76:	push   rdi
   140004a77:	push   r12
   140004a79:	push   r13
   140004a7b:	push   r14
   140004a7d:	sub    rsp,0x30
   140004a81:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a8a:	mov    QWORD PTR [rsp+0x70],rbx
   140004a8f:	mov    QWORD PTR [rsp+0x78],rbp
   140004a94:	mov    r13,r8
   140004a97:	mov    rbx,rdx
   140004a9a:	mov    rsi,rcx
   140004a9d:	xor    r12d,r12d
   140004aa0:	mov    DWORD PTR [rsp+0x68],r12d
   140004aa5:	mov    rax,QWORD PTR [rdx]
   140004aa8:	mov    rcx,QWORD PTR [rax-0x18]
   140004aac:	test   rcx,rcx
   140004aaf:	je     0x140004abf
   140004ab1:	mov    rax,QWORD PTR [rcx]
   140004ab4:	call   QWORD PTR [rax+0x20]
   140004ab7:	mov    rdx,rax
   140004aba:	test   rax,rax
   140004abd:	jne    0x140004ad0
   140004abf:	call   0x14000669c
   140004ac4:	mov    rdx,QWORD PTR [rax]
   140004ac7:	mov    rcx,rax
   140004aca:	call   QWORD PTR [rdx+0x20]
   140004acd:	mov    rdx,rax
   140004ad0:	mov    ecx,r12d
   140004ad3:	test   rdx,rdx
   140004ad6:	setne  cl
   140004ad9:	test   ecx,ecx
   140004adb:	jne    0x140004ae8
   140004add:	mov    ecx,0x80004005
   140004ae2:	call   0x1400015c0
   140004ae7:	int3   
   140004ae8:	mov    rax,QWORD PTR [rdx]
   140004aeb:	mov    rcx,rdx
   140004aee:	call   QWORD PTR [rax+0x18]
   140004af1:	lea    r8,[rax+0x18]
   140004af5:	mov    QWORD PTR [rsi],r8
   140004af8:	mov    edx,0x1
   140004afd:	mov    DWORD PTR [rsp+0x68],edx
   140004b01:	test   r13,r13
   140004b04:	je     0x140004b19
   140004b06:	xor    eax,eax
   140004b08:	or     rcx,0xffffffffffffffff
   140004b0c:	mov    rdi,r13
   140004b0f:	repnz scas ax,WORD PTR es:[rdi]
   140004b12:	not    rcx
   140004b15:	lea    r12,[rcx-0x1]
   140004b19:	mov    r14,QWORD PTR [rbx]
   140004b1c:	movsxd rdi,DWORD PTR [r14-0x10]
   140004b20:	lea    ebp,[r12+rdi*1]
   140004b24:	sub    edx,DWORD PTR [r8-0x8]
   140004b28:	mov    eax,DWORD PTR [r8-0xc]
   140004b2c:	sub    eax,ebp
   140004b2e:	or     eax,edx
   140004b30:	jge    0x140004b3c
   140004b32:	mov    edx,ebp
   140004b34:	mov    rcx,rsi
   140004b37:	call   0x1400015e0
   140004b3c:	mov    rbx,QWORD PTR [rsi]
   140004b3f:	add    rdi,rdi
   140004b42:	mov    r9,rdi
   140004b45:	mov    r8,r14
   140004b48:	mov    rdx,rdi
   140004b4b:	mov    rcx,rbx
   140004b4e:	call   0x140018ee0
   140004b53:	movsxd rdx,r12d
   140004b56:	add    rdx,rdx
   140004b59:	lea    rcx,[rdi+rbx*1]
   140004b5d:	mov    r9,rdx
   140004b60:	mov    r8,r13
   140004b63:	call   0x140018ee0
   140004b68:	test   ebp,ebp
   140004b6a:	js     0x140004b88
   140004b6c:	mov    rax,QWORD PTR [rsi]
   140004b6f:	cmp    ebp,DWORD PTR [rax-0xc]
   140004b72:	jg     0x140004b88
   140004b74:	mov    DWORD PTR [rax-0x10],ebp
   140004b77:	movsxd rcx,ebp
   140004b7a:	mov    rax,QWORD PTR [rsi]
   140004b7d:	mov    WORD PTR [rax+rcx*2],0x0
   140004b83:	mov    rax,rsi
   140004b86:	jmp    0x140004b93
   140004b88:	mov    ecx,0x80070057
   140004b8d:	call   0x1400015c0
   140004b92:	nop
   140004b93:	mov    rbx,QWORD PTR [rsp+0x70]
   140004b98:	mov    rbp,QWORD PTR [rsp+0x78]
   140004b9d:	add    rsp,0x30
   140004ba1:	pop    r14
   140004ba3:	pop    r13
   140004ba5:	pop    r12
   140004ba7:	pop    rdi
   140004ba8:	pop    rsi
   140004ba9:	ret    
   140004baa:	int3   
   140004bab:	int3   
   140004bac:	int3   
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	rex push rbp
   140004bb2:	sub    rsp,0x20
   140004bb6:	mov    rbp,rdx
   140004bb9:	mov    eax,DWORD PTR [rbp+0x68]
   140004bbc:	and    eax,0x1
   140004bbf:	test   eax,eax
   140004bc1:	je     0x140004bd0
   140004bc3:	and    DWORD PTR [rbp+0x68],0xfffffffe
   140004bc7:	mov    rcx,QWORD PTR [rbp+0x60]
   140004bcb:	call   0x140001dc0
   140004bd0:	add    rsp,0x20
   140004bd4:	pop    rbp
   140004bd5:	ret    
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	mov    QWORD PTR [rsp+0x8],rbx
   140004be5:	mov    QWORD PTR [rsp+0x10],rbp
   140004bea:	mov    QWORD PTR [rsp+0x18],rsi
   140004bef:	push   rdi
   140004bf0:	push   r12
   140004bf2:	push   r13
   140004bf4:	sub    rsp,0x20
   140004bf8:	mov    rax,QWORD PTR [rcx]
   140004bfb:	mov    rsi,rdx
   140004bfe:	mov    r9d,0x1
   140004c04:	mov    r12d,DWORD PTR [rax-0x10]
   140004c08:	sub    r9d,DWORD PTR [rax-0x8]
   140004c0c:	sub    rsi,rax
   140004c0f:	mov    eax,DWORD PTR [rax-0xc]
   140004c12:	movsxd r13,r8d
   140004c15:	sar    rsi,1
   140004c18:	lea    ebx,[r12+r13*1]
   140004c1c:	mov    rbp,rdx
   140004c1f:	mov    rdi,rcx
   140004c22:	sub    eax,ebx
   140004c24:	or     r9d,eax
   140004c27:	jge    0x140004c30
   140004c29:	mov    edx,ebx
   140004c2b:	call   0x1400015e0
   140004c30:	cmp    rsi,r12
   140004c33:	mov    rax,QWORD PTR [rdi]
   140004c36:	ja     0x140004c3c
   140004c38:	lea    rbp,[rax+rsi*2]
   140004c3c:	mov    rdx,r13
   140004c3f:	lea    rcx,[rax+r12*2]
   140004c43:	mov    r8,rbp
   140004c46:	add    rdx,rdx
   140004c49:	mov    r9,rdx
   140004c4c:	call   0x140018ee0
   140004c51:	test   ebx,ebx
   140004c53:	js     0x140004c85
   140004c55:	mov    rax,QWORD PTR [rdi]
   140004c58:	cmp    ebx,DWORD PTR [rax-0xc]
   140004c5b:	jg     0x140004c85
   140004c5d:	mov    rbp,QWORD PTR [rsp+0x48]
   140004c62:	mov    rsi,QWORD PTR [rsp+0x50]
   140004c67:	mov    DWORD PTR [rax-0x10],ebx
   140004c6a:	mov    rax,QWORD PTR [rdi]
   140004c6d:	movsxd rcx,ebx
   140004c70:	mov    rbx,QWORD PTR [rsp+0x40]
   140004c75:	mov    WORD PTR [rax+rcx*2],0x0
   140004c7b:	add    rsp,0x20
   140004c7f:	pop    r13
   140004c81:	pop    r12
   140004c83:	pop    rdi
   140004c84:	ret    
   140004c85:	mov    ecx,0x80070057
   140004c8a:	call   0x1400015c0
   140004c8f:	int3   
   140004c90:	mov    QWORD PTR [rsp+0x8],rbx
   140004c95:	mov    QWORD PTR [rsp+0x10],rsi
   140004c9a:	push   rdi
   140004c9b:	sub    rsp,0x20
   140004c9f:	test   r9,r9
   140004ca2:	movsxd rbx,r8d
   140004ca5:	mov    rsi,rdx
   140004ca8:	mov    rdi,rcx
   140004cab:	jne    0x140004cb8
   140004cad:	mov    ecx,0x80004005
   140004cb2:	call   0x1400015c0
   140004cb7:	int3   
   140004cb8:	test   rdx,rdx
   140004cbb:	jne    0x140004ccd
   140004cbd:	test   r8d,r8d
   140004cc0:	je     0x140004ccd
   140004cc2:	mov    ecx,0x80070057
   140004cc7:	call   0x1400015c0
   140004ccc:	int3   
   140004ccd:	mov    rax,QWORD PTR [r9]
   140004cd0:	mov    r8d,0x2
   140004cd6:	mov    edx,ebx
   140004cd8:	mov    rcx,r9
   140004cdb:	call   QWORD PTR [rax]
   140004cdd:	test   rax,rax
   140004ce0:	jne    0x140004ce8
   140004ce2:	call   0x1400016f0
   140004ce7:	int3   
   140004ce8:	add    rax,0x18
   140004cec:	test   ebx,ebx
   140004cee:	mov    QWORD PTR [rdi],rax
   140004cf1:	js     0x140004d29
   140004cf3:	cmp    ebx,DWORD PTR [rax-0xc]
   140004cf6:	jg     0x140004d29
   140004cf8:	mov    DWORD PTR [rax-0x10],ebx
   140004cfb:	mov    rax,QWORD PTR [rdi]
   140004cfe:	lea    rdx,[rbx+rbx*1]
   140004d02:	mov    WORD PTR [rdx+rax*1],0x0
   140004d08:	mov    rcx,QWORD PTR [rdi]
   140004d0b:	mov    r9,rdx
   140004d0e:	mov    r8,rsi
   140004d11:	call   0x140018ee0
   140004d16:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d20:	mov    rax,rdi
   140004d23:	add    rsp,0x20
   140004d27:	pop    rdi
   140004d28:	ret    
   140004d29:	mov    ecx,0x80070057
   140004d2e:	call   0x1400015c0
   140004d33:	int3   
   140004d34:	int3   
   140004d35:	int3   
   140004d36:	int3   
   140004d37:	int3   
   140004d38:	int3   
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	mov    QWORD PTR [rsp+0x8],rbx
   140004d45:	mov    QWORD PTR [rsp+0x10],rbp
   140004d4a:	mov    QWORD PTR [rsp+0x18],rsi
   140004d4f:	push   rdi
   140004d50:	sub    rsp,0x20
   140004d54:	mov    rax,QWORD PTR [rcx]
   140004d57:	mov    r8d,0x1
   140004d5d:	movzx  ebp,dx
   140004d60:	mov    esi,DWORD PTR [rax-0x10]
   140004d63:	sub    r8d,DWORD PTR [rax-0x8]
   140004d67:	mov    eax,DWORD PTR [rax-0xc]
   140004d6a:	lea    ebx,[rsi+0x1]
   140004d6d:	mov    rdi,rcx
   140004d70:	sub    eax,ebx
   140004d72:	or     r8d,eax
   140004d75:	jge    0x140004d7e
   140004d77:	mov    edx,ebx
   140004d79:	call   0x1400015e0
   140004d7e:	test   ebx,ebx
   140004d80:	mov    rax,QWORD PTR [rdi]
   140004d83:	mov    WORD PTR [rax+rsi*2],bp
   140004d87:	js     0x140004db5
   140004d89:	mov    rax,QWORD PTR [rdi]
   140004d8c:	cmp    ebx,DWORD PTR [rax-0xc]
   140004d8f:	jg     0x140004db5
   140004d91:	mov    rbp,QWORD PTR [rsp+0x38]
   140004d96:	mov    rsi,QWORD PTR [rsp+0x40]
   140004d9b:	mov    DWORD PTR [rax-0x10],ebx
   140004d9e:	mov    rax,QWORD PTR [rdi]
   140004da1:	movsxd rcx,ebx
   140004da4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004da9:	mov    WORD PTR [rax+rcx*2],0x0
   140004daf:	add    rsp,0x20
   140004db3:	pop    rdi
   140004db4:	ret    
   140004db5:	mov    ecx,0x80070057
   140004dba:	call   0x1400015c0
   140004dbf:	int3   
   140004dc0:	mov    r11,rsp
   140004dc3:	push   rdi
   140004dc4:	sub    rsp,0x60
   140004dc8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140004dd1:	mov    QWORD PTR [r11+0x10],rbx
   140004dd5:	mov    QWORD PTR [r11+0x18],rbp
   140004dd9:	mov    QWORD PTR [r11+0x20],rsi
   140004ddd:	mov    rax,QWORD PTR [rip+0x3b1ec]        # 0x14003ffd0
   140004de4:	xor    rax,rsp
   140004de7:	mov    QWORD PTR [rsp+0x50],rax
   140004dec:	mov    rbx,rcx
   140004def:	mov    QWORD PTR [r11-0x30],rcx
   140004df3:	xor    esi,esi
   140004df5:	mov    DWORD PTR [rsp+0x20],esi
   140004df9:	call   0x14000669c
   140004dfe:	mov    rcx,rax
   140004e01:	mov    eax,esi
   140004e03:	test   rcx,rcx
   140004e06:	setne  al
   140004e09:	test   eax,eax
   140004e0b:	jne    0x140004e18
   140004e0d:	mov    ecx,0x80004005
   140004e12:	call   0x1400015c0
   140004e17:	int3   
   140004e18:	mov    rax,QWORD PTR [rcx]
   140004e1b:	call   QWORD PTR [rax+0x18]
   140004e1e:	add    rax,0x18
   140004e22:	mov    QWORD PTR [rbx],rax
   140004e25:	lea    rdx,[rip+0x31c04]        # 0x140036a30
   140004e2c:	test   rdx,0xffffffffffff0000
   140004e33:	jne    0x140004e54
   140004e35:	movzx  edi,dx
   140004e38:	mov    ecx,edi
   140004e3a:	call   0x140006688
   140004e3f:	test   rax,rax
   140004e42:	je     0x140004e70
   140004e44:	mov    r8d,edi
   140004e47:	mov    rdx,rax
   140004e4a:	mov    rcx,rbx
   140004e4d:	call   0x140001ba0
   140004e52:	jmp    0x140004e70
   140004e54:	xor    eax,eax
   140004e56:	or     rcx,0xffffffffffffffff
   140004e5a:	mov    rdi,rdx
   140004e5d:	repnz scas ax,WORD PTR es:[rdi]
   140004e60:	not    rcx
   140004e63:	lea    r8d,[rcx-0x1]
   140004e67:	mov    rcx,rbx
   140004e6a:	call   0x140001840
   140004e6f:	nop
   140004e70:	mov    ebp,0x1
   140004e75:	mov    DWORD PTR [rsp+0x20],ebp
   140004e79:	mov    DWORD PTR [rsp+0x40],esi
   140004e7d:	xor    eax,eax
   140004e7f:	mov    DWORD PTR [rsp+0x44],eax
   140004e83:	mov    DWORD PTR [rsp+0x48],eax
   140004e87:	mov    DWORD PTR [rsp+0x4c],eax
   140004e8b:	mov    QWORD PTR [rsp+0x28],rsi
   140004e90:	lea    rcx,[rsp+0x40]
   140004e95:	call   QWORD PTR [rip+0x2c995]        # 0x140031830
   140004e9b:	test   eax,eax
   140004e9d:	jne    0x140004f3d
   140004ea3:	lea    rdx,[rsp+0x28]
   140004ea8:	lea    rcx,[rsp+0x40]
   140004ead:	call   QWORD PTR [rip+0x2c635]        # 0x1400314e8
   140004eb3:	test   eax,eax
   140004eb5:	jne    0x140004f3d
   140004ebb:	mov    rdx,QWORD PTR [rsp+0x28]
   140004ec0:	test   rdx,rdx
   140004ec3:	je     0x140004ed7
   140004ec5:	xor    eax,eax
   140004ec7:	or     rcx,0xffffffffffffffff
   140004ecb:	mov    rdi,rdx
   140004ece:	repnz scas ax,WORD PTR es:[rdi]
   140004ed1:	not    rcx
   140004ed4:	lea    esi,[rcx-0x1]
   140004ed7:	mov    r8d,esi
   140004eda:	mov    rcx,rbx
   140004edd:	call   0x140001840
   140004ee2:	mov    rdx,QWORD PTR [rbx]
   140004ee5:	movsxd rdi,DWORD PTR [rdx-0x10]
   140004ee9:	sub    ebp,DWORD PTR [rdx-0x8]
   140004eec:	mov    eax,DWORD PTR [rdx-0xc]
   140004eef:	sub    eax,edi
   140004ef1:	or     eax,ebp
   140004ef3:	jge    0x140004eff
   140004ef5:	mov    edx,edi
   140004ef7:	mov    rcx,rbx
   140004efa:	call   0x1400015e0
   140004eff:	lea    eax,[rdi+0x1]
   140004f02:	movsxd rdx,eax
   140004f05:	mov    rcx,QWORD PTR [rbx]
   140004f08:	call   0x14001a390
   140004f0d:	test   edi,edi
   140004f0f:	js     0x140004f32
   140004f11:	mov    rax,QWORD PTR [rbx]
   140004f14:	cmp    edi,DWORD PTR [rax-0xc]
   140004f17:	jg     0x140004f32
   140004f19:	mov    DWORD PTR [rax-0x10],edi
   140004f1c:	mov    rax,QWORD PTR [rbx]
   140004f1f:	mov    WORD PTR [rax+rdi*2],0x0
   140004f25:	lea    rcx,[rsp+0x28]
   140004f2a:	call   QWORD PTR [rip+0x2c5b0]        # 0x1400314e0
   140004f30:	jmp    0x140004f3d
   140004f32:	mov    ecx,0x80070057
   140004f37:	call   0x1400015c0
   140004f3c:	int3   
   140004f3d:	mov    rax,rbx
   140004f40:	mov    rcx,QWORD PTR [rsp+0x50]
   140004f45:	xor    rcx,rsp
   140004f48:	call   0x140019370
   140004f4d:	lea    r11,[rsp+0x60]
   140004f52:	mov    rbx,QWORD PTR [r11+0x18]
   140004f56:	mov    rbp,QWORD PTR [r11+0x20]
   140004f5a:	mov    rsi,QWORD PTR [r11+0x28]
   140004f5e:	mov    rsp,r11
   140004f61:	pop    rdi
   140004f62:	ret    
   140004f63:	int3   
   140004f64:	int3   
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	int3   
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	rex push rbp
   140004f72:	sub    rsp,0x20
   140004f76:	mov    rbp,rdx
   140004f79:	mov    rcx,QWORD PTR [rbp+0x38]
   140004f7d:	call   0x140001dc0
   140004f82:	add    rsp,0x20
   140004f86:	pop    rbp
   140004f87:	ret    
   140004f88:	int3   
   140004f89:	int3   
   140004f8a:	int3   
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	rex push rbp
   140004f92:	sub    rsp,0x20
   140004f96:	mov    rbp,rdx
   140004f99:	mov    eax,DWORD PTR [rbp+0x20]
   140004f9c:	and    eax,0x1
   140004f9f:	test   eax,eax
   140004fa1:	je     0x140004fb0
   140004fa3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140004fa7:	mov    rcx,QWORD PTR [rbp+0x38]
   140004fab:	call   0x140001dc0
   140004fb0:	add    rsp,0x20
   140004fb4:	pop    rbp
   140004fb5:	ret    
   140004fb6:	int3   
   140004fb7:	int3   
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	rex push rbx
   140004fc2:	sub    rsp,0x20
   140004fc6:	mov    rbx,rcx
   140004fc9:	mov    rcx,QWORD PTR [rcx+0x8]
   140004fcd:	test   rcx,rcx
   140004fd0:	je     0x140004fd8
   140004fd2:	call   QWORD PTR [rip+0x2c048]        # 0x140031020
   140004fd8:	mov    rdx,QWORD PTR [rbx]
   140004fdb:	xor    eax,eax
   140004fdd:	sub    rdx,0x18
   140004fe1:	mov    QWORD PTR [rbx+0x8],rax
   140004fe5:	mov    DWORD PTR [rbx+0x10],eax
   140004fe8:	or     eax,0xffffffff
   140004feb:	lock xadd DWORD PTR [rdx+0x10],eax
   140004ff0:	add    eax,0xffffffff
   140004ff3:	test   eax,eax
   140004ff5:	jg     0x140005000
   140004ff7:	mov    rcx,QWORD PTR [rdx]
   140004ffa:	mov    rax,QWORD PTR [rcx]
   140004ffd:	call   QWORD PTR [rax+0x8]
   140005000:	add    rsp,0x20
   140005004:	pop    rbx
   140005005:	ret    
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    QWORD PTR [rsp+0x10],rdx
   140005015:	mov    QWORD PTR [rsp+0x8],rcx
   14000501a:	push   rbp
   14000501b:	push   rsi
   14000501c:	push   rdi
   14000501d:	push   r12
   14000501f:	push   r13
   140005021:	push   r14
   140005023:	push   r15
   140005025:	sub    rsp,0x50
   140005029:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005032:	mov    QWORD PTR [rsp+0xa0],rbx
   14000503a:	mov    r13,rdx
   14000503d:	mov    r14,rcx
   140005040:	xor    r12d,r12d
   140005043:	mov    DWORD PTR [rsp+0xa8],r12d
   14000504b:	cmp    QWORD PTR [rcx+0x8],r12
   14000504f:	jne    0x1400050d8
   140005055:	call   0x14000669c
   14000505a:	mov    rcx,rax
   14000505d:	test   rax,rax
   140005060:	setne  r12b
   140005064:	test   r12d,r12d
   140005067:	jne    0x140005074
   140005069:	mov    ecx,0x80004005
   14000506e:	call   0x1400015c0
   140005073:	int3   
   140005074:	mov    rax,QWORD PTR [rax]
   140005077:	call   QWORD PTR [rax+0x18]
   14000507a:	add    rax,0x18
   14000507e:	mov    QWORD PTR [r13+0x0],rax
   140005082:	lea    rsi,[rip+0x31677]        # 0x140036700
   140005089:	test   rsi,0xffffffffffff0000
   140005090:	jne    0x1400050b1
   140005092:	movzx  edi,si
   140005095:	mov    ecx,edi
   140005097:	call   0x140006688
   14000509c:	test   rax,rax
   14000509f:	je     0x1400050d0
   1400050a1:	mov    r8d,edi
   1400050a4:	mov    rdx,rax
   1400050a7:	mov    rcx,r13
   1400050aa:	call   0x140001ba0
   1400050af:	jmp    0x1400050d0
   1400050b1:	xor    eax,eax
   1400050b3:	or     rcx,0xffffffffffffffff
   1400050b7:	mov    rdi,rsi
   1400050ba:	repnz scas ax,WORD PTR es:[rdi]
   1400050bd:	not    rcx
   1400050c0:	lea    r8d,[rcx-0x1]
   1400050c4:	mov    rdx,rsi
   1400050c7:	mov    rcx,r13
   1400050ca:	call   0x140001840
   1400050cf:	nop
   1400050d0:	mov    rax,r13
   1400050d3:	jmp    0x14000542a
   1400050d8:	call   0x14000669c
   1400050dd:	mov    rdx,rax
   1400050e0:	mov    ecx,r12d
   1400050e3:	test   rax,rax
   1400050e6:	setne  cl
   1400050e9:	test   ecx,ecx
   1400050eb:	jne    0x1400050f8
   1400050ed:	mov    ecx,0x80004005
   1400050f2:	call   0x1400015c0
   1400050f7:	int3   
   1400050f8:	mov    rax,QWORD PTR [rax]
   1400050fb:	mov    rcx,rdx
   1400050fe:	call   QWORD PTR [rax+0x18]
   140005101:	lea    rbx,[rax+0x18]
   140005105:	mov    QWORD PTR [rsp+0x38],rbx
   14000510a:	lea    rsi,[rip+0x315ef]        # 0x140036700
   140005111:	or     rbp,0xffffffffffffffff
   140005115:	test   rsi,0xffffffffffff0000
   14000511c:	jne    0x14000514b
   14000511e:	movzx  edi,si
   140005121:	mov    ecx,edi
   140005123:	call   0x140006688
   140005128:	test   rax,rax
   14000512b:	je     0x14000524d
   140005131:	mov    r8d,edi
   140005134:	mov    rdx,rax
   140005137:	lea    rcx,[rsp+0x38]
   14000513c:	call   0x140001ba0
   140005141:	mov    rbx,QWORD PTR [rsp+0x38]
   140005146:	jmp    0x14000524d
   14000514b:	xor    eax,eax
   14000514d:	mov    rcx,rbp
   140005150:	mov    rdi,rsi
   140005153:	repnz scas ax,WORD PTR es:[rdi]
   140005156:	not    rcx
   140005159:	sub    rcx,0x1
   14000515d:	mov    rdi,rcx
   140005160:	test   ecx,ecx
   140005162:	jne    0x1400051c3
   140005164:	lea    rdx,[rbx-0x18]
   140005168:	mov    rdi,QWORD PTR [rdx]
   14000516b:	cmp    DWORD PTR [rdx+0x8],eax
   14000516e:	je     0x14000524d
   140005174:	cmp    DWORD PTR [rdx+0x10],eax
   140005177:	jge    0x140005195
   140005179:	cmp    DWORD PTR [rbx-0xc],eax
   14000517c:	jge    0x140005189
   14000517e:	mov    ecx,0x80070057
   140005183:	call   0x1400015c0
   140005188:	int3   
   140005189:	mov    DWORD PTR [rbx-0x10],r12d
   14000518d:	mov    WORD PTR [rbx],ax
   140005190:	jmp    0x14000524d
   140005195:	mov    eax,ebp
   140005197:	lock xadd DWORD PTR [rdx+0x10],eax
   14000519c:	add    eax,0xffffffff
   14000519f:	test   eax,eax
   1400051a1:	jg     0x1400051ac
   1400051a3:	mov    rcx,QWORD PTR [rdx]
   1400051a6:	mov    rax,QWORD PTR [rcx]
   1400051a9:	call   QWORD PTR [rax+0x8]
   1400051ac:	mov    rax,QWORD PTR [rdi]
   1400051af:	mov    rcx,rdi
   1400051b2:	call   QWORD PTR [rax+0x18]
   1400051b5:	lea    rbx,[rax+0x18]
   1400051b9:	mov    QWORD PTR [rsp+0x38],rbx
   1400051be:	jmp    0x14000524d
   1400051c3:	mov    r14d,DWORD PTR [rbx-0x10]
   1400051c7:	mov    r15,rsi
   1400051ca:	sub    r15,rbx
   1400051cd:	sar    r15,1
   1400051d0:	mov    ecx,0x1
   1400051d5:	sub    ecx,DWORD PTR [rbx-0x8]
   1400051d8:	mov    eax,DWORD PTR [rbx-0xc]
   1400051db:	sub    eax,edi
   1400051dd:	or     eax,ecx
   1400051df:	jge    0x1400051f2
   1400051e1:	mov    edx,edi
   1400051e3:	lea    rcx,[rsp+0x38]
   1400051e8:	call   0x1400015e0
   1400051ed:	mov    rbx,QWORD PTR [rsp+0x38]
   1400051f2:	cmp    r15,r14
   1400051f5:	ja     0x140005212
   1400051f7:	movsxd rax,edi
   1400051fa:	lea    r14,[rax+rax*1]
   1400051fe:	lea    r8,[rbx+r15*2]
   140005202:	mov    r9,r14
   140005205:	mov    rdx,r14
   140005208:	mov    rcx,rbx
   14000520b:	call   0x140018fb0
   140005210:	jmp    0x14000522a
   140005212:	movsxd rax,edi
   140005215:	lea    r14,[rax+rax*1]
   140005219:	mov    r9,r14
   14000521c:	mov    r8,rsi
   14000521f:	mov    rdx,r14
   140005222:	mov    rcx,rbx
   140005225:	call   0x140018ee0
   14000522a:	test   edi,edi
   14000522c:	js     0x14000541f
   140005232:	cmp    edi,DWORD PTR [rbx-0xc]
   140005235:	jg     0x14000541f
   14000523b:	mov    DWORD PTR [rbx-0x10],edi
   14000523e:	mov    WORD PTR [r14+rbx*1],0x0
   140005245:	mov    r14,QWORD PTR [rsp+0x90]
   14000524d:	mov    DWORD PTR [rsp+0xa8],r12d
   140005255:	mov    DWORD PTR [rsp+0x30],r12d
   14000525a:	lea    rax,[rsp+0xa8]
   140005262:	mov    QWORD PTR [rsp+0x28],rax
   140005267:	mov    QWORD PTR [rsp+0x20],r12
   14000526c:	lea    r9,[rsp+0x30]
   140005271:	xor    r8d,r8d
   140005274:	lea    rdx,[rip+0x315a5]        # 0x140036820
   14000527b:	mov    rcx,QWORD PTR [r14+0x8]
   14000527f:	call   QWORD PTR [rip+0x2bdbb]        # 0x140031040
   140005285:	mov    DWORD PTR [r14+0x10],eax
   140005289:	mov    ecx,DWORD PTR [rsp+0xa8]
   140005290:	test   ecx,ecx
   140005292:	je     0x140005396
   140005298:	mov    eax,DWORD PTR [rsp+0x30]
   14000529c:	cmp    eax,0x2
   14000529f:	je     0x14000531d
   1400052a1:	cmp    eax,0x6
   1400052a4:	je     0x14000531d
   1400052a6:	cmp    eax,0x7
   1400052a9:	je     0x14000531d
   1400052ab:	cmp    eax,0x1
   1400052ae:	je     0x14000531d
   1400052b0:	cmp    eax,0x4
   1400052b3:	jne    0x140005396
   1400052b9:	mov    DWORD PTR [rsp+0x90],r12d
   1400052c1:	mov    DWORD PTR [rsp+0x34],eax
   1400052c5:	lea    rax,[rsp+0x34]
   1400052ca:	mov    QWORD PTR [rsp+0x28],rax
   1400052cf:	lea    rax,[rsp+0x90]
   1400052d7:	mov    QWORD PTR [rsp+0x20],rax
   1400052dc:	xor    r9d,r9d
   1400052df:	xor    r8d,r8d
   1400052e2:	lea    rdx,[rip+0x31537]        # 0x140036820
   1400052e9:	mov    rcx,QWORD PTR [r14+0x8]
   1400052ed:	call   QWORD PTR [rip+0x2bd4d]        # 0x140031040
   1400052f3:	mov    DWORD PTR [r14+0x10],eax
   1400052f7:	test   eax,eax
   1400052f9:	cmove  r12d,DWORD PTR [rsp+0x90]
   140005302:	mov    r8d,r12d
   140005305:	lea    rdx,[rip+0x31860]        # 0x140036b6c
   14000530c:	lea    rcx,[rsp+0x38]
   140005311:	call   0x140002e70
   140005316:	mov    rbx,QWORD PTR [rsp+0x38]
   14000531b:	jmp    0x140005396
   14000531d:	mov    eax,0x2
   140005322:	mul    rcx
   140005325:	cmovo  rax,rbp
   140005329:	mov    rcx,rax
   14000532c:	call   0x140006158
   140005331:	mov    rsi,rax
   140005334:	test   rax,rax
   140005337:	je     0x140005396
   140005339:	lea    rax,[rsp+0xa8]
   140005341:	mov    QWORD PTR [rsp+0x28],rax
   140005346:	mov    QWORD PTR [rsp+0x20],rsi
   14000534b:	xor    r9d,r9d
   14000534e:	xor    r8d,r8d
   140005351:	lea    rdx,[rip+0x314c8]        # 0x140036820
   140005358:	mov    rcx,QWORD PTR [r14+0x8]
   14000535c:	call   QWORD PTR [rip+0x2bcde]        # 0x140031040
   140005362:	mov    DWORD PTR [r14+0x10],eax
   140005366:	test   eax,eax
   140005368:	jne    0x14000538e
   14000536a:	xor    eax,eax
   14000536c:	mov    rcx,rbp
   14000536f:	mov    rdi,rsi
   140005372:	repnz scas ax,WORD PTR es:[rdi]
   140005375:	not    rcx
   140005378:	lea    r8d,[rcx-0x1]
   14000537c:	mov    rdx,rsi
   14000537f:	lea    rcx,[rsp+0x38]
   140005384:	call   0x140001840
   140005389:	mov    rbx,QWORD PTR [rsp+0x38]
   14000538e:	mov    rcx,rsi
   140005391:	call   0x140006160
   140005396:	mov    rcx,QWORD PTR [rbx-0x18]
   14000539a:	mov    rax,QWORD PTR [rcx]
   14000539d:	call   QWORD PTR [rax+0x20]
   1400053a0:	mov    rcx,rax
   1400053a3:	cmp    DWORD PTR [rbx-0x8],0x0
   1400053a7:	jl     0x1400053ba
   1400053a9:	cmp    rax,QWORD PTR [rbx-0x18]
   1400053ad:	jne    0x1400053ba
   1400053af:	lea    rdi,[rbx-0x18]
   1400053b3:	lock add DWORD PTR [rbx-0x8],0x1
   1400053b8:	jmp    0x1400053f8
   1400053ba:	mov    rax,QWORD PTR [rax]
   1400053bd:	mov    r8d,0x2
   1400053c3:	mov    edx,DWORD PTR [rbx-0x10]
   1400053c6:	call   QWORD PTR [rax]
   1400053c8:	mov    rdi,rax
   1400053cb:	test   rax,rax
   1400053ce:	jne    0x1400053d6
   1400053d0:	call   0x1400016f0
   1400053d5:	int3   
   1400053d6:	mov    eax,DWORD PTR [rbx-0x10]
   1400053d9:	mov    DWORD PTR [rdi+0x8],eax
   1400053dc:	mov    eax,DWORD PTR [rbx-0x10]
   1400053df:	add    eax,0x1
   1400053e2:	movsxd rdx,eax
   1400053e5:	lea    r9,[rdx+rdx*1]
   1400053e9:	mov    r8,rbx
   1400053ec:	add    rdx,rdx
   1400053ef:	lea    rcx,[rdi+0x18]
   1400053f3:	call   0x140018ee0
   1400053f8:	lea    rax,[rdi+0x18]
   1400053fc:	mov    QWORD PTR [r13+0x0],rax
   140005400:	lock xadd DWORD PTR [rbx-0x8],ebp
   140005405:	add    ebp,0xffffffff
   140005408:	test   ebp,ebp
   14000540a:	jg     0x14000541a
   14000540c:	mov    rcx,QWORD PTR [rbx-0x18]
   140005410:	mov    rax,QWORD PTR [rcx]
   140005413:	lea    rdx,[rbx-0x18]
   140005417:	call   QWORD PTR [rax+0x8]
   14000541a:	mov    rax,r13
   14000541d:	jmp    0x14000542a
   14000541f:	mov    ecx,0x80070057
   140005424:	call   0x1400015c0
   140005429:	nop
   14000542a:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005432:	add    rsp,0x50
   140005436:	pop    r15
   140005438:	pop    r14
   14000543a:	pop    r13
   14000543c:	pop    r12
   14000543e:	pop    rdi
   14000543f:	pop    rsi
   140005440:	pop    rbp
   140005441:	ret    
   140005442:	int3   
   140005443:	int3   
   140005444:	int3   
   140005445:	int3   
   140005446:	int3   
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	rex push rbp
   140005452:	sub    rsp,0x20
   140005456:	mov    rbp,rdx
   140005459:	mov    rcx,QWORD PTR [rbp+0x98]
   140005460:	call   0x140001dc0
   140005465:	add    rsp,0x20
   140005469:	pop    rbp
   14000546a:	ret    
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	rex push rbp
   140005472:	sub    rsp,0x20
   140005476:	mov    rbp,rdx
   140005479:	lea    rcx,[rbp+0x38]
   14000547d:	call   0x140001dc0
   140005482:	add    rsp,0x20
   140005486:	pop    rbp
   140005487:	ret    
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	rex push rbp
   140005492:	sub    rsp,0x20
   140005496:	mov    rbp,rdx
   140005499:	lea    rcx,[rbp+0x38]
   14000549d:	call   0x140001dc0
   1400054a2:	add    rsp,0x20
   1400054a6:	pop    rbp
   1400054a7:	ret    
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	rex push rbp
   1400054b2:	push   rsi
   1400054b3:	push   rdi
   1400054b4:	push   r12
   1400054b6:	push   r13
   1400054b8:	push   r14
   1400054ba:	push   r15
   1400054bc:	sub    rsp,0x30
   1400054c0:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400054c9:	mov    QWORD PTR [rsp+0x70],rbx
   1400054ce:	mov    rsi,rdx
   1400054d1:	mov    r12,rcx
   1400054d4:	xor    r15d,r15d
   1400054d7:	call   0x14000669c
   1400054dc:	mov    rcx,rax
   1400054df:	mov    eax,r15d
   1400054e2:	test   rcx,rcx
   1400054e5:	setne  al
   1400054e8:	test   eax,eax
   1400054ea:	jne    0x1400054f7
   1400054ec:	mov    ecx,0x80004005
   1400054f1:	call   0x1400015c0
   1400054f6:	int3   
   1400054f7:	mov    rax,QWORD PTR [rcx]
   1400054fa:	call   QWORD PTR [rax+0x18]
   1400054fd:	lea    rbp,[rax+0x18]
   140005501:	mov    QWORD PTR [rsp+0x80],rbp
   140005509:	or     r14,0xffffffffffffffff
   14000550d:	test   rsi,rsi
   140005510:	je     0x14000555b
   140005512:	test   rsi,0xffffffffffff0000
   140005519:	jne    0x140005547
   14000551b:	movzx  edi,si
   14000551e:	mov    ecx,edi
   140005520:	call   0x140006688
   140005525:	test   rax,rax
   140005528:	je     0x140005579
   14000552a:	mov    r8d,edi
   14000552d:	mov    rdx,rax
   140005530:	lea    rcx,[rsp+0x80]
   140005538:	call   0x140001ba0
   14000553d:	mov    rbp,QWORD PTR [rsp+0x80]
   140005545:	jmp    0x140005579
   140005547:	xor    eax,eax
   140005549:	mov    rcx,r14
   14000554c:	mov    rdi,rsi
   14000554f:	repnz scas ax,WORD PTR es:[rdi]
   140005552:	not    rcx
   140005555:	sub    rcx,0x1
   140005559:	jmp    0x14000555e
   14000555b:	mov    ecx,r15d
   14000555e:	mov    r8d,ecx
   140005561:	mov    rdx,rsi
   140005564:	lea    rcx,[rsp+0x80]
   14000556c:	call   0x140001840
   140005571:	mov    rbp,QWORD PTR [rsp+0x80]
   140005579:	cmp    DWORD PTR [rbp-0x10],0x0
   14000557d:	jge    0x140005584
   14000557f:	mov    r13d,r14d
   140005582:	jmp    0x1400055a6
   140005584:	lea    rdx,[rip+0x3147d]        # 0x140036a08
   14000558b:	mov    rcx,rbp
   14000558e:	call   0x14001a0b0
   140005593:	mov    r13,rax
   140005596:	test   rax,rax
   140005599:	jne    0x1400055a0
   14000559b:	mov    r13d,r14d
   14000559e:	jmp    0x1400055a6
   1400055a0:	sub    r13,rbp
   1400055a3:	sar    r13,1
   1400055a6:	mov    r8d,r13d
   1400055a9:	lea    rdx,[rsp+0x88]
   1400055b1:	lea    rcx,[rsp+0x80]
   1400055b9:	call   0x140004910
   1400055be:	nop
   1400055bf:	mov    rbx,QWORD PTR [rsp+0x88]
   1400055c7:	movsxd rdi,DWORD PTR [rbx-0x10]
   1400055cb:	mov    ecx,0x1
   1400055d0:	sub    ecx,DWORD PTR [rbx-0x8]
   1400055d3:	mov    eax,DWORD PTR [rbx-0xc]
   1400055d6:	sub    eax,edi
   1400055d8:	or     eax,ecx
   1400055da:	jge    0x1400055f3
   1400055dc:	mov    edx,edi
   1400055de:	lea    rcx,[rsp+0x88]
   1400055e6:	call   0x1400015e0
   1400055eb:	mov    rbx,QWORD PTR [rsp+0x88]
   1400055f3:	lea    eax,[rdi+0x1]
   1400055f6:	movsxd rdx,eax
   1400055f9:	mov    rcx,rbx
   1400055fc:	call   0x14001a390
   140005601:	test   edi,edi
   140005603:	js     0x140005b10
   140005609:	cmp    edi,DWORD PTR [rbx-0xc]
   14000560c:	jg     0x140005b10
   140005612:	mov    DWORD PTR [rbx-0x10],edi
   140005615:	mov    WORD PTR [rbx+rdi*2],0x0
   14000561b:	xor    eax,eax
   14000561d:	lea    rdi,[rip+0x3145c]        # 0x140036a80
   140005624:	mov    rsi,rbx
   140005627:	mov    ecx,0x12
   14000562c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000562f:	je     0x140005636
   140005631:	sbb    eax,eax
   140005633:	sbb    eax,0xffffffff
   140005636:	test   eax,eax
   140005638:	sete   al
   14000563b:	test   al,al
   14000563d:	jne    0x140005806
   140005643:	xor    eax,eax
   140005645:	lea    rdi,[rip+0x3145c]        # 0x140036aa8
   14000564c:	mov    rsi,rbx
   14000564f:	mov    ecx,0x5
   140005654:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140005657:	je     0x14000565e
   140005659:	sbb    eax,eax
   14000565b:	sbb    eax,0xffffffff
   14000565e:	test   eax,eax
   140005660:	sete   al
   140005663:	test   al,al
   140005665:	jne    0x140005806
   14000566b:	xor    eax,eax
   14000566d:	lea    rdi,[rip+0x31440]        # 0x140036ab4
   140005674:	mov    rsi,rbx
   140005677:	mov    ecx,0x3
   14000567c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000567f:	je     0x140005686
   140005681:	sbb    eax,eax
   140005683:	sbb    eax,0xffffffff
   140005686:	test   eax,eax
   140005688:	sete   al
   14000568b:	test   al,al
   14000568d:	jne    0x140005806
   140005693:	xor    eax,eax
   140005695:	lea    rdi,[rip+0x31424]        # 0x140036ac0
   14000569c:	mov    rsi,rbx
   14000569f:	mov    ecx,0x12
   1400056a4:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400056a7:	je     0x1400056ae
   1400056a9:	sbb    eax,eax
   1400056ab:	sbb    eax,0xffffffff
   1400056ae:	test   eax,eax
   1400056b0:	sete   al
   1400056b3:	test   al,al
   1400056b5:	jne    0x1400057fd
   1400056bb:	xor    eax,eax
   1400056bd:	lea    rdi,[rip+0x31424]        # 0x140036ae8
   1400056c4:	mov    rsi,rbx
   1400056c7:	mov    ecx,0x5
   1400056cc:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400056cf:	je     0x1400056d6
   1400056d1:	sbb    eax,eax
   1400056d3:	sbb    eax,0xffffffff
   1400056d6:	test   eax,eax
   1400056d8:	sete   al
   1400056db:	test   al,al
   1400056dd:	jne    0x1400057fd
   1400056e3:	xor    eax,eax
   1400056e5:	lea    rdi,[rip+0x31408]        # 0x140036af4
   1400056ec:	mov    rsi,rbx
   1400056ef:	mov    ecx,0x3
   1400056f4:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400056f7:	je     0x1400056fe
   1400056f9:	sbb    eax,eax
   1400056fb:	sbb    eax,0xffffffff
   1400056fe:	test   eax,eax
   140005700:	sete   al
   140005703:	test   al,al
   140005705:	jne    0x1400057fd
   14000570b:	xor    eax,eax
   14000570d:	lea    rdi,[rip+0x313ec]        # 0x140036b00
   140005714:	mov    rsi,rbx
   140005717:	mov    ecx,0x13
   14000571c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000571f:	je     0x140005726
   140005721:	sbb    eax,eax
   140005723:	sbb    eax,0xffffffff
   140005726:	test   eax,eax
   140005728:	sete   al
   14000572b:	test   al,al
   14000572d:	jne    0x1400057f4
   140005733:	xor    eax,eax
   140005735:	lea    rdi,[rip+0x313ec]        # 0x140036b28
   14000573c:	mov    rsi,rbx
   14000573f:	mov    ecx,0x5
   140005744:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140005747:	je     0x14000574e
   140005749:	sbb    eax,eax
   14000574b:	sbb    eax,0xffffffff
   14000574e:	test   eax,eax
   140005750:	sete   al
   140005753:	test   al,al
   140005755:	jne    0x1400057f4
   14000575b:	xor    eax,eax
   14000575d:	lea    rdi,[rip+0x313d0]        # 0x140036b34
   140005764:	mov    rsi,rbx
   140005767:	mov    ecx,0x3
   14000576c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000576f:	je     0x140005776
   140005771:	sbb    eax,eax
   140005773:	sbb    eax,0xffffffff
   140005776:	test   eax,eax
   140005778:	sete   al
   14000577b:	test   al,al
   14000577d:	jne    0x1400057f4
   14000577f:	xor    eax,eax
   140005781:	lea    rdi,[rip+0x313b8]        # 0x140036b40
   140005788:	mov    rsi,rbx
   14000578b:	mov    ecx,0xb
   140005790:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140005793:	je     0x14000579a
   140005795:	sbb    eax,eax
   140005797:	sbb    eax,0xffffffff
   14000579a:	test   eax,eax
   14000579c:	sete   al
   14000579f:	test   al,al
   1400057a1:	jne    0x1400057eb
   1400057a3:	xor    eax,eax
   1400057a5:	lea    rdi,[rip+0x313ac]        # 0x140036b58
   1400057ac:	mov    rsi,rbx
   1400057af:	mov    ecx,0x5
   1400057b4:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400057b7:	je     0x1400057be
   1400057b9:	sbb    eax,eax
   1400057bb:	sbb    eax,0xffffffff
   1400057be:	test   eax,eax
   1400057c0:	sete   al
   1400057c3:	test   al,al
   1400057c5:	jne    0x1400057eb
   1400057c7:	xor    eax,eax
   1400057c9:	lea    rdi,[rip+0x31394]        # 0x140036b64
   1400057d0:	mov    rsi,rbx
   1400057d3:	mov    ecx,0x3
   1400057d8:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400057db:	je     0x1400057e2
   1400057dd:	sbb    eax,eax
   1400057df:	sbb    eax,0xffffffff
   1400057e2:	test   eax,eax
   1400057e4:	sete   al
   1400057e7:	test   al,al
   1400057e9:	je     0x14000580d
   1400057eb:	mov    r15,0xffffffff80000003
   1400057f2:	jmp    0x14000580d
   1400057f4:	mov    r15,0xffffffff80000002
   1400057fb:	jmp    0x14000580d
   1400057fd:	mov    r15,0xffffffff80000001
   140005804:	jmp    0x14000580d
   140005806:	mov    r15,0xffffffff80000000
   14000580d:	xor    eax,eax
   14000580f:	mov    rcx,r14
   140005812:	lea    rdi,[rip+0x30ee7]        # 0x140036700
   140005819:	repnz scas ax,WORD PTR es:[rdi]
   14000581c:	not    rcx
   14000581f:	lea    r8d,[rcx-0x1]
   140005823:	lea    rdx,[rip+0x30ed6]        # 0x140036700
   14000582a:	mov    rcx,r12
   14000582d:	call   0x140001840
   140005832:	test   r15,r15
   140005835:	jne    0x1400059c0
   14000583b:	mov    r15,0xffffffff80000002
   140005842:	lea    rdi,[rbp-0x18]
   140005846:	mov    rsi,QWORD PTR [r12]
   14000584a:	sub    rsi,0x18
   14000584e:	cmp    rdi,rsi
   140005851:	je     0x140005906
   140005857:	cmp    DWORD PTR [rsi+0x10],0x0
   14000585b:	jl     0x1400058f7
   140005861:	mov    rcx,QWORD PTR [rdi]
   140005864:	cmp    rcx,QWORD PTR [rsi]
   140005867:	jne    0x1400058f7
   14000586d:	mov    rax,QWORD PTR [rcx]
   140005870:	call   QWORD PTR [rax+0x20]
   140005873:	mov    rcx,rax
   140005876:	cmp    DWORD PTR [rdi+0x10],0x0
   14000587a:	jl     0x14000588b
   14000587c:	cmp    rax,QWORD PTR [rdi]
   14000587f:	jne    0x14000588b
   140005881:	mov    rbx,rdi
   140005884:	lock add DWORD PTR [rdi+0x10],0x1
   140005889:	jmp    0x1400058ca
   14000588b:	mov    rax,QWORD PTR [rax]
   14000588e:	mov    r8d,0x2
   140005894:	mov    edx,DWORD PTR [rdi+0x8]
   140005897:	call   QWORD PTR [rax]
   140005899:	mov    rbx,rax
   14000589c:	test   rax,rax
   14000589f:	jne    0x1400058a7
   1400058a1:	call   0x1400016f0
   1400058a6:	int3   
   1400058a7:	mov    eax,DWORD PTR [rdi+0x8]
   1400058aa:	mov    DWORD PTR [rbx+0x8],eax
   1400058ad:	mov    eax,DWORD PTR [rdi+0x8]
   1400058b0:	add    eax,0x1
   1400058b3:	movsxd rdx,eax
   1400058b6:	lea    r9,[rdx+rdx*1]
   1400058ba:	lea    r8,[rdi+0x18]
   1400058be:	add    rdx,rdx
   1400058c1:	lea    rcx,[rbx+0x18]
   1400058c5:	call   0x140018ee0
   1400058ca:	mov    eax,r14d
   1400058cd:	lock xadd DWORD PTR [rsi+0x10],eax
   1400058d2:	add    eax,0xffffffff
   1400058d5:	test   eax,eax
   1400058d7:	jg     0x1400058e5
   1400058d9:	mov    rcx,QWORD PTR [rsi]
   1400058dc:	mov    rax,QWORD PTR [rcx]
   1400058df:	mov    rdx,rsi
   1400058e2:	call   QWORD PTR [rax+0x8]
   1400058e5:	lea    rax,[rbx+0x18]
   1400058e9:	mov    QWORD PTR [r12],rax
   1400058ed:	mov    rbx,QWORD PTR [rsp+0x88]
   1400058f5:	jmp    0x140005906
   1400058f7:	mov    r8d,DWORD PTR [rbp-0x10]
   1400058fb:	mov    rdx,rbp
   1400058fe:	mov    rcx,r12
   140005901:	call   0x140001840
   140005906:	mov    rax,QWORD PTR [r12]
   14000590a:	mov    rdi,rax
   14000590d:	cmp    WORD PTR [rax],0x5c
   140005911:	jne    0x14000591d
   140005913:	add    rdi,0x2
   140005917:	cmp    WORD PTR [rdi],0x5c
   14000591b:	je     0x140005913
   14000591d:	cmp    rdi,rax
   140005920:	je     0x140005aca
   140005926:	sub    rdi,rax
   140005929:	sar    rdi,1
   14000592c:	mov    edx,DWORD PTR [rax-0x10]
   14000592f:	mov    ecx,0x1
   140005934:	sub    ecx,DWORD PTR [rax-0x8]
   140005937:	mov    eax,DWORD PTR [rax-0xc]
   14000593a:	sub    eax,edx
   14000593c:	or     eax,ecx
   14000593e:	jge    0x140005948
   140005940:	mov    rcx,r12
   140005943:	call   0x1400015e0
   140005948:	mov    rcx,QWORD PTR [r12]
   14000594c:	movsxd rax,edi
   14000594f:	lea    r8,[rcx+rax*2]
   140005953:	mov    esi,DWORD PTR [rcx-0x10]
   140005956:	sub    esi,edi
   140005958:	lea    eax,[rsi+0x1]
   14000595b:	movsxd rdx,eax
   14000595e:	add    rdx,rdx
   140005961:	mov    r9,rdx
   140005964:	call   0x140018fb0
   140005969:	test   eax,eax
   14000596b:	je     0x140005993
   14000596d:	cmp    eax,0xc
   140005970:	je     0x14000598d
   140005972:	cmp    eax,0x16
   140005975:	je     0x140005987
   140005977:	cmp    eax,0x22
   14000597a:	je     0x140005987
   14000597c:	cmp    eax,0x50
   14000597f:	je     0x140005993
   140005981:	call   0x140006408
   140005986:	int3   
   140005987:	call   0x140006408
   14000598c:	int3   
   14000598d:	call   0x1400063c0
   140005992:	int3   
   140005993:	test   esi,esi
   140005995:	js     0x1400059b5
   140005997:	mov    rax,QWORD PTR [r12]
   14000599b:	cmp    esi,DWORD PTR [rax-0xc]
   14000599e:	jg     0x1400059b5
   1400059a0:	mov    DWORD PTR [rax-0x10],esi
   1400059a3:	movsxd rcx,esi
   1400059a6:	mov    rax,QWORD PTR [r12]
   1400059aa:	mov    WORD PTR [rax+rcx*2],0x0
   1400059b0:	jmp    0x140005aca
   1400059b5:	mov    ecx,0x80070057
   1400059ba:	call   0x1400015c0
   1400059bf:	int3   
   1400059c0:	mov    r8d,r13d
   1400059c3:	lea    rdx,[rsp+0x20]
   1400059c8:	lea    rcx,[rsp+0x80]
   1400059d0:	call   0x140004730
   1400059d5:	nop
   1400059d6:	mov    rdx,rax
   1400059d9:	mov    rcx,r12
   1400059dc:	call   0x140001750
   1400059e1:	nop
   1400059e2:	mov    rdx,QWORD PTR [rsp+0x20]
   1400059e7:	add    rdx,0xffffffffffffffe8
   1400059eb:	mov    eax,r14d
   1400059ee:	lock xadd DWORD PTR [rdx+0x10],eax
   1400059f3:	add    eax,0xffffffff
   1400059f6:	test   eax,eax
   1400059f8:	jg     0x140005a03
   1400059fa:	mov    rcx,QWORD PTR [rdx]
   1400059fd:	mov    rax,QWORD PTR [rcx]
   140005a00:	call   QWORD PTR [rax+0x8]
   140005a03:	mov    rax,QWORD PTR [r12]
   140005a07:	mov    rdi,rax
   140005a0a:	cmp    WORD PTR [rax],0x5c
   140005a0e:	jne    0x140005a1a
   140005a10:	add    rdi,0x2
   140005a14:	cmp    WORD PTR [rdi],0x5c
   140005a18:	je     0x140005a10
   140005a1a:	cmp    rdi,rax
   140005a1d:	je     0x140005ac2
   140005a23:	sub    rdi,rax
   140005a26:	sar    rdi,1
   140005a29:	mov    edx,DWORD PTR [rax-0x10]
   140005a2c:	mov    ecx,0x1
   140005a31:	sub    ecx,DWORD PTR [rax-0x8]
   140005a34:	mov    eax,DWORD PTR [rax-0xc]
   140005a37:	sub    eax,edx
   140005a39:	or     eax,ecx
   140005a3b:	jge    0x140005a45
   140005a3d:	mov    rcx,r12
   140005a40:	call   0x1400015e0
   140005a45:	mov    rcx,QWORD PTR [r12]
   140005a49:	movsxd rax,edi
   140005a4c:	lea    r8,[rcx+rax*2]
   140005a50:	mov    esi,DWORD PTR [rcx-0x10]
   140005a53:	sub    esi,edi
   140005a55:	lea    eax,[rsi+0x1]
   140005a58:	movsxd rdx,eax
   140005a5b:	add    rdx,rdx
   140005a5e:	mov    r9,rdx
   140005a61:	call   0x140018fb0
   140005a66:	test   eax,eax
   140005a68:	je     0x140005a90
   140005a6a:	cmp    eax,0xc
   140005a6d:	je     0x140005a8a
   140005a6f:	cmp    eax,0x16
   140005a72:	je     0x140005a84
   140005a74:	cmp    eax,0x22
   140005a77:	je     0x140005a84
   140005a79:	cmp    eax,0x50
   140005a7c:	je     0x140005a90
   140005a7e:	call   0x140006408
   140005a83:	int3   
   140005a84:	call   0x140006408
   140005a89:	int3   
   140005a8a:	call   0x1400063c0
   140005a8f:	int3   
   140005a90:	test   esi,esi
   140005a92:	js     0x140005ab7
   140005a94:	mov    rax,QWORD PTR [r12]
   140005a98:	cmp    esi,DWORD PTR [rax-0xc]
   140005a9b:	jg     0x140005ab7
   140005a9d:	mov    DWORD PTR [rax-0x10],esi
   140005aa0:	movsxd rcx,esi
   140005aa3:	mov    rax,QWORD PTR [r12]
   140005aa7:	mov    WORD PTR [rax+rcx*2],0x0
   140005aad:	mov    rbx,QWORD PTR [rsp+0x88]
   140005ab5:	jmp    0x140005aca
   140005ab7:	mov    ecx,0x80070057
   140005abc:	call   0x1400015c0
   140005ac1:	int3   
   140005ac2:	mov    rbx,QWORD PTR [rsp+0x88]
   140005aca:	lea    rdx,[rbx-0x18]
   140005ace:	mov    eax,r14d
   140005ad1:	lock xadd DWORD PTR [rdx+0x10],eax
   140005ad6:	add    eax,0xffffffff
   140005ad9:	test   eax,eax
   140005adb:	jg     0x140005ae7
   140005add:	mov    rcx,QWORD PTR [rdx]
   140005ae0:	mov    rax,QWORD PTR [rcx]
   140005ae3:	call   QWORD PTR [rax+0x8]
   140005ae6:	nop
   140005ae7:	mov    rdx,QWORD PTR [rsp+0x80]
   140005aef:	add    rdx,0xffffffffffffffe8
   140005af3:	lock xadd DWORD PTR [rdx+0x10],r14d
   140005af9:	add    r14d,0xffffffff
   140005afd:	test   r14d,r14d
   140005b00:	jg     0x140005b0b
   140005b02:	mov    rcx,QWORD PTR [rdx]
   140005b05:	mov    rax,QWORD PTR [rcx]
   140005b08:	call   QWORD PTR [rax+0x8]
   140005b0b:	mov    rax,r15
   140005b0e:	jmp    0x140005b1b
   140005b10:	mov    ecx,0x80070057
   140005b15:	call   0x1400015c0
   140005b1a:	nop
   140005b1b:	mov    rbx,QWORD PTR [rsp+0x70]
   140005b20:	add    rsp,0x30
   140005b24:	pop    r15
   140005b26:	pop    r14
   140005b28:	pop    r13
   140005b2a:	pop    r12
   140005b2c:	pop    rdi
   140005b2d:	pop    rsi
   140005b2e:	pop    rbp
   140005b2f:	ret    
   140005b30:	rex push rbp
   140005b32:	sub    rsp,0x20
   140005b36:	mov    rbp,rdx
   140005b39:	lea    rcx,[rbp+0x80]
   140005b40:	call   0x140001dc0
   140005b45:	add    rsp,0x20
   140005b49:	pop    rbp
   140005b4a:	ret    
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	rex push rbp
   140005b52:	sub    rsp,0x20
   140005b56:	mov    rbp,rdx
   140005b59:	lea    rcx,[rbp+0x80]
   140005b60:	call   0x140001dc0
   140005b65:	add    rsp,0x20
   140005b69:	pop    rbp
   140005b6a:	ret    
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	rex push rbp
   140005b72:	sub    rsp,0x20
   140005b76:	mov    rbp,rdx
   140005b79:	lea    rcx,[rbp+0x88]
   140005b80:	call   0x140001dc0
   140005b85:	add    rsp,0x20
   140005b89:	pop    rbp
   140005b8a:	ret    
   140005b8b:	int3   
   140005b8c:	int3   
   140005b8d:	int3   
   140005b8e:	int3   
   140005b8f:	int3   
   140005b90:	rex push rbp
   140005b92:	sub    rsp,0x20
   140005b96:	mov    rbp,rdx
   140005b99:	lea    rcx,[rbp+0x20]
   140005b9d:	call   0x140001dc0
   140005ba2:	add    rsp,0x20
   140005ba6:	pop    rbp
   140005ba7:	ret    
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	mov    QWORD PTR [rsp+0x10],rdx
   140005bb5:	mov    QWORD PTR [rsp+0x8],rcx
   140005bba:	push   rbp
   140005bbb:	push   rsi
   140005bbc:	push   rdi
   140005bbd:	push   r12
   140005bbf:	push   r13
   140005bc1:	push   r14
   140005bc3:	push   r15
   140005bc5:	sub    rsp,0x40
   140005bc9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140005bd2:	mov    QWORD PTR [rsp+0x90],rbx
   140005bda:	mov    r14,r8
   140005bdd:	mov    r13,rdx
   140005be0:	mov    rbp,rcx
   140005be3:	xor    r15b,r15b
   140005be6:	call   0x14000669c
   140005beb:	mov    rcx,rax
   140005bee:	xor    eax,eax
   140005bf0:	test   rcx,rcx
   140005bf3:	setne  al
   140005bf6:	test   eax,eax
   140005bf8:	jne    0x140005c05
   140005bfa:	mov    ecx,0x80004005
   140005bff:	call   0x1400015c0
   140005c04:	int3   
   140005c05:	mov    rax,QWORD PTR [rcx]
   140005c08:	call   QWORD PTR [rax+0x18]
   140005c0b:	lea    r10,[rax+0x18]
   140005c0f:	mov    QWORD PTR [rsp+0x20],r10
   140005c14:	lea    rdx,[rip+0x30ae5]        # 0x140036700
   140005c1b:	or     r12,0xffffffffffffffff
   140005c1f:	test   rdx,0xffffffffffff0000
   140005c26:	jne    0x140005c50
   140005c28:	movzx  edi,dx
   140005c2b:	mov    ecx,edi
   140005c2d:	call   0x140006688
   140005c32:	test   rax,rax
   140005c35:	je     0x140005d65
   140005c3b:	mov    r8d,edi
   140005c3e:	mov    rdx,rax
   140005c41:	lea    rcx,[rsp+0x20]
   140005c46:	call   0x140001ba0
   140005c4b:	jmp    0x140005d65
   140005c50:	xor    eax,eax
   140005c52:	mov    rcx,r12
   140005c55:	mov    rdi,rdx
   140005c58:	repnz scas ax,WORD PTR es:[rdi]
   140005c5b:	not    rcx
   140005c5e:	sub    rcx,0x1
   140005c62:	mov    rdi,rcx
   140005c65:	test   ecx,ecx
   140005c67:	jne    0x140005cd1
   140005c69:	lea    rdx,[r10-0x18]
   140005c6d:	mov    rdi,QWORD PTR [rdx]
   140005c70:	cmp    DWORD PTR [rdx+0x8],eax
   140005c73:	je     0x140005d65
   140005c79:	cmp    DWORD PTR [rdx+0x10],eax
   140005c7c:	jge    0x140005ca2
   140005c7e:	cmp    DWORD PTR [r10-0xc],eax
   140005c82:	jge    0x140005c8f
   140005c84:	mov    ecx,0x80070057
   140005c89:	call   0x1400015c0
   140005c8e:	int3   
   140005c8f:	mov    DWORD PTR [r10-0x10],eax
   140005c93:	mov    rax,QWORD PTR [rsp+0x20]
   140005c98:	mov    WORD PTR [rax],0x0
   140005c9d:	jmp    0x140005d65
   140005ca2:	mov    eax,r12d
   140005ca5:	lock xadd DWORD PTR [rdx+0x10],eax
   140005caa:	add    eax,0xffffffff
   140005cad:	test   eax,eax
   140005caf:	jg     0x140005cba
   140005cb1:	mov    rcx,QWORD PTR [rdx]
   140005cb4:	mov    rax,QWORD PTR [rcx]
   140005cb7:	call   QWORD PTR [rax+0x8]
   140005cba:	mov    rax,QWORD PTR [rdi]
   140005cbd:	mov    rcx,rdi
   140005cc0:	call   QWORD PTR [rax+0x18]
   140005cc3:	add    rax,0x18
   140005cc7:	mov    QWORD PTR [rsp+0x20],rax
   140005ccc:	jmp    0x140005d65
   140005cd1:	mov    ebx,DWORD PTR [r10-0x10]
   140005cd5:	mov    rsi,rdx
   140005cd8:	sub    rsi,r10
   140005cdb:	sar    rsi,1
   140005cde:	mov    ecx,0x1
   140005ce3:	sub    ecx,DWORD PTR [r10-0x8]
   140005ce7:	mov    eax,DWORD PTR [r10-0xc]
   140005ceb:	sub    eax,edi
   140005ced:	or     eax,ecx
   140005cef:	jge    0x140005d09
   140005cf1:	mov    edx,edi
   140005cf3:	lea    rcx,[rsp+0x20]
   140005cf8:	call   0x1400015e0
   140005cfd:	mov    r10,QWORD PTR [rsp+0x20]
   140005d02:	lea    rdx,[rip+0x309f7]        # 0x140036700
   140005d09:	cmp    rsi,rbx
   140005d0c:	ja     0x140005d29
   140005d0e:	movsxd rax,edi
   140005d11:	lea    rbx,[rax+rax*1]
   140005d15:	lea    r8,[r10+rsi*2]
   140005d19:	mov    r9,rbx
   140005d1c:	mov    rdx,rbx
   140005d1f:	mov    rcx,r10
   140005d22:	call   0x140018fb0
   140005d27:	jmp    0x140005d41
   140005d29:	movsxd rax,edi
   140005d2c:	lea    rbx,[rax+rax*1]
   140005d30:	mov    r9,rbx
   140005d33:	mov    r8,rdx
   140005d36:	mov    rdx,rbx
   140005d39:	mov    rcx,r10
   140005d3c:	call   0x140018ee0
   140005d41:	test   edi,edi
   140005d43:	js     0x140006030
   140005d49:	mov    rax,QWORD PTR [rsp+0x20]
   140005d4e:	cmp    edi,DWORD PTR [rax-0xc]
   140005d51:	jg     0x140006030
   140005d57:	mov    DWORD PTR [rax-0x10],edi
   140005d5a:	mov    rax,QWORD PTR [rsp+0x20]
   140005d5f:	mov    WORD PTR [rbx+rax*1],0x0
   140005d65:	mov    DWORD PTR [rsp+0x98],0x0
   140005d70:	lea    r9,[rsp+0x98]
   140005d78:	mov    r8,QWORD PTR [r13+0x0]
   140005d7c:	lea    rdx,[rsp+0x28]
   140005d81:	mov    rcx,rbp
   140005d84:	call   0x140004530
   140005d89:	nop
   140005d8a:	mov    rsi,QWORD PTR [rax]
   140005d8d:	lea    rbx,[rsi-0x18]
   140005d91:	mov    rcx,QWORD PTR [rsp+0x20]
   140005d96:	lea    rdi,[rcx-0x18]
   140005d9a:	cmp    rbx,rdi
   140005d9d:	je     0x140005f45
   140005da3:	cmp    DWORD PTR [rdi+0x10],0x0
   140005da7:	jl     0x140005e40
   140005dad:	mov    rdx,QWORD PTR [rbx]
   140005db0:	cmp    rdx,QWORD PTR [rdi]
   140005db3:	jne    0x140005e40
   140005db9:	mov    rax,QWORD PTR [rdx]
   140005dbc:	mov    rcx,rdx
   140005dbf:	call   QWORD PTR [rax+0x20]
   140005dc2:	mov    rcx,rax
   140005dc5:	cmp    DWORD PTR [rbx+0x10],0x0
   140005dc9:	jl     0x140005dda
   140005dcb:	cmp    rax,QWORD PTR [rbx]
   140005dce:	jne    0x140005dda
   140005dd0:	mov    rsi,rbx
   140005dd3:	lock add DWORD PTR [rbx+0x10],0x1
   140005dd8:	jmp    0x140005e17
   140005dda:	mov    rax,QWORD PTR [rax]
   140005ddd:	mov    r8d,0x2
   140005de3:	mov    edx,DWORD PTR [rbx+0x8]
   140005de6:	call   QWORD PTR [rax]
   140005de8:	mov    rsi,rax
   140005deb:	test   rax,rax
   140005dee:	je     0x140005fa1
   140005df4:	mov    eax,DWORD PTR [rbx+0x8]
   140005df7:	mov    DWORD PTR [rsi+0x8],eax
   140005dfa:	mov    eax,DWORD PTR [rbx+0x8]
   140005dfd:	add    eax,0x1
   140005e00:	movsxd rdx,eax
   140005e03:	lea    r9,[rdx+rdx*1]
   140005e07:	lea    r8,[rbx+0x18]
   140005e0b:	add    rdx,rdx
   140005e0e:	lea    rcx,[rsi+0x18]
   140005e12:	call   0x140018ee0
   140005e17:	mov    eax,r12d
   140005e1a:	lock xadd DWORD PTR [rdi+0x10],eax
   140005e1f:	add    eax,0xffffffff
   140005e22:	test   eax,eax
   140005e24:	jg     0x140005e32
   140005e26:	mov    rcx,QWORD PTR [rdi]
   140005e29:	mov    rax,QWORD PTR [rcx]
   140005e2c:	mov    rdx,rdi
   140005e2f:	call   QWORD PTR [rax+0x8]
   140005e32:	lea    rax,[rsi+0x18]
   140005e36:	mov    QWORD PTR [rsp+0x20],rax
   140005e3b:	jmp    0x140005f45
   140005e40:	movsxd rbx,DWORD PTR [rsi-0x10]
   140005e44:	test   ebx,ebx
   140005e46:	jne    0x140005ead
   140005e48:	mov    rbx,QWORD PTR [rdi]
   140005e4b:	cmp    DWORD PTR [rdi+0x8],0x0
   140005e4f:	je     0x140005f45
   140005e55:	cmp    DWORD PTR [rdi+0x10],0x0
   140005e59:	jge    0x140005e7b
   140005e5b:	cmp    DWORD PTR [rcx-0xc],0x0
   140005e5f:	jl     0x140005fa7
   140005e65:	mov    DWORD PTR [rcx-0x10],0x0
   140005e6c:	mov    rax,QWORD PTR [rsp+0x20]
   140005e71:	mov    WORD PTR [rax],0x0
   140005e76:	jmp    0x140005f45
   140005e7b:	mov    eax,r12d
   140005e7e:	lock xadd DWORD PTR [rdi+0x10],eax
   140005e83:	add    eax,0xffffffff
   140005e86:	test   eax,eax
   140005e88:	jg     0x140005e96
   140005e8a:	mov    rcx,QWORD PTR [rdi]
   140005e8d:	mov    rax,QWORD PTR [rcx]
   140005e90:	mov    rdx,rdi
   140005e93:	call   QWORD PTR [rax+0x8]
   140005e96:	mov    rax,QWORD PTR [rbx]
   140005e99:	mov    rcx,rbx
   140005e9c:	call   QWORD PTR [rax+0x18]
   140005e9f:	add    rax,0x18
   140005ea3:	mov    QWORD PTR [rsp+0x20],rax
   140005ea8:	jmp    0x140005f45
   140005ead:	test   rsi,rsi
   140005eb0:	je     0x140005fbd
   140005eb6:	mov    r13d,DWORD PTR [rcx-0x10]
   140005eba:	mov    rbp,rsi
   140005ebd:	sub    rbp,rcx
   140005ec0:	sar    rbp,1
   140005ec3:	mov    edx,0x1
   140005ec8:	sub    edx,DWORD PTR [rdi+0x10]
   140005ecb:	mov    eax,DWORD PTR [rdi+0xc]
   140005ece:	sub    eax,ebx
   140005ed0:	or     eax,edx
   140005ed2:	jge    0x140005ee5
   140005ed4:	mov    edx,ebx
   140005ed6:	lea    rcx,[rsp+0x20]
   140005edb:	call   0x1400015e0
   140005ee0:	mov    rcx,QWORD PTR [rsp+0x20]
   140005ee5:	cmp    rbp,r13
   140005ee8:	ja     0x140005eff
   140005eea:	lea    rdi,[rbx+rbx*1]
   140005eee:	lea    r8,[rcx+rbp*2]
   140005ef2:	mov    r9,rdi
   140005ef5:	mov    rdx,rdi
   140005ef8:	call   0x140018fb0
   140005efd:	jmp    0x140005f11
   140005eff:	lea    rdi,[rbx+rbx*1]
   140005f03:	mov    r9,rdi
   140005f06:	mov    r8,rsi
   140005f09:	mov    rdx,rdi
   140005f0c:	call   0x140018ee0
   140005f11:	test   ebx,ebx
   140005f13:	js     0x140005fb2
   140005f19:	mov    rax,QWORD PTR [rsp+0x20]
   140005f1e:	cmp    ebx,DWORD PTR [rax-0xc]
   140005f21:	jg     0x140005fb2
   140005f27:	mov    DWORD PTR [rax-0x10],ebx
   140005f2a:	mov    rax,QWORD PTR [rsp+0x20]
   140005f2f:	mov    WORD PTR [rdi+rax*1],0x0
   140005f35:	mov    rbp,QWORD PTR [rsp+0x80]
   140005f3d:	mov    r13,QWORD PTR [rsp+0x88]
   140005f45:	mov    rdx,QWORD PTR [rsp+0x28]
   140005f4a:	add    rdx,0xffffffffffffffe8
   140005f4e:	mov    eax,r12d
   140005f51:	lock xadd DWORD PTR [rdx+0x10],eax
   140005f56:	add    eax,0xffffffff
   140005f59:	test   eax,eax
   140005f5b:	jg     0x140005f66
   140005f5d:	mov    rcx,QWORD PTR [rdx]
   140005f60:	mov    rax,QWORD PTR [rcx]
   140005f63:	call   QWORD PTR [rax+0x8]
   140005f66:	mov    edi,DWORD PTR [rsp+0x98]
   140005f6d:	cmp    edi,0xffffffff
   140005f70:	je     0x140005fc8
   140005f72:	test   r15b,r15b
   140005f75:	jne    0x140005f84
   140005f77:	mov    r8,r12
   140005f7a:	xor    edx,edx
   140005f7c:	mov    rcx,r14
   140005f7f:	call   0x140008f5c
   140005f84:	mov    r15b,0x1
   140005f87:	lea    r8,[rsp+0x20]
   140005f8c:	mov    rdx,QWORD PTR [r14+0x10]
   140005f90:	mov    rcx,r14
   140005f93:	call   0x1400092c8
   140005f98:	test   edi,edi
   140005f9a:	js     0x140005fc8
   140005f9c:	jmp    0x140005d70
   140005fa1:	call   0x1400016f0
   140005fa6:	int3   
   140005fa7:	mov    ecx,0x80070057
   140005fac:	call   0x1400015c0
   140005fb1:	int3   
   140005fb2:	mov    ecx,0x80070057
   140005fb7:	call   0x1400015c0
   140005fbc:	int3   
   140005fbd:	mov    ecx,0x80070057
   140005fc2:	call   0x1400015c0
   140005fc7:	nop
   140005fc8:	mov    rdx,QWORD PTR [rsp+0x20]
   140005fcd:	add    rdx,0xffffffffffffffe8
   140005fd1:	mov    eax,r12d
   140005fd4:	lock xadd DWORD PTR [rdx+0x10],eax
   140005fd9:	add    eax,0xffffffff
   140005fdc:	test   eax,eax
   140005fde:	jg     0x140005fea
   140005fe0:	mov    rcx,QWORD PTR [rdx]
   140005fe3:	mov    rax,QWORD PTR [rcx]
   140005fe6:	call   QWORD PTR [rax+0x8]
   140005fe9:	nop
   140005fea:	mov    rdx,QWORD PTR [rbp+0x0]
   140005fee:	sub    rdx,0x18
   140005ff2:	mov    eax,r12d
   140005ff5:	lock xadd DWORD PTR [rdx+0x10],eax
   140005ffa:	add    eax,0xffffffff
   140005ffd:	test   eax,eax
   140005fff:	jg     0x14000600b
   140006001:	mov    rcx,QWORD PTR [rdx]
   140006004:	mov    rax,QWORD PTR [rcx]
   140006007:	call   QWORD PTR [rax+0x8]
   14000600a:	nop
   14000600b:	mov    rdx,QWORD PTR [r13+0x0]
   14000600f:	sub    rdx,0x18
   140006013:	lock xadd DWORD PTR [rdx+0x10],r12d
   140006019:	add    r12d,0xffffffff
   14000601d:	test   r12d,r12d
   140006020:	jg     0x14000602b
   140006022:	mov    rcx,QWORD PTR [rdx]
   140006025:	mov    rax,QWORD PTR [rcx]
   140006028:	call   QWORD PTR [rax+0x8]
   14000602b:	mov    al,r15b
   14000602e:	jmp    0x14000603b
   140006030:	mov    ecx,0x80070057
   140006035:	call   0x1400015c0
   14000603a:	nop
   14000603b:	mov    rbx,QWORD PTR [rsp+0x90]
   140006043:	add    rsp,0x40
   140006047:	pop    r15
   140006049:	pop    r14
   14000604b:	pop    r13
   14000604d:	pop    r12
   14000604f:	pop    rdi
   140006050:	pop    rsi
   140006051:	pop    rbp
   140006052:	ret    
   140006053:	int3   
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	rex push rbp
   140006062:	sub    rsp,0x20
   140006066:	mov    rbp,rdx
   140006069:	mov    rcx,QWORD PTR [rbp+0x88]
   140006070:	call   0x140001dc0
   140006075:	add    rsp,0x20
   140006079:	pop    rbp
   14000607a:	ret    
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	rex push rbp
   140006082:	sub    rsp,0x20
   140006086:	mov    rbp,rdx
   140006089:	mov    rcx,QWORD PTR [rbp+0x80]
   140006090:	call   0x140001dc0
   140006095:	add    rsp,0x20
   140006099:	pop    rbp
   14000609a:	ret    
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	rex push rbp
   1400060a2:	sub    rsp,0x20
   1400060a6:	mov    rbp,rdx
   1400060a9:	lea    rcx,[rbp+0x20]
   1400060ad:	call   0x140001dc0
   1400060b2:	add    rsp,0x20
   1400060b6:	pop    rbp
   1400060b7:	ret    
   1400060b8:	int3   
   1400060b9:	int3   
   1400060ba:	int3   
   1400060bb:	int3   
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	rex push rbp
   1400060c2:	sub    rsp,0x20
   1400060c6:	mov    rbp,rdx
   1400060c9:	lea    rcx,[rbp+0x20]
   1400060cd:	call   0x140001dc0
   1400060d2:	add    rsp,0x20
   1400060d6:	pop    rbp
   1400060d7:	ret    
   1400060d8:	int3   
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	rex push rbp
   1400060e2:	sub    rsp,0x20
   1400060e6:	mov    rbp,rdx
   1400060e9:	lea    rcx,[rbp+0x28]
   1400060ed:	call   0x140001dc0
   1400060f2:	add    rsp,0x20
   1400060f6:	pop    rbp
   1400060f7:	ret    
   1400060f8:	sub    rsp,0x28
   1400060fc:	call   0x1400063c0
   140006101:	int3   
   140006102:	int3   
   140006103:	int3   
   140006104:	mov    rax,QWORD PTR [rip+0x38ef5]        # 0x14003f000
   14000610b:	mov    QWORD PTR [rip+0x38eee],rcx        # 0x14003f000
   140006112:	ret    
   140006113:	int3   
   140006114:	mov    QWORD PTR [rsp+0x8],rbx
   140006119:	push   rdi
   14000611a:	sub    rsp,0x20
   14000611e:	mov    rdi,rcx
   140006121:	jmp    0x14000613b
   140006123:	mov    rax,QWORD PTR [rip+0x38ed6]        # 0x14003f000
   14000612a:	test   rax,rax
   14000612d:	je     0x140006148
   14000612f:	mov    rcx,rdi
   140006132:	call   rax
   140006134:	test   eax,eax
   140006136:	je     0x140006148
   140006138:	mov    rcx,rdi
   14000613b:	call   0x14001a470
   140006140:	test   rax,rax
   140006143:	mov    rbx,rax
   140006146:	je     0x140006123
   140006148:	mov    rax,rbx
   14000614b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006150:	add    rsp,0x20
   140006154:	pop    rdi
   140006155:	ret    
   140006156:	int3   
   140006157:	int3   
   140006158:	jmp    0x140006114
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	jmp    0x14001a540
   140006165:	int3   
   140006166:	int3   
   140006167:	int3   
   140006168:	lea    rax,[rip+0x2b821]        # 0x140031990
   14000616f:	ret    
   140006170:	rex push rdi
   140006172:	sub    rsp,0x30
   140006176:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000617f:	mov    QWORD PTR [rsp+0x40],rbx
   140006184:	mov    edi,ecx
   140006186:	mov    ecx,0x18
   14000618b:	call   0x140006114
   140006190:	mov    rbx,rax
   140006193:	mov    QWORD PTR [rsp+0x48],rax
   140006198:	test   rax,rax
   14000619b:	je     0x1400061b5
   14000619d:	mov    rcx,rax
   1400061a0:	call   0x140006484
   1400061a5:	lea    r11,[rip+0x2b81c]        # 0x1400319c8
   1400061ac:	mov    QWORD PTR [rbx],r11
   1400061af:	and    DWORD PTR [rbx+0x10],0x0
   1400061b3:	jmp    0x1400061b7
   1400061b5:	xor    ebx,ebx
   1400061b7:	mov    DWORD PTR [rbx+0x10],edi
   1400061ba:	mov    QWORD PTR [rsp+0x48],rbx
   1400061bf:	lea    rdx,[rip+0x36b62]        # 0x14003cd28
   1400061c6:	lea    rcx,[rsp+0x48]
   1400061cb:	call   0x14001b070
   1400061d0:	int3   
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	rex push rbp
   1400061e2:	sub    rsp,0x20
   1400061e6:	mov    rbp,rdx
   1400061e9:	mov    rcx,QWORD PTR [rbp+0x48]
   1400061ed:	call   0x140002f20
   1400061f2:	add    rsp,0x20
   1400061f6:	pop    rbp
   1400061f7:	ret    
   1400061f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400061fd:	push   rdi
   1400061fe:	sub    rsp,0x40
   140006202:	test   r9,r9
   140006205:	mov    edi,r8d
   140006208:	mov    rbx,rdx
   14000620b:	je     0x140006211
   14000620d:	and    DWORD PTR [r9],0x0
   140006211:	mov    r8d,DWORD PTR [rcx+0x10]
   140006215:	and    QWORD PTR [rsp+0x30],0x0
   14000621b:	and    DWORD PTR [rsp+0x28],0x0
   140006220:	lea    rax,[rsp+0x50]
   140006225:	mov    r9d,0x800
   14000622b:	xor    edx,edx
   14000622d:	mov    ecx,0x1100
   140006232:	mov    QWORD PTR [rsp+0x20],rax
   140006237:	call   QWORD PTR [rip+0x2b1eb]        # 0x140031428
   14000623d:	test   eax,eax
   14000623f:	jne    0x140006246
   140006241:	and    WORD PTR [rbx],ax
   140006244:	jmp    0x140006294
   140006246:	mov    r8,QWORD PTR [rsp+0x50]
   14000624b:	mov    rdx,rdi
   14000624e:	or     r9,0xffffffffffffffff
   140006252:	mov    rcx,rbx
   140006255:	call   0x14001a740
   14000625a:	test   eax,eax
   14000625c:	je     0x140006284
   14000625e:	cmp    eax,0xc
   140006261:	je     0x14000627e
   140006263:	cmp    eax,0x16
   140006266:	je     0x140006278
   140006268:	cmp    eax,0x22
   14000626b:	je     0x140006278
   14000626d:	cmp    eax,0x50
   140006270:	je     0x140006284
   140006272:	call   0x140006408
   140006277:	int3   
   140006278:	call   0x140006408
   14000627d:	int3   
   14000627e:	call   0x1400063c0
   140006283:	int3   
   140006284:	mov    rcx,QWORD PTR [rsp+0x50]
   140006289:	call   QWORD PTR [rip+0x2b1a1]        # 0x140031430
   14000628f:	mov    eax,0x1
   140006294:	mov    rbx,QWORD PTR [rsp+0x58]
   140006299:	add    rsp,0x40
   14000629d:	pop    rdi
   14000629e:	ret    
   14000629f:	int3   
   1400062a0:	rex push rbx
   1400062a2:	sub    rsp,0x20
   1400062a6:	test   dl,0x1
   1400062a9:	lea    rax,[rip+0x2b718]        # 0x1400319c8
   1400062b0:	mov    rbx,rcx
   1400062b3:	mov    QWORD PTR [rcx],rax
   1400062b6:	je     0x1400062bd
   1400062b8:	call   0x140006160
   1400062bd:	mov    rax,rbx
   1400062c0:	add    rsp,0x20
   1400062c4:	pop    rbx
   1400062c5:	ret    
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	sub    rsp,0x28
   1400062cc:	cmp    DWORD PTR [rcx+0x8],0x0
   1400062d0:	jle    0x1400062dd
   1400062d2:	mov    rax,QWORD PTR [rcx]
   1400062d5:	mov    edx,0x1
   1400062da:	call   QWORD PTR [rax+0x8]
   1400062dd:	add    rsp,0x28
   1400062e1:	ret    
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	mov    rax,QWORD PTR [rcx]
   1400062e7:	rex.W jmp QWORD PTR [rax+0x20]
   1400062eb:	int3   
   1400062ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400062f1:	push   rdi
   1400062f2:	sub    rsp,0x440
   1400062f9:	mov    rax,QWORD PTR [rip+0x39cd0]        # 0x14003ffd0
   140006300:	xor    rax,rsp
   140006303:	mov    QWORD PTR [rsp+0x430],rax
   14000630b:	mov    rax,QWORD PTR [rcx]
   14000630e:	mov    edi,edx
   140006310:	mov    ebx,r8d
   140006313:	lea    r9,[rsp+0x20]
   140006318:	lea    rdx,[rsp+0x30]
   14000631d:	mov    r8d,0x200
   140006323:	call   QWORD PTR [rax+0x18]
   140006326:	mov    r8d,DWORD PTR [rsp+0x20]
   14000632b:	mov    edx,edi
   14000632d:	test   eax,eax
   14000632f:	je     0x14000633d
   140006331:	lea    rcx,[rsp+0x30]
   140006336:	call   0x140008508
   14000633b:	jmp    0x14000634e
   14000633d:	mov    eax,0xf020
   140006342:	test   ebx,ebx
   140006344:	cmove  ebx,eax
   140006347:	mov    ecx,ebx
   140006349:	call   0x140008560
   14000634e:	mov    rcx,QWORD PTR [rsp+0x430]
   140006356:	xor    rcx,rsp
   140006359:	call   0x140019370
   14000635e:	mov    rbx,QWORD PTR [rsp+0x468]
   140006366:	add    rsp,0x440
   14000636d:	pop    rdi
   14000636e:	ret    
   14000636f:	int3   
   140006370:	lea    rax,[rip+0x2b731]        # 0x140031aa8
   140006377:	ret    
   140006378:	lea    rax,[rip+0x2b759]        # 0x140031ad8
   14000637f:	ret    
   140006380:	lea    rax,[rip+0x2b781]        # 0x140031b08
   140006387:	ret    
   140006388:	rex push rbx
   14000638a:	sub    rsp,0x20
   14000638e:	mov    rbx,rcx
   140006391:	mov    DWORD PTR [rcx+0x14],0x1
   140006398:	lea    rdx,[rcx+0x1c]
   14000639c:	mov    ecx,DWORD PTR [rcx+0x11c]
   1400063a2:	mov    r8d,0x80
   1400063a8:	call   0x1400065a4
   1400063ad:	xor    edx,edx
   1400063af:	cmp    eax,edx
   1400063b1:	setne  dl
   1400063b4:	mov    DWORD PTR [rbx+0x18],edx
   1400063b7:	add    rsp,0x20
   1400063bb:	pop    rbx
   1400063bc:	ret    
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	sub    rsp,0x28
   1400063c4:	lea    rax,[rip+0x38e75]        # 0x14003f240
   1400063cb:	lea    rdx,[rip+0x36a3e]        # 0x14003ce10
   1400063d2:	lea    rcx,[rsp+0x30]
   1400063d7:	mov    QWORD PTR [rsp+0x30],rax
   1400063dc:	call   0x14001b070
   1400063e1:	int3   
   1400063e2:	int3   
   1400063e3:	int3   
   1400063e4:	sub    rsp,0x28
   1400063e8:	lea    rax,[rip+0x38f71]        # 0x14003f360
   1400063ef:	lea    rdx,[rip+0x36aba]        # 0x14003ceb0
   1400063f6:	lea    rcx,[rsp+0x30]
   1400063fb:	mov    QWORD PTR [rsp+0x30],rax
   140006400:	call   0x14001b070
   140006405:	int3   
   140006406:	int3   
   140006407:	int3   
   140006408:	sub    rsp,0x28
   14000640c:	lea    rax,[rip+0x3906d]        # 0x14003f480
   140006413:	lea    rdx,[rip+0x36b0e]        # 0x14003cf28
   14000641a:	lea    rcx,[rsp+0x30]
   14000641f:	mov    QWORD PTR [rsp+0x30],rax
   140006424:	call   0x14001b070
   140006429:	int3   
   14000642a:	int3   
   14000642b:	int3   
   14000642c:	sub    rsp,0x38
   140006430:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006439:	mov    ecx,0x1e0
   14000643e:	call   0x140013b44
   140006443:	mov    rcx,rax
   140006446:	mov    QWORD PTR [rsp+0x40],rax
   14000644b:	xor    eax,eax
   14000644d:	cmp    rcx,rax
   140006450:	je     0x140006458
   140006452:	call   0x140012704
   140006457:	nop
   140006458:	add    rsp,0x38
   14000645c:	ret    
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	int3   
   140006461:	int3   
   140006462:	int3   
   140006463:	int3   
   140006464:	int3   
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	rex push rbp
   14000646e:	sub    rsp,0x20
   140006472:	mov    rbp,rdx
   140006475:	mov    rcx,QWORD PTR [rbp+0x40]
   140006479:	call   0x140013b68
   14000647e:	add    rsp,0x20
   140006482:	pop    rbp
   140006483:	ret    
   140006484:	mov    DWORD PTR [rcx+0x8],0x1
   14000648b:	mov    rax,rcx
   14000648e:	ret    
   14000648f:	int3   
   140006490:	mov    DWORD PTR [rcx+0x8],edx
   140006493:	mov    rax,rcx
   140006496:	ret    
   140006497:	int3   
   140006498:	mov    QWORD PTR [rsp+0x8],rbx
   14000649d:	mov    QWORD PTR [rsp+0x10],rsi
   1400064a2:	push   rdi
   1400064a3:	sub    rsp,0x20
   1400064a7:	test   rdx,rdx
   1400064aa:	mov    esi,r8d
   1400064ad:	mov    rdi,rdx
   1400064b0:	mov    rbx,rcx
   1400064b3:	je     0x14000651a
   1400064b5:	test   r8d,r8d
   1400064b8:	je     0x14000651a
   1400064ba:	test   r9,r9
   1400064bd:	je     0x1400064c3
   1400064bf:	and    DWORD PTR [r9],0x0
   1400064c3:	cmp    DWORD PTR [rcx+0x14],0x0
   1400064c7:	jne    0x1400064ce
   1400064c9:	call   0x140006388
   1400064ce:	cmp    DWORD PTR [rbx+0x18],0x0
   1400064d2:	je     0x140006511
   1400064d4:	lea    r8,[rbx+0x1c]
   1400064d8:	mov    rdx,rsi
   1400064db:	or     r9,0xffffffffffffffff
   1400064df:	mov    rcx,rdi
   1400064e2:	call   0x14001a740
   1400064e7:	test   eax,eax
   1400064e9:	je     0x140006515
   1400064eb:	cmp    eax,0xc
   1400064ee:	je     0x14000650b
   1400064f0:	cmp    eax,0x16
   1400064f3:	je     0x140006505
   1400064f5:	cmp    eax,0x22
   1400064f8:	je     0x140006505
   1400064fa:	cmp    eax,0x50
   1400064fd:	je     0x140006515
   1400064ff:	call   0x140006408
   140006504:	int3   
   140006505:	call   0x140006408
   14000650a:	int3   
   14000650b:	call   0x1400063c0
   140006510:	int3   
   140006511:	and    WORD PTR [rdi],0x0
   140006515:	mov    eax,DWORD PTR [rbx+0x18]
   140006518:	jmp    0x14000651c
   14000651a:	xor    eax,eax
   14000651c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006521:	mov    rsi,QWORD PTR [rsp+0x38]
   140006526:	add    rsp,0x20
   14000652a:	pop    rdi
   14000652b:	ret    
   14000652c:	rex push rbx
   14000652e:	sub    rsp,0x20
   140006532:	test   dl,0x1
   140006535:	lea    rax,[rip+0x2b62c]        # 0x140031b68
   14000653c:	mov    rbx,rcx
   14000653f:	mov    QWORD PTR [rcx],rax
   140006542:	je     0x140006549
   140006544:	call   0x140006160
   140006549:	mov    rax,rbx
   14000654c:	add    rsp,0x20
   140006550:	pop    rbx
   140006551:	ret    
   140006552:	int3   
   140006553:	int3   
   140006554:	rex push rbx
   140006556:	sub    rsp,0x20
   14000655a:	test   dl,0x1
   14000655d:	lea    rax,[rip+0x2b63c]        # 0x140031ba0
   140006564:	mov    rbx,rcx
   140006567:	mov    QWORD PTR [rcx],rax
   14000656a:	je     0x140006571
   14000656c:	call   0x140006160
   140006571:	mov    rax,rbx
   140006574:	add    rsp,0x20
   140006578:	pop    rbx
   140006579:	ret    
   14000657a:	int3   
   14000657b:	int3   
   14000657c:	rex push rbx
   14000657e:	sub    rsp,0x20
   140006582:	test   dl,0x1
   140006585:	lea    rax,[rip+0x2b64c]        # 0x140031bd8
   14000658c:	mov    rbx,rcx
   14000658f:	mov    QWORD PTR [rcx],rax
   140006592:	je     0x140006599
   140006594:	call   0x140006160
   140006599:	mov    rax,rbx
   14000659c:	add    rsp,0x20
   1400065a0:	pop    rbx
   1400065a1:	ret    
   1400065a2:	int3   
   1400065a3:	int3   
   1400065a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400065a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400065ae:	mov    QWORD PTR [rsp+0x18],rsi
   1400065b3:	push   rdi
   1400065b4:	sub    rsp,0x20
   1400065b8:	test   rdx,rdx
   1400065bb:	mov    edi,r8d
   1400065be:	mov    rbx,rdx
   1400065c1:	mov    esi,ecx
   1400065c3:	je     0x140006680
   1400065c9:	test   r8d,r8d
   1400065cc:	je     0x140006680
   1400065d2:	call   0x1400131d0
   1400065d7:	mov    r8d,0x6
   1400065dd:	mov    rbp,QWORD PTR [rax+0x18]
   1400065e1:	mov    eax,esi
   1400065e3:	shr    eax,0x4
   1400065e6:	mov    rcx,rbp
   1400065e9:	add    ax,0x1
   1400065ed:	movzx  edx,ax
   1400065f0:	call   QWORD PTR [rip+0x2ae9a]        # 0x140031490
   1400065f6:	test   rax,rax
   1400065f9:	je     0x140006678
   1400065fb:	mov    r8d,esi
   1400065fe:	mov    rdx,rax
   140006601:	mov    rcx,rbp
   140006604:	call   0x140001d20
   140006609:	test   rax,rax
   14000660c:	je     0x140006678
   14000660e:	lea    edx,[rdi-0x1]
   140006611:	movzx  edi,WORD PTR [rax]
   140006614:	lea    r8,[rax+0x2]
   140006618:	cmp    edx,edi
   14000661a:	cmovb  edi,edx
   14000661d:	add    rdx,rdx
   140006620:	movsxd rcx,edi
   140006623:	lea    rsi,[rcx+rcx*1]
   140006627:	mov    rcx,rbx
   14000662a:	mov    r9,rsi
   14000662d:	call   0x140018ee0
   140006632:	test   eax,eax
   140006634:	je     0x14000665c
   140006636:	cmp    eax,0xc
   140006639:	je     0x140006656
   14000663b:	cmp    eax,0x16
   14000663e:	je     0x140006650
   140006640:	cmp    eax,0x22
   140006643:	je     0x140006650
   140006645:	cmp    eax,0x50
   140006648:	je     0x14000665c
   14000664a:	call   0x140006408
   14000664f:	int3   
   140006650:	call   0x140006408
   140006655:	int3   
   140006656:	call   0x1400063c0
   14000665b:	int3   
   14000665c:	and    WORD PTR [rsi+rbx*1],0x0
   140006661:	mov    eax,edi
   140006663:	mov    rbx,QWORD PTR [rsp+0x30]
   140006668:	mov    rbp,QWORD PTR [rsp+0x38]
   14000666d:	mov    rsi,QWORD PTR [rsp+0x40]
   140006672:	add    rsp,0x20
   140006676:	pop    rdi
   140006677:	ret    
   140006678:	and    WORD PTR [rbx],0x0
   14000667c:	xor    eax,eax
   14000667e:	jmp    0x140006663
   140006680:	call   0x140006408
   140006685:	int3   
   140006686:	int3   
   140006687:	int3   
   140006688:	sub    rsp,0x28
   14000668c:	call   0x1400131d0
   140006691:	mov    rax,QWORD PTR [rax+0x18]
   140006695:	add    rsp,0x28
   140006699:	ret    
   14000669a:	int3   
   14000669b:	int3   
   14000669c:	lea    rax,[rip+0x38f4d]        # 0x14003f5f0
   1400066a3:	ret    
   1400066a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400066a9:	push   rdi
   1400066aa:	sub    rsp,0x20
   1400066ae:	test   edx,edx
   1400066b0:	mov    ebx,edx
   1400066b2:	mov    rdi,rcx
   1400066b5:	jns    0x1400066bb
   1400066b7:	xor    eax,eax
   1400066b9:	jmp    0x1400066e4
   1400066bb:	lea    eax,[rdx+0x1]
   1400066be:	imul   eax,r8d
   1400066c2:	movsxd rcx,eax
   1400066c5:	add    rcx,0x18
   1400066c9:	call   0x14001a470
   1400066ce:	test   rax,rax
   1400066d1:	je     0x1400066b7
   1400066d3:	and    DWORD PTR [rax+0x8],0x0
   1400066d7:	mov    QWORD PTR [rax],rdi
   1400066da:	mov    DWORD PTR [rax+0x10],0x1
   1400066e1:	mov    DWORD PTR [rax+0xc],ebx
   1400066e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066e9:	add    rsp,0x20
   1400066ed:	pop    rdi
   1400066ee:	ret    
   1400066ef:	int3   
   1400066f0:	mov    rcx,rdx
   1400066f3:	jmp    0x14001a540
   1400066f8:	rex push rbx
   1400066fa:	sub    rsp,0x20
   1400066fe:	mov    ebx,r8d
   140006701:	mov    r8,rdx
   140006704:	test   ebx,ebx
   140006706:	jns    0x14000670c
   140006708:	xor    eax,eax
   14000670a:	jmp    0x14000672a
   14000670c:	lea    eax,[rbx+0x1]
   14000670f:	mov    rcx,r8
   140006712:	imul   eax,r9d
   140006716:	movsxd rdx,eax
   140006719:	add    rdx,0x18
   14000671d:	call   0x14001b370
   140006722:	test   rax,rax
   140006725:	je     0x140006708
   140006727:	mov    DWORD PTR [rax+0xc],ebx
   14000672a:	add    rsp,0x20
   14000672e:	pop    rbx
   14000672f:	ret    
   140006730:	mov    rax,rcx
   140006733:	ret    
   140006734:	lock add DWORD PTR [rcx+0x18],0x1
   140006739:	lea    rax,[rcx+0x8]
   14000673d:	ret    
   14000673e:	int3   
   14000673f:	int3   
   140006740:	mov    rcx,QWORD PTR [rcx]
   140006743:	jmp    0x14001a540
   140006748:	rex push rbx
   14000674a:	sub    rsp,0x20
   14000674e:	mov    rbx,rcx
   140006751:	mov    rcx,rdx
   140006754:	call   0x14001a470
   140006759:	test   rax,rax
   14000675c:	jne    0x140006769
   14000675e:	mov    ecx,0x8007000e
   140006763:	call   0x1400015c0
   140006768:	int3   
   140006769:	mov    QWORD PTR [rbx],rax
   14000676c:	add    rsp,0x20
   140006770:	pop    rbx
   140006771:	ret    
   140006772:	int3   
   140006773:	int3   
   140006774:	mov    QWORD PTR [rsp+0x8],rbx
   140006779:	push   rdi
   14000677a:	sub    rsp,0x20
   14000677e:	mov    rax,QWORD PTR [rdx]
   140006781:	mov    rbx,rdx
   140006784:	mov    r8d,0x1
   14000678a:	movsxd rdx,DWORD PTR [rax-0x10]
   14000678e:	mov    rdi,rcx
   140006791:	call   0x140014b0c
   140006796:	mov    rdx,QWORD PTR [rbx]
   140006799:	mov    rcx,rdi
   14000679c:	mov    r8d,DWORD PTR [rdx-0x10]
   1400067a0:	add    r8d,r8d
   1400067a3:	call   0x140014f74
   1400067a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067ad:	mov    rax,rdi
   1400067b0:	add    rsp,0x20
   1400067b4:	pop    rdi
   1400067b5:	ret    
   1400067b6:	int3   
   1400067b7:	int3   
   1400067b8:	sub    rsp,0x28
   1400067bc:	lea    rax,[rcx+0x8]
   1400067c0:	cmp    QWORD PTR [rcx],rax
   1400067c3:	je     0x1400067ca
   1400067c5:	call   0x140006740
   1400067ca:	add    rsp,0x28
   1400067ce:	ret    
   1400067cf:	int3   
   1400067d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400067d5:	push   rsi
   1400067d6:	push   rdi
   1400067d7:	push   r12
   1400067d9:	sub    rsp,0x40
   1400067dd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400067e6:	mov    QWORD PTR [rsp+0x68],rbx
   1400067eb:	mov    QWORD PTR [rsp+0x70],rbp
   1400067f0:	mov    r12d,r8d
   1400067f3:	mov    rbp,rdx
   1400067f6:	mov    rdi,rcx
   1400067f9:	lea    rcx,[rip+0x38df0]        # 0x14003f5f0
   140006800:	mov    rax,QWORD PTR [rip+0x38de9]        # 0x14003f5f0
   140006807:	call   QWORD PTR [rax+0x18]
   14000680a:	add    rax,0x18
   14000680e:	mov    QWORD PTR [rdi],rax
   140006811:	test   r12d,r12d
   140006814:	jle    0x1400068b2
   14000681a:	test   rbp,rbp
   14000681d:	jne    0x14000682a
   14000681f:	mov    ecx,0x80070057
   140006824:	call   0x1400015c0
   140006829:	int3   
   14000682a:	call   QWORD PTR [rip+0x3b0b0]        # 0x1400418e0
   140006830:	and    DWORD PTR [rsp+0x28],0x0
   140006835:	and    QWORD PTR [rsp+0x20],0x0
   14000683b:	mov    r9d,r12d
   14000683e:	mov    r8,rbp
   140006841:	xor    edx,edx
   140006843:	mov    ecx,eax
   140006845:	call   QWORD PTR [rip+0x2ac05]        # 0x140031450
   14000684b:	movsxd rsi,eax
   14000684e:	mov    rcx,QWORD PTR [rdi]
   140006851:	mov    edx,0x1
   140006856:	sub    edx,DWORD PTR [rcx-0x8]
   140006859:	mov    ecx,DWORD PTR [rcx-0xc]
   14000685c:	sub    ecx,esi
   14000685e:	or     ecx,edx
   140006860:	jge    0x14000686c
   140006862:	mov    edx,esi
   140006864:	mov    rcx,rdi
   140006867:	call   0x1400015e0
   14000686c:	mov    rbx,QWORD PTR [rdi]
   14000686f:	call   QWORD PTR [rip+0x3b06b]        # 0x1400418e0
   140006875:	mov    ecx,eax
   140006877:	mov    DWORD PTR [rsp+0x28],esi
   14000687b:	mov    QWORD PTR [rsp+0x20],rbx
   140006880:	mov    r9d,r12d
   140006883:	mov    r8,rbp
   140006886:	xor    edx,edx
   140006888:	call   QWORD PTR [rip+0x2abc2]        # 0x140031450
   14000688e:	test   esi,esi
   140006890:	js     0x1400068a7
   140006892:	mov    rax,QWORD PTR [rdi]
   140006895:	cmp    esi,DWORD PTR [rax-0xc]
   140006898:	jg     0x1400068a7
   14000689a:	mov    DWORD PTR [rax-0x10],esi
   14000689d:	mov    rax,QWORD PTR [rdi]
   1400068a0:	and    WORD PTR [rax+rsi*2],0x0
   1400068a5:	jmp    0x1400068b2
   1400068a7:	mov    ecx,0x80070057
   1400068ac:	call   0x1400015c0
   1400068b1:	nop
   1400068b2:	mov    rax,rdi
   1400068b5:	mov    rbx,QWORD PTR [rsp+0x68]
   1400068ba:	mov    rbp,QWORD PTR [rsp+0x70]
   1400068bf:	add    rsp,0x40
   1400068c3:	pop    r12
   1400068c5:	pop    rdi
   1400068c6:	pop    rsi
   1400068c7:	ret    
   1400068c8:	int3   
   1400068c9:	int3   
   1400068ca:	int3   
   1400068cb:	int3   
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	int3   
   1400068cf:	int3   
   1400068d0:	rex push rbp
   1400068d2:	sub    rsp,0x20
   1400068d6:	mov    rbp,rdx
   1400068d9:	mov    rcx,QWORD PTR [rbp+0x60]
   1400068dd:	call   0x140001dc0
   1400068e2:	add    rsp,0x20
   1400068e6:	pop    rbp
   1400068e7:	ret    
   1400068e8:	mov    rax,rsp
   1400068eb:	push   rbp
   1400068ec:	push   rdi
   1400068ed:	push   r12
   1400068ef:	sub    rsp,0x170
   1400068f6:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400068ff:	mov    QWORD PTR [rax+0x18],rbx
   140006903:	mov    rax,QWORD PTR [rip+0x396c6]        # 0x14003ffd0
   14000690a:	xor    rax,rsp
   14000690d:	mov    QWORD PTR [rsp+0x160],rax
   140006915:	mov    r12,rdx
   140006918:	mov    rbp,rcx
   14000691b:	lea    rdx,[rsp+0x20]
   140006920:	call   0x14001492c
   140006925:	mov    rdi,rax
   140006928:	cmp    DWORD PTR [rsp+0x20],0x1
   14000692d:	jne    0x1400069fa
   140006933:	mov    ecx,eax
   140006935:	and    QWORD PTR [rsp+0x40],0x0
   14000693b:	test   eax,eax
   14000693d:	je     0x140006976
   14000693f:	xor    edx,edx
   140006941:	or     rax,0xffffffffffffffff
   140006945:	div    rcx
   140006948:	cmp    rax,0x1
   14000694c:	jae    0x140006959
   14000694e:	mov    ecx,0x80070057
   140006953:	call   0x1400015c0
   140006958:	int3   
   140006959:	cmp    rcx,0x80
   140006960:	jbe    0x140006976
   140006962:	mov    rdx,rcx
   140006965:	lea    rcx,[rsp+0x40]
   14000696a:	call   0x140006748
   14000696f:	mov    rdx,QWORD PTR [rsp+0x40]
   140006974:	jmp    0x140006980
   140006976:	lea    rdx,[rsp+0x48]
   14000697b:	mov    QWORD PTR [rsp+0x40],rdx
   140006980:	mov    r8d,edi
   140006983:	mov    rcx,rbp
   140006986:	call   0x140014530
   14000698b:	cmp    eax,edi
   14000698d:	je     0x14000699a
   14000698f:	xor    edx,edx
   140006991:	lea    ecx,[rdx+0x3]
   140006994:	call   0x1400156e8
   140006999:	int3   
   14000699a:	mov    r8d,edi
   14000699d:	mov    rdx,QWORD PTR [rsp+0x40]
   1400069a2:	lea    rcx,[rsp+0x30]
   1400069a7:	call   0x1400067d0
   1400069ac:	nop
   1400069ad:	mov    rdx,rax
   1400069b0:	mov    rcx,r12
   1400069b3:	call   0x140001750
   1400069b8:	nop
   1400069b9:	mov    rdx,QWORD PTR [rsp+0x30]
   1400069be:	add    rdx,0xffffffffffffffe8
   1400069c2:	or     eax,0xffffffff
   1400069c5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400069ca:	add    eax,0xffffffff
   1400069cd:	test   eax,eax
   1400069cf:	jg     0x1400069db
   1400069d1:	mov    rcx,QWORD PTR [rdx]
   1400069d4:	mov    rax,QWORD PTR [rcx]
   1400069d7:	call   QWORD PTR [rax+0x8]
   1400069da:	nop
   1400069db:	lea    rax,[rsp+0x48]
   1400069e0:	cmp    QWORD PTR [rsp+0x40],rax
   1400069e5:	je     0x140006ae6
   1400069eb:	lea    rcx,[rsp+0x40]
   1400069f0:	call   0x140006740
   1400069f5:	jmp    0x140006ae6
   1400069fa:	mov    ebx,eax
   1400069fc:	and    QWORD PTR [rsp+0xd0],0x0
   140006a05:	test   eax,eax
   140006a07:	je     0x140006a47
   140006a09:	xor    edx,edx
   140006a0b:	or     rax,0xffffffffffffffff
   140006a0f:	div    rbx
   140006a12:	cmp    rax,0x2
   140006a16:	jb     0x140006a3c
   140006a18:	lea    rdx,[rbx+rbx*1]
   140006a1c:	cmp    rdx,0x80
   140006a23:	jbe    0x140006a47
   140006a25:	lea    rcx,[rsp+0xd0]
   140006a2d:	call   0x140006748
   140006a32:	mov    rdx,QWORD PTR [rsp+0xd0]
   140006a3a:	jmp    0x140006a57
   140006a3c:	mov    ecx,0x80070057
   140006a41:	call   0x1400015c0
   140006a46:	int3   
   140006a47:	lea    rdx,[rsp+0xd8]
   140006a4f:	mov    QWORD PTR [rsp+0xd0],rdx
   140006a57:	lea    r8d,[rdi+rdi*1]
   140006a5b:	mov    rcx,rbp
   140006a5e:	call   0x140014530
   140006a63:	lea    rcx,[rbx+rbx*1]
   140006a67:	mov    eax,eax
   140006a69:	cmp    rax,rcx
   140006a6c:	je     0x140006a79
   140006a6e:	xor    edx,edx
   140006a70:	lea    ecx,[rdx+0x3]
   140006a73:	call   0x1400156e8
   140006a78:	int3   
   140006a79:	lea    r9,[rip+0x38b70]        # 0x14003f5f0
   140006a80:	mov    r8d,edi
   140006a83:	mov    rdx,QWORD PTR [rsp+0xd0]
   140006a8b:	lea    rcx,[rsp+0x28]
   140006a90:	call   0x140004c90
   140006a95:	nop
   140006a96:	lea    rdx,[rsp+0x28]
   140006a9b:	mov    rcx,r12
   140006a9e:	call   0x140001750
   140006aa3:	nop
   140006aa4:	mov    rdx,QWORD PTR [rsp+0x28]
   140006aa9:	add    rdx,0xffffffffffffffe8
   140006aad:	or     eax,0xffffffff
   140006ab0:	lock xadd DWORD PTR [rdx+0x10],eax
   140006ab5:	add    eax,0xffffffff
   140006ab8:	test   eax,eax
   140006aba:	jg     0x140006ac7
   140006abc:	mov    rcx,QWORD PTR [rdx]
   140006abf:	mov    r8,QWORD PTR [rcx]
   140006ac2:	call   QWORD PTR [r8+0x8]
   140006ac6:	nop
   140006ac7:	lea    rax,[rsp+0xd8]
   140006acf:	cmp    QWORD PTR [rsp+0xd0],rax
   140006ad7:	je     0x140006ae6
   140006ad9:	lea    rcx,[rsp+0xd0]
   140006ae1:	call   0x140006740
   140006ae6:	mov    rax,rbp
   140006ae9:	mov    rcx,QWORD PTR [rsp+0x160]
   140006af1:	xor    rcx,rsp
   140006af4:	call   0x140019370
   140006af9:	mov    rbx,QWORD PTR [rsp+0x1a0]
   140006b01:	add    rsp,0x170
   140006b08:	pop    r12
   140006b0a:	pop    rdi
   140006b0b:	pop    rbp
   140006b0c:	ret    
   140006b0d:	int3   
   140006b0e:	int3   
   140006b0f:	int3   
   140006b10:	int3   
   140006b11:	int3   
   140006b12:	int3   
   140006b13:	int3   
   140006b14:	int3   
   140006b15:	int3   
   140006b16:	int3   
   140006b17:	int3   
   140006b18:	rex push rbp
   140006b1a:	sub    rsp,0x20
   140006b1e:	mov    rbp,rdx
   140006b21:	lea    rcx,[rbp+0x40]
   140006b25:	call   0x1400067b8
   140006b2a:	add    rsp,0x20
   140006b2e:	pop    rbp
   140006b2f:	ret    
   140006b30:	int3   
   140006b31:	int3   
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	int3   
   140006b35:	int3   
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	rex push rbp
   140006b3a:	sub    rsp,0x20
   140006b3e:	mov    rbp,rdx
   140006b41:	lea    rcx,[rbp+0x30]
   140006b45:	call   0x140001dc0
   140006b4a:	add    rsp,0x20
   140006b4e:	pop    rbp
   140006b4f:	ret    
   140006b50:	int3   
   140006b51:	int3   
   140006b52:	int3   
   140006b53:	int3   
   140006b54:	int3   
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	rex push rbp
   140006b5a:	sub    rsp,0x20
   140006b5e:	mov    rbp,rdx
   140006b61:	lea    rcx,[rbp+0xd0]
   140006b68:	call   0x1400067b8
   140006b6d:	add    rsp,0x20
   140006b71:	pop    rbp
   140006b72:	ret    
   140006b73:	int3   
   140006b74:	int3   
   140006b75:	int3   
   140006b76:	int3   
   140006b77:	int3   
   140006b78:	rex push rbp
   140006b7a:	sub    rsp,0x20
   140006b7e:	mov    rbp,rdx
   140006b81:	lea    rcx,[rbp+0x28]
   140006b85:	call   0x140001dc0
   140006b8a:	add    rsp,0x20
   140006b8e:	pop    rbp
   140006b8f:	ret    
   140006b90:	mov    QWORD PTR [rsp+0x8],rbx
   140006b95:	push   rdi
   140006b96:	sub    rsp,0x20
   140006b9a:	test   edx,edx
   140006b9c:	mov    edi,edx
   140006b9e:	mov    rbx,rcx
   140006ba1:	je     0x140006bb3
   140006ba3:	cmp    edx,0x1
   140006ba6:	je     0x140006bb3
   140006ba8:	cmp    edx,0xffffffff
   140006bab:	je     0x140006bb3
   140006bad:	call   0x140006408
   140006bb2:	int3   
   140006bb3:	cmp    QWORD PTR [rip+0x3e51d],0x0        # 0x1400450d8
   140006bbb:	jne    0x140006bc3
   140006bbd:	call   0x140006408
   140006bc2:	int3   
   140006bc3:	mov    ecx,0x2
   140006bc8:	call   0x140015804
   140006bcd:	add    DWORD PTR [rbx+0x100],edi
   140006bd3:	cmp    DWORD PTR [rbx+0x100],0x0
   140006bda:	jle    0x140006bff
   140006bdc:	mov    rcx,QWORD PTR [rip+0x3e4f5]        # 0x1400450d8
   140006be3:	call   QWORD PTR [rip+0x2ab8f]        # 0x140031778
   140006be9:	test   edi,edi
   140006beb:	jle    0x140006c13
   140006bed:	cmp    DWORD PTR [rbx+0x100],0x1
   140006bf4:	jne    0x140006c13
   140006bf6:	mov    QWORD PTR [rbx+0x108],rax
   140006bfd:	jmp    0x140006c13
   140006bff:	mov    rcx,QWORD PTR [rbx+0x108]
   140006c06:	and    DWORD PTR [rbx+0x100],0x0
   140006c0d:	call   QWORD PTR [rip+0x2ab65]        # 0x140031778
   140006c13:	mov    ecx,0x2
   140006c18:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c1d:	add    rsp,0x20
   140006c21:	pop    rdi
   140006c22:	jmp    0x140015898
   140006c27:	int3   
   140006c28:	sub    rsp,0x28
   140006c2c:	cmp    QWORD PTR [rcx+0xb0],0x0
   140006c34:	je     0x140006c45
   140006c36:	mov    rcx,QWORD PTR [rcx+0xb0]
   140006c3d:	mov    rax,QWORD PTR [rcx]
   140006c40:	call   QWORD PTR [rax+0x40]
   140006c43:	jmp    0x140006c4a
   140006c45:	mov    eax,0x1
   140006c4a:	add    rsp,0x28
   140006c4e:	ret    
   140006c4f:	int3   
   140006c50:	sub    rsp,0x28
   140006c54:	test   rdx,rdx
   140006c57:	jne    0x140006c5f
   140006c59:	call   0x140006408
   140006c5e:	int3   
   140006c5f:	cmp    QWORD PTR [rcx+0x110],0x0
   140006c67:	je     0x140006c76
   140006c69:	mov    rcx,QWORD PTR [rcx+0x110]
   140006c70:	mov    rax,QWORD PTR [rcx]
   140006c73:	call   QWORD PTR [rax+0x8]
   140006c76:	add    rsp,0x28
   140006c7a:	ret    
   140006c7b:	int3   
   140006c7c:	sub    rsp,0x28
   140006c80:	cmp    QWORD PTR [rcx+0xb0],0x0
   140006c88:	jne    0x140006c90
   140006c8a:	call   0x140006408
   140006c8f:	int3   
   140006c90:	mov    rcx,QWORD PTR [rcx+0xb0]
   140006c97:	mov    rax,QWORD PTR [rcx]
   140006c9a:	add    rsp,0x28
   140006c9e:	rex.W jmp QWORD PTR [rax+0x38]
   140006ca2:	int3   
   140006ca3:	int3   
   140006ca4:	sub    rsp,0x28
   140006ca8:	test   rdx,rdx
   140006cab:	mov    r8,rdx
   140006cae:	jne    0x140006cb6
   140006cb0:	call   0x140006408
   140006cb5:	int3   
   140006cb6:	cmp    QWORD PTR [rcx+0x110],0x0
   140006cbe:	jne    0x140006ccc
   140006cc0:	mov    rax,QWORD PTR [rdx]
   140006cc3:	mov    rcx,r8
   140006cc6:	xor    edx,edx
   140006cc8:	call   QWORD PTR [rax]
   140006cca:	jmp    0x140006cd9
   140006ccc:	mov    rcx,QWORD PTR [rcx+0x110]
   140006cd3:	mov    rax,QWORD PTR [rcx]
   140006cd6:	call   QWORD PTR [rax+0x18]
   140006cd9:	add    rsp,0x28
   140006cdd:	ret    
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	sub    rsp,0x28
   140006ce4:	cmp    QWORD PTR [rcx+0xb0],0x0
   140006cec:	je     0x140006cfd
   140006cee:	mov    rcx,QWORD PTR [rcx+0xb0]
   140006cf5:	mov    rax,QWORD PTR [rcx]
   140006cf8:	call   QWORD PTR [rax+0x60]
   140006cfb:	jmp    0x140006cff
   140006cfd:	xor    eax,eax
   140006cff:	add    rsp,0x28
   140006d03:	ret    
   140006d04:	mov    rcx,QWORD PTR [rcx+0x40]
   140006d08:	xor    r9d,r9d
   140006d0b:	xor    r8d,r8d
   140006d0e:	mov    rcx,QWORD PTR [rcx+0x40]
   140006d12:	lea    edx,[r9+0x10]
   140006d16:	rex.W jmp QWORD PTR [rip+0x2aaab]        # 0x1400317c8
   140006d1d:	int3   
   140006d1e:	int3   
   140006d1f:	int3   
   140006d20:	mov    QWORD PTR [rsp+0x8],rbx
   140006d25:	push   rdi
   140006d26:	sub    rsp,0x20
   140006d2a:	mov    r8,QWORD PTR [rcx+0x110]
   140006d31:	mov    rdi,rcx
   140006d34:	test   r8,r8
   140006d37:	jne    0x140006d3f
   140006d39:	call   0x140006408
   140006d3e:	int3   
   140006d3f:	mov    ecx,0xe110
   140006d44:	cmp    edx,ecx
   140006d46:	jae    0x140006d4e
   140006d48:	call   0x140006408
   140006d4d:	int3   
   140006d4e:	mov    eax,DWORD PTR [r8+0x8]
   140006d52:	add    eax,ecx
   140006d54:	cmp    edx,eax
   140006d56:	jb     0x140006d5e
   140006d58:	call   0x140006408
   140006d5d:	int3   
   140006d5e:	lea    ebx,[rdx-0xe110]
   140006d64:	test   ebx,ebx
   140006d66:	js     0x140006da9
   140006d68:	cmp    ebx,DWORD PTR [r8+0x8]
   140006d6c:	jge    0x140006da9
   140006d6e:	mov    rax,QWORD PTR [r8+0x10]
   140006d72:	mov    r8,QWORD PTR [rdi]
   140006d75:	movsxd rcx,ebx
   140006d78:	mov    rdx,QWORD PTR [rax+rcx*8]
   140006d7c:	mov    rcx,rdi
   140006d7f:	call   QWORD PTR [r8+0x110]
   140006d86:	test   rax,rax
   140006d89:	jne    0x140006d99
   140006d8b:	mov    rcx,QWORD PTR [rdi+0x110]
   140006d92:	mov    edx,ebx
   140006d94:	mov    rax,QWORD PTR [rcx]
   140006d97:	call   QWORD PTR [rax]
   140006d99:	mov    eax,0x1
   140006d9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006da3:	add    rsp,0x20
   140006da7:	pop    rdi
   140006da8:	ret    
   140006da9:	call   0x140006408
   140006dae:	int3   
   140006daf:	int3   
   140006db0:	mov    rax,QWORD PTR [rsp+0x28]
   140006db5:	test   rax,rax
   140006db8:	jne    0x140006dbb
   140006dba:	ret    
   140006dbb:	mov    WORD PTR [rax],r9w
   140006dbf:	mov    eax,0x1
   140006dc4:	ret    
   140006dc5:	int3   
   140006dc6:	int3   
   140006dc7:	int3   
   140006dc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dcd:	push   rdi
   140006dce:	sub    rsp,0x20
   140006dd2:	and    QWORD PTR [rcx+0x8],0x0
   140006dd7:	mov    QWORD PTR [rcx],rdx
   140006dda:	cmp    BYTE PTR [rip+0x3acf7],0x0        # 0x140041ad8
   140006de1:	mov    rbx,rcx
   140006de4:	jne    0x140006eaa
   140006dea:	lea    rcx,[rip+0x2afe7]        # 0x140031dd8
   140006df1:	call   QWORD PTR [rip+0x2a5f9]        # 0x1400313f0
   140006df7:	test   rax,rax
   140006dfa:	mov    rdi,rax
   140006dfd:	jne    0x140006e05
   140006dff:	call   0x140006408
   140006e04:	int3   
   140006e05:	lea    rdx,[rip+0x2afbc]        # 0x140031dc8
   140006e0c:	mov    rcx,rax
   140006e0f:	call   QWORD PTR [rip+0x2a64b]        # 0x140031460
   140006e15:	lea    rdx,[rip+0x2af9c]        # 0x140031db8
   140006e1c:	mov    rcx,rdi
   140006e1f:	mov    QWORD PTR [rip+0x3ac92],rax        # 0x140041ab8
   140006e26:	call   QWORD PTR [rip+0x2a634]        # 0x140031460
   140006e2c:	lea    rdx,[rip+0x2af75]        # 0x140031da8
   140006e33:	mov    rcx,rdi
   140006e36:	mov    QWORD PTR [rip+0x3ac83],rax        # 0x140041ac0
   140006e3d:	call   QWORD PTR [rip+0x2a61d]        # 0x140031460
   140006e43:	lea    rdx,[rip+0x2af46]        # 0x140031d90
   140006e4a:	mov    rcx,rdi
   140006e4d:	mov    QWORD PTR [rip+0x3ac74],rax        # 0x140041ac8
   140006e54:	call   QWORD PTR [rip+0x2a606]        # 0x140031460
   140006e5a:	cmp    QWORD PTR [rip+0x3ac56],0x0        # 0x140041ab8
   140006e62:	mov    QWORD PTR [rip+0x3ac67],rax        # 0x140041ad0
   140006e69:	je     0x140006e8a
   140006e6b:	cmp    QWORD PTR [rip+0x3ac4d],0x0        # 0x140041ac0
   140006e73:	je     0x140006e84
   140006e75:	cmp    QWORD PTR [rip+0x3ac4b],0x0        # 0x140041ac8
   140006e7d:	je     0x140006e84
   140006e7f:	test   rax,rax
   140006e82:	jne    0x140006ea3
   140006e84:	call   0x140006408
   140006e89:	int3   
   140006e8a:	cmp    QWORD PTR [rip+0x3ac2e],0x0        # 0x140041ac0
   140006e92:	jne    0x140006eb8
   140006e94:	cmp    QWORD PTR [rip+0x3ac2c],0x0        # 0x140041ac8
   140006e9c:	jne    0x140006eb8
   140006e9e:	test   rax,rax
   140006ea1:	jne    0x140006eb8
   140006ea3:	mov    BYTE PTR [rip+0x3ac2e],0x1        # 0x140041ad8
   140006eaa:	mov    rax,rbx
   140006ead:	mov    rbx,QWORD PTR [rsp+0x30]
   140006eb2:	add    rsp,0x20
   140006eb6:	pop    rdi
   140006eb7:	ret    
   140006eb8:	call   0x140006408
   140006ebd:	int3   
   140006ebe:	int3   
   140006ebf:	int3   
   140006ec0:	mov    rax,rsp
   140006ec3:	push   rbx
   140006ec4:	push   rsi
   140006ec5:	push   rdi
   140006ec6:	sub    rsp,0x30
   140006eca:	and    QWORD PTR [rax+0x20],0x0
   140006ecf:	and    DWORD PTR [rax+0x8],0x0
   140006ed3:	and    DWORD PTR [rax+0x10],0x0
   140006ed7:	and    DWORD PTR [rcx+0x138],0x0
   140006ede:	cmp    QWORD PTR [rip+0x3873a],0x0        # 0x14003f620
   140006ee6:	mov    rsi,rcx
   140006ee9:	mov    DWORD PTR [rax+0x18],0x4
   140006ef0:	lea    rdi,[rip+0x38729]        # 0x14003f620
   140006ef7:	je     0x140006fba
   140006efd:	mov    rdx,QWORD PTR [rdi]
   140006f00:	lea    rax,[rsp+0x68]
   140006f05:	mov    r9d,0x1
   140006f0b:	xor    r8d,r8d
   140006f0e:	mov    rcx,0xffffffff80000001
   140006f15:	mov    QWORD PTR [rsp+0x20],rax
   140006f1a:	call   QWORD PTR [rip+0x2a0e0]        # 0x140031000
   140006f20:	test   eax,eax
   140006f22:	jne    0x140006fac
   140006f28:	mov    rbx,QWORD PTR [rdi+0x8]
   140006f2c:	jmp    0x140006f93
   140006f2e:	lea    rcx,[rsp+0x60]
   140006f33:	lea    r9,[rsp+0x58]
   140006f38:	xor    r8d,r8d
   140006f3b:	mov    QWORD PTR [rsp+0x28],rcx
   140006f40:	lea    rcx,[rsp+0x50]
   140006f45:	mov    rdx,rax
   140006f48:	mov    QWORD PTR [rsp+0x20],rcx
   140006f4d:	mov    rcx,QWORD PTR [rsp+0x68]
   140006f52:	call   QWORD PTR [rip+0x2a0e8]        # 0x140031040
   140006f58:	test   eax,eax
   140006f5a:	jne    0x140006f7d
   140006f5c:	cmp    DWORD PTR [rsp+0x58],0x4
   140006f61:	jne    0x140006f7d
   140006f63:	cmp    DWORD PTR [rsp+0x50],0x0
   140006f68:	mov    eax,DWORD PTR [rbx+0x8]
   140006f6b:	je     0x140006f75
   140006f6d:	or     DWORD PTR [rsi+0x138],eax
   140006f73:	jmp    0x140006f7d
   140006f75:	not    eax
   140006f77:	and    DWORD PTR [rsi+0x138],eax
   140006f7d:	and    DWORD PTR [rsp+0x50],0x0
   140006f82:	and    DWORD PTR [rsp+0x58],0x0
   140006f87:	mov    DWORD PTR [rsp+0x60],0x4
   140006f8f:	add    rbx,0x10
   140006f93:	mov    rax,QWORD PTR [rbx]
   140006f96:	test   rax,rax
   140006f99:	jne    0x140006f2e
   140006f9b:	mov    rcx,QWORD PTR [rsp+0x68]
   140006fa0:	call   QWORD PTR [rip+0x2a07a]        # 0x140031020
   140006fa6:	and    QWORD PTR [rsp+0x68],0x0
   140006fac:	add    rdi,0x10
   140006fb0:	cmp    QWORD PTR [rdi],0x0
   140006fb4:	jne    0x140006efd
   140006fba:	mov    eax,0x1
   140006fbf:	add    rsp,0x30
   140006fc3:	pop    rdi
   140006fc4:	pop    rsi
   140006fc5:	pop    rbx
   140006fc6:	ret    
   140006fc7:	int3   
   140006fc8:	rex push rbx
   140006fca:	sub    rsp,0x20
   140006fce:	mov    rax,QWORD PTR [rip+0x3aad3]        # 0x140041aa8
   140006fd5:	xor    edx,edx
   140006fd7:	mov    rbx,rcx
   140006fda:	cmp    rax,rdx
   140006fdd:	je     0x140006ff6
   140006fdf:	cmp    QWORD PTR [rcx+0xb0],rdx
   140006fe6:	jne    0x140006fef
   140006fe8:	mov    QWORD PTR [rcx+0xb0],rax
   140006fef:	mov    QWORD PTR [rip+0x3aab2],rdx        # 0x140041aa8
   140006ff6:	mov    rcx,QWORD PTR [rcx+0xb0]
   140006ffd:	cmp    rcx,rdx
   140007000:	je     0x14000700a
   140007002:	mov    rax,QWORD PTR [rcx]
   140007005:	call   QWORD PTR [rax+0x18]
   140007008:	jmp    0x140007010
   14000700a:	mov    DWORD PTR [rip+0x38608],edx        # 0x14003f618
   140007010:	mov    rax,QWORD PTR [rbx]
   140007013:	mov    rcx,rbx
   140007016:	call   QWORD PTR [rax+0x168]
   14000701c:	mov    eax,0x1
   140007021:	add    rsp,0x20
   140007025:	pop    rbx
   140007026:	ret    
   140007027:	int3   
   140007028:	rex push rbx
   14000702a:	sub    rsp,0x20
   14000702e:	cmp    QWORD PTR [rcx+0x110],0x0
   140007036:	mov    rbx,rcx
   140007039:	je     0x140007048
   14000703b:	mov    rcx,QWORD PTR [rcx+0x110]
   140007042:	mov    rax,QWORD PTR [rcx]
   140007045:	call   QWORD PTR [rax+0x28]
   140007048:	mov    r9d,DWORD PTR [rbx+0x124]
   14000704f:	test   r9d,r9d
   140007052:	je     0x14000706a
   140007054:	lea    r8,[rip+0x2ac4d]        # 0x140031ca8
   14000705b:	lea    rdx,[rip+0x2ac2e]        # 0x140031c90
   140007062:	mov    rcx,rbx
   140007065:	call   0x140015a3c
   14000706a:	add    rsp,0x20
   14000706e:	pop    rbx
   14000706f:	ret    
   140007070:	mov    QWORD PTR [rsp+0x8],rbx
   140007075:	push   rdi
   140007076:	sub    rsp,0x20
   14000707a:	mov    rax,QWORD PTR [rcx+0x118]
   140007081:	xor    ebx,ebx
   140007083:	mov    rdi,rcx
   140007086:	cmp    rax,rbx
   140007089:	je     0x140007097
   14000708b:	cmp    DWORD PTR [rax+0x14],0x6
   14000708f:	je     0x1400070a9
   140007091:	cmp    DWORD PTR [rax+0x14],0x5
   140007095:	je     0x1400070a9
   140007097:	call   0x1400131d0
   14000709c:	cmp    BYTE PTR [rax+0x28],bl
   14000709f:	jne    0x1400070a9
   1400070a1:	mov    rcx,rdi
   1400070a4:	call   0x140007028
   1400070a9:	mov    rax,QWORD PTR [rdi+0x130]
   1400070b0:	cmp    rax,rbx
   1400070b3:	je     0x1400070b7
   1400070b5:	call   rax
   1400070b7:	mov    rcx,QWORD PTR [rdi+0xf8]
   1400070be:	cmp    rcx,rbx
   1400070c1:	je     0x1400070d0
   1400070c3:	call   QWORD PTR [rip+0x2a38f]        # 0x140031458
   1400070c9:	mov    QWORD PTR [rdi+0xf8],rbx
   1400070d0:	call   0x140009468
   1400070d5:	cmp    rax,rbx
   1400070d8:	je     0x1400070e2
   1400070da:	call   0x140009468
   1400070df:	mov    ebx,DWORD PTR [rax+0x10]
   1400070e2:	mov    eax,ebx
   1400070e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070e9:	add    rsp,0x20
   1400070ed:	pop    rdi
   1400070ee:	ret    
   1400070ef:	int3   
   1400070f0:	rex push rbx
   1400070f2:	sub    rsp,0x20
   1400070f6:	mov    ebx,ecx
   1400070f8:	call   0x140009454
   1400070fd:	test   rax,rax
   140007100:	je     0x140007114
   140007102:	mov    rax,QWORD PTR [rax+0x78]
   140007106:	test   rax,rax
   140007109:	je     0x140007114
   14000710b:	mov    ecx,0x1
   140007110:	mov    edx,ecx
   140007112:	call   rax
   140007114:	mov    ecx,ebx
   140007116:	add    rsp,0x20
   14000711a:	pop    rbx
   14000711b:	rex.W jmp QWORD PTR [rip+0x2a64e]        # 0x140031770
   140007122:	int3   
   140007123:	int3   
   140007124:	mov    QWORD PTR [rsp+0x8],rbx
   140007129:	mov    QWORD PTR [rsp+0x10],rsi
   14000712e:	push   rdi
   14000712f:	sub    rsp,0x20
   140007133:	test   rdx,rdx
   140007136:	mov    rbx,rdx
   140007139:	jne    0x140007141
   14000713b:	call   0x140006408
   140007140:	int3   
   140007141:	test   r8,r8
   140007144:	jne    0x14000714c
   140007146:	call   0x140006408
   14000714b:	int3   
   14000714c:	mov    eax,DWORD PTR [r8+0x8]
   140007150:	sub    eax,0x1
   140007153:	je     0x1400071c5
   140007155:	cmp    eax,0xe
   140007158:	je     0x1400071c5
   14000715a:	xor    esi,esi
   14000715c:	cmp    DWORD PTR [r8+0x8],0x111
   140007164:	mov    edi,0xf108
   140007169:	jne    0x14000717a
   14000716b:	cmp    QWORD PTR [r8+0x18],rsi
   14000716f:	lea    eax,[rdi+0x1]
   140007172:	mov    esi,0x1
   140007177:	cmove  edi,eax
   14000717a:	lea    rdx,[rip+0x2a927]        # 0x140031aa8
   140007181:	mov    rcx,rbx
   140007184:	call   0x140013544
   140007189:	mov    rcx,rbx
   14000718c:	test   eax,eax
   14000718e:	je     0x1400071a0
   140007190:	mov    rax,QWORD PTR [rbx]
   140007193:	mov    r8d,edi
   140007196:	mov    edx,0x1030
   14000719b:	call   QWORD PTR [rax+0x28]
   14000719e:	jmp    0x1400071c0
   1400071a0:	lea    rdx,[rip+0x2cca1]        # 0x140033e48
   1400071a7:	call   0x140013544
   1400071ac:	test   eax,eax
   1400071ae:	jne    0x1400071c0
   1400071b0:	mov    r9,QWORD PTR [rbx]
   1400071b3:	lea    edx,[rax+0x10]
   1400071b6:	mov    r8d,edi
   1400071b9:	mov    rcx,rbx
   1400071bc:	call   QWORD PTR [r9+0x28]
   1400071c0:	mov    rax,rsi
   1400071c3:	jmp    0x1400071ca
   1400071c5:	call   0x140009748
   1400071ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400071cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400071d4:	add    rsp,0x20
   1400071d8:	pop    rdi
   1400071d9:	ret    
   1400071da:	int3   
   1400071db:	int3   
   1400071dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400071e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400071e6:	push   rdi
   1400071e7:	sub    rsp,0x20
   1400071eb:	xor    ebx,ebx
   1400071ed:	mov    edi,edx
   1400071ef:	mov    rsi,rcx
   1400071f2:	cmp    edx,ebx
   1400071f4:	jg     0x140007247
   1400071f6:	call   0x140009c5c
   1400071fb:	cmp    QWORD PTR [rsi+0xb0],rbx
   140007202:	mov    QWORD PTR [rsp+0x40],rbx
   140007207:	je     0x140007251
   140007209:	mov    rcx,QWORD PTR [rsi+0xb0]
   140007210:	mov    rax,QWORD PTR [rcx]
   140007213:	call   QWORD PTR [rax+0x20]
   140007216:	cmp    rax,rbx
   140007219:	mov    QWORD PTR [rsp+0x40],rax
   14000721e:	je     0x140007251
   140007220:	mov    rcx,QWORD PTR [rsi+0xb0]
   140007227:	lea    rdx,[rsp+0x40]
   14000722c:	mov    rax,QWORD PTR [rcx]
   14000722f:	call   QWORD PTR [rax+0x28]
   140007232:	mov    rcx,rax
   140007235:	mov    rdx,QWORD PTR [rax]
   140007238:	call   QWORD PTR [rdx+0x110]
   14000723e:	cmp    QWORD PTR [rsp+0x40],rbx
   140007243:	jne    0x140007220
   140007245:	jmp    0x140007251
   140007247:	cmp    edx,0x1
   14000724a:	jne    0x140007251
   14000724c:	call   0x140009c5c
   140007251:	mov    rsi,QWORD PTR [rsp+0x38]
   140007256:	cmp    edi,0x1
   140007259:	setl   bl
   14000725c:	mov    eax,ebx
   14000725e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007263:	add    rsp,0x20
   140007267:	pop    rdi
   140007268:	ret    
   140007269:	int3   
   14000726a:	int3   
   14000726b:	int3   
   14000726c:	mov    QWORD PTR [rsp+0x10],rbx
   140007271:	push   rdi
   140007272:	sub    rsp,0x30
   140007276:	mov    rbx,rcx
   140007279:	mov    rcx,QWORD PTR [rcx+0xe8]
   140007280:	mov    rdi,rdx
   140007283:	test   rcx,rcx
   140007286:	je     0x140007353
   14000728c:	call   QWORD PTR [rip+0x2a186]        # 0x140031418
   140007292:	mov    rdx,rdi
   140007295:	movzx  r8d,WORD PTR [rax+0x2]
   14000729a:	lea    rcx,[rax+r8*2]
   14000729e:	call   QWORD PTR [rip+0x2a144]        # 0x1400313e8
   1400072a4:	test   eax,eax
   1400072a6:	jne    0x140007353
   1400072ac:	lea    rdx,[rsp+0x40]
   1400072b1:	xor    r8d,r8d
   1400072b4:	mov    rcx,rdi
   1400072b7:	call   0x14002fe7a
   1400072bc:	test   eax,eax
   1400072be:	je     0x140007353
   1400072c4:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400072cb:	test   rcx,rcx
   1400072ce:	je     0x1400072d5
   1400072d0:	call   0x140015bec
   1400072d5:	mov    rdx,QWORD PTR [rsp+0x40]
   1400072da:	and    DWORD PTR [rsp+0x28],0x0
   1400072df:	and    QWORD PTR [rsp+0x20],0x0
   1400072e5:	xor    r9d,r9d
   1400072e8:	mov    r8,rdi
   1400072eb:	xor    ecx,ecx
   1400072ed:	call   0x14002fe74
   1400072f2:	mov    ecx,0x42
   1400072f7:	movsxd rdx,eax
   1400072fa:	call   QWORD PTR [rip+0x2a110]        # 0x140031410
   140007300:	mov    rcx,rax
   140007303:	mov    QWORD PTR [rbx+0xe0],rax
   14000730a:	call   QWORD PTR [rip+0x2a108]        # 0x140031418
   140007310:	mov    rdx,QWORD PTR [rsp+0x40]
   140007315:	mov    r8,rdi
   140007318:	xor    ecx,ecx
   14000731a:	mov    r9,rax
   14000731d:	mov    DWORD PTR [rsp+0x28],0x2
   140007325:	and    QWORD PTR [rsp+0x20],0x0
   14000732b:	call   0x14002fe74
   140007330:	cmp    eax,0x1
   140007333:	je     0x140007349
   140007335:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000733c:	call   0x140015bec
   140007341:	and    QWORD PTR [rbx+0xe0],0x0
   140007349:	mov    rcx,QWORD PTR [rsp+0x40]
   14000734e:	call   0x14002fe6e
   140007353:	mov    rbx,QWORD PTR [rsp+0x48]
   140007358:	add    rsp,0x30
   14000735c:	pop    rdi
   14000735d:	ret    
   14000735e:	int3   
   14000735f:	int3   
   140007360:	lea    rax,[rip+0x2a961]        # 0x140031cc8
   140007367:	ret    
   140007368:	sub    rsp,0x38
   14000736c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007375:	mov    ecx,0xa8
   14000737a:	call   0x140013b44
   14000737f:	mov    rcx,rax
   140007382:	mov    QWORD PTR [rsp+0x40],rax
   140007387:	xor    eax,eax
   140007389:	cmp    rcx,rax
   14000738c:	je     0x140007394
   14000738e:	call   0x1400128a0
   140007393:	nop
   140007394:	add    rsp,0x38
   140007398:	ret    
   140007399:	int3   
   14000739a:	int3   
   14000739b:	int3   
   14000739c:	int3   
   14000739d:	int3   
   14000739e:	int3   
   14000739f:	int3   
   1400073a0:	int3   
   1400073a1:	int3   
   1400073a2:	int3   
   1400073a3:	int3   
   1400073a4:	int3   
   1400073a5:	int3   
   1400073a6:	int3   
   1400073a7:	int3   
   1400073a8:	rex push rbp
   1400073aa:	sub    rsp,0x20
   1400073ae:	mov    rbp,rdx
   1400073b1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400073b5:	call   0x140013b68
   1400073ba:	add    rsp,0x20
   1400073be:	pop    rbp
   1400073bf:	ret    
   1400073c0:	lea    rax,[rip+0x2a931]        # 0x140031cf8
   1400073c7:	ret    
   1400073c8:	jmp    0x140006ec0
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073d5:	push   rdi
   1400073d6:	sub    rsp,0x20
   1400073da:	mov    rax,QWORD PTR [rcx]
   1400073dd:	mov    rbx,rcx
   1400073e0:	call   QWORD PTR [rax+0xf8]
   1400073e6:	mov    r11,QWORD PTR [rbx]
   1400073e9:	mov    rcx,rbx
   1400073ec:	call   QWORD PTR [r11+0x160]
   1400073f3:	test   rax,rax
   1400073f6:	mov    rdi,rax
   1400073f9:	mov    QWORD PTR [rbx+0xf8],rax
   140007400:	je     0x140007419
   140007402:	call   0x1400131d0
   140007407:	mov    QWORD PTR [rax+0x18],rdi
   14000740b:	mov    rax,QWORD PTR [rbx+0xf8]
   140007412:	xchg   QWORD PTR [rip+0x3f087],rax        # 0x1400464a0
   140007419:	mov    eax,0x1
   14000741e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007423:	add    rsp,0x20
   140007427:	pop    rdi
   140007428:	ret    
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	rex push rbx
   14000742e:	sub    rsp,0x20
   140007432:	cmp    QWORD PTR [rcx+0x40],0x0
   140007437:	mov    rbx,rcx
   14000743a:	jne    0x14000744c
   14000743c:	call   0x140015d48
   140007441:	test   eax,eax
   140007443:	je     0x14000744c
   140007445:	xor    ecx,ecx
   140007447:	call   0x1400070f0
   14000744c:	mov    rcx,rbx
   14000744f:	add    rsp,0x20
   140007453:	pop    rbx
   140007454:	jmp    0x1400095c8
   140007459:	int3   
   14000745a:	int3   
   14000745b:	int3   
   14000745c:	mov    QWORD PTR [rsp+0x8],rbx
   140007461:	mov    QWORD PTR [rsp+0x10],rbp
   140007466:	mov    QWORD PTR [rsp+0x18],rsi
   14000746b:	push   rdi
   14000746c:	sub    rsp,0x20
   140007470:	mov    edi,r8d
   140007473:	mov    rsi,rdx
   140007476:	mov    rbp,rcx
   140007479:	call   0x140009454
   14000747e:	test   rax,rax
   140007481:	je     0x140007495
   140007483:	mov    r9,QWORD PTR [rax]
   140007486:	mov    rcx,rax
   140007489:	call   QWORD PTR [r9+0xe8]
   140007490:	mov    rbx,rax
   140007493:	jmp    0x140007497
   140007495:	xor    ebx,ebx
   140007497:	test   rbx,rbx
   14000749a:	jne    0x1400074a2
   14000749c:	call   0x140006408
   1400074a1:	int3   
   1400074a2:	and    DWORD PTR [rbp+0xb8],0x0
   1400074a9:	mov    rcx,QWORD PTR [rbx+0x40]
   1400074ad:	xor    r9d,r9d
   1400074b0:	xor    r8d,r8d
   1400074b3:	mov    edx,0x36a
   1400074b8:	call   QWORD PTR [rip+0x2a2aa]        # 0x140031768
   1400074be:	mov    r11,QWORD PTR [rbx]
   1400074c1:	mov    r8d,edi
   1400074c4:	mov    rdx,rsi
   1400074c7:	mov    rcx,rbx
   1400074ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400074cf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400074d4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400074d9:	add    rsp,0x20
   1400074dd:	pop    rdi
   1400074de:	rex.WB jmp QWORD PTR [r11+0xe8]
   1400074e5:	int3   
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400074ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400074f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400074f7:	push   rdi
   1400074f8:	sub    rsp,0x20
   1400074fc:	mov    edi,r8d
   1400074ff:	mov    rsi,rdx
   140007502:	mov    rbp,rcx
   140007505:	call   0x140009454
   14000750a:	test   rax,rax
   14000750d:	je     0x140007521
   14000750f:	mov    r9,QWORD PTR [rax]
   140007512:	mov    rcx,rax
   140007515:	call   QWORD PTR [r9+0xe8]
   14000751c:	mov    rbx,rax
   14000751f:	jmp    0x140007523
   140007521:	xor    ebx,ebx
   140007523:	test   rbx,rbx
   140007526:	jne    0x14000752e
   140007528:	call   0x140006408
   14000752d:	int3   
   14000752e:	and    DWORD PTR [rbp+0xb8],0x0
   140007535:	mov    rcx,QWORD PTR [rbx+0x40]
   140007539:	xor    r9d,r9d
   14000753c:	xor    r8d,r8d
   14000753f:	mov    edx,0x36a
   140007544:	call   QWORD PTR [rip+0x2a21e]        # 0x140031768
   14000754a:	mov    r11,QWORD PTR [rbx]
   14000754d:	mov    r8d,edi
   140007550:	mov    rdx,rsi
   140007553:	mov    rcx,rbx
   140007556:	mov    rbx,QWORD PTR [rsp+0x30]
   14000755b:	mov    rbp,QWORD PTR [rsp+0x38]
   140007560:	mov    rsi,QWORD PTR [rsp+0x40]
   140007565:	add    rsp,0x20
   140007569:	pop    rdi
   14000756a:	rex.WB jmp QWORD PTR [r11+0xf0]
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	mov    QWORD PTR [rsp+0x8],rbx
   140007579:	mov    QWORD PTR [rsp+0x10],rbp
   14000757e:	mov    QWORD PTR [rsp+0x18],rsi
   140007583:	push   rdi
   140007584:	sub    rsp,0x20
   140007588:	mov    edi,r8d
   14000758b:	mov    rsi,rdx
   14000758e:	mov    rbp,rcx
   140007591:	call   0x140009454
   140007596:	test   rax,rax
   140007599:	je     0x1400075ad
   14000759b:	mov    r9,QWORD PTR [rax]
   14000759e:	mov    rcx,rax
   1400075a1:	call   QWORD PTR [r9+0xe8]
   1400075a8:	mov    rbx,rax
   1400075ab:	jmp    0x1400075af
   1400075ad:	xor    ebx,ebx
   1400075af:	test   rbx,rbx
   1400075b2:	jne    0x1400075ba
   1400075b4:	call   0x140006408
   1400075b9:	int3   
   1400075ba:	and    DWORD PTR [rbp+0xb8],0x0
   1400075c1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400075c5:	xor    r9d,r9d
   1400075c8:	xor    r8d,r8d
   1400075cb:	mov    edx,0x36a
   1400075d0:	call   QWORD PTR [rip+0x2a192]        # 0x140031768
   1400075d6:	mov    r11,QWORD PTR [rbx]
   1400075d9:	mov    r8d,edi
   1400075dc:	mov    rdx,rsi
   1400075df:	mov    rcx,rbx
   1400075e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075e7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400075ec:	mov    rsi,QWORD PTR [rsp+0x40]
   1400075f1:	add    rsp,0x20
   1400075f5:	pop    rdi
   1400075f6:	rex.WB jmp QWORD PTR [r11+0xf8]
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	rex push rbx
   140007602:	sub    rsp,0x20
   140007606:	mov    rax,QWORD PTR [rip+0x3a4b3]        # 0x140041ac0
   14000760d:	mov    rbx,rcx
   140007610:	test   rax,rax
   140007613:	je     0x140007647
   140007615:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140007619:	je     0x140007647
   14000761b:	cmp    QWORD PTR [rip+0x3a4ad],0x0        # 0x140041ad0
   140007623:	je     0x140007642
   140007625:	mov    rdx,QWORD PTR [rcx+0x8]
   140007629:	test   rdx,rdx
   14000762c:	je     0x140007642
   14000762e:	and    QWORD PTR [rcx+0x8],0x0
   140007633:	xor    ecx,ecx
   140007635:	call   QWORD PTR [rip+0x3a495]        # 0x140041ad0
   14000763b:	mov    rax,QWORD PTR [rip+0x3a47e]        # 0x140041ac0
   140007642:	mov    rcx,QWORD PTR [rbx]
   140007645:	call   rax
   140007647:	add    rsp,0x20
   14000764b:	pop    rbx
   14000764c:	ret    
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	mov    rax,rsp
   140007653:	push   rbp
   140007654:	push   rsi
   140007655:	push   rdi
   140007656:	push   r12
   140007658:	push   r13
   14000765a:	sub    rsp,0x530
   140007661:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000766a:	mov    QWORD PTR [rax+0x18],rbx
   14000766e:	mov    rax,QWORD PTR [rip+0x3895b]        # 0x14003ffd0
   140007675:	xor    rax,rsp
   140007678:	mov    QWORD PTR [rsp+0x520],rax
   140007680:	mov    r13,rdx
   140007683:	mov    r12,rcx
   140007686:	and    WORD PTR [rsp+0x30],0x0
   14000768c:	xor    ebx,ebx
   14000768e:	lea    rcx,[rip+0x2aaeb]        # 0x140032180
   140007695:	call   QWORD PTR [rip+0x29d55]        # 0x1400313f0
   14000769b:	mov    rsi,rax
   14000769e:	lea    rdx,[rip+0x2aabb]        # 0x140032160
   1400076a5:	mov    rcx,rax
   1400076a8:	call   QWORD PTR [rip+0x29db2]        # 0x140031460
   1400076ae:	lea    ebp,[rbx+0x1]
   1400076b1:	test   rax,rax
   1400076b4:	je     0x140007745
   1400076ba:	call   rax
   1400076bc:	mov    WORD PTR [rsp+0x30],ax
   1400076c1:	movzx  edx,ax
   1400076c4:	mov    ecx,edx
   1400076c6:	mov    edi,0x3ff
   1400076cb:	and    ecx,edi
   1400076cd:	movzx  ebx,cx
   1400076d0:	and    dx,0xfc00
   1400076d5:	movzx  ecx,dx
   1400076d8:	or     ecx,ebx
   1400076da:	call   QWORD PTR [rip+0x29cd8]        # 0x1400313b8
   1400076e0:	mov    DWORD PTR [rsp+0x58],eax
   1400076e4:	mov    ecx,ebx
   1400076e6:	call   QWORD PTR [rip+0x29ccc]        # 0x1400313b8
   1400076ec:	mov    DWORD PTR [rsp+0x5c],eax
   1400076f0:	lea    ebx,[rbp+0x1]
   1400076f3:	lea    rdx,[rip+0x2aa46]        # 0x140032140
   1400076fa:	mov    rcx,rsi
   1400076fd:	call   QWORD PTR [rip+0x29d5d]        # 0x140031460
   140007703:	test   rax,rax
   140007706:	je     0x1400078b4
   14000770c:	call   rax
   14000770e:	mov    WORD PTR [rsp+0x30],ax
   140007713:	movzx  ecx,ax
   140007716:	mov    eax,ecx
   140007718:	and    eax,edi
   14000771a:	movzx  ebx,ax
   14000771d:	and    cx,0xfc00
   140007722:	movzx  ecx,cx
   140007725:	or     ecx,ebx
   140007727:	call   QWORD PTR [rip+0x29c8b]        # 0x1400313b8
   14000772d:	mov    DWORD PTR [rsp+0x60],eax
   140007731:	mov    ecx,ebx
   140007733:	call   QWORD PTR [rip+0x29c7f]        # 0x1400313b8
   140007739:	mov    DWORD PTR [rsp+0x64],eax
   14000773d:	lea    ebx,[rbp+0x3]
   140007740:	jmp    0x1400078b4
   140007745:	call   QWORD PTR [rip+0x29c75]        # 0x1400313c0
   14000774b:	bt     eax,0x1f
   14000774f:	jae    0x14000783a
   140007755:	and    QWORD PTR [rsp+0xb0],rbx
   14000775d:	lea    rax,[rsp+0xb0]
   140007765:	mov    QWORD PTR [rsp+0x20],rax
   14000776a:	mov    r9d,0x20019
   140007770:	xor    r8d,r8d
   140007773:	lea    rdx,[rip+0x2a976]        # 0x1400320f0
   14000777a:	mov    rcx,0xffffffff80000001
   140007781:	call   QWORD PTR [rip+0x29879]        # 0x140031000
   140007787:	test   eax,eax
   140007789:	jne    0x1400078b4
   14000778f:	mov    DWORD PTR [rsp+0x4c],0x20
   140007797:	lea    rax,[rsp+0x4c]
   14000779c:	mov    QWORD PTR [rsp+0x28],rax
   1400077a1:	lea    rax,[rsp+0xb8]
   1400077a9:	mov    QWORD PTR [rsp+0x20],rax
   1400077ae:	lea    r9,[rsp+0x48]
   1400077b3:	xor    r8d,r8d
   1400077b6:	xor    edx,edx
   1400077b8:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400077c0:	call   QWORD PTR [rip+0x2987a]        # 0x140031040
   1400077c6:	test   eax,eax
   1400077c8:	jne    0x14000782a
   1400077ca:	cmp    DWORD PTR [rsp+0x48],ebp
   1400077ce:	jne    0x14000782a
   1400077d0:	lea    r8,[rsp+0x50]
   1400077d5:	lea    rdx,[rip+0x2a908]        # 0x1400320e4
   1400077dc:	lea    rcx,[rsp+0xb8]
   1400077e4:	call   0x14001b610
   1400077e9:	cmp    eax,ebp
   1400077eb:	jne    0x14000782a
   1400077ed:	mov    eax,DWORD PTR [rsp+0x50]
   1400077f1:	mov    WORD PTR [rsp+0x30],ax
   1400077f6:	movzx  ecx,ax
   1400077f9:	mov    eax,ecx
   1400077fb:	mov    edi,0x3ff
   140007800:	and    eax,edi
   140007802:	movzx  ebx,ax
   140007805:	and    cx,0xfc00
   14000780a:	movzx  ecx,cx
   14000780d:	or     ecx,ebx
   14000780f:	call   QWORD PTR [rip+0x29ba3]        # 0x1400313b8
   140007815:	mov    DWORD PTR [rsp+0x58],eax
   140007819:	mov    ecx,ebx
   14000781b:	call   QWORD PTR [rip+0x29b97]        # 0x1400313b8
   140007821:	mov    DWORD PTR [rsp+0x5c],eax
   140007825:	mov    ebx,0x2
   14000782a:	mov    rcx,QWORD PTR [rsp+0xb0]
   140007832:	call   QWORD PTR [rip+0x297e8]        # 0x140031020
   140007838:	jmp    0x1400078b4
   14000783a:	lea    rcx,[rip+0x2a88f]        # 0x1400320d0
   140007841:	call   QWORD PTR [rip+0x29ba9]        # 0x1400313f0
   140007847:	test   rax,rax
   14000784a:	je     0x1400078b4
   14000784c:	and    WORD PTR [rsp+0x30],bx
   140007851:	lea    rcx,[rsp+0x30]
   140007856:	mov    QWORD PTR [rsp+0x20],rcx
   14000785b:	lea    r9,[rip+0xfffffffffffff54e]        # 0x140006db0
   140007862:	mov    r8,rbp
   140007865:	mov    edx,0x10
   14000786a:	mov    rcx,rax
   14000786d:	call   QWORD PTR [rip+0x29b55]        # 0x1400313c8
   140007873:	movzx  r11d,WORD PTR [rsp+0x30]
   140007879:	test   r11w,r11w
   14000787d:	je     0x1400078b4
   14000787f:	movzx  ecx,r11w
   140007883:	mov    eax,ecx
   140007885:	mov    edi,0x3ff
   14000788a:	and    eax,edi
   14000788c:	movzx  ebx,ax
   14000788f:	and    cx,0xfc00
   140007894:	movzx  ecx,cx
   140007897:	or     ecx,ebx
   140007899:	call   QWORD PTR [rip+0x29b19]        # 0x1400313b8
   14000789f:	mov    DWORD PTR [rsp+0x58],eax
   1400078a3:	mov    ecx,ebx
   1400078a5:	call   QWORD PTR [rip+0x29b0d]        # 0x1400313b8
   1400078ab:	mov    DWORD PTR [rsp+0x5c],eax
   1400078af:	mov    ebx,0x2
   1400078b4:	movsxd rax,ebx
   1400078b7:	mov    DWORD PTR [rsp+rax*4+0x58],0x800
   1400078bf:	add    ebx,ebp
   1400078c1:	and    WORD PTR [rsp+0x2ea],0x0
   1400078ca:	and    WORD PTR [rsp+0x2e8],0x0
   1400078d3:	mov    r8d,0x105
   1400078d9:	lea    rdx,[rsp+0xe0]
   1400078e1:	lea    rsi,[rip+0xffffffffffff8718]        # 0x140000000
   1400078e8:	mov    rcx,rsi
   1400078eb:	call   QWORD PTR [rip+0x29adf]        # 0x1400313d0
   1400078f1:	test   eax,eax
   1400078f3:	jne    0x1400078fc
   1400078f5:	xor    eax,eax
   1400078f7:	jmp    0x140007b9a
   1400078fc:	mov    edi,0x38
   140007901:	mov    r8,rdi
   140007904:	xor    edx,edx
   140007906:	lea    rcx,[rsp+0x78]
   14000790b:	call   0x14001b520
   140007910:	mov    DWORD PTR [rsp+0x78],edi
   140007914:	lea    rax,[rsp+0xe0]
   14000791c:	mov    QWORD PTR [rsp+0x80],rax
   140007924:	mov    QWORD PTR [rsp+0x98],0x3e8
   140007930:	mov    QWORD PTR [rsp+0xa8],rsi
   140007938:	mov    DWORD PTR [rsp+0x7c],0x88
   140007940:	or     rdx,0xffffffffffffffff
   140007944:	lea    rcx,[rsp+0x38]
   140007949:	call   0x140006dc8
   14000794e:	nop
   14000794f:	mov    rdx,QWORD PTR [rip+0x3a162]        # 0x140041ab8
   140007956:	test   rdx,rdx
   140007959:	je     0x14000797f
   14000795b:	mov    rax,QWORD PTR [rsp+0x38]
   140007960:	cmp    rax,0xffffffffffffffff
   140007964:	jne    0x1400079ae
   140007966:	lea    rcx,[rsp+0x78]
   14000796b:	call   rdx
   14000796d:	mov    QWORD PTR [rsp+0x38],rax
   140007972:	cmp    rax,0xffffffffffffffff
   140007976:	setne  cl
   140007979:	test   cl,cl
   14000797b:	je     0x1400079ae
   14000797d:	jmp    0x140007984
   14000797f:	mov    rax,QWORD PTR [rsp+0x38]
   140007984:	mov    r8,QWORD PTR [rip+0x3a13d]        # 0x140041ac8
   14000798b:	test   r8,r8
   14000798e:	je     0x1400079ae
   140007990:	cmp    rax,0xffffffffffffffff
   140007994:	je     0x1400079ae
   140007996:	cmp    QWORD PTR [rsp+0x40],0x0
   14000799c:	jne    0x1400079ae
   14000799e:	lea    rdx,[rsp+0x40]
   1400079a3:	mov    rcx,rax
   1400079a6:	call   r8
   1400079a9:	mov    rax,QWORD PTR [rsp+0x38]
   1400079ae:	xor    edi,edi
   1400079b0:	movsxd rbp,ebx
   1400079b3:	test   ebx,ebx
   1400079b5:	jle    0x140007b53
   1400079bb:	mov    ecx,DWORD PTR [rsp+rdi*4+0x58]
   1400079bf:	cmp    ecx,0x800
   1400079c5:	jne    0x140007a0a
   1400079c7:	lea    r8,[rip+0x2a6d2]        # 0x1400320a0
   1400079ce:	mov    edx,0x4
   1400079d3:	lea    rcx,[rsp+0xb0]
   1400079db:	call   0x14001a690
   1400079e0:	test   eax,eax
   1400079e2:	je     0x140007a2a
   1400079e4:	cmp    eax,0xc
   1400079e7:	je     0x140007adc
   1400079ed:	cmp    eax,0x16
   1400079f0:	je     0x140007ad6
   1400079f6:	cmp    eax,0x22
   1400079f9:	je     0x140007ad6
   1400079ff:	cmp    eax,0x50
   140007a02:	jne    0x140007ad0
   140007a08:	jmp    0x140007a2a
   140007a0a:	mov    r9d,0x4
   140007a10:	lea    r8,[rsp+0xb0]
   140007a18:	lea    edx,[r9-0x1]
   140007a1c:	call   QWORD PTR [rip+0x299be]        # 0x1400313e0
   140007a22:	test   eax,eax
   140007a24:	je     0x140007abe
   140007a2a:	call   0x14001b280
   140007a2f:	mov    esi,DWORD PTR [rax]
   140007a31:	call   0x14001b280
   140007a36:	and    DWORD PTR [rax],0x0
   140007a39:	lea    rax,[rsp+0xb0]
   140007a41:	mov    QWORD PTR [rsp+0x28],rax
   140007a46:	mov    QWORD PTR [rsp+0x20],r13
   140007a4b:	mov    r9,r12
   140007a4e:	mov    edx,0x112
   140007a53:	lea    r8d,[rdx-0x1]
   140007a57:	lea    rcx,[rsp+0x2f0]
   140007a5f:	call   0x14001b200
   140007a64:	mov    ebx,eax
   140007a66:	call   0x14001b280
   140007a6b:	cmp    DWORD PTR [rax],0x0
   140007a6e:	je     0x140007a90
   140007a70:	call   0x14001b280
   140007a75:	cmp    DWORD PTR [rax],0x0
   140007a78:	je     0x140007a97
   140007a7a:	cmp    DWORD PTR [rax],0xc
   140007a7d:	je     0x140007af8
   140007a7f:	cmp    DWORD PTR [rax],0x16
   140007a82:	je     0x140007aed
   140007a84:	cmp    DWORD PTR [rax],0x22
   140007a87:	je     0x140007aed
   140007a89:	cmp    DWORD PTR [rax],0x50
   140007a8c:	jne    0x140007ae2
   140007a8e:	jmp    0x140007a97
   140007a90:	call   0x14001b280
   140007a95:	mov    DWORD PTR [rax],esi
   140007a97:	cmp    ebx,0xffffffff
   140007a9a:	je     0x140007ab7
   140007a9c:	cmp    ebx,0x112
   140007aa2:	jae    0x140007ab7
   140007aa4:	lea    rcx,[rsp+0x2f0]
   140007aac:	call   QWORD PTR [rip+0x299b6]        # 0x140031468
   140007ab2:	mov    rbx,rax
   140007ab5:	jmp    0x140007ab9
   140007ab7:	xor    ebx,ebx
   140007ab9:	test   rbx,rbx
   140007abc:	jne    0x140007b03
   140007abe:	add    rdi,0x1
   140007ac2:	cmp    rdi,rbp
   140007ac5:	jge    0x140007b4e
   140007acb:	jmp    0x1400079bb
   140007ad0:	call   0x140006408
   140007ad5:	int3   
   140007ad6:	call   0x140006408
   140007adb:	int3   
   140007adc:	call   0x1400063c0
   140007ae1:	int3   
   140007ae2:	mov    ecx,0x80004005
   140007ae7:	call   0x1400015c0
   140007aec:	int3   
   140007aed:	mov    ecx,0x80070057
   140007af2:	call   0x1400015c0
   140007af7:	int3   
   140007af8:	mov    ecx,0x8007000e
   140007afd:	call   0x1400015c0
   140007b02:	nop
   140007b03:	mov    rax,QWORD PTR [rip+0x39fb6]        # 0x140041ac0
   140007b0a:	test   rax,rax
   140007b0d:	je     0x140007b49
   140007b0f:	mov    rcx,QWORD PTR [rsp+0x38]
   140007b14:	cmp    rcx,0xffffffffffffffff
   140007b18:	je     0x140007b49
   140007b1a:	mov    r8,QWORD PTR [rip+0x39faf]        # 0x140041ad0
   140007b21:	test   r8,r8
   140007b24:	je     0x140007b47
   140007b26:	mov    rdx,QWORD PTR [rsp+0x40]
   140007b2b:	test   rdx,rdx
   140007b2e:	je     0x140007b47
   140007b30:	and    QWORD PTR [rsp+0x40],0x0
   140007b36:	xor    ecx,ecx
   140007b38:	call   r8
   140007b3b:	mov    rax,QWORD PTR [rip+0x39f7e]        # 0x140041ac0
   140007b42:	mov    rcx,QWORD PTR [rsp+0x38]
   140007b47:	call   rax
   140007b49:	mov    rax,rbx
   140007b4c:	jmp    0x140007b9a
   140007b4e:	mov    rax,QWORD PTR [rsp+0x38]
   140007b53:	mov    r8,QWORD PTR [rip+0x39f66]        # 0x140041ac0
   140007b5a:	test   r8,r8
   140007b5d:	je     0x140007b98
   140007b5f:	cmp    rax,0xffffffffffffffff
   140007b63:	je     0x140007b98
   140007b65:	mov    r9,QWORD PTR [rip+0x39f64]        # 0x140041ad0
   140007b6c:	test   r9,r9
   140007b6f:	je     0x140007b92
   140007b71:	mov    rdx,QWORD PTR [rsp+0x40]
   140007b76:	test   rdx,rdx
   140007b79:	je     0x140007b92
   140007b7b:	and    QWORD PTR [rsp+0x40],0x0
   140007b81:	xor    ecx,ecx
   140007b83:	call   r9
   140007b86:	mov    r8,QWORD PTR [rip+0x39f33]        # 0x140041ac0
   140007b8d:	mov    rax,QWORD PTR [rsp+0x38]
   140007b92:	mov    rcx,rax
   140007b95:	call   r8
   140007b98:	xor    eax,eax
   140007b9a:	mov    rcx,QWORD PTR [rsp+0x520]
   140007ba2:	xor    rcx,rsp
   140007ba5:	call   0x140019370
   140007baa:	mov    rbx,QWORD PTR [rsp+0x570]
   140007bb2:	add    rsp,0x530
   140007bb9:	pop    r13
   140007bbb:	pop    r12
   140007bbd:	pop    rdi
   140007bbe:	pop    rsi
   140007bbf:	pop    rbp
   140007bc0:	ret    
   140007bc1:	int3   
   140007bc2:	int3   
   140007bc3:	int3   
   140007bc4:	int3   
   140007bc5:	int3   
   140007bc6:	int3   
   140007bc7:	int3   
   140007bc8:	int3   
   140007bc9:	int3   
   140007bca:	int3   
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	rex push rbp
   140007bd2:	sub    rsp,0x20
   140007bd6:	mov    rbp,rdx
   140007bd9:	lea    rcx,[rbp+0x38]
   140007bdd:	call   0x140007600
   140007be2:	add    rsp,0x20
   140007be6:	pop    rbp
   140007be7:	ret    
   140007be8:	sub    rsp,0x268
   140007bef:	mov    rax,QWORD PTR [rip+0x383da]        # 0x14003ffd0
   140007bf6:	xor    rax,rsp
   140007bf9:	mov    QWORD PTR [rsp+0x250],rax
   140007c01:	mov    rcx,QWORD PTR [rcx+0x88]
   140007c08:	lea    rdx,[rsp+0x40]
   140007c0d:	mov    r8d,0x104
   140007c13:	call   QWORD PTR [rip+0x297b7]        # 0x1400313d0
   140007c19:	test   eax,eax
   140007c1b:	je     0x140007c69
   140007c1d:	cmp    eax,0x104
   140007c22:	je     0x140007c69
   140007c24:	lea    rcx,[rsp+0x40]
   140007c29:	call   QWORD PTR [rip+0x298e1]        # 0x140031510
   140007c2f:	lea    rcx,[rsp+0x20]
   140007c34:	lea    rdx,[rsp+0x40]
   140007c39:	and    WORD PTR [rax],0x0
   140007c3d:	mov    rax,QWORD PTR [rip+0x2a55c]        # 0x1400321a0
   140007c44:	mov    QWORD PTR [rcx],rax
   140007c47:	mov    rax,QWORD PTR [rip+0x2a55a]        # 0x1400321a8
   140007c4e:	mov    QWORD PTR [rcx+0x8],rax
   140007c52:	movzx  eax,WORD PTR [rip+0x2a557]        # 0x1400321b0
   140007c59:	mov    WORD PTR [rcx+0x10],ax
   140007c5d:	lea    rcx,[rsp+0x20]
   140007c62:	call   0x140007650
   140007c67:	jmp    0x140007c6b
   140007c69:	xor    eax,eax
   140007c6b:	mov    rcx,QWORD PTR [rsp+0x250]
   140007c73:	xor    rcx,rsp
   140007c76:	call   0x140019370
   140007c7b:	add    rsp,0x268
   140007c82:	ret    
   140007c83:	int3   
   140007c84:	mov    QWORD PTR [rsp+0x8],rcx
   140007c89:	push   rdi
   140007c8a:	sub    rsp,0x30
   140007c8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007c97:	mov    QWORD PTR [rsp+0x48],rbx
   140007c9c:	mov    QWORD PTR [rsp+0x50],rsi
   140007ca1:	mov    rdi,rdx
   140007ca4:	mov    rbx,rcx
   140007ca7:	call   0x1400098dc
   140007cac:	nop
   140007cad:	lea    rax,[rip+0x2a534]        # 0x1400321e8
   140007cb4:	mov    QWORD PTR [rbx],rax
   140007cb7:	xor    esi,esi
   140007cb9:	cmp    rdi,rsi
   140007cbc:	je     0x140007ccf
   140007cbe:	mov    rcx,rdi
   140007cc1:	call   0x14001b7a0
   140007cc6:	mov    QWORD PTR [rbx+0xa0],rax
   140007ccd:	jmp    0x140007cd6
   140007ccf:	mov    QWORD PTR [rbx+0xa0],rsi
   140007cd6:	call   0x1400131d0
   140007cdb:	mov    rdi,rax
   140007cde:	mov    ecx,esi
   140007ce0:	cmp    rax,rsi
   140007ce3:	setne  cl
   140007ce6:	cmp    ecx,esi
   140007ce8:	jne    0x140007cf0
   140007cea:	call   0x140006408
   140007cef:	int3   
   140007cf0:	lea    rcx,[rax+0xc0]
   140007cf7:	lea    rdx,[rip+0xfffffffffffff66a]        # 0x140007368
   140007cfe:	call   0x140014348
   140007d03:	mov    ecx,esi
   140007d05:	cmp    rax,rsi
   140007d08:	setne  cl
   140007d0b:	cmp    ecx,esi
   140007d0d:	jne    0x140007d15
   140007d0f:	call   0x140006408
   140007d14:	int3   
   140007d15:	cmp    ecx,esi
   140007d17:	jne    0x140007d1f
   140007d19:	call   0x140006408
   140007d1e:	int3   
   140007d1f:	mov    QWORD PTR [rax+0x8],rbx
   140007d23:	call   QWORD PTR [rip+0x2967f]        # 0x1400313a8
   140007d29:	mov    QWORD PTR [rbx+0x58],rax
   140007d2d:	call   QWORD PTR [rip+0x2967d]        # 0x1400313b0
   140007d33:	mov    DWORD PTR [rbx+0x60],eax
   140007d36:	mov    QWORD PTR [rdi+0x8],rbx
   140007d3a:	mov    QWORD PTR [rbx+0x88],rsi
   140007d41:	mov    QWORD PTR [rbx+0xf8],rsi
   140007d48:	mov    QWORD PTR [rbx+0xc8],rsi
   140007d4f:	mov    QWORD PTR [rbx+0xd0],rsi
   140007d56:	mov    QWORD PTR [rbx+0xa8],rsi
   140007d5d:	mov    QWORD PTR [rbx+0xc0],rsi
   140007d64:	mov    QWORD PTR [rbx+0x110],rsi
   140007d6b:	mov    QWORD PTR [rbx+0xb0],rsi
   140007d72:	mov    WORD PTR [rbx+0x122],si
   140007d79:	mov    WORD PTR [rbx+0x120],si
   140007d80:	mov    QWORD PTR [rbx+0x90],rsi
   140007d87:	mov    QWORD PTR [rbx+0x118],rsi
   140007d8e:	mov    DWORD PTR [rbx+0x100],esi
   140007d94:	mov    QWORD PTR [rbx+0x108],rsi
   140007d9b:	mov    QWORD PTR [rbx+0xe0],rsi
   140007da2:	mov    QWORD PTR [rbx+0xe8],rsi
   140007da9:	mov    DWORD PTR [rbx+0x124],esi
   140007daf:	mov    QWORD PTR [rbx+0x130],rsi
   140007db6:	mov    DWORD PTR [rbx+0xb8],esi
   140007dbc:	mov    DWORD PTR [rbx+0xd8],esi
   140007dc2:	mov    QWORD PTR [rbx+0x128],0x200
   140007dcd:	mov    rax,rbx
   140007dd0:	mov    rbx,QWORD PTR [rsp+0x48]
   140007dd5:	mov    rsi,QWORD PTR [rsp+0x50]
   140007dda:	add    rsp,0x30
   140007dde:	pop    rdi
   140007ddf:	ret    
   140007de0:	int3   
   140007de1:	int3   
   140007de2:	int3   
   140007de3:	int3   
   140007de4:	rex push rbp
   140007de6:	sub    rsp,0x20
   140007dea:	mov    rbp,rdx
   140007ded:	mov    rcx,QWORD PTR [rbp+0x40]
   140007df1:	call   0x140009544
   140007df6:	add    rsp,0x20
   140007dfa:	pop    rbp
   140007dfb:	ret    
   140007dfc:	rex push rbx
   140007dfe:	sub    rsp,0x460
   140007e05:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140007e0e:	mov    rax,QWORD PTR [rip+0x381bb]        # 0x14003ffd0
   140007e15:	xor    rax,rsp
   140007e18:	mov    QWORD PTR [rsp+0x450],rax
   140007e20:	mov    rbx,rcx
   140007e23:	mov    QWORD PTR [rsp+0x38],rcx
   140007e28:	lea    rax,[rip+0x2a3b9]        # 0x1400321e8
   140007e2f:	mov    QWORD PTR [rcx],rax
   140007e32:	mov    rcx,QWORD PTR [rcx+0xb0]
   140007e39:	test   rcx,rcx
   140007e3c:	je     0x140007e49
   140007e3e:	mov    rax,QWORD PTR [rcx]
   140007e41:	mov    edx,0x1
   140007e46:	call   QWORD PTR [rax+0x8]
   140007e49:	mov    rcx,QWORD PTR [rbx+0x110]
   140007e50:	test   rcx,rcx
   140007e53:	je     0x140007e60
   140007e55:	mov    rax,QWORD PTR [rcx]
   140007e58:	mov    edx,0x1
   140007e5d:	call   QWORD PTR [rax+0x30]
   140007e60:	call   0x1400131d0
   140007e65:	cmp    BYTE PTR [rax+0x28],0x0
   140007e69:	jne    0x140007ea9
   140007e6b:	mov    rcx,QWORD PTR [rip+0x39c3e]        # 0x140041ab0
   140007e72:	test   rcx,rcx
   140007e75:	je     0x140007e8a
   140007e77:	mov    rax,QWORD PTR [rcx]
   140007e7a:	mov    edx,0x1
   140007e7f:	call   QWORD PTR [rax+0x8]
   140007e82:	and    QWORD PTR [rip+0x39c26],0x0        # 0x140041ab0
   140007e8a:	mov    rcx,QWORD PTR [rip+0x39c17]        # 0x140041aa8
   140007e91:	test   rcx,rcx
   140007e94:	je     0x140007ea9
   140007e96:	mov    rax,QWORD PTR [rcx]
   140007e99:	mov    edx,0x1
   140007e9e:	call   QWORD PTR [rax+0x8]
   140007ea1:	and    QWORD PTR [rip+0x39bff],0x0        # 0x140041aa8
   140007ea9:	mov    rcx,QWORD PTR [rbx+0xe0]
   140007eb0:	test   rcx,rcx
   140007eb3:	je     0x140007eba
   140007eb5:	call   0x140015bec
   140007eba:	mov    rcx,QWORD PTR [rbx+0xe8]
   140007ec1:	test   rcx,rcx
   140007ec4:	je     0x140007ecb
   140007ec6:	call   0x140015bec
   140007ecb:	movzx  ecx,WORD PTR [rbx+0x120]
   140007ed2:	test   cx,cx
   140007ed5:	je     0x140007edd
   140007ed7:	call   QWORD PTR [rip+0x294c3]        # 0x1400313a0
   140007edd:	movzx  ecx,WORD PTR [rbx+0x122]
   140007ee4:	test   cx,cx
   140007ee7:	je     0x140007eef
   140007ee9:	call   QWORD PTR [rip+0x294b1]        # 0x1400313a0
   140007eef:	mov    rcx,QWORD PTR [rbx+0x118]
   140007ef6:	test   rcx,rcx
   140007ef9:	je     0x140007f06
   140007efb:	mov    rax,QWORD PTR [rcx]
   140007efe:	mov    edx,0x1
   140007f03:	call   QWORD PTR [rax+0x8]
   140007f06:	call   0x1400131d0
   140007f0b:	mov    rcx,QWORD PTR [rbx+0xa0]
   140007f12:	cmp    QWORD PTR [rax+0x20],rcx
   140007f16:	jne    0x140007f1d
   140007f18:	and    QWORD PTR [rax+0x20],0x0
   140007f1d:	cmp    QWORD PTR [rax+0x8],rbx
   140007f21:	jne    0x140007f28
   140007f23:	and    QWORD PTR [rax+0x8],0x0
   140007f28:	mov    rcx,QWORD PTR [rbx+0xa0]
   140007f2f:	call   0x14001a540
   140007f34:	mov    rcx,QWORD PTR [rbx+0xa8]
   140007f3b:	call   0x14001a540
   140007f40:	mov    rcx,QWORD PTR [rbx+0xc0]
   140007f47:	call   0x14001a540
   140007f4c:	mov    rcx,QWORD PTR [rbx+0xc8]
   140007f53:	call   0x14001a540
   140007f58:	mov    rcx,QWORD PTR [rbx+0xd0]
   140007f5f:	call   0x14001a540
   140007f64:	and    QWORD PTR [rbx+0x58],0x0
   140007f69:	jmp    0x140007f70
   140007f6b:	mov    rbx,QWORD PTR [rsp+0x38]
   140007f70:	mov    rcx,rbx
   140007f73:	call   0x140009544
   140007f78:	mov    rcx,QWORD PTR [rsp+0x450]
   140007f80:	xor    rcx,rsp
   140007f83:	call   0x140019370
   140007f88:	add    rsp,0x460
   140007f8f:	pop    rbx
   140007f90:	ret    
   140007f91:	int3   
   140007f92:	int3   
   140007f93:	int3   
   140007f94:	int3   
   140007f95:	int3   
   140007f96:	int3   
   140007f97:	int3   
   140007f98:	int3   
   140007f99:	int3   
   140007f9a:	int3   
   140007f9b:	int3   
   140007f9c:	rex push rbp
   140007f9e:	sub    rsp,0x20
   140007fa2:	mov    rbp,rdx
   140007fa5:	mov    rcx,QWORD PTR [rbp+0x38]
   140007fa9:	call   0x140009544
   140007fae:	add    rsp,0x20
   140007fb2:	pop    rbp
   140007fb3:	ret    
   140007fb4:	int3   
   140007fb5:	int3   
   140007fb6:	int3   
   140007fb7:	int3   
   140007fb8:	int3   
   140007fb9:	int3   
   140007fba:	int3   
   140007fbb:	int3   
   140007fbc:	mov    QWORD PTR [rsp+0x10],rdx
   140007fc1:	push   rbx
   140007fc2:	push   rbp
   140007fc3:	sub    rsp,0x38
   140007fc7:	mov    rbp,rdx
   140007fca:	call   0x14000669c
   140007fcf:	mov    r11,rax
   140007fd2:	xor    ecx,ecx
   140007fd4:	test   rax,rax
   140007fd7:	setne  cl
   140007fda:	test   ecx,ecx
   140007fdc:	jne    0x140007fe9
   140007fde:	mov    ecx,0x80004005
   140007fe3:	call   0x1400015c0
   140007fe8:	int3   
   140007fe9:	mov    rax,QWORD PTR [rax]
   140007fec:	mov    rcx,r11
   140007fef:	call   QWORD PTR [rax+0x18]
   140007ff2:	add    rax,0x18
   140007ff6:	mov    QWORD PTR [rbp+0x30],rax
   140007ffa:	mov    rcx,QWORD PTR [rbp+0x40]
   140007ffe:	mov    rax,QWORD PTR [rcx]
   140008001:	xor    r9d,r9d
   140008004:	mov    r8d,0x200
   14000800a:	lea    rdx,[rbp+0x50]
   14000800e:	call   QWORD PTR [rax+0x18]
   140008011:	test   eax,eax
   140008013:	je     0x140008046
   140008015:	lea    rax,[rbp+0x50]
   140008019:	mov    QWORD PTR [rsp+0x28],rax
   14000801e:	mov    DWORD PTR [rsp+0x20],0x33f
   140008026:	lea    r9,[rip+0x2a3ab]        # 0x1400323d8
   14000802d:	lea    r8,[rip+0x2a384]        # 0x1400323b8
   140008034:	lea    rdx,[rip+0x2a35d]        # 0x140032398
   14000803b:	lea    rcx,[rbp+0x30]
   14000803f:	call   0x140002e70
   140008044:	jmp    0x14000806c
   140008046:	mov    DWORD PTR [rsp+0x20],0x33f
   14000804e:	lea    r9,[rip+0x2a383]        # 0x1400323d8
   140008055:	lea    r8,[rip+0x2a35c]        # 0x1400323b8
   14000805c:	lea    rdx,[rip+0x2a31d]        # 0x140032380
   140008063:	lea    rcx,[rbp+0x30]
   140008067:	call   0x140002e70
   14000806c:	xor    r8d,r8d
   14000806f:	xor    edx,edx
   140008071:	mov    rbx,QWORD PTR [rbp+0x30]
   140008075:	mov    rcx,rbx
   140008078:	call   0x140008508
   14000807d:	nop
   14000807e:	lea    rdx,[rbx-0x18]
   140008082:	or     eax,0xffffffff
   140008085:	lock xadd DWORD PTR [rdx+0x10],eax
   14000808a:	add    eax,0xffffffff
   14000808d:	test   eax,eax
   14000808f:	jg     0x14000809a
   140008091:	mov    rcx,QWORD PTR [rdx]
   140008094:	mov    rax,QWORD PTR [rcx]
   140008097:	call   QWORD PTR [rax+0x8]
   14000809a:	mov    rcx,QWORD PTR [rbp+0x40]
   14000809e:	mov    rax,QWORD PTR [rcx]
   1400080a1:	mov    edx,0x1
   1400080a6:	call   QWORD PTR [rax+0x8]
   1400080a9:	nop
   1400080aa:	lea    rax,[rip+0xfffffffffffffeba]        # 0x140007f6b
   1400080b1:	jmp    0x1400080b3
   1400080b3:	add    rsp,0x38
   1400080b7:	pop    rbp
   1400080b8:	pop    rbx
   1400080b9:	ret    
   1400080ba:	int3   
   1400080bb:	int3   
   1400080bc:	rex push rbp
   1400080be:	sub    rsp,0x20
   1400080c2:	mov    rbp,rdx
   1400080c5:	lea    rcx,[rbp+0x30]
   1400080c9:	call   0x140001dc0
   1400080ce:	add    rsp,0x20
   1400080d2:	pop    rbp
   1400080d3:	ret    
   1400080d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400080d9:	push   rdi
   1400080da:	sub    rsp,0x20
   1400080de:	mov    ebx,edx
   1400080e0:	mov    rdi,rcx
   1400080e3:	call   0x140007dfc
   1400080e8:	test   bl,0x1
   1400080eb:	je     0x1400080f5
   1400080ed:	mov    rcx,rdi
   1400080f0:	call   0x140006160
   1400080f5:	mov    rax,rdi
   1400080f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080fd:	add    rsp,0x20
   140008101:	pop    rdi
   140008102:	ret    
   140008103:	int3   
   140008104:	mov    rax,rsp
   140008107:	mov    QWORD PTR [rax+0x8],rbx
   14000810b:	mov    QWORD PTR [rax+0x10],rsi
   14000810f:	mov    QWORD PTR [rax+0x18],rdi
   140008113:	mov    QWORD PTR [rax+0x20],r12
   140008117:	push   r13
   140008119:	sub    rsp,0x30
   14000811d:	mov    edi,r9d
   140008120:	mov    rsi,r8
   140008123:	mov    r12,rdx
   140008126:	mov    r13,rcx
   140008129:	and    QWORD PTR [rax-0x10],0x0
   14000812e:	call   0x1400131d0
   140008133:	lea    rdx,[rsp+0x28]
   140008138:	mov    rcx,QWORD PTR [rax+0xd8]
   14000813f:	call   0x140012540
   140008144:	mov    ebx,eax
   140008146:	mov    DWORD PTR [rsp+0x24],eax
   14000814a:	and    DWORD PTR [rsp+0x20],0x0
   14000814f:	test   eax,eax
   140008151:	je     0x1400081a1
   140008153:	mov    r9d,edi
   140008156:	mov    r8,rsi
   140008159:	mov    rdx,r12
   14000815c:	mov    rcx,r13
   14000815f:	call   QWORD PTR [rip+0x2966b]        # 0x1400317d0
   140008165:	mov    esi,eax
   140008167:	mov    DWORD PTR [rsp+0x20],eax
   14000816b:	cmp    ebx,0x2
   14000816e:	je     0x14000819f
   140008170:	xor    ebx,ebx
   140008172:	test   eax,eax
   140008174:	sete   bl
   140008177:	test   ebx,ebx
   140008179:	je     0x140008185
   14000817b:	call   QWORD PTR [rip+0x292f7]        # 0x140031478
   140008181:	mov    edi,eax
   140008183:	jmp    0x140008187
   140008185:	xor    edi,edi
   140008187:	mov    rdx,QWORD PTR [rsp+0x28]
   14000818c:	xor    ecx,ecx
   14000818e:	call   0x140012524
   140008193:	test   ebx,ebx
   140008195:	je     0x14000819f
   140008197:	mov    ecx,edi
   140008199:	call   QWORD PTR [rip+0x29261]        # 0x140031400
   14000819f:	mov    eax,esi
   1400081a1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400081a6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400081ab:	mov    rdi,QWORD PTR [rsp+0x50]
   1400081b0:	mov    r12,QWORD PTR [rsp+0x58]
   1400081b5:	add    rsp,0x30
   1400081b9:	pop    r13
   1400081bb:	ret    
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	int3   
   1400081c1:	int3   
   1400081c2:	int3   
   1400081c3:	int3   
   1400081c4:	rex push rbx
   1400081c6:	push   rbp
   1400081c7:	push   rdi
   1400081c8:	sub    rsp,0x20
   1400081cc:	mov    rbp,rdx
   1400081cf:	cmp    DWORD PTR [rbp+0x24],0x2
   1400081d3:	je     0x140008204
   1400081d5:	xor    ebx,ebx
   1400081d7:	cmp    DWORD PTR [rbp+0x20],ebx
   1400081da:	sete   bl
   1400081dd:	test   ebx,ebx
   1400081df:	je     0x1400081eb
   1400081e1:	call   QWORD PTR [rip+0x29291]        # 0x140031478
   1400081e7:	mov    edi,eax
   1400081e9:	jmp    0x1400081ed
   1400081eb:	xor    edi,edi
   1400081ed:	mov    rdx,QWORD PTR [rbp+0x28]
   1400081f1:	xor    ecx,ecx
   1400081f3:	call   0x140012524
   1400081f8:	test   ebx,ebx
   1400081fa:	je     0x140008204
   1400081fc:	mov    ecx,edi
   1400081fe:	call   QWORD PTR [rip+0x291fc]        # 0x140031400
   140008204:	add    rsp,0x20
   140008208:	pop    rdi
   140008209:	pop    rbp
   14000820a:	pop    rbx
   14000820b:	ret    
   14000820c:	mov    QWORD PTR [rsp+0x8],rbx
   140008211:	push   rdi
   140008212:	sub    rsp,0x20
   140008216:	mov    edi,ecx
   140008218:	call   0x140009454
   14000821d:	test   rax,rax
   140008220:	je     0x140008233
   140008222:	mov    rdx,QWORD PTR [rax]
   140008225:	mov    rcx,rax
   140008228:	call   QWORD PTR [rdx+0xe8]
   14000822e:	mov    rbx,rax
   140008231:	jmp    0x140008235
   140008233:	xor    ebx,ebx
   140008235:	test   rbx,rbx
   140008238:	je     0x140008266
   14000823a:	mov    rax,QWORD PTR [rbx]
   14000823d:	mov    rcx,rbx
   140008240:	call   QWORD PTR [rax+0x240]
   140008246:	test   eax,eax
   140008248:	je     0x140008266
   14000824a:	cmp    QWORD PTR [rbx+0xe0],0x0
   140008252:	je     0x140008266
   140008254:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000825b:	mov    edx,edi
   14000825d:	mov    rax,QWORD PTR [rcx]
   140008260:	call   QWORD PTR [rax+0xc8]
   140008266:	mov    rbx,QWORD PTR [rsp+0x30]
   14000826b:	add    rsp,0x20
   14000826f:	pop    rdi
   140008270:	ret    
   140008271:	int3   
   140008272:	int3   
   140008273:	int3   
   140008274:	mov    QWORD PTR [rsp+0x8],rbx
   140008279:	mov    QWORD PTR [rsp+0x10],rbp
   14000827e:	mov    QWORD PTR [rsp+0x18],rsi
   140008283:	push   rdi
   140008284:	sub    rsp,0x20
   140008288:	test   rcx,rcx
   14000828b:	mov    rsi,rdx
   14000828e:	mov    rbp,rcx
   140008291:	mov    rbx,rcx
   140008294:	jne    0x1400082d9
   140008296:	call   0x140012910
   14000829b:	mov    rbx,QWORD PTR [rax+0x1b8]
   1400082a2:	test   rbx,rbx
   1400082a5:	je     0x1400082ad
   1400082a7:	mov    rbx,QWORD PTR [rbx+0x40]
   1400082ab:	jmp    0x1400082d4
   1400082ad:	call   0x140009454
   1400082b2:	test   rax,rax
   1400082b5:	je     0x1400082c5
   1400082b7:	mov    rdx,QWORD PTR [rax]
   1400082ba:	mov    rcx,rax
   1400082bd:	call   QWORD PTR [rdx+0xe8]
   1400082c3:	jmp    0x1400082c7
   1400082c5:	xor    eax,eax
   1400082c7:	test   rax,rax
   1400082ca:	jne    0x1400082d0
   1400082cc:	xor    ebx,ebx
   1400082ce:	jmp    0x1400082fe
   1400082d0:	mov    rbx,QWORD PTR [rax+0x40]
   1400082d4:	test   rbx,rbx
   1400082d7:	je     0x1400082fe
   1400082d9:	mov    edx,0xfffffff0
   1400082de:	mov    rcx,rbx
   1400082e1:	call   QWORD PTR [rip+0x29461]        # 0x140031748
   1400082e7:	bt     eax,0x1e
   1400082eb:	jae    0x1400082fe
   1400082ed:	mov    rcx,rbx
   1400082f0:	call   QWORD PTR [rip+0x2945a]        # 0x140031750
   1400082f6:	test   rax,rax
   1400082f9:	mov    rbx,rax
   1400082fc:	jne    0x1400082d9
   1400082fe:	test   rbx,rbx
   140008301:	mov    rdi,rbx
   140008304:	mov    rax,rbx
   140008307:	je     0x14000831a
   140008309:	mov    rcx,rax
   14000830c:	mov    rdi,rax
   14000830f:	call   QWORD PTR [rip+0x2943b]        # 0x140031750
   140008315:	test   rax,rax
   140008318:	jne    0x140008309
   14000831a:	test   rbp,rbp
   14000831d:	jne    0x140008330
   14000831f:	test   rbx,rbx
   140008322:	je     0x140008330
   140008324:	mov    rcx,rbx
   140008327:	call   QWORD PTR [rip+0x2942b]        # 0x140031758
   14000832d:	mov    rbx,rax
   140008330:	test   rsi,rsi
   140008333:	je     0x140008360
   140008335:	test   rdi,rdi
   140008338:	je     0x14000835c
   14000833a:	mov    rcx,rdi
   14000833d:	call   QWORD PTR [rip+0x2941d]        # 0x140031760
   140008343:	test   eax,eax
   140008345:	je     0x14000835c
   140008347:	cmp    rdi,rbx
   14000834a:	je     0x14000835c
   14000834c:	xor    edx,edx
   14000834e:	mov    rcx,rdi
   140008351:	mov    QWORD PTR [rsi],rdi
   140008354:	call   QWORD PTR [rip+0x2944e]        # 0x1400317a8
   14000835a:	jmp    0x140008360
   14000835c:	and    QWORD PTR [rsi],0x0
   140008360:	mov    rbp,QWORD PTR [rsp+0x38]
   140008365:	mov    rsi,QWORD PTR [rsp+0x40]
   14000836a:	mov    rax,rbx
   14000836d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008372:	add    rsp,0x20
   140008376:	pop    rdi
   140008377:	ret    
   140008378:	rex push rbx
   14000837a:	push   rbp
   14000837b:	push   rsi
   14000837c:	push   rdi
   14000837d:	push   r12
   14000837f:	push   r13
   140008381:	push   r15
   140008383:	sub    rsp,0x250
   14000838a:	mov    rax,QWORD PTR [rip+0x37c3f]        # 0x14003ffd0
   140008391:	xor    rax,rsp
   140008394:	mov    QWORD PTR [rsp+0x240],rax
   14000839c:	mov    rsi,rcx
   14000839f:	xor    ecx,ecx
   1400083a1:	mov    r13d,r9d
   1400083a4:	mov    edi,r8d
   1400083a7:	mov    r15,rdx
   1400083aa:	call   0x14000820c
   1400083af:	lea    rdx,[rsp+0x28]
   1400083b4:	xor    ecx,ecx
   1400083b6:	call   0x140008274
   1400083bb:	cmp    rax,QWORD PTR [rsp+0x28]
   1400083c0:	mov    r12,rax
   1400083c3:	je     0x1400083d3
   1400083c5:	mov    edx,0x1
   1400083ca:	mov    rcx,rax
   1400083cd:	call   QWORD PTR [rip+0x293d5]        # 0x1400317a8
   1400083d3:	xor    ebp,ebp
   1400083d5:	lea    rdx,[rsp+0x20]
   1400083da:	mov    rcx,r12
   1400083dd:	mov    rbx,rbp
   1400083e0:	mov    DWORD PTR [rsp+0x20],ebp
   1400083e4:	call   QWORD PTR [rip+0x29356]        # 0x140031740
   1400083ea:	cmp    r12,rbp
   1400083ed:	je     0x140008419
   1400083ef:	call   QWORD PTR [rip+0x28fa3]        # 0x140031398
   1400083f5:	cmp    DWORD PTR [rsp+0x20],eax
   1400083f9:	jne    0x140008419
   1400083fb:	xor    r9d,r9d
   1400083fe:	xor    r8d,r8d
   140008401:	mov    edx,0x376
   140008406:	mov    rcx,r12
   140008409:	call   QWORD PTR [rip+0x293b9]        # 0x1400317c8
   14000840f:	cmp    rax,rbp
   140008412:	je     0x140008419
   140008414:	mov    rbx,rax
   140008417:	jmp    0x140008425
   140008419:	cmp    rsi,rbp
   14000841c:	je     0x140008425
   14000841e:	lea    rbx,[rsi+0xf0]
   140008425:	xor    ecx,ecx
   140008427:	cmp    rbx,rcx
   14000842a:	je     0x14000843c
   14000842c:	cmp    r13d,ecx
   14000842f:	mov    ebp,DWORD PTR [rbx]
   140008431:	je     0x14000843c
   140008433:	lea    eax,[r13+0x30000]
   14000843a:	mov    DWORD PTR [rbx],eax
   14000843c:	test   dil,0xf0
   140008440:	jne    0x14000845c
   140008442:	mov    eax,edi
   140008444:	and    eax,0xf
   140008447:	cmp    eax,0x1
   14000844a:	jbe    0x140008459
   14000844c:	add    eax,0xfffffffd
   14000844f:	cmp    eax,0x1
   140008452:	ja     0x14000845c
   140008454:	or     edi,0x20
   140008457:	jmp    0x14000845c
   140008459:	or     edi,0x30
   14000845c:	cmp    rsi,rcx
   14000845f:	mov    WORD PTR [rsp+0x30],cx
   140008464:	je     0x140008472
   140008466:	mov    rsi,QWORD PTR [rsi+0xa0]
   14000846d:	xor    r13d,r13d
   140008470:	jmp    0x1400084a9
   140008472:	mov    r13d,0x104
   140008478:	lea    rdx,[rsp+0x30]
   14000847d:	lea    rsi,[rsp+0x30]
   140008482:	mov    r8d,r13d
   140008485:	call   QWORD PTR [rip+0x28f45]        # 0x1400313d0
   14000848b:	movzx  ecx,WORD PTR [rsp+0x236]
   140008493:	cmp    eax,r13d
   140008496:	mov    r13d,0x0
   14000849c:	cmove  cx,r13w
   1400084a1:	mov    WORD PTR [rsp+0x236],cx
   1400084a9:	mov    r9d,edi
   1400084ac:	mov    r8,rsi
   1400084af:	mov    rdx,r15
   1400084b2:	mov    rcx,r12
   1400084b5:	call   0x140008104
   1400084ba:	cmp    rbx,r13
   1400084bd:	mov    edi,eax
   1400084bf:	je     0x1400084c3
   1400084c1:	mov    DWORD PTR [rbx],ebp
   1400084c3:	cmp    QWORD PTR [rsp+0x28],r13
   1400084c8:	je     0x1400084da
   1400084ca:	mov    rcx,QWORD PTR [rsp+0x28]
   1400084cf:	mov    edx,0x1
   1400084d4:	call   QWORD PTR [rip+0x292ce]        # 0x1400317a8
   1400084da:	mov    ecx,0x1
   1400084df:	call   0x14000820c
   1400084e4:	mov    eax,edi
   1400084e6:	mov    rcx,QWORD PTR [rsp+0x240]
   1400084ee:	xor    rcx,rsp
   1400084f1:	call   0x140019370
   1400084f6:	add    rsp,0x250
   1400084fd:	pop    r15
   1400084ff:	pop    r13
   140008501:	pop    r12
   140008503:	pop    rdi
   140008504:	pop    rsi
   140008505:	pop    rbp
   140008506:	pop    rbx
   140008507:	ret    
   140008508:	mov    QWORD PTR [rsp+0x8],rbx
   14000850d:	mov    QWORD PTR [rsp+0x10],rsi
   140008512:	push   rdi
   140008513:	sub    rsp,0x20
   140008517:	mov    ebx,r8d
   14000851a:	mov    edi,edx
   14000851c:	mov    rsi,rcx
   14000851f:	call   0x1400131d0
   140008524:	mov    r9d,ebx
   140008527:	mov    r8d,edi
   14000852a:	mov    rcx,QWORD PTR [rax+0x8]
   14000852e:	mov    rdx,rsi
   140008531:	test   rcx,rcx
   140008534:	je     0x140008541
   140008536:	mov    rax,QWORD PTR [rcx]
   140008539:	call   QWORD PTR [rax+0x130]
   14000853f:	jmp    0x140008548
   140008541:	xor    ecx,ecx
   140008543:	call   0x140008378
   140008548:	mov    rbx,QWORD PTR [rsp+0x30]
   14000854d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008552:	add    rsp,0x20
   140008556:	pop    rdi
   140008557:	ret    
   140008558:	jmp    0x140008378
   14000855d:	int3   
   14000855e:	int3   
   14000855f:	int3   
   140008560:	rex push rdi
   140008562:	sub    rsp,0x30
   140008566:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000856f:	mov    QWORD PTR [rsp+0x40],rbx
   140008574:	mov    QWORD PTR [rsp+0x48],rbp
   140008579:	mov    QWORD PTR [rsp+0x50],rsi
   14000857e:	mov    esi,r8d
   140008581:	mov    ebp,edx
   140008583:	mov    edi,ecx
   140008585:	call   0x14000669c
   14000858a:	mov    rcx,rax
   14000858d:	xor    r8d,r8d
   140008590:	test   rax,rax
   140008593:	setne  r8b
   140008597:	test   r8d,r8d
   14000859a:	jne    0x1400085a7
   14000859c:	mov    ecx,0x80004005
   1400085a1:	call   0x1400015c0
   1400085a6:	int3   
   1400085a7:	mov    rax,QWORD PTR [rax]
   1400085aa:	call   QWORD PTR [rax+0x18]
   1400085ad:	lea    rbx,[rax+0x18]
   1400085b1:	mov    QWORD PTR [rsp+0x58],rbx
   1400085b6:	mov    ecx,edi
   1400085b8:	call   0x140006688
   1400085bd:	test   rax,rax
   1400085c0:	je     0x1400085d7
   1400085c2:	mov    r8d,edi
   1400085c5:	mov    rdx,rax
   1400085c8:	lea    rcx,[rsp+0x58]
   1400085cd:	call   0x140001ba0
   1400085d2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400085d7:	cmp    esi,0xffffffff
   1400085da:	cmove  esi,edi
   1400085dd:	mov    r8d,esi
   1400085e0:	mov    edx,ebp
   1400085e2:	mov    rcx,rbx
   1400085e5:	call   0x140008508
   1400085ea:	mov    edi,eax
   1400085ec:	lea    rdx,[rbx-0x18]
   1400085f0:	or     ecx,0xffffffff
   1400085f3:	lock xadd DWORD PTR [rdx+0x10],ecx
   1400085f8:	add    ecx,0xffffffff
   1400085fb:	test   ecx,ecx
   1400085fd:	jg     0x140008609
   1400085ff:	mov    rcx,QWORD PTR [rdx]
   140008602:	mov    r8,QWORD PTR [rcx]
   140008605:	call   QWORD PTR [r8+0x8]
   140008609:	mov    eax,edi
   14000860b:	mov    rbx,QWORD PTR [rsp+0x40]
   140008610:	mov    rbp,QWORD PTR [rsp+0x48]
   140008615:	mov    rsi,QWORD PTR [rsp+0x50]
   14000861a:	add    rsp,0x30
   14000861e:	pop    rdi
   14000861f:	ret    
   140008620:	rex push rbp
   140008622:	sub    rsp,0x20
   140008626:	mov    rbp,rdx
   140008629:	lea    rcx,[rbp+0x58]
   14000862d:	call   0x140001dc0
   140008632:	add    rsp,0x20
   140008636:	pop    rbp
   140008637:	ret    
   140008638:	mov    QWORD PTR [rsp+0x8],rbx
   14000863d:	push   rdi
   14000863e:	sub    rsp,0x20
   140008642:	test   rcx,rcx
   140008645:	mov    r10,r9
   140008648:	jne    0x140008650
   14000864a:	call   0x140006408
   14000864f:	int3   
   140008650:	mov    rax,QWORD PTR [rsp+0x60]
   140008655:	mov    ebx,0x1
   14000865a:	test   rax,rax
   14000865d:	je     0x14000866b
   14000865f:	mov    QWORD PTR [rax],rcx
   140008662:	mov    QWORD PTR [rax+0x8],r9
   140008666:	jmp    0x1400087ad
   14000866b:	mov    rax,QWORD PTR [rsp+0x58]
   140008670:	cmp    rax,0x3e
   140008674:	ja     0x140008720
   14000867a:	je     0x140008701
   140008680:	sub    rax,0x38
   140008684:	je     0x1400086f9
   140008686:	sub    rax,rbx
   140008689:	je     0x1400086f1
   14000868b:	sub    rax,rbx
   14000868e:	je     0x1400086e9
   140008690:	sub    rax,rbx
   140008693:	je     0x1400086e1
   140008695:	sub    rax,rbx
   140008698:	je     0x1400086c2
   14000869a:	cmp    rax,rbx
   14000869d:	jne    0x14000873a
   1400086a3:	mov    rdx,QWORD PTR [rsp+0x50]
   1400086a8:	test   rdx,rdx
   1400086ab:	jne    0x1400086b3
   1400086ad:	call   0x140006408
   1400086b2:	int3   
   1400086b3:	mov    r8,QWORD PTR [rdx]
   1400086b6:	mov    rdx,QWORD PTR [rdx+0x8]
   1400086ba:	call   r10
   1400086bd:	jmp    0x1400087ab
   1400086c2:	mov    rdx,QWORD PTR [rsp+0x50]
   1400086c7:	test   rdx,rdx
   1400086ca:	jne    0x1400086d2
   1400086cc:	call   0x140006408
   1400086d1:	int3   
   1400086d2:	mov    r8,QWORD PTR [rdx]
   1400086d5:	mov    rdx,QWORD PTR [rdx+0x8]
   1400086d9:	call   r10
   1400086dc:	jmp    0x1400087ad
   1400086e1:	call   r10
   1400086e4:	jmp    0x1400087ab
   1400086e9:	call   r10
   1400086ec:	jmp    0x1400087ad
   1400086f1:	call   r10
   1400086f4:	jmp    0x1400087ab
   1400086f9:	call   r10
   1400086fc:	jmp    0x1400087ad
   140008701:	mov    r8,QWORD PTR [rsp+0x50]
   140008706:	test   r8,r8
   140008709:	jne    0x140008711
   14000870b:	call   0x140006408
   140008710:	int3   
   140008711:	mov    r9,QWORD PTR [r8]
   140008714:	mov    r8,QWORD PTR [r8+0x8]
   140008718:	call   r10
   14000871b:	jmp    0x1400087ad
   140008720:	sub    rax,0x3f
   140008724:	je     0x140008791
   140008726:	sub    rax,rbx
   140008729:	je     0x140008779
   14000872b:	sub    rax,rbx
   14000872e:	je     0x140008752
   140008730:	sub    rax,rbx
   140008733:	je     0x140008748
   140008735:	cmp    rax,rbx
   140008738:	je     0x14000873e
   14000873a:	xor    eax,eax
   14000873c:	jmp    0x1400087af
   14000873e:	mov    rdx,QWORD PTR [rsp+0x50]
   140008743:	call   r10
   140008746:	jmp    0x1400087ab
   140008748:	mov    rdx,QWORD PTR [rsp+0x50]
   14000874d:	call   r10
   140008750:	jmp    0x1400087ad
   140008752:	mov    rdi,QWORD PTR [rsp+0x50]
   140008757:	test   rdi,rdi
   14000875a:	jne    0x140008762
   14000875c:	call   0x140006408
   140008761:	int3   
   140008762:	mov    r8d,edx
   140008765:	mov    rdx,rdi
   140008768:	call   r10
   14000876b:	xor    eax,eax
   14000876d:	cmp    DWORD PTR [rdi+0x2c],eax
   140008770:	sete   al
   140008773:	and    DWORD PTR [rdi+0x2c],0x0
   140008777:	jmp    0x1400087ab
   140008779:	mov    rdi,QWORD PTR [rsp+0x50]
   14000877e:	test   rdi,rdi
   140008781:	jne    0x140008789
   140008783:	call   0x140006408
   140008788:	int3   
   140008789:	mov    rdx,rdi
   14000878c:	call   r10
   14000878f:	jmp    0x14000876b
   140008791:	mov    r8,QWORD PTR [rsp+0x50]
   140008796:	test   r8,r8
   140008799:	jne    0x1400087a1
   14000879b:	call   0x140006408
   1400087a0:	int3   
   1400087a1:	mov    r9,QWORD PTR [r8]
   1400087a4:	mov    r8,QWORD PTR [r8+0x8]
   1400087a8:	call   r10
   1400087ab:	mov    ebx,eax
   1400087ad:	mov    eax,ebx
   1400087af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087b4:	add    rsp,0x20
   1400087b8:	pop    rdi
   1400087b9:	ret    
   1400087ba:	int3   
   1400087bb:	int3   
   1400087bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400087c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400087c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400087cb:	push   rdi
   1400087cc:	push   r12
   1400087ce:	push   r13
   1400087d0:	sub    rsp,0x40
   1400087d4:	cmp    r8d,0xfffffffe
   1400087d8:	mov    r12,r9
   1400087db:	mov    ebx,r8d
   1400087de:	mov    r13d,edx
   1400087e1:	mov    rsi,rcx
   1400087e4:	jne    0x140008823
   1400087e6:	call   0x1400131d0
   1400087eb:	cmp    QWORD PTR [rax+0x68],0x0
   1400087f0:	jne    0x1400087f8
   1400087f2:	call   0x140006408
   1400087f7:	int3   
   1400087f8:	call   0x1400131d0
   1400087fd:	mov    r9,r12
   140008800:	mov    r8d,r13d
   140008803:	mov    rcx,QWORD PTR [rax+0x68]
   140008807:	mov    rax,QWORD PTR [rsp+0x80]
   14000880f:	mov    rdx,rsi
   140008812:	mov    r10,QWORD PTR [rcx]
   140008815:	mov    QWORD PTR [rsp+0x20],rax
   14000881a:	call   QWORD PTR [r10+0x8]
   14000881e:	jmp    0x1400088f6
   140008823:	cmp    ebx,0xfffffffd
   140008826:	jne    0x1400088ae
   14000882c:	xor    edi,edi
   14000882e:	test   r9,r9
   140008831:	jne    0x140008839
   140008833:	call   0x140006408
   140008838:	int3   
   140008839:	mov    rax,QWORD PTR [rcx]
   14000883c:	mov    rbp,QWORD PTR [r9+0x50]
   140008840:	call   QWORD PTR [rax+0x58]
   140008843:	test   rax,rax
   140008846:	mov    rsi,rax
   140008849:	je     0x1400088aa
   14000884b:	test   edi,edi
   14000884d:	jne    0x1400088aa
   14000884f:	mov    rbx,QWORD PTR [rsi+0x8]
   140008853:	jmp    0x14000889b
   140008855:	cmp    DWORD PTR [rbx+0xc],0x0
   140008859:	je     0x1400088a2
   14000885b:	test   edi,edi
   14000885d:	jne    0x1400088a2
   14000885f:	cmp    r13d,ecx
   140008862:	jne    0x140008897
   140008864:	test   rbp,rbp
   140008867:	jne    0x140008870
   140008869:	cmp    QWORD PTR [rbx],rbp
   14000886c:	je     0x14000888a
   14000886e:	jmp    0x140008897
   140008870:	mov    rdx,QWORD PTR [rbx]
   140008873:	test   rdx,rdx
   140008876:	je     0x140008897
   140008878:	mov    r8d,0x10
   14000887e:	mov    rcx,rbp
   140008881:	call   0x14001ba10
   140008886:	test   eax,eax
   140008888:	jne    0x140008897
   14000888a:	mov    eax,DWORD PTR [rbx+0xc]
   14000888d:	mov    edi,0x1
   140008892:	mov    DWORD PTR [r12+0x8],eax
   140008897:	add    rbx,0x10
   14000889b:	mov    ecx,DWORD PTR [rbx+0x8]
   14000889e:	test   ecx,ecx
   1400088a0:	jne    0x140008855
   1400088a2:	mov    rsi,QWORD PTR [rsi]
   1400088a5:	test   rsi,rsi
   1400088a8:	jne    0x14000884b
   1400088aa:	mov    eax,edi
   1400088ac:	jmp    0x1400088f6
   1400088ae:	cmp    ebx,0xffffffff
   1400088b1:	je     0x1400088c3
   1400088b3:	mov    eax,ebx
   1400088b5:	movzx  ebx,bx
   1400088b8:	shr    rax,0x10
   1400088bc:	movzx  ebp,ax
   1400088bf:	test   ebp,ebp
   1400088c1:	jne    0x1400088c8
   1400088c3:	mov    ebp,0x111
   1400088c8:	mov    rax,QWORD PTR [rcx]
   1400088cb:	call   QWORD PTR [rax+0x50]
   1400088ce:	jmp    0x1400088eb
   1400088d0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400088d4:	mov    r9d,r13d
   1400088d7:	mov    r8d,ebx
   1400088da:	mov    edx,ebp
   1400088dc:	call   0x14000b144
   1400088e1:	test   rax,rax
   1400088e4:	mov    r9,rax
   1400088e7:	jne    0x14000890f
   1400088e9:	call   QWORD PTR [rdi]
   1400088eb:	cmp    QWORD PTR [rax],0x0
   1400088ef:	mov    rdi,rax
   1400088f2:	jne    0x1400088d0
   1400088f4:	xor    eax,eax
   1400088f6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400088fb:	mov    rbp,QWORD PTR [rsp+0x68]
   140008900:	mov    rsi,QWORD PTR [rsp+0x70]
   140008905:	add    rsp,0x40
   140008909:	pop    r13
   14000890b:	pop    r12
   14000890d:	pop    rdi
   14000890e:	ret    
   14000890f:	mov    rax,QWORD PTR [rsp+0x80]
   140008917:	mov    r8d,ebx
   14000891a:	mov    edx,r13d
   14000891d:	mov    QWORD PTR [rsp+0x30],rax
   140008922:	mov    rax,QWORD PTR [r9+0x10]
   140008926:	mov    r9,QWORD PTR [r9+0x18]
   14000892a:	mov    QWORD PTR [rsp+0x28],rax
   14000892f:	mov    rcx,rsi
   140008932:	mov    QWORD PTR [rsp+0x20],r12
   140008937:	call   0x140008638
   14000893c:	jmp    0x1400088f6
   14000893e:	int3   
   14000893f:	int3   
   140008940:	mov    eax,0x80029c4a
   140008945:	ret    
   140008946:	int3   
   140008947:	int3   
   140008948:	lea    rax,[rip+0x29c69]        # 0x1400325b8
   14000894f:	ret    
   140008950:	lea    rax,[rip+0x29b39]        # 0x140032490
   140008957:	ret    
   140008958:	lea    rax,[rip+0x29b99]        # 0x1400324f8
   14000895f:	ret    
   140008960:	lea    rax,[rip+0x29bc9]        # 0x140032530
   140008967:	ret    
   140008968:	rex push rbx
   14000896a:	sub    rsp,0x20
   14000896e:	mov    rbx,rcx
   140008971:	mov    ecx,0xd
   140008976:	call   0x140015804
   14000897b:	mov    r11,QWORD PTR [rbx]
   14000897e:	mov    rcx,rbx
   140008981:	call   QWORD PTR [r11+0x40]
   140008985:	test   rax,rax
   140008988:	je     0x140008992
   14000898a:	mov    rcx,rax
   14000898d:	call   0x1400126c4
   140008992:	mov    ecx,0xd
   140008997:	call   0x140015898
   14000899c:	mov    r11,QWORD PTR [rbx]
   14000899f:	mov    edx,0x1
   1400089a4:	mov    rcx,rbx
   1400089a7:	add    rsp,0x20
   1400089ab:	pop    rbx
   1400089ac:	rex.WB jmp QWORD PTR [r11+0x8]
   1400089b0:	lea    rax,[rip+0x29b99]        # 0x140032550
   1400089b7:	ret    
   1400089b8:	lea    rax,[rip+0x29bb1]        # 0x140032570
   1400089bf:	ret    
   1400089c0:	lea    rax,[rip+0x29c29]        # 0x1400325f0
   1400089c7:	mov    QWORD PTR [rcx],rax
   1400089ca:	xor    eax,eax
   1400089cc:	mov    DWORD PTR [rcx+0x30],eax
   1400089cf:	mov    DWORD PTR [rcx+0xc],eax
   1400089d2:	mov    DWORD PTR [rcx+0x8],eax
   1400089d5:	mov    QWORD PTR [rcx+0x38],rax
   1400089d9:	mov    QWORD PTR [rcx+0x18],rax
   1400089dd:	mov    QWORD PTR [rcx+0x10],rax
   1400089e1:	mov    QWORD PTR [rcx+0x20],rax
   1400089e5:	mov    DWORD PTR [rcx+0x2c],eax
   1400089e8:	mov    DWORD PTR [rcx+0x28],eax
   1400089eb:	mov    rax,rcx
   1400089ee:	ret    
   1400089ef:	int3   
   1400089f0:	rex push rbx
   1400089f2:	sub    rsp,0x20
   1400089f6:	mov    rbx,rcx
   1400089f9:	call   0x1400131d0
   1400089fe:	mov    ecx,0x1
   140008a03:	mov    QWORD PTR [rbx+0x38],rax
   140008a07:	xor    eax,eax
   140008a09:	mov    DWORD PTR [rbx+0x8],ecx
   140008a0c:	mov    QWORD PTR [rbx+0x10],rax
   140008a10:	mov    QWORD PTR [rbx+0x18],rax
   140008a14:	mov    QWORD PTR [rbx+0x20],rax
   140008a18:	mov    QWORD PTR [rbx+0x30],rax
   140008a1c:	mov    DWORD PTR [rbx+0x28],ecx
   140008a1f:	mov    rax,rbx
   140008a22:	add    rsp,0x20
   140008a26:	pop    rbx
   140008a27:	ret    
   140008a28:	rex push rbx
   140008a2a:	sub    rsp,0x20
   140008a2e:	mov    rbx,rcx
   140008a31:	add    rcx,0x20
   140008a35:	mov    rax,QWORD PTR [rcx]
   140008a38:	test   rax,rax
   140008a3b:	je     0x140008a40
   140008a3d:	call   QWORD PTR [rax+0x38]
   140008a40:	and    QWORD PTR [rbx+0x38],0x0
   140008a45:	add    rsp,0x20
   140008a49:	pop    rbx
   140008a4a:	ret    
   140008a4b:	int3   
   140008a4c:	sub    rsp,0x28
   140008a50:	call   0x1400131d0
   140008a55:	mov    edx,0x1
   140008a5a:	mov    rcx,QWORD PTR [rax+0x8]
   140008a5e:	mov    rax,QWORD PTR [rcx]
   140008a61:	add    rsp,0x28
   140008a65:	rex.W jmp QWORD PTR [rax+0x138]
   140008a6c:	sub    rsp,0x28
   140008a70:	call   0x1400131d0
   140008a75:	or     edx,0xffffffff
   140008a78:	mov    rcx,QWORD PTR [rax+0x8]
   140008a7c:	mov    rax,QWORD PTR [rcx]
   140008a7f:	add    rsp,0x28
   140008a83:	rex.W jmp QWORD PTR [rax+0x138]
   140008a8a:	int3   
   140008a8b:	int3   
   140008a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140008a91:	mov    QWORD PTR [rsp+0x10],rsi
   140008a96:	push   rdi
   140008a97:	sub    rsp,0x20
   140008a9b:	mov    rbx,rcx
   140008a9e:	mov    rcx,QWORD PTR [rcx+0x10]
   140008aa2:	mov    edi,edx
   140008aa4:	test   rcx,rcx
   140008aa7:	je     0x140008adf
   140008aa9:	cmp    QWORD PTR [rbx+0x18],0x0
   140008aae:	jne    0x140008b38
   140008ab4:	mov    edx,DWORD PTR [rbx+0xc]
   140008ab7:	cmp    edx,DWORD PTR [rbx+0x30]
   140008aba:	jb     0x140008ac2
   140008abc:	call   0x140006408
   140008ac1:	int3   
   140008ac2:	mov    rcx,QWORD PTR [rcx+0x8]
   140008ac6:	neg    edi
   140008ac8:	sbb    r8d,r8d
   140008acb:	not    r8d
   140008ace:	and    r8d,0x3
   140008ad2:	bts    r8d,0xa
   140008ad7:	call   QWORD PTR [rip+0x28c53]        # 0x140031730
   140008add:	jmp    0x140008b31
   140008adf:	cmp    QWORD PTR [rbx+0x20],0x0
   140008ae4:	jne    0x140008aec
   140008ae6:	call   0x140006408
   140008aeb:	int3   
   140008aec:	test   edx,edx
   140008aee:	jne    0x140008b26
   140008af0:	mov    rsi,QWORD PTR [rbx+0x20]
   140008af4:	call   QWORD PTR [rip+0x28c26]        # 0x140031720
   140008afa:	cmp    rax,QWORD PTR [rsi+0x40]
   140008afe:	jne    0x140008b26
   140008b00:	mov    rcx,QWORD PTR [rsi+0x40]
   140008b04:	call   QWORD PTR [rip+0x28c46]        # 0x140031750
   140008b0a:	mov    rcx,rax
   140008b0d:	call   0x14000d9cc
   140008b12:	xor    r9d,r9d
   140008b15:	xor    r8d,r8d
   140008b18:	mov    rcx,QWORD PTR [rax+0x40]
   140008b1c:	lea    edx,[r9+0x28]
   140008b20:	call   QWORD PTR [rip+0x28ca2]        # 0x1400317c8
   140008b26:	mov    rcx,QWORD PTR [rbx+0x20]
   140008b2a:	mov    edx,edi
   140008b2c:	call   0x14001337c
   140008b31:	mov    DWORD PTR [rbx+0x28],0x1
   140008b38:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b3d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008b42:	add    rsp,0x20
   140008b46:	pop    rdi
   140008b47:	ret    
   140008b48:	mov    QWORD PTR [rsp+0x8],rbx
   140008b4d:	push   rdi
   140008b4e:	sub    rsp,0x20
   140008b52:	mov    rbx,rcx
   140008b55:	mov    rcx,QWORD PTR [rcx+0x10]
   140008b59:	movsxd rdi,edx
   140008b5c:	test   rcx,rcx
   140008b5f:	je     0x140008b90
   140008b61:	cmp    QWORD PTR [rbx+0x18],0x0
   140008b66:	jne    0x140008bd4
   140008b68:	mov    edx,DWORD PTR [rbx+0xc]
   140008b6b:	cmp    edx,DWORD PTR [rbx+0x30]
   140008b6e:	jb     0x140008b76
   140008b70:	call   0x140006408
   140008b75:	int3   
   140008b76:	mov    rcx,QWORD PTR [rcx+0x8]
   140008b7a:	neg    edi
   140008b7c:	sbb    r8d,r8d
   140008b7f:	and    r8d,0x8
   140008b83:	bts    r8d,0xa
   140008b88:	call   QWORD PTR [rip+0x28baa]        # 0x140031738
   140008b8e:	jmp    0x140008bd4
   140008b90:	mov    rcx,QWORD PTR [rbx+0x20]
   140008b94:	test   rcx,rcx
   140008b97:	jne    0x140008b9f
   140008b99:	call   0x140006408
   140008b9e:	int3   
   140008b9f:	mov    rcx,QWORD PTR [rcx+0x40]
   140008ba3:	xor    r9d,r9d
   140008ba6:	xor    r8d,r8d
   140008ba9:	mov    edx,0x87
   140008bae:	call   QWORD PTR [rip+0x28c14]        # 0x1400317c8
   140008bb4:	bt     rax,0xd
   140008bb9:	jae    0x140008bd4
   140008bbb:	mov    rcx,QWORD PTR [rbx+0x20]
   140008bbf:	mov    r8,rdi
   140008bc2:	xor    r9d,r9d
   140008bc5:	mov    rcx,QWORD PTR [rcx+0x40]
   140008bc9:	mov    edx,0xf1
   140008bce:	call   QWORD PTR [rip+0x28bf4]        # 0x1400317c8
   140008bd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bd9:	add    rsp,0x20
   140008bdd:	pop    rdi
   140008bde:	ret    
   140008bdf:	int3   
   140008be0:	mov    QWORD PTR [rsp+0x8],rbx
   140008be5:	push   rdi
   140008be6:	sub    rsp,0x30
   140008bea:	test   rdx,rdx
   140008bed:	mov    rdi,rdx
   140008bf0:	mov    rbx,rcx
   140008bf3:	jne    0x140008bfb
   140008bf5:	call   0x140006408
   140008bfa:	int3   
   140008bfb:	mov    rcx,QWORD PTR [rcx+0x10]
   140008bff:	test   rcx,rcx
   140008c02:	je     0x140008c51
   140008c04:	cmp    QWORD PTR [rbx+0x18],0x0
   140008c09:	jne    0x140008c69
   140008c0b:	mov    edx,DWORD PTR [rbx+0xc]
   140008c0e:	mov    rcx,QWORD PTR [rcx+0x8]
   140008c12:	mov    r8d,0x400
   140008c18:	call   QWORD PTR [rip+0x28b62]        # 0x140031780
   140008c1e:	mov    edx,DWORD PTR [rbx+0xc]
   140008c21:	and    eax,0xfffff6fb
   140008c26:	cmp    edx,DWORD PTR [rbx+0x30]
   140008c29:	jb     0x140008c31
   140008c2b:	call   0x140006408
   140008c30:	int3   
   140008c31:	mov    rcx,QWORD PTR [rbx+0x10]
   140008c35:	mov    r9d,DWORD PTR [rbx+0x8]
   140008c39:	bts    eax,0xa
   140008c3d:	mov    rcx,QWORD PTR [rcx+0x8]
   140008c41:	mov    r8d,eax
   140008c44:	mov    QWORD PTR [rsp+0x20],rdi
   140008c49:	call   QWORD PTR [rip+0x28ad9]        # 0x140031728
   140008c4f:	jmp    0x140008c69
   140008c51:	mov    rcx,QWORD PTR [rbx+0x20]
   140008c55:	test   rcx,rcx
   140008c58:	jne    0x140008c60
   140008c5a:	call   0x140006408
   140008c5f:	int3   
   140008c60:	mov    rcx,QWORD PTR [rcx+0x40]
   140008c64:	call   0x140015afc
   140008c69:	mov    rbx,QWORD PTR [rsp+0x40]
   140008c6e:	add    rsp,0x30
   140008c72:	pop    rdi
   140008c73:	ret    
   140008c74:	mov    rax,rsp
   140008c77:	mov    QWORD PTR [rax+0x8],rbx
   140008c7b:	mov    QWORD PTR [rax+0x10],rbp
   140008c7f:	mov    QWORD PTR [rax+0x18],rsi
   140008c83:	mov    QWORD PTR [rax+0x20],rdi
   140008c87:	push   r12
   140008c89:	sub    rsp,0xc0
   140008c90:	mov    rax,QWORD PTR [rip+0x37339]        # 0x14003ffd0
   140008c97:	xor    rax,rsp
   140008c9a:	mov    QWORD PTR [rsp+0xb0],rax
   140008ca2:	call   QWORD PTR [rip+0x28a68]        # 0x140031710
   140008ca8:	movsx  ebp,ax
   140008cab:	shr    eax,0x10
   140008cae:	cmp    ebp,0x4
   140008cb1:	movsx  esi,ax
   140008cb4:	jle    0x140008dc2
   140008cba:	mov    edi,0x5
   140008cbf:	cmp    esi,edi
   140008cc1:	jle    0x140008dc2
   140008cc7:	lea    r8d,[rdi+0x1b]
   140008ccb:	lea    rcx,[rsp+0x30]
   140008cd0:	cmp    ebp,r8d
   140008cd3:	cmovg  ebp,r8d
   140008cd7:	lea    eax,[rbp-0x4]
   140008cda:	lea    ebx,[rbp+0xf]
   140008cdd:	cdq    
   140008cde:	sar    ebx,0x4
   140008ce1:	sub    eax,edx
   140008ce3:	mov    r12d,ebx
   140008ce6:	mov    edx,0xff
   140008ceb:	sar    eax,1
   140008ced:	shl    r12d,0x4
   140008cf1:	add    r12d,eax
   140008cf4:	lea    eax,[rdi+0x7]
   140008cf7:	sub    r12d,ebp
   140008cfa:	cmp    r12d,eax
   140008cfd:	cmovg  r12d,eax
   140008d01:	cmp    esi,r8d
   140008d04:	cmovg  esi,r8d
   140008d08:	lea    r8d,[rdi+0x7b]
   140008d0c:	call   0x14001b520
   140008d11:	movsxd r11,ebx
   140008d14:	lea    eax,[rsi-0x6]
   140008d17:	sar    eax,1
   140008d19:	lea    r10,[rip+0x29860]        # 0x140032580
   140008d20:	movsxd rcx,eax
   140008d23:	imul   rcx,r11
   140008d27:	add    r11,r11
   140008d2a:	lea    rdx,[rsp+rcx*2+0x30]
   140008d2f:	movzx  r9d,BYTE PTR [r10]
   140008d33:	mov    ecx,r12d
   140008d36:	add    r10,0x1
   140008d3a:	shl    r9w,cl
   140008d3e:	not    r9w
   140008d42:	movzx  eax,r9w
   140008d46:	mov    BYTE PTR [rdx+0x1],r9b
   140008d4a:	shr    ax,0x8
   140008d4e:	mov    BYTE PTR [rdx],al
   140008d50:	add    rdx,r11
   140008d53:	sub    rdi,0x1
   140008d57:	jne    0x140008d2f
   140008d59:	lea    r9d,[rdi+0x1]
   140008d5d:	lea    rax,[rsp+0x30]
   140008d62:	mov    edx,esi
   140008d64:	mov    r8d,r9d
   140008d67:	mov    ecx,ebp
   140008d69:	mov    QWORD PTR [rsp+0x20],rax
   140008d6e:	call   QWORD PTR [rip+0x2839c]        # 0x140031110
   140008d74:	test   rax,rax
   140008d77:	mov    QWORD PTR [rip+0x3c382],rax        # 0x140045100
   140008d7e:	jne    0x140008d94
   140008d80:	mov    edx,0x7fe3
   140008d85:	xor    ecx,ecx
   140008d87:	call   QWORD PTR [rip+0x2898b]        # 0x140031718
   140008d8d:	mov    QWORD PTR [rip+0x3c36c],rax        # 0x140045100
   140008d94:	mov    rcx,QWORD PTR [rsp+0xb0]
   140008d9c:	xor    rcx,rsp
   140008d9f:	call   0x140019370
   140008da4:	lea    r11,[rsp+0xc0]
   140008dac:	mov    rbx,QWORD PTR [r11+0x10]
   140008db0:	mov    rbp,QWORD PTR [r11+0x18]
   140008db4:	mov    rsi,QWORD PTR [r11+0x20]
   140008db8:	mov    rdi,QWORD PTR [r11+0x28]
   140008dbc:	mov    rsp,r11
   140008dbf:	pop    r12
   140008dc1:	ret    
   140008dc2:	call   0x140006408
   140008dc7:	int3   
   140008dc8:	rex push rbx
   140008dca:	sub    rsp,0x30
   140008dce:	mov    r8,QWORD PTR [rcx]
   140008dd1:	mov    eax,edx
   140008dd3:	xor    edx,edx
   140008dd5:	test   eax,eax
   140008dd7:	mov    rbx,rcx
   140008dda:	setne  dl
   140008ddd:	call   QWORD PTR [r8+0x8]
   140008de1:	cmp    QWORD PTR [rbx+0x10],0x0
   140008de6:	je     0x140008e39
   140008de8:	cmp    QWORD PTR [rbx+0x18],0x0
   140008ded:	jne    0x140008e39
   140008def:	mov    eax,DWORD PTR [rbx+0x30]
   140008df2:	cmp    DWORD PTR [rbx+0xc],eax
   140008df5:	jb     0x140008dfd
   140008df7:	call   0x140006408
   140008dfc:	int3   
   140008dfd:	mov    rax,QWORD PTR [rip+0x3c2fc]        # 0x140045100
   140008e04:	test   rax,rax
   140008e07:	jne    0x140008e1a
   140008e09:	call   0x140008c74
   140008e0e:	mov    rax,QWORD PTR [rip+0x3c2eb]        # 0x140045100
   140008e15:	test   rax,rax
   140008e18:	je     0x140008e39
   140008e1a:	mov    rcx,QWORD PTR [rbx+0x10]
   140008e1e:	mov    edx,DWORD PTR [rbx+0xc]
   140008e21:	xor    r9d,r9d
   140008e24:	mov    rcx,QWORD PTR [rcx+0x8]
   140008e28:	mov    r8d,0x400
   140008e2e:	mov    QWORD PTR [rsp+0x20],rax
   140008e33:	call   QWORD PTR [rip+0x288cf]        # 0x140031708
   140008e39:	add    rsp,0x30
   140008e3d:	pop    rbx
   140008e3e:	ret    
   140008e3f:	int3   
   140008e40:	lea    rax,[rip+0x36919]        # 0x14003f760
   140008e47:	ret    
   140008e48:	lea    rax,[rip+0x297d9]        # 0x140032628
   140008e4f:	mov    QWORD PTR [rcx],rax
   140008e52:	xor    eax,eax
   140008e54:	mov    QWORD PTR [rcx+0x8],rax
   140008e58:	mov    QWORD PTR [rcx+0x20],rax
   140008e5c:	mov    QWORD PTR [rcx+0x18],rax
   140008e60:	mov    QWORD PTR [rcx+0x10],rax
   140008e64:	mov    rax,rcx
   140008e67:	ret    
   140008e68:	sub    rsp,0x28
   140008e6c:	mov    ecx,0x28
   140008e71:	call   0x140006114
   140008e76:	xor    edx,edx
   140008e78:	cmp    rax,rdx
   140008e7b:	je     0x140008e99
   140008e7d:	lea    rcx,[rip+0x297a4]        # 0x140032628
   140008e84:	mov    QWORD PTR [rax+0x8],rdx
   140008e88:	mov    QWORD PTR [rax+0x20],rdx
   140008e8c:	mov    QWORD PTR [rax+0x18],rdx
   140008e90:	mov    QWORD PTR [rax+0x10],rdx
   140008e94:	mov    QWORD PTR [rax],rcx
   140008e97:	jmp    0x140008e9c
   140008e99:	mov    rax,rdx
   140008e9c:	add    rsp,0x28
   140008ea0:	ret    
   140008ea1:	int3   
   140008ea2:	int3   
   140008ea3:	int3   
   140008ea4:	test   rdx,rdx
   140008ea7:	je     0x140008eef
   140008ea9:	mov    QWORD PTR [rsp+0x8],rbx
   140008eae:	push   rdi
   140008eaf:	sub    rsp,0x20
   140008eb3:	mov    rbx,rdx
   140008eb6:	mov    rdi,rcx
   140008eb9:	sub    rbx,0x1
   140008ebd:	test   rdi,rdi
   140008ec0:	je     0x140008efb
   140008ec2:	call   0x14000669c
   140008ec7:	test   rax,rax
   140008eca:	je     0x140008ef0
   140008ecc:	mov    rdx,QWORD PTR [rax]
   140008ecf:	mov    rcx,rax
   140008ed2:	call   QWORD PTR [rdx+0x18]
   140008ed5:	add    rax,0x18
   140008ed9:	mov    QWORD PTR [rdi],rax
   140008edc:	add    rdi,0x8
   140008ee0:	test   rbx,rbx
   140008ee3:	jne    0x140008eb9
   140008ee5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eea:	add    rsp,0x20
   140008eee:	pop    rdi
   140008eef:	ret    
   140008ef0:	mov    ecx,0x80004005
   140008ef5:	call   0x1400015c0
   140008efa:	int3   
   140008efb:	call   0x140006408
   140008f00:	int3   
   140008f01:	int3   
   140008f02:	int3   
   140008f03:	int3   
   140008f04:	test   rdx,rdx
   140008f07:	je     0x140008f54
   140008f09:	mov    QWORD PTR [rsp+0x8],rbx
   140008f0e:	push   rdi
   140008f0f:	sub    rsp,0x20
   140008f13:	mov    rbx,rdx
   140008f16:	mov    rdi,rcx
   140008f19:	sub    rbx,0x1
   140008f1d:	test   rdi,rdi
   140008f20:	je     0x140008f55
   140008f22:	mov    rdx,QWORD PTR [rdi]
   140008f25:	sub    rdx,0x18
   140008f29:	or     eax,0xffffffff
   140008f2c:	lock xadd DWORD PTR [rdx+0x10],eax
   140008f31:	add    eax,0xffffffff
   140008f34:	test   eax,eax
   140008f36:	jg     0x140008f41
   140008f38:	mov    rcx,QWORD PTR [rdx]
   140008f3b:	mov    rax,QWORD PTR [rcx]
   140008f3e:	call   QWORD PTR [rax+0x8]
   140008f41:	add    rdi,0x8
   140008f45:	test   rbx,rbx
   140008f48:	jne    0x140008f19
   140008f4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f4f:	add    rsp,0x20
   140008f53:	pop    rdi
   140008f54:	ret    
   140008f55:	call   0x140006408
   140008f5a:	int3   
   140008f5b:	int3   
   140008f5c:	mov    rax,rsp
   140008f5f:	mov    QWORD PTR [rax+0x8],rbx
   140008f63:	mov    QWORD PTR [rax+0x10],rbp
   140008f67:	mov    QWORD PTR [rax+0x18],rsi
   140008f6b:	mov    QWORD PTR [rax+0x20],rdi
   140008f6f:	push   r12
   140008f71:	sub    rsp,0x20
   140008f75:	test   rdx,rdx
   140008f78:	mov    rsi,rdx
   140008f7b:	mov    rdi,rcx
   140008f7e:	jns    0x140008f86
   140008f80:	call   0x140006408
   140008f85:	int3   
   140008f86:	test   r8,r8
   140008f89:	js     0x140008f8f
   140008f8b:	mov    QWORD PTR [rcx+0x20],r8
   140008f8f:	test   rdx,rdx
   140008f92:	jne    0x140008fbe
   140008f94:	mov    rdx,QWORD PTR [rcx+0x10]
   140008f98:	mov    rcx,QWORD PTR [rcx+0x8]
   140008f9c:	call   0x140008f04
   140008fa1:	mov    rcx,QWORD PTR [rdi+0x8]
   140008fa5:	call   0x140006160
   140008faa:	and    QWORD PTR [rdi+0x8],0x0
   140008faf:	and    QWORD PTR [rdi+0x18],0x0
   140008fb4:	and    QWORD PTR [rdi+0x10],0x0
   140008fb9:	jmp    0x1400090f5
   140008fbe:	mov    rcx,QWORD PTR [rcx+0x8]
   140008fc2:	test   rcx,rcx
   140008fc5:	jne    0x140008feb
   140008fc7:	mov    rcx,rdx
   140008fca:	shl    rcx,0x3
   140008fce:	call   0x140006114
   140008fd3:	mov    rdx,rsi
   140008fd6:	mov    rcx,rax
   140008fd9:	mov    QWORD PTR [rdi+0x8],rax
   140008fdd:	call   0x140008ea4
   140008fe2:	mov    QWORD PTR [rdi+0x18],rsi
   140008fe6:	jmp    0x1400090f1
   140008feb:	mov    r8,QWORD PTR [rdi+0x18]
   140008fef:	cmp    rdx,r8
   140008ff2:	jg     0x140009028
   140008ff4:	mov    rax,QWORD PTR [rdi+0x10]
   140008ff8:	cmp    rax,rdx
   140008ffb:	jge    0x14000900e
   140008ffd:	lea    rcx,[rcx+rax*8]
   140009001:	sub    rdx,rax
   140009004:	call   0x140008ea4
   140009009:	jmp    0x1400090f1
   14000900e:	jle    0x1400090f1
   140009014:	sub    rax,rdx
   140009017:	lea    rcx,[rcx+rdx*8]
   14000901b:	mov    rdx,rax
   14000901e:	call   0x140008f04
   140009023:	jmp    0x1400090f1
   140009028:	mov    rax,QWORD PTR [rdi+0x20]
   14000902c:	test   rax,rax
   14000902f:	jne    0x140009062
   140009031:	mov    rax,QWORD PTR [rdi+0x10]
   140009035:	cqo    
   140009037:	and    edx,0x7
   14000903a:	add    rax,rdx
   14000903d:	mov    edx,0x4
   140009042:	sar    rax,0x3
   140009046:	cmp    rax,rdx
   140009049:	mov    rcx,rax
   14000904c:	jl     0x140009058
   14000904e:	mov    eax,0x400
   140009053:	cmp    rcx,rax
   140009056:	jg     0x140009062
   140009058:	mov    rax,rcx
   14000905b:	cmp    rcx,rdx
   14000905e:	cmovl  rax,rdx
   140009062:	add    rax,r8
   140009065:	mov    rbp,rsi
   140009068:	cmp    rsi,rax
   14000906b:	cmovl  rbp,rax
   14000906f:	cmp    rbp,r8
   140009072:	jge    0x14000907a
   140009074:	call   0x140006408
   140009079:	int3   
   14000907a:	mov    rbx,rbp
   14000907d:	shl    rbx,0x3
   140009081:	mov    rcx,rbx
   140009084:	call   0x140006114
   140009089:	mov    r9,QWORD PTR [rdi+0x10]
   14000908d:	mov    r8,QWORD PTR [rdi+0x8]
   140009091:	shl    r9,0x3
   140009095:	mov    rdx,rbx
   140009098:	mov    rcx,rax
   14000909b:	mov    r12,rax
   14000909e:	call   0x140018ee0
   1400090a3:	test   eax,eax
   1400090a5:	je     0x1400090cd
   1400090a7:	cmp    eax,0xc
   1400090aa:	je     0x1400090c7
   1400090ac:	cmp    eax,0x16
   1400090af:	je     0x1400090c1
   1400090b1:	cmp    eax,0x22
   1400090b4:	je     0x1400090c1
   1400090b6:	cmp    eax,0x50
   1400090b9:	je     0x1400090cd
   1400090bb:	call   0x140006408
   1400090c0:	int3   
   1400090c1:	call   0x140006408
   1400090c6:	int3   
   1400090c7:	call   0x1400063c0
   1400090cc:	int3   
   1400090cd:	mov    rax,QWORD PTR [rdi+0x10]
   1400090d1:	mov    rdx,rsi
   1400090d4:	lea    rcx,[r12+rax*8]
   1400090d8:	sub    rdx,rax
   1400090db:	call   0x140008ea4
   1400090e0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400090e4:	call   0x140006160
   1400090e9:	mov    QWORD PTR [rdi+0x8],r12
   1400090ed:	mov    QWORD PTR [rdi+0x18],rbp
   1400090f1:	mov    QWORD PTR [rdi+0x10],rsi
   1400090f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090fa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400090ff:	mov    rsi,QWORD PTR [rsp+0x40]
   140009104:	mov    rdi,QWORD PTR [rsp+0x48]
   140009109:	add    rsp,0x20
   14000910d:	pop    r12
   14000910f:	ret    
   140009110:	rex push rbx
   140009112:	sub    rsp,0x460
   140009119:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140009122:	mov    rax,QWORD PTR [rip+0x36ea7]        # 0x14003ffd0
   140009129:	xor    rax,rsp
   14000912c:	mov    QWORD PTR [rsp+0x450],rax
   140009134:	mov    rbx,rcx
   140009137:	lea    rax,[rip+0x294ea]        # 0x140032628
   14000913e:	mov    QWORD PTR [rcx],rax
   140009141:	mov    rdx,QWORD PTR [rcx+0x10]
   140009145:	mov    rcx,QWORD PTR [rcx+0x8]
   140009149:	call   0x140008f04
   14000914e:	mov    rcx,QWORD PTR [rbx+0x8]
   140009152:	call   0x140006160
   140009157:	nop
   140009158:	mov    rcx,QWORD PTR [rsp+0x450]
   140009160:	xor    rcx,rsp
   140009163:	call   0x140019370
   140009168:	add    rsp,0x460
   14000916f:	pop    rbx
   140009170:	ret    
   140009171:	int3   
   140009172:	int3   
   140009173:	int3   
   140009174:	int3   
   140009175:	int3   
   140009176:	int3   
   140009177:	int3   
   140009178:	int3   
   140009179:	int3   
   14000917a:	int3   
   14000917b:	int3   
   14000917c:	int3   
   14000917d:	int3   
   14000917e:	int3   
   14000917f:	int3   
   140009180:	mov    QWORD PTR [rsp+0x10],rdx
   140009185:	push   rbx
   140009186:	push   rbp
   140009187:	sub    rsp,0x38
   14000918b:	mov    rbp,rdx
   14000918e:	call   0x14000669c
   140009193:	mov    r11,rax
   140009196:	xor    ecx,ecx
   140009198:	test   rax,rax
   14000919b:	setne  cl
   14000919e:	test   ecx,ecx
   1400091a0:	jne    0x1400091ad
   1400091a2:	mov    ecx,0x80004005
   1400091a7:	call   0x1400015c0
   1400091ac:	int3   
   1400091ad:	mov    rax,QWORD PTR [rax]
   1400091b0:	mov    rcx,r11
   1400091b3:	call   QWORD PTR [rax+0x18]
   1400091b6:	add    rax,0x18
   1400091ba:	mov    QWORD PTR [rbp+0x30],rax
   1400091be:	mov    rcx,QWORD PTR [rbp+0x38]
   1400091c2:	mov    rax,QWORD PTR [rcx]
   1400091c5:	xor    r9d,r9d
   1400091c8:	mov    r8d,0x200
   1400091ce:	lea    rdx,[rbp+0x50]
   1400091d2:	call   QWORD PTR [rax+0x18]
   1400091d5:	test   eax,eax
   1400091d7:	je     0x14000920a
   1400091d9:	lea    rax,[rbp+0x50]
   1400091dd:	mov    QWORD PTR [rsp+0x28],rax
   1400091e2:	mov    DWORD PTR [rsp+0x20],0x53
   1400091ea:	lea    r9,[rip+0x29477]        # 0x140032668
   1400091f1:	lea    r8,[rip+0x291c0]        # 0x1400323b8
   1400091f8:	lea    rdx,[rip+0x29199]        # 0x140032398
   1400091ff:	lea    rcx,[rbp+0x30]
   140009203:	call   0x140002e70
   140009208:	jmp    0x140009230
   14000920a:	mov    DWORD PTR [rsp+0x20],0x53
   140009212:	lea    r9,[rip+0x2944f]        # 0x140032668
   140009219:	lea    r8,[rip+0x29198]        # 0x1400323b8
   140009220:	lea    rdx,[rip+0x29159]        # 0x140032380
   140009227:	lea    rcx,[rbp+0x30]
   14000922b:	call   0x140002e70
   140009230:	xor    r8d,r8d
   140009233:	xor    edx,edx
   140009235:	mov    rbx,QWORD PTR [rbp+0x30]
   140009239:	mov    rcx,rbx
   14000923c:	call   0x140008508
   140009241:	nop
   140009242:	lea    rdx,[rbx-0x18]
   140009246:	or     eax,0xffffffff
   140009249:	lock xadd DWORD PTR [rdx+0x10],eax
   14000924e:	add    eax,0xffffffff
   140009251:	test   eax,eax
   140009253:	jg     0x14000925e
   140009255:	mov    rcx,QWORD PTR [rdx]
   140009258:	mov    rax,QWORD PTR [rcx]
   14000925b:	call   QWORD PTR [rax+0x8]
   14000925e:	mov    rcx,QWORD PTR [rbp+0x38]
   140009262:	mov    rax,QWORD PTR [rcx]
   140009265:	mov    edx,0x1
   14000926a:	call   QWORD PTR [rax+0x8]
   14000926d:	nop
   14000926e:	lea    rax,[rip+0xfffffffffffffee3]        # 0x140009158
   140009275:	jmp    0x140009277
   140009277:	add    rsp,0x38
   14000927b:	pop    rbp
   14000927c:	pop    rbx
   14000927d:	ret    
   14000927e:	int3   
   14000927f:	int3   
   140009280:	rex push rbp
   140009282:	sub    rsp,0x20
   140009286:	mov    rbp,rdx
   140009289:	lea    rcx,[rbp+0x30]
   14000928d:	call   0x140001dc0
   140009292:	add    rsp,0x20
   140009296:	pop    rbp
   140009297:	ret    
   140009298:	mov    QWORD PTR [rsp+0x8],rbx
   14000929d:	push   rdi
   14000929e:	sub    rsp,0x20
   1400092a2:	mov    ebx,edx
   1400092a4:	mov    rdi,rcx
   1400092a7:	call   0x140009110
   1400092ac:	test   bl,0x1
   1400092af:	je     0x1400092b9
   1400092b1:	mov    rcx,rdi
   1400092b4:	call   0x140006160
   1400092b9:	mov    rax,rdi
   1400092bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400092c1:	add    rsp,0x20
   1400092c5:	pop    rdi
   1400092c6:	ret    
   1400092c7:	int3   
   1400092c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400092cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400092d2:	push   rdi
   1400092d3:	sub    rsp,0x20
   1400092d7:	test   rdx,rdx
   1400092da:	mov    rsi,r8
   1400092dd:	mov    rdi,rdx
   1400092e0:	mov    rbx,rcx
   1400092e3:	jns    0x1400092eb
   1400092e5:	call   0x140006408
   1400092ea:	int3   
   1400092eb:	cmp    rdx,QWORD PTR [rcx+0x10]
   1400092ef:	jl     0x140009322
   1400092f1:	mov    rax,QWORD PTR [rcx+0x18]
   1400092f5:	cmp    rdx,rax
   1400092f8:	jl     0x140009312
   1400092fa:	mov    rcx,QWORD PTR [rcx+0x8]
   1400092fe:	cmp    r8,rcx
   140009301:	jb     0x140009312
   140009303:	lea    rax,[rcx+rax*8]
   140009307:	cmp    r8,rax
   14000930a:	jae    0x140009312
   14000930c:	call   0x140006408
   140009311:	int3   
   140009312:	add    rdx,0x1
   140009316:	or     r8,0xffffffffffffffff
   14000931a:	mov    rcx,rbx
   14000931d:	call   0x140008f5c
   140009322:	mov    rax,QWORD PTR [rbx+0x8]
   140009326:	mov    rdx,rsi
   140009329:	lea    rcx,[rax+rdi*8]
   14000932d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009332:	mov    rsi,QWORD PTR [rsp+0x38]
   140009337:	add    rsp,0x20
   14000933b:	pop    rdi
   14000933c:	jmp    0x140001750
   140009341:	int3   
   140009342:	int3   
   140009343:	int3   
   140009344:	mov    QWORD PTR [rsp+0x8],rbx
   140009349:	mov    QWORD PTR [rsp+0x10],rsi
   14000934e:	push   rdi
   14000934f:	sub    rsp,0x20
   140009353:	mov    eax,DWORD PTR [rdx+0x20]
   140009356:	mov    rsi,rdx
   140009359:	mov    rdi,rcx
   14000935c:	not    eax
   14000935e:	test   al,0x1
   140009360:	je     0x140009392
   140009362:	mov    rdx,QWORD PTR [rcx+0x10]
   140009366:	mov    rcx,rsi
   140009369:	call   0x1400150f0
   14000936e:	xor    ebx,ebx
   140009370:	cmp    QWORD PTR [rdi+0x10],rbx
   140009374:	jle    0x1400093cb
   140009376:	mov    rax,QWORD PTR [rdi+0x8]
   14000937a:	mov    rcx,rsi
   14000937d:	lea    rdx,[rax+rbx*8]
   140009381:	call   0x140006774
   140009386:	add    rbx,0x1
   14000938a:	cmp    rbx,QWORD PTR [rdi+0x10]
   14000938e:	jl     0x140009376
   140009390:	jmp    0x1400093cb
   140009392:	mov    rcx,rdx
   140009395:	call   0x140015240
   14000939a:	or     r8,0xffffffffffffffff
   14000939e:	mov    rcx,rdi
   1400093a1:	mov    rdx,rax
   1400093a4:	call   0x140008f5c
   1400093a9:	xor    ebx,ebx
   1400093ab:	cmp    QWORD PTR [rdi+0x10],rbx
   1400093af:	jle    0x1400093cb
   1400093b1:	mov    rax,QWORD PTR [rdi+0x8]
   1400093b5:	mov    rcx,rsi
   1400093b8:	lea    rdx,[rax+rbx*8]
   1400093bc:	call   0x1400068e8
   1400093c1:	add    rbx,0x1
   1400093c5:	cmp    rbx,QWORD PTR [rdi+0x10]
   1400093c9:	jl     0x1400093b1
   1400093cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400093d5:	add    rsp,0x20
   1400093d9:	pop    rdi
   1400093da:	ret    
   1400093db:	int3   
   1400093dc:	rex push rbx
   1400093de:	sub    rsp,0x20
   1400093e2:	mov    edx,DWORD PTR [rcx+0xf0]
   1400093e8:	test   edx,edx
   1400093ea:	je     0x140009405
   1400093ec:	cmp    edx,0x3f107
   1400093f2:	je     0x14000944c
   1400093f4:	mov    rax,QWORD PTR [rcx]
   1400093f7:	mov    r8d,0x1
   1400093fd:	call   QWORD PTR [rax+0x158]
   140009403:	jmp    0x14000944c
   140009405:	call   0x140009454
   14000940a:	test   rax,rax
   14000940d:	je     0x140009420
   14000940f:	mov    rdx,QWORD PTR [rax]
   140009412:	mov    rcx,rax
   140009415:	call   QWORD PTR [rdx+0xe8]
   14000941b:	mov    rbx,rax
   14000941e:	jmp    0x140009422
   140009420:	xor    ebx,ebx
   140009422:	test   rbx,rbx
   140009425:	jne    0x14000942d
   140009427:	call   0x140006408
   14000942c:	int3   
   14000942d:	mov    rax,QWORD PTR [rbx]
   140009430:	mov    rcx,rbx
   140009433:	call   QWORD PTR [rax+0x240]
   140009439:	mov    rcx,rbx
   14000943c:	test   eax,eax
   14000943e:	jne    0x140009447
   140009440:	call   0x140016df8
   140009445:	jmp    0x14000944c
   140009447:	call   0x140016ed8
   14000944c:	add    rsp,0x20
   140009450:	pop    rbx
   140009451:	ret    
   140009452:	int3   
   140009453:	int3   
   140009454:	sub    rsp,0x28
   140009458:	call   0x140013220
   14000945d:	mov    rax,QWORD PTR [rax+0x8]
   140009461:	add    rsp,0x28
   140009465:	ret    
   140009466:	int3   
   140009467:	int3   
   140009468:	sub    rsp,0x28
   14000946c:	call   0x140012910
   140009471:	add    rax,0x58
   140009475:	add    rsp,0x28
   140009479:	ret    
   14000947a:	int3   
   14000947b:	int3   
   14000947c:	sub    rsp,0x28
   140009480:	cmp    DWORD PTR [rdx+0x8],0x1
   140009484:	mov    rax,rdx
   140009487:	jne    0x14000948f
   140009489:	or     rax,0xffffffffffffffff
   14000948d:	jmp    0x1400094a2
   14000948f:	cmp    DWORD PTR [rdx+0x8],0xf
   140009493:	jne    0x1400094a0
   140009495:	mov    rcx,QWORD PTR [rax]
   140009498:	xor    edx,edx
   14000949a:	call   QWORD PTR [rip+0x28260]        # 0x140031700
   1400094a0:	xor    eax,eax
   1400094a2:	add    rsp,0x28
   1400094a6:	ret    
   1400094a7:	int3   
   1400094a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400094ad:	push   rdi
   1400094ae:	sub    rsp,0x20
   1400094b2:	mov    rbx,rdx
   1400094b5:	mov    rdi,rcx
   1400094b8:	call   0x140013220
   1400094bd:	mov    rcx,QWORD PTR [rax+0x8]
   1400094c1:	test   rcx,rcx
   1400094c4:	je     0x1400094d7
   1400094c6:	mov    rax,QWORD PTR [rcx]
   1400094c9:	mov    r8,rbx
   1400094cc:	mov    rdx,rdi
   1400094cf:	call   QWORD PTR [rax+0xd8]
   1400094d5:	jmp    0x1400094e2
   1400094d7:	mov    rdx,rbx
   1400094da:	mov    rcx,rdi
   1400094dd:	call   0x14000947c
   1400094e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094e7:	add    rsp,0x20
   1400094eb:	pop    rdi
   1400094ec:	ret    
   1400094ed:	int3   
   1400094ee:	int3   
   1400094ef:	int3   
   1400094f0:	rex push rbx
   1400094f2:	sub    rsp,0x20
   1400094f6:	and    QWORD PTR [rcx+0x40],0x0
   1400094fb:	and    QWORD PTR [rcx+0x48],0x0
   140009500:	and    QWORD PTR [rcx+0x58],0x0
   140009505:	and    DWORD PTR [rcx+0x60],0x0
   140009509:	mov    rbx,rcx
   14000950c:	call   0x140012910
   140009511:	and    DWORD PTR [rax+0x60],0x0
   140009515:	and    DWORD PTR [rax+0x90],0x0
   14000951c:	lea    rcx,[rax+0x88]
   140009523:	call   QWORD PTR [rip+0x281cf]        # 0x1400316f8
   140009529:	and    QWORD PTR [rbx+0x80],0x0
   140009531:	and    QWORD PTR [rbx+0x78],0x0
   140009536:	mov    DWORD PTR [rbx+0x50],0x1
   14000953d:	add    rsp,0x20
   140009541:	pop    rbx
   140009542:	ret    
   140009543:	int3   
   140009544:	mov    QWORD PTR [rsp+0x8],rcx
   140009549:	push   rbx
   14000954a:	sub    rsp,0x30
   14000954e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009557:	mov    rbx,rcx
   14000955a:	lea    rax,[rip+0x291b7]        # 0x140032718
   140009561:	mov    QWORD PTR [rcx],rax
   140009564:	mov    rcx,QWORD PTR [rcx+0x58]
   140009568:	test   rcx,rcx
   14000956b:	je     0x140009573
   14000956d:	call   QWORD PTR [rip+0x27ecd]        # 0x140031440
   140009573:	call   0x140013220
   140009578:	cmp    QWORD PTR [rax+0x8],rbx
   14000957c:	jne    0x140009583
   14000957e:	and    QWORD PTR [rax+0x8],0x0
   140009583:	mov    rcx,rbx
   140009586:	add    rsp,0x30
   14000958a:	pop    rbx
   14000958b:	jmp    0x140008a28
   140009590:	int3   
   140009591:	int3   
   140009592:	int3   
   140009593:	int3   
   140009594:	rex push rbp
   140009596:	sub    rsp,0x20
   14000959a:	mov    rbp,rdx
   14000959d:	mov    rcx,QWORD PTR [rbp+0x40]
   1400095a1:	call   0x140008a28
   1400095a6:	add    rsp,0x20
   1400095aa:	pop    rbp
   1400095ab:	ret    
   1400095ac:	sub    rsp,0x28
   1400095b0:	cmp    DWORD PTR [rcx+0x50],0x0
   1400095b4:	je     0x1400095c1
   1400095b6:	mov    rax,QWORD PTR [rcx]
   1400095b9:	mov    edx,0x1
   1400095be:	call   QWORD PTR [rax+0x8]
   1400095c1:	add    rsp,0x28
   1400095c5:	ret    
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	mov    rax,rsp
   1400095cb:	mov    QWORD PTR [rax+0x8],rbx
   1400095cf:	mov    QWORD PTR [rax+0x10],rbp
   1400095d3:	mov    QWORD PTR [rax+0x18],rsi
   1400095d7:	mov    QWORD PTR [rax+0x20],rdi
   1400095db:	push   r12
   1400095dd:	sub    rsp,0x30
   1400095e1:	mov    rbx,rcx
   1400095e4:	call   0x140012910
   1400095e9:	mov    edi,0x1
   1400095ee:	mov    r12,rax
   1400095f1:	xor    esi,esi
   1400095f3:	jmp    0x140009628
   1400095f5:	and    DWORD PTR [rsp+0x20],0x0
   1400095fa:	lea    rcx,[r12+0x58]
   1400095ff:	xor    r9d,r9d
   140009602:	xor    r8d,r8d
   140009605:	xor    edx,edx
   140009607:	call   QWORD PTR [rip+0x280e3]        # 0x1400316f0
   14000960d:	test   eax,eax
   14000960f:	jne    0x14000962c
   140009611:	mov    rax,QWORD PTR [rbx]
   140009614:	mov    edx,esi
   140009616:	mov    rcx,rbx
   140009619:	call   QWORD PTR [rax+0xc0]
   14000961f:	add    esi,0x1
   140009622:	test   eax,eax
   140009624:	jne    0x140009628
   140009626:	xor    edi,edi
   140009628:	test   edi,edi
   14000962a:	jne    0x1400095f5
   14000962c:	mov    rax,QWORD PTR [rbx]
   14000962f:	mov    rcx,rbx
   140009632:	call   QWORD PTR [rax+0xb8]
   140009638:	mov    rcx,rbx
   14000963b:	test   eax,eax
   14000963d:	mov    rax,QWORD PTR [rbx]
   140009640:	je     0x140009676
   140009642:	lea    rdx,[r12+0x58]
   140009647:	call   QWORD PTR [rax+0xc8]
   14000964d:	test   eax,eax
   14000964f:	je     0x140009658
   140009651:	mov    edi,0x1
   140009656:	xor    esi,esi
   140009658:	and    DWORD PTR [rsp+0x20],0x0
   14000965d:	lea    rcx,[r12+0x58]
   140009662:	xor    r9d,r9d
   140009665:	xor    r8d,r8d
   140009668:	xor    edx,edx
   14000966a:	call   QWORD PTR [rip+0x28080]        # 0x1400316f0
   140009670:	test   eax,eax
   140009672:	jne    0x14000962c
   140009674:	jmp    0x140009628
   140009676:	mov    rbx,QWORD PTR [rsp+0x40]
   14000967b:	mov    rbp,QWORD PTR [rsp+0x48]
   140009680:	mov    rsi,QWORD PTR [rsp+0x50]
   140009685:	mov    rdi,QWORD PTR [rsp+0x58]
   14000968a:	add    rsp,0x30
   14000968e:	pop    r12
   140009690:	rex.W jmp QWORD PTR [rax+0xd0]
   140009697:	int3   
   140009698:	sub    rsp,0x28
   14000969c:	call   0x140012910
   1400096a1:	mov    eax,DWORD PTR [rax+0x68]
   1400096a4:	add    rsp,0x28
   1400096a8:	ret    
   1400096a9:	int3   
   1400096aa:	int3   
   1400096ab:	int3   
   1400096ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400096b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400096b6:	push   rdi
   1400096b7:	sub    rsp,0x20
   1400096bb:	mov    rax,QWORD PTR [rcx]
   1400096be:	mov    rbx,rdx
   1400096c1:	mov    rsi,rcx
   1400096c4:	call   QWORD PTR [rax+0x50]
   1400096c7:	cmp    QWORD PTR [rax],0x0
   1400096cb:	mov    rdi,rax
   1400096ce:	je     0x140009733
   1400096d0:	mov    edx,DWORD PTR [rbx+0x8]
   1400096d3:	mov    rcx,QWORD PTR [rax+0x8]
   1400096d7:	xor    r9d,r9d
   1400096da:	xor    r8d,r8d
   1400096dd:	cmp    edx,0xc000
   1400096e3:	jae    0x14000971d
   1400096e5:	call   0x14000b144
   1400096ea:	test   rax,rax
   1400096ed:	mov    r11,rax
   1400096f0:	je     0x14000972f
   1400096f2:	mov    r8,QWORD PTR [rbx+0x18]
   1400096f6:	mov    rdx,QWORD PTR [rbx+0x10]
   1400096fa:	mov    rcx,rsi
   1400096fd:	call   QWORD PTR [r11+0x18]
   140009701:	mov    eax,0x1
   140009706:	jmp    0x140009735
   140009708:	mov    rcx,QWORD PTR [r11+0x10]
   14000970c:	mov    eax,DWORD PTR [rbx+0x8]
   14000970f:	cmp    DWORD PTR [rcx],eax
   140009711:	je     0x1400096f2
   140009713:	xor    r9d,r9d
   140009716:	lea    rcx,[r11+0x20]
   14000971a:	xor    r8d,r8d
   14000971d:	mov    edx,0xc000
   140009722:	call   0x14000b144
   140009727:	test   rax,rax
   14000972a:	mov    r11,rax
   14000972d:	jne    0x140009708
   14000972f:	call   QWORD PTR [rdi]
   140009731:	jmp    0x1400096c7
   140009733:	xor    eax,eax
   140009735:	mov    rbx,QWORD PTR [rsp+0x30]
   14000973a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000973f:	add    rsp,0x20
   140009743:	pop    rdi
   140009744:	ret    
   140009745:	int3   
   140009746:	int3   
   140009747:	int3   
   140009748:	mov    rcx,rdx
   14000974b:	mov    rdx,r8
   14000974e:	jmp    0x14000947c
   140009753:	int3   
   140009754:	lea    rax,[rip+0x28f55]        # 0x1400326b0
   14000975b:	ret    
   14000975c:	mov    QWORD PTR [rsp+0x8],rbx
   140009761:	push   rdi
   140009762:	sub    rsp,0x20
   140009766:	mov    rdi,rcx
   140009769:	call   0x140013220
   14000976e:	mov    rcx,QWORD PTR [rax+0x8]
   140009772:	test   rcx,rcx
   140009775:	je     0x140009790
   140009777:	cmp    QWORD PTR [rdi],0x0
   14000977b:	jne    0x140009790
   14000977d:	mov    rdx,rdi
   140009780:	call   0x1400096ac
   140009785:	test   eax,eax
   140009787:	je     0x140009790
   140009789:	mov    eax,0x1
   14000978e:	jmp    0x1400097f4
   140009790:	call   0x140013220
   140009795:	mov    rcx,QWORD PTR [rax+0x8]
   140009799:	test   rcx,rcx
   14000979c:	je     0x1400097ac
   14000979e:	mov    rax,QWORD PTR [rcx]
   1400097a1:	call   QWORD PTR [rax+0xe8]
   1400097a7:	mov    rbx,rax
   1400097aa:	jmp    0x1400097ae
   1400097ac:	xor    ebx,ebx
   1400097ae:	test   rbx,rbx
   1400097b1:	jne    0x1400097b7
   1400097b3:	xor    ecx,ecx
   1400097b5:	jmp    0x1400097bb
   1400097b7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400097bb:	mov    rdx,rdi
   1400097be:	call   0x14000dea4
   1400097c3:	test   eax,eax
   1400097c5:	jne    0x140009789
   1400097c7:	test   rbx,rbx
   1400097ca:	je     0x1400097f2
   1400097cc:	mov    rcx,QWORD PTR [rdi]
   1400097cf:	call   0x14000d9cc
   1400097d4:	mov    rcx,rax
   1400097d7:	call   0x14000f39c
   1400097dc:	cmp    rax,rbx
   1400097df:	je     0x1400097f2
   1400097e1:	mov    rax,QWORD PTR [rbx]
   1400097e4:	mov    rdx,rdi
   1400097e7:	mov    rcx,rbx
   1400097ea:	call   QWORD PTR [rax+0x200]
   1400097f0:	jmp    0x1400097f4
   1400097f2:	xor    eax,eax
   1400097f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097f9:	add    rsp,0x20
   1400097fd:	pop    rdi
   1400097fe:	ret    
   1400097ff:	int3   
   140009800:	rex push rbx
   140009802:	sub    rsp,0x20
   140009806:	mov    rbx,rcx
   140009809:	call   0x140013220
   14000980e:	mov    rcx,QWORD PTR [rax+0x8]
   140009812:	test   rcx,rcx
   140009815:	je     0x140009825
   140009817:	mov    rax,QWORD PTR [rcx]
   14000981a:	mov    rdx,rbx
   14000981d:	call   QWORD PTR [rax+0xb0]
   140009823:	jmp    0x14000982d
   140009825:	mov    rcx,rbx
   140009828:	call   0x14000975c
   14000982d:	add    rsp,0x20
   140009831:	pop    rbx
   140009832:	ret    
   140009833:	int3   
   140009834:	rex push rbx
   140009836:	sub    rsp,0x20
   14000983a:	mov    eax,DWORD PTR [rcx+0x8]
   14000983d:	mov    rbx,rcx
   140009840:	cmp    eax,0x200
   140009845:	je     0x14000985c
   140009847:	cmp    eax,0xa0
   14000984c:	je     0x14000985c
   14000984e:	cmp    eax,0xf
   140009851:	je     0x14000988a
   140009853:	cmp    eax,0x118
   140009858:	je     0x14000988a
   14000985a:	jmp    0x14000989f
   14000985c:	call   0x140012910
   140009861:	mov    rcx,QWORD PTR [rbx+0x24]
   140009865:	cmp    DWORD PTR [rax+0x88],ecx
   14000986b:	mov    r11,rax
   14000986e:	jne    0x14000988e
   140009870:	mov    rdx,rcx
   140009873:	shr    rdx,0x20
   140009877:	cmp    DWORD PTR [rax+0x8c],edx
   14000987d:	jne    0x14000988e
   14000987f:	mov    edx,DWORD PTR [rax+0x90]
   140009885:	cmp    DWORD PTR [rbx+0x8],edx
   140009888:	jne    0x14000988e
   14000988a:	xor    eax,eax
   14000988c:	jmp    0x1400098a4
   14000988e:	mov    QWORD PTR [rax+0x88],rcx
   140009895:	mov    eax,DWORD PTR [rbx+0x8]
   140009898:	mov    DWORD PTR [r11+0x90],eax
   14000989f:	mov    eax,0x1
   1400098a4:	add    rsp,0x20
   1400098a8:	pop    rbx
   1400098a9:	ret    
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400098b1:	push   rdi
   1400098b2:	sub    rsp,0x20
   1400098b6:	mov    ebx,edx
   1400098b8:	mov    rdi,rcx
   1400098bb:	call   0x140009544
   1400098c0:	test   bl,0x1
   1400098c3:	je     0x1400098cd
   1400098c5:	mov    rcx,rdi
   1400098c8:	call   0x140006160
   1400098cd:	mov    rax,rdi
   1400098d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098d5:	add    rsp,0x20
   1400098d9:	pop    rdi
   1400098da:	ret    
   1400098db:	int3   
   1400098dc:	mov    QWORD PTR [rsp+0x8],rcx
   1400098e1:	push   rbx
   1400098e2:	sub    rsp,0x30
   1400098e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400098ef:	mov    rbx,rcx
   1400098f2:	call   0x1400089f0
   1400098f7:	nop
   1400098f8:	lea    rax,[rip+0x28e19]        # 0x140032718
   1400098ff:	mov    QWORD PTR [rbx],rax
   140009902:	and    QWORD PTR [rbx+0x68],0x0
   140009907:	and    QWORD PTR [rbx+0x70],0x0
   14000990c:	mov    rcx,rbx
   14000990f:	call   0x1400094f0
   140009914:	nop
   140009915:	mov    rax,rbx
   140009918:	add    rsp,0x30
   14000991c:	pop    rbx
   14000991d:	ret    
   14000991e:	int3   
   14000991f:	int3   
   140009920:	int3   
   140009921:	int3   
   140009922:	int3   
   140009923:	int3   
   140009924:	int3   
   140009925:	int3   
   140009926:	int3   
   140009927:	int3   
   140009928:	int3   
   140009929:	int3   
   14000992a:	int3   
   14000992b:	int3   
   14000992c:	rex push rbp
   14000992e:	sub    rsp,0x20
   140009932:	mov    rbp,rdx
   140009935:	mov    rcx,QWORD PTR [rbp+0x40]
   140009939:	call   0x140008a28
   14000993e:	add    rsp,0x20
   140009942:	pop    rbp
   140009943:	ret    
   140009944:	mov    rcx,rdx
   140009947:	jmp    0x140009834
   14000994c:	mov    rcx,rdx
   14000994f:	jmp    0x14000975c
   140009954:	sub    rsp,0x28
   140009958:	mov    rax,QWORD PTR [rcx+0x48]
   14000995c:	test   rax,rax
   14000995f:	jne    0x140009978
   140009961:	mov    rax,QWORD PTR [rcx+0x40]
   140009965:	test   rax,rax
   140009968:	jne    0x140009978
   14000996a:	call   QWORD PTR [rip+0x27d58]        # 0x1400316c8
   140009970:	mov    rcx,rax
   140009973:	call   0x14000d9cc
   140009978:	add    rsp,0x28
   14000997c:	ret    
   14000997d:	int3   
   14000997e:	int3   
   14000997f:	int3   
   140009980:	mov    QWORD PTR [rsp+0x8],rbx
   140009985:	push   rdi
   140009986:	sub    rsp,0x20
   14000998a:	call   0x140012910
   14000998f:	xor    r9d,r9d
   140009992:	xor    r8d,r8d
   140009995:	lea    rcx,[rax+0x58]
   140009999:	xor    edx,edx
   14000999b:	mov    rdi,rax
   14000999e:	call   QWORD PTR [rip+0x27d0c]        # 0x1400316b0
   1400099a4:	test   eax,eax
   1400099a6:	je     0x1400099d7
   1400099a8:	cmp    DWORD PTR [rdi+0x60],0x36a
   1400099af:	je     0x1400099d2
   1400099b1:	lea    rcx,[rdi+0x58]
   1400099b5:	call   0x140009800
   1400099ba:	test   eax,eax
   1400099bc:	jne    0x1400099d2
   1400099be:	lea    rcx,[rdi+0x58]
   1400099c2:	call   QWORD PTR [rip+0x27cf0]        # 0x1400316b8
   1400099c8:	lea    rcx,[rdi+0x58]
   1400099cc:	call   QWORD PTR [rip+0x27cee]        # 0x1400316c0
   1400099d2:	mov    eax,0x1
   1400099d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099dc:	add    rsp,0x20
   1400099e0:	pop    rdi
   1400099e1:	ret    
   1400099e2:	int3   
   1400099e3:	int3   
   1400099e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400099e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400099ee:	push   rdi
   1400099ef:	sub    rsp,0x20
   1400099f3:	mov    rdi,r8
   1400099f6:	mov    rsi,rdx
   1400099f9:	mov    ebx,ecx
   1400099fb:	call   0x1400131d0
   140009a00:	cmp    BYTE PTR [rax+0x28],0x0
   140009a04:	jne    0x140009a32
   140009a06:	test   ebx,ebx
   140009a08:	jns    0x140009a12
   140009a0a:	cmp    ebx,0x8001
   140009a10:	jne    0x140009a32
   140009a12:	call   0x140013220
   140009a17:	mov    rcx,QWORD PTR [rax+0x8]
   140009a1b:	test   rcx,rcx
   140009a1e:	je     0x140009a32
   140009a20:	mov    rax,QWORD PTR [rcx]
   140009a23:	mov    r8,rdi
   140009a26:	mov    edx,ebx
   140009a28:	call   QWORD PTR [rax+0xe0]
   140009a2e:	cdqe   
   140009a30:	jmp    0x140009a62
   140009a32:	lea    rdx,[rip+0xffffffffffffc9f3]        # 0x14000642c
   140009a39:	lea    rcx,[rip+0x3b640]        # 0x140045080
   140009a40:	call   0x140014348
   140009a45:	test   rax,rax
   140009a48:	jne    0x140009a50
   140009a4a:	call   0x140006408
   140009a4f:	int3   
   140009a50:	mov    rcx,QWORD PTR [rax+0x50]
   140009a54:	mov    r9,rdi
   140009a57:	mov    r8,rsi
   140009a5a:	mov    edx,ebx
   140009a5c:	call   QWORD PTR [rip+0x27c46]        # 0x1400316a8
   140009a62:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a67:	mov    rsi,QWORD PTR [rsp+0x38]
   140009a6c:	add    rsp,0x20
   140009a70:	pop    rdi
   140009a71:	ret    
   140009a72:	int3   
   140009a73:	int3   
   140009a74:	mov    QWORD PTR [rsp+0x8],rbx
   140009a79:	mov    QWORD PTR [rsp+0x10],rbp
   140009a7e:	mov    QWORD PTR [rsp+0x18],rsi
   140009a83:	push   rdi
   140009a84:	sub    rsp,0x50
   140009a88:	test   r8,r8
   140009a8b:	mov    rdi,r8
   140009a8e:	mov    ebx,edx
   140009a90:	mov    rbp,rcx
   140009a93:	je     0x140009bfa
   140009a99:	test   edx,edx
   140009a9b:	je     0x140009b3d
   140009aa1:	cmp    edx,0x2
   140009aa4:	jne    0x140009bfa
   140009aaa:	mov    rcx,QWORD PTR [r8]
   140009aad:	call   0x14000d9cc
   140009ab2:	test   rax,rax
   140009ab5:	je     0x140009b3d
   140009abb:	mov    rcx,rax
   140009abe:	call   0x14000e6b8
   140009ac3:	test   rax,rax
   140009ac6:	mov    rsi,rax
   140009ac9:	je     0x140009b3d
   140009acb:	mov    rcx,rax
   140009ace:	call   0x14000b6ac
   140009ad3:	test   eax,eax
   140009ad5:	je     0x140009b3d
   140009ad7:	cmp    DWORD PTR [rsi+0xc4],0x0
   140009ade:	je     0x140009b3d
   140009ae0:	call   0x140013220
   140009ae5:	mov    rcx,QWORD PTR [rax+0x8]
   140009ae9:	test   rcx,rcx
   140009aec:	je     0x140009af9
   140009aee:	mov    rax,QWORD PTR [rcx]
   140009af1:	call   QWORD PTR [rax+0xe8]
   140009af7:	jmp    0x140009afb
   140009af9:	xor    eax,eax
   140009afb:	cmp    QWORD PTR [rbp+0x40],0x0
   140009b00:	je     0x140009b3d
   140009b02:	cmp    DWORD PTR [rdi+0x8],0x100
   140009b09:	jne    0x140009b12
   140009b0b:	cmp    QWORD PTR [rdi+0x10],0xd
   140009b10:	je     0x140009b1b
   140009b12:	cmp    DWORD PTR [rdi+0x8],0x202
   140009b19:	jne    0x140009b3d
   140009b1b:	mov    rcx,QWORD PTR [rax+0x40]
   140009b1f:	xor    r9d,r9d
   140009b22:	mov    edx,0x111
   140009b27:	mov    r8d,0xe146
   140009b2d:	call   QWORD PTR [rip+0x27c95]        # 0x1400317c8
   140009b33:	mov    eax,0x1
   140009b38:	jmp    0x140009bfc
   140009b3d:	call   0x140013220
   140009b42:	mov    rcx,QWORD PTR [rax+0x8]
   140009b46:	test   rcx,rcx
   140009b49:	je     0x140009b54
   140009b4b:	mov    rax,QWORD PTR [rcx]
   140009b4e:	call   QWORD PTR [rax+0xe8]
   140009b54:	test   ebx,ebx
   140009b56:	jne    0x140009bfa
   140009b5c:	cmp    QWORD PTR [rbp+0x48],0x0
   140009b61:	je     0x140009bfa
   140009b67:	cmp    DWORD PTR [rdi+0x8],0x100
   140009b6e:	jb     0x140009bfa
   140009b74:	cmp    DWORD PTR [rdi+0x8],0x109
   140009b7b:	ja     0x140009bfa
   140009b7d:	lea    rdx,[rip+0xffffffffffffc8a8]        # 0x14000642c
   140009b84:	lea    rcx,[rip+0x3b4f5]        # 0x140045080
   140009b8b:	call   0x140014348
   140009b90:	test   rax,rax
   140009b93:	mov    rbx,rax
   140009b96:	jne    0x140009b9e
   140009b98:	call   0x140006408
   140009b9d:	int3   
   140009b9e:	cmp    DWORD PTR [rax+0x1a0],0x0
   140009ba5:	jne    0x140009bfa
   140009ba7:	lea    rcx,[rsp+0x20]
   140009bac:	mov    rdx,rdi
   140009baf:	mov    r8d,0x30
   140009bb5:	mov    DWORD PTR [rax+0x1a0],0x1
   140009bbf:	call   0x14001baf0
   140009bc4:	mov    rcx,QWORD PTR [rbp+0x48]
   140009bc8:	call   0x14001334c
   140009bcd:	test   eax,eax
   140009bcf:	je     0x140009bf3
   140009bd1:	mov    rax,QWORD PTR [rbp+0x0]
   140009bd5:	lea    rdx,[rsp+0x20]
   140009bda:	mov    rcx,rbp
   140009bdd:	call   QWORD PTR [rax+0xb0]
   140009be3:	test   eax,eax
   140009be5:	je     0x140009bf3
   140009be7:	and    DWORD PTR [rbx+0x1a0],0x0
   140009bee:	jmp    0x140009b33
   140009bf3:	and    DWORD PTR [rbx+0x1a0],0x0
   140009bfa:	xor    eax,eax
   140009bfc:	mov    rbx,QWORD PTR [rsp+0x60]
   140009c01:	mov    rbp,QWORD PTR [rsp+0x68]
   140009c06:	mov    rsi,QWORD PTR [rsp+0x70]
   140009c0b:	add    rsp,0x50
   140009c0f:	pop    rdi
   140009c10:	ret    
   140009c11:	int3   
   140009c12:	int3   
   140009c13:	int3   
   140009c14:	jmp    0x140009980
   140009c19:	int3   
   140009c1a:	int3   
   140009c1b:	int3   
   140009c1c:	rex push rbx
   140009c1e:	sub    rsp,0x20
   140009c22:	call   0x1400131d0
   140009c27:	cmp    BYTE PTR [rax+0x28],0x0
   140009c2b:	jne    0x140009c55
   140009c2d:	call   0x140012910
   140009c32:	mov    rbx,rax
   140009c35:	call   QWORD PTR [rip+0x27775]        # 0x1400313b0
   140009c3b:	lea    rdx,[rip+0xfffffffffffffda2]        # 0x1400099e4
   140009c42:	xor    r8d,r8d
   140009c45:	or     ecx,0xffffffff
   140009c48:	mov    r9d,eax
   140009c4b:	call   QWORD PTR [rip+0x27a4f]        # 0x1400316a0
   140009c51:	mov    QWORD PTR [rbx+0x50],rax
   140009c55:	add    rsp,0x20
   140009c59:	pop    rbx
   140009c5a:	ret    
   140009c5b:	int3   
   140009c5c:	mov    rax,rsp
   140009c5f:	mov    QWORD PTR [rax+0x8],rbx
   140009c63:	mov    QWORD PTR [rax+0x10],rbp
   140009c67:	mov    QWORD PTR [rax+0x18],rsi
   140009c6b:	mov    QWORD PTR [rax+0x20],rdi
   140009c6f:	push   r12
   140009c71:	sub    rsp,0x30
   140009c75:	xor    ebx,ebx
   140009c77:	mov    r12d,edx
   140009c7a:	cmp    edx,ebx
   140009c7c:	jg     0x140009d97
   140009c82:	mov    rbp,QWORD PTR [rcx+0x40]
   140009c86:	lea    esi,[rbx+0x1]
   140009c89:	cmp    rbp,rbx
   140009c8c:	je     0x140009cd7
   140009c8e:	mov    rcx,QWORD PTR [rbp+0x40]
   140009c92:	cmp    rcx,rbx
   140009c95:	je     0x140009cd7
   140009c97:	call   QWORD PTR [rip+0x27a33]        # 0x1400316d0
   140009c9d:	cmp    eax,ebx
   140009c9f:	je     0x140009cd7
   140009ca1:	mov    rdx,QWORD PTR [rbp+0x40]
   140009ca5:	mov    r9,rsi
   140009ca8:	mov    r8d,0x363
   140009cae:	mov    rcx,rbp
   140009cb1:	mov    QWORD PTR [rsp+0x20],rbx
   140009cb6:	call   0x14000e290
   140009cbb:	mov    rcx,QWORD PTR [rbp+0x40]
   140009cbf:	xor    r9d,r9d
   140009cc2:	mov    r8,rsi
   140009cc5:	mov    edx,0x363
   140009cca:	mov    DWORD PTR [rsp+0x28],esi
   140009cce:	mov    DWORD PTR [rsp+0x20],esi
   140009cd2:	call   0x14000e70c
   140009cd7:	call   0x1400131d0
   140009cdc:	lea    rdx,[rip+0xffffffffffffd685]        # 0x140007368
   140009ce3:	lea    rcx,[rax+0xc0]
   140009cea:	call   0x140014348
   140009cef:	cmp    rax,rbx
   140009cf2:	jne    0x140009cfa
   140009cf4:	call   0x140006408
   140009cf9:	int3   
   140009cfa:	mov    rdi,QWORD PTR [rax+0x10]
   140009cfe:	jmp    0x140009d8c
   140009d03:	cmp    QWORD PTR [rdi+0x40],rbx
   140009d07:	je     0x140009d85
   140009d09:	cmp    rdi,rbp
   140009d0c:	je     0x140009d85
   140009d0e:	cmp    DWORD PTR [rdi+0x120],ebx
   140009d14:	jne    0x140009d20
   140009d16:	xor    edx,edx
   140009d18:	mov    rcx,rdi
   140009d1b:	call   0x14001331c
   140009d20:	mov    rcx,QWORD PTR [rdi+0x40]
   140009d24:	call   QWORD PTR [rip+0x279a6]        # 0x1400316d0
   140009d2a:	cmp    eax,ebx
   140009d2c:	jne    0x140009d36
   140009d2e:	cmp    DWORD PTR [rdi+0x120],ebx
   140009d34:	jl     0x140009d6c
   140009d36:	mov    rdx,QWORD PTR [rdi+0x40]
   140009d3a:	mov    r9,rsi
   140009d3d:	mov    r8d,0x363
   140009d43:	mov    rcx,rdi
   140009d46:	mov    QWORD PTR [rsp+0x20],rbx
   140009d4b:	call   0x14000e290
   140009d50:	mov    rcx,QWORD PTR [rdi+0x40]
   140009d54:	xor    r9d,r9d
   140009d57:	mov    r8,rsi
   140009d5a:	mov    edx,0x363
   140009d5f:	mov    DWORD PTR [rsp+0x28],esi
   140009d63:	mov    DWORD PTR [rsp+0x20],esi
   140009d67:	call   0x14000e70c
   140009d6c:	mov    edx,DWORD PTR [rdi+0x120]
   140009d72:	cmp    edx,ebx
   140009d74:	jle    0x140009d7e
   140009d76:	mov    rcx,rdi
   140009d79:	call   0x14001331c
   140009d7e:	or     DWORD PTR [rdi+0x120],0xffffffff
   140009d85:	mov    rdi,QWORD PTR [rdi+0xc8]
   140009d8c:	cmp    rdi,rbx
   140009d8f:	jne    0x140009d03
   140009d95:	jmp    0x140009dce
   140009d97:	call   0x1400131d0
   140009d9c:	lea    rdx,[rip+0xffffffffffffd5c5]        # 0x140007368
   140009da3:	lea    rcx,[rax+0xc0]
   140009daa:	call   0x140014348
   140009daf:	cmp    rax,rbx
   140009db2:	jne    0x140009dba
   140009db4:	call   0x140006408
   140009db9:	int3   
   140009dba:	cmp    DWORD PTR [rax+0x20],ebx
   140009dbd:	jne    0x140009dce
   140009dbf:	call   0x140016f20
   140009dc4:	mov    ecx,0x1
   140009dc9:	call   0x1400172e4
   140009dce:	mov    rbp,QWORD PTR [rsp+0x48]
   140009dd3:	mov    rsi,QWORD PTR [rsp+0x50]
   140009dd8:	mov    rdi,QWORD PTR [rsp+0x58]
   140009ddd:	cmp    r12d,ebx
   140009de0:	setl   bl
   140009de3:	mov    eax,ebx
   140009de5:	mov    rbx,QWORD PTR [rsp+0x40]
   140009dea:	add    rsp,0x30
   140009dee:	pop    r12
   140009df0:	ret    
   140009df1:	int3   
   140009df2:	int3   
   140009df3:	int3   
   140009df4:	mov    eax,0x1
   140009df9:	ret    
   140009dfa:	int3   
   140009dfb:	int3   
   140009dfc:	sub    rsp,0x28
   140009e00:	cmp    QWORD PTR [rcx+0xb0],0x0
   140009e08:	jne    0x140009e0e
   140009e0a:	xor    eax,eax
   140009e0c:	jmp    0x140009e1b
   140009e0e:	mov    rcx,QWORD PTR [rcx+0xb0]
   140009e15:	mov    rax,QWORD PTR [rcx]
   140009e18:	call   QWORD PTR [rax+0x20]
   140009e1b:	add    rsp,0x28
   140009e1f:	ret    
   140009e20:	mov    rax,rsp
   140009e23:	push   rdi
   140009e24:	sub    rsp,0x280
   140009e2b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140009e34:	mov    QWORD PTR [rax+0x18],rbx
   140009e38:	mov    QWORD PTR [rax+0x20],rsi
   140009e3c:	mov    rax,QWORD PTR [rip+0x3618d]        # 0x14003ffd0
   140009e43:	xor    rax,rsp
   140009e46:	mov    QWORD PTR [rsp+0x270],rax
   140009e4e:	mov    rsi,rdx
   140009e51:	mov    rdi,rcx
   140009e54:	mov    QWORD PTR [rsp+0x38],rcx
   140009e59:	mov    QWORD PTR [rsp+0x40],rdx
   140009e5e:	lea    r8,[rsp+0x30]
   140009e63:	mov    rdx,QWORD PTR [rdx]
   140009e66:	call   QWORD PTR [rip+0x271ac]        # 0x140031018
   140009e6c:	mov    ebx,eax
   140009e6e:	test   eax,eax
   140009e70:	jne    0x140009f1f
   140009e76:	mov    r9d,0x104
   140009e7c:	lea    r8,[rsp+0x60]
   140009e81:	xor    edx,edx
   140009e83:	mov    rcx,QWORD PTR [rsp+0x30]
   140009e88:	call   QWORD PTR [rip+0x27182]        # 0x140031010
   140009e8e:	mov    ebx,eax
   140009e90:	test   eax,eax
   140009e92:	jne    0x140009ef6
   140009e94:	lea    rdx,[rsp+0x60]
   140009e99:	lea    rcx,[rsp+0x28]
   140009e9e:	call   0x140001ac0
   140009ea3:	nop
   140009ea4:	lea    rdx,[rsp+0x28]
   140009ea9:	mov    rcx,QWORD PTR [rsp+0x30]
   140009eae:	call   0x140009e20
   140009eb3:	mov    ebx,eax
   140009eb5:	test   eax,eax
   140009eb7:	setne  BYTE PTR [rsp+0x20]
   140009ebc:	mov    rdx,QWORD PTR [rsp+0x28]
   140009ec1:	add    rdx,0xffffffffffffffe8
   140009ec5:	or     eax,0xffffffff
   140009ec8:	lock xadd DWORD PTR [rdx+0x10],eax
   140009ecd:	add    eax,0xffffffff
   140009ed0:	test   eax,eax
   140009ed2:	jg     0x140009edd
   140009ed4:	mov    rcx,QWORD PTR [rdx]
   140009ed7:	mov    rax,QWORD PTR [rcx]
   140009eda:	call   QWORD PTR [rax+0x8]
   140009edd:	cmp    BYTE PTR [rsp+0x20],0x0
   140009ee2:	je     0x140009ee6
   140009ee4:	jmp    0x140009ef6
   140009ee6:	jmp    0x140009e76
   140009ee8:	mov    ebx,DWORD PTR [rsp+0x28]
   140009eec:	mov    rdi,QWORD PTR [rsp+0x38]
   140009ef1:	mov    rsi,QWORD PTR [rsp+0x40]
   140009ef6:	cmp    ebx,0x103
   140009efc:	je     0x140009f06
   140009efe:	cmp    ebx,0x3f2
   140009f04:	jne    0x140009f14
   140009f06:	mov    rdx,QWORD PTR [rsi]
   140009f09:	mov    rcx,rdi
   140009f0c:	call   QWORD PTR [rip+0x27116]        # 0x140031028
   140009f12:	mov    ebx,eax
   140009f14:	mov    rcx,QWORD PTR [rsp+0x30]
   140009f19:	call   QWORD PTR [rip+0x27101]        # 0x140031020
   140009f1f:	mov    eax,ebx
   140009f21:	mov    rcx,QWORD PTR [rsp+0x270]
   140009f29:	xor    rcx,rsp
   140009f2c:	call   0x140019370
   140009f31:	lea    r11,[rsp+0x280]
   140009f39:	mov    rbx,QWORD PTR [r11+0x20]
   140009f3d:	mov    rsi,QWORD PTR [r11+0x28]
   140009f41:	mov    rsp,r11
   140009f44:	pop    rdi
   140009f45:	ret    
   140009f46:	int3   
   140009f47:	int3   
   140009f48:	int3   
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	int3   
   140009f4d:	int3   
   140009f4e:	int3   
   140009f4f:	int3   
   140009f50:	rex push rbp
   140009f52:	sub    rsp,0x20
   140009f56:	mov    rbp,rdx
   140009f59:	lea    rcx,[rbp+0x28]
   140009f5d:	call   0x140001dc0
   140009f62:	add    rsp,0x20
   140009f66:	pop    rbp
   140009f67:	ret    
   140009f68:	int3   
   140009f69:	int3   
   140009f6a:	int3   
   140009f6b:	int3   
   140009f6c:	int3   
   140009f6d:	int3   
   140009f6e:	int3   
   140009f6f:	int3   
   140009f70:	mov    QWORD PTR [rsp+0x10],rdx
   140009f75:	push   rbp
   140009f76:	sub    rsp,0x20
   140009f7a:	mov    rbp,rdx
   140009f7d:	mov    DWORD PTR [rbp+0x28],0x8
   140009f84:	mov    rcx,QWORD PTR [rbp+0x50]
   140009f88:	call   0x1400062c8
   140009f8d:	nop
   140009f8e:	lea    rax,[rip+0xffffffffffffff53]        # 0x140009ee8
   140009f95:	jmp    0x140009f97
   140009f97:	add    rsp,0x20
   140009f9b:	pop    rbp
   140009f9c:	ret    
   140009f9d:	int3   
   140009f9e:	int3   
   140009f9f:	int3   
   140009fa0:	mov    rax,rsp
   140009fa3:	push   rdi
   140009fa4:	sub    rsp,0x290
   140009fab:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140009fb4:	mov    QWORD PTR [rax+0x10],rbx
   140009fb8:	mov    rax,QWORD PTR [rip+0x36011]        # 0x14003ffd0
   140009fbf:	xor    rax,rsp
   140009fc2:	mov    QWORD PTR [rsp+0x280],rax
   140009fca:	mov    rbx,rcx
   140009fcd:	and    QWORD PTR [rsp+0x40],0x0
   140009fd3:	and    DWORD PTR [rsp+0x48],0x0
   140009fd8:	call   0x140009dfc
   140009fdd:	mov    QWORD PTR [rsp+0x50],rax
   140009fe2:	test   rax,rax
   140009fe5:	je     0x14000a037
   140009fe7:	xor    eax,eax
   140009fe9:	cmp    QWORD PTR [rbx+0xb0],rax
   140009ff0:	setne  al
   140009ff3:	test   eax,eax
   140009ff5:	je     0x14000a031
   140009ff7:	mov    rcx,QWORD PTR [rbx+0xb0]
   140009ffe:	mov    rax,QWORD PTR [rcx]
   14000a001:	lea    rdx,[rsp+0x50]
   14000a006:	call   QWORD PTR [rax+0x28]
   14000a009:	test   rax,rax
   14000a00c:	je     0x14000a027
   14000a00e:	mov    r10,QWORD PTR [rax]
   14000a011:	and    QWORD PTR [rsp+0x20],0x0
   14000a017:	xor    r9d,r9d
   14000a01a:	xor    edx,edx
   14000a01c:	lea    r8d,[r9-0x4]
   14000a020:	mov    rcx,rax
   14000a023:	call   QWORD PTR [r10+0x18]
   14000a027:	cmp    QWORD PTR [rsp+0x50],0x0
   14000a02d:	jne    0x140009fe7
   14000a02f:	jmp    0x14000a037
   14000a031:	call   0x140006408
   14000a036:	int3   
   14000a037:	cmp    QWORD PTR [rbx+0xa8],0x0
   14000a03f:	je     0x14000a19d
   14000a045:	xor    eax,eax
   14000a047:	cmp    QWORD PTR [rbx+0xd0],rax
   14000a04e:	setne  al
   14000a051:	test   eax,eax
   14000a053:	jne    0x14000a05b
   14000a055:	call   0x140006408
   14000a05a:	int3   
   14000a05b:	lea    rdx,[rip+0x28826]        # 0x140032888
   14000a062:	lea    rcx,[rsp+0x30]
   14000a067:	call   0x140001ac0
   14000a06c:	nop
   14000a06d:	mov    rdi,QWORD PTR [rbx+0xa8]
   14000a074:	test   rdi,rdi
   14000a077:	jne    0x14000a07d
   14000a079:	xor    eax,eax
   14000a07b:	jmp    0x14000a085
   14000a07d:	mov    rcx,rdi
   14000a080:	call   0x14001a670
   14000a085:	mov    r8d,eax
   14000a088:	mov    rdx,rdi
   14000a08b:	lea    rcx,[rsp+0x30]
   14000a090:	call   0x140004be0
   14000a095:	lea    r8,[rip+0x2c96c]        # 0x140036a08
   14000a09c:	lea    rdx,[rsp+0x30]
   14000a0a1:	lea    rcx,[rsp+0x58]
   14000a0a6:	call   0x140004a70
   14000a0ab:	nop
   14000a0ac:	mov    r8,QWORD PTR [rbx+0xd0]
   14000a0b3:	mov    rdx,rax
   14000a0b6:	lea    rcx,[rsp+0x38]
   14000a0bb:	call   0x140004a70
   14000a0c0:	nop
   14000a0c1:	mov    rdx,QWORD PTR [rsp+0x58]
   14000a0c6:	add    rdx,0xffffffffffffffe8
   14000a0ca:	or     edi,0xffffffff
   14000a0cd:	mov    eax,edi
   14000a0cf:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a0d4:	add    eax,edi
   14000a0d6:	test   eax,eax
   14000a0d8:	jg     0x14000a0e3
   14000a0da:	mov    rcx,QWORD PTR [rdx]
   14000a0dd:	mov    rax,QWORD PTR [rcx]
   14000a0e0:	call   QWORD PTR [rax+0x8]
   14000a0e3:	lea    rdx,[rsp+0x38]
   14000a0e8:	mov    rbx,0xffffffff80000001
   14000a0ef:	mov    rcx,rbx
   14000a0f2:	call   0x140009e20
   14000a0f7:	lea    r8,[rsp+0x40]
   14000a0fc:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a101:	mov    rcx,rbx
   14000a104:	call   QWORD PTR [rip+0x26f0e]        # 0x140031018
   14000a10a:	test   eax,eax
   14000a10c:	jne    0x14000a145
   14000a10e:	mov    r9d,0x104
   14000a114:	lea    r8,[rsp+0x70]
   14000a119:	xor    edx,edx
   14000a11b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a120:	call   QWORD PTR [rip+0x26eea]        # 0x140031010
   14000a126:	cmp    eax,0x103
   14000a12b:	jne    0x14000a13a
   14000a12d:	lea    rdx,[rsp+0x30]
   14000a132:	mov    rcx,rbx
   14000a135:	call   0x140009e20
   14000a13a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a13f:	call   QWORD PTR [rip+0x26edb]        # 0x140031020
   14000a145:	lea    r9,[rsp+0x48]
   14000a14a:	lea    r8,[rsp+0x70]
   14000a14f:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a154:	mov    rcx,rbx
   14000a157:	call   QWORD PTR [rip+0x26eab]        # 0x140031008
   14000a15d:	nop
   14000a15e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a163:	add    rdx,0xffffffffffffffe8
   14000a167:	mov    eax,edi
   14000a169:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a16e:	add    eax,edi
   14000a170:	test   eax,eax
   14000a172:	jg     0x14000a17e
   14000a174:	mov    rcx,QWORD PTR [rdx]
   14000a177:	mov    rax,QWORD PTR [rcx]
   14000a17a:	call   QWORD PTR [rax+0x8]
   14000a17d:	nop
   14000a17e:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a183:	add    rdx,0xffffffffffffffe8
   14000a187:	mov    eax,edi
   14000a189:	lock xadd DWORD PTR [rdx+0x10],eax
   14000a18e:	add    eax,edi
   14000a190:	test   eax,eax
   14000a192:	jg     0x14000a19d
   14000a194:	mov    rcx,QWORD PTR [rdx]
   14000a197:	mov    rax,QWORD PTR [rcx]
   14000a19a:	call   QWORD PTR [rax+0x8]
   14000a19d:	mov    eax,0x1
   14000a1a2:	mov    rcx,QWORD PTR [rsp+0x280]
   14000a1aa:	xor    rcx,rsp
   14000a1ad:	call   0x140019370
   14000a1b2:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14000a1ba:	add    rsp,0x290
   14000a1c1:	pop    rdi
   14000a1c2:	ret    
   14000a1c3:	int3   
   14000a1c4:	int3   
   14000a1c5:	int3   
   14000a1c6:	int3   
   14000a1c7:	int3   
   14000a1c8:	int3   
   14000a1c9:	int3   
   14000a1ca:	int3   
   14000a1cb:	int3   
   14000a1cc:	int3   
   14000a1cd:	int3   
   14000a1ce:	int3   
   14000a1cf:	int3   
   14000a1d0:	rex push rbp
   14000a1d2:	sub    rsp,0x20
   14000a1d6:	mov    rbp,rdx
   14000a1d9:	lea    rcx,[rbp+0x30]
   14000a1dd:	call   0x140001dc0
   14000a1e2:	add    rsp,0x20
   14000a1e6:	pop    rbp
   14000a1e7:	ret    
   14000a1e8:	int3   
   14000a1e9:	int3   
   14000a1ea:	int3   
   14000a1eb:	int3   
   14000a1ec:	int3   
   14000a1ed:	int3   
   14000a1ee:	int3   
   14000a1ef:	int3   
   14000a1f0:	rex push rbp
   14000a1f2:	sub    rsp,0x20
   14000a1f6:	mov    rbp,rdx
   14000a1f9:	lea    rcx,[rbp+0x58]
   14000a1fd:	call   0x140001dc0
   14000a202:	add    rsp,0x20
   14000a206:	pop    rbp
   14000a207:	ret    
   14000a208:	int3   
   14000a209:	int3   
   14000a20a:	int3   
   14000a20b:	int3   
   14000a20c:	int3   
   14000a20d:	int3   
   14000a20e:	int3   
   14000a20f:	int3   
   14000a210:	rex push rbp
   14000a212:	sub    rsp,0x20
   14000a216:	mov    rbp,rdx
   14000a219:	lea    rcx,[rbp+0x38]
   14000a21d:	call   0x140001dc0
   14000a222:	add    rsp,0x20
   14000a226:	pop    rbp
   14000a227:	ret    
   14000a228:	sub    rsp,0xd8
   14000a22f:	mov    rax,QWORD PTR [rip+0x35d9a]        # 0x14003ffd0
   14000a236:	xor    rax,rsp
   14000a239:	mov    QWORD PTR [rsp+0xc0],rax
   14000a241:	lea    rcx,[rsp+0x24]
   14000a246:	xor    edx,edx
   14000a248:	mov    r8d,0x90
   14000a24e:	call   0x14001b520
   14000a253:	lea    rcx,[rsp+0x20]
   14000a258:	mov    DWORD PTR [rsp+0x20],0x94
   14000a260:	call   QWORD PTR [rip+0x27122]        # 0x140031388
   14000a266:	xor    eax,eax
   14000a268:	cmp    DWORD PTR [rsp+0x30],0x2
   14000a26d:	sete   al
   14000a270:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000a278:	xor    rcx,rsp
   14000a27b:	call   0x140019370
   14000a280:	add    rsp,0xd8
   14000a287:	ret    
   14000a288:	mov    QWORD PTR [rsp+0x8],rbx
   14000a28d:	push   rdi
   14000a28e:	sub    rsp,0x20
   14000a292:	xor    ebx,ebx
   14000a294:	cmp    DWORD PTR [rip+0x3a88e],ebx        # 0x140044b28
   14000a29a:	je     0x14000a2ab
   14000a29c:	cmp    QWORD PTR [rip+0x3a86d],rbx        # 0x140044b10
   14000a2a3:	setne  bl
   14000a2a6:	jmp    0x14000a3f0
   14000a2ab:	call   0x14000a228
   14000a2b0:	lea    rcx,[rip+0x287c1]        # 0x140032a78
   14000a2b7:	mov    DWORD PTR [rip+0x3a86f],eax        # 0x140044b2c
   14000a2bd:	call   QWORD PTR [rip+0x2712d]        # 0x1400313f0
   14000a2c3:	cmp    rax,rbx
   14000a2c6:	mov    rdi,rax
   14000a2c9:	je     0x14000a3b5
   14000a2cf:	lea    rdx,[rip+0x2878a]        # 0x140032a60
   14000a2d6:	mov    rcx,rax
   14000a2d9:	call   QWORD PTR [rip+0x27181]        # 0x140031460
   14000a2df:	cmp    rax,rbx
   14000a2e2:	mov    QWORD PTR [rip+0x3a807],rax        # 0x140044af0
   14000a2e9:	je     0x14000a3b5
   14000a2ef:	lea    rdx,[rip+0x28752]        # 0x140032a48
   14000a2f6:	mov    rcx,rdi
   14000a2f9:	call   QWORD PTR [rip+0x27161]        # 0x140031460
   14000a2ff:	cmp    rax,rbx
   14000a302:	mov    QWORD PTR [rip+0x3a7ef],rax        # 0x140044af8
   14000a309:	je     0x14000a3b5
   14000a30f:	lea    rdx,[rip+0x28722]        # 0x140032a38
   14000a316:	mov    rcx,rdi
   14000a319:	call   QWORD PTR [rip+0x27141]        # 0x140031460
   14000a31f:	cmp    rax,rbx
   14000a322:	mov    QWORD PTR [rip+0x3a7d7],rax        # 0x140044b00
   14000a329:	je     0x14000a3b5
   14000a32f:	lea    rdx,[rip+0x286ea]        # 0x140032a20
   14000a336:	mov    rcx,rdi
   14000a339:	call   QWORD PTR [rip+0x27121]        # 0x140031460
   14000a33f:	cmp    rax,rbx
   14000a342:	mov    QWORD PTR [rip+0x3a7bf],rax        # 0x140044b08
   14000a349:	je     0x14000a3b5
   14000a34b:	lea    rdx,[rip+0x286b6]        # 0x140032a08
   14000a352:	mov    rcx,rdi
   14000a355:	call   QWORD PTR [rip+0x27105]        # 0x140031460
   14000a35b:	cmp    rax,rbx
   14000a35e:	mov    QWORD PTR [rip+0x3a7b3],rax        # 0x140044b18
   14000a365:	je     0x14000a3b5
   14000a367:	lea    rdx,[rip+0x28682]        # 0x1400329f0
   14000a36e:	mov    rcx,rdi
   14000a371:	call   QWORD PTR [rip+0x270e9]        # 0x140031460
   14000a377:	cmp    rax,rbx
   14000a37a:	mov    QWORD PTR [rip+0x3a79f],rax        # 0x140044b20
   14000a381:	je     0x14000a3b5
   14000a383:	cmp    DWORD PTR [rip+0x3a7a3],ebx        # 0x140044b2c
   14000a389:	mov    rcx,rdi
   14000a38c:	lea    rdx,[rip+0x2864d]        # 0x1400329e0
   14000a393:	jne    0x14000a39c
   14000a395:	lea    rdx,[rip+0x28634]        # 0x1400329d0
   14000a39c:	call   QWORD PTR [rip+0x270be]        # 0x140031460
   14000a3a2:	cmp    rax,rbx
   14000a3a5:	mov    QWORD PTR [rip+0x3a764],rax        # 0x140044b10
   14000a3ac:	je     0x14000a3b5
   14000a3ae:	mov    ebx,0x1
   14000a3b3:	jmp    0x14000a3e6
   14000a3b5:	mov    QWORD PTR [rip+0x3a734],rbx        # 0x140044af0
   14000a3bc:	mov    QWORD PTR [rip+0x3a735],rbx        # 0x140044af8
   14000a3c3:	mov    QWORD PTR [rip+0x3a736],rbx        # 0x140044b00
   14000a3ca:	mov    QWORD PTR [rip+0x3a737],rbx        # 0x140044b08
   14000a3d1:	mov    QWORD PTR [rip+0x3a738],rbx        # 0x140044b10
   14000a3d8:	mov    QWORD PTR [rip+0x3a739],rbx        # 0x140044b18
   14000a3df:	mov    QWORD PTR [rip+0x3a73a],rbx        # 0x140044b20
   14000a3e6:	mov    DWORD PTR [rip+0x3a738],0x1        # 0x140044b28
   14000a3f0:	mov    eax,ebx
   14000a3f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a3f7:	add    rsp,0x20
   14000a3fb:	pop    rdi
   14000a3fc:	ret    
   14000a3fd:	int3   
   14000a3fe:	int3   
   14000a3ff:	int3   
   14000a400:	mov    QWORD PTR [rsp+0x8],rbx
   14000a405:	push   rdi
   14000a406:	sub    rsp,0x20
   14000a40a:	mov    edi,edx
   14000a40c:	mov    rbx,rcx
   14000a40f:	call   0x14000a288
   14000a414:	test   eax,eax
   14000a416:	je     0x14000a425
   14000a418:	mov    edx,edi
   14000a41a:	mov    rcx,rbx
   14000a41d:	call   QWORD PTR [rip+0x3a6dd]        # 0x140044b00
   14000a423:	jmp    0x14000a461
   14000a425:	test   dil,0x3
   14000a429:	jne    0x14000a457
   14000a42b:	cmp    DWORD PTR [rbx+0x8],0x0
   14000a42f:	jle    0x14000a453
   14000a431:	cmp    DWORD PTR [rbx+0xc],0x0
   14000a435:	jle    0x14000a453
   14000a437:	xor    ecx,ecx
   14000a439:	call   QWORD PTR [rip+0x27381]        # 0x1400317c0
   14000a43f:	cmp    DWORD PTR [rbx],eax
   14000a441:	jge    0x14000a453
   14000a443:	mov    ecx,0x1
   14000a448:	call   QWORD PTR [rip+0x27372]        # 0x1400317c0
   14000a44e:	cmp    DWORD PTR [rbx+0x4],eax
   14000a451:	jl     0x14000a457
   14000a453:	xor    eax,eax
   14000a455:	jmp    0x14000a461
   14000a457:	movabs rax,0x12340042
   14000a461:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a466:	add    rsp,0x20
   14000a46a:	pop    rdi
   14000a46b:	ret    
   14000a46c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a471:	push   rdi
   14000a472:	sub    rsp,0x50
   14000a476:	mov    ebx,edx
   14000a478:	mov    rdi,rcx
   14000a47b:	call   0x14000a288
   14000a480:	test   eax,eax
   14000a482:	je     0x14000a491
   14000a484:	mov    edx,ebx
   14000a486:	mov    rcx,rdi
   14000a489:	call   QWORD PTR [rip+0x3a669]        # 0x140044af8
   14000a48f:	jmp    0x14000a4de
   14000a491:	test   bl,0x3
   14000a494:	je     0x14000a4a2
   14000a496:	movabs rax,0x12340042
   14000a4a0:	jmp    0x14000a4de
   14000a4a2:	mov    rcx,rdi
   14000a4a5:	call   QWORD PTR [rip+0x272f5]        # 0x1400317a0
   14000a4ab:	mov    rcx,rdi
   14000a4ae:	test   eax,eax
   14000a4b0:	je     0x14000a4bf
   14000a4b2:	lea    rdx,[rsp+0x20]
   14000a4b7:	call   QWORD PTR [rip+0x271b3]        # 0x140031670
   14000a4bd:	jmp    0x14000a4ca
   14000a4bf:	lea    rdx,[rsp+0x3c]
   14000a4c4:	call   QWORD PTR [rip+0x271ae]        # 0x140031678
   14000a4ca:	test   eax,eax
   14000a4cc:	je     0x14000a4dc
   14000a4ce:	lea    rcx,[rsp+0x3c]
   14000a4d3:	mov    edx,ebx
   14000a4d5:	call   0x14000a400
   14000a4da:	jmp    0x14000a4de
   14000a4dc:	xor    eax,eax
   14000a4de:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a4e3:	add    rsp,0x50
   14000a4e7:	pop    rdi
   14000a4e8:	ret    
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4f1:	push   rdi
   14000a4f2:	sub    rsp,0x40
   14000a4f6:	mov    rbx,rdx
   14000a4f9:	mov    rdi,rcx
   14000a4fc:	call   0x14000a288
   14000a501:	test   eax,eax
   14000a503:	je     0x14000a548
   14000a505:	mov    rdx,rbx
   14000a508:	mov    rcx,rdi
   14000a50b:	call   QWORD PTR [rip+0x3a5ff]        # 0x140044b10
   14000a511:	test   eax,eax
   14000a513:	mov    edi,eax
   14000a515:	je     0x14000a544
   14000a517:	cmp    DWORD PTR [rip+0x3a60e],0x0        # 0x140044b2c
   14000a51e:	jne    0x14000a544
   14000a520:	cmp    DWORD PTR [rbx],0x68
   14000a523:	jb     0x14000a544
   14000a525:	lea    r8,[rbx+0x28]
   14000a529:	mov    DWORD PTR [rsp+0x28],0x20
   14000a531:	mov    QWORD PTR [rsp+0x20],r8
   14000a536:	or     r9d,0xffffffff
   14000a53a:	xor    edx,edx
   14000a53c:	xor    ecx,ecx
   14000a53e:	call   QWORD PTR [rip+0x26f0c]        # 0x140031450
   14000a544:	mov    eax,edi
   14000a546:	jmp    0x14000a5c7
   14000a548:	cmp    rdi,0x12340042
   14000a54f:	jne    0x14000a5c5
   14000a551:	test   rbx,rbx
   14000a554:	je     0x14000a5c5
   14000a556:	cmp    DWORD PTR [rbx],0x28
   14000a559:	jb     0x14000a5c5
   14000a55b:	xor    edx,edx
   14000a55d:	lea    r8,[rsp+0x30]
   14000a562:	xor    r9d,r9d
   14000a565:	lea    ecx,[rdx+0x30]
   14000a568:	call   QWORD PTR [rip+0x270fa]        # 0x140031668
   14000a56e:	test   eax,eax
   14000a570:	je     0x14000a5c5
   14000a572:	and    DWORD PTR [rbx+0x4],0x0
   14000a576:	and    DWORD PTR [rbx+0x8],0x0
   14000a57a:	xor    ecx,ecx
   14000a57c:	call   QWORD PTR [rip+0x2723e]        # 0x1400317c0
   14000a582:	mov    edi,0x1
   14000a587:	mov    ecx,edi
   14000a589:	mov    DWORD PTR [rbx+0xc],eax
   14000a58c:	call   QWORD PTR [rip+0x2722e]        # 0x1400317c0
   14000a592:	cmp    DWORD PTR [rbx],0x68
   14000a595:	mov    DWORD PTR [rbx+0x24],edi
   14000a598:	movdqu xmm0,XMMWORD PTR [rsp+0x30]
   14000a59e:	movdqu XMMWORD PTR [rbx+0x14],xmm0
   14000a5a3:	mov    DWORD PTR [rbx+0x10],eax
   14000a5a6:	jb     0x14000a544
   14000a5a8:	lea    rcx,[rbx+0x28]
   14000a5ac:	mov    DWORD PTR [rsp+0x28],0x20
   14000a5b4:	lea    r8,[rip+0x284cd]        # 0x140032a88
   14000a5bb:	mov    QWORD PTR [rsp+0x20],rcx
   14000a5c0:	jmp    0x14000a536
   14000a5c5:	xor    eax,eax
   14000a5c7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a5cc:	add    rsp,0x40
   14000a5d0:	pop    rdi
   14000a5d1:	ret    
   14000a5d2:	int3   
   14000a5d3:	int3   
   14000a5d4:	mov    rax,rsp
   14000a5d7:	mov    QWORD PTR [rax+0x10],rbx
   14000a5db:	mov    QWORD PTR [rax+0x18],rbp
   14000a5df:	push   rsi
   14000a5e0:	push   rdi
   14000a5e1:	push   r12
   14000a5e3:	push   r13
   14000a5e5:	push   r15
   14000a5e7:	sub    rsp,0xd0
   14000a5ee:	and    WORD PTR [rax-0x48],0x0
   14000a5f3:	test   rcx,rcx
   14000a5f6:	mov    r13d,edx
   14000a5f9:	mov    rbp,rcx
   14000a5fc:	jne    0x14000a608
   14000a5fe:	mov    eax,0x80070057
   14000a603:	jmp    0x14000ae30
   14000a608:	mov    rdi,QWORD PTR [rsp+0x128]
   14000a610:	test   rdi,rdi
   14000a613:	jne    0x14000a61f
   14000a615:	mov    eax,0x80020008
   14000a61a:	jmp    0x14000ae30
   14000a61f:	mov    r8d,DWORD PTR [rdi+0x10]
   14000a623:	cmp    r8d,0x5
   14000a627:	jbe    0x14000a633
   14000a629:	mov    eax,0x8002000e
   14000a62e:	jmp    0x14000ae30
   14000a633:	xor    r9d,r9d
   14000a636:	cmp    DWORD PTR [rdi+0x14],r9d
   14000a63a:	lea    r15d,[r9+0x1]
   14000a63e:	jbe    0x14000a669
   14000a640:	mov    r10,QWORD PTR [rdi+0x8]
   14000a644:	cmp    DWORD PTR [r10],r8d
   14000a647:	jae    0x14000a629
   14000a649:	mov    rax,QWORD PTR [rdi]
   14000a64c:	lea    rcx,[r9+r9*2]
   14000a650:	add    r9d,r15d
   14000a653:	lea    rdx,[rax+rcx*8]
   14000a657:	movsxd rax,DWORD PTR [r10]
   14000a65a:	add    r10,0x4
   14000a65e:	cmp    r9d,DWORD PTR [rdi+0x14]
   14000a662:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   14000a667:	jb     0x14000a644
   14000a669:	cmp    r9d,r8d
   14000a66c:	jae    0x14000a693
   14000a66e:	mov    rax,QWORD PTR [rdi]
   14000a671:	lea    rcx,[r9+r9*2]
   14000a675:	lea    rdx,[rax+rcx*8]
   14000a679:	mov    eax,r8d
   14000a67c:	sub    eax,r9d
   14000a67f:	add    r9d,r15d
   14000a682:	sub    eax,r15d
   14000a685:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   14000a68a:	add    rdx,0x18
   14000a68e:	cmp    r9d,r8d
   14000a691:	jb     0x14000a679
   14000a693:	mov    rax,QWORD PTR [rsp+0x140]
   14000a69b:	lea    r12,[rsp+0x100]
   14000a6a3:	lea    rsi,[rsp+0xb0]
   14000a6ab:	test   rax,rax
   14000a6ae:	lea    rcx,[rsp+0x78]
   14000a6b3:	mov    ebx,0x80020003
   14000a6b8:	cmovne r12,rax
   14000a6bc:	mov    rax,QWORD PTR [rsp+0x130]
   14000a6c4:	test   rax,rax
   14000a6c7:	cmovne rsi,rax
   14000a6cb:	call   QWORD PTR [rip+0x26dff]        # 0x1400314d0
   14000a6d1:	lea    r11d,[r13+0x139a]
   14000a6d8:	cmp    r11d,0x12
   14000a6dc:	ja     0x14000ae23
   14000a6e2:	lea    rdx,[rip+0xffffffffffff5917]        # 0x140000000
   14000a6e9:	movsxd rax,r11d
   14000a6ec:	mov    ecx,DWORD PTR [rdx+rax*4+0xae4c]
   14000a6f3:	movzx  eax,WORD PTR [rsp+0x120]
   14000a6fb:	add    rcx,rdx
   14000a6fe:	jmp    rcx
   14000a700:	cmp    DWORD PTR [rdi+0x10],r15d
   14000a704:	jne    0x14000adad
   14000a70a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a70f:	lea    rdx,[rsp+0x30]
   14000a714:	mov    rax,QWORD PTR [rcx]
   14000a717:	mov    QWORD PTR [rdx],rax
   14000a71a:	mov    rax,QWORD PTR [rcx+0x8]
   14000a71e:	mov    QWORD PTR [rdx+0x8],rax
   14000a722:	mov    rax,QWORD PTR [rcx+0x10]
   14000a726:	mov    rcx,rbp
   14000a729:	mov    QWORD PTR [rdx+0x10],rax
   14000a72d:	mov    rax,QWORD PTR [rbp+0x0]
   14000a731:	lea    rdx,[rsp+0x30]
   14000a736:	call   QWORD PTR [rax+0xc8]
   14000a73c:	jmp    0x14000ada3
   14000a741:	cmp    DWORD PTR [rdi+0x10],0x2
   14000a745:	jne    0x14000adad
   14000a74b:	mov    rax,QWORD PTR [rsp+0x50]
   14000a750:	cmp    WORD PTR [rax],0x3
   14000a754:	je     0x14000a77b
   14000a756:	lea    rcx,[rsp+0x78]
   14000a75b:	mov    r9w,0x3
   14000a760:	xor    r8d,r8d
   14000a763:	mov    rdx,rax
   14000a766:	call   QWORD PTR [rip+0x26d5c]        # 0x1400314c8
   14000a76c:	test   eax,eax
   14000a76e:	mov    ebx,eax
   14000a770:	js     0x14000aa2d
   14000a776:	lea    rax,[rsp+0x78]
   14000a77b:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a780:	mov    edi,DWORD PTR [rax+0x8]
   14000a783:	cmp    WORD PTR [rcx],0x3
   14000a787:	je     0x14000a7ae
   14000a789:	mov    rdx,rcx
   14000a78c:	lea    rcx,[rsp+0x78]
   14000a791:	mov    r9w,0x3
   14000a796:	xor    r8d,r8d
   14000a799:	call   QWORD PTR [rip+0x26d29]        # 0x1400314c8
   14000a79f:	test   eax,eax
   14000a7a1:	mov    ebx,eax
   14000a7a3:	js     0x14000ad5c
   14000a7a9:	lea    rcx,[rsp+0x78]
   14000a7ae:	mov    r8d,DWORD PTR [rcx+0x8]
   14000a7b2:	mov    rax,QWORD PTR [rbp+0x0]
   14000a7b6:	mov    r9,rsi
   14000a7b9:	mov    edx,edi
   14000a7bb:	mov    rcx,rbp
   14000a7be:	call   QWORD PTR [rax+0xc0]
   14000a7c4:	jmp    0x14000ada3
   14000a7c9:	cmp    DWORD PTR [rdi+0x10],0x2
   14000a7cd:	jne    0x14000adad
   14000a7d3:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a7d8:	cmp    WORD PTR [rdx],0x3
   14000a7dc:	je     0x14000a800
   14000a7de:	lea    rcx,[rsp+0x78]
   14000a7e3:	mov    r9w,0x3
   14000a7e8:	xor    r8d,r8d
   14000a7eb:	call   QWORD PTR [rip+0x26cd7]        # 0x1400314c8
   14000a7f1:	test   eax,eax
   14000a7f3:	mov    ebx,eax
   14000a7f5:	js     0x14000aa2d
   14000a7fb:	lea    rdx,[rsp+0x78]
   14000a800:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a805:	mov    edx,DWORD PTR [rdx+0x8]
   14000a808:	lea    r8,[rsp+0x30]
   14000a80d:	mov    rax,QWORD PTR [rcx]
   14000a810:	mov    r9,rsi
   14000a813:	mov    QWORD PTR [r8],rax
   14000a816:	mov    rax,QWORD PTR [rcx+0x8]
   14000a81a:	mov    QWORD PTR [r8+0x8],rax
   14000a81e:	mov    rax,QWORD PTR [rcx+0x10]
   14000a822:	mov    rcx,rbp
   14000a825:	mov    QWORD PTR [r8+0x10],rax
   14000a829:	mov    rax,QWORD PTR [rbp+0x0]
   14000a82d:	lea    r8,[rsp+0x30]
   14000a832:	call   QWORD PTR [rax+0xb8]
   14000a838:	jmp    0x14000ada3
   14000a83d:	cmp    DWORD PTR [rdi+0x10],0x5
   14000a841:	jne    0x14000adad
   14000a847:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a84c:	mov    rdx,QWORD PTR [rsp+0x90]
   14000a854:	bt     WORD PTR [rbx],0xe
   14000a859:	jae    0x14000a889
   14000a85b:	test   BYTE PTR [rbx],0xf
   14000a85e:	je     0x14000a889
   14000a860:	test   BYTE PTR [rbx],0xc
   14000a863:	je     0x14000a883
   14000a865:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a869:	call   QWORD PTR [rip+0x26c51]        # 0x1400314c0
   14000a86f:	mov    r11,QWORD PTR [rbx+0x8]
   14000a873:	mov    WORD PTR [r11],0x3
   14000a879:	mov    rdx,QWORD PTR [rbx+0x8]
   14000a87d:	add    rdx,0x8
   14000a881:	jmp    0x14000a854
   14000a883:	mov    rdx,QWORD PTR [rbx+0x8]
   14000a887:	jmp    0x14000a854
   14000a889:	and    DWORD PTR [r12],0x0
   14000a88e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a893:	mov    r10,QWORD PTR [rbp+0x0]
   14000a897:	mov    rax,QWORD PTR [rcx]
   14000a89a:	mov    r9,QWORD PTR [rsp+0xa0]
   14000a8a2:	lea    r8,[rsp+0x30]
   14000a8a7:	mov    QWORD PTR [r8],rax
   14000a8aa:	mov    rax,QWORD PTR [rcx+0x8]
   14000a8ae:	mov    QWORD PTR [r8+0x8],rax
   14000a8b2:	mov    rax,QWORD PTR [rcx+0x10]
   14000a8b6:	mov    rcx,rbp
   14000a8b9:	mov    QWORD PTR [r8+0x10],rax
   14000a8bd:	mov    r8,QWORD PTR [rsp+0x98]
   14000a8c5:	lea    rax,[rsp+0x30]
   14000a8ca:	mov    QWORD PTR [rsp+0x28],rax
   14000a8cf:	mov    rax,QWORD PTR [rsp+0xa8]
   14000a8d7:	mov    QWORD PTR [rsp+0x20],rax
   14000a8dc:	call   QWORD PTR [r10+0xb0]
   14000a8e3:	jmp    0x14000ada3
   14000a8e8:	cmp    DWORD PTR [rdi+0x10],0x2
   14000a8ec:	jne    0x14000adad
   14000a8f2:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a8f7:	cmp    WORD PTR [rdx],0x3
   14000a8fb:	je     0x14000a91f
   14000a8fd:	lea    rcx,[rsp+0x78]
   14000a902:	mov    r9w,0x3
   14000a907:	xor    r8d,r8d
   14000a90a:	call   QWORD PTR [rip+0x26bb8]        # 0x1400314c8
   14000a910:	test   eax,eax
   14000a912:	mov    ebx,eax
   14000a914:	js     0x14000aa2d
   14000a91a:	lea    rdx,[rsp+0x78]
   14000a91f:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a924:	mov    edx,DWORD PTR [rdx+0x8]
   14000a927:	lea    r8,[rsp+0x30]
   14000a92c:	mov    rax,QWORD PTR [rcx]
   14000a92f:	mov    QWORD PTR [r8],rax
   14000a932:	mov    rax,QWORD PTR [rcx+0x8]
   14000a936:	mov    QWORD PTR [r8+0x8],rax
   14000a93a:	mov    rax,QWORD PTR [rcx+0x10]
   14000a93e:	mov    rcx,rbp
   14000a941:	mov    QWORD PTR [r8+0x10],rax
   14000a945:	mov    rax,QWORD PTR [rbp+0x0]
   14000a949:	lea    r8,[rsp+0x30]
   14000a94e:	call   QWORD PTR [rax+0xa8]
   14000a954:	jmp    0x14000ada3
   14000a959:	cmp    DWORD PTR [rdi+0x10],r15d
   14000a95d:	jne    0x14000adad
   14000a963:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a968:	lea    rdx,[rsp+0x30]
   14000a96d:	lea    r8,[rsi+0x8]
   14000a971:	mov    rax,QWORD PTR [rcx]
   14000a974:	mov    QWORD PTR [rdx],rax
   14000a977:	mov    rax,QWORD PTR [rcx+0x8]
   14000a97b:	mov    QWORD PTR [rdx+0x8],rax
   14000a97f:	mov    rax,QWORD PTR [rcx+0x10]
   14000a983:	mov    rcx,rbp
   14000a986:	mov    QWORD PTR [rdx+0x10],rax
   14000a98a:	mov    rax,QWORD PTR [rbp+0x0]
   14000a98e:	lea    rdx,[rsp+0x30]
   14000a993:	call   QWORD PTR [rax+0xa0]
   14000a999:	jmp    0x14000acec
   14000a99e:	mov    rax,QWORD PTR [rbp+0x0]
   14000a9a2:	mov    rdx,rsi
   14000a9a5:	mov    rcx,rbp
   14000a9a8:	call   QWORD PTR [rax+0x98]
   14000a9ae:	jmp    0x14000ada3
   14000a9b3:	mov    rax,QWORD PTR [rbp+0x0]
   14000a9b7:	mov    rdx,rsi
   14000a9ba:	mov    rcx,rbp
   14000a9bd:	call   QWORD PTR [rax+0x90]
   14000a9c3:	jmp    0x14000ada3
   14000a9c8:	cmp    DWORD PTR [rdi+0x10],r15d
   14000a9cc:	jne    0x14000adad
   14000a9d2:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a9d7:	lea    rdx,[rsp+0x30]
   14000a9dc:	lea    r8,[rsi+0x8]
   14000a9e0:	mov    rax,QWORD PTR [rcx]
   14000a9e3:	mov    QWORD PTR [rdx],rax
   14000a9e6:	mov    rax,QWORD PTR [rcx+0x8]
   14000a9ea:	mov    QWORD PTR [rdx+0x8],rax
   14000a9ee:	mov    rax,QWORD PTR [rcx+0x10]
   14000a9f2:	mov    rcx,rbp
   14000a9f5:	mov    QWORD PTR [rdx+0x10],rax
   14000a9f9:	mov    rax,QWORD PTR [rbp+0x0]
   14000a9fd:	lea    rdx,[rsp+0x30]
   14000aa02:	call   QWORD PTR [rax+0x88]
   14000aa08:	jmp    0x14000acec
   14000aa0d:	cmp    DWORD PTR [rdi+0x10],0x2
   14000aa11:	jne    0x14000adad
   14000aa17:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aa1c:	bt     WORD PTR [rbx],0xe
   14000aa21:	jae    0x14000aa37
   14000aa23:	test   BYTE PTR [rbx],0xc
   14000aa26:	jne    0x14000aa37
   14000aa28:	mov    ebx,0x80020005
   14000aa2d:	and    DWORD PTR [r12],0x0
   14000aa32:	jmp    0x14000ae23
   14000aa37:	cmp    WORD PTR [rbx],0x400c
   14000aa3c:	jne    0x14000aa5c
   14000aa3e:	mov    rcx,QWORD PTR [rbx+0x8]
   14000aa42:	call   QWORD PTR [rip+0x26a78]        # 0x1400314c0
   14000aa48:	mov    r11,QWORD PTR [rbx+0x8]
   14000aa4c:	mov    WORD PTR [r11],0x8
   14000aa52:	mov    rdx,QWORD PTR [rbx+0x8]
   14000aa56:	add    rdx,0x8
   14000aa5a:	jmp    0x14000aa7b
   14000aa5c:	cmp    WORD PTR [rbx],0x4008
   14000aa61:	jne    0x14000aa69
   14000aa63:	mov    rdx,QWORD PTR [rbx+0x8]
   14000aa67:	jmp    0x14000aa7b
   14000aa69:	mov    rcx,rbx
   14000aa6c:	call   QWORD PTR [rip+0x26a4e]        # 0x1400314c0
   14000aa72:	lea    rdx,[rbx+0x8]
   14000aa76:	mov    WORD PTR [rbx],0x8
   14000aa7b:	mov    rcx,QWORD PTR [rsp+0x58]
   14000aa80:	lea    r8,[rsp+0x30]
   14000aa85:	lea    r9,[rsi+0x8]
   14000aa89:	mov    rax,QWORD PTR [rcx]
   14000aa8c:	mov    QWORD PTR [r8],rax
   14000aa8f:	mov    rax,QWORD PTR [rcx+0x8]
   14000aa93:	mov    QWORD PTR [r8+0x8],rax
   14000aa97:	mov    rax,QWORD PTR [rcx+0x10]
   14000aa9b:	mov    rcx,rbp
   14000aa9e:	mov    QWORD PTR [r8+0x10],rax
   14000aaa2:	mov    rax,QWORD PTR [rbp+0x0]
   14000aaa6:	lea    r8,[rsp+0x30]
   14000aaab:	call   QWORD PTR [rax+0x80]
   14000aab1:	jmp    0x14000adfd
   14000aab6:	cmp    DWORD PTR [rdi+0x10],r15d
   14000aaba:	jne    0x14000adad
   14000aac0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000aac5:	lea    rdx,[rsp+0x30]
   14000aaca:	lea    r8,[rsi+0x8]
   14000aace:	mov    rax,QWORD PTR [rcx]
   14000aad1:	mov    QWORD PTR [rdx],rax
   14000aad4:	mov    rax,QWORD PTR [rcx+0x8]
   14000aad8:	mov    QWORD PTR [rdx+0x8],rax
   14000aadc:	mov    rax,QWORD PTR [rcx+0x10]
   14000aae0:	mov    rcx,rbp
   14000aae3:	mov    QWORD PTR [rdx+0x10],rax
   14000aae7:	mov    rax,QWORD PTR [rbp+0x0]
   14000aaeb:	lea    rdx,[rsp+0x30]
   14000aaf0:	call   QWORD PTR [rax+0x78]
   14000aaf3:	jmp    0x14000acec
   14000aaf8:	cmp    DWORD PTR [rdi+0x10],r15d
   14000aafc:	jne    0x14000adad
   14000ab02:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ab07:	lea    rdx,[rsp+0x30]
   14000ab0c:	mov    r8,rsi
   14000ab0f:	mov    rax,QWORD PTR [rcx]
   14000ab12:	mov    QWORD PTR [rdx],rax
   14000ab15:	mov    rax,QWORD PTR [rcx+0x8]
   14000ab19:	mov    QWORD PTR [rdx+0x8],rax
   14000ab1d:	mov    rax,QWORD PTR [rcx+0x10]
   14000ab21:	mov    rcx,rbp
   14000ab24:	mov    QWORD PTR [rdx+0x10],rax
   14000ab28:	mov    rax,QWORD PTR [rbp+0x0]
   14000ab2c:	lea    rdx,[rsp+0x30]
   14000ab31:	call   QWORD PTR [rax+0x70]
   14000ab34:	jmp    0x14000ada3
   14000ab39:	cmp    DWORD PTR [rdi+0x10],r15d
   14000ab3d:	jne    0x14000adad
   14000ab43:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ab48:	lea    rdx,[rsp+0x30]
   14000ab4d:	mov    r8,rsi
   14000ab50:	mov    rax,QWORD PTR [rcx]
   14000ab53:	mov    QWORD PTR [rdx],rax
   14000ab56:	mov    rax,QWORD PTR [rcx+0x8]
   14000ab5a:	mov    QWORD PTR [rdx+0x8],rax
   14000ab5e:	mov    rax,QWORD PTR [rcx+0x10]
   14000ab62:	mov    rcx,rbp
   14000ab65:	mov    QWORD PTR [rdx+0x10],rax
   14000ab69:	mov    rax,QWORD PTR [rbp+0x0]
   14000ab6d:	lea    rdx,[rsp+0x30]
   14000ab72:	call   QWORD PTR [rax+0x68]
   14000ab75:	jmp    0x14000ada3
   14000ab7a:	cmp    DWORD PTR [rdi+0x10],r15d
   14000ab7e:	jne    0x14000adad
   14000ab84:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ab89:	lea    rdx,[rsp+0x30]
   14000ab8e:	lea    r8,[rsi+0x8]
   14000ab92:	mov    rax,QWORD PTR [rcx]
   14000ab95:	mov    QWORD PTR [rdx],rax
   14000ab98:	mov    rax,QWORD PTR [rcx+0x8]
   14000ab9c:	mov    QWORD PTR [rdx+0x8],rax
   14000aba0:	mov    rax,QWORD PTR [rcx+0x10]
   14000aba4:	mov    rcx,rbp
   14000aba7:	mov    QWORD PTR [rdx+0x10],rax
   14000abab:	mov    rax,QWORD PTR [rbp+0x0]
   14000abaf:	lea    rdx,[rsp+0x30]
   14000abb4:	call   QWORD PTR [rax+0x60]
   14000abb7:	jmp    0x14000acec
   14000abbc:	test   al,0x2
   14000abbe:	je     0x14000ac02
   14000abc0:	cmp    DWORD PTR [rdi+0x10],r15d
   14000abc4:	jne    0x14000adad
   14000abca:	mov    rcx,QWORD PTR [rsp+0x50]
   14000abcf:	lea    rdx,[rsp+0x30]
   14000abd4:	lea    r8,[rsi+0x8]
   14000abd8:	mov    rax,QWORD PTR [rcx]
   14000abdb:	mov    QWORD PTR [rdx],rax
   14000abde:	mov    rax,QWORD PTR [rcx+0x8]
   14000abe2:	mov    QWORD PTR [rdx+0x8],rax
   14000abe6:	mov    rax,QWORD PTR [rcx+0x10]
   14000abea:	mov    rcx,rbp
   14000abed:	mov    QWORD PTR [rdx+0x10],rax
   14000abf1:	mov    rax,QWORD PTR [rbp+0x0]
   14000abf5:	lea    rdx,[rsp+0x30]
   14000abfa:	call   QWORD PTR [rax+0x58]
   14000abfd:	jmp    0x14000acec
   14000ac02:	test   al,0x4
   14000ac04:	je     0x14000aca5
   14000ac0a:	cmp    DWORD PTR [rdi+0x10],0x2
   14000ac0e:	jne    0x14000adad
   14000ac14:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ac19:	lea    rdx,[rsp+0x30]
   14000ac1e:	mov    rax,QWORD PTR [rcx]
   14000ac21:	mov    QWORD PTR [rdx],rax
   14000ac24:	mov    rax,QWORD PTR [rcx+0x8]
   14000ac28:	mov    QWORD PTR [rdx+0x8],rax
   14000ac2c:	mov    rax,QWORD PTR [rcx+0x10]
   14000ac30:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ac35:	cmp    WORD PTR [rcx],0x8
   14000ac39:	mov    QWORD PTR [rdx+0x10],rax
   14000ac3d:	je     0x14000ac64
   14000ac3f:	mov    rdx,rcx
   14000ac42:	lea    rcx,[rsp+0x78]
   14000ac47:	mov    r9w,0x3
   14000ac4c:	xor    r8d,r8d
   14000ac4f:	call   QWORD PTR [rip+0x26873]        # 0x1400314c8
   14000ac55:	test   eax,eax
   14000ac57:	mov    ebx,eax
   14000ac59:	js     0x14000ad5c
   14000ac5f:	lea    rcx,[rsp+0x78]
   14000ac64:	lea    rdx,[rsp+0x30]
   14000ac69:	lea    r8,[rsp+0x90]
   14000ac71:	mov    rax,QWORD PTR [rdx]
   14000ac74:	mov    QWORD PTR [r8],rax
   14000ac77:	mov    rax,QWORD PTR [rdx+0x8]
   14000ac7b:	mov    QWORD PTR [r8+0x8],rax
   14000ac7f:	mov    rax,QWORD PTR [rdx+0x10]
   14000ac83:	lea    rdx,[rsp+0x90]
   14000ac8b:	mov    QWORD PTR [r8+0x10],rax
   14000ac8f:	mov    r8,QWORD PTR [rcx+0x8]
   14000ac93:	mov    rax,QWORD PTR [rbp+0x0]
   14000ac97:	mov    rcx,rbp
   14000ac9a:	call   QWORD PTR [rax+0xd8]
   14000aca0:	jmp    0x14000ada3
   14000aca5:	test   al,0x2
   14000aca7:	je     0x14000ad00
   14000aca9:	cmp    DWORD PTR [rdi+0x10],r15d
   14000acad:	jne    0x14000adad
   14000acb3:	mov    rcx,QWORD PTR [rsp+0x50]
   14000acb8:	lea    rdx,[rsp+0x90]
   14000acc0:	lea    r8,[rsi+0x8]
   14000acc4:	mov    rax,QWORD PTR [rcx]
   14000acc7:	mov    QWORD PTR [rdx],rax
   14000acca:	mov    rax,QWORD PTR [rcx+0x8]
   14000acce:	mov    QWORD PTR [rdx+0x8],rax
   14000acd2:	mov    rax,QWORD PTR [rcx+0x10]
   14000acd6:	mov    rcx,rbp
   14000acd9:	mov    QWORD PTR [rdx+0x10],rax
   14000acdd:	mov    rax,QWORD PTR [rbp+0x0]
   14000ace1:	lea    rdx,[rsp+0x90]
   14000ace9:	call   QWORD PTR [rax+0x50]
   14000acec:	test   eax,eax
   14000acee:	mov    ebx,eax
   14000acf0:	js     0x14000ae23
   14000acf6:	mov    WORD PTR [rsi],0x8
   14000acfb:	jmp    0x14000ae23
   14000ad00:	test   al,0x4
   14000ad02:	je     0x14000ada7
   14000ad08:	cmp    DWORD PTR [rdi+0x10],0x2
   14000ad0c:	jne    0x14000adad
   14000ad12:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ad17:	lea    rdx,[rsp+0x90]
   14000ad1f:	mov    rax,QWORD PTR [rcx]
   14000ad22:	mov    QWORD PTR [rdx],rax
   14000ad25:	mov    rax,QWORD PTR [rcx+0x8]
   14000ad29:	mov    QWORD PTR [rdx+0x8],rax
   14000ad2d:	mov    rax,QWORD PTR [rcx+0x10]
   14000ad31:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ad36:	cmp    WORD PTR [rcx],0x8
   14000ad3a:	mov    QWORD PTR [rdx+0x10],rax
   14000ad3e:	je     0x14000ad6a
   14000ad40:	mov    rdx,rcx
   14000ad43:	lea    rcx,[rsp+0x78]
   14000ad48:	mov    r9w,0x3
   14000ad4d:	xor    r8d,r8d
   14000ad50:	call   QWORD PTR [rip+0x26772]        # 0x1400314c8
   14000ad56:	test   eax,eax
   14000ad58:	mov    ebx,eax
   14000ad5a:	jns    0x14000ad65
   14000ad5c:	mov    DWORD PTR [r12],r15d
   14000ad60:	jmp    0x14000ae23
   14000ad65:	lea    rcx,[rsp+0x78]
   14000ad6a:	lea    rdx,[rsp+0x90]
   14000ad72:	lea    r8,[rsp+0x30]
   14000ad77:	mov    rax,QWORD PTR [rdx]
   14000ad7a:	mov    QWORD PTR [r8],rax
   14000ad7d:	mov    rax,QWORD PTR [rdx+0x8]
   14000ad81:	mov    QWORD PTR [r8+0x8],rax
   14000ad85:	mov    rax,QWORD PTR [rdx+0x10]
   14000ad89:	lea    rdx,[rsp+0x30]
   14000ad8e:	mov    QWORD PTR [r8+0x10],rax
   14000ad92:	mov    r8,QWORD PTR [rcx+0x8]
   14000ad96:	mov    rax,QWORD PTR [rbp+0x0]
   14000ad9a:	mov    rcx,rbp
   14000ad9d:	call   QWORD PTR [rax+0xd0]
   14000ada3:	mov    ebx,eax
   14000ada5:	jmp    0x14000ae23
   14000ada7:	cmp    DWORD PTR [rdi+0x10],r15d
   14000adab:	je     0x14000adb4
   14000adad:	mov    ebx,0x8002000e
   14000adb2:	jmp    0x14000ae23
   14000adb4:	mov    rcx,QWORD PTR [rsp+0x50]
   14000adb9:	lea    rdx,[rsp+0x90]
   14000adc1:	lea    r8,[rsi+0x8]
   14000adc5:	mov    rax,QWORD PTR [rcx]
   14000adc8:	mov    QWORD PTR [rdx],rax
   14000adcb:	mov    rax,QWORD PTR [rcx+0x8]
   14000adcf:	mov    QWORD PTR [rdx+0x8],rax
   14000add3:	mov    rax,QWORD PTR [rcx+0x10]
   14000add7:	mov    rcx,rbp
   14000adda:	mov    QWORD PTR [rdx+0x10],rax
   14000adde:	mov    rax,QWORD PTR [rbp+0x0]
   14000ade2:	lea    rdx,[rsp+0x90]
   14000adea:	call   QWORD PTR [rax+0x48]
   14000aded:	jmp    0x14000ae18
   14000adef:	mov    rax,QWORD PTR [rbp+0x0]
   14000adf3:	lea    rdx,[rsi+0x8]
   14000adf7:	mov    rcx,rbp
   14000adfa:	call   QWORD PTR [rax+0x40]
   14000adfd:	test   eax,eax
   14000adff:	mov    ebx,eax
   14000ae01:	js     0x14000ae23
   14000ae03:	mov    WORD PTR [rsi],0x3
   14000ae08:	jmp    0x14000ae23
   14000ae0a:	mov    rax,QWORD PTR [rbp+0x0]
   14000ae0e:	lea    rdx,[rsi+0x8]
   14000ae12:	mov    rcx,rbp
   14000ae15:	call   QWORD PTR [rax+0x38]
   14000ae18:	test   eax,eax
   14000ae1a:	mov    ebx,eax
   14000ae1c:	js     0x14000ae23
   14000ae1e:	mov    WORD PTR [rsi],0x9
   14000ae23:	lea    rcx,[rsp+0x78]
   14000ae28:	call   QWORD PTR [rip+0x26692]        # 0x1400314c0
   14000ae2e:	mov    eax,ebx
   14000ae30:	lea    r11,[rsp+0xd0]
   14000ae38:	mov    rbx,QWORD PTR [r11+0x38]
   14000ae3c:	mov    rbp,QWORD PTR [r11+0x40]
   14000ae40:	mov    rsp,r11
   14000ae43:	pop    r15
   14000ae45:	pop    r13
   14000ae47:	pop    r12
   14000ae49:	pop    rdi
   14000ae4a:	pop    rsi
   14000ae4b:	ret    
   14000ae4c:	add    BYTE PTR [rdi-0x58bf0000],ah
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	leave  
   14000ae55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ae56:	add    BYTE PTR [rax],al
   14000ae58:	cmp    eax,0xe80000a8
   14000ae5d:	test   al,0x0
   14000ae5f:	add    BYTE PTR [rcx-0x57],bl
   14000ae62:	add    BYTE PTR [rax],al
   14000ae64:	sahf   
   14000ae65:	test   eax,0xa9b30000
   14000ae6a:	add    BYTE PTR [rax],al
   14000ae6c:	enter  0xa9,0x0
   14000ae70:	or     eax,0xb60000aa
   14000ae75:	stos   BYTE PTR es:[rdi],al
   14000ae76:	add    BYTE PTR [rax],al
   14000ae78:	clc    
   14000ae79:	stos   BYTE PTR es:[rdi],al
   14000ae7a:	add    BYTE PTR [rax],al
   14000ae7c:	cmp    DWORD PTR [rbx-0x54860000],ebp
   14000ae82:	add    BYTE PTR [rax],al
   14000ae84:	mov    esp,0xa50000ab
   14000ae89:	lods   al,BYTE PTR ds:[rsi]
   14000ae8a:	add    BYTE PTR [rax],al
   14000ae8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ae8d:	lods   eax,DWORD PTR ds:[rsi]
   14000ae8e:	add    BYTE PTR [rax],al
   14000ae90:	out    dx,eax
   14000ae91:	lods   eax,DWORD PTR ds:[rsi]
   14000ae92:	add    BYTE PTR [rax],al
   14000ae94:	or     ch,BYTE PTR [rsi-0x76b80000]
   14000ae9a:	pop    rsp
   14000ae9b:	and    al,0x8
   14000ae9d:	mov    QWORD PTR [rsp+0x10],rbp
   14000aea2:	mov    QWORD PTR [rsp+0x18],rsi
   14000aea7:	push   rdi
   14000aea8:	push   r12
   14000aeaa:	push   r13
   14000aeac:	push   r14
   14000aeae:	push   r15
   14000aeb0:	sub    rsp,0x20
   14000aeb4:	xor    ebx,ebx
   14000aeb6:	test   r8d,r8d
   14000aeb9:	mov    r12d,r8d
   14000aebc:	mov    rsi,rdx
   14000aebf:	je     0x14000af19
   14000aec1:	mov    rdi,QWORD PTR [rsp+0x70]
   14000aec6:	xor    r14b,r14b
   14000aec9:	lea    rbp,[rip+0x34990]        # 0x14003f860
   14000aed0:	lea    r13,[rip+0x348e9]        # 0x14003f7c0
   14000aed7:	mov    r15d,0x13
   14000aedd:	mov    rdx,QWORD PTR [r13+0x0]
   14000aee1:	mov    rcx,QWORD PTR [rsi]
   14000aee4:	call   QWORD PTR [rip+0x264fe]        # 0x1400313e8
   14000aeea:	test   eax,eax
   14000aeec:	jne    0x14000aef6
   14000aeee:	mov    eax,DWORD PTR [rbp+0x0]
   14000aef1:	mov    r14b,0x1
   14000aef4:	mov    DWORD PTR [rdi],eax
   14000aef6:	add    r13,0x8
   14000aefa:	add    rbp,0x4
   14000aefe:	sub    r15,0x1
   14000af02:	jne    0x14000aedd
   14000af04:	test   r14b,r14b
   14000af07:	je     0x14000af38
   14000af09:	add    ebx,0x1
   14000af0c:	add    rsi,0x8
   14000af10:	add    rdi,0x4
   14000af14:	cmp    ebx,r12d
   14000af17:	jb     0x14000aec6
   14000af19:	xor    eax,eax
   14000af1b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000af20:	mov    rbp,QWORD PTR [rsp+0x58]
   14000af25:	mov    rsi,QWORD PTR [rsp+0x60]
   14000af2a:	add    rsp,0x20
   14000af2e:	pop    r15
   14000af30:	pop    r14
   14000af32:	pop    r13
   14000af34:	pop    r12
   14000af36:	pop    rdi
   14000af37:	ret    
   14000af38:	mov    eax,0x80020006
   14000af3d:	jmp    0x14000af1b
   14000af3f:	int3   
   14000af40:	mov    QWORD PTR [rsp+0x8],rbx
   14000af45:	push   rdi
   14000af46:	sub    rsp,0x20
   14000af4a:	mov    rbx,rdx
   14000af4d:	mov    rdi,rcx
   14000af50:	call   0x1400089f0
   14000af55:	lea    rax,[rip+0x27d3c]        # 0x140032c98
   14000af5c:	lea    r11,[rip+0x27e55]        # 0x140032db8
   14000af63:	mov    QWORD PTR [rdi],r11
   14000af66:	mov    QWORD PTR [rdi+0x60],rax
   14000af6a:	lea    rax,[rip+0x27e0f]        # 0x140032d80
   14000af71:	mov    QWORD PTR [rdi+0x68],rax
   14000af75:	xor    eax,eax
   14000af77:	mov    QWORD PTR [rdi+0x40],rbx
   14000af7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000af80:	mov    BYTE PTR [rdi+0x48],al
   14000af83:	mov    QWORD PTR [rdi+0x58],rax
   14000af87:	mov    QWORD PTR [rdi+0x70],rax
   14000af8b:	mov    DWORD PTR [rdi+0x78],eax
   14000af8e:	mov    QWORD PTR [rdi+0x80],rax
   14000af95:	mov    DWORD PTR [rdi+0x88],eax
   14000af9b:	mov    QWORD PTR [rdi+0x90],rax
   14000afa2:	mov    QWORD PTR [rdi+0x98],rax
   14000afa9:	mov    QWORD PTR [rdi+0xa0],rax
   14000afb0:	mov    rax,rdi
   14000afb3:	add    rsp,0x20
   14000afb7:	pop    rdi
   14000afb8:	ret    
   14000afb9:	int3   
   14000afba:	int3   
   14000afbb:	int3   
   14000afbc:	ret    0x0
   14000afbf:	int3   
   14000afc0:	sub    rsp,0x28
   14000afc4:	cmp    QWORD PTR [rcx+0x40],0x0
   14000afc9:	mov    rax,QWORD PTR [rcx]
   14000afcc:	je     0x14000afd6
   14000afce:	call   QWORD PTR [rax+0xc0]
   14000afd4:	jmp    0x14000afdc
   14000afd6:	call   QWORD PTR [rax+0x228]
   14000afdc:	add    rsp,0x28
   14000afe0:	ret    
   14000afe1:	int3   
   14000afe2:	int3   
   14000afe3:	int3   
   14000afe4:	mov    rax,rsp
   14000afe7:	mov    QWORD PTR [rax+0x8],rbx
   14000afeb:	mov    QWORD PTR [rax+0x10],rbp
   14000afef:	mov    QWORD PTR [rax+0x18],rsi
   14000aff3:	push   rdi
   14000aff4:	sub    rsp,0x30
   14000aff8:	mov    rbx,rcx
   14000affb:	mov    rcx,QWORD PTR [rcx+0x80]
   14000b002:	mov    rdi,r9
   14000b005:	test   rcx,rcx
   14000b008:	mov    rsi,r8
   14000b00b:	mov    ebp,edx
   14000b00d:	je     0x14000b01b
   14000b00f:	mov    QWORD PTR [rax-0x18],r9
   14000b013:	mov    r9,r8
   14000b016:	mov    r8d,edx
   14000b019:	jmp    0x14000b04e
   14000b01b:	mov    rax,QWORD PTR [rbx]
   14000b01e:	mov    rcx,rbx
   14000b021:	call   QWORD PTR [rax+0x1e0]
   14000b027:	mov    rcx,QWORD PTR [rax]
   14000b02a:	test   rcx,rcx
   14000b02d:	jne    0x14000b043
   14000b02f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000b033:	mov    r9,rdi
   14000b036:	mov    r8,rsi
   14000b039:	mov    edx,ebp
   14000b03b:	call   QWORD PTR [rip+0x2660f]        # 0x140031650
   14000b041:	jmp    0x14000b058
   14000b043:	mov    QWORD PTR [rsp+0x20],rdi
   14000b048:	mov    r9,rsi
   14000b04b:	mov    r8d,ebp
   14000b04e:	mov    rdx,QWORD PTR [rbx+0x40]
   14000b052:	call   QWORD PTR [rip+0x26600]        # 0x140031658
   14000b058:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b05d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b062:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b067:	add    rsp,0x30
   14000b06b:	pop    rdi
   14000b06c:	ret    
   14000b06d:	int3   
   14000b06e:	int3   
   14000b06f:	int3   
   14000b070:	lea    rax,[rcx+0x80]
   14000b077:	ret    
   14000b078:	mov    QWORD PTR [rsp+0x8],rbx
   14000b07d:	push   rdi
   14000b07e:	sub    rsp,0x20
   14000b082:	mov    rbx,rdx
   14000b085:	mov    rdi,rcx
   14000b088:	call   0x1400131d0
   14000b08d:	mov    r8,QWORD PTR [rax+0x60]
   14000b091:	test   r8,r8
   14000b094:	je     0x14000b09f
   14000b096:	mov    rdx,rdi
   14000b099:	mov    rcx,rbx
   14000b09c:	call   r8
   14000b09f:	xor    eax,eax
   14000b0a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0a6:	add    rsp,0x20
   14000b0aa:	pop    rdi
   14000b0ab:	ret    
   14000b0ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0b1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0b6:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0bb:	push   rdi
   14000b0bc:	sub    rsp,0x20
   14000b0c0:	mov    rbp,rcx
   14000b0c3:	mov    rcx,QWORD PTR [rcx+0x40]
   14000b0c7:	mov    rbx,r8
   14000b0ca:	call   0x140015c94
   14000b0cf:	test   rax,rax
   14000b0d2:	mov    rsi,rax
   14000b0d5:	je     0x14000b129
   14000b0d7:	mov    rcx,rax
   14000b0da:	call   QWORD PTR [rip+0x26568]        # 0x140031648
   14000b0e0:	test   rbx,rbx
   14000b0e3:	movzx  edi,ax
   14000b0e6:	je     0x14000b124
   14000b0e8:	cmp    DWORD PTR [rbx],0x38
   14000b0eb:	jb     0x14000b124
   14000b0ed:	mov    rax,QWORD PTR [rbp+0x40]
   14000b0f1:	or     DWORD PTR [rbx+0x4],0x1
   14000b0f5:	or     QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000b0fa:	xor    r9d,r9d
   14000b0fd:	xor    r8d,r8d
   14000b100:	mov    edx,0x87
   14000b105:	mov    rcx,rsi
   14000b108:	mov    QWORD PTR [rbx+0x8],rax
   14000b10c:	mov    QWORD PTR [rbx+0x10],rsi
   14000b110:	call   QWORD PTR [rip+0x266b2]        # 0x1400317c8
   14000b116:	bt     rax,0xd
   14000b11b:	jb     0x14000b124
   14000b11d:	or     DWORD PTR [rbx+0x4],0x80000002
   14000b124:	mov    rax,rdi
   14000b127:	jmp    0x14000b12d
   14000b129:	or     rax,0xffffffffffffffff
   14000b12d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b132:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b137:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b13c:	add    rsp,0x20
   14000b140:	pop    rdi
   14000b141:	ret    
   14000b142:	int3   
   14000b143:	int3   
   14000b144:	xchg   ax,ax
   14000b146:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b14b:	je     0x14000b16d
   14000b14d:	cmp    DWORD PTR [rcx],edx
   14000b14f:	jne    0x14000b163
   14000b151:	cmp    DWORD PTR [rcx+0x4],r8d
   14000b155:	jne    0x14000b163
   14000b157:	cmp    r9d,DWORD PTR [rcx+0x8]
   14000b15b:	jb     0x14000b163
   14000b15d:	cmp    r9d,DWORD PTR [rcx+0xc]
   14000b161:	jbe    0x14000b169
   14000b163:	add    rcx,0x20
   14000b167:	jmp    0x14000b146
   14000b169:	mov    rax,rcx
   14000b16c:	ret    
   14000b16d:	xor    eax,eax
   14000b16f:	ret    
   14000b170:	mov    r11,rsp
   14000b173:	mov    QWORD PTR [r11+0x10],rbx
   14000b177:	mov    QWORD PTR [r11+0x18],rbp
   14000b17b:	mov    QWORD PTR [r11+0x20],rsi
   14000b17f:	push   rdi
   14000b180:	sub    rsp,0x30
   14000b184:	mov    rax,QWORD PTR [rcx]
   14000b187:	and    QWORD PTR [r11+0x8],0x0
   14000b18c:	mov    rbx,rcx
   14000b18f:	lea    rcx,[r11+0x8]
   14000b193:	mov    rdi,r9
   14000b196:	mov    rsi,r8
   14000b199:	mov    QWORD PTR [r11-0x18],rcx
   14000b19d:	mov    rcx,rbx
   14000b1a0:	mov    ebp,edx
   14000b1a2:	call   QWORD PTR [rax+0x218]
   14000b1a8:	test   eax,eax
   14000b1aa:	jne    0x14000b1c2
   14000b1ac:	mov    rax,QWORD PTR [rbx]
   14000b1af:	mov    r9,rdi
   14000b1b2:	mov    r8,rsi
   14000b1b5:	mov    edx,ebp
   14000b1b7:	mov    rcx,rbx
   14000b1ba:	call   QWORD PTR [rax+0x220]
   14000b1c0:	jmp    0x14000b1c7
   14000b1c2:	mov    rax,QWORD PTR [rsp+0x40]
   14000b1c7:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b1cc:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b1d1:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b1d6:	add    rsp,0x30
   14000b1da:	pop    rdi
   14000b1db:	ret    
   14000b1dc:	rex push rbx
   14000b1de:	sub    rsp,0x20
   14000b1e2:	mov    rbx,rcx
   14000b1e5:	call   0x1400089c0
   14000b1ea:	lea    r11,[rip+0x27e37]        # 0x140033028
   14000b1f1:	mov    DWORD PTR [rbx+0x40],0x1
   14000b1f8:	mov    rax,rbx
   14000b1fb:	mov    QWORD PTR [rbx],r11
   14000b1fe:	add    rsp,0x20
   14000b202:	pop    rbx
   14000b203:	ret    
   14000b204:	mov    DWORD PTR [rcx+0x40],edx
   14000b207:	mov    DWORD PTR [rcx+0x28],0x1
   14000b20e:	ret    
   14000b20f:	int3   
   14000b210:	mov    QWORD PTR [rsp+0x8],rbx
   14000b215:	mov    QWORD PTR [rsp+0x10],rbp
   14000b21a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b21f:	push   rdi
   14000b220:	sub    rsp,0x20
   14000b224:	mov    ebx,r8d
   14000b227:	mov    rbp,rdx
   14000b22a:	mov    rsi,rcx
   14000b22d:	call   0x1400132e8
   14000b232:	test   ebx,ebx
   14000b234:	mov    edi,eax
   14000b236:	jne    0x14000b23c
   14000b238:	btr    edi,0x9
   14000b23c:	mov    rcx,rsi
   14000b23f:	call   0x1400132b4
   14000b244:	mov    r9d,edi
   14000b247:	xor    r8d,r8d
   14000b24a:	mov    edx,eax
   14000b24c:	mov    rcx,rbp
   14000b24f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b254:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b259:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b25e:	add    rsp,0x20
   14000b262:	pop    rdi
   14000b263:	rex.W jmp QWORD PTR [rip+0x263c6]        # 0x140031630
   14000b26a:	int3   
   14000b26b:	int3   
   14000b26c:	lea    rax,[rip+0x2771d]        # 0x140032990
   14000b273:	ret    
   14000b274:	rex push rbx
   14000b276:	sub    rsp,0x30
   14000b27a:	mov    rax,QWORD PTR [rsp+0x68]
   14000b27f:	mov    r10d,r9d
   14000b282:	mov    r9d,DWORD PTR [rsp+0x60]
   14000b287:	mov    r11,r8
   14000b28a:	mov    rcx,rdx
   14000b28d:	mov    r8d,r10d
   14000b290:	mov    rdx,r11
   14000b293:	mov    QWORD PTR [rsp+0x20],rax
   14000b298:	call   0x14000ae98
   14000b29d:	add    rsp,0x30
   14000b2a1:	pop    rbx
   14000b2a2:	ret    
   14000b2a3:	int3   
   14000b2a4:	test   rdx,rdx
   14000b2a7:	jne    0x14000b2af
   14000b2a9:	mov    eax,0x80004003
   14000b2ae:	ret    
   14000b2af:	mov    DWORD PTR [rdx],0x1
   14000b2b5:	xor    eax,eax
   14000b2b7:	ret    
   14000b2b8:	test   rdx,rdx
   14000b2bb:	jne    0x14000b2c3
   14000b2bd:	mov    eax,0x80004003
   14000b2c2:	ret    
   14000b2c3:	and    QWORD PTR [rdx],0x0
   14000b2c7:	mov    eax,0x80004001
   14000b2cc:	ret    
   14000b2cd:	int3   
   14000b2ce:	int3   
   14000b2cf:	int3   
   14000b2d0:	sub    rsp,0x28
   14000b2d4:	lea    r9,[rcx+0x50]
   14000b2d8:	cmp    QWORD PTR [r9],0x0
   14000b2dc:	jne    0x14000b2f7
   14000b2de:	mov    rcx,QWORD PTR [rcx+0x40]
   14000b2e2:	lea    r8,[rip+0x27d5f]        # 0x140033048
   14000b2e9:	mov    edx,0xfffffffc
   14000b2ee:	call   0x14003024f
   14000b2f3:	test   eax,eax
   14000b2f5:	js     0x14000b2f9
   14000b2f7:	xor    eax,eax
   14000b2f9:	add    rsp,0x28
   14000b2fd:	ret    
   14000b2fe:	int3   
   14000b2ff:	int3   
   14000b300:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b304:	mov    rax,QWORD PTR [rcx]
   14000b307:	rex.W jmp QWORD PTR [rax+0x38]
   14000b30b:	int3   
   14000b30c:	jmp    0x140006160
   14000b311:	int3   
   14000b312:	int3   
   14000b313:	int3   
   14000b314:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b318:	mov    rax,QWORD PTR [rcx]
   14000b31b:	rex.W jmp QWORD PTR [rax+0x40]
   14000b31f:	int3   
   14000b320:	sub    rsp,0x48
   14000b324:	mov    rax,QWORD PTR [rdx]
   14000b327:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b32b:	lea    r9,[rsp+0x20]
   14000b330:	mov    QWORD PTR [r9],rax
   14000b333:	mov    rax,QWORD PTR [rdx+0x8]
   14000b337:	mov    QWORD PTR [r9+0x8],rax
   14000b33b:	mov    rax,QWORD PTR [rdx+0x10]
   14000b33f:	lea    rdx,[rsp+0x20]
   14000b344:	mov    QWORD PTR [r9+0x10],rax
   14000b348:	mov    rax,QWORD PTR [rcx]
   14000b34b:	call   QWORD PTR [rax+0x48]
   14000b34e:	add    rsp,0x48
   14000b352:	ret    
   14000b353:	int3   
   14000b354:	sub    rsp,0x48
   14000b358:	mov    rax,QWORD PTR [rdx]
   14000b35b:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b35f:	lea    r9,[rsp+0x20]
   14000b364:	mov    QWORD PTR [r9],rax
   14000b367:	mov    rax,QWORD PTR [rdx+0x8]
   14000b36b:	mov    QWORD PTR [r9+0x8],rax
   14000b36f:	mov    rax,QWORD PTR [rdx+0x10]
   14000b373:	lea    rdx,[rsp+0x20]
   14000b378:	mov    QWORD PTR [r9+0x10],rax
   14000b37c:	mov    rax,QWORD PTR [rcx]
   14000b37f:	call   QWORD PTR [rax+0x50]
   14000b382:	add    rsp,0x48
   14000b386:	ret    
   14000b387:	int3   
   14000b388:	sub    rsp,0x48
   14000b38c:	mov    rax,QWORD PTR [rdx]
   14000b38f:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b393:	lea    r9,[rsp+0x20]
   14000b398:	mov    QWORD PTR [r9],rax
   14000b39b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b39f:	mov    QWORD PTR [r9+0x8],rax
   14000b3a3:	mov    rax,QWORD PTR [rdx+0x10]
   14000b3a7:	lea    rdx,[rsp+0x20]
   14000b3ac:	mov    QWORD PTR [r9+0x10],rax
   14000b3b0:	mov    rax,QWORD PTR [rcx]
   14000b3b3:	call   QWORD PTR [rax+0x58]
   14000b3b6:	add    rsp,0x48
   14000b3ba:	ret    
   14000b3bb:	int3   
   14000b3bc:	sub    rsp,0x48
   14000b3c0:	mov    rax,QWORD PTR [rdx]
   14000b3c3:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b3c7:	lea    r9,[rsp+0x20]
   14000b3cc:	mov    QWORD PTR [r9],rax
   14000b3cf:	mov    rax,QWORD PTR [rdx+0x8]
   14000b3d3:	mov    QWORD PTR [r9+0x8],rax
   14000b3d7:	mov    rax,QWORD PTR [rdx+0x10]
   14000b3db:	lea    rdx,[rsp+0x20]
   14000b3e0:	mov    QWORD PTR [r9+0x10],rax
   14000b3e4:	mov    rax,QWORD PTR [rcx]
   14000b3e7:	call   QWORD PTR [rax+0x60]
   14000b3ea:	add    rsp,0x48
   14000b3ee:	ret    
   14000b3ef:	int3   
   14000b3f0:	sub    rsp,0x48
   14000b3f4:	mov    rax,QWORD PTR [rdx]
   14000b3f7:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b3fb:	lea    r9,[rsp+0x20]
   14000b400:	mov    QWORD PTR [r9],rax
   14000b403:	mov    rax,QWORD PTR [rdx+0x8]
   14000b407:	mov    QWORD PTR [r9+0x8],rax
   14000b40b:	mov    rax,QWORD PTR [rdx+0x10]
   14000b40f:	lea    rdx,[rsp+0x20]
   14000b414:	mov    QWORD PTR [r9+0x10],rax
   14000b418:	mov    rax,QWORD PTR [rcx]
   14000b41b:	call   QWORD PTR [rax+0x68]
   14000b41e:	add    rsp,0x48
   14000b422:	ret    
   14000b423:	int3   
   14000b424:	sub    rsp,0x48
   14000b428:	mov    rax,QWORD PTR [rdx]
   14000b42b:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b42f:	lea    r9,[rsp+0x20]
   14000b434:	mov    QWORD PTR [r9],rax
   14000b437:	mov    rax,QWORD PTR [rdx+0x8]
   14000b43b:	mov    QWORD PTR [r9+0x8],rax
   14000b43f:	mov    rax,QWORD PTR [rdx+0x10]
   14000b443:	lea    rdx,[rsp+0x20]
   14000b448:	mov    QWORD PTR [r9+0x10],rax
   14000b44c:	mov    rax,QWORD PTR [rcx]
   14000b44f:	call   QWORD PTR [rax+0x70]
   14000b452:	add    rsp,0x48
   14000b456:	ret    
   14000b457:	int3   
   14000b458:	sub    rsp,0x48
   14000b45c:	mov    rax,QWORD PTR [rdx]
   14000b45f:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b463:	lea    r9,[rsp+0x20]
   14000b468:	mov    QWORD PTR [r9],rax
   14000b46b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b46f:	mov    QWORD PTR [r9+0x8],rax
   14000b473:	mov    rax,QWORD PTR [rdx+0x10]
   14000b477:	lea    rdx,[rsp+0x20]
   14000b47c:	mov    QWORD PTR [r9+0x10],rax
   14000b480:	mov    rax,QWORD PTR [rcx]
   14000b483:	call   QWORD PTR [rax+0x78]
   14000b486:	add    rsp,0x48
   14000b48a:	ret    
   14000b48b:	int3   
   14000b48c:	sub    rsp,0x48
   14000b490:	mov    rax,QWORD PTR [r8]
   14000b493:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b497:	lea    r10,[rsp+0x20]
   14000b49c:	mov    QWORD PTR [r10],rax
   14000b49f:	mov    rax,QWORD PTR [r8+0x8]
   14000b4a3:	mov    QWORD PTR [r10+0x8],rax
   14000b4a7:	mov    rax,QWORD PTR [r8+0x10]
   14000b4ab:	lea    r8,[rsp+0x20]
   14000b4b0:	mov    QWORD PTR [r10+0x10],rax
   14000b4b4:	mov    rax,QWORD PTR [rcx]
   14000b4b7:	call   QWORD PTR [rax+0x80]
   14000b4bd:	add    rsp,0x48
   14000b4c1:	ret    
   14000b4c2:	int3   
   14000b4c3:	int3   
   14000b4c4:	sub    rsp,0x48
   14000b4c8:	mov    rax,QWORD PTR [rdx]
   14000b4cb:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b4cf:	lea    r9,[rsp+0x20]
   14000b4d4:	mov    QWORD PTR [r9],rax
   14000b4d7:	mov    rax,QWORD PTR [rdx+0x8]
   14000b4db:	mov    QWORD PTR [r9+0x8],rax
   14000b4df:	mov    rax,QWORD PTR [rdx+0x10]
   14000b4e3:	lea    rdx,[rsp+0x20]
   14000b4e8:	mov    QWORD PTR [r9+0x10],rax
   14000b4ec:	mov    rax,QWORD PTR [rcx]
   14000b4ef:	call   QWORD PTR [rax+0x88]
   14000b4f5:	add    rsp,0x48
   14000b4f9:	ret    
   14000b4fa:	int3   
   14000b4fb:	int3   
   14000b4fc:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b500:	mov    rax,QWORD PTR [rcx]
   14000b503:	rex.W jmp QWORD PTR [rax+0x90]
   14000b50a:	int3   
   14000b50b:	int3   
   14000b50c:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b510:	mov    rax,QWORD PTR [rcx]
   14000b513:	rex.W jmp QWORD PTR [rax+0x98]
   14000b51a:	int3   
   14000b51b:	int3   
   14000b51c:	sub    rsp,0x48
   14000b520:	mov    rax,QWORD PTR [rdx]
   14000b523:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b527:	lea    r9,[rsp+0x20]
   14000b52c:	mov    QWORD PTR [r9],rax
   14000b52f:	mov    rax,QWORD PTR [rdx+0x8]
   14000b533:	mov    QWORD PTR [r9+0x8],rax
   14000b537:	mov    rax,QWORD PTR [rdx+0x10]
   14000b53b:	lea    rdx,[rsp+0x20]
   14000b540:	mov    QWORD PTR [r9+0x10],rax
   14000b544:	mov    rax,QWORD PTR [rcx]
   14000b547:	call   QWORD PTR [rax+0xa0]
   14000b54d:	add    rsp,0x48
   14000b551:	ret    
   14000b552:	int3   
   14000b553:	int3   
   14000b554:	sub    rsp,0x48
   14000b558:	mov    rax,QWORD PTR [r8]
   14000b55b:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b55f:	lea    r9,[rsp+0x20]
   14000b564:	mov    QWORD PTR [r9],rax
   14000b567:	mov    rax,QWORD PTR [r8+0x8]
   14000b56b:	mov    QWORD PTR [r9+0x8],rax
   14000b56f:	mov    rax,QWORD PTR [r8+0x10]
   14000b573:	lea    r8,[rsp+0x20]
   14000b578:	mov    QWORD PTR [r9+0x10],rax
   14000b57c:	mov    rax,QWORD PTR [rcx]
   14000b57f:	call   QWORD PTR [rax+0xa8]
   14000b585:	add    rsp,0x48
   14000b589:	ret    
   14000b58a:	int3   
   14000b58b:	int3   
   14000b58c:	sub    rsp,0x58
   14000b590:	mov    r10,QWORD PTR [rsp+0x88]
   14000b598:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b59c:	lea    r11,[rsp+0x30]
   14000b5a1:	mov    rax,QWORD PTR [r10]
   14000b5a4:	mov    QWORD PTR [r11],rax
   14000b5a7:	mov    rax,QWORD PTR [r10+0x8]
   14000b5ab:	mov    QWORD PTR [r11+0x8],rax
   14000b5af:	mov    rax,QWORD PTR [r10+0x10]
   14000b5b3:	mov    r10,QWORD PTR [rcx]
   14000b5b6:	mov    QWORD PTR [r11+0x10],rax
   14000b5ba:	lea    rax,[rsp+0x30]
   14000b5bf:	mov    QWORD PTR [rsp+0x28],rax
   14000b5c4:	mov    rax,QWORD PTR [rsp+0x80]
   14000b5cc:	mov    QWORD PTR [rsp+0x20],rax
   14000b5d1:	call   QWORD PTR [r10+0xb0]
   14000b5d8:	add    rsp,0x58
   14000b5dc:	ret    
   14000b5dd:	int3   
   14000b5de:	int3   
   14000b5df:	int3   
   14000b5e0:	sub    rsp,0x48
   14000b5e4:	mov    rax,QWORD PTR [r8]
   14000b5e7:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b5eb:	lea    r10,[rsp+0x20]
   14000b5f0:	mov    QWORD PTR [r10],rax
   14000b5f3:	mov    rax,QWORD PTR [r8+0x8]
   14000b5f7:	mov    QWORD PTR [r10+0x8],rax
   14000b5fb:	mov    rax,QWORD PTR [r8+0x10]
   14000b5ff:	lea    r8,[rsp+0x20]
   14000b604:	mov    QWORD PTR [r10+0x10],rax
   14000b608:	mov    rax,QWORD PTR [rcx]
   14000b60b:	call   QWORD PTR [rax+0xb8]
   14000b611:	add    rsp,0x48
   14000b615:	ret    
   14000b616:	int3   
   14000b617:	int3   
   14000b618:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b61c:	mov    rax,QWORD PTR [rcx]
   14000b61f:	rex.W jmp QWORD PTR [rax+0xc0]
   14000b626:	int3   
   14000b627:	int3   
   14000b628:	sub    rsp,0x48
   14000b62c:	mov    rax,QWORD PTR [rdx]
   14000b62f:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b633:	lea    r8,[rsp+0x20]
   14000b638:	mov    QWORD PTR [r8],rax
   14000b63b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b63f:	mov    QWORD PTR [r8+0x8],rax
   14000b643:	mov    rax,QWORD PTR [rdx+0x10]
   14000b647:	lea    rdx,[rsp+0x20]
   14000b64c:	mov    QWORD PTR [r8+0x10],rax
   14000b650:	mov    rax,QWORD PTR [rcx]
   14000b653:	call   QWORD PTR [rax+0xc8]
   14000b659:	add    rsp,0x48
   14000b65d:	ret    
   14000b65e:	int3   
   14000b65f:	int3   
   14000b660:	sub    rsp,0x48
   14000b664:	mov    rax,QWORD PTR [rdx]
   14000b667:	mov    rcx,QWORD PTR [rcx+0x50]
   14000b66b:	lea    r9,[rsp+0x20]
   14000b670:	mov    QWORD PTR [r9],rax
   14000b673:	mov    rax,QWORD PTR [rdx+0x8]
   14000b677:	mov    QWORD PTR [r9+0x8],rax
   14000b67b:	mov    rax,QWORD PTR [rdx+0x10]
   14000b67f:	lea    rdx,[rsp+0x20]
   14000b684:	mov    QWORD PTR [r9+0x10],rax
   14000b688:	mov    rax,QWORD PTR [rcx]
   14000b68b:	call   QWORD PTR [rax+0xd0]
   14000b691:	add    rsp,0x48
   14000b695:	ret    
   14000b696:	int3   
   14000b697:	int3   
   14000b698:	mov    QWORD PTR [rcx+0x58],rdx
   14000b69c:	xor    eax,eax
   14000b69e:	ret    
   14000b69f:	int3   
   14000b6a0:	mov    eax,DWORD PTR [rcx+0x78]
   14000b6a3:	and    eax,0x10
   14000b6a6:	ret    
   14000b6a7:	int3   
   14000b6a8:	xor    eax,eax
   14000b6aa:	ret    
   14000b6ab:	int3   
   14000b6ac:	mov    edx,DWORD PTR [rcx+0x128]
   14000b6b2:	xor    eax,eax
   14000b6b4:	cmp    edx,eax
   14000b6b6:	je     0x14000b6cd
   14000b6b8:	cmp    edx,0xe002
   14000b6be:	je     0x14000b6cd
   14000b6c0:	cmp    edx,0xe001
   14000b6c6:	je     0x14000b6cd
   14000b6c8:	mov    eax,0x1
   14000b6cd:	ret    
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	sub    rsp,0x28
   14000b6d4:	test   rdx,rdx
   14000b6d7:	jne    0x14000b6df
   14000b6d9:	call   0x140006408
   14000b6de:	int3   
   14000b6df:	and    QWORD PTR [rdx],0x0
   14000b6e3:	mov    eax,0x1
   14000b6e8:	add    rsp,0x28
   14000b6ec:	ret    
   14000b6ed:	int3   
   14000b6ee:	int3   
   14000b6ef:	int3   
   14000b6f0:	sub    rsp,0x28
   14000b6f4:	test   r8,r8
   14000b6f7:	jne    0x14000b6ff
   14000b6f9:	call   0x140006408
   14000b6fe:	int3   
   14000b6ff:	and    QWORD PTR [r8],0x0
   14000b703:	mov    eax,0x1
   14000b708:	add    rsp,0x28
   14000b70c:	ret    
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	lea    rax,[rip+0x27289]        # 0x1400329a0
   14000b717:	ret    
   14000b718:	mov    QWORD PTR [rsp+0x8],rbx
   14000b71d:	mov    QWORD PTR [rsp+0x20],rsi
   14000b722:	push   rdi
   14000b723:	sub    rsp,0x30
   14000b727:	mov    rdi,rcx
   14000b72a:	and    QWORD PTR [rsp+0x50],0x0
   14000b730:	call   0x1400131d0
   14000b735:	lea    rdx,[rsp+0x50]
   14000b73a:	mov    rcx,QWORD PTR [rax+0xd8]
   14000b741:	call   0x140012540
   14000b746:	mov    ebx,eax
   14000b748:	mov    DWORD PTR [rsp+0x48],eax
   14000b74c:	and    WORD PTR [rsp+0x20],0x0
   14000b752:	test   eax,eax
   14000b754:	je     0x14000b79f
   14000b756:	mov    rcx,rdi
   14000b759:	call   QWORD PTR [rip+0x25ec1]        # 0x140031620
   14000b75f:	movzx  edi,ax
   14000b762:	mov    WORD PTR [rsp+0x20],ax
   14000b767:	cmp    ebx,0x2
   14000b76a:	je     0x14000b79c
   14000b76c:	xor    ebx,ebx
   14000b76e:	test   di,di
   14000b771:	sete   bl
   14000b774:	test   ebx,ebx
   14000b776:	je     0x14000b782
   14000b778:	call   QWORD PTR [rip+0x25cfa]        # 0x140031478
   14000b77e:	mov    esi,eax
   14000b780:	jmp    0x14000b784
   14000b782:	xor    esi,esi
   14000b784:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b789:	xor    ecx,ecx
   14000b78b:	call   0x140012524
   14000b790:	test   ebx,ebx
   14000b792:	je     0x14000b79c
   14000b794:	mov    ecx,esi
   14000b796:	call   QWORD PTR [rip+0x25c64]        # 0x140031400
   14000b79c:	mov    ax,di
   14000b79f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b7a4:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b7a9:	add    rsp,0x30
   14000b7ad:	pop    rdi
   14000b7ae:	ret    
   14000b7af:	int3   
   14000b7b0:	int3   
   14000b7b1:	int3   
   14000b7b2:	int3   
   14000b7b3:	int3   
   14000b7b4:	int3   
   14000b7b5:	int3   
   14000b7b6:	int3   
   14000b7b7:	int3   
   14000b7b8:	rex push rbx
   14000b7ba:	push   rbp
   14000b7bb:	push   rdi
   14000b7bc:	sub    rsp,0x20
   14000b7c0:	mov    rbp,rdx
   14000b7c3:	cmp    DWORD PTR [rbp+0x48],0x2
   14000b7c7:	je     0x14000b7f9
   14000b7c9:	xor    ebx,ebx
   14000b7cb:	cmp    WORD PTR [rbp+0x20],bx
   14000b7cf:	sete   bl
   14000b7d2:	test   ebx,ebx
   14000b7d4:	je     0x14000b7e0
   14000b7d6:	call   QWORD PTR [rip+0x25c9c]        # 0x140031478
   14000b7dc:	mov    edi,eax
   14000b7de:	jmp    0x14000b7e2
   14000b7e0:	xor    edi,edi
   14000b7e2:	mov    rdx,QWORD PTR [rbp+0x50]
   14000b7e6:	xor    ecx,ecx
   14000b7e8:	call   0x140012524
   14000b7ed:	test   ebx,ebx
   14000b7ef:	je     0x14000b7f9
   14000b7f1:	mov    ecx,edi
   14000b7f3:	call   QWORD PTR [rip+0x25c07]        # 0x140031400
   14000b7f9:	add    rsp,0x20
   14000b7fd:	pop    rdi
   14000b7fe:	pop    rbp
   14000b7ff:	pop    rbx
   14000b800:	ret    
   14000b801:	int3   
   14000b802:	int3   
   14000b803:	int3   
   14000b804:	mov    rax,rsp
   14000b807:	mov    QWORD PTR [rax+0x8],rbx
   14000b80b:	mov    QWORD PTR [rax+0x10],rsi
   14000b80f:	mov    QWORD PTR [rax+0x18],rdi
   14000b813:	push   r12
   14000b815:	sub    rsp,0x30
   14000b819:	mov    rdi,r8
   14000b81c:	mov    rsi,rdx
   14000b81f:	mov    r12,rcx
   14000b822:	and    QWORD PTR [rax-0x10],0x0
   14000b827:	call   0x1400131d0
   14000b82c:	lea    rdx,[rsp+0x28]
   14000b831:	mov    rcx,QWORD PTR [rax+0xd8]
   14000b838:	call   0x140012540
   14000b83d:	mov    ebx,eax
   14000b83f:	mov    DWORD PTR [rsp+0x58],eax
   14000b843:	and    DWORD PTR [rsp+0x20],0x0
   14000b848:	test   eax,eax
   14000b84a:	je     0x14000b897
   14000b84c:	mov    r8,rdi
   14000b84f:	mov    rdx,rsi
   14000b852:	mov    rcx,r12
   14000b855:	call   QWORD PTR [rip+0x25dbd]        # 0x140031618
   14000b85b:	mov    esi,eax
   14000b85d:	mov    DWORD PTR [rsp+0x20],eax
   14000b861:	cmp    ebx,0x2
   14000b864:	je     0x14000b895
   14000b866:	xor    ebx,ebx
   14000b868:	test   eax,eax
   14000b86a:	sete   bl
   14000b86d:	test   ebx,ebx
   14000b86f:	je     0x14000b87b
   14000b871:	call   QWORD PTR [rip+0x25c01]        # 0x140031478
   14000b877:	mov    edi,eax
   14000b879:	jmp    0x14000b87d
   14000b87b:	xor    edi,edi
   14000b87d:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b882:	xor    ecx,ecx
   14000b884:	call   0x140012524
   14000b889:	test   ebx,ebx
   14000b88b:	je     0x14000b895
   14000b88d:	mov    ecx,edi
   14000b88f:	call   QWORD PTR [rip+0x25b6b]        # 0x140031400
   14000b895:	mov    eax,esi
   14000b897:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b89c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b8a1:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b8a6:	add    rsp,0x30
   14000b8aa:	pop    r12
   14000b8ac:	ret    
   14000b8ad:	int3   
   14000b8ae:	int3   
   14000b8af:	int3   
   14000b8b0:	int3   
   14000b8b1:	int3   
   14000b8b2:	int3   
   14000b8b3:	int3   
   14000b8b4:	rex push rbx
   14000b8b6:	push   rbp
   14000b8b7:	push   rdi
   14000b8b8:	sub    rsp,0x20
   14000b8bc:	mov    rbp,rdx
   14000b8bf:	cmp    DWORD PTR [rbp+0x58],0x2
   14000b8c3:	je     0x14000b8f4
   14000b8c5:	xor    ebx,ebx
   14000b8c7:	cmp    DWORD PTR [rbp+0x20],ebx
   14000b8ca:	sete   bl
   14000b8cd:	test   ebx,ebx
   14000b8cf:	je     0x14000b8db
   14000b8d1:	call   QWORD PTR [rip+0x25ba1]        # 0x140031478
   14000b8d7:	mov    edi,eax
   14000b8d9:	jmp    0x14000b8dd
   14000b8db:	xor    edi,edi
   14000b8dd:	mov    rdx,QWORD PTR [rbp+0x28]
   14000b8e1:	xor    ecx,ecx
   14000b8e3:	call   0x140012524
   14000b8e8:	test   ebx,ebx
   14000b8ea:	je     0x14000b8f4
   14000b8ec:	mov    ecx,edi
   14000b8ee:	call   QWORD PTR [rip+0x25b0c]        # 0x140031400
   14000b8f4:	add    rsp,0x20
   14000b8f8:	pop    rdi
   14000b8f9:	pop    rbp
   14000b8fa:	pop    rbx
   14000b8fb:	ret    
   14000b8fc:	mov    rax,rsp
   14000b8ff:	mov    QWORD PTR [rax+0x8],rbx
   14000b903:	mov    QWORD PTR [rax+0x10],rsi
   14000b907:	mov    QWORD PTR [rax+0x18],rdi
   14000b90b:	push   r12
   14000b90d:	sub    rsp,0x30
   14000b911:	mov    rdi,r8
   14000b914:	mov    rsi,rdx
   14000b917:	mov    r12,rcx
   14000b91a:	and    QWORD PTR [rax-0x10],0x0
   14000b91f:	call   0x1400131d0
   14000b924:	lea    rdx,[rsp+0x28]
   14000b929:	mov    rcx,QWORD PTR [rax+0xd8]
   14000b930:	call   0x140012540
   14000b935:	mov    ebx,eax
   14000b937:	mov    DWORD PTR [rsp+0x58],eax
   14000b93b:	and    DWORD PTR [rsp+0x20],0x0
   14000b940:	test   eax,eax
   14000b942:	je     0x14000b98f
   14000b944:	mov    r8,rdi
   14000b947:	mov    rdx,rsi
   14000b94a:	mov    rcx,r12
   14000b94d:	call   QWORD PTR [rip+0x25cbd]        # 0x140031610
   14000b953:	mov    esi,eax
   14000b955:	mov    DWORD PTR [rsp+0x20],eax
   14000b959:	cmp    ebx,0x2
   14000b95c:	je     0x14000b98d
   14000b95e:	xor    ebx,ebx
   14000b960:	test   eax,eax
   14000b962:	sete   bl
   14000b965:	test   ebx,ebx
   14000b967:	je     0x14000b973
   14000b969:	call   QWORD PTR [rip+0x25b09]        # 0x140031478
   14000b96f:	mov    edi,eax
   14000b971:	jmp    0x14000b975
   14000b973:	xor    edi,edi
   14000b975:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b97a:	xor    ecx,ecx
   14000b97c:	call   0x140012524
   14000b981:	test   ebx,ebx
   14000b983:	je     0x14000b98d
   14000b985:	mov    ecx,edi
   14000b987:	call   QWORD PTR [rip+0x25a73]        # 0x140031400
   14000b98d:	mov    eax,esi
   14000b98f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b994:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b999:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b99e:	add    rsp,0x30
   14000b9a2:	pop    r12
   14000b9a4:	ret    
   14000b9a5:	int3   
   14000b9a6:	int3   
   14000b9a7:	int3   
   14000b9a8:	int3   
   14000b9a9:	int3   
   14000b9aa:	int3   
   14000b9ab:	int3   
   14000b9ac:	rex push rbx
   14000b9ae:	push   rbp
   14000b9af:	push   rdi
   14000b9b0:	sub    rsp,0x20
   14000b9b4:	mov    rbp,rdx
   14000b9b7:	cmp    DWORD PTR [rbp+0x58],0x2
   14000b9bb:	je     0x14000b9ec
   14000b9bd:	xor    ebx,ebx
   14000b9bf:	cmp    DWORD PTR [rbp+0x20],ebx
   14000b9c2:	sete   bl
   14000b9c5:	test   ebx,ebx
   14000b9c7:	je     0x14000b9d3
   14000b9c9:	call   QWORD PTR [rip+0x25aa9]        # 0x140031478
   14000b9cf:	mov    edi,eax
   14000b9d1:	jmp    0x14000b9d5
   14000b9d3:	xor    edi,edi
   14000b9d5:	mov    rdx,QWORD PTR [rbp+0x28]
   14000b9d9:	xor    ecx,ecx
   14000b9db:	call   0x140012524
   14000b9e0:	test   ebx,ebx
   14000b9e2:	je     0x14000b9ec
   14000b9e4:	mov    ecx,edi
   14000b9e6:	call   QWORD PTR [rip+0x25a14]        # 0x140031400
   14000b9ec:	add    rsp,0x20
   14000b9f0:	pop    rdi
   14000b9f1:	pop    rbp
   14000b9f2:	pop    rbx
   14000b9f3:	ret    
   14000b9f4:	mov    rax,rsp
   14000b9f7:	mov    QWORD PTR [rax+0x8],rbx
   14000b9fb:	mov    QWORD PTR [rax+0x10],rsi
   14000b9ff:	mov    QWORD PTR [rax+0x18],rdi
   14000ba03:	mov    QWORD PTR [rax+0x20],r12
   14000ba07:	push   r13
   14000ba09:	sub    rsp,0x80
   14000ba10:	mov    edi,r9d
   14000ba13:	mov    rsi,r8
   14000ba16:	mov    r12,rdx
   14000ba19:	mov    r13d,ecx
   14000ba1c:	and    QWORD PTR [rax-0x20],0x0
   14000ba21:	call   0x1400131d0
   14000ba26:	lea    rdx,[rsp+0x68]
   14000ba2b:	mov    rcx,QWORD PTR [rax+0xd8]
   14000ba32:	call   0x140012540
   14000ba37:	mov    ebx,eax
   14000ba39:	mov    DWORD PTR [rsp+0x60],eax
   14000ba3d:	and    QWORD PTR [rsp+0x70],0x0
   14000ba43:	test   eax,eax
   14000ba45:	jne    0x14000ba4e
   14000ba47:	xor    eax,eax
   14000ba49:	jmp    0x14000bb00
   14000ba4e:	mov    rax,QWORD PTR [rsp+0xe8]
   14000ba56:	mov    QWORD PTR [rsp+0x58],rax
   14000ba5b:	mov    rax,QWORD PTR [rsp+0xe0]
   14000ba63:	mov    QWORD PTR [rsp+0x50],rax
   14000ba68:	mov    rax,QWORD PTR [rsp+0xd8]
   14000ba70:	mov    QWORD PTR [rsp+0x48],rax
   14000ba75:	mov    rax,QWORD PTR [rsp+0xd0]
   14000ba7d:	mov    QWORD PTR [rsp+0x40],rax
   14000ba82:	mov    eax,DWORD PTR [rsp+0xc8]
   14000ba89:	mov    DWORD PTR [rsp+0x38],eax
   14000ba8d:	mov    eax,DWORD PTR [rsp+0xc0]
   14000ba94:	mov    DWORD PTR [rsp+0x30],eax
   14000ba98:	mov    eax,DWORD PTR [rsp+0xb8]
   14000ba9f:	mov    DWORD PTR [rsp+0x28],eax
   14000baa3:	mov    eax,DWORD PTR [rsp+0xb0]
   14000baaa:	mov    DWORD PTR [rsp+0x20],eax
   14000baae:	mov    r9d,edi
   14000bab1:	mov    r8,rsi
   14000bab4:	mov    rdx,r12
   14000bab7:	mov    ecx,r13d
   14000baba:	call   QWORD PTR [rip+0x25b48]        # 0x140031608
   14000bac0:	mov    rsi,rax
   14000bac3:	mov    QWORD PTR [rsp+0x70],rax
   14000bac8:	cmp    ebx,0x2
   14000bacb:	je     0x14000bafd
   14000bacd:	xor    ebx,ebx
   14000bacf:	test   rax,rax
   14000bad2:	sete   bl
   14000bad5:	test   ebx,ebx
   14000bad7:	je     0x14000bae3
   14000bad9:	call   QWORD PTR [rip+0x25999]        # 0x140031478
   14000badf:	mov    edi,eax
   14000bae1:	jmp    0x14000bae5
   14000bae3:	xor    edi,edi
   14000bae5:	mov    rdx,QWORD PTR [rsp+0x68]
   14000baea:	xor    ecx,ecx
   14000baec:	call   0x140012524
   14000baf1:	test   ebx,ebx
   14000baf3:	je     0x14000bafd
   14000baf5:	mov    ecx,edi
   14000baf7:	call   QWORD PTR [rip+0x25903]        # 0x140031400
   14000bafd:	mov    rax,rsi
   14000bb00:	lea    r11,[rsp+0x80]
   14000bb08:	mov    rbx,QWORD PTR [r11+0x10]
   14000bb0c:	mov    rsi,QWORD PTR [r11+0x18]
   14000bb10:	mov    rdi,QWORD PTR [r11+0x20]
   14000bb14:	mov    r12,QWORD PTR [r11+0x28]
   14000bb18:	mov    rsp,r11
   14000bb1b:	pop    r13
   14000bb1d:	ret    
   14000bb1e:	int3   
   14000bb1f:	int3   
   14000bb20:	int3   
   14000bb21:	int3   
   14000bb22:	int3   
   14000bb23:	int3   
   14000bb24:	rex push rbx
   14000bb26:	push   rbp
   14000bb27:	push   rdi
   14000bb28:	sub    rsp,0x60
   14000bb2c:	mov    rbp,rdx
   14000bb2f:	cmp    DWORD PTR [rbp+0x60],0x2
   14000bb33:	je     0x14000bb65
   14000bb35:	xor    ebx,ebx
   14000bb37:	cmp    QWORD PTR [rbp+0x70],rbx
   14000bb3b:	sete   bl
   14000bb3e:	test   ebx,ebx
   14000bb40:	je     0x14000bb4c
   14000bb42:	call   QWORD PTR [rip+0x25930]        # 0x140031478
   14000bb48:	mov    edi,eax
   14000bb4a:	jmp    0x14000bb4e
   14000bb4c:	xor    edi,edi
   14000bb4e:	mov    rdx,QWORD PTR [rbp+0x68]
   14000bb52:	xor    ecx,ecx
   14000bb54:	call   0x140012524
   14000bb59:	test   ebx,ebx
   14000bb5b:	je     0x14000bb65
   14000bb5d:	mov    ecx,edi
   14000bb5f:	call   QWORD PTR [rip+0x2589b]        # 0x140031400
   14000bb65:	add    rsp,0x60
   14000bb69:	pop    rdi
   14000bb6a:	pop    rbp
   14000bb6b:	pop    rbx
   14000bb6c:	ret    
   14000bb6d:	int3   
   14000bb6e:	int3   
   14000bb6f:	int3   
   14000bb70:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb75:	mov    QWORD PTR [rsp+0x20],rsi
   14000bb7a:	push   rdi
   14000bb7b:	sub    rsp,0x30
   14000bb7f:	mov    rdi,rcx
   14000bb82:	and    QWORD PTR [rsp+0x50],0x0
   14000bb88:	call   0x1400131d0
   14000bb8d:	lea    rdx,[rsp+0x50]
   14000bb92:	mov    rcx,QWORD PTR [rax+0xd8]
   14000bb99:	call   0x140012540
   14000bb9e:	mov    ebx,eax
   14000bba0:	mov    DWORD PTR [rsp+0x48],eax
   14000bba4:	and    QWORD PTR [rsp+0x20],0x0
   14000bbaa:	test   eax,eax
   14000bbac:	jne    0x14000bbb2
   14000bbae:	xor    eax,eax
   14000bbb0:	jmp    0x14000bbfb
   14000bbb2:	mov    rcx,rdi
   14000bbb5:	call   QWORD PTR [rip+0x257c5]        # 0x140031380
   14000bbbb:	mov    rdi,rax
   14000bbbe:	mov    QWORD PTR [rsp+0x20],rax
   14000bbc3:	cmp    ebx,0x2
   14000bbc6:	je     0x14000bbf8
   14000bbc8:	xor    ebx,ebx
   14000bbca:	test   rax,rax
   14000bbcd:	sete   bl
   14000bbd0:	test   ebx,ebx
   14000bbd2:	je     0x14000bbde
   14000bbd4:	call   QWORD PTR [rip+0x2589e]        # 0x140031478
   14000bbda:	mov    esi,eax
   14000bbdc:	jmp    0x14000bbe0
   14000bbde:	xor    esi,esi
   14000bbe0:	mov    rdx,QWORD PTR [rsp+0x50]
   14000bbe5:	xor    ecx,ecx
   14000bbe7:	call   0x140012524
   14000bbec:	test   ebx,ebx
   14000bbee:	je     0x14000bbf8
   14000bbf0:	mov    ecx,esi
   14000bbf2:	call   QWORD PTR [rip+0x25808]        # 0x140031400
   14000bbf8:	mov    rax,rdi
   14000bbfb:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bc00:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bc05:	add    rsp,0x30
   14000bc09:	pop    rdi
   14000bc0a:	ret    
   14000bc0b:	int3   
   14000bc0c:	int3   
   14000bc0d:	int3   
   14000bc0e:	int3   
   14000bc0f:	int3   
   14000bc10:	rex push rbx
   14000bc12:	push   rbp
   14000bc13:	push   rdi
   14000bc14:	sub    rsp,0x20
   14000bc18:	mov    rbp,rdx
   14000bc1b:	cmp    DWORD PTR [rbp+0x48],0x2
   14000bc1f:	je     0x14000bc51
   14000bc21:	xor    ebx,ebx
   14000bc23:	cmp    QWORD PTR [rbp+0x20],rbx
   14000bc27:	sete   bl
   14000bc2a:	test   ebx,ebx
   14000bc2c:	je     0x14000bc38
   14000bc2e:	call   QWORD PTR [rip+0x25844]        # 0x140031478
   14000bc34:	mov    edi,eax
   14000bc36:	jmp    0x14000bc3a
   14000bc38:	xor    edi,edi
   14000bc3a:	mov    rdx,QWORD PTR [rbp+0x50]
   14000bc3e:	xor    ecx,ecx
   14000bc40:	call   0x140012524
   14000bc45:	test   ebx,ebx
   14000bc47:	je     0x14000bc51
   14000bc49:	mov    ecx,edi
   14000bc4b:	call   QWORD PTR [rip+0x257af]        # 0x140031400
   14000bc51:	add    rsp,0x20
   14000bc55:	pop    rdi
   14000bc56:	pop    rbp
   14000bc57:	pop    rbx
   14000bc58:	ret    
   14000bc59:	int3   
   14000bc5a:	int3   
   14000bc5b:	int3   
   14000bc5c:	sub    rsp,0x28
   14000bc60:	cmp    DWORD PTR [rcx+0x8],0x0
   14000bc64:	je     0x14000bc70
   14000bc66:	mov    rdx,QWORD PTR [rcx]
   14000bc69:	xor    ecx,ecx
   14000bc6b:	call   0x140012524
   14000bc70:	add    rsp,0x28
   14000bc74:	ret    
   14000bc75:	int3   
   14000bc76:	int3   
   14000bc77:	int3   
   14000bc78:	rex push rbx
   14000bc7a:	sub    rsp,0x20
   14000bc7e:	mov    rbx,rcx
   14000bc81:	call   0x1400089f0
   14000bc86:	lea    rax,[rip+0x2700b]        # 0x140032c98
   14000bc8d:	lea    r11,[rip+0x27124]        # 0x140032db8
   14000bc94:	mov    QWORD PTR [rbx],r11
   14000bc97:	mov    QWORD PTR [rbx+0x60],rax
   14000bc9b:	lea    rax,[rip+0x270de]        # 0x140032d80
   14000bca2:	mov    QWORD PTR [rbx+0x68],rax
   14000bca6:	xor    eax,eax
   14000bca8:	mov    QWORD PTR [rbx+0x40],rax
   14000bcac:	mov    BYTE PTR [rbx+0x48],al
   14000bcaf:	mov    QWORD PTR [rbx+0x58],rax
   14000bcb3:	mov    QWORD PTR [rbx+0x50],rax
   14000bcb7:	mov    QWORD PTR [rbx+0x70],rax
   14000bcbb:	mov    DWORD PTR [rbx+0x78],eax
   14000bcbe:	mov    QWORD PTR [rbx+0x80],rax
   14000bcc5:	mov    DWORD PTR [rbx+0x88],eax
   14000bccb:	mov    QWORD PTR [rbx+0x90],rax
   14000bcd2:	mov    QWORD PTR [rbx+0x98],rax
   14000bcd9:	mov    QWORD PTR [rbx+0xa0],rax
   14000bce0:	mov    rax,rbx
   14000bce3:	add    rsp,0x20
   14000bce7:	pop    rbx
   14000bce8:	ret    
   14000bce9:	int3   
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	mov    QWORD PTR [rsp+0x8],rbx
   14000bcf1:	push   rdi
   14000bcf2:	sub    rsp,0x20
   14000bcf6:	mov    rbx,rcx
   14000bcf9:	mov    rcx,QWORD PTR [rcx+0x40]
   14000bcfd:	mov    rdi,r8
   14000bd00:	call   QWORD PTR [rip+0x25972]        # 0x140031678
   14000bd06:	mov    rcx,rbx
   14000bd09:	call   0x1400132b4
   14000bd0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd13:	mov    DWORD PTR [rdi],eax
   14000bd15:	add    rsp,0x20
   14000bd19:	pop    rdi
   14000bd1a:	ret    
   14000bd1b:	int3   
   14000bd1c:	mov    rax,rsp
   14000bd1f:	mov    QWORD PTR [rax+0x8],rbx
   14000bd23:	mov    QWORD PTR [rax+0x10],rbp
   14000bd27:	mov    QWORD PTR [rax+0x18],rsi
   14000bd2b:	mov    QWORD PTR [rax+0x20],rdi
   14000bd2f:	push   r12
   14000bd31:	sub    rsp,0x60
   14000bd35:	mov    rax,QWORD PTR [rsp+0xa0]
   14000bd3d:	xor    ebx,ebx
   14000bd3f:	mov    rsi,r9
   14000bd42:	cmp    rax,rbx
   14000bd45:	mov    rbp,r8
   14000bd48:	mov    r12d,edx
   14000bd4b:	mov    rdi,rcx
   14000bd4e:	je     0x14000bd54
   14000bd50:	mov    rbx,QWORD PTR [rax+0x40]
   14000bd54:	mov    rax,QWORD PTR [rsp+0x98]
   14000bd5c:	mov    r11,QWORD PTR [rcx]
   14000bd5f:	mov    ecx,DWORD PTR [rsp+0xa8]
   14000bd66:	mov    r9d,DWORD PTR [rax+0x4]
   14000bd6a:	mov    r10d,DWORD PTR [rax]
   14000bd6d:	mov    r8d,DWORD PTR [rax+0xc]
   14000bd71:	mov    edx,DWORD PTR [rax+0x8]
   14000bd74:	mov    rax,QWORD PTR [rsp+0xb0]
   14000bd7c:	sub    r8d,r9d
   14000bd7f:	mov    QWORD PTR [rsp+0x58],rax
   14000bd84:	mov    eax,DWORD PTR [rsp+0x90]
   14000bd8b:	mov    QWORD PTR [rsp+0x50],rcx
   14000bd90:	mov    QWORD PTR [rsp+0x48],rbx
   14000bd95:	mov    DWORD PTR [rsp+0x40],r8d
   14000bd9a:	sub    edx,r10d
   14000bd9d:	mov    DWORD PTR [rsp+0x38],edx
   14000bda1:	mov    DWORD PTR [rsp+0x30],r9d
   14000bda6:	mov    DWORD PTR [rsp+0x28],r10d
   14000bdab:	mov    r9,rsi
   14000bdae:	mov    r8,rbp
   14000bdb1:	mov    edx,r12d
   14000bdb4:	mov    rcx,rdi
   14000bdb7:	mov    DWORD PTR [rsp+0x20],eax
   14000bdbb:	call   QWORD PTR [r11+0xb8]
   14000bdc2:	lea    r11,[rsp+0x60]
   14000bdc7:	mov    rbx,QWORD PTR [r11+0x10]
   14000bdcb:	mov    rbp,QWORD PTR [r11+0x18]
   14000bdcf:	mov    rsi,QWORD PTR [r11+0x20]
   14000bdd3:	mov    rdi,QWORD PTR [r11+0x28]
   14000bdd7:	mov    rsp,r11
   14000bdda:	pop    r12
   14000bddc:	ret    
   14000bddd:	int3   
   14000bdde:	int3   
   14000bddf:	int3   
   14000bde0:	mov    rax,rsp
   14000bde3:	mov    QWORD PTR [rax+0x8],rbx
   14000bde7:	mov    QWORD PTR [rax+0x10],rbp
   14000bdeb:	mov    QWORD PTR [rax+0x18],rsi
   14000bdef:	mov    QWORD PTR [rax+0x20],rdi
   14000bdf3:	push   r12
   14000bdf5:	sub    rsp,0x60
   14000bdf9:	mov    rax,QWORD PTR [rsp+0x98]
   14000be01:	xor    ebx,ebx
   14000be03:	mov    edi,r9d
   14000be06:	cmp    rax,rbx
   14000be09:	mov    rbp,r8
   14000be0c:	mov    r12,rdx
   14000be0f:	mov    rsi,rcx
   14000be12:	je     0x14000be18
   14000be14:	mov    rbx,QWORD PTR [rax+0x40]
   14000be18:	mov    rax,QWORD PTR [rsp+0x90]
   14000be20:	mov    r11,QWORD PTR [rcx]
   14000be23:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000be2a:	mov    r9d,DWORD PTR [rax+0x4]
   14000be2e:	mov    r10d,DWORD PTR [rax]
   14000be31:	mov    r8d,DWORD PTR [rax+0xc]
   14000be35:	mov    edx,DWORD PTR [rax+0x8]
   14000be38:	mov    rax,QWORD PTR [rsp+0xa8]
   14000be40:	sub    r8d,r9d
   14000be43:	mov    QWORD PTR [rsp+0x58],rax
   14000be48:	mov    QWORD PTR [rsp+0x50],rcx
   14000be4d:	mov    QWORD PTR [rsp+0x48],rbx
   14000be52:	mov    DWORD PTR [rsp+0x40],r8d
   14000be57:	sub    edx,r10d
   14000be5a:	bts    edi,0x1e
   14000be5e:	mov    DWORD PTR [rsp+0x38],edx
   14000be62:	mov    DWORD PTR [rsp+0x30],r9d
   14000be67:	mov    DWORD PTR [rsp+0x28],r10d
   14000be6c:	mov    r9,rbp
   14000be6f:	mov    r8,r12
   14000be72:	xor    edx,edx
   14000be74:	mov    rcx,rsi
   14000be77:	mov    DWORD PTR [rsp+0x20],edi
   14000be7b:	call   QWORD PTR [r11+0xb8]
   14000be82:	lea    r11,[rsp+0x60]
   14000be87:	mov    rbx,QWORD PTR [r11+0x10]
   14000be8b:	mov    rbp,QWORD PTR [r11+0x18]
   14000be8f:	mov    rsi,QWORD PTR [r11+0x20]
   14000be93:	mov    rdi,QWORD PTR [r11+0x28]
   14000be97:	mov    rsp,r11
   14000be9a:	pop    r12
   14000be9c:	ret    
   14000be9d:	int3   
   14000be9e:	int3   
   14000be9f:	int3   
   14000bea0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bea5:	push   rdi
   14000bea6:	sub    rsp,0x20
   14000beaa:	mov    edi,ecx
   14000beac:	call   0x140013220
   14000beb1:	mov    rbx,rax
   14000beb4:	mov    rax,QWORD PTR [rax+0x78]
   14000beb8:	test   rax,rax
   14000bebb:	je     0x14000bed7
   14000bebd:	mov    rcx,QWORD PTR [rax+0x40]
   14000bec1:	test   rcx,rcx
   14000bec4:	je     0x14000bed7
   14000bec6:	xor    r9d,r9d
   14000bec9:	xor    r8d,r8d
   14000becc:	mov    edx,0x401
   14000bed1:	call   QWORD PTR [rip+0x258f1]        # 0x1400317c8
   14000bed7:	test   edi,edi
   14000bed9:	mov    rbx,QWORD PTR [rbx+0xa0]
   14000bee0:	je     0x14000bf07
   14000bee2:	test   rbx,rbx
   14000bee5:	je     0x14000bf07
   14000bee7:	mov    ecx,0x1
   14000beec:	call   QWORD PTR [rip+0x257e6]        # 0x1400316d8
   14000bef2:	test   ax,ax
   14000bef5:	js     0x14000bf07
   14000bef7:	mov    rax,QWORD PTR [rbx]
   14000befa:	or     rdx,0xffffffffffffffff
   14000befe:	mov    rcx,rbx
   14000bf01:	call   QWORD PTR [rax+0x2d0]
   14000bf07:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf0c:	add    rsp,0x20
   14000bf10:	pop    rdi
   14000bf11:	ret    
   14000bf12:	int3   
   14000bf13:	int3   
   14000bf14:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf19:	mov    QWORD PTR [rsp+0x10],rbp
   14000bf1e:	mov    QWORD PTR [rsp+0x18],rsi
   14000bf23:	push   rdi
   14000bf24:	sub    rsp,0x20
   14000bf28:	test   rcx,rcx
   14000bf2b:	mov    esi,edx
   14000bf2d:	mov    rbx,rcx
   14000bf30:	jne    0x14000bf38
   14000bf32:	call   0x140006408
   14000bf37:	int3   
   14000bf38:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bf3c:	call   QWORD PTR [rip+0x2584e]        # 0x140031790
   14000bf42:	xor    edi,edi
   14000bf44:	test   eax,eax
   14000bf46:	mov    ebp,eax
   14000bf48:	jle    0x14000bf91
   14000bf4a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bf4e:	mov    edx,edi
   14000bf50:	call   QWORD PTR [rip+0x25842]        # 0x140031798
   14000bf56:	mov    rcx,rax
   14000bf59:	call   0x140017574
   14000bf5e:	test   rax,rax
   14000bf61:	je     0x14000bf7a
   14000bf63:	cmp    QWORD PTR [rax+0x8],rsi
   14000bf67:	je     0x14000bfa8
   14000bf69:	mov    edx,esi
   14000bf6b:	mov    rcx,rax
   14000bf6e:	call   0x14000bf14
   14000bf73:	test   rax,rax
   14000bf76:	jne    0x14000bf93
   14000bf78:	jmp    0x14000bf8a
   14000bf7a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bf7e:	mov    edx,edi
   14000bf80:	call   QWORD PTR [rip+0x25802]        # 0x140031788
   14000bf86:	cmp    eax,esi
   14000bf88:	je     0x14000bfa8
   14000bf8a:	add    edi,0x1
   14000bf8d:	cmp    edi,ebp
   14000bf8f:	jl     0x14000bf4a
   14000bf91:	xor    eax,eax
   14000bf93:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf98:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bf9d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bfa2:	add    rsp,0x20
   14000bfa6:	pop    rdi
   14000bfa7:	ret    
   14000bfa8:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bfac:	call   0x140017598
   14000bfb1:	jmp    0x14000bf93
   14000bfb3:	int3   
   14000bfb4:	sub    rsp,0x28
   14000bfb8:	lea    rax,[rip+0x270b1]        # 0x140033070
   14000bfbf:	mov    QWORD PTR [rcx],rax
   14000bfc2:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bfc6:	test   rcx,rcx
   14000bfc9:	je     0x14000bfd1
   14000bfcb:	call   QWORD PTR [rip+0x25487]        # 0x140031458
   14000bfd1:	add    rsp,0x28
   14000bfd5:	ret    
   14000bfd6:	int3   
   14000bfd7:	int3   
   14000bfd8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bfdd:	push   rdi
   14000bfde:	sub    rsp,0x20
   14000bfe2:	mov    ebx,edx
   14000bfe4:	mov    rdi,rcx
   14000bfe7:	call   0x14000bfb4
   14000bfec:	test   bl,0x1
   14000bfef:	je     0x14000bff9
   14000bff1:	mov    rcx,rdi
   14000bff4:	call   0x140013b68
   14000bff9:	mov    rax,rdi
   14000bffc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c001:	add    rsp,0x20
   14000c005:	pop    rdi
   14000c006:	ret    
   14000c007:	int3   
   14000c008:	mov    QWORD PTR [rsp+0x8],rbx
   14000c00d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c012:	push   rdi
   14000c013:	sub    rsp,0x20
   14000c017:	mov    ebx,r8d
   14000c01a:	mov    rsi,rdx
   14000c01d:	mov    rdi,rcx
   14000c020:	call   0x1400131d0
   14000c025:	mov    r8d,0x1
   14000c02b:	mov    r9,QWORD PTR [rax+0x8]
   14000c02f:	cmp    DWORD PTR [r9+0xd8],r8d
   14000c036:	jne    0x14000c067
   14000c038:	cmp    ebx,r8d
   14000c03b:	jne    0x14000c045
   14000c03d:	mov    r8d,0xf
   14000c043:	jmp    0x14000c056
   14000c045:	cmp    ebx,0x3
   14000c048:	je     0x14000c056
   14000c04a:	xor    eax,eax
   14000c04c:	mov    r8d,ebx
   14000c04f:	cmp    ebx,0xb
   14000c052:	cmove  r8d,eax
   14000c056:	mov    rax,QWORD PTR [rdi]
   14000c059:	mov    rdx,rsi
   14000c05c:	mov    rcx,rdi
   14000c05f:	call   QWORD PTR [rax+0xf0]
   14000c065:	jmp    0x14000c079
   14000c067:	mov    rax,QWORD PTR [rdi]
   14000c06a:	mov    r8d,ebx
   14000c06d:	mov    rdx,rsi
   14000c070:	mov    rcx,rdi
   14000c073:	call   QWORD PTR [rax+0xe8]
   14000c079:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c07e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c083:	add    rsp,0x20
   14000c087:	pop    rdi
   14000c088:	ret    
   14000c089:	int3   
   14000c08a:	int3   
   14000c08b:	int3   
   14000c08c:	sub    rsp,0x28
   14000c090:	test   dx,dx
   14000c093:	jne    0x14000c0b7
   14000c095:	call   0x140013220
   14000c09a:	mov    rcx,QWORD PTR [rax+0x90]
   14000c0a1:	test   rcx,rcx
   14000c0a4:	je     0x14000c0b7
   14000c0a6:	bt     DWORD PTR [rcx+0x4],0x1e
   14000c0ab:	jb     0x14000c0b7
   14000c0ad:	mov    ecx,0x1
   14000c0b2:	call   0x14000bea0
   14000c0b7:	xor    eax,eax
   14000c0b9:	add    rsp,0x28
   14000c0bd:	ret    
   14000c0be:	int3   
   14000c0bf:	int3   
   14000c0c0:	rex push rbx
   14000c0c2:	sub    rsp,0x40
   14000c0c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c0cf:	lea    rbx,[rcx-0x60]
   14000c0d3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c0d7:	lea    rcx,[rsp+0x28]
   14000c0dc:	call   0x14001324c
   14000c0e1:	nop
   14000c0e2:	mov    rcx,rbx
   14000c0e5:	call   0x140013718
   14000c0ea:	mov    ebx,eax
   14000c0ec:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c0f1:	je     0x14000c0ff
   14000c0f3:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c0f8:	xor    ecx,ecx
   14000c0fa:	call   0x140012524
   14000c0ff:	mov    eax,ebx
   14000c101:	add    rsp,0x40
   14000c105:	pop    rbx
   14000c106:	ret    
   14000c107:	int3   
   14000c108:	int3   
   14000c109:	int3   
   14000c10a:	int3   
   14000c10b:	int3   
   14000c10c:	int3   
   14000c10d:	int3   
   14000c10e:	int3   
   14000c10f:	int3   
   14000c110:	rex push rbp
   14000c112:	sub    rsp,0x20
   14000c116:	mov    rbp,rdx
   14000c119:	lea    rcx,[rbp+0x28]
   14000c11d:	call   0x14000bc5c
   14000c122:	add    rsp,0x20
   14000c126:	pop    rbp
   14000c127:	ret    
   14000c128:	rex push rbx
   14000c12a:	sub    rsp,0x40
   14000c12e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c137:	lea    rbx,[rcx-0x60]
   14000c13b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c13f:	lea    rcx,[rsp+0x28]
   14000c144:	call   0x14001324c
   14000c149:	nop
   14000c14a:	mov    rcx,rbx
   14000c14d:	call   0x1400137cc
   14000c152:	mov    ebx,eax
   14000c154:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c159:	je     0x14000c167
   14000c15b:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c160:	xor    ecx,ecx
   14000c162:	call   0x140012524
   14000c167:	mov    eax,ebx
   14000c169:	add    rsp,0x40
   14000c16d:	pop    rbx
   14000c16e:	ret    
   14000c16f:	int3   
   14000c170:	int3   
   14000c171:	int3   
   14000c172:	int3   
   14000c173:	int3   
   14000c174:	int3   
   14000c175:	int3   
   14000c176:	int3   
   14000c177:	int3   
   14000c178:	rex push rbp
   14000c17a:	sub    rsp,0x20
   14000c17e:	mov    rbp,rdx
   14000c181:	lea    rcx,[rbp+0x28]
   14000c185:	call   0x14000bc5c
   14000c18a:	add    rsp,0x20
   14000c18e:	pop    rbp
   14000c18f:	ret    
   14000c190:	rex push rdi
   14000c192:	sub    rsp,0x40
   14000c196:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c19f:	mov    QWORD PTR [rsp+0x50],rbx
   14000c1a4:	mov    QWORD PTR [rsp+0x58],rsi
   14000c1a9:	mov    rdi,r8
   14000c1ac:	mov    rsi,rdx
   14000c1af:	lea    rbx,[rcx-0x60]
   14000c1b3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c1b7:	lea    rcx,[rsp+0x28]
   14000c1bc:	call   0x14001324c
   14000c1c1:	nop
   14000c1c2:	mov    r8,rdi
   14000c1c5:	mov    rdx,rsi
   14000c1c8:	mov    rcx,rbx
   14000c1cb:	call   0x140013848
   14000c1d0:	mov    ebx,eax
   14000c1d2:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c1d7:	je     0x14000c1e5
   14000c1d9:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c1de:	xor    ecx,ecx
   14000c1e0:	call   0x140012524
   14000c1e5:	mov    eax,ebx
   14000c1e7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c1ec:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c1f1:	add    rsp,0x40
   14000c1f5:	pop    rdi
   14000c1f6:	ret    
   14000c1f7:	int3   
   14000c1f8:	int3   
   14000c1f9:	int3   
   14000c1fa:	int3   
   14000c1fb:	int3   
   14000c1fc:	int3   
   14000c1fd:	int3   
   14000c1fe:	int3   
   14000c1ff:	int3   
   14000c200:	rex push rbp
   14000c202:	sub    rsp,0x20
   14000c206:	mov    rbp,rdx
   14000c209:	lea    rcx,[rbp+0x28]
   14000c20d:	call   0x14000bc5c
   14000c212:	add    rsp,0x20
   14000c216:	pop    rbp
   14000c217:	ret    
   14000c218:	mov    rax,rsp
   14000c21b:	push   rdi
   14000c21c:	sub    rsp,0x70
   14000c220:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000c229:	mov    QWORD PTR [rax+0x8],rbx
   14000c22d:	mov    QWORD PTR [rax+0x10],rbp
   14000c231:	mov    QWORD PTR [rax+0x18],rsi
   14000c235:	mov    ebx,r9d
   14000c238:	mov    rdi,r8
   14000c23b:	mov    esi,edx
   14000c23d:	mov    rbp,rcx
   14000c240:	mov    rdx,QWORD PTR [rcx-0x28]
   14000c244:	lea    rcx,[rax-0x20]
   14000c248:	call   0x14001324c
   14000c24d:	nop
   14000c24e:	mov    rax,QWORD PTR [rsp+0xc0]
   14000c256:	mov    QWORD PTR [rsp+0x40],rax
   14000c25b:	mov    rax,QWORD PTR [rsp+0xb8]
   14000c263:	mov    QWORD PTR [rsp+0x38],rax
   14000c268:	mov    rax,QWORD PTR [rsp+0xb0]
   14000c270:	mov    QWORD PTR [rsp+0x30],rax
   14000c275:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c27d:	mov    QWORD PTR [rsp+0x28],rax
   14000c282:	movzx  eax,WORD PTR [rsp+0xa0]
   14000c28a:	mov    WORD PTR [rsp+0x20],ax
   14000c28f:	mov    r9d,ebx
   14000c292:	mov    r8,rdi
   14000c295:	mov    edx,esi
   14000c297:	mov    rcx,rbp
   14000c29a:	call   0x14000a5d4
   14000c29f:	mov    ebx,eax
   14000c2a1:	cmp    DWORD PTR [rsp+0x60],0x0
   14000c2a6:	je     0x14000c2b4
   14000c2a8:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c2ad:	xor    ecx,ecx
   14000c2af:	call   0x140012524
   14000c2b4:	mov    eax,ebx
   14000c2b6:	lea    r11,[rsp+0x70]
   14000c2bb:	mov    rbx,QWORD PTR [r11+0x10]
   14000c2bf:	mov    rbp,QWORD PTR [r11+0x18]
   14000c2c3:	mov    rsi,QWORD PTR [r11+0x20]
   14000c2c7:	mov    rsp,r11
   14000c2ca:	pop    rdi
   14000c2cb:	ret    
   14000c2cc:	int3   
   14000c2cd:	int3   
   14000c2ce:	int3   
   14000c2cf:	int3   
   14000c2d0:	int3   
   14000c2d1:	int3   
   14000c2d2:	int3   
   14000c2d3:	int3   
   14000c2d4:	int3   
   14000c2d5:	int3   
   14000c2d6:	int3   
   14000c2d7:	int3   
   14000c2d8:	rex push rbp
   14000c2da:	sub    rsp,0x20
   14000c2de:	mov    rbp,rdx
   14000c2e1:	lea    rcx,[rbp+0x58]
   14000c2e5:	call   0x14000bc5c
   14000c2ea:	add    rsp,0x20
   14000c2ee:	pop    rbp
   14000c2ef:	ret    
   14000c2f0:	rex push rdi
   14000c2f2:	sub    rsp,0x40
   14000c2f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c2ff:	mov    QWORD PTR [rsp+0x50],rbx
   14000c304:	mov    rdi,rdx
   14000c307:	lea    rbx,[rcx-0x60]
   14000c30b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c30f:	lea    rcx,[rsp+0x28]
   14000c314:	call   0x14001324c
   14000c319:	nop
   14000c31a:	mov    rax,QWORD PTR [rbx]
   14000c31d:	mov    rdx,rdi
   14000c320:	mov    rcx,rbx
   14000c323:	call   QWORD PTR [rax+0x118]
   14000c329:	mov    ebx,eax
   14000c32b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c330:	je     0x14000c33e
   14000c332:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c337:	xor    ecx,ecx
   14000c339:	call   0x140012524
   14000c33e:	mov    eax,ebx
   14000c340:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c345:	add    rsp,0x40
   14000c349:	pop    rdi
   14000c34a:	ret    
   14000c34b:	int3   
   14000c34c:	int3   
   14000c34d:	int3   
   14000c34e:	int3   
   14000c34f:	int3   
   14000c350:	rex push rbp
   14000c352:	sub    rsp,0x20
   14000c356:	mov    rbp,rdx
   14000c359:	lea    rcx,[rbp+0x28]
   14000c35d:	call   0x14000bc5c
   14000c362:	add    rsp,0x20
   14000c366:	pop    rbp
   14000c367:	ret    
   14000c368:	rex push rdi
   14000c36a:	sub    rsp,0x40
   14000c36e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c377:	mov    QWORD PTR [rsp+0x50],rbx
   14000c37c:	mov    rdi,rdx
   14000c37f:	lea    rbx,[rcx-0x60]
   14000c383:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c387:	lea    rcx,[rsp+0x28]
   14000c38c:	call   0x14001324c
   14000c391:	nop
   14000c392:	mov    rax,QWORD PTR [rbx]
   14000c395:	mov    rdx,rdi
   14000c398:	mov    rcx,rbx
   14000c39b:	call   QWORD PTR [rax+0x120]
   14000c3a1:	mov    ebx,eax
   14000c3a3:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c3a8:	je     0x14000c3b6
   14000c3aa:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c3af:	xor    ecx,ecx
   14000c3b1:	call   0x140012524
   14000c3b6:	mov    eax,ebx
   14000c3b8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c3bd:	add    rsp,0x40
   14000c3c1:	pop    rdi
   14000c3c2:	ret    
   14000c3c3:	int3   
   14000c3c4:	int3   
   14000c3c5:	int3   
   14000c3c6:	int3   
   14000c3c7:	int3   
   14000c3c8:	rex push rbp
   14000c3ca:	sub    rsp,0x20
   14000c3ce:	mov    rbp,rdx
   14000c3d1:	lea    rcx,[rbp+0x28]
   14000c3d5:	call   0x14000bc5c
   14000c3da:	add    rsp,0x20
   14000c3de:	pop    rbp
   14000c3df:	ret    
   14000c3e0:	rex push rdi
   14000c3e2:	sub    rsp,0x60
   14000c3e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c3ef:	mov    QWORD PTR [rsp+0x70],rbx
   14000c3f4:	mov    QWORD PTR [rsp+0x78],rsi
   14000c3f9:	mov    rsi,r8
   14000c3fc:	mov    rbx,rdx
   14000c3ff:	lea    rdi,[rcx-0x60]
   14000c403:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c407:	lea    rcx,[rsp+0x28]
   14000c40c:	call   0x14001324c
   14000c411:	nop
   14000c412:	lea    rcx,[rsp+0x40]
   14000c417:	mov    rax,QWORD PTR [rbx]
   14000c41a:	mov    QWORD PTR [rcx],rax
   14000c41d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c421:	mov    QWORD PTR [rcx+0x8],rax
   14000c425:	mov    rax,QWORD PTR [rbx+0x10]
   14000c429:	mov    QWORD PTR [rcx+0x10],rax
   14000c42d:	mov    rax,QWORD PTR [rdi]
   14000c430:	mov    r8,rsi
   14000c433:	lea    rdx,[rsp+0x40]
   14000c438:	mov    rcx,rdi
   14000c43b:	call   QWORD PTR [rax+0x128]
   14000c441:	mov    ebx,eax
   14000c443:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c448:	je     0x14000c456
   14000c44a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c44f:	xor    ecx,ecx
   14000c451:	call   0x140012524
   14000c456:	mov    eax,ebx
   14000c458:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c45d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c462:	add    rsp,0x60
   14000c466:	pop    rdi
   14000c467:	ret    
   14000c468:	int3   
   14000c469:	int3   
   14000c46a:	int3   
   14000c46b:	int3   
   14000c46c:	int3   
   14000c46d:	int3   
   14000c46e:	int3   
   14000c46f:	int3   
   14000c470:	rex push rbp
   14000c472:	sub    rsp,0x20
   14000c476:	mov    rbp,rdx
   14000c479:	lea    rcx,[rbp+0x28]
   14000c47d:	call   0x14000bc5c
   14000c482:	add    rsp,0x20
   14000c486:	pop    rbp
   14000c487:	ret    
   14000c488:	rex push rdi
   14000c48a:	sub    rsp,0x60
   14000c48e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c497:	mov    QWORD PTR [rsp+0x70],rbx
   14000c49c:	mov    QWORD PTR [rsp+0x78],rsi
   14000c4a1:	mov    rsi,r8
   14000c4a4:	mov    rbx,rdx
   14000c4a7:	lea    rdi,[rcx-0x60]
   14000c4ab:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c4af:	lea    rcx,[rsp+0x28]
   14000c4b4:	call   0x14001324c
   14000c4b9:	nop
   14000c4ba:	lea    rcx,[rsp+0x40]
   14000c4bf:	mov    rax,QWORD PTR [rbx]
   14000c4c2:	mov    QWORD PTR [rcx],rax
   14000c4c5:	mov    rax,QWORD PTR [rbx+0x8]
   14000c4c9:	mov    QWORD PTR [rcx+0x8],rax
   14000c4cd:	mov    rax,QWORD PTR [rbx+0x10]
   14000c4d1:	mov    QWORD PTR [rcx+0x10],rax
   14000c4d5:	mov    rax,QWORD PTR [rdi]
   14000c4d8:	mov    r8,rsi
   14000c4db:	lea    rdx,[rsp+0x40]
   14000c4e0:	mov    rcx,rdi
   14000c4e3:	call   QWORD PTR [rax+0x130]
   14000c4e9:	mov    ebx,eax
   14000c4eb:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c4f0:	je     0x14000c4fe
   14000c4f2:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c4f7:	xor    ecx,ecx
   14000c4f9:	call   0x140012524
   14000c4fe:	mov    eax,ebx
   14000c500:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c505:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c50a:	add    rsp,0x60
   14000c50e:	pop    rdi
   14000c50f:	ret    
   14000c510:	int3   
   14000c511:	int3   
   14000c512:	int3   
   14000c513:	int3   
   14000c514:	int3   
   14000c515:	int3   
   14000c516:	int3   
   14000c517:	int3   
   14000c518:	rex push rbp
   14000c51a:	sub    rsp,0x20
   14000c51e:	mov    rbp,rdx
   14000c521:	lea    rcx,[rbp+0x28]
   14000c525:	call   0x14000bc5c
   14000c52a:	add    rsp,0x20
   14000c52e:	pop    rbp
   14000c52f:	ret    
   14000c530:	rex push rdi
   14000c532:	sub    rsp,0x60
   14000c536:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c53f:	mov    QWORD PTR [rsp+0x70],rbx
   14000c544:	mov    QWORD PTR [rsp+0x78],rsi
   14000c549:	mov    rsi,r8
   14000c54c:	mov    rbx,rdx
   14000c54f:	lea    rdi,[rcx-0x60]
   14000c553:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c557:	lea    rcx,[rsp+0x28]
   14000c55c:	call   0x14001324c
   14000c561:	nop
   14000c562:	lea    rcx,[rsp+0x40]
   14000c567:	mov    rax,QWORD PTR [rbx]
   14000c56a:	mov    QWORD PTR [rcx],rax
   14000c56d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c571:	mov    QWORD PTR [rcx+0x8],rax
   14000c575:	mov    rax,QWORD PTR [rbx+0x10]
   14000c579:	mov    QWORD PTR [rcx+0x10],rax
   14000c57d:	mov    rax,QWORD PTR [rdi]
   14000c580:	mov    r8,rsi
   14000c583:	lea    rdx,[rsp+0x40]
   14000c588:	mov    rcx,rdi
   14000c58b:	call   QWORD PTR [rax+0x138]
   14000c591:	mov    ebx,eax
   14000c593:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c598:	je     0x14000c5a6
   14000c59a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c59f:	xor    ecx,ecx
   14000c5a1:	call   0x140012524
   14000c5a6:	mov    eax,ebx
   14000c5a8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c5ad:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c5b2:	add    rsp,0x60
   14000c5b6:	pop    rdi
   14000c5b7:	ret    
   14000c5b8:	int3   
   14000c5b9:	int3   
   14000c5ba:	int3   
   14000c5bb:	int3   
   14000c5bc:	int3   
   14000c5bd:	int3   
   14000c5be:	int3   
   14000c5bf:	int3   
   14000c5c0:	rex push rbp
   14000c5c2:	sub    rsp,0x20
   14000c5c6:	mov    rbp,rdx
   14000c5c9:	lea    rcx,[rbp+0x28]
   14000c5cd:	call   0x14000bc5c
   14000c5d2:	add    rsp,0x20
   14000c5d6:	pop    rbp
   14000c5d7:	ret    
   14000c5d8:	rex push rdi
   14000c5da:	sub    rsp,0x60
   14000c5de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c5e7:	mov    QWORD PTR [rsp+0x70],rbx
   14000c5ec:	mov    QWORD PTR [rsp+0x78],rsi
   14000c5f1:	mov    rsi,r8
   14000c5f4:	mov    rbx,rdx
   14000c5f7:	lea    rdi,[rcx-0x60]
   14000c5fb:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c5ff:	lea    rcx,[rsp+0x28]
   14000c604:	call   0x14001324c
   14000c609:	nop
   14000c60a:	lea    rcx,[rsp+0x40]
   14000c60f:	mov    rax,QWORD PTR [rbx]
   14000c612:	mov    QWORD PTR [rcx],rax
   14000c615:	mov    rax,QWORD PTR [rbx+0x8]
   14000c619:	mov    QWORD PTR [rcx+0x8],rax
   14000c61d:	mov    rax,QWORD PTR [rbx+0x10]
   14000c621:	mov    QWORD PTR [rcx+0x10],rax
   14000c625:	mov    rax,QWORD PTR [rdi]
   14000c628:	mov    r8,rsi
   14000c62b:	lea    rdx,[rsp+0x40]
   14000c630:	mov    rcx,rdi
   14000c633:	call   QWORD PTR [rax+0x140]
   14000c639:	mov    ebx,eax
   14000c63b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c640:	je     0x14000c64e
   14000c642:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c647:	xor    ecx,ecx
   14000c649:	call   0x140012524
   14000c64e:	mov    eax,ebx
   14000c650:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c655:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c65a:	add    rsp,0x60
   14000c65e:	pop    rdi
   14000c65f:	ret    
   14000c660:	int3   
   14000c661:	int3   
   14000c662:	int3   
   14000c663:	int3   
   14000c664:	int3   
   14000c665:	int3   
   14000c666:	int3   
   14000c667:	int3   
   14000c668:	rex push rbp
   14000c66a:	sub    rsp,0x20
   14000c66e:	mov    rbp,rdx
   14000c671:	lea    rcx,[rbp+0x28]
   14000c675:	call   0x14000bc5c
   14000c67a:	add    rsp,0x20
   14000c67e:	pop    rbp
   14000c67f:	ret    
   14000c680:	rex push rdi
   14000c682:	sub    rsp,0x60
   14000c686:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c68f:	mov    QWORD PTR [rsp+0x70],rbx
   14000c694:	mov    QWORD PTR [rsp+0x78],rsi
   14000c699:	mov    rsi,r8
   14000c69c:	mov    rbx,rdx
   14000c69f:	lea    rdi,[rcx-0x60]
   14000c6a3:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c6a7:	lea    rcx,[rsp+0x28]
   14000c6ac:	call   0x14001324c
   14000c6b1:	nop
   14000c6b2:	lea    rcx,[rsp+0x40]
   14000c6b7:	mov    rax,QWORD PTR [rbx]
   14000c6ba:	mov    QWORD PTR [rcx],rax
   14000c6bd:	mov    rax,QWORD PTR [rbx+0x8]
   14000c6c1:	mov    QWORD PTR [rcx+0x8],rax
   14000c6c5:	mov    rax,QWORD PTR [rbx+0x10]
   14000c6c9:	mov    QWORD PTR [rcx+0x10],rax
   14000c6cd:	mov    rax,QWORD PTR [rdi]
   14000c6d0:	mov    r8,rsi
   14000c6d3:	lea    rdx,[rsp+0x40]
   14000c6d8:	mov    rcx,rdi
   14000c6db:	call   QWORD PTR [rax+0x148]
   14000c6e1:	mov    ebx,eax
   14000c6e3:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c6e8:	je     0x14000c6f6
   14000c6ea:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c6ef:	xor    ecx,ecx
   14000c6f1:	call   0x140012524
   14000c6f6:	mov    eax,ebx
   14000c6f8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c6fd:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c702:	add    rsp,0x60
   14000c706:	pop    rdi
   14000c707:	ret    
   14000c708:	int3   
   14000c709:	int3   
   14000c70a:	int3   
   14000c70b:	int3   
   14000c70c:	int3   
   14000c70d:	int3   
   14000c70e:	int3   
   14000c70f:	int3   
   14000c710:	rex push rbp
   14000c712:	sub    rsp,0x20
   14000c716:	mov    rbp,rdx
   14000c719:	lea    rcx,[rbp+0x28]
   14000c71d:	call   0x14000bc5c
   14000c722:	add    rsp,0x20
   14000c726:	pop    rbp
   14000c727:	ret    
   14000c728:	rex push rdi
   14000c72a:	sub    rsp,0x60
   14000c72e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c737:	mov    QWORD PTR [rsp+0x70],rbx
   14000c73c:	mov    QWORD PTR [rsp+0x78],rsi
   14000c741:	mov    rsi,r8
   14000c744:	mov    rbx,rdx
   14000c747:	lea    rdi,[rcx-0x60]
   14000c74b:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c74f:	lea    rcx,[rsp+0x28]
   14000c754:	call   0x14001324c
   14000c759:	nop
   14000c75a:	lea    rcx,[rsp+0x40]
   14000c75f:	mov    rax,QWORD PTR [rbx]
   14000c762:	mov    QWORD PTR [rcx],rax
   14000c765:	mov    rax,QWORD PTR [rbx+0x8]
   14000c769:	mov    QWORD PTR [rcx+0x8],rax
   14000c76d:	mov    rax,QWORD PTR [rbx+0x10]
   14000c771:	mov    QWORD PTR [rcx+0x10],rax
   14000c775:	mov    rax,QWORD PTR [rdi]
   14000c778:	mov    r8,rsi
   14000c77b:	lea    rdx,[rsp+0x40]
   14000c780:	mov    rcx,rdi
   14000c783:	call   QWORD PTR [rax+0x150]
   14000c789:	mov    ebx,eax
   14000c78b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c790:	je     0x14000c79e
   14000c792:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c797:	xor    ecx,ecx
   14000c799:	call   0x140012524
   14000c79e:	mov    eax,ebx
   14000c7a0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c7a5:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c7aa:	add    rsp,0x60
   14000c7ae:	pop    rdi
   14000c7af:	ret    
   14000c7b0:	int3   
   14000c7b1:	int3   
   14000c7b2:	int3   
   14000c7b3:	int3   
   14000c7b4:	int3   
   14000c7b5:	int3   
   14000c7b6:	int3   
   14000c7b7:	int3   
   14000c7b8:	rex push rbp
   14000c7ba:	sub    rsp,0x20
   14000c7be:	mov    rbp,rdx
   14000c7c1:	lea    rcx,[rbp+0x28]
   14000c7c5:	call   0x14000bc5c
   14000c7ca:	add    rsp,0x20
   14000c7ce:	pop    rbp
   14000c7cf:	ret    
   14000c7d0:	rex push rdi
   14000c7d2:	sub    rsp,0x60
   14000c7d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c7df:	mov    QWORD PTR [rsp+0x70],rbx
   14000c7e4:	mov    QWORD PTR [rsp+0x78],rsi
   14000c7e9:	mov    rsi,r8
   14000c7ec:	mov    rbx,rdx
   14000c7ef:	lea    rdi,[rcx-0x60]
   14000c7f3:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c7f7:	lea    rcx,[rsp+0x28]
   14000c7fc:	call   0x14001324c
   14000c801:	nop
   14000c802:	lea    rcx,[rsp+0x40]
   14000c807:	mov    rax,QWORD PTR [rbx]
   14000c80a:	mov    QWORD PTR [rcx],rax
   14000c80d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c811:	mov    QWORD PTR [rcx+0x8],rax
   14000c815:	mov    rax,QWORD PTR [rbx+0x10]
   14000c819:	mov    QWORD PTR [rcx+0x10],rax
   14000c81d:	mov    rax,QWORD PTR [rdi]
   14000c820:	mov    r8,rsi
   14000c823:	lea    rdx,[rsp+0x40]
   14000c828:	mov    rcx,rdi
   14000c82b:	call   QWORD PTR [rax+0x158]
   14000c831:	mov    ebx,eax
   14000c833:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c838:	je     0x14000c846
   14000c83a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c83f:	xor    ecx,ecx
   14000c841:	call   0x140012524
   14000c846:	mov    eax,ebx
   14000c848:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c84d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c852:	add    rsp,0x60
   14000c856:	pop    rdi
   14000c857:	ret    
   14000c858:	int3   
   14000c859:	int3   
   14000c85a:	int3   
   14000c85b:	int3   
   14000c85c:	int3   
   14000c85d:	int3   
   14000c85e:	int3   
   14000c85f:	int3   
   14000c860:	rex push rbp
   14000c862:	sub    rsp,0x20
   14000c866:	mov    rbp,rdx
   14000c869:	lea    rcx,[rbp+0x28]
   14000c86d:	call   0x14000bc5c
   14000c872:	add    rsp,0x20
   14000c876:	pop    rbp
   14000c877:	ret    
   14000c878:	mov    rax,rsp
   14000c87b:	push   rdi
   14000c87c:	sub    rsp,0x60
   14000c880:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c889:	mov    QWORD PTR [rax+0x8],rbx
   14000c88d:	mov    QWORD PTR [rax+0x10],rbp
   14000c891:	mov    QWORD PTR [rax+0x18],rsi
   14000c895:	mov    rsi,r9
   14000c898:	mov    rbx,r8
   14000c89b:	mov    rbp,rdx
   14000c89e:	lea    rdi,[rcx-0x60]
   14000c8a2:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c8a6:	lea    rcx,[rax-0x40]
   14000c8aa:	call   0x14001324c
   14000c8af:	nop
   14000c8b0:	lea    rcx,[rsp+0x40]
   14000c8b5:	mov    rax,QWORD PTR [rbx]
   14000c8b8:	mov    QWORD PTR [rcx],rax
   14000c8bb:	mov    rax,QWORD PTR [rbx+0x8]
   14000c8bf:	mov    QWORD PTR [rcx+0x8],rax
   14000c8c3:	mov    rax,QWORD PTR [rbx+0x10]
   14000c8c7:	mov    QWORD PTR [rcx+0x10],rax
   14000c8cb:	mov    rax,QWORD PTR [rdi]
   14000c8ce:	mov    r9,rsi
   14000c8d1:	lea    r8,[rsp+0x40]
   14000c8d6:	mov    rdx,rbp
   14000c8d9:	mov    rcx,rdi
   14000c8dc:	call   QWORD PTR [rax+0x160]
   14000c8e2:	mov    ebx,eax
   14000c8e4:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c8e9:	je     0x14000c8f7
   14000c8eb:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c8f0:	xor    ecx,ecx
   14000c8f2:	call   0x140012524
   14000c8f7:	mov    eax,ebx
   14000c8f9:	lea    r11,[rsp+0x60]
   14000c8fe:	mov    rbx,QWORD PTR [r11+0x10]
   14000c902:	mov    rbp,QWORD PTR [r11+0x18]
   14000c906:	mov    rsi,QWORD PTR [r11+0x20]
   14000c90a:	mov    rsp,r11
   14000c90d:	pop    rdi
   14000c90e:	ret    
   14000c90f:	int3   
   14000c910:	int3   
   14000c911:	int3   
   14000c912:	int3   
   14000c913:	int3   
   14000c914:	int3   
   14000c915:	int3   
   14000c916:	int3   
   14000c917:	int3   
   14000c918:	rex push rbp
   14000c91a:	sub    rsp,0x20
   14000c91e:	mov    rbp,rdx
   14000c921:	lea    rcx,[rbp+0x28]
   14000c925:	call   0x14000bc5c
   14000c92a:	add    rsp,0x20
   14000c92e:	pop    rbp
   14000c92f:	ret    
   14000c930:	rex push rdi
   14000c932:	sub    rsp,0x60
   14000c936:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c93f:	mov    QWORD PTR [rsp+0x70],rbx
   14000c944:	mov    QWORD PTR [rsp+0x78],rsi
   14000c949:	mov    rsi,r8
   14000c94c:	mov    rbx,rdx
   14000c94f:	lea    rdi,[rcx-0x60]
   14000c953:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c957:	lea    rcx,[rsp+0x28]
   14000c95c:	call   0x14001324c
   14000c961:	nop
   14000c962:	lea    rcx,[rsp+0x40]
   14000c967:	mov    rax,QWORD PTR [rbx]
   14000c96a:	mov    QWORD PTR [rcx],rax
   14000c96d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c971:	mov    QWORD PTR [rcx+0x8],rax
   14000c975:	mov    rax,QWORD PTR [rbx+0x10]
   14000c979:	mov    QWORD PTR [rcx+0x10],rax
   14000c97d:	mov    rax,QWORD PTR [rdi]
   14000c980:	mov    r8,rsi
   14000c983:	lea    rdx,[rsp+0x40]
   14000c988:	mov    rcx,rdi
   14000c98b:	call   QWORD PTR [rax+0x168]
   14000c991:	mov    ebx,eax
   14000c993:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c998:	je     0x14000c9a6
   14000c99a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c99f:	xor    ecx,ecx
   14000c9a1:	call   0x140012524
   14000c9a6:	mov    eax,ebx
   14000c9a8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c9ad:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c9b2:	add    rsp,0x60
   14000c9b6:	pop    rdi
   14000c9b7:	ret    
   14000c9b8:	int3   
   14000c9b9:	int3   
   14000c9ba:	int3   
   14000c9bb:	int3   
   14000c9bc:	int3   
   14000c9bd:	int3   
   14000c9be:	int3   
   14000c9bf:	int3   
   14000c9c0:	rex push rbp
   14000c9c2:	sub    rsp,0x20
   14000c9c6:	mov    rbp,rdx
   14000c9c9:	lea    rcx,[rbp+0x28]
   14000c9cd:	call   0x14000bc5c
   14000c9d2:	add    rsp,0x20
   14000c9d6:	pop    rbp
   14000c9d7:	ret    
   14000c9d8:	rex push rdi
   14000c9da:	sub    rsp,0x40
   14000c9de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c9e7:	mov    QWORD PTR [rsp+0x50],rbx
   14000c9ec:	mov    rdi,rdx
   14000c9ef:	lea    rbx,[rcx-0x60]
   14000c9f3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c9f7:	lea    rcx,[rsp+0x28]
   14000c9fc:	call   0x14001324c
   14000ca01:	nop
   14000ca02:	mov    rax,QWORD PTR [rbx]
   14000ca05:	mov    rdx,rdi
   14000ca08:	mov    rcx,rbx
   14000ca0b:	call   QWORD PTR [rax+0x170]
   14000ca11:	mov    ebx,eax
   14000ca13:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ca18:	je     0x14000ca26
   14000ca1a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ca1f:	xor    ecx,ecx
   14000ca21:	call   0x140012524
   14000ca26:	mov    eax,ebx
   14000ca28:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ca2d:	add    rsp,0x40
   14000ca31:	pop    rdi
   14000ca32:	ret    
   14000ca33:	int3   
   14000ca34:	int3   
   14000ca35:	int3   
   14000ca36:	int3   
   14000ca37:	int3   
   14000ca38:	rex push rbp
   14000ca3a:	sub    rsp,0x20
   14000ca3e:	mov    rbp,rdx
   14000ca41:	lea    rcx,[rbp+0x28]
   14000ca45:	call   0x14000bc5c
   14000ca4a:	add    rsp,0x20
   14000ca4e:	pop    rbp
   14000ca4f:	ret    
   14000ca50:	rex push rdi
   14000ca52:	sub    rsp,0x40
   14000ca56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ca5f:	mov    QWORD PTR [rsp+0x50],rbx
   14000ca64:	mov    rdi,rdx
   14000ca67:	lea    rbx,[rcx-0x60]
   14000ca6b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000ca6f:	lea    rcx,[rsp+0x28]
   14000ca74:	call   0x14001324c
   14000ca79:	nop
   14000ca7a:	mov    rax,QWORD PTR [rbx]
   14000ca7d:	mov    rdx,rdi
   14000ca80:	mov    rcx,rbx
   14000ca83:	call   QWORD PTR [rax+0x178]
   14000ca89:	mov    ebx,eax
   14000ca8b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ca90:	je     0x14000ca9e
   14000ca92:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ca97:	xor    ecx,ecx
   14000ca99:	call   0x140012524
   14000ca9e:	mov    eax,ebx
   14000caa0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000caa5:	add    rsp,0x40
   14000caa9:	pop    rdi
   14000caaa:	ret    
   14000caab:	int3   
   14000caac:	int3   
   14000caad:	int3   
   14000caae:	int3   
   14000caaf:	int3   
   14000cab0:	rex push rbp
   14000cab2:	sub    rsp,0x20
   14000cab6:	mov    rbp,rdx
   14000cab9:	lea    rcx,[rbp+0x28]
   14000cabd:	call   0x14000bc5c
   14000cac2:	add    rsp,0x20
   14000cac6:	pop    rbp
   14000cac7:	ret    
   14000cac8:	rex push rdi
   14000caca:	sub    rsp,0x60
   14000cace:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cad7:	mov    QWORD PTR [rsp+0x70],rbx
   14000cadc:	mov    QWORD PTR [rsp+0x78],rsi
   14000cae1:	mov    rsi,r8
   14000cae4:	mov    rbx,rdx
   14000cae7:	lea    rdi,[rcx-0x60]
   14000caeb:	mov    rdx,QWORD PTR [rdi+0x38]
   14000caef:	lea    rcx,[rsp+0x28]
   14000caf4:	call   0x14001324c
   14000caf9:	nop
   14000cafa:	lea    rcx,[rsp+0x40]
   14000caff:	mov    rax,QWORD PTR [rbx]
   14000cb02:	mov    QWORD PTR [rcx],rax
   14000cb05:	mov    rax,QWORD PTR [rbx+0x8]
   14000cb09:	mov    QWORD PTR [rcx+0x8],rax
   14000cb0d:	mov    rax,QWORD PTR [rbx+0x10]
   14000cb11:	mov    QWORD PTR [rcx+0x10],rax
   14000cb15:	mov    rax,QWORD PTR [rdi]
   14000cb18:	mov    r8,rsi
   14000cb1b:	lea    rdx,[rsp+0x40]
   14000cb20:	mov    rcx,rdi
   14000cb23:	call   QWORD PTR [rax+0x180]
   14000cb29:	mov    ebx,eax
   14000cb2b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cb30:	je     0x14000cb3e
   14000cb32:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cb37:	xor    ecx,ecx
   14000cb39:	call   0x140012524
   14000cb3e:	mov    eax,ebx
   14000cb40:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cb45:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cb4a:	add    rsp,0x60
   14000cb4e:	pop    rdi
   14000cb4f:	ret    
   14000cb50:	int3   
   14000cb51:	int3   
   14000cb52:	int3   
   14000cb53:	int3   
   14000cb54:	int3   
   14000cb55:	int3   
   14000cb56:	int3   
   14000cb57:	int3   
   14000cb58:	rex push rbp
   14000cb5a:	sub    rsp,0x20
   14000cb5e:	mov    rbp,rdx
   14000cb61:	lea    rcx,[rbp+0x28]
   14000cb65:	call   0x14000bc5c
   14000cb6a:	add    rsp,0x20
   14000cb6e:	pop    rbp
   14000cb6f:	ret    
   14000cb70:	rex push rdi
   14000cb72:	sub    rsp,0x60
   14000cb76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cb7f:	mov    QWORD PTR [rsp+0x70],rbx
   14000cb84:	mov    QWORD PTR [rsp+0x78],rsi
   14000cb89:	mov    rbx,r8
   14000cb8c:	mov    esi,edx
   14000cb8e:	lea    rdi,[rcx-0x60]
   14000cb92:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cb96:	lea    rcx,[rsp+0x28]
   14000cb9b:	call   0x14001324c
   14000cba0:	nop
   14000cba1:	lea    rcx,[rsp+0x40]
   14000cba6:	mov    rax,QWORD PTR [rbx]
   14000cba9:	mov    QWORD PTR [rcx],rax
   14000cbac:	mov    rax,QWORD PTR [rbx+0x8]
   14000cbb0:	mov    QWORD PTR [rcx+0x8],rax
   14000cbb4:	mov    rax,QWORD PTR [rbx+0x10]
   14000cbb8:	mov    QWORD PTR [rcx+0x10],rax
   14000cbbc:	mov    rax,QWORD PTR [rdi]
   14000cbbf:	lea    r8,[rsp+0x40]
   14000cbc4:	mov    edx,esi
   14000cbc6:	mov    rcx,rdi
   14000cbc9:	call   QWORD PTR [rax+0x188]
   14000cbcf:	mov    ebx,eax
   14000cbd1:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cbd6:	je     0x14000cbe4
   14000cbd8:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cbdd:	xor    ecx,ecx
   14000cbdf:	call   0x140012524
   14000cbe4:	mov    eax,ebx
   14000cbe6:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cbeb:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cbf0:	add    rsp,0x60
   14000cbf4:	pop    rdi
   14000cbf5:	ret    
   14000cbf6:	int3   
   14000cbf7:	int3   
   14000cbf8:	int3   
   14000cbf9:	int3   
   14000cbfa:	int3   
   14000cbfb:	int3   
   14000cbfc:	int3   
   14000cbfd:	int3   
   14000cbfe:	int3   
   14000cbff:	int3   
   14000cc00:	rex push rbp
   14000cc02:	sub    rsp,0x20
   14000cc06:	mov    rbp,rdx
   14000cc09:	lea    rcx,[rbp+0x28]
   14000cc0d:	call   0x14000bc5c
   14000cc12:	add    rsp,0x20
   14000cc16:	pop    rbp
   14000cc17:	ret    
   14000cc18:	mov    rax,rsp
   14000cc1b:	push   rdi
   14000cc1c:	sub    rsp,0x70
   14000cc20:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000cc29:	mov    QWORD PTR [rax+0x8],rbx
   14000cc2d:	mov    QWORD PTR [rax+0x10],rbp
   14000cc31:	mov    QWORD PTR [rax+0x18],rsi
   14000cc35:	mov    rdi,r9
   14000cc38:	mov    rsi,r8
   14000cc3b:	mov    rbp,rdx
   14000cc3e:	lea    rbx,[rcx-0x60]
   14000cc42:	mov    rdx,QWORD PTR [rbx+0x38]
   14000cc46:	lea    rcx,[rax-0x40]
   14000cc4a:	call   0x14001324c
   14000cc4f:	nop
   14000cc50:	lea    rcx,[rsp+0x50]
   14000cc55:	mov    r10,QWORD PTR [rsp+0xa8]
   14000cc5d:	mov    rax,QWORD PTR [r10]
   14000cc60:	mov    QWORD PTR [rcx],rax
   14000cc63:	mov    rax,QWORD PTR [r10+0x8]
   14000cc67:	mov    QWORD PTR [rcx+0x8],rax
   14000cc6b:	mov    rax,QWORD PTR [r10+0x10]
   14000cc6f:	mov    QWORD PTR [rcx+0x10],rax
   14000cc73:	mov    r10,QWORD PTR [rbx]
   14000cc76:	lea    rax,[rsp+0x50]
   14000cc7b:	mov    QWORD PTR [rsp+0x28],rax
   14000cc80:	mov    rax,QWORD PTR [rsp+0xa0]
   14000cc88:	mov    QWORD PTR [rsp+0x20],rax
   14000cc8d:	mov    r9,rdi
   14000cc90:	mov    r8,rsi
   14000cc93:	mov    rdx,rbp
   14000cc96:	mov    rcx,rbx
   14000cc99:	call   QWORD PTR [r10+0x190]
   14000cca0:	mov    ebx,eax
   14000cca2:	cmp    DWORD PTR [rsp+0x40],0x0
   14000cca7:	je     0x14000ccb5
   14000cca9:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ccae:	xor    ecx,ecx
   14000ccb0:	call   0x140012524
   14000ccb5:	mov    eax,ebx
   14000ccb7:	lea    r11,[rsp+0x70]
   14000ccbc:	mov    rbx,QWORD PTR [r11+0x10]
   14000ccc0:	mov    rbp,QWORD PTR [r11+0x18]
   14000ccc4:	mov    rsi,QWORD PTR [r11+0x20]
   14000ccc8:	mov    rsp,r11
   14000cccb:	pop    rdi
   14000cccc:	ret    
   14000cccd:	int3   
   14000ccce:	int3   
   14000cccf:	int3   
   14000ccd0:	int3   
   14000ccd1:	int3   
   14000ccd2:	int3   
   14000ccd3:	int3   
   14000ccd4:	int3   
   14000ccd5:	int3   
   14000ccd6:	int3   
   14000ccd7:	int3   
   14000ccd8:	rex push rbp
   14000ccda:	sub    rsp,0x20
   14000ccde:	mov    rbp,rdx
   14000cce1:	lea    rcx,[rbp+0x38]
   14000cce5:	call   0x14000bc5c
   14000ccea:	add    rsp,0x20
   14000ccee:	pop    rbp
   14000ccef:	ret    
   14000ccf0:	mov    rax,rsp
   14000ccf3:	push   rdi
   14000ccf4:	sub    rsp,0x60
   14000ccf8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cd01:	mov    QWORD PTR [rax+0x8],rbx
   14000cd05:	mov    QWORD PTR [rax+0x10],rbp
   14000cd09:	mov    QWORD PTR [rax+0x18],rsi
   14000cd0d:	mov    rsi,r9
   14000cd10:	mov    rbx,r8
   14000cd13:	mov    ebp,edx
   14000cd15:	lea    rdi,[rcx-0x60]
   14000cd19:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cd1d:	lea    rcx,[rax-0x40]
   14000cd21:	call   0x14001324c
   14000cd26:	nop
   14000cd27:	lea    rcx,[rsp+0x40]
   14000cd2c:	mov    rax,QWORD PTR [rbx]
   14000cd2f:	mov    QWORD PTR [rcx],rax
   14000cd32:	mov    rax,QWORD PTR [rbx+0x8]
   14000cd36:	mov    QWORD PTR [rcx+0x8],rax
   14000cd3a:	mov    rax,QWORD PTR [rbx+0x10]
   14000cd3e:	mov    QWORD PTR [rcx+0x10],rax
   14000cd42:	mov    rax,QWORD PTR [rdi]
   14000cd45:	mov    r9,rsi
   14000cd48:	lea    r8,[rsp+0x40]
   14000cd4d:	mov    edx,ebp
   14000cd4f:	mov    rcx,rdi
   14000cd52:	call   QWORD PTR [rax+0x198]
   14000cd58:	mov    ebx,eax
   14000cd5a:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cd5f:	je     0x14000cd6d
   14000cd61:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cd66:	xor    ecx,ecx
   14000cd68:	call   0x140012524
   14000cd6d:	mov    eax,ebx
   14000cd6f:	lea    r11,[rsp+0x60]
   14000cd74:	mov    rbx,QWORD PTR [r11+0x10]
   14000cd78:	mov    rbp,QWORD PTR [r11+0x18]
   14000cd7c:	mov    rsi,QWORD PTR [r11+0x20]
   14000cd80:	mov    rsp,r11
   14000cd83:	pop    rdi
   14000cd84:	ret    
   14000cd85:	int3   
   14000cd86:	int3   
   14000cd87:	int3   
   14000cd88:	int3   
   14000cd89:	int3   
   14000cd8a:	int3   
   14000cd8b:	int3   
   14000cd8c:	int3   
   14000cd8d:	int3   
   14000cd8e:	int3   
   14000cd8f:	int3   
   14000cd90:	rex push rbp
   14000cd92:	sub    rsp,0x20
   14000cd96:	mov    rbp,rdx
   14000cd99:	lea    rcx,[rbp+0x28]
   14000cd9d:	call   0x14000bc5c
   14000cda2:	add    rsp,0x20
   14000cda6:	pop    rbp
   14000cda7:	ret    
   14000cda8:	mov    rax,rsp
   14000cdab:	push   rdi
   14000cdac:	sub    rsp,0x40
   14000cdb0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cdb9:	mov    QWORD PTR [rax+0x8],rbx
   14000cdbd:	mov    QWORD PTR [rax+0x10],rbp
   14000cdc1:	mov    QWORD PTR [rax+0x18],rsi
   14000cdc5:	mov    rdi,r9
   14000cdc8:	mov    esi,r8d
   14000cdcb:	mov    ebp,edx
   14000cdcd:	lea    rbx,[rcx-0x60]
   14000cdd1:	mov    rdx,QWORD PTR [rbx+0x38]
   14000cdd5:	lea    rcx,[rax-0x20]
   14000cdd9:	call   0x14001324c
   14000cdde:	nop
   14000cddf:	mov    rax,QWORD PTR [rbx]
   14000cde2:	mov    r9,rdi
   14000cde5:	mov    r8d,esi
   14000cde8:	mov    edx,ebp
   14000cdea:	mov    rcx,rbx
   14000cded:	call   QWORD PTR [rax+0x1a0]
   14000cdf3:	mov    ebx,eax
   14000cdf5:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cdfa:	je     0x14000ce08
   14000cdfc:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ce01:	xor    ecx,ecx
   14000ce03:	call   0x140012524
   14000ce08:	mov    eax,ebx
   14000ce0a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ce0f:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ce14:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ce19:	add    rsp,0x40
   14000ce1d:	pop    rdi
   14000ce1e:	ret    
   14000ce1f:	int3   
   14000ce20:	int3   
   14000ce21:	int3   
   14000ce22:	int3   
   14000ce23:	int3   
   14000ce24:	int3   
   14000ce25:	int3   
   14000ce26:	int3   
   14000ce27:	int3   
   14000ce28:	rex push rbp
   14000ce2a:	sub    rsp,0x20
   14000ce2e:	mov    rbp,rdx
   14000ce31:	lea    rcx,[rbp+0x28]
   14000ce35:	call   0x14000bc5c
   14000ce3a:	add    rsp,0x20
   14000ce3e:	pop    rbp
   14000ce3f:	ret    
   14000ce40:	rex push rdi
   14000ce42:	sub    rsp,0x60
   14000ce46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ce4f:	mov    QWORD PTR [rsp+0x70],rbx
   14000ce54:	mov    rbx,rdx
   14000ce57:	lea    rdi,[rcx-0x60]
   14000ce5b:	mov    rdx,QWORD PTR [rdi+0x38]
   14000ce5f:	lea    rcx,[rsp+0x28]
   14000ce64:	call   0x14001324c
   14000ce69:	nop
   14000ce6a:	lea    rcx,[rsp+0x40]
   14000ce6f:	mov    rax,QWORD PTR [rbx]
   14000ce72:	mov    QWORD PTR [rcx],rax
   14000ce75:	mov    rax,QWORD PTR [rbx+0x8]
   14000ce79:	mov    QWORD PTR [rcx+0x8],rax
   14000ce7d:	mov    rax,QWORD PTR [rbx+0x10]
   14000ce81:	mov    QWORD PTR [rcx+0x10],rax
   14000ce85:	mov    rax,QWORD PTR [rdi]
   14000ce88:	lea    rdx,[rsp+0x40]
   14000ce8d:	mov    rcx,rdi
   14000ce90:	call   QWORD PTR [rax+0x1a8]
   14000ce96:	mov    ebx,eax
   14000ce98:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ce9d:	je     0x14000ceab
   14000ce9f:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cea4:	xor    ecx,ecx
   14000cea6:	call   0x140012524
   14000ceab:	mov    eax,ebx
   14000cead:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ceb2:	add    rsp,0x60
   14000ceb6:	pop    rdi
   14000ceb7:	ret    
   14000ceb8:	int3   
   14000ceb9:	int3   
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	int3   
   14000cebd:	int3   
   14000cebe:	int3   
   14000cebf:	int3   
   14000cec0:	rex push rbp
   14000cec2:	sub    rsp,0x20
   14000cec6:	mov    rbp,rdx
   14000cec9:	lea    rcx,[rbp+0x28]
   14000cecd:	call   0x14000bc5c
   14000ced2:	add    rsp,0x20
   14000ced6:	pop    rbp
   14000ced7:	ret    
   14000ced8:	rex push rdi
   14000ceda:	sub    rsp,0x60
   14000cede:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cee7:	mov    QWORD PTR [rsp+0x70],rbx
   14000ceec:	mov    QWORD PTR [rsp+0x78],rsi
   14000cef1:	mov    rsi,r8
   14000cef4:	mov    rbx,rdx
   14000cef7:	lea    rdi,[rcx-0x60]
   14000cefb:	mov    rdx,QWORD PTR [rdi+0x38]
   14000ceff:	lea    rcx,[rsp+0x28]
   14000cf04:	call   0x14001324c
   14000cf09:	nop
   14000cf0a:	lea    rcx,[rsp+0x40]
   14000cf0f:	mov    rax,QWORD PTR [rbx]
   14000cf12:	mov    QWORD PTR [rcx],rax
   14000cf15:	mov    rax,QWORD PTR [rbx+0x8]
   14000cf19:	mov    QWORD PTR [rcx+0x8],rax
   14000cf1d:	mov    rax,QWORD PTR [rbx+0x10]
   14000cf21:	mov    QWORD PTR [rcx+0x10],rax
   14000cf25:	mov    rax,QWORD PTR [rdi]
   14000cf28:	mov    r8,rsi
   14000cf2b:	lea    rdx,[rsp+0x40]
   14000cf30:	mov    rcx,rdi
   14000cf33:	call   QWORD PTR [rax+0x1b0]
   14000cf39:	mov    ebx,eax
   14000cf3b:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cf40:	je     0x14000cf4e
   14000cf42:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cf47:	xor    ecx,ecx
   14000cf49:	call   0x140012524
   14000cf4e:	mov    eax,ebx
   14000cf50:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cf55:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cf5a:	add    rsp,0x60
   14000cf5e:	pop    rdi
   14000cf5f:	ret    
   14000cf60:	int3   
   14000cf61:	int3   
   14000cf62:	int3   
   14000cf63:	int3   
   14000cf64:	int3   
   14000cf65:	int3   
   14000cf66:	int3   
   14000cf67:	int3   
   14000cf68:	rex push rbp
   14000cf6a:	sub    rsp,0x20
   14000cf6e:	mov    rbp,rdx
   14000cf71:	lea    rcx,[rbp+0x28]
   14000cf75:	call   0x14000bc5c
   14000cf7a:	add    rsp,0x20
   14000cf7e:	pop    rbp
   14000cf7f:	ret    
   14000cf80:	rex push rdi
   14000cf82:	sub    rsp,0x60
   14000cf86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cf8f:	mov    QWORD PTR [rsp+0x70],rbx
   14000cf94:	mov    QWORD PTR [rsp+0x78],rsi
   14000cf99:	mov    rsi,r8
   14000cf9c:	mov    rbx,rdx
   14000cf9f:	lea    rdi,[rcx-0x60]
   14000cfa3:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cfa7:	lea    rcx,[rsp+0x28]
   14000cfac:	call   0x14001324c
   14000cfb1:	nop
   14000cfb2:	lea    rcx,[rsp+0x40]
   14000cfb7:	mov    rax,QWORD PTR [rbx]
   14000cfba:	mov    QWORD PTR [rcx],rax
   14000cfbd:	mov    rax,QWORD PTR [rbx+0x8]
   14000cfc1:	mov    QWORD PTR [rcx+0x8],rax
   14000cfc5:	mov    rax,QWORD PTR [rbx+0x10]
   14000cfc9:	mov    QWORD PTR [rcx+0x10],rax
   14000cfcd:	mov    rax,QWORD PTR [rdi]
   14000cfd0:	mov    r8,rsi
   14000cfd3:	lea    rdx,[rsp+0x40]
   14000cfd8:	mov    rcx,rdi
   14000cfdb:	call   QWORD PTR [rax+0x1b8]
   14000cfe1:	mov    ebx,eax
   14000cfe3:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cfe8:	je     0x14000cff6
   14000cfea:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cfef:	xor    ecx,ecx
   14000cff1:	call   0x140012524
   14000cff6:	mov    eax,ebx
   14000cff8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cffd:	mov    rsi,QWORD PTR [rsp+0x78]
   14000d002:	add    rsp,0x60
   14000d006:	pop    rdi
   14000d007:	ret    
   14000d008:	int3   
   14000d009:	int3   
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	rex push rbp
   14000d012:	sub    rsp,0x20
   14000d016:	mov    rbp,rdx
   14000d019:	lea    rcx,[rbp+0x28]
   14000d01d:	call   0x14000bc5c
   14000d022:	add    rsp,0x20
   14000d026:	pop    rbp
   14000d027:	ret    
   14000d028:	rex push rbx
   14000d02a:	sub    rsp,0x40
   14000d02e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d037:	lea    rbx,[rcx-0x68]
   14000d03b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d03f:	lea    rcx,[rsp+0x28]
   14000d044:	call   0x14001324c
   14000d049:	nop
   14000d04a:	mov    rcx,rbx
   14000d04d:	call   0x140013718
   14000d052:	mov    ebx,eax
   14000d054:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d059:	je     0x14000d067
   14000d05b:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d060:	xor    ecx,ecx
   14000d062:	call   0x140012524
   14000d067:	mov    eax,ebx
   14000d069:	add    rsp,0x40
   14000d06d:	pop    rbx
   14000d06e:	ret    
   14000d06f:	int3   
   14000d070:	int3   
   14000d071:	int3   
   14000d072:	int3   
   14000d073:	int3   
   14000d074:	int3   
   14000d075:	int3   
   14000d076:	int3   
   14000d077:	int3   
   14000d078:	rex push rbp
   14000d07a:	sub    rsp,0x20
   14000d07e:	mov    rbp,rdx
   14000d081:	lea    rcx,[rbp+0x28]
   14000d085:	call   0x14000bc5c
   14000d08a:	add    rsp,0x20
   14000d08e:	pop    rbp
   14000d08f:	ret    
   14000d090:	rex push rbx
   14000d092:	sub    rsp,0x40
   14000d096:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d09f:	lea    rbx,[rcx-0x68]
   14000d0a3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d0a7:	lea    rcx,[rsp+0x28]
   14000d0ac:	call   0x14001324c
   14000d0b1:	nop
   14000d0b2:	mov    rcx,rbx
   14000d0b5:	call   0x1400137cc
   14000d0ba:	mov    ebx,eax
   14000d0bc:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d0c1:	je     0x14000d0cf
   14000d0c3:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d0c8:	xor    ecx,ecx
   14000d0ca:	call   0x140012524
   14000d0cf:	mov    eax,ebx
   14000d0d1:	add    rsp,0x40
   14000d0d5:	pop    rbx
   14000d0d6:	ret    
   14000d0d7:	int3   
   14000d0d8:	int3   
   14000d0d9:	int3   
   14000d0da:	int3   
   14000d0db:	int3   
   14000d0dc:	int3   
   14000d0dd:	int3   
   14000d0de:	int3   
   14000d0df:	int3   
   14000d0e0:	rex push rbp
   14000d0e2:	sub    rsp,0x20
   14000d0e6:	mov    rbp,rdx
   14000d0e9:	lea    rcx,[rbp+0x28]
   14000d0ed:	call   0x14000bc5c
   14000d0f2:	add    rsp,0x20
   14000d0f6:	pop    rbp
   14000d0f7:	ret    
   14000d0f8:	rex push rdi
   14000d0fa:	sub    rsp,0x40
   14000d0fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d107:	mov    QWORD PTR [rsp+0x50],rbx
   14000d10c:	mov    QWORD PTR [rsp+0x58],rsi
   14000d111:	mov    rdi,r8
   14000d114:	mov    rsi,rdx
   14000d117:	lea    rbx,[rcx-0x68]
   14000d11b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d11f:	lea    rcx,[rsp+0x28]
   14000d124:	call   0x14001324c
   14000d129:	nop
   14000d12a:	mov    r8,rdi
   14000d12d:	mov    rdx,rsi
   14000d130:	mov    rcx,rbx
   14000d133:	call   0x140013848
   14000d138:	mov    ebx,eax
   14000d13a:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d13f:	je     0x14000d14d
   14000d141:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d146:	xor    ecx,ecx
   14000d148:	call   0x140012524
   14000d14d:	mov    eax,ebx
   14000d14f:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d154:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d159:	add    rsp,0x40
   14000d15d:	pop    rdi
   14000d15e:	ret    
   14000d15f:	int3   
   14000d160:	int3   
   14000d161:	int3   
   14000d162:	int3   
   14000d163:	int3   
   14000d164:	int3   
   14000d165:	int3   
   14000d166:	int3   
   14000d167:	int3   
   14000d168:	rex push rbp
   14000d16a:	sub    rsp,0x20
   14000d16e:	mov    rbp,rdx
   14000d171:	lea    rcx,[rbp+0x28]
   14000d175:	call   0x14000bc5c
   14000d17a:	add    rsp,0x20
   14000d17e:	pop    rbp
   14000d17f:	ret    
   14000d180:	rex push rdi
   14000d182:	sub    rsp,0x40
   14000d186:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d18f:	mov    QWORD PTR [rsp+0x50],rbx
   14000d194:	mov    rdi,rdx
   14000d197:	lea    rbx,[rcx-0x68]
   14000d19b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d19f:	lea    rcx,[rsp+0x28]
   14000d1a4:	call   0x14001324c
   14000d1a9:	nop
   14000d1aa:	mov    rax,QWORD PTR [rbx]
   14000d1ad:	mov    rdx,rdi
   14000d1b0:	mov    rcx,rbx
   14000d1b3:	call   QWORD PTR [rax+0x1c0]
   14000d1b9:	mov    ebx,eax
   14000d1bb:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d1c0:	je     0x14000d1ce
   14000d1c2:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d1c7:	xor    ecx,ecx
   14000d1c9:	call   0x140012524
   14000d1ce:	mov    eax,ebx
   14000d1d0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d1d5:	add    rsp,0x40
   14000d1d9:	pop    rdi
   14000d1da:	ret    
   14000d1db:	int3   
   14000d1dc:	int3   
   14000d1dd:	int3   
   14000d1de:	int3   
   14000d1df:	int3   
   14000d1e0:	rex push rbp
   14000d1e2:	sub    rsp,0x20
   14000d1e6:	mov    rbp,rdx
   14000d1e9:	lea    rcx,[rbp+0x28]
   14000d1ed:	call   0x14000bc5c
   14000d1f2:	add    rsp,0x20
   14000d1f6:	pop    rbp
   14000d1f7:	ret    
   14000d1f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1fd:	push   rdi
   14000d1fe:	sub    rsp,0x30
   14000d202:	test   rdx,rdx
   14000d205:	mov    rbx,rdx
   14000d208:	mov    rdi,rcx
   14000d20b:	jne    0x14000d214
   14000d20d:	mov    eax,0x80004003
   14000d212:	jmp    0x14000d23e
   14000d214:	mov    rdx,QWORD PTR [rcx-0x30]
   14000d218:	lea    rcx,[rsp+0x20]
   14000d21d:	call   0x14001324c
   14000d222:	cmp    DWORD PTR [rsp+0x28],0x0
   14000d227:	mov    r11,QWORD PTR [rdi-0x28]
   14000d22b:	mov    QWORD PTR [rbx],r11
   14000d22e:	je     0x14000d23c
   14000d230:	mov    rdx,QWORD PTR [rsp+0x20]
   14000d235:	xor    ecx,ecx
   14000d237:	call   0x140012524
   14000d23c:	xor    eax,eax
   14000d23e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d243:	add    rsp,0x30
   14000d247:	pop    rdi
   14000d248:	ret    
   14000d249:	int3   
   14000d24a:	int3   
   14000d24b:	int3   
   14000d24c:	sub    rsp,0x28
   14000d250:	mov    rcx,QWORD PTR [rcx]
   14000d253:	test   rcx,rcx
   14000d256:	je     0x14000d25e
   14000d258:	mov    rax,QWORD PTR [rcx]
   14000d25b:	call   QWORD PTR [rax+0x10]
   14000d25e:	add    rsp,0x28
   14000d262:	ret    
   14000d263:	int3   
   14000d264:	mov    QWORD PTR [rsp+0x8],rbx
   14000d269:	mov    QWORD PTR [rsp+0x10],rbp
   14000d26e:	mov    QWORD PTR [rsp+0x18],rsi
   14000d273:	push   rdi
   14000d274:	sub    rsp,0xa0
   14000d27b:	mov    rdi,rdx
   14000d27e:	mov    rsi,rcx
   14000d281:	call   0x1400132b4
   14000d286:	xor    ebx,ebx
   14000d288:	mov    ebp,eax
   14000d28a:	cmp    rdi,rbx
   14000d28d:	je     0x14000d295
   14000d28f:	mov    rdi,QWORD PTR [rdi+0x40]
   14000d293:	jmp    0x14000d2d5
   14000d295:	bt     eax,0x1e
   14000d299:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d29d:	jae    0x14000d2a7
   14000d29f:	call   QWORD PTR [rip+0x244ab]        # 0x140031750
   14000d2a5:	jmp    0x14000d2b2
   14000d2a7:	mov    edx,0x4
   14000d2ac:	call   QWORD PTR [rip+0x243ce]        # 0x140031680
   14000d2b2:	cmp    rax,rbx
   14000d2b5:	mov    rdi,rax
   14000d2b8:	je     0x14000d2d5
   14000d2ba:	xor    r9d,r9d
   14000d2bd:	xor    r8d,r8d
   14000d2c0:	mov    edx,0x36b
   14000d2c5:	mov    rcx,rax
   14000d2c8:	call   QWORD PTR [rip+0x244fa]        # 0x1400317c8
   14000d2ce:	cmp    rax,rbx
   14000d2d1:	cmovne rdi,rax
   14000d2d5:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d2d9:	lea    rdx,[rsp+0x50]
   14000d2de:	call   QWORD PTR [rip+0x24394]        # 0x140031678
   14000d2e4:	bt     ebp,0x1e
   14000d2e8:	jb     0x14000d3ad
   14000d2ee:	cmp    rdi,rbx
   14000d2f1:	je     0x14000d310
   14000d2f3:	mov    edx,0xfffffff0
   14000d2f8:	mov    rcx,rdi
   14000d2fb:	call   QWORD PTR [rip+0x24447]        # 0x140031748
   14000d301:	bt     eax,0x1c
   14000d305:	jae    0x14000d30d
   14000d307:	bt     eax,0x1d
   14000d30b:	jae    0x14000d310
   14000d30d:	mov    rdi,rbx
   14000d310:	cmp    rdi,rbx
   14000d313:	mov    DWORD PTR [rsp+0x70],0x28
   14000d31b:	jne    0x14000d370
   14000d31d:	call   0x140009454
   14000d322:	cmp    rax,rbx
   14000d325:	je     0x14000d335
   14000d327:	mov    rdx,QWORD PTR [rax]
   14000d32a:	mov    rcx,rax
   14000d32d:	call   QWORD PTR [rdx+0xe8]
   14000d333:	jmp    0x14000d338
   14000d335:	mov    rax,rbx
   14000d338:	cmp    rax,rbx
   14000d33b:	je     0x14000d341
   14000d33d:	mov    rbx,QWORD PTR [rax+0x40]
   14000d341:	mov    edx,0x1
   14000d346:	mov    rcx,rbx
   14000d349:	call   0x14000a46c
   14000d34e:	lea    rdx,[rsp+0x70]
   14000d353:	mov    rcx,rax
   14000d356:	call   0x14000a4ec
   14000d35b:	lea    rdx,[rsp+0x84]
   14000d363:	lea    rcx,[rsp+0x60]
   14000d368:	call   QWORD PTR [rip+0x242ca]        # 0x140031638
   14000d36e:	jmp    0x14000d398
   14000d370:	lea    rdx,[rsp+0x60]
   14000d375:	mov    rcx,rdi
   14000d378:	call   QWORD PTR [rip+0x242fa]        # 0x140031678
   14000d37e:	mov    edx,0x2
   14000d383:	mov    rcx,rdi
   14000d386:	call   0x14000a46c
   14000d38b:	lea    rdx,[rsp+0x70]
   14000d390:	mov    rcx,rax
   14000d393:	call   0x14000a4ec
   14000d398:	lea    rdx,[rsp+0x84]
   14000d3a0:	lea    rcx,[rsp+0x40]
   14000d3a5:	call   QWORD PTR [rip+0x2428d]        # 0x140031638
   14000d3ab:	jmp    0x14000d3ed
   14000d3ad:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d3b1:	call   QWORD PTR [rip+0x24399]        # 0x140031750
   14000d3b7:	lea    rdx,[rsp+0x40]
   14000d3bc:	mov    rcx,rax
   14000d3bf:	mov    rbx,rax
   14000d3c2:	call   QWORD PTR [rip+0x243f0]        # 0x1400317b8
   14000d3c8:	lea    rdx,[rsp+0x60]
   14000d3cd:	mov    rcx,rdi
   14000d3d0:	call   QWORD PTR [rip+0x243e2]        # 0x1400317b8
   14000d3d6:	lea    r8,[rsp+0x60]
   14000d3db:	mov    r9d,0x2
   14000d3e1:	mov    rdx,rbx
   14000d3e4:	mov    rcx,rdi
   14000d3e7:	call   QWORD PTR [rip+0x24203]        # 0x1400315f0
   14000d3ed:	mov    ecx,DWORD PTR [rsp+0x60]
   14000d3f1:	mov    eax,DWORD PTR [rsp+0x68]
   14000d3f5:	mov    r10d,DWORD PTR [rsp+0x58]
   14000d3fa:	sub    r10d,DWORD PTR [rsp+0x50]
   14000d3ff:	mov    r11d,DWORD PTR [rsp+0x5c]
   14000d404:	add    eax,ecx
   14000d406:	sub    r11d,DWORD PTR [rsp+0x54]
   14000d40b:	mov    ecx,DWORD PTR [rsp+0x64]
   14000d40f:	cdq    
   14000d410:	sub    eax,edx
   14000d412:	sar    eax,1
   14000d414:	mov    r8d,eax
   14000d417:	mov    eax,r10d
   14000d41a:	cdq    
   14000d41b:	sub    eax,edx
   14000d41d:	sar    eax,1
   14000d41f:	sub    r8d,eax
   14000d422:	mov    eax,DWORD PTR [rsp+0x6c]
   14000d426:	add    eax,ecx
   14000d428:	cdq    
   14000d429:	sub    eax,edx
   14000d42b:	sar    eax,1
   14000d42d:	mov    r9d,eax
   14000d430:	mov    eax,r11d
   14000d433:	cdq    
   14000d434:	sub    eax,edx
   14000d436:	sar    eax,1
   14000d438:	sub    r9d,eax
   14000d43b:	cmp    r8d,DWORD PTR [rsp+0x40]
   14000d440:	jge    0x14000d449
   14000d442:	mov    r8d,DWORD PTR [rsp+0x40]
   14000d447:	jmp    0x14000d462
   14000d449:	lea    eax,[r10+r8*1]
   14000d44d:	cmp    eax,DWORD PTR [rsp+0x48]
   14000d451:	jle    0x14000d462
   14000d453:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d458:	sub    r8d,DWORD PTR [rsp+0x58]
   14000d45d:	add    r8d,DWORD PTR [rsp+0x48]
   14000d462:	cmp    r9d,DWORD PTR [rsp+0x44]
   14000d467:	jge    0x14000d470
   14000d469:	mov    r9d,DWORD PTR [rsp+0x44]
   14000d46e:	jmp    0x14000d489
   14000d470:	lea    eax,[r11+r9*1]
   14000d474:	cmp    eax,DWORD PTR [rsp+0x4c]
   14000d478:	jle    0x14000d489
   14000d47a:	mov    r9d,DWORD PTR [rsp+0x54]
   14000d47f:	sub    r9d,DWORD PTR [rsp+0x5c]
   14000d484:	add    r9d,DWORD PTR [rsp+0x4c]
   14000d489:	or     eax,0xffffffff
   14000d48c:	mov    DWORD PTR [rsp+0x30],0x15
   14000d494:	xor    edx,edx
   14000d496:	mov    DWORD PTR [rsp+0x28],eax
   14000d49a:	mov    rcx,rsi
   14000d49d:	mov    DWORD PTR [rsp+0x20],eax
   14000d4a1:	call   0x1400133ac
   14000d4a6:	lea    r11,[rsp+0xa0]
   14000d4ae:	mov    rbx,QWORD PTR [r11+0x10]
   14000d4b2:	mov    rbp,QWORD PTR [r11+0x18]
   14000d4b6:	mov    rsi,QWORD PTR [r11+0x20]
   14000d4ba:	mov    rsp,r11
   14000d4bd:	pop    rdi
   14000d4be:	ret    
   14000d4bf:	int3   
   14000d4c0:	sub    rsp,0x28
   14000d4c4:	mov    eax,DWORD PTR [rcx+0x78]
   14000d4c7:	mov    DWORD PTR [rcx+0x88],edx
   14000d4cd:	test   al,0x10
   14000d4cf:	je     0x14000d4e9
   14000d4d1:	and    eax,0xffffffef
   14000d4d4:	xor    r9d,r9d
   14000d4d7:	xor    r8d,r8d
   14000d4da:	mov    DWORD PTR [rcx+0x78],eax
   14000d4dd:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d4e1:	xor    edx,edx
   14000d4e3:	call   QWORD PTR [rip+0x2427f]        # 0x140031768
   14000d4e9:	add    rsp,0x28
   14000d4ed:	ret    
   14000d4ee:	int3   
   14000d4ef:	int3   
   14000d4f0:	sub    rsp,0x38
   14000d4f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d4fd:	mov    ecx,0xa8
   14000d502:	call   0x140006114
   14000d507:	mov    rcx,rax
   14000d50a:	mov    QWORD PTR [rsp+0x40],rax
   14000d50f:	xor    eax,eax
   14000d511:	cmp    rcx,rax
   14000d514:	je     0x14000d51c
   14000d516:	call   0x14000bc78
   14000d51b:	nop
   14000d51c:	add    rsp,0x38
   14000d520:	ret    
   14000d521:	int3   
   14000d522:	int3   
   14000d523:	int3   
   14000d524:	int3   
   14000d525:	int3   
   14000d526:	int3   
   14000d527:	int3   
   14000d528:	int3   
   14000d529:	int3   
   14000d52a:	int3   
   14000d52b:	int3   
   14000d52c:	int3   
   14000d52d:	int3   
   14000d52e:	int3   
   14000d52f:	int3   
   14000d530:	rex push rbp
   14000d532:	sub    rsp,0x20
   14000d536:	mov    rbp,rdx
   14000d539:	mov    rcx,QWORD PTR [rbp+0x40]
   14000d53d:	call   0x140002f20
   14000d542:	add    rsp,0x20
   14000d546:	pop    rbp
   14000d547:	ret    
   14000d548:	mov    QWORD PTR [rsp+0x8],rcx
   14000d54d:	sub    rsp,0x38
   14000d551:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d55a:	mov    QWORD PTR [rsp+0x48],rcx
   14000d55f:	test   rcx,rcx
   14000d562:	je     0x14000d56a
   14000d564:	call   0x14000bc78
   14000d569:	nop
   14000d56a:	add    rsp,0x38
   14000d56e:	ret    
   14000d56f:	int3   
   14000d570:	int3   
   14000d571:	int3   
   14000d572:	int3   
   14000d573:	int3   
   14000d574:	int3   
   14000d575:	int3   
   14000d576:	int3   
   14000d577:	int3   
   14000d578:	rex push rbp
   14000d57a:	sub    rsp,0x20
   14000d57e:	mov    rbp,rdx
   14000d581:	mov    rdx,QWORD PTR [rbp+0x40]
   14000d585:	mov    rcx,QWORD PTR [rbp+0x48]
   14000d589:	call   0x14000b30c
   14000d58e:	add    rsp,0x20
   14000d592:	pop    rbp
   14000d593:	ret    
   14000d594:	mov    QWORD PTR [rsp+0x8],rbx
   14000d599:	push   rdi
   14000d59a:	sub    rsp,0x20
   14000d59e:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d5a3:	mov    rdi,rdx
   14000d5a6:	mov    rbx,rcx
   14000d5a9:	jne    0x14000d5f1
   14000d5ab:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d5b0:	jne    0x14000d5dc
   14000d5b2:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d5b6:	call   QWORD PTR [rip+0x23e34]        # 0x1400313f0
   14000d5bc:	test   rax,rax
   14000d5bf:	mov    QWORD PTR [rbx+0x8],rax
   14000d5c3:	jne    0x14000d5dc
   14000d5c5:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d5c9:	call   QWORD PTR [rip+0x23e99]        # 0x140031468
   14000d5cf:	test   rax,rax
   14000d5d2:	mov    QWORD PTR [rbx+0x8],rax
   14000d5d6:	setne  al
   14000d5d9:	mov    BYTE PTR [rbx+0x10],al
   14000d5dc:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d5e0:	lea    rdx,[rip+0x25f69]        # 0x140033550
   14000d5e7:	call   QWORD PTR [rip+0x23e73]        # 0x140031460
   14000d5ed:	mov    QWORD PTR [rbx+0x20],rax
   14000d5f1:	mov    rax,QWORD PTR [rbx+0x20]
   14000d5f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5fa:	mov    QWORD PTR [rdi],rax
   14000d5fd:	mov    rax,rdi
   14000d600:	add    rsp,0x20
   14000d604:	pop    rdi
   14000d605:	ret    
   14000d606:	int3   
   14000d607:	int3   
   14000d608:	mov    QWORD PTR [rsp+0x8],rbx
   14000d60d:	push   rdi
   14000d60e:	sub    rsp,0x20
   14000d612:	mov    rdi,rcx
   14000d615:	and    QWORD PTR [rsp+0x40],0x0
   14000d61b:	call   0x1400131d0
   14000d620:	lea    rdx,[rsp+0x40]
   14000d625:	mov    rcx,QWORD PTR [rax+0xd8]
   14000d62c:	call   0x140012540
   14000d631:	mov    ebx,eax
   14000d633:	mov    DWORD PTR [rsp+0x38],eax
   14000d637:	test   eax,eax
   14000d639:	je     0x14000d672
   14000d63b:	lea    rdx,[rsp+0x48]
   14000d640:	mov    rcx,rdi
   14000d643:	call   0x14000d594
   14000d648:	mov    r11,QWORD PTR [rdi+0x20]
   14000d64c:	xor    ecx,ecx
   14000d64e:	test   r11,r11
   14000d651:	setne  cl
   14000d654:	test   ecx,ecx
   14000d656:	jne    0x14000d65d
   14000d658:	call   0x140006408
   14000d65d:	call   r11
   14000d660:	nop
   14000d661:	cmp    ebx,0x2
   14000d664:	je     0x14000d672
   14000d666:	mov    rdx,QWORD PTR [rsp+0x40]
   14000d66b:	xor    ecx,ecx
   14000d66d:	call   0x140012524
   14000d672:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d677:	add    rsp,0x20
   14000d67b:	pop    rdi
   14000d67c:	ret    
   14000d67d:	int3   
   14000d67e:	int3   
   14000d67f:	int3   
   14000d680:	int3   
   14000d681:	int3   
   14000d682:	int3   
   14000d683:	int3   
   14000d684:	int3   
   14000d685:	int3   
   14000d686:	int3   
   14000d687:	int3   
   14000d688:	rex push rbp
   14000d68a:	sub    rsp,0x20
   14000d68e:	mov    rbp,rdx
   14000d691:	cmp    DWORD PTR [rbp+0x38],0x2
   14000d695:	je     0x14000d6a2
   14000d697:	mov    rdx,QWORD PTR [rbp+0x40]
   14000d69b:	xor    ecx,ecx
   14000d69d:	call   0x140012524
   14000d6a2:	add    rsp,0x20
   14000d6a6:	pop    rbp
   14000d6a7:	ret    
   14000d6a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d6ad:	push   rdi
   14000d6ae:	sub    rsp,0x20
   14000d6b2:	cmp    QWORD PTR [rcx+0x28],0x0
   14000d6b7:	mov    rdi,rdx
   14000d6ba:	mov    rbx,rcx
   14000d6bd:	jne    0x14000d705
   14000d6bf:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d6c4:	jne    0x14000d6f0
   14000d6c6:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d6ca:	call   QWORD PTR [rip+0x23d20]        # 0x1400313f0
   14000d6d0:	test   rax,rax
   14000d6d3:	mov    QWORD PTR [rbx+0x8],rax
   14000d6d7:	jne    0x14000d6f0
   14000d6d9:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d6dd:	call   QWORD PTR [rip+0x23d85]        # 0x140031468
   14000d6e3:	test   rax,rax
   14000d6e6:	mov    QWORD PTR [rbx+0x8],rax
   14000d6ea:	setne  al
   14000d6ed:	mov    BYTE PTR [rbx+0x10],al
   14000d6f0:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d6f4:	lea    rdx,[rip+0x25e6d]        # 0x140033568
   14000d6fb:	call   QWORD PTR [rip+0x23d5f]        # 0x140031460
   14000d701:	mov    QWORD PTR [rbx+0x28],rax
   14000d705:	mov    rax,QWORD PTR [rbx+0x28]
   14000d709:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d70e:	mov    QWORD PTR [rdi],rax
   14000d711:	mov    rax,rdi
   14000d714:	add    rsp,0x20
   14000d718:	pop    rdi
   14000d719:	ret    
   14000d71a:	int3   
   14000d71b:	int3   
   14000d71c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d721:	mov    QWORD PTR [rsp+0x10],rsi
   14000d726:	push   rdi
   14000d727:	sub    rsp,0x30
   14000d72b:	mov    rsi,rdx
   14000d72e:	mov    rdi,rcx
   14000d731:	and    QWORD PTR [rsp+0x58],0x0
   14000d737:	call   0x1400131d0
   14000d73c:	lea    rdx,[rsp+0x58]
   14000d741:	mov    rcx,QWORD PTR [rax+0xd8]
   14000d748:	call   0x140012540
   14000d74d:	mov    ebx,eax
   14000d74f:	mov    DWORD PTR [rsp+0x50],eax
   14000d753:	and    DWORD PTR [rsp+0x20],0x0
   14000d758:	test   eax,eax
   14000d75a:	je     0x14000d7c0
   14000d75c:	lea    rdx,[rsp+0x28]
   14000d761:	mov    rcx,rdi
   14000d764:	call   0x14000d6a8
   14000d769:	mov    r11,QWORD PTR [rdi+0x28]
   14000d76d:	xor    eax,eax
   14000d76f:	test   r11,r11
   14000d772:	setne  al
   14000d775:	test   eax,eax
   14000d777:	jne    0x14000d77e
   14000d779:	call   0x140006408
   14000d77e:	mov    rcx,rsi
   14000d781:	call   r11
   14000d784:	mov    esi,eax
   14000d786:	mov    DWORD PTR [rsp+0x20],eax
   14000d78a:	cmp    ebx,0x2
   14000d78d:	je     0x14000d7be
   14000d78f:	xor    ebx,ebx
   14000d791:	test   eax,eax
   14000d793:	sete   bl
   14000d796:	test   ebx,ebx
   14000d798:	je     0x14000d7a4
   14000d79a:	call   QWORD PTR [rip+0x23cd8]        # 0x140031478
   14000d7a0:	mov    edi,eax
   14000d7a2:	jmp    0x14000d7a6
   14000d7a4:	xor    edi,edi
   14000d7a6:	mov    rdx,QWORD PTR [rsp+0x58]
   14000d7ab:	xor    ecx,ecx
   14000d7ad:	call   0x140012524
   14000d7b2:	test   ebx,ebx
   14000d7b4:	je     0x14000d7be
   14000d7b6:	mov    ecx,edi
   14000d7b8:	call   QWORD PTR [rip+0x23c42]        # 0x140031400
   14000d7be:	mov    eax,esi
   14000d7c0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d7c5:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d7ca:	add    rsp,0x30
   14000d7ce:	pop    rdi
   14000d7cf:	ret    
   14000d7d0:	int3   
   14000d7d1:	int3   
   14000d7d2:	int3   
   14000d7d3:	int3   
   14000d7d4:	int3   
   14000d7d5:	int3   
   14000d7d6:	int3   
   14000d7d7:	int3   
   14000d7d8:	int3   
   14000d7d9:	int3   
   14000d7da:	int3   
   14000d7db:	int3   
   14000d7dc:	rex push rbx
   14000d7de:	push   rbp
   14000d7df:	push   rdi
   14000d7e0:	sub    rsp,0x20
   14000d7e4:	mov    rbp,rdx
   14000d7e7:	cmp    DWORD PTR [rbp+0x50],0x2
   14000d7eb:	je     0x14000d81c
   14000d7ed:	xor    ebx,ebx
   14000d7ef:	cmp    DWORD PTR [rbp+0x20],ebx
   14000d7f2:	sete   bl
   14000d7f5:	test   ebx,ebx
   14000d7f7:	je     0x14000d803
   14000d7f9:	call   QWORD PTR [rip+0x23c79]        # 0x140031478
   14000d7ff:	mov    edi,eax
   14000d801:	jmp    0x14000d805
   14000d803:	xor    edi,edi
   14000d805:	mov    rdx,QWORD PTR [rbp+0x58]
   14000d809:	xor    ecx,ecx
   14000d80b:	call   0x140012524
   14000d810:	test   ebx,ebx
   14000d812:	je     0x14000d81c
   14000d814:	mov    ecx,edi
   14000d816:	call   QWORD PTR [rip+0x23be4]        # 0x140031400
   14000d81c:	add    rsp,0x20
   14000d820:	pop    rdi
   14000d821:	pop    rbp
   14000d822:	pop    rbx
   14000d823:	ret    
   14000d824:	rex push rbx
   14000d826:	sub    rsp,0x20
   14000d82a:	cmp    DWORD PTR [rcx],0x7fffffff
   14000d830:	mov    rbx,rcx
   14000d833:	je     0x14000d842
   14000d835:	mov    ecx,DWORD PTR [rcx]
   14000d837:	call   0x140015898
   14000d83c:	mov    DWORD PTR [rbx],0x7fffffff
   14000d842:	add    rsp,0x20
   14000d846:	pop    rbx
   14000d847:	ret    
   14000d848:	rex push rbx
   14000d84a:	sub    rsp,0x20
   14000d84e:	lea    rdx,[rip+0xffffffffffff8bd7]        # 0x14000642c
   14000d855:	lea    rcx,[rip+0x37824]        # 0x140045080
   14000d85c:	call   0x140014348
   14000d861:	test   rax,rax
   14000d864:	mov    rbx,rax
   14000d867:	jne    0x14000d86f
   14000d869:	call   0x140006408
   14000d86e:	int3   
   14000d86f:	call   QWORD PTR [rip+0x23d6b]        # 0x1400315e0
   14000d875:	mov    DWORD PTR [rbx+0xb8],eax
   14000d87b:	call   QWORD PTR [rip+0x23d67]        # 0x1400315e8
   14000d881:	mov    r11d,eax
   14000d884:	cwde   
   14000d885:	mov    DWORD PTR [rsp+0x30],eax
   14000d889:	shr    r11,0x10
   14000d88d:	movsx  eax,r11w
   14000d891:	mov    DWORD PTR [rsp+0x34],eax
   14000d895:	mov    rax,QWORD PTR [rsp+0x30]
   14000d89a:	mov    QWORD PTR [rbx+0xbc],rax
   14000d8a1:	lea    rax,[rbx+0x98]
   14000d8a8:	add    rsp,0x20
   14000d8ac:	pop    rbx
   14000d8ad:	ret    
   14000d8ae:	int3   
   14000d8af:	int3   
   14000d8b0:	rex push rbx
   14000d8b2:	sub    rsp,0x20
   14000d8b6:	mov    rbx,rcx
   14000d8b9:	lea    rdx,[rip+0xffffffffffff8b6c]        # 0x14000642c
   14000d8c0:	lea    rcx,[rip+0x377b9]        # 0x140045080
   14000d8c7:	call   0x140014348
   14000d8cc:	test   rax,rax
   14000d8cf:	mov    r11,rax
   14000d8d2:	jne    0x14000d8da
   14000d8d4:	call   0x140006408
   14000d8d9:	int3   
   14000d8da:	mov    rax,QWORD PTR [rbx]
   14000d8dd:	mov    r9,QWORD PTR [r11+0xb0]
   14000d8e4:	mov    r8,QWORD PTR [r11+0xa8]
   14000d8eb:	mov    edx,DWORD PTR [r11+0xa0]
   14000d8f2:	mov    rcx,rbx
   14000d8f5:	add    rsp,0x20
   14000d8f9:	pop    rbx
   14000d8fa:	rex.W jmp QWORD PTR [rax+0x220]
   14000d901:	int3   
   14000d902:	int3   
   14000d903:	int3   
   14000d904:	rex push rdi
   14000d906:	sub    rsp,0x40
   14000d90a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000d913:	mov    QWORD PTR [rsp+0x50],rbx
   14000d918:	mov    QWORD PTR [rsp+0x60],rsi
   14000d91d:	mov    esi,ecx
   14000d91f:	call   0x140013220
   14000d924:	mov    rdi,rax
   14000d927:	xor    ebx,ebx
   14000d929:	cmp    QWORD PTR [rax+0x28],rbx
   14000d92d:	jne    0x14000d993
   14000d92f:	cmp    esi,ebx
   14000d931:	je     0x14000d993
   14000d933:	lea    rcx,[rip+0x82f6]        # 0x140015c30
   14000d93a:	call   0x140006104
   14000d93f:	mov    rsi,rax
   14000d942:	mov    ecx,0xb8
   14000d947:	call   0x140006114
   14000d94c:	mov    QWORD PTR [rsp+0x58],rax
   14000d951:	cmp    rax,rbx
   14000d954:	je     0x14000d987
   14000d956:	mov    DWORD PTR [rsp+0x28],0x1
   14000d95e:	mov    QWORD PTR [rsp+0x20],0x40
   14000d967:	lea    r9,[rip+0x9aee]        # 0x14001745c
   14000d96e:	lea    r8,[rip+0xfffffffffffffbd3]        # 0x14000d548
   14000d975:	lea    rdx,[rip+0x25024]        # 0x1400329a0
   14000d97c:	mov    rcx,rax
   14000d97f:	call   0x140016f34
   14000d984:	mov    rbx,rax
   14000d987:	mov    QWORD PTR [rdi+0x28],rbx
   14000d98b:	mov    rcx,rsi
   14000d98e:	call   0x140006104
   14000d993:	mov    rax,QWORD PTR [rdi+0x28]
   14000d997:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d99c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d9a1:	add    rsp,0x40
   14000d9a5:	pop    rdi
   14000d9a6:	ret    
   14000d9a7:	int3   
   14000d9a8:	int3   
   14000d9a9:	int3   
   14000d9aa:	int3   
   14000d9ab:	int3   
   14000d9ac:	int3   
   14000d9ad:	int3   
   14000d9ae:	int3   
   14000d9af:	int3   
   14000d9b0:	int3   
   14000d9b1:	int3   
   14000d9b2:	int3   
   14000d9b3:	int3   
   14000d9b4:	rex push rbp
   14000d9b6:	sub    rsp,0x20
   14000d9ba:	mov    rbp,rdx
   14000d9bd:	mov    rcx,QWORD PTR [rbp+0x58]
   14000d9c1:	call   0x140006160
   14000d9c6:	add    rsp,0x20
   14000d9ca:	pop    rbp
   14000d9cb:	ret    
   14000d9cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000d9d1:	push   rdi
   14000d9d2:	sub    rsp,0x20
   14000d9d6:	mov    rbx,rcx
   14000d9d9:	mov    ecx,0x1
   14000d9de:	call   0x14000d904
   14000d9e3:	mov    rdx,rbx
   14000d9e6:	mov    rcx,rax
   14000d9e9:	mov    rdi,rax
   14000d9ec:	call   0x140017070
   14000d9f1:	mov    rdx,rdi
   14000d9f4:	mov    rcx,rax
   14000d9f7:	mov    rbx,rax
   14000d9fa:	call   0x140013424
   14000d9ff:	mov    rax,rbx
   14000da02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da07:	add    rsp,0x20
   14000da0b:	pop    rdi
   14000da0c:	ret    
   14000da0d:	int3   
   14000da0e:	int3   
   14000da0f:	int3   
   14000da10:	rex push rbx
   14000da12:	sub    rsp,0x20
   14000da16:	mov    rbx,rcx
   14000da19:	call   0x140013220
   14000da1e:	mov    rcx,QWORD PTR [rax+0x28]
   14000da22:	xor    eax,eax
   14000da24:	cmp    rcx,rax
   14000da27:	je     0x14000da35
   14000da29:	add    rcx,0x30
   14000da2d:	mov    rdx,rbx
   14000da30:	call   0x14001775c
   14000da35:	add    rsp,0x20
   14000da39:	pop    rbx
   14000da3a:	ret    
   14000da3b:	int3   
   14000da3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000da41:	mov    QWORD PTR [rsp+0x10],rsi
   14000da46:	push   rdi
   14000da47:	sub    rsp,0x20
   14000da4b:	test   rdx,rdx
   14000da4e:	mov    rdi,rdx
   14000da51:	mov    rsi,rcx
   14000da54:	jne    0x14000da5a
   14000da56:	xor    eax,eax
   14000da58:	jmp    0x14000da8a
   14000da5a:	mov    ecx,0x1
   14000da5f:	call   0x14000d904
   14000da64:	mov    rdx,rdi
   14000da67:	mov    QWORD PTR [rsi+0x40],rdi
   14000da6b:	lea    rcx,[rax+0x30]
   14000da6f:	mov    rbx,rax
   14000da72:	call   0x1400179ac
   14000da77:	mov    rdx,rbx
   14000da7a:	mov    rcx,rsi
   14000da7d:	mov    QWORD PTR [rax],rsi
   14000da80:	call   0x140013424
   14000da85:	mov    eax,0x1
   14000da8a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da8f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000da94:	add    rsp,0x20
   14000da98:	pop    rdi
   14000da99:	ret    
   14000da9a:	int3   
   14000da9b:	int3   
   14000da9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000daa1:	push   rdi
   14000daa2:	sub    rsp,0x20
   14000daa6:	mov    rdi,QWORD PTR [rcx+0x40]
   14000daaa:	mov    rbx,rcx
   14000daad:	test   rdi,rdi
   14000dab0:	je     0x14000dad2
   14000dab2:	call   0x140013220
   14000dab7:	mov    rcx,QWORD PTR [rax+0x28]
   14000dabb:	test   rcx,rcx
   14000dabe:	je     0x14000dacd
   14000dac0:	mov    rdx,QWORD PTR [rbx+0x40]
   14000dac4:	add    rcx,0x30
   14000dac8:	call   0x1400177d0
   14000dacd:	and    QWORD PTR [rbx+0x40],0x0
   14000dad2:	and    QWORD PTR [rbx+0xa0],0x0
   14000dada:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dadf:	mov    rax,rdi
   14000dae2:	add    rsp,0x20
   14000dae6:	pop    rdi
   14000dae7:	ret    
   14000dae8:	rex push rbx
   14000daea:	sub    rsp,0x20
   14000daee:	lea    rdx,[rip+0xffffffffffff8937]        # 0x14000642c
   14000daf5:	lea    rcx,[rip+0x37584]        # 0x140045080
   14000dafc:	call   0x140014348
   14000db01:	test   rax,rax
   14000db04:	mov    rbx,rax
   14000db07:	jne    0x14000db0f
   14000db09:	call   0x140006408
   14000db0e:	int3   
   14000db0f:	call   0x1400131d0
   14000db14:	cmp    BYTE PTR [rax+0x28],0x0
   14000db18:	je     0x14000db2e
   14000db1a:	mov    rcx,QWORD PTR [rbx+0x48]
   14000db1e:	test   rcx,rcx
   14000db21:	je     0x14000db2e
   14000db23:	call   QWORD PTR [rip+0x23aaf]        # 0x1400315d8
   14000db29:	and    QWORD PTR [rbx+0x48],0x0
   14000db2e:	cmp    QWORD PTR [rbx+0x28],0x0
   14000db33:	je     0x14000db3e
   14000db35:	and    QWORD PTR [rbx+0x28],0x0
   14000db3a:	xor    eax,eax
   14000db3c:	jmp    0x14000db43
   14000db3e:	mov    eax,0x1
   14000db43:	add    rsp,0x20
   14000db47:	pop    rbx
   14000db48:	ret    
   14000db49:	int3   
   14000db4a:	int3   
   14000db4b:	int3   
   14000db4c:	rex push rbx
   14000db4e:	sub    rsp,0x20
   14000db52:	mov    rbx,rcx
   14000db55:	mov    rcx,QWORD PTR [rcx+0x98]
   14000db5c:	test   rcx,rcx
   14000db5f:	je     0x14000db6c
   14000db61:	mov    rax,QWORD PTR [rcx]
   14000db64:	mov    edx,0x1
   14000db69:	call   QWORD PTR [rax+0x8]
   14000db6c:	mov    rcx,QWORD PTR [rbx+0x58]
   14000db70:	and    QWORD PTR [rbx+0x98],0x0
   14000db78:	test   rcx,rcx
   14000db7b:	je     0x14000db88
   14000db7d:	mov    rax,QWORD PTR [rcx]
   14000db80:	xor    r8d,r8d
   14000db83:	xor    edx,edx
   14000db85:	call   QWORD PTR [rax+0x18]
   14000db88:	mov    rcx,QWORD PTR [rbx+0x50]
   14000db8c:	test   rcx,rcx
   14000db8f:	je     0x14000db97
   14000db91:	mov    rax,QWORD PTR [rcx]
   14000db94:	call   QWORD PTR [rax+0x10]
   14000db97:	mov    rcx,rbx
   14000db9a:	add    rsp,0x20
   14000db9e:	pop    rbx
   14000db9f:	jmp    0x14000d8b0
   14000dba4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dba9:	push   rdi
   14000dbaa:	sub    rsp,0x70
   14000dbae:	mov    rdi,rcx
   14000dbb1:	call   0x140009454
   14000dbb6:	test   rax,rax
   14000dbb9:	mov    rbx,rax
   14000dbbc:	je     0x14000dbfa
   14000dbbe:	cmp    QWORD PTR [rax+0x40],rdi
   14000dbc2:	jne    0x14000dbef
   14000dbc4:	call   0x1400131d0
   14000dbc9:	cmp    BYTE PTR [rax+0x28],0x0
   14000dbcd:	jne    0x14000dbea
   14000dbcf:	call   0x1400131d0
   14000dbd4:	cmp    rbx,QWORD PTR [rax+0x8]
   14000dbd8:	jne    0x14000dbe3
   14000dbda:	call   0x140015d1c
   14000dbdf:	test   eax,eax
   14000dbe1:	je     0x14000dbea
   14000dbe3:	xor    ecx,ecx
   14000dbe5:	call   0x1400070f0
   14000dbea:	and    QWORD PTR [rbx+0x40],0x0
   14000dbef:	cmp    QWORD PTR [rbx+0x48],rdi
   14000dbf3:	jne    0x14000dbfa
   14000dbf5:	and    QWORD PTR [rbx+0x48],0x0
   14000dbfa:	mov    rcx,QWORD PTR [rdi+0x90]
   14000dc01:	test   rcx,rcx
   14000dc04:	je     0x14000dc17
   14000dc06:	mov    rax,QWORD PTR [rcx]
   14000dc09:	call   QWORD PTR [rax+0xa0]
   14000dc0f:	and    QWORD PTR [rdi+0x90],0x0
   14000dc17:	mov    rcx,QWORD PTR [rdi+0x98]
   14000dc1e:	test   rcx,rcx
   14000dc21:	je     0x14000dc2e
   14000dc23:	mov    rax,QWORD PTR [rcx]
   14000dc26:	mov    edx,0x1
   14000dc2b:	call   QWORD PTR [rax+0x8]
   14000dc2e:	and    QWORD PTR [rdi+0x98],0x0
   14000dc36:	test   BYTE PTR [rdi+0x78],0x1
   14000dc3a:	je     0x14000dc96
   14000dc3c:	call   0x140013220
   14000dc41:	mov    rbx,QWORD PTR [rax+0x78]
   14000dc45:	test   rbx,rbx
   14000dc48:	je     0x14000dc96
   14000dc4a:	cmp    QWORD PTR [rbx+0x40],0x0
   14000dc4f:	je     0x14000dc96
   14000dc51:	xor    edx,edx
   14000dc53:	lea    rcx,[rsp+0x20]
   14000dc58:	lea    r8d,[rdx+0x48]
   14000dc5c:	call   0x14001b520
   14000dc61:	mov    rax,QWORD PTR [rdi+0x40]
   14000dc65:	mov    rcx,QWORD PTR [rbx+0x40]
   14000dc69:	lea    r9,[rsp+0x20]
   14000dc6e:	xor    r8d,r8d
   14000dc71:	mov    edx,0x433
   14000dc76:	mov    QWORD PTR [rsp+0x28],rax
   14000dc7b:	mov    QWORD PTR [rsp+0x30],rax
   14000dc80:	mov    DWORD PTR [rsp+0x20],0x38
   14000dc88:	mov    DWORD PTR [rsp+0x24],0x1
   14000dc90:	call   QWORD PTR [rip+0x23b32]        # 0x1400317c8
   14000dc96:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dc9a:	mov    edx,0xfffffffc
   14000dc9f:	call   QWORD PTR [rip+0x23923]        # 0x1400315c8
   14000dca5:	mov    rcx,rdi
   14000dca8:	mov    rbx,rax
   14000dcab:	call   0x14000d8b0
   14000dcb0:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dcb4:	mov    edx,0xfffffffc
   14000dcb9:	call   QWORD PTR [rip+0x23909]        # 0x1400315c8
   14000dcbf:	cmp    rax,rbx
   14000dcc2:	jne    0x14000dce7
   14000dcc4:	mov    rax,QWORD PTR [rdi]
   14000dcc7:	mov    rcx,rdi
   14000dcca:	call   QWORD PTR [rax+0x1e0]
   14000dcd0:	mov    r8,QWORD PTR [rax]
   14000dcd3:	test   r8,r8
   14000dcd6:	je     0x14000dce7
   14000dcd8:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dcdc:	mov    edx,0xfffffffc
   14000dce1:	call   QWORD PTR [rip+0x238e9]        # 0x1400315d0
   14000dce7:	mov    rcx,rdi
   14000dcea:	call   0x14000da9c
   14000dcef:	mov    r11,QWORD PTR [rdi]
   14000dcf2:	mov    rcx,rdi
   14000dcf5:	mov    rbx,QWORD PTR [rsp+0x80]
   14000dcfd:	add    rsp,0x70
   14000dd01:	pop    rdi
   14000dd02:	rex.WB jmp QWORD PTR [r11+0x228]
   14000dd09:	int3   
   14000dd0a:	int3   
   14000dd0b:	int3   
   14000dd0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd11:	push   rdi
   14000dd12:	sub    rsp,0x20
   14000dd16:	xor    ebx,ebx
   14000dd18:	mov    rdi,rcx
   14000dd1b:	cmp    QWORD PTR [rcx+0x40],rbx
   14000dd1f:	jne    0x14000dd34
   14000dd21:	cmp    QWORD PTR [rcx+0xa0],rbx
   14000dd28:	jne    0x14000dd2e
   14000dd2a:	xor    eax,eax
   14000dd2c:	jmp    0x14000dd8c
   14000dd2e:	cmp    QWORD PTR [rcx+0x40],rbx
   14000dd32:	je     0x14000dd55
   14000dd34:	call   0x140013220
   14000dd39:	mov    rcx,QWORD PTR [rax+0x28]
   14000dd3d:	cmp    rcx,rbx
   14000dd40:	jne    0x14000dd48
   14000dd42:	call   0x140006408
   14000dd47:	int3   
   14000dd48:	mov    rdx,QWORD PTR [rdi+0x40]
   14000dd4c:	add    rcx,0x30
   14000dd50:	call   0x14001775c
   14000dd55:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dd59:	cmp    rcx,rbx
   14000dd5c:	jne    0x14000dd67
   14000dd5e:	cmp    QWORD PTR [rdi+0xa0],rbx
   14000dd65:	je     0x14000dd8a
   14000dd67:	cmp    QWORD PTR [rdi+0xa0],rbx
   14000dd6e:	jne    0x14000dd78
   14000dd70:	call   QWORD PTR [rip+0x23912]        # 0x140031688
   14000dd76:	jmp    0x14000dd88
   14000dd78:	mov    rcx,QWORD PTR [rdi+0xa0]
   14000dd7f:	mov    rax,QWORD PTR [rcx]
   14000dd82:	call   QWORD PTR [rax+0xb0]
   14000dd88:	mov    ebx,eax
   14000dd8a:	mov    eax,ebx
   14000dd8c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd91:	add    rsp,0x20
   14000dd95:	pop    rdi
   14000dd96:	ret    
   14000dd97:	int3   
   14000dd98:	rex push rbx
   14000dd9a:	sub    rsp,0x40
   14000dd9e:	mov    rbx,rcx
   14000dda1:	mov    QWORD PTR [rsp+0x28],rdx
   14000dda6:	lea    rdx,[rip+0xffffffffffff867f]        # 0x14000642c
   14000ddad:	lea    rcx,[rip+0x372cc]        # 0x140045080
   14000ddb4:	mov    QWORD PTR [rsp+0x20],r8
   14000ddb9:	call   0x140014348
   14000ddbe:	test   rax,rax
   14000ddc1:	jne    0x14000ddc9
   14000ddc3:	call   0x140006408
   14000ddc8:	int3   
   14000ddc9:	mov    eax,DWORD PTR [rax+0xa0]
   14000ddcf:	xor    r8d,r8d
   14000ddd2:	lea    r9,[rsp+0x20]
   14000ddd7:	sub    eax,0x132
   14000dddc:	lea    edx,[r8+0x19]
   14000dde0:	mov    rcx,rbx
   14000dde3:	mov    DWORD PTR [rsp+0x30],eax
   14000dde7:	mov    rax,QWORD PTR [rbx]
   14000ddea:	call   QWORD PTR [rax+0x210]
   14000ddf0:	add    rsp,0x40
   14000ddf4:	pop    rbx
   14000ddf5:	ret    
   14000ddf6:	int3   
   14000ddf7:	int3   
   14000ddf8:	mov    QWORD PTR [rsp+0x8],rbx
   14000ddfd:	mov    QWORD PTR [rsp+0x10],rbp
   14000de02:	mov    QWORD PTR [rsp+0x18],rsi
   14000de07:	push   rdi
   14000de08:	sub    rsp,0x20
   14000de0c:	mov    edi,r8d
   14000de0f:	mov    ebp,edx
   14000de11:	mov    rsi,rcx
   14000de14:	call   QWORD PTR [rip+0x2387e]        # 0x140031698
   14000de1a:	test   rax,rax
   14000de1d:	mov    rbx,rax
   14000de20:	je     0x14000de5a
   14000de22:	mov    rcx,rax
   14000de25:	call   QWORD PTR [rip+0x23795]        # 0x1400315c0
   14000de2b:	test   rax,rax
   14000de2e:	je     0x14000de42
   14000de30:	mov    r8d,edi
   14000de33:	mov    edx,ebp
   14000de35:	mov    rcx,rbx
   14000de38:	call   0x14000ddf8
   14000de3d:	test   rax,rax
   14000de40:	jne    0x14000de8d
   14000de42:	test   edi,edi
   14000de44:	mov    rcx,rbx
   14000de47:	jne    0x14000de50
   14000de49:	call   0x14000d9cc
   14000de4e:	jmp    0x14000de8d
   14000de50:	call   0x14000da10
   14000de55:	test   rax,rax
   14000de58:	jne    0x14000de8d
   14000de5a:	mov    rcx,rsi
   14000de5d:	call   QWORD PTR [rip+0x2375d]        # 0x1400315c0
   14000de63:	jmp    0x14000de83
   14000de65:	mov    r8d,edi
   14000de68:	mov    edx,ebp
   14000de6a:	mov    rcx,rbx
   14000de6d:	call   0x14000ddf8
   14000de72:	test   rax,rax
   14000de75:	jne    0x14000de8d
   14000de77:	lea    edx,[rax+0x2]
   14000de7a:	mov    rcx,rbx
   14000de7d:	call   QWORD PTR [rip+0x237fd]        # 0x140031680
   14000de83:	test   rax,rax
   14000de86:	mov    rbx,rax
   14000de89:	jne    0x14000de65
   14000de8b:	xor    eax,eax
   14000de8d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de92:	mov    rbp,QWORD PTR [rsp+0x38]
   14000de97:	mov    rsi,QWORD PTR [rsp+0x40]
   14000de9c:	add    rsp,0x20
   14000dea0:	pop    rdi
   14000dea1:	ret    
   14000dea2:	int3   
   14000dea3:	int3   
   14000dea4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dea9:	mov    QWORD PTR [rsp+0x10],rsi
   14000deae:	push   rdi
   14000deaf:	sub    rsp,0x20
   14000deb3:	mov    rbx,QWORD PTR [rdx]
   14000deb6:	mov    rsi,rdx
   14000deb9:	mov    rdi,rcx
   14000debc:	test   rbx,rbx
   14000debf:	je     0x14000deff
   14000dec1:	mov    rcx,rbx
   14000dec4:	call   0x14000da10
   14000dec9:	test   rax,rax
   14000decc:	je     0x14000dee2
   14000dece:	mov    r8,QWORD PTR [rax]
   14000ded1:	mov    rdx,rsi
   14000ded4:	mov    rcx,rax
   14000ded7:	call   QWORD PTR [r8+0x200]
   14000dede:	test   eax,eax
   14000dee0:	jne    0x14000def8
   14000dee2:	cmp    rbx,rdi
   14000dee5:	je     0x14000deff
   14000dee7:	mov    rcx,rbx
   14000deea:	call   QWORD PTR [rip+0x23860]        # 0x140031750
   14000def0:	mov    rbx,rax
   14000def3:	test   rax,rax
   14000def6:	jmp    0x14000debf
   14000def8:	mov    eax,0x1
   14000defd:	jmp    0x14000df01
   14000deff:	xor    eax,eax
   14000df01:	mov    rbx,QWORD PTR [rsp+0x30]
   14000df06:	mov    rsi,QWORD PTR [rsp+0x38]
   14000df0b:	add    rsp,0x20
   14000df0f:	pop    rdi
   14000df10:	ret    
   14000df11:	int3   
   14000df12:	int3   
   14000df13:	int3   
   14000df14:	mov    QWORD PTR [rsp+0x8],rbx
   14000df19:	push   rdi
   14000df1a:	sub    rsp,0x30
   14000df1e:	mov    rdi,rdx
   14000df21:	mov    rbx,rcx
   14000df24:	lea    rdx,[rip+0xffffffffffff8501]        # 0x14000642c
   14000df2b:	lea    rcx,[rip+0x3714e]        # 0x140045080
   14000df32:	call   0x140014348
   14000df37:	test   rax,rax
   14000df3a:	mov    r11,rax
   14000df3d:	jne    0x14000df45
   14000df3f:	call   0x140006408
   14000df44:	int3   
   14000df45:	mov    rax,QWORD PTR [rbx]
   14000df48:	mov    r9,QWORD PTR [r11+0xb0]
   14000df4f:	mov    r8,QWORD PTR [r11+0xa8]
   14000df56:	mov    edx,DWORD PTR [r11+0xa0]
   14000df5d:	mov    rcx,rbx
   14000df60:	mov    QWORD PTR [rsp+0x20],rdi
   14000df65:	call   QWORD PTR [rax+0x230]
   14000df6b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000df70:	add    rsp,0x30
   14000df74:	pop    rdi
   14000df75:	ret    
   14000df76:	int3   
   14000df77:	int3   
   14000df78:	rex push rbx
   14000df7a:	sub    rsp,0x20
   14000df7e:	cmp    QWORD PTR [rcx+0x98],0x0
   14000df86:	mov    rbx,rcx
   14000df89:	je     0x14000df9f
   14000df8b:	mov    rcx,QWORD PTR [rcx+0x98]
   14000df92:	mov    rax,QWORD PTR [rcx]
   14000df95:	call   QWORD PTR [rax+0x120]
   14000df9b:	test   eax,eax
   14000df9d:	jne    0x14000dfa7
   14000df9f:	mov    rcx,rbx
   14000dfa2:	call   0x14000d8b0
   14000dfa7:	add    rsp,0x20
   14000dfab:	pop    rbx
   14000dfac:	ret    
   14000dfad:	int3   
   14000dfae:	int3   
   14000dfaf:	int3   
   14000dfb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dfb5:	mov    QWORD PTR [rsp+0x10],rsi
   14000dfba:	push   rdi
   14000dfbb:	sub    rsp,0x20
   14000dfbf:	mov    rsi,rcx
   14000dfc2:	call   0x1400132b4
   14000dfc7:	xor    ebx,ebx
   14000dfc9:	bt     eax,0x1e
   14000dfcd:	jb     0x14000e041
   14000dfcf:	call   0x140009454
   14000dfd4:	cmp    rax,rbx
   14000dfd7:	je     0x14000dfea
   14000dfd9:	mov    rdx,QWORD PTR [rax]
   14000dfdc:	mov    rcx,rax
   14000dfdf:	call   QWORD PTR [rdx+0xe8]
   14000dfe5:	mov    rdi,rax
   14000dfe8:	jmp    0x14000dfed
   14000dfea:	mov    rdi,rbx
   14000dfed:	cmp    rdi,rbx
   14000dff0:	je     0x14000e041
   14000dff2:	mov    ecx,0x10
   14000dff7:	call   QWORD PTR [rip+0x236db]        # 0x1400316d8
   14000dffd:	cmp    ax,bx
   14000e000:	jl     0x14000e041
   14000e002:	mov    ecx,0x11
   14000e007:	call   QWORD PTR [rip+0x236cb]        # 0x1400316d8
   14000e00d:	cmp    ax,bx
   14000e010:	jl     0x14000e041
   14000e012:	mov    ecx,0x12
   14000e017:	call   QWORD PTR [rip+0x236bb]        # 0x1400316d8
   14000e01d:	cmp    ax,bx
   14000e020:	jl     0x14000e041
   14000e022:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e026:	xor    r9d,r9d
   14000e029:	mov    edx,0x111
   14000e02e:	mov    r8d,0xe146
   14000e034:	call   QWORD PTR [rip+0x2378e]        # 0x1400317c8
   14000e03a:	mov    eax,0x1
   14000e03f:	jmp    0x14000e051
   14000e041:	mov    rcx,rsi
   14000e044:	call   0x14000d8b0
   14000e049:	cmp    rax,rbx
   14000e04c:	setne  bl
   14000e04f:	mov    eax,ebx
   14000e051:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e056:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e05b:	add    rsp,0x20
   14000e05f:	pop    rdi
   14000e060:	ret    
   14000e061:	int3   
   14000e062:	int3   
   14000e063:	int3   
   14000e064:	rex push rbx
   14000e066:	sub    rsp,0x20
   14000e06a:	cmp    BYTE PTR [rcx+0x48],0x0
   14000e06e:	mov    rbx,rcx
   14000e071:	jne    0x14000e07a
   14000e073:	call   0x14000d8b0
   14000e078:	jmp    0x14000e09c
   14000e07a:	mov    rax,QWORD PTR [rcx]
   14000e07d:	and    QWORD PTR [rsp+0x30],0x0
   14000e083:	lea    r9,[rsp+0x30]
   14000e088:	call   QWORD PTR [rax+0x1c8]
   14000e08e:	test   eax,eax
   14000e090:	jns    0x14000e097
   14000e092:	mov    rcx,rbx
   14000e095:	jmp    0x14000e073
   14000e097:	mov    rax,QWORD PTR [rsp+0x30]
   14000e09c:	add    rsp,0x20
   14000e0a0:	pop    rbx
   14000e0a1:	ret    
   14000e0a2:	int3   
   14000e0a3:	int3   
   14000e0a4:	rex push rbx
   14000e0a6:	sub    rsp,0x20
   14000e0aa:	test   r9,r9
   14000e0ad:	mov    rbx,rcx
   14000e0b0:	je     0x14000e0c0
   14000e0b2:	xor    edx,edx
   14000e0b4:	mov    rcx,r9
   14000e0b7:	call   0x14000df14
   14000e0bc:	test   eax,eax
   14000e0be:	jne    0x14000e0c8
   14000e0c0:	mov    rcx,rbx
   14000e0c3:	call   0x14000d8b0
   14000e0c8:	add    rsp,0x20
   14000e0cc:	pop    rbx
   14000e0cd:	ret    
   14000e0ce:	int3   
   14000e0cf:	int3   
   14000e0d0:	rex push rbx
   14000e0d2:	sub    rsp,0x60
   14000e0d6:	mov    rbx,rcx
   14000e0d9:	jmp    0x14000e0e6
   14000e0db:	lea    rcx,[rsp+0x30]
   14000e0e0:	call   QWORD PTR [rip+0x235da]        # 0x1400316c0
   14000e0e6:	mov    r9d,0x121
   14000e0ec:	lea    rcx,[rsp+0x30]
   14000e0f1:	xor    edx,edx
   14000e0f3:	mov    r8d,r9d
   14000e0f6:	mov    DWORD PTR [rsp+0x20],0x1
   14000e0fe:	call   QWORD PTR [rip+0x235ec]        # 0x1400316f0
   14000e104:	test   eax,eax
   14000e106:	jne    0x14000e0db
   14000e108:	mov    rcx,rbx
   14000e10b:	add    rsp,0x60
   14000e10f:	pop    rbx
   14000e110:	jmp    0x14000d8b0
   14000e115:	int3   
   14000e116:	int3   
   14000e117:	int3   
   14000e118:	rex push rbx
   14000e11a:	sub    rsp,0x30
   14000e11e:	mov    rbx,rcx
   14000e121:	lea    rdx,[rsp+0x20]
   14000e126:	mov    rcx,r8
   14000e129:	call   0x14000df14
   14000e12e:	test   eax,eax
   14000e130:	je     0x14000e139
   14000e132:	mov    rax,QWORD PTR [rsp+0x20]
   14000e137:	jmp    0x14000e141
   14000e139:	mov    rcx,rbx
   14000e13c:	call   0x14000d8b0
   14000e141:	add    rsp,0x30
   14000e145:	pop    rbx
   14000e146:	ret    
   14000e147:	int3   
   14000e148:	mov    QWORD PTR [rsp+0x8],rbx
   14000e14d:	mov    QWORD PTR [rsp+0x10],rsi
   14000e152:	push   rdi
   14000e153:	sub    rsp,0x20
   14000e157:	mov    edi,edx
   14000e159:	mov    rsi,rcx
   14000e15c:	xor    ebx,ebx
   14000e15e:	call   0x1400131d0
   14000e163:	lea    rdx,[rsp+0x40]
   14000e168:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e16f:	mov    rcx,QWORD PTR [rcx]
   14000e172:	call   0x14000d6a8
   14000e177:	cmp    QWORD PTR [rax],rbx
   14000e17a:	je     0x14000e19b
   14000e17c:	call   0x1400131d0
   14000e181:	mov    rdx,rsi
   14000e184:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e18b:	mov    rcx,QWORD PTR [rcx]
   14000e18e:	call   0x14000d71c
   14000e193:	cmp    eax,ebx
   14000e195:	je     0x14000e1be
   14000e197:	mov    ebx,edi
   14000e199:	jmp    0x14000e1be
   14000e19b:	mov    eax,edi
   14000e19d:	mov    esi,0x3fc0
   14000e1a2:	and    eax,esi
   14000e1a4:	cmp    eax,edi
   14000e1a6:	jne    0x14000e1be
   14000e1a8:	call   0x1400131d0
   14000e1ad:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e1b4:	mov    rcx,QWORD PTR [rcx]
   14000e1b7:	call   0x14000d608
   14000e1bc:	mov    ebx,esi
   14000e1be:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e1c3:	mov    eax,ebx
   14000e1c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1ca:	add    rsp,0x20
   14000e1ce:	pop    rdi
   14000e1cf:	ret    
   14000e1d0:	sub    rsp,0x28
   14000e1d4:	mov    ecx,0x18
   14000e1d9:	call   0x140013b44
   14000e1de:	test   rax,rax
   14000e1e1:	je     0x14000e1ef
   14000e1e3:	lea    rcx,[rip+0x24e86]        # 0x140033070
   14000e1ea:	mov    QWORD PTR [rax],rcx
   14000e1ed:	jmp    0x14000e1f1
   14000e1ef:	xor    eax,eax
   14000e1f1:	add    rsp,0x28
   14000e1f5:	ret    
   14000e1f6:	int3   
   14000e1f7:	int3   
   14000e1f8:	bt     r8d,0x1c
   14000e1fd:	jb     0x14000e28d
   14000e203:	mov    QWORD PTR [rsp+0x8],rbx
   14000e208:	push   rdi
   14000e209:	sub    rsp,0x30
   14000e20d:	mov    rdi,rdx
   14000e210:	mov    rbx,rcx
   14000e213:	call   0x1400132b4
   14000e218:	test   eax,0x50000000
   14000e21d:	jne    0x14000e283
   14000e21f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e223:	lea    rdx,[rsp+0x20]
   14000e228:	call   QWORD PTR [rip+0x2344a]        # 0x140031678
   14000e22e:	mov    r11d,DWORD PTR [rsp+0x20]
   14000e233:	cmp    DWORD PTR [rdi],r11d
   14000e236:	jne    0x14000e283
   14000e238:	mov    eax,DWORD PTR [rsp+0x24]
   14000e23c:	cmp    DWORD PTR [rdi+0x4],eax
   14000e23f:	jne    0x14000e283
   14000e241:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e245:	mov    edx,0x4
   14000e24a:	call   QWORD PTR [rip+0x23430]        # 0x140031680
   14000e250:	mov    rcx,rax
   14000e253:	call   0x14000d9cc
   14000e258:	test   rax,rax
   14000e25b:	je     0x14000e269
   14000e25d:	mov    rcx,rax
   14000e260:	call   0x14001334c
   14000e265:	test   eax,eax
   14000e267:	jne    0x14000e283
   14000e269:	mov    rax,QWORD PTR [rbx]
   14000e26c:	mov    rcx,rbx
   14000e26f:	call   QWORD PTR [rax+0x238]
   14000e275:	test   eax,eax
   14000e277:	je     0x14000e283
   14000e279:	xor    edx,edx
   14000e27b:	mov    rcx,rbx
   14000e27e:	call   0x14000d264
   14000e283:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e288:	add    rsp,0x30
   14000e28c:	pop    rdi
   14000e28d:	ret    
   14000e28e:	int3   
   14000e28f:	int3   
   14000e290:	mov    rax,rsp
   14000e293:	push   r13
   14000e295:	push   r14
   14000e297:	push   r15
   14000e299:	sub    rsp,0x80
   14000e2a0:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000e2a9:	mov    QWORD PTR [rax+0x8],rbx
   14000e2ad:	mov    QWORD PTR [rax+0x10],rsi
   14000e2b1:	mov    QWORD PTR [rax+0x18],rdi
   14000e2b5:	mov    QWORD PTR [rax+0x20],r12
   14000e2b9:	mov    r15,r9
   14000e2bc:	mov    r12d,r8d
   14000e2bf:	mov    r14,rdx
   14000e2c2:	mov    r13,rcx
   14000e2c5:	lea    rdx,[rip+0xffffffffffff8160]        # 0x14000642c
   14000e2cc:	lea    rcx,[rip+0x36dad]        # 0x140045080
   14000e2d3:	call   0x140014348
   14000e2d8:	mov    rsi,rax
   14000e2db:	mov    QWORD PTR [rsp+0x28],rax
   14000e2e0:	xor    edi,edi
   14000e2e2:	mov    r10d,edi
   14000e2e5:	cmp    rax,rdi
   14000e2e8:	setne  r10b
   14000e2ec:	cmp    r10d,edi
   14000e2ef:	jne    0x14000e2f7
   14000e2f1:	call   0x140006408
   14000e2f6:	int3   
   14000e2f7:	lea    rcx,[rsp+0x50]
   14000e2fc:	lea    rdx,[rax+0x98]
   14000e303:	mov    r8d,0x30
   14000e309:	call   0x14001baf0
   14000e30e:	mov    QWORD PTR [rsi+0x98],r14
   14000e315:	mov    DWORD PTR [rsi+0xa0],r12d
   14000e31c:	mov    QWORD PTR [rsi+0xa8],r15
   14000e323:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000e32b:	mov    QWORD PTR [rsi+0xb0],rbx
   14000e332:	cmp    r12d,0x2
   14000e336:	jne    0x14000e353
   14000e338:	cmp    QWORD PTR [r13+0x98],rdi
   14000e33f:	je     0x14000e353
   14000e341:	mov    rcx,QWORD PTR [r13+0x98]
   14000e348:	mov    rax,QWORD PTR [rcx]
   14000e34b:	xor    edx,edx
   14000e34d:	call   QWORD PTR [rax+0xc0]
   14000e353:	mov    DWORD PTR [rsp+0x20],edi
   14000e357:	mov    r14d,0x110
   14000e35d:	cmp    r12d,r14d
   14000e360:	jne    0x14000e378
   14000e362:	lea    r8,[rsp+0x20]
   14000e367:	lea    rdx,[rsp+0x38]
   14000e36c:	mov    rcx,r13
   14000e36f:	call   0x14000bcec
   14000e374:	mov    edi,DWORD PTR [rsp+0x20]
   14000e378:	mov    rax,QWORD PTR [r13+0x0]
   14000e37c:	mov    r9,rbx
   14000e37f:	mov    r8,r15
   14000e382:	mov    edx,r12d
   14000e385:	mov    rcx,r13
   14000e388:	call   QWORD PTR [rax+0x210]
   14000e38e:	mov    rbx,rax
   14000e391:	cmp    r12d,r14d
   14000e394:	jne    0x14000e3a7
   14000e396:	mov    r8d,edi
   14000e399:	lea    rdx,[rsp+0x38]
   14000e39e:	mov    rcx,r13
   14000e3a1:	call   0x14000e1f8
   14000e3a6:	nop
   14000e3a7:	jmp    0x14000e3b3
   14000e3a9:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e3ae:	mov    rsi,QWORD PTR [rsp+0x28]
   14000e3b3:	lea    rcx,[rsi+0x98]
   14000e3ba:	lea    rdx,[rsp+0x50]
   14000e3bf:	mov    r8d,0x30
   14000e3c5:	call   0x14001baf0
   14000e3ca:	mov    rax,rbx
   14000e3cd:	lea    r11,[rsp+0x80]
   14000e3d5:	mov    rbx,QWORD PTR [r11+0x20]
   14000e3d9:	mov    rsi,QWORD PTR [r11+0x28]
   14000e3dd:	mov    rdi,QWORD PTR [r11+0x30]
   14000e3e1:	mov    r12,QWORD PTR [r11+0x38]
   14000e3e5:	mov    rsp,r11
   14000e3e8:	pop    r15
   14000e3ea:	pop    r14
   14000e3ec:	pop    r13
   14000e3ee:	ret    
   14000e3ef:	int3   
   14000e3f0:	mov    QWORD PTR [rsp+0x10],rdx
   14000e3f5:	push   rbx
   14000e3f6:	push   rbp
   14000e3f7:	push   rdi
   14000e3f8:	sub    rsp,0x20
   14000e3fc:	mov    rbp,rdx
   14000e3ff:	mov    rdx,QWORD PTR [rbp+0x28]
   14000e403:	add    rdx,0x98
   14000e40a:	mov    rbx,QWORD PTR [rbp+0x48]
   14000e40e:	mov    rcx,rbx
   14000e411:	call   0x1400094a8
   14000e416:	mov    QWORD PTR [rbp+0x20],rax
   14000e41a:	xor    edi,edi
   14000e41c:	cmp    rbx,rdi
   14000e41f:	je     0x14000e42a
   14000e421:	mov    rcx,rbx
   14000e424:	call   0x1400062c8
   14000e429:	nop
   14000e42a:	lea    rax,[rip+0xffffffffffffff78]        # 0x14000e3a9
   14000e431:	jmp    0x14000e433
   14000e433:	add    rsp,0x20
   14000e437:	pop    rdi
   14000e438:	pop    rbp
   14000e439:	pop    rbx
   14000e43a:	ret    
   14000e43b:	int3   
   14000e43c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e441:	mov    QWORD PTR [rsp+0x10],rbp
   14000e446:	mov    QWORD PTR [rsp+0x18],rsi
   14000e44b:	push   rdi
   14000e44c:	sub    rsp,0x30
   14000e450:	cmp    edx,0x360
   14000e456:	mov    rsi,r9
   14000e459:	mov    rbp,r8
   14000e45c:	mov    edi,edx
   14000e45e:	mov    rbx,rcx
   14000e461:	jne    0x14000e46f
   14000e463:	movabs rax,0x1
   14000e46d:	jmp    0x14000e4a8
   14000e46f:	call   0x14000da10
   14000e474:	test   rax,rax
   14000e477:	je     0x14000e497
   14000e479:	cmp    QWORD PTR [rax+0x40],rbx
   14000e47d:	jne    0x14000e497
   14000e47f:	mov    r9,rbp
   14000e482:	mov    r8d,edi
   14000e485:	mov    rdx,rbx
   14000e488:	mov    rcx,rax
   14000e48b:	mov    QWORD PTR [rsp+0x20],rsi
   14000e490:	call   0x14000e290
   14000e495:	jmp    0x14000e4a8
   14000e497:	mov    r9,rsi
   14000e49a:	mov    r8,rbp
   14000e49d:	mov    edx,edi
   14000e49f:	mov    rcx,rbx
   14000e4a2:	call   QWORD PTR [rip+0x231a8]        # 0x140031650
   14000e4a8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e4ad:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e4b2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e4b7:	add    rsp,0x30
   14000e4bb:	pop    rdi
   14000e4bc:	ret    
   14000e4bd:	int3   
   14000e4be:	int3   
   14000e4bf:	int3   
   14000e4c0:	mov    QWORD PTR [rsp+0x8],rcx
   14000e4c5:	push   rbx
   14000e4c6:	sub    rsp,0x30
   14000e4ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e4d3:	mov    rbx,rcx
   14000e4d6:	lea    rax,[rip+0x248db]        # 0x140032db8
   14000e4dd:	mov    QWORD PTR [rcx],rax
   14000e4e0:	cmp    QWORD PTR [rcx+0x40],0x0
   14000e4e5:	je     0x14000e51c
   14000e4e7:	lea    rax,[rip+0x36652]        # 0x140044b40
   14000e4ee:	cmp    rcx,rax
   14000e4f1:	je     0x14000e51c
   14000e4f3:	lea    rax,[rip+0x366f6]        # 0x140044bf0
   14000e4fa:	cmp    rcx,rax
   14000e4fd:	je     0x14000e51c
   14000e4ff:	lea    rax,[rip+0x3679a]        # 0x140044ca0
   14000e506:	cmp    rcx,rax
   14000e509:	je     0x14000e51c
   14000e50b:	lea    rax,[rip+0x3683e]        # 0x140044d50
   14000e512:	cmp    rcx,rax
   14000e515:	je     0x14000e51c
   14000e517:	call   0x14000dd0c
   14000e51c:	mov    rcx,QWORD PTR [rbx+0x98]
   14000e523:	test   rcx,rcx
   14000e526:	je     0x14000e533
   14000e528:	mov    rax,QWORD PTR [rcx]
   14000e52b:	mov    edx,0x1
   14000e530:	call   QWORD PTR [rax+0x8]
   14000e533:	mov    rax,QWORD PTR [rbx+0xa0]
   14000e53a:	test   rax,rax
   14000e53d:	je     0x14000e54a
   14000e53f:	cmp    QWORD PTR [rax+0x50],rbx
   14000e543:	jne    0x14000e54a
   14000e545:	and    QWORD PTR [rax+0x50],0x0
   14000e54a:	mov    rcx,rbx
   14000e54d:	add    rsp,0x30
   14000e551:	pop    rbx
   14000e552:	jmp    0x140008a28
   14000e557:	int3   
   14000e558:	int3   
   14000e559:	int3   
   14000e55a:	int3   
   14000e55b:	int3   
   14000e55c:	int3   
   14000e55d:	int3   
   14000e55e:	int3   
   14000e55f:	int3   
   14000e560:	rex push rbp
   14000e562:	sub    rsp,0x20
   14000e566:	mov    rbp,rdx
   14000e569:	mov    rcx,QWORD PTR [rbp+0x40]
   14000e56d:	call   0x140008a28
   14000e572:	add    rsp,0x20
   14000e576:	pop    rbp
   14000e577:	ret    
   14000e578:	rex push rbx
   14000e57a:	sub    rsp,0x20
   14000e57e:	test   r8,r8
   14000e581:	mov    rbx,rcx
   14000e584:	je     0x14000e59d
   14000e586:	lea    rdx,[rsp+0x40]
   14000e58b:	mov    rcx,r8
   14000e58e:	call   0x14000df14
   14000e593:	test   eax,eax
   14000e595:	je     0x14000e59d
   14000e597:	mov    eax,DWORD PTR [rsp+0x40]
   14000e59b:	jmp    0x14000e5a5
   14000e59d:	mov    rcx,rbx
   14000e5a0:	call   0x14000d8b0
   14000e5a5:	add    rsp,0x20
   14000e5a9:	pop    rbx
   14000e5aa:	ret    
   14000e5ab:	int3   
   14000e5ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5b1:	push   rdi
   14000e5b2:	sub    rsp,0x20
   14000e5b6:	mov    rbx,r8
   14000e5b9:	mov    r8d,0x1
   14000e5bf:	mov    rdi,rcx
   14000e5c2:	cmp    DWORD PTR [rbx],r8d
   14000e5c5:	jne    0x14000e633
   14000e5c7:	lea    rdx,[rip+0xffffffffffff7e5e]        # 0x14000642c
   14000e5ce:	lea    rcx,[rip+0x36aab]        # 0x140045080
   14000e5d5:	call   0x140014348
   14000e5da:	test   rax,rax
   14000e5dd:	jne    0x14000e5e5
   14000e5df:	call   0x140006408
   14000e5e4:	int3   
   14000e5e5:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e5e9:	cmp    QWORD PTR [rax+0xc8],rcx
   14000e5f0:	jne    0x14000e5fb
   14000e5f2:	mov    rcx,QWORD PTR [rax+0xd0]
   14000e5f9:	jmp    0x14000e604
   14000e5fb:	call   QWORD PTR [rip+0x22fff]        # 0x140031600
   14000e601:	mov    rcx,rax
   14000e604:	call   0x140017574
   14000e609:	test   rax,rax
   14000e60c:	jne    0x14000e614
   14000e60e:	call   0x140006408
   14000e613:	int3   
   14000e614:	mov    edx,DWORD PTR [rbx+0x8]
   14000e617:	mov    rcx,rax
   14000e61a:	call   0x14000bf14
   14000e61f:	test   rax,rax
   14000e622:	je     0x14000e652
   14000e624:	mov    r8,QWORD PTR [rax]
   14000e627:	mov    rdx,rbx
   14000e62a:	mov    rcx,rax
   14000e62d:	call   QWORD PTR [r8+0x20]
   14000e631:	jmp    0x14000e652
   14000e633:	mov    edx,DWORD PTR [rbx+0x4]
   14000e636:	mov    rcx,QWORD PTR [rcx+0x40]
   14000e63a:	call   0x14000ddf8
   14000e63f:	test   rax,rax
   14000e642:	je     0x14000e652
   14000e644:	xor    edx,edx
   14000e646:	mov    rcx,rax
   14000e649:	call   0x14000df14
   14000e64e:	test   eax,eax
   14000e650:	jne    0x14000e65a
   14000e652:	mov    rcx,rdi
   14000e655:	call   0x14000d8b0
   14000e65a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e65f:	add    rsp,0x20
   14000e663:	pop    rdi
   14000e664:	ret    
   14000e665:	int3   
   14000e666:	int3   
   14000e667:	int3   
   14000e668:	rex push rbx
   14000e66a:	sub    rsp,0x20
   14000e66e:	test   rcx,rcx
   14000e671:	je     0x14000e67c
   14000e673:	mov    rcx,QWORD PTR [rcx+0x40]
   14000e677:	test   rcx,rcx
   14000e67a:	jne    0x14000e698
   14000e67c:	xor    eax,eax
   14000e67e:	add    rsp,0x20
   14000e682:	pop    rbx
   14000e683:	ret    
   14000e684:	mov    rdx,QWORD PTR [rbx]
   14000e687:	mov    rcx,rbx
   14000e68a:	call   QWORD PTR [rdx+0x240]
   14000e690:	test   eax,eax
   14000e692:	jne    0x14000e6b0
   14000e694:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e698:	call   QWORD PTR [rip+0x230b2]        # 0x140031750
   14000e69e:	mov    rcx,rax
   14000e6a1:	call   0x14000d9cc
   14000e6a6:	test   rax,rax
   14000e6a9:	mov    rbx,rax
   14000e6ac:	jne    0x14000e684
   14000e6ae:	jmp    0x14000e67c
   14000e6b0:	mov    rax,rbx
   14000e6b3:	jmp    0x14000e67e
   14000e6b5:	int3   
   14000e6b6:	int3   
   14000e6b7:	int3   
   14000e6b8:	rex push rbx
   14000e6ba:	sub    rsp,0x20
   14000e6be:	test   rcx,rcx
   14000e6c1:	mov    rbx,rcx
   14000e6c4:	je     0x14000e704
   14000e6c6:	cmp    QWORD PTR [rcx+0x40],0x0
   14000e6cb:	je     0x14000e704
   14000e6cd:	mov    rax,QWORD PTR [rcx]
   14000e6d0:	call   QWORD PTR [rax+0x240]
   14000e6d6:	test   eax,eax
   14000e6d8:	jne    0x14000e6e5
   14000e6da:	mov    rcx,rbx
   14000e6dd:	call   0x14000e668
   14000e6e2:	mov    rbx,rax
   14000e6e5:	test   rbx,rbx
   14000e6e8:	je     0x14000e6ff
   14000e6ea:	mov    rcx,rbx
   14000e6ed:	jmp    0x14000e6f5
   14000e6ef:	mov    rbx,rax
   14000e6f2:	mov    rcx,rax
   14000e6f5:	call   0x14000e668
   14000e6fa:	test   rax,rax
   14000e6fd:	jne    0x14000e6ef
   14000e6ff:	mov    rax,rbx
   14000e702:	jmp    0x14000e706
   14000e704:	xor    eax,eax
   14000e706:	add    rsp,0x20
   14000e70a:	pop    rbx
   14000e70b:	ret    
   14000e70c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e711:	mov    QWORD PTR [rsp+0x18],r8
   14000e716:	mov    DWORD PTR [rsp+0x10],edx
   14000e71a:	push   rbp
   14000e71b:	push   rsi
   14000e71c:	push   rdi
   14000e71d:	sub    rsp,0x30
   14000e721:	mov    rbp,r9
   14000e724:	call   QWORD PTR [rip+0x22e96]        # 0x1400315c0
   14000e72a:	test   rax,rax
   14000e72d:	mov    rbx,rax
   14000e730:	je     0x14000e7c6
   14000e736:	mov    edi,DWORD PTR [rsp+0x78]
   14000e73a:	mov    esi,DWORD PTR [rsp+0x70]
   14000e73e:	test   edi,edi
   14000e740:	mov    rcx,rbx
   14000e743:	je     0x14000e76c
   14000e745:	call   0x14000da10
   14000e74a:	test   rax,rax
   14000e74d:	je     0x14000e77e
   14000e74f:	mov    r9,QWORD PTR [rsp+0x60]
   14000e754:	mov    r8d,DWORD PTR [rsp+0x58]
   14000e759:	mov    rdx,QWORD PTR [rax+0x40]
   14000e75d:	mov    rcx,rax
   14000e760:	mov    QWORD PTR [rsp+0x20],rbp
   14000e765:	call   0x14000e290
   14000e76a:	jmp    0x14000e77e
   14000e76c:	mov    r8,QWORD PTR [rsp+0x60]
   14000e771:	mov    edx,DWORD PTR [rsp+0x58]
   14000e775:	mov    r9,rbp
   14000e778:	call   QWORD PTR [rip+0x2304a]        # 0x1400317c8
   14000e77e:	test   esi,esi
   14000e780:	je     0x14000e7ac
   14000e782:	mov    rcx,rbx
   14000e785:	call   QWORD PTR [rip+0x22e35]        # 0x1400315c0
   14000e78b:	test   rax,rax
   14000e78e:	je     0x14000e7ac
   14000e790:	mov    r8,QWORD PTR [rsp+0x60]
   14000e795:	mov    edx,DWORD PTR [rsp+0x58]
   14000e799:	mov    r9,rbp
   14000e79c:	mov    rcx,rbx
   14000e79f:	mov    DWORD PTR [rsp+0x28],edi
   14000e7a3:	mov    DWORD PTR [rsp+0x20],esi
   14000e7a7:	call   0x14000e70c
   14000e7ac:	mov    edx,0x2
   14000e7b1:	mov    rcx,rbx
   14000e7b4:	call   QWORD PTR [rip+0x22ec6]        # 0x140031680
   14000e7ba:	test   rax,rax
   14000e7bd:	mov    rbx,rax
   14000e7c0:	jne    0x14000e73e
   14000e7c6:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e7cb:	add    rsp,0x30
   14000e7cf:	pop    rdi
   14000e7d0:	pop    rsi
   14000e7d1:	pop    rbp
   14000e7d2:	ret    
   14000e7d3:	int3   
   14000e7d4:	mov    rax,rsp
   14000e7d7:	push   rdi
   14000e7d8:	sub    rsp,0xe0
   14000e7df:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e7e8:	mov    QWORD PTR [rax+0x8],rbx
   14000e7ec:	mov    QWORD PTR [rax+0x10],rbp
   14000e7f0:	mov    QWORD PTR [rax+0x18],rsi
   14000e7f4:	mov    rbp,rdx
   14000e7f7:	mov    rdi,rcx
   14000e7fa:	call   0x140013220
   14000e7ff:	mov    rcx,QWORD PTR [rax+0x28]
   14000e803:	xor    ebx,ebx
   14000e805:	cmp    rcx,rbx
   14000e808:	jne    0x14000e811
   14000e80a:	xor    eax,eax
   14000e80c:	jmp    0x14000e8ac
   14000e811:	lea    rsi,[rcx+0x30]
   14000e815:	mov    rdx,rdi
   14000e818:	mov    rcx,rsi
   14000e81b:	call   0x14001775c
   14000e820:	cmp    rax,rbx
   14000e823:	jne    0x14000e8a1
   14000e825:	mov    rcx,rdi
   14000e828:	call   QWORD PTR [rip+0x22f22]        # 0x140031750
   14000e82e:	mov    rdx,rax
   14000e831:	mov    rcx,rsi
   14000e834:	call   0x14001775c
   14000e839:	cmp    rax,rbx
   14000e83c:	je     0x14000e89d
   14000e83e:	mov    rcx,QWORD PTR [rax+0x98]
   14000e845:	cmp    rcx,rbx
   14000e848:	je     0x14000e89d
   14000e84a:	add    rcx,0x48
   14000e84e:	mov    rdx,rdi
   14000e851:	call   0x14001775c
   14000e856:	mov    rsi,rax
   14000e859:	cmp    rax,rbx
   14000e85c:	je     0x14000e89d
   14000e85e:	mov    rdx,rdi
   14000e861:	lea    rcx,[rsp+0x30]
   14000e866:	call   0x14000af40
   14000e86b:	nop
   14000e86c:	mov    QWORD PTR [rsp+0xd0],rsi
   14000e874:	mov    rdx,rbp
   14000e877:	lea    rcx,[rsp+0x30]
   14000e87c:	call   0x14000df14
   14000e881:	movsxd rcx,eax
   14000e884:	mov    QWORD PTR [rsp+0x70],rbx
   14000e889:	cmp    rcx,rbx
   14000e88c:	setne  bl
   14000e88f:	lea    rcx,[rsp+0x30]
   14000e894:	call   0x14000e4c0
   14000e899:	mov    eax,ebx
   14000e89b:	jmp    0x14000e8ac
   14000e89d:	xor    eax,eax
   14000e89f:	jmp    0x14000e8ac
   14000e8a1:	mov    rdx,rbp
   14000e8a4:	mov    rcx,rax
   14000e8a7:	call   0x14000df14
   14000e8ac:	lea    r11,[rsp+0xe0]
   14000e8b4:	mov    rbx,QWORD PTR [r11+0x10]
   14000e8b8:	mov    rbp,QWORD PTR [r11+0x18]
   14000e8bc:	mov    rsi,QWORD PTR [r11+0x20]
   14000e8c0:	mov    rsp,r11
   14000e8c3:	pop    rdi
   14000e8c4:	ret    
   14000e8c5:	int3   
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	int3   
   14000e8c9:	int3   
   14000e8ca:	int3   
   14000e8cb:	int3   
   14000e8cc:	int3   
   14000e8cd:	int3   
   14000e8ce:	int3   
   14000e8cf:	int3   
   14000e8d0:	int3   
   14000e8d1:	int3   
   14000e8d2:	int3   
   14000e8d3:	int3   
   14000e8d4:	rex push rbp
   14000e8d6:	sub    rsp,0x20
   14000e8da:	mov    rbp,rdx
   14000e8dd:	lea    rcx,[rbp+0x30]
   14000e8e1:	call   0x14000e4c0
   14000e8e6:	add    rsp,0x20
   14000e8ea:	pop    rbp
   14000e8eb:	ret    
   14000e8ec:	rex push rbx
   14000e8ee:	sub    rsp,0x20
   14000e8f2:	cmp    dx,0x1
   14000e8f6:	mov    rbx,rcx
   14000e8f9:	je     0x14000e901
   14000e8fb:	cmp    dx,0x2
   14000e8ff:	jne    0x14000e90f
   14000e901:	xor    edx,edx
   14000e903:	mov    rcx,r8
   14000e906:	call   0x14000e7d4
   14000e90b:	test   eax,eax
   14000e90d:	jne    0x14000e917
   14000e90f:	mov    rcx,rbx
   14000e912:	call   0x14000d8b0
   14000e917:	add    rsp,0x20
   14000e91b:	pop    rbx
   14000e91c:	ret    
   14000e91d:	int3   
   14000e91e:	int3   
   14000e91f:	int3   
   14000e920:	rex push rbx
   14000e922:	sub    rsp,0x20
   14000e926:	mov    rbx,rcx
   14000e929:	mov    rcx,QWORD PTR [r8+0x8]
   14000e92d:	lea    rdx,[rsp+0x40]
   14000e932:	call   0x14000e7d4
   14000e937:	test   eax,eax
   14000e939:	je     0x14000e942
   14000e93b:	movsxd rax,DWORD PTR [rsp+0x40]
   14000e940:	jmp    0x14000e94c
   14000e942:	mov    rcx,rbx
   14000e945:	call   0x14000d8b0
   14000e94a:	cdqe   
   14000e94c:	add    rsp,0x20
   14000e950:	pop    rbx
   14000e951:	ret    
   14000e952:	int3   
   14000e953:	int3   
   14000e954:	sub    rsp,0x28
   14000e958:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e95d:	jne    0x14000e966
   14000e95f:	mov    eax,0x80010108
   14000e964:	jmp    0x14000e97c
   14000e966:	test   rdx,rdx
   14000e969:	jne    0x14000e972
   14000e96b:	mov    eax,0x80004003
   14000e970:	jmp    0x14000e97c
   14000e972:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e976:	mov    rax,QWORD PTR [rcx]
   14000e979:	call   QWORD PTR [rax+0x38]
   14000e97c:	add    rsp,0x28
   14000e980:	ret    
   14000e981:	int3   
   14000e982:	int3   
   14000e983:	int3   
   14000e984:	sub    rsp,0x28
   14000e988:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e98d:	jne    0x14000e996
   14000e98f:	mov    eax,0x80010108
   14000e994:	jmp    0x14000e9ac
   14000e996:	test   rdx,rdx
   14000e999:	jne    0x14000e9a2
   14000e99b:	mov    eax,0x80004003
   14000e9a0:	jmp    0x14000e9ac
   14000e9a2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e9a6:	mov    rax,QWORD PTR [rcx]
   14000e9a9:	call   QWORD PTR [rax+0x40]
   14000e9ac:	add    rsp,0x28
   14000e9b0:	ret    
   14000e9b1:	int3   
   14000e9b2:	int3   
   14000e9b3:	int3   
   14000e9b4:	sub    rsp,0x48
   14000e9b8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e9bd:	jne    0x14000e9c6
   14000e9bf:	mov    eax,0x80010108
   14000e9c4:	jmp    0x14000e9fc
   14000e9c6:	test   r8,r8
   14000e9c9:	jne    0x14000e9d2
   14000e9cb:	mov    eax,0x80004003
   14000e9d0:	jmp    0x14000e9fc
   14000e9d2:	mov    rax,QWORD PTR [rdx]
   14000e9d5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e9d9:	lea    r9,[rsp+0x20]
   14000e9de:	mov    QWORD PTR [r9],rax
   14000e9e1:	mov    rax,QWORD PTR [rdx+0x8]
   14000e9e5:	mov    QWORD PTR [r9+0x8],rax
   14000e9e9:	mov    rax,QWORD PTR [rdx+0x10]
   14000e9ed:	lea    rdx,[rsp+0x20]
   14000e9f2:	mov    QWORD PTR [r9+0x10],rax
   14000e9f6:	mov    rax,QWORD PTR [rcx]
   14000e9f9:	call   QWORD PTR [rax+0x48]
   14000e9fc:	add    rsp,0x48
   14000ea00:	ret    
   14000ea01:	int3   
   14000ea02:	int3   
   14000ea03:	int3   
   14000ea04:	sub    rsp,0x48
   14000ea08:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ea0d:	jne    0x14000ea16
   14000ea0f:	mov    eax,0x80010108
   14000ea14:	jmp    0x14000ea4c
   14000ea16:	test   r8,r8
   14000ea19:	jne    0x14000ea22
   14000ea1b:	mov    eax,0x80004003
   14000ea20:	jmp    0x14000ea4c
   14000ea22:	mov    rax,QWORD PTR [rdx]
   14000ea25:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ea29:	lea    r9,[rsp+0x20]
   14000ea2e:	mov    QWORD PTR [r9],rax
   14000ea31:	mov    rax,QWORD PTR [rdx+0x8]
   14000ea35:	mov    QWORD PTR [r9+0x8],rax
   14000ea39:	mov    rax,QWORD PTR [rdx+0x10]
   14000ea3d:	lea    rdx,[rsp+0x20]
   14000ea42:	mov    QWORD PTR [r9+0x10],rax
   14000ea46:	mov    rax,QWORD PTR [rcx]
   14000ea49:	call   QWORD PTR [rax+0x50]
   14000ea4c:	add    rsp,0x48
   14000ea50:	ret    
   14000ea51:	int3   
   14000ea52:	int3   
   14000ea53:	int3   
   14000ea54:	sub    rsp,0x48
   14000ea58:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ea5d:	jne    0x14000ea66
   14000ea5f:	mov    eax,0x80010108
   14000ea64:	jmp    0x14000ea9c
   14000ea66:	test   r8,r8
   14000ea69:	jne    0x14000ea72
   14000ea6b:	mov    eax,0x80004003
   14000ea70:	jmp    0x14000ea9c
   14000ea72:	mov    rax,QWORD PTR [rdx]
   14000ea75:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ea79:	lea    r9,[rsp+0x20]
   14000ea7e:	mov    QWORD PTR [r9],rax
   14000ea81:	mov    rax,QWORD PTR [rdx+0x8]
   14000ea85:	mov    QWORD PTR [r9+0x8],rax
   14000ea89:	mov    rax,QWORD PTR [rdx+0x10]
   14000ea8d:	lea    rdx,[rsp+0x20]
   14000ea92:	mov    QWORD PTR [r9+0x10],rax
   14000ea96:	mov    rax,QWORD PTR [rcx]
   14000ea99:	call   QWORD PTR [rax+0x58]
   14000ea9c:	add    rsp,0x48
   14000eaa0:	ret    
   14000eaa1:	int3   
   14000eaa2:	int3   
   14000eaa3:	int3   
   14000eaa4:	sub    rsp,0x48
   14000eaa8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eaad:	jne    0x14000eab6
   14000eaaf:	mov    eax,0x80010108
   14000eab4:	jmp    0x14000eaec
   14000eab6:	test   r8,r8
   14000eab9:	jne    0x14000eac2
   14000eabb:	mov    eax,0x80004003
   14000eac0:	jmp    0x14000eaec
   14000eac2:	mov    rax,QWORD PTR [rdx]
   14000eac5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eac9:	lea    r9,[rsp+0x20]
   14000eace:	mov    QWORD PTR [r9],rax
   14000ead1:	mov    rax,QWORD PTR [rdx+0x8]
   14000ead5:	mov    QWORD PTR [r9+0x8],rax
   14000ead9:	mov    rax,QWORD PTR [rdx+0x10]
   14000eadd:	lea    rdx,[rsp+0x20]
   14000eae2:	mov    QWORD PTR [r9+0x10],rax
   14000eae6:	mov    rax,QWORD PTR [rcx]
   14000eae9:	call   QWORD PTR [rax+0x60]
   14000eaec:	add    rsp,0x48
   14000eaf0:	ret    
   14000eaf1:	int3   
   14000eaf2:	int3   
   14000eaf3:	int3   
   14000eaf4:	sub    rsp,0x48
   14000eaf8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eafd:	jne    0x14000eb06
   14000eaff:	mov    eax,0x80010108
   14000eb04:	jmp    0x14000eb3c
   14000eb06:	test   r8,r8
   14000eb09:	jne    0x14000eb12
   14000eb0b:	mov    eax,0x80004003
   14000eb10:	jmp    0x14000eb3c
   14000eb12:	mov    rax,QWORD PTR [rdx]
   14000eb15:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb19:	lea    r9,[rsp+0x20]
   14000eb1e:	mov    QWORD PTR [r9],rax
   14000eb21:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb25:	mov    QWORD PTR [r9+0x8],rax
   14000eb29:	mov    rax,QWORD PTR [rdx+0x10]
   14000eb2d:	lea    rdx,[rsp+0x20]
   14000eb32:	mov    QWORD PTR [r9+0x10],rax
   14000eb36:	mov    rax,QWORD PTR [rcx]
   14000eb39:	call   QWORD PTR [rax+0x68]
   14000eb3c:	add    rsp,0x48
   14000eb40:	ret    
   14000eb41:	int3   
   14000eb42:	int3   
   14000eb43:	int3   
   14000eb44:	sub    rsp,0x48
   14000eb48:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eb4d:	jne    0x14000eb56
   14000eb4f:	mov    eax,0x80010108
   14000eb54:	jmp    0x14000eb8c
   14000eb56:	test   r8,r8
   14000eb59:	jne    0x14000eb62
   14000eb5b:	mov    eax,0x80004003
   14000eb60:	jmp    0x14000eb8c
   14000eb62:	mov    rax,QWORD PTR [rdx]
   14000eb65:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb69:	lea    r9,[rsp+0x20]
   14000eb6e:	mov    QWORD PTR [r9],rax
   14000eb71:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb75:	mov    QWORD PTR [r9+0x8],rax
   14000eb79:	mov    rax,QWORD PTR [rdx+0x10]
   14000eb7d:	lea    rdx,[rsp+0x20]
   14000eb82:	mov    QWORD PTR [r9+0x10],rax
   14000eb86:	mov    rax,QWORD PTR [rcx]
   14000eb89:	call   QWORD PTR [rax+0x70]
   14000eb8c:	add    rsp,0x48
   14000eb90:	ret    
   14000eb91:	int3   
   14000eb92:	int3   
   14000eb93:	int3   
   14000eb94:	sub    rsp,0x48
   14000eb98:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eb9d:	jne    0x14000eba6
   14000eb9f:	mov    eax,0x80010108
   14000eba4:	jmp    0x14000ebdc
   14000eba6:	test   r8,r8
   14000eba9:	jne    0x14000ebb2
   14000ebab:	mov    eax,0x80004003
   14000ebb0:	jmp    0x14000ebdc
   14000ebb2:	mov    rax,QWORD PTR [rdx]
   14000ebb5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ebb9:	lea    r9,[rsp+0x20]
   14000ebbe:	mov    QWORD PTR [r9],rax
   14000ebc1:	mov    rax,QWORD PTR [rdx+0x8]
   14000ebc5:	mov    QWORD PTR [r9+0x8],rax
   14000ebc9:	mov    rax,QWORD PTR [rdx+0x10]
   14000ebcd:	lea    rdx,[rsp+0x20]
   14000ebd2:	mov    QWORD PTR [r9+0x10],rax
   14000ebd6:	mov    rax,QWORD PTR [rcx]
   14000ebd9:	call   QWORD PTR [rax+0x78]
   14000ebdc:	add    rsp,0x48
   14000ebe0:	ret    
   14000ebe1:	int3   
   14000ebe2:	int3   
   14000ebe3:	int3   
   14000ebe4:	sub    rsp,0x48
   14000ebe8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ebed:	jne    0x14000ebf6
   14000ebef:	mov    eax,0x80010108
   14000ebf4:	jmp    0x14000ec34
   14000ebf6:	test   rdx,rdx
   14000ebf9:	jne    0x14000ec02
   14000ebfb:	mov    eax,0x80004003
   14000ec00:	jmp    0x14000ec34
   14000ec02:	test   r9,r9
   14000ec05:	je     0x14000ebfb
   14000ec07:	mov    rax,QWORD PTR [r8]
   14000ec0a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec0e:	lea    r10,[rsp+0x20]
   14000ec13:	mov    QWORD PTR [r10],rax
   14000ec16:	mov    rax,QWORD PTR [r8+0x8]
   14000ec1a:	mov    QWORD PTR [r10+0x8],rax
   14000ec1e:	mov    rax,QWORD PTR [r8+0x10]
   14000ec22:	lea    r8,[rsp+0x20]
   14000ec27:	mov    QWORD PTR [r10+0x10],rax
   14000ec2b:	mov    rax,QWORD PTR [rcx]
   14000ec2e:	call   QWORD PTR [rax+0x80]
   14000ec34:	add    rsp,0x48
   14000ec38:	ret    
   14000ec39:	int3   
   14000ec3a:	int3   
   14000ec3b:	int3   
   14000ec3c:	sub    rsp,0x48
   14000ec40:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ec45:	jne    0x14000ec4e
   14000ec47:	mov    eax,0x80010108
   14000ec4c:	jmp    0x14000ec87
   14000ec4e:	test   r8,r8
   14000ec51:	jne    0x14000ec5a
   14000ec53:	mov    eax,0x80004003
   14000ec58:	jmp    0x14000ec87
   14000ec5a:	mov    rax,QWORD PTR [rdx]
   14000ec5d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec61:	lea    r9,[rsp+0x20]
   14000ec66:	mov    QWORD PTR [r9],rax
   14000ec69:	mov    rax,QWORD PTR [rdx+0x8]
   14000ec6d:	mov    QWORD PTR [r9+0x8],rax
   14000ec71:	mov    rax,QWORD PTR [rdx+0x10]
   14000ec75:	lea    rdx,[rsp+0x20]
   14000ec7a:	mov    QWORD PTR [r9+0x10],rax
   14000ec7e:	mov    rax,QWORD PTR [rcx]
   14000ec81:	call   QWORD PTR [rax+0x88]
   14000ec87:	add    rsp,0x48
   14000ec8b:	ret    
   14000ec8c:	sub    rsp,0x28
   14000ec90:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ec95:	jne    0x14000ec9e
   14000ec97:	mov    eax,0x80010108
   14000ec9c:	jmp    0x14000ecb7
   14000ec9e:	test   rdx,rdx
   14000eca1:	jne    0x14000ecaa
   14000eca3:	mov    eax,0x80004003
   14000eca8:	jmp    0x14000ecb7
   14000ecaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ecae:	mov    rax,QWORD PTR [rcx]
   14000ecb1:	call   QWORD PTR [rax+0x90]
   14000ecb7:	add    rsp,0x28
   14000ecbb:	ret    
   14000ecbc:	sub    rsp,0x28
   14000ecc0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ecc5:	jne    0x14000ecce
   14000ecc7:	mov    eax,0x80010108
   14000eccc:	jmp    0x14000ece7
   14000ecce:	test   rdx,rdx
   14000ecd1:	jne    0x14000ecda
   14000ecd3:	mov    eax,0x80004003
   14000ecd8:	jmp    0x14000ece7
   14000ecda:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ecde:	mov    rax,QWORD PTR [rcx]
   14000ece1:	call   QWORD PTR [rax+0x98]
   14000ece7:	add    rsp,0x28
   14000eceb:	ret    
   14000ecec:	sub    rsp,0x48
   14000ecf0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ecf5:	jne    0x14000ecfe
   14000ecf7:	mov    eax,0x80010108
   14000ecfc:	jmp    0x14000ed37
   14000ecfe:	test   r8,r8
   14000ed01:	jne    0x14000ed0a
   14000ed03:	mov    eax,0x80004003
   14000ed08:	jmp    0x14000ed37
   14000ed0a:	mov    rax,QWORD PTR [rdx]
   14000ed0d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ed11:	lea    r9,[rsp+0x20]
   14000ed16:	mov    QWORD PTR [r9],rax
   14000ed19:	mov    rax,QWORD PTR [rdx+0x8]
   14000ed1d:	mov    QWORD PTR [r9+0x8],rax
   14000ed21:	mov    rax,QWORD PTR [rdx+0x10]
   14000ed25:	lea    rdx,[rsp+0x20]
   14000ed2a:	mov    QWORD PTR [r9+0x10],rax
   14000ed2e:	mov    rax,QWORD PTR [rcx]
   14000ed31:	call   QWORD PTR [rax+0xa0]
   14000ed37:	add    rsp,0x48
   14000ed3b:	ret    
   14000ed3c:	sub    rsp,0x48
   14000ed40:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ed45:	jne    0x14000ed4e
   14000ed47:	mov    eax,0x80010108
   14000ed4c:	jmp    0x14000ed7b
   14000ed4e:	mov    rax,QWORD PTR [r8]
   14000ed51:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ed55:	lea    r9,[rsp+0x20]
   14000ed5a:	mov    QWORD PTR [r9],rax
   14000ed5d:	mov    rax,QWORD PTR [r8+0x8]
   14000ed61:	mov    QWORD PTR [r9+0x8],rax
   14000ed65:	mov    rax,QWORD PTR [r8+0x10]
   14000ed69:	lea    r8,[rsp+0x20]
   14000ed6e:	mov    QWORD PTR [r9+0x10],rax
   14000ed72:	mov    rax,QWORD PTR [rcx]
   14000ed75:	call   QWORD PTR [rax+0xa8]
   14000ed7b:	add    rsp,0x48
   14000ed7f:	ret    
   14000ed80:	rex push rbx
   14000ed82:	sub    rsp,0x50
   14000ed86:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ed8b:	mov    r10,rdx
   14000ed8e:	mov    r11,rcx
   14000ed91:	jne    0x14000ed9a
   14000ed93:	mov    eax,0x80010108
   14000ed98:	jmp    0x14000edff
   14000ed9a:	test   rdx,rdx
   14000ed9d:	jne    0x14000eda6
   14000ed9f:	mov    eax,0x80004003
   14000eda4:	jmp    0x14000edff
   14000eda6:	test   r8,r8
   14000eda9:	je     0x14000ed9f
   14000edab:	test   r9,r9
   14000edae:	je     0x14000ed9f
   14000edb0:	mov    rdx,QWORD PTR [rsp+0x80]
   14000edb8:	test   rdx,rdx
   14000edbb:	je     0x14000ed9f
   14000edbd:	mov    rcx,QWORD PTR [rsp+0x88]
   14000edc5:	lea    rbx,[rsp+0x30]
   14000edca:	mov    rax,QWORD PTR [rcx]
   14000edcd:	mov    QWORD PTR [rbx],rax
   14000edd0:	mov    rax,QWORD PTR [rcx+0x8]
   14000edd4:	mov    QWORD PTR [rbx+0x8],rax
   14000edd8:	mov    rax,QWORD PTR [rcx+0x10]
   14000eddc:	mov    rcx,QWORD PTR [r11+0x10]
   14000ede0:	lea    r11,[rsp+0x30]
   14000ede5:	mov    QWORD PTR [rbx+0x10],rax
   14000ede9:	mov    rax,QWORD PTR [rcx]
   14000edec:	mov    QWORD PTR [rsp+0x28],r11
   14000edf1:	mov    QWORD PTR [rsp+0x20],rdx
   14000edf6:	mov    rdx,r10
   14000edf9:	call   QWORD PTR [rax+0xb0]
   14000edff:	add    rsp,0x50
   14000ee03:	pop    rbx
   14000ee04:	ret    
   14000ee05:	int3   
   14000ee06:	int3   
   14000ee07:	int3   
   14000ee08:	sub    rsp,0x48
   14000ee0c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ee11:	jne    0x14000ee1a
   14000ee13:	mov    eax,0x80010108
   14000ee18:	jmp    0x14000ee53
   14000ee1a:	test   r9,r9
   14000ee1d:	jne    0x14000ee26
   14000ee1f:	mov    eax,0x80004003
   14000ee24:	jmp    0x14000ee53
   14000ee26:	mov    rax,QWORD PTR [r8]
   14000ee29:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ee2d:	lea    r10,[rsp+0x20]
   14000ee32:	mov    QWORD PTR [r10],rax
   14000ee35:	mov    rax,QWORD PTR [r8+0x8]
   14000ee39:	mov    QWORD PTR [r10+0x8],rax
   14000ee3d:	mov    rax,QWORD PTR [r8+0x10]
   14000ee41:	lea    r8,[rsp+0x20]
   14000ee46:	mov    QWORD PTR [r10+0x10],rax
   14000ee4a:	mov    rax,QWORD PTR [rcx]
   14000ee4d:	call   QWORD PTR [rax+0xb8]
   14000ee53:	add    rsp,0x48
   14000ee57:	ret    
   14000ee58:	sub    rsp,0x28
   14000ee5c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ee61:	jne    0x14000ee6a
   14000ee63:	mov    eax,0x80010108
   14000ee68:	jmp    0x14000ee83
   14000ee6a:	test   r9,r9
   14000ee6d:	jne    0x14000ee76
   14000ee6f:	mov    eax,0x80004003
   14000ee74:	jmp    0x14000ee83
   14000ee76:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ee7a:	mov    rax,QWORD PTR [rcx]
   14000ee7d:	call   QWORD PTR [rax+0xc0]
   14000ee83:	add    rsp,0x28
   14000ee87:	ret    
   14000ee88:	sub    rsp,0x48
   14000ee8c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ee91:	jne    0x14000ee9a
   14000ee93:	mov    eax,0x80010108
   14000ee98:	jmp    0x14000eec7
   14000ee9a:	mov    rax,QWORD PTR [rdx]
   14000ee9d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eea1:	lea    r8,[rsp+0x20]
   14000eea6:	mov    QWORD PTR [r8],rax
   14000eea9:	mov    rax,QWORD PTR [rdx+0x8]
   14000eead:	mov    QWORD PTR [r8+0x8],rax
   14000eeb1:	mov    rax,QWORD PTR [rdx+0x10]
   14000eeb5:	lea    rdx,[rsp+0x20]
   14000eeba:	mov    QWORD PTR [r8+0x10],rax
   14000eebe:	mov    rax,QWORD PTR [rcx]
   14000eec1:	call   QWORD PTR [rax+0xc8]
   14000eec7:	add    rsp,0x48
   14000eecb:	ret    
   14000eecc:	mov    rax,QWORD PTR [rcx+0x10]
   14000eed0:	neg    rax
   14000eed3:	sbb    eax,eax
   14000eed5:	and    eax,0xffff3ef9
   14000eeda:	add    eax,0x80010108
   14000eedf:	ret    
   14000eee0:	mov    QWORD PTR [rcx+0x8],rdx
   14000eee4:	mov    QWORD PTR [rcx+0x10],r8
   14000eee8:	xor    eax,eax
   14000eeea:	ret    
   14000eeeb:	int3   
   14000eeec:	sub    rsp,0x58
   14000eef0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eef5:	jne    0x14000eefe
   14000eef7:	mov    eax,0x80010108
   14000eefc:	jmp    0x14000ef4a
   14000eefe:	mov    rax,QWORD PTR [rsp+0xa0]
   14000ef06:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef0a:	mov    r10,QWORD PTR [rcx]
   14000ef0d:	mov    QWORD PTR [rsp+0x40],rax
   14000ef12:	mov    rax,QWORD PTR [rsp+0x98]
   14000ef1a:	mov    QWORD PTR [rsp+0x38],rax
   14000ef1f:	mov    rax,QWORD PTR [rsp+0x90]
   14000ef27:	mov    QWORD PTR [rsp+0x30],rax
   14000ef2c:	mov    rax,QWORD PTR [rsp+0x88]
   14000ef34:	mov    QWORD PTR [rsp+0x28],rax
   14000ef39:	movzx  eax,WORD PTR [rsp+0x80]
   14000ef41:	mov    WORD PTR [rsp+0x20],ax
   14000ef46:	call   QWORD PTR [r10+0x30]
   14000ef4a:	add    rsp,0x58
   14000ef4e:	ret    
   14000ef4f:	int3   
   14000ef50:	sub    rsp,0x38
   14000ef54:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ef59:	jne    0x14000ef62
   14000ef5b:	mov    eax,0x80010108
   14000ef60:	jmp    0x14000ef7f
   14000ef62:	mov    rax,QWORD PTR [rsp+0x68]
   14000ef67:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef6b:	mov    r10,QWORD PTR [rcx]
   14000ef6e:	mov    QWORD PTR [rsp+0x28],rax
   14000ef73:	mov    eax,DWORD PTR [rsp+0x60]
   14000ef77:	mov    DWORD PTR [rsp+0x20],eax
   14000ef7b:	call   QWORD PTR [r10+0x28]
   14000ef7f:	add    rsp,0x38
   14000ef83:	ret    
   14000ef84:	sub    rsp,0x28
   14000ef88:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ef8d:	jne    0x14000ef96
   14000ef8f:	mov    eax,0x80010108
   14000ef94:	jmp    0x14000efa0
   14000ef96:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef9a:	mov    rax,QWORD PTR [rcx]
   14000ef9d:	call   QWORD PTR [rax+0x18]
   14000efa0:	add    rsp,0x28
   14000efa4:	ret    
   14000efa5:	int3   
   14000efa6:	int3   
   14000efa7:	int3   
   14000efa8:	sub    rsp,0x28
   14000efac:	cmp    QWORD PTR [rcx+0x10],0x0
   14000efb1:	jne    0x14000efba
   14000efb3:	mov    eax,0x80010108
   14000efb8:	jmp    0x14000efc4
   14000efba:	mov    rcx,QWORD PTR [rcx+0x10]
   14000efbe:	mov    rax,QWORD PTR [rcx]
   14000efc1:	call   QWORD PTR [rax+0x20]
   14000efc4:	add    rsp,0x28
   14000efc8:	ret    
   14000efc9:	int3   
   14000efca:	int3   
   14000efcb:	int3   
   14000efcc:	mov    QWORD PTR [rsp+0x8],rbx
   14000efd1:	push   rdi
   14000efd2:	sub    rsp,0x20
   14000efd6:	mov    ebx,edx
   14000efd8:	mov    rdi,rcx
   14000efdb:	call   0x14000e4c0
   14000efe0:	test   bl,0x1
   14000efe3:	je     0x14000efed
   14000efe5:	mov    rcx,rdi
   14000efe8:	call   0x140006160
   14000efed:	mov    rax,rdi
   14000eff0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eff5:	add    rsp,0x20
   14000eff9:	pop    rdi
   14000effa:	ret    
   14000effb:	int3   
   14000effc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f001:	push   rdi
   14000f002:	sub    rsp,0x20
   14000f006:	cmp    DWORD PTR [r8],0x1
   14000f00a:	mov    rbx,r8
   14000f00d:	mov    rdi,rcx
   14000f010:	jne    0x14000f02f
   14000f012:	mov    rcx,QWORD PTR [r8+0x18]
   14000f016:	call   0x140017598
   14000f01b:	test   rax,rax
   14000f01e:	je     0x14000f02f
   14000f020:	mov    r9,QWORD PTR [rax]
   14000f023:	mov    rdx,rbx
   14000f026:	mov    rcx,rax
   14000f029:	call   QWORD PTR [r9+0x18]
   14000f02d:	jmp    0x14000f046
   14000f02f:	mov    rcx,QWORD PTR [rbx+0x18]
   14000f033:	xor    edx,edx
   14000f035:	call   0x14000e7d4
   14000f03a:	test   eax,eax
   14000f03c:	jne    0x14000f046
   14000f03e:	mov    rcx,rdi
   14000f041:	call   0x14000d8b0
   14000f046:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f04b:	add    rsp,0x20
   14000f04f:	pop    rdi
   14000f050:	ret    
   14000f051:	int3   
   14000f052:	int3   
   14000f053:	int3   
   14000f054:	rex push rbx
   14000f056:	sub    rsp,0x20
   14000f05a:	mov    rbx,rcx
   14000f05d:	mov    rcx,QWORD PTR [r8+0x8]
   14000f061:	lea    rdx,[rsp+0x40]
   14000f066:	call   0x14000e7d4
   14000f06b:	test   eax,eax
   14000f06d:	je     0x14000f075
   14000f06f:	mov    eax,DWORD PTR [rsp+0x40]
   14000f073:	jmp    0x14000f07d
   14000f075:	mov    rcx,rbx
   14000f078:	call   0x14000d8b0
   14000f07d:	add    rsp,0x20
   14000f081:	pop    rbx
   14000f082:	ret    
   14000f083:	int3   
   14000f084:	rex push rbx
   14000f086:	sub    rsp,0x20
   14000f08a:	mov    rbx,rcx
   14000f08d:	mov    rcx,QWORD PTR [r8+0x10]
   14000f091:	xor    edx,edx
   14000f093:	call   0x14000e7d4
   14000f098:	test   eax,eax
   14000f09a:	jne    0x14000f0a4
   14000f09c:	mov    rcx,rbx
   14000f09f:	call   0x14000d8b0
   14000f0a4:	add    rsp,0x20
   14000f0a8:	pop    rbx
   14000f0a9:	ret    
   14000f0aa:	int3   
   14000f0ab:	int3   
   14000f0ac:	mov    rax,rsp
   14000f0af:	mov    QWORD PTR [rax+0x8],rbx
   14000f0b3:	mov    QWORD PTR [rax+0x10],rbp
   14000f0b7:	mov    QWORD PTR [rax+0x18],rsi
   14000f0bb:	mov    QWORD PTR [rax+0x20],rdi
   14000f0bf:	push   r12
   14000f0c1:	sub    rsp,0x20
   14000f0c5:	mov    r12,rcx
   14000f0c8:	mov    ecx,0xc
   14000f0cd:	mov    rdi,r9
   14000f0d0:	mov    esi,r8d
   14000f0d3:	mov    rbp,rdx
   14000f0d6:	call   0x140015804
   14000f0db:	lea    rdx,[rip+0xfffffffffffff0ee]        # 0x14000e1d0
   14000f0e2:	lea    rcx,[rip+0x35d17]        # 0x140044e00
   14000f0e9:	call   0x140013c10
   14000f0ee:	test   rax,rax
   14000f0f1:	mov    rbx,rax
   14000f0f4:	jne    0x14000f0fc
   14000f0f6:	call   0x140006408
   14000f0fb:	int3   
   14000f0fc:	cmp    QWORD PTR [rax+0x10],0x0
   14000f101:	jne    0x14000f146
   14000f103:	lea    rcx,[rip+0x24526]        # 0x140033630
   14000f10a:	call   0x14000bb70
   14000f10f:	test   rax,rax
   14000f112:	mov    QWORD PTR [rbx+0x8],rax
   14000f116:	jne    0x14000f11c
   14000f118:	xor    eax,eax
   14000f11a:	jmp    0x14000f15f
   14000f11c:	lea    rdx,[rip+0x244fd]        # 0x140033620
   14000f123:	mov    rcx,rax
   14000f126:	call   QWORD PTR [rip+0x22334]        # 0x140031460
   14000f12c:	test   rax,rax
   14000f12f:	mov    QWORD PTR [rbx+0x10],rax
   14000f133:	jne    0x14000f146
   14000f135:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f139:	call   QWORD PTR [rip+0x22319]        # 0x140031458
   14000f13f:	and    QWORD PTR [rbx+0x8],0x0
   14000f144:	jmp    0x14000f118
   14000f146:	mov    ecx,0xc
   14000f14b:	call   0x140015898
   14000f150:	mov    r9,rdi
   14000f153:	mov    r8d,esi
   14000f156:	mov    rdx,rbp
   14000f159:	mov    rcx,r12
   14000f15c:	call   QWORD PTR [rbx+0x10]
   14000f15f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f164:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f169:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f16e:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f173:	add    rsp,0x20
   14000f177:	pop    r12
   14000f179:	ret    
   14000f17a:	int3   
   14000f17b:	int3   
   14000f17c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f181:	mov    QWORD PTR [rsp+0x10],rbp
   14000f186:	mov    QWORD PTR [rsp+0x18],rsi
   14000f18b:	push   rdi
   14000f18c:	sub    rsp,0x80
   14000f193:	movzx  ebx,dx
   14000f196:	shr    rdx,0x10
   14000f19a:	test   r8,r8
   14000f19d:	mov    rbp,r8
   14000f1a0:	mov    rdi,rcx
   14000f1a3:	movzx  esi,dx
   14000f1a6:	jne    0x14000f1ed
   14000f1a8:	test   ebx,ebx
   14000f1aa:	jne    0x14000f1b3
   14000f1ac:	xor    eax,eax
   14000f1ae:	jmp    0x14000f248
   14000f1b3:	lea    rcx,[rsp+0x30]
   14000f1b8:	call   0x14000b1dc
   14000f1bd:	mov    rax,QWORD PTR [rdi]
   14000f1c0:	and    QWORD PTR [rsp+0x20],0x0
   14000f1c6:	lea    r9,[rsp+0x30]
   14000f1cb:	or     r8d,0xffffffff
   14000f1cf:	mov    edx,ebx
   14000f1d1:	mov    rcx,rdi
   14000f1d4:	mov    DWORD PTR [rsp+0x38],ebx
   14000f1d8:	call   QWORD PTR [rax+0x18]
   14000f1db:	cmp    DWORD PTR [rsp+0x70],0x0
   14000f1e0:	jne    0x14000f1e9
   14000f1e2:	mov    eax,0x1
   14000f1e7:	jmp    0x14000f248
   14000f1e9:	xor    esi,esi
   14000f1eb:	jmp    0x14000f231
   14000f1ed:	lea    rdx,[rip+0xffffffffffff7238]        # 0x14000642c
   14000f1f4:	lea    rcx,[rip+0x35e85]        # 0x140045080
   14000f1fb:	call   0x140014348
   14000f200:	test   rax,rax
   14000f203:	mov    r11,rax
   14000f206:	jne    0x14000f20e
   14000f208:	call   0x140006408
   14000f20d:	int3   
   14000f20e:	mov    rax,QWORD PTR [rdi+0x40]
   14000f212:	cmp    QWORD PTR [r11+0x198],rax
   14000f219:	je     0x14000f1e2
   14000f21b:	xor    edx,edx
   14000f21d:	mov    rcx,rbp
   14000f220:	call   0x14000e7d4
   14000f225:	test   eax,eax
   14000f227:	jne    0x14000f1e2
   14000f229:	test   ebx,ebx
   14000f22b:	je     0x14000f1ac
   14000f231:	mov    rax,QWORD PTR [rdi]
   14000f234:	and    QWORD PTR [rsp+0x20],0x0
   14000f23a:	xor    r9d,r9d
   14000f23d:	mov    r8d,esi
   14000f240:	mov    edx,ebx
   14000f242:	mov    rcx,rdi
   14000f245:	call   QWORD PTR [rax+0x18]
   14000f248:	lea    r11,[rsp+0x80]
   14000f250:	mov    rbx,QWORD PTR [r11+0x10]
   14000f254:	mov    rbp,QWORD PTR [r11+0x18]
   14000f258:	mov    rsi,QWORD PTR [r11+0x20]
   14000f25c:	mov    rsp,r11
   14000f25f:	pop    rdi
   14000f260:	ret    
   14000f261:	int3   
   14000f262:	int3   
   14000f263:	int3   
   14000f264:	mov    QWORD PTR [rsp+0x8],rbx
   14000f269:	mov    QWORD PTR [rsp+0x10],rbp
   14000f26e:	mov    QWORD PTR [rsp+0x18],rsi
   14000f273:	push   rdi
   14000f274:	push   r12
   14000f276:	push   r13
   14000f278:	sub    rsp,0x40
   14000f27c:	mov    rsi,QWORD PTR [r8]
   14000f27f:	mov    rbx,rcx
   14000f282:	mov    rdi,r9
   14000f285:	mov    rcx,rsi
   14000f288:	mov    rbp,r8
   14000f28b:	call   QWORD PTR [rip+0x223b7]        # 0x140031648
   14000f291:	mov    r13d,DWORD PTR [rbp+0x10]
   14000f295:	lea    rdx,[rip+0xffffffffffff7190]        # 0x14000642c
   14000f29c:	lea    rcx,[rip+0x35ddd]        # 0x140045080
   14000f2a3:	movzx  r12d,ax
   14000f2a7:	call   0x140014348
   14000f2ac:	test   rax,rax
   14000f2af:	mov    r11,rax
   14000f2b2:	jne    0x14000f2ba
   14000f2b4:	call   0x140006408
   14000f2b9:	int3   
   14000f2ba:	mov    rax,QWORD PTR [rbx+0x40]
   14000f2be:	cmp    QWORD PTR [r11+0x198],rax
   14000f2c5:	jne    0x14000f2ce
   14000f2c7:	mov    eax,0x1
   14000f2cc:	jmp    0x14000f309
   14000f2ce:	mov    rdx,rdi
   14000f2d1:	mov    rcx,rsi
   14000f2d4:	call   0x14000e7d4
   14000f2d9:	test   eax,eax
   14000f2db:	jne    0x14000f2c7
   14000f2dd:	mov    rax,QWORD PTR [rbx]
   14000f2e0:	and    QWORD PTR [rsp+0x20],0x0
   14000f2e6:	movzx  r8d,r13w
   14000f2ea:	lea    r9,[rsp+0x30]
   14000f2ef:	or     r8d,0x4e0000
   14000f2f6:	mov    edx,r12d
   14000f2f9:	mov    rcx,rbx
   14000f2fc:	mov    QWORD PTR [rsp+0x30],rdi
   14000f301:	mov    QWORD PTR [rsp+0x38],rbp
   14000f306:	call   QWORD PTR [rax+0x18]
   14000f309:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f30e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f313:	mov    rsi,QWORD PTR [rsp+0x70]
   14000f318:	add    rsp,0x40
   14000f31c:	pop    r13
   14000f31e:	pop    r12
   14000f320:	pop    rdi
   14000f321:	ret    
   14000f322:	int3   
   14000f323:	int3   
   14000f324:	mov    QWORD PTR [rsp+0x8],rbx
   14000f329:	push   rdi
   14000f32a:	sub    rsp,0x20
   14000f32e:	mov    rdi,rcx
   14000f331:	call   0x14000da10
   14000f336:	xor    ebx,ebx
   14000f338:	cmp    rax,rbx
   14000f33b:	je     0x14000f366
   14000f33d:	mov    rcx,QWORD PTR [rax+0x70]
   14000f341:	cmp    rcx,rbx
   14000f344:	jne    0x14000f353
   14000f346:	mov    rcx,QWORD PTR [rax+0x40]
   14000f34a:	call   QWORD PTR [rip+0x22400]        # 0x140031750
   14000f350:	mov    rcx,rax
   14000f353:	call   0x14000d9cc
   14000f358:	cmp    rax,rbx
   14000f35b:	je     0x14000f361
   14000f35d:	mov    rbx,QWORD PTR [rax+0x40]
   14000f361:	mov    rax,rbx
   14000f364:	jmp    0x14000f390
   14000f366:	mov    edx,0xfffffff0
   14000f36b:	mov    rcx,rdi
   14000f36e:	call   QWORD PTR [rip+0x223d4]        # 0x140031748
   14000f374:	mov    rcx,rdi
   14000f377:	bt     eax,0x1e
   14000f37b:	jae    0x14000f385
   14000f37d:	call   QWORD PTR [rip+0x223cd]        # 0x140031750
   14000f383:	jmp    0x14000f390
   14000f385:	mov    edx,0x4
   14000f38a:	call   QWORD PTR [rip+0x222f0]        # 0x140031680
   14000f390:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f395:	add    rsp,0x20
   14000f399:	pop    rdi
   14000f39a:	ret    
   14000f39b:	int3   
   14000f39c:	rex push rbx
   14000f39e:	sub    rsp,0x20
   14000f3a2:	test   rcx,rcx
   14000f3a5:	je     0x14000f3cf
   14000f3a7:	mov    rbx,QWORD PTR [rcx+0x40]
   14000f3ab:	test   rbx,rbx
   14000f3ae:	je     0x14000f3cf
   14000f3b0:	mov    rcx,rbx
   14000f3b3:	jmp    0x14000f3bb
   14000f3b5:	mov    rbx,rax
   14000f3b8:	mov    rcx,rax
   14000f3bb:	call   0x14000f324
   14000f3c0:	test   rax,rax
   14000f3c3:	jne    0x14000f3b5
   14000f3c5:	mov    rcx,rbx
   14000f3c8:	call   0x14000d9cc
   14000f3cd:	jmp    0x14000f3d1
   14000f3cf:	xor    eax,eax
   14000f3d1:	add    rsp,0x20
   14000f3d5:	pop    rbx
   14000f3d6:	ret    
   14000f3d7:	int3   
   14000f3d8:	rex push rbx
   14000f3da:	sub    rsp,0x30
   14000f3de:	mov    rbx,rcx
   14000f3e1:	call   0x1400131d0
   14000f3e6:	mov    rcx,QWORD PTR [rax+0x8]
   14000f3ea:	test   rcx,rcx
   14000f3ed:	je     0x14000f401
   14000f3ef:	cmp    QWORD PTR [rcx+0x40],rbx
   14000f3f3:	jne    0x14000f401
   14000f3f5:	lea    rcx,[rip+0x35c94]        # 0x140045090
   14000f3fc:	call   0x140013868
   14000f401:	mov    rcx,rbx
   14000f404:	call   0x1400132b4
   14000f409:	bt     eax,0x1e
   14000f40d:	jb     0x14000f42e
   14000f40f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f413:	mov    eax,0x1
   14000f418:	xor    r9d,r9d
   14000f41b:	mov    DWORD PTR [rsp+0x28],eax
   14000f41f:	lea    edx,[rax+0x14]
   14000f422:	xor    r8d,r8d
   14000f425:	mov    DWORD PTR [rsp+0x20],eax
   14000f429:	call   0x14000e70c
   14000f42e:	mov    rcx,rbx
   14000f431:	add    rsp,0x30
   14000f435:	pop    rbx
   14000f436:	jmp    0x14000d8b0
   14000f43b:	int3   
   14000f43c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f441:	push   rdi
   14000f442:	sub    rsp,0x30
   14000f446:	mov    rdi,rdx
   14000f449:	mov    rbx,rcx
   14000f44c:	call   0x1400131d0
   14000f451:	mov    rcx,QWORD PTR [rax+0x8]
   14000f455:	test   rcx,rcx
   14000f458:	je     0x14000f468
   14000f45a:	cmp    QWORD PTR [rcx+0x40],rbx
   14000f45e:	jne    0x14000f468
   14000f460:	mov    rdx,rdi
   14000f463:	call   0x14000726c
   14000f468:	mov    rcx,rbx
   14000f46b:	call   0x1400132b4
   14000f470:	bt     eax,0x1e
   14000f474:	jb     0x14000f49c
   14000f476:	call   0x14000d848
   14000f47b:	mov    ecx,0x1
   14000f480:	mov    r9,QWORD PTR [rax+0x18]
   14000f484:	mov    r8,QWORD PTR [rax+0x10]
   14000f488:	mov    edx,DWORD PTR [rax+0x8]
   14000f48b:	mov    DWORD PTR [rsp+0x28],ecx
   14000f48f:	mov    DWORD PTR [rsp+0x20],ecx
   14000f493:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f497:	call   0x14000e70c
   14000f49c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f4a1:	add    rsp,0x30
   14000f4a5:	pop    rdi
   14000f4a6:	ret    
   14000f4a7:	int3   
   14000f4a8:	rex push rbx
   14000f4aa:	sub    rsp,0x30
   14000f4ae:	mov    rbx,rcx
   14000f4b1:	call   0x140009454
   14000f4b6:	mov    rcx,rax
   14000f4b9:	xor    eax,eax
   14000f4bb:	cmp    rcx,rax
   14000f4be:	je     0x14000f4c9
   14000f4c0:	mov    rdx,QWORD PTR [rcx]
   14000f4c3:	call   QWORD PTR [rdx+0xe8]
   14000f4c9:	cmp    rax,rbx
   14000f4cc:	jne    0x14000f4da
   14000f4ce:	lea    rcx,[rip+0x35bbb]        # 0x140045090
   14000f4d5:	call   0x1400138dc
   14000f4da:	mov    rcx,rbx
   14000f4dd:	call   0x1400132b4
   14000f4e2:	bt     eax,0x1e
   14000f4e6:	jb     0x14000f50e
   14000f4e8:	call   0x14000d848
   14000f4ed:	mov    ecx,0x1
   14000f4f2:	mov    r9,QWORD PTR [rax+0x18]
   14000f4f6:	mov    r8,QWORD PTR [rax+0x10]
   14000f4fa:	mov    edx,DWORD PTR [rax+0x8]
   14000f4fd:	mov    DWORD PTR [rsp+0x28],ecx
   14000f501:	mov    DWORD PTR [rsp+0x20],ecx
   14000f505:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f509:	call   0x14000e70c
   14000f50e:	mov    rcx,rbx
   14000f511:	add    rsp,0x30
   14000f515:	pop    rbx
   14000f516:	jmp    0x14000d8b0
   14000f51b:	int3   
   14000f51c:	mov    eax,0x80004001
   14000f521:	ret    
   14000f522:	int3   
   14000f523:	int3   
   14000f524:	mov    rax,rsp
   14000f527:	mov    QWORD PTR [rax+0x8],rbx
   14000f52b:	mov    QWORD PTR [rax+0x10],rbp
   14000f52f:	mov    QWORD PTR [rax+0x18],rsi
   14000f533:	mov    QWORD PTR [rax+0x20],rdi
   14000f537:	push   r12
   14000f539:	sub    rsp,0x20
   14000f53d:	test   rcx,rcx
   14000f540:	mov    rsi,r9
   14000f543:	mov    rdi,r8
   14000f546:	mov    rbx,rdx
   14000f549:	mov    r12,rcx
   14000f54c:	je     0x14000f61e
   14000f552:	test   rdx,rdx
   14000f555:	je     0x14000f61e
   14000f55b:	test   r9,r9
   14000f55e:	jne    0x14000f56a
   14000f560:	mov    eax,0x80004003
   14000f565:	jmp    0x14000f623
   14000f56a:	and    QWORD PTR [r9],0x0
   14000f56e:	cmp    DWORD PTR [r8],0x0
   14000f572:	jne    0x14000f5a7
   14000f574:	cmp    DWORD PTR [r8+0x4],0x0
   14000f579:	jne    0x14000f5a7
   14000f57b:	cmp    DWORD PTR [r8+0x8],0xc0
   14000f583:	jne    0x14000f5a7
   14000f585:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000f58d:	jne    0x14000f5a7
   14000f58f:	mov    rax,QWORD PTR [rdx+0x8]
   14000f593:	lea    rbx,[rcx+rax*1]
   14000f597:	mov    rax,QWORD PTR [rbx]
   14000f59a:	mov    rcx,rbx
   14000f59d:	call   QWORD PTR [rax+0x8]
   14000f5a0:	mov    QWORD PTR [rsi],rbx
   14000f5a3:	xor    eax,eax
   14000f5a5:	jmp    0x14000f623
   14000f5a7:	mov    r10,QWORD PTR [rdx+0x10]
   14000f5ab:	jmp    0x14000f605
   14000f5ad:	mov    rcx,QWORD PTR [rbx]
   14000f5b0:	xor    ebp,ebp
   14000f5b2:	test   rcx,rcx
   14000f5b5:	sete   bpl
   14000f5b9:	test   ebp,ebp
   14000f5bb:	jne    0x14000f5db
   14000f5bd:	mov    eax,DWORD PTR [rdi]
   14000f5bf:	cmp    DWORD PTR [rcx],eax
   14000f5c1:	jne    0x14000f5fd
   14000f5c3:	mov    eax,DWORD PTR [rdi+0x4]
   14000f5c6:	cmp    DWORD PTR [rcx+0x4],eax
   14000f5c9:	jne    0x14000f5fd
   14000f5cb:	mov    eax,DWORD PTR [rdi+0x8]
   14000f5ce:	cmp    DWORD PTR [rcx+0x8],eax
   14000f5d1:	jne    0x14000f5fd
   14000f5d3:	mov    eax,DWORD PTR [rdi+0xc]
   14000f5d6:	cmp    DWORD PTR [rcx+0xc],eax
   14000f5d9:	jne    0x14000f5fd
   14000f5db:	cmp    r10,0x1
   14000f5df:	je     0x14000f611
   14000f5e1:	mov    r9,QWORD PTR [rbx+0x8]
   14000f5e5:	mov    r8,rsi
   14000f5e8:	mov    rdx,rdi
   14000f5eb:	mov    rcx,r12
   14000f5ee:	call   r10
   14000f5f1:	test   eax,eax
   14000f5f3:	je     0x14000f623
   14000f5f5:	test   ebp,ebp
   14000f5f7:	jne    0x14000f5fd
   14000f5f9:	test   eax,eax
   14000f5fb:	js     0x14000f623
   14000f5fd:	mov    r10,QWORD PTR [rbx+0x28]
   14000f601:	add    rbx,0x18
   14000f605:	test   r10,r10
   14000f608:	jne    0x14000f5ad
   14000f60a:	mov    eax,0x80004002
   14000f60f:	jmp    0x14000f623
   14000f611:	mov    rax,QWORD PTR [rbx+0x8]
   14000f615:	lea    rbx,[r12+rax*1]
   14000f619:	jmp    0x14000f597
   14000f61e:	mov    eax,0x80070057
   14000f623:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f628:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f62d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f632:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f637:	add    rsp,0x20
   14000f63b:	pop    r12
   14000f63d:	ret    
   14000f63e:	int3   
   14000f63f:	int3   
   14000f640:	add    DWORD PTR [rcx+0x28],0x1
   14000f644:	mov    eax,DWORD PTR [rcx+0x28]
   14000f647:	ret    
   14000f648:	rex push rbx
   14000f64a:	sub    rsp,0x20
   14000f64e:	add    DWORD PTR [rcx+0x28],0xffffffff
   14000f652:	mov    ebx,DWORD PTR [rcx+0x28]
   14000f655:	jne    0x14000f66b
   14000f657:	test   rcx,rcx
   14000f65a:	je     0x14000f66b
   14000f65c:	mov    r8,QWORD PTR [rcx]
   14000f65f:	mov    edx,0x1
   14000f664:	call   QWORD PTR [r8+0xe0]
   14000f66b:	mov    eax,ebx
   14000f66d:	add    rsp,0x20
   14000f671:	pop    rbx
   14000f672:	ret    
   14000f673:	int3   
   14000f674:	mov    r9,r8
   14000f677:	mov    r8,rdx
   14000f67a:	lea    rdx,[rip+0x2410f]        # 0x140033790
   14000f681:	jmp    0x14000f524
   14000f686:	int3   
   14000f687:	int3   
   14000f688:	mov    QWORD PTR [rsp+0x8],rbx
   14000f68d:	push   rdi
   14000f68e:	sub    rsp,0x20
   14000f692:	lea    rax,[rip+0x2400f]        # 0x1400336a8
   14000f699:	mov    rbx,rcx
   14000f69c:	mov    DWORD PTR [rcx+0x28],0xc0000001
   14000f6a3:	mov    QWORD PTR [rcx],rax
   14000f6a6:	lea    rax,[rip+0x23fcb]        # 0x140033678
   14000f6ad:	mov    edi,edx
   14000f6af:	mov    QWORD PTR [rcx+0x8],rax
   14000f6b3:	lea    rax,[rip+0x23f8e]        # 0x140033648
   14000f6ba:	mov    QWORD PTR [rcx+0x20],rax
   14000f6be:	mov    rcx,QWORD PTR [rcx+0x18]
   14000f6c2:	test   rcx,rcx
   14000f6c5:	je     0x14000f6cf
   14000f6c7:	mov    rax,QWORD PTR [rcx]
   14000f6ca:	xor    edx,edx
   14000f6cc:	call   QWORD PTR [rax+0x18]
   14000f6cf:	call   0x140015dc0
   14000f6d4:	test   dil,0x1
   14000f6d8:	je     0x14000f6e2
   14000f6da:	mov    rcx,rbx
   14000f6dd:	call   0x140006160
   14000f6e2:	mov    rax,rbx
   14000f6e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6ea:	add    rsp,0x20
   14000f6ee:	pop    rdi
   14000f6ef:	ret    
   14000f6f0:	sub    rcx,0x8
   14000f6f4:	jmp    0x14000f648
   14000f6f9:	int3   
   14000f6fa:	int3   
   14000f6fb:	int3   
   14000f6fc:	sub    rcx,0x8
   14000f700:	jmp    0x14000f640
   14000f705:	int3   
   14000f706:	int3   
   14000f707:	int3   
   14000f708:	sub    rcx,0x20
   14000f70c:	jmp    0x14000f674
   14000f711:	int3   
   14000f712:	int3   
   14000f713:	int3   
   14000f714:	sub    rcx,0x8
   14000f718:	jmp    0x14000f674
   14000f71d:	int3   
   14000f71e:	int3   
   14000f71f:	int3   
   14000f720:	sub    rcx,0x20
   14000f724:	jmp    0x14000f648
   14000f729:	int3   
   14000f72a:	int3   
   14000f72b:	int3   
   14000f72c:	sub    rcx,0x20
   14000f730:	jmp    0x14000f640
   14000f735:	int3   
   14000f736:	int3   
   14000f737:	int3   
   14000f738:	mov    QWORD PTR [rsp+0x8],rbx
   14000f73d:	mov    QWORD PTR [rsp+0x10],rbp
   14000f742:	mov    QWORD PTR [rsp+0x18],rsi
   14000f747:	push   rdi
   14000f748:	sub    rsp,0x30
   14000f74c:	mov    rbx,r8
   14000f74f:	mov    rbp,rdx
   14000f752:	mov    rsi,rcx
   14000f755:	call   0x1400132b4
   14000f75a:	bt     eax,0x1e
   14000f75e:	jb     0x14000f7c5
   14000f760:	mov    rcx,rsi
   14000f763:	call   0x14000f39c
   14000f768:	test   rax,rax
   14000f76b:	mov    rdi,rax
   14000f76e:	je     0x14000f7c5
   14000f770:	test   rbx,rbx
   14000f773:	je     0x14000f790
   14000f775:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f779:	call   QWORD PTR [rip+0x21f11]        # 0x140031690
   14000f77f:	test   eax,eax
   14000f781:	je     0x14000f790
   14000f783:	mov    rcx,rbx
   14000f786:	call   0x14000f39c
   14000f78b:	cmp    rdi,rax
   14000f78e:	je     0x14000f7c5
   14000f790:	test   rbx,rbx
   14000f793:	mov    rax,QWORD PTR [rsi+0x40]
   14000f797:	mov    QWORD PTR [rsp+0x20],rax
   14000f79c:	jne    0x14000f7a5
   14000f79e:	and    QWORD PTR [rsp+0x28],rbx
   14000f7a3:	jmp    0x14000f7ae
   14000f7a5:	mov    rax,QWORD PTR [rbx+0x40]
   14000f7a9:	mov    QWORD PTR [rsp+0x28],rax
   14000f7ae:	mov    rcx,QWORD PTR [rdi+0x40]
   14000f7b2:	lea    r9,[rsp+0x20]
   14000f7b7:	mov    r8,rbp
   14000f7ba:	mov    edx,0x36e
   14000f7bf:	call   QWORD PTR [rip+0x22003]        # 0x1400317c8
   14000f7c5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f7ca:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f7cf:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f7d4:	add    rsp,0x30
   14000f7d8:	pop    rdi
   14000f7d9:	ret    
   14000f7da:	int3   
   14000f7db:	int3   
   14000f7dc:	rex push rbx
   14000f7de:	sub    rsp,0x20
   14000f7e2:	cmp    edx,0xfffffffe
   14000f7e5:	jne    0x14000f856
   14000f7e7:	cmp    r8d,0x201
   14000f7ee:	je     0x14000f802
   14000f7f0:	cmp    r8d,0x207
   14000f7f7:	je     0x14000f802
   14000f7f9:	cmp    r8d,0x204
   14000f800:	jne    0x14000f856
   14000f802:	call   0x14000f39c
   14000f807:	test   rax,rax
   14000f80a:	je     0x14000f856
   14000f80c:	mov    rcx,QWORD PTR [rax+0x40]
   14000f810:	call   QWORD PTR [rip+0x21f42]        # 0x140031758
   14000f816:	mov    rcx,rax
   14000f819:	call   0x14000d9cc
   14000f81e:	test   rax,rax
   14000f821:	mov    rbx,rax
   14000f824:	je     0x14000f856
   14000f826:	call   QWORD PTR [rip+0x21fac]        # 0x1400317d8
   14000f82c:	mov    rcx,rax
   14000f82f:	call   0x14000d9cc
   14000f834:	cmp    rbx,rax
   14000f837:	je     0x14000f856
   14000f839:	mov    rcx,rbx
   14000f83c:	call   0x14001334c
   14000f841:	test   eax,eax
   14000f843:	je     0x14000f856
   14000f845:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f849:	call   QWORD PTR [rip+0x21da9]        # 0x1400315f8
   14000f84f:	mov    eax,0x1
   14000f854:	jmp    0x14000f858
   14000f856:	xor    eax,eax
   14000f858:	add    rsp,0x20
   14000f85c:	pop    rbx
   14000f85d:	ret    
   14000f85e:	int3   
   14000f85f:	int3   
   14000f860:	mov    rax,rsp
   14000f863:	mov    QWORD PTR [rax+0x20],r9
   14000f867:	mov    QWORD PTR [rax+0x18],r8
   14000f86b:	mov    DWORD PTR [rax+0x10],edx
   14000f86e:	mov    QWORD PTR [rax+0x8],rcx
   14000f872:	push   rbx
   14000f873:	push   rsi
   14000f874:	push   rdi
   14000f875:	push   r12
   14000f877:	push   r13
   14000f879:	push   r14
   14000f87b:	push   r15
   14000f87d:	sub    rsp,0x90
   14000f884:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000f88d:	mov    r13,r9
   14000f890:	mov    r15,r8
   14000f893:	mov    r14d,edx
   14000f896:	mov    rsi,rcx
   14000f899:	lea    rdx,[rip+0x230c8]        # 0x140032968
   14000f8a0:	call   QWORD PTR [rip+0x21d02]        # 0x1400315a8
   14000f8a6:	mov    r12,rax
   14000f8a9:	mov    QWORD PTR [rsp+0x30],rax
   14000f8ae:	xor    ebx,ebx
   14000f8b0:	lea    edi,[rbx+0x1]
   14000f8b3:	mov    edx,r14d
   14000f8b6:	sub    edx,0x6
   14000f8b9:	je     0x14000f98c
   14000f8bf:	sub    edx,0x1a
   14000f8c2:	je     0x14000f963
   14000f8c8:	sub    edx,0x62
   14000f8cb:	je     0x14000f92a
   14000f8cd:	cmp    edx,0x8e
   14000f8d3:	jne    0x14000f9b6
   14000f8d9:	mov    rcx,rsi
   14000f8dc:	call   0x14000d9cc
   14000f8e1:	mov    rdi,rax
   14000f8e4:	lea    r8,[rsp+0x30]
   14000f8e9:	lea    rdx,[rsp+0x48]
   14000f8ee:	mov    rcx,rax
   14000f8f1:	call   0x14000bcec
   14000f8f6:	mov    QWORD PTR [rsp+0x20],r13
   14000f8fb:	mov    r9,r15
   14000f8fe:	mov    r8d,0x110
   14000f904:	mov    rdx,rsi
   14000f907:	mov    rcx,r12
   14000f90a:	call   QWORD PTR [rip+0x21d48]        # 0x140031658
   14000f910:	mov    rbx,rax
   14000f913:	mov    r8d,DWORD PTR [rsp+0x30]
   14000f918:	lea    rdx,[rsp+0x48]
   14000f91d:	mov    rcx,rdi
   14000f920:	call   0x14000e1f8
   14000f925:	jmp    0x14000f9d0
   14000f92a:	mov    r8,rax
   14000f92d:	mov    edx,0xfffffffc
   14000f932:	mov    rcx,rsi
   14000f935:	call   QWORD PTR [rip+0x21c95]        # 0x1400315d0
   14000f93b:	lea    rdx,[rip+0x23026]        # 0x140032968
   14000f942:	mov    rcx,rsi
   14000f945:	call   QWORD PTR [rip+0x21c65]        # 0x1400315b0
   14000f94b:	lea    rcx,[rip+0x23016]        # 0x140032968
   14000f952:	call   QWORD PTR [rip+0x21a20]        # 0x140031378
   14000f958:	movzx  ecx,ax
   14000f95b:	call   QWORD PTR [rip+0x21a3f]        # 0x1400313a0
   14000f961:	jmp    0x14000f9b6
   14000f963:	mov    rcx,rsi
   14000f966:	call   0x14000d9cc
   14000f96b:	mov    rcx,r13
   14000f96e:	shr    rcx,0x10
   14000f972:	movzx  r8d,cx
   14000f976:	movsx  edx,r13w
   14000f97a:	mov    rcx,rax
   14000f97d:	call   0x14000f7dc
   14000f982:	mov    edi,ebx
   14000f984:	cmp    eax,ebx
   14000f986:	sete   dil
   14000f98a:	jmp    0x14000f9b2
   14000f98c:	mov    rcx,r13
   14000f98f:	call   0x14000d9cc
   14000f994:	mov    r12,rax
   14000f997:	mov    rcx,rsi
   14000f99a:	call   0x14000d9cc
   14000f99f:	mov    r8,r12
   14000f9a2:	mov    rdx,r15
   14000f9a5:	mov    rcx,rax
   14000f9a8:	call   0x14000f738
   14000f9ad:	mov    r12,QWORD PTR [rsp+0x30]
   14000f9b2:	cmp    edi,ebx
   14000f9b4:	je     0x14000f9d0
   14000f9b6:	mov    QWORD PTR [rsp+0x20],r13
   14000f9bb:	mov    r9,r15
   14000f9be:	mov    r8d,r14d
   14000f9c1:	mov    rdx,rsi
   14000f9c4:	mov    rcx,r12
   14000f9c7:	call   QWORD PTR [rip+0x21c8b]        # 0x140031658
   14000f9cd:	mov    rbx,rax
   14000f9d0:	jmp    0x14000f9d7
   14000f9d2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f9d7:	mov    rax,rbx
   14000f9da:	add    rsp,0x90
   14000f9e1:	pop    r15
   14000f9e3:	pop    r14
   14000f9e5:	pop    r13
   14000f9e7:	pop    r12
   14000f9e9:	pop    rdi
   14000f9ea:	pop    rsi
   14000f9eb:	pop    rbx
   14000f9ec:	ret    
   14000f9ed:	int3   
   14000f9ee:	int3   
   14000f9ef:	int3   
   14000f9f0:	mov    QWORD PTR [rsp+0x10],rdx
   14000f9f5:	push   rbx
   14000f9f6:	push   rbp
   14000f9f7:	push   rdi
   14000f9f8:	sub    rsp,0x30
   14000f9fc:	mov    rbp,rdx
   14000f9ff:	mov    rax,QWORD PTR [rbp+0xd0]
   14000fa06:	mov    QWORD PTR [rbp+0x58],rax
   14000fa0a:	mov    eax,DWORD PTR [rbp+0xd8]
   14000fa10:	mov    DWORD PTR [rbp+0x60],eax
   14000fa13:	mov    rax,QWORD PTR [rbp+0xe0]
   14000fa1a:	mov    QWORD PTR [rbp+0x68],rax
   14000fa1e:	mov    rax,QWORD PTR [rbp+0xe8]
   14000fa25:	mov    QWORD PTR [rbp+0x70],rax
   14000fa29:	lea    rdx,[rbp+0x58]
   14000fa2d:	mov    rdi,QWORD PTR [rbp+0x40]
   14000fa31:	mov    rcx,rdi
   14000fa34:	call   0x1400094a8
   14000fa39:	mov    QWORD PTR [rbp+0x30],rax
   14000fa3d:	xor    ebx,ebx
   14000fa3f:	cmp    rdi,rbx
   14000fa42:	je     0x14000fa4d
   14000fa44:	mov    rcx,rdi
   14000fa47:	call   0x1400062c8
   14000fa4c:	nop
   14000fa4d:	lea    rax,[rip+0xffffffffffffff7e]        # 0x14000f9d2
   14000fa54:	jmp    0x14000fa56
   14000fa56:	add    rsp,0x30
   14000fa5a:	pop    rdi
   14000fa5b:	pop    rbp
   14000fa5c:	pop    rbx
   14000fa5d:	ret    
   14000fa5e:	int3   
   14000fa5f:	int3   
   14000fa60:	mov    rax,rsp
   14000fa63:	push   rbp
   14000fa64:	push   rsi
   14000fa65:	push   rdi
   14000fa66:	push   r12
   14000fa68:	push   r13
   14000fa6a:	sub    rsp,0x2a0
   14000fa71:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000fa7a:	mov    QWORD PTR [rax+0x20],rbx
   14000fa7e:	mov    rax,QWORD PTR [rip+0x3054b]        # 0x14003ffd0
   14000fa85:	xor    rax,rsp
   14000fa88:	mov    QWORD PTR [rsp+0x290],rax
   14000fa90:	mov    r12,r8
   14000fa93:	mov    rbx,rdx
   14000fa96:	mov    esi,ecx
   14000fa98:	lea    rdx,[rip+0xffffffffffff698d]        # 0x14000642c
   14000fa9f:	lea    rcx,[rip+0x355da]        # 0x140045080
   14000faa6:	call   0x140014348
   14000faab:	mov    rdi,rax
   14000faae:	xor    ecx,ecx
   14000fab0:	test   rax,rax
   14000fab3:	setne  cl
   14000fab6:	test   ecx,ecx
   14000fab8:	jne    0x14000fac0
   14000faba:	call   0x140006408
   14000fabf:	int3   
   14000fac0:	cmp    esi,0x3
   14000fac3:	je     0x14000fadc
   14000fac5:	mov    r9,r12
   14000fac8:	mov    r8,rbx
   14000facb:	mov    edx,esi
   14000facd:	mov    rcx,QWORD PTR [rax+0x48]
   14000fad1:	call   QWORD PTR [rip+0x21bd1]        # 0x1400316a8
   14000fad7:	jmp    0x14000fcc0
   14000fadc:	mov    rbp,QWORD PTR [r12]
   14000fae0:	mov    rsi,QWORD PTR [rax+0x28]
   14000fae4:	call   0x1400131d0
   14000fae9:	movzx  r13d,BYTE PTR [rax+0x28]
   14000faee:	test   rsi,rsi
   14000faf1:	jne    0x14000fc22
   14000faf7:	bt     DWORD PTR [rbp+0x30],0x1e
   14000fafc:	jb     0x14000fc91
   14000fb02:	test   r13d,r13d
   14000fb05:	jne    0x14000fc91
   14000fb0b:	cmp    WORD PTR [rip+0x352e5],r13w        # 0x140044df8
   14000fb13:	jne    0x14000fb8d
   14000fb15:	lea    esi,[r13+0x50]
   14000fb19:	mov    r8,rsi
   14000fb1c:	xor    edx,edx
   14000fb1e:	lea    rcx,[rsp+0x40]
   14000fb23:	call   0x14001b520
   14000fb28:	mov    DWORD PTR [rsp+0x40],esi
   14000fb2c:	lea    r8,[rsp+0x40]
   14000fb31:	lea    rdx,[rip+0x23d40]        # 0x140033878
   14000fb38:	xor    ecx,ecx
   14000fb3a:	call   0x14000b8fc
   14000fb3f:	mov    WORD PTR [rip+0x352b2],ax        # 0x140044df8
   14000fb46:	test   ax,ax
   14000fb49:	jne    0x14000fb8d
   14000fb4b:	mov    r8d,0x100
   14000fb51:	lea    rdx,[rsp+0x90]
   14000fb59:	mov    rcx,rbx
   14000fb5c:	call   QWORD PTR [rip+0x21a2e]        # 0x140031590
   14000fb62:	test   eax,eax
   14000fb64:	je     0x14000fba8
   14000fb66:	and    WORD PTR [rsp+0x28e],r13w
   14000fb6f:	lea    rdx,[rip+0x23d02]        # 0x140033878
   14000fb76:	lea    rcx,[rsp+0x90]
   14000fb7e:	call   0x14001be30
   14000fb83:	test   eax,eax
   14000fb85:	je     0x14000fc91
   14000fb8b:	jmp    0x14000fba8
   14000fb8d:	mov    edx,0xffffffe0
   14000fb92:	mov    rcx,rbx
   14000fb95:	call   QWORD PTR [rip+0x219fd]        # 0x140031598
   14000fb9b:	cmp    ax,WORD PTR [rip+0x35256]        # 0x140044df8
   14000fba2:	je     0x14000fc91
   14000fba8:	mov    edx,0xfffffffc
   14000fbad:	mov    rcx,rbx
   14000fbb0:	call   QWORD PTR [rip+0x21a12]        # 0x1400315c8
   14000fbb6:	mov    rsi,rax
   14000fbb9:	test   rax,rax
   14000fbbc:	je     0x14000fc91
   14000fbc2:	lea    rbp,[rip+0x22d9f]        # 0x140032968
   14000fbc9:	mov    rdx,rbp
   14000fbcc:	mov    rcx,rbx
   14000fbcf:	call   QWORD PTR [rip+0x219d3]        # 0x1400315a8
   14000fbd5:	test   rax,rax
   14000fbd8:	jne    0x14000fc91
   14000fbde:	mov    r8,rsi
   14000fbe1:	mov    rdx,rbp
   14000fbe4:	mov    rcx,rbx
   14000fbe7:	call   QWORD PTR [rip+0x219b3]        # 0x1400315a0
   14000fbed:	mov    rdx,rbp
   14000fbf0:	mov    rcx,rbx
   14000fbf3:	call   QWORD PTR [rip+0x219af]        # 0x1400315a8
   14000fbf9:	cmp    rax,rsi
   14000fbfc:	jne    0x14000fc91
   14000fc02:	mov    rcx,rbp
   14000fc05:	call   QWORD PTR [rip+0x21785]        # 0x140031390
   14000fc0b:	lea    r8,[rip+0xfffffffffffffc4e]        # 0x14000f860
   14000fc12:	mov    edx,0xfffffffc
   14000fc17:	mov    rcx,rbx
   14000fc1a:	call   QWORD PTR [rip+0x219b0]        # 0x1400315d0
   14000fc20:	jmp    0x14000fc91
   14000fc22:	mov    rdx,QWORD PTR [rsi+0x38]
   14000fc26:	lea    rcx,[rsp+0x20]
   14000fc2b:	call   0x14001324c
   14000fc30:	nop
   14000fc31:	mov    rdx,rbx
   14000fc34:	mov    rcx,rsi
   14000fc37:	call   0x14000da3c
   14000fc3c:	mov    r11,QWORD PTR [rsi]
   14000fc3f:	mov    rcx,rsi
   14000fc42:	call   QWORD PTR [r11+0xa0]
   14000fc49:	mov    r11,QWORD PTR [rsi]
   14000fc4c:	mov    rcx,rsi
   14000fc4f:	call   QWORD PTR [r11+0x1e0]
   14000fc56:	mov    rsi,rax
   14000fc59:	lea    rbp,[rip+0xffffffffffffe7dc]        # 0x14000e43c
   14000fc60:	mov    r8,rbp
   14000fc63:	mov    edx,0xfffffffc
   14000fc68:	mov    rcx,rbx
   14000fc6b:	call   QWORD PTR [rip+0x2195f]        # 0x1400315d0
   14000fc71:	cmp    rax,rbp
   14000fc74:	je     0x14000fc79
   14000fc76:	mov    QWORD PTR [rsi],rax
   14000fc79:	and    QWORD PTR [rdi+0x28],0x0
   14000fc7e:	cmp    DWORD PTR [rsp+0x28],0x0
   14000fc83:	je     0x14000fc91
   14000fc85:	mov    rdx,QWORD PTR [rsp+0x20]
   14000fc8a:	xor    ecx,ecx
   14000fc8c:	call   0x140012524
   14000fc91:	mov    r9,r12
   14000fc94:	mov    r8,rbx
   14000fc97:	mov    edx,0x3
   14000fc9c:	mov    rcx,QWORD PTR [rdi+0x48]
   14000fca0:	call   QWORD PTR [rip+0x21a02]        # 0x1400316a8
   14000fca6:	mov    rbx,rax
   14000fca9:	test   r13d,r13d
   14000fcac:	je     0x14000fcbd
   14000fcae:	mov    rcx,QWORD PTR [rdi+0x48]
   14000fcb2:	call   QWORD PTR [rip+0x21920]        # 0x1400315d8
   14000fcb8:	and    QWORD PTR [rdi+0x48],0x0
   14000fcbd:	mov    rax,rbx
   14000fcc0:	mov    rcx,QWORD PTR [rsp+0x290]
   14000fcc8:	xor    rcx,rsp
   14000fccb:	call   0x140019370
   14000fcd0:	mov    rbx,QWORD PTR [rsp+0x2e8]
   14000fcd8:	add    rsp,0x2a0
   14000fcdf:	pop    r13
   14000fce1:	pop    r12
   14000fce3:	pop    rdi
   14000fce4:	pop    rsi
   14000fce5:	pop    rbp
   14000fce6:	ret    
   14000fce7:	int3   
   14000fce8:	int3   
   14000fce9:	int3   
   14000fcea:	int3   
   14000fceb:	int3   
   14000fcec:	int3   
   14000fced:	int3   
   14000fcee:	int3   
   14000fcef:	int3   
   14000fcf0:	rex push rbp
   14000fcf2:	sub    rsp,0x20
   14000fcf6:	mov    rbp,rdx
   14000fcf9:	lea    rcx,[rbp+0x20]
   14000fcfd:	call   0x14000bc5c
   14000fd02:	add    rsp,0x20
   14000fd06:	pop    rbp
   14000fd07:	ret    
   14000fd08:	mov    QWORD PTR [rsp+0x8],rbx
   14000fd0d:	push   rdi
   14000fd0e:	sub    rsp,0x20
   14000fd12:	mov    rdi,rcx
   14000fd15:	lea    rdx,[rip+0xffffffffffff6710]        # 0x14000642c
   14000fd1c:	lea    rcx,[rip+0x3535d]        # 0x140045080
   14000fd23:	call   0x140014348
   14000fd28:	test   rax,rax
   14000fd2b:	mov    rbx,rax
   14000fd2e:	jne    0x14000fd36
   14000fd30:	call   0x140006408
   14000fd35:	int3   
   14000fd36:	cmp    QWORD PTR [rax+0x28],rdi
   14000fd3a:	je     0x14000fd73
   14000fd3c:	cmp    QWORD PTR [rax+0x48],0x0
   14000fd41:	jne    0x14000fd6f
   14000fd43:	call   QWORD PTR [rip+0x21667]        # 0x1400313b0
   14000fd49:	xor    r8d,r8d
   14000fd4c:	lea    rdx,[rip+0xfffffffffffffd0d]        # 0x14000fa60
   14000fd53:	lea    ecx,[r8+0x5]
   14000fd57:	mov    r9d,eax
   14000fd5a:	call   QWORD PTR [rip+0x21940]        # 0x1400316a0
   14000fd60:	test   rax,rax
   14000fd63:	mov    QWORD PTR [rbx+0x48],rax
   14000fd67:	jne    0x14000fd6f
   14000fd69:	call   0x1400063c0
   14000fd6e:	int3   
   14000fd6f:	mov    QWORD PTR [rbx+0x28],rdi
   14000fd73:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fd78:	add    rsp,0x20
   14000fd7c:	pop    rdi
   14000fd7d:	ret    
   14000fd7e:	int3   
   14000fd7f:	int3   
   14000fd80:	mov    rax,rsp
   14000fd83:	mov    QWORD PTR [rax+0x8],rbx
   14000fd87:	mov    QWORD PTR [rax+0x10],rbp
   14000fd8b:	mov    QWORD PTR [rax+0x18],rsi
   14000fd8f:	mov    QWORD PTR [rax+0x20],rdi
   14000fd93:	push   r12
   14000fd95:	sub    rsp,0xb0
   14000fd9c:	xor    ebx,ebx
   14000fd9e:	mov    rsi,r9
   14000fda1:	mov    rbp,r8
   14000fda4:	cmp    r9,rbx
   14000fda7:	mov    r12d,edx
   14000fdaa:	mov    rdi,rcx
   14000fdad:	je     0x14000fdc4
   14000fdaf:	or     edx,0xffffffff
   14000fdb2:	mov    rcx,r9
   14000fdb5:	call   0x140014524
   14000fdba:	cmp    eax,ebx
   14000fdbc:	jne    0x14000fdc4
   14000fdbe:	call   0x140006408
   14000fdc3:	int3   
   14000fdc4:	mov    eax,DWORD PTR [rsp+0xe0]
   14000fdcb:	mov    DWORD PTR [rsp+0xa8],r12d
   14000fdd3:	mov    QWORD PTR [rsp+0xa0],rbp
   14000fddb:	mov    DWORD PTR [rsp+0x90],eax
   14000fde2:	mov    eax,DWORD PTR [rsp+0xe8]
   14000fde9:	mov    QWORD PTR [rsp+0x98],rsi
   14000fdf1:	mov    DWORD PTR [rsp+0x8c],eax
   14000fdf8:	mov    eax,DWORD PTR [rsp+0xf0]
   14000fdff:	mov    DWORD PTR [rsp+0x88],eax
   14000fe06:	mov    eax,DWORD PTR [rsp+0xf8]
   14000fe0d:	mov    DWORD PTR [rsp+0x84],eax
   14000fe14:	mov    eax,DWORD PTR [rsp+0x100]
   14000fe1b:	mov    DWORD PTR [rsp+0x80],eax
   14000fe22:	mov    rax,QWORD PTR [rsp+0x108]
   14000fe2a:	mov    QWORD PTR [rsp+0x78],rax
   14000fe2f:	mov    rax,QWORD PTR [rsp+0x110]
   14000fe37:	mov    QWORD PTR [rsp+0x70],rax
   14000fe3c:	call   0x1400131d0
   14000fe41:	lea    rdx,[rsp+0x60]
   14000fe46:	mov    rcx,QWORD PTR [rax+0x10]
   14000fe4a:	mov    rax,QWORD PTR [rsp+0x118]
   14000fe52:	mov    QWORD PTR [rsp+0x60],rax
   14000fe57:	mov    rax,QWORD PTR [rdi]
   14000fe5a:	mov    QWORD PTR [rsp+0x68],rcx
   14000fe5f:	mov    rcx,rdi
   14000fe62:	call   QWORD PTR [rax+0xc8]
   14000fe68:	mov    rcx,rdi
   14000fe6b:	cmp    eax,ebx
   14000fe6d:	jne    0x14000fe7f
   14000fe6f:	mov    rax,QWORD PTR [rdi]
   14000fe72:	call   QWORD PTR [rax+0x228]
   14000fe78:	xor    eax,eax
   14000fe7a:	jmp    0x14000ff1c
   14000fe7f:	call   0x14000fd08
   14000fe84:	mov    rax,QWORD PTR [rsp+0x68]
   14000fe89:	mov    r11,QWORD PTR [rsp+0x60]
   14000fe8e:	mov    r9d,DWORD PTR [rsp+0x90]
   14000fe96:	mov    r8,QWORD PTR [rsp+0x98]
   14000fe9e:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000fea6:	mov    ecx,DWORD PTR [rsp+0xa8]
   14000fead:	mov    QWORD PTR [rsp+0x58],r11
   14000feb2:	mov    QWORD PTR [rsp+0x50],rax
   14000feb7:	mov    rax,QWORD PTR [rsp+0x70]
   14000febc:	mov    QWORD PTR [rsp+0x48],rax
   14000fec1:	mov    rax,QWORD PTR [rsp+0x78]
   14000fec6:	mov    QWORD PTR [rsp+0x40],rax
   14000fecb:	mov    eax,DWORD PTR [rsp+0x80]
   14000fed2:	mov    DWORD PTR [rsp+0x38],eax
   14000fed6:	mov    eax,DWORD PTR [rsp+0x84]
   14000fedd:	mov    DWORD PTR [rsp+0x30],eax
   14000fee1:	mov    eax,DWORD PTR [rsp+0x88]
   14000fee8:	mov    DWORD PTR [rsp+0x28],eax
   14000feec:	mov    eax,DWORD PTR [rsp+0x8c]
   14000fef3:	mov    DWORD PTR [rsp+0x20],eax
   14000fef7:	call   0x14000b9f4
   14000fefc:	mov    rsi,rax
   14000feff:	call   0x14000dae8
   14000ff04:	cmp    eax,ebx
   14000ff06:	jne    0x14000ff14
   14000ff08:	mov    rdx,QWORD PTR [rdi]
   14000ff0b:	mov    rcx,rdi
   14000ff0e:	call   QWORD PTR [rdx+0x228]
   14000ff14:	cmp    rsi,rbx
   14000ff17:	setne  bl
   14000ff1a:	mov    eax,ebx
   14000ff1c:	lea    r11,[rsp+0xb0]
   14000ff24:	mov    rbx,QWORD PTR [r11+0x10]
   14000ff28:	mov    rbp,QWORD PTR [r11+0x18]
   14000ff2c:	mov    rsi,QWORD PTR [r11+0x20]
   14000ff30:	mov    rdi,QWORD PTR [r11+0x28]
   14000ff34:	mov    rsp,r11
   14000ff37:	pop    r12
   14000ff39:	ret    
   14000ff3a:	int3   
   14000ff3b:	int3   
   14000ff3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff41:	push   rdi
   14000ff42:	sub    rsp,0x30
   14000ff46:	mov    rax,QWORD PTR [rcx]
   14000ff49:	mov    rbx,rcx
   14000ff4c:	call   QWORD PTR [rax+0x240]
   14000ff52:	test   eax,eax
   14000ff54:	je     0x14000ff62
   14000ff56:	mov    rax,QWORD PTR [rbx]
   14000ff59:	mov    rcx,rbx
   14000ff5c:	call   QWORD PTR [rax+0x2e0]
   14000ff62:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ff66:	xor    r9d,r9d
   14000ff69:	xor    r8d,r8d
   14000ff6c:	lea    edi,[r9+0x1f]
   14000ff70:	mov    edx,edi
   14000ff72:	call   QWORD PTR [rip+0x21850]        # 0x1400317c8
   14000ff78:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ff7c:	xor    r9d,r9d
   14000ff7f:	xor    r8d,r8d
   14000ff82:	mov    edx,edi
   14000ff84:	mov    DWORD PTR [rsp+0x28],0x1
   14000ff8c:	mov    DWORD PTR [rsp+0x20],0x1
   14000ff94:	call   0x14000e70c
   14000ff99:	mov    rcx,rbx
   14000ff9c:	call   0x14000f39c
   14000ffa1:	test   rax,rax
   14000ffa4:	mov    rbx,rax
   14000ffa7:	jne    0x14000ffaf
   14000ffa9:	call   0x140006408
   14000ffae:	int3   
   14000ffaf:	mov    rcx,QWORD PTR [rax+0x40]
   14000ffb3:	xor    r9d,r9d
   14000ffb6:	xor    r8d,r8d
   14000ffb9:	mov    edx,edi
   14000ffbb:	call   QWORD PTR [rip+0x21807]        # 0x1400317c8
   14000ffc1:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ffc5:	xor    r9d,r9d
   14000ffc8:	xor    r8d,r8d
   14000ffcb:	mov    edx,edi
   14000ffcd:	mov    DWORD PTR [rsp+0x28],0x1
   14000ffd5:	mov    DWORD PTR [rsp+0x20],0x1
   14000ffdd:	call   0x14000e70c
   14000ffe2:	call   QWORD PTR [rip+0x215a0]        # 0x140031588
   14000ffe8:	test   rax,rax
   14000ffeb:	je     0x14000fffe
   14000ffed:	xor    r9d,r9d
   14000fff0:	xor    r8d,r8d
   14000fff3:	mov    edx,edi
   14000fff5:	mov    rcx,rax
   14000fff8:	call   QWORD PTR [rip+0x217ca]        # 0x1400317c8
   14000fffe:	mov    rbx,QWORD PTR [rsp+0x40]
   140010003:	add    rsp,0x30
   140010007:	pop    rdi
   140010008:	ret    
   140010009:	int3   
   14001000a:	int3   
   14001000b:	int3   
   14001000c:	mov    rax,rsp
   14001000f:	push   r12
   140010011:	push   r13
   140010013:	push   r15
   140010015:	sub    rsp,0x120
   14001001c:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140010025:	mov    QWORD PTR [rax+0x8],rbx
   140010029:	mov    QWORD PTR [rax+0x10],rbp
   14001002d:	mov    QWORD PTR [rax+0x18],rsi
   140010031:	mov    QWORD PTR [rax+0x20],rdi
   140010035:	mov    rsi,r9
   140010038:	mov    r12,r8
   14001003b:	mov    r13d,edx
   14001003e:	mov    rbp,rcx
   140010041:	and    QWORD PTR [rsp+0x30],0x0
   140010047:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001004f:	mov    r15d,0x1
   140010055:	cmp    edx,0x111
   14001005b:	jne    0x140010081
   14001005d:	mov    rax,QWORD PTR [rcx]
   140010060:	mov    r8,r9
   140010063:	mov    rdx,r12
   140010066:	call   QWORD PTR [rax+0x1d0]
   14001006c:	test   eax,eax
   14001006e:	je     0x14001007a
   140010070:	mov    QWORD PTR [rsp+0x30],r15
   140010075:	jmp    0x140010b4b
   14001007a:	xor    eax,eax
   14001007c:	jmp    0x140010b7e
   140010081:	cmp    edx,0x4e
   140010084:	jne    0x1400100af
   140010086:	cmp    QWORD PTR [r9],0x0
   14001008a:	je     0x1400100a8
   14001008c:	mov    rax,QWORD PTR [rcx]
   14001008f:	lea    r9,[rsp+0x30]
   140010094:	mov    r8,rsi
   140010097:	mov    rdx,r12
   14001009a:	call   QWORD PTR [rax+0x1d8]
   1400100a0:	test   eax,eax
   1400100a2:	jne    0x140010b4b
   1400100a8:	xor    eax,eax
   1400100aa:	jmp    0x140010b7e
   1400100af:	cmp    edx,0x6
   1400100b2:	jne    0x1400100ca
   1400100b4:	mov    rcx,r9
   1400100b7:	call   0x14000d9cc
   1400100bc:	mov    r8,rax
   1400100bf:	mov    rdx,r12
   1400100c2:	mov    rcx,rbp
   1400100c5:	call   0x14000f738
   1400100ca:	cmp    r13d,0x20
   1400100ce:	jne    0x1400100f4
   1400100d0:	mov    rax,rsi
   1400100d3:	shr    rax,0x10
   1400100d7:	movzx  r8d,ax
   1400100db:	movsx  edx,si
   1400100de:	mov    rcx,rbp
   1400100e1:	call   0x14000f7dc
   1400100e6:	test   eax,eax
   1400100e8:	je     0x1400100f4
   1400100ea:	mov    QWORD PTR [rsp+0x30],r15
   1400100ef:	jmp    0x140010b4b
   1400100f4:	mov    rax,QWORD PTR [rbp+0x98]
   1400100fb:	test   rax,rax
   1400100fe:	je     0x140010164
   140010100:	cmp    DWORD PTR [rax+0xe0],0x0
   140010107:	jle    0x140010164
   140010109:	cmp    r13d,0x200
   140010110:	jb     0x14001011b
   140010112:	cmp    r13d,0x209
   140010119:	jbe    0x140010139
   14001011b:	cmp    r13d,0x100
   140010122:	jb     0x14001012d
   140010124:	cmp    r13d,0x10f
   14001012b:	jbe    0x140010139
   14001012d:	lea    eax,[r13-0x281]
   140010134:	cmp    eax,0x10
   140010137:	ja     0x140010164
   140010139:	mov    rcx,QWORD PTR [rbp+0x98]
   140010140:	mov    rax,QWORD PTR [rcx]
   140010143:	lea    rdx,[rsp+0x30]
   140010148:	mov    QWORD PTR [rsp+0x20],rdx
   14001014d:	mov    r9,rsi
   140010150:	mov    r8,r12
   140010153:	mov    edx,r13d
   140010156:	call   QWORD PTR [rax+0x128]
   14001015c:	test   eax,eax
   14001015e:	jne    0x140010b4b
   140010164:	mov    rax,QWORD PTR [rbp+0x0]
   140010168:	mov    rcx,rbp
   14001016b:	call   QWORD PTR [rax+0x50]
   14001016e:	mov    rdi,rax
   140010171:	mov    ebx,eax
   140010173:	xor    ebx,r13d
   140010176:	and    ebx,0x1ff
   14001017c:	mov    eax,0x7
   140010181:	mov    DWORD PTR [rsp+0x40],eax
   140010185:	mov    ecx,eax
   140010187:	call   0x140015804
   14001018c:	lea    rbx,[rbx+rbx*2]
   140010190:	lea    rdx,[rip+0x31959]        # 0x140041af0
   140010197:	cmp    r13d,DWORD PTR [rdx+rbx*8]
   14001019b:	jne    0x1400101d9
   14001019d:	cmp    rdi,QWORD PTR [rdx+rbx*8+0x10]
   1400101a2:	jne    0x1400101d9
   1400101a4:	mov    rdi,QWORD PTR [rdx+rbx*8+0x8]
   1400101a9:	mov    ecx,0x7
   1400101ae:	call   0x140015898
   1400101b3:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   1400101bb:	test   rdi,rdi
   1400101be:	jne    0x1400101c7
   1400101c0:	xor    eax,eax
   1400101c2:	jmp    0x140010b7e
   1400101c7:	cmp    r13d,0xc000
   1400101ce:	jb     0x14001029f
   1400101d4:	jmp    0x140010b36
   1400101d9:	mov    DWORD PTR [rdx+rbx*8],r13d
   1400101dd:	mov    QWORD PTR [rdx+rbx*8+0x10],rdi
   1400101e2:	mov    rcx,QWORD PTR [rdi]
   1400101e5:	xor    eax,eax
   1400101e7:	cmp    rcx,rax
   1400101ea:	je     0x140010b6c
   1400101f0:	cmp    r13d,0xc000
   1400101f7:	jae    0x140010226
   1400101f9:	mov    rdi,QWORD PTR [rdi+0x8]
   1400101fd:	cmp    QWORD PTR [rdi+0x10],rax
   140010201:	je     0x14001021c
   140010203:	cmp    DWORD PTR [rdi],r13d
   140010206:	jne    0x140010212
   140010208:	cmp    DWORD PTR [rdi+0x4],eax
   14001020b:	jne    0x140010212
   14001020d:	cmp    DWORD PTR [rdi+0x8],eax
   140010210:	jbe    0x14001021f
   140010212:	add    rdi,0x20
   140010216:	cmp    QWORD PTR [rdi+0x10],rax
   14001021a:	jne    0x140010203
   14001021c:	mov    rdi,rax
   14001021f:	cmp    rdi,rax
   140010222:	jne    0x140010281
   140010224:	jmp    0x140010269
   140010226:	mov    rdi,QWORD PTR [rdi+0x8]
   14001022a:	cmp    QWORD PTR [rdi+0x10],rax
   14001022e:	je     0x14001024c
   140010230:	cmp    DWORD PTR [rdi],0xc000
   140010236:	jne    0x140010242
   140010238:	cmp    DWORD PTR [rdi+0x4],eax
   14001023b:	jne    0x140010242
   14001023d:	cmp    DWORD PTR [rdi+0x8],eax
   140010240:	jbe    0x14001024f
   140010242:	add    rdi,0x20
   140010246:	cmp    QWORD PTR [rdi+0x10],rax
   14001024a:	jne    0x140010230
   14001024c:	mov    rdi,rax
   14001024f:	cmp    rdi,rax
   140010252:	je     0x140010269
   140010254:	mov    rax,QWORD PTR [rdi+0x10]
   140010258:	cmp    DWORD PTR [rax],r13d
   14001025b:	je     0x140010b18
   140010261:	add    rdi,0x20
   140010265:	xor    eax,eax
   140010267:	jmp    0x14001022a
   140010269:	call   rcx
   14001026b:	mov    rdi,rax
   14001026e:	mov    rcx,QWORD PTR [rax]
   140010271:	xor    eax,eax
   140010273:	cmp    rcx,rax
   140010276:	je     0x140010b65
   14001027c:	jmp    0x1400101f0
   140010281:	lea    rax,[rip+0x31868]        # 0x140041af0
   140010288:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   14001028d:	mov    ecx,0x7
   140010292:	call   0x140015898
   140010297:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001029f:	mov    rbx,QWORD PTR [rdi+0x18]
   1400102a3:	mov    rcx,QWORD PTR [rdi+0x10]
   1400102a7:	cmp    rcx,0x1d
   1400102ab:	ja     0x140010729
   1400102b1:	cmp    rcx,0x1d
   1400102b5:	je     0x140010717
   1400102bb:	cmp    rcx,0xf
   1400102bf:	ja     0x1400105be
   1400102c5:	cmp    rcx,0xf
   1400102c9:	je     0x140010595
   1400102cf:	cmp    rcx,0x8
   1400102d3:	ja     0x140010485
   1400102d9:	cmp    rcx,0x8
   1400102dd:	je     0x1400103d7
   1400102e3:	sub    rcx,r15
   1400102e6:	je     0x1400103ba
   1400102ec:	sub    rcx,r15
   1400102ef:	je     0x1400103a5
   1400102f5:	sub    rcx,r15
   1400102f8:	je     0x140010390
   1400102fe:	sub    rcx,r15
   140010301:	je     0x14001037b
   140010303:	sub    rcx,r15
   140010306:	je     0x14001034b
   140010308:	sub    rcx,r15
   14001030b:	je     0x14001032b
   14001030d:	cmp    rcx,r15
   140010310:	jne    0x140010b4b
   140010316:	mov    rdx,rsi
   140010319:	mov    rcx,rbp
   14001031c:	call   rbx
   14001031e:	movsxd rcx,eax
   140010321:	mov    QWORD PTR [rsp+0x30],rcx
   140010326:	jmp    0x140010b4b
   14001032b:	mov    rcx,r12
   14001032e:	call   0x14000d9cc
   140010333:	mov    rdx,rax
   140010336:	mov    r8,rsi
   140010339:	mov    rcx,rbp
   14001033c:	call   rbx
   14001033e:	movsxd rcx,eax
   140010341:	mov    QWORD PTR [rsp+0x30],rcx
   140010346:	jmp    0x140010b4b
   14001034b:	mov    rax,rsi
   14001034e:	shr    rax,0x10
   140010352:	movzx  edi,ax
   140010355:	movzx  esi,si
   140010358:	mov    rcx,r12
   14001035b:	call   0x14000d9cc
   140010360:	mov    rdx,rax
   140010363:	mov    r9d,edi
   140010366:	mov    r8d,esi
   140010369:	mov    rcx,rbp
   14001036c:	call   rbx
   14001036e:	movsxd rcx,eax
   140010371:	mov    QWORD PTR [rsp+0x30],rcx
   140010376:	jmp    0x140010b4b
   14001037b:	mov    rdx,r12
   14001037e:	mov    rcx,rbp
   140010381:	call   rbx
   140010383:	movsxd rcx,eax
   140010386:	mov    QWORD PTR [rsp+0x30],rcx
   14001038b:	jmp    0x140010b4b
   140010390:	mov    edx,r12d
   140010393:	mov    rcx,rbp
   140010396:	call   rbx
   140010398:	movsxd rcx,eax
   14001039b:	mov    QWORD PTR [rsp+0x30],rcx
   1400103a0:	jmp    0x140010b4b
   1400103a5:	mov    edx,r12d
   1400103a8:	mov    rcx,rbp
   1400103ab:	call   rbx
   1400103ad:	movsxd rcx,eax
   1400103b0:	mov    QWORD PTR [rsp+0x30],rcx
   1400103b5:	jmp    0x140010b4b
   1400103ba:	mov    rcx,r12
   1400103bd:	call   0x140012004
   1400103c2:	mov    rdx,rax
   1400103c5:	mov    rcx,rbp
   1400103c8:	call   rbx
   1400103ca:	movsxd rcx,eax
   1400103cd:	mov    QWORD PTR [rsp+0x30],rcx
   1400103d2:	jmp    0x140010b4b
   1400103d7:	lea    rcx,[rsp+0x48]
   1400103dc:	call   0x1400119e4
   1400103e1:	nop
   1400103e2:	mov    rax,QWORD PTR [rsi+0x8]
   1400103e6:	mov    QWORD PTR [rsp+0x50],rax
   1400103eb:	lea    rcx,[rsp+0x70]
   1400103f0:	call   0x14000bc78
   1400103f5:	nop
   1400103f6:	mov    rcx,QWORD PTR [rsi]
   1400103f9:	mov    QWORD PTR [rsp+0xb0],rcx
   140010401:	mov    edi,DWORD PTR [rsi+0x10]
   140010404:	call   0x14000da10
   140010409:	test   rax,rax
   14001040c:	jne    0x140010447
   14001040e:	mov    rcx,QWORD PTR [rbp+0x98]
   140010415:	test   rcx,rcx
   140010418:	je     0x140010442
   14001041a:	add    rcx,0x48
   14001041e:	mov    rdx,QWORD PTR [rsp+0xb0]
   140010426:	call   0x14001775c
   14001042b:	mov    rcx,QWORD PTR [rsp+0x110]
   140010433:	test   rax,rax
   140010436:	cmovne rcx,rax
   14001043a:	mov    QWORD PTR [rsp+0x110],rcx
   140010442:	lea    rax,[rsp+0x70]
   140010447:	mov    r9d,edi
   14001044a:	mov    r8,rax
   14001044d:	lea    rdx,[rsp+0x48]
   140010452:	mov    rcx,rbp
   140010455:	call   rbx
   140010457:	and    QWORD PTR [rsp+0x50],0x0
   14001045d:	and    QWORD PTR [rsp+0xb0],0x0
   140010466:	mov    QWORD PTR [rsp+0x30],rax
   14001046b:	lea    rcx,[rsp+0x70]
   140010470:	call   0x14000e4c0
   140010475:	nop
   140010476:	lea    rcx,[rsp+0x48]
   14001047b:	call   0x140012078
   140010480:	jmp    0x140010b4b
   140010485:	sub    rcx,0x9
   140010489:	je     0x140010559
   14001048f:	sub    rcx,r15
   140010492:	je     0x14001052b
   140010498:	sub    rcx,r15
   14001049b:	je     0x14001050a
   14001049d:	sub    rcx,r15
   1400104a0:	je     0x1400104da
   1400104a2:	sub    rcx,r15
   1400104a5:	je     0x1400104c5
   1400104a7:	cmp    rcx,r15
   1400104aa:	jne    0x140010b4b
   1400104b0:	mov    r8,rsi
   1400104b3:	mov    rdx,r12
   1400104b6:	mov    rcx,rbp
   1400104b9:	call   rbx
   1400104bb:	mov    QWORD PTR [rsp+0x30],rax
   1400104c0:	jmp    0x140010b4b
   1400104c5:	mov    rdx,rsi
   1400104c8:	mov    rcx,rbp
   1400104cb:	call   rbx
   1400104cd:	movsxd rcx,eax
   1400104d0:	mov    QWORD PTR [rsp+0x30],rcx
   1400104d5:	jmp    0x140010b4b
   1400104da:	mov    rax,rsi
   1400104dd:	shr    rax,0x10
   1400104e1:	movzx  edi,ax
   1400104e4:	movzx  esi,si
   1400104e7:	mov    rcx,r12
   1400104ea:	call   0x14000d9cc
   1400104ef:	mov    rdx,rax
   1400104f2:	mov    r9d,edi
   1400104f5:	mov    r8d,esi
   1400104f8:	mov    rcx,rbp
   1400104fb:	call   rbx
   1400104fd:	movsxd rcx,eax
   140010500:	mov    QWORD PTR [rsp+0x30],rcx
   140010505:	jmp    0x140010b4b
   14001050a:	mov    rax,r12
   14001050d:	shr    rax,0x10
   140010511:	movzx  r8d,ax
   140010515:	movzx  edx,r12w
   140010519:	mov    rcx,rbp
   14001051c:	call   rbx
   14001051e:	movsxd rcx,eax
   140010521:	mov    QWORD PTR [rsp+0x30],rcx
   140010526:	jmp    0x140010b4b
   14001052b:	mov    rax,r12
   14001052e:	shr    rax,0x10
   140010532:	movzx  edi,ax
   140010535:	mov    rcx,rsi
   140010538:	call   0x14000d9cc
   14001053d:	mov    r8,rax
   140010540:	movzx  edx,r12w
   140010544:	mov    r9d,edi
   140010547:	mov    rcx,rbp
   14001054a:	call   rbx
   14001054c:	movsxd rcx,eax
   14001054f:	mov    QWORD PTR [rsp+0x30],rcx
   140010554:	jmp    0x140010b4b
   140010559:	lea    rcx,[rsp+0x48]
   14001055e:	call   0x1400119e4
   140010563:	nop
   140010564:	mov    rax,QWORD PTR [rsi+0x8]
   140010568:	mov    QWORD PTR [rsp+0x50],rax
   14001056d:	mov    r8d,DWORD PTR [rsi+0x10]
   140010571:	lea    rdx,[rsp+0x48]
   140010576:	mov    rcx,rbp
   140010579:	call   rbx
   14001057b:	and    QWORD PTR [rsp+0x50],0x0
   140010581:	mov    QWORD PTR [rsp+0x30],rax
   140010586:	lea    rcx,[rsp+0x48]
   14001058b:	call   0x140012078
   140010590:	jmp    0x140010b4b
   140010595:	mov    rcx,rsi
   140010598:	call   0x140017574
   14001059d:	mov    r9,rax
   1400105a0:	mov    rax,r12
   1400105a3:	shr    rax,0x10
   1400105a7:	movzx  r8d,ax
   1400105ab:	movzx  edx,r12w
   1400105af:	mov    rcx,rbp
   1400105b2:	call   rbx
   1400105b4:	mov    QWORD PTR [rsp+0x30],rax
   1400105b9:	jmp    0x140010b4b
   1400105be:	cmp    rcx,0x16
   1400105c2:	ja     0x14001065e
   1400105c8:	cmp    rcx,0x16
   1400105cc:	je     0x140010645
   1400105ce:	sub    rcx,0x10
   1400105d2:	je     0x140010635
   1400105d4:	sub    rcx,r15
   1400105d7:	je     0x140010628
   1400105d9:	sub    rcx,r15
   1400105dc:	je     0x140010618
   1400105de:	sub    rcx,r15
   1400105e1:	je     0x14001060e
   1400105e3:	sub    rcx,r15
   1400105e6:	je     0x140010601
   1400105e8:	cmp    rcx,r15
   1400105eb:	jne    0x140010b4b
   1400105f1:	mov    r8d,esi
   1400105f4:	mov    edx,r12d
   1400105f7:	mov    rcx,rbp
   1400105fa:	call   rbx
   1400105fc:	jmp    0x140010b4b
   140010601:	mov    edx,r12d
   140010604:	mov    rcx,rbp
   140010607:	call   rbx
   140010609:	jmp    0x140010b4b
   14001060e:	mov    rcx,rbp
   140010611:	call   rbx
   140010613:	jmp    0x140010b4b
   140010618:	mov    r8,rsi
   14001061b:	mov    rdx,r12
   14001061e:	mov    rcx,rbp
   140010621:	call   rbx
   140010623:	jmp    0x140010b4b
   140010628:	mov    rdx,r12
   14001062b:	mov    rcx,rbp
   14001062e:	call   rbx
   140010630:	jmp    0x140010b4b
   140010635:	mov    r8,rsi
   140010638:	mov    edx,r12d
   14001063b:	mov    rcx,rbp
   14001063e:	call   rbx
   140010640:	jmp    0x140010b4b
   140010645:	mov    rax,r12
   140010648:	shr    rax,0x10
   14001064c:	movzx  r8d,ax
   140010650:	movzx  edx,r12w
   140010654:	mov    rcx,rbp
   140010657:	call   rbx
   140010659:	jmp    0x140010b4b
   14001065e:	sub    rcx,0x17
   140010662:	je     0x1400106ff
   140010668:	sub    rcx,r15
   14001066b:	je     0x1400106e3
   14001066d:	sub    rcx,r15
   140010670:	je     0x1400106c7
   140010672:	sub    rcx,r15
   140010675:	je     0x1400106af
   140010677:	sub    rcx,r15
   14001067a:	je     0x14001069a
   14001067c:	cmp    rcx,r15
   14001067f:	jne    0x140010b4b
   140010685:	mov    edx,r12d
   140010688:	mov    rcx,rbp
   14001068b:	call   rbx
   14001068d:	mov    r11d,eax
   140010690:	mov    QWORD PTR [rsp+0x30],r11
   140010695:	jmp    0x140010b4b
   14001069a:	mov    edx,r12d
   14001069d:	mov    rcx,rbp
   1400106a0:	call   rbx
   1400106a2:	movsxd rcx,eax
   1400106a5:	mov    QWORD PTR [rsp+0x30],rcx
   1400106aa:	jmp    0x140010b4b
   1400106af:	mov    rcx,rsi
   1400106b2:	call   0x14000d9cc
   1400106b7:	mov    r8,rax
   1400106ba:	mov    edx,r12d
   1400106bd:	mov    rcx,rbp
   1400106c0:	call   rbx
   1400106c2:	jmp    0x140010b4b
   1400106c7:	mov    rax,rsi
   1400106ca:	shr    rax,0x10
   1400106ce:	movzx  r9d,ax
   1400106d2:	movzx  r8d,si
   1400106d6:	mov    edx,r12d
   1400106d9:	mov    rcx,rbp
   1400106dc:	call   rbx
   1400106de:	jmp    0x140010b4b
   1400106e3:	mov    rax,rsi
   1400106e6:	shr    rax,0x10
   1400106ea:	movzx  r9d,ax
   1400106ee:	movzx  r8d,si
   1400106f2:	mov    edx,r12d
   1400106f5:	mov    rcx,rbp
   1400106f8:	call   rbx
   1400106fa:	jmp    0x140010b4b
   1400106ff:	mov    rax,rsi
   140010702:	shr    rax,0x10
   140010706:	movsx  r8d,ax
   14001070a:	movsx  edx,si
   14001070d:	mov    rcx,rbp
   140010710:	call   rbx
   140010712:	jmp    0x140010b4b
   140010717:	mov    rcx,rbp
   14001071a:	call   rbx
   14001071c:	movsxd rcx,eax
   14001071f:	mov    QWORD PTR [rsp+0x30],rcx
   140010724:	jmp    0x140010b4b
   140010729:	cmp    rcx,0x2c
   14001072d:	ja     0x140010950
   140010733:	cmp    rcx,0x2c
   140010737:	je     0x140010943
   14001073d:	cmp    rcx,0x24
   140010741:	ja     0x140010830
   140010747:	cmp    rcx,0x24
   14001074b:	je     0x14001081b
   140010751:	sub    rcx,0x1e
   140010755:	je     0x14001080b
   14001075b:	sub    rcx,r15
   14001075e:	je     0x1400107df
   140010760:	sub    rcx,r15
   140010763:	je     0x1400107ca
   140010765:	sub    rcx,r15
   140010768:	je     0x1400107b5
   14001076a:	sub    rcx,r15
   14001076d:	je     0x14001078d
   14001076f:	cmp    rcx,r15
   140010772:	jne    0x140010b4b
   140010778:	mov    rcx,r12
   14001077b:	call   0x14000d9cc
   140010780:	mov    rdx,rax
   140010783:	mov    rcx,rbp
   140010786:	call   rbx
   140010788:	jmp    0x140010b4b
   14001078d:	mov    rax,rsi
   140010790:	shr    rax,0x10
   140010794:	movsx  edi,ax
   140010797:	movsx  esi,si
   14001079a:	mov    rcx,r12
   14001079d:	call   0x140017574
   1400107a2:	mov    rdx,rax
   1400107a5:	mov    r9d,edi
   1400107a8:	mov    r8d,esi
   1400107ab:	mov    rcx,rbp
   1400107ae:	call   rbx
   1400107b0:	jmp    0x140010b4b
   1400107b5:	mov    rcx,r12
   1400107b8:	call   0x140017574
   1400107bd:	mov    rdx,rax
   1400107c0:	mov    rcx,rbp
   1400107c3:	call   rbx
   1400107c5:	jmp    0x140010b4b
   1400107ca:	mov    rcx,r12
   1400107cd:	call   0x140012004
   1400107d2:	mov    rdx,rax
   1400107d5:	mov    rcx,rbp
   1400107d8:	call   rbx
   1400107da:	jmp    0x140010b4b
   1400107df:	mov    rcx,r12
   1400107e2:	call   0x14000d9cc
   1400107e7:	mov    rdi,rax
   1400107ea:	mov    rcx,rsi
   1400107ed:	call   0x14000d9cc
   1400107f2:	mov    r8,rax
   1400107f5:	xor    edx,edx
   1400107f7:	cmp    QWORD PTR [rbp+0x40],rsi
   1400107fb:	sete   dl
   1400107fe:	mov    r9,rdi
   140010801:	mov    rcx,rbp
   140010804:	call   rbx
   140010806:	jmp    0x140010b4b
   14001080b:	mov    r8,rsi
   14001080e:	mov    rdx,r12
   140010811:	mov    rcx,rbp
   140010814:	call   rbx
   140010816:	jmp    0x140010b4b
   14001081b:	mov    rcx,rsi
   14001081e:	call   0x14000d9cc
   140010823:	mov    rdx,rax
   140010826:	mov    rcx,rbp
   140010829:	call   rbx
   14001082b:	jmp    0x140010b4b
   140010830:	cmp    rcx,0x25
   140010834:	je     0x14001091b
   14001083a:	cmp    rcx,0x26
   14001083e:	je     0x1400108ef
   140010844:	cmp    rcx,0x27
   140010848:	je     0x1400108d7
   14001084e:	cmp    rcx,0x28
   140010852:	je     0x1400108c8
   140010854:	cmp    rcx,0x29
   140010858:	je     0x1400108a2
   14001085a:	lea    rax,[rcx-0x2a]
   14001085e:	cmp    rax,r15
   140010861:	ja     0x140010b4b
   140010867:	movsx  edi,r12w
   14001086b:	shr    r12,0x10
   14001086f:	movsx  r12d,r12w
   140010873:	cmp    rcx,0x2a
   140010877:	jne    0x140010893
   140010879:	mov    rcx,rsi
   14001087c:	call   0x14000d9cc
   140010881:	mov    r9,rax
   140010884:	mov    r8d,r12d
   140010887:	mov    edx,edi
   140010889:	mov    rcx,rbp
   14001088c:	call   rbx
   14001088e:	jmp    0x140010b4b
   140010893:	mov    r8d,r12d
   140010896:	mov    edx,edi
   140010898:	mov    rcx,rbp
   14001089b:	call   rbx
   14001089d:	jmp    0x140010b4b
   1400108a2:	mov    rax,r12
   1400108a5:	shr    rax,0x10
   1400108a9:	movzx  edi,ax
   1400108ac:	mov    rcx,rsi
   1400108af:	call   0x14000d9cc
   1400108b4:	mov    r8,rax
   1400108b7:	movzx  edx,r12w
   1400108bb:	mov    r9d,edi
   1400108be:	mov    rcx,rbp
   1400108c1:	call   rbx
   1400108c3:	jmp    0x140010b4b
   1400108c8:	mov    rcx,rbp
   1400108cb:	call   rbx
   1400108cd:	mov    QWORD PTR [rsp+0x30],rax
   1400108d2:	jmp    0x140010b4b
   1400108d7:	mov    rcx,r12
   1400108da:	call   0x14000d9cc
   1400108df:	mov    rdx,rax
   1400108e2:	mov    r8,rsi
   1400108e5:	mov    rcx,rbp
   1400108e8:	call   rbx
   1400108ea:	jmp    0x140010b4b
   1400108ef:	movsx  eax,si
   1400108f2:	mov    DWORD PTR [rsp+0x38],eax
   1400108f6:	shr    rsi,0x10
   1400108fa:	movsx  eax,si
   1400108fd:	mov    DWORD PTR [rsp+0x3c],eax
   140010901:	mov    rcx,r12
   140010904:	call   0x14000d9cc
   140010909:	mov    rdx,rax
   14001090c:	mov    r8,QWORD PTR [rsp+0x38]
   140010911:	mov    rcx,rbp
   140010914:	call   rbx
   140010916:	jmp    0x140010b4b
   14001091b:	mov    rax,rsi
   14001091e:	shr    rax,0x10
   140010922:	movzx  edi,ax
   140010925:	movzx  esi,si
   140010928:	mov    rcx,r12
   14001092b:	call   0x14000d9cc
   140010930:	mov    rdx,rax
   140010933:	mov    r9d,edi
   140010936:	mov    r8d,esi
   140010939:	mov    rcx,rbp
   14001093c:	call   rbx
   14001093e:	jmp    0x140010b4b
   140010943:	mov    rdx,rsi
   140010946:	mov    rcx,rbp
   140010949:	call   rbx
   14001094b:	jmp    0x140010b4b
   140010950:	cmp    rcx,0x33
   140010954:	ja     0x140010a20
   14001095a:	cmp    rcx,0x33
   14001095e:	je     0x140010a13
   140010964:	sub    rcx,0x2d
   140010968:	je     0x140010a03
   14001096e:	sub    rcx,r15
   140010971:	je     0x1400109ee
   140010973:	sub    rcx,r15
   140010976:	je     0x1400109d6
   140010978:	sub    rcx,r15
   14001097b:	je     0x1400109ad
   14001097d:	sub    rcx,r15
   140010980:	je     0x14001099b
   140010982:	cmp    rcx,r15
   140010985:	jne    0x140010b4b
   14001098b:	mov    r8,rsi
   14001098e:	mov    edx,r12d
   140010991:	mov    rcx,rbp
   140010994:	call   rbx
   140010996:	jmp    0x140010b4b
   14001099b:	mov    rcx,rbp
   14001099e:	call   rbx
   1400109a0:	mov    r11d,eax
   1400109a3:	mov    QWORD PTR [rsp+0x30],r11
   1400109a8:	jmp    0x140010b4b
   1400109ad:	movsx  eax,si
   1400109b0:	mov    DWORD PTR [rsp+0x38],eax
   1400109b4:	shr    rsi,0x10
   1400109b8:	movsx  eax,si
   1400109bb:	mov    DWORD PTR [rsp+0x3c],eax
   1400109bf:	mov    rdx,QWORD PTR [rsp+0x38]
   1400109c4:	mov    rcx,rbp
   1400109c7:	call   rbx
   1400109c9:	mov    r11d,eax
   1400109cc:	mov    QWORD PTR [rsp+0x30],r11
   1400109d1:	jmp    0x140010b4b
   1400109d6:	mov    r8,rsi
   1400109d9:	mov    edx,r12d
   1400109dc:	mov    rcx,rbp
   1400109df:	call   rbx
   1400109e1:	movsxd rcx,eax
   1400109e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400109e9:	jmp    0x140010b4b
   1400109ee:	mov    r8,rsi
   1400109f1:	mov    edx,r12d
   1400109f4:	mov    rcx,rbp
   1400109f7:	call   rbx
   1400109f9:	mov    QWORD PTR [rsp+0x30],r15
   1400109fe:	jmp    0x140010b4b
   140010a03:	mov    r8,rsi
   140010a06:	mov    edx,r12d
   140010a09:	mov    rcx,rbp
   140010a0c:	call   rbx
   140010a0e:	jmp    0x140010b4b
   140010a13:	mov    rdx,rsi
   140010a16:	mov    rcx,rbp
   140010a19:	call   rbx
   140010a1b:	jmp    0x140010b4b
   140010a20:	sub    rcx,0x34
   140010a24:	je     0x140010aff
   140010a2a:	sub    rcx,r15
   140010a2d:	je     0x140010ade
   140010a33:	sub    rcx,r15
   140010a36:	je     0x140010acc
   140010a3c:	sub    rcx,r15
   140010a3f:	je     0x140010a90
   140010a41:	sub    rcx,0xd
   140010a45:	je     0x140010a76
   140010a47:	cmp    rcx,r15
   140010a4a:	jne    0x140010b4b
   140010a50:	movsx  eax,si
   140010a53:	mov    DWORD PTR [rsp+0x38],eax
   140010a57:	shr    rsi,0x10
   140010a5b:	movsx  eax,si
   140010a5e:	mov    DWORD PTR [rsp+0x3c],eax
   140010a62:	mov    rdx,QWORD PTR [rsp+0x38]
   140010a67:	mov    rcx,rbp
   140010a6a:	call   rbx
   140010a6c:	mov    QWORD PTR [rsp+0x30],rax
   140010a71:	jmp    0x140010b4b
   140010a76:	mov    rcx,rbp
   140010a79:	call   rbx
   140010a7b:	mov    QWORD PTR [rsp+0x30],rax
   140010a80:	test   rax,rax
   140010a83:	je     0x140010b4b
   140010a89:	xor    eax,eax
   140010a8b:	jmp    0x140010b7e
   140010a90:	movsx  eax,si
   140010a93:	mov    DWORD PTR [rsp+0x38],eax
   140010a97:	shr    rsi,0x10
   140010a9b:	movsx  eax,si
   140010a9e:	mov    DWORD PTR [rsp+0x3c],eax
   140010aa2:	mov    r8,r12
   140010aa5:	shr    r8,0x10
   140010aa9:	movzx  edx,r12w
   140010aad:	mov    r9,QWORD PTR [rsp+0x38]
   140010ab2:	mov    rcx,rbp
   140010ab5:	call   rbx
   140010ab7:	cdqe   
   140010ab9:	mov    QWORD PTR [rsp+0x30],rax
   140010abe:	test   rax,rax
   140010ac1:	jne    0x140010b4b
   140010ac7:	jmp    0x140010b7e
   140010acc:	mov    r8,rsi
   140010acf:	mov    edx,r12d
   140010ad2:	mov    rcx,rbp
   140010ad5:	call   rbx
   140010ad7:	mov    QWORD PTR [rsp+0x30],r15
   140010adc:	jmp    0x140010b4b
   140010ade:	movsx  eax,si
   140010ae1:	mov    DWORD PTR [rsp+0x38],eax
   140010ae5:	shr    rsi,0x10
   140010ae9:	movsx  eax,si
   140010aec:	mov    DWORD PTR [rsp+0x3c],eax
   140010af0:	mov    r8,QWORD PTR [rsp+0x38]
   140010af5:	mov    edx,r12d
   140010af8:	mov    rcx,rbp
   140010afb:	call   rbx
   140010afd:	jmp    0x140010b4b
   140010aff:	mov    rax,r12
   140010b02:	shr    rax,0x10
   140010b06:	movzx  r8d,ax
   140010b0a:	movzx  edx,r12w
   140010b0e:	mov    r9,rsi
   140010b11:	mov    rcx,rbp
   140010b14:	call   rbx
   140010b16:	jmp    0x140010b4b
   140010b18:	lea    rax,[rip+0x30fd1]        # 0x140041af0
   140010b1f:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   140010b24:	mov    ecx,0x7
   140010b29:	call   0x140015898
   140010b2e:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   140010b36:	mov    r9,QWORD PTR [rdi+0x18]
   140010b3a:	mov    r8,rsi
   140010b3d:	mov    rdx,r12
   140010b40:	mov    rcx,rbp
   140010b43:	call   r9
   140010b46:	mov    QWORD PTR [rsp+0x30],rax
   140010b4b:	mov    rdx,QWORD PTR [rsp+0x160]
   140010b53:	test   rdx,rdx
   140010b56:	je     0x140010b60
   140010b58:	mov    rcx,QWORD PTR [rsp+0x30]
   140010b5d:	mov    QWORD PTR [rdx],rcx
   140010b60:	mov    eax,r15d
   140010b63:	jmp    0x140010b7e
   140010b65:	lea    rdx,[rip+0x30f84]        # 0x140041af0
   140010b6c:	mov    QWORD PTR [rdx+rbx*8+0x8],rax
   140010b71:	mov    ecx,0x7
   140010b76:	call   0x140015898
   140010b7b:	nop
   140010b7c:	xor    eax,eax
   140010b7e:	lea    r11,[rsp+0x120]
   140010b86:	mov    rbx,QWORD PTR [r11+0x20]
   140010b8a:	mov    rbp,QWORD PTR [r11+0x28]
   140010b8e:	mov    rsi,QWORD PTR [r11+0x30]
   140010b92:	mov    rdi,QWORD PTR [r11+0x38]
   140010b96:	mov    rsp,r11
   140010b99:	pop    r15
   140010b9b:	pop    r13
   140010b9d:	pop    r12
   140010b9f:	ret    
   140010ba0:	int3   
   140010ba1:	int3   
   140010ba2:	int3   
   140010ba3:	int3   
   140010ba4:	int3   
   140010ba5:	int3   
   140010ba6:	int3   
   140010ba7:	int3   
   140010ba8:	int3   
   140010ba9:	int3   
   140010baa:	int3   
   140010bab:	int3   
   140010bac:	rex push rbp
   140010bae:	sub    rsp,0x20
   140010bb2:	mov    rbp,rdx
   140010bb5:	lea    rcx,[rbp+0x40]
   140010bb9:	call   0x14000d824
   140010bbe:	add    rsp,0x20
   140010bc2:	pop    rbp
   140010bc3:	ret    
   140010bc4:	int3   
   140010bc5:	int3   
   140010bc6:	int3   
   140010bc7:	int3   
   140010bc8:	int3   
   140010bc9:	int3   
   140010bca:	int3   
   140010bcb:	int3   
   140010bcc:	rex push rbp
   140010bce:	sub    rsp,0x20
   140010bd2:	mov    rbp,rdx
   140010bd5:	lea    rcx,[rbp+0x48]
   140010bd9:	call   0x140012078
   140010bde:	add    rsp,0x20
   140010be2:	pop    rbp
   140010be3:	ret    
   140010be4:	int3   
   140010be5:	int3   
   140010be6:	int3   
   140010be7:	int3   
   140010be8:	int3   
   140010be9:	int3   
   140010bea:	int3   
   140010beb:	int3   
   140010bec:	rex push rbp
   140010bee:	sub    rsp,0x20
   140010bf2:	mov    rbp,rdx
   140010bf5:	lea    rcx,[rbp+0x70]
   140010bf9:	call   0x14000e4c0
   140010bfe:	add    rsp,0x20
   140010c02:	pop    rbp
   140010c03:	ret    
   140010c04:	int3   
   140010c05:	int3   
   140010c06:	int3   
   140010c07:	int3   
   140010c08:	int3   
   140010c09:	int3   
   140010c0a:	int3   
   140010c0b:	int3   
   140010c0c:	rex push rbp
   140010c0e:	sub    rsp,0x20
   140010c12:	mov    rbp,rdx
   140010c15:	lea    rcx,[rbp+0x48]
   140010c19:	call   0x140012078
   140010c1e:	add    rsp,0x20
   140010c22:	pop    rbp
   140010c23:	ret    
   140010c24:	rex push rbx
   140010c26:	sub    rsp,0x50
   140010c2a:	cmp    edx,0x2b
   140010c2d:	jb     0x140010c72
   140010c2f:	cmp    edx,0x2f
   140010c32:	jbe    0x140010d2e
   140010c38:	cmp    edx,0x39
   140010c3b:	je     0x140010d2e
   140010c41:	cmp    edx,0x4e
   140010c44:	je     0x140010cfc
   140010c4a:	cmp    edx,0x111
   140010c50:	je     0x140010cc2
   140010c52:	cmp    edx,0x113
   140010c58:	jbe    0x140010c72
   140010c5a:	cmp    edx,0x115
   140010c60:	jbe    0x140010d2e
   140010c66:	cmp    edx,0x210
   140010c6c:	je     0x140010d2e
   140010c72:	lea    eax,[rdx-0x132]
   140010c78:	cmp    eax,0x6
   140010c7b:	ja     0x140010d48
   140010c81:	mov    rbx,QWORD PTR [rsp+0x80]
   140010c89:	lea    eax,[rdx-0x132]
   140010c8f:	mov    QWORD PTR [rsp+0x38],r8
   140010c94:	lea    r9,[rsp+0x30]
   140010c99:	xor    r8d,r8d
   140010c9c:	mov    edx,0xbc19
   140010ca1:	mov    QWORD PTR [rsp+0x20],rbx
   140010ca6:	mov    DWORD PTR [rsp+0x40],eax
   140010caa:	call   0x14001000c
   140010caf:	mov    rcx,QWORD PTR [rbx]
   140010cb2:	mov    r11d,eax
   140010cb5:	neg    rcx
   140010cb8:	sbb    eax,eax
   140010cba:	and    eax,r11d
   140010cbd:	jmp    0x140010d4a
   140010cc2:	and    QWORD PTR [rsp+0x20],0x0
   140010cc8:	shr    r8,0x10
   140010ccc:	xor    r9d,r9d
   140010ccf:	movzx  r8d,r8w
   140010cd3:	xor    edx,edx
   140010cd5:	or     r8d,0xbd110000
   140010cdc:	call   0x1400087bc
   140010ce1:	test   eax,eax
   140010ce3:	je     0x140010d48
   140010ce5:	mov    rcx,QWORD PTR [rsp+0x80]
   140010ced:	mov    eax,0x1
   140010cf2:	test   rcx,rcx
   140010cf5:	je     0x140010d4a
   140010cf7:	mov    QWORD PTR [rcx],rax
   140010cfa:	jmp    0x140010d4a
   140010cfc:	movzx  r8d,WORD PTR [r9+0x10]
   140010d01:	mov    rax,QWORD PTR [rsp+0x80]
   140010d09:	and    QWORD PTR [rsp+0x20],0x0
   140010d0f:	mov    QWORD PTR [rsp+0x38],r9
   140010d14:	lea    r9,[rsp+0x30]
   140010d19:	or     r8d,0xbc4e0000
   140010d20:	xor    edx,edx
   140010d22:	mov    QWORD PTR [rsp+0x30],rax
   140010d27:	call   0x1400087bc
   140010d2c:	jmp    0x140010d4a
   140010d2e:	mov    rax,QWORD PTR [rsp+0x80]
   140010d36:	add    edx,0xbc00
   140010d3c:	mov    QWORD PTR [rsp+0x20],rax
   140010d41:	call   0x14001000c
   140010d46:	jmp    0x140010d4a
   140010d48:	xor    eax,eax
   140010d4a:	add    rsp,0x50
   140010d4e:	pop    rbx
   140010d4f:	ret    
   140010d50:	rex push rbx
   140010d52:	sub    rsp,0x20
   140010d56:	and    DWORD PTR [rip+0x30d83],0x0        # 0x140041ae0
   140010d5d:	cmp    QWORD PTR [rcx+0x98],0x0
   140010d65:	mov    rbx,rcx
   140010d68:	je     0x140010d7f
   140010d6a:	mov    rcx,QWORD PTR [rcx+0x98]
   140010d71:	mov    edx,0xfffffd3f
   140010d76:	mov    rax,QWORD PTR [rcx]
   140010d79:	call   QWORD PTR [rax+0xa0]
   140010d7f:	xor    r8d,r8d
   140010d82:	xor    edx,edx
   140010d84:	mov    rcx,rbx
   140010d87:	add    rsp,0x20
   140010d8b:	pop    rbx
   140010d8c:	jmp    0x14000f4a8
   140010d91:	int3   
   140010d92:	int3   
   140010d93:	int3   
   140010d94:	mov    QWORD PTR [rsp+0x8],rcx
   140010d99:	push   rbx
   140010d9a:	push   rsi
   140010d9b:	push   rdi
   140010d9c:	push   r12
   140010d9e:	sub    rsp,0x38
   140010da2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010dab:	mov    rsi,rcx
   140010dae:	xor    ebx,ebx
   140010db0:	cmp    rcx,rbx
   140010db3:	jne    0x140010dbf
   140010db5:	mov    eax,0x80004003
   140010dba:	jmp    0x140010e43
   140010dbf:	mov    QWORD PTR [rcx],rbx
   140010dc2:	mov    r12d,0x8007000e
   140010dc8:	mov    DWORD PTR [rsp+0x68],r12d
   140010dcd:	mov    QWORD PTR [rsp+0x70],rbx
   140010dd2:	mov    ecx,0x30
   140010dd7:	call   0x140006114
   140010ddc:	mov    rdi,rax
   140010ddf:	mov    QWORD PTR [rsp+0x78],rax
   140010de4:	cmp    rax,rbx
   140010de7:	je     0x140010e1b
   140010de9:	mov    DWORD PTR [rax+0x28],ebx
   140010dec:	mov    QWORD PTR [rax+0x10],rbx
   140010df0:	mov    QWORD PTR [rax+0x18],rbx
   140010df4:	lea    rax,[rip+0x228ad]        # 0x1400336a8
   140010dfb:	mov    QWORD PTR [rdi],rax
   140010dfe:	lea    rax,[rip+0x22873]        # 0x140033678
   140010e05:	mov    QWORD PTR [rdi+0x8],rax
   140010e09:	lea    rax,[rip+0x22838]        # 0x140033648
   140010e10:	mov    QWORD PTR [rdi+0x20],rax
   140010e14:	call   0x140015d34
   140010e19:	jmp    0x140010e1e
   140010e1b:	mov    rdi,rbx
   140010e1e:	mov    QWORD PTR [rsp+0x70],rdi
   140010e23:	jmp    0x140010e36
   140010e25:	xor    ebx,ebx
   140010e27:	mov    rsi,QWORD PTR [rsp+0x60]
   140010e2c:	mov    r12d,DWORD PTR [rsp+0x68]
   140010e31:	mov    rdi,QWORD PTR [rsp+0x70]
   140010e36:	cmp    rdi,rbx
   140010e39:	cmovne r12d,ebx
   140010e3d:	mov    QWORD PTR [rsi],rdi
   140010e40:	mov    eax,r12d
   140010e43:	add    rsp,0x38
   140010e47:	pop    r12
   140010e49:	pop    rdi
   140010e4a:	pop    rsi
   140010e4b:	pop    rbx
   140010e4c:	ret    
   140010e4d:	int3   
   140010e4e:	int3   
   140010e4f:	int3   
   140010e50:	int3   
   140010e51:	int3   
   140010e52:	int3   
   140010e53:	int3   
   140010e54:	rex push rbp
   140010e56:	sub    rsp,0x20
   140010e5a:	mov    rbp,rdx
   140010e5d:	mov    rcx,QWORD PTR [rbp+0x78]
   140010e61:	call   0x140006160
   140010e66:	add    rsp,0x20
   140010e6a:	pop    rbp
   140010e6b:	ret    
   140010e6c:	int3   
   140010e6d:	int3   
   140010e6e:	int3   
   140010e6f:	int3   
   140010e70:	int3   
   140010e71:	int3   
   140010e72:	int3   
   140010e73:	int3   
   140010e74:	mov    QWORD PTR [rsp+0x10],rdx
   140010e79:	push   rbp
   140010e7a:	sub    rsp,0x20
   140010e7e:	mov    rbp,rdx
   140010e81:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e85:	call   0x1400062c8
   140010e8a:	nop
   140010e8b:	lea    rax,[rip+0xffffffffffffff93]        # 0x140010e25
   140010e92:	jmp    0x140010e94
   140010e94:	add    rsp,0x20
   140010e98:	pop    rbp
   140010e99:	ret    
   140010e9a:	int3   
   140010e9b:	int3   
   140010e9c:	sub    rsp,0x468
   140010ea3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140010eac:	mov    rax,QWORD PTR [rip+0x2f11d]        # 0x14003ffd0
   140010eb3:	xor    rax,rsp
   140010eb6:	mov    QWORD PTR [rsp+0x450],rax
   140010ebe:	call   0x1400131d0
   140010ec3:	mov    rcx,QWORD PTR [rax+0x8]
   140010ec7:	call   0x140008a6c
   140010ecc:	nop
   140010ecd:	mov    rcx,QWORD PTR [rsp+0x450]
   140010ed5:	xor    rcx,rsp
   140010ed8:	call   0x140019370
   140010edd:	add    rsp,0x468
   140010ee4:	ret    
   140010ee5:	int3   
   140010ee6:	int3   
   140010ee7:	int3   
   140010ee8:	int3   
   140010ee9:	int3   
   140010eea:	int3   
   140010eeb:	int3   
   140010eec:	mov    QWORD PTR [rsp+0x10],rdx
   140010ef1:	push   rbx
   140010ef2:	push   rbp
   140010ef3:	sub    rsp,0x38
   140010ef7:	mov    rbp,rdx
   140010efa:	call   0x14000669c
   140010eff:	mov    r11,rax
   140010f02:	xor    ecx,ecx
   140010f04:	test   rax,rax
   140010f07:	setne  cl
   140010f0a:	test   ecx,ecx
   140010f0c:	jne    0x140010f19
   140010f0e:	mov    ecx,0x80004005
   140010f13:	call   0x1400015c0
   140010f18:	int3   
   140010f19:	mov    rax,QWORD PTR [rax]
   140010f1c:	mov    rcx,r11
   140010f1f:	call   QWORD PTR [rax+0x18]
   140010f22:	add    rax,0x18
   140010f26:	mov    QWORD PTR [rbp+0x30],rax
   140010f2a:	mov    rcx,QWORD PTR [rbp+0x38]
   140010f2e:	mov    rax,QWORD PTR [rcx]
   140010f31:	xor    r9d,r9d
   140010f34:	mov    r8d,0x200
   140010f3a:	lea    rdx,[rbp+0x50]
   140010f3e:	call   QWORD PTR [rax+0x18]
   140010f41:	test   eax,eax
   140010f43:	je     0x140010f76
   140010f45:	lea    rax,[rbp+0x50]
   140010f49:	mov    QWORD PTR [rsp+0x28],rax
   140010f4e:	mov    DWORD PTR [rsp+0x20],0x443
   140010f56:	lea    r9,[rip+0x229a3]        # 0x140033900
   140010f5d:	lea    r8,[rip+0x21454]        # 0x1400323b8
   140010f64:	lea    rdx,[rip+0x2142d]        # 0x140032398
   140010f6b:	lea    rcx,[rbp+0x30]
   140010f6f:	call   0x140002e70
   140010f74:	jmp    0x140010f9c
   140010f76:	mov    DWORD PTR [rsp+0x20],0x443
   140010f7e:	lea    r9,[rip+0x2297b]        # 0x140033900
   140010f85:	lea    r8,[rip+0x2142c]        # 0x1400323b8
   140010f8c:	lea    rdx,[rip+0x213ed]        # 0x140032380
   140010f93:	lea    rcx,[rbp+0x30]
   140010f97:	call   0x140002e70
   140010f9c:	xor    r8d,r8d
   140010f9f:	xor    edx,edx
   140010fa1:	mov    rbx,QWORD PTR [rbp+0x30]
   140010fa5:	mov    rcx,rbx
   140010fa8:	call   0x140008508
   140010fad:	nop
   140010fae:	lea    rdx,[rbx-0x18]
   140010fb2:	or     eax,0xffffffff
   140010fb5:	lock xadd DWORD PTR [rdx+0x10],eax
   140010fba:	add    eax,0xffffffff
   140010fbd:	test   eax,eax
   140010fbf:	jg     0x140010fca
   140010fc1:	mov    rcx,QWORD PTR [rdx]
   140010fc4:	mov    rax,QWORD PTR [rcx]
   140010fc7:	call   QWORD PTR [rax+0x8]
   140010fca:	mov    rcx,QWORD PTR [rbp+0x38]
   140010fce:	mov    rax,QWORD PTR [rcx]
   140010fd1:	mov    edx,0x1
   140010fd6:	call   QWORD PTR [rax+0x8]
   140010fd9:	nop
   140010fda:	lea    rax,[rip+0xfffffffffffffeec]        # 0x140010ecd
   140010fe1:	jmp    0x140010fe3
   140010fe3:	add    rsp,0x38
   140010fe7:	pop    rbp
   140010fe8:	pop    rbx
   140010fe9:	ret    
   140010fea:	int3   
   140010feb:	int3   
   140010fec:	rex push rbp
   140010fee:	sub    rsp,0x20
   140010ff2:	mov    rbp,rdx
   140010ff5:	lea    rcx,[rbp+0x30]
   140010ff9:	call   0x140001dc0
   140010ffe:	add    rsp,0x20
   140011002:	pop    rbp
   140011003:	ret    
   140011004:	rex push rdi
   140011006:	sub    rsp,0x30
   14001100a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011013:	mov    QWORD PTR [rsp+0x40],rbx
   140011018:	mov    QWORD PTR [rsp+0x48],rbp
   14001101d:	mov    QWORD PTR [rsp+0x50],rsi
   140011022:	mov    edi,r8d
   140011025:	mov    rsi,rdx
   140011028:	mov    rbx,rcx
   14001102b:	call   0x1400131d0
   140011030:	mov    rbp,QWORD PTR [rax+0x8]
   140011034:	call   0x1400131d0
   140011039:	mov    rcx,QWORD PTR [rax+0x8]
   14001103d:	call   0x140008a4c
   140011042:	nop
   140011043:	mov    rcx,rbx
   140011046:	call   0x14000ff3c
   14001104b:	mov    rcx,rbx
   14001104e:	call   0x14000f39c
   140011053:	test   rax,rax
   140011056:	jne    0x14001105e
   140011058:	call   0x140006408
   14001105d:	int3   
   14001105e:	mov    r9,rsi
   140011061:	mov    r8d,edi
   140011064:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001106b:	mov    rcx,QWORD PTR [rax+0x40]
   14001106f:	call   QWORD PTR [rip+0x2050b]        # 0x140031580
   140011075:	test   eax,eax
   140011077:	jne    0x14001108a
   140011079:	or     r8d,0xffffffff
   14001107d:	xor    edx,edx
   14001107f:	mov    ecx,0xf107
   140011084:	call   0x140008560
   140011089:	nop
   14001108a:	lea    rcx,[rsp+0x58]
   14001108f:	mov    rbx,QWORD PTR [rsp+0x40]
   140011094:	mov    rbp,QWORD PTR [rsp+0x48]
   140011099:	mov    rsi,QWORD PTR [rsp+0x50]
   14001109e:	add    rsp,0x30
   1400110a2:	pop    rdi
   1400110a3:	jmp    0x140010e9c
   1400110a8:	int3   
   1400110a9:	int3   
   1400110aa:	int3   
   1400110ab:	int3   
   1400110ac:	int3   
   1400110ad:	int3   
   1400110ae:	int3   
   1400110af:	int3   
   1400110b0:	int3   
   1400110b1:	int3   
   1400110b2:	int3   
   1400110b3:	int3   
   1400110b4:	rex push rbp
   1400110b6:	sub    rsp,0x20
   1400110ba:	mov    rbp,rdx
   1400110bd:	lea    rcx,[rbp+0x58]
   1400110c1:	call   0x140010e9c
   1400110c6:	add    rsp,0x20
   1400110ca:	pop    rbp
   1400110cb:	ret    
   1400110cc:	rex push rdi
   1400110ce:	sub    rsp,0x30
   1400110d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400110db:	mov    QWORD PTR [rsp+0x40],rbx
   1400110e0:	mov    QWORD PTR [rsp+0x48],rbp
   1400110e5:	mov    QWORD PTR [rsp+0x50],rsi
   1400110ea:	mov    edi,r8d
   1400110ed:	mov    rsi,rdx
   1400110f0:	mov    rbx,rcx
   1400110f3:	call   0x1400131d0
   1400110f8:	mov    rbp,QWORD PTR [rax+0x8]
   1400110fc:	call   0x1400131d0
   140011101:	mov    rcx,QWORD PTR [rax+0x8]
   140011105:	call   0x140008a4c
   14001110a:	nop
   14001110b:	mov    rcx,rbx
   14001110e:	call   0x14000ff3c
   140011113:	mov    rcx,rbx
   140011116:	call   0x14000f39c
   14001111b:	test   rax,rax
   14001111e:	jne    0x140011126
   140011120:	call   0x140006408
   140011125:	int3   
   140011126:	mov    r9,rsi
   140011129:	mov    r8d,edi
   14001112c:	mov    rdx,QWORD PTR [rbp+0xc8]
   140011133:	mov    rcx,QWORD PTR [rax+0x40]
   140011137:	call   0x14000f0ac
   14001113c:	test   rax,rax
   14001113f:	jne    0x140011152
   140011141:	or     r8d,0xffffffff
   140011145:	xor    edx,edx
   140011147:	mov    ecx,0xf107
   14001114c:	call   0x140008560
   140011151:	nop
   140011152:	lea    rcx,[rsp+0x58]
   140011157:	mov    rbx,QWORD PTR [rsp+0x40]
   14001115c:	mov    rbp,QWORD PTR [rsp+0x48]
   140011161:	mov    rsi,QWORD PTR [rsp+0x50]
   140011166:	add    rsp,0x30
   14001116a:	pop    rdi
   14001116b:	jmp    0x140010e9c
   140011170:	int3   
   140011171:	int3   
   140011172:	int3   
   140011173:	int3   
   140011174:	int3   
   140011175:	int3   
   140011176:	int3   
   140011177:	int3   
   140011178:	int3   
   140011179:	int3   
   14001117a:	int3   
   14001117b:	int3   
   14001117c:	rex push rbp
   14001117e:	sub    rsp,0x20
   140011182:	mov    rbp,rdx
   140011185:	lea    rcx,[rbp+0x58]
   140011189:	call   0x140010e9c
   14001118e:	add    rsp,0x20
   140011192:	pop    rbp
   140011193:	ret    
   140011194:	rex push rbx
   140011196:	sub    rsp,0x30
   14001119a:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400111a2:	mov    ebx,edx
   1400111a4:	je     0x1400111dd
   1400111a6:	mov    rcx,QWORD PTR [rcx+0x40]
   1400111aa:	add    edx,0x2000
   1400111b0:	call   QWORD PTR [rip+0x20612]        # 0x1400317c8
   1400111b6:	lea    ecx,[rbx-0x132]
   1400111bc:	cmp    ecx,0x6
   1400111bf:	mov    r11,rax
   1400111c2:	ja     0x1400111c9
   1400111c4:	test   rax,rax
   1400111c7:	je     0x1400111ec
   1400111c9:	mov    rax,QWORD PTR [rsp+0x60]
   1400111ce:	test   rax,rax
   1400111d1:	je     0x1400111d6
   1400111d3:	mov    QWORD PTR [rax],r11
   1400111d6:	mov    eax,0x1
   1400111db:	jmp    0x1400111ec
   1400111dd:	mov    rax,QWORD PTR [rsp+0x60]
   1400111e2:	mov    QWORD PTR [rsp+0x20],rax
   1400111e7:	call   0x140010c24
   1400111ec:	add    rsp,0x30
   1400111f0:	pop    rbx
   1400111f1:	ret    
   1400111f2:	int3   
   1400111f3:	int3   
   1400111f4:	rex push rdi
   1400111f6:	sub    rsp,0x30
   1400111fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140011203:	mov    QWORD PTR [rsp+0x40],rbx
   140011208:	mov    QWORD PTR [rsp+0x48],rbp
   14001120d:	mov    QWORD PTR [rsp+0x58],rsi
   140011212:	mov    rsi,r9
   140011215:	mov    rbp,rdx
   140011218:	mov    rdi,rcx
   14001121b:	mov    ebx,0x80004005
   140011220:	cmp    r8d,0xfffffffc
   140011224:	jne    0x1400112cb
   14001122a:	mov    rax,QWORD PTR [rcx]
   14001122d:	call   QWORD PTR [rax+0x110]
   140011233:	mov    ebx,eax
   140011235:	test   eax,eax
   140011237:	js     0x1400112cb
   14001123d:	mov    r8,QWORD PTR [rdi+0x58]
   140011241:	test   r8,r8
   140011244:	jne    0x1400112b7
   140011246:	lea    rcx,[rsp+0x20]
   14001124b:	call   0x140010d94
   140011250:	mov    ebx,eax
   140011252:	test   eax,eax
   140011254:	js     0x1400112cb
   140011256:	and    QWORD PTR [rsp+0x50],0x0
   14001125c:	mov    rcx,QWORD PTR [rsp+0x20]
   140011261:	mov    rax,QWORD PTR [rcx]
   140011264:	lea    r8,[rsp+0x50]
   140011269:	lea    rdx,[rip+0x21de8]        # 0x140033058
   140011270:	call   QWORD PTR [rax]
   140011272:	test   eax,eax
   140011274:	js     0x1400112a3
   140011276:	mov    rcx,QWORD PTR [rsp+0x50]
   14001127b:	mov    QWORD PTR [rdi+0x58],rcx
   14001127f:	mov    rax,QWORD PTR [rcx]
   140011282:	lea    r8,[rdi+0x68]
   140011286:	lea    rdx,[rdi+0x60]
   14001128a:	call   QWORD PTR [rax+0x18]
   14001128d:	mov    r8,QWORD PTR [rdi+0x58]
   140011291:	mov    rdx,rbp
   140011294:	lea    rcx,[rip+0x21dad]        # 0x140033048
   14001129b:	call   0x140030261
   1400112a0:	mov    QWORD PTR [rsi],rax
   1400112a3:	xor    ebx,ebx
   1400112a5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400112aa:	test   rcx,rcx
   1400112ad:	je     0x1400112cb
   1400112af:	mov    rax,QWORD PTR [rcx]
   1400112b2:	call   QWORD PTR [rax+0x10]
   1400112b5:	jmp    0x1400112cb
   1400112b7:	mov    rdx,rbp
   1400112ba:	lea    rcx,[rip+0x21d87]        # 0x140033048
   1400112c1:	call   0x140030261
   1400112c6:	mov    QWORD PTR [rsi],rax
   1400112c9:	xor    ebx,ebx
   1400112cb:	mov    eax,ebx
   1400112cd:	mov    rbx,QWORD PTR [rsp+0x40]
   1400112d2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400112d7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400112dc:	add    rsp,0x30
   1400112e0:	pop    rdi
   1400112e1:	ret    
   1400112e2:	int3   
   1400112e3:	int3   
   1400112e4:	rex push rbp
   1400112e6:	sub    rsp,0x20
   1400112ea:	mov    rbp,rdx
   1400112ed:	lea    rcx,[rbp+0x50]
   1400112f1:	call   0x14000d24c
   1400112f6:	add    rsp,0x20
   1400112fa:	pop    rbp
   1400112fb:	ret    
   1400112fc:	lea    rax,[rip+0x22685]        # 0x140033988
   140011303:	ret    
   140011304:	mov    rax,rsp
   140011307:	push   rdi
   140011308:	sub    rsp,0x90
   14001130f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011318:	mov    QWORD PTR [rax+0x8],rbx
   14001131c:	mov    QWORD PTR [rax+0x10],rsi
   140011320:	mov    rdi,rcx
   140011323:	lea    r8,[rax-0x68]
   140011327:	mov    rdx,QWORD PTR [rcx+0x40]
   14001132b:	mov    rcx,QWORD PTR [rcx+0x18]
   14001132f:	call   0x14000b804
   140011334:	xor    ebx,ebx
   140011336:	cmp    eax,ebx
   140011338:	je     0x14001133f
   14001133a:	lea    eax,[rbx+0x1]
   14001133d:	jmp    0x1400113ab
   14001133f:	mov    rcx,rdi
   140011342:	call   0x14000b718
   140011347:	cmp    ax,bx
   14001134a:	jne    0x140011350
   14001134c:	xor    eax,eax
   14001134e:	jmp    0x1400113ab
   140011350:	call   0x1400131d0
   140011355:	cmp    BYTE PTR [rax+0x28],bl
   140011358:	je     0x1400113a6
   14001135a:	mov    ecx,0x1
   14001135f:	call   0x140015804
   140011364:	nop
   140011365:	call   0x1400131d0
   14001136a:	mov    rdi,QWORD PTR [rdi+0x40]
   14001136e:	lea    rsi,[rax+0x58]
   140011372:	cmp    rdi,rbx
   140011375:	je     0x140011381
   140011377:	mov    rcx,rdi
   14001137a:	call   0x14001a670
   14001137f:	mov    ebx,eax
   140011381:	mov    r8d,ebx
   140011384:	mov    rdx,rdi
   140011387:	mov    rcx,rsi
   14001138a:	call   0x140004be0
   14001138f:	mov    dx,0xa
   140011393:	mov    rcx,rsi
   140011396:	call   0x140004d40
   14001139b:	nop
   14001139c:	mov    ecx,0x1
   1400113a1:	call   0x140015898
   1400113a6:	mov    eax,0x1
   1400113ab:	lea    r11,[rsp+0x90]
   1400113b3:	mov    rbx,QWORD PTR [r11+0x10]
   1400113b7:	mov    rsi,QWORD PTR [r11+0x18]
   1400113bb:	mov    rsp,r11
   1400113be:	pop    rdi
   1400113bf:	ret    
   1400113c0:	int3   
   1400113c1:	int3   
   1400113c2:	int3   
   1400113c3:	int3   
   1400113c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400113c9:	push   rbp
   1400113ca:	sub    rsp,0x20
   1400113ce:	mov    rbp,rdx
   1400113d1:	mov    ecx,0x1
   1400113d6:	call   0x140015898
   1400113db:	xor    edx,edx
   1400113dd:	xor    ecx,ecx
   1400113df:	call   0x14001b070
   1400113e4:	nop
   1400113e5:	add    rsp,0x20
   1400113e9:	pop    rbp
   1400113ea:	ret    
   1400113eb:	int3   
   1400113ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400113f1:	push   rdi
   1400113f2:	sub    rsp,0x20
   1400113f6:	mov    ebx,r8d
   1400113f9:	mov    rdi,rcx
   1400113fc:	mov    QWORD PTR [rcx+0x40],rdx
   140011400:	call   0x1400131d0
   140011405:	movzx  edx,bx
   140011408:	mov    rcx,QWORD PTR [rax+0x18]
   14001140c:	call   QWORD PTR [rip+0x2039e]        # 0x1400317b0
   140011412:	test   rax,rax
   140011415:	mov    QWORD PTR [rdi+0x20],rax
   140011419:	jne    0x14001142c
   14001141b:	mov    edx,0x7f00
   140011420:	xor    ecx,ecx
   140011422:	call   QWORD PTR [rip+0x20388]        # 0x1400317b0
   140011428:	mov    QWORD PTR [rdi+0x20],rax
   14001142c:	mov    rcx,rdi
   14001142f:	mov    rbx,QWORD PTR [rsp+0x30]
   140011434:	add    rsp,0x20
   140011438:	pop    rdi
   140011439:	jmp    0x140011304
   14001143e:	int3   
   14001143f:	int3   
   140011440:	mov    QWORD PTR [rsp+0x8],rbx
   140011445:	mov    QWORD PTR [rsp+0x18],rbp
   14001144a:	push   rsi
   14001144b:	push   rdi
   14001144c:	push   r12
   14001144e:	sub    rsp,0x70
   140011452:	mov    edi,ecx
   140011454:	call   0x1400131d0
   140011459:	mov    edx,DWORD PTR [rax+0x2c]
   14001145c:	mov    rbp,rax
   14001145f:	not    edx
   140011461:	and    edi,edx
   140011463:	jne    0x14001146d
   140011465:	lea    eax,[rdi+0x1]
   140011468:	jmp    0x1400117d3
   14001146d:	xor    r12d,r12d
   140011470:	lea    rcx,[rsp+0x20]
   140011475:	xor    edx,edx
   140011477:	lea    r8d,[r12+0x48]
   14001147c:	mov    ebx,r12d
   14001147f:	call   0x14001b520
   140011484:	mov    r11,QWORD PTR [rip+0x201c5]        # 0x140031650
   14001148b:	mov    QWORD PTR [rsp+0x28],r11
   140011490:	call   0x1400131d0
   140011495:	lea    esi,[r12+0x1]
   14001149a:	test   sil,dil
   14001149d:	mov    rcx,QWORD PTR [rax+0x10]
   1400114a1:	mov    rax,QWORD PTR [rip+0x33c38]        # 0x1400450e0
   1400114a8:	mov    QWORD PTR [rsp+0x48],rax
   1400114ad:	mov    QWORD PTR [rsp+0x38],rcx
   1400114b2:	mov    DWORD PTR [rsp+0x98],0x8
   1400114bd:	je     0x1400114e3
   1400114bf:	lea    rax,[rip+0x213f2]        # 0x1400328b8
   1400114c6:	lea    rcx,[rsp+0x20]
   1400114cb:	mov    DWORD PTR [rsp+0x20],0xb
   1400114d3:	mov    QWORD PTR [rsp+0x60],rax
   1400114d8:	call   0x140011304
   1400114dd:	cmp    eax,r12d
   1400114e0:	cmovne ebx,esi
   1400114e3:	test   dil,0x20
   1400114e7:	je     0x14001150f
   1400114e9:	or     DWORD PTR [rsp+0x20],0x8b
   1400114f1:	lea    rax,[rip+0x21448]        # 0x140032940
   1400114f8:	lea    rcx,[rsp+0x20]
   1400114fd:	mov    QWORD PTR [rsp+0x60],rax
   140011502:	call   0x140011304
   140011507:	cmp    eax,r12d
   14001150a:	je     0x14001150f
   14001150c:	or     ebx,0x20
   14001150f:	test   dil,0x2
   140011513:	je     0x140011541
   140011515:	lea    rax,[rip+0x213b4]        # 0x1400328d0
   14001151c:	lea    rcx,[rsp+0x20]
   140011521:	mov    DWORD PTR [rsp+0x20],r12d
   140011526:	mov    QWORD PTR [rsp+0x60],rax
   14001152b:	mov    QWORD PTR [rsp+0x50],0x10
   140011534:	call   0x140011304
   140011539:	cmp    eax,r12d
   14001153c:	je     0x140011541
   14001153e:	or     ebx,0x2
   140011541:	test   dil,0x4
   140011545:	je     0x140011573
   140011547:	lea    rdx,[rip+0x213aa]        # 0x1400328f8
   14001154e:	lea    rcx,[rsp+0x20]
   140011553:	mov    r8d,0x7a01
   140011559:	mov    DWORD PTR [rsp+0x20],0x8
   140011561:	mov    QWORD PTR [rsp+0x50],r12
   140011566:	call   0x1400113ec
   14001156b:	cmp    eax,r12d
   14001156e:	je     0x140011573
   140011570:	or     ebx,0x4
   140011573:	test   dil,0x8
   140011577:	je     0x1400115a9
   140011579:	lea    rdx,[rip+0x21398]        # 0x140032918
   140011580:	lea    rcx,[rsp+0x20]
   140011585:	mov    r8d,0x7a02
   14001158b:	mov    DWORD PTR [rsp+0x20],0xb
   140011593:	mov    QWORD PTR [rsp+0x50],0x6
   14001159c:	call   0x1400113ec
   1400115a1:	cmp    eax,r12d
   1400115a4:	je     0x1400115a9
   1400115a6:	or     ebx,0x8
   1400115a9:	test   dil,0x10
   1400115ad:	je     0x1400115d4
   1400115af:	lea    rcx,[rsp+0x98]
   1400115b7:	mov    edx,0x3fc0
   1400115bc:	mov    DWORD PTR [rsp+0x9c],0xff
   1400115c7:	call   0x14000e148
   1400115cc:	or     ebx,eax
   1400115ce:	and    edi,0xffffc03f
   1400115d4:	test   dil,0x40
   1400115d8:	je     0x1400115f9
   1400115da:	lea    rcx,[rsp+0x98]
   1400115e2:	mov    edx,0x40
   1400115e7:	mov    DWORD PTR [rsp+0x9c],0x10
   1400115f2:	call   0x14000e148
   1400115f7:	or     ebx,eax
   1400115f9:	test   dil,dil
   1400115fc:	jns    0x14001161d
   1400115fe:	lea    rcx,[rsp+0x98]
   140011606:	mov    edx,0x80
   14001160b:	mov    DWORD PTR [rsp+0x9c],0x2
   140011616:	call   0x14000e148
   14001161b:	or     ebx,eax
   14001161d:	bt     edi,0x8
   140011621:	jae    0x140011642
   140011623:	lea    rcx,[rsp+0x98]
   14001162b:	mov    edx,0x100
   140011630:	mov    DWORD PTR [rsp+0x9c],0x8
   14001163b:	call   0x14000e148
   140011640:	or     ebx,eax
   140011642:	bt     edi,0x9
   140011646:	jae    0x140011667
   140011648:	lea    rcx,[rsp+0x98]
   140011650:	mov    edx,0x200
   140011655:	mov    DWORD PTR [rsp+0x9c],0x20
   140011660:	call   0x14000e148
   140011665:	or     ebx,eax
   140011667:	bt     edi,0xa
   14001166b:	jae    0x140011688
   14001166d:	lea    rcx,[rsp+0x98]
   140011675:	mov    edx,0x400
   14001167a:	mov    DWORD PTR [rsp+0x9c],esi
   140011681:	call   0x14000e148
   140011686:	or     ebx,eax
   140011688:	bt     edi,0xb
   14001168c:	mov    esi,0x800
   140011691:	jae    0x1400116af
   140011693:	lea    rcx,[rsp+0x98]
   14001169b:	mov    edx,esi
   14001169d:	mov    DWORD PTR [rsp+0x9c],0x40
   1400116a8:	call   0x14000e148
   1400116ad:	or     ebx,eax
   1400116af:	bt     edi,0xc
   1400116b3:	jae    0x1400116d4
   1400116b5:	lea    rcx,[rsp+0x98]
   1400116bd:	mov    edx,0x1000
   1400116c2:	mov    DWORD PTR [rsp+0x9c],0x4
   1400116cd:	call   0x14000e148
   1400116d2:	or     ebx,eax
   1400116d4:	bt     edi,0xd
   1400116d8:	jae    0x1400116f9
   1400116da:	lea    rcx,[rsp+0x98]
   1400116e2:	mov    edx,0x2000
   1400116e7:	mov    DWORD PTR [rsp+0x9c],0x80
   1400116f2:	call   0x14000e148
   1400116f7:	or     ebx,eax
   1400116f9:	bt     edi,0xe
   1400116fd:	jae    0x14001171a
   1400116ff:	lea    rcx,[rsp+0x98]
   140011707:	mov    edx,0x4000
   14001170c:	mov    DWORD PTR [rsp+0x9c],esi
   140011713:	call   0x14000e148
   140011718:	or     ebx,eax
   14001171a:	bt     edi,0xf
   14001171e:	mov    esi,0x8000
   140011723:	jae    0x140011741
   140011725:	lea    rcx,[rsp+0x98]
   14001172d:	mov    edx,esi
   14001172f:	mov    DWORD PTR [rsp+0x9c],0x400
   14001173a:	call   0x14000e148
   14001173f:	or     ebx,eax
   140011741:	bt     edi,0x10
   140011745:	jae    0x140011766
   140011747:	lea    rcx,[rsp+0x98]
   14001174f:	mov    edx,0x10000
   140011754:	mov    DWORD PTR [rsp+0x9c],0x200
   14001175f:	call   0x14000e148
   140011764:	or     ebx,eax
   140011766:	bt     edi,0x11
   14001176a:	jae    0x14001178b
   14001176c:	lea    rcx,[rsp+0x98]
   140011774:	mov    edx,0x20000
   140011779:	mov    DWORD PTR [rsp+0x9c],0x100
   140011784:	call   0x14000e148
   140011789:	or     ebx,eax
   14001178b:	bt     edi,0x12
   14001178f:	jae    0x1400117ac
   140011791:	lea    rcx,[rsp+0x98]
   140011799:	mov    edx,0x40000
   14001179e:	mov    DWORD PTR [rsp+0x9c],esi
   1400117a5:	call   0x14000e148
   1400117aa:	or     ebx,eax
   1400117ac:	or     DWORD PTR [rbp+0x2c],ebx
   1400117af:	mov    edx,DWORD PTR [rbp+0x2c]
   1400117b2:	mov    eax,0x3fc0
   1400117b7:	mov    ecx,edx
   1400117b9:	and    ecx,eax
   1400117bb:	cmp    ecx,eax
   1400117bd:	jne    0x1400117c8
   1400117bf:	or     edx,0x10
   1400117c2:	or     ebx,0x10
   1400117c5:	mov    DWORD PTR [rbp+0x2c],edx
   1400117c8:	and    ebx,edi
   1400117ca:	cmp    ebx,edi
   1400117cc:	sete   r12b
   1400117d0:	mov    eax,r12d
   1400117d3:	lea    r11,[rsp+0x70]
   1400117d8:	mov    rbx,QWORD PTR [r11+0x20]
   1400117dc:	mov    rbp,QWORD PTR [r11+0x30]
   1400117e0:	mov    rsp,r11
   1400117e3:	pop    r12
   1400117e5:	pop    rdi
   1400117e6:	pop    rsi
   1400117e7:	ret    
   1400117e8:	rex push rbx
   1400117ea:	sub    rsp,0x20
   1400117ee:	cmp    QWORD PTR [rdx+0x40],0x0
   1400117f3:	mov    rbx,rdx
   1400117f6:	jne    0x14001180d
   1400117f8:	mov    ecx,0x1
   1400117fd:	call   0x140011440
   140011802:	lea    r11,[rip+0x210af]        # 0x1400328b8
   140011809:	mov    QWORD PTR [rbx+0x40],r11
   14001180d:	mov    eax,0x1
   140011812:	add    rsp,0x20
   140011816:	pop    rbx
   140011817:	ret    
   140011818:	mov    QWORD PTR [rcx+0x10],rdx
   14001181c:	ret    
   14001181d:	int3   
   14001181e:	int3   
   14001181f:	int3   
   140011820:	mov    QWORD PTR [rcx+0x8],rdx
   140011824:	ret    
   140011825:	int3   
   140011826:	int3   
   140011827:	int3   
   140011828:	and    QWORD PTR [rcx+0x10],0x0
   14001182d:	ret    
   14001182e:	int3   
   14001182f:	int3   
   140011830:	and    QWORD PTR [rcx+0x8],0x0
   140011835:	ret    
   140011836:	int3   
   140011837:	int3   
   140011838:	mov    QWORD PTR [rsp+0x8],rbx
   14001183d:	push   rdi
   14001183e:	sub    rsp,0x20
   140011842:	mov    rdi,rcx
   140011845:	mov    rcx,QWORD PTR [rcx+0x10]
   140011849:	xor    ebx,ebx
   14001184b:	test   rcx,rcx
   14001184e:	je     0x140011858
   140011850:	call   QWORD PTR [rip+0x1f89a]        # 0x1400310f0
   140011856:	mov    ebx,eax
   140011858:	mov    rcx,QWORD PTR [rdi+0x8]
   14001185c:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011860:	je     0x140011870
   140011862:	call   QWORD PTR [rip+0x1f888]        # 0x1400310f0
   140011868:	or     ecx,0xffffffff
   14001186b:	test   eax,eax
   14001186d:	cmovne ebx,ecx
   140011870:	mov    eax,ebx
   140011872:	mov    rbx,QWORD PTR [rsp+0x30]
   140011877:	add    rsp,0x20
   14001187b:	pop    rdi
   14001187c:	ret    
   14001187d:	int3   
   14001187e:	int3   
   14001187f:	int3   
   140011880:	mov    QWORD PTR [rsp+0x8],rbx
   140011885:	push   rdi
   140011886:	sub    rsp,0x20
   14001188a:	mov    rbx,rcx
   14001188d:	mov    rcx,QWORD PTR [rcx+0x8]
   140011891:	mov    edi,edx
   140011893:	cmp    rcx,QWORD PTR [rbx+0x10]
   140011897:	mov    eax,0x1
   14001189c:	je     0x1400118a4
   14001189e:	call   QWORD PTR [rip+0x1f844]        # 0x1400310e8
   1400118a4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400118a8:	test   rcx,rcx
   1400118ab:	je     0x1400118c6
   1400118ad:	test   eax,eax
   1400118af:	je     0x1400118c4
   1400118b1:	mov    edx,edi
   1400118b3:	call   QWORD PTR [rip+0x1f82f]        # 0x1400310e8
   1400118b9:	test   eax,eax
   1400118bb:	je     0x1400118c4
   1400118bd:	mov    eax,0x1
   1400118c2:	jmp    0x1400118c6
   1400118c4:	xor    eax,eax
   1400118c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118cb:	add    rsp,0x20
   1400118cf:	pop    rdi
   1400118d0:	ret    
   1400118d1:	int3   
   1400118d2:	int3   
   1400118d3:	int3   
   1400118d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400118d9:	push   rdi
   1400118da:	sub    rsp,0x20
   1400118de:	mov    rbx,rcx
   1400118e1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400118e5:	or     eax,0xffffffff
   1400118e8:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400118ec:	mov    edi,edx
   1400118ee:	je     0x1400118f6
   1400118f0:	call   QWORD PTR [rip+0x1f802]        # 0x1400310f8
   1400118f6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400118fa:	test   rcx,rcx
   1400118fd:	je     0x140011907
   1400118ff:	mov    edx,edi
   140011901:	call   QWORD PTR [rip+0x1f7f1]        # 0x1400310f8
   140011907:	mov    rbx,QWORD PTR [rsp+0x30]
   14001190c:	add    rsp,0x20
   140011910:	pop    rdi
   140011911:	ret    
   140011912:	int3   
   140011913:	int3   
   140011914:	mov    QWORD PTR [rsp+0x8],rbx
   140011919:	push   rdi
   14001191a:	sub    rsp,0x20
   14001191e:	mov    rbx,rcx
   140011921:	mov    rcx,QWORD PTR [rcx+0x8]
   140011925:	or     eax,0xffffffff
   140011928:	cmp    rcx,QWORD PTR [rbx+0x10]
   14001192c:	mov    edi,edx
   14001192e:	je     0x140011936
   140011930:	call   QWORD PTR [rip+0x1f7ca]        # 0x140031100
   140011936:	mov    rcx,QWORD PTR [rbx+0x10]
   14001193a:	test   rcx,rcx
   14001193d:	je     0x140011947
   14001193f:	mov    edx,edi
   140011941:	call   QWORD PTR [rip+0x1f7b9]        # 0x140031100
   140011947:	mov    rbx,QWORD PTR [rsp+0x30]
   14001194c:	add    rsp,0x20
   140011950:	pop    rdi
   140011951:	ret    
   140011952:	int3   
   140011953:	int3   
   140011954:	mov    QWORD PTR [rsp+0x8],rbx
   140011959:	push   rdi
   14001195a:	sub    rsp,0x20
   14001195e:	mov    rbx,rcx
   140011961:	mov    rcx,QWORD PTR [rcx+0x8]
   140011965:	xor    eax,eax
   140011967:	cmp    rcx,QWORD PTR [rbx+0x10]
   14001196b:	mov    edi,edx
   14001196d:	je     0x140011975
   14001196f:	call   QWORD PTR [rip+0x1f76b]        # 0x1400310e0
   140011975:	mov    rcx,QWORD PTR [rbx+0x10]
   140011979:	test   rcx,rcx
   14001197c:	je     0x140011986
   14001197e:	mov    edx,edi
   140011980:	call   QWORD PTR [rip+0x1f75a]        # 0x1400310e0
   140011986:	mov    rbx,QWORD PTR [rsp+0x30]
   14001198b:	add    rsp,0x20
   14001198f:	pop    rdi
   140011990:	ret    
   140011991:	int3   
   140011992:	int3   
   140011993:	int3   
   140011994:	mov    rcx,QWORD PTR [rcx+0x8]
   140011998:	rex.W jmp QWORD PTR [rip+0x1f769]        # 0x140031108
   14001199f:	int3   
   1400119a0:	lea    rax,[rip+0x22471]        # 0x140033e18
   1400119a7:	ret    
   1400119a8:	lea    rax,[rip+0x22499]        # 0x140033e48
   1400119af:	ret    
   1400119b0:	lea    rax,[rip+0x224c1]        # 0x140033e78
   1400119b7:	ret    
   1400119b8:	lea    rax,[rip+0x224e9]        # 0x140033ea8
   1400119bf:	ret    
   1400119c0:	sub    rsp,0x28
   1400119c4:	lea    rax,[rip+0x33565]        # 0x140044f30
   1400119cb:	lea    rdx,[rip+0x2b5ce]        # 0x14003cfa0
   1400119d2:	lea    rcx,[rsp+0x30]
   1400119d7:	mov    QWORD PTR [rsp+0x30],rax
   1400119dc:	call   0x14001b070
   1400119e1:	int3   
   1400119e2:	int3   
   1400119e3:	int3   
   1400119e4:	lea    rax,[rip+0x2258d]        # 0x140033f78
   1400119eb:	mov    QWORD PTR [rcx],rax
   1400119ee:	xor    eax,eax
   1400119f0:	mov    QWORD PTR [rcx+0x8],rax
   1400119f4:	mov    QWORD PTR [rcx+0x10],rax
   1400119f8:	mov    DWORD PTR [rcx+0x18],eax
   1400119fb:	mov    rax,rcx
   1400119fe:	ret    
   1400119ff:	int3   
   140011a00:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a04:	rex.W jmp QWORD PTR [rip+0x1f6bd]        # 0x1400310c8
   140011a0b:	int3   
   140011a0c:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a10:	rex.W jmp QWORD PTR [rip+0x1f6a9]        # 0x1400310c0
   140011a17:	int3   
   140011a18:	sub    rsp,0x38
   140011a1c:	mov    eax,DWORD PTR [rsp+0x60]
   140011a20:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a24:	mov    DWORD PTR [rsp+0x20],eax
   140011a28:	call   QWORD PTR [rip+0x1f68a]        # 0x1400310b8
   140011a2e:	add    rsp,0x38
   140011a32:	ret    
   140011a33:	int3   
   140011a34:	sub    rsp,0x48
   140011a38:	mov    rax,QWORD PTR [rsp+0x88]
   140011a40:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a44:	mov    QWORD PTR [rsp+0x38],rax
   140011a49:	mov    eax,DWORD PTR [rsp+0x80]
   140011a50:	mov    DWORD PTR [rsp+0x30],eax
   140011a54:	mov    rax,QWORD PTR [rsp+0x78]
   140011a59:	mov    QWORD PTR [rsp+0x28],rax
   140011a5e:	mov    rax,QWORD PTR [rsp+0x70]
   140011a63:	mov    QWORD PTR [rsp+0x20],rax
   140011a68:	call   QWORD PTR [rip+0x1f642]        # 0x1400310b0
   140011a6e:	add    rsp,0x48
   140011a72:	ret    
   140011a73:	int3   
   140011a74:	rex push rbx
   140011a76:	sub    rsp,0x40
   140011a7a:	mov    eax,DWORD PTR [rsp+0x90]
   140011a81:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a85:	mov    r10d,r9d
   140011a88:	mov    r9,QWORD PTR [rsp+0x70]
   140011a8d:	mov    DWORD PTR [rsp+0x38],eax
   140011a91:	mov    rax,QWORD PTR [rsp+0x88]
   140011a99:	mov    QWORD PTR [rsp+0x30],rax
   140011a9e:	mov    eax,DWORD PTR [rsp+0x80]
   140011aa5:	mov    r11d,r8d
   140011aa8:	mov    DWORD PTR [rsp+0x28],eax
   140011aac:	mov    eax,DWORD PTR [rsp+0x78]
   140011ab0:	mov    rbx,rdx
   140011ab3:	mov    r8d,r10d
   140011ab6:	mov    edx,r11d
   140011ab9:	mov    DWORD PTR [rsp+0x20],eax
   140011abd:	call   QWORD PTR [rip+0x1faad]        # 0x140031570
   140011ac3:	movsx  ecx,ax
   140011ac6:	shr    eax,0x10
   140011ac9:	cwde   
   140011aca:	mov    DWORD PTR [rbx],ecx
   140011acc:	mov    DWORD PTR [rbx+0x4],eax
   140011acf:	mov    rax,rbx
   140011ad2:	add    rsp,0x40
   140011ad6:	pop    rbx
   140011ad7:	ret    
   140011ad8:	sub    rsp,0x38
   140011adc:	mov    eax,DWORD PTR [rsp+0x60]
   140011ae0:	mov    rcx,QWORD PTR [rcx+0x8]
   140011ae4:	mov    DWORD PTR [rsp+0x20],eax
   140011ae8:	call   QWORD PTR [rip+0x1fa7a]        # 0x140031568
   140011aee:	add    rsp,0x38
   140011af2:	ret    
   140011af3:	int3   
   140011af4:	sub    rsp,0x38
   140011af8:	mov    rax,QWORD PTR [rsp+0x68]
   140011afd:	mov    rcx,QWORD PTR [rcx+0x8]
   140011b01:	mov    QWORD PTR [rsp+0x28],rax
   140011b06:	mov    eax,DWORD PTR [rsp+0x60]
   140011b0a:	mov    DWORD PTR [rsp+0x20],eax
   140011b0e:	call   QWORD PTR [rip+0x1fa4c]        # 0x140031560
   140011b14:	add    rsp,0x38
   140011b18:	ret    
   140011b19:	int3   
   140011b1a:	int3   
   140011b1b:	int3   
   140011b1c:	sub    rsp,0x58
   140011b20:	mov    rax,rdx
   140011b23:	xor    edx,edx
   140011b25:	cmp    rax,rdx
   140011b28:	je     0x140011b2e
   140011b2a:	mov    rdx,QWORD PTR [rax+0x8]
   140011b2e:	mov    eax,DWORD PTR [rsp+0xa0]
   140011b35:	mov    rcx,QWORD PTR [rcx+0x8]
   140011b39:	mov    DWORD PTR [rsp+0x40],eax
   140011b3d:	mov    eax,DWORD PTR [rsp+0x98]
   140011b44:	mov    DWORD PTR [rsp+0x38],eax
   140011b48:	mov    eax,DWORD PTR [rsp+0x90]
   140011b4f:	mov    DWORD PTR [rsp+0x30],eax
   140011b53:	mov    eax,DWORD PTR [rsp+0x88]
   140011b5a:	mov    DWORD PTR [rsp+0x28],eax
   140011b5e:	mov    eax,DWORD PTR [rsp+0x80]
   140011b65:	mov    DWORD PTR [rsp+0x20],eax
   140011b69:	call   QWORD PTR [rip+0x1f9e9]        # 0x140031558
   140011b6f:	add    rsp,0x58
   140011b73:	ret    
   140011b74:	sub    rsp,0x38
   140011b78:	mov    rax,QWORD PTR [rsp+0x60]
   140011b7d:	mov    rcx,QWORD PTR [rcx+0x8]
   140011b81:	mov    QWORD PTR [rsp+0x20],rax
   140011b86:	call   QWORD PTR [rip+0x1f51c]        # 0x1400310a8
   140011b8c:	add    rsp,0x38
   140011b90:	ret    
   140011b91:	int3   
   140011b92:	int3   
   140011b93:	int3   
   140011b94:	mov    QWORD PTR [rsp+0x8],rbx
   140011b99:	mov    QWORD PTR [rsp+0x10],rbp
   140011b9e:	mov    QWORD PTR [rsp+0x18],rsi
   140011ba3:	push   rdi
   140011ba4:	sub    rsp,0x20
   140011ba8:	mov    rdi,rcx
   140011bab:	mov    rcx,QWORD PTR [rcx+0x8]
   140011baf:	mov    esi,r9d
   140011bb2:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011bb6:	mov    ebp,r8d
   140011bb9:	mov    rbx,rdx
   140011bbc:	je     0x140011bcc
   140011bbe:	mov    r9,rdx
   140011bc1:	mov    r8d,esi
   140011bc4:	mov    edx,ebp
   140011bc6:	call   QWORD PTR [rip+0x1f4cc]        # 0x140031098
   140011bcc:	mov    rcx,QWORD PTR [rdi+0x10]
   140011bd0:	test   rcx,rcx
   140011bd3:	je     0x140011be3
   140011bd5:	mov    r9,rbx
   140011bd8:	mov    r8d,esi
   140011bdb:	mov    edx,ebp
   140011bdd:	call   QWORD PTR [rip+0x1f4b5]        # 0x140031098
   140011be3:	mov    rbp,QWORD PTR [rsp+0x38]
   140011be8:	mov    rsi,QWORD PTR [rsp+0x40]
   140011bed:	mov    rax,rbx
   140011bf0:	mov    rbx,QWORD PTR [rsp+0x30]
   140011bf5:	add    rsp,0x20
   140011bf9:	pop    rdi
   140011bfa:	ret    
   140011bfb:	int3   
   140011bfc:	mov    QWORD PTR [rsp+0x8],rbx
   140011c01:	mov    QWORD PTR [rsp+0x10],rbp
   140011c06:	mov    QWORD PTR [rsp+0x18],rsi
   140011c0b:	push   rdi
   140011c0c:	sub    rsp,0x20
   140011c10:	mov    rdi,rcx
   140011c13:	mov    rcx,QWORD PTR [rcx+0x8]
   140011c17:	mov    esi,r9d
   140011c1a:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011c1e:	mov    ebp,r8d
   140011c21:	mov    rbx,rdx
   140011c24:	je     0x140011c34
   140011c26:	mov    r9,rdx
   140011c29:	mov    r8d,esi
   140011c2c:	mov    edx,ebp
   140011c2e:	call   QWORD PTR [rip+0x1f45c]        # 0x140031090
   140011c34:	mov    rcx,QWORD PTR [rdi+0x10]
   140011c38:	test   rcx,rcx
   140011c3b:	je     0x140011c4b
   140011c3d:	mov    r9,rbx
   140011c40:	mov    r8d,esi
   140011c43:	mov    edx,ebp
   140011c45:	call   QWORD PTR [rip+0x1f445]        # 0x140031090
   140011c4b:	mov    rbp,QWORD PTR [rsp+0x38]
   140011c50:	mov    rsi,QWORD PTR [rsp+0x40]
   140011c55:	mov    rax,rbx
   140011c58:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c5d:	add    rsp,0x20
   140011c61:	pop    rdi
   140011c62:	ret    
   140011c63:	int3   
   140011c64:	mov    QWORD PTR [rsp+0x8],rbx
   140011c69:	mov    QWORD PTR [rsp+0x10],rbp
   140011c6e:	mov    QWORD PTR [rsp+0x18],rsi
   140011c73:	push   rdi
   140011c74:	sub    rsp,0x20
   140011c78:	mov    rdi,rcx
   140011c7b:	mov    rcx,QWORD PTR [rcx+0x8]
   140011c7f:	mov    esi,r9d
   140011c82:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011c86:	mov    ebp,r8d
   140011c89:	mov    rbx,rdx
   140011c8c:	je     0x140011c9c
   140011c8e:	mov    r9,rdx
   140011c91:	mov    r8d,esi
   140011c94:	mov    edx,ebp
   140011c96:	call   QWORD PTR [rip+0x1f3ec]        # 0x140031088
   140011c9c:	mov    rcx,QWORD PTR [rdi+0x10]
   140011ca0:	test   rcx,rcx
   140011ca3:	je     0x140011cb3
   140011ca5:	mov    r9,rbx
   140011ca8:	mov    r8d,esi
   140011cab:	mov    edx,ebp
   140011cad:	call   QWORD PTR [rip+0x1f3d5]        # 0x140031088
   140011cb3:	mov    rbp,QWORD PTR [rsp+0x38]
   140011cb8:	mov    rsi,QWORD PTR [rsp+0x40]
   140011cbd:	mov    rax,rbx
   140011cc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140011cc5:	add    rsp,0x20
   140011cc9:	pop    rdi
   140011cca:	ret    
   140011ccb:	int3   
   140011ccc:	mov    rax,rsp
   140011ccf:	mov    QWORD PTR [rax+0x8],rbx
   140011cd3:	mov    QWORD PTR [rax+0x10],rbp
   140011cd7:	mov    QWORD PTR [rax+0x18],rsi
   140011cdb:	mov    QWORD PTR [rax+0x20],rdi
   140011cdf:	push   r12
   140011ce1:	sub    rsp,0x30
   140011ce5:	mov    r12d,DWORD PTR [rsp+0x68]
   140011cea:	mov    rdi,rcx
   140011ced:	mov    rcx,QWORD PTR [rcx+0x8]
   140011cf1:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011cf5:	mov    esi,r9d
   140011cf8:	mov    ebp,r8d
   140011cfb:	mov    rbx,rdx
   140011cfe:	je     0x140011d18
   140011d00:	mov    r9d,DWORD PTR [rsp+0x60]
   140011d05:	mov    QWORD PTR [rax-0x10],rdx
   140011d09:	mov    r8d,esi
   140011d0c:	mov    edx,ebp
   140011d0e:	mov    DWORD PTR [rax-0x18],r12d
   140011d12:	call   QWORD PTR [rip+0x1f368]        # 0x140031080
   140011d18:	mov    rcx,QWORD PTR [rdi+0x10]
   140011d1c:	test   rcx,rcx
   140011d1f:	je     0x140011d3b
   140011d21:	mov    r9d,DWORD PTR [rsp+0x60]
   140011d26:	mov    r8d,esi
   140011d29:	mov    edx,ebp
   140011d2b:	mov    QWORD PTR [rsp+0x28],rbx
   140011d30:	mov    DWORD PTR [rsp+0x20],r12d
   140011d35:	call   QWORD PTR [rip+0x1f345]        # 0x140031080
   140011d3b:	mov    rbp,QWORD PTR [rsp+0x48]
   140011d40:	mov    rsi,QWORD PTR [rsp+0x50]
   140011d45:	mov    rdi,QWORD PTR [rsp+0x58]
   140011d4a:	mov    rax,rbx
   140011d4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140011d52:	add    rsp,0x30
   140011d56:	pop    r12
   140011d58:	ret    
   140011d59:	int3   
   140011d5a:	int3   
   140011d5b:	int3   
   140011d5c:	mov    QWORD PTR [rsp+0x8],rbx
   140011d61:	mov    QWORD PTR [rsp+0x10],rbp
   140011d66:	mov    QWORD PTR [rsp+0x18],rsi
   140011d6b:	push   rdi
   140011d6c:	sub    rsp,0x20
   140011d70:	mov    rdi,rcx
   140011d73:	mov    rcx,QWORD PTR [rcx+0x8]
   140011d77:	mov    esi,r9d
   140011d7a:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011d7e:	mov    ebp,r8d
   140011d81:	mov    rbx,rdx
   140011d84:	je     0x140011d94
   140011d86:	mov    r9,rdx
   140011d89:	mov    r8d,esi
   140011d8c:	mov    edx,ebp
   140011d8e:	call   QWORD PTR [rip+0x1f2e4]        # 0x140031078
   140011d94:	mov    rcx,QWORD PTR [rdi+0x10]
   140011d98:	test   rcx,rcx
   140011d9b:	je     0x140011dab
   140011d9d:	mov    r9,rbx
   140011da0:	mov    r8d,esi
   140011da3:	mov    edx,ebp
   140011da5:	call   QWORD PTR [rip+0x1f2cd]        # 0x140031078
   140011dab:	mov    rbp,QWORD PTR [rsp+0x38]
   140011db0:	mov    rsi,QWORD PTR [rsp+0x40]
   140011db5:	mov    rax,rbx
   140011db8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011dbd:	add    rsp,0x20
   140011dc1:	pop    rdi
   140011dc2:	ret    
   140011dc3:	int3   
   140011dc4:	mov    rax,rsp
   140011dc7:	mov    QWORD PTR [rax+0x8],rbx
   140011dcb:	mov    QWORD PTR [rax+0x10],rbp
   140011dcf:	mov    QWORD PTR [rax+0x18],rsi
   140011dd3:	mov    QWORD PTR [rax+0x20],rdi
   140011dd7:	push   r12
   140011dd9:	sub    rsp,0x30
   140011ddd:	mov    r12d,DWORD PTR [rsp+0x68]
   140011de2:	mov    rdi,rcx
   140011de5:	mov    rcx,QWORD PTR [rcx+0x8]
   140011de9:	cmp    rcx,QWORD PTR [rdi+0x10]
   140011ded:	mov    esi,r9d
   140011df0:	mov    ebp,r8d
   140011df3:	mov    rbx,rdx
   140011df6:	je     0x140011e10
   140011df8:	mov    r9d,DWORD PTR [rsp+0x60]
   140011dfd:	mov    QWORD PTR [rax-0x10],rdx
   140011e01:	mov    r8d,esi
   140011e04:	mov    edx,ebp
   140011e06:	mov    DWORD PTR [rax-0x18],r12d
   140011e0a:	call   QWORD PTR [rip+0x1f260]        # 0x140031070
   140011e10:	mov    rcx,QWORD PTR [rdi+0x10]
   140011e14:	test   rcx,rcx
   140011e17:	je     0x140011e33
   140011e19:	mov    r9d,DWORD PTR [rsp+0x60]
   140011e1e:	mov    r8d,esi
   140011e21:	mov    edx,ebp
   140011e23:	mov    QWORD PTR [rsp+0x28],rbx
   140011e28:	mov    DWORD PTR [rsp+0x20],r12d
   140011e2d:	call   QWORD PTR [rip+0x1f23d]        # 0x140031070
   140011e33:	mov    rbp,QWORD PTR [rsp+0x48]
   140011e38:	mov    rsi,QWORD PTR [rsp+0x50]
   140011e3d:	mov    rdi,QWORD PTR [rsp+0x58]
   140011e42:	mov    rax,rbx
   140011e45:	mov    rbx,QWORD PTR [rsp+0x40]
   140011e4a:	add    rsp,0x30
   140011e4e:	pop    r12
   140011e50:	ret    
   140011e51:	int3   
   140011e52:	int3   
   140011e53:	int3   
   140011e54:	sub    rsp,0x28
   140011e58:	mov    ecx,0x20
   140011e5d:	call   0x140006114
   140011e62:	xor    edx,edx
   140011e64:	cmp    rax,rdx
   140011e67:	je     0x140011e80
   140011e69:	lea    rcx,[rip+0x22108]        # 0x140033f78
   140011e70:	mov    QWORD PTR [rax+0x8],rdx
   140011e74:	mov    QWORD PTR [rax+0x10],rdx
   140011e78:	mov    QWORD PTR [rax],rcx
   140011e7b:	mov    DWORD PTR [rax+0x18],edx
   140011e7e:	jmp    0x140011e83
   140011e80:	mov    rax,rdx
   140011e83:	add    rsp,0x28
   140011e87:	ret    
   140011e88:	sub    rsp,0x28
   140011e8c:	mov    ecx,0x10
   140011e91:	call   0x140006114
   140011e96:	test   rax,rax
   140011e99:	je     0x140011eac
   140011e9b:	and    QWORD PTR [rax+0x8],0x0
   140011ea0:	lea    rcx,[rip+0x220a9]        # 0x140033f50
   140011ea7:	mov    QWORD PTR [rax],rcx
   140011eaa:	jmp    0x140011eae
   140011eac:	xor    eax,eax
   140011eae:	add    rsp,0x28
   140011eb2:	ret    
   140011eb3:	int3   
   140011eb4:	xor    edx,edx
   140011eb6:	cmp    rcx,rdx
   140011eb9:	je     0x140011ed0
   140011ebb:	lea    rax,[rip+0x220b6]        # 0x140033f78
   140011ec2:	mov    QWORD PTR [rcx+0x8],rdx
   140011ec6:	mov    QWORD PTR [rcx+0x10],rdx
   140011eca:	mov    QWORD PTR [rcx],rax
   140011ecd:	mov    DWORD PTR [rcx+0x18],edx
   140011ed0:	ret    
   140011ed1:	int3   
   140011ed2:	int3   
   140011ed3:	int3   
   140011ed4:	test   rcx,rcx
   140011ed7:	je     0x140011ee8
   140011ed9:	and    QWORD PTR [rcx+0x8],0x0
   140011ede:	lea    rax,[rip+0x2206b]        # 0x140033f50
   140011ee5:	mov    QWORD PTR [rcx],rax
   140011ee8:	ret    
   140011ee9:	int3   
   140011eea:	int3   
   140011eeb:	int3   
   140011eec:	rex push rbx
   140011eee:	sub    rsp,0x20
   140011ef2:	test   dl,0x1
   140011ef5:	lea    rax,[rip+0x21fe4]        # 0x140033ee0
   140011efc:	mov    rbx,rcx
   140011eff:	mov    QWORD PTR [rcx],rax
   140011f02:	je     0x140011f09
   140011f04:	call   0x140006160
   140011f09:	mov    rax,rbx
   140011f0c:	add    rsp,0x20
   140011f10:	pop    rbx
   140011f11:	ret    
   140011f12:	int3   
   140011f13:	int3   
   140011f14:	rex push rbx
   140011f16:	sub    rsp,0x20
   140011f1a:	test   dl,0x1
   140011f1d:	lea    rax,[rip+0x21ff4]        # 0x140033f18
   140011f24:	mov    rbx,rcx
   140011f27:	mov    QWORD PTR [rcx],rax
   140011f2a:	je     0x140011f31
   140011f2c:	call   0x140006160
   140011f31:	mov    rax,rbx
   140011f34:	add    rsp,0x20
   140011f38:	pop    rbx
   140011f39:	ret    
   140011f3a:	int3   
   140011f3b:	int3   
   140011f3c:	rex push rdi
   140011f3e:	sub    rsp,0x40
   140011f42:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140011f4b:	mov    QWORD PTR [rsp+0x50],rbx
   140011f50:	mov    QWORD PTR [rsp+0x60],rsi
   140011f55:	mov    esi,ecx
   140011f57:	call   0x140013220
   140011f5c:	mov    rdi,rax
   140011f5f:	xor    ebx,ebx
   140011f61:	cmp    QWORD PTR [rax+0x38],rbx
   140011f65:	jne    0x140011fcb
   140011f67:	cmp    esi,ebx
   140011f69:	je     0x140011fcb
   140011f6b:	lea    rcx,[rip+0x3cbe]        # 0x140015c30
   140011f72:	call   0x140006104
   140011f77:	mov    rsi,rax
   140011f7a:	mov    ecx,0xb8
   140011f7f:	call   0x140006114
   140011f84:	mov    QWORD PTR [rsp+0x58],rax
   140011f89:	cmp    rax,rbx
   140011f8c:	je     0x140011fbf
   140011f8e:	mov    DWORD PTR [rsp+0x28],0x2
   140011f96:	mov    QWORD PTR [rsp+0x20],0x8
   140011f9f:	lea    r9,[rip+0x54b6]        # 0x14001745c
   140011fa6:	lea    r8,[rip+0xffffffffffffff07]        # 0x140011eb4
   140011fad:	lea    rdx,[rip+0x21ec4]        # 0x140033e78
   140011fb4:	mov    rcx,rax
   140011fb7:	call   0x140016f34
   140011fbc:	mov    rbx,rax
   140011fbf:	mov    QWORD PTR [rdi+0x38],rbx
   140011fc3:	mov    rcx,rsi
   140011fc6:	call   0x140006104
   140011fcb:	mov    rax,QWORD PTR [rdi+0x38]
   140011fcf:	mov    rbx,QWORD PTR [rsp+0x50]
   140011fd4:	mov    rsi,QWORD PTR [rsp+0x60]
   140011fd9:	add    rsp,0x40
   140011fdd:	pop    rdi
   140011fde:	ret    
   140011fdf:	int3   
   140011fe0:	int3   
   140011fe1:	int3   
   140011fe2:	int3   
   140011fe3:	int3   
   140011fe4:	int3   
   140011fe5:	int3   
   140011fe6:	int3   
   140011fe7:	int3   
   140011fe8:	int3   
   140011fe9:	int3   
   140011fea:	int3   
   140011feb:	int3   
   140011fec:	rex push rbp
   140011fee:	sub    rsp,0x20
   140011ff2:	mov    rbp,rdx
   140011ff5:	mov    rcx,QWORD PTR [rbp+0x58]
   140011ff9:	call   0x140006160
   140011ffe:	add    rsp,0x20
   140012002:	pop    rbp
   140012003:	ret    
   140012004:	rex push rbx
   140012006:	sub    rsp,0x20
   14001200a:	mov    rbx,rcx
   14001200d:	mov    ecx,0x1
   140012012:	call   0x140011f3c
   140012017:	mov    rdx,rbx
   14001201a:	mov    rcx,rax
   14001201d:	add    rsp,0x20
   140012021:	pop    rbx
   140012022:	jmp    0x140017070
   140012027:	int3   
   140012028:	mov    QWORD PTR [rsp+0x8],rbx
   14001202d:	push   rdi
   14001202e:	sub    rsp,0x20
   140012032:	mov    rdi,QWORD PTR [rcx+0x8]
   140012036:	mov    rbx,rcx
   140012039:	test   rdi,rdi
   14001203c:	je     0x140012059
   14001203e:	call   0x140013220
   140012043:	mov    rcx,QWORD PTR [rax+0x38]
   140012047:	test   rcx,rcx
   14001204a:	je     0x140012059
   14001204c:	mov    rdx,QWORD PTR [rbx+0x8]
   140012050:	add    rcx,0x30
   140012054:	call   0x1400177d0
   140012059:	mov    rdx,QWORD PTR [rbx]
   14001205c:	mov    rcx,rbx
   14001205f:	call   QWORD PTR [rdx+0x28]
   140012062:	and    QWORD PTR [rbx+0x8],0x0
   140012067:	mov    rbx,QWORD PTR [rsp+0x30]
   14001206c:	mov    rax,rdi
   14001206f:	add    rsp,0x20
   140012073:	pop    rdi
   140012074:	ret    
   140012075:	int3   
   140012076:	int3   
   140012077:	int3   
   140012078:	sub    rsp,0x28
   14001207c:	cmp    QWORD PTR [rcx+0x8],0x0
   140012081:	lea    rax,[rip+0x21ef0]        # 0x140033f78
   140012088:	mov    QWORD PTR [rcx],rax
   14001208b:	je     0x14001209b
   14001208d:	call   0x140012028
   140012092:	mov    rcx,rax
   140012095:	call   QWORD PTR [rip+0x1efc5]        # 0x140031060
   14001209b:	add    rsp,0x28
   14001209f:	ret    
   1400120a0:	rex push rdi
   1400120a2:	sub    rsp,0x40
   1400120a6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400120af:	mov    QWORD PTR [rsp+0x50],rbx
   1400120b4:	mov    QWORD PTR [rsp+0x60],rsi
   1400120b9:	mov    esi,ecx
   1400120bb:	call   0x140013220
   1400120c0:	mov    rdi,rax
   1400120c3:	xor    ebx,ebx
   1400120c5:	cmp    QWORD PTR [rax+0x40],rbx
   1400120c9:	jne    0x14001212f
   1400120cb:	cmp    esi,ebx
   1400120cd:	je     0x14001212f
   1400120cf:	lea    rcx,[rip+0x3b5a]        # 0x140015c30
   1400120d6:	call   0x140006104
   1400120db:	mov    rsi,rax
   1400120de:	mov    ecx,0xb8
   1400120e3:	call   0x140006114
   1400120e8:	mov    QWORD PTR [rsp+0x58],rax
   1400120ed:	cmp    rax,rbx
   1400120f0:	je     0x140012123
   1400120f2:	mov    DWORD PTR [rsp+0x28],0x1
   1400120fa:	mov    QWORD PTR [rsp+0x20],0x8
   140012103:	lea    r9,[rip+0x5352]        # 0x14001745c
   14001210a:	lea    r8,[rip+0xfffffffffffffdc3]        # 0x140011ed4
   140012111:	lea    rdx,[rip+0x21d90]        # 0x140033ea8
   140012118:	mov    rcx,rax
   14001211b:	call   0x140016f34
   140012120:	mov    rbx,rax
   140012123:	mov    QWORD PTR [rdi+0x40],rbx
   140012127:	mov    rcx,rsi
   14001212a:	call   0x140006104
   14001212f:	mov    rax,QWORD PTR [rdi+0x40]
   140012133:	mov    rbx,QWORD PTR [rsp+0x50]
   140012138:	mov    rsi,QWORD PTR [rsp+0x60]
   14001213d:	add    rsp,0x40
   140012141:	pop    rdi
   140012142:	ret    
   140012143:	int3   
   140012144:	int3   
   140012145:	int3   
   140012146:	int3   
   140012147:	int3   
   140012148:	int3   
   140012149:	int3   
   14001214a:	int3   
   14001214b:	int3   
   14001214c:	int3   
   14001214d:	int3   
   14001214e:	int3   
   14001214f:	int3   
   140012150:	rex push rbp
   140012152:	sub    rsp,0x20
   140012156:	mov    rbp,rdx
   140012159:	mov    rcx,QWORD PTR [rbp+0x58]
   14001215d:	call   0x140006160
   140012162:	add    rsp,0x20
   140012166:	pop    rbp
   140012167:	ret    
   140012168:	rex push rbx
   14001216a:	sub    rsp,0x20
   14001216e:	mov    rbx,rcx
   140012171:	mov    ecx,0x1
   140012176:	call   0x1400120a0
   14001217b:	mov    rdx,rbx
   14001217e:	mov    rcx,rax
   140012181:	add    rsp,0x20
   140012185:	pop    rbx
   140012186:	jmp    0x140017070
   14001218b:	int3   
   14001218c:	mov    QWORD PTR [rsp+0x8],rbx
   140012191:	push   rdi
   140012192:	sub    rsp,0x20
   140012196:	mov    rdi,QWORD PTR [rcx+0x8]
   14001219a:	mov    rbx,rcx
   14001219d:	test   rdi,rdi
   1400121a0:	je     0x1400121bd
   1400121a2:	call   0x140013220
   1400121a7:	mov    rcx,QWORD PTR [rax+0x40]
   1400121ab:	test   rcx,rcx
   1400121ae:	je     0x1400121bd
   1400121b0:	mov    rdx,QWORD PTR [rbx+0x8]
   1400121b4:	add    rcx,0x30
   1400121b8:	call   0x1400177d0
   1400121bd:	and    QWORD PTR [rbx+0x8],0x0
   1400121c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400121c7:	mov    rax,rdi
   1400121ca:	add    rsp,0x20
   1400121ce:	pop    rdi
   1400121cf:	ret    
   1400121d0:	sub    rsp,0x28
   1400121d4:	cmp    QWORD PTR [rcx+0x8],0x0
   1400121d9:	jne    0x1400121df
   1400121db:	xor    eax,eax
   1400121dd:	jmp    0x1400121ed
   1400121df:	call   0x14001218c
   1400121e4:	mov    rcx,rax
   1400121e7:	call   QWORD PTR [rip+0x1eeeb]        # 0x1400310d8
   1400121ed:	add    rsp,0x28
   1400121f1:	ret    
   1400121f2:	int3   
   1400121f3:	int3   
   1400121f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400121f9:	push   rdi
   1400121fa:	sub    rsp,0x20
   1400121fe:	mov    ebx,edx
   140012200:	mov    rdi,rcx
   140012203:	call   0x140012078
   140012208:	test   bl,0x1
   14001220b:	je     0x140012215
   14001220d:	mov    rcx,rdi
   140012210:	call   0x140006160
   140012215:	mov    rax,rdi
   140012218:	mov    rbx,QWORD PTR [rsp+0x30]
   14001221d:	add    rsp,0x20
   140012221:	pop    rdi
   140012222:	ret    
   140012223:	int3   
   140012224:	mov    QWORD PTR [rsp+0x8],rbx
   140012229:	push   rdi
   14001222a:	sub    rsp,0x20
   14001222e:	mov    rdi,rcx
   140012231:	mov    ecx,edx
   140012233:	call   QWORD PTR [rip+0x1ee2f]        # 0x140031068
   140012239:	mov    rcx,QWORD PTR [rdi+0x8]
   14001223d:	mov    rbx,rax
   140012240:	xor    eax,eax
   140012242:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012246:	je     0x140012251
   140012248:	mov    rdx,rbx
   14001224b:	call   QWORD PTR [rip+0x1ee4f]        # 0x1400310a0
   140012251:	mov    rcx,QWORD PTR [rdi+0x10]
   140012255:	test   rcx,rcx
   140012258:	je     0x140012263
   14001225a:	mov    rdx,rbx
   14001225d:	call   QWORD PTR [rip+0x1ee3d]        # 0x1400310a0
   140012263:	mov    rcx,rax
   140012266:	mov    rbx,QWORD PTR [rsp+0x30]
   14001226b:	add    rsp,0x20
   14001226f:	pop    rdi
   140012270:	jmp    0x140012168
   140012275:	int3   
   140012276:	int3   
   140012277:	int3   
   140012278:	mov    QWORD PTR [rsp+0x8],rbx
   14001227d:	mov    QWORD PTR [rsp+0x10],rsi
   140012282:	push   rdi
   140012283:	sub    rsp,0x20
   140012287:	mov    rsi,rcx
   14001228a:	mov    rcx,QWORD PTR [rcx+0x8]
   14001228e:	xor    ebx,ebx
   140012290:	cmp    rcx,QWORD PTR [rsi+0x10]
   140012294:	mov    rdi,rdx
   140012297:	mov    rax,rbx
   14001229a:	je     0x1400122b0
   14001229c:	cmp    rdx,rbx
   14001229f:	jne    0x1400122a6
   1400122a1:	mov    rdx,rbx
   1400122a4:	jmp    0x1400122aa
   1400122a6:	mov    rdx,QWORD PTR [rdx+0x8]
   1400122aa:	call   QWORD PTR [rip+0x1edf0]        # 0x1400310a0
   1400122b0:	mov    rcx,QWORD PTR [rsi+0x10]
   1400122b4:	cmp    rcx,rbx
   1400122b7:	je     0x1400122cb
   1400122b9:	cmp    rdi,rbx
   1400122bc:	je     0x1400122c2
   1400122be:	mov    rbx,QWORD PTR [rdi+0x8]
   1400122c2:	mov    rdx,rbx
   1400122c5:	call   QWORD PTR [rip+0x1edd5]        # 0x1400310a0
   1400122cb:	mov    rcx,rax
   1400122ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400122d3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400122d8:	add    rsp,0x20
   1400122dc:	pop    rdi
   1400122dd:	jmp    0x140012168
   1400122e2:	int3   
   1400122e3:	int3   
   1400122e4:	sub    rsp,0x468
   1400122eb:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400122f4:	mov    rax,QWORD PTR [rip+0x2dcd5]        # 0x14003ffd0
   1400122fb:	xor    rax,rsp
   1400122fe:	mov    QWORD PTR [rsp+0x450],rax
   140012306:	lea    rax,[rip+0x21c43]        # 0x140033f50
   14001230d:	mov    QWORD PTR [rcx],rax
   140012310:	call   0x1400121d0
   140012315:	nop
   140012316:	mov    rcx,QWORD PTR [rsp+0x450]
   14001231e:	xor    rcx,rsp
   140012321:	call   0x140019370
   140012326:	add    rsp,0x468
   14001232d:	ret    
   14001232e:	int3   
   14001232f:	int3   
   140012330:	int3   
   140012331:	int3   
   140012332:	int3   
   140012333:	int3   
   140012334:	mov    QWORD PTR [rsp+0x10],rdx
   140012339:	push   rbx
   14001233a:	push   rbp
   14001233b:	sub    rsp,0x38
   14001233f:	mov    rbp,rdx
   140012342:	call   0x14000669c
   140012347:	mov    r11,rax
   14001234a:	xor    ecx,ecx
   14001234c:	test   rax,rax
   14001234f:	setne  cl
   140012352:	test   ecx,ecx
   140012354:	jne    0x140012361
   140012356:	mov    ecx,0x80004005
   14001235b:	call   0x1400015c0
   140012360:	int3   
   140012361:	mov    rax,QWORD PTR [rax]
   140012364:	mov    rcx,r11
   140012367:	call   QWORD PTR [rax+0x18]
   14001236a:	add    rax,0x18
   14001236e:	mov    QWORD PTR [rbp+0x30],rax
   140012372:	mov    rcx,QWORD PTR [rbp+0x38]
   140012376:	mov    rax,QWORD PTR [rcx]
   140012379:	xor    r9d,r9d
   14001237c:	mov    r8d,0x200
   140012382:	lea    rdx,[rbp+0x50]
   140012386:	call   QWORD PTR [rax+0x18]
   140012389:	test   eax,eax
   14001238b:	je     0x1400123be
   14001238d:	lea    rax,[rbp+0x50]
   140012391:	mov    QWORD PTR [rsp+0x28],rax
   140012396:	mov    DWORD PTR [rsp+0x20],0x6d
   14001239e:	lea    r9,[rip+0x21d3b]        # 0x1400340e0
   1400123a5:	lea    r8,[rip+0x2000c]        # 0x1400323b8
   1400123ac:	lea    rdx,[rip+0x1ffe5]        # 0x140032398
   1400123b3:	lea    rcx,[rbp+0x30]
   1400123b7:	call   0x140002e70
   1400123bc:	jmp    0x1400123e4
   1400123be:	mov    DWORD PTR [rsp+0x20],0x6d
   1400123c6:	lea    r9,[rip+0x21d13]        # 0x1400340e0
   1400123cd:	lea    r8,[rip+0x1ffe4]        # 0x1400323b8
   1400123d4:	lea    rdx,[rip+0x1ffa5]        # 0x140032380
   1400123db:	lea    rcx,[rbp+0x30]
   1400123df:	call   0x140002e70
   1400123e4:	xor    r8d,r8d
   1400123e7:	xor    edx,edx
   1400123e9:	mov    rbx,QWORD PTR [rbp+0x30]
   1400123ed:	mov    rcx,rbx
   1400123f0:	call   0x140008508
   1400123f5:	nop
   1400123f6:	lea    rdx,[rbx-0x18]
   1400123fa:	or     eax,0xffffffff
   1400123fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140012402:	add    eax,0xffffffff
   140012405:	test   eax,eax
   140012407:	jg     0x140012412
   140012409:	mov    rcx,QWORD PTR [rdx]
   14001240c:	mov    rax,QWORD PTR [rcx]
   14001240f:	call   QWORD PTR [rax+0x8]
   140012412:	mov    rcx,QWORD PTR [rbp+0x38]
   140012416:	mov    rax,QWORD PTR [rcx]
   140012419:	mov    edx,0x1
   14001241e:	call   QWORD PTR [rax+0x8]
   140012421:	nop
   140012422:	lea    rax,[rip+0xfffffffffffffeed]        # 0x140012316
   140012429:	jmp    0x14001242b
   14001242b:	add    rsp,0x38
   14001242f:	pop    rbp
   140012430:	pop    rbx
   140012431:	ret    
   140012432:	int3   
   140012433:	int3   
   140012434:	rex push rbp
   140012436:	sub    rsp,0x20
   14001243a:	mov    rbp,rdx
   14001243d:	lea    rcx,[rbp+0x30]
   140012441:	call   0x140001dc0
   140012446:	add    rsp,0x20
   14001244a:	pop    rbp
   14001244b:	ret    
   14001244c:	mov    QWORD PTR [rsp+0x8],rbx
   140012451:	push   rdi
   140012452:	sub    rsp,0x20
   140012456:	mov    ebx,edx
   140012458:	mov    rdi,rcx
   14001245b:	call   0x1400122e4
   140012460:	test   bl,0x1
   140012463:	je     0x14001246d
   140012465:	mov    rcx,rdi
   140012468:	call   0x140006160
   14001246d:	mov    rax,rdi
   140012470:	mov    rbx,QWORD PTR [rsp+0x30]
   140012475:	add    rsp,0x20
   140012479:	pop    rdi
   14001247a:	ret    
   14001247b:	int3   
   14001247c:	jmp    0x140014428
   140012481:	int3   
   140012482:	int3   
   140012483:	int3   
   140012484:	sub    rsp,0x28
   140012488:	cmp    QWORD PTR [rip+0x32be0],0x0        # 0x140045070
   140012490:	jne    0x14001251d
   140012496:	lea    rcx,[rip+0x1f93b]        # 0x140031dd8
   14001249d:	call   QWORD PTR [rip+0x1ef4d]        # 0x1400313f0
   1400124a3:	test   rax,rax
   1400124a6:	mov    QWORD PTR [rip+0x32bc3],rax        # 0x140045070
   1400124ad:	jne    0x1400124b5
   1400124af:	call   0x140006408
   1400124b4:	int3   
   1400124b5:	lea    rdx,[rip+0x1f90c]        # 0x140031dc8
   1400124bc:	mov    rcx,rax
   1400124bf:	call   QWORD PTR [rip+0x1ef9b]        # 0x140031460
   1400124c5:	mov    rcx,QWORD PTR [rip+0x32ba4]        # 0x140045070
   1400124cc:	lea    rdx,[rip+0x1f8e5]        # 0x140031db8
   1400124d3:	mov    QWORD PTR [rip+0x32b76],rax        # 0x140045050
   1400124da:	call   QWORD PTR [rip+0x1ef80]        # 0x140031460
   1400124e0:	mov    rcx,QWORD PTR [rip+0x32b89]        # 0x140045070
   1400124e7:	lea    rdx,[rip+0x1f8ba]        # 0x140031da8
   1400124ee:	mov    QWORD PTR [rip+0x32b63],rax        # 0x140045058
   1400124f5:	call   QWORD PTR [rip+0x1ef65]        # 0x140031460
   1400124fb:	mov    rcx,QWORD PTR [rip+0x32b6e]        # 0x140045070
   140012502:	lea    rdx,[rip+0x1f887]        # 0x140031d90
   140012509:	mov    QWORD PTR [rip+0x32b50],rax        # 0x140045060
   140012510:	call   QWORD PTR [rip+0x1ef4a]        # 0x140031460
   140012516:	mov    QWORD PTR [rip+0x32b4b],rax        # 0x140045068
   14001251d:	add    rsp,0x28
   140012521:	ret    
   140012522:	int3   
   140012523:	int3   
   140012524:	sub    rsp,0x28
   140012528:	mov    r8,QWORD PTR [rip+0x32b39]        # 0x140045068
   14001252f:	xor    eax,eax
   140012531:	cmp    r8,rax
   140012534:	je     0x140012539
   140012536:	call   r8
   140012539:	add    rsp,0x28
   14001253d:	ret    
   14001253e:	int3   
   14001253f:	int3   
   140012540:	rex push rbx
   140012542:	sub    rsp,0x20
   140012546:	xor    ebx,ebx
   140012548:	cmp    rdx,rbx
   14001254b:	jne    0x140012553
   14001254d:	call   0x140006408
   140012552:	int3   
   140012553:	mov    rax,QWORD PTR [rip+0x32b06]        # 0x140045060
   14001255a:	cmp    rax,rbx
   14001255d:	je     0x140012568
   14001255f:	call   rax
   140012561:	cmp    eax,ebx
   140012563:	setne  bl
   140012566:	jmp    0x14001256d
   140012568:	mov    ebx,0x2
   14001256d:	mov    eax,ebx
   14001256f:	add    rsp,0x20
   140012573:	pop    rbx
   140012574:	ret    
   140012575:	int3   
   140012576:	int3   
   140012577:	int3   
   140012578:	mov    QWORD PTR [rsp+0x10],rbx
   14001257d:	push   rdi
   14001257e:	sub    rsp,0x280
   140012585:	mov    rax,QWORD PTR [rip+0x2da44]        # 0x14003ffd0
   14001258c:	xor    rax,rsp
   14001258f:	mov    QWORD PTR [rsp+0x270],rax
   140012597:	mov    rbx,rcx
   14001259a:	call   0x140012484
   14001259f:	mov    rdi,QWORD PTR [rbx+0x10]
   1400125a3:	and    WORD PTR [rsp+0x26a],0x0
   1400125ac:	and    WORD PTR [rsp+0x268],0x0
   1400125b5:	lea    rdx,[rsp+0x60]
   1400125ba:	mov    rcx,rdi
   1400125bd:	mov    r8d,0x105
   1400125c3:	call   QWORD PTR [rip+0x1ee07]        # 0x1400313d0
   1400125c9:	test   eax,eax
   1400125cb:	je     0x1400126a2
   1400125d1:	cmp    WORD PTR [rsp+0x268],0x0
   1400125da:	je     0x1400125ec
   1400125dc:	mov    ecx,0x6f
   1400125e1:	call   QWORD PTR [rip+0x1ee19]        # 0x140031400
   1400125e7:	jmp    0x1400126a2
   1400125ec:	lea    rax,[rsp+0x60]
   1400125f1:	mov    QWORD PTR [rsp+0x50],rdi
   1400125f6:	or     rdi,0xffffffffffffffff
   1400125fa:	mov    QWORD PTR [rsp+0x28],rax
   1400125ff:	mov    rax,QWORD PTR [rip+0x32a4a]        # 0x140045050
   140012606:	mov    DWORD PTR [rsp+0x20],0x38
   14001260e:	test   rax,rax
   140012611:	mov    DWORD PTR [rsp+0x24],0x88
   140012619:	mov    QWORD PTR [rsp+0x40],0x2
   140012622:	je     0x14001262d
   140012624:	lea    rcx,[rsp+0x20]
   140012629:	call   rax
   14001262b:	jmp    0x140012630
   14001262d:	mov    rax,rdi
   140012630:	cmp    rax,rdi
   140012633:	mov    QWORD PTR [rbx+0xd8],rax
   14001263a:	jne    0x140012664
   14001263c:	mov    rax,QWORD PTR [rip+0x32a0d]        # 0x140045050
   140012643:	mov    QWORD PTR [rsp+0x40],0x3
   14001264c:	test   rax,rax
   14001264f:	je     0x14001265a
   140012651:	lea    rcx,[rsp+0x20]
   140012656:	call   rax
   140012658:	jmp    0x14001265d
   14001265a:	mov    rax,rdi
   14001265d:	mov    QWORD PTR [rbx+0xd8],rax
   140012664:	cmp    QWORD PTR [rbx+0xd8],rdi
   14001266b:	jne    0x1400126a2
   14001266d:	mov    rax,QWORD PTR [rip+0x329dc]        # 0x140045050
   140012674:	mov    QWORD PTR [rsp+0x40],0x1
   14001267d:	test   rax,rax
   140012680:	je     0x14001268b
   140012682:	lea    rcx,[rsp+0x20]
   140012687:	call   rax
   140012689:	jmp    0x14001268e
   14001268b:	mov    rax,rdi
   14001268e:	cmp    rax,rdi
   140012691:	mov    QWORD PTR [rbx+0xd8],rax
   140012698:	jne    0x1400126a2
   14001269a:	and    QWORD PTR [rbx+0xd8],0x0
   1400126a2:	mov    rcx,QWORD PTR [rsp+0x270]
   1400126aa:	xor    rcx,rsp
   1400126ad:	call   0x140019370
   1400126b2:	mov    rbx,QWORD PTR [rsp+0x298]
   1400126ba:	add    rsp,0x280
   1400126c1:	pop    rdi
   1400126c2:	ret    
   1400126c3:	int3   
   1400126c4:	rex push rbx
   1400126c6:	sub    rsp,0x20
   1400126ca:	mov    rbx,rcx
   1400126cd:	lock add DWORD PTR [rcx+0x30],0xffffffff
   1400126d2:	jne    0x1400126fc
   1400126d4:	mov    rcx,QWORD PTR [rcx+0x28]
   1400126d8:	test   rcx,rcx
   1400126db:	je     0x1400126e8
   1400126dd:	mov    rax,QWORD PTR [rcx]
   1400126e0:	call   QWORD PTR [rax+0x10]
   1400126e3:	and    QWORD PTR [rbx+0x28],0x0
   1400126e8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400126ec:	test   rcx,rcx
   1400126ef:	je     0x1400126fc
   1400126f1:	mov    rax,QWORD PTR [rcx]
   1400126f4:	call   QWORD PTR [rax+0x10]
   1400126f7:	and    QWORD PTR [rbx+0x10],0x0
   1400126fc:	add    rsp,0x20
   140012700:	pop    rbx
   140012701:	ret    
   140012702:	int3   
   140012703:	int3   
   140012704:	lea    rax,[rip+0x21a15]        # 0x140034120
   14001270b:	mov    QWORD PTR [rcx],rax
   14001270e:	xor    eax,eax
   140012710:	mov    DWORD PTR [rcx+0x60],eax
   140012713:	mov    DWORD PTR [rcx+0x90],eax
   140012719:	mov    DWORD PTR [rsp+0x8],eax
   14001271d:	mov    DWORD PTR [rsp+0xc],eax
   140012721:	mov    rax,QWORD PTR [rsp+0x8]
   140012726:	mov    QWORD PTR [rcx+0x88],rax
   14001272d:	mov    rax,rcx
   140012730:	ret    
   140012731:	int3   
   140012732:	int3   
   140012733:	int3   
   140012734:	rex push rbx
   140012736:	sub    rsp,0x20
   14001273a:	lea    rax,[rip+0x219df]        # 0x140034120
   140012741:	mov    rbx,rcx
   140012744:	mov    QWORD PTR [rcx],rax
   140012747:	mov    rcx,QWORD PTR [rcx+0x50]
   14001274b:	test   rcx,rcx
   14001274e:	je     0x140012756
   140012750:	call   QWORD PTR [rip+0x1ee82]        # 0x1400315d8
   140012756:	mov    rcx,QWORD PTR [rbx+0x48]
   14001275a:	test   rcx,rcx
   14001275d:	je     0x140012765
   14001275f:	call   QWORD PTR [rip+0x1ee73]        # 0x1400315d8
   140012765:	mov    rcx,QWORD PTR [rbx+0x18]
   140012769:	test   rcx,rcx
   14001276c:	je     0x140012773
   14001276e:	call   0x14001a540
   140012773:	add    rsp,0x20
   140012777:	pop    rbx
   140012778:	ret    
   140012779:	int3   
   14001277a:	int3   
   14001277b:	int3   
   14001277c:	mov    QWORD PTR [rsp+0x8],rbx
   140012781:	push   rdi
   140012782:	sub    rsp,0x20
   140012786:	lea    rax,[rip+0x219a3]        # 0x140034130
   14001278d:	mov    rbx,rcx
   140012790:	mov    QWORD PTR [rcx],rax
   140012793:	mov    rcx,QWORD PTR [rcx+0x78]
   140012797:	test   rcx,rcx
   14001279a:	je     0x1400127a5
   14001279c:	mov    rax,QWORD PTR [rcx]
   14001279f:	call   QWORD PTR [rax+0x278]
   1400127a5:	mov    rcx,QWORD PTR [rbx+0x90]
   1400127ac:	call   0x140006160
   1400127b1:	mov    rcx,QWORD PTR [rbx+0x28]
   1400127b5:	mov    edi,0x1
   1400127ba:	test   rcx,rcx
   1400127bd:	je     0x1400127c6
   1400127bf:	mov    rax,QWORD PTR [rcx]
   1400127c2:	mov    edx,edi
   1400127c4:	call   QWORD PTR [rax]
   1400127c6:	mov    rcx,QWORD PTR [rbx+0x30]
   1400127ca:	test   rcx,rcx
   1400127cd:	je     0x1400127d6
   1400127cf:	mov    rax,QWORD PTR [rcx]
   1400127d2:	mov    edx,edi
   1400127d4:	call   QWORD PTR [rax]
   1400127d6:	mov    rcx,QWORD PTR [rbx+0x38]
   1400127da:	test   rcx,rcx
   1400127dd:	je     0x1400127e6
   1400127df:	mov    rax,QWORD PTR [rcx]
   1400127e2:	mov    edx,edi
   1400127e4:	call   QWORD PTR [rax]
   1400127e6:	mov    rcx,QWORD PTR [rbx+0x40]
   1400127ea:	test   rcx,rcx
   1400127ed:	je     0x1400127f6
   1400127ef:	mov    rax,QWORD PTR [rcx]
   1400127f2:	mov    edx,edi
   1400127f4:	call   QWORD PTR [rax]
   1400127f6:	mov    rcx,QWORD PTR [rbx+0x48]
   1400127fa:	test   rcx,rcx
   1400127fd:	je     0x140012806
   1400127ff:	mov    rax,QWORD PTR [rcx]
   140012802:	mov    edx,edi
   140012804:	call   QWORD PTR [rax]
   140012806:	mov    rax,QWORD PTR [rbx+0x70]
   14001280a:	test   rax,rax
   14001280d:	je     0x140012832
   14001280f:	cmp    QWORD PTR [rax+0x18],0x0
   140012814:	je     0x140012832
   140012816:	mov    rcx,QWORD PTR [rbx+0x70]
   14001281a:	call   0x140017ab8
   14001281f:	mov    rcx,rax
   140012822:	call   0x140006160
   140012827:	mov    r11,QWORD PTR [rbx+0x70]
   14001282b:	cmp    QWORD PTR [r11+0x18],0x0
   140012830:	jne    0x140012816
   140012832:	mov    rcx,QWORD PTR [rbx+0x60]
   140012836:	test   rcx,rcx
   140012839:	je     0x140012843
   14001283b:	mov    rax,QWORD PTR [rcx]
   14001283e:	mov    edx,edi
   140012840:	call   QWORD PTR [rax+0x8]
   140012843:	mov    rcx,QWORD PTR [rbx+0x68]
   140012847:	test   rcx,rcx
   14001284a:	je     0x140012854
   14001284c:	mov    rax,QWORD PTR [rcx]
   14001284f:	mov    edx,edi
   140012851:	call   QWORD PTR [rax+0x8]
   140012854:	mov    rcx,QWORD PTR [rbx+0x70]
   140012858:	test   rcx,rcx
   14001285b:	je     0x140012865
   14001285d:	mov    rax,QWORD PTR [rcx]
   140012860:	mov    edx,edi
   140012862:	call   QWORD PTR [rax+0x8]
   140012865:	mov    rbx,QWORD PTR [rsp+0x30]
   14001286a:	add    rsp,0x20
   14001286e:	pop    rdi
   14001286f:	ret    
   140012870:	mov    QWORD PTR [rsp+0x8],rbx
   140012875:	push   rdi
   140012876:	sub    rsp,0x20
   14001287a:	mov    ebx,edx
   14001287c:	mov    rdi,rcx
   14001287f:	call   0x140012734
   140012884:	test   bl,0x1
   140012887:	je     0x140012891
   140012889:	mov    rcx,rdi
   14001288c:	call   0x140013b68
   140012891:	mov    rax,rdi
   140012894:	mov    rbx,QWORD PTR [rsp+0x30]
   140012899:	add    rsp,0x20
   14001289d:	pop    rdi
   14001289e:	ret    
   14001289f:	int3   
   1400128a0:	lea    rax,[rip+0x21889]        # 0x140034130
   1400128a7:	xor    edx,edx
   1400128a9:	mov    QWORD PTR [rcx],rax
   1400128ac:	mov    QWORD PTR [rcx+0x10],rdx
   1400128b0:	or     rax,0xffffffffffffffff
   1400128b4:	mov    QWORD PTR [rcx+0x88],rax
   1400128bb:	mov    QWORD PTR [rcx+0x98],rax
   1400128c2:	lea    rax,[rip+0xffffffffffff382f]        # 0x1400060f8
   1400128c9:	mov    QWORD PTR [rcx+0x50],rax
   1400128cd:	mov    QWORD PTR [rcx+0x90],rdx
   1400128d4:	mov    QWORD PTR [rcx+0x18],0xc8
   1400128dc:	mov    rax,rcx
   1400128df:	ret    
   1400128e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400128e5:	push   rdi
   1400128e6:	sub    rsp,0x20
   1400128ea:	mov    ebx,edx
   1400128ec:	mov    rdi,rcx
   1400128ef:	call   0x14001277c
   1400128f4:	test   bl,0x1
   1400128f7:	je     0x140012901
   1400128f9:	mov    rcx,rdi
   1400128fc:	call   0x140013b68
   140012901:	mov    rax,rdi
   140012904:	mov    rbx,QWORD PTR [rsp+0x30]
   140012909:	add    rsp,0x20
   14001290d:	pop    rdi
   14001290e:	ret    
   14001290f:	int3   
   140012910:	sub    rsp,0x28
   140012914:	lea    rdx,[rip+0xffffffffffff3b11]        # 0x14000642c
   14001291b:	lea    rcx,[rip+0x3275e]        # 0x140045080
   140012922:	call   0x140014348
   140012927:	test   rax,rax
   14001292a:	jne    0x140012932
   14001292c:	call   0x140006408
   140012931:	int3   
   140012932:	add    rsp,0x28
   140012936:	ret    
   140012937:	int3   
   140012938:	mov    QWORD PTR [rsp+0x8],rcx
   14001293d:	push   rbx
   14001293e:	sub    rsp,0x30
   140012942:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001294b:	mov    rbx,rcx
   14001294e:	lea    rax,[rip+0x21813]        # 0x140034168
   140012955:	mov    QWORD PTR [rcx],rax
   140012958:	mov    rcx,QWORD PTR [rcx+0xb8]
   14001295f:	test   rcx,rcx
   140012962:	je     0x140012988
   140012964:	mov    rax,QWORD PTR [rcx]
   140012967:	lea    rdx,[rbx+0x80]
   14001296e:	call   QWORD PTR [rax+0x18]
   140012971:	mov    rcx,QWORD PTR [rbx+0xb8]
   140012978:	test   rcx,rcx
   14001297b:	je     0x140012988
   14001297d:	mov    rax,QWORD PTR [rcx]
   140012980:	mov    edx,0x1
   140012985:	call   QWORD PTR [rax+0x8]
   140012988:	mov    rax,QWORD PTR [rbx+0xc8]
   14001298f:	mov    rcx,QWORD PTR [rax]
   140012992:	test   rcx,rcx
   140012995:	je     0x1400129a1
   140012997:	mov    rax,QWORD PTR [rcx]
   14001299a:	mov    edx,0x1
   14001299f:	call   QWORD PTR [rax]
   1400129a1:	mov    rax,QWORD PTR [rbx+0xc8]
   1400129a8:	mov    rcx,QWORD PTR [rax+0x8]
   1400129ac:	test   rcx,rcx
   1400129af:	je     0x1400129bb
   1400129b1:	mov    rax,QWORD PTR [rcx]
   1400129b4:	mov    edx,0x1
   1400129b9:	call   QWORD PTR [rax]
   1400129bb:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400129c2:	call   0x140006160
   1400129c7:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400129ce:	test   rcx,rcx
   1400129d1:	je     0x1400129ef
   1400129d3:	cmp    rcx,0xffffffffffffffff
   1400129d7:	je     0x1400129ef
   1400129d9:	mov    rax,QWORD PTR [rip+0x32678]        # 0x140045058
   1400129e0:	test   rax,rax
   1400129e3:	je     0x1400129e7
   1400129e5:	call   rax
   1400129e7:	or     QWORD PTR [rbx+0xd8],0xffffffffffffffff
   1400129ef:	lea    rcx,[rbx+0xc0]
   1400129f6:	call   0x140014428
   1400129fb:	nop
   1400129fc:	mov    rdx,QWORD PTR [rbx+0x58]
   140012a00:	sub    rdx,0x18
   140012a04:	or     eax,0xffffffff
   140012a07:	lock xadd DWORD PTR [rdx+0x10],eax
   140012a0c:	add    eax,0xffffffff
   140012a0f:	test   eax,eax
   140012a11:	jg     0x140012a1c
   140012a13:	mov    rcx,QWORD PTR [rdx]
   140012a16:	mov    rax,QWORD PTR [rcx]
   140012a19:	call   QWORD PTR [rax+0x8]
   140012a1c:	add    rsp,0x30
   140012a20:	pop    rbx
   140012a21:	ret    
   140012a22:	int3   
   140012a23:	int3   
   140012a24:	int3   
   140012a25:	int3   
   140012a26:	int3   
   140012a27:	int3   
   140012a28:	rex push rbp
   140012a2a:	sub    rsp,0x20
   140012a2e:	mov    rbp,rdx
   140012a31:	mov    rcx,QWORD PTR [rbp+0x40]
   140012a35:	add    rcx,0x58
   140012a39:	call   0x140001dc0
   140012a3e:	add    rsp,0x20
   140012a42:	pop    rbp
   140012a43:	ret    
   140012a44:	int3   
   140012a45:	int3   
   140012a46:	int3   
   140012a47:	int3   
   140012a48:	rex push rbp
   140012a4a:	sub    rsp,0x20
   140012a4e:	mov    rbp,rdx
   140012a51:	mov    rcx,QWORD PTR [rbp+0x40]
   140012a55:	add    rcx,0xc0
   140012a5c:	call   0x14001247c
   140012a61:	add    rsp,0x20
   140012a65:	pop    rbp
   140012a66:	ret    
   140012a67:	int3   
   140012a68:	rex push rdi
   140012a6a:	sub    rsp,0x30
   140012a6e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012a77:	mov    QWORD PTR [rsp+0x48],rbx
   140012a7c:	mov    rbx,rcx
   140012a7f:	lea    rdx,[rip+0x21732]        # 0x1400341b8
   140012a86:	lea    rcx,[rsp+0x40]
   140012a8b:	call   0x140001ac0
   140012a90:	nop
   140012a91:	lea    rax,[rip+0x216e0]        # 0x140034178
   140012a98:	mov    QWORD PTR [rbx],rax
   140012a9b:	mov    rcx,QWORD PTR [rsp+0x40]
   140012aa0:	add    rcx,0xffffffffffffffe8
   140012aa4:	call   0x140001a30
   140012aa9:	add    rax,0x18
   140012aad:	mov    QWORD PTR [rbx+0x18],rax
   140012ab1:	xor    edi,edi
   140012ab3:	mov    QWORD PTR [rbx+0x8],rdi
   140012ab7:	mov    BYTE PTR [rbx+0x10],dil
   140012abb:	mov    rdx,QWORD PTR [rsp+0x40]
   140012ac0:	add    rdx,0xffffffffffffffe8
   140012ac4:	or     eax,0xffffffff
   140012ac7:	lock xadd DWORD PTR [rdx+0x10],eax
   140012acc:	add    eax,0xffffffff
   140012acf:	cmp    eax,edi
   140012ad1:	jg     0x140012adc
   140012ad3:	mov    rcx,QWORD PTR [rdx]
   140012ad6:	mov    rax,QWORD PTR [rcx]
   140012ad9:	call   QWORD PTR [rax+0x8]
   140012adc:	lea    rax,[rip+0x216cd]        # 0x1400341b0
   140012ae3:	mov    QWORD PTR [rbx],rax
   140012ae6:	mov    QWORD PTR [rbx+0x20],rdi
   140012aea:	mov    QWORD PTR [rbx+0x28],rdi
   140012aee:	mov    QWORD PTR [rbx+0x30],rdi
   140012af2:	mov    QWORD PTR [rbx+0x38],rdi
   140012af6:	mov    QWORD PTR [rbx+0x40],rdi
   140012afa:	mov    QWORD PTR [rbx+0x48],rdi
   140012afe:	mov    QWORD PTR [rbx+0x50],rdi
   140012b02:	mov    QWORD PTR [rbx+0x58],rdi
   140012b06:	mov    QWORD PTR [rbx+0x60],rdi
   140012b0a:	mov    QWORD PTR [rbx+0x68],rdi
   140012b0e:	mov    QWORD PTR [rbx+0x70],rdi
   140012b12:	mov    QWORD PTR [rbx+0x78],rdi
   140012b16:	mov    QWORD PTR [rbx+0x80],rdi
   140012b1d:	mov    QWORD PTR [rbx+0x88],rdi
   140012b24:	mov    QWORD PTR [rbx+0x90],rdi
   140012b2b:	mov    QWORD PTR [rbx+0x98],rdi
   140012b32:	mov    QWORD PTR [rbx+0xa0],rdi
   140012b39:	mov    QWORD PTR [rbx+0xa8],rdi
   140012b40:	mov    QWORD PTR [rbx+0xb0],rdi
   140012b47:	mov    QWORD PTR [rbx+0xb8],rdi
   140012b4e:	mov    QWORD PTR [rbx+0xc0],rdi
   140012b55:	mov    QWORD PTR [rbx+0xc8],rdi
   140012b5c:	mov    QWORD PTR [rbx+0xd0],rdi
   140012b63:	mov    QWORD PTR [rbx+0xd8],rdi
   140012b6a:	mov    QWORD PTR [rbx+0xe0],rdi
   140012b71:	mov    QWORD PTR [rbx+0xe8],rdi
   140012b78:	mov    QWORD PTR [rbx+0xf0],rdi
   140012b7f:	mov    QWORD PTR [rbx+0xf8],rdi
   140012b86:	mov    QWORD PTR [rbx+0x100],rdi
   140012b8d:	mov    QWORD PTR [rbx+0x108],rdi
   140012b94:	mov    QWORD PTR [rbx+0x110],rdi
   140012b9b:	mov    QWORD PTR [rbx+0x118],rdi
   140012ba2:	mov    QWORD PTR [rbx+0x120],rdi
   140012ba9:	mov    QWORD PTR [rbx+0x128],rdi
   140012bb0:	mov    QWORD PTR [rbx+0x130],rdi
   140012bb7:	mov    QWORD PTR [rbx+0x138],rdi
   140012bbe:	mov    QWORD PTR [rbx+0x140],rdi
   140012bc5:	mov    QWORD PTR [rbx+0x148],rdi
   140012bcc:	mov    QWORD PTR [rbx+0x150],rdi
   140012bd3:	mov    QWORD PTR [rbx+0x158],rdi
   140012bda:	mov    QWORD PTR [rbx+0x160],rdi
   140012be1:	mov    QWORD PTR [rbx+0x168],rdi
   140012be8:	mov    QWORD PTR [rbx+0x170],rdi
   140012bef:	mov    QWORD PTR [rbx+0x178],rdi
   140012bf6:	mov    QWORD PTR [rbx+0x180],rdi
   140012bfd:	mov    QWORD PTR [rbx+0x188],rdi
   140012c04:	mov    QWORD PTR [rbx+0x190],rdi
   140012c0b:	mov    QWORD PTR [rbx+0x198],rdi
   140012c12:	mov    QWORD PTR [rbx+0x1a0],rdi
   140012c19:	mov    QWORD PTR [rbx+0x1a8],rdi
   140012c20:	mov    QWORD PTR [rbx+0x1b0],rdi
   140012c27:	mov    QWORD PTR [rbx+0x1b8],rdi
   140012c2e:	mov    QWORD PTR [rbx+0x1c0],rdi
   140012c35:	mov    QWORD PTR [rbx+0x1c8],rdi
   140012c3c:	mov    QWORD PTR [rbx+0x1d0],rdi
   140012c43:	mov    QWORD PTR [rbx+0x1d8],rdi
   140012c4a:	mov    QWORD PTR [rbx+0x1e0],rdi
   140012c51:	mov    QWORD PTR [rbx+0x1e8],rdi
   140012c58:	mov    QWORD PTR [rbx+0x1f0],rdi
   140012c5f:	mov    QWORD PTR [rbx+0x1f8],rdi
   140012c66:	mov    QWORD PTR [rbx+0x200],rdi
   140012c6d:	mov    QWORD PTR [rbx+0x208],rdi
   140012c74:	mov    QWORD PTR [rbx+0x210],rdi
   140012c7b:	mov    QWORD PTR [rbx+0x218],rdi
   140012c82:	mov    QWORD PTR [rbx+0x220],rdi
   140012c89:	mov    QWORD PTR [rbx+0x228],rdi
   140012c90:	mov    QWORD PTR [rbx+0x230],rdi
   140012c97:	mov    QWORD PTR [rbx+0x238],rdi
   140012c9e:	mov    QWORD PTR [rbx+0x240],rdi
   140012ca5:	mov    QWORD PTR [rbx+0x248],rdi
   140012cac:	mov    QWORD PTR [rbx+0x250],rdi
   140012cb3:	mov    QWORD PTR [rbx+0x258],rdi
   140012cba:	mov    QWORD PTR [rbx+0x260],rdi
   140012cc1:	mov    QWORD PTR [rbx+0x268],rdi
   140012cc8:	mov    QWORD PTR [rbx+0x270],rdi
   140012ccf:	mov    QWORD PTR [rbx+0x278],rdi
   140012cd6:	mov    QWORD PTR [rbx+0x280],rdi
   140012cdd:	mov    QWORD PTR [rbx+0x288],rdi
   140012ce4:	mov    QWORD PTR [rbx+0x290],rdi
   140012ceb:	mov    QWORD PTR [rbx+0x298],rdi
   140012cf2:	mov    QWORD PTR [rbx+0x2a0],rdi
   140012cf9:	mov    QWORD PTR [rbx+0x2a8],rdi
   140012d00:	mov    QWORD PTR [rbx+0x2b0],rdi
   140012d07:	mov    QWORD PTR [rbx+0x2b8],rdi
   140012d0e:	mov    QWORD PTR [rbx+0x2c0],rdi
   140012d15:	mov    QWORD PTR [rbx+0x2c8],rdi
   140012d1c:	mov    QWORD PTR [rbx+0x2d0],rdi
   140012d23:	mov    QWORD PTR [rbx+0x2d8],rdi
   140012d2a:	mov    QWORD PTR [rbx+0x2e0],rdi
   140012d31:	mov    QWORD PTR [rbx+0x2e8],rdi
   140012d38:	mov    QWORD PTR [rbx+0x2f0],rdi
   140012d3f:	mov    QWORD PTR [rbx+0x2f8],rdi
   140012d46:	mov    QWORD PTR [rbx+0x300],rdi
   140012d4d:	mov    QWORD PTR [rbx+0x308],rdi
   140012d54:	mov    rax,rbx
   140012d57:	mov    rbx,QWORD PTR [rsp+0x48]
   140012d5c:	add    rsp,0x30
   140012d60:	pop    rdi
   140012d61:	ret    
   140012d62:	int3   
   140012d63:	int3   
   140012d64:	int3   
   140012d65:	int3   
   140012d66:	int3   
   140012d67:	int3   
   140012d68:	rex push rbp
   140012d6a:	sub    rsp,0x20
   140012d6e:	mov    rbp,rdx
   140012d71:	lea    rcx,[rbp+0x40]
   140012d75:	call   0x140001dc0
   140012d7a:	add    rsp,0x20
   140012d7e:	pop    rbp
   140012d7f:	ret    
   140012d80:	rex push rdi
   140012d82:	sub    rsp,0x30
   140012d86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012d8f:	mov    QWORD PTR [rsp+0x48],rbx
   140012d94:	mov    rbx,rcx
   140012d97:	lea    rdx,[rip+0x21472]        # 0x140034210
   140012d9e:	lea    rcx,[rsp+0x40]
   140012da3:	call   0x140001ac0
   140012da8:	nop
   140012da9:	lea    rax,[rip+0x213c8]        # 0x140034178
   140012db0:	mov    QWORD PTR [rbx],rax
   140012db3:	mov    rcx,QWORD PTR [rsp+0x40]
   140012db8:	add    rcx,0xffffffffffffffe8
   140012dbc:	call   0x140001a30
   140012dc1:	add    rax,0x18
   140012dc5:	mov    QWORD PTR [rbx+0x18],rax
   140012dc9:	xor    edi,edi
   140012dcb:	mov    QWORD PTR [rbx+0x8],rdi
   140012dcf:	mov    BYTE PTR [rbx+0x10],dil
   140012dd3:	mov    rdx,QWORD PTR [rsp+0x40]
   140012dd8:	add    rdx,0xffffffffffffffe8
   140012ddc:	or     eax,0xffffffff
   140012ddf:	lock xadd DWORD PTR [rdx+0x10],eax
   140012de4:	add    eax,0xffffffff
   140012de7:	cmp    eax,edi
   140012de9:	jg     0x140012df4
   140012deb:	mov    rcx,QWORD PTR [rdx]
   140012dee:	mov    rax,QWORD PTR [rcx]
   140012df1:	call   QWORD PTR [rax+0x8]
   140012df4:	lea    rax,[rip+0x2140d]        # 0x140034208
   140012dfb:	mov    QWORD PTR [rbx],rax
   140012dfe:	mov    QWORD PTR [rbx+0x20],rdi
   140012e02:	mov    QWORD PTR [rbx+0x28],rdi
   140012e06:	mov    QWORD PTR [rbx+0x30],rdi
   140012e0a:	mov    QWORD PTR [rbx+0x38],rdi
   140012e0e:	mov    QWORD PTR [rbx+0x40],rdi
   140012e12:	mov    QWORD PTR [rbx+0x48],rdi
   140012e16:	mov    QWORD PTR [rbx+0x50],rdi
   140012e1a:	mov    QWORD PTR [rbx+0x58],rdi
   140012e1e:	mov    QWORD PTR [rbx+0x60],rdi
   140012e22:	mov    QWORD PTR [rbx+0x68],rdi
   140012e26:	mov    QWORD PTR [rbx+0x70],rdi
   140012e2a:	mov    QWORD PTR [rbx+0x78],rdi
   140012e2e:	mov    QWORD PTR [rbx+0x80],rdi
   140012e35:	mov    QWORD PTR [rbx+0x88],rdi
   140012e3c:	mov    QWORD PTR [rbx+0x90],rdi
   140012e43:	mov    QWORD PTR [rbx+0x98],rdi
   140012e4a:	mov    QWORD PTR [rbx+0xa0],rdi
   140012e51:	mov    QWORD PTR [rbx+0xa8],rdi
   140012e58:	mov    QWORD PTR [rbx+0xb0],rdi
   140012e5f:	mov    QWORD PTR [rbx+0xb8],rdi
   140012e66:	mov    QWORD PTR [rbx+0xc0],rdi
   140012e6d:	mov    rax,rbx
   140012e70:	mov    rbx,QWORD PTR [rsp+0x48]
   140012e75:	add    rsp,0x30
   140012e79:	pop    rdi
   140012e7a:	ret    
   140012e7b:	int3   
   140012e7c:	int3   
   140012e7d:	int3   
   140012e7e:	int3   
   140012e7f:	int3   
   140012e80:	rex push rbp
   140012e82:	sub    rsp,0x20
   140012e86:	mov    rbp,rdx
   140012e89:	lea    rcx,[rbp+0x40]
   140012e8d:	call   0x140001dc0
   140012e92:	add    rsp,0x20
   140012e96:	pop    rbp
   140012e97:	ret    
   140012e98:	mov    QWORD PTR [rsp+0x8],rbx
   140012e9d:	push   rdi
   140012e9e:	sub    rsp,0x20
   140012ea2:	cmp    BYTE PTR [rcx+0x10],0x0
   140012ea6:	lea    rax,[rip+0x212cb]        # 0x140034178
   140012ead:	mov    edi,edx
   140012eaf:	mov    QWORD PTR [rcx],rax
   140012eb2:	mov    rbx,rcx
   140012eb5:	je     0x140012ec1
   140012eb7:	mov    rcx,QWORD PTR [rcx+0x8]
   140012ebb:	call   QWORD PTR [rip+0x1e597]        # 0x140031458
   140012ec1:	mov    rdx,QWORD PTR [rbx+0x18]
   140012ec5:	sub    rdx,0x18
   140012ec9:	or     eax,0xffffffff
   140012ecc:	lock xadd DWORD PTR [rdx+0x10],eax
   140012ed1:	add    eax,0xffffffff
   140012ed4:	test   eax,eax
   140012ed6:	jg     0x140012ee1
   140012ed8:	mov    rcx,QWORD PTR [rdx]
   140012edb:	mov    rax,QWORD PTR [rcx]
   140012ede:	call   QWORD PTR [rax+0x8]
   140012ee1:	test   dil,0x1
   140012ee5:	je     0x140012eef
   140012ee7:	mov    rcx,rbx
   140012eea:	call   0x140013b68
   140012eef:	mov    rax,rbx
   140012ef2:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ef7:	add    rsp,0x20
   140012efb:	pop    rdi
   140012efc:	ret    
   140012efd:	int3   
   140012efe:	int3   
   140012eff:	int3   
   140012f00:	mov    QWORD PTR [rsp+0x8],rcx
   140012f05:	push   r12
   140012f07:	sub    rsp,0x30
   140012f0b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012f14:	mov    QWORD PTR [rsp+0x48],rsi
   140012f19:	mov    QWORD PTR [rsp+0x58],rdi
   140012f1e:	mov    r12d,edx
   140012f21:	mov    rdi,rcx
   140012f24:	lea    rax,[rip+0x2123d]        # 0x140034168
   140012f2b:	mov    QWORD PTR [rcx],rax
   140012f2e:	and    QWORD PTR [rcx+0x30],0x0
   140012f33:	and    QWORD PTR [rcx+0x38],0x0
   140012f38:	and    QWORD PTR [rcx+0x40],0x0
   140012f3d:	and    QWORD PTR [rcx+0x48],0x0
   140012f42:	call   0x14000669c
   140012f47:	mov    r11,rax
   140012f4a:	xor    ecx,ecx
   140012f4c:	test   rax,rax
   140012f4f:	setne  cl
   140012f52:	test   ecx,ecx
   140012f54:	jne    0x140012f61
   140012f56:	mov    ecx,0x80004005
   140012f5b:	call   0x1400015c0
   140012f60:	int3   
   140012f61:	mov    rax,QWORD PTR [rax]
   140012f64:	mov    rcx,r11
   140012f67:	call   QWORD PTR [rax+0x18]
   140012f6a:	add    rax,0x18
   140012f6e:	mov    QWORD PTR [rdi+0x58],rax
   140012f72:	and    QWORD PTR [rdi+0x70],0x0
   140012f77:	and    QWORD PTR [rdi+0x78],0x0
   140012f7c:	or     DWORD PTR [rdi+0x88],0xffffffff
   140012f83:	and    QWORD PTR [rdi+0x90],0x0
   140012f8b:	and    QWORD PTR [rdi+0xa8],0x0
   140012f93:	and    DWORD PTR [rdi+0xb0],0x0
   140012f9a:	mov    QWORD PTR [rdi+0x48],0x40
   140012fa2:	mov    QWORD PTR [rdi+0x38],0x20
   140012faa:	and    DWORD PTR [rdi+0x2c],0x0
   140012fae:	mov    BYTE PTR [rdi+0x28],r12b
   140012fb2:	mov    rax,QWORD PTR [rdi+0x58]
   140012fb6:	mov    r8d,0x1
   140012fbc:	sub    r8d,DWORD PTR [rax-0x8]
   140012fc0:	mov    eax,DWORD PTR [rax-0xc]
   140012fc3:	mov    edx,0x1000
   140012fc8:	sub    eax,edx
   140012fca:	or     eax,r8d
   140012fcd:	jge    0x140012fd9
   140012fcf:	lea    rcx,[rdi+0x58]
   140012fd3:	call   0x1400015e0
   140012fd8:	nop
   140012fd9:	jmp    0x140012fe0
   140012fdb:	mov    rdi,QWORD PTR [rsp+0x40]
   140012fe0:	mov    DWORD PTR [rdi+0x54],0x1
   140012fe7:	mov    QWORD PTR [rdi+0x78],0x20
   140012fef:	mov    ecx,0x10
   140012ff4:	call   0x140006114
   140012ff9:	mov    QWORD PTR [rdi+0xc8],rax
   140013000:	mov    ecx,0x310
   140013005:	call   0x140013b44
   14001300a:	mov    QWORD PTR [rsp+0x50],rax
   14001300f:	test   rax,rax
   140013012:	je     0x140013021
   140013014:	mov    rcx,rax
   140013017:	call   0x140012a68
   14001301c:	mov    r11,rax
   14001301f:	jmp    0x140013024
   140013021:	xor    r11d,r11d
   140013024:	mov    rax,QWORD PTR [rdi+0xc8]
   14001302b:	mov    QWORD PTR [rax],r11
   14001302e:	mov    ecx,0xc8
   140013033:	call   0x140013b44
   140013038:	mov    QWORD PTR [rsp+0x50],rax
   14001303d:	test   rax,rax
   140013040:	je     0x14001304f
   140013042:	mov    rcx,rax
   140013045:	call   0x140012d80
   14001304a:	mov    r11,rax
   14001304d:	jmp    0x140013052
   14001304f:	xor    r11d,r11d
   140013052:	mov    rax,QWORD PTR [rdi+0xc8]
   140013059:	mov    QWORD PTR [rax+0x8],r11
   14001305d:	mov    DWORD PTR [rdi+0xd0],0x1
   140013067:	and    QWORD PTR [rdi+0xd8],0x0
   14001306f:	mov    rax,rdi
   140013072:	mov    rsi,QWORD PTR [rsp+0x48]
   140013077:	mov    rdi,QWORD PTR [rsp+0x58]
   14001307c:	add    rsp,0x30
   140013080:	pop    r12
   140013082:	ret    
   140013083:	int3   
   140013084:	int3   
   140013085:	int3   
   140013086:	int3   
   140013087:	int3   
   140013088:	int3   
   140013089:	int3   
   14001308a:	int3   
   14001308b:	int3   
   14001308c:	int3   
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	rex push rbp
   140013092:	sub    rsp,0x20
   140013096:	mov    rbp,rdx
   140013099:	mov    rcx,QWORD PTR [rbp+0x40]
   14001309d:	add    rcx,0x58
   1400130a1:	call   0x140001dc0
   1400130a6:	add    rsp,0x20
   1400130aa:	pop    rbp
   1400130ab:	ret    
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	rex push rbp
   1400130b2:	sub    rsp,0x20
   1400130b6:	mov    rbp,rdx
   1400130b9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400130bd:	add    rcx,0xc0
   1400130c4:	call   0x14001247c
   1400130c9:	add    rsp,0x20
   1400130cd:	pop    rbp
   1400130ce:	ret    
   1400130cf:	int3   
   1400130d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400130d5:	push   rbp
   1400130d6:	sub    rsp,0x20
   1400130da:	mov    rbp,rdx
   1400130dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400130e1:	test   rcx,rcx
   1400130e4:	je     0x1400130ec
   1400130e6:	call   0x1400062c8
   1400130eb:	nop
   1400130ec:	lea    rax,[rip+0xfffffffffffffee8]        # 0x140012fdb
   1400130f3:	jmp    0x1400130f5
   1400130f5:	add    rsp,0x20
   1400130f9:	pop    rbp
   1400130fa:	ret    
   1400130fb:	int3   
   1400130fc:	int3   
   1400130fd:	int3   
   1400130fe:	int3   
   1400130ff:	int3   
   140013100:	rex push rbp
   140013102:	sub    rsp,0x20
   140013106:	mov    rbp,rdx
   140013109:	mov    rcx,QWORD PTR [rbp+0x50]
   14001310d:	call   0x140013b68
   140013112:	add    rsp,0x20
   140013116:	pop    rbp
   140013117:	ret    
   140013118:	int3   
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	int3   
   14001311d:	int3   
   14001311e:	int3   
   14001311f:	int3   
   140013120:	rex push rbp
   140013122:	sub    rsp,0x20
   140013126:	mov    rbp,rdx
   140013129:	mov    rcx,QWORD PTR [rbp+0x50]
   14001312d:	call   0x140013b68
   140013132:	add    rsp,0x20
   140013136:	pop    rbp
   140013137:	ret    
   140013138:	mov    QWORD PTR [rsp+0x8],rbx
   14001313d:	push   rdi
   14001313e:	sub    rsp,0x20
   140013142:	mov    ebx,edx
   140013144:	mov    rdi,rcx
   140013147:	call   0x140012938
   14001314c:	test   bl,0x1
   14001314f:	je     0x140013159
   140013151:	mov    rcx,rdi
   140013154:	call   0x140013b68
   140013159:	mov    rax,rdi
   14001315c:	mov    rbx,QWORD PTR [rsp+0x30]
   140013161:	add    rsp,0x20
   140013165:	pop    rdi
   140013166:	ret    
   140013167:	int3   
   140013168:	rex push rbx
   14001316a:	sub    rsp,0x30
   14001316e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013177:	mov    ecx,0xe0
   14001317c:	call   0x140013b44
   140013181:	mov    rbx,rax
   140013184:	mov    QWORD PTR [rsp+0x40],rax
   140013189:	test   rax,rax
   14001318c:	je     0x1400131a7
   14001318e:	mov    edx,0x1
   140013193:	mov    rcx,rax
   140013196:	call   0x140012f00
   14001319b:	lea    r11,[rip+0x210be]        # 0x140034260
   1400131a2:	mov    QWORD PTR [rbx],r11
   1400131a5:	jmp    0x1400131a9
   1400131a7:	xor    ebx,ebx
   1400131a9:	mov    rax,rbx
   1400131ac:	add    rsp,0x30
   1400131b0:	pop    rbx
   1400131b1:	ret    
   1400131b2:	int3   
   1400131b3:	int3   
   1400131b4:	int3   
   1400131b5:	int3   
   1400131b6:	int3   
   1400131b7:	int3   
   1400131b8:	rex push rbp
   1400131ba:	sub    rsp,0x20
   1400131be:	mov    rbp,rdx
   1400131c1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400131c5:	call   0x140013b68
   1400131ca:	add    rsp,0x20
   1400131ce:	pop    rbp
   1400131cf:	ret    
   1400131d0:	sub    rsp,0x28
   1400131d4:	lea    rdx,[rip+0xffffffffffff3251]        # 0x14000642c
   1400131db:	lea    rcx,[rip+0x31e9e]        # 0x140045080
   1400131e2:	call   0x140014348
   1400131e7:	test   rax,rax
   1400131ea:	jne    0x1400131f2
   1400131ec:	call   0x140006408
   1400131f1:	int3   
   1400131f2:	mov    rax,QWORD PTR [rax+0x8]
   1400131f6:	test   rax,rax
   1400131f9:	jne    0x140013219
   1400131fb:	lea    rdx,[rip+0xffffffffffffff66]        # 0x140013168
   140013202:	lea    rcx,[rip+0x31e6f]        # 0x140045078
   140013209:	call   0x140013c10
   14001320e:	test   rax,rax
   140013211:	jne    0x140013219
   140013213:	call   0x140006408
   140013218:	int3   
   140013219:	add    rsp,0x28
   14001321d:	ret    
   14001321e:	int3   
   14001321f:	int3   
   140013220:	sub    rsp,0x28
   140013224:	call   0x1400131d0
   140013229:	lea    rdx,[rip+0xffffffffffff4138]        # 0x140007368
   140013230:	lea    rcx,[rax+0xc0]
   140013237:	call   0x140014348
   14001323c:	test   rax,rax
   14001323f:	jne    0x140013247
   140013241:	call   0x140006408
   140013246:	int3   
   140013247:	add    rsp,0x28
   14001324b:	ret    
   14001324c:	mov    QWORD PTR [rsp+0x8],rbx
   140013251:	push   rdi
   140013252:	sub    rsp,0x20
   140013256:	mov    rdi,rdx
   140013259:	mov    rbx,rcx
   14001325c:	call   0x1400131d0
   140013261:	xor    r8d,r8d
   140013264:	cmp    DWORD PTR [rax+0xd0],r8d
   14001326b:	je     0x14001328e
   14001326d:	mov    rcx,QWORD PTR [rdi+0xd8]
   140013274:	cmp    rcx,0xffffffffffffffff
   140013278:	je     0x14001328e
   14001327a:	mov    rax,QWORD PTR [rip+0x31ddf]        # 0x140045060
   140013281:	cmp    rax,r8
   140013284:	je     0x14001328e
   140013286:	mov    rdx,rbx
   140013289:	call   rax
   14001328b:	mov    r8d,eax
   14001328e:	mov    DWORD PTR [rbx+0x8],r8d
   140013292:	mov    rax,rbx
   140013295:	mov    rbx,QWORD PTR [rsp+0x30]
   14001329a:	add    rsp,0x20
   14001329e:	pop    rdi
   14001329f:	ret    
   1400132a0:	mov    rcx,QWORD PTR [rcx+0x98]
   1400132a7:	mov    rax,QWORD PTR [rcx]
   1400132aa:	rex.W jmp QWORD PTR [rax+0xb0]
   1400132b1:	int3   
   1400132b2:	int3   
   1400132b3:	int3   
   1400132b4:	sub    rsp,0x28
   1400132b8:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400132c0:	jne    0x1400132d3
   1400132c2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400132c6:	mov    edx,0xfffffff0
   1400132cb:	call   QWORD PTR [rip+0x1e477]        # 0x140031748
   1400132d1:	jmp    0x1400132e3
   1400132d3:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400132da:	mov    rax,QWORD PTR [rcx]
   1400132dd:	call   QWORD PTR [rax+0xf0]
   1400132e3:	add    rsp,0x28
   1400132e7:	ret    
   1400132e8:	sub    rsp,0x28
   1400132ec:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400132f4:	jne    0x140013307
   1400132f6:	mov    rcx,QWORD PTR [rcx+0x40]
   1400132fa:	mov    edx,0xffffffec
   1400132ff:	call   QWORD PTR [rip+0x1e443]        # 0x140031748
   140013305:	jmp    0x140013317
   140013307:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001330e:	mov    rax,QWORD PTR [rcx]
   140013311:	call   QWORD PTR [rax+0xf8]
   140013317:	add    rsp,0x28
   14001331b:	ret    
   14001331c:	sub    rsp,0x28
   140013320:	cmp    QWORD PTR [rcx+0xa0],0x0
   140013328:	jne    0x140013336
   14001332a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001332e:	call   QWORD PTR [rip+0x1e1fc]        # 0x140031530
   140013334:	jmp    0x140013346
   140013336:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001333d:	mov    rax,QWORD PTR [rcx]
   140013340:	call   QWORD PTR [rax+0x140]
   140013346:	add    rsp,0x28
   14001334a:	ret    
   14001334b:	int3   
   14001334c:	sub    rsp,0x28
   140013350:	cmp    QWORD PTR [rcx+0xa0],0x0
   140013358:	jne    0x140013366
   14001335a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001335e:	call   QWORD PTR [rip+0x1e3fc]        # 0x140031760
   140013364:	jmp    0x140013376
   140013366:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001336d:	mov    rax,QWORD PTR [rcx]
   140013370:	call   QWORD PTR [rax+0x148]
   140013376:	add    rsp,0x28
   14001337a:	ret    
   14001337b:	int3   
   14001337c:	sub    rsp,0x28
   140013380:	cmp    QWORD PTR [rcx+0xa0],0x0
   140013388:	jne    0x140013396
   14001338a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001338e:	call   QWORD PTR [rip+0x1e414]        # 0x1400317a8
   140013394:	jmp    0x1400133a6
   140013396:	mov    rcx,QWORD PTR [rcx+0xa0]
   14001339d:	mov    rax,QWORD PTR [rcx]
   1400133a0:	call   QWORD PTR [rax+0x150]
   1400133a6:	add    rsp,0x28
   1400133aa:	ret    
   1400133ab:	int3   
   1400133ac:	sub    rsp,0x48
   1400133b0:	mov    r11,rdx
   1400133b3:	xor    edx,edx
   1400133b5:	cmp    QWORD PTR [rcx+0xa0],rdx
   1400133bc:	jne    0x1400133ee
   1400133be:	cmp    r11,rdx
   1400133c1:	je     0x1400133c7
   1400133c3:	mov    rdx,QWORD PTR [r11+0x40]
   1400133c7:	mov    eax,DWORD PTR [rsp+0x80]
   1400133ce:	mov    rcx,QWORD PTR [rcx+0x40]
   1400133d2:	mov    DWORD PTR [rsp+0x30],eax
   1400133d6:	mov    eax,DWORD PTR [rsp+0x78]
   1400133da:	mov    DWORD PTR [rsp+0x28],eax
   1400133de:	mov    eax,DWORD PTR [rsp+0x70]
   1400133e2:	mov    DWORD PTR [rsp+0x20],eax
   1400133e6:	call   QWORD PTR [rip+0x1e274]        # 0x140031660
   1400133ec:	jmp    0x14001341d
   1400133ee:	mov    eax,DWORD PTR [rsp+0x80]
   1400133f5:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400133fc:	mov    rdx,r11
   1400133ff:	mov    r10,QWORD PTR [rcx]
   140013402:	mov    DWORD PTR [rsp+0x30],eax
   140013406:	mov    eax,DWORD PTR [rsp+0x78]
   14001340a:	mov    DWORD PTR [rsp+0x28],eax
   14001340e:	mov    eax,DWORD PTR [rsp+0x70]
   140013412:	mov    DWORD PTR [rsp+0x20],eax
   140013416:	call   QWORD PTR [r10+0x138]
   14001341d:	add    rsp,0x48
   140013421:	ret    
   140013422:	int3   
   140013423:	int3   
   140013424:	test   rcx,rcx
   140013427:	je     0x140013488
   140013429:	mov    QWORD PTR [rsp+0x8],rbx
   14001342e:	push   rdi
   14001342f:	sub    rsp,0x20
   140013433:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001343b:	mov    rdi,rdx
   14001343e:	mov    rbx,rcx
   140013441:	jne    0x14001347e
   140013443:	mov    rcx,QWORD PTR [rcx+0x40]
   140013447:	call   QWORD PTR [rip+0x1e303]        # 0x140031750
   14001344d:	lea    rcx,[rdi+0x30]
   140013451:	mov    rdx,rax
   140013454:	call   0x14001775c
   140013459:	test   rax,rax
   14001345c:	je     0x14001347e
   14001345e:	cmp    QWORD PTR [rax+0x98],0x0
   140013466:	je     0x14001347e
   140013468:	mov    rcx,QWORD PTR [rax+0x98]
   14001346f:	xor    r8d,r8d
   140013472:	mov    rdx,rbx
   140013475:	mov    rax,QWORD PTR [rcx]
   140013478:	call   QWORD PTR [rax+0x138]
   14001347e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013483:	add    rsp,0x20
   140013487:	pop    rdi
   140013488:	ret    
   140013489:	int3   
   14001348a:	int3   
   14001348b:	int3   
   14001348c:	lea    rax,[rip+0x20e9d]        # 0x140034330
   140013493:	ret    
   140013494:	sub    rsp,0x38
   140013498:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400134a1:	xor    eax,eax
   1400134a3:	test   rcx,rcx
   1400134a6:	setne  al
   1400134a9:	test   eax,eax
   1400134ab:	jne    0x1400134b3
   1400134ad:	call   0x140006408
   1400134b2:	int3   
   1400134b3:	cmp    QWORD PTR [rcx+0x10],0x0
   1400134b8:	jne    0x1400134be
   1400134ba:	xor    eax,eax
   1400134bc:	jmp    0x1400134d3
   1400134be:	and    QWORD PTR [rsp+0x40],0x0
   1400134c4:	call   QWORD PTR [rcx+0x10]
   1400134c7:	mov    QWORD PTR [rsp+0x40],rax
   1400134cc:	jmp    0x1400134d3
   1400134ce:	mov    rax,QWORD PTR [rsp+0x40]
   1400134d3:	add    rsp,0x38
   1400134d7:	ret    
   1400134d8:	int3   
   1400134d9:	int3   
   1400134da:	int3   
   1400134db:	int3   
   1400134dc:	int3   
   1400134dd:	int3   
   1400134de:	int3   
   1400134df:	int3   
   1400134e0:	int3   
   1400134e1:	int3   
   1400134e2:	int3   
   1400134e3:	int3   
   1400134e4:	mov    QWORD PTR [rsp+0x10],rdx
   1400134e9:	push   rbp
   1400134ea:	sub    rsp,0x20
   1400134ee:	mov    rbp,rdx
   1400134f1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400134f5:	call   0x1400062c8
   1400134fa:	nop
   1400134fb:	lea    rax,[rip+0xffffffffffffffcc]        # 0x1400134ce
   140013502:	jmp    0x140013504
   140013504:	add    rsp,0x20
   140013508:	pop    rbp
   140013509:	ret    
   14001350a:	int3   
   14001350b:	int3   
   14001350c:	sub    rsp,0x28
   140013510:	test   rcx,rcx
   140013513:	jne    0x14001351b
   140013515:	call   0x140006408
   14001351a:	int3   
   14001351b:	test   rdx,rdx
   14001351e:	jne    0x140013526
   140013520:	call   0x140006408
   140013525:	int3   
   140013526:	cmp    rcx,rdx
   140013529:	je     0x140013538
   14001352b:	mov    rcx,QWORD PTR [rcx+0x18]
   14001352f:	test   rcx,rcx
   140013532:	jne    0x140013526
   140013534:	xor    eax,eax
   140013536:	jmp    0x14001353d
   140013538:	mov    eax,0x1
   14001353d:	add    rsp,0x28
   140013541:	ret    
   140013542:	int3   
   140013543:	int3   
   140013544:	rex push rbx
   140013546:	sub    rsp,0x20
   14001354a:	test   rcx,rcx
   14001354d:	mov    rbx,rdx
   140013550:	jne    0x140013558
   140013552:	call   0x140006408
   140013557:	int3   
   140013558:	mov    rax,QWORD PTR [rcx]
   14001355b:	call   QWORD PTR [rax]
   14001355d:	test   rax,rax
   140013560:	jne    0x140013568
   140013562:	call   0x140006408
   140013567:	int3   
   140013568:	mov    rdx,rbx
   14001356b:	mov    rcx,rax
   14001356e:	add    rsp,0x20
   140013572:	pop    rbx
   140013573:	jmp    0x14001350c
   140013578:	mov    QWORD PTR [rsp+0x8],rbx
   14001357d:	push   rdi
   14001357e:	sub    rsp,0x20
   140013582:	mov    rdi,rcx
   140013585:	call   0x1400131d0
   14001358a:	xor    ecx,ecx
   14001358c:	mov    rbx,rax
   14001358f:	call   0x140015804
   140013594:	lea    rcx,[rbx+0x30]
   140013598:	mov    rdx,rdi
   14001359b:	call   0x140013cc4
   1400135a0:	xor    ecx,ecx
   1400135a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400135a7:	add    rsp,0x20
   1400135ab:	pop    rdi
   1400135ac:	jmp    0x140015898
   1400135b1:	int3   
   1400135b2:	int3   
   1400135b3:	int3   
   1400135b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400135b9:	push   rdi
   1400135ba:	sub    rsp,0x20
   1400135be:	mov    rax,QWORD PTR [rcx]
   1400135c1:	mov    rbx,rdx
   1400135c4:	mov    rdi,rcx
   1400135c7:	call   QWORD PTR [rax+0x88]
   1400135cd:	test   rax,rax
   1400135d0:	jne    0x14001367a
   1400135d6:	mov    rax,QWORD PTR [rdi]
   1400135d9:	mov    rcx,rdi
   1400135dc:	call   QWORD PTR [rax+0x70]
   1400135df:	mov    r8d,DWORD PTR [rbx]
   1400135e2:	cmp    DWORD PTR [rip+0x230af],r8d        # 0x140036698
   1400135e9:	mov    r11,rax
   1400135ec:	jne    0x140013635
   1400135ee:	mov    ecx,DWORD PTR [rip+0x230a8]        # 0x14003669c
   1400135f4:	cmp    DWORD PTR [rbx+0x4],ecx
   1400135f7:	jne    0x140013635
   1400135f9:	mov    ecx,DWORD PTR [rip+0x230a1]        # 0x1400366a0
   1400135ff:	cmp    DWORD PTR [rbx+0x8],ecx
   140013602:	jne    0x140013635
   140013604:	mov    ecx,DWORD PTR [rip+0x2309a]        # 0x1400366a4
   14001360a:	cmp    DWORD PTR [rbx+0xc],ecx
   14001360d:	jne    0x140013635
   14001360f:	mov    rcx,QWORD PTR [r11+0x8]
   140013613:	jmp    0x140013625
   140013615:	mov    rax,QWORD PTR [rcx+0x8]
   140013619:	add    rax,rdi
   14001361c:	cmp    DWORD PTR [rax],0x0
   14001361f:	jne    0x14001367a
   140013621:	add    rcx,0x10
   140013625:	cmp    QWORD PTR [rcx],0x0
   140013629:	jne    0x140013615
   14001362b:	mov    r11,QWORD PTR [r11]
   14001362e:	test   r11,r11
   140013631:	je     0x140013678
   140013633:	jmp    0x14001360f
   140013635:	mov    rdx,QWORD PTR [r11+0x8]
   140013639:	jmp    0x140013668
   14001363b:	cmp    DWORD PTR [rcx],r8d
   14001363e:	jne    0x140013664
   140013640:	mov    eax,DWORD PTR [rbx+0x4]
   140013643:	cmp    DWORD PTR [rcx+0x4],eax
   140013646:	jne    0x140013664
   140013648:	mov    eax,DWORD PTR [rbx+0x8]
   14001364b:	cmp    DWORD PTR [rcx+0x8],eax
   14001364e:	jne    0x140013664
   140013650:	mov    eax,DWORD PTR [rbx+0xc]
   140013653:	cmp    DWORD PTR [rcx+0xc],eax
   140013656:	jne    0x140013664
   140013658:	mov    rax,QWORD PTR [rdx+0x8]
   14001365c:	add    rax,rdi
   14001365f:	cmp    DWORD PTR [rax],0x0
   140013662:	jne    0x14001367a
   140013664:	add    rdx,0x10
   140013668:	mov    rcx,QWORD PTR [rdx]
   14001366b:	test   rcx,rcx
   14001366e:	jne    0x14001363b
   140013670:	mov    r11,QWORD PTR [r11]
   140013673:	test   r11,r11
   140013676:	jne    0x140013635
   140013678:	xor    eax,eax
   14001367a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001367f:	add    rsp,0x20
   140013683:	pop    rdi
   140013684:	ret    
   140013685:	int3   
   140013686:	int3   
   140013687:	int3   
   140013688:	mov    QWORD PTR [rsp+0x10],rbx
   14001368d:	mov    QWORD PTR [rsp+0x18],rbp
   140013692:	mov    QWORD PTR [rsp+0x20],rsi
   140013697:	push   rdi
   140013698:	sub    rsp,0x20
   14001369c:	mov    rax,QWORD PTR [rcx]
   14001369f:	mov    rbp,rdx
   1400136a2:	mov    rsi,rcx
   1400136a5:	call   QWORD PTR [rax+0x70]
   1400136a8:	mov    rdi,rax
   1400136ab:	mov    r8,QWORD PTR [rdi+0x8]
   1400136af:	jmp    0x1400136b5
   1400136b1:	add    r8,0x10
   1400136b5:	cmp    QWORD PTR [r8],0x0
   1400136b9:	jne    0x1400136b1
   1400136bb:	lea    rbx,[r8+0x8]
   1400136bf:	jmp    0x1400136f2
   1400136c1:	mov    rax,QWORD PTR [rbx]
   1400136c4:	mov    rcx,QWORD PTR [rsi+rax*1]
   1400136c8:	test   rcx,rcx
   1400136cb:	je     0x1400136ee
   1400136cd:	mov    rax,QWORD PTR [rcx]
   1400136d0:	and    QWORD PTR [rsp+0x30],0x0
   1400136d6:	lea    r8,[rsp+0x30]
   1400136db:	mov    rdx,rbp
   1400136de:	call   QWORD PTR [rax]
   1400136e0:	test   eax,eax
   1400136e2:	jne    0x1400136ee
   1400136e4:	mov    rax,QWORD PTR [rsp+0x30]
   1400136e9:	test   rax,rax
   1400136ec:	jne    0x140013702
   1400136ee:	add    rbx,0x10
   1400136f2:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   1400136f6:	jne    0x1400136c1
   1400136f8:	mov    rdi,QWORD PTR [rdi]
   1400136fb:	test   rdi,rdi
   1400136fe:	jne    0x1400136ab
   140013700:	xor    eax,eax
   140013702:	mov    rbx,QWORD PTR [rsp+0x38]
   140013707:	mov    rbp,QWORD PTR [rsp+0x40]
   14001370c:	mov    rsi,QWORD PTR [rsp+0x48]
   140013711:	add    rsp,0x20
   140013715:	pop    rdi
   140013716:	ret    
   140013717:	int3   
   140013718:	sub    rsp,0x28
   14001371c:	cmp    QWORD PTR [rcx+0x10],0x0
   140013721:	je     0x14001372f
   140013723:	mov    rcx,QWORD PTR [rcx+0x10]
   140013727:	mov    rax,QWORD PTR [rcx]
   14001372a:	call   QWORD PTR [rax+0x8]
   14001372d:	jmp    0x14001373c
   14001372f:	mov    eax,0x1
   140013734:	lock xadd DWORD PTR [rcx+0x8],eax
   140013739:	add    eax,0x1
   14001373c:	add    rsp,0x28
   140013740:	ret    
   140013741:	int3   
   140013742:	int3   
   140013743:	int3   
   140013744:	rex push rdi
   140013746:	sub    rsp,0x40
   14001374a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013753:	mov    QWORD PTR [rsp+0x50],rbx
   140013758:	mov    rbx,rcx
   14001375b:	cmp    DWORD PTR [rcx+0x8],0x0
   14001375f:	jne    0x140013765
   140013761:	xor    eax,eax
   140013763:	jmp    0x14001379f
   140013765:	or     edi,0xffffffff
   140013768:	lock xadd DWORD PTR [rcx+0x8],edi
   14001376d:	add    edi,0xffffffff
   140013770:	jne    0x14001379d
   140013772:	mov    rdx,QWORD PTR [rcx+0x38]
   140013776:	lea    rcx,[rsp+0x28]
   14001377b:	call   0x14001324c
   140013780:	nop
   140013781:	mov    rdx,QWORD PTR [rbx]
   140013784:	mov    rcx,rbx
   140013787:	call   QWORD PTR [rdx+0x20]
   14001378a:	nop
   14001378b:	cmp    DWORD PTR [rsp+0x30],edi
   14001378f:	je     0x14001379d
   140013791:	mov    rdx,QWORD PTR [rsp+0x28]
   140013796:	xor    ecx,ecx
   140013798:	call   0x140012524
   14001379d:	mov    eax,edi
   14001379f:	mov    rbx,QWORD PTR [rsp+0x50]
   1400137a4:	add    rsp,0x40
   1400137a8:	pop    rdi
   1400137a9:	ret    
   1400137aa:	int3   
   1400137ab:	int3   
   1400137ac:	int3   
   1400137ad:	int3   
   1400137ae:	int3   
   1400137af:	int3   
   1400137b0:	int3   
   1400137b1:	int3   
   1400137b2:	int3   
   1400137b3:	int3   
   1400137b4:	rex push rbp
   1400137b6:	sub    rsp,0x20
   1400137ba:	mov    rbp,rdx
   1400137bd:	lea    rcx,[rbp+0x28]
   1400137c1:	call   0x14000bc5c
   1400137c6:	add    rsp,0x20
   1400137ca:	pop    rbp
   1400137cb:	ret    
   1400137cc:	sub    rsp,0x28
   1400137d0:	cmp    QWORD PTR [rcx+0x10],0x0
   1400137d5:	je     0x1400137e3
   1400137d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400137db:	mov    rax,QWORD PTR [rcx]
   1400137de:	call   QWORD PTR [rax+0x10]
   1400137e1:	jmp    0x1400137e8
   1400137e3:	call   0x140013744
   1400137e8:	add    rsp,0x28
   1400137ec:	ret    
   1400137ed:	int3   
   1400137ee:	int3   
   1400137ef:	int3   
   1400137f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400137f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400137fa:	push   rdi
   1400137fb:	sub    rsp,0x20
   1400137ff:	mov    rdi,r8
   140013802:	mov    rsi,rdx
   140013805:	mov    rbx,rcx
   140013808:	call   0x1400135b4
   14001380d:	mov    rcx,rbx
   140013810:	test   rax,rax
   140013813:	mov    QWORD PTR [rdi],rax
   140013816:	je     0x140013821
   140013818:	call   0x140013718
   14001381d:	xor    eax,eax
   14001381f:	jmp    0x140013838
   140013821:	mov    rdx,rsi
   140013824:	call   0x140013688
   140013829:	mov    QWORD PTR [rdi],rax
   14001382c:	neg    rax
   14001382f:	sbb    eax,eax
   140013831:	not    eax
   140013833:	and    eax,0x80004002
   140013838:	mov    rbx,QWORD PTR [rsp+0x30]
   14001383d:	mov    rsi,QWORD PTR [rsp+0x38]
   140013842:	add    rsp,0x20
   140013846:	pop    rdi
   140013847:	ret    
   140013848:	sub    rsp,0x28
   14001384c:	cmp    QWORD PTR [rcx+0x10],0x0
   140013851:	je     0x14001385e
   140013853:	mov    rcx,QWORD PTR [rcx+0x10]
   140013857:	mov    rax,QWORD PTR [rcx]
   14001385a:	call   QWORD PTR [rax]
   14001385c:	jmp    0x140013863
   14001385e:	call   0x1400137f0
   140013863:	add    rsp,0x28
   140013867:	ret    
   140013868:	rex push rbx
   14001386a:	sub    rsp,0x20
   14001386e:	mov    rbx,rcx
   140013871:	mov    ecx,0xf
   140013876:	call   QWORD PTR [rip+0x1ddac]        # 0x140031628
   14001387c:	mov    ecx,0x10
   140013881:	mov    DWORD PTR [rbx+0x30],eax
   140013884:	call   QWORD PTR [rip+0x1dd9e]        # 0x140031628
   14001388a:	mov    ecx,0x14
   14001388f:	mov    DWORD PTR [rbx+0x34],eax
   140013892:	call   QWORD PTR [rip+0x1dd90]        # 0x140031628
   140013898:	mov    ecx,0x12
   14001389d:	mov    DWORD PTR [rbx+0x38],eax
   1400138a0:	call   QWORD PTR [rip+0x1dd82]        # 0x140031628
   1400138a6:	mov    ecx,0x6
   1400138ab:	mov    DWORD PTR [rbx+0x3c],eax
   1400138ae:	call   QWORD PTR [rip+0x1dd74]        # 0x140031628
   1400138b4:	mov    ecx,0xf
   1400138b9:	mov    DWORD PTR [rbx+0x40],eax
   1400138bc:	call   QWORD PTR [rip+0x1dc66]        # 0x140031528
   1400138c2:	mov    ecx,0x6
   1400138c7:	mov    QWORD PTR [rbx+0x28],rax
   1400138cb:	call   QWORD PTR [rip+0x1dc57]        # 0x140031528
   1400138d1:	mov    QWORD PTR [rbx+0x20],rax
   1400138d5:	add    rsp,0x20
   1400138d9:	pop    rbx
   1400138da:	ret    
   1400138db:	int3   
   1400138dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400138e1:	push   rdi
   1400138e2:	sub    rsp,0x20
   1400138e6:	mov    rdi,rcx
   1400138e9:	mov    ecx,0xb
   1400138ee:	call   QWORD PTR [rip+0x1decc]        # 0x1400317c0
   1400138f4:	mov    ecx,0xc
   1400138f9:	mov    DWORD PTR [rdi+0x8],eax
   1400138fc:	call   QWORD PTR [rip+0x1debe]        # 0x1400317c0
   140013902:	mov    ecx,0x2
   140013907:	mov    DWORD PTR [rdi+0xc],eax
   14001390a:	call   QWORD PTR [rip+0x1deb0]        # 0x1400317c0
   140013910:	mov    ecx,0x3
   140013915:	add    eax,0x1
   140013918:	mov    DWORD PTR [rip+0x31772],eax        # 0x140045090
   14001391e:	call   QWORD PTR [rip+0x1de9c]        # 0x1400317c0
   140013924:	xor    ecx,ecx
   140013926:	add    eax,0x1
   140013929:	mov    DWORD PTR [rip+0x31765],eax        # 0x140045094
   14001392f:	call   QWORD PTR [rip+0x1dc13]        # 0x140031548
   140013935:	mov    edx,0x58
   14001393a:	mov    rcx,rax
   14001393d:	mov    rbx,rax
   140013940:	call   QWORD PTR [rip+0x1d78a]        # 0x1400310d0
   140013946:	mov    edx,0x5a
   14001394b:	mov    rcx,rbx
   14001394e:	mov    DWORD PTR [rdi+0x18],eax
   140013951:	call   QWORD PTR [rip+0x1d779]        # 0x1400310d0
   140013957:	mov    rdx,rbx
   14001395a:	xor    ecx,ecx
   14001395c:	mov    DWORD PTR [rdi+0x1c],eax
   14001395f:	mov    rbx,QWORD PTR [rsp+0x30]
   140013964:	add    rsp,0x20
   140013968:	pop    rdi
   140013969:	rex.W jmp QWORD PTR [rip+0x1dbd0]        # 0x140031540
   140013970:	rex push rbx
   140013972:	sub    rsp,0x20
   140013976:	mov    rbx,rcx
   140013979:	call   QWORD PTR [rip+0x1da41]        # 0x1400313c0
   14001397f:	mov    rcx,rbx
   140013982:	shr    eax,0x1f
   140013985:	mov    DWORD PTR [rbx+0x78],eax
   140013988:	call   0x1400138dc
   14001398d:	and    QWORD PTR [rbx+0x28],0x0
   140013992:	mov    rcx,rbx
   140013995:	call   0x140013868
   14001399a:	mov    edx,0x7f02
   14001399f:	xor    ecx,ecx
   1400139a1:	call   QWORD PTR [rip+0x1db79]        # 0x140031520
   1400139a7:	mov    edx,0x7f00
   1400139ac:	xor    ecx,ecx
   1400139ae:	mov    QWORD PTR [rbx+0x48],rax
   1400139b2:	call   QWORD PTR [rip+0x1db68]        # 0x140031520
   1400139b8:	and    QWORD PTR [rbx+0x70],0x0
   1400139bd:	and    QWORD PTR [rbx+0x58],0x0
   1400139c2:	mov    QWORD PTR [rbx+0x50],rax
   1400139c6:	mov    eax,0x2
   1400139cb:	mov    DWORD PTR [rbx+0x10],eax
   1400139ce:	mov    DWORD PTR [rbx+0x14],eax
   1400139d1:	mov    rax,rbx
   1400139d4:	add    rsp,0x20
   1400139d8:	pop    rbx
   1400139d9:	ret    
   1400139da:	int3   
   1400139db:	int3   
   1400139dc:	sub    rsp,0x468
   1400139e3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400139ec:	mov    rax,QWORD PTR [rip+0x2c5dd]        # 0x14003ffd0
   1400139f3:	xor    rax,rsp
   1400139f6:	mov    QWORD PTR [rsp+0x450],rax
   1400139fe:	add    rcx,0x70
   140013a02:	call   0x140015bc0
   140013a07:	nop
   140013a08:	mov    rcx,QWORD PTR [rsp+0x450]
   140013a10:	xor    rcx,rsp
   140013a13:	call   0x140019370
   140013a18:	add    rsp,0x468
   140013a1f:	ret    
   140013a20:	int3   
   140013a21:	int3   
   140013a22:	int3   
   140013a23:	int3   
   140013a24:	int3   
   140013a25:	int3   
   140013a26:	int3   
   140013a27:	int3   
   140013a28:	int3   
   140013a29:	int3   
   140013a2a:	int3   
   140013a2b:	int3   
   140013a2c:	mov    QWORD PTR [rsp+0x10],rdx
   140013a31:	push   rbx
   140013a32:	push   rbp
   140013a33:	sub    rsp,0x38
   140013a37:	mov    rbp,rdx
   140013a3a:	call   0x14000669c
   140013a3f:	mov    r11,rax
   140013a42:	xor    ecx,ecx
   140013a44:	test   rax,rax
   140013a47:	setne  cl
   140013a4a:	test   ecx,ecx
   140013a4c:	jne    0x140013a59
   140013a4e:	mov    ecx,0x80004005
   140013a53:	call   0x1400015c0
   140013a58:	int3   
   140013a59:	mov    rax,QWORD PTR [rax]
   140013a5c:	mov    rcx,r11
   140013a5f:	call   QWORD PTR [rax+0x18]
   140013a62:	add    rax,0x18
   140013a66:	mov    QWORD PTR [rbp+0x30],rax
   140013a6a:	mov    rcx,QWORD PTR [rbp+0x38]
   140013a6e:	mov    rax,QWORD PTR [rcx]
   140013a71:	xor    r9d,r9d
   140013a74:	mov    r8d,0x200
   140013a7a:	lea    rdx,[rbp+0x50]
   140013a7e:	call   QWORD PTR [rax+0x18]
   140013a81:	test   eax,eax
   140013a83:	je     0x140013ab6
   140013a85:	lea    rax,[rbp+0x50]
   140013a89:	mov    QWORD PTR [rsp+0x28],rax
   140013a8e:	mov    DWORD PTR [rsp+0x20],0x3c
   140013a96:	lea    r9,[rip+0x2093b]        # 0x1400343d8
   140013a9d:	lea    r8,[rip+0x1e914]        # 0x1400323b8
   140013aa4:	lea    rdx,[rip+0x1e8ed]        # 0x140032398
   140013aab:	lea    rcx,[rbp+0x30]
   140013aaf:	call   0x140002e70
   140013ab4:	jmp    0x140013adc
   140013ab6:	mov    DWORD PTR [rsp+0x20],0x3c
   140013abe:	lea    r9,[rip+0x20913]        # 0x1400343d8
   140013ac5:	lea    r8,[rip+0x1e8ec]        # 0x1400323b8
   140013acc:	lea    rdx,[rip+0x1e8ad]        # 0x140032380
   140013ad3:	lea    rcx,[rbp+0x30]
   140013ad7:	call   0x140002e70
   140013adc:	xor    r8d,r8d
   140013adf:	xor    edx,edx
   140013ae1:	mov    rbx,QWORD PTR [rbp+0x30]
   140013ae5:	mov    rcx,rbx
   140013ae8:	call   0x140008508
   140013aed:	nop
   140013aee:	lea    rdx,[rbx-0x18]
   140013af2:	or     eax,0xffffffff
   140013af5:	lock xadd DWORD PTR [rdx+0x10],eax
   140013afa:	add    eax,0xffffffff
   140013afd:	test   eax,eax
   140013aff:	jg     0x140013b0a
   140013b01:	mov    rcx,QWORD PTR [rdx]
   140013b04:	mov    rax,QWORD PTR [rcx]
   140013b07:	call   QWORD PTR [rax+0x8]
   140013b0a:	mov    rcx,QWORD PTR [rbp+0x38]
   140013b0e:	mov    rax,QWORD PTR [rcx]
   140013b11:	mov    edx,0x1
   140013b16:	call   QWORD PTR [rax+0x8]
   140013b19:	nop
   140013b1a:	lea    rax,[rip+0xfffffffffffffee7]        # 0x140013a08
   140013b21:	jmp    0x140013b23
   140013b23:	add    rsp,0x38
   140013b27:	pop    rbp
   140013b28:	pop    rbx
   140013b29:	ret    
   140013b2a:	int3   
   140013b2b:	int3   
   140013b2c:	rex push rbp
   140013b2e:	sub    rsp,0x20
   140013b32:	mov    rbp,rdx
   140013b35:	lea    rcx,[rbp+0x30]
   140013b39:	call   0x140001dc0
   140013b3e:	add    rsp,0x20
   140013b42:	pop    rbp
   140013b43:	ret    
   140013b44:	sub    rsp,0x28
   140013b48:	mov    rdx,rcx
   140013b4b:	mov    ecx,0x40
   140013b50:	call   QWORD PTR [rip+0x1d812]        # 0x140031368
   140013b56:	test   rax,rax
   140013b59:	jne    0x140013b61
   140013b5b:	call   0x1400063c0
   140013b60:	int3   
   140013b61:	add    rsp,0x28
   140013b65:	ret    
   140013b66:	int3   
   140013b67:	int3   
   140013b68:	sub    rsp,0x28
   140013b6c:	test   rcx,rcx
   140013b6f:	je     0x140013b77
   140013b71:	call   QWORD PTR [rip+0x1d8b9]        # 0x140031430
   140013b77:	add    rsp,0x28
   140013b7b:	ret    
   140013b7c:	mov    QWORD PTR [rsp+0x8],rbx
   140013b81:	mov    QWORD PTR [rsp+0x10],rsi
   140013b86:	push   rdi
   140013b87:	sub    rsp,0x20
   140013b8b:	mov    rsi,rcx
   140013b8e:	add    rcx,0x28
   140013b92:	movsxd rbx,edx
   140013b95:	call   QWORD PTR [rip+0x1d7b5]        # 0x140031350
   140013b9b:	test   ebx,ebx
   140013b9d:	jle    0x140013bcd
   140013b9f:	cmp    ebx,DWORD PTR [rsi+0xc]
   140013ba2:	jge    0x140013bcd
   140013ba4:	mov    ecx,DWORD PTR [rsi]
   140013ba6:	call   QWORD PTR [rip+0x1d7ac]        # 0x140031358
   140013bac:	test   rax,rax
   140013baf:	je     0x140013bcd
   140013bb1:	cmp    ebx,DWORD PTR [rax+0x10]
   140013bb4:	jge    0x140013bcd
   140013bb6:	mov    rax,QWORD PTR [rax+0x18]
   140013bba:	lea    rcx,[rsi+0x28]
   140013bbe:	mov    rbx,QWORD PTR [rax+rbx*8]
   140013bc2:	call   QWORD PTR [rip+0x1d798]        # 0x140031360
   140013bc8:	mov    rax,rbx
   140013bcb:	jmp    0x140013bd9
   140013bcd:	lea    rcx,[rsi+0x28]
   140013bd1:	call   QWORD PTR [rip+0x1d789]        # 0x140031360
   140013bd7:	xor    eax,eax
   140013bd9:	mov    rbx,QWORD PTR [rsp+0x30]
   140013bde:	mov    rsi,QWORD PTR [rsp+0x38]
   140013be3:	add    rsp,0x20
   140013be7:	pop    rdi
   140013be8:	ret    
   140013be9:	int3   
   140013bea:	int3   
   140013beb:	int3   
   140013bec:	sub    rsp,0x28
   140013bf0:	mov    edx,DWORD PTR [rcx]
   140013bf2:	test   edx,edx
   140013bf4:	je     0x140013c09
   140013bf6:	mov    rcx,QWORD PTR [rip+0x31513]        # 0x140045110
   140013bfd:	test   rcx,rcx
   140013c00:	je     0x140013c09
   140013c02:	call   0x140013b7c
   140013c07:	jmp    0x140013c0b
   140013c09:	xor    eax,eax
   140013c0b:	add    rsp,0x28
   140013c0f:	ret    
   140013c10:	rex push rdi
   140013c12:	sub    rsp,0x30
   140013c16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013c1f:	mov    QWORD PTR [rsp+0x40],rbx
   140013c24:	mov    rdi,rdx
   140013c27:	mov    rbx,rcx
   140013c2a:	mov    rax,QWORD PTR [rcx]
   140013c2d:	test   rax,rax
   140013c30:	jne    0x140013c52
   140013c32:	lea    ecx,[rax+0x10]
   140013c35:	call   0x140015804
   140013c3a:	nop
   140013c3b:	mov    rax,QWORD PTR [rbx]
   140013c3e:	test   rax,rax
   140013c41:	jne    0x140013c48
   140013c43:	call   rdi
   140013c45:	mov    QWORD PTR [rbx],rax
   140013c48:	mov    ecx,0x10
   140013c4d:	call   0x140015898
   140013c52:	mov    rax,QWORD PTR [rbx]
   140013c55:	mov    rbx,QWORD PTR [rsp+0x40]
   140013c5a:	add    rsp,0x30
   140013c5e:	pop    rdi
   140013c5f:	ret    
   140013c60:	mov    QWORD PTR [rsp+0x10],rdx
   140013c65:	push   rbp
   140013c66:	sub    rsp,0x20
   140013c6a:	mov    rbp,rdx
   140013c6d:	mov    ecx,0x10
   140013c72:	call   0x140015898
   140013c77:	xor    edx,edx
   140013c79:	xor    ecx,ecx
   140013c7b:	call   0x14001b070
   140013c80:	nop
   140013c81:	add    rsp,0x20
   140013c85:	pop    rbp
   140013c86:	ret    
   140013c87:	int3   
   140013c88:	sub    rsp,0x28
   140013c8c:	mov    rax,QWORD PTR [rcx]
   140013c8f:	test   rax,rax
   140013c92:	je     0x140013cbf
   140013c94:	mov    rax,QWORD PTR [rcx]
   140013c97:	mov    QWORD PTR [rsp+0x30],rax
   140013c9c:	mov    rax,QWORD PTR [rsp+0x30]
   140013ca1:	mov    QWORD PTR [rsp+0x30],rax
   140013ca6:	mov    rax,QWORD PTR [rsp+0x30]
   140013cab:	test   rax,rax
   140013cae:	je     0x140013cbf
   140013cb0:	mov    rcx,QWORD PTR [rsp+0x30]
   140013cb5:	mov    edx,0x1
   140013cba:	mov    rax,QWORD PTR [rcx]
   140013cbd:	call   QWORD PTR [rax]
   140013cbf:	add    rsp,0x28
   140013cc3:	ret    
   140013cc4:	sub    rsp,0x28
   140013cc8:	test   rdx,rdx
   140013ccb:	mov    r8,rcx
   140013cce:	jne    0x140013cd6
   140013cd0:	call   0x140006408
   140013cd5:	int3   
   140013cd6:	mov    rax,QWORD PTR [r8]
   140013cd9:	mov    rcx,QWORD PTR [rcx+0x8]
   140013cdd:	mov    QWORD PTR [rdx+rcx*1],rax
   140013ce1:	mov    QWORD PTR [r8],rdx
   140013ce4:	add    rsp,0x28
   140013ce8:	ret    
   140013ce9:	int3   
   140013cea:	int3   
   140013ceb:	int3   
   140013cec:	sub    rsp,0x28
   140013cf0:	mov    r9,QWORD PTR [rcx]
   140013cf3:	xor    r8d,r8d
   140013cf6:	mov    r10,rcx
   140013cf9:	cmp    r9,r8
   140013cfc:	jne    0x140013d05
   140013cfe:	xor    eax,eax
   140013d00:	add    rsp,0x28
   140013d04:	ret    
   140013d05:	cmp    r9,rdx
   140013d08:	jne    0x140013d22
   140013d0a:	cmp    rdx,r8
   140013d0d:	jne    0x140013d15
   140013d0f:	call   0x140006408
   140013d14:	int3   
   140013d15:	mov    rax,QWORD PTR [rcx+0x8]
   140013d19:	mov    rcx,QWORD PTR [rdx+rax*1]
   140013d1d:	mov    QWORD PTR [r10],rcx
   140013d20:	jmp    0x140013d54
   140013d22:	cmp    r9,r8
   140013d25:	je     0x140013d5f
   140013d27:	mov    rax,QWORD PTR [r10+0x8]
   140013d2b:	lea    rcx,[rax+r9*1]
   140013d2f:	cmp    QWORD PTR [rcx],rdx
   140013d32:	je     0x140013d3e
   140013d34:	mov    r9,QWORD PTR [rcx]
   140013d37:	cmp    r9,r8
   140013d3a:	jne    0x140013d27
   140013d3c:	jmp    0x140013d5a
   140013d3e:	cmp    rdx,r8
   140013d41:	jne    0x140013d49
   140013d43:	call   0x140006408
   140013d48:	int3   
   140013d49:	mov    rcx,rax
   140013d4c:	mov    rax,QWORD PTR [rax+rdx*1]
   140013d50:	mov    QWORD PTR [rcx+r9*1],rax
   140013d54:	mov    r8d,0x1
   140013d5a:	mov    eax,r8d
   140013d5d:	jmp    0x140013d00
   140013d5f:	call   0x140006408
   140013d64:	int3   
   140013d65:	int3   
   140013d66:	int3   
   140013d67:	int3   
   140013d68:	rex push rbx
   140013d6a:	sub    rsp,0x20
   140013d6e:	xor    eax,eax
   140013d70:	mov    rbx,rcx
   140013d73:	mov    QWORD PTR [rcx+0x18],rax
   140013d77:	mov    QWORD PTR [rcx+0x20],0x8
   140013d7f:	mov    DWORD PTR [rcx+0x4],eax
   140013d82:	mov    DWORD PTR [rcx+0x8],0x1
   140013d89:	mov    DWORD PTR [rcx+0xc],eax
   140013d8c:	mov    QWORD PTR [rcx+0x10],rax
   140013d90:	call   QWORD PTR [rip+0x1d5aa]        # 0x140031340
   140013d96:	cmp    eax,0xffffffff
   140013d99:	mov    DWORD PTR [rbx],eax
   140013d9b:	jne    0x140013da3
   140013d9d:	call   0x1400063c0
   140013da2:	int3   
   140013da3:	lea    rcx,[rbx+0x28]
   140013da7:	call   QWORD PTR [rip+0x1d59b]        # 0x140031348
   140013dad:	mov    rax,rbx
   140013db0:	add    rsp,0x20
   140013db4:	pop    rbx
   140013db5:	ret    
   140013db6:	int3   
   140013db7:	int3   
   140013db8:	mov    rax,rsp
   140013dbb:	mov    QWORD PTR [rax+0x8],rbx
   140013dbf:	mov    QWORD PTR [rax+0x10],rbp
   140013dc3:	mov    QWORD PTR [rax+0x18],rsi
   140013dc7:	mov    QWORD PTR [rax+0x20],rdi
   140013dcb:	push   r12
   140013dcd:	sub    rsp,0x20
   140013dd1:	mov    rdi,rcx
   140013dd4:	add    rcx,0x28
   140013dd8:	call   QWORD PTR [rip+0x1d572]        # 0x140031350
   140013dde:	movsxd rcx,DWORD PTR [rdi+0x4]
   140013de2:	movsxd rsi,DWORD PTR [rdi+0x8]
   140013de6:	cmp    esi,ecx
   140013de8:	jge    0x140013dfe
   140013dea:	mov    rax,QWORD PTR [rdi+0x10]
   140013dee:	mov    rdx,rsi
   140013df1:	add    rdx,rdx
   140013df4:	test   BYTE PTR [rax+rdx*8],0x1
   140013df8:	je     0x140013f08
   140013dfe:	mov    esi,0x1
   140013e03:	mov    rdx,rsi
   140013e06:	cmp    rdx,rcx
   140013e09:	jge    0x140013e28
   140013e0b:	mov    rax,QWORD PTR [rdi+0x10]
   140013e0f:	add    rax,0x10
   140013e13:	test   BYTE PTR [rax],0x1
   140013e16:	je     0x140013e28
   140013e18:	add    rdx,0x1
   140013e1c:	add    esi,0x1
   140013e1f:	add    rax,0x10
   140013e23:	cmp    rdx,rcx
   140013e26:	jl     0x140013e13
   140013e28:	cmp    esi,ecx
   140013e2a:	jl     0x140013f08
   140013e30:	lea    r12d,[rcx+0x20]
   140013e34:	mov    rcx,QWORD PTR [rdi+0x10]
   140013e38:	test   rcx,rcx
   140013e3b:	jne    0x140013e68
   140013e3d:	mov    eax,r12d
   140013e40:	mov    ecx,0xffffffff
   140013e45:	shl    rax,0x4
   140013e49:	cmp    rax,rcx
   140013e4c:	jbe    0x140013e59
   140013e4e:	mov    ecx,0x80070057
   140013e53:	call   0x1400015c0
   140013e58:	int3   
   140013e59:	mov    edx,eax
   140013e5b:	mov    ecx,0x2
   140013e60:	call   QWORD PTR [rip+0x1d5aa]        # 0x140031410
   140013e66:	jmp    0x140013ea8
   140013e68:	call   QWORD PTR [rip+0x1d4c2]        # 0x140031330
   140013e6e:	mov    rcx,rax
   140013e71:	mov    rbx,rax
   140013e74:	call   QWORD PTR [rip+0x1d5a6]        # 0x140031420
   140013e7a:	mov    r11d,r12d
   140013e7d:	mov    ecx,0xffffffff
   140013e82:	shl    r11,0x4
   140013e86:	cmp    r11,rcx
   140013e89:	jbe    0x140013e96
   140013e8b:	mov    ecx,0x80070057
   140013e90:	call   0x1400015c0
   140013e95:	int3   
   140013e96:	mov    edx,r11d
   140013e99:	mov    r8d,0x2002
   140013e9f:	mov    rcx,rbx
   140013ea2:	call   QWORD PTR [rip+0x1d490]        # 0x140031338
   140013ea8:	test   rax,rax
   140013eab:	jne    0x140013ed5
   140013ead:	mov    rcx,QWORD PTR [rdi+0x10]
   140013eb1:	test   rcx,rcx
   140013eb4:	je     0x140013ec5
   140013eb6:	call   QWORD PTR [rip+0x1d474]        # 0x140031330
   140013ebc:	mov    rcx,rax
   140013ebf:	call   QWORD PTR [rip+0x1d553]        # 0x140031418
   140013ec5:	lea    rcx,[rdi+0x28]
   140013ec9:	call   QWORD PTR [rip+0x1d491]        # 0x140031360
   140013ecf:	call   0x1400063c0
   140013ed4:	int3   
   140013ed5:	mov    rcx,rax
   140013ed8:	call   QWORD PTR [rip+0x1d53a]        # 0x140031418
   140013ede:	movsxd rcx,DWORD PTR [rdi+0x4]
   140013ee2:	xor    edx,edx
   140013ee4:	mov    rbx,rax
   140013ee7:	mov    eax,r12d
   140013eea:	shl    rcx,0x4
   140013eee:	sub    eax,DWORD PTR [rdi+0x4]
   140013ef1:	add    rcx,rbx
   140013ef4:	movsxd r8,eax
   140013ef7:	shl    r8,0x4
   140013efb:	call   0x14001b520
   140013f00:	mov    DWORD PTR [rdi+0x4],r12d
   140013f04:	mov    QWORD PTR [rdi+0x10],rbx
   140013f08:	cmp    esi,DWORD PTR [rdi+0xc]
   140013f0b:	jl     0x140013f13
   140013f0d:	lea    ecx,[rsi+0x1]
   140013f10:	mov    DWORD PTR [rdi+0xc],ecx
   140013f13:	mov    rcx,QWORD PTR [rdi+0x10]
   140013f17:	movsxd rdx,esi
   140013f1a:	add    rdx,rdx
   140013f1d:	or     DWORD PTR [rcx+rdx*8],0x1
   140013f21:	lea    ecx,[rsi+0x1]
   140013f24:	mov    DWORD PTR [rdi+0x8],ecx
   140013f27:	lea    rcx,[rdi+0x28]
   140013f2b:	call   QWORD PTR [rip+0x1d42f]        # 0x140031360
   140013f31:	mov    rbx,QWORD PTR [rsp+0x30]
   140013f36:	mov    rbp,QWORD PTR [rsp+0x38]
   140013f3b:	mov    rdi,QWORD PTR [rsp+0x48]
   140013f40:	mov    eax,esi
   140013f42:	mov    rsi,QWORD PTR [rsp+0x40]
   140013f47:	add    rsp,0x20
   140013f4b:	pop    r12
   140013f4d:	ret    
   140013f4e:	int3   
   140013f4f:	int3   
   140013f50:	mov    rax,rsp
   140013f53:	mov    QWORD PTR [rax+0x8],rbx
   140013f57:	mov    QWORD PTR [rax+0x10],rbp
   140013f5b:	mov    QWORD PTR [rax+0x18],rsi
   140013f5f:	mov    QWORD PTR [rax+0x20],rdi
   140013f63:	push   r12
   140013f65:	sub    rsp,0x20
   140013f69:	mov    rsi,rcx
   140013f6c:	add    rcx,0x28
   140013f70:	movsxd rdi,edx
   140013f73:	call   QWORD PTR [rip+0x1d3d7]        # 0x140031350
   140013f79:	test   edi,edi
   140013f7b:	jle    0x140013fce
   140013f7d:	cmp    edi,DWORD PTR [rsi+0xc]
   140013f80:	jge    0x140013fce
   140013f82:	mov    rbx,QWORD PTR [rsi+0x18]
   140013f86:	jmp    0x140013fb1
   140013f88:	cmp    edi,DWORD PTR [rbx+0x10]
   140013f8b:	jge    0x140013fad
   140013f8d:	mov    rax,QWORD PTR [rbx+0x18]
   140013f91:	mov    rcx,QWORD PTR [rax+rdi*8]
   140013f95:	test   rcx,rcx
   140013f98:	je     0x140013fa4
   140013f9a:	mov    rax,QWORD PTR [rcx]
   140013f9d:	mov    edx,0x1
   140013fa2:	call   QWORD PTR [rax]
   140013fa4:	mov    rax,QWORD PTR [rbx+0x18]
   140013fa8:	and    QWORD PTR [rax+rdi*8],0x0
   140013fad:	mov    rbx,QWORD PTR [rbx+0x8]
   140013fb1:	test   rbx,rbx
   140013fb4:	jne    0x140013f88
   140013fb6:	mov    rax,QWORD PTR [rsi+0x10]
   140013fba:	mov    rdx,rdi
   140013fbd:	lea    rcx,[rsi+0x28]
   140013fc1:	add    rdx,rdx
   140013fc4:	and    DWORD PTR [rax+rdx*8],0xfffffffe
   140013fc8:	call   QWORD PTR [rip+0x1d392]        # 0x140031360
   140013fce:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fd3:	mov    rbp,QWORD PTR [rsp+0x38]
   140013fd8:	mov    rsi,QWORD PTR [rsp+0x40]
   140013fdd:	mov    rdi,QWORD PTR [rsp+0x48]
   140013fe2:	add    rsp,0x20
   140013fe6:	pop    r12
   140013fe8:	ret    
   140013fe9:	int3   
   140013fea:	int3   
   140013feb:	int3   
   140013fec:	mov    QWORD PTR [rsp+0x8],rcx
   140013ff1:	push   rdi
   140013ff2:	push   r12
   140013ff4:	push   r13
   140013ff6:	sub    rsp,0x30
   140013ffa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014003:	mov    QWORD PTR [rsp+0x58],rbx
   140014008:	mov    QWORD PTR [rsp+0x60],rsi
   14001400d:	mov    r13,r8
   140014010:	movsxd rsi,edx
   140014013:	mov    rdi,rcx
   140014016:	add    rcx,0x28
   14001401a:	call   QWORD PTR [rip+0x1d330]        # 0x140031350
   140014020:	test   esi,esi
   140014022:	jle    0x140014157
   140014028:	cmp    esi,DWORD PTR [rdi+0xc]
   14001402b:	jge    0x140014157
   140014031:	mov    ecx,DWORD PTR [rdi]
   140014033:	call   QWORD PTR [rip+0x1d31f]        # 0x140031358
   140014039:	mov    rbx,rax
   14001403c:	test   rax,rax
   14001403f:	je     0x140014055
   140014041:	cmp    esi,DWORD PTR [rax+0x10]
   140014044:	jl     0x140014139
   14001404a:	test   r13,r13
   14001404d:	je     0x140014139
   140014053:	jmp    0x14001408e
   140014055:	mov    ecx,0x20
   14001405a:	call   0x140013b44
   14001405f:	mov    rbx,rax
   140014062:	test   rax,rax
   140014065:	je     0x140014073
   140014067:	lea    rax,[rip+0x203d2]        # 0x140034440
   14001406e:	mov    QWORD PTR [rbx],rax
   140014071:	jmp    0x140014075
   140014073:	xor    ebx,ebx
   140014075:	and    DWORD PTR [rbx+0x10],0x0
   140014079:	and    QWORD PTR [rbx+0x18],0x0
   14001407e:	mov    rcx,QWORD PTR [rdi+0x20]
   140014082:	mov    rax,QWORD PTR [rdi+0x18]
   140014086:	mov    QWORD PTR [rbx+rcx*1],rax
   14001408a:	mov    QWORD PTR [rdi+0x18],rbx
   14001408e:	cmp    QWORD PTR [rbx+0x18],0x0
   140014093:	jne    0x1400140c0
   140014095:	mov    eax,DWORD PTR [rdi+0xc]
   140014098:	shl    rax,0x3
   14001409c:	mov    ecx,0xffffffff
   1400140a1:	cmp    rax,rcx
   1400140a4:	jbe    0x1400140b1
   1400140a6:	mov    ecx,0x80070057
   1400140ab:	call   0x1400015c0
   1400140b0:	int3   
   1400140b1:	mov    edx,eax
   1400140b3:	xor    ecx,ecx
   1400140b5:	call   QWORD PTR [rip+0x1d2ad]        # 0x140031368
   1400140bb:	mov    r11,rax
   1400140be:	jmp    0x1400140f1
   1400140c0:	mov    eax,DWORD PTR [rdi+0xc]
   1400140c3:	shl    rax,0x3
   1400140c7:	mov    ecx,0xffffffff
   1400140cc:	cmp    rax,rcx
   1400140cf:	jbe    0x1400140dc
   1400140d1:	mov    ecx,0x80070057
   1400140d6:	call   0x1400015c0
   1400140db:	int3   
   1400140dc:	mov    edx,eax
   1400140de:	mov    r8d,0x2
   1400140e4:	mov    rcx,QWORD PTR [rbx+0x18]
   1400140e8:	call   QWORD PTR [rip+0x1d232]        # 0x140031320
   1400140ee:	mov    r11,rax
   1400140f1:	test   r11,r11
   1400140f4:	jne    0x140014106
   1400140f6:	lea    rcx,[rdi+0x28]
   1400140fa:	call   QWORD PTR [rip+0x1d260]        # 0x140031360
   140014100:	call   0x1400063c0
   140014105:	int3   
   140014106:	mov    QWORD PTR [rbx+0x18],r11
   14001410a:	mov    eax,DWORD PTR [rdi+0xc]
   14001410d:	sub    eax,DWORD PTR [rbx+0x10]
   140014110:	movsxd r8,eax
   140014113:	shl    r8,0x3
   140014117:	movsxd rax,DWORD PTR [rbx+0x10]
   14001411b:	lea    rcx,[r11+rax*8]
   14001411f:	xor    edx,edx
   140014121:	call   0x14001b520
   140014126:	mov    r11d,DWORD PTR [rdi+0xc]
   14001412a:	mov    DWORD PTR [rbx+0x10],r11d
   14001412e:	mov    rdx,rbx
   140014131:	mov    ecx,DWORD PTR [rdi]
   140014133:	call   QWORD PTR [rip+0x1d1ef]        # 0x140031328
   140014139:	mov    rcx,QWORD PTR [rbx+0x18]
   14001413d:	test   rcx,rcx
   140014140:	je     0x14001414b
   140014142:	cmp    esi,DWORD PTR [rbx+0x10]
   140014145:	jge    0x14001414b
   140014147:	mov    QWORD PTR [rcx+rsi*8],r13
   14001414b:	lea    rcx,[rdi+0x28]
   14001414f:	call   QWORD PTR [rip+0x1d20b]        # 0x140031360
   140014155:	jmp    0x140014161
   140014157:	lea    rcx,[rdi+0x28]
   14001415b:	call   QWORD PTR [rip+0x1d1ff]        # 0x140031360
   140014161:	mov    rbx,QWORD PTR [rsp+0x58]
   140014166:	mov    rsi,QWORD PTR [rsp+0x60]
   14001416b:	add    rsp,0x30
   14001416f:	pop    r13
   140014171:	pop    r12
   140014173:	pop    rdi
   140014174:	ret    
   140014175:	int3   
   140014176:	int3   
   140014177:	int3   
   140014178:	int3   
   140014179:	int3   
   14001417a:	int3   
   14001417b:	int3   
   14001417c:	mov    QWORD PTR [rsp+0x10],rdx
   140014181:	push   rbp
   140014182:	sub    rsp,0x20
   140014186:	mov    rbp,rdx
   140014189:	mov    rcx,QWORD PTR [rbp+0x50]
   14001418d:	add    rcx,0x28
   140014191:	call   QWORD PTR [rip+0x1d1c9]        # 0x140031360
   140014197:	xor    edx,edx
   140014199:	xor    ecx,ecx
   14001419b:	call   0x14001b070
   1400141a0:	nop
   1400141a1:	add    rsp,0x20
   1400141a5:	pop    rbp
   1400141a6:	ret    
   1400141a7:	int3   
   1400141a8:	rex push rbx
   1400141aa:	sub    rsp,0x20
   1400141ae:	test   dl,0x1
   1400141b1:	mov    rbx,rcx
   1400141b4:	je     0x1400141c1
   1400141b6:	test   rcx,rcx
   1400141b9:	je     0x1400141c1
   1400141bb:	call   QWORD PTR [rip+0x1d26f]        # 0x140031430
   1400141c1:	mov    rax,rbx
   1400141c4:	add    rsp,0x20
   1400141c8:	pop    rbx
   1400141c9:	ret    
   1400141ca:	int3   
   1400141cb:	int3   
   1400141cc:	mov    rax,rsp
   1400141cf:	mov    QWORD PTR [rax+0x8],rbx
   1400141d3:	mov    QWORD PTR [rax+0x10],rbp
   1400141d7:	mov    QWORD PTR [rax+0x18],rsi
   1400141db:	mov    QWORD PTR [rax+0x20],rdi
   1400141df:	push   r12
   1400141e1:	push   r13
   1400141e3:	push   r14
   1400141e5:	sub    rsp,0x20
   1400141e9:	mov    esi,0x1
   1400141ee:	mov    r14,r8
   1400141f1:	mov    rdi,rdx
   1400141f4:	cmp    DWORD PTR [rdx+0x10],esi
   1400141f7:	mov    r12,rcx
   1400141fa:	mov    ebp,esi
   1400141fc:	jle    0x140014259
   1400141fe:	lea    ebx,[rsi+0x7]
   140014201:	lea    r13d,[rsi+0xf]
   140014205:	test   r14,r14
   140014208:	je     0x140014225
   14001420a:	mov    rax,QWORD PTR [r12+0x10]
   14001420f:	cmp    QWORD PTR [rax+r13*1+0x8],r14
   140014214:	je     0x140014225
   140014216:	mov    rax,QWORD PTR [rdi+0x18]
   14001421a:	cmp    QWORD PTR [rbx+rax*1],0x0
   14001421f:	je     0x140014245
   140014221:	xor    esi,esi
   140014223:	jmp    0x140014245
   140014225:	mov    rax,QWORD PTR [rdi+0x18]
   140014229:	mov    rcx,QWORD PTR [rbx+rax*1]
   14001422d:	test   rcx,rcx
   140014230:	je     0x14001423c
   140014232:	mov    rax,QWORD PTR [rcx]
   140014235:	mov    edx,0x1
   14001423a:	call   QWORD PTR [rax]
   14001423c:	mov    rax,QWORD PTR [rdi+0x18]
   140014240:	and    QWORD PTR [rbx+rax*1],0x0
   140014245:	add    ebp,0x1
   140014248:	add    r13,0x10
   14001424c:	add    rbx,0x8
   140014250:	cmp    ebp,DWORD PTR [rdi+0x10]
   140014253:	jl     0x140014205
   140014255:	test   esi,esi
   140014257:	je     0x1400142a0
   140014259:	lea    rcx,[r12+0x28]
   14001425e:	call   QWORD PTR [rip+0x1d0ec]        # 0x140031350
   140014264:	lea    rcx,[r12+0x18]
   140014269:	mov    rdx,rdi
   14001426c:	call   0x140013cec
   140014271:	lea    rcx,[r12+0x28]
   140014276:	call   QWORD PTR [rip+0x1d0e4]        # 0x140031360
   14001427c:	mov    rcx,QWORD PTR [rdi+0x18]
   140014280:	call   QWORD PTR [rip+0x1d1aa]        # 0x140031430
   140014286:	mov    r11,QWORD PTR [rdi]
   140014289:	mov    edx,0x1
   14001428e:	mov    rcx,rdi
   140014291:	call   QWORD PTR [r11]
   140014294:	mov    ecx,DWORD PTR [r12]
   140014298:	xor    edx,edx
   14001429a:	call   QWORD PTR [rip+0x1d088]        # 0x140031328
   1400142a0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400142a5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400142aa:	mov    rsi,QWORD PTR [rsp+0x50]
   1400142af:	mov    rdi,QWORD PTR [rsp+0x58]
   1400142b4:	add    rsp,0x20
   1400142b8:	pop    r14
   1400142ba:	pop    r13
   1400142bc:	pop    r12
   1400142be:	ret    
   1400142bf:	int3   
   1400142c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400142c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400142ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400142cf:	push   rdi
   1400142d0:	sub    rsp,0x20
   1400142d4:	mov    rdi,rcx
   1400142d7:	add    rcx,0x28
   1400142db:	mov    ebx,r8d
   1400142de:	mov    rbp,rdx
   1400142e1:	call   QWORD PTR [rip+0x1d069]        # 0x140031350
   1400142e7:	test   ebx,ebx
   1400142e9:	jne    0x140014308
   1400142eb:	mov    ecx,DWORD PTR [rdi]
   1400142ed:	call   QWORD PTR [rip+0x1d065]        # 0x140031358
   1400142f3:	test   rax,rax
   1400142f6:	je     0x140014328
   1400142f8:	mov    r8,rbp
   1400142fb:	mov    rdx,rax
   1400142fe:	mov    rcx,rdi
   140014301:	call   0x1400141cc
   140014306:	jmp    0x140014328
   140014308:	mov    rdx,QWORD PTR [rdi+0x18]
   14001430c:	test   rdx,rdx
   14001430f:	je     0x140014328
   140014311:	mov    rbx,QWORD PTR [rdx+0x8]
   140014315:	mov    r8,rbp
   140014318:	mov    rcx,rdi
   14001431b:	call   0x1400141cc
   140014320:	test   rbx,rbx
   140014323:	mov    rdx,rbx
   140014326:	jne    0x140014311
   140014328:	lea    rcx,[rdi+0x28]
   14001432c:	mov    rbx,QWORD PTR [rsp+0x30]
   140014331:	mov    rbp,QWORD PTR [rsp+0x38]
   140014336:	mov    rsi,QWORD PTR [rsp+0x40]
   14001433b:	add    rsp,0x20
   14001433f:	pop    rdi
   140014340:	rex.W jmp QWORD PTR [rip+0x1d019]        # 0x140031360
   140014347:	int3   
   140014348:	rex push rdi
   14001434a:	sub    rsp,0x30
   14001434e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014357:	mov    QWORD PTR [rsp+0x40],rbx
   14001435c:	mov    QWORD PTR [rsp+0x50],rsi
   140014361:	mov    rsi,rdx
   140014364:	mov    rdi,rcx
   140014367:	xor    eax,eax
   140014369:	test   rdx,rdx
   14001436c:	setne  al
   14001436f:	test   eax,eax
   140014371:	jne    0x140014379
   140014373:	call   0x140006408
   140014378:	int3   
   140014379:	cmp    DWORD PTR [rcx],0x0
   14001437c:	jne    0x1400143c2
   14001437e:	mov    rax,QWORD PTR [rip+0x30d8b]        # 0x140045110
   140014385:	test   rax,rax
   140014388:	jne    0x1400143ae
   14001438a:	lea    rcx,[rip+0x30d8f]        # 0x140045120
   140014391:	mov    QWORD PTR [rsp+0x48],rcx
   140014396:	call   0x140013d68
   14001439b:	nop
   14001439c:	mov    QWORD PTR [rip+0x30d6d],rax        # 0x140045110
   1400143a3:	test   rax,rax
   1400143a6:	jne    0x1400143ae
   1400143a8:	call   0x140006408
   1400143ad:	int3   
   1400143ae:	mov    rcx,rax
   1400143b1:	call   0x140013db8
   1400143b6:	mov    DWORD PTR [rdi],eax
   1400143b8:	test   eax,eax
   1400143ba:	jne    0x1400143c2
   1400143bc:	call   0x140006408
   1400143c1:	int3   
   1400143c2:	mov    edx,DWORD PTR [rdi]
   1400143c4:	mov    rcx,QWORD PTR [rip+0x30d45]        # 0x140045110
   1400143cb:	call   0x140013b7c
   1400143d0:	mov    rbx,rax
   1400143d3:	test   rax,rax
   1400143d6:	jne    0x1400143ee
   1400143d8:	call   rsi
   1400143da:	mov    rbx,rax
   1400143dd:	mov    r8,rax
   1400143e0:	mov    edx,DWORD PTR [rdi]
   1400143e2:	mov    rcx,QWORD PTR [rip+0x30d27]        # 0x140045110
   1400143e9:	call   0x140013fec
   1400143ee:	mov    rax,rbx
   1400143f1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400143f6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400143fb:	add    rsp,0x30
   1400143ff:	pop    rdi
   140014400:	ret    
   140014401:	int3   
   140014402:	int3   
   140014403:	int3   
   140014404:	int3   
   140014405:	int3   
   140014406:	int3   
   140014407:	int3   
   140014408:	rex push rbp
   14001440a:	sub    rsp,0x20
   14001440e:	mov    rbp,rdx
   140014411:	lea    rdx,[rip+0x30d08]        # 0x140045120
   140014418:	mov    rcx,QWORD PTR [rbp+0x48]
   14001441c:	call   0x14000afbc
   140014421:	add    rsp,0x20
   140014425:	pop    rbp
   140014426:	ret    
   140014427:	int3   
   140014428:	rex push rbx
   14001442a:	sub    rsp,0x20
   14001442e:	mov    edx,DWORD PTR [rcx]
   140014430:	mov    rbx,rcx
   140014433:	test   edx,edx
   140014435:	je     0x140014448
   140014437:	mov    rcx,QWORD PTR [rip+0x30cd2]        # 0x140045110
   14001443e:	test   rcx,rcx
   140014441:	je     0x140014448
   140014443:	call   0x140013f50
   140014448:	and    DWORD PTR [rbx],0x0
   14001444b:	add    rsp,0x20
   14001444f:	pop    rbx
   140014450:	ret    
   140014451:	int3   
   140014452:	int3   
   140014453:	int3   
   140014454:	sub    rsp,0x28
   140014458:	mov    rax,rcx
   14001445b:	mov    rcx,QWORD PTR [rip+0x30cae]        # 0x140045110
   140014462:	test   rcx,rcx
   140014465:	je     0x140014472
   140014467:	mov    r8d,edx
   14001446a:	mov    rdx,rax
   14001446d:	call   0x1400142c0
   140014472:	add    rsp,0x28
   140014476:	ret    
   140014477:	int3   
   140014478:	mov    QWORD PTR [rsp+0x8],rbx
   14001447d:	push   rdi
   14001447e:	sub    rsp,0x20
   140014482:	mov    rdx,QWORD PTR [rcx+0x18]
   140014486:	mov    rdi,rcx
   140014489:	test   rdx,rdx
   14001448c:	je     0x1400144a5
   14001448e:	mov    rbx,QWORD PTR [rdx+0x8]
   140014492:	xor    r8d,r8d
   140014495:	mov    rcx,rdi
   140014498:	call   0x1400141cc
   14001449d:	test   rbx,rbx
   1400144a0:	mov    rdx,rbx
   1400144a3:	jne    0x14001448e
   1400144a5:	cmp    DWORD PTR [rdi],0xffffffff
   1400144a8:	je     0x1400144b2
   1400144aa:	mov    ecx,DWORD PTR [rdi]
   1400144ac:	call   QWORD PTR [rip+0x1ce5e]        # 0x140031310
   1400144b2:	mov    rcx,QWORD PTR [rdi+0x10]
   1400144b6:	test   rcx,rcx
   1400144b9:	je     0x1400144d6
   1400144bb:	call   QWORD PTR [rip+0x1ce6f]        # 0x140031330
   1400144c1:	mov    rcx,rax
   1400144c4:	mov    rbx,rax
   1400144c7:	call   QWORD PTR [rip+0x1cf53]        # 0x140031420
   1400144cd:	mov    rcx,rbx
   1400144d0:	call   QWORD PTR [rip+0x1cf32]        # 0x140031408
   1400144d6:	lea    rcx,[rdi+0x28]
   1400144da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144df:	add    rsp,0x20
   1400144e3:	pop    rdi
   1400144e4:	rex.W jmp QWORD PTR [rip+0x1ce2d]        # 0x140031318
   1400144eb:	int3   
   1400144ec:	sub    rsp,0x28
   1400144f0:	mov    eax,DWORD PTR [rip+0x30c7a]        # 0x140045170
   1400144f6:	test   eax,eax
   1400144f8:	je     0x140014505
   1400144fa:	sub    eax,0x1
   1400144fd:	mov    DWORD PTR [rip+0x30c6d],eax        # 0x140045170
   140014503:	jne    0x14001451e
   140014505:	mov    rcx,QWORD PTR [rip+0x30c04]        # 0x140045110
   14001450c:	test   rcx,rcx
   14001450f:	je     0x14001451e
   140014511:	call   0x140014478
   140014516:	and    QWORD PTR [rip+0x30bf2],0x0        # 0x140045110
   14001451e:	add    rsp,0x28
   140014522:	ret    
   140014523:	int3   
   140014524:	xor    eax,eax
   140014526:	cmp    rcx,rax
   140014529:	setne  al
   14001452c:	ret    
   14001452d:	int3   
   14001452e:	int3   
   14001452f:	int3   
   140014530:	mov    QWORD PTR [rsp+0x8],rbx
   140014535:	mov    QWORD PTR [rsp+0x10],rbp
   14001453a:	mov    QWORD PTR [rsp+0x18],rsi
   14001453f:	push   rdi
   140014540:	push   r12
   140014542:	push   r13
   140014544:	push   r14
   140014546:	push   r15
   140014548:	sub    rsp,0x30
   14001454c:	test   r8d,r8d
   14001454f:	mov    ebp,r8d
   140014552:	mov    r13,rdx
   140014555:	mov    rdi,rcx
   140014558:	jne    0x140014561
   14001455a:	xor    eax,eax
   14001455c:	jmp    0x1400146ec
   140014561:	test   rdx,rdx
   140014564:	je     0x14001455a
   140014566:	test   BYTE PTR [rcx+0x20],0x1
   14001456a:	jne    0x14001457b
   14001456c:	mov    rdx,QWORD PTR [rcx+0x18]
   140014570:	mov    ecx,0x4
   140014575:	call   0x1400156e8
   14001457a:	int3   
   14001457b:	mov    r8,QWORD PTR [rcx+0x38]
   14001457f:	lea    r15,[rcx+0x40]
   140014583:	mov    rdx,rbp
   140014586:	mov    r12d,DWORD PTR [r15]
   140014589:	sub    r12d,DWORD PTR [rcx+0x38]
   14001458d:	mov    rcx,r13
   140014590:	cmp    ebp,r12d
   140014593:	cmovb  r12d,ebp
   140014597:	mov    r9d,r12d
   14001459a:	mov    ebx,r12d
   14001459d:	call   0x140018ee0
   1400145a2:	test   eax,eax
   1400145a4:	je     0x1400145cc
   1400145a6:	cmp    eax,0xc
   1400145a9:	je     0x1400145c6
   1400145ab:	cmp    eax,0x16
   1400145ae:	je     0x1400145c0
   1400145b0:	cmp    eax,0x22
   1400145b3:	je     0x1400145c0
   1400145b5:	cmp    eax,0x50
   1400145b8:	je     0x1400145cc
   1400145ba:	call   0x140006408
   1400145bf:	int3   
   1400145c0:	call   0x140006408
   1400145c5:	int3   
   1400145c6:	call   0x1400063c0
   1400145cb:	int3   
   1400145cc:	add    QWORD PTR [rdi+0x38],rbx
   1400145d0:	mov    esi,ebp
   1400145d2:	add    r13,rbx
   1400145d5:	sub    esi,r12d
   1400145d8:	je     0x1400146e8
   1400145de:	xor    edx,edx
   1400145e0:	mov    eax,esi
   1400145e2:	mov    r12d,esi
   1400145e5:	div    DWORD PTR [rdi+0x28]
   1400145e8:	sub    r12d,edx
   1400145eb:	xor    ebx,ebx
   1400145ed:	mov    r14d,r12d
   1400145f0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400145f4:	mov    r8d,r14d
   1400145f7:	mov    rdx,r13
   1400145fa:	mov    rax,QWORD PTR [rcx]
   1400145fd:	call   QWORD PTR [rax+0x68]
   140014600:	mov    ecx,eax
   140014602:	add    ebx,eax
   140014604:	sub    r14d,eax
   140014607:	add    r13,rcx
   14001460a:	test   eax,eax
   14001460c:	je     0x140014613
   14001460e:	test   r14d,r14d
   140014611:	jne    0x1400145f0
   140014613:	sub    esi,ebx
   140014615:	je     0x1400146e8
   14001461b:	cmp    ebx,r12d
   14001461e:	jne    0x1400146e8
   140014624:	cmp    DWORD PTR [rdi+0xc],0x0
   140014628:	jne    0x140014679
   14001462a:	cmp    DWORD PTR [rdi+0x10],0x0
   14001462e:	jne    0x14001463a
   140014630:	mov    ebx,DWORD PTR [rdi+0x28]
   140014633:	cmp    esi,ebx
   140014635:	cmova  ebx,esi
   140014638:	jmp    0x14001463c
   14001463a:	mov    ebx,esi
   14001463c:	mov    r14,QWORD PTR [rdi+0x48]
   140014640:	xor    r12d,r12d
   140014643:	mov    rcx,QWORD PTR [rdi+0x30]
   140014647:	mov    r8d,ebx
   14001464a:	mov    rdx,r14
   14001464d:	mov    rax,QWORD PTR [rcx]
   140014650:	call   QWORD PTR [rax+0x68]
   140014653:	mov    ecx,eax
   140014655:	add    r12d,eax
   140014658:	sub    ebx,eax
   14001465a:	add    r14,rcx
   14001465d:	test   eax,eax
   14001465f:	je     0x14001466a
   140014661:	test   ebx,ebx
   140014663:	je     0x14001466a
   140014665:	cmp    r12d,esi
   140014668:	jb     0x140014643
   14001466a:	mov    r8,QWORD PTR [rdi+0x48]
   14001466e:	mov    eax,r12d
   140014671:	add    rax,r8
   140014674:	mov    QWORD PTR [r15],rax
   140014677:	jmp    0x140014699
   140014679:	mov    rcx,QWORD PTR [rdi+0x30]
   14001467d:	mov    r8d,DWORD PTR [rdi+0x28]
   140014681:	lea    r9,[rdi+0x48]
   140014685:	mov    rax,QWORD PTR [rcx]
   140014688:	xor    edx,edx
   14001468a:	mov    QWORD PTR [rsp+0x20],r15
   14001468f:	call   QWORD PTR [rax+0xa0]
   140014695:	mov    r8,QWORD PTR [rdi+0x48]
   140014699:	mov    ebx,DWORD PTR [r15]
   14001469c:	mov    edx,esi
   14001469e:	mov    rcx,r13
   1400146a1:	sub    ebx,r8d
   1400146a4:	mov    QWORD PTR [rdi+0x38],r8
   1400146a8:	cmp    esi,ebx
   1400146aa:	cmovb  ebx,esi
   1400146ad:	mov    r9d,ebx
   1400146b0:	mov    r12d,ebx
   1400146b3:	call   0x140018ee0
   1400146b8:	test   eax,eax
   1400146ba:	je     0x1400146e2
   1400146bc:	cmp    eax,0xc
   1400146bf:	je     0x1400146dc
   1400146c1:	cmp    eax,0x16
   1400146c4:	je     0x1400146d6
   1400146c6:	cmp    eax,0x22
   1400146c9:	je     0x1400146d6
   1400146cb:	cmp    eax,0x50
   1400146ce:	je     0x1400146e2
   1400146d0:	call   0x140006408
   1400146d5:	int3   
   1400146d6:	call   0x140006408
   1400146db:	int3   
   1400146dc:	call   0x1400063c0
   1400146e1:	int3   
   1400146e2:	add    QWORD PTR [rdi+0x38],r12
   1400146e6:	sub    esi,ebx
   1400146e8:	sub    ebp,esi
   1400146ea:	mov    eax,ebp
   1400146ec:	mov    rbx,QWORD PTR [rsp+0x60]
   1400146f1:	mov    rbp,QWORD PTR [rsp+0x68]
   1400146f6:	mov    rsi,QWORD PTR [rsp+0x70]
   1400146fb:	add    rsp,0x30
   1400146ff:	pop    r15
   140014701:	pop    r14
   140014703:	pop    r13
   140014705:	pop    r12
   140014707:	pop    rdi
   140014708:	ret    
   140014709:	int3   
   14001470a:	int3   
   14001470b:	int3   
   14001470c:	mov    QWORD PTR [rsp+0x8],rbx
   140014711:	push   rdi
   140014712:	sub    rsp,0x30
   140014716:	test   BYTE PTR [rcx+0x20],0x1
   14001471a:	mov    rbx,rcx
   14001471d:	je     0x140014746
   14001471f:	mov    rax,QWORD PTR [rcx+0x38]
   140014723:	cmp    QWORD PTR [rcx+0x40],rax
   140014727:	je     0x140014740
   140014729:	mov    rcx,QWORD PTR [rcx+0x30]
   14001472d:	sub    eax,DWORD PTR [rbx+0x40]
   140014730:	mov    r8d,0x1
   140014736:	mov    r9,QWORD PTR [rcx]
   140014739:	movsxd rdx,eax
   14001473c:	call   QWORD PTR [r9+0x50]
   140014740:	mov    rax,QWORD PTR [rbx+0x40]
   140014744:	jmp    0x1400147bc
   140014746:	cmp    DWORD PTR [rcx+0xc],0x0
   14001474a:	lea    rdi,[rcx+0x48]
   14001474e:	jne    0x14001476c
   140014750:	mov    rdx,QWORD PTR [rdi]
   140014753:	cmp    QWORD PTR [rcx+0x38],rdx
   140014757:	je     0x1400147b9
   140014759:	mov    rcx,QWORD PTR [rcx+0x30]
   14001475d:	mov    r8d,DWORD PTR [rbx+0x38]
   140014761:	mov    rax,QWORD PTR [rcx]
   140014764:	sub    r8d,edx
   140014767:	call   QWORD PTR [rax+0x70]
   14001476a:	jmp    0x1400147b9
   14001476c:	mov    rax,QWORD PTR [rdi]
   14001476f:	cmp    QWORD PTR [rcx+0x38],rax
   140014773:	je     0x140014796
   140014775:	mov    rcx,QWORD PTR [rcx+0x30]
   140014779:	mov    r8d,DWORD PTR [rbx+0x38]
   14001477d:	and    QWORD PTR [rsp+0x20],0x0
   140014783:	mov    rax,QWORD PTR [rcx]
   140014786:	sub    r8d,DWORD PTR [rdi]
   140014789:	xor    r9d,r9d
   14001478c:	lea    edx,[r9+0x2]
   140014790:	call   QWORD PTR [rax+0xa0]
   140014796:	mov    rcx,QWORD PTR [rbx+0x30]
   14001479a:	mov    r8d,DWORD PTR [rbx+0x28]
   14001479e:	lea    rax,[rbx+0x40]
   1400147a2:	mov    r10,QWORD PTR [rcx]
   1400147a5:	mov    r9,rdi
   1400147a8:	mov    edx,0x1
   1400147ad:	mov    QWORD PTR [rsp+0x20],rax
   1400147b2:	call   QWORD PTR [r10+0xa0]
   1400147b9:	mov    rax,QWORD PTR [rdi]
   1400147bc:	mov    QWORD PTR [rbx+0x38],rax
   1400147c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400147c5:	add    rsp,0x30
   1400147c9:	pop    rdi
   1400147ca:	ret    
   1400147cb:	int3   
   1400147cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400147d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400147d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400147db:	push   rdi
   1400147dc:	push   r12
   1400147de:	push   r13
   1400147e0:	sub    rsp,0x30
   1400147e4:	mov    r8d,0x1
   1400147ea:	mov    esi,edx
   1400147ec:	mov    rdi,rcx
   1400147ef:	test   BYTE PTR [rcx+0x20],r8b
   1400147f3:	jne    0x140014803
   1400147f5:	mov    rdx,QWORD PTR [rcx+0x18]
   1400147f9:	lea    ecx,[r8+0x3]
   1400147fd:	call   0x1400156e8
   140014802:	int3   
   140014803:	lea    rbp,[rcx+0x40]
   140014807:	mov    ebx,DWORD PTR [rbp+0x0]
   14001480a:	sub    ebx,DWORD PTR [rcx+0x38]
   14001480d:	cmp    DWORD PTR [rcx+0xc],0x0
   140014811:	lea    r13d,[rbx+rdx*1]
   140014815:	jne    0x1400148c3
   14001481b:	mov    r8,QWORD PTR [rcx+0x38]
   14001481f:	mov    rcx,QWORD PTR [rcx+0x48]
   140014823:	cmp    r8,rcx
   140014826:	jbe    0x1400148fa
   14001482c:	test   ebx,ebx
   14001482e:	jle    0x140014879
   140014830:	mov    rdx,QWORD PTR [rbp+0x0]
   140014834:	mov    r9d,ebx
   140014837:	sub    rdx,rcx
   14001483a:	call   0x140018fb0
   14001483f:	test   eax,eax
   140014841:	je     0x140014869
   140014843:	cmp    eax,0xc
   140014846:	je     0x140014863
   140014848:	cmp    eax,0x16
   14001484b:	je     0x14001485d
   14001484d:	cmp    eax,0x22
   140014850:	je     0x14001485d
   140014852:	cmp    eax,0x50
   140014855:	je     0x140014869
   140014857:	call   0x140006408
   14001485c:	int3   
   14001485d:	call   0x140006408
   140014862:	int3   
   140014863:	call   0x1400063c0
   140014868:	int3   
   140014869:	mov    rcx,QWORD PTR [rdi+0x48]
   14001486d:	mov    QWORD PTR [rdi+0x38],rcx
   140014871:	lea    rax,[rbx+rcx*1]
   140014875:	mov    QWORD PTR [rbp+0x0],rax
   140014879:	cmp    DWORD PTR [rdi+0x10],0x0
   14001487d:	jne    0x140014882
   14001487f:	mov    esi,DWORD PTR [rdi+0x28]
   140014882:	mov    r12d,ebx
   140014885:	sub    esi,ebx
   140014887:	add    r12,rcx
   14001488a:	mov    rcx,QWORD PTR [rdi+0x30]
   14001488e:	mov    r8d,esi
   140014891:	mov    rdx,r12
   140014894:	mov    rax,QWORD PTR [rcx]
   140014897:	call   QWORD PTR [rax+0x68]
   14001489a:	mov    ecx,eax
   14001489c:	add    ebx,eax
   14001489e:	sub    esi,eax
   1400148a0:	add    r12,rcx
   1400148a3:	test   eax,eax
   1400148a5:	je     0x1400148b0
   1400148a7:	test   esi,esi
   1400148a9:	je     0x1400148b0
   1400148ab:	cmp    ebx,r13d
   1400148ae:	jb     0x14001488a
   1400148b0:	mov    rcx,QWORD PTR [rdi+0x48]
   1400148b4:	mov    eax,ebx
   1400148b6:	add    rax,rcx
   1400148b9:	mov    QWORD PTR [rdi+0x38],rcx
   1400148bd:	mov    QWORD PTR [rbp+0x0],rax
   1400148c1:	jmp    0x1400148fa
   1400148c3:	test   ebx,ebx
   1400148c5:	je     0x1400148d6
   1400148c7:	mov    rcx,QWORD PTR [rcx+0x30]
   1400148cb:	neg    ebx
   1400148cd:	mov    rax,QWORD PTR [rcx]
   1400148d0:	movsxd rdx,ebx
   1400148d3:	call   QWORD PTR [rax+0x50]
   1400148d6:	mov    rcx,QWORD PTR [rdi+0x30]
   1400148da:	mov    r8d,DWORD PTR [rdi+0x28]
   1400148de:	lea    r9,[rdi+0x48]
   1400148e2:	mov    rax,QWORD PTR [rcx]
   1400148e5:	xor    edx,edx
   1400148e7:	mov    QWORD PTR [rsp+0x20],rbp
   1400148ec:	call   QWORD PTR [rax+0xa0]
   1400148f2:	mov    r11,QWORD PTR [rdi+0x48]
   1400148f6:	mov    QWORD PTR [rdi+0x38],r11
   1400148fa:	mov    eax,DWORD PTR [rbp+0x0]
   1400148fd:	sub    eax,DWORD PTR [rdi+0x38]
   140014900:	cmp    eax,r13d
   140014903:	jae    0x140014910
   140014905:	xor    edx,edx
   140014907:	lea    ecx,[rdx+0x3]
   14001490a:	call   0x1400156e8
   14001490f:	int3   
   140014910:	mov    rbx,QWORD PTR [rsp+0x50]
   140014915:	mov    rbp,QWORD PTR [rsp+0x58]
   14001491a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001491f:	add    rsp,0x30
   140014923:	pop    r13
   140014925:	pop    r12
   140014927:	pop    rdi
   140014928:	ret    
   140014929:	int3   
   14001492a:	int3   
   14001492b:	int3   
   14001492c:	mov    QWORD PTR [rsp+0x8],rbx
   140014931:	push   rdi
   140014932:	sub    rsp,0x20
   140014936:	mov    DWORD PTR [rdx],0x1
   14001493c:	test   BYTE PTR [rcx+0x20],0x1
   140014940:	mov    rdi,rdx
   140014943:	mov    rbx,rcx
   140014946:	jne    0x140014957
   140014948:	mov    rdx,QWORD PTR [rcx+0x18]
   14001494c:	mov    ecx,0x4
   140014951:	call   0x1400156e8
   140014956:	int3   
   140014957:	mov    rax,QWORD PTR [rcx+0x38]
   14001495b:	add    rax,0x1
   14001495f:	cmp    rax,QWORD PTR [rcx+0x40]
   140014963:	jbe    0x140014973
   140014965:	mov    edx,DWORD PTR [rcx+0x38]
   140014968:	sub    edx,DWORD PTR [rcx+0x40]
   14001496b:	add    edx,0x1
   14001496e:	call   0x1400147cc
   140014973:	mov    rax,QWORD PTR [rbx+0x38]
   140014977:	mov    cl,BYTE PTR [rax]
   140014979:	add    rax,0x1
   14001497d:	cmp    cl,0xff
   140014980:	mov    QWORD PTR [rbx+0x38],rax
   140014984:	jae    0x14001498e
   140014986:	movzx  eax,cl
   140014989:	jmp    0x140014afe
   14001498e:	test   BYTE PTR [rbx+0x20],0x1
   140014992:	jne    0x1400149a3
   140014994:	mov    rdx,QWORD PTR [rbx+0x18]
   140014998:	mov    ecx,0x4
   14001499d:	call   0x1400156e8
   1400149a2:	int3   
   1400149a3:	add    rax,0x2
   1400149a7:	cmp    rax,QWORD PTR [rbx+0x40]
   1400149ab:	jbe    0x1400149be
   1400149ad:	mov    edx,DWORD PTR [rbx+0x38]
   1400149b0:	mov    rcx,rbx
   1400149b3:	sub    edx,DWORD PTR [rbx+0x40]
   1400149b6:	add    edx,0x2
   1400149b9:	call   0x1400147cc
   1400149be:	mov    rax,QWORD PTR [rbx+0x38]
   1400149c2:	movzx  ecx,WORD PTR [rax]
   1400149c5:	add    rax,0x2
   1400149c9:	cmp    cx,0xfffe
   1400149ce:	mov    QWORD PTR [rbx+0x38],rax
   1400149d2:	jne    0x140014a68
   1400149d8:	mov    DWORD PTR [rdi],0x2
   1400149de:	test   BYTE PTR [rbx+0x20],0x1
   1400149e2:	jne    0x1400149f3
   1400149e4:	mov    rdx,QWORD PTR [rbx+0x18]
   1400149e8:	mov    ecx,0x4
   1400149ed:	call   0x1400156e8
   1400149f2:	int3   
   1400149f3:	mov    rax,QWORD PTR [rbx+0x38]
   1400149f7:	add    rax,0x1
   1400149fb:	cmp    rax,QWORD PTR [rbx+0x40]
   1400149ff:	jbe    0x140014a12
   140014a01:	mov    edx,DWORD PTR [rbx+0x38]
   140014a04:	mov    rcx,rbx
   140014a07:	sub    edx,DWORD PTR [rbx+0x40]
   140014a0a:	add    edx,0x1
   140014a0d:	call   0x1400147cc
   140014a12:	mov    rax,QWORD PTR [rbx+0x38]
   140014a16:	mov    cl,BYTE PTR [rax]
   140014a18:	add    rax,0x1
   140014a1c:	cmp    cl,0xff
   140014a1f:	mov    QWORD PTR [rbx+0x38],rax
   140014a23:	jb     0x140014986
   140014a29:	test   BYTE PTR [rbx+0x20],0x1
   140014a2d:	jne    0x140014a3e
   140014a2f:	mov    rdx,QWORD PTR [rbx+0x18]
   140014a33:	mov    ecx,0x4
   140014a38:	call   0x1400156e8
   140014a3d:	int3   
   140014a3e:	add    rax,0x2
   140014a42:	cmp    rax,QWORD PTR [rbx+0x40]
   140014a46:	jbe    0x140014a59
   140014a48:	mov    edx,DWORD PTR [rbx+0x38]
   140014a4b:	mov    rcx,rbx
   140014a4e:	sub    edx,DWORD PTR [rbx+0x40]
   140014a51:	add    edx,0x2
   140014a54:	call   0x1400147cc
   140014a59:	mov    rax,QWORD PTR [rbx+0x38]
   140014a5d:	mov    cx,WORD PTR [rax]
   140014a60:	add    rax,0x2
   140014a64:	mov    QWORD PTR [rbx+0x38],rax
   140014a68:	cmp    cx,0xffff
   140014a6d:	jae    0x140014a77
   140014a6f:	movzx  eax,cx
   140014a72:	jmp    0x140014afe
   140014a77:	test   BYTE PTR [rbx+0x20],0x1
   140014a7b:	jne    0x140014a8c
   140014a7d:	mov    rdx,QWORD PTR [rbx+0x18]
   140014a81:	mov    ecx,0x4
   140014a86:	call   0x1400156e8
   140014a8b:	int3   
   140014a8c:	add    rax,0x4
   140014a90:	cmp    rax,QWORD PTR [rbx+0x40]
   140014a94:	jbe    0x140014aa7
   140014a96:	mov    edx,DWORD PTR [rbx+0x38]
   140014a99:	mov    rcx,rbx
   140014a9c:	sub    edx,DWORD PTR [rbx+0x40]
   140014a9f:	add    edx,0x4
   140014aa2:	call   0x1400147cc
   140014aa7:	mov    rax,QWORD PTR [rbx+0x38]
   140014aab:	mov    ecx,DWORD PTR [rax]
   140014aad:	add    rax,0x4
   140014ab1:	cmp    ecx,0xffffffff
   140014ab4:	mov    QWORD PTR [rbx+0x38],rax
   140014ab8:	jae    0x140014abf
   140014aba:	mov    rax,rcx
   140014abd:	jmp    0x140014afe
   140014abf:	test   BYTE PTR [rbx+0x20],0x1
   140014ac3:	jne    0x140014ad4
   140014ac5:	mov    rdx,QWORD PTR [rbx+0x18]
   140014ac9:	mov    ecx,0x4
   140014ace:	call   0x1400156e8
   140014ad3:	int3   
   140014ad4:	add    rax,0x8
   140014ad8:	cmp    rax,QWORD PTR [rbx+0x40]
   140014adc:	jbe    0x140014aef
   140014ade:	mov    edx,DWORD PTR [rbx+0x38]
   140014ae1:	mov    rcx,rbx
   140014ae4:	sub    edx,DWORD PTR [rbx+0x40]
   140014ae7:	add    edx,0x8
   140014aea:	call   0x1400147cc
   140014aef:	mov    rcx,QWORD PTR [rbx+0x38]
   140014af3:	mov    rax,QWORD PTR [rcx]
   140014af6:	add    rcx,0x8
   140014afa:	mov    QWORD PTR [rbx+0x38],rcx
   140014afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b03:	add    rsp,0x20
   140014b07:	pop    rdi
   140014b08:	ret    
   140014b09:	int3   
   140014b0a:	int3   
   140014b0b:	int3   
   140014b0c:	mov    rax,rsp
   140014b0f:	mov    QWORD PTR [rax+0x8],rbx
   140014b13:	mov    QWORD PTR [rax+0x10],rbp
   140014b17:	mov    QWORD PTR [rax+0x18],rsi
   140014b1b:	mov    QWORD PTR [rax+0x20],rdi
   140014b1f:	push   r12
   140014b21:	sub    rsp,0x20
   140014b25:	test   r8d,r8d
   140014b28:	mov    ebp,0x1
   140014b2d:	mov    rsi,rdx
   140014b30:	lea    edi,[rbp+0x1]
   140014b33:	mov    rbx,rcx
   140014b36:	je     0x140014ba4
   140014b38:	mov    eax,DWORD PTR [rcx+0x20]
   140014b3b:	not    eax
   140014b3d:	test   bpl,al
   140014b40:	jne    0x140014b4e
   140014b42:	mov    rdx,QWORD PTR [rcx+0x18]
   140014b46:	mov    ecx,edi
   140014b48:	call   0x1400156e8
   140014b4d:	int3   
   140014b4e:	mov    rax,QWORD PTR [rcx+0x38]
   140014b52:	add    rax,rbp
   140014b55:	cmp    rax,QWORD PTR [rcx+0x40]
   140014b59:	jbe    0x140014b60
   140014b5b:	call   0x14001470c
   140014b60:	mov    rax,QWORD PTR [rbx+0x38]
   140014b64:	mov    BYTE PTR [rax],0xff
   140014b67:	add    QWORD PTR [rbx+0x38],rbp
   140014b6b:	mov    eax,DWORD PTR [rbx+0x20]
   140014b6e:	mov    rcx,QWORD PTR [rbx+0x38]
   140014b72:	not    eax
   140014b74:	test   bpl,al
   140014b77:	jne    0x140014b85
   140014b79:	mov    rdx,QWORD PTR [rbx+0x18]
   140014b7d:	mov    ecx,edi
   140014b7f:	call   0x1400156e8
   140014b84:	int3   
   140014b85:	lea    rax,[rcx+0x2]
   140014b89:	cmp    rax,QWORD PTR [rbx+0x40]
   140014b8d:	jbe    0x140014b97
   140014b8f:	mov    rcx,rbx
   140014b92:	call   0x14001470c
   140014b97:	mov    rax,QWORD PTR [rbx+0x38]
   140014b9b:	mov    WORD PTR [rax],0xfffe
   140014ba0:	add    QWORD PTR [rbx+0x38],rdi
   140014ba4:	cmp    rsi,0xff
   140014bab:	mov    eax,DWORD PTR [rbx+0x20]
   140014bae:	not    eax
   140014bb0:	jae    0x140014be8
   140014bb2:	test   bpl,al
   140014bb5:	jne    0x140014bc3
   140014bb7:	mov    rdx,QWORD PTR [rbx+0x18]
   140014bbb:	mov    ecx,edi
   140014bbd:	call   0x1400156e8
   140014bc2:	int3   
   140014bc3:	mov    rax,QWORD PTR [rbx+0x38]
   140014bc7:	add    rax,rbp
   140014bca:	cmp    rax,QWORD PTR [rbx+0x40]
   140014bce:	jbe    0x140014bd8
   140014bd0:	mov    rcx,rbx
   140014bd3:	call   0x14001470c
   140014bd8:	mov    rax,QWORD PTR [rbx+0x38]
   140014bdc:	mov    BYTE PTR [rax],sil
   140014bdf:	add    QWORD PTR [rbx+0x38],rbp
   140014be3:	jmp    0x140014ded
   140014be8:	cmp    rsi,0xfffe
   140014bef:	jae    0x140014c5e
   140014bf1:	test   bpl,al
   140014bf4:	jne    0x140014c02
   140014bf6:	mov    rdx,QWORD PTR [rbx+0x18]
   140014bfa:	mov    ecx,edi
   140014bfc:	call   0x1400156e8
   140014c01:	int3   
   140014c02:	mov    rax,QWORD PTR [rbx+0x38]
   140014c06:	add    rax,rbp
   140014c09:	cmp    rax,QWORD PTR [rbx+0x40]
   140014c0d:	jbe    0x140014c17
   140014c0f:	mov    rcx,rbx
   140014c12:	call   0x14001470c
   140014c17:	mov    rax,QWORD PTR [rbx+0x38]
   140014c1b:	mov    BYTE PTR [rax],0xff
   140014c1e:	add    QWORD PTR [rbx+0x38],rbp
   140014c22:	mov    eax,DWORD PTR [rbx+0x20]
   140014c25:	mov    rcx,QWORD PTR [rbx+0x38]
   140014c29:	not    eax
   140014c2b:	test   bpl,al
   140014c2e:	jne    0x140014c3c
   140014c30:	mov    rdx,QWORD PTR [rbx+0x18]
   140014c34:	mov    ecx,edi
   140014c36:	call   0x1400156e8
   140014c3b:	int3   
   140014c3c:	lea    rax,[rcx+0x2]
   140014c40:	cmp    rax,QWORD PTR [rbx+0x40]
   140014c44:	jbe    0x140014c4e
   140014c46:	mov    rcx,rbx
   140014c49:	call   0x14001470c
   140014c4e:	mov    rax,QWORD PTR [rbx+0x38]
   140014c52:	mov    WORD PTR [rax],si
   140014c55:	add    QWORD PTR [rbx+0x38],rdi
   140014c59:	jmp    0x140014ded
   140014c5e:	mov    r12d,0xffffffff
   140014c64:	cmp    rsi,r12
   140014c67:	jae    0x140014d13
   140014c6d:	test   bpl,al
   140014c70:	jne    0x140014c7e
   140014c72:	mov    rdx,QWORD PTR [rbx+0x18]
   140014c76:	mov    ecx,edi
   140014c78:	call   0x1400156e8
   140014c7d:	int3   
   140014c7e:	mov    rax,QWORD PTR [rbx+0x38]
   140014c82:	add    rax,rbp
   140014c85:	cmp    rax,QWORD PTR [rbx+0x40]
   140014c89:	jbe    0x140014c93
   140014c8b:	mov    rcx,rbx
   140014c8e:	call   0x14001470c
   140014c93:	mov    rax,QWORD PTR [rbx+0x38]
   140014c97:	mov    BYTE PTR [rax],0xff
   140014c9a:	add    QWORD PTR [rbx+0x38],rbp
   140014c9e:	mov    eax,DWORD PTR [rbx+0x20]
   140014ca1:	mov    rcx,QWORD PTR [rbx+0x38]
   140014ca5:	not    eax
   140014ca7:	test   bpl,al
   140014caa:	jne    0x140014cb8
   140014cac:	mov    rdx,QWORD PTR [rbx+0x18]
   140014cb0:	mov    ecx,edi
   140014cb2:	call   0x1400156e8
   140014cb7:	int3   
   140014cb8:	lea    rax,[rcx+0x2]
   140014cbc:	cmp    rax,QWORD PTR [rbx+0x40]
   140014cc0:	jbe    0x140014cca
   140014cc2:	mov    rcx,rbx
   140014cc5:	call   0x14001470c
   140014cca:	mov    rax,QWORD PTR [rbx+0x38]
   140014cce:	or     WORD PTR [rax],0xffff
   140014cd3:	add    QWORD PTR [rbx+0x38],rdi
   140014cd7:	mov    eax,DWORD PTR [rbx+0x20]
   140014cda:	mov    rcx,QWORD PTR [rbx+0x38]
   140014cde:	not    eax
   140014ce0:	test   bpl,al
   140014ce3:	jne    0x140014cf1
   140014ce5:	mov    rdx,QWORD PTR [rbx+0x18]
   140014ce9:	mov    ecx,edi
   140014ceb:	call   0x1400156e8
   140014cf0:	int3   
   140014cf1:	lea    rax,[rcx+0x4]
   140014cf5:	cmp    rax,QWORD PTR [rbx+0x40]
   140014cf9:	jbe    0x140014d03
   140014cfb:	mov    rcx,rbx
   140014cfe:	call   0x14001470c
   140014d03:	mov    rax,QWORD PTR [rbx+0x38]
   140014d07:	mov    DWORD PTR [rax],esi
   140014d09:	add    QWORD PTR [rbx+0x38],0x4
   140014d0e:	jmp    0x140014ded
   140014d13:	test   bpl,al
   140014d16:	jne    0x140014d24
   140014d18:	mov    rdx,QWORD PTR [rbx+0x18]
   140014d1c:	mov    ecx,edi
   140014d1e:	call   0x1400156e8
   140014d23:	int3   
   140014d24:	mov    rax,QWORD PTR [rbx+0x38]
   140014d28:	add    rax,rbp
   140014d2b:	cmp    rax,QWORD PTR [rbx+0x40]
   140014d2f:	jbe    0x140014d39
   140014d31:	mov    rcx,rbx
   140014d34:	call   0x14001470c
   140014d39:	mov    rax,QWORD PTR [rbx+0x38]
   140014d3d:	mov    BYTE PTR [rax],0xff
   140014d40:	add    QWORD PTR [rbx+0x38],rbp
   140014d44:	mov    eax,DWORD PTR [rbx+0x20]
   140014d47:	mov    rcx,QWORD PTR [rbx+0x38]
   140014d4b:	not    eax
   140014d4d:	test   bpl,al
   140014d50:	jne    0x140014d5e
   140014d52:	mov    rdx,QWORD PTR [rbx+0x18]
   140014d56:	mov    ecx,edi
   140014d58:	call   0x1400156e8
   140014d5d:	int3   
   140014d5e:	lea    rax,[rcx+0x2]
   140014d62:	cmp    rax,QWORD PTR [rbx+0x40]
   140014d66:	jbe    0x140014d70
   140014d68:	mov    rcx,rbx
   140014d6b:	call   0x14001470c
   140014d70:	mov    rax,QWORD PTR [rbx+0x38]
   140014d74:	or     WORD PTR [rax],0xffff
   140014d79:	add    QWORD PTR [rbx+0x38],rdi
   140014d7d:	mov    eax,DWORD PTR [rbx+0x20]
   140014d80:	mov    rcx,QWORD PTR [rbx+0x38]
   140014d84:	not    eax
   140014d86:	test   bpl,al
   140014d89:	jne    0x140014d97
   140014d8b:	mov    rdx,QWORD PTR [rbx+0x18]
   140014d8f:	mov    ecx,edi
   140014d91:	call   0x1400156e8
   140014d96:	int3   
   140014d97:	lea    rax,[rcx+0x4]
   140014d9b:	cmp    rax,QWORD PTR [rbx+0x40]
   140014d9f:	jbe    0x140014da9
   140014da1:	mov    rcx,rbx
   140014da4:	call   0x14001470c
   140014da9:	mov    rax,QWORD PTR [rbx+0x38]
   140014dad:	mov    DWORD PTR [rax],r12d
   140014db0:	add    QWORD PTR [rbx+0x38],0x4
   140014db5:	mov    eax,DWORD PTR [rbx+0x20]
   140014db8:	mov    rcx,QWORD PTR [rbx+0x38]
   140014dbc:	not    eax
   140014dbe:	test   bpl,al
   140014dc1:	jne    0x140014dcf
   140014dc3:	mov    rdx,QWORD PTR [rbx+0x18]
   140014dc7:	mov    ecx,edi
   140014dc9:	call   0x1400156e8
   140014dce:	int3   
   140014dcf:	lea    rax,[rcx+0x8]
   140014dd3:	cmp    rax,QWORD PTR [rbx+0x40]
   140014dd7:	jbe    0x140014de1
   140014dd9:	mov    rcx,rbx
   140014ddc:	call   0x14001470c
   140014de1:	mov    rax,QWORD PTR [rbx+0x38]
   140014de5:	mov    QWORD PTR [rax],rsi
   140014de8:	add    QWORD PTR [rbx+0x38],0x8
   140014ded:	mov    rbx,QWORD PTR [rsp+0x30]
   140014df2:	mov    rbp,QWORD PTR [rsp+0x38]
   140014df7:	mov    rsi,QWORD PTR [rsp+0x40]
   140014dfc:	mov    rdi,QWORD PTR [rsp+0x48]
   140014e01:	add    rsp,0x20
   140014e05:	pop    r12
   140014e07:	ret    
   140014e08:	mov    QWORD PTR [rsp+0x8],rbx
   140014e0d:	push   rdi
   140014e0e:	sub    rsp,0x20
   140014e12:	test   rcx,rcx
   140014e15:	mov    rdi,rcx
   140014e18:	jne    0x140014e20
   140014e1a:	call   0x140006408
   140014e1f:	int3   
   140014e20:	call   0x1400131d0
   140014e25:	xor    ecx,ecx
   140014e27:	mov    rbx,rax
   140014e2a:	call   0x140015804
   140014e2f:	mov    rbx,QWORD PTR [rbx+0x30]
   140014e33:	jmp    0x140014e49
   140014e35:	mov    rdx,QWORD PTR [rbx]
   140014e38:	mov    rcx,rdi
   140014e3b:	call   QWORD PTR [rip+0x1c597]        # 0x1400313d8
   140014e41:	test   eax,eax
   140014e43:	je     0x140014e62
   140014e45:	mov    rbx,QWORD PTR [rbx+0x20]
   140014e49:	test   rbx,rbx
   140014e4c:	jne    0x140014e35
   140014e4e:	xor    ecx,ecx
   140014e50:	call   0x140015898
   140014e55:	xor    eax,eax
   140014e57:	mov    rbx,QWORD PTR [rsp+0x30]
   140014e5c:	add    rsp,0x20
   140014e60:	pop    rdi
   140014e61:	ret    
   140014e62:	xor    ecx,ecx
   140014e64:	call   0x140015898
   140014e69:	mov    rax,rbx
   140014e6c:	jmp    0x140014e57
   140014e6e:	int3   
   140014e6f:	int3   
   140014e70:	mov    QWORD PTR [rsp+0x18],rbx
   140014e75:	mov    QWORD PTR [rsp+0x20],rsi
   140014e7a:	push   rdi
   140014e7b:	sub    rsp,0x70
   140014e7f:	mov    rax,QWORD PTR [rip+0x2b14a]        # 0x14003ffd0
   140014e86:	xor    rax,rsp
   140014e89:	mov    QWORD PTR [rsp+0x60],rax
   140014e8e:	test   rdx,rdx
   140014e91:	mov    rbx,rdx
   140014e94:	mov    rdi,rcx
   140014e97:	je     0x140014f53
   140014e9d:	test   BYTE PTR [rcx+0x20],0x1
   140014ea1:	jne    0x140014eb2
   140014ea3:	mov    rdx,QWORD PTR [rcx+0x18]
   140014ea7:	mov    ecx,0x4
   140014eac:	call   0x1400156e8
   140014eb1:	int3   
   140014eb2:	mov    rax,QWORD PTR [rcx+0x38]
   140014eb6:	add    rax,0x2
   140014eba:	cmp    rax,QWORD PTR [rcx+0x40]
   140014ebe:	jbe    0x140014ece
   140014ec0:	mov    edx,DWORD PTR [rcx+0x38]
   140014ec3:	sub    edx,DWORD PTR [rcx+0x40]
   140014ec6:	add    edx,0x2
   140014ec9:	call   0x1400147cc
   140014ece:	mov    rax,QWORD PTR [rdi+0x38]
   140014ed2:	movzx  ecx,WORD PTR [rax]
   140014ed5:	add    rax,0x2
   140014ed9:	mov    QWORD PTR [rdi+0x38],rax
   140014edd:	mov    DWORD PTR [rbx],ecx
   140014edf:	test   BYTE PTR [rdi+0x20],0x1
   140014ee3:	jne    0x140014ef4
   140014ee5:	mov    rdx,QWORD PTR [rdi+0x18]
   140014ee9:	mov    ecx,0x4
   140014eee:	call   0x1400156e8
   140014ef3:	int3   
   140014ef4:	mov    rax,QWORD PTR [rdi+0x38]
   140014ef8:	add    rax,0x2
   140014efc:	cmp    rax,QWORD PTR [rdi+0x40]
   140014f00:	jbe    0x140014f13
   140014f02:	mov    edx,DWORD PTR [rdi+0x38]
   140014f05:	mov    rcx,rdi
   140014f08:	sub    edx,DWORD PTR [rdi+0x40]
   140014f0b:	add    edx,0x2
   140014f0e:	call   0x1400147cc
   140014f13:	mov    rax,QWORD PTR [rdi+0x38]
   140014f17:	movzx  esi,WORD PTR [rax]
   140014f1a:	add    rax,0x2
   140014f1e:	cmp    si,0x40
   140014f22:	mov    QWORD PTR [rdi+0x38],rax
   140014f26:	jae    0x140014f53
   140014f28:	movzx  ebx,si
   140014f2b:	lea    rdx,[rsp+0x20]
   140014f30:	mov    rcx,rdi
   140014f33:	mov    r8d,ebx
   140014f36:	call   0x140014530
   140014f3b:	cmp    eax,ebx
   140014f3d:	jne    0x140014f53
   140014f3f:	movzx  eax,si
   140014f42:	lea    rcx,[rsp+0x20]
   140014f47:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   140014f4c:	call   0x140014e08
   140014f51:	jmp    0x140014f55
   140014f53:	xor    eax,eax
   140014f55:	mov    rcx,QWORD PTR [rsp+0x60]
   140014f5a:	xor    rcx,rsp
   140014f5d:	call   0x140019370
   140014f62:	lea    r11,[rsp+0x70]
   140014f67:	mov    rbx,QWORD PTR [r11+0x20]
   140014f6b:	mov    rsi,QWORD PTR [r11+0x28]
   140014f6f:	mov    rsp,r11
   140014f72:	pop    rdi
   140014f73:	ret    
   140014f74:	test   r8d,r8d
   140014f77:	je     0x1400150ed
   140014f7d:	mov    QWORD PTR [rsp+0x8],rbx
   140014f82:	mov    QWORD PTR [rsp+0x10],rbp
   140014f87:	mov    QWORD PTR [rsp+0x18],rsi
   140014f8c:	push   rdi
   140014f8d:	push   r12
   140014f8f:	push   r13
   140014f91:	sub    rsp,0x30
   140014f95:	test   rdx,rdx
   140014f98:	mov    esi,r8d
   140014f9b:	mov    rbp,rdx
   140014f9e:	mov    rdi,rcx
   140014fa1:	je     0x1400150d5
   140014fa7:	mov    eax,DWORD PTR [rcx+0x20]
   140014faa:	not    eax
   140014fac:	test   al,0x1
   140014fae:	jne    0x140014fbf
   140014fb0:	mov    rdx,QWORD PTR [rcx+0x18]
   140014fb4:	mov    ecx,0x2
   140014fb9:	call   0x1400156e8
   140014fbe:	int3   
   140014fbf:	lea    r13,[rcx+0x40]
   140014fc3:	mov    r12d,DWORD PTR [r13+0x0]
   140014fc7:	mov    rdx,QWORD PTR [r13+0x0]
   140014fcb:	sub    r12d,DWORD PTR [rcx+0x38]
   140014fcf:	mov    rcx,QWORD PTR [rcx+0x38]
   140014fd3:	cmp    r8d,r12d
   140014fd6:	cmovb  r12d,r8d
   140014fda:	sub    rdx,rcx
   140014fdd:	mov    r8,rbp
   140014fe0:	mov    r9d,r12d
   140014fe3:	mov    ebx,r12d
   140014fe6:	call   0x140018ee0
   140014feb:	test   eax,eax
   140014fed:	je     0x140015015
   140014fef:	cmp    eax,0xc
   140014ff2:	je     0x14001500f
   140014ff4:	cmp    eax,0x16
   140014ff7:	je     0x140015009
   140014ff9:	cmp    eax,0x22
   140014ffc:	je     0x140015009
   140014ffe:	cmp    eax,0x50
   140015001:	je     0x140015015
   140015003:	call   0x140006408
   140015008:	int3   
   140015009:	call   0x140006408
   14001500e:	int3   
   14001500f:	call   0x1400063c0
   140015014:	int3   
   140015015:	add    QWORD PTR [rdi+0x38],rbx
   140015019:	add    rbp,rbx
   14001501c:	sub    esi,r12d
   14001501f:	je     0x1400150d5
   140015025:	mov    rcx,rdi
   140015028:	call   0x14001470c
   14001502d:	mov    rcx,QWORD PTR [rdi+0x30]
   140015031:	xor    edx,edx
   140015033:	mov    eax,esi
   140015035:	mov    ebx,esi
   140015037:	div    DWORD PTR [rdi+0x28]
   14001503a:	mov    rax,QWORD PTR [rcx]
   14001503d:	sub    ebx,edx
   14001503f:	mov    rdx,rbp
   140015042:	mov    r8d,ebx
   140015045:	call   QWORD PTR [rax+0x70]
   140015048:	mov    r11d,ebx
   14001504b:	sub    esi,ebx
   14001504d:	add    rbp,r11
   140015050:	cmp    DWORD PTR [rdi+0xc],0x0
   140015054:	je     0x14001507d
   140015056:	mov    rcx,QWORD PTR [rdi+0x30]
   14001505a:	mov    r8d,DWORD PTR [rdi+0x28]
   14001505e:	lea    r9,[rdi+0x48]
   140015062:	mov    rax,QWORD PTR [rcx]
   140015065:	mov    edx,0x1
   14001506a:	mov    QWORD PTR [rsp+0x20],r13
   14001506f:	call   QWORD PTR [rax+0xa0]
   140015075:	mov    r11,QWORD PTR [rdi+0x48]
   140015079:	mov    QWORD PTR [rdi+0x38],r11
   14001507d:	cmp    esi,DWORD PTR [rdi+0x28]
   140015080:	jb     0x140015088
   140015082:	call   0x140006408
   140015087:	int3   
   140015088:	mov    rcx,QWORD PTR [rdi+0x38]
   14001508c:	cmp    rcx,QWORD PTR [rdi+0x48]
   140015090:	je     0x140015098
   140015092:	call   0x140006408
   140015097:	int3   
   140015098:	mov    r9d,esi
   14001509b:	mov    r8,rbp
   14001509e:	mov    edx,esi
   1400150a0:	mov    ebx,esi
   1400150a2:	call   0x140018ee0
   1400150a7:	test   eax,eax
   1400150a9:	je     0x1400150d1
   1400150ab:	cmp    eax,0xc
   1400150ae:	je     0x1400150cb
   1400150b0:	cmp    eax,0x16
   1400150b3:	je     0x1400150c5
   1400150b5:	cmp    eax,0x22
   1400150b8:	je     0x1400150c5
   1400150ba:	cmp    eax,0x50
   1400150bd:	je     0x1400150d1
   1400150bf:	call   0x140006408
   1400150c4:	int3   
   1400150c5:	call   0x140006408
   1400150ca:	int3   
   1400150cb:	call   0x1400063c0
   1400150d0:	int3   
   1400150d1:	add    QWORD PTR [rdi+0x38],rbx
   1400150d5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400150da:	mov    rbp,QWORD PTR [rsp+0x58]
   1400150df:	mov    rsi,QWORD PTR [rsp+0x60]
   1400150e4:	add    rsp,0x30
   1400150e8:	pop    r13
   1400150ea:	pop    r12
   1400150ec:	pop    rdi
   1400150ed:	ret    
   1400150ee:	int3   
   1400150ef:	int3   
   1400150f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400150f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400150fa:	push   rdi
   1400150fb:	sub    rsp,0x20
   1400150ff:	cmp    rdx,0xffff
   140015106:	mov    eax,DWORD PTR [rcx+0x20]
   140015109:	mov    rdi,rdx
   14001510c:	not    eax
   14001510e:	mov    rbx,rcx
   140015111:	jae    0x14001514a
   140015113:	test   al,0x1
   140015115:	jne    0x140015126
   140015117:	mov    rdx,QWORD PTR [rcx+0x18]
   14001511b:	mov    ecx,0x2
   140015120:	call   0x1400156e8
   140015125:	int3   
   140015126:	mov    rax,QWORD PTR [rcx+0x38]
   14001512a:	add    rax,0x2
   14001512e:	cmp    rax,QWORD PTR [rcx+0x40]
   140015132:	jbe    0x140015139
   140015134:	call   0x14001470c
   140015139:	mov    rax,QWORD PTR [rbx+0x38]
   14001513d:	mov    WORD PTR [rax],di
   140015140:	add    QWORD PTR [rbx+0x38],0x2
   140015145:	jmp    0x14001522d
   14001514a:	test   al,0x1
   14001514c:	jne    0x14001515d
   14001514e:	mov    rdx,QWORD PTR [rcx+0x18]
   140015152:	mov    ecx,0x2
   140015157:	call   0x1400156e8
   14001515c:	int3   
   14001515d:	mov    rax,QWORD PTR [rcx+0x38]
   140015161:	add    rax,0x2
   140015165:	cmp    rax,QWORD PTR [rcx+0x40]
   140015169:	jbe    0x140015170
   14001516b:	call   0x14001470c
   140015170:	mov    rax,QWORD PTR [rbx+0x38]
   140015174:	mov    ebp,0xffffffff
   140015179:	or     WORD PTR [rax],0xffff
   14001517e:	add    QWORD PTR [rbx+0x38],0x2
   140015183:	cmp    rdi,rbp
   140015186:	mov    eax,DWORD PTR [rbx+0x20]
   140015189:	mov    rcx,QWORD PTR [rbx+0x38]
   14001518d:	not    eax
   14001518f:	jae    0x1400151c3
   140015191:	test   al,0x1
   140015193:	jne    0x1400151a4
   140015195:	mov    rdx,QWORD PTR [rbx+0x18]
   140015199:	mov    ecx,0x2
   14001519e:	call   0x1400156e8
   1400151a3:	int3   
   1400151a4:	lea    rax,[rcx+0x4]
   1400151a8:	cmp    rax,QWORD PTR [rbx+0x40]
   1400151ac:	jbe    0x1400151b6
   1400151ae:	mov    rcx,rbx
   1400151b1:	call   0x14001470c
   1400151b6:	mov    rax,QWORD PTR [rbx+0x38]
   1400151ba:	mov    DWORD PTR [rax],edi
   1400151bc:	add    QWORD PTR [rbx+0x38],0x4
   1400151c1:	jmp    0x14001522d
   1400151c3:	test   al,0x1
   1400151c5:	jne    0x1400151d6
   1400151c7:	mov    rdx,QWORD PTR [rbx+0x18]
   1400151cb:	mov    ecx,0x2
   1400151d0:	call   0x1400156e8
   1400151d5:	int3   
   1400151d6:	lea    rax,[rcx+0x4]
   1400151da:	cmp    rax,QWORD PTR [rbx+0x40]
   1400151de:	jbe    0x1400151e8
   1400151e0:	mov    rcx,rbx
   1400151e3:	call   0x14001470c
   1400151e8:	mov    rax,QWORD PTR [rbx+0x38]
   1400151ec:	mov    DWORD PTR [rax],ebp
   1400151ee:	add    QWORD PTR [rbx+0x38],0x4
   1400151f3:	mov    eax,DWORD PTR [rbx+0x20]
   1400151f6:	mov    rcx,QWORD PTR [rbx+0x38]
   1400151fa:	not    eax
   1400151fc:	test   al,0x1
   1400151fe:	jne    0x14001520f
   140015200:	mov    rdx,QWORD PTR [rbx+0x18]
   140015204:	mov    ecx,0x2
   140015209:	call   0x1400156e8
   14001520e:	int3   
   14001520f:	lea    rax,[rcx+0x8]
   140015213:	cmp    rax,QWORD PTR [rbx+0x40]
   140015217:	jbe    0x140015221
   140015219:	mov    rcx,rbx
   14001521c:	call   0x14001470c
   140015221:	mov    rax,QWORD PTR [rbx+0x38]
   140015225:	mov    QWORD PTR [rax],rdi
   140015228:	add    QWORD PTR [rbx+0x38],0x8
   14001522d:	mov    rbx,QWORD PTR [rsp+0x30]
   140015232:	mov    rbp,QWORD PTR [rsp+0x38]
   140015237:	add    rsp,0x20
   14001523b:	pop    rdi
   14001523c:	ret    
   14001523d:	int3   
   14001523e:	int3   
   14001523f:	int3   
   140015240:	rex push rbx
   140015242:	sub    rsp,0x20
   140015246:	test   BYTE PTR [rcx+0x20],0x1
   14001524a:	mov    rbx,rcx
   14001524d:	jne    0x14001525e
   14001524f:	mov    rdx,QWORD PTR [rcx+0x18]
   140015253:	mov    ecx,0x4
   140015258:	call   0x1400156e8
   14001525d:	int3   
   14001525e:	mov    rax,QWORD PTR [rcx+0x38]
   140015262:	add    rax,0x2
   140015266:	cmp    rax,QWORD PTR [rcx+0x40]
   14001526a:	jbe    0x14001527a
   14001526c:	mov    edx,DWORD PTR [rcx+0x38]
   14001526f:	sub    edx,DWORD PTR [rcx+0x40]
   140015272:	add    edx,0x2
   140015275:	call   0x1400147cc
   14001527a:	mov    rax,QWORD PTR [rbx+0x38]
   14001527e:	movzx  ecx,WORD PTR [rax]
   140015281:	add    rax,0x2
   140015285:	cmp    cx,0xffff
   14001528a:	mov    QWORD PTR [rbx+0x38],rax
   14001528e:	je     0x140015298
   140015290:	movzx  eax,cx
   140015293:	jmp    0x14001531f
   140015298:	test   BYTE PTR [rbx+0x20],0x1
   14001529c:	jne    0x1400152ad
   14001529e:	mov    rdx,QWORD PTR [rbx+0x18]
   1400152a2:	mov    ecx,0x4
   1400152a7:	call   0x1400156e8
   1400152ac:	int3   
   1400152ad:	add    rax,0x4
   1400152b1:	cmp    rax,QWORD PTR [rbx+0x40]
   1400152b5:	jbe    0x1400152c8
   1400152b7:	mov    edx,DWORD PTR [rbx+0x38]
   1400152ba:	mov    rcx,rbx
   1400152bd:	sub    edx,DWORD PTR [rbx+0x40]
   1400152c0:	add    edx,0x4
   1400152c3:	call   0x1400147cc
   1400152c8:	mov    rax,QWORD PTR [rbx+0x38]
   1400152cc:	mov    ecx,DWORD PTR [rax]
   1400152ce:	add    rax,0x4
   1400152d2:	cmp    ecx,0xffffffff
   1400152d5:	mov    QWORD PTR [rbx+0x38],rax
   1400152d9:	je     0x1400152e0
   1400152db:	mov    rax,rcx
   1400152de:	jmp    0x14001531f
   1400152e0:	test   BYTE PTR [rbx+0x20],0x1
   1400152e4:	jne    0x1400152f5
   1400152e6:	mov    rdx,QWORD PTR [rbx+0x18]
   1400152ea:	mov    ecx,0x4
   1400152ef:	call   0x1400156e8
   1400152f4:	int3   
   1400152f5:	add    rax,0x8
   1400152f9:	cmp    rax,QWORD PTR [rbx+0x40]
   1400152fd:	jbe    0x140015310
   1400152ff:	mov    edx,DWORD PTR [rbx+0x38]
   140015302:	mov    rcx,rbx
   140015305:	sub    edx,DWORD PTR [rbx+0x40]
   140015308:	add    edx,0x8
   14001530b:	call   0x1400147cc
   140015310:	mov    rcx,QWORD PTR [rbx+0x38]
   140015314:	mov    rax,QWORD PTR [rcx]
   140015317:	add    rcx,0x8
   14001531b:	mov    QWORD PTR [rbx+0x38],rcx
   14001531f:	add    rsp,0x20
   140015323:	pop    rbx
   140015324:	ret    
   140015325:	int3   
   140015326:	int3   
   140015327:	int3   
   140015328:	mov    QWORD PTR [rsp+0x8],rbx
   14001532d:	mov    QWORD PTR [rsp+0x10],rbp
   140015332:	mov    QWORD PTR [rsp+0x18],rsi
   140015337:	push   rdi
   140015338:	sub    rsp,0x20
   14001533c:	mov    rsi,rcx
   14001533f:	mov    rcx,QWORD PTR [rcx]
   140015342:	mov    rbx,rdx
   140015345:	call   QWORD PTR [rip+0x1bfbd]        # 0x140031308
   14001534b:	mov    r8d,DWORD PTR [rbx+0x20]
   14001534f:	movzx  ebp,WORD PTR [rsi+0xc]
   140015353:	not    r8d
   140015356:	mov    edi,eax
   140015358:	test   r8b,0x1
   14001535c:	jne    0x14001536d
   14001535e:	mov    rdx,QWORD PTR [rbx+0x18]
   140015362:	mov    ecx,0x2
   140015367:	call   0x1400156e8
   14001536c:	int3   
   14001536d:	mov    rax,QWORD PTR [rbx+0x38]
   140015371:	add    rax,0x2
   140015375:	cmp    rax,QWORD PTR [rbx+0x40]
   140015379:	jbe    0x140015383
   14001537b:	mov    rcx,rbx
   14001537e:	call   0x14001470c
   140015383:	mov    rax,QWORD PTR [rbx+0x38]
   140015387:	mov    WORD PTR [rax],bp
   14001538a:	add    QWORD PTR [rbx+0x38],0x2
   14001538f:	mov    eax,DWORD PTR [rbx+0x20]
   140015392:	mov    rcx,QWORD PTR [rbx+0x38]
   140015396:	not    eax
   140015398:	test   al,0x1
   14001539a:	jne    0x1400153ab
   14001539c:	mov    rdx,QWORD PTR [rbx+0x18]
   1400153a0:	mov    ecx,0x2
   1400153a5:	call   0x1400156e8
   1400153aa:	int3   
   1400153ab:	lea    rax,[rcx+0x2]
   1400153af:	cmp    rax,QWORD PTR [rbx+0x40]
   1400153b3:	jbe    0x1400153bd
   1400153b5:	mov    rcx,rbx
   1400153b8:	call   0x14001470c
   1400153bd:	mov    rax,QWORD PTR [rbx+0x38]
   1400153c1:	movzx  r8d,di
   1400153c5:	mov    rcx,rbx
   1400153c8:	mov    WORD PTR [rax],di
   1400153cb:	add    QWORD PTR [rbx+0x38],0x2
   1400153d0:	mov    rdx,QWORD PTR [rsi]
   1400153d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400153d8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400153dd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400153e2:	add    rsp,0x20
   1400153e6:	pop    rdi
   1400153e7:	jmp    0x140014f74
   1400153ec:	lea    rax,[rip+0x1f0bd]        # 0x1400344b0
   1400153f3:	ret    
   1400153f4:	push   r12
   1400153f6:	sub    rsp,0x40
   1400153fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140015403:	mov    QWORD PTR [rsp+0x50],rbx
   140015408:	mov    QWORD PTR [rsp+0x60],rsi
   14001540d:	mov    QWORD PTR [rsp+0x68],rdi
   140015412:	mov    r12d,r8d
   140015415:	mov    rsi,rdx
   140015418:	mov    rdi,rcx
   14001541b:	test   rdx,rdx
   14001541e:	jne    0x140015427
   140015420:	xor    eax,eax
   140015422:	jmp    0x140015544
   140015427:	test   r9,r9
   14001542a:	je     0x140015437
   14001542c:	mov    eax,DWORD PTR [rcx+0x10]
   14001542f:	add    eax,0xf1b0
   140015434:	mov    DWORD PTR [r9],eax
   140015437:	call   0x14000669c
   14001543c:	mov    r11,rax
   14001543f:	xor    ecx,ecx
   140015441:	test   rax,rax
   140015444:	setne  cl
   140015447:	test   ecx,ecx
   140015449:	jne    0x140015456
   14001544b:	mov    ecx,0x80004005
   140015450:	call   0x1400015c0
   140015455:	int3   
   140015456:	mov    rax,QWORD PTR [rax]
   140015459:	mov    rcx,r11
   14001545c:	call   QWORD PTR [rax+0x18]
   14001545f:	add    rax,0x18
   140015463:	mov    QWORD PTR [rsp+0x58],rax
   140015468:	mov    rcx,QWORD PTR [rdi+0x18]
   14001546c:	sub    rcx,0x18
   140015470:	call   0x140001a30
   140015475:	lea    rbx,[rax+0x18]
   140015479:	mov    QWORD PTR [rsp+0x20],rbx
   14001547e:	cmp    DWORD PTR [rbx-0x10],0x0
   140015482:	jne    0x1400154ab
   140015484:	mov    ecx,0xf006
   140015489:	call   0x140006688
   14001548e:	test   rax,rax
   140015491:	je     0x1400154ab
   140015493:	mov    r8d,0xf006
   140015499:	mov    rdx,rax
   14001549c:	lea    rcx,[rsp+0x20]
   1400154a1:	call   0x140001ba0
   1400154a6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400154ab:	mov    edx,DWORD PTR [rdi+0x10]
   1400154ae:	add    edx,0xf1b0
   1400154b4:	mov    r8,rbx
   1400154b7:	lea    rcx,[rsp+0x58]
   1400154bc:	call   0x14001867c
   1400154c1:	mov    rdx,r12
   1400154c4:	or     rdi,0xffffffffffffffff
   1400154c8:	mov    r9,rdi
   1400154cb:	mov    r8,QWORD PTR [rsp+0x58]
   1400154d0:	mov    rcx,rsi
   1400154d3:	call   0x14001a740
   1400154d8:	test   eax,eax
   1400154da:	je     0x140015500
   1400154dc:	cmp    eax,0xc
   1400154df:	je     0x1400154fa
   1400154e1:	cmp    eax,0x16
   1400154e4:	je     0x1400154f5
   1400154e6:	cmp    eax,0x22
   1400154e9:	je     0x1400154f5
   1400154eb:	cmp    eax,0x50
   1400154ee:	je     0x140015500
   1400154f0:	call   0x140006408
   1400154f5:	call   0x140006408
   1400154fa:	call   0x1400063c0
   1400154ff:	nop
   140015500:	lea    rdx,[rbx-0x18]
   140015504:	mov    eax,edi
   140015506:	lock xadd DWORD PTR [rdx+0x10],eax
   14001550b:	add    eax,edi
   14001550d:	test   eax,eax
   14001550f:	jg     0x14001551b
   140015511:	mov    rcx,QWORD PTR [rdx]
   140015514:	mov    rax,QWORD PTR [rcx]
   140015517:	call   QWORD PTR [rax+0x8]
   14001551a:	nop
   14001551b:	mov    rdx,QWORD PTR [rsp+0x58]
   140015520:	add    rdx,0xffffffffffffffe8
   140015524:	mov    eax,edi
   140015526:	lock xadd DWORD PTR [rdx+0x10],eax
   14001552b:	add    eax,edi
   14001552d:	test   eax,eax
   14001552f:	jg     0x14001553b
   140015531:	mov    rcx,QWORD PTR [rdx]
   140015534:	mov    rax,QWORD PTR [rcx]
   140015537:	call   QWORD PTR [rax+0x8]
   14001553a:	nop
   14001553b:	mov    eax,0x1
   140015540:	jmp    0x140015544
   140015542:	xor    eax,eax
   140015544:	mov    rbx,QWORD PTR [rsp+0x50]
   140015549:	mov    rsi,QWORD PTR [rsp+0x60]
   14001554e:	mov    rdi,QWORD PTR [rsp+0x68]
   140015553:	add    rsp,0x40
   140015557:	pop    r12
   140015559:	ret    
   14001555a:	int3   
   14001555b:	int3   
   14001555c:	int3   
   14001555d:	int3   
   14001555e:	int3   
   14001555f:	int3   
   140015560:	int3   
   140015561:	int3   
   140015562:	int3   
   140015563:	int3   
   140015564:	rex push rbp
   140015566:	sub    rsp,0x20
   14001556a:	mov    rbp,rdx
   14001556d:	lea    rcx,[rbp+0x58]
   140015571:	call   0x140001dc0
   140015576:	add    rsp,0x20
   14001557a:	pop    rbp
   14001557b:	ret    
   14001557c:	int3   
   14001557d:	int3   
   14001557e:	int3   
   14001557f:	int3   
   140015580:	int3   
   140015581:	int3   
   140015582:	int3   
   140015583:	int3   
   140015584:	rex push rbp
   140015586:	sub    rsp,0x20
   14001558a:	mov    rbp,rdx
   14001558d:	lea    rcx,[rbp+0x20]
   140015591:	call   0x140001dc0
   140015596:	add    rsp,0x20
   14001559a:	pop    rbp
   14001559b:	ret    
   14001559c:	int3   
   14001559d:	int3   
   14001559e:	int3   
   14001559f:	int3   
   1400155a0:	int3   
   1400155a1:	int3   
   1400155a2:	int3   
   1400155a3:	int3   
   1400155a4:	mov    QWORD PTR [rsp+0x10],rdx
   1400155a9:	push   rbp
   1400155aa:	sub    rsp,0x20
   1400155ae:	mov    rbp,rdx
   1400155b1:	lea    rax,[rip+0xffffffffffffff8a]        # 0x140015542
   1400155b8:	jmp    0x1400155ba
   1400155ba:	add    rsp,0x20
   1400155be:	pop    rbp
   1400155bf:	ret    
   1400155c0:	int3   
   1400155c1:	int3   
   1400155c2:	int3   
   1400155c3:	int3   
   1400155c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400155c9:	push   rsi
   1400155ca:	push   rdi
   1400155cb:	push   r12
   1400155cd:	sub    rsp,0x30
   1400155d1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400155da:	mov    QWORD PTR [rsp+0x58],rbx
   1400155df:	mov    QWORD PTR [rsp+0x60],rbp
   1400155e4:	mov    rdi,r8
   1400155e7:	mov    r12d,edx
   1400155ea:	mov    rsi,rcx
   1400155ed:	call   0x140006484
   1400155f2:	lea    r11,[rip+0x1ef3f]        # 0x140034538
   1400155f9:	mov    QWORD PTR [rsi],r11
   1400155fc:	call   0x14000669c
   140015601:	mov    rcx,rax
   140015604:	xor    ebx,ebx
   140015606:	mov    r9d,ebx
   140015609:	cmp    rax,rbx
   14001560c:	setne  r9b
   140015610:	cmp    r9d,ebx
   140015613:	jne    0x140015620
   140015615:	mov    ecx,0x80004005
   14001561a:	call   0x1400015c0
   14001561f:	int3   
   140015620:	mov    rax,QWORD PTR [rax]
   140015623:	call   QWORD PTR [rax+0x18]
   140015626:	add    rax,0x18
   14001562a:	mov    QWORD PTR [rsi+0x18],rax
   14001562e:	mov    DWORD PTR [rsi+0x10],r12d
   140015632:	cmp    rdi,rbx
   140015635:	je     0x140015641
   140015637:	mov    rcx,rdi
   14001563a:	call   0x14001a670
   14001563f:	mov    ebx,eax
   140015641:	mov    r8d,ebx
   140015644:	mov    rdx,rdi
   140015647:	lea    rcx,[rsi+0x18]
   14001564b:	call   0x140001840
   140015650:	nop
   140015651:	mov    rax,rsi
   140015654:	mov    rbx,QWORD PTR [rsp+0x58]
   140015659:	mov    rbp,QWORD PTR [rsp+0x60]
   14001565e:	add    rsp,0x30
   140015662:	pop    r12
   140015664:	pop    rdi
   140015665:	pop    rsi
   140015666:	ret    
   140015667:	int3   
   140015668:	int3   
   140015669:	int3   
   14001566a:	int3   
   14001566b:	int3   
   14001566c:	int3   
   14001566d:	int3   
   14001566e:	int3   
   14001566f:	int3   
   140015670:	int3   
   140015671:	int3   
   140015672:	int3   
   140015673:	int3   
   140015674:	rex push rbp
   140015676:	sub    rsp,0x20
   14001567a:	mov    rbp,rdx
   14001567d:	mov    rcx,QWORD PTR [rbp+0x50]
   140015681:	add    rcx,0x18
   140015685:	call   0x140001dc0
   14001568a:	add    rsp,0x20
   14001568e:	pop    rbp
   14001568f:	ret    
   140015690:	mov    QWORD PTR [rsp+0x8],rbx
   140015695:	push   rdi
   140015696:	sub    rsp,0x20
   14001569a:	mov    edi,edx
   14001569c:	mov    rdx,QWORD PTR [rcx+0x18]
   1400156a0:	lea    rax,[rip+0x1ee91]        # 0x140034538
   1400156a7:	sub    rdx,0x18
   1400156ab:	mov    QWORD PTR [rcx],rax
   1400156ae:	or     eax,0xffffffff
   1400156b1:	mov    rbx,rcx
   1400156b4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400156b9:	add    eax,0xffffffff
   1400156bc:	test   eax,eax
   1400156be:	jg     0x1400156c9
   1400156c0:	mov    rcx,QWORD PTR [rdx]
   1400156c3:	mov    rax,QWORD PTR [rcx]
   1400156c6:	call   QWORD PTR [rax+0x8]
   1400156c9:	test   dil,0x1
   1400156cd:	je     0x1400156d7
   1400156cf:	mov    rcx,rbx
   1400156d2:	call   0x140006160
   1400156d7:	mov    rax,rbx
   1400156da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400156df:	add    rsp,0x20
   1400156e3:	pop    rdi
   1400156e4:	ret    
   1400156e5:	int3   
   1400156e6:	int3   
   1400156e7:	int3   
   1400156e8:	rex push rdi
   1400156ea:	sub    rsp,0x30
   1400156ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400156f7:	mov    QWORD PTR [rsp+0x40],rbx
   1400156fc:	mov    rbx,rdx
   1400156ff:	mov    edi,ecx
   140015701:	mov    ecx,0x20
   140015706:	call   0x140006114
   14001570b:	mov    rcx,rax
   14001570e:	mov    QWORD PTR [rsp+0x58],rax
   140015713:	xor    eax,eax
   140015715:	cmp    rcx,rax
   140015718:	je     0x140015725
   14001571a:	mov    r8,rbx
   14001571d:	mov    edx,edi
   14001571f:	call   0x1400155c4
   140015724:	nop
   140015725:	mov    QWORD PTR [rsp+0x50],rax
   14001572a:	lea    rdx,[rip+0x278e7]        # 0x14003d018
   140015731:	lea    rcx,[rsp+0x50]
   140015736:	call   0x14001b070
   14001573b:	int3   
   14001573c:	int3   
   14001573d:	int3   
   14001573e:	int3   
   14001573f:	int3   
   140015740:	int3   
   140015741:	int3   
   140015742:	int3   
   140015743:	int3   
   140015744:	int3   
   140015745:	int3   
   140015746:	int3   
   140015747:	int3   
   140015748:	rex push rbp
   14001574a:	sub    rsp,0x20
   14001574e:	mov    rbp,rdx
   140015751:	mov    rcx,QWORD PTR [rbp+0x58]
   140015755:	call   0x140002f20
   14001575a:	add    rsp,0x20
   14001575e:	pop    rbp
   14001575f:	ret    
   140015760:	sub    rsp,0x28
   140015764:	mov    eax,DWORD PTR [rip+0x2fa0a]        # 0x140045174
   14001576a:	test   eax,eax
   14001576c:	jne    0x14001578b
   14001576e:	lea    rcx,[rip+0x2fcb3]        # 0x140045428
   140015775:	mov    DWORD PTR [rip+0x2f9f5],0x1        # 0x140045174
   14001577f:	call   QWORD PTR [rip+0x1bbc3]        # 0x140031348
   140015785:	mov    eax,DWORD PTR [rip+0x2f9e9]        # 0x140045174
   14001578b:	add    rsp,0x28
   14001578f:	ret    
   140015790:	mov    QWORD PTR [rsp+0x8],rbx
   140015795:	mov    QWORD PTR [rsp+0x10],rsi
   14001579a:	push   rdi
   14001579b:	sub    rsp,0x20
   14001579f:	mov    eax,DWORD PTR [rip+0x2f9cf]        # 0x140045174
   1400157a5:	test   eax,eax
   1400157a7:	je     0x1400157f1
   1400157a9:	sub    eax,0x1
   1400157ac:	lea    rcx,[rip+0x2fc75]        # 0x140045428
   1400157b3:	mov    DWORD PTR [rip+0x2f9bb],eax        # 0x140045174
   1400157b9:	call   QWORD PTR [rip+0x1bb59]        # 0x140031318
   1400157bf:	lea    rbx,[rip+0x2fc8a]        # 0x140045450
   1400157c6:	lea    rdi,[rip+0x2f9b3]        # 0x140045180
   1400157cd:	mov    esi,0x11
   1400157d2:	cmp    DWORD PTR [rbx],0x0
   1400157d5:	je     0x1400157e3
   1400157d7:	mov    rcx,rdi
   1400157da:	call   QWORD PTR [rip+0x1bb38]        # 0x140031318
   1400157e0:	add    DWORD PTR [rbx],0xffffffff
   1400157e3:	add    rdi,0x28
   1400157e7:	add    rbx,0x4
   1400157eb:	sub    rsi,0x1
   1400157ef:	jne    0x1400157d2
   1400157f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400157f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400157fb:	add    rsp,0x20
   1400157ff:	pop    rdi
   140015800:	ret    
   140015801:	int3   
   140015802:	int3   
   140015803:	int3   
   140015804:	mov    QWORD PTR [rsp+0x8],rbx
   140015809:	push   rsi
   14001580a:	sub    rsp,0x20
   14001580e:	movsxd rbx,ecx
   140015811:	cmp    ebx,0x11
   140015814:	jb     0x14001581c
   140015816:	call   0x140006408
   14001581b:	int3   
   14001581c:	cmp    DWORD PTR [rip+0x2f951],0x0        # 0x140045174
   140015823:	jne    0x14001582a
   140015825:	call   0x140015760
   14001582a:	lea    rsi,[rip+0xfffffffffffea7cf]        # 0x140000000
   140015831:	cmp    DWORD PTR [rsi+rbx*4+0x45450],0x0
   140015839:	jne    0x140015879
   14001583b:	lea    rcx,[rip+0x2fbe6]        # 0x140045428
   140015842:	call   QWORD PTR [rip+0x1bb08]        # 0x140031350
   140015848:	cmp    DWORD PTR [rsi+rbx*4+0x45450],0x0
   140015850:	jne    0x14001586c
   140015852:	lea    rax,[rbx+rbx*4]
   140015856:	lea    rcx,[rsi+rax*8+0x45180]
   14001585e:	call   QWORD PTR [rip+0x1bae4]        # 0x140031348
   140015864:	add    DWORD PTR [rsi+rbx*4+0x45450],0x1
   14001586c:	lea    rcx,[rip+0x2fbb5]        # 0x140045428
   140015873:	call   QWORD PTR [rip+0x1bae7]        # 0x140031360
   140015879:	lea    rax,[rbx+rbx*4]
   14001587d:	lea    rcx,[rsi+rax*8+0x45180]
   140015885:	mov    rbx,QWORD PTR [rsp+0x30]
   14001588a:	add    rsp,0x20
   14001588e:	pop    rsi
   14001588f:	rex.W jmp QWORD PTR [rip+0x1baba]        # 0x140031350
   140015896:	int3   
   140015897:	int3   
   140015898:	sub    rsp,0x28
   14001589c:	cmp    ecx,0x11
   14001589f:	jb     0x1400158a7
   1400158a1:	call   0x140006408
   1400158a6:	int3   
   1400158a7:	movsxd rax,ecx
   1400158aa:	lea    rcx,[rax+rax*4]
   1400158ae:	lea    rax,[rip+0x2f8cb]        # 0x140045180
   1400158b5:	lea    rcx,[rax+rcx*8]
   1400158b9:	add    rsp,0x28
   1400158bd:	rex.W jmp QWORD PTR [rip+0x1ba9c]        # 0x140031360
   1400158c4:	mov    r11,rsp
   1400158c7:	push   rbx
   1400158c8:	sub    rsp,0x60
   1400158cc:	and    QWORD PTR [r11-0x18],0x0
   1400158d1:	and    QWORD PTR [r11+0x18],0x0
   1400158d6:	and    QWORD PTR [r11+0x20],0x0
   1400158db:	lea    rax,[r11+0x18]
   1400158df:	mov    rbx,rcx
   1400158e2:	lea    rdx,[rip+0x1eca7]        # 0x140034590
   1400158e9:	mov    r9d,0x2001f
   1400158ef:	xor    r8d,r8d
   1400158f2:	mov    rcx,0xffffffff80000001
   1400158f9:	mov    QWORD PTR [r11-0x48],rax
   1400158fd:	call   QWORD PTR [rip+0x1b6fd]        # 0x140031000
   140015903:	test   eax,eax
   140015905:	jne    0x140015996
   14001590b:	mov    rdx,QWORD PTR [rbx+0xa8]
   140015912:	mov    rcx,QWORD PTR [rsp+0x80]
   14001591a:	lea    rax,[rsp+0x78]
   14001591f:	mov    QWORD PTR [rsp+0x40],rax
   140015924:	lea    rax,[rsp+0x88]
   14001592c:	xor    r9d,r9d
   14001592f:	mov    QWORD PTR [rsp+0x38],rax
   140015934:	and    QWORD PTR [rsp+0x30],0x0
   14001593a:	xor    r8d,r8d
   14001593d:	mov    DWORD PTR [rsp+0x28],0x2001f
   140015945:	and    DWORD PTR [rsp+0x20],0x0
   14001594a:	call   QWORD PTR [rip+0x1b6e0]        # 0x140031030
   140015950:	test   eax,eax
   140015952:	jne    0x140015996
   140015954:	mov    rdx,QWORD PTR [rbx+0xd0]
   14001595b:	mov    rcx,QWORD PTR [rsp+0x88]
   140015963:	lea    rax,[rsp+0x78]
   140015968:	mov    QWORD PTR [rsp+0x40],rax
   14001596d:	lea    rax,[rsp+0x50]
   140015972:	xor    r9d,r9d
   140015975:	mov    QWORD PTR [rsp+0x38],rax
   14001597a:	and    QWORD PTR [rsp+0x30],0x0
   140015980:	xor    r8d,r8d
   140015983:	mov    DWORD PTR [rsp+0x28],0x2001f
   14001598b:	and    DWORD PTR [rsp+0x20],0x0
   140015990:	call   QWORD PTR [rip+0x1b69a]        # 0x140031030
   140015996:	mov    rcx,QWORD PTR [rsp+0x80]
   14001599e:	test   rcx,rcx
   1400159a1:	je     0x1400159a9
   1400159a3:	call   QWORD PTR [rip+0x1b677]        # 0x140031020
   1400159a9:	mov    rcx,QWORD PTR [rsp+0x88]
   1400159b1:	test   rcx,rcx
   1400159b4:	je     0x1400159bc
   1400159b6:	call   QWORD PTR [rip+0x1b664]        # 0x140031020
   1400159bc:	mov    rax,QWORD PTR [rsp+0x50]
   1400159c1:	add    rsp,0x60
   1400159c5:	pop    rbx
   1400159c6:	ret    
   1400159c7:	int3   
   1400159c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400159cd:	push   rdi
   1400159ce:	sub    rsp,0x50
   1400159d2:	and    QWORD PTR [rsp+0x78],0x0
   1400159d8:	mov    rdi,rdx
   1400159db:	call   0x1400158c4
   1400159e0:	test   rax,rax
   1400159e3:	mov    rbx,rax
   1400159e6:	je     0x140015a2f
   1400159e8:	lea    rax,[rsp+0x70]
   1400159ed:	xor    r9d,r9d
   1400159f0:	xor    r8d,r8d
   1400159f3:	mov    QWORD PTR [rsp+0x40],rax
   1400159f8:	lea    rax,[rsp+0x78]
   1400159fd:	mov    rdx,rdi
   140015a00:	mov    QWORD PTR [rsp+0x38],rax
   140015a05:	and    QWORD PTR [rsp+0x30],0x0
   140015a0b:	mov    rcx,rbx
   140015a0e:	mov    DWORD PTR [rsp+0x28],0x2001f
   140015a16:	and    DWORD PTR [rsp+0x20],0x0
   140015a1b:	call   QWORD PTR [rip+0x1b60f]        # 0x140031030
   140015a21:	mov    rcx,rbx
   140015a24:	call   QWORD PTR [rip+0x1b5f6]        # 0x140031020
   140015a2a:	mov    rax,QWORD PTR [rsp+0x78]
   140015a2f:	mov    rbx,QWORD PTR [rsp+0x60]
   140015a34:	add    rsp,0x50
   140015a38:	pop    rdi
   140015a39:	ret    
   140015a3a:	int3   
   140015a3b:	int3   
   140015a3c:	rex push rbx
   140015a3e:	push   rbp
   140015a3f:	push   rsi
   140015a40:	push   rdi
   140015a41:	sub    rsp,0x68
   140015a45:	mov    rax,QWORD PTR [rip+0x2a584]        # 0x14003ffd0
   140015a4c:	xor    rax,rsp
   140015a4f:	mov    QWORD PTR [rsp+0x58],rax
   140015a54:	xor    esi,esi
   140015a56:	mov    rbp,r8
   140015a59:	mov    rdi,rdx
   140015a5c:	cmp    QWORD PTR [rcx+0xa8],rsi
   140015a63:	mov    rbx,rcx
   140015a66:	mov    DWORD PTR [rsp+0x30],r9d
   140015a6b:	je     0x140015ab7
   140015a6d:	call   0x1400159c8
   140015a72:	cmp    rax,rsi
   140015a75:	mov    rdi,rax
   140015a78:	jne    0x140015a7e
   140015a7a:	xor    eax,eax
   140015a7c:	jmp    0x140015ae5
   140015a7e:	lea    rax,[rsp+0x30]
   140015a83:	mov    r9d,0x4
   140015a89:	xor    r8d,r8d
   140015a8c:	mov    DWORD PTR [rsp+0x28],r9d
   140015a91:	mov    rdx,rbp
   140015a94:	mov    rcx,rdi
   140015a97:	mov    QWORD PTR [rsp+0x20],rax
   140015a9c:	call   QWORD PTR [rip+0x1b596]        # 0x140031038
   140015aa2:	mov    rcx,rdi
   140015aa5:	mov    ebx,eax
   140015aa7:	call   QWORD PTR [rip+0x1b573]        # 0x140031020
   140015aad:	cmp    ebx,esi
   140015aaf:	sete   sil
   140015ab3:	mov    eax,esi
   140015ab5:	jmp    0x140015ae5
   140015ab7:	lea    r8,[rip+0x210ae]        # 0x140036b6c
   140015abe:	lea    rcx,[rsp+0x38]
   140015ac3:	mov    edx,0x10
   140015ac8:	call   0x14001b1d0
   140015acd:	mov    r9,QWORD PTR [rbx+0xd0]
   140015ad4:	lea    r8,[rsp+0x38]
   140015ad9:	mov    rdx,rbp
   140015adc:	mov    rcx,rdi
   140015adf:	call   QWORD PTR [rip+0x1b813]        # 0x1400312f8
   140015ae5:	mov    rcx,QWORD PTR [rsp+0x58]
   140015aea:	xor    rcx,rsp
   140015aed:	call   0x140019370
   140015af2:	add    rsp,0x68
   140015af6:	pop    rdi
   140015af7:	pop    rsi
   140015af8:	pop    rbp
   140015af9:	pop    rbx
   140015afa:	ret    
   140015afb:	int3   
   140015afc:	mov    QWORD PTR [rsp+0x18],rbx
   140015b01:	mov    QWORD PTR [rsp+0x20],rsi
   140015b06:	push   rdi
   140015b07:	sub    rsp,0x230
   140015b0e:	mov    rax,QWORD PTR [rip+0x2a4bb]        # 0x14003ffd0
   140015b15:	xor    rax,rsp
   140015b18:	mov    QWORD PTR [rsp+0x220],rax
   140015b20:	test   rcx,rcx
   140015b23:	mov    rbx,rdx
   140015b26:	mov    rdi,rcx
   140015b29:	jne    0x140015b31
   140015b2b:	call   0x140006408
   140015b30:	int3   
   140015b31:	test   rdx,rdx
   140015b34:	jne    0x140015b3c
   140015b36:	call   0x140006408
   140015b3b:	int3   
   140015b3c:	mov    rcx,rdx
   140015b3f:	call   QWORD PTR [rip+0x1b8f3]        # 0x140031438
   140015b45:	and    WORD PTR [rsp+0x20],0x0
   140015b4b:	lea    rcx,[rsp+0x22]
   140015b50:	xor    edx,edx
   140015b52:	mov    r8d,0x1fe
   140015b58:	mov    esi,eax
   140015b5a:	call   0x14001b520
   140015b5f:	mov    r8d,0x100
   140015b65:	cmp    esi,r8d
   140015b68:	ja     0x140015b8e
   140015b6a:	lea    rdx,[rsp+0x20]
   140015b6f:	mov    rcx,rdi
   140015b72:	call   QWORD PTR [rip+0x1ba40]        # 0x1400315b8
   140015b78:	cmp    eax,esi
   140015b7a:	jne    0x140015b8e
   140015b7c:	lea    rcx,[rsp+0x20]
   140015b81:	mov    rdx,rbx
   140015b84:	call   QWORD PTR [rip+0x1b85e]        # 0x1400313e8
   140015b8a:	test   eax,eax
   140015b8c:	je     0x140015b9a
   140015b8e:	mov    rdx,rbx
   140015b91:	mov    rcx,rdi
   140015b94:	call   QWORD PTR [rip+0x1b99e]        # 0x140031538
   140015b9a:	mov    rcx,QWORD PTR [rsp+0x220]
   140015ba2:	xor    rcx,rsp
   140015ba5:	call   0x140019370
   140015baa:	lea    r11,[rsp+0x230]
   140015bb2:	mov    rbx,QWORD PTR [r11+0x20]
   140015bb6:	mov    rsi,QWORD PTR [r11+0x28]
   140015bba:	mov    rsp,r11
   140015bbd:	pop    rdi
   140015bbe:	ret    
   140015bbf:	int3   
   140015bc0:	rex push rbx
   140015bc2:	sub    rsp,0x20
   140015bc6:	test   rcx,rcx
   140015bc9:	mov    rbx,rcx
   140015bcc:	jne    0x140015bd4
   140015bce:	call   0x140006408
   140015bd3:	int3   
   140015bd4:	mov    rcx,QWORD PTR [rcx]
   140015bd7:	test   rcx,rcx
   140015bda:	je     0x140015be6
   140015bdc:	call   QWORD PTR [rip+0x1b4f6]        # 0x1400310d8
   140015be2:	and    QWORD PTR [rbx],0x0
   140015be6:	add    rsp,0x20
   140015bea:	pop    rbx
   140015beb:	ret    
   140015bec:	test   rcx,rcx
   140015bef:	je     0x140015c2c
   140015bf1:	mov    QWORD PTR [rsp+0x8],rbx
   140015bf6:	push   rdi
   140015bf7:	sub    rsp,0x20
   140015bfb:	mov    rbx,rcx
   140015bfe:	call   QWORD PTR [rip+0x1b6ec]        # 0x1400312f0
   140015c04:	test   al,al
   140015c06:	movzx  edi,al
   140015c09:	je     0x140015c19
   140015c0b:	mov    rcx,rbx
   140015c0e:	call   QWORD PTR [rip+0x1b80c]        # 0x140031420
   140015c14:	add    edi,0xffffffff
   140015c17:	jne    0x140015c0b
   140015c19:	mov    rcx,rbx
   140015c1c:	call   QWORD PTR [rip+0x1b7e6]        # 0x140031408
   140015c22:	mov    rbx,QWORD PTR [rsp+0x30]
   140015c27:	add    rsp,0x20
   140015c2b:	pop    rdi
   140015c2c:	ret    
   140015c2d:	int3   
   140015c2e:	int3   
   140015c2f:	int3   
   140015c30:	mov    QWORD PTR [rsp+0x8],rbx
   140015c35:	push   rdi
   140015c36:	sub    rsp,0x20
   140015c3a:	mov    rdi,rcx
   140015c3d:	call   0x140012910
   140015c42:	test   rax,rax
   140015c45:	mov    rbx,rax
   140015c48:	je     0x140015c8d
   140015c4a:	mov    rcx,QWORD PTR [rax+0x18]
   140015c4e:	test   rcx,rcx
   140015c51:	je     0x140015c8d
   140015c53:	call   0x14001bff0
   140015c58:	lea    rcx,[rdi+0x4]
   140015c5c:	cmp    rax,rcx
   140015c5f:	mov    rcx,QWORD PTR [rbx+0x18]
   140015c63:	ja     0x140015c71
   140015c65:	call   0x14001a540
   140015c6a:	and    QWORD PTR [rbx+0x18],0x0
   140015c6f:	jmp    0x140015c7d
   140015c71:	sub    rax,rdi
   140015c74:	lea    rdx,[rax-0x4]
   140015c78:	call   0x14001bf00
   140015c7d:	mov    eax,0x1
   140015c82:	mov    rbx,QWORD PTR [rsp+0x30]
   140015c87:	add    rsp,0x20
   140015c8b:	pop    rdi
   140015c8c:	ret    
   140015c8d:	call   0x1400063c0
   140015c92:	int3   
   140015c93:	int3   
   140015c94:	mov    QWORD PTR [rsp+0x10],rdx
   140015c99:	push   rbx
   140015c9a:	sub    rsp,0x30
   140015c9e:	lea    rdx,[rsp+0x48]
   140015ca3:	mov    rbx,rcx
   140015ca6:	call   QWORD PTR [rip+0x1b8a4]        # 0x140031550
   140015cac:	mov    edx,0x5
   140015cb1:	mov    rcx,rbx
   140015cb4:	call   QWORD PTR [rip+0x1b9c6]        # 0x140031680
   140015cba:	test   rax,rax
   140015cbd:	mov    rbx,rax
   140015cc0:	je     0x140015d12
   140015cc2:	mov    rcx,rax
   140015cc5:	call   QWORD PTR [rip+0x1b97d]        # 0x140031648
   140015ccb:	test   ax,ax
   140015cce:	je     0x140015d06
   140015cd0:	mov    edx,0xfffffff0
   140015cd5:	mov    rcx,rbx
   140015cd8:	call   QWORD PTR [rip+0x1ba6a]        # 0x140031748
   140015cde:	bt     eax,0x1c
   140015ce2:	jae    0x140015d06
   140015ce4:	lea    rdx,[rsp+0x20]
   140015ce9:	mov    rcx,rbx
   140015cec:	call   QWORD PTR [rip+0x1b986]        # 0x140031678
   140015cf2:	mov    rdx,QWORD PTR [rsp+0x48]
   140015cf7:	lea    rcx,[rsp+0x20]
   140015cfc:	call   QWORD PTR [rip+0x1b93e]        # 0x140031640
   140015d02:	test   eax,eax
   140015d04:	jne    0x140015d0d
   140015d06:	mov    edx,0x2
   140015d0b:	jmp    0x140015cb1
   140015d0d:	mov    rax,rbx
   140015d10:	jmp    0x140015d14
   140015d12:	xor    eax,eax
   140015d14:	add    rsp,0x30
   140015d18:	pop    rbx
   140015d19:	ret    
   140015d1a:	int3   
   140015d1b:	int3   
   140015d1c:	sub    rsp,0x28
   140015d20:	call   0x1400131d0
   140015d25:	xor    ecx,ecx
   140015d27:	cmp    DWORD PTR [rax+0x50],ecx
   140015d2a:	sete   cl
   140015d2d:	mov    eax,ecx
   140015d2f:	add    rsp,0x28
   140015d33:	ret    
   140015d34:	sub    rsp,0x28
   140015d38:	call   0x1400131d0
   140015d3d:	lock add DWORD PTR [rax+0x50],0x1
   140015d42:	add    rsp,0x28
   140015d46:	ret    
   140015d47:	int3   
   140015d48:	sub    rsp,0x28
   140015d4c:	call   0x1400131d0
   140015d51:	mov    eax,DWORD PTR [rax+0x54]
   140015d54:	add    rsp,0x28
   140015d58:	ret    
   140015d59:	int3   
   140015d5a:	int3   
   140015d5b:	int3   
   140015d5c:	rex push rbx
   140015d5e:	sub    rsp,0x20
   140015d62:	call   0x1400131d0
   140015d67:	cmp    DWORD PTR [rax+0x54],0x0
   140015d6b:	jne    0x140015dba
   140015d6d:	call   0x1400131d0
   140015d72:	mov    DWORD PTR [rax+0x54],0x1
   140015d79:	call   0x1400131d0
   140015d7e:	mov    rbx,QWORD PTR [rax+0x8]
   140015d82:	test   rbx,rbx
   140015d85:	je     0x140015da8
   140015d87:	mov    rcx,QWORD PTR [rbx+0x40]
   140015d8b:	test   rcx,rcx
   140015d8e:	je     0x140015da8
   140015d90:	call   0x14001334c
   140015d95:	test   eax,eax
   140015d97:	je     0x140015dba
   140015d99:	mov    rcx,QWORD PTR [rbx+0x40]
   140015d9d:	mov    rax,QWORD PTR [rcx]
   140015da0:	call   QWORD PTR [rax+0xc0]
   140015da6:	jmp    0x140015dba
   140015da8:	call   0x1400131d0
   140015dad:	cmp    BYTE PTR [rax+0x28],0x0
   140015db1:	jne    0x140015dba
   140015db3:	xor    ecx,ecx
   140015db5:	call   0x1400070f0
   140015dba:	add    rsp,0x20
   140015dbe:	pop    rbx
   140015dbf:	ret    
   140015dc0:	sub    rsp,0x28
   140015dc4:	call   0x1400131d0
   140015dc9:	lock add DWORD PTR [rax+0x50],0xffffffff
   140015dce:	jne    0x140015dd5
   140015dd0:	call   0x140015d5c
   140015dd5:	add    rsp,0x28
   140015dd9:	ret    
   140015dda:	int3   
   140015ddb:	int3   
   140015ddc:	sub    rsp,0x28
   140015de0:	cmp    DWORD PTR [rcx+0x50],0x3ffffffe
   140015de7:	jb     0x140015df8
   140015de9:	mov    rdx,QWORD PTR [rcx+0x18]
   140015ded:	mov    ecx,0x5
   140015df2:	call   0x1400156e8
   140015df7:	int3   
   140015df8:	add    rsp,0x28
   140015dfc:	ret    
   140015dfd:	int3   
   140015dfe:	int3   
   140015dff:	int3   
   140015e00:	mov    QWORD PTR [rsp+0x8],rbx
   140015e05:	mov    QWORD PTR [rsp+0x10],rbp
   140015e0a:	mov    QWORD PTR [rsp+0x18],rsi
   140015e0f:	push   rdi
   140015e10:	push   r12
   140015e12:	push   r13
   140015e14:	sub    rsp,0x20
   140015e18:	xor    edi,edi
   140015e1a:	mov    rbp,rdx
   140015e1d:	mov    rsi,rcx
   140015e20:	cmp    rdx,rdi
   140015e23:	jge    0x140015e2b
   140015e25:	call   0x140006408
   140015e2a:	int3   
   140015e2b:	cmp    r8,rdi
   140015e2e:	jl     0x140015e34
   140015e30:	mov    QWORD PTR [rcx+0x20],r8
   140015e34:	cmp    rdx,rdi
   140015e37:	mov    rcx,QWORD PTR [rcx+0x8]
   140015e3b:	jne    0x140015e6c
   140015e3d:	cmp    rcx,rdi
   140015e40:	je     0x140015e5f
   140015e42:	cmp    QWORD PTR [rsi+0x10],rdi
   140015e46:	mov    edx,edi
   140015e48:	jle    0x140015e56
   140015e4a:	add    edx,0x1
   140015e4d:	movsxd rax,edx
   140015e50:	cmp    rax,QWORD PTR [rsi+0x10]
   140015e54:	jl     0x140015e4a
   140015e56:	call   0x140006160
   140015e5b:	mov    QWORD PTR [rsi+0x8],rdi
   140015e5f:	mov    QWORD PTR [rsi+0x18],rdi
   140015e63:	mov    QWORD PTR [rsi+0x10],rdi
   140015e67:	jmp    0x140016018
   140015e6c:	cmp    rcx,rdi
   140015e6f:	jne    0x140015eb5
   140015e71:	mov    r12,QWORD PTR [rsi+0x20]
   140015e75:	cmp    rdx,r12
   140015e78:	cmovg  r12,rdx
   140015e7c:	mov    rbx,r12
   140015e7f:	shl    rbx,0x2
   140015e83:	mov    rcx,rbx
   140015e86:	call   0x140006114
   140015e8b:	mov    r8,rbx
   140015e8e:	xor    edx,edx
   140015e90:	mov    rcx,rax
   140015e93:	mov    QWORD PTR [rsi+0x8],rax
   140015e97:	call   0x14001b520
   140015e9c:	cmp    rbp,rdi
   140015e9f:	jle    0x140016010
   140015ea5:	add    edi,0x1
   140015ea8:	movsxd rax,edi
   140015eab:	cmp    rax,rbp
   140015eae:	jl     0x140015ea5
   140015eb0:	jmp    0x140016010
   140015eb5:	mov    r8,QWORD PTR [rsi+0x18]
   140015eb9:	cmp    rdx,r8
   140015ebc:	jg     0x140015f2c
   140015ebe:	mov    rax,QWORD PTR [rsi+0x10]
   140015ec2:	cmp    rax,rdx
   140015ec5:	jge    0x140015f03
   140015ec7:	mov    r8,rdx
   140015eca:	lea    rcx,[rcx+rax*4]
   140015ece:	xor    edx,edx
   140015ed0:	sub    r8,rax
   140015ed3:	shl    r8,0x2
   140015ed7:	call   0x14001b520
   140015edc:	mov    rax,rbp
   140015edf:	sub    rax,QWORD PTR [rsi+0x10]
   140015ee3:	cmp    rax,rdi
   140015ee6:	jle    0x140016014
   140015eec:	mov    rcx,rbp
   140015eef:	sub    rcx,QWORD PTR [rsi+0x10]
   140015ef3:	add    edi,0x1
   140015ef6:	movsxd rax,edi
   140015ef9:	cmp    rax,rcx
   140015efc:	jl     0x140015ef3
   140015efe:	jmp    0x140016014
   140015f03:	jle    0x140016014
   140015f09:	sub    rax,rdx
   140015f0c:	cmp    rax,rdi
   140015f0f:	jle    0x140016014
   140015f15:	mov    rcx,QWORD PTR [rsi+0x10]
   140015f19:	sub    rcx,rdx
   140015f1c:	add    edi,0x1
   140015f1f:	movsxd rax,edi
   140015f22:	cmp    rax,rcx
   140015f25:	jl     0x140015f1c
   140015f27:	jmp    0x140016014
   140015f2c:	mov    rax,QWORD PTR [rsi+0x20]
   140015f30:	cmp    rax,rdi
   140015f33:	jne    0x140015f60
   140015f35:	mov    rax,QWORD PTR [rsi+0x10]
   140015f39:	cqo    
   140015f3b:	and    edx,0x7
   140015f3e:	add    rax,rdx
   140015f41:	mov    edx,0x400
   140015f46:	sar    rax,0x3
   140015f4a:	cmp    rax,rdx
   140015f4d:	mov    rcx,rax
   140015f50:	cmovg  rax,rdx
   140015f54:	mov    edx,0x4
   140015f59:	cmp    rcx,rdx
   140015f5c:	cmovl  rax,rdx
   140015f60:	add    rax,r8
   140015f63:	mov    r12,rbp
   140015f66:	cmp    rbp,rax
   140015f69:	cmovl  r12,rax
   140015f6d:	cmp    r12,r8
   140015f70:	jge    0x140015f78
   140015f72:	call   0x140006408
   140015f77:	int3   
   140015f78:	mov    rbx,r12
   140015f7b:	shl    rbx,0x2
   140015f7f:	mov    rcx,rbx
   140015f82:	call   0x140006114
   140015f87:	mov    r9,QWORD PTR [rsi+0x10]
   140015f8b:	mov    r8,QWORD PTR [rsi+0x8]
   140015f8f:	shl    r9,0x2
   140015f93:	mov    rdx,rbx
   140015f96:	mov    rcx,rax
   140015f99:	mov    r13,rax
   140015f9c:	call   0x140018ee0
   140015fa1:	cmp    eax,edi
   140015fa3:	je     0x140015fcb
   140015fa5:	cmp    eax,0xc
   140015fa8:	je     0x140015fc5
   140015faa:	cmp    eax,0x16
   140015fad:	je     0x140015fbf
   140015faf:	cmp    eax,0x22
   140015fb2:	je     0x140015fbf
   140015fb4:	cmp    eax,0x50
   140015fb7:	je     0x140015fcb
   140015fb9:	call   0x140006408
   140015fbe:	int3   
   140015fbf:	call   0x140006408
   140015fc4:	int3   
   140015fc5:	call   0x1400063c0
   140015fca:	int3   
   140015fcb:	mov    rax,QWORD PTR [rsi+0x10]
   140015fcf:	mov    r8,rbp
   140015fd2:	xor    edx,edx
   140015fd4:	sub    r8,rax
   140015fd7:	lea    rcx,[r13+rax*4+0x0]
   140015fdc:	shl    r8,0x2
   140015fe0:	call   0x14001b520
   140015fe5:	mov    rax,rbp
   140015fe8:	sub    rax,QWORD PTR [rsi+0x10]
   140015fec:	cmp    rax,rdi
   140015fef:	jle    0x140016003
   140015ff1:	mov    rcx,rbp
   140015ff4:	sub    rcx,QWORD PTR [rsi+0x10]
   140015ff8:	add    edi,0x1
   140015ffb:	movsxd rax,edi
   140015ffe:	cmp    rax,rcx
   140016001:	jl     0x140015ff8
   140016003:	mov    rcx,QWORD PTR [rsi+0x8]
   140016007:	call   0x140006160
   14001600c:	mov    QWORD PTR [rsi+0x8],r13
   140016010:	mov    QWORD PTR [rsi+0x18],r12
   140016014:	mov    QWORD PTR [rsi+0x10],rbp
   140016018:	mov    rbx,QWORD PTR [rsp+0x40]
   14001601d:	mov    rbp,QWORD PTR [rsp+0x48]
   140016022:	mov    rsi,QWORD PTR [rsp+0x50]
   140016027:	add    rsp,0x20
   14001602b:	pop    r13
   14001602d:	pop    r12
   14001602f:	pop    rdi
   140016030:	ret    
   140016031:	int3   
   140016032:	int3   
   140016033:	int3   
   140016034:	mov    rax,rsp
   140016037:	mov    QWORD PTR [rax+0x8],rbx
   14001603b:	mov    QWORD PTR [rax+0x10],rbp
   14001603f:	mov    QWORD PTR [rax+0x18],rsi
   140016043:	mov    QWORD PTR [rax+0x20],rdi
   140016047:	push   r12
   140016049:	sub    rsp,0x20
   14001604d:	test   rdx,rdx
   140016050:	mov    rbx,r9
   140016053:	mov    r12,r8
   140016056:	mov    rsi,rdx
   140016059:	mov    rdi,rcx
   14001605c:	js     0x14001614d
   140016062:	test   rbx,rbx
   140016065:	jle    0x14001614d
   14001606b:	or     r8,0xffffffffffffffff
   14001606f:	cmp    rdx,QWORD PTR [rcx+0x10]
   140016073:	jl     0x140016082
   140016075:	add    rdx,r9
   140016078:	call   0x140015e00
   14001607d:	jmp    0x140016119
   140016082:	mov    rbp,QWORD PTR [rcx+0x10]
   140016086:	lea    rdx,[r9+rbp*1]
   14001608a:	call   0x140015e00
   14001608f:	xor    r11d,r11d
   140016092:	test   rbx,rbx
   140016095:	jle    0x1400160a3
   140016097:	add    r11d,0x1
   14001609b:	movsxd rax,r11d
   14001609e:	cmp    rax,rbx
   1400160a1:	jl     0x140016097
   1400160a3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400160a7:	lea    rax,[rsi+rbx*1]
   1400160ab:	sub    rbp,rsi
   1400160ae:	lea    r8,[rcx+rsi*4]
   1400160b2:	shl    rbp,0x2
   1400160b6:	lea    rcx,[rcx+rax*4]
   1400160ba:	mov    r9,rbp
   1400160bd:	mov    rdx,rbp
   1400160c0:	call   0x140018fb0
   1400160c5:	test   eax,eax
   1400160c7:	je     0x1400160ef
   1400160c9:	cmp    eax,0xc
   1400160cc:	je     0x1400160e9
   1400160ce:	cmp    eax,0x16
   1400160d1:	je     0x1400160e3
   1400160d3:	cmp    eax,0x22
   1400160d6:	je     0x1400160e3
   1400160d8:	cmp    eax,0x50
   1400160db:	je     0x1400160ef
   1400160dd:	call   0x140006408
   1400160e2:	int3   
   1400160e3:	call   0x140006408
   1400160e8:	int3   
   1400160e9:	call   0x1400063c0
   1400160ee:	int3   
   1400160ef:	mov    rax,QWORD PTR [rdi+0x8]
   1400160f3:	mov    r8,rbx
   1400160f6:	xor    edx,edx
   1400160f8:	lea    rcx,[rax+rsi*4]
   1400160fc:	shl    r8,0x2
   140016100:	call   0x14001b520
   140016105:	xor    r11d,r11d
   140016108:	test   rbx,rbx
   14001610b:	jle    0x140016119
   14001610d:	add    r11d,0x1
   140016111:	movsxd rax,r11d
   140016114:	cmp    rax,rbx
   140016117:	jl     0x14001610d
   140016119:	shl    rsi,0x2
   14001611d:	mov    rcx,QWORD PTR [rdi+0x8]
   140016121:	mov    eax,DWORD PTR [r12]
   140016125:	mov    DWORD PTR [rsi+rcx*1],eax
   140016128:	add    rsi,0x4
   14001612c:	sub    rbx,0x1
   140016130:	jne    0x14001611d
   140016132:	mov    rbx,QWORD PTR [rsp+0x30]
   140016137:	mov    rbp,QWORD PTR [rsp+0x38]
   14001613c:	mov    rsi,QWORD PTR [rsp+0x40]
   140016141:	mov    rdi,QWORD PTR [rsp+0x48]
   140016146:	add    rsp,0x20
   14001614a:	pop    r12
   14001614c:	ret    
   14001614d:	call   0x140006408
   140016152:	int3   
   140016153:	int3   
   140016154:	sub    rsp,0x28
   140016158:	lea    rax,[rip+0x1e451]        # 0x1400345b0
   14001615f:	xor    edx,edx
   140016161:	cmp    QWORD PTR [rcx+0x8],rdx
   140016165:	mov    QWORD PTR [rcx],rax
   140016168:	je     0x140016185
   14001616a:	cmp    QWORD PTR [rcx+0x10],rdx
   14001616e:	jle    0x14001617c
   140016170:	add    edx,0x1
   140016173:	movsxd rax,edx
   140016176:	cmp    rax,QWORD PTR [rcx+0x10]
   14001617a:	jl     0x140016170
   14001617c:	mov    rcx,QWORD PTR [rcx+0x8]
   140016180:	call   0x140006160
   140016185:	add    rsp,0x28
   140016189:	ret    
   14001618a:	int3   
   14001618b:	int3   
   14001618c:	mov    QWORD PTR [rsp+0x8],rbx
   140016191:	push   rdi
   140016192:	sub    rsp,0x20
   140016196:	mov    ebx,edx
   140016198:	mov    rdi,rcx
   14001619b:	call   0x140016154
   1400161a0:	test   bl,0x1
   1400161a3:	je     0x1400161ad
   1400161a5:	mov    rcx,rdi
   1400161a8:	call   0x140006160
   1400161ad:	mov    rax,rdi
   1400161b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400161b5:	add    rsp,0x20
   1400161b9:	pop    rdi
   1400161ba:	ret    
   1400161bb:	int3   
   1400161bc:	mov    rax,rsp
   1400161bf:	mov    QWORD PTR [rax+0x8],rbx
   1400161c3:	mov    QWORD PTR [rax+0x10],rsi
   1400161c7:	mov    QWORD PTR [rax+0x18],rdi
   1400161cb:	mov    QWORD PTR [rax+0x20],r12
   1400161cf:	push   r13
   1400161d1:	sub    rsp,0x20
   1400161d5:	test   r8,r8
   1400161d8:	mov    rdi,r8
   1400161db:	mov    rsi,rdx
   1400161de:	mov    r12,rcx
   1400161e1:	je     0x1400161ee
   1400161e3:	test   rdx,rdx
   1400161e6:	jne    0x1400161ee
   1400161e8:	call   0x140006408
   1400161ed:	int3   
   1400161ee:	mov    eax,DWORD PTR [rcx+0x20]
   1400161f1:	not    eax
   1400161f3:	test   al,0x1
   1400161f5:	je     0x140016240
   1400161f7:	test   r8,r8
   1400161fa:	je     0x140016225
   1400161fc:	mov    ebx,0x1fffffff
   140016201:	mov    rdx,rsi
   140016204:	mov    rcx,r12
   140016207:	cmp    rdi,rbx
   14001620a:	cmovb  ebx,edi
   14001620d:	mov    r8d,ebx
   140016210:	shl    r8d,0x2
   140016214:	call   0x140014f74
   140016219:	mov    r11d,ebx
   14001621c:	lea    rsi,[rsi+rbx*4]
   140016220:	sub    rdi,r11
   140016223:	jne    0x1400161fc
   140016225:	mov    rbx,QWORD PTR [rsp+0x30]
   14001622a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001622f:	mov    rdi,QWORD PTR [rsp+0x40]
   140016234:	mov    r12,QWORD PTR [rsp+0x48]
   140016239:	add    rsp,0x20
   14001623d:	pop    r13
   14001623f:	ret    
   140016240:	test   r8,r8
   140016243:	je     0x140016225
   140016245:	mov    r13d,0x1fffffff
   14001624b:	mov    rdx,rsi
   14001624e:	mov    rcx,r12
   140016251:	cmp    rdi,r13
   140016254:	cmovb  r13d,edi
   140016258:	mov    ebx,r13d
   14001625b:	shl    ebx,0x2
   14001625e:	mov    r8d,ebx
   140016261:	call   0x140014530
   140016266:	cmp    eax,ebx
   140016268:	jne    0x140016278
   14001626a:	mov    eax,r13d
   14001626d:	lea    rsi,[rsi+r13*4]
   140016271:	sub    rdi,rax
   140016274:	jne    0x140016245
   140016276:	jmp    0x140016225
   140016278:	xor    edx,edx
   14001627a:	lea    ecx,[rdx+0x3]
   14001627d:	call   0x1400156e8
   140016282:	int3   
   140016283:	int3   
   140016284:	rex push rsi
   140016286:	push   rdi
   140016287:	push   r13
   140016289:	sub    rsp,0x30
   14001628d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016296:	mov    QWORD PTR [rsp+0x60],rbx
   14001629b:	mov    QWORD PTR [rsp+0x68],rbp
   1400162a0:	mov    rsi,rdx
   1400162a3:	mov    rbp,rcx
   1400162a6:	mov    rdi,QWORD PTR [rcx+0x60]
   1400162aa:	and    QWORD PTR [rsp+0x50],0x0
   1400162b0:	test   rdi,rdi
   1400162b3:	jne    0x1400162d9
   1400162b5:	lea    ecx,[rdi+0x38]
   1400162b8:	call   0x140006114
   1400162bd:	mov    QWORD PTR [rsp+0x58],rax
   1400162c2:	test   rax,rax
   1400162c5:	je     0x1400162d7
   1400162c7:	lea    edx,[rdi+0xa]
   1400162ca:	mov    rcx,rax
   1400162cd:	call   0x1400178f8
   1400162d2:	mov    rdi,rax
   1400162d5:	jmp    0x1400162d9
   1400162d7:	xor    edi,edi
   1400162d9:	lea    r8,[rsp+0x50]
   1400162de:	mov    r13d,0x1
   1400162e4:	mov    rdx,r13
   1400162e7:	mov    rcx,rdi
   1400162ea:	call   0x1400177a4
   1400162ef:	test   eax,eax
   1400162f1:	je     0x1400162fa
   1400162f3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400162f8:	jmp    0x14001634b
   1400162fa:	mov    ecx,0x28
   1400162ff:	call   0x140006114
   140016304:	mov    rbx,rax
   140016307:	test   rax,rax
   14001630a:	je     0x14001632c
   14001630c:	lea    rax,[rip+0x1e29d]        # 0x1400345b0
   140016313:	mov    QWORD PTR [rbx],rax
   140016316:	and    QWORD PTR [rbx+0x8],0x0
   14001631b:	and    QWORD PTR [rbx+0x20],0x0
   140016320:	and    QWORD PTR [rbx+0x18],0x0
   140016325:	and    QWORD PTR [rbx+0x10],0x0
   14001632a:	jmp    0x14001632e
   14001632c:	xor    ebx,ebx
   14001632e:	mov    r8d,DWORD PTR [rbp+0x68]
   140016332:	mov    rdx,r13
   140016335:	mov    rcx,rbx
   140016338:	call   0x140015e00
   14001633d:	mov    rdx,r13
   140016340:	mov    rcx,rdi
   140016343:	call   0x1400179ac
   140016348:	mov    QWORD PTR [rax],rbx
   14001634b:	mov    QWORD PTR [rbp+0x60],rdi
   14001634f:	test   rsi,rsi
   140016352:	je     0x140016357
   140016354:	mov    QWORD PTR [rsi],rbx
   140016357:	mov    rbx,QWORD PTR [rsp+0x60]
   14001635c:	mov    rbp,QWORD PTR [rsp+0x68]
   140016361:	add    rsp,0x30
   140016365:	pop    r13
   140016367:	pop    rdi
   140016368:	pop    rsi
   140016369:	ret    
   14001636a:	int3   
   14001636b:	int3   
   14001636c:	int3   
   14001636d:	int3   
   14001636e:	int3   
   14001636f:	int3   
   140016370:	int3   
   140016371:	int3   
   140016372:	int3   
   140016373:	int3   
   140016374:	rex push rbp
   140016376:	sub    rsp,0x20
   14001637a:	mov    rbp,rdx
   14001637d:	mov    rcx,QWORD PTR [rbp+0x58]
   140016381:	call   0x140002f20
   140016386:	add    rsp,0x20
   14001638a:	pop    rbp
   14001638b:	ret    
   14001638c:	rex push rbp
   14001638e:	push   rsi
   14001638f:	push   rdi
   140016390:	sub    rsp,0x30
   140016394:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001639d:	mov    QWORD PTR [rsp+0x58],rbx
   1400163a2:	mov    rsi,rdx
   1400163a5:	mov    rdi,rcx
   1400163a8:	mov    eax,DWORD PTR [rcx+0x20]
   1400163ab:	not    eax
   1400163ad:	mov    ebp,0x1
   1400163b2:	test   bpl,al
   1400163b5:	je     0x14001642f
   1400163b7:	xor    ebx,ebx
   1400163b9:	cmp    QWORD PTR [rcx+0x58],rbx
   1400163bd:	jne    0x140016404
   1400163bf:	lea    ecx,[rbp+0x37]
   1400163c2:	call   0x140006114
   1400163c7:	mov    QWORD PTR [rsp+0x50],rax
   1400163cc:	cmp    rax,rbx
   1400163cf:	je     0x1400163de
   1400163d1:	mov    edx,DWORD PTR [rdi+0x68]
   1400163d4:	mov    rcx,rax
   1400163d7:	call   0x1400178f8
   1400163dc:	jmp    0x1400163e1
   1400163de:	mov    rax,rbx
   1400163e1:	mov    QWORD PTR [rdi+0x58],rax
   1400163e5:	mov    r8d,ebp
   1400163e8:	mov    edx,DWORD PTR [rdi+0x6c]
   1400163eb:	mov    rcx,rax
   1400163ee:	call   0x140017668
   1400163f3:	xor    edx,edx
   1400163f5:	mov    rcx,QWORD PTR [rdi+0x58]
   1400163f9:	call   0x1400179ac
   1400163fe:	mov    QWORD PTR [rax],rbx
   140016401:	mov    DWORD PTR [rdi+0x50],ebp
   140016404:	cmp    rsi,rbx
   140016407:	je     0x14001650d
   14001640d:	mov    rcx,rdi
   140016410:	call   0x140015ddc
   140016415:	mov    ebx,DWORD PTR [rdi+0x50]
   140016418:	mov    rdx,rsi
   14001641b:	mov    rcx,QWORD PTR [rdi+0x58]
   14001641f:	call   0x1400179ac
   140016424:	mov    QWORD PTR [rax],rbx
   140016427:	add    DWORD PTR [rdi+0x50],ebp
   14001642a:	jmp    0x14001650d
   14001642f:	xor    ebx,ebx
   140016431:	cmp    QWORD PTR [rcx+0x58],rbx
   140016435:	jne    0x1400164ad
   140016437:	lea    ecx,[rbx+0x28]
   14001643a:	call   0x140006114
   14001643f:	mov    QWORD PTR [rsp+0x50],rax
   140016444:	cmp    rax,rbx
   140016447:	je     0x140016453
   140016449:	mov    rcx,rax
   14001644c:	call   0x1400186a4
   140016451:	jmp    0x140016456
   140016453:	mov    rax,rbx
   140016456:	mov    QWORD PTR [rdi+0x58],rax
   14001645a:	mov    r8d,DWORD PTR [rdi+0x68]
   14001645e:	mov    rdx,rbp
   140016461:	mov    rcx,rax
   140016464:	call   0x140018914
   140016469:	mov    rax,QWORD PTR [rdi+0x58]
   14001646d:	cmp    QWORD PTR [rax+0x10],rbx
   140016471:	jg     0x140016479
   140016473:	call   0x140006408
   140016478:	int3   
   140016479:	mov    rax,QWORD PTR [rax+0x8]
   14001647d:	mov    QWORD PTR [rax],rbx
   140016480:	mov    DWORD PTR [rdi+0x50],ebp
   140016483:	mov    QWORD PTR [rsp+0x60],rbx
   140016488:	lea    rdx,[rsp+0x60]
   14001648d:	mov    rcx,rdi
   140016490:	call   0x140016284
   140016495:	mov    DWORD PTR [rsp+0x50],ebx
   140016499:	mov    r9,rbp
   14001649c:	lea    r8,[rsp+0x50]
   1400164a1:	xor    edx,edx
   1400164a3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400164a8:	call   0x140016034
   1400164ad:	cmp    rsi,rbx
   1400164b0:	je     0x14001650d
   1400164b2:	mov    rcx,rdi
   1400164b5:	call   0x140015ddc
   1400164ba:	mov    edx,DWORD PTR [rdi+0x50]
   1400164bd:	mov    r9,rbp
   1400164c0:	mov    r8,rsi
   1400164c3:	mov    rcx,QWORD PTR [rdi+0x58]
   1400164c7:	call   0x1400186c4
   1400164cc:	mov    QWORD PTR [rsp+0x60],rbx
   1400164d1:	lea    r8,[rsp+0x60]
   1400164d6:	mov    rdx,rbp
   1400164d9:	mov    rcx,QWORD PTR [rdi+0x60]
   1400164dd:	call   0x1400177a4
   1400164e2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400164e7:	cmp    rcx,rbx
   1400164ea:	jne    0x1400164f2
   1400164ec:	call   0x140006408
   1400164f1:	int3   
   1400164f2:	mov    DWORD PTR [rsp+0x50],0x2
   1400164fa:	mov    edx,DWORD PTR [rdi+0x50]
   1400164fd:	mov    r9,rbp
   140016500:	lea    r8,[rsp+0x50]
   140016505:	call   0x140016034
   14001650a:	add    DWORD PTR [rdi+0x50],ebp
   14001650d:	mov    rbx,QWORD PTR [rsp+0x58]
   140016512:	add    rsp,0x30
   140016516:	pop    rdi
   140016517:	pop    rsi
   140016518:	pop    rbp
   140016519:	ret    
   14001651a:	int3   
   14001651b:	int3   
   14001651c:	rex push rbp
   14001651e:	sub    rsp,0x20
   140016522:	mov    rbp,rdx
   140016525:	mov    rcx,QWORD PTR [rbp+0x50]
   140016529:	call   0x140002f20
   14001652e:	add    rsp,0x20
   140016532:	pop    rbp
   140016533:	ret    
   140016534:	int3   
   140016535:	int3   
   140016536:	int3   
   140016537:	int3   
   140016538:	int3   
   140016539:	int3   
   14001653a:	int3   
   14001653b:	int3   
   14001653c:	rex push rbp
   14001653e:	sub    rsp,0x20
   140016542:	mov    rbp,rdx
   140016545:	mov    rcx,QWORD PTR [rbp+0x50]
   140016549:	call   0x140002f20
   14001654e:	add    rsp,0x20
   140016552:	pop    rbp
   140016553:	ret    
   140016554:	mov    QWORD PTR [rsp+0x8],rbx
   140016559:	mov    QWORD PTR [rsp+0x10],rsi
   14001655e:	push   rdi
   14001655f:	sub    rsp,0x20
   140016563:	test   rdx,rdx
   140016566:	mov    rsi,rdx
   140016569:	mov    rdi,rcx
   14001656c:	jne    0x14001657b
   14001656e:	mov    rdx,QWORD PTR [rcx+0x18]
   140016572:	lea    ecx,[rsi+0x6]
   140016575:	call   0x1400156e8
   14001657a:	int3   
   14001657b:	mov    eax,DWORD PTR [rcx+0x20]
   14001657e:	not    eax
   140016580:	test   al,0x1
   140016582:	jne    0x140016593
   140016584:	mov    rdx,QWORD PTR [rcx+0x18]
   140016588:	mov    ecx,0x1
   14001658d:	call   0x1400156e8
   140016592:	int3   
   140016593:	cmp    DWORD PTR [rdx+0xc],0xffff
   14001659a:	jne    0x1400165a2
   14001659c:	call   0x1400063e4
   1400165a1:	int3   
   1400165a2:	xor    edx,edx
   1400165a4:	call   0x14001638c
   1400165a9:	mov    rcx,QWORD PTR [rdi+0x58]
   1400165ad:	mov    rdx,rsi
   1400165b0:	call   0x1400179ac
   1400165b5:	mov    ebx,DWORD PTR [rax]
   1400165b7:	mov    eax,DWORD PTR [rdi+0x20]
   1400165ba:	test   ebx,ebx
   1400165bc:	not    eax
   1400165be:	je     0x140016681
   1400165c4:	cmp    ebx,0x7fff
   1400165ca:	jae    0x14001660b
   1400165cc:	test   al,0x1
   1400165ce:	jne    0x1400165df
   1400165d0:	mov    rdx,QWORD PTR [rdi+0x18]
   1400165d4:	mov    ecx,0x2
   1400165d9:	call   0x1400156e8
   1400165de:	int3   
   1400165df:	mov    rax,QWORD PTR [rdi+0x38]
   1400165e3:	add    rax,0x2
   1400165e7:	cmp    rax,QWORD PTR [rdi+0x40]
   1400165eb:	jbe    0x1400165f5
   1400165ed:	mov    rcx,rdi
   1400165f0:	call   0x14001470c
   1400165f5:	mov    rax,QWORD PTR [rdi+0x38]
   1400165f9:	or     bx,0x8000
   1400165fe:	mov    WORD PTR [rax],bx
   140016601:	add    QWORD PTR [rdi+0x38],0x2
   140016606:	jmp    0x1400166e1
   14001660b:	test   al,0x1
   14001660d:	jne    0x14001661e
   14001660f:	mov    rdx,QWORD PTR [rdi+0x18]
   140016613:	mov    ecx,0x2
   140016618:	call   0x1400156e8
   14001661d:	int3   
   14001661e:	mov    rax,QWORD PTR [rdi+0x38]
   140016622:	add    rax,0x2
   140016626:	cmp    rax,QWORD PTR [rdi+0x40]
   14001662a:	jbe    0x140016634
   14001662c:	mov    rcx,rdi
   14001662f:	call   0x14001470c
   140016634:	mov    rax,QWORD PTR [rdi+0x38]
   140016638:	mov    WORD PTR [rax],0x7fff
   14001663d:	add    QWORD PTR [rdi+0x38],0x2
   140016642:	mov    eax,DWORD PTR [rdi+0x20]
   140016645:	mov    rcx,QWORD PTR [rdi+0x38]
   140016649:	not    eax
   14001664b:	test   al,0x1
   14001664d:	jne    0x14001665e
   14001664f:	mov    rdx,QWORD PTR [rdi+0x18]
   140016653:	mov    ecx,0x2
   140016658:	call   0x1400156e8
   14001665d:	int3   
   14001665e:	lea    rax,[rcx+0x4]
   140016662:	cmp    rax,QWORD PTR [rdi+0x40]
   140016666:	jbe    0x140016670
   140016668:	mov    rcx,rdi
   14001666b:	call   0x14001470c
   140016670:	mov    rax,QWORD PTR [rdi+0x38]
   140016674:	bts    ebx,0x1f
   140016678:	mov    DWORD PTR [rax],ebx
   14001667a:	add    QWORD PTR [rdi+0x38],0x4
   14001667f:	jmp    0x1400166e1
   140016681:	test   al,0x1
   140016683:	jne    0x140016694
   140016685:	mov    rdx,QWORD PTR [rdi+0x18]
   140016689:	mov    ecx,0x2
   14001668e:	call   0x1400156e8
   140016693:	int3   
   140016694:	mov    rax,QWORD PTR [rdi+0x38]
   140016698:	add    rax,0x2
   14001669c:	cmp    rax,QWORD PTR [rdi+0x40]
   1400166a0:	jbe    0x1400166aa
   1400166a2:	mov    rcx,rdi
   1400166a5:	call   0x14001470c
   1400166aa:	mov    rax,QWORD PTR [rdi+0x38]
   1400166ae:	mov    rdx,rdi
   1400166b1:	mov    rcx,rsi
   1400166b4:	or     WORD PTR [rax],0xffff
   1400166b9:	add    QWORD PTR [rdi+0x38],0x2
   1400166be:	call   0x140015328
   1400166c3:	mov    rcx,rdi
   1400166c6:	call   0x140015ddc
   1400166cb:	mov    rcx,QWORD PTR [rdi+0x58]
   1400166cf:	mov    ebx,DWORD PTR [rdi+0x50]
   1400166d2:	mov    rdx,rsi
   1400166d5:	call   0x1400179ac
   1400166da:	mov    QWORD PTR [rax],rbx
   1400166dd:	add    DWORD PTR [rdi+0x50],0x1
   1400166e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400166e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400166eb:	add    rsp,0x20
   1400166ef:	pop    rdi
   1400166f0:	ret    
   1400166f1:	int3   
   1400166f2:	int3   
   1400166f3:	int3   
   1400166f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400166f9:	mov    QWORD PTR [rsp+0x18],rbp
   1400166fe:	push   rsi
   1400166ff:	push   rdi
   140016700:	push   r12
   140016702:	push   r13
   140016704:	push   r14
   140016706:	sub    rsp,0x30
   14001670a:	mov    esi,0x1
   14001670f:	mov    r12,r9
   140016712:	mov    r14,r8
   140016715:	test   BYTE PTR [rcx+0x20],sil
   140016719:	mov    r13,rdx
   14001671c:	mov    rdi,rcx
   14001671f:	jne    0x14001672d
   140016721:	mov    rdx,QWORD PTR [rcx+0x18]
   140016725:	mov    ecx,esi
   140016727:	call   0x1400156e8
   14001672c:	int3   
   14001672d:	test   rdx,rdx
   140016730:	je     0x140016741
   140016732:	cmp    DWORD PTR [rdx+0xc],0xffff
   140016739:	jne    0x140016741
   14001673b:	call   0x1400063e4
   140016740:	int3   
   140016741:	xor    edx,edx
   140016743:	call   0x14001638c
   140016748:	test   BYTE PTR [rdi+0x20],sil
   14001674c:	jne    0x14001675d
   14001674e:	mov    rdx,QWORD PTR [rdi+0x18]
   140016752:	mov    ecx,0x4
   140016757:	call   0x1400156e8
   14001675c:	int3   
   14001675d:	mov    rax,QWORD PTR [rdi+0x38]
   140016761:	add    rax,0x2
   140016765:	cmp    rax,QWORD PTR [rdi+0x40]
   140016769:	jbe    0x14001677c
   14001676b:	mov    edx,DWORD PTR [rdi+0x38]
   14001676e:	mov    rcx,rdi
   140016771:	sub    edx,DWORD PTR [rdi+0x40]
   140016774:	add    edx,0x2
   140016777:	call   0x1400147cc
   14001677c:	mov    rax,QWORD PTR [rdi+0x38]
   140016780:	movzx  ebx,WORD PTR [rax]
   140016783:	add    rax,0x2
   140016787:	cmp    bx,0x7fff
   14001678c:	mov    QWORD PTR [rdi+0x38],rax
   140016790:	jne    0x1400167d2
   140016792:	test   BYTE PTR [rdi+0x20],sil
   140016796:	jne    0x1400167a7
   140016798:	mov    rdx,QWORD PTR [rdi+0x18]
   14001679c:	mov    ecx,0x4
   1400167a1:	call   0x1400156e8
   1400167a6:	int3   
   1400167a7:	add    rax,0x4
   1400167ab:	cmp    rax,QWORD PTR [rdi+0x40]
   1400167af:	jbe    0x1400167c2
   1400167b1:	mov    edx,DWORD PTR [rdi+0x38]
   1400167b4:	mov    rcx,rdi
   1400167b7:	sub    edx,DWORD PTR [rdi+0x40]
   1400167ba:	add    edx,0x4
   1400167bd:	call   0x1400147cc
   1400167c2:	mov    rax,QWORD PTR [rdi+0x38]
   1400167c6:	mov    ebp,DWORD PTR [rax]
   1400167c8:	add    rax,0x4
   1400167cc:	mov    QWORD PTR [rdi+0x38],rax
   1400167d0:	jmp    0x1400167e6
   1400167d2:	movzx  eax,bx
   1400167d5:	mov    ebp,eax
   1400167d7:	shl    ebp,0x10
   1400167da:	and    ebp,0x80008000
   1400167e0:	or     ebp,eax
   1400167e2:	btr    ebp,0xf
   1400167e6:	bt     ebp,0x1f
   1400167ea:	jb     0x14001681d
   1400167ec:	test   r12,r12
   1400167ef:	jne    0x140016800
   1400167f1:	mov    rdx,QWORD PTR [rdi+0x18]
   1400167f5:	lea    ecx,[r12+0x5]
   1400167fa:	call   0x1400156e8
   1400167ff:	int3   
   140016800:	mov    DWORD PTR [r12],ebp
   140016804:	xor    eax,eax
   140016806:	mov    rbx,QWORD PTR [rsp+0x68]
   14001680b:	mov    rbp,QWORD PTR [rsp+0x70]
   140016810:	add    rsp,0x30
   140016814:	pop    r14
   140016816:	pop    r13
   140016818:	pop    r12
   14001681a:	pop    rdi
   14001681b:	pop    rsi
   14001681c:	ret    
   14001681d:	cmp    bx,0xffff
   140016822:	jne    0x1400168f0
   140016828:	lea    rdx,[rsp+0x60]
   14001682d:	mov    rcx,rdi
   140016830:	call   0x140014e70
   140016835:	test   rax,rax
   140016838:	mov    rsi,rax
   14001683b:	jne    0x14001684a
   14001683d:	mov    rdx,QWORD PTR [rdi+0x18]
   140016841:	lea    ecx,[rax+0x6]
   140016844:	call   0x1400156e8
   140016849:	int3   
   14001684a:	mov    eax,DWORD PTR [rax+0xc]
   14001684d:	btr    eax,0x1f
   140016851:	cmp    eax,DWORD PTR [rsp+0x60]
   140016855:	je     0x14001688a
   140016857:	bt     DWORD PTR [rsi+0xc],0x1f
   14001685c:	jb     0x14001686d
   14001685e:	mov    rdx,QWORD PTR [rdi+0x18]
   140016862:	mov    ecx,0x7
   140016867:	call   0x1400156e8
   14001686c:	int3   
   14001686d:	xor    edx,edx
   14001686f:	mov    rcx,rdi
   140016872:	call   0x140016284
   140016877:	mov    rcx,QWORD PTR [rdi+0x60]
   14001687b:	mov    ebx,DWORD PTR [rsp+0x60]
   14001687f:	mov    rdx,rsi
   140016882:	call   0x1400179ac
   140016887:	mov    QWORD PTR [rax],rbx
   14001688a:	mov    rcx,rdi
   14001688d:	call   0x140015ddc
   140016892:	mov    edx,DWORD PTR [rdi+0x50]
   140016895:	mov    rcx,QWORD PTR [rdi+0x58]
   140016899:	mov    ebx,0x1
   14001689e:	mov    r8,rsi
   1400168a1:	mov    r9,rbx
   1400168a4:	call   0x1400186c4
   1400168a9:	mov    rcx,QWORD PTR [rdi+0x60]
   1400168ad:	and    QWORD PTR [rsp+0x28],0x0
   1400168b3:	lea    r8,[rsp+0x28]
   1400168b8:	mov    rdx,rbx
   1400168bb:	call   0x1400177a4
   1400168c0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400168c5:	test   rcx,rcx
   1400168c8:	jne    0x1400168d0
   1400168ca:	call   0x140006408
   1400168cf:	int3   
   1400168d0:	mov    edx,DWORD PTR [rdi+0x50]
   1400168d3:	lea    r8,[rsp+0x20]
   1400168d8:	mov    r9,rbx
   1400168db:	mov    DWORD PTR [rsp+0x20],ebx
   1400168df:	call   0x140016034
   1400168e4:	add    DWORD PTR [rdi+0x50],ebx
   1400168e7:	mov    eax,DWORD PTR [rsp+0x60]
   1400168eb:	jmp    0x1400169af
   1400168f0:	mov    ebx,ebp
   1400168f2:	btr    ebx,0x1f
   1400168f6:	test   ebx,ebx
   1400168f8:	je     0x1400169fe
   1400168fe:	mov    rax,QWORD PTR [rdi+0x58]
   140016902:	mov    ecx,DWORD PTR [rax+0x10]
   140016905:	sub    ecx,esi
   140016907:	cmp    ebx,ecx
   140016909:	ja     0x1400169fe
   14001690f:	mov    rcx,QWORD PTR [rdi+0x60]
   140016913:	and    QWORD PTR [rsp+0x20],0x0
   140016919:	lea    r8,[rsp+0x20]
   14001691e:	mov    rdx,rsi
   140016921:	call   0x1400177a4
   140016926:	mov    rax,QWORD PTR [rsp+0x20]
   14001692b:	test   rax,rax
   14001692e:	jne    0x140016936
   140016930:	call   0x140006408
   140016935:	int3   
   140016936:	mov    esi,ebx
   140016938:	test   rsi,rsi
   14001693b:	js     0x1400169f8
   140016941:	cmp    rsi,QWORD PTR [rax+0x10]
   140016945:	jge    0x1400169f8
   14001694b:	mov    rax,QWORD PTR [rax+0x8]
   14001694f:	cmp    DWORD PTR [rax+rbx*4],0x2
   140016953:	jne    0x140016964
   140016955:	mov    rdx,QWORD PTR [rdi+0x18]
   140016959:	mov    ecx,0x5
   14001695e:	call   0x1400156e8
   140016963:	int3   
   140016964:	test   rsi,rsi
   140016967:	mov    rax,QWORD PTR [rdi+0x58]
   14001696b:	js     0x1400169f2
   140016971:	cmp    rsi,QWORD PTR [rax+0x10]
   140016975:	jge    0x1400169f2
   140016977:	mov    rax,QWORD PTR [rax+0x8]
   14001697b:	mov    rcx,QWORD PTR [rdi+0x60]
   14001697f:	mov    rsi,QWORD PTR [rax+rbx*8]
   140016983:	and    DWORD PTR [rsp+0x60],0x0
   140016988:	test   rcx,rcx
   14001698b:	je     0x1400169a4
   14001698d:	lea    r8,[rsp+0x20]
   140016992:	mov    rdx,rsi
   140016995:	call   0x1400177a4
   14001699a:	test   eax,eax
   14001699c:	je     0x1400169a4
   14001699e:	mov    eax,DWORD PTR [rsp+0x20]
   1400169a2:	jmp    0x1400169ab
   1400169a4:	mov    eax,DWORD PTR [rsi+0xc]
   1400169a7:	btr    eax,0x1f
   1400169ab:	mov    DWORD PTR [rsp+0x60],eax
   1400169af:	test   r13,r13
   1400169b2:	je     0x1400169d4
   1400169b4:	mov    rdx,r13
   1400169b7:	mov    rcx,rsi
   1400169ba:	call   0x14001350c
   1400169bf:	test   eax,eax
   1400169c1:	jne    0x1400169d0
   1400169c3:	mov    rdx,QWORD PTR [rdi+0x18]
   1400169c7:	lea    ecx,[rax+0x6]
   1400169ca:	call   0x1400156e8
   1400169cf:	int3   
   1400169d0:	mov    eax,DWORD PTR [rsp+0x60]
   1400169d4:	test   r14,r14
   1400169d7:	je     0x1400169de
   1400169d9:	mov    DWORD PTR [r14],eax
   1400169dc:	jmp    0x1400169e1
   1400169de:	mov    DWORD PTR [rdi+0x14],eax
   1400169e1:	test   r12,r12
   1400169e4:	je     0x1400169ea
   1400169e6:	mov    DWORD PTR [r12],ebp
   1400169ea:	mov    rax,rsi
   1400169ed:	jmp    0x140016806
   1400169f2:	call   0x140006408
   1400169f7:	int3   
   1400169f8:	call   0x140006408
   1400169fd:	int3   
   1400169fe:	mov    rdx,QWORD PTR [rdi+0x18]
   140016a02:	mov    ecx,0x5
   140016a07:	call   0x1400156e8
   140016a0c:	int3   
   140016a0d:	int3   
   140016a0e:	int3   
   140016a0f:	int3   
   140016a10:	mov    QWORD PTR [rsp+0x8],rbx
   140016a15:	push   rdi
   140016a16:	sub    rsp,0x20
   140016a1a:	mov    eax,DWORD PTR [rdx+0x20]
   140016a1d:	mov    rdi,rdx
   140016a20:	mov    rbx,rcx
   140016a23:	not    eax
   140016a25:	test   al,0x1
   140016a27:	je     0x140016a37
   140016a29:	mov    rdx,QWORD PTR [rcx+0x10]
   140016a2d:	mov    rcx,rdi
   140016a30:	call   0x1400150f0
   140016a35:	jmp    0x140016a4e
   140016a37:	mov    rcx,rdx
   140016a3a:	call   0x140015240
   140016a3f:	or     r8,0xffffffffffffffff
   140016a43:	mov    rcx,rbx
   140016a46:	mov    rdx,rax
   140016a49:	call   0x140015e00
   140016a4e:	mov    r8,QWORD PTR [rbx+0x10]
   140016a52:	mov    rdx,QWORD PTR [rbx+0x8]
   140016a56:	mov    rcx,rdi
   140016a59:	mov    rbx,QWORD PTR [rsp+0x30]
   140016a5e:	add    rsp,0x20
   140016a62:	pop    rdi
   140016a63:	jmp    0x1400161bc
   140016a68:	mov    QWORD PTR [rsp+0x8],rbx
   140016a6d:	mov    QWORD PTR [rsp+0x10],rsi
   140016a72:	push   rdi
   140016a73:	sub    rsp,0x20
   140016a77:	mov    eax,DWORD PTR [rcx+0x20]
   140016a7a:	mov    rsi,rdx
   140016a7d:	mov    rdi,rcx
   140016a80:	not    eax
   140016a82:	test   al,0x1
   140016a84:	jne    0x140016a95
   140016a86:	mov    rdx,QWORD PTR [rcx+0x18]
   140016a8a:	mov    ecx,0x2
   140016a8f:	call   0x1400156e8
   140016a94:	int3   
   140016a95:	xor    edx,edx
   140016a97:	call   0x14001638c
   140016a9c:	test   rsi,rsi
   140016a9f:	jne    0x140016adf
   140016aa1:	mov    eax,DWORD PTR [rdi+0x20]
   140016aa4:	not    eax
   140016aa6:	test   al,0x1
   140016aa8:	jne    0x140016ab7
   140016aaa:	mov    rdx,QWORD PTR [rdi+0x18]
   140016aae:	lea    ecx,[rsi+0x2]
   140016ab1:	call   0x1400156e8
   140016ab6:	int3   
   140016ab7:	mov    rax,QWORD PTR [rdi+0x38]
   140016abb:	add    rax,0x2
   140016abf:	cmp    rax,QWORD PTR [rdi+0x40]
   140016ac3:	jbe    0x140016acd
   140016ac5:	mov    rcx,rdi
   140016ac8:	call   0x14001470c
   140016acd:	mov    rax,QWORD PTR [rdi+0x38]
   140016ad1:	and    WORD PTR [rax],0x0
   140016ad5:	add    QWORD PTR [rdi+0x38],0x2
   140016ada:	jmp    0x140016be3
   140016adf:	mov    rcx,QWORD PTR [rdi+0x58]
   140016ae3:	mov    rdx,rsi
   140016ae6:	call   0x1400179ac
   140016aeb:	mov    ebx,DWORD PTR [rax]
   140016aed:	test   ebx,ebx
   140016aef:	je     0x140016ba6
   140016af5:	cmp    ebx,0x7fff
   140016afb:	mov    eax,DWORD PTR [rdi+0x20]
   140016afe:	not    eax
   140016b00:	jae    0x140016b34
   140016b02:	test   al,0x1
   140016b04:	jne    0x140016b15
   140016b06:	mov    rdx,QWORD PTR [rdi+0x18]
   140016b0a:	mov    ecx,0x2
   140016b0f:	call   0x1400156e8
   140016b14:	int3   
   140016b15:	mov    rax,QWORD PTR [rdi+0x38]
   140016b19:	add    rax,0x2
   140016b1d:	cmp    rax,QWORD PTR [rdi+0x40]
   140016b21:	jbe    0x140016b2b
   140016b23:	mov    rcx,rdi
   140016b26:	call   0x14001470c
   140016b2b:	mov    rax,QWORD PTR [rdi+0x38]
   140016b2f:	mov    WORD PTR [rax],bx
   140016b32:	jmp    0x140016ad5
   140016b34:	test   al,0x1
   140016b36:	jne    0x140016b47
   140016b38:	mov    rdx,QWORD PTR [rdi+0x18]
   140016b3c:	mov    ecx,0x2
   140016b41:	call   0x1400156e8
   140016b46:	int3   
   140016b47:	mov    rax,QWORD PTR [rdi+0x38]
   140016b4b:	add    rax,0x2
   140016b4f:	cmp    rax,QWORD PTR [rdi+0x40]
   140016b53:	jbe    0x140016b5d
   140016b55:	mov    rcx,rdi
   140016b58:	call   0x14001470c
   140016b5d:	mov    rax,QWORD PTR [rdi+0x38]
   140016b61:	mov    WORD PTR [rax],0x7fff
   140016b66:	add    QWORD PTR [rdi+0x38],0x2
   140016b6b:	mov    eax,DWORD PTR [rdi+0x20]
   140016b6e:	mov    rcx,QWORD PTR [rdi+0x38]
   140016b72:	not    eax
   140016b74:	test   al,0x1
   140016b76:	jne    0x140016b87
   140016b78:	mov    rdx,QWORD PTR [rdi+0x18]
   140016b7c:	mov    ecx,0x2
   140016b81:	call   0x1400156e8
   140016b86:	int3   
   140016b87:	lea    rax,[rcx+0x4]
   140016b8b:	cmp    rax,QWORD PTR [rdi+0x40]
   140016b8f:	jbe    0x140016b99
   140016b91:	mov    rcx,rdi
   140016b94:	call   0x14001470c
   140016b99:	mov    rax,QWORD PTR [rdi+0x38]
   140016b9d:	mov    DWORD PTR [rax],ebx
   140016b9f:	add    QWORD PTR [rdi+0x38],0x4
   140016ba4:	jmp    0x140016be3
   140016ba6:	mov    rax,QWORD PTR [rsi]
   140016ba9:	mov    rcx,rsi
   140016bac:	call   QWORD PTR [rax]
   140016bae:	mov    rcx,rdi
   140016bb1:	mov    rdx,rax
   140016bb4:	call   0x140016554
   140016bb9:	mov    rcx,rdi
   140016bbc:	call   0x140015ddc
   140016bc1:	mov    rcx,QWORD PTR [rdi+0x58]
   140016bc5:	mov    ebx,DWORD PTR [rdi+0x50]
   140016bc8:	mov    rdx,rsi
   140016bcb:	call   0x1400179ac
   140016bd0:	mov    rdx,rdi
   140016bd3:	mov    rcx,rsi
   140016bd6:	mov    QWORD PTR [rax],rbx
   140016bd9:	add    DWORD PTR [rdi+0x50],0x1
   140016bdd:	mov    rax,QWORD PTR [rsi]
   140016be0:	call   QWORD PTR [rax+0x10]
   140016be3:	mov    rbx,QWORD PTR [rsp+0x30]
   140016be8:	mov    rsi,QWORD PTR [rsp+0x38]
   140016bed:	add    rsp,0x20
   140016bf1:	pop    rdi
   140016bf2:	ret    
   140016bf3:	int3   
   140016bf4:	rex push rsi
   140016bf6:	push   rdi
   140016bf7:	push   r12
   140016bf9:	sub    rsp,0x40
   140016bfd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140016c06:	mov    QWORD PTR [rsp+0x68],rbx
   140016c0b:	mov    r12,rdx
   140016c0e:	mov    rbx,rcx
   140016c11:	mov    esi,0x1
   140016c16:	test   BYTE PTR [rcx+0x20],sil
   140016c1a:	jne    0x140016c29
   140016c1c:	mov    rdx,QWORD PTR [rcx+0x18]
   140016c20:	lea    ecx,[rsi+0x3]
   140016c23:	call   0x1400156e8
   140016c28:	int3   
   140016c29:	lea    r9,[rsp+0x60]
   140016c2e:	lea    r8,[rsp+0x70]
   140016c33:	call   0x1400166f4
   140016c38:	and    QWORD PTR [rsp+0x20],0x0
   140016c3e:	test   rax,rax
   140016c41:	jne    0x140016d13
   140016c47:	mov    rax,QWORD PTR [rbx+0x58]
   140016c4b:	mov    ecx,DWORD PTR [rax+0x10]
   140016c4e:	sub    ecx,esi
   140016c50:	mov    edi,DWORD PTR [rsp+0x60]
   140016c54:	cmp    edi,ecx
   140016c56:	jbe    0x140016c67
   140016c58:	mov    rdx,QWORD PTR [rbx+0x18]
   140016c5c:	mov    ecx,0x5
   140016c61:	call   0x1400156e8
   140016c66:	int3   
   140016c67:	and    QWORD PTR [rsp+0x60],0x0
   140016c6d:	lea    r8,[rsp+0x60]
   140016c72:	mov    rdx,rsi
   140016c75:	mov    rcx,QWORD PTR [rbx+0x60]
   140016c79:	call   0x1400177a4
   140016c7e:	test   eax,eax
   140016c80:	je     0x140016cc4
   140016c82:	mov    rcx,QWORD PTR [rsp+0x60]
   140016c87:	test   rcx,rcx
   140016c8a:	jne    0x140016c92
   140016c8c:	call   0x140006408
   140016c91:	int3   
   140016c92:	mov    eax,DWORD PTR [rcx+0x10]
   140016c95:	sub    eax,esi
   140016c97:	cmp    edi,eax
   140016c99:	ja     0x140016cc4
   140016c9b:	test   rdi,rdi
   140016c9e:	js     0x140016cbe
   140016ca0:	cmp    rdi,QWORD PTR [rcx+0x10]
   140016ca4:	jge    0x140016cbe
   140016ca6:	mov    rax,QWORD PTR [rcx+0x8]
   140016caa:	cmp    DWORD PTR [rax+rdi*4],esi
   140016cad:	jne    0x140016cc4
   140016caf:	mov    rdx,QWORD PTR [rbx+0x18]
   140016cb3:	mov    ecx,0x5
   140016cb8:	call   0x1400156e8
   140016cbd:	int3   
   140016cbe:	call   0x140006408
   140016cc3:	int3   
   140016cc4:	mov    rax,QWORD PTR [rbx+0x58]
   140016cc8:	test   rdi,rdi
   140016ccb:	js     0x140016d0d
   140016ccd:	cmp    rdi,QWORD PTR [rax+0x10]
   140016cd1:	jge    0x140016d0d
   140016cd3:	mov    rax,QWORD PTR [rax+0x8]
   140016cd7:	mov    rdi,QWORD PTR [rax+rdi*8]
   140016cdb:	test   rdi,rdi
   140016cde:	je     0x140016da9
   140016ce4:	test   r12,r12
   140016ce7:	je     0x140016da9
   140016ced:	mov    rdx,r12
   140016cf0:	mov    rcx,rdi
   140016cf3:	call   0x140013544
   140016cf8:	test   eax,eax
   140016cfa:	jne    0x140016da9
   140016d00:	mov    rdx,QWORD PTR [rbx+0x18]
   140016d04:	lea    ecx,[rax+0x6]
   140016d07:	call   0x1400156e8
   140016d0c:	int3   
   140016d0d:	call   0x140006408
   140016d12:	nop
   140016d13:	mov    rcx,rax
   140016d16:	call   0x140013494
   140016d1b:	mov    rdi,rax
   140016d1e:	mov    QWORD PTR [rsp+0x20],rax
   140016d23:	test   rax,rax
   140016d26:	jne    0x140016d2d
   140016d28:	call   0x1400063c0
   140016d2d:	mov    rcx,rbx
   140016d30:	call   0x140015ddc
   140016d35:	mov    edx,DWORD PTR [rbx+0x50]
   140016d38:	mov    r9,rsi
   140016d3b:	mov    r8,rdi
   140016d3e:	mov    rcx,QWORD PTR [rbx+0x58]
   140016d42:	call   0x1400186c4
   140016d47:	and    QWORD PTR [rsp+0x78],0x0
   140016d4d:	lea    r8,[rsp+0x78]
   140016d52:	mov    rdx,rsi
   140016d55:	mov    rcx,QWORD PTR [rbx+0x60]
   140016d59:	call   0x1400177a4
   140016d5e:	xor    eax,eax
   140016d60:	mov    rcx,QWORD PTR [rsp+0x78]
   140016d65:	test   rcx,rcx
   140016d68:	setne  al
   140016d6b:	test   eax,eax
   140016d6d:	jne    0x140016d74
   140016d6f:	call   0x140006408
   140016d74:	mov    DWORD PTR [rsp+0x60],0x2
   140016d7c:	mov    edx,DWORD PTR [rbx+0x50]
   140016d7f:	mov    r9,rsi
   140016d82:	lea    r8,[rsp+0x60]
   140016d87:	call   0x140016034
   140016d8c:	add    DWORD PTR [rbx+0x50],esi
   140016d8f:	mov    esi,DWORD PTR [rbx+0x14]
   140016d92:	mov    eax,DWORD PTR [rsp+0x70]
   140016d96:	mov    DWORD PTR [rbx+0x14],eax
   140016d99:	mov    r8,QWORD PTR [rdi]
   140016d9c:	mov    rdx,rbx
   140016d9f:	mov    rcx,rdi
   140016da2:	call   QWORD PTR [r8+0x10]
   140016da6:	mov    DWORD PTR [rbx+0x14],esi
   140016da9:	mov    rax,rdi
   140016dac:	mov    rbx,QWORD PTR [rsp+0x68]
   140016db1:	add    rsp,0x40
   140016db5:	pop    r12
   140016db7:	pop    rdi
   140016db8:	pop    rsi
   140016db9:	ret    
   140016dba:	int3   
   140016dbb:	int3   
   140016dbc:	int3   
   140016dbd:	int3   
   140016dbe:	int3   
   140016dbf:	int3   
   140016dc0:	int3   
   140016dc1:	int3   
   140016dc2:	int3   
   140016dc3:	int3   
   140016dc4:	mov    QWORD PTR [rsp+0x10],rdx
   140016dc9:	push   rbp
   140016dca:	push   rsi
   140016dcb:	sub    rsp,0x28
   140016dcf:	mov    rbp,rdx
   140016dd2:	mov    rcx,QWORD PTR [rbp+0x20]
   140016dd6:	test   rcx,rcx
   140016dd9:	je     0x140016de6
   140016ddb:	mov    rax,QWORD PTR [rcx]
   140016dde:	mov    edx,0x1
   140016de3:	call   QWORD PTR [rax+0x8]
   140016de6:	xor    edx,edx
   140016de8:	xor    ecx,ecx
   140016dea:	call   0x14001b070
   140016def:	nop
   140016df0:	add    rsp,0x28
   140016df4:	pop    rsi
   140016df5:	pop    rbp
   140016df6:	ret    
   140016df7:	int3   
   140016df8:	mov    QWORD PTR [rsp+0x8],rbx
   140016dfd:	push   rdi
   140016dfe:	sub    rsp,0x20
   140016e02:	mov    rdi,rcx
   140016e05:	call   QWORD PTR [rip+0x1a77d]        # 0x140031588
   140016e0b:	jmp    0x140016e32
   140016e0d:	xor    r9d,r9d
   140016e10:	xor    r8d,r8d
   140016e13:	mov    edx,0x365
   140016e18:	mov    rcx,rbx
   140016e1b:	call   QWORD PTR [rip+0x1a9a7]        # 0x1400317c8
   140016e21:	test   rax,rax
   140016e24:	jne    0x140016ecb
   140016e2a:	mov    rcx,rbx
   140016e2d:	call   0x14000f324
   140016e32:	test   rax,rax
   140016e35:	mov    rbx,rax
   140016e38:	jne    0x140016e0d
   140016e3a:	call   QWORD PTR [rip+0x1a8e0]        # 0x140031720
   140016e40:	jmp    0x140016e63
   140016e42:	xor    r9d,r9d
   140016e45:	xor    r8d,r8d
   140016e48:	mov    edx,0x365
   140016e4d:	mov    rcx,rbx
   140016e50:	call   QWORD PTR [rip+0x1a972]        # 0x1400317c8
   140016e56:	test   rax,rax
   140016e59:	jne    0x140016ecb
   140016e5b:	mov    rcx,rbx
   140016e5e:	call   0x14000f324
   140016e63:	test   rax,rax
   140016e66:	mov    rbx,rax
   140016e69:	jne    0x140016e42
   140016e6b:	mov    rcx,rdi
   140016e6e:	call   0x14000f39c
   140016e73:	test   rax,rax
   140016e76:	jne    0x140016e7e
   140016e78:	call   0x140006408
   140016e7d:	int3   
   140016e7e:	mov    rcx,QWORD PTR [rax+0x40]
   140016e82:	call   QWORD PTR [rip+0x1a8d0]        # 0x140031758
   140016e88:	jmp    0x140016eab
   140016e8a:	xor    r9d,r9d
   140016e8d:	xor    r8d,r8d
   140016e90:	mov    edx,0x365
   140016e95:	mov    rcx,rbx
   140016e98:	call   QWORD PTR [rip+0x1a92a]        # 0x1400317c8
   140016e9e:	test   rax,rax
   140016ea1:	jne    0x140016ecb
   140016ea3:	mov    rcx,rbx
   140016ea6:	call   0x14000f324
   140016eab:	test   rax,rax
   140016eae:	mov    rbx,rax
   140016eb1:	jne    0x140016e8a
   140016eb3:	mov    rcx,QWORD PTR [rdi+0x40]
   140016eb7:	xor    r9d,r9d
   140016eba:	mov    edx,0x111
   140016ebf:	mov    r8d,0xe147
   140016ec5:	call   QWORD PTR [rip+0x1a8fd]        # 0x1400317c8
   140016ecb:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ed0:	add    rsp,0x20
   140016ed4:	pop    rdi
   140016ed5:	ret    
   140016ed6:	int3   
   140016ed7:	int3   
   140016ed8:	rex push rbx
   140016eda:	sub    rsp,0x20
   140016ede:	mov    eax,DWORD PTR [rcx+0xc0]
   140016ee4:	mov    rbx,rcx
   140016ee7:	test   eax,eax
   140016ee9:	je     0x140016f12
   140016eeb:	cmp    eax,0x3f107
   140016ef0:	je     0x140016f17
   140016ef2:	call   0x1400131d0
   140016ef7:	mov    edx,DWORD PTR [rbx+0xc0]
   140016efd:	mov    r8d,0x1
   140016f03:	mov    rcx,QWORD PTR [rax+0x8]
   140016f07:	mov    rax,QWORD PTR [rcx]
   140016f0a:	call   QWORD PTR [rax+0x158]
   140016f10:	jmp    0x140016f17
   140016f12:	call   0x140016df8
   140016f17:	add    rsp,0x20
   140016f1b:	pop    rbx
   140016f1c:	ret    
   140016f1d:	int3   
   140016f1e:	int3   
   140016f1f:	int3   
   140016f20:	sub    rsp,0x28
   140016f24:	call   0x140013220
   140016f29:	add    DWORD PTR [rax+0x20],0x1
   140016f2d:	add    rsp,0x28
   140016f31:	ret    
   140016f32:	int3   
   140016f33:	int3   
   140016f34:	mov    QWORD PTR [rsp+0x8],rcx
   140016f39:	push   rsi
   140016f3a:	push   rdi
   140016f3b:	push   r12
   140016f3d:	sub    rsp,0x30
   140016f41:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016f4a:	mov    QWORD PTR [rsp+0x58],rbx
   140016f4f:	mov    QWORD PTR [rsp+0x60],rbp
   140016f54:	mov    rdi,r9
   140016f57:	mov    rsi,r8
   140016f5a:	mov    rbp,rdx
   140016f5d:	mov    rbx,rcx
   140016f60:	lea    rax,[rip+0x1d709]        # 0x140034670
   140016f67:	mov    QWORD PTR [rcx],rax
   140016f6a:	add    rcx,0x8
   140016f6e:	mov    r8d,0x40
   140016f74:	mov    edx,DWORD PTR [rdx+0x8]
   140016f77:	call   0x140018800
   140016f7c:	nop
   140016f7d:	lea    rcx,[rbx+0x30]
   140016f81:	mov    edx,0xa
   140016f86:	call   0x1400178f8
   140016f8b:	nop
   140016f8c:	mov    edx,0x4
   140016f91:	lea    rcx,[rbx+0x68]
   140016f95:	call   0x1400178f8
   140016f9a:	nop
   140016f9b:	xor    eax,eax
   140016f9d:	test   rsi,rsi
   140016fa0:	setne  al
   140016fa3:	test   eax,eax
   140016fa5:	jne    0x140016fad
   140016fa7:	call   0x140006408
   140016fac:	int3   
   140016fad:	xor    eax,eax
   140016faf:	test   rdi,rdi
   140016fb2:	setne  al
   140016fb5:	test   eax,eax
   140016fb7:	jne    0x140016fbf
   140016fb9:	call   0x140006408
   140016fbe:	int3   
   140016fbf:	xor    r8d,r8d
   140016fc2:	lea    edx,[r8+0x7]
   140016fc6:	lea    rcx,[rbx+0x68]
   140016fca:	call   0x140017668
   140016fcf:	mov    QWORD PTR [rbx+0xa0],rbp
   140016fd6:	mov    QWORD PTR [rbx+0x20],rsi
   140016fda:	mov    QWORD PTR [rbx+0x28],rdi
   140016fde:	mov    rax,QWORD PTR [rsp+0x70]
   140016fe3:	mov    QWORD PTR [rbx+0xa8],rax
   140016fea:	mov    eax,DWORD PTR [rsp+0x78]
   140016fee:	mov    DWORD PTR [rbx+0xb0],eax
   140016ff4:	mov    rax,rbx
   140016ff7:	mov    rbx,QWORD PTR [rsp+0x58]
   140016ffc:	mov    rbp,QWORD PTR [rsp+0x60]
   140017001:	add    rsp,0x30
   140017005:	pop    r12
   140017007:	pop    rdi
   140017008:	pop    rsi
   140017009:	ret    
   14001700a:	int3   
   14001700b:	int3   
   14001700c:	int3   
   14001700d:	int3   
   14001700e:	int3   
   14001700f:	int3   
   140017010:	int3   
   140017011:	int3   
   140017012:	int3   
   140017013:	int3   
   140017014:	rex push rbp
   140017016:	sub    rsp,0x20
   14001701a:	mov    rbp,rdx
   14001701d:	mov    rcx,QWORD PTR [rbp+0x50]
   140017021:	add    rcx,0x8
   140017025:	call   0x140018850
   14001702a:	add    rsp,0x20
   14001702e:	pop    rbp
   14001702f:	ret    
   140017030:	int3   
   140017031:	int3   
   140017032:	int3   
   140017033:	int3   
   140017034:	rex push rbp
   140017036:	sub    rsp,0x20
   14001703a:	mov    rbp,rdx
   14001703d:	mov    rcx,QWORD PTR [rbp+0x50]
   140017041:	add    rcx,0x30
   140017045:	call   0x140017930
   14001704a:	add    rsp,0x20
   14001704e:	pop    rbp
   14001704f:	ret    
   140017050:	int3   
   140017051:	int3   
   140017052:	int3   
   140017053:	int3   
   140017054:	rex push rbp
   140017056:	sub    rsp,0x20
   14001705a:	mov    rbp,rdx
   14001705d:	mov    rcx,QWORD PTR [rbp+0x50]
   140017061:	add    rcx,0x68
   140017065:	call   0x140017930
   14001706a:	add    rsp,0x20
   14001706e:	pop    rbp
   14001706f:	ret    
   140017070:	rex push rdi
   140017072:	push   r12
   140017074:	push   r13
   140017076:	sub    rsp,0x30
   14001707a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017083:	mov    QWORD PTR [rsp+0x50],rbx
   140017088:	mov    QWORD PTR [rsp+0x60],rsi
   14001708d:	mov    rbx,rdx
   140017090:	mov    rsi,rcx
   140017093:	test   rdx,rdx
   140017096:	jne    0x14001709f
   140017098:	xor    eax,eax
   14001709a:	jmp    0x140017140
   14001709f:	add    rcx,0x30
   1400170a3:	call   0x14001775c
   1400170a8:	test   rax,rax
   1400170ab:	jne    0x140017140
   1400170b1:	mov    rdx,rbx
   1400170b4:	lea    rcx,[rsi+0x68]
   1400170b8:	call   0x14001775c
   1400170bd:	test   rax,rax
   1400170c0:	je     0x1400170dd
   1400170c2:	mov    rcx,QWORD PTR [rsi+0xa8]
   1400170c9:	mov    QWORD PTR [rax+rcx*1],rbx
   1400170cd:	cmp    DWORD PTR [rsi+0xb0],0x2
   1400170d4:	jne    0x140017140
   1400170d6:	mov    QWORD PTR [rax+rcx*1+0x8],rbx
   1400170db:	jmp    0x140017140
   1400170dd:	lea    rcx,[rip+0xffffffffffffeb4c]        # 0x140015c30
   1400170e4:	call   0x140006104
   1400170e9:	mov    r12,rax
   1400170ec:	mov    QWORD PTR [rsp+0x58],rax
   1400170f1:	lea    rcx,[rsi+0x8]
   1400170f5:	call   0x140018858
   1400170fa:	mov    rdi,rax
   1400170fd:	test   rax,rax
   140017100:	jne    0x140017107
   140017102:	call   0x1400063c0
   140017107:	mov    rcx,rax
   14001710a:	call   QWORD PTR [rsi+0x20]
   14001710d:	mov    rdx,rbx
   140017110:	lea    rcx,[rsi+0x68]
   140017114:	call   0x1400179ac
   140017119:	mov    QWORD PTR [rax],rdi
   14001711c:	mov    rcx,r12
   14001711f:	call   0x140006104
   140017124:	mov    r11,QWORD PTR [rsi+0xa8]
   14001712b:	mov    QWORD PTR [rdi+r11*1],rbx
   14001712f:	cmp    DWORD PTR [rsi+0xb0],0x2
   140017136:	jne    0x14001713d
   140017138:	mov    QWORD PTR [rdi+r11*1+0x8],rbx
   14001713d:	mov    rax,rdi
   140017140:	mov    rbx,QWORD PTR [rsp+0x50]
   140017145:	mov    rsi,QWORD PTR [rsp+0x60]
   14001714a:	add    rsp,0x30
   14001714e:	pop    r13
   140017150:	pop    r12
   140017152:	pop    rdi
   140017153:	ret    
   140017154:	int3   
   140017155:	int3   
   140017156:	int3   
   140017157:	int3   
   140017158:	int3   
   140017159:	int3   
   14001715a:	int3   
   14001715b:	int3   
   14001715c:	int3   
   14001715d:	int3   
   14001715e:	int3   
   14001715f:	int3   
   140017160:	mov    QWORD PTR [rsp+0x10],rdx
   140017165:	push   rbp
   140017166:	sub    rsp,0x20
   14001716a:	mov    rbp,rdx
   14001716d:	mov    rcx,QWORD PTR [rbp+0x58]
   140017171:	call   0x140006104
   140017176:	xor    edx,edx
   140017178:	xor    ecx,ecx
   14001717a:	call   0x14001b070
   14001717f:	nop
   140017180:	add    rsp,0x20
   140017184:	pop    rbp
   140017185:	ret    
   140017186:	int3   
   140017187:	int3   
   140017188:	test   rcx,rcx
   14001718b:	je     0x140017216
   140017191:	mov    QWORD PTR [rsp+0x20],rbx
   140017196:	push   rdi
   140017197:	sub    rsp,0x20
   14001719b:	mov    rax,QWORD PTR [rcx+0x80]
   1400171a2:	mov    rbx,rcx
   1400171a5:	neg    rax
   1400171a8:	sbb    rdx,rdx
   1400171ab:	mov    QWORD PTR [rsp+0x38],rdx
   1400171b0:	je     0x1400171fa
   1400171b2:	lea    r9,[rsp+0x30]
   1400171b7:	lea    r8,[rsp+0x40]
   1400171bc:	lea    rdx,[rsp+0x38]
   1400171c1:	lea    rcx,[rbx+0x68]
   1400171c5:	call   0x140017838
   1400171ca:	mov    r11,QWORD PTR [rbx+0xa8]
   1400171d1:	mov    rax,QWORD PTR [rsp+0x30]
   1400171d6:	and    QWORD PTR [rax+r11*1],0x0
   1400171db:	cmp    DWORD PTR [rbx+0xb0],0x2
   1400171e2:	jne    0x1400171ea
   1400171e4:	and    QWORD PTR [rax+r11*1+0x8],0x0
   1400171ea:	mov    rcx,QWORD PTR [rsp+0x30]
   1400171ef:	call   QWORD PTR [rbx+0x28]
   1400171f2:	cmp    QWORD PTR [rsp+0x38],0x0
   1400171f8:	jne    0x1400171b2
   1400171fa:	lea    rcx,[rbx+0x68]
   1400171fe:	call   0x1400176e8
   140017203:	lea    rcx,[rbx+0x8]
   140017207:	call   0x14001882c
   14001720c:	mov    rbx,QWORD PTR [rsp+0x48]
   140017211:	add    rsp,0x20
   140017215:	pop    rdi
   140017216:	ret    
   140017217:	int3   
   140017218:	mov    QWORD PTR [rsp+0x8],rcx
   14001721d:	push   rdi
   14001721e:	sub    rsp,0x30
   140017222:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001722b:	mov    QWORD PTR [rsp+0x48],rbx
   140017230:	mov    ebx,edx
   140017232:	mov    rdi,rcx
   140017235:	lea    rax,[rip+0x1d434]        # 0x140034670
   14001723c:	mov    QWORD PTR [rcx],rax
   14001723f:	call   0x140017188
   140017244:	nop
   140017245:	lea    rcx,[rdi+0x68]
   140017249:	call   0x140017930
   14001724e:	nop
   14001724f:	lea    rcx,[rdi+0x30]
   140017253:	call   0x140017930
   140017258:	nop
   140017259:	lea    rcx,[rdi+0x8]
   14001725d:	call   0x140018850
   140017262:	test   bl,0x1
   140017265:	je     0x14001726f
   140017267:	mov    rcx,rdi
   14001726a:	call   0x140006160
   14001726f:	mov    rax,rdi
   140017272:	mov    rbx,QWORD PTR [rsp+0x48]
   140017277:	add    rsp,0x30
   14001727b:	pop    rdi
   14001727c:	ret    
   14001727d:	int3   
   14001727e:	int3   
   14001727f:	int3   
   140017280:	int3   
   140017281:	int3   
   140017282:	int3   
   140017283:	int3   
   140017284:	int3   
   140017285:	int3   
   140017286:	int3   
   140017287:	int3   
   140017288:	rex push rbp
   14001728a:	sub    rsp,0x20
   14001728e:	mov    rbp,rdx
   140017291:	mov    rcx,QWORD PTR [rbp+0x40]
   140017295:	add    rcx,0x8
   140017299:	call   0x140018850
   14001729e:	add    rsp,0x20
   1400172a2:	pop    rbp
   1400172a3:	ret    
   1400172a4:	int3   
   1400172a5:	int3   
   1400172a6:	int3   
   1400172a7:	int3   
   1400172a8:	rex push rbp
   1400172aa:	sub    rsp,0x20
   1400172ae:	mov    rbp,rdx
   1400172b1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400172b5:	add    rcx,0x30
   1400172b9:	call   0x140017930
   1400172be:	add    rsp,0x20
   1400172c2:	pop    rbp
   1400172c3:	ret    
   1400172c4:	int3   
   1400172c5:	int3   
   1400172c6:	int3   
   1400172c7:	int3   
   1400172c8:	rex push rbp
   1400172ca:	sub    rsp,0x20
   1400172ce:	mov    rbp,rdx
   1400172d1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400172d5:	add    rcx,0x68
   1400172d9:	call   0x140017930
   1400172de:	add    rsp,0x20
   1400172e2:	pop    rbp
   1400172e3:	ret    
   1400172e4:	mov    rax,rsp
   1400172e7:	push   r13
   1400172e9:	sub    rsp,0x30
   1400172ed:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400172f6:	mov    QWORD PTR [rax+0x8],rbx
   1400172fa:	mov    QWORD PTR [rax+0x10],rsi
   1400172fe:	mov    QWORD PTR [rax+0x18],rdi
   140017302:	mov    QWORD PTR [rax+0x20],r12
   140017306:	mov    edi,ecx
   140017308:	call   0x140013220
   14001730d:	mov    rsi,rax
   140017310:	mov    edx,DWORD PTR [rax+0x20]
   140017313:	xor    ebx,ebx
   140017315:	cmp    edx,ebx
   140017317:	je     0x140017404
   14001731d:	add    edx,0xffffffff
   140017320:	mov    DWORD PTR [rax+0x20],edx
   140017323:	cmp    edx,ebx
   140017325:	jne    0x140017404
   14001732b:	cmp    edi,ebx
   14001732d:	je     0x14001737b
   14001732f:	cmp    edi,0xffffffff
   140017332:	je     0x14001734e
   140017334:	call   0x140009454
   140017339:	cmp    rax,rbx
   14001733c:	je     0x14001734e
   14001733e:	mov    r8,QWORD PTR [rax+0x78]
   140017342:	cmp    r8,rbx
   140017345:	je     0x14001734e
   140017347:	xor    edx,edx
   140017349:	xor    ecx,ecx
   14001734b:	call   r8
   14001734e:	mov    rcx,QWORD PTR [rsi+0x40]
   140017352:	call   0x140017188
   140017357:	mov    rcx,QWORD PTR [rsi+0x38]
   14001735b:	call   0x140017188
   140017360:	mov    rcx,QWORD PTR [rsi+0x30]
   140017364:	call   0x140017188
   140017369:	mov    rcx,QWORD PTR [rsi+0x28]
   14001736d:	call   0x140017188
   140017372:	mov    rcx,QWORD PTR [rsi+0x48]
   140017376:	call   0x140017188
   14001737b:	call   0x1400131d0
   140017380:	mov    r12,QWORD PTR [rax+0x8]
   140017384:	lea    rcx,[rip+0x2dcf5]        # 0x140045080
   14001738b:	call   0x140013bec
   140017390:	mov    rdi,rax
   140017393:	cmp    rax,rbx
   140017396:	je     0x140017404
   140017398:	cmp    r12,rbx
   14001739b:	je     0x140017404
   14001739d:	mov    rcx,QWORD PTR [rax+0x18]
   1400173a1:	cmp    rcx,rbx
   1400173a4:	je     0x1400173b5
   1400173a6:	call   0x14001bff0
   1400173ab:	cmp    rax,QWORD PTR [r12+0x128]
   1400173b3:	jae    0x140017404
   1400173b5:	cmp    QWORD PTR [r12+0x128],rbx
   1400173bd:	je     0x140017404
   1400173bf:	mov    r13,rbx
   1400173c2:	mov    rcx,QWORD PTR [rdi+0x18]
   1400173c6:	cmp    rcx,rbx
   1400173c9:	je     0x1400173dd
   1400173cb:	call   0x14001bff0
   1400173d0:	mov    r13,rax
   1400173d3:	mov    rcx,QWORD PTR [rdi+0x18]
   1400173d7:	call   0x14001a540
   1400173dc:	nop
   1400173dd:	mov    rcx,QWORD PTR [r12+0x128]
   1400173e5:	call   0x14001a470
   1400173ea:	mov    QWORD PTR [rdi+0x18],rax
   1400173ee:	cmp    rax,rbx
   1400173f1:	jne    0x140017404
   1400173f3:	cmp    r13,rbx
   1400173f6:	je     0x140017404
   1400173f8:	mov    rcx,r13
   1400173fb:	call   0x14001a470
   140017400:	mov    QWORD PTR [rdi+0x18],rax
   140017404:	cmp    DWORD PTR [rsi+0x20],ebx
   140017407:	setne  bl
   14001740a:	mov    eax,ebx
   14001740c:	mov    rbx,QWORD PTR [rsp+0x40]
   140017411:	mov    rsi,QWORD PTR [rsp+0x48]
   140017416:	mov    rdi,QWORD PTR [rsp+0x50]
   14001741b:	mov    r12,QWORD PTR [rsp+0x58]
   140017420:	add    rsp,0x30
   140017424:	pop    r13
   140017426:	ret    
   140017427:	int3   
   140017428:	int3   
   140017429:	int3   
   14001742a:	int3   
   14001742b:	int3   
   14001742c:	int3   
   14001742d:	int3   
   14001742e:	int3   
   14001742f:	int3   
   140017430:	int3   
   140017431:	int3   
   140017432:	int3   
   140017433:	int3   
   140017434:	mov    QWORD PTR [rsp+0x10],rdx
   140017439:	push   rbp
   14001743a:	sub    rsp,0x20
   14001743e:	mov    rbp,rdx
   140017441:	xor    edx,edx
   140017443:	xor    ecx,ecx
   140017445:	call   0x14001b070
   14001744a:	nop
   14001744b:	add    rsp,0x20
   14001744f:	pop    rbp
   140017450:	ret    
   140017451:	int3   
   140017452:	int3   
   140017453:	int3   
   140017454:	lea    rax,[rip+0x1d2a5]        # 0x140034700
   14001745b:	ret    
   14001745c:	mov    rax,QWORD PTR [rcx]
   14001745f:	xor    edx,edx
   140017461:	rex.W jmp QWORD PTR [rax+0x8]
   140017465:	int3   
   140017466:	int3   
   140017467:	int3   
   140017468:	sub    rsp,0x28
   14001746c:	mov    ecx,0x10
   140017471:	call   0x140006114
   140017476:	test   rax,rax
   140017479:	je     0x14001748c
   14001747b:	and    QWORD PTR [rax+0x8],0x0
   140017480:	lea    rcx,[rip+0x1d2b1]        # 0x140034738
   140017487:	mov    QWORD PTR [rax],rcx
   14001748a:	jmp    0x14001748e
   14001748c:	xor    eax,eax
   14001748e:	add    rsp,0x28
   140017492:	ret    
   140017493:	int3   
   140017494:	test   rcx,rcx
   140017497:	je     0x1400174a8
   140017499:	and    QWORD PTR [rcx+0x8],0x0
   14001749e:	lea    rax,[rip+0x1d293]        # 0x140034738
   1400174a5:	mov    QWORD PTR [rcx],rax
   1400174a8:	ret    
   1400174a9:	int3   
   1400174aa:	int3   
   1400174ab:	int3   
   1400174ac:	rex push rdi
   1400174ae:	sub    rsp,0x40
   1400174b2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400174bb:	mov    QWORD PTR [rsp+0x50],rbx
   1400174c0:	mov    QWORD PTR [rsp+0x60],rsi
   1400174c5:	mov    esi,ecx
   1400174c7:	call   0x140013220
   1400174cc:	mov    rdi,rax
   1400174cf:	xor    ebx,ebx
   1400174d1:	cmp    QWORD PTR [rax+0x30],rbx
   1400174d5:	jne    0x14001753b
   1400174d7:	cmp    esi,ebx
   1400174d9:	je     0x14001753b
   1400174db:	lea    rcx,[rip+0xffffffffffffe74e]        # 0x140015c30
   1400174e2:	call   0x140006104
   1400174e7:	mov    rsi,rax
   1400174ea:	mov    ecx,0xb8
   1400174ef:	call   0x140006114
   1400174f4:	mov    QWORD PTR [rsp+0x58],rax
   1400174f9:	cmp    rax,rbx
   1400174fc:	je     0x14001752f
   1400174fe:	mov    DWORD PTR [rsp+0x28],0x1
   140017506:	mov    QWORD PTR [rsp+0x20],0x8
   14001750f:	lea    r9,[rip+0xffffffffffffff46]        # 0x14001745c
   140017516:	lea    r8,[rip+0xffffffffffffff77]        # 0x140017494
   14001751d:	lea    rdx,[rip+0x1d1dc]        # 0x140034700
   140017524:	mov    rcx,rax
   140017527:	call   0x140016f34
   14001752c:	mov    rbx,rax
   14001752f:	mov    QWORD PTR [rdi+0x30],rbx
   140017533:	mov    rcx,rsi
   140017536:	call   0x140006104
   14001753b:	mov    rax,QWORD PTR [rdi+0x30]
   14001753f:	mov    rbx,QWORD PTR [rsp+0x50]
   140017544:	mov    rsi,QWORD PTR [rsp+0x60]
   140017549:	add    rsp,0x40
   14001754d:	pop    rdi
   14001754e:	ret    
   14001754f:	int3   
   140017550:	int3   
   140017551:	int3   
   140017552:	int3   
   140017553:	int3   
   140017554:	int3   
   140017555:	int3   
   140017556:	int3   
   140017557:	int3   
   140017558:	int3   
   140017559:	int3   
   14001755a:	int3   
   14001755b:	int3   
   14001755c:	rex push rbp
   14001755e:	sub    rsp,0x20
   140017562:	mov    rbp,rdx
   140017565:	mov    rcx,QWORD PTR [rbp+0x58]
   140017569:	call   0x140006160
   14001756e:	add    rsp,0x20
   140017572:	pop    rbp
   140017573:	ret    
   140017574:	rex push rbx
   140017576:	sub    rsp,0x20
   14001757a:	mov    rbx,rcx
   14001757d:	mov    ecx,0x1
   140017582:	call   0x1400174ac
   140017587:	mov    rdx,rbx
   14001758a:	mov    rcx,rax
   14001758d:	add    rsp,0x20
   140017591:	pop    rbx
   140017592:	jmp    0x140017070
   140017597:	int3   
   140017598:	rex push rbx
   14001759a:	sub    rsp,0x20
   14001759e:	mov    rbx,rcx
   1400175a1:	call   0x140013220
   1400175a6:	mov    rcx,QWORD PTR [rax+0x30]
   1400175aa:	xor    eax,eax
   1400175ac:	cmp    rcx,rax
   1400175af:	je     0x1400175bd
   1400175b1:	add    rcx,0x30
   1400175b5:	mov    rdx,rbx
   1400175b8:	call   0x14001775c
   1400175bd:	add    rsp,0x20
   1400175c1:	pop    rbx
   1400175c2:	ret    
   1400175c3:	int3   
   1400175c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400175c9:	push   rdi
   1400175ca:	sub    rsp,0x20
   1400175ce:	mov    rdi,QWORD PTR [rcx+0x8]
   1400175d2:	mov    rbx,rcx
   1400175d5:	test   rdi,rdi
   1400175d8:	je     0x1400175f5
   1400175da:	call   0x140013220
   1400175df:	mov    rcx,QWORD PTR [rax+0x30]
   1400175e3:	test   rcx,rcx
   1400175e6:	je     0x1400175f5
   1400175e8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400175ec:	add    rcx,0x30
   1400175f0:	call   0x1400177d0
   1400175f5:	and    QWORD PTR [rbx+0x8],0x0
   1400175fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400175ff:	mov    rax,rdi
   140017602:	add    rsp,0x20
   140017606:	pop    rdi
   140017607:	ret    
   140017608:	sub    rsp,0x28
   14001760c:	cmp    QWORD PTR [rcx+0x8],0x0
   140017611:	jne    0x140017617
   140017613:	xor    eax,eax
   140017615:	jmp    0x140017625
   140017617:	call   0x1400175c4
   14001761c:	mov    rcx,rax
   14001761f:	call   QWORD PTR [rip+0x1a0c3]        # 0x1400316e8
   140017625:	add    rsp,0x28
   140017629:	ret    
   14001762a:	int3   
   14001762b:	int3   
   14001762c:	mov    QWORD PTR [rsp+0x8],rbx
   140017631:	push   rdi
   140017632:	sub    rsp,0x20
   140017636:	lea    rax,[rip+0x1d0fb]        # 0x140034738
   14001763d:	mov    ebx,edx
   14001763f:	mov    rdi,rcx
   140017642:	mov    QWORD PTR [rcx],rax
   140017645:	call   0x140017608
   14001764a:	test   bl,0x1
   14001764d:	je     0x140017657
   14001764f:	mov    rcx,rdi
   140017652:	call   0x140006160
   140017657:	mov    rax,rdi
   14001765a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001765f:	add    rsp,0x20
   140017663:	pop    rdi
   140017664:	ret    
   140017665:	int3   
   140017666:	int3   
   140017667:	int3   
   140017668:	mov    QWORD PTR [rsp+0x8],rbx
   14001766d:	mov    QWORD PTR [rsp+0x10],rsi
   140017672:	push   rdi
   140017673:	sub    rsp,0x20
   140017677:	test   edx,edx
   140017679:	mov    rdi,rcx
   14001767c:	mov    rcx,QWORD PTR [rcx+0x8]
   140017680:	mov    esi,edx
   140017682:	mov    eax,0x11
   140017687:	mov    ebx,r8d
   14001768a:	cmove  esi,eax
   14001768d:	test   rcx,rcx
   140017690:	je     0x14001769c
   140017692:	call   0x140006160
   140017697:	and    QWORD PTR [rdi+0x8],0x0
   14001769c:	test   ebx,ebx
   14001769e:	je     0x1400176d2
   1400176a0:	mov    rcx,0xffffffffffffffff
   1400176a7:	mov    ebx,esi
   1400176a9:	mov    eax,0x8
   1400176ae:	mul    rbx
   1400176b1:	cmovo  rax,rcx
   1400176b5:	mov    rcx,rax
   1400176b8:	call   0x140006114
   1400176bd:	mov    r8d,esi
   1400176c0:	xor    edx,edx
   1400176c2:	mov    rcx,rax
   1400176c5:	shl    r8,0x3
   1400176c9:	mov    QWORD PTR [rdi+0x8],rax
   1400176cd:	call   0x14001b520
   1400176d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400176d7:	mov    DWORD PTR [rdi+0x10],esi
   1400176da:	mov    rsi,QWORD PTR [rsp+0x38]
   1400176df:	add    rsp,0x20
   1400176e3:	pop    rdi
   1400176e4:	ret    
   1400176e5:	int3   
   1400176e6:	int3   
   1400176e7:	int3   
   1400176e8:	rex push rbx
   1400176ea:	sub    rsp,0x20
   1400176ee:	mov    rbx,rcx
   1400176f1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400176f5:	test   rcx,rcx
   1400176f8:	je     0x140017704
   1400176fa:	call   0x140006160
   1400176ff:	and    QWORD PTR [rbx+0x8],0x0
   140017704:	mov    rcx,QWORD PTR [rbx+0x28]
   140017708:	and    QWORD PTR [rbx+0x18],0x0
   14001770d:	and    QWORD PTR [rbx+0x20],0x0
   140017712:	call   0x1400188ec
   140017717:	and    QWORD PTR [rbx+0x28],0x0
   14001771c:	add    rsp,0x20
   140017720:	pop    rbx
   140017721:	ret    
   140017722:	int3   
   140017723:	int3   
   140017724:	mov    rax,rdx
   140017727:	mov    r10,rdx
   14001772a:	xor    edx,edx
   14001772c:	shr    rax,0x4
   140017730:	mov    DWORD PTR [r9],eax
   140017733:	div    DWORD PTR [rcx+0x10]
   140017736:	mov    DWORD PTR [r8],edx
   140017739:	mov    r8,QWORD PTR [rcx+0x8]
   14001773d:	test   r8,r8
   140017740:	je     0x140017756
   140017742:	mov    rax,QWORD PTR [r8+rdx*8]
   140017746:	jmp    0x140017751
   140017748:	cmp    QWORD PTR [rax+0x8],r10
   14001774c:	je     0x140017758
   14001774e:	mov    rax,QWORD PTR [rax]
   140017751:	test   rax,rax
   140017754:	jne    0x140017748
   140017756:	xor    eax,eax
   140017758:	ret    
   140017759:	int3   
   14001775a:	int3   
   14001775b:	int3   
   14001775c:	sub    rsp,0x28
   140017760:	test   rcx,rcx
   140017763:	mov    r9,rdx
   140017766:	jne    0x14001776e
   140017768:	call   0x140006408
   14001776d:	int3   
   14001776e:	mov    r8,QWORD PTR [rcx+0x8]
   140017772:	test   r8,r8
   140017775:	je     0x140017797
   140017777:	mov    rax,rdx
   14001777a:	xor    edx,edx
   14001777c:	shr    rax,0x4
   140017780:	div    DWORD PTR [rcx+0x10]
   140017783:	mov    rax,QWORD PTR [r8+rdx*8]
   140017787:	jmp    0x140017792
   140017789:	cmp    QWORD PTR [rax+0x8],r9
   14001778d:	je     0x14001779e
   14001778f:	mov    rax,QWORD PTR [rax]
   140017792:	test   rax,rax
   140017795:	jne    0x140017789
   140017797:	xor    eax,eax
   140017799:	add    rsp,0x28
   14001779d:	ret    
   14001779e:	mov    rax,QWORD PTR [rax+0x10]
   1400177a2:	jmp    0x140017799
   1400177a4:	sub    rsp,0x38
   1400177a8:	mov    r11,r8
   1400177ab:	lea    r9,[rsp+0x58]
   1400177b0:	lea    r8,[rsp+0x20]
   1400177b5:	call   0x140017724
   1400177ba:	test   rax,rax
   1400177bd:	je     0x1400177cb
   1400177bf:	mov    rax,QWORD PTR [rax+0x10]
   1400177c3:	mov    QWORD PTR [r11],rax
   1400177c6:	mov    eax,0x1
   1400177cb:	add    rsp,0x38
   1400177cf:	ret    
   1400177d0:	sub    rsp,0x28
   1400177d4:	mov    r9,QWORD PTR [rcx+0x8]
   1400177d8:	mov    r10,rdx
   1400177db:	mov    r8,rcx
   1400177de:	test   r9,r9
   1400177e1:	je     0x140017809
   1400177e3:	mov    rax,rdx
   1400177e6:	xor    edx,edx
   1400177e8:	shr    rax,0x4
   1400177ec:	div    DWORD PTR [rcx+0x10]
   1400177ef:	lea    rdx,[r9+rdx*8]
   1400177f3:	mov    rcx,QWORD PTR [rdx]
   1400177f6:	jmp    0x140017804
   1400177f8:	cmp    QWORD PTR [rcx+0x8],r10
   1400177fc:	je     0x140017810
   1400177fe:	mov    rdx,rcx
   140017801:	mov    rcx,QWORD PTR [rcx]
   140017804:	test   rcx,rcx
   140017807:	jne    0x1400177f8
   140017809:	xor    eax,eax
   14001780b:	add    rsp,0x28
   14001780f:	ret    
   140017810:	mov    rax,QWORD PTR [rcx]
   140017813:	mov    QWORD PTR [rdx],rax
   140017816:	mov    rax,QWORD PTR [r8+0x20]
   14001781a:	mov    QWORD PTR [rcx],rax
   14001781d:	add    QWORD PTR [r8+0x18],0xffffffffffffffff
   140017822:	mov    QWORD PTR [r8+0x20],rcx
   140017826:	jne    0x140017830
   140017828:	mov    rcx,r8
   14001782b:	call   0x1400176e8
   140017830:	mov    eax,0x1
   140017835:	jmp    0x14001780b
   140017837:	int3   
   140017838:	mov    QWORD PTR [rsp+0x8],rbx
   14001783d:	mov    QWORD PTR [rsp+0x10],rsi
   140017842:	push   rdi
   140017843:	sub    rsp,0x20
   140017847:	mov    r10,QWORD PTR [rdx]
   14001784a:	mov    rdi,r9
   14001784d:	mov    rsi,r8
   140017850:	test   r10,r10
   140017853:	mov    rbx,rdx
   140017856:	mov    r11,rcx
   140017859:	je     0x1400178df
   14001785f:	cmp    r10,0xffffffffffffffff
   140017863:	jne    0x14001788e
   140017865:	xor    r9d,r9d
   140017868:	cmp    DWORD PTR [rcx+0x10],r9d
   14001786c:	jbe    0x14001788e
   14001786e:	mov    rax,QWORD PTR [rcx+0x8]
   140017872:	mov    r10,QWORD PTR [rax]
   140017875:	test   r10,r10
   140017878:	jne    0x14001788e
   14001787a:	add    r9d,0x1
   14001787e:	add    rax,0x8
   140017882:	cmp    r9d,DWORD PTR [rcx+0x10]
   140017886:	jb     0x140017872
   140017888:	call   0x140006408
   14001788d:	int3   
   14001788e:	mov    rcx,QWORD PTR [r10]
   140017891:	test   rcx,rcx
   140017894:	jne    0x1400178ce
   140017896:	mov    r9d,DWORD PTR [r11+0x10]
   14001789a:	mov    rax,QWORD PTR [r10+0x8]
   14001789e:	xor    edx,edx
   1400178a0:	shr    rax,0x4
   1400178a4:	div    r9d
   1400178a7:	add    edx,0x1
   1400178aa:	cmp    edx,r9d
   1400178ad:	movsxd r8,edx
   1400178b0:	jae    0x1400178ce
   1400178b2:	mov    rax,QWORD PTR [r11+0x8]
   1400178b6:	lea    r8,[rax+r8*8]
   1400178ba:	mov    rcx,QWORD PTR [r8]
   1400178bd:	test   rcx,rcx
   1400178c0:	jne    0x1400178ce
   1400178c2:	add    edx,0x1
   1400178c5:	add    r8,0x8
   1400178c9:	cmp    edx,r9d
   1400178cc:	jb     0x1400178ba
   1400178ce:	mov    QWORD PTR [rbx],rcx
   1400178d1:	mov    rax,QWORD PTR [r10+0x8]
   1400178d5:	mov    QWORD PTR [rsi],rax
   1400178d8:	mov    rax,QWORD PTR [r10+0x10]
   1400178dc:	mov    QWORD PTR [rdi],rax
   1400178df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400178e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400178e9:	add    rsp,0x20
   1400178ed:	pop    rdi
   1400178ee:	ret    
   1400178ef:	int3   
   1400178f0:	lea    rax,[rip+0x1cea1]        # 0x140034798
   1400178f7:	ret    
   1400178f8:	xor    r8d,r8d
   1400178fb:	lea    rax,[rip+0x1cece]        # 0x1400347d0
   140017902:	mov    DWORD PTR [rcx+0x10],0x11
   140017909:	mov    QWORD PTR [rcx],rax
   14001790c:	mov    eax,0xa
   140017911:	cmp    rdx,r8
   140017914:	cmovle rdx,rax
   140017918:	mov    QWORD PTR [rcx+0x8],r8
   14001791c:	mov    QWORD PTR [rcx+0x18],r8
   140017920:	mov    QWORD PTR [rcx+0x20],r8
   140017924:	mov    QWORD PTR [rcx+0x28],r8
   140017928:	mov    rax,rcx
   14001792b:	mov    QWORD PTR [rcx+0x30],rdx
   14001792f:	ret    
   140017930:	lea    rax,[rip+0x1ce99]        # 0x1400347d0
   140017937:	mov    QWORD PTR [rcx],rax
   14001793a:	jmp    0x1400176e8
   14001793f:	int3   
   140017940:	rex push rbx
   140017942:	sub    rsp,0x20
   140017946:	cmp    QWORD PTR [rcx+0x20],0x0
   14001794b:	mov    rbx,rcx
   14001794e:	jne    0x14001798b
   140017950:	mov    rdx,QWORD PTR [rbx+0x30]
   140017954:	add    rcx,0x28
   140017958:	mov    r8d,0x18
   14001795e:	call   0x1400188b4
   140017963:	mov    rdx,QWORD PTR [rbx+0x30]
   140017967:	lea    rcx,[rdx+rdx*2]
   14001796b:	add    rdx,0xffffffffffffffff
   14001796f:	lea    r8,[rax+rcx*8-0x10]
   140017974:	js     0x14001798b
   140017976:	mov    rax,QWORD PTR [rbx+0x20]
   14001797a:	mov    QWORD PTR [r8],rax
   14001797d:	mov    QWORD PTR [rbx+0x20],r8
   140017981:	sub    r8,0x18
   140017985:	sub    rdx,0x1
   140017989:	jns    0x140017976
   14001798b:	mov    rax,QWORD PTR [rbx+0x20]
   14001798f:	mov    rcx,QWORD PTR [rax]
   140017992:	add    QWORD PTR [rbx+0x18],0x1
   140017997:	mov    QWORD PTR [rbx+0x20],rcx
   14001799b:	and    QWORD PTR [rax+0x8],0x0
   1400179a0:	and    QWORD PTR [rax+0x10],0x0
   1400179a5:	add    rsp,0x20
   1400179a9:	pop    rbx
   1400179aa:	ret    
   1400179ab:	int3   
   1400179ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400179b1:	push   rdi
   1400179b2:	sub    rsp,0x20
   1400179b6:	lea    r9,[rsp+0x48]
   1400179bb:	lea    r8,[rsp+0x40]
   1400179c0:	mov    rdi,rdx
   1400179c3:	mov    rbx,rcx
   1400179c6:	call   0x140017724
   1400179cb:	test   rax,rax
   1400179ce:	mov    r9,rax
   1400179d1:	jne    0x140017a0b
   1400179d3:	cmp    QWORD PTR [rcx+0x8],rax
   1400179d7:	jne    0x1400179e5
   1400179d9:	mov    edx,DWORD PTR [rcx+0x10]
   1400179dc:	lea    r8d,[rax+0x1]
   1400179e0:	call   0x140017668
   1400179e5:	mov    rcx,rbx
   1400179e8:	call   0x140017940
   1400179ed:	mov    edx,DWORD PTR [rsp+0x40]
   1400179f1:	mov    QWORD PTR [rax+0x8],rdi
   1400179f5:	mov    r9,rax
   1400179f8:	mov    rax,QWORD PTR [rbx+0x8]
   1400179fc:	mov    rcx,QWORD PTR [rax+rdx*8]
   140017a00:	mov    QWORD PTR [r9],rcx
   140017a03:	mov    rax,QWORD PTR [rbx+0x8]
   140017a07:	mov    QWORD PTR [rax+rdx*8],r9
   140017a0b:	lea    rax,[r9+0x10]
   140017a0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140017a14:	add    rsp,0x20
   140017a18:	pop    rdi
   140017a19:	ret    
   140017a1a:	int3   
   140017a1b:	int3   
   140017a1c:	mov    QWORD PTR [rsp+0x8],rbx
   140017a21:	push   rdi
   140017a22:	sub    rsp,0x20
   140017a26:	lea    rax,[rip+0x1cda3]        # 0x1400347d0
   140017a2d:	mov    ebx,edx
   140017a2f:	mov    rdi,rcx
   140017a32:	mov    QWORD PTR [rcx],rax
   140017a35:	call   0x1400176e8
   140017a3a:	test   bl,0x1
   140017a3d:	je     0x140017a47
   140017a3f:	mov    rcx,rdi
   140017a42:	call   0x140006160
   140017a47:	mov    rax,rdi
   140017a4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140017a4f:	add    rsp,0x20
   140017a53:	pop    rdi
   140017a54:	ret    
   140017a55:	int3   
   140017a56:	int3   
   140017a57:	int3   
   140017a58:	rex push rbx
   140017a5a:	sub    rsp,0x20
   140017a5e:	and    QWORD PTR [rcx+0x18],0x0
   140017a63:	and    QWORD PTR [rcx+0x20],0x0
   140017a68:	and    QWORD PTR [rcx+0x10],0x0
   140017a6d:	and    QWORD PTR [rcx+0x8],0x0
   140017a72:	mov    rbx,rcx
   140017a75:	mov    rcx,QWORD PTR [rcx+0x28]
   140017a79:	call   0x1400188ec
   140017a7e:	and    QWORD PTR [rbx+0x28],0x0
   140017a83:	add    rsp,0x20
   140017a87:	pop    rbx
   140017a88:	ret    
   140017a89:	int3   
   140017a8a:	int3   
   140017a8b:	int3   
   140017a8c:	sub    rsp,0x28
   140017a90:	test   rdx,rdx
   140017a93:	jne    0x140017a9b
   140017a95:	call   0x140006408
   140017a9a:	int3   
   140017a9b:	mov    rax,QWORD PTR [rcx+0x20]
   140017a9f:	mov    QWORD PTR [rdx],rax
   140017aa2:	add    QWORD PTR [rcx+0x18],0xffffffffffffffff
   140017aa7:	mov    QWORD PTR [rcx+0x20],rdx
   140017aab:	jne    0x140017ab2
   140017aad:	call   0x140017a58
   140017ab2:	add    rsp,0x28
   140017ab6:	ret    
   140017ab7:	int3   
   140017ab8:	rex push rbx
   140017aba:	sub    rsp,0x20
   140017abe:	test   rcx,rcx
   140017ac1:	jne    0x140017ac9
   140017ac3:	call   0x140006408
   140017ac8:	int3   
   140017ac9:	mov    rdx,QWORD PTR [rcx+0x8]
   140017acd:	test   rdx,rdx
   140017ad0:	jne    0x140017ad8
   140017ad2:	call   0x140006408
   140017ad7:	int3   
   140017ad8:	mov    rax,QWORD PTR [rdx]
   140017adb:	mov    rbx,QWORD PTR [rdx+0x10]
   140017adf:	test   rax,rax
   140017ae2:	mov    QWORD PTR [rcx+0x8],rax
   140017ae6:	je     0x140017aef
   140017ae8:	and    QWORD PTR [rax+0x8],0x0
   140017aed:	jmp    0x140017af4
   140017aef:	and    QWORD PTR [rcx+0x10],0x0
   140017af4:	call   0x140017a8c
   140017af9:	mov    rax,rbx
   140017afc:	add    rsp,0x20
   140017b00:	pop    rbx
   140017b01:	ret    
   140017b02:	int3   
   140017b03:	int3   
   140017b04:	rex push rbx
   140017b06:	sub    rsp,0x30
   140017b0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017b13:	call   0x1400131d0
   140017b18:	mov    rbx,rax
   140017b1b:	mov    ecx,0x1
   140017b20:	call   0x140015804
   140017b25:	and    DWORD PTR [rsp+0x40],0x0
   140017b2a:	add    rbx,0x58
   140017b2e:	lea    r9,[rsp+0x40]
   140017b33:	lea    r8,[rip+0x1ccd6]        # 0x140034810
   140017b3a:	lea    rdx,[rsp+0x48]
   140017b3f:	mov    rcx,rbx
   140017b42:	call   0x140004530
   140017b47:	nop
   140017b48:	mov    rax,QWORD PTR [rsp+0x48]
   140017b4d:	cmp    DWORD PTR [rax-0x10],0x0
   140017b51:	je     0x140017bbb
   140017b53:	call   0x1400131d0
   140017b58:	mov    rdx,QWORD PTR [rax+0x10]
   140017b5c:	mov    rcx,QWORD PTR [rsp+0x48]
   140017b61:	call   QWORD PTR [rip+0x19b79]        # 0x1400316e0
   140017b67:	lea    r9,[rsp+0x40]
   140017b6c:	lea    r8,[rip+0x1cc9d]        # 0x140034810
   140017b73:	lea    rdx,[rsp+0x50]
   140017b78:	mov    rcx,rbx
   140017b7b:	call   0x140004530
   140017b80:	nop
   140017b81:	mov    rdx,rax
   140017b84:	lea    rcx,[rsp+0x48]
   140017b89:	call   0x140001750
   140017b8e:	nop
   140017b8f:	mov    rdx,QWORD PTR [rsp+0x50]
   140017b94:	add    rdx,0xffffffffffffffe8
   140017b98:	or     eax,0xffffffff
   140017b9b:	lock xadd DWORD PTR [rdx+0x10],eax
   140017ba0:	add    eax,0xffffffff
   140017ba3:	test   eax,eax
   140017ba5:	jg     0x140017bb0
   140017ba7:	mov    rcx,QWORD PTR [rdx]
   140017baa:	mov    rax,QWORD PTR [rcx]
   140017bad:	call   QWORD PTR [rax+0x8]
   140017bb0:	mov    rax,QWORD PTR [rsp+0x48]
   140017bb5:	cmp    DWORD PTR [rax-0x10],0x0
   140017bb9:	jne    0x140017b53
   140017bbb:	mov    rcx,rbx
   140017bbe:	call   0x1400019a0
   140017bc3:	mov    ecx,0x1
   140017bc8:	call   0x140015898
   140017bcd:	nop
   140017bce:	mov    rdx,QWORD PTR [rsp+0x48]
   140017bd3:	add    rdx,0xffffffffffffffe8
   140017bd7:	or     eax,0xffffffff
   140017bda:	lock xadd DWORD PTR [rdx+0x10],eax
   140017bdf:	add    eax,0xffffffff
   140017be2:	test   eax,eax
   140017be4:	jg     0x140017bef
   140017be6:	mov    rcx,QWORD PTR [rdx]
   140017be9:	mov    rax,QWORD PTR [rcx]
   140017bec:	call   QWORD PTR [rax+0x8]
   140017bef:	add    rsp,0x30
   140017bf3:	pop    rbx
   140017bf4:	ret    
   140017bf5:	int3   
   140017bf6:	int3   
   140017bf7:	int3   
   140017bf8:	int3   
   140017bf9:	int3   
   140017bfa:	int3   
   140017bfb:	int3   
   140017bfc:	int3   
   140017bfd:	int3   
   140017bfe:	int3   
   140017bff:	int3   
   140017c00:	int3   
   140017c01:	int3   
   140017c02:	int3   
   140017c03:	int3   
   140017c04:	rex push rbp
   140017c06:	sub    rsp,0x20
   140017c0a:	mov    rbp,rdx
   140017c0d:	lea    rcx,[rbp+0x48]
   140017c11:	call   0x140001dc0
   140017c16:	add    rsp,0x20
   140017c1a:	pop    rbp
   140017c1b:	ret    
   140017c1c:	int3   
   140017c1d:	int3   
   140017c1e:	int3   
   140017c1f:	int3   
   140017c20:	int3   
   140017c21:	int3   
   140017c22:	int3   
   140017c23:	int3   
   140017c24:	rex push rbp
   140017c26:	sub    rsp,0x20
   140017c2a:	mov    rbp,rdx
   140017c2d:	lea    rcx,[rbp+0x50]
   140017c31:	call   0x140001dc0
   140017c36:	add    rsp,0x20
   140017c3a:	pop    rbp
   140017c3b:	ret    
   140017c3c:	rex push rbx
   140017c3e:	sub    rsp,0x20
   140017c42:	call   0x140017b04
   140017c47:	call   0x1400131d0
   140017c4c:	mov    rax,QWORD PTR [rax+0x8]
   140017c50:	test   rax,rax
   140017c53:	je     0x140017c65
   140017c55:	mov    rax,QWORD PTR [rax+0x78]
   140017c59:	test   rax,rax
   140017c5c:	je     0x140017c65
   140017c5e:	xor    edx,edx
   140017c60:	lea    ecx,[rdx+0x1]
   140017c63:	call   rax
   140017c65:	call   0x140013220
   140017c6a:	mov    rbx,rax
   140017c6d:	mov    rcx,QWORD PTR [rax+0x78]
   140017c71:	test   rcx,rcx
   140017c74:	je     0x140017c88
   140017c76:	mov    rdx,QWORD PTR [rcx]
   140017c79:	call   QWORD PTR [rdx+0x278]
   140017c7f:	test   eax,eax
   140017c81:	je     0x140017c88
   140017c83:	and    QWORD PTR [rbx+0x78],0x0
   140017c88:	call   0x140012910
   140017c8d:	mov    rbx,rax
   140017c90:	call   0x1400131d0
   140017c95:	cmp    BYTE PTR [rax+0x28],0x0
   140017c99:	jne    0x140017cc3
   140017c9b:	mov    rcx,QWORD PTR [rbx+0x50]
   140017c9f:	test   rcx,rcx
   140017ca2:	je     0x140017caf
   140017ca4:	call   QWORD PTR [rip+0x1992e]        # 0x1400315d8
   140017caa:	and    QWORD PTR [rbx+0x50],0x0
   140017caf:	mov    rcx,QWORD PTR [rbx+0x48]
   140017cb3:	test   rcx,rcx
   140017cb6:	je     0x140017cc3
   140017cb8:	call   QWORD PTR [rip+0x1991a]        # 0x1400315d8
   140017cbe:	and    QWORD PTR [rbx+0x48],0x0
   140017cc3:	add    rsp,0x20
   140017cc7:	pop    rbx
   140017cc8:	ret    
   140017cc9:	int3   
   140017cca:	int3   
   140017ccb:	int3   
   140017ccc:	mov    QWORD PTR [rsp+0x8],rbx
   140017cd1:	push   rdi
   140017cd2:	sub    rsp,0x20
   140017cd6:	test   rcx,rcx
   140017cd9:	mov    edi,r8d
   140017cdc:	mov    rbx,rdx
   140017cdf:	jne    0x140017ce7
   140017ce1:	call   0x140006408
   140017ce6:	int3   
   140017ce7:	call   QWORD PTR [rip+0x1981b]        # 0x140031508
   140017ced:	test   rbx,rbx
   140017cf0:	jne    0x140017d00
   140017cf2:	mov    rcx,rax
   140017cf5:	call   QWORD PTR [rip+0x1973d]        # 0x140031438
   140017cfb:	add    eax,0x1
   140017cfe:	jmp    0x140017d3e
   140017d00:	mov    rdx,rdi
   140017d03:	or     r9,0xffffffffffffffff
   140017d07:	mov    r8,rax
   140017d0a:	mov    rcx,rbx
   140017d0d:	call   0x14001a740
   140017d12:	test   eax,eax
   140017d14:	je     0x140017d3c
   140017d16:	cmp    eax,0xc
   140017d19:	je     0x140017d36
   140017d1b:	cmp    eax,0x16
   140017d1e:	je     0x140017d30
   140017d20:	cmp    eax,0x22
   140017d23:	je     0x140017d30
   140017d25:	cmp    eax,0x50
   140017d28:	je     0x140017d3c
   140017d2a:	call   0x140006408
   140017d2f:	int3   
   140017d30:	call   0x140006408
   140017d35:	int3   
   140017d36:	call   0x1400063c0
   140017d3b:	int3   
   140017d3c:	xor    eax,eax
   140017d3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140017d43:	add    rsp,0x20
   140017d47:	pop    rdi
   140017d48:	ret    
   140017d49:	int3   
   140017d4a:	int3   
   140017d4b:	int3   
   140017d4c:	mov    QWORD PTR [rsp+0x10],rbx
   140017d51:	mov    QWORD PTR [rsp+0x18],rsi
   140017d56:	mov    QWORD PTR [rsp+0x20],rdi
   140017d5b:	push   r12
   140017d5d:	sub    rsp,0x650
   140017d64:	mov    rax,QWORD PTR [rip+0x28265]        # 0x14003ffd0
   140017d6b:	xor    rax,rsp
   140017d6e:	mov    QWORD PTR [rsp+0x640],rax
   140017d76:	mov    rbx,rcx
   140017d79:	call   0x1400131d0
   140017d7e:	mov    rdx,QWORD PTR [rbx+0x88]
   140017d85:	mov    QWORD PTR [rax+0x10],rdx
   140017d89:	mov    rdx,QWORD PTR [rbx+0x88]
   140017d90:	mov    r12d,0x104
   140017d96:	mov    QWORD PTR [rax+0x18],rdx
   140017d9a:	mov    rcx,QWORD PTR [rbx+0x88]
   140017da1:	lea    rdx,[rsp+0x20]
   140017da6:	mov    r8d,r12d
   140017da9:	mov    rsi,rax
   140017dac:	call   QWORD PTR [rip+0x1961e]        # 0x1400313d0
   140017db2:	test   eax,eax
   140017db4:	je     0x140017dbb
   140017db6:	cmp    eax,r12d
   140017db9:	jne    0x140017dc0
   140017dbb:	call   0x1400119c0
   140017dc0:	lea    rcx,[rsp+0x20]
   140017dc5:	call   QWORD PTR [rip+0x19745]        # 0x140031510
   140017dcb:	test   rax,rax
   140017dce:	mov    rdi,rax
   140017dd1:	jne    0x140017dd8
   140017dd3:	call   0x1400119c0
   140017dd8:	and    WORD PTR [rdi],0x0
   140017ddc:	lea    rdx,[rsp+0x230]
   140017de4:	lea    rcx,[rsp+0x20]
   140017de9:	mov    r8d,r12d
   140017dec:	call   0x140017ccc
   140017df1:	test   eax,eax
   140017df3:	je     0x140017dfa
   140017df5:	call   0x1400119c0
   140017dfa:	cmp    QWORD PTR [rbx+0xc0],0x0
   140017e02:	jne    0x140017e23
   140017e04:	lea    rcx,[rsp+0x230]
   140017e0c:	call   0x14001b7a0
   140017e11:	test   rax,rax
   140017e14:	mov    QWORD PTR [rbx+0xc0],rax
   140017e1b:	jne    0x140017e23
   140017e1d:	call   0x1400063c0
   140017e22:	int3   
   140017e23:	mov    rax,QWORD PTR [rbx+0xa0]
   140017e2a:	test   rax,rax
   140017e2d:	jne    0x140017e71
   140017e2f:	lea    rdx,[rsp+0x440]
   140017e37:	mov    r8d,0x100
   140017e3d:	mov    ecx,0xe000
   140017e42:	call   0x1400065a4
   140017e47:	lea    rcx,[rsp+0x440]
   140017e4f:	test   eax,eax
   140017e51:	jne    0x140017e5a
   140017e53:	mov    rcx,QWORD PTR [rbx+0xc0]
   140017e5a:	call   0x14001b7a0
   140017e5f:	test   rax,rax
   140017e62:	mov    QWORD PTR [rbx+0xa0],rax
   140017e69:	jne    0x140017e71
   140017e6b:	call   0x1400063c0
   140017e70:	int3   
   140017e71:	mov    QWORD PTR [rsi+0x20],rax
   140017e75:	cmp    QWORD PTR [rbx+0xc8],0x0
   140017e7d:	jne    0x140017f2f
   140017e83:	lea    rcx,[rsp+0x20]
   140017e88:	mov    rax,rdi
   140017e8b:	mov    rdx,r12
   140017e8e:	sub    rax,rcx
   140017e91:	mov    rcx,rdi
   140017e94:	sar    rax,1
   140017e97:	sub    rdx,rax
   140017e9a:	cmp    DWORD PTR [rbx+0xd8],0x1
   140017ea1:	jne    0x140017ed9
   140017ea3:	lea    r8,[rip+0x1c98e]        # 0x140034838
   140017eaa:	call   0x14001a690
   140017eaf:	test   eax,eax
   140017eb1:	je     0x140017f0f
   140017eb3:	cmp    eax,0xc
   140017eb6:	je     0x140017ed3
   140017eb8:	cmp    eax,0x16
   140017ebb:	je     0x140017ecd
   140017ebd:	cmp    eax,0x22
   140017ec0:	je     0x140017ecd
   140017ec2:	cmp    eax,0x50
   140017ec5:	je     0x140017f0f
   140017ec7:	call   0x140006408
   140017ecc:	int3   
   140017ecd:	call   0x140006408
   140017ed2:	int3   
   140017ed3:	call   0x1400063c0
   140017ed8:	int3   
   140017ed9:	lea    r8,[rip+0x1c948]        # 0x140034828
   140017ee0:	call   0x14001a690
   140017ee5:	test   eax,eax
   140017ee7:	je     0x140017f0f
   140017ee9:	cmp    eax,0xc
   140017eec:	je     0x140017f09
   140017eee:	cmp    eax,0x16
   140017ef1:	je     0x140017f03
   140017ef3:	cmp    eax,0x22
   140017ef6:	je     0x140017f03
   140017ef8:	cmp    eax,0x50
   140017efb:	je     0x140017f0f
   140017efd:	call   0x140006408
   140017f02:	int3   
   140017f03:	call   0x140006408
   140017f08:	int3   
   140017f09:	call   0x1400063c0
   140017f0e:	int3   
   140017f0f:	lea    rcx,[rsp+0x20]
   140017f14:	call   0x14001b7a0
   140017f19:	test   rax,rax
   140017f1c:	mov    QWORD PTR [rbx+0xc8],rax
   140017f23:	jne    0x140017f2b
   140017f25:	call   0x1400063c0
   140017f2a:	int3   
   140017f2b:	and    WORD PTR [rdi],0x0
   140017f2f:	cmp    QWORD PTR [rbx+0xd0],0x0
   140017f37:	jne    0x140017f99
   140017f39:	lea    r8,[rip+0x1c8d8]        # 0x140034818
   140017f40:	lea    rcx,[rsp+0x230]
   140017f48:	mov    rdx,r12
   140017f4b:	call   0x14001b6d0
   140017f50:	test   eax,eax
   140017f52:	je     0x140017f7a
   140017f54:	cmp    eax,0xc
   140017f57:	je     0x140017f74
   140017f59:	cmp    eax,0x16
   140017f5c:	je     0x140017f6e
   140017f5e:	cmp    eax,0x22
   140017f61:	je     0x140017f6e
   140017f63:	cmp    eax,0x50
   140017f66:	je     0x140017f7a
   140017f68:	call   0x140006408
   140017f6d:	int3   
   140017f6e:	call   0x140006408
   140017f73:	int3   
   140017f74:	call   0x1400063c0
   140017f79:	int3   
   140017f7a:	lea    rcx,[rsp+0x230]
   140017f82:	call   0x14001b7a0
   140017f87:	test   rax,rax
   140017f8a:	mov    QWORD PTR [rbx+0xd0],rax
   140017f91:	jne    0x140017f99
   140017f93:	call   0x1400063c0
   140017f98:	int3   
   140017f99:	mov    rcx,QWORD PTR [rsp+0x640]
   140017fa1:	xor    rcx,rsp
   140017fa4:	call   0x140019370
   140017fa9:	lea    r11,[rsp+0x650]
   140017fb1:	mov    rbx,QWORD PTR [r11+0x18]
   140017fb5:	mov    rsi,QWORD PTR [r11+0x20]
   140017fb9:	mov    rdi,QWORD PTR [r11+0x28]
   140017fbd:	mov    rsp,r11
   140017fc0:	pop    r12
   140017fc2:	ret    
   140017fc3:	int3   
   140017fc4:	mov    QWORD PTR [rsp+0x8],rbx
   140017fc9:	mov    QWORD PTR [rsp+0x10],rsi
   140017fce:	push   rdi
   140017fcf:	sub    rsp,0x20
   140017fd3:	mov    rbx,rcx
   140017fd6:	xor    ecx,ecx
   140017fd8:	mov    edi,r9d
   140017fdb:	mov    rsi,r8
   140017fde:	call   QWORD PTR [rip+0x192e4]        # 0x1400312c8
   140017fe4:	or     eax,0x8001
   140017fe9:	mov    ecx,eax
   140017feb:	call   QWORD PTR [rip+0x192d7]        # 0x1400312c8
   140017ff1:	call   0x1400131d0
   140017ff6:	mov    rcx,rax
   140017ff9:	mov    QWORD PTR [rax+0x10],rbx
   140017ffd:	mov    QWORD PTR [rax+0x18],rbx
   140018001:	call   0x140012578
   140018006:	call   0x1400131d0
   14001800b:	mov    rcx,QWORD PTR [rax+0x8]
   14001800f:	test   rcx,rcx
   140018012:	je     0x14001802d
   140018014:	mov    QWORD PTR [rcx+0x88],rbx
   14001801b:	mov    QWORD PTR [rcx+0x90],rsi
   140018022:	mov    DWORD PTR [rcx+0x98],edi
   140018028:	call   0x140017d4c
   14001802d:	call   0x1400131d0
   140018032:	cmp    BYTE PTR [rax+0x28],0x0
   140018036:	jne    0x14001803d
   140018038:	call   0x140009c1c
   14001803d:	lea    rcx,[rip+0x1c814]        # 0x140034858
   140018044:	call   QWORD PTR [rip+0x193a6]        # 0x1400313f0
   14001804a:	test   rax,rax
   14001804d:	je     0x140018066
   14001804f:	lea    rdx,[rip+0x1c7f2]        # 0x140034848
   140018056:	mov    rcx,rax
   140018059:	call   QWORD PTR [rip+0x19401]        # 0x140031460
   14001805f:	mov    QWORD PTR [rip+0x2caca],rax        # 0x140044b30
   140018066:	mov    rbx,QWORD PTR [rsp+0x30]
   14001806b:	mov    rsi,QWORD PTR [rsp+0x38]
   140018070:	mov    eax,0x1
   140018075:	add    rsp,0x20
   140018079:	pop    rdi
   14001807a:	ret    
   14001807b:	int3   
   14001807c:	lea    rax,[rip+0x27e35]        # 0x14003feb8
   140018083:	ret    
   140018084:	mov    QWORD PTR [rsp+0x8],rbx
   140018089:	mov    QWORD PTR [rsp+0x10],rbp
   14001808e:	mov    QWORD PTR [rsp+0x18],rsi
   140018093:	push   rdi
   140018094:	sub    rsp,0x20
   140018098:	test   rdx,rdx
   14001809b:	mov    rdi,rdx
   14001809e:	mov    rbx,rcx
   1400180a1:	jns    0x1400180a9
   1400180a3:	call   0x140006408
   1400180a8:	int3   
   1400180a9:	test   r8,r8
   1400180ac:	js     0x1400180b2
   1400180ae:	mov    QWORD PTR [rcx+0x20],r8
   1400180b2:	test   rdx,rdx
   1400180b5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400180b9:	jne    0x1400180d4
   1400180bb:	call   0x140006160
   1400180c0:	and    QWORD PTR [rbx+0x8],0x0
   1400180c5:	and    QWORD PTR [rbx+0x18],0x0
   1400180ca:	and    QWORD PTR [rbx+0x10],0x0
   1400180cf:	jmp    0x1400181fa
   1400180d4:	test   rcx,rcx
   1400180d7:	jne    0x14001810b
   1400180d9:	mov    eax,0xffffffff
   1400180de:	cmp    rdx,rax
   1400180e1:	jbe    0x1400180e9
   1400180e3:	call   0x140006408
   1400180e8:	int3   
   1400180e9:	mov    rcx,rdx
   1400180ec:	call   0x140006114
   1400180f1:	mov    r8,rdi
   1400180f4:	xor    edx,edx
   1400180f6:	mov    rcx,rax
   1400180f9:	mov    QWORD PTR [rbx+0x8],rax
   1400180fd:	call   0x14001b520
   140018102:	mov    QWORD PTR [rbx+0x18],rdi
   140018106:	jmp    0x1400181f6
   14001810b:	mov    r8,QWORD PTR [rbx+0x18]
   14001810f:	cmp    rdx,r8
   140018112:	jg     0x140018136
   140018114:	mov    rax,QWORD PTR [rbx+0x10]
   140018118:	cmp    rdx,rax
   14001811b:	jle    0x1400181f6
   140018121:	mov    r8,rdx
   140018124:	add    rcx,rax
   140018127:	xor    edx,edx
   140018129:	sub    r8,rax
   14001812c:	call   0x14001b520
   140018131:	jmp    0x1400181f6
   140018136:	mov    rax,QWORD PTR [rbx+0x20]
   14001813a:	test   rax,rax
   14001813d:	jne    0x140018170
   14001813f:	mov    rax,QWORD PTR [rbx+0x10]
   140018143:	cqo    
   140018145:	and    edx,0x7
   140018148:	add    rax,rdx
   14001814b:	mov    edx,0x4
   140018150:	sar    rax,0x3
   140018154:	cmp    rax,rdx
   140018157:	mov    rcx,rax
   14001815a:	jl     0x140018166
   14001815c:	mov    eax,0x400
   140018161:	cmp    rcx,rax
   140018164:	jg     0x140018170
   140018166:	mov    rax,rcx
   140018169:	cmp    rcx,rdx
   14001816c:	cmovl  rax,rdx
   140018170:	add    rax,r8
   140018173:	mov    rsi,rdi
   140018176:	cmp    rdi,rax
   140018179:	cmovl  rsi,rax
   14001817d:	cmp    rsi,r8
   140018180:	jge    0x140018188
   140018182:	call   0x140006408
   140018187:	int3   
   140018188:	mov    rcx,rsi
   14001818b:	call   0x140006114
   140018190:	mov    r9,QWORD PTR [rbx+0x10]
   140018194:	mov    r8,QWORD PTR [rbx+0x8]
   140018198:	mov    rcx,rax
   14001819b:	mov    rdx,rsi
   14001819e:	mov    rbp,rax
   1400181a1:	call   0x140018ee0
   1400181a6:	test   eax,eax
   1400181a8:	je     0x1400181d0
   1400181aa:	cmp    eax,0xc
   1400181ad:	je     0x1400181ca
   1400181af:	cmp    eax,0x16
   1400181b2:	je     0x1400181c4
   1400181b4:	cmp    eax,0x22
   1400181b7:	je     0x1400181c4
   1400181b9:	cmp    eax,0x50
   1400181bc:	je     0x1400181d0
   1400181be:	call   0x140006408
   1400181c3:	int3   
   1400181c4:	call   0x140006408
   1400181c9:	int3   
   1400181ca:	call   0x1400063c0
   1400181cf:	int3   
   1400181d0:	mov    rax,QWORD PTR [rbx+0x10]
   1400181d4:	mov    r8,rdi
   1400181d7:	xor    edx,edx
   1400181d9:	lea    rcx,[rax+rbp*1]
   1400181dd:	sub    r8,rax
   1400181e0:	call   0x14001b520
   1400181e5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400181e9:	call   0x140006160
   1400181ee:	mov    QWORD PTR [rbx+0x8],rbp
   1400181f2:	mov    QWORD PTR [rbx+0x18],rsi
   1400181f6:	mov    QWORD PTR [rbx+0x10],rdi
   1400181fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400181ff:	mov    rbp,QWORD PTR [rsp+0x38]
   140018204:	mov    rsi,QWORD PTR [rsp+0x40]
   140018209:	add    rsp,0x20
   14001820d:	pop    rdi
   14001820e:	ret    
   14001820f:	int3   
   140018210:	mov    QWORD PTR [rsp+0x8],rbx
   140018215:	mov    QWORD PTR [rsp+0x10],rbp
   14001821a:	mov    QWORD PTR [rsp+0x18],rsi
   14001821f:	push   r12
   140018221:	sub    rsp,0x20
   140018225:	mov    eax,DWORD PTR [rdx+0x20]
   140018228:	mov    rsi,rdx
   14001822b:	mov    rbx,rcx
   14001822e:	not    eax
   140018230:	test   al,0x1
   140018232:	je     0x140018287
   140018234:	mov    rdx,QWORD PTR [rcx+0x10]
   140018238:	mov    rcx,rsi
   14001823b:	call   0x1400150f0
   140018240:	mov    rbp,QWORD PTR [rbx+0x10]
   140018244:	mov    r12,QWORD PTR [rbx+0x8]
   140018248:	test   rbp,rbp
   14001824b:	je     0x140018271
   14001824d:	mov    ebx,0x7fffffff
   140018252:	mov    rdx,r12
   140018255:	mov    rcx,rsi
   140018258:	cmp    rbp,rbx
   14001825b:	cmovb  ebx,ebp
   14001825e:	mov    r8d,ebx
   140018261:	call   0x140014f74
   140018266:	mov    r11d,ebx
   140018269:	add    r12,r11
   14001826c:	sub    rbp,r11
   14001826f:	jne    0x14001824d
   140018271:	mov    rbx,QWORD PTR [rsp+0x30]
   140018276:	mov    rbp,QWORD PTR [rsp+0x38]
   14001827b:	mov    rsi,QWORD PTR [rsp+0x40]
   140018280:	add    rsp,0x20
   140018284:	pop    r12
   140018286:	ret    
   140018287:	mov    rcx,rdx
   14001828a:	call   0x140015240
   14001828f:	or     r8,0xffffffffffffffff
   140018293:	mov    rcx,rbx
   140018296:	mov    rdx,rax
   140018299:	call   0x140018084
   14001829e:	mov    rbp,QWORD PTR [rbx+0x10]
   1400182a2:	mov    rbx,QWORD PTR [rbx+0x8]
   1400182a6:	test   rbp,rbp
   1400182a9:	je     0x140018271
   1400182ab:	mov    r12d,0x7fffffff
   1400182b1:	mov    rdx,rbx
   1400182b4:	mov    rcx,rsi
   1400182b7:	cmp    rbp,r12
   1400182ba:	cmovb  r12d,ebp
   1400182be:	mov    r8d,r12d
   1400182c1:	call   0x140014530
   1400182c6:	cmp    eax,r12d
   1400182c9:	jne    0x1400182d8
   1400182cb:	mov    eax,r12d
   1400182ce:	add    rbx,rax
   1400182d1:	sub    rbp,rax
   1400182d4:	jne    0x1400182ab
   1400182d6:	jmp    0x140018271
   1400182d8:	xor    edx,edx
   1400182da:	lea    ecx,[rdx+0x3]
   1400182dd:	call   0x1400156e8
   1400182e2:	int3   
   1400182e3:	int3   
   1400182e4:	sub    rsp,0x28
   1400182e8:	mov    ecx,0x28
   1400182ed:	call   0x140006114
   1400182f2:	xor    edx,edx
   1400182f4:	cmp    rax,rdx
   1400182f7:	je     0x140018315
   1400182f9:	lea    rcx,[rip+0x1c588]        # 0x140034888
   140018300:	mov    QWORD PTR [rax+0x8],rdx
   140018304:	mov    QWORD PTR [rax+0x20],rdx
   140018308:	mov    QWORD PTR [rax+0x18],rdx
   14001830c:	mov    QWORD PTR [rax+0x10],rdx
   140018310:	mov    QWORD PTR [rax],rcx
   140018313:	jmp    0x140018318
   140018315:	mov    rax,rdx
   140018318:	add    rsp,0x28
   14001831c:	ret    
   14001831d:	int3   
   14001831e:	int3   
   14001831f:	int3   
   140018320:	mov    QWORD PTR [rsp+0x8],rbx
   140018325:	push   rdi
   140018326:	sub    rsp,0x20
   14001832a:	lea    rax,[rip+0x1c557]        # 0x140034888
   140018331:	mov    rdi,rcx
   140018334:	mov    ebx,edx
   140018336:	mov    QWORD PTR [rcx],rax
   140018339:	mov    rcx,QWORD PTR [rcx+0x8]
   14001833d:	call   0x140006160
   140018342:	test   bl,0x1
   140018345:	je     0x14001834f
   140018347:	mov    rcx,rdi
   14001834a:	call   0x140006160
   14001834f:	mov    rax,rdi
   140018352:	mov    rbx,QWORD PTR [rsp+0x30]
   140018357:	add    rsp,0x20
   14001835b:	pop    rdi
   14001835c:	ret    
   14001835d:	int3   
   14001835e:	int3   
   14001835f:	int3   
   140018360:	mov    QWORD PTR [rsp+0x8],rbx
   140018365:	mov    QWORD PTR [rsp+0x10],rbp
   14001836a:	mov    QWORD PTR [rsp+0x18],rsi
   14001836f:	push   rdi
   140018370:	push   r12
   140018372:	push   r13
   140018374:	push   r14
   140018376:	push   r15
   140018378:	sub    rsp,0x20
   14001837c:	xor    r13d,r13d
   14001837f:	mov    r15d,r9d
   140018382:	mov    r14,r8
   140018385:	cmp    rdx,r13
   140018388:	mov    rsi,rdx
   14001838b:	mov    rbp,rcx
   14001838e:	jne    0x140018396
   140018390:	call   0x140006408
   140018395:	int3   
   140018396:	cmp    r8,r13
   140018399:	jne    0x1400183a1
   14001839b:	call   0x140006408
   1400183a0:	int3   
   1400183a1:	cmp    WORD PTR [rdx],r13w
   1400183a5:	mov    edi,r13d
   1400183a8:	mov    rbx,rdx
   1400183ab:	je     0x14001840f
   1400183ad:	cmp    WORD PTR [rbx],0x25
   1400183b1:	jne    0x140018402
   1400183b3:	movzx  eax,WORD PTR [rbx+0x2]
   1400183b7:	cmp    ax,0x31
   1400183bb:	jb     0x1400183c3
   1400183bd:	cmp    ax,0x39
   1400183c1:	jbe    0x1400183dd
   1400183c3:	cmp    ax,0x41
   1400183c7:	jb     0x140018402
   1400183c9:	cmp    ax,0x5a
   1400183cd:	ja     0x140018402
   1400183cf:	cmp    ax,0x39
   1400183d3:	jbe    0x1400183dd
   1400183d5:	movzx  ecx,ax
   1400183d8:	sub    ecx,0x38
   1400183db:	jmp    0x1400183e3
   1400183dd:	movzx  ecx,ax
   1400183e0:	sub    ecx,0x31
   1400183e3:	add    rbx,0x4
   1400183e7:	cmp    ecx,r15d
   1400183ea:	jge    0x140018406
   1400183ec:	movsxd rax,ecx
   1400183ef:	mov    rcx,QWORD PTR [r14+rax*8]
   1400183f3:	cmp    rcx,r13
   1400183f6:	je     0x140018409
   1400183f8:	call   QWORD PTR [rip+0x1903a]        # 0x140031438
   1400183fe:	add    edi,eax
   140018400:	jmp    0x140018409
   140018402:	add    rbx,0x2
   140018406:	add    edi,0x1
   140018409:	cmp    WORD PTR [rbx],r13w
   14001840d:	jne    0x1400183ad
   14001840f:	mov    rax,QWORD PTR [rbp+0x0]
   140018413:	mov    ecx,0x1
   140018418:	sub    ecx,DWORD PTR [rax-0x8]
   14001841b:	mov    eax,DWORD PTR [rax-0xc]
   14001841e:	sub    eax,edi
   140018420:	or     ecx,eax
   140018422:	jge    0x14001842e
   140018424:	mov    edx,edi
   140018426:	mov    rcx,rbp
   140018429:	call   0x1400015e0
   14001842e:	mov    rbx,QWORD PTR [rbp+0x0]
   140018432:	cmp    WORD PTR [rsi],r13w
   140018436:	je     0x1400184ff
   14001843c:	movzx  ecx,WORD PTR [rsi]
   14001843f:	cmp    cx,0x25
   140018443:	jne    0x1400184da
   140018449:	movzx  eax,WORD PTR [rsi+0x2]
   14001844d:	cmp    ax,0x31
   140018451:	jb     0x140018459
   140018453:	cmp    ax,0x39
   140018457:	jbe    0x140018473
   140018459:	cmp    ax,0x41
   14001845d:	jb     0x1400184da
   14001845f:	cmp    ax,0x5a
   140018463:	ja     0x1400184da
   140018465:	cmp    ax,0x39
   140018469:	jbe    0x140018473
   14001846b:	movzx  ecx,ax
   14001846e:	sub    ecx,0x38
   140018471:	jmp    0x140018479
   140018473:	movzx  ecx,ax
   140018476:	sub    ecx,0x31
   140018479:	add    rsi,0x4
   14001847d:	cmp    ecx,r15d
   140018480:	jl     0x140018489
   140018482:	mov    WORD PTR [rbx],0x3f
   140018487:	jmp    0x1400184e1
   140018489:	movsxd r12,ecx
   14001848c:	mov    rcx,QWORD PTR [r14+r12*8]
   140018490:	cmp    rcx,r13
   140018493:	je     0x140018432
   140018495:	call   QWORD PTR [rip+0x18f9d]        # 0x140031438
   14001849b:	mov    r8,QWORD PTR [r14+r12*8]
   14001849f:	lea    ecx,[rdi+0x1]
   1400184a2:	movsxd rdx,ecx
   1400184a5:	mov    rcx,rbx
   1400184a8:	movsxd r13,eax
   1400184ab:	call   0x14001a690
   1400184b0:	test   eax,eax
   1400184b2:	je     0x1400184c8
   1400184b4:	cmp    eax,0xc
   1400184b7:	je     0x1400184f9
   1400184b9:	cmp    eax,0x16
   1400184bc:	je     0x1400184f3
   1400184be:	cmp    eax,0x22
   1400184c1:	je     0x1400184f3
   1400184c3:	cmp    eax,0x50
   1400184c6:	jne    0x1400184ed
   1400184c8:	sub    edi,r13d
   1400184cb:	mov    rax,r13
   1400184ce:	lea    rbx,[rbx+r13*2]
   1400184d2:	xor    r13d,r13d
   1400184d5:	jmp    0x140018432
   1400184da:	mov    WORD PTR [rbx],cx
   1400184dd:	add    rsi,0x2
   1400184e1:	add    rbx,0x2
   1400184e5:	sub    edi,0x1
   1400184e8:	jmp    0x140018432
   1400184ed:	call   0x140006408
   1400184f2:	int3   
   1400184f3:	call   0x140006408
   1400184f8:	int3   
   1400184f9:	call   0x1400063c0
   1400184fe:	int3   
   1400184ff:	mov    rcx,QWORD PTR [rbp+0x0]
   140018503:	sub    rbx,rcx
   140018506:	sar    rbx,1
   140018509:	cmp    ebx,0xffffffff
   14001850c:	jne    0x14001851f
   14001850e:	cmp    rcx,r13
   140018511:	jne    0x140018518
   140018513:	mov    ebx,r13d
   140018516:	jmp    0x140018524
   140018518:	call   0x14001a670
   14001851d:	mov    ebx,eax
   14001851f:	cmp    ebx,r13d
   140018522:	jl     0x140018559
   140018524:	mov    rax,QWORD PTR [rbp+0x0]
   140018528:	cmp    ebx,DWORD PTR [rax-0xc]
   14001852b:	jg     0x140018559
   14001852d:	mov    rsi,QWORD PTR [rsp+0x60]
   140018532:	mov    DWORD PTR [rax-0x10],ebx
   140018535:	mov    rax,QWORD PTR [rbp+0x0]
   140018539:	mov    rbp,QWORD PTR [rsp+0x58]
   14001853e:	movsxd rcx,ebx
   140018541:	mov    rbx,QWORD PTR [rsp+0x50]
   140018546:	mov    WORD PTR [rax+rcx*2],r13w
   14001854b:	add    rsp,0x20
   14001854f:	pop    r15
   140018551:	pop    r14
   140018553:	pop    r13
   140018555:	pop    r12
   140018557:	pop    rdi
   140018558:	ret    
   140018559:	mov    ecx,0x80070057
   14001855e:	call   0x1400015c0
   140018563:	int3   
   140018564:	mov    rax,rsp
   140018567:	push   r12
   140018569:	sub    rsp,0x30
   14001856d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140018576:	mov    QWORD PTR [rax+0x8],rbx
   14001857a:	mov    QWORD PTR [rax+0x10],rbp
   14001857e:	mov    QWORD PTR [rax+0x18],rsi
   140018582:	mov    QWORD PTR [rax+0x20],rdi
   140018586:	mov    esi,r9d
   140018589:	mov    rbp,r8
   14001858c:	mov    edi,edx
   14001858e:	mov    r12,rcx
   140018591:	call   0x14000669c
   140018596:	mov    rcx,rax
   140018599:	xor    r10d,r10d
   14001859c:	test   rax,rax
   14001859f:	setne  r10b
   1400185a3:	test   r10d,r10d
   1400185a6:	jne    0x1400185b3
   1400185a8:	mov    ecx,0x80004005
   1400185ad:	call   0x1400015c0
   1400185b2:	int3   
   1400185b3:	mov    rax,QWORD PTR [rax]
   1400185b6:	call   QWORD PTR [rax+0x18]
   1400185b9:	lea    rbx,[rax+0x18]
   1400185bd:	mov    QWORD PTR [rsp+0x20],rbx
   1400185c2:	mov    ecx,edi
   1400185c4:	call   0x140006688
   1400185c9:	test   rax,rax
   1400185cc:	je     0x14001861e
   1400185ce:	mov    r8d,edi
   1400185d1:	mov    rdx,rax
   1400185d4:	lea    rcx,[rsp+0x20]
   1400185d9:	call   0x140001ba0
   1400185de:	test   eax,eax
   1400185e0:	jne    0x1400185e9
   1400185e2:	mov    rbx,QWORD PTR [rsp+0x20]
   1400185e7:	jmp    0x14001861e
   1400185e9:	mov    r9d,esi
   1400185ec:	mov    r8,rbp
   1400185ef:	mov    rbx,QWORD PTR [rsp+0x20]
   1400185f4:	mov    rdx,rbx
   1400185f7:	mov    rcx,r12
   1400185fa:	call   0x140018360
   1400185ff:	nop
   140018600:	lea    rdx,[rbx-0x18]
   140018604:	or     eax,0xffffffff
   140018607:	lock xadd DWORD PTR [rdx+0x10],eax
   14001860c:	add    eax,0xffffffff
   14001860f:	test   eax,eax
   140018611:	jg     0x14001863a
   140018613:	mov    rcx,QWORD PTR [rdx]
   140018616:	mov    rax,QWORD PTR [rcx]
   140018619:	call   QWORD PTR [rax+0x8]
   14001861c:	jmp    0x14001863a
   14001861e:	lea    rdx,[rbx-0x18]
   140018622:	or     eax,0xffffffff
   140018625:	lock xadd DWORD PTR [rdx+0x10],eax
   14001862a:	add    eax,0xffffffff
   14001862d:	test   eax,eax
   14001862f:	jg     0x14001863a
   140018631:	mov    rcx,QWORD PTR [rdx]
   140018634:	mov    rax,QWORD PTR [rcx]
   140018637:	call   QWORD PTR [rax+0x8]
   14001863a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001863f:	mov    rbp,QWORD PTR [rsp+0x48]
   140018644:	mov    rsi,QWORD PTR [rsp+0x50]
   140018649:	mov    rdi,QWORD PTR [rsp+0x58]
   14001864e:	add    rsp,0x30
   140018652:	pop    r12
   140018654:	ret    
   140018655:	int3   
   140018656:	int3   
   140018657:	int3   
   140018658:	int3   
   140018659:	int3   
   14001865a:	int3   
   14001865b:	int3   
   14001865c:	int3   
   14001865d:	int3   
   14001865e:	int3   
   14001865f:	int3   
   140018660:	int3   
   140018661:	int3   
   140018662:	int3   
   140018663:	int3   
   140018664:	rex push rbp
   140018666:	sub    rsp,0x20
   14001866a:	mov    rbp,rdx
   14001866d:	lea    rcx,[rbp+0x20]
   140018671:	call   0x140001dc0
   140018676:	add    rsp,0x20
   14001867a:	pop    rbp
   14001867b:	ret    
   14001867c:	mov    QWORD PTR [rsp+0x18],r8
   140018681:	sub    rsp,0x28
   140018685:	lea    r8,[rsp+0x40]
   14001868a:	mov    r9d,0x1
   140018690:	call   0x140018564
   140018695:	add    rsp,0x28
   140018699:	ret    
   14001869a:	int3   
   14001869b:	int3   
   14001869c:	lea    rax,[rip+0x1c235]        # 0x1400348d8
   1400186a3:	ret    
   1400186a4:	lea    rax,[rip+0x1c265]        # 0x140034910
   1400186ab:	mov    QWORD PTR [rcx],rax
   1400186ae:	xor    eax,eax
   1400186b0:	mov    QWORD PTR [rcx+0x8],rax
   1400186b4:	mov    QWORD PTR [rcx+0x20],rax
   1400186b8:	mov    QWORD PTR [rcx+0x18],rax
   1400186bc:	mov    QWORD PTR [rcx+0x10],rax
   1400186c0:	mov    rax,rcx
   1400186c3:	ret    
   1400186c4:	mov    rax,rsp
   1400186c7:	mov    QWORD PTR [rax+0x8],rbx
   1400186cb:	mov    QWORD PTR [rax+0x10],rbp
   1400186cf:	mov    QWORD PTR [rax+0x18],rsi
   1400186d3:	mov    QWORD PTR [rax+0x20],rdi
   1400186d7:	push   r12
   1400186d9:	sub    rsp,0x20
   1400186dd:	test   rdx,rdx
   1400186e0:	mov    rdi,r9
   1400186e3:	mov    r12,r8
   1400186e6:	mov    rsi,rdx
   1400186e9:	mov    rbp,rcx
   1400186ec:	js     0x1400187ba
   1400186f2:	test   r9,r9
   1400186f5:	jle    0x1400187ba
   1400186fb:	or     r8,0xffffffffffffffff
   1400186ff:	cmp    rdx,QWORD PTR [rcx+0x10]
   140018703:	jl     0x14001870f
   140018705:	add    rdx,r9
   140018708:	call   0x140018914
   14001870d:	jmp    0x140018789
   14001870f:	mov    rbx,QWORD PTR [rcx+0x10]
   140018713:	lea    rdx,[rbx+r9*1]
   140018717:	call   0x140018914
   14001871c:	mov    rcx,QWORD PTR [rbp+0x8]
   140018720:	mov    rdx,QWORD PTR [rbp+0x10]
   140018724:	sub    rdx,rsi
   140018727:	lea    rax,[rsi+rdi*1]
   14001872b:	lea    r8,[rcx+rsi*8]
   14001872f:	sub    rdx,rdi
   140018732:	sub    rbx,rsi
   140018735:	lea    rcx,[rcx+rax*8]
   140018739:	shl    rbx,0x3
   14001873d:	shl    rdx,0x3
   140018741:	mov    r9,rbx
   140018744:	call   0x140018fb0
   140018749:	test   eax,eax
   14001874b:	je     0x140018773
   14001874d:	cmp    eax,0xc
   140018750:	je     0x14001876d
   140018752:	cmp    eax,0x16
   140018755:	je     0x140018767
   140018757:	cmp    eax,0x22
   14001875a:	je     0x140018767
   14001875c:	cmp    eax,0x50
   14001875f:	je     0x140018773
   140018761:	call   0x140006408
   140018766:	int3   
   140018767:	call   0x140006408
   14001876c:	int3   
   14001876d:	call   0x1400063c0
   140018772:	int3   
   140018773:	mov    rax,QWORD PTR [rbp+0x8]
   140018777:	mov    r8,rdi
   14001877a:	xor    edx,edx
   14001877c:	lea    rcx,[rax+rsi*8]
   140018780:	shl    r8,0x3
   140018784:	call   0x14001b520
   140018789:	shl    rsi,0x3
   14001878d:	mov    rax,QWORD PTR [rbp+0x8]
   140018791:	mov    QWORD PTR [rsi+rax*1],r12
   140018795:	add    rsi,0x8
   140018799:	sub    rdi,0x1
   14001879d:	jne    0x14001878d
   14001879f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400187a4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400187a9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400187ae:	mov    rdi,QWORD PTR [rsp+0x48]
   1400187b3:	add    rsp,0x20
   1400187b7:	pop    r12
   1400187b9:	ret    
   1400187ba:	call   0x140006408
   1400187bf:	int3   
   1400187c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400187c5:	push   rdi
   1400187c6:	sub    rsp,0x20
   1400187ca:	lea    rax,[rip+0x1c13f]        # 0x140034910
   1400187d1:	mov    rdi,rcx
   1400187d4:	mov    ebx,edx
   1400187d6:	mov    QWORD PTR [rcx],rax
   1400187d9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400187dd:	call   0x140006160
   1400187e2:	test   bl,0x1
   1400187e5:	je     0x1400187ef
   1400187e7:	mov    rcx,rdi
   1400187ea:	call   0x140006160
   1400187ef:	mov    rax,rdi
   1400187f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400187f7:	add    rsp,0x20
   1400187fb:	pop    rdi
   1400187fc:	ret    
   1400187fd:	int3   
   1400187fe:	int3   
   1400187ff:	int3   
   140018800:	mov    eax,0x8
   140018805:	cmp    edx,eax
   140018807:	cmovb  edx,eax
   14001880a:	mov    eax,0x40
   14001880f:	cmp    r8d,0x1
   140018813:	cmovbe r8d,eax
   140018817:	and    QWORD PTR [rcx+0x10],0x0
   14001881c:	and    QWORD PTR [rcx+0x8],0x0
   140018821:	mov    DWORD PTR [rcx+0x4],r8d
   140018825:	mov    DWORD PTR [rcx],edx
   140018827:	mov    rax,rcx
   14001882a:	ret    
   14001882b:	int3   
   14001882c:	rex push rbx
   14001882e:	sub    rsp,0x20
   140018832:	mov    rbx,rcx
   140018835:	mov    rcx,QWORD PTR [rcx+0x8]
   140018839:	call   0x1400188ec
   14001883e:	and    QWORD PTR [rbx+0x8],0x0
   140018843:	and    QWORD PTR [rbx+0x10],0x0
   140018848:	add    rsp,0x20
   14001884c:	pop    rbx
   14001884d:	ret    
   14001884e:	int3   
   14001884f:	int3   
   140018850:	jmp    0x14001882c
   140018855:	int3   
   140018856:	int3   
   140018857:	int3   
   140018858:	rex push rbx
   14001885a:	sub    rsp,0x20
   14001885e:	cmp    QWORD PTR [rcx+0x10],0x0
   140018863:	mov    rbx,rcx
   140018866:	jne    0x1400188a1
   140018868:	mov    r8d,DWORD PTR [rcx]
   14001886b:	mov    edx,DWORD PTR [rcx+0x4]
   14001886e:	add    rcx,0x8
   140018872:	call   0x1400188b4
   140018877:	mov    edx,DWORD PTR [rbx+0x4]
   14001887a:	lea    ecx,[rdx-0x1]
   14001887d:	lea    r11,[rax+0x8]
   140018881:	imul   ecx,DWORD PTR [rbx]
   140018884:	add    r11,rcx
   140018887:	add    edx,0xffffffff
   14001888a:	js     0x1400188a1
   14001888c:	mov    rcx,QWORD PTR [rbx+0x10]
   140018890:	mov    QWORD PTR [r11],rcx
   140018893:	mov    eax,DWORD PTR [rbx]
   140018895:	mov    QWORD PTR [rbx+0x10],r11
   140018899:	sub    r11,rax
   14001889c:	sub    edx,0x1
   14001889f:	jns    0x14001888c
   1400188a1:	mov    rax,QWORD PTR [rbx+0x10]
   1400188a5:	mov    rcx,QWORD PTR [rax]
   1400188a8:	mov    QWORD PTR [rbx+0x10],rcx
   1400188ac:	add    rsp,0x20
   1400188b0:	pop    rbx
   1400188b1:	ret    
   1400188b2:	int3   
   1400188b3:	int3   
   1400188b4:	rex push rbx
   1400188b6:	sub    rsp,0x20
   1400188ba:	test   rdx,rdx
   1400188bd:	mov    rbx,rcx
   1400188c0:	je     0x1400188e3
   1400188c2:	test   r8,r8
   1400188c5:	je     0x1400188e3
   1400188c7:	imul   rdx,r8
   1400188cb:	lea    rcx,[rdx+0x8]
   1400188cf:	call   0x140006114
   1400188d4:	mov    rcx,QWORD PTR [rbx]
   1400188d7:	mov    QWORD PTR [rax],rcx
   1400188da:	mov    QWORD PTR [rbx],rax
   1400188dd:	add    rsp,0x20
   1400188e1:	pop    rbx
   1400188e2:	ret    
   1400188e3:	call   0x140006408
   1400188e8:	int3   
   1400188e9:	int3   
   1400188ea:	int3   
   1400188eb:	int3   
   1400188ec:	test   rcx,rcx
   1400188ef:	je     0x14001890b
   1400188f1:	push   rbx
   1400188f2:	sub    rsp,0x20
   1400188f6:	mov    rbx,QWORD PTR [rcx]
   1400188f9:	call   0x140006160
   1400188fe:	test   rbx,rbx
   140018901:	mov    rcx,rbx
   140018904:	jne    0x1400188f6
   140018906:	add    rsp,0x20
   14001890a:	pop    rbx
   14001890b:	ret    
   14001890c:	lea    rax,[rip+0x2764d]        # 0x14003ff60
   140018913:	ret    
   140018914:	mov    rax,rsp
   140018917:	mov    QWORD PTR [rax+0x8],rbx
   14001891b:	mov    QWORD PTR [rax+0x10],rbp
   14001891f:	mov    QWORD PTR [rax+0x18],rsi
   140018923:	mov    QWORD PTR [rax+0x20],rdi
   140018927:	push   r12
   140018929:	sub    rsp,0x20
   14001892d:	test   rdx,rdx
   140018930:	mov    rsi,rdx
   140018933:	mov    rdi,rcx
   140018936:	jns    0x14001893e
   140018938:	call   0x140006408
   14001893d:	int3   
   14001893e:	test   r8,r8
   140018941:	js     0x140018947
   140018943:	mov    QWORD PTR [rcx+0x20],r8
   140018947:	test   rdx,rdx
   14001894a:	mov    rcx,QWORD PTR [rcx+0x8]
   14001894e:	jne    0x140018969
   140018950:	call   0x140006160
   140018955:	and    QWORD PTR [rdi+0x8],0x0
   14001895a:	and    QWORD PTR [rdi+0x18],0x0
   14001895f:	and    QWORD PTR [rdi+0x10],0x0
   140018964:	jmp    0x140018a9a
   140018969:	test   rcx,rcx
   14001896c:	jne    0x140018997
   14001896e:	mov    rbx,rdx
   140018971:	shl    rbx,0x3
   140018975:	mov    rcx,rbx
   140018978:	call   0x140006114
   14001897d:	mov    r8,rbx
   140018980:	xor    edx,edx
   140018982:	mov    rcx,rax
   140018985:	mov    QWORD PTR [rdi+0x8],rax
   140018989:	call   0x14001b520
   14001898e:	mov    QWORD PTR [rdi+0x18],rsi
   140018992:	jmp    0x140018a96
   140018997:	mov    r8,QWORD PTR [rdi+0x18]
   14001899b:	cmp    rdx,r8
   14001899e:	jg     0x1400189c7
   1400189a0:	mov    rax,QWORD PTR [rdi+0x10]
   1400189a4:	cmp    rdx,rax
   1400189a7:	jle    0x140018a96
   1400189ad:	mov    r8,rdx
   1400189b0:	lea    rcx,[rcx+rax*8]
   1400189b4:	xor    edx,edx
   1400189b6:	sub    r8,rax
   1400189b9:	shl    r8,0x3
   1400189bd:	call   0x14001b520
   1400189c2:	jmp    0x140018a96
   1400189c7:	mov    rax,QWORD PTR [rdi+0x20]
   1400189cb:	test   rax,rax
   1400189ce:	jne    0x140018a01
   1400189d0:	mov    rax,QWORD PTR [rdi+0x10]
   1400189d4:	cqo    
   1400189d6:	and    edx,0x7
   1400189d9:	add    rax,rdx
   1400189dc:	mov    edx,0x4
   1400189e1:	sar    rax,0x3
   1400189e5:	cmp    rax,rdx
   1400189e8:	mov    rcx,rax
   1400189eb:	jl     0x1400189f7
   1400189ed:	mov    eax,0x400
   1400189f2:	cmp    rcx,rax
   1400189f5:	jg     0x140018a01
   1400189f7:	mov    rax,rcx
   1400189fa:	cmp    rcx,rdx
   1400189fd:	cmovl  rax,rdx
   140018a01:	add    rax,r8
   140018a04:	mov    rbp,rsi
   140018a07:	cmp    rsi,rax
   140018a0a:	cmovl  rbp,rax
   140018a0e:	cmp    rbp,r8
   140018a11:	jge    0x140018a19
   140018a13:	call   0x140006408
   140018a18:	int3   
   140018a19:	mov    rbx,rbp
   140018a1c:	shl    rbx,0x3
   140018a20:	mov    rcx,rbx
   140018a23:	call   0x140006114
   140018a28:	mov    r9,QWORD PTR [rdi+0x10]
   140018a2c:	mov    r8,QWORD PTR [rdi+0x8]
   140018a30:	shl    r9,0x3
   140018a34:	mov    rdx,rbx
   140018a37:	mov    rcx,rax
   140018a3a:	mov    r12,rax
   140018a3d:	call   0x140018ee0
   140018a42:	test   eax,eax
   140018a44:	je     0x140018a6c
   140018a46:	cmp    eax,0xc
   140018a49:	je     0x140018a66
   140018a4b:	cmp    eax,0x16
   140018a4e:	je     0x140018a60
   140018a50:	cmp    eax,0x22
   140018a53:	je     0x140018a60
   140018a55:	cmp    eax,0x50
   140018a58:	je     0x140018a6c
   140018a5a:	call   0x140006408
   140018a5f:	int3   
   140018a60:	call   0x140006408
   140018a65:	int3   
   140018a66:	call   0x1400063c0
   140018a6b:	int3   
   140018a6c:	mov    rax,QWORD PTR [rdi+0x10]
   140018a70:	mov    r8,rsi
   140018a73:	xor    edx,edx
   140018a75:	sub    r8,rax
   140018a78:	lea    rcx,[r12+rax*8]
   140018a7c:	shl    r8,0x3
   140018a80:	call   0x14001b520
   140018a85:	mov    rcx,QWORD PTR [rdi+0x8]
   140018a89:	call   0x140006160
   140018a8e:	mov    QWORD PTR [rdi+0x8],r12
   140018a92:	mov    QWORD PTR [rdi+0x18],rbp
   140018a96:	mov    QWORD PTR [rdi+0x10],rsi
   140018a9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140018a9f:	mov    rbp,QWORD PTR [rsp+0x38]
   140018aa4:	mov    rsi,QWORD PTR [rsp+0x40]
   140018aa9:	mov    rdi,QWORD PTR [rsp+0x48]
   140018aae:	add    rsp,0x20
   140018ab2:	pop    r12
   140018ab4:	ret    
   140018ab5:	int3   
   140018ab6:	int3   
   140018ab7:	int3   
   140018ab8:	mov    QWORD PTR [rsp+0x8],rbx
   140018abd:	mov    QWORD PTR [rsp+0x10],rbp
   140018ac2:	mov    QWORD PTR [rsp+0x18],rsi
   140018ac7:	push   rdi
   140018ac8:	sub    rsp,0x20
   140018acc:	mov    eax,DWORD PTR [rdx+0x20]
   140018acf:	mov    rbp,rdx
   140018ad2:	mov    rsi,rcx
   140018ad5:	not    eax
   140018ad7:	test   al,0x1
   140018ad9:	je     0x140018b0b
   140018adb:	mov    rdx,QWORD PTR [rcx+0x10]
   140018adf:	mov    rcx,rbp
   140018ae2:	call   0x1400150f0
   140018ae7:	xor    edi,edi
   140018ae9:	cmp    QWORD PTR [rsi+0x10],rdi
   140018aed:	jle    0x140018b46
   140018aef:	mov    rdx,QWORD PTR [rsi+0x8]
   140018af3:	mov    rcx,rbp
   140018af6:	mov    rdx,QWORD PTR [rdx+rdi*8]
   140018afa:	call   0x140016a68
   140018aff:	add    rdi,0x1
   140018b03:	cmp    rdi,QWORD PTR [rsi+0x10]
   140018b07:	jl     0x140018aef
   140018b09:	jmp    0x140018b46
   140018b0b:	mov    rcx,rdx
   140018b0e:	call   0x140015240
   140018b13:	or     r8,0xffffffffffffffff
   140018b17:	mov    rcx,rsi
   140018b1a:	mov    rdx,rax
   140018b1d:	call   0x140018914
   140018b22:	xor    edi,edi
   140018b24:	cmp    QWORD PTR [rsi+0x10],rdi
   140018b28:	jle    0x140018b46
   140018b2a:	mov    rbx,QWORD PTR [rsi+0x8]
   140018b2e:	xor    edx,edx
   140018b30:	mov    rcx,rbp
   140018b33:	call   0x140016bf4
   140018b38:	mov    QWORD PTR [rbx+rdi*8],rax
   140018b3c:	add    rdi,0x1
   140018b40:	cmp    rdi,QWORD PTR [rsi+0x10]
   140018b44:	jl     0x140018b2a
   140018b46:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b4b:	mov    rbp,QWORD PTR [rsp+0x38]
   140018b50:	mov    rsi,QWORD PTR [rsp+0x40]
   140018b55:	add    rsp,0x20
   140018b59:	pop    rdi
   140018b5a:	ret    
   140018b5b:	int3   
   140018b5c:	sub    rsp,0x28
   140018b60:	mov    ecx,0x28
   140018b65:	call   0x140006114
   140018b6a:	xor    edx,edx
   140018b6c:	cmp    rax,rdx
   140018b6f:	je     0x140018b8d
   140018b71:	lea    rcx,[rip+0x1bde8]        # 0x140034960
   140018b78:	mov    QWORD PTR [rax+0x8],rdx
   140018b7c:	mov    QWORD PTR [rax+0x20],rdx
   140018b80:	mov    QWORD PTR [rax+0x18],rdx
   140018b84:	mov    QWORD PTR [rax+0x10],rdx
   140018b88:	mov    QWORD PTR [rax],rcx
   140018b8b:	jmp    0x140018b90
   140018b8d:	mov    rax,rdx
   140018b90:	add    rsp,0x28
   140018b94:	ret    
   140018b95:	int3   
   140018b96:	int3   
   140018b97:	int3   
   140018b98:	mov    QWORD PTR [rsp+0x8],rbx
   140018b9d:	push   rdi
   140018b9e:	sub    rsp,0x20
   140018ba2:	lea    rax,[rip+0x1bdb7]        # 0x140034960
   140018ba9:	mov    rdi,rcx
   140018bac:	mov    ebx,edx
   140018bae:	mov    QWORD PTR [rcx],rax
   140018bb1:	mov    rcx,QWORD PTR [rcx+0x8]
   140018bb5:	call   0x140006160
   140018bba:	test   bl,0x1
   140018bbd:	je     0x140018bc7
   140018bbf:	mov    rcx,rdi
   140018bc2:	call   0x140006160
   140018bc7:	mov    rax,rdi
   140018bca:	mov    rbx,QWORD PTR [rsp+0x30]
   140018bcf:	add    rsp,0x20
   140018bd3:	pop    rdi
   140018bd4:	ret    
   140018bd5:	int3   
   140018bd6:	int3   
   140018bd7:	int3   
   140018bd8:	int3   
   140018bd9:	int3   
   140018bda:	int3   
   140018bdb:	int3   
   140018bdc:	int3   
   140018bdd:	int3   
   140018bde:	int3   
   140018bdf:	int3   
   140018be0:	mov    QWORD PTR [rsp+0x10],rbx
   140018be5:	mov    QWORD PTR [rsp+0x18],rsi
   140018bea:	push   rdi
   140018beb:	push   r12
   140018bed:	push   r13
   140018bef:	sub    rsp,0xa0
   140018bf6:	lea    rcx,[rsp+0x30]
   140018bfb:	call   QWORD PTR [rip+0x1851f]        # 0x140031120
   140018c01:	nop
   140018c02:	call   QWORD PTR [rip+0x18608]        # 0x140031210
   140018c08:	mov    rcx,rax
   140018c0b:	xor    edx,edx
   140018c0d:	mov    r8d,0x94
   140018c13:	call   QWORD PTR [rip+0x1869f]        # 0x1400312b8
   140018c19:	mov    rbx,rax
   140018c1c:	test   rax,rax
   140018c1f:	jne    0x140018c4d
   140018c21:	cmp    DWORD PTR [rip+0x2c8a0],0x1        # 0x1400454c8
   140018c28:	jne    0x140018c2f
   140018c2a:	call   0x14001c4b0
   140018c2f:	mov    ecx,0x12
   140018c34:	call   0x14001c270
   140018c39:	mov    ecx,0xff
   140018c3e:	call   0x1400199b0
   140018c43:	mov    eax,0xff
   140018c48:	jmp    0x140018e7b
   140018c4d:	mov    DWORD PTR [rax],0x94
   140018c53:	mov    rcx,rax
   140018c56:	call   QWORD PTR [rip+0x1872c]        # 0x140031388
   140018c5c:	test   eax,eax
   140018c5e:	jne    0x140018c7e
   140018c60:	call   QWORD PTR [rip+0x185aa]        # 0x140031210
   140018c66:	mov    rcx,rax
   140018c69:	mov    r8,rbx
   140018c6c:	xor    edx,edx
   140018c6e:	call   QWORD PTR [rip+0x1864c]        # 0x1400312c0
   140018c74:	mov    eax,0xff
   140018c79:	jmp    0x140018e7b
   140018c7e:	mov    r13d,DWORD PTR [rbx+0x10]
   140018c82:	mov    esi,DWORD PTR [rbx+0x4]
   140018c85:	mov    r12d,DWORD PTR [rbx+0x8]
   140018c89:	mov    edi,DWORD PTR [rbx+0xc]
   140018c8c:	and    edi,0x7fff
   140018c92:	call   QWORD PTR [rip+0x18578]        # 0x140031210
   140018c98:	mov    rcx,rax
   140018c9b:	mov    r8,rbx
   140018c9e:	xor    edx,edx
   140018ca0:	call   QWORD PTR [rip+0x1861a]        # 0x1400312c0
   140018ca6:	cmp    r13d,0x2
   140018caa:	je     0x140018cb0
   140018cac:	bts    edi,0xf
   140018cb0:	mov    eax,esi
   140018cb2:	shl    eax,0x8
   140018cb5:	add    eax,r12d
   140018cb8:	mov    DWORD PTR [rip+0x2c815],r13d        # 0x1400454d4
   140018cbf:	mov    DWORD PTR [rip+0x2c817],eax        # 0x1400454dc
   140018cc5:	mov    DWORD PTR [rip+0x2c815],esi        # 0x1400454e0
   140018ccb:	mov    DWORD PTR [rip+0x2c812],r12d        # 0x1400454e4
   140018cd2:	mov    DWORD PTR [rip+0x2c800],edi        # 0x1400454d8
   140018cd8:	cmp    WORD PTR [rip+0xfffffffffffe731f],0x5a4d        # 0x140000000
   140018ce1:	jne    0x140018d42
   140018ce3:	movsxd rax,DWORD PTR [rip+0xfffffffffffe7352]        # 0x14000003c
   140018cea:	lea    rdi,[rip+0xfffffffffffe730f]        # 0x140000000
   140018cf1:	add    rax,rdi
   140018cf4:	cmp    DWORD PTR [rax],0x4550
   140018cfa:	je     0x140018d07
   140018cfc:	xor    ebx,ebx
   140018cfe:	mov    DWORD PTR [rsp+0xc0],ebx
   140018d05:	jmp    0x140018d52
   140018d07:	cmp    WORD PTR [rax+0x18],0x20b
   140018d0d:	je     0x140018d1a
   140018d0f:	xor    ebx,ebx
   140018d11:	mov    DWORD PTR [rsp+0xc0],ebx
   140018d18:	jmp    0x140018d52
   140018d1a:	cmp    DWORD PTR [rax+0x84],0xe
   140018d21:	ja     0x140018d2e
   140018d23:	xor    ebx,ebx
   140018d25:	mov    DWORD PTR [rsp+0xc0],ebx
   140018d2c:	jmp    0x140018d52
   140018d2e:	xor    ebx,ebx
   140018d30:	cmp    DWORD PTR [rax+0xf8],ebx
   140018d36:	setne  bl
   140018d39:	mov    DWORD PTR [rsp+0xc0],ebx
   140018d40:	jmp    0x140018d52
   140018d42:	xor    ebx,ebx
   140018d44:	mov    DWORD PTR [rsp+0xc0],ebx
   140018d4b:	lea    rdi,[rip+0xfffffffffffe72ae]        # 0x140000000
   140018d52:	mov    ecx,0x1
   140018d57:	call   0x14001dc60
   140018d5c:	test   eax,eax
   140018d5e:	jne    0x140018d82
   140018d60:	cmp    DWORD PTR [rip+0x2c761],0x1        # 0x1400454c8
   140018d67:	jne    0x140018d6e
   140018d69:	call   0x14001c4b0
   140018d6e:	mov    ecx,0x1c
   140018d73:	call   0x14001c270
   140018d78:	mov    ecx,0xff
   140018d7d:	call   0x1400199b0
   140018d82:	call   0x14001db40
   140018d87:	test   eax,eax
   140018d89:	jne    0x140018dad
   140018d8b:	cmp    DWORD PTR [rip+0x2c736],0x1        # 0x1400454c8
   140018d92:	jne    0x140018d99
   140018d94:	call   0x14001c4b0
   140018d99:	mov    ecx,0x10
   140018d9e:	call   0x14001c270
   140018da3:	mov    ecx,0xff
   140018da8:	call   0x1400199b0
   140018dad:	call   0x14001d400
   140018db2:	nop
   140018db3:	call   0x14001d0d0
   140018db8:	test   eax,eax
   140018dba:	jns    0x140018dc6
   140018dbc:	mov    ecx,0x1b
   140018dc1:	call   0x140019980
   140018dc6:	call   0x14001cfb0
   140018dcb:	mov    QWORD PTR [rip+0x2ebb6],rax        # 0x140047988
   140018dd2:	call   0x14001cdb0
   140018dd7:	mov    QWORD PTR [rip+0x2c6e2],rax        # 0x1400454c0
   140018dde:	call   0x14001cb40
   140018de3:	test   eax,eax
   140018de5:	jns    0x140018df1
   140018de7:	mov    ecx,0x8
   140018dec:	call   0x140019980
   140018df1:	call   0x14001c810
   140018df6:	test   eax,eax
   140018df8:	jns    0x140018e04
   140018dfa:	mov    ecx,0x9
   140018dff:	call   0x140019980
   140018e04:	mov    ecx,0x1
   140018e09:	call   0x140019af0
   140018e0e:	test   eax,eax
   140018e10:	je     0x140018e19
   140018e12:	mov    ecx,eax
   140018e14:	call   0x140019980
   140018e19:	call   0x14001c7b0
   140018e1e:	test   BYTE PTR [rsp+0x6c],0x1
   140018e23:	je     0x140018e2d
   140018e25:	movzx  r9d,WORD PTR [rsp+0x70]
   140018e2b:	jmp    0x140018e33
   140018e2d:	mov    r9d,0xa
   140018e33:	mov    r8,rax
   140018e36:	xor    edx,edx
   140018e38:	mov    rcx,rdi
   140018e3b:	call   0x140030558
   140018e40:	mov    edi,eax
   140018e42:	mov    DWORD PTR [rsp+0x20],eax
   140018e46:	test   ebx,ebx
   140018e48:	jne    0x140018e51
   140018e4a:	mov    ecx,eax
   140018e4c:	call   0x140019d00
   140018e51:	call   0x140019d20
   140018e56:	jmp    0x140018e72
   140018e58:	mov    edi,eax
   140018e5a:	cmp    DWORD PTR [rsp+0xc0],0x0
   140018e62:	jne    0x140018e6c
   140018e64:	mov    ecx,eax
   140018e66:	call   0x140019d10
   140018e6b:	int3   
   140018e6c:	call   0x140019d30
   140018e71:	nop
   140018e72:	mov    eax,edi
   140018e74:	jmp    0x140018e7b
   140018e76:	mov    eax,0xff
   140018e7b:	lea    r11,[rsp+0xa0]
   140018e83:	mov    rbx,QWORD PTR [r11+0x28]
   140018e87:	mov    rsi,QWORD PTR [r11+0x30]
   140018e8b:	mov    rsp,r11
   140018e8e:	pop    r13
   140018e90:	pop    r12
   140018e92:	pop    rdi
   140018e93:	ret    
   140018e94:	int3   
   140018e95:	int3   
   140018e96:	int3   
   140018e97:	int3   
   140018e98:	int3   
   140018e99:	int3   
   140018e9a:	int3   
   140018e9b:	int3   
   140018e9c:	int3   
   140018e9d:	int3   
   140018e9e:	int3   
   140018e9f:	int3   
   140018ea0:	rex push rbp
   140018ea2:	sub    rsp,0x20
   140018ea6:	mov    rbp,rdx
   140018ea9:	mov    rax,QWORD PTR [rcx]
   140018eac:	mov    rdx,rcx
   140018eaf:	mov    ecx,DWORD PTR [rax]
   140018eb1:	call   0x14001c5a0
   140018eb6:	add    rsp,0x20
   140018eba:	pop    rbp
   140018ebb:	ret    
   140018ebc:	int3   
   140018ebd:	int3   
   140018ebe:	int3   
   140018ebf:	int3   
   140018ec0:	sub    rsp,0x28
   140018ec4:	call   0x14001dcc0
   140018ec9:	add    rsp,0x28
   140018ecd:	jmp    0x140018be0
   140018ed2:	int3   
   140018ed3:	int3   
   140018ed4:	int3   
   140018ed5:	int3   
   140018ed6:	int3   
   140018ed7:	int3   
   140018ed8:	int3   
   140018ed9:	int3   
   140018eda:	int3   
   140018edb:	int3   
   140018edc:	int3   
   140018edd:	int3   
   140018ede:	int3   
   140018edf:	int3   
   140018ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140018ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140018eea:	push   rdi
   140018eeb:	sub    rsp,0x30
   140018eef:	test   r9,r9
   140018ef2:	mov    rbx,r9
   140018ef5:	mov    rsi,r8
   140018ef8:	mov    rdi,rdx
   140018efb:	je     0x140018f4f
   140018efd:	test   rcx,rcx
   140018f00:	jne    0x140018f3a
   140018f02:	call   0x14001b280
   140018f07:	xor    r9d,r9d
   140018f0a:	xor    r8d,r8d
   140018f0d:	xor    edx,edx
   140018f0f:	xor    ecx,ecx
   140018f11:	mov    QWORD PTR [rsp+0x20],0x0
   140018f1a:	mov    DWORD PTR [rax],0x16
   140018f20:	call   0x14001de30
   140018f25:	mov    eax,0x16
   140018f2a:	mov    rbx,QWORD PTR [rsp+0x40]
   140018f2f:	mov    rsi,QWORD PTR [rsp+0x48]
   140018f34:	add    rsp,0x30
   140018f38:	pop    rdi
   140018f39:	ret    
   140018f3a:	test   r8,r8
   140018f3d:	je     0x140018f61
   140018f3f:	cmp    rdx,rbx
   140018f42:	jb     0x140018f61
   140018f44:	mov    r8,rbx
   140018f47:	mov    rdx,rsi
   140018f4a:	call   0x14001baf0
   140018f4f:	xor    eax,eax
   140018f51:	mov    rbx,QWORD PTR [rsp+0x40]
   140018f56:	mov    rsi,QWORD PTR [rsp+0x48]
   140018f5b:	add    rsp,0x30
   140018f5f:	pop    rdi
   140018f60:	ret    
   140018f61:	mov    r8,rdx
   140018f64:	xor    edx,edx
   140018f66:	call   0x14001b520
   140018f6b:	test   rsi,rsi
   140018f6e:	je     0x140018f02
   140018f70:	cmp    rdi,rbx
   140018f73:	jae    0x140018f25
   140018f75:	call   0x14001b280
   140018f7a:	xor    r9d,r9d
   140018f7d:	xor    r8d,r8d
   140018f80:	xor    edx,edx
   140018f82:	xor    ecx,ecx
   140018f84:	mov    QWORD PTR [rsp+0x20],0x0
   140018f8d:	mov    DWORD PTR [rax],0x22
   140018f93:	call   0x14001de30
   140018f98:	mov    rbx,QWORD PTR [rsp+0x40]
   140018f9d:	mov    rsi,QWORD PTR [rsp+0x48]
   140018fa2:	mov    eax,0x22
   140018fa7:	add    rsp,0x30
   140018fab:	pop    rdi
   140018fac:	ret    
   140018fad:	int3   
   140018fae:	int3   
   140018faf:	int3   
   140018fb0:	sub    rsp,0x38
   140018fb4:	test   r9,r9
   140018fb7:	mov    rax,r8
   140018fba:	je     0x140019030
   140018fbc:	test   rcx,rcx
   140018fbf:	jne    0x140018fee
   140018fc1:	call   0x14001b280
   140018fc6:	xor    r9d,r9d
   140018fc9:	xor    r8d,r8d
   140018fcc:	xor    edx,edx
   140018fce:	xor    ecx,ecx
   140018fd0:	mov    QWORD PTR [rsp+0x20],0x0
   140018fd9:	mov    DWORD PTR [rax],0x16
   140018fdf:	call   0x14001de30
   140018fe4:	mov    eax,0x16
   140018fe9:	add    rsp,0x38
   140018fed:	ret    
   140018fee:	test   rax,rax
   140018ff1:	je     0x140018fc1
   140018ff3:	cmp    rdx,r9
   140018ff6:	jae    0x140019025
   140018ff8:	call   0x14001b280
   140018ffd:	xor    r9d,r9d
   140019000:	xor    r8d,r8d
   140019003:	xor    edx,edx
   140019005:	xor    ecx,ecx
   140019007:	mov    QWORD PTR [rsp+0x20],0x0
   140019010:	mov    DWORD PTR [rax],0x22
   140019016:	call   0x14001de30
   14001901b:	mov    eax,0x22
   140019020:	add    rsp,0x38
   140019024:	ret    
   140019025:	mov    r8,r9
   140019028:	mov    rdx,rax
   14001902b:	call   0x14001baf0
   140019030:	xor    eax,eax
   140019032:	add    rsp,0x38
   140019036:	ret    
   140019037:	int3   
   140019038:	int3   
   140019039:	int3   
   14001903a:	int3   
   14001903b:	int3   
   14001903c:	int3   
   14001903d:	int3   
   14001903e:	int3   
   14001903f:	int3   
   140019040:	rex push rbp
   140019042:	push   r12
   140019044:	push   r13
   140019046:	sub    rsp,0x50
   14001904a:	lea    rbp,[rsp+0x40]
   14001904f:	mov    QWORD PTR [rbp+0x30],rbx
   140019053:	mov    QWORD PTR [rbp+0x38],rsi
   140019057:	mov    QWORD PTR [rbp+0x40],rdi
   14001905b:	mov    rax,QWORD PTR [rip+0x26f6e]        # 0x14003ffd0
   140019062:	xor    rax,rbp
   140019065:	mov    QWORD PTR [rbp+0x0],rax
   140019069:	test   rcx,rcx
   14001906c:	mov    r12,r8
   14001906f:	mov    rsi,rdx
   140019072:	mov    rbx,rcx
   140019075:	je     0x140019086
   140019077:	call   0x14001f310
   14001907c:	cmp    rax,rsi
   14001907f:	jb     0x1400190af
   140019081:	mov    WORD PTR [rbx],0x0
   140019086:	call   0x14001b280
   14001908b:	xor    edi,edi
   14001908d:	xor    r9d,r9d
   140019090:	xor    r8d,r8d
   140019093:	xor    edx,edx
   140019095:	xor    ecx,ecx
   140019097:	mov    DWORD PTR [rax],0x16
   14001909d:	mov    QWORD PTR [rsp+0x20],rdi
   1400190a2:	call   0x14001de30
   1400190a7:	lea    eax,[rdi+0x16]
   1400190aa:	jmp    0x140019256
   1400190af:	mov    rax,QWORD PTR [r12]
   1400190b3:	mov    edx,DWORD PTR [rax+0x14]
   1400190b6:	test   edx,edx
   1400190b8:	jne    0x1400190e7
   1400190ba:	cmp    WORD PTR [rbx],dx
   1400190bd:	je     0x1400190e0
   1400190bf:	nop
   1400190c0:	movzx  eax,WORD PTR [rbx]
   1400190c3:	cmp    ax,0x41
   1400190c7:	jb     0x1400190d6
   1400190c9:	cmp    ax,0x5a
   1400190cd:	ja     0x1400190d6
   1400190cf:	add    ax,0x20
   1400190d3:	mov    WORD PTR [rbx],ax
   1400190d6:	add    rbx,0x2
   1400190da:	cmp    WORD PTR [rbx],0x0
   1400190de:	jne    0x1400190c0
   1400190e0:	xor    eax,eax
   1400190e2:	jmp    0x140019256
   1400190e7:	mov    eax,DWORD PTR [rax+0x4]
   1400190ea:	xor    edi,edi
   1400190ec:	mov    r9,rbx
   1400190ef:	mov    DWORD PTR [rsp+0x38],eax
   1400190f3:	mov    DWORD PTR [rsp+0x30],edi
   1400190f7:	mov    r8d,0x100
   1400190fd:	mov    rcx,r12
   140019100:	mov    QWORD PTR [rsp+0x28],rdi
   140019105:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001910d:	call   0x14001f1c0
   140019112:	test   eax,eax
   140019114:	movsxd r13,eax
   140019117:	jne    0x14001912a
   140019119:	call   0x14001b280
   14001911e:	mov    ebx,0x2a
   140019123:	mov    DWORD PTR [rax],ebx
   140019125:	jmp    0x14001924f
   14001912a:	cmp    rsi,r13
   14001912d:	mov    rcx,r13
   140019130:	jae    0x14001915e
   140019132:	mov    WORD PTR [rbx],di
   140019135:	call   0x14001b280
   14001913a:	xor    r9d,r9d
   14001913d:	xor    r8d,r8d
   140019140:	xor    edx,edx
   140019142:	xor    ecx,ecx
   140019144:	mov    DWORD PTR [rax],0x22
   14001914a:	mov    QWORD PTR [rsp+0x20],rdi
   14001914f:	call   0x14001de30
   140019154:	mov    eax,0x22
   140019159:	jmp    0x140019256
   14001915e:	test   eax,eax
   140019160:	jle    0x140019244
   140019166:	xor    edx,edx
   140019168:	mov    rax,0xffffffffffffffe0
   14001916f:	div    rcx
   140019172:	cmp    rax,0x2
   140019176:	jb     0x140019244
   14001917c:	lea    rcx,[r13+r13*1+0x10]
   140019181:	cmp    rcx,0x400
   140019188:	ja     0x1400191bf
   14001918a:	lea    rax,[rcx+0xf]
   14001918e:	cmp    rax,rcx
   140019191:	ja     0x14001919d
   140019193:	movabs rax,0xffffffffffffff0
   14001919d:	and    rax,0xfffffffffffffff0
   1400191a1:	call   0x140030670
   1400191a6:	sub    rsp,rax
   1400191a9:	lea    rdi,[rsp+0x40]
   1400191ae:	test   rdi,rdi
   1400191b1:	je     0x140019244
   1400191b7:	mov    DWORD PTR [rdi],0xcccc
   1400191bd:	jmp    0x1400191d2
   1400191bf:	call   0x14001a470
   1400191c4:	test   rax,rax
   1400191c7:	mov    rdi,rax
   1400191ca:	je     0x1400191d6
   1400191cc:	mov    DWORD PTR [rax],0xdddd
   1400191d2:	add    rdi,0x10
   1400191d6:	test   rdi,rdi
   1400191d9:	je     0x140019244
   1400191db:	mov    rcx,QWORD PTR [r12]
   1400191df:	mov    r9,rbx
   1400191e2:	mov    r8d,0x100
   1400191e8:	mov    eax,DWORD PTR [rcx+0x4]
   1400191eb:	mov    edx,DWORD PTR [rcx+0x14]
   1400191ee:	mov    rcx,r12
   1400191f1:	mov    DWORD PTR [rsp+0x38],eax
   1400191f5:	mov    DWORD PTR [rsp+0x30],r13d
   1400191fa:	mov    QWORD PTR [rsp+0x28],rdi
   1400191ff:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140019207:	call   0x14001f1c0
   14001920c:	test   eax,eax
   14001920e:	je     0x140019222
   140019210:	mov    r8,rdi
   140019213:	mov    rdx,rsi
   140019216:	mov    rcx,rbx
   140019219:	call   0x14001a690
   14001921e:	mov    ebx,eax
   140019220:	jmp    0x14001922e
   140019222:	call   0x14001b280
   140019227:	mov    ebx,0x2a
   14001922c:	mov    DWORD PTR [rax],ebx
   14001922e:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140019235:	lea    rcx,[rdi-0x10]
   140019239:	jne    0x140019240
   14001923b:	call   0x14001a540
   140019240:	mov    eax,ebx
   140019242:	jmp    0x140019256
   140019244:	call   0x14001b280
   140019249:	mov    DWORD PTR [rax],0xc
   14001924f:	call   0x14001b280
   140019254:	mov    eax,DWORD PTR [rax]
   140019256:	mov    rcx,QWORD PTR [rbp+0x0]
   14001925a:	xor    rcx,rbp
   14001925d:	call   0x140019370
   140019262:	mov    rbx,QWORD PTR [rbp+0x30]
   140019266:	mov    rsi,QWORD PTR [rbp+0x38]
   14001926a:	mov    rdi,QWORD PTR [rbp+0x40]
   14001926e:	lea    rsp,[rbp+0x10]
   140019272:	pop    r13
   140019274:	pop    r12
   140019276:	pop    rbp
   140019277:	ret    
   140019278:	int3   
   140019279:	int3   
   14001927a:	int3   
   14001927b:	int3   
   14001927c:	int3   
   14001927d:	int3   
   14001927e:	int3   
   14001927f:	int3   
   140019280:	mov    QWORD PTR [rsp+0x8],rbx
   140019285:	push   rdi
   140019286:	sub    rsp,0x40
   14001928a:	mov    rbx,rdx
   14001928d:	mov    rdi,rcx
   140019290:	mov    BYTE PTR [rsp+0x38],0x0
   140019295:	call   0x14001d930
   14001929a:	mov    QWORD PTR [rsp+0x30],rax
   14001929f:	mov    r11,rax
   1400192a2:	mov    r8,QWORD PTR [rax+0xc0]
   1400192a9:	cmp    r8,QWORD PTR [rip+0x277e0]        # 0x140040a90
   1400192b0:	mov    QWORD PTR [rsp+0x20],r8
   1400192b5:	mov    rax,QWORD PTR [rax+0xb8]
   1400192bc:	mov    QWORD PTR [rsp+0x28],rax
   1400192c1:	je     0x1400192e7
   1400192c3:	mov    r8d,DWORD PTR [r11+0xc8]
   1400192ca:	test   DWORD PTR [rip+0x27647],r8d        # 0x140040918
   1400192d1:	jne    0x1400192e7
   1400192d3:	call   0x14001ed60
   1400192d8:	mov    r11,QWORD PTR [rsp+0x30]
   1400192dd:	mov    QWORD PTR [rsp+0x20],rax
   1400192e2:	mov    rax,QWORD PTR [rsp+0x28]
   1400192e7:	cmp    rax,QWORD PTR [rip+0x27522]        # 0x140040810
   1400192ee:	je     0x14001930e
   1400192f0:	mov    eax,DWORD PTR [r11+0xc8]
   1400192f7:	test   DWORD PTR [rip+0x2761b],eax        # 0x140040918
   1400192fd:	jne    0x14001930e
   1400192ff:	call   0x14001e210
   140019304:	mov    r11,QWORD PTR [rsp+0x30]
   140019309:	mov    QWORD PTR [rsp+0x28],rax
   14001930e:	test   BYTE PTR [r11+0xc8],0x2
   140019316:	jne    0x140019325
   140019318:	or     DWORD PTR [r11+0xc8],0x2
   140019320:	mov    BYTE PTR [rsp+0x38],0x1
   140019325:	lea    r8,[rsp+0x20]
   14001932a:	mov    rdx,rbx
   14001932d:	mov    rcx,rdi
   140019330:	call   0x140019040
   140019335:	cmp    BYTE PTR [rsp+0x38],0x0
   14001933a:	je     0x140019348
   14001933c:	mov    rcx,QWORD PTR [rsp+0x30]
   140019341:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019348:	mov    rbx,QWORD PTR [rsp+0x50]
   14001934d:	add    rsp,0x40
   140019351:	pop    rdi
   140019352:	ret    
   140019353:	int3   
   140019354:	int3   
   140019355:	int3   
   140019356:	int3   
   140019357:	int3   
   140019358:	int3   
   140019359:	int3   
   14001935a:	int3   
   14001935b:	int3   
   14001935c:	int3   
   14001935d:	int3   
   14001935e:	int3   
   14001935f:	int3   
   140019360:	int3   
   140019361:	int3   
   140019362:	int3   
   140019363:	int3   
   140019364:	int3   
   140019365:	int3   
   140019366:	data16 data16 xchg ax,ax
   14001936a:	data16 data16 xchg ax,ax
   14001936e:	xchg   ax,ax
   140019370:	cmp    rcx,QWORD PTR [rip+0x26c59]        # 0x14003ffd0
   140019377:	jne    0x14001938a
   140019379:	rol    rcx,0x10
   14001937d:	test   cx,0xffff
   140019382:	jne    0x140019386
   140019384:	repz ret 
   140019386:	ror    rcx,0x10
   14001938a:	jmp    0x14001f330
   14001938f:	int3   
   140019390:	mov    QWORD PTR [rsp+0x8],rbx
   140019395:	push   rdi
   140019396:	sub    rsp,0x20
   14001939a:	lea    rax,[rip+0x1b617]        # 0x1400349b8
   1400193a1:	mov    ebx,edx
   1400193a3:	mov    rdi,rcx
   1400193a6:	mov    QWORD PTR [rcx],rax
   1400193a9:	call   0x14001f480
   1400193ae:	test   bl,0x1
   1400193b1:	je     0x1400193bb
   1400193b3:	mov    rcx,rdi
   1400193b6:	call   0x140006160
   1400193bb:	mov    rax,rdi
   1400193be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400193c3:	add    rsp,0x20
   1400193c7:	pop    rdi
   1400193c8:	ret    
   1400193c9:	int3   
   1400193ca:	int3   
   1400193cb:	int3   
   1400193cc:	int3   
   1400193cd:	int3   
   1400193ce:	int3   
   1400193cf:	int3   
   1400193d0:	lea    r8,[rcx+0x11]
   1400193d4:	add    rdx,0x11
   1400193d8:	sub    r8,rdx
   1400193db:	xchg   ax,ax
   1400193dd:	data16 xchg ax,ax
   1400193e0:	movzx  ecx,BYTE PTR [rdx]
   1400193e3:	movzx  eax,BYTE PTR [rdx+r8*1]
   1400193e8:	sub    ecx,eax
   1400193ea:	jne    0x1400193f4
   1400193ec:	add    rdx,0x1
   1400193f0:	test   eax,eax
   1400193f2:	jne    0x1400193e0
   1400193f4:	test   ecx,ecx
   1400193f6:	sete   al
   1400193f9:	ret    
   1400193fa:	int3   
   1400193fb:	int3   
   1400193fc:	int3   
   1400193fd:	int3   
   1400193fe:	int3   
   1400193ff:	int3   
   140019400:	mov    QWORD PTR [rsp+0x10],rbx
   140019405:	push   rsi
   140019406:	sub    rsp,0x60
   14001940a:	test   r9,r9
   14001940d:	mov    r10,r9
   140019410:	mov    rsi,r8
   140019413:	mov    rbx,rdx
   140019416:	mov    r11,rcx
   140019419:	jne    0x14001944a
   14001941b:	call   0x14001b280
   140019420:	xor    r9d,r9d
   140019423:	xor    r8d,r8d
   140019426:	mov    DWORD PTR [rax],0x16
   14001942c:	xor    eax,eax
   14001942e:	xor    edx,edx
   140019430:	xor    ecx,ecx
   140019432:	mov    QWORD PTR [rsp+0x20],rax
   140019437:	call   0x14001de30
   14001943c:	or     eax,0xffffffff
   14001943f:	mov    rbx,QWORD PTR [rsp+0x78]
   140019444:	add    rsp,0x60
   140019448:	pop    rsi
   140019449:	ret    
   14001944a:	test   r8,r8
   14001944d:	je     0x140019454
   14001944f:	test   rdx,rdx
   140019452:	je     0x14001941b
   140019454:	cmp    r8,0x3fffffff
   14001945b:	mov    QWORD PTR [rsp+0x70],rdi
   140019460:	mov    DWORD PTR [rsp+0x48],0x42
   140019468:	mov    QWORD PTR [rsp+0x40],rdx
   14001946d:	mov    QWORD PTR [rsp+0x30],rdx
   140019472:	jbe    0x14001947e
   140019474:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14001947c:	jmp    0x140019486
   14001947e:	lea    eax,[r8+r8*1]
   140019482:	mov    DWORD PTR [rsp+0x38],eax
   140019486:	mov    r9,QWORD PTR [rsp+0x98]
   14001948e:	mov    r8,QWORD PTR [rsp+0x90]
   140019496:	lea    rcx,[rsp+0x30]
   14001949b:	mov    rdx,r10
   14001949e:	call   r11
   1400194a1:	test   rbx,rbx
   1400194a4:	mov    edi,eax
   1400194a6:	je     0x140019537
   1400194ac:	test   eax,eax
   1400194ae:	js     0x140019524
   1400194b0:	sub    DWORD PTR [rsp+0x38],0x1
   1400194b5:	js     0x1400194cf
   1400194b7:	mov    rax,QWORD PTR [rsp+0x30]
   1400194bc:	mov    BYTE PTR [rax],0x0
   1400194bf:	mov    rax,QWORD PTR [rsp+0x30]
   1400194c4:	add    rax,0x1
   1400194c8:	mov    QWORD PTR [rsp+0x30],rax
   1400194cd:	jmp    0x1400194e5
   1400194cf:	lea    rdx,[rsp+0x30]
   1400194d4:	xor    ecx,ecx
   1400194d6:	call   0x14001f520
   1400194db:	cmp    eax,0xffffffff
   1400194de:	je     0x140019524
   1400194e0:	mov    rax,QWORD PTR [rsp+0x30]
   1400194e5:	sub    DWORD PTR [rsp+0x38],0x1
   1400194ea:	js     0x140019501
   1400194ec:	mov    BYTE PTR [rax],0x0
   1400194ef:	mov    eax,edi
   1400194f1:	mov    rdi,QWORD PTR [rsp+0x70]
   1400194f6:	mov    rbx,QWORD PTR [rsp+0x78]
   1400194fb:	add    rsp,0x60
   1400194ff:	pop    rsi
   140019500:	ret    
   140019501:	lea    rdx,[rsp+0x30]
   140019506:	xor    ecx,ecx
   140019508:	call   0x14001f520
   14001950d:	cmp    eax,0xffffffff
   140019510:	je     0x140019524
   140019512:	mov    eax,edi
   140019514:	mov    rdi,QWORD PTR [rsp+0x70]
   140019519:	mov    rbx,QWORD PTR [rsp+0x78]
   14001951e:	add    rsp,0x60
   140019522:	pop    rsi
   140019523:	ret    
   140019524:	xor    eax,eax
   140019526:	mov    WORD PTR [rbx+rsi*2-0x2],0x0
   14001952d:	cmp    DWORD PTR [rsp+0x38],eax
   140019531:	setge  al
   140019534:	add    eax,0xfffffffe
   140019537:	mov    rdi,QWORD PTR [rsp+0x70]
   14001953c:	mov    rbx,QWORD PTR [rsp+0x78]
   140019541:	add    rsp,0x60
   140019545:	pop    rsi
   140019546:	ret    
   140019547:	int3   
   140019548:	int3   
   140019549:	int3   
   14001954a:	int3   
   14001954b:	int3   
   14001954c:	int3   
   14001954d:	int3   
   14001954e:	int3   
   14001954f:	int3   
   140019550:	rex push rbx
   140019552:	sub    rsp,0x30
   140019556:	test   r8,r8
   140019559:	mov    rbx,rcx
   14001955c:	je     0x1400195a7
   14001955e:	test   rcx,rcx
   140019561:	je     0x1400195a7
   140019563:	test   rdx,rdx
   140019566:	je     0x1400195a7
   140019568:	mov    rax,QWORD PTR [rsp+0x60]
   14001956d:	mov    QWORD PTR [rsp+0x28],rax
   140019572:	mov    QWORD PTR [rsp+0x20],r9
   140019577:	mov    r9,r8
   14001957a:	mov    r8,rdx
   14001957d:	mov    rdx,rcx
   140019580:	lea    rcx,[rip+0x7169]        # 0x1400206f0
   140019587:	call   0x140019400
   14001958c:	test   eax,eax
   14001958e:	jns    0x140019595
   140019590:	mov    WORD PTR [rbx],0x0
   140019595:	cmp    eax,0xfffffffe
   140019598:	jne    0x1400195cd
   14001959a:	call   0x14001b280
   14001959f:	mov    DWORD PTR [rax],0x22
   1400195a5:	jmp    0x1400195b2
   1400195a7:	call   0x14001b280
   1400195ac:	mov    DWORD PTR [rax],0x16
   1400195b2:	xor    r9d,r9d
   1400195b5:	xor    r8d,r8d
   1400195b8:	xor    edx,edx
   1400195ba:	xor    ecx,ecx
   1400195bc:	mov    QWORD PTR [rsp+0x20],0x0
   1400195c5:	call   0x14001de30
   1400195ca:	or     eax,0xffffffff
   1400195cd:	add    rsp,0x30
   1400195d1:	pop    rbx
   1400195d2:	ret    
   1400195d3:	int3   
   1400195d4:	int3   
   1400195d5:	int3   
   1400195d6:	int3   
   1400195d7:	int3   
   1400195d8:	int3   
   1400195d9:	int3   
   1400195da:	int3   
   1400195db:	int3   
   1400195dc:	int3   
   1400195dd:	int3   
   1400195de:	int3   
   1400195df:	int3   
   1400195e0:	rex push rbx
   1400195e2:	sub    rsp,0x30
   1400195e6:	test   r8,r8
   1400195e9:	mov    rbx,rcx
   1400195ec:	je     0x140019636
   1400195ee:	test   rcx,rcx
   1400195f1:	je     0x140019636
   1400195f3:	test   rdx,rdx
   1400195f6:	je     0x140019636
   1400195f8:	mov    QWORD PTR [rsp+0x28],r9
   1400195fd:	mov    r9,r8
   140019600:	mov    r8,rdx
   140019603:	mov    rdx,rcx
   140019606:	lea    rcx,[rip+0x70e3]        # 0x1400206f0
   14001960d:	mov    QWORD PTR [rsp+0x20],0x0
   140019616:	call   0x140019400
   14001961b:	test   eax,eax
   14001961d:	jns    0x140019624
   14001961f:	mov    WORD PTR [rbx],0x0
   140019624:	cmp    eax,0xfffffffe
   140019627:	jne    0x14001965c
   140019629:	call   0x14001b280
   14001962e:	mov    DWORD PTR [rax],0x22
   140019634:	jmp    0x140019641
   140019636:	call   0x14001b280
   14001963b:	mov    DWORD PTR [rax],0x16
   140019641:	xor    r9d,r9d
   140019644:	xor    r8d,r8d
   140019647:	xor    edx,edx
   140019649:	xor    ecx,ecx
   14001964b:	mov    QWORD PTR [rsp+0x20],0x0
   140019654:	call   0x14001de30
   140019659:	or     eax,0xffffffff
   14001965c:	add    rsp,0x30
   140019660:	pop    rbx
   140019661:	ret    
   140019662:	int3   
   140019663:	int3   
   140019664:	int3   
   140019665:	int3   
   140019666:	int3   
   140019667:	int3   
   140019668:	int3   
   140019669:	int3   
   14001966a:	int3   
   14001966b:	int3   
   14001966c:	int3   
   14001966d:	int3   
   14001966e:	int3   
   14001966f:	int3   
   140019670:	mov    QWORD PTR [rsp+0x10],rbx
   140019675:	mov    QWORD PTR [rsp+0x18],rbp
   14001967a:	mov    QWORD PTR [rsp+0x20],rsi
   14001967f:	push   rdi
   140019680:	sub    rsp,0x30
   140019684:	test   r9,r9
   140019687:	mov    rbp,r9
   14001968a:	mov    rsi,r8
   14001968d:	mov    rdi,rdx
   140019690:	mov    rbx,rcx
   140019693:	jne    0x1400196c0
   140019695:	call   0x14001b280
   14001969a:	xor    r9d,r9d
   14001969d:	xor    r8d,r8d
   1400196a0:	xor    edx,edx
   1400196a2:	xor    ecx,ecx
   1400196a4:	mov    QWORD PTR [rsp+0x20],0x0
   1400196ad:	mov    DWORD PTR [rax],0x16
   1400196b3:	call   0x14001de30
   1400196b8:	or     eax,0xffffffff
   1400196bb:	jmp    0x1400197ca
   1400196c0:	test   r8,r8
   1400196c3:	jne    0x1400196d6
   1400196c5:	test   rcx,rcx
   1400196c8:	jne    0x1400196db
   1400196ca:	test   rdx,rdx
   1400196cd:	jne    0x140019695
   1400196cf:	xor    eax,eax
   1400196d1:	jmp    0x1400197ca
   1400196d6:	test   rcx,rcx
   1400196d9:	je     0x140019695
   1400196db:	test   rdx,rdx
   1400196de:	je     0x140019695
   1400196e0:	cmp    rdx,r8
   1400196e3:	mov    QWORD PTR [rsp+0x40],r12
   1400196e8:	jbe    0x14001973a
   1400196ea:	call   0x14001b280
   1400196ef:	lea    r8,[rsi+0x1]
   1400196f3:	lea    rcx,[rip+0x6ff6]        # 0x1400206f0
   1400196fa:	mov    edi,DWORD PTR [rax]
   1400196fc:	mov    rax,QWORD PTR [rsp+0x68]
   140019701:	mov    r9,rbp
   140019704:	mov    QWORD PTR [rsp+0x28],rax
   140019709:	mov    rax,QWORD PTR [rsp+0x60]
   14001970e:	mov    rdx,rbx
   140019711:	mov    QWORD PTR [rsp+0x20],rax
   140019716:	call   0x140019400
   14001971b:	cmp    eax,0xfffffffe
   14001971e:	jne    0x140019791
   140019720:	call   0x14001b280
   140019725:	cmp    DWORD PTR [rax],0x22
   140019728:	jne    0x1400197c2
   14001972e:	call   0x14001b280
   140019733:	mov    DWORD PTR [rax],edi
   140019735:	jmp    0x1400197c2
   14001973a:	call   0x14001b280
   14001973f:	lea    rcx,[rip+0x6faa]        # 0x1400206f0
   140019746:	mov    r9,rbp
   140019749:	mov    r12d,DWORD PTR [rax]
   14001974c:	mov    rax,QWORD PTR [rsp+0x68]
   140019751:	mov    r8,rdi
   140019754:	mov    QWORD PTR [rsp+0x28],rax
   140019759:	mov    rax,QWORD PTR [rsp+0x60]
   14001975e:	mov    rdx,rbx
   140019761:	mov    QWORD PTR [rsp+0x20],rax
   140019766:	call   0x140019400
   14001976b:	mov    WORD PTR [rbx+rdi*2-0x2],0x0
   140019772:	cmp    eax,0xfffffffe
   140019775:	jne    0x140019791
   140019777:	cmp    rsi,0xffffffffffffffff
   14001977b:	jne    0x140019795
   14001977d:	call   0x14001b280
   140019782:	cmp    DWORD PTR [rax],0x22
   140019785:	jne    0x1400197c2
   140019787:	call   0x14001b280
   14001978c:	mov    DWORD PTR [rax],r12d
   14001978f:	jmp    0x1400197c2
   140019791:	test   eax,eax
   140019793:	jns    0x1400197c5
   140019795:	cmp    eax,0xfffffffe
   140019798:	mov    WORD PTR [rbx],0x0
   14001979d:	jne    0x1400197c2
   14001979f:	call   0x14001b280
   1400197a4:	xor    r9d,r9d
   1400197a7:	xor    r8d,r8d
   1400197aa:	xor    edx,edx
   1400197ac:	xor    ecx,ecx
   1400197ae:	mov    QWORD PTR [rsp+0x20],0x0
   1400197b7:	mov    DWORD PTR [rax],0x22
   1400197bd:	call   0x14001de30
   1400197c2:	or     eax,0xffffffff
   1400197c5:	mov    r12,QWORD PTR [rsp+0x40]
   1400197ca:	mov    rbx,QWORD PTR [rsp+0x48]
   1400197cf:	mov    rbp,QWORD PTR [rsp+0x50]
   1400197d4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400197d9:	add    rsp,0x30
   1400197dd:	pop    rdi
   1400197de:	ret    
   1400197df:	int3   
   1400197e0:	rex push rbx
   1400197e2:	sub    rsp,0x20
   1400197e6:	mov    edx,0x8
   1400197eb:	lea    ecx,[rdx+0x18]
   1400197ee:	call   0x140021720
   1400197f3:	mov    rcx,rax
   1400197f6:	mov    rbx,rax
   1400197f9:	call   0x14001d480
   1400197fe:	test   rbx,rbx
   140019801:	mov    QWORD PTR [rip+0x2e168],rax        # 0x140047970
   140019808:	mov    QWORD PTR [rip+0x2e159],rax        # 0x140047968
   14001980f:	jne    0x14001981a
   140019811:	lea    eax,[rbx+0x18]
   140019814:	add    rsp,0x20
   140019818:	pop    rbx
   140019819:	ret    
   14001981a:	mov    QWORD PTR [rbx],0x0
   140019821:	xor    eax,eax
   140019823:	add    rsp,0x20
   140019827:	pop    rbx
   140019828:	ret    
   140019829:	int3   
   14001982a:	int3   
   14001982b:	int3   
   14001982c:	int3   
   14001982d:	int3   
   14001982e:	int3   
   14001982f:	int3   
   140019830:	mov    QWORD PTR [rsp+0x8],rbx
   140019835:	mov    QWORD PTR [rsp+0x10],rsi
   14001983a:	mov    QWORD PTR [rsp+0x18],rdi
   14001983f:	push   r12
   140019841:	push   r13
   140019843:	push   r14
   140019845:	sub    rsp,0x20
   140019849:	mov    rbx,rcx
   14001984c:	call   0x1400199f0
   140019851:	nop
   140019852:	mov    rcx,QWORD PTR [rip+0x2e117]        # 0x140047970
   140019859:	call   0x14001d640
   14001985e:	mov    r13,rax
   140019861:	mov    rcx,QWORD PTR [rip+0x2e100]        # 0x140047968
   140019868:	call   0x14001d640
   14001986d:	mov    rsi,rax
   140019870:	cmp    rax,r13
   140019873:	jb     0x14001990f
   140019879:	mov    rdi,rax
   14001987c:	sub    rdi,r13
   14001987f:	lea    r14,[rdi+0x8]
   140019883:	cmp    r14,0x8
   140019887:	jb     0x14001990f
   14001988d:	mov    rcx,r13
   140019890:	call   0x14001bff0
   140019895:	mov    r12,rax
   140019898:	cmp    rax,r14
   14001989b:	jae    0x1400198f2
   14001989d:	mov    edx,0x1000
   1400198a2:	cmp    rax,rdx
   1400198a5:	cmovb  rdx,rax
   1400198a9:	add    rdx,rax
   1400198ac:	cmp    rdx,rax
   1400198af:	jb     0x1400198be
   1400198b1:	mov    rcx,r13
   1400198b4:	call   0x1400217b0
   1400198b9:	test   rax,rax
   1400198bc:	jne    0x1400198d5
   1400198be:	lea    rdx,[r12+0x20]
   1400198c3:	cmp    rdx,r12
   1400198c6:	jb     0x1400198ee
   1400198c8:	mov    rcx,r13
   1400198cb:	call   0x1400217b0
   1400198d0:	test   rax,rax
   1400198d3:	je     0x1400198ee
   1400198d5:	sar    rdi,0x3
   1400198d9:	lea    rsi,[rax+rdi*8]
   1400198dd:	mov    rcx,rax
   1400198e0:	call   0x14001d480
   1400198e5:	mov    QWORD PTR [rip+0x2e084],rax        # 0x140047970
   1400198ec:	jmp    0x1400198f2
   1400198ee:	xor    ebx,ebx
   1400198f0:	jmp    0x140019911
   1400198f2:	mov    rcx,rbx
   1400198f5:	call   0x14001d480
   1400198fa:	mov    QWORD PTR [rsi],rax
   1400198fd:	lea    rcx,[rsi+0x8]
   140019901:	call   0x14001d480
   140019906:	mov    QWORD PTR [rip+0x2e05b],rax        # 0x140047968
   14001990d:	jmp    0x140019911
   14001990f:	xor    ebx,ebx
   140019911:	call   0x140019a00
   140019916:	mov    rax,rbx
   140019919:	mov    rbx,QWORD PTR [rsp+0x40]
   14001991e:	mov    rsi,QWORD PTR [rsp+0x48]
   140019923:	mov    rdi,QWORD PTR [rsp+0x50]
   140019928:	add    rsp,0x20
   14001992c:	pop    r14
   14001992e:	pop    r13
   140019930:	pop    r12
   140019932:	ret    
   140019933:	int3   
   140019934:	int3   
   140019935:	int3   
   140019936:	int3   
   140019937:	int3   
   140019938:	int3   
   140019939:	int3   
   14001993a:	int3   
   14001993b:	int3   
   14001993c:	int3   
   14001993d:	int3   
   14001993e:	int3   
   14001993f:	int3   
   140019940:	rex push rbp
   140019942:	sub    rsp,0x20
   140019946:	mov    rbp,rdx
   140019949:	call   0x140019a00
   14001994e:	add    rsp,0x20
   140019952:	pop    rbp
   140019953:	ret    
   140019954:	int3   
   140019955:	int3   
   140019956:	int3   
   140019957:	int3   
   140019958:	int3   
   140019959:	int3   
   14001995a:	int3   
   14001995b:	int3   
   14001995c:	int3   
   14001995d:	int3   
   14001995e:	int3   
   14001995f:	int3   
   140019960:	sub    rsp,0x28
   140019964:	call   0x140019830
   140019969:	neg    rax
   14001996c:	sbb    eax,eax
   14001996e:	neg    eax
   140019970:	sub    eax,0x1
   140019973:	add    rsp,0x28
   140019977:	ret    
   140019978:	int3   
   140019979:	int3   
   14001997a:	int3   
   14001997b:	int3   
   14001997c:	int3   
   14001997d:	int3   
   14001997e:	int3   
   14001997f:	int3   
   140019980:	rex push rbx
   140019982:	sub    rsp,0x20
   140019986:	mov    ebx,ecx
   140019988:	call   0x14001c4b0
   14001998d:	mov    ecx,ebx
   14001998f:	call   0x14001c270
   140019994:	mov    rcx,QWORD PTR [rip+0x2662d]        # 0x14003ffc8
   14001999b:	call   0x14001d640
   1400199a0:	mov    ecx,0xff
   1400199a5:	add    rsp,0x20
   1400199a9:	pop    rbx
   1400199aa:	rex.W jmp rax
   1400199ad:	int3   
   1400199ae:	int3   
   1400199af:	int3   
   1400199b0:	rex push rbx
   1400199b2:	sub    rsp,0x20
   1400199b6:	mov    ebx,ecx
   1400199b8:	lea    rcx,[rip+0x1b011]        # 0x1400349d0
   1400199bf:	call   QWORD PTR [rip+0x179ab]        # 0x140031370
   1400199c5:	test   rax,rax
   1400199c8:	je     0x1400199e3
   1400199ca:	lea    rdx,[rip+0x1afef]        # 0x1400349c0
   1400199d1:	mov    rcx,rax
   1400199d4:	call   QWORD PTR [rip+0x17a86]        # 0x140031460
   1400199da:	test   rax,rax
   1400199dd:	je     0x1400199e3
   1400199df:	mov    ecx,ebx
   1400199e1:	call   rax
   1400199e3:	mov    ecx,ebx
   1400199e5:	call   QWORD PTR [rip+0x1773d]        # 0x140031128
   1400199eb:	int3   
   1400199ec:	int3   
   1400199ed:	int3   
   1400199ee:	int3   
   1400199ef:	int3   
   1400199f0:	mov    ecx,0x8
   1400199f5:	jmp    0x140021b50
   1400199fa:	int3   
   1400199fb:	int3   
   1400199fc:	int3   
   1400199fd:	int3   
   1400199fe:	int3   
   1400199ff:	int3   
   140019a00:	mov    ecx,0x8
   140019a05:	jmp    0x140021a20
   140019a0a:	int3   
   140019a0b:	int3   
   140019a0c:	int3   
   140019a0d:	int3   
   140019a0e:	int3   
   140019a0f:	int3   
   140019a10:	cmp    rcx,rdx
   140019a13:	jae    0x140019a42
   140019a15:	mov    QWORD PTR [rsp+0x8],rbx
   140019a1a:	push   rdi
   140019a1b:	sub    rsp,0x20
   140019a1f:	mov    rdi,rdx
   140019a22:	mov    rbx,rcx
   140019a25:	mov    rax,QWORD PTR [rbx]
   140019a28:	test   rax,rax
   140019a2b:	je     0x140019a2f
   140019a2d:	call   rax
   140019a2f:	add    rbx,0x8
   140019a33:	cmp    rbx,rdi
   140019a36:	jb     0x140019a25
   140019a38:	mov    rbx,QWORD PTR [rsp+0x30]
   140019a3d:	add    rsp,0x20
   140019a41:	pop    rdi
   140019a42:	ret    0x0
   140019a45:	int3   
   140019a46:	int3   
   140019a47:	int3   
   140019a48:	int3   
   140019a49:	int3   
   140019a4a:	int3   
   140019a4b:	int3   
   140019a4c:	int3   
   140019a4d:	int3   
   140019a4e:	int3   
   140019a4f:	int3   
   140019a50:	sub    rsp,0x38
   140019a54:	test   rcx,rcx
   140019a57:	jne    0x140019a86
   140019a59:	call   0x14001b280
   140019a5e:	xor    r9d,r9d
   140019a61:	xor    r8d,r8d
   140019a64:	xor    edx,edx
   140019a66:	xor    ecx,ecx
   140019a68:	mov    QWORD PTR [rsp+0x20],0x0
   140019a71:	mov    DWORD PTR [rax],0x16
   140019a77:	call   0x14001de30
   140019a7c:	mov    eax,0x16
   140019a81:	add    rsp,0x38
   140019a85:	ret    
   140019a86:	mov    eax,DWORD PTR [rip+0x2ba48]        # 0x1400454d4
   140019a8c:	test   eax,eax
   140019a8e:	je     0x140019a59
   140019a90:	mov    DWORD PTR [rcx],eax
   140019a92:	xor    eax,eax
   140019a94:	add    rsp,0x38
   140019a98:	ret    
   140019a99:	int3   
   140019a9a:	int3   
   140019a9b:	int3   
   140019a9c:	int3   
   140019a9d:	int3   
   140019a9e:	int3   
   140019a9f:	int3   
   140019aa0:	sub    rsp,0x38
   140019aa4:	test   rcx,rcx
   140019aa7:	jne    0x140019ad6
   140019aa9:	call   0x14001b280
   140019aae:	xor    r9d,r9d
   140019ab1:	xor    r8d,r8d
   140019ab4:	xor    edx,edx
   140019ab6:	xor    ecx,ecx
   140019ab8:	mov    QWORD PTR [rsp+0x20],0x0
   140019ac1:	mov    DWORD PTR [rax],0x16
   140019ac7:	call   0x14001de30
   140019acc:	mov    eax,0x16
   140019ad1:	add    rsp,0x38
   140019ad5:	ret    
   140019ad6:	cmp    DWORD PTR [rip+0x2b9f7],0x0        # 0x1400454d4
   140019add:	je     0x140019aa9
   140019adf:	mov    eax,DWORD PTR [rip+0x2b9fb]        # 0x1400454e0
   140019ae5:	mov    DWORD PTR [rcx],eax
   140019ae7:	xor    eax,eax
   140019ae9:	add    rsp,0x38
   140019aed:	ret    
   140019aee:	int3   
   140019aef:	int3   
   140019af0:	mov    QWORD PTR [rsp+0x8],rbx
   140019af5:	push   rdi
   140019af6:	sub    rsp,0x20
   140019afa:	cmp    QWORD PTR [rip+0x1afbe],0x0        # 0x140034ac0
   140019b02:	mov    ebx,ecx
   140019b04:	je     0x140019b1e
   140019b06:	lea    rcx,[rip+0x1afb3]        # 0x140034ac0
   140019b0d:	call   0x140021c60
   140019b12:	test   eax,eax
   140019b14:	je     0x140019b1e
   140019b16:	mov    ecx,ebx
   140019b18:	call   QWORD PTR [rip+0x1afa2]        # 0x140034ac0
   140019b1e:	call   0x140021ba0
   140019b23:	lea    rbx,[rip+0x17dd6]        # 0x140031900
   140019b2a:	lea    rdi,[rip+0x17df7]        # 0x140031928
   140019b31:	xor    eax,eax
   140019b33:	cmp    rbx,rdi
   140019b36:	jae    0x140019b53
   140019b38:	test   eax,eax
   140019b3a:	jne    0x140019bb0
   140019b3c:	mov    rcx,QWORD PTR [rbx]
   140019b3f:	test   rcx,rcx
   140019b42:	je     0x140019b46
   140019b44:	call   rcx
   140019b46:	add    rbx,0x8
   140019b4a:	cmp    rbx,rdi
   140019b4d:	jb     0x140019b38
   140019b4f:	test   eax,eax
   140019b51:	jne    0x140019bb0
   140019b53:	lea    rcx,[rip+0x38e6]        # 0x14001d440
   140019b5a:	call   0x140019960
   140019b5f:	lea    rbx,[rip+0x17cda]        # 0x140031840
   140019b66:	lea    rdi,[rip+0x17d8b]        # 0x1400318f8
   140019b6d:	cmp    rbx,rdi
   140019b70:	jae    0x140019b85
   140019b72:	mov    rax,QWORD PTR [rbx]
   140019b75:	test   rax,rax
   140019b78:	je     0x140019b7c
   140019b7a:	call   rax
   140019b7c:	add    rbx,0x8
   140019b80:	cmp    rbx,rdi
   140019b83:	jb     0x140019b72
   140019b85:	cmp    QWORD PTR [rip+0x2ddf3],0x0        # 0x140047980
   140019b8d:	je     0x140019bae
   140019b8f:	lea    rcx,[rip+0x2ddea]        # 0x140047980
   140019b96:	call   0x140021c60
   140019b9b:	test   eax,eax
   140019b9d:	je     0x140019bae
   140019b9f:	xor    r8d,r8d
   140019ba2:	xor    ecx,ecx
   140019ba4:	lea    edx,[r8+0x2]
   140019ba8:	call   QWORD PTR [rip+0x2ddd2]        # 0x140047980
   140019bae:	xor    eax,eax
   140019bb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140019bb5:	add    rsp,0x20
   140019bb9:	pop    rdi
   140019bba:	ret    
   140019bbb:	int3   
   140019bbc:	int3   
   140019bbd:	int3   
   140019bbe:	int3   
   140019bbf:	int3   
   140019bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140019bc5:	mov    QWORD PTR [rsp+0x10],rsi
   140019bca:	mov    DWORD PTR [rsp+0x18],r8d
   140019bcf:	push   rdi
   140019bd0:	push   r12
   140019bd2:	push   r13
   140019bd4:	sub    rsp,0x30
   140019bd8:	mov    r12d,r8d
   140019bdb:	mov    ebx,edx
   140019bdd:	mov    r13d,ecx
   140019be0:	mov    ecx,0x8
   140019be5:	call   0x140021b50
   140019bea:	nop
   140019beb:	cmp    DWORD PTR [rip+0x2b942],0x1        # 0x140045534
   140019bf2:	je     0x140019c94
   140019bf8:	mov    DWORD PTR [rip+0x2b92e],0x1        # 0x140045530
   140019c02:	mov    BYTE PTR [rip+0x2b8e3],r12b        # 0x1400454ec
   140019c09:	test   ebx,ebx
   140019c0b:	jne    0x140019c80
   140019c0d:	mov    rcx,QWORD PTR [rip+0x2dd5c]        # 0x140047970
   140019c14:	call   0x14001d640
   140019c19:	mov    rsi,rax
   140019c1c:	mov    rcx,QWORD PTR [rip+0x2dd45]        # 0x140047968
   140019c23:	call   0x14001d640
   140019c28:	mov    rbx,rax
   140019c2b:	mov    QWORD PTR [rsp+0x20],rax
   140019c30:	test   rsi,rsi
   140019c33:	je     0x140019c6d
   140019c35:	data16 data16 xchg ax,ax
   140019c39:	data16 xchg ax,ax
   140019c3c:	data16 data16 xchg ax,ax
   140019c40:	sub    rbx,0x8
   140019c44:	mov    QWORD PTR [rsp+0x20],rbx
   140019c49:	cmp    rbx,rsi
   140019c4c:	jb     0x140019c6d
   140019c4e:	cmp    QWORD PTR [rbx],0x0
   140019c52:	je     0x140019c6b
   140019c54:	mov    rdi,QWORD PTR [rbx]
   140019c57:	call   0x14001d550
   140019c5c:	cmp    rdi,rax
   140019c5f:	je     0x140019c6b
   140019c61:	mov    rcx,rdi
   140019c64:	call   0x14001d640
   140019c69:	call   rax
   140019c6b:	jmp    0x140019c40
   140019c6d:	lea    rdx,[rip+0x17cd4]        # 0x140031948
   140019c74:	lea    rcx,[rip+0x17cb5]        # 0x140031930
   140019c7b:	call   0x140019a10
   140019c80:	lea    rdx,[rip+0x17cd1]        # 0x140031958
   140019c87:	lea    rcx,[rip+0x17cc2]        # 0x140031950
   140019c8e:	call   0x140019a10
   140019c93:	nop
   140019c94:	test   r12d,r12d
   140019c97:	je     0x140019ca3
   140019c99:	mov    ecx,0x8
   140019c9e:	call   0x140021a20
   140019ca3:	test   r12d,r12d
   140019ca6:	jne    0x140019cc5
   140019ca8:	mov    DWORD PTR [rip+0x2b882],0x1        # 0x140045534
   140019cb2:	lea    ecx,[r12+0x8]
   140019cb7:	call   0x140021a20
   140019cbc:	mov    ecx,r13d
   140019cbf:	call   0x1400199b0
   140019cc4:	int3   
   140019cc5:	mov    rbx,QWORD PTR [rsp+0x50]
   140019cca:	mov    rsi,QWORD PTR [rsp+0x58]
   140019ccf:	add    rsp,0x30
   140019cd3:	pop    r13
   140019cd5:	pop    r12
   140019cd7:	pop    rdi
   140019cd8:	ret    
   140019cd9:	int3   
   140019cda:	int3   
   140019cdb:	int3   
   140019cdc:	int3   
   140019cdd:	int3   
   140019cde:	int3   
   140019cdf:	int3   
   140019ce0:	rex push rbp
   140019ce2:	sub    rsp,0x20
   140019ce6:	mov    rbp,rdx
   140019ce9:	cmp    DWORD PTR [rbp+0x60],0x0
   140019ced:	je     0x140019cf9
   140019cef:	mov    ecx,0x8
   140019cf4:	call   0x140021a20
   140019cf9:	add    rsp,0x20
   140019cfd:	pop    rbp
   140019cfe:	ret    
   140019cff:	int3   
   140019d00:	xor    r8d,r8d
   140019d03:	xor    edx,edx
   140019d05:	jmp    0x140019bc0
   140019d0a:	int3   
   140019d0b:	int3   
   140019d0c:	int3   
   140019d0d:	int3   
   140019d0e:	int3   
   140019d0f:	int3   
   140019d10:	xor    r8d,r8d
   140019d13:	lea    edx,[r8+0x1]
   140019d17:	jmp    0x140019bc0
   140019d1c:	int3   
   140019d1d:	int3   
   140019d1e:	int3   
   140019d1f:	int3   
   140019d20:	xor    edx,edx
   140019d22:	xor    ecx,ecx
   140019d24:	lea    r8d,[rdx+0x1]
   140019d28:	jmp    0x140019bc0
   140019d2d:	int3   
   140019d2e:	int3   
   140019d2f:	int3   
   140019d30:	mov    edx,0x1
   140019d35:	xor    ecx,ecx
   140019d37:	mov    r8d,edx
   140019d3a:	jmp    0x140019bc0
   140019d3f:	int3   
   140019d40:	rex push rbx
   140019d42:	sub    rsp,0x20
   140019d46:	call   0x14001d550
   140019d4b:	mov    rcx,rax
   140019d4e:	mov    rbx,rax
   140019d51:	call   0x1400221a0
   140019d56:	mov    rcx,rbx
   140019d59:	call   0x140022050
   140019d5e:	mov    rcx,rbx
   140019d61:	call   0x14001dd80
   140019d66:	mov    rcx,rbx
   140019d69:	call   0x140022040
   140019d6e:	mov    rcx,rbx
   140019d71:	call   0x140022030
   140019d76:	mov    rcx,rbx
   140019d79:	call   0x140021d50
   140019d7e:	mov    rcx,rbx
   140019d81:	call   0x140002e60
   140019d86:	mov    rcx,rbx
   140019d89:	call   0x140021d30
   140019d8e:	lea    rcx,[rip+0xffffffffffffff7b]        # 0x140019d10
   140019d95:	call   0x14001d480
   140019d9a:	mov    QWORD PTR [rip+0x26227],rax        # 0x14003ffc8
   140019da1:	add    rsp,0x20
   140019da5:	pop    rbx
   140019da6:	ret    
   140019da7:	int3   
   140019da8:	int3   
   140019da9:	int3   
   140019daa:	int3   
   140019dab:	int3   
   140019dac:	int3   
   140019dad:	int3   
   140019dae:	int3   
   140019daf:	int3   
   140019db0:	sub    rsp,0x68
   140019db4:	test   rcx,rcx
   140019db7:	jne    0x140019de2
   140019db9:	call   0x14001b280
   140019dbe:	xor    r9d,r9d
   140019dc1:	xor    r8d,r8d
   140019dc4:	mov    DWORD PTR [rax],0x16
   140019dca:	xor    eax,eax
   140019dcc:	xor    edx,edx
   140019dce:	xor    ecx,ecx
   140019dd0:	mov    QWORD PTR [rsp+0x20],rax
   140019dd5:	call   0x14001de30
   140019dda:	or     eax,0xffffffff
   140019ddd:	add    rsp,0x68
   140019de1:	ret    
   140019de2:	xor    eax,eax
   140019de4:	mov    r9,rdx
   140019de7:	mov    rdx,rcx
   140019dea:	lea    rcx,[rsp+0x30]
   140019def:	xor    r8d,r8d
   140019df2:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140019dfa:	mov    DWORD PTR [rsp+0x48],0x42
   140019e02:	mov    QWORD PTR [rsp+0x40],rax
   140019e07:	mov    QWORD PTR [rsp+0x30],rax
   140019e0c:	call   0x14001f6f0
   140019e11:	add    rsp,0x68
   140019e15:	ret    
   140019e16:	int3   
   140019e17:	int3   
   140019e18:	int3   
   140019e19:	int3   
   140019e1a:	int3   
   140019e1b:	int3   
   140019e1c:	int3   
   140019e1d:	int3   
   140019e1e:	int3   
   140019e1f:	int3   
   140019e20:	rex push rbx
   140019e22:	sub    rsp,0x40
   140019e26:	mov    QWORD PTR [rsp+0x58],rsi
   140019e2b:	mov    QWORD PTR [rsp+0x60],rdi
   140019e30:	xor    dil,dil
   140019e33:	test   rdx,rdx
   140019e36:	mov    QWORD PTR [rsp+0x68],r12
   140019e3b:	mov    BYTE PTR [rsp+0x38],dil
   140019e40:	mov    r12d,ecx
   140019e43:	jne    0x140019eb9
   140019e45:	mov    QWORD PTR [rsp+0x50],rbp
   140019e4a:	call   0x14001d930
   140019e4f:	mov    rsi,QWORD PTR [rax+0xc0]
   140019e56:	mov    rbp,QWORD PTR [rax+0xb8]
   140019e5d:	mov    rbx,rax
   140019e60:	cmp    rsi,QWORD PTR [rip+0x26c29]        # 0x140040a90
   140019e67:	je     0x140019e7f
   140019e69:	mov    edx,DWORD PTR [rax+0xc8]
   140019e6f:	test   DWORD PTR [rip+0x26aa3],edx        # 0x140040918
   140019e75:	jne    0x140019e7f
   140019e77:	call   0x14001ed60
   140019e7c:	mov    rsi,rax
   140019e7f:	cmp    rbp,QWORD PTR [rip+0x2698a]        # 0x140040810
   140019e86:	mov    rbp,QWORD PTR [rsp+0x50]
   140019e8b:	je     0x140019ea0
   140019e8d:	mov    ecx,DWORD PTR [rbx+0xc8]
   140019e93:	test   DWORD PTR [rip+0x26a7f],ecx        # 0x140040918
   140019e99:	jne    0x140019ea0
   140019e9b:	call   0x14001e210
   140019ea0:	mov    ecx,DWORD PTR [rbx+0xc8]
   140019ea6:	test   cl,0x2
   140019ea9:	jne    0x140019edb
   140019eab:	or     ecx,0x2
   140019eae:	mov    dil,0x1
   140019eb1:	mov    DWORD PTR [rbx+0xc8],ecx
   140019eb7:	jmp    0x140019edb
   140019eb9:	mov    rax,QWORD PTR [rdx]
   140019ebc:	lea    rcx,[rsp+0x20]
   140019ec1:	mov    QWORD PTR [rcx],rax
   140019ec4:	mov    rax,QWORD PTR [rdx+0x8]
   140019ec8:	mov    QWORD PTR [rcx+0x8],rax
   140019ecc:	movzx  edi,BYTE PTR [rsp+0x38]
   140019ed1:	mov    rbx,QWORD PTR [rsp+0x30]
   140019ed6:	mov    rsi,QWORD PTR [rsp+0x20]
   140019edb:	mov    rax,QWORD PTR [rsi+0x140]
   140019ee2:	mov    rsi,QWORD PTR [rsp+0x58]
   140019ee7:	movzx  ecx,r12b
   140019eeb:	mov    ax,WORD PTR [rax+rcx*2]
   140019eef:	mov    r12,QWORD PTR [rsp+0x68]
   140019ef4:	and    eax,0x8000
   140019ef9:	test   dil,dil
   140019efc:	mov    rdi,QWORD PTR [rsp+0x60]
   140019f01:	je     0x140019f0a
   140019f03:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140019f0a:	add    rsp,0x40
   140019f0e:	pop    rbx
   140019f0f:	ret    
   140019f10:	mov    QWORD PTR [rsp+0x8],rbx
   140019f15:	mov    QWORD PTR [rsp+0x10],rbp
   140019f1a:	mov    QWORD PTR [rsp+0x18],rsi
   140019f1f:	mov    QWORD PTR [rsp+0x20],rdi
   140019f24:	push   r12
   140019f26:	sub    rsp,0x20
   140019f2a:	mov    r12d,ecx
   140019f2d:	xor    bpl,bpl
   140019f30:	call   0x14001d930
   140019f35:	mov    rsi,QWORD PTR [rax+0xc0]
   140019f3c:	mov    rdi,QWORD PTR [rax+0xb8]
   140019f43:	mov    rbx,rax
   140019f46:	cmp    rsi,QWORD PTR [rip+0x26b43]        # 0x140040a90
   140019f4d:	je     0x140019f65
   140019f4f:	mov    edx,DWORD PTR [rax+0xc8]
   140019f55:	test   DWORD PTR [rip+0x269bd],edx        # 0x140040918
   140019f5b:	jne    0x140019f65
   140019f5d:	call   0x14001ed60
   140019f62:	mov    rsi,rax
   140019f65:	cmp    rdi,QWORD PTR [rip+0x268a4]        # 0x140040810
   140019f6c:	je     0x140019f81
   140019f6e:	mov    ecx,DWORD PTR [rbx+0xc8]
   140019f74:	test   DWORD PTR [rip+0x2699e],ecx        # 0x140040918
   140019f7a:	jne    0x140019f81
   140019f7c:	call   0x14001e210
   140019f81:	mov    ecx,DWORD PTR [rbx+0xc8]
   140019f87:	test   cl,0x2
   140019f8a:	jne    0x140019f98
   140019f8c:	or     ecx,0x2
   140019f8f:	mov    bpl,0x1
   140019f92:	mov    DWORD PTR [rbx+0xc8],ecx
   140019f98:	mov    rax,QWORD PTR [rsi+0x140]
   140019f9f:	movzx  ecx,r12b
   140019fa3:	mov    ax,WORD PTR [rax+rcx*2]
   140019fa7:	and    eax,0x8000
   140019fac:	test   bpl,bpl
   140019faf:	je     0x140019fb8
   140019fb1:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140019fb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140019fbd:	mov    rbp,QWORD PTR [rsp+0x38]
   140019fc2:	mov    rsi,QWORD PTR [rsp+0x40]
   140019fc7:	mov    rdi,QWORD PTR [rsp+0x48]
   140019fcc:	add    rsp,0x20
   140019fd0:	pop    r12
   140019fd2:	ret    
   140019fd3:	int3   
   140019fd4:	int3   
   140019fd5:	int3   
   140019fd6:	int3   
   140019fd7:	int3   
   140019fd8:	int3   
   140019fd9:	int3   
   140019fda:	int3   
   140019fdb:	int3   
   140019fdc:	int3   
   140019fdd:	int3   
   140019fde:	int3   
   140019fdf:	int3   
   140019fe0:	movzx  r10d,WORD PTR [rcx]
   140019fe4:	mov    r8,rcx
   140019fe7:	test   r10w,r10w
   140019feb:	je     0x14001a023
   140019fed:	movzx  r11d,WORD PTR [rdx]
   140019ff1:	cmp    r11w,r10w
   140019ff5:	mov    r9,rdx
   140019ff8:	je     0x14001a014
   140019ffa:	movzx  eax,r11w
   140019ffe:	xchg   ax,ax
   14001a000:	test   ax,ax
   14001a003:	je     0x14001a023
   14001a005:	mov    ax,WORD PTR [r9+0x2]
   14001a00a:	add    r9,0x2
   14001a00e:	cmp    ax,r10w
   14001a012:	jne    0x14001a000
   14001a014:	mov    r10w,WORD PTR [r8+0x2]
   14001a019:	add    r8,0x2
   14001a01d:	test   r10w,r10w
   14001a021:	jne    0x140019ff1
   14001a023:	sub    r8,rcx
   14001a026:	sar    r8,1
   14001a029:	mov    rax,r8
   14001a02c:	ret    
   14001a02d:	int3   
   14001a02e:	int3   
   14001a02f:	int3   
   14001a030:	cmp    WORD PTR [rcx],0x0
   14001a034:	mov    r10,rdx
   14001a037:	mov    r11,rcx
   14001a03a:	mov    rax,rcx
   14001a03d:	je     0x14001a070
   14001a03f:	movzx  r9d,WORD PTR [rdx]
   14001a043:	test   r9w,r9w
   14001a047:	mov    r8,r10
   14001a04a:	je     0x14001a066
   14001a04c:	movzx  ecx,WORD PTR [rax]
   14001a04f:	movzx  edx,r9w
   14001a053:	cmp    dx,cx
   14001a056:	je     0x14001a070
   14001a058:	mov    dx,WORD PTR [r8+0x2]
   14001a05d:	add    r8,0x2
   14001a061:	test   dx,dx
   14001a064:	jne    0x14001a053
   14001a066:	add    rax,0x2
   14001a06a:	cmp    WORD PTR [rax],0x0
   14001a06e:	jne    0x14001a043
   14001a070:	sub    rax,r11
   14001a073:	sar    rax,1
   14001a076:	ret    
   14001a077:	int3   
   14001a078:	int3   
   14001a079:	int3   
   14001a07a:	int3   
   14001a07b:	int3   
   14001a07c:	int3   
   14001a07d:	int3   
   14001a07e:	int3   
   14001a07f:	int3   
   14001a080:	movzx  eax,WORD PTR [rcx]
   14001a083:	test   ax,ax
   14001a086:	je     0x14001a09a
   14001a088:	cmp    ax,dx
   14001a08b:	je     0x14001a09f
   14001a08d:	mov    ax,WORD PTR [rcx+0x2]
   14001a091:	add    rcx,0x2
   14001a095:	test   ax,ax
   14001a098:	jne    0x14001a088
   14001a09a:	cmp    WORD PTR [rcx],dx
   14001a09d:	jne    0x14001a0a3
   14001a09f:	mov    rax,rcx
   14001a0a2:	ret    
   14001a0a3:	xor    eax,eax
   14001a0a5:	ret    
   14001a0a6:	int3   
   14001a0a7:	int3   
   14001a0a8:	int3   
   14001a0a9:	int3   
   14001a0aa:	int3   
   14001a0ab:	int3   
   14001a0ac:	int3   
   14001a0ad:	int3   
   14001a0ae:	int3   
   14001a0af:	int3   
   14001a0b0:	cmp    WORD PTR [rdx],0x0
   14001a0b4:	mov    r10,rdx
   14001a0b7:	mov    r9,rcx
   14001a0ba:	jne    0x14001a0c0
   14001a0bc:	mov    rax,rcx
   14001a0bf:	ret    
   14001a0c0:	movzx  eax,WORD PTR [rcx]
   14001a0c3:	test   ax,ax
   14001a0c6:	je     0x14001a110
   14001a0c8:	mov    r8,rcx
   14001a0cb:	sub    r8,rdx
   14001a0ce:	xchg   ax,ax
   14001a0d0:	test   ax,ax
   14001a0d3:	mov    rdx,r10
   14001a0d6:	je     0x14001a0f8
   14001a0d8:	movzx  eax,WORD PTR [rdx]
   14001a0db:	test   ax,ax
   14001a0de:	je     0x14001a113
   14001a0e0:	movzx  ecx,WORD PTR [r8+rdx*1]
   14001a0e5:	movzx  eax,ax
   14001a0e8:	cmp    ecx,eax
   14001a0ea:	jne    0x14001a0f8
   14001a0ec:	add    rdx,0x2
   14001a0f0:	cmp    WORD PTR [r8+rdx*1],0x0
   14001a0f6:	jne    0x14001a0d8
   14001a0f8:	cmp    WORD PTR [rdx],0x0
   14001a0fc:	je     0x14001a113
   14001a0fe:	mov    ax,WORD PTR [r9+0x2]
   14001a103:	add    r9,0x2
   14001a107:	add    r8,0x2
   14001a10b:	test   ax,ax
   14001a10e:	jne    0x14001a0d0
   14001a110:	xor    eax,eax
   14001a112:	ret    
   14001a113:	mov    rax,r9
   14001a116:	ret    
   14001a117:	int3   
   14001a118:	int3   
   14001a119:	int3   
   14001a11a:	int3   
   14001a11b:	int3   
   14001a11c:	int3   
   14001a11d:	int3   
   14001a11e:	int3   
   14001a11f:	int3   
   14001a120:	mov    r8,rcx
   14001a123:	movzx  eax,WORD PTR [rcx]
   14001a126:	add    rcx,0x2
   14001a12a:	test   ax,ax
   14001a12d:	jne    0x14001a123
   14001a12f:	nop
   14001a130:	sub    rcx,0x2
   14001a134:	cmp    rcx,r8
   14001a137:	je     0x14001a142
   14001a139:	cmp    WORD PTR [rcx],dx
   14001a13c:	jne    0x14001a130
   14001a13e:	mov    rax,rcx
   14001a141:	ret    
   14001a142:	cmp    WORD PTR [rcx],dx
   14001a145:	jne    0x14001a14b
   14001a147:	mov    rax,rcx
   14001a14a:	ret    
   14001a14b:	xor    eax,eax
   14001a14d:	ret    
   14001a14e:	int3   
   14001a14f:	int3   
   14001a150:	rex push rbp
   14001a152:	push   r12
   14001a154:	push   r13
   14001a156:	sub    rsp,0x50
   14001a15a:	lea    rbp,[rsp+0x40]
   14001a15f:	mov    QWORD PTR [rbp+0x30],rbx
   14001a163:	mov    QWORD PTR [rbp+0x38],rsi
   14001a167:	mov    QWORD PTR [rbp+0x40],rdi
   14001a16b:	mov    rax,QWORD PTR [rip+0x25e5e]        # 0x14003ffd0
   14001a172:	xor    rax,rbp
   14001a175:	mov    QWORD PTR [rbp+0x0],rax
   14001a179:	test   rcx,rcx
   14001a17c:	mov    r12,r8
   14001a17f:	mov    rsi,rdx
   14001a182:	mov    rbx,rcx
   14001a185:	je     0x14001a196
   14001a187:	call   0x14001f310
   14001a18c:	cmp    rax,rsi
   14001a18f:	jb     0x14001a1bf
   14001a191:	mov    WORD PTR [rbx],0x0
   14001a196:	call   0x14001b280
   14001a19b:	xor    edi,edi
   14001a19d:	xor    r9d,r9d
   14001a1a0:	xor    r8d,r8d
   14001a1a3:	xor    edx,edx
   14001a1a5:	xor    ecx,ecx
   14001a1a7:	mov    DWORD PTR [rax],0x16
   14001a1ad:	mov    QWORD PTR [rsp+0x20],rdi
   14001a1b2:	call   0x14001de30
   14001a1b7:	lea    eax,[rdi+0x16]
   14001a1ba:	jmp    0x14001a366
   14001a1bf:	mov    rax,QWORD PTR [r12]
   14001a1c3:	mov    edx,DWORD PTR [rax+0x14]
   14001a1c6:	test   edx,edx
   14001a1c8:	jne    0x14001a1f7
   14001a1ca:	cmp    WORD PTR [rbx],dx
   14001a1cd:	je     0x14001a1f0
   14001a1cf:	nop
   14001a1d0:	movzx  eax,WORD PTR [rbx]
   14001a1d3:	cmp    ax,0x61
   14001a1d7:	jb     0x14001a1e6
   14001a1d9:	cmp    ax,0x7a
   14001a1dd:	ja     0x14001a1e6
   14001a1df:	sub    ax,0x20
   14001a1e3:	mov    WORD PTR [rbx],ax
   14001a1e6:	add    rbx,0x2
   14001a1ea:	cmp    WORD PTR [rbx],0x0
   14001a1ee:	jne    0x14001a1d0
   14001a1f0:	xor    eax,eax
   14001a1f2:	jmp    0x14001a366
   14001a1f7:	mov    eax,DWORD PTR [rax+0x4]
   14001a1fa:	xor    edi,edi
   14001a1fc:	mov    r9,rbx
   14001a1ff:	mov    DWORD PTR [rsp+0x38],eax
   14001a203:	mov    DWORD PTR [rsp+0x30],edi
   14001a207:	mov    r8d,0x200
   14001a20d:	mov    rcx,r12
   14001a210:	mov    QWORD PTR [rsp+0x28],rdi
   14001a215:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a21d:	call   0x14001f1c0
   14001a222:	test   eax,eax
   14001a224:	movsxd r13,eax
   14001a227:	jne    0x14001a23a
   14001a229:	call   0x14001b280
   14001a22e:	mov    ebx,0x2a
   14001a233:	mov    DWORD PTR [rax],ebx
   14001a235:	jmp    0x14001a35f
   14001a23a:	cmp    rsi,r13
   14001a23d:	mov    rcx,r13
   14001a240:	jae    0x14001a26e
   14001a242:	mov    WORD PTR [rbx],di
   14001a245:	call   0x14001b280
   14001a24a:	xor    r9d,r9d
   14001a24d:	xor    r8d,r8d
   14001a250:	xor    edx,edx
   14001a252:	xor    ecx,ecx
   14001a254:	mov    DWORD PTR [rax],0x22
   14001a25a:	mov    QWORD PTR [rsp+0x20],rdi
   14001a25f:	call   0x14001de30
   14001a264:	mov    eax,0x22
   14001a269:	jmp    0x14001a366
   14001a26e:	test   eax,eax
   14001a270:	jle    0x14001a354
   14001a276:	xor    edx,edx
   14001a278:	mov    rax,0xffffffffffffffe0
   14001a27f:	div    rcx
   14001a282:	cmp    rax,0x2
   14001a286:	jb     0x14001a354
   14001a28c:	lea    rcx,[r13+r13*1+0x10]
   14001a291:	cmp    rcx,0x400
   14001a298:	ja     0x14001a2cf
   14001a29a:	lea    rax,[rcx+0xf]
   14001a29e:	cmp    rax,rcx
   14001a2a1:	ja     0x14001a2ad
   14001a2a3:	movabs rax,0xffffffffffffff0
   14001a2ad:	and    rax,0xfffffffffffffff0
   14001a2b1:	call   0x140030670
   14001a2b6:	sub    rsp,rax
   14001a2b9:	lea    rdi,[rsp+0x40]
   14001a2be:	test   rdi,rdi
   14001a2c1:	je     0x14001a354
   14001a2c7:	mov    DWORD PTR [rdi],0xcccc
   14001a2cd:	jmp    0x14001a2e2
   14001a2cf:	call   0x14001a470
   14001a2d4:	test   rax,rax
   14001a2d7:	mov    rdi,rax
   14001a2da:	je     0x14001a2e6
   14001a2dc:	mov    DWORD PTR [rax],0xdddd
   14001a2e2:	add    rdi,0x10
   14001a2e6:	test   rdi,rdi
   14001a2e9:	je     0x14001a354
   14001a2eb:	mov    rcx,QWORD PTR [r12]
   14001a2ef:	mov    r9,rbx
   14001a2f2:	mov    r8d,0x200
   14001a2f8:	mov    eax,DWORD PTR [rcx+0x4]
   14001a2fb:	mov    edx,DWORD PTR [rcx+0x14]
   14001a2fe:	mov    rcx,r12
   14001a301:	mov    DWORD PTR [rsp+0x38],eax
   14001a305:	mov    DWORD PTR [rsp+0x30],r13d
   14001a30a:	mov    QWORD PTR [rsp+0x28],rdi
   14001a30f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a317:	call   0x14001f1c0
   14001a31c:	test   eax,eax
   14001a31e:	je     0x14001a332
   14001a320:	mov    r8,rdi
   14001a323:	mov    rdx,rsi
   14001a326:	mov    rcx,rbx
   14001a329:	call   0x14001a690
   14001a32e:	mov    ebx,eax
   14001a330:	jmp    0x14001a33e
   14001a332:	call   0x14001b280
   14001a337:	mov    ebx,0x2a
   14001a33c:	mov    DWORD PTR [rax],ebx
   14001a33e:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14001a345:	lea    rcx,[rdi-0x10]
   14001a349:	jne    0x14001a350
   14001a34b:	call   0x14001a540
   14001a350:	mov    eax,ebx
   14001a352:	jmp    0x14001a366
   14001a354:	call   0x14001b280
   14001a359:	mov    DWORD PTR [rax],0xc
   14001a35f:	call   0x14001b280
   14001a364:	mov    eax,DWORD PTR [rax]
   14001a366:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a36a:	xor    rcx,rbp
   14001a36d:	call   0x140019370
   14001a372:	mov    rbx,QWORD PTR [rbp+0x30]
   14001a376:	mov    rsi,QWORD PTR [rbp+0x38]
   14001a37a:	mov    rdi,QWORD PTR [rbp+0x40]
   14001a37e:	lea    rsp,[rbp+0x10]
   14001a382:	pop    r13
   14001a384:	pop    r12
   14001a386:	pop    rbp
   14001a387:	ret    
   14001a388:	int3   
   14001a389:	int3   
   14001a38a:	int3   
   14001a38b:	int3   
   14001a38c:	int3   
   14001a38d:	int3   
   14001a38e:	int3   
   14001a38f:	int3   
   14001a390:	mov    QWORD PTR [rsp+0x8],rbx
   14001a395:	push   rdi
   14001a396:	sub    rsp,0x40
   14001a39a:	mov    rbx,rdx
   14001a39d:	mov    rdi,rcx
   14001a3a0:	mov    BYTE PTR [rsp+0x38],0x0
   14001a3a5:	call   0x14001d930
   14001a3aa:	mov    QWORD PTR [rsp+0x30],rax
   14001a3af:	mov    r11,rax
   14001a3b2:	mov    r8,QWORD PTR [rax+0xc0]
   14001a3b9:	cmp    r8,QWORD PTR [rip+0x266d0]        # 0x140040a90
   14001a3c0:	mov    QWORD PTR [rsp+0x20],r8
   14001a3c5:	mov    rax,QWORD PTR [rax+0xb8]
   14001a3cc:	mov    QWORD PTR [rsp+0x28],rax
   14001a3d1:	je     0x14001a3f7
   14001a3d3:	mov    r8d,DWORD PTR [r11+0xc8]
   14001a3da:	test   DWORD PTR [rip+0x26537],r8d        # 0x140040918
   14001a3e1:	jne    0x14001a3f7
   14001a3e3:	call   0x14001ed60
   14001a3e8:	mov    r11,QWORD PTR [rsp+0x30]
   14001a3ed:	mov    QWORD PTR [rsp+0x20],rax
   14001a3f2:	mov    rax,QWORD PTR [rsp+0x28]
   14001a3f7:	cmp    rax,QWORD PTR [rip+0x26412]        # 0x140040810
   14001a3fe:	je     0x14001a41e
   14001a400:	mov    eax,DWORD PTR [r11+0xc8]
   14001a407:	test   DWORD PTR [rip+0x2650b],eax        # 0x140040918
   14001a40d:	jne    0x14001a41e
   14001a40f:	call   0x14001e210
   14001a414:	mov    r11,QWORD PTR [rsp+0x30]
   14001a419:	mov    QWORD PTR [rsp+0x28],rax
   14001a41e:	test   BYTE PTR [r11+0xc8],0x2
   14001a426:	jne    0x14001a435
   14001a428:	or     DWORD PTR [r11+0xc8],0x2
   14001a430:	mov    BYTE PTR [rsp+0x38],0x1
   14001a435:	lea    r8,[rsp+0x20]
   14001a43a:	mov    rdx,rbx
   14001a43d:	mov    rcx,rdi
   14001a440:	call   0x14001a150
   14001a445:	cmp    BYTE PTR [rsp+0x38],0x0
   14001a44a:	je     0x14001a458
   14001a44c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a451:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001a458:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a45d:	add    rsp,0x40
   14001a461:	pop    rdi
   14001a462:	ret    
   14001a463:	int3   
   14001a464:	int3   
   14001a465:	int3   
   14001a466:	int3   
   14001a467:	int3   
   14001a468:	int3   
   14001a469:	int3   
   14001a46a:	int3   
   14001a46b:	int3   
   14001a46c:	int3   
   14001a46d:	int3   
   14001a46e:	int3   
   14001a46f:	int3   
   14001a470:	rex push rbx
   14001a472:	sub    rsp,0x20
   14001a476:	cmp    rcx,0xffffffffffffffe0
   14001a47a:	mov    rbx,rcx
   14001a47d:	ja     0x14001a51e
   14001a483:	mov    QWORD PTR [rsp+0x30],rsi
   14001a488:	test   rcx,rcx
   14001a48b:	mov    esi,0x1
   14001a490:	cmovne rsi,rcx
   14001a494:	mov    QWORD PTR [rsp+0x38],rdi
   14001a499:	data16 xchg ax,ax
   14001a49c:	data16 data16 xchg ax,ax
   14001a4a0:	mov    rcx,QWORD PTR [rip+0x2b5d1]        # 0x140045a78
   14001a4a7:	test   rcx,rcx
   14001a4aa:	jne    0x14001a4cc
   14001a4ac:	call   0x14001c4b0
   14001a4b1:	mov    ecx,0x1e
   14001a4b6:	call   0x14001c270
   14001a4bb:	mov    ecx,0xff
   14001a4c0:	call   0x1400199b0
   14001a4c5:	mov    rcx,QWORD PTR [rip+0x2b5ac]        # 0x140045a78
   14001a4cc:	mov    r8,rsi
   14001a4cf:	xor    edx,edx
   14001a4d1:	call   QWORD PTR [rip+0x16de1]        # 0x1400312b8
   14001a4d7:	test   rax,rax
   14001a4da:	mov    rdi,rax
   14001a4dd:	jne    0x14001a50b
   14001a4df:	cmp    DWORD PTR [rip+0x2be13],eax        # 0x1400462f8
   14001a4e5:	je     0x14001a4f5
   14001a4e7:	mov    rcx,rbx
   14001a4ea:	call   0x1400221b0
   14001a4ef:	test   eax,eax
   14001a4f1:	jne    0x14001a4a0
   14001a4f3:	jmp    0x14001a500
   14001a4f5:	call   0x14001b280
   14001a4fa:	mov    DWORD PTR [rax],0xc
   14001a500:	call   0x14001b280
   14001a505:	mov    DWORD PTR [rax],0xc
   14001a50b:	mov    rsi,QWORD PTR [rsp+0x30]
   14001a510:	mov    rax,rdi
   14001a513:	mov    rdi,QWORD PTR [rsp+0x38]
   14001a518:	add    rsp,0x20
   14001a51c:	pop    rbx
   14001a51d:	ret    
   14001a51e:	call   0x1400221b0
   14001a523:	call   0x14001b280
   14001a528:	mov    DWORD PTR [rax],0xc
   14001a52e:	xor    eax,eax
   14001a530:	add    rsp,0x20
   14001a534:	pop    rbx
   14001a535:	ret    
   14001a536:	int3   
   14001a537:	int3   
   14001a538:	int3   
   14001a539:	int3   
   14001a53a:	int3   
   14001a53b:	int3   
   14001a53c:	int3   
   14001a53d:	int3   
   14001a53e:	int3   
   14001a53f:	int3   
   14001a540:	sub    rsp,0x28
   14001a544:	test   rcx,rcx
   14001a547:	je     0x14001a580
   14001a549:	mov    r8,rcx
   14001a54c:	mov    rcx,QWORD PTR [rip+0x2b525]        # 0x140045a78
   14001a553:	xor    edx,edx
   14001a555:	call   QWORD PTR [rip+0x16d65]        # 0x1400312c0
   14001a55b:	test   eax,eax
   14001a55d:	jne    0x14001a580
   14001a55f:	mov    QWORD PTR [rsp+0x20],rbx
   14001a564:	call   0x14001b280
   14001a569:	mov    rbx,rax
   14001a56c:	call   QWORD PTR [rip+0x16f06]        # 0x140031478
   14001a572:	mov    ecx,eax
   14001a574:	call   0x14001b230
   14001a579:	mov    DWORD PTR [rbx],eax
   14001a57b:	mov    rbx,QWORD PTR [rsp+0x20]
   14001a580:	add    rsp,0x28
   14001a584:	ret    
   14001a585:	int3   
   14001a586:	int3   
   14001a587:	int3   
   14001a588:	int3   
   14001a589:	int3   
   14001a58a:	int3   
   14001a58b:	int3   
   14001a58c:	int3   
   14001a58d:	int3   
   14001a58e:	int3   
   14001a58f:	int3   
   14001a590:	rex push rbx
   14001a592:	sub    rsp,0x20
   14001a596:	mov    eax,DWORD PTR [r8]
   14001a599:	mov    rbx,rdx
   14001a59c:	mov    r9,rcx
   14001a59f:	mov    r11d,eax
   14001a5a2:	mov    r10,rcx
   14001a5a5:	and    r11d,0xfffffff8
   14001a5a9:	test   al,0x4
   14001a5ab:	je     0x14001a5c0
   14001a5ad:	mov    eax,DWORD PTR [r8+0x8]
   14001a5b1:	movsxd r10,DWORD PTR [r8+0x4]
   14001a5b5:	neg    eax
   14001a5b7:	add    r10,rcx
   14001a5ba:	movsxd rcx,eax
   14001a5bd:	and    r10,rcx
   14001a5c0:	movsxd rax,r11d
   14001a5c3:	mov    rdx,QWORD PTR [rax+r10*1]
   14001a5c7:	mov    rax,QWORD PTR [rbx+0x10]
   14001a5cb:	mov    ecx,DWORD PTR [rax+0x8]
   14001a5ce:	add    rcx,QWORD PTR [rbx+0x8]
   14001a5d2:	movzx  eax,BYTE PTR [rcx+0x3]
   14001a5d6:	test   al,0xf
   14001a5d8:	je     0x14001a5e5
   14001a5da:	movzx  eax,al
   14001a5dd:	and    eax,0xfffffff0
   14001a5e0:	cdqe   
   14001a5e2:	add    r9,rax
   14001a5e5:	xor    r9,rdx
   14001a5e8:	mov    rcx,r9
   14001a5eb:	add    rsp,0x20
   14001a5ef:	pop    rbx
   14001a5f0:	jmp    0x140019370
   14001a5f5:	int3   
   14001a5f6:	int3   
   14001a5f7:	int3   
   14001a5f8:	int3   
   14001a5f9:	int3   
   14001a5fa:	int3   
   14001a5fb:	int3   
   14001a5fc:	int3   
   14001a5fd:	int3   
   14001a5fe:	int3   
   14001a5ff:	int3   
   14001a600:	sub    rsp,0x28
   14001a604:	mov    rcx,QWORD PTR [r9+0x38]
   14001a608:	mov    r10,r9
   14001a60b:	mov    r8,rdx
   14001a60e:	mov    eax,DWORD PTR [rcx]
   14001a610:	mov    r9d,eax
   14001a613:	and    r9d,0xfffffff8
   14001a617:	test   al,0x4
   14001a619:	je     0x14001a62d
   14001a61b:	mov    eax,DWORD PTR [rcx+0x8]
   14001a61e:	movsxd r8,DWORD PTR [rcx+0x4]
   14001a622:	neg    eax
   14001a624:	add    r8,rdx
   14001a627:	movsxd rcx,eax
   14001a62a:	and    r8,rcx
   14001a62d:	movsxd rax,r9d
   14001a630:	mov    r9,QWORD PTR [rax+r8*1]
   14001a634:	mov    rax,QWORD PTR [r10+0x10]
   14001a638:	mov    ecx,DWORD PTR [rax+0x8]
   14001a63b:	add    rcx,QWORD PTR [r10+0x8]
   14001a63f:	movzx  eax,BYTE PTR [rcx+0x3]
   14001a643:	test   al,0xf
   14001a645:	je     0x14001a652
   14001a647:	movzx  eax,al
   14001a64a:	and    eax,0xfffffff0
   14001a64d:	cdqe   
   14001a64f:	add    rdx,rax
   14001a652:	xor    rdx,r9
   14001a655:	mov    rcx,rdx
   14001a658:	call   0x140019370
   14001a65d:	mov    eax,0x1
   14001a662:	add    rsp,0x28
   14001a666:	ret    
   14001a667:	int3   
   14001a668:	int3   
   14001a669:	int3   
   14001a66a:	int3   
   14001a66b:	int3   
   14001a66c:	int3   
   14001a66d:	int3   
   14001a66e:	int3   
   14001a66f:	int3   
   14001a670:	mov    rax,rcx
   14001a673:	movzx  edx,WORD PTR [rax]
   14001a676:	add    rax,0x2
   14001a67a:	test   dx,dx
   14001a67d:	jne    0x14001a673
   14001a67f:	sub    rax,rcx
   14001a682:	sar    rax,1
   14001a685:	sub    rax,0x1
   14001a689:	ret    
   14001a68a:	int3   
   14001a68b:	int3   
   14001a68c:	int3   
   14001a68d:	int3   
   14001a68e:	int3   
   14001a68f:	int3   
   14001a690:	sub    rsp,0x38
   14001a694:	test   rcx,rcx
   14001a697:	mov    r9,rcx
   14001a69a:	je     0x14001a6aa
   14001a69c:	test   rdx,rdx
   14001a69f:	je     0x14001a6aa
   14001a6a1:	test   r8,r8
   14001a6a4:	jne    0x14001a6e0
   14001a6a6:	mov    WORD PTR [rcx],r8w
   14001a6aa:	call   0x14001b280
   14001a6af:	xor    r9d,r9d
   14001a6b2:	xor    r8d,r8d
   14001a6b5:	xor    edx,edx
   14001a6b7:	xor    ecx,ecx
   14001a6b9:	mov    QWORD PTR [rsp+0x20],0x0
   14001a6c2:	mov    DWORD PTR [rax],0x16
   14001a6c8:	call   0x14001de30
   14001a6cd:	mov    eax,0x16
   14001a6d2:	add    rsp,0x38
   14001a6d6:	ret    
   14001a6d7:	data16 xchg ax,ax
   14001a6da:	data16 xchg ax,ax
   14001a6dd:	data16 xchg ax,ax
   14001a6e0:	movzx  eax,WORD PTR [r8]
   14001a6e4:	add    rcx,0x2
   14001a6e8:	add    r8,0x2
   14001a6ec:	test   ax,ax
   14001a6ef:	mov    WORD PTR [rcx-0x2],ax
   14001a6f3:	je     0x14001a6fb
   14001a6f5:	sub    rdx,0x1
   14001a6f9:	jne    0x14001a6e0
   14001a6fb:	test   rdx,rdx
   14001a6fe:	jne    0x14001a731
   14001a700:	mov    WORD PTR [r9],dx
   14001a704:	call   0x14001b280
   14001a709:	xor    r9d,r9d
   14001a70c:	xor    r8d,r8d
   14001a70f:	xor    edx,edx
   14001a711:	xor    ecx,ecx
   14001a713:	mov    DWORD PTR [rax],0x22
   14001a719:	mov    QWORD PTR [rsp+0x20],0x0
   14001a722:	call   0x14001de30
   14001a727:	mov    eax,0x22
   14001a72c:	add    rsp,0x38
   14001a730:	ret    
   14001a731:	xor    eax,eax
   14001a733:	add    rsp,0x38
   14001a737:	ret    
   14001a738:	int3   
   14001a739:	int3   
   14001a73a:	int3   
   14001a73b:	int3   
   14001a73c:	int3   
   14001a73d:	int3   
   14001a73e:	int3   
   14001a73f:	int3   
   14001a740:	sub    rsp,0x38
   14001a744:	test   r9,r9
   14001a747:	mov    r11,rdx
   14001a74a:	mov    r10,rcx
   14001a74d:	jne    0x14001a760
   14001a74f:	test   rcx,rcx
   14001a752:	jne    0x14001a765
   14001a754:	test   rdx,rdx
   14001a757:	jne    0x14001a783
   14001a759:	xor    eax,eax
   14001a75b:	add    rsp,0x38
   14001a75f:	ret    
   14001a760:	test   rcx,rcx
   14001a763:	je     0x14001a783
   14001a765:	test   rdx,rdx
   14001a768:	je     0x14001a783
   14001a76a:	test   r9,r9
   14001a76d:	jne    0x14001a77a
   14001a76f:	mov    WORD PTR [rcx],r9w
   14001a773:	xor    eax,eax
   14001a775:	add    rsp,0x38
   14001a779:	ret    
   14001a77a:	test   r8,r8
   14001a77d:	jne    0x14001a7b0
   14001a77f:	mov    WORD PTR [rcx],r8w
   14001a783:	call   0x14001b280
   14001a788:	xor    r9d,r9d
   14001a78b:	xor    r8d,r8d
   14001a78e:	xor    edx,edx
   14001a790:	xor    ecx,ecx
   14001a792:	mov    QWORD PTR [rsp+0x20],0x0
   14001a79b:	mov    DWORD PTR [rax],0x16
   14001a7a1:	call   0x14001de30
   14001a7a6:	mov    eax,0x16
   14001a7ab:	add    rsp,0x38
   14001a7af:	ret    
   14001a7b0:	cmp    r9,0xffffffffffffffff
   14001a7b4:	mov    rdx,rcx
   14001a7b7:	mov    rcx,r11
   14001a7ba:	jne    0x14001a7e0
   14001a7bc:	data16 data16 xchg ax,ax
   14001a7c0:	movzx  eax,WORD PTR [r8]
   14001a7c4:	add    rdx,0x2
   14001a7c8:	add    r8,0x2
   14001a7cc:	test   ax,ax
   14001a7cf:	mov    WORD PTR [rdx-0x2],ax
   14001a7d3:	je     0x14001a80a
   14001a7d5:	sub    rcx,0x1
   14001a7d9:	jne    0x14001a7c0
   14001a7db:	jmp    0x14001a80a
   14001a7dd:	data16 xchg ax,ax
   14001a7e0:	movzx  eax,WORD PTR [r8]
   14001a7e4:	add    rdx,0x2
   14001a7e8:	add    r8,0x2
   14001a7ec:	test   ax,ax
   14001a7ef:	mov    WORD PTR [rdx-0x2],ax
   14001a7f3:	je     0x14001a801
   14001a7f5:	sub    rcx,0x1
   14001a7f9:	je     0x14001a801
   14001a7fb:	sub    r9,0x1
   14001a7ff:	jne    0x14001a7e0
   14001a801:	test   r9,r9
   14001a804:	jne    0x14001a80a
   14001a806:	mov    WORD PTR [rdx],r9w
   14001a80a:	test   rcx,rcx
   14001a80d:	jne    0x14001a759
   14001a813:	cmp    r9,0xffffffffffffffff
   14001a817:	jne    0x14001a827
   14001a819:	mov    WORD PTR [r10+r11*2-0x2],cx
   14001a81f:	lea    eax,[rcx+0x50]
   14001a822:	add    rsp,0x38
   14001a826:	ret    
   14001a827:	mov    WORD PTR [r10],0x0
   14001a82d:	call   0x14001b280
   14001a832:	xor    r9d,r9d
   14001a835:	xor    r8d,r8d
   14001a838:	xor    edx,edx
   14001a83a:	xor    ecx,ecx
   14001a83c:	mov    DWORD PTR [rax],0x22
   14001a842:	mov    QWORD PTR [rsp+0x20],0x0
   14001a84b:	call   0x14001de30
   14001a850:	mov    eax,0x22
   14001a855:	add    rsp,0x38
   14001a859:	ret    
   14001a85a:	int3   
   14001a85b:	int3   
   14001a85c:	int3   
   14001a85d:	int3   
   14001a85e:	int3   
   14001a85f:	int3   
   14001a860:	mov    QWORD PTR [rsp+0x20],rbp
   14001a865:	push   rdi
   14001a866:	push   r12
   14001a868:	push   r13
   14001a86a:	push   r14
   14001a86c:	push   r15
   14001a86e:	sub    rsp,0x20
   14001a872:	movsxd rdi,DWORD PTR [r8+0xc]
   14001a876:	mov    r15,rcx
   14001a879:	mov    rcx,r8
   14001a87c:	mov    r12,r9
   14001a87f:	mov    r14,r8
   14001a882:	mov    r13,rdx
   14001a885:	call   0x140022490
   14001a88a:	test   edi,edi
   14001a88c:	mov    r10,QWORD PTR [r15]
   14001a88f:	mov    QWORD PTR [r12],r10
   14001a893:	mov    ebp,eax
   14001a895:	je     0x14001a959
   14001a89b:	lea    rcx,[rdi+rdi*4]
   14001a89f:	mov    QWORD PTR [rsp+0x58],rbx
   14001a8a4:	mov    QWORD PTR [rsp+0x60],rsi
   14001a8a9:	lea    rsi,[rcx*4-0x14]
   14001a8b1:	data16 xchg ax,ax
   14001a8b4:	data16 data16 xchg ax,ax
   14001a8b8:	data16 data16 xchg ax,ax
   14001a8bc:	data16 data16 xchg ax,ax
   14001a8c0:	movsxd rbx,DWORD PTR [r14+0x10]
   14001a8c4:	add    rbx,QWORD PTR [r13+0x8]
   14001a8c8:	add    rbx,rsi
   14001a8cb:	cmp    ebp,DWORD PTR [rbx+0x4]
   14001a8ce:	jle    0x14001a91a
   14001a8d0:	cmp    ebp,DWORD PTR [rbx+0x8]
   14001a8d3:	jg     0x14001a91a
   14001a8d5:	mov    rcx,QWORD PTR [r13+0x0]
   14001a8d9:	lea    rdx,[rsp+0x50]
   14001a8de:	xor    r8d,r8d
   14001a8e1:	call   0x14002fe56
   14001a8e6:	movsxd r10,DWORD PTR [rbx+0x10]
   14001a8ea:	mov    r8d,DWORD PTR [rbx+0xc]
   14001a8ee:	add    r10,QWORD PTR [rsp+0x50]
   14001a8f3:	mov    r9d,DWORD PTR [rax]
   14001a8f6:	xor    edx,edx
   14001a8f8:	test   r8d,r8d
   14001a8fb:	je     0x14001a915
   14001a8fd:	lea    rcx,[r10+0xc]
   14001a901:	movsxd rax,DWORD PTR [rcx]
   14001a904:	cmp    rax,r9
   14001a907:	je     0x14001a915
   14001a909:	add    edx,0x1
   14001a90c:	add    rcx,0x14
   14001a910:	cmp    edx,r8d
   14001a913:	jb     0x14001a901
   14001a915:	cmp    edx,r8d
   14001a918:	jb     0x14001a925
   14001a91a:	sub    rsi,0x14
   14001a91e:	add    edi,0xffffffff
   14001a921:	jne    0x14001a8c0
   14001a923:	jmp    0x14001a939
   14001a925:	mov    rax,QWORD PTR [r15]
   14001a928:	lea    rcx,[rdx+rdx*4]
   14001a92c:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14001a931:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001a935:	mov    QWORD PTR [r12],rcx
   14001a939:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a93e:	mov    rsi,QWORD PTR [rsp+0x60]
   14001a943:	mov    rax,r12
   14001a946:	mov    rbp,QWORD PTR [rsp+0x68]
   14001a94b:	add    rsp,0x20
   14001a94f:	pop    r15
   14001a951:	pop    r14
   14001a953:	pop    r13
   14001a955:	pop    r12
   14001a957:	pop    rdi
   14001a958:	ret    
   14001a959:	mov    rax,r12
   14001a95c:	mov    rbp,QWORD PTR [rsp+0x68]
   14001a961:	add    rsp,0x20
   14001a965:	pop    r15
   14001a967:	pop    r14
   14001a969:	pop    r13
   14001a96b:	pop    r12
   14001a96d:	pop    rdi
   14001a96e:	ret    
   14001a96f:	int3   
   14001a970:	sub    rsp,0x28
   14001a974:	call   0x14001d930
   14001a979:	mov    rax,QWORD PTR [rax+0x128]
   14001a980:	add    rsp,0x28
   14001a984:	ret    
   14001a985:	int3   
   14001a986:	int3   
   14001a987:	int3   
   14001a988:	int3   
   14001a989:	int3   
   14001a98a:	int3   
   14001a98b:	int3   
   14001a98c:	int3   
   14001a98d:	int3   
   14001a98e:	int3   
   14001a98f:	int3   
   14001a990:	sub    rsp,0x28
   14001a994:	call   0x14001d930
   14001a999:	mov    rax,QWORD PTR [rax+0x130]
   14001a9a0:	add    rsp,0x28
   14001a9a4:	ret    
   14001a9a5:	int3   
   14001a9a6:	int3   
   14001a9a7:	int3   
   14001a9a8:	int3   
   14001a9a9:	int3   
   14001a9aa:	int3   
   14001a9ab:	int3   
   14001a9ac:	int3   
   14001a9ad:	int3   
   14001a9ae:	int3   
   14001a9af:	int3   
   14001a9b0:	rex push rbx
   14001a9b2:	sub    rsp,0x20
   14001a9b6:	mov    rbx,rcx
   14001a9b9:	call   0x14001d930
   14001a9be:	mov    QWORD PTR [rax+0x128],rbx
   14001a9c5:	add    rsp,0x20
   14001a9c9:	pop    rbx
   14001a9ca:	ret    
   14001a9cb:	int3   
   14001a9cc:	int3   
   14001a9cd:	int3   
   14001a9ce:	int3   
   14001a9cf:	int3   
   14001a9d0:	rex push rbx
   14001a9d2:	sub    rsp,0x20
   14001a9d6:	mov    rbx,rcx
   14001a9d9:	call   0x14001d930
   14001a9de:	mov    QWORD PTR [rax+0x130],rbx
   14001a9e5:	add    rsp,0x20
   14001a9e9:	pop    rbx
   14001a9ea:	ret    
   14001a9eb:	int3   
   14001a9ec:	int3   
   14001a9ed:	int3   
   14001a9ee:	int3   
   14001a9ef:	int3   
   14001a9f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a9f5:	mov    QWORD PTR [rsp+0x20],rbp
   14001a9fa:	push   rsi
   14001a9fb:	push   rdi
   14001a9fc:	push   r12
   14001a9fe:	push   r13
   14001aa00:	push   r14
   14001aa02:	sub    rsp,0x20
   14001aa06:	movsxd rdi,DWORD PTR [r8+0xc]
   14001aa0a:	mov    r14,rcx
   14001aa0d:	mov    rcx,r8
   14001aa10:	mov    rbp,r8
   14001aa13:	mov    r13,rdx
   14001aa16:	call   0x140022490
   14001aa1b:	test   edi,edi
   14001aa1d:	mov    r9,QWORD PTR [r14]
   14001aa20:	mov    r12d,eax
   14001aa23:	mov    QWORD PTR [rsp+0x50],r9
   14001aa28:	je     0x14001aabc
   14001aa2e:	lea    rcx,[rdi+rdi*4]
   14001aa32:	lea    rsi,[rcx*4-0x14]
   14001aa3a:	data16 xchg ax,ax
   14001aa3d:	data16 xchg ax,ax
   14001aa40:	movsxd rbx,DWORD PTR [rbp+0x10]
   14001aa44:	add    rbx,QWORD PTR [r13+0x8]
   14001aa48:	add    rbx,rsi
   14001aa4b:	cmp    r12d,DWORD PTR [rbx+0x4]
   14001aa4f:	jle    0x14001aa9c
   14001aa51:	cmp    r12d,DWORD PTR [rbx+0x8]
   14001aa55:	jg     0x14001aa9c
   14001aa57:	mov    rcx,QWORD PTR [r13+0x0]
   14001aa5b:	lea    rdx,[rsp+0x60]
   14001aa60:	xor    r8d,r8d
   14001aa63:	call   0x14002fe56
   14001aa68:	movsxd r10,DWORD PTR [rbx+0x10]
   14001aa6c:	mov    r8d,DWORD PTR [rbx+0xc]
   14001aa70:	add    r10,QWORD PTR [rsp+0x60]
   14001aa75:	mov    r9d,DWORD PTR [rax]
   14001aa78:	xor    edx,edx
   14001aa7a:	test   r8d,r8d
   14001aa7d:	je     0x14001aa97
   14001aa7f:	lea    rcx,[r10+0xc]
   14001aa83:	movsxd rax,DWORD PTR [rcx]
   14001aa86:	cmp    rax,r9
   14001aa89:	je     0x14001aa97
   14001aa8b:	add    edx,0x1
   14001aa8e:	add    rcx,0x14
   14001aa92:	cmp    edx,r8d
   14001aa95:	jb     0x14001aa83
   14001aa97:	cmp    edx,r8d
   14001aa9a:	jb     0x14001aaa7
   14001aa9c:	sub    rsi,0x14
   14001aaa0:	add    edi,0xffffffff
   14001aaa3:	jne    0x14001aa40
   14001aaa5:	jmp    0x14001aabc
   14001aaa7:	mov    rax,QWORD PTR [r14]
   14001aaaa:	lea    rcx,[rdx+rdx*4]
   14001aaae:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14001aab3:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001aab7:	mov    QWORD PTR [rsp+0x50],rcx
   14001aabc:	mov    rdx,r13
   14001aabf:	mov    rcx,rbp
   14001aac2:	call   0x140022490
   14001aac7:	movsxd rbx,DWORD PTR [rbp+0xc]
   14001aacb:	test   ebx,ebx
   14001aacd:	mov    esi,eax
   14001aacf:	je     0x14001ab08
   14001aad1:	lea    rcx,[rbx+rbx*4]
   14001aad5:	lea    rdi,[rcx*4-0x14]
   14001aadd:	data16 xchg ax,ax
   14001aae0:	call   0x14001d930
   14001aae5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001aae9:	mov    rdx,QWORD PTR [rax+0x128]
   14001aaf0:	add    rdx,rcx
   14001aaf3:	cmp    esi,DWORD PTR [rdx+rdi*1+0x4]
   14001aaf7:	jle    0x14001aaff
   14001aaf9:	cmp    esi,DWORD PTR [rdx+rdi*1+0x8]
   14001aafd:	jle    0x14001ab33
   14001aaff:	sub    rdi,0x14
   14001ab03:	add    ebx,0xffffffff
   14001ab06:	jne    0x14001aae0
   14001ab08:	or     r9d,0xffffffff
   14001ab0c:	lea    rcx,[rsp+0x50]
   14001ab11:	mov    r8,rbp
   14001ab14:	mov    rdx,r13
   14001ab17:	call   0x1400226e0
   14001ab1c:	mov    rbx,QWORD PTR [rsp+0x58]
   14001ab21:	mov    rbp,QWORD PTR [rsp+0x68]
   14001ab26:	add    rsp,0x20
   14001ab2a:	pop    r14
   14001ab2c:	pop    r13
   14001ab2e:	pop    r12
   14001ab30:	pop    rdi
   14001ab31:	pop    rsi
   14001ab32:	ret    
   14001ab33:	mov    r9d,DWORD PTR [rdx+rdi*1+0x4]
   14001ab38:	jmp    0x14001ab0c
   14001ab3a:	int3   
   14001ab3b:	int3   
   14001ab3c:	int3   
   14001ab3d:	int3   
   14001ab3e:	int3   
   14001ab3f:	int3   
   14001ab40:	mov    QWORD PTR [rsp+0x10],rbx
   14001ab45:	mov    QWORD PTR [rsp+0x18],rsi
   14001ab4a:	push   rdi
   14001ab4b:	sub    rsp,0x40
   14001ab4f:	mov    rbx,r9
   14001ab52:	mov    rdi,r8
   14001ab55:	mov    rsi,rcx
   14001ab58:	mov    QWORD PTR [rsp+0x50],rdx
   14001ab5d:	call   0x14001d930
   14001ab62:	mov    rdx,QWORD PTR [rbx+0x8]
   14001ab66:	mov    QWORD PTR [rax+0x128],rdx
   14001ab6d:	call   0x14001d930
   14001ab72:	mov    rdx,QWORD PTR [rsi+0x38]
   14001ab76:	mov    QWORD PTR [rax+0x130],rdx
   14001ab7d:	call   0x14001d930
   14001ab82:	mov    rdx,QWORD PTR [rbx+0x38]
   14001ab86:	mov    r8d,DWORD PTR [rdx]
   14001ab89:	lea    rdx,[rsp+0x50]
   14001ab8e:	mov    r9,rbx
   14001ab91:	add    r8,QWORD PTR [rax+0x128]
   14001ab98:	xor    eax,eax
   14001ab9a:	mov    rcx,rsi
   14001ab9d:	mov    DWORD PTR [rsp+0x38],eax
   14001aba1:	mov    QWORD PTR [rsp+0x30],rax
   14001aba6:	mov    DWORD PTR [rsp+0x28],eax
   14001abaa:	mov    QWORD PTR [rsp+0x20],r8
   14001abaf:	mov    r8,rdi
   14001abb2:	call   0x140023be0
   14001abb7:	mov    rbx,QWORD PTR [rsp+0x58]
   14001abbc:	mov    rsi,QWORD PTR [rsp+0x60]
   14001abc1:	add    rsp,0x40
   14001abc5:	pop    rdi
   14001abc6:	ret    
   14001abc7:	int3   
   14001abc8:	int3   
   14001abc9:	int3   
   14001abca:	int3   
   14001abcb:	int3   
   14001abcc:	int3   
   14001abcd:	int3   
   14001abce:	int3   
   14001abcf:	int3   
   14001abd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001abd5:	mov    QWORD PTR [rsp+0x10],rbp
   14001abda:	mov    QWORD PTR [rsp+0x18],rsi
   14001abdf:	push   rdi
   14001abe0:	sub    rsp,0x40
   14001abe4:	mov    rsi,r9
   14001abe7:	mov    rbp,r8
   14001abea:	mov    rbx,rdx
   14001abed:	mov    rdi,rcx
   14001abf0:	call   0x14001d930
   14001abf5:	mov    QWORD PTR [rax+0x138],rbx
   14001abfc:	mov    rbx,QWORD PTR [rdi]
   14001abff:	call   0x14001d930
   14001ac04:	mov    rdx,QWORD PTR [rbx+0x38]
   14001ac08:	mov    rcx,QWORD PTR [rsp+0x78]
   14001ac0d:	mov    r9,QWORD PTR [rsp+0x70]
   14001ac12:	mov    DWORD PTR [rsp+0x38],0x1
   14001ac1a:	mov    QWORD PTR [rax+0x130],rdx
   14001ac21:	xor    ebx,ebx
   14001ac23:	mov    QWORD PTR [rsp+0x30],rbx
   14001ac28:	mov    DWORD PTR [rsp+0x28],ebx
   14001ac2c:	mov    QWORD PTR [rsp+0x20],rcx
   14001ac31:	mov    rcx,QWORD PTR [rdi]
   14001ac34:	mov    r8,rsi
   14001ac37:	mov    rdx,rbp
   14001ac3a:	call   0x140023be0
   14001ac3f:	call   0x14001d930
   14001ac44:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ac4c:	mov    rbp,QWORD PTR [rsp+0x58]
   14001ac51:	mov    rsi,QWORD PTR [rsp+0x60]
   14001ac56:	mov    QWORD PTR [rax+0x138],rbx
   14001ac5d:	lea    eax,[rbx+0x1]
   14001ac60:	mov    rbx,QWORD PTR [rsp+0x50]
   14001ac65:	mov    DWORD PTR [rcx],0x1
   14001ac6b:	add    rsp,0x40
   14001ac6f:	pop    rdi
   14001ac70:	ret    
   14001ac71:	int3   
   14001ac72:	int3   
   14001ac73:	int3   
   14001ac74:	int3   
   14001ac75:	int3   
   14001ac76:	int3   
   14001ac77:	int3   
   14001ac78:	int3   
   14001ac79:	int3   
   14001ac7a:	int3   
   14001ac7b:	int3   
   14001ac7c:	int3   
   14001ac7d:	int3   
   14001ac7e:	int3   
   14001ac7f:	int3   
   14001ac80:	mov    rax,rsp
   14001ac83:	mov    QWORD PTR [rax+0x20],r9
   14001ac87:	mov    QWORD PTR [rax+0x18],r8
   14001ac8b:	mov    QWORD PTR [rax+0x10],rdx
   14001ac8f:	mov    QWORD PTR [rax+0x8],rcx
   14001ac93:	push   rbx
   14001ac94:	sub    rsp,0x60
   14001ac98:	mov    rbx,rcx
   14001ac9b:	mov    DWORD PTR [rax-0x28],0x0
   14001aca2:	mov    QWORD PTR [rax-0x20],rcx
   14001aca6:	mov    QWORD PTR [rax-0x18],r8
   14001acaa:	call   0x14001d930
   14001acaf:	mov    r8,QWORD PTR [rax+0xe0]
   14001acb6:	lea    rdx,[rsp+0x48]
   14001acbb:	mov    ecx,DWORD PTR [rbx]
   14001acbd:	call   r8
   14001acc0:	mov    DWORD PTR [rsp+0x40],0x0
   14001acc8:	jmp    0x14001acca
   14001acca:	mov    eax,DWORD PTR [rsp+0x40]
   14001acce:	add    rsp,0x60
   14001acd2:	pop    rbx
   14001acd3:	ret    
   14001acd4:	int3   
   14001acd5:	int3   
   14001acd6:	int3   
   14001acd7:	int3   
   14001acd8:	int3   
   14001acd9:	int3   
   14001acda:	int3   
   14001acdb:	int3   
   14001acdc:	int3   
   14001acdd:	int3   
   14001acde:	int3   
   14001acdf:	int3   
   14001ace0:	rex push rbp
   14001ace2:	sub    rsp,0x40
   14001ace6:	mov    rbp,rdx
   14001ace9:	lea    rax,[rbp+0x40]
   14001aced:	mov    QWORD PTR [rsp+0x30],rax
   14001acf2:	mov    rax,QWORD PTR [rbp+0x90]
   14001acf9:	mov    QWORD PTR [rsp+0x28],rax
   14001acfe:	mov    rax,QWORD PTR [rbp+0x88]
   14001ad05:	mov    QWORD PTR [rsp+0x20],rax
   14001ad0a:	mov    r9,QWORD PTR [rbp+0x80]
   14001ad11:	mov    r8,QWORD PTR [rbp+0x78]
   14001ad15:	mov    rdx,QWORD PTR [rbp+0x70]
   14001ad19:	call   0x14001abd0
   14001ad1e:	add    rsp,0x40
   14001ad22:	pop    rbp
   14001ad23:	ret    
   14001ad24:	int3   
   14001ad25:	int3   
   14001ad26:	int3   
   14001ad27:	int3   
   14001ad28:	int3   
   14001ad29:	int3   
   14001ad2a:	int3   
   14001ad2b:	int3   
   14001ad2c:	int3   
   14001ad2d:	int3   
   14001ad2e:	int3   
   14001ad2f:	int3   
   14001ad30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad35:	mov    QWORD PTR [rsp+0x10],rbp
   14001ad3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ad3f:	push   rdi
   14001ad40:	push   r12
   14001ad42:	push   r13
   14001ad44:	sub    rsp,0x20
   14001ad48:	movsxd rsi,DWORD PTR [rdx+0xc]
   14001ad4c:	mov    r13,QWORD PTR [rsp+0x70]
   14001ad51:	mov    r12,rdx
   14001ad54:	mov    rcx,r12
   14001ad57:	mov    rdx,r13
   14001ad5a:	mov    ebp,r9d
   14001ad5d:	xor    edi,edi
   14001ad5f:	call   0x140022490
   14001ad64:	test   esi,esi
   14001ad66:	mov    ebx,eax
   14001ad68:	jne    0x14001ad6f
   14001ad6a:	call   0x140021d00
   14001ad6f:	test   esi,esi
   14001ad71:	mov    r10,QWORD PTR [rsp+0x68]
   14001ad76:	mov    r9,QWORD PTR [rsp+0x60]
   14001ad7b:	mov    DWORD PTR [r10],0xffffffff
   14001ad82:	mov    DWORD PTR [r9],0xffffffff
   14001ad89:	mov    r8d,esi
   14001ad8c:	je     0x14001adb7
   14001ad8e:	movsxd rcx,DWORD PTR [r12+0x10]
   14001ad93:	lea    rax,[rsi+rsi*4]
   14001ad97:	lea    rcx,[rcx+rax*4]
   14001ad9b:	mov    rax,QWORD PTR [r13+0x8]
   14001ad9f:	lea    rdx,[rcx+rax*1-0xc]
   14001ada4:	cmp    ebx,DWORD PTR [rdx-0x4]
   14001ada7:	jle    0x14001adad
   14001ada9:	cmp    ebx,DWORD PTR [rdx]
   14001adab:	jle    0x14001adb7
   14001adad:	sub    rdx,0x14
   14001adb1:	add    r8d,0xffffffff
   14001adb5:	jne    0x14001ada4
   14001adb7:	test   r8d,r8d
   14001adba:	je     0x14001add1
   14001adbc:	lea    eax,[r8-0x1]
   14001adc0:	lea    rdx,[rax+rax*4]
   14001adc4:	movsxd rax,DWORD PTR [r12+0x10]
   14001adc9:	lea    rdi,[rax+rdx*4]
   14001adcd:	add    rdi,QWORD PTR [r13+0x8]
   14001add1:	xor    edx,edx
   14001add3:	test   esi,esi
   14001add5:	je     0x14001ae3e
   14001add7:	xor    r8d,r8d
   14001adda:	data16 xchg ax,ax
   14001addd:	data16 xchg ax,ax
   14001ade0:	movsxd rcx,DWORD PTR [r12+0x10]
   14001ade5:	add    rcx,QWORD PTR [r13+0x8]
   14001ade9:	add    rcx,r8
   14001adec:	test   rdi,rdi
   14001adef:	je     0x14001ae00
   14001adf1:	mov    eax,DWORD PTR [rdi+0x4]
   14001adf4:	cmp    DWORD PTR [rcx],eax
   14001adf6:	jle    0x14001ae18
   14001adf8:	mov    eax,DWORD PTR [rdi+0x8]
   14001adfb:	cmp    DWORD PTR [rcx+0x4],eax
   14001adfe:	jg     0x14001ae18
   14001ae00:	cmp    ebp,DWORD PTR [rcx]
   14001ae02:	jl     0x14001ae18
   14001ae04:	cmp    ebp,DWORD PTR [rcx+0x4]
   14001ae07:	jg     0x14001ae18
   14001ae09:	cmp    DWORD PTR [r9],0xffffffff
   14001ae0d:	jne    0x14001ae12
   14001ae0f:	mov    DWORD PTR [r9],edx
   14001ae12:	lea    eax,[rdx+0x1]
   14001ae15:	mov    DWORD PTR [r10],eax
   14001ae18:	add    edx,0x1
   14001ae1b:	add    r8,0x14
   14001ae1f:	cmp    edx,esi
   14001ae21:	jb     0x14001ade0
   14001ae23:	mov    eax,DWORD PTR [r9]
   14001ae26:	cmp    eax,0xffffffff
   14001ae29:	je     0x14001ae3e
   14001ae2b:	lea    rcx,[rax+rax*4]
   14001ae2f:	movsxd rax,DWORD PTR [r12+0x10]
   14001ae34:	lea    rax,[rax+rcx*4]
   14001ae38:	add    rax,QWORD PTR [r13+0x8]
   14001ae3c:	jmp    0x14001ae4e
   14001ae3e:	mov    DWORD PTR [r9],0x0
   14001ae45:	xor    eax,eax
   14001ae47:	mov    DWORD PTR [r10],0x0
   14001ae4e:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ae53:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ae58:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ae5d:	add    rsp,0x20
   14001ae61:	pop    r13
   14001ae63:	pop    r12
   14001ae65:	pop    rdi
   14001ae66:	ret    
   14001ae67:	int3   
   14001ae68:	int3   
   14001ae69:	int3   
   14001ae6a:	int3   
   14001ae6b:	int3   
   14001ae6c:	int3   
   14001ae6d:	int3   
   14001ae6e:	int3   
   14001ae6f:	int3   
   14001ae70:	rex push rbx
   14001ae72:	sub    rsp,0x20
   14001ae76:	mov    rbx,rcx
   14001ae79:	mov    QWORD PTR [rcx],rdx
   14001ae7c:	call   0x14001d930
   14001ae81:	cmp    rbx,QWORD PTR [rax+0x120]
   14001ae88:	jae    0x14001ae98
   14001ae8a:	call   0x14001d930
   14001ae8f:	mov    rcx,QWORD PTR [rax+0x120]
   14001ae96:	jmp    0x14001ae9a
   14001ae98:	xor    ecx,ecx
   14001ae9a:	mov    QWORD PTR [rbx+0x8],rcx
   14001ae9e:	call   0x14001d930
   14001aea3:	mov    QWORD PTR [rax+0x120],rbx
   14001aeaa:	mov    rax,rbx
   14001aead:	add    rsp,0x20
   14001aeb1:	pop    rbx
   14001aeb2:	ret    
   14001aeb3:	int3   
   14001aeb4:	int3   
   14001aeb5:	int3   
   14001aeb6:	int3   
   14001aeb7:	int3   
   14001aeb8:	int3   
   14001aeb9:	int3   
   14001aeba:	int3   
   14001aebb:	int3   
   14001aebc:	int3   
   14001aebd:	int3   
   14001aebe:	int3   
   14001aebf:	int3   
   14001aec0:	rex push rbx
   14001aec2:	sub    rsp,0x20
   14001aec6:	mov    rbx,rcx
   14001aec9:	call   0x14001d930
   14001aece:	mov    rdx,QWORD PTR [rax+0x120]
   14001aed5:	test   rdx,rdx
   14001aed8:	je     0x14001aeee
   14001aeda:	data16 xchg ax,ax
   14001aedd:	data16 xchg ax,ax
   14001aee0:	cmp    QWORD PTR [rdx],rbx
   14001aee3:	je     0x14001aef9
   14001aee5:	mov    rdx,QWORD PTR [rdx+0x8]
   14001aee9:	test   rdx,rdx
   14001aeec:	jne    0x14001aee0
   14001aeee:	mov    eax,0x1
   14001aef3:	add    rsp,0x20
   14001aef7:	pop    rbx
   14001aef8:	ret    
   14001aef9:	xor    eax,eax
   14001aefb:	add    rsp,0x20
   14001aeff:	pop    rbx
   14001af00:	ret    
   14001af01:	int3   
   14001af02:	int3   
   14001af03:	int3   
   14001af04:	int3   
   14001af05:	int3   
   14001af06:	int3   
   14001af07:	int3   
   14001af08:	int3   
   14001af09:	int3   
   14001af0a:	int3   
   14001af0b:	int3   
   14001af0c:	int3   
   14001af0d:	int3   
   14001af0e:	int3   
   14001af0f:	int3   
   14001af10:	mov    QWORD PTR [rsp+0x8],rbx
   14001af15:	push   rdi
   14001af16:	sub    rsp,0x20
   14001af1a:	mov    rdi,rcx
   14001af1d:	call   0x14001d930
   14001af22:	cmp    rdi,QWORD PTR [rax+0x120]
   14001af29:	je     0x14001af30
   14001af2b:	call   0x140021d00
   14001af30:	call   0x14001d930
   14001af35:	mov    rbx,QWORD PTR [rax+0x120]
   14001af3c:	test   rbx,rbx
   14001af3f:	je     0x14001af4f
   14001af41:	cmp    rdi,rbx
   14001af44:	je     0x14001af5e
   14001af46:	mov    rbx,QWORD PTR [rbx+0x8]
   14001af4a:	test   rbx,rbx
   14001af4d:	jne    0x14001af41
   14001af4f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001af54:	add    rsp,0x20
   14001af58:	pop    rdi
   14001af59:	jmp    0x140021d00
   14001af5e:	call   0x14001d930
   14001af63:	mov    rcx,QWORD PTR [rbx+0x8]
   14001af67:	mov    rbx,QWORD PTR [rsp+0x30]
   14001af6c:	mov    QWORD PTR [rax+0x120],rcx
   14001af73:	add    rsp,0x20
   14001af77:	pop    rdi
   14001af78:	ret    
   14001af79:	int3   
   14001af7a:	int3   
   14001af7b:	int3   
   14001af7c:	int3   
   14001af7d:	int3   
   14001af7e:	int3   
   14001af7f:	int3   
   14001af80:	mov    QWORD PTR [rsp+0x8],rbx
   14001af85:	mov    QWORD PTR [rsp+0x10],rbp
   14001af8a:	mov    QWORD PTR [rsp+0x18],rsi
   14001af8f:	push   rdi
   14001af90:	sub    rsp,0x5a0
   14001af97:	mov    rsi,rdx
   14001af9a:	mov    rbp,rcx
   14001af9d:	mov    rdi,r8
   14001afa0:	lea    rcx,[rsp+0x30]
   14001afa5:	lea    rdx,[rip+0x19a34]        # 0x1400349e0
   14001afac:	mov    r8d,0x98
   14001afb2:	mov    rbx,r9
   14001afb5:	call   0x14001baf0
   14001afba:	mov    rax,QWORD PTR [rsp+0x5d0]
   14001afc2:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14001afca:	mov    rcx,QWORD PTR [rbp+0x0]
   14001afce:	mov    QWORD PTR [rsp+0x60],rax
   14001afd3:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14001afdb:	lea    r11,[rip+0x7d1e]        # 0x140022d00
   14001afe2:	lea    r8,[rsp+0x30]
   14001afe7:	mov    QWORD PTR [rsp+0x68],rax
   14001afec:	mov    rax,QWORD PTR [rsp+0x5e0]
   14001aff4:	xor    r9d,r9d
   14001aff7:	mov    QWORD PTR [rsp+0x78],rax
   14001affc:	movzx  eax,BYTE PTR [rsp+0x5f0]
   14001b004:	mov    QWORD PTR [rsp+0x50],r11
   14001b009:	mov    QWORD PTR [rsp+0x88],rax
   14001b011:	mov    rax,QWORD PTR [rdx+0x40]
   14001b015:	mov    rdx,QWORD PTR [rdx]
   14001b018:	mov    QWORD PTR [rsp+0x28],rax
   14001b01d:	lea    rax,[rsp+0xd0]
   14001b025:	mov    QWORD PTR [rsp+0x58],rbx
   14001b02a:	mov    QWORD PTR [rsp+0x70],rdi
   14001b02f:	mov    QWORD PTR [rsp+0x80],rsi
   14001b037:	mov    QWORD PTR [rsp+0x90],0x19930520
   14001b043:	mov    QWORD PTR [rsp+0x20],rax
   14001b048:	call   0x14002fe5c
   14001b04d:	lea    r11,[rsp+0x5a0]
   14001b055:	mov    rbx,QWORD PTR [r11+0x10]
   14001b059:	mov    rbp,QWORD PTR [r11+0x18]
   14001b05d:	mov    rsi,QWORD PTR [r11+0x20]
   14001b061:	mov    rsp,r11
   14001b064:	pop    rdi
   14001b065:	ret    
   14001b066:	int3   
   14001b067:	int3   
   14001b068:	int3   
   14001b069:	int3   
   14001b06a:	int3   
   14001b06b:	int3   
   14001b06c:	int3   
   14001b06d:	int3   
   14001b06e:	int3   
   14001b06f:	int3   
   14001b070:	rex push rbx
   14001b072:	sub    rsp,0x60
   14001b076:	mov    rax,QWORD PTR [rip+0x19a03]        # 0x140034a80
   14001b07d:	mov    rbx,rdx
   14001b080:	lea    rdx,[rsp+0x20]
   14001b085:	mov    QWORD PTR [rdx],rax
   14001b088:	mov    rax,QWORD PTR [rip+0x199f9]        # 0x140034a88
   14001b08f:	mov    QWORD PTR [rdx+0x8],rax
   14001b093:	mov    rax,QWORD PTR [rip+0x199f6]        # 0x140034a90
   14001b09a:	mov    QWORD PTR [rdx+0x10],rax
   14001b09e:	mov    rax,QWORD PTR [rip+0x199f3]        # 0x140034a98
   14001b0a5:	mov    QWORD PTR [rdx+0x18],rax
   14001b0a9:	mov    rax,QWORD PTR [rip+0x199f0]        # 0x140034aa0
   14001b0b0:	mov    QWORD PTR [rdx+0x20],rax
   14001b0b4:	mov    rax,QWORD PTR [rip+0x199ed]        # 0x140034aa8
   14001b0bb:	mov    QWORD PTR [rdx+0x28],rax
   14001b0bf:	mov    rax,QWORD PTR [rip+0x199ea]        # 0x140034ab0
   14001b0c6:	mov    QWORD PTR [rdx+0x30],rax
   14001b0ca:	mov    rax,QWORD PTR [rip+0x199e7]        # 0x140034ab8
   14001b0d1:	mov    QWORD PTR [rdx+0x38],rax
   14001b0d5:	mov    QWORD PTR [rsp+0x48],rcx
   14001b0da:	lea    rdx,[rsp+0x70]
   14001b0df:	mov    rcx,rbx
   14001b0e2:	mov    QWORD PTR [rsp+0x50],rbx
   14001b0e7:	call   0x14002fe62
   14001b0ec:	test   rbx,rbx
   14001b0ef:	mov    r11,rax
   14001b0f2:	mov    QWORD PTR [rsp+0x70],rax
   14001b0f7:	mov    QWORD PTR [rsp+0x58],rax
   14001b0fc:	je     0x14001b11c
   14001b0fe:	test   BYTE PTR [rbx],0x8
   14001b101:	mov    ecx,0x1994000
   14001b106:	je     0x14001b10e
   14001b108:	mov    DWORD PTR [rsp+0x40],ecx
   14001b10c:	jmp    0x14001b11c
   14001b10e:	mov    eax,DWORD PTR [rsp+0x40]
   14001b112:	test   r11,r11
   14001b115:	cmove  eax,ecx
   14001b118:	mov    DWORD PTR [rsp+0x40],eax
   14001b11c:	mov    r8d,DWORD PTR [rsp+0x38]
   14001b121:	mov    edx,DWORD PTR [rsp+0x24]
   14001b125:	mov    ecx,DWORD PTR [rsp+0x20]
   14001b129:	lea    r9,[rsp+0x40]
   14001b12e:	call   QWORD PTR [rip+0x1600c]        # 0x140031140
   14001b134:	add    rsp,0x60
   14001b138:	pop    rbx
   14001b139:	ret    
   14001b13a:	int3   
   14001b13b:	int3   
   14001b13c:	int3   
   14001b13d:	int3   
   14001b13e:	int3   
   14001b13f:	int3   
   14001b140:	mov    QWORD PTR [rsp+0x8],rbx
   14001b145:	mov    QWORD PTR [rsp+0x10],rbp
   14001b14a:	mov    QWORD PTR [rsp+0x18],rsi
   14001b14f:	mov    QWORD PTR [rsp+0x20],rdi
   14001b154:	push   r12
   14001b156:	sub    rsp,0x20
   14001b15a:	mov    rbx,QWORD PTR [r9+0x38]
   14001b15e:	mov    rsi,rdx
   14001b161:	mov    r12,r8
   14001b164:	mov    rbp,rcx
   14001b167:	lea    r8,[rbx+0x4]
   14001b16b:	mov    rdx,r9
   14001b16e:	mov    rcx,rsi
   14001b171:	mov    rdi,r9
   14001b174:	call   0x14001a590
   14001b179:	test   BYTE PTR [rbp+0x4],0x66
   14001b17d:	mov    r11d,DWORD PTR [rbx+0x4]
   14001b181:	jne    0x14001b189
   14001b183:	and    r11d,0x1
   14001b187:	jmp    0x14001b18d
   14001b189:	and    r11d,0x2
   14001b18d:	test   r11d,r11d
   14001b190:	je     0x14001b1a5
   14001b192:	mov    r9,rdi
   14001b195:	mov    r8,r12
   14001b198:	mov    rdx,rsi
   14001b19b:	mov    rcx,rbp
   14001b19e:	call   0x14001ab40
   14001b1a3:	jmp    0x14001b1aa
   14001b1a5:	mov    eax,0x1
   14001b1aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b1af:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b1b4:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b1b9:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b1be:	add    rsp,0x20
   14001b1c2:	pop    r12
   14001b1c4:	ret    
   14001b1c5:	int3   
   14001b1c6:	int3   
   14001b1c7:	int3   
   14001b1c8:	int3   
   14001b1c9:	int3   
   14001b1ca:	int3   
   14001b1cb:	int3   
   14001b1cc:	int3   
   14001b1cd:	int3   
   14001b1ce:	int3   
   14001b1cf:	int3   
   14001b1d0:	mov    QWORD PTR [rsp+0x18],r8
   14001b1d5:	mov    QWORD PTR [rsp+0x20],r9
   14001b1da:	sub    rsp,0x38
   14001b1de:	lea    rax,[rsp+0x58]
   14001b1e3:	xor    r9d,r9d
   14001b1e6:	mov    QWORD PTR [rsp+0x20],rax
   14001b1eb:	call   0x140019550
   14001b1f0:	add    rsp,0x38
   14001b1f4:	ret    
   14001b1f5:	int3   
   14001b1f6:	int3   
   14001b1f7:	int3   
   14001b1f8:	int3   
   14001b1f9:	int3   
   14001b1fa:	int3   
   14001b1fb:	int3   
   14001b1fc:	int3   
   14001b1fd:	int3   
   14001b1fe:	int3   
   14001b1ff:	int3   
   14001b200:	mov    QWORD PTR [rsp+0x20],r9
   14001b205:	sub    rsp,0x38
   14001b209:	lea    rax,[rsp+0x60]
   14001b20e:	mov    QWORD PTR [rsp+0x28],rax
   14001b213:	mov    QWORD PTR [rsp+0x20],0x0
   14001b21c:	call   0x140019670
   14001b221:	add    rsp,0x38
   14001b225:	ret    
   14001b226:	int3   
   14001b227:	int3   
   14001b228:	int3   
   14001b229:	int3   
   14001b22a:	int3   
   14001b22b:	int3   
   14001b22c:	int3   
   14001b22d:	int3   
   14001b22e:	int3   
   14001b22f:	int3   
   14001b230:	lea    r8,[rip+0x24da9]        # 0x14003ffe0
   14001b237:	xor    edx,edx
   14001b239:	mov    rax,r8
   14001b23c:	data16 data16 xchg ax,ax
   14001b240:	cmp    ecx,DWORD PTR [rax]
   14001b242:	je     0x14001b275
   14001b244:	add    edx,0x1
   14001b247:	add    rax,0x8
   14001b24b:	cmp    edx,0x2d
   14001b24e:	jb     0x14001b240
   14001b250:	lea    eax,[rcx-0x13]
   14001b253:	cmp    eax,0x11
   14001b256:	ja     0x14001b25e
   14001b258:	mov    eax,0xd
   14001b25d:	ret    
   14001b25e:	add    ecx,0xffffff44
   14001b264:	mov    eax,0x16
   14001b269:	mov    edx,0x8
   14001b26e:	cmp    ecx,0xe
   14001b271:	cmovbe eax,edx
   14001b274:	ret    
   14001b275:	movsxd rax,edx
   14001b278:	mov    eax,DWORD PTR [r8+rax*8+0x4]
   14001b27d:	ret    
   14001b27e:	int3   
   14001b27f:	int3   
   14001b280:	sub    rsp,0x28
   14001b284:	call   0x14001d8a0
   14001b289:	test   rax,rax
   14001b28c:	jne    0x14001b29a
   14001b28e:	lea    rax,[rip+0x24eb3]        # 0x140040148
   14001b295:	add    rsp,0x28
   14001b299:	ret    
   14001b29a:	add    rax,0x10
   14001b29e:	add    rsp,0x28
   14001b2a2:	ret    
   14001b2a3:	int3   
   14001b2a4:	int3   
   14001b2a5:	int3   
   14001b2a6:	int3   
   14001b2a7:	int3   
   14001b2a8:	int3   
   14001b2a9:	int3   
   14001b2aa:	int3   
   14001b2ab:	int3   
   14001b2ac:	int3   
   14001b2ad:	int3   
   14001b2ae:	int3   
   14001b2af:	int3   
   14001b2b0:	sub    rsp,0x28
   14001b2b4:	call   0x14001d8a0
   14001b2b9:	test   rax,rax
   14001b2bc:	jne    0x14001b2ca
   14001b2be:	lea    rax,[rip+0x24e87]        # 0x14004014c
   14001b2c5:	add    rsp,0x28
   14001b2c9:	ret    
   14001b2ca:	add    rax,0x14
   14001b2ce:	add    rsp,0x28
   14001b2d2:	ret    
   14001b2d3:	int3   
   14001b2d4:	int3   
   14001b2d5:	int3   
   14001b2d6:	int3   
   14001b2d7:	int3   
   14001b2d8:	int3   
   14001b2d9:	int3   
   14001b2da:	int3   
   14001b2db:	int3   
   14001b2dc:	int3   
   14001b2dd:	int3   
   14001b2de:	int3   
   14001b2df:	int3   
   14001b2e0:	rex push rbx
   14001b2e2:	sub    rsp,0x20
   14001b2e6:	mov    ebx,ecx
   14001b2e8:	call   0x14001d8a0
   14001b2ed:	test   rax,rax
   14001b2f0:	jne    0x14001b2fb
   14001b2f2:	lea    rax,[rip+0x24e53]        # 0x14004014c
   14001b2f9:	jmp    0x14001b2ff
   14001b2fb:	add    rax,0x14
   14001b2ff:	lea    rdx,[rip+0x24cda]        # 0x14003ffe0
   14001b306:	mov    DWORD PTR [rax],ebx
   14001b308:	xor    ecx,ecx
   14001b30a:	mov    rax,rdx
   14001b30d:	data16 xchg ax,ax
   14001b310:	cmp    ebx,DWORD PTR [rax]
   14001b312:	je     0x14001b347
   14001b314:	add    ecx,0x1
   14001b317:	add    rax,0x8
   14001b31b:	cmp    ecx,0x2d
   14001b31e:	jb     0x14001b310
   14001b320:	lea    eax,[rbx-0x13]
   14001b323:	cmp    eax,0x11
   14001b326:	ja     0x14001b32f
   14001b328:	mov    ebx,0xd
   14001b32d:	jmp    0x14001b34e
   14001b32f:	lea    eax,[rbx-0xbc]
   14001b335:	mov    ecx,0x8
   14001b33a:	mov    ebx,0x16
   14001b33f:	cmp    eax,0xe
   14001b342:	cmovbe ebx,ecx
   14001b345:	jmp    0x14001b34e
   14001b347:	movsxd rax,ecx
   14001b34a:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
   14001b34e:	call   0x14001d8a0
   14001b353:	test   rax,rax
   14001b356:	jne    0x14001b364
   14001b358:	mov    DWORD PTR [rip+0x24dea],ebx        # 0x140040148
   14001b35e:	add    rsp,0x20
   14001b362:	pop    rbx
   14001b363:	ret    
   14001b364:	mov    DWORD PTR [rax+0x10],ebx
   14001b367:	add    rsp,0x20
   14001b36b:	pop    rbx
   14001b36c:	ret    
   14001b36d:	int3   
   14001b36e:	int3   
   14001b36f:	int3   
   14001b370:	mov    QWORD PTR [rsp+0x18],rbx
   14001b375:	push   rdi
   14001b376:	sub    rsp,0x20
   14001b37a:	test   rcx,rcx
   14001b37d:	mov    rbx,rdx
   14001b380:	mov    rdi,rcx
   14001b383:	jne    0x14001b397
   14001b385:	mov    rcx,rdx
   14001b388:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b38d:	add    rsp,0x20
   14001b391:	pop    rdi
   14001b392:	jmp    0x14001a470
   14001b397:	test   rdx,rdx
   14001b39a:	jne    0x14001b3ae
   14001b39c:	call   0x14001a540
   14001b3a1:	xor    eax,eax
   14001b3a3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b3a8:	add    rsp,0x20
   14001b3ac:	pop    rdi
   14001b3ad:	ret    
   14001b3ae:	cmp    rdx,0xffffffffffffffe0
   14001b3b2:	mov    QWORD PTR [rsp+0x30],rbp
   14001b3b7:	mov    QWORD PTR [rsp+0x38],rsi
   14001b3bc:	ja     0x14001b401
   14001b3be:	mov    ebp,0x1
   14001b3c3:	mov    rcx,QWORD PTR [rip+0x2a6ae]        # 0x140045a78
   14001b3ca:	test   rbx,rbx
   14001b3cd:	mov    r8,rdi
   14001b3d0:	cmove  rbx,rbp
   14001b3d4:	xor    edx,edx
   14001b3d6:	mov    r9,rbx
   14001b3d9:	call   QWORD PTR [rip+0x15d71]        # 0x140031150
   14001b3df:	test   rax,rax
   14001b3e2:	mov    rsi,rax
   14001b3e5:	jne    0x14001b45b
   14001b3e7:	cmp    DWORD PTR [rip+0x2af0b],eax        # 0x1400462f8
   14001b3ed:	je     0x14001b444
   14001b3ef:	mov    rcx,rbx
   14001b3f2:	call   0x1400221b0
   14001b3f7:	test   eax,eax
   14001b3f9:	je     0x14001b42b
   14001b3fb:	cmp    rbx,0xffffffffffffffe0
   14001b3ff:	jbe    0x14001b3c3
   14001b401:	mov    rcx,rbx
   14001b404:	call   0x1400221b0
   14001b409:	call   0x14001b280
   14001b40e:	mov    DWORD PTR [rax],0xc
   14001b414:	xor    eax,eax
   14001b416:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b41b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b420:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b425:	add    rsp,0x20
   14001b429:	pop    rdi
   14001b42a:	ret    
   14001b42b:	call   0x14001b280
   14001b430:	mov    rbx,rax
   14001b433:	call   QWORD PTR [rip+0x1603f]        # 0x140031478
   14001b439:	mov    ecx,eax
   14001b43b:	call   0x14001b230
   14001b440:	mov    DWORD PTR [rbx],eax
   14001b442:	jmp    0x14001b414
   14001b444:	call   0x14001b280
   14001b449:	mov    rbx,rax
   14001b44c:	call   QWORD PTR [rip+0x16026]        # 0x140031478
   14001b452:	mov    ecx,eax
   14001b454:	call   0x14001b230
   14001b459:	mov    DWORD PTR [rbx],eax
   14001b45b:	mov    rax,rsi
   14001b45e:	jmp    0x14001b416
   14001b460:	mov    QWORD PTR [rsp+0x8],rbx
   14001b465:	mov    QWORD PTR [rsp+0x10],rsi
   14001b46a:	push   rdi
   14001b46b:	sub    rsp,0x30
   14001b46f:	xor    edi,edi
   14001b471:	test   rdx,rdx
   14001b474:	mov    rbx,rdx
   14001b477:	mov    rsi,rcx
   14001b47a:	je     0x14001b4be
   14001b47c:	xor    edx,edx
   14001b47e:	mov    rax,0xffffffffffffffe0
   14001b485:	div    rbx
   14001b488:	cmp    rax,r8
   14001b48b:	jae    0x14001b4be
   14001b48d:	call   0x14001b280
   14001b492:	xor    r9d,r9d
   14001b495:	xor    r8d,r8d
   14001b498:	xor    edx,edx
   14001b49a:	xor    ecx,ecx
   14001b49c:	mov    QWORD PTR [rsp+0x20],rdi
   14001b4a1:	mov    DWORD PTR [rax],0xc
   14001b4a7:	call   0x14001de30
   14001b4ac:	xor    eax,eax
   14001b4ae:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b4b3:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b4b8:	add    rsp,0x30
   14001b4bc:	pop    rdi
   14001b4bd:	ret    
   14001b4be:	imul   rbx,r8
   14001b4c2:	test   rcx,rcx
   14001b4c5:	je     0x14001b4cf
   14001b4c7:	call   0x14001bff0
   14001b4cc:	mov    rdi,rax
   14001b4cf:	mov    rdx,rbx
   14001b4d2:	mov    rcx,rsi
   14001b4d5:	call   0x14001b370
   14001b4da:	test   rax,rax
   14001b4dd:	mov    rsi,rax
   14001b4e0:	je     0x14001b4f8
   14001b4e2:	cmp    rdi,rbx
   14001b4e5:	jae    0x14001b4f8
   14001b4e7:	sub    rbx,rdi
   14001b4ea:	lea    rcx,[rdi+rax*1]
   14001b4ee:	xor    edx,edx
   14001b4f0:	mov    r8,rbx
   14001b4f3:	call   0x14001b520
   14001b4f8:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b4fd:	mov    rax,rsi
   14001b500:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b505:	add    rsp,0x30
   14001b509:	pop    rdi
   14001b50a:	ret    
   14001b50b:	int3   
   14001b50c:	int3   
   14001b50d:	int3   
   14001b50e:	int3   
   14001b50f:	int3   
   14001b510:	int3   
   14001b511:	int3   
   14001b512:	int3   
   14001b513:	int3   
   14001b514:	int3   
   14001b515:	int3   
   14001b516:	data16 data16 xchg ax,ax
   14001b51a:	data16 data16 xchg ax,ax
   14001b51e:	xchg   ax,ax
   14001b520:	mov    rax,rcx
   14001b523:	cmp    r8,0x8
   14001b527:	jb     0x14001b57c
   14001b529:	movzx  edx,dl
   14001b52c:	movabs r9,0x101010101010101
   14001b536:	imul   rdx,r9
   14001b53a:	cmp    r8,0x40
   14001b53e:	jb     0x14001b55e
   14001b540:	neg    rcx
   14001b543:	and    ecx,0x7
   14001b546:	je     0x14001b54e
   14001b548:	sub    r8,rcx
   14001b54b:	mov    QWORD PTR [rax],rdx
   14001b54e:	add    rcx,rax
   14001b551:	mov    r9,r8
   14001b554:	and    r8,0x3f
   14001b558:	shr    r9,0x6
   14001b55c:	jne    0x14001b597
   14001b55e:	mov    r9,r8
   14001b561:	and    r8,0x7
   14001b565:	shr    r9,0x3
   14001b569:	je     0x14001b57c
   14001b56b:	data16 data16 xchg ax,ax
   14001b56f:	nop
   14001b570:	mov    QWORD PTR [rcx],rdx
   14001b573:	add    rcx,0x8
   14001b577:	dec    r9
   14001b57a:	jne    0x14001b570
   14001b57c:	test   r8,r8
   14001b57f:	je     0x14001b58b
   14001b581:	mov    BYTE PTR [rcx],dl
   14001b583:	inc    rcx
   14001b586:	dec    r8
   14001b589:	jne    0x14001b581
   14001b58b:	ret    
   14001b58c:	data16 data16 xchg ax,ax
   14001b590:	data16 data16 xchg ax,ax
   14001b594:	data16 xchg ax,ax
   14001b597:	cmp    r9,0x1c00
   14001b59e:	jae    0x14001b5d0
   14001b5a0:	mov    QWORD PTR [rcx],rdx
   14001b5a3:	mov    QWORD PTR [rcx+0x8],rdx
   14001b5a7:	mov    QWORD PTR [rcx+0x10],rdx
   14001b5ab:	add    rcx,0x40
   14001b5af:	mov    QWORD PTR [rcx-0x28],rdx
   14001b5b3:	mov    QWORD PTR [rcx-0x20],rdx
   14001b5b7:	dec    r9
   14001b5ba:	mov    QWORD PTR [rcx-0x18],rdx
   14001b5be:	mov    QWORD PTR [rcx-0x10],rdx
   14001b5c2:	mov    QWORD PTR [rcx-0x8],rdx
   14001b5c6:	jne    0x14001b5a0
   14001b5c8:	jmp    0x14001b55e
   14001b5ca:	data16 xchg ax,ax
   14001b5cd:	data16 xchg ax,ax
   14001b5d0:	movnti QWORD PTR [rcx],rdx
   14001b5d4:	movnti QWORD PTR [rcx+0x8],rdx
   14001b5d9:	movnti QWORD PTR [rcx+0x10],rdx
   14001b5de:	add    rcx,0x40
   14001b5e2:	movnti QWORD PTR [rcx-0x28],rdx
   14001b5e7:	movnti QWORD PTR [rcx-0x20],rdx
   14001b5ec:	dec    r9
   14001b5ef:	movnti QWORD PTR [rcx-0x18],rdx
   14001b5f4:	movnti QWORD PTR [rcx-0x10],rdx
   14001b5f9:	movnti QWORD PTR [rcx-0x8],rdx
   14001b5fe:	jne    0x14001b5d0
   14001b600:	lock or BYTE PTR [rsp],0x0
   14001b605:	jmp    0x14001b55e
   14001b60a:	int3   
   14001b60b:	int3   
   14001b60c:	int3   
   14001b60d:	int3   
   14001b60e:	int3   
   14001b60f:	int3   
   14001b610:	mov    rax,rsp
   14001b613:	mov    QWORD PTR [rax+0x10],rdx
   14001b617:	mov    QWORD PTR [rax+0x18],r8
   14001b61b:	mov    QWORD PTR [rax+0x20],r9
   14001b61f:	push   rdi
   14001b620:	sub    rsp,0x60
   14001b624:	mov    r8,rcx
   14001b627:	or     rcx,0xffffffffffffffff
   14001b62b:	lea    r9,[rax+0x18]
   14001b62f:	xor    eax,eax
   14001b631:	mov    rdi,r8
   14001b634:	repnz scas ax,WORD PTR es:[rdi]
   14001b637:	not    rcx
   14001b63a:	sub    rcx,0x1
   14001b63e:	test   r8,r8
   14001b641:	jne    0x14001b66f
   14001b643:	call   0x14001b280
   14001b648:	xor    r9d,r9d
   14001b64b:	xor    r8d,r8d
   14001b64e:	xor    edx,edx
   14001b650:	xor    ecx,ecx
   14001b652:	mov    QWORD PTR [rsp+0x20],0x0
   14001b65b:	mov    DWORD PTR [rax],0x16
   14001b661:	call   0x14001de30
   14001b666:	or     eax,0xffffffff
   14001b669:	add    rsp,0x60
   14001b66d:	pop    rdi
   14001b66e:	ret    
   14001b66f:	test   rdx,rdx
   14001b672:	je     0x14001b643
   14001b674:	cmp    rcx,0x3fffffff
   14001b67b:	mov    DWORD PTR [rsp+0x48],0x49
   14001b683:	mov    QWORD PTR [rsp+0x40],r8
   14001b688:	mov    QWORD PTR [rsp+0x30],r8
   14001b68d:	jbe    0x14001b6aa
   14001b68f:	lea    rcx,[rsp+0x30]
   14001b694:	xor    r8d,r8d
   14001b697:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14001b69f:	call   0x140023e50
   14001b6a4:	add    rsp,0x60
   14001b6a8:	pop    rdi
   14001b6a9:	ret    
   14001b6aa:	lea    eax,[rcx+rcx*1]
   14001b6ad:	lea    rcx,[rsp+0x30]
   14001b6b2:	xor    r8d,r8d
   14001b6b5:	mov    DWORD PTR [rsp+0x38],eax
   14001b6b9:	call   0x140023e50
   14001b6be:	add    rsp,0x60
   14001b6c2:	pop    rdi
   14001b6c3:	ret    
   14001b6c4:	int3   
   14001b6c5:	int3   
   14001b6c6:	int3   
   14001b6c7:	int3   
   14001b6c8:	int3   
   14001b6c9:	int3   
   14001b6ca:	int3   
   14001b6cb:	int3   
   14001b6cc:	int3   
   14001b6cd:	int3   
   14001b6ce:	int3   
   14001b6cf:	int3   
   14001b6d0:	sub    rsp,0x38
   14001b6d4:	test   rcx,rcx
   14001b6d7:	mov    r9,rcx
   14001b6da:	je     0x14001b6ea
   14001b6dc:	test   rdx,rdx
   14001b6df:	je     0x14001b6ea
   14001b6e1:	test   r8,r8
   14001b6e4:	jne    0x14001b717
   14001b6e6:	mov    WORD PTR [rcx],r8w
   14001b6ea:	call   0x14001b280
   14001b6ef:	xor    r9d,r9d
   14001b6f2:	xor    r8d,r8d
   14001b6f5:	xor    edx,edx
   14001b6f7:	xor    ecx,ecx
   14001b6f9:	mov    QWORD PTR [rsp+0x20],0x0
   14001b702:	mov    DWORD PTR [rax],0x16
   14001b708:	call   0x14001de30
   14001b70d:	mov    eax,0x16
   14001b712:	add    rsp,0x38
   14001b716:	ret    
   14001b717:	cmp    WORD PTR [rcx],0x0
   14001b71b:	je     0x14001b727
   14001b71d:	add    rcx,0x2
   14001b721:	sub    rdx,0x1
   14001b725:	jne    0x14001b717
   14001b727:	test   rdx,rdx
   14001b72a:	jne    0x14001b740
   14001b72c:	mov    WORD PTR [r9],dx
   14001b730:	jmp    0x14001b6ea
   14001b732:	xchg   ax,ax
   14001b734:	data16 data16 xchg ax,ax
   14001b738:	data16 data16 xchg ax,ax
   14001b73c:	data16 data16 xchg ax,ax
   14001b740:	movzx  eax,WORD PTR [r8]
   14001b744:	add    rcx,0x2
   14001b748:	add    r8,0x2
   14001b74c:	test   ax,ax
   14001b74f:	mov    WORD PTR [rcx-0x2],ax
   14001b753:	je     0x14001b75b
   14001b755:	sub    rdx,0x1
   14001b759:	jne    0x14001b740
   14001b75b:	test   rdx,rdx
   14001b75e:	jne    0x14001b791
   14001b760:	mov    WORD PTR [r9],dx
   14001b764:	call   0x14001b280
   14001b769:	xor    r9d,r9d
   14001b76c:	xor    r8d,r8d
   14001b76f:	xor    edx,edx
   14001b771:	xor    ecx,ecx
   14001b773:	mov    DWORD PTR [rax],0x22
   14001b779:	mov    QWORD PTR [rsp+0x20],0x0
   14001b782:	call   0x14001de30
   14001b787:	mov    eax,0x22
   14001b78c:	add    rsp,0x38
   14001b790:	ret    
   14001b791:	xor    eax,eax
   14001b793:	add    rsp,0x38
   14001b797:	ret    
   14001b798:	int3   
   14001b799:	int3   
   14001b79a:	int3   
   14001b79b:	int3   
   14001b79c:	int3   
   14001b79d:	int3   
   14001b79e:	int3   
   14001b79f:	int3   
   14001b7a0:	rex push rbx
   14001b7a2:	sub    rsp,0x30
   14001b7a6:	test   rcx,rcx
   14001b7a9:	mov    rbx,rcx
   14001b7ac:	jne    0x14001b7b6
   14001b7ae:	xor    eax,eax
   14001b7b0:	add    rsp,0x30
   14001b7b4:	pop    rbx
   14001b7b5:	ret    
   14001b7b6:	xor    eax,eax
   14001b7b8:	or     rcx,0xffffffffffffffff
   14001b7bc:	mov    QWORD PTR [rsp+0x40],rsi
   14001b7c1:	mov    QWORD PTR [rsp+0x48],rdi
   14001b7c6:	mov    rdi,rbx
   14001b7c9:	lea    edx,[rax+0x2]
   14001b7cc:	repnz scas ax,WORD PTR es:[rdi]
   14001b7cf:	not    rcx
   14001b7d2:	lea    rsi,[rcx-0x1]
   14001b7d6:	call   0x14001c110
   14001b7db:	test   rax,rax
   14001b7de:	mov    rdi,rax
   14001b7e1:	je     0x14001b821
   14001b7e3:	lea    rdx,[rsi+0x1]
   14001b7e7:	mov    r8,rbx
   14001b7ea:	mov    rcx,rax
   14001b7ed:	call   0x14001a690
   14001b7f2:	test   eax,eax
   14001b7f4:	je     0x14001b80e
   14001b7f6:	xor    r9d,r9d
   14001b7f9:	xor    r8d,r8d
   14001b7fc:	xor    edx,edx
   14001b7fe:	xor    ecx,ecx
   14001b800:	mov    QWORD PTR [rsp+0x20],0x0
   14001b809:	call   0x14001dd90
   14001b80e:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b813:	mov    rax,rdi
   14001b816:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b81b:	add    rsp,0x30
   14001b81f:	pop    rbx
   14001b820:	ret    
   14001b821:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b826:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b82b:	xor    eax,eax
   14001b82d:	add    rsp,0x30
   14001b831:	pop    rbx
   14001b832:	ret    
   14001b833:	int3   
   14001b834:	int3   
   14001b835:	int3   
   14001b836:	int3   
   14001b837:	int3   
   14001b838:	int3   
   14001b839:	int3   
   14001b83a:	int3   
   14001b83b:	int3   
   14001b83c:	int3   
   14001b83d:	int3   
   14001b83e:	int3   
   14001b83f:	int3   
   14001b840:	mov    QWORD PTR [rsp+0x8],rbx
   14001b845:	mov    QWORD PTR [rsp+0x18],rbp
   14001b84a:	mov    QWORD PTR [rsp+0x20],rsi
   14001b84f:	mov    QWORD PTR [rsp+0x10],rdx
   14001b854:	push   rdi
   14001b855:	push   r12
   14001b857:	push   r13
   14001b859:	push   r14
   14001b85b:	push   r15
   14001b85d:	sub    rsp,0x40
   14001b861:	mov    r14,QWORD PTR [r9+0x8]
   14001b865:	mov    rbp,QWORD PTR [r9]
   14001b868:	mov    r13,QWORD PTR [r9+0x38]
   14001b86c:	sub    rbp,r14
   14001b86f:	xor    edi,edi
   14001b871:	test   BYTE PTR [rcx+0x4],0x66
   14001b875:	mov    r15,r9
   14001b878:	mov    rsi,rdx
   14001b87b:	mov    r12,rcx
   14001b87e:	jne    0x14001b96a
   14001b884:	mov    QWORD PTR [rsp+0x30],rcx
   14001b889:	mov    QWORD PTR [rsp+0x38],r8
   14001b88e:	cmp    DWORD PTR [r13+0x0],edi
   14001b892:	jbe    0x14001b9d3
   14001b898:	lea    rbx,[r13+0xc]
   14001b89c:	data16 data16 xchg ax,ax
   14001b8a0:	mov    eax,DWORD PTR [rbx-0x8]
   14001b8a3:	cmp    rbp,rax
   14001b8a6:	jb     0x14001b953
   14001b8ac:	mov    eax,DWORD PTR [rbx-0x4]
   14001b8af:	cmp    rbp,rax
   14001b8b2:	jae    0x14001b953
   14001b8b8:	cmp    DWORD PTR [rbx+0x4],0x0
   14001b8bc:	je     0x14001b953
   14001b8c2:	mov    eax,DWORD PTR [rbx]
   14001b8c4:	cmp    eax,0x1
   14001b8c7:	je     0x14001b8e0
   14001b8c9:	lea    rcx,[rsp+0x30]
   14001b8ce:	add    rax,r14
   14001b8d1:	mov    rdx,rsi
   14001b8d4:	call   rax
   14001b8d6:	test   eax,eax
   14001b8d8:	js     0x14001b966
   14001b8de:	jle    0x14001b953
   14001b8e0:	cmp    DWORD PTR [r12],0xe06d7363
   14001b8e8:	jne    0x14001b912
   14001b8ea:	cmp    QWORD PTR [rip+0x198de],0x0        # 0x1400351d0
   14001b8f2:	je     0x14001b912
   14001b8f4:	lea    rcx,[rip+0x198d5]        # 0x1400351d0
   14001b8fb:	call   0x140021c60
   14001b900:	test   eax,eax
   14001b902:	je     0x14001b912
   14001b904:	mov    edx,0x1
   14001b909:	mov    rcx,r12
   14001b90c:	call   QWORD PTR [rip+0x198be]        # 0x1400351d0
   14001b912:	mov    ecx,DWORD PTR [rbx+0x4]
   14001b915:	mov    r8d,0x1
   14001b91b:	mov    rdx,rsi
   14001b91e:	add    rcx,r14
   14001b921:	call   0x140025790
   14001b926:	mov    rax,QWORD PTR [r15+0x40]
   14001b92a:	mov    edx,DWORD PTR [rbx+0x4]
   14001b92d:	movsxd r9,DWORD PTR [r12]
   14001b931:	mov    QWORD PTR [rsp+0x28],rax
   14001b936:	mov    rax,QWORD PTR [r15+0x28]
   14001b93a:	add    rdx,r14
   14001b93d:	mov    r8,r12
   14001b940:	mov    rcx,rsi
   14001b943:	mov    QWORD PTR [rsp+0x20],rax
   14001b948:	call   QWORD PTR [rip+0x157ea]        # 0x140031138
   14001b94e:	call   0x1400257c0
   14001b953:	add    edi,0x1
   14001b956:	add    rbx,0x10
   14001b95a:	cmp    edi,DWORD PTR [r13+0x0]
   14001b95e:	jb     0x14001b8a0
   14001b964:	jmp    0x14001b9d3
   14001b966:	xor    eax,eax
   14001b968:	jmp    0x14001b9d8
   14001b96a:	mov    rsi,QWORD PTR [r9+0x20]
   14001b96e:	sub    rsi,r14
   14001b971:	cmp    DWORD PTR [r13+0x0],edi
   14001b975:	jbe    0x14001b9d3
   14001b977:	lea    rbx,[r13+0x10]
   14001b97b:	xchg   ax,ax
   14001b97d:	data16 xchg ax,ax
   14001b980:	mov    ecx,DWORD PTR [rbx-0xc]
   14001b983:	cmp    rbp,rcx
   14001b986:	jb     0x14001b9c6
   14001b988:	mov    eax,DWORD PTR [rbx-0x8]
   14001b98b:	cmp    rbp,rax
   14001b98e:	jae    0x14001b9c6
   14001b990:	cmp    rsi,rcx
   14001b993:	jb     0x14001b9a2
   14001b995:	cmp    rsi,rax
   14001b998:	ja     0x14001b9a2
   14001b99a:	test   BYTE PTR [r12+0x4],0x20
   14001b9a0:	jne    0x14001b9d3
   14001b9a2:	mov    ecx,DWORD PTR [rbx]
   14001b9a4:	test   ecx,ecx
   14001b9a6:	je     0x14001b9af
   14001b9a8:	cmp    rsi,rcx
   14001b9ab:	je     0x14001b9d3
   14001b9ad:	jmp    0x14001b9c6
   14001b9af:	mov    rdx,QWORD PTR [rsp+0x78]
   14001b9b4:	add    rax,r14
   14001b9b7:	mov    cl,0x1
   14001b9b9:	mov    QWORD PTR [r15],rax
   14001b9bc:	mov    r8d,DWORD PTR [rbx-0x4]
   14001b9c0:	add    r8,r14
   14001b9c3:	call   r8
   14001b9c6:	add    edi,0x1
   14001b9c9:	add    rbx,0x10
   14001b9cd:	cmp    edi,DWORD PTR [r13+0x0]
   14001b9d1:	jb     0x14001b980
   14001b9d3:	mov    eax,0x1
   14001b9d8:	lea    r11,[rsp+0x40]
   14001b9dd:	mov    rbx,QWORD PTR [r11+0x30]
   14001b9e1:	mov    rbp,QWORD PTR [r11+0x40]
   14001b9e5:	mov    rsi,QWORD PTR [r11+0x48]
   14001b9e9:	mov    rsp,r11
   14001b9ec:	pop    r15
   14001b9ee:	pop    r14
   14001b9f0:	pop    r13
   14001b9f2:	pop    r12
   14001b9f4:	pop    rdi
   14001b9f5:	ret    
   14001b9f6:	int3   
   14001b9f7:	int3   
   14001b9f8:	int3   
   14001b9f9:	int3   
   14001b9fa:	int3   
   14001b9fb:	int3   
   14001b9fc:	int3   
   14001b9fd:	int3   
   14001b9fe:	int3   
   14001b9ff:	int3   
   14001ba00:	int3   
   14001ba01:	int3   
   14001ba02:	int3   
   14001ba03:	int3   
   14001ba04:	int3   
   14001ba05:	int3   
   14001ba06:	data16 data16 xchg ax,ax
   14001ba0a:	data16 data16 xchg ax,ax
   14001ba0e:	xchg   ax,ax
   14001ba10:	sub    rdx,rcx
   14001ba13:	cmp    r8,0x8
   14001ba17:	jb     0x14001ba3b
   14001ba19:	test   cl,0x7
   14001ba1c:	je     0x14001ba32
   14001ba1e:	xchg   ax,ax
   14001ba20:	mov    al,BYTE PTR [rcx]
   14001ba22:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001ba25:	jne    0x14001ba53
   14001ba27:	inc    rcx
   14001ba2a:	dec    r8
   14001ba2d:	test   cl,0x7
   14001ba30:	jne    0x14001ba20
   14001ba32:	mov    r9,r8
   14001ba35:	shr    r9,0x3
   14001ba39:	jne    0x14001ba5a
   14001ba3b:	test   r8,r8
   14001ba3e:	je     0x14001ba4f
   14001ba40:	mov    al,BYTE PTR [rcx]
   14001ba42:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001ba45:	jne    0x14001ba53
   14001ba47:	inc    rcx
   14001ba4a:	dec    r8
   14001ba4d:	jne    0x14001ba40
   14001ba4f:	xor    rax,rax
   14001ba52:	ret    
   14001ba53:	sbb    eax,eax
   14001ba55:	sbb    eax,0xffffffff
   14001ba58:	ret    
   14001ba59:	nop
   14001ba5a:	shr    r9,0x2
   14001ba5e:	je     0x14001ba97
   14001ba60:	mov    rax,QWORD PTR [rcx]
   14001ba63:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001ba67:	jne    0x14001bac4
   14001ba69:	mov    rax,QWORD PTR [rcx+0x8]
   14001ba6d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001ba72:	jne    0x14001bac0
   14001ba74:	mov    rax,QWORD PTR [rcx+0x10]
   14001ba78:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14001ba7d:	jne    0x14001babc
   14001ba7f:	mov    rax,QWORD PTR [rcx+0x18]
   14001ba83:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14001ba88:	jne    0x14001bab8
   14001ba8a:	add    rcx,0x20
   14001ba8e:	dec    r9
   14001ba91:	jne    0x14001ba60
   14001ba93:	and    r8,0x1f
   14001ba97:	mov    r9,r8
   14001ba9a:	shr    r9,0x3
   14001ba9e:	je     0x14001ba3b
   14001baa0:	mov    rax,QWORD PTR [rcx]
   14001baa3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001baa7:	jne    0x14001bac4
   14001baa9:	add    rcx,0x8
   14001baad:	dec    r9
   14001bab0:	jne    0x14001baa0
   14001bab2:	and    r8,0x7
   14001bab6:	jmp    0x14001ba3b
   14001bab8:	add    rcx,0x8
   14001babc:	add    rcx,0x8
   14001bac0:	add    rcx,0x8
   14001bac4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14001bac8:	bswap  rax
   14001bacb:	bswap  rcx
   14001bace:	cmp    rax,rcx
   14001bad1:	sbb    eax,eax
   14001bad3:	sbb    eax,0xffffffff
   14001bad6:	ret    
   14001bad7:	int3   
   14001bad8:	int3   
   14001bad9:	int3   
   14001bada:	int3   
   14001badb:	int3   
   14001badc:	int3   
   14001badd:	int3   
   14001bade:	int3   
   14001badf:	int3   
   14001bae0:	int3   
   14001bae1:	int3   
   14001bae2:	int3   
   14001bae3:	int3   
   14001bae4:	int3   
   14001bae5:	int3   
   14001bae6:	data16 data16 xchg ax,ax
   14001baea:	data16 data16 xchg ax,ax
   14001baee:	xchg   ax,ax
   14001baf0:	mov    r11,rcx
   14001baf3:	sub    rdx,rcx
   14001baf6:	jb     0x14001bc9a
   14001bafc:	cmp    r8,0x8
   14001bb00:	jb     0x14001bb63
   14001bb02:	test   cl,0x7
   14001bb05:	je     0x14001bb3d
   14001bb07:	test   cl,0x1
   14001bb0a:	je     0x14001bb17
   14001bb0c:	mov    al,BYTE PTR [rdx+rcx*1]
   14001bb0f:	dec    r8
   14001bb12:	mov    BYTE PTR [rcx],al
   14001bb14:	inc    rcx
   14001bb17:	test   cl,0x2
   14001bb1a:	je     0x14001bb2b
   14001bb1c:	mov    ax,WORD PTR [rdx+rcx*1]
   14001bb20:	sub    r8,0x2
   14001bb24:	mov    WORD PTR [rcx],ax
   14001bb27:	add    rcx,0x2
   14001bb2b:	test   cl,0x4
   14001bb2e:	je     0x14001bb3d
   14001bb30:	mov    eax,DWORD PTR [rdx+rcx*1]
   14001bb33:	sub    r8,0x4
   14001bb37:	mov    DWORD PTR [rcx],eax
   14001bb39:	add    rcx,0x4
   14001bb3d:	mov    r9,r8
   14001bb40:	shr    r9,0x5
   14001bb44:	jne    0x14001bb97
   14001bb46:	mov    r9,r8
   14001bb49:	shr    r9,0x3
   14001bb4d:	je     0x14001bb63
   14001bb4f:	mov    rax,QWORD PTR [rdx+rcx*1]
   14001bb53:	mov    QWORD PTR [rcx],rax
   14001bb56:	add    rcx,0x8
   14001bb5a:	dec    r9
   14001bb5d:	jne    0x14001bb4f
   14001bb5f:	and    r8,0x7
   14001bb63:	test   r8,r8
   14001bb66:	jne    0x14001bb70
   14001bb68:	mov    rax,r11
   14001bb6b:	ret    
   14001bb6c:	data16 data16 xchg ax,ax
   14001bb70:	mov    al,BYTE PTR [rdx+rcx*1]
   14001bb73:	mov    BYTE PTR [rcx],al
   14001bb75:	inc    rcx
   14001bb78:	dec    r8
   14001bb7b:	jne    0x14001bb70
   14001bb7d:	mov    rax,r11
   14001bb80:	ret    
   14001bb81:	data16 data16 xchg ax,ax
   14001bb85:	data16 data16 xchg ax,ax
   14001bb89:	data16 data16 xchg ax,ax
   14001bb8d:	data16 xchg ax,ax
   14001bb90:	data16 data16 xchg ax,ax
   14001bb94:	data16 xchg ax,ax
   14001bb97:	cmp    r9,0x2000
   14001bb9e:	jae    0x14001bbe2
   14001bba0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14001bba4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14001bba9:	add    rcx,0x20
   14001bbad:	mov    QWORD PTR [rcx-0x20],rax
   14001bbb1:	mov    QWORD PTR [rcx-0x18],r10
   14001bbb5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14001bbba:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14001bbbf:	dec    r9
   14001bbc2:	mov    QWORD PTR [rcx-0x10],rax
   14001bbc6:	mov    QWORD PTR [rcx-0x8],r10
   14001bbca:	jne    0x14001bba0
   14001bbcc:	and    r8,0x1f
   14001bbd0:	jmp    0x14001bb46
   14001bbd5:	data16 data16 xchg ax,ax
   14001bbd9:	data16 data16 xchg ax,ax
   14001bbdd:	data16 xchg ax,ax
   14001bbe0:	xchg   ax,ax
   14001bbe2:	cmp    rdx,0x1000
   14001bbe9:	jb     0x14001bba0
   14001bbeb:	mov    eax,0x20
   14001bbf0:	prefetchnta BYTE PTR [rdx+rcx*1]
   14001bbf4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14001bbf9:	add    rcx,0x80
   14001bc00:	dec    eax
   14001bc02:	jne    0x14001bbf0
   14001bc04:	sub    rcx,0x1000
   14001bc0b:	mov    eax,0x40
   14001bc10:	mov    r9,QWORD PTR [rdx+rcx*1]
   14001bc14:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14001bc19:	movnti QWORD PTR [rcx],r9
   14001bc1d:	movnti QWORD PTR [rcx+0x8],r10
   14001bc22:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14001bc27:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14001bc2c:	movnti QWORD PTR [rcx+0x10],r9
   14001bc31:	movnti QWORD PTR [rcx+0x18],r10
   14001bc36:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14001bc3b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14001bc40:	add    rcx,0x40
   14001bc44:	movnti QWORD PTR [rcx-0x20],r9
   14001bc49:	movnti QWORD PTR [rcx-0x18],r10
   14001bc4e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14001bc53:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14001bc58:	dec    eax
   14001bc5a:	movnti QWORD PTR [rcx-0x10],r9
   14001bc5f:	movnti QWORD PTR [rcx-0x8],r10
   14001bc64:	jne    0x14001bc10
   14001bc66:	sub    r8,0x1000
   14001bc6d:	cmp    r8,0x1000
   14001bc74:	jae    0x14001bbeb
   14001bc7a:	lock or BYTE PTR [rsp],0x0
   14001bc7f:	jmp    0x14001bb3d
   14001bc84:	data16 data16 xchg ax,ax
   14001bc88:	data16 data16 xchg ax,ax
   14001bc8c:	data16 data16 xchg ax,ax
   14001bc90:	data16 data16 xchg ax,ax
   14001bc94:	data16 data16 xchg ax,ax
   14001bc98:	xchg   ax,ax
   14001bc9a:	add    rcx,r8
   14001bc9d:	cmp    r8,0x8
   14001bca1:	jb     0x14001bd04
   14001bca3:	test   cl,0x7
   14001bca6:	je     0x14001bcde
   14001bca8:	test   cl,0x1
   14001bcab:	je     0x14001bcb8
   14001bcad:	dec    rcx
   14001bcb0:	mov    al,BYTE PTR [rdx+rcx*1]
   14001bcb3:	dec    r8
   14001bcb6:	mov    BYTE PTR [rcx],al
   14001bcb8:	test   cl,0x2
   14001bcbb:	je     0x14001bccc
   14001bcbd:	sub    rcx,0x2
   14001bcc1:	mov    ax,WORD PTR [rdx+rcx*1]
   14001bcc5:	sub    r8,0x2
   14001bcc9:	mov    WORD PTR [rcx],ax
   14001bccc:	test   cl,0x4
   14001bccf:	je     0x14001bcde
   14001bcd1:	sub    rcx,0x4
   14001bcd5:	mov    eax,DWORD PTR [rdx+rcx*1]
   14001bcd8:	sub    r8,0x4
   14001bcdc:	mov    DWORD PTR [rcx],eax
   14001bcde:	mov    r9,r8
   14001bce1:	shr    r9,0x5
   14001bce5:	jne    0x14001bd37
   14001bce7:	mov    r9,r8
   14001bcea:	shr    r9,0x3
   14001bcee:	je     0x14001bd04
   14001bcf0:	sub    rcx,0x8
   14001bcf4:	mov    rax,QWORD PTR [rdx+rcx*1]
   14001bcf8:	dec    r9
   14001bcfb:	mov    QWORD PTR [rcx],rax
   14001bcfe:	jne    0x14001bcf0
   14001bd00:	and    r8,0x7
   14001bd04:	test   r8,r8
   14001bd07:	jne    0x14001bd10
   14001bd09:	mov    rax,r11
   14001bd0c:	ret    
   14001bd0d:	data16 xchg ax,ax
   14001bd10:	dec    rcx
   14001bd13:	mov    al,BYTE PTR [rdx+rcx*1]
   14001bd16:	dec    r8
   14001bd19:	mov    BYTE PTR [rcx],al
   14001bd1b:	jne    0x14001bd10
   14001bd1d:	mov    rax,r11
   14001bd20:	ret    
   14001bd21:	data16 data16 xchg ax,ax
   14001bd25:	data16 data16 xchg ax,ax
   14001bd29:	data16 data16 xchg ax,ax
   14001bd2d:	data16 xchg ax,ax
   14001bd30:	data16 data16 xchg ax,ax
   14001bd34:	data16 xchg ax,ax
   14001bd37:	cmp    r9,0x2000
   14001bd3e:	jae    0x14001bd82
   14001bd40:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14001bd45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001bd4a:	sub    rcx,0x20
   14001bd4e:	mov    QWORD PTR [rcx+0x18],rax
   14001bd52:	mov    QWORD PTR [rcx+0x10],r10
   14001bd56:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001bd5b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14001bd5f:	dec    r9
   14001bd62:	mov    QWORD PTR [rcx+0x8],rax
   14001bd66:	mov    QWORD PTR [rcx],r10
   14001bd69:	jne    0x14001bd40
   14001bd6b:	and    r8,0x1f
   14001bd6f:	jmp    0x14001bce7
   14001bd74:	data16 data16 xchg ax,ax
   14001bd78:	data16 data16 xchg ax,ax
   14001bd7c:	data16 data16 xchg ax,ax
   14001bd80:	xchg   ax,ax
   14001bd82:	cmp    rdx,0xfffffffffffff000
   14001bd89:	ja     0x14001bd40
   14001bd8b:	mov    eax,0x20
   14001bd90:	sub    rcx,0x80
   14001bd97:	prefetchnta BYTE PTR [rdx+rcx*1]
   14001bd9b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14001bda0:	dec    eax
   14001bda2:	jne    0x14001bd90
   14001bda4:	add    rcx,0x1000
   14001bdab:	mov    eax,0x40
   14001bdb0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14001bdb5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001bdba:	movnti QWORD PTR [rcx-0x8],r9
   14001bdbf:	movnti QWORD PTR [rcx-0x10],r10
   14001bdc4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14001bdc9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14001bdce:	movnti QWORD PTR [rcx-0x18],r9
   14001bdd3:	movnti QWORD PTR [rcx-0x20],r10
   14001bdd8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14001bddd:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14001bde2:	sub    rcx,0x40
   14001bde6:	movnti QWORD PTR [rcx+0x18],r9
   14001bdeb:	movnti QWORD PTR [rcx+0x10],r10
   14001bdf0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14001bdf5:	mov    r10,QWORD PTR [rdx+rcx*1]
   14001bdf9:	dec    eax
   14001bdfb:	movnti QWORD PTR [rcx+0x8],r9
   14001be00:	movnti QWORD PTR [rcx],r10
   14001be04:	jne    0x14001bdb0
   14001be06:	sub    r8,0x1000
   14001be0d:	cmp    r8,0x1000
   14001be14:	jae    0x14001bd8b
   14001be1a:	lock or BYTE PTR [rsp],0x0
   14001be1f:	jmp    0x14001bcde
   14001be24:	int3   
   14001be25:	int3   
   14001be26:	int3   
   14001be27:	int3   
   14001be28:	int3   
   14001be29:	int3   
   14001be2a:	int3   
   14001be2b:	int3   
   14001be2c:	int3   
   14001be2d:	int3   
   14001be2e:	int3   
   14001be2f:	int3   
   14001be30:	movzx  r8d,WORD PTR [rdx]
   14001be34:	movzx  eax,WORD PTR [rcx]
   14001be37:	sub    eax,r8d
   14001be3a:	jne    0x14001be5c
   14001be3c:	data16 data16 xchg ax,ax
   14001be40:	test   r8w,r8w
   14001be44:	je     0x14001be5c
   14001be46:	movzx  r8d,WORD PTR [rdx+0x2]
   14001be4b:	movzx  eax,WORD PTR [rcx+0x2]
   14001be4f:	add    rcx,0x2
   14001be53:	add    rdx,0x2
   14001be57:	sub    eax,r8d
   14001be5a:	je     0x14001be40
   14001be5c:	test   eax,eax
   14001be5e:	jns    0x14001be64
   14001be60:	or     eax,0xffffffff
   14001be63:	ret    
   14001be64:	mov    ecx,0x1
   14001be69:	test   eax,eax
   14001be6b:	cmovg  eax,ecx
   14001be6e:	ret    
   14001be6f:	int3   
   14001be70:	lea    rax,[rip+0x9d89]        # 0x140025c00
   14001be77:	lea    rcx,[rip+0xac12]        # 0x140026a90
   14001be7e:	mov    QWORD PTR [rip+0x24e83],rax        # 0x140040d08
   14001be85:	lea    rax,[rip+0x9d14]        # 0x140025ba0
   14001be8c:	mov    QWORD PTR [rip+0x24e6d],rcx        # 0x140040d00
   14001be93:	mov    QWORD PTR [rip+0x24e76],rax        # 0x140040d10
   14001be9a:	lea    rax,[rip+0x9d4f]        # 0x140025bf0
   14001bea1:	mov    QWORD PTR [rip+0x24e80],rcx        # 0x140040d28
   14001bea8:	mov    QWORD PTR [rip+0x24e69],rax        # 0x140040d18
   14001beaf:	lea    rax,[rip+0x9c7a]        # 0x140025b30
   14001beb6:	mov    QWORD PTR [rip+0x24e63],rax        # 0x140040d20
   14001bebd:	lea    rax,[rip+0xab2c]        # 0x1400269f0
   14001bec4:	mov    QWORD PTR [rip+0x24e65],rax        # 0x140040d30
   14001becb:	lea    rax,[rip+0x9c7e]        # 0x140025b50
   14001bed2:	mov    QWORD PTR [rip+0x24e5f],rax        # 0x140040d38
   14001bed9:	lea    rax,[rip+0x9ae0]        # 0x1400259c0
   14001bee0:	mov    QWORD PTR [rip+0x24e59],rax        # 0x140040d40
   14001bee7:	lea    rax,[rip+0x9992]        # 0x140025880
   14001beee:	mov    QWORD PTR [rip+0x24e53],rax        # 0x140040d48
   14001bef5:	ret    
   14001bef6:	int3   
   14001bef7:	int3   
   14001bef8:	int3   
   14001bef9:	int3   
   14001befa:	int3   
   14001befb:	int3   
   14001befc:	int3   
   14001befd:	int3   
   14001befe:	int3   
   14001beff:	int3   
   14001bf00:	mov    QWORD PTR [rsp+0x18],rbx
   14001bf05:	push   rdi
   14001bf06:	sub    rsp,0x30
   14001bf0a:	test   rcx,rcx
   14001bf0d:	mov    rbx,rdx
   14001bf10:	mov    rdi,rcx
   14001bf13:	jne    0x14001bf41
   14001bf15:	call   0x14001b280
   14001bf1a:	xor    r9d,r9d
   14001bf1d:	xor    r8d,r8d
   14001bf20:	xor    edx,edx
   14001bf22:	xor    ecx,ecx
   14001bf24:	mov    QWORD PTR [rsp+0x20],rdi
   14001bf29:	mov    DWORD PTR [rax],0x16
   14001bf2f:	call   0x14001de30
   14001bf34:	xor    eax,eax
   14001bf36:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bf3b:	add    rsp,0x30
   14001bf3f:	pop    rdi
   14001bf40:	ret    
   14001bf41:	cmp    rdx,0xffffffffffffffe0
   14001bf45:	jbe    0x14001bf5f
   14001bf47:	call   0x14001b280
   14001bf4c:	mov    DWORD PTR [rax],0xc
   14001bf52:	xor    eax,eax
   14001bf54:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bf59:	add    rsp,0x30
   14001bf5d:	pop    rdi
   14001bf5e:	ret    
   14001bf5f:	test   rdx,rdx
   14001bf62:	mov    eax,0x1
   14001bf67:	mov    r8,rcx
   14001bf6a:	mov    rcx,QWORD PTR [rip+0x29b07]        # 0x140045a78
   14001bf71:	cmove  rbx,rax
   14001bf75:	xor    edx,edx
   14001bf77:	mov    QWORD PTR [rsp+0x40],rbp
   14001bf7c:	mov    QWORD PTR [rsp+0x48],rsi
   14001bf81:	call   QWORD PTR [rip+0x151d1]        # 0x140031158
   14001bf87:	mov    rcx,QWORD PTR [rip+0x29aea]        # 0x140045a78
   14001bf8e:	mov    r9,rbx
   14001bf91:	mov    r8,rdi
   14001bf94:	mov    edx,0x10
   14001bf99:	mov    rbp,rax
   14001bf9c:	call   QWORD PTR [rip+0x151ae]        # 0x140031150
   14001bfa2:	test   rax,rax
   14001bfa5:	mov    rsi,rax
   14001bfa8:	jne    0x14001bfd1
   14001bfaa:	cmp    rbp,0xffffffffffffffff
   14001bfae:	je     0x14001bfba
   14001bfb0:	cmp    rbx,rbp
   14001bfb3:	ja     0x14001bfba
   14001bfb5:	mov    rsi,rdi
   14001bfb8:	jmp    0x14001bfd1
   14001bfba:	call   0x14001b280
   14001bfbf:	mov    rbx,rax
   14001bfc2:	call   QWORD PTR [rip+0x154b0]        # 0x140031478
   14001bfc8:	mov    ecx,eax
   14001bfca:	call   0x14001b230
   14001bfcf:	mov    DWORD PTR [rbx],eax
   14001bfd1:	mov    rbp,QWORD PTR [rsp+0x40]
   14001bfd6:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bfdb:	mov    rax,rsi
   14001bfde:	mov    rsi,QWORD PTR [rsp+0x48]
   14001bfe3:	add    rsp,0x30
   14001bfe7:	pop    rdi
   14001bfe8:	ret    
   14001bfe9:	int3   
   14001bfea:	int3   
   14001bfeb:	int3   
   14001bfec:	int3   
   14001bfed:	int3   
   14001bfee:	int3   
   14001bfef:	int3   
   14001bff0:	sub    rsp,0x38
   14001bff4:	test   rcx,rcx
   14001bff7:	jne    0x14001c025
   14001bff9:	call   0x14001b280
   14001bffe:	xor    r9d,r9d
   14001c001:	xor    r8d,r8d
   14001c004:	xor    edx,edx
   14001c006:	xor    ecx,ecx
   14001c008:	mov    QWORD PTR [rsp+0x20],0x0
   14001c011:	mov    DWORD PTR [rax],0x16
   14001c017:	call   0x14001de30
   14001c01c:	or     rax,0xffffffffffffffff
   14001c020:	add    rsp,0x38
   14001c024:	ret    
   14001c025:	mov    r8,rcx
   14001c028:	mov    rcx,QWORD PTR [rip+0x29a49]        # 0x140045a78
   14001c02f:	xor    edx,edx
   14001c031:	add    rsp,0x38
   14001c035:	rex.W jmp QWORD PTR [rip+0x1511c]        # 0x140031158
   14001c03c:	int3   
   14001c03d:	int3   
   14001c03e:	int3   
   14001c03f:	int3   
   14001c040:	mov    QWORD PTR [rsp+0x8],rbx
   14001c045:	push   rdi
   14001c046:	sub    rsp,0x30
   14001c04a:	test   rcx,rcx
   14001c04d:	mov    rdi,r8
   14001c050:	mov    rbx,rdx
   14001c053:	je     0x14001c096
   14001c055:	xor    edx,edx
   14001c057:	mov    rax,0xffffffffffffffe0
   14001c05e:	div    rcx
   14001c061:	cmp    rax,rbx
   14001c064:	jae    0x14001c096
   14001c066:	call   0x14001b280
   14001c06b:	xor    r9d,r9d
   14001c06e:	xor    r8d,r8d
   14001c071:	xor    edx,edx
   14001c073:	xor    ecx,ecx
   14001c075:	mov    QWORD PTR [rsp+0x20],0x0
   14001c07e:	mov    DWORD PTR [rax],0xc
   14001c084:	call   0x14001de30
   14001c089:	xor    eax,eax
   14001c08b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c090:	add    rsp,0x30
   14001c094:	pop    rdi
   14001c095:	ret    
   14001c096:	imul   rbx,rcx
   14001c09a:	mov    eax,0x1
   14001c09f:	test   rbx,rbx
   14001c0a2:	cmove  rbx,rax
   14001c0a6:	xor    eax,eax
   14001c0a8:	cmp    rbx,0xffffffffffffffe0
   14001c0ac:	ja     0x14001c0c6
   14001c0ae:	mov    rcx,QWORD PTR [rip+0x299c3]        # 0x140045a78
   14001c0b5:	lea    edx,[rax+0x8]
   14001c0b8:	mov    r8,rbx
   14001c0bb:	call   QWORD PTR [rip+0x151f7]        # 0x1400312b8
   14001c0c1:	test   rax,rax
   14001c0c4:	jne    0x14001c0fe
   14001c0c6:	cmp    DWORD PTR [rip+0x2a22b],0x0        # 0x1400462f8
   14001c0cd:	je     0x14001c0f3
   14001c0cf:	mov    rcx,rbx
   14001c0d2:	call   0x1400221b0
   14001c0d7:	test   eax,eax
   14001c0d9:	jne    0x14001c0a6
   14001c0db:	test   rdi,rdi
   14001c0de:	je     0x14001c0e6
   14001c0e0:	mov    DWORD PTR [rdi],0xc
   14001c0e6:	xor    eax,eax
   14001c0e8:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c0ed:	add    rsp,0x30
   14001c0f1:	pop    rdi
   14001c0f2:	ret    
   14001c0f3:	test   rdi,rdi
   14001c0f6:	je     0x14001c0fe
   14001c0f8:	mov    DWORD PTR [rdi],0xc
   14001c0fe:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c103:	add    rsp,0x30
   14001c107:	pop    rdi
   14001c108:	ret    
   14001c109:	int3   
   14001c10a:	int3   
   14001c10b:	int3   
   14001c10c:	int3   
   14001c10d:	int3   
   14001c10e:	int3   
   14001c10f:	int3   
   14001c110:	mov    QWORD PTR [rsp+0x8],rbx
   14001c115:	mov    QWORD PTR [rsp+0x10],rsi
   14001c11a:	push   rdi
   14001c11b:	sub    rsp,0x30
   14001c11f:	xor    ebx,ebx
   14001c121:	test   rcx,rcx
   14001c124:	mov    r8,rdx
   14001c127:	mov    esi,ebx
   14001c129:	mov    rdi,rcx
   14001c12c:	je     0x14001c172
   14001c12e:	xor    edx,edx
   14001c130:	mov    rax,0xffffffffffffffe0
   14001c137:	div    rdi
   14001c13a:	cmp    rax,r8
   14001c13d:	jae    0x14001c172
   14001c13f:	call   0x14001b280
   14001c144:	mov    esi,0xc
   14001c149:	xor    r9d,r9d
   14001c14c:	xor    r8d,r8d
   14001c14f:	xor    edx,edx
   14001c151:	xor    ecx,ecx
   14001c153:	mov    DWORD PTR [rax],esi
   14001c155:	mov    QWORD PTR [rsp+0x20],rbx
   14001c15a:	call   0x14001de30
   14001c15f:	mov    rax,rbx
   14001c162:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c167:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c16c:	add    rsp,0x30
   14001c170:	pop    rdi
   14001c171:	ret    
   14001c172:	imul   rdi,r8
   14001c176:	mov    eax,0x1
   14001c17b:	test   rdi,rdi
   14001c17e:	cmove  rdi,rax
   14001c182:	cmp    rdi,0xffffffffffffffe0
   14001c186:	mov    rax,rbx
   14001c189:	ja     0x14001c1a5
   14001c18b:	mov    rcx,QWORD PTR [rip+0x298e6]        # 0x140045a78
   14001c192:	mov    r8,rdi
   14001c195:	mov    edx,0x8
   14001c19a:	call   QWORD PTR [rip+0x15118]        # 0x1400312b8
   14001c1a0:	test   rax,rax
   14001c1a3:	jne    0x14001c1c3
   14001c1a5:	cmp    DWORD PTR [rip+0x2a14d],ebx        # 0x1400462f8
   14001c1ab:	je     0x14001c1be
   14001c1ad:	mov    rcx,rdi
   14001c1b0:	call   0x1400221b0
   14001c1b5:	test   eax,eax
   14001c1b7:	jne    0x14001c182
   14001c1b9:	lea    esi,[rax+0xc]
   14001c1bc:	jmp    0x14001c1cf
   14001c1be:	mov    esi,0xc
   14001c1c3:	test   rax,rax
   14001c1c6:	mov    rbx,rax
   14001c1c9:	jne    0x14001c1e3
   14001c1cb:	test   esi,esi
   14001c1cd:	je     0x14001c1e3
   14001c1cf:	call   0x14001b280
   14001c1d4:	test   rax,rax
   14001c1d7:	je     0x14001c1e0
   14001c1d9:	call   0x14001b280
   14001c1de:	mov    DWORD PTR [rax],esi
   14001c1e0:	mov    rax,rbx
   14001c1e3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c1e8:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c1ed:	add    rsp,0x30
   14001c1f1:	pop    rdi
   14001c1f2:	ret    
   14001c1f3:	int3   
   14001c1f4:	int3   
   14001c1f5:	int3   
   14001c1f6:	int3   
   14001c1f7:	int3   
   14001c1f8:	int3   
   14001c1f9:	int3   
   14001c1fa:	int3   
   14001c1fb:	int3   
   14001c1fc:	int3   
   14001c1fd:	int3   
   14001c1fe:	int3   
   14001c1ff:	int3   
   14001c200:	sub    rsp,0x28
   14001c204:	mov    rax,QWORD PTR [rcx]
   14001c207:	cmp    DWORD PTR [rax],0xe06d7363
   14001c20d:	jne    0x14001c23a
   14001c20f:	cmp    DWORD PTR [rax+0x18],0x4
   14001c213:	jne    0x14001c23a
   14001c215:	mov    eax,DWORD PTR [rax+0x20]
   14001c218:	cmp    eax,0x19930520
   14001c21d:	je     0x14001c234
   14001c21f:	cmp    eax,0x19930521
   14001c224:	je     0x14001c234
   14001c226:	cmp    eax,0x19930522
   14001c22b:	je     0x14001c234
   14001c22d:	cmp    eax,0x1994000
   14001c232:	jne    0x14001c23a
   14001c234:	call   0x140021cd0
   14001c239:	int3   
   14001c23a:	xor    eax,eax
   14001c23c:	add    rsp,0x28
   14001c240:	ret    
   14001c241:	int3   
   14001c242:	int3   
   14001c243:	int3   
   14001c244:	int3   
   14001c245:	int3   
   14001c246:	int3   
   14001c247:	int3   
   14001c248:	int3   
   14001c249:	int3   
   14001c24a:	int3   
   14001c24b:	int3   
   14001c24c:	int3   
   14001c24d:	int3   
   14001c24e:	int3   
   14001c24f:	int3   
   14001c250:	sub    rsp,0x28
   14001c254:	lea    rcx,[rip+0xffffffffffffffa5]        # 0x14001c200
   14001c25b:	call   QWORD PTR [rip+0x14eff]        # 0x140031160
   14001c261:	xor    eax,eax
   14001c263:	add    rsp,0x28
   14001c267:	ret    
   14001c268:	int3   
   14001c269:	int3   
   14001c26a:	int3   
   14001c26b:	int3   
   14001c26c:	int3   
   14001c26d:	int3   
   14001c26e:	int3   
   14001c26f:	int3   
   14001c270:	mov    QWORD PTR [rsp+0x18],rbx
   14001c275:	push   rsi
   14001c276:	push   rdi
   14001c277:	push   r12
   14001c279:	sub    rsp,0x30
   14001c27d:	lea    r12,[rip+0x23edc]        # 0x140040160
   14001c284:	xor    esi,esi
   14001c286:	mov    edi,ecx
   14001c288:	mov    rax,r12
   14001c28b:	mov    ebx,esi
   14001c28d:	data16 xchg ax,ax
   14001c290:	cmp    ecx,DWORD PTR [rax]
   14001c292:	je     0x14001c2ae
   14001c294:	add    ebx,0x1
   14001c297:	add    rax,0x10
   14001c29b:	cmp    ebx,0x17
   14001c29e:	jb     0x14001c290
   14001c2a0:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c2a5:	add    rsp,0x30
   14001c2a9:	pop    r12
   14001c2ab:	pop    rdi
   14001c2ac:	pop    rsi
   14001c2ad:	ret    
   14001c2ae:	cmp    ebx,0x17
   14001c2b1:	jae    0x14001c495
   14001c2b7:	mov    ecx,0x3
   14001c2bc:	call   0x140027020
   14001c2c1:	cmp    eax,0x1
   14001c2c4:	je     0x14001c44c
   14001c2ca:	mov    ecx,0x3
   14001c2cf:	call   0x140027020
   14001c2d4:	test   eax,eax
   14001c2d6:	jne    0x14001c2e5
   14001c2d8:	cmp    DWORD PTR [rip+0x23cb9],0x1        # 0x14003ff98
   14001c2df:	je     0x14001c44c
   14001c2e5:	cmp    edi,0xfc
   14001c2eb:	je     0x14001c495
   14001c2f1:	mov    QWORD PTR [rsp+0x50],rbp
   14001c2f6:	lea    rbp,[rip+0x29243]        # 0x140045540
   14001c2fd:	lea    r8,[rip+0x18d9c]        # 0x1400350a0
   14001c304:	mov    rcx,rbp
   14001c307:	mov    edx,0x314
   14001c30c:	call   0x140026f70
   14001c311:	test   eax,eax
   14001c313:	je     0x14001c329
   14001c315:	xor    r9d,r9d
   14001c318:	xor    r8d,r8d
   14001c31b:	xor    edx,edx
   14001c31d:	xor    ecx,ecx
   14001c31f:	mov    QWORD PTR [rsp+0x20],rsi
   14001c324:	call   0x14001dd90
   14001c329:	lea    rdx,[rip+0x29229]        # 0x140045559
   14001c330:	mov    r8d,0x104
   14001c336:	xor    ecx,ecx
   14001c338:	mov    BYTE PTR [rip+0x2931e],sil        # 0x14004565d
   14001c33f:	call   QWORD PTR [rip+0x14e2b]        # 0x140031170
   14001c345:	test   eax,eax
   14001c347:	jne    0x14001c379
   14001c349:	lea    r8,[rip+0x18d38]        # 0x140035088
   14001c350:	lea    rcx,[rip+0x29202]        # 0x140045559
   14001c357:	mov    edx,0x2fb
   14001c35c:	call   0x140026f70
   14001c361:	test   eax,eax
   14001c363:	je     0x14001c379
   14001c365:	xor    r9d,r9d
   14001c368:	xor    r8d,r8d
   14001c36b:	xor    edx,edx
   14001c36d:	xor    ecx,ecx
   14001c36f:	mov    QWORD PTR [rsp+0x20],rsi
   14001c374:	call   0x14001dd90
   14001c379:	or     rcx,0xffffffffffffffff
   14001c37d:	xor    eax,eax
   14001c37f:	lea    rdi,[rip+0x291d3]        # 0x140045559
   14001c386:	repnz scas al,BYTE PTR es:[rdi]
   14001c388:	not    rcx
   14001c38b:	cmp    rcx,0x3c
   14001c38f:	jbe    0x14001c3c8
   14001c391:	lea    rcx,[rcx+rbp*1-0x23]
   14001c396:	lea    rdx,[rip+0x294b7]        # 0x140045854
   14001c39d:	lea    r9d,[rax+0x3]
   14001c3a1:	lea    r8,[rip+0x18cdc]        # 0x140035084
   14001c3a8:	sub    rdx,rcx
   14001c3ab:	call   0x140026e50
   14001c3b0:	test   eax,eax
   14001c3b2:	je     0x14001c3c8
   14001c3b4:	xor    r9d,r9d
   14001c3b7:	xor    r8d,r8d
   14001c3ba:	xor    edx,edx
   14001c3bc:	xor    ecx,ecx
   14001c3be:	mov    QWORD PTR [rsp+0x20],rsi
   14001c3c3:	call   0x14001dd90
   14001c3c8:	lea    r8,[rip+0x18cb1]        # 0x140035080
   14001c3cf:	mov    edx,0x314
   14001c3d4:	mov    rcx,rbp
   14001c3d7:	call   0x140026d90
   14001c3dc:	test   eax,eax
   14001c3de:	je     0x14001c3f4
   14001c3e0:	xor    r9d,r9d
   14001c3e3:	xor    r8d,r8d
   14001c3e6:	xor    edx,edx
   14001c3e8:	xor    ecx,ecx
   14001c3ea:	mov    QWORD PTR [rsp+0x20],rsi
   14001c3ef:	call   0x14001dd90
   14001c3f4:	movsxd r8,ebx
   14001c3f7:	mov    edx,0x314
   14001c3fc:	mov    rcx,rbp
   14001c3ff:	add    r8,r8
   14001c402:	mov    r8,QWORD PTR [r12+r8*8+0x8]
   14001c407:	call   0x140026d90
   14001c40c:	test   eax,eax
   14001c40e:	je     0x14001c424
   14001c410:	xor    r9d,r9d
   14001c413:	xor    r8d,r8d
   14001c416:	xor    edx,edx
   14001c418:	xor    ecx,ecx
   14001c41a:	mov    QWORD PTR [rsp+0x20],rsi
   14001c41f:	call   0x14001dd90
   14001c424:	lea    rdx,[rip+0x18c2d]        # 0x140035058
   14001c42b:	mov    r8d,0x12010
   14001c431:	mov    rcx,rbp
   14001c434:	call   0x140026b30
   14001c439:	mov    rbp,QWORD PTR [rsp+0x50]
   14001c43e:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c443:	add    rsp,0x30
   14001c447:	pop    r12
   14001c449:	pop    rdi
   14001c44a:	pop    rsi
   14001c44b:	ret    
   14001c44c:	mov    ecx,0xfffffff4
   14001c451:	call   QWORD PTR [rip+0x14d11]        # 0x140031168
   14001c457:	test   rax,rax
   14001c45a:	mov    r11,rax
   14001c45d:	je     0x14001c495
   14001c45f:	cmp    rax,0xffffffffffffffff
   14001c463:	je     0x14001c495
   14001c465:	xor    eax,eax
   14001c467:	movsxd rcx,ebx
   14001c46a:	lea    r9,[rsp+0x58]
   14001c46f:	add    rcx,rcx
   14001c472:	mov    QWORD PTR [rsp+0x20],rsi
   14001c477:	mov    rdx,QWORD PTR [r12+rcx*8+0x8]
   14001c47c:	or     rcx,0xffffffffffffffff
   14001c480:	mov    rdi,rdx
   14001c483:	repnz scas al,BYTE PTR es:[rdi]
   14001c485:	not    rcx
   14001c488:	lea    r8,[rcx-0x1]
   14001c48c:	mov    rcx,r11
   14001c48f:	call   QWORD PTR [rip+0x14fb3]        # 0x140031448
   14001c495:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c49a:	add    rsp,0x30
   14001c49e:	pop    r12
   14001c4a0:	pop    rdi
   14001c4a1:	pop    rsi
   14001c4a2:	ret    
   14001c4a3:	int3   
   14001c4a4:	int3   
   14001c4a5:	int3   
   14001c4a6:	int3   
   14001c4a7:	int3   
   14001c4a8:	int3   
   14001c4a9:	int3   
   14001c4aa:	int3   
   14001c4ab:	int3   
   14001c4ac:	int3   
   14001c4ad:	int3   
   14001c4ae:	int3   
   14001c4af:	int3   
   14001c4b0:	sub    rsp,0x38
   14001c4b4:	mov    ecx,0x3
   14001c4b9:	call   0x140027020
   14001c4be:	cmp    eax,0x1
   14001c4c1:	je     0x14001c4e2
   14001c4c3:	mov    ecx,0x3
   14001c4c8:	call   0x140027020
   14001c4cd:	test   eax,eax
   14001c4cf:	jne    0x14001c596
   14001c4d5:	cmp    DWORD PTR [rip+0x23abc],0x1        # 0x14003ff98
   14001c4dc:	jne    0x14001c596
   14001c4e2:	mov    QWORD PTR [rsp+0x48],rbx
   14001c4e7:	lea    rbx,[rip+0x23c72]        # 0x140040160
   14001c4ee:	mov    QWORD PTR [rsp+0x30],rdi
   14001c4f3:	mov    rax,rbx
   14001c4f6:	xor    edi,edi
   14001c4f8:	cmp    DWORD PTR [rax],0xfc
   14001c4fe:	je     0x14001c50e
   14001c500:	add    edi,0x1
   14001c503:	add    rax,0x10
   14001c507:	cmp    edi,0x17
   14001c50a:	jb     0x14001c4f8
   14001c50c:	jmp    0x14001c582
   14001c50e:	cmp    edi,0x17
   14001c511:	jae    0x14001c582
   14001c513:	mov    ecx,0x3
   14001c518:	call   0x140027020
   14001c51d:	cmp    eax,0x1
   14001c520:	je     0x14001c539
   14001c522:	mov    ecx,0x3
   14001c527:	call   0x140027020
   14001c52c:	test   eax,eax
   14001c52e:	jne    0x14001c582
   14001c530:	cmp    DWORD PTR [rip+0x23a61],0x1        # 0x14003ff98
   14001c537:	jne    0x14001c582
   14001c539:	mov    ecx,0xfffffff4
   14001c53e:	call   QWORD PTR [rip+0x14c24]        # 0x140031168
   14001c544:	test   rax,rax
   14001c547:	mov    r11,rax
   14001c54a:	je     0x14001c582
   14001c54c:	cmp    rax,0xffffffffffffffff
   14001c550:	je     0x14001c582
   14001c552:	movsxd rcx,edi
   14001c555:	xor    eax,eax
   14001c557:	lea    r9,[rsp+0x40]
   14001c55c:	add    rcx,rcx
   14001c55f:	mov    QWORD PTR [rsp+0x20],rax
   14001c564:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   14001c569:	or     rcx,0xffffffffffffffff
   14001c56d:	mov    rdi,rdx
   14001c570:	repnz scas al,BYTE PTR es:[rdi]
   14001c572:	not    rcx
   14001c575:	lea    r8,[rcx-0x1]
   14001c579:	mov    rcx,r11
   14001c57c:	call   QWORD PTR [rip+0x14ec6]        # 0x140031448
   14001c582:	mov    ecx,0xff
   14001c587:	call   0x14001c270
   14001c58c:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c591:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c596:	add    rsp,0x38
   14001c59a:	ret    
   14001c59b:	int3   
   14001c59c:	int3   
   14001c59d:	int3   
   14001c59e:	int3   
   14001c59f:	int3   
   14001c5a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c5a5:	mov    QWORD PTR [rsp+0x18],rsi
   14001c5aa:	push   rdi
   14001c5ab:	sub    rsp,0x20
   14001c5af:	mov    rsi,rdx
   14001c5b2:	mov    edi,ecx
   14001c5b4:	call   0x14001d8a0
   14001c5b9:	test   rax,rax
   14001c5bc:	mov    rbx,rax
   14001c5bf:	je     0x14001c79e
   14001c5c5:	mov    rcx,QWORD PTR [rax+0xa0]
   14001c5cc:	movsxd r8,DWORD PTR [rip+0x23da9]        # 0x14004037c
   14001c5d3:	mov    rdx,rcx
   14001c5d6:	cmp    DWORD PTR [rdx],edi
   14001c5d8:	je     0x14001c5ed
   14001c5da:	mov    rax,r8
   14001c5dd:	add    rdx,0x10
   14001c5e1:	shl    rax,0x4
   14001c5e5:	add    rax,rcx
   14001c5e8:	cmp    rdx,rax
   14001c5eb:	jb     0x14001c5d6
   14001c5ed:	mov    rax,r8
   14001c5f0:	shl    rax,0x4
   14001c5f4:	add    rax,rcx
   14001c5f7:	cmp    rdx,rax
   14001c5fa:	jae    0x14001c79e
   14001c600:	cmp    DWORD PTR [rdx],edi
   14001c602:	jne    0x14001c79e
   14001c608:	mov    r9,QWORD PTR [rdx+0x8]
   14001c60c:	test   r9,r9
   14001c60f:	je     0x14001c79e
   14001c615:	cmp    r9,0x5
   14001c619:	jne    0x14001c636
   14001c61b:	xor    r8d,r8d
   14001c61e:	lea    eax,[r9-0x4]
   14001c622:	mov    QWORD PTR [rdx+0x8],r8
   14001c626:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c62b:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c630:	add    rsp,0x20
   14001c634:	pop    rdi
   14001c635:	ret    
   14001c636:	cmp    r9,0x1
   14001c63a:	jne    0x14001c64f
   14001c63c:	or     eax,0xffffffff
   14001c63f:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c644:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c649:	add    rsp,0x20
   14001c64d:	pop    rdi
   14001c64e:	ret    
   14001c64f:	mov    QWORD PTR [rsp+0x30],rbp
   14001c654:	mov    rbp,QWORD PTR [rbx+0xa8]
   14001c65b:	mov    QWORD PTR [rbx+0xa8],rsi
   14001c662:	mov    ecx,DWORD PTR [rdx+0x4]
   14001c665:	cmp    ecx,0x8
   14001c668:	jne    0x14001c775
   14001c66e:	movsxd r10,DWORD PTR [rip+0x23cfb]        # 0x140040370
   14001c675:	mov    ecx,DWORD PTR [rip+0x23cf9]        # 0x140040374
   14001c67b:	add    ecx,r10d
   14001c67e:	mov    r11,r10
   14001c681:	cmp    r10d,ecx
   14001c684:	jge    0x14001c6b7
   14001c686:	shl    r11,0x4
   14001c68a:	xor    r8d,r8d
   14001c68d:	data16 xchg ax,ax
   14001c690:	mov    rax,QWORD PTR [rbx+0xa0]
   14001c697:	add    r10d,0x1
   14001c69b:	add    r11,0x10
   14001c69f:	mov    QWORD PTR [r11+rax*1-0x8],r8
   14001c6a4:	mov    ecx,DWORD PTR [rip+0x23cca]        # 0x140040374
   14001c6aa:	mov    eax,DWORD PTR [rip+0x23cc0]        # 0x140040370
   14001c6b0:	add    ecx,eax
   14001c6b2:	cmp    r10d,ecx
   14001c6b5:	jl     0x14001c690
   14001c6b7:	mov    eax,DWORD PTR [rdx]
   14001c6b9:	mov    edi,DWORD PTR [rbx+0xb0]
   14001c6bf:	cmp    eax,0xc000008e
   14001c6c4:	jne    0x14001c6d2
   14001c6c6:	mov    DWORD PTR [rbx+0xb0],0x83
   14001c6d0:	jmp    0x14001c742
   14001c6d2:	cmp    eax,0xc0000090
   14001c6d7:	jne    0x14001c6e5
   14001c6d9:	mov    DWORD PTR [rbx+0xb0],0x81
   14001c6e3:	jmp    0x14001c742
   14001c6e5:	cmp    eax,0xc0000091
   14001c6ea:	jne    0x14001c6f8
   14001c6ec:	mov    DWORD PTR [rbx+0xb0],0x84
   14001c6f6:	jmp    0x14001c742
   14001c6f8:	cmp    eax,0xc0000093
   14001c6fd:	jne    0x14001c70b
   14001c6ff:	mov    DWORD PTR [rbx+0xb0],0x85
   14001c709:	jmp    0x14001c742
   14001c70b:	cmp    eax,0xc000008d
   14001c710:	jne    0x14001c71e
   14001c712:	mov    DWORD PTR [rbx+0xb0],0x82
   14001c71c:	jmp    0x14001c742
   14001c71e:	cmp    eax,0xc000008f
   14001c723:	jne    0x14001c731
   14001c725:	mov    DWORD PTR [rbx+0xb0],0x86
   14001c72f:	jmp    0x14001c742
   14001c731:	cmp    eax,0xc0000092
   14001c736:	jne    0x14001c742
   14001c738:	mov    DWORD PTR [rbx+0xb0],0x8a
   14001c742:	mov    edx,DWORD PTR [rbx+0xb0]
   14001c748:	mov    ecx,0x8
   14001c74d:	call   r9
   14001c750:	mov    QWORD PTR [rbx+0xa8],rbp
   14001c757:	mov    rbp,QWORD PTR [rsp+0x30]
   14001c75c:	mov    DWORD PTR [rbx+0xb0],edi
   14001c762:	or     eax,0xffffffff
   14001c765:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c76a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c76f:	add    rsp,0x20
   14001c773:	pop    rdi
   14001c774:	ret    
   14001c775:	xor    r8d,r8d
   14001c778:	mov    QWORD PTR [rdx+0x8],r8
   14001c77c:	call   r9
   14001c77f:	mov    QWORD PTR [rbx+0xa8],rbp
   14001c786:	mov    rbp,QWORD PTR [rsp+0x30]
   14001c78b:	or     eax,0xffffffff
   14001c78e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c793:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c798:	add    rsp,0x20
   14001c79c:	pop    rdi
   14001c79d:	ret    
   14001c79e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c7a3:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c7a8:	xor    eax,eax
   14001c7aa:	add    rsp,0x20
   14001c7ae:	pop    rdi
   14001c7af:	ret    
   14001c7b0:	mov    rcx,QWORD PTR [rip+0x2b1d1]        # 0x140047988
   14001c7b7:	lea    rax,[rip+0x19f42]        # 0x140036700
   14001c7be:	xor    edx,edx
   14001c7c0:	test   rcx,rcx
   14001c7c3:	cmove  rcx,rax
   14001c7c7:	movzx  eax,WORD PTR [rcx]
   14001c7ca:	cmp    ax,0x20
   14001c7ce:	ja     0x14001c7d9
   14001c7d0:	test   ax,ax
   14001c7d3:	je     0x14001c809
   14001c7d5:	test   edx,edx
   14001c7d7:	je     0x14001c7ee
   14001c7d9:	cmp    ax,0x22
   14001c7dd:	jne    0x14001c7e8
   14001c7df:	xor    eax,eax
   14001c7e1:	test   edx,edx
   14001c7e3:	sete   al
   14001c7e6:	mov    edx,eax
   14001c7e8:	add    rcx,0x2
   14001c7ec:	jmp    0x14001c7c7
   14001c7ee:	movzx  eax,WORD PTR [rcx]
   14001c7f1:	test   ax,ax
   14001c7f4:	je     0x14001c809
   14001c7f6:	cmp    ax,0x20
   14001c7fa:	ja     0x14001c809
   14001c7fc:	mov    ax,WORD PTR [rcx+0x2]
   14001c800:	add    rcx,0x2
   14001c804:	test   ax,ax
   14001c807:	jne    0x14001c7f6
   14001c809:	mov    rax,rcx
   14001c80c:	ret    
   14001c80d:	int3   
   14001c80e:	int3   
   14001c80f:	int3   
   14001c810:	push   r12
   14001c812:	sub    rsp,0x30
   14001c816:	mov    rdx,QWORD PTR [rip+0x28ca3]        # 0x1400454c0
   14001c81d:	xor    r12d,r12d
   14001c820:	test   rdx,rdx
   14001c823:	mov    r8d,r12d
   14001c826:	jne    0x14001c832
   14001c828:	or     eax,0xffffffff
   14001c82b:	add    rsp,0x30
   14001c82f:	pop    r12
   14001c831:	ret    
   14001c832:	movzx  eax,WORD PTR [rdx]
   14001c835:	mov    QWORD PTR [rsp+0x50],rsi
   14001c83a:	mov    QWORD PTR [rsp+0x58],rdi
   14001c83f:	test   ax,ax
   14001c842:	je     0x14001c869
   14001c844:	cmp    ax,0x3d
   14001c848:	je     0x14001c84e
   14001c84a:	add    r8d,0x1
   14001c84e:	xor    eax,eax
   14001c850:	or     rcx,0xffffffffffffffff
   14001c854:	mov    rdi,rdx
   14001c857:	repnz scas ax,WORD PTR es:[rdi]
   14001c85a:	not    rcx
   14001c85d:	lea    rdx,[rdx+rcx*2]
   14001c861:	mov    ax,WORD PTR [rdx]
   14001c864:	test   ax,ax
   14001c867:	jne    0x14001c844
   14001c869:	lea    eax,[r8+0x1]
   14001c86d:	mov    edx,0x8
   14001c872:	movsxd rcx,eax
   14001c875:	call   0x140021720
   14001c87a:	test   rax,rax
   14001c87d:	mov    rsi,rax
   14001c880:	mov    QWORD PTR [rip+0x28c89],rax        # 0x140045510
   14001c887:	jne    0x14001c89d
   14001c889:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c88e:	mov    rdi,QWORD PTR [rsp+0x58]
   14001c893:	or     eax,0xffffffff
   14001c896:	add    rsp,0x30
   14001c89a:	pop    r12
   14001c89c:	ret    
   14001c89d:	mov    QWORD PTR [rsp+0x40],rbx
   14001c8a2:	mov    rbx,QWORD PTR [rip+0x28c17]        # 0x1400454c0
   14001c8a9:	mov    QWORD PTR [rsp+0x48],rbp
   14001c8ae:	movzx  edx,WORD PTR [rbx]
   14001c8b1:	test   dx,dx
   14001c8b4:	je     0x14001c92c
   14001c8b6:	data16 data16 xchg ax,ax
   14001c8ba:	data16 xchg ax,ax
   14001c8bd:	data16 xchg ax,ax
   14001c8c0:	or     rcx,0xffffffffffffffff
   14001c8c4:	xor    eax,eax
   14001c8c6:	mov    rdi,rbx
   14001c8c9:	repnz scas ax,WORD PTR es:[rdi]
   14001c8cc:	cmp    dx,0x3d
   14001c8d0:	not    rcx
   14001c8d3:	movsxd rdi,ecx
   14001c8d6:	je     0x14001c918
   14001c8d8:	movsxd rbp,ecx
   14001c8db:	lea    edx,[rax+0x2]
   14001c8de:	mov    rcx,rbp
   14001c8e1:	call   0x140021720
   14001c8e6:	test   rax,rax
   14001c8e9:	mov    QWORD PTR [rsi],rax
   14001c8ec:	je     0x14001c965
   14001c8ee:	mov    r8,rbx
   14001c8f1:	mov    rdx,rbp
   14001c8f4:	mov    rcx,rax
   14001c8f7:	call   0x14001a690
   14001c8fc:	test   eax,eax
   14001c8fe:	je     0x14001c914
   14001c900:	xor    r9d,r9d
   14001c903:	xor    r8d,r8d
   14001c906:	xor    edx,edx
   14001c908:	xor    ecx,ecx
   14001c90a:	mov    QWORD PTR [rsp+0x20],r12
   14001c90f:	call   0x14001dd90
   14001c914:	add    rsi,0x8
   14001c918:	mov    dx,WORD PTR [rbx+rdi*2]
   14001c91c:	lea    rbx,[rbx+rdi*2]
   14001c920:	test   dx,dx
   14001c923:	jne    0x14001c8c0
   14001c925:	mov    rbx,QWORD PTR [rip+0x28b94]        # 0x1400454c0
   14001c92c:	mov    rcx,rbx
   14001c92f:	call   0x14001a540
   14001c934:	mov    QWORD PTR [rip+0x28b85],r12        # 0x1400454c0
   14001c93b:	mov    QWORD PTR [rsi],r12
   14001c93e:	mov    DWORD PTR [rip+0x2b018],0x1        # 0x140047960
   14001c948:	xor    eax,eax
   14001c94a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c94f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c954:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c959:	mov    rdi,QWORD PTR [rsp+0x58]
   14001c95e:	add    rsp,0x30
   14001c962:	pop    r12
   14001c964:	ret    
   14001c965:	mov    rcx,QWORD PTR [rip+0x28ba4]        # 0x140045510
   14001c96c:	call   0x14001a540
   14001c971:	mov    QWORD PTR [rip+0x28b98],r12        # 0x140045510
   14001c978:	or     eax,0xffffffff
   14001c97b:	jmp    0x14001c94a
   14001c97d:	int3   
   14001c97e:	int3   
   14001c97f:	int3   
   14001c980:	mov    QWORD PTR [rsp+0x8],rbx
   14001c985:	mov    QWORD PTR [rsp+0x10],rdi
   14001c98a:	test   rdx,rdx
   14001c98d:	mov    r11,QWORD PTR [rsp+0x28]
   14001c992:	mov    rdi,r9
   14001c995:	mov    DWORD PTR [r11],0x0
   14001c99c:	mov    rbx,rdx
   14001c99f:	mov    r10,rcx
   14001c9a2:	mov    DWORD PTR [r9],0x1
   14001c9a9:	je     0x14001c9b2
   14001c9ab:	mov    QWORD PTR [rdx],r8
   14001c9ae:	add    rbx,0x8
   14001c9b2:	xor    ecx,ecx
   14001c9b4:	cmp    WORD PTR [r10],0x22
   14001c9b9:	jne    0x14001c9ce
   14001c9bb:	xor    eax,eax
   14001c9bd:	test   ecx,ecx
   14001c9bf:	sete   al
   14001c9c2:	add    r10,0x2
   14001c9c6:	mov    ecx,eax
   14001c9c8:	mov    ax,0x22
   14001c9cc:	jmp    0x14001c9f1
   14001c9ce:	add    DWORD PTR [r11],0x1
   14001c9d2:	test   r8,r8
   14001c9d5:	je     0x14001c9e4
   14001c9d7:	movzx  eax,WORD PTR [r10]
   14001c9db:	add    r8,0x2
   14001c9df:	mov    WORD PTR [r8-0x2],ax
   14001c9e4:	movzx  eax,WORD PTR [r10]
   14001c9e8:	add    r10,0x2
   14001c9ec:	test   ax,ax
   14001c9ef:	je     0x14001ca0f
   14001c9f1:	test   ecx,ecx
   14001c9f3:	jne    0x14001c9b4
   14001c9f5:	cmp    ax,0x20
   14001c9f9:	je     0x14001ca01
   14001c9fb:	cmp    ax,0x9
   14001c9ff:	jne    0x14001c9b4
   14001ca01:	test   r8,r8
   14001ca04:	je     0x14001ca13
   14001ca06:	mov    WORD PTR [r8-0x2],0x0
   14001ca0d:	jmp    0x14001ca13
   14001ca0f:	sub    r10,0x2
   14001ca13:	xor    r9d,r9d
   14001ca16:	data16 data16 xchg ax,ax
   14001ca1a:	data16 xchg ax,ax
   14001ca1d:	data16 xchg ax,ax
   14001ca20:	cmp    WORD PTR [r10],0x0
   14001ca25:	je     0x14001cb1b
   14001ca2b:	xchg   ax,ax
   14001ca2d:	data16 xchg ax,ax
   14001ca30:	movzx  eax,WORD PTR [r10]
   14001ca34:	cmp    ax,0x20
   14001ca38:	je     0x14001ca40
   14001ca3a:	cmp    ax,0x9
   14001ca3e:	jne    0x14001ca46
   14001ca40:	add    r10,0x2
   14001ca44:	jmp    0x14001ca30
   14001ca46:	cmp    WORD PTR [r10],0x0
   14001ca4b:	je     0x14001cb1b
   14001ca51:	test   rbx,rbx
   14001ca54:	je     0x14001ca5d
   14001ca56:	mov    QWORD PTR [rbx],r8
   14001ca59:	add    rbx,0x8
   14001ca5d:	add    DWORD PTR [rdi],0x1
   14001ca60:	xor    ecx,ecx
   14001ca62:	cmp    WORD PTR [r10],0x5c
   14001ca67:	mov    edx,0x1
   14001ca6c:	jne    0x14001ca7d
   14001ca6e:	xchg   ax,ax
   14001ca70:	add    r10,0x2
   14001ca74:	add    ecx,edx
   14001ca76:	cmp    WORD PTR [r10],0x5c
   14001ca7b:	je     0x14001ca70
   14001ca7d:	cmp    WORD PTR [r10],0x22
   14001ca82:	jne    0x14001caad
   14001ca84:	test   dl,cl
   14001ca86:	jne    0x14001caab
   14001ca88:	test   r9d,r9d
   14001ca8b:	je     0x14001ca9e
   14001ca8d:	cmp    WORD PTR [r10+0x2],0x22
   14001ca93:	lea    rax,[r10+0x2]
   14001ca97:	jne    0x14001ca9e
   14001ca99:	mov    r10,rax
   14001ca9c:	jmp    0x14001caab
   14001ca9e:	xor    eax,eax
   14001caa0:	xor    edx,edx
   14001caa2:	test   r9d,r9d
   14001caa5:	sete   al
   14001caa8:	mov    r9d,eax
   14001caab:	shr    ecx,1
   14001caad:	test   ecx,ecx
   14001caaf:	je     0x14001cacb
   14001cab1:	add    ecx,0xffffffff
   14001cab4:	test   r8,r8
   14001cab7:	je     0x14001cac3
   14001cab9:	mov    WORD PTR [r8],0x5c
   14001cabf:	add    r8,0x2
   14001cac3:	add    DWORD PTR [r11],0x1
   14001cac7:	test   ecx,ecx
   14001cac9:	jne    0x14001cab1
   14001cacb:	movzx  eax,WORD PTR [r10]
   14001cacf:	test   ax,ax
   14001cad2:	je     0x14001cb03
   14001cad4:	test   r9d,r9d
   14001cad7:	jne    0x14001cae5
   14001cad9:	cmp    ax,0x20
   14001cadd:	je     0x14001cb03
   14001cadf:	cmp    ax,0x9
   14001cae3:	je     0x14001cb03
   14001cae5:	test   edx,edx
   14001cae7:	je     0x14001cafa
   14001cae9:	test   r8,r8
   14001caec:	je     0x14001caf6
   14001caee:	mov    WORD PTR [r8],ax
   14001caf2:	add    r8,0x2
   14001caf6:	add    DWORD PTR [r11],0x1
   14001cafa:	add    r10,0x2
   14001cafe:	jmp    0x14001ca60
   14001cb03:	test   r8,r8
   14001cb06:	je     0x14001cb12
   14001cb08:	mov    WORD PTR [r8],0x0
   14001cb0e:	add    r8,0x2
   14001cb12:	add    DWORD PTR [r11],0x1
   14001cb16:	jmp    0x14001ca20
   14001cb1b:	test   rbx,rbx
   14001cb1e:	je     0x14001cb27
   14001cb20:	mov    QWORD PTR [rbx],0x0
   14001cb27:	add    DWORD PTR [rdi],0x1
   14001cb2a:	mov    rbx,QWORD PTR [rsp+0x8]
   14001cb2f:	mov    rdi,QWORD PTR [rsp+0x10]
   14001cb34:	ret    
   14001cb35:	int3   
   14001cb36:	int3   
   14001cb37:	int3   
   14001cb38:	int3   
   14001cb39:	int3   
   14001cb3a:	int3   
   14001cb3b:	int3   
   14001cb3c:	int3   
   14001cb3d:	int3   
   14001cb3e:	int3   
   14001cb3f:	int3   
   14001cb40:	mov    QWORD PTR [rsp+0x18],rbx
   14001cb45:	mov    QWORD PTR [rsp+0x20],rsi
   14001cb4a:	push   rdi
   14001cb4b:	sub    rsp,0x30
   14001cb4f:	lea    rbx,[rip+0x28d0a]        # 0x140045860
   14001cb56:	mov    r8d,0x104
   14001cb5c:	xor    ecx,ecx
   14001cb5e:	mov    rdx,rbx
   14001cb61:	mov    WORD PTR [rip+0x28efe],0x0        # 0x140045a68
   14001cb6a:	call   QWORD PTR [rip+0x14860]        # 0x1400313d0
   14001cb70:	mov    rsi,QWORD PTR [rip+0x2ae11]        # 0x140047988
   14001cb77:	mov    QWORD PTR [rip+0x289aa],rbx        # 0x140045528
   14001cb7e:	test   rsi,rsi
   14001cb81:	je     0x14001cb89
   14001cb83:	cmp    WORD PTR [rsi],0x0
   14001cb87:	jne    0x14001cb8c
   14001cb89:	mov    rsi,rbx
   14001cb8c:	xor    ebx,ebx
   14001cb8e:	xor    r9d,r9d
   14001cb91:	xor    r8d,r8d
   14001cb94:	mov    rdx,rsi
   14001cb97:	xor    ecx,ecx
   14001cb99:	lea    edi,[rbx+0x1]
   14001cb9c:	mov    DWORD PTR [rsp+0x40],r9d
   14001cba1:	movzx  eax,WORD PTR [rdx]
   14001cba4:	cmp    ax,0x22
   14001cba8:	jne    0x14001cbbd
   14001cbaa:	xor    eax,eax
   14001cbac:	test   ecx,ecx
   14001cbae:	sete   al
   14001cbb1:	add    rdx,0x2
   14001cbb5:	mov    ecx,eax
   14001cbb7:	mov    ax,0x22
   14001cbbb:	jmp    0x14001cbde
   14001cbbd:	add    r9d,edi
   14001cbc0:	test   r8,r8
   14001cbc3:	mov    DWORD PTR [rsp+0x40],r9d
   14001cbc8:	je     0x14001cbd2
   14001cbca:	mov    WORD PTR [r8],ax
   14001cbce:	add    r8,0x2
   14001cbd2:	movzx  eax,WORD PTR [rdx]
   14001cbd5:	add    rdx,0x2
   14001cbd9:	test   ax,ax
   14001cbdc:	je     0x14001cbfa
   14001cbde:	test   ecx,ecx
   14001cbe0:	jne    0x14001cba1
   14001cbe2:	cmp    ax,0x20
   14001cbe6:	je     0x14001cbee
   14001cbe8:	cmp    ax,0x9
   14001cbec:	jne    0x14001cba1
   14001cbee:	test   r8,r8
   14001cbf1:	je     0x14001cbfe
   14001cbf3:	mov    WORD PTR [r8-0x2],bx
   14001cbf8:	jmp    0x14001cbfe
   14001cbfa:	sub    rdx,0x2
   14001cbfe:	xor    r11d,r11d
   14001cc01:	cmp    WORD PTR [rdx],0x0
   14001cc05:	je     0x14001ccff
   14001cc0b:	xchg   ax,ax
   14001cc0d:	data16 xchg ax,ax
   14001cc10:	movzx  eax,WORD PTR [rdx]
   14001cc13:	cmp    ax,0x20
   14001cc17:	je     0x14001cc1f
   14001cc19:	cmp    ax,0x9
   14001cc1d:	jne    0x14001cc25
   14001cc1f:	add    rdx,0x2
   14001cc23:	jmp    0x14001cc10
   14001cc25:	cmp    WORD PTR [rdx],0x0
   14001cc29:	je     0x14001ccff
   14001cc2f:	test   rbx,rbx
   14001cc32:	je     0x14001cc3b
   14001cc34:	mov    QWORD PTR [rbx],r8
   14001cc37:	add    rbx,0x8
   14001cc3b:	add    edi,0x1
   14001cc3e:	xchg   ax,ax
   14001cc40:	xor    ecx,ecx
   14001cc42:	cmp    WORD PTR [rdx],0x5c
   14001cc46:	lea    r10d,[rcx+0x1]
   14001cc4a:	jne    0x14001cc5d
   14001cc4c:	data16 data16 xchg ax,ax
   14001cc50:	add    rdx,0x2
   14001cc54:	add    ecx,r10d
   14001cc57:	cmp    WORD PTR [rdx],0x5c
   14001cc5b:	je     0x14001cc50
   14001cc5d:	cmp    WORD PTR [rdx],0x22
   14001cc61:	jne    0x14001cc8d
   14001cc63:	test   r10b,cl
   14001cc66:	jne    0x14001cc8b
   14001cc68:	test   r11d,r11d
   14001cc6b:	je     0x14001cc7d
   14001cc6d:	cmp    WORD PTR [rdx+0x2],0x22
   14001cc72:	lea    rax,[rdx+0x2]
   14001cc76:	jne    0x14001cc7d
   14001cc78:	mov    rdx,rax
   14001cc7b:	jmp    0x14001cc8b
   14001cc7d:	xor    eax,eax
   14001cc7f:	xor    r10d,r10d
   14001cc82:	test   r11d,r11d
   14001cc85:	sete   al
   14001cc88:	mov    r11d,eax
   14001cc8b:	shr    ecx,1
   14001cc8d:	test   ecx,ecx
   14001cc8f:	je     0x14001ccaa
   14001cc91:	add    r9d,ecx
   14001cc94:	add    ecx,0xffffffff
   14001cc97:	test   r8,r8
   14001cc9a:	je     0x14001cca6
   14001cc9c:	mov    WORD PTR [r8],0x5c
   14001cca2:	add    r8,0x2
   14001cca6:	test   ecx,ecx
   14001cca8:	jne    0x14001cc94
   14001ccaa:	movzx  eax,WORD PTR [rdx]
   14001ccad:	test   ax,ax
   14001ccb0:	je     0x14001cce2
   14001ccb2:	test   r11d,r11d
   14001ccb5:	jne    0x14001ccc3
   14001ccb7:	cmp    ax,0x20
   14001ccbb:	je     0x14001cce2
   14001ccbd:	cmp    ax,0x9
   14001ccc1:	je     0x14001cce2
   14001ccc3:	test   r10d,r10d
   14001ccc6:	je     0x14001ccd9
   14001ccc8:	test   r8,r8
   14001cccb:	je     0x14001ccd5
   14001cccd:	mov    WORD PTR [r8],ax
   14001ccd1:	add    r8,0x2
   14001ccd5:	add    r9d,0x1
   14001ccd9:	add    rdx,0x2
   14001ccdd:	jmp    0x14001cc40
   14001cce2:	test   r8,r8
   14001cce5:	je     0x14001ccf1
   14001cce7:	mov    WORD PTR [r8],0x0
   14001cced:	add    r8,0x2
   14001ccf1:	add    r9d,0x1
   14001ccf5:	mov    DWORD PTR [rsp+0x40],r9d
   14001ccfa:	jmp    0x14001cc01
   14001ccff:	test   rbx,rbx
   14001cd02:	je     0x14001cd0b
   14001cd04:	mov    QWORD PTR [rbx],0x0
   14001cd0b:	add    edi,0x1
   14001cd0e:	movabs rax,0x1fffffffffffffff
   14001cd18:	mov    DWORD PTR [rsp+0x48],edi
   14001cd1c:	movsxd rdi,edi
   14001cd1f:	cmp    rdi,rax
   14001cd22:	jae    0x14001cd99
   14001cd24:	movsxd rax,r9d
   14001cd27:	movabs rcx,0x7fffffffffffffff
   14001cd31:	cmp    rax,rcx
   14001cd34:	jae    0x14001cd99
   14001cd36:	lea    rcx,[rax+rdi*4]
   14001cd3a:	add    rax,rax
   14001cd3d:	add    rcx,rcx
   14001cd40:	cmp    rcx,rax
   14001cd43:	jb     0x14001cd99
   14001cd45:	call   0x1400216b0
   14001cd4a:	test   rax,rax
   14001cd4d:	mov    rbx,rax
   14001cd50:	je     0x14001cd99
   14001cd52:	lea    r8,[rax+rdi*8]
   14001cd56:	lea    rax,[rsp+0x40]
   14001cd5b:	lea    r9,[rsp+0x48]
   14001cd60:	mov    rdx,rbx
   14001cd63:	mov    rcx,rsi
   14001cd66:	mov    QWORD PTR [rsp+0x20],rax
   14001cd6b:	call   0x14001c980
   14001cd70:	mov    r11d,DWORD PTR [rsp+0x48]
   14001cd75:	mov    QWORD PTR [rip+0x2877c],rbx        # 0x1400454f8
   14001cd7c:	add    r11d,0xffffffff
   14001cd80:	xor    eax,eax
   14001cd82:	mov    DWORD PTR [rip+0x2875f],r11d        # 0x1400454e8
   14001cd89:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cd8e:	mov    rsi,QWORD PTR [rsp+0x58]
   14001cd93:	add    rsp,0x30
   14001cd97:	pop    rdi
   14001cd98:	ret    
   14001cd99:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cd9e:	mov    rsi,QWORD PTR [rsp+0x58]
   14001cda3:	or     eax,0xffffffff
   14001cda6:	add    rsp,0x30
   14001cdaa:	pop    rdi
   14001cdab:	ret    
   14001cdac:	int3   
   14001cdad:	int3   
   14001cdae:	int3   
   14001cdaf:	int3   
   14001cdb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001cdb5:	mov    QWORD PTR [rsp+0x18],rbp
   14001cdba:	push   rsi
   14001cdbb:	push   rdi
   14001cdbc:	push   r12
   14001cdbe:	sub    rsp,0x30
   14001cdc2:	mov    eax,DWORD PTR [rip+0x28ca4]        # 0x140045a6c
   14001cdc8:	xor    r12d,r12d
   14001cdcb:	test   eax,eax
   14001cdcd:	mov    ebp,r12d
   14001cdd0:	jne    0x14001ce0c
   14001cdd2:	call   QWORD PTR [rip+0x143b8]        # 0x140031190
   14001cdd8:	test   rax,rax
   14001cddb:	mov    rdi,rax
   14001cdde:	je     0x14001cdec
   14001cde0:	mov    DWORD PTR [rip+0x28c82],0x1        # 0x140045a6c
   14001cdea:	jmp    0x14001ce1f
   14001cdec:	call   QWORD PTR [rip+0x14686]        # 0x140031478
   14001cdf2:	cmp    eax,0x78
   14001cdf5:	jne    0x14001ce06
   14001cdf7:	mov    DWORD PTR [rip+0x28c6b],0x2        # 0x140045a6c
   14001ce01:	jmp    0x14001ce89
   14001ce06:	mov    eax,DWORD PTR [rip+0x28c60]        # 0x140045a6c
   14001ce0c:	cmp    eax,0x1
   14001ce0f:	jne    0x14001ce80
   14001ce11:	call   QWORD PTR [rip+0x14379]        # 0x140031190
   14001ce17:	test   rax,rax
   14001ce1a:	mov    rdi,rax
   14001ce1d:	je     0x14001ce5a
   14001ce1f:	cmp    WORD PTR [rdi],bp
   14001ce22:	mov    rax,rdi
   14001ce25:	je     0x14001ce39
   14001ce27:	add    rax,0x2
   14001ce2b:	cmp    WORD PTR [rax],bp
   14001ce2e:	jne    0x14001ce27
   14001ce30:	add    rax,0x2
   14001ce34:	cmp    WORD PTR [rax],bp
   14001ce37:	jne    0x14001ce27
   14001ce39:	sub    eax,edi
   14001ce3b:	add    eax,0x2
   14001ce3e:	movsxd rsi,eax
   14001ce41:	mov    rcx,rsi
   14001ce44:	call   0x1400216b0
   14001ce49:	test   rax,rax
   14001ce4c:	mov    rbx,rax
   14001ce4f:	jne    0x14001ce61
   14001ce51:	mov    rcx,rdi
   14001ce54:	call   QWORD PTR [rip+0x1432e]        # 0x140031188
   14001ce5a:	xor    eax,eax
   14001ce5c:	jmp    0x14001cf7b
   14001ce61:	mov    r8,rsi
   14001ce64:	mov    rdx,rdi
   14001ce67:	mov    rcx,rax
   14001ce6a:	call   0x14001baf0
   14001ce6f:	mov    rcx,rdi
   14001ce72:	call   QWORD PTR [rip+0x14310]        # 0x140031188
   14001ce78:	mov    rax,rbx
   14001ce7b:	jmp    0x14001cf7b
   14001ce80:	cmp    eax,0x2
   14001ce83:	je     0x14001ce89
   14001ce85:	test   eax,eax
   14001ce87:	jne    0x14001ce5a
   14001ce89:	call   QWORD PTR [rip+0x142f1]        # 0x140031180
   14001ce8f:	test   rax,rax
   14001ce92:	mov    rsi,rax
   14001ce95:	je     0x14001ce5a
   14001ce97:	cmp    BYTE PTR [rax],bpl
   14001ce9a:	mov    rbx,rax
   14001ce9d:	je     0x14001ced8
   14001ce9f:	nop
   14001cea0:	or     r9d,0xffffffff
   14001cea4:	mov    r8,rbx
   14001cea7:	xor    ecx,ecx
   14001cea9:	lea    edx,[r9+0x2]
   14001cead:	mov    DWORD PTR [rsp+0x28],r12d
   14001ceb2:	mov    QWORD PTR [rsp+0x20],r12
   14001ceb7:	call   QWORD PTR [rip+0x14593]        # 0x140031450
   14001cebd:	test   eax,eax
   14001cebf:	je     0x14001ce5a
   14001cec1:	or     rcx,0xffffffffffffffff
   14001cec5:	add    ebp,eax
   14001cec7:	mov    rdi,rbx
   14001ceca:	xor    eax,eax
   14001cecc:	repnz scas al,BYTE PTR es:[rdi]
   14001cece:	not    rcx
   14001ced1:	add    rbx,rcx
   14001ced4:	cmp    BYTE PTR [rbx],al
   14001ced6:	jne    0x14001cea0
   14001ced8:	add    ebp,0x1
   14001cedb:	mov    edx,0x2
   14001cee0:	movsxd rcx,ebp
   14001cee3:	call   0x140021720
   14001cee8:	test   rax,rax
   14001ceeb:	mov    r12,rax
   14001ceee:	jne    0x14001cefd
   14001cef0:	mov    rcx,rsi
   14001cef3:	call   QWORD PTR [rip+0x1427f]        # 0x140031178
   14001cef9:	xor    eax,eax
   14001cefb:	jmp    0x14001cf7b
   14001cefd:	cmp    BYTE PTR [rsi],0x0
   14001cf00:	mov    QWORD PTR [rsp+0x50],r13
   14001cf05:	mov    rbx,rax
   14001cf08:	mov    r13,rsi
   14001cf0b:	je     0x14001cf65
   14001cf0d:	data16 xchg ax,ax
   14001cf10:	or     r9d,0xffffffff
   14001cf14:	mov    eax,ebp
   14001cf16:	mov    rcx,rbx
   14001cf19:	sub    rcx,r12
   14001cf1c:	lea    edx,[r9+0x2]
   14001cf20:	mov    r8,r13
   14001cf23:	sar    rcx,1
   14001cf26:	sub    eax,ecx
   14001cf28:	xor    ecx,ecx
   14001cf2a:	mov    DWORD PTR [rsp+0x28],eax
   14001cf2e:	mov    QWORD PTR [rsp+0x20],rbx
   14001cf33:	call   QWORD PTR [rip+0x14517]        # 0x140031450
   14001cf39:	test   eax,eax
   14001cf3b:	je     0x14001cf8e
   14001cf3d:	or     rcx,0xffffffffffffffff
   14001cf41:	xor    eax,eax
   14001cf43:	mov    rdi,r13
   14001cf46:	repnz scas al,BYTE PTR es:[rdi]
   14001cf48:	mov    rdi,rbx
   14001cf4b:	not    rcx
   14001cf4e:	add    r13,rcx
   14001cf51:	or     rcx,0xffffffffffffffff
   14001cf55:	repnz scas ax,WORD PTR es:[rdi]
   14001cf58:	cmp    BYTE PTR [r13+0x0],al
   14001cf5c:	not    rcx
   14001cf5f:	lea    rbx,[rbx+rcx*2]
   14001cf63:	jne    0x14001cf10
   14001cf65:	mov    rcx,rsi
   14001cf68:	mov    WORD PTR [rbx],0x0
   14001cf6d:	call   QWORD PTR [rip+0x14205]        # 0x140031178
   14001cf73:	mov    rax,r12
   14001cf76:	mov    r13,QWORD PTR [rsp+0x50]
   14001cf7b:	mov    rbx,QWORD PTR [rsp+0x58]
   14001cf80:	mov    rbp,QWORD PTR [rsp+0x60]
   14001cf85:	add    rsp,0x30
   14001cf89:	pop    r12
   14001cf8b:	pop    rdi
   14001cf8c:	pop    rsi
   14001cf8d:	ret    
   14001cf8e:	mov    rcx,r12
   14001cf91:	call   0x14001a540
   14001cf96:	mov    rcx,rsi
   14001cf99:	call   QWORD PTR [rip+0x141d9]        # 0x140031178
   14001cf9f:	xor    eax,eax
   14001cfa1:	jmp    0x14001cf76
   14001cfa3:	int3   
   14001cfa4:	int3   
   14001cfa5:	int3   
   14001cfa6:	int3   
   14001cfa7:	int3   
   14001cfa8:	int3   
   14001cfa9:	int3   
   14001cfaa:	int3   
   14001cfab:	int3   
   14001cfac:	int3   
   14001cfad:	int3   
   14001cfae:	int3   
   14001cfaf:	int3   
   14001cfb0:	sub    rsp,0x38
   14001cfb4:	mov    eax,DWORD PTR [rip+0x28ab6]        # 0x140045a70
   14001cfba:	test   eax,eax
   14001cfbc:	jne    0x14001cffc
   14001cfbe:	call   QWORD PTR [rip+0x141dc]        # 0x1400311a0
   14001cfc4:	test   rax,rax
   14001cfc7:	je     0x14001cfde
   14001cfc9:	mov    DWORD PTR [rip+0x28a9d],0x1        # 0x140045a70
   14001cfd3:	add    rsp,0x38
   14001cfd7:	rex.W jmp QWORD PTR [rip+0x141c2]        # 0x1400311a0
   14001cfde:	call   QWORD PTR [rip+0x14494]        # 0x140031478
   14001cfe4:	cmp    eax,0x78
   14001cfe7:	jne    0x14001cff5
   14001cfe9:	mov    DWORD PTR [rip+0x28a7d],0x2        # 0x140045a70
   14001cff3:	jmp    0x14001d011
   14001cff5:	xor    eax,eax
   14001cff7:	add    rsp,0x38
   14001cffb:	ret    
   14001cffc:	cmp    eax,0x1
   14001cfff:	jne    0x14001d00c
   14001d001:	add    rsp,0x38
   14001d005:	rex.W jmp QWORD PTR [rip+0x14194]        # 0x1400311a0
   14001d00c:	cmp    eax,0x2
   14001d00f:	jne    0x14001cff5
   14001d011:	mov    QWORD PTR [rsp+0x48],rsi
   14001d016:	mov    QWORD PTR [rsp+0x30],rdi
   14001d01b:	call   QWORD PTR [rip+0x14177]        # 0x140031198
   14001d021:	mov    rsi,rax
   14001d024:	xor    eax,eax
   14001d026:	or     r9d,0xffffffff
   14001d02a:	mov    DWORD PTR [rsp+0x28],eax
   14001d02e:	lea    edx,[rax+0x1]
   14001d031:	mov    r8,rsi
   14001d034:	xor    ecx,ecx
   14001d036:	mov    QWORD PTR [rsp+0x20],rax
   14001d03b:	call   QWORD PTR [rip+0x1440f]        # 0x140031450
   14001d041:	test   eax,eax
   14001d043:	movsxd rdi,eax
   14001d046:	jne    0x14001d059
   14001d048:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d04d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d052:	xor    eax,eax
   14001d054:	add    rsp,0x38
   14001d058:	ret    
   14001d059:	mov    rcx,rdi
   14001d05c:	mov    edx,0x2
   14001d061:	mov    QWORD PTR [rsp+0x40],rbx
   14001d066:	call   0x140021720
   14001d06b:	test   rax,rax
   14001d06e:	mov    rbx,rax
   14001d071:	je     0x14001d0b2
   14001d073:	or     r9d,0xffffffff
   14001d077:	mov    r8,rsi
   14001d07a:	xor    ecx,ecx
   14001d07c:	lea    edx,[r9+0x2]
   14001d080:	mov    DWORD PTR [rsp+0x28],edi
   14001d084:	mov    QWORD PTR [rsp+0x20],rax
   14001d089:	call   QWORD PTR [rip+0x143c1]        # 0x140031450
   14001d08f:	test   eax,eax
   14001d091:	je     0x14001d0aa
   14001d093:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d098:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d09d:	mov    rax,rbx
   14001d0a0:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d0a5:	add    rsp,0x38
   14001d0a9:	ret    
   14001d0aa:	mov    rcx,rbx
   14001d0ad:	call   0x14001a540
   14001d0b2:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d0b7:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d0bc:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d0c1:	xor    eax,eax
   14001d0c3:	add    rsp,0x38
   14001d0c7:	ret    
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0d5:	mov    QWORD PTR [rsp+0x10],rsi
   14001d0da:	mov    QWORD PTR [rsp+0x18],rdi
   14001d0df:	mov    QWORD PTR [rsp+0x20],r12
   14001d0e4:	push   r13
   14001d0e6:	push   r14
   14001d0e8:	push   r15
   14001d0ea:	sub    rsp,0x90
   14001d0f1:	lea    rcx,[rsp+0x20]
   14001d0f6:	call   QWORD PTR [rip+0x140bc]        # 0x1400311b8
   14001d0fc:	nop
   14001d0fd:	mov    edx,0x50
   14001d102:	lea    ecx,[rdx-0x30]
   14001d105:	call   0x140021720
   14001d10a:	mov    r11,rax
   14001d10d:	test   rax,rax
   14001d110:	jne    0x14001d11a
   14001d112:	or     eax,0xffffffff
   14001d115:	jmp    0x14001d3bc
   14001d11a:	mov    QWORD PTR [rip+0x2a63f],rax        # 0x140047760
   14001d121:	mov    ecx,0x20
   14001d126:	mov    DWORD PTR [rip+0x2a61c],ecx        # 0x140047748
   14001d12c:	add    rax,0xa00
   14001d132:	cmp    r11,rax
   14001d135:	jae    0x14001d180
   14001d137:	xor    r12d,r12d
   14001d13a:	data16 xchg ax,ax
   14001d13d:	data16 xchg ax,ax
   14001d140:	mov    BYTE PTR [r11+0x8],r12b
   14001d144:	mov    QWORD PTR [r11],0xffffffffffffffff
   14001d14b:	mov    BYTE PTR [r11+0x9],0xa
   14001d150:	mov    DWORD PTR [r11+0xc],r12d
   14001d154:	mov    BYTE PTR [r11+0x38],r12b
   14001d158:	mov    BYTE PTR [r11+0x39],0xa
   14001d15d:	mov    BYTE PTR [r11+0x3a],0xa
   14001d162:	add    r11,0x50
   14001d166:	mov    rax,QWORD PTR [rip+0x2a5f3]        # 0x140047760
   14001d16d:	add    rax,0xa00
   14001d173:	cmp    r11,rax
   14001d176:	jb     0x14001d140
   14001d178:	mov    ecx,DWORD PTR [rip+0x2a5ca]        # 0x140047748
   14001d17e:	jmp    0x14001d183
   14001d180:	xor    r12d,r12d
   14001d183:	cmp    WORD PTR [rsp+0x62],0x0
   14001d189:	je     0x14001d2e1
   14001d18f:	mov    r14,QWORD PTR [rsp+0x68]
   14001d194:	test   r14,r14
   14001d197:	je     0x14001d2e1
   14001d19d:	movsxd rax,DWORD PTR [r14]
   14001d1a0:	add    r14,0x4
   14001d1a4:	lea    r13,[r14+rax*1]
   14001d1a8:	mov    r15d,0x800
   14001d1ae:	cmp    eax,r15d
   14001d1b1:	cmovl  r15d,eax
   14001d1b5:	mov    ebx,0x1
   14001d1ba:	cmp    ecx,r15d
   14001d1bd:	jge    0x14001d255
   14001d1c3:	lea    rdi,[rip+0x2a596]        # 0x140047760
   14001d1ca:	data16 xchg ax,ax
   14001d1cd:	data16 xchg ax,ax
   14001d1d0:	mov    edx,0x50
   14001d1d5:	lea    ecx,[rdx-0x30]
   14001d1d8:	call   0x140021720
   14001d1dd:	mov    r11,rax
   14001d1e0:	test   rax,rax
   14001d1e3:	je     0x14001d24c
   14001d1e5:	mov    QWORD PTR [rdi+rbx*8],rax
   14001d1e9:	mov    eax,DWORD PTR [rip+0x2a559]        # 0x140047748
   14001d1ef:	add    eax,0x20
   14001d1f2:	mov    DWORD PTR [rip+0x2a550],eax        # 0x140047748
   14001d1f8:	lea    rcx,[r11+0xa00]
   14001d1ff:	cmp    r11,rcx
   14001d202:	jae    0x14001d241
   14001d204:	mov    BYTE PTR [r11+0x8],0x0
   14001d209:	mov    QWORD PTR [r11],0xffffffffffffffff
   14001d210:	mov    BYTE PTR [r11+0x9],0xa
   14001d215:	mov    DWORD PTR [r11+0xc],r12d
   14001d219:	and    BYTE PTR [r11+0x38],0x80
   14001d21e:	mov    BYTE PTR [r11+0x39],0xa
   14001d223:	mov    BYTE PTR [r11+0x3a],0xa
   14001d228:	add    r11,0x50
   14001d22c:	mov    rax,QWORD PTR [rdi+rbx*8]
   14001d230:	add    rax,0xa00
   14001d236:	cmp    r11,rax
   14001d239:	jb     0x14001d204
   14001d23b:	mov    eax,DWORD PTR [rip+0x2a507]        # 0x140047748
   14001d241:	add    rbx,0x1
   14001d245:	cmp    eax,r15d
   14001d248:	jl     0x14001d1d0
   14001d24a:	jmp    0x14001d25c
   14001d24c:	mov    r15d,DWORD PTR [rip+0x2a4f5]        # 0x140047748
   14001d253:	jmp    0x14001d25c
   14001d255:	lea    rdi,[rip+0x2a504]        # 0x140047760
   14001d25c:	mov    ebx,r12d
   14001d25f:	test   r15d,r15d
   14001d262:	jle    0x14001d2e1
   14001d264:	mov    rcx,QWORD PTR [r13+0x0]
   14001d268:	cmp    rcx,0xffffffffffffffff
   14001d26c:	je     0x14001d2d1
   14001d26e:	cmp    rcx,0xfffffffffffffffe
   14001d272:	je     0x14001d2d1
   14001d274:	movzx  eax,BYTE PTR [r14]
   14001d278:	test   al,0x1
   14001d27a:	je     0x14001d2d1
   14001d27c:	test   al,0x8
   14001d27e:	jne    0x14001d28a
   14001d280:	call   QWORD PTR [rip+0x13f2a]        # 0x1400311b0
   14001d286:	test   eax,eax
   14001d288:	je     0x14001d2d1
   14001d28a:	movsxd rax,ebx
   14001d28d:	mov    rcx,rax
   14001d290:	sar    rcx,0x5
   14001d294:	and    eax,0x1f
   14001d297:	lea    rsi,[rax+rax*4]
   14001d29b:	shl    rsi,0x4
   14001d29f:	add    rsi,QWORD PTR [rdi+rcx*8]
   14001d2a3:	mov    rax,QWORD PTR [r13+0x0]
   14001d2a7:	mov    QWORD PTR [rsi],rax
   14001d2aa:	movzx  eax,BYTE PTR [r14]
   14001d2ae:	mov    BYTE PTR [rsi+0x8],al
   14001d2b1:	lea    rcx,[rsi+0x10]
   14001d2b5:	mov    edx,0xfa0
   14001d2ba:	call   0x140022080
   14001d2bf:	test   eax,eax
   14001d2c1:	je     0x14001d2c9
   14001d2c3:	add    DWORD PTR [rsi+0xc],0x1
   14001d2c7:	jmp    0x14001d2d1
   14001d2c9:	or     eax,0xffffffff
   14001d2cc:	jmp    0x14001d3bc
   14001d2d1:	add    ebx,0x1
   14001d2d4:	add    r14,0x1
   14001d2d8:	add    r13,0x8
   14001d2dc:	cmp    ebx,r15d
   14001d2df:	jl     0x14001d264
   14001d2e1:	mov    r13d,r12d
   14001d2e4:	mov    rdi,r12
   14001d2e7:	data16 xchg ax,ax
   14001d2ea:	data16 xchg ax,ax
   14001d2ed:	data16 xchg ax,ax
   14001d2f0:	lea    rbx,[rdi+rdi*4]
   14001d2f4:	shl    rbx,0x4
   14001d2f8:	add    rbx,QWORD PTR [rip+0x2a461]        # 0x140047760
   14001d2ff:	mov    rax,QWORD PTR [rbx]
   14001d302:	cmp    rax,0xffffffffffffffff
   14001d306:	je     0x14001d317
   14001d308:	cmp    rax,0xfffffffffffffffe
   14001d30c:	je     0x14001d317
   14001d30e:	or     BYTE PTR [rbx+0x8],0x80
   14001d312:	jmp    0x14001d397
   14001d317:	mov    BYTE PTR [rbx+0x8],0x81
   14001d31b:	test   rdi,rdi
   14001d31e:	jne    0x14001d327
   14001d320:	mov    ecx,0xfffffff6
   14001d325:	jmp    0x14001d334
   14001d327:	mov    ecx,r12d
   14001d32a:	cmp    r13d,0x1
   14001d32e:	sete   cl
   14001d331:	add    ecx,0xfffffff4
   14001d334:	call   QWORD PTR [rip+0x13e2e]        # 0x140031168
   14001d33a:	mov    rsi,rax
   14001d33d:	cmp    rax,0xffffffffffffffff
   14001d341:	je     0x14001d38c
   14001d343:	test   rax,rax
   14001d346:	je     0x14001d38c
   14001d348:	mov    rcx,rax
   14001d34b:	call   QWORD PTR [rip+0x13e5f]        # 0x1400311b0
   14001d351:	test   eax,eax
   14001d353:	je     0x14001d38c
   14001d355:	mov    QWORD PTR [rbx],rsi
   14001d358:	movzx  eax,al
   14001d35b:	cmp    eax,0x2
   14001d35e:	jne    0x14001d366
   14001d360:	or     BYTE PTR [rbx+0x8],0x40
   14001d364:	jmp    0x14001d36f
   14001d366:	cmp    eax,0x3
   14001d369:	jne    0x14001d36f
   14001d36b:	or     BYTE PTR [rbx+0x8],0x8
   14001d36f:	lea    rcx,[rbx+0x10]
   14001d373:	mov    edx,0xfa0
   14001d378:	call   0x140022080
   14001d37d:	test   eax,eax
   14001d37f:	je     0x14001d387
   14001d381:	add    DWORD PTR [rbx+0xc],0x1
   14001d385:	jmp    0x14001d397
   14001d387:	or     eax,0xffffffff
   14001d38a:	jmp    0x14001d3bc
   14001d38c:	or     BYTE PTR [rbx+0x8],0x40
   14001d390:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   14001d397:	add    r13d,0x1
   14001d39b:	add    rdi,0x1
   14001d39f:	cmp    rdi,0x3
   14001d3a3:	jl     0x14001d2f0
   14001d3a9:	mov    ecx,DWORD PTR [rip+0x2a399]        # 0x140047748
   14001d3af:	call   QWORD PTR [rip+0x13df3]        # 0x1400311a8
   14001d3b5:	xor    eax,eax
   14001d3b7:	jmp    0x14001d3bc
   14001d3b9:	or     eax,0xffffffff
   14001d3bc:	lea    r11,[rsp+0x90]
   14001d3c4:	mov    rbx,QWORD PTR [r11+0x20]
   14001d3c8:	mov    rsi,QWORD PTR [r11+0x28]
   14001d3cc:	mov    rdi,QWORD PTR [r11+0x30]
   14001d3d0:	mov    r12,QWORD PTR [r11+0x38]
   14001d3d4:	mov    rsp,r11
   14001d3d7:	pop    r15
   14001d3d9:	pop    r14
   14001d3db:	pop    r13
   14001d3dd:	ret    
   14001d3de:	int3   
   14001d3df:	int3   
   14001d3e0:	rex push rbx
   14001d3e2:	push   rbp
   14001d3e3:	sub    rsp,0x28
   14001d3e7:	mov    rbp,rdx
   14001d3ea:	mov    ebx,0x1
   14001d3ef:	mov    eax,ebx
   14001d3f1:	mov    eax,ebx
   14001d3f3:	add    rsp,0x28
   14001d3f7:	pop    rbp
   14001d3f8:	pop    rbx
   14001d3f9:	ret    
   14001d3fa:	int3   
   14001d3fb:	int3   
   14001d3fc:	int3   
   14001d3fd:	int3   
   14001d3fe:	int3   
   14001d3ff:	int3   
   14001d400:	mov    QWORD PTR [rsp+0x8],rbx
   14001d405:	push   rdi
   14001d406:	sub    rsp,0x20
   14001d40a:	lea    rbx,[rip+0x1b67f]        # 0x140038a90
   14001d411:	lea    rdi,[rip+0x1b678]        # 0x140038a90
   14001d418:	cmp    rbx,rdi
   14001d41b:	jae    0x14001d433
   14001d41d:	data16 xchg ax,ax
   14001d420:	mov    rax,QWORD PTR [rbx]
   14001d423:	test   rax,rax
   14001d426:	je     0x14001d42a
   14001d428:	call   rax
   14001d42a:	add    rbx,0x8
   14001d42e:	cmp    rbx,rdi
   14001d431:	jb     0x14001d420
   14001d433:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d438:	add    rsp,0x20
   14001d43c:	pop    rdi
   14001d43d:	ret    
   14001d43e:	int3   
   14001d43f:	int3   
   14001d440:	mov    QWORD PTR [rsp+0x8],rbx
   14001d445:	push   rdi
   14001d446:	sub    rsp,0x20
   14001d44a:	lea    rbx,[rip+0x1b64f]        # 0x140038aa0
   14001d451:	lea    rdi,[rip+0x1b648]        # 0x140038aa0
   14001d458:	cmp    rbx,rdi
   14001d45b:	jae    0x14001d473
   14001d45d:	data16 xchg ax,ax
   14001d460:	mov    rax,QWORD PTR [rbx]
   14001d463:	test   rax,rax
   14001d466:	je     0x14001d46a
   14001d468:	call   rax
   14001d46a:	add    rbx,0x8
   14001d46e:	cmp    rbx,rdi
   14001d471:	jb     0x14001d460
   14001d473:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d478:	add    rsp,0x20
   14001d47c:	pop    rdi
   14001d47d:	ret    
   14001d47e:	int3   
   14001d47f:	int3   
   14001d480:	mov    QWORD PTR [rsp+0x10],rbx
   14001d485:	mov    QWORD PTR [rsp+0x18],rbp
   14001d48a:	push   rsi
   14001d48b:	push   rdi
   14001d48c:	push   r12
   14001d48e:	sub    rsp,0x20
   14001d492:	mov    rbp,rcx
   14001d495:	mov    ecx,DWORD PTR [rip+0x22f35]        # 0x1400403d0
   14001d49b:	cmp    ecx,0xffffffff
   14001d49e:	je     0x14001d4b4
   14001d4a0:	call   QWORD PTR [rip+0x13d1a]        # 0x1400311c0
   14001d4a6:	test   rax,rax
   14001d4a9:	je     0x14001d4b4
   14001d4ab:	mov    rax,QWORD PTR [rax+0x2a8]
   14001d4b2:	jmp    0x14001d52e
   14001d4b4:	lea    rcx,[rip+0x17c1d]        # 0x1400350d8
   14001d4bb:	call   QWORD PTR [rip+0x13eaf]        # 0x140031370
   14001d4c1:	test   rax,rax
   14001d4c4:	mov    r12,rax
   14001d4c7:	je     0x14001d53a
   14001d4c9:	lea    rcx,[rsp+0x40]
   14001d4ce:	xor    ebx,ebx
   14001d4d0:	mov    DWORD PTR [rsp+0x40],ebx
   14001d4d4:	call   0x140019aa0
   14001d4d9:	cmp    DWORD PTR [rsp+0x40],0x5
   14001d4de:	jg     0x14001d51e
   14001d4e0:	xor    ecx,ecx
   14001d4e2:	call   QWORD PTR [rip+0x13e88]        # 0x140031370
   14001d4e8:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001d4ec:	add    rcx,rax
   14001d4ef:	movzx  eax,WORD PTR [rcx+0x14]
   14001d4f3:	lea    rdx,[rax+rcx*1+0x18]
   14001d4f8:	movzx  eax,WORD PTR [rcx+0x6]
   14001d4fc:	test   eax,eax
   14001d4fe:	je     0x14001d51e
   14001d500:	lea    rsi,[rip+0x17bb9]        # 0x1400350c0
   14001d507:	mov    rdi,rdx
   14001d50a:	mov    ecx,0x8
   14001d50f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d511:	je     0x14001d53a
   14001d513:	add    ebx,0x1
   14001d516:	add    rdx,0x28
   14001d51a:	cmp    ebx,eax
   14001d51c:	jb     0x14001d500
   14001d51e:	lea    rdx,[rip+0x17ba3]        # 0x1400350c8
   14001d525:	mov    rcx,r12
   14001d528:	call   QWORD PTR [rip+0x13f32]        # 0x140031460
   14001d52e:	test   rax,rax
   14001d531:	je     0x14001d53a
   14001d533:	mov    rcx,rbp
   14001d536:	call   rax
   14001d538:	jmp    0x14001d53d
   14001d53a:	mov    rax,rbp
   14001d53d:	mov    rbx,QWORD PTR [rsp+0x48]
   14001d542:	mov    rbp,QWORD PTR [rsp+0x50]
   14001d547:	add    rsp,0x20
   14001d54b:	pop    r12
   14001d54d:	pop    rdi
   14001d54e:	pop    rsi
   14001d54f:	ret    
   14001d550:	mov    QWORD PTR [rsp+0x10],rbx
   14001d555:	mov    QWORD PTR [rsp+0x18],rsi
   14001d55a:	push   rdi
   14001d55b:	sub    rsp,0x20
   14001d55f:	mov    ecx,DWORD PTR [rip+0x22e6b]        # 0x1400403d0
   14001d565:	cmp    ecx,0xffffffff
   14001d568:	je     0x14001d581
   14001d56a:	call   QWORD PTR [rip+0x13c50]        # 0x1400311c0
   14001d570:	test   rax,rax
   14001d573:	je     0x14001d581
   14001d575:	mov    rax,QWORD PTR [rax+0x2a8]
   14001d57c:	jmp    0x14001d60e
   14001d581:	lea    rcx,[rip+0x17b50]        # 0x1400350d8
   14001d588:	call   QWORD PTR [rip+0x13de2]        # 0x140031370
   14001d58e:	test   rax,rax
   14001d591:	mov    rbx,rax
   14001d594:	je     0x14001d627
   14001d59a:	lea    rcx,[rsp+0x30]
   14001d59f:	mov    DWORD PTR [rsp+0x30],0x0
   14001d5a7:	call   0x140019aa0
   14001d5ac:	cmp    DWORD PTR [rsp+0x30],0x5
   14001d5b1:	jg     0x14001d5fe
   14001d5b3:	xor    ecx,ecx
   14001d5b5:	call   QWORD PTR [rip+0x13db5]        # 0x140031370
   14001d5bb:	xor    edx,edx
   14001d5bd:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001d5c1:	add    rcx,rax
   14001d5c4:	movzx  eax,WORD PTR [rcx+0x14]
   14001d5c8:	lea    r8,[rax+rcx*1+0x18]
   14001d5cd:	movzx  eax,WORD PTR [rcx+0x6]
   14001d5d1:	test   eax,eax
   14001d5d3:	je     0x14001d5fe
   14001d5d5:	data16 data16 xchg ax,ax
   14001d5d9:	data16 xchg ax,ax
   14001d5dc:	data16 data16 xchg ax,ax
   14001d5e0:	lea    rsi,[rip+0x17ad9]        # 0x1400350c0
   14001d5e7:	mov    rdi,r8
   14001d5ea:	mov    ecx,0x8
   14001d5ef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d5f1:	je     0x14001d627
   14001d5f3:	add    edx,0x1
   14001d5f6:	add    r8,0x28
   14001d5fa:	cmp    edx,eax
   14001d5fc:	jb     0x14001d5e0
   14001d5fe:	lea    rdx,[rip+0x17ac3]        # 0x1400350c8
   14001d605:	mov    rcx,rbx
   14001d608:	call   QWORD PTR [rip+0x13e52]        # 0x140031460
   14001d60e:	test   rax,rax
   14001d611:	je     0x14001d627
   14001d613:	xor    ecx,ecx
   14001d615:	call   rax
   14001d617:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d61c:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d621:	add    rsp,0x20
   14001d625:	pop    rdi
   14001d626:	ret    
   14001d627:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d62c:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d631:	xor    eax,eax
   14001d633:	add    rsp,0x20
   14001d637:	pop    rdi
   14001d638:	ret    
   14001d639:	int3   
   14001d63a:	int3   
   14001d63b:	int3   
   14001d63c:	int3   
   14001d63d:	int3   
   14001d63e:	int3   
   14001d63f:	int3   
   14001d640:	mov    QWORD PTR [rsp+0x10],rbx
   14001d645:	mov    QWORD PTR [rsp+0x18],rbp
   14001d64a:	push   rsi
   14001d64b:	push   rdi
   14001d64c:	push   r12
   14001d64e:	sub    rsp,0x20
   14001d652:	mov    rbp,rcx
   14001d655:	mov    ecx,DWORD PTR [rip+0x22d75]        # 0x1400403d0
   14001d65b:	cmp    ecx,0xffffffff
   14001d65e:	je     0x14001d674
   14001d660:	call   QWORD PTR [rip+0x13b5a]        # 0x1400311c0
   14001d666:	test   rax,rax
   14001d669:	je     0x14001d674
   14001d66b:	mov    rax,QWORD PTR [rax+0x2b0]
   14001d672:	jmp    0x14001d6ee
   14001d674:	lea    rcx,[rip+0x17a5d]        # 0x1400350d8
   14001d67b:	call   QWORD PTR [rip+0x13cef]        # 0x140031370
   14001d681:	test   rax,rax
   14001d684:	mov    r12,rax
   14001d687:	je     0x14001d6fa
   14001d689:	lea    rcx,[rsp+0x40]
   14001d68e:	xor    ebx,ebx
   14001d690:	mov    DWORD PTR [rsp+0x40],ebx
   14001d694:	call   0x140019aa0
   14001d699:	cmp    DWORD PTR [rsp+0x40],0x5
   14001d69e:	jg     0x14001d6de
   14001d6a0:	xor    ecx,ecx
   14001d6a2:	call   QWORD PTR [rip+0x13cc8]        # 0x140031370
   14001d6a8:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001d6ac:	add    rcx,rax
   14001d6af:	movzx  eax,WORD PTR [rcx+0x14]
   14001d6b3:	lea    rdx,[rax+rcx*1+0x18]
   14001d6b8:	movzx  eax,WORD PTR [rcx+0x6]
   14001d6bc:	test   eax,eax
   14001d6be:	je     0x14001d6de
   14001d6c0:	lea    rsi,[rip+0x179f9]        # 0x1400350c0
   14001d6c7:	mov    rdi,rdx
   14001d6ca:	mov    ecx,0x8
   14001d6cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d6d1:	je     0x14001d6fa
   14001d6d3:	add    ebx,0x1
   14001d6d6:	add    rdx,0x28
   14001d6da:	cmp    ebx,eax
   14001d6dc:	jb     0x14001d6c0
   14001d6de:	lea    rdx,[rip+0x17a03]        # 0x1400350e8
   14001d6e5:	mov    rcx,r12
   14001d6e8:	call   QWORD PTR [rip+0x13d72]        # 0x140031460
   14001d6ee:	test   rax,rax
   14001d6f1:	je     0x14001d6fa
   14001d6f3:	mov    rcx,rbp
   14001d6f6:	call   rax
   14001d6f8:	jmp    0x14001d6fd
   14001d6fa:	mov    rax,rbp
   14001d6fd:	mov    rbx,QWORD PTR [rsp+0x48]
   14001d702:	mov    rbp,QWORD PTR [rsp+0x50]
   14001d707:	add    rsp,0x20
   14001d70b:	pop    r12
   14001d70d:	pop    rdi
   14001d70e:	pop    rsi
   14001d70f:	ret    
   14001d710:	mov    QWORD PTR [rsp+0x10],rbx
   14001d715:	mov    QWORD PTR [rsp+0x18],rsi
   14001d71a:	mov    QWORD PTR [rsp+0x20],rdi
   14001d71f:	push   r12
   14001d721:	push   r13
   14001d723:	push   r14
   14001d725:	sub    rsp,0x20
   14001d729:	mov    r13,rdx
   14001d72c:	mov    r12,rcx
   14001d72f:	lea    rcx,[rip+0x179a2]        # 0x1400350d8
   14001d736:	call   QWORD PTR [rip+0x13c34]        # 0x140031370
   14001d73c:	mov    r14,rax
   14001d73f:	lea    rax,[rip+0x22b8a]        # 0x1400402d0
   14001d746:	mov    QWORD PTR [r12+0xa0],rax
   14001d74e:	mov    DWORD PTR [r12+0x1c],0x1
   14001d757:	test   r14,r14
   14001d75a:	je     0x14001d7ee
   14001d760:	xor    ebx,ebx
   14001d762:	mov    DWORD PTR [rsp+0x40],ebx
   14001d766:	lea    rcx,[rsp+0x40]
   14001d76b:	call   0x140019aa0
   14001d770:	cmp    DWORD PTR [rsp+0x40],0x5
   14001d775:	jg     0x14001d7be
   14001d777:	xor    ecx,ecx
   14001d779:	call   QWORD PTR [rip+0x13bf1]        # 0x140031370
   14001d77f:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001d783:	add    rcx,rax
   14001d786:	movzx  eax,WORD PTR [rcx+0x14]
   14001d78a:	lea    rdx,[rax+rcx*1+0x18]
   14001d78f:	movzx  eax,WORD PTR [rcx+0x6]
   14001d793:	test   eax,eax
   14001d795:	je     0x14001d7be
   14001d797:	data16 xchg ax,ax
   14001d79a:	data16 xchg ax,ax
   14001d79d:	data16 xchg ax,ax
   14001d7a0:	lea    rsi,[rip+0x17919]        # 0x1400350c0
   14001d7a7:	mov    rdi,rdx
   14001d7aa:	mov    ecx,0x8
   14001d7af:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d7b1:	je     0x14001d7ee
   14001d7b3:	add    ebx,0x1
   14001d7b6:	add    rdx,0x28
   14001d7ba:	cmp    ebx,eax
   14001d7bc:	jb     0x14001d7a0
   14001d7be:	lea    rdx,[rip+0x17903]        # 0x1400350c8
   14001d7c5:	mov    rcx,r14
   14001d7c8:	call   QWORD PTR [rip+0x13c92]        # 0x140031460
   14001d7ce:	mov    QWORD PTR [r12+0x2a8],rax
   14001d7d6:	lea    rdx,[rip+0x1790b]        # 0x1400350e8
   14001d7dd:	mov    rcx,r14
   14001d7e0:	call   QWORD PTR [rip+0x13c7a]        # 0x140031460
   14001d7e6:	mov    QWORD PTR [r12+0x2b0],rax
   14001d7ee:	mov    DWORD PTR [r12+0xc8],0x1
   14001d7fa:	mov    BYTE PTR [r12+0x174],0x43
   14001d803:	mov    BYTE PTR [r12+0x1f7],0x43
   14001d80c:	lea    rax,[rip+0x22bcd]        # 0x1400403e0
   14001d813:	mov    QWORD PTR [r12+0xb8],rax
   14001d81b:	lock add DWORD PTR [rip+0x22bbd],0x1        # 0x1400403e0
   14001d823:	mov    ecx,0xc
   14001d828:	call   0x140021b50
   14001d82d:	nop
   14001d82e:	mov    QWORD PTR [r12+0xc0],r13
   14001d836:	test   r13,r13
   14001d839:	jne    0x14001d84a
   14001d83b:	mov    rax,QWORD PTR [rip+0x2324e]        # 0x140040a90
   14001d842:	mov    QWORD PTR [r12+0xc0],rax
   14001d84a:	mov    rcx,QWORD PTR [r12+0xc0]
   14001d852:	call   0x14001ebb0
   14001d857:	nop
   14001d858:	mov    ecx,0xc
   14001d85d:	call   0x140021a20
   14001d862:	mov    rbx,QWORD PTR [rsp+0x48]
   14001d867:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d86c:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d871:	add    rsp,0x20
   14001d875:	pop    r14
   14001d877:	pop    r13
   14001d879:	pop    r12
   14001d87b:	ret    
   14001d87c:	int3   
   14001d87d:	int3   
   14001d87e:	int3   
   14001d87f:	int3   
   14001d880:	rex push rbp
   14001d882:	sub    rsp,0x20
   14001d886:	mov    rbp,rdx
   14001d889:	mov    ecx,0xc
   14001d88e:	call   0x140021a20
   14001d893:	add    rsp,0x20
   14001d897:	pop    rbp
   14001d898:	ret    
   14001d899:	int3   
   14001d89a:	int3   
   14001d89b:	int3   
   14001d89c:	int3   
   14001d89d:	int3   
   14001d89e:	int3   
   14001d89f:	int3   
   14001d8a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d8a5:	push   rdi
   14001d8a6:	sub    rsp,0x20
   14001d8aa:	call   QWORD PTR [rip+0x13bc8]        # 0x140031478
   14001d8b0:	mov    ecx,DWORD PTR [rip+0x22b1a]        # 0x1400403d0
   14001d8b6:	mov    edi,eax
   14001d8b8:	call   QWORD PTR [rip+0x13902]        # 0x1400311c0
   14001d8be:	test   rax,rax
   14001d8c1:	mov    rbx,rax
   14001d8c4:	jne    0x14001d911
   14001d8c6:	lea    ecx,[rax+0x1]
   14001d8c9:	mov    edx,0x2d8
   14001d8ce:	call   0x140021720
   14001d8d3:	test   rax,rax
   14001d8d6:	mov    rbx,rax
   14001d8d9:	je     0x14001d911
   14001d8db:	mov    ecx,DWORD PTR [rip+0x22aef]        # 0x1400403d0
   14001d8e1:	mov    rdx,rax
   14001d8e4:	call   QWORD PTR [rip+0x138de]        # 0x1400311c8
   14001d8ea:	mov    rcx,rbx
   14001d8ed:	test   eax,eax
   14001d8ef:	je     0x14001d90a
   14001d8f1:	xor    edx,edx
   14001d8f3:	call   0x14001d710
   14001d8f8:	call   QWORD PTR [rip+0x13ab2]        # 0x1400313b0
   14001d8fe:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001d906:	mov    DWORD PTR [rbx],eax
   14001d908:	jmp    0x14001d911
   14001d90a:	call   0x14001a540
   14001d90f:	xor    ebx,ebx
   14001d911:	mov    ecx,edi
   14001d913:	call   QWORD PTR [rip+0x13ae7]        # 0x140031400
   14001d919:	mov    rax,rbx
   14001d91c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d921:	add    rsp,0x20
   14001d925:	pop    rdi
   14001d926:	ret    
   14001d927:	int3   
   14001d928:	int3   
   14001d929:	int3   
   14001d92a:	int3   
   14001d92b:	int3   
   14001d92c:	int3   
   14001d92d:	int3   
   14001d92e:	int3   
   14001d92f:	int3   
   14001d930:	mov    QWORD PTR [rsp+0x8],rbx
   14001d935:	push   rdi
   14001d936:	sub    rsp,0x20
   14001d93a:	call   QWORD PTR [rip+0x13b38]        # 0x140031478
   14001d940:	mov    ecx,DWORD PTR [rip+0x22a8a]        # 0x1400403d0
   14001d946:	mov    edi,eax
   14001d948:	call   QWORD PTR [rip+0x13872]        # 0x1400311c0
   14001d94e:	test   rax,rax
   14001d951:	mov    rbx,rax
   14001d954:	jne    0x14001d9a1
   14001d956:	lea    ecx,[rax+0x1]
   14001d959:	mov    edx,0x2d8
   14001d95e:	call   0x140021720
   14001d963:	test   rax,rax
   14001d966:	mov    rbx,rax
   14001d969:	je     0x14001d9a1
   14001d96b:	mov    ecx,DWORD PTR [rip+0x22a5f]        # 0x1400403d0
   14001d971:	mov    rdx,rax
   14001d974:	call   QWORD PTR [rip+0x1384e]        # 0x1400311c8
   14001d97a:	mov    rcx,rbx
   14001d97d:	test   eax,eax
   14001d97f:	je     0x14001d99a
   14001d981:	xor    edx,edx
   14001d983:	call   0x14001d710
   14001d988:	call   QWORD PTR [rip+0x13a22]        # 0x1400313b0
   14001d98e:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001d996:	mov    DWORD PTR [rbx],eax
   14001d998:	jmp    0x14001d9a1
   14001d99a:	call   0x14001a540
   14001d99f:	xor    ebx,ebx
   14001d9a1:	mov    ecx,edi
   14001d9a3:	call   QWORD PTR [rip+0x13a57]        # 0x140031400
   14001d9a9:	test   rbx,rbx
   14001d9ac:	jne    0x14001d9b6
   14001d9ae:	lea    ecx,[rbx+0x10]
   14001d9b1:	call   0x140019980
   14001d9b6:	mov    rax,rbx
   14001d9b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d9be:	add    rsp,0x20
   14001d9c2:	pop    rdi
   14001d9c3:	ret    
   14001d9c4:	int3   
   14001d9c5:	int3   
   14001d9c6:	int3   
   14001d9c7:	int3   
   14001d9c8:	int3   
   14001d9c9:	int3   
   14001d9ca:	int3   
   14001d9cb:	int3   
   14001d9cc:	int3   
   14001d9cd:	int3   
   14001d9ce:	int3   
   14001d9cf:	int3   
   14001d9d0:	test   rcx,rcx
   14001d9d3:	je     0x14001daf6
   14001d9d9:	mov    QWORD PTR [rsp+0x10],rbx
   14001d9de:	push   rdi
   14001d9df:	sub    rsp,0x20
   14001d9e3:	mov    rbx,rcx
   14001d9e6:	mov    rcx,QWORD PTR [rcx+0x38]
   14001d9ea:	test   rcx,rcx
   14001d9ed:	je     0x14001d9f4
   14001d9ef:	call   0x14001a540
   14001d9f4:	mov    rcx,QWORD PTR [rbx+0x48]
   14001d9f8:	test   rcx,rcx
   14001d9fb:	je     0x14001da02
   14001d9fd:	call   0x14001a540
   14001da02:	mov    rcx,QWORD PTR [rbx+0x58]
   14001da06:	test   rcx,rcx
   14001da09:	je     0x14001da10
   14001da0b:	call   0x14001a540
   14001da10:	mov    rcx,QWORD PTR [rbx+0x68]
   14001da14:	test   rcx,rcx
   14001da17:	je     0x14001da1e
   14001da19:	call   0x14001a540
   14001da1e:	mov    rcx,QWORD PTR [rbx+0x78]
   14001da22:	test   rcx,rcx
   14001da25:	je     0x14001da2c
   14001da27:	call   0x14001a540
   14001da2c:	mov    rcx,QWORD PTR [rbx+0x80]
   14001da33:	test   rcx,rcx
   14001da36:	je     0x14001da3d
   14001da38:	call   0x14001a540
   14001da3d:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001da44:	lea    rax,[rip+0x22885]        # 0x1400402d0
   14001da4b:	cmp    rcx,rax
   14001da4e:	je     0x14001da55
   14001da50:	call   0x14001a540
   14001da55:	mov    ecx,0xd
   14001da5a:	call   0x140021b50
   14001da5f:	nop
   14001da60:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001da67:	mov    QWORD PTR [rsp+0x30],rcx
   14001da6c:	test   rcx,rcx
   14001da6f:	je     0x14001da8e
   14001da71:	lock add DWORD PTR [rcx],0xffffffff
   14001da75:	jne    0x14001da8e
   14001da77:	lea    rax,[rip+0x22962]        # 0x1400403e0
   14001da7e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001da83:	cmp    rcx,rax
   14001da86:	je     0x14001da8e
   14001da88:	call   0x14001a540
   14001da8d:	nop
   14001da8e:	mov    ecx,0xd
   14001da93:	call   0x140021a20
   14001da98:	mov    ecx,0xc
   14001da9d:	call   0x140021b50
   14001daa2:	nop
   14001daa3:	mov    rdi,QWORD PTR [rbx+0xc0]
   14001daaa:	test   rdi,rdi
   14001daad:	je     0x14001dada
   14001daaf:	mov    rcx,rdi
   14001dab2:	call   0x14001ec50
   14001dab7:	cmp    rdi,QWORD PTR [rip+0x22fd2]        # 0x140040a90
   14001dabe:	je     0x14001dada
   14001dac0:	lea    rax,[rip+0x22e69]        # 0x140040930
   14001dac7:	cmp    rdi,rax
   14001daca:	je     0x14001dada
   14001dacc:	cmp    DWORD PTR [rdi],0x0
   14001dacf:	jne    0x14001dada
   14001dad1:	mov    rcx,rdi
   14001dad4:	call   0x14001ea20
   14001dad9:	nop
   14001dada:	mov    ecx,0xc
   14001dadf:	call   0x140021a20
   14001dae4:	mov    rcx,rbx
   14001dae7:	call   0x14001a540
   14001daec:	mov    rbx,QWORD PTR [rsp+0x38]
   14001daf1:	add    rsp,0x20
   14001daf5:	pop    rdi
   14001daf6:	ret    0x0
   14001daf9:	int3   
   14001dafa:	int3   
   14001dafb:	int3   
   14001dafc:	int3   
   14001dafd:	int3   
   14001dafe:	int3   
   14001daff:	int3   
   14001db00:	rex push rbp
   14001db02:	sub    rsp,0x20
   14001db06:	mov    rbp,rdx
   14001db09:	mov    ecx,0xd
   14001db0e:	call   0x140021a20
   14001db13:	add    rsp,0x20
   14001db17:	pop    rbp
   14001db18:	ret    
   14001db19:	int3   
   14001db1a:	int3   
   14001db1b:	int3   
   14001db1c:	int3   
   14001db1d:	int3   
   14001db1e:	int3   
   14001db1f:	int3   
   14001db20:	rex push rbp
   14001db22:	sub    rsp,0x20
   14001db26:	mov    rbp,rdx
   14001db29:	mov    ecx,0xc
   14001db2e:	call   0x140021a20
   14001db33:	add    rsp,0x20
   14001db37:	pop    rbp
   14001db38:	ret    
   14001db39:	int3   
   14001db3a:	int3   
   14001db3b:	int3   
   14001db3c:	int3   
   14001db3d:	int3   
   14001db3e:	int3   
   14001db3f:	int3   
   14001db40:	sub    rsp,0x28
   14001db44:	call   0x140019d40
   14001db49:	call   0x1400218e0
   14001db4e:	test   eax,eax
   14001db50:	jne    0x14001db94
   14001db52:	mov    ecx,DWORD PTR [rip+0x22878]        # 0x1400403d0
   14001db58:	cmp    ecx,0xffffffff
   14001db5b:	je     0x14001db6d
   14001db5d:	call   QWORD PTR [rip+0x1366d]        # 0x1400311d0
   14001db63:	mov    DWORD PTR [rip+0x22863],0xffffffff        # 0x1400403d0
   14001db6d:	mov    ecx,DWORD PTR [rip+0x22861]        # 0x1400403d4
   14001db73:	cmp    ecx,0xffffffff
   14001db76:	je     0x14001db88
   14001db78:	call   QWORD PTR [rip+0x13792]        # 0x140031310
   14001db7e:	mov    DWORD PTR [rip+0x2284c],0xffffffff        # 0x1400403d4
   14001db88:	call   0x140021980
   14001db8d:	xor    eax,eax
   14001db8f:	add    rsp,0x28
   14001db93:	ret    
   14001db94:	lea    rcx,[rip+0xfffffffffffffe35]        # 0x14001d9d0
   14001db9b:	call   QWORD PTR [rip+0x13637]        # 0x1400311d8
   14001dba1:	cmp    eax,0xffffffff
   14001dba4:	mov    DWORD PTR [rip+0x22826],eax        # 0x1400403d0
   14001dbaa:	jne    0x14001dbb8
   14001dbac:	mov    ecx,DWORD PTR [rip+0x22822]        # 0x1400403d4
   14001dbb2:	cmp    ecx,eax
   14001dbb4:	je     0x14001db88
   14001dbb6:	jmp    0x14001db78
   14001dbb8:	mov    edx,0x2d8
   14001dbbd:	mov    ecx,0x1
   14001dbc2:	mov    QWORD PTR [rsp+0x20],rbx
   14001dbc7:	call   0x140021720
   14001dbcc:	test   rax,rax
   14001dbcf:	mov    rbx,rax
   14001dbd2:	je     0x14001dc10
   14001dbd4:	mov    ecx,DWORD PTR [rip+0x227f6]        # 0x1400403d0
   14001dbda:	mov    rdx,rax
   14001dbdd:	call   QWORD PTR [rip+0x135e5]        # 0x1400311c8
   14001dbe3:	test   eax,eax
   14001dbe5:	je     0x14001dc10
   14001dbe7:	xor    edx,edx
   14001dbe9:	mov    rcx,rbx
   14001dbec:	call   0x14001d710
   14001dbf1:	call   QWORD PTR [rip+0x137b9]        # 0x1400313b0
   14001dbf7:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001dbff:	mov    DWORD PTR [rbx],eax
   14001dc01:	mov    rbx,QWORD PTR [rsp+0x20]
   14001dc06:	mov    eax,0x1
   14001dc0b:	add    rsp,0x28
   14001dc0f:	ret    
   14001dc10:	mov    ecx,DWORD PTR [rip+0x227ba]        # 0x1400403d0
   14001dc16:	cmp    ecx,0xffffffff
   14001dc19:	je     0x14001dc2b
   14001dc1b:	call   QWORD PTR [rip+0x135af]        # 0x1400311d0
   14001dc21:	mov    DWORD PTR [rip+0x227a5],0xffffffff        # 0x1400403d0
   14001dc2b:	mov    ecx,DWORD PTR [rip+0x227a3]        # 0x1400403d4
   14001dc31:	cmp    ecx,0xffffffff
   14001dc34:	je     0x14001dc46
   14001dc36:	call   QWORD PTR [rip+0x136d4]        # 0x140031310
   14001dc3c:	mov    DWORD PTR [rip+0x2278e],0xffffffff        # 0x1400403d4
   14001dc46:	call   0x140021980
   14001dc4b:	mov    rbx,QWORD PTR [rsp+0x20]
   14001dc50:	xor    eax,eax
   14001dc52:	add    rsp,0x28
   14001dc56:	ret    
   14001dc57:	int3   
   14001dc58:	int3   
   14001dc59:	int3   
   14001dc5a:	int3   
   14001dc5b:	int3   
   14001dc5c:	int3   
   14001dc5d:	int3   
   14001dc5e:	int3   
   14001dc5f:	int3   
   14001dc60:	mov    DWORD PTR [rsp+0x8],ecx
   14001dc64:	sub    rsp,0x28
   14001dc68:	xor    r8d,r8d
   14001dc6b:	mov    edx,0x1000
   14001dc70:	xor    ecx,ecx
   14001dc72:	call   QWORD PTR [rip+0x13570]        # 0x1400311e8
   14001dc78:	test   rax,rax
   14001dc7b:	mov    QWORD PTR [rip+0x27df6],rax        # 0x140045a78
   14001dc82:	jne    0x14001dc89
   14001dc84:	add    rsp,0x28
   14001dc88:	ret    
   14001dc89:	lea    r8,[rsp+0x30]
   14001dc8e:	mov    r9d,0x4
   14001dc94:	xor    edx,edx
   14001dc96:	mov    rcx,rax
   14001dc99:	mov    DWORD PTR [rsp+0x30],0x2
   14001dca1:	call   QWORD PTR [rip+0x13539]        # 0x1400311e0
   14001dca7:	mov    eax,0x1
   14001dcac:	add    rsp,0x28
   14001dcb0:	ret    
   14001dcb1:	int3   
   14001dcb2:	int3   
   14001dcb3:	int3   
   14001dcb4:	int3   
   14001dcb5:	int3   
   14001dcb6:	int3   
   14001dcb7:	int3   
   14001dcb8:	int3   
   14001dcb9:	int3   
   14001dcba:	int3   
   14001dcbb:	int3   
   14001dcbc:	int3   
   14001dcbd:	int3   
   14001dcbe:	int3   
   14001dcbf:	int3   
   14001dcc0:	rex push rdi
   14001dcc2:	sub    rsp,0x20
   14001dcc6:	mov    rax,QWORD PTR [rip+0x22303]        # 0x14003ffd0
   14001dccd:	movabs rdi,0x2b992ddfa232
   14001dcd7:	mov    QWORD PTR [rsp+0x30],0x0
   14001dce0:	cmp    rax,rdi
   14001dce3:	je     0x14001dcf5
   14001dce5:	not    rax
   14001dce8:	mov    QWORD PTR [rip+0x222e9],rax        # 0x14003ffd8
   14001dcef:	add    rsp,0x20
   14001dcf3:	pop    rdi
   14001dcf4:	ret    
   14001dcf5:	lea    rcx,[rsp+0x30]
   14001dcfa:	mov    QWORD PTR [rsp+0x40],rbx
   14001dcff:	call   QWORD PTR [rip+0x134fb]        # 0x140031200
   14001dd05:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd0a:	call   QWORD PTR [rip+0x13688]        # 0x140031398
   14001dd10:	mov    r11d,eax
   14001dd13:	xor    rbx,r11
   14001dd16:	call   QWORD PTR [rip+0x13694]        # 0x1400313b0
   14001dd1c:	mov    r11d,eax
   14001dd1f:	xor    rbx,r11
   14001dd22:	call   QWORD PTR [rip+0x134d0]        # 0x1400311f8
   14001dd28:	lea    rcx,[rsp+0x38]
   14001dd2d:	mov    r11d,eax
   14001dd30:	xor    rbx,r11
   14001dd33:	call   QWORD PTR [rip+0x134b7]        # 0x1400311f0
   14001dd39:	mov    r11,QWORD PTR [rsp+0x38]
   14001dd3e:	xor    r11,rbx
   14001dd41:	mov    rbx,QWORD PTR [rsp+0x40]
   14001dd46:	movabs rax,0xffffffffffff
   14001dd50:	and    r11,rax
   14001dd53:	movabs rax,0x2b992ddfa233
   14001dd5d:	cmp    r11,rdi
   14001dd60:	cmove  r11,rax
   14001dd64:	mov    QWORD PTR [rip+0x22265],r11        # 0x14003ffd0
   14001dd6b:	not    r11
   14001dd6e:	mov    QWORD PTR [rip+0x22263],r11        # 0x14003ffd8
   14001dd75:	add    rsp,0x20
   14001dd79:	pop    rdi
   14001dd7a:	ret    
   14001dd7b:	int3   
   14001dd7c:	int3   
   14001dd7d:	int3   
   14001dd7e:	int3   
   14001dd7f:	int3   
   14001dd80:	mov    QWORD PTR [rip+0x27cf9],rcx        # 0x140045a80
   14001dd87:	ret    
   14001dd88:	int3   
   14001dd89:	int3   
   14001dd8a:	int3   
   14001dd8b:	int3   
   14001dd8c:	int3   
   14001dd8d:	int3   
   14001dd8e:	int3   
   14001dd8f:	int3   
   14001dd90:	rex push rbx
   14001dd92:	sub    rsp,0x5a0
   14001dd99:	lea    rcx,[rsp+0xd0]
   14001dda1:	call   QWORD PTR [rip+0x13479]        # 0x140031220
   14001dda7:	lea    rcx,[rsp+0x30]
   14001ddac:	xor    edx,edx
   14001ddae:	mov    r8d,0x98
   14001ddb4:	call   0x14001b520
   14001ddb9:	mov    rax,QWORD PTR [rsp+0x5a8]
   14001ddc1:	mov    DWORD PTR [rsp+0x30],0xc000000d
   14001ddc9:	mov    QWORD PTR [rsp+0x40],rax
   14001ddce:	lea    rax,[rsp+0x30]
   14001ddd3:	mov    QWORD PTR [rsp+0x20],rax
   14001ddd8:	lea    rax,[rsp+0xd0]
   14001dde0:	mov    QWORD PTR [rsp+0x28],rax
   14001dde5:	call   QWORD PTR [rip+0x1342d]        # 0x140031218
   14001ddeb:	xor    ecx,ecx
   14001dded:	mov    ebx,eax
   14001ddef:	call   QWORD PTR [rip+0x1336b]        # 0x140031160
   14001ddf5:	lea    rcx,[rsp+0x20]
   14001ddfa:	call   QWORD PTR [rip+0x136a8]        # 0x1400314a8
   14001de00:	test   eax,eax
   14001de02:	jne    0x14001de10
   14001de04:	test   ebx,ebx
   14001de06:	jne    0x14001de10
   14001de08:	lea    ecx,[rax+0x2]
   14001de0b:	call   0x140027080
   14001de10:	call   QWORD PTR [rip+0x134ba]        # 0x1400312d0
   14001de16:	mov    edx,0xc000000d
   14001de1b:	mov    rcx,rax
   14001de1e:	call   QWORD PTR [rip+0x133e4]        # 0x140031208
   14001de24:	add    rsp,0x5a0
   14001de2b:	pop    rbx
   14001de2c:	ret    
   14001de2d:	int3   
   14001de2e:	int3   
   14001de2f:	int3   
   14001de30:	mov    QWORD PTR [rsp+0x8],rbx
   14001de35:	mov    QWORD PTR [rsp+0x10],rbp
   14001de3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001de3f:	push   rdi
   14001de40:	sub    rsp,0x5b0
   14001de47:	mov    rbp,rcx
   14001de4a:	mov    rcx,QWORD PTR [rip+0x27c2f]        # 0x140045a80
   14001de51:	mov    ebx,r9d
   14001de54:	mov    rdi,r8
   14001de57:	mov    rsi,rdx
   14001de5a:	call   0x14001d640
   14001de5f:	test   rax,rax
   14001de62:	je     0x14001de84
   14001de64:	mov    r10,QWORD PTR [rsp+0x5e0]
   14001de6c:	mov    r9d,ebx
   14001de6f:	mov    r8,rdi
   14001de72:	mov    rdx,rsi
   14001de75:	mov    rcx,rbp
   14001de78:	mov    QWORD PTR [rsp+0x20],r10
   14001de7d:	call   rax
   14001de7f:	jmp    0x14001df19
   14001de84:	mov    ecx,0x2
   14001de89:	call   0x140027080
   14001de8e:	lea    rcx,[rsp+0xe0]
   14001de96:	call   QWORD PTR [rip+0x13384]        # 0x140031220
   14001de9c:	lea    rcx,[rsp+0x40]
   14001dea1:	xor    edx,edx
   14001dea3:	mov    r8d,0x98
   14001dea9:	call   0x14001b520
   14001deae:	mov    rax,QWORD PTR [rsp+0x5b8]
   14001deb6:	mov    DWORD PTR [rsp+0x40],0xc000000d
   14001debe:	mov    QWORD PTR [rsp+0x50],rax
   14001dec3:	lea    rax,[rsp+0x40]
   14001dec8:	mov    QWORD PTR [rsp+0x30],rax
   14001decd:	lea    rax,[rsp+0xe0]
   14001ded5:	mov    QWORD PTR [rsp+0x38],rax
   14001deda:	call   QWORD PTR [rip+0x13338]        # 0x140031218
   14001dee0:	xor    ecx,ecx
   14001dee2:	mov    ebx,eax
   14001dee4:	call   QWORD PTR [rip+0x13276]        # 0x140031160
   14001deea:	lea    rcx,[rsp+0x30]
   14001deef:	call   QWORD PTR [rip+0x135b3]        # 0x1400314a8
   14001def5:	test   eax,eax
   14001def7:	jne    0x14001df05
   14001def9:	test   ebx,ebx
   14001defb:	jne    0x14001df05
   14001defd:	lea    ecx,[rax+0x2]
   14001df00:	call   0x140027080
   14001df05:	call   QWORD PTR [rip+0x133c5]        # 0x1400312d0
   14001df0b:	mov    edx,0xc000000d
   14001df10:	mov    rcx,rax
   14001df13:	call   QWORD PTR [rip+0x132ef]        # 0x140031208
   14001df19:	lea    r11,[rsp+0x5b0]
   14001df21:	mov    rbx,QWORD PTR [r11+0x10]
   14001df25:	mov    rbp,QWORD PTR [r11+0x18]
   14001df29:	mov    rsi,QWORD PTR [r11+0x20]
   14001df2d:	mov    rsp,r11
   14001df30:	pop    rdi
   14001df31:	ret    
   14001df32:	int3   
   14001df33:	int3   
   14001df34:	int3   
   14001df35:	int3   
   14001df36:	int3   
   14001df37:	int3   
   14001df38:	int3   
   14001df39:	int3   
   14001df3a:	int3   
   14001df3b:	int3   
   14001df3c:	int3   
   14001df3d:	int3   
   14001df3e:	int3   
   14001df3f:	int3   
   14001df40:	mov    QWORD PTR [rsp+0x8],rbx
   14001df45:	mov    QWORD PTR [rsp+0x10],rsi
   14001df4a:	push   rdi
   14001df4b:	sub    rsp,0x20
   14001df4f:	lea    rbx,[rcx+0x1c]
   14001df53:	mov    rsi,rcx
   14001df56:	mov    edi,0x101
   14001df5b:	mov    rcx,rbx
   14001df5e:	mov    r8,rdi
   14001df61:	xor    edx,edx
   14001df63:	call   0x14001b520
   14001df68:	xor    r11d,r11d
   14001df6b:	lea    r8,[rip+0x2246e]        # 0x1400403e0
   14001df72:	mov    DWORD PTR [rsi+0x4],r11d
   14001df76:	mov    DWORD PTR [rsi+0x8],r11d
   14001df7a:	mov    DWORD PTR [rsi+0xc],r11d
   14001df7e:	mov    QWORD PTR [rsi+0x10],r11
   14001df82:	sub    r8,rsi
   14001df85:	mov    DWORD PTR [rsi+0x18],r11d
   14001df89:	data16 xchg ax,ax
   14001df8c:	data16 data16 xchg ax,ax
   14001df90:	movzx  eax,BYTE PTR [r8+rbx*1]
   14001df95:	add    rbx,0x1
   14001df99:	sub    rdi,0x1
   14001df9d:	mov    BYTE PTR [rbx-0x1],al
   14001dfa0:	jne    0x14001df90
   14001dfa2:	lea    r9,[rip+0x22438]        # 0x1400403e1
   14001dfa9:	lea    rcx,[rsi+0x11d]
   14001dfb0:	mov    edx,0x80
   14001dfb5:	sub    r9,rsi
   14001dfb8:	data16 data16 xchg ax,ax
   14001dfbc:	data16 data16 xchg ax,ax
   14001dfc0:	movzx  eax,BYTE PTR [rcx+r8*1]
   14001dfc5:	add    rcx,0x2
   14001dfc9:	sub    rdx,0x1
   14001dfcd:	mov    BYTE PTR [rcx-0x2],al
   14001dfd0:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   14001dfd6:	mov    BYTE PTR [rcx-0x1],al
   14001dfd9:	jne    0x14001dfc0
   14001dfdb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dfe0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001dfe5:	add    rsp,0x20
   14001dfe9:	pop    rdi
   14001dfea:	ret    
   14001dfeb:	int3   
   14001dfec:	int3   
   14001dfed:	int3   
   14001dfee:	int3   
   14001dfef:	int3   
   14001dff0:	mov    QWORD PTR [rsp+0x18],rbx
   14001dff5:	mov    QWORD PTR [rsp+0x20],rbp
   14001dffa:	push   rdi
   14001dffb:	sub    rsp,0x580
   14001e002:	mov    rax,QWORD PTR [rip+0x21fc7]        # 0x14003ffd0
   14001e009:	xor    rax,rsp
   14001e00c:	mov    QWORD PTR [rsp+0x570],rax
   14001e014:	mov    rbp,rcx
   14001e017:	mov    ecx,DWORD PTR [rcx+0x4]
   14001e01a:	lea    rdx,[rsp+0x50]
   14001e01f:	call   QWORD PTR [rip+0x13203]        # 0x140031228
   14001e025:	test   eax,eax
   14001e027:	je     0x14001e18d
   14001e02d:	xor    ebx,ebx
   14001e02f:	mov    QWORD PTR [rsp+0x598],rsi
   14001e037:	lea    rdx,[rsp+0x70]
   14001e03c:	mov    eax,ebx
   14001e03e:	mov    edi,0x100
   14001e043:	mov    BYTE PTR [rdx],al
   14001e045:	add    eax,0x1
   14001e048:	add    rdx,0x1
   14001e04c:	cmp    eax,edi
   14001e04e:	jb     0x14001e043
   14001e050:	movzx  eax,BYTE PTR [rsp+0x56]
   14001e055:	mov    BYTE PTR [rsp+0x70],0x20
   14001e05a:	lea    rsi,[rsp+0x56]
   14001e05f:	test   al,al
   14001e061:	je     0x14001e091
   14001e063:	movzx  edx,BYTE PTR [rsi+0x1]
   14001e067:	movzx  r8d,al
   14001e06b:	cmp    r8d,edx
   14001e06e:	ja     0x14001e086
   14001e070:	sub    edx,r8d
   14001e073:	mov    rax,r8
   14001e076:	lea    rcx,[rsp+r8*1+0x70]
   14001e07b:	lea    r8d,[rdx+0x1]
   14001e07f:	mov    dl,0x20
   14001e081:	call   0x14001b520
   14001e086:	mov    al,BYTE PTR [rsi+0x2]
   14001e089:	add    rsi,0x2
   14001e08d:	test   al,al
   14001e08f:	jne    0x14001e063
   14001e091:	mov    eax,DWORD PTR [rbp+0xc]
   14001e094:	mov    DWORD PTR [rsp+0x38],ebx
   14001e098:	lea    r8,[rsp+0x70]
   14001e09d:	mov    DWORD PTR [rsp+0x30],eax
   14001e0a1:	mov    eax,DWORD PTR [rbp+0x4]
   14001e0a4:	mov    r9d,edi
   14001e0a7:	mov    DWORD PTR [rsp+0x28],eax
   14001e0ab:	lea    rax,[rsp+0x370]
   14001e0b3:	mov    edx,0x1
   14001e0b8:	xor    ecx,ecx
   14001e0ba:	mov    QWORD PTR [rsp+0x20],rax
   14001e0bf:	call   0x140027990
   14001e0c4:	mov    eax,DWORD PTR [rbp+0x4]
   14001e0c7:	mov    edx,DWORD PTR [rbp+0xc]
   14001e0ca:	mov    DWORD PTR [rsp+0x40],ebx
   14001e0ce:	mov    DWORD PTR [rsp+0x38],eax
   14001e0d2:	lea    rax,[rsp+0x170]
   14001e0da:	mov    DWORD PTR [rsp+0x30],edi
   14001e0de:	mov    QWORD PTR [rsp+0x28],rax
   14001e0e3:	lea    r9,[rsp+0x70]
   14001e0e8:	mov    r8d,edi
   14001e0eb:	xor    ecx,ecx
   14001e0ed:	mov    DWORD PTR [rsp+0x20],edi
   14001e0f1:	call   0x1400275d0
   14001e0f6:	mov    eax,DWORD PTR [rbp+0x4]
   14001e0f9:	mov    edx,DWORD PTR [rbp+0xc]
   14001e0fc:	mov    DWORD PTR [rsp+0x40],ebx
   14001e100:	mov    DWORD PTR [rsp+0x38],eax
   14001e104:	lea    rax,[rsp+0x270]
   14001e10c:	mov    DWORD PTR [rsp+0x30],edi
   14001e110:	mov    QWORD PTR [rsp+0x28],rax
   14001e115:	lea    r9,[rsp+0x70]
   14001e11a:	mov    r8d,0x200
   14001e120:	xor    ecx,ecx
   14001e122:	mov    DWORD PTR [rsp+0x20],edi
   14001e126:	call   0x1400275d0
   14001e12b:	mov    rsi,QWORD PTR [rsp+0x598]
   14001e133:	lea    r11,[rsp+0x370]
   14001e13b:	lea    rcx,[rbp+0x1d]
   14001e13f:	nop
   14001e140:	movzx  eax,WORD PTR [r11]
   14001e144:	test   al,0x1
   14001e146:	je     0x14001e15b
   14001e148:	movzx  eax,BYTE PTR [rsp+rbx*1+0x170]
   14001e150:	or     BYTE PTR [rcx],0x10
   14001e153:	mov    BYTE PTR [rcx+0x100],al
   14001e159:	jmp    0x14001e179
   14001e15b:	test   al,0x2
   14001e15d:	je     0x14001e172
   14001e15f:	movzx  eax,BYTE PTR [rsp+rbx*1+0x270]
   14001e167:	or     BYTE PTR [rcx],0x20
   14001e16a:	mov    BYTE PTR [rcx+0x100],al
   14001e170:	jmp    0x14001e179
   14001e172:	mov    BYTE PTR [rcx+0x100],0x0
   14001e179:	add    rcx,0x1
   14001e17d:	add    rbx,0x1
   14001e181:	add    r11,0x2
   14001e185:	sub    rdi,0x1
   14001e189:	jne    0x14001e140
   14001e18b:	jmp    0x14001e1de
   14001e18d:	xor    ebx,ebx
   14001e18f:	lea    rcx,[rbp+0x1d]
   14001e193:	mov    edi,0x100
   14001e198:	data16 data16 xchg ax,ax
   14001e19c:	data16 data16 xchg ax,ax
   14001e1a0:	lea    edx,[rbx-0x61]
   14001e1a3:	lea    eax,[rdx+0x20]
   14001e1a6:	cmp    eax,0x19
   14001e1a9:	ja     0x14001e1b9
   14001e1ab:	or     BYTE PTR [rcx],0x10
   14001e1ae:	lea    eax,[rbx+0x20]
   14001e1b1:	mov    BYTE PTR [rcx+0x100],al
   14001e1b7:	jmp    0x14001e1d3
   14001e1b9:	cmp    edx,0x19
   14001e1bc:	ja     0x14001e1cc
   14001e1be:	or     BYTE PTR [rcx],0x20
   14001e1c1:	lea    eax,[rbx-0x20]
   14001e1c4:	mov    BYTE PTR [rcx+0x100],al
   14001e1ca:	jmp    0x14001e1d3
   14001e1cc:	mov    BYTE PTR [rcx+0x100],0x0
   14001e1d3:	add    ebx,0x1
   14001e1d6:	add    rcx,0x1
   14001e1da:	cmp    ebx,edi
   14001e1dc:	jb     0x14001e1a0
   14001e1de:	mov    rcx,QWORD PTR [rsp+0x570]
   14001e1e6:	xor    rcx,rsp
   14001e1e9:	call   0x140019370
   14001e1ee:	lea    r11,[rsp+0x580]
   14001e1f6:	mov    rbx,QWORD PTR [r11+0x20]
   14001e1fa:	mov    rbp,QWORD PTR [r11+0x28]
   14001e1fe:	mov    rsp,r11
   14001e201:	pop    rdi
   14001e202:	ret    
   14001e203:	int3   
   14001e204:	int3   
   14001e205:	int3   
   14001e206:	int3   
   14001e207:	int3   
   14001e208:	int3   
   14001e209:	int3   
   14001e20a:	int3   
   14001e20b:	int3   
   14001e20c:	int3   
   14001e20d:	int3   
   14001e20e:	int3   
   14001e20f:	int3   
   14001e210:	mov    QWORD PTR [rsp+0x10],rbx
   14001e215:	push   rdi
   14001e216:	sub    rsp,0x20
   14001e21a:	call   0x14001d930
   14001e21f:	mov    rdi,rax
   14001e222:	mov    ecx,DWORD PTR [rax+0xc8]
   14001e228:	test   DWORD PTR [rip+0x226ea],ecx        # 0x140040918
   14001e22e:	je     0x14001e243
   14001e230:	cmp    QWORD PTR [rax+0xc0],0x0
   14001e238:	je     0x14001e243
   14001e23a:	mov    rbx,QWORD PTR [rax+0xb8]
   14001e241:	jmp    0x14001e2b1
   14001e243:	mov    ecx,0xd
   14001e248:	call   0x140021b50
   14001e24d:	nop
   14001e24e:	mov    rbx,QWORD PTR [rdi+0xb8]
   14001e255:	mov    QWORD PTR [rsp+0x30],rbx
   14001e25a:	cmp    rbx,QWORD PTR [rip+0x225af]        # 0x140040810
   14001e261:	je     0x14001e2a7
   14001e263:	test   rbx,rbx
   14001e266:	je     0x14001e284
   14001e268:	lock add DWORD PTR [rbx],0xffffffff
   14001e26c:	jne    0x14001e284
   14001e26e:	lea    rax,[rip+0x2216b]        # 0x1400403e0
   14001e275:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e27a:	cmp    rcx,rax
   14001e27d:	je     0x14001e284
   14001e27f:	call   0x14001a540
   14001e284:	mov    rax,QWORD PTR [rip+0x22585]        # 0x140040810
   14001e28b:	mov    QWORD PTR [rdi+0xb8],rax
   14001e292:	mov    rax,QWORD PTR [rip+0x22577]        # 0x140040810
   14001e299:	mov    QWORD PTR [rsp+0x30],rax
   14001e29e:	lock add DWORD PTR [rax],0x1
   14001e2a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e2a7:	mov    ecx,0xd
   14001e2ac:	call   0x140021a20
   14001e2b1:	test   rbx,rbx
   14001e2b4:	jne    0x14001e2be
   14001e2b6:	lea    ecx,[rbx+0x20]
   14001e2b9:	call   0x140019980
   14001e2be:	mov    rax,rbx
   14001e2c1:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e2c6:	add    rsp,0x20
   14001e2ca:	pop    rdi
   14001e2cb:	ret    
   14001e2cc:	int3   
   14001e2cd:	int3   
   14001e2ce:	int3   
   14001e2cf:	int3   
   14001e2d0:	rex push rbp
   14001e2d2:	sub    rsp,0x20
   14001e2d6:	mov    rbp,rdx
   14001e2d9:	mov    ecx,0xd
   14001e2de:	call   0x140021a20
   14001e2e3:	add    rsp,0x20
   14001e2e7:	pop    rbp
   14001e2e8:	ret    
   14001e2e9:	int3   
   14001e2ea:	int3   
   14001e2eb:	int3   
   14001e2ec:	int3   
   14001e2ed:	int3   
   14001e2ee:	int3   
   14001e2ef:	int3   
   14001e2f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e2f5:	mov    QWORD PTR [rsp+0x10],rbp
   14001e2fa:	mov    QWORD PTR [rsp+0x18],rsi
   14001e2ff:	mov    QWORD PTR [rsp+0x20],rdi
   14001e304:	push   r12
   14001e306:	sub    rsp,0x20
   14001e30a:	mov    edi,ecx
   14001e30c:	xor    sil,sil
   14001e30f:	call   0x14001d930
   14001e314:	mov    r12,QWORD PTR [rax+0xc0]
   14001e31b:	mov    rbp,QWORD PTR [rax+0xb8]
   14001e322:	mov    rbx,rax
   14001e325:	cmp    r12,QWORD PTR [rip+0x22764]        # 0x140040a90
   14001e32c:	je     0x14001e344
   14001e32e:	mov    edx,DWORD PTR [rax+0xc8]
   14001e334:	test   DWORD PTR [rip+0x225de],edx        # 0x140040918
   14001e33a:	jne    0x14001e344
   14001e33c:	call   0x14001ed60
   14001e341:	mov    r12,rax
   14001e344:	cmp    rbp,QWORD PTR [rip+0x224c5]        # 0x140040810
   14001e34b:	je     0x14001e360
   14001e34d:	mov    ecx,DWORD PTR [rbx+0xc8]
   14001e353:	test   DWORD PTR [rip+0x225bf],ecx        # 0x140040918
   14001e359:	jne    0x14001e360
   14001e35b:	call   0x14001e210
   14001e360:	mov    ecx,DWORD PTR [rbx+0xc8]
   14001e366:	test   cl,0x2
   14001e369:	jne    0x14001e377
   14001e36b:	or     ecx,0x2
   14001e36e:	mov    sil,0x1
   14001e371:	mov    DWORD PTR [rbx+0xc8],ecx
   14001e377:	cmp    edi,0xfffffffe
   14001e37a:	mov    DWORD PTR [rip+0x27704],0x0        # 0x140045a88
   14001e384:	jne    0x14001e3a4
   14001e386:	mov    DWORD PTR [rip+0x276f8],0x1        # 0x140045a88
   14001e390:	call   QWORD PTR [rip+0x12ea2]        # 0x140031238
   14001e396:	test   sil,sil
   14001e399:	je     0x14001e3df
   14001e39b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14001e3a2:	jmp    0x14001e3df
   14001e3a4:	cmp    edi,0xfffffffd
   14001e3a7:	jne    0x14001e3bb
   14001e3a9:	mov    DWORD PTR [rip+0x276d5],0x1        # 0x140045a88
   14001e3b3:	call   QWORD PTR [rip+0x12e77]        # 0x140031230
   14001e3b9:	jmp    0x14001e396
   14001e3bb:	cmp    edi,0xfffffffc
   14001e3be:	jne    0x14001e3d1
   14001e3c0:	mov    eax,DWORD PTR [r12+0x4]
   14001e3c5:	mov    DWORD PTR [rip+0x276b9],0x1        # 0x140045a88
   14001e3cf:	jmp    0x14001e396
   14001e3d1:	test   sil,sil
   14001e3d4:	je     0x14001e3dd
   14001e3d6:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14001e3dd:	mov    eax,edi
   14001e3df:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e3e4:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e3e9:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e3ee:	mov    rdi,QWORD PTR [rsp+0x48]
   14001e3f3:	add    rsp,0x20
   14001e3f7:	pop    r12
   14001e3f9:	ret    
   14001e3fa:	int3   
   14001e3fb:	int3   
   14001e3fc:	int3   
   14001e3fd:	int3   
   14001e3fe:	int3   
   14001e3ff:	int3   
   14001e400:	rex push rbx
   14001e402:	push   rbp
   14001e403:	push   rsi
   14001e404:	push   rdi
   14001e405:	sub    rsp,0x48
   14001e409:	mov    rax,QWORD PTR [rip+0x21bc0]        # 0x14003ffd0
   14001e410:	xor    rax,rsp
   14001e413:	mov    QWORD PTR [rsp+0x38],rax
   14001e418:	mov    rbx,rdx
   14001e41b:	call   0x14001e2f0
   14001e420:	test   eax,eax
   14001e422:	mov    edi,eax
   14001e424:	jne    0x14001e4b1
   14001e42a:	lea    rdi,[rbx+0x1c]
   14001e42e:	mov    esi,0x101
   14001e433:	xor    edx,edx
   14001e435:	mov    rcx,rdi
   14001e438:	mov    r8,rsi
   14001e43b:	call   0x14001b520
   14001e440:	xor    ebp,ebp
   14001e442:	lea    rdx,[rip+0x21f97]        # 0x1400403e0
   14001e449:	mov    DWORD PTR [rbx+0x4],ebp
   14001e44c:	mov    DWORD PTR [rbx+0x8],ebp
   14001e44f:	mov    DWORD PTR [rbx+0xc],ebp
   14001e452:	mov    QWORD PTR [rbx+0x10],rbp
   14001e456:	sub    rdx,rbx
   14001e459:	mov    DWORD PTR [rbx+0x18],ebp
   14001e45c:	data16 data16 xchg ax,ax
   14001e460:	movzx  eax,BYTE PTR [rdx+rdi*1]
   14001e464:	add    rdi,0x1
   14001e468:	sub    rsi,0x1
   14001e46c:	mov    BYTE PTR [rdi-0x1],al
   14001e46f:	jne    0x14001e460
   14001e471:	lea    r9,[rip+0x21f69]        # 0x1400403e1
   14001e478:	lea    rcx,[rbx+0x11d]
   14001e47f:	mov    r8d,0x80
   14001e485:	sub    r9,rbx
   14001e488:	data16 data16 xchg ax,ax
   14001e48c:	data16 data16 xchg ax,ax
   14001e490:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14001e494:	add    rcx,0x2
   14001e498:	sub    r8,0x1
   14001e49c:	mov    BYTE PTR [rcx-0x2],al
   14001e49f:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   14001e4a5:	mov    BYTE PTR [rcx-0x1],al
   14001e4a8:	jne    0x14001e490
   14001e4aa:	xor    eax,eax
   14001e4ac:	jmp    0x14001e7a6
   14001e4b1:	mov    QWORD PTR [rsp+0x80],r12
   14001e4b9:	xor    ebp,ebp
   14001e4bb:	mov    QWORD PTR [rsp+0x40],r13
   14001e4c0:	lea    r13,[rip+0x22359]        # 0x140040820
   14001e4c7:	mov    ecx,ebp
   14001e4c9:	mov    r12,rbp
   14001e4cc:	mov    rax,r13
   14001e4cf:	nop
   14001e4d0:	cmp    DWORD PTR [rax],edi
   14001e4d2:	je     0x14001e67b
   14001e4d8:	add    ecx,0x1
   14001e4db:	add    r12,0x1
   14001e4df:	add    rax,0x30
   14001e4e3:	cmp    ecx,0x5
   14001e4e6:	jb     0x14001e4d0
   14001e4e8:	cmp    edi,0xfde8
   14001e4ee:	je     0x14001e673
   14001e4f4:	cmp    edi,0xfde9
   14001e4fa:	je     0x14001e673
   14001e500:	movzx  ecx,di
   14001e503:	call   QWORD PTR [rip+0x12d37]        # 0x140031240
   14001e509:	test   eax,eax
   14001e50b:	je     0x14001e673
   14001e511:	lea    rdx,[rsp+0x20]
   14001e516:	mov    ecx,edi
   14001e518:	call   QWORD PTR [rip+0x12d0a]        # 0x140031228
   14001e51e:	test   eax,eax
   14001e520:	je     0x14001e65e
   14001e526:	lea    rcx,[rbx+0x1c]
   14001e52a:	mov    r8d,0x101
   14001e530:	xor    edx,edx
   14001e532:	call   0x14001b520
   14001e537:	cmp    DWORD PTR [rsp+0x20],0x1
   14001e53c:	mov    DWORD PTR [rbx+0x4],edi
   14001e53f:	mov    DWORD PTR [rbx+0xc],ebp
   14001e542:	jbe    0x14001e64f
   14001e548:	cmp    BYTE PTR [rsp+0x26],bpl
   14001e54d:	lea    rdx,[rsp+0x26]
   14001e552:	je     0x14001e589
   14001e554:	movzx  eax,BYTE PTR [rdx+0x1]
   14001e558:	test   al,al
   14001e55a:	je     0x14001e589
   14001e55c:	movzx  r8d,BYTE PTR [rdx]
   14001e560:	movzx  ecx,al
   14001e563:	cmp    r8d,ecx
   14001e566:	ja     0x14001e580
   14001e568:	sub    ecx,r8d
   14001e56b:	lea    rax,[r8+rbx*1+0x1d]
   14001e570:	add    ecx,0x1
   14001e573:	or     BYTE PTR [rax],0x4
   14001e576:	add    rax,0x1
   14001e57a:	sub    rcx,0x1
   14001e57e:	jne    0x14001e573
   14001e580:	add    rdx,0x2
   14001e584:	cmp    BYTE PTR [rdx],bpl
   14001e587:	jne    0x14001e554
   14001e589:	lea    rax,[rbx+0x1f]
   14001e58d:	mov    ecx,0x7f
   14001e592:	xchg   ax,ax
   14001e594:	data16 data16 xchg ax,ax
   14001e598:	data16 data16 xchg ax,ax
   14001e59c:	data16 data16 xchg ax,ax
   14001e5a0:	or     BYTE PTR [rax-0x1],0x8
   14001e5a4:	or     BYTE PTR [rax],0x8
   14001e5a7:	add    rax,0x2
   14001e5ab:	sub    rcx,0x1
   14001e5af:	jne    0x14001e5a0
   14001e5b1:	mov    ecx,DWORD PTR [rbx+0x4]
   14001e5b4:	sub    ecx,0x3a4
   14001e5ba:	je     0x14001e634
   14001e5bc:	sub    ecx,0x4
   14001e5bf:	je     0x14001e619
   14001e5c1:	sub    ecx,0xd
   14001e5c4:	je     0x14001e5fe
   14001e5c6:	cmp    ecx,0x1
   14001e5c9:	je     0x14001e5e3
   14001e5cb:	mov    DWORD PTR [rbx+0x8],0x1
   14001e5d2:	mov    eax,ebp
   14001e5d4:	mov    DWORD PTR [rbx+0xc],eax
   14001e5d7:	mov    QWORD PTR [rbx+0x10],rbp
   14001e5db:	mov    DWORD PTR [rbx+0x18],ebp
   14001e5de:	jmp    0x14001e78f
   14001e5e3:	mov    DWORD PTR [rbx+0x8],0x1
   14001e5ea:	mov    eax,0x404
   14001e5ef:	mov    DWORD PTR [rbx+0xc],eax
   14001e5f2:	mov    QWORD PTR [rbx+0x10],rbp
   14001e5f6:	mov    DWORD PTR [rbx+0x18],ebp
   14001e5f9:	jmp    0x14001e78f
   14001e5fe:	mov    DWORD PTR [rbx+0x8],0x1
   14001e605:	mov    eax,0x412
   14001e60a:	mov    DWORD PTR [rbx+0xc],eax
   14001e60d:	mov    QWORD PTR [rbx+0x10],rbp
   14001e611:	mov    DWORD PTR [rbx+0x18],ebp
   14001e614:	jmp    0x14001e78f
   14001e619:	mov    DWORD PTR [rbx+0x8],0x1
   14001e620:	mov    eax,0x804
   14001e625:	mov    DWORD PTR [rbx+0xc],eax
   14001e628:	mov    QWORD PTR [rbx+0x10],rbp
   14001e62c:	mov    DWORD PTR [rbx+0x18],ebp
   14001e62f:	jmp    0x14001e78f
   14001e634:	mov    DWORD PTR [rbx+0x8],0x1
   14001e63b:	mov    eax,0x411
   14001e640:	mov    DWORD PTR [rbx+0xc],eax
   14001e643:	mov    QWORD PTR [rbx+0x10],rbp
   14001e647:	mov    DWORD PTR [rbx+0x18],ebp
   14001e64a:	jmp    0x14001e78f
   14001e64f:	mov    DWORD PTR [rbx+0x8],ebp
   14001e652:	mov    QWORD PTR [rbx+0x10],rbp
   14001e656:	mov    DWORD PTR [rbx+0x18],ebp
   14001e659:	jmp    0x14001e78f
   14001e65e:	cmp    DWORD PTR [rip+0x27424],ebp        # 0x140045a88
   14001e664:	je     0x14001e673
   14001e666:	mov    rcx,rbx
   14001e669:	call   0x14001df40
   14001e66e:	jmp    0x14001e797
   14001e673:	or     eax,0xffffffff
   14001e676:	jmp    0x14001e799
   14001e67b:	lea    rcx,[rbx+0x1c]
   14001e67f:	mov    r8d,0x101
   14001e685:	xor    edx,edx
   14001e687:	call   0x14001b520
   14001e68c:	lea    r9,[r12+r12*2]
   14001e690:	lea    rax,[rip+0x22199]        # 0x140040830
   14001e697:	shl    r9,0x4
   14001e69b:	lea    r11,[rip+0x22176]        # 0x140040818
   14001e6a2:	mov    r10d,0x4
   14001e6a8:	add    r9,rax
   14001e6ab:	xchg   ax,ax
   14001e6ad:	data16 xchg ax,ax
   14001e6b0:	cmp    BYTE PTR [r9],bpl
   14001e6b3:	mov    r8,r9
   14001e6b6:	je     0x14001e700
   14001e6b8:	data16 data16 xchg ax,ax
   14001e6bc:	data16 data16 xchg ax,ax
   14001e6c0:	movzx  eax,BYTE PTR [r8+0x1]
   14001e6c5:	test   al,al
   14001e6c7:	je     0x14001e700
   14001e6c9:	movzx  edx,BYTE PTR [r8]
   14001e6cd:	movzx  eax,al
   14001e6d0:	cmp    edx,eax
   14001e6d2:	ja     0x14001e6f7
   14001e6d4:	lea    rcx,[rdx+rbx*1+0x1d]
   14001e6d9:	data16 xchg ax,ax
   14001e6dc:	data16 data16 xchg ax,ax
   14001e6e0:	movzx  eax,BYTE PTR [r11]
   14001e6e4:	add    edx,0x1
   14001e6e7:	add    rcx,0x1
   14001e6eb:	or     BYTE PTR [rcx-0x1],al
   14001e6ee:	movzx  eax,BYTE PTR [r8+0x1]
   14001e6f3:	cmp    edx,eax
   14001e6f5:	jbe    0x14001e6e0
   14001e6f7:	add    r8,0x2
   14001e6fb:	cmp    BYTE PTR [r8],bpl
   14001e6fe:	jne    0x14001e6c0
   14001e700:	add    r9,0x8
   14001e704:	add    r11,0x1
   14001e708:	sub    r10,0x1
   14001e70c:	jne    0x14001e6b0
   14001e70e:	mov    DWORD PTR [rbx+0x4],edi
   14001e711:	sub    edi,0x3a4
   14001e717:	mov    DWORD PTR [rbx+0x8],0x1
   14001e71e:	je     0x14001e744
   14001e720:	sub    edi,0x4
   14001e723:	je     0x14001e73d
   14001e725:	sub    edi,0xd
   14001e728:	je     0x14001e736
   14001e72a:	cmp    edi,0x1
   14001e72d:	jne    0x14001e749
   14001e72f:	mov    ebp,0x404
   14001e734:	jmp    0x14001e749
   14001e736:	mov    ebp,0x412
   14001e73b:	jmp    0x14001e749
   14001e73d:	mov    ebp,0x804
   14001e742:	jmp    0x14001e749
   14001e744:	mov    ebp,0x411
   14001e749:	mov    DWORD PTR [rbx+0xc],ebp
   14001e74c:	lea    rcx,[r12+r12*2]
   14001e750:	add    rcx,rcx
   14001e753:	movzx  eax,WORD PTR [r13+rcx*8+0x4]
   14001e759:	mov    WORD PTR [rbx+0x10],ax
   14001e75d:	movzx  eax,WORD PTR [r13+rcx*8+0x6]
   14001e763:	mov    WORD PTR [rbx+0x12],ax
   14001e767:	movzx  eax,WORD PTR [r13+rcx*8+0x8]
   14001e76d:	mov    WORD PTR [rbx+0x14],ax
   14001e771:	movzx  eax,WORD PTR [r13+rcx*8+0xa]
   14001e777:	mov    WORD PTR [rbx+0x16],ax
   14001e77b:	movzx  eax,WORD PTR [r13+rcx*8+0xc]
   14001e781:	mov    WORD PTR [rbx+0x18],ax
   14001e785:	movzx  eax,WORD PTR [r13+rcx*8+0xe]
   14001e78b:	mov    WORD PTR [rbx+0x1a],ax
   14001e78f:	mov    rcx,rbx
   14001e792:	call   0x14001dff0
   14001e797:	xor    eax,eax
   14001e799:	mov    r12,QWORD PTR [rsp+0x80]
   14001e7a1:	mov    r13,QWORD PTR [rsp+0x40]
   14001e7a6:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e7ab:	xor    rcx,rsp
   14001e7ae:	call   0x140019370
   14001e7b3:	add    rsp,0x48
   14001e7b7:	pop    rdi
   14001e7b8:	pop    rsi
   14001e7b9:	pop    rbp
   14001e7ba:	pop    rbx
   14001e7bb:	ret    
   14001e7bc:	int3   
   14001e7bd:	int3   
   14001e7be:	int3   
   14001e7bf:	int3   
   14001e7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e7c5:	mov    QWORD PTR [rsp+0x10],rsi
   14001e7ca:	mov    QWORD PTR [rsp+0x18],rdi
   14001e7cf:	push   r12
   14001e7d1:	push   r13
   14001e7d3:	push   r14
   14001e7d5:	sub    rsp,0x30
   14001e7d9:	mov    edi,ecx
   14001e7db:	or     r14d,0xffffffff
   14001e7df:	call   0x14001d930
   14001e7e4:	mov    rsi,rax
   14001e7e7:	call   0x14001e210
   14001e7ec:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001e7f3:	mov    ecx,edi
   14001e7f5:	call   0x14001e2f0
   14001e7fa:	mov    r12d,eax
   14001e7fd:	cmp    eax,DWORD PTR [rbx+0x4]
   14001e800:	je     0x14001e99f
   14001e806:	mov    ecx,0x220
   14001e80b:	call   0x1400216b0
   14001e810:	mov    rdi,rax
   14001e813:	test   rax,rax
   14001e816:	je     0x14001e9a4
   14001e81c:	mov    rdx,QWORD PTR [rsi+0xb8]
   14001e823:	mov    rcx,rax
   14001e826:	mov    r8d,0x220
   14001e82c:	call   0x14001baf0
   14001e831:	xor    ebx,ebx
   14001e833:	mov    DWORD PTR [rdi],ebx
   14001e835:	mov    rdx,rdi
   14001e838:	mov    ecx,r12d
   14001e83b:	call   0x14001e400
   14001e840:	mov    r14d,eax
   14001e843:	test   eax,eax
   14001e845:	jne    0x14001e979
   14001e84b:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001e852:	lock add DWORD PTR [rcx],0xffffffff
   14001e856:	jne    0x14001e872
   14001e858:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001e85f:	lea    r12,[rip+0x21b7a]        # 0x1400403e0
   14001e866:	cmp    rcx,r12
   14001e869:	je     0x14001e879
   14001e86b:	call   0x14001a540
   14001e870:	jmp    0x14001e879
   14001e872:	lea    r12,[rip+0x21b67]        # 0x1400403e0
   14001e879:	mov    QWORD PTR [rsi+0xb8],rdi
   14001e880:	lock add DWORD PTR [rdi],0x1
   14001e884:	test   BYTE PTR [rsi+0xc8],0x2
   14001e88b:	jne    0x14001e9a4
   14001e891:	test   BYTE PTR [rip+0x22080],0x1        # 0x140040918
   14001e898:	jne    0x14001e9a4
   14001e89e:	mov    ecx,0xd
   14001e8a3:	call   0x140021b50
   14001e8a8:	nop
   14001e8a9:	mov    eax,DWORD PTR [rdi+0x4]
   14001e8ac:	mov    DWORD PTR [rip+0x271ea],eax        # 0x140045a9c
   14001e8b2:	mov    eax,DWORD PTR [rdi+0x8]
   14001e8b5:	mov    DWORD PTR [rip+0x271e5],eax        # 0x140045aa0
   14001e8bb:	mov    eax,DWORD PTR [rdi+0xc]
   14001e8be:	mov    DWORD PTR [rip+0x271e0],eax        # 0x140045aa4
   14001e8c4:	mov    edx,ebx
   14001e8c6:	mov    DWORD PTR [rsp+0x20],ebx
   14001e8ca:	lea    r8,[rip+0xfffffffffffe172f]        # 0x140000000
   14001e8d1:	cmp    edx,0x5
   14001e8d4:	jge    0x14001e8f0
   14001e8d6:	movsxd rcx,edx
   14001e8d9:	movzx  eax,WORD PTR [rdi+rcx*2+0x10]
   14001e8de:	mov    WORD PTR [r8+rcx*2+0x45a90],ax
   14001e8e7:	add    edx,0x1
   14001e8ea:	mov    DWORD PTR [rsp+0x20],edx
   14001e8ee:	jmp    0x14001e8d1
   14001e8f0:	mov    edx,ebx
   14001e8f2:	mov    DWORD PTR [rsp+0x20],ebx
   14001e8f6:	cmp    edx,0x101
   14001e8fc:	jge    0x14001e917
   14001e8fe:	movsxd rcx,edx
   14001e901:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1c]
   14001e906:	mov    BYTE PTR [rcx+r8*1+0x40600],al
   14001e90e:	add    edx,0x1
   14001e911:	mov    DWORD PTR [rsp+0x20],edx
   14001e915:	jmp    0x14001e8f6
   14001e917:	mov    DWORD PTR [rsp+0x20],ebx
   14001e91b:	xchg   ax,ax
   14001e91d:	data16 xchg ax,ax
   14001e920:	cmp    ebx,0x100
   14001e926:	jge    0x14001e944
   14001e928:	movsxd rcx,ebx
   14001e92b:	movzx  eax,BYTE PTR [rcx+rdi*1+0x11d]
   14001e933:	mov    BYTE PTR [rcx+r8*1+0x40710],al
   14001e93b:	add    ebx,0x1
   14001e93e:	mov    DWORD PTR [rsp+0x20],ebx
   14001e942:	jmp    0x14001e920
   14001e944:	mov    rax,QWORD PTR [rip+0x21ec5]        # 0x140040810
   14001e94b:	lock add DWORD PTR [rax],0xffffffff
   14001e94f:	jne    0x14001e962
   14001e951:	mov    rcx,QWORD PTR [rip+0x21eb8]        # 0x140040810
   14001e958:	cmp    rcx,r12
   14001e95b:	je     0x14001e962
   14001e95d:	call   0x14001a540
   14001e962:	mov    QWORD PTR [rip+0x21ea7],rdi        # 0x140040810
   14001e969:	lock add DWORD PTR [rdi],0x1
   14001e96d:	mov    ecx,0xd
   14001e972:	call   0x140021a20
   14001e977:	jmp    0x14001e9a4
   14001e979:	cmp    eax,0xffffffff
   14001e97c:	jne    0x14001e9a4
   14001e97e:	lea    r12,[rip+0x21a5b]        # 0x1400403e0
   14001e985:	cmp    rdi,r12
   14001e988:	je     0x14001e992
   14001e98a:	mov    rcx,rdi
   14001e98d:	call   0x14001a540
   14001e992:	call   0x14001b280
   14001e997:	mov    DWORD PTR [rax],0x16
   14001e99d:	jmp    0x14001e9a4
   14001e99f:	xor    ebx,ebx
   14001e9a1:	mov    r14d,ebx
   14001e9a4:	mov    eax,r14d
   14001e9a7:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e9ac:	mov    rsi,QWORD PTR [rsp+0x58]
   14001e9b1:	mov    rdi,QWORD PTR [rsp+0x60]
   14001e9b6:	add    rsp,0x30
   14001e9ba:	pop    r14
   14001e9bc:	pop    r13
   14001e9be:	pop    r12
   14001e9c0:	ret    
   14001e9c1:	int3   
   14001e9c2:	int3   
   14001e9c3:	int3   
   14001e9c4:	int3   
   14001e9c5:	int3   
   14001e9c6:	int3   
   14001e9c7:	int3   
   14001e9c8:	int3   
   14001e9c9:	int3   
   14001e9ca:	int3   
   14001e9cb:	int3   
   14001e9cc:	int3   
   14001e9cd:	int3   
   14001e9ce:	int3   
   14001e9cf:	int3   
   14001e9d0:	rex push rbp
   14001e9d2:	sub    rsp,0x20
   14001e9d6:	mov    rbp,rdx
   14001e9d9:	mov    ecx,0xd
   14001e9de:	call   0x140021a20
   14001e9e3:	add    rsp,0x20
   14001e9e7:	pop    rbp
   14001e9e8:	ret    
   14001e9e9:	int3   
   14001e9ea:	int3   
   14001e9eb:	int3   
   14001e9ec:	int3   
   14001e9ed:	int3   
   14001e9ee:	int3   
   14001e9ef:	int3   
   14001e9f0:	sub    rsp,0x28
   14001e9f4:	cmp    DWORD PTR [rip+0x28f7d],0x0        # 0x140047978
   14001e9fb:	jne    0x14001ea11
   14001e9fd:	mov    ecx,0xfffffffd
   14001ea02:	call   0x14001e7c0
   14001ea07:	mov    DWORD PTR [rip+0x28f67],0x1        # 0x140047978
   14001ea11:	xor    eax,eax
   14001ea13:	add    rsp,0x28
   14001ea17:	ret    
   14001ea18:	int3   
   14001ea19:	int3   
   14001ea1a:	int3   
   14001ea1b:	int3   
   14001ea1c:	int3   
   14001ea1d:	int3   
   14001ea1e:	int3   
   14001ea1f:	int3   
   14001ea20:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea25:	mov    QWORD PTR [rsp+0x10],rbp
   14001ea2a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ea2f:	push   rdi
   14001ea30:	sub    rsp,0x20
   14001ea34:	mov    rax,QWORD PTR [rcx+0x128]
   14001ea3b:	mov    rdi,rcx
   14001ea3e:	test   rax,rax
   14001ea41:	je     0x14001eabc
   14001ea43:	lea    rcx,[rip+0x22636]        # 0x140041080
   14001ea4a:	cmp    rax,rcx
   14001ea4d:	je     0x14001eabc
   14001ea4f:	mov    rax,QWORD PTR [rdi+0x110]
   14001ea56:	test   rax,rax
   14001ea59:	je     0x14001eabc
   14001ea5b:	cmp    DWORD PTR [rax],0x0
   14001ea5e:	jne    0x14001eabc
   14001ea60:	mov    rcx,QWORD PTR [rdi+0x120]
   14001ea67:	test   rcx,rcx
   14001ea6a:	je     0x14001ea82
   14001ea6c:	cmp    DWORD PTR [rcx],0x0
   14001ea6f:	jne    0x14001ea82
   14001ea71:	call   0x14001a540
   14001ea76:	mov    rcx,QWORD PTR [rdi+0x128]
   14001ea7d:	call   0x140027d20
   14001ea82:	mov    rcx,QWORD PTR [rdi+0x118]
   14001ea89:	test   rcx,rcx
   14001ea8c:	je     0x14001eaa4
   14001ea8e:	cmp    DWORD PTR [rcx],0x0
   14001ea91:	jne    0x14001eaa4
   14001ea93:	call   0x14001a540
   14001ea98:	mov    rcx,QWORD PTR [rdi+0x128]
   14001ea9f:	call   0x140027cd0
   14001eaa4:	mov    rcx,QWORD PTR [rdi+0x110]
   14001eaab:	call   0x14001a540
   14001eab0:	mov    rcx,QWORD PTR [rdi+0x128]
   14001eab7:	call   0x14001a540
   14001eabc:	mov    rax,QWORD PTR [rdi+0x130]
   14001eac3:	test   rax,rax
   14001eac6:	je     0x14001eb0c
   14001eac8:	cmp    DWORD PTR [rax],0x0
   14001eacb:	jne    0x14001eb0c
   14001eacd:	mov    rcx,QWORD PTR [rdi+0x138]
   14001ead4:	sub    rcx,0xfe
   14001eadb:	call   0x14001a540
   14001eae0:	mov    rcx,QWORD PTR [rdi+0x148]
   14001eae7:	add    rcx,0xffffffffffffff80
   14001eaeb:	call   0x14001a540
   14001eaf0:	mov    rcx,QWORD PTR [rdi+0x150]
   14001eaf7:	add    rcx,0xffffffffffffff80
   14001eafb:	call   0x14001a540
   14001eb00:	mov    rcx,QWORD PTR [rdi+0x130]
   14001eb07:	call   0x14001a540
   14001eb0c:	mov    rcx,QWORD PTR [rdi+0x158]
   14001eb13:	lea    rax,[rip+0x223e6]        # 0x140040f00
   14001eb1a:	cmp    rcx,rax
   14001eb1d:	je     0x14001eb39
   14001eb1f:	cmp    DWORD PTR [rcx+0x160],0x0
   14001eb26:	jne    0x14001eb39
   14001eb28:	call   0x140027ae0
   14001eb2d:	mov    rcx,QWORD PTR [rdi+0x158]
   14001eb34:	call   0x14001a540
   14001eb39:	lea    rbx,[rdi+0x58]
   14001eb3d:	mov    esi,0x6
   14001eb42:	lea    rbp,[rip+0x21dd7]        # 0x140040920
   14001eb49:	data16 xchg ax,ax
   14001eb4c:	data16 data16 xchg ax,ax
   14001eb50:	cmp    QWORD PTR [rbx-0x10],rbp
   14001eb54:	je     0x14001eb68
   14001eb56:	mov    rcx,QWORD PTR [rbx]
   14001eb59:	test   rcx,rcx
   14001eb5c:	je     0x14001eb68
   14001eb5e:	cmp    DWORD PTR [rcx],0x0
   14001eb61:	jne    0x14001eb68
   14001eb63:	call   0x14001a540
   14001eb68:	cmp    QWORD PTR [rbx-0x8],0x0
   14001eb6d:	je     0x14001eb82
   14001eb6f:	mov    rcx,QWORD PTR [rbx+0x8]
   14001eb73:	test   rcx,rcx
   14001eb76:	je     0x14001eb82
   14001eb78:	cmp    DWORD PTR [rcx],0x0
   14001eb7b:	jne    0x14001eb82
   14001eb7d:	call   0x14001a540
   14001eb82:	add    rbx,0x20
   14001eb86:	sub    rsi,0x1
   14001eb8a:	jne    0x14001eb50
   14001eb8c:	mov    rcx,rdi
   14001eb8f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb94:	mov    rbp,QWORD PTR [rsp+0x38]
   14001eb99:	mov    rsi,QWORD PTR [rsp+0x40]
   14001eb9e:	add    rsp,0x20
   14001eba2:	pop    rdi
   14001eba3:	jmp    0x14001a540
   14001eba8:	int3   
   14001eba9:	int3   
   14001ebaa:	int3   
   14001ebab:	int3   
   14001ebac:	int3   
   14001ebad:	int3   
   14001ebae:	int3   
   14001ebaf:	int3   
   14001ebb0:	mov    rdx,rcx
   14001ebb3:	lock add DWORD PTR [rcx],0x1
   14001ebb7:	mov    rax,QWORD PTR [rcx+0x110]
   14001ebbe:	test   rax,rax
   14001ebc1:	je     0x14001ebc7
   14001ebc3:	lock add DWORD PTR [rax],0x1
   14001ebc7:	mov    rax,QWORD PTR [rcx+0x120]
   14001ebce:	test   rax,rax
   14001ebd1:	je     0x14001ebd7
   14001ebd3:	lock add DWORD PTR [rax],0x1
   14001ebd7:	mov    rax,QWORD PTR [rcx+0x118]
   14001ebde:	test   rax,rax
   14001ebe1:	je     0x14001ebe7
   14001ebe3:	lock add DWORD PTR [rax],0x1
   14001ebe7:	mov    rax,QWORD PTR [rcx+0x130]
   14001ebee:	test   rax,rax
   14001ebf1:	je     0x14001ebf7
   14001ebf3:	lock add DWORD PTR [rax],0x1
   14001ebf7:	lea    rax,[rcx+0x58]
   14001ebfb:	mov    r8d,0x6
   14001ec01:	lea    r9,[rip+0x21d18]        # 0x140040920
   14001ec08:	cmp    QWORD PTR [rax-0x10],r9
   14001ec0c:	je     0x14001ec1a
   14001ec0e:	mov    rcx,QWORD PTR [rax]
   14001ec11:	test   rcx,rcx
   14001ec14:	je     0x14001ec1a
   14001ec16:	lock add DWORD PTR [rcx],0x1
   14001ec1a:	cmp    QWORD PTR [rax-0x8],0x0
   14001ec1f:	je     0x14001ec2e
   14001ec21:	mov    rcx,QWORD PTR [rax+0x8]
   14001ec25:	test   rcx,rcx
   14001ec28:	je     0x14001ec2e
   14001ec2a:	lock add DWORD PTR [rcx],0x1
   14001ec2e:	add    rax,0x20
   14001ec32:	sub    r8,0x1
   14001ec36:	jne    0x14001ec08
   14001ec38:	mov    rax,QWORD PTR [rdx+0x158]
   14001ec3f:	lock add DWORD PTR [rax+0x160],0x1
   14001ec47:	ret    
   14001ec48:	int3   
   14001ec49:	int3   
   14001ec4a:	int3   
   14001ec4b:	int3   
   14001ec4c:	int3   
   14001ec4d:	int3   
   14001ec4e:	int3   
   14001ec4f:	int3   
   14001ec50:	test   rcx,rcx
   14001ec53:	je     0x14001ecef
   14001ec59:	lock add DWORD PTR [rcx],0xffffffff
   14001ec5d:	mov    rax,QWORD PTR [rcx+0x110]
   14001ec64:	test   rax,rax
   14001ec67:	je     0x14001ec6d
   14001ec69:	lock add DWORD PTR [rax],0xffffffff
   14001ec6d:	mov    rax,QWORD PTR [rcx+0x120]
   14001ec74:	test   rax,rax
   14001ec77:	je     0x14001ec7d
   14001ec79:	lock add DWORD PTR [rax],0xffffffff
   14001ec7d:	mov    rax,QWORD PTR [rcx+0x118]
   14001ec84:	test   rax,rax
   14001ec87:	je     0x14001ec8d
   14001ec89:	lock add DWORD PTR [rax],0xffffffff
   14001ec8d:	mov    rax,QWORD PTR [rcx+0x130]
   14001ec94:	test   rax,rax
   14001ec97:	je     0x14001ec9d
   14001ec99:	lock add DWORD PTR [rax],0xffffffff
   14001ec9d:	lea    rax,[rcx+0x58]
   14001eca1:	mov    r8d,0x6
   14001eca7:	lea    r9,[rip+0x21c72]        # 0x140040920
   14001ecae:	xchg   ax,ax
   14001ecb0:	cmp    QWORD PTR [rax-0x10],r9
   14001ecb4:	je     0x14001ecc2
   14001ecb6:	mov    rdx,QWORD PTR [rax]
   14001ecb9:	test   rdx,rdx
   14001ecbc:	je     0x14001ecc2
   14001ecbe:	lock add DWORD PTR [rdx],0xffffffff
   14001ecc2:	cmp    QWORD PTR [rax-0x8],0x0
   14001ecc7:	je     0x14001ecd6
   14001ecc9:	mov    rdx,QWORD PTR [rax+0x8]
   14001eccd:	test   rdx,rdx
   14001ecd0:	je     0x14001ecd6
   14001ecd2:	lock add DWORD PTR [rdx],0xffffffff
   14001ecd6:	add    rax,0x20
   14001ecda:	sub    r8,0x1
   14001ecde:	jne    0x14001ecb0
   14001ece0:	mov    rax,QWORD PTR [rcx+0x158]
   14001ece7:	lock add DWORD PTR [rax+0x160],0xffffffff
   14001ecef:	mov    rax,rcx
   14001ecf2:	ret    
   14001ecf3:	int3   
   14001ecf4:	int3   
   14001ecf5:	int3   
   14001ecf6:	int3   
   14001ecf7:	int3   
   14001ecf8:	int3   
   14001ecf9:	int3   
   14001ecfa:	int3   
   14001ecfb:	int3   
   14001ecfc:	int3   
   14001ecfd:	int3   
   14001ecfe:	int3   
   14001ecff:	int3   
   14001ed00:	rex push rbx
   14001ed02:	sub    rsp,0x20
   14001ed06:	test   rdx,rdx
   14001ed09:	mov    rbx,rdx
   14001ed0c:	je     0x14001ed53
   14001ed0e:	test   rcx,rcx
   14001ed11:	je     0x14001ed53
   14001ed13:	mov    r10,QWORD PTR [rcx]
   14001ed16:	cmp    r10,rdx
   14001ed19:	je     0x14001ed4a
   14001ed1b:	mov    QWORD PTR [rcx],rdx
   14001ed1e:	mov    rcx,rdx
   14001ed21:	call   0x14001ebb0
   14001ed26:	test   r10,r10
   14001ed29:	je     0x14001ed4a
   14001ed2b:	mov    rcx,r10
   14001ed2e:	call   0x14001ec50
   14001ed33:	cmp    DWORD PTR [r10],0x0
   14001ed37:	jne    0x14001ed4a
   14001ed39:	lea    rax,[rip+0x21bf0]        # 0x140040930
   14001ed40:	cmp    r10,rax
   14001ed43:	je     0x14001ed4a
   14001ed45:	call   0x14001ea20
   14001ed4a:	mov    rax,rbx
   14001ed4d:	add    rsp,0x20
   14001ed51:	pop    rbx
   14001ed52:	ret    
   14001ed53:	xor    eax,eax
   14001ed55:	add    rsp,0x20
   14001ed59:	pop    rbx
   14001ed5a:	ret    
   14001ed5b:	int3   
   14001ed5c:	int3   
   14001ed5d:	int3   
   14001ed5e:	int3   
   14001ed5f:	int3   
   14001ed60:	rex push rbx
   14001ed62:	sub    rsp,0x20
   14001ed66:	call   0x14001d930
   14001ed6b:	mov    rbx,rax
   14001ed6e:	mov    ecx,DWORD PTR [rax+0xc8]
   14001ed74:	test   DWORD PTR [rip+0x21b9e],ecx        # 0x140040918
   14001ed7a:	je     0x14001ed94
   14001ed7c:	cmp    QWORD PTR [rax+0xc0],0x0
   14001ed84:	je     0x14001ed94
   14001ed86:	call   0x14001d930
   14001ed8b:	mov    rbx,QWORD PTR [rax+0xc0]
   14001ed92:	jmp    0x14001edbf
   14001ed94:	mov    ecx,0xc
   14001ed99:	call   0x140021b50
   14001ed9e:	nop
   14001ed9f:	lea    rcx,[rbx+0xc0]
   14001eda6:	mov    rdx,QWORD PTR [rip+0x21ce3]        # 0x140040a90
   14001edad:	call   0x14001ed00
   14001edb2:	mov    rbx,rax
   14001edb5:	mov    ecx,0xc
   14001edba:	call   0x140021a20
   14001edbf:	test   rbx,rbx
   14001edc2:	jne    0x14001edcc
   14001edc4:	lea    ecx,[rbx+0x20]
   14001edc7:	call   0x140019980
   14001edcc:	mov    rax,rbx
   14001edcf:	add    rsp,0x20
   14001edd3:	pop    rbx
   14001edd4:	ret    
   14001edd5:	int3   
   14001edd6:	int3   
   14001edd7:	int3   
   14001edd8:	int3   
   14001edd9:	int3   
   14001edda:	int3   
   14001eddb:	int3   
   14001eddc:	int3   
   14001eddd:	int3   
   14001edde:	int3   
   14001eddf:	int3   
   14001ede0:	rex push rbp
   14001ede2:	sub    rsp,0x20
   14001ede6:	mov    rbp,rdx
   14001ede9:	mov    ecx,0xc
   14001edee:	call   0x140021a20
   14001edf3:	add    rsp,0x20
   14001edf7:	pop    rbp
   14001edf8:	ret    
   14001edf9:	int3   
   14001edfa:	int3   
   14001edfb:	int3   
   14001edfc:	int3   
   14001edfd:	int3   
   14001edfe:	int3   
   14001edff:	int3   
   14001ee00:	rex push rbp
   14001ee02:	push   r12
   14001ee04:	push   r13
   14001ee06:	push   r14
   14001ee08:	push   r15
   14001ee0a:	sub    rsp,0x60
   14001ee0e:	lea    rbp,[rsp+0x40]
   14001ee13:	mov    QWORD PTR [rbp+0x50],rbx
   14001ee17:	mov    QWORD PTR [rbp+0x58],rsi
   14001ee1b:	mov    QWORD PTR [rbp+0x60],rdi
   14001ee1f:	mov    rax,QWORD PTR [rip+0x211aa]        # 0x14003ffd0
   14001ee26:	xor    rax,rbp
   14001ee29:	mov    QWORD PTR [rbp+0x10],rax
   14001ee2d:	mov    r10d,DWORD PTR [rip+0x26c9c]        # 0x140045ad0
   14001ee34:	xor    r13d,r13d
   14001ee37:	mov    r12,r9
   14001ee3a:	test   r10d,r10d
   14001ee3d:	mov    QWORD PTR [rbp+0x8],r9
   14001ee41:	mov    r11d,r8d
   14001ee44:	mov    DWORD PTR [rbp+0x0],r8d
   14001ee48:	mov    r15d,edx
   14001ee4b:	mov    rdi,rcx
   14001ee4e:	jne    0x14001eea0
   14001ee50:	lea    r9d,[r13+0x1]
   14001ee54:	lea    r8,[rip+0x16329]        # 0x140035184
   14001ee5b:	mov    edx,0x100
   14001ee60:	xor    ecx,ecx
   14001ee62:	mov    DWORD PTR [rsp+0x28],r13d
   14001ee67:	mov    QWORD PTR [rsp+0x20],r13
   14001ee6c:	call   QWORD PTR [rip+0x123de]        # 0x140031250
   14001ee72:	test   eax,eax
   14001ee74:	je     0x14001ee7c
   14001ee76:	lea    r10d,[r13+0x1]
   14001ee7a:	jmp    0x14001ee95
   14001ee7c:	call   QWORD PTR [rip+0x125f6]        # 0x140031478
   14001ee82:	mov    r10d,DWORD PTR [rip+0x26c47]        # 0x140045ad0
   14001ee89:	mov    ecx,0x2
   14001ee8e:	cmp    eax,0x78
   14001ee91:	cmove  r10d,ecx
   14001ee95:	mov    r11d,DWORD PTR [rbp+0x0]
   14001ee99:	mov    DWORD PTR [rip+0x26c30],r10d        # 0x140045ad0
   14001eea0:	mov    ebx,DWORD PTR [rbp+0x70]
   14001eea3:	test   ebx,ebx
   14001eea5:	jle    0x14001eeca
   14001eea7:	mov    eax,ebx
   14001eea9:	mov    rcx,r12
   14001eeac:	data16 data16 xchg ax,ax
   14001eeb0:	sub    eax,0x1
   14001eeb3:	or     edx,0xffffffff
   14001eeb6:	cmp    WORD PTR [rcx],r13w
   14001eeba:	je     0x14001eec6
   14001eebc:	add    rcx,0x2
   14001eec0:	test   eax,eax
   14001eec2:	jne    0x14001eeb0
   14001eec4:	mov    eax,edx
   14001eec6:	sub    edx,eax
   14001eec8:	add    ebx,edx
   14001eeca:	cmp    r10d,0x1
   14001eece:	jne    0x14001eefa
   14001eed0:	mov    eax,DWORD PTR [rbp+0x80]
   14001eed6:	mov    r9d,ebx
   14001eed9:	mov    r8,r12
   14001eedc:	mov    DWORD PTR [rsp+0x28],eax
   14001eee0:	mov    rax,QWORD PTR [rbp+0x78]
   14001eee4:	mov    edx,r11d
   14001eee7:	mov    ecx,r15d
   14001eeea:	mov    QWORD PTR [rsp+0x20],rax
   14001eeef:	call   QWORD PTR [rip+0x1235b]        # 0x140031250
   14001eef5:	jmp    0x14001f18f
   14001eefa:	cmp    r10d,0x2
   14001eefe:	je     0x14001ef09
   14001ef00:	test   r10d,r10d
   14001ef03:	jne    0x14001f18d
   14001ef09:	test   r15d,r15d
   14001ef0c:	mov    r14d,r13d
   14001ef0f:	jne    0x14001ef18
   14001ef11:	mov    rax,QWORD PTR [rdi]
   14001ef14:	mov    r15d,DWORD PTR [rax+0x14]
   14001ef18:	mov    esi,DWORD PTR [rbp+0x88]
   14001ef1e:	test   esi,esi
   14001ef20:	jne    0x14001ef28
   14001ef22:	mov    rax,QWORD PTR [rdi]
   14001ef25:	mov    esi,DWORD PTR [rax+0x4]
   14001ef28:	mov    ecx,r15d
   14001ef2b:	call   0x140027e90
   14001ef30:	cmp    esi,eax
   14001ef32:	je     0x14001ef3a
   14001ef34:	cmp    eax,0xffffffff
   14001ef37:	cmovne esi,eax
   14001ef3a:	mov    QWORD PTR [rsp+0x38],r13
   14001ef3f:	mov    QWORD PTR [rsp+0x30],r13
   14001ef44:	mov    r9d,ebx
   14001ef47:	mov    r8,r12
   14001ef4a:	xor    edx,edx
   14001ef4c:	mov    ecx,esi
   14001ef4e:	mov    DWORD PTR [rsp+0x28],r13d
   14001ef53:	mov    QWORD PTR [rsp+0x20],r13
   14001ef58:	call   QWORD PTR [rip+0x1249a]        # 0x1400313f8
   14001ef5e:	test   eax,eax
   14001ef60:	movsxd r13,eax
   14001ef63:	je     0x14001f18d
   14001ef69:	jle    0x14001f18d
   14001ef6f:	xor    edx,edx
   14001ef71:	mov    rax,0xffffffffffffffe0
   14001ef78:	mov    rcx,r13
   14001ef7b:	div    r13
   14001ef7e:	cmp    rax,0x1
   14001ef82:	jb     0x14001f18d
   14001ef88:	add    rcx,0x10
   14001ef8c:	movabs rdx,0xffffffffffffff0
   14001ef96:	cmp    rcx,0x400
   14001ef9d:	ja     0x14001efcf
   14001ef9f:	lea    rax,[rcx+0xf]
   14001efa3:	cmp    rax,rcx
   14001efa6:	ja     0x14001efab
   14001efa8:	mov    rax,rdx
   14001efab:	and    rax,0xfffffffffffffff0
   14001efaf:	call   0x140030670
   14001efb4:	sub    rsp,rax
   14001efb7:	lea    r12,[rsp+0x40]
   14001efbc:	test   r12,r12
   14001efbf:	je     0x14001f18d
   14001efc5:	mov    DWORD PTR [r12],0xcccc
   14001efcd:	jmp    0x14001efe2
   14001efcf:	call   0x14001a470
   14001efd4:	test   rax,rax
   14001efd7:	mov    r12,rax
   14001efda:	je     0x14001efe6
   14001efdc:	mov    DWORD PTR [rax],0xdddd
   14001efe2:	add    r12,0x10
   14001efe6:	test   r12,r12
   14001efe9:	je     0x14001f18d
   14001efef:	mov    r8,QWORD PTR [rbp+0x8]
   14001eff3:	xor    edi,edi
   14001eff5:	mov    r9d,ebx
   14001eff8:	mov    QWORD PTR [rsp+0x38],rdi
   14001effd:	mov    QWORD PTR [rsp+0x30],rdi
   14001f002:	xor    edx,edx
   14001f004:	mov    ecx,esi
   14001f006:	mov    DWORD PTR [rsp+0x28],r13d
   14001f00b:	mov    QWORD PTR [rsp+0x20],r12
   14001f010:	call   QWORD PTR [rip+0x123e2]        # 0x1400313f8
   14001f016:	test   eax,eax
   14001f018:	je     0x14001f173
   14001f01e:	mov    edx,DWORD PTR [rbp+0x0]
   14001f021:	mov    r9d,r13d
   14001f024:	mov    r8,r12
   14001f027:	mov    ecx,r15d
   14001f02a:	mov    DWORD PTR [rsp+0x28],edi
   14001f02e:	mov    QWORD PTR [rsp+0x20],rdi
   14001f033:	call   QWORD PTR [rip+0x1220f]        # 0x140031248
   14001f039:	test   eax,eax
   14001f03b:	movsxd rdi,eax
   14001f03e:	jle    0x14001f173
   14001f044:	xor    edx,edx
   14001f046:	mov    rax,0xffffffffffffffe0
   14001f04d:	mov    rcx,rdi
   14001f050:	div    rdi
   14001f053:	cmp    rax,0x1
   14001f057:	jb     0x14001f173
   14001f05d:	add    rcx,0x10
   14001f061:	cmp    rcx,0x400
   14001f068:	ja     0x14001f09f
   14001f06a:	lea    rax,[rcx+0xf]
   14001f06e:	cmp    rax,rcx
   14001f071:	ja     0x14001f07d
   14001f073:	movabs rax,0xffffffffffffff0
   14001f07d:	and    rax,0xfffffffffffffff0
   14001f081:	call   0x140030670
   14001f086:	sub    rsp,rax
   14001f089:	lea    rbx,[rsp+0x40]
   14001f08e:	test   rbx,rbx
   14001f091:	je     0x14001f173
   14001f097:	mov    DWORD PTR [rbx],0xcccc
   14001f09d:	jmp    0x14001f0b2
   14001f09f:	call   0x14001a470
   14001f0a4:	test   rax,rax
   14001f0a7:	mov    rbx,rax
   14001f0aa:	je     0x14001f0b6
   14001f0ac:	mov    DWORD PTR [rax],0xdddd
   14001f0b2:	add    rbx,0x10
   14001f0b6:	test   rbx,rbx
   14001f0b9:	je     0x14001f173
   14001f0bf:	mov    r9d,r13d
   14001f0c2:	mov    r13d,DWORD PTR [rbp+0x0]
   14001f0c6:	mov    r8,r12
   14001f0c9:	mov    ecx,r15d
   14001f0cc:	mov    edx,r13d
   14001f0cf:	mov    DWORD PTR [rsp+0x28],edi
   14001f0d3:	mov    QWORD PTR [rsp+0x20],rbx
   14001f0d8:	call   QWORD PTR [rip+0x1216a]        # 0x140031248
   14001f0de:	test   eax,eax
   14001f0e0:	je     0x14001f161
   14001f0e2:	bt     r13d,0xa
   14001f0e7:	jae    0x14001f12c
   14001f0e9:	movsxd rax,DWORD PTR [rbp+0x80]
   14001f0f0:	mov    r14d,edi
   14001f0f3:	test   eax,eax
   14001f0f5:	je     0x14001f161
   14001f0f7:	cmp    eax,edi
   14001f0f9:	jg     0x14001f0fe
   14001f0fb:	lea    edi,[rax-0x1]
   14001f0fe:	mov    rcx,QWORD PTR [rbp+0x78]
   14001f102:	movsxd r9,edi
   14001f105:	mov    rdx,rax
   14001f108:	mov    r8,rbx
   14001f10b:	call   0x140026e50
   14001f110:	test   eax,eax
   14001f112:	je     0x14001f161
   14001f114:	xor    eax,eax
   14001f116:	xor    r9d,r9d
   14001f119:	xor    r8d,r8d
   14001f11c:	xor    edx,edx
   14001f11e:	xor    ecx,ecx
   14001f120:	mov    QWORD PTR [rsp+0x20],rax
   14001f125:	call   0x14001dd90
   14001f12a:	jmp    0x14001f161
   14001f12c:	mov    eax,DWORD PTR [rbp+0x80]
   14001f132:	mov    r9d,edi
   14001f135:	mov    r8,rbx
   14001f138:	test   eax,eax
   14001f13a:	mov    edx,0x1
   14001f13f:	mov    ecx,esi
   14001f141:	jne    0x14001f14b
   14001f143:	xor    eax,eax
   14001f145:	mov    DWORD PTR [rsp+0x28],eax
   14001f149:	jmp    0x14001f153
   14001f14b:	mov    DWORD PTR [rsp+0x28],eax
   14001f14f:	mov    rax,QWORD PTR [rbp+0x78]
   14001f153:	mov    QWORD PTR [rsp+0x20],rax
   14001f158:	call   QWORD PTR [rip+0x122f2]        # 0x140031450
   14001f15e:	mov    r14d,eax
   14001f161:	cmp    DWORD PTR [rbx-0x10],0xdddd
   14001f168:	lea    rcx,[rbx-0x10]
   14001f16c:	jne    0x14001f173
   14001f16e:	call   0x14001a540
   14001f173:	cmp    DWORD PTR [r12-0x10],0xdddd
   14001f17c:	lea    rcx,[r12-0x10]
   14001f181:	jne    0x14001f188
   14001f183:	call   0x14001a540
   14001f188:	mov    eax,r14d
   14001f18b:	jmp    0x14001f18f
   14001f18d:	xor    eax,eax
   14001f18f:	mov    rcx,QWORD PTR [rbp+0x10]
   14001f193:	xor    rcx,rbp
   14001f196:	call   0x140019370
   14001f19b:	mov    rbx,QWORD PTR [rbp+0x50]
   14001f19f:	mov    rsi,QWORD PTR [rbp+0x58]
   14001f1a3:	mov    rdi,QWORD PTR [rbp+0x60]
   14001f1a7:	lea    rsp,[rbp+0x20]
   14001f1ab:	pop    r15
   14001f1ad:	pop    r14
   14001f1af:	pop    r13
   14001f1b1:	pop    r12
   14001f1b3:	pop    rbp
   14001f1b4:	ret    
   14001f1b5:	int3   
   14001f1b6:	int3   
   14001f1b7:	int3   
   14001f1b8:	int3   
   14001f1b9:	int3   
   14001f1ba:	int3   
   14001f1bb:	int3   
   14001f1bc:	int3   
   14001f1bd:	int3   
   14001f1be:	int3   
   14001f1bf:	int3   
   14001f1c0:	mov    rax,rsp
   14001f1c3:	push   rbx
   14001f1c4:	sub    rsp,0x70
   14001f1c8:	mov    QWORD PTR [rax+0x8],rbp
   14001f1cc:	mov    QWORD PTR [rax+0x18],rdi
   14001f1d0:	xor    dil,dil
   14001f1d3:	test   rcx,rcx
   14001f1d6:	mov    QWORD PTR [rax-0x10],r12
   14001f1da:	mov    QWORD PTR [rax-0x18],r13
   14001f1de:	mov    BYTE PTR [rax-0x20],dil
   14001f1e2:	mov    rbp,r9
   14001f1e5:	mov    r12d,r8d
   14001f1e8:	mov    r13d,edx
   14001f1eb:	jne    0x14001f27e
   14001f1f1:	mov    QWORD PTR [rax+0x10],rsi
   14001f1f5:	call   0x14001d930
   14001f1fa:	mov    rcx,QWORD PTR [rax+0xc0]
   14001f201:	mov    rsi,QWORD PTR [rax+0xb8]
   14001f208:	mov    rbx,rax
   14001f20b:	cmp    rcx,QWORD PTR [rip+0x2187e]        # 0x140040a90
   14001f212:	mov    QWORD PTR [rsp+0x50],rax
   14001f217:	mov    QWORD PTR [rsp+0x40],rcx
   14001f21c:	mov    QWORD PTR [rsp+0x48],rsi
   14001f221:	je     0x14001f23b
   14001f223:	mov    ecx,DWORD PTR [rax+0xc8]
   14001f229:	test   DWORD PTR [rip+0x216e9],ecx        # 0x140040918
   14001f22f:	jne    0x14001f23b
   14001f231:	call   0x14001ed60
   14001f236:	mov    QWORD PTR [rsp+0x40],rax
   14001f23b:	cmp    rsi,QWORD PTR [rip+0x215ce]        # 0x140040810
   14001f242:	mov    rsi,QWORD PTR [rsp+0x88]
   14001f24a:	je     0x14001f264
   14001f24c:	mov    eax,DWORD PTR [rbx+0xc8]
   14001f252:	test   DWORD PTR [rip+0x216c0],eax        # 0x140040918
   14001f258:	jne    0x14001f264
   14001f25a:	call   0x14001e210
   14001f25f:	mov    QWORD PTR [rsp+0x48],rax
   14001f264:	test   BYTE PTR [rbx+0xc8],0x2
   14001f26b:	jne    0x14001f29b
   14001f26d:	or     DWORD PTR [rbx+0xc8],0x2
   14001f274:	mov    dil,0x1
   14001f277:	mov    BYTE PTR [rsp+0x58],dil
   14001f27c:	jmp    0x14001f29b
   14001f27e:	mov    rax,QWORD PTR [rcx]
   14001f281:	lea    rdx,[rsp+0x40]
   14001f286:	mov    QWORD PTR [rdx],rax
   14001f289:	mov    rax,QWORD PTR [rcx+0x8]
   14001f28d:	mov    QWORD PTR [rdx+0x8],rax
   14001f291:	movzx  edi,BYTE PTR [rsp+0x58]
   14001f296:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f29b:	mov    eax,DWORD PTR [rsp+0xb8]
   14001f2a2:	lea    rcx,[rsp+0x40]
   14001f2a7:	mov    r9,rbp
   14001f2aa:	mov    DWORD PTR [rsp+0x38],eax
   14001f2ae:	mov    eax,DWORD PTR [rsp+0xb0]
   14001f2b5:	mov    r8d,r12d
   14001f2b8:	mov    DWORD PTR [rsp+0x30],eax
   14001f2bc:	mov    rax,QWORD PTR [rsp+0xa8]
   14001f2c4:	mov    edx,r13d
   14001f2c7:	mov    QWORD PTR [rsp+0x28],rax
   14001f2cc:	mov    eax,DWORD PTR [rsp+0xa0]
   14001f2d3:	mov    DWORD PTR [rsp+0x20],eax
   14001f2d7:	call   0x14001ee00
   14001f2dc:	mov    r13,QWORD PTR [rsp+0x60]
   14001f2e1:	mov    r12,QWORD PTR [rsp+0x68]
   14001f2e6:	mov    rbp,QWORD PTR [rsp+0x80]
   14001f2ee:	test   dil,dil
   14001f2f1:	mov    rdi,QWORD PTR [rsp+0x90]
   14001f2f9:	je     0x14001f302
   14001f2fb:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14001f302:	add    rsp,0x70
   14001f306:	pop    rbx
   14001f307:	ret    
   14001f308:	int3   
   14001f309:	int3   
   14001f30a:	int3   
   14001f30b:	int3   
   14001f30c:	int3   
   14001f30d:	int3   
   14001f30e:	int3   
   14001f30f:	int3   
   14001f310:	xor    eax,eax
   14001f312:	test   rdx,rdx
   14001f315:	je     0x14001f32a
   14001f317:	cmp    WORD PTR [rcx],0x0
   14001f31b:	je     0x14001f32a
   14001f31d:	add    rax,0x1
   14001f321:	add    rcx,0x2
   14001f325:	cmp    rax,rdx
   14001f328:	jb     0x14001f317
   14001f32a:	ret    0x0
   14001f32d:	int3   
   14001f32e:	int3   
   14001f32f:	int3   
   14001f330:	mov    QWORD PTR [rsp+0x8],rcx
   14001f335:	sub    rsp,0x88
   14001f33c:	lea    rcx,[rip+0x2683d]        # 0x140045b80
   14001f343:	call   QWORD PTR [rip+0x11ed7]        # 0x140031220
   14001f349:	mov    rax,QWORD PTR [rip+0x26928]        # 0x140045c78
   14001f350:	mov    QWORD PTR [rsp+0x58],rax
   14001f355:	xor    r8d,r8d
   14001f358:	lea    rdx,[rsp+0x60]
   14001f35d:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f362:	call   0x14002fe56
   14001f367:	mov    QWORD PTR [rsp+0x50],rax
   14001f36c:	cmp    QWORD PTR [rsp+0x50],0x0
   14001f372:	je     0x14001f3b5
   14001f374:	mov    QWORD PTR [rsp+0x38],0x0
   14001f37d:	lea    rax,[rsp+0x48]
   14001f382:	mov    QWORD PTR [rsp+0x30],rax
   14001f387:	lea    rax,[rsp+0x40]
   14001f38c:	mov    QWORD PTR [rsp+0x28],rax
   14001f391:	lea    rax,[rip+0x267e8]        # 0x140045b80
   14001f398:	mov    QWORD PTR [rsp+0x20],rax
   14001f39d:	mov    r9,QWORD PTR [rsp+0x50]
   14001f3a2:	mov    r8,QWORD PTR [rsp+0x58]
   14001f3a7:	mov    rdx,QWORD PTR [rsp+0x60]
   14001f3ac:	xor    ecx,ecx
   14001f3ae:	call   0x14002fe68
   14001f3b3:	jmp    0x14001f3d7
   14001f3b5:	mov    rax,QWORD PTR [rsp+0x88]
   14001f3bd:	mov    QWORD PTR [rip+0x268b4],rax        # 0x140045c78
   14001f3c4:	lea    rax,[rsp+0x88]
   14001f3cc:	add    rax,0x8
   14001f3d0:	mov    QWORD PTR [rip+0x26841],rax        # 0x140045c18
   14001f3d7:	mov    rax,QWORD PTR [rip+0x2689a]        # 0x140045c78
   14001f3de:	mov    QWORD PTR [rip+0x2670b],rax        # 0x140045af0
   14001f3e5:	mov    rax,QWORD PTR [rsp+0x90]
   14001f3ed:	mov    QWORD PTR [rip+0x2680c],rax        # 0x140045c00
   14001f3f4:	mov    DWORD PTR [rip+0x266e2],0xc0000409        # 0x140045ae0
   14001f3fe:	mov    DWORD PTR [rip+0x266dc],0x1        # 0x140045ae4
   14001f408:	mov    rax,QWORD PTR [rip+0x20bc1]        # 0x14003ffd0
   14001f40f:	mov    QWORD PTR [rsp+0x68],rax
   14001f414:	mov    rax,QWORD PTR [rip+0x20bbd]        # 0x14003ffd8
   14001f41b:	mov    QWORD PTR [rsp+0x70],rax
   14001f420:	call   QWORD PTR [rip+0x11df2]        # 0x140031218
   14001f426:	mov    DWORD PTR [rip+0x2674c],eax        # 0x140045b78
   14001f42c:	mov    ecx,0x1
   14001f431:	call   0x140027080
   14001f436:	xor    ecx,ecx
   14001f438:	call   QWORD PTR [rip+0x11d22]        # 0x140031160
   14001f43e:	lea    rcx,[rip+0x15d43]        # 0x140035188
   14001f445:	call   QWORD PTR [rip+0x1205d]        # 0x1400314a8
   14001f44b:	cmp    DWORD PTR [rip+0x26726],0x0        # 0x140045b78
   14001f452:	jne    0x14001f45e
   14001f454:	mov    ecx,0x1
   14001f459:	call   0x140027080
   14001f45e:	call   QWORD PTR [rip+0x11e6c]        # 0x1400312d0
   14001f464:	mov    edx,0xc0000409
   14001f469:	mov    rcx,rax
   14001f46c:	call   QWORD PTR [rip+0x11d96]        # 0x140031208
   14001f472:	add    rsp,0x88
   14001f479:	ret    
   14001f47a:	int3   
   14001f47b:	int3   
   14001f47c:	int3   
   14001f47d:	int3   
   14001f47e:	int3   
   14001f47f:	int3   
   14001f480:	rex push rbx
   14001f482:	sub    rsp,0x30
   14001f486:	mov    rbx,rcx
   14001f489:	mov    ecx,0xe
   14001f48e:	call   0x140021b50
   14001f493:	nop
   14001f494:	mov    rax,QWORD PTR [rbx+0x8]
   14001f498:	test   rax,rax
   14001f49b:	je     0x14001f4e4
   14001f49d:	mov    rcx,QWORD PTR [rip+0x26bb4]        # 0x140046058
   14001f4a4:	mov    QWORD PTR [rsp+0x20],rcx
   14001f4a9:	lea    rdx,[rip+0x26ba0]        # 0x140046050
   14001f4b0:	test   rcx,rcx
   14001f4b3:	je     0x14001f4d3
   14001f4b5:	cmp    QWORD PTR [rcx],rax
   14001f4b8:	jne    0x14001f4c9
   14001f4ba:	mov    rax,QWORD PTR [rcx+0x8]
   14001f4be:	mov    QWORD PTR [rdx+0x8],rax
   14001f4c2:	call   0x14001a540
   14001f4c7:	jmp    0x14001f4d3
   14001f4c9:	mov    rdx,rcx
   14001f4cc:	mov    QWORD PTR [rsp+0x20],rcx
   14001f4d1:	jmp    0x14001f4b0
   14001f4d3:	mov    rcx,QWORD PTR [rbx+0x8]
   14001f4d7:	call   0x14001a540
   14001f4dc:	mov    QWORD PTR [rbx+0x8],0x0
   14001f4e4:	mov    ecx,0xe
   14001f4e9:	call   0x140021a20
   14001f4ee:	add    rsp,0x30
   14001f4f2:	pop    rbx
   14001f4f3:	ret    
   14001f4f4:	int3   
   14001f4f5:	int3   
   14001f4f6:	int3   
   14001f4f7:	int3   
   14001f4f8:	int3   
   14001f4f9:	int3   
   14001f4fa:	int3   
   14001f4fb:	int3   
   14001f4fc:	int3   
   14001f4fd:	int3   
   14001f4fe:	int3   
   14001f4ff:	int3   
   14001f500:	rex push rbp
   14001f502:	sub    rsp,0x20
   14001f506:	mov    rbp,rdx
   14001f509:	mov    ecx,0xe
   14001f50e:	call   0x140021a20
   14001f513:	add    rsp,0x20
   14001f517:	pop    rbp
   14001f518:	ret    
   14001f519:	int3   
   14001f51a:	int3   
   14001f51b:	int3   
   14001f51c:	int3   
   14001f51d:	int3   
   14001f51e:	int3   
   14001f51f:	int3   
   14001f520:	mov    QWORD PTR [rsp+0x20],rbx
   14001f525:	mov    DWORD PTR [rsp+0x8],ecx
   14001f529:	push   rdi
   14001f52a:	sub    rsp,0x20
   14001f52e:	mov    rcx,rdx
   14001f531:	mov    rbx,rdx
   14001f534:	call   0x140028fb0
   14001f539:	mov    ecx,DWORD PTR [rbx+0x18]
   14001f53c:	test   cl,0x82
   14001f53f:	movsxd rdi,eax
   14001f542:	jne    0x14001f561
   14001f544:	call   0x14001b280
   14001f549:	mov    DWORD PTR [rax],0x9
   14001f54f:	or     DWORD PTR [rbx+0x18],0x20
   14001f553:	or     eax,0xffffffff
   14001f556:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f55b:	add    rsp,0x20
   14001f55f:	pop    rdi
   14001f560:	ret    
   14001f561:	test   cl,0x40
   14001f564:	je     0x14001f583
   14001f566:	call   0x14001b280
   14001f56b:	mov    DWORD PTR [rax],0x22
   14001f571:	or     DWORD PTR [rbx+0x18],0x20
   14001f575:	or     eax,0xffffffff
   14001f578:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f57d:	add    rsp,0x20
   14001f581:	pop    rdi
   14001f582:	ret    
   14001f583:	mov    QWORD PTR [rsp+0x40],rsi
   14001f588:	xor    esi,esi
   14001f58a:	test   cl,0x1
   14001f58d:	je     0x14001f5a8
   14001f58f:	test   cl,0x10
   14001f592:	mov    DWORD PTR [rbx+0x8],esi
   14001f595:	je     0x14001f638
   14001f59b:	mov    rax,QWORD PTR [rbx+0x10]
   14001f59f:	and    ecx,0xfffffffe
   14001f5a2:	mov    QWORD PTR [rbx],rax
   14001f5a5:	mov    DWORD PTR [rbx+0x18],ecx
   14001f5a8:	mov    eax,DWORD PTR [rbx+0x18]
   14001f5ab:	mov    DWORD PTR [rbx+0x8],esi
   14001f5ae:	and    eax,0xffffffef
   14001f5b1:	or     eax,0x2
   14001f5b4:	test   eax,0x10c
   14001f5b9:	mov    DWORD PTR [rbx+0x18],eax
   14001f5bc:	jne    0x14001f5ed
   14001f5be:	call   0x140028d50
   14001f5c3:	add    rax,0x30
   14001f5c7:	cmp    rbx,rax
   14001f5ca:	je     0x14001f5da
   14001f5cc:	call   0x140028d50
   14001f5d1:	add    rax,0x60
   14001f5d5:	cmp    rbx,rax
   14001f5d8:	jne    0x14001f5e5
   14001f5da:	mov    ecx,edi
   14001f5dc:	call   0x140028cd0
   14001f5e1:	test   eax,eax
   14001f5e3:	jne    0x14001f5ed
   14001f5e5:	mov    rcx,rbx
   14001f5e8:	call   0x140028c70
   14001f5ed:	test   DWORD PTR [rbx+0x18],0x108
   14001f5f4:	mov    QWORD PTR [rsp+0x38],rbp
   14001f5f9:	je     0x14001f6a9
   14001f5ff:	mov    ebp,DWORD PTR [rbx]
   14001f601:	mov    rdx,QWORD PTR [rbx+0x10]
   14001f605:	sub    ebp,DWORD PTR [rbx+0x10]
   14001f608:	lea    rax,[rdx+0x1]
   14001f60c:	mov    QWORD PTR [rbx],rax
   14001f60f:	mov    eax,DWORD PTR [rbx+0x24]
   14001f612:	sub    eax,0x1
   14001f615:	test   ebp,ebp
   14001f617:	mov    DWORD PTR [rbx+0x8],eax
   14001f61a:	jle    0x14001f651
   14001f61c:	mov    r8d,ebp
   14001f61f:	mov    ecx,edi
   14001f621:	call   0x140028b20
   14001f626:	mov    rcx,QWORD PTR [rbx+0x10]
   14001f62a:	mov    esi,eax
   14001f62c:	movzx  eax,BYTE PTR [rsp+0x30]
   14001f631:	mov    BYTE PTR [rcx],al
   14001f633:	jmp    0x14001f6bf
   14001f638:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f63d:	or     ecx,0x20
   14001f640:	or     eax,0xffffffff
   14001f643:	mov    DWORD PTR [rbx+0x18],ecx
   14001f646:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f64b:	add    rsp,0x20
   14001f64f:	pop    rdi
   14001f650:	ret    
   14001f651:	cmp    edi,0xffffffff
   14001f654:	je     0x14001f67d
   14001f656:	cmp    edi,0xfffffffe
   14001f659:	je     0x14001f67d
   14001f65b:	mov    rax,rdi
   14001f65e:	mov    rcx,rdi
   14001f661:	lea    r8,[rip+0x280f8]        # 0x140047760
   14001f668:	and    eax,0x1f
   14001f66b:	sar    rcx,0x5
   14001f66f:	lea    rdx,[rax+rax*4]
   14001f673:	shl    rdx,0x4
   14001f677:	add    rdx,QWORD PTR [r8+rcx*8]
   14001f67b:	jmp    0x14001f684
   14001f67d:	lea    rdx,[rip+0x20cfc]        # 0x140040380
   14001f684:	test   BYTE PTR [rdx+0x8],0x20
   14001f688:	je     0x14001f69d
   14001f68a:	xor    edx,edx
   14001f68c:	mov    ecx,edi
   14001f68e:	lea    r8d,[rdx+0x2]
   14001f692:	call   0x140028240
   14001f697:	cmp    rax,0xffffffffffffffff
   14001f69b:	je     0x14001f6c3
   14001f69d:	mov    rcx,QWORD PTR [rbx+0x10]
   14001f6a1:	mov    al,BYTE PTR [rsp+0x30]
   14001f6a5:	mov    BYTE PTR [rcx],al
   14001f6a7:	jmp    0x14001f6bf
   14001f6a9:	mov    ebp,0x1
   14001f6ae:	lea    rdx,[rsp+0x30]
   14001f6b3:	mov    ecx,edi
   14001f6b5:	mov    r8d,ebp
   14001f6b8:	call   0x140028b20
   14001f6bd:	mov    esi,eax
   14001f6bf:	cmp    esi,ebp
   14001f6c1:	je     0x14001f6cc
   14001f6c3:	or     DWORD PTR [rbx+0x18],0x20
   14001f6c7:	or     eax,0xffffffff
   14001f6ca:	jmp    0x14001f6d1
   14001f6cc:	movzx  eax,BYTE PTR [rsp+0x30]
   14001f6d1:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f6d6:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f6db:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f6e0:	add    rsp,0x20
   14001f6e4:	pop    rdi
   14001f6e5:	ret    
   14001f6e6:	int3   
   14001f6e7:	int3   
   14001f6e8:	int3   
   14001f6e9:	int3   
   14001f6ea:	int3   
   14001f6eb:	int3   
   14001f6ec:	int3   
   14001f6ed:	int3   
   14001f6ee:	int3   
   14001f6ef:	int3   
   14001f6f0:	rex push rbx
   14001f6f2:	push   rsi
   14001f6f3:	push   rdi
   14001f6f4:	push   r13
   14001f6f6:	push   r14
   14001f6f8:	sub    rsp,0x4f0
   14001f6ff:	mov    rax,QWORD PTR [rip+0x208ca]        # 0x14003ffd0
   14001f706:	xor    rax,rsp
   14001f709:	mov    QWORD PTR [rsp+0x4c0],rax
   14001f711:	xor    ebx,ebx
   14001f713:	test   r8,r8
   14001f716:	mov    rdi,r9
   14001f719:	mov    QWORD PTR [rsp+0x58],r9
   14001f71e:	mov    rsi,rdx
   14001f721:	mov    r13,rcx
   14001f724:	mov    DWORD PTR [rsp+0x74],ebx
   14001f728:	mov    r14d,ebx
   14001f72b:	mov    DWORD PTR [rsp+0x40],ebx
   14001f72f:	mov    r11d,ebx
   14001f732:	mov    DWORD PTR [rsp+0x50],ebx
   14001f736:	mov    r9d,ebx
   14001f739:	mov    DWORD PTR [rsp+0x48],ebx
   14001f73d:	mov    r10d,ebx
   14001f740:	mov    DWORD PTR [rsp+0x4c],ebx
   14001f744:	mov    DWORD PTR [rsp+0x70],ebx
   14001f748:	mov    DWORD PTR [rsp+0x60],ebx
   14001f74c:	mov    BYTE PTR [rsp+0x90],bl
   14001f753:	jne    0x14001f817
   14001f759:	call   0x14001d930
   14001f75e:	mov    QWORD PTR [rsp+0x88],rax
   14001f766:	mov    rdx,rax
   14001f769:	mov    rcx,QWORD PTR [rax+0xc0]
   14001f770:	cmp    rcx,QWORD PTR [rip+0x21319]        # 0x140040a90
   14001f777:	mov    QWORD PTR [rsp+0x78],rcx
   14001f77c:	mov    rax,QWORD PTR [rax+0xb8]
   14001f783:	mov    QWORD PTR [rsp+0x80],rax
   14001f78b:	je     0x14001f7b5
   14001f78d:	mov    ecx,DWORD PTR [rdx+0xc8]
   14001f793:	test   DWORD PTR [rip+0x2117f],ecx        # 0x140040918
   14001f799:	jne    0x14001f7b5
   14001f79b:	call   0x14001ed60
   14001f7a0:	mov    rdx,QWORD PTR [rsp+0x88]
   14001f7a8:	mov    QWORD PTR [rsp+0x78],rax
   14001f7ad:	mov    rax,QWORD PTR [rsp+0x80]
   14001f7b5:	cmp    rax,QWORD PTR [rip+0x21054]        # 0x140040810
   14001f7bc:	je     0x14001f7e1
   14001f7be:	mov    eax,DWORD PTR [rdx+0xc8]
   14001f7c4:	test   DWORD PTR [rip+0x2114e],eax        # 0x140040918
   14001f7ca:	jne    0x14001f7e1
   14001f7cc:	call   0x14001e210
   14001f7d1:	mov    rdx,QWORD PTR [rsp+0x88]
   14001f7d9:	mov    QWORD PTR [rsp+0x80],rax
   14001f7e1:	test   BYTE PTR [rdx+0xc8],0x2
   14001f7e8:	jne    0x14001f80c
   14001f7ea:	or     DWORD PTR [rdx+0xc8],0x2
   14001f7f1:	mov    rdx,QWORD PTR [rsp+0x88]
   14001f7f9:	mov    r9d,ebx
   14001f7fc:	mov    BYTE PTR [rsp+0x90],0x1
   14001f804:	mov    r10d,ebx
   14001f807:	mov    r11d,ebx
   14001f80a:	jmp    0x14001f832
   14001f80c:	mov    r9d,ebx
   14001f80f:	mov    r10d,ebx
   14001f812:	mov    r11d,ebx
   14001f815:	jmp    0x14001f832
   14001f817:	mov    rax,QWORD PTR [r8]
   14001f81a:	lea    rcx,[rsp+0x78]
   14001f81f:	mov    QWORD PTR [rcx],rax
   14001f822:	mov    rax,QWORD PTR [r8+0x8]
   14001f826:	mov    QWORD PTR [rcx+0x8],rax
   14001f82a:	mov    rdx,QWORD PTR [rsp+0x88]
   14001f832:	test   r13,r13
   14001f835:	jne    0x14001f876
   14001f837:	call   0x14001b280
   14001f83c:	xor    r9d,r9d
   14001f83f:	xor    r8d,r8d
   14001f842:	xor    edx,edx
   14001f844:	xor    ecx,ecx
   14001f846:	mov    QWORD PTR [rsp+0x20],rbx
   14001f84b:	mov    DWORD PTR [rax],0x16
   14001f851:	call   0x14001de30
   14001f856:	cmp    BYTE PTR [rsp+0x90],bl
   14001f85d:	je     0x14001f86e
   14001f85f:	mov    rax,QWORD PTR [rsp+0x88]
   14001f867:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f86e:	or     eax,0xffffffff
   14001f871:	jmp    0x140020576
   14001f876:	test   rsi,rsi
   14001f879:	je     0x14001f837
   14001f87b:	mov    QWORD PTR [rsp+0x4e8],rbp
   14001f883:	mov    QWORD PTR [rsp+0x4e0],r12
   14001f88b:	movzx  r12d,WORD PTR [rsi]
   14001f88f:	test   r12w,r12w
   14001f893:	mov    QWORD PTR [rsp+0x4d8],r15
   14001f89b:	mov    ebp,ebx
   14001f89d:	mov    DWORD PTR [rsp+0x44],ebx
   14001f8a1:	mov    r8d,ebx
   14001f8a4:	mov    QWORD PTR [rsp+0xa0],rbx
   14001f8ac:	mov    r15d,ebx
   14001f8af:	je     0x14002054b
   14001f8b5:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001f8bd:	lea    rdx,[rip+0xfffffffffffe073c]        # 0x140000000
   14001f8c4:	data16 data16 xchg ax,ax
   14001f8c8:	data16 data16 xchg ax,ax
   14001f8cc:	data16 data16 xchg ax,ax
   14001f8d0:	add    rsi,0x2
   14001f8d4:	test   ebp,ebp
   14001f8d6:	mov    QWORD PTR [rsp+0xa8],rsi
   14001f8de:	js     0x140020543
   14001f8e4:	lea    eax,[r12-0x20]
   14001f8e9:	cmp    ax,0x58
   14001f8ed:	ja     0x14001f8ff
   14001f8ef:	movzx  eax,r12w
   14001f8f3:	mov    cl,BYTE PTR [rax+rdx*1+0x36550]
   14001f8fa:	and    ecx,0xf
   14001f8fd:	jmp    0x14001f903
   14001f8ff:	xor    eax,eax
   14001f901:	mov    ecx,eax
   14001f903:	movsxd rax,r8d
   14001f906:	movsxd rcx,ecx
   14001f909:	lea    rdx,[rax+rcx*8]
   14001f90d:	lea    rax,[rip+0xfffffffffffe06ec]        # 0x140000000
   14001f914:	movsx  eax,BYTE PTR [rdx+rax*1+0x36570]
   14001f91c:	sar    eax,0x4
   14001f91f:	cmp    eax,0x7
   14001f922:	mov    DWORD PTR [rsp+0x98],eax
   14001f929:	ja     0x1400204e6
   14001f92f:	lea    rdx,[rip+0xfffffffffffe06ca]        # 0x140000000
   14001f936:	cdqe   
   14001f938:	mov    ecx,DWORD PTR [rdx+rax*4+0x20598]
   14001f93f:	add    rcx,rdx
   14001f942:	jmp    rcx
   14001f944:	xor    eax,eax
   14001f946:	or     r9d,0xffffffff
   14001f94a:	mov    DWORD PTR [rsp+0x48],r9d
   14001f94f:	mov    DWORD PTR [rsp+0x9c],eax
   14001f956:	mov    DWORD PTR [rsp+0x70],eax
   14001f95a:	mov    r11d,eax
   14001f95d:	mov    DWORD PTR [rsp+0x50],eax
   14001f961:	mov    r10d,eax
   14001f964:	mov    DWORD PTR [rsp+0x4c],eax
   14001f968:	mov    r14d,eax
   14001f96b:	mov    DWORD PTR [rsp+0x40],eax
   14001f96f:	mov    DWORD PTR [rsp+0x60],eax
   14001f973:	jmp    0x1400204ed
   14001f978:	movzx  eax,r12w
   14001f97c:	cmp    eax,0x20
   14001f97f:	je     0x14001f9d2
   14001f981:	cmp    eax,0x23
   14001f984:	je     0x14001f9c3
   14001f986:	cmp    eax,0x2b
   14001f989:	je     0x14001f9b5
   14001f98b:	cmp    eax,0x2d
   14001f98e:	je     0x14001f9a7
   14001f990:	cmp    eax,0x30
   14001f993:	jne    0x1400204ed
   14001f999:	or     r14d,0x8
   14001f99d:	mov    DWORD PTR [rsp+0x40],r14d
   14001f9a2:	jmp    0x1400204ed
   14001f9a7:	or     r14d,0x4
   14001f9ab:	mov    DWORD PTR [rsp+0x40],r14d
   14001f9b0:	jmp    0x1400204ed
   14001f9b5:	or     r14d,0x1
   14001f9b9:	mov    DWORD PTR [rsp+0x40],r14d
   14001f9be:	jmp    0x1400204ed
   14001f9c3:	bts    r14d,0x7
   14001f9c8:	mov    DWORD PTR [rsp+0x40],r14d
   14001f9cd:	jmp    0x1400204ed
   14001f9d2:	or     r14d,0x2
   14001f9d6:	mov    DWORD PTR [rsp+0x40],r14d
   14001f9db:	jmp    0x1400204ed
   14001f9e0:	cmp    r12w,0x2a
   14001f9e5:	jne    0x14001fa17
   14001f9e7:	mov    r11d,DWORD PTR [rdi]
   14001f9ea:	add    rdi,0x8
   14001f9ee:	test   r11d,r11d
   14001f9f1:	mov    QWORD PTR [rsp+0x58],rdi
   14001f9f6:	mov    DWORD PTR [rsp+0x50],r11d
   14001f9fb:	jns    0x1400204ed
   14001fa01:	or     r14d,0x4
   14001fa05:	neg    r11d
   14001fa08:	mov    DWORD PTR [rsp+0x50],r11d
   14001fa0d:	mov    DWORD PTR [rsp+0x40],r14d
   14001fa12:	jmp    0x1400204ed
   14001fa17:	lea    ecx,[r11+r11*4]
   14001fa1b:	movzx  eax,r12w
   14001fa1f:	lea    r11d,[rax+rcx*2-0x30]
   14001fa24:	mov    DWORD PTR [rsp+0x50],r11d
   14001fa29:	jmp    0x1400204ed
   14001fa2e:	xor    eax,eax
   14001fa30:	mov    r9d,eax
   14001fa33:	mov    DWORD PTR [rsp+0x48],eax
   14001fa37:	jmp    0x1400204ed
   14001fa3c:	cmp    r12w,0x2a
   14001fa41:	jne    0x14001fa6b
   14001fa43:	mov    r9d,DWORD PTR [rdi]
   14001fa46:	add    rdi,0x8
   14001fa4a:	test   r9d,r9d
   14001fa4d:	mov    QWORD PTR [rsp+0x58],rdi
   14001fa52:	mov    DWORD PTR [rsp+0x48],r9d
   14001fa57:	jns    0x1400204ed
   14001fa5d:	or     r9d,0xffffffff
   14001fa61:	mov    DWORD PTR [rsp+0x48],r9d
   14001fa66:	jmp    0x1400204ed
   14001fa6b:	lea    ecx,[r9+r9*4]
   14001fa6f:	movzx  eax,r12w
   14001fa73:	lea    r9d,[rax+rcx*2-0x30]
   14001fa78:	mov    DWORD PTR [rsp+0x48],r9d
   14001fa7d:	jmp    0x1400204ed
   14001fa82:	movzx  eax,r12w
   14001fa86:	cmp    eax,0x49
   14001fa89:	je     0x14001fae2
   14001fa8b:	cmp    eax,0x68
   14001fa8e:	je     0x14001fad4
   14001fa90:	cmp    eax,0x6c
   14001fa93:	je     0x14001faad
   14001fa95:	cmp    eax,0x77
   14001fa98:	jne    0x1400204ed
   14001fa9e:	bts    r14d,0xb
   14001faa3:	mov    DWORD PTR [rsp+0x40],r14d
   14001faa8:	jmp    0x1400204ed
   14001faad:	cmp    WORD PTR [rsi],0x6c
   14001fab1:	jne    0x14001fac6
   14001fab3:	add    rsi,0x2
   14001fab7:	bts    r14d,0xc
   14001fabc:	mov    DWORD PTR [rsp+0x40],r14d
   14001fac1:	jmp    0x1400204ed
   14001fac6:	or     r14d,0x10
   14001faca:	mov    DWORD PTR [rsp+0x40],r14d
   14001facf:	jmp    0x1400204ed
   14001fad4:	or     r14d,0x20
   14001fad8:	mov    DWORD PTR [rsp+0x40],r14d
   14001fadd:	jmp    0x1400204ed
   14001fae2:	movzx  eax,WORD PTR [rsi]
   14001fae5:	bts    r14d,0xf
   14001faea:	cmp    ax,0x36
   14001faee:	mov    DWORD PTR [rsp+0x40],r14d
   14001faf3:	jne    0x14001fb0f
   14001faf5:	cmp    WORD PTR [rsi+0x2],0x34
   14001fafa:	jne    0x14001fb0f
   14001fafc:	add    rsi,0x4
   14001fb00:	bts    r14d,0xf
   14001fb05:	mov    DWORD PTR [rsp+0x40],r14d
   14001fb0a:	jmp    0x1400204ed
   14001fb0f:	cmp    ax,0x33
   14001fb13:	jne    0x14001fb2f
   14001fb15:	cmp    WORD PTR [rsi+0x2],0x32
   14001fb1a:	jne    0x14001fb2f
   14001fb1c:	add    rsi,0x4
   14001fb20:	btr    r14d,0xf
   14001fb25:	mov    DWORD PTR [rsp+0x40],r14d
   14001fb2a:	jmp    0x1400204ed
   14001fb2f:	cmp    ax,0x64
   14001fb33:	je     0x1400204ed
   14001fb39:	cmp    ax,0x69
   14001fb3d:	je     0x1400204ed
   14001fb43:	cmp    ax,0x6f
   14001fb47:	je     0x1400204ed
   14001fb4d:	cmp    ax,0x75
   14001fb51:	je     0x1400204ed
   14001fb57:	cmp    ax,0x78
   14001fb5b:	je     0x1400204ed
   14001fb61:	cmp    ax,0x58
   14001fb65:	je     0x1400204ed
   14001fb6b:	xor    eax,eax
   14001fb6d:	mov    DWORD PTR [rsp+0x98],eax
   14001fb74:	test   BYTE PTR [r13+0x18],0x40
   14001fb79:	mov    DWORD PTR [rsp+0x60],0x1
   14001fb81:	je     0x14001fb96
   14001fb83:	cmp    QWORD PTR [r13+0x10],0x0
   14001fb88:	jne    0x14001fb96
   14001fb8a:	add    ebp,0x1
   14001fb8d:	mov    DWORD PTR [rsp+0x44],ebp
   14001fb91:	jmp    0x1400204ed
   14001fb96:	mov    rdx,r13
   14001fb99:	movzx  ecx,r12w
   14001fb9d:	call   0x140028ff0
   14001fba2:	cmp    ax,0xffff
   14001fba6:	jne    0x14001fbca
   14001fba8:	mov    r9d,DWORD PTR [rsp+0x48]
   14001fbad:	mov    r10d,DWORD PTR [rsp+0x4c]
   14001fbb2:	mov    r11d,DWORD PTR [rsp+0x50]
   14001fbb7:	or     ebp,0xffffffff
   14001fbba:	lea    rdx,[rip+0xfffffffffffe043f]        # 0x140000000
   14001fbc1:	mov    DWORD PTR [rsp+0x44],ebp
   14001fbc5:	jmp    0x1400204ed
   14001fbca:	mov    r9d,DWORD PTR [rsp+0x48]
   14001fbcf:	mov    r10d,DWORD PTR [rsp+0x4c]
   14001fbd4:	mov    r11d,DWORD PTR [rsp+0x50]
   14001fbd9:	add    ebp,0x1
   14001fbdc:	lea    rdx,[rip+0xfffffffffffe041d]        # 0x140000000
   14001fbe3:	mov    DWORD PTR [rsp+0x44],ebp
   14001fbe7:	jmp    0x1400204ed
   14001fbec:	movzx  eax,r12w
   14001fbf0:	add    eax,0xffffffbf
   14001fbf3:	cmp    eax,0x37
   14001fbf6:	ja     0x140020147
   14001fbfc:	cdqe   
   14001fbfe:	movzx  eax,BYTE PTR [rdx+rax*1+0x205f4]
   14001fc06:	mov    ecx,DWORD PTR [rdx+rax*4+0x205b8]
   14001fc0d:	add    rcx,rdx
   14001fc10:	jmp    rcx
   14001fc12:	test   r14d,0x830
   14001fc19:	jne    0x14001fc24
   14001fc1b:	or     r14d,0x20
   14001fc1f:	mov    DWORD PTR [rsp+0x40],r14d
   14001fc24:	movzx  eax,WORD PTR [rdi]
   14001fc27:	add    rdi,0x8
   14001fc2b:	test   r14b,0x20
   14001fc2f:	mov    WORD PTR [rsp+0x68],ax
   14001fc34:	mov    DWORD PTR [rsp+0x60],0x1
   14001fc3c:	mov    QWORD PTR [rsp+0x58],rdi
   14001fc41:	je     0x14001fc8e
   14001fc43:	mov    BYTE PTR [rsp+0x6c],al
   14001fc47:	mov    rax,QWORD PTR [rsp+0x78]
   14001fc4c:	mov    BYTE PTR [rsp+0x6d],0x0
   14001fc51:	movsxd r8,DWORD PTR [rax+0x10c]
   14001fc58:	lea    r9,[rsp+0x78]
   14001fc5d:	lea    rdx,[rsp+0x6c]
   14001fc62:	lea    rcx,[rsp+0xc0]
   14001fc6a:	call   0x140029290
   14001fc6f:	test   eax,eax
   14001fc71:	jns    0x14001fc96
   14001fc73:	mov    DWORD PTR [rsp+0x70],0x1
   14001fc7b:	lea    rbx,[rsp+0xc0]
   14001fc83:	mov    r15d,0x1
   14001fc89:	jmp    0x140020147
   14001fc8e:	mov    WORD PTR [rsp+0xc0],ax
   14001fc96:	lea    rbx,[rsp+0xc0]
   14001fc9e:	mov    r15d,0x1
   14001fca4:	jmp    0x140020147
   14001fca9:	mov    rax,QWORD PTR [rdi]
   14001fcac:	add    rdi,0x8
   14001fcb0:	test   rax,rax
   14001fcb3:	mov    QWORD PTR [rsp+0x58],rdi
   14001fcb8:	je     0x14001fcf1
   14001fcba:	mov    rbx,QWORD PTR [rax+0x8]
   14001fcbe:	test   rbx,rbx
   14001fcc1:	je     0x14001fcf1
   14001fcc3:	bt     r14d,0xb
   14001fcc8:	jae    0x14001fce2
   14001fcca:	movsx  eax,WORD PTR [rax]
   14001fccd:	mov    DWORD PTR [rsp+0x60],0x1
   14001fcd5:	cdq    
   14001fcd6:	sub    eax,edx
   14001fcd8:	sar    eax,1
   14001fcda:	mov    r15d,eax
   14001fcdd:	jmp    0x140020147
   14001fce2:	movsx  r15d,WORD PTR [rax]
   14001fce6:	xor    ecx,ecx
   14001fce8:	mov    DWORD PTR [rsp+0x60],ecx
   14001fcec:	jmp    0x140020147
   14001fcf1:	mov    rbx,QWORD PTR [rip+0x217b8]        # 0x1400414b0
   14001fcf8:	or     rcx,0xffffffffffffffff
   14001fcfc:	xor    eax,eax
   14001fcfe:	mov    rdi,rbx
   14001fd01:	repnz scas al,BYTE PTR es:[rdi]
   14001fd03:	not    rcx
   14001fd06:	sub    rcx,0x1
   14001fd0a:	mov    r15,rcx
   14001fd0d:	jmp    0x140020147
   14001fd12:	test   r14d,0x830
   14001fd19:	jne    0x14001fd24
   14001fd1b:	or     r14d,0x20
   14001fd1f:	mov    DWORD PTR [rsp+0x40],r14d
   14001fd24:	mov    rbx,QWORD PTR [rdi]
   14001fd27:	cmp    r9d,0xffffffff
   14001fd2b:	mov    esi,r9d
   14001fd2e:	mov    eax,0x7fffffff
   14001fd33:	cmove  esi,eax
   14001fd36:	add    rdi,0x8
   14001fd3a:	test   r14b,0x20
   14001fd3e:	mov    QWORD PTR [rsp+0x58],rdi
   14001fd43:	je     0x14001fd92
   14001fd45:	test   rbx,rbx
   14001fd48:	cmove  rbx,QWORD PTR [rip+0x21760]        # 0x1400414b0
   14001fd50:	xor    eax,eax
   14001fd52:	test   esi,esi
   14001fd54:	mov    rdi,rbx
   14001fd57:	mov    r15d,eax
   14001fd5a:	jle    0x140020147
   14001fd60:	movzx  eax,BYTE PTR [rdi]
   14001fd63:	test   al,al
   14001fd65:	je     0x140020147
   14001fd6b:	lea    rdx,[rsp+0x78]
   14001fd70:	movzx  ecx,al
   14001fd73:	call   0x140019e20
   14001fd78:	test   eax,eax
   14001fd7a:	je     0x14001fd80
   14001fd7c:	add    rdi,0x1
   14001fd80:	add    r15d,0x1
   14001fd84:	add    rdi,0x1
   14001fd88:	cmp    r15d,esi
   14001fd8b:	jl     0x14001fd60
   14001fd8d:	jmp    0x140020147
   14001fd92:	test   rbx,rbx
   14001fd95:	mov    DWORD PTR [rsp+0x60],0x1
   14001fd9d:	cmove  rbx,QWORD PTR [rip+0x21713]        # 0x1400414b8
   14001fda5:	test   esi,esi
   14001fda7:	mov    rax,rbx
   14001fdaa:	je     0x14001fdc1
   14001fdac:	data16 data16 xchg ax,ax
   14001fdb0:	sub    esi,0x1
   14001fdb3:	cmp    WORD PTR [rax],0x0
   14001fdb7:	je     0x14001fdc1
   14001fdb9:	add    rax,0x2
   14001fdbd:	test   esi,esi
   14001fdbf:	jne    0x14001fdb0
   14001fdc1:	sub    rax,rbx
   14001fdc4:	sar    rax,1
   14001fdc7:	mov    r15d,eax
   14001fdca:	jmp    0x140020147
   14001fdcf:	add    rdi,0x8
   14001fdd3:	mov    QWORD PTR [rsp+0x58],rdi
   14001fdd8:	mov    rdi,QWORD PTR [rdi-0x8]
   14001fddc:	call   0x140029270
   14001fde1:	test   eax,eax
   14001fde3:	je     0x140020504
   14001fde9:	test   r14b,0x20
   14001fded:	je     0x14001fdff
   14001fdef:	mov    WORD PTR [rdi],bp
   14001fdf2:	mov    DWORD PTR [rsp+0x70],0x1
   14001fdfa:	jmp    0x140020453
   14001fdff:	mov    DWORD PTR [rdi],ebp
   14001fe01:	mov    DWORD PTR [rsp+0x70],0x1
   14001fe09:	jmp    0x140020453
   14001fe0e:	mov    DWORD PTR [rsp+0x9c],0x1
   14001fe19:	add    r12w,0x20
   14001fe1e:	or     r14d,0x40
   14001fe22:	test   r9d,r9d
   14001fe25:	mov    eax,0x200
   14001fe2a:	mov    DWORD PTR [rsp+0x40],r14d
   14001fe2f:	mov    esi,eax
   14001fe31:	lea    rbx,[rsp+0xc0]
   14001fe39:	jns    0x14001fe48
   14001fe3b:	mov    r15d,0x6
   14001fe41:	mov    DWORD PTR [rsp+0x48],r15d
   14001fe46:	jmp    0x14001fec3
   14001fe48:	test   r9d,r9d
   14001fe4b:	jne    0x14001fe61
   14001fe4d:	cmp    r12w,0x67
   14001fe52:	jne    0x14001feb7
   14001fe54:	mov    r15d,0x1
   14001fe5a:	mov    DWORD PTR [rsp+0x48],r15d
   14001fe5f:	jmp    0x14001fec3
   14001fe61:	cmp    r9d,eax
   14001fe64:	jle    0x14001fe6f
   14001fe66:	mov    r9d,eax
   14001fe69:	mov    DWORD PTR [rsp+0x48],eax
   14001fe6d:	jmp    0x14001fe78
   14001fe6f:	cmp    r9d,0xa3
   14001fe76:	jle    0x14001febe
   14001fe78:	lea    edi,[r9+0x15d]
   14001fe7f:	movsxd rcx,edi
   14001fe82:	call   0x1400216b0
   14001fe87:	test   rax,rax
   14001fe8a:	mov    QWORD PTR [rsp+0xa0],rax
   14001fe92:	je     0x14001fea5
   14001fe94:	mov    r15d,DWORD PTR [rsp+0x48]
   14001fe99:	mov    esi,edi
   14001fe9b:	mov    rdi,QWORD PTR [rsp+0x58]
   14001fea0:	mov    rbx,rax
   14001fea3:	jmp    0x14001fec3
   14001fea5:	mov    rdi,QWORD PTR [rsp+0x58]
   14001feaa:	mov    r15d,0xa3
   14001feb0:	mov    DWORD PTR [rsp+0x48],r15d
   14001feb5:	jmp    0x14001fec3
   14001feb7:	mov    r15d,DWORD PTR [rsp+0x48]
   14001febc:	jmp    0x14001fec3
   14001febe:	mov    r15d,DWORD PTR [rsp+0x48]
   14001fec3:	mov    rax,QWORD PTR [rdi]
   14001fec6:	mov    rcx,QWORD PTR [rip+0x20e63]        # 0x140040d30
   14001fecd:	add    rdi,0x8
   14001fed1:	mov    QWORD PTR [rsp+0x58],rdi
   14001fed6:	movsxd rsi,esi
   14001fed9:	mov    QWORD PTR [rsp+0xb0],rax
   14001fee1:	movsx  edi,r12b
   14001fee5:	call   0x14001d640
   14001feea:	lea    rcx,[rsp+0x78]
   14001feef:	mov    QWORD PTR [rsp+0x30],rcx
   14001fef4:	mov    ecx,DWORD PTR [rsp+0x9c]
   14001fefb:	mov    r9d,edi
   14001fefe:	mov    DWORD PTR [rsp+0x28],ecx
   14001ff02:	lea    rcx,[rsp+0xb0]
   14001ff0a:	mov    r8,rsi
   14001ff0d:	mov    rdx,rbx
   14001ff10:	mov    DWORD PTR [rsp+0x20],r15d
   14001ff15:	call   rax
   14001ff17:	mov    edi,r14d
   14001ff1a:	and    edi,0x80
   14001ff20:	je     0x14001ff3d
   14001ff22:	test   r15d,r15d
   14001ff25:	jne    0x14001ff3d
   14001ff27:	mov    rcx,QWORD PTR [rip+0x20e1a]        # 0x140040d48
   14001ff2e:	call   0x14001d640
   14001ff33:	lea    rdx,[rsp+0x78]
   14001ff38:	mov    rcx,rbx
   14001ff3b:	call   rax
   14001ff3d:	cmp    r12w,0x67
   14001ff42:	jne    0x14001ff5e
   14001ff44:	test   edi,edi
   14001ff46:	jne    0x14001ff5e
   14001ff48:	mov    rcx,QWORD PTR [rip+0x20df1]        # 0x140040d40
   14001ff4f:	call   0x14001d640
   14001ff54:	lea    rdx,[rsp+0x78]
   14001ff59:	mov    rcx,rbx
   14001ff5c:	call   rax
   14001ff5e:	cmp    BYTE PTR [rbx],0x2d
   14001ff61:	jne    0x14001ff71
   14001ff63:	bts    r14d,0x8
   14001ff68:	add    rbx,0x1
   14001ff6c:	mov    DWORD PTR [rsp+0x40],r14d
   14001ff71:	or     rcx,0xffffffffffffffff
   14001ff75:	xor    eax,eax
   14001ff77:	mov    rdi,rbx
   14001ff7a:	repnz scas al,BYTE PTR es:[rdi]
   14001ff7c:	not    rcx
   14001ff7f:	sub    rcx,0x1
   14001ff83:	mov    r15d,ecx
   14001ff86:	jmp    0x140020147
   14001ff8b:	or     r14d,0x40
   14001ff8f:	mov    r8d,0xa
   14001ff95:	mov    DWORD PTR [rsp+0x40],r14d
   14001ff9a:	jmp    0x14001fffe
   14001ff9c:	mov    r8d,0xa
   14001ffa2:	jmp    0x14001fffe
   14001ffa4:	bts    r14d,0xf
   14001ffa9:	mov    r9d,0x10
   14001ffaf:	mov    DWORD PTR [rsp+0x40],r14d
   14001ffb4:	mov    eax,0x7
   14001ffb9:	mov    DWORD PTR [rsp+0x74],eax
   14001ffbd:	jmp    0x14001ffc8
   14001ffbf:	mov    eax,0x27
   14001ffc4:	mov    DWORD PTR [rsp+0x74],eax
   14001ffc8:	test   r14b,r14b
   14001ffcb:	mov    r8d,0x10
   14001ffd1:	jns    0x14001fffe
   14001ffd3:	add    ax,0x51
   14001ffd7:	mov    WORD PTR [rsp+0x64],0x30
   14001ffde:	lea    r10d,[r8-0xe]
   14001ffe2:	mov    WORD PTR [rsp+0x66],ax
   14001ffe7:	jmp    0x14001fffe
   14001ffe9:	test   r14b,r14b
   14001ffec:	mov    r8d,0x8
   14001fff2:	jns    0x14001fffe
   14001fff4:	bts    r14d,0x9
   14001fff9:	mov    DWORD PTR [rsp+0x40],r14d
   14001fffe:	bt     r14d,0xf
   140020003:	jae    0x140020014
   140020005:	add    rdi,0x8
   140020009:	mov    QWORD PTR [rsp+0x58],rdi
   14002000e:	mov    rdi,QWORD PTR [rdi-0x8]
   140020012:	jmp    0x140020076
   140020014:	bt     r14d,0xc
   140020019:	jae    0x14002002a
   14002001b:	add    rdi,0x8
   14002001f:	mov    QWORD PTR [rsp+0x58],rdi
   140020024:	mov    rdi,QWORD PTR [rdi-0x8]
   140020028:	jmp    0x140020076
   14002002a:	test   r14b,0x20
   14002002e:	je     0x140020055
   140020030:	test   r14b,0x40
   140020034:	je     0x140020046
   140020036:	add    rdi,0x8
   14002003a:	mov    QWORD PTR [rsp+0x58],rdi
   14002003f:	movsx  rdi,WORD PTR [rdi-0x8]
   140020044:	jmp    0x140020076
   140020046:	add    rdi,0x8
   14002004a:	mov    QWORD PTR [rsp+0x58],rdi
   14002004f:	movzx  edi,WORD PTR [rdi-0x8]
   140020053:	jmp    0x140020076
   140020055:	test   r14b,0x40
   140020059:	je     0x14002006a
   14002005b:	add    rdi,0x8
   14002005f:	mov    QWORD PTR [rsp+0x58],rdi
   140020064:	movsxd rdi,DWORD PTR [rdi-0x8]
   140020068:	jmp    0x140020076
   14002006a:	add    rdi,0x8
   14002006e:	mov    QWORD PTR [rsp+0x58],rdi
   140020073:	mov    edi,DWORD PTR [rdi-0x8]
   140020076:	test   r14b,0x40
   14002007a:	je     0x14002008e
   14002007c:	test   rdi,rdi
   14002007f:	jns    0x14002008e
   140020081:	neg    rdi
   140020084:	bts    r14d,0x8
   140020089:	mov    DWORD PTR [rsp+0x40],r14d
   14002008e:	bt     r14d,0xf
   140020093:	jb     0x14002009e
   140020095:	bt     r14d,0xc
   14002009a:	jb     0x14002009e
   14002009c:	mov    edi,edi
   14002009e:	test   r9d,r9d
   1400200a1:	jns    0x1400200ab
   1400200a3:	mov    r9d,0x1
   1400200a9:	jmp    0x1400200c0
   1400200ab:	mov    eax,0x200
   1400200b0:	and    r14d,0xfffffff7
   1400200b4:	cmp    r9d,eax
   1400200b7:	mov    DWORD PTR [rsp+0x40],r14d
   1400200bc:	cmovg  r9d,eax
   1400200c0:	mov    r14d,DWORD PTR [rsp+0x74]
   1400200c5:	test   rdi,rdi
   1400200c8:	mov    eax,0x0
   1400200cd:	cmove  r10d,eax
   1400200d1:	lea    rbx,[rsp+0x2bf]
   1400200d9:	mov    DWORD PTR [rsp+0x4c],r10d
   1400200de:	xchg   ax,ax
   1400200e0:	mov    ecx,r9d
   1400200e3:	sub    r9d,0x1
   1400200e7:	test   ecx,ecx
   1400200e9:	jg     0x1400200f0
   1400200eb:	test   rdi,rdi
   1400200ee:	je     0x140020111
   1400200f0:	xor    edx,edx
   1400200f2:	mov    rax,rdi
   1400200f5:	movsxd rcx,r8d
   1400200f8:	div    rcx
   1400200fb:	mov    rdi,rax
   1400200fe:	lea    eax,[rdx+0x30]
   140020101:	cmp    eax,0x39
   140020104:	jle    0x140020109
   140020106:	add    eax,r14d
   140020109:	mov    BYTE PTR [rbx],al
   14002010b:	sub    rbx,0x1
   14002010f:	jmp    0x1400200e0
   140020111:	mov    r14d,DWORD PTR [rsp+0x40]
   140020116:	lea    rax,[rsp+0x2bf]
   14002011e:	mov    DWORD PTR [rsp+0x48],r9d
   140020123:	sub    eax,ebx
   140020125:	add    rbx,0x1
   140020129:	bt     r14d,0x9
   14002012e:	mov    r15d,eax
   140020131:	jae    0x140020147
   140020133:	test   eax,eax
   140020135:	je     0x14002013c
   140020137:	cmp    BYTE PTR [rbx],0x30
   14002013a:	je     0x140020147
   14002013c:	sub    rbx,0x1
   140020140:	add    r15d,0x1
   140020144:	mov    BYTE PTR [rbx],0x30
   140020147:	cmp    DWORD PTR [rsp+0x70],0x0
   14002014c:	jne    0x140020453
   140020152:	test   r14b,0x40
   140020156:	je     0x1400201a1
   140020158:	bt     r14d,0x8
   14002015d:	jae    0x140020171
   14002015f:	mov    eax,0x1
   140020164:	mov    WORD PTR [rsp+0x64],0x2d
   14002016b:	mov    DWORD PTR [rsp+0x4c],eax
   14002016f:	jmp    0x1400201ab
   140020171:	test   r14b,0x1
   140020175:	je     0x140020189
   140020177:	mov    eax,0x1
   14002017c:	mov    WORD PTR [rsp+0x64],0x2b
   140020183:	mov    DWORD PTR [rsp+0x4c],eax
   140020187:	jmp    0x1400201ab
   140020189:	test   r14b,0x2
   14002018d:	je     0x1400201a7
   14002018f:	mov    eax,0x1
   140020194:	mov    WORD PTR [rsp+0x64],0x20
   14002019b:	mov    DWORD PTR [rsp+0x4c],eax
   14002019f:	jmp    0x1400201ab
   1400201a1:	mov    eax,DWORD PTR [rsp+0x4c]
   1400201a5:	jmp    0x1400201ab
   1400201a7:	mov    eax,DWORD PTR [rsp+0x4c]
   1400201ab:	mov    r14d,DWORD PTR [rsp+0x50]
   1400201b0:	mov    r12d,DWORD PTR [rsp+0x40]
   1400201b5:	sub    r14d,r15d
   1400201b8:	sub    r14d,eax
   1400201bb:	test   r12b,0xc
   1400201bf:	jne    0x14002021d
   1400201c1:	test   r14d,r14d
   1400201c4:	mov    edi,r14d
   1400201c7:	jle    0x14002021d
   1400201c9:	data16 xchg ax,ax
   1400201cc:	data16 data16 xchg ax,ax
   1400201d0:	sub    edi,0x1
   1400201d3:	test   BYTE PTR [r13+0x18],0x40
   1400201d8:	je     0x1400201ea
   1400201da:	cmp    QWORD PTR [r13+0x10],0x0
   1400201df:	jne    0x1400201ea
   1400201e1:	add    ebp,0x1
   1400201e4:	mov    DWORD PTR [rsp+0x44],ebp
   1400201e8:	jmp    0x140020203
   1400201ea:	mov    rdx,r13
   1400201ed:	mov    cx,0x20
   1400201f1:	call   0x140028ff0
   1400201f6:	cmp    ax,0xffff
   1400201fa:	je     0x140020212
   1400201fc:	add    ebp,0x1
   1400201ff:	mov    DWORD PTR [rsp+0x44],ebp
   140020203:	cmp    ebp,0xffffffff
   140020206:	je     0x14002020c
   140020208:	test   edi,edi
   14002020a:	jg     0x1400201d0
   14002020c:	mov    eax,DWORD PTR [rsp+0x4c]
   140020210:	jmp    0x14002021d
   140020212:	mov    eax,DWORD PTR [rsp+0x4c]
   140020216:	or     ebp,0xffffffff
   140020219:	mov    DWORD PTR [rsp+0x44],ebp
   14002021d:	test   BYTE PTR [r13+0x18],0x40
   140020222:	mov    esi,eax
   140020224:	lea    rdi,[rsp+0x64]
   140020229:	je     0x14002023d
   14002022b:	cmp    QWORD PTR [r13+0x10],0x0
   140020230:	jne    0x14002023d
   140020232:	add    ebp,eax
   140020234:	mov    DWORD PTR [rsp+0x44],ebp
   140020238:	jmp    0x1400202df
   14002023d:	test   eax,eax
   14002023f:	jle    0x1400202df
   140020245:	xor    r12d,r12d
   140020248:	data16 data16 xchg ax,ax
   14002024c:	data16 data16 xchg ax,ax
   140020250:	sub    esi,0x1
   140020253:	test   BYTE PTR [r13+0x18],0x40
   140020258:	je     0x140020269
   14002025a:	cmp    QWORD PTR [r13+0x10],r12
   14002025e:	jne    0x140020269
   140020260:	add    ebp,0x1
   140020263:	mov    DWORD PTR [rsp+0x44],ebp
   140020267:	jmp    0x14002028a
   140020269:	movzx  ecx,WORD PTR [rdi]
   14002026c:	mov    rdx,r13
   14002026f:	call   0x140028ff0
   140020274:	cmp    ax,0xffff
   140020278:	jne    0x140020283
   14002027a:	or     ebp,0xffffffff
   14002027d:	mov    DWORD PTR [rsp+0x44],ebp
   140020281:	jmp    0x14002028a
   140020283:	add    ebp,0x1
   140020286:	mov    DWORD PTR [rsp+0x44],ebp
   14002028a:	add    rdi,0x2
   14002028e:	cmp    ebp,0xffffffff
   140020291:	jne    0x1400202d2
   140020293:	call   0x14001b280
   140020298:	cmp    DWORD PTR [rax],0x2a
   14002029b:	jne    0x1400202da
   14002029d:	test   BYTE PTR [r13+0x18],0x40
   1400202a2:	je     0x1400202b4
   1400202a4:	cmp    QWORD PTR [r13+0x10],r12
   1400202a8:	jne    0x1400202b4
   1400202aa:	mov    ebp,r12d
   1400202ad:	mov    DWORD PTR [rsp+0x44],r12d
   1400202b2:	jmp    0x1400202d2
   1400202b4:	mov    rdx,r13
   1400202b7:	mov    cx,0x3f
   1400202bb:	call   0x140028ff0
   1400202c0:	mov    ebp,r12d
   1400202c3:	cmp    ax,0xffff
   1400202c7:	setne  bpl
   1400202cb:	sub    ebp,0x1
   1400202ce:	mov    DWORD PTR [rsp+0x44],ebp
   1400202d2:	test   esi,esi
   1400202d4:	jg     0x140020250
   1400202da:	mov    r12d,DWORD PTR [rsp+0x40]
   1400202df:	test   r12b,0x8
   1400202e3:	je     0x140020338
   1400202e5:	test   r12b,0x4
   1400202e9:	jne    0x140020338
   1400202eb:	test   r14d,r14d
   1400202ee:	mov    edi,r14d
   1400202f1:	jle    0x140020338
   1400202f3:	sub    edi,0x1
   1400202f6:	test   BYTE PTR [r13+0x18],0x40
   1400202fb:	je     0x14002030d
   1400202fd:	cmp    QWORD PTR [r13+0x10],0x0
   140020302:	jne    0x14002030d
   140020304:	add    ebp,0x1
   140020307:	mov    DWORD PTR [rsp+0x44],ebp
   14002030b:	jmp    0x140020326
   14002030d:	mov    rdx,r13
   140020310:	mov    cx,0x30
   140020314:	call   0x140028ff0
   140020319:	cmp    ax,0xffff
   14002031d:	je     0x140020331
   14002031f:	add    ebp,0x1
   140020322:	mov    DWORD PTR [rsp+0x44],ebp
   140020326:	cmp    ebp,0xffffffff
   140020329:	je     0x140020338
   14002032b:	test   edi,edi
   14002032d:	jg     0x1400202f3
   14002032f:	jmp    0x140020338
   140020331:	or     ebp,0xffffffff
   140020334:	mov    DWORD PTR [rsp+0x44],ebp
   140020338:	cmp    DWORD PTR [rsp+0x60],0x0
   14002033d:	jne    0x1400203de
   140020343:	test   r15d,r15d
   140020346:	jle    0x1400203de
   14002034c:	mov    rdi,rbx
   14002034f:	mov    esi,r15d
   140020352:	xchg   ax,ax
   140020354:	data16 data16 xchg ax,ax
   140020358:	data16 data16 xchg ax,ax
   14002035c:	data16 data16 xchg ax,ax
   140020360:	mov    rax,QWORD PTR [rsp+0x78]
   140020365:	lea    r9,[rsp+0x78]
   14002036a:	lea    rcx,[rsp+0x68]
   14002036f:	movsxd r8,DWORD PTR [rax+0x10c]
   140020376:	mov    rdx,rdi
   140020379:	sub    esi,0x1
   14002037c:	call   0x140029290
   140020381:	test   eax,eax
   140020383:	movsxd r12,eax
   140020386:	jle    0x1400203d0
   140020388:	test   BYTE PTR [r13+0x18],0x40
   14002038d:	je     0x14002039f
   14002038f:	cmp    QWORD PTR [r13+0x10],0x0
   140020394:	jne    0x14002039f
   140020396:	add    ebp,0x1
   140020399:	mov    DWORD PTR [rsp+0x44],ebp
   14002039d:	jmp    0x1400203c2
   14002039f:	movzx  ecx,WORD PTR [rsp+0x68]
   1400203a4:	mov    rdx,r13
   1400203a7:	call   0x140028ff0
   1400203ac:	cmp    ax,0xffff
   1400203b0:	jne    0x1400203bb
   1400203b2:	or     ebp,0xffffffff
   1400203b5:	mov    DWORD PTR [rsp+0x44],ebp
   1400203b9:	jmp    0x1400203c2
   1400203bb:	add    ebp,0x1
   1400203be:	mov    DWORD PTR [rsp+0x44],ebp
   1400203c2:	add    rdi,r12
   1400203c5:	test   esi,esi
   1400203c7:	jg     0x140020360
   1400203c9:	mov    r12d,DWORD PTR [rsp+0x40]
   1400203ce:	jmp    0x1400203f5
   1400203d0:	mov    r14d,DWORD PTR [rsp+0x40]
   1400203d5:	or     ebp,0xffffffff
   1400203d8:	mov    DWORD PTR [rsp+0x44],ebp
   1400203dc:	jmp    0x140020453
   1400203de:	lea    r9,[rsp+0x44]
   1400203e3:	mov    r8,r13
   1400203e6:	mov    edx,r15d
   1400203e9:	mov    rcx,rbx
   1400203ec:	call   0x140020630
   1400203f1:	mov    ebp,DWORD PTR [rsp+0x44]
   1400203f5:	test   ebp,ebp
   1400203f7:	js     0x1400204b3
   1400203fd:	test   r12b,0x4
   140020401:	je     0x1400204ba
   140020407:	test   r14d,r14d
   14002040a:	jle    0x1400204ac
   140020410:	sub    r14d,0x1
   140020414:	test   BYTE PTR [r13+0x18],0x40
   140020419:	je     0x14002042b
   14002041b:	cmp    QWORD PTR [r13+0x10],0x0
   140020420:	jne    0x14002042b
   140020422:	add    ebp,0x1
   140020425:	mov    DWORD PTR [rsp+0x44],ebp
   140020429:	jmp    0x140020444
   14002042b:	mov    rdx,r13
   14002042e:	mov    cx,0x20
   140020432:	call   0x140028ff0
   140020437:	cmp    ax,0xffff
   14002043b:	je     0x140020497
   14002043d:	add    ebp,0x1
   140020440:	mov    DWORD PTR [rsp+0x44],ebp
   140020444:	cmp    ebp,0xffffffff
   140020447:	je     0x1400204a5
   140020449:	test   r14d,r14d
   14002044c:	jg     0x140020410
   14002044e:	mov    r14d,DWORD PTR [rsp+0x40]
   140020453:	mov    rax,QWORD PTR [rsp+0xa0]
   14002045b:	test   rax,rax
   14002045e:	je     0x1400204c1
   140020460:	mov    rcx,rax
   140020463:	call   0x14001a540
   140020468:	mov    r9d,DWORD PTR [rsp+0x48]
   14002046d:	mov    rdi,QWORD PTR [rsp+0x58]
   140020472:	mov    rsi,QWORD PTR [rsp+0xa8]
   14002047a:	mov    r10d,DWORD PTR [rsp+0x4c]
   14002047f:	mov    r11d,DWORD PTR [rsp+0x50]
   140020484:	xor    ecx,ecx
   140020486:	lea    rdx,[rip+0xfffffffffffdfb73]        # 0x140000000
   14002048d:	mov    QWORD PTR [rsp+0xa0],rcx
   140020495:	jmp    0x1400204ed
   140020497:	mov    r14d,DWORD PTR [rsp+0x40]
   14002049c:	or     ebp,0xffffffff
   14002049f:	mov    DWORD PTR [rsp+0x44],ebp
   1400204a3:	jmp    0x140020453
   1400204a5:	mov    r14d,DWORD PTR [rsp+0x40]
   1400204aa:	jmp    0x140020453
   1400204ac:	mov    r14d,DWORD PTR [rsp+0x40]
   1400204b1:	jmp    0x140020453
   1400204b3:	mov    r14d,DWORD PTR [rsp+0x40]
   1400204b8:	jmp    0x140020453
   1400204ba:	mov    r14d,DWORD PTR [rsp+0x40]
   1400204bf:	jmp    0x140020453
   1400204c1:	mov    r9d,DWORD PTR [rsp+0x48]
   1400204c6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400204cb:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400204d3:	mov    r10d,DWORD PTR [rsp+0x4c]
   1400204d8:	mov    r11d,DWORD PTR [rsp+0x50]
   1400204dd:	lea    rdx,[rip+0xfffffffffffdfb1c]        # 0x140000000
   1400204e4:	jmp    0x1400204ed
   1400204e6:	lea    rdx,[rip+0xfffffffffffdfb13]        # 0x140000000
   1400204ed:	mov    r12w,WORD PTR [rsi]
   1400204f1:	test   r12w,r12w
   1400204f5:	je     0x140020543
   1400204f7:	mov    r8d,DWORD PTR [rsp+0x98]
   1400204ff:	jmp    0x14001f8d0
   140020504:	call   0x14001b280
   140020509:	xor    r9d,r9d
   14002050c:	xor    r8d,r8d
   14002050f:	mov    DWORD PTR [rax],0x16
   140020515:	xor    eax,eax
   140020517:	xor    edx,edx
   140020519:	xor    ecx,ecx
   14002051b:	mov    QWORD PTR [rsp+0x20],rax
   140020520:	call   0x14001de30
   140020525:	cmp    BYTE PTR [rsp+0x90],0x0
   14002052d:	je     0x14002053e
   14002052f:	mov    rax,QWORD PTR [rsp+0x88]
   140020537:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002053e:	or     eax,0xffffffff
   140020541:	jmp    0x14002055e
   140020543:	mov    rdx,QWORD PTR [rsp+0x88]
   14002054b:	cmp    BYTE PTR [rsp+0x90],0x0
   140020553:	je     0x14002055c
   140020555:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   14002055c:	mov    eax,ebp
   14002055e:	mov    r12,QWORD PTR [rsp+0x4e0]
   140020566:	mov    rbp,QWORD PTR [rsp+0x4e8]
   14002056e:	mov    r15,QWORD PTR [rsp+0x4d8]
   140020576:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14002057e:	xor    rcx,rsp
   140020581:	call   0x140019370
   140020586:	add    rsp,0x4f0
   14002058d:	pop    r14
   14002058f:	pop    r13
   140020591:	pop    rdi
   140020592:	pop    rsi
   140020593:	pop    rbx
   140020594:	ret    
   140020595:	data16 xchg ax,ax
   140020598:	je     0x140020595
   14002059a:	add    DWORD PTR [rax],eax
   14002059c:	rex.R stc 
   14002059e:	add    DWORD PTR [rax],eax
   1400205a0:	js     0x14002059b
   1400205a2:	add    DWORD PTR [rax],eax
   1400205a4:	loopne 0x14002059f
   1400205a6:	add    DWORD PTR [rax],eax
   1400205a8:	cs cli 
   1400205aa:	add    DWORD PTR [rax],eax
   1400205ac:	cmp    al,0xfa
   1400205ae:	add    DWORD PTR [rax],eax
   1400205b0:	(bad)  
   1400205b1:	cli    
   1400205b2:	add    DWORD PTR [rax],eax
   1400205b4:	in     al,dx
   1400205b5:	sti    
   1400205b6:	add    DWORD PTR [rax],eax
   1400205b8:	(bad)  
   1400205b9:	inc    BYTE PTR [rcx]
   1400205bb:	add    BYTE PTR [rdx],dl
   1400205bd:	cld    
   1400205be:	add    DWORD PTR [rax],eax
   1400205c0:	adc    bh,ch
   1400205c2:	add    DWORD PTR [rax],eax
   1400205c4:	mov    ah,0xff
   1400205c6:	add    DWORD PTR [rax],eax
   1400205c8:	test   eax,0x1e0001fc
   1400205cd:	inc    BYTE PTR [rcx]
   1400205cf:	add    BYTE PTR [rsp+rdi*8],ah
   1400205d2:	add    DWORD PTR [rax],eax
   1400205d4:	mov    edi,edi
   1400205d6:	add    DWORD PTR [rax],eax
   1400205d8:	iret   
   1400205d9:	std    
   1400205da:	add    DWORD PTR [rax],eax
   1400205dc:	jmp    0xe40207e0
   1400205e1:	inc    DWORD PTR [rcx]
   1400205e3:	add    BYTE PTR [rdi*8-0x63ffff],ah
   1400205ea:	add    DWORD PTR [rax],eax
   1400205ec:	mov    edi,0x470001ff
   1400205f1:	add    DWORD PTR [rdx],eax
   1400205f3:	add    BYTE PTR [rax],al
   1400205f5:	(bad)  
   1400205f6:	add    DWORD PTR [rsi],ecx
   1400205f8:	add    BYTE PTR [rsi],cl
   1400205fa:	add    BYTE PTR [rsi],cl
   1400205fc:	(bad)  
   1400205fd:	(bad)  
   1400205fe:	(bad)  
   1400205ff:	(bad)  
   140020600:	(bad)  
   140020601:	(bad)  
   140020602:	(bad)  
   140020603:	(bad)  
   140020604:	(bad)  
   140020605:	(bad)  
   140020606:	add    cl,BYTE PTR [rsi]
   140020608:	(bad)  
   140020609:	(bad)  
   14002060a:	(bad)  
   14002060b:	add    ecx,DWORD PTR [rsi]
   14002060d:	add    al,0xe
   14002060f:	(bad)  
   140020610:	(bad)  
   140020611:	(bad)  
   140020612:	(bad)  
   140020613:	(bad)  
   140020614:	add    eax,0x507060e
   140020619:	add    eax,0xe070e05
   14002061e:	(bad)  
   14002061f:	(bad)  
   140020620:	(bad)  
   140020621:	or     BYTE PTR [rcx],cl
   140020623:	or     cl,BYTE PTR [rsi]
   140020625:	(bad)  
   140020626:	or     ecx,DWORD PTR [rsi]
   140020628:	or     al,0xe
   14002062a:	(bad)  
   14002062b:	or     eax,0xcccccccc
   140020630:	mov    QWORD PTR [rsp+0x8],rbx
   140020635:	mov    QWORD PTR [rsp+0x10],rbp
   14002063a:	mov    QWORD PTR [rsp+0x18],rsi
   14002063f:	push   rdi
   140020640:	sub    rsp,0x20
   140020644:	test   BYTE PTR [r8+0x18],0x40
   140020649:	mov    rbx,r9
   14002064c:	mov    rdi,r8
   14002064f:	mov    esi,edx
   140020651:	mov    rbp,rcx
   140020654:	je     0x140020662
   140020656:	cmp    QWORD PTR [r8+0x10],0x0
   14002065b:	jne    0x140020662
   14002065d:	add    DWORD PTR [r9],edx
   140020660:	jmp    0x1400206d4
   140020662:	test   edx,edx
   140020664:	jle    0x1400206d4
   140020666:	sub    esi,0x1
   140020669:	test   BYTE PTR [rdi+0x18],0x40
   14002066d:	je     0x140020676
   14002066f:	cmp    QWORD PTR [rdi+0x10],0x0
   140020674:	je     0x140020690
   140020676:	movzx  ecx,WORD PTR [rbp+0x0]
   14002067a:	mov    rdx,rdi
   14002067d:	call   0x140028ff0
   140020682:	cmp    ax,0xffff
   140020686:	jne    0x140020690
   140020688:	mov    DWORD PTR [rbx],0xffffffff
   14002068e:	jmp    0x140020693
   140020690:	add    DWORD PTR [rbx],0x1
   140020693:	add    rbp,0x2
   140020697:	cmp    DWORD PTR [rbx],0xffffffff
   14002069a:	jne    0x1400206d0
   14002069c:	call   0x14001b280
   1400206a1:	cmp    DWORD PTR [rax],0x2a
   1400206a4:	jne    0x1400206d4
   1400206a6:	test   BYTE PTR [rdi+0x18],0x40
   1400206aa:	je     0x1400206b3
   1400206ac:	cmp    QWORD PTR [rdi+0x10],0x0
   1400206b1:	je     0x1400206cd
   1400206b3:	mov    rdx,rdi
   1400206b6:	mov    cx,0x3f
   1400206ba:	call   0x140028ff0
   1400206bf:	cmp    ax,0xffff
   1400206c3:	jne    0x1400206cd
   1400206c5:	mov    DWORD PTR [rbx],0xffffffff
   1400206cb:	jmp    0x1400206d0
   1400206cd:	add    DWORD PTR [rbx],0x1
   1400206d0:	test   esi,esi
   1400206d2:	jg     0x140020666
   1400206d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400206d9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400206de:	mov    rsi,QWORD PTR [rsp+0x40]
   1400206e3:	add    rsp,0x20
   1400206e7:	pop    rdi
   1400206e8:	ret    
   1400206e9:	int3   
   1400206ea:	int3   
   1400206eb:	int3   
   1400206ec:	int3   
   1400206ed:	int3   
   1400206ee:	int3   
   1400206ef:	int3   
   1400206f0:	rex push rbx
   1400206f2:	push   rsi
   1400206f3:	push   rdi
   1400206f4:	push   r13
   1400206f6:	push   r14
   1400206f8:	sub    rsp,0x4f0
   1400206ff:	mov    rax,QWORD PTR [rip+0x1f8ca]        # 0x14003ffd0
   140020706:	xor    rax,rsp
   140020709:	mov    QWORD PTR [rsp+0x4c0],rax
   140020711:	xor    ebx,ebx
   140020713:	test   r8,r8
   140020716:	mov    rdi,r9
   140020719:	mov    QWORD PTR [rsp+0x58],r9
   14002071e:	mov    rsi,rdx
   140020721:	mov    r13,rcx
   140020724:	mov    DWORD PTR [rsp+0x98],ebx
   14002072b:	mov    r14d,ebx
   14002072e:	mov    DWORD PTR [rsp+0x44],ebx
   140020732:	mov    r11d,ebx
   140020735:	mov    DWORD PTR [rsp+0x54],ebx
   140020739:	mov    r9d,ebx
   14002073c:	mov    DWORD PTR [rsp+0x4c],ebx
   140020740:	mov    r10d,ebx
   140020743:	mov    DWORD PTR [rsp+0x50],ebx
   140020747:	mov    DWORD PTR [rsp+0x70],ebx
   14002074b:	mov    DWORD PTR [rsp+0x60],ebx
   14002074f:	mov    BYTE PTR [rsp+0x90],bl
   140020756:	jne    0x14002081a
   14002075c:	call   0x14001d930
   140020761:	mov    QWORD PTR [rsp+0x88],rax
   140020769:	mov    rdx,rax
   14002076c:	mov    rcx,QWORD PTR [rax+0xc0]
   140020773:	cmp    rcx,QWORD PTR [rip+0x20316]        # 0x140040a90
   14002077a:	mov    QWORD PTR [rsp+0x78],rcx
   14002077f:	mov    rax,QWORD PTR [rax+0xb8]
   140020786:	mov    QWORD PTR [rsp+0x80],rax
   14002078e:	je     0x1400207b8
   140020790:	mov    ecx,DWORD PTR [rdx+0xc8]
   140020796:	test   DWORD PTR [rip+0x2017c],ecx        # 0x140040918
   14002079c:	jne    0x1400207b8
   14002079e:	call   0x14001ed60
   1400207a3:	mov    rdx,QWORD PTR [rsp+0x88]
   1400207ab:	mov    QWORD PTR [rsp+0x78],rax
   1400207b0:	mov    rax,QWORD PTR [rsp+0x80]
   1400207b8:	cmp    rax,QWORD PTR [rip+0x20051]        # 0x140040810
   1400207bf:	je     0x1400207e4
   1400207c1:	mov    eax,DWORD PTR [rdx+0xc8]
   1400207c7:	test   DWORD PTR [rip+0x2014b],eax        # 0x140040918
   1400207cd:	jne    0x1400207e4
   1400207cf:	call   0x14001e210
   1400207d4:	mov    rdx,QWORD PTR [rsp+0x88]
   1400207dc:	mov    QWORD PTR [rsp+0x80],rax
   1400207e4:	test   BYTE PTR [rdx+0xc8],0x2
   1400207eb:	jne    0x14002080f
   1400207ed:	or     DWORD PTR [rdx+0xc8],0x2
   1400207f4:	mov    rdx,QWORD PTR [rsp+0x88]
   1400207fc:	mov    r9d,ebx
   1400207ff:	mov    BYTE PTR [rsp+0x90],0x1
   140020807:	mov    r10d,ebx
   14002080a:	mov    r11d,ebx
   14002080d:	jmp    0x140020835
   14002080f:	mov    r9d,ebx
   140020812:	mov    r10d,ebx
   140020815:	mov    r11d,ebx
   140020818:	jmp    0x140020835
   14002081a:	mov    rax,QWORD PTR [r8]
   14002081d:	lea    rcx,[rsp+0x78]
   140020822:	mov    QWORD PTR [rcx],rax
   140020825:	mov    rax,QWORD PTR [r8+0x8]
   140020829:	mov    QWORD PTR [rcx+0x8],rax
   14002082d:	mov    rdx,QWORD PTR [rsp+0x88]
   140020835:	test   r13,r13
   140020838:	jne    0x140020879
   14002083a:	call   0x14001b280
   14002083f:	xor    r9d,r9d
   140020842:	xor    r8d,r8d
   140020845:	xor    edx,edx
   140020847:	xor    ecx,ecx
   140020849:	mov    QWORD PTR [rsp+0x20],rbx
   14002084e:	mov    DWORD PTR [rax],0x16
   140020854:	call   0x14001de30
   140020859:	cmp    BYTE PTR [rsp+0x90],bl
   140020860:	je     0x140020871
   140020862:	mov    rax,QWORD PTR [rsp+0x88]
   14002086a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140020871:	or     eax,0xffffffff
   140020874:	jmp    0x1400215f9
   140020879:	test   rsi,rsi
   14002087c:	je     0x14002083a
   14002087e:	xor    r8d,r8d
   140020881:	mov    QWORD PTR [rsp+0x4e8],rbp
   140020889:	mov    QWORD PTR [rsp+0x4e0],r12
   140020891:	movzx  r12d,WORD PTR [rsi]
   140020895:	mov    eax,r8d
   140020898:	mov    rcx,r8
   14002089b:	test   r12w,r12w
   14002089f:	mov    QWORD PTR [rsp+0x4d8],r15
   1400208a7:	mov    ebp,r8d
   1400208aa:	mov    DWORD PTR [rsp+0x48],r8d
   1400208af:	mov    DWORD PTR [rsp+0x40],eax
   1400208b3:	mov    QWORD PTR [rsp+0xa0],rcx
   1400208bb:	mov    r15d,r8d
   1400208be:	je     0x1400215ce
   1400208c4:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400208cc:	lea    rdx,[rip+0xfffffffffffdf72d]        # 0x140000000
   1400208d3:	nop
   1400208d4:	data16 data16 xchg ax,ax
   1400208d8:	data16 data16 xchg ax,ax
   1400208dc:	data16 data16 xchg ax,ax
   1400208e0:	add    rsi,0x2
   1400208e4:	test   ebp,ebp
   1400208e6:	mov    QWORD PTR [rsp+0xa8],rsi
   1400208ee:	js     0x14002157e
   1400208f4:	lea    eax,[r12-0x20]
   1400208f9:	cmp    ax,0x58
   1400208fd:	ja     0x14002090f
   1400208ff:	movzx  eax,r12w
   140020903:	mov    cl,BYTE PTR [rax+rdx*1+0x365b0]
   14002090a:	and    ecx,0xf
   14002090d:	jmp    0x140020912
   14002090f:	mov    ecx,r8d
   140020912:	movsxd rax,ecx
   140020915:	lea    rcx,[rax+rax*8]
   140020919:	movsxd rax,DWORD PTR [rsp+0x40]
   14002091e:	add    rcx,rax
   140020921:	movzx  eax,BYTE PTR [rcx+rdx*1+0x365d0]
   140020929:	shr    eax,0x4
   14002092c:	cmp    eax,0x8
   14002092f:	mov    DWORD PTR [rsp+0x40],eax
   140020933:	je     0x140021587
   140020939:	cmp    eax,0x7
   14002093c:	ja     0x140021570
   140020942:	mov    ecx,DWORD PTR [rdx+rax*4+0x21618]
   140020949:	add    rcx,rdx
   14002094c:	jmp    rcx
   14002094e:	or     r9d,0xffffffff
   140020952:	mov    DWORD PTR [rsp+0x9c],r8d
   14002095a:	mov    DWORD PTR [rsp+0x70],r8d
   14002095f:	mov    r11d,r8d
   140020962:	mov    DWORD PTR [rsp+0x54],r8d
   140020967:	mov    r10d,r8d
   14002096a:	mov    DWORD PTR [rsp+0x4c],r9d
   14002096f:	mov    DWORD PTR [rsp+0x50],r8d
   140020974:	mov    r14d,r8d
   140020977:	mov    DWORD PTR [rsp+0x44],r8d
   14002097c:	mov    DWORD PTR [rsp+0x60],r8d
   140020981:	jmp    0x140021570
   140020986:	movzx  eax,r12w
   14002098a:	cmp    eax,0x20
   14002098d:	je     0x1400209f0
   14002098f:	cmp    eax,0x23
   140020992:	je     0x1400209dd
   140020994:	cmp    eax,0x2b
   140020997:	je     0x1400209cb
   140020999:	cmp    eax,0x2d
   14002099c:	je     0x1400209b9
   14002099e:	cmp    eax,0x30
   1400209a1:	jne    0x14002156c
   1400209a7:	mov    eax,DWORD PTR [rsp+0x40]
   1400209ab:	or     r14d,0x8
   1400209af:	mov    DWORD PTR [rsp+0x44],r14d
   1400209b4:	jmp    0x140021570
   1400209b9:	mov    eax,DWORD PTR [rsp+0x40]
   1400209bd:	or     r14d,0x4
   1400209c1:	mov    DWORD PTR [rsp+0x44],r14d
   1400209c6:	jmp    0x140021570
   1400209cb:	mov    eax,DWORD PTR [rsp+0x40]
   1400209cf:	or     r14d,0x1
   1400209d3:	mov    DWORD PTR [rsp+0x44],r14d
   1400209d8:	jmp    0x140021570
   1400209dd:	mov    eax,DWORD PTR [rsp+0x40]
   1400209e1:	bts    r14d,0x7
   1400209e6:	mov    DWORD PTR [rsp+0x44],r14d
   1400209eb:	jmp    0x140021570
   1400209f0:	mov    eax,DWORD PTR [rsp+0x40]
   1400209f4:	or     r14d,0x2
   1400209f8:	mov    DWORD PTR [rsp+0x44],r14d
   1400209fd:	jmp    0x140021570
   140020a02:	cmp    r12w,0x2a
   140020a07:	jne    0x140020a39
   140020a09:	mov    r11d,DWORD PTR [rdi]
   140020a0c:	add    rdi,0x8
   140020a10:	test   r11d,r11d
   140020a13:	mov    QWORD PTR [rsp+0x58],rdi
   140020a18:	mov    DWORD PTR [rsp+0x54],r11d
   140020a1d:	jns    0x140021570
   140020a23:	or     r14d,0x4
   140020a27:	neg    r11d
   140020a2a:	mov    DWORD PTR [rsp+0x54],r11d
   140020a2f:	mov    DWORD PTR [rsp+0x44],r14d
   140020a34:	jmp    0x140021570
   140020a39:	movzx  eax,r12w
   140020a3d:	lea    ecx,[r11+r11*4]
   140020a41:	lea    r11d,[rax+rcx*2-0x30]
   140020a46:	mov    eax,DWORD PTR [rsp+0x40]
   140020a4a:	mov    DWORD PTR [rsp+0x54],r11d
   140020a4f:	jmp    0x140021570
   140020a54:	mov    r9d,r8d
   140020a57:	mov    DWORD PTR [rsp+0x4c],r8d
   140020a5c:	jmp    0x140021570
   140020a61:	cmp    r12w,0x2a
   140020a66:	jne    0x140020a90
   140020a68:	mov    r9d,DWORD PTR [rdi]
   140020a6b:	add    rdi,0x8
   140020a6f:	test   r9d,r9d
   140020a72:	mov    QWORD PTR [rsp+0x58],rdi
   140020a77:	mov    DWORD PTR [rsp+0x4c],r9d
   140020a7c:	jns    0x140021570
   140020a82:	or     r9d,0xffffffff
   140020a86:	mov    DWORD PTR [rsp+0x4c],r9d
   140020a8b:	jmp    0x140021570
   140020a90:	movzx  eax,r12w
   140020a94:	lea    ecx,[r9+r9*4]
   140020a98:	lea    r9d,[rax+rcx*2-0x30]
   140020a9d:	mov    eax,DWORD PTR [rsp+0x40]
   140020aa1:	mov    DWORD PTR [rsp+0x4c],r9d
   140020aa6:	jmp    0x140021570
   140020aab:	movzx  eax,r12w
   140020aaf:	cmp    eax,0x49
   140020ab2:	je     0x140020b1b
   140020ab4:	cmp    eax,0x68
   140020ab7:	je     0x140020b09
   140020ab9:	cmp    eax,0x6c
   140020abc:	je     0x140020ada
   140020abe:	cmp    eax,0x77
   140020ac1:	jne    0x140021542
   140020ac7:	mov    eax,DWORD PTR [rsp+0x40]
   140020acb:	bts    r14d,0xb
   140020ad0:	mov    DWORD PTR [rsp+0x44],r14d
   140020ad5:	jmp    0x140021570
   140020ada:	cmp    WORD PTR [rsi],0x6c
   140020ade:	jne    0x140020af7
   140020ae0:	mov    eax,DWORD PTR [rsp+0x40]
   140020ae4:	add    rsi,0x2
   140020ae8:	bts    r14d,0xc
   140020aed:	mov    DWORD PTR [rsp+0x44],r14d
   140020af2:	jmp    0x140021570
   140020af7:	mov    eax,DWORD PTR [rsp+0x40]
   140020afb:	or     r14d,0x10
   140020aff:	mov    DWORD PTR [rsp+0x44],r14d
   140020b04:	jmp    0x140021570
   140020b09:	mov    eax,DWORD PTR [rsp+0x40]
   140020b0d:	or     r14d,0x20
   140020b11:	mov    DWORD PTR [rsp+0x44],r14d
   140020b16:	jmp    0x140021570
   140020b1b:	movzx  eax,WORD PTR [rsi]
   140020b1e:	bts    r14d,0xf
   140020b23:	cmp    ax,0x36
   140020b27:	mov    DWORD PTR [rsp+0x44],r14d
   140020b2c:	jne    0x140020b4c
   140020b2e:	cmp    WORD PTR [rsi+0x2],0x34
   140020b33:	jne    0x140020b4c
   140020b35:	mov    eax,DWORD PTR [rsp+0x40]
   140020b39:	add    rsi,0x4
   140020b3d:	bts    r14d,0xf
   140020b42:	mov    DWORD PTR [rsp+0x44],r14d
   140020b47:	jmp    0x140021570
   140020b4c:	cmp    ax,0x33
   140020b50:	jne    0x140020b70
   140020b52:	cmp    WORD PTR [rsi+0x2],0x32
   140020b57:	jne    0x140020b70
   140020b59:	mov    eax,DWORD PTR [rsp+0x40]
   140020b5d:	add    rsi,0x4
   140020b61:	btr    r14d,0xf
   140020b66:	mov    DWORD PTR [rsp+0x44],r14d
   140020b6b:	jmp    0x140021570
   140020b70:	cmp    ax,0x64
   140020b74:	je     0x140021566
   140020b7a:	cmp    ax,0x69
   140020b7e:	je     0x140021560
   140020b84:	cmp    ax,0x6f
   140020b88:	je     0x14002155a
   140020b8e:	cmp    ax,0x75
   140020b92:	je     0x140021554
   140020b98:	cmp    ax,0x78
   140020b9c:	je     0x14002154e
   140020ba2:	cmp    ax,0x58
   140020ba6:	je     0x140021548
   140020bac:	mov    eax,r8d
   140020baf:	mov    DWORD PTR [rsp+0x40],eax
   140020bb3:	test   BYTE PTR [r13+0x18],0x40
   140020bb8:	mov    DWORD PTR [rsp+0x60],0x1
   140020bc0:	je     0x140020bd5
   140020bc2:	cmp    QWORD PTR [r13+0x10],0x0
   140020bc7:	jne    0x140020bd5
   140020bc9:	add    ebp,0x1
   140020bcc:	mov    DWORD PTR [rsp+0x48],ebp
   140020bd0:	jmp    0x140021570
   140020bd5:	mov    rdx,r13
   140020bd8:	movzx  ecx,r12w
   140020bdc:	call   0x140028ff0
   140020be1:	cmp    ax,0xffff
   140020be5:	jne    0x140020c10
   140020be7:	mov    r9d,DWORD PTR [rsp+0x4c]
   140020bec:	mov    eax,DWORD PTR [rsp+0x40]
   140020bf0:	mov    r10d,DWORD PTR [rsp+0x50]
   140020bf5:	mov    r11d,DWORD PTR [rsp+0x54]
   140020bfa:	or     ebp,0xffffffff
   140020bfd:	lea    rdx,[rip+0xfffffffffffdf3fc]        # 0x140000000
   140020c04:	mov    DWORD PTR [rsp+0x48],ebp
   140020c08:	xor    r8d,r8d
   140020c0b:	jmp    0x140021570
   140020c10:	mov    r9d,DWORD PTR [rsp+0x4c]
   140020c15:	mov    eax,DWORD PTR [rsp+0x40]
   140020c19:	mov    r10d,DWORD PTR [rsp+0x50]
   140020c1e:	mov    r11d,DWORD PTR [rsp+0x54]
   140020c23:	add    ebp,0x1
   140020c26:	lea    rdx,[rip+0xfffffffffffdf3d3]        # 0x140000000
   140020c2d:	mov    DWORD PTR [rsp+0x48],ebp
   140020c31:	xor    r8d,r8d
   140020c34:	jmp    0x140021570
   140020c39:	movzx  eax,r12w
   140020c3d:	add    eax,0xffffffbf
   140020c40:	cmp    eax,0x37
   140020c43:	ja     0x14002119b
   140020c49:	cdqe   
   140020c4b:	movzx  eax,BYTE PTR [rdx+rax*1+0x21674]
   140020c53:	mov    ecx,DWORD PTR [rdx+rax*4+0x21638]
   140020c5a:	add    rcx,rdx
   140020c5d:	jmp    rcx
   140020c5f:	test   r14d,0x830
   140020c66:	jne    0x140020c71
   140020c68:	or     r14d,0x20
   140020c6c:	mov    DWORD PTR [rsp+0x44],r14d
   140020c71:	movzx  eax,WORD PTR [rdi]
   140020c74:	add    rdi,0x8
   140020c78:	test   r14b,0x20
   140020c7c:	mov    WORD PTR [rsp+0x68],ax
   140020c81:	mov    DWORD PTR [rsp+0x60],0x1
   140020c89:	mov    QWORD PTR [rsp+0x58],rdi
   140020c8e:	je     0x140020cdb
   140020c90:	mov    BYTE PTR [rsp+0x6c],al
   140020c94:	mov    rax,QWORD PTR [rsp+0x78]
   140020c99:	mov    BYTE PTR [rsp+0x6d],0x0
   140020c9e:	movsxd r8,DWORD PTR [rax+0x10c]
   140020ca5:	lea    r9,[rsp+0x78]
   140020caa:	lea    rdx,[rsp+0x6c]
   140020caf:	lea    rcx,[rsp+0xc0]
   140020cb7:	call   0x140029290
   140020cbc:	test   eax,eax
   140020cbe:	jns    0x140020ce3
   140020cc0:	mov    DWORD PTR [rsp+0x70],0x1
   140020cc8:	lea    rbx,[rsp+0xc0]
   140020cd0:	mov    r15d,0x1
   140020cd6:	jmp    0x14002119b
   140020cdb:	mov    WORD PTR [rsp+0xc0],ax
   140020ce3:	lea    rbx,[rsp+0xc0]
   140020ceb:	mov    r15d,0x1
   140020cf1:	jmp    0x14002119b
   140020cf6:	mov    rax,QWORD PTR [rdi]
   140020cf9:	add    rdi,0x8
   140020cfd:	test   rax,rax
   140020d00:	mov    QWORD PTR [rsp+0x58],rdi
   140020d05:	je     0x140020d3d
   140020d07:	mov    rbx,QWORD PTR [rax+0x8]
   140020d0b:	test   rbx,rbx
   140020d0e:	je     0x140020d3d
   140020d10:	bt     r14d,0xb
   140020d15:	jae    0x140020d2f
   140020d17:	movsx  eax,WORD PTR [rax]
   140020d1a:	mov    DWORD PTR [rsp+0x60],0x1
   140020d22:	cdq    
   140020d23:	sub    eax,edx
   140020d25:	sar    eax,1
   140020d27:	mov    r15d,eax
   140020d2a:	jmp    0x14002119b
   140020d2f:	movsx  r15d,WORD PTR [rax]
   140020d33:	mov    DWORD PTR [rsp+0x60],r8d
   140020d38:	jmp    0x14002119b
   140020d3d:	mov    rbx,QWORD PTR [rip+0x2076c]        # 0x1400414b0
   140020d44:	or     rcx,0xffffffffffffffff
   140020d48:	xor    eax,eax
   140020d4a:	mov    rdi,rbx
   140020d4d:	repnz scas al,BYTE PTR es:[rdi]
   140020d4f:	not    rcx
   140020d52:	lea    r15,[rcx-0x1]
   140020d56:	jmp    0x14002119b
   140020d5b:	test   r14d,0x830
   140020d62:	jne    0x140020d6d
   140020d64:	or     r14d,0x20
   140020d68:	mov    DWORD PTR [rsp+0x44],r14d
   140020d6d:	mov    rbx,QWORD PTR [rdi]
   140020d70:	cmp    r9d,0xffffffff
   140020d74:	mov    esi,r9d
   140020d77:	mov    eax,0x7fffffff
   140020d7c:	cmove  esi,eax
   140020d7f:	add    rdi,0x8
   140020d83:	test   r14b,0x20
   140020d87:	mov    QWORD PTR [rsp+0x58],rdi
   140020d8c:	je     0x140020de2
   140020d8e:	test   rbx,rbx
   140020d91:	mov    r15d,r8d
   140020d94:	cmove  rbx,QWORD PTR [rip+0x20714]        # 0x1400414b0
   140020d9c:	test   esi,esi
   140020d9e:	mov    rdi,rbx
   140020da1:	jle    0x14002119b
   140020da7:	data16 xchg ax,ax
   140020daa:	data16 xchg ax,ax
   140020dad:	data16 xchg ax,ax
   140020db0:	movzx  eax,BYTE PTR [rdi]
   140020db3:	test   al,al
   140020db5:	je     0x14002119b
   140020dbb:	lea    rdx,[rsp+0x78]
   140020dc0:	movzx  ecx,al
   140020dc3:	call   0x140019e20
   140020dc8:	test   eax,eax
   140020dca:	je     0x140020dd0
   140020dcc:	add    rdi,0x1
   140020dd0:	add    r15d,0x1
   140020dd4:	add    rdi,0x1
   140020dd8:	cmp    r15d,esi
   140020ddb:	jl     0x140020db0
   140020ddd:	jmp    0x14002119b
   140020de2:	test   rbx,rbx
   140020de5:	mov    DWORD PTR [rsp+0x60],0x1
   140020ded:	cmove  rbx,QWORD PTR [rip+0x206c3]        # 0x1400414b8
   140020df5:	test   esi,esi
   140020df7:	mov    rax,rbx
   140020dfa:	je     0x140020e11
   140020dfc:	data16 data16 xchg ax,ax
   140020e00:	sub    esi,0x1
   140020e03:	cmp    WORD PTR [rax],0x0
   140020e07:	je     0x140020e11
   140020e09:	add    rax,0x2
   140020e0d:	test   esi,esi
   140020e0f:	jne    0x140020e00
   140020e11:	sub    rax,rbx
   140020e14:	sar    rax,1
   140020e17:	mov    r15d,eax
   140020e1a:	jmp    0x14002119b
   140020e1f:	add    rdi,0x8
   140020e23:	mov    QWORD PTR [rsp+0x58],rdi
   140020e28:	mov    rdi,QWORD PTR [rdi-0x8]
   140020e2c:	call   0x140029270
   140020e31:	test   eax,eax
   140020e33:	je     0x140021587
   140020e39:	test   r14b,0x20
   140020e3d:	je     0x140020e4f
   140020e3f:	mov    WORD PTR [rdi],bp
   140020e42:	mov    DWORD PTR [rsp+0x70],0x1
   140020e4a:	jmp    0x1400214a3
   140020e4f:	mov    DWORD PTR [rdi],ebp
   140020e51:	mov    DWORD PTR [rsp+0x70],0x1
   140020e59:	jmp    0x1400214a3
   140020e5e:	mov    DWORD PTR [rsp+0x9c],0x1
   140020e69:	add    r12w,0x20
   140020e6e:	or     r14d,0x40
   140020e72:	test   r9d,r9d
   140020e75:	mov    eax,0x200
   140020e7a:	mov    DWORD PTR [rsp+0x44],r14d
   140020e7f:	mov    esi,eax
   140020e81:	lea    rbx,[rsp+0xc0]
   140020e89:	jns    0x140020e98
   140020e8b:	mov    r15d,0x6
   140020e91:	mov    DWORD PTR [rsp+0x4c],r15d
   140020e96:	jmp    0x140020f13
   140020e98:	test   r9d,r9d
   140020e9b:	jne    0x140020eb1
   140020e9d:	cmp    r12w,0x67
   140020ea2:	jne    0x140020f07
   140020ea4:	mov    r15d,0x1
   140020eaa:	mov    DWORD PTR [rsp+0x4c],r15d
   140020eaf:	jmp    0x140020f13
   140020eb1:	cmp    r9d,eax
   140020eb4:	jle    0x140020ebf
   140020eb6:	mov    r9d,eax
   140020eb9:	mov    DWORD PTR [rsp+0x4c],eax
   140020ebd:	jmp    0x140020ec8
   140020ebf:	cmp    r9d,0xa3
   140020ec6:	jle    0x140020f0e
   140020ec8:	lea    edi,[r9+0x15d]
   140020ecf:	movsxd rcx,edi
   140020ed2:	call   0x1400216b0
   140020ed7:	test   rax,rax
   140020eda:	mov    QWORD PTR [rsp+0xa0],rax
   140020ee2:	je     0x140020ef5
   140020ee4:	mov    r15d,DWORD PTR [rsp+0x4c]
   140020ee9:	mov    esi,edi
   140020eeb:	mov    rdi,QWORD PTR [rsp+0x58]
   140020ef0:	mov    rbx,rax
   140020ef3:	jmp    0x140020f13
   140020ef5:	mov    rdi,QWORD PTR [rsp+0x58]
   140020efa:	mov    r15d,0xa3
   140020f00:	mov    DWORD PTR [rsp+0x4c],r15d
   140020f05:	jmp    0x140020f13
   140020f07:	mov    r15d,DWORD PTR [rsp+0x4c]
   140020f0c:	jmp    0x140020f13
   140020f0e:	mov    r15d,DWORD PTR [rsp+0x4c]
   140020f13:	mov    rax,QWORD PTR [rdi]
   140020f16:	mov    rcx,QWORD PTR [rip+0x1fe13]        # 0x140040d30
   140020f1d:	add    rdi,0x8
   140020f21:	mov    QWORD PTR [rsp+0x58],rdi
   140020f26:	movsxd rsi,esi
   140020f29:	mov    QWORD PTR [rsp+0xb0],rax
   140020f31:	movsx  edi,r12b
   140020f35:	call   0x14001d640
   140020f3a:	lea    rcx,[rsp+0x78]
   140020f3f:	mov    QWORD PTR [rsp+0x30],rcx
   140020f44:	mov    ecx,DWORD PTR [rsp+0x9c]
   140020f4b:	mov    r9d,edi
   140020f4e:	mov    DWORD PTR [rsp+0x28],ecx
   140020f52:	lea    rcx,[rsp+0xb0]
   140020f5a:	mov    r8,rsi
   140020f5d:	mov    rdx,rbx
   140020f60:	mov    DWORD PTR [rsp+0x20],r15d
   140020f65:	call   rax
   140020f67:	mov    edi,r14d
   140020f6a:	and    edi,0x80
   140020f70:	je     0x140020f8d
   140020f72:	test   r15d,r15d
   140020f75:	jne    0x140020f8d
   140020f77:	mov    rcx,QWORD PTR [rip+0x1fdca]        # 0x140040d48
   140020f7e:	call   0x14001d640
   140020f83:	lea    rdx,[rsp+0x78]
   140020f88:	mov    rcx,rbx
   140020f8b:	call   rax
   140020f8d:	cmp    r12w,0x67
   140020f92:	jne    0x140020fae
   140020f94:	test   edi,edi
   140020f96:	jne    0x140020fae
   140020f98:	mov    rcx,QWORD PTR [rip+0x1fda1]        # 0x140040d40
   140020f9f:	call   0x14001d640
   140020fa4:	lea    rdx,[rsp+0x78]
   140020fa9:	mov    rcx,rbx
   140020fac:	call   rax
   140020fae:	cmp    BYTE PTR [rbx],0x2d
   140020fb1:	jne    0x140020fc1
   140020fb3:	bts    r14d,0x8
   140020fb8:	add    rbx,0x1
   140020fbc:	mov    DWORD PTR [rsp+0x44],r14d
   140020fc1:	or     rcx,0xffffffffffffffff
   140020fc5:	xor    eax,eax
   140020fc7:	mov    rdi,rbx
   140020fca:	repnz scas al,BYTE PTR es:[rdi]
   140020fcc:	not    rcx
   140020fcf:	lea    r15d,[rcx-0x1]
   140020fd3:	jmp    0x14002119b
   140020fd8:	or     r14d,0x40
   140020fdc:	mov    r8d,0xa
   140020fe2:	mov    DWORD PTR [rsp+0x44],r14d
   140020fe7:	jmp    0x140021051
   140020fe9:	mov    r8d,0xa
   140020fef:	jmp    0x140021051
   140020ff1:	bts    r14d,0xf
   140020ff6:	mov    r9d,0x10
   140020ffc:	mov    DWORD PTR [rsp+0x44],r14d
   140021001:	mov    eax,0x7
   140021006:	mov    DWORD PTR [rsp+0x98],eax
   14002100d:	jmp    0x14002101b
   14002100f:	mov    eax,0x27
   140021014:	mov    DWORD PTR [rsp+0x98],eax
   14002101b:	test   r14b,r14b
   14002101e:	mov    r8d,0x10
   140021024:	jns    0x140021051
   140021026:	add    ax,0x51
   14002102a:	mov    WORD PTR [rsp+0x64],0x30
   140021031:	lea    r10d,[r8-0xe]
   140021035:	mov    WORD PTR [rsp+0x66],ax
   14002103a:	jmp    0x140021051
   14002103c:	test   r14b,r14b
   14002103f:	mov    r8d,0x8
   140021045:	jns    0x140021051
   140021047:	bts    r14d,0x9
   14002104c:	mov    DWORD PTR [rsp+0x44],r14d
   140021051:	bt     r14d,0xf
   140021056:	jae    0x140021067
   140021058:	add    rdi,0x8
   14002105c:	mov    QWORD PTR [rsp+0x58],rdi
   140021061:	mov    rdi,QWORD PTR [rdi-0x8]
   140021065:	jmp    0x1400210c9
   140021067:	bt     r14d,0xc
   14002106c:	jae    0x14002107d
   14002106e:	add    rdi,0x8
   140021072:	mov    QWORD PTR [rsp+0x58],rdi
   140021077:	mov    rdi,QWORD PTR [rdi-0x8]
   14002107b:	jmp    0x1400210c9
   14002107d:	test   r14b,0x20
   140021081:	je     0x1400210a8
   140021083:	test   r14b,0x40
   140021087:	je     0x140021099
   140021089:	add    rdi,0x8
   14002108d:	mov    QWORD PTR [rsp+0x58],rdi
   140021092:	movsx  rdi,WORD PTR [rdi-0x8]
   140021097:	jmp    0x1400210c9
   140021099:	add    rdi,0x8
   14002109d:	mov    QWORD PTR [rsp+0x58],rdi
   1400210a2:	movzx  edi,WORD PTR [rdi-0x8]
   1400210a6:	jmp    0x1400210c9
   1400210a8:	test   r14b,0x40
   1400210ac:	je     0x1400210bd
   1400210ae:	add    rdi,0x8
   1400210b2:	mov    QWORD PTR [rsp+0x58],rdi
   1400210b7:	movsxd rdi,DWORD PTR [rdi-0x8]
   1400210bb:	jmp    0x1400210c9
   1400210bd:	add    rdi,0x8
   1400210c1:	mov    QWORD PTR [rsp+0x58],rdi
   1400210c6:	mov    edi,DWORD PTR [rdi-0x8]
   1400210c9:	test   r14b,0x40
   1400210cd:	je     0x1400210e1
   1400210cf:	test   rdi,rdi
   1400210d2:	jns    0x1400210e1
   1400210d4:	neg    rdi
   1400210d7:	bts    r14d,0x8
   1400210dc:	mov    DWORD PTR [rsp+0x44],r14d
   1400210e1:	bt     r14d,0xf
   1400210e6:	jb     0x1400210f1
   1400210e8:	bt     r14d,0xc
   1400210ed:	jb     0x1400210f1
   1400210ef:	mov    edi,edi
   1400210f1:	test   r9d,r9d
   1400210f4:	jns    0x1400210fe
   1400210f6:	mov    r9d,0x1
   1400210fc:	jmp    0x140021113
   1400210fe:	mov    eax,0x200
   140021103:	and    r14d,0xfffffff7
   140021107:	cmp    r9d,eax
   14002110a:	mov    DWORD PTR [rsp+0x44],r14d
   14002110f:	cmovg  r9d,eax
   140021113:	mov    r14d,DWORD PTR [rsp+0x98]
   14002111b:	test   rdi,rdi
   14002111e:	mov    eax,0x0
   140021123:	cmove  r10d,eax
   140021127:	lea    rbx,[rsp+0x2bf]
   14002112f:	mov    DWORD PTR [rsp+0x50],r10d
   140021134:	mov    ecx,r9d
   140021137:	sub    r9d,0x1
   14002113b:	test   ecx,ecx
   14002113d:	jg     0x140021144
   14002113f:	test   rdi,rdi
   140021142:	je     0x140021165
   140021144:	xor    edx,edx
   140021146:	mov    rax,rdi
   140021149:	movsxd rcx,r8d
   14002114c:	div    rcx
   14002114f:	mov    rdi,rax
   140021152:	lea    eax,[rdx+0x30]
   140021155:	cmp    eax,0x39
   140021158:	jle    0x14002115d
   14002115a:	add    eax,r14d
   14002115d:	mov    BYTE PTR [rbx],al
   14002115f:	sub    rbx,0x1
   140021163:	jmp    0x140021134
   140021165:	mov    r14d,DWORD PTR [rsp+0x44]
   14002116a:	lea    rax,[rsp+0x2bf]
   140021172:	mov    DWORD PTR [rsp+0x4c],r9d
   140021177:	sub    eax,ebx
   140021179:	add    rbx,0x1
   14002117d:	bt     r14d,0x9
   140021182:	mov    r15d,eax
   140021185:	jae    0x14002119b
   140021187:	test   eax,eax
   140021189:	je     0x140021190
   14002118b:	cmp    BYTE PTR [rbx],0x30
   14002118e:	je     0x14002119b
   140021190:	sub    rbx,0x1
   140021194:	add    r15d,0x1
   140021198:	mov    BYTE PTR [rbx],0x30
   14002119b:	cmp    DWORD PTR [rsp+0x70],0x0
   1400211a0:	jne    0x1400214a3
   1400211a6:	test   r14b,0x40
   1400211aa:	je     0x1400211f5
   1400211ac:	bt     r14d,0x8
   1400211b1:	jae    0x1400211c5
   1400211b3:	mov    eax,0x1
   1400211b8:	mov    WORD PTR [rsp+0x64],0x2d
   1400211bf:	mov    DWORD PTR [rsp+0x50],eax
   1400211c3:	jmp    0x1400211ff
   1400211c5:	test   r14b,0x1
   1400211c9:	je     0x1400211dd
   1400211cb:	mov    eax,0x1
   1400211d0:	mov    WORD PTR [rsp+0x64],0x2b
   1400211d7:	mov    DWORD PTR [rsp+0x50],eax
   1400211db:	jmp    0x1400211ff
   1400211dd:	test   r14b,0x2
   1400211e1:	je     0x1400211fb
   1400211e3:	mov    eax,0x1
   1400211e8:	mov    WORD PTR [rsp+0x64],0x20
   1400211ef:	mov    DWORD PTR [rsp+0x50],eax
   1400211f3:	jmp    0x1400211ff
   1400211f5:	mov    eax,DWORD PTR [rsp+0x50]
   1400211f9:	jmp    0x1400211ff
   1400211fb:	mov    eax,DWORD PTR [rsp+0x50]
   1400211ff:	mov    r14d,DWORD PTR [rsp+0x54]
   140021204:	mov    r12d,DWORD PTR [rsp+0x44]
   140021209:	sub    r14d,r15d
   14002120c:	sub    r14d,eax
   14002120f:	test   r12b,0xc
   140021213:	jne    0x14002126d
   140021215:	test   r14d,r14d
   140021218:	mov    edi,r14d
   14002121b:	jle    0x14002126d
   14002121d:	data16 xchg ax,ax
   140021220:	sub    edi,0x1
   140021223:	test   BYTE PTR [r13+0x18],0x40
   140021228:	je     0x14002123a
   14002122a:	cmp    QWORD PTR [r13+0x10],0x0
   14002122f:	jne    0x14002123a
   140021231:	add    ebp,0x1
   140021234:	mov    DWORD PTR [rsp+0x48],ebp
   140021238:	jmp    0x140021253
   14002123a:	mov    rdx,r13
   14002123d:	mov    cx,0x20
   140021241:	call   0x140028ff0
   140021246:	cmp    ax,0xffff
   14002124a:	je     0x140021262
   14002124c:	add    ebp,0x1
   14002124f:	mov    DWORD PTR [rsp+0x48],ebp
   140021253:	cmp    ebp,0xffffffff
   140021256:	je     0x14002125c
   140021258:	test   edi,edi
   14002125a:	jg     0x140021220
   14002125c:	mov    eax,DWORD PTR [rsp+0x50]
   140021260:	jmp    0x14002126d
   140021262:	mov    eax,DWORD PTR [rsp+0x50]
   140021266:	or     ebp,0xffffffff
   140021269:	mov    DWORD PTR [rsp+0x48],ebp
   14002126d:	test   BYTE PTR [r13+0x18],0x40
   140021272:	mov    esi,eax
   140021274:	lea    rdi,[rsp+0x64]
   140021279:	je     0x14002128d
   14002127b:	cmp    QWORD PTR [r13+0x10],0x0
   140021280:	jne    0x14002128d
   140021282:	add    ebp,eax
   140021284:	mov    DWORD PTR [rsp+0x48],ebp
   140021288:	jmp    0x14002132f
   14002128d:	test   eax,eax
   14002128f:	jle    0x14002132f
   140021295:	xor    r12d,r12d
   140021298:	data16 data16 xchg ax,ax
   14002129c:	data16 data16 xchg ax,ax
   1400212a0:	sub    esi,0x1
   1400212a3:	test   BYTE PTR [r13+0x18],0x40
   1400212a8:	je     0x1400212b9
   1400212aa:	cmp    QWORD PTR [r13+0x10],r12
   1400212ae:	jne    0x1400212b9
   1400212b0:	add    ebp,0x1
   1400212b3:	mov    DWORD PTR [rsp+0x48],ebp
   1400212b7:	jmp    0x1400212da
   1400212b9:	movzx  ecx,WORD PTR [rdi]
   1400212bc:	mov    rdx,r13
   1400212bf:	call   0x140028ff0
   1400212c4:	cmp    ax,0xffff
   1400212c8:	jne    0x1400212d3
   1400212ca:	or     ebp,0xffffffff
   1400212cd:	mov    DWORD PTR [rsp+0x48],ebp
   1400212d1:	jmp    0x1400212da
   1400212d3:	add    ebp,0x1
   1400212d6:	mov    DWORD PTR [rsp+0x48],ebp
   1400212da:	add    rdi,0x2
   1400212de:	cmp    ebp,0xffffffff
   1400212e1:	jne    0x140021322
   1400212e3:	call   0x14001b280
   1400212e8:	cmp    DWORD PTR [rax],0x2a
   1400212eb:	jne    0x14002132a
   1400212ed:	test   BYTE PTR [r13+0x18],0x40
   1400212f2:	je     0x140021304
   1400212f4:	cmp    QWORD PTR [r13+0x10],r12
   1400212f8:	jne    0x140021304
   1400212fa:	mov    ebp,r12d
   1400212fd:	mov    DWORD PTR [rsp+0x48],r12d
   140021302:	jmp    0x140021322
   140021304:	mov    rdx,r13
   140021307:	mov    cx,0x3f
   14002130b:	call   0x140028ff0
   140021310:	mov    ebp,r12d
   140021313:	cmp    ax,0xffff
   140021317:	setne  bpl
   14002131b:	sub    ebp,0x1
   14002131e:	mov    DWORD PTR [rsp+0x48],ebp
   140021322:	test   esi,esi
   140021324:	jg     0x1400212a0
   14002132a:	mov    r12d,DWORD PTR [rsp+0x44]
   14002132f:	test   r12b,0x8
   140021333:	je     0x140021388
   140021335:	test   r12b,0x4
   140021339:	jne    0x140021388
   14002133b:	test   r14d,r14d
   14002133e:	mov    edi,r14d
   140021341:	jle    0x140021388
   140021343:	sub    edi,0x1
   140021346:	test   BYTE PTR [r13+0x18],0x40
   14002134b:	je     0x14002135d
   14002134d:	cmp    QWORD PTR [r13+0x10],0x0
   140021352:	jne    0x14002135d
   140021354:	add    ebp,0x1
   140021357:	mov    DWORD PTR [rsp+0x48],ebp
   14002135b:	jmp    0x140021376
   14002135d:	mov    rdx,r13
   140021360:	mov    cx,0x30
   140021364:	call   0x140028ff0
   140021369:	cmp    ax,0xffff
   14002136d:	je     0x140021381
   14002136f:	add    ebp,0x1
   140021372:	mov    DWORD PTR [rsp+0x48],ebp
   140021376:	cmp    ebp,0xffffffff
   140021379:	je     0x140021388
   14002137b:	test   edi,edi
   14002137d:	jg     0x140021343
   14002137f:	jmp    0x140021388
   140021381:	or     ebp,0xffffffff
   140021384:	mov    DWORD PTR [rsp+0x48],ebp
   140021388:	cmp    DWORD PTR [rsp+0x60],0x0
   14002138d:	jne    0x14002142e
   140021393:	test   r15d,r15d
   140021396:	jle    0x14002142e
   14002139c:	mov    rdi,rbx
   14002139f:	mov    esi,r15d
   1400213a2:	xchg   ax,ax
   1400213a4:	data16 data16 xchg ax,ax
   1400213a8:	data16 data16 xchg ax,ax
   1400213ac:	data16 data16 xchg ax,ax
   1400213b0:	mov    rax,QWORD PTR [rsp+0x78]
   1400213b5:	lea    r9,[rsp+0x78]
   1400213ba:	lea    rcx,[rsp+0x68]
   1400213bf:	movsxd r8,DWORD PTR [rax+0x10c]
   1400213c6:	mov    rdx,rdi
   1400213c9:	sub    esi,0x1
   1400213cc:	call   0x140029290
   1400213d1:	test   eax,eax
   1400213d3:	movsxd r12,eax
   1400213d6:	jle    0x140021420
   1400213d8:	test   BYTE PTR [r13+0x18],0x40
   1400213dd:	je     0x1400213ef
   1400213df:	cmp    QWORD PTR [r13+0x10],0x0
   1400213e4:	jne    0x1400213ef
   1400213e6:	add    ebp,0x1
   1400213e9:	mov    DWORD PTR [rsp+0x48],ebp
   1400213ed:	jmp    0x140021412
   1400213ef:	movzx  ecx,WORD PTR [rsp+0x68]
   1400213f4:	mov    rdx,r13
   1400213f7:	call   0x140028ff0
   1400213fc:	cmp    ax,0xffff
   140021400:	jne    0x14002140b
   140021402:	or     ebp,0xffffffff
   140021405:	mov    DWORD PTR [rsp+0x48],ebp
   140021409:	jmp    0x140021412
   14002140b:	add    ebp,0x1
   14002140e:	mov    DWORD PTR [rsp+0x48],ebp
   140021412:	add    rdi,r12
   140021415:	test   esi,esi
   140021417:	jg     0x1400213b0
   140021419:	mov    r12d,DWORD PTR [rsp+0x44]
   14002141e:	jmp    0x140021445
   140021420:	mov    r14d,DWORD PTR [rsp+0x44]
   140021425:	or     ebp,0xffffffff
   140021428:	mov    DWORD PTR [rsp+0x48],ebp
   14002142c:	jmp    0x1400214a3
   14002142e:	lea    r9,[rsp+0x48]
   140021433:	mov    r8,r13
   140021436:	mov    edx,r15d
   140021439:	mov    rcx,rbx
   14002143c:	call   0x140020630
   140021441:	mov    ebp,DWORD PTR [rsp+0x48]
   140021445:	test   ebp,ebp
   140021447:	js     0x140021508
   14002144d:	test   r12b,0x4
   140021451:	je     0x14002150f
   140021457:	test   r14d,r14d
   14002145a:	jle    0x140021501
   140021460:	sub    r14d,0x1
   140021464:	test   BYTE PTR [r13+0x18],0x40
   140021469:	je     0x14002147b
   14002146b:	cmp    QWORD PTR [r13+0x10],0x0
   140021470:	jne    0x14002147b
   140021472:	add    ebp,0x1
   140021475:	mov    DWORD PTR [rsp+0x48],ebp
   140021479:	jmp    0x140021494
   14002147b:	mov    rdx,r13
   14002147e:	mov    cx,0x20
   140021482:	call   0x140028ff0
   140021487:	cmp    ax,0xffff
   14002148b:	je     0x1400214ec
   14002148d:	add    ebp,0x1
   140021490:	mov    DWORD PTR [rsp+0x48],ebp
   140021494:	cmp    ebp,0xffffffff
   140021497:	je     0x1400214fa
   140021499:	test   r14d,r14d
   14002149c:	jg     0x140021460
   14002149e:	mov    r14d,DWORD PTR [rsp+0x44]
   1400214a3:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400214ab:	test   rcx,rcx
   1400214ae:	je     0x140021516
   1400214b0:	call   0x14001a540
   1400214b5:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400214ba:	mov    rdi,QWORD PTR [rsp+0x58]
   1400214bf:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400214c7:	mov    eax,DWORD PTR [rsp+0x40]
   1400214cb:	mov    r10d,DWORD PTR [rsp+0x50]
   1400214d0:	mov    r11d,DWORD PTR [rsp+0x54]
   1400214d5:	xor    r8d,r8d
   1400214d8:	lea    rdx,[rip+0xfffffffffffdeb21]        # 0x140000000
   1400214df:	mov    QWORD PTR [rsp+0xa0],r8
   1400214e7:	jmp    0x140021570
   1400214ec:	mov    r14d,DWORD PTR [rsp+0x44]
   1400214f1:	or     ebp,0xffffffff
   1400214f4:	mov    DWORD PTR [rsp+0x48],ebp
   1400214f8:	jmp    0x1400214a3
   1400214fa:	mov    r14d,DWORD PTR [rsp+0x44]
   1400214ff:	jmp    0x1400214a3
   140021501:	mov    r14d,DWORD PTR [rsp+0x44]
   140021506:	jmp    0x1400214a3
   140021508:	mov    r14d,DWORD PTR [rsp+0x44]
   14002150d:	jmp    0x1400214a3
   14002150f:	mov    r14d,DWORD PTR [rsp+0x44]
   140021514:	jmp    0x1400214a3
   140021516:	mov    r9d,DWORD PTR [rsp+0x4c]
   14002151b:	mov    rdi,QWORD PTR [rsp+0x58]
   140021520:	mov    rsi,QWORD PTR [rsp+0xa8]
   140021528:	mov    eax,DWORD PTR [rsp+0x40]
   14002152c:	mov    r10d,DWORD PTR [rsp+0x50]
   140021531:	mov    r11d,DWORD PTR [rsp+0x54]
   140021536:	xor    r8d,r8d
   140021539:	lea    rdx,[rip+0xfffffffffffdeac0]        # 0x140000000
   140021540:	jmp    0x140021570
   140021542:	mov    eax,DWORD PTR [rsp+0x40]
   140021546:	jmp    0x140021570
   140021548:	mov    eax,DWORD PTR [rsp+0x40]
   14002154c:	jmp    0x140021570
   14002154e:	mov    eax,DWORD PTR [rsp+0x40]
   140021552:	jmp    0x140021570
   140021554:	mov    eax,DWORD PTR [rsp+0x40]
   140021558:	jmp    0x140021570
   14002155a:	mov    eax,DWORD PTR [rsp+0x40]
   14002155e:	jmp    0x140021570
   140021560:	mov    eax,DWORD PTR [rsp+0x40]
   140021564:	jmp    0x140021570
   140021566:	mov    eax,DWORD PTR [rsp+0x40]
   14002156a:	jmp    0x140021570
   14002156c:	mov    eax,DWORD PTR [rsp+0x40]
   140021570:	mov    r12w,WORD PTR [rsi]
   140021574:	test   r12w,r12w
   140021578:	jne    0x1400208e0
   14002157e:	test   eax,eax
   140021580:	je     0x1400215c6
   140021582:	cmp    eax,0x7
   140021585:	je     0x1400215c6
   140021587:	call   0x14001b280
   14002158c:	xor    r9d,r9d
   14002158f:	xor    r8d,r8d
   140021592:	mov    DWORD PTR [rax],0x16
   140021598:	xor    eax,eax
   14002159a:	xor    edx,edx
   14002159c:	xor    ecx,ecx
   14002159e:	mov    QWORD PTR [rsp+0x20],rax
   1400215a3:	call   0x14001de30
   1400215a8:	cmp    BYTE PTR [rsp+0x90],0x0
   1400215b0:	je     0x1400215c1
   1400215b2:	mov    rax,QWORD PTR [rsp+0x88]
   1400215ba:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400215c1:	or     eax,0xffffffff
   1400215c4:	jmp    0x1400215e1
   1400215c6:	mov    rdx,QWORD PTR [rsp+0x88]
   1400215ce:	cmp    BYTE PTR [rsp+0x90],0x0
   1400215d6:	je     0x1400215df
   1400215d8:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   1400215df:	mov    eax,ebp
   1400215e1:	mov    r12,QWORD PTR [rsp+0x4e0]
   1400215e9:	mov    rbp,QWORD PTR [rsp+0x4e8]
   1400215f1:	mov    r15,QWORD PTR [rsp+0x4d8]
   1400215f9:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140021601:	xor    rcx,rsp
   140021604:	call   0x140019370
   140021609:	add    rsp,0x4f0
   140021610:	pop    r14
   140021612:	pop    r13
   140021614:	pop    rdi
   140021615:	pop    rsi
   140021616:	pop    rbx
   140021617:	ret    
   140021618:	mov    bl,0xb
   14002161a:	add    al,BYTE PTR [rax]
   14002161c:	rex.WRX or QWORD PTR [rdx],r8
   14002161f:	add    BYTE PTR [rsi+0x2000209],al
   140021625:	or     al,BYTE PTR [rdx]
   140021627:	add    BYTE PTR [rdx+rcx*1+0x2],dl
   14002162b:	add    BYTE PTR [rcx+0xa],ah
   14002162e:	add    al,BYTE PTR [rax]
   140021630:	stos   DWORD PTR es:[rdi],eax
   140021631:	or     al,BYTE PTR [rdx]
   140021633:	add    BYTE PTR [rcx],bh
   140021635:	or     al,0x2
   140021637:	add    BYTE PTR [rsi+0xe],bl
   14002163a:	add    al,BYTE PTR [rax]
   14002163c:	pop    rdi
   14002163d:	or     al,0x2
   14002163f:	add    BYTE PTR [rbx+0xd],bl
   140021642:	add    al,BYTE PTR [rax]
   140021644:	add    DWORD PTR [rax],edx
   140021646:	add    al,BYTE PTR [rax]
   140021648:	test   BYTE PTR [rdx+rax*1],0x0
   14002164c:	outs   dx,BYTE PTR ds:[rsi]
   14002164d:	(bad)  
   14002164e:	add    al,BYTE PTR [rax]
   140021650:	jno    0x14002165e
   140021652:	add    al,BYTE PTR [rax]
   140021654:	fmul   DWORD PTR [rdi]
   140021656:	add    al,BYTE PTR [rax]
   140021658:	(bad)  
   140021659:	(bad)  
   14002165a:	add    al,BYTE PTR [rax]
   14002165c:	cmp    al,0x10
   14002165e:	add    al,BYTE PTR [rax]
   140021660:	icebp  
   140021661:	lar    eax,WORD PTR [rax]
   140021664:	ins    DWORD PTR es:[rdi],dx
   140021665:	or     eax,0xfe90002
   14002166a:	add    al,BYTE PTR [rax]
   14002166c:	movups xmm0,XMMWORD PTR [rdx]
   14002166f:	add    BYTE PTR [rbx+0x211],bl
   140021675:	(bad)  
   140021676:	add    DWORD PTR [rsi],ecx
   140021678:	add    BYTE PTR [rsi],cl
   14002167a:	add    BYTE PTR [rsi],cl
   14002167c:	(bad)  
   14002167d:	(bad)  
   14002167e:	(bad)  
   14002167f:	(bad)  
   140021680:	(bad)  
   140021681:	(bad)  
   140021682:	(bad)  
   140021683:	(bad)  
   140021684:	(bad)  
   140021685:	(bad)  
   140021686:	add    cl,BYTE PTR [rsi]
   140021688:	(bad)  
   140021689:	(bad)  
   14002168a:	(bad)  
   14002168b:	add    ecx,DWORD PTR [rsi]
   14002168d:	add    al,0xe
   14002168f:	(bad)  
   140021690:	(bad)  
   140021691:	(bad)  
   140021692:	(bad)  
   140021693:	(bad)  
   140021694:	add    eax,0x507060e
   140021699:	add    eax,0xe070e05
   14002169e:	(bad)  
   14002169f:	(bad)  
   1400216a0:	(bad)  
   1400216a1:	or     BYTE PTR [rcx],cl
   1400216a3:	or     cl,BYTE PTR [rsi]
   1400216a5:	(bad)  
   1400216a6:	or     ecx,DWORD PTR [rsi]
   1400216a8:	or     al,0xe
   1400216aa:	(bad)  
   1400216ab:	or     eax,0xcccccccc
   1400216b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400216b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400216ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400216bf:	push   rdi
   1400216c0:	sub    rsp,0x20
   1400216c4:	xor    edi,edi
   1400216c6:	mov    rsi,rcx
   1400216c9:	or     ebp,0xffffffff
   1400216cc:	data16 data16 xchg ax,ax
   1400216d0:	mov    rcx,rsi
   1400216d3:	call   0x14001a470
   1400216d8:	test   rax,rax
   1400216db:	mov    rbx,rax
   1400216de:	jne    0x14002170b
   1400216e0:	cmp    DWORD PTR [rip+0x2497a],eax        # 0x140046060
   1400216e6:	jbe    0x14002170b
   1400216e8:	mov    ecx,edi
   1400216ea:	call   QWORD PTR [rip+0xfb70]        # 0x140031260
   1400216f0:	lea    r11d,[rdi+0x3e8]
   1400216f7:	cmp    r11d,DWORD PTR [rip+0x24962]        # 0x140046060
   1400216fe:	mov    edi,r11d
   140021701:	cmova  edi,ebp
   140021704:	cmp    edi,ebp
   140021706:	jne    0x1400216d0
   140021708:	mov    rax,rbx
   14002170b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021710:	mov    rbp,QWORD PTR [rsp+0x38]
   140021715:	mov    rsi,QWORD PTR [rsp+0x40]
   14002171a:	add    rsp,0x20
   14002171e:	pop    rdi
   14002171f:	ret    
   140021720:	mov    QWORD PTR [rsp+0x8],rbx
   140021725:	mov    QWORD PTR [rsp+0x10],rbp
   14002172a:	mov    QWORD PTR [rsp+0x18],rsi
   14002172f:	mov    QWORD PTR [rsp+0x20],rdi
   140021734:	push   r12
   140021736:	sub    rsp,0x20
   14002173a:	xor    edi,edi
   14002173c:	mov    rsi,rdx
   14002173f:	mov    rbp,rcx
   140021742:	or     r12d,0xffffffff
   140021746:	data16 data16 xchg ax,ax
   14002174a:	data16 xchg ax,ax
   14002174d:	data16 xchg ax,ax
   140021750:	xor    r8d,r8d
   140021753:	mov    rdx,rsi
   140021756:	mov    rcx,rbp
   140021759:	call   0x14001c040
   14002175e:	test   rax,rax
   140021761:	mov    rbx,rax
   140021764:	jne    0x140021793
   140021766:	cmp    DWORD PTR [rip+0x248f4],eax        # 0x140046060
   14002176c:	jbe    0x140021793
   14002176e:	mov    ecx,edi
   140021770:	call   QWORD PTR [rip+0xfaea]        # 0x140031260
   140021776:	lea    r11d,[rdi+0x3e8]
   14002177d:	cmp    r11d,DWORD PTR [rip+0x248dc]        # 0x140046060
   140021784:	mov    edi,r11d
   140021787:	cmova  edi,r12d
   14002178b:	cmp    edi,r12d
   14002178e:	jne    0x140021750
   140021790:	mov    rax,rbx
   140021793:	mov    rbx,QWORD PTR [rsp+0x30]
   140021798:	mov    rbp,QWORD PTR [rsp+0x38]
   14002179d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400217a2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400217a7:	add    rsp,0x20
   1400217ab:	pop    r12
   1400217ad:	ret    
   1400217ae:	int3   
   1400217af:	int3   
   1400217b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400217b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400217ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400217bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400217c4:	push   r12
   1400217c6:	sub    rsp,0x20
   1400217ca:	xor    esi,esi
   1400217cc:	mov    rdi,rdx
   1400217cf:	mov    rbp,rcx
   1400217d2:	or     r12d,0xffffffff
   1400217d6:	data16 data16 xchg ax,ax
   1400217da:	data16 xchg ax,ax
   1400217dd:	data16 xchg ax,ax
   1400217e0:	mov    rdx,rdi
   1400217e3:	mov    rcx,rbp
   1400217e6:	call   0x14001b370
   1400217eb:	test   rax,rax
   1400217ee:	mov    rbx,rax
   1400217f1:	jne    0x140021825
   1400217f3:	test   rdi,rdi
   1400217f6:	je     0x140021825
   1400217f8:	cmp    DWORD PTR [rip+0x24862],eax        # 0x140046060
   1400217fe:	jbe    0x140021825
   140021800:	mov    ecx,esi
   140021802:	call   QWORD PTR [rip+0xfa58]        # 0x140031260
   140021808:	lea    r11d,[rsi+0x3e8]
   14002180f:	cmp    r11d,DWORD PTR [rip+0x2484a]        # 0x140046060
   140021816:	mov    esi,r11d
   140021819:	cmova  esi,r12d
   14002181d:	cmp    esi,r12d
   140021820:	jne    0x1400217e0
   140021822:	mov    rax,rbx
   140021825:	mov    rbx,QWORD PTR [rsp+0x30]
   14002182a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002182f:	mov    rsi,QWORD PTR [rsp+0x40]
   140021834:	mov    rdi,QWORD PTR [rsp+0x48]
   140021839:	add    rsp,0x20
   14002183d:	pop    r12
   14002183f:	ret    
   140021840:	mov    QWORD PTR [rsp+0x8],rbx
   140021845:	mov    QWORD PTR [rsp+0x10],rbp
   14002184a:	mov    QWORD PTR [rsp+0x18],rsi
   14002184f:	push   rdi
   140021850:	push   r12
   140021852:	push   r13
   140021854:	sub    rsp,0x20
   140021858:	xor    esi,esi
   14002185a:	mov    rdi,r8
   14002185d:	mov    rbp,rdx
   140021860:	or     r13d,0xffffffff
   140021864:	mov    r12,rcx
   140021867:	data16 xchg ax,ax
   14002186a:	data16 xchg ax,ax
   14002186d:	data16 xchg ax,ax
   140021870:	mov    r8,rdi
   140021873:	mov    rdx,rbp
   140021876:	mov    rcx,r12
   140021879:	call   0x14001b460
   14002187e:	test   rax,rax
   140021881:	mov    rbx,rax
   140021884:	jne    0x1400218b8
   140021886:	test   rdi,rdi
   140021889:	je     0x1400218b8
   14002188b:	cmp    DWORD PTR [rip+0x247cf],eax        # 0x140046060
   140021891:	jbe    0x1400218b8
   140021893:	mov    ecx,esi
   140021895:	call   QWORD PTR [rip+0xf9c5]        # 0x140031260
   14002189b:	lea    r11d,[rsi+0x3e8]
   1400218a2:	cmp    r11d,DWORD PTR [rip+0x247b7]        # 0x140046060
   1400218a9:	mov    esi,r11d
   1400218ac:	cmova  esi,r13d
   1400218b0:	cmp    esi,r13d
   1400218b3:	jne    0x140021870
   1400218b5:	mov    rax,rbx
   1400218b8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400218bd:	mov    rbp,QWORD PTR [rsp+0x48]
   1400218c2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400218c7:	add    rsp,0x20
   1400218cb:	pop    r13
   1400218cd:	pop    r12
   1400218cf:	pop    rdi
   1400218d0:	ret    
   1400218d1:	int3   
   1400218d2:	int3   
   1400218d3:	int3   
   1400218d4:	int3   
   1400218d5:	int3   
   1400218d6:	int3   
   1400218d7:	int3   
   1400218d8:	int3   
   1400218d9:	int3   
   1400218da:	int3   
   1400218db:	int3   
   1400218dc:	int3   
   1400218dd:	int3   
   1400218de:	int3   
   1400218df:	int3   
   1400218e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400218e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400218ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400218ef:	push   rdi
   1400218f0:	push   r12
   1400218f2:	push   r13
   1400218f4:	sub    rsp,0x20
   1400218f8:	lea    r12,[rip+0x1f1c1]        # 0x140040ac0
   1400218ff:	xor    esi,esi
   140021901:	lea    r13,[rip+0x24768]        # 0x140046070
   140021908:	xor    edi,edi
   14002190a:	lea    rbp,[rip+0x1f3ef]        # 0x140040d00
   140021911:	mov    rbx,r12
   140021914:	cmp    DWORD PTR [rbx+0x8],0x1
   140021918:	jne    0x14002193a
   14002191a:	movsxd rax,esi
   14002191d:	mov    edx,0xfa0
   140021922:	add    esi,0x1
   140021925:	lea    rcx,[rax+rax*4]
   140021929:	lea    rcx,[r13+rcx*8+0x0]
   14002192e:	mov    QWORD PTR [rbx],rcx
   140021931:	call   0x140022080
   140021936:	test   eax,eax
   140021938:	je     0x140021964
   14002193a:	add    rbx,0x10
   14002193e:	add    edi,0x1
   140021941:	cmp    rbx,rbp
   140021944:	jl     0x140021914
   140021946:	mov    eax,0x1
   14002194b:	mov    rbx,QWORD PTR [rsp+0x40]
   140021950:	mov    rbp,QWORD PTR [rsp+0x48]
   140021955:	mov    rsi,QWORD PTR [rsp+0x50]
   14002195a:	add    rsp,0x20
   14002195e:	pop    r13
   140021960:	pop    r12
   140021962:	pop    rdi
   140021963:	ret    
   140021964:	movsxd rax,edi
   140021967:	add    rax,rax
   14002196a:	mov    QWORD PTR [r12+rax*8],0x0
   140021972:	xor    eax,eax
   140021974:	jmp    0x14002194b
   140021976:	int3   
   140021977:	int3   
   140021978:	int3   
   140021979:	int3   
   14002197a:	int3   
   14002197b:	int3   
   14002197c:	int3   
   14002197d:	int3   
   14002197e:	int3   
   14002197f:	int3   
   140021980:	mov    QWORD PTR [rsp+0x8],rbx
   140021985:	mov    QWORD PTR [rsp+0x10],rbp
   14002198a:	mov    QWORD PTR [rsp+0x18],rsi
   14002198f:	mov    QWORD PTR [rsp+0x20],rdi
   140021994:	push   r12
   140021996:	sub    rsp,0x20
   14002199a:	lea    rbx,[rip+0x1f11f]        # 0x140040ac0
   1400219a1:	xor    r12d,r12d
   1400219a4:	lea    rbp,[rip+0x1f355]        # 0x140040d00
   1400219ab:	mov    rdi,rbx
   1400219ae:	xchg   ax,ax
   1400219b0:	mov    rsi,QWORD PTR [rdi]
   1400219b3:	test   rsi,rsi
   1400219b6:	je     0x1400219d2
   1400219b8:	cmp    DWORD PTR [rdi+0x8],0x1
   1400219bc:	je     0x1400219d2
   1400219be:	mov    rcx,rsi
   1400219c1:	call   QWORD PTR [rip+0xf951]        # 0x140031318
   1400219c7:	mov    rcx,rsi
   1400219ca:	call   0x14001a540
   1400219cf:	mov    QWORD PTR [rdi],r12
   1400219d2:	add    rdi,0x10
   1400219d6:	cmp    rdi,rbp
   1400219d9:	jl     0x1400219b0
   1400219db:	xchg   ax,ax
   1400219dd:	data16 xchg ax,ax
   1400219e0:	mov    rcx,QWORD PTR [rbx]
   1400219e3:	test   rcx,rcx
   1400219e6:	je     0x1400219f4
   1400219e8:	cmp    DWORD PTR [rbx+0x8],0x1
   1400219ec:	jne    0x1400219f4
   1400219ee:	call   QWORD PTR [rip+0xf924]        # 0x140031318
   1400219f4:	add    rbx,0x10
   1400219f8:	cmp    rbx,rbp
   1400219fb:	jl     0x1400219e0
   1400219fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a02:	mov    rbp,QWORD PTR [rsp+0x38]
   140021a07:	mov    rsi,QWORD PTR [rsp+0x40]
   140021a0c:	mov    rdi,QWORD PTR [rsp+0x48]
   140021a11:	add    rsp,0x20
   140021a15:	pop    r12
   140021a17:	ret    
   140021a18:	int3   
   140021a19:	int3   
   140021a1a:	int3   
   140021a1b:	int3   
   140021a1c:	int3   
   140021a1d:	int3   
   140021a1e:	int3   
   140021a1f:	int3   
   140021a20:	movsxd rcx,ecx
   140021a23:	lea    rax,[rip+0x1f096]        # 0x140040ac0
   140021a2a:	add    rcx,rcx
   140021a2d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140021a31:	rex.W jmp QWORD PTR [rip+0xf928]        # 0x140031360
   140021a38:	int3   
   140021a39:	int3   
   140021a3a:	int3   
   140021a3b:	int3   
   140021a3c:	int3   
   140021a3d:	int3   
   140021a3e:	int3   
   140021a3f:	int3   
   140021a40:	mov    QWORD PTR [rsp+0x8],rbx
   140021a45:	mov    QWORD PTR [rsp+0x10],rsi
   140021a4a:	mov    QWORD PTR [rsp+0x18],rdi
   140021a4f:	push   r12
   140021a51:	sub    rsp,0x20
   140021a55:	movsxd rbx,ecx
   140021a58:	mov    esi,0x1
   140021a5d:	cmp    QWORD PTR [rip+0x24013],0x0        # 0x140045a78
   140021a65:	jne    0x140021a7e
   140021a67:	call   0x14001c4b0
   140021a6c:	lea    ecx,[rsi+0x1d]
   140021a6f:	call   0x14001c270
   140021a74:	mov    ecx,0xff
   140021a79:	call   0x1400199b0
   140021a7e:	mov    rdi,rbx
   140021a81:	add    rdi,rdi
   140021a84:	lea    r12,[rip+0x1f035]        # 0x140040ac0
   140021a8b:	cmp    QWORD PTR [r12+rdi*8],0x0
   140021a90:	je     0x140021a96
   140021a92:	mov    eax,esi
   140021a94:	jmp    0x140021b0f
   140021a96:	mov    ecx,0x28
   140021a9b:	call   0x1400216b0
   140021aa0:	mov    rbx,rax
   140021aa3:	test   rax,rax
   140021aa6:	jne    0x140021ab7
   140021aa8:	call   0x14001b280
   140021aad:	mov    DWORD PTR [rax],0xc
   140021ab3:	xor    eax,eax
   140021ab5:	jmp    0x140021b0f
   140021ab7:	mov    ecx,0xa
   140021abc:	call   0x140021b50
   140021ac1:	nop
   140021ac2:	cmp    QWORD PTR [r12+rdi*8],0x0
   140021ac7:	jne    0x140021af7
   140021ac9:	mov    edx,0xfa0
   140021ace:	mov    rcx,rbx
   140021ad1:	call   0x140022080
   140021ad6:	test   eax,eax
   140021ad8:	jne    0x140021af1
   140021ada:	mov    rcx,rbx
   140021add:	call   0x14001a540
   140021ae2:	call   0x14001b280
   140021ae7:	mov    DWORD PTR [rax],0xc
   140021aed:	xor    esi,esi
   140021aef:	jmp    0x140021b00
   140021af1:	mov    QWORD PTR [r12+rdi*8],rbx
   140021af5:	jmp    0x140021b00
   140021af7:	mov    rcx,rbx
   140021afa:	call   0x14001a540
   140021aff:	nop
   140021b00:	mov    rcx,QWORD PTR [rip+0x1f059]        # 0x140040b60
   140021b07:	call   QWORD PTR [rip+0xf853]        # 0x140031360
   140021b0d:	mov    eax,esi
   140021b0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b14:	mov    rsi,QWORD PTR [rsp+0x38]
   140021b19:	mov    rdi,QWORD PTR [rsp+0x40]
   140021b1e:	add    rsp,0x20
   140021b22:	pop    r12
   140021b24:	ret    
   140021b25:	int3   
   140021b26:	int3   
   140021b27:	int3   
   140021b28:	int3   
   140021b29:	int3   
   140021b2a:	int3   
   140021b2b:	int3   
   140021b2c:	int3   
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	rex push rbp
   140021b32:	sub    rsp,0x20
   140021b36:	mov    rbp,rdx
   140021b39:	mov    rcx,QWORD PTR [rip+0x1f020]        # 0x140040b60
   140021b40:	call   QWORD PTR [rip+0xf81a]        # 0x140031360
   140021b46:	add    rsp,0x20
   140021b4a:	pop    rbp
   140021b4b:	ret    
   140021b4c:	int3   
   140021b4d:	int3   
   140021b4e:	int3   
   140021b4f:	int3   
   140021b50:	mov    QWORD PTR [rsp+0x8],rbx
   140021b55:	push   rdi
   140021b56:	sub    rsp,0x20
   140021b5a:	movsxd rbx,ecx
   140021b5d:	lea    rdi,[rip+0x1ef5c]        # 0x140040ac0
   140021b64:	add    rbx,rbx
   140021b67:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140021b6c:	jne    0x140021b7f
   140021b6e:	call   0x140021a40
   140021b73:	test   eax,eax
   140021b75:	jne    0x140021b7f
   140021b77:	lea    ecx,[rax+0x11]
   140021b7a:	call   0x140019980
   140021b7f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140021b83:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b88:	add    rsp,0x20
   140021b8c:	pop    rdi
   140021b8d:	rex.W jmp QWORD PTR [rip+0xf7bc]        # 0x140031350
   140021b94:	int3   
   140021b95:	int3   
   140021b96:	int3   
   140021b97:	int3   
   140021b98:	int3   
   140021b99:	int3   
   140021b9a:	int3   
   140021b9b:	int3   
   140021b9c:	int3   
   140021b9d:	int3   
   140021b9e:	int3   
   140021b9f:	int3   
   140021ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140021ba5:	push   rdi
   140021ba6:	sub    rsp,0x20
   140021baa:	lea    rbx,[rip+0x1f14f]        # 0x140040d00
   140021bb1:	mov    edi,0xa
   140021bb6:	mov    rcx,QWORD PTR [rbx]
   140021bb9:	call   0x14001d480
   140021bbe:	add    rbx,0x8
   140021bc2:	sub    rdi,0x1
   140021bc6:	mov    QWORD PTR [rbx-0x8],rax
   140021bca:	jne    0x140021bb6
   140021bcc:	mov    rbx,QWORD PTR [rsp+0x30]
   140021bd1:	add    rsp,0x20
   140021bd5:	pop    rdi
   140021bd6:	ret    
   140021bd7:	int3   
   140021bd8:	int3   
   140021bd9:	int3   
   140021bda:	int3   
   140021bdb:	int3   
   140021bdc:	int3   
   140021bdd:	int3   
   140021bde:	int3   
   140021bdf:	int3   
   140021be0:	xor    eax,eax
   140021be2:	cmp    WORD PTR [rcx],0x5a4d
   140021be7:	jne    0x140021c00
   140021be9:	movsxd rdx,DWORD PTR [rcx+0x3c]
   140021bed:	cmp    DWORD PTR [rdx+rcx*1],0x4550
   140021bf4:	jne    0x140021c00
   140021bf6:	cmp    WORD PTR [rdx+rcx*1+0x18],0x20b
   140021bfd:	sete   al
   140021c00:	ret    0x0
   140021c03:	int3   
   140021c04:	int3   
   140021c05:	int3   
   140021c06:	int3   
   140021c07:	int3   
   140021c08:	int3   
   140021c09:	int3   
   140021c0a:	int3   
   140021c0b:	int3   
   140021c0c:	int3   
   140021c0d:	int3   
   140021c0e:	int3   
   140021c0f:	int3   
   140021c10:	movsxd r8,DWORD PTR [rcx+0x3c]
   140021c14:	xor    r9d,r9d
   140021c17:	mov    r10,rdx
   140021c1a:	add    r8,rcx
   140021c1d:	movzx  eax,WORD PTR [r8+0x14]
   140021c22:	movzx  r11d,WORD PTR [r8+0x6]
   140021c27:	test   r11d,r11d
   140021c2a:	lea    rcx,[rax+r8*1+0x18]
   140021c2f:	je     0x140021c50
   140021c31:	mov    edx,DWORD PTR [rcx+0xc]
   140021c34:	cmp    r10,rdx
   140021c37:	jb     0x140021c43
   140021c39:	mov    eax,DWORD PTR [rcx+0x8]
   140021c3c:	add    eax,edx
   140021c3e:	cmp    r10,rax
   140021c41:	jb     0x140021c53
   140021c43:	add    r9d,0x1
   140021c47:	add    rcx,0x28
   140021c4b:	cmp    r9d,r11d
   140021c4e:	jb     0x140021c31
   140021c50:	xor    eax,eax
   140021c52:	ret    
   140021c53:	mov    rax,rcx
   140021c56:	ret    
   140021c57:	int3   
   140021c58:	int3   
   140021c59:	int3   
   140021c5a:	int3   
   140021c5b:	int3   
   140021c5c:	int3   
   140021c5d:	int3   
   140021c5e:	int3   
   140021c5f:	int3   
   140021c60:	sub    rsp,0x28
   140021c64:	mov    r8,rcx
   140021c67:	lea    rcx,[rip+0xfffffffffffde392]        # 0x140000000
   140021c6e:	call   0x140021be0
   140021c73:	test   eax,eax
   140021c75:	je     0x140021c96
   140021c77:	sub    r8,rcx
   140021c7a:	mov    rdx,r8
   140021c7d:	call   0x140021c10
   140021c82:	test   rax,rax
   140021c85:	je     0x140021c96
   140021c87:	mov    eax,DWORD PTR [rax+0x24]
   140021c8a:	shr    eax,0x1f
   140021c8d:	not    eax
   140021c8f:	and    eax,0x1
   140021c92:	jmp    0x140021c96
   140021c94:	xor    eax,eax
   140021c96:	add    rsp,0x28
   140021c9a:	ret    
   140021c9b:	int3   
   140021c9c:	int3   
   140021c9d:	int3   
   140021c9e:	int3   
   140021c9f:	int3   
   140021ca0:	rex push rbp
   140021ca2:	sub    rsp,0x20
   140021ca6:	mov    rbp,rdx
   140021ca9:	mov    rax,QWORD PTR [rcx]
   140021cac:	xor    ecx,ecx
   140021cae:	cmp    DWORD PTR [rax],0xc0000005
   140021cb4:	sete   cl
   140021cb7:	mov    eax,ecx
   140021cb9:	mov    eax,ecx
   140021cbb:	add    rsp,0x20
   140021cbf:	pop    rbp
   140021cc0:	ret    
   140021cc1:	int3   
   140021cc2:	int3   
   140021cc3:	int3   
   140021cc4:	int3   
   140021cc5:	int3   
   140021cc6:	int3   
   140021cc7:	int3   
   140021cc8:	int3   
   140021cc9:	int3   
   140021cca:	int3   
   140021ccb:	int3   
   140021ccc:	int3   
   140021ccd:	int3   
   140021cce:	int3   
   140021ccf:	int3   
   140021cd0:	sub    rsp,0x28
   140021cd4:	call   0x14001d930
   140021cd9:	mov    rcx,QWORD PTR [rax+0xd0]
   140021ce0:	test   rcx,rcx
   140021ce3:	je     0x140021ce9
   140021ce5:	call   rcx
   140021ce7:	jmp    0x140021ce9
   140021ce9:	call   0x1400257d0
   140021cee:	add    rsp,0x28
   140021cf2:	ret    
   140021cf3:	int3   
   140021cf4:	int3   
   140021cf5:	int3   
   140021cf6:	int3   
   140021cf7:	int3   
   140021cf8:	int3   
   140021cf9:	int3   
   140021cfa:	int3   
   140021cfb:	int3   
   140021cfc:	int3   
   140021cfd:	int3   
   140021cfe:	int3   
   140021cff:	int3   
   140021d00:	sub    rsp,0x28
   140021d04:	mov    rcx,QWORD PTR [rip+0x24595]        # 0x1400462a0
   140021d0b:	call   0x14001d640
   140021d10:	test   rax,rax
   140021d13:	je     0x140021d19
   140021d15:	call   rax
   140021d17:	jmp    0x140021d19
   140021d19:	call   0x140021cd0
   140021d1e:	int3   
   140021d1f:	add    rsp,0x28
   140021d23:	ret    
   140021d24:	int3   
   140021d25:	int3   
   140021d26:	int3   
   140021d27:	int3   
   140021d28:	int3   
   140021d29:	int3   
   140021d2a:	int3   
   140021d2b:	int3   
   140021d2c:	int3   
   140021d2d:	int3   
   140021d2e:	int3   
   140021d2f:	int3   
   140021d30:	sub    rsp,0x28
   140021d34:	lea    rcx,[rip+0xffffffffffffff95]        # 0x140021cd0
   140021d3b:	call   0x14001d480
   140021d40:	mov    QWORD PTR [rip+0x24559],rax        # 0x1400462a0
   140021d47:	add    rsp,0x28
   140021d4b:	ret    
   140021d4c:	int3   
   140021d4d:	int3   
   140021d4e:	int3   
   140021d4f:	int3   
   140021d50:	mov    QWORD PTR [rip+0x24551],rcx        # 0x1400462a8
   140021d57:	mov    QWORD PTR [rip+0x24552],rcx        # 0x1400462b0
   140021d5e:	mov    QWORD PTR [rip+0x24553],rcx        # 0x1400462b8
   140021d65:	mov    QWORD PTR [rip+0x24554],rcx        # 0x1400462c0
   140021d6c:	ret    
   140021d6d:	int3   
   140021d6e:	int3   
   140021d6f:	int3   
   140021d70:	mov    rcx,QWORD PTR [rip+0x24541]        # 0x1400462b8
   140021d77:	jmp    0x14001d640
   140021d7c:	int3   
   140021d7d:	int3   
   140021d7e:	int3   
   140021d7f:	int3   
   140021d80:	mov    QWORD PTR [rsp+0x10],rbx
   140021d85:	mov    QWORD PTR [rsp+0x18],rsi
   140021d8a:	push   rdi
   140021d8b:	push   r12
   140021d8d:	push   r13
   140021d8f:	push   r14
   140021d91:	push   r15
   140021d93:	sub    rsp,0x40
   140021d97:	mov    ebx,ecx
   140021d99:	xor    r14d,r14d
   140021d9c:	mov    edi,r14d
   140021d9f:	mov    DWORD PTR [rsp+0x70],r14d
   140021da4:	mov    rsi,r14
   140021da7:	lea    eax,[rcx-0x2]
   140021daa:	cmp    eax,0x14
   140021dad:	ja     0x140021f9e
   140021db3:	cdqe   
   140021db5:	lea    rcx,[rip+0xfffffffffffde244]        # 0x140000000
   140021dbc:	movzx  eax,BYTE PTR [rcx+rax*1+0x21ff4]
   140021dc4:	mov    edx,DWORD PTR [rcx+rax*4+0x21fdc]
   140021dcb:	add    rdx,rcx
   140021dce:	jmp    rdx
   140021dd0:	lea    r12,[rip+0x244d1]        # 0x1400462a8
   140021dd7:	mov    rcx,QWORD PTR [rip+0x244ca]        # 0x1400462a8
   140021dde:	mov    edi,0x1
   140021de3:	mov    DWORD PTR [rsp+0x70],edi
   140021de7:	jmp    0x140021e32
   140021de9:	lea    r12,[rip+0x244c0]        # 0x1400462b0
   140021df0:	mov    rcx,QWORD PTR [rip+0x244b9]        # 0x1400462b0
   140021df7:	mov    edi,0x1
   140021dfc:	mov    DWORD PTR [rsp+0x70],edi
   140021e00:	jmp    0x140021e32
   140021e02:	lea    r12,[rip+0x244af]        # 0x1400462b8
   140021e09:	mov    rcx,QWORD PTR [rip+0x244a8]        # 0x1400462b8
   140021e10:	mov    edi,0x1
   140021e15:	mov    DWORD PTR [rsp+0x70],edi
   140021e19:	jmp    0x140021e32
   140021e1b:	lea    r12,[rip+0x2449e]        # 0x1400462c0
   140021e22:	mov    rcx,QWORD PTR [rip+0x24497]        # 0x1400462c0
   140021e29:	mov    edi,0x1
   140021e2e:	mov    DWORD PTR [rsp+0x70],edi
   140021e32:	call   0x14001d640
   140021e37:	mov    r13,rax
   140021e3a:	jmp    0x140021e99
   140021e3c:	call   0x14001d8a0
   140021e41:	mov    rsi,rax
   140021e44:	test   rax,rax
   140021e47:	jne    0x140021e51
   140021e49:	or     eax,0xffffffff
   140021e4c:	jmp    0x140021fc0
   140021e51:	mov    rdx,QWORD PTR [rax+0xa0]
   140021e58:	mov    rcx,rdx
   140021e5b:	movsxd r8,DWORD PTR [rip+0x1e51a]        # 0x14004037c
   140021e62:	cmp    DWORD PTR [rcx+0x4],ebx
   140021e65:	je     0x140021e7a
   140021e67:	add    rcx,0x10
   140021e6b:	mov    rax,r8
   140021e6e:	shl    rax,0x4
   140021e72:	add    rax,rdx
   140021e75:	cmp    rcx,rax
   140021e78:	jb     0x140021e62
   140021e7a:	mov    rax,r8
   140021e7d:	shl    rax,0x4
   140021e81:	add    rax,rdx
   140021e84:	cmp    rcx,rax
   140021e87:	jae    0x140021e8e
   140021e89:	cmp    DWORD PTR [rcx+0x4],ebx
   140021e8c:	je     0x140021e91
   140021e8e:	mov    rcx,r14
   140021e91:	lea    r12,[rcx+0x8]
   140021e95:	mov    r13,QWORD PTR [r12]
   140021e99:	cmp    r13,0x1
   140021e9d:	jne    0x140021ea6
   140021e9f:	xor    eax,eax
   140021ea1:	jmp    0x140021fc0
   140021ea6:	test   r13,r13
   140021ea9:	jne    0x140021eb5
   140021eab:	lea    ecx,[r13+0x3]
   140021eaf:	call   0x140019d10
   140021eb4:	int3   
   140021eb5:	test   edi,edi
   140021eb7:	je     0x140021ec1
   140021eb9:	xor    ecx,ecx
   140021ebb:	call   0x140021b50
   140021ec0:	nop
   140021ec1:	cmp    ebx,0x8
   140021ec4:	je     0x140021edc
   140021ec6:	cmp    ebx,0xb
   140021ec9:	je     0x140021edc
   140021ecb:	cmp    ebx,0x4
   140021ece:	je     0x140021edc
   140021ed0:	mov    r15,QWORD PTR [rsp+0x38]
   140021ed5:	mov    r14d,DWORD PTR [rsp+0x70]
   140021eda:	jmp    0x140021f0c
   140021edc:	mov    r15,QWORD PTR [rsi+0xa8]
   140021ee3:	mov    QWORD PTR [rsp+0x38],r15
   140021ee8:	mov    QWORD PTR [rsi+0xa8],r14
   140021eef:	cmp    ebx,0x8
   140021ef2:	jne    0x140021f07
   140021ef4:	mov    r14d,DWORD PTR [rsi+0xb0]
   140021efb:	mov    DWORD PTR [rsi+0xb0],0x8c
   140021f05:	jmp    0x140021f0c
   140021f07:	mov    r14d,DWORD PTR [rsp+0x70]
   140021f0c:	cmp    ebx,0x8
   140021f0f:	jne    0x140021f4d
   140021f11:	mov    ecx,DWORD PTR [rip+0x1e459]        # 0x140040370
   140021f17:	mov    edx,ecx
   140021f19:	mov    DWORD PTR [rsp+0x30],ecx
   140021f1d:	xor    r8d,r8d
   140021f20:	mov    eax,DWORD PTR [rip+0x1e44e]        # 0x140040374
   140021f26:	add    ecx,eax
   140021f28:	cmp    edx,ecx
   140021f2a:	jge    0x140021f56
   140021f2c:	movsxd rcx,edx
   140021f2f:	add    rcx,rcx
   140021f32:	mov    rax,QWORD PTR [rsi+0xa0]
   140021f39:	mov    QWORD PTR [rax+rcx*8+0x8],r8
   140021f3e:	add    edx,0x1
   140021f41:	mov    DWORD PTR [rsp+0x30],edx
   140021f45:	mov    ecx,DWORD PTR [rip+0x1e425]        # 0x140040370
   140021f4b:	jmp    0x140021f20
   140021f4d:	call   0x14001d550
   140021f52:	mov    QWORD PTR [r12],rax
   140021f56:	test   edi,edi
   140021f58:	je     0x140021f61
   140021f5a:	xor    ecx,ecx
   140021f5c:	call   0x140021a20
   140021f61:	cmp    ebx,0x8
   140021f64:	jne    0x140021f73
   140021f66:	mov    edx,DWORD PTR [rsi+0xb0]
   140021f6c:	mov    ecx,ebx
   140021f6e:	call   r13
   140021f71:	jmp    0x140021f78
   140021f73:	mov    ecx,ebx
   140021f75:	call   r13
   140021f78:	cmp    ebx,0x8
   140021f7b:	je     0x140021f87
   140021f7d:	cmp    ebx,0xb
   140021f80:	je     0x140021f87
   140021f82:	cmp    ebx,0x4
   140021f85:	jne    0x140021f9a
   140021f87:	mov    QWORD PTR [rsi+0xa8],r15
   140021f8e:	cmp    ebx,0x8
   140021f91:	jne    0x140021f9a
   140021f93:	mov    DWORD PTR [rsi+0xb0],r14d
   140021f9a:	xor    eax,eax
   140021f9c:	jmp    0x140021fc0
   140021f9e:	call   0x14001b280
   140021fa3:	mov    DWORD PTR [rax],0x16
   140021fa9:	mov    QWORD PTR [rsp+0x20],r14
   140021fae:	xor    r9d,r9d
   140021fb1:	xor    r8d,r8d
   140021fb4:	xor    edx,edx
   140021fb6:	xor    ecx,ecx
   140021fb8:	call   0x14001de30
   140021fbd:	or     eax,0xffffffff
   140021fc0:	mov    rbx,QWORD PTR [rsp+0x78]
   140021fc5:	mov    rsi,QWORD PTR [rsp+0x80]
   140021fcd:	add    rsp,0x40
   140021fd1:	pop    r15
   140021fd3:	pop    r14
   140021fd5:	pop    r13
   140021fd7:	pop    r12
   140021fd9:	pop    rdi
   140021fda:	ret    
   140021fdb:	nop
   140021fdc:	rcr    BYTE PTR [rip+0x1e3c0002],1        # 0x15e3e1fe4
   140021fe2:	add    al,BYTE PTR [rax]
   140021fe4:	add    bl,BYTE PTR [rsi]
   140021fe6:	add    al,BYTE PTR [rax]
   140021fe8:	sbb    ebx,DWORD PTR [rsi]
   140021fea:	add    al,BYTE PTR [rax]
   140021fec:	jmp    0xde02220e
   140021ff1:	(bad)  
   140021ff2:	add    al,BYTE PTR [rax]
   140021ff4:	add    BYTE PTR [rip+0x5020501],al        # 0x1450424fb
   140021ffa:	add    DWORD PTR [rip+0x5050105],eax        # 0x145072105
   140022000:	add    eax,0x5050503
   140022005:	add    eax,0xcc020405
   14002200a:	int3   
   14002200b:	int3   
   14002200c:	int3   
   14002200d:	int3   
   14002200e:	int3   
   14002200f:	int3   
   140022010:	rex push rbp
   140022012:	sub    rsp,0x30
   140022016:	mov    rbp,rdx
   140022019:	cmp    DWORD PTR [rbp+0x70],0x0
   14002201d:	je     0x140022026
   14002201f:	xor    ecx,ecx
   140022021:	call   0x140021a20
   140022026:	add    rsp,0x30
   14002202a:	pop    rbp
   14002202b:	ret    
   14002202c:	int3   
   14002202d:	int3   
   14002202e:	int3   
   14002202f:	int3   
   140022030:	mov    QWORD PTR [rip+0x24299],rcx        # 0x1400462d0
   140022037:	ret    
   140022038:	int3   
   140022039:	int3   
   14002203a:	int3   
   14002203b:	int3   
   14002203c:	int3   
   14002203d:	int3   
   14002203e:	int3   
   14002203f:	int3   
   140022040:	mov    QWORD PTR [rip+0x24299],rcx        # 0x1400462e0
   140022047:	ret    
   140022048:	int3   
   140022049:	int3   
   14002204a:	int3   
   14002204b:	int3   
   14002204c:	int3   
   14002204d:	int3   
   14002204e:	int3   
   14002204f:	int3   
   140022050:	mov    QWORD PTR [rip+0x24291],rcx        # 0x1400462e8
   140022057:	ret    
   140022058:	int3   
   140022059:	int3   
   14002205a:	int3   
   14002205b:	int3   
   14002205c:	int3   
   14002205d:	int3   
   14002205e:	int3   
   14002205f:	int3   
   140022060:	sub    rsp,0x28
   140022064:	call   QWORD PTR [rip+0xf2de]        # 0x140031348
   14002206a:	mov    eax,0x1
   14002206f:	add    rsp,0x28
   140022073:	ret    
   140022074:	int3   
   140022075:	int3   
   140022076:	int3   
   140022077:	int3   
   140022078:	int3   
   140022079:	int3   
   14002207a:	int3   
   14002207b:	int3   
   14002207c:	int3   
   14002207d:	int3   
   14002207e:	int3   
   14002207f:	int3   
   140022080:	mov    QWORD PTR [rsp+0x8],rbx
   140022085:	mov    QWORD PTR [rsp+0x10],rsi
   14002208a:	mov    QWORD PTR [rsp+0x20],rdi
   14002208f:	push   r12
   140022091:	sub    rsp,0x40
   140022095:	mov    esi,edx
   140022097:	mov    r12,rcx
   14002209a:	xor    edi,edi
   14002209c:	mov    DWORD PTR [rsp+0x60],edi
   1400220a0:	mov    rcx,QWORD PTR [rip+0x24241]        # 0x1400462e8
   1400220a7:	call   0x14001d640
   1400220ac:	mov    rbx,rax
   1400220af:	test   rax,rax
   1400220b2:	jne    0x14002212f
   1400220b4:	lea    rcx,[rsp+0x60]
   1400220b9:	call   0x140019a50
   1400220be:	test   eax,eax
   1400220c0:	je     0x1400220d6
   1400220c2:	mov    QWORD PTR [rsp+0x20],rdi
   1400220c7:	xor    r9d,r9d
   1400220ca:	xor    r8d,r8d
   1400220cd:	xor    edx,edx
   1400220cf:	xor    ecx,ecx
   1400220d1:	call   0x14001dd90
   1400220d6:	cmp    DWORD PTR [rsp+0x60],0x1
   1400220db:	jne    0x1400220e6
   1400220dd:	lea    rbx,[rip+0xffffffffffffff7c]        # 0x140022060
   1400220e4:	jmp    0x140022120
   1400220e6:	lea    rcx,[rip+0x130d3]        # 0x1400351c0
   1400220ed:	call   QWORD PTR [rip+0xf27d]        # 0x140031370
   1400220f3:	test   rax,rax
   1400220f6:	je     0x140022119
   1400220f8:	lea    rdx,[rip+0x13099]        # 0x140035198
   1400220ff:	mov    rcx,rax
   140022102:	call   QWORD PTR [rip+0xf358]        # 0x140031460
   140022108:	mov    rbx,rax
   14002210b:	test   rax,rax
   14002210e:	jne    0x140022120
   140022110:	lea    rbx,[rip+0xffffffffffffff49]        # 0x140022060
   140022117:	jmp    0x140022120
   140022119:	lea    rbx,[rip+0xffffffffffffff40]        # 0x140022060
   140022120:	mov    rcx,rbx
   140022123:	call   0x14001d480
   140022128:	mov    QWORD PTR [rip+0x241b9],rax        # 0x1400462e8
   14002212f:	mov    edx,esi
   140022131:	mov    rcx,r12
   140022134:	call   rbx
   140022136:	mov    edi,eax
   140022138:	mov    DWORD PTR [rsp+0x30],eax
   14002213c:	jmp    0x140022156
   14002213e:	cmp    eax,0xc0000017
   140022143:	jne    0x140022150
   140022145:	mov    ecx,0x8
   14002214a:	call   QWORD PTR [rip+0xf2b0]        # 0x140031400
   140022150:	xor    edi,edi
   140022152:	mov    DWORD PTR [rsp+0x30],edi
   140022156:	mov    eax,edi
   140022158:	mov    rbx,QWORD PTR [rsp+0x50]
   14002215d:	mov    rsi,QWORD PTR [rsp+0x58]
   140022162:	mov    rdi,QWORD PTR [rsp+0x68]
   140022167:	add    rsp,0x40
   14002216b:	pop    r12
   14002216d:	ret    
   14002216e:	int3   
   14002216f:	int3   
   140022170:	rex push rbp
   140022172:	push   rdi
   140022173:	sub    rsp,0x38
   140022177:	mov    rbp,rdx
   14002217a:	mov    rax,QWORD PTR [rcx]
   14002217d:	xor    edi,edi
   14002217f:	cmp    DWORD PTR [rax],0xc0000017
   140022185:	sete   dil
   140022189:	mov    eax,edi
   14002218b:	add    rsp,0x38
   14002218f:	pop    rdi
   140022190:	pop    rbp
   140022191:	ret    
   140022192:	int3   
   140022193:	int3   
   140022194:	int3   
   140022195:	int3   
   140022196:	int3   
   140022197:	int3   
   140022198:	int3   
   140022199:	int3   
   14002219a:	int3   
   14002219b:	int3   
   14002219c:	int3   
   14002219d:	int3   
   14002219e:	int3   
   14002219f:	int3   
   1400221a0:	mov    QWORD PTR [rip+0x24149],rcx        # 0x1400462f0
   1400221a7:	ret    
   1400221a8:	int3   
   1400221a9:	int3   
   1400221aa:	int3   
   1400221ab:	int3   
   1400221ac:	int3   
   1400221ad:	int3   
   1400221ae:	int3   
   1400221af:	int3   
   1400221b0:	rex push rbx
   1400221b2:	sub    rsp,0x20
   1400221b6:	mov    rbx,rcx
   1400221b9:	mov    rcx,QWORD PTR [rip+0x24130]        # 0x1400462f0
   1400221c0:	call   0x14001d640
   1400221c5:	test   rax,rax
   1400221c8:	je     0x1400221de
   1400221ca:	mov    rcx,rbx
   1400221cd:	call   rax
   1400221cf:	test   eax,eax
   1400221d1:	je     0x1400221de
   1400221d3:	mov    eax,0x1
   1400221d8:	add    rsp,0x20
   1400221dc:	pop    rbx
   1400221dd:	ret    
   1400221de:	xor    eax,eax
   1400221e0:	add    rsp,0x20
   1400221e4:	pop    rbx
   1400221e5:	ret    
   1400221e6:	int3   
   1400221e7:	int3   
   1400221e8:	int3   
   1400221e9:	int3   
   1400221ea:	int3   
   1400221eb:	int3   
   1400221ec:	int3   
   1400221ed:	int3   
   1400221ee:	int3   
   1400221ef:	int3   
   1400221f0:	mov    WORD PTR [rsp+0x8],cx
   1400221f5:	push   rbx
   1400221f6:	sub    rsp,0x60
   1400221fa:	cmp    cx,0xffff
   1400221ff:	movzx  ebx,dx
   140022202:	jne    0x140022215
   140022204:	xor    cx,cx
   140022207:	movzx  eax,cx
   14002220a:	movzx  ecx,dx
   14002220d:	and    eax,ecx
   14002220f:	add    rsp,0x60
   140022213:	pop    rbx
   140022214:	ret    
   140022215:	cmp    cx,0x100
   14002221a:	jae    0x14002223b
   14002221c:	mov    rax,QWORD PTR [rip+0x1ecd5]        # 0x140040ef8
   140022223:	movzx  ecx,cx
   140022226:	movzx  ecx,WORD PTR [rax+rcx*2]
   14002222a:	and    cx,bx
   14002222d:	movzx  eax,cx
   140022230:	movzx  ecx,bx
   140022233:	and    eax,ecx
   140022235:	add    rsp,0x60
   140022239:	pop    rbx
   14002223a:	ret    
   14002223b:	test   r8,r8
   14002223e:	mov    BYTE PTR [rsp+0x58],0x0
   140022243:	jne    0x1400222db
   140022249:	call   0x14001d930
   14002224e:	mov    QWORD PTR [rsp+0x50],rax
   140022253:	mov    rdx,QWORD PTR [rax+0xc0]
   14002225a:	cmp    rdx,QWORD PTR [rip+0x1e82f]        # 0x140040a90
   140022261:	mov    QWORD PTR [rsp+0x40],rdx
   140022266:	mov    r8,QWORD PTR [rax+0xb8]
   14002226d:	mov    QWORD PTR [rsp+0x48],r8
   140022272:	je     0x140022299
   140022274:	mov    ecx,DWORD PTR [rax+0xc8]
   14002227a:	test   DWORD PTR [rip+0x1e698],ecx        # 0x140040918
   140022280:	jne    0x140022299
   140022282:	call   0x14001ed60
   140022287:	mov    r8,QWORD PTR [rsp+0x48]
   14002228c:	mov    rdx,rax
   14002228f:	mov    QWORD PTR [rsp+0x40],rax
   140022294:	mov    rax,QWORD PTR [rsp+0x50]
   140022299:	cmp    r8,QWORD PTR [rip+0x1e570]        # 0x140040810
   1400222a0:	je     0x1400222c4
   1400222a2:	mov    ecx,DWORD PTR [rax+0xc8]
   1400222a8:	test   DWORD PTR [rip+0x1e66a],ecx        # 0x140040918
   1400222ae:	jne    0x1400222c4
   1400222b0:	call   0x14001e210
   1400222b5:	mov    rdx,QWORD PTR [rsp+0x40]
   1400222ba:	mov    QWORD PTR [rsp+0x48],rax
   1400222bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400222c4:	test   BYTE PTR [rax+0xc8],0x2
   1400222cb:	jne    0x1400222f3
   1400222cd:	or     DWORD PTR [rax+0xc8],0x2
   1400222d4:	mov    BYTE PTR [rsp+0x58],0x1
   1400222d9:	jmp    0x1400222ee
   1400222db:	mov    rax,QWORD PTR [r8]
   1400222de:	lea    rcx,[rsp+0x40]
   1400222e3:	mov    QWORD PTR [rcx],rax
   1400222e6:	mov    rax,QWORD PTR [r8+0x8]
   1400222ea:	mov    QWORD PTR [rcx+0x8],rax
   1400222ee:	mov    rdx,QWORD PTR [rsp+0x40]
   1400222f3:	mov    eax,DWORD PTR [rdx+0x14]
   1400222f6:	mov    r9d,0x1
   1400222fc:	lea    r8,[rsp+0x70]
   140022301:	mov    DWORD PTR [rsp+0x30],eax
   140022305:	mov    eax,DWORD PTR [rdx+0x4]
   140022308:	lea    rcx,[rsp+0x40]
   14002230d:	mov    DWORD PTR [rsp+0x28],eax
   140022311:	lea    rax,[rsp+0x78]
   140022316:	mov    edx,r9d
   140022319:	mov    QWORD PTR [rsp+0x20],rax
   14002231e:	call   0x140029a50
   140022323:	mov    cx,WORD PTR [rsp+0x78]
   140022328:	xor    edx,edx
   14002232a:	test   eax,eax
   14002232c:	cmove  cx,dx
   140022330:	cmp    BYTE PTR [rsp+0x58],dl
   140022334:	mov    WORD PTR [rsp+0x78],cx
   140022339:	je     0x14002234c
   14002233b:	mov    rax,QWORD PTR [rsp+0x50]
   140022340:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140022347:	mov    cx,WORD PTR [rsp+0x78]
   14002234c:	movzx  eax,cx
   14002234f:	movzx  ecx,bx
   140022352:	and    eax,ecx
   140022354:	add    rsp,0x60
   140022358:	pop    rbx
   140022359:	ret    
   14002235a:	int3   
   14002235b:	int3   
   14002235c:	int3   
   14002235d:	int3   
   14002235e:	int3   
   14002235f:	int3   
   140022360:	mov    WORD PTR [rsp+0x8],cx
   140022365:	push   rbx
   140022366:	sub    rsp,0x40
   14002236a:	cmp    cx,0xffff
   14002236f:	movzx  ebx,dx
   140022372:	jne    0x14002237c
   140022374:	xor    eax,eax
   140022376:	add    rsp,0x40
   14002237a:	pop    rbx
   14002237b:	ret    
   14002237c:	cmp    cx,0x100
   140022381:	jae    0x14002239c
   140022383:	mov    rax,QWORD PTR [rip+0x1eb6e]        # 0x140040ef8
   14002238a:	movzx  ecx,cx
   14002238d:	movzx  eax,WORD PTR [rax+rcx*2]
   140022391:	movzx  ecx,bx
   140022394:	and    eax,ecx
   140022396:	add    rsp,0x40
   14002239a:	pop    rbx
   14002239b:	ret    
   14002239c:	cmp    DWORD PTR [rip+0x23705],0x0        # 0x140045aa8
   1400223a3:	jne    0x1400223e2
   1400223a5:	mov    eax,DWORD PTR [rip+0x1e599]        # 0x140040944
   1400223ab:	mov    r9d,0x1
   1400223b1:	lea    r8,[rsp+0x50]
   1400223b6:	mov    DWORD PTR [rsp+0x30],eax
   1400223ba:	mov    eax,DWORD PTR [rip+0x1e574]        # 0x140040934
   1400223c0:	lea    rcx,[rip+0x1e6d9]        # 0x140040aa0
   1400223c7:	mov    DWORD PTR [rsp+0x28],eax
   1400223cb:	lea    rax,[rsp+0x60]
   1400223d0:	mov    edx,r9d
   1400223d3:	mov    QWORD PTR [rsp+0x20],rax
   1400223d8:	call   0x140029a50
   1400223dd:	movzx  ecx,WORD PTR [rsp+0x50]
   1400223e2:	xor    r8d,r8d
   1400223e5:	movzx  edx,bx
   1400223e8:	call   0x1400221f0
   1400223ed:	add    rsp,0x40
   1400223f1:	pop    rbx
   1400223f2:	ret    
   1400223f3:	int3   
   1400223f4:	int3   
   1400223f5:	int3   
   1400223f6:	int3   
   1400223f7:	int3   
   1400223f8:	int3   
   1400223f9:	int3   
   1400223fa:	int3   
   1400223fb:	int3   
   1400223fc:	int3   
   1400223fd:	int3   
   1400223fe:	int3   
   1400223ff:	int3   
   140022400:	mov    QWORD PTR [rsp+0x8],rbx
   140022405:	mov    QWORD PTR [rsp+0x10],rbp
   14002240a:	mov    QWORD PTR [rsp+0x18],rsi
   14002240f:	push   rdi
   140022410:	sub    rsp,0x20
   140022414:	test   rcx,rcx
   140022417:	mov    rsi,r8
   14002241a:	mov    rbp,rdx
   14002241d:	mov    rbx,rcx
   140022420:	jne    0x140022427
   140022422:	call   0x140021d00
   140022427:	movsxd rax,DWORD PTR [rbx+0x18]
   14002242b:	mov    edi,DWORD PTR [rbx+0x14]
   14002242e:	add    rax,QWORD PTR [rbp+0x8]
   140022432:	jne    0x140022439
   140022434:	call   0x140021d00
   140022439:	xor    ecx,ecx
   14002243b:	test   edi,edi
   14002243d:	je     0x140022478
   14002243f:	mov    r8,QWORD PTR [rbp+0x8]
   140022443:	movsxd r9,DWORD PTR [rbx+0x18]
   140022447:	lea    rdx,[r8+r9*1]
   14002244b:	xchg   ax,ax
   14002244d:	data16 xchg ax,ax
   140022450:	movsxd rax,DWORD PTR [rdx]
   140022453:	add    rax,r8
   140022456:	cmp    rsi,rax
   140022459:	jl     0x140022466
   14002245b:	add    ecx,0x1
   14002245e:	add    rdx,0x8
   140022462:	cmp    ecx,edi
   140022464:	jb     0x140022450
   140022466:	test   ecx,ecx
   140022468:	je     0x140022478
   14002246a:	lea    eax,[rcx-0x1]
   14002246d:	lea    rdx,[r9+rax*8]
   140022471:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   140022476:	jmp    0x14002247b
   140022478:	or     eax,0xffffffff
   14002247b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022480:	mov    rbp,QWORD PTR [rsp+0x38]
   140022485:	mov    rsi,QWORD PTR [rsp+0x40]
   14002248a:	add    rsp,0x20
   14002248e:	pop    rdi
   14002248f:	ret    
   140022490:	mov    QWORD PTR [rsp+0x8],rbx
   140022495:	mov    QWORD PTR [rsp+0x10],rbp
   14002249a:	mov    QWORD PTR [rsp+0x18],rsi
   14002249f:	push   rdi
   1400224a0:	sub    rsp,0x20
   1400224a4:	test   rcx,rcx
   1400224a7:	mov    rbp,QWORD PTR [rdx]
   1400224aa:	mov    rsi,rdx
   1400224ad:	mov    rbx,rcx
   1400224b0:	jne    0x1400224b7
   1400224b2:	call   0x140021d00
   1400224b7:	movsxd rax,DWORD PTR [rbx+0x18]
   1400224bb:	mov    edi,DWORD PTR [rbx+0x14]
   1400224be:	add    rax,QWORD PTR [rsi+0x8]
   1400224c2:	jne    0x1400224c9
   1400224c4:	call   0x140021d00
   1400224c9:	xor    ecx,ecx
   1400224cb:	test   edi,edi
   1400224cd:	je     0x140022508
   1400224cf:	mov    r8,QWORD PTR [rsi+0x8]
   1400224d3:	movsxd r9,DWORD PTR [rbx+0x18]
   1400224d7:	lea    rdx,[r8+r9*1]
   1400224db:	xchg   ax,ax
   1400224dd:	data16 xchg ax,ax
   1400224e0:	movsxd rax,DWORD PTR [rdx]
   1400224e3:	add    rax,r8
   1400224e6:	cmp    rbp,rax
   1400224e9:	jl     0x1400224f6
   1400224eb:	add    ecx,0x1
   1400224ee:	add    rdx,0x8
   1400224f2:	cmp    ecx,edi
   1400224f4:	jb     0x1400224e0
   1400224f6:	test   ecx,ecx
   1400224f8:	je     0x140022508
   1400224fa:	lea    eax,[rcx-0x1]
   1400224fd:	lea    rcx,[r8+rax*8]
   140022501:	mov    eax,DWORD PTR [rcx+r9*1+0x4]
   140022506:	jmp    0x14002250b
   140022508:	or     eax,0xffffffff
   14002250b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022510:	mov    rbp,QWORD PTR [rsp+0x38]
   140022515:	mov    rsi,QWORD PTR [rsp+0x40]
   14002251a:	add    rsp,0x20
   14002251e:	pop    rdi
   14002251f:	ret    
   140022520:	mov    QWORD PTR [rsp+0x18],rbp
   140022525:	push   rdi
   140022526:	sub    rsp,0x20
   14002252a:	movsxd r9,DWORD PTR [r8+0x1c]
   14002252e:	mov    rax,QWORD PTR [rcx]
   140022531:	mov    rdi,r8
   140022534:	mov    eax,DWORD PTR [r9+rax*1]
   140022538:	mov    rbp,rdx
   14002253b:	cmp    eax,0xfffffffe
   14002253e:	jne    0x1400225a7
   140022540:	movsxd rax,DWORD PTR [r8+0x18]
   140022544:	mov    QWORD PTR [rsp+0x30],rbx
   140022549:	mov    ebx,DWORD PTR [r8+0x14]
   14002254d:	add    rax,QWORD PTR [rdx+0x8]
   140022551:	mov    QWORD PTR [rsp+0x38],rsi
   140022556:	mov    rsi,QWORD PTR [rdx]
   140022559:	jne    0x140022560
   14002255b:	call   0x140021d00
   140022560:	xor    ecx,ecx
   140022562:	test   ebx,ebx
   140022564:	je     0x14002259a
   140022566:	mov    r8,QWORD PTR [rbp+0x8]
   14002256a:	movsxd r9,DWORD PTR [rdi+0x18]
   14002256e:	lea    rdx,[r8+r9*1]
   140022572:	movsxd rax,DWORD PTR [rdx]
   140022575:	add    rax,r8
   140022578:	cmp    rsi,rax
   14002257b:	jl     0x140022588
   14002257d:	add    ecx,0x1
   140022580:	add    rdx,0x8
   140022584:	cmp    ecx,ebx
   140022586:	jb     0x140022572
   140022588:	test   ecx,ecx
   14002258a:	je     0x14002259a
   14002258c:	lea    eax,[rcx-0x1]
   14002258f:	lea    rdx,[r9+rax*8]
   140022593:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   140022598:	jmp    0x14002259d
   14002259a:	or     eax,0xffffffff
   14002259d:	mov    rsi,QWORD PTR [rsp+0x38]
   1400225a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400225a7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400225ac:	add    rsp,0x20
   1400225b0:	pop    rdi
   1400225b1:	ret    
   1400225b2:	int3   
   1400225b3:	int3   
   1400225b4:	int3   
   1400225b5:	int3   
   1400225b6:	int3   
   1400225b7:	int3   
   1400225b8:	int3   
   1400225b9:	int3   
   1400225ba:	int3   
   1400225bb:	int3   
   1400225bc:	int3   
   1400225bd:	int3   
   1400225be:	int3   
   1400225bf:	int3   
   1400225c0:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400225c4:	mov    rax,QWORD PTR [rcx]
   1400225c7:	mov    DWORD PTR [rdx+rax*1],r9d
   1400225cb:	ret    
   1400225cc:	int3   
   1400225cd:	int3   
   1400225ce:	int3   
   1400225cf:	int3   
   1400225d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400225d5:	push   rdi
   1400225d6:	sub    rsp,0x20
   1400225da:	mov    edi,r9d
   1400225dd:	lea    r9,[rsp+0x40]
   1400225e2:	mov    rbx,r8
   1400225e5:	call   0x14001a860
   1400225ea:	mov    rcx,QWORD PTR [rax]
   1400225ed:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400225f1:	mov    QWORD PTR [rsp+0x40],rcx
   1400225f6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   1400225fa:	jle    0x140022600
   1400225fc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140022600:	mov    rbx,QWORD PTR [rsp+0x30]
   140022605:	add    rsp,0x20
   140022609:	pop    rdi
   14002260a:	ret    
   14002260b:	int3   
   14002260c:	int3   
   14002260d:	int3   
   14002260e:	int3   
   14002260f:	int3   
   140022610:	rex push rbx
   140022612:	sub    rsp,0x20
   140022616:	lea    r9,[rsp+0x40]
   14002261b:	mov    rbx,r8
   14002261e:	call   0x14001a860
   140022623:	mov    rcx,QWORD PTR [rax]
   140022626:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002262a:	mov    QWORD PTR [rsp+0x40],rcx
   14002262f:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140022633:	add    rsp,0x20
   140022637:	pop    rbx
   140022638:	ret    
   140022639:	int3   
   14002263a:	int3   
   14002263b:	int3   
   14002263c:	int3   
   14002263d:	int3   
   14002263e:	int3   
   14002263f:	int3   
   140022640:	lea    rax,[rip+0x12b99]        # 0x1400351e0
   140022647:	mov    QWORD PTR [rcx],rax
   14002264a:	jmp    0x140029cd0
   14002264f:	int3   
   140022650:	mov    QWORD PTR [rsp+0x8],rbx
   140022655:	push   rdi
   140022656:	sub    rsp,0x20
   14002265a:	lea    rax,[rip+0x12b7f]        # 0x1400351e0
   140022661:	mov    ebx,edx
   140022663:	mov    rdi,rcx
   140022666:	mov    QWORD PTR [rcx],rax
   140022669:	call   0x140029cd0
   14002266e:	test   bl,0x1
   140022671:	je     0x14002267b
   140022673:	mov    rcx,rdi
   140022676:	call   0x140006160
   14002267b:	mov    rax,rdi
   14002267e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022683:	add    rsp,0x20
   140022687:	pop    rdi
   140022688:	ret    
   140022689:	int3   
   14002268a:	int3   
   14002268b:	int3   
   14002268c:	int3   
   14002268d:	int3   
   14002268e:	int3   
   14002268f:	int3   
   140022690:	sub    rsp,0x28
   140022694:	mov    rax,QWORD PTR [rcx]
   140022697:	mov    ecx,DWORD PTR [rax]
   140022699:	cmp    ecx,0xe0434f4d
   14002269f:	je     0x1400226be
   1400226a1:	cmp    ecx,0xe06d7363
   1400226a7:	jne    0x1400226d8
   1400226a9:	call   0x14001d930
   1400226ae:	mov    DWORD PTR [rax+0x100],0x0
   1400226b8:	call   0x140021cd0
   1400226bd:	int3   
   1400226be:	call   0x14001d930
   1400226c3:	cmp    DWORD PTR [rax+0x100],0x0
   1400226ca:	jle    0x1400226d8
   1400226cc:	call   0x14001d930
   1400226d1:	add    DWORD PTR [rax+0x100],0xffffffff
   1400226d8:	xor    eax,eax
   1400226da:	add    rsp,0x28
   1400226de:	ret    
   1400226df:	int3   
   1400226e0:	mov    DWORD PTR [rsp+0x20],r9d
   1400226e5:	mov    QWORD PTR [rsp+0x18],r8
   1400226ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400226ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400226f4:	push   rbx
   1400226f5:	push   rsi
   1400226f6:	push   rdi
   1400226f7:	push   r12
   1400226f9:	push   r13
   1400226fb:	push   r14
   1400226fd:	push   r15
   1400226ff:	sub    rsp,0x30
   140022703:	mov    r13d,r9d
   140022706:	mov    rsi,r8
   140022709:	mov    rbx,rdx
   14002270c:	mov    r14,rcx
   14002270f:	call   0x140022520
   140022714:	mov    edi,eax
   140022716:	call   0x14001a970
   14002271b:	mov    r15,rax
   14002271e:	mov    QWORD PTR [rsp+0x28],rax
   140022723:	call   0x14001d930
   140022728:	add    DWORD PTR [rax+0x100],0x1
   14002272f:	nop
   140022730:	cmp    edi,0xffffffff
   140022733:	je     0x140022828
   140022739:	cmp    edi,r13d
   14002273c:	jle    0x140022828
   140022742:	cmp    edi,0xffffffff
   140022745:	jle    0x14002274c
   140022747:	cmp    edi,DWORD PTR [rsi+0x4]
   14002274a:	jl     0x140022751
   14002274c:	call   0x140021d00
   140022751:	movsxd r12,edi
   140022754:	call   0x14001a970
   140022759:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002275d:	lea    rax,[rax+r12*8]
   140022761:	mov    edi,DWORD PTR [rcx+rax*1]
   140022764:	mov    DWORD PTR [rsp+0x20],edi
   140022768:	call   0x14001a970
   14002276d:	movsxd rcx,DWORD PTR [rsi+0x8]
   140022771:	lea    rax,[rax+r12*8]
   140022775:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002277a:	je     0x1400227fa
   14002277c:	call   0x14001a970
   140022781:	movsxd rcx,DWORD PTR [rsi+0x8]
   140022785:	lea    rax,[rax+r12*8]
   140022789:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002278e:	call   0x14001a970
   140022793:	lea    rcx,[rax+rbx*1]
   140022797:	test   rcx,rcx
   14002279a:	je     0x1400227fa
   14002279c:	mov    r9d,edi
   14002279f:	mov    r8,rsi
   1400227a2:	mov    rdx,QWORD PTR [rsp+0x78]
   1400227a7:	mov    rcx,r14
   1400227aa:	call   0x1400225c0
   1400227af:	call   0x14001a970
   1400227b4:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400227b8:	lea    rax,[rax+r12*8]
   1400227bc:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400227c1:	je     0x1400227df
   1400227c3:	call   0x14001a970
   1400227c8:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400227cc:	lea    rax,[rax+r12*8]
   1400227d0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   1400227d5:	call   0x14001a970
   1400227da:	add    rax,rbx
   1400227dd:	jmp    0x1400227e1
   1400227df:	xor    eax,eax
   1400227e1:	mov    r8d,0x103
   1400227e7:	mov    rdx,r14
   1400227ea:	mov    rcx,rax
   1400227ed:	call   0x1400306d0
   1400227f2:	mov    rcx,r15
   1400227f5:	call   0x14001a9b0
   1400227fa:	jmp    0x14002281a
   1400227fc:	mov    r13d,DWORD PTR [rsp+0x88]
   140022804:	mov    rsi,QWORD PTR [rsp+0x80]
   14002280c:	mov    r14,QWORD PTR [rsp+0x70]
   140022811:	mov    r15,QWORD PTR [rsp+0x28]
   140022816:	mov    edi,DWORD PTR [rsp+0x20]
   14002281a:	mov    DWORD PTR [rsp+0x24],edi
   14002281e:	mov    rbx,QWORD PTR [rsp+0x78]
   140022823:	jmp    0x140022730
   140022828:	call   0x14001d930
   14002282d:	cmp    DWORD PTR [rax+0x100],0x0
   140022834:	jle    0x140022842
   140022836:	call   0x14001d930
   14002283b:	add    DWORD PTR [rax+0x100],0xffffffff
   140022842:	cmp    edi,0xffffffff
   140022845:	je     0x140022851
   140022847:	cmp    edi,r13d
   14002284a:	jle    0x140022851
   14002284c:	call   0x140021d00
   140022851:	mov    r9d,edi
   140022854:	mov    r8,rsi
   140022857:	mov    rdx,rbx
   14002285a:	mov    rcx,r14
   14002285d:	call   0x1400225c0
   140022862:	add    rsp,0x30
   140022866:	pop    r15
   140022868:	pop    r14
   14002286a:	pop    r13
   14002286c:	pop    r12
   14002286e:	pop    rdi
   14002286f:	pop    rsi
   140022870:	pop    rbx
   140022871:	ret    
   140022872:	int3   
   140022873:	int3   
   140022874:	int3   
   140022875:	int3   
   140022876:	int3   
   140022877:	int3   
   140022878:	int3   
   140022879:	int3   
   14002287a:	int3   
   14002287b:	int3   
   14002287c:	int3   
   14002287d:	int3   
   14002287e:	int3   
   14002287f:	int3   
   140022880:	rex push rbp
   140022882:	sub    rsp,0x20
   140022886:	mov    rbp,rdx
   140022889:	call   0x140022690
   14002288e:	add    rsp,0x20
   140022892:	pop    rbp
   140022893:	ret    
   140022894:	int3   
   140022895:	int3   
   140022896:	int3   
   140022897:	int3   
   140022898:	int3   
   140022899:	int3   
   14002289a:	int3   
   14002289b:	int3   
   14002289c:	int3   
   14002289d:	int3   
   14002289e:	int3   
   14002289f:	int3   
   1400228a0:	rex push rbp
   1400228a2:	sub    rsp,0x20
   1400228a6:	mov    rbp,rdx
   1400228a9:	call   0x14001d930
   1400228ae:	cmp    DWORD PTR [rax+0x100],0x0
   1400228b5:	jle    0x1400228c3
   1400228b7:	call   0x14001d930
   1400228bc:	add    DWORD PTR [rax+0x100],0xffffffff
   1400228c3:	add    rsp,0x20
   1400228c7:	pop    rbp
   1400228c8:	ret    
   1400228c9:	int3   
   1400228ca:	int3   
   1400228cb:	int3   
   1400228cc:	int3   
   1400228cd:	int3   
   1400228ce:	int3   
   1400228cf:	int3   
   1400228d0:	rex push rbx
   1400228d2:	sub    rsp,0x20
   1400228d6:	mov    r9,QWORD PTR [rcx]
   1400228d9:	mov    DWORD PTR [r8],0x0
   1400228e0:	mov    rbx,r8
   1400228e3:	cmp    DWORD PTR [r9],0xe06d7363
   1400228ea:	jne    0x140022974
   1400228f0:	cmp    DWORD PTR [r9+0x18],0x4
   1400228f5:	jne    0x140022921
   1400228f7:	mov    eax,DWORD PTR [r9+0x20]
   1400228fb:	cmp    eax,0x19930520
   140022900:	je     0x140022910
   140022902:	cmp    eax,0x19930521
   140022907:	je     0x140022910
   140022909:	cmp    eax,0x19930522
   14002290e:	jne    0x140022921
   140022910:	mov    rax,QWORD PTR [rdx+0x28]
   140022914:	cmp    QWORD PTR [r9+0x28],rax
   140022918:	jne    0x140022921
   14002291a:	mov    DWORD PTR [r8],0x1
   140022921:	cmp    DWORD PTR [r9],0xe06d7363
   140022928:	jne    0x140022974
   14002292a:	cmp    DWORD PTR [r9+0x18],0x4
   14002292f:	jne    0x140022974
   140022931:	mov    ecx,DWORD PTR [r9+0x20]
   140022935:	cmp    ecx,0x19930520
   14002293b:	je     0x14002294d
   14002293d:	cmp    ecx,0x19930521
   140022943:	je     0x14002294d
   140022945:	cmp    ecx,0x19930522
   14002294b:	jne    0x140022974
   14002294d:	cmp    QWORD PTR [r9+0x30],0x0
   140022952:	jne    0x140022974
   140022954:	call   0x14001d930
   140022959:	mov    DWORD PTR [rax+0x2d0],0x1
   140022963:	mov    DWORD PTR [rbx],0x1
   140022969:	mov    eax,0x1
   14002296e:	add    rsp,0x20
   140022972:	pop    rbx
   140022973:	ret    
   140022974:	xor    eax,eax
   140022976:	add    rsp,0x20
   14002297a:	pop    rbx
   14002297b:	ret    
   14002297c:	int3   
   14002297d:	int3   
   14002297e:	int3   
   14002297f:	int3   
   140022980:	test   rcx,rcx
   140022983:	je     0x1400229c2
   140022985:	mov    BYTE PTR [rsp+0x10],dl
   140022989:	sub    rsp,0x28
   14002298d:	cmp    DWORD PTR [rcx],0xe06d7363
   140022993:	jne    0x1400229be
   140022995:	mov    rax,QWORD PTR [rcx+0x30]
   140022999:	test   rax,rax
   14002299c:	je     0x1400229be
   14002299e:	movsxd rdx,DWORD PTR [rax+0x4]
   1400229a2:	test   edx,edx
   1400229a4:	je     0x1400229be
   1400229a6:	mov    rax,rdx
   1400229a9:	mov    rdx,QWORD PTR [rcx+0x38]
   1400229ad:	add    rdx,rax
   1400229b0:	mov    rcx,QWORD PTR [rcx+0x28]
   1400229b4:	call   rdx
   1400229b6:	jmp    0x1400229be
   1400229b8:	call   0x140021cd0
   1400229bd:	nop
   1400229be:	add    rsp,0x28
   1400229c2:	ret    0x0
   1400229c5:	int3   
   1400229c6:	int3   
   1400229c7:	int3   
   1400229c8:	int3   
   1400229c9:	int3   
   1400229ca:	int3   
   1400229cb:	int3   
   1400229cc:	int3   
   1400229cd:	int3   
   1400229ce:	int3   
   1400229cf:	int3   
   1400229d0:	rex push rbp
   1400229d2:	sub    rsp,0x20
   1400229d6:	mov    rbp,rdx
   1400229d9:	xor    eax,eax
   1400229db:	cmp    BYTE PTR [rbp+0x38],al
   1400229de:	setne  al
   1400229e1:	add    rsp,0x20
   1400229e5:	pop    rbp
   1400229e6:	ret    
   1400229e7:	int3   
   1400229e8:	int3   
   1400229e9:	int3   
   1400229ea:	int3   
   1400229eb:	int3   
   1400229ec:	int3   
   1400229ed:	int3   
   1400229ee:	int3   
   1400229ef:	int3   
   1400229f0:	movsxd rax,DWORD PTR [rdx]
   1400229f3:	add    rax,rcx
   1400229f6:	cmp    DWORD PTR [rdx+0x4],0x0
   1400229fa:	jl     0x140022a12
   1400229fc:	movsxd r9,DWORD PTR [rdx+0x4]
   140022a00:	movsxd rdx,DWORD PTR [rdx+0x8]
   140022a04:	mov    rcx,QWORD PTR [r9+rcx*1]
   140022a08:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140022a0c:	add    r8,r9
   140022a0f:	add    rax,r8
   140022a12:	ret    0x0
   140022a15:	int3   
   140022a16:	int3   
   140022a17:	int3   
   140022a18:	int3   
   140022a19:	int3   
   140022a1a:	int3   
   140022a1b:	int3   
   140022a1c:	int3   
   140022a1d:	int3   
   140022a1e:	int3   
   140022a1f:	int3   
   140022a20:	mov    QWORD PTR [rsp+0x10],rdx
   140022a25:	mov    QWORD PTR [rsp+0x8],rcx
   140022a2a:	push   rbx
   140022a2b:	push   rdi
   140022a2c:	sub    rsp,0x48
   140022a30:	test   rdx,rdx
   140022a33:	mov    rbx,rdx
   140022a36:	mov    rdi,rcx
   140022a39:	jne    0x140022a46
   140022a3b:	call   0x140021d00
   140022a40:	call   0x140021cd0
   140022a45:	int3   
   140022a46:	mov    QWORD PTR [rsp+0x78],rbp
   140022a4b:	xor    bpl,bpl
   140022a4e:	mov    QWORD PTR [rsp+0x28],r14
   140022a53:	xor    r14d,r14d
   140022a56:	mov    BYTE PTR [rsp+0x70],bpl
   140022a5b:	cmp    DWORD PTR [rdx],r14d
   140022a5e:	jle    0x140022c50
   140022a64:	mov    QWORD PTR [rsp+0x40],rsi
   140022a69:	mov    QWORD PTR [rsp+0x38],r12
   140022a6e:	mov    QWORD PTR [rsp+0x30],r13
   140022a73:	mov    QWORD PTR [rsp+0x20],r15
   140022a78:	xor    r15d,r15d
   140022a7b:	xchg   ax,ax
   140022a7d:	data16 xchg ax,ax
   140022a80:	call   0x14001a990
   140022a85:	mov    r11,rax
   140022a88:	mov    rax,QWORD PTR [rdi+0x30]
   140022a8c:	movsxd rcx,DWORD PTR [rax+0xc]
   140022a90:	lea    r12,[r11+rcx*1+0x4]
   140022a95:	call   0x14001a990
   140022a9a:	mov    r11,rax
   140022a9d:	mov    rax,QWORD PTR [rdi+0x30]
   140022aa1:	movsxd rcx,DWORD PTR [rax+0xc]
   140022aa5:	mov    esi,DWORD PTR [r11+rcx*1]
   140022aa9:	test   esi,esi
   140022aab:	jle    0x140022c2b
   140022ab1:	call   0x14001a990
   140022ab6:	mov    r13,QWORD PTR [rdi+0x30]
   140022aba:	mov    rbp,rax
   140022abd:	movsxd rax,DWORD PTR [r12]
   140022ac1:	add    rbp,rax
   140022ac4:	call   0x14001a970
   140022ac9:	movsxd rdi,DWORD PTR [rbx+0x4]
   140022acd:	add    rax,r15
   140022ad0:	add    rdi,rax
   140022ad3:	cmp    DWORD PTR [rdi+0x4],0x0
   140022ad7:	je     0x140022c0d
   140022add:	movsxd rbx,DWORD PTR [rdi+0x4]
   140022ae1:	call   0x14001a970
   140022ae6:	mov    r11,rax
   140022ae9:	add    r11,rbx
   140022aec:	je     0x140022be0
   140022af2:	test   ebx,ebx
   140022af4:	je     0x140022b05
   140022af6:	movsxd rbx,DWORD PTR [rdi+0x4]
   140022afa:	call   0x14001a970
   140022aff:	lea    r11,[rbx+rax*1]
   140022b03:	jmp    0x140022b08
   140022b05:	xor    r11d,r11d
   140022b08:	cmp    BYTE PTR [r11+0x10],0x0
   140022b0d:	je     0x140022bcc
   140022b13:	test   ebx,ebx
   140022b15:	je     0x140022b28
   140022b17:	call   0x14001a970
   140022b1c:	mov    rbx,rax
   140022b1f:	movsxd rax,DWORD PTR [rdi+0x4]
   140022b23:	add    rbx,rax
   140022b26:	jmp    0x140022b2a
   140022b28:	xor    ebx,ebx
   140022b2a:	call   0x14001a990
   140022b2f:	mov    r11,rax
   140022b32:	movsxd rax,DWORD PTR [rbp+0x4]
   140022b36:	add    r11,rax
   140022b39:	cmp    rbx,r11
   140022b3c:	je     0x140022b88
   140022b3e:	cmp    DWORD PTR [rdi+0x4],0x0
   140022b42:	je     0x140022b55
   140022b44:	call   0x14001a970
   140022b49:	mov    rbx,rax
   140022b4c:	movsxd rax,DWORD PTR [rdi+0x4]
   140022b50:	add    rbx,rax
   140022b53:	jmp    0x140022b57
   140022b55:	xor    ebx,ebx
   140022b57:	call   0x14001a990
   140022b5c:	mov    r11,rax
   140022b5f:	movsxd rax,DWORD PTR [rbp+0x4]
   140022b63:	lea    r8,[r11+rax*1+0x10]
   140022b68:	lea    rax,[rbx+0x10]
   140022b6c:	sub    r8,rax
   140022b6f:	nop
   140022b70:	movzx  edx,BYTE PTR [rax]
   140022b73:	movzx  ecx,BYTE PTR [rax+r8*1]
   140022b78:	sub    edx,ecx
   140022b7a:	jne    0x140022b84
   140022b7c:	add    rax,0x1
   140022b80:	test   ecx,ecx
   140022b82:	jne    0x140022b70
   140022b84:	test   edx,edx
   140022b86:	jne    0x140022bb2
   140022b88:	test   BYTE PTR [rbp+0x0],0x2
   140022b8c:	je     0x140022b93
   140022b8e:	test   BYTE PTR [rdi],0x8
   140022b91:	je     0x140022bb2
   140022b93:	mov    eax,DWORD PTR [r13+0x0]
   140022b97:	test   al,0x1
   140022b99:	je     0x140022ba0
   140022b9b:	test   BYTE PTR [rdi],0x1
   140022b9e:	je     0x140022bb2
   140022ba0:	test   al,0x4
   140022ba2:	je     0x140022ba9
   140022ba4:	test   BYTE PTR [rdi],0x4
   140022ba7:	je     0x140022bb2
   140022ba9:	test   al,0x2
   140022bab:	je     0x140022c08
   140022bad:	test   BYTE PTR [rdi],0x2
   140022bb0:	jne    0x140022bf4
   140022bb2:	sub    esi,0x1
   140022bb5:	add    r12,0x4
   140022bb9:	test   esi,esi
   140022bbb:	jle    0x140022c1c
   140022bbd:	mov    rbx,QWORD PTR [rsp+0x68]
   140022bc2:	mov    rdi,QWORD PTR [rsp+0x60]
   140022bc7:	jmp    0x140022ab1
   140022bcc:	mov    rbx,QWORD PTR [rsp+0x68]
   140022bd1:	mov    rdi,QWORD PTR [rsp+0x60]
   140022bd6:	mov    bpl,0x1
   140022bd9:	mov    BYTE PTR [rsp+0x70],bpl
   140022bde:	jmp    0x140022c2b
   140022be0:	mov    rbx,QWORD PTR [rsp+0x68]
   140022be5:	mov    rdi,QWORD PTR [rsp+0x60]
   140022bea:	mov    bpl,0x1
   140022bed:	mov    BYTE PTR [rsp+0x70],bpl
   140022bf2:	jmp    0x140022c2b
   140022bf4:	mov    rbx,QWORD PTR [rsp+0x68]
   140022bf9:	mov    rdi,QWORD PTR [rsp+0x60]
   140022bfe:	mov    bpl,0x1
   140022c01:	mov    BYTE PTR [rsp+0x70],bpl
   140022c06:	jmp    0x140022c2b
   140022c08:	mov    rbx,QWORD PTR [rsp+0x68]
   140022c0d:	mov    rdi,QWORD PTR [rsp+0x60]
   140022c12:	mov    bpl,0x1
   140022c15:	mov    BYTE PTR [rsp+0x70],bpl
   140022c1a:	jmp    0x140022c2b
   140022c1c:	mov    rbx,QWORD PTR [rsp+0x68]
   140022c21:	mov    rdi,QWORD PTR [rsp+0x60]
   140022c26:	movzx  ebp,BYTE PTR [rsp+0x70]
   140022c2b:	add    r14d,0x1
   140022c2f:	add    r15,0x14
   140022c33:	cmp    r14d,DWORD PTR [rbx]
   140022c36:	jl     0x140022a80
   140022c3c:	mov    r15,QWORD PTR [rsp+0x20]
   140022c41:	mov    r13,QWORD PTR [rsp+0x30]
   140022c46:	mov    r12,QWORD PTR [rsp+0x38]
   140022c4b:	mov    rsi,QWORD PTR [rsp+0x40]
   140022c50:	mov    r14,QWORD PTR [rsp+0x28]
   140022c55:	mov    al,bpl
   140022c58:	mov    rbp,QWORD PTR [rsp+0x78]
   140022c5d:	add    rsp,0x48
   140022c61:	pop    rdi
   140022c62:	pop    rbx
   140022c63:	ret    
   140022c64:	int3   
   140022c65:	int3   
   140022c66:	int3   
   140022c67:	int3   
   140022c68:	int3   
   140022c69:	int3   
   140022c6a:	int3   
   140022c6b:	int3   
   140022c6c:	int3   
   140022c6d:	int3   
   140022c6e:	int3   
   140022c6f:	int3   
   140022c70:	mov    QWORD PTR [rsp+0x8],rbx
   140022c75:	mov    QWORD PTR [rsp+0x10],rbp
   140022c7a:	mov    QWORD PTR [rsp+0x18],rsi
   140022c7f:	push   rdi
   140022c80:	sub    rsp,0x20
   140022c84:	xor    edi,edi
   140022c86:	mov    rbp,rcx
   140022c89:	cmp    DWORD PTR [rcx],edi
   140022c8b:	jle    0x140022cdf
   140022c8d:	xor    esi,esi
   140022c8f:	nop
   140022c90:	call   0x14001a970
   140022c95:	movsxd rcx,DWORD PTR [rbp+0x4]
   140022c99:	add    rax,rsi
   140022c9c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140022ca1:	je     0x140022cbe
   140022ca3:	call   0x14001a970
   140022ca8:	movsxd rcx,DWORD PTR [rbp+0x4]
   140022cac:	add    rax,rsi
   140022caf:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140022cb4:	call   0x14001a970
   140022cb9:	add    rax,rbx
   140022cbc:	jmp    0x140022cc0
   140022cbe:	xor    eax,eax
   140022cc0:	lea    rdx,[rip+0x1e091]        # 0x140040d58
   140022cc7:	mov    rcx,rax
   140022cca:	call   0x1400193d0
   140022ccf:	test   al,al
   140022cd1:	jne    0x140022cf6
   140022cd3:	add    edi,0x1
   140022cd6:	add    rsi,0x14
   140022cda:	cmp    edi,DWORD PTR [rbp+0x0]
   140022cdd:	jl     0x140022c90
   140022cdf:	xor    al,al
   140022ce1:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ce6:	mov    rbp,QWORD PTR [rsp+0x38]
   140022ceb:	mov    rsi,QWORD PTR [rsp+0x40]
   140022cf0:	add    rsp,0x20
   140022cf4:	pop    rdi
   140022cf5:	ret    
   140022cf6:	mov    al,0x1
   140022cf8:	jmp    0x140022ce1
   140022cfa:	int3   
   140022cfb:	int3   
   140022cfc:	int3   
   140022cfd:	int3   
   140022cfe:	int3   
   140022cff:	int3   
   140022d00:	rex push rbx
   140022d02:	push   rsi
   140022d03:	push   rdi
   140022d04:	push   r12
   140022d06:	push   r13
   140022d08:	push   r14
   140022d0a:	push   r15
   140022d0c:	sub    rsp,0x70
   140022d10:	mov    rdi,rcx
   140022d13:	xor    r12d,r12d
   140022d16:	mov    DWORD PTR [rsp+0x20],r12d
   140022d1b:	mov    DWORD PTR [rsp+0xb0],r12d
   140022d23:	mov    QWORD PTR [rsp+0x40],r12
   140022d28:	mov    QWORD PTR [rsp+0xc8],r12
   140022d30:	call   0x14001d930
   140022d35:	mov    r15,QWORD PTR [rax+0xf8]
   140022d3c:	mov    QWORD PTR [rsp+0x28],r15
   140022d41:	call   0x14001d930
   140022d46:	mov    rax,QWORD PTR [rax+0xf0]
   140022d4d:	mov    QWORD PTR [rsp+0xc0],rax
   140022d55:	mov    rsi,QWORD PTR [rdi+0x50]
   140022d59:	mov    QWORD PTR [rsp+0xb8],rsi
   140022d61:	mov    rax,QWORD PTR [rdi+0x48]
   140022d65:	mov    QWORD PTR [rsp+0x38],rax
   140022d6a:	mov    rbx,QWORD PTR [rdi+0x40]
   140022d6e:	mov    rax,QWORD PTR [rdi+0x30]
   140022d72:	mov    QWORD PTR [rsp+0x48],rax
   140022d77:	mov    r13,QWORD PTR [rdi+0x28]
   140022d7b:	mov    QWORD PTR [rsp+0x50],r13
   140022d80:	call   0x14001d930
   140022d85:	mov    QWORD PTR [rax+0xf0],rsi
   140022d8c:	call   0x14001d930
   140022d91:	mov    QWORD PTR [rax+0xf8],rbx
   140022d98:	call   0x14001d930
   140022d9d:	mov    rdx,QWORD PTR [rax+0xf0]
   140022da4:	mov    rdx,QWORD PTR [rdx+0x28]
   140022da8:	lea    rcx,[rsp+0x60]
   140022dad:	call   0x14001ae70
   140022db2:	mov    r14,rax
   140022db5:	mov    QWORD PTR [rsp+0x30],rax
   140022dba:	cmp    QWORD PTR [rdi+0x58],r12
   140022dbe:	je     0x140022deb
   140022dc0:	mov    DWORD PTR [rsp+0xb0],0x1
   140022dcb:	call   0x14001d930
   140022dd0:	mov    rbx,QWORD PTR [rax+0x138]
   140022dd7:	mov    QWORD PTR [rsp+0xc8],rbx
   140022ddf:	call   0x14001d930
   140022de4:	mov    QWORD PTR [rax+0xf0],rbx
   140022deb:	mov    r8d,0x100
   140022df1:	mov    rdx,r13
   140022df4:	mov    rcx,QWORD PTR [rsp+0x48]
   140022df9:	call   0x1400306d0
   140022dfe:	mov    rbx,rax
   140022e01:	mov    QWORD PTR [rsp+0x40],rax
   140022e06:	mov    rdi,QWORD PTR [rsp+0xc0]
   140022e0e:	jmp    0x140022ea1
   140022e13:	mov    DWORD PTR [rsp+0x20],0x1
   140022e1b:	call   0x14001d930
   140022e20:	xor    r12d,r12d
   140022e23:	mov    DWORD PTR [rax+0x2d0],r12d
   140022e2a:	cmp    DWORD PTR [rsp+0xb0],r12d
   140022e32:	je     0x140022e65
   140022e34:	mov    dl,0x1
   140022e36:	mov    rsi,QWORD PTR [rsp+0xb8]
   140022e3e:	mov    rcx,rsi
   140022e41:	call   0x140022980
   140022e46:	mov    r11,QWORD PTR [rsp+0xc8]
   140022e4e:	lea    r9,[r11+0x20]
   140022e52:	mov    r8d,DWORD PTR [r11+0x18]
   140022e56:	mov    edx,DWORD PTR [r11+0x4]
   140022e5a:	mov    ecx,DWORD PTR [r11]
   140022e5d:	call   QWORD PTR [rip+0xe2dd]        # 0x140031140
   140022e63:	jmp    0x140022e80
   140022e65:	mov    rsi,QWORD PTR [rsp+0xb8]
   140022e6d:	lea    r9,[rsi+0x20]
   140022e71:	mov    r8d,DWORD PTR [rsi+0x18]
   140022e75:	mov    edx,DWORD PTR [rsi+0x4]
   140022e78:	mov    ecx,DWORD PTR [rsi]
   140022e7a:	call   QWORD PTR [rip+0xe2c0]        # 0x140031140
   140022e80:	mov    r12d,DWORD PTR [rsp+0x20]
   140022e85:	mov    rbx,QWORD PTR [rsp+0x40]
   140022e8a:	mov    r15,QWORD PTR [rsp+0x28]
   140022e8f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140022e97:	mov    r13,QWORD PTR [rsp+0x50]
   140022e9c:	mov    r14,QWORD PTR [rsp+0x30]
   140022ea1:	mov    rcx,r14
   140022ea4:	call   0x14001af10
   140022ea9:	test   r12d,r12d
   140022eac:	jne    0x140022eeb
   140022eae:	cmp    DWORD PTR [rsi],0xe06d7363
   140022eb4:	jne    0x140022eeb
   140022eb6:	cmp    DWORD PTR [rsi+0x18],0x4
   140022eba:	jne    0x140022eeb
   140022ebc:	mov    eax,DWORD PTR [rsi+0x20]
   140022ebf:	cmp    eax,0x19930520
   140022ec4:	je     0x140022ed4
   140022ec6:	cmp    eax,0x19930521
   140022ecb:	je     0x140022ed4
   140022ecd:	cmp    eax,0x19930522
   140022ed2:	jne    0x140022eeb
   140022ed4:	mov    rcx,QWORD PTR [rsi+0x28]
   140022ed8:	call   0x14001aec0
   140022edd:	test   eax,eax
   140022edf:	je     0x140022eeb
   140022ee1:	mov    dl,0x1
   140022ee3:	mov    rcx,rsi
   140022ee6:	call   0x140022980
   140022eeb:	call   0x14001d930
   140022ef0:	mov    QWORD PTR [rax+0xf0],rdi
   140022ef7:	call   0x14001d930
   140022efc:	mov    QWORD PTR [rax+0xf8],r15
   140022f03:	mov    rax,QWORD PTR [rsp+0x38]
   140022f08:	movsxd rcx,DWORD PTR [rax+0x1c]
   140022f0c:	mov    rax,QWORD PTR [r13+0x0]
   140022f10:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140022f18:	mov    rax,rbx
   140022f1b:	add    rsp,0x70
   140022f1f:	pop    r15
   140022f21:	pop    r14
   140022f23:	pop    r13
   140022f25:	pop    r12
   140022f27:	pop    rdi
   140022f28:	pop    rsi
   140022f29:	pop    rbx
   140022f2a:	ret    
   140022f2b:	int3   
   140022f2c:	int3   
   140022f2d:	int3   
   140022f2e:	int3   
   140022f2f:	int3   
   140022f30:	rex push rbp
   140022f32:	sub    rsp,0x20
   140022f36:	mov    rbp,rdx
   140022f39:	mov    QWORD PTR [rbp+0x58],rcx
   140022f3d:	lea    r8,[rbp+0x20]
   140022f41:	mov    rdx,QWORD PTR [rbp+0xb8]
   140022f48:	call   0x1400228d0
   140022f4d:	add    rsp,0x20
   140022f51:	pop    rbp
   140022f52:	ret    
   140022f53:	int3   
   140022f54:	int3   
   140022f55:	int3   
   140022f56:	int3   
   140022f57:	int3   
   140022f58:	int3   
   140022f59:	int3   
   140022f5a:	int3   
   140022f5b:	int3   
   140022f5c:	int3   
   140022f5d:	int3   
   140022f5e:	int3   
   140022f5f:	int3   
   140022f60:	rex push rbx
   140022f62:	push   rbp
   140022f63:	sub    rsp,0x28
   140022f67:	mov    rbp,rdx
   140022f6a:	mov    rcx,QWORD PTR [rbp+0x30]
   140022f6e:	call   0x14001af10
   140022f73:	cmp    DWORD PTR [rbp+0x20],0x0
   140022f77:	jne    0x140022fbd
   140022f79:	mov    rbx,QWORD PTR [rbp+0xb8]
   140022f80:	cmp    DWORD PTR [rbx],0xe06d7363
   140022f86:	jne    0x140022fbd
   140022f88:	cmp    DWORD PTR [rbx+0x18],0x4
   140022f8c:	jne    0x140022fbd
   140022f8e:	mov    eax,DWORD PTR [rbx+0x20]
   140022f91:	cmp    eax,0x19930520
   140022f96:	je     0x140022fa6
   140022f98:	cmp    eax,0x19930521
   140022f9d:	je     0x140022fa6
   140022f9f:	cmp    eax,0x19930522
   140022fa4:	jne    0x140022fbd
   140022fa6:	mov    rcx,QWORD PTR [rbx+0x28]
   140022faa:	call   0x14001aec0
   140022faf:	test   eax,eax
   140022fb1:	je     0x140022fbd
   140022fb3:	mov    dl,0x1
   140022fb5:	mov    rcx,rbx
   140022fb8:	call   0x140022980
   140022fbd:	call   0x14001d930
   140022fc2:	mov    rcx,QWORD PTR [rbp+0xc0]
   140022fc9:	mov    QWORD PTR [rax+0xf0],rcx
   140022fd0:	call   0x14001d930
   140022fd5:	mov    rcx,QWORD PTR [rbp+0x28]
   140022fd9:	mov    QWORD PTR [rax+0xf8],rcx
   140022fe0:	add    rsp,0x28
   140022fe4:	pop    rbp
   140022fe5:	pop    rbx
   140022fe6:	ret    
   140022fe7:	int3   
   140022fe8:	int3   
   140022fe9:	int3   
   140022fea:	int3   
   140022feb:	int3   
   140022fec:	int3   
   140022fed:	int3   
   140022fee:	int3   
   140022fef:	int3   
   140022ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140022ff5:	mov    QWORD PTR [rsp+0x10],rsi
   140022ffa:	mov    QWORD PTR [rsp+0x18],rdi
   140022fff:	push   r12
   140023001:	push   r13
   140023003:	push   r14
   140023005:	sub    rsp,0x30
   140023009:	mov    rdi,r9
   14002300c:	mov    r12,r8
   14002300f:	mov    rsi,rdx
   140023012:	mov    r14,rcx
   140023015:	xor    ebx,ebx
   140023017:	cmp    DWORD PTR [r8+0x4],ebx
   14002301b:	je     0x1400231fb
   140023021:	movsxd r13,DWORD PTR [r8+0x4]
   140023025:	call   0x14001a970
   14002302a:	lea    rdx,[r13+rax*1+0x0]
   14002302f:	test   rdx,rdx
   140023032:	je     0x1400231fb
   140023038:	test   r13d,r13d
   14002303b:	je     0x14002304f
   14002303d:	call   0x14001a970
   140023042:	mov    r11,rax
   140023045:	movsxd rax,DWORD PTR [r12+0x4]
   14002304a:	add    r11,rax
   14002304d:	jmp    0x140023052
   14002304f:	mov    r11,rbx
   140023052:	cmp    BYTE PTR [r11+0x10],bl
   140023056:	je     0x1400231fb
   14002305c:	movsxd rax,DWORD PTR [r12+0x8]
   140023061:	test   eax,eax
   140023063:	jne    0x140023071
   140023065:	bt     DWORD PTR [r12],0x1f
   14002306b:	jae    0x1400231fb
   140023071:	mov    ecx,DWORD PTR [r12]
   140023075:	bt     ecx,0x1f
   140023079:	jb     0x140023081
   14002307b:	add    rax,QWORD PTR [rsi]
   14002307e:	mov    rsi,rax
   140023081:	test   cl,0x8
   140023084:	je     0x1400230cb
   140023086:	mov    edx,0x1
   14002308b:	mov    rcx,QWORD PTR [r14+0x28]
   14002308f:	call   0x140029d80
   140023094:	test   eax,eax
   140023096:	je     0x1400230c1
   140023098:	mov    edx,0x1
   14002309d:	mov    rcx,rsi
   1400230a0:	call   0x140029d80
   1400230a5:	test   eax,eax
   1400230a7:	je     0x1400230c1
   1400230a9:	mov    rcx,QWORD PTR [r14+0x28]
   1400230ad:	mov    QWORD PTR [rsi],rcx
   1400230b0:	lea    rdx,[rdi+0x8]
   1400230b4:	call   0x1400229f0
   1400230b9:	mov    QWORD PTR [rsi],rax
   1400230bc:	jmp    0x1400231f1
   1400230c1:	call   0x140021d00
   1400230c6:	jmp    0x1400231f1
   1400230cb:	test   BYTE PTR [rdi],0x1
   1400230ce:	je     0x140023134
   1400230d0:	mov    edx,0x1
   1400230d5:	mov    rcx,QWORD PTR [r14+0x28]
   1400230d9:	call   0x140029d80
   1400230de:	test   eax,eax
   1400230e0:	je     0x14002312a
   1400230e2:	mov    edx,0x1
   1400230e7:	mov    rcx,rsi
   1400230ea:	call   0x140029d80
   1400230ef:	test   eax,eax
   1400230f1:	je     0x14002312a
   1400230f3:	movsxd r8,DWORD PTR [rdi+0x14]
   1400230f7:	mov    rdx,QWORD PTR [r14+0x28]
   1400230fb:	mov    rcx,rsi
   1400230fe:	call   0x14001baf0
   140023103:	cmp    DWORD PTR [rdi+0x14],0x8
   140023107:	jne    0x1400231f1
   14002310d:	mov    rcx,QWORD PTR [rsi]
   140023110:	test   rcx,rcx
   140023113:	je     0x1400231f1
   140023119:	lea    rdx,[rdi+0x8]
   14002311d:	call   0x1400229f0
   140023122:	mov    QWORD PTR [rsi],rax
   140023125:	jmp    0x1400231f1
   14002312a:	call   0x140021d00
   14002312f:	jmp    0x1400231f1
   140023134:	cmp    DWORD PTR [rdi+0x18],0x0
   140023138:	je     0x1400231a7
   14002313a:	call   0x14001a990
   14002313f:	mov    rdx,rax
   140023142:	movsxd rax,DWORD PTR [rdi+0x18]
   140023146:	add    rdx,rax
   140023149:	je     0x1400231a7
   14002314b:	mov    edx,0x1
   140023150:	mov    rcx,QWORD PTR [r14+0x28]
   140023154:	call   0x140029d80
   140023159:	test   eax,eax
   14002315b:	je     0x1400231a0
   14002315d:	mov    edx,0x1
   140023162:	mov    rcx,rsi
   140023165:	call   0x140029d80
   14002316a:	test   eax,eax
   14002316c:	je     0x1400231a0
   14002316e:	cmp    DWORD PTR [rdi+0x18],0x0
   140023172:	je     0x140023185
   140023174:	call   0x14001a990
   140023179:	mov    rcx,rax
   14002317c:	movsxd rax,DWORD PTR [rdi+0x18]
   140023180:	add    rcx,rax
   140023183:	jmp    0x140023188
   140023185:	mov    rcx,rbx
   140023188:	call   0x140029d80
   14002318d:	test   eax,eax
   14002318f:	je     0x1400231a0
   140023191:	test   BYTE PTR [rdi],0x4
   140023194:	setne  bl
   140023197:	add    ebx,0x1
   14002319a:	mov    DWORD PTR [rsp+0x20],ebx
   14002319e:	jmp    0x1400231f1
   1400231a0:	call   0x140021d00
   1400231a5:	jmp    0x1400231f1
   1400231a7:	mov    edx,0x1
   1400231ac:	mov    rcx,QWORD PTR [r14+0x28]
   1400231b0:	call   0x140029d80
   1400231b5:	test   eax,eax
   1400231b7:	je     0x1400231eb
   1400231b9:	mov    edx,0x1
   1400231be:	mov    rcx,rsi
   1400231c1:	call   0x140029d80
   1400231c6:	test   eax,eax
   1400231c8:	je     0x1400231eb
   1400231ca:	movsxd r10,DWORD PTR [rdi+0x14]
   1400231ce:	lea    rdx,[rdi+0x8]
   1400231d2:	mov    rcx,QWORD PTR [r14+0x28]
   1400231d6:	call   0x1400229f0
   1400231db:	mov    rdx,rax
   1400231de:	mov    r8,r10
   1400231e1:	mov    rcx,rsi
   1400231e4:	call   0x14001baf0
   1400231e9:	jmp    0x1400231f1
   1400231eb:	call   0x140021d00
   1400231f0:	nop
   1400231f1:	mov    eax,ebx
   1400231f3:	jmp    0x1400231fd
   1400231f5:	call   0x140021cd0
   1400231fa:	nop
   1400231fb:	xor    eax,eax
   1400231fd:	mov    rbx,QWORD PTR [rsp+0x50]
   140023202:	mov    rsi,QWORD PTR [rsp+0x58]
   140023207:	mov    rdi,QWORD PTR [rsp+0x60]
   14002320c:	add    rsp,0x30
   140023210:	pop    r14
   140023212:	pop    r13
   140023214:	pop    r12
   140023216:	ret    
   140023217:	int3   
   140023218:	int3   
   140023219:	int3   
   14002321a:	int3   
   14002321b:	int3   
   14002321c:	int3   
   14002321d:	int3   
   14002321e:	int3   
   14002321f:	int3   
   140023220:	mov    QWORD PTR [rsp+0x8],rbx
   140023225:	mov    QWORD PTR [rsp+0x10],rsi
   14002322a:	push   rdi
   14002322b:	sub    rsp,0x20
   14002322f:	mov    rbx,r9
   140023232:	mov    rsi,rcx
   140023235:	bt     DWORD PTR [r8],0x1f
   14002323a:	jae    0x140023241
   14002323c:	mov    rdi,rdx
   14002323f:	jmp    0x140023248
   140023241:	movsxd rdi,DWORD PTR [r8+0x8]
   140023245:	add    rdi,QWORD PTR [rdx]
   140023248:	call   0x140022ff0
   14002324d:	sub    eax,0x1
   140023250:	je     0x14002328f
   140023252:	cmp    eax,0x1
   140023255:	jne    0x1400232bc
   140023257:	cmp    DWORD PTR [rbx+0x18],0x0
   14002325b:	je     0x14002326e
   14002325d:	call   0x14001a990
   140023262:	mov    r11,rax
   140023265:	movsxd rax,DWORD PTR [rbx+0x18]
   140023269:	add    r11,rax
   14002326c:	jmp    0x140023271
   14002326e:	xor    r11d,r11d
   140023271:	lea    rdx,[rbx+0x8]
   140023275:	mov    rcx,QWORD PTR [rsi+0x28]
   140023279:	call   0x1400229f0
   14002327e:	mov    rdx,rax
   140023281:	mov    r8d,0x1
   140023287:	mov    rcx,rdi
   14002328a:	call   r11
   14002328d:	jmp    0x1400232bc
   14002328f:	cmp    DWORD PTR [rbx+0x18],0x0
   140023293:	je     0x1400232a3
   140023295:	call   0x14001a990
   14002329a:	movsxd r11,DWORD PTR [rbx+0x18]
   14002329e:	add    r11,rax
   1400232a1:	jmp    0x1400232a6
   1400232a3:	xor    r11d,r11d
   1400232a6:	lea    rdx,[rbx+0x8]
   1400232aa:	mov    rcx,QWORD PTR [rsi+0x28]
   1400232ae:	call   0x1400229f0
   1400232b3:	mov    rdx,rax
   1400232b6:	mov    rcx,rdi
   1400232b9:	call   r11
   1400232bc:	jmp    0x1400232c4
   1400232be:	call   0x140021cd0
   1400232c3:	nop
   1400232c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232c9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400232ce:	add    rsp,0x20
   1400232d2:	pop    rdi
   1400232d3:	ret    
   1400232d4:	int3   
   1400232d5:	int3   
   1400232d6:	int3   
   1400232d7:	int3   
   1400232d8:	int3   
   1400232d9:	int3   
   1400232da:	int3   
   1400232db:	int3   
   1400232dc:	int3   
   1400232dd:	int3   
   1400232de:	int3   
   1400232df:	int3   
   1400232e0:	mov    rax,rsp
   1400232e3:	mov    QWORD PTR [rax+0x18],r8
   1400232e7:	push   rsi
   1400232e8:	push   r12
   1400232ea:	push   r14
   1400232ec:	push   r15
   1400232ee:	sub    rsp,0x78
   1400232f2:	cmp    DWORD PTR [rcx],0x80000003
   1400232f8:	mov    r14,r9
   1400232fb:	mov    rsi,r8
   1400232fe:	mov    r15,rdx
   140023301:	mov    r12,rcx
   140023304:	je     0x14002354b
   14002330a:	mov    QWORD PTR [rax+0x10],rbx
   14002330e:	mov    QWORD PTR [rax-0x30],rdi
   140023312:	mov    QWORD PTR [rax-0x38],r13
   140023316:	call   0x14001d930
   14002331b:	mov    edi,DWORD PTR [rsp+0xd0]
   140023322:	mov    r13,QWORD PTR [rsp+0xc0]
   14002332a:	cmp    QWORD PTR [rax+0xe0],0x0
   140023332:	je     0x140023383
   140023334:	call   0x14001d930
   140023339:	mov    rbx,rax
   14002333c:	call   0x14001d550
   140023341:	cmp    QWORD PTR [rbx+0xe0],rax
   140023348:	je     0x140023383
   14002334a:	cmp    DWORD PTR [r12],0xe0434f4d
   140023352:	je     0x140023383
   140023354:	mov    rax,QWORD PTR [rsp+0xd8]
   14002335c:	mov    r9,r14
   14002335f:	mov    r8,rsi
   140023362:	mov    QWORD PTR [rsp+0x30],rax
   140023367:	mov    rdx,r15
   14002336a:	mov    rcx,r12
   14002336d:	mov    DWORD PTR [rsp+0x28],edi
   140023371:	mov    QWORD PTR [rsp+0x20],r13
   140023376:	call   0x14001ac80
   14002337b:	test   eax,eax
   14002337d:	jne    0x140023539
   140023383:	cmp    DWORD PTR [r13+0xc],0x0
   140023388:	mov    QWORD PTR [rsp+0x70],rbp
   14002338d:	jne    0x140023394
   14002338f:	call   0x140021d00
   140023394:	mov    ebp,DWORD PTR [rsp+0xc8]
   14002339b:	lea    rax,[rsp+0x50]
   1400233a0:	mov    QWORD PTR [rsp+0x30],r14
   1400233a5:	mov    QWORD PTR [rsp+0x28],rax
   1400233aa:	lea    rax,[rsp+0xa0]
   1400233b2:	mov    r8d,edi
   1400233b5:	mov    r9d,ebp
   1400233b8:	mov    rdx,r13
   1400233bb:	mov    rcx,r15
   1400233be:	mov    QWORD PTR [rsp+0x20],rax
   1400233c3:	call   0x14001ad30
   1400233c8:	mov    rsi,rax
   1400233cb:	mov    eax,DWORD PTR [rsp+0xa0]
   1400233d2:	cmp    eax,DWORD PTR [rsp+0x50]
   1400233d6:	jae    0x140023534
   1400233dc:	data16 data16 xchg ax,ax
   1400233e0:	cmp    ebp,DWORD PTR [rsi]
   1400233e2:	jl     0x14002351c
   1400233e8:	cmp    ebp,DWORD PTR [rsi+0x4]
   1400233eb:	jg     0x14002351c
   1400233f1:	call   0x14001a970
   1400233f6:	movsxd rcx,DWORD PTR [rsi+0xc]
   1400233fa:	lea    rdx,[rcx+rcx*4]
   1400233fe:	movsxd rcx,DWORD PTR [rsi+0x10]
   140023402:	lea    rdx,[rcx+rdx*4]
   140023406:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14002340b:	je     0x140023481
   14002340d:	call   0x14001a970
   140023412:	movsxd rcx,DWORD PTR [rsi+0xc]
   140023416:	lea    rdx,[rcx+rcx*4]
   14002341a:	movsxd rcx,DWORD PTR [rsi+0x10]
   14002341e:	lea    rdx,[rcx+rdx*4]
   140023422:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140023427:	call   0x14001a970
   14002342c:	lea    rcx,[rax+rbx*1]
   140023430:	test   rcx,rcx
   140023433:	je     0x140023481
   140023435:	call   0x14001a970
   14002343a:	movsxd rcx,DWORD PTR [rsi+0xc]
   14002343e:	lea    rdx,[rcx+rcx*4]
   140023442:	movsxd rcx,DWORD PTR [rsi+0x10]
   140023446:	lea    rdx,[rcx+rdx*4]
   14002344a:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14002344f:	je     0x140023475
   140023451:	call   0x14001a970
   140023456:	movsxd rcx,DWORD PTR [rsi+0xc]
   14002345a:	lea    rdx,[rcx+rcx*4]
   14002345e:	movsxd rcx,DWORD PTR [rsi+0x10]
   140023462:	lea    rdx,[rcx+rdx*4]
   140023466:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14002346b:	call   0x14001a970
   140023470:	add    rax,rbx
   140023473:	jmp    0x140023477
   140023475:	xor    eax,eax
   140023477:	cmp    BYTE PTR [rax+0x10],0x0
   14002347b:	jne    0x140023515
   140023481:	call   0x14001a970
   140023486:	movsxd rcx,DWORD PTR [rsi+0xc]
   14002348a:	lea    rdx,[rcx+rcx*4]
   14002348e:	movsxd rcx,DWORD PTR [rsi+0x10]
   140023492:	lea    rdx,[rcx+rdx*4]
   140023496:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14002349b:	jne    0x140023515
   14002349d:	call   0x14001a970
   1400234a2:	mov    ecx,DWORD PTR [rsi+0xc]
   1400234a5:	lea    r9,[rsp+0x58]
   1400234aa:	sub    ecx,0x1
   1400234ad:	mov    r8,r13
   1400234b0:	movsxd rcx,ecx
   1400234b3:	lea    rdx,[rcx+rcx*4]
   1400234b7:	mov    rcx,r15
   1400234ba:	lea    rdi,[rax+rdx*4]
   1400234be:	movsxd rax,DWORD PTR [rsi+0x10]
   1400234c2:	mov    rdx,r14
   1400234c5:	add    rdi,rax
   1400234c8:	call   0x14001a860
   1400234cd:	mov    rbx,rax
   1400234d0:	call   0x14001a970
   1400234d5:	movsxd rcx,DWORD PTR [rdi+0xc]
   1400234d9:	mov    r8,QWORD PTR [rsp+0xb0]
   1400234e1:	add    rax,rcx
   1400234e4:	mov    ecx,DWORD PTR [rsi]
   1400234e6:	mov    BYTE PTR [rsp+0x40],0x0
   1400234eb:	mov    QWORD PTR [rsp+0x38],r14
   1400234f0:	mov    QWORD PTR [rsp+0x30],r13
   1400234f5:	mov    DWORD PTR [rsp+0x28],ecx
   1400234f9:	mov    r9,rbx
   1400234fc:	mov    rdx,r12
   1400234ff:	mov    rcx,r15
   140023502:	mov    QWORD PTR [rsp+0x20],rax
   140023507:	call   0x14001af80
   14002350c:	mov    eax,DWORD PTR [rsp+0xa0]
   140023513:	jmp    0x14002351c
   140023515:	mov    eax,DWORD PTR [rsp+0xa0]
   14002351c:	add    eax,0x1
   14002351f:	add    rsi,0x14
   140023523:	cmp    eax,DWORD PTR [rsp+0x50]
   140023527:	mov    DWORD PTR [rsp+0xa0],eax
   14002352e:	jb     0x1400233e0
   140023534:	mov    rbp,QWORD PTR [rsp+0x70]
   140023539:	mov    rdi,QWORD PTR [rsp+0x68]
   14002353e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140023546:	mov    r13,QWORD PTR [rsp+0x60]
   14002354b:	add    rsp,0x78
   14002354f:	pop    r15
   140023551:	pop    r14
   140023553:	pop    r12
   140023555:	pop    rsi
   140023556:	ret    
   140023557:	int3   
   140023558:	int3   
   140023559:	int3   
   14002355a:	int3   
   14002355b:	int3   
   14002355c:	int3   
   14002355d:	int3   
   14002355e:	int3   
   14002355f:	int3   
   140023560:	mov    QWORD PTR [rsp+0x20],r9
   140023565:	mov    QWORD PTR [rsp+0x18],r8
   14002356a:	mov    QWORD PTR [rsp+0x10],rdx
   14002356f:	push   rbx
   140023570:	push   rbp
   140023571:	push   rdi
   140023572:	push   r12
   140023574:	push   r13
   140023576:	push   r14
   140023578:	push   r15
   14002357a:	sub    rsp,0x570
   140023581:	mov    rbp,QWORD PTR [rsp+0x5d0]
   140023589:	mov    r13,rdx
   14002358c:	mov    r14,rcx
   14002358f:	xor    r15b,r15b
   140023592:	mov    rdx,r9
   140023595:	mov    rcx,rbp
   140023598:	mov    r12,r9
   14002359b:	mov    rbx,r8
   14002359e:	mov    BYTE PTR [rsp+0x5b0],r15b
   1400235a6:	call   0x140022490
   1400235ab:	lea    r9,[rsp+0x68]
   1400235b0:	mov    r8,rbp
   1400235b3:	mov    rdx,r12
   1400235b6:	mov    rcx,r13
   1400235b9:	mov    edi,eax
   1400235bb:	mov    DWORD PTR [rsp+0x58],eax
   1400235bf:	call   0x14001a860
   1400235c4:	mov    r8,rbp
   1400235c7:	mov    rdx,r12
   1400235ca:	mov    rcx,r13
   1400235cd:	call   0x140022610
   1400235d2:	cmp    edi,eax
   1400235d4:	jle    0x1400235fc
   1400235d6:	lea    rcx,[rsp+0x68]
   1400235db:	mov    r9d,edi
   1400235de:	mov    r8,rbp
   1400235e1:	mov    rdx,r12
   1400235e4:	call   0x1400225c0
   1400235e9:	mov    r9d,edi
   1400235ec:	mov    r8,rbp
   1400235ef:	mov    rdx,r12
   1400235f2:	mov    rcx,r13
   1400235f5:	call   0x1400225d0
   1400235fa:	jmp    0x140023610
   1400235fc:	mov    r8,rbp
   1400235ff:	mov    rdx,r12
   140023602:	mov    rcx,r13
   140023605:	call   0x140022610
   14002360a:	mov    edi,eax
   14002360c:	mov    DWORD PTR [rsp+0x58],eax
   140023610:	cmp    edi,0xffffffff
   140023613:	jl     0x14002361a
   140023615:	cmp    edi,DWORD PTR [rbp+0x4]
   140023618:	jl     0x14002361f
   14002361a:	call   0x140021d00
   14002361f:	cmp    DWORD PTR [r14],0xe06d7363
   140023626:	jne    0x140023787
   14002362c:	cmp    DWORD PTR [r14+0x18],0x4
   140023631:	jne    0x140023787
   140023637:	mov    eax,DWORD PTR [r14+0x20]
   14002363b:	cmp    eax,0x19930520
   140023640:	je     0x140023654
   140023642:	cmp    eax,0x19930521
   140023647:	je     0x140023654
   140023649:	cmp    eax,0x19930522
   14002364e:	jne    0x140023787
   140023654:	cmp    QWORD PTR [r14+0x30],0x0
   140023659:	jne    0x140023787
   14002365f:	call   0x14001d930
   140023664:	cmp    QWORD PTR [rax+0xf0],0x0
   14002366c:	je     0x140023b46
   140023672:	call   0x14001d930
   140023677:	mov    r14,QWORD PTR [rax+0xf0]
   14002367e:	call   0x14001d930
   140023683:	mov    rcx,QWORD PTR [r14+0x38]
   140023687:	mov    rbx,QWORD PTR [rax+0xf8]
   14002368e:	mov    QWORD PTR [rsp+0x5c0],rbx
   140023696:	call   0x14001a9d0
   14002369b:	mov    edx,0x1
   1400236a0:	mov    rcx,r14
   1400236a3:	call   0x140029d80
   1400236a8:	test   eax,eax
   1400236aa:	jne    0x1400236b1
   1400236ac:	call   0x140021d00
   1400236b1:	cmp    DWORD PTR [r14],0xe06d7363
   1400236b8:	jne    0x1400236e6
   1400236ba:	cmp    DWORD PTR [r14+0x18],0x4
   1400236bf:	jne    0x1400236e6
   1400236c1:	mov    eax,DWORD PTR [r14+0x20]
   1400236c5:	cmp    eax,0x19930520
   1400236ca:	je     0x1400236da
   1400236cc:	cmp    eax,0x19930521
   1400236d1:	je     0x1400236da
   1400236d3:	cmp    eax,0x19930522
   1400236d8:	jne    0x1400236e6
   1400236da:	cmp    QWORD PTR [r14+0x30],0x0
   1400236df:	jne    0x1400236e6
   1400236e1:	call   0x140021d00
   1400236e6:	call   0x14001d930
   1400236eb:	cmp    QWORD PTR [rax+0x108],0x0
   1400236f3:	je     0x140023787
   1400236f9:	call   0x14001d930
   1400236fe:	mov    rbx,QWORD PTR [rax+0x108]
   140023705:	call   0x14001d930
   14002370a:	mov    rdx,rbx
   14002370d:	mov    rcx,r14
   140023710:	mov    QWORD PTR [rax+0x108],0x0
   14002371b:	call   0x140022a20
   140023720:	test   al,al
   140023722:	jne    0x14002377f
   140023724:	mov    rcx,rbx
   140023727:	call   0x140022c70
   14002372c:	test   al,al
   14002372e:	je     0x140023779
   140023730:	mov    dl,0x1
   140023732:	mov    rcx,r14
   140023735:	call   0x140022980
   14002373a:	lea    r11,[rip+0x11aaf]        # 0x1400351f0
   140023741:	lea    rdx,[rsp+0x5b0]
   140023749:	lea    rcx,[rsp+0x78]
   14002374e:	mov    QWORD PTR [rsp+0x5b0],r11
   140023756:	call   0x140029b90
   14002375b:	lea    r11,[rip+0x11a7e]        # 0x1400351e0
   140023762:	lea    rdx,[rip+0x1991f]        # 0x14003d088
   140023769:	lea    rcx,[rsp+0x78]
   14002376e:	mov    QWORD PTR [rsp+0x78],r11
   140023773:	call   0x14001b070
   140023778:	int3   
   140023779:	call   0x140021cd0
   14002377e:	int3   
   14002377f:	mov    rbx,QWORD PTR [rsp+0x5c0]
   140023787:	cmp    DWORD PTR [r14],0xe06d7363
   14002378e:	jne    0x140023b59
   140023794:	cmp    DWORD PTR [r14+0x18],0x4
   140023799:	jne    0x140023b59
   14002379f:	mov    eax,DWORD PTR [r14+0x20]
   1400237a3:	cmp    eax,0x19930520
   1400237a8:	je     0x1400237bc
   1400237aa:	cmp    eax,0x19930521
   1400237af:	je     0x1400237bc
   1400237b1:	cmp    eax,0x19930522
   1400237b6:	jne    0x140023b59
   1400237bc:	cmp    DWORD PTR [rbp+0xc],0x0
   1400237c0:	jbe    0x140023a77
   1400237c6:	mov    r8d,DWORD PTR [rsp+0x5e0]
   1400237ce:	lea    rax,[rsp+0x54]
   1400237d3:	mov    QWORD PTR [rsp+0x30],r12
   1400237d8:	mov    QWORD PTR [rsp+0x28],rax
   1400237dd:	lea    rax,[rsp+0x50]
   1400237e2:	mov    r9d,edi
   1400237e5:	mov    rdx,rbp
   1400237e8:	mov    rcx,r13
   1400237eb:	mov    QWORD PTR [rsp+0x20],rax
   1400237f0:	call   0x14001ad30
   1400237f5:	mov    ecx,DWORD PTR [rsp+0x50]
   1400237f9:	mov    edx,DWORD PTR [rsp+0x54]
   1400237fd:	cmp    ecx,edx
   1400237ff:	mov    rbx,rax
   140023802:	mov    QWORD PTR [rsp+0x60],rax
   140023807:	jae    0x140023a77
   14002380d:	mov    QWORD PTR [rsp+0x568],rsi
   140023815:	cmp    DWORD PTR [rbx],edi
   140023817:	jg     0x140023a4e
   14002381d:	cmp    edi,DWORD PTR [rbx+0x4]
   140023820:	jg     0x140023a4e
   140023826:	call   0x14001a970
   14002382b:	movsxd rdi,DWORD PTR [rbx+0x10]
   14002382f:	mov    r15d,DWORD PTR [rbx+0xc]
   140023833:	add    rdi,rax
   140023836:	test   r15d,r15d
   140023839:	jle    0x140023a3a
   14002383f:	nop
   140023840:	call   0x14001a990
   140023845:	mov    rcx,QWORD PTR [r14+0x30]
   140023849:	movsxd rdx,DWORD PTR [rcx+0xc]
   14002384d:	lea    r13,[rax+rdx*1+0x4]
   140023852:	call   0x14001a990
   140023857:	mov    rcx,QWORD PTR [r14+0x30]
   14002385b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14002385f:	mov    ebp,DWORD PTR [rax+rdx*1]
   140023862:	test   ebp,ebp
   140023864:	jle    0x140023960
   14002386a:	data16 xchg ax,ax
   14002386d:	data16 xchg ax,ax
   140023870:	call   0x14001a990
   140023875:	mov    r12,QWORD PTR [r14+0x30]
   140023879:	mov    rsi,rax
   14002387c:	movsxd rax,DWORD PTR [r13+0x0]
   140023880:	add    rsi,rax
   140023883:	cmp    DWORD PTR [rdi+0x4],0x0
   140023887:	je     0x14002399c
   14002388d:	movsxd rbx,DWORD PTR [rdi+0x4]
   140023891:	call   0x14001a970
   140023896:	add    rax,rbx
   140023899:	je     0x14002399c
   14002389f:	test   ebx,ebx
   1400238a1:	je     0x1400238b1
   1400238a3:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400238a7:	call   0x14001a970
   1400238ac:	add    rax,rbx
   1400238af:	jmp    0x1400238b3
   1400238b1:	xor    eax,eax
   1400238b3:	cmp    BYTE PTR [rax+0x10],0x0
   1400238b7:	je     0x14002399c
   1400238bd:	test   ebx,ebx
   1400238bf:	je     0x1400238cf
   1400238c1:	call   0x14001a970
   1400238c6:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400238ca:	add    rbx,rax
   1400238cd:	jmp    0x1400238d1
   1400238cf:	xor    ebx,ebx
   1400238d1:	call   0x14001a990
   1400238d6:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400238da:	add    rax,rcx
   1400238dd:	cmp    rbx,rax
   1400238e0:	je     0x140023928
   1400238e2:	cmp    DWORD PTR [rdi+0x4],0x0
   1400238e6:	je     0x1400238f6
   1400238e8:	call   0x14001a970
   1400238ed:	movsxd rbx,DWORD PTR [rdi+0x4]
   1400238f1:	add    rbx,rax
   1400238f4:	jmp    0x1400238f8
   1400238f6:	xor    ebx,ebx
   1400238f8:	call   0x14001a990
   1400238fd:	movsxd rcx,DWORD PTR [rsi+0x4]
   140023901:	lea    r8,[rax+rcx*1+0x10]
   140023906:	lea    rcx,[rbx+0x10]
   14002390a:	sub    r8,rcx
   14002390d:	data16 xchg ax,ax
   140023910:	movzx  edx,BYTE PTR [rcx]
   140023913:	movzx  eax,BYTE PTR [rcx+r8*1]
   140023918:	sub    edx,eax
   14002391a:	jne    0x140023924
   14002391c:	add    rcx,0x1
   140023920:	test   eax,eax
   140023922:	jne    0x140023910
   140023924:	test   edx,edx
   140023926:	jne    0x140023951
   140023928:	test   BYTE PTR [rsi],0x2
   14002392b:	je     0x140023932
   14002392d:	test   BYTE PTR [rdi],0x8
   140023930:	je     0x140023951
   140023932:	mov    eax,DWORD PTR [r12]
   140023936:	test   al,0x1
   140023938:	je     0x14002393f
   14002393a:	test   BYTE PTR [rdi],0x1
   14002393d:	je     0x140023951
   14002393f:	test   al,0x4
   140023941:	je     0x140023948
   140023943:	test   BYTE PTR [rdi],0x4
   140023946:	je     0x140023951
   140023948:	test   al,0x2
   14002394a:	je     0x14002399c
   14002394c:	test   BYTE PTR [rdi],0x2
   14002394f:	jne    0x14002399c
   140023951:	sub    ebp,0x1
   140023954:	add    r13,0x4
   140023958:	test   ebp,ebp
   14002395a:	jg     0x140023870
   140023960:	sub    r15d,0x1
   140023964:	add    rdi,0x14
   140023968:	test   r15d,r15d
   14002396b:	jg     0x140023840
   140023971:	mov    rbx,QWORD PTR [rsp+0x60]
   140023976:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14002397e:	mov    r12,QWORD PTR [rsp+0x5c8]
   140023986:	mov    r13,QWORD PTR [rsp+0x5b8]
   14002398e:	movzx  r15d,BYTE PTR [rsp+0x5b0]
   140023997:	jmp    0x140023a42
   14002399c:	mov    rbp,QWORD PTR [rsp+0x5d0]
   1400239a4:	mov    r12,QWORD PTR [rsp+0x5c8]
   1400239ac:	mov    r13,QWORD PTR [rsp+0x5b8]
   1400239b4:	lea    r9,[rsp+0x70]
   1400239b9:	mov    r15b,0x1
   1400239bc:	mov    r8,rbp
   1400239bf:	mov    rdx,r12
   1400239c2:	mov    rcx,r13
   1400239c5:	mov    BYTE PTR [rsp+0x5b0],r15b
   1400239cd:	call   0x14001a860
   1400239d2:	test   rsi,rsi
   1400239d5:	mov    rbx,rax
   1400239d8:	je     0x1400239eb
   1400239da:	mov    r9,rsi
   1400239dd:	mov    r8,rdi
   1400239e0:	mov    rdx,rax
   1400239e3:	mov    rcx,r14
   1400239e6:	call   0x140023220
   1400239eb:	call   0x14001a970
   1400239f0:	movsxd rcx,DWORD PTR [rdi+0xc]
   1400239f4:	mov    r8,QWORD PTR [rsp+0x5c0]
   1400239fc:	add    rax,rcx
   1400239ff:	movzx  ecx,BYTE PTR [rsp+0x5d8]
   140023a07:	mov    r9,rbx
   140023a0a:	mov    BYTE PTR [rsp+0x40],cl
   140023a0e:	mov    rcx,QWORD PTR [rsp+0x60]
   140023a13:	mov    QWORD PTR [rsp+0x38],r12
   140023a18:	mov    ecx,DWORD PTR [rcx]
   140023a1a:	mov    QWORD PTR [rsp+0x30],rbp
   140023a1f:	mov    rdx,r14
   140023a22:	mov    DWORD PTR [rsp+0x28],ecx
   140023a26:	mov    rcx,r13
   140023a29:	mov    QWORD PTR [rsp+0x20],rax
   140023a2e:	call   0x14001af80
   140023a33:	mov    rbx,QWORD PTR [rsp+0x60]
   140023a38:	jmp    0x140023a42
   140023a3a:	mov    r15b,BYTE PTR [rsp+0x5b0]
   140023a42:	mov    edx,DWORD PTR [rsp+0x54]
   140023a46:	mov    ecx,DWORD PTR [rsp+0x50]
   140023a4a:	mov    edi,DWORD PTR [rsp+0x58]
   140023a4e:	add    ecx,0x1
   140023a51:	add    rbx,0x14
   140023a55:	cmp    ecx,edx
   140023a57:	mov    DWORD PTR [rsp+0x50],ecx
   140023a5b:	mov    QWORD PTR [rsp+0x60],rbx
   140023a60:	jb     0x140023815
   140023a66:	test   r15b,r15b
   140023a69:	mov    rsi,QWORD PTR [rsp+0x568]
   140023a71:	jne    0x140023b32
   140023a77:	mov    eax,DWORD PTR [rbp+0x0]
   140023a7a:	and    eax,0x1fffffff
   140023a7f:	cmp    eax,0x19930521
   140023a84:	jb     0x140023b32
   140023a8a:	cmp    DWORD PTR [rbp+0x20],0x0
   140023a8e:	je     0x140023b32
   140023a94:	movsxd rbx,DWORD PTR [rbp+0x20]
   140023a98:	call   0x14001a970
   140023a9d:	add    rax,rbx
   140023aa0:	je     0x140023b32
   140023aa6:	test   ebx,ebx
   140023aa8:	je     0x140023abb
   140023aaa:	call   0x14001a970
   140023aaf:	mov    rdx,rax
   140023ab2:	movsxd rax,DWORD PTR [rbp+0x20]
   140023ab6:	add    rdx,rax
   140023ab9:	jmp    0x140023abd
   140023abb:	xor    edx,edx
   140023abd:	mov    rcx,r14
   140023ac0:	call   0x140022a20
   140023ac5:	test   al,al
   140023ac7:	jne    0x140023b32
   140023ac9:	lea    r9,[rsp+0x5b0]
   140023ad1:	mov    r8,rbp
   140023ad4:	mov    rdx,r12
   140023ad7:	mov    rcx,r13
   140023ada:	call   0x14001a860
   140023adf:	mov    rbx,rax
   140023ae2:	call   0x14001d930
   140023ae7:	mov    r8,QWORD PTR [rsp+0x5c0]
   140023aef:	lea    rcx,[rsp+0x90]
   140023af7:	mov    r9,rbx
   140023afa:	mov    rdx,r14
   140023afd:	mov    QWORD PTR [rax+0x110],rcx
   140023b04:	mov    al,BYTE PTR [rsp+0x5d8]
   140023b0b:	mov    rcx,r13
   140023b0e:	mov    BYTE PTR [rsp+0x40],al
   140023b12:	mov    QWORD PTR [rsp+0x38],r12
   140023b17:	mov    QWORD PTR [rsp+0x30],rbp
   140023b1c:	mov    DWORD PTR [rsp+0x28],0xffffffff
   140023b24:	mov    QWORD PTR [rsp+0x20],0x0
   140023b2d:	call   0x14001af80
   140023b32:	call   0x14001d930
   140023b37:	cmp    QWORD PTR [rax+0x108],0x0
   140023b3f:	je     0x140023b46
   140023b41:	call   0x140021d00
   140023b46:	add    rsp,0x570
   140023b4d:	pop    r15
   140023b4f:	pop    r14
   140023b51:	pop    r13
   140023b53:	pop    r12
   140023b55:	pop    rdi
   140023b56:	pop    rbp
   140023b57:	pop    rbx
   140023b58:	ret    
   140023b59:	cmp    DWORD PTR [rbp+0xc],0x0
   140023b5d:	jbe    0x140023b32
   140023b5f:	cmp    BYTE PTR [rsp+0x5d8],0x0
   140023b67:	jne    0x140023b9d
   140023b69:	mov    rax,QWORD PTR [rsp+0x5e8]
   140023b71:	mov    r9,r12
   140023b74:	mov    r8,rbx
   140023b77:	mov    QWORD PTR [rsp+0x38],rax
   140023b7c:	mov    eax,DWORD PTR [rsp+0x5e0]
   140023b83:	mov    rdx,r13
   140023b86:	mov    DWORD PTR [rsp+0x30],eax
   140023b8a:	mov    rcx,r14
   140023b8d:	mov    DWORD PTR [rsp+0x28],edi
   140023b91:	mov    QWORD PTR [rsp+0x20],rbp
   140023b96:	call   0x1400232e0
   140023b9b:	jmp    0x140023b32
   140023b9d:	call   0x140021cd0
   140023ba2:	int3   
   140023ba3:	int3   
   140023ba4:	int3   
   140023ba5:	int3   
   140023ba6:	int3   
   140023ba7:	int3   
   140023ba8:	int3   
   140023ba9:	int3   
   140023baa:	int3   
   140023bab:	int3   
   140023bac:	int3   
   140023bad:	int3   
   140023bae:	int3   
   140023baf:	int3   
   140023bb0:	rex push rbx
   140023bb2:	sub    rsp,0x20
   140023bb6:	mov    rbx,rcx
   140023bb9:	call   0x140029c20
   140023bbe:	lea    r11,[rip+0x1161b]        # 0x1400351e0
   140023bc5:	mov    QWORD PTR [rbx],r11
   140023bc8:	mov    rax,rbx
   140023bcb:	add    rsp,0x20
   140023bcf:	pop    rbx
   140023bd0:	ret    
   140023bd1:	int3   
   140023bd2:	int3   
   140023bd3:	int3   
   140023bd4:	int3   
   140023bd5:	int3   
   140023bd6:	int3   
   140023bd7:	int3   
   140023bd8:	int3   
   140023bd9:	int3   
   140023bda:	int3   
   140023bdb:	int3   
   140023bdc:	int3   
   140023bdd:	int3   
   140023bde:	int3   
   140023bdf:	int3   
   140023be0:	mov    QWORD PTR [rsp+0x8],rbx
   140023be5:	mov    QWORD PTR [rsp+0x10],rbp
   140023bea:	mov    QWORD PTR [rsp+0x18],rsi
   140023bef:	mov    QWORD PTR [rsp+0x20],rdi
   140023bf4:	push   r12
   140023bf6:	sub    rsp,0x40
   140023bfa:	mov    rbp,r9
   140023bfd:	mov    r12,r8
   140023c00:	mov    rsi,rdx
   140023c03:	mov    rbx,rcx
   140023c06:	call   0x14001d930
   140023c0b:	mov    rdi,QWORD PTR [rsp+0x70]
   140023c10:	cmp    DWORD PTR [rax+0x2d0],0x0
   140023c17:	jne    0x140023c58
   140023c19:	mov    eax,DWORD PTR [rbx]
   140023c1b:	cmp    eax,0xe06d7363
   140023c20:	je     0x140023c58
   140023c22:	cmp    eax,0x80000029
   140023c27:	jne    0x140023c39
   140023c29:	cmp    DWORD PTR [rbx+0x18],0xf
   140023c2d:	jne    0x140023c39
   140023c2f:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140023c37:	je     0x140023c58
   140023c39:	cmp    eax,0x80000026
   140023c3e:	je     0x140023c58
   140023c40:	mov    eax,DWORD PTR [rdi]
   140023c42:	and    eax,0x1fffffff
   140023c47:	cmp    eax,0x19930522
   140023c4c:	jb     0x140023c58
   140023c4e:	test   BYTE PTR [rdi+0x24],0x1
   140023c52:	jne    0x140023ddb
   140023c58:	mov    eax,DWORD PTR [rbx+0x4]
   140023c5b:	test   al,0x66
   140023c5d:	je     0x140023d07
   140023c63:	mov    ecx,DWORD PTR [rdi+0x4]
   140023c66:	test   ecx,ecx
   140023c68:	je     0x140023ddb
   140023c6e:	cmp    DWORD PTR [rsp+0x78],0x0
   140023c73:	jne    0x140023ddb
   140023c79:	and    eax,0x20
   140023c7c:	je     0x140023cc0
   140023c7e:	cmp    DWORD PTR [rbx],0x80000026
   140023c84:	jne    0x140023cc0
   140023c86:	mov    r8,QWORD PTR [r12+0xf8]
   140023c8e:	mov    rdx,rbp
   140023c91:	mov    rcx,rdi
   140023c94:	call   0x140022400
   140023c99:	cmp    eax,0xffffffff
   140023c9c:	mov    ebx,eax
   140023c9e:	jl     0x140023ca5
   140023ca0:	cmp    eax,DWORD PTR [rdi+0x4]
   140023ca3:	jl     0x140023caa
   140023ca5:	call   0x140021d00
   140023caa:	mov    r9d,ebx
   140023cad:	mov    r8,rdi
   140023cb0:	mov    rdx,rbp
   140023cb3:	mov    rcx,rsi
   140023cb6:	call   0x1400226e0
   140023cbb:	jmp    0x140023ddb
   140023cc0:	test   eax,eax
   140023cc2:	je     0x140023cf4
   140023cc4:	cmp    DWORD PTR [rbx],0x80000029
   140023cca:	jne    0x140023cf4
   140023ccc:	mov    esi,DWORD PTR [rbx+0x38]
   140023ccf:	cmp    esi,0xffffffff
   140023cd2:	jl     0x140023cd8
   140023cd4:	cmp    esi,ecx
   140023cd6:	jl     0x140023cdd
   140023cd8:	call   0x140021d00
   140023cdd:	mov    rcx,QWORD PTR [rbx+0x28]
   140023ce1:	mov    r9d,esi
   140023ce4:	mov    r8,rdi
   140023ce7:	mov    rdx,rbp
   140023cea:	call   0x1400226e0
   140023cef:	jmp    0x140023ddb
   140023cf4:	mov    r8,rdi
   140023cf7:	mov    rdx,rbp
   140023cfa:	mov    rcx,rsi
   140023cfd:	call   0x14001a9f0
   140023d02:	jmp    0x140023ddb
   140023d07:	cmp    DWORD PTR [rdi+0xc],0x0
   140023d0b:	jne    0x140023d3b
   140023d0d:	mov    eax,DWORD PTR [rdi]
   140023d0f:	and    eax,0x1fffffff
   140023d14:	cmp    eax,0x19930521
   140023d19:	jb     0x140023ddb
   140023d1f:	cmp    DWORD PTR [rdi+0x20],0x0
   140023d23:	je     0x140023ddb
   140023d29:	call   0x14001a970
   140023d2e:	movsxd rcx,DWORD PTR [rdi+0x20]
   140023d32:	add    rax,rcx
   140023d35:	je     0x140023ddb
   140023d3b:	cmp    DWORD PTR [rbx],0xe06d7363
   140023d41:	jne    0x140023da4
   140023d43:	cmp    DWORD PTR [rbx+0x18],0x3
   140023d47:	jb     0x140023da4
   140023d49:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140023d50:	jbe    0x140023da4
   140023d52:	mov    rax,QWORD PTR [rbx+0x30]
   140023d56:	cmp    DWORD PTR [rax+0x8],0x0
   140023d5a:	je     0x140023da4
   140023d5c:	call   0x14001a990
   140023d61:	mov    rcx,QWORD PTR [rbx+0x30]
   140023d65:	movsxd rdx,DWORD PTR [rcx+0x8]
   140023d69:	add    rax,rdx
   140023d6c:	je     0x140023da4
   140023d6e:	movzx  ecx,BYTE PTR [rsp+0x88]
   140023d76:	mov    r9,rbp
   140023d79:	mov    r8,r12
   140023d7c:	mov    DWORD PTR [rsp+0x38],ecx
   140023d80:	mov    rcx,QWORD PTR [rsp+0x80]
   140023d88:	mov    rdx,rsi
   140023d8b:	mov    QWORD PTR [rsp+0x30],rcx
   140023d90:	mov    ecx,DWORD PTR [rsp+0x78]
   140023d94:	mov    DWORD PTR [rsp+0x28],ecx
   140023d98:	mov    rcx,rbx
   140023d9b:	mov    QWORD PTR [rsp+0x20],rdi
   140023da0:	call   rax
   140023da2:	jmp    0x140023de0
   140023da4:	mov    rax,QWORD PTR [rsp+0x80]
   140023dac:	mov    r9,rbp
   140023daf:	mov    r8,r12
   140023db2:	mov    QWORD PTR [rsp+0x38],rax
   140023db7:	mov    eax,DWORD PTR [rsp+0x78]
   140023dbb:	mov    rdx,rsi
   140023dbe:	mov    DWORD PTR [rsp+0x30],eax
   140023dc2:	movzx  eax,BYTE PTR [rsp+0x88]
   140023dca:	mov    rcx,rbx
   140023dcd:	mov    BYTE PTR [rsp+0x28],al
   140023dd1:	mov    QWORD PTR [rsp+0x20],rdi
   140023dd6:	call   0x140023560
   140023ddb:	mov    eax,0x1
   140023de0:	mov    rbx,QWORD PTR [rsp+0x50]
   140023de5:	mov    rbp,QWORD PTR [rsp+0x58]
   140023dea:	mov    rsi,QWORD PTR [rsp+0x60]
   140023def:	mov    rdi,QWORD PTR [rsp+0x68]
   140023df4:	add    rsp,0x40
   140023df8:	pop    r12
   140023dfa:	ret    
   140023dfb:	int3   
   140023dfc:	int3   
   140023dfd:	int3   
   140023dfe:	int3   
   140023dff:	int3   
   140023e00:	mov    QWORD PTR [rsp+0x8],rbx
   140023e05:	push   rdi
   140023e06:	sub    rsp,0x20
   140023e0a:	test   cx,0xff00
   140023e0f:	movzx  ebx,cx
   140023e12:	jne    0x140023e32
   140023e14:	movzx  edi,cx
   140023e17:	movzx  ecx,dil
   140023e1b:	call   0x140029510
   140023e20:	test   eax,eax
   140023e22:	je     0x140023e32
   140023e24:	mov    ax,di
   140023e27:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e2c:	add    rsp,0x20
   140023e30:	pop    rdi
   140023e31:	ret    
   140023e32:	movzx  eax,bx
   140023e35:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e3a:	and    eax,0xffffffdf
   140023e3d:	sub    eax,0x7
   140023e40:	add    rsp,0x20
   140023e44:	pop    rdi
   140023e45:	ret    
   140023e46:	int3   
   140023e47:	int3   
   140023e48:	int3   
   140023e49:	int3   
   140023e4a:	int3   
   140023e4b:	int3   
   140023e4c:	int3   
   140023e4d:	int3   
   140023e4e:	int3   
   140023e4f:	int3   
   140023e50:	rex push rbx
   140023e52:	push   rbp
   140023e53:	push   rsi
   140023e54:	push   rdi
   140023e55:	push   r12
   140023e57:	push   r14
   140023e59:	push   r15
   140023e5b:	sub    rsp,0x3c0
   140023e62:	mov    rax,QWORD PTR [rip+0x1c167]        # 0x14003ffd0
   140023e69:	xor    rax,rsp
   140023e6c:	mov    QWORD PTR [rsp+0x3a0],rax
   140023e74:	xor    r14d,r14d
   140023e77:	lea    rbp,[rsp+0xe0]
   140023e7f:	xor    di,di
   140023e82:	test   rdx,rdx
   140023e85:	mov    ebx,r14d
   140023e88:	mov    QWORD PTR [rsp+0xa8],r9
   140023e90:	mov    rsi,rdx
   140023e93:	mov    QWORD PTR [rsp+0x78],rdx
   140023e98:	mov    r12,rcx
   140023e9b:	mov    DWORD PTR [rsp+0x3c],ebx
   140023e9f:	mov    QWORD PTR [rsp+0x70],rcx
   140023ea4:	mov    QWORD PTR [rsp+0x48],rbp
   140023ea9:	mov    r15d,0x15e
   140023eaf:	mov    DWORD PTR [rsp+0x80],r14d
   140023eb7:	mov    QWORD PTR [rsp+0x58],r14
   140023ebc:	mov    DWORD PTR [rsp+0xb0],r14d
   140023ec4:	jne    0x140023eed
   140023ec6:	call   0x14001b280
   140023ecb:	xor    r9d,r9d
   140023ece:	xor    r8d,r8d
   140023ed1:	xor    edx,edx
   140023ed3:	xor    ecx,ecx
   140023ed5:	mov    QWORD PTR [rsp+0x20],r14
   140023eda:	mov    DWORD PTR [rax],0x16
   140023ee0:	call   0x14001de30
   140023ee5:	or     eax,0xffffffff
   140023ee8:	jmp    0x140025651
   140023eed:	test   rcx,rcx
   140023ef0:	je     0x140023ec6
   140023ef2:	test   r8,r8
   140023ef5:	mov    QWORD PTR [rsp+0x3b8],r13
   140023efd:	mov    BYTE PTR [rsp+0xd0],bl
   140023f04:	jne    0x140023fbe
   140023f0a:	call   0x14001d930
   140023f0f:	mov    r11,rax
   140023f12:	mov    QWORD PTR [rsp+0xc8],rax
   140023f1a:	mov    rax,QWORD PTR [rax+0xc0]
   140023f21:	cmp    rax,QWORD PTR [rip+0x1cb68]        # 0x140040a90
   140023f28:	mov    QWORD PTR [rsp+0xb8],rax
   140023f30:	mov    rcx,QWORD PTR [r11+0xb8]
   140023f37:	mov    QWORD PTR [rsp+0xc0],rcx
   140023f3f:	je     0x140023f6d
   140023f41:	mov    eax,DWORD PTR [r11+0xc8]
   140023f48:	test   DWORD PTR [rip+0x1c9ca],eax        # 0x140040918
   140023f4e:	jne    0x140023f6d
   140023f50:	call   0x14001ed60
   140023f55:	mov    r11,QWORD PTR [rsp+0xc8]
   140023f5d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140023f65:	mov    QWORD PTR [rsp+0xb8],rax
   140023f6d:	cmp    rcx,QWORD PTR [rip+0x1c89c]        # 0x140040810
   140023f74:	je     0x140023f9a
   140023f76:	mov    eax,DWORD PTR [r11+0xc8]
   140023f7d:	test   DWORD PTR [rip+0x1c995],eax        # 0x140040918
   140023f83:	jne    0x140023f9a
   140023f85:	call   0x14001e210
   140023f8a:	mov    r11,QWORD PTR [rsp+0xc8]
   140023f92:	mov    QWORD PTR [rsp+0xc0],rax
   140023f9a:	test   BYTE PTR [r11+0xc8],0x2
   140023fa2:	jne    0x140023fdc
   140023fa4:	or     DWORD PTR [r11+0xc8],0x2
   140023fac:	mov    r11,QWORD PTR [rsp+0xc8]
   140023fb4:	mov    BYTE PTR [rsp+0xd0],0x1
   140023fbc:	jmp    0x140023fdc
   140023fbe:	mov    rax,QWORD PTR [r8]
   140023fc1:	lea    rcx,[rsp+0xb8]
   140023fc9:	mov    QWORD PTR [rcx],rax
   140023fcc:	mov    rax,QWORD PTR [r8+0x8]
   140023fd0:	mov    QWORD PTR [rcx+0x8],rax
   140023fd4:	mov    r11,QWORD PTR [rsp+0xc8]
   140023fdc:	xor    al,al
   140023fde:	mov    ecx,r14d
   140023fe1:	mov    r13d,r14d
   140023fe4:	mov    BYTE PTR [rsp+0x42],al
   140023fe8:	movzx  eax,WORD PTR [rsi]
   140023feb:	mov    DWORD PTR [rsp+0x34],r14d
   140023ff0:	test   ax,ax
   140023ff3:	mov    DWORD PTR [rsp+0x38],ecx
   140023ff7:	je     0x140025635
   140023ffd:	data16 xchg ax,ax
   140024000:	mov    dx,0x8
   140024004:	movzx  ecx,ax
   140024007:	call   0x140022360
   14002400c:	test   eax,eax
   14002400e:	je     0x14002406f
   140024010:	sub    r13d,0x1
   140024014:	add    r13d,0x1
   140024018:	mov    rcx,r12
   14002401b:	mov    DWORD PTR [rsp+0x34],r13d
   140024020:	call   0x140029d90
   140024025:	cmp    ax,0xffff
   140024029:	movzx  ebx,ax
   14002402c:	je     0x140024050
   14002402e:	mov    dx,0x8
   140024032:	movzx  ecx,ax
   140024035:	call   0x140022360
   14002403a:	test   eax,eax
   14002403c:	jne    0x140024014
   14002403e:	mov    rdx,r12
   140024041:	movzx  ecx,bx
   140024044:	call   0x140029fc0
   140024049:	data16 xchg ax,ax
   14002404c:	data16 data16 xchg ax,ax
   140024050:	movzx  ecx,WORD PTR [rsi+0x2]
   140024054:	add    rsi,0x2
   140024058:	mov    dx,0x8
   14002405c:	call   0x140022360
   140024061:	test   eax,eax
   140024063:	jne    0x140024050
   140024065:	mov    QWORD PTR [rsp+0x78],rsi
   14002406a:	jmp    0x1400252af
   14002406f:	mov    r9,QWORD PTR [rsp+0x78]
   140024074:	cmp    WORD PTR [r9],0x25
   140024079:	jne    0x140025265
   14002407f:	xor    edx,edx
   140024081:	xor    r13d,r13d
   140024084:	xor    si,si
   140024087:	xor    r8d,r8d
   14002408a:	xor    r14d,r14d
   14002408d:	xor    bpl,bpl
   140024090:	mov    DWORD PTR [rsp+0xa4],r13d
   140024098:	mov    WORD PTR [rsp+0x90],si
   1400240a0:	mov    DWORD PTR [rsp+0x60],r13d
   1400240a5:	mov    r13b,0x1
   1400240a8:	lea    rsi,[rip+0xfffffffffffdbf51]        # 0x140000000
   1400240af:	mov    DWORD PTR [rsp+0x68],r8d
   1400240b4:	mov    DWORD PTR [rsp+0x50],edx
   1400240b8:	mov    QWORD PTR [rsp+0x88],r14
   1400240c0:	mov    BYTE PTR [rsp+0x41],dl
   1400240c4:	mov    BYTE PTR [rsp+0x54],dl
   1400240c8:	mov    BYTE PTR [rsp+0x30],dl
   1400240cc:	mov    BYTE PTR [rsp+0xa0],dl
   1400240d3:	xor    r12b,r12b
   1400240d6:	data16 data16 xchg ax,ax
   1400240da:	data16 xchg ax,ax
   1400240dd:	data16 xchg ax,ax
   1400240e0:	movzx  ebx,WORD PTR [r9+0x2]
   1400240e5:	add    r9,0x2
   1400240e9:	test   bx,0xff00
   1400240ee:	mov    QWORD PTR [rsp+0x78],r9
   1400240f3:	jne    0x14002413b
   1400240f5:	movzx  ecx,bl
   1400240f8:	call   0x140029510
   1400240fd:	test   eax,eax
   1400240ff:	je     0x14002412d
   140024101:	mov    edx,DWORD PTR [rsp+0x50]
   140024105:	mov    r8d,DWORD PTR [rsp+0x68]
   14002410a:	mov    r9,QWORD PTR [rsp+0x78]
   14002410f:	movzx  ecx,BYTE PTR [rsp+0x30]
   140024114:	lea    eax,[rdx+rdx*4]
   140024117:	add    r8d,0x1
   14002411b:	lea    edx,[rbx+rax*2-0x30]
   14002411f:	mov    DWORD PTR [rsp+0x68],r8d
   140024124:	mov    DWORD PTR [rsp+0x50],edx
   140024128:	jmp    0x14002426b
   14002412d:	mov    edx,DWORD PTR [rsp+0x50]
   140024131:	mov    r8d,DWORD PTR [rsp+0x68]
   140024136:	mov    r9,QWORD PTR [rsp+0x78]
   14002413b:	add    ebx,0xffffffd6
   14002413e:	cmp    ebx,0x4d
   140024141:	ja     0x1400241f8
   140024147:	movsxd rax,ebx
   14002414a:	movzx  eax,BYTE PTR [rsi+rax*1+0x25694]
   140024152:	mov    ecx,DWORD PTR [rsi+rax*4+0x25674]
   140024159:	add    rcx,rsi
   14002415c:	jmp    rcx
   14002415e:	mov    cl,BYTE PTR [rsp+0x30]
   140024162:	add    r13b,0xff
   140024166:	add    r12b,0xff
   14002416a:	jmp    0x14002426b
   14002416f:	movzx  eax,WORD PTR [r9+0x2]
   140024174:	cmp    ax,0x36
   140024178:	jne    0x1400241a7
   14002417a:	cmp    WORD PTR [r9+0x4],0x34
   140024180:	lea    rcx,[r9+0x4]
   140024184:	jne    0x1400241a7
   140024186:	mov    r9,rcx
   140024189:	mov    QWORD PTR [rsp+0x78],rcx
   14002418e:	mov    cl,BYTE PTR [rsp+0x30]
   140024192:	add    r14d,0x1
   140024196:	mov    QWORD PTR [rsp+0x98],0x0
   1400241a2:	jmp    0x14002426b
   1400241a7:	cmp    ax,0x33
   1400241ab:	jne    0x1400241ca
   1400241ad:	cmp    WORD PTR [r9+0x4],0x32
   1400241b3:	lea    rcx,[r9+0x4]
   1400241b7:	jne    0x1400241ca
   1400241b9:	mov    r9,rcx
   1400241bc:	mov    QWORD PTR [rsp+0x78],rcx
   1400241c1:	mov    cl,BYTE PTR [rsp+0x30]
   1400241c5:	jmp    0x14002426b
   1400241ca:	cmp    ax,0x64
   1400241ce:	je     0x140024202
   1400241d0:	cmp    ax,0x69
   1400241d4:	je     0x140024202
   1400241d6:	cmp    ax,0x6f
   1400241da:	je     0x140024202
   1400241dc:	cmp    ax,0x78
   1400241e0:	je     0x140024202
   1400241e2:	cmp    ax,0x58
   1400241e6:	je     0x140024202
   1400241e8:	add    r14d,0x1
   1400241ec:	mov    QWORD PTR [rsp+0x98],0x0
   1400241f8:	mov    cl,BYTE PTR [rsp+0x30]
   1400241fc:	add    bpl,0x1
   140024200:	jmp    0x14002426b
   140024202:	mov    cl,BYTE PTR [rsp+0x30]
   140024206:	add    r14d,0x1
   14002420a:	mov    QWORD PTR [rsp+0x98],0x0
   140024216:	jmp    0x14002426b
   140024218:	mov    cl,BYTE PTR [rsp+0x30]
   14002421c:	add    r13b,0x1
   140024220:	jmp    0x14002426b
   140024222:	cmp    WORD PTR [r9+0x2],0x6c
   140024228:	lea    rax,[r9+0x2]
   14002422c:	jne    0x14002424c
   14002422e:	mov    cl,BYTE PTR [rsp+0x30]
   140024232:	mov    r9,rax
   140024235:	mov    QWORD PTR [rsp+0x78],rax
   14002423a:	add    r14d,0x1
   14002423e:	mov    QWORD PTR [rsp+0x98],0x0
   14002424a:	jmp    0x14002426b
   14002424c:	add    r13b,0x1
   140024250:	mov    cl,BYTE PTR [rsp+0x30]
   140024254:	add    r12b,0x1
   140024258:	jmp    0x14002426b
   14002425a:	mov    cl,BYTE PTR [rsp+0x30]
   14002425e:	add    cl,0x1
   140024261:	mov    BYTE PTR [rsp+0x30],cl
   140024265:	jmp    0x14002426b
   140024267:	mov    cl,BYTE PTR [rsp+0x30]
   14002426b:	test   bpl,bpl
   14002426e:	je     0x1400240e0
   140024274:	test   cl,cl
   140024276:	movzx  esi,WORD PTR [rsp+0x90]
   14002427e:	mov    BYTE PTR [rsp+0x40],r13b
   140024283:	mov    r13d,DWORD PTR [rsp+0xa4]
   14002428b:	mov    DWORD PTR [rsp+0x64],r14d
   140024290:	mov    r14,QWORD PTR [rsp+0x88]
   140024298:	jne    0x1400242c4
   14002429a:	mov    rax,QWORD PTR [rsp+0xa8]
   1400242a2:	mov    QWORD PTR [rsp+0xd8],rax
   1400242aa:	add    rax,0x8
   1400242ae:	mov    QWORD PTR [rsp+0xa8],rax
   1400242b6:	mov    rax,QWORD PTR [rax-0x8]
   1400242ba:	mov    QWORD PTR [rsp+0x88],rax
   1400242c2:	jmp    0x1400242cc
   1400242c4:	mov    QWORD PTR [rsp+0x88],r14
   1400242cc:	xor    bl,bl
   1400242ce:	test   r12b,r12b
   1400242d1:	jne    0x1400242eb
   1400242d3:	movzx  eax,WORD PTR [r9]
   1400242d7:	cmp    ax,0x53
   1400242db:	je     0x1400242e8
   1400242dd:	cmp    ax,0x43
   1400242e1:	je     0x1400242e8
   1400242e3:	mov    r12b,0x1
   1400242e6:	jmp    0x1400242eb
   1400242e8:	mov    r12b,0xff
   1400242eb:	movzx  ebp,WORD PTR [r9]
   1400242ef:	or     ebp,0x20
   1400242f2:	cmp    ebp,0x6e
   1400242f5:	mov    DWORD PTR [rsp+0xa4],ebp
   1400242fc:	je     0x140024375
   1400242fe:	cmp    ebp,0x63
   140024301:	je     0x140024346
   140024303:	cmp    ebp,0x7b
   140024306:	je     0x140024346
   140024308:	mov    ebp,DWORD PTR [rsp+0x34]
   14002430c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024311:	mov    rcx,rbx
   140024314:	add    ebp,0x1
   140024317:	call   0x140029d90
   14002431c:	cmp    ax,0xffff
   140024320:	movzx  edi,ax
   140024323:	je     0x140024335
   140024325:	mov    dx,0x8
   140024329:	movzx  ecx,ax
   14002432c:	call   0x140022360
   140024331:	test   eax,eax
   140024333:	jne    0x140024311
   140024335:	mov    DWORD PTR [rsp+0x34],ebp
   140024339:	mov    ebp,DWORD PTR [rsp+0xa4]
   140024340:	movzx  ebx,r14b
   140024344:	jmp    0x140024358
   140024346:	mov    rcx,QWORD PTR [rsp+0x70]
   14002434b:	add    DWORD PTR [rsp+0x34],0x1
   140024350:	call   0x140029d90
   140024355:	mov    di,ax
   140024358:	cmp    di,0xffff
   14002435d:	je     0x14002545e
   140024363:	mov    edx,DWORD PTR [rsp+0x50]
   140024367:	mov    r8d,DWORD PTR [rsp+0x68]
   14002436c:	mov    r9,QWORD PTR [rsp+0x78]
   140024371:	mov    cl,BYTE PTR [rsp+0x30]
   140024375:	test   r8d,r8d
   140024378:	je     0x140024382
   14002437a:	test   edx,edx
   14002437c:	je     0x1400252ce
   140024382:	test   cl,cl
   140024384:	jne    0x1400243f1
   140024386:	cmp    ebp,0x63
   140024389:	je     0x140024395
   14002438b:	cmp    ebp,0x73
   14002438e:	je     0x140024395
   140024390:	cmp    ebp,0x7b
   140024393:	jne    0x1400243df
   140024395:	mov    r10,QWORD PTR [rsp+0xd8]
   14002439d:	mov    rax,QWORD PTR [r10]
   1400243a0:	add    r10,0x8
   1400243a4:	mov    r14d,DWORD PTR [r10]
   1400243a7:	mov    r11,r10
   1400243aa:	mov    QWORD PTR [rsp+0xd8],r10
   1400243b2:	add    r10,0x8
   1400243b6:	cmp    r14,0x1
   1400243ba:	mov    QWORD PTR [rsp+0x88],rax
   1400243c2:	mov    QWORD PTR [rsp+0xa8],r10
   1400243ca:	jae    0x140024401
   1400243cc:	test   r12b,r12b
   1400243cf:	jle    0x1400252fd
   1400243d5:	mov    WORD PTR [rax],0x0
   1400243da:	jmp    0x140025300
   1400243df:	mov    r10,QWORD PTR [rsp+0xa8]
   1400243e7:	mov    r11,QWORD PTR [rsp+0xd8]
   1400243ef:	jmp    0x140024401
   1400243f1:	mov    r10,QWORD PTR [rsp+0xa8]
   1400243f9:	mov    r11,QWORD PTR [rsp+0xd8]
   140024401:	lea    eax,[rbp-0x63]
   140024404:	cmp    eax,0x18
   140024407:	ja     0x1400251ef
   14002440d:	cdqe   
   14002440f:	lea    rcx,[rip+0xfffffffffffdbbea]        # 0x140000000
   140024416:	mov    ecx,DWORD PTR [rcx+rax*4+0x256e4]
   14002441d:	lea    rax,[rip+0xfffffffffffdbbdc]        # 0x140000000
   140024424:	add    rcx,rax
   140024427:	jmp    rcx
   140024429:	test   r8d,r8d
   14002442c:	jne    0x14002443d
   14002442e:	add    edx,0x1
   140024431:	mov    DWORD PTR [rsp+0x68],0x1
   140024439:	mov    DWORD PTR [rsp+0x50],edx
   14002443d:	test   r12b,r12b
   140024440:	jle    0x1400245e5
   140024446:	movzx  r12d,BYTE PTR [rsp+0x41]
   14002444c:	mov    r13b,0x1
   14002444f:	jmp    0x1400245f2
   140024454:	test   r12b,r12b
   140024457:	jle    0x1400245d6
   14002445d:	mov    r12b,BYTE PTR [rsp+0x41]
   140024462:	mov    r13b,0x1
   140024465:	jmp    0x1400245f2
   14002446a:	mov    r13d,DWORD PTR [rsp+0xa0]
   140024472:	test   r12b,r12b
   140024475:	mov    eax,0x1
   14002447a:	movzx  r13d,r13b
   14002447e:	cmovg  r13d,eax
   140024482:	add    r9,0x2
   140024486:	cmp    WORD PTR [r9],0x5e
   14002448b:	mov    QWORD PTR [rsp+0x78],r9
   140024490:	mov    rbx,r9
   140024493:	jne    0x14002449e
   140024495:	lea    rbx,[r9+0x2]
   140024499:	mov    r12b,0xff
   14002449c:	jmp    0x1400244a3
   14002449e:	mov    r12b,BYTE PTR [rsp+0x41]
   1400244a3:	mov    r11,QWORD PTR [rsp+0x58]
   1400244a8:	test   r11,r11
   1400244ab:	jne    0x1400244d4
   1400244ad:	mov    ecx,0x2000
   1400244b2:	call   0x1400216b0
   1400244b7:	test   rax,rax
   1400244ba:	mov    r11,rax
   1400244bd:	mov    QWORD PTR [rsp+0x58],rax
   1400244c2:	je     0x140025434
   1400244c8:	mov    eax,0x1
   1400244cd:	mov    DWORD PTR [rsp+0xb0],eax
   1400244d4:	xor    edx,edx
   1400244d6:	mov    r8d,0x2000
   1400244dc:	mov    rcx,r11
   1400244df:	call   0x14001b520
   1400244e4:	cmp    ebp,0x7b
   1400244e7:	jne    0x140024503
   1400244e9:	cmp    WORD PTR [rbx],0x5d
   1400244ed:	jne    0x14002450a
   1400244ef:	mov    r11,QWORD PTR [rsp+0x58]
   1400244f4:	mov    si,0x5d
   1400244f8:	add    rbx,0x2
   1400244fc:	mov    BYTE PTR [r11+0xb],0x20
   140024501:	jmp    0x14002450f
   140024503:	mov    r11,QWORD PTR [rsp+0x58]
   140024508:	jmp    0x14002450f
   14002450a:	mov    r11,QWORD PTR [rsp+0x58]
   14002450f:	movzx  ecx,WORD PTR [rbx]
   140024512:	cmp    cx,0x5d
   140024516:	je     0x1400245b9
   14002451c:	data16 data16 xchg ax,ax
   140024520:	add    rbx,0x2
   140024524:	cmp    cx,0x2d
   140024528:	jne    0x14002458e
   14002452a:	test   si,si
   14002452d:	je     0x14002458e
   14002452f:	movzx  eax,WORD PTR [rbx]
   140024532:	cmp    ax,0x5d
   140024536:	je     0x14002458e
   140024538:	add    rbx,0x2
   14002453c:	cmp    si,ax
   14002453f:	jae    0x140024547
   140024541:	movzx  r10d,ax
   140024545:	jmp    0x14002454e
   140024547:	mov    r10w,si
   14002454b:	mov    si,ax
   14002454e:	cmp    si,r10w
   140024552:	ja     0x140024589
   140024554:	movzx  r9d,si
   140024558:	data16 data16 xchg ax,ax
   14002455c:	data16 data16 xchg ax,ax
   140024560:	mov    al,sil
   140024563:	mov    r8,r9
   140024566:	mov    edx,0x1
   14002456b:	and    eax,0x7
   14002456e:	shr    r8,0x3
   140024572:	add    si,0x1
   140024576:	movzx  ecx,al
   140024579:	add    r9,0x1
   14002457d:	shl    dl,cl
   14002457f:	or     BYTE PTR [r8+r11*1],dl
   140024583:	cmp    si,r10w
   140024587:	jbe    0x140024560
   140024589:	xor    si,si
   14002458c:	jmp    0x1400245ac
   14002458e:	mov    al,cl
   140024590:	movzx  r8d,cx
   140024594:	mov    si,cx
   140024597:	and    eax,0x7
   14002459a:	mov    edx,0x1
   14002459f:	shr    r8,0x3
   1400245a3:	movzx  ecx,al
   1400245a6:	shl    dl,cl
   1400245a8:	or     BYTE PTR [r8+r11*1],dl
   1400245ac:	mov    cx,WORD PTR [rbx]
   1400245af:	cmp    cx,0x5d
   1400245b3:	jne    0x140024520
   1400245b9:	cmp    WORD PTR [rbx],0x0
   1400245bd:	je     0x140025421
   1400245c3:	mov    rax,QWORD PTR [rsp+0x78]
   1400245c8:	cmp    ebp,0x7b
   1400245cb:	cmove  rax,rbx
   1400245cf:	mov    QWORD PTR [rsp+0x78],rax
   1400245d4:	jmp    0x1400245f2
   1400245d6:	mov    r13d,DWORD PTR [rsp+0xa0]
   1400245de:	mov    r12b,BYTE PTR [rsp+0x41]
   1400245e3:	jmp    0x1400245f2
   1400245e5:	mov    r13d,DWORD PTR [rsp+0xa0]
   1400245ed:	mov    r12b,BYTE PTR [rsp+0x41]
   1400245f2:	mov    esi,DWORD PTR [rsp+0x34]
   1400245f6:	mov    rbx,QWORD PTR [rsp+0x88]
   1400245fe:	sub    esi,0x1
   140024601:	cmp    di,0xffff
   140024606:	mov    DWORD PTR [rsp+0x34],esi
   14002460a:	je     0x140024619
   14002460c:	mov    rdx,QWORD PTR [rsp+0x70]
   140024611:	movzx  ecx,di
   140024614:	call   0x140029fc0
   140024619:	cmp    ebp,0x63
   14002461c:	je     0x140024622
   14002461e:	sub    r14,0x1
   140024622:	cmp    DWORD PTR [rsp+0x68],0x0
   140024627:	je     0x14002463a
   140024629:	mov    ecx,DWORD PTR [rsp+0x50]
   14002462d:	mov    eax,ecx
   14002462f:	sub    ecx,0x1
   140024632:	test   eax,eax
   140024634:	mov    DWORD PTR [rsp+0x50],ecx
   140024638:	je     0x140024697
   14002463a:	mov    rcx,QWORD PTR [rsp+0x70]
   14002463f:	add    esi,0x1
   140024642:	mov    DWORD PTR [rsp+0x34],esi
   140024646:	call   0x140029d90
   14002464b:	cmp    ax,0xffff
   14002464f:	mov    di,ax
   140024652:	je     0x14002467c
   140024654:	cmp    ebp,0x63
   140024657:	je     0x140024713
   14002465d:	cmp    ebp,0x73
   140024660:	jne    0x1400246e7
   140024666:	cmp    ax,0x9
   14002466a:	jb     0x140024672
   14002466c:	cmp    ax,0xd
   140024670:	jbe    0x14002467c
   140024672:	cmp    di,0x20
   140024676:	jne    0x140024713
   14002467c:	sub    esi,0x1
   14002467f:	cmp    di,0xffff
   140024684:	mov    DWORD PTR [rsp+0x34],esi
   140024688:	je     0x140024697
   14002468a:	mov    rdx,QWORD PTR [rsp+0x70]
   14002468f:	movzx  ecx,di
   140024692:	call   0x140029fc0
   140024697:	mov    rax,QWORD PTR [rsp+0x88]
   14002469f:	cmp    rbx,rax
   1400246a2:	je     0x140025409
   1400246a8:	cmp    BYTE PTR [rsp+0x30],0x0
   1400246ad:	jne    0x140025235
   1400246b3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400246b8:	add    r12d,0x1
   1400246bc:	cmp    ebp,0x63
   1400246bf:	mov    DWORD PTR [rsp+0x38],r12d
   1400246c4:	je     0x140025241
   1400246ca:	test   r13b,r13b
   1400246cd:	je     0x140024799
   1400246d3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400246d8:	mov    r13d,DWORD PTR [rsp+0x34]
   1400246dd:	mov    WORD PTR [rax],0x0
   1400246e2:	jmp    0x14002524b
   1400246e7:	cmp    ebp,0x7b
   1400246ea:	jne    0x14002467c
   1400246ec:	mov    rcx,QWORD PTR [rsp+0x58]
   1400246f1:	mov    al,dil
   1400246f4:	and    eax,0x7
   1400246f7:	mov    edx,eax
   1400246f9:	movzx  eax,di
   1400246fc:	shr    rax,0x3
   140024700:	movsx  ecx,BYTE PTR [rax+rcx*1]
   140024704:	movsx  eax,r12b
   140024708:	xor    ecx,eax
   14002470a:	bt     ecx,edx
   14002470d:	jae    0x14002467c
   140024713:	cmp    BYTE PTR [rsp+0x30],0x0
   140024718:	jne    0x140024790
   14002471a:	test   r14,r14
   14002471d:	je     0x140025323
   140024723:	test   r13b,r13b
   140024726:	je     0x140024749
   140024728:	mov    rcx,QWORD PTR [rsp+0x88]
   140024730:	add    rcx,0x2
   140024734:	sub    r14,0x1
   140024738:	mov    WORD PTR [rcx-0x2],di
   14002473c:	mov    QWORD PTR [rsp+0x88],rcx
   140024744:	jmp    0x140024622
   140024749:	mov    rdx,QWORD PTR [rsp+0x88]
   140024751:	lea    rcx,[rsp+0x60]
   140024756:	movzx  r9d,di
   14002475a:	mov    r8,r14
   14002475d:	mov    DWORD PTR [rsp+0x60],0x0
   140024765:	call   0x14002a9f0
   14002476a:	cmp    eax,0x22
   14002476d:	je     0x140025323
   140024773:	movsxd rax,DWORD PTR [rsp+0x60]
   140024778:	test   eax,eax
   14002477a:	jle    0x140024622
   140024780:	add    QWORD PTR [rsp+0x88],rax
   140024788:	sub    r14,rax
   14002478b:	jmp    0x140024622
   140024790:	add    rbx,0x2
   140024794:	jmp    0x140024622
   140024799:	mov    rbp,QWORD PTR [rsp+0x48]
   14002479e:	mov    r13d,DWORD PTR [rsp+0x34]
   1400247a3:	mov    BYTE PTR [rax],0x0
   1400247a6:	jmp    0x14002524b
   1400247ab:	mov    ebp,0x64
   1400247b0:	cmp    di,0x2d
   1400247b4:	jne    0x1400247bb
   1400247b6:	mov    r14b,0x1
   1400247b9:	jmp    0x1400247c7
   1400247bb:	cmp    di,0x2b
   1400247bf:	jne    0x140024803
   1400247c1:	movzx  r14d,BYTE PTR [rsp+0x54]
   1400247c7:	sub    edx,0x1
   1400247ca:	mov    DWORD PTR [rsp+0x50],edx
   1400247ce:	jne    0x1400247e3
   1400247d0:	test   r8d,r8d
   1400247d3:	je     0x1400247e3
   1400247d5:	mov    r12d,DWORD PTR [rsp+0x34]
   1400247da:	mov    rsi,QWORD PTR [rsp+0x70]
   1400247df:	mov    bl,0x1
   1400247e1:	jmp    0x140024812
   1400247e3:	mov    r12d,DWORD PTR [rsp+0x34]
   1400247e8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400247ed:	add    r12d,0x1
   1400247f1:	mov    rcx,rsi
   1400247f4:	mov    DWORD PTR [rsp+0x34],r12d
   1400247f9:	call   0x140029d90
   1400247fe:	mov    di,ax
   140024801:	jmp    0x140024812
   140024803:	mov    r14b,BYTE PTR [rsp+0x54]
   140024808:	mov    r12d,DWORD PTR [rsp+0x34]
   14002480d:	mov    rsi,QWORD PTR [rsp+0x70]
   140024812:	cmp    di,0x30
   140024816:	jne    0x140024940
   14002481c:	add    r12d,0x1
   140024820:	mov    rcx,rsi
   140024823:	mov    DWORD PTR [rsp+0x34],r12d
   140024828:	call   0x140029d90
   14002482d:	cmp    ax,0x78
   140024831:	mov    di,ax
   140024834:	je     0x140024897
   140024836:	cmp    ax,0x58
   14002483a:	je     0x140024897
   14002483c:	cmp    ebp,0x78
   14002483f:	mov    eax,0x1
   140024844:	mov    esi,eax
   140024846:	je     0x14002486d
   140024848:	cmp    DWORD PTR [rsp+0x68],0x0
   14002484d:	je     0x14002485e
   14002484f:	mov    eax,DWORD PTR [rsp+0x50]
   140024853:	sub    eax,esi
   140024855:	mov    DWORD PTR [rsp+0x50],eax
   140024859:	jne    0x14002485e
   14002485b:	add    bl,sil
   14002485e:	mov    r12d,DWORD PTR [rsp+0x64]
   140024863:	mov    ebp,0x6f
   140024868:	jmp    0x140024952
   14002486d:	sub    r12d,eax
   140024870:	cmp    di,0xffff
   140024875:	mov    DWORD PTR [rsp+0x34],r12d
   14002487a:	je     0x140024889
   14002487c:	mov    rdx,QWORD PTR [rsp+0x70]
   140024881:	movzx  ecx,di
   140024884:	call   0x140029fc0
   140024889:	mov    r12d,DWORD PTR [rsp+0x64]
   14002488e:	mov    di,0x30
   140024892:	jmp    0x140024952
   140024897:	add    r12d,0x1
   14002489b:	mov    rcx,rsi
   14002489e:	mov    DWORD PTR [rsp+0x34],r12d
   1400248a3:	call   0x140029d90
   1400248a8:	cmp    DWORD PTR [rsp+0x68],0x0
   1400248ad:	mov    di,ax
   1400248b0:	je     0x1400248c5
   1400248b2:	mov    eax,DWORD PTR [rsp+0x50]
   1400248b6:	sub    eax,0x2
   1400248b9:	cmp    eax,0x1
   1400248bc:	mov    DWORD PTR [rsp+0x50],eax
   1400248c0:	jge    0x1400248c5
   1400248c2:	add    bl,0x1
   1400248c5:	mov    esi,DWORD PTR [rsp+0x60]
   1400248c9:	mov    r12d,DWORD PTR [rsp+0x64]
   1400248ce:	mov    ebp,0x78
   1400248d3:	jmp    0x140024952
   1400248d5:	mov    r12d,DWORD PTR [rsp+0x64]
   1400248da:	mov    BYTE PTR [rsp+0x40],0x1
   1400248df:	mov    QWORD PTR [rsp+0x98],0x0
   1400248eb:	add    r12d,0x1
   1400248ef:	jmp    0x1400248f6
   1400248f1:	mov    r12d,DWORD PTR [rsp+0x64]
   1400248f6:	cmp    di,0x2d
   1400248fa:	jne    0x140024901
   1400248fc:	mov    r14b,0x1
   1400248ff:	jmp    0x14002490c
   140024901:	cmp    di,0x2b
   140024905:	jne    0x14002494b
   140024907:	mov    r14b,BYTE PTR [rsp+0x54]
   14002490c:	sub    edx,0x1
   14002490f:	mov    DWORD PTR [rsp+0x50],edx
   140024913:	jne    0x140024922
   140024915:	test   r8d,r8d
   140024918:	je     0x140024922
   14002491a:	mov    esi,DWORD PTR [rsp+0x60]
   14002491e:	mov    bl,0x1
   140024920:	jmp    0x140024952
   140024922:	mov    eax,DWORD PTR [rsp+0x34]
   140024926:	mov    rcx,QWORD PTR [rsp+0x70]
   14002492b:	add    eax,0x1
   14002492e:	mov    DWORD PTR [rsp+0x34],eax
   140024932:	call   0x140029d90
   140024937:	mov    esi,DWORD PTR [rsp+0x60]
   14002493b:	mov    di,ax
   14002493e:	jmp    0x140024952
   140024940:	mov    esi,DWORD PTR [rsp+0x60]
   140024944:	mov    r12d,DWORD PTR [rsp+0x64]
   140024949:	jmp    0x140024952
   14002494b:	mov    esi,DWORD PTR [rsp+0x60]
   14002494f:	mov    r14b,sil
   140024952:	test   r12d,r12d
   140024955:	je     0x140024a78
   14002495b:	test   bl,bl
   14002495d:	jne    0x140024a4d
   140024963:	mov    ebx,DWORD PTR [rsp+0x34]
   140024967:	cmp    ebp,0x78
   14002496a:	je     0x1400249bb
   14002496c:	cmp    ebp,0x70
   14002496f:	je     0x1400249bb
   140024971:	test   di,0xff00
   140024976:	jne    0x140024a28
   14002497c:	movzx  ecx,dil
   140024980:	call   0x140029510
   140024985:	test   eax,eax
   140024987:	je     0x140024a28
   14002498d:	cmp    ebp,0x6f
   140024990:	jne    0x1400249aa
   140024992:	cmp    di,0x38
   140024996:	jae    0x140024a28
   14002499c:	mov    rcx,QWORD PTR [rsp+0x98]
   1400249a4:	shl    rcx,0x3
   1400249a8:	jmp    0x1400249eb
   1400249aa:	mov    rcx,QWORD PTR [rsp+0x98]
   1400249b2:	lea    rcx,[rcx+rcx*4]
   1400249b6:	add    rcx,rcx
   1400249b9:	jmp    0x1400249eb
   1400249bb:	test   di,0xff00
   1400249c0:	jne    0x140024a28
   1400249c2:	movzx  ecx,dil
   1400249c6:	call   0x140029620
   1400249cb:	test   eax,eax
   1400249cd:	je     0x140024a28
   1400249cf:	shl    QWORD PTR [rsp+0x98],0x4
   1400249d8:	movzx  ecx,di
   1400249db:	call   0x140023e00
   1400249e0:	mov    rcx,QWORD PTR [rsp+0x98]
   1400249e8:	mov    di,ax
   1400249eb:	movzx  eax,di
   1400249ee:	add    esi,0x1
   1400249f1:	sub    eax,0x30
   1400249f4:	cdqe   
   1400249f6:	add    rcx,rax
   1400249f9:	cmp    DWORD PTR [rsp+0x68],0x0
   1400249fe:	mov    QWORD PTR [rsp+0x98],rcx
   140024a06:	je     0x140024a0f
   140024a08:	sub    DWORD PTR [rsp+0x50],0x1
   140024a0d:	je     0x140024a5f
   140024a0f:	mov    rcx,QWORD PTR [rsp+0x70]
   140024a14:	add    ebx,0x1
   140024a17:	mov    DWORD PTR [rsp+0x34],ebx
   140024a1b:	call   0x140029d90
   140024a20:	mov    di,ax
   140024a23:	jmp    0x140024967
   140024a28:	sub    ebx,0x1
   140024a2b:	cmp    di,0xffff
   140024a30:	mov    DWORD PTR [rsp+0x34],ebx
   140024a34:	je     0x140024a57
   140024a36:	mov    rdx,QWORD PTR [rsp+0x70]
   140024a3b:	movzx  ecx,di
   140024a3e:	call   0x140029fc0
   140024a43:	mov    rcx,QWORD PTR [rsp+0x98]
   140024a4b:	jmp    0x140024a5f
   140024a4d:	mov    rcx,QWORD PTR [rsp+0x98]
   140024a55:	jmp    0x140024a5f
   140024a57:	mov    rcx,QWORD PTR [rsp+0x98]
   140024a5f:	test   r14b,r14b
   140024a62:	je     0x140024b3a
   140024a68:	neg    rcx
   140024a6b:	mov    QWORD PTR [rsp+0x98],rcx
   140024a73:	jmp    0x140024b3a
   140024a78:	test   bl,bl
   140024a7a:	jne    0x140024b32
   140024a80:	mov    ebx,DWORD PTR [rsp+0x34]
   140024a84:	cmp    ebp,0x78
   140024a87:	je     0x140024ac2
   140024a89:	cmp    ebp,0x70
   140024a8c:	je     0x140024ac2
   140024a8e:	test   di,0xff00
   140024a93:	jne    0x140024b17
   140024a99:	movzx  ecx,dil
   140024a9d:	call   0x140029510
   140024aa2:	test   eax,eax
   140024aa4:	je     0x140024b17
   140024aa6:	cmp    ebp,0x6f
   140024aa9:	jne    0x140024ab7
   140024aab:	cmp    di,0x38
   140024aaf:	jae    0x140024b17
   140024ab1:	shl    r13d,0x3
   140024ab5:	jmp    0x140024ae5
   140024ab7:	lea    eax,[r13+r13*4+0x0]
   140024abc:	lea    r13d,[rax+rax*1]
   140024ac0:	jmp    0x140024ae5
   140024ac2:	test   di,0xff00
   140024ac7:	jne    0x140024b17
   140024ac9:	movzx  ecx,dil
   140024acd:	call   0x140029620
   140024ad2:	test   eax,eax
   140024ad4:	je     0x140024b17
   140024ad6:	movzx  ecx,di
   140024ad9:	shl    r13d,0x4
   140024add:	call   0x140023e00
   140024ae2:	mov    di,ax
   140024ae5:	movzx  eax,di
   140024ae8:	add    esi,0x1
   140024aeb:	cmp    DWORD PTR [rsp+0x68],0x0
   140024af0:	lea    r13d,[r13+rax*1-0x30]
   140024af5:	je     0x140024afe
   140024af7:	sub    DWORD PTR [rsp+0x50],0x1
   140024afc:	je     0x140024b32
   140024afe:	mov    rcx,QWORD PTR [rsp+0x70]
   140024b03:	add    ebx,0x1
   140024b06:	mov    DWORD PTR [rsp+0x34],ebx
   140024b0a:	call   0x140029d90
   140024b0f:	mov    di,ax
   140024b12:	jmp    0x140024a84
   140024b17:	sub    ebx,0x1
   140024b1a:	cmp    di,0xffff
   140024b1f:	mov    DWORD PTR [rsp+0x34],ebx
   140024b23:	je     0x140024b32
   140024b25:	mov    rdx,QWORD PTR [rsp+0x70]
   140024b2a:	movzx  ecx,di
   140024b2d:	call   0x140029fc0
   140024b32:	test   r14b,r14b
   140024b35:	je     0x140024b3a
   140024b37:	neg    r13d
   140024b3a:	cmp    ebp,0x46
   140024b3d:	je     0x1400253d9
   140024b43:	test   esi,esi
   140024b45:	je     0x1400253f1
   140024b4b:	cmp    BYTE PTR [rsp+0x30],0x0
   140024b50:	jne    0x140025229
   140024b56:	add    DWORD PTR [rsp+0x38],0x1
   140024b5b:	jmp    0x140024b74
   140024b5d:	cmp    BYTE PTR [rsp+0x30],0x0
   140024b62:	mov    eax,DWORD PTR [rsp+0x34]
   140024b66:	mov    r13d,eax
   140024b69:	jne    0x14002521f
   140024b6f:	mov    r12d,DWORD PTR [rsp+0x64]
   140024b74:	test   r12d,r12d
   140024b77:	je     0x140024b9b
   140024b79:	mov    rax,QWORD PTR [rsp+0x88]
   140024b81:	mov    rcx,QWORD PTR [rsp+0x98]
   140024b89:	mov    rbp,QWORD PTR [rsp+0x48]
   140024b8e:	mov    r13d,DWORD PTR [rsp+0x34]
   140024b93:	mov    QWORD PTR [rax],rcx
   140024b96:	jmp    0x14002524b
   140024b9b:	cmp    BYTE PTR [rsp+0x40],0x0
   140024ba0:	je     0x140024bbc
   140024ba2:	mov    rax,QWORD PTR [rsp+0x88]
   140024baa:	mov    rbp,QWORD PTR [rsp+0x48]
   140024baf:	mov    DWORD PTR [rax],r13d
   140024bb2:	mov    r13d,DWORD PTR [rsp+0x34]
   140024bb7:	jmp    0x14002524b
   140024bbc:	mov    rax,QWORD PTR [rsp+0x88]
   140024bc4:	mov    rbp,QWORD PTR [rsp+0x48]
   140024bc9:	mov    WORD PTR [rax],r13w
   140024bcd:	mov    r13d,DWORD PTR [rsp+0x34]
   140024bd2:	jmp    0x14002524b
   140024bd7:	xor    ebx,ebx
   140024bd9:	cmp    di,0x2d
   140024bdd:	jne    0x140024bee
   140024bdf:	mov    rax,QWORD PTR [rsp+0x48]
   140024be4:	mov    ebx,0x1
   140024be9:	mov    WORD PTR [rax],di
   140024bec:	jmp    0x140024bf4
   140024bee:	cmp    di,0x2b
   140024bf2:	jne    0x140024c1d
   140024bf4:	mov    r14,QWORD PTR [rsp+0x70]
   140024bf9:	mov    r12d,DWORD PTR [rsp+0x50]
   140024bfe:	mov    r13d,DWORD PTR [rsp+0x34]
   140024c03:	mov    rcx,r14
   140024c06:	sub    r12d,0x1
   140024c0a:	add    r13d,0x1
   140024c0e:	call   0x140029d90
   140024c13:	mov    r8d,DWORD PTR [rsp+0x68]
   140024c18:	mov    di,ax
   140024c1b:	jmp    0x140024c2c
   140024c1d:	mov    r12d,DWORD PTR [rsp+0x50]
   140024c22:	mov    r13d,DWORD PTR [rsp+0x34]
   140024c27:	mov    r14,QWORD PTR [rsp+0x70]
   140024c2c:	test   r8d,r8d
   140024c2f:	mov    eax,0xffffffff
   140024c34:	cmove  r12d,eax
   140024c38:	test   di,0xff00
   140024c3d:	jne    0x140024d08
   140024c43:	movzx  ecx,dil
   140024c47:	call   0x140029510
   140024c4c:	test   eax,eax
   140024c4e:	je     0x140024d08
   140024c54:	mov    eax,r12d
   140024c57:	sub    r12d,0x1
   140024c5b:	test   eax,eax
   140024c5d:	je     0x140024d08
   140024c63:	mov    rbp,QWORD PTR [rsp+0x48]
   140024c68:	add    DWORD PTR [rsp+0x60],0x1
   140024c6d:	movsx  eax,dil
   140024c71:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   140024c76:	add    rbx,0x1
   140024c7a:	cmp    rbx,r15
   140024c7d:	jne    0x140024cef
   140024c7f:	lea    rax,[rsp+0xe0]
   140024c87:	cmp    rbp,rax
   140024c8a:	jne    0x140024ccd
   140024c8c:	mov    edx,0x4
   140024c91:	mov    rcx,r15
   140024c94:	call   0x140021720
   140024c99:	test   rax,rax
   140024c9c:	mov    rbp,rax
   140024c9f:	mov    QWORD PTR [rsp+0x48],rax
   140024ca4:	je     0x140025545
   140024caa:	add    r15,r15
   140024cad:	lea    rdx,[rsp+0xe0]
   140024cb5:	mov    rcx,rax
   140024cb8:	mov    r8,r15
   140024cbb:	mov    DWORD PTR [rsp+0x80],0x1
   140024cc6:	call   0x14001baf0
   140024ccb:	jmp    0x140024cef
   140024ccd:	mov    r8d,0x4
   140024cd3:	mov    rdx,r15
   140024cd6:	mov    rcx,rbp
   140024cd9:	call   0x140021840
   140024cde:	test   rax,rax
   140024ce1:	je     0x140025535
   140024ce7:	mov    QWORD PTR [rsp+0x48],rax
   140024cec:	add    r15,r15
   140024cef:	mov    rcx,r14
   140024cf2:	add    r13d,0x1
   140024cf6:	call   0x140029d90
   140024cfb:	test   ax,0xff00
   140024cff:	mov    di,ax
   140024d02:	je     0x140024c43
   140024d08:	mov    rax,QWORD PTR [rsp+0xb8]
   140024d10:	mov    WORD PTR [rsp+0x94],0x2e
   140024d1a:	lea    r9,[rsp+0xb8]
   140024d22:	mov    rdx,QWORD PTR [rax+0x128]
   140024d29:	movsxd r8,DWORD PTR [rax+0x10c]
   140024d30:	lea    rcx,[rsp+0x94]
   140024d38:	mov    rdx,QWORD PTR [rdx]
   140024d3b:	call   0x140029290
   140024d40:	movzx  r11d,WORD PTR [rsp+0x94]
   140024d49:	movsx  eax,dil
   140024d4d:	cmp    r11d,eax
   140024d50:	jne    0x140024edb
   140024d56:	mov    eax,r12d
   140024d59:	sub    r12d,0x1
   140024d5d:	test   eax,eax
   140024d5f:	je     0x140024edb
   140024d65:	mov    rcx,r14
   140024d68:	add    r13d,0x1
   140024d6c:	call   0x140029d90
   140024d71:	mov    rbp,QWORD PTR [rsp+0x48]
   140024d76:	add    rbx,0x1
   140024d7a:	cmp    rbx,r15
   140024d7d:	mov    di,ax
   140024d80:	movzx  eax,WORD PTR [rsp+0x94]
   140024d88:	mov    WORD PTR [rbp+rbx*2-0x2],ax
   140024d8d:	jne    0x140024e0c
   140024d8f:	lea    rax,[rsp+0xe0]
   140024d97:	cmp    rbp,rax
   140024d9a:	jne    0x140024de0
   140024d9c:	mov    edx,0x4
   140024da1:	mov    rcx,r15
   140024da4:	call   0x140021720
   140024da9:	test   rax,rax
   140024dac:	mov    rbp,rax
   140024daf:	mov    QWORD PTR [rsp+0x48],rax
   140024db4:	je     0x140025525
   140024dba:	add    r15,r15
   140024dbd:	mov    esi,0x1
   140024dc2:	lea    rdx,[rsp+0xe0]
   140024dca:	mov    eax,esi
   140024dcc:	mov    r8,r15
   140024dcf:	mov    rcx,rbp
   140024dd2:	mov    DWORD PTR [rsp+0x80],eax
   140024dd9:	call   0x14001baf0
   140024dde:	jmp    0x140024e11
   140024de0:	mov    r8d,0x4
   140024de6:	mov    rdx,r15
   140024de9:	mov    rcx,rbp
   140024dec:	call   0x140021840
   140024df1:	test   rax,rax
   140024df4:	je     0x140025515
   140024dfa:	mov    rbp,rax
   140024dfd:	mov    QWORD PTR [rsp+0x48],rax
   140024e02:	add    r15,r15
   140024e05:	mov    esi,0x1
   140024e0a:	jmp    0x140024e11
   140024e0c:	mov    esi,0x1
   140024e11:	test   di,0xff00
   140024e16:	jne    0x140024edb
   140024e1c:	data16 data16 xchg ax,ax
   140024e20:	movzx  ecx,dil
   140024e24:	call   0x140029510
   140024e29:	test   eax,eax
   140024e2b:	je     0x140024edb
   140024e31:	mov    eax,r12d
   140024e34:	sub    r12d,0x1
   140024e38:	test   eax,eax
   140024e3a:	je     0x140024edb
   140024e40:	add    DWORD PTR [rsp+0x60],0x1
   140024e45:	mov    WORD PTR [rbp+rbx*2+0x0],di
   140024e4a:	add    rbx,0x1
   140024e4e:	cmp    rbx,r15
   140024e51:	jne    0x140024ec2
   140024e53:	lea    rax,[rsp+0xe0]
   140024e5b:	cmp    rbp,rax
   140024e5e:	jne    0x140024e9d
   140024e60:	mov    edx,0x4
   140024e65:	mov    rcx,r15
   140024e68:	call   0x140021720
   140024e6d:	test   rax,rax
   140024e70:	mov    rbp,rax
   140024e73:	mov    QWORD PTR [rsp+0x48],rax
   140024e78:	je     0x140025505
   140024e7e:	add    r15,r15
   140024e81:	lea    rdx,[rsp+0xe0]
   140024e89:	mov    rcx,rax
   140024e8c:	mov    r8,r15
   140024e8f:	mov    DWORD PTR [rsp+0x80],esi
   140024e96:	call   0x14001baf0
   140024e9b:	jmp    0x140024ec2
   140024e9d:	mov    r8d,0x4
   140024ea3:	mov    rdx,r15
   140024ea6:	mov    rcx,rbp
   140024ea9:	call   0x140021840
   140024eae:	test   rax,rax
   140024eb1:	je     0x1400254f5
   140024eb7:	mov    rbp,rax
   140024eba:	mov    QWORD PTR [rsp+0x48],rax
   140024ebf:	add    r15,r15
   140024ec2:	mov    rcx,r14
   140024ec5:	add    r13d,0x1
   140024ec9:	call   0x140029d90
   140024ece:	test   ax,0xff00
   140024ed2:	mov    di,ax
   140024ed5:	je     0x140024e20
   140024edb:	mov    esi,DWORD PTR [rsp+0x60]
   140024edf:	test   esi,esi
   140024ee1:	je     0x140025116
   140024ee7:	cmp    di,0x65
   140024eeb:	je     0x140024ef7
   140024eed:	cmp    di,0x45
   140024ef1:	jne    0x140025116
   140024ef7:	mov    eax,r12d
   140024efa:	sub    r12d,0x1
   140024efe:	test   eax,eax
   140024f00:	je     0x140025116
   140024f06:	mov    rbp,QWORD PTR [rsp+0x48]
   140024f0b:	add    rbx,0x1
   140024f0f:	cmp    rbx,r15
   140024f12:	mov    WORD PTR [rbp+rbx*2-0x2],0x65
   140024f19:	jne    0x140024f8e
   140024f1b:	lea    rax,[rsp+0xe0]
   140024f23:	cmp    rbp,rax
   140024f26:	jne    0x140024f69
   140024f28:	mov    edx,0x4
   140024f2d:	mov    rcx,r15
   140024f30:	call   0x140021720
   140024f35:	test   rax,rax
   140024f38:	mov    rbp,rax
   140024f3b:	mov    QWORD PTR [rsp+0x48],rax
   140024f40:	je     0x1400254e2
   140024f46:	add    r15,r15
   140024f49:	lea    rdx,[rsp+0xe0]
   140024f51:	mov    rcx,rax
   140024f54:	mov    r8,r15
   140024f57:	mov    DWORD PTR [rsp+0x80],0x1
   140024f62:	call   0x14001baf0
   140024f67:	jmp    0x140024f8e
   140024f69:	mov    r8d,0x4
   140024f6f:	mov    rdx,r15
   140024f72:	mov    rcx,rbp
   140024f75:	call   0x140021840
   140024f7a:	test   rax,rax
   140024f7d:	je     0x1400254cf
   140024f83:	mov    rbp,rax
   140024f86:	mov    QWORD PTR [rsp+0x48],rax
   140024f8b:	add    r15,r15
   140024f8e:	mov    rcx,r14
   140024f91:	add    r13d,0x1
   140024f95:	call   0x140029d90
   140024f9a:	cmp    ax,0x2d
   140024f9e:	mov    di,ax
   140024fa1:	jne    0x140025027
   140024fa7:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   140024fac:	add    rbx,0x1
   140024fb0:	cmp    rbx,r15
   140024fb3:	jne    0x14002502d
   140024fb5:	lea    rax,[rsp+0xe0]
   140024fbd:	cmp    rbp,rax
   140024fc0:	jne    0x140025003
   140024fc2:	mov    edx,0x4
   140024fc7:	mov    rcx,r15
   140024fca:	call   0x140021720
   140024fcf:	test   rax,rax
   140024fd2:	mov    rbp,rax
   140024fd5:	mov    QWORD PTR [rsp+0x48],rax
   140024fda:	je     0x1400254bc
   140024fe0:	add    r15,r15
   140024fe3:	lea    rdx,[rsp+0xe0]
   140024feb:	mov    rcx,rax
   140024fee:	mov    r8,r15
   140024ff1:	mov    DWORD PTR [rsp+0x80],0x1
   140024ffc:	call   0x14001baf0
   140025001:	jmp    0x14002502d
   140025003:	mov    r8d,0x4
   140025009:	mov    rdx,r15
   14002500c:	mov    rcx,rbp
   14002500f:	call   0x140021840
   140025014:	test   rax,rax
   140025017:	je     0x1400254a9
   14002501d:	mov    QWORD PTR [rsp+0x48],rax
   140025022:	add    r15,r15
   140025025:	jmp    0x14002502d
   140025027:	cmp    di,0x2b
   14002502b:	jne    0x14002504c
   14002502d:	mov    eax,r12d
   140025030:	sub    r12d,0x1
   140025034:	test   eax,eax
   140025036:	jne    0x14002503d
   140025038:	xor    r12d,r12d
   14002503b:	jmp    0x14002504c
   14002503d:	mov    rcx,r14
   140025040:	add    r13d,0x1
   140025044:	call   0x140029d90
   140025049:	mov    di,ax
   14002504c:	test   di,0xff00
   140025051:	jne    0x140025116
   140025057:	movzx  ecx,dil
   14002505b:	call   0x140029510
   140025060:	test   eax,eax
   140025062:	je     0x140025116
   140025068:	mov    eax,r12d
   14002506b:	sub    r12d,0x1
   14002506f:	test   eax,eax
   140025071:	je     0x140025116
   140025077:	mov    rbp,QWORD PTR [rsp+0x48]
   14002507c:	add    rbx,0x1
   140025080:	add    esi,0x1
   140025083:	cmp    rbx,r15
   140025086:	mov    WORD PTR [rbp+rbx*2-0x2],di
   14002508b:	jne    0x1400250fd
   14002508d:	lea    rax,[rsp+0xe0]
   140025095:	cmp    rbp,rax
   140025098:	jne    0x1400250db
   14002509a:	mov    edx,0x4
   14002509f:	mov    rcx,r15
   1400250a2:	call   0x140021720
   1400250a7:	test   rax,rax
   1400250aa:	mov    rbp,rax
   1400250ad:	mov    QWORD PTR [rsp+0x48],rax
   1400250b2:	je     0x140025496
   1400250b8:	add    r15,r15
   1400250bb:	lea    rdx,[rsp+0xe0]
   1400250c3:	mov    rcx,rax
   1400250c6:	mov    r8,r15
   1400250c9:	mov    DWORD PTR [rsp+0x80],0x1
   1400250d4:	call   0x14001baf0
   1400250d9:	jmp    0x1400250fd
   1400250db:	mov    r8d,0x4
   1400250e1:	mov    rdx,r15
   1400250e4:	mov    rcx,rbp
   1400250e7:	call   0x140021840
   1400250ec:	test   rax,rax
   1400250ef:	je     0x140025483
   1400250f5:	mov    QWORD PTR [rsp+0x48],rax
   1400250fa:	add    r15,r15
   1400250fd:	mov    rcx,r14
   140025100:	add    r13d,0x1
   140025104:	call   0x140029d90
   140025109:	test   ax,0xff00
   14002510d:	mov    di,ax
   140025110:	je     0x140025057
   140025116:	sub    r13d,0x1
   14002511a:	cmp    di,0xffff
   14002511f:	mov    DWORD PTR [rsp+0x34],r13d
   140025124:	je     0x140025131
   140025126:	mov    rdx,r14
   140025129:	movzx  ecx,di
   14002512c:	call   0x140029fc0
   140025131:	test   esi,esi
   140025133:	je     0x1400253c1
   140025139:	cmp    BYTE PTR [rsp+0x30],0x0
   14002513e:	jne    0x140025218
   140025144:	mov    r12d,DWORD PTR [rsp+0x38]
   140025149:	mov    rbp,QWORD PTR [rsp+0x48]
   14002514e:	mov    WORD PTR [rbp+rbx*2+0x0],0x0
   140025155:	lea    rbx,[r15+r15*1+0x2]
   14002515a:	add    r12d,0x1
   14002515e:	mov    rcx,rbx
   140025161:	mov    DWORD PTR [rsp+0x38],r12d
   140025166:	call   0x1400216b0
   14002516b:	test   rax,rax
   14002516e:	mov    rsi,rax
   140025171:	je     0x140025475
   140025177:	lea    rcx,[rbx-0x1]
   14002517b:	mov    r9,rbp
   14002517e:	mov    r8,rbx
   140025181:	mov    QWORD PTR [rsp+0x20],rcx
   140025186:	xor    ecx,ecx
   140025188:	mov    rdx,rax
   14002518b:	call   0x14002a710
   140025190:	test   eax,eax
   140025192:	je     0x1400251b6
   140025194:	cmp    eax,0x16
   140025197:	je     0x14002519e
   140025199:	cmp    eax,0x22
   14002519c:	jne    0x1400251b6
   14002519e:	xor    r9d,r9d
   1400251a1:	xor    r8d,r8d
   1400251a4:	xor    edx,edx
   1400251a6:	xor    ecx,ecx
   1400251a8:	mov    QWORD PTR [rsp+0x20],0x0
   1400251b1:	call   0x14001dd90
   1400251b6:	movsx  ebx,BYTE PTR [rsp+0x40]
   1400251bb:	mov    rcx,QWORD PTR [rip+0x1bb76]        # 0x140040d38
   1400251c2:	sub    ebx,0x1
   1400251c5:	call   0x14001d640
   1400251ca:	mov    rdx,QWORD PTR [rsp+0x88]
   1400251d2:	lea    r9,[rsp+0xb8]
   1400251da:	mov    r8,rsi
   1400251dd:	mov    ecx,ebx
   1400251df:	call   rax
   1400251e1:	mov    rcx,rsi
   1400251e4:	call   0x14001a540
   1400251e9:	jmp    0x14002524b
   1400251eb:	mov    cl,BYTE PTR [rsp+0x30]
   1400251ef:	cmp    WORD PTR [r9],di
   1400251f3:	jne    0x14002536b
   1400251f9:	add    BYTE PTR [rsp+0x42],0xff
   1400251fe:	mov    rbp,QWORD PTR [rsp+0x48]
   140025203:	mov    r13d,DWORD PTR [rsp+0x34]
   140025208:	test   cl,cl
   14002520a:	cmove  r10,r11
   14002520e:	mov    QWORD PTR [rsp+0xa8],r10
   140025216:	jmp    0x14002524b
   140025218:	mov    rbp,QWORD PTR [rsp+0x48]
   14002521d:	jmp    0x14002524b
   14002521f:	mov    rbp,QWORD PTR [rsp+0x48]
   140025224:	mov    r13d,eax
   140025227:	jmp    0x14002524b
   140025229:	mov    rbp,QWORD PTR [rsp+0x48]
   14002522e:	mov    r13d,DWORD PTR [rsp+0x34]
   140025233:	jmp    0x14002524b
   140025235:	mov    rbp,QWORD PTR [rsp+0x48]
   14002523a:	mov    r13d,DWORD PTR [rsp+0x34]
   14002523f:	jmp    0x14002524b
   140025241:	mov    rbp,QWORD PTR [rsp+0x48]
   140025246:	mov    r13d,DWORD PTR [rsp+0x34]
   14002524b:	mov    rsi,QWORD PTR [rsp+0x78]
   140025250:	add    BYTE PTR [rsp+0x42],0x1
   140025255:	mov    r12,QWORD PTR [rsp+0x70]
   14002525a:	add    rsi,0x2
   14002525e:	mov    QWORD PTR [rsp+0x78],rsi
   140025263:	jmp    0x140025293
   140025265:	add    r13d,0x1
   140025269:	mov    rcx,r12
   14002526c:	mov    DWORD PTR [rsp+0x34],r13d
   140025271:	call   0x140029d90
   140025276:	mov    rsi,QWORD PTR [rsp+0x78]
   14002527b:	mov    di,ax
   14002527e:	movzx  eax,WORD PTR [rsi]
   140025281:	add    rsi,0x2
   140025285:	cmp    ax,di
   140025288:	mov    QWORD PTR [rsp+0x78],rsi
   14002528d:	jne    0x140025398
   140025293:	cmp    di,0xffff
   140025298:	jne    0x1400252af
   14002529a:	cmp    WORD PTR [rsi],0x25
   14002529e:	jne    0x140025565
   1400252a4:	cmp    WORD PTR [rsi+0x2],0x6e
   1400252a9:	jne    0x140025575
   1400252af:	mov    ax,WORD PTR [rsi]
   1400252b2:	test   ax,ax
   1400252b5:	jne    0x140024000
   1400252bb:	mov    r11,QWORD PTR [rsp+0x58]
   1400252c0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400252c5:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400252c9:	jmp    0x140025583
   1400252ce:	cmp    di,0xffff
   1400252d3:	je     0x140025447
   1400252d9:	mov    rdx,QWORD PTR [rsp+0x70]
   1400252de:	movzx  ecx,di
   1400252e1:	call   0x140029fc0
   1400252e6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400252eb:	mov    r11,QWORD PTR [rsp+0x58]
   1400252f0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400252f5:	mov    ebx,r14d
   1400252f8:	jmp    0x140025583
   1400252fd:	mov    BYTE PTR [rax],0x0
   140025300:	call   0x14001b280
   140025305:	mov    rbp,QWORD PTR [rsp+0x48]
   14002530a:	mov    r11,QWORD PTR [rsp+0x58]
   14002530f:	mov    r12d,DWORD PTR [rsp+0x38]
   140025314:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025318:	mov    DWORD PTR [rax],0xc
   14002531e:	jmp    0x140025583
   140025323:	call   0x14001b280
   140025328:	test   r13b,r13b
   14002532b:	mov    DWORD PTR [rax],0xc
   140025331:	je     0x140025350
   140025333:	mov    rbp,QWORD PTR [rsp+0x48]
   140025338:	mov    r11,QWORD PTR [rsp+0x58]
   14002533d:	mov    r12d,DWORD PTR [rsp+0x38]
   140025342:	mov    WORD PTR [rbx],0x0
   140025347:	mov    ebx,DWORD PTR [rsp+0x3c]
   14002534b:	jmp    0x140025583
   140025350:	mov    rbp,QWORD PTR [rsp+0x48]
   140025355:	mov    r11,QWORD PTR [rsp+0x58]
   14002535a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002535f:	mov    BYTE PTR [rbx],0x0
   140025362:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025366:	jmp    0x140025583
   14002536b:	cmp    di,0xffff
   140025370:	je     0x14002537f
   140025372:	mov    rdx,QWORD PTR [rsp+0x70]
   140025377:	movzx  ecx,di
   14002537a:	call   0x140029fc0
   14002537f:	mov    rbp,QWORD PTR [rsp+0x48]
   140025384:	mov    r11,QWORD PTR [rsp+0x58]
   140025389:	mov    r12d,DWORD PTR [rsp+0x38]
   14002538e:	mov    ebx,0x1
   140025393:	jmp    0x140025583
   140025398:	cmp    di,0xffff
   14002539d:	je     0x140025555
   1400253a3:	mov    rdx,r12
   1400253a6:	movzx  ecx,di
   1400253a9:	call   0x140029fc0
   1400253ae:	mov    r11,QWORD PTR [rsp+0x58]
   1400253b3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400253b8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400253bc:	jmp    0x140025583
   1400253c1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400253c6:	mov    r11,QWORD PTR [rsp+0x58]
   1400253cb:	mov    r12d,DWORD PTR [rsp+0x38]
   1400253d0:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400253d4:	jmp    0x140025583
   1400253d9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400253de:	mov    r11,QWORD PTR [rsp+0x58]
   1400253e3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400253e8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400253ec:	jmp    0x140025583
   1400253f1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400253f6:	mov    r11,QWORD PTR [rsp+0x58]
   1400253fb:	mov    r12d,DWORD PTR [rsp+0x38]
   140025400:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025404:	jmp    0x140025583
   140025409:	mov    rbp,QWORD PTR [rsp+0x48]
   14002540e:	mov    r11,QWORD PTR [rsp+0x58]
   140025413:	mov    r12d,DWORD PTR [rsp+0x38]
   140025418:	mov    ebx,DWORD PTR [rsp+0x3c]
   14002541c:	jmp    0x140025583
   140025421:	mov    rbp,QWORD PTR [rsp+0x48]
   140025426:	mov    r12d,DWORD PTR [rsp+0x38]
   14002542b:	mov    ebx,DWORD PTR [rsp+0x3c]
   14002542f:	jmp    0x140025583
   140025434:	mov    rbp,QWORD PTR [rsp+0x48]
   140025439:	mov    r12d,DWORD PTR [rsp+0x38]
   14002543e:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025442:	jmp    0x140025583
   140025447:	mov    rbp,QWORD PTR [rsp+0x48]
   14002544c:	mov    r11,QWORD PTR [rsp+0x58]
   140025451:	mov    r12d,DWORD PTR [rsp+0x38]
   140025456:	mov    ebx,r14d
   140025459:	jmp    0x140025583
   14002545e:	mov    rbp,QWORD PTR [rsp+0x48]
   140025463:	mov    r11,QWORD PTR [rsp+0x58]
   140025468:	mov    r12d,DWORD PTR [rsp+0x38]
   14002546d:	mov    ebx,r14d
   140025470:	jmp    0x140025583
   140025475:	mov    r11,QWORD PTR [rsp+0x58]
   14002547a:	mov    ebx,DWORD PTR [rsp+0x3c]
   14002547e:	jmp    0x140025583
   140025483:	mov    r11,QWORD PTR [rsp+0x58]
   140025488:	mov    r12d,DWORD PTR [rsp+0x38]
   14002548d:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025491:	jmp    0x140025583
   140025496:	mov    r11,QWORD PTR [rsp+0x58]
   14002549b:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254a0:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400254a4:	jmp    0x140025583
   1400254a9:	mov    r11,QWORD PTR [rsp+0x58]
   1400254ae:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254b3:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400254b7:	jmp    0x140025583
   1400254bc:	mov    r11,QWORD PTR [rsp+0x58]
   1400254c1:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254c6:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400254ca:	jmp    0x140025583
   1400254cf:	mov    r11,QWORD PTR [rsp+0x58]
   1400254d4:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254d9:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400254dd:	jmp    0x140025583
   1400254e2:	mov    r11,QWORD PTR [rsp+0x58]
   1400254e7:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254ec:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400254f0:	jmp    0x140025583
   1400254f5:	mov    r11,QWORD PTR [rsp+0x58]
   1400254fa:	mov    r12d,DWORD PTR [rsp+0x38]
   1400254ff:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025503:	jmp    0x140025583
   140025505:	mov    r11,QWORD PTR [rsp+0x58]
   14002550a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002550f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025513:	jmp    0x140025583
   140025515:	mov    r11,QWORD PTR [rsp+0x58]
   14002551a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002551f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025523:	jmp    0x140025583
   140025525:	mov    r11,QWORD PTR [rsp+0x58]
   14002552a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002552f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025533:	jmp    0x140025583
   140025535:	mov    r11,QWORD PTR [rsp+0x58]
   14002553a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002553f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025543:	jmp    0x140025583
   140025545:	mov    r11,QWORD PTR [rsp+0x58]
   14002554a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002554f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025553:	jmp    0x140025583
   140025555:	mov    r11,QWORD PTR [rsp+0x58]
   14002555a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002555f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025563:	jmp    0x140025583
   140025565:	mov    r11,QWORD PTR [rsp+0x58]
   14002556a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002556f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025573:	jmp    0x140025583
   140025575:	mov    r11,QWORD PTR [rsp+0x58]
   14002557a:	mov    r12d,DWORD PTR [rsp+0x38]
   14002557f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140025583:	mov    eax,DWORD PTR [rsp+0xb0]
   14002558a:	cmp    eax,0x1
   14002558d:	jne    0x140025597
   14002558f:	mov    rcx,r11
   140025592:	call   0x14001a540
   140025597:	mov    eax,DWORD PTR [rsp+0x80]
   14002559e:	cmp    eax,0x1
   1400255a1:	jne    0x1400255ab
   1400255a3:	mov    rcx,rbp
   1400255a6:	call   0x14001a540
   1400255ab:	cmp    di,0xffff
   1400255b0:	jne    0x1400255e3
   1400255b2:	test   r12d,r12d
   1400255b5:	jne    0x1400255c5
   1400255b7:	movzx  eax,BYTE PTR [rsp+0x42]
   1400255bc:	test   al,al
   1400255be:	jne    0x1400255c5
   1400255c0:	or     eax,0xffffffff
   1400255c3:	jmp    0x1400255c8
   1400255c5:	mov    eax,r12d
   1400255c8:	cmp    BYTE PTR [rsp+0xd0],0x0
   1400255d0:	je     0x140025649
   1400255d2:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400255da:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400255e1:	jmp    0x140025649
   1400255e3:	cmp    ebx,0x1
   1400255e6:	jne    0x140025629
   1400255e8:	call   0x14001b280
   1400255ed:	xor    r9d,r9d
   1400255f0:	xor    r8d,r8d
   1400255f3:	xor    edx,edx
   1400255f5:	xor    ecx,ecx
   1400255f7:	mov    QWORD PTR [rsp+0x20],0x0
   140025600:	mov    DWORD PTR [rax],0x16
   140025606:	call   0x14001de30
   14002560b:	cmp    BYTE PTR [rsp+0xd0],0x0
   140025613:	je     0x140025624
   140025615:	mov    rcx,QWORD PTR [rsp+0xc8]
   14002561d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025624:	mov    eax,r12d
   140025627:	jmp    0x140025649
   140025629:	mov    r11,QWORD PTR [rsp+0xc8]
   140025631:	mov    ecx,DWORD PTR [rsp+0x38]
   140025635:	cmp    BYTE PTR [rsp+0xd0],0x0
   14002563d:	je     0x140025647
   14002563f:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140025647:	mov    eax,ecx
   140025649:	mov    r13,QWORD PTR [rsp+0x3b8]
   140025651:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140025659:	xor    rcx,rsp
   14002565c:	call   0x140019370
   140025661:	add    rsp,0x3c0
   140025668:	pop    r15
   14002566a:	pop    r14
   14002566c:	pop    r12
   14002566e:	pop    rdi
   14002566f:	pop    rsi
   140025670:	pop    rbp
   140025671:	pop    rbx
   140025672:	ret    
   140025673:	nop
   140025674:	pop    rdx
   140025675:	rex.X add al,BYTE PTR [rax]
   140025678:	rex.X add al,BYTE PTR [eax]
   14002567c:	outs   dx,DWORD PTR ds:[rsi]
   14002567d:	add    al,BYTE PTR [r8]
   140025680:	sbb    BYTE PTR [rdx+0x2],al
   140025683:	add    BYTE PTR [rsi+0x41],bl
   140025686:	add    al,BYTE PTR [rax]
   140025688:	and    al,BYTE PTR [rdx+0x2]
   14002568b:	add    BYTE PTR [rax+0x42],dl
   14002568e:	add    al,BYTE PTR [rax]
   140025690:	clc    
   140025691:	add    al,BYTE PTR [r8]
   140025694:	add    BYTE PTR [rdi],al
   140025696:	(bad)  
   140025697:	(bad)  
   140025698:	(bad)  
   140025699:	(bad)  
   14002569a:	(bad)  
   14002569b:	(bad)  
   14002569c:	(bad)  
   14002569d:	(bad)  
   14002569e:	(bad)  
   14002569f:	(bad)  
   1400256a0:	(bad)  
   1400256a1:	(bad)  
   1400256a2:	(bad)  
   1400256a3:	(bad)  
   1400256a4:	(bad)  
   1400256a5:	(bad)  
   1400256a6:	(bad)  
   1400256a7:	(bad)  
   1400256a8:	(bad)  
   1400256a9:	(bad)  
   1400256aa:	(bad)  
   1400256ab:	(bad)  
   1400256ac:	(bad)  
   1400256ad:	(bad)  
   1400256ae:	(bad)  
   1400256af:	(bad)  
   1400256b0:	add    DWORD PTR [rdi],eax
   1400256b2:	(bad)  
   1400256b3:	add    al,BYTE PTR [rdi]
   1400256b5:	(bad)  
   1400256b6:	add    eax,DWORD PTR [rdi]
   1400256b8:	add    DWORD PTR [rdi],eax
   1400256ba:	(bad)  
   1400256bb:	(bad)  
   1400256bc:	(bad)  
   1400256bd:	(bad)  
   1400256be:	(bad)  
   1400256bf:	(bad)  
   1400256c0:	(bad)  
   1400256c1:	(bad)  
   1400256c2:	(bad)  
   1400256c3:	(bad)  
   1400256c4:	(bad)  
   1400256c5:	(bad)  
   1400256c6:	(bad)  
   1400256c7:	(bad)  
   1400256c8:	(bad)  
   1400256c9:	(bad)  
   1400256ca:	(bad)  
   1400256cb:	(bad)  
   1400256cc:	(bad)  
   1400256cd:	(bad)  
   1400256ce:	(bad)  
   1400256cf:	(bad)  
   1400256d0:	(bad)  
   1400256d1:	(bad)  
   1400256d2:	add    al,0x7
   1400256d4:	(bad)  
   1400256d5:	(bad)  
   1400256d6:	add    eax,0x7070707
   1400256db:	(bad)  
   1400256dc:	(bad)  
   1400256dd:	(bad)  
   1400256de:	(bad)  
   1400256df:	(bad)  
   1400256e0:	(bad)  
   1400256e1:	(bad)  
   1400256e2:	xchg   ax,ax
   1400256e4:	sub    DWORD PTR [rdx+rax*1+0x0],eax
   1400256e8:	icebp  
   1400256e9:	rex.W add al,BYTE PTR [rax]
   1400256ec:	xlat   BYTE PTR ds:[rbx]
   1400256ed:	rex.WXB add al,BYTE PTR [r8]
   1400256f0:	xlat   BYTE PTR ds:[rbx]
   1400256f1:	rex.WXB add al,BYTE PTR [r8]
   1400256f4:	xlat   BYTE PTR ds:[rbx]
   1400256f5:	rex.WXB add al,BYTE PTR [r8]
   1400256f8:	jmp    0x14002574b
   1400256fa:	add    al,BYTE PTR [rax]
   1400256fc:	stos   DWORD PTR es:[rdi],eax
   1400256fd:	rex.RXB add r8b,BYTE PTR [r8]
   140025700:	jmp    0x140025753
   140025702:	add    al,BYTE PTR [rax]
   140025704:	jmp    0x140025757
   140025706:	add    al,BYTE PTR [rax]
   140025708:	jmp    0x14002575b
   14002570a:	add    al,BYTE PTR [rax]
   14002570c:	jmp    0x14002575f
   14002570e:	add    al,BYTE PTR [rax]
   140025710:	pop    rbp
   140025711:	rex.WXB add al,BYTE PTR [r8]
   140025714:	icebp  
   140025715:	rex.W add al,BYTE PTR [rax]
   140025718:	(bad)  
   140025719:	rex.W add al,BYTE PTR [rax]
   14002571c:	jmp    0x14002576f
   14002571e:	add    al,BYTE PTR [rax]
   140025720:	jmp    0x140025773
   140025722:	add    al,BYTE PTR [rax]
   140025724:	push   rsp
   140025725:	add    r8b,BYTE PTR [rax]
   140025728:	jmp    0x14002577b
   14002572a:	add    al,BYTE PTR [rax]
   14002572c:	icebp  
   14002572d:	rex.W add al,BYTE PTR [rax]
   140025730:	jmp    0x140025783
   140025732:	add    al,BYTE PTR [rax]
   140025734:	jmp    0x140025787
   140025736:	add    al,BYTE PTR [rax]
   140025738:	mov    al,0x47
   14002573a:	add    al,BYTE PTR [rax]
   14002573c:	jmp    0x14002578f
   14002573e:	add    al,BYTE PTR [rax]
   140025740:	jmp    0x140025793
   140025742:	add    al,BYTE PTR [rax]
   140025744:	push   0x44
   140025746:	add    al,BYTE PTR [rax]
   140025748:	int3   
   140025749:	int3   
   14002574a:	int3   
   14002574b:	int3   
   14002574c:	int3   
   14002574d:	int3   
   14002574e:	int3   
   14002574f:	int3   
   140025750:	int3   
   140025751:	int3   
   140025752:	int3   
   140025753:	int3   
   140025754:	int3   
   140025755:	int3   
   140025756:	data16 data16 xchg ax,ax
   14002575a:	data16 data16 xchg ax,ax
   14002575e:	xchg   ax,ax
   140025760:	sub    rsp,0x4d8
   140025767:	xor    r8,r8
   14002576a:	xor    r9,r9
   14002576d:	mov    QWORD PTR [rsp+0x20],rsp
   140025772:	mov    QWORD PTR [rsp+0x28],r8
   140025777:	call   0x14002fe5c
   14002577c:	add    rsp,0x4d8
   140025783:	ret    
   140025784:	int3   
   140025785:	int3   
   140025786:	int3   
   140025787:	int3   
   140025788:	int3   
   140025789:	int3   
   14002578a:	data16 xchg ax,ax
   14002578d:	data16 xchg ax,ax
   140025790:	mov    QWORD PTR [rsp+0x8],rcx
   140025795:	mov    QWORD PTR [rsp+0x18],rdx
   14002579a:	mov    DWORD PTR [rsp+0x10],r8d
   14002579f:	mov    r9,0x19930520
   1400257a6:	jmp    0x1400257b0
   1400257a8:	int3   
   1400257a9:	int3   
   1400257aa:	int3   
   1400257ab:	int3   
   1400257ac:	int3   
   1400257ad:	int3   
   1400257ae:	xchg   ax,ax
   1400257b0:	ret    
   1400257b1:	int3   
   1400257b2:	int3   
   1400257b3:	int3   
   1400257b4:	int3   
   1400257b5:	int3   
   1400257b6:	int3   
   1400257b7:	data16 data16 xchg ax,ax
   1400257bb:	data16 data16 xchg ax,ax
   1400257bf:	nop
   1400257c0:	ret    
   1400257c1:	int3   
   1400257c2:	int3   
   1400257c3:	int3   
   1400257c4:	int3   
   1400257c5:	int3   
   1400257c6:	int3   
   1400257c7:	int3   
   1400257c8:	int3   
   1400257c9:	int3   
   1400257ca:	int3   
   1400257cb:	int3   
   1400257cc:	int3   
   1400257cd:	int3   
   1400257ce:	int3   
   1400257cf:	int3   
   1400257d0:	sub    rsp,0x5a8
   1400257d7:	test   BYTE PTR [rip+0x1b5d2],0x1        # 0x140040db0
   1400257de:	je     0x1400257ea
   1400257e0:	mov    ecx,0xa
   1400257e5:	call   0x14001c270
   1400257ea:	call   0x140021d70
   1400257ef:	test   rax,rax
   1400257f2:	je     0x1400257fe
   1400257f4:	mov    ecx,0x16
   1400257f9:	call   0x140021d80
   1400257fe:	test   BYTE PTR [rip+0x1b5ab],0x2        # 0x140040db0
   140025805:	je     0x140025866
   140025807:	lea    rcx,[rsp+0xd0]
   14002580f:	call   QWORD PTR [rip+0xba0b]        # 0x140031220
   140025815:	lea    rcx,[rsp+0x30]
   14002581a:	xor    edx,edx
   14002581c:	mov    r8d,0x98
   140025822:	call   0x14001b520
   140025827:	mov    rax,QWORD PTR [rsp+0x5a8]
   14002582f:	xor    ecx,ecx
   140025831:	mov    QWORD PTR [rsp+0x40],rax
   140025836:	lea    rax,[rsp+0x30]
   14002583b:	mov    DWORD PTR [rsp+0x30],0x40000015
   140025843:	mov    QWORD PTR [rsp+0x20],rax
   140025848:	lea    rax,[rsp+0xd0]
   140025850:	mov    QWORD PTR [rsp+0x28],rax
   140025855:	call   QWORD PTR [rip+0xb905]        # 0x140031160
   14002585b:	lea    rcx,[rsp+0x20]
   140025860:	call   QWORD PTR [rip+0xbc42]        # 0x1400314a8
   140025866:	mov    ecx,0x3
   14002586b:	call   0x140019d10
   140025870:	int3   
   140025871:	int3   
   140025872:	int3   
   140025873:	int3   
   140025874:	int3   
   140025875:	int3   
   140025876:	int3   
   140025877:	int3   
   140025878:	int3   
   140025879:	int3   
   14002587a:	int3   
   14002587b:	int3   
   14002587c:	int3   
   14002587d:	int3   
   14002587e:	int3   
   14002587f:	int3   
   140025880:	rex push rdi
   140025882:	sub    rsp,0x40
   140025886:	mov    QWORD PTR [rsp+0x50],rbx
   14002588b:	mov    QWORD PTR [rsp+0x58],rbp
   140025890:	xor    bpl,bpl
   140025893:	test   rdx,rdx
   140025896:	mov    QWORD PTR [rsp+0x68],r12
   14002589b:	mov    rbx,rcx
   14002589e:	mov    BYTE PTR [rsp+0x38],bpl
   1400258a3:	jne    0x140025919
   1400258a5:	mov    QWORD PTR [rsp+0x60],rsi
   1400258aa:	call   0x14001d930
   1400258af:	mov    r12,QWORD PTR [rax+0xc0]
   1400258b6:	mov    rsi,QWORD PTR [rax+0xb8]
   1400258bd:	mov    rdi,rax
   1400258c0:	cmp    r12,QWORD PTR [rip+0x1b1c9]        # 0x140040a90
   1400258c7:	je     0x1400258df
   1400258c9:	mov    edx,DWORD PTR [rax+0xc8]
   1400258cf:	test   DWORD PTR [rip+0x1b043],edx        # 0x140040918
   1400258d5:	jne    0x1400258df
   1400258d7:	call   0x14001ed60
   1400258dc:	mov    r12,rax
   1400258df:	cmp    rsi,QWORD PTR [rip+0x1af2a]        # 0x140040810
   1400258e6:	mov    rsi,QWORD PTR [rsp+0x60]
   1400258eb:	je     0x140025900
   1400258ed:	mov    ecx,DWORD PTR [rdi+0xc8]
   1400258f3:	test   DWORD PTR [rip+0x1b01f],ecx        # 0x140040918
   1400258f9:	jne    0x140025900
   1400258fb:	call   0x14001e210
   140025900:	mov    ecx,DWORD PTR [rdi+0xc8]
   140025906:	test   cl,0x2
   140025909:	jne    0x14002593b
   14002590b:	or     ecx,0x2
   14002590e:	mov    bpl,0x1
   140025911:	mov    DWORD PTR [rdi+0xc8],ecx
   140025917:	jmp    0x14002593b
   140025919:	mov    rax,QWORD PTR [rdx]
   14002591c:	lea    rcx,[rsp+0x20]
   140025921:	mov    QWORD PTR [rcx],rax
   140025924:	mov    rax,QWORD PTR [rdx+0x8]
   140025928:	mov    QWORD PTR [rcx+0x8],rax
   14002592c:	movzx  ebp,BYTE PTR [rsp+0x38]
   140025931:	mov    rdi,QWORD PTR [rsp+0x30]
   140025936:	mov    r12,QWORD PTR [rsp+0x20]
   14002593b:	movsx  ecx,BYTE PTR [rbx]
   14002593e:	call   0x14002acc0
   140025943:	cmp    eax,0x65
   140025946:	je     0x140025961
   140025948:	data16 data16 xchg ax,ax
   14002594c:	data16 data16 xchg ax,ax
   140025950:	movzx  ecx,BYTE PTR [rbx+0x1]
   140025954:	add    rbx,0x1
   140025958:	call   0x140029510
   14002595d:	test   eax,eax
   14002595f:	jne    0x140025950
   140025961:	movsx  ecx,BYTE PTR [rbx]
   140025964:	call   0x14002acc0
   140025969:	cmp    eax,0x78
   14002596c:	jne    0x140025972
   14002596e:	add    rbx,0x2
   140025972:	mov    rax,QWORD PTR [r12+0x128]
   14002597a:	movzx  edx,BYTE PTR [rbx]
   14002597d:	mov    r12,QWORD PTR [rsp+0x68]
   140025982:	mov    rcx,QWORD PTR [rax]
   140025985:	add    rbx,0x1
   140025989:	movzx  eax,BYTE PTR [rcx]
   14002598c:	mov    BYTE PTR [rbx-0x1],al
   14002598f:	nop
   140025990:	movzx  eax,BYTE PTR [rbx]
   140025993:	mov    BYTE PTR [rbx],dl
   140025995:	add    rbx,0x1
   140025999:	mov    dl,al
   14002599b:	movzx  eax,BYTE PTR [rbx-0x1]
   14002599f:	test   al,al
   1400259a1:	jne    0x140025990
   1400259a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400259a8:	test   bpl,bpl
   1400259ab:	mov    rbp,QWORD PTR [rsp+0x58]
   1400259b0:	je     0x1400259b9
   1400259b2:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   1400259b9:	add    rsp,0x40
   1400259bd:	pop    rdi
   1400259be:	ret    
   1400259bf:	int3   
   1400259c0:	rex push rdi
   1400259c2:	sub    rsp,0x40
   1400259c6:	mov    QWORD PTR [rsp+0x50],rbx
   1400259cb:	mov    QWORD PTR [rsp+0x58],rbp
   1400259d0:	mov    QWORD PTR [rsp+0x68],r12
   1400259d5:	xor    r12b,r12b
   1400259d8:	test   rdx,rdx
   1400259db:	mov    rbx,rcx
   1400259de:	mov    BYTE PTR [rsp+0x38],r12b
   1400259e3:	jne    0x140025a59
   1400259e5:	mov    QWORD PTR [rsp+0x60],rsi
   1400259ea:	call   0x14001d930
   1400259ef:	mov    rbp,QWORD PTR [rax+0xc0]
   1400259f6:	mov    rsi,QWORD PTR [rax+0xb8]
   1400259fd:	mov    rdi,rax
   140025a00:	cmp    rbp,QWORD PTR [rip+0x1b089]        # 0x140040a90
   140025a07:	je     0x140025a1f
   140025a09:	mov    edx,DWORD PTR [rax+0xc8]
   140025a0f:	test   DWORD PTR [rip+0x1af03],edx        # 0x140040918
   140025a15:	jne    0x140025a1f
   140025a17:	call   0x14001ed60
   140025a1c:	mov    rbp,rax
   140025a1f:	cmp    rsi,QWORD PTR [rip+0x1adea]        # 0x140040810
   140025a26:	mov    rsi,QWORD PTR [rsp+0x60]
   140025a2b:	je     0x140025a40
   140025a2d:	mov    ecx,DWORD PTR [rdi+0xc8]
   140025a33:	test   DWORD PTR [rip+0x1aedf],ecx        # 0x140040918
   140025a39:	jne    0x140025a40
   140025a3b:	call   0x14001e210
   140025a40:	mov    ecx,DWORD PTR [rdi+0xc8]
   140025a46:	test   cl,0x2
   140025a49:	jne    0x140025a7c
   140025a4b:	or     ecx,0x2
   140025a4e:	mov    r12b,0x1
   140025a51:	mov    DWORD PTR [rdi+0xc8],ecx
   140025a57:	jmp    0x140025a7c
   140025a59:	mov    rax,QWORD PTR [rdx]
   140025a5c:	lea    rcx,[rsp+0x20]
   140025a61:	mov    QWORD PTR [rcx],rax
   140025a64:	mov    rax,QWORD PTR [rdx+0x8]
   140025a68:	mov    QWORD PTR [rcx+0x8],rax
   140025a6c:	movzx  r12d,BYTE PTR [rsp+0x38]
   140025a72:	mov    rdi,QWORD PTR [rsp+0x30]
   140025a77:	mov    rbp,QWORD PTR [rsp+0x20]
   140025a7c:	movzx  edx,BYTE PTR [rbx]
   140025a7f:	test   dl,dl
   140025a81:	je     0x140025a9f
   140025a83:	mov    rax,QWORD PTR [rbp+0x128]
   140025a8a:	mov    rcx,QWORD PTR [rax]
   140025a8d:	movzx  eax,BYTE PTR [rcx]
   140025a90:	cmp    dl,al
   140025a92:	je     0x140025a9f
   140025a94:	mov    dl,BYTE PTR [rbx+0x1]
   140025a97:	add    rbx,0x1
   140025a9b:	test   dl,dl
   140025a9d:	jne    0x140025a90
   140025a9f:	movzx  eax,BYTE PTR [rbx]
   140025aa2:	add    rbx,0x1
   140025aa6:	test   al,al
   140025aa8:	je     0x140025b01
   140025aaa:	movzx  eax,BYTE PTR [rbx]
   140025aad:	test   al,al
   140025aaf:	je     0x140025ac4
   140025ab1:	cmp    al,0x65
   140025ab3:	je     0x140025ac4
   140025ab5:	cmp    al,0x45
   140025ab7:	je     0x140025ac4
   140025ab9:	mov    al,BYTE PTR [rbx+0x1]
   140025abc:	add    rbx,0x1
   140025ac0:	test   al,al
   140025ac2:	jne    0x140025ab1
   140025ac4:	mov    rdx,rbx
   140025ac7:	sub    rbx,0x1
   140025acb:	cmp    BYTE PTR [rbx],0x30
   140025ace:	jne    0x140025ad9
   140025ad0:	sub    rbx,0x1
   140025ad4:	cmp    BYTE PTR [rbx],0x30
   140025ad7:	je     0x140025ad0
   140025ad9:	mov    rax,QWORD PTR [rbp+0x128]
   140025ae0:	mov    rcx,QWORD PTR [rax]
   140025ae3:	movzx  eax,BYTE PTR [rcx]
   140025ae6:	cmp    BYTE PTR [rbx],al
   140025ae8:	jne    0x140025af0
   140025aea:	sub    rbx,0x1
   140025aee:	xchg   ax,ax
   140025af0:	movzx  eax,BYTE PTR [rdx]
   140025af3:	add    rbx,0x1
   140025af7:	add    rdx,0x1
   140025afb:	test   al,al
   140025afd:	mov    BYTE PTR [rbx],al
   140025aff:	jne    0x140025af0
   140025b01:	mov    rbp,QWORD PTR [rsp+0x58]
   140025b06:	mov    rbx,QWORD PTR [rsp+0x50]
   140025b0b:	test   r12b,r12b
   140025b0e:	mov    r12,QWORD PTR [rsp+0x68]
   140025b13:	je     0x140025b1c
   140025b15:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   140025b1c:	add    rsp,0x40
   140025b20:	pop    rdi
   140025b21:	ret    
   140025b22:	int3   
   140025b23:	int3   
   140025b24:	int3   
   140025b25:	int3   
   140025b26:	int3   
   140025b27:	int3   
   140025b28:	int3   
   140025b29:	int3   
   140025b2a:	int3   
   140025b2b:	int3   
   140025b2c:	int3   
   140025b2d:	int3   
   140025b2e:	int3   
   140025b2f:	int3   
   140025b30:	movsd  xmm0,QWORD PTR [rcx]
   140025b34:	comisd xmm0,QWORD PTR [rip+0xf704]        # 0x140035240
   140025b3c:	jb     0x140025b44
   140025b3e:	mov    eax,0x1
   140025b43:	ret    
   140025b44:	xor    eax,eax
   140025b46:	ret    
   140025b47:	int3   
   140025b48:	int3   
   140025b49:	int3   
   140025b4a:	int3   
   140025b4b:	int3   
   140025b4c:	int3   
   140025b4d:	int3   
   140025b4e:	int3   
   140025b4f:	int3   
   140025b50:	rex push rbx
   140025b52:	sub    rsp,0x30
   140025b56:	test   ecx,ecx
   140025b58:	mov    rax,r8
   140025b5b:	mov    rbx,rdx
   140025b5e:	mov    rdx,rax
   140025b61:	mov    r8,r9
   140025b64:	je     0x140025b7e
   140025b66:	lea    rcx,[rsp+0x20]
   140025b6b:	call   0x14002ace0
   140025b70:	mov    r11,QWORD PTR [rsp+0x20]
   140025b75:	mov    QWORD PTR [rbx],r11
   140025b78:	add    rsp,0x30
   140025b7c:	pop    rbx
   140025b7d:	ret    
   140025b7e:	lea    rcx,[rsp+0x40]
   140025b83:	call   0x14002ae70
   140025b88:	mov    r11d,DWORD PTR [rsp+0x40]
   140025b8d:	mov    DWORD PTR [rbx],r11d
   140025b90:	add    rsp,0x30
   140025b94:	pop    rbx
   140025b95:	ret    
   140025b96:	int3   
   140025b97:	int3   
   140025b98:	int3   
   140025b99:	int3   
   140025b9a:	int3   
   140025b9b:	int3   
   140025b9c:	int3   
   140025b9d:	int3   
   140025b9e:	int3   
   140025b9f:	int3   
   140025ba0:	rex push rbx
   140025ba2:	sub    rsp,0x20
   140025ba6:	mov    rax,r8
   140025ba9:	xor    r8d,r8d
   140025bac:	test   ecx,ecx
   140025bae:	mov    rbx,rdx
   140025bb1:	mov    rdx,rax
   140025bb4:	je     0x140025bce
   140025bb6:	lea    rcx,[rsp+0x48]
   140025bbb:	call   0x14002ace0
   140025bc0:	mov    r11,QWORD PTR [rsp+0x48]
   140025bc5:	mov    QWORD PTR [rbx],r11
   140025bc8:	add    rsp,0x20
   140025bcc:	pop    rbx
   140025bcd:	ret    
   140025bce:	lea    rcx,[rsp+0x30]
   140025bd3:	call   0x14002ae70
   140025bd8:	mov    r11d,DWORD PTR [rsp+0x30]
   140025bdd:	mov    DWORD PTR [rbx],r11d
   140025be0:	add    rsp,0x20
   140025be4:	pop    rbx
   140025be5:	ret    
   140025be6:	int3   
   140025be7:	int3   
   140025be8:	int3   
   140025be9:	int3   
   140025bea:	int3   
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	xor    edx,edx
   140025bf2:	jmp    0x140025880
   140025bf7:	int3   
   140025bf8:	int3   
   140025bf9:	int3   
   140025bfa:	int3   
   140025bfb:	int3   
   140025bfc:	int3   
   140025bfd:	int3   
   140025bfe:	int3   
   140025bff:	int3   
   140025c00:	xor    edx,edx
   140025c02:	jmp    0x1400259c0
   140025c07:	int3   
   140025c08:	int3   
   140025c09:	int3   
   140025c0a:	int3   
   140025c0b:	int3   
   140025c0c:	int3   
   140025c0d:	int3   
   140025c0e:	int3   
   140025c0f:	int3   
   140025c10:	mov    DWORD PTR [rsp+0x20],r9d
   140025c15:	mov    QWORD PTR [rsp+0x10],rdx
   140025c1a:	push   rbx
   140025c1b:	push   rsi
   140025c1c:	push   rdi
   140025c1d:	push   r12
   140025c1f:	push   r13
   140025c21:	push   r15
   140025c23:	sub    rsp,0x58
   140025c27:	xor    r12b,r12b
   140025c2a:	mov    r13,rcx
   140025c2d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140025c35:	test   rcx,rcx
   140025c38:	movsxd r15,r8d
   140025c3b:	mov    r8,rdx
   140025c3e:	mov    BYTE PTR [rsp+0x48],r12b
   140025c43:	jne    0x140025ccb
   140025c49:	call   0x14001d930
   140025c4e:	mov    rbx,rax
   140025c51:	mov    rdi,QWORD PTR [rax+0xc0]
   140025c58:	mov    rsi,QWORD PTR [rax+0xb8]
   140025c5f:	cmp    rdi,QWORD PTR [rip+0x1ae2a]        # 0x140040a90
   140025c66:	mov    QWORD PTR [rsp+0xc0],rdi
   140025c6e:	je     0x140025c8e
   140025c70:	mov    ecx,DWORD PTR [rax+0xc8]
   140025c76:	test   DWORD PTR [rip+0x1ac9c],ecx        # 0x140040918
   140025c7c:	jne    0x140025c8e
   140025c7e:	call   0x14001ed60
   140025c83:	mov    rdi,rax
   140025c86:	mov    QWORD PTR [rsp+0xc0],rax
   140025c8e:	cmp    rsi,QWORD PTR [rip+0x1ab7b]        # 0x140040810
   140025c95:	je     0x140025caa
   140025c97:	mov    ecx,DWORD PTR [rbx+0xc8]
   140025c9d:	test   DWORD PTR [rip+0x1ac75],ecx        # 0x140040918
   140025ca3:	jne    0x140025caa
   140025ca5:	call   0x14001e210
   140025caa:	mov    ecx,DWORD PTR [rbx+0xc8]
   140025cb0:	test   cl,0x2
   140025cb3:	jne    0x140025cf8
   140025cb5:	mov    r8,QWORD PTR [rsp+0x98]
   140025cbd:	or     ecx,0x2
   140025cc0:	mov    r12b,0x1
   140025cc3:	mov    DWORD PTR [rbx+0xc8],ecx
   140025cc9:	jmp    0x140025d00
   140025ccb:	mov    rax,QWORD PTR [rcx]
   140025cce:	lea    rdx,[rsp+0x30]
   140025cd3:	mov    QWORD PTR [rdx],rax
   140025cd6:	mov    rax,QWORD PTR [rcx+0x8]
   140025cda:	mov    QWORD PTR [rdx+0x8],rax
   140025cde:	mov    rdi,QWORD PTR [rsp+0x30]
   140025ce3:	movzx  r12d,BYTE PTR [rsp+0x48]
   140025ce9:	mov    rbx,QWORD PTR [rsp+0x40]
   140025cee:	mov    QWORD PTR [rsp+0xc0],rdi
   140025cf6:	jmp    0x140025d00
   140025cf8:	mov    r8,QWORD PTR [rsp+0x98]
   140025d00:	test   r13,r13
   140025d03:	jne    0x140025d45
   140025d05:	call   0x14001b280
   140025d0a:	xor    esi,esi
   140025d0c:	xor    r9d,r9d
   140025d0f:	xor    r8d,r8d
   140025d12:	xor    edx,edx
   140025d14:	xor    ecx,ecx
   140025d16:	mov    DWORD PTR [rax],0x16
   140025d1c:	mov    QWORD PTR [rsp+0x20],rsi
   140025d21:	call   0x14001de30
   140025d26:	test   r12b,r12b
   140025d29:	je     0x140025d32
   140025d2b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140025d32:	mov    eax,0x16
   140025d37:	add    rsp,0x58
   140025d3b:	pop    r15
   140025d3d:	pop    r13
   140025d3f:	pop    r12
   140025d41:	pop    rdi
   140025d42:	pop    rsi
   140025d43:	pop    rbx
   140025d44:	ret    
   140025d45:	test   r8,r8
   140025d48:	je     0x140025d05
   140025d4a:	xor    esi,esi
   140025d4c:	test   r15d,r15d
   140025d4f:	mov    eax,esi
   140025d51:	cmovg  eax,r15d
   140025d55:	add    eax,0x9
   140025d58:	cdqe   
   140025d5a:	cmp    r8,rax
   140025d5d:	ja     0x140025d9d
   140025d5f:	call   0x14001b280
   140025d64:	xor    r9d,r9d
   140025d67:	xor    r8d,r8d
   140025d6a:	xor    edx,edx
   140025d6c:	xor    ecx,ecx
   140025d6e:	mov    QWORD PTR [rsp+0x20],rsi
   140025d73:	mov    DWORD PTR [rax],0x22
   140025d79:	call   0x14001de30
   140025d7e:	test   r12b,r12b
   140025d81:	je     0x140025d8a
   140025d83:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140025d8a:	mov    eax,0x22
   140025d8f:	add    rsp,0x58
   140025d93:	pop    r15
   140025d95:	pop    r13
   140025d97:	pop    r12
   140025d99:	pop    rdi
   140025d9a:	pop    rsi
   140025d9b:	pop    rbx
   140025d9c:	ret    
   140025d9d:	movzx  r9d,BYTE PTR [rsp+0xb8]
   140025da6:	mov    QWORD PTR [rsp+0x90],rbp
   140025dae:	or     rbp,0xffffffffffffffff
   140025db2:	test   r9b,r9b
   140025db5:	mov    QWORD PTR [rsp+0x50],r14
   140025dba:	mov    r14,QWORD PTR [rsp+0xb0]
   140025dc2:	je     0x140025e20
   140025dc4:	cmp    DWORD PTR [r14],0x2d
   140025dc8:	mov    rdx,rsi
   140025dcb:	mov    r9d,esi
   140025dce:	sete   dl
   140025dd1:	add    rdx,r13
   140025dd4:	test   r15d,r15d
   140025dd7:	setg   r9b
   140025ddb:	test   r9d,r9d
   140025dde:	je     0x140025e18
   140025de0:	xor    eax,eax
   140025de2:	mov    rdi,rdx
   140025de5:	mov    rcx,rbp
   140025de8:	repnz scas al,BYTE PTR es:[rdi]
   140025dea:	movsxd rax,r9d
   140025ded:	not    rcx
   140025df0:	add    rax,rdx
   140025df3:	mov    r8,rcx
   140025df6:	mov    rcx,rax
   140025df9:	call   0x14001baf0
   140025dfe:	mov    rdi,QWORD PTR [rsp+0xc0]
   140025e06:	mov    r8,QWORD PTR [rsp+0x98]
   140025e0e:	mov    r9b,BYTE PTR [rsp+0xb8]
   140025e16:	jmp    0x140025e20
   140025e18:	mov    r9b,BYTE PTR [rsp+0xb8]
   140025e20:	cmp    DWORD PTR [r14],0x2d
   140025e24:	mov    rdx,r13
   140025e27:	jne    0x140025e32
   140025e29:	mov    BYTE PTR [r13+0x0],0x2d
   140025e2e:	lea    rdx,[r13+0x1]
   140025e32:	test   r15d,r15d
   140025e35:	jle    0x140025e51
   140025e37:	movzx  eax,BYTE PTR [rdx+0x1]
   140025e3b:	add    rdx,0x1
   140025e3f:	mov    BYTE PTR [rdx-0x1],al
   140025e42:	mov    rax,QWORD PTR [rdi+0x128]
   140025e49:	mov    rcx,QWORD PTR [rax]
   140025e4c:	movzx  eax,BYTE PTR [rcx]
   140025e4f:	mov    BYTE PTR [rdx],al
   140025e51:	test   r9b,r9b
   140025e54:	mov    rcx,rsi
   140025e57:	lea    rdi,[rdx+r15*1]
   140025e5b:	sete   cl
   140025e5e:	add    rdi,rcx
   140025e61:	cmp    r8,0xffffffffffffffff
   140025e65:	je     0x140025e70
   140025e67:	mov    rbp,r13
   140025e6a:	sub    rbp,rdi
   140025e6d:	add    rbp,r8
   140025e70:	lea    r8,[rip+0xf3d1]        # 0x140035248
   140025e77:	mov    rdx,rbp
   140025e7a:	mov    rcx,rdi
   140025e7d:	call   0x140026f70
   140025e82:	mov    rbp,QWORD PTR [rsp+0x90]
   140025e8a:	test   eax,eax
   140025e8c:	je     0x140025ea2
   140025e8e:	xor    r9d,r9d
   140025e91:	xor    r8d,r8d
   140025e94:	xor    edx,edx
   140025e96:	xor    ecx,ecx
   140025e98:	mov    QWORD PTR [rsp+0x20],rsi
   140025e9d:	call   0x14001dd90
   140025ea2:	cmp    DWORD PTR [rsp+0xa8],esi
   140025ea9:	lea    rcx,[rdi+0x2]
   140025ead:	je     0x140025eb2
   140025eaf:	mov    BYTE PTR [rdi],0x45
   140025eb2:	mov    rax,QWORD PTR [r14+0x10]
   140025eb6:	cmp    BYTE PTR [rax],0x30
   140025eb9:	je     0x140025f12
   140025ebb:	mov    r8d,DWORD PTR [r14+0x4]
   140025ebf:	sub    r8d,0x1
   140025ec3:	jns    0x140025ecc
   140025ec5:	neg    r8d
   140025ec8:	mov    BYTE PTR [rdi+0x1],0x2d
   140025ecc:	cmp    r8d,0x64
   140025ed0:	jl     0x140025eed
   140025ed2:	mov    eax,0x51eb851f
   140025ed7:	imul   r8d
   140025eda:	sar    edx,0x5
   140025edd:	mov    eax,edx
   140025edf:	shr    eax,0x1f
   140025ee2:	add    edx,eax
   140025ee4:	add    BYTE PTR [rdi+0x2],dl
   140025ee7:	imul   edx,edx,0xffffff9c
   140025eea:	add    r8d,edx
   140025eed:	cmp    r8d,0xa
   140025ef1:	jl     0x140025f0e
   140025ef3:	mov    eax,0x66666667
   140025ef8:	imul   r8d
   140025efb:	sar    edx,0x2
   140025efe:	mov    eax,edx
   140025f00:	shr    eax,0x1f
   140025f03:	add    edx,eax
   140025f05:	add    BYTE PTR [rdi+0x3],dl
   140025f08:	imul   edx,edx,0xfffffff6
   140025f0b:	add    r8d,edx
   140025f0e:	add    BYTE PTR [rdi+0x4],r8b
   140025f12:	test   BYTE PTR [rip+0x2055b],0x1        # 0x140046474
   140025f19:	mov    r14,QWORD PTR [rsp+0x50]
   140025f1e:	je     0x140025f34
   140025f20:	cmp    BYTE PTR [rcx],0x30
   140025f23:	jne    0x140025f34
   140025f25:	lea    rdx,[rcx+0x1]
   140025f29:	mov    r8d,0x3
   140025f2f:	call   0x14001baf0
   140025f34:	test   r12b,r12b
   140025f37:	je     0x140025f40
   140025f39:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140025f40:	xor    eax,eax
   140025f42:	add    rsp,0x58
   140025f46:	pop    r15
   140025f48:	pop    r13
   140025f4a:	pop    r12
   140025f4c:	pop    rdi
   140025f4d:	pop    rsi
   140025f4e:	pop    rbx
   140025f4f:	ret    
   140025f50:	rex push rbx
   140025f52:	push   rbp
   140025f53:	push   rsi
   140025f54:	push   rdi
   140025f55:	sub    rsp,0x88
   140025f5c:	mov    rax,QWORD PTR [rip+0x1a06d]        # 0x14003ffd0
   140025f63:	xor    rax,rsp
   140025f66:	mov    QWORD PTR [rsp+0x70],rax
   140025f6b:	mov    rcx,QWORD PTR [rcx]
   140025f6e:	mov    rbp,QWORD PTR [rsp+0xd8]
   140025f76:	mov    rbx,r8
   140025f79:	mov    rdi,rdx
   140025f7c:	mov    esi,r9d
   140025f7f:	lea    r8,[rsp+0x58]
   140025f84:	lea    rdx,[rsp+0x40]
   140025f89:	mov    r9d,0x16
   140025f8f:	call   0x14002b120
   140025f94:	test   rdi,rdi
   140025f97:	jne    0x140025fc2
   140025f99:	call   0x14001b280
   140025f9e:	xor    ecx,ecx
   140025fa0:	xor    r9d,r9d
   140025fa3:	xor    r8d,r8d
   140025fa6:	xor    edx,edx
   140025fa8:	mov    DWORD PTR [rax],0x16
   140025fae:	mov    QWORD PTR [rsp+0x20],rcx
   140025fb3:	call   0x14001de30
   140025fb8:	mov    eax,0x16
   140025fbd:	jmp    0x14002604a
   140025fc2:	test   rbx,rbx
   140025fc5:	je     0x140025f99
   140025fc7:	mov    r9d,DWORD PTR [rsp+0x40]
   140025fcc:	xor    ecx,ecx
   140025fce:	cmp    rbx,0xffffffffffffffff
   140025fd2:	jne    0x140025fd9
   140025fd4:	or     rdx,rbx
   140025fd7:	jmp    0x140025ff4
   140025fd9:	cmp    r9d,0x2d
   140025fdd:	mov    rax,rcx
   140025fe0:	mov    rdx,rbx
   140025fe3:	sete   al
   140025fe6:	sub    rdx,rax
   140025fe9:	test   esi,esi
   140025feb:	mov    rax,rcx
   140025fee:	setg   al
   140025ff1:	sub    rdx,rax
   140025ff4:	mov    rax,rcx
   140025ff7:	cmp    r9d,0x2d
   140025ffb:	lea    r8d,[rsi+0x1]
   140025fff:	sete   al
   140026002:	test   esi,esi
   140026004:	lea    r9,[rsp+0x40]
   140026009:	setg   cl
   14002600c:	add    rax,rdi
   14002600f:	add    rcx,rax
   140026012:	call   0x14002b000
   140026017:	test   eax,eax
   140026019:	je     0x140026020
   14002601b:	mov    BYTE PTR [rdi],0x0
   14002601e:	jmp    0x14002604a
   140026020:	mov    r9d,DWORD PTR [rsp+0xd0]
   140026028:	lea    rax,[rsp+0x40]
   14002602d:	mov    QWORD PTR [rsp+0x30],rbp
   140026032:	mov    r8d,esi
   140026035:	mov    rdx,rbx
   140026038:	mov    rcx,rdi
   14002603b:	mov    BYTE PTR [rsp+0x28],0x0
   140026040:	mov    QWORD PTR [rsp+0x20],rax
   140026045:	call   0x140025c10
   14002604a:	mov    rcx,QWORD PTR [rsp+0x70]
   14002604f:	xor    rcx,rsp
   140026052:	call   0x140019370
   140026057:	add    rsp,0x88
   14002605e:	pop    rdi
   14002605f:	pop    rsi
   140026060:	pop    rbp
   140026061:	pop    rbx
   140026062:	ret    
   140026063:	int3   
   140026064:	int3   
   140026065:	int3   
   140026066:	int3   
   140026067:	int3   
   140026068:	int3   
   140026069:	int3   
   14002606a:	int3   
   14002606b:	int3   
   14002606c:	int3   
   14002606d:	int3   
   14002606e:	int3   
   14002606f:	int3   
   140026070:	mov    QWORD PTR [rsp+0x18],rbx
   140026075:	mov    QWORD PTR [rsp+0x8],rcx
   14002607a:	push   rbp
   14002607b:	push   rsi
   14002607c:	push   rdi
   14002607d:	push   r12
   14002607f:	push   r13
   140026081:	push   r14
   140026083:	push   r15
   140026085:	sub    rsp,0x50
   140026089:	xor    r15b,r15b
   14002608c:	mov    rdi,rdx
   14002608f:	mov    rdx,QWORD PTR [rsp+0xb8]
   140026097:	test   rdx,rdx
   14002609a:	mov    ebx,r9d
   14002609d:	mov    r9d,0x3ff
   1400260a3:	mov    r12,r8
   1400260a6:	mov    r14,rcx
   1400260a9:	mov    bp,0x30
   1400260ad:	mov    QWORD PTR [rsp+0x98],r9
   1400260b5:	mov    BYTE PTR [rsp+0x48],r15b
   1400260ba:	jne    0x140026134
   1400260bc:	call   0x14001d930
   1400260c1:	mov    rsi,rax
   1400260c4:	mov    r13,QWORD PTR [rax+0xc0]
   1400260cb:	mov    r14,QWORD PTR [rax+0xb8]
   1400260d2:	cmp    r13,QWORD PTR [rip+0x1a9b7]        # 0x140040a90
   1400260d9:	je     0x1400260f1
   1400260db:	mov    ecx,DWORD PTR [rax+0xc8]
   1400260e1:	test   DWORD PTR [rip+0x1a831],ecx        # 0x140040918
   1400260e7:	jne    0x1400260f1
   1400260e9:	call   0x14001ed60
   1400260ee:	mov    r13,rax
   1400260f1:	cmp    r14,QWORD PTR [rip+0x1a718]        # 0x140040810
   1400260f8:	je     0x14002610d
   1400260fa:	mov    ecx,DWORD PTR [rsi+0xc8]
   140026100:	test   DWORD PTR [rip+0x1a812],ecx        # 0x140040918
   140026106:	jne    0x14002610d
   140026108:	call   0x14001e210
   14002610d:	mov    ecx,DWORD PTR [rsi+0xc8]
   140026113:	mov    r14,QWORD PTR [rsp+0x90]
   14002611b:	mov    r9d,0x3ff
   140026121:	test   cl,0x2
   140026124:	jne    0x140026157
   140026126:	or     ecx,0x2
   140026129:	mov    r15b,0x1
   14002612c:	mov    DWORD PTR [rsi+0xc8],ecx
   140026132:	jmp    0x140026157
   140026134:	mov    rax,QWORD PTR [rdx]
   140026137:	lea    rcx,[rsp+0x30]
   14002613c:	mov    QWORD PTR [rcx],rax
   14002613f:	mov    rax,QWORD PTR [rdx+0x8]
   140026143:	mov    QWORD PTR [rcx+0x8],rax
   140026147:	movzx  r15d,BYTE PTR [rsp+0x48]
   14002614d:	mov    rsi,QWORD PTR [rsp+0x40]
   140026152:	mov    r13,QWORD PTR [rsp+0x30]
   140026157:	xor    edx,edx
   140026159:	test   ebx,ebx
   14002615b:	cmovs  ebx,edx
   14002615e:	test   rdi,rdi
   140026161:	jne    0x14002619c
   140026163:	call   0x14001b280
   140026168:	xor    r9d,r9d
   14002616b:	xor    r8d,r8d
   14002616e:	xor    edx,edx
   140026170:	xor    ecx,ecx
   140026172:	mov    QWORD PTR [rsp+0x20],0x0
   14002617b:	mov    DWORD PTR [rax],0x16
   140026181:	call   0x14001de30
   140026186:	test   r15b,r15b
   140026189:	je     0x140026192
   14002618b:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140026192:	mov    eax,0x16
   140026197:	jmp    0x140026518
   14002619c:	test   r12,r12
   14002619f:	je     0x140026163
   1400261a1:	lea    eax,[rbx+0xb]
   1400261a4:	mov    BYTE PTR [rdi],dl
   1400261a6:	movsxd rcx,eax
   1400261a9:	cmp    r12,rcx
   1400261ac:	ja     0x1400261e7
   1400261ae:	call   0x14001b280
   1400261b3:	xor    r9d,r9d
   1400261b6:	xor    r8d,r8d
   1400261b9:	xor    edx,edx
   1400261bb:	xor    ecx,ecx
   1400261bd:	mov    QWORD PTR [rsp+0x20],0x0
   1400261c6:	mov    DWORD PTR [rax],0x22
   1400261cc:	call   0x14001de30
   1400261d1:	test   r15b,r15b
   1400261d4:	je     0x1400261dd
   1400261d6:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   1400261dd:	mov    eax,0x22
   1400261e2:	jmp    0x140026518
   1400261e7:	mov    rcx,QWORD PTR [r14]
   1400261ea:	mov    rax,rcx
   1400261ed:	shr    rax,0x34
   1400261f1:	and    eax,0x7ff
   1400261f6:	cmp    rax,0x7ff
   1400261fc:	jne    0x1400262a0
   140026202:	cmp    r12,0xffffffffffffffff
   140026206:	jne    0x14002620d
   140026208:	or     r8,r12
   14002620b:	jmp    0x140026212
   14002620d:	lea    r8,[r12-0x2]
   140026212:	mov    QWORD PTR [rsp+0x28],rdx
   140026217:	mov    DWORD PTR [rsp+0x20],edx
   14002621b:	lea    rdx,[rdi+0x2]
   14002621f:	mov    r9d,ebx
   140026222:	mov    rcx,r14
   140026225:	call   0x140025f50
   14002622a:	test   eax,eax
   14002622c:	je     0x140026246
   14002622e:	test   r15b,r15b
   140026231:	mov    BYTE PTR [rdi],0x0
   140026234:	je     0x140026518
   14002623a:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140026241:	jmp    0x140026518
   140026246:	cmp    BYTE PTR [rdi+0x2],0x2d
   14002624a:	jne    0x140026253
   14002624c:	mov    BYTE PTR [rdi],0x2d
   14002624f:	add    rdi,0x1
   140026253:	mov    ebx,DWORD PTR [rsp+0xb0]
   14002625a:	mov    eax,0x78
   14002625f:	mov    ecx,0x58
   140026264:	mov    BYTE PTR [rdi],0x30
   140026267:	test   ebx,ebx
   140026269:	mov    edx,0x65
   14002626e:	cmovne eax,ecx
   140026271:	lea    rcx,[rdi+0x2]
   140026275:	mov    BYTE PTR [rdi+0x1],al
   140026278:	call   0x14002aa20
   14002627d:	test   rax,rax
   140026280:	je     0x14002650a
   140026286:	mov    ecx,0x70
   14002628b:	mov    edx,0x50
   140026290:	test   ebx,ebx
   140026292:	cmovne ecx,edx
   140026295:	mov    BYTE PTR [rax],cl
   140026297:	mov    BYTE PTR [rax+0x3],0x0
   14002629b:	jmp    0x14002650a
   1400262a0:	movabs rax,0x8000000000000000
   1400262aa:	test   rax,rcx
   1400262ad:	je     0x1400262b6
   1400262af:	mov    BYTE PTR [rdi],0x2d
   1400262b2:	add    rdi,0x1
   1400262b6:	mov    edx,DWORD PTR [rsp+0xb0]
   1400262bd:	mov    eax,0x78
   1400262c2:	mov    BYTE PTR [rdi],0x30
   1400262c5:	test   edx,edx
   1400262c7:	mov    ecx,0x58
   1400262cc:	mov    r8d,0x61
   1400262d2:	cmovne eax,ecx
   1400262d5:	test   edx,edx
   1400262d7:	movabs r10,0xfffffffffffff
   1400262e1:	mov    BYTE PTR [rdi+0x1],al
   1400262e4:	mov    eax,0x41
   1400262e9:	cmovne r8d,eax
   1400262ed:	movabs rax,0x7ff0000000000000
   1400262f7:	sub    r8d,0x3a
   1400262fb:	test   QWORD PTR [r14],rax
   1400262fe:	jne    0x140026325
   140026300:	mov    BYTE PTR [rdi+0x2],0x30
   140026304:	mov    rax,QWORD PTR [r14]
   140026307:	add    rdi,0x3
   14002630b:	and    rax,r10
   14002630e:	neg    rax
   140026311:	sbb    r9,r9
   140026314:	and    r9d,0x3fe
   14002631b:	mov    QWORD PTR [rsp+0x98],r9
   140026323:	jmp    0x14002632d
   140026325:	mov    BYTE PTR [rdi+0x2],0x31
   140026329:	add    rdi,0x3
   14002632d:	mov    r12,rdi
   140026330:	add    rdi,0x1
   140026334:	test   ebx,ebx
   140026336:	jne    0x14002633e
   140026338:	mov    BYTE PTR [r12],bl
   14002633c:	jmp    0x14002634f
   14002633e:	mov    rax,QWORD PTR [r13+0x128]
   140026345:	mov    rcx,QWORD PTR [rax]
   140026348:	movzx  eax,BYTE PTR [rcx]
   14002634b:	mov    BYTE PTR [r12],al
   14002634f:	test   QWORD PTR [r14],r10
   140026352:	jbe    0x1400263ef
   140026358:	movabs rdx,0xf000000000000
   140026362:	test   ebx,ebx
   140026364:	jle    0x140026399
   140026366:	mov    rax,QWORD PTR [r14]
   140026369:	movzx  ecx,bpl
   14002636d:	and    rax,rdx
   140026370:	and    rax,r10
   140026373:	shr    rax,cl
   140026376:	add    ax,0x30
   14002637a:	cmp    ax,0x39
   14002637e:	jbe    0x140026384
   140026380:	add    ax,r8w
   140026384:	mov    BYTE PTR [rdi],al
   140026386:	add    rdi,0x1
   14002638a:	shr    rdx,0x4
   14002638e:	sub    ebx,0x1
   140026391:	add    bp,0xfffc
   140026395:	jns    0x140026362
   140026397:	jmp    0x1400263ef
   140026399:	test   bp,bp
   14002639c:	js     0x1400263ef
   14002639e:	mov    rax,QWORD PTR [r14]
   1400263a1:	movzx  ecx,bpl
   1400263a5:	and    rax,rdx
   1400263a8:	and    rax,r10
   1400263ab:	shr    rax,cl
   1400263ae:	cmp    ax,0x8
   1400263b2:	jbe    0x1400263ef
   1400263b4:	lea    rax,[rdi-0x1]
   1400263b8:	movzx  ecx,BYTE PTR [rax]
   1400263bb:	cmp    cl,0x66
   1400263be:	je     0x1400263c5
   1400263c0:	cmp    cl,0x46
   1400263c3:	jne    0x1400263ce
   1400263c5:	mov    BYTE PTR [rax],0x30
   1400263c8:	sub    rax,0x1
   1400263cc:	jmp    0x1400263b8
   1400263ce:	cmp    rax,r12
   1400263d1:	je     0x1400263eb
   1400263d3:	movzx  ecx,BYTE PTR [rax]
   1400263d6:	cmp    cl,0x39
   1400263d9:	jne    0x1400263e4
   1400263db:	add    r8b,0x3a
   1400263df:	mov    BYTE PTR [rax],r8b
   1400263e2:	jmp    0x1400263ef
   1400263e4:	add    cl,0x1
   1400263e7:	mov    BYTE PTR [rax],cl
   1400263e9:	jmp    0x1400263ef
   1400263eb:	add    BYTE PTR [rax-0x1],0x1
   1400263ef:	test   ebx,ebx
   1400263f1:	jle    0x14002640b
   1400263f3:	mov    r8,rbx
   1400263f6:	mov    dl,0x30
   1400263f8:	mov    rcx,rdi
   1400263fb:	call   0x14001b520
   140026400:	mov    r9,QWORD PTR [rsp+0x98]
   140026408:	add    rdi,rbx
   14002640b:	cmp    BYTE PTR [r12],0x0
   140026410:	mov    ecx,0x70
   140026415:	mov    edx,0x50
   14002641a:	cmove  rdi,r12
   14002641e:	cmp    DWORD PTR [rsp+0xb0],0x0
   140026426:	cmovne ecx,edx
   140026429:	mov    BYTE PTR [rdi],cl
   14002642b:	mov    rcx,QWORD PTR [r14]
   14002642e:	shr    rcx,0x34
   140026432:	and    ecx,0x7ff
   140026438:	sub    rcx,r9
   14002643b:	js     0x140026447
   14002643d:	mov    BYTE PTR [rdi+0x1],0x2b
   140026441:	add    rdi,0x2
   140026445:	jmp    0x140026452
   140026447:	mov    BYTE PTR [rdi+0x1],0x2d
   14002644b:	add    rdi,0x2
   14002644f:	neg    rcx
   140026452:	cmp    rcx,0x3e8
   140026459:	mov    r8,rdi
   14002645c:	mov    BYTE PTR [rdi],0x30
   14002645f:	jl     0x140026495
   140026461:	movabs rax,0x20c49ba5e353f7cf
   14002646b:	add    rdi,0x1
   14002646f:	imul   rcx
   140026472:	sar    rdx,0x7
   140026476:	mov    rax,rdx
   140026479:	shr    rax,0x3f
   14002647d:	add    rdx,rax
   140026480:	lea    eax,[rdx+0x30]
   140026483:	imul   rdx,rdx,0xfffffffffffffc18
   14002648a:	mov    BYTE PTR [rdi-0x1],al
   14002648d:	add    rcx,rdx
   140026490:	cmp    rdi,r8
   140026493:	jne    0x14002649b
   140026495:	cmp    rcx,0x64
   140026499:	jl     0x1400264ca
   14002649b:	movabs rax,0xa3d70a3d70a3d70b
   1400264a5:	add    rdi,0x1
   1400264a9:	imul   rcx
   1400264ac:	add    rdx,rcx
   1400264af:	sar    rdx,0x6
   1400264b3:	mov    rax,rdx
   1400264b6:	shr    rax,0x3f
   1400264ba:	add    rdx,rax
   1400264bd:	lea    eax,[rdx+0x30]
   1400264c0:	imul   rdx,rdx,0xffffffffffffff9c
   1400264c4:	mov    BYTE PTR [rdi-0x1],al
   1400264c7:	add    rcx,rdx
   1400264ca:	cmp    rdi,r8
   1400264cd:	jne    0x1400264d5
   1400264cf:	cmp    rcx,0xa
   1400264d3:	jl     0x140026501
   1400264d5:	movabs rax,0x6666666666666667
   1400264df:	add    rdi,0x1
   1400264e3:	imul   rcx
   1400264e6:	sar    rdx,0x2
   1400264ea:	mov    rax,rdx
   1400264ed:	shr    rax,0x3f
   1400264f1:	add    rdx,rax
   1400264f4:	lea    eax,[rdx+0x30]
   1400264f7:	imul   rdx,rdx,0xfffffffffffffff6
   1400264fb:	mov    BYTE PTR [rdi-0x1],al
   1400264fe:	add    rcx,rdx
   140026501:	add    cl,0x30
   140026504:	mov    BYTE PTR [rdi],cl
   140026506:	mov    BYTE PTR [rdi+0x1],0x0
   14002650a:	test   r15b,r15b
   14002650d:	je     0x140026516
   14002650f:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140026516:	xor    eax,eax
   140026518:	mov    rbx,QWORD PTR [rsp+0xa0]
   140026520:	add    rsp,0x50
   140026524:	pop    r15
   140026526:	pop    r14
   140026528:	pop    r13
   14002652a:	pop    r12
   14002652c:	pop    rdi
   14002652d:	pop    rsi
   14002652e:	pop    rbp
   14002652f:	ret    
   140026530:	mov    QWORD PTR [rsp+0x8],rbx
   140026535:	mov    QWORD PTR [rsp+0x18],rbp
   14002653a:	mov    QWORD PTR [rsp+0x20],rsi
   14002653f:	mov    QWORD PTR [rsp+0x10],rdx
   140026544:	push   rdi
   140026545:	push   r12
   140026547:	push   r13
   140026549:	push   r14
   14002654b:	push   r15
   14002654d:	sub    rsp,0x50
   140026551:	mov    edi,DWORD PTR [r9+0x4]
   140026555:	xor    r12b,r12b
   140026558:	mov    rbp,rcx
   14002655b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140026563:	sub    edi,0x1
   140026566:	mov    r14,r9
   140026569:	test   rcx,rcx
   14002656c:	mov    r15d,r8d
   14002656f:	mov    BYTE PTR [rsp+0x48],r12b
   140026574:	jne    0x1400265f5
   140026576:	call   0x14001d930
   14002657b:	mov    rsi,rax
   14002657e:	mov    r13,QWORD PTR [rax+0xc0]
   140026585:	mov    rbx,QWORD PTR [rax+0xb8]
   14002658c:	cmp    r13,QWORD PTR [rip+0x1a4fd]        # 0x140040a90
   140026593:	mov    QWORD PTR [rsp+0xa8],r13
   14002659b:	je     0x1400265b8
   14002659d:	mov    ecx,DWORD PTR [rax+0xc8]
   1400265a3:	test   DWORD PTR [rip+0x1a36f],ecx        # 0x140040918
   1400265a9:	jne    0x1400265b8
   1400265ab:	call   0x14001ed60
   1400265b0:	mov    QWORD PTR [rsp+0xa8],rax
   1400265b8:	cmp    rbx,QWORD PTR [rip+0x1a251]        # 0x140040810
   1400265bf:	je     0x1400265d4
   1400265c1:	mov    ecx,DWORD PTR [rsi+0xc8]
   1400265c7:	test   DWORD PTR [rip+0x1a34b],ecx        # 0x140040918
   1400265cd:	jne    0x1400265d4
   1400265cf:	call   0x14001e210
   1400265d4:	mov    ecx,DWORD PTR [rsi+0xc8]
   1400265da:	mov    rdx,QWORD PTR [rsp+0x88]
   1400265e2:	test   cl,0x2
   1400265e5:	jne    0x140026620
   1400265e7:	or     ecx,0x2
   1400265ea:	mov    r12b,0x1
   1400265ed:	mov    DWORD PTR [rsi+0xc8],ecx
   1400265f3:	jmp    0x140026620
   1400265f5:	mov    rax,QWORD PTR [rcx]
   1400265f8:	lea    r8,[rsp+0x30]
   1400265fd:	mov    QWORD PTR [r8],rax
   140026600:	mov    rax,QWORD PTR [rcx+0x8]
   140026604:	mov    QWORD PTR [r8+0x8],rax
   140026608:	mov    rax,QWORD PTR [rsp+0x30]
   14002660d:	movzx  r12d,BYTE PTR [rsp+0x48]
   140026613:	mov    rsi,QWORD PTR [rsp+0x40]
   140026618:	mov    QWORD PTR [rsp+0xa8],rax
   140026620:	test   rbp,rbp
   140026623:	jne    0x14002665c
   140026625:	call   0x14001b280
   14002662a:	xor    r9d,r9d
   14002662d:	xor    r8d,r8d
   140026630:	mov    DWORD PTR [rax],0x16
   140026636:	xor    eax,eax
   140026638:	xor    edx,edx
   14002663a:	xor    ecx,ecx
   14002663c:	mov    QWORD PTR [rsp+0x20],rax
   140026641:	call   0x14001de30
   140026646:	test   r12b,r12b
   140026649:	je     0x140026652
   14002664b:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140026652:	mov    eax,0x16
   140026657:	jmp    0x14002676c
   14002665c:	test   rdx,rdx
   14002665f:	je     0x140026625
   140026661:	cmp    BYTE PTR [rsp+0xa0],0x0
   140026669:	je     0x140026688
   14002666b:	cmp    edi,r15d
   14002666e:	jne    0x140026688
   140026670:	xor    eax,eax
   140026672:	cmp    DWORD PTR [r14],0x2d
   140026676:	movsxd rcx,edi
   140026679:	sete   al
   14002667c:	add    rax,rbp
   14002667f:	mov    BYTE PTR [rcx+rax*1],0x30
   140026683:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   140026688:	cmp    DWORD PTR [r14],0x2d
   14002668c:	jne    0x140026696
   14002668e:	mov    BYTE PTR [rbp+0x0],0x2d
   140026692:	add    rbp,0x1
   140026696:	movsxd rax,DWORD PTR [r14+0x4]
   14002669a:	test   eax,eax
   14002669c:	jg     0x1400266c5
   14002669e:	or     rcx,0xffffffffffffffff
   1400266a2:	xor    eax,eax
   1400266a4:	mov    rdi,rbp
   1400266a7:	repnz scas al,BYTE PTR es:[rdi]
   1400266a9:	mov    rdx,rbp
   1400266ac:	not    rcx
   1400266af:	mov    r8,rcx
   1400266b2:	lea    rcx,[rbp+0x1]
   1400266b6:	call   0x14001baf0
   1400266bb:	mov    BYTE PTR [rbp+0x0],0x30
   1400266bf:	add    rbp,0x1
   1400266c3:	jmp    0x1400266c8
   1400266c5:	add    rbp,rax
   1400266c8:	test   r15d,r15d
   1400266cb:	jle    0x14002675e
   1400266d1:	or     rcx,0xffffffffffffffff
   1400266d5:	xor    eax,eax
   1400266d7:	mov    rdi,rbp
   1400266da:	repnz scas al,BYTE PTR es:[rdi]
   1400266dc:	lea    r13,[rbp+0x1]
   1400266e0:	mov    rdx,rbp
   1400266e3:	not    rcx
   1400266e6:	mov    r8,rcx
   1400266e9:	mov    rcx,r13
   1400266ec:	call   0x14001baf0
   1400266f1:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400266f9:	mov    rdx,QWORD PTR [rcx+0x128]
   140026700:	mov    rax,QWORD PTR [rdx]
   140026703:	movzx  ecx,BYTE PTR [rax]
   140026706:	mov    BYTE PTR [rbp+0x0],cl
   140026709:	mov    ebx,DWORD PTR [r14+0x4]
   14002670d:	test   ebx,ebx
   14002670f:	jns    0x14002675e
   140026711:	neg    ebx
   140026713:	cmp    BYTE PTR [rsp+0xa0],0x0
   14002671b:	jne    0x140026728
   14002671d:	mov    eax,ebx
   14002671f:	mov    ebx,r15d
   140026722:	cmp    r15d,eax
   140026725:	cmovge ebx,eax
   140026728:	test   ebx,ebx
   14002672a:	je     0x14002674e
   14002672c:	xor    eax,eax
   14002672e:	or     rcx,0xffffffffffffffff
   140026732:	mov    rdi,r13
   140026735:	repnz scas al,BYTE PTR es:[rdi]
   140026737:	movsxd rax,ebx
   14002673a:	mov    rdx,r13
   14002673d:	not    rcx
   140026740:	add    rax,r13
   140026743:	mov    r8,rcx
   140026746:	mov    rcx,rax
   140026749:	call   0x14001baf0
   14002674e:	movsxd r8,ebx
   140026751:	mov    edx,0x30
   140026756:	mov    rcx,r13
   140026759:	call   0x14001b520
   14002675e:	test   r12b,r12b
   140026761:	je     0x14002676a
   140026763:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   14002676a:	xor    eax,eax
   14002676c:	lea    r11,[rsp+0x50]
   140026771:	mov    rbx,QWORD PTR [r11+0x30]
   140026775:	mov    rbp,QWORD PTR [r11+0x40]
   140026779:	mov    rsi,QWORD PTR [r11+0x48]
   14002677d:	mov    rsp,r11
   140026780:	pop    r15
   140026782:	pop    r14
   140026784:	pop    r13
   140026786:	pop    r12
   140026788:	pop    rdi
   140026789:	ret    
   14002678a:	int3   
   14002678b:	int3   
   14002678c:	int3   
   14002678d:	int3   
   14002678e:	int3   
   14002678f:	int3   
   140026790:	rex push rbx
   140026792:	push   rbp
   140026793:	push   rsi
   140026794:	push   rdi
   140026795:	sub    rsp,0x78
   140026799:	mov    rax,QWORD PTR [rip+0x19830]        # 0x14003ffd0
   1400267a0:	xor    rax,rsp
   1400267a3:	mov    QWORD PTR [rsp+0x60],rax
   1400267a8:	mov    rcx,QWORD PTR [rcx]
   1400267ab:	mov    rbp,QWORD PTR [rsp+0xc0]
   1400267b3:	mov    rbx,r8
   1400267b6:	mov    rdi,rdx
   1400267b9:	mov    esi,r9d
   1400267bc:	lea    r8,[rsp+0x48]
   1400267c1:	lea    rdx,[rsp+0x30]
   1400267c6:	mov    r9d,0x16
   1400267cc:	call   0x14002b120
   1400267d1:	test   rdi,rdi
   1400267d4:	jne    0x1400267fc
   1400267d6:	call   0x14001b280
   1400267db:	xor    ecx,ecx
   1400267dd:	xor    r9d,r9d
   1400267e0:	xor    r8d,r8d
   1400267e3:	xor    edx,edx
   1400267e5:	mov    DWORD PTR [rax],0x16
   1400267eb:	mov    QWORD PTR [rsp+0x20],rcx
   1400267f0:	call   0x14001de30
   1400267f5:	mov    eax,0x16
   1400267fa:	jmp    0x140026865
   1400267fc:	test   rbx,rbx
   1400267ff:	je     0x1400267d6
   140026801:	mov    r9d,DWORD PTR [rsp+0x30]
   140026806:	xor    ecx,ecx
   140026808:	cmp    rbx,0xffffffffffffffff
   14002680c:	jne    0x140026813
   14002680e:	or     rdx,rbx
   140026811:	jmp    0x140026823
   140026813:	cmp    r9d,0x2d
   140026817:	mov    rax,rcx
   14002681a:	mov    rdx,rbx
   14002681d:	sete   al
   140026820:	sub    rdx,rax
   140026823:	mov    r8d,DWORD PTR [rsp+0x34]
   140026828:	add    r8d,esi
   14002682b:	cmp    r9d,0x2d
   14002682f:	lea    r9,[rsp+0x30]
   140026834:	sete   cl
   140026837:	add    rcx,rdi
   14002683a:	call   0x14002b000
   14002683f:	test   eax,eax
   140026841:	je     0x140026848
   140026843:	mov    BYTE PTR [rdi],0x0
   140026846:	jmp    0x140026865
   140026848:	lea    r9,[rsp+0x30]
   14002684d:	mov    r8d,esi
   140026850:	mov    rdx,rbx
   140026853:	mov    rcx,rdi
   140026856:	mov    QWORD PTR [rsp+0x28],rbp
   14002685b:	mov    BYTE PTR [rsp+0x20],0x0
   140026860:	call   0x140026530
   140026865:	mov    rcx,QWORD PTR [rsp+0x60]
   14002686a:	xor    rcx,rsp
   14002686d:	call   0x140019370
   140026872:	add    rsp,0x78
   140026876:	pop    rdi
   140026877:	pop    rsi
   140026878:	pop    rbp
   140026879:	pop    rbx
   14002687a:	ret    
   14002687b:	int3   
   14002687c:	int3   
   14002687d:	int3   
   14002687e:	int3   
   14002687f:	int3   
   140026880:	rex push rbp
   140026882:	push   rsi
   140026883:	push   rdi
   140026884:	push   r13
   140026886:	sub    rsp,0x98
   14002688d:	mov    rax,QWORD PTR [rip+0x1973c]        # 0x14003ffd0
   140026894:	xor    rax,rsp
   140026897:	mov    QWORD PTR [rsp+0x70],rax
   14002689c:	mov    rcx,QWORD PTR [rcx]
   14002689f:	mov    r13,QWORD PTR [rsp+0xe8]
   1400268a7:	mov    rdi,r8
   1400268aa:	mov    rsi,rdx
   1400268ad:	mov    ebp,r9d
   1400268b0:	lea    r8,[rsp+0x58]
   1400268b5:	lea    rdx,[rsp+0x40]
   1400268ba:	mov    r9d,0x16
   1400268c0:	call   0x14002b120
   1400268c5:	test   rsi,rsi
   1400268c8:	jne    0x1400268f3
   1400268ca:	call   0x14001b280
   1400268cf:	xor    ecx,ecx
   1400268d1:	xor    r9d,r9d
   1400268d4:	xor    r8d,r8d
   1400268d7:	xor    edx,edx
   1400268d9:	mov    DWORD PTR [rax],0x16
   1400268df:	mov    QWORD PTR [rsp+0x20],rcx
   1400268e4:	call   0x14001de30
   1400268e9:	mov    eax,0x16
   1400268ee:	jmp    0x1400269ca
   1400268f3:	test   rdi,rdi
   1400268f6:	je     0x1400268ca
   1400268f8:	xor    ecx,ecx
   1400268fa:	mov    QWORD PTR [rsp+0x90],rbx
   140026902:	mov    QWORD PTR [rsp+0x88],r12
   14002690a:	mov    r12d,DWORD PTR [rsp+0x44]
   14002690f:	add    r12d,0xffffffff
   140026913:	cmp    DWORD PTR [rsp+0x40],0x2d
   140026918:	sete   cl
   14002691b:	cmp    rdi,0xffffffffffffffff
   14002691f:	lea    rbx,[rcx+rsi*1]
   140026923:	jne    0x14002692a
   140026925:	or     rdx,rdi
   140026928:	jmp    0x140026930
   14002692a:	mov    rdx,rdi
   14002692d:	sub    rdx,rcx
   140026930:	lea    r9,[rsp+0x40]
   140026935:	mov    r8d,ebp
   140026938:	mov    rcx,rbx
   14002693b:	call   0x14002b000
   140026940:	test   eax,eax
   140026942:	je     0x140026949
   140026944:	mov    BYTE PTR [rsi],0x0
   140026947:	jmp    0x1400269ba
   140026949:	mov    eax,DWORD PTR [rsp+0x44]
   14002694d:	add    eax,0xffffffff
   140026950:	cmp    r12d,eax
   140026953:	setl   cl
   140026956:	cmp    eax,0xfffffffc
   140026959:	jl     0x140026990
   14002695b:	cmp    eax,ebp
   14002695d:	jge    0x140026990
   14002695f:	test   cl,cl
   140026961:	je     0x140026971
   140026963:	movzx  eax,BYTE PTR [rbx]
   140026966:	add    rbx,0x1
   14002696a:	test   al,al
   14002696c:	jne    0x140026963
   14002696e:	mov    BYTE PTR [rbx-0x2],al
   140026971:	lea    r9,[rsp+0x40]
   140026976:	mov    r8d,ebp
   140026979:	mov    rdx,rdi
   14002697c:	mov    rcx,rsi
   14002697f:	mov    QWORD PTR [rsp+0x28],r13
   140026984:	mov    BYTE PTR [rsp+0x20],0x1
   140026989:	call   0x140026530
   14002698e:	jmp    0x1400269ba
   140026990:	mov    r9d,DWORD PTR [rsp+0xe0]
   140026998:	lea    rax,[rsp+0x40]
   14002699d:	mov    QWORD PTR [rsp+0x30],r13
   1400269a2:	mov    r8d,ebp
   1400269a5:	mov    rdx,rdi
   1400269a8:	mov    rcx,rsi
   1400269ab:	mov    BYTE PTR [rsp+0x28],0x1
   1400269b0:	mov    QWORD PTR [rsp+0x20],rax
   1400269b5:	call   0x140025c10
   1400269ba:	mov    rbx,QWORD PTR [rsp+0x90]
   1400269c2:	mov    r12,QWORD PTR [rsp+0x88]
   1400269ca:	mov    rcx,QWORD PTR [rsp+0x70]
   1400269cf:	xor    rcx,rsp
   1400269d2:	call   0x140019370
   1400269d7:	add    rsp,0x98
   1400269de:	pop    r13
   1400269e0:	pop    rdi
   1400269e1:	pop    rsi
   1400269e2:	pop    rbp
   1400269e3:	ret    
   1400269e4:	int3   
   1400269e5:	int3   
   1400269e6:	int3   
   1400269e7:	int3   
   1400269e8:	int3   
   1400269e9:	int3   
   1400269ea:	int3   
   1400269eb:	int3   
   1400269ec:	int3   
   1400269ed:	int3   
   1400269ee:	int3   
   1400269ef:	int3   
   1400269f0:	sub    rsp,0x38
   1400269f4:	cmp    r9d,0x65
   1400269f8:	je     0x140026a6d
   1400269fa:	cmp    r9d,0x45
   1400269fe:	je     0x140026a6d
   140026a00:	cmp    r9d,0x66
   140026a04:	jne    0x140026a1f
   140026a06:	mov    rax,QWORD PTR [rsp+0x70]
   140026a0b:	mov    r9d,DWORD PTR [rsp+0x60]
   140026a10:	mov    QWORD PTR [rsp+0x20],rax
   140026a15:	call   0x140026790
   140026a1a:	add    rsp,0x38
   140026a1e:	ret    
   140026a1f:	cmp    r9d,0x61
   140026a23:	je     0x140026a4c
   140026a25:	cmp    r9d,0x41
   140026a29:	je     0x140026a4c
   140026a2b:	mov    rax,QWORD PTR [rsp+0x70]
   140026a30:	mov    r9d,DWORD PTR [rsp+0x60]
   140026a35:	mov    QWORD PTR [rsp+0x28],rax
   140026a3a:	mov    eax,DWORD PTR [rsp+0x68]
   140026a3e:	mov    DWORD PTR [rsp+0x20],eax
   140026a42:	call   0x140026880
   140026a47:	add    rsp,0x38
   140026a4b:	ret    
   140026a4c:	mov    rax,QWORD PTR [rsp+0x70]
   140026a51:	mov    r9d,DWORD PTR [rsp+0x60]
   140026a56:	mov    QWORD PTR [rsp+0x28],rax
   140026a5b:	mov    eax,DWORD PTR [rsp+0x68]
   140026a5f:	mov    DWORD PTR [rsp+0x20],eax
   140026a63:	call   0x140026070
   140026a68:	add    rsp,0x38
   140026a6c:	ret    
   140026a6d:	mov    rax,QWORD PTR [rsp+0x70]
   140026a72:	mov    r9d,DWORD PTR [rsp+0x60]
   140026a77:	mov    QWORD PTR [rsp+0x28],rax
   140026a7c:	mov    eax,DWORD PTR [rsp+0x68]
   140026a80:	mov    DWORD PTR [rsp+0x20],eax
   140026a84:	call   0x140025f50
   140026a89:	add    rsp,0x38
   140026a8d:	ret    
   140026a8e:	int3   
   140026a8f:	int3   
   140026a90:	sub    rsp,0x38
   140026a94:	cmp    r9d,0x65
   140026a98:	je     0x140026b0a
   140026a9a:	cmp    r9d,0x45
   140026a9e:	je     0x140026b0a
   140026aa0:	cmp    r9d,0x66
   140026aa4:	jne    0x140026abe
   140026aa6:	mov    r9d,DWORD PTR [rsp+0x60]
   140026aab:	mov    QWORD PTR [rsp+0x20],0x0
   140026ab4:	call   0x140026790
   140026ab9:	add    rsp,0x38
   140026abd:	ret    
   140026abe:	cmp    r9d,0x61
   140026ac2:	je     0x140026aea
   140026ac4:	cmp    r9d,0x41
   140026ac8:	je     0x140026aea
   140026aca:	mov    eax,DWORD PTR [rsp+0x68]
   140026ace:	mov    r9d,DWORD PTR [rsp+0x60]
   140026ad3:	mov    QWORD PTR [rsp+0x28],0x0
   140026adc:	mov    DWORD PTR [rsp+0x20],eax
   140026ae0:	call   0x140026880
   140026ae5:	add    rsp,0x38
   140026ae9:	ret    
   140026aea:	mov    eax,DWORD PTR [rsp+0x68]
   140026aee:	mov    r9d,DWORD PTR [rsp+0x60]
   140026af3:	mov    QWORD PTR [rsp+0x28],0x0
   140026afc:	mov    DWORD PTR [rsp+0x20],eax
   140026b00:	call   0x140026070
   140026b05:	add    rsp,0x38
   140026b09:	ret    
   140026b0a:	mov    eax,DWORD PTR [rsp+0x68]
   140026b0e:	mov    r9d,DWORD PTR [rsp+0x60]
   140026b13:	mov    QWORD PTR [rsp+0x28],0x0
   140026b1c:	mov    DWORD PTR [rsp+0x20],eax
   140026b20:	call   0x140025f50
   140026b25:	add    rsp,0x38
   140026b29:	ret    
   140026b2a:	int3   
   140026b2b:	int3   
   140026b2c:	int3   
   140026b2d:	int3   
   140026b2e:	int3   
   140026b2f:	int3   
   140026b30:	mov    QWORD PTR [rsp+0x10],rbx
   140026b35:	push   rbp
   140026b36:	push   rsi
   140026b37:	push   rdi
   140026b38:	push   r13
   140026b3a:	push   r14
   140026b3c:	sub    rsp,0x50
   140026b40:	mov    edi,r8d
   140026b43:	mov    r13,rdx
   140026b46:	mov    r14,rcx
   140026b49:	call   0x14001d550
   140026b4e:	xor    ebx,ebx
   140026b50:	cmp    QWORD PTR [rip+0x1f869],rbx        # 0x1400463c0
   140026b57:	mov    rbp,rax
   140026b5a:	mov    DWORD PTR [rsp+0x98],ebx
   140026b61:	mov    DWORD PTR [rsp+0x30],ebx
   140026b65:	jne    0x140026c5c
   140026b6b:	lea    rcx,[rip+0xe74e]        # 0x1400352c0
   140026b72:	call   QWORD PTR [rip+0xa808]        # 0x140031380
   140026b78:	test   rax,rax
   140026b7b:	mov    rsi,rax
   140026b7e:	je     0x140026d6f
   140026b84:	lea    rdx,[rip+0xe725]        # 0x1400352b0
   140026b8b:	mov    rcx,rax
   140026b8e:	call   QWORD PTR [rip+0xa8cc]        # 0x140031460
   140026b94:	test   rax,rax
   140026b97:	je     0x140026d6f
   140026b9d:	mov    rcx,rax
   140026ba0:	call   0x14001d480
   140026ba5:	lea    rdx,[rip+0xe6f4]        # 0x1400352a0
   140026bac:	mov    rcx,rsi
   140026baf:	mov    QWORD PTR [rip+0x1f80a],rax        # 0x1400463c0
   140026bb6:	call   QWORD PTR [rip+0xa8a4]        # 0x140031460
   140026bbc:	mov    rcx,rax
   140026bbf:	call   0x14001d480
   140026bc4:	lea    rdx,[rip+0xe6bd]        # 0x140035288
   140026bcb:	mov    rcx,rsi
   140026bce:	mov    QWORD PTR [rip+0x1f7f3],rax        # 0x1400463c8
   140026bd5:	call   QWORD PTR [rip+0xa885]        # 0x140031460
   140026bdb:	mov    rcx,rax
   140026bde:	call   0x14001d480
   140026be3:	lea    rcx,[rsp+0x98]
   140026beb:	mov    QWORD PTR [rip+0x1f7de],rax        # 0x1400463d0
   140026bf2:	call   0x140019a50
   140026bf7:	test   eax,eax
   140026bf9:	je     0x140026c0f
   140026bfb:	xor    r9d,r9d
   140026bfe:	xor    r8d,r8d
   140026c01:	xor    edx,edx
   140026c03:	xor    ecx,ecx
   140026c05:	mov    QWORD PTR [rsp+0x20],rbx
   140026c0a:	call   0x14001dd90
   140026c0f:	cmp    DWORD PTR [rsp+0x98],0x2
   140026c17:	jne    0x140026c5c
   140026c19:	lea    rdx,[rip+0xe648]        # 0x140035268
   140026c20:	mov    rcx,rsi
   140026c23:	call   QWORD PTR [rip+0xa837]        # 0x140031460
   140026c29:	mov    rcx,rax
   140026c2c:	call   0x14001d480
   140026c31:	test   rax,rax
   140026c34:	mov    QWORD PTR [rip+0x1f7a5],rax        # 0x1400463e0
   140026c3b:	je     0x140026c5c
   140026c3d:	lea    rdx,[rip+0xe60c]        # 0x140035250
   140026c44:	mov    rcx,rsi
   140026c47:	call   QWORD PTR [rip+0xa813]        # 0x140031460
   140026c4d:	mov    rcx,rax
   140026c50:	call   0x14001d480
   140026c55:	mov    QWORD PTR [rip+0x1f77c],rax        # 0x1400463d8
   140026c5c:	mov    rcx,QWORD PTR [rip+0x1f775]        # 0x1400463d8
   140026c63:	mov    QWORD PTR [rsp+0x80],r12
   140026c6b:	cmp    rcx,rbp
   140026c6e:	je     0x140026d08
   140026c74:	cmp    QWORD PTR [rip+0x1f765],rbp        # 0x1400463e0
   140026c7b:	je     0x140026d08
   140026c81:	call   0x14001d640
   140026c86:	mov    rcx,QWORD PTR [rip+0x1f753]        # 0x1400463e0
   140026c8d:	mov    rsi,rax
   140026c90:	call   0x14001d640
   140026c95:	test   rsi,rsi
   140026c98:	mov    r12,rax
   140026c9b:	je     0x140026d08
   140026c9d:	test   rax,rax
   140026ca0:	je     0x140026d08
   140026ca2:	call   rsi
   140026ca4:	test   rax,rax
   140026ca7:	je     0x140026cd3
   140026ca9:	lea    rcx,[rsp+0x34]
   140026cae:	mov    r9d,0xc
   140026cb4:	lea    r8,[rsp+0x38]
   140026cb9:	mov    QWORD PTR [rsp+0x20],rcx
   140026cbe:	lea    edx,[r9-0xb]
   140026cc2:	mov    rcx,rax
   140026cc5:	call   r12
   140026cc8:	test   eax,eax
   140026cca:	je     0x140026cd3
   140026ccc:	test   BYTE PTR [rsp+0x40],0x1
   140026cd1:	jne    0x140026d08
   140026cd3:	lea    rcx,[rsp+0x30]
   140026cd8:	call   0x140019aa0
   140026cdd:	test   eax,eax
   140026cdf:	je     0x140026cf5
   140026ce1:	xor    r9d,r9d
   140026ce4:	xor    r8d,r8d
   140026ce7:	xor    edx,edx
   140026ce9:	xor    ecx,ecx
   140026ceb:	mov    QWORD PTR [rsp+0x20],rbx
   140026cf0:	call   0x14001dd90
   140026cf5:	cmp    DWORD PTR [rsp+0x30],0x4
   140026cfa:	jb     0x140026d02
   140026cfc:	bts    edi,0x15
   140026d00:	jmp    0x140026d46
   140026d02:	bts    edi,0x12
   140026d06:	jmp    0x140026d46
   140026d08:	mov    rcx,QWORD PTR [rip+0x1f6b9]        # 0x1400463c8
   140026d0f:	cmp    rcx,rbp
   140026d12:	je     0x140026d46
   140026d14:	call   0x14001d640
   140026d19:	test   rax,rax
   140026d1c:	je     0x140026d46
   140026d1e:	call   rax
   140026d20:	test   rax,rax
   140026d23:	mov    rbx,rax
   140026d26:	je     0x140026d46
   140026d28:	mov    rcx,QWORD PTR [rip+0x1f6a1]        # 0x1400463d0
   140026d2f:	cmp    rcx,rbp
   140026d32:	je     0x140026d46
   140026d34:	call   0x14001d640
   140026d39:	test   rax,rax
   140026d3c:	je     0x140026d46
   140026d3e:	mov    rcx,rbx
   140026d41:	call   rax
   140026d43:	mov    rbx,rax
   140026d46:	mov    rcx,QWORD PTR [rip+0x1f673]        # 0x1400463c0
   140026d4d:	call   0x14001d640
   140026d52:	mov    r12,QWORD PTR [rsp+0x80]
   140026d5a:	test   rax,rax
   140026d5d:	je     0x140026d6f
   140026d5f:	mov    r9d,edi
   140026d62:	mov    r8,r13
   140026d65:	mov    rdx,r14
   140026d68:	mov    rcx,rbx
   140026d6b:	call   rax
   140026d6d:	jmp    0x140026d71
   140026d6f:	xor    eax,eax
   140026d71:	mov    rbx,QWORD PTR [rsp+0x88]
   140026d79:	add    rsp,0x50
   140026d7d:	pop    r14
   140026d7f:	pop    r13
   140026d81:	pop    rdi
   140026d82:	pop    rsi
   140026d83:	pop    rbp
   140026d84:	ret    
   140026d85:	int3   
   140026d86:	int3   
   140026d87:	int3   
   140026d88:	int3   
   140026d89:	int3   
   140026d8a:	int3   
   140026d8b:	int3   
   140026d8c:	int3   
   140026d8d:	int3   
   140026d8e:	int3   
   140026d8f:	int3   
   140026d90:	sub    rsp,0x38
   140026d94:	test   rcx,rcx
   140026d97:	mov    r9,rcx
   140026d9a:	je     0x140026da9
   140026d9c:	test   rdx,rdx
   140026d9f:	je     0x140026da9
   140026da1:	test   r8,r8
   140026da4:	jne    0x140026dd6
   140026da6:	mov    BYTE PTR [rcx],r8b
   140026da9:	call   0x14001b280
   140026dae:	xor    r9d,r9d
   140026db1:	xor    r8d,r8d
   140026db4:	xor    edx,edx
   140026db6:	xor    ecx,ecx
   140026db8:	mov    QWORD PTR [rsp+0x20],0x0
   140026dc1:	mov    DWORD PTR [rax],0x16
   140026dc7:	call   0x14001de30
   140026dcc:	mov    eax,0x16
   140026dd1:	add    rsp,0x38
   140026dd5:	ret    
   140026dd6:	cmp    BYTE PTR [rcx],0x0
   140026dd9:	je     0x140026de5
   140026ddb:	add    rcx,0x1
   140026ddf:	sub    rdx,0x1
   140026de3:	jne    0x140026dd6
   140026de5:	test   rdx,rdx
   140026de8:	jne    0x140026df0
   140026dea:	mov    BYTE PTR [r9],dl
   140026ded:	jmp    0x140026da9
   140026def:	nop
   140026df0:	movzx  eax,BYTE PTR [r8]
   140026df4:	add    rcx,0x1
   140026df8:	add    r8,0x1
   140026dfc:	test   al,al
   140026dfe:	mov    BYTE PTR [rcx-0x1],al
   140026e01:	je     0x140026e09
   140026e03:	sub    rdx,0x1
   140026e07:	jne    0x140026df0
   140026e09:	test   rdx,rdx
   140026e0c:	jne    0x140026e3e
   140026e0e:	mov    BYTE PTR [r9],dl
   140026e11:	call   0x14001b280
   140026e16:	xor    r9d,r9d
   140026e19:	xor    r8d,r8d
   140026e1c:	xor    edx,edx
   140026e1e:	xor    ecx,ecx
   140026e20:	mov    DWORD PTR [rax],0x22
   140026e26:	mov    QWORD PTR [rsp+0x20],0x0
   140026e2f:	call   0x14001de30
   140026e34:	mov    eax,0x22
   140026e39:	add    rsp,0x38
   140026e3d:	ret    
   140026e3e:	xor    eax,eax
   140026e40:	add    rsp,0x38
   140026e44:	ret    
   140026e45:	int3   
   140026e46:	int3   
   140026e47:	int3   
   140026e48:	int3   
   140026e49:	int3   
   140026e4a:	int3   
   140026e4b:	int3   
   140026e4c:	int3   
   140026e4d:	int3   
   140026e4e:	int3   
   140026e4f:	int3   
   140026e50:	sub    rsp,0x38
   140026e54:	test   r9,r9
   140026e57:	mov    r11,rdx
   140026e5a:	mov    r10,rcx
   140026e5d:	jne    0x140026e70
   140026e5f:	test   rcx,rcx
   140026e62:	jne    0x140026e75
   140026e64:	test   rdx,rdx
   140026e67:	jne    0x140026e91
   140026e69:	xor    eax,eax
   140026e6b:	add    rsp,0x38
   140026e6f:	ret    
   140026e70:	test   rcx,rcx
   140026e73:	je     0x140026e91
   140026e75:	test   rdx,rdx
   140026e78:	je     0x140026e91
   140026e7a:	test   r9,r9
   140026e7d:	jne    0x140026e89
   140026e7f:	mov    BYTE PTR [rcx],r9b
   140026e82:	xor    eax,eax
   140026e84:	add    rsp,0x38
   140026e88:	ret    
   140026e89:	test   r8,r8
   140026e8c:	jne    0x140026ebe
   140026e8e:	mov    BYTE PTR [rcx],r8b
   140026e91:	call   0x14001b280
   140026e96:	xor    r9d,r9d
   140026e99:	xor    r8d,r8d
   140026e9c:	xor    edx,edx
   140026e9e:	xor    ecx,ecx
   140026ea0:	mov    QWORD PTR [rsp+0x20],0x0
   140026ea9:	mov    DWORD PTR [rax],0x16
   140026eaf:	call   0x14001de30
   140026eb4:	mov    eax,0x16
   140026eb9:	add    rsp,0x38
   140026ebd:	ret    
   140026ebe:	cmp    r9,0xffffffffffffffff
   140026ec2:	mov    rdx,rcx
   140026ec5:	mov    rcx,r11
   140026ec8:	jne    0x140026ef0
   140026eca:	data16 xchg ax,ax
   140026ecd:	data16 xchg ax,ax
   140026ed0:	movzx  eax,BYTE PTR [r8]
   140026ed4:	add    rdx,0x1
   140026ed8:	add    r8,0x1
   140026edc:	test   al,al
   140026ede:	mov    BYTE PTR [rdx-0x1],al
   140026ee1:	je     0x140026f17
   140026ee3:	sub    rcx,0x1
   140026ee7:	jne    0x140026ed0
   140026ee9:	jmp    0x140026f17
   140026eeb:	xchg   ax,ax
   140026eed:	data16 xchg ax,ax
   140026ef0:	movzx  eax,BYTE PTR [r8]
   140026ef4:	add    rdx,0x1
   140026ef8:	add    r8,0x1
   140026efc:	test   al,al
   140026efe:	mov    BYTE PTR [rdx-0x1],al
   140026f01:	je     0x140026f0f
   140026f03:	sub    rcx,0x1
   140026f07:	je     0x140026f0f
   140026f09:	sub    r9,0x1
   140026f0d:	jne    0x140026ef0
   140026f0f:	test   r9,r9
   140026f12:	jne    0x140026f17
   140026f14:	mov    BYTE PTR [rdx],r9b
   140026f17:	test   rcx,rcx
   140026f1a:	jne    0x140026e69
   140026f20:	cmp    r9,0xffffffffffffffff
   140026f24:	jne    0x140026f33
   140026f26:	mov    BYTE PTR [r10+r11*1-0x1],cl
   140026f2b:	lea    eax,[rcx+0x50]
   140026f2e:	add    rsp,0x38
   140026f32:	ret    
   140026f33:	mov    BYTE PTR [r10],0x0
   140026f37:	call   0x14001b280
   140026f3c:	xor    r9d,r9d
   140026f3f:	xor    r8d,r8d
   140026f42:	xor    edx,edx
   140026f44:	xor    ecx,ecx
   140026f46:	mov    DWORD PTR [rax],0x22
   140026f4c:	mov    QWORD PTR [rsp+0x20],0x0
   140026f55:	call   0x14001de30
   140026f5a:	mov    eax,0x22
   140026f5f:	add    rsp,0x38
   140026f63:	ret    
   140026f64:	int3   
   140026f65:	int3   
   140026f66:	int3   
   140026f67:	int3   
   140026f68:	int3   
   140026f69:	int3   
   140026f6a:	int3   
   140026f6b:	int3   
   140026f6c:	int3   
   140026f6d:	int3   
   140026f6e:	int3   
   140026f6f:	int3   
   140026f70:	sub    rsp,0x38
   140026f74:	test   rcx,rcx
   140026f77:	mov    r9,rcx
   140026f7a:	je     0x140026f89
   140026f7c:	test   rdx,rdx
   140026f7f:	je     0x140026f89
   140026f81:	test   r8,r8
   140026f84:	jne    0x140026fc0
   140026f86:	mov    BYTE PTR [rcx],r8b
   140026f89:	call   0x14001b280
   140026f8e:	xor    r9d,r9d
   140026f91:	xor    r8d,r8d
   140026f94:	xor    edx,edx
   140026f96:	xor    ecx,ecx
   140026f98:	mov    QWORD PTR [rsp+0x20],0x0
   140026fa1:	mov    DWORD PTR [rax],0x16
   140026fa7:	call   0x14001de30
   140026fac:	mov    eax,0x16
   140026fb1:	add    rsp,0x38
   140026fb5:	ret    
   140026fb6:	data16 data16 xchg ax,ax
   140026fba:	data16 xchg ax,ax
   140026fbd:	data16 xchg ax,ax
   140026fc0:	movzx  eax,BYTE PTR [r8]
   140026fc4:	add    rcx,0x1
   140026fc8:	add    r8,0x1
   140026fcc:	test   al,al
   140026fce:	mov    BYTE PTR [rcx-0x1],al
   140026fd1:	je     0x140026fd9
   140026fd3:	sub    rdx,0x1
   140026fd7:	jne    0x140026fc0
   140026fd9:	test   rdx,rdx
   140026fdc:	jne    0x14002700e
   140026fde:	mov    BYTE PTR [r9],dl
   140026fe1:	call   0x14001b280
   140026fe6:	xor    r9d,r9d
   140026fe9:	xor    r8d,r8d
   140026fec:	xor    edx,edx
   140026fee:	xor    ecx,ecx
   140026ff0:	mov    DWORD PTR [rax],0x22
   140026ff6:	mov    QWORD PTR [rsp+0x20],0x0
   140026fff:	call   0x14001de30
   140027004:	mov    eax,0x22
   140027009:	add    rsp,0x38
   14002700d:	ret    
   14002700e:	xor    eax,eax
   140027010:	add    rsp,0x38
   140027014:	ret    
   140027015:	int3   
   140027016:	int3   
   140027017:	int3   
   140027018:	int3   
   140027019:	int3   
   14002701a:	int3   
   14002701b:	int3   
   14002701c:	int3   
   14002701d:	int3   
   14002701e:	int3   
   14002701f:	int3   
   140027020:	sub    rsp,0x38
   140027024:	test   ecx,ecx
   140027026:	js     0x14002704e
   140027028:	cmp    ecx,0x2
   14002702b:	jle    0x14002703d
   14002702d:	cmp    ecx,0x3
   140027030:	jne    0x14002704e
   140027032:	mov    eax,DWORD PTR [rip+0x1e490]        # 0x1400454c8
   140027038:	add    rsp,0x38
   14002703c:	ret    
   14002703d:	mov    eax,DWORD PTR [rip+0x1e485]        # 0x1400454c8
   140027043:	mov    DWORD PTR [rip+0x1e47f],ecx        # 0x1400454c8
   140027049:	add    rsp,0x38
   14002704d:	ret    
   14002704e:	call   0x14001b280
   140027053:	xor    r9d,r9d
   140027056:	xor    r8d,r8d
   140027059:	xor    edx,edx
   14002705b:	xor    ecx,ecx
   14002705d:	mov    QWORD PTR [rsp+0x20],0x0
   140027066:	mov    DWORD PTR [rax],0x16
   14002706c:	call   0x14001de30
   140027071:	or     eax,0xffffffff
   140027074:	add    rsp,0x38
   140027078:	ret    
   140027079:	int3   
   14002707a:	int3   
   14002707b:	int3   
   14002707c:	int3   
   14002707d:	int3   
   14002707e:	int3   
   14002707f:	int3   
   140027080:	mov    DWORD PTR [rip+0x206ba],0x0        # 0x140047744
   14002708a:	ret    
   14002708b:	int3   
   14002708c:	int3   
   14002708d:	int3   
   14002708e:	int3   
   14002708f:	int3   
   140027090:	rex push rbp
   140027092:	push   r12
   140027094:	push   r13
   140027096:	push   r14
   140027098:	push   r15
   14002709a:	sub    rsp,0x60
   14002709e:	lea    rbp,[rsp+0x40]
   1400270a3:	mov    QWORD PTR [rbp+0x50],rbx
   1400270a7:	mov    QWORD PTR [rbp+0x58],rsi
   1400270ab:	mov    QWORD PTR [rbp+0x60],rdi
   1400270af:	mov    rax,QWORD PTR [rip+0x18f1a]        # 0x14003ffd0
   1400270b6:	xor    rax,rbp
   1400270b9:	mov    QWORD PTR [rbp+0x18],rax
   1400270bd:	mov    r10d,DWORD PTR [rip+0x1f324]        # 0x1400463e8
   1400270c4:	xor    ebx,ebx
   1400270c6:	mov    r14,r9
   1400270c9:	test   r10d,r10d
   1400270cc:	mov    QWORD PTR [rbp+0x8],r9
   1400270d0:	mov    DWORD PTR [rbp+0x0],r8d
   1400270d4:	mov    r15d,edx
   1400270d7:	mov    DWORD PTR [rbp+0x10],edx
   1400270da:	mov    rdi,rcx
   1400270dd:	jne    0x14002712a
   1400270df:	lea    r9d,[rbx+0x1]
   1400270e3:	lea    r8,[rip+0xe09a]        # 0x140035184
   1400270ea:	mov    edx,0x100
   1400270ef:	xor    ecx,ecx
   1400270f1:	mov    DWORD PTR [rsp+0x28],ebx
   1400270f5:	mov    QWORD PTR [rsp+0x20],rbx
   1400270fa:	call   QWORD PTR [rip+0xa150]        # 0x140031250
   140027100:	test   eax,eax
   140027102:	je     0x14002710a
   140027104:	lea    r10d,[rbx+0x1]
   140027108:	jmp    0x140027123
   14002710a:	call   QWORD PTR [rip+0xa368]        # 0x140031478
   140027110:	mov    r10d,DWORD PTR [rip+0x1f2d1]        # 0x1400463e8
   140027117:	mov    ecx,0x2
   14002711c:	cmp    eax,0x78
   14002711f:	cmove  r10d,ecx
   140027123:	mov    DWORD PTR [rip+0x1f2be],r10d        # 0x1400463e8
   14002712a:	mov    r9d,DWORD PTR [rbp+0x70]
   14002712e:	test   r9d,r9d
   140027131:	jle    0x14002716f
   140027133:	mov    eax,r9d
   140027136:	mov    rcx,r14
   140027139:	data16 xchg ax,ax
   14002713c:	data16 data16 xchg ax,ax
   140027140:	sub    eax,0x1
   140027143:	cmp    BYTE PTR [rcx],bl
   140027145:	je     0x140027152
   140027147:	add    rcx,0x1
   14002714b:	test   eax,eax
   14002714d:	jne    0x140027140
   14002714f:	or     eax,0xffffffff
   140027152:	mov    ecx,r9d
   140027155:	sub    ecx,eax
   140027157:	sub    ecx,0x1
   14002715a:	cmp    ecx,r9d
   14002715d:	jge    0x140027169
   14002715f:	lea    r9d,[rcx+0x1]
   140027163:	mov    DWORD PTR [rbp+0x70],r9d
   140027167:	jmp    0x14002716f
   140027169:	mov    r9d,ecx
   14002716c:	mov    DWORD PTR [rbp+0x70],ecx
   14002716f:	cmp    r10d,0x2
   140027173:	je     0x1400273ea
   140027179:	test   r10d,r10d
   14002717c:	je     0x1400273ea
   140027182:	cmp    r10d,0x1
   140027186:	jne    0x14002741d
   14002718c:	mov    r13d,DWORD PTR [rbp+0x88]
   140027193:	mov    r12d,ebx
   140027196:	test   r13d,r13d
   140027199:	jne    0x1400271a2
   14002719b:	mov    rax,QWORD PTR [rdi]
   14002719e:	mov    r13d,DWORD PTR [rax+0x4]
   1400271a2:	cmp    DWORD PTR [rbp+0x90],ebx
   1400271a8:	mov    edx,0x1
   1400271ad:	mov    eax,0x9
   1400271b2:	mov    r8,r14
   1400271b5:	mov    ecx,r13d
   1400271b8:	cmovne edx,eax
   1400271bb:	mov    DWORD PTR [rsp+0x28],ebx
   1400271bf:	mov    QWORD PTR [rsp+0x20],rbx
   1400271c4:	call   QWORD PTR [rip+0xa286]        # 0x140031450
   1400271ca:	test   eax,eax
   1400271cc:	movsxd r14,eax
   1400271cf:	je     0x14002741d
   1400271d5:	jle    0x14002741d
   1400271db:	xor    edx,edx
   1400271dd:	mov    rax,0xffffffffffffffe0
   1400271e4:	div    r14
   1400271e7:	cmp    rax,0x2
   1400271eb:	jb     0x14002741d
   1400271f1:	lea    rcx,[r14+r14*1+0x10]
   1400271f6:	movabs rdi,0xffffffffffffff0
   140027200:	cmp    rcx,0x400
   140027207:	ja     0x140027237
   140027209:	lea    rax,[rcx+0xf]
   14002720d:	cmp    rax,rcx
   140027210:	ja     0x140027215
   140027212:	mov    rax,rdi
   140027215:	and    rax,0xfffffffffffffff0
   140027219:	call   0x140030670
   14002721e:	sub    rsp,rax
   140027221:	lea    rsi,[rsp+0x40]
   140027226:	test   rsi,rsi
   140027229:	je     0x14002741d
   14002722f:	mov    DWORD PTR [rsi],0xcccc
   140027235:	jmp    0x14002724a
   140027237:	call   0x14001a470
   14002723c:	test   rax,rax
   14002723f:	mov    rsi,rax
   140027242:	je     0x14002724e
   140027244:	mov    DWORD PTR [rax],0xdddd
   14002724a:	add    rsi,0x10
   14002724e:	test   rsi,rsi
   140027251:	je     0x14002741d
   140027257:	mov    r9d,DWORD PTR [rbp+0x70]
   14002725b:	mov    r8,QWORD PTR [rbp+0x8]
   14002725f:	mov    edx,0x1
   140027264:	mov    ecx,r13d
   140027267:	mov    DWORD PTR [rsp+0x28],r14d
   14002726c:	mov    QWORD PTR [rsp+0x20],rsi
   140027271:	call   QWORD PTR [rip+0xa1d9]        # 0x140031450
   140027277:	test   eax,eax
   140027279:	je     0x1400273d0
   14002727f:	mov    edx,DWORD PTR [rbp+0x0]
   140027282:	mov    r9d,r14d
   140027285:	mov    r8,rsi
   140027288:	mov    ecx,r15d
   14002728b:	mov    DWORD PTR [rsp+0x28],ebx
   14002728f:	mov    QWORD PTR [rsp+0x20],rbx
   140027294:	call   QWORD PTR [rip+0x9fb6]        # 0x140031250
   14002729a:	test   eax,eax
   14002729c:	movsxd r12,eax
   14002729f:	je     0x1400273d0
   1400272a5:	mov    ecx,DWORD PTR [rbp+0x0]
   1400272a8:	bt     ecx,0xa
   1400272ac:	jae    0x1400272e8
   1400272ae:	mov    eax,DWORD PTR [rbp+0x80]
   1400272b4:	test   eax,eax
   1400272b6:	je     0x1400273d0
   1400272bc:	cmp    r12d,eax
   1400272bf:	jg     0x1400273d0
   1400272c5:	mov    DWORD PTR [rsp+0x28],eax
   1400272c9:	mov    rax,QWORD PTR [rbp+0x78]
   1400272cd:	mov    edx,ecx
   1400272cf:	mov    r9d,r14d
   1400272d2:	mov    r8,rsi
   1400272d5:	mov    ecx,r15d
   1400272d8:	mov    QWORD PTR [rsp+0x20],rax
   1400272dd:	call   QWORD PTR [rip+0x9f6d]        # 0x140031250
   1400272e3:	jmp    0x1400273d0
   1400272e8:	test   eax,eax
   1400272ea:	jle    0x1400273d0
   1400272f0:	xor    edx,edx
   1400272f2:	mov    rax,0xffffffffffffffe0
   1400272f9:	div    r12
   1400272fc:	cmp    rax,0x2
   140027300:	jb     0x1400273d0
   140027306:	lea    rcx,[r12+r12*1+0x10]
   14002730b:	cmp    rcx,0x400
   140027312:	ja     0x140027342
   140027314:	lea    rax,[rcx+0xf]
   140027318:	cmp    rax,rcx
   14002731b:	ja     0x140027320
   14002731d:	mov    rax,rdi
   140027320:	and    rax,0xfffffffffffffff0
   140027324:	call   0x140030670
   140027329:	sub    rsp,rax
   14002732c:	lea    rdi,[rsp+0x40]
   140027331:	test   rdi,rdi
   140027334:	je     0x1400273d0
   14002733a:	mov    DWORD PTR [rdi],0xcccc
   140027340:	jmp    0x140027355
   140027342:	call   0x14001a470
   140027347:	test   rax,rax
   14002734a:	mov    rdi,rax
   14002734d:	je     0x140027359
   14002734f:	mov    DWORD PTR [rax],0xdddd
   140027355:	add    rdi,0x10
   140027359:	test   rdi,rdi
   14002735c:	je     0x1400273d0
   14002735e:	mov    edx,DWORD PTR [rbp+0x0]
   140027361:	mov    r9d,r14d
   140027364:	mov    r8,rsi
   140027367:	mov    ecx,r15d
   14002736a:	mov    DWORD PTR [rsp+0x28],r12d
   14002736f:	mov    QWORD PTR [rsp+0x20],rdi
   140027374:	call   QWORD PTR [rip+0x9ed6]        # 0x140031250
   14002737a:	test   eax,eax
   14002737c:	je     0x1400273be
   14002737e:	mov    eax,DWORD PTR [rbp+0x80]
   140027384:	xor    edx,edx
   140027386:	mov    QWORD PTR [rsp+0x38],rbx
   14002738b:	test   eax,eax
   14002738d:	mov    r9d,r12d
   140027390:	mov    r8,rdi
   140027393:	mov    ecx,r13d
   140027396:	mov    QWORD PTR [rsp+0x30],rbx
   14002739b:	jne    0x1400273a8
   14002739d:	mov    DWORD PTR [rsp+0x28],ebx
   1400273a1:	mov    QWORD PTR [rsp+0x20],rbx
   1400273a6:	jmp    0x1400273b5
   1400273a8:	mov    DWORD PTR [rsp+0x28],eax
   1400273ac:	mov    rax,QWORD PTR [rbp+0x78]
   1400273b0:	mov    QWORD PTR [rsp+0x20],rax
   1400273b5:	call   QWORD PTR [rip+0xa03d]        # 0x1400313f8
   1400273bb:	mov    r12d,eax
   1400273be:	cmp    DWORD PTR [rdi-0x10],0xdddd
   1400273c5:	lea    rcx,[rdi-0x10]
   1400273c9:	jne    0x1400273d0
   1400273cb:	call   0x14001a540
   1400273d0:	cmp    DWORD PTR [rsi-0x10],0xdddd
   1400273d7:	lea    rcx,[rsi-0x10]
   1400273db:	jne    0x1400273e2
   1400273dd:	call   0x14001a540
   1400273e2:	mov    eax,r12d
   1400273e5:	jmp    0x1400275a6
   1400273ea:	test   r15d,r15d
   1400273ed:	mov    r12,rbx
   1400273f0:	jne    0x1400273fd
   1400273f2:	mov    rax,QWORD PTR [rdi]
   1400273f5:	mov    r15d,DWORD PTR [rax+0x14]
   1400273f9:	mov    DWORD PTR [rbp+0x10],r15d
   1400273fd:	mov    esi,DWORD PTR [rbp+0x88]
   140027403:	test   esi,esi
   140027405:	jne    0x14002740d
   140027407:	mov    rax,QWORD PTR [rdi]
   14002740a:	mov    esi,DWORD PTR [rax+0x4]
   14002740d:	mov    ecx,r15d
   140027410:	call   0x140027e90
   140027415:	cmp    eax,0xffffffff
   140027418:	mov    r13d,eax
   14002741b:	jne    0x140027424
   14002741d:	xor    eax,eax
   14002741f:	jmp    0x1400275a6
   140027424:	cmp    eax,esi
   140027426:	mov    r8,r14
   140027429:	je     0x14002757f
   14002742f:	lea    r9,[rbp+0x70]
   140027433:	mov    edx,eax
   140027435:	mov    ecx,esi
   140027437:	mov    DWORD PTR [rsp+0x28],ebx
   14002743b:	mov    QWORD PTR [rsp+0x20],rbx
   140027440:	call   0x140027f00
   140027445:	test   rax,rax
   140027448:	mov    r14,rax
   14002744b:	je     0x14002741d
   14002744d:	mov    r9d,DWORD PTR [rbp+0x70]
   140027451:	mov    edx,DWORD PTR [rbp+0x0]
   140027454:	mov    r8,rax
   140027457:	mov    ecx,r15d
   14002745a:	mov    DWORD PTR [rsp+0x28],ebx
   14002745e:	mov    QWORD PTR [rsp+0x20],rbx
   140027463:	call   QWORD PTR [rip+0x9ddf]        # 0x140031248
   140027469:	mov    r15,QWORD PTR [rbp+0x78]
   14002746d:	test   eax,eax
   14002746f:	movsxd r9,eax
   140027472:	mov    DWORD PTR [rbp+0x8],r9d
   140027476:	jle    0x140027563
   14002747c:	cmp    r9,0xffffffffffffffe0
   140027480:	mov    rcx,r9
   140027483:	ja     0x140027563
   140027489:	add    rcx,0x10
   14002748d:	cmp    rcx,0x400
   140027494:	ja     0x1400274ce
   140027496:	lea    rdi,[rcx+0xf]
   14002749a:	cmp    rdi,rcx
   14002749d:	ja     0x1400274a9
   14002749f:	movabs rdi,0xffffffffffffff0
   1400274a9:	and    rdi,0xfffffffffffffff0
   1400274ad:	mov    rax,rdi
   1400274b0:	call   0x140030670
   1400274b5:	sub    rsp,rdi
   1400274b8:	lea    rdi,[rsp+0x40]
   1400274bd:	test   rdi,rdi
   1400274c0:	je     0x140027563
   1400274c6:	mov    DWORD PTR [rdi],0xcccc
   1400274cc:	jmp    0x1400274e1
   1400274ce:	call   0x14001a470
   1400274d3:	test   rax,rax
   1400274d6:	mov    rdi,rax
   1400274d9:	je     0x1400274e5
   1400274db:	mov    DWORD PTR [rax],0xdddd
   1400274e1:	add    rdi,0x10
   1400274e5:	test   rdi,rdi
   1400274e8:	mov    r9d,DWORD PTR [rbp+0x8]
   1400274ec:	je     0x140027563
   1400274ee:	movsxd r8,r9d
   1400274f1:	xor    edx,edx
   1400274f3:	mov    rcx,rdi
   1400274f6:	call   0x14001b520
   1400274fb:	mov    r11d,DWORD PTR [rbp+0x8]
   1400274ff:	mov    r9d,DWORD PTR [rbp+0x70]
   140027503:	mov    edx,DWORD PTR [rbp+0x0]
   140027506:	mov    ecx,DWORD PTR [rbp+0x10]
   140027509:	mov    DWORD PTR [rsp+0x28],r11d
   14002750e:	mov    r8,r14
   140027511:	mov    QWORD PTR [rsp+0x20],rdi
   140027516:	call   QWORD PTR [rip+0x9d2c]        # 0x140031248
   14002751c:	test   eax,eax
   14002751e:	mov    DWORD PTR [rbp+0x8],eax
   140027521:	je     0x140027551
   140027523:	mov    eax,DWORD PTR [rbp+0x80]
   140027529:	lea    r9,[rbp+0x8]
   14002752d:	mov    r8,rdi
   140027530:	mov    DWORD PTR [rsp+0x28],eax
   140027534:	mov    edx,esi
   140027536:	mov    ecx,r13d
   140027539:	mov    QWORD PTR [rsp+0x20],r15
   14002753e:	call   0x140027f00
   140027543:	mov    ecx,DWORD PTR [rbp+0x8]
   140027546:	test   rax,rax
   140027549:	mov    r12,rax
   14002754c:	cmove  ecx,ebx
   14002754f:	mov    ebx,ecx
   140027551:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140027558:	lea    rcx,[rdi-0x10]
   14002755c:	jne    0x140027563
   14002755e:	call   0x14001a540
   140027563:	mov    rcx,r14
   140027566:	call   0x14001a540
   14002756b:	test   r12,r12
   14002756e:	je     0x1400275a4
   140027570:	cmp    r15,r12
   140027573:	je     0x1400275a4
   140027575:	mov    rcx,r12
   140027578:	call   0x14001a540
   14002757d:	jmp    0x1400275a4
   14002757f:	mov    eax,DWORD PTR [rbp+0x80]
   140027585:	mov    r9d,DWORD PTR [rbp+0x70]
   140027589:	mov    edx,DWORD PTR [rbp+0x0]
   14002758c:	mov    DWORD PTR [rsp+0x28],eax
   140027590:	mov    rax,QWORD PTR [rbp+0x78]
   140027594:	mov    ecx,r15d
   140027597:	mov    QWORD PTR [rsp+0x20],rax
   14002759c:	call   QWORD PTR [rip+0x9ca6]        # 0x140031248
   1400275a2:	mov    ebx,eax
   1400275a4:	mov    eax,ebx
   1400275a6:	mov    rcx,QWORD PTR [rbp+0x18]
   1400275aa:	xor    rcx,rbp
   1400275ad:	call   0x140019370
   1400275b2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400275b6:	mov    rsi,QWORD PTR [rbp+0x58]
   1400275ba:	mov    rdi,QWORD PTR [rbp+0x60]
   1400275be:	lea    rsp,[rbp+0x20]
   1400275c2:	pop    r15
   1400275c4:	pop    r14
   1400275c6:	pop    r13
   1400275c8:	pop    r12
   1400275ca:	pop    rbp
   1400275cb:	ret    
   1400275cc:	int3   
   1400275cd:	int3   
   1400275ce:	int3   
   1400275cf:	int3   
   1400275d0:	mov    rax,rsp
   1400275d3:	push   rbx
   1400275d4:	sub    rsp,0x80
   1400275db:	mov    QWORD PTR [rax+0x8],rbp
   1400275df:	mov    QWORD PTR [rax+0x18],rdi
   1400275e3:	xor    dil,dil
   1400275e6:	test   rcx,rcx
   1400275e9:	mov    QWORD PTR [rax-0x10],r12
   1400275ed:	mov    QWORD PTR [rax-0x18],r13
   1400275f1:	mov    BYTE PTR [rax-0x20],dil
   1400275f5:	mov    rbp,r9
   1400275f8:	mov    r12d,r8d
   1400275fb:	mov    r13d,edx
   1400275fe:	jne    0x140027691
   140027604:	mov    QWORD PTR [rax+0x10],rsi
   140027608:	call   0x14001d930
   14002760d:	mov    rcx,QWORD PTR [rax+0xc0]
   140027614:	mov    rsi,QWORD PTR [rax+0xb8]
   14002761b:	mov    rbx,rax
   14002761e:	cmp    rcx,QWORD PTR [rip+0x1946b]        # 0x140040a90
   140027625:	mov    QWORD PTR [rsp+0x60],rax
   14002762a:	mov    QWORD PTR [rsp+0x50],rcx
   14002762f:	mov    QWORD PTR [rsp+0x58],rsi
   140027634:	je     0x14002764e
   140027636:	mov    ecx,DWORD PTR [rax+0xc8]
   14002763c:	test   DWORD PTR [rip+0x192d6],ecx        # 0x140040918
   140027642:	jne    0x14002764e
   140027644:	call   0x14001ed60
   140027649:	mov    QWORD PTR [rsp+0x50],rax
   14002764e:	cmp    rsi,QWORD PTR [rip+0x191bb]        # 0x140040810
   140027655:	mov    rsi,QWORD PTR [rsp+0x98]
   14002765d:	je     0x140027677
   14002765f:	mov    eax,DWORD PTR [rbx+0xc8]
   140027665:	test   DWORD PTR [rip+0x192ad],eax        # 0x140040918
   14002766b:	jne    0x140027677
   14002766d:	call   0x14001e210
   140027672:	mov    QWORD PTR [rsp+0x58],rax
   140027677:	test   BYTE PTR [rbx+0xc8],0x2
   14002767e:	jne    0x1400276ae
   140027680:	or     DWORD PTR [rbx+0xc8],0x2
   140027687:	mov    dil,0x1
   14002768a:	mov    BYTE PTR [rsp+0x68],dil
   14002768f:	jmp    0x1400276ae
   140027691:	mov    rax,QWORD PTR [rcx]
   140027694:	lea    rdx,[rsp+0x50]
   140027699:	mov    QWORD PTR [rdx],rax
   14002769c:	mov    rax,QWORD PTR [rcx+0x8]
   1400276a0:	mov    QWORD PTR [rdx+0x8],rax
   1400276a4:	movzx  edi,BYTE PTR [rsp+0x68]
   1400276a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400276ae:	mov    eax,DWORD PTR [rsp+0xd0]
   1400276b5:	lea    rcx,[rsp+0x50]
   1400276ba:	mov    r9,rbp
   1400276bd:	mov    DWORD PTR [rsp+0x40],eax
   1400276c1:	mov    eax,DWORD PTR [rsp+0xc8]
   1400276c8:	mov    r8d,r12d
   1400276cb:	mov    DWORD PTR [rsp+0x38],eax
   1400276cf:	mov    eax,DWORD PTR [rsp+0xc0]
   1400276d6:	mov    edx,r13d
   1400276d9:	mov    DWORD PTR [rsp+0x30],eax
   1400276dd:	mov    rax,QWORD PTR [rsp+0xb8]
   1400276e5:	mov    QWORD PTR [rsp+0x28],rax
   1400276ea:	mov    eax,DWORD PTR [rsp+0xb0]
   1400276f1:	mov    DWORD PTR [rsp+0x20],eax
   1400276f5:	call   0x140027090
   1400276fa:	mov    r13,QWORD PTR [rsp+0x70]
   1400276ff:	mov    r12,QWORD PTR [rsp+0x78]
   140027704:	mov    rbp,QWORD PTR [rsp+0x90]
   14002770c:	test   dil,dil
   14002770f:	mov    rdi,QWORD PTR [rsp+0xa0]
   140027717:	je     0x140027720
   140027719:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140027720:	add    rsp,0x80
   140027727:	pop    rbx
   140027728:	ret    
   140027729:	int3   
   14002772a:	int3   
   14002772b:	int3   
   14002772c:	int3   
   14002772d:	int3   
   14002772e:	int3   
   14002772f:	int3   
   140027730:	mov    DWORD PTR [rsp+0x20],r9d
   140027735:	push   rbp
   140027736:	push   r12
   140027738:	push   r13
   14002773a:	push   r14
   14002773c:	push   r15
   14002773e:	sub    rsp,0x40
   140027742:	lea    rbp,[rsp+0x30]
   140027747:	mov    QWORD PTR [rbp+0x40],rbx
   14002774b:	mov    QWORD PTR [rbp+0x48],rsi
   14002774f:	mov    QWORD PTR [rbp+0x50],rdi
   140027753:	mov    rax,QWORD PTR [rip+0x18876]        # 0x14003ffd0
   14002775a:	xor    rax,rbp
   14002775d:	mov    QWORD PTR [rbp+0x8],rax
   140027761:	mov    eax,DWORD PTR [rip+0x1ec85]        # 0x1400463ec
   140027767:	mov    r14,r8
   14002776a:	mov    r15d,edx
   14002776d:	test   eax,eax
   14002776f:	mov    r12,rcx
   140027772:	jne    0x1400277ee
   140027774:	mov    r8d,0x1
   14002777a:	lea    r9,[rbp+0x0]
   14002777e:	lea    rdx,[rip+0xd9ff]        # 0x140035184
   140027785:	mov    ecx,r8d
   140027788:	call   QWORD PTR [rip+0x9ae2]        # 0x140031270
   14002778e:	test   eax,eax
   140027790:	je     0x14002779e
   140027792:	mov    DWORD PTR [rip+0x1ec50],0x1        # 0x1400463ec
   14002779c:	jmp    0x1400277fc
   14002779e:	call   QWORD PTR [rip+0x9cd4]        # 0x140031478
   1400277a4:	cmp    eax,0x78
   1400277a7:	jne    0x1400277e8
   1400277a9:	mov    DWORD PTR [rip+0x1ec39],0x2        # 0x1400463ec
   1400277b3:	mov    esi,DWORD PTR [rbp+0x70]
   1400277b6:	xor    edi,edi
   1400277b8:	test   esi,esi
   1400277ba:	jne    0x1400277c3
   1400277bc:	mov    rax,QWORD PTR [r12]
   1400277c0:	mov    esi,DWORD PTR [rax+0x14]
   1400277c3:	mov    ebx,DWORD PTR [rbp+0x68]
   1400277c6:	test   ebx,ebx
   1400277c8:	jne    0x1400277d1
   1400277ca:	mov    rax,QWORD PTR [r12]
   1400277ce:	mov    ebx,DWORD PTR [rax+0x4]
   1400277d1:	mov    ecx,esi
   1400277d3:	call   0x140027e90
   1400277d8:	cmp    eax,0xffffffff
   1400277db:	jne    0x14002790a
   1400277e1:	xor    eax,eax
   1400277e3:	jmp    0x140027962
   1400277e8:	mov    eax,DWORD PTR [rip+0x1ebfe]        # 0x1400463ec
   1400277ee:	cmp    eax,0x2
   1400277f1:	je     0x1400277b3
   1400277f3:	test   eax,eax
   1400277f5:	je     0x1400277b3
   1400277f7:	cmp    eax,0x1
   1400277fa:	jne    0x1400277e1
   1400277fc:	mov    esi,DWORD PTR [rbp+0x68]
   1400277ff:	xor    edi,edi
   140027801:	test   esi,esi
   140027803:	jne    0x14002780c
   140027805:	mov    rax,QWORD PTR [r12]
   140027809:	mov    esi,DWORD PTR [rax+0x4]
   14002780c:	cmp    DWORD PTR [rbp+0x78],edi
   14002780f:	mov    r9d,DWORD PTR [rbp+0x58]
   140027813:	mov    edx,0x1
   140027818:	mov    eax,0x9
   14002781d:	mov    r8,r14
   140027820:	mov    ecx,esi
   140027822:	cmovne edx,eax
   140027825:	mov    DWORD PTR [rsp+0x28],edi
   140027829:	mov    QWORD PTR [rsp+0x20],rdi
   14002782e:	call   QWORD PTR [rip+0x9c1c]        # 0x140031450
   140027834:	test   eax,eax
   140027836:	movsxd r12,eax
   140027839:	je     0x1400277e1
   14002783b:	jle    0x1400277e1
   14002783d:	movabs rax,0x7ffffffffffffff0
   140027847:	cmp    r12,rax
   14002784a:	ja     0x1400277e1
   14002784c:	lea    rcx,[r12+r12*1+0x10]
   140027851:	cmp    rcx,0x400
   140027858:	ja     0x14002788f
   14002785a:	lea    rax,[rcx+0xf]
   14002785e:	cmp    rax,rcx
   140027861:	ja     0x14002786d
   140027863:	movabs rax,0xffffffffffffff0
   14002786d:	and    rax,0xfffffffffffffff0
   140027871:	call   0x140030670
   140027876:	sub    rsp,rax
   140027879:	lea    rbx,[rsp+0x30]
   14002787e:	test   rbx,rbx
   140027881:	je     0x1400277e1
   140027887:	mov    DWORD PTR [rbx],0xcccc
   14002788d:	jmp    0x1400278a2
   14002788f:	call   0x14001a470
   140027894:	test   rax,rax
   140027897:	mov    rbx,rax
   14002789a:	je     0x1400278a6
   14002789c:	mov    DWORD PTR [rax],0xdddd
   1400278a2:	add    rbx,0x10
   1400278a6:	test   rbx,rbx
   1400278a9:	je     0x1400277e1
   1400278af:	lea    r8,[r12+r12*1]
   1400278b3:	xor    edx,edx
   1400278b5:	mov    rcx,rbx
   1400278b8:	call   0x14001b520
   1400278bd:	mov    r9d,DWORD PTR [rbp+0x58]
   1400278c1:	mov    r8,r14
   1400278c4:	mov    edx,0x1
   1400278c9:	mov    ecx,esi
   1400278cb:	mov    DWORD PTR [rsp+0x28],r12d
   1400278d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400278d5:	call   QWORD PTR [rip+0x9b75]        # 0x140031450
   1400278db:	test   eax,eax
   1400278dd:	je     0x1400278f4
   1400278df:	mov    r9,QWORD PTR [rbp+0x60]
   1400278e3:	mov    r8d,eax
   1400278e6:	mov    rdx,rbx
   1400278e9:	mov    ecx,r15d
   1400278ec:	call   QWORD PTR [rip+0x997e]        # 0x140031270
   1400278f2:	mov    edi,eax
   1400278f4:	cmp    DWORD PTR [rbx-0x10],0xdddd
   1400278fb:	lea    rcx,[rbx-0x10]
   1400278ff:	jne    0x140027906
   140027901:	call   0x14001a540
   140027906:	mov    eax,edi
   140027908:	jmp    0x140027962
   14002790a:	cmp    eax,ebx
   14002790c:	je     0x140027936
   14002790e:	lea    r9,[rbp+0x58]
   140027912:	mov    r8,r14
   140027915:	mov    edx,eax
   140027917:	mov    ecx,ebx
   140027919:	mov    DWORD PTR [rsp+0x28],edi
   14002791d:	mov    QWORD PTR [rsp+0x20],rdi
   140027922:	call   0x140027f00
   140027927:	test   rax,rax
   14002792a:	mov    rdi,rax
   14002792d:	je     0x1400277e1
   140027933:	mov    r14,rax
   140027936:	mov    rax,QWORD PTR [rbp+0x60]
   14002793a:	mov    r9d,DWORD PTR [rbp+0x58]
   14002793e:	mov    r8,r14
   140027941:	mov    edx,r15d
   140027944:	mov    ecx,esi
   140027946:	mov    QWORD PTR [rsp+0x20],rax
   14002794b:	call   QWORD PTR [rip+0x9917]        # 0x140031268
   140027951:	test   rdi,rdi
   140027954:	mov    ebx,eax
   140027956:	je     0x140027960
   140027958:	mov    rcx,rdi
   14002795b:	call   0x14001a540
   140027960:	mov    eax,ebx
   140027962:	mov    rcx,QWORD PTR [rbp+0x8]
   140027966:	xor    rcx,rbp
   140027969:	call   0x140019370
   14002796e:	mov    rbx,QWORD PTR [rbp+0x40]
   140027972:	mov    rsi,QWORD PTR [rbp+0x48]
   140027976:	mov    rdi,QWORD PTR [rbp+0x50]
   14002797a:	lea    rsp,[rbp+0x10]
   14002797e:	pop    r15
   140027980:	pop    r14
   140027982:	pop    r13
   140027984:	pop    r12
   140027986:	pop    rbp
   140027987:	ret    
   140027988:	int3   
   140027989:	int3   
   14002798a:	int3   
   14002798b:	int3   
   14002798c:	int3   
   14002798d:	int3   
   14002798e:	int3   
   14002798f:	int3   
   140027990:	mov    rax,rsp
   140027993:	push   rbx
   140027994:	sub    rsp,0x70
   140027998:	mov    QWORD PTR [rax+0x8],rbp
   14002799c:	mov    QWORD PTR [rax+0x18],rdi
   1400279a0:	xor    dil,dil
   1400279a3:	test   rcx,rcx
   1400279a6:	mov    QWORD PTR [rax-0x10],r12
   1400279aa:	mov    QWORD PTR [rax-0x18],r13
   1400279ae:	mov    BYTE PTR [rax-0x20],dil
   1400279b2:	mov    ebp,r9d
   1400279b5:	mov    r12,r8
   1400279b8:	mov    r13d,edx
   1400279bb:	jne    0x140027a4e
   1400279c1:	mov    QWORD PTR [rax+0x10],rsi
   1400279c5:	call   0x14001d930
   1400279ca:	mov    rcx,QWORD PTR [rax+0xc0]
   1400279d1:	mov    rsi,QWORD PTR [rax+0xb8]
   1400279d8:	mov    rbx,rax
   1400279db:	cmp    rcx,QWORD PTR [rip+0x190ae]        # 0x140040a90
   1400279e2:	mov    QWORD PTR [rsp+0x50],rax
   1400279e7:	mov    QWORD PTR [rsp+0x40],rcx
   1400279ec:	mov    QWORD PTR [rsp+0x48],rsi
   1400279f1:	je     0x140027a0b
   1400279f3:	mov    ecx,DWORD PTR [rax+0xc8]
   1400279f9:	test   DWORD PTR [rip+0x18f19],ecx        # 0x140040918
   1400279ff:	jne    0x140027a0b
   140027a01:	call   0x14001ed60
   140027a06:	mov    QWORD PTR [rsp+0x40],rax
   140027a0b:	cmp    rsi,QWORD PTR [rip+0x18dfe]        # 0x140040810
   140027a12:	mov    rsi,QWORD PTR [rsp+0x88]
   140027a1a:	je     0x140027a34
   140027a1c:	mov    eax,DWORD PTR [rbx+0xc8]
   140027a22:	test   DWORD PTR [rip+0x18ef0],eax        # 0x140040918
   140027a28:	jne    0x140027a34
   140027a2a:	call   0x14001e210
   140027a2f:	mov    QWORD PTR [rsp+0x48],rax
   140027a34:	test   BYTE PTR [rbx+0xc8],0x2
   140027a3b:	jne    0x140027a6b
   140027a3d:	or     DWORD PTR [rbx+0xc8],0x2
   140027a44:	mov    dil,0x1
   140027a47:	mov    BYTE PTR [rsp+0x58],dil
   140027a4c:	jmp    0x140027a6b
   140027a4e:	mov    rax,QWORD PTR [rcx]
   140027a51:	lea    rdx,[rsp+0x40]
   140027a56:	mov    QWORD PTR [rdx],rax
   140027a59:	mov    rax,QWORD PTR [rcx+0x8]
   140027a5d:	mov    QWORD PTR [rdx+0x8],rax
   140027a61:	movzx  edi,BYTE PTR [rsp+0x58]
   140027a66:	mov    rbx,QWORD PTR [rsp+0x50]
   140027a6b:	mov    eax,DWORD PTR [rsp+0xb8]
   140027a72:	lea    rcx,[rsp+0x40]
   140027a77:	mov    r9d,ebp
   140027a7a:	mov    DWORD PTR [rsp+0x38],eax
   140027a7e:	mov    eax,DWORD PTR [rsp+0xb0]
   140027a85:	mov    r8,r12
   140027a88:	mov    DWORD PTR [rsp+0x30],eax
   140027a8c:	mov    eax,DWORD PTR [rsp+0xa8]
   140027a93:	mov    edx,r13d
   140027a96:	mov    DWORD PTR [rsp+0x28],eax
   140027a9a:	mov    rax,QWORD PTR [rsp+0xa0]
   140027aa2:	mov    QWORD PTR [rsp+0x20],rax
   140027aa7:	call   0x140027730
   140027aac:	mov    r13,QWORD PTR [rsp+0x60]
   140027ab1:	mov    r12,QWORD PTR [rsp+0x68]
   140027ab6:	mov    rbp,QWORD PTR [rsp+0x80]
   140027abe:	test   dil,dil
   140027ac1:	mov    rdi,QWORD PTR [rsp+0x90]
   140027ac9:	je     0x140027ad2
   140027acb:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140027ad2:	add    rsp,0x70
   140027ad6:	pop    rbx
   140027ad7:	ret    
   140027ad8:	int3   
   140027ad9:	int3   
   140027ada:	int3   
   140027adb:	int3   
   140027adc:	int3   
   140027add:	int3   
   140027ade:	int3   
   140027adf:	int3   
   140027ae0:	test   rcx,rcx
   140027ae3:	je     0x140027cc9
   140027ae9:	push   rbx
   140027aea:	sub    rsp,0x20
   140027aee:	mov    rbx,rcx
   140027af1:	mov    rcx,QWORD PTR [rcx+0x8]
   140027af5:	call   0x14001a540
   140027afa:	mov    rcx,QWORD PTR [rbx+0x10]
   140027afe:	call   0x14001a540
   140027b03:	mov    rcx,QWORD PTR [rbx+0x18]
   140027b07:	call   0x14001a540
   140027b0c:	mov    rcx,QWORD PTR [rbx+0x20]
   140027b10:	call   0x14001a540
   140027b15:	mov    rcx,QWORD PTR [rbx+0x28]
   140027b19:	call   0x14001a540
   140027b1e:	mov    rcx,QWORD PTR [rbx+0x30]
   140027b22:	call   0x14001a540
   140027b27:	mov    rcx,QWORD PTR [rbx]
   140027b2a:	call   0x14001a540
   140027b2f:	mov    rcx,QWORD PTR [rbx+0x40]
   140027b33:	call   0x14001a540
   140027b38:	mov    rcx,QWORD PTR [rbx+0x48]
   140027b3c:	call   0x14001a540
   140027b41:	mov    rcx,QWORD PTR [rbx+0x50]
   140027b45:	call   0x14001a540
   140027b4a:	mov    rcx,QWORD PTR [rbx+0x58]
   140027b4e:	call   0x14001a540
   140027b53:	mov    rcx,QWORD PTR [rbx+0x60]
   140027b57:	call   0x14001a540
   140027b5c:	mov    rcx,QWORD PTR [rbx+0x68]
   140027b60:	call   0x14001a540
   140027b65:	mov    rcx,QWORD PTR [rbx+0x38]
   140027b69:	call   0x14001a540
   140027b6e:	mov    rcx,QWORD PTR [rbx+0x70]
   140027b72:	call   0x14001a540
   140027b77:	mov    rcx,QWORD PTR [rbx+0x78]
   140027b7b:	call   0x14001a540
   140027b80:	mov    rcx,QWORD PTR [rbx+0x80]
   140027b87:	call   0x14001a540
   140027b8c:	mov    rcx,QWORD PTR [rbx+0x88]
   140027b93:	call   0x14001a540
   140027b98:	mov    rcx,QWORD PTR [rbx+0x90]
   140027b9f:	call   0x14001a540
   140027ba4:	mov    rcx,QWORD PTR [rbx+0x98]
   140027bab:	call   0x14001a540
   140027bb0:	mov    rcx,QWORD PTR [rbx+0xa0]
   140027bb7:	call   0x14001a540
   140027bbc:	mov    rcx,QWORD PTR [rbx+0xa8]
   140027bc3:	call   0x14001a540
   140027bc8:	mov    rcx,QWORD PTR [rbx+0xb0]
   140027bcf:	call   0x14001a540
   140027bd4:	mov    rcx,QWORD PTR [rbx+0xb8]
   140027bdb:	call   0x14001a540
   140027be0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140027be7:	call   0x14001a540
   140027bec:	mov    rcx,QWORD PTR [rbx+0xc8]
   140027bf3:	call   0x14001a540
   140027bf8:	mov    rcx,QWORD PTR [rbx+0xd0]
   140027bff:	call   0x14001a540
   140027c04:	mov    rcx,QWORD PTR [rbx+0xd8]
   140027c0b:	call   0x14001a540
   140027c10:	mov    rcx,QWORD PTR [rbx+0xe0]
   140027c17:	call   0x14001a540
   140027c1c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140027c23:	call   0x14001a540
   140027c28:	mov    rcx,QWORD PTR [rbx+0xf0]
   140027c2f:	call   0x14001a540
   140027c34:	mov    rcx,QWORD PTR [rbx+0xf8]
   140027c3b:	call   0x14001a540
   140027c40:	mov    rcx,QWORD PTR [rbx+0x100]
   140027c47:	call   0x14001a540
   140027c4c:	mov    rcx,QWORD PTR [rbx+0x108]
   140027c53:	call   0x14001a540
   140027c58:	mov    rcx,QWORD PTR [rbx+0x110]
   140027c5f:	call   0x14001a540
   140027c64:	mov    rcx,QWORD PTR [rbx+0x118]
   140027c6b:	call   0x14001a540
   140027c70:	mov    rcx,QWORD PTR [rbx+0x120]
   140027c77:	call   0x14001a540
   140027c7c:	mov    rcx,QWORD PTR [rbx+0x128]
   140027c83:	call   0x14001a540
   140027c88:	mov    rcx,QWORD PTR [rbx+0x130]
   140027c8f:	call   0x14001a540
   140027c94:	mov    rcx,QWORD PTR [rbx+0x138]
   140027c9b:	call   0x14001a540
   140027ca0:	mov    rcx,QWORD PTR [rbx+0x140]
   140027ca7:	call   0x14001a540
   140027cac:	mov    rcx,QWORD PTR [rbx+0x148]
   140027cb3:	call   0x14001a540
   140027cb8:	mov    rcx,QWORD PTR [rbx+0x150]
   140027cbf:	call   0x14001a540
   140027cc4:	add    rsp,0x20
   140027cc8:	pop    rbx
   140027cc9:	ret    0x0
   140027ccc:	int3   
   140027ccd:	int3   
   140027cce:	int3   
   140027ccf:	int3   
   140027cd0:	test   rcx,rcx
   140027cd3:	je     0x140027d17
   140027cd5:	push   rbx
   140027cd6:	sub    rsp,0x20
   140027cda:	mov    rbx,rcx
   140027cdd:	mov    rcx,QWORD PTR [rcx]
   140027ce0:	cmp    rcx,QWORD PTR [rip+0x19399]        # 0x140041080
   140027ce7:	je     0x140027cee
   140027ce9:	call   0x14001a540
   140027cee:	mov    rcx,QWORD PTR [rbx+0x8]
   140027cf2:	cmp    rcx,QWORD PTR [rip+0x1938f]        # 0x140041088
   140027cf9:	je     0x140027d00
   140027cfb:	call   0x14001a540
   140027d00:	mov    rcx,QWORD PTR [rbx+0x10]
   140027d04:	cmp    rcx,QWORD PTR [rip+0x19385]        # 0x140041090
   140027d0b:	je     0x140027d12
   140027d0d:	call   0x14001a540
   140027d12:	add    rsp,0x20
   140027d16:	pop    rbx
   140027d17:	ret    0x0
   140027d1a:	int3   
   140027d1b:	int3   
   140027d1c:	int3   
   140027d1d:	int3   
   140027d1e:	int3   
   140027d1f:	int3   
   140027d20:	test   rcx,rcx
   140027d23:	je     0x140027db4
   140027d29:	push   rbx
   140027d2a:	sub    rsp,0x20
   140027d2e:	mov    rbx,rcx
   140027d31:	mov    rcx,QWORD PTR [rcx+0x18]
   140027d35:	cmp    rcx,QWORD PTR [rip+0x1935c]        # 0x140041098
   140027d3c:	je     0x140027d43
   140027d3e:	call   0x14001a540
   140027d43:	mov    rcx,QWORD PTR [rbx+0x20]
   140027d47:	cmp    rcx,QWORD PTR [rip+0x19352]        # 0x1400410a0
   140027d4e:	je     0x140027d55
   140027d50:	call   0x14001a540
   140027d55:	mov    rcx,QWORD PTR [rbx+0x28]
   140027d59:	cmp    rcx,QWORD PTR [rip+0x19348]        # 0x1400410a8
   140027d60:	je     0x140027d67
   140027d62:	call   0x14001a540
   140027d67:	mov    rcx,QWORD PTR [rbx+0x30]
   140027d6b:	cmp    rcx,QWORD PTR [rip+0x1933e]        # 0x1400410b0
   140027d72:	je     0x140027d79
   140027d74:	call   0x14001a540
   140027d79:	mov    rcx,QWORD PTR [rbx+0x38]
   140027d7d:	cmp    rcx,QWORD PTR [rip+0x19334]        # 0x1400410b8
   140027d84:	je     0x140027d8b
   140027d86:	call   0x14001a540
   140027d8b:	mov    rcx,QWORD PTR [rbx+0x40]
   140027d8f:	cmp    rcx,QWORD PTR [rip+0x1932a]        # 0x1400410c0
   140027d96:	je     0x140027d9d
   140027d98:	call   0x14001a540
   140027d9d:	mov    rcx,QWORD PTR [rbx+0x48]
   140027da1:	cmp    rcx,QWORD PTR [rip+0x19320]        # 0x1400410c8
   140027da8:	je     0x140027daf
   140027daa:	call   0x14001a540
   140027daf:	add    rsp,0x20
   140027db3:	pop    rbx
   140027db4:	ret    0x0
   140027db7:	int3   
   140027db8:	int3   
   140027db9:	int3   
   140027dba:	int3   
   140027dbb:	int3   
   140027dbc:	int3   
   140027dbd:	int3   
   140027dbe:	int3   
   140027dbf:	int3   
   140027dc0:	int3   
   140027dc1:	int3   
   140027dc2:	int3   
   140027dc3:	int3   
   140027dc4:	int3   
   140027dc5:	int3   
   140027dc6:	data16 data16 xchg ax,ax
   140027dca:	data16 data16 xchg ax,ax
   140027dce:	xchg   ax,ax
   140027dd0:	test   r8,r8
   140027dd3:	je     0x140027e4a
   140027dd5:	sub    rdx,rcx
   140027dd8:	mov    r9,rdx
   140027ddb:	movabs r11,0x8101010101010100
   140027de5:	test   cl,0x7
   140027de8:	je     0x140027e09
   140027dea:	mov    al,BYTE PTR [rcx]
   140027dec:	mov    dl,BYTE PTR [rcx+r9*1]
   140027df0:	inc    rcx
   140027df3:	cmp    al,dl
   140027df5:	jne    0x140027e4e
   140027df7:	dec    r8
   140027dfa:	je     0x140027e4a
   140027dfc:	test   al,al
   140027dfe:	je     0x140027e4a
   140027e00:	test   rcx,0x7
   140027e07:	jne    0x140027dea
   140027e09:	lea    rdx,[rcx+r9*1]
   140027e0d:	and    dx,0xfff
   140027e12:	cmp    dx,0xff8
   140027e17:	ja     0x140027dea
   140027e19:	mov    rax,QWORD PTR [rcx]
   140027e1c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140027e20:	cmp    rax,rdx
   140027e23:	jne    0x140027dea
   140027e25:	add    rcx,0x8
   140027e29:	sub    r8,0x8
   140027e2d:	movabs r10,0x7efefefefefefeff
   140027e37:	jbe    0x140027e4a
   140027e39:	xor    rax,0xffffffffffffffff
   140027e3d:	add    r10,rdx
   140027e40:	xor    rax,r10
   140027e43:	test   r11,rax
   140027e46:	je     0x140027e09
   140027e48:	jmp    0x140027e56
   140027e4a:	xor    rax,rax
   140027e4d:	ret    
   140027e4e:	sbb    rax,rax
   140027e51:	sbb    rax,0xffffffffffffffff
   140027e55:	ret    
   140027e56:	test   dl,dl
   140027e58:	je     0x140027e81
   140027e5a:	test   dh,dh
   140027e5c:	je     0x140027e81
   140027e5e:	shr    rdx,0x10
   140027e62:	test   dl,dl
   140027e64:	je     0x140027e81
   140027e66:	test   dh,dh
   140027e68:	je     0x140027e81
   140027e6a:	shr    rdx,0x10
   140027e6e:	test   dl,dl
   140027e70:	je     0x140027e81
   140027e72:	test   dh,dh
   140027e74:	je     0x140027e81
   140027e76:	shr    edx,0x10
   140027e79:	test   dl,dl
   140027e7b:	je     0x140027e81
   140027e7d:	test   dh,dh
   140027e7f:	jne    0x140027e09
   140027e81:	xor    rax,rax
   140027e84:	ret    
   140027e85:	int3   
   140027e86:	int3   
   140027e87:	int3   
   140027e88:	int3   
   140027e89:	int3   
   140027e8a:	int3   
   140027e8b:	int3   
   140027e8c:	int3   
   140027e8d:	int3   
   140027e8e:	int3   
   140027e8f:	int3   
   140027e90:	sub    rsp,0x38
   140027e94:	mov    rax,QWORD PTR [rip+0x18135]        # 0x14003ffd0
   140027e9b:	xor    rax,rsp
   140027e9e:	mov    QWORD PTR [rsp+0x28],rax
   140027ea3:	lea    r8,[rsp+0x20]
   140027ea8:	mov    r9d,0x6
   140027eae:	mov    edx,0x1004
   140027eb3:	mov    BYTE PTR [rsp+0x26],0x0
   140027eb8:	call   QWORD PTR [rip+0x93ba]        # 0x140031278
   140027ebe:	test   eax,eax
   140027ec0:	jne    0x140027ed7
   140027ec2:	or     eax,0xffffffff
   140027ec5:	mov    rcx,QWORD PTR [rsp+0x28]
   140027eca:	xor    rcx,rsp
   140027ecd:	call   0x140019370
   140027ed2:	add    rsp,0x38
   140027ed6:	ret    
   140027ed7:	lea    rcx,[rsp+0x20]
   140027edc:	call   0x14002aa10
   140027ee1:	mov    rcx,QWORD PTR [rsp+0x28]
   140027ee6:	xor    rcx,rsp
   140027ee9:	call   0x140019370
   140027eee:	add    rsp,0x38
   140027ef2:	ret    
   140027ef3:	int3   
   140027ef4:	int3   
   140027ef5:	int3   
   140027ef6:	int3   
   140027ef7:	int3   
   140027ef8:	int3   
   140027ef9:	int3   
   140027efa:	int3   
   140027efb:	int3   
   140027efc:	int3   
   140027efd:	int3   
   140027efe:	int3   
   140027eff:	int3   
   140027f00:	rex push rbp
   140027f02:	push   rbx
   140027f03:	push   rsi
   140027f04:	push   rdi
   140027f05:	push   r12
   140027f07:	push   r13
   140027f09:	push   r14
   140027f0b:	push   r15
   140027f0d:	sub    rsp,0x88
   140027f14:	lea    rbp,[rsp+0x40]
   140027f19:	mov    rax,QWORD PTR [rip+0x180b0]        # 0x14003ffd0
   140027f20:	xor    rax,rbp
   140027f23:	mov    QWORD PTR [rbp+0x30],rax
   140027f27:	mov    r15,QWORD PTR [rbp+0xb0]
   140027f2e:	mov    r12d,DWORD PTR [r9]
   140027f31:	xor    r13d,r13d
   140027f34:	cmp    ecx,edx
   140027f36:	mov    rbx,r8
   140027f39:	mov    rsi,r13
   140027f3c:	mov    DWORD PTR [rbp+0x0],r13d
   140027f40:	mov    QWORD PTR [rbp+0x10],r9
   140027f44:	mov    r14d,edx
   140027f47:	mov    QWORD PTR [rbp+0x8],rbx
   140027f4b:	mov    edi,ecx
   140027f4d:	mov    DWORD PTR [rbp+0x4],ecx
   140027f50:	je     0x140028163
   140027f56:	lea    rdx,[rbp+0x18]
   140027f5a:	call   QWORD PTR [rip+0x92c8]        # 0x140031228
   140027f60:	test   eax,eax
   140027f62:	je     0x140028008
   140027f68:	cmp    DWORD PTR [rbp+0x18],0x1
   140027f6c:	jne    0x140028008
   140027f72:	lea    rdx,[rbp+0x18]
   140027f76:	mov    ecx,r14d
   140027f79:	call   QWORD PTR [rip+0x92a9]        # 0x140031228
   140027f7f:	test   eax,eax
   140027f81:	je     0x140028008
   140027f87:	cmp    DWORD PTR [rbp+0x18],0x1
   140027f8b:	jne    0x140028008
   140027f8d:	cmp    r12d,0xffffffff
   140027f91:	mov    DWORD PTR [rbp+0x0],0x1
   140027f98:	je     0x140027ff6
   140027f9a:	mov    ebx,r12d
   140027f9d:	test   ebx,ebx
   140027f9f:	jle    0x14002802f
   140027fa5:	movsxd r13,ebx
   140027fa8:	movabs rax,0x7ffffffffffffff0
   140027fb2:	cmp    r13,rax
   140027fb5:	ja     0x14002802f
   140027fb7:	lea    rcx,[r13+r13*1+0x10]
   140027fbc:	cmp    rcx,0x400
   140027fc3:	ja     0x140028036
   140027fc5:	lea    rax,[rcx+0xf]
   140027fc9:	cmp    rax,rcx
   140027fcc:	ja     0x140027fd8
   140027fce:	movabs rax,0xffffffffffffff0
   140027fd8:	and    rax,0xfffffffffffffff0
   140027fdc:	call   0x140030670
   140027fe1:	sub    rsp,rax
   140027fe4:	lea    rdi,[rsp+0x40]
   140027fe9:	test   rdi,rdi
   140027fec:	je     0x14002802f
   140027fee:	mov    DWORD PTR [rdi],0xcccc
   140027ff4:	jmp    0x140028049
   140027ff6:	or     rcx,0xffffffffffffffff
   140027ffa:	mov    rdi,rbx
   140027ffd:	xor    eax,eax
   140027fff:	repnz scas al,BYTE PTR es:[rdi]
   140028001:	not    rcx
   140028004:	mov    ebx,ecx
   140028006:	jmp    0x140027f9d
   140028008:	mov    r9d,r12d
   14002800b:	mov    r8,rbx
   14002800e:	mov    edx,0x1
   140028013:	mov    ecx,edi
   140028015:	mov    DWORD PTR [rsp+0x28],r13d
   14002801a:	mov    QWORD PTR [rsp+0x20],r13
   14002801f:	call   QWORD PTR [rip+0x942b]        # 0x140031450
   140028025:	test   eax,eax
   140028027:	mov    ebx,eax
   140028029:	jne    0x140027f9d
   14002802f:	xor    eax,eax
   140028031:	jmp    0x140028166
   140028036:	call   0x14001a470
   14002803b:	test   rax,rax
   14002803e:	mov    rdi,rax
   140028041:	je     0x14002804d
   140028043:	mov    DWORD PTR [rax],0xdddd
   140028049:	add    rdi,0x10
   14002804d:	test   rdi,rdi
   140028050:	je     0x14002802f
   140028052:	lea    r8,[r13+r13*1+0x0]
   140028057:	xor    edx,edx
   140028059:	mov    rcx,rdi
   14002805c:	call   0x14001b520
   140028061:	mov    r8,QWORD PTR [rbp+0x8]
   140028065:	mov    ecx,DWORD PTR [rbp+0x4]
   140028068:	mov    r9d,r12d
   14002806b:	mov    edx,0x1
   140028070:	mov    DWORD PTR [rsp+0x28],ebx
   140028074:	mov    QWORD PTR [rsp+0x20],rdi
   140028079:	call   QWORD PTR [rip+0x93d1]        # 0x140031450
   14002807f:	test   eax,eax
   140028081:	je     0x140028151
   140028087:	test   r15,r15
   14002808a:	je     0x1400280c8
   14002808c:	xor    eax,eax
   14002808e:	mov    r9d,ebx
   140028091:	mov    r8,rdi
   140028094:	mov    QWORD PTR [rsp+0x38],rax
   140028099:	mov    QWORD PTR [rsp+0x30],rax
   14002809e:	mov    eax,DWORD PTR [rbp+0xb8]
   1400280a4:	mov    DWORD PTR [rsp+0x28],eax
   1400280a8:	xor    edx,edx
   1400280aa:	mov    ecx,r14d
   1400280ad:	mov    QWORD PTR [rsp+0x20],r15
   1400280b2:	call   QWORD PTR [rip+0x9340]        # 0x1400313f8
   1400280b8:	test   eax,eax
   1400280ba:	je     0x140028151
   1400280c0:	mov    rsi,r15
   1400280c3:	jmp    0x140028151
   1400280c8:	xor    r13d,r13d
   1400280cb:	cmp    DWORD PTR [rbp+0x0],esi
   1400280ce:	jne    0x1400280fb
   1400280d0:	mov    QWORD PTR [rsp+0x38],r13
   1400280d5:	mov    QWORD PTR [rsp+0x30],r13
   1400280da:	mov    r9d,ebx
   1400280dd:	mov    r8,rdi
   1400280e0:	xor    edx,edx
   1400280e2:	mov    ecx,r14d
   1400280e5:	mov    DWORD PTR [rsp+0x28],r13d
   1400280ea:	mov    QWORD PTR [rsp+0x20],r13
   1400280ef:	call   QWORD PTR [rip+0x9303]        # 0x1400313f8
   1400280f5:	test   eax,eax
   1400280f7:	mov    ebx,eax
   1400280f9:	je     0x140028151
   1400280fb:	movsxd rdx,ebx
   1400280fe:	mov    ecx,0x1
   140028103:	call   0x140021720
   140028108:	test   rax,rax
   14002810b:	mov    rsi,rax
   14002810e:	je     0x140028151
   140028110:	mov    QWORD PTR [rsp+0x38],r13
   140028115:	mov    QWORD PTR [rsp+0x30],r13
   14002811a:	mov    r9d,ebx
   14002811d:	mov    r8,rdi
   140028120:	xor    edx,edx
   140028122:	mov    ecx,r14d
   140028125:	mov    DWORD PTR [rsp+0x28],ebx
   140028129:	mov    QWORD PTR [rsp+0x20],rax
   14002812e:	call   QWORD PTR [rip+0x92c4]        # 0x1400313f8
   140028134:	test   eax,eax
   140028136:	jne    0x140028145
   140028138:	mov    rcx,rsi
   14002813b:	call   0x14001a540
   140028140:	mov    rsi,r13
   140028143:	jmp    0x140028151
   140028145:	cmp    r12d,0xffffffff
   140028149:	je     0x140028151
   14002814b:	mov    rcx,QWORD PTR [rbp+0x10]
   14002814f:	mov    DWORD PTR [rcx],eax
   140028151:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140028158:	lea    rcx,[rdi-0x10]
   14002815c:	jne    0x140028163
   14002815e:	call   0x14001a540
   140028163:	mov    rax,rsi
   140028166:	mov    rcx,QWORD PTR [rbp+0x30]
   14002816a:	xor    rcx,rbp
   14002816d:	call   0x140019370
   140028172:	lea    rsp,[rbp+0x48]
   140028176:	pop    r15
   140028178:	pop    r14
   14002817a:	pop    r13
   14002817c:	pop    r12
   14002817e:	pop    rdi
   14002817f:	pop    rsi
   140028180:	pop    rbx
   140028181:	pop    rbp
   140028182:	ret    
   140028183:	int3   
   140028184:	int3   
   140028185:	int3   
   140028186:	int3   
   140028187:	int3   
   140028188:	int3   
   140028189:	int3   
   14002818a:	int3   
   14002818b:	int3   
   14002818c:	int3   
   14002818d:	int3   
   14002818e:	int3   
   14002818f:	int3   
   140028190:	mov    QWORD PTR [rsp+0x8],rbx
   140028195:	push   rdi
   140028196:	sub    rsp,0x20
   14002819a:	movsxd rdi,ecx
   14002819d:	mov    ebx,r8d
   1400281a0:	mov    QWORD PTR [rsp+0x38],rdx
   1400281a5:	mov    ecx,edi
   1400281a7:	call   0x14002b360
   1400281ac:	cmp    rax,0xffffffffffffffff
   1400281b0:	jne    0x1400281cc
   1400281b2:	call   0x14001b280
   1400281b7:	mov    DWORD PTR [rax],0x9
   1400281bd:	or     rax,0xffffffffffffffff
   1400281c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400281c6:	add    rsp,0x20
   1400281ca:	pop    rdi
   1400281cb:	ret    
   1400281cc:	mov    edx,DWORD PTR [rsp+0x38]
   1400281d0:	lea    r8,[rsp+0x3c]
   1400281d5:	mov    r9d,ebx
   1400281d8:	mov    rcx,rax
   1400281db:	call   QWORD PTR [rip+0x90ff]        # 0x1400312e0
   1400281e1:	cmp    eax,0xffffffff
   1400281e4:	mov    DWORD PTR [rsp+0x38],eax
   1400281e8:	jne    0x14002820a
   1400281ea:	call   QWORD PTR [rip+0x9288]        # 0x140031478
   1400281f0:	test   eax,eax
   1400281f2:	je     0x14002820a
   1400281f4:	mov    ecx,eax
   1400281f6:	call   0x14001b2e0
   1400281fb:	or     rax,0xffffffffffffffff
   1400281ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140028204:	add    rsp,0x20
   140028208:	pop    rdi
   140028209:	ret    
   14002820a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002820f:	mov    rax,rdi
   140028212:	mov    rdx,rdi
   140028215:	and    eax,0x1f
   140028218:	sar    rdx,0x5
   14002821c:	lea    r8,[rip+0x1f53d]        # 0x140047760
   140028223:	lea    rcx,[rax+rax*4]
   140028227:	mov    rax,QWORD PTR [r8+rdx*8]
   14002822b:	add    rcx,rcx
   14002822e:	and    BYTE PTR [rax+rcx*8+0x8],0xfd
   140028233:	mov    rax,QWORD PTR [rsp+0x38]
   140028238:	add    rsp,0x20
   14002823c:	pop    rdi
   14002823d:	ret    
   14002823e:	int3   
   14002823f:	int3   
   140028240:	mov    QWORD PTR [rsp+0x10],rbx
   140028245:	mov    DWORD PTR [rsp+0x8],ecx
   140028249:	push   rsi
   14002824a:	push   rdi
   14002824b:	push   r12
   14002824d:	push   r13
   14002824f:	push   r14
   140028251:	sub    rsp,0x30
   140028255:	mov    r12d,r8d
   140028258:	mov    r13,rdx
   14002825b:	movsxd rbx,ecx
   14002825e:	cmp    ebx,0xfffffffe
   140028261:	jne    0x140028280
   140028263:	call   0x14001b2b0
   140028268:	xor    edi,edi
   14002826a:	mov    DWORD PTR [rax],edi
   14002826c:	call   0x14001b280
   140028271:	mov    DWORD PTR [rax],0x9
   140028277:	or     rax,0xffffffffffffffff
   14002827b:	jmp    0x14002835f
   140028280:	test   ecx,ecx
   140028282:	js     0x140028333
   140028288:	cmp    ebx,DWORD PTR [rip+0x1f4ba]        # 0x140047748
   14002828e:	jae    0x140028333
   140028294:	mov    rax,rbx
   140028297:	mov    rdi,rbx
   14002829a:	sar    rdi,0x5
   14002829e:	lea    r14,[rip+0x1f4bb]        # 0x140047760
   1400282a5:	and    eax,0x1f
   1400282a8:	lea    rsi,[rax+rax*4]
   1400282ac:	add    rsi,rsi
   1400282af:	mov    rax,QWORD PTR [r14+rdi*8]
   1400282b3:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   1400282b7:	and    ecx,0x1
   1400282ba:	jne    0x1400282ea
   1400282bc:	call   0x14001b2b0
   1400282c1:	xor    edi,edi
   1400282c3:	mov    DWORD PTR [rax],edi
   1400282c5:	call   0x14001b280
   1400282ca:	mov    DWORD PTR [rax],0x9
   1400282d0:	mov    QWORD PTR [rsp+0x20],rdi
   1400282d5:	xor    r9d,r9d
   1400282d8:	xor    r8d,r8d
   1400282db:	xor    edx,edx
   1400282dd:	xor    ecx,ecx
   1400282df:	call   0x14001de30
   1400282e4:	or     rax,0xffffffffffffffff
   1400282e8:	jmp    0x14002835f
   1400282ea:	mov    ecx,ebx
   1400282ec:	call   0x14002b400
   1400282f1:	nop
   1400282f2:	mov    rax,QWORD PTR [r14+rdi*8]
   1400282f6:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   1400282fb:	je     0x14002830f
   1400282fd:	mov    r8d,r12d
   140028300:	mov    rdx,r13
   140028303:	mov    ecx,ebx
   140028305:	call   0x140028190
   14002830a:	mov    rdi,rax
   14002830d:	jmp    0x140028327
   14002830f:	call   0x14001b280
   140028314:	mov    DWORD PTR [rax],0x9
   14002831a:	call   0x14001b2b0
   14002831f:	xor    edi,edi
   140028321:	mov    DWORD PTR [rax],edi
   140028323:	or     rdi,0xffffffffffffffff
   140028327:	mov    ecx,ebx
   140028329:	call   0x14002b4d0
   14002832e:	mov    rax,rdi
   140028331:	jmp    0x14002835f
   140028333:	call   0x14001b2b0
   140028338:	xor    edi,edi
   14002833a:	mov    DWORD PTR [rax],edi
   14002833c:	call   0x14001b280
   140028341:	mov    DWORD PTR [rax],0x9
   140028347:	mov    QWORD PTR [rsp+0x20],rdi
   14002834c:	xor    r9d,r9d
   14002834f:	xor    r8d,r8d
   140028352:	xor    edx,edx
   140028354:	xor    ecx,ecx
   140028356:	call   0x14001de30
   14002835b:	or     rax,0xffffffffffffffff
   14002835f:	mov    rbx,QWORD PTR [rsp+0x68]
   140028364:	add    rsp,0x30
   140028368:	pop    r14
   14002836a:	pop    r13
   14002836c:	pop    r12
   14002836e:	pop    rdi
   14002836f:	pop    rsi
   140028370:	ret    
   140028371:	int3   
   140028372:	int3   
   140028373:	int3   
   140028374:	int3   
   140028375:	int3   
   140028376:	int3   
   140028377:	int3   
   140028378:	int3   
   140028379:	int3   
   14002837a:	int3   
   14002837b:	int3   
   14002837c:	int3   
   14002837d:	int3   
   14002837e:	int3   
   14002837f:	int3   
   140028380:	rex push rbp
   140028382:	sub    rsp,0x30
   140028386:	mov    rbp,rdx
   140028389:	mov    ecx,DWORD PTR [rbp+0x60]
   14002838c:	call   0x14002b4d0
   140028391:	add    rsp,0x30
   140028395:	pop    rbp
   140028396:	ret    
   140028397:	int3   
   140028398:	int3   
   140028399:	int3   
   14002839a:	int3   
   14002839b:	int3   
   14002839c:	int3   
   14002839d:	int3   
   14002839e:	int3   
   14002839f:	int3   
   1400283a0:	rex push rbx
   1400283a2:	push   rbp
   1400283a3:	push   rsi
   1400283a4:	push   rdi
   1400283a5:	push   r12
   1400283a7:	push   r14
   1400283a9:	sub    rsp,0x5f8
   1400283b0:	mov    rax,QWORD PTR [rip+0x17c19]        # 0x14003ffd0
   1400283b7:	xor    rax,rsp
   1400283ba:	mov    QWORD PTR [rsp+0x5e0],rax
   1400283c2:	xor    edi,edi
   1400283c4:	test   r8d,r8d
   1400283c7:	mov    ebp,r8d
   1400283ca:	mov    r12,rdx
   1400283cd:	movsxd rbx,ecx
   1400283d0:	mov    r14d,edi
   1400283d3:	mov    esi,edi
   1400283d5:	jne    0x1400283de
   1400283d7:	xor    eax,eax
   1400283d9:	jmp    0x140028af8
   1400283de:	test   rdx,rdx
   1400283e1:	jne    0x140028411
   1400283e3:	call   0x14001b2b0
   1400283e8:	mov    DWORD PTR [rax],edi
   1400283ea:	call   0x14001b280
   1400283ef:	xor    r9d,r9d
   1400283f2:	xor    r8d,r8d
   1400283f5:	xor    edx,edx
   1400283f7:	xor    ecx,ecx
   1400283f9:	mov    DWORD PTR [rax],0x16
   1400283ff:	mov    QWORD PTR [rsp+0x20],rdi
   140028404:	call   0x14001de30
   140028409:	or     eax,0xffffffff
   14002840c:	jmp    0x140028af8
   140028411:	mov    QWORD PTR [rsp+0x648],r13
   140028419:	mov    rax,rbx
   14002841c:	mov    QWORD PTR [rsp+0x5f0],r15
   140028424:	and    eax,0x1f
   140028427:	mov    r15,rbx
   14002842a:	lea    rcx,[rip+0x1f32f]        # 0x140047760
   140028431:	sar    r15,0x5
   140028435:	lea    r13,[rax+rax*4]
   140028439:	mov    rcx,QWORD PTR [rcx+r15*8]
   14002843d:	shl    r13,0x4
   140028441:	mov    QWORD PTR [rsp+0x50],r15
   140028446:	movzx  edi,BYTE PTR [r13+rcx*1+0x38]
   14002844c:	mov    QWORD PTR [rsp+0x58],r13
   140028451:	add    dil,dil
   140028454:	sar    dil,1
   140028457:	cmp    dil,0x2
   14002845b:	je     0x140028463
   14002845d:	cmp    dil,0x1
   140028461:	jne    0x140028498
   140028463:	mov    eax,ebp
   140028465:	not    eax
   140028467:	test   al,0x1
   140028469:	jne    0x140028498
   14002846b:	call   0x14001b2b0
   140028470:	xor    ebx,ebx
   140028472:	mov    DWORD PTR [rax],ebx
   140028474:	call   0x14001b280
   140028479:	xor    r9d,r9d
   14002847c:	xor    r8d,r8d
   14002847f:	xor    edx,edx
   140028481:	xor    ecx,ecx
   140028483:	mov    DWORD PTR [rax],0x16
   140028489:	mov    QWORD PTR [rsp+0x20],rbx
   14002848e:	call   0x14001de30
   140028493:	jmp    0x140028ae5
   140028498:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14002849e:	je     0x1400284ad
   1400284a0:	xor    edx,edx
   1400284a2:	mov    ecx,ebx
   1400284a4:	lea    r8d,[rdx+0x2]
   1400284a8:	call   0x140028190
   1400284ad:	mov    ecx,ebx
   1400284af:	call   0x140028cd0
   1400284b4:	test   eax,eax
   1400284b6:	je     0x140028760
   1400284bc:	lea    rdx,[rip+0x1f29d]        # 0x140047760
   1400284c3:	mov    rax,QWORD PTR [rdx+r15*8]
   1400284c7:	test   BYTE PTR [r13+rax*1+0x8],0x80
   1400284cd:	je     0x140028779
   1400284d3:	call   0x14001d930
   1400284d8:	xor    ebx,ebx
   1400284da:	lea    rdx,[rsp+0x48]
   1400284df:	mov    rcx,QWORD PTR [rax+0xc0]
   1400284e6:	lea    rax,[rip+0x1f273]        # 0x140047760
   1400284ed:	cmp    DWORD PTR [rcx+0x14],ebx
   1400284f0:	mov    rcx,QWORD PTR [rax+r15*8]
   1400284f4:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400284f9:	sete   bl
   1400284fc:	call   QWORD PTR [rip+0x8d86]        # 0x140031288
   140028502:	test   eax,eax
   140028504:	je     0x140028772
   14002850a:	test   ebx,ebx
   14002850c:	je     0x140028517
   14002850e:	test   dil,dil
   140028511:	je     0x140028769
   140028517:	call   QWORD PTR [rip+0x8d63]        # 0x140031280
   14002851d:	test   ebp,ebp
   14002851f:	mov    DWORD PTR [rsp+0x4c],esi
   140028523:	mov    r13d,eax
   140028526:	mov    DWORD PTR [rsp+0x48],eax
   14002852a:	mov    rbx,r12
   14002852d:	je     0x140028756
   140028533:	mov    r15d,DWORD PTR [rsp+0x48]
   140028538:	data16 data16 xchg ax,ax
   14002853c:	data16 data16 xchg ax,ax
   140028540:	test   dil,dil
   140028543:	jne    0x1400286a0
   140028549:	movsx  ecx,BYTE PTR [rbx]
   14002854c:	xor    r15d,r15d
   14002854f:	cmp    cl,0xa
   140028552:	sete   r15b
   140028556:	call   0x140019f10
   14002855b:	test   eax,eax
   14002855d:	jne    0x14002857f
   14002855f:	lea    r8d,[rax+0x1]
   140028563:	lea    rcx,[rsp+0x40]
   140028568:	mov    rdx,rbx
   14002856b:	call   0x1400294f0
   140028570:	cmp    eax,0xffffffff
   140028573:	jne    0x1400285aa
   140028575:	mov    r15d,DWORD PTR [rsp+0x48]
   14002857a:	jmp    0x140028a67
   14002857f:	mov    rax,rbp
   140028582:	sub    rax,rbx
   140028585:	add    rax,r12
   140028588:	cmp    rax,0x1
   14002858c:	jle    0x140028575
   14002858e:	lea    rcx,[rsp+0x40]
   140028593:	mov    r8d,0x2
   140028599:	mov    rdx,rbx
   14002859c:	call   0x1400294f0
   1400285a1:	cmp    eax,0xffffffff
   1400285a4:	je     0x140028575
   1400285a6:	add    rbx,0x1
   1400285aa:	xor    eax,eax
   1400285ac:	lea    r8,[rsp+0x40]
   1400285b1:	mov    r9d,0x1
   1400285b7:	mov    QWORD PTR [rsp+0x38],rax
   1400285bc:	mov    QWORD PTR [rsp+0x30],rax
   1400285c1:	lea    rax,[rsp+0x60]
   1400285c6:	xor    edx,edx
   1400285c8:	mov    ecx,r13d
   1400285cb:	mov    DWORD PTR [rsp+0x28],0x5
   1400285d3:	mov    QWORD PTR [rsp+0x20],rax
   1400285d8:	add    rbx,0x1
   1400285dc:	call   QWORD PTR [rip+0x8e16]        # 0x1400313f8
   1400285e2:	test   eax,eax
   1400285e4:	mov    r13d,eax
   1400285e7:	je     0x140028575
   1400285e9:	mov    rax,QWORD PTR [rsp+0x50]
   1400285ee:	lea    rcx,[rip+0x1f16b]        # 0x140047760
   1400285f5:	lea    r9,[rsp+0x4c]
   1400285fa:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400285fe:	mov    rax,QWORD PTR [rsp+0x58]
   140028603:	lea    rdx,[rsp+0x60]
   140028608:	mov    rcx,QWORD PTR [rax+rcx*1]
   14002860c:	mov    r8d,r13d
   14002860f:	mov    QWORD PTR [rsp+0x20],0x0
   140028618:	call   QWORD PTR [rip+0x8e2a]        # 0x140031448
   14002861e:	test   eax,eax
   140028620:	je     0x14002872c
   140028626:	mov    eax,DWORD PTR [rsp+0x4c]
   14002862a:	add    r14d,eax
   14002862d:	cmp    eax,r13d
   140028630:	jl     0x140028575
   140028636:	test   r15d,r15d
   140028639:	je     0x140028699
   14002863b:	mov    rax,QWORD PTR [rsp+0x50]
   140028640:	mov    BYTE PTR [rsp+0x60],0xd
   140028645:	lea    rcx,[rip+0x1f114]        # 0x140047760
   14002864c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140028650:	mov    rax,QWORD PTR [rsp+0x58]
   140028655:	lea    r9,[rsp+0x4c]
   14002865a:	mov    rcx,QWORD PTR [rax+rcx*1]
   14002865e:	lea    rdx,[rsp+0x60]
   140028663:	mov    r8d,0x1
   140028669:	mov    QWORD PTR [rsp+0x20],0x0
   140028672:	call   QWORD PTR [rip+0x8dd0]        # 0x140031448
   140028678:	test   eax,eax
   14002867a:	je     0x14002871e
   140028680:	cmp    DWORD PTR [rsp+0x4c],0x1
   140028685:	jl     0x140028575
   14002868b:	mov    r13d,DWORD PTR [rsp+0x48]
   140028690:	add    esi,0x1
   140028693:	add    r14d,0x1
   140028697:	jmp    0x140028707
   140028699:	mov    r13d,DWORD PTR [rsp+0x48]
   14002869e:	jmp    0x140028707
   1400286a0:	cmp    dil,0x1
   1400286a4:	je     0x1400286ac
   1400286a6:	cmp    dil,0x2
   1400286aa:	jne    0x1400286c3
   1400286ac:	movzx  eax,WORD PTR [rbx]
   1400286af:	xor    r15d,r15d
   1400286b2:	cmp    ax,0xa
   1400286b6:	mov    WORD PTR [rsp+0x40],ax
   1400286bb:	sete   r15b
   1400286bf:	add    rbx,0x2
   1400286c3:	cmp    dil,0x1
   1400286c7:	je     0x1400286cf
   1400286c9:	cmp    dil,0x2
   1400286cd:	jne    0x140028707
   1400286cf:	movzx  ecx,WORD PTR [rsp+0x40]
   1400286d4:	call   0x14002b500
   1400286d9:	cmp    ax,WORD PTR [rsp+0x40]
   1400286de:	jne    0x140028748
   1400286e0:	add    r14d,0x1
   1400286e4:	test   r15d,r15d
   1400286e7:	je     0x140028707
   1400286e9:	mov    cx,0xd
   1400286ed:	mov    WORD PTR [rsp+0x40],0xd
   1400286f4:	call   0x14002b500
   1400286f9:	cmp    ax,WORD PTR [rsp+0x40]
   1400286fe:	jne    0x14002873a
   140028700:	add    r14d,0x1
   140028704:	add    esi,0x1
   140028707:	mov    eax,ebx
   140028709:	sub    eax,r12d
   14002870c:	cmp    eax,ebp
   14002870e:	jb     0x140028540
   140028714:	mov    r15d,DWORD PTR [rsp+0x48]
   140028719:	jmp    0x140028a67
   14002871e:	call   QWORD PTR [rip+0x8d54]        # 0x140031478
   140028724:	mov    r15d,eax
   140028727:	jmp    0x140028a67
   14002872c:	call   QWORD PTR [rip+0x8d46]        # 0x140031478
   140028732:	mov    r15d,eax
   140028735:	jmp    0x140028a67
   14002873a:	call   QWORD PTR [rip+0x8d38]        # 0x140031478
   140028740:	mov    r15d,eax
   140028743:	jmp    0x140028a67
   140028748:	call   QWORD PTR [rip+0x8d2a]        # 0x140031478
   14002874e:	mov    r15d,eax
   140028751:	jmp    0x140028a67
   140028756:	mov    r15d,DWORD PTR [rsp+0x48]
   14002875b:	jmp    0x140028a7d
   140028760:	lea    rdx,[rip+0x1eff9]        # 0x140047760
   140028767:	jmp    0x140028779
   140028769:	lea    rdx,[rip+0x1eff0]        # 0x140047760
   140028770:	jmp    0x140028779
   140028772:	lea    rdx,[rip+0x1efe7]        # 0x140047760
   140028779:	mov    rcx,QWORD PTR [rdx+r15*8]
   14002877d:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   140028783:	je     0x140028a40
   140028789:	xor    r15d,r15d
   14002878c:	test   dil,dil
   14002878f:	jne    0x14002884e
   140028795:	test   ebp,ebp
   140028797:	mov    rdi,r12
   14002879a:	je     0x140028ab3
   1400287a0:	lea    rbx,[rsp+0x70]
   1400287a5:	xor    ecx,ecx
   1400287a7:	mov    eax,edi
   1400287a9:	sub    eax,r12d
   1400287ac:	cmp    eax,ebp
   1400287ae:	jae    0x1400287dc
   1400287b0:	movzx  eax,BYTE PTR [rdi]
   1400287b3:	add    rdi,0x1
   1400287b7:	cmp    al,0xa
   1400287b9:	jne    0x1400287c9
   1400287bb:	mov    BYTE PTR [rbx],0xd
   1400287be:	add    rbx,0x1
   1400287c2:	add    esi,0x1
   1400287c5:	add    rcx,0x1
   1400287c9:	add    rcx,0x1
   1400287cd:	mov    BYTE PTR [rbx],al
   1400287cf:	add    rbx,0x1
   1400287d3:	cmp    rcx,0x400
   1400287da:	jb     0x1400287a7
   1400287dc:	lea    rax,[rsp+0x70]
   1400287e1:	mov    r8d,ebx
   1400287e4:	lea    r9,[rsp+0x44]
   1400287e9:	sub    r8d,eax
   1400287ec:	mov    rax,QWORD PTR [rsp+0x50]
   1400287f1:	mov    QWORD PTR [rsp+0x20],r15
   1400287f6:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400287fa:	lea    rdx,[rsp+0x70]
   1400287ff:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140028804:	call   QWORD PTR [rip+0x8c3e]        # 0x140031448
   14002880a:	test   eax,eax
   14002880c:	je     0x140028840
   14002880e:	movsxd rax,DWORD PTR [rsp+0x44]
   140028813:	lea    rcx,[rsp+0x70]
   140028818:	sub    rbx,rcx
   14002881b:	add    r14d,eax
   14002881e:	cmp    rax,rbx
   140028821:	jl     0x140028a67
   140028827:	mov    eax,edi
   140028829:	lea    rdx,[rip+0x1ef30]        # 0x140047760
   140028830:	sub    eax,r12d
   140028833:	cmp    eax,ebp
   140028835:	jb     0x1400287a0
   14002883b:	jmp    0x140028a67
   140028840:	call   QWORD PTR [rip+0x8c32]        # 0x140031478
   140028846:	mov    r15d,eax
   140028849:	jmp    0x140028a67
   14002884e:	cmp    dil,0x2
   140028852:	jne    0x140028923
   140028858:	test   ebp,ebp
   14002885a:	mov    rdi,r12
   14002885d:	je     0x140028ab3
   140028863:	nop
   140028864:	data16 data16 xchg ax,ax
   140028868:	data16 data16 xchg ax,ax
   14002886c:	data16 data16 xchg ax,ax
   140028870:	lea    rbx,[rsp+0x70]
   140028875:	xor    ecx,ecx
   140028877:	mov    eax,edi
   140028879:	sub    eax,r12d
   14002887c:	cmp    eax,ebp
   14002887e:	jae    0x1400288b1
   140028880:	movzx  eax,WORD PTR [rdi]
   140028883:	add    rdi,0x2
   140028887:	cmp    ax,0xa
   14002888b:	jne    0x14002889d
   14002888d:	mov    WORD PTR [rbx],0xd
   140028892:	add    rbx,0x2
   140028896:	add    esi,0x2
   140028899:	add    rcx,0x2
   14002889d:	add    rcx,0x2
   1400288a1:	mov    WORD PTR [rbx],ax
   1400288a4:	add    rbx,0x2
   1400288a8:	cmp    rcx,0x3ff
   1400288af:	jb     0x140028877
   1400288b1:	lea    rax,[rsp+0x70]
   1400288b6:	mov    r8d,ebx
   1400288b9:	lea    r9,[rsp+0x44]
   1400288be:	sub    r8d,eax
   1400288c1:	mov    rax,QWORD PTR [rsp+0x50]
   1400288c6:	mov    QWORD PTR [rsp+0x20],r15
   1400288cb:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400288cf:	lea    rdx,[rsp+0x70]
   1400288d4:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400288d9:	call   QWORD PTR [rip+0x8b69]        # 0x140031448
   1400288df:	test   eax,eax
   1400288e1:	je     0x140028915
   1400288e3:	movsxd rax,DWORD PTR [rsp+0x44]
   1400288e8:	lea    rcx,[rsp+0x70]
   1400288ed:	sub    rbx,rcx
   1400288f0:	add    r14d,eax
   1400288f3:	cmp    rax,rbx
   1400288f6:	jl     0x140028a67
   1400288fc:	mov    eax,edi
   1400288fe:	lea    rdx,[rip+0x1ee5b]        # 0x140047760
   140028905:	sub    eax,r12d
   140028908:	cmp    eax,ebp
   14002890a:	jb     0x140028870
   140028910:	jmp    0x140028a67
   140028915:	call   QWORD PTR [rip+0x8b5d]        # 0x140031478
   14002891b:	mov    r15d,eax
   14002891e:	jmp    0x140028a67
   140028923:	test   ebp,ebp
   140028925:	mov    rdi,r12
   140028928:	je     0x140028ab3
   14002892e:	xchg   ax,ax
   140028930:	lea    rcx,[rsp+0x480]
   140028938:	xor    edx,edx
   14002893a:	data16 xchg ax,ax
   14002893d:	data16 xchg ax,ax
   140028940:	mov    eax,edi
   140028942:	sub    eax,r12d
   140028945:	cmp    eax,ebp
   140028947:	jae    0x140028977
   140028949:	movzx  eax,WORD PTR [rdi]
   14002894c:	add    rdi,0x2
   140028950:	cmp    ax,0xa
   140028954:	jne    0x140028963
   140028956:	mov    WORD PTR [rcx],0xd
   14002895b:	add    rcx,0x2
   14002895f:	add    rdx,0x2
   140028963:	add    rdx,0x2
   140028967:	mov    WORD PTR [rcx],ax
   14002896a:	add    rcx,0x2
   14002896e:	cmp    rdx,0x152
   140028975:	jb     0x140028940
   140028977:	lea    rax,[rsp+0x480]
   14002897f:	mov    QWORD PTR [rsp+0x38],rsi
   140028984:	mov    QWORD PTR [rsp+0x30],rsi
   140028989:	sub    ecx,eax
   14002898b:	lea    r8,[rsp+0x480]
   140028993:	mov    DWORD PTR [rsp+0x28],0x2ab
   14002899b:	mov    eax,ecx
   14002899d:	mov    ecx,0xfde9
   1400289a2:	cdq    
   1400289a3:	sub    eax,edx
   1400289a5:	xor    edx,edx
   1400289a7:	sar    eax,1
   1400289a9:	mov    r9d,eax
   1400289ac:	lea    rax,[rsp+0x70]
   1400289b1:	mov    QWORD PTR [rsp+0x20],rax
   1400289b6:	call   QWORD PTR [rip+0x8a3c]        # 0x1400313f8
   1400289bc:	test   eax,eax
   1400289be:	mov    r13d,eax
   1400289c1:	je     0x140028a35
   1400289c3:	xor    ebx,ebx
   1400289c5:	data16 data16 xchg ax,ax
   1400289c9:	data16 xchg ax,ax
   1400289cc:	data16 data16 xchg ax,ax
   1400289d0:	mov    rax,QWORD PTR [rsp+0x50]
   1400289d5:	movsxd rcx,ebx
   1400289d8:	mov    r8d,r13d
   1400289db:	lea    rdx,[rsp+rcx*1+0x70]
   1400289e0:	lea    rcx,[rip+0x1ed79]        # 0x140047760
   1400289e7:	lea    r9,[rsp+0x44]
   1400289ec:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400289f0:	mov    rax,QWORD PTR [rsp+0x58]
   1400289f5:	sub    r8d,ebx
   1400289f8:	mov    rcx,QWORD PTR [rax+rcx*1]
   1400289fc:	mov    QWORD PTR [rsp+0x20],rsi
   140028a01:	call   QWORD PTR [rip+0x8a41]        # 0x140031448
   140028a07:	test   eax,eax
   140028a09:	je     0x140028a16
   140028a0b:	add    ebx,DWORD PTR [rsp+0x44]
   140028a0f:	cmp    r13d,ebx
   140028a12:	jg     0x1400289d0
   140028a14:	jmp    0x140028a24
   140028a16:	call   QWORD PTR [rip+0x8a5c]        # 0x140031478
   140028a1c:	cmp    r13d,ebx
   140028a1f:	mov    r15d,eax
   140028a22:	jg     0x140028a67
   140028a24:	mov    r14d,edi
   140028a27:	sub    r14d,r12d
   140028a2a:	cmp    r14d,ebp
   140028a2d:	jb     0x140028930
   140028a33:	jmp    0x140028a67
   140028a35:	call   QWORD PTR [rip+0x8a3d]        # 0x140031478
   140028a3b:	mov    r15d,eax
   140028a3e:	jmp    0x140028a67
   140028a40:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140028a45:	lea    r9,[rsp+0x44]
   140028a4a:	mov    r8d,ebp
   140028a4d:	mov    rdx,r12
   140028a50:	mov    QWORD PTR [rsp+0x20],rsi
   140028a55:	call   QWORD PTR [rip+0x89ed]        # 0x140031448
   140028a5b:	test   eax,eax
   140028a5d:	je     0x140028a74
   140028a5f:	mov    r14d,DWORD PTR [rsp+0x44]
   140028a64:	xor    r15d,r15d
   140028a67:	test   r14d,r14d
   140028a6a:	je     0x140028a7d
   140028a6c:	sub    r14d,esi
   140028a6f:	mov    eax,r14d
   140028a72:	jmp    0x140028ae8
   140028a74:	call   QWORD PTR [rip+0x89fe]        # 0x140031478
   140028a7a:	mov    r15d,eax
   140028a7d:	test   r15d,r15d
   140028a80:	je     0x140028aa7
   140028a82:	cmp    r15d,0x5
   140028a86:	jne    0x140028a9d
   140028a88:	call   0x14001b280
   140028a8d:	mov    DWORD PTR [rax],0x9
   140028a93:	call   0x14001b2b0
   140028a98:	mov    DWORD PTR [rax],r15d
   140028a9b:	jmp    0x140028ae5
   140028a9d:	mov    ecx,r15d
   140028aa0:	call   0x14001b2e0
   140028aa5:	jmp    0x140028ae5
   140028aa7:	mov    r13,QWORD PTR [rsp+0x58]
   140028aac:	lea    rdx,[rip+0x1ecad]        # 0x140047760
   140028ab3:	mov    rax,QWORD PTR [rsp+0x50]
   140028ab8:	mov    rax,QWORD PTR [rdx+rax*8]
   140028abc:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140028ac2:	je     0x140028acf
   140028ac4:	cmp    BYTE PTR [r12],0x1a
   140028ac9:	jne    0x140028acf
   140028acb:	xor    eax,eax
   140028acd:	jmp    0x140028ae8
   140028acf:	call   0x14001b280
   140028ad4:	mov    DWORD PTR [rax],0x1c
   140028ada:	call   0x14001b2b0
   140028adf:	mov    DWORD PTR [rax],0x0
   140028ae5:	or     eax,0xffffffff
   140028ae8:	mov    r13,QWORD PTR [rsp+0x648]
   140028af0:	mov    r15,QWORD PTR [rsp+0x5f0]
   140028af8:	mov    rcx,QWORD PTR [rsp+0x5e0]
   140028b00:	xor    rcx,rsp
   140028b03:	call   0x140019370
   140028b08:	add    rsp,0x5f8
   140028b0f:	pop    r14
   140028b11:	pop    r12
   140028b13:	pop    rdi
   140028b14:	pop    rsi
   140028b15:	pop    rbp
   140028b16:	pop    rbx
   140028b17:	ret    
   140028b18:	int3   
   140028b19:	int3   
   140028b1a:	int3   
   140028b1b:	int3   
   140028b1c:	int3   
   140028b1d:	int3   
   140028b1e:	int3   
   140028b1f:	int3   
   140028b20:	mov    QWORD PTR [rsp+0x10],rbx
   140028b25:	mov    DWORD PTR [rsp+0x8],ecx
   140028b29:	push   rsi
   140028b2a:	push   rdi
   140028b2b:	push   r12
   140028b2d:	push   r13
   140028b2f:	push   r14
   140028b31:	sub    rsp,0x30
   140028b35:	mov    r12d,r8d
   140028b38:	mov    r13,rdx
   140028b3b:	movsxd rbx,ecx
   140028b3e:	cmp    ebx,0xfffffffe
   140028b41:	jne    0x140028b5f
   140028b43:	call   0x14001b2b0
   140028b48:	xor    edi,edi
   140028b4a:	mov    DWORD PTR [rax],edi
   140028b4c:	call   0x14001b280
   140028b51:	mov    DWORD PTR [rax],0x9
   140028b57:	or     eax,0xffffffff
   140028b5a:	jmp    0x140028c39
   140028b5f:	test   ecx,ecx
   140028b61:	js     0x140028c0e
   140028b67:	cmp    ebx,DWORD PTR [rip+0x1ebdb]        # 0x140047748
   140028b6d:	jae    0x140028c0e
   140028b73:	mov    rax,rbx
   140028b76:	mov    rdi,rbx
   140028b79:	sar    rdi,0x5
   140028b7d:	lea    r14,[rip+0x1ebdc]        # 0x140047760
   140028b84:	and    eax,0x1f
   140028b87:	lea    rsi,[rax+rax*4]
   140028b8b:	add    rsi,rsi
   140028b8e:	mov    rax,QWORD PTR [r14+rdi*8]
   140028b92:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140028b96:	and    ecx,0x1
   140028b99:	jne    0x140028bc8
   140028b9b:	call   0x14001b2b0
   140028ba0:	xor    edi,edi
   140028ba2:	mov    DWORD PTR [rax],edi
   140028ba4:	call   0x14001b280
   140028ba9:	mov    DWORD PTR [rax],0x9
   140028baf:	mov    QWORD PTR [rsp+0x20],rdi
   140028bb4:	xor    r9d,r9d
   140028bb7:	xor    r8d,r8d
   140028bba:	xor    edx,edx
   140028bbc:	xor    ecx,ecx
   140028bbe:	call   0x14001de30
   140028bc3:	or     eax,0xffffffff
   140028bc6:	jmp    0x140028c39
   140028bc8:	mov    ecx,ebx
   140028bca:	call   0x14002b400
   140028bcf:	nop
   140028bd0:	mov    rax,QWORD PTR [r14+rdi*8]
   140028bd4:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140028bd9:	je     0x140028bec
   140028bdb:	mov    r8d,r12d
   140028bde:	mov    rdx,r13
   140028be1:	mov    ecx,ebx
   140028be3:	call   0x1400283a0
   140028be8:	mov    edi,eax
   140028bea:	jmp    0x140028c03
   140028bec:	call   0x14001b280
   140028bf1:	mov    DWORD PTR [rax],0x9
   140028bf7:	call   0x14001b2b0
   140028bfc:	xor    edi,edi
   140028bfe:	mov    DWORD PTR [rax],edi
   140028c00:	or     edi,0xffffffff
   140028c03:	mov    ecx,ebx
   140028c05:	call   0x14002b4d0
   140028c0a:	mov    eax,edi
   140028c0c:	jmp    0x140028c39
   140028c0e:	call   0x14001b2b0
   140028c13:	xor    edi,edi
   140028c15:	mov    DWORD PTR [rax],edi
   140028c17:	call   0x14001b280
   140028c1c:	mov    DWORD PTR [rax],0x9
   140028c22:	mov    QWORD PTR [rsp+0x20],rdi
   140028c27:	xor    r9d,r9d
   140028c2a:	xor    r8d,r8d
   140028c2d:	xor    edx,edx
   140028c2f:	xor    ecx,ecx
   140028c31:	call   0x14001de30
   140028c36:	or     eax,0xffffffff
   140028c39:	mov    rbx,QWORD PTR [rsp+0x68]
   140028c3e:	add    rsp,0x30
   140028c42:	pop    r14
   140028c44:	pop    r13
   140028c46:	pop    r12
   140028c48:	pop    rdi
   140028c49:	pop    rsi
   140028c4a:	ret    
   140028c4b:	int3   
   140028c4c:	int3   
   140028c4d:	int3   
   140028c4e:	int3   
   140028c4f:	int3   
   140028c50:	rex push rbp
   140028c52:	sub    rsp,0x30
   140028c56:	mov    rbp,rdx
   140028c59:	mov    ecx,DWORD PTR [rbp+0x60]
   140028c5c:	call   0x14002b4d0
   140028c61:	add    rsp,0x30
   140028c65:	pop    rbp
   140028c66:	ret    
   140028c67:	int3   
   140028c68:	int3   
   140028c69:	int3   
   140028c6a:	int3   
   140028c6b:	int3   
   140028c6c:	int3   
   140028c6d:	int3   
   140028c6e:	int3   
   140028c6f:	int3   
   140028c70:	rex push rbx
   140028c72:	sub    rsp,0x20
   140028c76:	add    DWORD PTR [rip+0x1d7e7],0x1        # 0x140046464
   140028c7d:	mov    rbx,rcx
   140028c80:	mov    ecx,0x1000
   140028c85:	call   0x1400216b0
   140028c8a:	test   rax,rax
   140028c8d:	mov    QWORD PTR [rbx+0x10],rax
   140028c91:	je     0x140028ca0
   140028c93:	or     DWORD PTR [rbx+0x18],0x8
   140028c97:	mov    DWORD PTR [rbx+0x24],0x1000
   140028c9e:	jmp    0x140028cb3
   140028ca0:	or     DWORD PTR [rbx+0x18],0x4
   140028ca4:	lea    rax,[rbx+0x20]
   140028ca8:	mov    DWORD PTR [rbx+0x24],0x2
   140028caf:	mov    QWORD PTR [rbx+0x10],rax
   140028cb3:	mov    rax,QWORD PTR [rbx+0x10]
   140028cb7:	mov    DWORD PTR [rbx+0x8],0x0
   140028cbe:	mov    QWORD PTR [rbx],rax
   140028cc1:	add    rsp,0x20
   140028cc5:	pop    rbx
   140028cc6:	ret    
   140028cc7:	int3   
   140028cc8:	int3   
   140028cc9:	int3   
   140028cca:	int3   
   140028ccb:	int3   
   140028ccc:	int3   
   140028ccd:	int3   
   140028cce:	int3   
   140028ccf:	int3   
   140028cd0:	sub    rsp,0x38
   140028cd4:	cmp    ecx,0xfffffffe
   140028cd7:	jne    0x140028ceb
   140028cd9:	call   0x14001b280
   140028cde:	mov    DWORD PTR [rax],0x9
   140028ce4:	xor    eax,eax
   140028ce6:	add    rsp,0x38
   140028cea:	ret    
   140028ceb:	test   ecx,ecx
   140028ced:	js     0x140028d22
   140028cef:	cmp    ecx,DWORD PTR [rip+0x1ea53]        # 0x140047748
   140028cf5:	jae    0x140028d22
   140028cf7:	movsxd rax,ecx
   140028cfa:	lea    r8,[rip+0x1ea5f]        # 0x140047760
   140028d01:	mov    rdx,rax
   140028d04:	and    eax,0x1f
   140028d07:	lea    rcx,[rax+rax*4]
   140028d0b:	sar    rdx,0x5
   140028d0f:	mov    rax,QWORD PTR [r8+rdx*8]
   140028d13:	add    rcx,rcx
   140028d16:	mov    al,BYTE PTR [rax+rcx*8+0x8]
   140028d1a:	and    eax,0x40
   140028d1d:	add    rsp,0x38
   140028d21:	ret    
   140028d22:	call   0x14001b280
   140028d27:	xor    r9d,r9d
   140028d2a:	xor    r8d,r8d
   140028d2d:	xor    edx,edx
   140028d2f:	xor    ecx,ecx
   140028d31:	mov    QWORD PTR [rsp+0x20],0x0
   140028d3a:	mov    DWORD PTR [rax],0x9
   140028d40:	call   0x14001de30
   140028d45:	xor    eax,eax
   140028d47:	add    rsp,0x38
   140028d4b:	ret    
   140028d4c:	int3   
   140028d4d:	int3   
   140028d4e:	int3   
   140028d4f:	int3   
   140028d50:	lea    rax,[rip+0x18399]        # 0x1400410f0
   140028d57:	ret    
   140028d58:	int3   
   140028d59:	int3   
   140028d5a:	int3   
   140028d5b:	int3   
   140028d5c:	int3   
   140028d5d:	int3   
   140028d5e:	int3   
   140028d5f:	int3   
   140028d60:	rex push rbx
   140028d62:	sub    rsp,0x20
   140028d66:	mov    eax,DWORD PTR [rip+0x1e9d4]        # 0x140047740
   140028d6c:	mov    ebx,0x14
   140028d71:	test   eax,eax
   140028d73:	jne    0x140028d7c
   140028d75:	mov    eax,0x200
   140028d7a:	jmp    0x140028d81
   140028d7c:	cmp    eax,ebx
   140028d7e:	cmovl  eax,ebx
   140028d81:	movsxd rcx,eax
   140028d84:	mov    edx,0x8
   140028d89:	mov    DWORD PTR [rip+0x1e9b1],eax        # 0x140047740
   140028d8f:	call   0x140021720
   140028d94:	test   rax,rax
   140028d97:	mov    QWORD PTR [rip+0x1d982],rax        # 0x140046720
   140028d9e:	jne    0x140028dc8
   140028da0:	lea    edx,[rax+0x8]
   140028da3:	mov    rcx,rbx
   140028da6:	mov    DWORD PTR [rip+0x1e994],ebx        # 0x140047740
   140028dac:	call   0x140021720
   140028db1:	test   rax,rax
   140028db4:	mov    QWORD PTR [rip+0x1d965],rax        # 0x140046720
   140028dbb:	jne    0x140028dc8
   140028dbd:	mov    eax,0x1a
   140028dc2:	add    rsp,0x20
   140028dc6:	pop    rbx
   140028dc7:	ret    
   140028dc8:	xor    r9d,r9d
   140028dcb:	lea    rdx,[rip+0x1831e]        # 0x1400410f0
   140028dd2:	mov    rcx,r9
   140028dd5:	data16 data16 xchg ax,ax
   140028dd9:	data16 xchg ax,ax
   140028ddc:	data16 data16 xchg ax,ax
   140028de0:	mov    QWORD PTR [rcx+rax*1],rdx
   140028de4:	add    rcx,0x8
   140028de8:	add    rdx,0x30
   140028dec:	sub    rbx,0x1
   140028df0:	je     0x140028dfb
   140028df2:	mov    rax,QWORD PTR [rip+0x1d927]        # 0x140046720
   140028df9:	jmp    0x140028de0
   140028dfb:	lea    r8,[rip+0x1830a]        # 0x14004110c
   140028e02:	mov    r10d,0x3
   140028e08:	lea    r11,[rip+0x1e951]        # 0x140047760
   140028e0f:	nop
   140028e10:	mov    al,r9b
   140028e13:	mov    rdx,r9
   140028e16:	and    eax,0x1f
   140028e19:	sar    rdx,0x5
   140028e1d:	lea    rcx,[rax+rax*4]
   140028e21:	mov    rax,QWORD PTR [r11+rdx*8]
   140028e25:	add    rcx,rcx
   140028e28:	mov    rdx,QWORD PTR [rax+rcx*8]
   140028e2c:	cmp    rdx,0xffffffffffffffff
   140028e30:	je     0x140028e3d
   140028e32:	cmp    rdx,0xfffffffffffffffe
   140028e36:	je     0x140028e3d
   140028e38:	test   rdx,rdx
   140028e3b:	jne    0x140028e44
   140028e3d:	mov    DWORD PTR [r8],0xfffffffe
   140028e44:	add    r9,0x1
   140028e48:	add    r8,0x30
   140028e4c:	sub    r10,0x1
   140028e50:	jne    0x140028e10
   140028e52:	xor    eax,eax
   140028e54:	add    rsp,0x20
   140028e58:	pop    rbx
   140028e59:	ret    
   140028e5a:	int3   
   140028e5b:	int3   
   140028e5c:	int3   
   140028e5d:	int3   
   140028e5e:	int3   
   140028e5f:	int3   
   140028e60:	sub    rsp,0x28
   140028e64:	call   0x14002b9b0
   140028e69:	cmp    BYTE PTR [rip+0x1c67c],0x0        # 0x1400454ec
   140028e70:	je     0x140028e77
   140028e72:	call   0x14002b630
   140028e77:	mov    rcx,QWORD PTR [rip+0x1d8a2]        # 0x140046720
   140028e7e:	add    rsp,0x28
   140028e82:	jmp    0x14001a540
   140028e87:	int3   
   140028e88:	int3   
   140028e89:	int3   
   140028e8a:	int3   
   140028e8b:	int3   
   140028e8c:	int3   
   140028e8d:	int3   
   140028e8e:	int3   
   140028e8f:	int3   
   140028e90:	rex push rbx
   140028e92:	sub    rsp,0x20
   140028e96:	mov    rbx,rcx
   140028e99:	lea    rcx,[rip+0x18250]        # 0x1400410f0
   140028ea0:	cmp    rbx,rcx
   140028ea3:	jb     0x140028ee5
   140028ea5:	lea    rax,[rip+0x185d4]        # 0x140041480
   140028eac:	cmp    rbx,rax
   140028eaf:	ja     0x140028ee5
   140028eb1:	mov    rdx,rbx
   140028eb4:	movabs rax,0x2aaaaaaaaaaaaaab
   140028ebe:	sub    rdx,rcx
   140028ec1:	imul   rdx
   140028ec4:	sar    rdx,0x3
   140028ec8:	mov    rcx,rdx
   140028ecb:	shr    rcx,0x3f
   140028ecf:	lea    ecx,[rcx+rdx*1+0x10]
   140028ed3:	call   0x140021b50
   140028ed8:	or     DWORD PTR [rbx+0x18],0x8000
   140028edf:	add    rsp,0x20
   140028ee3:	pop    rbx
   140028ee4:	ret    
   140028ee5:	lea    rcx,[rbx+0x30]
   140028ee9:	add    rsp,0x20
   140028eed:	pop    rbx
   140028eee:	rex.W jmp QWORD PTR [rip+0x845b]        # 0x140031350
   140028ef5:	int3   
   140028ef6:	int3   
   140028ef7:	int3   
   140028ef8:	int3   
   140028ef9:	int3   
   140028efa:	int3   
   140028efb:	int3   
   140028efc:	int3   
   140028efd:	int3   
   140028efe:	int3   
   140028eff:	int3   
   140028f00:	rex push rbx
   140028f02:	sub    rsp,0x20
   140028f06:	cmp    ecx,0x14
   140028f09:	mov    rbx,rdx
   140028f0c:	jge    0x140028f23
   140028f0e:	add    ecx,0x10
   140028f11:	call   0x140021b50
   140028f16:	or     DWORD PTR [rbx+0x18],0x8000
   140028f1d:	add    rsp,0x20
   140028f21:	pop    rbx
   140028f22:	ret    
   140028f23:	lea    rcx,[rdx+0x30]
   140028f27:	add    rsp,0x20
   140028f2b:	pop    rbx
   140028f2c:	rex.W jmp QWORD PTR [rip+0x841d]        # 0x140031350
   140028f33:	int3   
   140028f34:	int3   
   140028f35:	int3   
   140028f36:	int3   
   140028f37:	int3   
   140028f38:	int3   
   140028f39:	int3   
   140028f3a:	int3   
   140028f3b:	int3   
   140028f3c:	int3   
   140028f3d:	int3   
   140028f3e:	int3   
   140028f3f:	int3   
   140028f40:	lea    rdx,[rip+0x181a9]        # 0x1400410f0
   140028f47:	cmp    rcx,rdx
   140028f4a:	jb     0x140028f83
   140028f4c:	lea    rax,[rip+0x1852d]        # 0x140041480
   140028f53:	cmp    rcx,rax
   140028f56:	ja     0x140028f83
   140028f58:	and    DWORD PTR [rcx+0x18],0xffff7fff
   140028f5f:	sub    rcx,rdx
   140028f62:	movabs rax,0x2aaaaaaaaaaaaaab
   140028f6c:	imul   rcx
   140028f6f:	sar    rdx,0x3
   140028f73:	mov    rcx,rdx
   140028f76:	shr    rcx,0x3f
   140028f7a:	lea    ecx,[rcx+rdx*1+0x10]
   140028f7e:	jmp    0x140021a20
   140028f83:	add    rcx,0x30
   140028f87:	rex.W jmp QWORD PTR [rip+0x83d2]        # 0x140031360
   140028f8e:	int3   
   140028f8f:	int3   
   140028f90:	cmp    ecx,0x14
   140028f93:	jge    0x140028fa4
   140028f95:	and    DWORD PTR [rdx+0x18],0xffff7fff
   140028f9c:	add    ecx,0x10
   140028f9f:	jmp    0x140021a20
   140028fa4:	lea    rcx,[rdx+0x30]
   140028fa8:	rex.W jmp QWORD PTR [rip+0x83b1]        # 0x140031360
   140028faf:	int3   
   140028fb0:	sub    rsp,0x38
   140028fb4:	test   rcx,rcx
   140028fb7:	jne    0x140028fe4
   140028fb9:	call   0x14001b280
   140028fbe:	xor    r9d,r9d
   140028fc1:	xor    r8d,r8d
   140028fc4:	xor    edx,edx
   140028fc6:	xor    ecx,ecx
   140028fc8:	mov    QWORD PTR [rsp+0x20],0x0
   140028fd1:	mov    DWORD PTR [rax],0x16
   140028fd7:	call   0x14001de30
   140028fdc:	or     eax,0xffffffff
   140028fdf:	add    rsp,0x38
   140028fe3:	ret    
   140028fe4:	mov    eax,DWORD PTR [rcx+0x1c]
   140028fe7:	add    rsp,0x38
   140028feb:	ret    
   140028fec:	int3   
   140028fed:	int3   
   140028fee:	int3   
   140028fef:	int3   
   140028ff0:	mov    QWORD PTR [rsp+0x18],rbx
   140028ff5:	mov    QWORD PTR [rsp+0x20],rbp
   140028ffa:	push   rsi
   140028ffb:	push   rdi
   140028ffc:	push   r12
   140028ffe:	sub    rsp,0x40
   140029002:	mov    rax,QWORD PTR [rip+0x16fc7]        # 0x14003ffd0
   140029009:	xor    rax,rsp
   14002900c:	mov    QWORD PTR [rsp+0x30],rax
   140029011:	test   BYTE PTR [rdx+0x18],0x40
   140029015:	mov    rdi,rdx
   140029018:	movzx  ebp,cx
   14002901b:	mov    WORD PTR [rsp+0x20],cx
   140029020:	jne    0x140029227
   140029026:	mov    rcx,rdx
   140029029:	call   0x140028fb0
   14002902e:	lea    rsi,[rip+0x1734b]        # 0x140040380
   140029035:	lea    r12,[rip+0x1e724]        # 0x140047760
   14002903c:	cmp    eax,0xffffffff
   14002903f:	je     0x14002907a
   140029041:	mov    rcx,rdi
   140029044:	call   0x140028fb0
   140029049:	cmp    eax,0xfffffffe
   14002904c:	je     0x14002907a
   14002904e:	mov    rcx,rdi
   140029051:	call   0x140028fb0
   140029056:	mov    rcx,rdi
   140029059:	movsxd rbx,eax
   14002905c:	sar    rbx,0x5
   140029060:	call   0x140028fb0
   140029065:	mov    r11d,eax
   140029068:	and    r11d,0x1f
   14002906c:	lea    rax,[r11+r11*4]
   140029070:	shl    rax,0x4
   140029074:	add    rax,QWORD PTR [r12+rbx*8]
   140029078:	jmp    0x14002907d
   14002907a:	mov    rax,rsi
   14002907d:	movzx  ecx,BYTE PTR [rax+0x38]
   140029081:	and    cl,0x7f
   140029084:	cmp    cl,0x2
   140029087:	jne    0x1400290a5
   140029089:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002908d:	js     0x14002923c
   140029093:	mov    rcx,QWORD PTR [rdi]
   140029096:	mov    ax,bp
   140029099:	mov    WORD PTR [rcx],bp
   14002909c:	add    QWORD PTR [rdi],0x2
   1400290a0:	jmp    0x140029247
   1400290a5:	mov    rcx,rdi
   1400290a8:	call   0x140028fb0
   1400290ad:	cmp    eax,0xffffffff
   1400290b0:	je     0x1400290eb
   1400290b2:	mov    rcx,rdi
   1400290b5:	call   0x140028fb0
   1400290ba:	cmp    eax,0xfffffffe
   1400290bd:	je     0x1400290eb
   1400290bf:	mov    rcx,rdi
   1400290c2:	call   0x140028fb0
   1400290c7:	mov    rcx,rdi
   1400290ca:	movsxd rbx,eax
   1400290cd:	sar    rbx,0x5
   1400290d1:	call   0x140028fb0
   1400290d6:	mov    r11d,eax
   1400290d9:	and    r11d,0x1f
   1400290dd:	lea    rax,[r11+r11*4]
   1400290e1:	shl    rax,0x4
   1400290e5:	add    rax,QWORD PTR [r12+rbx*8]
   1400290e9:	jmp    0x1400290ee
   1400290eb:	mov    rax,rsi
   1400290ee:	movzx  eax,BYTE PTR [rax+0x38]
   1400290f2:	and    al,0x7f
   1400290f4:	cmp    al,0x1
   1400290f6:	jne    0x14002916a
   1400290f8:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400290fc:	js     0x140029113
   1400290fe:	mov    rax,QWORD PTR [rdi]
   140029101:	mov    BYTE PTR [rax],bpl
   140029104:	mov    rax,QWORD PTR [rdi]
   140029107:	movzx  ecx,BYTE PTR [rax]
   14002910a:	add    rax,0x1
   14002910e:	mov    QWORD PTR [rdi],rax
   140029111:	jmp    0x140029121
   140029113:	movsx  ecx,bpl
   140029117:	mov    rdx,rdi
   14002911a:	call   0x14001f520
   14002911f:	mov    ecx,eax
   140029121:	cmp    ecx,0xffffffff
   140029124:	jne    0x14002912f
   140029126:	or     ax,0xffff
   14002912a:	jmp    0x140029247
   14002912f:	add    DWORD PTR [rdi+0x8],0xffffffff
   140029133:	js     0x14002914e
   140029135:	mov    rcx,QWORD PTR [rdi]
   140029138:	movzx  eax,BYTE PTR [rsp+0x21]
   14002913d:	mov    BYTE PTR [rcx],al
   14002913f:	mov    rax,QWORD PTR [rdi]
   140029142:	movzx  ecx,BYTE PTR [rax]
   140029145:	add    rax,0x1
   140029149:	mov    QWORD PTR [rdi],rax
   14002914c:	jmp    0x14002915d
   14002914e:	movsx  ecx,BYTE PTR [rsp+0x21]
   140029153:	mov    rdx,rdi
   140029156:	call   0x14001f520
   14002915b:	mov    ecx,eax
   14002915d:	cmp    ecx,0xffffffff
   140029160:	je     0x140029126
   140029162:	mov    ax,bp
   140029165:	jmp    0x140029247
   14002916a:	mov    rcx,rdi
   14002916d:	call   0x140028fb0
   140029172:	cmp    eax,0xffffffff
   140029175:	je     0x1400291ae
   140029177:	mov    rcx,rdi
   14002917a:	call   0x140028fb0
   14002917f:	cmp    eax,0xfffffffe
   140029182:	je     0x1400291ae
   140029184:	mov    rcx,rdi
   140029187:	call   0x140028fb0
   14002918c:	mov    rcx,rdi
   14002918f:	movsxd rbx,eax
   140029192:	sar    rbx,0x5
   140029196:	call   0x140028fb0
   14002919b:	mov    r11d,eax
   14002919e:	and    r11d,0x1f
   1400291a2:	lea    rsi,[r11+r11*4]
   1400291a6:	shl    rsi,0x4
   1400291aa:	add    rsi,QWORD PTR [r12+rbx*8]
   1400291ae:	test   BYTE PTR [rsi+0x8],0x80
   1400291b2:	je     0x140029227
   1400291b4:	lea    rdx,[rsp+0x24]
   1400291b9:	lea    rcx,[rsp+0x20]
   1400291be:	movzx  r9d,bp
   1400291c2:	mov    r8d,0x5
   1400291c8:	call   0x14002a9f0
   1400291cd:	test   eax,eax
   1400291cf:	jne    0x140029126
   1400291d5:	xor    esi,esi
   1400291d7:	cmp    DWORD PTR [rsp+0x20],esi
   1400291db:	jle    0x140029162
   1400291dd:	lea    rbx,[rsp+0x24]
   1400291e2:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400291e6:	js     0x1400291ff
   1400291e8:	mov    rcx,QWORD PTR [rdi]
   1400291eb:	movzx  eax,BYTE PTR [rbx]
   1400291ee:	mov    BYTE PTR [rcx],al
   1400291f0:	mov    rax,QWORD PTR [rdi]
   1400291f3:	movzx  ecx,BYTE PTR [rax]
   1400291f6:	add    rax,0x1
   1400291fa:	mov    QWORD PTR [rdi],rax
   1400291fd:	jmp    0x14002920c
   1400291ff:	movsx  ecx,BYTE PTR [rbx]
   140029202:	mov    rdx,rdi
   140029205:	call   0x14001f520
   14002920a:	mov    ecx,eax
   14002920c:	cmp    ecx,0xffffffff
   14002920f:	je     0x140029126
   140029215:	add    esi,0x1
   140029218:	add    rbx,0x1
   14002921c:	cmp    esi,DWORD PTR [rsp+0x20]
   140029220:	jl     0x1400291e2
   140029222:	mov    ax,bp
   140029225:	jmp    0x140029247
   140029227:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002922b:	js     0x14002923c
   14002922d:	mov    rax,QWORD PTR [rdi]
   140029230:	mov    WORD PTR [rax],bp
   140029233:	add    QWORD PTR [rdi],0x2
   140029237:	mov    ax,bp
   14002923a:	jmp    0x140029247
   14002923c:	mov    rdx,rdi
   14002923f:	movzx  ecx,bp
   140029242:	call   0x14002b9c0
   140029247:	mov    rcx,QWORD PTR [rsp+0x30]
   14002924c:	xor    rcx,rsp
   14002924f:	call   0x140019370
   140029254:	mov    rbx,QWORD PTR [rsp+0x70]
   140029259:	mov    rbp,QWORD PTR [rsp+0x78]
   14002925e:	add    rsp,0x40
   140029262:	pop    r12
   140029264:	pop    rdi
   140029265:	pop    rsi
   140029266:	ret    
   140029267:	int3   
   140029268:	int3   
   140029269:	int3   
   14002926a:	int3   
   14002926b:	int3   
   14002926c:	int3   
   14002926d:	int3   
   14002926e:	int3   
   14002926f:	int3   
   140029270:	mov    rcx,QWORD PTR [rip+0x16d59]        # 0x14003ffd0
   140029277:	xor    eax,eax
   140029279:	or     rcx,0x1
   14002927d:	cmp    QWORD PTR [rip+0x1d1e4],rcx        # 0x140046468
   140029284:	sete   al
   140029287:	ret    
   140029288:	int3   
   140029289:	int3   
   14002928a:	int3   
   14002928b:	int3   
   14002928c:	int3   
   14002928d:	int3   
   14002928e:	int3   
   14002928f:	int3   
   140029290:	mov    QWORD PTR [rsp+0x8],rbx
   140029295:	mov    QWORD PTR [rsp+0x10],rsi
   14002929a:	push   rdi
   14002929b:	sub    rsp,0x50
   14002929f:	test   rdx,rdx
   1400292a2:	mov    rsi,r8
   1400292a5:	mov    rdi,rdx
   1400292a8:	mov    rbx,rcx
   1400292ab:	je     0x1400292c1
   1400292ad:	test   r8,r8
   1400292b0:	je     0x1400292c1
   1400292b2:	cmp    BYTE PTR [rdx],0x0
   1400292b5:	jne    0x1400292d3
   1400292b7:	test   rcx,rcx
   1400292ba:	je     0x1400292c1
   1400292bc:	mov    WORD PTR [rcx],0x0
   1400292c1:	xor    eax,eax
   1400292c3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400292c8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400292cd:	add    rsp,0x50
   1400292d1:	pop    rdi
   1400292d2:	ret    
   1400292d3:	test   r9,r9
   1400292d6:	mov    BYTE PTR [rsp+0x48],0x0
   1400292db:	jne    0x140029372
   1400292e1:	call   0x14001d930
   1400292e6:	mov    QWORD PTR [rsp+0x40],rax
   1400292eb:	mov    r11,rax
   1400292ee:	mov    rcx,QWORD PTR [rax+0xc0]
   1400292f5:	cmp    rcx,QWORD PTR [rip+0x17794]        # 0x140040a90
   1400292fc:	mov    QWORD PTR [rsp+0x30],rcx
   140029301:	mov    rax,QWORD PTR [rax+0xb8]
   140029308:	mov    QWORD PTR [rsp+0x38],rax
   14002930d:	je     0x140029332
   14002930f:	mov    ecx,DWORD PTR [r11+0xc8]
   140029316:	test   DWORD PTR [rip+0x175fc],ecx        # 0x140040918
   14002931c:	jne    0x140029332
   14002931e:	call   0x14001ed60
   140029323:	mov    r11,QWORD PTR [rsp+0x40]
   140029328:	mov    QWORD PTR [rsp+0x30],rax
   14002932d:	mov    rax,QWORD PTR [rsp+0x38]
   140029332:	cmp    rax,QWORD PTR [rip+0x174d7]        # 0x140040810
   140029339:	je     0x140029359
   14002933b:	mov    eax,DWORD PTR [r11+0xc8]
   140029342:	test   DWORD PTR [rip+0x175d0],eax        # 0x140040918
   140029348:	jne    0x140029359
   14002934a:	call   0x14001e210
   14002934f:	mov    r11,QWORD PTR [rsp+0x40]
   140029354:	mov    QWORD PTR [rsp+0x38],rax
   140029359:	test   BYTE PTR [r11+0xc8],0x2
   140029361:	jne    0x14002938a
   140029363:	or     DWORD PTR [r11+0xc8],0x2
   14002936b:	mov    BYTE PTR [rsp+0x48],0x1
   140029370:	jmp    0x140029385
   140029372:	mov    rax,QWORD PTR [r9]
   140029375:	lea    rcx,[rsp+0x30]
   14002937a:	mov    QWORD PTR [rcx],rax
   14002937d:	mov    rax,QWORD PTR [r9+0x8]
   140029381:	mov    QWORD PTR [rcx+0x8],rax
   140029385:	mov    r11,QWORD PTR [rsp+0x40]
   14002938a:	mov    rax,QWORD PTR [rsp+0x30]
   14002938f:	cmp    DWORD PTR [rax+0x14],0x0
   140029393:	jne    0x1400293c4
   140029395:	test   rbx,rbx
   140029398:	je     0x1400293a0
   14002939a:	movzx  eax,BYTE PTR [rdi]
   14002939d:	mov    WORD PTR [rbx],ax
   1400293a0:	cmp    BYTE PTR [rsp+0x48],0x0
   1400293a5:	je     0x1400293af
   1400293a7:	and    DWORD PTR [r11+0xc8],0xfffffffd
   1400293af:	mov    eax,0x1
   1400293b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400293b9:	mov    rsi,QWORD PTR [rsp+0x68]
   1400293be:	add    rsp,0x50
   1400293c2:	pop    rdi
   1400293c3:	ret    
   1400293c4:	movzx  ecx,BYTE PTR [rdi]
   1400293c7:	lea    rdx,[rsp+0x30]
   1400293cc:	call   0x140019e20
   1400293d1:	test   eax,eax
   1400293d3:	je     0x14002948b
   1400293d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400293de:	mov    r9d,DWORD PTR [rcx+0x10c]
   1400293e5:	cmp    r9d,0x1
   1400293e9:	jle    0x14002941b
   1400293eb:	cmp    esi,r9d
   1400293ee:	jl     0x14002941b
   1400293f0:	mov    ecx,DWORD PTR [rcx+0x4]
   1400293f3:	xor    eax,eax
   1400293f5:	test   rbx,rbx
   1400293f8:	setne  al
   1400293fb:	mov    r8,rdi
   1400293fe:	mov    edx,0x9
   140029403:	mov    DWORD PTR [rsp+0x28],eax
   140029407:	mov    QWORD PTR [rsp+0x20],rbx
   14002940c:	call   QWORD PTR [rip+0x803e]        # 0x140031450
   140029412:	test   eax,eax
   140029414:	mov    rcx,QWORD PTR [rsp+0x30]
   140029419:	jne    0x14002942d
   14002941b:	movsxd rax,DWORD PTR [rcx+0x10c]
   140029422:	cmp    rsi,rax
   140029425:	jb     0x14002945a
   140029427:	cmp    BYTE PTR [rdi+0x1],0x0
   14002942b:	je     0x14002945a
   14002942d:	cmp    BYTE PTR [rsp+0x48],0x0
   140029432:	mov    eax,DWORD PTR [rcx+0x10c]
   140029438:	je     0x1400292c3
   14002943e:	mov    rcx,QWORD PTR [rsp+0x40]
   140029443:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002944a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002944f:	mov    rsi,QWORD PTR [rsp+0x68]
   140029454:	add    rsp,0x50
   140029458:	pop    rdi
   140029459:	ret    
   14002945a:	call   0x14001b280
   14002945f:	mov    DWORD PTR [rax],0x2a
   140029465:	cmp    BYTE PTR [rsp+0x48],0x0
   14002946a:	je     0x140029478
   14002946c:	mov    rax,QWORD PTR [rsp+0x40]
   140029471:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029478:	or     eax,0xffffffff
   14002947b:	mov    rbx,QWORD PTR [rsp+0x60]
   140029480:	mov    rsi,QWORD PTR [rsp+0x68]
   140029485:	add    rsp,0x50
   140029489:	pop    rdi
   14002948a:	ret    
   14002948b:	xor    eax,eax
   14002948d:	mov    r9d,0x1
   140029493:	test   rbx,rbx
   140029496:	setne  al
   140029499:	lea    edx,[r9+0x8]
   14002949d:	mov    r8,rdi
   1400294a0:	mov    DWORD PTR [rsp+0x28],eax
   1400294a4:	mov    rax,QWORD PTR [rsp+0x30]
   1400294a9:	mov    QWORD PTR [rsp+0x20],rbx
   1400294ae:	mov    ecx,DWORD PTR [rax+0x4]
   1400294b1:	call   QWORD PTR [rip+0x7f99]        # 0x140031450
   1400294b7:	test   eax,eax
   1400294b9:	je     0x14002945a
   1400294bb:	cmp    BYTE PTR [rsp+0x48],0x0
   1400294c0:	je     0x1400294ce
   1400294c2:	mov    rax,QWORD PTR [rsp+0x40]
   1400294c7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400294ce:	mov    rbx,QWORD PTR [rsp+0x60]
   1400294d3:	mov    rsi,QWORD PTR [rsp+0x68]
   1400294d8:	mov    eax,0x1
   1400294dd:	add    rsp,0x50
   1400294e1:	pop    rdi
   1400294e2:	ret    
   1400294e3:	int3   
   1400294e4:	int3   
   1400294e5:	int3   
   1400294e6:	int3   
   1400294e7:	int3   
   1400294e8:	int3   
   1400294e9:	int3   
   1400294ea:	int3   
   1400294eb:	int3   
   1400294ec:	int3   
   1400294ed:	int3   
   1400294ee:	int3   
   1400294ef:	int3   
   1400294f0:	xor    r9d,r9d
   1400294f3:	jmp    0x140029290
   1400294f8:	int3   
   1400294f9:	int3   
   1400294fa:	int3   
   1400294fb:	int3   
   1400294fc:	int3   
   1400294fd:	int3   
   1400294fe:	int3   
   1400294ff:	int3   
   140029500:	mov    ecx,0x2
   140029505:	jmp    0x140019980
   14002950a:	int3   
   14002950b:	int3   
   14002950c:	int3   
   14002950d:	int3   
   14002950e:	int3   
   14002950f:	int3   
   140029510:	rex push rbx
   140029512:	sub    rsp,0x40
   140029516:	cmp    DWORD PTR [rip+0x1c58b],0x0        # 0x140045aa8
   14002951d:	movsxd rbx,ecx
   140029520:	jne    0x140029535
   140029522:	mov    rax,QWORD PTR [rip+0x17547]        # 0x140040a70
   140029529:	mov    al,BYTE PTR [rax+rbx*2]
   14002952c:	and    eax,0x4
   14002952f:	add    rsp,0x40
   140029533:	pop    rbx
   140029534:	ret    
   140029535:	mov    BYTE PTR [rsp+0x38],0x0
   14002953a:	call   0x14001d930
   14002953f:	mov    r11,rax
   140029542:	mov    QWORD PTR [rsp+0x30],rax
   140029547:	mov    rax,QWORD PTR [rax+0xc0]
   14002954e:	cmp    rax,QWORD PTR [rip+0x1753b]        # 0x140040a90
   140029555:	mov    QWORD PTR [rsp+0x20],rax
   14002955a:	mov    rdx,QWORD PTR [r11+0xb8]
   140029561:	mov    QWORD PTR [rsp+0x28],rdx
   140029566:	je     0x14002958b
   140029568:	mov    ecx,DWORD PTR [r11+0xc8]
   14002956f:	test   DWORD PTR [rip+0x173a3],ecx        # 0x140040918
   140029575:	jne    0x14002958b
   140029577:	call   0x14001ed60
   14002957c:	mov    r11,QWORD PTR [rsp+0x30]
   140029581:	mov    rdx,QWORD PTR [rsp+0x28]
   140029586:	mov    QWORD PTR [rsp+0x20],rax
   14002958b:	cmp    rdx,QWORD PTR [rip+0x1727e]        # 0x140040810
   140029592:	je     0x1400295b7
   140029594:	mov    ecx,DWORD PTR [r11+0xc8]
   14002959b:	test   DWORD PTR [rip+0x17377],ecx        # 0x140040918
   1400295a1:	jne    0x1400295b7
   1400295a3:	call   0x14001e210
   1400295a8:	mov    r11,QWORD PTR [rsp+0x30]
   1400295ad:	mov    QWORD PTR [rsp+0x28],rax
   1400295b2:	mov    rax,QWORD PTR [rsp+0x20]
   1400295b7:	test   BYTE PTR [r11+0xc8],0x2
   1400295bf:	jne    0x1400295d8
   1400295c1:	or     DWORD PTR [r11+0xc8],0x2
   1400295c9:	mov    r11,QWORD PTR [rsp+0x30]
   1400295ce:	mov    rax,QWORD PTR [rsp+0x20]
   1400295d3:	mov    BYTE PTR [rsp+0x38],0x1
   1400295d8:	cmp    DWORD PTR [rax+0x10c],0x1
   1400295df:	jle    0x1400295f9
   1400295e1:	lea    r8,[rsp+0x20]
   1400295e6:	mov    edx,0x4
   1400295eb:	mov    ecx,ebx
   1400295ed:	call   0x14002bf60
   1400295f2:	mov    r11,QWORD PTR [rsp+0x30]
   1400295f7:	jmp    0x140029606
   1400295f9:	mov    rax,QWORD PTR [rax+0x140]
   140029600:	mov    al,BYTE PTR [rax+rbx*2]
   140029603:	and    eax,0x4
   140029606:	cmp    BYTE PTR [rsp+0x38],0x0
   14002960b:	je     0x140029615
   14002960d:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140029615:	add    rsp,0x40
   140029619:	pop    rbx
   14002961a:	ret    
   14002961b:	int3   
   14002961c:	int3   
   14002961d:	int3   
   14002961e:	int3   
   14002961f:	int3   
   140029620:	rex push rbx
   140029622:	sub    rsp,0x40
   140029626:	cmp    DWORD PTR [rip+0x1c47b],0x0        # 0x140045aa8
   14002962d:	movsxd rbx,ecx
   140029630:	jne    0x140029647
   140029632:	mov    rax,QWORD PTR [rip+0x17437]        # 0x140040a70
   140029639:	mov    al,BYTE PTR [rax+rbx*2]
   14002963c:	and    eax,0x80
   140029641:	add    rsp,0x40
   140029645:	pop    rbx
   140029646:	ret    
   140029647:	mov    BYTE PTR [rsp+0x38],0x0
   14002964c:	call   0x14001d930
   140029651:	mov    r11,rax
   140029654:	mov    QWORD PTR [rsp+0x30],rax
   140029659:	mov    rax,QWORD PTR [rax+0xc0]
   140029660:	cmp    rax,QWORD PTR [rip+0x17429]        # 0x140040a90
   140029667:	mov    QWORD PTR [rsp+0x20],rax
   14002966c:	mov    rdx,QWORD PTR [r11+0xb8]
   140029673:	mov    QWORD PTR [rsp+0x28],rdx
   140029678:	je     0x14002969d
   14002967a:	mov    ecx,DWORD PTR [r11+0xc8]
   140029681:	test   DWORD PTR [rip+0x17291],ecx        # 0x140040918
   140029687:	jne    0x14002969d
   140029689:	call   0x14001ed60
   14002968e:	mov    r11,QWORD PTR [rsp+0x30]
   140029693:	mov    rdx,QWORD PTR [rsp+0x28]
   140029698:	mov    QWORD PTR [rsp+0x20],rax
   14002969d:	cmp    rdx,QWORD PTR [rip+0x1716c]        # 0x140040810
   1400296a4:	je     0x1400296c9
   1400296a6:	mov    ecx,DWORD PTR [r11+0xc8]
   1400296ad:	test   DWORD PTR [rip+0x17265],ecx        # 0x140040918
   1400296b3:	jne    0x1400296c9
   1400296b5:	call   0x14001e210
   1400296ba:	mov    r11,QWORD PTR [rsp+0x30]
   1400296bf:	mov    QWORD PTR [rsp+0x28],rax
   1400296c4:	mov    rax,QWORD PTR [rsp+0x20]
   1400296c9:	test   BYTE PTR [r11+0xc8],0x2
   1400296d1:	jne    0x1400296ea
   1400296d3:	or     DWORD PTR [r11+0xc8],0x2
   1400296db:	mov    r11,QWORD PTR [rsp+0x30]
   1400296e0:	mov    rax,QWORD PTR [rsp+0x20]
   1400296e5:	mov    BYTE PTR [rsp+0x38],0x1
   1400296ea:	cmp    DWORD PTR [rax+0x10c],0x1
   1400296f1:	jle    0x14002970b
   1400296f3:	lea    r8,[rsp+0x20]
   1400296f8:	mov    edx,0x80
   1400296fd:	mov    ecx,ebx
   1400296ff:	call   0x14002bf60
   140029704:	mov    r11,QWORD PTR [rsp+0x30]
   140029709:	jmp    0x14002971a
   14002970b:	mov    rax,QWORD PTR [rax+0x140]
   140029712:	mov    al,BYTE PTR [rax+rbx*2]
   140029715:	and    eax,0x80
   14002971a:	cmp    BYTE PTR [rsp+0x38],0x0
   14002971f:	je     0x140029729
   140029721:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140029729:	add    rsp,0x40
   14002972d:	pop    rbx
   14002972e:	ret    
   14002972f:	int3   
   140029730:	rex push rbp
   140029732:	push   r12
   140029734:	push   r13
   140029736:	push   r14
   140029738:	push   r15
   14002973a:	sub    rsp,0x60
   14002973e:	lea    rbp,[rsp+0x40]
   140029743:	mov    QWORD PTR [rbp+0x50],rbx
   140029747:	mov    QWORD PTR [rbp+0x58],rsi
   14002974b:	mov    QWORD PTR [rbp+0x60],rdi
   14002974f:	mov    rax,QWORD PTR [rip+0x1687a]        # 0x14003ffd0
   140029756:	xor    rax,rbp
   140029759:	mov    QWORD PTR [rbp+0x18],rax
   14002975d:	movsxd r13,r9d
   140029760:	mov    rdi,r8
   140029763:	mov    ebx,edx
   140029765:	cmp    r13d,0xffffffff
   140029769:	mov    DWORD PTR [rbp+0x0],edx
   14002976c:	mov    rsi,rcx
   14002976f:	mov    QWORD PTR [rbp+0x10],rcx
   140029773:	jl     0x140029a1a
   140029779:	mov    eax,DWORD PTR [rip+0x1ccf1]        # 0x140046470
   14002977f:	test   eax,eax
   140029781:	jne    0x1400297ca
   140029783:	mov    r8d,0x1
   140029789:	lea    r9,[rbp+0x4]
   14002978d:	lea    rdx,[rip+0xb9f0]        # 0x140035184
   140029794:	mov    ecx,r8d
   140029797:	call   QWORD PTR [rip+0x7ad3]        # 0x140031270
   14002979d:	test   eax,eax
   14002979f:	je     0x1400297ad
   1400297a1:	mov    DWORD PTR [rip+0x1ccc5],0x1        # 0x140046470
   1400297ab:	jmp    0x1400297cf
   1400297ad:	call   QWORD PTR [rip+0x7cc5]        # 0x140031478
   1400297b3:	cmp    eax,0x78
   1400297b6:	jne    0x1400297c4
   1400297b8:	mov    DWORD PTR [rip+0x1ccae],0x2        # 0x140046470
   1400297c2:	jmp    0x1400297f3
   1400297c4:	mov    eax,DWORD PTR [rip+0x1cca6]        # 0x140046470
   1400297ca:	cmp    eax,0x1
   1400297cd:	jne    0x1400297e6
   1400297cf:	mov    r9,QWORD PTR [rbp+0x70]
   1400297d3:	mov    r8d,r13d
   1400297d6:	mov    rdx,rdi
   1400297d9:	mov    ecx,ebx
   1400297db:	call   QWORD PTR [rip+0x7a8f]        # 0x140031270
   1400297e1:	jmp    0x140029a1c
   1400297e6:	cmp    eax,0x2
   1400297e9:	je     0x1400297f3
   1400297eb:	test   eax,eax
   1400297ed:	jne    0x140029a1a
   1400297f3:	mov    r12d,DWORD PTR [rbp+0x80]
   1400297fa:	xor    r14d,r14d
   1400297fd:	test   r12d,r12d
   140029800:	mov    r15d,r14d
   140029803:	jne    0x14002980c
   140029805:	mov    rax,QWORD PTR [rsi]
   140029808:	mov    r12d,DWORD PTR [rax+0x14]
   14002980c:	mov    ebx,DWORD PTR [rbp+0x78]
   14002980f:	test   ebx,ebx
   140029811:	jne    0x140029819
   140029813:	mov    rax,QWORD PTR [rsi]
   140029816:	mov    ebx,DWORD PTR [rax+0x4]
   140029819:	mov    ecx,r12d
   14002981c:	call   0x140027e90
   140029821:	cmp    ebx,eax
   140029823:	je     0x14002982b
   140029825:	cmp    eax,0xffffffff
   140029828:	cmovne ebx,eax
   14002982b:	mov    QWORD PTR [rsp+0x38],r14
   140029830:	mov    QWORD PTR [rsp+0x30],r14
   140029835:	mov    r9d,r13d
   140029838:	mov    r8,rdi
   14002983b:	xor    edx,edx
   14002983d:	mov    ecx,ebx
   14002983f:	mov    DWORD PTR [rsp+0x28],r14d
   140029844:	mov    QWORD PTR [rsp+0x20],r14
   140029849:	call   QWORD PTR [rip+0x7ba9]        # 0x1400313f8
   14002984f:	test   eax,eax
   140029851:	movsxd r14,eax
   140029854:	je     0x140029a1a
   14002985a:	jle    0x140029a1a
   140029860:	cmp    r14,0xffffffffffffffe0
   140029864:	ja     0x140029a1a
   14002986a:	lea    rcx,[r14+0x10]
   14002986e:	movabs rdx,0xffffffffffffff0
   140029878:	cmp    rcx,0x400
   14002987f:	ja     0x1400298af
   140029881:	lea    rax,[rcx+0xf]
   140029885:	cmp    rax,rcx
   140029888:	ja     0x14002988d
   14002988a:	mov    rax,rdx
   14002988d:	and    rax,0xfffffffffffffff0
   140029891:	call   0x140030670
   140029896:	sub    rsp,rax
   140029899:	lea    rsi,[rsp+0x40]
   14002989e:	test   rsi,rsi
   1400298a1:	je     0x140029a1a
   1400298a7:	mov    DWORD PTR [rsi],0xcccc
   1400298ad:	jmp    0x1400298c2
   1400298af:	call   0x14001a470
   1400298b4:	test   rax,rax
   1400298b7:	mov    rsi,rax
   1400298ba:	je     0x1400298c6
   1400298bc:	mov    DWORD PTR [rax],0xdddd
   1400298c2:	add    rsi,0x10
   1400298c6:	test   rsi,rsi
   1400298c9:	je     0x140029a1a
   1400298cf:	mov    r8,r14
   1400298d2:	xor    edx,edx
   1400298d4:	mov    rcx,rsi
   1400298d7:	call   0x14001b520
   1400298dc:	xor    eax,eax
   1400298de:	mov    r9d,r13d
   1400298e1:	mov    QWORD PTR [rsp+0x38],rax
   1400298e6:	mov    QWORD PTR [rsp+0x30],rax
   1400298eb:	mov    r8,rdi
   1400298ee:	xor    edx,edx
   1400298f0:	mov    ecx,ebx
   1400298f2:	mov    DWORD PTR [rsp+0x28],r14d
   1400298f7:	mov    QWORD PTR [rsp+0x20],rsi
   1400298fc:	call   QWORD PTR [rip+0x7af6]        # 0x1400313f8
   140029902:	test   eax,eax
   140029904:	je     0x140029a03
   14002990a:	lea    eax,[r14+0x1]
   14002990e:	test   eax,eax
   140029910:	jle    0x140029a03
   140029916:	movsxd rcx,eax
   140029919:	movabs rax,0x7ffffffffffffff0
   140029923:	cmp    rcx,rax
   140029926:	ja     0x140029a03
   14002992c:	lea    rcx,[rcx+rcx*1+0x10]
   140029931:	cmp    rcx,0x400
   140029938:	ja     0x14002996f
   14002993a:	lea    rax,[rcx+0xf]
   14002993e:	cmp    rax,rcx
   140029941:	ja     0x14002994d
   140029943:	movabs rax,0xffffffffffffff0
   14002994d:	and    rax,0xfffffffffffffff0
   140029951:	call   0x140030670
   140029956:	sub    rsp,rax
   140029959:	lea    rdi,[rsp+0x40]
   14002995e:	test   rdi,rdi
   140029961:	je     0x140029a03
   140029967:	mov    DWORD PTR [rdi],0xcccc
   14002996d:	jmp    0x140029982
   14002996f:	call   0x14001a470
   140029974:	test   rax,rax
   140029977:	mov    rdi,rax
   14002997a:	je     0x140029986
   14002997c:	mov    DWORD PTR [rax],0xdddd
   140029982:	add    rdi,0x10
   140029986:	test   rdi,rdi
   140029989:	je     0x140029a03
   14002998b:	test   r12d,r12d
   14002998e:	jne    0x14002999b
   140029990:	mov    rax,QWORD PTR [rbp+0x10]
   140029994:	mov    rax,QWORD PTR [rax]
   140029997:	mov    r12d,DWORD PTR [rax+0x14]
   14002999b:	mov    edx,DWORD PTR [rbp+0x0]
   14002999e:	mov    rbx,r13
   1400299a1:	add    r13,r13
   1400299a4:	mov    r9d,r14d
   1400299a7:	mov    r8,rsi
   1400299aa:	mov    ecx,r12d
   1400299ad:	mov    WORD PTR [r13+rdi*1+0x0],0xffff
   1400299b5:	mov    WORD PTR [rdi+rbx*2-0x2],0xffff
   1400299bc:	mov    QWORD PTR [rsp+0x20],rdi
   1400299c1:	call   QWORD PTR [rip+0x78a1]        # 0x140031268
   1400299c7:	cmp    WORD PTR [rdi+rbx*2-0x2],0xffff
   1400299ce:	mov    r15d,eax
   1400299d1:	je     0x1400299ee
   1400299d3:	cmp    WORD PTR [r13+rdi*1+0x0],0xffff
   1400299db:	jne    0x1400299ee
   1400299dd:	mov    rcx,QWORD PTR [rbp+0x70]
   1400299e1:	mov    r8,r13
   1400299e4:	mov    rdx,rdi
   1400299e7:	call   0x14001baf0
   1400299ec:	jmp    0x1400299f1
   1400299ee:	xor    r15d,r15d
   1400299f1:	cmp    DWORD PTR [rdi-0x10],0xdddd
   1400299f8:	lea    rcx,[rdi-0x10]
   1400299fc:	jne    0x140029a03
   1400299fe:	call   0x14001a540
   140029a03:	cmp    DWORD PTR [rsi-0x10],0xdddd
   140029a0a:	lea    rcx,[rsi-0x10]
   140029a0e:	jne    0x140029a15
   140029a10:	call   0x14001a540
   140029a15:	mov    eax,r15d
   140029a18:	jmp    0x140029a1c
   140029a1a:	xor    eax,eax
   140029a1c:	mov    rcx,QWORD PTR [rbp+0x18]
   140029a20:	xor    rcx,rbp
   140029a23:	call   0x140019370
   140029a28:	mov    rbx,QWORD PTR [rbp+0x50]
   140029a2c:	mov    rsi,QWORD PTR [rbp+0x58]
   140029a30:	mov    rdi,QWORD PTR [rbp+0x60]
   140029a34:	lea    rsp,[rbp+0x20]
   140029a38:	pop    r15
   140029a3a:	pop    r14
   140029a3c:	pop    r13
   140029a3e:	pop    r12
   140029a40:	pop    rbp
   140029a41:	ret    
   140029a42:	int3   
   140029a43:	int3   
   140029a44:	int3   
   140029a45:	int3   
   140029a46:	int3   
   140029a47:	int3   
   140029a48:	int3   
   140029a49:	int3   
   140029a4a:	int3   
   140029a4b:	int3   
   140029a4c:	int3   
   140029a4d:	int3   
   140029a4e:	int3   
   140029a4f:	int3   
   140029a50:	mov    rax,rsp
   140029a53:	push   rbx
   140029a54:	sub    rsp,0x70
   140029a58:	mov    QWORD PTR [rax+0x8],rbp
   140029a5c:	mov    QWORD PTR [rax+0x18],rdi
   140029a60:	xor    dil,dil
   140029a63:	test   rcx,rcx
   140029a66:	mov    QWORD PTR [rax-0x10],r12
   140029a6a:	mov    QWORD PTR [rax-0x18],r13
   140029a6e:	mov    BYTE PTR [rax-0x20],dil
   140029a72:	mov    ebp,r9d
   140029a75:	mov    r12,r8
   140029a78:	mov    r13d,edx
   140029a7b:	jne    0x140029b0e
   140029a81:	mov    QWORD PTR [rax+0x10],rsi
   140029a85:	call   0x14001d930
   140029a8a:	mov    rcx,QWORD PTR [rax+0xc0]
   140029a91:	mov    rsi,QWORD PTR [rax+0xb8]
   140029a98:	mov    rbx,rax
   140029a9b:	cmp    rcx,QWORD PTR [rip+0x16fee]        # 0x140040a90
   140029aa2:	mov    QWORD PTR [rsp+0x50],rax
   140029aa7:	mov    QWORD PTR [rsp+0x40],rcx
   140029aac:	mov    QWORD PTR [rsp+0x48],rsi
   140029ab1:	je     0x140029acb
   140029ab3:	mov    ecx,DWORD PTR [rax+0xc8]
   140029ab9:	test   DWORD PTR [rip+0x16e59],ecx        # 0x140040918
   140029abf:	jne    0x140029acb
   140029ac1:	call   0x14001ed60
   140029ac6:	mov    QWORD PTR [rsp+0x40],rax
   140029acb:	cmp    rsi,QWORD PTR [rip+0x16d3e]        # 0x140040810
   140029ad2:	mov    rsi,QWORD PTR [rsp+0x88]
   140029ada:	je     0x140029af4
   140029adc:	mov    eax,DWORD PTR [rbx+0xc8]
   140029ae2:	test   DWORD PTR [rip+0x16e30],eax        # 0x140040918
   140029ae8:	jne    0x140029af4
   140029aea:	call   0x14001e210
   140029aef:	mov    QWORD PTR [rsp+0x48],rax
   140029af4:	test   BYTE PTR [rbx+0xc8],0x2
   140029afb:	jne    0x140029b2b
   140029afd:	or     DWORD PTR [rbx+0xc8],0x2
   140029b04:	mov    dil,0x1
   140029b07:	mov    BYTE PTR [rsp+0x58],dil
   140029b0c:	jmp    0x140029b2b
   140029b0e:	mov    rax,QWORD PTR [rcx]
   140029b11:	lea    rdx,[rsp+0x40]
   140029b16:	mov    QWORD PTR [rdx],rax
   140029b19:	mov    rax,QWORD PTR [rcx+0x8]
   140029b1d:	mov    QWORD PTR [rdx+0x8],rax
   140029b21:	movzx  edi,BYTE PTR [rsp+0x58]
   140029b26:	mov    rbx,QWORD PTR [rsp+0x50]
   140029b2b:	mov    eax,DWORD PTR [rsp+0xb0]
   140029b32:	lea    rcx,[rsp+0x40]
   140029b37:	mov    r9d,ebp
   140029b3a:	mov    DWORD PTR [rsp+0x30],eax
   140029b3e:	mov    eax,DWORD PTR [rsp+0xa8]
   140029b45:	mov    r8,r12
   140029b48:	mov    DWORD PTR [rsp+0x28],eax
   140029b4c:	mov    rax,QWORD PTR [rsp+0xa0]
   140029b54:	mov    edx,r13d
   140029b57:	mov    QWORD PTR [rsp+0x20],rax
   140029b5c:	call   0x140029730
   140029b61:	mov    r13,QWORD PTR [rsp+0x60]
   140029b66:	mov    r12,QWORD PTR [rsp+0x68]
   140029b6b:	mov    rbp,QWORD PTR [rsp+0x80]
   140029b73:	test   dil,dil
   140029b76:	mov    rdi,QWORD PTR [rsp+0x90]
   140029b7e:	je     0x140029b87
   140029b80:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140029b87:	add    rsp,0x70
   140029b8b:	pop    rbx
   140029b8c:	ret    
   140029b8d:	int3   
   140029b8e:	int3   
   140029b8f:	int3   
   140029b90:	mov    QWORD PTR [rsp+0x8],rbx
   140029b95:	mov    QWORD PTR [rsp+0x10],rsi
   140029b9a:	push   rdi
   140029b9b:	sub    rsp,0x20
   140029b9f:	lea    rax,[rip+0xca92]        # 0x140036638
   140029ba6:	mov    rsi,rdx
   140029ba9:	mov    rbx,rcx
   140029bac:	mov    QWORD PTR [rcx],rax
   140029baf:	mov    rdi,QWORD PTR [rdx]
   140029bb2:	test   rdi,rdi
   140029bb5:	je     0x140029bfd
   140029bb7:	or     rcx,0xffffffffffffffff
   140029bbb:	xor    eax,eax
   140029bbd:	repnz scas al,BYTE PTR es:[rdi]
   140029bbf:	not    rcx
   140029bc2:	lea    rdi,[rcx-0x1]
   140029bc6:	call   0x14001a470
   140029bcb:	test   rax,rax
   140029bce:	mov    QWORD PTR [rbx+0x8],rax
   140029bd2:	je     0x140029be3
   140029bd4:	mov    r8,QWORD PTR [rsi]
   140029bd7:	lea    rdx,[rdi+0x1]
   140029bdb:	mov    rcx,rax
   140029bde:	call   0x140026f70
   140029be3:	mov    DWORD PTR [rbx+0x10],0x1
   140029bea:	mov    rax,rbx
   140029bed:	mov    rbx,QWORD PTR [rsp+0x30]
   140029bf2:	mov    rsi,QWORD PTR [rsp+0x38]
   140029bf7:	add    rsp,0x20
   140029bfb:	pop    rdi
   140029bfc:	ret    
   140029bfd:	mov    rsi,QWORD PTR [rsp+0x38]
   140029c02:	mov    rax,rbx
   140029c05:	mov    rbx,QWORD PTR [rsp+0x30]
   140029c0a:	mov    QWORD PTR [rcx+0x8],0x0
   140029c12:	mov    DWORD PTR [rcx+0x10],0x1
   140029c19:	add    rsp,0x20
   140029c1d:	pop    rdi
   140029c1e:	ret    
   140029c1f:	int3   
   140029c20:	mov    QWORD PTR [rsp+0x10],rbx
   140029c25:	push   rsi
   140029c26:	sub    rsp,0x20
   140029c2a:	lea    rax,[rip+0xca07]        # 0x140036638
   140029c31:	mov    rsi,rdx
   140029c34:	mov    rbx,rcx
   140029c37:	mov    QWORD PTR [rcx],rax
   140029c3a:	mov    eax,DWORD PTR [rdx+0x10]
   140029c3d:	test   eax,eax
   140029c3f:	mov    DWORD PTR [rcx+0x10],eax
   140029c42:	je     0x140029cad
   140029c44:	mov    QWORD PTR [rsp+0x30],rdi
   140029c49:	mov    rdi,QWORD PTR [rdx+0x8]
   140029c4d:	test   rdi,rdi
   140029c50:	je     0x140029c92
   140029c52:	or     rcx,0xffffffffffffffff
   140029c56:	xor    eax,eax
   140029c58:	repnz scas al,BYTE PTR es:[rdi]
   140029c5a:	not    rcx
   140029c5d:	lea    rdi,[rcx-0x1]
   140029c61:	call   0x14001a470
   140029c66:	test   rax,rax
   140029c69:	mov    QWORD PTR [rbx+0x8],rax
   140029c6d:	je     0x140029c7f
   140029c6f:	mov    r8,QWORD PTR [rsi+0x8]
   140029c73:	lea    rdx,[rdi+0x1]
   140029c77:	mov    rcx,rax
   140029c7a:	call   0x140026f70
   140029c7f:	mov    rax,rbx
   140029c82:	mov    rdi,QWORD PTR [rsp+0x30]
   140029c87:	mov    rbx,QWORD PTR [rsp+0x38]
   140029c8c:	add    rsp,0x20
   140029c90:	pop    rsi
   140029c91:	ret    
   140029c92:	mov    rdi,QWORD PTR [rsp+0x30]
   140029c97:	mov    QWORD PTR [rcx+0x8],0x0
   140029c9f:	mov    rax,rbx
   140029ca2:	mov    rbx,QWORD PTR [rsp+0x38]
   140029ca7:	add    rsp,0x20
   140029cab:	pop    rsi
   140029cac:	ret    
   140029cad:	mov    rax,QWORD PTR [rdx+0x8]
   140029cb1:	mov    rbx,QWORD PTR [rsp+0x38]
   140029cb6:	mov    QWORD PTR [rcx+0x8],rax
   140029cba:	mov    rax,rcx
   140029cbd:	add    rsp,0x20
   140029cc1:	pop    rsi
   140029cc2:	ret    
   140029cc3:	int3   
   140029cc4:	int3   
   140029cc5:	int3   
   140029cc6:	int3   
   140029cc7:	int3   
   140029cc8:	int3   
   140029cc9:	int3   
   140029cca:	int3   
   140029ccb:	int3   
   140029ccc:	int3   
   140029ccd:	int3   
   140029cce:	int3   
   140029ccf:	int3   
   140029cd0:	sub    rsp,0x28
   140029cd4:	cmp    DWORD PTR [rcx+0x10],0x0
   140029cd8:	lea    rax,[rip+0xc959]        # 0x140036638
   140029cdf:	mov    QWORD PTR [rcx],rax
   140029ce2:	je     0x140029ced
   140029ce4:	mov    rcx,QWORD PTR [rcx+0x8]
   140029ce8:	call   0x14001a540
   140029ced:	add    rsp,0x28
   140029cf1:	ret    
   140029cf2:	int3   
   140029cf3:	int3   
   140029cf4:	int3   
   140029cf5:	int3   
   140029cf6:	int3   
   140029cf7:	int3   
   140029cf8:	int3   
   140029cf9:	int3   
   140029cfa:	int3   
   140029cfb:	int3   
   140029cfc:	int3   
   140029cfd:	int3   
   140029cfe:	int3   
   140029cff:	int3   
   140029d00:	mov    rax,QWORD PTR [rcx+0x8]
   140029d04:	test   rax,rax
   140029d07:	jne    0x140029d10
   140029d09:	lea    rax,[rip+0xc938]        # 0x140036648
   140029d10:	ret    0x0
   140029d13:	int3   
   140029d14:	int3   
   140029d15:	int3   
   140029d16:	int3   
   140029d17:	int3   
   140029d18:	int3   
   140029d19:	int3   
   140029d1a:	int3   
   140029d1b:	int3   
   140029d1c:	int3   
   140029d1d:	int3   
   140029d1e:	int3   
   140029d1f:	int3   
   140029d20:	mov    QWORD PTR [rsp+0x8],rbx
   140029d25:	push   rdi
   140029d26:	sub    rsp,0x20
   140029d2a:	cmp    DWORD PTR [rcx+0x10],0x0
   140029d2e:	lea    rax,[rip+0xc903]        # 0x140036638
   140029d35:	mov    edi,edx
   140029d37:	mov    QWORD PTR [rcx],rax
   140029d3a:	mov    rbx,rcx
   140029d3d:	je     0x140029d48
   140029d3f:	mov    rcx,QWORD PTR [rcx+0x8]
   140029d43:	call   0x14001a540
   140029d48:	test   dil,0x1
   140029d4c:	je     0x140029d56
   140029d4e:	mov    rcx,rbx
   140029d51:	call   0x140006160
   140029d56:	mov    rax,rbx
   140029d59:	mov    rbx,QWORD PTR [rsp+0x30]
   140029d5e:	add    rsp,0x20
   140029d62:	pop    rdi
   140029d63:	ret    
   140029d64:	int3   
   140029d65:	int3   
   140029d66:	int3   
   140029d67:	int3   
   140029d68:	int3   
   140029d69:	int3   
   140029d6a:	int3   
   140029d6b:	int3   
   140029d6c:	int3   
   140029d6d:	int3   
   140029d6e:	int3   
   140029d6f:	int3   
   140029d70:	mov    rax,QWORD PTR [rsp]
   140029d74:	mov    QWORD PTR [rcx],rax
   140029d77:	ret    
   140029d78:	int3   
   140029d79:	int3   
   140029d7a:	int3   
   140029d7b:	int3   
   140029d7c:	int3   
   140029d7d:	int3   
   140029d7e:	int3   
   140029d7f:	int3   
   140029d80:	xor    edx,edx
   140029d82:	mov    eax,0x1
   140029d87:	test   rcx,rcx
   140029d8a:	cmove  eax,edx
   140029d8d:	ret    
   140029d8e:	int3   
   140029d8f:	int3   
   140029d90:	mov    QWORD PTR [rsp+0x18],rbx
   140029d95:	push   rbp
   140029d96:	push   rsi
   140029d97:	push   rdi
   140029d98:	sub    rsp,0x20
   140029d9c:	test   BYTE PTR [rcx+0x18],0x40
   140029da0:	mov    rdi,rcx
   140029da3:	lea    rbp,[rip+0x1d9b6]        # 0x140047760
   140029daa:	lea    rsi,[rip+0x165cf]        # 0x140040380
   140029db1:	jne    0x140029e70
   140029db7:	call   0x140028fb0
   140029dbc:	cmp    eax,0xffffffff
   140029dbf:	je     0x140029dfb
   140029dc1:	mov    rcx,rdi
   140029dc4:	call   0x140028fb0
   140029dc9:	cmp    eax,0xfffffffe
   140029dcc:	je     0x140029dfb
   140029dce:	mov    rcx,rdi
   140029dd1:	call   0x140028fb0
   140029dd6:	mov    rcx,rdi
   140029dd9:	movsxd rbx,eax
   140029ddc:	sar    rbx,0x5
   140029de0:	call   0x140028fb0
   140029de5:	mov    r11d,eax
   140029de8:	and    r11d,0x1f
   140029dec:	lea    rax,[r11+r11*4]
   140029df0:	shl    rax,0x4
   140029df4:	add    rax,QWORD PTR [rbp+rbx*8+0x0]
   140029df9:	jmp    0x140029dfe
   140029dfb:	mov    rax,rsi
   140029dfe:	test   BYTE PTR [rax+0x38],0x7f
   140029e02:	je     0x140029e70
   140029e04:	add    DWORD PTR [rdi+0x8],0xffffffff
   140029e08:	js     0x140029e1a
   140029e0a:	mov    rax,QWORD PTR [rdi]
   140029e0d:	add    rax,0x1
   140029e11:	movzx  ecx,BYTE PTR [rax-0x1]
   140029e15:	mov    QWORD PTR [rdi],rax
   140029e18:	jmp    0x140029e24
   140029e1a:	mov    rcx,rdi
   140029e1d:	call   0x14002c500
   140029e22:	mov    ecx,eax
   140029e24:	cmp    ecx,0xffffffff
   140029e27:	je     0x140029f31
   140029e2d:	add    DWORD PTR [rdi+0x8],0xffffffff
   140029e31:	mov    BYTE PTR [rsp+0x40],cl
   140029e35:	js     0x140029e47
   140029e37:	mov    rax,QWORD PTR [rdi]
   140029e3a:	add    rax,0x1
   140029e3e:	movzx  ecx,BYTE PTR [rax-0x1]
   140029e42:	mov    QWORD PTR [rdi],rax
   140029e45:	jmp    0x140029e51
   140029e47:	mov    rcx,rdi
   140029e4a:	call   0x14002c500
   140029e4f:	mov    ecx,eax
   140029e51:	cmp    ecx,0xffffffff
   140029e54:	je     0x140029f31
   140029e5a:	mov    BYTE PTR [rsp+0x41],cl
   140029e5e:	mov    ax,WORD PTR [rsp+0x40]
   140029e63:	mov    rbx,QWORD PTR [rsp+0x50]
   140029e68:	add    rsp,0x20
   140029e6c:	pop    rdi
   140029e6d:	pop    rsi
   140029e6e:	pop    rbp
   140029e6f:	ret    
   140029e70:	test   BYTE PTR [rdi+0x18],0x40
   140029e74:	jne    0x140029f82
   140029e7a:	mov    rcx,rdi
   140029e7d:	call   0x140028fb0
   140029e82:	cmp    eax,0xffffffff
   140029e85:	je     0x140029ebf
   140029e87:	mov    rcx,rdi
   140029e8a:	call   0x140028fb0
   140029e8f:	cmp    eax,0xfffffffe
   140029e92:	je     0x140029ebf
   140029e94:	mov    rcx,rdi
   140029e97:	call   0x140028fb0
   140029e9c:	mov    rcx,rdi
   140029e9f:	movsxd rbx,eax
   140029ea2:	sar    rbx,0x5
   140029ea6:	call   0x140028fb0
   140029eab:	mov    r11d,eax
   140029eae:	and    r11d,0x1f
   140029eb2:	lea    rsi,[r11+r11*4]
   140029eb6:	shl    rsi,0x4
   140029eba:	add    rsi,QWORD PTR [rbp+rbx*8+0x0]
   140029ebf:	test   BYTE PTR [rsi+0x8],0x80
   140029ec3:	je     0x140029f82
   140029ec9:	add    DWORD PTR [rdi+0x8],0xffffffff
   140029ecd:	mov    ebx,0x1
   140029ed2:	js     0x140029ee2
   140029ed4:	mov    rax,QWORD PTR [rdi]
   140029ed7:	movzx  ecx,BYTE PTR [rax]
   140029eda:	add    rax,rbx
   140029edd:	mov    QWORD PTR [rdi],rax
   140029ee0:	jmp    0x140029eec
   140029ee2:	mov    rcx,rdi
   140029ee5:	call   0x14002c500
   140029eea:	mov    ecx,eax
   140029eec:	cmp    ecx,0xffffffff
   140029eef:	je     0x140029f31
   140029ef1:	mov    BYTE PTR [rsp+0x48],cl
   140029ef5:	movzx  ecx,cl
   140029ef8:	call   0x140019f10
   140029efd:	test   eax,eax
   140029eff:	je     0x140029f4b
   140029f01:	add    DWORD PTR [rdi+0x8],0xffffffff
   140029f05:	js     0x140029f15
   140029f07:	mov    rax,QWORD PTR [rdi]
   140029f0a:	movzx  ecx,BYTE PTR [rax]
   140029f0d:	add    rax,rbx
   140029f10:	mov    QWORD PTR [rdi],rax
   140029f13:	jmp    0x140029f1f
   140029f15:	mov    rcx,rdi
   140029f18:	call   0x14002c500
   140029f1d:	mov    ecx,eax
   140029f1f:	cmp    ecx,0xffffffff
   140029f22:	jne    0x140029f42
   140029f24:	movsx  ecx,BYTE PTR [rsp+0x48]
   140029f29:	mov    rdx,rdi
   140029f2c:	call   0x14002c460
   140029f31:	or     ax,0xffff
   140029f35:	mov    rbx,QWORD PTR [rsp+0x50]
   140029f3a:	add    rsp,0x20
   140029f3e:	pop    rdi
   140029f3f:	pop    rsi
   140029f40:	pop    rbp
   140029f41:	ret    
   140029f42:	mov    BYTE PTR [rsp+0x49],cl
   140029f46:	mov    ebx,0x2
   140029f4b:	lea    rdx,[rsp+0x48]
   140029f50:	lea    rcx,[rsp+0x40]
   140029f55:	movsxd r8,ebx
   140029f58:	call   0x1400294f0
   140029f5d:	cmp    eax,0xffffffff
   140029f60:	jne    0x140029e5e
   140029f66:	call   0x14001b280
   140029f6b:	mov    DWORD PTR [rax],0x2a
   140029f71:	or     ax,0xffff
   140029f75:	mov    rbx,QWORD PTR [rsp+0x50]
   140029f7a:	add    rsp,0x20
   140029f7e:	pop    rdi
   140029f7f:	pop    rsi
   140029f80:	pop    rbp
   140029f81:	ret    
   140029f82:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140029f86:	js     0x140029fa3
   140029f88:	mov    rcx,QWORD PTR [rdi]
   140029f8b:	add    rcx,0x2
   140029f8f:	movzx  eax,WORD PTR [rcx-0x2]
   140029f93:	mov    QWORD PTR [rdi],rcx
   140029f96:	mov    rbx,QWORD PTR [rsp+0x50]
   140029f9b:	add    rsp,0x20
   140029f9f:	pop    rdi
   140029fa0:	pop    rsi
   140029fa1:	pop    rbp
   140029fa2:	ret    
   140029fa3:	mov    rcx,rdi
   140029fa6:	mov    rbx,QWORD PTR [rsp+0x50]
   140029fab:	add    rsp,0x20
   140029faf:	pop    rdi
   140029fb0:	pop    rsi
   140029fb1:	pop    rbp
   140029fb2:	jmp    0x14002c150
   140029fb7:	int3   
   140029fb8:	int3   
   140029fb9:	int3   
   140029fba:	int3   
   140029fbb:	int3   
   140029fbc:	int3   
   140029fbd:	int3   
   140029fbe:	int3   
   140029fbf:	int3   
   140029fc0:	rex push rsi
   140029fc2:	push   rdi
   140029fc3:	sub    rsp,0x48
   140029fc7:	mov    rax,QWORD PTR [rip+0x16002]        # 0x14003ffd0
   140029fce:	xor    rax,rsp
   140029fd1:	mov    QWORD PTR [rsp+0x30],rax
   140029fd6:	cmp    cx,0xffff
   140029fdb:	mov    rdi,rdx
   140029fde:	movzx  esi,cx
   140029fe1:	mov    WORD PTR [rsp+0x24],cx
   140029fe6:	je     0x14002a1f1
   140029fec:	mov    eax,DWORD PTR [rdx+0x18]
   140029fef:	test   al,0x1
   140029ff1:	jne    0x14002a003
   140029ff3:	test   al,al
   140029ff5:	jns    0x14002a1f1
   140029ffb:	test   al,0x2
   140029ffd:	jne    0x14002a1f1
   14002a003:	cmp    QWORD PTR [rdx+0x10],0x0
   14002a008:	jne    0x14002a012
   14002a00a:	mov    rcx,rdx
   14002a00d:	call   0x140028c70
   14002a012:	test   BYTE PTR [rdi+0x18],0x40
   14002a016:	mov    QWORD PTR [rsp+0x70],rbx
   14002a01b:	mov    QWORD PTR [rsp+0x78],rbp
   14002a020:	mov    QWORD PTR [rsp+0x40],r12
   14002a025:	jne    0x14002a19b
   14002a02b:	mov    rcx,rdi
   14002a02e:	call   0x140028fb0
   14002a033:	lea    rbp,[rip+0x16346]        # 0x140040380
   14002a03a:	lea    r12,[rip+0x1d71f]        # 0x140047760
   14002a041:	cmp    eax,0xffffffff
   14002a044:	je     0x14002a082
   14002a046:	mov    rcx,rdi
   14002a049:	call   0x140028fb0
   14002a04e:	cmp    eax,0xfffffffe
   14002a051:	je     0x14002a082
   14002a053:	mov    rcx,rdi
   14002a056:	call   0x140028fb0
   14002a05b:	movsxd rcx,eax
   14002a05e:	sar    rcx,0x5
   14002a062:	mov    rbx,QWORD PTR [r12+rcx*8]
   14002a066:	mov    rcx,rdi
   14002a069:	call   0x140028fb0
   14002a06e:	mov    r11d,eax
   14002a071:	and    r11d,0x1f
   14002a075:	lea    rax,[r11+r11*4]
   14002a079:	shl    rax,0x4
   14002a07d:	add    rax,rbx
   14002a080:	jmp    0x14002a085
   14002a082:	mov    rax,rbp
   14002a085:	test   BYTE PTR [rax+0x8],0x80
   14002a089:	je     0x14002a19b
   14002a08f:	mov    rcx,rdi
   14002a092:	call   0x140028fb0
   14002a097:	cmp    eax,0xffffffff
   14002a09a:	je     0x14002a0d6
   14002a09c:	mov    rcx,rdi
   14002a09f:	call   0x140028fb0
   14002a0a4:	cmp    eax,0xfffffffe
   14002a0a7:	je     0x14002a0d6
   14002a0a9:	mov    rcx,rdi
   14002a0ac:	call   0x140028fb0
   14002a0b1:	movsxd rcx,eax
   14002a0b4:	sar    rcx,0x5
   14002a0b8:	mov    rbx,QWORD PTR [r12+rcx*8]
   14002a0bc:	mov    rcx,rdi
   14002a0bf:	call   0x140028fb0
   14002a0c4:	mov    r11d,eax
   14002a0c7:	and    r11d,0x1f
   14002a0cb:	lea    rbp,[r11+r11*4]
   14002a0cf:	shl    rbp,0x4
   14002a0d3:	add    rbp,rbx
   14002a0d6:	test   BYTE PTR [rbp+0x38],0x7f
   14002a0da:	je     0x14002a0f7
   14002a0dc:	movzx  eax,BYTE PTR [rsp+0x25]
   14002a0e1:	mov    r8d,0x2
   14002a0e7:	mov    BYTE PTR [rsp+0x28],sil
   14002a0ec:	mov    BYTE PTR [rsp+0x29],al
   14002a0f0:	mov    DWORD PTR [rsp+0x20],r8d
   14002a0f5:	jmp    0x14002a11d
   14002a0f7:	lea    rdx,[rsp+0x28]
   14002a0fc:	lea    rcx,[rsp+0x20]
   14002a101:	movzx  r9d,si
   14002a105:	mov    r8d,0x5
   14002a10b:	call   0x14002a9f0
   14002a110:	test   eax,eax
   14002a112:	jne    0x14002a1d0
   14002a118:	mov    r8d,DWORD PTR [rsp+0x20]
   14002a11d:	mov    rax,QWORD PTR [rdi+0x10]
   14002a121:	movsxd rdx,r8d
   14002a124:	add    rdx,rax
   14002a127:	cmp    QWORD PTR [rdi],rdx
   14002a12a:	jae    0x14002a143
   14002a12c:	cmp    DWORD PTR [rdi+0x8],0x0
   14002a130:	jne    0x14002a1d0
   14002a136:	cmp    r8d,DWORD PTR [rdi+0x24]
   14002a13a:	jg     0x14002a1d0
   14002a140:	mov    QWORD PTR [rdi],rdx
   14002a143:	lea    eax,[r8-0x1]
   14002a147:	test   eax,eax
   14002a149:	movsxd rdx,eax
   14002a14c:	js     0x14002a169
   14002a14e:	xchg   ax,ax
   14002a150:	add    QWORD PTR [rdi],0xffffffffffffffff
   14002a154:	movzx  eax,BYTE PTR [rsp+rdx*1+0x28]
   14002a159:	sub    rdx,0x1
   14002a15d:	mov    rcx,QWORD PTR [rdi]
   14002a160:	mov    BYTE PTR [rcx],al
   14002a162:	jns    0x14002a150
   14002a164:	mov    r8d,DWORD PTR [rsp+0x20]
   14002a169:	add    DWORD PTR [rdi+0x8],r8d
   14002a16d:	and    DWORD PTR [rdi+0x18],0xffffffef
   14002a171:	or     DWORD PTR [rdi+0x18],0x1
   14002a175:	mov    ax,si
   14002a178:	mov    rbp,QWORD PTR [rsp+0x78]
   14002a17d:	mov    rbx,QWORD PTR [rsp+0x70]
   14002a182:	mov    r12,QWORD PTR [rsp+0x40]
   14002a187:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a18c:	xor    rcx,rsp
   14002a18f:	call   0x140019370
   14002a194:	add    rsp,0x48
   14002a198:	pop    rdi
   14002a199:	pop    rsi
   14002a19a:	ret    
   14002a19b:	mov    rax,QWORD PTR [rdi+0x10]
   14002a19f:	add    rax,0x2
   14002a1a3:	cmp    QWORD PTR [rdi],rax
   14002a1a6:	jae    0x14002a1b7
   14002a1a8:	cmp    DWORD PTR [rdi+0x8],0x0
   14002a1ac:	jne    0x14002a1d0
   14002a1ae:	cmp    DWORD PTR [rdi+0x24],0x2
   14002a1b2:	jb     0x14002a1d0
   14002a1b4:	mov    QWORD PTR [rdi],rax
   14002a1b7:	test   BYTE PTR [rdi+0x18],0x40
   14002a1bb:	je     0x14002a1d6
   14002a1bd:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14002a1c1:	mov    rax,QWORD PTR [rdi]
   14002a1c4:	cmp    WORD PTR [rax],si
   14002a1c7:	je     0x14002a1e0
   14002a1c9:	add    rax,0x2
   14002a1cd:	mov    QWORD PTR [rdi],rax
   14002a1d0:	or     ax,0xffff
   14002a1d4:	jmp    0x14002a178
   14002a1d6:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14002a1da:	mov    rax,QWORD PTR [rdi]
   14002a1dd:	mov    WORD PTR [rax],si
   14002a1e0:	add    DWORD PTR [rdi+0x8],0x2
   14002a1e4:	and    DWORD PTR [rdi+0x18],0xffffffef
   14002a1e8:	or     DWORD PTR [rdi+0x18],0x1
   14002a1ec:	mov    ax,si
   14002a1ef:	jmp    0x14002a178
   14002a1f1:	or     ax,0xffff
   14002a1f5:	jmp    0x14002a187
   14002a1f7:	int3   
   14002a1f8:	int3   
   14002a1f9:	int3   
   14002a1fa:	int3   
   14002a1fb:	int3   
   14002a1fc:	int3   
   14002a1fd:	int3   
   14002a1fe:	int3   
   14002a1ff:	int3   
   14002a200:	rex push rbp
   14002a202:	push   rsi
   14002a203:	push   r12
   14002a205:	push   r14
   14002a207:	sub    rsp,0xa8
   14002a20e:	mov    rax,QWORD PTR [rip+0x15dbb]        # 0x14003ffd0
   14002a215:	xor    rax,rsp
   14002a218:	mov    QWORD PTR [rsp+0x70],rax
   14002a21d:	xor    ebp,ebp
   14002a21f:	test   rcx,rcx
   14002a222:	mov    r12,r8
   14002a225:	mov    rsi,rdx
   14002a228:	mov    r14,rcx
   14002a22b:	mov    DWORD PTR [rsp+0x40],ebp
   14002a22f:	je     0x14002a23d
   14002a231:	test   r8,r8
   14002a234:	jne    0x14002a23d
   14002a236:	xor    eax,eax
   14002a238:	jmp    0x14002a5d7
   14002a23d:	test   rdx,rdx
   14002a240:	jne    0x14002a26a
   14002a242:	call   0x14001b280
   14002a247:	xor    r9d,r9d
   14002a24a:	xor    r8d,r8d
   14002a24d:	xor    edx,edx
   14002a24f:	xor    ecx,ecx
   14002a251:	mov    QWORD PTR [rsp+0x20],rbp
   14002a256:	mov    DWORD PTR [rax],0x16
   14002a25c:	call   0x14001de30
   14002a261:	or     rax,0xffffffffffffffff
   14002a265:	jmp    0x14002a5d7
   14002a26a:	cmp    r8,0x7fffffff
   14002a271:	ja     0x14002a242
   14002a273:	mov    QWORD PTR [rsp+0xa0],rbx
   14002a27b:	mov    QWORD PTR [rsp+0x98],rdi
   14002a283:	mov    QWORD PTR [rsp+0x90],r13
   14002a28b:	xor    r13b,r13b
   14002a28e:	test   r9,r9
   14002a291:	mov    QWORD PTR [rsp+0x88],r15
   14002a299:	mov    BYTE PTR [rsp+0x60],r13b
   14002a29e:	jne    0x14002a30a
   14002a2a0:	call   0x14001d930
   14002a2a5:	mov    rbx,rax
   14002a2a8:	mov    r15,QWORD PTR [rax+0xc0]
   14002a2af:	mov    rdi,QWORD PTR [rax+0xb8]
   14002a2b6:	cmp    r15,QWORD PTR [rip+0x167d3]        # 0x140040a90
   14002a2bd:	je     0x14002a2d5
   14002a2bf:	mov    eax,DWORD PTR [rax+0xc8]
   14002a2c5:	test   DWORD PTR [rip+0x1664d],eax        # 0x140040918
   14002a2cb:	jne    0x14002a2d5
   14002a2cd:	call   0x14001ed60
   14002a2d2:	mov    r15,rax
   14002a2d5:	cmp    rdi,QWORD PTR [rip+0x16534]        # 0x140040810
   14002a2dc:	je     0x14002a2f1
   14002a2de:	mov    eax,DWORD PTR [rbx+0xc8]
   14002a2e4:	test   DWORD PTR [rip+0x1662e],eax        # 0x140040918
   14002a2ea:	jne    0x14002a2f1
   14002a2ec:	call   0x14001e210
   14002a2f1:	mov    ecx,DWORD PTR [rbx+0xc8]
   14002a2f7:	test   cl,0x2
   14002a2fa:	jne    0x14002a32d
   14002a2fc:	or     ecx,0x2
   14002a2ff:	mov    r13b,0x1
   14002a302:	mov    DWORD PTR [rbx+0xc8],ecx
   14002a308:	jmp    0x14002a32d
   14002a30a:	mov    rax,QWORD PTR [r9]
   14002a30d:	lea    rcx,[rsp+0x48]
   14002a312:	mov    QWORD PTR [rcx],rax
   14002a315:	mov    rax,QWORD PTR [r9+0x8]
   14002a319:	mov    QWORD PTR [rcx+0x8],rax
   14002a31d:	movzx  r13d,BYTE PTR [rsp+0x60]
   14002a323:	mov    rbx,QWORD PTR [rsp+0x58]
   14002a328:	mov    r15,QWORD PTR [rsp+0x48]
   14002a32d:	test   r14,r14
   14002a330:	je     0x14002a52b
   14002a336:	cmp    DWORD PTR [r15+0x14],ebp
   14002a33a:	jne    0x14002a37d
   14002a33c:	test   r12,r12
   14002a33f:	je     0x14002a369
   14002a341:	cmp    WORD PTR [rsi],0xff
   14002a346:	ja     0x14002a51b
   14002a34c:	movzx  eax,BYTE PTR [rsi]
   14002a34f:	add    rsi,0x2
   14002a353:	mov    BYTE PTR [r14+rbp*1],al
   14002a357:	movzx  eax,WORD PTR [rsi-0x2]
   14002a35b:	test   ax,ax
   14002a35e:	je     0x14002a369
   14002a360:	add    rbp,0x1
   14002a364:	cmp    rbp,r12
   14002a367:	jb     0x14002a341
   14002a369:	test   r13b,r13b
   14002a36c:	je     0x14002a375
   14002a36e:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a375:	mov    rax,rbp
   14002a378:	jmp    0x14002a5b7
   14002a37d:	cmp    DWORD PTR [r15+0x10c],0x1
   14002a385:	jne    0x14002a412
   14002a38b:	test   r12,r12
   14002a38e:	je     0x14002a3be
   14002a390:	mov    rax,rsi
   14002a393:	mov    rcx,r12
   14002a396:	cmp    WORD PTR [rax],bp
   14002a399:	je     0x14002a3a7
   14002a39b:	add    rax,0x2
   14002a39f:	sub    rcx,0x1
   14002a3a3:	jne    0x14002a396
   14002a3a5:	jmp    0x14002a3be
   14002a3a7:	test   rcx,rcx
   14002a3aa:	je     0x14002a3be
   14002a3ac:	cmp    WORD PTR [rax],bp
   14002a3af:	jne    0x14002a3be
   14002a3b1:	mov    r12,rax
   14002a3b4:	sub    r12,rsi
   14002a3b7:	sar    r12,1
   14002a3ba:	add    r12,0x1
   14002a3be:	mov    ecx,DWORD PTR [r15+0x4]
   14002a3c2:	lea    rax,[rsp+0x40]
   14002a3c7:	mov    r9d,r12d
   14002a3ca:	mov    QWORD PTR [rsp+0x38],rax
   14002a3cf:	mov    QWORD PTR [rsp+0x30],rbp
   14002a3d4:	mov    r8,rsi
   14002a3d7:	xor    edx,edx
   14002a3d9:	mov    DWORD PTR [rsp+0x28],r12d
   14002a3de:	mov    QWORD PTR [rsp+0x20],r14
   14002a3e3:	call   QWORD PTR [rip+0x700f]        # 0x1400313f8
   14002a3e9:	cdqe   
   14002a3eb:	test   rax,rax
   14002a3ee:	je     0x14002a51b
   14002a3f4:	cmp    DWORD PTR [rsp+0x40],ebp
   14002a3f8:	jne    0x14002a51b
   14002a3fe:	cmp    BYTE PTR [r14+rax*1-0x1],bpl
   14002a403:	jne    0x14002a58e
   14002a409:	sub    rax,0x1
   14002a40d:	jmp    0x14002a58e
   14002a412:	mov    ecx,DWORD PTR [r15+0x4]
   14002a416:	lea    rax,[rsp+0x40]
   14002a41b:	or     r9d,0xffffffff
   14002a41f:	mov    QWORD PTR [rsp+0x38],rax
   14002a424:	mov    QWORD PTR [rsp+0x30],rbp
   14002a429:	mov    r8,rsi
   14002a42c:	xor    edx,edx
   14002a42e:	mov    DWORD PTR [rsp+0x28],r12d
   14002a433:	mov    QWORD PTR [rsp+0x20],r14
   14002a438:	call   QWORD PTR [rip+0x6fba]        # 0x1400313f8
   14002a43e:	test   eax,eax
   14002a440:	movsxd rdi,eax
   14002a443:	je     0x14002a458
   14002a445:	cmp    DWORD PTR [rsp+0x40],ebp
   14002a449:	jne    0x14002a51b
   14002a44f:	lea    rax,[rdi-0x1]
   14002a453:	jmp    0x14002a58e
   14002a458:	cmp    DWORD PTR [rsp+0x40],ebp
   14002a45c:	jne    0x14002a51b
   14002a462:	call   QWORD PTR [rip+0x7010]        # 0x140031478
   14002a468:	cmp    eax,0x7a
   14002a46b:	jne    0x14002a51b
   14002a471:	cmp    rdi,r12
   14002a474:	jae    0x14002a507
   14002a47a:	data16 xchg ax,ax
   14002a47d:	data16 xchg ax,ax
   14002a480:	mov    ecx,DWORD PTR [r15+0x4]
   14002a484:	lea    rax,[rsp+0x40]
   14002a489:	mov    r9d,0x1
   14002a48f:	mov    QWORD PTR [rsp+0x38],rax
   14002a494:	mov    eax,DWORD PTR [r15+0x10c]
   14002a49b:	mov    QWORD PTR [rsp+0x30],rbp
   14002a4a0:	mov    DWORD PTR [rsp+0x28],eax
   14002a4a4:	lea    rax,[rsp+0x68]
   14002a4a9:	mov    r8,rsi
   14002a4ac:	xor    edx,edx
   14002a4ae:	mov    QWORD PTR [rsp+0x20],rax
   14002a4b3:	call   QWORD PTR [rip+0x6f3f]        # 0x1400313f8
   14002a4b9:	test   eax,eax
   14002a4bb:	je     0x14002a51b
   14002a4bd:	cmp    DWORD PTR [rsp+0x40],ebp
   14002a4c1:	jne    0x14002a51b
   14002a4c3:	test   eax,eax
   14002a4c5:	js     0x14002a51b
   14002a4c7:	cmp    eax,0x5
   14002a4ca:	ja     0x14002a51b
   14002a4cc:	movsxd rdx,eax
   14002a4cf:	lea    rax,[rdx+rdi*1]
   14002a4d3:	cmp    rax,r12
   14002a4d6:	ja     0x14002a507
   14002a4d8:	test   rdx,rdx
   14002a4db:	mov    rcx,rbp
   14002a4de:	jle    0x14002a4fa
   14002a4e0:	movzx  eax,BYTE PTR [rsp+rcx*1+0x68]
   14002a4e5:	test   al,al
   14002a4e7:	mov    BYTE PTR [r14+rdi*1],al
   14002a4eb:	je     0x14002a507
   14002a4ed:	add    rcx,0x1
   14002a4f1:	add    rdi,0x1
   14002a4f5:	cmp    rcx,rdx
   14002a4f8:	jl     0x14002a4e0
   14002a4fa:	add    rsi,0x2
   14002a4fe:	cmp    rdi,r12
   14002a501:	jb     0x14002a480
   14002a507:	test   r13b,r13b
   14002a50a:	je     0x14002a513
   14002a50c:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a513:	mov    rax,rdi
   14002a516:	jmp    0x14002a5b7
   14002a51b:	call   0x14001b280
   14002a520:	test   r13b,r13b
   14002a523:	mov    DWORD PTR [rax],0x2a
   14002a529:	jmp    0x14002a5aa
   14002a52b:	cmp    DWORD PTR [r15+0x14],ebp
   14002a52f:	jne    0x14002a552
   14002a531:	or     rcx,0xffffffffffffffff
   14002a535:	xor    eax,eax
   14002a537:	mov    rdi,rsi
   14002a53a:	repnz scas ax,WORD PTR es:[rdi]
   14002a53d:	test   r13b,r13b
   14002a540:	not    rcx
   14002a543:	je     0x14002a54c
   14002a545:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a54c:	lea    rax,[rcx-0x1]
   14002a550:	jmp    0x14002a5b7
   14002a552:	mov    ecx,DWORD PTR [r15+0x4]
   14002a556:	lea    rax,[rsp+0x40]
   14002a55b:	or     r9d,0xffffffff
   14002a55f:	mov    QWORD PTR [rsp+0x38],rax
   14002a564:	mov    QWORD PTR [rsp+0x30],rbp
   14002a569:	mov    r8,rsi
   14002a56c:	xor    edx,edx
   14002a56e:	mov    DWORD PTR [rsp+0x28],ebp
   14002a572:	mov    QWORD PTR [rsp+0x20],rbp
   14002a577:	call   QWORD PTR [rip+0x6e7b]        # 0x1400313f8
   14002a57d:	cdqe   
   14002a57f:	test   rax,rax
   14002a582:	je     0x14002a59c
   14002a584:	cmp    DWORD PTR [rsp+0x40],ebp
   14002a588:	jne    0x14002a59c
   14002a58a:	add    rax,0xffffffffffffffff
   14002a58e:	test   r13b,r13b
   14002a591:	je     0x14002a5b7
   14002a593:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a59a:	jmp    0x14002a5b7
   14002a59c:	call   0x14001b280
   14002a5a1:	test   r13b,r13b
   14002a5a4:	mov    DWORD PTR [rax],0x2a
   14002a5aa:	je     0x14002a5b3
   14002a5ac:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a5b3:	or     rax,0xffffffffffffffff
   14002a5b7:	mov    r13,QWORD PTR [rsp+0x90]
   14002a5bf:	mov    rdi,QWORD PTR [rsp+0x98]
   14002a5c7:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002a5cf:	mov    r15,QWORD PTR [rsp+0x88]
   14002a5d7:	mov    rcx,QWORD PTR [rsp+0x70]
   14002a5dc:	xor    rcx,rsp
   14002a5df:	call   0x140019370
   14002a5e4:	add    rsp,0xa8
   14002a5eb:	pop    r14
   14002a5ed:	pop    r12
   14002a5ef:	pop    rsi
   14002a5f0:	pop    rbp
   14002a5f1:	ret    
   14002a5f2:	int3   
   14002a5f3:	int3   
   14002a5f4:	int3   
   14002a5f5:	int3   
   14002a5f6:	int3   
   14002a5f7:	int3   
   14002a5f8:	int3   
   14002a5f9:	int3   
   14002a5fa:	int3   
   14002a5fb:	int3   
   14002a5fc:	int3   
   14002a5fd:	int3   
   14002a5fe:	int3   
   14002a5ff:	int3   
   14002a600:	mov    QWORD PTR [rsp+0x8],rbx
   14002a605:	mov    QWORD PTR [rsp+0x10],rbp
   14002a60a:	mov    QWORD PTR [rsp+0x18],rsi
   14002a60f:	push   rdi
   14002a610:	sub    rsp,0x30
   14002a614:	xor    esi,esi
   14002a616:	test   rdx,rdx
   14002a619:	mov    rax,r9
   14002a61c:	mov    rdi,r8
   14002a61f:	mov    rbx,rdx
   14002a622:	mov    rbp,rcx
   14002a625:	je     0x14002a66d
   14002a627:	test   r8,r8
   14002a62a:	je     0x14002a672
   14002a62c:	mov    BYTE PTR [rdx],sil
   14002a62f:	test   rcx,rcx
   14002a632:	je     0x14002a637
   14002a634:	mov    QWORD PTR [rcx],rsi
   14002a637:	mov    r8,QWORD PTR [rsp+0x60]
   14002a63c:	mov    r9,QWORD PTR [rsp+0x68]
   14002a641:	mov    rdx,rax
   14002a644:	cmp    r8,rdi
   14002a647:	mov    rcx,rbx
   14002a64a:	cmova  r8,rdi
   14002a64e:	call   0x14002a200
   14002a653:	cmp    rax,0xffffffffffffffff
   14002a657:	jne    0x14002a698
   14002a659:	test   rbx,rbx
   14002a65c:	je     0x14002a661
   14002a65e:	mov    BYTE PTR [rbx],sil
   14002a661:	call   0x14001b280
   14002a666:	mov    eax,DWORD PTR [rax]
   14002a668:	jmp    0x14002a6f4
   14002a66d:	test   r8,r8
   14002a670:	je     0x14002a62f
   14002a672:	call   0x14001b280
   14002a677:	xor    r9d,r9d
   14002a67a:	xor    r8d,r8d
   14002a67d:	xor    edx,edx
   14002a67f:	xor    ecx,ecx
   14002a681:	mov    QWORD PTR [rsp+0x20],rsi
   14002a686:	mov    DWORD PTR [rax],0x16
   14002a68c:	call   0x14001de30
   14002a691:	mov    eax,0x16
   14002a696:	jmp    0x14002a6f4
   14002a698:	add    rax,0x1
   14002a69c:	test   rbx,rbx
   14002a69f:	je     0x14002a6e9
   14002a6a1:	cmp    rax,rdi
   14002a6a4:	jbe    0x14002a6e4
   14002a6a6:	cmp    QWORD PTR [rsp+0x60],0xffffffffffffffff
   14002a6ac:	je     0x14002a6dc
   14002a6ae:	cmp    rdi,rax
   14002a6b1:	mov    BYTE PTR [rbx],sil
   14002a6b4:	ja     0x14002a6dc
   14002a6b6:	call   0x14001b280
   14002a6bb:	xor    r9d,r9d
   14002a6be:	xor    r8d,r8d
   14002a6c1:	xor    edx,edx
   14002a6c3:	xor    ecx,ecx
   14002a6c5:	mov    QWORD PTR [rsp+0x20],rsi
   14002a6ca:	mov    DWORD PTR [rax],0x22
   14002a6d0:	call   0x14001de30
   14002a6d5:	mov    eax,0x22
   14002a6da:	jmp    0x14002a6f4
   14002a6dc:	mov    rax,rdi
   14002a6df:	mov    esi,0x50
   14002a6e4:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14002a6e9:	test   rbp,rbp
   14002a6ec:	je     0x14002a6f2
   14002a6ee:	mov    QWORD PTR [rbp+0x0],rax
   14002a6f2:	mov    eax,esi
   14002a6f4:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a6f9:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a6fe:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a703:	add    rsp,0x30
   14002a707:	pop    rdi
   14002a708:	ret    
   14002a709:	int3   
   14002a70a:	int3   
   14002a70b:	int3   
   14002a70c:	int3   
   14002a70d:	int3   
   14002a70e:	int3   
   14002a70f:	int3   
   14002a710:	sub    rsp,0x38
   14002a714:	mov    rax,QWORD PTR [rsp+0x60]
   14002a719:	mov    QWORD PTR [rsp+0x28],0x0
   14002a722:	mov    QWORD PTR [rsp+0x20],rax
   14002a727:	call   0x14002a600
   14002a72c:	add    rsp,0x38
   14002a730:	ret    
   14002a731:	int3   
   14002a732:	int3   
   14002a733:	int3   
   14002a734:	int3   
   14002a735:	int3   
   14002a736:	int3   
   14002a737:	int3   
   14002a738:	int3   
   14002a739:	int3   
   14002a73a:	int3   
   14002a73b:	int3   
   14002a73c:	int3   
   14002a73d:	int3   
   14002a73e:	int3   
   14002a73f:	int3   
   14002a740:	mov    WORD PTR [rsp+0x20],r9w
   14002a746:	push   rsi
   14002a747:	push   rdi
   14002a748:	push   r12
   14002a74a:	push   r13
   14002a74c:	sub    rsp,0x68
   14002a750:	test   rdx,rdx
   14002a753:	mov    rsi,r8
   14002a756:	mov    r13,rdx
   14002a759:	mov    rdi,rcx
   14002a75c:	jne    0x14002a77b
   14002a75e:	test   r8,r8
   14002a761:	je     0x14002a77b
   14002a763:	test   rcx,rcx
   14002a766:	je     0x14002a76e
   14002a768:	xor    r12d,r12d
   14002a76b:	mov    DWORD PTR [rcx],r12d
   14002a76e:	xor    eax,eax
   14002a770:	add    rsp,0x68
   14002a774:	pop    r13
   14002a776:	pop    r12
   14002a778:	pop    rdi
   14002a779:	pop    rsi
   14002a77a:	ret    
   14002a77b:	test   rcx,rcx
   14002a77e:	je     0x14002a786
   14002a780:	mov    DWORD PTR [rcx],0xffffffff
   14002a786:	cmp    r8,0x7fffffff
   14002a78d:	jbe    0x14002a7c1
   14002a78f:	call   0x14001b280
   14002a794:	xor    r12d,r12d
   14002a797:	xor    r9d,r9d
   14002a79a:	xor    r8d,r8d
   14002a79d:	xor    edx,edx
   14002a79f:	xor    ecx,ecx
   14002a7a1:	mov    DWORD PTR [rax],0x16
   14002a7a7:	mov    QWORD PTR [rsp+0x20],r12
   14002a7ac:	call   0x14001de30
   14002a7b1:	lea    eax,[r12+0x16]
   14002a7b6:	add    rsp,0x68
   14002a7ba:	pop    r13
   14002a7bc:	pop    r12
   14002a7be:	pop    rdi
   14002a7bf:	pop    rsi
   14002a7c0:	ret    
   14002a7c1:	mov    rcx,QWORD PTR [rsp+0xb0]
   14002a7c9:	mov    QWORD PTR [rsp+0x90],rbx
   14002a7d1:	mov    QWORD PTR [rsp+0xa0],rbp
   14002a7d9:	xor    bpl,bpl
   14002a7dc:	test   rcx,rcx
   14002a7df:	mov    QWORD PTR [rsp+0x60],r14
   14002a7e4:	mov    BYTE PTR [rsp+0x58],bpl
   14002a7e9:	jne    0x14002a869
   14002a7eb:	call   0x14001d930
   14002a7f0:	mov    rbx,rax
   14002a7f3:	mov    r14,QWORD PTR [rax+0xc0]
   14002a7fa:	mov    r12,QWORD PTR [rax+0xb8]
   14002a801:	cmp    r14,QWORD PTR [rip+0x16288]        # 0x140040a90
   14002a808:	je     0x14002a820
   14002a80a:	mov    ecx,DWORD PTR [rax+0xc8]
   14002a810:	test   DWORD PTR [rip+0x16102],ecx        # 0x140040918
   14002a816:	jne    0x14002a820
   14002a818:	call   0x14001ed60
   14002a81d:	mov    r14,rax
   14002a820:	cmp    r12,QWORD PTR [rip+0x15fe9]        # 0x140040810
   14002a827:	je     0x14002a83c
   14002a829:	mov    ecx,DWORD PTR [rbx+0xc8]
   14002a82f:	test   DWORD PTR [rip+0x160e3],ecx        # 0x140040918
   14002a835:	jne    0x14002a83c
   14002a837:	call   0x14001e210
   14002a83c:	mov    ecx,DWORD PTR [rbx+0xc8]
   14002a842:	test   cl,0x2
   14002a845:	jne    0x14002a85e
   14002a847:	or     ecx,0x2
   14002a84a:	mov    bpl,0x1
   14002a84d:	mov    DWORD PTR [rbx+0xc8],ecx
   14002a853:	movzx  r9d,WORD PTR [rsp+0xa8]
   14002a85c:	jmp    0x14002a88b
   14002a85e:	mov    r9w,WORD PTR [rsp+0xa8]
   14002a867:	jmp    0x14002a88b
   14002a869:	mov    rax,QWORD PTR [rcx]
   14002a86c:	lea    rdx,[rsp+0x40]
   14002a871:	mov    QWORD PTR [rdx],rax
   14002a874:	mov    rax,QWORD PTR [rcx+0x8]
   14002a878:	mov    QWORD PTR [rdx+0x8],rax
   14002a87c:	movzx  ebp,BYTE PTR [rsp+0x58]
   14002a881:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a886:	mov    r14,QWORD PTR [rsp+0x40]
   14002a88b:	cmp    DWORD PTR [r14+0x14],0x0
   14002a890:	jne    0x14002a8f9
   14002a892:	cmp    r9w,0xff
   14002a898:	jbe    0x14002a8cb
   14002a89a:	test   r13,r13
   14002a89d:	je     0x14002a8b1
   14002a89f:	test   rsi,rsi
   14002a8a2:	je     0x14002a8b1
   14002a8a4:	mov    r8,rsi
   14002a8a7:	xor    edx,edx
   14002a8a9:	mov    rcx,r13
   14002a8ac:	call   0x14001b520
   14002a8b1:	call   0x14001b280
   14002a8b6:	mov    DWORD PTR [rax],0x2a
   14002a8bc:	call   0x14001b280
   14002a8c1:	test   bpl,bpl
   14002a8c4:	mov    eax,DWORD PTR [rax]
   14002a8c6:	jmp    0x14002a9c6
   14002a8cb:	test   r13,r13
   14002a8ce:	je     0x14002a8ec
   14002a8d0:	test   rsi,rsi
   14002a8d3:	jne    0x14002a8e8
   14002a8d5:	call   0x14001b280
   14002a8da:	xor    r12d,r12d
   14002a8dd:	mov    DWORD PTR [rax],0x22
   14002a8e3:	jmp    0x14002a98a
   14002a8e8:	mov    BYTE PTR [r13+0x0],r9b
   14002a8ec:	test   rdi,rdi
   14002a8ef:	je     0x14002a94d
   14002a8f1:	mov    DWORD PTR [rdi],0x1
   14002a8f7:	jmp    0x14002a94d
   14002a8f9:	mov    ecx,DWORD PTR [r14+0x4]
   14002a8fd:	xor    r12d,r12d
   14002a900:	lea    rax,[rsp+0x98]
   14002a908:	mov    QWORD PTR [rsp+0x38],rax
   14002a90d:	mov    QWORD PTR [rsp+0x30],r12
   14002a912:	lea    r8,[rsp+0xa8]
   14002a91a:	lea    r9d,[r12+0x1]
   14002a91f:	xor    edx,edx
   14002a921:	mov    DWORD PTR [rsp+0x28],esi
   14002a925:	mov    QWORD PTR [rsp+0x20],r13
   14002a92a:	mov    DWORD PTR [rsp+0x98],r12d
   14002a932:	call   QWORD PTR [rip+0x6ac0]        # 0x1400313f8
   14002a938:	test   eax,eax
   14002a93a:	je     0x14002a95d
   14002a93c:	cmp    DWORD PTR [rsp+0x98],r12d
   14002a944:	jne    0x14002a9b1
   14002a946:	test   rdi,rdi
   14002a949:	je     0x14002a94d
   14002a94b:	mov    DWORD PTR [rdi],eax
   14002a94d:	test   bpl,bpl
   14002a950:	je     0x14002a959
   14002a952:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a959:	xor    eax,eax
   14002a95b:	jmp    0x14002a9cf
   14002a95d:	call   QWORD PTR [rip+0x6b15]        # 0x140031478
   14002a963:	cmp    eax,0x7a
   14002a966:	jne    0x14002a9b1
   14002a968:	test   r13,r13
   14002a96b:	je     0x14002a97f
   14002a96d:	test   rsi,rsi
   14002a970:	je     0x14002a97f
   14002a972:	mov    r8,rsi
   14002a975:	xor    edx,edx
   14002a977:	mov    rcx,r13
   14002a97a:	call   0x14001b520
   14002a97f:	call   0x14001b280
   14002a984:	mov    DWORD PTR [rax],0x22
   14002a98a:	xor    r9d,r9d
   14002a98d:	xor    r8d,r8d
   14002a990:	xor    edx,edx
   14002a992:	xor    ecx,ecx
   14002a994:	mov    QWORD PTR [rsp+0x20],r12
   14002a999:	call   0x14001de30
   14002a99e:	test   bpl,bpl
   14002a9a1:	je     0x14002a9aa
   14002a9a3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a9aa:	mov    eax,0x22
   14002a9af:	jmp    0x14002a9cf
   14002a9b1:	call   0x14001b280
   14002a9b6:	mov    DWORD PTR [rax],0x2a
   14002a9bc:	call   0x14001b280
   14002a9c1:	test   bpl,bpl
   14002a9c4:	mov    eax,DWORD PTR [rax]
   14002a9c6:	je     0x14002a9cf
   14002a9c8:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14002a9cf:	mov    rbp,QWORD PTR [rsp+0xa0]
   14002a9d7:	mov    rbx,QWORD PTR [rsp+0x90]
   14002a9df:	mov    r14,QWORD PTR [rsp+0x60]
   14002a9e4:	add    rsp,0x68
   14002a9e8:	pop    r13
   14002a9ea:	pop    r12
   14002a9ec:	pop    rdi
   14002a9ed:	pop    rsi
   14002a9ee:	ret    
   14002a9ef:	int3   
   14002a9f0:	sub    rsp,0x38
   14002a9f4:	mov    QWORD PTR [rsp+0x20],0x0
   14002a9fd:	call   0x14002a740
   14002aa02:	add    rsp,0x38
   14002aa06:	ret    
   14002aa07:	int3   
   14002aa08:	int3   
   14002aa09:	int3   
   14002aa0a:	int3   
   14002aa0b:	int3   
   14002aa0c:	int3   
   14002aa0d:	int3   
   14002aa0e:	int3   
   14002aa0f:	int3   
   14002aa10:	xor    edx,edx
   14002aa12:	lea    r8d,[rdx+0xa]
   14002aa16:	jmp    0x14002bf20
   14002aa1b:	int3   
   14002aa1c:	int3   
   14002aa1d:	int3   
   14002aa1e:	int3   
   14002aa1f:	int3   
   14002aa20:	mov    r8,rcx
   14002aa23:	movzx  eax,BYTE PTR [rcx]
   14002aa26:	add    rcx,0x1
   14002aa2a:	test   al,al
   14002aa2c:	jne    0x14002aa23
   14002aa2e:	xchg   ax,ax
   14002aa30:	sub    rcx,0x1
   14002aa34:	cmp    rcx,r8
   14002aa37:	je     0x14002aa41
   14002aa39:	cmp    BYTE PTR [rcx],dl
   14002aa3b:	jne    0x14002aa30
   14002aa3d:	mov    rax,rcx
   14002aa40:	ret    
   14002aa41:	cmp    BYTE PTR [rcx],dl
   14002aa43:	jne    0x14002aa49
   14002aa45:	mov    rax,rcx
   14002aa48:	ret    
   14002aa49:	xor    eax,eax
   14002aa4b:	ret    
   14002aa4c:	int3   
   14002aa4d:	int3   
   14002aa4e:	int3   
   14002aa4f:	int3   
   14002aa50:	rex push rbx
   14002aa52:	sub    rsp,0x70
   14002aa56:	test   rdx,rdx
   14002aa59:	movsxd rbx,ecx
   14002aa5c:	mov    BYTE PTR [rsp+0x68],0x0
   14002aa61:	jne    0x14002ab0a
   14002aa67:	call   0x14001d930
   14002aa6c:	mov    QWORD PTR [rsp+0x60],rax
   14002aa71:	mov    r11,rax
   14002aa74:	mov    rdx,QWORD PTR [rax+0xc0]
   14002aa7b:	cmp    rdx,QWORD PTR [rip+0x1600e]        # 0x140040a90
   14002aa82:	mov    QWORD PTR [rsp+0x50],rdx
   14002aa87:	mov    rax,QWORD PTR [rax+0xb8]
   14002aa8e:	mov    QWORD PTR [rsp+0x58],rax
   14002aa93:	je     0x14002aabb
   14002aa95:	mov    ecx,DWORD PTR [r11+0xc8]
   14002aa9c:	test   DWORD PTR [rip+0x15e76],ecx        # 0x140040918
   14002aaa2:	jne    0x14002aabb
   14002aaa4:	call   0x14001ed60
   14002aaa9:	mov    r11,QWORD PTR [rsp+0x60]
   14002aaae:	mov    rdx,rax
   14002aab1:	mov    QWORD PTR [rsp+0x50],rax
   14002aab6:	mov    rax,QWORD PTR [rsp+0x58]
   14002aabb:	cmp    rax,QWORD PTR [rip+0x15d4e]        # 0x140040810
   14002aac2:	je     0x14002aae7
   14002aac4:	mov    ecx,DWORD PTR [r11+0xc8]
   14002aacb:	test   DWORD PTR [rip+0x15e47],ecx        # 0x140040918
   14002aad1:	jne    0x14002aae7
   14002aad3:	call   0x14001e210
   14002aad8:	mov    r11,QWORD PTR [rsp+0x60]
   14002aadd:	mov    rdx,QWORD PTR [rsp+0x50]
   14002aae2:	mov    QWORD PTR [rsp+0x58],rax
   14002aae7:	test   BYTE PTR [r11+0xc8],0x2
   14002aaef:	jne    0x14002ab27
   14002aaf1:	or     DWORD PTR [r11+0xc8],0x2
   14002aaf9:	mov    r11,QWORD PTR [rsp+0x60]
   14002aafe:	mov    rdx,QWORD PTR [rsp+0x50]
   14002ab03:	mov    BYTE PTR [rsp+0x68],0x1
   14002ab08:	jmp    0x14002ab27
   14002ab0a:	mov    rax,QWORD PTR [rdx]
   14002ab0d:	lea    rcx,[rsp+0x50]
   14002ab12:	mov    QWORD PTR [rcx],rax
   14002ab15:	mov    rax,QWORD PTR [rdx+0x8]
   14002ab19:	mov    QWORD PTR [rcx+0x8],rax
   14002ab1d:	mov    r11,QWORD PTR [rsp+0x60]
   14002ab22:	mov    rdx,QWORD PTR [rsp+0x50]
   14002ab27:	cmp    ebx,0x100
   14002ab2d:	jae    0x14002aba1
   14002ab2f:	cmp    DWORD PTR [rdx+0x10c],0x1
   14002ab36:	jle    0x14002ab55
   14002ab38:	lea    r8,[rsp+0x50]
   14002ab3d:	mov    edx,0x1
   14002ab42:	mov    ecx,ebx
   14002ab44:	call   0x14002bf60
   14002ab49:	mov    r11,QWORD PTR [rsp+0x60]
   14002ab4e:	mov    rdx,QWORD PTR [rsp+0x50]
   14002ab53:	jmp    0x14002ab62
   14002ab55:	mov    rax,QWORD PTR [rdx+0x140]
   14002ab5c:	mov    al,BYTE PTR [rax+rbx*2]
   14002ab5f:	and    eax,0x1
   14002ab62:	test   eax,eax
   14002ab64:	je     0x14002ab8a
   14002ab66:	cmp    BYTE PTR [rsp+0x68],0x0
   14002ab6b:	mov    rax,QWORD PTR [rdx+0x148]
   14002ab72:	movzx  eax,BYTE PTR [rax+rbx*1]
   14002ab76:	je     0x14002acb0
   14002ab7c:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14002ab84:	add    rsp,0x70
   14002ab88:	pop    rbx
   14002ab89:	ret    
   14002ab8a:	cmp    BYTE PTR [rsp+0x68],0x0
   14002ab8f:	je     0x14002ab99
   14002ab91:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14002ab99:	mov    eax,ebx
   14002ab9b:	add    rsp,0x70
   14002ab9f:	pop    rbx
   14002aba0:	ret    
   14002aba1:	cmp    DWORD PTR [rdx+0x10c],0x1
   14002aba8:	mov    QWORD PTR [rsp+0x90],rdi
   14002abb0:	jle    0x14002abe7
   14002abb2:	mov    edi,ebx
   14002abb4:	lea    rdx,[rsp+0x50]
   14002abb9:	sar    edi,0x8
   14002abbc:	movzx  ecx,dil
   14002abc0:	call   0x140019e20
   14002abc5:	test   eax,eax
   14002abc7:	je     0x14002abe7
   14002abc9:	mov    BYTE PTR [rsp+0x80],dil
   14002abd1:	mov    BYTE PTR [rsp+0x81],bl
   14002abd8:	mov    BYTE PTR [rsp+0x82],0x0
   14002abe0:	mov    edx,0x2
   14002abe5:	jmp    0x14002ac06
   14002abe7:	call   0x14001b280
   14002abec:	mov    edx,0x1
   14002abf1:	mov    DWORD PTR [rax],0x2a
   14002abf7:	mov    BYTE PTR [rsp+0x80],bl
   14002abfe:	mov    BYTE PTR [rsp+0x81],0x0
   14002ac06:	mov    rcx,QWORD PTR [rsp+0x50]
   14002ac0b:	mov    DWORD PTR [rsp+0x40],0x1
   14002ac13:	lea    r9,[rsp+0x80]
   14002ac1b:	mov    eax,DWORD PTR [rcx+0x4]
   14002ac1e:	mov    r8d,0x100
   14002ac24:	mov    DWORD PTR [rsp+0x38],eax
   14002ac28:	lea    rax,[rsp+0x88]
   14002ac30:	mov    DWORD PTR [rsp+0x30],0x3
   14002ac38:	mov    QWORD PTR [rsp+0x28],rax
   14002ac3d:	mov    DWORD PTR [rsp+0x20],edx
   14002ac41:	mov    edx,DWORD PTR [rcx+0x14]
   14002ac44:	lea    rcx,[rsp+0x50]
   14002ac49:	call   0x1400275d0
   14002ac4e:	mov    rdi,QWORD PTR [rsp+0x90]
   14002ac56:	test   eax,eax
   14002ac58:	jne    0x14002ac74
   14002ac5a:	cmp    BYTE PTR [rsp+0x68],al
   14002ac5e:	je     0x14002ac6c
   14002ac60:	mov    rax,QWORD PTR [rsp+0x60]
   14002ac65:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ac6c:	mov    eax,ebx
   14002ac6e:	add    rsp,0x70
   14002ac72:	pop    rbx
   14002ac73:	ret    
   14002ac74:	cmp    eax,0x1
   14002ac77:	jne    0x14002ac88
   14002ac79:	movzx  eax,BYTE PTR [rsp+0x88]
   14002ac81:	cmp    BYTE PTR [rsp+0x68],0x0
   14002ac86:	jmp    0x14002aca2
   14002ac88:	movzx  eax,BYTE PTR [rsp+0x88]
   14002ac90:	movzx  ecx,BYTE PTR [rsp+0x89]
   14002ac98:	shl    eax,0x8
   14002ac9b:	or     eax,ecx
   14002ac9d:	cmp    BYTE PTR [rsp+0x68],0x0
   14002aca2:	je     0x14002acb0
   14002aca4:	mov    rcx,QWORD PTR [rsp+0x60]
   14002aca9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002acb0:	add    rsp,0x70
   14002acb4:	pop    rbx
   14002acb5:	ret    
   14002acb6:	int3   
   14002acb7:	int3   
   14002acb8:	int3   
   14002acb9:	int3   
   14002acba:	int3   
   14002acbb:	int3   
   14002acbc:	int3   
   14002acbd:	int3   
   14002acbe:	int3   
   14002acbf:	int3   
   14002acc0:	cmp    DWORD PTR [rip+0x1ade1],0x0        # 0x140045aa8
   14002acc7:	jne    0x14002acd7
   14002acc9:	lea    eax,[rcx-0x41]
   14002accc:	cmp    eax,0x19
   14002accf:	ja     0x14002acd4
   14002acd1:	add    ecx,0x20
   14002acd4:	mov    eax,ecx
   14002acd6:	ret    
   14002acd7:	xor    edx,edx
   14002acd9:	jmp    0x14002aa50
   14002acde:	int3   
   14002acdf:	int3   
   14002ace0:	mov    QWORD PTR [rsp+0x20],rbx
   14002ace5:	push   rdi
   14002ace6:	sub    rsp,0x80
   14002aced:	mov    rax,QWORD PTR [rip+0x152dc]        # 0x14003ffd0
   14002acf4:	xor    rax,rsp
   14002acf7:	mov    QWORD PTR [rsp+0x78],rax
   14002acfc:	test   r8,r8
   14002acff:	mov    rbx,rdx
   14002ad02:	mov    rdi,rcx
   14002ad05:	mov    BYTE PTR [rsp+0x58],0x0
   14002ad0a:	jne    0x14002ada1
   14002ad10:	call   0x14001d930
   14002ad15:	mov    QWORD PTR [rsp+0x50],rax
   14002ad1a:	mov    r11,rax
   14002ad1d:	mov    rcx,QWORD PTR [rax+0xc0]
   14002ad24:	cmp    rcx,QWORD PTR [rip+0x15d65]        # 0x140040a90
   14002ad2b:	mov    QWORD PTR [rsp+0x40],rcx
   14002ad30:	mov    rax,QWORD PTR [rax+0xb8]
   14002ad37:	mov    QWORD PTR [rsp+0x48],rax
   14002ad3c:	je     0x14002ad61
   14002ad3e:	mov    ecx,DWORD PTR [r11+0xc8]
   14002ad45:	test   DWORD PTR [rip+0x15bcd],ecx        # 0x140040918
   14002ad4b:	jne    0x14002ad61
   14002ad4d:	call   0x14001ed60
   14002ad52:	mov    r11,QWORD PTR [rsp+0x50]
   14002ad57:	mov    QWORD PTR [rsp+0x40],rax
   14002ad5c:	mov    rax,QWORD PTR [rsp+0x48]
   14002ad61:	cmp    rax,QWORD PTR [rip+0x15aa8]        # 0x140040810
   14002ad68:	je     0x14002ad88
   14002ad6a:	mov    eax,DWORD PTR [r11+0xc8]
   14002ad71:	test   DWORD PTR [rip+0x15ba1],eax        # 0x140040918
   14002ad77:	jne    0x14002ad88
   14002ad79:	call   0x14001e210
   14002ad7e:	mov    r11,QWORD PTR [rsp+0x50]
   14002ad83:	mov    QWORD PTR [rsp+0x48],rax
   14002ad88:	test   BYTE PTR [r11+0xc8],0x2
   14002ad90:	jne    0x14002adb4
   14002ad92:	or     DWORD PTR [r11+0xc8],0x2
   14002ad9a:	mov    BYTE PTR [rsp+0x58],0x1
   14002ad9f:	jmp    0x14002adb4
   14002ada1:	mov    rax,QWORD PTR [r8]
   14002ada4:	lea    rcx,[rsp+0x40]
   14002ada9:	mov    QWORD PTR [rcx],rax
   14002adac:	mov    rax,QWORD PTR [r8+0x8]
   14002adb0:	mov    QWORD PTR [rcx+0x8],rax
   14002adb4:	lea    rax,[rsp+0x40]
   14002adb9:	lea    rdx,[rsp+0x60]
   14002adbe:	lea    rcx,[rsp+0x68]
   14002adc3:	mov    QWORD PTR [rsp+0x38],rax
   14002adc8:	xor    eax,eax
   14002adca:	xor    r9d,r9d
   14002adcd:	mov    DWORD PTR [rsp+0x30],eax
   14002add1:	mov    DWORD PTR [rsp+0x28],eax
   14002add5:	mov    r8,rbx
   14002add8:	mov    DWORD PTR [rsp+0x20],eax
   14002addc:	call   0x14002d400
   14002ade1:	lea    rcx,[rsp+0x68]
   14002ade6:	mov    rdx,rdi
   14002ade9:	mov    ebx,eax
   14002adeb:	call   0x14002c680
   14002adf0:	test   bl,0x3
   14002adf3:	jne    0x14002ae33
   14002adf5:	cmp    eax,0x1
   14002adf8:	jne    0x14002ae14
   14002adfa:	cmp    BYTE PTR [rsp+0x58],0x0
   14002adff:	je     0x14002ae0d
   14002ae01:	mov    rax,QWORD PTR [rsp+0x50]
   14002ae06:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ae0d:	mov    eax,0x3
   14002ae12:	jmp    0x14002ae52
   14002ae14:	cmp    eax,0x2
   14002ae17:	jne    0x14002ae3d
   14002ae19:	cmp    BYTE PTR [rsp+0x58],0x0
   14002ae1e:	je     0x14002ae2c
   14002ae20:	mov    rax,QWORD PTR [rsp+0x50]
   14002ae25:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ae2c:	mov    eax,0x4
   14002ae31:	jmp    0x14002ae52
   14002ae33:	test   bl,0x1
   14002ae36:	jne    0x14002ae19
   14002ae38:	test   bl,0x2
   14002ae3b:	jne    0x14002adfa
   14002ae3d:	cmp    BYTE PTR [rsp+0x58],0x0
   14002ae42:	je     0x14002ae50
   14002ae44:	mov    rax,QWORD PTR [rsp+0x50]
   14002ae49:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ae50:	xor    eax,eax
   14002ae52:	mov    rcx,QWORD PTR [rsp+0x78]
   14002ae57:	xor    rcx,rsp
   14002ae5a:	call   0x140019370
   14002ae5f:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002ae67:	add    rsp,0x80
   14002ae6e:	pop    rdi
   14002ae6f:	ret    
   14002ae70:	mov    QWORD PTR [rsp+0x20],rbx
   14002ae75:	push   rdi
   14002ae76:	sub    rsp,0x80
   14002ae7d:	mov    rax,QWORD PTR [rip+0x1514c]        # 0x14003ffd0
   14002ae84:	xor    rax,rsp
   14002ae87:	mov    QWORD PTR [rsp+0x78],rax
   14002ae8c:	test   r8,r8
   14002ae8f:	mov    rbx,rdx
   14002ae92:	mov    rdi,rcx
   14002ae95:	mov    BYTE PTR [rsp+0x58],0x0
   14002ae9a:	jne    0x14002af31
   14002aea0:	call   0x14001d930
   14002aea5:	mov    QWORD PTR [rsp+0x50],rax
   14002aeaa:	mov    r11,rax
   14002aead:	mov    rcx,QWORD PTR [rax+0xc0]
   14002aeb4:	cmp    rcx,QWORD PTR [rip+0x15bd5]        # 0x140040a90
   14002aebb:	mov    QWORD PTR [rsp+0x40],rcx
   14002aec0:	mov    rax,QWORD PTR [rax+0xb8]
   14002aec7:	mov    QWORD PTR [rsp+0x48],rax
   14002aecc:	je     0x14002aef1
   14002aece:	mov    ecx,DWORD PTR [r11+0xc8]
   14002aed5:	test   DWORD PTR [rip+0x15a3d],ecx        # 0x140040918
   14002aedb:	jne    0x14002aef1
   14002aedd:	call   0x14001ed60
   14002aee2:	mov    r11,QWORD PTR [rsp+0x50]
   14002aee7:	mov    QWORD PTR [rsp+0x40],rax
   14002aeec:	mov    rax,QWORD PTR [rsp+0x48]
   14002aef1:	cmp    rax,QWORD PTR [rip+0x15918]        # 0x140040810
   14002aef8:	je     0x14002af18
   14002aefa:	mov    eax,DWORD PTR [r11+0xc8]
   14002af01:	test   DWORD PTR [rip+0x15a11],eax        # 0x140040918
   14002af07:	jne    0x14002af18
   14002af09:	call   0x14001e210
   14002af0e:	mov    r11,QWORD PTR [rsp+0x50]
   14002af13:	mov    QWORD PTR [rsp+0x48],rax
   14002af18:	test   BYTE PTR [r11+0xc8],0x2
   14002af20:	jne    0x14002af44
   14002af22:	or     DWORD PTR [r11+0xc8],0x2
   14002af2a:	mov    BYTE PTR [rsp+0x58],0x1
   14002af2f:	jmp    0x14002af44
   14002af31:	mov    rax,QWORD PTR [r8]
   14002af34:	lea    rcx,[rsp+0x40]
   14002af39:	mov    QWORD PTR [rcx],rax
   14002af3c:	mov    rax,QWORD PTR [r8+0x8]
   14002af40:	mov    QWORD PTR [rcx+0x8],rax
   14002af44:	lea    rax,[rsp+0x40]
   14002af49:	lea    rdx,[rsp+0x60]
   14002af4e:	lea    rcx,[rsp+0x68]
   14002af53:	mov    QWORD PTR [rsp+0x38],rax
   14002af58:	xor    eax,eax
   14002af5a:	xor    r9d,r9d
   14002af5d:	mov    DWORD PTR [rsp+0x30],eax
   14002af61:	mov    DWORD PTR [rsp+0x28],eax
   14002af65:	mov    r8,rbx
   14002af68:	mov    DWORD PTR [rsp+0x20],eax
   14002af6c:	call   0x14002d400
   14002af71:	lea    rcx,[rsp+0x68]
   14002af76:	mov    rdx,rdi
   14002af79:	mov    ebx,eax
   14002af7b:	call   0x14002cd40
   14002af80:	test   bl,0x3
   14002af83:	jne    0x14002afc3
   14002af85:	cmp    eax,0x1
   14002af88:	jne    0x14002afa4
   14002af8a:	cmp    BYTE PTR [rsp+0x58],0x0
   14002af8f:	je     0x14002af9d
   14002af91:	mov    rax,QWORD PTR [rsp+0x50]
   14002af96:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002af9d:	mov    eax,0x3
   14002afa2:	jmp    0x14002afe2
   14002afa4:	cmp    eax,0x2
   14002afa7:	jne    0x14002afcd
   14002afa9:	cmp    BYTE PTR [rsp+0x58],0x0
   14002afae:	je     0x14002afbc
   14002afb0:	mov    rax,QWORD PTR [rsp+0x50]
   14002afb5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002afbc:	mov    eax,0x4
   14002afc1:	jmp    0x14002afe2
   14002afc3:	test   bl,0x1
   14002afc6:	jne    0x14002afa9
   14002afc8:	test   bl,0x2
   14002afcb:	jne    0x14002af8a
   14002afcd:	cmp    BYTE PTR [rsp+0x58],0x0
   14002afd2:	je     0x14002afe0
   14002afd4:	mov    rax,QWORD PTR [rsp+0x50]
   14002afd9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002afe0:	xor    eax,eax
   14002afe2:	mov    rcx,QWORD PTR [rsp+0x78]
   14002afe7:	xor    rcx,rsp
   14002afea:	call   0x140019370
   14002afef:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002aff7:	add    rsp,0x80
   14002affe:	pop    rdi
   14002afff:	ret    
   14002b000:	rex push rdi
   14002b002:	sub    rsp,0x30
   14002b006:	test   rcx,rcx
   14002b009:	mov    rdi,QWORD PTR [r9+0x10]
   14002b00d:	mov    r10,rcx
   14002b010:	jne    0x14002b040
   14002b012:	call   0x14001b280
   14002b017:	xor    r9d,r9d
   14002b01a:	xor    r8d,r8d
   14002b01d:	xor    edx,edx
   14002b01f:	xor    ecx,ecx
   14002b021:	mov    QWORD PTR [rsp+0x20],0x0
   14002b02a:	mov    DWORD PTR [rax],0x16
   14002b030:	call   0x14001de30
   14002b035:	mov    eax,0x16
   14002b03a:	add    rsp,0x30
   14002b03e:	pop    rdi
   14002b03f:	ret    
   14002b040:	test   rdx,rdx
   14002b043:	je     0x14002b012
   14002b045:	xor    eax,eax
   14002b047:	test   r8d,r8d
   14002b04a:	mov    BYTE PTR [rcx],0x0
   14002b04d:	cmovg  eax,r8d
   14002b051:	add    eax,0x1
   14002b054:	cdqe   
   14002b056:	cmp    rdx,rax
   14002b059:	ja     0x14002b089
   14002b05b:	call   0x14001b280
   14002b060:	xor    r9d,r9d
   14002b063:	xor    r8d,r8d
   14002b066:	xor    edx,edx
   14002b068:	xor    ecx,ecx
   14002b06a:	mov    QWORD PTR [rsp+0x20],0x0
   14002b073:	mov    DWORD PTR [rax],0x22
   14002b079:	call   0x14001de30
   14002b07e:	mov    eax,0x22
   14002b083:	add    rsp,0x30
   14002b087:	pop    rdi
   14002b088:	ret    
   14002b089:	test   r8d,r8d
   14002b08c:	mov    BYTE PTR [rcx],0x30
   14002b08f:	lea    rax,[rcx+0x1]
   14002b093:	jle    0x14002b0b9
   14002b095:	movzx  ecx,BYTE PTR [rdi]
   14002b098:	test   cl,cl
   14002b09a:	je     0x14002b0a5
   14002b09c:	movsx  edx,cl
   14002b09f:	add    rdi,0x1
   14002b0a3:	jmp    0x14002b0aa
   14002b0a5:	mov    edx,0x30
   14002b0aa:	sub    r8d,0x1
   14002b0ae:	mov    BYTE PTR [rax],dl
   14002b0b0:	add    rax,0x1
   14002b0b4:	test   r8d,r8d
   14002b0b7:	jg     0x14002b095
   14002b0b9:	test   r8d,r8d
   14002b0bc:	mov    BYTE PTR [rax],0x0
   14002b0bf:	js     0x14002b0df
   14002b0c1:	cmp    BYTE PTR [rdi],0x35
   14002b0c4:	jl     0x14002b0df
   14002b0c6:	sub    rax,0x1
   14002b0ca:	cmp    BYTE PTR [rax],0x39
   14002b0cd:	jne    0x14002b0dc
   14002b0cf:	nop
   14002b0d0:	mov    BYTE PTR [rax],0x30
   14002b0d3:	sub    rax,0x1
   14002b0d7:	cmp    BYTE PTR [rax],0x39
   14002b0da:	je     0x14002b0d0
   14002b0dc:	add    BYTE PTR [rax],0x1
   14002b0df:	cmp    BYTE PTR [r10],0x31
   14002b0e3:	jne    0x14002b0f2
   14002b0e5:	add    DWORD PTR [r9+0x4],0x1
   14002b0ea:	xor    eax,eax
   14002b0ec:	add    rsp,0x30
   14002b0f0:	pop    rdi
   14002b0f1:	ret    
   14002b0f2:	or     rcx,0xffffffffffffffff
   14002b0f6:	lea    rdi,[r10+0x1]
   14002b0fa:	xor    eax,eax
   14002b0fc:	repnz scas al,BYTE PTR es:[rdi]
   14002b0fe:	lea    rdx,[r10+0x1]
   14002b102:	not    rcx
   14002b105:	mov    r8,rcx
   14002b108:	mov    rcx,r10
   14002b10b:	call   0x14001baf0
   14002b110:	xor    eax,eax
   14002b112:	add    rsp,0x30
   14002b116:	pop    rdi
   14002b117:	ret    
   14002b118:	int3   
   14002b119:	int3   
   14002b11a:	int3   
   14002b11b:	int3   
   14002b11c:	int3   
   14002b11d:	int3   
   14002b11e:	int3   
   14002b11f:	int3   
   14002b120:	rex push rbx
   14002b122:	push   rbp
   14002b123:	push   rsi
   14002b124:	sub    rsp,0x80
   14002b12b:	mov    rax,QWORD PTR [rip+0x14e9e]        # 0x14003ffd0
   14002b132:	xor    rax,rsp
   14002b135:	mov    QWORD PTR [rsp+0x70],rax
   14002b13a:	mov    rbp,r9
   14002b13d:	mov    rsi,r8
   14002b140:	mov    r9,rcx
   14002b143:	shr    r9,0x30
   14002b147:	mov    rax,rcx
   14002b14a:	mov    rbx,rdx
   14002b14d:	movzx  r8d,r9w
   14002b151:	shr    rax,0x20
   14002b155:	and    r9w,0x8000
   14002b15b:	shr    r8w,0x4
   14002b160:	and    eax,0xfffff
   14002b165:	mov    r10d,0x80000000
   14002b16b:	and    r8w,0x7ff
   14002b171:	movzx  edx,r8w
   14002b175:	test   edx,edx
   14002b177:	je     0x14002b190
   14002b179:	cmp    edx,0x7ff
   14002b17f:	je     0x14002b189
   14002b181:	add    r8w,0x3c00
   14002b187:	jmp    0x14002b1ab
   14002b189:	mov    r8w,0x7fff
   14002b18e:	jmp    0x14002b1ab
   14002b190:	test   eax,eax
   14002b192:	jne    0x14002b1a2
   14002b194:	test   ecx,ecx
   14002b196:	jne    0x14002b1a2
   14002b198:	mov    DWORD PTR [rsp+0x44],ecx
   14002b19c:	mov    DWORD PTR [rsp+0x40],ecx
   14002b1a0:	jmp    0x14002b1f3
   14002b1a2:	add    r8w,0x3c01
   14002b1a8:	xor    r10d,r10d
   14002b1ab:	mov    edx,ecx
   14002b1ad:	shl    eax,0xb
   14002b1b0:	shl    ecx,0xb
   14002b1b3:	shr    edx,0x15
   14002b1b6:	mov    DWORD PTR [rsp+0x40],ecx
   14002b1ba:	or     edx,eax
   14002b1bc:	or     edx,r10d
   14002b1bf:	bt     edx,0x1f
   14002b1c3:	mov    DWORD PTR [rsp+0x44],edx
   14002b1c7:	jb     0x14002b1ef
   14002b1c9:	data16 xchg ax,ax
   14002b1cc:	data16 data16 xchg ax,ax
   14002b1d0:	mov    eax,ecx
   14002b1d2:	add    edx,edx
   14002b1d4:	add    ecx,ecx
   14002b1d6:	shr    eax,0x1f
   14002b1d9:	add    r8w,0xffff
   14002b1df:	mov    DWORD PTR [rsp+0x40],ecx
   14002b1e3:	or     edx,eax
   14002b1e5:	bt     edx,0x1f
   14002b1e9:	jae    0x14002b1d0
   14002b1eb:	mov    DWORD PTR [rsp+0x44],edx
   14002b1ef:	or     r9w,r8w
   14002b1f3:	mov    WORD PTR [rsp+0x48],r9w
   14002b1f9:	lea    rdx,[rsp+0x30]
   14002b1fe:	lea    rcx,[rsp+0x40]
   14002b203:	mov    rax,QWORD PTR [rcx]
   14002b206:	xor    r8d,r8d
   14002b209:	lea    r9,[rsp+0x50]
   14002b20e:	mov    QWORD PTR [rdx],rax
   14002b211:	movzx  eax,WORD PTR [rcx+0x8]
   14002b215:	lea    rcx,[rsp+0x30]
   14002b21a:	mov    WORD PTR [rdx+0x8],ax
   14002b21e:	lea    edx,[r8+0x11]
   14002b222:	call   0x14002de30
   14002b227:	lea    r8,[rsp+0x54]
   14002b22c:	mov    rdx,rbp
   14002b22f:	mov    DWORD PTR [rbx+0x8],eax
   14002b232:	movsx  eax,BYTE PTR [rsp+0x52]
   14002b237:	mov    rcx,rsi
   14002b23a:	mov    DWORD PTR [rbx],eax
   14002b23c:	movsx  eax,WORD PTR [rsp+0x50]
   14002b241:	mov    DWORD PTR [rbx+0x4],eax
   14002b244:	call   0x140026f70
   14002b249:	test   eax,eax
   14002b24b:	je     0x14002b265
   14002b24d:	xor    r9d,r9d
   14002b250:	xor    r8d,r8d
   14002b253:	xor    edx,edx
   14002b255:	xor    ecx,ecx
   14002b257:	mov    QWORD PTR [rsp+0x20],0x0
   14002b260:	call   0x14001dd90
   14002b265:	mov    rax,rbx
   14002b268:	mov    QWORD PTR [rbx+0x10],rsi
   14002b26c:	mov    rcx,QWORD PTR [rsp+0x70]
   14002b271:	xor    rcx,rsp
   14002b274:	call   0x140019370
   14002b279:	add    rsp,0x80
   14002b280:	pop    rsi
   14002b281:	pop    rbp
   14002b282:	pop    rbx
   14002b283:	ret    
   14002b284:	int3   
   14002b285:	int3   
   14002b286:	int3   
   14002b287:	int3   
   14002b288:	int3   
   14002b289:	int3   
   14002b28a:	int3   
   14002b28b:	int3   
   14002b28c:	int3   
   14002b28d:	int3   
   14002b28e:	int3   
   14002b28f:	int3   
   14002b290:	mov    QWORD PTR [rsp+0x8],rbx
   14002b295:	mov    QWORD PTR [rsp+0x10],rsi
   14002b29a:	push   rdi
   14002b29b:	sub    rsp,0x20
   14002b29f:	test   ecx,ecx
   14002b2a1:	js     0x14002b32c
   14002b2a7:	cmp    ecx,DWORD PTR [rip+0x1c49b]        # 0x140047748
   14002b2ad:	jae    0x14002b32c
   14002b2af:	movsxd rax,ecx
   14002b2b2:	lea    rsi,[rip+0x1c4a7]        # 0x140047760
   14002b2b9:	mov    rdi,rax
   14002b2bc:	and    eax,0x1f
   14002b2bf:	sar    rdi,0x5
   14002b2c3:	lea    rbx,[rax+rax*4]
   14002b2c7:	mov    rax,QWORD PTR [rsi+rdi*8]
   14002b2cb:	add    rbx,rbx
   14002b2ce:	test   BYTE PTR [rax+rbx*8+0x8],0x1
   14002b2d3:	je     0x14002b32c
   14002b2d5:	cmp    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14002b2da:	je     0x14002b32c
   14002b2dc:	cmp    DWORD PTR [rip+0x14cb5],0x1        # 0x14003ff98
   14002b2e3:	jne    0x14002b30e
   14002b2e5:	test   ecx,ecx
   14002b2e7:	je     0x14002b301
   14002b2e9:	sub    ecx,0x1
   14002b2ec:	je     0x14002b2fa
   14002b2ee:	cmp    ecx,0x1
   14002b2f1:	jne    0x14002b30e
   14002b2f3:	mov    ecx,0xfffffff4
   14002b2f8:	jmp    0x14002b306
   14002b2fa:	mov    ecx,0xfffffff5
   14002b2ff:	jmp    0x14002b306
   14002b301:	mov    ecx,0xfffffff6
   14002b306:	xor    edx,edx
   14002b308:	call   QWORD PTR [rip+0x5f82]        # 0x140031290
   14002b30e:	mov    rax,QWORD PTR [rsi+rdi*8]
   14002b312:	mov    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14002b31a:	xor    eax,eax
   14002b31c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b321:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b326:	add    rsp,0x20
   14002b32a:	pop    rdi
   14002b32b:	ret    
   14002b32c:	call   0x14001b280
   14002b331:	mov    DWORD PTR [rax],0x9
   14002b337:	call   0x14001b2b0
   14002b33c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b341:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b346:	mov    DWORD PTR [rax],0x0
   14002b34c:	or     eax,0xffffffff
   14002b34f:	add    rsp,0x20
   14002b353:	pop    rdi
   14002b354:	ret    
   14002b355:	int3   
   14002b356:	int3   
   14002b357:	int3   
   14002b358:	int3   
   14002b359:	int3   
   14002b35a:	int3   
   14002b35b:	int3   
   14002b35c:	int3   
   14002b35d:	int3   
   14002b35e:	int3   
   14002b35f:	int3   
   14002b360:	sub    rsp,0x38
   14002b364:	cmp    ecx,0xfffffffe
   14002b367:	jne    0x14002b388
   14002b369:	call   0x14001b2b0
   14002b36e:	mov    DWORD PTR [rax],0x0
   14002b374:	call   0x14001b280
   14002b379:	mov    DWORD PTR [rax],0x9
   14002b37f:	or     rax,0xffffffffffffffff
   14002b383:	add    rsp,0x38
   14002b387:	ret    
   14002b388:	test   ecx,ecx
   14002b38a:	js     0x14002b3c3
   14002b38c:	cmp    ecx,DWORD PTR [rip+0x1c3b6]        # 0x140047748
   14002b392:	jae    0x14002b3c3
   14002b394:	movsxd rax,ecx
   14002b397:	lea    rdx,[rip+0x1c3c2]        # 0x140047760
   14002b39e:	mov    rcx,rax
   14002b3a1:	and    eax,0x1f
   14002b3a4:	sar    rcx,0x5
   14002b3a8:	lea    rax,[rax+rax*4]
   14002b3ac:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002b3b0:	add    rax,rax
   14002b3b3:	test   BYTE PTR [rdx+rax*8+0x8],0x1
   14002b3b8:	je     0x14002b3c3
   14002b3ba:	mov    rax,QWORD PTR [rdx+rax*8]
   14002b3be:	add    rsp,0x38
   14002b3c2:	ret    
   14002b3c3:	call   0x14001b2b0
   14002b3c8:	mov    DWORD PTR [rax],0x0
   14002b3ce:	call   0x14001b280
   14002b3d3:	xor    r9d,r9d
   14002b3d6:	xor    r8d,r8d
   14002b3d9:	xor    edx,edx
   14002b3db:	xor    ecx,ecx
   14002b3dd:	mov    DWORD PTR [rax],0x9
   14002b3e3:	mov    QWORD PTR [rsp+0x20],0x0
   14002b3ec:	call   0x14001de30
   14002b3f1:	or     rax,0xffffffffffffffff
   14002b3f5:	add    rsp,0x38
   14002b3f9:	ret    
   14002b3fa:	int3   
   14002b3fb:	int3   
   14002b3fc:	int3   
   14002b3fd:	int3   
   14002b3fe:	int3   
   14002b3ff:	int3   
   14002b400:	mov    QWORD PTR [rsp+0x8],rbx
   14002b405:	mov    QWORD PTR [rsp+0x10],rsi
   14002b40a:	mov    QWORD PTR [rsp+0x18],rdi
   14002b40f:	mov    QWORD PTR [rsp+0x20],r12
   14002b414:	push   r13
   14002b416:	sub    rsp,0x20
   14002b41a:	movsxd rax,ecx
   14002b41d:	mov    r12,rax
   14002b420:	sar    r12,0x5
   14002b424:	lea    r13,[rip+0x1c335]        # 0x140047760
   14002b42b:	and    eax,0x1f
   14002b42e:	lea    rdi,[rax+rax*4]
   14002b432:	add    rdi,rdi
   14002b435:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14002b43a:	mov    ebx,0x1
   14002b43f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14002b444:	jne    0x14002b47b
   14002b446:	lea    ecx,[rbx+0x9]
   14002b449:	call   0x140021b50
   14002b44e:	nop
   14002b44f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14002b454:	jne    0x14002b471
   14002b456:	lea    rcx,[rsi+rdi*8+0x10]
   14002b45b:	mov    edx,0xfa0
   14002b460:	call   0x140022080
   14002b465:	xor    ecx,ecx
   14002b467:	test   eax,eax
   14002b469:	cmove  ebx,ecx
   14002b46c:	add    DWORD PTR [rsi+rdi*8+0xc],0x1
   14002b471:	mov    ecx,0xa
   14002b476:	call   0x140021a20
   14002b47b:	test   ebx,ebx
   14002b47d:	je     0x14002b48f
   14002b47f:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14002b484:	lea    rcx,[rcx+rdi*8+0x10]
   14002b489:	call   QWORD PTR [rip+0x5ec1]        # 0x140031350
   14002b48f:	mov    eax,ebx
   14002b491:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b496:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b49b:	mov    rdi,QWORD PTR [rsp+0x40]
   14002b4a0:	mov    r12,QWORD PTR [rsp+0x48]
   14002b4a5:	add    rsp,0x20
   14002b4a9:	pop    r13
   14002b4ab:	ret    
   14002b4ac:	int3   
   14002b4ad:	int3   
   14002b4ae:	int3   
   14002b4af:	int3   
   14002b4b0:	rex push rbp
   14002b4b2:	sub    rsp,0x20
   14002b4b6:	mov    rbp,rdx
   14002b4b9:	mov    ecx,0xa
   14002b4be:	call   0x140021a20
   14002b4c3:	add    rsp,0x20
   14002b4c7:	pop    rbp
   14002b4c8:	ret    
   14002b4c9:	int3   
   14002b4ca:	int3   
   14002b4cb:	int3   
   14002b4cc:	int3   
   14002b4cd:	int3   
   14002b4ce:	int3   
   14002b4cf:	int3   
   14002b4d0:	movsxd rax,ecx
   14002b4d3:	lea    r8,[rip+0x1c286]        # 0x140047760
   14002b4da:	mov    rdx,rax
   14002b4dd:	and    eax,0x1f
   14002b4e0:	lea    rcx,[rax+rax*4]
   14002b4e4:	sar    rdx,0x5
   14002b4e8:	mov    rax,QWORD PTR [r8+rdx*8]
   14002b4ec:	add    rcx,rcx
   14002b4ef:	lea    rcx,[rax+rcx*8+0x10]
   14002b4f4:	rex.W jmp QWORD PTR [rip+0x5e65]        # 0x140031360
   14002b4fb:	int3   
   14002b4fc:	int3   
   14002b4fd:	int3   
   14002b4fe:	int3   
   14002b4ff:	int3   
   14002b500:	rex push rbx
   14002b502:	sub    rsp,0x60
   14002b506:	mov    rax,QWORD PTR [rip+0x14ac3]        # 0x14003ffd0
   14002b50d:	xor    rax,rsp
   14002b510:	mov    QWORD PTR [rsp+0x50],rax
   14002b515:	xor    ebx,ebx
   14002b517:	mov    WORD PTR [rsp+0x40],cx
   14002b51c:	cmp    DWORD PTR [rip+0x15fae],ebx        # 0x1400414d0
   14002b522:	je     0x14002b58c
   14002b524:	mov    rcx,QWORD PTR [rip+0x15fe5]        # 0x140041510
   14002b52b:	cmp    rcx,0xfffffffffffffffe
   14002b52f:	jne    0x14002b53d
   14002b531:	call   0x14002ec30
   14002b536:	mov    rcx,QWORD PTR [rip+0x15fd3]        # 0x140041510
   14002b53d:	cmp    rcx,0xffffffffffffffff
   14002b541:	je     0x14002b610
   14002b547:	lea    r9,[rsp+0x44]
   14002b54c:	lea    rdx,[rsp+0x40]
   14002b551:	mov    r8d,0x1
   14002b557:	mov    QWORD PTR [rsp+0x20],rbx
   14002b55c:	call   QWORD PTR [rip+0x5d46]        # 0x1400312a8
   14002b562:	test   eax,eax
   14002b564:	jne    0x14002b604
   14002b56a:	cmp    DWORD PTR [rip+0x15f5f],0x2        # 0x1400414d0
   14002b571:	jne    0x14002b610
   14002b577:	call   QWORD PTR [rip+0x5efb]        # 0x140031478
   14002b57d:	cmp    eax,0x78
   14002b580:	jne    0x14002b610
   14002b586:	mov    DWORD PTR [rip+0x15f44],ebx        # 0x1400414d0
   14002b58c:	call   QWORD PTR [rip+0x5d0e]        # 0x1400312a0
   14002b592:	mov    QWORD PTR [rsp+0x38],rbx
   14002b597:	mov    QWORD PTR [rsp+0x30],rbx
   14002b59c:	mov    ecx,eax
   14002b59e:	lea    rax,[rsp+0x48]
   14002b5a3:	lea    r8,[rsp+0x40]
   14002b5a8:	mov    r9d,0x1
   14002b5ae:	xor    edx,edx
   14002b5b0:	mov    DWORD PTR [rsp+0x28],0x5
   14002b5b8:	mov    QWORD PTR [rsp+0x20],rax
   14002b5bd:	call   QWORD PTR [rip+0x5e35]        # 0x1400313f8
   14002b5c3:	mov    rcx,QWORD PTR [rip+0x15f46]        # 0x140041510
   14002b5ca:	cmp    rcx,0xffffffffffffffff
   14002b5ce:	je     0x14002b610
   14002b5d0:	lea    r9,[rsp+0x44]
   14002b5d5:	lea    rdx,[rsp+0x48]
   14002b5da:	mov    r8d,eax
   14002b5dd:	mov    QWORD PTR [rsp+0x20],rbx
   14002b5e2:	call   QWORD PTR [rip+0x5cb0]        # 0x140031298
   14002b5e8:	test   eax,eax
   14002b5ea:	je     0x14002b610
   14002b5ec:	mov    ax,WORD PTR [rsp+0x40]
   14002b5f1:	mov    rcx,QWORD PTR [rsp+0x50]
   14002b5f6:	xor    rcx,rsp
   14002b5f9:	call   0x140019370
   14002b5fe:	add    rsp,0x60
   14002b602:	pop    rbx
   14002b603:	ret    
   14002b604:	mov    DWORD PTR [rip+0x15ec2],0x1        # 0x1400414d0
   14002b60e:	jmp    0x14002b5ec
   14002b610:	or     ax,0xffff
   14002b614:	mov    rcx,QWORD PTR [rsp+0x50]
   14002b619:	xor    rcx,rsp
   14002b61c:	call   0x140019370
   14002b621:	add    rsp,0x60
   14002b625:	pop    rbx
   14002b626:	ret    
   14002b627:	int3   
   14002b628:	int3   
   14002b629:	int3   
   14002b62a:	int3   
   14002b62b:	int3   
   14002b62c:	int3   
   14002b62d:	int3   
   14002b62e:	int3   
   14002b62f:	int3   
   14002b630:	mov    QWORD PTR [rsp+0x8],rbx
   14002b635:	mov    QWORD PTR [rsp+0x10],rsi
   14002b63a:	mov    QWORD PTR [rsp+0x18],rdi
   14002b63f:	push   r12
   14002b641:	sub    rsp,0x30
   14002b645:	xor    r12d,r12d
   14002b648:	mov    edi,r12d
   14002b64b:	lea    ecx,[r12+0x1]
   14002b650:	call   0x140021b50
   14002b655:	nop
   14002b656:	mov    ebx,0x3
   14002b65b:	mov    DWORD PTR [rsp+0x20],ebx
   14002b65f:	nop
   14002b660:	cmp    ebx,DWORD PTR [rip+0x1c0da]        # 0x140047740
   14002b666:	jge    0x14002b6d2
   14002b668:	movsxd rsi,ebx
   14002b66b:	mov    rax,QWORD PTR [rip+0x1b0ae]        # 0x140046720
   14002b672:	cmp    QWORD PTR [rax+rsi*8],0x0
   14002b677:	je     0x14002b6c9
   14002b679:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002b67d:	test   BYTE PTR [rcx+0x18],0x83
   14002b681:	je     0x14002b694
   14002b683:	call   0x14002ed50
   14002b688:	cmp    eax,0xffffffff
   14002b68b:	je     0x14002b694
   14002b68d:	add    edi,0x1
   14002b690:	mov    DWORD PTR [rsp+0x24],edi
   14002b694:	cmp    ebx,0x14
   14002b697:	jl     0x14002b6c9
   14002b699:	mov    rax,QWORD PTR [rip+0x1b080]        # 0x140046720
   14002b6a0:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002b6a4:	add    rcx,0x30
   14002b6a8:	call   QWORD PTR [rip+0x5c6a]        # 0x140031318
   14002b6ae:	mov    rcx,QWORD PTR [rip+0x1b06b]        # 0x140046720
   14002b6b5:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14002b6b9:	call   0x14001a540
   14002b6be:	mov    r11,QWORD PTR [rip+0x1b05b]        # 0x140046720
   14002b6c5:	mov    QWORD PTR [r11+rsi*8],r12
   14002b6c9:	add    ebx,0x1
   14002b6cc:	mov    DWORD PTR [rsp+0x20],ebx
   14002b6d0:	jmp    0x14002b660
   14002b6d2:	mov    ecx,0x1
   14002b6d7:	call   0x140021a20
   14002b6dc:	mov    eax,edi
   14002b6de:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b6e3:	mov    rsi,QWORD PTR [rsp+0x48]
   14002b6e8:	mov    rdi,QWORD PTR [rsp+0x50]
   14002b6ed:	add    rsp,0x30
   14002b6f1:	pop    r12
   14002b6f3:	ret    
   14002b6f4:	int3   
   14002b6f5:	int3   
   14002b6f6:	int3   
   14002b6f7:	int3   
   14002b6f8:	int3   
   14002b6f9:	int3   
   14002b6fa:	int3   
   14002b6fb:	int3   
   14002b6fc:	int3   
   14002b6fd:	int3   
   14002b6fe:	int3   
   14002b6ff:	int3   
   14002b700:	rex push rbp
   14002b702:	sub    rsp,0x20
   14002b706:	mov    rbp,rdx
   14002b709:	mov    ecx,0x1
   14002b70e:	call   0x140021a20
   14002b713:	add    rsp,0x20
   14002b717:	pop    rbp
   14002b718:	ret    
   14002b719:	int3   
   14002b71a:	int3   
   14002b71b:	int3   
   14002b71c:	int3   
   14002b71d:	int3   
   14002b71e:	int3   
   14002b71f:	int3   
   14002b720:	mov    QWORD PTR [rsp+0x10],rbx
   14002b725:	push   rsi
   14002b726:	sub    rsp,0x20
   14002b72a:	mov    rbx,rcx
   14002b72d:	mov    ecx,DWORD PTR [rcx+0x18]
   14002b730:	xor    esi,esi
   14002b732:	mov    eax,ecx
   14002b734:	and    al,0x3
   14002b736:	cmp    al,0x2
   14002b738:	jne    0x14002b785
   14002b73a:	test   ecx,0x108
   14002b740:	je     0x14002b785
   14002b742:	mov    QWORD PTR [rsp+0x30],rdi
   14002b747:	mov    edi,DWORD PTR [rbx]
   14002b749:	sub    edi,DWORD PTR [rbx+0x10]
   14002b74c:	test   edi,edi
   14002b74e:	jle    0x14002b780
   14002b750:	mov    rcx,rbx
   14002b753:	call   0x140028fb0
   14002b758:	mov    rdx,QWORD PTR [rbx+0x10]
   14002b75c:	mov    r8d,edi
   14002b75f:	mov    ecx,eax
   14002b761:	call   0x140028b20
   14002b766:	cmp    eax,edi
   14002b768:	jne    0x14002b779
   14002b76a:	mov    eax,DWORD PTR [rbx+0x18]
   14002b76d:	test   al,al
   14002b76f:	jns    0x14002b780
   14002b771:	and    eax,0xfffffffd
   14002b774:	mov    DWORD PTR [rbx+0x18],eax
   14002b777:	jmp    0x14002b780
   14002b779:	or     DWORD PTR [rbx+0x18],0x20
   14002b77d:	or     esi,0xffffffff
   14002b780:	mov    rdi,QWORD PTR [rsp+0x30]
   14002b785:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b789:	mov    DWORD PTR [rbx+0x8],0x0
   14002b790:	mov    eax,esi
   14002b792:	mov    QWORD PTR [rbx],rcx
   14002b795:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b79a:	add    rsp,0x20
   14002b79e:	pop    rsi
   14002b79f:	ret    
   14002b7a0:	rex push rbx
   14002b7a2:	sub    rsp,0x20
   14002b7a6:	test   rcx,rcx
   14002b7a9:	mov    rbx,rcx
   14002b7ac:	jne    0x14002b7b8
   14002b7ae:	add    rsp,0x20
   14002b7b2:	pop    rbx
   14002b7b3:	jmp    0x14002b860
   14002b7b8:	mov    ecx,DWORD PTR [rcx+0x18]
   14002b7bb:	mov    QWORD PTR [rsp+0x30],rsi
   14002b7c0:	xor    esi,esi
   14002b7c2:	mov    eax,ecx
   14002b7c4:	and    al,0x3
   14002b7c6:	cmp    al,0x2
   14002b7c8:	jne    0x14002b815
   14002b7ca:	test   ecx,0x108
   14002b7d0:	je     0x14002b815
   14002b7d2:	mov    QWORD PTR [rsp+0x38],rdi
   14002b7d7:	mov    edi,DWORD PTR [rbx]
   14002b7d9:	sub    edi,DWORD PTR [rbx+0x10]
   14002b7dc:	test   edi,edi
   14002b7de:	jle    0x14002b810
   14002b7e0:	mov    rcx,rbx
   14002b7e3:	call   0x140028fb0
   14002b7e8:	mov    rdx,QWORD PTR [rbx+0x10]
   14002b7ec:	mov    r8d,edi
   14002b7ef:	mov    ecx,eax
   14002b7f1:	call   0x140028b20
   14002b7f6:	cmp    eax,edi
   14002b7f8:	jne    0x14002b809
   14002b7fa:	mov    eax,DWORD PTR [rbx+0x18]
   14002b7fd:	test   al,al
   14002b7ff:	jns    0x14002b810
   14002b801:	and    eax,0xfffffffd
   14002b804:	mov    DWORD PTR [rbx+0x18],eax
   14002b807:	jmp    0x14002b810
   14002b809:	or     DWORD PTR [rbx+0x18],0x20
   14002b80d:	or     esi,0xffffffff
   14002b810:	mov    rdi,QWORD PTR [rsp+0x38]
   14002b815:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b819:	test   esi,esi
   14002b81b:	mov    rsi,QWORD PTR [rsp+0x30]
   14002b820:	mov    QWORD PTR [rbx],rcx
   14002b823:	mov    DWORD PTR [rbx+0x8],0x0
   14002b82a:	je     0x14002b835
   14002b82c:	or     eax,0xffffffff
   14002b82f:	add    rsp,0x20
   14002b833:	pop    rbx
   14002b834:	ret    
   14002b835:	bt     DWORD PTR [rbx+0x18],0xe
   14002b83a:	jae    0x14002b855
   14002b83c:	mov    rcx,rbx
   14002b83f:	call   0x140028fb0
   14002b844:	mov    ecx,eax
   14002b846:	call   0x14002edf0
   14002b84b:	neg    eax
   14002b84d:	sbb    eax,eax
   14002b84f:	add    rsp,0x20
   14002b853:	pop    rbx
   14002b854:	ret    
   14002b855:	xor    eax,eax
   14002b857:	add    rsp,0x20
   14002b85b:	pop    rbx
   14002b85c:	ret    
   14002b85d:	int3   
   14002b85e:	int3   
   14002b85f:	int3   
   14002b860:	mov    QWORD PTR [rsp+0x8],rbx
   14002b865:	mov    QWORD PTR [rsp+0x10],rsi
   14002b86a:	mov    QWORD PTR [rsp+0x18],rdi
   14002b86f:	push   r12
   14002b871:	push   r13
   14002b873:	push   r14
   14002b875:	sub    rsp,0x30
   14002b879:	mov    r12d,ecx
   14002b87c:	xor    edi,edi
   14002b87e:	mov    r13d,edi
   14002b881:	lea    ecx,[rdi+0x1]
   14002b884:	call   0x140021b50
   14002b889:	nop
   14002b88a:	mov    ebx,edi
   14002b88c:	mov    DWORD PTR [rsp+0x20],ebx
   14002b890:	or     r14d,0xffffffff
   14002b894:	cmp    ebx,DWORD PTR [rip+0x1bea6]        # 0x140047740
   14002b89a:	jge    0x14002b926
   14002b8a0:	movsxd rsi,ebx
   14002b8a3:	mov    rax,QWORD PTR [rip+0x1ae76]        # 0x140046720
   14002b8aa:	cmp    QWORD PTR [rax+rsi*8],0x0
   14002b8af:	je     0x14002b91a
   14002b8b1:	mov    rdx,QWORD PTR [rax+rsi*8]
   14002b8b5:	test   BYTE PTR [rdx+0x18],0x83
   14002b8b9:	je     0x14002b91a
   14002b8bb:	mov    ecx,ebx
   14002b8bd:	call   0x140028f00
   14002b8c2:	nop
   14002b8c3:	mov    rax,QWORD PTR [rip+0x1ae56]        # 0x140046720
   14002b8ca:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002b8ce:	mov    eax,DWORD PTR [rcx+0x18]
   14002b8d1:	test   al,0x83
   14002b8d3:	je     0x14002b908
   14002b8d5:	cmp    r12d,0x1
   14002b8d9:	jne    0x14002b8ee
   14002b8db:	call   0x14002b7a0
   14002b8e0:	cmp    eax,0xffffffff
   14002b8e3:	je     0x14002b908
   14002b8e5:	add    edi,r12d
   14002b8e8:	mov    DWORD PTR [rsp+0x24],edi
   14002b8ec:	jmp    0x14002b908
   14002b8ee:	test   r12d,r12d
   14002b8f1:	jne    0x14002b908
   14002b8f3:	test   al,0x2
   14002b8f5:	je     0x14002b908
   14002b8f7:	call   0x14002b7a0
   14002b8fc:	cmp    eax,0xffffffff
   14002b8ff:	cmove  r13d,r14d
   14002b903:	mov    DWORD PTR [rsp+0x28],r13d
   14002b908:	mov    rdx,QWORD PTR [rip+0x1ae11]        # 0x140046720
   14002b90f:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14002b913:	mov    ecx,ebx
   14002b915:	call   0x140028f90
   14002b91a:	add    ebx,0x1
   14002b91d:	mov    DWORD PTR [rsp+0x20],ebx
   14002b921:	jmp    0x14002b894
   14002b926:	mov    ecx,0x1
   14002b92b:	call   0x140021a20
   14002b930:	cmp    r12d,0x1
   14002b934:	cmove  r13d,edi
   14002b938:	mov    eax,r13d
   14002b93b:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b940:	mov    rsi,QWORD PTR [rsp+0x58]
   14002b945:	mov    rdi,QWORD PTR [rsp+0x60]
   14002b94a:	add    rsp,0x30
   14002b94e:	pop    r14
   14002b950:	pop    r13
   14002b952:	pop    r12
   14002b954:	ret    
   14002b955:	int3   
   14002b956:	int3   
   14002b957:	int3   
   14002b958:	int3   
   14002b959:	int3   
   14002b95a:	int3   
   14002b95b:	int3   
   14002b95c:	int3   
   14002b95d:	int3   
   14002b95e:	int3   
   14002b95f:	int3   
   14002b960:	rex push rbp
   14002b962:	sub    rsp,0x20
   14002b966:	mov    rbp,rdx
   14002b969:	movsxd rcx,DWORD PTR [rbp+0x20]
   14002b96d:	mov    rax,rcx
   14002b970:	mov    rdx,QWORD PTR [rip+0x1ada9]        # 0x140046720
   14002b977:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002b97b:	call   0x140028f90
   14002b980:	add    rsp,0x20
   14002b984:	pop    rbp
   14002b985:	ret    
   14002b986:	int3   
   14002b987:	int3   
   14002b988:	int3   
   14002b989:	int3   
   14002b98a:	int3   
   14002b98b:	int3   
   14002b98c:	int3   
   14002b98d:	int3   
   14002b98e:	int3   
   14002b98f:	int3   
   14002b990:	rex push rbp
   14002b992:	sub    rsp,0x20
   14002b996:	mov    rbp,rdx
   14002b999:	mov    ecx,0x1
   14002b99e:	call   0x140021a20
   14002b9a3:	add    rsp,0x20
   14002b9a7:	pop    rbp
   14002b9a8:	ret    
   14002b9a9:	int3   
   14002b9aa:	int3   
   14002b9ab:	int3   
   14002b9ac:	int3   
   14002b9ad:	int3   
   14002b9ae:	int3   
   14002b9af:	int3   
   14002b9b0:	mov    ecx,0x1
   14002b9b5:	jmp    0x14002b860
   14002b9ba:	int3   
   14002b9bb:	int3   
   14002b9bc:	int3   
   14002b9bd:	int3   
   14002b9be:	int3   
   14002b9bf:	int3   
   14002b9c0:	rex push rbx
   14002b9c2:	push   rdi
   14002b9c3:	push   r12
   14002b9c5:	sub    rsp,0x20
   14002b9c9:	mov    r12d,ecx
   14002b9cc:	mov    rcx,rdx
   14002b9cf:	mov    rbx,rdx
   14002b9d2:	call   0x140028fb0
   14002b9d7:	mov    edx,DWORD PTR [rbx+0x18]
   14002b9da:	test   dl,0x82
   14002b9dd:	movsxd rdi,eax
   14002b9e0:	jne    0x14002b9ff
   14002b9e2:	call   0x14001b280
   14002b9e7:	mov    DWORD PTR [rax],0x9
   14002b9ed:	or     DWORD PTR [rbx+0x18],0x20
   14002b9f1:	mov    eax,0xffff
   14002b9f6:	add    rsp,0x20
   14002b9fa:	pop    r12
   14002b9fc:	pop    rdi
   14002b9fd:	pop    rbx
   14002b9fe:	ret    
   14002b9ff:	test   dl,0x40
   14002ba02:	je     0x14002ba21
   14002ba04:	call   0x14001b280
   14002ba09:	mov    DWORD PTR [rax],0x22
   14002ba0f:	or     DWORD PTR [rbx+0x18],0x20
   14002ba13:	mov    eax,0xffff
   14002ba18:	add    rsp,0x20
   14002ba1c:	pop    r12
   14002ba1e:	pop    rdi
   14002ba1f:	pop    rbx
   14002ba20:	ret    
   14002ba21:	mov    QWORD PTR [rsp+0x50],rsi
   14002ba26:	xor    esi,esi
   14002ba28:	test   dl,0x1
   14002ba2b:	je     0x14002ba46
   14002ba2d:	test   dl,0x10
   14002ba30:	mov    DWORD PTR [rbx+0x8],esi
   14002ba33:	je     0x14002bad3
   14002ba39:	mov    rax,QWORD PTR [rbx+0x10]
   14002ba3d:	and    edx,0xfffffffe
   14002ba40:	mov    QWORD PTR [rbx],rax
   14002ba43:	mov    DWORD PTR [rbx+0x18],edx
   14002ba46:	mov    eax,DWORD PTR [rbx+0x18]
   14002ba49:	mov    DWORD PTR [rbx+0x8],esi
   14002ba4c:	and    eax,0xffffffef
   14002ba4f:	or     eax,0x2
   14002ba52:	test   eax,0x10c
   14002ba57:	mov    DWORD PTR [rbx+0x18],eax
   14002ba5a:	jne    0x14002ba8b
   14002ba5c:	call   0x140028d50
   14002ba61:	add    rax,0x30
   14002ba65:	cmp    rbx,rax
   14002ba68:	je     0x14002ba78
   14002ba6a:	call   0x140028d50
   14002ba6f:	add    rax,0x60
   14002ba73:	cmp    rbx,rax
   14002ba76:	jne    0x14002ba83
   14002ba78:	mov    ecx,edi
   14002ba7a:	call   0x140028cd0
   14002ba7f:	test   eax,eax
   14002ba81:	jne    0x14002ba8b
   14002ba83:	mov    rcx,rbx
   14002ba86:	call   0x140028c70
   14002ba8b:	test   DWORD PTR [rbx+0x18],0x108
   14002ba92:	mov    QWORD PTR [rsp+0x40],rbp
   14002ba97:	je     0x14002bb42
   14002ba9d:	mov    ebp,DWORD PTR [rbx]
   14002ba9f:	mov    rdx,QWORD PTR [rbx+0x10]
   14002baa3:	sub    ebp,DWORD PTR [rbx+0x10]
   14002baa6:	lea    rax,[rdx+0x2]
   14002baaa:	mov    QWORD PTR [rbx],rax
   14002baad:	mov    eax,DWORD PTR [rbx+0x24]
   14002bab0:	sub    eax,0x2
   14002bab3:	test   ebp,ebp
   14002bab5:	mov    DWORD PTR [rbx+0x8],eax
   14002bab8:	jle    0x14002baec
   14002baba:	mov    r8d,ebp
   14002babd:	mov    ecx,edi
   14002babf:	call   0x140028b20
   14002bac4:	mov    esi,eax
   14002bac6:	mov    rax,QWORD PTR [rbx+0x10]
   14002baca:	mov    WORD PTR [rax],r12w
   14002bace:	jmp    0x14002bb5e
   14002bad3:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bad8:	or     edx,0x20
   14002badb:	mov    eax,0xffff
   14002bae0:	mov    DWORD PTR [rbx+0x18],edx
   14002bae3:	add    rsp,0x20
   14002bae7:	pop    r12
   14002bae9:	pop    rdi
   14002baea:	pop    rbx
   14002baeb:	ret    
   14002baec:	cmp    edi,0xffffffff
   14002baef:	je     0x14002bb18
   14002baf1:	cmp    edi,0xfffffffe
   14002baf4:	je     0x14002bb18
   14002baf6:	mov    rax,rdi
   14002baf9:	mov    rcx,rdi
   14002bafc:	lea    r8,[rip+0x1bc5d]        # 0x140047760
   14002bb03:	and    eax,0x1f
   14002bb06:	sar    rcx,0x5
   14002bb0a:	lea    rdx,[rax+rax*4]
   14002bb0e:	shl    rdx,0x4
   14002bb12:	add    rdx,QWORD PTR [r8+rcx*8]
   14002bb16:	jmp    0x14002bb1f
   14002bb18:	lea    rdx,[rip+0x14861]        # 0x140040380
   14002bb1f:	test   BYTE PTR [rdx+0x8],0x20
   14002bb23:	je     0x14002bb38
   14002bb25:	xor    edx,edx
   14002bb27:	mov    ecx,edi
   14002bb29:	lea    r8d,[rdx+0x2]
   14002bb2d:	call   0x140028240
   14002bb32:	cmp    rax,0xffffffffffffffff
   14002bb36:	je     0x14002bb62
   14002bb38:	mov    rax,QWORD PTR [rbx+0x10]
   14002bb3c:	mov    WORD PTR [rax],r12w
   14002bb40:	jmp    0x14002bb5e
   14002bb42:	mov    ebp,0x2
   14002bb47:	lea    rdx,[rsp+0x48]
   14002bb4c:	mov    ecx,edi
   14002bb4e:	mov    r8d,ebp
   14002bb51:	mov    WORD PTR [rsp+0x48],r12w
   14002bb57:	call   0x140028b20
   14002bb5c:	mov    esi,eax
   14002bb5e:	cmp    esi,ebp
   14002bb60:	je     0x14002bb6d
   14002bb62:	or     DWORD PTR [rbx+0x18],0x20
   14002bb66:	mov    eax,0xffff
   14002bb6b:	jmp    0x14002bb71
   14002bb6d:	movzx  eax,r12w
   14002bb71:	mov    rbp,QWORD PTR [rsp+0x40]
   14002bb76:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bb7b:	add    rsp,0x20
   14002bb7f:	pop    r12
   14002bb81:	pop    rdi
   14002bb82:	pop    rbx
   14002bb83:	ret    
   14002bb84:	int3   
   14002bb85:	int3   
   14002bb86:	int3   
   14002bb87:	int3   
   14002bb88:	int3   
   14002bb89:	int3   
   14002bb8a:	int3   
   14002bb8b:	int3   
   14002bb8c:	int3   
   14002bb8d:	int3   
   14002bb8e:	int3   
   14002bb8f:	int3   
   14002bb90:	push   r12
   14002bb92:	push   r13
   14002bb94:	push   r14
   14002bb96:	sub    rsp,0x50
   14002bb9a:	test   rcx,rcx
   14002bb9d:	mov    r12d,r9d
   14002bba0:	mov    r13,r8
   14002bba3:	mov    r14,rdx
   14002bba6:	mov    BYTE PTR [rsp+0x48],0x0
   14002bbab:	jne    0x14002bc48
   14002bbb1:	call   0x14001d930
   14002bbb6:	mov    QWORD PTR [rsp+0x40],rax
   14002bbbb:	mov    r10,QWORD PTR [rax+0xc0]
   14002bbc2:	cmp    r10,QWORD PTR [rip+0x14ec7]        # 0x140040a90
   14002bbc9:	mov    QWORD PTR [rsp+0x30],r10
   14002bbce:	mov    r11,QWORD PTR [rax+0xb8]
   14002bbd5:	mov    QWORD PTR [rsp+0x38],r11
   14002bbda:	je     0x14002bc01
   14002bbdc:	mov    ecx,DWORD PTR [rax+0xc8]
   14002bbe2:	test   DWORD PTR [rip+0x14d30],ecx        # 0x140040918
   14002bbe8:	jne    0x14002bc01
   14002bbea:	call   0x14001ed60
   14002bbef:	mov    r11,QWORD PTR [rsp+0x38]
   14002bbf4:	mov    r10,rax
   14002bbf7:	mov    QWORD PTR [rsp+0x30],rax
   14002bbfc:	mov    rax,QWORD PTR [rsp+0x40]
   14002bc01:	cmp    r11,QWORD PTR [rip+0x14c08]        # 0x140040810
   14002bc08:	je     0x14002bc2c
   14002bc0a:	mov    ecx,DWORD PTR [rax+0xc8]
   14002bc10:	test   DWORD PTR [rip+0x14d02],ecx        # 0x140040918
   14002bc16:	jne    0x14002bc2c
   14002bc18:	call   0x14001e210
   14002bc1d:	mov    r10,QWORD PTR [rsp+0x30]
   14002bc22:	mov    QWORD PTR [rsp+0x38],rax
   14002bc27:	mov    rax,QWORD PTR [rsp+0x40]
   14002bc2c:	test   BYTE PTR [rax+0xc8],0x2
   14002bc33:	jne    0x14002bc60
   14002bc35:	or     DWORD PTR [rax+0xc8],0x2
   14002bc3c:	mov    r10,QWORD PTR [rsp+0x30]
   14002bc41:	mov    BYTE PTR [rsp+0x48],0x1
   14002bc46:	jmp    0x14002bc60
   14002bc48:	mov    rax,QWORD PTR [rcx]
   14002bc4b:	lea    rdx,[rsp+0x30]
   14002bc50:	mov    QWORD PTR [rdx],rax
   14002bc53:	mov    rax,QWORD PTR [rcx+0x8]
   14002bc57:	mov    QWORD PTR [rdx+0x8],rax
   14002bc5b:	mov    r10,QWORD PTR [rsp+0x30]
   14002bc60:	test   r13,r13
   14002bc63:	je     0x14002bc69
   14002bc65:	mov    QWORD PTR [r13+0x0],r14
   14002bc69:	test   r14,r14
   14002bc6c:	jne    0x14002bcb1
   14002bc6e:	call   0x14001b280
   14002bc73:	xor    r9d,r9d
   14002bc76:	xor    r8d,r8d
   14002bc79:	xor    edx,edx
   14002bc7b:	xor    ecx,ecx
   14002bc7d:	mov    QWORD PTR [rsp+0x20],0x0
   14002bc86:	mov    DWORD PTR [rax],0x16
   14002bc8c:	call   0x14001de30
   14002bc91:	cmp    BYTE PTR [rsp+0x48],0x0
   14002bc96:	je     0x14002bca4
   14002bc98:	mov    rax,QWORD PTR [rsp+0x40]
   14002bc9d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bca4:	xor    eax,eax
   14002bca6:	add    rsp,0x50
   14002bcaa:	pop    r14
   14002bcac:	pop    r13
   14002bcae:	pop    r12
   14002bcb0:	ret    
   14002bcb1:	test   r12d,r12d
   14002bcb4:	je     0x14002bcc2
   14002bcb6:	cmp    r12d,0x2
   14002bcba:	jl     0x14002bc6e
   14002bcbc:	cmp    r12d,0x24
   14002bcc0:	jg     0x14002bc6e
   14002bcc2:	mov    QWORD PTR [rsp+0x70],rbx
   14002bcc7:	mov    QWORD PTR [rsp+0x80],rsi
   14002bccf:	mov    QWORD PTR [rsp+0x88],rdi
   14002bcd7:	movzx  edi,BYTE PTR [r14]
   14002bcdb:	xor    esi,esi
   14002bcdd:	lea    rbx,[r14+0x1]
   14002bce1:	cmp    DWORD PTR [r10+0x10c],0x1
   14002bce9:	jle    0x14002bd05
   14002bceb:	lea    r8,[rsp+0x30]
   14002bcf0:	movzx  ecx,dil
   14002bcf4:	mov    edx,0x8
   14002bcf9:	call   0x14002bf60
   14002bcfe:	mov    r10,QWORD PTR [rsp+0x30]
   14002bd03:	jmp    0x14002bd16
   14002bd05:	mov    rax,QWORD PTR [r10+0x140]
   14002bd0c:	movzx  ecx,dil
   14002bd10:	mov    al,BYTE PTR [rax+rcx*2]
   14002bd13:	and    eax,0x8
   14002bd16:	test   eax,eax
   14002bd18:	je     0x14002bd23
   14002bd1a:	mov    dil,BYTE PTR [rbx]
   14002bd1d:	add    rbx,0x1
   14002bd21:	jmp    0x14002bce1
   14002bd23:	cmp    dil,0x2d
   14002bd27:	mov    QWORD PTR [rsp+0x78],rbp
   14002bd2c:	jne    0x14002bd41
   14002bd2e:	mov    ebp,DWORD PTR [rsp+0x90]
   14002bd35:	mov    dil,BYTE PTR [rbx]
   14002bd38:	or     ebp,0x2
   14002bd3b:	add    rbx,0x1
   14002bd3f:	jmp    0x14002bd5e
   14002bd41:	cmp    dil,0x2b
   14002bd45:	jne    0x14002bd57
   14002bd47:	mov    dil,BYTE PTR [rbx]
   14002bd4a:	mov    ebp,DWORD PTR [rsp+0x90]
   14002bd51:	add    rbx,0x1
   14002bd55:	jmp    0x14002bd5e
   14002bd57:	mov    ebp,DWORD PTR [rsp+0x90]
   14002bd5e:	test   r12d,r12d
   14002bd61:	js     0x14002bed2
   14002bd67:	cmp    r12d,0x1
   14002bd6b:	je     0x14002bed2
   14002bd71:	cmp    r12d,0x24
   14002bd75:	jg     0x14002bed2
   14002bd7b:	test   r12d,r12d
   14002bd7e:	jne    0x14002bda9
   14002bd80:	cmp    dil,0x30
   14002bd84:	je     0x14002bd8e
   14002bd86:	mov    r12d,0xa
   14002bd8c:	jmp    0x14002bdc8
   14002bd8e:	movzx  eax,BYTE PTR [rbx]
   14002bd91:	cmp    al,0x78
   14002bd93:	je     0x14002bda1
   14002bd95:	cmp    al,0x58
   14002bd97:	je     0x14002bda1
   14002bd99:	mov    r12d,0x8
   14002bd9f:	jmp    0x14002bdc8
   14002bda1:	mov    r12d,0x10
   14002bda7:	jmp    0x14002bdb5
   14002bda9:	cmp    r12d,0x10
   14002bdad:	jne    0x14002bdc8
   14002bdaf:	cmp    dil,0x30
   14002bdb3:	jne    0x14002bdc8
   14002bdb5:	movzx  eax,BYTE PTR [rbx]
   14002bdb8:	cmp    al,0x78
   14002bdba:	je     0x14002bdc0
   14002bdbc:	cmp    al,0x58
   14002bdbe:	jne    0x14002bdc8
   14002bdc0:	mov    dil,BYTE PTR [rbx+0x1]
   14002bdc4:	add    rbx,0x2
   14002bdc8:	mov    r11,QWORD PTR [r10+0x140]
   14002bdcf:	xor    edx,edx
   14002bdd1:	or     eax,0xffffffff
   14002bdd4:	div    r12d
   14002bdd7:	mov    r9d,eax
   14002bdda:	data16 xchg ax,ax
   14002bddd:	data16 xchg ax,ax
   14002bde0:	movzx  ecx,dil
   14002bde4:	movzx  r8d,WORD PTR [r11+rcx*2]
   14002bde9:	test   r8b,0x4
   14002bded:	je     0x14002bdf8
   14002bdef:	movsx  ecx,dil
   14002bdf3:	sub    ecx,0x30
   14002bdf6:	jmp    0x14002be18
   14002bdf8:	test   r8d,0x103
   14002bdff:	je     0x14002be36
   14002be01:	lea    eax,[rdi-0x61]
   14002be04:	cmp    al,0x19
   14002be06:	ja     0x14002be11
   14002be08:	movsx  ecx,dil
   14002be0c:	sub    ecx,0x20
   14002be0f:	jmp    0x14002be15
   14002be11:	movsx  ecx,dil
   14002be15:	add    ecx,0xffffffc9
   14002be18:	cmp    ecx,r12d
   14002be1b:	jae    0x14002be36
   14002be1d:	or     ebp,0x8
   14002be20:	cmp    esi,r9d
   14002be23:	jb     0x14002be4b
   14002be25:	cmp    esi,r9d
   14002be28:	jne    0x14002be2e
   14002be2a:	cmp    ecx,edx
   14002be2c:	jbe    0x14002be4b
   14002be2e:	or     ebp,0x4
   14002be31:	test   r13,r13
   14002be34:	jne    0x14002be51
   14002be36:	sub    rbx,0x1
   14002be3a:	test   bpl,0x8
   14002be3e:	jne    0x14002be5a
   14002be40:	test   r13,r13
   14002be43:	cmovne rbx,r14
   14002be47:	xor    esi,esi
   14002be49:	jmp    0x14002beaa
   14002be4b:	imul   esi,r12d
   14002be4f:	add    esi,ecx
   14002be51:	mov    dil,BYTE PTR [rbx]
   14002be54:	add    rbx,0x1
   14002be58:	jmp    0x14002bde0
   14002be5a:	test   bpl,0x4
   14002be5e:	jne    0x14002be81
   14002be60:	test   bpl,0x1
   14002be64:	jne    0x14002beaa
   14002be66:	mov    eax,ebp
   14002be68:	and    eax,0x2
   14002be6b:	je     0x14002be75
   14002be6d:	cmp    esi,0x80000000
   14002be73:	ja     0x14002be81
   14002be75:	test   eax,eax
   14002be77:	jne    0x14002beaa
   14002be79:	cmp    esi,0x7fffffff
   14002be7f:	jbe    0x14002beaa
   14002be81:	call   0x14001b280
   14002be86:	test   bpl,0x1
   14002be8a:	mov    DWORD PTR [rax],0x22
   14002be90:	je     0x14002be97
   14002be92:	or     esi,0xffffffff
   14002be95:	jmp    0x14002beaa
   14002be97:	test   bpl,0x2
   14002be9b:	mov    esi,0x0
   14002bea0:	setne  sil
   14002bea4:	add    esi,0x7fffffff
   14002beaa:	test   r13,r13
   14002bead:	je     0x14002beb3
   14002beaf:	mov    QWORD PTR [r13+0x0],rbx
   14002beb3:	test   bpl,0x2
   14002beb7:	je     0x14002bebb
   14002beb9:	neg    esi
   14002bebb:	cmp    BYTE PTR [rsp+0x48],0x0
   14002bec0:	je     0x14002bece
   14002bec2:	mov    rcx,QWORD PTR [rsp+0x40]
   14002bec7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002bece:	mov    eax,esi
   14002bed0:	jmp    0x14002bef0
   14002bed2:	test   r13,r13
   14002bed5:	je     0x14002bedb
   14002bed7:	mov    QWORD PTR [r13+0x0],r14
   14002bedb:	cmp    BYTE PTR [rsp+0x48],sil
   14002bee0:	je     0x14002beee
   14002bee2:	mov    rax,QWORD PTR [rsp+0x40]
   14002bee7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002beee:	xor    eax,eax
   14002bef0:	mov    rbp,QWORD PTR [rsp+0x78]
   14002bef5:	mov    rsi,QWORD PTR [rsp+0x80]
   14002befd:	mov    rbx,QWORD PTR [rsp+0x70]
   14002bf02:	mov    rdi,QWORD PTR [rsp+0x88]
   14002bf0a:	add    rsp,0x50
   14002bf0e:	pop    r14
   14002bf10:	pop    r13
   14002bf12:	pop    r12
   14002bf14:	ret    
   14002bf15:	int3   
   14002bf16:	int3   
   14002bf17:	int3   
   14002bf18:	int3   
   14002bf19:	int3   
   14002bf1a:	int3   
   14002bf1b:	int3   
   14002bf1c:	int3   
   14002bf1d:	int3   
   14002bf1e:	int3   
   14002bf1f:	int3   
   14002bf20:	sub    rsp,0x38
   14002bf24:	cmp    DWORD PTR [rip+0x19b7d],0x0        # 0x140045aa8
   14002bf2b:	mov    r9d,r8d
   14002bf2e:	mov    r8,rdx
   14002bf31:	mov    rdx,rcx
   14002bf34:	mov    DWORD PTR [rsp+0x20],0x0
   14002bf3c:	jne    0x14002bf4f
   14002bf3e:	lea    rcx,[rip+0x14b5b]        # 0x140040aa0
   14002bf45:	call   0x14002bb90
   14002bf4a:	add    rsp,0x38
   14002bf4e:	ret    
   14002bf4f:	xor    ecx,ecx
   14002bf51:	call   0x14002bb90
   14002bf56:	add    rsp,0x38
   14002bf5a:	ret    
   14002bf5b:	int3   
   14002bf5c:	int3   
   14002bf5d:	int3   
   14002bf5e:	int3   
   14002bf5f:	int3   
   14002bf60:	mov    QWORD PTR [rsp+0x20],rbx
   14002bf65:	push   rsi
   14002bf66:	sub    rsp,0x60
   14002bf6a:	test   r8,r8
   14002bf6d:	mov    esi,edx
   14002bf6f:	movsxd rbx,ecx
   14002bf72:	mov    BYTE PTR [rsp+0x58],0x0
   14002bf77:	jne    0x14002c013
   14002bf7d:	call   0x14001d930
   14002bf82:	mov    QWORD PTR [rsp+0x50],rax
   14002bf87:	mov    r11,rax
   14002bf8a:	mov    r8,QWORD PTR [rax+0xc0]
   14002bf91:	cmp    r8,QWORD PTR [rip+0x14af8]        # 0x140040a90
   14002bf98:	mov    QWORD PTR [rsp+0x40],r8
   14002bf9d:	mov    rax,QWORD PTR [rax+0xb8]
   14002bfa4:	mov    QWORD PTR [rsp+0x48],rax
   14002bfa9:	je     0x14002bfce
   14002bfab:	mov    ecx,DWORD PTR [r11+0xc8]
   14002bfb2:	test   DWORD PTR [rip+0x14960],ecx        # 0x140040918
   14002bfb8:	jne    0x14002bfce
   14002bfba:	call   0x14001ed60
   14002bfbf:	mov    r11,QWORD PTR [rsp+0x50]
   14002bfc4:	mov    QWORD PTR [rsp+0x40],rax
   14002bfc9:	mov    rax,QWORD PTR [rsp+0x48]
   14002bfce:	cmp    rax,QWORD PTR [rip+0x1483b]        # 0x140040810
   14002bfd5:	je     0x14002bff5
   14002bfd7:	mov    eax,DWORD PTR [r11+0xc8]
   14002bfde:	test   DWORD PTR [rip+0x14934],eax        # 0x140040918
   14002bfe4:	jne    0x14002bff5
   14002bfe6:	call   0x14001e210
   14002bfeb:	mov    r11,QWORD PTR [rsp+0x50]
   14002bff0:	mov    QWORD PTR [rsp+0x48],rax
   14002bff5:	test   BYTE PTR [r11+0xc8],0x2
   14002bffd:	jne    0x14002c02b
   14002bfff:	or     DWORD PTR [r11+0xc8],0x2
   14002c007:	mov    r11,QWORD PTR [rsp+0x50]
   14002c00c:	mov    BYTE PTR [rsp+0x58],0x1
   14002c011:	jmp    0x14002c02b
   14002c013:	mov    rax,QWORD PTR [r8]
   14002c016:	lea    rcx,[rsp+0x40]
   14002c01b:	mov    QWORD PTR [rcx],rax
   14002c01e:	mov    rax,QWORD PTR [r8+0x8]
   14002c022:	mov    QWORD PTR [rcx+0x8],rax
   14002c026:	mov    r11,QWORD PTR [rsp+0x50]
   14002c02b:	lea    eax,[rbx+0x1]
   14002c02e:	cmp    eax,0x100
   14002c033:	ja     0x14002c068
   14002c035:	mov    rax,QWORD PTR [rsp+0x40]
   14002c03a:	mov    rcx,QWORD PTR [rax+0x140]
   14002c041:	movzx  eax,WORD PTR [rcx+rbx*2]
   14002c045:	and    eax,esi
   14002c047:	cmp    BYTE PTR [rsp+0x58],0x0
   14002c04c:	je     0x14002c139
   14002c052:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14002c05a:	mov    rbx,QWORD PTR [rsp+0x88]
   14002c062:	add    rsp,0x60
   14002c066:	pop    rsi
   14002c067:	ret    
   14002c068:	mov    QWORD PTR [rsp+0x78],rdi
   14002c06d:	mov    edi,ebx
   14002c06f:	lea    rdx,[rsp+0x40]
   14002c074:	sar    edi,0x8
   14002c077:	movzx  ecx,dil
   14002c07b:	call   0x140019e20
   14002c080:	test   eax,eax
   14002c082:	je     0x14002c0a3
   14002c084:	mov    BYTE PTR [rsp+0x80],dil
   14002c08c:	mov    BYTE PTR [rsp+0x81],bl
   14002c093:	mov    BYTE PTR [rsp+0x82],0x0
   14002c09b:	mov    r9d,0x2
   14002c0a1:	jmp    0x14002c0b8
   14002c0a3:	mov    BYTE PTR [rsp+0x80],bl
   14002c0aa:	mov    BYTE PTR [rsp+0x81],0x0
   14002c0b2:	mov    r9d,0x1
   14002c0b8:	mov    rcx,QWORD PTR [rsp+0x40]
   14002c0bd:	mov    DWORD PTR [rsp+0x38],0x1
   14002c0c5:	lea    r8,[rsp+0x80]
   14002c0cd:	mov    eax,DWORD PTR [rcx+0x14]
   14002c0d0:	mov    edx,0x1
   14002c0d5:	mov    DWORD PTR [rsp+0x30],eax
   14002c0d9:	mov    eax,DWORD PTR [rcx+0x4]
   14002c0dc:	lea    rcx,[rsp+0x40]
   14002c0e1:	mov    DWORD PTR [rsp+0x28],eax
   14002c0e5:	lea    rax,[rsp+0x70]
   14002c0ea:	mov    QWORD PTR [rsp+0x20],rax
   14002c0ef:	call   0x140027990
   14002c0f4:	mov    rdi,QWORD PTR [rsp+0x78]
   14002c0f9:	test   eax,eax
   14002c0fb:	jne    0x14002c11f
   14002c0fd:	cmp    BYTE PTR [rsp+0x58],al
   14002c101:	je     0x14002c10f
   14002c103:	mov    rax,QWORD PTR [rsp+0x50]
   14002c108:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c10f:	xor    eax,eax
   14002c111:	mov    rbx,QWORD PTR [rsp+0x88]
   14002c119:	add    rsp,0x60
   14002c11d:	pop    rsi
   14002c11e:	ret    
   14002c11f:	movzx  eax,WORD PTR [rsp+0x70]
   14002c124:	and    eax,esi
   14002c126:	cmp    BYTE PTR [rsp+0x58],0x0
   14002c12b:	je     0x14002c139
   14002c12d:	mov    rcx,QWORD PTR [rsp+0x50]
   14002c132:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c139:	mov    rbx,QWORD PTR [rsp+0x88]
   14002c141:	add    rsp,0x60
   14002c145:	pop    rsi
   14002c146:	ret    
   14002c147:	int3   
   14002c148:	int3   
   14002c149:	int3   
   14002c14a:	int3   
   14002c14b:	int3   
   14002c14c:	int3   
   14002c14d:	int3   
   14002c14e:	int3   
   14002c14f:	int3   
   14002c150:	rex push rdi
   14002c152:	sub    rsp,0x30
   14002c156:	test   rcx,rcx
   14002c159:	mov    rdi,rcx
   14002c15c:	jne    0x14002c188
   14002c15e:	call   0x14001b280
   14002c163:	xor    r9d,r9d
   14002c166:	xor    r8d,r8d
   14002c169:	xor    edx,edx
   14002c16b:	xor    ecx,ecx
   14002c16d:	mov    QWORD PTR [rsp+0x20],rdi
   14002c172:	mov    DWORD PTR [rax],0x16
   14002c178:	call   0x14001de30
   14002c17d:	mov    eax,0xffff
   14002c182:	add    rsp,0x30
   14002c186:	pop    rdi
   14002c187:	ret    
   14002c188:	mov    eax,DWORD PTR [rcx+0x18]
   14002c18b:	test   al,0x83
   14002c18d:	je     0x14002c2cf
   14002c193:	test   al,0x40
   14002c195:	jne    0x14002c2cf
   14002c19b:	test   al,0x2
   14002c19d:	je     0x14002c1b0
   14002c19f:	or     eax,0x20
   14002c1a2:	mov    DWORD PTR [rcx+0x18],eax
   14002c1a5:	mov    eax,0xffff
   14002c1aa:	add    rsp,0x30
   14002c1ae:	pop    rdi
   14002c1af:	ret    
   14002c1b0:	or     eax,0x1
   14002c1b3:	test   eax,0x10c
   14002c1b8:	mov    DWORD PTR [rcx+0x18],eax
   14002c1bb:	jne    0x14002c1c4
   14002c1bd:	call   0x140028c70
   14002c1c2:	jmp    0x14002c1cb
   14002c1c4:	mov    rax,QWORD PTR [rcx+0x10]
   14002c1c8:	mov    QWORD PTR [rcx],rax
   14002c1cb:	mov    rcx,rdi
   14002c1ce:	call   0x140028fb0
   14002c1d3:	mov    r8d,DWORD PTR [rdi+0x24]
   14002c1d7:	mov    rdx,QWORD PTR [rdi+0x10]
   14002c1db:	mov    ecx,eax
   14002c1dd:	call   0x14002f840
   14002c1e2:	test   eax,eax
   14002c1e4:	mov    r11d,eax
   14002c1e7:	mov    DWORD PTR [rdi+0x8],eax
   14002c1ea:	je     0x14002c2b5
   14002c1f0:	cmp    eax,0x1
   14002c1f3:	je     0x14002c2b5
   14002c1f9:	cmp    eax,0xffffffff
   14002c1fc:	je     0x14002c2b5
   14002c202:	test   BYTE PTR [rdi+0x18],0x82
   14002c206:	jne    0x14002c281
   14002c208:	mov    rcx,rdi
   14002c20b:	call   0x140028fb0
   14002c210:	cmp    eax,0xffffffff
   14002c213:	je     0x14002c269
   14002c215:	mov    rcx,rdi
   14002c218:	call   0x140028fb0
   14002c21d:	cmp    eax,0xfffffffe
   14002c220:	je     0x14002c269
   14002c222:	mov    rcx,rdi
   14002c225:	mov    QWORD PTR [rsp+0x40],rbx
   14002c22a:	mov    QWORD PTR [rsp+0x48],rsi
   14002c22f:	call   0x140028fb0
   14002c234:	mov    rcx,rdi
   14002c237:	lea    rsi,[rip+0x1b522]        # 0x140047760
   14002c23e:	movsxd rbx,eax
   14002c241:	sar    rbx,0x5
   14002c245:	call   0x140028fb0
   14002c24a:	mov    r11d,eax
   14002c24d:	and    r11d,0x1f
   14002c251:	lea    rax,[r11+r11*4]
   14002c255:	shl    rax,0x4
   14002c259:	add    rax,QWORD PTR [rsi+rbx*8]
   14002c25d:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c262:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c267:	jmp    0x14002c270
   14002c269:	lea    rax,[rip+0x14110]        # 0x140040380
   14002c270:	movzx  eax,BYTE PTR [rax+0x8]
   14002c274:	and    al,0x82
   14002c276:	cmp    al,0x82
   14002c278:	jne    0x14002c281
   14002c27a:	or     DWORD PTR [rdi+0x18],0x2000
   14002c281:	cmp    DWORD PTR [rdi+0x24],0x200
   14002c288:	jne    0x14002c29e
   14002c28a:	mov    eax,DWORD PTR [rdi+0x18]
   14002c28d:	test   al,0x8
   14002c28f:	je     0x14002c29e
   14002c291:	bt     eax,0xa
   14002c295:	jb     0x14002c29e
   14002c297:	mov    DWORD PTR [rdi+0x24],0x1000
   14002c29e:	mov    rcx,QWORD PTR [rdi]
   14002c2a1:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002c2a5:	movzx  eax,WORD PTR [rcx]
   14002c2a8:	add    rcx,0x2
   14002c2ac:	mov    QWORD PTR [rdi],rcx
   14002c2af:	add    rsp,0x30
   14002c2b3:	pop    rdi
   14002c2b4:	ret    
   14002c2b5:	test   r11d,r11d
   14002c2b8:	mov    eax,0x10
   14002c2bd:	mov    ecx,0x20
   14002c2c2:	cmovne eax,ecx
   14002c2c5:	mov    DWORD PTR [rdi+0x8],0x0
   14002c2cc:	or     DWORD PTR [rdi+0x18],eax
   14002c2cf:	mov    eax,0xffff
   14002c2d4:	add    rsp,0x30
   14002c2d8:	pop    rdi
   14002c2d9:	ret    
   14002c2da:	int3   
   14002c2db:	int3   
   14002c2dc:	int3   
   14002c2dd:	int3   
   14002c2de:	int3   
   14002c2df:	int3   
   14002c2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c2e5:	mov    QWORD PTR [rsp+0x10],rbp
   14002c2ea:	mov    QWORD PTR [rsp+0x18],rsi
   14002c2ef:	mov    QWORD PTR [rsp+0x20],rdi
   14002c2f4:	push   r12
   14002c2f6:	sub    rsp,0x30
   14002c2fa:	test   BYTE PTR [rdx+0x18],0x40
   14002c2fe:	mov    rdi,rdx
   14002c301:	mov    esi,ecx
   14002c303:	jne    0x14002c3f1
   14002c309:	mov    rcx,rdx
   14002c30c:	call   0x140028fb0
   14002c311:	lea    rbp,[rip+0x14068]        # 0x140040380
   14002c318:	lea    r12,[rip+0x1b441]        # 0x140047760
   14002c31f:	cmp    eax,0xffffffff
   14002c322:	je     0x14002c35d
   14002c324:	mov    rcx,rdi
   14002c327:	call   0x140028fb0
   14002c32c:	cmp    eax,0xfffffffe
   14002c32f:	je     0x14002c35d
   14002c331:	mov    rcx,rdi
   14002c334:	call   0x140028fb0
   14002c339:	mov    rcx,rdi
   14002c33c:	movsxd rbx,eax
   14002c33f:	sar    rbx,0x5
   14002c343:	call   0x140028fb0
   14002c348:	mov    r11d,eax
   14002c34b:	and    r11d,0x1f
   14002c34f:	lea    rax,[r11+r11*4]
   14002c353:	shl    rax,0x4
   14002c357:	add    rax,QWORD PTR [r12+rbx*8]
   14002c35b:	jmp    0x14002c360
   14002c35d:	mov    rax,rbp
   14002c360:	test   BYTE PTR [rax+0x38],0x7f
   14002c364:	jne    0x14002c3b0
   14002c366:	mov    rcx,rdi
   14002c369:	call   0x140028fb0
   14002c36e:	cmp    eax,0xffffffff
   14002c371:	je     0x14002c3aa
   14002c373:	mov    rcx,rdi
   14002c376:	call   0x140028fb0
   14002c37b:	cmp    eax,0xfffffffe
   14002c37e:	je     0x14002c3aa
   14002c380:	mov    rcx,rdi
   14002c383:	call   0x140028fb0
   14002c388:	mov    rcx,rdi
   14002c38b:	movsxd rbx,eax
   14002c38e:	sar    rbx,0x5
   14002c392:	call   0x140028fb0
   14002c397:	mov    r11d,eax
   14002c39a:	and    r11d,0x1f
   14002c39e:	lea    rbp,[r11+r11*4]
   14002c3a2:	shl    rbp,0x4
   14002c3a6:	add    rbp,QWORD PTR [r12+rbx*8]
   14002c3aa:	test   BYTE PTR [rbp+0x38],0x80
   14002c3ae:	je     0x14002c3f1
   14002c3b0:	call   0x14001b280
   14002c3b5:	xor    r9d,r9d
   14002c3b8:	xor    r8d,r8d
   14002c3bb:	xor    edx,edx
   14002c3bd:	xor    ecx,ecx
   14002c3bf:	mov    QWORD PTR [rsp+0x20],0x0
   14002c3c8:	mov    DWORD PTR [rax],0x16
   14002c3ce:	call   0x14001de30
   14002c3d3:	or     eax,0xffffffff
   14002c3d6:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c3db:	mov    rbp,QWORD PTR [rsp+0x48]
   14002c3e0:	mov    rsi,QWORD PTR [rsp+0x50]
   14002c3e5:	mov    rdi,QWORD PTR [rsp+0x58]
   14002c3ea:	add    rsp,0x30
   14002c3ee:	pop    r12
   14002c3f0:	ret    
   14002c3f1:	cmp    esi,0xffffffff
   14002c3f4:	je     0x14002c3d3
   14002c3f6:	mov    eax,DWORD PTR [rdi+0x18]
   14002c3f9:	test   al,0x1
   14002c3fb:	jne    0x14002c405
   14002c3fd:	test   al,al
   14002c3ff:	jns    0x14002c3d3
   14002c401:	test   al,0x2
   14002c403:	jne    0x14002c3d3
   14002c405:	cmp    QWORD PTR [rdi+0x10],0x0
   14002c40a:	jne    0x14002c414
   14002c40c:	mov    rcx,rdi
   14002c40f:	call   0x140028c70
   14002c414:	mov    rax,QWORD PTR [rdi]
   14002c417:	cmp    rax,QWORD PTR [rdi+0x10]
   14002c41b:	jne    0x14002c42a
   14002c41d:	cmp    DWORD PTR [rdi+0x8],0x0
   14002c421:	jne    0x14002c3d3
   14002c423:	add    rax,0x1
   14002c427:	mov    QWORD PTR [rdi],rax
   14002c42a:	add    QWORD PTR [rdi],0xffffffffffffffff
   14002c42e:	test   BYTE PTR [rdi+0x18],0x40
   14002c432:	mov    rax,QWORD PTR [rdi]
   14002c435:	je     0x14002c445
   14002c437:	cmp    BYTE PTR [rax],sil
   14002c43a:	je     0x14002c448
   14002c43c:	add    rax,0x1
   14002c440:	mov    QWORD PTR [rdi],rax
   14002c443:	jmp    0x14002c3d3
   14002c445:	mov    BYTE PTR [rax],sil
   14002c448:	add    DWORD PTR [rdi+0x8],0x1
   14002c44c:	and    DWORD PTR [rdi+0x18],0xffffffef
   14002c450:	or     DWORD PTR [rdi+0x18],0x1
   14002c454:	movzx  eax,sil
   14002c458:	jmp    0x14002c3d6
   14002c45d:	int3   
   14002c45e:	int3   
   14002c45f:	int3   
   14002c460:	mov    QWORD PTR [rsp+0x8],rbx
   14002c465:	mov    QWORD PTR [rsp+0x10],rdx
   14002c46a:	push   rdi
   14002c46b:	sub    rsp,0x30
   14002c46f:	mov    rbx,rdx
   14002c472:	mov    edi,ecx
   14002c474:	xor    eax,eax
   14002c476:	test   rdx,rdx
   14002c479:	setne  al
   14002c47c:	test   eax,eax
   14002c47e:	jne    0x14002c4a8
   14002c480:	call   0x14001b280
   14002c485:	mov    DWORD PTR [rax],0x16
   14002c48b:	mov    QWORD PTR [rsp+0x20],0x0
   14002c494:	xor    r9d,r9d
   14002c497:	xor    r8d,r8d
   14002c49a:	xor    edx,edx
   14002c49c:	xor    ecx,ecx
   14002c49e:	call   0x14001de30
   14002c4a3:	or     eax,0xffffffff
   14002c4a6:	jmp    0x14002c4c7
   14002c4a8:	mov    rcx,rdx
   14002c4ab:	call   0x140028e90
   14002c4b0:	nop
   14002c4b1:	mov    rdx,rbx
   14002c4b4:	mov    ecx,edi
   14002c4b6:	call   0x14002c2e0
   14002c4bb:	mov    edi,eax
   14002c4bd:	mov    rcx,rbx
   14002c4c0:	call   0x140028f40
   14002c4c5:	mov    eax,edi
   14002c4c7:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c4cc:	add    rsp,0x30
   14002c4d0:	pop    rdi
   14002c4d1:	ret    
   14002c4d2:	int3   
   14002c4d3:	int3   
   14002c4d4:	int3   
   14002c4d5:	int3   
   14002c4d6:	int3   
   14002c4d7:	int3   
   14002c4d8:	int3   
   14002c4d9:	int3   
   14002c4da:	int3   
   14002c4db:	int3   
   14002c4dc:	int3   
   14002c4dd:	int3   
   14002c4de:	int3   
   14002c4df:	int3   
   14002c4e0:	rex push rbp
   14002c4e2:	sub    rsp,0x30
   14002c4e6:	mov    rbp,rdx
   14002c4e9:	mov    rcx,QWORD PTR [rbp+0x48]
   14002c4ed:	call   0x140028f40
   14002c4f2:	add    rsp,0x30
   14002c4f6:	pop    rbp
   14002c4f7:	ret    
   14002c4f8:	int3   
   14002c4f9:	int3   
   14002c4fa:	int3   
   14002c4fb:	int3   
   14002c4fc:	int3   
   14002c4fd:	int3   
   14002c4fe:	int3   
   14002c4ff:	int3   
   14002c500:	rex push rdi
   14002c502:	sub    rsp,0x30
   14002c506:	test   rcx,rcx
   14002c509:	mov    rdi,rcx
   14002c50c:	jne    0x14002c536
   14002c50e:	call   0x14001b280
   14002c513:	xor    r9d,r9d
   14002c516:	xor    r8d,r8d
   14002c519:	xor    edx,edx
   14002c51b:	xor    ecx,ecx
   14002c51d:	mov    QWORD PTR [rsp+0x20],rdi
   14002c522:	mov    DWORD PTR [rax],0x16
   14002c528:	call   0x14001de30
   14002c52d:	or     eax,0xffffffff
   14002c530:	add    rsp,0x30
   14002c534:	pop    rdi
   14002c535:	ret    
   14002c536:	mov    eax,DWORD PTR [rcx+0x18]
   14002c539:	test   al,0x83
   14002c53b:	je     0x14002c672
   14002c541:	test   al,0x40
   14002c543:	jne    0x14002c672
   14002c549:	test   al,0x2
   14002c54b:	je     0x14002c55c
   14002c54d:	or     eax,0x20
   14002c550:	mov    DWORD PTR [rcx+0x18],eax
   14002c553:	or     eax,0xffffffff
   14002c556:	add    rsp,0x30
   14002c55a:	pop    rdi
   14002c55b:	ret    
   14002c55c:	or     eax,0x1
   14002c55f:	test   eax,0x10c
   14002c564:	mov    DWORD PTR [rcx+0x18],eax
   14002c567:	jne    0x14002c570
   14002c569:	call   0x140028c70
   14002c56e:	jmp    0x14002c577
   14002c570:	mov    rax,QWORD PTR [rcx+0x10]
   14002c574:	mov    QWORD PTR [rcx],rax
   14002c577:	mov    rcx,rdi
   14002c57a:	call   0x140028fb0
   14002c57f:	mov    r8d,DWORD PTR [rdi+0x24]
   14002c583:	mov    rdx,QWORD PTR [rdi+0x10]
   14002c587:	mov    ecx,eax
   14002c589:	call   0x14002f840
   14002c58e:	test   eax,eax
   14002c590:	mov    r11d,eax
   14002c593:	mov    DWORD PTR [rdi+0x8],eax
   14002c596:	je     0x14002c658
   14002c59c:	cmp    eax,0xffffffff
   14002c59f:	je     0x14002c658
   14002c5a5:	test   BYTE PTR [rdi+0x18],0x82
   14002c5a9:	jne    0x14002c624
   14002c5ab:	mov    rcx,rdi
   14002c5ae:	call   0x140028fb0
   14002c5b3:	cmp    eax,0xffffffff
   14002c5b6:	je     0x14002c60c
   14002c5b8:	mov    rcx,rdi
   14002c5bb:	call   0x140028fb0
   14002c5c0:	cmp    eax,0xfffffffe
   14002c5c3:	je     0x14002c60c
   14002c5c5:	mov    rcx,rdi
   14002c5c8:	mov    QWORD PTR [rsp+0x40],rbx
   14002c5cd:	mov    QWORD PTR [rsp+0x48],rsi
   14002c5d2:	call   0x140028fb0
   14002c5d7:	mov    rcx,rdi
   14002c5da:	lea    rsi,[rip+0x1b17f]        # 0x140047760
   14002c5e1:	movsxd rbx,eax
   14002c5e4:	sar    rbx,0x5
   14002c5e8:	call   0x140028fb0
   14002c5ed:	mov    r11d,eax
   14002c5f0:	and    r11d,0x1f
   14002c5f4:	lea    rax,[r11+r11*4]
   14002c5f8:	shl    rax,0x4
   14002c5fc:	add    rax,QWORD PTR [rsi+rbx*8]
   14002c600:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c605:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c60a:	jmp    0x14002c613
   14002c60c:	lea    rax,[rip+0x13d6d]        # 0x140040380
   14002c613:	movzx  eax,BYTE PTR [rax+0x8]
   14002c617:	and    al,0x82
   14002c619:	cmp    al,0x82
   14002c61b:	jne    0x14002c624
   14002c61d:	or     DWORD PTR [rdi+0x18],0x2000
   14002c624:	cmp    DWORD PTR [rdi+0x24],0x200
   14002c62b:	jne    0x14002c641
   14002c62d:	mov    eax,DWORD PTR [rdi+0x18]
   14002c630:	test   al,0x8
   14002c632:	je     0x14002c641
   14002c634:	bt     eax,0xa
   14002c638:	jb     0x14002c641
   14002c63a:	mov    DWORD PTR [rdi+0x24],0x1000
   14002c641:	mov    rcx,QWORD PTR [rdi]
   14002c644:	add    DWORD PTR [rdi+0x8],0xffffffff
   14002c648:	movzx  eax,BYTE PTR [rcx]
   14002c64b:	add    rcx,0x1
   14002c64f:	mov    QWORD PTR [rdi],rcx
   14002c652:	add    rsp,0x30
   14002c656:	pop    rdi
   14002c657:	ret    
   14002c658:	test   r11d,r11d
   14002c65b:	mov    eax,0x10
   14002c660:	mov    ecx,0x20
   14002c665:	cmovne eax,ecx
   14002c668:	mov    DWORD PTR [rdi+0x8],0x0
   14002c66f:	or     DWORD PTR [rdi+0x18],eax
   14002c672:	or     eax,0xffffffff
   14002c675:	add    rsp,0x30
   14002c679:	pop    rdi
   14002c67a:	ret    
   14002c67b:	int3   
   14002c67c:	int3   
   14002c67d:	int3   
   14002c67e:	int3   
   14002c67f:	int3   
   14002c680:	mov    rax,rsp
   14002c683:	mov    QWORD PTR [rax+0x10],rdx
   14002c687:	push   rdi
   14002c688:	sub    rsp,0x70
   14002c68c:	mov    QWORD PTR [rax+0x20],rbx
   14002c690:	mov    QWORD PTR [rax-0x18],rsi
   14002c694:	mov    QWORD PTR [rax-0x38],r15
   14002c698:	movzx  eax,WORD PTR [rcx+0xa]
   14002c69c:	mov    r9d,0x1f
   14002c6a2:	mov    esi,eax
   14002c6a4:	and    eax,0x8000
   14002c6a9:	mov    DWORD PTR [rsp+0x80],eax
   14002c6b0:	mov    eax,DWORD PTR [rcx+0x6]
   14002c6b3:	and    esi,0x7fff
   14002c6b9:	mov    DWORD PTR [rsp+0x20],eax
   14002c6bd:	mov    eax,DWORD PTR [rcx+0x2]
   14002c6c0:	sub    esi,0x3fff
   14002c6c6:	mov    DWORD PTR [rsp+0x24],eax
   14002c6ca:	movzx  eax,WORD PTR [rcx]
   14002c6cd:	shl    eax,0x10
   14002c6d0:	cmp    esi,0xffffc001
   14002c6d6:	mov    DWORD PTR [rsp+0x28],eax
   14002c6da:	jne    0x14002c716
   14002c6dc:	xor    edi,edi
   14002c6de:	mov    r9d,edi
   14002c6e1:	mov    rax,rdi
   14002c6e4:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14002c6e8:	jne    0x14002c6ff
   14002c6ea:	add    rax,0x1
   14002c6ee:	cmp    rax,0x3
   14002c6f2:	jl     0x14002c6e4
   14002c6f4:	mov    r15d,0x1f
   14002c6fa:	jmp    0x14002cccd
   14002c6ff:	mov    QWORD PTR [rsp+0x20],rdi
   14002c704:	mov    DWORD PTR [rsp+0x28],edi
   14002c708:	mov    edi,0x2
   14002c70d:	lea    r15d,[rdi+0x1d]
   14002c711:	jmp    0x14002cccd
   14002c716:	mov    QWORD PTR [rsp+0x68],rbp
   14002c71b:	lea    rcx,[rsp+0x20]
   14002c720:	mov    QWORD PTR [rsp+0x58],r12
   14002c725:	mov    rax,QWORD PTR [rcx]
   14002c728:	mov    QWORD PTR [rsp+0x50],r13
   14002c72d:	mov    QWORD PTR [rsp+0x48],r14
   14002c732:	mov    r14d,DWORD PTR [rip+0x14da7]        # 0x1400414e0
   14002c739:	mov    QWORD PTR [rsp+0x30],rax
   14002c73e:	mov    eax,DWORD PTR [rcx+0x8]
   14002c741:	mov    DWORD PTR [rsp+0x38],eax
   14002c745:	xor    edi,edi
   14002c747:	mov    eax,r14d
   14002c74a:	cdq    
   14002c74b:	mov    r11d,r9d
   14002c74e:	or     ebp,0xffffffff
   14002c751:	and    edx,r9d
   14002c754:	mov    r15d,esi
   14002c757:	mov    ebx,edi
   14002c759:	add    eax,edx
   14002c75b:	mov    r10d,eax
   14002c75e:	and    eax,r9d
   14002c761:	sar    r10d,0x5
   14002c765:	sub    eax,edx
   14002c767:	movsxd r12,r10d
   14002c76a:	sub    r11d,eax
   14002c76d:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14002c772:	bt     ecx,r11d
   14002c776:	jae    0x14002c829
   14002c77c:	mov    ecx,r11d
   14002c77f:	mov    eax,ebp
   14002c781:	movsxd rdx,r10d
   14002c784:	shl    eax,cl
   14002c786:	not    eax
   14002c788:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14002c78c:	jne    0x14002c7b2
   14002c78e:	lea    eax,[r10+0x1]
   14002c792:	movsxd rcx,eax
   14002c795:	cmp    rcx,0x3
   14002c799:	jge    0x14002c829
   14002c79f:	nop
   14002c7a0:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002c7a4:	jne    0x14002c7b2
   14002c7a6:	add    rcx,0x1
   14002c7aa:	cmp    rcx,0x3
   14002c7ae:	jl     0x14002c7a0
   14002c7b0:	jmp    0x14002c829
   14002c7b2:	mov    ecx,r9d
   14002c7b5:	lea    eax,[r14-0x1]
   14002c7b9:	cdq    
   14002c7ba:	and    edx,r9d
   14002c7bd:	add    eax,edx
   14002c7bf:	mov    r8d,eax
   14002c7c2:	and    eax,r9d
   14002c7c5:	sub    eax,edx
   14002c7c7:	sar    r8d,0x5
   14002c7cb:	mov    edx,0x1
   14002c7d0:	sub    ecx,eax
   14002c7d2:	movsxd r9,r8d
   14002c7d5:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14002c7da:	shl    edx,cl
   14002c7dc:	lea    ecx,[rax+rdx*1]
   14002c7df:	cmp    ecx,eax
   14002c7e1:	jb     0x14002c7e7
   14002c7e3:	cmp    ecx,edx
   14002c7e5:	jae    0x14002c7ec
   14002c7e7:	mov    ebx,0x1
   14002c7ec:	lea    eax,[r8-0x1]
   14002c7f0:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14002c7f5:	test   eax,eax
   14002c7f7:	movsxd rdx,eax
   14002c7fa:	js     0x14002c829
   14002c7fc:	data16 data16 xchg ax,ax
   14002c800:	test   ebx,ebx
   14002c802:	je     0x14002c829
   14002c804:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002c808:	mov    ebx,edi
   14002c80a:	lea    r8d,[rax+0x1]
   14002c80e:	cmp    r8d,eax
   14002c811:	jb     0x14002c819
   14002c813:	cmp    r8d,0x1
   14002c817:	jae    0x14002c81e
   14002c819:	mov    ebx,0x1
   14002c81e:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002c823:	sub    rdx,0x1
   14002c827:	jns    0x14002c800
   14002c829:	mov    ecx,r11d
   14002c82c:	mov    eax,ebp
   14002c82e:	mov    r13d,0x3
   14002c834:	shl    eax,cl
   14002c836:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14002c83b:	lea    eax,[r10+0x1]
   14002c83f:	movsxd rdx,eax
   14002c842:	cmp    rdx,r13
   14002c845:	jge    0x14002c85d
   14002c847:	lea    rcx,[rsp+rdx*4+0x20]
   14002c84c:	mov    r8,r13
   14002c84f:	sub    r8,rdx
   14002c852:	xor    edx,edx
   14002c854:	shl    r8,0x2
   14002c858:	call   0x14001b520
   14002c85d:	test   ebx,ebx
   14002c85f:	je     0x14002c864
   14002c861:	add    esi,0x1
   14002c864:	mov    edx,DWORD PTR [rip+0x14c72]        # 0x1400414dc
   14002c86a:	mov    eax,edx
   14002c86c:	sub    eax,r14d
   14002c86f:	cmp    esi,eax
   14002c871:	jge    0x14002c895
   14002c873:	mov    rdx,QWORD PTR [rsp+0x88]
   14002c87b:	mov    QWORD PTR [rsp+0x20],rdi
   14002c880:	mov    DWORD PTR [rsp+0x28],edi
   14002c884:	mov    r9d,edi
   14002c887:	mov    edi,0x2
   14002c88c:	lea    r15d,[rdi+0x1d]
   14002c890:	jmp    0x14002ccb9
   14002c895:	cmp    esi,edx
   14002c897:	jg     0x14002cb1d
   14002c89d:	sub    edx,r15d
   14002c8a0:	lea    rax,[rsp+0x30]
   14002c8a5:	mov    r10d,ebp
   14002c8a8:	mov    rcx,QWORD PTR [rax]
   14002c8ab:	mov    esi,0x20
   14002c8b0:	mov    r9d,edi
   14002c8b3:	mov    QWORD PTR [rsp+0x20],rcx
   14002c8b8:	mov    ecx,DWORD PTR [rax+0x8]
   14002c8bb:	mov    eax,edx
   14002c8bd:	cdq    
   14002c8be:	mov    DWORD PTR [rsp+0x28],ecx
   14002c8c2:	mov    ebx,esi
   14002c8c4:	and    edx,0x1f
   14002c8c7:	mov    r8,rdi
   14002c8ca:	add    eax,edx
   14002c8cc:	mov    r12d,eax
   14002c8cf:	and    eax,0x1f
   14002c8d2:	sub    eax,edx
   14002c8d4:	sar    r12d,0x5
   14002c8d8:	mov    ecx,eax
   14002c8da:	mov    r11d,eax
   14002c8dd:	shl    r10d,cl
   14002c8e0:	sub    ebx,eax
   14002c8e2:	not    r10d
   14002c8e5:	data16 data16 xchg ax,ax
   14002c8e9:	data16 xchg ax,ax
   14002c8ec:	data16 data16 xchg ax,ax
   14002c8f0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002c8f5:	mov    ecx,r11d
   14002c8f8:	add    r8,0x1
   14002c8fc:	mov    eax,edx
   14002c8fe:	shr    edx,cl
   14002c900:	mov    ecx,ebx
   14002c902:	or     edx,r9d
   14002c905:	and    eax,r10d
   14002c908:	mov    DWORD PTR [rsp+0x90],eax
   14002c90f:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002c914:	mov    r9d,DWORD PTR [rsp+0x90]
   14002c91c:	shl    r9d,cl
   14002c91f:	cmp    r8,r13
   14002c922:	jl     0x14002c8f0
   14002c924:	movsxd r8,r12d
   14002c927:	lea    rdx,[rsp+0x28]
   14002c92c:	mov    ebx,0x2
   14002c931:	lea    rax,[r8*4+0x0]
   14002c939:	mov    rcx,rbx
   14002c93c:	sub    rdx,rax
   14002c93f:	nop
   14002c940:	cmp    rcx,r8
   14002c943:	jl     0x14002c94d
   14002c945:	mov    eax,DWORD PTR [rdx]
   14002c947:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002c94b:	jmp    0x14002c951
   14002c94d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14002c951:	sub    rdx,0x4
   14002c955:	sub    rcx,0x1
   14002c959:	jns    0x14002c940
   14002c95b:	mov    r8d,DWORD PTR [rip+0x14b7e]        # 0x1400414e0
   14002c962:	mov    r15d,0x1f
   14002c968:	mov    eax,r8d
   14002c96b:	mov    r12d,r15d
   14002c96e:	cdq    
   14002c96f:	and    edx,0x1f
   14002c972:	add    eax,edx
   14002c974:	mov    r11d,eax
   14002c977:	and    eax,0x1f
   14002c97a:	sar    r11d,0x5
   14002c97e:	sub    eax,edx
   14002c980:	movsxd r14,r11d
   14002c983:	sub    r12d,eax
   14002c986:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002c98b:	bt     ecx,r12d
   14002c98f:	jae    0x14002ca41
   14002c995:	mov    ecx,r12d
   14002c998:	mov    eax,ebp
   14002c99a:	movsxd rdx,r11d
   14002c99d:	shl    eax,cl
   14002c99f:	not    eax
   14002c9a1:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14002c9a5:	jne    0x14002c9c8
   14002c9a7:	lea    eax,[r11+0x1]
   14002c9ab:	movsxd rcx,eax
   14002c9ae:	cmp    rcx,r13
   14002c9b1:	jge    0x14002ca41
   14002c9b7:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14002c9bb:	jne    0x14002c9c8
   14002c9bd:	add    rcx,0x1
   14002c9c1:	cmp    rcx,r13
   14002c9c4:	jl     0x14002c9b7
   14002c9c6:	jmp    0x14002ca41
   14002c9c8:	lea    eax,[r8-0x1]
   14002c9cc:	mov    ecx,r15d
   14002c9cf:	mov    r8d,0x1
   14002c9d5:	cdq    
   14002c9d6:	and    edx,r15d
   14002c9d9:	add    eax,edx
   14002c9db:	mov    r9d,eax
   14002c9de:	and    eax,r15d
   14002c9e1:	sub    eax,edx
   14002c9e3:	sar    r9d,0x5
   14002c9e7:	sub    ecx,eax
   14002c9e9:	movsxd r10,r9d
   14002c9ec:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14002c9f1:	shl    r8d,cl
   14002c9f4:	mov    ecx,edi
   14002c9f6:	lea    edx,[rax+r8*1]
   14002c9fa:	cmp    edx,eax
   14002c9fc:	jb     0x14002ca03
   14002c9fe:	cmp    edx,r8d
   14002ca01:	jae    0x14002ca08
   14002ca03:	mov    ecx,0x1
   14002ca08:	lea    eax,[r9-0x1]
   14002ca0c:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14002ca11:	test   eax,eax
   14002ca13:	movsxd rdx,eax
   14002ca16:	js     0x14002ca41
   14002ca18:	test   ecx,ecx
   14002ca1a:	je     0x14002ca41
   14002ca1c:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002ca20:	mov    ecx,edi
   14002ca22:	lea    r8d,[rax+0x1]
   14002ca26:	cmp    r8d,eax
   14002ca29:	jb     0x14002ca31
   14002ca2b:	cmp    r8d,0x1
   14002ca2f:	jae    0x14002ca36
   14002ca31:	mov    ecx,0x1
   14002ca36:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002ca3b:	sub    rdx,0x1
   14002ca3f:	jns    0x14002ca18
   14002ca41:	mov    ecx,r12d
   14002ca44:	mov    eax,ebp
   14002ca46:	shl    eax,cl
   14002ca48:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002ca4d:	lea    eax,[r11+0x1]
   14002ca51:	movsxd rdx,eax
   14002ca54:	cmp    rdx,r13
   14002ca57:	jge    0x14002ca6f
   14002ca59:	sub    r13,rdx
   14002ca5c:	lea    rcx,[rsp+rdx*4+0x20]
   14002ca61:	xor    edx,edx
   14002ca63:	shl    r13,0x2
   14002ca67:	mov    r8,r13
   14002ca6a:	call   0x14001b520
   14002ca6f:	mov    eax,DWORD PTR [rip+0x14a6f]        # 0x1400414e4
   14002ca75:	mov    r9d,edi
   14002ca78:	mov    r8,rdi
   14002ca7b:	add    eax,0x1
   14002ca7e:	cdq    
   14002ca7f:	and    edx,r15d
   14002ca82:	add    eax,edx
   14002ca84:	mov    r11d,eax
   14002ca87:	and    eax,r15d
   14002ca8a:	sub    eax,edx
   14002ca8c:	sar    r11d,0x5
   14002ca90:	mov    ecx,eax
   14002ca92:	mov    r10d,eax
   14002ca95:	shl    ebp,cl
   14002ca97:	sub    esi,eax
   14002ca99:	not    ebp
   14002ca9b:	xchg   ax,ax
   14002ca9d:	data16 xchg ax,ax
   14002caa0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002caa5:	mov    ecx,r10d
   14002caa8:	mov    eax,ebp
   14002caaa:	and    eax,edx
   14002caac:	shr    edx,cl
   14002caae:	mov    ecx,esi
   14002cab0:	or     edx,r9d
   14002cab3:	mov    DWORD PTR [rsp+0x90],eax
   14002caba:	add    r8,0x1
   14002cabe:	mov    r9d,DWORD PTR [rsp+0x90]
   14002cac6:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002cacb:	shl    r9d,cl
   14002cace:	cmp    r8,0x3
   14002cad2:	jl     0x14002caa0
   14002cad4:	movsxd r8,r11d
   14002cad7:	lea    rdx,[rsp+0x28]
   14002cadc:	mov    rcx,rbx
   14002cadf:	lea    rax,[r8*4+0x0]
   14002cae7:	sub    rdx,rax
   14002caea:	data16 xchg ax,ax
   14002caed:	data16 xchg ax,ax
   14002caf0:	cmp    rcx,r8
   14002caf3:	jl     0x14002cafd
   14002caf5:	mov    eax,DWORD PTR [rdx]
   14002caf7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002cafb:	jmp    0x14002cb01
   14002cafd:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14002cb01:	sub    rdx,0x4
   14002cb05:	sub    rcx,0x1
   14002cb09:	jns    0x14002caf0
   14002cb0b:	mov    rdx,QWORD PTR [rsp+0x88]
   14002cb13:	mov    r9d,edi
   14002cb16:	mov    edi,ebx
   14002cb18:	jmp    0x14002ccb9
   14002cb1d:	cmp    esi,DWORD PTR [rip+0x149b5]        # 0x1400414d8
   14002cb23:	jl     0x14002cc01
   14002cb29:	mov    eax,DWORD PTR [rip+0x149b5]        # 0x1400414e4
   14002cb2f:	mov    esi,0x20
   14002cb34:	mov    QWORD PTR [rsp+0x20],rdi
   14002cb39:	bts    DWORD PTR [rsp+0x20],0x1f
   14002cb3f:	cdq    
   14002cb40:	mov    DWORD PTR [rsp+0x28],edi
   14002cb44:	and    edx,0x1f
   14002cb47:	mov    r9d,edi
   14002cb4a:	mov    r8,rdi
   14002cb4d:	add    eax,edx
   14002cb4f:	mov    r11d,eax
   14002cb52:	and    eax,0x1f
   14002cb55:	sub    eax,edx
   14002cb57:	sar    r11d,0x5
   14002cb5b:	mov    ecx,eax
   14002cb5d:	mov    r10d,eax
   14002cb60:	shl    ebp,cl
   14002cb62:	sub    esi,eax
   14002cb64:	not    ebp
   14002cb66:	data16 data16 xchg ax,ax
   14002cb6a:	data16 xchg ax,ax
   14002cb6d:	data16 xchg ax,ax
   14002cb70:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002cb75:	mov    ecx,r10d
   14002cb78:	mov    eax,ebp
   14002cb7a:	and    eax,edx
   14002cb7c:	shr    edx,cl
   14002cb7e:	mov    ecx,esi
   14002cb80:	or     edx,r9d
   14002cb83:	mov    DWORD PTR [rsp+0x90],eax
   14002cb8a:	add    r8,0x1
   14002cb8e:	mov    r9d,DWORD PTR [rsp+0x90]
   14002cb96:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002cb9b:	shl    r9d,cl
   14002cb9e:	cmp    r8,r13
   14002cba1:	jl     0x14002cb70
   14002cba3:	movsxd rdx,r11d
   14002cba6:	lea    rcx,[rsp+0x28]
   14002cbab:	mov    ebx,0x2
   14002cbb0:	lea    rax,[rdx*4+0x0]
   14002cbb8:	sub    rcx,rax
   14002cbbb:	xchg   ax,ax
   14002cbbd:	data16 xchg ax,ax
   14002cbc0:	cmp    rbx,rdx
   14002cbc3:	jl     0x14002cbcd
   14002cbc5:	mov    eax,DWORD PTR [rcx]
   14002cbc7:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14002cbcb:	jmp    0x14002cbd1
   14002cbcd:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14002cbd1:	sub    rcx,0x4
   14002cbd5:	sub    rbx,0x1
   14002cbd9:	jns    0x14002cbc0
   14002cbdb:	mov    ecx,DWORD PTR [rip+0x148f7]        # 0x1400414d8
   14002cbe1:	mov    r9d,DWORD PTR [rip+0x14904]        # 0x1400414ec
   14002cbe8:	mov    rdx,QWORD PTR [rsp+0x88]
   14002cbf0:	mov    edi,0x1
   14002cbf5:	add    r9d,ecx
   14002cbf8:	lea    r15d,[rdi+0x1e]
   14002cbfc:	jmp    0x14002ccb9
   14002cc01:	mov    eax,DWORD PTR [rip+0x148dd]        # 0x1400414e4
   14002cc07:	mov    r9d,DWORD PTR [rip+0x148de]        # 0x1400414ec
   14002cc0e:	btr    DWORD PTR [rsp+0x20],0x1f
   14002cc14:	cdq    
   14002cc15:	add    r9d,esi
   14002cc18:	mov    esi,0x20
   14002cc1d:	and    edx,0x1f
   14002cc20:	mov    r10d,edi
   14002cc23:	mov    r8,rdi
   14002cc26:	add    eax,edx
   14002cc28:	mov    r12d,eax
   14002cc2b:	and    eax,0x1f
   14002cc2e:	sub    eax,edx
   14002cc30:	sar    r12d,0x5
   14002cc34:	mov    ecx,eax
   14002cc36:	mov    r11d,eax
   14002cc39:	shl    ebp,cl
   14002cc3b:	sub    esi,eax
   14002cc3d:	not    ebp
   14002cc3f:	nop
   14002cc40:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002cc45:	mov    ecx,r11d
   14002cc48:	mov    eax,ebp
   14002cc4a:	and    eax,edx
   14002cc4c:	shr    edx,cl
   14002cc4e:	mov    ecx,esi
   14002cc50:	or     edx,r10d
   14002cc53:	mov    DWORD PTR [rsp+0x90],eax
   14002cc5a:	add    r8,0x1
   14002cc5e:	mov    r10d,DWORD PTR [rsp+0x90]
   14002cc66:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002cc6b:	shl    r10d,cl
   14002cc6e:	cmp    r8,r13
   14002cc71:	jl     0x14002cc40
   14002cc73:	movsxd rdx,r12d
   14002cc76:	lea    rcx,[rsp+0x28]
   14002cc7b:	mov    ebx,0x2
   14002cc80:	lea    rax,[rdx*4+0x0]
   14002cc88:	sub    rcx,rax
   14002cc8b:	xchg   ax,ax
   14002cc8d:	data16 xchg ax,ax
   14002cc90:	cmp    rbx,rdx
   14002cc93:	jl     0x14002cc9d
   14002cc95:	mov    eax,DWORD PTR [rcx]
   14002cc97:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14002cc9b:	jmp    0x14002cca1
   14002cc9d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14002cca1:	sub    rcx,0x4
   14002cca5:	sub    rbx,0x1
   14002cca9:	jns    0x14002cc90
   14002ccab:	mov    rdx,QWORD PTR [rsp+0x88]
   14002ccb3:	mov    r15d,0x1f
   14002ccb9:	mov    r13,QWORD PTR [rsp+0x50]
   14002ccbe:	mov    r12,QWORD PTR [rsp+0x58]
   14002ccc3:	mov    rbp,QWORD PTR [rsp+0x68]
   14002ccc8:	mov    r14,QWORD PTR [rsp+0x48]
   14002cccd:	sub    r15d,DWORD PTR [rip+0x14810]        # 0x1400414e4
   14002ccd4:	mov    eax,DWORD PTR [rip+0x1480e]        # 0x1400414e8
   14002ccda:	mov    rsi,QWORD PTR [rsp+0x60]
   14002ccdf:	mov    rbx,QWORD PTR [rsp+0x98]
   14002cce7:	movzx  ecx,r15b
   14002cceb:	mov    r15,QWORD PTR [rsp+0x40]
   14002ccf0:	shl    r9d,cl
   14002ccf3:	neg    DWORD PTR [rsp+0x80]
   14002ccfa:	sbb    ecx,ecx
   14002ccfc:	and    ecx,0x80000000
   14002cd02:	or     r9d,ecx
   14002cd05:	or     r9d,DWORD PTR [rsp+0x20]
   14002cd0a:	cmp    eax,0x40
   14002cd0d:	jne    0x14002cd21
   14002cd0f:	mov    ecx,DWORD PTR [rsp+0x24]
   14002cd13:	mov    DWORD PTR [rdx+0x4],r9d
   14002cd17:	mov    eax,edi
   14002cd19:	mov    DWORD PTR [rdx],ecx
   14002cd1b:	add    rsp,0x70
   14002cd1f:	pop    rdi
   14002cd20:	ret    
   14002cd21:	cmp    eax,0x20
   14002cd24:	jne    0x14002cd29
   14002cd26:	mov    DWORD PTR [rdx],r9d
   14002cd29:	mov    eax,edi
   14002cd2b:	add    rsp,0x70
   14002cd2f:	pop    rdi
   14002cd30:	ret    
   14002cd31:	int3   
   14002cd32:	int3   
   14002cd33:	int3   
   14002cd34:	int3   
   14002cd35:	int3   
   14002cd36:	int3   
   14002cd37:	int3   
   14002cd38:	int3   
   14002cd39:	int3   
   14002cd3a:	int3   
   14002cd3b:	int3   
   14002cd3c:	int3   
   14002cd3d:	int3   
   14002cd3e:	int3   
   14002cd3f:	int3   
   14002cd40:	mov    rax,rsp
   14002cd43:	mov    QWORD PTR [rax+0x10],rdx
   14002cd47:	push   rdi
   14002cd48:	sub    rsp,0x70
   14002cd4c:	mov    QWORD PTR [rax+0x20],rbx
   14002cd50:	mov    QWORD PTR [rax-0x18],rsi
   14002cd54:	mov    QWORD PTR [rax-0x38],r15
   14002cd58:	movzx  eax,WORD PTR [rcx+0xa]
   14002cd5c:	mov    r9d,0x1f
   14002cd62:	mov    esi,eax
   14002cd64:	and    eax,0x8000
   14002cd69:	mov    DWORD PTR [rsp+0x80],eax
   14002cd70:	mov    eax,DWORD PTR [rcx+0x6]
   14002cd73:	and    esi,0x7fff
   14002cd79:	mov    DWORD PTR [rsp+0x20],eax
   14002cd7d:	mov    eax,DWORD PTR [rcx+0x2]
   14002cd80:	sub    esi,0x3fff
   14002cd86:	mov    DWORD PTR [rsp+0x24],eax
   14002cd8a:	movzx  eax,WORD PTR [rcx]
   14002cd8d:	shl    eax,0x10
   14002cd90:	cmp    esi,0xffffc001
   14002cd96:	mov    DWORD PTR [rsp+0x28],eax
   14002cd9a:	jne    0x14002cdd6
   14002cd9c:	xor    edi,edi
   14002cd9e:	mov    r9d,edi
   14002cda1:	mov    rax,rdi
   14002cda4:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14002cda8:	jne    0x14002cdbf
   14002cdaa:	add    rax,0x1
   14002cdae:	cmp    rax,0x3
   14002cdb2:	jl     0x14002cda4
   14002cdb4:	mov    r15d,0x1f
   14002cdba:	jmp    0x14002d38d
   14002cdbf:	mov    QWORD PTR [rsp+0x20],rdi
   14002cdc4:	mov    DWORD PTR [rsp+0x28],edi
   14002cdc8:	mov    edi,0x2
   14002cdcd:	lea    r15d,[rdi+0x1d]
   14002cdd1:	jmp    0x14002d38d
   14002cdd6:	mov    QWORD PTR [rsp+0x68],rbp
   14002cddb:	lea    rcx,[rsp+0x20]
   14002cde0:	mov    QWORD PTR [rsp+0x58],r12
   14002cde5:	mov    rax,QWORD PTR [rcx]
   14002cde8:	mov    QWORD PTR [rsp+0x50],r13
   14002cded:	mov    QWORD PTR [rsp+0x48],r14
   14002cdf2:	mov    r14d,DWORD PTR [rip+0x146ff]        # 0x1400414f8
   14002cdf9:	mov    QWORD PTR [rsp+0x30],rax
   14002cdfe:	mov    eax,DWORD PTR [rcx+0x8]
   14002ce01:	mov    DWORD PTR [rsp+0x38],eax
   14002ce05:	xor    edi,edi
   14002ce07:	mov    eax,r14d
   14002ce0a:	cdq    
   14002ce0b:	mov    r11d,r9d
   14002ce0e:	or     ebp,0xffffffff
   14002ce11:	and    edx,r9d
   14002ce14:	mov    r15d,esi
   14002ce17:	mov    ebx,edi
   14002ce19:	add    eax,edx
   14002ce1b:	mov    r10d,eax
   14002ce1e:	and    eax,r9d
   14002ce21:	sar    r10d,0x5
   14002ce25:	sub    eax,edx
   14002ce27:	movsxd r12,r10d
   14002ce2a:	sub    r11d,eax
   14002ce2d:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14002ce32:	bt     ecx,r11d
   14002ce36:	jae    0x14002cee9
   14002ce3c:	mov    ecx,r11d
   14002ce3f:	mov    eax,ebp
   14002ce41:	movsxd rdx,r10d
   14002ce44:	shl    eax,cl
   14002ce46:	not    eax
   14002ce48:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14002ce4c:	jne    0x14002ce72
   14002ce4e:	lea    eax,[r10+0x1]
   14002ce52:	movsxd rcx,eax
   14002ce55:	cmp    rcx,0x3
   14002ce59:	jge    0x14002cee9
   14002ce5f:	nop
   14002ce60:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002ce64:	jne    0x14002ce72
   14002ce66:	add    rcx,0x1
   14002ce6a:	cmp    rcx,0x3
   14002ce6e:	jl     0x14002ce60
   14002ce70:	jmp    0x14002cee9
   14002ce72:	mov    ecx,r9d
   14002ce75:	lea    eax,[r14-0x1]
   14002ce79:	cdq    
   14002ce7a:	and    edx,r9d
   14002ce7d:	add    eax,edx
   14002ce7f:	mov    r8d,eax
   14002ce82:	and    eax,r9d
   14002ce85:	sub    eax,edx
   14002ce87:	sar    r8d,0x5
   14002ce8b:	mov    edx,0x1
   14002ce90:	sub    ecx,eax
   14002ce92:	movsxd r9,r8d
   14002ce95:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14002ce9a:	shl    edx,cl
   14002ce9c:	lea    ecx,[rax+rdx*1]
   14002ce9f:	cmp    ecx,eax
   14002cea1:	jb     0x14002cea7
   14002cea3:	cmp    ecx,edx
   14002cea5:	jae    0x14002ceac
   14002cea7:	mov    ebx,0x1
   14002ceac:	lea    eax,[r8-0x1]
   14002ceb0:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14002ceb5:	test   eax,eax
   14002ceb7:	movsxd rdx,eax
   14002ceba:	js     0x14002cee9
   14002cebc:	data16 data16 xchg ax,ax
   14002cec0:	test   ebx,ebx
   14002cec2:	je     0x14002cee9
   14002cec4:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002cec8:	mov    ebx,edi
   14002ceca:	lea    r8d,[rax+0x1]
   14002cece:	cmp    r8d,eax
   14002ced1:	jb     0x14002ced9
   14002ced3:	cmp    r8d,0x1
   14002ced7:	jae    0x14002cede
   14002ced9:	mov    ebx,0x1
   14002cede:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002cee3:	sub    rdx,0x1
   14002cee7:	jns    0x14002cec0
   14002cee9:	mov    ecx,r11d
   14002ceec:	mov    eax,ebp
   14002ceee:	mov    r13d,0x3
   14002cef4:	shl    eax,cl
   14002cef6:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14002cefb:	lea    eax,[r10+0x1]
   14002ceff:	movsxd rdx,eax
   14002cf02:	cmp    rdx,r13
   14002cf05:	jge    0x14002cf1d
   14002cf07:	lea    rcx,[rsp+rdx*4+0x20]
   14002cf0c:	mov    r8,r13
   14002cf0f:	sub    r8,rdx
   14002cf12:	xor    edx,edx
   14002cf14:	shl    r8,0x2
   14002cf18:	call   0x14001b520
   14002cf1d:	test   ebx,ebx
   14002cf1f:	je     0x14002cf24
   14002cf21:	add    esi,0x1
   14002cf24:	mov    edx,DWORD PTR [rip+0x145ca]        # 0x1400414f4
   14002cf2a:	mov    eax,edx
   14002cf2c:	sub    eax,r14d
   14002cf2f:	cmp    esi,eax
   14002cf31:	jge    0x14002cf55
   14002cf33:	mov    rdx,QWORD PTR [rsp+0x88]
   14002cf3b:	mov    QWORD PTR [rsp+0x20],rdi
   14002cf40:	mov    DWORD PTR [rsp+0x28],edi
   14002cf44:	mov    r9d,edi
   14002cf47:	mov    edi,0x2
   14002cf4c:	lea    r15d,[rdi+0x1d]
   14002cf50:	jmp    0x14002d379
   14002cf55:	cmp    esi,edx
   14002cf57:	jg     0x14002d1dd
   14002cf5d:	sub    edx,r15d
   14002cf60:	lea    rax,[rsp+0x30]
   14002cf65:	mov    r10d,ebp
   14002cf68:	mov    rcx,QWORD PTR [rax]
   14002cf6b:	mov    esi,0x20
   14002cf70:	mov    r9d,edi
   14002cf73:	mov    QWORD PTR [rsp+0x20],rcx
   14002cf78:	mov    ecx,DWORD PTR [rax+0x8]
   14002cf7b:	mov    eax,edx
   14002cf7d:	cdq    
   14002cf7e:	mov    DWORD PTR [rsp+0x28],ecx
   14002cf82:	mov    ebx,esi
   14002cf84:	and    edx,0x1f
   14002cf87:	mov    r8,rdi
   14002cf8a:	add    eax,edx
   14002cf8c:	mov    r12d,eax
   14002cf8f:	and    eax,0x1f
   14002cf92:	sub    eax,edx
   14002cf94:	sar    r12d,0x5
   14002cf98:	mov    ecx,eax
   14002cf9a:	mov    r11d,eax
   14002cf9d:	shl    r10d,cl
   14002cfa0:	sub    ebx,eax
   14002cfa2:	not    r10d
   14002cfa5:	data16 data16 xchg ax,ax
   14002cfa9:	data16 xchg ax,ax
   14002cfac:	data16 data16 xchg ax,ax
   14002cfb0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002cfb5:	mov    ecx,r11d
   14002cfb8:	add    r8,0x1
   14002cfbc:	mov    eax,edx
   14002cfbe:	shr    edx,cl
   14002cfc0:	mov    ecx,ebx
   14002cfc2:	or     edx,r9d
   14002cfc5:	and    eax,r10d
   14002cfc8:	mov    DWORD PTR [rsp+0x90],eax
   14002cfcf:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002cfd4:	mov    r9d,DWORD PTR [rsp+0x90]
   14002cfdc:	shl    r9d,cl
   14002cfdf:	cmp    r8,r13
   14002cfe2:	jl     0x14002cfb0
   14002cfe4:	movsxd r8,r12d
   14002cfe7:	lea    rdx,[rsp+0x28]
   14002cfec:	mov    ebx,0x2
   14002cff1:	lea    rax,[r8*4+0x0]
   14002cff9:	mov    rcx,rbx
   14002cffc:	sub    rdx,rax
   14002cfff:	nop
   14002d000:	cmp    rcx,r8
   14002d003:	jl     0x14002d00d
   14002d005:	mov    eax,DWORD PTR [rdx]
   14002d007:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002d00b:	jmp    0x14002d011
   14002d00d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14002d011:	sub    rdx,0x4
   14002d015:	sub    rcx,0x1
   14002d019:	jns    0x14002d000
   14002d01b:	mov    r8d,DWORD PTR [rip+0x144d6]        # 0x1400414f8
   14002d022:	mov    r15d,0x1f
   14002d028:	mov    eax,r8d
   14002d02b:	mov    r12d,r15d
   14002d02e:	cdq    
   14002d02f:	and    edx,0x1f
   14002d032:	add    eax,edx
   14002d034:	mov    r11d,eax
   14002d037:	and    eax,0x1f
   14002d03a:	sar    r11d,0x5
   14002d03e:	sub    eax,edx
   14002d040:	movsxd r14,r11d
   14002d043:	sub    r12d,eax
   14002d046:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002d04b:	bt     ecx,r12d
   14002d04f:	jae    0x14002d101
   14002d055:	mov    ecx,r12d
   14002d058:	mov    eax,ebp
   14002d05a:	movsxd rdx,r11d
   14002d05d:	shl    eax,cl
   14002d05f:	not    eax
   14002d061:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14002d065:	jne    0x14002d088
   14002d067:	lea    eax,[r11+0x1]
   14002d06b:	movsxd rcx,eax
   14002d06e:	cmp    rcx,r13
   14002d071:	jge    0x14002d101
   14002d077:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14002d07b:	jne    0x14002d088
   14002d07d:	add    rcx,0x1
   14002d081:	cmp    rcx,r13
   14002d084:	jl     0x14002d077
   14002d086:	jmp    0x14002d101
   14002d088:	lea    eax,[r8-0x1]
   14002d08c:	mov    ecx,r15d
   14002d08f:	mov    r8d,0x1
   14002d095:	cdq    
   14002d096:	and    edx,r15d
   14002d099:	add    eax,edx
   14002d09b:	mov    r9d,eax
   14002d09e:	and    eax,r15d
   14002d0a1:	sub    eax,edx
   14002d0a3:	sar    r9d,0x5
   14002d0a7:	sub    ecx,eax
   14002d0a9:	movsxd r10,r9d
   14002d0ac:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14002d0b1:	shl    r8d,cl
   14002d0b4:	mov    ecx,edi
   14002d0b6:	lea    edx,[rax+r8*1]
   14002d0ba:	cmp    edx,eax
   14002d0bc:	jb     0x14002d0c3
   14002d0be:	cmp    edx,r8d
   14002d0c1:	jae    0x14002d0c8
   14002d0c3:	mov    ecx,0x1
   14002d0c8:	lea    eax,[r9-0x1]
   14002d0cc:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14002d0d1:	test   eax,eax
   14002d0d3:	movsxd rdx,eax
   14002d0d6:	js     0x14002d101
   14002d0d8:	test   ecx,ecx
   14002d0da:	je     0x14002d101
   14002d0dc:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002d0e0:	mov    ecx,edi
   14002d0e2:	lea    r8d,[rax+0x1]
   14002d0e6:	cmp    r8d,eax
   14002d0e9:	jb     0x14002d0f1
   14002d0eb:	cmp    r8d,0x1
   14002d0ef:	jae    0x14002d0f6
   14002d0f1:	mov    ecx,0x1
   14002d0f6:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002d0fb:	sub    rdx,0x1
   14002d0ff:	jns    0x14002d0d8
   14002d101:	mov    ecx,r12d
   14002d104:	mov    eax,ebp
   14002d106:	shl    eax,cl
   14002d108:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002d10d:	lea    eax,[r11+0x1]
   14002d111:	movsxd rdx,eax
   14002d114:	cmp    rdx,r13
   14002d117:	jge    0x14002d12f
   14002d119:	sub    r13,rdx
   14002d11c:	lea    rcx,[rsp+rdx*4+0x20]
   14002d121:	xor    edx,edx
   14002d123:	shl    r13,0x2
   14002d127:	mov    r8,r13
   14002d12a:	call   0x14001b520
   14002d12f:	mov    eax,DWORD PTR [rip+0x143c7]        # 0x1400414fc
   14002d135:	mov    r9d,edi
   14002d138:	mov    r8,rdi
   14002d13b:	add    eax,0x1
   14002d13e:	cdq    
   14002d13f:	and    edx,r15d
   14002d142:	add    eax,edx
   14002d144:	mov    r11d,eax
   14002d147:	and    eax,r15d
   14002d14a:	sub    eax,edx
   14002d14c:	sar    r11d,0x5
   14002d150:	mov    ecx,eax
   14002d152:	mov    r10d,eax
   14002d155:	shl    ebp,cl
   14002d157:	sub    esi,eax
   14002d159:	not    ebp
   14002d15b:	xchg   ax,ax
   14002d15d:	data16 xchg ax,ax
   14002d160:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002d165:	mov    ecx,r10d
   14002d168:	mov    eax,ebp
   14002d16a:	and    eax,edx
   14002d16c:	shr    edx,cl
   14002d16e:	mov    ecx,esi
   14002d170:	or     edx,r9d
   14002d173:	mov    DWORD PTR [rsp+0x90],eax
   14002d17a:	add    r8,0x1
   14002d17e:	mov    r9d,DWORD PTR [rsp+0x90]
   14002d186:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002d18b:	shl    r9d,cl
   14002d18e:	cmp    r8,0x3
   14002d192:	jl     0x14002d160
   14002d194:	movsxd r8,r11d
   14002d197:	lea    rdx,[rsp+0x28]
   14002d19c:	mov    rcx,rbx
   14002d19f:	lea    rax,[r8*4+0x0]
   14002d1a7:	sub    rdx,rax
   14002d1aa:	data16 xchg ax,ax
   14002d1ad:	data16 xchg ax,ax
   14002d1b0:	cmp    rcx,r8
   14002d1b3:	jl     0x14002d1bd
   14002d1b5:	mov    eax,DWORD PTR [rdx]
   14002d1b7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002d1bb:	jmp    0x14002d1c1
   14002d1bd:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14002d1c1:	sub    rdx,0x4
   14002d1c5:	sub    rcx,0x1
   14002d1c9:	jns    0x14002d1b0
   14002d1cb:	mov    rdx,QWORD PTR [rsp+0x88]
   14002d1d3:	mov    r9d,edi
   14002d1d6:	mov    edi,ebx
   14002d1d8:	jmp    0x14002d379
   14002d1dd:	cmp    esi,DWORD PTR [rip+0x1430d]        # 0x1400414f0
   14002d1e3:	jl     0x14002d2c1
   14002d1e9:	mov    eax,DWORD PTR [rip+0x1430d]        # 0x1400414fc
   14002d1ef:	mov    esi,0x20
   14002d1f4:	mov    QWORD PTR [rsp+0x20],rdi
   14002d1f9:	bts    DWORD PTR [rsp+0x20],0x1f
   14002d1ff:	cdq    
   14002d200:	mov    DWORD PTR [rsp+0x28],edi
   14002d204:	and    edx,0x1f
   14002d207:	mov    r9d,edi
   14002d20a:	mov    r8,rdi
   14002d20d:	add    eax,edx
   14002d20f:	mov    r11d,eax
   14002d212:	and    eax,0x1f
   14002d215:	sub    eax,edx
   14002d217:	sar    r11d,0x5
   14002d21b:	mov    ecx,eax
   14002d21d:	mov    r10d,eax
   14002d220:	shl    ebp,cl
   14002d222:	sub    esi,eax
   14002d224:	not    ebp
   14002d226:	data16 data16 xchg ax,ax
   14002d22a:	data16 xchg ax,ax
   14002d22d:	data16 xchg ax,ax
   14002d230:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002d235:	mov    ecx,r10d
   14002d238:	mov    eax,ebp
   14002d23a:	and    eax,edx
   14002d23c:	shr    edx,cl
   14002d23e:	mov    ecx,esi
   14002d240:	or     edx,r9d
   14002d243:	mov    DWORD PTR [rsp+0x90],eax
   14002d24a:	add    r8,0x1
   14002d24e:	mov    r9d,DWORD PTR [rsp+0x90]
   14002d256:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002d25b:	shl    r9d,cl
   14002d25e:	cmp    r8,r13
   14002d261:	jl     0x14002d230
   14002d263:	movsxd rdx,r11d
   14002d266:	lea    rcx,[rsp+0x28]
   14002d26b:	mov    ebx,0x2
   14002d270:	lea    rax,[rdx*4+0x0]
   14002d278:	sub    rcx,rax
   14002d27b:	xchg   ax,ax
   14002d27d:	data16 xchg ax,ax
   14002d280:	cmp    rbx,rdx
   14002d283:	jl     0x14002d28d
   14002d285:	mov    eax,DWORD PTR [rcx]
   14002d287:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14002d28b:	jmp    0x14002d291
   14002d28d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14002d291:	sub    rcx,0x4
   14002d295:	sub    rbx,0x1
   14002d299:	jns    0x14002d280
   14002d29b:	mov    ecx,DWORD PTR [rip+0x1424f]        # 0x1400414f0
   14002d2a1:	mov    r9d,DWORD PTR [rip+0x1425c]        # 0x140041504
   14002d2a8:	mov    rdx,QWORD PTR [rsp+0x88]
   14002d2b0:	mov    edi,0x1
   14002d2b5:	add    r9d,ecx
   14002d2b8:	lea    r15d,[rdi+0x1e]
   14002d2bc:	jmp    0x14002d379
   14002d2c1:	mov    eax,DWORD PTR [rip+0x14235]        # 0x1400414fc
   14002d2c7:	mov    r9d,DWORD PTR [rip+0x14236]        # 0x140041504
   14002d2ce:	btr    DWORD PTR [rsp+0x20],0x1f
   14002d2d4:	cdq    
   14002d2d5:	add    r9d,esi
   14002d2d8:	mov    esi,0x20
   14002d2dd:	and    edx,0x1f
   14002d2e0:	mov    r10d,edi
   14002d2e3:	mov    r8,rdi
   14002d2e6:	add    eax,edx
   14002d2e8:	mov    r12d,eax
   14002d2eb:	and    eax,0x1f
   14002d2ee:	sub    eax,edx
   14002d2f0:	sar    r12d,0x5
   14002d2f4:	mov    ecx,eax
   14002d2f6:	mov    r11d,eax
   14002d2f9:	shl    ebp,cl
   14002d2fb:	sub    esi,eax
   14002d2fd:	not    ebp
   14002d2ff:	nop
   14002d300:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002d305:	mov    ecx,r11d
   14002d308:	mov    eax,ebp
   14002d30a:	and    eax,edx
   14002d30c:	shr    edx,cl
   14002d30e:	mov    ecx,esi
   14002d310:	or     edx,r10d
   14002d313:	mov    DWORD PTR [rsp+0x90],eax
   14002d31a:	add    r8,0x1
   14002d31e:	mov    r10d,DWORD PTR [rsp+0x90]
   14002d326:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14002d32b:	shl    r10d,cl
   14002d32e:	cmp    r8,r13
   14002d331:	jl     0x14002d300
   14002d333:	movsxd rdx,r12d
   14002d336:	lea    rcx,[rsp+0x28]
   14002d33b:	mov    ebx,0x2
   14002d340:	lea    rax,[rdx*4+0x0]
   14002d348:	sub    rcx,rax
   14002d34b:	xchg   ax,ax
   14002d34d:	data16 xchg ax,ax
   14002d350:	cmp    rbx,rdx
   14002d353:	jl     0x14002d35d
   14002d355:	mov    eax,DWORD PTR [rcx]
   14002d357:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14002d35b:	jmp    0x14002d361
   14002d35d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14002d361:	sub    rcx,0x4
   14002d365:	sub    rbx,0x1
   14002d369:	jns    0x14002d350
   14002d36b:	mov    rdx,QWORD PTR [rsp+0x88]
   14002d373:	mov    r15d,0x1f
   14002d379:	mov    r13,QWORD PTR [rsp+0x50]
   14002d37e:	mov    r12,QWORD PTR [rsp+0x58]
   14002d383:	mov    rbp,QWORD PTR [rsp+0x68]
   14002d388:	mov    r14,QWORD PTR [rsp+0x48]
   14002d38d:	sub    r15d,DWORD PTR [rip+0x14168]        # 0x1400414fc
   14002d394:	mov    eax,DWORD PTR [rip+0x14166]        # 0x140041500
   14002d39a:	mov    rsi,QWORD PTR [rsp+0x60]
   14002d39f:	mov    rbx,QWORD PTR [rsp+0x98]
   14002d3a7:	movzx  ecx,r15b
   14002d3ab:	mov    r15,QWORD PTR [rsp+0x40]
   14002d3b0:	shl    r9d,cl
   14002d3b3:	neg    DWORD PTR [rsp+0x80]
   14002d3ba:	sbb    ecx,ecx
   14002d3bc:	and    ecx,0x80000000
   14002d3c2:	or     r9d,ecx
   14002d3c5:	or     r9d,DWORD PTR [rsp+0x20]
   14002d3ca:	cmp    eax,0x40
   14002d3cd:	jne    0x14002d3e1
   14002d3cf:	mov    ecx,DWORD PTR [rsp+0x24]
   14002d3d3:	mov    DWORD PTR [rdx+0x4],r9d
   14002d3d7:	mov    eax,edi
   14002d3d9:	mov    DWORD PTR [rdx],ecx
   14002d3db:	add    rsp,0x70
   14002d3df:	pop    rdi
   14002d3e0:	ret    
   14002d3e1:	cmp    eax,0x20
   14002d3e4:	jne    0x14002d3e9
   14002d3e6:	mov    DWORD PTR [rdx],r9d
   14002d3e9:	mov    eax,edi
   14002d3eb:	add    rsp,0x70
   14002d3ef:	pop    rdi
   14002d3f0:	ret    
   14002d3f1:	int3   
   14002d3f2:	int3   
   14002d3f3:	int3   
   14002d3f4:	int3   
   14002d3f5:	int3   
   14002d3f6:	int3   
   14002d3f7:	int3   
   14002d3f8:	int3   
   14002d3f9:	int3   
   14002d3fa:	int3   
   14002d3fb:	int3   
   14002d3fc:	int3   
   14002d3fd:	int3   
   14002d3fe:	int3   
   14002d3ff:	int3   
   14002d400:	mov    QWORD PTR [rsp+0x18],rbx
   14002d405:	push   rbp
   14002d406:	push   rsi
   14002d407:	push   rdi
   14002d408:	push   r12
   14002d40a:	push   r13
   14002d40c:	push   r14
   14002d40e:	push   r15
   14002d410:	sub    rsp,0xb0
   14002d417:	mov    rax,QWORD PTR [rip+0x12bb2]        # 0x14003ffd0
   14002d41e:	xor    rax,rsp
   14002d421:	mov    QWORD PTR [rsp+0xa0],rax
   14002d429:	mov    rsi,QWORD PTR [rsp+0x128]
   14002d431:	xor    edi,edi
   14002d433:	mov    DWORD PTR [rsp+0x38],r9d
   14002d438:	test   rsi,rsi
   14002d43b:	mov    eax,edi
   14002d43d:	mov    r13,rdx
   14002d440:	mov    QWORD PTR [rsp+0x48],rcx
   14002d445:	lea    r11,[rsp+0x80]
   14002d44d:	mov    WORD PTR [rsp+0x34],0x0
   14002d454:	lea    r14d,[rdi+0x1]
   14002d458:	mov    r10d,edi
   14002d45b:	mov    ebp,edi
   14002d45d:	mov    r15d,edi
   14002d460:	mov    r12d,edi
   14002d463:	mov    DWORD PTR [rsp+0x30],eax
   14002d467:	mov    ebx,edi
   14002d469:	mov    r9d,edi
   14002d46c:	jne    0x14002d494
   14002d46e:	call   0x14001b280
   14002d473:	xor    r9d,r9d
   14002d476:	xor    r8d,r8d
   14002d479:	xor    edx,edx
   14002d47b:	xor    ecx,ecx
   14002d47d:	mov    QWORD PTR [rsp+0x20],rdi
   14002d482:	mov    DWORD PTR [rax],0x16
   14002d488:	call   0x14001de30
   14002d48d:	xor    eax,eax
   14002d48f:	jmp    0x14002dcf4
   14002d494:	mov    rdi,r8
   14002d497:	movzx  eax,BYTE PTR [r8]
   14002d49b:	cmp    al,0x20
   14002d49d:	je     0x14002d4ab
   14002d49f:	cmp    al,0x9
   14002d4a1:	je     0x14002d4ab
   14002d4a3:	cmp    al,0xa
   14002d4a5:	je     0x14002d4ab
   14002d4a7:	cmp    al,0xd
   14002d4a9:	jne    0x14002d4b6
   14002d4ab:	add    r8,r14
   14002d4ae:	jmp    0x14002d497
   14002d4b0:	mov    r9d,0x5
   14002d4b6:	lea    rcx,[rip+0xfffffffffffd2b43]        # 0x140000000
   14002d4bd:	data16 xchg ax,ax
   14002d4c0:	movzx  edx,BYTE PTR [r8]
   14002d4c4:	add    r8,0x1
   14002d4c8:	cmp    r9d,0xb
   14002d4cc:	ja     0x14002d7c5
   14002d4d2:	movsxd rax,r9d
   14002d4d5:	mov    ecx,DWORD PTR [rcx+rax*4+0x2dd20]
   14002d4dc:	lea    rax,[rip+0xfffffffffffd2b1d]        # 0x140000000
   14002d4e3:	add    rcx,rax
   14002d4e6:	jmp    rcx
   14002d4e8:	lea    eax,[rdx-0x31]
   14002d4eb:	cmp    al,0x8
   14002d4ed:	ja     0x14002d4fb
   14002d4ef:	mov    r9d,0x3
   14002d4f5:	sub    r8,0x1
   14002d4f9:	jmp    0x14002d4b6
   14002d4fb:	mov    rax,QWORD PTR [rsi]
   14002d4fe:	mov    rcx,QWORD PTR [rax+0x128]
   14002d505:	mov    rax,QWORD PTR [rcx]
   14002d508:	cmp    dl,BYTE PTR [rax]
   14002d50a:	je     0x14002d4b0
   14002d50c:	cmp    dl,0x2b
   14002d50f:	je     0x14002d536
   14002d511:	cmp    dl,0x2d
   14002d514:	je     0x14002d527
   14002d516:	cmp    dl,0x30
   14002d519:	jne    0x14002d80b
   14002d51f:	mov    r9d,0x1
   14002d525:	jmp    0x14002d4b6
   14002d527:	mov    r9d,0x2
   14002d52d:	mov    WORD PTR [rsp+0x34],0x8000
   14002d534:	jmp    0x14002d4b6
   14002d536:	mov    r9d,0x2
   14002d53c:	mov    WORD PTR [rsp+0x34],0x0
   14002d543:	jmp    0x14002d4b6
   14002d548:	lea    eax,[rdx-0x31]
   14002d54b:	mov    ebp,0x1
   14002d550:	cmp    al,0x8
   14002d552:	ja     0x14002d560
   14002d554:	lea    r9d,[rbp+0x2]
   14002d558:	sub    r8,rbp
   14002d55b:	jmp    0x14002d4b6
   14002d560:	mov    rax,QWORD PTR [rsi]
   14002d563:	mov    rcx,QWORD PTR [rax+0x128]
   14002d56a:	mov    rax,QWORD PTR [rcx]
   14002d56d:	cmp    dl,BYTE PTR [rax]
   14002d56f:	jne    0x14002d57c
   14002d571:	mov    r9d,0x4
   14002d577:	jmp    0x14002d4b6
   14002d57c:	movsx  eax,dl
   14002d57f:	add    eax,0xffffffd5
   14002d582:	cmp    eax,0x3a
   14002d585:	ja     0x14002d811
   14002d58b:	lea    rdx,[rip+0xfffffffffffd2a6e]        # 0x140000000
   14002d592:	cdqe   
   14002d594:	movzx  eax,BYTE PTR [rdx+rax*1+0x2dd60]
   14002d59c:	mov    ecx,DWORD PTR [rdx+rax*4+0x2dd50]
   14002d5a3:	add    rcx,rdx
   14002d5a6:	jmp    rcx
   14002d5a8:	mov    r9d,ebp
   14002d5ab:	jmp    0x14002d4b6
   14002d5b0:	lea    eax,[rdx-0x31]
   14002d5b3:	cmp    al,0x8
   14002d5b5:	jbe    0x14002d4ef
   14002d5bb:	mov    rax,QWORD PTR [rsi]
   14002d5be:	mov    rcx,QWORD PTR [rax+0x128]
   14002d5c5:	mov    rax,QWORD PTR [rcx]
   14002d5c8:	cmp    dl,BYTE PTR [rax]
   14002d5ca:	je     0x14002d4b0
   14002d5d0:	cmp    dl,0x30
   14002d5d3:	jne    0x14002d816
   14002d5d9:	mov    r9d,0x1
   14002d5df:	jmp    0x14002d4b6
   14002d5e4:	cmp    dl,0x30
   14002d5e7:	mov    ebp,0x1
   14002d5ec:	jl     0x14002d616
   14002d5ee:	xchg   ax,ax
   14002d5f0:	cmp    dl,0x39
   14002d5f3:	jg     0x14002d616
   14002d5f5:	cmp    r10d,0x19
   14002d5f9:	jae    0x14002d609
   14002d5fb:	sub    dl,0x30
   14002d5fe:	add    r10d,ebp
   14002d601:	mov    BYTE PTR [r11],dl
   14002d604:	add    r11,rbp
   14002d607:	jmp    0x14002d60b
   14002d609:	add    ebx,ebp
   14002d60b:	mov    dl,BYTE PTR [r8]
   14002d60e:	add    r8,rbp
   14002d611:	cmp    dl,0x30
   14002d614:	jge    0x14002d5f0
   14002d616:	mov    rax,QWORD PTR [rsi]
   14002d619:	mov    rcx,QWORD PTR [rax+0x128]
   14002d620:	mov    rax,QWORD PTR [rcx]
   14002d623:	cmp    dl,BYTE PTR [rax]
   14002d625:	jne    0x14002d632
   14002d627:	mov    r9d,0x4
   14002d62d:	jmp    0x14002d4b6
   14002d632:	movsx  eax,dl
   14002d635:	add    eax,0xffffffd5
   14002d638:	cmp    eax,0x3a
   14002d63b:	ja     0x14002d811
   14002d641:	lea    rdx,[rip+0xfffffffffffd29b8]        # 0x140000000
   14002d648:	cdqe   
   14002d64a:	movzx  eax,BYTE PTR [rdx+rax*1+0x2dda8]
   14002d652:	mov    ecx,DWORD PTR [rdx+rax*4+0x2dd9c]
   14002d659:	add    rcx,rdx
   14002d65c:	jmp    rcx
   14002d65e:	mov    r9d,0x6
   14002d664:	jmp    0x14002d4b6
   14002d669:	test   r10d,r10d
   14002d66c:	mov    ebp,0x1
   14002d671:	mov    r15d,ebp
   14002d674:	jne    0x14002d68d
   14002d676:	cmp    dl,0x30
   14002d679:	jne    0x14002d690
   14002d67b:	xchg   ax,ax
   14002d67d:	data16 xchg ax,ax
   14002d680:	mov    dl,BYTE PTR [r8]
   14002d683:	sub    ebx,ebp
   14002d685:	add    r8,rbp
   14002d688:	cmp    dl,0x30
   14002d68b:	je     0x14002d680
   14002d68d:	cmp    dl,0x30
   14002d690:	jl     0x14002d6b6
   14002d692:	cmp    dl,0x39
   14002d695:	jg     0x14002d6b6
   14002d697:	cmp    r10d,0x19
   14002d69b:	jae    0x14002d6ab
   14002d69d:	sub    dl,0x30
   14002d6a0:	add    r10d,ebp
   14002d6a3:	mov    BYTE PTR [r11],dl
   14002d6a6:	add    r11,rbp
   14002d6a9:	sub    ebx,ebp
   14002d6ab:	mov    dl,BYTE PTR [r8]
   14002d6ae:	add    r8,rbp
   14002d6b1:	cmp    dl,0x30
   14002d6b4:	jge    0x14002d692
   14002d6b6:	movsx  eax,dl
   14002d6b9:	add    eax,0xffffffd5
   14002d6bc:	cmp    eax,0x3a
   14002d6bf:	ja     0x14002d811
   14002d6c5:	lea    rdx,[rip+0xfffffffffffd2934]        # 0x140000000
   14002d6cc:	cdqe   
   14002d6ce:	movzx  eax,BYTE PTR [rdx+rax*1+0x2ddf0]
   14002d6d6:	mov    ecx,DWORD PTR [rdx+rax*4+0x2dde4]
   14002d6dd:	add    rcx,rdx
   14002d6e0:	jmp    rcx
   14002d6e2:	sub    r8,rbp
   14002d6e5:	mov    r9d,0xb
   14002d6eb:	jmp    0x14002d4b6
   14002d6f0:	sub    dl,0x30
   14002d6f3:	mov    r15d,0x1
   14002d6f9:	cmp    dl,0x9
   14002d6fc:	ja     0x14002d816
   14002d702:	lea    r9d,[r15+0x3]
   14002d706:	sub    r8,r15
   14002d709:	jmp    0x14002d4b6
   14002d70e:	lea    eax,[rdx-0x31]
   14002d711:	lea    rdi,[r8-0x2]
   14002d715:	cmp    al,0x8
   14002d717:	ja     0x14002d728
   14002d719:	mov    r9d,0x9
   14002d71f:	sub    r8,0x1
   14002d723:	jmp    0x14002d4b6
   14002d728:	cmp    dl,0x2b
   14002d72b:	je     0x14002d746
   14002d72d:	cmp    dl,0x2d
   14002d730:	je     0x14002d7af
   14002d732:	cmp    dl,0x30
   14002d735:	jne    0x14002d816
   14002d73b:	mov    r9d,0x8
   14002d741:	jmp    0x14002d4b6
   14002d746:	mov    r9d,0x7
   14002d74c:	jmp    0x14002d4b6
   14002d751:	cmp    dl,0x30
   14002d754:	mov    r12d,0x1
   14002d75a:	jne    0x14002d76b
   14002d75c:	data16 data16 xchg ax,ax
   14002d760:	mov    dl,BYTE PTR [r8]
   14002d763:	add    r8,r12
   14002d766:	cmp    dl,0x30
   14002d769:	je     0x14002d760
   14002d76b:	sub    dl,0x31
   14002d76e:	sub    r8,r12
   14002d771:	cmp    dl,0x8
   14002d774:	ja     0x14002d7cf
   14002d776:	mov    r9d,0x9
   14002d77c:	jmp    0x14002d4b6
   14002d781:	lea    eax,[rdx-0x31]
   14002d784:	cmp    al,0x8
   14002d786:	ja     0x14002d732
   14002d788:	mov    r9d,0x9
   14002d78e:	sub    r8,0x1
   14002d792:	jmp    0x14002d4b6
   14002d797:	cmp    DWORD PTR [rsp+0x120],0x0
   14002d79f:	je     0x14002d80b
   14002d7a1:	cmp    dl,0x2b
   14002d7a4:	lea    rdi,[r8-0x1]
   14002d7a8:	je     0x14002d746
   14002d7aa:	cmp    dl,0x2d
   14002d7ad:	jne    0x14002d816
   14002d7af:	mov    r9d,0x7
   14002d7b5:	or     r14d,0xffffffff
   14002d7b9:	jmp    0x14002d4b6
   14002d7be:	lea    rcx,[rip+0xfffffffffffd283b]        # 0x140000000
   14002d7c5:	cmp    r9d,0xa
   14002d7c9:	jne    0x14002d4c0
   14002d7cf:	xor    edi,edi
   14002d7d1:	test   ebp,ebp
   14002d7d3:	mov    QWORD PTR [r13+0x0],r8
   14002d7d7:	je     0x14002dcc7
   14002d7dd:	cmp    r10d,0x18
   14002d7e1:	jbe    0x14002d87d
   14002d7e7:	movzx  eax,BYTE PTR [rsp+0x97]
   14002d7ef:	cmp    al,0x5
   14002d7f1:	jl     0x14002d7fc
   14002d7f3:	add    al,0x1
   14002d7f5:	mov    BYTE PTR [rsp+0x97],al
   14002d7fc:	sub    r11,0x1
   14002d800:	mov    r10d,0x18
   14002d806:	add    ebx,0x1
   14002d809:	jmp    0x14002d886
   14002d80b:	sub    r8,0x1
   14002d80f:	jmp    0x14002d7cf
   14002d811:	sub    r8,rbp
   14002d814:	jmp    0x14002d7cf
   14002d816:	mov    r8,rdi
   14002d819:	jmp    0x14002d7cf
   14002d81b:	xor    edi,edi
   14002d81d:	cmp    dl,0x30
   14002d820:	mov    eax,edi
   14002d822:	lea    r12d,[rdi+0x1]
   14002d826:	mov    DWORD PTR [rsp+0x30],eax
   14002d82a:	jl     0x14002d875
   14002d82c:	data16 data16 xchg ax,ax
   14002d830:	cmp    dl,0x39
   14002d833:	jg     0x14002d860
   14002d835:	lea    ecx,[rax+rax*4]
   14002d838:	movsx  eax,dl
   14002d83b:	lea    eax,[rax+rcx*2-0x30]
   14002d83f:	cmp    eax,0x1450
   14002d844:	mov    DWORD PTR [rsp+0x30],eax
   14002d848:	jg     0x14002d857
   14002d84a:	mov    dl,BYTE PTR [r8]
   14002d84d:	add    r8,r12
   14002d850:	cmp    dl,0x30
   14002d853:	jge    0x14002d830
   14002d855:	jmp    0x14002d860
   14002d857:	mov    eax,0x1451
   14002d85c:	mov    DWORD PTR [rsp+0x30],eax
   14002d860:	cmp    dl,0x30
   14002d863:	jl     0x14002d875
   14002d865:	cmp    dl,0x39
   14002d868:	jg     0x14002d875
   14002d86a:	mov    dl,BYTE PTR [r8]
   14002d86d:	add    r8,r12
   14002d870:	cmp    dl,0x30
   14002d873:	jge    0x14002d865
   14002d875:	sub    r8,r12
   14002d878:	jmp    0x14002d7d1
   14002d87d:	test   r10d,r10d
   14002d880:	je     0x14002dcc0
   14002d886:	sub    r11,0x1
   14002d88a:	cmp    BYTE PTR [r11],0x0
   14002d88e:	jne    0x14002d8a1
   14002d890:	sub    r11,0x1
   14002d894:	add    r10d,0xffffffff
   14002d898:	add    ebx,0x1
   14002d89b:	cmp    BYTE PTR [r11],0x0
   14002d89f:	je     0x14002d890
   14002d8a1:	lea    r8,[rsp+0x60]
   14002d8a6:	lea    rcx,[rsp+0x80]
   14002d8ae:	mov    edx,r10d
   14002d8b1:	call   0x14002f9e0
   14002d8b6:	test   r14d,r14d
   14002d8b9:	mov    r8d,DWORD PTR [rsp+0x30]
   14002d8be:	jns    0x14002d8c3
   14002d8c0:	neg    r8d
   14002d8c3:	add    r8d,ebx
   14002d8c6:	test   r12d,r12d
   14002d8c9:	jne    0x14002d8d3
   14002d8cb:	add    r8d,DWORD PTR [rsp+0x110]
   14002d8d3:	test   r15d,r15d
   14002d8d6:	jne    0x14002d8e0
   14002d8d8:	sub    r8d,DWORD PTR [rsp+0x118]
   14002d8e0:	cmp    r8d,0x1450
   14002d8e7:	jg     0x14002dcaa
   14002d8ed:	cmp    r8d,0xffffebb0
   14002d8f4:	jl     0x14002dc9e
   14002d8fa:	lea    rdx,[rip+0x13d1f]        # 0x140041620
   14002d901:	sub    rdx,0x60
   14002d905:	test   r8d,r8d
   14002d908:	je     0x14002dc87
   14002d90e:	jns    0x14002d91e
   14002d910:	lea    rdx,[rip+0x13e69]        # 0x140041780
   14002d917:	neg    r8d
   14002d91a:	sub    rdx,0x60
   14002d91e:	movzx  eax,WORD PTR [rsp+0x60]
   14002d923:	cmp    DWORD PTR [rsp+0x38],0x0
   14002d928:	mov    ebp,0x0
   14002d92d:	cmove  ax,bp
   14002d931:	test   r8d,r8d
   14002d934:	mov    WORD PTR [rsp+0x60],ax
   14002d939:	je     0x14002dc85
   14002d93f:	mov    r9d,0xffff8000
   14002d945:	data16 data16 xchg ax,ax
   14002d949:	data16 xchg ax,ax
   14002d94c:	data16 data16 xchg ax,ax
   14002d950:	mov    eax,r8d
   14002d953:	add    rdx,0x54
   14002d957:	sar    r8d,0x3
   14002d95b:	and    eax,0x7
   14002d95e:	mov    DWORD PTR [rsp+0x30],r8d
   14002d963:	mov    QWORD PTR [rsp+0x40],rdx
   14002d968:	je     0x14002dc7c
   14002d96e:	cdqe   
   14002d970:	lea    rcx,[rax+rax*2]
   14002d974:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14002d97a:	lea    r14,[rdx+rcx*4]
   14002d97e:	jb     0x14002d9a7
   14002d980:	mov    rax,QWORD PTR [r14]
   14002d983:	lea    rcx,[rsp+0x70]
   14002d988:	mov    QWORD PTR [rcx],rax
   14002d98b:	mov    eax,DWORD PTR [r14+0x8]
   14002d98f:	lea    r14,[rsp+0x70]
   14002d994:	mov    DWORD PTR [rcx+0x8],eax
   14002d997:	mov    rax,QWORD PTR [rsp+0x70]
   14002d99c:	shr    rax,0x10
   14002d9a0:	sub    eax,0x1
   14002d9a3:	mov    DWORD PTR [rsp+0x72],eax
   14002d9a7:	movzx  ecx,WORD PTR [r14+0xa]
   14002d9ac:	movzx  eax,WORD PTR [rsp+0x6a]
   14002d9b1:	mov    r15d,ebp
   14002d9b4:	movzx  edx,cx
   14002d9b7:	and    cx,0x7fff
   14002d9bc:	mov    DWORD PTR [rsp+0x50],ebp
   14002d9c0:	xor    dx,ax
   14002d9c3:	and    ax,0x7fff
   14002d9c7:	mov    DWORD PTR [rsp+0x54],ebp
   14002d9cb:	and    dx,0x8000
   14002d9d0:	cmp    ax,0x7fff
   14002d9d4:	mov    DWORD PTR [rsp+0x58],ebp
   14002d9d8:	mov    WORD PTR [rsp+0x38],dx
   14002d9dd:	lea    edi,[rax+rcx*1]
   14002d9e0:	jae    0x14002dc5f
   14002d9e6:	cmp    cx,0x7fff
   14002d9eb:	jae    0x14002dc5f
   14002d9f1:	cmp    di,0xbffd
   14002d9f6:	ja     0x14002dc5f
   14002d9fc:	cmp    di,0x3fbf
   14002da01:	ja     0x14002da0c
   14002da03:	mov    DWORD PTR [rsp+0x68],ebp
   14002da07:	jmp    0x14002dc6f
   14002da0c:	test   ax,ax
   14002da0f:	jne    0x14002da37
   14002da11:	mov    eax,DWORD PTR [rsp+0x68]
   14002da15:	add    di,0x1
   14002da19:	btr    eax,0x1f
   14002da1d:	test   eax,eax
   14002da1f:	jne    0x14002da37
   14002da21:	cmp    DWORD PTR [rsp+0x64],ebp
   14002da25:	jne    0x14002da37
   14002da27:	cmp    DWORD PTR [rsp+0x60],ebp
   14002da2b:	jne    0x14002da37
   14002da2d:	mov    WORD PTR [rsp+0x6a],bp
   14002da32:	jmp    0x14002dc77
   14002da37:	test   cx,cx
   14002da3a:	jne    0x14002da60
   14002da3c:	mov    eax,DWORD PTR [r14+0x8]
   14002da40:	add    di,0x1
   14002da44:	btr    eax,0x1f
   14002da48:	test   eax,eax
   14002da4a:	jne    0x14002da60
   14002da4c:	cmp    DWORD PTR [r14+0x4],ebp
   14002da50:	jne    0x14002da60
   14002da52:	cmp    DWORD PTR [r14],ebp
   14002da55:	jne    0x14002da60
   14002da57:	mov    DWORD PTR [rsp+0x68],ebp
   14002da5b:	jmp    0x14002dc6f
   14002da60:	mov    r13d,ebp
   14002da63:	lea    rdx,[rsp+0x54]
   14002da68:	mov    r12d,0x5
   14002da6e:	xchg   ax,ax
   14002da70:	test   r12d,r12d
   14002da73:	lea    eax,[r13+r13*1+0x0]
   14002da78:	mov    ebx,r12d
   14002da7b:	movsxd rcx,eax
   14002da7e:	jle    0x14002dad1
   14002da80:	mov    esi,r13d
   14002da83:	lea    r10,[r14+0x8]
   14002da87:	lea    r11,[rsp+rcx*1+0x60]
   14002da8c:	and    esi,0x1
   14002da8f:	nop
   14002da90:	movzx  eax,WORD PTR [r10]
   14002da94:	movzx  ecx,WORD PTR [r11]
   14002da98:	mov    r8d,ebp
   14002da9b:	imul   ecx,eax
   14002da9e:	mov    eax,DWORD PTR [rdx-0x4]
   14002daa1:	lea    r9d,[rax+rcx*1]
   14002daa5:	cmp    r9d,eax
   14002daa8:	jb     0x14002daaf
   14002daaa:	cmp    r9d,ecx
   14002daad:	jae    0x14002dab5
   14002daaf:	mov    r8d,0x1
   14002dab5:	test   r8d,r8d
   14002dab8:	mov    DWORD PTR [rdx-0x4],r9d
   14002dabc:	je     0x14002dac2
   14002dabe:	add    WORD PTR [rdx],0x1
   14002dac2:	sub    ebx,0x1
   14002dac5:	add    r11,0x2
   14002dac9:	sub    r10,0x2
   14002dacd:	test   ebx,ebx
   14002dacf:	jg     0x14002da90
   14002dad1:	sub    r12d,0x1
   14002dad5:	add    rdx,0x2
   14002dad9:	add    r13d,0x1
   14002dadd:	test   r12d,r12d
   14002dae0:	jg     0x14002da70
   14002dae2:	mov    r8d,DWORD PTR [rsp+0x58]
   14002dae7:	mov    edx,DWORD PTR [rsp+0x54]
   14002daeb:	mov    r9d,DWORD PTR [rsp+0x50]
   14002daf0:	add    di,0xc002
   14002daf5:	test   di,di
   14002daf8:	jle    0x14002db3e
   14002dafa:	data16 xchg ax,ax
   14002dafd:	data16 xchg ax,ax
   14002db00:	bt     r8d,0x1f
   14002db05:	jb     0x14002db39
   14002db07:	mov    ecx,edx
   14002db09:	mov    eax,r9d
   14002db0c:	add    r8d,r8d
   14002db0f:	add    edx,edx
   14002db11:	shr    eax,0x1f
   14002db14:	shr    ecx,0x1f
   14002db17:	add    r9d,r9d
   14002db1a:	or     edx,eax
   14002db1c:	or     r8d,ecx
   14002db1f:	add    di,0xffff
   14002db24:	mov    DWORD PTR [rsp+0x54],edx
   14002db28:	mov    DWORD PTR [rsp+0x58],r8d
   14002db2d:	test   di,di
   14002db30:	mov    DWORD PTR [rsp+0x50],r9d
   14002db35:	jg     0x14002db00
   14002db37:	jmp    0x14002db3e
   14002db39:	test   di,di
   14002db3c:	jg     0x14002dba3
   14002db3e:	add    di,0xffff
   14002db43:	jns    0x14002dba3
   14002db45:	movzx  eax,di
   14002db48:	neg    ax
   14002db4b:	movzx  r10d,ax
   14002db4f:	add    di,r10w
   14002db53:	test   BYTE PTR [rsp+0x50],0x1
   14002db58:	je     0x14002db5e
   14002db5a:	add    r15d,0x1
   14002db5e:	mov    ecx,edx
   14002db60:	mov    eax,r8d
   14002db63:	shr    r9d,1
   14002db66:	shl    ecx,0x1f
   14002db69:	shr    edx,1
   14002db6b:	shl    eax,0x1f
   14002db6e:	or     r9d,ecx
   14002db71:	shr    r8d,1
   14002db74:	or     edx,eax
   14002db76:	sub    r10,0x1
   14002db7a:	mov    DWORD PTR [rsp+0x50],r9d
   14002db7f:	jne    0x14002db53
   14002db81:	test   r15d,r15d
   14002db84:	mov    DWORD PTR [rsp+0x54],edx
   14002db88:	mov    DWORD PTR [rsp+0x58],r8d
   14002db8d:	je     0x14002dba3
   14002db8f:	movzx  eax,r9w
   14002db93:	or     ax,0x1
   14002db97:	mov    WORD PTR [rsp+0x50],ax
   14002db9c:	mov    r9d,DWORD PTR [rsp+0x50]
   14002dba1:	jmp    0x14002dba8
   14002dba3:	mov    ax,WORD PTR [rsp+0x50]
   14002dba8:	cmp    ax,0x8000
   14002dbac:	ja     0x14002dbbe
   14002dbae:	and    r9d,0x1ffff
   14002dbb5:	cmp    r9d,0x18000
   14002dbbc:	jne    0x14002dc22
   14002dbbe:	mov    eax,DWORD PTR [rsp+0x52]
   14002dbc2:	cmp    eax,0xffffffff
   14002dbc5:	jne    0x14002dc17
   14002dbc7:	mov    eax,DWORD PTR [rsp+0x56]
   14002dbcb:	mov    DWORD PTR [rsp+0x52],ebp
   14002dbcf:	cmp    eax,0xffffffff
   14002dbd2:	jne    0x14002dc09
   14002dbd4:	movzx  eax,WORD PTR [rsp+0x5a]
   14002dbd9:	mov    DWORD PTR [rsp+0x56],ebp
   14002dbdd:	mov    edx,DWORD PTR [rsp+0x54]
   14002dbe1:	cmp    ax,0xffff
   14002dbe5:	jne    0x14002dbf9
   14002dbe7:	mov    WORD PTR [rsp+0x5a],0x8000
   14002dbee:	mov    r8d,DWORD PTR [rsp+0x58]
   14002dbf3:	add    di,0x1
   14002dbf7:	jmp    0x14002dc22
   14002dbf9:	add    ax,0x1
   14002dbfd:	mov    WORD PTR [rsp+0x5a],ax
   14002dc02:	mov    r8d,DWORD PTR [rsp+0x58]
   14002dc07:	jmp    0x14002dc22
   14002dc09:	add    eax,0x1
   14002dc0c:	mov    DWORD PTR [rsp+0x56],eax
   14002dc10:	mov    r8d,DWORD PTR [rsp+0x58]
   14002dc15:	jmp    0x14002dc1e
   14002dc17:	add    eax,0x1
   14002dc1a:	mov    DWORD PTR [rsp+0x52],eax
   14002dc1e:	mov    edx,DWORD PTR [rsp+0x54]
   14002dc22:	cmp    di,0x7fff
   14002dc27:	mov    r9d,0xffff8000
   14002dc2d:	jb     0x14002dc3b
   14002dc2f:	cmp    WORD PTR [rsp+0x38],bp
   14002dc34:	mov    r8d,DWORD PTR [rsp+0x30]
   14002dc39:	jmp    0x14002dc62
   14002dc3b:	movzx  eax,WORD PTR [rsp+0x52]
   14002dc40:	or     di,WORD PTR [rsp+0x38]
   14002dc45:	mov    DWORD PTR [rsp+0x66],r8d
   14002dc4a:	mov    r8d,DWORD PTR [rsp+0x30]
   14002dc4f:	mov    WORD PTR [rsp+0x60],ax
   14002dc54:	mov    WORD PTR [rsp+0x6a],di
   14002dc59:	mov    DWORD PTR [rsp+0x62],edx
   14002dc5d:	jmp    0x14002dc77
   14002dc5f:	test   dx,dx
   14002dc62:	mov    eax,0x7fff8000
   14002dc67:	cmovne eax,r9d
   14002dc6b:	mov    DWORD PTR [rsp+0x68],eax
   14002dc6f:	mov    DWORD PTR [rsp+0x60],ebp
   14002dc73:	mov    DWORD PTR [rsp+0x64],ebp
   14002dc77:	mov    rdx,QWORD PTR [rsp+0x40]
   14002dc7c:	test   r8d,r8d
   14002dc7f:	jne    0x14002d950
   14002dc85:	xor    edi,edi
   14002dc87:	mov    eax,DWORD PTR [rsp+0x68]
   14002dc8b:	movzx  ecx,WORD PTR [rsp+0x60]
   14002dc90:	mov    edx,DWORD PTR [rsp+0x62]
   14002dc94:	mov    r8d,DWORD PTR [rsp+0x66]
   14002dc99:	shr    eax,0x10
   14002dc9c:	jmp    0x14002dcd7
   14002dc9e:	mov    r8d,edi
   14002dca1:	mov    edx,edi
   14002dca3:	mov    edi,0x1
   14002dca8:	jmp    0x14002dcd1
   14002dcaa:	mov    edx,edi
   14002dcac:	mov    ax,0x7fff
   14002dcb0:	mov    r8d,0x80000000
   14002dcb6:	mov    edi,0x2
   14002dcbb:	xor    cx,cx
   14002dcbe:	jmp    0x14002dcd7
   14002dcc0:	mov    r8d,edi
   14002dcc3:	mov    edx,edi
   14002dcc5:	jmp    0x14002dcd1
   14002dcc7:	mov    r8d,edi
   14002dcca:	mov    edx,edi
   14002dccc:	mov    edi,0x4
   14002dcd1:	xor    cx,cx
   14002dcd4:	xor    ax,ax
   14002dcd7:	mov    r9,QWORD PTR [rsp+0x48]
   14002dcdc:	or     ax,WORD PTR [rsp+0x34]
   14002dce1:	mov    WORD PTR [r9+0xa],ax
   14002dce6:	mov    eax,edi
   14002dce8:	mov    WORD PTR [r9],cx
   14002dcec:	mov    DWORD PTR [r9+0x2],edx
   14002dcf0:	mov    DWORD PTR [r9+0x6],r8d
   14002dcf4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002dcfc:	xor    rcx,rsp
   14002dcff:	call   0x140019370
   14002dd04:	mov    rbx,QWORD PTR [rsp+0x100]
   14002dd0c:	add    rsp,0xb0
   14002dd13:	pop    r15
   14002dd15:	pop    r14
   14002dd17:	pop    r13
   14002dd19:	pop    r12
   14002dd1b:	pop    rdi
   14002dd1c:	pop    rsi
   14002dd1d:	pop    rbp
   14002dd1e:	ret    
   14002dd1f:	nop
   14002dd20:	call   0x18802dff9
   14002dd25:	(bad)  
   14002dd26:	add    al,BYTE PTR [rax]
   14002dd28:	mov    al,0xd5
   14002dd2a:	add    al,BYTE PTR [rax]
   14002dd2c:	in     al,0xd5
   14002dd2e:	add    al,BYTE PTR [rax]
   14002dd30:	imul   edx,esi,0xd6f00002
   14002dd36:	add    al,BYTE PTR [rax]
   14002dd38:	(bad)  
   14002dd39:	xlat   BYTE PTR ds:[rbx]
   14002dd3a:	add    al,BYTE PTR [rax]
   14002dd3c:	adc    edi,0xd7510002
   14002dd42:	add    al,BYTE PTR [rax]
   14002dd44:	sbb    ebx,eax
   14002dd46:	add    al,BYTE PTR [rax]
   14002dd48:	mov    esi,0x970002d7
   14002dd4d:	xlat   BYTE PTR ds:[rbx]
   14002dd4e:	add    al,BYTE PTR [rax]
   14002dd50:	loop   0x14002dd28
   14002dd52:	add    al,BYTE PTR [rax]
   14002dd54:	test   al,0xd5
   14002dd56:	add    al,BYTE PTR [rax]
   14002dd58:	pop    rsi
   14002dd59:	(bad)  
   14002dd5a:	add    al,BYTE PTR [rax]
   14002dd5c:	adc    eax,ebx
   14002dd5e:	add    al,BYTE PTR [rax]
   14002dd60:	add    BYTE PTR [rbx],al
   14002dd62:	add    BYTE PTR [rbx],al
   14002dd64:	add    eax,DWORD PTR [rcx]
   14002dd66:	add    eax,DWORD PTR [rbx]
   14002dd68:	add    eax,DWORD PTR [rbx]
   14002dd6a:	add    eax,DWORD PTR [rbx]
   14002dd6c:	add    eax,DWORD PTR [rbx]
   14002dd6e:	add    eax,DWORD PTR [rbx]
   14002dd70:	add    eax,DWORD PTR [rbx]
   14002dd72:	add    eax,DWORD PTR [rbx]
   14002dd74:	add    eax,DWORD PTR [rbx]
   14002dd76:	add    eax,DWORD PTR [rbx]
   14002dd78:	add    eax,DWORD PTR [rdx]
   14002dd7a:	add    al,BYTE PTR [rbx]
   14002dd7c:	add    eax,DWORD PTR [rbx]
   14002dd7e:	add    eax,DWORD PTR [rbx]
   14002dd80:	add    eax,DWORD PTR [rbx]
   14002dd82:	add    eax,DWORD PTR [rbx]
   14002dd84:	add    eax,DWORD PTR [rbx]
   14002dd86:	add    eax,DWORD PTR [rbx]
   14002dd88:	add    eax,DWORD PTR [rbx]
   14002dd8a:	add    eax,DWORD PTR [rbx]
   14002dd8c:	add    eax,DWORD PTR [rbx]
   14002dd8e:	add    eax,DWORD PTR [rbx]
   14002dd90:	add    eax,DWORD PTR [rbx]
   14002dd92:	add    eax,DWORD PTR [rbx]
   14002dd94:	add    eax,DWORD PTR [rbx]
   14002dd96:	add    eax,DWORD PTR [rbx]
   14002dd98:	add    eax,DWORD PTR [rdx]
   14002dd9a:	add    dl,BYTE PTR [rax+0x2d6e2]
   14002dda0:	pop    rsi
   14002dda1:	(bad)  
   14002dda2:	add    al,BYTE PTR [rax]
   14002dda4:	adc    eax,ebx
   14002dda6:	add    al,BYTE PTR [rax]
   14002dda8:	add    BYTE PTR [rdx],al
   14002ddaa:	add    BYTE PTR [rdx],al
   14002ddac:	add    al,BYTE PTR [rdx]
   14002ddae:	add    al,BYTE PTR [rdx]
   14002ddb0:	add    al,BYTE PTR [rdx]
   14002ddb2:	add    al,BYTE PTR [rdx]
   14002ddb4:	add    al,BYTE PTR [rdx]
   14002ddb6:	add    al,BYTE PTR [rdx]
   14002ddb8:	add    al,BYTE PTR [rdx]
   14002ddba:	add    al,BYTE PTR [rdx]
   14002ddbc:	add    al,BYTE PTR [rdx]
   14002ddbe:	add    al,BYTE PTR [rdx]
   14002ddc0:	add    al,BYTE PTR [rcx]
   14002ddc2:	add    DWORD PTR [rdx],eax
   14002ddc4:	add    al,BYTE PTR [rdx]
   14002ddc6:	add    al,BYTE PTR [rdx]
   14002ddc8:	add    al,BYTE PTR [rdx]
   14002ddca:	add    al,BYTE PTR [rdx]
   14002ddcc:	add    al,BYTE PTR [rdx]
   14002ddce:	add    al,BYTE PTR [rdx]
   14002ddd0:	add    al,BYTE PTR [rdx]
   14002ddd2:	add    al,BYTE PTR [rdx]
   14002ddd4:	add    al,BYTE PTR [rdx]
   14002ddd6:	add    al,BYTE PTR [rdx]
   14002ddd8:	add    al,BYTE PTR [rdx]
   14002ddda:	add    al,BYTE PTR [rdx]
   14002dddc:	add    al,BYTE PTR [rdx]
   14002ddde:	add    al,BYTE PTR [rdx]
   14002dde0:	add    al,BYTE PTR [rcx]
   14002dde2:	add    DWORD PTR [rax+0x2d6e2],edx
   14002dde8:	pop    rsi
   14002dde9:	(bad)  
   14002ddea:	add    al,BYTE PTR [rax]
   14002ddec:	adc    eax,ebx
   14002ddee:	add    al,BYTE PTR [rax]
   14002ddf0:	add    BYTE PTR [rdx],al
   14002ddf2:	add    BYTE PTR [rdx],al
   14002ddf4:	add    al,BYTE PTR [rdx]
   14002ddf6:	add    al,BYTE PTR [rdx]
   14002ddf8:	add    al,BYTE PTR [rdx]
   14002ddfa:	add    al,BYTE PTR [rdx]
   14002ddfc:	add    al,BYTE PTR [rdx]
   14002ddfe:	add    al,BYTE PTR [rdx]
   14002de00:	add    al,BYTE PTR [rdx]
   14002de02:	add    al,BYTE PTR [rdx]
   14002de04:	add    al,BYTE PTR [rdx]
   14002de06:	add    al,BYTE PTR [rdx]
   14002de08:	add    al,BYTE PTR [rcx]
   14002de0a:	add    DWORD PTR [rdx],eax
   14002de0c:	add    al,BYTE PTR [rdx]
   14002de0e:	add    al,BYTE PTR [rdx]
   14002de10:	add    al,BYTE PTR [rdx]
   14002de12:	add    al,BYTE PTR [rdx]
   14002de14:	add    al,BYTE PTR [rdx]
   14002de16:	add    al,BYTE PTR [rdx]
   14002de18:	add    al,BYTE PTR [rdx]
   14002de1a:	add    al,BYTE PTR [rdx]
   14002de1c:	add    al,BYTE PTR [rdx]
   14002de1e:	add    al,BYTE PTR [rdx]
   14002de20:	add    al,BYTE PTR [rdx]
   14002de22:	add    al,BYTE PTR [rdx]
   14002de24:	add    al,BYTE PTR [rdx]
   14002de26:	add    al,BYTE PTR [rdx]
   14002de28:	add    al,BYTE PTR [rcx]
   14002de2a:	add    esp,ecx
   14002de2c:	int3   
   14002de2d:	int3   
   14002de2e:	int3   
   14002de2f:	int3   
   14002de30:	mov    r11,rsp
   14002de33:	push   rsi
   14002de34:	push   rdi
   14002de35:	sub    rsp,0xd8
   14002de3c:	mov    rax,QWORD PTR [rip+0x1218d]        # 0x14003ffd0
   14002de43:	xor    rax,rsp
   14002de46:	mov    QWORD PTR [rsp+0xa0],rax
   14002de4e:	movzx  r10d,WORD PTR [rcx+0x8]
   14002de53:	mov    DWORD PTR [rsp+0x44],edx
   14002de57:	mov    rdi,r9
   14002de5a:	movzx  edx,r10w
   14002de5e:	and    r10w,0x7fff
   14002de64:	mov    QWORD PTR [rsp+0x58],r9
   14002de69:	mov    r9d,DWORD PTR [rcx+0x4]
   14002de6d:	and    dx,0x8000
   14002de72:	mov    BYTE PTR [r11-0x68],0xcc
   14002de77:	test   dx,dx
   14002de7a:	mov    BYTE PTR [r11-0x67],0xcc
   14002de7f:	mov    BYTE PTR [r11-0x66],0xcc
   14002de84:	mov    BYTE PTR [r11-0x65],0xcc
   14002de89:	mov    BYTE PTR [r11-0x64],0xcc
   14002de8e:	mov    BYTE PTR [r11-0x63],0xcc
   14002de93:	mov    BYTE PTR [r11-0x62],0xcc
   14002de98:	mov    BYTE PTR [r11-0x61],0xcc
   14002de9d:	mov    BYTE PTR [r11-0x60],0xcc
   14002dea2:	mov    BYTE PTR [r11-0x5f],0xcc
   14002dea7:	mov    BYTE PTR [r11-0x5e],0xfb
   14002deac:	mov    BYTE PTR [r11-0x5d],0x3f
   14002deb1:	mov    r11d,DWORD PTR [rcx]
   14002deb4:	mov    DWORD PTR [rsp+0x50],r8d
   14002deb9:	mov    esi,0x1
   14002debe:	mov    WORD PTR [rsp+0x30],dx
   14002dec3:	je     0x14002decb
   14002dec5:	mov    BYTE PTR [rdi+0x2],0x2d
   14002dec9:	jmp    0x14002decf
   14002decb:	mov    BYTE PTR [rdi+0x2],0x20
   14002decf:	test   r10w,r10w
   14002ded3:	mov    QWORD PTR [rsp+0xf8],rbx
   14002dedb:	mov    QWORD PTR [rsp+0xd0],rbp
   14002dee3:	mov    QWORD PTR [rsp+0xc8],r12
   14002deeb:	mov    QWORD PTR [rsp+0xc0],r13
   14002def3:	jne    0x14002df31
   14002def5:	test   r9d,r9d
   14002def8:	jne    0x14002e064
   14002defe:	test   r11d,r11d
   14002df01:	jne    0x14002e064
   14002df07:	mov    eax,0x20
   14002df0c:	mov    ecx,0x2d
   14002df11:	cmp    dx,0x8000
   14002df16:	cmove  eax,ecx
   14002df19:	mov    WORD PTR [rdi],r11w
   14002df1d:	mov    BYTE PTR [rdi+0x3],sil
   14002df21:	mov    BYTE PTR [rdi+0x4],0x30
   14002df25:	mov    BYTE PTR [rdi+0x5],r11b
   14002df29:	mov    BYTE PTR [rdi+0x2],al
   14002df2c:	jmp    0x14002eb9c
   14002df31:	cmp    r10w,0x7fff
   14002df37:	jne    0x14002e064
   14002df3d:	cmp    r9d,0x80000000
   14002df44:	mov    WORD PTR [rdi],si
   14002df47:	jne    0x14002df4e
   14002df49:	test   r11d,r11d
   14002df4c:	je     0x14002df93
   14002df4e:	bt     r9d,0x1e
   14002df53:	jb     0x14002df93
   14002df55:	lea    rcx,[rdi+0x4]
   14002df59:	lea    r8,[rip+0x8714]        # 0x140036674
   14002df60:	mov    edx,0x16
   14002df65:	call   0x140026f70
   14002df6a:	xor    ebx,ebx
   14002df6c:	test   eax,eax
   14002df6e:	je     0x14002e059
   14002df74:	xor    r9d,r9d
   14002df77:	xor    r8d,r8d
   14002df7a:	xor    edx,edx
   14002df7c:	xor    ecx,ecx
   14002df7e:	mov    QWORD PTR [rsp+0x20],rbx
   14002df83:	call   0x14001dd90
   14002df88:	mov    BYTE PTR [rdi+0x3],0x6
   14002df8c:	mov    esi,ebx
   14002df8e:	jmp    0x14002eb9c
   14002df93:	test   dx,dx
   14002df96:	je     0x14002dfe3
   14002df98:	cmp    r9d,0xc0000000
   14002df9f:	jne    0x14002dfe3
   14002dfa1:	test   r11d,r11d
   14002dfa4:	jne    0x14002e02a
   14002dfaa:	lea    rcx,[rdi+0x4]
   14002dfae:	lea    r8,[rip+0x86b7]        # 0x14003666c
   14002dfb5:	lea    edx,[r11+0x16]
   14002dfb9:	call   0x140026f70
   14002dfbe:	xor    ebx,ebx
   14002dfc0:	test   eax,eax
   14002dfc2:	je     0x14002e01f
   14002dfc4:	xor    r9d,r9d
   14002dfc7:	xor    r8d,r8d
   14002dfca:	xor    edx,edx
   14002dfcc:	xor    ecx,ecx
   14002dfce:	mov    QWORD PTR [rsp+0x20],rbx
   14002dfd3:	call   0x14001dd90
   14002dfd8:	mov    BYTE PTR [rdi+0x3],0x5
   14002dfdc:	mov    esi,ebx
   14002dfde:	jmp    0x14002eb9c
   14002dfe3:	cmp    r9d,0x80000000
   14002dfea:	jne    0x14002e02a
   14002dfec:	test   r11d,r11d
   14002dfef:	jne    0x14002e02a
   14002dff1:	lea    rcx,[rdi+0x4]
   14002dff5:	lea    r8,[rip+0x8668]        # 0x140036664
   14002dffc:	lea    edx,[r11+0x16]
   14002e000:	call   0x140026f70
   14002e005:	xor    ebx,ebx
   14002e007:	test   eax,eax
   14002e009:	je     0x14002e01f
   14002e00b:	xor    r9d,r9d
   14002e00e:	xor    r8d,r8d
   14002e011:	xor    edx,edx
   14002e013:	xor    ecx,ecx
   14002e015:	mov    QWORD PTR [rsp+0x20],rbx
   14002e01a:	call   0x14001dd90
   14002e01f:	mov    BYTE PTR [rdi+0x3],0x5
   14002e023:	mov    esi,ebx
   14002e025:	jmp    0x14002eb9c
   14002e02a:	lea    rcx,[rdi+0x4]
   14002e02e:	lea    r8,[rip+0x8627]        # 0x14003665c
   14002e035:	mov    edx,0x16
   14002e03a:	call   0x140026f70
   14002e03f:	xor    ebx,ebx
   14002e041:	test   eax,eax
   14002e043:	je     0x14002e059
   14002e045:	xor    r9d,r9d
   14002e048:	xor    r8d,r8d
   14002e04b:	xor    edx,edx
   14002e04d:	xor    ecx,ecx
   14002e04f:	mov    QWORD PTR [rsp+0x20],rbx
   14002e054:	call   0x14001dd90
   14002e059:	mov    BYTE PTR [rdi+0x3],0x6
   14002e05d:	mov    esi,ebx
   14002e05f:	jmp    0x14002eb9c
   14002e064:	movzx  r8d,r10w
   14002e068:	mov    WORD PTR [rsp+0x7a],r10w
   14002e06e:	mov    ecx,r9d
   14002e071:	shr    ecx,0x18
   14002e074:	mov    eax,r8d
   14002e077:	mov    DWORD PTR [rsp+0x72],r11d
   14002e07c:	shr    eax,0x8
   14002e07f:	mov    r11d,0x5
   14002e085:	xor    ebx,ebx
   14002e087:	imul   r8d,r8d,0x4d10
   14002e08e:	lea    edx,[rax+rcx*2]
   14002e091:	mov    QWORD PTR [rsp+0xb8],r14
   14002e099:	mov    DWORD PTR [rsp+0x76],r9d
   14002e09e:	mov    QWORD PTR [rsp+0xb0],r15
   14002e0a6:	mov    WORD PTR [rsp+0x70],0x0
   14002e0ad:	mov    DWORD PTR [rsp+0x48],r11d
   14002e0b2:	imul   edx,edx,0x4d
   14002e0b5:	lea    ecx,[rdx+r8*1-0x134312f4]
   14002e0bd:	lea    rdx,[rip+0x1355c]        # 0x140041620
   14002e0c4:	mov    edi,0x7fff8000
   14002e0c9:	sar    ecx,0x10
   14002e0cc:	sub    rdx,0x60
   14002e0d0:	mov    r12d,0xffff8000
   14002e0d6:	movsx  r10d,cx
   14002e0da:	mov    DWORD PTR [rsp+0x34],ecx
   14002e0de:	neg    r10d
   14002e0e1:	je     0x14002e51d
   14002e0e7:	test   r10d,r10d
   14002e0ea:	jns    0x14002e0fa
   14002e0ec:	lea    rdx,[rip+0x1368d]        # 0x140041780
   14002e0f3:	neg    r10d
   14002e0f6:	sub    rdx,0x60
   14002e0fa:	test   r10d,r10d
   14002e0fd:	je     0x14002e51d
   14002e103:	mov    r9d,DWORD PTR [rsp+0x74]
   14002e108:	mov    r8d,DWORD PTR [rsp+0x70]
   14002e10d:	data16 xchg ax,ax
   14002e110:	mov    eax,r10d
   14002e113:	add    rdx,0x54
   14002e117:	sar    r10d,0x3
   14002e11b:	and    eax,0x7
   14002e11e:	mov    DWORD PTR [rsp+0x40],r10d
   14002e123:	mov    QWORD PTR [rsp+0x38],rdx
   14002e128:	je     0x14002e50e
   14002e12e:	cdqe   
   14002e130:	lea    rcx,[rax+rax*2]
   14002e134:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14002e13a:	lea    r15,[rdx+rcx*4]
   14002e13e:	jb     0x14002e173
   14002e140:	mov    rax,QWORD PTR [r15]
   14002e143:	lea    rcx,[rsp+0x90]
   14002e14b:	mov    QWORD PTR [rcx],rax
   14002e14e:	mov    eax,DWORD PTR [r15+0x8]
   14002e152:	lea    r15,[rsp+0x90]
   14002e15a:	mov    DWORD PTR [rcx+0x8],eax
   14002e15d:	mov    rax,QWORD PTR [rsp+0x90]
   14002e165:	shr    rax,0x10
   14002e169:	sub    eax,0x1
   14002e16c:	mov    DWORD PTR [rsp+0x92],eax
   14002e173:	movzx  ecx,WORD PTR [r15+0xa]
   14002e178:	movzx  eax,WORD PTR [rsp+0x7a]
   14002e17d:	mov    DWORD PTR [rsp+0x60],ebx
   14002e181:	movzx  edx,cx
   14002e184:	and    cx,0x7fff
   14002e189:	mov    DWORD PTR [rsp+0x64],ebx
   14002e18d:	xor    dx,ax
   14002e190:	and    ax,0x7fff
   14002e194:	mov    DWORD PTR [rsp+0x68],ebx
   14002e198:	and    dx,0x8000
   14002e19d:	cmp    ax,0x7fff
   14002e1a1:	lea    ebp,[rax+rcx*1]
   14002e1a4:	mov    WORD PTR [rsp+0x32],dx
   14002e1a9:	jae    0x14002e4ee
   14002e1af:	cmp    cx,0x7fff
   14002e1b4:	jae    0x14002e4ee
   14002e1ba:	cmp    bp,0xbffd
   14002e1bf:	ja     0x14002e4ee
   14002e1c5:	cmp    bp,0x3fbf
   14002e1ca:	ja     0x14002e1e8
   14002e1cc:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e1d1:	mov    DWORD PTR [rsp+0x78],ebx
   14002e1d5:	mov    r9d,ebx
   14002e1d8:	mov    DWORD PTR [rsp+0x74],ebx
   14002e1dc:	mov    r8d,ebx
   14002e1df:	mov    DWORD PTR [rsp+0x70],ebx
   14002e1e3:	jmp    0x14002e50e
   14002e1e8:	test   ax,ax
   14002e1eb:	jne    0x14002e216
   14002e1ed:	mov    eax,DWORD PTR [rsp+0x78]
   14002e1f1:	add    bp,0x1
   14002e1f5:	btr    eax,0x1f
   14002e1f9:	test   eax,eax
   14002e1fb:	jne    0x14002e216
   14002e1fd:	test   r9d,r9d
   14002e200:	jne    0x14002e216
   14002e202:	test   r8d,r8d
   14002e205:	jne    0x14002e216
   14002e207:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e20c:	mov    WORD PTR [rsp+0x7a],bx
   14002e211:	jmp    0x14002e50e
   14002e216:	test   cx,cx
   14002e219:	jne    0x14002e252
   14002e21b:	mov    eax,DWORD PTR [r15+0x8]
   14002e21f:	add    bp,0x1
   14002e223:	btr    eax,0x1f
   14002e227:	test   eax,eax
   14002e229:	jne    0x14002e252
   14002e22b:	cmp    DWORD PTR [r15+0x4],ebx
   14002e22f:	jne    0x14002e252
   14002e231:	cmp    DWORD PTR [r15],ebx
   14002e234:	jne    0x14002e252
   14002e236:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e23b:	mov    DWORD PTR [rsp+0x78],ebx
   14002e23f:	mov    r9d,ebx
   14002e242:	mov    DWORD PTR [rsp+0x74],ebx
   14002e246:	mov    r8d,ebx
   14002e249:	mov    DWORD PTR [rsp+0x70],ebx
   14002e24d:	jmp    0x14002e50e
   14002e252:	mov    r14d,ebx
   14002e255:	lea    rdx,[rsp+0x64]
   14002e25a:	mov    r13d,r11d
   14002e25d:	data16 xchg ax,ax
   14002e260:	test   r13d,r13d
   14002e263:	lea    eax,[r14+r14*1]
   14002e267:	mov    edi,r13d
   14002e26a:	movsxd rcx,eax
   14002e26d:	jle    0x14002e2e0
   14002e26f:	mov    r12d,r14d
   14002e272:	lea    r10,[rsp+rcx*1+0x70]
   14002e277:	lea    r11,[r15+0x8]
   14002e27b:	and    r12d,0x1
   14002e27f:	nop
   14002e280:	movzx  ecx,WORD PTR [r10]
   14002e284:	movzx  eax,WORD PTR [r11]
   14002e288:	imul   ecx,eax
   14002e28b:	test   r12d,r12d
   14002e28e:	je     0x14002e2ad
   14002e290:	mov    eax,DWORD PTR [rdx-0x4]
   14002e293:	mov    r8d,ebx
   14002e296:	lea    r9d,[rax+rcx*1]
   14002e29a:	cmp    r9d,eax
   14002e29d:	jb     0x14002e2a4
   14002e29f:	cmp    r9d,ecx
   14002e2a2:	jae    0x14002e2a7
   14002e2a4:	mov    r8d,esi
   14002e2a7:	mov    DWORD PTR [rdx-0x4],r9d
   14002e2ab:	jmp    0x14002e2c8
   14002e2ad:	mov    eax,DWORD PTR [rdx-0x4]
   14002e2b0:	mov    r8d,ebx
   14002e2b3:	lea    r9d,[rax+rcx*1]
   14002e2b7:	cmp    r9d,eax
   14002e2ba:	jb     0x14002e2c1
   14002e2bc:	cmp    r9d,ecx
   14002e2bf:	jae    0x14002e2c4
   14002e2c1:	mov    r8d,esi
   14002e2c4:	mov    DWORD PTR [rdx-0x4],r9d
   14002e2c8:	test   r8d,r8d
   14002e2cb:	je     0x14002e2d1
   14002e2cd:	add    WORD PTR [rdx],0x1
   14002e2d1:	sub    edi,0x1
   14002e2d4:	add    r10,0x2
   14002e2d8:	sub    r11,0x2
   14002e2dc:	test   edi,edi
   14002e2de:	jg     0x14002e280
   14002e2e0:	sub    r13d,0x1
   14002e2e4:	add    rdx,0x2
   14002e2e8:	add    r14d,0x1
   14002e2ec:	test   r13d,r13d
   14002e2ef:	jg     0x14002e260
   14002e2f5:	add    bp,0xc002
   14002e2fa:	test   bp,bp
   14002e2fd:	jle    0x14002e3b8
   14002e303:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e308:	mov    edx,DWORD PTR [rsp+0x64]
   14002e30c:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e311:	bt     r9d,0x1f
   14002e316:	jb     0x14002e34a
   14002e318:	mov    ecx,edx
   14002e31a:	mov    eax,r8d
   14002e31d:	add    r9d,r9d
   14002e320:	add    edx,edx
   14002e322:	shr    eax,0x1f
   14002e325:	shr    ecx,0x1f
   14002e328:	add    r8d,r8d
   14002e32b:	or     edx,eax
   14002e32d:	or     r9d,ecx
   14002e330:	add    bp,0xffff
   14002e335:	mov    DWORD PTR [rsp+0x64],edx
   14002e339:	mov    DWORD PTR [rsp+0x68],r9d
   14002e33e:	test   bp,bp
   14002e341:	mov    DWORD PTR [rsp+0x60],r8d
   14002e346:	jg     0x14002e311
   14002e348:	jmp    0x14002e3c6
   14002e34a:	test   bp,bp
   14002e34d:	jle    0x14002e3c6
   14002e34f:	movzx  eax,WORD PTR [rsp+0x60]
   14002e354:	cmp    ax,0x8000
   14002e358:	ja     0x14002e36e
   14002e35a:	and    r8d,0x1ffff
   14002e361:	cmp    r8d,0x18000
   14002e368:	jne    0x14002e469
   14002e36e:	mov    eax,DWORD PTR [rsp+0x62]
   14002e372:	cmp    eax,0xffffffff
   14002e375:	jne    0x14002e45e
   14002e37b:	mov    eax,DWORD PTR [rsp+0x66]
   14002e37f:	mov    DWORD PTR [rsp+0x62],ebx
   14002e383:	cmp    eax,0xffffffff
   14002e386:	jne    0x14002e44c
   14002e38c:	movzx  eax,WORD PTR [rsp+0x6a]
   14002e391:	mov    DWORD PTR [rsp+0x66],ebx
   14002e395:	cmp    ax,0xffff
   14002e399:	jne    0x14002e438
   14002e39f:	mov    edx,DWORD PTR [rsp+0x64]
   14002e3a3:	mov    WORD PTR [rsp+0x6a],0x8000
   14002e3aa:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e3af:	add    bp,0x1
   14002e3b3:	jmp    0x14002e469
   14002e3b8:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e3bd:	mov    edx,DWORD PTR [rsp+0x64]
   14002e3c1:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e3c6:	add    bp,0xffff
   14002e3cb:	jns    0x14002e34f
   14002e3cd:	movzx  eax,bp
   14002e3d0:	mov    esi,ebx
   14002e3d2:	neg    ax
   14002e3d5:	movzx  r10d,ax
   14002e3d9:	add    bp,r10w
   14002e3dd:	data16 xchg ax,ax
   14002e3e0:	test   BYTE PTR [rsp+0x60],0x1
   14002e3e5:	je     0x14002e3ea
   14002e3e7:	add    esi,0x1
   14002e3ea:	mov    ecx,edx
   14002e3ec:	mov    eax,r9d
   14002e3ef:	shr    r8d,1
   14002e3f2:	shl    ecx,0x1f
   14002e3f5:	shr    edx,1
   14002e3f7:	shl    eax,0x1f
   14002e3fa:	or     r8d,ecx
   14002e3fd:	shr    r9d,1
   14002e400:	or     edx,eax
   14002e402:	sub    r10,0x1
   14002e406:	mov    DWORD PTR [rsp+0x60],r8d
   14002e40b:	jne    0x14002e3e0
   14002e40d:	test   esi,esi
   14002e40f:	mov    DWORD PTR [rsp+0x64],edx
   14002e413:	mov    DWORD PTR [rsp+0x68],r9d
   14002e418:	lea    esi,[r10+0x1]
   14002e41c:	je     0x14002e34f
   14002e422:	mov    ax,r8w
   14002e426:	or     ax,si
   14002e429:	mov    WORD PTR [rsp+0x60],ax
   14002e42e:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e433:	jmp    0x14002e354
   14002e438:	mov    edx,DWORD PTR [rsp+0x64]
   14002e43c:	add    ax,0x1
   14002e440:	mov    WORD PTR [rsp+0x6a],ax
   14002e445:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e44a:	jmp    0x14002e469
   14002e44c:	add    eax,0x1
   14002e44f:	mov    DWORD PTR [rsp+0x66],eax
   14002e453:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e458:	mov    edx,DWORD PTR [rsp+0x64]
   14002e45c:	jmp    0x14002e469
   14002e45e:	add    eax,0x1
   14002e461:	mov    DWORD PTR [rsp+0x62],eax
   14002e465:	mov    edx,DWORD PTR [rsp+0x64]
   14002e469:	cmp    bp,0x7fff
   14002e46e:	jb     0x14002e4aa
   14002e470:	cmp    WORD PTR [rsp+0x32],bx
   14002e475:	mov    r10d,DWORD PTR [rsp+0x40]
   14002e47a:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e47f:	mov    edi,0x7fff8000
   14002e484:	mov    r12d,0xffff8000
   14002e48a:	mov    r9d,ebx
   14002e48d:	mov    eax,edi
   14002e48f:	mov    DWORD PTR [rsp+0x74],ebx
   14002e493:	mov    r8d,ebx
   14002e496:	cmovne eax,r12d
   14002e49a:	mov    DWORD PTR [rsp+0x70],ebx
   14002e49e:	mov    r11d,0x5
   14002e4a4:	mov    DWORD PTR [rsp+0x78],eax
   14002e4a8:	jmp    0x14002e50e
   14002e4aa:	movzx  eax,WORD PTR [rsp+0x62]
   14002e4af:	or     bp,WORD PTR [rsp+0x32]
   14002e4b4:	mov    r10d,DWORD PTR [rsp+0x40]
   14002e4b9:	mov    DWORD PTR [rsp+0x72],edx
   14002e4bd:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e4c2:	mov    WORD PTR [rsp+0x70],ax
   14002e4c7:	mov    r8d,DWORD PTR [rsp+0x70]
   14002e4cc:	mov    DWORD PTR [rsp+0x76],r9d
   14002e4d1:	mov    r9d,DWORD PTR [rsp+0x74]
   14002e4d6:	mov    WORD PTR [rsp+0x7a],bp
   14002e4db:	mov    edi,0x7fff8000
   14002e4e0:	mov    r11d,0x5
   14002e4e6:	mov    r12d,0xffff8000
   14002e4ec:	jmp    0x14002e50e
   14002e4ee:	test   dx,dx
   14002e4f1:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e4f6:	mov    eax,edi
   14002e4f8:	cmovne eax,r12d
   14002e4fc:	mov    r9d,ebx
   14002e4ff:	mov    DWORD PTR [rsp+0x74],ebx
   14002e503:	mov    r8d,ebx
   14002e506:	mov    DWORD PTR [rsp+0x70],ebx
   14002e50a:	mov    DWORD PTR [rsp+0x78],eax
   14002e50e:	test   r10d,r10d
   14002e511:	jne    0x14002e110
   14002e517:	mov    ecx,DWORD PTR [rsp+0x34]
   14002e51b:	jmp    0x14002e527
   14002e51d:	mov    r9d,DWORD PTR [rsp+0x74]
   14002e522:	mov    r8d,DWORD PTR [rsp+0x70]
   14002e527:	mov    eax,DWORD PTR [rsp+0x78]
   14002e52b:	shr    eax,0x10
   14002e52e:	cmp    ax,0x3fff
   14002e532:	jb     0x14002e897
   14002e538:	add    cx,0x1
   14002e53c:	mov    r14d,ebx
   14002e53f:	mov    DWORD PTR [rsp+0x60],ebx
   14002e543:	mov    DWORD PTR [rsp+0x34],ecx
   14002e547:	movzx  ecx,WORD PTR [rsp+0x8a]
   14002e54f:	mov    DWORD PTR [rsp+0x64],ebx
   14002e553:	movzx  r15d,cx
   14002e557:	and    cx,0x7fff
   14002e55c:	mov    DWORD PTR [rsp+0x68],ebx
   14002e560:	xor    r15w,ax
   14002e564:	and    ax,0x7fff
   14002e568:	and    r15w,0x8000
   14002e56e:	cmp    ax,0x7fff
   14002e572:	lea    ebp,[rax+rcx*1]
   14002e575:	jae    0x14002e885
   14002e57b:	cmp    cx,0x7fff
   14002e580:	jae    0x14002e885
   14002e586:	cmp    bp,0xbffd
   14002e58b:	ja     0x14002e885
   14002e591:	cmp    bp,0x3fbf
   14002e596:	ja     0x14002e5a7
   14002e598:	mov    DWORD PTR [rsp+0x78],ebx
   14002e59c:	mov    r9d,ebx
   14002e59f:	mov    r8d,ebx
   14002e5a2:	jmp    0x14002e897
   14002e5a7:	test   ax,ax
   14002e5aa:	jne    0x14002e5d0
   14002e5ac:	mov    eax,DWORD PTR [rsp+0x78]
   14002e5b0:	add    bp,0x1
   14002e5b4:	btr    eax,0x1f
   14002e5b8:	test   eax,eax
   14002e5ba:	jne    0x14002e5d0
   14002e5bc:	test   r9d,r9d
   14002e5bf:	jne    0x14002e5d0
   14002e5c1:	test   r8d,r8d
   14002e5c4:	jne    0x14002e5d0
   14002e5c6:	mov    WORD PTR [rsp+0x7a],bx
   14002e5cb:	jmp    0x14002e897
   14002e5d0:	test   cx,cx
   14002e5d3:	jne    0x14002e609
   14002e5d5:	mov    eax,DWORD PTR [rsp+0x88]
   14002e5dc:	add    bp,0x1
   14002e5e0:	btr    eax,0x1f
   14002e5e4:	test   eax,eax
   14002e5e6:	jne    0x14002e609
   14002e5e8:	cmp    DWORD PTR [rsp+0x84],ebx
   14002e5ef:	jne    0x14002e609
   14002e5f1:	cmp    DWORD PTR [rsp+0x80],ebx
   14002e5f8:	jne    0x14002e609
   14002e5fa:	mov    DWORD PTR [rsp+0x78],ebx
   14002e5fe:	mov    r9d,ebx
   14002e601:	mov    r8d,ebx
   14002e604:	jmp    0x14002e897
   14002e609:	mov    r13d,ebx
   14002e60c:	lea    rdx,[rsp+0x64]
   14002e611:	test   r11d,r11d
   14002e614:	lea    eax,[r13+r13*1+0x0]
   14002e619:	mov    edi,r11d
   14002e61c:	movsxd rcx,eax
   14002e61f:	jle    0x14002e6a5
   14002e625:	mov    r12d,r13d
   14002e628:	lea    r10,[rsp+0x88]
   14002e630:	lea    r11,[rsp+rcx*1+0x70]
   14002e635:	and    r12d,0x1
   14002e639:	data16 xchg ax,ax
   14002e63c:	data16 data16 xchg ax,ax
   14002e640:	movzx  ecx,WORD PTR [r10]
   14002e644:	movzx  eax,WORD PTR [r11]
   14002e648:	imul   ecx,eax
   14002e64b:	test   r12d,r12d
   14002e64e:	je     0x14002e66d
   14002e650:	mov    eax,DWORD PTR [rdx-0x4]
   14002e653:	mov    r8d,ebx
   14002e656:	lea    r9d,[rax+rcx*1]
   14002e65a:	cmp    r9d,eax
   14002e65d:	jb     0x14002e664
   14002e65f:	cmp    r9d,ecx
   14002e662:	jae    0x14002e667
   14002e664:	mov    r8d,esi
   14002e667:	mov    DWORD PTR [rdx-0x4],r9d
   14002e66b:	jmp    0x14002e688
   14002e66d:	mov    eax,DWORD PTR [rdx-0x4]
   14002e670:	mov    r8d,ebx
   14002e673:	lea    r9d,[rax+rcx*1]
   14002e677:	cmp    r9d,eax
   14002e67a:	jb     0x14002e681
   14002e67c:	cmp    r9d,ecx
   14002e67f:	jae    0x14002e684
   14002e681:	mov    r8d,esi
   14002e684:	mov    DWORD PTR [rdx-0x4],r9d
   14002e688:	test   r8d,r8d
   14002e68b:	je     0x14002e691
   14002e68d:	add    WORD PTR [rdx],0x1
   14002e691:	sub    edi,0x1
   14002e694:	add    r11,0x2
   14002e698:	sub    r10,0x2
   14002e69c:	test   edi,edi
   14002e69e:	jg     0x14002e640
   14002e6a0:	mov    r11d,DWORD PTR [rsp+0x48]
   14002e6a5:	sub    r11d,0x1
   14002e6a9:	add    rdx,0x2
   14002e6ad:	add    r13d,0x1
   14002e6b1:	test   r11d,r11d
   14002e6b4:	mov    DWORD PTR [rsp+0x48],r11d
   14002e6b9:	jg     0x14002e611
   14002e6bf:	add    bp,0xc002
   14002e6c4:	test   bp,bp
   14002e6c7:	jle    0x14002e78e
   14002e6cd:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e6d2:	mov    edx,DWORD PTR [rsp+0x64]
   14002e6d6:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e6db:	xchg   ax,ax
   14002e6dd:	data16 xchg ax,ax
   14002e6e0:	bt     r9d,0x1f
   14002e6e5:	jb     0x14002e71c
   14002e6e7:	mov    ecx,edx
   14002e6e9:	mov    eax,r8d
   14002e6ec:	add    r9d,r9d
   14002e6ef:	add    edx,edx
   14002e6f1:	shr    eax,0x1f
   14002e6f4:	shr    ecx,0x1f
   14002e6f7:	add    r8d,r8d
   14002e6fa:	or     edx,eax
   14002e6fc:	or     r9d,ecx
   14002e6ff:	add    bp,0xffff
   14002e704:	mov    DWORD PTR [rsp+0x64],edx
   14002e708:	mov    DWORD PTR [rsp+0x68],r9d
   14002e70d:	test   bp,bp
   14002e710:	mov    DWORD PTR [rsp+0x60],r8d
   14002e715:	jg     0x14002e6e0
   14002e717:	jmp    0x14002e79c
   14002e71c:	test   bp,bp
   14002e71f:	jle    0x14002e79c
   14002e725:	movzx  eax,WORD PTR [rsp+0x60]
   14002e72a:	cmp    ax,0x8000
   14002e72e:	ja     0x14002e744
   14002e730:	and    r8d,0x1ffff
   14002e737:	cmp    r8d,0x18000
   14002e73e:	jne    0x14002e839
   14002e744:	mov    eax,DWORD PTR [rsp+0x62]
   14002e748:	cmp    eax,0xffffffff
   14002e74b:	jne    0x14002e82e
   14002e751:	mov    eax,DWORD PTR [rsp+0x66]
   14002e755:	mov    DWORD PTR [rsp+0x62],ebx
   14002e759:	cmp    eax,0xffffffff
   14002e75c:	jne    0x14002e81c
   14002e762:	movzx  eax,WORD PTR [rsp+0x6a]
   14002e767:	mov    DWORD PTR [rsp+0x66],ebx
   14002e76b:	cmp    ax,0xffff
   14002e76f:	jne    0x14002e808
   14002e775:	mov    edx,DWORD PTR [rsp+0x64]
   14002e779:	mov    WORD PTR [rsp+0x6a],0x8000
   14002e780:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e785:	add    bp,0x1
   14002e789:	jmp    0x14002e839
   14002e78e:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e793:	mov    edx,DWORD PTR [rsp+0x64]
   14002e797:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e79c:	add    bp,0xffff
   14002e7a1:	jns    0x14002e725
   14002e7a3:	movzx  eax,bp
   14002e7a6:	neg    ax
   14002e7a9:	movzx  r10d,ax
   14002e7ad:	add    bp,r10w
   14002e7b1:	test   BYTE PTR [rsp+0x60],0x1
   14002e7b6:	je     0x14002e7bc
   14002e7b8:	add    r14d,0x1
   14002e7bc:	mov    ecx,edx
   14002e7be:	mov    eax,r9d
   14002e7c1:	shr    r8d,1
   14002e7c4:	shl    ecx,0x1f
   14002e7c7:	shr    edx,1
   14002e7c9:	shl    eax,0x1f
   14002e7cc:	or     r8d,ecx
   14002e7cf:	shr    r9d,1
   14002e7d2:	or     edx,eax
   14002e7d4:	sub    r10,0x1
   14002e7d8:	mov    DWORD PTR [rsp+0x60],r8d
   14002e7dd:	jne    0x14002e7b1
   14002e7df:	test   r14d,r14d
   14002e7e2:	mov    DWORD PTR [rsp+0x64],edx
   14002e7e6:	mov    DWORD PTR [rsp+0x68],r9d
   14002e7eb:	je     0x14002e725
   14002e7f1:	mov    ax,r8w
   14002e7f5:	or     ax,0x1
   14002e7f9:	mov    WORD PTR [rsp+0x60],ax
   14002e7fe:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e803:	jmp    0x14002e72a
   14002e808:	mov    edx,DWORD PTR [rsp+0x64]
   14002e80c:	add    ax,0x1
   14002e810:	mov    WORD PTR [rsp+0x6a],ax
   14002e815:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e81a:	jmp    0x14002e839
   14002e81c:	add    eax,0x1
   14002e81f:	mov    DWORD PTR [rsp+0x66],eax
   14002e823:	mov    r9d,DWORD PTR [rsp+0x68]
   14002e828:	mov    edx,DWORD PTR [rsp+0x64]
   14002e82c:	jmp    0x14002e839
   14002e82e:	add    eax,0x1
   14002e831:	mov    DWORD PTR [rsp+0x62],eax
   14002e835:	mov    edx,DWORD PTR [rsp+0x64]
   14002e839:	cmp    bp,0x7fff
   14002e83e:	jb     0x14002e85d
   14002e840:	test   r15w,r15w
   14002e844:	mov    eax,0x7fff8000
   14002e849:	mov    ecx,0xffff8000
   14002e84e:	cmovne eax,ecx
   14002e851:	mov    r9d,ebx
   14002e854:	mov    r8d,ebx
   14002e857:	mov    DWORD PTR [rsp+0x78],eax
   14002e85b:	jmp    0x14002e897
   14002e85d:	movzx  eax,WORD PTR [rsp+0x62]
   14002e862:	mov    DWORD PTR [rsp+0x72],edx
   14002e866:	or     bp,r15w
   14002e86a:	mov    DWORD PTR [rsp+0x76],r9d
   14002e86f:	mov    r9d,DWORD PTR [rsp+0x74]
   14002e874:	mov    WORD PTR [rsp+0x70],ax
   14002e879:	mov    r8d,DWORD PTR [rsp+0x70]
   14002e87e:	mov    WORD PTR [rsp+0x7a],bp
   14002e883:	jmp    0x14002e897
   14002e885:	test   r15w,r15w
   14002e889:	mov    r9d,ebx
   14002e88c:	mov    r8d,ebx
   14002e88f:	cmovne edi,r12d
   14002e893:	mov    DWORD PTR [rsp+0x78],edi
   14002e897:	test   BYTE PTR [rsp+0x50],0x1
   14002e89c:	mov    r13,QWORD PTR [rsp+0x58]
   14002e8a1:	mov    eax,DWORD PTR [rsp+0x34]
   14002e8a5:	mov    r15,QWORD PTR [rsp+0xb0]
   14002e8ad:	mov    r14,QWORD PTR [rsp+0xb8]
   14002e8b5:	mov    WORD PTR [r13+0x0],ax
   14002e8ba:	je     0x14002e8f7
   14002e8bc:	mov    edi,DWORD PTR [rsp+0x44]
   14002e8c0:	cwde   
   14002e8c1:	add    edi,eax
   14002e8c3:	test   edi,edi
   14002e8c5:	jg     0x14002e8fb
   14002e8c7:	cmp    WORD PTR [rsp+0x30],0x8000
   14002e8ce:	mov    eax,0x20
   14002e8d3:	mov    ecx,0x2d
   14002e8d8:	cmove  eax,ecx
   14002e8db:	mov    WORD PTR [r13+0x0],bx
   14002e8e0:	mov    BYTE PTR [r13+0x3],0x1
   14002e8e5:	mov    BYTE PTR [r13+0x4],0x30
   14002e8ea:	mov    BYTE PTR [r13+0x5],bl
   14002e8ee:	mov    BYTE PTR [r13+0x2],al
   14002e8f2:	jmp    0x14002eb9c
   14002e8f7:	mov    edi,DWORD PTR [rsp+0x44]
   14002e8fb:	mov    r10d,DWORD PTR [rsp+0x78]
   14002e900:	mov    ecx,r9d
   14002e903:	mov    eax,0x15
   14002e908:	cmp    edi,eax
   14002e90a:	mov    WORD PTR [rsp+0x7a],bx
   14002e90f:	cmovg  edi,eax
   14002e912:	add    r9d,r9d
   14002e915:	shr    ecx,0x1f
   14002e918:	mov    eax,r8d
   14002e91b:	add    r8d,r8d
   14002e91e:	shr    r10d,0x10
   14002e922:	shr    eax,0x1f
   14002e925:	or     r9d,eax
   14002e928:	mov    eax,DWORD PTR [rsp+0x78]
   14002e92c:	lea    edx,[rax+rax*1]
   14002e92f:	mov    eax,r8d
   14002e932:	add    r8d,r8d
   14002e935:	or     edx,ecx
   14002e937:	mov    ecx,r9d
   14002e93a:	add    r9d,r9d
   14002e93d:	shr    eax,0x1f
   14002e940:	shr    ecx,0x1f
   14002e943:	add    edx,edx
   14002e945:	or     r9d,eax
   14002e948:	or     edx,ecx
   14002e94a:	mov    eax,r8d
   14002e94d:	mov    ecx,r9d
   14002e950:	shr    eax,0x1f
   14002e953:	add    r9d,r9d
   14002e956:	or     r9d,eax
   14002e959:	shr    ecx,0x1f
   14002e95c:	add    edx,edx
   14002e95e:	or     edx,ecx
   14002e960:	mov    ecx,r9d
   14002e963:	add    r9d,r9d
   14002e966:	shr    ecx,0x1f
   14002e969:	add    edx,edx
   14002e96b:	add    r8d,r8d
   14002e96e:	or     edx,ecx
   14002e970:	mov    eax,r8d
   14002e973:	add    r8d,r8d
   14002e976:	shr    eax,0x1f
   14002e979:	add    edx,edx
   14002e97b:	or     r9d,eax
   14002e97e:	mov    eax,r8d
   14002e981:	add    r8d,r8d
   14002e984:	mov    ecx,r9d
   14002e987:	shr    eax,0x1f
   14002e98a:	add    r9d,r9d
   14002e98d:	or     r9d,eax
   14002e990:	shr    ecx,0x1f
   14002e993:	mov    eax,r8d
   14002e996:	or     edx,ecx
   14002e998:	mov    ecx,r9d
   14002e99b:	shr    eax,0x1f
   14002e99e:	add    r9d,r9d
   14002e9a1:	shr    ecx,0x1f
   14002e9a4:	add    r8d,r8d
   14002e9a7:	or     r9d,eax
   14002e9aa:	add    edx,edx
   14002e9ac:	mov    eax,r8d
   14002e9af:	or     edx,ecx
   14002e9b1:	mov    ecx,r9d
   14002e9b4:	shr    eax,0x1f
   14002e9b7:	add    r9d,r9d
   14002e9ba:	shr    ecx,0x1f
   14002e9bd:	add    r8d,r8d
   14002e9c0:	or     r9d,eax
   14002e9c3:	add    edx,edx
   14002e9c5:	mov    eax,r8d
   14002e9c8:	or     edx,ecx
   14002e9ca:	mov    ecx,r9d
   14002e9cd:	shr    eax,0x1f
   14002e9d0:	add    r9d,r9d
   14002e9d3:	add    r8d,r8d
   14002e9d6:	lea    r11d,[rdx+rdx*1]
   14002e9da:	or     r9d,eax
   14002e9dd:	shr    ecx,0x1f
   14002e9e0:	mov    DWORD PTR [rsp+0x70],r8d
   14002e9e5:	or     r11d,ecx
   14002e9e8:	mov    DWORD PTR [rsp+0x74],r9d
   14002e9ed:	sub    r10d,0x3ffe
   14002e9f4:	mov    DWORD PTR [rsp+0x78],r11d
   14002e9f9:	jns    0x14002ea41
   14002e9fb:	neg    r10d
   14002e9fe:	movzx  edx,r10b
   14002ea02:	test   edx,edx
   14002ea04:	jle    0x14002ea41
   14002ea06:	data16 data16 xchg ax,ax
   14002ea0a:	data16 xchg ax,ax
   14002ea0d:	data16 xchg ax,ax
   14002ea10:	mov    ecx,r9d
   14002ea13:	mov    eax,r11d
   14002ea16:	shr    r8d,1
   14002ea19:	shr    r9d,1
   14002ea1c:	shl    eax,0x1f
   14002ea1f:	shl    ecx,0x1f
   14002ea22:	sub    edx,0x1
   14002ea25:	shr    r11d,1
   14002ea28:	or     r9d,eax
   14002ea2b:	or     r8d,ecx
   14002ea2e:	test   edx,edx
   14002ea30:	jg     0x14002ea10
   14002ea32:	mov    DWORD PTR [rsp+0x74],r9d
   14002ea37:	mov    DWORD PTR [rsp+0x70],r8d
   14002ea3c:	mov    DWORD PTR [rsp+0x78],r11d
   14002ea41:	lea    r12d,[rdi+0x1]
   14002ea45:	lea    rbp,[r13+0x4]
   14002ea49:	test   r12d,r12d
   14002ea4c:	mov    r10,rbp
   14002ea4f:	jle    0x14002eb4c
   14002ea55:	data16 data16 xchg ax,ax
   14002ea59:	data16 xchg ax,ax
   14002ea5c:	data16 data16 xchg ax,ax
   14002ea60:	lea    rcx,[rsp+0x70]
   14002ea65:	lea    rdx,[rsp+0x90]
   14002ea6d:	mov    rax,QWORD PTR [rcx]
   14002ea70:	mov    QWORD PTR [rdx],rax
   14002ea73:	mov    eax,DWORD PTR [rcx+0x8]
   14002ea76:	mov    ecx,r9d
   14002ea79:	mov    DWORD PTR [rdx+0x8],eax
   14002ea7c:	mov    eax,r8d
   14002ea7f:	lea    edx,[r8+r8*1]
   14002ea83:	shr    eax,0x1f
   14002ea86:	shr    ecx,0x1f
   14002ea89:	lea    r8d,[r9+r9*1]
   14002ea8d:	or     r8d,eax
   14002ea90:	lea    r9d,[r11+r11*1]
   14002ea94:	mov    eax,edx
   14002ea96:	or     r9d,ecx
   14002ea99:	mov    ecx,r8d
   14002ea9c:	shr    eax,0x1f
   14002ea9f:	add    r8d,r8d
   14002eaa2:	add    edx,edx
   14002eaa4:	shr    ecx,0x1f
   14002eaa7:	or     r8d,eax
   14002eaaa:	mov    rax,QWORD PTR [rsp+0x90]
   14002eab2:	lea    r11d,[r9+r9*1]
   14002eab6:	lea    edi,[rax+rdx*1]
   14002eab9:	or     r11d,ecx
   14002eabc:	cmp    edi,edx
   14002eabe:	jb     0x14002eac4
   14002eac0:	cmp    edi,eax
   14002eac2:	jae    0x14002eae1
   14002eac4:	lea    ecx,[r8+0x1]
   14002eac8:	mov    edx,ebx
   14002eaca:	cmp    ecx,r8d
   14002eacd:	jb     0x14002ead4
   14002eacf:	cmp    ecx,0x1
   14002ead2:	jae    0x14002ead6
   14002ead4:	mov    edx,esi
   14002ead6:	test   edx,edx
   14002ead8:	mov    r8d,ecx
   14002eadb:	je     0x14002eae1
   14002eadd:	add    r11d,0x1
   14002eae1:	shr    rax,0x20
   14002eae5:	lea    r9d,[r8+rax*1]
   14002eae9:	cmp    r9d,r8d
   14002eaec:	jb     0x14002eaf3
   14002eaee:	cmp    r9d,eax
   14002eaf1:	jae    0x14002eaf7
   14002eaf3:	add    r11d,0x1
   14002eaf7:	add    r11d,DWORD PTR [rsp+0x98]
   14002eaff:	mov    ecx,r9d
   14002eb02:	add    r9d,r9d
   14002eb05:	shr    ecx,0x1f
   14002eb08:	mov    eax,edi
   14002eb0a:	lea    r8d,[rdi+rdi*1]
   14002eb0e:	shr    eax,0x1f
   14002eb11:	sub    r12d,0x1
   14002eb15:	add    r10,0x1
   14002eb19:	or     r9d,eax
   14002eb1c:	lea    eax,[r11+r11*1]
   14002eb20:	mov    DWORD PTR [rsp+0x70],r8d
   14002eb25:	or     eax,ecx
   14002eb27:	mov    DWORD PTR [rsp+0x74],r9d
   14002eb2c:	mov    DWORD PTR [rsp+0x78],eax
   14002eb30:	shr    eax,0x18
   14002eb33:	mov    BYTE PTR [rsp+0x7b],bl
   14002eb37:	add    al,0x30
   14002eb39:	test   r12d,r12d
   14002eb3c:	mov    BYTE PTR [r10-0x1],al
   14002eb40:	jle    0x14002eb4c
   14002eb42:	mov    r11d,DWORD PTR [rsp+0x78]
   14002eb47:	jmp    0x14002ea60
   14002eb4c:	movzx  eax,BYTE PTR [r10-0x1]
   14002eb51:	sub    r10,0x2
   14002eb55:	cmp    al,0x35
   14002eb57:	jl     0x14002ebd8
   14002eb5d:	cmp    r10,rbp
   14002eb60:	jb     0x14002eb75
   14002eb62:	cmp    BYTE PTR [r10],0x39
   14002eb66:	jne    0x14002eb75
   14002eb68:	mov    BYTE PTR [r10],0x30
   14002eb6c:	sub    r10,0x1
   14002eb70:	cmp    r10,rbp
   14002eb73:	jae    0x14002eb62
   14002eb75:	cmp    r10,rbp
   14002eb78:	jae    0x14002eb84
   14002eb7a:	add    r10,0x1
   14002eb7e:	add    WORD PTR [r13+0x0],0x1
   14002eb84:	add    BYTE PTR [r10],0x1
   14002eb88:	sub    r10b,r13b
   14002eb8b:	sub    r10b,0x3
   14002eb8f:	movsx  rcx,r10b
   14002eb93:	mov    BYTE PTR [r13+0x3],r10b
   14002eb97:	mov    BYTE PTR [rcx+r13*1+0x4],bl
   14002eb9c:	mov    r13,QWORD PTR [rsp+0xc0]
   14002eba4:	mov    r12,QWORD PTR [rsp+0xc8]
   14002ebac:	mov    rbp,QWORD PTR [rsp+0xd0]
   14002ebb4:	mov    rbx,QWORD PTR [rsp+0xf8]
   14002ebbc:	mov    eax,esi
   14002ebbe:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002ebc6:	xor    rcx,rsp
   14002ebc9:	call   0x140019370
   14002ebce:	add    rsp,0xd8
   14002ebd5:	pop    rdi
   14002ebd6:	pop    rsi
   14002ebd7:	ret    
   14002ebd8:	cmp    r10,rbp
   14002ebdb:	jb     0x14002ebef
   14002ebdd:	data16 xchg ax,ax
   14002ebe0:	cmp    BYTE PTR [r10],0x30
   14002ebe4:	jne    0x14002ebef
   14002ebe6:	sub    r10,0x1
   14002ebea:	cmp    r10,rbp
   14002ebed:	jae    0x14002ebe0
   14002ebef:	cmp    r10,rbp
   14002ebf2:	jae    0x14002eb88
   14002ebf4:	cmp    WORD PTR [rsp+0x30],0x8000
   14002ebfb:	mov    eax,0x20
   14002ec00:	mov    ecx,0x2d
   14002ec05:	cmove  eax,ecx
   14002ec08:	mov    WORD PTR [r13+0x0],bx
   14002ec0d:	mov    BYTE PTR [r13+0x3],0x1
   14002ec12:	mov    BYTE PTR [rbp+0x0],0x30
   14002ec16:	mov    BYTE PTR [r13+0x5],bl
   14002ec1a:	mov    BYTE PTR [r13+0x2],al
   14002ec1e:	jmp    0x14002eb9c
   14002ec23:	int3   
   14002ec24:	int3   
   14002ec25:	int3   
   14002ec26:	int3   
   14002ec27:	int3   
   14002ec28:	int3   
   14002ec29:	int3   
   14002ec2a:	int3   
   14002ec2b:	int3   
   14002ec2c:	int3   
   14002ec2d:	int3   
   14002ec2e:	int3   
   14002ec2f:	int3   
   14002ec30:	sub    rsp,0x48
   14002ec34:	xor    eax,eax
   14002ec36:	lea    rcx,[rip+0x7a43]        # 0x140036680
   14002ec3d:	xor    r9d,r9d
   14002ec40:	mov    QWORD PTR [rsp+0x30],rax
   14002ec45:	mov    DWORD PTR [rsp+0x28],eax
   14002ec49:	lea    r8d,[rax+0x3]
   14002ec4d:	mov    edx,0x40000000
   14002ec52:	mov    DWORD PTR [rsp+0x20],0x3
   14002ec5a:	call   QWORD PTR [rip+0x2650]        # 0x1400312b0
   14002ec60:	mov    QWORD PTR [rip+0x128a9],rax        # 0x140041510
   14002ec67:	add    rsp,0x48
   14002ec6b:	ret    
   14002ec6c:	int3   
   14002ec6d:	int3   
   14002ec6e:	int3   
   14002ec6f:	int3   
   14002ec70:	sub    rsp,0x28
   14002ec74:	mov    rcx,QWORD PTR [rip+0x12895]        # 0x140041510
   14002ec7b:	cmp    rcx,0xffffffffffffffff
   14002ec7f:	je     0x14002ec8d
   14002ec81:	cmp    rcx,0xfffffffffffffffe
   14002ec85:	je     0x14002ec8d
   14002ec87:	call   QWORD PTR [rip+0x27b3]        # 0x140031440
   14002ec8d:	mov    rcx,QWORD PTR [rip+0x12874]        # 0x140041508
   14002ec94:	cmp    rcx,0xffffffffffffffff
   14002ec98:	je     0x14002eca6
   14002ec9a:	cmp    rcx,0xfffffffffffffffe
   14002ec9e:	je     0x14002eca6
   14002eca0:	call   QWORD PTR [rip+0x279a]        # 0x140031440
   14002eca6:	add    rsp,0x28
   14002ecaa:	ret    
   14002ecab:	int3   
   14002ecac:	int3   
   14002ecad:	int3   
   14002ecae:	int3   
   14002ecaf:	int3   
   14002ecb0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ecb5:	push   rsi
   14002ecb6:	sub    rsp,0x30
   14002ecba:	or     esi,0xffffffff
   14002ecbd:	test   rcx,rcx
   14002ecc0:	mov    rbx,rcx
   14002ecc3:	jne    0x14002ecf1
   14002ecc5:	call   0x14001b280
   14002ecca:	xor    r9d,r9d
   14002eccd:	xor    r8d,r8d
   14002ecd0:	xor    edx,edx
   14002ecd2:	xor    ecx,ecx
   14002ecd4:	mov    QWORD PTR [rsp+0x20],rbx
   14002ecd9:	mov    DWORD PTR [rax],0x16
   14002ecdf:	call   0x14001de30
   14002ece4:	or     eax,esi
   14002ece6:	mov    rbx,QWORD PTR [rsp+0x40]
   14002eceb:	add    rsp,0x30
   14002ecef:	pop    rsi
   14002ecf0:	ret    
   14002ecf1:	test   BYTE PTR [rcx+0x18],0x83
   14002ecf5:	je     0x14002ed34
   14002ecf7:	call   0x14002b720
   14002ecfc:	mov    rcx,rbx
   14002ecff:	mov    esi,eax
   14002ed01:	call   0x14002fe20
   14002ed06:	mov    rcx,rbx
   14002ed09:	call   0x140028fb0
   14002ed0e:	mov    ecx,eax
   14002ed10:	call   0x14002fcf0
   14002ed15:	test   eax,eax
   14002ed17:	jns    0x14002ed1e
   14002ed19:	or     esi,0xffffffff
   14002ed1c:	jmp    0x14002ed34
   14002ed1e:	mov    rcx,QWORD PTR [rbx+0x28]
   14002ed22:	test   rcx,rcx
   14002ed25:	je     0x14002ed34
   14002ed27:	call   0x14001a540
   14002ed2c:	mov    QWORD PTR [rbx+0x28],0x0
   14002ed34:	mov    DWORD PTR [rbx+0x18],0x0
   14002ed3b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ed40:	mov    eax,esi
   14002ed42:	add    rsp,0x30
   14002ed46:	pop    rsi
   14002ed47:	ret    
   14002ed48:	int3   
   14002ed49:	int3   
   14002ed4a:	int3   
   14002ed4b:	int3   
   14002ed4c:	int3   
   14002ed4d:	int3   
   14002ed4e:	int3   
   14002ed4f:	int3   
   14002ed50:	mov    QWORD PTR [rsp+0x10],rbx
   14002ed55:	mov    QWORD PTR [rsp+0x8],rcx
   14002ed5a:	push   rdi
   14002ed5b:	sub    rsp,0x30
   14002ed5f:	mov    rbx,rcx
   14002ed62:	or     edi,0xffffffff
   14002ed65:	xor    eax,eax
   14002ed67:	test   rcx,rcx
   14002ed6a:	setne  al
   14002ed6d:	test   eax,eax
   14002ed6f:	jne    0x14002ed98
   14002ed71:	call   0x14001b280
   14002ed76:	mov    DWORD PTR [rax],0x16
   14002ed7c:	mov    QWORD PTR [rsp+0x20],0x0
   14002ed85:	xor    r9d,r9d
   14002ed88:	xor    r8d,r8d
   14002ed8b:	xor    edx,edx
   14002ed8d:	xor    ecx,ecx
   14002ed8f:	call   0x14001de30
   14002ed94:	mov    eax,edi
   14002ed96:	jmp    0x14002edc1
   14002ed98:	test   BYTE PTR [rcx+0x18],0x40
   14002ed9c:	je     0x14002eda7
   14002ed9e:	mov    DWORD PTR [rcx+0x18],0x0
   14002eda5:	jmp    0x14002edbf
   14002eda7:	call   0x140028e90
   14002edac:	nop
   14002edad:	mov    rcx,rbx
   14002edb0:	call   0x14002ecb0
   14002edb5:	mov    edi,eax
   14002edb7:	mov    rcx,rbx
   14002edba:	call   0x140028f40
   14002edbf:	mov    eax,edi
   14002edc1:	mov    rbx,QWORD PTR [rsp+0x48]
   14002edc6:	add    rsp,0x30
   14002edca:	pop    rdi
   14002edcb:	ret    
   14002edcc:	int3   
   14002edcd:	int3   
   14002edce:	int3   
   14002edcf:	int3   
   14002edd0:	rex push rbp
   14002edd2:	sub    rsp,0x30
   14002edd6:	mov    rbp,rdx
   14002edd9:	mov    rcx,QWORD PTR [rbp+0x40]
   14002eddd:	call   0x140028f40
   14002ede2:	add    rsp,0x30
   14002ede6:	pop    rbp
   14002ede7:	ret    
   14002ede8:	int3   
   14002ede9:	int3   
   14002edea:	int3   
   14002edeb:	int3   
   14002edec:	int3   
   14002eded:	int3   
   14002edee:	int3   
   14002edef:	int3   
   14002edf0:	mov    QWORD PTR [rsp+0x18],rbx
   14002edf5:	mov    DWORD PTR [rsp+0x8],ecx
   14002edf9:	push   rsi
   14002edfa:	push   rdi
   14002edfb:	push   r12
   14002edfd:	sub    rsp,0x30
   14002ee01:	movsxd rbx,ecx
   14002ee04:	cmp    ebx,0xfffffffe
   14002ee07:	jne    0x14002ee1c
   14002ee09:	call   0x14001b280
   14002ee0e:	mov    DWORD PTR [rax],0x9
   14002ee14:	or     eax,0xffffffff
   14002ee17:	jmp    0x14002eefb
   14002ee1c:	test   ecx,ecx
   14002ee1e:	js     0x14002eed7
   14002ee24:	cmp    ebx,DWORD PTR [rip+0x1891e]        # 0x140047748
   14002ee2a:	jae    0x14002eed7
   14002ee30:	mov    rax,rbx
   14002ee33:	mov    rdi,rbx
   14002ee36:	sar    rdi,0x5
   14002ee3a:	lea    r12,[rip+0x1891f]        # 0x140047760
   14002ee41:	and    eax,0x1f
   14002ee44:	lea    rsi,[rax+rax*4]
   14002ee48:	add    rsi,rsi
   14002ee4b:	mov    rax,QWORD PTR [r12+rdi*8]
   14002ee4f:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14002ee53:	and    ecx,0x1
   14002ee56:	jne    0x14002ee7e
   14002ee58:	call   0x14001b280
   14002ee5d:	mov    DWORD PTR [rax],0x9
   14002ee63:	xor    edi,edi
   14002ee65:	mov    QWORD PTR [rsp+0x20],rdi
   14002ee6a:	xor    r9d,r9d
   14002ee6d:	xor    r8d,r8d
   14002ee70:	xor    edx,edx
   14002ee72:	xor    ecx,ecx
   14002ee74:	call   0x14001de30
   14002ee79:	or     eax,0xffffffff
   14002ee7c:	jmp    0x14002eefb
   14002ee7e:	mov    ecx,ebx
   14002ee80:	call   0x14002b400
   14002ee85:	nop
   14002ee86:	mov    rax,QWORD PTR [r12+rdi*8]
   14002ee8a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14002ee8f:	je     0x14002eebe
   14002ee91:	mov    ecx,ebx
   14002ee93:	call   0x14002b360
   14002ee98:	mov    rcx,rax
   14002ee9b:	call   QWORD PTR [rip+0x2437]        # 0x1400312d8
   14002eea1:	test   eax,eax
   14002eea3:	jne    0x14002eeba
   14002eea5:	call   QWORD PTR [rip+0x25cd]        # 0x140031478
   14002eeab:	mov    edi,eax
   14002eead:	test   eax,eax
   14002eeaf:	je     0x14002eecc
   14002eeb1:	call   0x14001b2b0
   14002eeb6:	mov    DWORD PTR [rax],edi
   14002eeb8:	jmp    0x14002eebe
   14002eeba:	xor    edi,edi
   14002eebc:	jmp    0x14002eecc
   14002eebe:	call   0x14001b280
   14002eec3:	mov    DWORD PTR [rax],0x9
   14002eec9:	or     edi,0xffffffff
   14002eecc:	mov    ecx,ebx
   14002eece:	call   0x14002b4d0
   14002eed3:	mov    eax,edi
   14002eed5:	jmp    0x14002eefb
   14002eed7:	call   0x14001b280
   14002eedc:	mov    DWORD PTR [rax],0x9
   14002eee2:	xor    edi,edi
   14002eee4:	mov    QWORD PTR [rsp+0x20],rdi
   14002eee9:	xor    r9d,r9d
   14002eeec:	xor    r8d,r8d
   14002eeef:	xor    edx,edx
   14002eef1:	xor    ecx,ecx
   14002eef3:	call   0x14001de30
   14002eef8:	or     eax,0xffffffff
   14002eefb:	mov    rbx,QWORD PTR [rsp+0x60]
   14002ef00:	add    rsp,0x30
   14002ef04:	pop    r12
   14002ef06:	pop    rdi
   14002ef07:	pop    rsi
   14002ef08:	ret    
   14002ef09:	int3   
   14002ef0a:	int3   
   14002ef0b:	int3   
   14002ef0c:	int3   
   14002ef0d:	int3   
   14002ef0e:	int3   
   14002ef0f:	int3   
   14002ef10:	rex push rbp
   14002ef12:	sub    rsp,0x30
   14002ef16:	mov    rbp,rdx
   14002ef19:	mov    ecx,DWORD PTR [rbp+0x50]
   14002ef1c:	call   0x14002b4d0
   14002ef21:	add    rsp,0x30
   14002ef25:	pop    rbp
   14002ef26:	ret    
   14002ef27:	int3   
   14002ef28:	int3   
   14002ef29:	int3   
   14002ef2a:	int3   
   14002ef2b:	int3   
   14002ef2c:	int3   
   14002ef2d:	int3   
   14002ef2e:	int3   
   14002ef2f:	int3   
   14002ef30:	mov    QWORD PTR [rsp+0x10],rdx
   14002ef35:	mov    DWORD PTR [rsp+0x8],ecx
   14002ef39:	push   rbx
   14002ef3a:	push   rdi
   14002ef3b:	push   r14
   14002ef3d:	sub    rsp,0x70
   14002ef41:	movsxd rax,ecx
   14002ef44:	mov    rdi,0xfffffffffffffffe
   14002ef4b:	mov    ebx,r8d
   14002ef4e:	cmp    eax,edi
   14002ef50:	mov    DWORD PTR [rsp+0x34],ebx
   14002ef54:	jne    0x14002ef78
   14002ef56:	call   0x14001b2b0
   14002ef5b:	xor    r14d,r14d
   14002ef5e:	mov    DWORD PTR [rax],r14d
   14002ef61:	call   0x14001b280
   14002ef66:	mov    DWORD PTR [rax],0x9
   14002ef6c:	or     eax,0xffffffff
   14002ef6f:	add    rsp,0x70
   14002ef73:	pop    r14
   14002ef75:	pop    rdi
   14002ef76:	pop    rbx
   14002ef77:	ret    
   14002ef78:	test   ecx,ecx
   14002ef7a:	js     0x14002f7fb
   14002ef80:	cmp    eax,DWORD PTR [rip+0x187c2]        # 0x140047748
   14002ef86:	jae    0x14002f7fb
   14002ef8c:	mov    QWORD PTR [rsp+0x68],rbp
   14002ef91:	mov    QWORD PTR [rsp+0x58],r12
   14002ef96:	mov    r12,rax
   14002ef99:	and    eax,0x1f
   14002ef9c:	sar    r12,0x5
   14002efa0:	lea    r8,[rip+0xfffffffffffd1059]        # 0x140000000
   14002efa7:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002efaf:	lea    rbp,[rax+rax*4]
   14002efb3:	add    rbp,rbp
   14002efb6:	movzx  eax,BYTE PTR [rcx+rbp*8+0x8]
   14002efbb:	test   al,0x1
   14002efbd:	jne    0x14002efd7
   14002efbf:	call   0x14001b2b0
   14002efc4:	xor    r14d,r14d
   14002efc7:	mov    DWORD PTR [rax],r14d
   14002efca:	call   0x14001b280
   14002efcf:	mov    DWORD PTR [rax],0x9
   14002efd5:	jmp    0x14002eff5
   14002efd7:	cmp    ebx,0x7fffffff
   14002efdd:	jbe    0x14002f011
   14002efdf:	call   0x14001b2b0
   14002efe4:	xor    r14d,r14d
   14002efe7:	mov    DWORD PTR [rax],r14d
   14002efea:	call   0x14001b280
   14002efef:	mov    DWORD PTR [rax],0x16
   14002eff5:	xor    r9d,r9d
   14002eff8:	xor    r8d,r8d
   14002effb:	xor    edx,edx
   14002effd:	xor    ecx,ecx
   14002efff:	mov    QWORD PTR [rsp+0x20],r14
   14002f004:	call   0x14001de30
   14002f009:	or     eax,0xffffffff
   14002f00c:	jmp    0x14002f0d5
   14002f011:	xor    r14d,r14d
   14002f014:	test   ebx,ebx
   14002f016:	mov    QWORD PTR [rsp+0x60],rsi
   14002f01b:	mov    esi,r14d
   14002f01e:	je     0x14002f7f4
   14002f024:	test   al,0x2
   14002f026:	jne    0x14002f7f4
   14002f02c:	test   rdx,rdx
   14002f02f:	jne    0x14002f05d
   14002f031:	call   0x14001b2b0
   14002f036:	mov    DWORD PTR [rax],r14d
   14002f039:	call   0x14001b280
   14002f03e:	xor    r9d,r9d
   14002f041:	xor    r8d,r8d
   14002f044:	xor    edx,edx
   14002f046:	xor    ecx,ecx
   14002f048:	mov    DWORD PTR [rax],0x16
   14002f04e:	mov    QWORD PTR [rsp+0x20],r14
   14002f053:	call   0x14001de30
   14002f058:	or     eax,0xffffffff
   14002f05b:	jmp    0x14002f0d0
   14002f05d:	mov    QWORD PTR [rsp+0x50],r13
   14002f062:	mov    QWORD PTR [rsp+0x48],r15
   14002f067:	movzx  r15d,BYTE PTR [rcx+rbp*8+0x38]
   14002f06d:	add    r15b,r15b
   14002f070:	sar    r15b,1
   14002f073:	movsx  ecx,r15b
   14002f077:	sub    ecx,0x1
   14002f07a:	je     0x14002f094
   14002f07c:	sub    ecx,0x1
   14002f07f:	jne    0x14002f08c
   14002f081:	mov    eax,ebx
   14002f083:	not    eax
   14002f085:	test   al,0x1
   14002f087:	je     0x14002f09c
   14002f089:	and    ebx,0xfffffffe
   14002f08c:	mov    r13,rdx
   14002f08f:	jmp    0x14002f147
   14002f094:	mov    eax,ebx
   14002f096:	not    eax
   14002f098:	test   al,0x1
   14002f09a:	jne    0x14002f0e8
   14002f09c:	call   0x14001b2b0
   14002f0a1:	mov    DWORD PTR [rax],r14d
   14002f0a4:	call   0x14001b280
   14002f0a9:	xor    r9d,r9d
   14002f0ac:	xor    r8d,r8d
   14002f0af:	xor    edx,edx
   14002f0b1:	xor    ecx,ecx
   14002f0b3:	mov    DWORD PTR [rax],0x16
   14002f0b9:	mov    QWORD PTR [rsp+0x20],r14
   14002f0be:	call   0x14001de30
   14002f0c3:	or     eax,0xffffffff
   14002f0c6:	mov    r13,QWORD PTR [rsp+0x50]
   14002f0cb:	mov    r15,QWORD PTR [rsp+0x48]
   14002f0d0:	mov    rsi,QWORD PTR [rsp+0x60]
   14002f0d5:	mov    rbp,QWORD PTR [rsp+0x68]
   14002f0da:	mov    r12,QWORD PTR [rsp+0x58]
   14002f0df:	add    rsp,0x70
   14002f0e3:	pop    r14
   14002f0e5:	pop    rdi
   14002f0e6:	pop    rbx
   14002f0e7:	ret    
   14002f0e8:	mov    eax,0x4
   14002f0ed:	shr    ebx,1
   14002f0ef:	cmp    ebx,eax
   14002f0f1:	cmovb  ebx,eax
   14002f0f4:	mov    ecx,ebx
   14002f0f6:	call   0x1400216b0
   14002f0fb:	test   rax,rax
   14002f0fe:	mov    r13,rax
   14002f101:	jne    0x14002f11e
   14002f103:	call   0x14001b280
   14002f108:	mov    DWORD PTR [rax],0xc
   14002f10e:	call   0x14001b2b0
   14002f113:	mov    DWORD PTR [rax],0x8
   14002f119:	or     eax,0xffffffff
   14002f11c:	jmp    0x14002f0c6
   14002f11e:	mov    ecx,DWORD PTR [rsp+0x90]
   14002f125:	xor    edx,edx
   14002f127:	lea    r8d,[rdx+0x1]
   14002f12b:	call   0x140028190
   14002f130:	lea    r8,[rip+0xfffffffffffd0ec9]        # 0x140000000
   14002f137:	mov    r11,rax
   14002f13a:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f142:	mov    QWORD PTR [rax+rbp*8+0x40],r11
   14002f147:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f14f:	mov    rdx,r13
   14002f152:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14002f157:	je     0x14002f1fc
   14002f15d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x9]
   14002f162:	cmp    cl,0xa
   14002f165:	je     0x14002f1fc
   14002f16b:	test   ebx,ebx
   14002f16d:	je     0x14002f1fc
   14002f173:	mov    BYTE PTR [r13+0x0],cl
   14002f177:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f17f:	add    ebx,0xffffffff
   14002f182:	test   r15b,r15b
   14002f185:	lea    rdx,[r13+0x1]
   14002f189:	mov    esi,0x1
   14002f18e:	mov    BYTE PTR [rax+rbp*8+0x9],0xa
   14002f193:	je     0x14002f1fc
   14002f195:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f19d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x39]
   14002f1a2:	cmp    cl,0xa
   14002f1a5:	je     0x14002f1fc
   14002f1a7:	test   ebx,ebx
   14002f1a9:	je     0x14002f1fc
   14002f1ab:	mov    BYTE PTR [rdx],cl
   14002f1ad:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f1b5:	add    rdx,rsi
   14002f1b8:	add    ebx,0xffffffff
   14002f1bb:	cmp    r15b,0x1
   14002f1bf:	mov    esi,0x2
   14002f1c4:	mov    BYTE PTR [rax+rbp*8+0x39],0xa
   14002f1c9:	jne    0x14002f1fc
   14002f1cb:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f1d3:	movzx  ecx,BYTE PTR [rax+rbp*8+0x3a]
   14002f1d8:	cmp    cl,0xa
   14002f1db:	je     0x14002f1fc
   14002f1dd:	test   ebx,ebx
   14002f1df:	je     0x14002f1fc
   14002f1e1:	mov    BYTE PTR [rdx],cl
   14002f1e3:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f1eb:	add    rdx,0x1
   14002f1ef:	mov    esi,0x3
   14002f1f4:	add    ebx,0xffffffff
   14002f1f7:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   14002f1fc:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f204:	lea    r9,[rsp+0x30]
   14002f209:	mov    r8d,ebx
   14002f20c:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14002f210:	mov    QWORD PTR [rsp+0x20],r14
   14002f215:	call   QWORD PTR [rip+0x20cd]        # 0x1400312e8
   14002f21b:	test   eax,eax
   14002f21d:	je     0x14002f75c
   14002f223:	movsxd rdx,DWORD PTR [rsp+0x30]
   14002f228:	test   edx,edx
   14002f22a:	js     0x14002f75c
   14002f230:	mov    eax,ebx
   14002f232:	cmp    rdx,rax
   14002f235:	ja     0x14002f75c
   14002f23b:	lea    r8,[rip+0xfffffffffffd0dbe]        # 0x140000000
   14002f242:	add    esi,edx
   14002f244:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f24c:	test   BYTE PTR [rax+rbp*8+0x8],0x80
   14002f251:	je     0x14002f7d2
   14002f257:	cmp    r15b,0x2
   14002f25b:	je     0x14002f567
   14002f261:	test   edx,edx
   14002f263:	je     0x14002f273
   14002f265:	cmp    BYTE PTR [r13+0x0],0xa
   14002f26a:	jne    0x14002f273
   14002f26c:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   14002f271:	jmp    0x14002f278
   14002f273:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14002f278:	movsxd rax,esi
   14002f27b:	mov    rbx,r13
   14002f27e:	mov    rdi,r13
   14002f281:	lea    rsi,[rax+r13*1]
   14002f285:	cmp    r13,rsi
   14002f288:	jae    0x14002f3fb
   14002f28e:	xchg   ax,ax
   14002f290:	movzx  eax,BYTE PTR [rdi]
   14002f293:	cmp    al,0x1a
   14002f295:	je     0x14002f3db
   14002f29b:	cmp    al,0xd
   14002f29d:	je     0x14002f2ae
   14002f29f:	mov    BYTE PTR [rbx],al
   14002f2a1:	add    rbx,0x1
   14002f2a5:	add    rdi,0x1
   14002f2a9:	jmp    0x14002f3d0
   14002f2ae:	lea    rax,[rsi-0x1]
   14002f2b2:	cmp    rdi,rax
   14002f2b5:	jae    0x14002f2e0
   14002f2b7:	cmp    BYTE PTR [rdi+0x1],0xa
   14002f2bb:	lea    rax,[rdi+0x1]
   14002f2bf:	jne    0x14002f2d1
   14002f2c1:	add    rdi,0x2
   14002f2c5:	mov    BYTE PTR [rbx],0xa
   14002f2c8:	add    rbx,0x1
   14002f2cc:	jmp    0x14002f3d0
   14002f2d1:	mov    BYTE PTR [rbx],0xd
   14002f2d4:	add    rbx,0x1
   14002f2d8:	mov    rdi,rax
   14002f2db:	jmp    0x14002f3d0
   14002f2e0:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f2e8:	lea    r9,[rsp+0x30]
   14002f2ed:	lea    rdx,[rsp+0xa0]
   14002f2f5:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14002f2f9:	mov    r8d,0x1
   14002f2ff:	add    rdi,0x1
   14002f303:	mov    QWORD PTR [rsp+0x20],r14
   14002f308:	call   QWORD PTR [rip+0x1fda]        # 0x1400312e8
   14002f30e:	test   eax,eax
   14002f310:	jne    0x14002f320
   14002f312:	call   QWORD PTR [rip+0x2160]        # 0x140031478
   14002f318:	test   eax,eax
   14002f31a:	jne    0x14002f3b9
   14002f320:	cmp    DWORD PTR [rsp+0x30],r14d
   14002f325:	je     0x14002f3b9
   14002f32b:	lea    r8,[rip+0xfffffffffffd0cce]        # 0x140000000
   14002f332:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f33a:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14002f33f:	je     0x14002f371
   14002f341:	cmp    BYTE PTR [rsp+0xa0],0xa
   14002f349:	jne    0x14002f354
   14002f34b:	mov    BYTE PTR [rbx],0xa
   14002f34e:	add    rbx,0x1
   14002f352:	jmp    0x14002f3d0
   14002f354:	mov    BYTE PTR [rbx],0xd
   14002f357:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f35f:	movzx  eax,BYTE PTR [rsp+0xa0]
   14002f367:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14002f36b:	add    rbx,0x1
   14002f36f:	jmp    0x14002f3d0
   14002f371:	cmp    rbx,r13
   14002f374:	jne    0x14002f389
   14002f376:	cmp    BYTE PTR [rsp+0xa0],0xa
   14002f37e:	jne    0x14002f389
   14002f380:	mov    BYTE PTR [rbx],0xa
   14002f383:	add    rbx,0x1
   14002f387:	jmp    0x14002f3d0
   14002f389:	mov    ecx,DWORD PTR [rsp+0x90]
   14002f390:	mov    r8d,0x1
   14002f396:	or     rdx,0xffffffffffffffff
   14002f39a:	call   0x140028190
   14002f39f:	cmp    BYTE PTR [rsp+0xa0],0xa
   14002f3a7:	je     0x14002f3c9
   14002f3a9:	mov    BYTE PTR [rbx],0xd
   14002f3ac:	add    rbx,0x1
   14002f3b0:	lea    r8,[rip+0xfffffffffffd0c49]        # 0x140000000
   14002f3b7:	jmp    0x14002f3d0
   14002f3b9:	mov    BYTE PTR [rbx],0xd
   14002f3bc:	add    rbx,0x1
   14002f3c0:	lea    r8,[rip+0xfffffffffffd0c39]        # 0x140000000
   14002f3c7:	jmp    0x14002f3d0
   14002f3c9:	lea    r8,[rip+0xfffffffffffd0c30]        # 0x140000000
   14002f3d0:	cmp    rdi,rsi
   14002f3d3:	jb     0x14002f290
   14002f3d9:	jmp    0x14002f3fb
   14002f3db:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f3e3:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   14002f3e8:	jne    0x14002f3f1
   14002f3ea:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   14002f3ef:	jmp    0x14002f3fb
   14002f3f1:	movzx  eax,BYTE PTR [rdi]
   14002f3f4:	add    rbx,0x1
   14002f3f8:	mov    BYTE PTR [rbx-0x1],al
   14002f3fb:	mov    esi,ebx
   14002f3fd:	sub    esi,r13d
   14002f400:	cmp    r15b,0x1
   14002f404:	jne    0x14002f7c1
   14002f40a:	test   esi,esi
   14002f40c:	je     0x14002f7b0
   14002f412:	mov    al,BYTE PTR [rbx-0x1]
   14002f415:	sub    rbx,0x1
   14002f419:	test   al,al
   14002f41b:	js     0x14002f426
   14002f41d:	add    rbx,0x1
   14002f421:	jmp    0x14002f4f7
   14002f426:	movzx  eax,al
   14002f429:	mov    edx,0x1
   14002f42e:	cmp    BYTE PTR [rax+r8*1+0x41520],r14b
   14002f436:	jne    0x14002f457
   14002f438:	cmp    edx,0x4
   14002f43b:	jg     0x14002f457
   14002f43d:	cmp    rbx,r13
   14002f440:	jb     0x14002f457
   14002f442:	movzx  eax,BYTE PTR [rbx-0x1]
   14002f446:	sub    rbx,0x1
   14002f44a:	add    edx,0x1
   14002f44d:	cmp    BYTE PTR [rax+r8*1+0x41520],r14b
   14002f455:	je     0x14002f438
   14002f457:	movzx  ecx,BYTE PTR [rbx]
   14002f45a:	movsx  eax,BYTE PTR [rcx+r8*1+0x41520]
   14002f463:	test   eax,eax
   14002f465:	jne    0x14002f482
   14002f467:	call   0x14001b280
   14002f46c:	mov    r15,QWORD PTR [rsp+0x98]
   14002f474:	or     edi,0xffffffff
   14002f477:	mov    DWORD PTR [rax],0x2a
   14002f47d:	jmp    0x14002f7da
   14002f482:	add    eax,0x1
   14002f485:	cmp    eax,edx
   14002f487:	jne    0x14002f491
   14002f489:	movsxd rax,edx
   14002f48c:	add    rbx,rax
   14002f48f:	jmp    0x14002f4f7
   14002f491:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f499:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14002f49e:	je     0x14002f4e0
   14002f4a0:	add    rbx,0x1
   14002f4a4:	cmp    edx,0x2
   14002f4a7:	mov    BYTE PTR [rax+rbp*8+0x9],cl
   14002f4ab:	jl     0x14002f4c0
   14002f4ad:	movzx  eax,BYTE PTR [rbx]
   14002f4b0:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f4b8:	add    rbx,0x1
   14002f4bc:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   14002f4c0:	cmp    edx,0x3
   14002f4c3:	jne    0x14002f4d8
   14002f4c5:	movzx  eax,BYTE PTR [rbx]
   14002f4c8:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f4d0:	add    rbx,0x1
   14002f4d4:	mov    BYTE PTR [rcx+rbp*8+0x3a],al
   14002f4d8:	movsxd rax,edx
   14002f4db:	sub    rbx,rax
   14002f4de:	jmp    0x14002f4f7
   14002f4e0:	mov    ecx,DWORD PTR [rsp+0x90]
   14002f4e7:	neg    edx
   14002f4e9:	mov    r8d,0x1
   14002f4ef:	movsxd rdx,edx
   14002f4f2:	call   0x140028190
   14002f4f7:	mov    eax,DWORD PTR [rsp+0x34]
   14002f4fb:	mov    r15,QWORD PTR [rsp+0x98]
   14002f503:	sub    ebx,r13d
   14002f506:	shr    eax,1
   14002f508:	mov    r9d,ebx
   14002f50b:	mov    r8,r13
   14002f50e:	mov    DWORD PTR [rsp+0x28],eax
   14002f512:	xor    edx,edx
   14002f514:	mov    ecx,0xfde9
   14002f519:	mov    QWORD PTR [rsp+0x20],r15
   14002f51e:	call   QWORD PTR [rip+0x1f2c]        # 0x140031450
   14002f524:	test   eax,eax
   14002f526:	mov    esi,eax
   14002f528:	jne    0x14002f53f
   14002f52a:	call   QWORD PTR [rip+0x1f48]        # 0x140031478
   14002f530:	mov    ecx,eax
   14002f532:	call   0x14001b2e0
   14002f537:	or     edi,0xffffffff
   14002f53a:	jmp    0x14002f7da
   14002f53f:	cmp    eax,ebx
   14002f541:	lea    rax,[rip+0xfffffffffffd0ab8]        # 0x140000000
   14002f548:	mov    rdi,0xfffffffffffffffe
   14002f54f:	mov    rax,QWORD PTR [rax+r12*8+0x47760]
   14002f557:	setne  r14b
   14002f55b:	add    esi,esi
   14002f55d:	mov    DWORD PTR [rax+rbp*8+0x48],r14d
   14002f562:	jmp    0x14002f7da
   14002f567:	test   edx,edx
   14002f569:	je     0x14002f57a
   14002f56b:	cmp    WORD PTR [r13+0x0],0xa
   14002f571:	jne    0x14002f57a
   14002f573:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   14002f578:	jmp    0x14002f57f
   14002f57a:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14002f57f:	movsxd rax,esi
   14002f582:	mov    rbx,r13
   14002f585:	mov    rdi,r13
   14002f588:	lea    rsi,[rax+r13*1]
   14002f58c:	cmp    r13,rsi
   14002f58f:	jae    0x14002f746
   14002f595:	mov    r15,0xfffffffffffffffe
   14002f59c:	data16 data16 xchg ax,ax
   14002f5a0:	movzx  eax,WORD PTR [rdi]
   14002f5a3:	cmp    ax,0x1a
   14002f5a7:	je     0x14002f725
   14002f5ad:	cmp    ax,0xd
   14002f5b1:	je     0x14002f5c3
   14002f5b3:	mov    WORD PTR [rbx],ax
   14002f5b6:	add    rbx,0x2
   14002f5ba:	add    rdi,0x2
   14002f5be:	jmp    0x14002f71a
   14002f5c3:	lea    rax,[rsi-0x2]
   14002f5c7:	cmp    rdi,rax
   14002f5ca:	jae    0x14002f5fa
   14002f5cc:	cmp    WORD PTR [rdi+0x2],0xa
   14002f5d1:	lea    rax,[rdi+0x2]
   14002f5d5:	jne    0x14002f5e9
   14002f5d7:	add    rdi,0x4
   14002f5db:	mov    WORD PTR [rbx],0xa
   14002f5e0:	add    rbx,0x2
   14002f5e4:	jmp    0x14002f71a
   14002f5e9:	mov    WORD PTR [rbx],0xd
   14002f5ee:	add    rbx,0x2
   14002f5f2:	mov    rdi,rax
   14002f5f5:	jmp    0x14002f71a
   14002f5fa:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f602:	lea    r9,[rsp+0x30]
   14002f607:	lea    rdx,[rsp+0xa8]
   14002f60f:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14002f613:	mov    r8d,0x2
   14002f619:	add    rdi,0x2
   14002f61d:	mov    QWORD PTR [rsp+0x20],r14
   14002f622:	call   QWORD PTR [rip+0x1cc0]        # 0x1400312e8
   14002f628:	test   eax,eax
   14002f62a:	jne    0x14002f63a
   14002f62c:	call   QWORD PTR [rip+0x1e46]        # 0x140031478
   14002f632:	test   eax,eax
   14002f634:	jne    0x14002f701
   14002f63a:	cmp    DWORD PTR [rsp+0x30],r14d
   14002f63f:	je     0x14002f701
   14002f645:	lea    r8,[rip+0xfffffffffffd09b4]        # 0x140000000
   14002f64c:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f654:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14002f659:	je     0x14002f6b4
   14002f65b:	cmp    WORD PTR [rsp+0xa8],0xa
   14002f664:	jne    0x14002f674
   14002f666:	mov    WORD PTR [rbx],0xa
   14002f66b:	add    rbx,0x2
   14002f66f:	jmp    0x14002f71a
   14002f674:	mov    WORD PTR [rbx],0xd
   14002f679:	movzx  eax,BYTE PTR [rsp+0xa8]
   14002f681:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f689:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14002f68d:	movzx  eax,BYTE PTR [rsp+0xa9]
   14002f695:	mov    rcx,QWORD PTR [r8+r12*8+0x47760]
   14002f69d:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   14002f6a1:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f6a9:	add    rbx,0x2
   14002f6ad:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   14002f6b2:	jmp    0x14002f71a
   14002f6b4:	cmp    rbx,r13
   14002f6b7:	jne    0x14002f6cf
   14002f6b9:	cmp    WORD PTR [rsp+0xa8],0xa
   14002f6c2:	jne    0x14002f6cf
   14002f6c4:	mov    WORD PTR [rbx],0xa
   14002f6c9:	add    rbx,0x2
   14002f6cd:	jmp    0x14002f71a
   14002f6cf:	mov    ecx,DWORD PTR [rsp+0x90]
   14002f6d6:	mov    r8d,0x1
   14002f6dc:	mov    rdx,r15
   14002f6df:	call   0x140028190
   14002f6e4:	cmp    WORD PTR [rsp+0xa8],0xa
   14002f6ed:	je     0x14002f713
   14002f6ef:	mov    WORD PTR [rbx],0xd
   14002f6f4:	add    rbx,0x2
   14002f6f8:	lea    r8,[rip+0xfffffffffffd0901]        # 0x140000000
   14002f6ff:	jmp    0x14002f71a
   14002f701:	mov    WORD PTR [rbx],0xd
   14002f706:	add    rbx,0x2
   14002f70a:	lea    r8,[rip+0xfffffffffffd08ef]        # 0x140000000
   14002f711:	jmp    0x14002f71a
   14002f713:	lea    r8,[rip+0xfffffffffffd08e6]        # 0x140000000
   14002f71a:	cmp    rdi,rsi
   14002f71d:	jb     0x14002f5a0
   14002f723:	jmp    0x14002f746
   14002f725:	mov    rax,QWORD PTR [r8+r12*8+0x47760]
   14002f72d:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   14002f732:	jne    0x14002f73b
   14002f734:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   14002f739:	jmp    0x14002f746
   14002f73b:	movzx  eax,WORD PTR [rdi]
   14002f73e:	add    rbx,0x2
   14002f742:	mov    WORD PTR [rbx-0x2],ax
   14002f746:	mov    r15,QWORD PTR [rsp+0x98]
   14002f74e:	mov    esi,ebx
   14002f750:	mov    rdi,0xfffffffffffffffe
   14002f757:	sub    esi,r13d
   14002f75a:	jmp    0x14002f7da
   14002f75c:	call   QWORD PTR [rip+0x1d16]        # 0x140031478
   14002f762:	cmp    eax,0x5
   14002f765:	jne    0x14002f78a
   14002f767:	call   0x14001b280
   14002f76c:	mov    DWORD PTR [rax],0x9
   14002f772:	call   0x14001b2b0
   14002f777:	mov    r15,QWORD PTR [rsp+0x98]
   14002f77f:	mov    DWORD PTR [rax],0x5
   14002f785:	or     edi,0xffffffff
   14002f788:	jmp    0x14002f7da
   14002f78a:	cmp    eax,0x6d
   14002f78d:	jne    0x14002f79c
   14002f78f:	mov    r15,QWORD PTR [rsp+0x98]
   14002f797:	mov    edi,r14d
   14002f79a:	jmp    0x14002f7da
   14002f79c:	mov    ecx,eax
   14002f79e:	call   0x14001b2e0
   14002f7a3:	mov    r15,QWORD PTR [rsp+0x98]
   14002f7ab:	or     edi,0xffffffff
   14002f7ae:	jmp    0x14002f7da
   14002f7b0:	mov    r15,QWORD PTR [rsp+0x98]
   14002f7b8:	mov    rdi,0xfffffffffffffffe
   14002f7bf:	jmp    0x14002f7da
   14002f7c1:	mov    r15,QWORD PTR [rsp+0x98]
   14002f7c9:	mov    rdi,0xfffffffffffffffe
   14002f7d0:	jmp    0x14002f7da
   14002f7d2:	mov    r15,QWORD PTR [rsp+0x98]
   14002f7da:	cmp    r13,r15
   14002f7dd:	je     0x14002f7e7
   14002f7df:	mov    rcx,r13
   14002f7e2:	call   0x14001a540
   14002f7e7:	cmp    edi,0xfffffffe
   14002f7ea:	cmove  edi,esi
   14002f7ed:	mov    eax,edi
   14002f7ef:	jmp    0x14002f0c6
   14002f7f4:	xor    eax,eax
   14002f7f6:	jmp    0x14002f0d0
   14002f7fb:	call   0x14001b2b0
   14002f800:	xor    r14d,r14d
   14002f803:	mov    DWORD PTR [rax],r14d
   14002f806:	call   0x14001b280
   14002f80b:	xor    r9d,r9d
   14002f80e:	xor    r8d,r8d
   14002f811:	xor    edx,edx
   14002f813:	xor    ecx,ecx
   14002f815:	mov    DWORD PTR [rax],0x9
   14002f81b:	mov    QWORD PTR [rsp+0x20],r14
   14002f820:	call   0x14001de30
   14002f825:	or     eax,0xffffffff
   14002f828:	add    rsp,0x70
   14002f82c:	pop    r14
   14002f82e:	pop    rdi
   14002f82f:	pop    rbx
   14002f830:	ret    
   14002f831:	int3   
   14002f832:	int3   
   14002f833:	int3   
   14002f834:	int3   
   14002f835:	int3   
   14002f836:	int3   
   14002f837:	int3   
   14002f838:	int3   
   14002f839:	int3   
   14002f83a:	int3   
   14002f83b:	int3   
   14002f83c:	int3   
   14002f83d:	int3   
   14002f83e:	int3   
   14002f83f:	int3   
   14002f840:	mov    QWORD PTR [rsp+0x10],rbx
   14002f845:	mov    QWORD PTR [rsp+0x18],rsi
   14002f84a:	mov    DWORD PTR [rsp+0x8],ecx
   14002f84e:	push   rdi
   14002f84f:	push   r12
   14002f851:	push   r13
   14002f853:	push   r14
   14002f855:	push   r15
   14002f857:	sub    rsp,0x30
   14002f85b:	mov    esi,r8d
   14002f85e:	mov    r12,rdx
   14002f861:	movsxd rbx,ecx
   14002f864:	cmp    ebx,0xfffffffe
   14002f867:	jne    0x14002f885
   14002f869:	call   0x14001b2b0
   14002f86e:	xor    edi,edi
   14002f870:	mov    DWORD PTR [rax],edi
   14002f872:	call   0x14001b280
   14002f877:	mov    DWORD PTR [rax],0x9
   14002f87d:	or     eax,0xffffffff
   14002f880:	jmp    0x14002f99f
   14002f885:	test   ecx,ecx
   14002f887:	js     0x14002f974
   14002f88d:	cmp    ebx,DWORD PTR [rip+0x17eb5]        # 0x140047748
   14002f893:	jae    0x14002f974
   14002f899:	mov    rax,rbx
   14002f89c:	mov    r13,rbx
   14002f89f:	sar    r13,0x5
   14002f8a3:	lea    r15,[rip+0x17eb6]        # 0x140047760
   14002f8aa:	and    eax,0x1f
   14002f8ad:	lea    r14,[rax+rax*4]
   14002f8b1:	add    r14,r14
   14002f8b4:	mov    rax,QWORD PTR [r15+r13*8]
   14002f8b8:	mov    cl,BYTE PTR [rax+r14*8+0x8]
   14002f8bd:	and    ecx,0x1
   14002f8c0:	jne    0x14002f8f2
   14002f8c2:	call   0x14001b2b0
   14002f8c7:	xor    edi,edi
   14002f8c9:	mov    DWORD PTR [rax],edi
   14002f8cb:	call   0x14001b280
   14002f8d0:	mov    DWORD PTR [rax],0x9
   14002f8d6:	mov    QWORD PTR [rsp+0x20],rdi
   14002f8db:	xor    r9d,r9d
   14002f8de:	xor    r8d,r8d
   14002f8e1:	xor    edx,edx
   14002f8e3:	xor    ecx,ecx
   14002f8e5:	call   0x14001de30
   14002f8ea:	or     eax,0xffffffff
   14002f8ed:	jmp    0x14002f99f
   14002f8f2:	xor    edi,edi
   14002f8f4:	mov    eax,edi
   14002f8f6:	cmp    r8d,0x7fffffff
   14002f8fd:	setbe  al
   14002f900:	test   eax,eax
   14002f902:	jne    0x14002f92f
   14002f904:	call   0x14001b2b0
   14002f909:	mov    DWORD PTR [rax],edi
   14002f90b:	call   0x14001b280
   14002f910:	mov    DWORD PTR [rax],0x16
   14002f916:	mov    QWORD PTR [rsp+0x20],rdi
   14002f91b:	xor    r9d,r9d
   14002f91e:	xor    r8d,r8d
   14002f921:	xor    edx,edx
   14002f923:	xor    ecx,ecx
   14002f925:	call   0x14001de30
   14002f92a:	or     eax,0xffffffff
   14002f92d:	jmp    0x14002f99f
   14002f92f:	mov    ecx,ebx
   14002f931:	call   0x14002b400
   14002f936:	nop
   14002f937:	mov    rax,QWORD PTR [r15+r13*8]
   14002f93b:	test   BYTE PTR [rax+r14*8+0x8],0x1
   14002f941:	je     0x14002f954
   14002f943:	mov    r8d,esi
   14002f946:	mov    rdx,r12
   14002f949:	mov    ecx,ebx
   14002f94b:	call   0x14002ef30
   14002f950:	mov    edi,eax
   14002f952:	jmp    0x14002f969
   14002f954:	call   0x14001b280
   14002f959:	mov    DWORD PTR [rax],0x9
   14002f95f:	call   0x14001b2b0
   14002f964:	mov    DWORD PTR [rax],edi
   14002f966:	or     edi,0xffffffff
   14002f969:	mov    ecx,ebx
   14002f96b:	call   0x14002b4d0
   14002f970:	mov    eax,edi
   14002f972:	jmp    0x14002f99f
   14002f974:	call   0x14001b2b0
   14002f979:	xor    edi,edi
   14002f97b:	mov    DWORD PTR [rax],edi
   14002f97d:	call   0x14001b280
   14002f982:	mov    DWORD PTR [rax],0x9
   14002f988:	mov    QWORD PTR [rsp+0x20],rdi
   14002f98d:	xor    r9d,r9d
   14002f990:	xor    r8d,r8d
   14002f993:	xor    edx,edx
   14002f995:	xor    ecx,ecx
   14002f997:	call   0x14001de30
   14002f99c:	or     eax,0xffffffff
   14002f99f:	mov    rbx,QWORD PTR [rsp+0x68]
   14002f9a4:	mov    rsi,QWORD PTR [rsp+0x70]
   14002f9a9:	add    rsp,0x30
   14002f9ad:	pop    r15
   14002f9af:	pop    r14
   14002f9b1:	pop    r13
   14002f9b3:	pop    r12
   14002f9b5:	pop    rdi
   14002f9b6:	ret    
   14002f9b7:	int3   
   14002f9b8:	int3   
   14002f9b9:	int3   
   14002f9ba:	int3   
   14002f9bb:	int3   
   14002f9bc:	int3   
   14002f9bd:	int3   
   14002f9be:	int3   
   14002f9bf:	int3   
   14002f9c0:	rex push rbp
   14002f9c2:	sub    rsp,0x30
   14002f9c6:	mov    rbp,rdx
   14002f9c9:	mov    ecx,DWORD PTR [rbp+0x60]
   14002f9cc:	call   0x14002b4d0
   14002f9d1:	add    rsp,0x30
   14002f9d5:	pop    rbp
   14002f9d6:	ret    
   14002f9d7:	int3   
   14002f9d8:	int3   
   14002f9d9:	int3   
   14002f9da:	int3   
   14002f9db:	int3   
   14002f9dc:	int3   
   14002f9dd:	int3   
   14002f9de:	int3   
   14002f9df:	int3   
   14002f9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002f9e5:	mov    QWORD PTR [rsp+0x10],rbp
   14002f9ea:	mov    QWORD PTR [rsp+0x20],rsi
   14002f9ef:	push   rdi
   14002f9f0:	sub    rsp,0x20
   14002f9f4:	mov    rax,QWORD PTR [rip+0x105d5]        # 0x14003ffd0
   14002f9fb:	xor    rax,rsp
   14002f9fe:	mov    QWORD PTR [rsp+0x10],rax
   14002fa03:	test   edx,edx
   14002fa05:	mov    rbx,r8
   14002fa08:	mov    esi,edx
   14002fa0a:	mov    rbp,rcx
   14002fa0d:	mov    di,0x404e
   14002fa11:	mov    DWORD PTR [r8],0x0
   14002fa18:	mov    DWORD PTR [r8+0x4],0x0
   14002fa20:	mov    DWORD PTR [r8+0x8],0x0
   14002fa28:	je     0x14002fb7a
   14002fa2e:	xchg   ax,ax
   14002fa30:	mov    rax,QWORD PTR [rbx]
   14002fa33:	mov    r11d,DWORD PTR [rbx+0x8]
   14002fa37:	lea    rcx,[rsp]
   14002fa3b:	mov    QWORD PTR [rcx],rax
   14002fa3e:	mov    eax,DWORD PTR [rbx+0x8]
   14002fa41:	add    r11d,r11d
   14002fa44:	mov    DWORD PTR [rcx+0x8],eax
   14002fa47:	mov    ecx,DWORD PTR [rbx]
   14002fa49:	mov    eax,DWORD PTR [rbx+0x4]
   14002fa4c:	lea    r9d,[rcx+rcx*1]
   14002fa50:	mov    edx,ecx
   14002fa52:	lea    r10d,[rax+rax*1]
   14002fa56:	mov    r8d,eax
   14002fa59:	shr    edx,0x1f
   14002fa5c:	mov    eax,r9d
   14002fa5f:	or     r10d,edx
   14002fa62:	shr    r8d,0x1f
   14002fa66:	lea    edx,[r9+r9*1]
   14002fa6a:	or     r11d,r8d
   14002fa6d:	mov    ecx,r10d
   14002fa70:	shr    eax,0x1f
   14002fa73:	shr    ecx,0x1f
   14002fa76:	add    r11d,r11d
   14002fa79:	add    r10d,r10d
   14002fa7c:	or     r11d,ecx
   14002fa7f:	mov    ecx,DWORD PTR [rsp]
   14002fa82:	or     r10d,eax
   14002fa85:	lea    r8d,[rdx+rcx*1]
   14002fa89:	xor    eax,eax
   14002fa8b:	mov    DWORD PTR [rbx],edx
   14002fa8d:	cmp    r8d,edx
   14002fa90:	mov    DWORD PTR [rbx+0x4],r10d
   14002fa94:	mov    DWORD PTR [rbx+0x8],r11d
   14002fa98:	jb     0x14002fa9f
   14002fa9a:	cmp    r8d,ecx
   14002fa9d:	jae    0x14002faa4
   14002fa9f:	mov    eax,0x1
   14002faa4:	test   eax,eax
   14002faa6:	mov    DWORD PTR [rbx],r8d
   14002faa9:	je     0x14002face
   14002faab:	lea    eax,[r10+0x1]
   14002faaf:	xor    ecx,ecx
   14002fab1:	cmp    eax,r10d
   14002fab4:	jb     0x14002fabb
   14002fab6:	cmp    eax,0x1
   14002fab9:	jae    0x14002fac0
   14002fabb:	mov    ecx,0x1
   14002fac0:	test   ecx,ecx
   14002fac2:	mov    DWORD PTR [rbx+0x4],eax
   14002fac5:	je     0x14002face
   14002fac7:	lea    eax,[r11+0x1]
   14002facb:	mov    DWORD PTR [rbx+0x8],eax
   14002face:	mov    eax,DWORD PTR [rbx+0x4]
   14002fad1:	mov    rcx,QWORD PTR [rsp]
   14002fad5:	xor    edx,edx
   14002fad7:	shr    rcx,0x20
   14002fadb:	lea    r9d,[rax+rcx*1]
   14002fadf:	cmp    r9d,eax
   14002fae2:	jb     0x14002fae9
   14002fae4:	cmp    r9d,ecx
   14002fae7:	jae    0x14002faee
   14002fae9:	mov    edx,0x1
   14002faee:	test   edx,edx
   14002faf0:	mov    DWORD PTR [rbx+0x4],r9d
   14002faf4:	je     0x14002fafa
   14002faf6:	add    DWORD PTR [rbx+0x8],0x1
   14002fafa:	mov    eax,DWORD PTR [rsp+0x8]
   14002fafe:	mov    ecx,r9d
   14002fb01:	add    r9d,r9d
   14002fb04:	add    DWORD PTR [rbx+0x8],eax
   14002fb07:	mov    edx,DWORD PTR [rbx+0x8]
   14002fb0a:	shr    ecx,0x1f
   14002fb0d:	mov    eax,r8d
   14002fb10:	add    r8d,r8d
   14002fb13:	add    edx,edx
   14002fb15:	shr    eax,0x1f
   14002fb18:	or     edx,ecx
   14002fb1a:	mov    DWORD PTR [rbx],r8d
   14002fb1d:	or     r9d,eax
   14002fb20:	mov    DWORD PTR [rbx+0x8],edx
   14002fb23:	xor    r10d,r10d
   14002fb26:	mov    DWORD PTR [rbx+0x4],r9d
   14002fb2a:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002fb2e:	lea    eax,[r8+rcx*1]
   14002fb32:	mov    DWORD PTR [rsp],ecx
   14002fb35:	cmp    eax,r8d
   14002fb38:	jb     0x14002fb3e
   14002fb3a:	cmp    eax,ecx
   14002fb3c:	jae    0x14002fb44
   14002fb3e:	mov    r10d,0x1
   14002fb44:	test   r10d,r10d
   14002fb47:	mov    DWORD PTR [rbx],eax
   14002fb49:	je     0x14002fb6d
   14002fb4b:	lea    eax,[r9+0x1]
   14002fb4f:	xor    ecx,ecx
   14002fb51:	cmp    eax,r9d
   14002fb54:	jb     0x14002fb5b
   14002fb56:	cmp    eax,0x1
   14002fb59:	jae    0x14002fb60
   14002fb5b:	mov    ecx,0x1
   14002fb60:	test   ecx,ecx
   14002fb62:	mov    DWORD PTR [rbx+0x4],eax
   14002fb65:	je     0x14002fb6d
   14002fb67:	lea    eax,[rdx+0x1]
   14002fb6a:	mov    DWORD PTR [rbx+0x8],eax
   14002fb6d:	add    rbp,0x1
   14002fb71:	add    esi,0xffffffff
   14002fb74:	jne    0x14002fa30
   14002fb7a:	cmp    DWORD PTR [rbx+0x8],0x0
   14002fb7e:	jne    0x14002fbac
   14002fb80:	mov    ecx,DWORD PTR [rbx]
   14002fb82:	mov    edx,DWORD PTR [rbx+0x4]
   14002fb85:	add    di,0xfff0
   14002fb8a:	mov    r8d,edx
   14002fb8d:	mov    eax,ecx
   14002fb8f:	shl    edx,0x10
   14002fb92:	shr    eax,0x10
   14002fb95:	shr    r8d,0x10
   14002fb99:	shl    ecx,0x10
   14002fb9c:	or     edx,eax
   14002fb9e:	test   r8d,r8d
   14002fba1:	mov    DWORD PTR [rbx+0x8],r8d
   14002fba5:	mov    DWORD PTR [rbx+0x4],edx
   14002fba8:	mov    DWORD PTR [rbx],ecx
   14002fbaa:	je     0x14002fb80
   14002fbac:	bt     DWORD PTR [rbx+0x8],0xf
   14002fbb1:	jb     0x14002fbf3
   14002fbb3:	nop
   14002fbb4:	data16 data16 xchg ax,ax
   14002fbb8:	data16 data16 xchg ax,ax
   14002fbbc:	data16 data16 xchg ax,ax
   14002fbc0:	mov    eax,DWORD PTR [rbx]
   14002fbc2:	mov    ecx,DWORD PTR [rbx+0x4]
   14002fbc5:	add    di,0xffff
   14002fbca:	mov    edx,eax
   14002fbcc:	add    eax,eax
   14002fbce:	mov    r8d,ecx
   14002fbd1:	mov    DWORD PTR [rbx],eax
   14002fbd3:	shr    edx,0x1f
   14002fbd6:	shr    r8d,0x1f
   14002fbda:	lea    eax,[rcx+rcx*1]
   14002fbdd:	or     eax,edx
   14002fbdf:	mov    DWORD PTR [rbx+0x4],eax
   14002fbe2:	mov    eax,DWORD PTR [rbx+0x8]
   14002fbe5:	add    eax,eax
   14002fbe7:	or     eax,r8d
   14002fbea:	bt     eax,0xf
   14002fbee:	mov    DWORD PTR [rbx+0x8],eax
   14002fbf1:	jae    0x14002fbc0
   14002fbf3:	mov    WORD PTR [rbx+0xa],di
   14002fbf7:	mov    rcx,QWORD PTR [rsp+0x10]
   14002fbfc:	xor    rcx,rsp
   14002fbff:	call   0x140019370
   14002fc04:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fc09:	mov    rbp,QWORD PTR [rsp+0x38]
   14002fc0e:	mov    rsi,QWORD PTR [rsp+0x48]
   14002fc13:	add    rsp,0x20
   14002fc17:	pop    rdi
   14002fc18:	ret    
   14002fc19:	int3   
   14002fc1a:	int3   
   14002fc1b:	int3   
   14002fc1c:	int3   
   14002fc1d:	int3   
   14002fc1e:	int3   
   14002fc1f:	int3   
   14002fc20:	mov    QWORD PTR [rsp+0x8],rbx
   14002fc25:	push   rdi
   14002fc26:	sub    rsp,0x20
   14002fc2a:	movsxd rdi,ecx
   14002fc2d:	mov    ecx,edi
   14002fc2f:	call   0x14002b360
   14002fc34:	cmp    rax,0xffffffffffffffff
   14002fc38:	je     0x14002fc9d
   14002fc3a:	cmp    edi,0x1
   14002fc3d:	jne    0x14002fc51
   14002fc3f:	mov    rax,QWORD PTR [rip+0x17b1a]        # 0x140047760
   14002fc46:	test   BYTE PTR [rax+0xa8],dil
   14002fc4d:	jne    0x14002fc63
   14002fc4f:	jmp    0x14002fc7f
   14002fc51:	cmp    edi,0x2
   14002fc54:	jne    0x14002fc7f
   14002fc56:	mov    rax,QWORD PTR [rip+0x17b03]        # 0x140047760
   14002fc5d:	test   BYTE PTR [rax+0x58],0x1
   14002fc61:	je     0x14002fc7f
   14002fc63:	mov    ecx,0x2
   14002fc68:	call   0x14002b360
   14002fc6d:	mov    ecx,0x1
   14002fc72:	mov    rbx,rax
   14002fc75:	call   0x14002b360
   14002fc7a:	cmp    rax,rbx
   14002fc7d:	je     0x14002fc9d
   14002fc7f:	mov    ecx,edi
   14002fc81:	call   0x14002b360
   14002fc86:	mov    rcx,rax
   14002fc89:	call   QWORD PTR [rip+0x17b1]        # 0x140031440
   14002fc8f:	test   eax,eax
   14002fc91:	jne    0x14002fc9d
   14002fc93:	call   QWORD PTR [rip+0x17df]        # 0x140031478
   14002fc99:	mov    ebx,eax
   14002fc9b:	jmp    0x14002fc9f
   14002fc9d:	xor    ebx,ebx
   14002fc9f:	mov    ecx,edi
   14002fca1:	call   0x14002b290
   14002fca6:	mov    rax,rdi
   14002fca9:	mov    rdx,rdi
   14002fcac:	and    eax,0x1f
   14002fcaf:	sar    rdx,0x5
   14002fcb3:	lea    r8,[rip+0x17aa6]        # 0x140047760
   14002fcba:	lea    rcx,[rax+rax*4]
   14002fcbe:	mov    rax,QWORD PTR [r8+rdx*8]
   14002fcc2:	add    rcx,rcx
   14002fcc5:	test   ebx,ebx
   14002fcc7:	mov    BYTE PTR [rax+rcx*8+0x8],0x0
   14002fccc:	je     0x14002fce3
   14002fcce:	mov    ecx,ebx
   14002fcd0:	call   0x14001b2e0
   14002fcd5:	or     eax,0xffffffff
   14002fcd8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fcdd:	add    rsp,0x20
   14002fce1:	pop    rdi
   14002fce2:	ret    
   14002fce3:	xor    eax,eax
   14002fce5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fcea:	add    rsp,0x20
   14002fcee:	pop    rdi
   14002fcef:	ret    
   14002fcf0:	mov    QWORD PTR [rsp+0x18],rbx
   14002fcf5:	mov    DWORD PTR [rsp+0x8],ecx
   14002fcf9:	push   rsi
   14002fcfa:	push   rdi
   14002fcfb:	push   r12
   14002fcfd:	sub    rsp,0x30
   14002fd01:	movsxd rbx,ecx
   14002fd04:	cmp    ebx,0xfffffffe
   14002fd07:	jne    0x14002fd25
   14002fd09:	call   0x14001b2b0
   14002fd0e:	xor    ebx,ebx
   14002fd10:	mov    DWORD PTR [rax],ebx
   14002fd12:	call   0x14001b280
   14002fd17:	mov    DWORD PTR [rax],0x9
   14002fd1d:	or     eax,0xffffffff
   14002fd20:	jmp    0x14002fdf0
   14002fd25:	test   ecx,ecx
   14002fd27:	js     0x14002fdc5
   14002fd2d:	cmp    ebx,DWORD PTR [rip+0x17a15]        # 0x140047748
   14002fd33:	jae    0x14002fdc5
   14002fd39:	mov    rax,rbx
   14002fd3c:	mov    rdi,rbx
   14002fd3f:	sar    rdi,0x5
   14002fd43:	lea    r12,[rip+0x17a16]        # 0x140047760
   14002fd4a:	and    eax,0x1f
   14002fd4d:	lea    rsi,[rax+rax*4]
   14002fd51:	add    rsi,rsi
   14002fd54:	mov    rax,QWORD PTR [r12+rdi*8]
   14002fd58:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14002fd5c:	and    ecx,0x1
   14002fd5f:	jne    0x14002fd8e
   14002fd61:	call   0x14001b2b0
   14002fd66:	xor    ebx,ebx
   14002fd68:	mov    DWORD PTR [rax],ebx
   14002fd6a:	call   0x14001b280
   14002fd6f:	mov    DWORD PTR [rax],0x9
   14002fd75:	mov    QWORD PTR [rsp+0x20],rbx
   14002fd7a:	xor    r9d,r9d
   14002fd7d:	xor    r8d,r8d
   14002fd80:	xor    edx,edx
   14002fd82:	xor    ecx,ecx
   14002fd84:	call   0x14001de30
   14002fd89:	or     eax,0xffffffff
   14002fd8c:	jmp    0x14002fdf0
   14002fd8e:	mov    ecx,ebx
   14002fd90:	call   0x14002b400
   14002fd95:	nop
   14002fd96:	mov    rax,QWORD PTR [r12+rdi*8]
   14002fd9a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14002fd9f:	je     0x14002fdac
   14002fda1:	mov    ecx,ebx
   14002fda3:	call   0x14002fc20
   14002fda8:	mov    edi,eax
   14002fdaa:	jmp    0x14002fdba
   14002fdac:	call   0x14001b280
   14002fdb1:	mov    DWORD PTR [rax],0x9
   14002fdb7:	or     edi,0xffffffff
   14002fdba:	mov    ecx,ebx
   14002fdbc:	call   0x14002b4d0
   14002fdc1:	mov    eax,edi
   14002fdc3:	jmp    0x14002fdf0
   14002fdc5:	call   0x14001b2b0
   14002fdca:	xor    ebx,ebx
   14002fdcc:	mov    DWORD PTR [rax],ebx
   14002fdce:	call   0x14001b280
   14002fdd3:	mov    DWORD PTR [rax],0x9
   14002fdd9:	mov    QWORD PTR [rsp+0x20],rbx
   14002fdde:	xor    r9d,r9d
   14002fde1:	xor    r8d,r8d
   14002fde4:	xor    edx,edx
   14002fde6:	xor    ecx,ecx
   14002fde8:	call   0x14001de30
   14002fded:	or     eax,0xffffffff
   14002fdf0:	mov    rbx,QWORD PTR [rsp+0x60]
   14002fdf5:	add    rsp,0x30
   14002fdf9:	pop    r12
   14002fdfb:	pop    rdi
   14002fdfc:	pop    rsi
   14002fdfd:	ret    
   14002fdfe:	int3   
   14002fdff:	int3   
   14002fe00:	rex push rbp
   14002fe02:	sub    rsp,0x30
   14002fe06:	mov    rbp,rdx
   14002fe09:	mov    ecx,DWORD PTR [rbp+0x50]
   14002fe0c:	call   0x14002b4d0
   14002fe11:	add    rsp,0x30
   14002fe15:	pop    rbp
   14002fe16:	ret    
   14002fe17:	int3   
   14002fe18:	int3   
   14002fe19:	int3   
   14002fe1a:	int3   
   14002fe1b:	int3   
   14002fe1c:	int3   
   14002fe1d:	int3   
   14002fe1e:	int3   
   14002fe1f:	int3   
   14002fe20:	rex push rbx
   14002fe22:	sub    rsp,0x20
   14002fe26:	mov    eax,DWORD PTR [rcx+0x18]
   14002fe29:	mov    rbx,rcx
   14002fe2c:	test   al,0x83
   14002fe2e:	je     0x14002fe50
   14002fe30:	test   al,0x8
   14002fe32:	je     0x14002fe50
   14002fe34:	mov    rcx,QWORD PTR [rcx+0x10]
   14002fe38:	call   0x14001a540
   14002fe3d:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14002fe44:	xor    eax,eax
   14002fe46:	mov    QWORD PTR [rbx],rax
   14002fe49:	mov    QWORD PTR [rbx+0x10],rax
   14002fe4d:	mov    DWORD PTR [rbx+0x8],eax
   14002fe50:	add    rsp,0x20
   14002fe54:	pop    rbx
   14002fe55:	ret    
   14002fe56:	jmp    QWORD PTR [rip+0x12d4]        # 0x140031130
   14002fe5c:	jmp    QWORD PTR [rip+0x12d6]        # 0x140031138
   14002fe62:	jmp    QWORD PTR [rip+0x12e0]        # 0x140031148
   14002fe68:	jmp    QWORD PTR [rip+0x13ea]        # 0x140031258
   14002fe6e:	jmp    QWORD PTR [rip+0x197c]        # 0x1400317f0
   14002fe74:	jmp    QWORD PTR [rip+0x197e]        # 0x1400317f8
   14002fe7a:	jmp    QWORD PTR [rip+0x1980]        # 0x140031800
   14002fe80:	jmp    QWORD PTR [rip+0x1992]        # 0x140031818
   14002fe86:	jmp    QWORD PTR [rip+0x1994]        # 0x140031820
   14002fe8c:	jmp    QWORD PTR [rip+0x197e]        # 0x140031810
   14002fe92:	int3   
   14002fe93:	int3   
   14002fe94:	rex push rbx
   14002fe96:	sub    rsp,0x30
   14002fe9a:	mov    rax,QWORD PTR [rip+0x1012f]        # 0x14003ffd0
   14002fea1:	xor    rax,rsp
   14002fea4:	mov    QWORD PTR [rsp+0x28],rax
   14002fea9:	xor    ebx,ebx
   14002feab:	call   QWORD PTR [rip+0x144f]        # 0x140031300
   14002feb1:	lea    r9d,[rbx+0x7]
   14002feb5:	lea    r8,[rsp+0x20]
   14002feba:	mov    edx,0x1004
   14002febf:	mov    ecx,eax
   14002fec1:	call   QWORD PTR [rip+0x13b1]        # 0x140031278
   14002fec7:	test   eax,eax
   14002fec9:	je     0x14002fef0
   14002fecb:	mov    al,BYTE PTR [rsp+0x20]
   14002fecf:	lea    rdx,[rsp+0x20]
   14002fed4:	test   al,al
   14002fed6:	je     0x14002fef0
   14002fed8:	movsx  eax,al
   14002fedb:	add    rdx,0x1
   14002fedf:	lea    ecx,[rbx+rbx*4]
   14002fee2:	lea    ebx,[rax+rcx*2-0x30]
   14002fee6:	mov    al,BYTE PTR [rdx]
   14002fee8:	test   al,al
   14002feea:	jne    0x14002fed8
   14002feec:	test   ebx,ebx
   14002feee:	jne    0x14002fef8
   14002fef0:	call   QWORD PTR [rip+0x133a]        # 0x140031230
   14002fef6:	mov    ebx,eax
   14002fef8:	mov    eax,ebx
   14002fefa:	mov    rcx,QWORD PTR [rsp+0x28]
   14002feff:	xor    rcx,rsp
   14002ff02:	call   0x140019370
   14002ff07:	add    rsp,0x30
   14002ff0b:	pop    rbx
   14002ff0c:	ret    
   14002ff0d:	int3   
   14002ff0e:	int3   
   14002ff0f:	int3   
   14002ff10:	mov    eax,0x3
   14002ff15:	ret    
   14002ff16:	int3   
   14002ff17:	int3   
   14002ff18:	sub    rsp,0xd8
   14002ff1f:	mov    rax,QWORD PTR [rip+0x100aa]        # 0x14003ffd0
   14002ff26:	xor    rax,rsp
   14002ff29:	mov    QWORD PTR [rsp+0xc0],rax
   14002ff31:	lea    rcx,[rsp+0x20]
   14002ff36:	mov    DWORD PTR [rsp+0x20],0x94
   14002ff3e:	call   QWORD PTR [rip+0x1444]        # 0x140031388
   14002ff44:	cmp    DWORD PTR [rsp+0x30],0x2
   14002ff49:	jne    0x14002ff59
   14002ff4b:	cmp    DWORD PTR [rsp+0x24],0x5
   14002ff50:	lea    rax,[rip+0xffffffffffffffb9]        # 0x14002ff10
   14002ff57:	jae    0x14002ff60
   14002ff59:	lea    rax,[rip+0xffffffffffffff34]        # 0x14002fe94
   14002ff60:	xchg   QWORD PTR [rip+0x11979],rax        # 0x1400418e0
   14002ff67:	call   QWORD PTR [rip+0x11973]        # 0x1400418e0
   14002ff6d:	mov    rcx,QWORD PTR [rsp+0xc0]
   14002ff75:	xor    rcx,rsp
   14002ff78:	call   0x140019370
   14002ff7d:	add    rsp,0xd8
   14002ff84:	ret    
   14002ff85:	int3   
   14002ff86:	int3   
   14002ff87:	int3   
   14002ff88:	sub    rsp,0x38
   14002ff8c:	call   QWORD PTR [rip+0x13b6]        # 0x140031348
   14002ff92:	xor    r11d,r11d
   14002ff95:	mov    DWORD PTR [rsp+0x20],r11d
   14002ff9a:	jmp    0x14002ffa7
   14002ff9c:	mov    r11d,0x8007000e
   14002ffa2:	mov    DWORD PTR [rsp+0x20],r11d
   14002ffa7:	mov    eax,r11d
   14002ffaa:	add    rsp,0x38
   14002ffae:	ret    
   14002ffaf:	int3   
   14002ffb0:	int3   
   14002ffb1:	int3   
   14002ffb2:	int3   
   14002ffb3:	int3   
   14002ffb4:	int3   
   14002ffb5:	int3   
   14002ffb6:	int3   
   14002ffb7:	int3   
   14002ffb8:	rex push rbp
   14002ffba:	sub    rsp,0x20
   14002ffbe:	mov    rbp,rdx
   14002ffc1:	mov    rax,QWORD PTR [rcx]
   14002ffc4:	xor    r11d,r11d
   14002ffc7:	cmp    DWORD PTR [rax],0xc0000017
   14002ffcd:	sete   r11b
   14002ffd1:	mov    eax,r11d
   14002ffd4:	add    rsp,0x20
   14002ffd8:	pop    rbp
   14002ffd9:	ret    
   14002ffda:	int3   
   14002ffdb:	int3   
   14002ffdc:	mov    QWORD PTR [rsp+0x8],rbx
   14002ffe1:	mov    QWORD PTR [rsp+0x10],rbp
   14002ffe6:	mov    QWORD PTR [rsp+0x18],rsi
   14002ffeb:	push   rdi
   14002ffec:	sub    rsp,0x20
   14002fff0:	test   rcx,rcx
   14002fff3:	mov    rbp,rdx
   14002fff6:	mov    rbx,rcx
   14002fff9:	jne    0x140030002
   14002fffb:	mov    eax,0x80070057
   140030000:	jmp    0x140030066
   140030002:	cmp    DWORD PTR [rcx],0x0
   140030005:	je     0x140030064
   140030007:	cmp    DWORD PTR [rcx],0x48
   14003000a:	jne    0x14002fffb
   14003000c:	xor    edi,edi
   14003000e:	cmp    DWORD PTR [rcx+0x40],edi
   140030011:	jle    0x14003003c
   140030013:	xor    esi,esi
   140030015:	test   rsi,rsi
   140030018:	js     0x14003007b
   14003001a:	cmp    edi,DWORD PTR [rbx+0x40]
   14003001d:	jge    0x14003007b
   14003001f:	mov    rax,QWORD PTR [rbx+0x38]
   140030023:	mov    rdx,rbp
   140030026:	movzx  ecx,WORD PTR [rax+rsi*1]
   14003002a:	call   QWORD PTR [rip+0x17b0]        # 0x1400317e0
   140030030:	add    edi,0x1
   140030033:	add    rsi,0x2
   140030037:	cmp    edi,DWORD PTR [rbx+0x40]
   14003003a:	jl     0x140030015
   14003003c:	mov    rcx,QWORD PTR [rbx+0x38]
   140030040:	test   rcx,rcx
   140030043:	je     0x14003004f
   140030045:	call   0x14001a540
   14003004a:	and    QWORD PTR [rbx+0x38],0x0
   14003004f:	and    DWORD PTR [rbx+0x40],0x0
   140030053:	and    DWORD PTR [rbx+0x44],0x0
   140030057:	lea    rcx,[rbx+0x8]
   14003005b:	call   QWORD PTR [rip+0x12b7]        # 0x140031318
   140030061:	and    DWORD PTR [rbx],0x0
   140030064:	xor    eax,eax
   140030066:	mov    rbx,QWORD PTR [rsp+0x30]
   14003006b:	mov    rbp,QWORD PTR [rsp+0x38]
   140030070:	mov    rsi,QWORD PTR [rsp+0x40]
   140030075:	add    rsp,0x20
   140030079:	pop    rdi
   14003007a:	ret    
   14003007b:	xor    r9d,r9d
   14003007e:	xor    r8d,r8d
   140030081:	mov    ecx,0xc000008c
   140030086:	lea    edx,[r9+0x1]
   14003008a:	call   QWORD PTR [rip+0x10b0]        # 0x140031140
   140030090:	int3   
   140030091:	int3   
   140030092:	int3   
   140030093:	int3   
   140030094:	rex push rbx
   140030096:	sub    rsp,0x20
   14003009a:	mov    rbx,rcx
   14003009d:	add    rcx,0x28
   1400300a1:	call   QWORD PTR [rip+0x1271]        # 0x140031318
   1400300a7:	mov    rcx,QWORD PTR [rbx+0x50]
   1400300ab:	test   rcx,rcx
   1400300ae:	je     0x1400300ba
   1400300b0:	call   0x14001a540
   1400300b5:	and    QWORD PTR [rbx+0x50],0x0
   1400300ba:	and    DWORD PTR [rbx+0x58],0x0
   1400300be:	and    DWORD PTR [rbx+0x5c],0x0
   1400300c2:	add    rsp,0x20
   1400300c6:	pop    rbx
   1400300c7:	ret    
   1400300c8:	mov    QWORD PTR [rsp+0x10],rbx
   1400300cd:	mov    QWORD PTR [rsp+0x18],rsi
   1400300d2:	push   rdi
   1400300d3:	sub    rsp,0xd0
   1400300da:	mov    rax,QWORD PTR [rip+0xfeef]        # 0x14003ffd0
   1400300e1:	xor    rax,rsp
   1400300e4:	mov    QWORD PTR [rsp+0xc0],rax
   1400300ec:	xor    edx,edx
   1400300ee:	mov    rbx,rcx
   1400300f1:	lea    r8d,[rdx+0x28]
   1400300f5:	add    rcx,r8
   1400300f8:	call   0x14001b520
   1400300fd:	and    QWORD PTR [rbx+0x50],0x0
   140030102:	and    DWORD PTR [rbx+0x58],0x0
   140030106:	and    DWORD PTR [rbx+0x5c],0x0
   14003010a:	lea    rax,[rip+0xfffffffffffcfeef]        # 0x140000000
   140030111:	mov    esi,0x94
   140030116:	lea    rcx,[rsp+0x20]
   14003011b:	mov    r8,rsi
   14003011e:	xor    edx,edx
   140030120:	mov    QWORD PTR [rbx+0x10],rax
   140030124:	mov    QWORD PTR [rbx+0x8],rax
   140030128:	mov    DWORD PTR [rbx],0x60
   14003012e:	mov    BYTE PTR [rbx+0x18],0x0
   140030132:	call   0x14001b520
   140030137:	lea    rcx,[rsp+0x20]
   14003013c:	mov    DWORD PTR [rsp+0x20],esi
   140030140:	call   QWORD PTR [rip+0x1242]        # 0x140031388
   140030146:	cmp    DWORD PTR [rsp+0x30],0x2
   14003014b:	mov    esi,0x1
   140030150:	jne    0x14003015b
   140030152:	cmp    DWORD PTR [rsp+0x24],0x5
   140030157:	jb     0x140030175
   140030159:	jmp    0x140030171
   14003015b:	cmp    DWORD PTR [rsp+0x30],esi
   14003015f:	jne    0x140030175
   140030161:	cmp    DWORD PTR [rsp+0x24],0x4
   140030166:	ja     0x140030171
   140030168:	jne    0x140030175
   14003016a:	cmp    DWORD PTR [rsp+0x28],0x0
   14003016f:	jbe    0x140030175
   140030171:	mov    BYTE PTR [rbx+0x18],sil
   140030175:	lea    rax,[rip+0x653c]        # 0x1400366b8
   14003017c:	lea    rcx,[rbx+0x28]
   140030180:	mov    DWORD PTR [rbx+0x1c],0x800
   140030187:	mov    QWORD PTR [rbx+0x20],rax
   14003018b:	call   0x14002ff88
   140030190:	movzx  ecx,BYTE PTR [rip+0x16581]        # 0x140046718
   140030197:	test   eax,eax
   140030199:	mov    rax,rbx
   14003019c:	cmovs  ecx,esi
   14003019f:	mov    BYTE PTR [rip+0x16573],cl        # 0x140046718
   1400301a5:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400301ad:	xor    rcx,rsp
   1400301b0:	call   0x140019370
   1400301b5:	lea    r11,[rsp+0xd0]
   1400301bd:	mov    rbx,QWORD PTR [r11+0x18]
   1400301c1:	mov    rsi,QWORD PTR [r11+0x20]
   1400301c5:	mov    rsp,r11
   1400301c8:	pop    rdi
   1400301c9:	ret    
   1400301ca:	lea    rax,[rip+0x118b7]        # 0x140041a88
   1400301d1:	jmp    0x1400301d6
   1400301d6:	mov    QWORD PTR [rsp+0x8],rcx
   1400301db:	mov    QWORD PTR [rsp+0x10],rdx
   1400301e0:	mov    QWORD PTR [rsp+0x18],r8
   1400301e5:	mov    QWORD PTR [rsp+0x20],r9
   1400301ea:	sub    rsp,0x68
   1400301ee:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400301f4:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400301fa:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140030200:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140030206:	mov    rdx,rax
   140030209:	lea    rcx,[rip+0xcf00]        # 0x14003d110
   140030210:	call   0x140030268
   140030215:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14003021b:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140030221:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140030227:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14003022d:	mov    rcx,QWORD PTR [rsp+0x70]
   140030232:	mov    rdx,QWORD PTR [rsp+0x78]
   140030237:	mov    r8,QWORD PTR [rsp+0x80]
   14003023f:	mov    r9,QWORD PTR [rsp+0x88]
   140030247:	add    rsp,0x68
   14003024b:	jmp    0x14003024d
   14003024d:	jmp    rax
   14003024f:	jmp    QWORD PTR [rip+0x11833]        # 0x140041a88
   140030255:	lea    rax,[rip+0x11824]        # 0x140041a80
   14003025c:	jmp    0x1400301d6
   140030261:	jmp    QWORD PTR [rip+0x11819]        # 0x140041a80
   140030267:	int3   
   140030268:	mov    r11,rsp
   14003026b:	mov    QWORD PTR [r11+0x20],rbx
   14003026f:	push   rbp
   140030270:	push   rsi
   140030271:	push   rdi
   140030272:	push   r12
   140030274:	push   r13
   140030276:	push   r14
   140030278:	push   r15
   14003027a:	sub    rsp,0x70
   14003027e:	mov    eax,DWORD PTR [rcx+0x4]
   140030281:	mov    r9d,DWORD PTR [rcx]
   140030284:	mov    r12d,DWORD PTR [rcx+0x8]
   140030288:	mov    r10d,DWORD PTR [rcx+0xc]
   14003028c:	mov    DWORD PTR [rsp+0x20],0x48
   140030294:	mov    rsi,rcx
   140030297:	mov    ecx,DWORD PTR [rcx+0x10]
   14003029a:	mov    r14d,DWORD PTR [rsi+0x14]
   14003029e:	mov    r15d,DWORD PTR [rsi+0x1c]
   1400302a2:	mov    r13,rdx
   1400302a5:	lea    rdx,[rip+0xfffffffffffcfd54]        # 0x140000000
   1400302ac:	mov    QWORD PTR [r11-0x80],rsi
   1400302b0:	add    rax,rdx
   1400302b3:	mov    QWORD PTR [r11-0x78],r13
   1400302b7:	and    r9d,0x1
   1400302bb:	mov    QWORD PTR [r11-0x70],rax
   1400302bf:	and    DWORD PTR [rsp+0x40],0x0
   1400302c4:	xor    eax,eax
   1400302c6:	and    QWORD PTR [r11-0x58],rax
   1400302ca:	and    QWORD PTR [r11-0x50],rax
   1400302ce:	mov    QWORD PTR [r11-0x60],rax
   1400302d2:	and    DWORD PTR [rsp+0x60],eax
   1400302d6:	add    r12,rdx
   1400302d9:	add    r10,rdx
   1400302dc:	add    rcx,rdx
   1400302df:	add    r14,rdx
   1400302e2:	test   r9b,r9b
   1400302e5:	jne    0x14003030c
   1400302e7:	xor    edx,edx
   1400302e9:	lea    rax,[rsp+0x20]
   1400302ee:	lea    r9,[r11+0x8]
   1400302f2:	lea    r8d,[rdx+0x1]
   1400302f6:	mov    ecx,0xc06d0057
   1400302fb:	mov    QWORD PTR [r11+0x8],rax
   1400302ff:	call   QWORD PTR [rip+0xe3b]        # 0x140031140
   140030305:	xor    eax,eax
   140030307:	jmp    0x14003053e
   14003030c:	mov    rdi,QWORD PTR [r12]
   140030310:	movabs rax,0x8000000000000000
   14003031a:	mov    rbp,r13
   14003031d:	sub    rbp,r10
   140030320:	sar    rbp,0x3
   140030324:	mov    ebp,ebp
   140030326:	test   QWORD PTR [rcx+rbp*8],rax
   14003032a:	mov    eax,0x0
   14003032f:	sete   al
   140030332:	test   eax,eax
   140030334:	mov    DWORD PTR [rsp+0x40],eax
   140030338:	je     0x14003034e
   14003033a:	mov    eax,DWORD PTR [rcx+rbp*8]
   14003033d:	lea    rcx,[rip+0xfffffffffffcfcbe]        # 0x140000002
   140030344:	add    rax,rcx
   140030347:	mov    QWORD PTR [rsp+0x48],rax
   14003034c:	jmp    0x140030356
   14003034e:	movzx  eax,WORD PTR [rcx+rbp*8]
   140030352:	mov    DWORD PTR [rsp+0x48],eax
   140030356:	mov    rax,QWORD PTR [rip+0x161f3]        # 0x140046550
   14003035d:	xor    ebx,ebx
   14003035f:	test   rax,rax
   140030362:	je     0x140030380
   140030364:	lea    rdx,[rsp+0x20]
   140030369:	xor    ecx,ecx
   14003036b:	call   rax
   14003036d:	test   rax,rax
   140030370:	mov    rbx,rax
   140030373:	jne    0x140030514
   140030379:	mov    rax,QWORD PTR [rip+0x161d0]        # 0x140046550
   140030380:	test   rdi,rdi
   140030383:	jne    0x140030457
   140030389:	test   rax,rax
   14003038c:	je     0x1400303a0
   14003038e:	lea    rdx,[rsp+0x20]
   140030393:	lea    ecx,[rdi+0x1]
   140030396:	call   rax
   140030398:	test   rax,rax
   14003039b:	mov    rdi,rax
   14003039e:	jne    0x14003040b
   1400303a0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400303a5:	call   QWORD PTR [rip+0xfd5]        # 0x140031380
   1400303ab:	test   rax,rax
   1400303ae:	mov    rdi,rax
   1400303b1:	jne    0x14003040b
   1400303b3:	call   QWORD PTR [rip+0x10bf]        # 0x140031478
   1400303b9:	mov    DWORD PTR [rsp+0x60],eax
   1400303bd:	mov    rax,QWORD PTR [rip+0x16184]        # 0x140046548
   1400303c4:	test   rax,rax
   1400303c7:	je     0x1400303db
   1400303c9:	lea    rdx,[rsp+0x20]
   1400303ce:	lea    ecx,[rdi+0x3]
   1400303d1:	call   rax
   1400303d3:	test   rax,rax
   1400303d6:	mov    rdi,rax
   1400303d9:	jne    0x14003040b
   1400303db:	xor    edx,edx
   1400303dd:	lea    rax,[rsp+0x20]
   1400303e2:	lea    r9,[rsp+0xb8]
   1400303ea:	lea    r8d,[rdx+0x1]
   1400303ee:	mov    ecx,0xc06d007e
   1400303f3:	mov    QWORD PTR [rsp+0xb8],rax
   1400303fb:	call   QWORD PTR [rip+0xd3f]        # 0x140031140
   140030401:	mov    rax,QWORD PTR [rsp+0x58]
   140030406:	jmp    0x14003053e
   14003040b:	mov    rax,rdi
   14003040e:	xchg   QWORD PTR [r12],rax
   140030412:	cmp    rax,rdi
   140030415:	je     0x140030447
   140030417:	cmp    DWORD PTR [rsi+0x18],0x0
   14003041b:	je     0x140030450
   14003041d:	mov    edx,0x10
   140030422:	lea    ecx,[rdx+0x30]
   140030425:	call   QWORD PTR [rip+0xf3d]        # 0x140031368
   14003042b:	test   rax,rax
   14003042e:	je     0x140030450
   140030430:	mov    QWORD PTR [rax+0x8],rsi
   140030434:	mov    rcx,QWORD PTR [rip+0x16105]        # 0x140046540
   14003043b:	mov    QWORD PTR [rax],rcx
   14003043e:	mov    QWORD PTR [rip+0x160fb],rax        # 0x140046540
   140030445:	jmp    0x140030450
   140030447:	mov    rcx,rdi
   14003044a:	call   QWORD PTR [rip+0x1008]        # 0x140031458
   140030450:	mov    rax,QWORD PTR [rip+0x160f9]        # 0x140046550
   140030457:	test   rax,rax
   14003045a:	mov    QWORD PTR [rsp+0x50],rdi
   14003045f:	je     0x140030470
   140030461:	lea    rdx,[rsp+0x20]
   140030466:	mov    ecx,0x2
   14003046b:	call   rax
   14003046d:	mov    rbx,rax
   140030470:	test   rbx,rbx
   140030473:	jne    0x140030510
   140030479:	cmp    DWORD PTR [rsi+0x14],ebx
   14003047c:	je     0x1400304a7
   14003047e:	cmp    DWORD PTR [rsi+0x1c],ebx
   140030481:	je     0x1400304a7
   140030483:	movsxd rax,DWORD PTR [rdi+0x3c]
   140030487:	cmp    DWORD PTR [rax+rdi*1],0x4550
   14003048e:	jne    0x1400304a7
   140030490:	cmp    DWORD PTR [rax+rdi*1+0x8],r15d
   140030495:	jne    0x1400304a7
   140030497:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   14003049c:	jne    0x1400304a7
   14003049e:	mov    rbx,QWORD PTR [r14+rbp*8]
   1400304a2:	test   rbx,rbx
   1400304a5:	jne    0x140030510
   1400304a7:	mov    rdx,QWORD PTR [rsp+0x48]
   1400304ac:	mov    rcx,rdi
   1400304af:	call   QWORD PTR [rip+0xfab]        # 0x140031460
   1400304b5:	test   rax,rax
   1400304b8:	mov    rbx,rax
   1400304bb:	jne    0x140030510
   1400304bd:	call   QWORD PTR [rip+0xfb5]        # 0x140031478
   1400304c3:	mov    DWORD PTR [rsp+0x60],eax
   1400304c7:	mov    rax,QWORD PTR [rip+0x1607a]        # 0x140046548
   1400304ce:	test   rax,rax
   1400304d1:	je     0x1400304e0
   1400304d3:	lea    rdx,[rsp+0x20]
   1400304d8:	lea    ecx,[rbx+0x4]
   1400304db:	call   rax
   1400304dd:	mov    rbx,rax
   1400304e0:	test   rbx,rbx
   1400304e3:	jne    0x140030510
   1400304e5:	lea    rax,[rsp+0x20]
   1400304ea:	lea    r9,[rsp+0xc0]
   1400304f2:	lea    r8d,[rbx+0x1]
   1400304f6:	xor    edx,edx
   1400304f8:	mov    ecx,0xc06d007f
   1400304fd:	mov    QWORD PTR [rsp+0xc0],rax
   140030505:	call   QWORD PTR [rip+0xc35]        # 0x140031140
   14003050b:	mov    rbx,QWORD PTR [rsp+0x58]
   140030510:	mov    QWORD PTR [r13+0x0],rbx
   140030514:	mov    rax,QWORD PTR [rip+0x16035]        # 0x140046550
   14003051b:	test   rax,rax
   14003051e:	je     0x14003053b
   140030520:	and    DWORD PTR [rsp+0x60],0x0
   140030525:	lea    rdx,[rsp+0x20]
   14003052a:	mov    ecx,0x5
   14003052f:	mov    QWORD PTR [rsp+0x50],rdi
   140030534:	mov    QWORD PTR [rsp+0x58],rbx
   140030539:	call   rax
   14003053b:	mov    rax,rbx
   14003053e:	mov    rbx,QWORD PTR [rsp+0xc8]
   140030546:	add    rsp,0x70
   14003054a:	pop    r15
   14003054c:	pop    r14
   14003054e:	pop    r13
   140030550:	pop    r12
   140030552:	pop    rdi
   140030553:	pop    rsi
   140030554:	pop    rbp
   140030555:	ret    
   140030556:	int3   
   140030557:	int3   
   140030558:	jmp    0x140030580
   14003055d:	int3   
   14003055e:	int3   
   14003055f:	int3   
   140030560:	sub    rsp,0x28
   140030564:	mov    edx,0x1
   140030569:	xor    ecx,ecx
   14003056b:	call   0x140014454
   140030570:	call   0x140015790
   140030575:	add    rsp,0x28
   140030579:	jmp    0x1400144ec
   14003057e:	int3   
   14003057f:	int3   
   140030580:	mov    rax,rsp
   140030583:	mov    QWORD PTR [rax+0x8],rbx
   140030587:	mov    QWORD PTR [rax+0x10],rbp
   14003058b:	mov    QWORD PTR [rax+0x18],rsi
   14003058f:	mov    QWORD PTR [rax+0x20],rdi
   140030593:	push   r12
   140030595:	push   r13
   140030597:	push   r14
   140030599:	sub    rsp,0x20
   14003059d:	mov    ebx,r9d
   1400305a0:	mov    rdi,r8
   1400305a3:	mov    rsi,rdx
   1400305a6:	mov    rbp,rcx
   1400305a9:	or     r13d,0xffffffff
   1400305ad:	call   0x140009454
   1400305b2:	mov    r12,rax
   1400305b5:	call   0x1400131d0
   1400305ba:	mov    r9d,ebx
   1400305bd:	mov    r14,QWORD PTR [rax+0x8]
   1400305c1:	mov    r8,rdi
   1400305c4:	mov    rdx,rsi
   1400305c7:	mov    rcx,rbp
   1400305ca:	call   0x140017fc4
   1400305cf:	test   eax,eax
   1400305d1:	je     0x14003062e
   1400305d3:	test   r14,r14
   1400305d6:	je     0x1400305e8
   1400305d8:	mov    rax,QWORD PTR [r14]
   1400305db:	mov    rcx,r14
   1400305de:	call   QWORD PTR [rax+0x120]
   1400305e4:	test   eax,eax
   1400305e6:	je     0x14003062e
   1400305e8:	mov    rax,QWORD PTR [r12]
   1400305ec:	mov    rcx,r12
   1400305ef:	call   QWORD PTR [rax+0xa0]
   1400305f5:	test   eax,eax
   1400305f7:	jne    0x14003061e
   1400305f9:	cmp    QWORD PTR [r12+0x40],0x0
   1400305ff:	je     0x14003060f
   140030601:	mov    rcx,QWORD PTR [r12+0x40]
   140030606:	mov    rax,QWORD PTR [rcx]
   140030609:	call   QWORD PTR [rax+0xc0]
   14003060f:	mov    rax,QWORD PTR [r12]
   140030613:	mov    rcx,r12
   140030616:	call   QWORD PTR [rax+0xd0]
   14003061c:	jmp    0x14003062b
   14003061e:	mov    rax,QWORD PTR [r12]
   140030622:	mov    rcx,r12
   140030625:	call   QWORD PTR [rax+0xa8]
   14003062b:	mov    r13d,eax
   14003062e:	call   0x140017c3c
   140030633:	mov    rbx,QWORD PTR [rsp+0x40]
   140030638:	mov    rbp,QWORD PTR [rsp+0x48]
   14003063d:	mov    rsi,QWORD PTR [rsp+0x50]
   140030642:	mov    rdi,QWORD PTR [rsp+0x58]
   140030647:	mov    eax,r13d
   14003064a:	add    rsp,0x20
   14003064e:	pop    r14
   140030650:	pop    r13
   140030652:	pop    r12
   140030654:	ret    
   140030655:	int3   
   140030656:	int3   
   140030657:	int3   
   140030658:	int3   
   140030659:	int3   
   14003065a:	int3   
   14003065b:	int3   
   14003065c:	int3   
   14003065d:	int3   
   14003065e:	int3   
   14003065f:	int3   
   140030660:	int3   
   140030661:	int3   
   140030662:	int3   
   140030663:	int3   
   140030664:	int3   
   140030665:	int3   
   140030666:	data16 data16 xchg ax,ax
   14003066a:	data16 data16 xchg ax,ax
   14003066e:	xchg   ax,ax
   140030670:	sub    rsp,0x10
   140030674:	mov    QWORD PTR [rsp],r10
   140030678:	mov    QWORD PTR [rsp+0x8],r11
   14003067d:	xor    r11,r11
   140030680:	lea    r10,[rsp+0x18]
   140030685:	sub    r10,rax
   140030688:	cmovb  r10,r11
   14003068c:	mov    r11,QWORD PTR gs:0x10
   140030695:	cmp    r10,r11
   140030698:	jae    0x1400306b0
   14003069a:	and    r10w,0xf000
   1400306a0:	lea    r11,[r11-0x1000]
   1400306a7:	mov    BYTE PTR [r11],0x0
   1400306ab:	cmp    r10,r11
   1400306ae:	jne    0x1400306a0
   1400306b0:	mov    r10,QWORD PTR [rsp]
   1400306b4:	mov    r11,QWORD PTR [rsp+0x8]
   1400306b9:	add    rsp,0x10
   1400306bd:	ret    
   1400306be:	int3   
   1400306bf:	int3   
   1400306c0:	int3   
   1400306c1:	int3   
   1400306c2:	int3   
   1400306c3:	int3   
   1400306c4:	int3   
   1400306c5:	int3   
   1400306c6:	data16 data16 xchg ax,ax
   1400306ca:	data16 data16 xchg ax,ax
   1400306ce:	xchg   ax,ax
   1400306d0:	sub    rsp,0x18
   1400306d4:	mov    QWORD PTR [rsp+0x20],rcx
   1400306d9:	mov    QWORD PTR [rsp+0x28],rdx
   1400306de:	mov    DWORD PTR [rsp+0x30],r8d
   1400306e3:	mov    rdx,QWORD PTR [rdx]
   1400306e6:	mov    rax,rcx
   1400306e9:	call   0x140025790
   1400306ee:	call   rax
   1400306f0:	call   0x1400257c0
   1400306f5:	mov    rcx,rax
   1400306f8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400306fd:	mov    rdx,QWORD PTR [rdx]
   140030700:	mov    r8d,0x2
   140030706:	call   0x140025790
   14003070b:	mov    QWORD PTR [rsp+0x10],rax
   140030710:	add    rsp,0x18
   140030714:	ret    
   140030715:	int3   
   140030716:	int3   
   140030717:	int3   
   140030718:	int3   
   140030719:	int3   
   14003071a:	int3   
   14003071b:	int3   
   14003071c:	int3   
   14003071d:	int3   
   14003071e:	int3   
   14003071f:	int3   
   140030720:	sub    rsp,0x38
   140030724:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003072d:	xor    edx,edx
   14003072f:	lea    rcx,[rip+0x15e3a]        # 0x140046570
   140030736:	call   0x140007c84
   14003073b:	nop
   14003073c:	lea    rax,[rip+0x6155]        # 0x140036898
   140030743:	mov    QWORD PTR [rip+0x15e26],rax        # 0x140046570
   14003074a:	lea    rcx,[rip+0x15f5f]        # 0x1400466b0
   140030751:	call   0x140001000
   140030756:	nop
   140030757:	call   0x14000669c
   14003075c:	mov    r11,rax
   14003075f:	xor    ecx,ecx
   140030761:	test   rax,rax
   140030764:	setne  cl
   140030767:	test   ecx,ecx
   140030769:	jne    0x140030776
   14003076b:	mov    ecx,0x80004005
   140030770:	call   0x1400015c0
   140030775:	int3   
   140030776:	mov    rax,QWORD PTR [rax]
   140030779:	mov    rcx,r11
   14003077c:	call   QWORD PTR [rax+0x18]
   14003077f:	add    rax,0x18
   140030783:	mov    QWORD PTR [rip+0x15f46],rax        # 0x1400466d0
   14003078a:	lea    rax,[rip+0x6297]        # 0x140036a28
   140030791:	mov    QWORD PTR [rip+0x15f30],rax        # 0x1400466c8
   140030798:	mov    DWORD PTR [rip+0x15f36],0x0        # 0x1400466d8
   1400307a2:	mov    BYTE PTR [rip+0x15f67],0x0        # 0x140046710
   1400307a9:	lea    rcx,[rip+0x4e0]        # 0x140030c90
   1400307b0:	add    rsp,0x38
   1400307b4:	jmp    0x140019960
   1400307b9:	int3   
   1400307ba:	int3   
   1400307bb:	int3   
   1400307bc:	int3   
   1400307bd:	int3   
   1400307be:	int3   
   1400307bf:	int3   
   1400307c0:	rex push rbp
   1400307c2:	sub    rsp,0x20
   1400307c6:	mov    rbp,rdx
   1400307c9:	lea    rcx,[rip+0x15da0]        # 0x140046570
   1400307d0:	call   0x140007dfc
   1400307d5:	add    rsp,0x20
   1400307d9:	pop    rbp
   1400307da:	ret    
   1400307db:	int3   
   1400307dc:	int3   
   1400307dd:	int3   
   1400307de:	int3   
   1400307df:	int3   
   1400307e0:	rex push rbp
   1400307e2:	sub    rsp,0x20
   1400307e6:	mov    rbp,rdx
   1400307e9:	lea    rcx,[rip+0x15d80]        # 0x140046570
   1400307f0:	add    rcx,0x140
   1400307f7:	call   0x140001190
   1400307fc:	add    rsp,0x20
   140030800:	pop    rbp
   140030801:	ret    
   140030802:	int3   
   140030803:	int3   
   140030804:	lea    rcx,[rip+0x569]        # 0x140030d74
   14003080b:	jmp    0x140019960
   140030810:	lea    rcx,[rip+0x56d]        # 0x140030d84
   140030817:	jmp    0x140019960
   14003081c:	lea    rcx,[rip+0x571]        # 0x140030d94
   140030823:	jmp    0x140019960
   140030828:	lea    rcx,[rip+0xef31]        # 0x14003f760
   14003082f:	jmp    0x140013578
   140030834:	lea    rcx,[rip+0x569]        # 0x140030da4
   14003083b:	jmp    0x140019960
   140030840:	sub    rsp,0x28
   140030844:	lea    rcx,[rip+0x3565]        # 0x140033db0
   14003084b:	call   QWORD PTR [rip+0xd27]        # 0x140031578
   140030851:	mov    DWORD PTR [rip+0x142e1],eax        # 0x140044b38
   140030857:	add    rsp,0x28
   14003085b:	ret    
   14003085c:	sub    rsp,0x28
   140030860:	lea    rcx,[rip+0x142d9]        # 0x140044b40
   140030867:	call   0x1400089f0
   14003086c:	lea    rax,[rip+0x2425]        # 0x140032c98
   140030873:	lea    r11,[rip+0x253e]        # 0x140032db8
   14003087a:	mov    QWORD PTR [rip+0x1431f],rax        # 0x140044ba0
   140030881:	lea    rax,[rip+0x24f8]        # 0x140032d80
   140030888:	lea    rcx,[rip+0x521]        # 0x140030db0
   14003088f:	mov    QWORD PTR [rip+0x14312],rax        # 0x140044ba8
   140030896:	xor    eax,eax
   140030898:	mov    QWORD PTR [rip+0x142a1],r11        # 0x140044b40
   14003089f:	mov    QWORD PTR [rip+0x142da],rax        # 0x140044b80
   1400308a6:	mov    BYTE PTR [rip+0x142dc],al        # 0x140044b88
   1400308ac:	mov    QWORD PTR [rip+0x142e5],rax        # 0x140044b98
   1400308b3:	mov    QWORD PTR [rip+0x142f6],rax        # 0x140044bb0
   1400308ba:	mov    DWORD PTR [rip+0x142f8],eax        # 0x140044bb8
   1400308c0:	mov    QWORD PTR [rip+0x142f9],rax        # 0x140044bc0
   1400308c7:	mov    DWORD PTR [rip+0x142fb],eax        # 0x140044bc8
   1400308cd:	mov    QWORD PTR [rip+0x142fc],rax        # 0x140044bd0
   1400308d4:	mov    QWORD PTR [rip+0x142fd],rax        # 0x140044bd8
   1400308db:	mov    QWORD PTR [rip+0x142fe],rax        # 0x140044be0
   1400308e2:	add    rsp,0x28
   1400308e6:	jmp    0x140019960
   1400308eb:	int3   
   1400308ec:	sub    rsp,0x28
   1400308f0:	lea    rcx,[rip+0x142f9]        # 0x140044bf0
   1400308f7:	call   0x1400089f0
   1400308fc:	lea    rax,[rip+0x2395]        # 0x140032c98
   140030903:	lea    r11,[rip+0x24ae]        # 0x140032db8
   14003090a:	mov    QWORD PTR [rip+0x1433f],rax        # 0x140044c50
   140030911:	lea    rax,[rip+0x2468]        # 0x140032d80
   140030918:	lea    rcx,[rip+0x49d]        # 0x140030dbc
   14003091f:	mov    QWORD PTR [rip+0x14332],rax        # 0x140044c58
   140030926:	xor    eax,eax
   140030928:	mov    QWORD PTR [rip+0x142c1],r11        # 0x140044bf0
   14003092f:	mov    BYTE PTR [rip+0x14303],al        # 0x140044c38
   140030935:	mov    QWORD PTR [rip+0x1430c],rax        # 0x140044c48
   14003093c:	mov    QWORD PTR [rip+0x1431d],rax        # 0x140044c60
   140030943:	mov    DWORD PTR [rip+0x1431f],eax        # 0x140044c68
   140030949:	mov    QWORD PTR [rip+0x14320],rax        # 0x140044c70
   140030950:	mov    DWORD PTR [rip+0x14322],eax        # 0x140044c78
   140030956:	mov    QWORD PTR [rip+0x14323],rax        # 0x140044c80
   14003095d:	mov    QWORD PTR [rip+0x14324],rax        # 0x140044c88
   140030964:	mov    QWORD PTR [rip+0x14325],rax        # 0x140044c90
   14003096b:	mov    QWORD PTR [rip+0x142ba],0x1        # 0x140044c30
   140030976:	add    rsp,0x28
   14003097a:	jmp    0x140019960
   14003097f:	int3   
   140030980:	sub    rsp,0x28
   140030984:	lea    rcx,[rip+0x14315]        # 0x140044ca0
   14003098b:	call   0x1400089f0
   140030990:	or     QWORD PTR [rip+0x14348],0xffffffffffffffff        # 0x140044ce0
   140030998:	lea    rax,[rip+0x22f9]        # 0x140032c98
   14003099f:	mov    QWORD PTR [rip+0x1435a],rax        # 0x140044d00
   1400309a6:	lea    rax,[rip+0x23d3]        # 0x140032d80
   1400309ad:	lea    r11,[rip+0x2404]        # 0x140032db8
   1400309b4:	mov    QWORD PTR [rip+0x1434d],rax        # 0x140044d08
   1400309bb:	xor    eax,eax
   1400309bd:	lea    rcx,[rip+0x404]        # 0x140030dc8
   1400309c4:	mov    BYTE PTR [rip+0x1431e],al        # 0x140044ce8
   1400309ca:	mov    QWORD PTR [rip+0x14327],rax        # 0x140044cf8
   1400309d1:	mov    QWORD PTR [rip+0x14338],rax        # 0x140044d10
   1400309d8:	mov    DWORD PTR [rip+0x1433a],eax        # 0x140044d18
   1400309de:	mov    QWORD PTR [rip+0x1433b],rax        # 0x140044d20
   1400309e5:	mov    DWORD PTR [rip+0x1433d],eax        # 0x140044d28
   1400309eb:	mov    QWORD PTR [rip+0x1433e],rax        # 0x140044d30
   1400309f2:	mov    QWORD PTR [rip+0x1433f],rax        # 0x140044d38
   1400309f9:	mov    QWORD PTR [rip+0x14340],rax        # 0x140044d40
   140030a00:	mov    QWORD PTR [rip+0x14299],r11        # 0x140044ca0
   140030a07:	add    rsp,0x28
   140030a0b:	jmp    0x140019960
   140030a10:	sub    rsp,0x28
   140030a14:	lea    rcx,[rip+0x14335]        # 0x140044d50
   140030a1b:	call   0x1400089f0
   140030a20:	lea    rax,[rip+0x2271]        # 0x140032c98
   140030a27:	lea    r11,[rip+0x238a]        # 0x140032db8
   140030a2e:	mov    QWORD PTR [rip+0x1437b],rax        # 0x140044db0
   140030a35:	lea    rax,[rip+0x2344]        # 0x140032d80
   140030a3c:	lea    rcx,[rip+0x391]        # 0x140030dd4
   140030a43:	mov    QWORD PTR [rip+0x1436e],rax        # 0x140044db8
   140030a4a:	xor    eax,eax
   140030a4c:	mov    QWORD PTR [rip+0x142fd],r11        # 0x140044d50
   140030a53:	mov    BYTE PTR [rip+0x1433f],al        # 0x140044d98
   140030a59:	mov    QWORD PTR [rip+0x14348],rax        # 0x140044da8
   140030a60:	mov    QWORD PTR [rip+0x14359],rax        # 0x140044dc0
   140030a67:	mov    DWORD PTR [rip+0x1435b],eax        # 0x140044dc8
   140030a6d:	mov    QWORD PTR [rip+0x1435c],rax        # 0x140044dd0
   140030a74:	mov    DWORD PTR [rip+0x1435e],eax        # 0x140044dd8
   140030a7a:	mov    QWORD PTR [rip+0x1435f],rax        # 0x140044de0
   140030a81:	mov    QWORD PTR [rip+0x14360],rax        # 0x140044de8
   140030a88:	mov    QWORD PTR [rip+0x14361],rax        # 0x140044df0
   140030a8f:	mov    QWORD PTR [rip+0x142f6],0xfffffffffffffffe        # 0x140044d90
   140030a9a:	add    rsp,0x28
   140030a9e:	jmp    0x140019960
   140030aa3:	int3   
   140030aa4:	sub    rsp,0x28
   140030aa8:	lea    rcx,[rip+0x14361]        # 0x140044e10
   140030aaf:	xor    edx,edx
   140030ab1:	call   0x140006490
   140030ab6:	and    DWORD PTR [rip+0x14367],0x0        # 0x140044e24
   140030abd:	and    DWORD PTR [rip+0x14364],0x0        # 0x140044e28
   140030ac4:	lea    rax,[rip+0x3415]        # 0x140033ee0
   140030acb:	lea    rcx,[rip+0x30e]        # 0x140030de0
   140030ad2:	mov    DWORD PTR [rip+0x14450],0xf022        # 0x140044f2c
   140030adc:	mov    QWORD PTR [rip+0x1432d],rax        # 0x140044e10
   140030ae3:	add    rsp,0x28
   140030ae7:	jmp    0x140019960
   140030aec:	sub    rsp,0x28
   140030af0:	lea    rcx,[rip+0x14439]        # 0x140044f30
   140030af7:	xor    edx,edx
   140030af9:	call   0x140006490
   140030afe:	and    DWORD PTR [rip+0x1443f],0x0        # 0x140044f44
   140030b05:	and    DWORD PTR [rip+0x1443c],0x0        # 0x140044f48
   140030b0c:	lea    rax,[rip+0x3405]        # 0x140033f18
   140030b13:	lea    rcx,[rip+0x2d6]        # 0x140030df0
   140030b1a:	mov    DWORD PTR [rip+0x14528],0xf024        # 0x14004504c
   140030b24:	mov    QWORD PTR [rip+0x14405],rax        # 0x140044f30
   140030b2b:	add    rsp,0x28
   140030b2f:	jmp    0x140019960
   140030b34:	lea    rcx,[rip+0x2c5]        # 0x140030e00
   140030b3b:	jmp    0x140019960
   140030b40:	lea    rcx,[rip+0x2c5]        # 0x140030e0c
   140030b47:	jmp    0x140019960
   140030b4c:	sub    rsp,0x28
   140030b50:	lea    rcx,[rip+0x14539]        # 0x140045090
   140030b57:	call   0x140013970
   140030b5c:	lea    rcx,[rip+0x2b5]        # 0x140030e18
   140030b63:	add    rsp,0x28
   140030b67:	jmp    0x140019960
   140030b6c:	lea    rcx,[rip+0xf345]        # 0x14003feb8
   140030b73:	jmp    0x140013578
   140030b78:	sub    rsp,0x28
   140030b7c:	call   QWORD PTR [rip+0x83e]        # 0x1400313c0
   140030b82:	bt     eax,0x1f
   140030b86:	jae    0x140030b94
   140030b88:	call   QWORD PTR [rip+0x832]        # 0x1400313c0
   140030b8e:	cmp    ax,0x4
   140030b92:	je     0x140030bac
   140030b94:	call   QWORD PTR [rip+0x826]        # 0x1400313c0
   140030b9a:	bt     eax,0x1f
   140030b9e:	jb     0x140030bc1
   140030ba0:	call   QWORD PTR [rip+0x81a]        # 0x1400313c0
   140030ba6:	cmp    ax,0x3
   140030baa:	jne    0x140030bc1
   140030bac:	lea    rcx,[rip+0x3d75]        # 0x140034928
   140030bb3:	call   QWORD PTR [rip+0x9bf]        # 0x140031578
   140030bb9:	mov    DWORD PTR [rip+0x148d9],eax        # 0x140045498
   140030bbf:	jmp    0x140030bc8
   140030bc1:	and    DWORD PTR [rip+0x148d0],0x0        # 0x140045498
   140030bc8:	add    rsp,0x28
   140030bcc:	ret    
   140030bcd:	int3   
   140030bce:	int3   
   140030bcf:	int3   
   140030bd0:	lea    rcx,[rip+0xf389]        # 0x14003ff60
   140030bd7:	jmp    0x140013578
   140030bdc:	sub    rsp,0x28
   140030be0:	lea    rcx,[rip+0x158a9]        # 0x140046490
   140030be7:	call   0x1400300c8
   140030bec:	lea    rcx,[rip+0x231]        # 0x140030e24
   140030bf3:	add    rsp,0x28
   140030bf7:	jmp    0x140019960
   140030bfc:	sub    rsp,0x28
   140030c00:	xor    edx,edx
   140030c02:	lea    rcx,[rip+0x158ef]        # 0x1400464f8
   140030c09:	lea    r8d,[rdx+0x28]
   140030c0d:	call   0x14001b520
   140030c12:	and    QWORD PTR [rip+0x1590e],0x0        # 0x140046528
   140030c1a:	and    DWORD PTR [rip+0x1590f],0x0        # 0x140046530
   140030c21:	and    DWORD PTR [rip+0x1590c],0x0        # 0x140046534
   140030c28:	and    QWORD PTR [rip+0x158f0],0x0        # 0x140046520
   140030c30:	lea    rcx,[rip+0x158c1]        # 0x1400464f8
   140030c37:	mov    DWORD PTR [rip+0x158af],0x48        # 0x1400464f0
   140030c41:	call   0x14002ff88
   140030c46:	test   eax,eax
   140030c48:	jns    0x140030c58
   140030c4a:	and    DWORD PTR [rip+0x1589f],0x0        # 0x1400464f0
   140030c51:	mov    BYTE PTR [rip+0x15ac0],0x1        # 0x140046718
   140030c58:	lea    rcx,[rip+0x1d1]        # 0x140030e30
   140030c5f:	add    rsp,0x28
   140030c63:	jmp    0x140019960
   140030c68:	sub    rsp,0x28
   140030c6c:	call   0x1400131d0
   140030c71:	lea    rcx,[rip+0xfffffffffffff8e8]        # 0x140030560
   140030c78:	mov    BYTE PTR [rax+0x28],0x0
   140030c7c:	call   0x140019960
   140030c81:	mov    BYTE PTR [rip+0x158d1],al        # 0x140046558
   140030c87:	add    rsp,0x28
   140030c8b:	ret    
   140030c8c:	int3   
   140030c8d:	int3   
   140030c8e:	int3   
   140030c8f:	int3   
   140030c90:	rex push rbx
   140030c92:	sub    rsp,0x30
   140030c96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030c9f:	lea    rax,[rip+0x5d82]        # 0x140036a28
   140030ca6:	mov    QWORD PTR [rip+0x15a1b],rax        # 0x1400466c8
   140030cad:	mov    rdx,QWORD PTR [rip+0x15a1c]        # 0x1400466d0
   140030cb4:	add    rdx,0xffffffffffffffe8
   140030cb8:	or     ebx,0xffffffff
   140030cbb:	mov    eax,ebx
   140030cbd:	lock xadd DWORD PTR [rdx+0x10],eax
   140030cc2:	add    eax,ebx
   140030cc4:	test   eax,eax
   140030cc6:	jg     0x140030cd2
   140030cc8:	mov    rcx,QWORD PTR [rdx]
   140030ccb:	mov    rax,QWORD PTR [rcx]
   140030cce:	call   QWORD PTR [rax+0x8]
   140030cd1:	nop
   140030cd2:	mov    rdx,QWORD PTR [rip+0x159df]        # 0x1400466b8
   140030cd9:	add    rdx,0xffffffffffffffe8
   140030cdd:	mov    eax,ebx
   140030cdf:	lock xadd DWORD PTR [rdx+0x10],eax
   140030ce4:	add    eax,0xffffffff
   140030ce7:	test   eax,eax
   140030ce9:	jg     0x140030cf4
   140030ceb:	mov    rcx,QWORD PTR [rdx]
   140030cee:	mov    rax,QWORD PTR [rcx]
   140030cf1:	call   QWORD PTR [rax+0x8]
   140030cf4:	mov    rdx,QWORD PTR [rip+0x159b5]        # 0x1400466b0
   140030cfb:	add    rdx,0xffffffffffffffe8
   140030cff:	lock xadd DWORD PTR [rdx+0x10],ebx
   140030d04:	add    ebx,0xffffffff
   140030d07:	test   ebx,ebx
   140030d09:	jg     0x140030d15
   140030d0b:	mov    rcx,QWORD PTR [rdx]
   140030d0e:	mov    rax,QWORD PTR [rcx]
   140030d11:	call   QWORD PTR [rax+0x8]
   140030d14:	nop
   140030d15:	lea    rcx,[rip+0x15854]        # 0x140046570
   140030d1c:	add    rsp,0x30
   140030d20:	pop    rbx
   140030d21:	jmp    0x140007dfc
   140030d26:	int3   
   140030d27:	int3   
   140030d28:	int3   
   140030d29:	int3   
   140030d2a:	int3   
   140030d2b:	int3   
   140030d2c:	int3   
   140030d2d:	int3   
   140030d2e:	int3   
   140030d2f:	int3   
   140030d30:	rex push rbp
   140030d32:	sub    rsp,0x20
   140030d36:	mov    rbp,rdx
   140030d39:	lea    rcx,[rip+0x15830]        # 0x140046570
   140030d40:	call   0x140007dfc
   140030d45:	add    rsp,0x20
   140030d49:	pop    rbp
   140030d4a:	ret    
   140030d4b:	int3   
   140030d4c:	int3   
   140030d4d:	int3   
   140030d4e:	int3   
   140030d4f:	int3   
   140030d50:	rex push rbp
   140030d52:	sub    rsp,0x20
   140030d56:	mov    rbp,rdx
   140030d59:	lea    rcx,[rip+0x15810]        # 0x140046570
   140030d60:	add    rcx,0x140
   140030d67:	call   0x140001190
   140030d6c:	add    rsp,0x20
   140030d70:	pop    rbp
   140030d71:	ret    
   140030d72:	int3   
   140030d73:	int3   
   140030d74:	lea    rax,[rip+0xded]        # 0x140031b68
   140030d7b:	mov    QWORD PTR [rip+0xe4be],rax        # 0x14003f240
   140030d82:	ret    
   140030d83:	int3   
   140030d84:	lea    rax,[rip+0xe15]        # 0x140031ba0
   140030d8b:	mov    QWORD PTR [rip+0xe5ce],rax        # 0x14003f360
   140030d92:	ret    
   140030d93:	int3   
   140030d94:	lea    rax,[rip+0xe3d]        # 0x140031bd8
   140030d9b:	mov    QWORD PTR [rip+0xe6de],rax        # 0x14003f480
   140030da2:	ret    
   140030da3:	int3   
   140030da4:	lea    rcx,[rip+0x14055]        # 0x140044e00
   140030dab:	jmp    0x140013c88
   140030db0:	lea    rcx,[rip+0x13d89]        # 0x140044b40
   140030db7:	jmp    0x14000e4c0
   140030dbc:	lea    rcx,[rip+0x13e2d]        # 0x140044bf0
   140030dc3:	jmp    0x14000e4c0
   140030dc8:	lea    rcx,[rip+0x13ed1]        # 0x140044ca0
   140030dcf:	jmp    0x14000e4c0
   140030dd4:	lea    rcx,[rip+0x13f75]        # 0x140044d50
   140030ddb:	jmp    0x14000e4c0
   140030de0:	lea    rax,[rip+0x30f9]        # 0x140033ee0
   140030de7:	mov    QWORD PTR [rip+0x14022],rax        # 0x140044e10
   140030dee:	ret    
   140030def:	int3   
   140030df0:	lea    rax,[rip+0x3121]        # 0x140033f18
   140030df7:	mov    QWORD PTR [rip+0x14132],rax        # 0x140044f30
   140030dfe:	ret    
   140030dff:	int3   
   140030e00:	lea    rcx,[rip+0x14279]        # 0x140045080
   140030e07:	jmp    0x140014428
   140030e0c:	lea    rcx,[rip+0x14265]        # 0x140045078
   140030e13:	jmp    0x140013c88
   140030e18:	lea    rcx,[rip+0x14271]        # 0x140045090
   140030e1f:	jmp    0x1400139dc
   140030e24:	lea    rcx,[rip+0x15665]        # 0x140046490
   140030e2b:	jmp    0x140030094
   140030e30:	sub    rsp,0x28
   140030e34:	mov    rdx,QWORD PTR [rip+0x1565d]        # 0x140046498
   140030e3b:	lea    rcx,[rip+0x156ae]        # 0x1400464f0
   140030e42:	call   0x14002ffdc
   140030e47:	mov    rcx,QWORD PTR [rip+0x156da]        # 0x140046528
   140030e4e:	test   rcx,rcx
   140030e51:	je     0x140030e60
   140030e53:	call   0x14001a540
   140030e58:	and    QWORD PTR [rip+0x156c8],0x0        # 0x140046528
   140030e60:	and    DWORD PTR [rip+0x156c9],0x0        # 0x140046530
   140030e67:	and    DWORD PTR [rip+0x156c6],0x0        # 0x140046534
   140030e6e:	add    rsp,0x28
   140030e72:	ret    
