
5e2f6ccab90816da98344ffa18c6e0893aba6bff018e6893fae38b126306b283.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x53825]        # 0x454840
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x53826]        # 0x454850
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x53829]        # 0x454860
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x537ec]        # 0x454830
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5367f]        # 0x4546d0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x537c1]        # 0x454820
  40105f:	mov    DWORD PTR [rip+0x58fa3],edx        # 0x45a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42a5f0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x428540
  401081:	mov    rdx,QWORD PTR [rip+0x536e8]        # 0x454770
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x536ce]        # 0x454760
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x53734]        # 0x4547d0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5366b]        # 0x454710
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x428120
  4010af:	mov    rax,QWORD PTR [rip+0x535ca]        # 0x454680
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42a5f0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x272f9]        # 0x428420
  401127:	call   0x428410
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x53695]        # 0x454800
  40116b:	lea    r8,[rip+0x58ea6]        # 0x45a018
  401172:	lea    rdx,[rip+0x58ea7]        # 0x45a020
  401179:	lea    rcx,[rip+0x58ea8]        # 0x45a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x58e78],eax        # 0x45a000
  401188:	lea    rax,[rip+0x58e71]        # 0x45a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x53625]        # 0x4547c0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42a608
  4011a3:	mov    DWORD PTR [rip+0x58e67],eax        # 0x45a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5365a]        # 0x454820
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5354b]        # 0x454740
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x5b93a]        # 0x45cb3c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x53527]        # 0x454750
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x58dba],0x1        # 0x45a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x5345c]        # 0x4546c0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x428730
  40127d:	lea    rcx,[rip+0x27a4c]        # 0x428cd0
  401284:	call   QWORD PTR [rip+0x5b8aa]        # 0x45cb34
  40128a:	mov    rdx,QWORD PTR [rip+0x5349f]        # 0x454730
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x428be0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42a630
  4012a5:	call   0x428520
  4012aa:	mov    rax,QWORD PTR [rip+0x5341f]        # 0x4546d0
  4012b1:	mov    QWORD PTR [rip+0x59c50],rax        # 0x45af08
  4012b8:	mov    rax,QWORD PTR [rip+0x53441]        # 0x454700
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x59be9],rax        # 0x45af00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2acca],eax        # 0x42c000
  401336:	mov    r12d,DWORD PTR [rip+0x58ceb]        # 0x45a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42a4a0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x58cc2]        # 0x45a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42a400
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42a4a0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42a490
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x58c6a],rbp        # 0x45a020
  4013b6:	call   0x4280f0
  4013bb:	mov    rax,QWORD PTR [rip+0x5332e]        # 0x4546f0
  4013c2:	mov    rdx,QWORD PTR [rip+0x58c4f]        # 0x45a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x58c59]        # 0x45a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x58c3c]        # 0x45a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x58c3d]        # 0x45a020
  4013e3:	call   0x42ad00
  4013e8:	mov    ecx,DWORD PTR [rip+0x58c1a]        # 0x45a008
  4013ee:	mov    DWORD PTR [rip+0x58c18],eax        # 0x45a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x58c02]        # 0x45a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42a5d8
  40140b:	mov    eax,DWORD PTR [rip+0x58bfb]        # 0x45a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x53319]        # 0x454750
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42a5e0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x5332d]        # 0x454790
  401463:	mov    rcx,QWORD PTR [rip+0x53316]        # 0x454780
  40146a:	call   0x42a5c0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x5b5eb]        # 0x45ca84
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x53309]        # 0x4547b0
  4014a7:	mov    rcx,QWORD PTR [rip+0x532f2]        # 0x4547a0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42a5c0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42a540
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x53345]        # 0x454820
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x428130
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x53315]        # 0x454820
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x428130
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	cmp    ecx,0x7
  401533:	ja     0x4015d0
  401539:	lea    rax,[rip+0x2bb10]        # 0x42d050
  401540:	mov    ecx,ecx
  401542:	movsxd rdx,DWORD PTR [rax+rcx*4]
  401546:	add    rax,rdx
  401549:	jmp    rax
  40154b:	nop    DWORD PTR [rax+rax*1+0x0]
  401550:	lea    rax,[rip+0x2baa9]        # 0x42d000
  401557:	ret    
  401558:	nop    DWORD PTR [rax+rax*1+0x0]
  401560:	lea    rax,[rip+0x2baa1]        # 0x42d008
  401567:	ret    
  401568:	nop    DWORD PTR [rax+rax*1+0x0]
  401570:	lea    rax,[rip+0x2ba9b]        # 0x42d012
  401577:	ret    
  401578:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	lea    rax,[rip+0x2ba93]        # 0x42d01a
  401587:	ret    
  401588:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	lea    rax,[rip+0x2ba8b]        # 0x42d022
  401597:	ret    
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	lea    rax,[rip+0x2ba80]        # 0x42d027
  4015a7:	ret    
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	lea    rax,[rip+0x2ba76]        # 0x42d02d
  4015b7:	ret    
  4015b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	lea    rax,[rip+0x2ba76]        # 0x42d03d
  4015c7:	ret    
  4015c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015d0:	lea    rax,[rip+0x2ba6f]        # 0x42d046
  4015d7:	ret    
  4015d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e0:	push   rdi
  4015e1:	push   rsi
  4015e2:	sub    rsp,0x38
  4015e6:	mov    r9d,0x1
  4015ec:	mov    edx,0x2
  4015f1:	lea    r8,[rsp+0x2f]
  4015f6:	call   0x40cb10
  4015fb:	test   rax,rax
  4015fe:	je     0x401630
  401600:	cmp    BYTE PTR [rsp+0x2f],0x0
  401605:	jne    0x401626
  401607:	cmp    BYTE PTR [rax],0x0
  40160a:	je     0x401630
  40160c:	lea    rdi,[rip+0x2ba5d]        # 0x42d070
  401613:	mov    rsi,rax
  401616:	mov    ecx,0x2
  40161b:	mov    edx,0x0
  401620:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401622:	cmove  rax,rdx
  401626:	add    rsp,0x38
  40162a:	pop    rsi
  40162b:	pop    rdi
  40162c:	ret    
  40162d:	nop    DWORD PTR [rax]
  401630:	xor    eax,eax
  401632:	jmp    0x401626
  401634:	xchg   ax,ax
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	sub    rsp,0x28
  401644:	mov    rax,QWORD PTR [rip+0x53295]        # 0x4548e0
  40164b:	mov    rcx,QWORD PTR [rax]
  40164e:	call   0x427ea0
  401653:	test   rax,rax
  401656:	je     0x401670
  401658:	lea    rcx,[rip+0x2ba19]        # 0x42d078
  40165f:	add    rsp,0x28
  401663:	jmp    0x4263a0
  401668:	nop    DWORD PTR [rax+rax*1+0x0]
  401670:	add    rsp,0x28
  401674:	ret    
  401675:	nop
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	push   r15
  401682:	push   r14
  401684:	push   r13
  401686:	push   r12
  401688:	push   rbp
  401689:	push   rdi
  40168a:	push   rsi
  40168b:	push   rbx
  40168c:	sub    rsp,0x898
  401693:	test   rcx,rcx
  401696:	mov    rsi,rcx
  401699:	mov    rdi,rdx
  40169c:	mov    ebp,r8d
  40169f:	mov    r13,r9
  4016a2:	mov    r12,rcx
  4016a5:	je     0x401880
  4016ab:	lea    rdx,[rsp+0x30]
  4016b0:	mov    rcx,r12
  4016b3:	call   0x4269b0
  4016b8:	test   eax,eax
  4016ba:	jne    0x401802
  4016c0:	lea    rcx,[rip+0x2bb10]        # 0x42d1d7
  4016c7:	call   0x42a4d0
  4016cc:	test   rax,rax
  4016cf:	mov    r14,rax
  4016d2:	je     0x4019fd
  4016d8:	test   ebp,ebp
  4016da:	jle    0x401830
  4016e0:	lea    rcx,[rip+0x2ba41]        # 0x42d128
  4016e7:	call   0x42a4d0
  4016ec:	test   rax,rax
  4016ef:	mov    r8,rax
  4016f2:	je     0x401aed
  4016f8:	lea    rcx,[rip+0x2bae4]        # 0x42d1e3
  4016ff:	mov    r9d,ebp
  401702:	mov    QWORD PTR [rsp+0x20],r12
  401707:	mov    rdx,r14
  40170a:	call   0x424630
  40170f:	mov    rbp,rax
  401712:	mov    rcx,rbp
  401715:	call   0x424f60
  40171a:	cmp    eax,0xffffffff
  40171d:	mov    ebx,eax
  40171f:	je     0x401954
  401725:	cmp    eax,0x7f
  401728:	je     0x401975
  40172e:	mov    rcx,rbp
  401731:	call   0x42a4e8
  401736:	test   ebx,ebx
  401738:	jne    0x401821
  40173e:	lea    rdx,[rsp+0x60]
  401743:	mov    rcx,r12
  401746:	call   0x4269b0
  40174b:	test   eax,eax
  40174d:	jne    0x401850
  401753:	xor    ebx,ebx
  401755:	mov    rax,QWORD PTR [rsp+0x80]
  40175d:	cmp    QWORD PTR [rsp+0x50],rax
  401762:	je     0x4017e0
  401764:	lea    rdx,[rip+0x2ba69]        # 0x42d1d4
  40176b:	mov    rcx,r12
  40176e:	call   0x42a510
  401773:	test   rax,rax
  401776:	mov    rbp,rax
  401779:	je     0x401850
  40177f:	mov    rcx,rdi
  401782:	lea    rbx,[rsp+0x490]
  40178a:	call   0x427d68
  40178f:	jmp    0x40179c
  401791:	mov    rdx,rbx
  401794:	mov    rcx,rdi
  401797:	call   0x427dc8
  40179c:	mov    r8,rbp
  40179f:	mov    edx,0x400
  4017a4:	mov    rcx,rbx
  4017a7:	call   0x42a518
  4017ac:	test   rax,rax
  4017af:	jne    0x401791
  4017b1:	mov    rcx,rbp
  4017b4:	call   0x42a528
  4017b9:	test   eax,eax
  4017bb:	jne    0x401910
  4017c1:	test   r13,r13
  4017c4:	je     0x401983
  4017ca:	mov    BYTE PTR [r13+0x0],0x1
  4017cf:	xor    ebx,ebx
  4017d1:	mov    rcx,rbp
  4017d4:	call   0x42a538
  4017d9:	nop    DWORD PTR [rax+0x0]
  4017e0:	test   rsi,rsi
  4017e3:	je     0x4018d1
  4017e9:	mov    eax,ebx
  4017eb:	xor    eax,0x1
  4017ee:	add    rsp,0x898
  4017f5:	pop    rbx
  4017f6:	pop    rsi
  4017f7:	pop    rdi
  4017f8:	pop    rbp
  4017f9:	pop    r12
  4017fb:	pop    r13
  4017fd:	pop    r14
  4017ff:	pop    r15
  401801:	ret    
  401802:	call   QWORD PTR [rip+0x5b3e4]        # 0x45cbec
  401808:	mov    ecx,DWORD PTR [rax]
  40180a:	call   0x42a408
  40180f:	lea    rcx,[rip+0x2b8fc]        # 0x42d112
  401816:	mov    r8,rax
  401819:	mov    rdx,r12
  40181c:	call   0x405d90
  401821:	mov    ebx,0x1
  401826:	jmp    0x4017e0
  401828:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	lea    rcx,[rip+0x2b9bb]        # 0x42d1f2
  401837:	mov    r8,r12
  40183a:	mov    rdx,r14
  40183d:	call   0x424630
  401842:	mov    rbp,rax
  401845:	jmp    0x401712
  40184a:	nop    WORD PTR [rax+rax*1+0x0]
  401850:	call   QWORD PTR [rip+0x5b396]        # 0x45cbec
  401856:	mov    ecx,DWORD PTR [rax]
  401858:	mov    ebx,0x1
  40185d:	call   0x42a408
  401862:	lea    rcx,[rip+0x2b8a9]        # 0x42d112
  401869:	mov    r8,rax
  40186c:	mov    rdx,r12
  40186f:	call   0x405d90
  401874:	jmp    0x4017e0
  401879:	nop    DWORD PTR [rax+0x0]
  401880:	lea    rbx,[rsp+0x490]
  401888:	mov    ecx,0x400
  40188d:	mov    rdx,rbx
  401890:	call   QWORD PTR [rip+0x5b206]        # 0x45ca9c
  401896:	test   eax,eax
  401898:	sete   dl
  40189b:	cmp    eax,0x400
  4018a0:	jg     0x401940
  4018a6:	test   dl,dl
  4018a8:	je     0x40198a
  4018ae:	call   QWORD PTR [rip+0x5b338]        # 0x45cbec
  4018b4:	mov    ecx,DWORD PTR [rax]
  4018b6:	call   0x42a408
  4018bb:	mov    rdx,rax
  4018be:	lea    rcx,[rip+0x2b7e3]        # 0x42d0a8
  4018c5:	call   0x405d90
  4018ca:	xor    eax,eax
  4018cc:	jmp    0x4017ee
  4018d1:	mov    rcx,r12
  4018d4:	call   0x42a458
  4018d9:	cmp    eax,0xffffffff
  4018dc:	jne    0x4017e9
  4018e2:	call   QWORD PTR [rip+0x5b304]        # 0x45cbec
  4018e8:	mov    ecx,DWORD PTR [rax]
  4018ea:	call   0x42a408
  4018ef:	lea    rcx,[rip+0x2b81c]        # 0x42d112
  4018f6:	mov    r8,rax
  4018f9:	mov    rdx,r12
  4018fc:	call   0x405d90
  401901:	xor    eax,eax
  401903:	jmp    0x4017ee
  401908:	nop    DWORD PTR [rax+rax*1+0x0]
  401910:	call   QWORD PTR [rip+0x5b2d6]        # 0x45cbec
  401916:	mov    ecx,DWORD PTR [rax]
  401918:	mov    ebx,0x1
  40191d:	call   0x42a408
  401922:	lea    rcx,[rip+0x2b7e9]        # 0x42d112
  401929:	mov    r8,rax
  40192c:	mov    rdx,r12
  40192f:	call   0x405d90
  401934:	jmp    0x4017d1
  401939:	nop    DWORD PTR [rax+0x0]
  401940:	test   dl,dl
  401942:	jne    0x4018ae
  401948:	lea    rdx,[rip+0x2b74a]        # 0x42d099
  40194f:	jmp    0x4018be
  401954:	lea    rcx,[rip+0x2b843]        # 0x42d19e
  40195b:	mov    rdx,r14
  40195e:	call   0x405d90
  401963:	mov    rcx,rbp
  401966:	call   0x42a4e8
  40196b:	test   ebx,ebx
  40196d:	setne  bl
  401970:	jmp    0x4017e0
  401975:	lea    rcx,[rip+0x2b83f]        # 0x42d1bb
  40197c:	call   0x405d90
  401981:	jmp    0x401963
  401983:	xor    ebx,ebx
  401985:	jmp    0x4017d1
  40198a:	call   0x42a378
  40198f:	lea    r14,[rsp+0x90]
  401997:	mov    DWORD PTR [rsp+0x28],eax
  40199b:	lea    rax,[rip+0x2b6f7]        # 0x42d099
  4019a2:	lea    r8,[rip+0x2b729]        # 0x42d0d2
  4019a9:	mov    r9,rbx
  4019ac:	mov    edx,0x400
  4019b1:	mov    rcx,r14
  4019b4:	mov    QWORD PTR [rsp+0x20],rax
  4019b9:	call   0x426220
  4019be:	mov    r8d,0x180
  4019c4:	mov    edx,0x501
  4019c9:	mov    rcx,r14
  4019cc:	call   0x42a388
  4019d1:	cmp    eax,0xffffffff
  4019d4:	jne    0x401a37
  4019d6:	call   QWORD PTR [rip+0x5b210]        # 0x45cbec
  4019dc:	mov    ecx,DWORD PTR [rax]
  4019de:	call   0x42a408
  4019e3:	lea    rcx,[rip+0x2b6fe]        # 0x42d0e8
  4019ea:	mov    r8,rax
  4019ed:	mov    rdx,r14
  4019f0:	call   0x405d90
  4019f5:	mov    r12,r14
  4019f8:	jmp    0x401821
  4019fd:	lea    rcx,[rip+0x2b716]        # 0x42d11a
  401a04:	call   0x42a4d0
  401a09:	test   rax,rax
  401a0c:	mov    r14,rax
  401a0f:	jne    0x4016d8
  401a15:	lea    rcx,[rip+0x2b705]        # 0x42d121
  401a1c:	call   0x42a4d0
  401a21:	mov    r14,rax
  401a24:	test   rax,rax
  401a27:	lea    rax,[rip+0x2b66c]        # 0x42d09a
  401a2e:	cmove  r14,rax
  401a32:	jmp    0x4016d8
  401a37:	lea    rdx,[rip+0x2b6d2]        # 0x42d110
  401a3e:	mov    ecx,eax
  401a40:	call   0x42a360
  401a45:	test   rax,rax
  401a48:	mov    r12,rax
  401a4b:	je     0x4019d6
  401a4d:	mov    r15,QWORD PTR [rdi+0x8]
  401a51:	test   r15d,r15d
  401a54:	mov    ebx,r15d
  401a57:	je     0x401a66
  401a59:	mov    rcx,QWORD PTR [rdi]
  401a5c:	lea    eax,[r15-0x1]
  401a60:	cmp    BYTE PTR [rcx+rax*1],0xa
  401a64:	je     0x401a7a
  401a66:	mov    rcx,rdi
  401a69:	mov    edx,0xa
  401a6e:	lea    ebx,[r15+0x1]
  401a72:	call   0x427dd0
  401a77:	mov    rcx,QWORD PTR [rdi]
  401a7a:	mov    r9,r12
  401a7d:	mov    r8,rbx
  401a80:	mov    edx,0x1
  401a85:	call   0x42a4e0
  401a8a:	cmp    rbx,rax
  401a8d:	je     0x401b03
  401a8f:	mov    rbx,QWORD PTR [rip+0x5b156]        # 0x45cbec
  401a96:	call   rbx
  401a98:	mov    ecx,DWORD PTR [rax]
  401a9a:	call   0x42a408
  401a9f:	lea    rcx,[rip+0x2b66c]        # 0x42d112
  401aa6:	mov    r8,rax
  401aa9:	mov    rdx,r14
  401aac:	call   0x405d90
  401ab1:	mov    rcx,r12
  401ab4:	call   0x42a538
  401ab9:	test   eax,eax
  401abb:	jne    0x401b1d
  401abd:	mov    rcx,r14
  401ac0:	call   0x42a458
  401ac5:	test   eax,eax
  401ac7:	je     0x4019f5
  401acd:	call   rbx
  401acf:	mov    ecx,DWORD PTR [rax]
  401ad1:	call   0x42a408
  401ad6:	lea    rcx,[rip+0x2b635]        # 0x42d112
  401add:	mov    r8,rax
  401ae0:	mov    rdx,r14
  401ae3:	call   0x405d90
  401ae8:	jmp    0x4019f5
  401aed:	lea    rcx,[rip+0x2b654]        # 0x42d148
  401af4:	mov    ebx,0x1
  401af9:	call   0x405d90
  401afe:	jmp    0x4017e0
  401b03:	mov    rcx,r12
  401b06:	mov    r12,r14
  401b09:	call   0x42a538
  401b0e:	test   eax,eax
  401b10:	je     0x4016ab
  401b16:	mov    rbx,QWORD PTR [rip+0x5b0cf]        # 0x45cbec
  401b1d:	call   rbx
  401b1f:	mov    ecx,DWORD PTR [rax]
  401b21:	call   0x42a408
  401b26:	lea    rcx,[rip+0x2b5e5]        # 0x42d112
  401b2d:	mov    r8,rax
  401b30:	mov    rdx,r14
  401b33:	call   0x405d90
  401b38:	jmp    0x401abd
  401b3a:	nop    WORD PTR [rax+rax*1+0x0]
  401b40:	push   rsi
  401b41:	push   rbx
  401b42:	sub    rsp,0x28
  401b46:	test   rcx,rcx
  401b49:	je     0x401b82
  401b4b:	mov    rdx,rcx
  401b4e:	lea    rcx,[rip+0x2b802]        # 0x42d357
  401b55:	call   0x424630
  401b5a:	xor    r8d,r8d
  401b5d:	mov    rbx,rax
  401b60:	mov    edx,0x64
  401b65:	mov    rcx,rax
  401b68:	call   0x427a10
  401b6d:	mov    rcx,rbx
  401b70:	mov    rsi,rax
  401b73:	call   0x42a4e8
  401b78:	mov    rax,rsi
  401b7b:	add    rsp,0x28
  401b7f:	pop    rbx
  401b80:	pop    rsi
  401b81:	ret    
  401b82:	lea    rcx,[rip+0x2b7c3]        # 0x42d34c
  401b89:	xor    r8d,r8d
  401b8c:	mov    edx,0x64
  401b91:	add    rsp,0x28
  401b95:	pop    rbx
  401b96:	pop    rsi
  401b97:	jmp    0x427a10
  401b9c:	nop    DWORD PTR [rax+0x0]
  401ba0:	push   rsi
  401ba1:	push   rbx
  401ba2:	sub    rsp,0x48
  401ba6:	mov    rbx,QWORD PTR [rip+0x52d33]        # 0x4548e0
  401bad:	cmp    BYTE PTR [rbx+0x11a],0x0
  401bb4:	jne    0x401cb4
  401bba:	cmp    BYTE PTR [rbx+0xd0],0x0
  401bc1:	jne    0x401cb4
  401bc7:	cmp    DWORD PTR [rbx+0xe4],0x16121
  401bd1:	je     0x401cc0
  401bd7:	mov    rcx,QWORD PTR [rbx]
  401bda:	lea    rdx,[rip+0x2b78d]        # 0x42d36e
  401be1:	call   0x427e60
  401be6:	test   rax,rax
  401be9:	mov    r9,rax
  401bec:	je     0x401ce3
  401bf2:	mov    rdx,QWORD PTR [rbx+0xe8]
  401bf9:	lea    r8,[rip+0x2b786]        # 0x42d386
  401c00:	lea    rcx,[rip+0x2b785]        # 0x42d38c
  401c07:	call   0x4263a0
  401c0c:	mov    r9d,DWORD PTR [rbx+0xe4]
  401c13:	cmp    r9d,0x16183
  401c1a:	jle    0x401c8b
  401c1c:	mov    ecx,0x51eb851f
  401c21:	mov    eax,r9d
  401c24:	mov    r11d,r9d
  401c27:	imul   ecx
  401c29:	sar    r11d,0x1f
  401c2d:	mov    r10,QWORD PTR [rbx+0xe8]
  401c34:	sar    edx,0x5
  401c37:	mov    r8d,edx
  401c3a:	sub    r8d,r11d
  401c3d:	mov    eax,r8d
  401c40:	imul   ecx
  401c42:	mov    eax,r8d
  401c45:	sar    eax,0x1f
  401c48:	sar    edx,0x5
  401c4b:	mov    ecx,edx
  401c4d:	mov    edx,0x68db8bad
  401c52:	sub    ecx,eax
  401c54:	mov    eax,r9d
  401c57:	mov    r9d,0x4
  401c5d:	imul   edx
  401c5f:	imul   ecx,ecx,0x64
  401c62:	sar    edx,0xc
  401c65:	sub    r8d,ecx
  401c68:	mov    ecx,edx
  401c6a:	mov    rdx,r10
  401c6d:	sub    ecx,r11d
  401c70:	mov    DWORD PTR [rsp+0x28],r8d
  401c75:	mov    r8d,0x9
  401c7b:	mov    DWORD PTR [rsp+0x20],ecx
  401c7f:	lea    rcx,[rip+0x2b72a]        # 0x42d3b0
  401c86:	call   0x4263a0
  401c8b:	call   QWORD PTR [rip+0x5adab]        # 0x45ca3c
  401c91:	mov    ebx,eax
  401c93:	call   QWORD PTR [rip+0x5adab]        # 0x45ca44
  401c99:	cmp    ebx,eax
  401c9b:	je     0x401cae
  401c9d:	lea    rcx,[rip+0x2b77c]        # 0x42d420
  401ca4:	mov    r8d,ebx
  401ca7:	mov    edx,eax
  401ca9:	call   0x4263a0
  401cae:	call   0x401640
  401cb3:	nop
  401cb4:	add    rsp,0x48
  401cb8:	pop    rbx
  401cb9:	pop    rsi
  401cba:	ret    
  401cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	test   cl,cl
  401cc2:	je     0x401c8b
  401cc4:	mov    rdx,QWORD PTR [rbx+0xe8]
  401ccb:	lea    r8,[rip+0x2b6b4]        # 0x42d386
  401cd2:	lea    rcx,[rip+0x2b6c7]        # 0x42d3a0
  401cd9:	call   0x4263a0
  401cde:	jmp    0x401c0c
  401ce3:	mov    r10d,DWORD PTR [rbx+0xe4]
  401cea:	mov    edx,0x68db8bad
  401cef:	mov    r8d,0x51eb851f
  401cf5:	lea    rsi,[rsp+0x30]
  401cfa:	mov    eax,r10d
  401cfd:	mov    r11d,r10d
  401d00:	imul   edx
  401d02:	mov    eax,r10d
  401d05:	sar    r11d,0x1f
  401d09:	sar    edx,0xc
  401d0c:	mov    r9d,edx
  401d0f:	imul   r8d
  401d12:	sub    r9d,r11d
  401d15:	sar    edx,0x5
  401d18:	sub    edx,r11d
  401d1b:	imul   eax,edx,0x64
  401d1e:	mov    ecx,edx
  401d20:	sub    r10d,eax
  401d23:	mov    eax,edx
  401d25:	imul   r8d
  401d28:	mov    eax,ecx
  401d2a:	mov    DWORD PTR [rsp+0x28],r10d
  401d2f:	sar    eax,0x1f
  401d32:	sar    edx,0x5
  401d35:	mov    r8d,edx
  401d38:	mov    edx,0x10
  401d3d:	sub    r8d,eax
  401d40:	imul   eax,r8d,0x64
  401d44:	lea    r8,[rip+0x2b632]        # 0x42d37d
  401d4b:	sub    ecx,eax
  401d4d:	mov    DWORD PTR [rsp+0x20],ecx
  401d51:	mov    rcx,rsi
  401d54:	call   0x426220
  401d59:	mov    r9,rsi
  401d5c:	jmp    0x401bf2
  401d61:	nop    DWORD PTR [rax+rax*1+0x0]
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	push   rbx
  401d71:	sub    rsp,0x20
  401d75:	mov    rbx,QWORD PTR [rip+0x52b64]        # 0x4548e0
  401d7c:	mov    rcx,QWORD PTR [rbx]
  401d7f:	call   0x427f60
  401d84:	mov    rcx,QWORD PTR [rbx]
  401d87:	mov    DWORD PTR [rbx+0x8],eax
  401d8a:	mov    DWORD PTR [rbx+0x78],eax
  401d8d:	call   0x427e18
  401d92:	mov    rcx,QWORD PTR [rbx]
  401d95:	mov    DWORD PTR [rbx+0xe4],eax
  401d9b:	call   0x427f30
  401da0:	mov    rcx,QWORD PTR [rbx+0x110]
  401da7:	lea    rdx,[rip+0x2b733]        # 0x42d4e1
  401dae:	mov    r8,rax
  401db1:	call   0x40ef10
  401db6:	mov    rcx,QWORD PTR [rbx]
  401db9:	call   0x427de8
  401dbe:	mov    rcx,QWORD PTR [rbx+0x110]
  401dc5:	lea    rdx,[rip+0x2b71c]        # 0x42d4e8
  401dcc:	mov    r8,rax
  401dcf:	call   0x40ef10
  401dd4:	mov    rcx,QWORD PTR [rbx]
  401dd7:	call   0x427e90
  401ddc:	mov    rcx,QWORD PTR [rbx+0x110]
  401de3:	lea    rdx,[rip+0x2b703]        # 0x42d4ed
  401dea:	mov    r8,rax
  401ded:	call   0x40ef10
  401df2:	mov    rcx,QWORD PTR [rbx]
  401df5:	call   0x427e50
  401dfa:	mov    rcx,QWORD PTR [rbx+0x110]
  401e01:	lea    rdx,[rip+0x2b6ea]        # 0x42d4f2
  401e08:	mov    r8,rax
  401e0b:	call   0x40ef10
  401e10:	mov    ecx,DWORD PTR [rbx+0x8]
  401e13:	call   0x427d80
  401e18:	mov    rcx,QWORD PTR [rbx+0x110]
  401e1f:	lea    rdx,[rip+0x2b6d1]        # 0x42d4f7
  401e26:	mov    r8,rax
  401e29:	call   0x40ef10
  401e2e:	mov    edx,DWORD PTR [rbx+0x150]
  401e34:	mov    rcx,QWORD PTR [rbx]
  401e37:	add    rsp,0x20
  401e3b:	pop    rbx
  401e3c:	jmp    0x427e08
  401e41:	nop    DWORD PTR [rax+rax*1+0x0]
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	push   rbx
  401e51:	sub    rsp,0x20
  401e55:	mov    rbx,QWORD PTR [rip+0x52a84]        # 0x4548e0
  401e5c:	lea    rdx,[rip+0x2b67e]        # 0x42d4e1
  401e63:	xor    r8d,r8d
  401e66:	mov    rcx,QWORD PTR [rbx+0x110]
  401e6d:	call   0x40ef10
  401e72:	mov    rcx,QWORD PTR [rbx+0x110]
  401e79:	lea    rdx,[rip+0x2b668]        # 0x42d4e8
  401e80:	xor    r8d,r8d
  401e83:	call   0x40ef10
  401e88:	mov    rcx,QWORD PTR [rbx+0x110]
  401e8f:	lea    rdx,[rip+0x2b657]        # 0x42d4ed
  401e96:	xor    r8d,r8d
  401e99:	call   0x40ef10
  401e9e:	mov    rcx,QWORD PTR [rbx+0x110]
  401ea5:	lea    rdx,[rip+0x2b646]        # 0x42d4f2
  401eac:	xor    r8d,r8d
  401eaf:	call   0x40ef10
  401eb4:	mov    rcx,QWORD PTR [rbx+0x110]
  401ebb:	lea    rdx,[rip+0x2b635]        # 0x42d4f7
  401ec2:	xor    r8d,r8d
  401ec5:	add    rsp,0x20
  401ec9:	pop    rbx
  401eca:	jmp    0x40ef10
  401ecf:	nop
  401ed0:	push   r13
  401ed2:	push   r12
  401ed4:	push   rbp
  401ed5:	push   rdi
  401ed6:	push   rsi
  401ed7:	push   rbx
  401ed8:	sub    rsp,0x438
  401edf:	test   rcx,rcx
  401ee2:	mov    rbx,rcx
  401ee5:	mov    ebp,edx
  401ee7:	je     0x4020a4
  401eed:	lea    rdi,[rip+0x2b17c]        # 0x42d070
  401ef4:	mov    ecx,0x2
  401ef9:	mov    rsi,rbx
  401efc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401efe:	jne    0x401fb0
  401f04:	lea    rbx,[rip+0x2b5f5]        # 0x42d500
  401f0b:	mov    r12,QWORD PTR [rip+0x5aca2]        # 0x45cbb4
  401f12:	call   r12
  401f15:	mov    rdi,rax
  401f18:	mov    rsi,QWORD PTR [rip+0x529c1]        # 0x4548e0
  401f1f:	test   bpl,bpl
  401f22:	mov    r13,QWORD PTR [rsi+0xf0]
  401f29:	mov    QWORD PTR [rsi+0xf0],rbx
  401f30:	je     0x402060
  401f36:	lea    rcx,[rip+0x2b5cb]        # 0x42d508
  401f3d:	xor    edx,edx
  401f3f:	call   0x4062b0
  401f44:	test   rax,rax
  401f47:	je     0x402070
  401f4d:	mov    rcx,rax
  401f50:	call   0x427f68
  401f55:	mov    rcx,rdi
  401f58:	call   0x40c0f0
  401f5d:	lea    rcx,[rip+0x2b5aa]        # 0x42d50e
  401f64:	xor    edx,edx
  401f66:	mov    ebx,eax
  401f68:	call   0x4062b0
  401f6d:	test   rax,rax
  401f70:	je     0x402090
  401f76:	mov    rcx,rax
  401f79:	call   0x427f68
  401f7e:	call   r12
  401f81:	cmp    rax,rdi
  401f84:	je     0x401f8e
  401f86:	mov    rcx,rdi
  401f89:	call   0x42a538
  401f8e:	mov    QWORD PTR [rsi+0xf0],r13
  401f95:	mov    eax,ebx
  401f97:	add    rsp,0x438
  401f9e:	pop    rbx
  401f9f:	pop    rsi
  401fa0:	pop    rdi
  401fa1:	pop    rbp
  401fa2:	pop    r12
  401fa4:	pop    r13
  401fa6:	ret    
  401fa7:	nop    WORD PTR [rax+rax*1+0x0]
  401fb0:	mov    rcx,rbx
  401fb3:	mov    DWORD PTR [rsp+0x2c],r8d
  401fb8:	call   0x426d80
  401fbd:	mov    r8d,DWORD PTR [rsp+0x2c]
  401fc2:	test   r8b,r8b
  401fc5:	je     0x402010
  401fc7:	mov    rsi,QWORD PTR [rip+0x52912]        # 0x4548e0
  401fce:	cmp    QWORD PTR [rsi+0xf0],0x0
  401fd6:	je     0x402010
  401fd8:	movzx  ecx,BYTE PTR [rbx]
  401fdb:	cmp    cl,0x5c
  401fde:	je     0x402010
  401fe0:	cmp    cl,0x2f
  401fe3:	je     0x402010
  401fe5:	call   QWORD PTR [rip+0x5ad11]        # 0x45ccfc
  401feb:	test   eax,eax
  401fed:	je     0x401ff9
  401fef:	cmp    BYTE PTR [rbx+0x1],0x3a
  401ff3:	je     0x402100
  401ff9:	mov    rcx,rbx
  401ffc:	call   0x426be0
  402001:	test   al,al
  402003:	je     0x4020c0
  402009:	nop    DWORD PTR [rax+0x0]
  402010:	lea    rdx,[rip+0x2b1bd]        # 0x42d1d4
  402017:	mov    rcx,rbx
  40201a:	call   0x42a510
  40201f:	test   rax,rax
  402022:	mov    rdi,rax
  402025:	mov    r12,QWORD PTR [rip+0x5ab88]        # 0x45cbb4
  40202c:	jne    0x401f18
  402032:	call   QWORD PTR [rip+0x5abb4]        # 0x45cbec
  402038:	mov    ecx,DWORD PTR [rax]
  40203a:	call   0x42a408
  40203f:	lea    rcx,[rip+0x2b0cc]        # 0x42d112
  402046:	mov    r8,rax
  402049:	mov    rdx,rbx
  40204c:	call   0x405d90
  402051:	mov    eax,0x1
  402056:	jmp    0x401f97
  40205b:	nop    DWORD PTR [rax+rax*1+0x0]
  402060:	mov    rcx,rdi
  402063:	call   0x40c0f0
  402068:	mov    ebx,eax
  40206a:	jmp    0x401f7e
  40206f:	nop
  402070:	cmp    BYTE PTR [rsi+0x119],0x0
  402077:	mov    ebx,0x3
  40207c:	jne    0x401f7e
  402082:	jmp    0x401f55
  402087:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	cmp    BYTE PTR [rsi+0x119],0x0
  402097:	mov    eax,0x3
  40209c:	cmovne ebx,eax
  40209f:	jmp    0x401f7e
  4020a4:	mov    r12,QWORD PTR [rip+0x5ab09]        # 0x45cbb4
  4020ab:	call   r12
  4020ae:	mov    rdi,rax
  4020b1:	jmp    0x401f18
  4020b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020c0:	mov    rdx,QWORD PTR [rsi+0xf0]
  4020c7:	lea    rsi,[rsp+0x30]
  4020cc:	mov    r8d,0x400
  4020d2:	mov    rcx,rsi
  4020d5:	call   0x424a90
  4020da:	mov    rcx,rsi
  4020dd:	call   0x427730
  4020e2:	mov    r8,rbx
  4020e5:	mov    rdx,rsi
  4020e8:	mov    rcx,rsi
  4020eb:	call   0x426ce0
  4020f0:	mov    rcx,rsi
  4020f3:	mov    rbx,rsi
  4020f6:	call   0x426d80
  4020fb:	jmp    0x402010
  402100:	movzx  eax,BYTE PTR [rbx+0x2]
  402104:	cmp    al,0x5c
  402106:	je     0x402010
  40210c:	cmp    al,0x2f
  40210e:	jne    0x401ff9
  402114:	jmp    0x402010
  402119:	nop    DWORD PTR [rax+0x0]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x28
  402130:	test   rdx,rdx
  402133:	mov    rbx,rcx
  402136:	mov    rbp,rdx
  402139:	mov    r14,r8
  40213c:	mov    r12d,r9d
  40213f:	je     0x4022a0
  402145:	lea    r13,[rip+0x2b3c9]        # 0x42d515
  40214c:	mov    rcx,rdx
  40214f:	mov    rsi,rbx
  402152:	call   0x42a400
  402157:	mov    rdi,r13
  40215a:	mov    ecx,0x7
  40215f:	mov    r15,rax
  402162:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402164:	jne    0x4021a2
  402166:	lea    rcx,[rip+0x2ae9b]        # 0x42d008
  40216d:	mov    r8,rax
  402170:	mov    rdx,rbp
  402173:	call   0x427870
  402178:	test   eax,eax
  40217a:	jne    0x402464
  402180:	mov    DWORD PTR [r14],0x1
  402187:	test   r12b,r12b
  40218a:	je     0x4021e3
  40218c:	mov    eax,0x1
  402191:	add    rsp,0x28
  402195:	pop    rbx
  402196:	pop    rsi
  402197:	pop    rdi
  402198:	pop    rbp
  402199:	pop    r12
  40219b:	pop    r13
  40219d:	pop    r14
  40219f:	pop    r15
  4021a1:	ret    
  4021a2:	lea    rdi,[rip+0x2b5f5]        # 0x42d79e
  4021a9:	mov    ecx,0xa
  4021ae:	mov    rsi,rbx
  4021b1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021b3:	jne    0x4022d1
  4021b9:	lea    rcx,[rip+0x2b3af]        # 0x42d56f
  4021c0:	mov    r8,r15
  4021c3:	mov    rdx,rbp
  4021c6:	call   0x427870
  4021cb:	test   eax,eax
  4021cd:	jne    0x4023d0
  4021d3:	mov    rax,QWORD PTR [rip+0x526d6]        # 0x4548b0
  4021da:	test   r12b,r12b
  4021dd:	mov    QWORD PTR [r14+0x18],rax
  4021e1:	jne    0x40218c
  4021e3:	lea    rdi,[rip+0x2b3d8]        # 0x42d5c2
  4021ea:	mov    ecx,0x7
  4021ef:	mov    rsi,rbx
  4021f2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021f4:	je     0x4024a0
  4021fa:	lea    rdi,[rip+0x2b458]        # 0x42d659
  402201:	mov    ecx,0x8
  402206:	mov    rsi,rbx
  402209:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40220b:	je     0x402320
  402211:	lea    rdi,[rip+0x2b3b1]        # 0x42d5c9
  402218:	mov    ecx,0x2
  40221d:	mov    rsi,rbx
  402220:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402222:	je     0x402400
  402228:	lea    r15,[rip+0x2b39c]        # 0x42d5cb
  40222f:	mov    ecx,0x9
  402234:	mov    rsi,rbx
  402237:	mov    rdi,r15
  40223a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40223c:	je     0x402400
  402242:	lea    rdi,[rip+0x2b38b]        # 0x42d5d4
  402249:	mov    ecx,0x9
  40224e:	mov    rsi,rbx
  402251:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402253:	je     0x402400
  402259:	lea    rdi,[rip+0x2b395]        # 0x42d5f5
  402260:	mov    ecx,0x9
  402265:	mov    rsi,rbx
  402268:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40226a:	jne    0x4025a6
  402270:	mov    rax,QWORD PTR [rip+0x52669]        # 0x4548e0
  402277:	cmp    BYTE PTR [rax+0x50],0x0
  40227b:	jne    0x402657
  402281:	mov    rdx,QWORD PTR [rax+0x48]
  402285:	lea    rcx,[rip+0x2b4b3]        # 0x42d73f
  40228c:	call   0x4263a0
  402291:	mov    eax,0x1
  402296:	jmp    0x402191
  40229b:	nop    DWORD PTR [rax+rax*1+0x0]
  4022a0:	lea    r13,[rip+0x2b26e]        # 0x42d515
  4022a7:	mov    ecx,0x7
  4022ac:	mov    rsi,rbx
  4022af:	mov    rdi,r13
  4022b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022b4:	je     0x402187
  4022ba:	lea    rdi,[rip+0x2b4dd]        # 0x42d79e
  4022c1:	mov    ecx,0xa
  4022c6:	mov    rsi,rbx
  4022c9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022cb:	je     0x402187
  4022d1:	lea    rdi,[rip+0x2b2ea]        # 0x42d5c2
  4022d8:	mov    ecx,0x7
  4022dd:	mov    rsi,rbx
  4022e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022e2:	jne    0x402350
  4022e4:	test   rbp,rbp
  4022e7:	je     0x402490
  4022ed:	mov    rcx,rbp
  4022f0:	call   0x42a558
  4022f5:	mov    WORD PTR [r14+0x6],ax
  4022fa:	jmp    0x402187
  4022ff:	test   r12b,r12b
  402302:	jne    0x40218c
  402308:	lea    rdx,[rip+0x2b34a]        # 0x42d659
  40230f:	mov    rcx,rbx
  402312:	call   0x42a420
  402317:	test   eax,eax
  402319:	jne    0x40222f
  40231f:	nop
  402320:	mov    rax,QWORD PTR [rip+0x525b9]        # 0x4548e0
  402327:	mov    edx,DWORD PTR [rax+0x80]
  40232d:	test   edx,edx
  40232f:	jne    0x4024c1
  402335:	lea    rcx,[rip+0x2b355]        # 0x42d691
  40233c:	call   0x4263a0
  402341:	mov    eax,0x1
  402346:	jmp    0x402191
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]
  402350:	lea    rdi,[rip+0x2b272]        # 0x42d5c9
  402357:	mov    ecx,0x2
  40235c:	mov    rsi,rbx
  40235f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402361:	je     0x402435
  402367:	lea    r15,[rip+0x2b25d]        # 0x42d5cb
  40236e:	mov    ecx,0x9
  402373:	mov    rsi,rbx
  402376:	mov    rdi,r15
  402379:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40237b:	je     0x402435
  402381:	lea    rdi,[rip+0x2b24c]        # 0x42d5d4
  402388:	mov    ecx,0x9
  40238d:	mov    rsi,rbx
  402390:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402392:	je     0x402435
  402398:	lea    rdi,[rip+0x2b243]        # 0x42d5e2
  40239f:	mov    ecx,0xe
  4023a4:	mov    rsi,rbx
  4023a7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4023a9:	jne    0x402621
  4023af:	test   rbp,rbp
  4023b2:	je     0x402758
  4023b8:	mov    rdx,rbx
  4023bb:	mov    rcx,rbp
  4023be:	call   0x40eb70
  4023c3:	mov    BYTE PTR [r14+0x40],al
  4023c7:	jmp    0x402187
  4023cc:	nop    DWORD PTR [rax+0x0]
  4023d0:	lea    rcx,[rip+0x2b19e]        # 0x42d575
  4023d7:	mov    r8,r15
  4023da:	mov    rdx,rbp
  4023dd:	call   0x427870
  4023e2:	test   eax,eax
  4023e4:	jne    0x402500
  4023ea:	mov    rax,QWORD PTR [rip+0x524cf]        # 0x4548c0
  4023f1:	mov    QWORD PTR [r14+0x18],rax
  4023f5:	jmp    0x402187
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	mov    rax,QWORD PTR [rip+0x524d9]        # 0x4548e0
  402407:	movzx  eax,WORD PTR [rax+0x2c]
  40240b:	cmp    ax,0x1
  40240f:	je     0x402590
  402415:	cmp    ax,0x2
  402419:	je     0x402530
  40241f:	lea    rcx,[rip+0x2b2db]        # 0x42d701
  402426:	call   0x4263a0
  40242b:	mov    eax,0x1
  402430:	jmp    0x402191
  402435:	test   rbp,rbp
  402438:	je     0x402550
  40243e:	lea    rdx,[rip+0x2b198]        # 0x42d5dd
  402445:	mov    rcx,rbp
  402448:	call   0x427790
  40244d:	test   eax,eax
  40244f:	jne    0x4024e0
  402455:	mov    eax,0x2
  40245a:	mov    WORD PTR [r14+0x4],ax
  40245f:	jmp    0x402187
  402464:	lea    rcx,[rip+0x2aba7]        # 0x42d012
  40246b:	mov    r8,r15
  40246e:	mov    rdx,rbp
  402471:	call   0x427870
  402476:	test   eax,eax
  402478:	jne    0x402565
  40247e:	mov    DWORD PTR [r14],0x2
  402485:	jmp    0x402187
  40248a:	nop    WORD PTR [rax+rax*1+0x0]
  402490:	test   r12b,r12b
  402493:	jne    0x40218c
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	mov    rax,QWORD PTR [rip+0x52439]        # 0x4548e0
  4024a7:	lea    rcx,[rip+0x2b1ce]        # 0x42d67c
  4024ae:	movzx  edx,WORD PTR [rax+0x2e]
  4024b2:	call   0x4263a0
  4024b7:	mov    eax,0x1
  4024bc:	jmp    0x402191
  4024c1:	lea    rcx,[rip+0x2b1e1]        # 0x42d6a9
  4024c8:	call   0x4263a0
  4024cd:	mov    eax,0x1
  4024d2:	jmp    0x402191
  4024d7:	nop    WORD PTR [rax+rax*1+0x0]
  4024e0:	mov    rdx,rbx
  4024e3:	mov    rcx,rbp
  4024e6:	call   0x40eb70
  4024eb:	cbw    
  4024ed:	mov    WORD PTR [r14+0x4],ax
  4024f2:	jmp    0x402187
  4024f7:	nop    WORD PTR [rax+rax*1+0x0]
  402500:	lea    rcx,[rip+0x2b078]        # 0x42d57f
  402507:	mov    r8,r15
  40250a:	mov    rdx,rbp
  40250d:	call   0x427870
  402512:	test   eax,eax
  402514:	jne    0x40271f
  40251a:	mov    rax,QWORD PTR [rip+0x523af]        # 0x4548d0
  402521:	mov    QWORD PTR [r14+0x18],rax
  402525:	jmp    0x402187
  40252a:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	lea    rcx,[rip+0x2b1a1]        # 0x42d6d8
  402537:	call   0x4263a0
  40253c:	mov    eax,0x1
  402541:	jmp    0x402191
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	xor    eax,eax
  402552:	cmp    WORD PTR [r14+0x4],0x0
  402558:	sete   al
  40255b:	mov    WORD PTR [r14+0x4],ax
  402560:	jmp    0x402187
  402565:	lea    rcx,[rip+0x2aaae]        # 0x42d01a
  40256c:	mov    r8,r15
  40256f:	mov    rdx,rbp
  402572:	call   0x427870
  402577:	test   eax,eax
  402579:	jne    0x4025fb
  40257f:	mov    DWORD PTR [r14],0x3
  402586:	jmp    0x402187
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]
  402590:	lea    rcx,[rip+0x2b127]        # 0x42d6be
  402597:	call   0x4263a0
  40259c:	mov    eax,0x1
  4025a1:	jmp    0x402191
  4025a6:	lea    rdi,[rip+0x2b051]        # 0x42d5fe
  4025ad:	mov    ecx,0xe
  4025b2:	mov    rsi,rbx
  4025b5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4025b7:	je     0x402657
  4025bd:	lea    rdi,[rip+0x2b08e]        # 0x42d652
  4025c4:	mov    ecx,0x7
  4025c9:	mov    rsi,rbx
  4025cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4025ce:	jne    0x4026ac
  4025d4:	mov    rax,QWORD PTR [rip+0x52305]        # 0x4548e0
  4025db:	cmp    BYTE PTR [rax+0x35],0x0
  4025df:	je     0x4027bd
  4025e5:	lea    rcx,[rip+0x2b16d]        # 0x42d759
  4025ec:	call   0x4263a0
  4025f1:	mov    eax,0x1
  4025f6:	jmp    0x402191
  4025fb:	lea    rcx,[rip+0x2aa20]        # 0x42d022
  402602:	mov    r8,r15
  402605:	mov    rdx,rbp
  402608:	call   0x427870
  40260d:	test   eax,eax
  40260f:	jne    0x402732
  402615:	mov    DWORD PTR [r14],0x4
  40261c:	jmp    0x402187
  402621:	lea    rdi,[rip+0x2afc8]        # 0x42d5f0
  402628:	mov    ecx,0x5
  40262d:	mov    rsi,rbx
  402630:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402632:	jne    0x40266d
  402634:	test   rbp,rbp
  402637:	je     0x4022ff
  40263d:	mov    rcx,QWORD PTR [r14+0x60]
  402641:	call   0x42a4e8
  402646:	mov    rcx,rbp
  402649:	call   0x424900
  40264e:	mov    QWORD PTR [r14+0x60],rax
  402652:	jmp    0x402187
  402657:	lea    rcx,[rip+0x2b0c2]        # 0x42d720
  40265e:	call   0x4263a0
  402663:	mov    eax,0x1
  402668:	jmp    0x402191
  40266d:	lea    rdi,[rip+0x2af81]        # 0x42d5f5
  402674:	mov    ecx,0x9
  402679:	mov    rsi,rbx
  40267c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40267e:	jne    0x402767
  402684:	test   rbp,rbp
  402687:	je     0x4022ff
  40268d:	mov    rcx,QWORD PTR [r14+0x20]
  402691:	call   0x42a4e8
  402696:	mov    rcx,rbp
  402699:	call   0x424900
  40269e:	mov    BYTE PTR [r14+0x28],0x0
  4026a3:	mov    QWORD PTR [r14+0x20],rax
  4026a7:	jmp    0x402187
  4026ac:	mov    ecx,0x7
  4026b1:	mov    rsi,rbx
  4026b4:	mov    rdi,r13
  4026b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026b9:	je     0x402811
  4026bf:	lea    rdi,[rip+0x2b0d8]        # 0x42d79e
  4026c6:	mov    ecx,0xa
  4026cb:	mov    rsi,rbx
  4026ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026d0:	je     0x40292c
  4026d6:	lea    rdi,[rip+0x2af13]        # 0x42d5f0
  4026dd:	mov    ecx,0x5
  4026e2:	mov    rsi,rbx
  4026e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026e7:	jne    0x4027d3
  4026ed:	mov    rax,QWORD PTR [rip+0x521ec]        # 0x4548e0
  4026f4:	lea    rcx,[rip+0x2b0c0]        # 0x42d7bb
  4026fb:	mov    rdx,QWORD PTR [rax+0x88]
  402702:	lea    rax,[rip+0x2a990]        # 0x42d099
  402709:	test   rdx,rdx
  40270c:	cmove  rdx,rax
  402710:	call   0x4263a0
  402715:	mov    eax,0x1
  40271a:	jmp    0x402191
  40271f:	lea    rcx,[rip+0x2ae62]        # 0x42d588
  402726:	call   0x405d90
  40272b:	xor    eax,eax
  40272d:	jmp    0x402191
  402732:	lea    rcx,[rip+0x2a8ee]        # 0x42d027
  402739:	mov    r8,r15
  40273c:	mov    rdx,rbp
  40273f:	call   0x427870
  402744:	test   eax,eax
  402746:	jne    0x402839
  40274c:	mov    DWORD PTR [r14],0x5
  402753:	jmp    0x402187
  402758:	cmp    BYTE PTR [r14+0x40],0x0
  40275d:	sete   BYTE PTR [r14+0x40]
  402762:	jmp    0x402187
  402767:	lea    rdi,[rip+0x2ae90]        # 0x42d5fe
  40276e:	mov    ecx,0xe
  402773:	mov    rsi,rbx
  402776:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402778:	je     0x4029a1
  40277e:	lea    rdi,[rip+0x2ae87]        # 0x42d60c
  402785:	mov    ecx,0xa
  40278a:	mov    rsi,rbx
  40278d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40278f:	jne    0x40285f
  402795:	test   rbp,rbp
  402798:	je     0x4022ff
  40279e:	mov    rcx,QWORD PTR [r14+0x30]
  4027a2:	call   0x42a4e8
  4027a7:	mov    rcx,rbp
  4027aa:	call   0x424900
  4027af:	mov    BYTE PTR [r14+0x38],0x0
  4027b4:	mov    QWORD PTR [r14+0x30],rax
  4027b8:	jmp    0x402187
  4027bd:	lea    rcx,[rip+0x2afac]        # 0x42d770
  4027c4:	call   0x4263a0
  4027c9:	mov    eax,0x1
  4027ce:	jmp    0x402191
  4027d3:	lea    rdi,[rip+0x2ae08]        # 0x42d5e2
  4027da:	mov    ecx,0xe
  4027df:	mov    rsi,rbx
  4027e2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4027e4:	jne    0x402955
  4027ea:	mov    rax,QWORD PTR [rip+0x520ef]        # 0x4548e0
  4027f1:	cmp    BYTE PTR [rax+0x68],0x0
  4027f5:	je     0x4029d9
  4027fb:	lea    rcx,[rip+0x2afd6]        # 0x42d7d8
  402802:	call   0x4263a0
  402807:	mov    eax,0x1
  40280c:	jmp    0x402191
  402811:	mov    rax,QWORD PTR [rip+0x520c8]        # 0x4548e0
  402818:	mov    ecx,DWORD PTR [rax+0x28]
  40281b:	call   0x401530
  402820:	lea    rcx,[rip+0x2af61]        # 0x42d788
  402827:	mov    rdx,rax
  40282a:	call   0x4263a0
  40282f:	mov    eax,0x1
  402834:	jmp    0x402191
  402839:	lea    rcx,[rip+0x2a7ed]        # 0x42d02d
  402840:	mov    r8,r15
  402843:	mov    rdx,rbp
  402846:	call   0x427870
  40284b:	test   eax,eax
  40284d:	jne    0x402a63
  402853:	mov    DWORD PTR [r14],0x6
  40285a:	jmp    0x402187
  40285f:	lea    rdx,[rip+0x2adb0]        # 0x42d616
  402866:	mov    rcx,rbx
  402869:	call   0x42a420
  40286e:	test   eax,eax
  402870:	je     0x402a48
  402876:	lea    rdx,[rip+0x2ada8]        # 0x42d625
  40287d:	mov    rcx,rbx
  402880:	call   0x42a420
  402885:	test   eax,eax
  402887:	je     0x4029bc
  40288d:	lea    rdx,[rip+0x2ad93]        # 0x42d627
  402894:	mov    rcx,rbx
  402897:	call   0x42a420
  40289c:	test   eax,eax
  40289e:	je     0x4029bc
  4028a4:	lea    rdx,[rip+0x2ad88]        # 0x42d633
  4028ab:	mov    rcx,rbx
  4028ae:	call   0x42a420
  4028b3:	test   eax,eax
  4028b5:	je     0x402c67
  4028bb:	lea    rdx,[rip+0x2ad77]        # 0x42d639
  4028c2:	mov    rcx,rbx
  4028c5:	call   0x42a420
  4028ca:	test   eax,eax
  4028cc:	je     0x402a9f
  4028d2:	lea    rdx,[rip+0x2ad62]        # 0x42d63b
  4028d9:	mov    rcx,rbx
  4028dc:	call   0x42a420
  4028e1:	test   eax,eax
  4028e3:	je     0x402a9f
  4028e9:	lea    rdx,[rip+0x2ad55]        # 0x42d645
  4028f0:	mov    rcx,rbx
  4028f3:	call   0x42a420
  4028f8:	test   eax,eax
  4028fa:	jne    0x402cb5
  402900:	test   rbp,rbp
  402903:	je     0x402c86
  402909:	lea    rdx,[rip+0x2ad3b]        # 0x42d64b
  402910:	mov    rcx,rbp
  402913:	call   0x427790
  402918:	test   eax,eax
  40291a:	jne    0x402c9a
  402920:	mov    WORD PTR [r14+0x8],0x2
  402927:	jmp    0x402187
  40292c:	mov    rcx,QWORD PTR [rip+0x51fad]        # 0x4548e0
  402933:	add    rcx,0x28
  402937:	call   0x414730
  40293c:	mov    rdx,QWORD PTR [rax]
  40293f:	lea    rcx,[rip+0x2ae62]        # 0x42d7a8
  402946:	call   0x4263a0
  40294b:	mov    eax,0x1
  402950:	jmp    0x402191
  402955:	lea    rdx,[rip+0x2ace9]        # 0x42d645
  40295c:	mov    rcx,rbx
  40295f:	call   0x42a420
  402964:	test   eax,eax
  402966:	jne    0x4029ef
  40296c:	mov    rax,QWORD PTR [rip+0x51f6d]        # 0x4548e0
  402973:	movzx  eax,WORD PTR [rax+0x30]
  402977:	cmp    ax,0x1
  40297b:	je     0x402c28
  402981:	cmp    ax,0x2
  402985:	je     0x402a89
  40298b:	lea    rcx,[rip+0x2aecd]        # 0x42d85f
  402992:	call   0x4263a0
  402997:	mov    eax,0x1
  40299c:	jmp    0x402191
  4029a1:	mov    rcx,QWORD PTR [r14+0x20]
  4029a5:	call   0x42a4e8
  4029aa:	mov    QWORD PTR [r14+0x20],0x0
  4029b2:	mov    BYTE PTR [r14+0x28],0x1
  4029b7:	jmp    0x402187
  4029bc:	test   rbp,rbp
  4029bf:	je     0x402ac2
  4029c5:	mov    rdx,rbx
  4029c8:	mov    rcx,rbp
  4029cb:	call   0x40eb70
  4029d0:	mov    BYTE PTR [r14+0xa],al
  4029d4:	jmp    0x402187
  4029d9:	lea    rcx,[rip+0x2ae20]        # 0x42d800
  4029e0:	call   0x4263a0
  4029e5:	mov    eax,0x1
  4029ea:	jmp    0x402191
  4029ef:	lea    rdx,[rip+0x2ac16]        # 0x42d60c
  4029f6:	mov    rcx,rbx
  4029f9:	call   0x42a420
  4029fe:	test   eax,eax
  402a00:	jne    0x402aea
  402a06:	mov    rax,QWORD PTR [rip+0x51ed3]        # 0x4548e0
  402a0d:	cmp    BYTE PTR [rax+0x60],0x0
  402a11:	jne    0x402c3e
  402a17:	mov    rbx,QWORD PTR [rax+0x58]
  402a1b:	lea    rdx,[rip+0x2a7f9]        # 0x42d21b
  402a22:	mov    rcx,rbx
  402a25:	call   0x42a420
  402a2a:	test   eax,eax
  402a2c:	jne    0x402ad1
  402a32:	lea    rcx,[rip+0x2ae5f]        # 0x42d898
  402a39:	call   0x4263a0
  402a3e:	mov    eax,0x1
  402a43:	jmp    0x402191
  402a48:	mov    rcx,QWORD PTR [r14+0x30]
  402a4c:	call   0x42a4e8
  402a51:	mov    QWORD PTR [r14+0x30],0x0
  402a59:	mov    BYTE PTR [r14+0x38],0x1
  402a5e:	jmp    0x402187
  402a63:	lea    rcx,[rip+0x2a5d3]        # 0x42d03d
  402a6a:	mov    r8,r15
  402a6d:	mov    rdx,rbp
  402a70:	call   0x427870
  402a75:	test   eax,eax
  402a77:	jne    0x402c54
  402a7d:	mov    DWORD PTR [r14],0x7
  402a84:	jmp    0x402187
  402a89:	lea    rcx,[rip+0x2adb8]        # 0x42d848
  402a90:	call   0x4263a0
  402a95:	mov    eax,0x1
  402a9a:	jmp    0x402191
  402a9f:	mov    rcx,QWORD PTR [r14+0x48]
  402aa3:	call   0x42a4e8
  402aa8:	test   rbp,rbp
  402aab:	je     0x402ce1
  402ab1:	mov    rcx,rbp
  402ab4:	call   0x424900
  402ab9:	mov    QWORD PTR [r14+0x48],rax
  402abd:	jmp    0x402187
  402ac2:	cmp    BYTE PTR [r14+0xa],0x0
  402ac7:	sete   BYTE PTR [r14+0xa]
  402acc:	jmp    0x402187
  402ad1:	lea    rcx,[rip+0x2ade0]        # 0x42d8b8
  402ad8:	mov    rdx,rbx
  402adb:	call   0x4263a0
  402ae0:	mov    eax,0x1
  402ae5:	jmp    0x402191
  402aea:	lea    rdx,[rip+0x2ab25]        # 0x42d616
  402af1:	mov    rcx,rbx
  402af4:	call   0x42a420
  402af9:	test   eax,eax
  402afb:	je     0x402c3e
  402b01:	lea    rdx,[rip+0x2ab31]        # 0x42d639
  402b08:	mov    rcx,rbx
  402b0b:	call   0x42a420
  402b10:	test   eax,eax
  402b12:	je     0x402b63
  402b14:	lea    rdx,[rip+0x2ab20]        # 0x42d63b
  402b1b:	mov    rcx,rbx
  402b1e:	call   0x42a420
  402b23:	test   eax,eax
  402b25:	je     0x402b63
  402b27:	lea    rdx,[rip+0x2ab05]        # 0x42d633
  402b2e:	mov    rcx,rbx
  402b31:	call   0x42a420
  402b36:	test   eax,eax
  402b38:	jne    0x402b9f
  402b3a:	mov    rax,QWORD PTR [rip+0x51d9f]        # 0x4548e0
  402b41:	mov    rdx,QWORD PTR [rax+0x98]
  402b48:	test   rdx,rdx
  402b4b:	je     0x402b89
  402b4d:	lea    rcx,[rip+0x2adb4]        # 0x42d908
  402b54:	call   0x4263a0
  402b59:	mov    eax,0x1
  402b5e:	jmp    0x402191
  402b63:	mov    rax,QWORD PTR [rip+0x51d76]        # 0x4548e0
  402b6a:	mov    rdx,QWORD PTR [rax+0x70]
  402b6e:	test   rdx,rdx
  402b71:	je     0x402be8
  402b73:	lea    rcx,[rip+0x2ad59]        # 0x42d8d3
  402b7a:	call   0x4263a0
  402b7f:	mov    eax,0x1
  402b84:	jmp    0x402191
  402b89:	lea    rcx,[rip+0x2ad88]        # 0x42d918
  402b90:	call   0x4263a0
  402b95:	mov    eax,0x1
  402b9a:	jmp    0x402191
  402b9f:	lea    rdx,[rip+0x2aa7f]        # 0x42d625
  402ba6:	mov    rcx,rbx
  402ba9:	call   0x42a420
  402bae:	test   eax,eax
  402bb0:	je     0x402bc5
  402bb2:	lea    rdx,[rip+0x2aa6e]        # 0x42d627
  402bb9:	mov    rcx,rbx
  402bbc:	call   0x42a420
  402bc1:	test   eax,eax
  402bc3:	jne    0x402bfe
  402bc5:	mov    rax,QWORD PTR [rip+0x51d14]        # 0x4548e0
  402bcc:	cmp    BYTE PTR [rax+0x32],0x0
  402bd0:	je     0x402c17
  402bd2:	lea    rcx,[rip+0x2ad50]        # 0x42d929
  402bd9:	call   0x4263a0
  402bde:	mov    eax,0x1
  402be3:	jmp    0x402191
  402be8:	lea    rcx,[rip+0x2ad00]        # 0x42d8ef
  402bef:	call   0x4263a0
  402bf4:	mov    eax,0x1
  402bf9:	jmp    0x402191
  402bfe:	lea    rcx,[rip+0x2aa5c]        # 0x42d661
  402c05:	mov    rdx,rbx
  402c08:	call   0x405d90
  402c0d:	mov    eax,0x1
  402c12:	jmp    0x402191
  402c17:	lea    rcx,[rip+0x2ad1f]        # 0x42d93d
  402c1e:	call   0x4263a0
  402c23:	jmp    0x40218c
  402c28:	lea    rcx,[rip+0x2abf9]        # 0x42d828
  402c2f:	call   0x4263a0
  402c34:	mov    eax,0x1
  402c39:	jmp    0x402191
  402c3e:	lea    rcx,[rip+0x2ac33]        # 0x42d878
  402c45:	call   0x4263a0
  402c4a:	mov    eax,0x1
  402c4f:	jmp    0x402191
  402c54:	lea    rcx,[rip+0x2a8c5]        # 0x42d520
  402c5b:	call   0x405d90
  402c60:	xor    eax,eax
  402c62:	jmp    0x402191
  402c67:	mov    rcx,QWORD PTR [r14+0x70]
  402c6b:	call   0x42a4e8
  402c70:	test   rbp,rbp
  402c73:	je     0x402cee
  402c75:	mov    rcx,rbp
  402c78:	call   0x424900
  402c7d:	mov    QWORD PTR [r14+0x70],rax
  402c81:	jmp    0x402187
  402c86:	cmp    WORD PTR [r14+0x8],0x1
  402c8c:	je     0x402ca9
  402c8e:	mov    WORD PTR [r14+0x8],0x1
  402c95:	jmp    0x402187
  402c9a:	mov    rdx,rbx
  402c9d:	mov    rcx,rbp
  402ca0:	call   0x40eb70
  402ca5:	test   al,al
  402ca7:	jne    0x402c8e
  402ca9:	mov    WORD PTR [r14+0x8],0x0
  402cb0:	jmp    0x402187
  402cb5:	lea    rdx,[rip+0x2a996]        # 0x42d652
  402cbc:	mov    rcx,rbx
  402cbf:	call   0x42a420
  402cc4:	test   eax,eax
  402cc6:	jne    0x402d0a
  402cc8:	test   rbp,rbp
  402ccb:	je     0x402cfb
  402ccd:	mov    rdx,rbx
  402cd0:	mov    rcx,rbp
  402cd3:	call   0x40eb70
  402cd8:	mov    BYTE PTR [r14+0xd],al
  402cdc:	jmp    0x402187
  402ce1:	mov    QWORD PTR [r14+0x48],0x0
  402ce9:	jmp    0x402187
  402cee:	mov    QWORD PTR [r14+0x70],0x0
  402cf6:	jmp    0x402187
  402cfb:	cmp    BYTE PTR [r14+0xd],0x0
  402d00:	sete   BYTE PTR [r14+0xd]
  402d05:	jmp    0x402187
  402d0a:	lea    rdx,[rip+0x2a948]        # 0x42d659
  402d11:	mov    rcx,rbx
  402d14:	call   0x42a420
  402d19:	test   eax,eax
  402d1b:	jne    0x402d33
  402d1d:	test   rbp,rbp
  402d20:	je     0x402d49
  402d22:	mov    rcx,rbp
  402d25:	call   0x42a558
  402d2a:	mov    DWORD PTR [r14+0x58],eax
  402d2e:	jmp    0x402187
  402d33:	lea    rcx,[rip+0x2a927]        # 0x42d661
  402d3a:	mov    rdx,rbx
  402d3d:	call   0x405d90
  402d42:	xor    eax,eax
  402d44:	jmp    0x402191
  402d49:	test   r12b,r12b
  402d4c:	jne    0x40218c
  402d52:	jmp    0x402320
  402d57:	nop    WORD PTR [rax+rax*1+0x0]
  402d60:	push   r15
  402d62:	push   r14
  402d64:	push   r13
  402d66:	push   r12
  402d68:	push   rbp
  402d69:	push   rdi
  402d6a:	push   rsi
  402d6b:	push   rbx
  402d6c:	sub    rsp,0xa8
  402d73:	lea    rdi,[rip+0x2abec]        # 0x42d966
  402d7a:	mov    rbx,rcx
  402d7d:	mov    r14,rdx
  402d80:	call   0x40cab0
  402d85:	mov    ecx,0x2
  402d8a:	mov    rsi,rax
  402d8d:	mov    rbp,rax
  402d90:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402d92:	jne    0x402e35
  402d98:	mov    r12,QWORD PTR [rip+0x51b41]        # 0x4548e0
  402d9f:	cmp    DWORD PTR [r12+0x28],0x2
  402da5:	movsx  r9d,BYTE PTR [r12+0x11a]
  402dae:	lea    r8,[r12+0x28]
  402db3:	je     0x403340
  402db9:	lea    rdx,[rip+0x2a252]        # 0x42d012
  402dc0:	lea    rcx,[rip+0x2a74e]        # 0x42d515
  402dc7:	call   0x402120
  402dcc:	mov    edi,eax
  402dce:	test   dil,dil
  402dd1:	je     0x402de8
  402dd3:	jmp    0x4030f2
  402dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	mov    rcx,rax
  402de3:	call   0x42a4e8
  402de8:	xor    r9d,r9d
  402deb:	xor    r8d,r8d
  402dee:	mov    edx,0x4
  402df3:	mov    rcx,rbx
  402df6:	call   0x40cb10
  402dfb:	test   rax,rax
  402dfe:	jne    0x402de0
  402e00:	mov    edi,0x5
  402e05:	mov    rcx,rbx
  402e08:	call   0x40cd90
  402e0d:	mov    rcx,rbp
  402e10:	call   0x42a4e8
  402e15:	mov    rcx,QWORD PTR [r12+0x10]
  402e1a:	call   0x42a520
  402e1f:	mov    eax,edi
  402e21:	add    rsp,0xa8
  402e28:	pop    rbx
  402e29:	pop    rsi
  402e2a:	pop    rdi
  402e2b:	pop    rbp
  402e2c:	pop    r12
  402e2e:	pop    r13
  402e30:	pop    r14
  402e32:	pop    r15
  402e34:	ret    
  402e35:	lea    rdi,[rip+0x2ab2c]        # 0x42d968
  402e3c:	mov    ecx,0x2
  402e41:	mov    rsi,rax
  402e44:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e46:	je     0x4032f1
  402e4c:	lea    rdi,[rip+0x2ab17]        # 0x42d96a
  402e53:	mov    ecx,0x2
  402e58:	mov    rsi,rax
  402e5b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e5d:	je     0x403020
  402e63:	lea    rdi,[rip+0x2ab02]        # 0x42d96c
  402e6a:	mov    ecx,0x8
  402e6f:	mov    rsi,rax
  402e72:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e74:	je     0x403020
  402e7a:	lea    rdi,[rip+0x2ac77]        # 0x42daf8
  402e81:	mov    ecx,0x3
  402e86:	mov    rsi,rax
  402e89:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e8b:	je     0x403510
  402e91:	lea    rdi,[rip+0x2ac95]        # 0x42db2d
  402e98:	mov    ecx,0x9
  402e9d:	mov    rsi,rax
  402ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ea2:	je     0x4033e7
  402ea8:	lea    rdx,[rip+0x2ad75]        # 0x42dc24
  402eaf:	mov    rcx,rax
  402eb2:	call   0x427790
  402eb7:	test   eax,eax
  402eb9:	je     0x4036ee
  402ebf:	lea    rdi,[rip+0x2ad63]        # 0x42dc29
  402ec6:	mov    ecx,0xa
  402ecb:	mov    rsi,rbp
  402ece:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ed0:	je     0x403733
  402ed6:	cmp    BYTE PTR [rbp+0x0],0x64
  402eda:	je     0x403810
  402ee0:	lea    rdi,[rip+0x2ad56]        # 0x42dc3d
  402ee7:	mov    ecx,0x2
  402eec:	mov    rsi,rbp
  402eef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ef1:	je     0x40357f
  402ef7:	lea    rdi,[rip+0x2ad41]        # 0x42dc3f
  402efe:	mov    ecx,0x5
  402f03:	mov    rsi,rbp
  402f06:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402f08:	je     0x40357f
  402f0e:	lea    rdi,[rip+0x2ad64]        # 0x42dc79
  402f15:	mov    ecx,0x3
  402f1a:	mov    rsi,rbp
  402f1d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402f1f:	jne    0x40391e
  402f25:	mov    r12,QWORD PTR [rip+0x519b4]        # 0x4548e0
  402f2c:	mov    r10d,DWORD PTR [r12+0xe4]
  402f34:	cmp    r10d,0x13a0f
  402f3b:	jle    0x403c64
  402f41:	test   r14,r14
  402f44:	je     0x405685
  402f4a:	xor    r8d,r8d
  402f4d:	mov    r9d,0x1
  402f53:	mov    edx,0x4
  402f58:	mov    rcx,rbx
  402f5b:	mov    DWORD PTR [rsp+0x80],0x0
  402f66:	call   0x40cb10
  402f6b:	test   rax,rax
  402f6e:	mov    r15,rax
  402f71:	je     0x40565b
  402f77:	cmp    BYTE PTR [rax],0x0
  402f7a:	je     0x402fe9
  402f7c:	mov    rcx,rax
  402f7f:	call   0x42a400
  402f84:	lea    rsi,[r15+rax*1-0x1]
  402f89:	cmp    r15,rsi
  402f8c:	jae    0x402fb9
  402f8e:	movzx  eax,BYTE PTR [rsi]
  402f91:	mov    rdi,QWORD PTR [rip+0x59d74]        # 0x45cd0c
  402f98:	test   al,al
  402f9a:	jns    0x402fb0
  402f9c:	jmp    0x402fb9
  402f9e:	xchg   ax,ax
  402fa0:	sub    rsi,0x1
  402fa4:	cmp    rsi,r15
  402fa7:	je     0x402fe9
  402fa9:	movzx  eax,BYTE PTR [rsi]
  402fac:	test   al,al
  402fae:	js     0x402fbe
  402fb0:	movsx  ecx,al
  402fb3:	call   rdi
  402fb5:	test   eax,eax
  402fb7:	jne    0x402fa0
  402fb9:	cmp    r15,rsi
  402fbc:	je     0x402fe9
  402fbe:	movzx  eax,BYTE PTR [rsi]
  402fc1:	sub    eax,0x30
  402fc4:	cmp    al,0x9
  402fc6:	ja     0x402fe9
  402fc8:	cmp    r15,rsi
  402fcb:	jb     0x402fe0
  402fcd:	jmp    0x403b10
  402fd2:	movzx  eax,BYTE PTR [rsi]
  402fd5:	sub    eax,0x30
  402fd8:	cmp    al,0x9
  402fda:	ja     0x403b10
  402fe0:	sub    rsi,0x1
  402fe4:	cmp    rsi,r15
  402fe7:	jne    0x402fd2
  402fe9:	mov    r13d,0xffffffff
  402fef:	lea    rax,[rsp+0x80]
  402ff7:	mov    rcx,QWORD PTR [r12]
  402ffb:	mov    rdx,r15
  402ffe:	mov    r8,rax
  403001:	mov    QWORD PTR [rsp+0x30],rax
  403006:	call   0x42a941
  40300b:	test   al,al
  40300d:	jne    0x405515
  403013:	mov    rcx,r15
  403016:	call   0x42a4e8
  40301b:	jmp    0x402de8
  403020:	mov    rcx,rbx
  403023:	call   0x4015e0
  403028:	mov    rcx,rbx
  40302b:	mov    QWORD PTR [rsp+0x38],rax
  403030:	call   0x4015e0
  403035:	mov    rcx,rbx
  403038:	mov    QWORD PTR [rsp+0x48],rax
  40303d:	call   0x4015e0
  403042:	mov    rcx,rbx
  403045:	mov    QWORD PTR [rsp+0x30],rax
  40304a:	call   0x4015e0
  40304f:	mov    r12,QWORD PTR [rip+0x5188a]        # 0x4548e0
  403056:	mov    QWORD PTR [rsp+0x40],rax
  40305b:	mov    rax,QWORD PTR [r12]
  40305f:	test   rax,rax
  403062:	mov    QWORD PTR [rsp+0x50],rax
  403067:	mov    rax,QWORD PTR [rsp+0x38]
  40306c:	je     0x4034d2
  403072:	test   rax,rax
  403075:	mov    QWORD PTR [rsp+0x68],rax
  40307a:	je     0x40356b
  403080:	mov    rax,QWORD PTR [rsp+0x48]
  403085:	test   rax,rax
  403088:	mov    r13,rax
  40308b:	je     0x403559
  403091:	mov    rax,QWORD PTR [rsp+0x30]
  403096:	test   rax,rax
  403099:	mov    QWORD PTR [rsp+0x58],rax
  40309e:	je     0x403695
  4030a4:	mov    rax,QWORD PTR [rsp+0x40]
  4030a9:	test   rax,rax
  4030ac:	mov    QWORD PTR [rsp+0x60],rax
  4030b1:	je     0x403681
  4030b7:	cmp    DWORD PTR [r12+0xd4],0x2
  4030c0:	je     0x403177
  4030c6:	test   r13,r13
  4030c9:	je     0x4030d7
  4030cb:	cmp    QWORD PTR [rsp+0x50],0x0
  4030d1:	jne    0x40335a
  4030d7:	xor    edi,edi
  4030d9:	jmp    0x403182
  4030de:	cmp    BYTE PTR [rsp+0x38],0x0
  4030e3:	jne    0x4030f2
  4030e5:	mov    rdx,r14
  4030e8:	mov    ecx,0xa
  4030ed:	call   0x42a500
  4030f2:	mov    edi,0x2
  4030f7:	jmp    0x40311a
  4030f9:	nop    DWORD PTR [rax+0x0]
  403100:	lea    rcx,[rip+0x2af49]        # 0x42e050
  403107:	mov    r8,r13
  40310a:	mov    rdx,rbp
  40310d:	call   0x405d90
  403112:	mov    rcx,r13
  403115:	call   0x42a4e8
  40311a:	xor    r9d,r9d
  40311d:	xor    r8d,r8d
  403120:	mov    edx,0x5
  403125:	mov    rcx,rbx
  403128:	call   0x40cb10
  40312d:	test   rax,rax
  403130:	mov    r13,rax
  403133:	jne    0x403100
  403135:	jmp    0x402e05
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	mov    rcx,rsi
  403143:	call   0x427df8
  403148:	test   eax,eax
  40314a:	je     0x403749
  403150:	mov    rcx,rsi
  403153:	call   0x427f48
  403158:	test   eax,eax
  40315a:	je     0x403280
  403160:	cmp    DWORD PTR [r12+0xd4],0x1
  403169:	je     0x403280
  40316f:	mov    rcx,rsi
  403172:	call   0x427ee8
  403177:	mov    rcx,r13
  40317a:	call   0x401b40
  40317f:	mov    rdi,rax
  403182:	mov    ecx,0x40
  403187:	xor    esi,esi
  403189:	call   0x424800
  40318e:	mov    ecx,0x40
  403193:	mov    r15,rax
  403196:	call   0x424800
  40319b:	mov    r14,rax
  40319e:	lea    rax,[rip+0x2a825]        # 0x42d9ca
  4031a5:	mov    QWORD PTR [r15],rax
  4031a8:	mov    rax,QWORD PTR [rsp+0x58]
  4031ad:	mov    QWORD PTR [r14],rax
  4031b0:	lea    rax,[rip+0x2a818]        # 0x42d9cf
  4031b7:	mov    QWORD PTR [r15+0x8],rax
  4031bb:	mov    rax,QWORD PTR [rsp+0x60]
  4031c0:	mov    QWORD PTR [r14+0x8],rax
  4031c4:	lea    rax,[rip+0x2a809]        # 0x42d9d4
  4031cb:	mov    QWORD PTR [r15+0x10],rax
  4031cf:	lea    rax,[rip+0x2a803]        # 0x42d9d9
  4031d6:	mov    QWORD PTR [r14+0x10],r13
  4031da:	mov    QWORD PTR [r15+0x18],rax
  4031de:	lea    rax,[rip+0x2a7fd]        # 0x42d9e2
  4031e5:	mov    QWORD PTR [r14+0x18],rdi
  4031e9:	mov    QWORD PTR [r15+0x20],rax
  4031ed:	mov    rax,QWORD PTR [rsp+0x68]
  4031f2:	mov    QWORD PTR [r14+0x20],rax
  4031f6:	lea    rax,[rip+0x2a7ec]        # 0x42d9e9
  4031fd:	mov    QWORD PTR [r15+0x28],rax
  403201:	mov    rax,QWORD PTR [r12+0xe8]
  403209:	mov    QWORD PTR [r14+0x28],rax
  40320d:	lea    rax,[rip+0x2a7ef]        # 0x42da03
  403214:	mov    QWORD PTR [r15+0x30],rax
  403218:	cmp    BYTE PTR [r12+0xd0],0x0
  403221:	je     0x403391
  403227:	mov    QWORD PTR [r14+0x30],rsi
  40322b:	mov    r8d,0x1
  403231:	mov    rdx,r14
  403234:	mov    QWORD PTR [r15+0x38],0x0
  40323c:	mov    rcx,r15
  40323f:	mov    QWORD PTR [r14+0x38],0x0
  403247:	call   0x427f50
  40324c:	mov    rcx,r15
  40324f:	mov    rsi,rax
  403252:	call   0x42a4e8
  403257:	mov    rcx,r14
  40325a:	call   0x42a4e8
  40325f:	test   rdi,rdi
  403262:	je     0x403140
  403268:	mov    rcx,rdi
  40326b:	call   0x42a4e8
  403270:	mov    rcx,rsi
  403273:	call   0x427df8
  403278:	test   eax,eax
  40327a:	je     0x403749
  403280:	cmp    BYTE PTR [r12+0xe0],0x0
  403289:	mov    rcx,rsi
  40328c:	je     0x4033b0
  403292:	call   0x427f10
  403297:	lea    rcx,[rip+0x29f7f]        # 0x42d21d
  40329e:	mov    rdx,rax
  4032a1:	call   0x405d90
  4032a6:	cmp    QWORD PTR [rsp+0x50],0x0
  4032ac:	je     0x4032ba
  4032ae:	lea    rcx,[rip+0x2a76f]        # 0x42da24
  4032b5:	call   0x405d90
  4032ba:	mov    rcx,rsi
  4032bd:	xor    edi,edi
  4032bf:	call   0x427ee8
  4032c4:	mov    rcx,QWORD PTR [rsp+0x38]
  4032c9:	call   0x42a4e8
  4032ce:	mov    rcx,QWORD PTR [rsp+0x48]
  4032d3:	call   0x42a4e8
  4032d8:	mov    rcx,QWORD PTR [rsp+0x30]
  4032dd:	call   0x42a4e8
  4032e2:	mov    rcx,QWORD PTR [rsp+0x40]
  4032e7:	call   0x42a4e8
  4032ec:	jmp    0x402dce
  4032f1:	xor    r8d,r8d
  4032f4:	xor    edx,edx
  4032f6:	mov    rcx,rbx
  4032f9:	mov    r9d,0x1
  4032ff:	call   0x40cb10
  403304:	mov    r12,QWORD PTR [rip+0x515d5]        # 0x4548e0
  40330b:	lea    rcx,[rip+0x2a321]        # 0x42d633
  403312:	mov    rsi,rax
  403315:	mov    rdx,rax
  403318:	movsx  r9d,BYTE PTR [r12+0x11a]
  403321:	lea    r8,[r12+0x28]
  403326:	call   0x402120
  40332b:	mov    rcx,rsi
  40332e:	mov    edi,eax
  403330:	call   0x42a4e8
  403335:	jmp    0x402dce
  40333a:	nop    WORD PTR [rax+rax*1+0x0]
  403340:	lea    rdx,[rip+0x29cc1]        # 0x42d008
  403347:	lea    rcx,[rip+0x2a1c7]        # 0x42d515
  40334e:	call   0x402120
  403353:	mov    edi,eax
  403355:	jmp    0x402dce
  40335a:	mov    rcx,QWORD PTR [rsp+0x50]
  40335f:	call   0x427de8
  403364:	mov    rdx,r13
  403367:	mov    rcx,rax
  40336a:	call   0x42a420
  40336f:	test   eax,eax
  403371:	jne    0x4030d7
  403377:	mov    rcx,QWORD PTR [rsp+0x50]
  40337c:	call   0x427e58
  403381:	mov    rcx,rax
  403384:	call   0x424900
  403389:	mov    rdi,rax
  40338c:	jmp    0x403182
  403391:	lea    rcx,[rip+0x2a67b]        # 0x42da13
  403398:	call   0x42a4d0
  40339d:	test   rax,rax
  4033a0:	lea    rax,[rip+0x2a236]        # 0x42d5dd
  4033a7:	cmove  rsi,rax
  4033ab:	jmp    0x403227
  4033b0:	call   0x427f10
  4033b5:	lea    rcx,[rip+0x2a682]        # 0x42da3e
  4033bc:	mov    rdx,rax
  4033bf:	call   0x405d90
  4033c4:	mov    rax,QWORD PTR [rsp+0x50]
  4033c9:	test   rax,rax
  4033cc:	je     0x4032ba
  4033d2:	mov    rcx,rax
  4033d5:	call   0x427ee8
  4033da:	mov    QWORD PTR [r12],0x0
  4033e2:	jmp    0x4032ba
  4033e7:	mov    r12,QWORD PTR [rip+0x514f2]        # 0x4548e0
  4033ee:	mov    rcx,QWORD PTR [r12]
  4033f2:	call   0x427f30
  4033f7:	test   rax,rax
  4033fa:	mov    r14,rax
  4033fd:	je     0x40379a
  403403:	mov    rcx,QWORD PTR [r12]
  403407:	call   0x427e90
  40340c:	mov    rcx,QWORD PTR [r12]
  403410:	test   rax,rax
  403413:	mov    r15,rax
  403416:	lea    rax,[rip+0x2a535]        # 0x42d952
  40341d:	cmove  r15,rax
  403421:	call   0x427f40
  403426:	test   rax,rax
  403429:	mov    r13,rax
  40342c:	je     0x405645
  403432:	mov    rdx,rax
  403435:	mov    eax,0x9
  40343a:	jmp    0x403458
  40343c:	nop    DWORD PTR [rax+0x0]
  403440:	lea    rdi,[rip+0x2a730]        # 0x42db77
  403447:	mov    rcx,rax
  40344a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40344c:	je     0x403713
  403452:	add    rdx,0x38
  403456:	je     0x403460
  403458:	mov    rsi,QWORD PTR [rdx]
  40345b:	test   rsi,rsi
  40345e:	jne    0x403440
  403460:	movzx  eax,BYTE PTR [r15]
  403464:	cmp    al,0x5c
  403466:	je     0x4036ba
  40346c:	cmp    al,0x2f
  40346e:	je     0x4036ba
  403474:	movzx  ecx,al
  403477:	call   QWORD PTR [rip+0x5987f]        # 0x45ccfc
  40347d:	test   eax,eax
  40347f:	je     0x40348c
  403481:	cmp    BYTE PTR [r15+0x1],0x3a
  403486:	je     0x4036a9
  40348c:	mov    rcx,QWORD PTR [r12]
  403490:	call   0x427e50
  403495:	mov    rcx,QWORD PTR [r12]
  403499:	mov    rsi,rax
  40349c:	call   0x427de8
  4034a1:	lea    rcx,[rip+0x2a730]        # 0x42dbd8
  4034a8:	mov    r8,rax
  4034ab:	mov    QWORD PTR [rsp+0x20],rsi
  4034b0:	mov    r9,r15
  4034b3:	mov    rdx,r14
  4034b6:	call   0x4263a0
  4034bb:	call   0x401640
  4034c0:	mov    rcx,r13
  4034c3:	mov    edi,0x2
  4034c8:	call   0x427f38
  4034cd:	jmp    0x40311a
  4034d2:	test   rax,rax
  4034d5:	je     0x4034fd
  4034d7:	mov    rsi,QWORD PTR [rsp+0x48]
  4034dc:	test   rsi,rsi
  4034df:	je     0x4034fd
  4034e1:	cmp    QWORD PTR [rsp+0x30],0x0
  4034e7:	je     0x4034fd
  4034e9:	cmp    QWORD PTR [rsp+0x40],0x0
  4034ef:	mov    QWORD PTR [rsp+0x68],rax
  4034f4:	mov    r13,rsi
  4034f7:	jne    0x403091
  4034fd:	lea    rcx,[rip+0x2a474]        # 0x42d978
  403504:	xor    edi,edi
  403506:	call   0x405d90
  40350b:	jmp    0x4032c4
  403510:	xor    r8d,r8d
  403513:	xor    edx,edx
  403515:	mov    r9d,0x1
  40351b:	mov    rcx,rbx
  40351e:	call   0x40cb10
  403523:	test   rax,rax
  403526:	mov    rsi,rax
  403529:	je     0x4037b0
  40352f:	mov    rcx,rax
  403532:	call   0x42a358
  403537:	cmp    eax,0xffffffff
  40353a:	je     0x405696
  403540:	mov    edi,0x1
  403545:	mov    rcx,rsi
  403548:	call   0x42a4e8
  40354d:	mov    r12,QWORD PTR [rip+0x5138c]        # 0x4548e0
  403554:	jmp    0x402dce
  403559:	mov    rcx,QWORD PTR [rsp+0x50]
  40355e:	call   0x427de8
  403563:	mov    r13,rax
  403566:	jmp    0x403091
  40356b:	mov    rcx,QWORD PTR [rsp+0x50]
  403570:	call   0x427f30
  403575:	mov    QWORD PTR [rsp+0x68],rax
  40357a:	jmp    0x403080
  40357f:	test   r14,r14
  403582:	je     0x40386c
  403588:	xor    r8d,r8d
  40358b:	xor    edx,edx
  40358d:	mov    r9d,0x1
  403593:	mov    rcx,rbx
  403596:	call   0x40cb10
  40359b:	test   rax,rax
  40359e:	mov    QWORD PTR [rsp+0x80],rax
  4035a6:	je     0x4037d2
  4035ac:	xor    r8d,r8d
  4035af:	xor    edx,edx
  4035b1:	mov    r9d,0x1
  4035b7:	mov    rcx,rbx
  4035ba:	call   0x40cb10
  4035bf:	test   rax,rax
  4035c2:	mov    rsi,rax
  4035c5:	je     0x403b54
  4035cb:	mov    rcx,rsi
  4035ce:	call   0x42a558
  4035d3:	test   eax,eax
  4035d5:	mov    edi,eax
  4035d7:	jle    0x403cb6
  4035dd:	lea    rcx,[rsp+0x80]
  4035e5:	call   0x407980
  4035ea:	mov    rcx,QWORD PTR [rsp+0x80]
  4035f2:	test   rcx,rcx
  4035f5:	je     0x403604
  4035f7:	call   0x426d80
  4035fc:	mov    rcx,QWORD PTR [rsp+0x80]
  403604:	xor    r9d,r9d
  403607:	mov    r8d,edi
  40360a:	mov    rdx,r14
  40360d:	call   0x401680
  403612:	mov    rcx,QWORD PTR [rsp+0x80]
  40361a:	cmp    al,0x1
  40361c:	sbb    edi,edi
  40361e:	not    edi
  403620:	add    edi,0x5
  403623:	test   rcx,rcx
  403626:	je     0x40362d
  403628:	call   0x42a4e8
  40362d:	test   rsi,rsi
  403630:	je     0x40363a
  403632:	mov    rcx,rsi
  403635:	call   0x42a4e8
  40363a:	mov    r12,QWORD PTR [rip+0x5129f]        # 0x4548e0
  403641:	test   edi,edi
  403643:	jne    0x404f8b
  403649:	cmp    BYTE PTR [r12+0xe0],0x0
  403652:	mov    rdx,rbp
  403655:	je     0x403670
  403657:	lea    rcx,[rip+0x2a9b2]        # 0x42e010
  40365e:	call   0x405d90
  403663:	jmp    0x402de8
  403668:	nop    DWORD PTR [rax+rax*1+0x0]
  403670:	lea    rcx,[rip+0x2a9c0]        # 0x42e037
  403677:	call   0x405d90
  40367c:	jmp    0x402de8
  403681:	mov    rcx,QWORD PTR [rsp+0x50]
  403686:	call   0x427e50
  40368b:	mov    QWORD PTR [rsp+0x60],rax
  403690:	jmp    0x4030b7
  403695:	mov    rcx,QWORD PTR [rsp+0x50]
  40369a:	call   0x427e90
  40369f:	mov    QWORD PTR [rsp+0x58],rax
  4036a4:	jmp    0x4030a4
  4036a9:	movzx  eax,BYTE PTR [r15+0x2]
  4036ae:	cmp    al,0x5c
  4036b0:	je     0x4036ba
  4036b2:	cmp    al,0x2f
  4036b4:	jne    0x40348c
  4036ba:	mov    rcx,QWORD PTR [r12]
  4036be:	call   0x427e50
  4036c3:	mov    rcx,QWORD PTR [r12]
  4036c7:	mov    rsi,rax
  4036ca:	call   0x427de8
  4036cf:	lea    rcx,[rip+0x2a4aa]        # 0x42db80
  4036d6:	mov    r8,rax
  4036d9:	mov    QWORD PTR [rsp+0x20],rsi
  4036de:	mov    r9,r15
  4036e1:	mov    rdx,r14
  4036e4:	call   0x4263a0
  4036e9:	jmp    0x4034bb
  4036ee:	xor    r9d,r9d
  4036f1:	xor    r8d,r8d
  4036f4:	mov    edx,0x4
  4036f9:	mov    rcx,rbx
  4036fc:	call   0x40cb10
  403701:	mov    rcx,rax
  403704:	mov    rsi,rax
  403707:	call   0x40ce50
  40370c:	mov    edi,eax
  40370e:	jmp    0x403545
  403713:	mov    rdx,QWORD PTR [rdx+0x18]
  403717:	test   rdx,rdx
  40371a:	je     0x403460
  403720:	movzx  eax,BYTE PTR [rdx]
  403723:	test   al,al
  403725:	je     0x403460
  40372b:	mov    r15,rdx
  40372e:	jmp    0x403464
  403733:	call   0x408610
  403738:	mov    edi,0x2
  40373d:	mov    r12,QWORD PTR [rip+0x5119c]        # 0x4548e0
  403744:	jmp    0x40311a
  403749:	lea    rdx,[rip+0x2930]        # 0x406080
  403750:	xor    r8d,r8d
  403753:	mov    rcx,rsi
  403756:	call   0x427e00
  40375b:	mov    QWORD PTR [r12],rsi
  40375f:	call   0x401d70
  403764:	xor    ecx,ecx
  403766:	call   0x401ba0
  40376b:	cmp    BYTE PTR [r12+0x11a],0x0
  403774:	je     0x403884
  40377a:	mov    rax,QWORD PTR [rsp+0x50]
  40377f:	mov    edi,0x1
  403784:	test   rax,rax
  403787:	je     0x4032c4
  40378d:	mov    rcx,rax
  403790:	call   0x427ee8
  403795:	jmp    0x4032c4
  40379a:	lea    rcx,[rip+0x2a397]        # 0x42db38
  4037a1:	mov    edi,0x2
  4037a6:	call   0x4263a0
  4037ab:	jmp    0x40311a
  4037b0:	lea    rcx,[rip+0x2a344]        # 0x42dafb
  4037b7:	call   0x42a358
  4037bc:	cmp    eax,0xffffffff
  4037bf:	je     0x4037de
  4037c1:	mov    edi,0x2
  4037c6:	mov    r12,QWORD PTR [rip+0x51113]        # 0x4548e0
  4037cd:	jmp    0x40311a
  4037d2:	xor    esi,esi
  4037d4:	mov    edi,0xffffffff
  4037d9:	jmp    0x4035dd
  4037de:	call   QWORD PTR [rip+0x59408]        # 0x45cbec
  4037e4:	mov    ecx,DWORD PTR [rax]
  4037e6:	call   0x42a408
  4037eb:	lea    r8,[rip+0x2a309]        # 0x42dafb
  4037f2:	lea    rcx,[rip+0x2a307]        # 0x42db00
  4037f9:	mov    r9,rax
  4037fc:	mov    rdx,rbp
  4037ff:	call   0x405d90
  403804:	mov    r12,QWORD PTR [rip+0x510d5]        # 0x4548e0
  40380b:	jmp    0x402de8
  403810:	xor    r8d,r8d
  403813:	mov    r9d,0x1
  403819:	xor    edx,edx
  40381b:	mov    rcx,rbx
  40381e:	call   0x40cb10
  403823:	mov    edx,0x2b
  403828:	mov    rcx,rbp
  40382b:	mov    r12,rax
  40382e:	call   0x42a428
  403833:	mov    edx,0x53
  403838:	test   rax,rax
  40383b:	mov    rcx,rbp
  40383e:	setne  sil
  403842:	call   0x42a428
  403847:	test   rax,rax
  40384a:	setne  dil
  40384e:	cmp    BYTE PTR [rbp+0x1],0x79
  403852:	ja     0x4058ef
  403858:	movzx  edx,BYTE PTR [rbp+0x1]
  40385c:	lea    rax,[rip+0x2a8d5]        # 0x42e138
  403863:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403867:	add    rax,rdx
  40386a:	jmp    rax
  40386c:	lea    rcx,[rip+0x2a3d1]        # 0x42dc44
  403873:	call   0x405d90
  403878:	mov    r12,QWORD PTR [rip+0x51061]        # 0x4548e0
  40387f:	jmp    0x402de8
  403884:	mov    rcx,QWORD PTR [r12]
  403888:	call   0x427e90
  40388d:	mov    rcx,QWORD PTR [rsp+0x50]
  403892:	mov    rsi,rax
  403895:	call   0x427e90
  40389a:	test   rsi,rsi
  40389d:	mov    rcx,rax
  4038a0:	je     0x4038bb
  4038a2:	test   rax,rax
  4038a5:	je     0x403ba0
  4038ab:	mov    rdx,rsi
  4038ae:	call   0x42a420
  4038b3:	test   eax,eax
  4038b5:	jne    0x403ba0
  4038bb:	mov    rcx,QWORD PTR [r12]
  4038bf:	call   0x427e50
  4038c4:	mov    rcx,QWORD PTR [rsp+0x50]
  4038c9:	mov    rsi,rax
  4038cc:	call   0x427e50
  4038d1:	test   rsi,rsi
  4038d4:	je     0x4038f2
  4038d6:	test   rax,rax
  4038d9:	je     0x403ba0
  4038df:	mov    rdx,rsi
  4038e2:	mov    rcx,rax
  4038e5:	call   0x42a420
  4038ea:	test   eax,eax
  4038ec:	jne    0x403ba0
  4038f2:	mov    rcx,QWORD PTR [r12]
  4038f6:	call   0x427de8
  4038fb:	mov    rcx,QWORD PTR [r12]
  4038ff:	mov    rsi,rax
  403902:	call   0x427f30
  403907:	lea    rcx,[rip+0x2a76a]        # 0x42e078
  40390e:	mov    r8,rsi
  403911:	mov    rdx,rax
  403914:	call   0x4263a0
  403919:	jmp    0x40377a
  40391e:	lea    rdi,[rip+0x2a3b0]        # 0x42dcd5
  403925:	mov    ecx,0x5
  40392a:	mov    rsi,rbp
  40392d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40392f:	mov    ecx,0x6
  403934:	lea    rdi,[rip+0x2a39f]        # 0x42dcda
  40393b:	mov    rsi,rbp
  40393e:	seta   dl
  403941:	setb   al
  403944:	cmp    dl,al
  403946:	jne    0x4039fc
  40394c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40394e:	je     0x4039eb
  403954:	call   QWORD PTR [rip+0x5925a]        # 0x45cbb4
  40395a:	mov    r12,QWORD PTR [rip+0x50f7f]        # 0x4548e0
  403961:	lea    r14,[rax+0x30]
  403965:	lea    rax,[rsp+0x80]
  40396d:	mov    r15d,0x1
  403973:	mov    BYTE PTR [rsp+0x38],0x0
  403978:	mov    QWORD PTR [rsp+0x30],rax
  40397d:	jmp    0x40399f
  40397f:	lea    rdi,[rip+0x2a35a]        # 0x42dce0
  403986:	mov    rsi,r13
  403989:	mov    ecx,0x3
  40398e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403990:	jne    0x4039c7
  403992:	mov    BYTE PTR [rsp+0x38],0x1
  403997:	mov    rcx,r13
  40399a:	call   0x42a4e8
  40399f:	mov    r8,QWORD PTR [rsp+0x30]
  4039a4:	xor    r9d,r9d
  4039a7:	xor    edx,edx
  4039a9:	mov    rcx,rbx
  4039ac:	call   0x40cb10
  4039b1:	test   rax,rax
  4039b4:	mov    r13,rax
  4039b7:	je     0x4030de
  4039bd:	cmp    BYTE PTR [rsp+0x80],0x0
  4039c5:	je     0x40397f
  4039c7:	test   r15b,r15b
  4039ca:	je     0x4039dc
  4039cc:	mov    rdx,r14
  4039cf:	mov    rcx,r13
  4039d2:	xor    r15d,r15d
  4039d5:	call   0x42a4f8
  4039da:	jmp    0x403997
  4039dc:	mov    rdx,r14
  4039df:	mov    ecx,0x20
  4039e4:	call   0x42a500
  4039e9:	jmp    0x4039cc
  4039eb:	mov    r12,QWORD PTR [rip+0x50eee]        # 0x4548e0
  4039f2:	mov    r14,QWORD PTR [r12+0x10]
  4039f7:	jmp    0x403965
  4039fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4039fe:	je     0x4039eb
  403a00:	lea    rdi,[rip+0x2a2dc]        # 0x42dce3
  403a07:	mov    ecx,0x9
  403a0c:	mov    rsi,rbp
  403a0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403a11:	je     0x403df5
  403a17:	lea    rdi,[rip+0x2a30f]        # 0x42dd2d
  403a1e:	mov    ecx,0x2
  403a23:	mov    rsi,rbp
  403a26:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403a28:	je     0x403d9a
  403a2e:	lea    rdx,[rip+0x2a2fa]        # 0x42dd2f
  403a35:	mov    rcx,rbp
  403a38:	call   0x42a420
  403a3d:	test   eax,eax
  403a3f:	je     0x403d36
  403a45:	lea    rdx,[rip+0x2a2e5]        # 0x42dd31
  403a4c:	mov    rcx,rbp
  403a4f:	call   0x42a420
  403a54:	test   eax,eax
  403a56:	je     0x403cfc
  403a5c:	lea    rdx,[rip+0x2a2d3]        # 0x42dd36
  403a63:	mov    rcx,rbp
  403a66:	call   0x42a420
  403a6b:	test   eax,eax
  403a6d:	je     0x403a86
  403a6f:	lea    rdx,[rip+0x2a2c2]        # 0x42dd38
  403a76:	mov    rcx,rbp
  403a79:	call   0x42a420
  403a7e:	test   eax,eax
  403a80:	jne    0x403e70
  403a86:	xor    r9d,r9d
  403a89:	xor    r8d,r8d
  403a8c:	mov    edx,0x4
  403a91:	mov    rcx,rbx
  403a94:	call   0x40cb10
  403a99:	test   rax,rax
  403a9c:	mov    r13,rax
  403a9f:	je     0x403ae3
  403aa1:	xor    eax,eax
  403aa3:	or     rcx,0xffffffffffffffff
  403aa7:	mov    rdi,r13
  403aaa:	repnz scas al,BYTE PTR es:[rdi]
  403aac:	mov    rdi,QWORD PTR [rip+0x59259]        # 0x45cd0c
  403ab3:	mov    rsi,rcx
  403ab6:	not    rsi
  403ab9:	sub    rsi,0x1
  403abd:	je     0x403ae3
  403abf:	sub    rsi,0x1
  403ac3:	movzx  ecx,BYTE PTR [r13+rsi*1+0x0]
  403ac9:	mov    r12d,ecx
  403acc:	call   rdi
  403ace:	test   eax,eax
  403ad0:	jne    0x403ad8
  403ad2:	cmp    r12b,0x3b
  403ad6:	jne    0x403ae3
  403ad8:	test   rsi,rsi
  403adb:	mov    BYTE PTR [r13+rsi*1+0x0],0x0
  403ae1:	jne    0x403abf
  403ae3:	mov    r12,QWORD PTR [rip+0x50df6]        # 0x4548e0
  403aea:	mov    rcx,r13
  403aed:	mov    edi,0x2
  403af2:	movzx  edx,WORD PTR [r12+0x30]
  403af8:	call   0x4082b0
  403afd:	mov    rcx,r13
  403b00:	call   0x42a4e8
  403b05:	jmp    0x40311a
  403b0a:	nop    WORD PTR [rax+rax*1+0x0]
  403b10:	movzx  edi,BYTE PTR [rsi]
  403b13:	test   dil,dil
  403b16:	js     0x402fe9
  403b1c:	movsx  ecx,dil
  403b20:	call   QWORD PTR [rip+0x591e6]        # 0x45cd0c
  403b26:	test   eax,eax
  403b28:	jne    0x403b34
  403b2a:	cmp    dil,0x29
  403b2e:	jne    0x402fe9
  403b34:	lea    rdi,[rsi+0x1]
  403b38:	mov    rcx,rdi
  403b3b:	call   0x42a558
  403b40:	test   eax,eax
  403b42:	mov    r13d,eax
  403b45:	jle    0x403ce0
  403b4b:	mov    BYTE PTR [rsi+0x1],0x0
  403b4f:	jmp    0x402fef
  403b54:	mov    rsi,QWORD PTR [rsp+0x80]
  403b5c:	cmp    BYTE PTR [rsi],0x0
  403b5f:	je     0x4037d2
  403b65:	lea    rdx,[rip+0x2a0e9]        # 0x42dc55
  403b6c:	mov    rcx,rsi
  403b6f:	call   0x42a3e0
  403b74:	mov    rcx,rsi
  403b77:	mov    rdi,rax
  403b7a:	call   0x42a400
  403b7f:	cmp    rdi,rax
  403b82:	jne    0x4037d2
  403b88:	mov    QWORD PTR [rsp+0x80],0x0
  403b94:	jmp    0x4035cb
  403b99:	nop    DWORD PTR [rax+0x0]
  403ba0:	mov    rcx,QWORD PTR [r12]
  403ba4:	call   0x427e90
  403ba9:	test   rax,rax
  403bac:	mov    rdi,rax
  403baf:	lea    rax,[rip+0x29d9c]        # 0x42d952
  403bb6:	cmove  rdi,rax
  403bba:	movzx  eax,BYTE PTR [rdi]
  403bbd:	cmp    al,0x5c
  403bbf:	je     0x403c24
  403bc1:	cmp    al,0x2f
  403bc3:	je     0x403c24
  403bc5:	movzx  ecx,al
  403bc8:	call   QWORD PTR [rip+0x5912e]        # 0x45ccfc
  403bce:	test   eax,eax
  403bd0:	je     0x403bd8
  403bd2:	cmp    BYTE PTR [rdi+0x1],0x3a
  403bd6:	je     0x403c18
  403bd8:	mov    rcx,QWORD PTR [r12]
  403bdc:	call   0x427e50
  403be1:	mov    rcx,QWORD PTR [r12]
  403be5:	mov    r13,rax
  403be8:	call   0x427de8
  403bed:	mov    rcx,QWORD PTR [r12]
  403bf1:	mov    rsi,rax
  403bf4:	call   0x427f30
  403bf9:	lea    rcx,[rip+0x29ea8]        # 0x42daa8
  403c00:	mov    rdx,rax
  403c03:	mov    QWORD PTR [rsp+0x20],r13
  403c08:	mov    r9,rdi
  403c0b:	mov    r8,rsi
  403c0e:	call   0x4263a0
  403c13:	jmp    0x40377a
  403c18:	movzx  eax,BYTE PTR [rdi+0x2]
  403c1c:	cmp    al,0x5c
  403c1e:	je     0x403c24
  403c20:	cmp    al,0x2f
  403c22:	jne    0x403bd8
  403c24:	mov    rcx,QWORD PTR [r12]
  403c28:	call   0x427e50
  403c2d:	mov    rcx,QWORD PTR [r12]
  403c31:	mov    r13,rax
  403c34:	call   0x427de8
  403c39:	mov    rcx,QWORD PTR [r12]
  403c3d:	mov    rsi,rax
  403c40:	call   0x427f30
  403c45:	lea    rcx,[rip+0x29e04]        # 0x42da50
  403c4c:	mov    rdx,rax
  403c4f:	mov    QWORD PTR [rsp+0x20],r13
  403c54:	mov    r9,rdi
  403c57:	mov    r8,rsi
  403c5a:	call   0x4263a0
  403c5f:	jmp    0x40377a
  403c64:	mov    ecx,0x51eb851f
  403c69:	mov    eax,r10d
  403c6c:	mov    r9d,r10d
  403c6f:	imul   ecx
  403c71:	sar    r9d,0x1f
  403c75:	sar    edx,0x5
  403c78:	sub    edx,r9d
  403c7b:	mov    eax,edx
  403c7d:	mov    r8d,edx
  403c80:	imul   ecx
  403c82:	mov    eax,r8d
  403c85:	sar    eax,0x1f
  403c88:	sar    edx,0x5
  403c8b:	mov    ecx,edx
  403c8d:	mov    edx,0x68db8bad
  403c92:	sub    ecx,eax
  403c94:	mov    eax,r10d
  403c97:	imul   ecx,ecx,0x64
  403c9a:	imul   edx
  403c9c:	sub    r8d,ecx
  403c9f:	lea    rcx,[rip+0x29fda]        # 0x42dc80
  403ca6:	sar    edx,0xc
  403ca9:	sub    edx,r9d
  403cac:	call   0x405d90
  403cb1:	jmp    0x402de8
  403cb6:	lea    rcx,[rip+0x29fa3]        # 0x42dc60
  403cbd:	mov    rdx,rsi
  403cc0:	mov    edi,0x5
  403cc5:	call   0x405d90
  403cca:	mov    rcx,QWORD PTR [rsp+0x80]
  403cd2:	test   rcx,rcx
  403cd5:	jne    0x403628
  403cdb:	jmp    0x403632
  403ce0:	lea    rcx,[rip+0x29f79]        # 0x42dc60
  403ce7:	mov    rdx,rdi
  403cea:	call   0x405d90
  403cef:	mov    rcx,r15
  403cf2:	call   0x42a4e8
  403cf7:	jmp    0x402de8
  403cfc:	xor    r9d,r9d
  403cff:	xor    r8d,r8d
  403d02:	xor    edx,edx
  403d04:	mov    rcx,rbx
  403d07:	call   0x40cb10
  403d0c:	test   rax,rax
  403d0f:	jne    0x403d1d
  403d11:	lea    rcx,[rip+0x29381]        # 0x42d099
  403d18:	call   0x424900
  403d1d:	mov    r12,QWORD PTR [rip+0x50bbc]        # 0x4548e0
  403d24:	mov    edi,0x1
  403d29:	mov    QWORD PTR [r12+0xc8],rax
  403d31:	jmp    0x40311a
  403d36:	xor    r9d,r9d
  403d39:	xor    r8d,r8d
  403d3c:	mov    edx,0x3
  403d41:	mov    rcx,rbx
  403d44:	call   0x40cb10
  403d49:	test   rax,rax
  403d4c:	mov    QWORD PTR [rsp+0x80],rax
  403d54:	je     0x403de0
  403d5a:	lea    rcx,[rsp+0x80]
  403d62:	call   0x407980
  403d67:	mov    rcx,QWORD PTR [rsp+0x80]
  403d6f:	call   0x424900
  403d74:	mov    r12,QWORD PTR [rip+0x50b65]        # 0x4548e0
  403d7b:	mov    QWORD PTR [r12+0xc0],rax
  403d83:	mov    rcx,QWORD PTR [rsp+0x80]
  403d8b:	mov    edi,0x1
  403d90:	call   0x42a4e8
  403d95:	jmp    0x40311a
  403d9a:	xor    r9d,r9d
  403d9d:	xor    r8d,r8d
  403da0:	xor    edx,edx
  403da2:	mov    rcx,rbx
  403da5:	call   0x40cb10
  403daa:	mov    r12,QWORD PTR [rip+0x50b2f]        # 0x4548e0
  403db1:	lea    rcx,[rip+0x2983d]        # 0x42d5f5
  403db8:	mov    rsi,rax
  403dbb:	mov    rdx,rax
  403dbe:	movsx  r9d,BYTE PTR [r12+0x11a]
  403dc7:	lea    r8,[r12+0x28]
  403dcc:	call   0x402120
  403dd1:	mov    rcx,rsi
  403dd4:	mov    edi,eax
  403dd6:	call   0x42a4e8
  403ddb:	jmp    0x402dce
  403de0:	mov    r12,QWORD PTR [rip+0x50af9]        # 0x4548e0
  403de7:	mov    QWORD PTR [r12+0xc0],0x0
  403df3:	jmp    0x403d83
  403df5:	xor    r9d,r9d
  403df8:	xor    r8d,r8d
  403dfb:	xor    edx,edx
  403dfd:	mov    rcx,rbx
  403e00:	call   0x40cb10
  403e05:	test   rax,rax
  403e08:	mov    rsi,rax
  403e0b:	mov    r12,QWORD PTR [rip+0x50ace]        # 0x4548e0
  403e12:	je     0x4055b6
  403e18:	mov    rcx,QWORD PTR [r12]
  403e1c:	mov    rdx,rax
  403e1f:	call   0x427e10
  403e24:	add    eax,0x1
  403e27:	je     0x405501
  403e2d:	mov    rcx,QWORD PTR [r12]
  403e31:	call   0x427f60
  403e36:	mov    ecx,eax
  403e38:	mov    DWORD PTR [r12+0x8],eax
  403e3d:	mov    DWORD PTR [r12+0x78],eax
  403e42:	call   0x427d80
  403e47:	mov    rcx,QWORD PTR [r12+0x110]
  403e4f:	lea    rdx,[rip+0x296a1]        # 0x42d4f7
  403e56:	mov    r8,rax
  403e59:	call   0x40ef10
  403e5e:	mov    rcx,rsi
  403e61:	mov    edi,0x2
  403e66:	call   0x42a4e8
  403e6b:	jmp    0x40311a
  403e70:	lea    rdx,[rip+0x29ec6]        # 0x42dd3d
  403e77:	mov    rcx,rbp
  403e7a:	call   0x42a420
  403e7f:	test   eax,eax
  403e81:	je     0x403e96
  403e83:	lea    rdx,[rip+0x29198]        # 0x42d022
  403e8a:	mov    rcx,rbp
  403e8d:	call   0x42a420
  403e92:	test   eax,eax
  403e94:	jne    0x403ed1
  403e96:	mov    r12,QWORD PTR [rip+0x50a43]        # 0x4548e0
  403e9d:	cmp    DWORD PTR [r12+0x28],0x4
  403ea3:	movsx  r9d,BYTE PTR [r12+0x11a]
  403eac:	lea    r8,[r12+0x28]
  403eb1:	je     0x402db9
  403eb7:	lea    rdx,[rip+0x29164]        # 0x42d022
  403ebe:	lea    rcx,[rip+0x29650]        # 0x42d515
  403ec5:	call   0x402120
  403eca:	mov    edi,eax
  403ecc:	jmp    0x402dce
  403ed1:	lea    rdx,[rip+0x29e67]        # 0x42dd3f
  403ed8:	mov    rcx,rbp
  403edb:	call   0x42a420
  403ee0:	test   eax,eax
  403ee2:	je     0x403f21
  403ee4:	lea    rdx,[rip+0x29e56]        # 0x42dd41
  403eeb:	mov    rcx,rbp
  403eee:	call   0x42a420
  403ef3:	test   eax,eax
  403ef5:	je     0x403f21
  403ef7:	lea    rdx,[rip+0x29e4b]        # 0x42dd49
  403efe:	mov    rcx,rbp
  403f01:	call   0x42a420
  403f06:	test   eax,eax
  403f08:	je     0x403f21
  403f0a:	lea    rdx,[rip+0x29e3b]        # 0x42dd4c
  403f11:	mov    rcx,rbp
  403f14:	call   0x42a420
  403f19:	test   eax,eax
  403f1b:	jne    0x403fc9
  403f21:	xor    r8d,r8d
  403f24:	xor    edx,edx
  403f26:	mov    r9d,0x1
  403f2c:	mov    rcx,rbx
  403f2f:	call   0x40cb10
  403f34:	test   rax,rax
  403f37:	mov    QWORD PTR [rsp+0x80],rax
  403f3f:	je     0x403fae
  403f41:	lea    rdx,[rip+0x29e01]        # 0x42dd49
  403f48:	mov    rcx,rbp
  403f4b:	mov    esi,0x1
  403f50:	call   0x42a420
  403f55:	test   eax,eax
  403f57:	je     0x403f70
  403f59:	lea    rdx,[rip+0x29dec]        # 0x42dd4c
  403f60:	mov    rcx,rbp
  403f63:	xor    esi,esi
  403f65:	call   0x42a420
  403f6a:	test   eax,eax
  403f6c:	sete   sil
  403f70:	lea    rcx,[rsp+0x80]
  403f78:	call   0x407980
  403f7d:	mov    rcx,QWORD PTR [rsp+0x80]
  403f85:	xor    edx,edx
  403f87:	mov    r8d,esi
  403f8a:	call   0x401ed0
  403f8f:	mov    rcx,QWORD PTR [rsp+0x80]
  403f97:	test   eax,eax
  403f99:	sete   dil
  403f9d:	call   0x42a4e8
  403fa2:	mov    r12,QWORD PTR [rip+0x50937]        # 0x4548e0
  403fa9:	jmp    0x402dce
  403fae:	lea    rcx,[rip+0x29dab]        # 0x42dd60
  403fb5:	mov    rdx,rbp
  403fb8:	call   0x405d90
  403fbd:	mov    r12,QWORD PTR [rip+0x5091c]        # 0x4548e0
  403fc4:	jmp    0x402de8
  403fc9:	lea    rdx,[rip+0x29db0]        # 0x42dd80
  403fd0:	mov    rcx,rbp
  403fd3:	call   0x42a420
  403fd8:	test   eax,eax
  403fda:	je     0x404015
  403fdc:	lea    rdx,[rip+0x29d9f]        # 0x42dd82
  403fe3:	mov    rcx,rbp
  403fe6:	call   0x42a420
  403feb:	test   eax,eax
  403fed:	je     0x404015
  403fef:	lea    rdx,[rip+0x29d91]        # 0x42dd87
  403ff6:	mov    rcx,rbp
  403ff9:	call   0x42a420
  403ffe:	test   eax,eax
  404000:	je     0x404015
  404002:	lea    rdx,[rip+0x29d81]        # 0x42dd8a
  404009:	mov    rcx,rbp
  40400c:	call   0x42a420
  404011:	test   eax,eax
  404013:	jne    0x40405f
  404015:	xor    r8d,r8d
  404018:	mov    r9d,0x1
  40401e:	xor    edx,edx
  404020:	mov    rcx,rbx
  404023:	call   0x40cb10
  404028:	mov    edx,0x2b
  40402d:	mov    rcx,rbp
  404030:	mov    rsi,rax
  404033:	call   0x42a428
  404038:	xor    edx,edx
  40403a:	test   rax,rax
  40403d:	mov    rcx,rsi
  404040:	setne  dl
  404043:	call   0x418220
  404048:	test   rsi,rsi
  40404b:	mov    edi,eax
  40404d:	jne    0x403545
  404053:	mov    r12,QWORD PTR [rip+0x50886]        # 0x4548e0
  40405a:	jmp    0x402dce
  40405f:	lea    rdx,[rip+0x29d2a]        # 0x42dd90
  404066:	mov    r8d,0x3
  40406c:	mov    rcx,rbp
  40406f:	call   0x42a3f8
  404074:	test   eax,eax
  404076:	je     0x4040f5
  404078:	lea    rdx,[rip+0x29d2a]        # 0x42dda9
  40407f:	mov    rcx,rbp
  404082:	call   0x42a420
  404087:	test   eax,eax
  404089:	je     0x4040a2
  40408b:	lea    rdx,[rip+0x29d19]        # 0x42ddab
  404092:	mov    rcx,rbp
  404095:	call   0x42a420
  40409a:	test   eax,eax
  40409c:	jne    0x4041a7
  4040a2:	mov    r9d,0x1
  4040a8:	xor    r8d,r8d
  4040ab:	mov    edx,0x3
  4040b0:	mov    rcx,rbx
  4040b3:	call   0x40cb10
  4040b8:	lea    rcx,[rsp+0x80]
  4040c0:	mov    QWORD PTR [rsp+0x80],rax
  4040c8:	call   0x407980
  4040cd:	mov    rcx,QWORD PTR [rsp+0x80]
  4040d5:	call   0x405e50
  4040da:	mov    rcx,QWORD PTR [rsp+0x80]
  4040e2:	mov    edi,eax
  4040e4:	call   0x42a4e8
  4040e9:	mov    r12,QWORD PTR [rip+0x507f0]        # 0x4548e0
  4040f0:	jmp    0x402dce
  4040f5:	xor    r8d,r8d
  4040f8:	xor    edx,edx
  4040fa:	mov    r9d,0x1
  404100:	mov    rcx,rbx
  404103:	lea    rsi,[rbp+0x3]
  404107:	call   0x40cb10
  40410c:	xor    r8d,r8d
  40410f:	xor    edx,edx
  404111:	mov    r9d,0x1
  404117:	mov    rcx,rbx
  40411a:	mov    QWORD PTR [rsp+0x78],rax
  40411f:	call   0x40cb10
  404124:	lea    rdx,[rip+0x29c69]        # 0x42dd94
  40412b:	mov    rcx,rsi
  40412e:	mov    rdi,rax
  404131:	mov    QWORD PTR [rsp+0x80],rax
  404139:	call   0x42a420
  40413e:	test   eax,eax
  404140:	jne    0x404231
  404146:	test   rdi,rdi
  404149:	je     0x404218
  40414f:	lea    rcx,[rsp+0x80]
  404157:	mov    edi,0x2
  40415c:	call   0x407980
  404161:	mov    rdx,QWORD PTR [rsp+0x80]
  404169:	mov    rcx,QWORD PTR [rsp+0x78]
  40416e:	call   0x40f270
  404173:	mov    rcx,QWORD PTR [rsp+0x78]
  404178:	mov    BYTE PTR [rsp+0x30],al
  40417c:	call   0x42a4e8
  404181:	mov    rcx,QWORD PTR [rsp+0x80]
  404189:	call   0x42a4e8
  40418e:	movzx  eax,BYTE PTR [rsp+0x30]
  404193:	test   al,al
  404195:	mov    r12,QWORD PTR [rip+0x50744]        # 0x4548e0
  40419c:	je     0x402de8
  4041a2:	jmp    0x403641
  4041a7:	lea    rdx,[rip+0x29c01]        # 0x42ddaf
  4041ae:	mov    rcx,rbp
  4041b1:	call   0x42a420
  4041b6:	test   eax,eax
  4041b8:	je     0x4041d1
  4041ba:	lea    rdx,[rip+0x29bf0]        # 0x42ddb1
  4041c1:	mov    rcx,rbp
  4041c4:	call   0x42a420
  4041c9:	test   eax,eax
  4041cb:	jne    0x40427a
  4041d1:	test   r14,r14
  4041d4:	je     0x4041e1
  4041d6:	cmp    QWORD PTR [r14+0x8],0x0
  4041db:	jne    0x4047f8
  4041e1:	mov    r12,QWORD PTR [rip+0x506f8]        # 0x4548e0
  4041e8:	cmp    BYTE PTR [r12+0x11a],0x0
  4041f1:	jne    0x4041ff
  4041f3:	lea    rcx,[rip+0x29bbd]        # 0x42ddb7
  4041fa:	call   0x42a468
  4041ff:	call   QWORD PTR [rip+0x589af]        # 0x45cbb4
  404205:	lea    rcx,[rax+0x30]
  404209:	mov    edi,0x2
  40420e:	call   0x42a520
  404213:	jmp    0x40311a
  404218:	lea    rcx,[rip+0x29b41]        # 0x42dd60
  40421f:	mov    rdx,rbp
  404222:	mov    dil,0x2
  404225:	call   0x405d90
  40422a:	xor    eax,eax
  40422c:	jmp    0x404173
  404231:	lea    rdx,[rip+0x29b63]        # 0x42dd9b
  404238:	mov    rcx,rsi
  40423b:	call   0x42a420
  404240:	test   eax,eax
  404242:	jne    0x404d24
  404248:	cmp    QWORD PTR [rsp+0x78],0x0
  40424e:	je     0x4047dd
  404254:	lea    rcx,[rsp+0x78]
  404259:	mov    edi,0x2
  40425e:	call   0x407980
  404263:	mov    rdx,QWORD PTR [rsp+0x80]
  40426b:	mov    rcx,QWORD PTR [rsp+0x78]
  404270:	call   0x40f340
  404275:	jmp    0x404173
  40427a:	lea    rdx,[rip+0x29758]        # 0x42d9d9
  404281:	mov    rcx,rbp
  404284:	call   0x42a420
  404289:	test   eax,eax
  40428b:	je     0x4044da
  404291:	lea    rdx,[rip+0x29baa]        # 0x42de42
  404298:	mov    rcx,rbp
  40429b:	call   0x42a420
  4042a0:	test   eax,eax
  4042a2:	je     0x4043c8
  4042a8:	lea    rdx,[rip+0x29bc4]        # 0x42de73
  4042af:	mov    rcx,rbp
  4042b2:	call   0x42a420
  4042b7:	test   eax,eax
  4042b9:	je     0x40435c
  4042bf:	lea    rdx,[rip+0x29bc5]        # 0x42de8b
  4042c6:	mov    rcx,rbp
  4042c9:	call   0x42a420
  4042ce:	test   eax,eax
  4042d0:	je     0x40434b
  4042d2:	lea    rdx,[rip+0x29bb4]        # 0x42de8d
  4042d9:	mov    rcx,rbp
  4042dc:	call   0x42a420
  4042e1:	test   eax,eax
  4042e3:	je     0x40434b
  4042e5:	lea    rdx,[rip+0x29ba6]        # 0x42de92
  4042ec:	mov    rcx,rbp
  4042ef:	call   0x42a420
  4042f4:	test   eax,eax
  4042f6:	je     0x40430f
  4042f8:	lea    rdx,[rip+0x29b95]        # 0x42de94
  4042ff:	mov    rcx,rbp
  404302:	call   0x42a420
  404307:	test   eax,eax
  404309:	jne    0x40480c
  40430f:	mov    rcx,r14
  404312:	mov    edi,0x2
  404317:	call   0x427d68
  40431c:	mov    rcx,rbx
  40431f:	call   0x40ca60
  404324:	mov    r12,QWORD PTR [rip+0x505b5]        # 0x4548e0
  40432b:	cmp    BYTE PTR [r12+0x11a],0x0
  404334:	jne    0x40311a
  40433a:	lea    rcx,[rip+0x29b59]        # 0x42de9a
  404341:	call   0x42a468
  404346:	jmp    0x40311a
  40434b:	mov    edi,0x3
  404350:	mov    r12,QWORD PTR [rip+0x50589]        # 0x4548e0
  404357:	jmp    0x40311a
  40435c:	xor    r9d,r9d
  40435f:	xor    r8d,r8d
  404362:	xor    edx,edx
  404364:	mov    rcx,rbx
  404367:	call   0x40cb10
  40436c:	xor    r9d,r9d
  40436f:	mov    r14,rax
  404372:	xor    r8d,r8d
  404375:	xor    edx,edx
  404377:	mov    rcx,rbx
  40437a:	call   0x40cb10
  40437f:	test   r14,r14
  404382:	mov    QWORD PTR [rsp+0x30],rax
  404387:	je     0x404549
  40438d:	mov    r12,QWORD PTR [rip+0x5054c]        # 0x4548e0
  404394:	mov    rdx,QWORD PTR [rsp+0x30]
  404399:	mov    rcx,r14
  40439c:	movsx  r9d,BYTE PTR [r12+0x11a]
  4043a5:	lea    r8,[r12+0x28]
  4043aa:	call   0x402120
  4043af:	mov    edi,eax
  4043b1:	mov    rcx,r14
  4043b4:	call   0x42a4e8
  4043b9:	mov    rcx,QWORD PTR [rsp+0x30]
  4043be:	call   0x42a4e8
  4043c3:	jmp    0x402dce
  4043c8:	xor    r9d,r9d
  4043cb:	xor    r8d,r8d
  4043ce:	xor    edx,edx
  4043d0:	mov    rcx,rbx
  4043d3:	call   0x40cb10
  4043d8:	xor    r9d,r9d
  4043db:	mov    rsi,rax
  4043de:	xor    r8d,r8d
  4043e1:	xor    edx,edx
  4043e3:	mov    rcx,rbx
  4043e6:	call   0x40cb10
  4043eb:	test   rsi,rsi
  4043ee:	mov    r13,rax
  4043f1:	je     0x403fae
  4043f7:	test   rax,rax
  4043fa:	je     0x4044bc
  404400:	mov    r12,QWORD PTR [rip+0x504d9]        # 0x4548e0
  404407:	cmp    QWORD PTR [r12+0xf0],0x0
  404410:	je     0x40449b
  404416:	mov    rdi,QWORD PTR [rip+0x58797]        # 0x45cbb4
  40441d:	call   rdi
  40441f:	lea    rdx,[rax+0x30]
  404423:	mov    rcx,rsi
  404426:	call   0x42a4f8
  40442b:	call   rdi
  40442d:	lea    rcx,[rax+0x30]
  404431:	call   0x42a520
  404436:	mov    rax,r13
  404439:	mov    r13,rsi
  40443c:	mov    rsi,rax
  40443f:	call   rdi
  404441:	mov    rcx,rax
  404444:	call   0x408650
  404449:	mov    r14,rax
  40444c:	mov    rcx,QWORD PTR [r12+0x110]
  404454:	mov    r8,r14
  404457:	mov    rdx,rsi
  40445a:	mov    edi,0x1
  40445f:	call   0x40ef10
  404464:	test   al,al
  404466:	jne    0x404479
  404468:	lea    rcx,[rip+0x299e1]        # 0x42de50
  40446f:	mov    rdx,rbp
  404472:	xor    edi,edi
  404474:	call   0x405d90
  404479:	mov    rcx,r14
  40447c:	call   0x42a4e8
  404481:	test   r13,r13
  404484:	je     0x40448e
  404486:	mov    rcx,r13
  404489:	call   0x42a4e8
  40448e:	mov    rcx,rsi
  404491:	call   0x42a4e8
  404496:	jmp    0x402dce
  40449b:	mov    rax,r13
  40449e:	mov    r13,rsi
  4044a1:	mov    rsi,rax
  4044a4:	mov    r8d,0x1
  4044aa:	mov    edx,0x1000
  4044af:	mov    rcx,r13
  4044b2:	call   0x427a10
  4044b7:	mov    r14,rax
  4044ba:	jmp    0x40444c
  4044bc:	mov    r12,QWORD PTR [rip+0x5041d]        # 0x4548e0
  4044c3:	cmp    QWORD PTR [r12+0xf0],0x0
  4044cc:	je     0x4044a4
  4044ce:	mov    rdi,QWORD PTR [rip+0x586df]        # 0x45cbb4
  4044d5:	jmp    0x40443f
  4044da:	lea    rcx,[rip+0x298ed]        # 0x42ddce
  4044e1:	xor    r8d,r8d
  4044e4:	mov    edx,0x64
  4044e9:	call   0x427a10
  4044ee:	lea    rcx,[rip+0x298ee]        # 0x42dde3
  4044f5:	xor    r8d,r8d
  4044f8:	mov    r15,rax
  4044fb:	mov    edx,0x64
  404500:	call   0x427a10
  404505:	mov    rcx,r15
  404508:	mov    rdx,rax
  40450b:	mov    QWORD PTR [rsp+0x30],rax
  404510:	call   0x42a420
  404515:	test   eax,eax
  404517:	je     0x40460e
  40451d:	lea    rcx,[rip+0x298d0]        # 0x42ddf4
  404524:	xor    edi,edi
  404526:	call   0x405d90
  40452b:	mov    r12,QWORD PTR [rip+0x503ae]        # 0x4548e0
  404532:	mov    rcx,r15
  404535:	call   0x42a4e8
  40453a:	mov    rcx,QWORD PTR [rsp+0x30]
  40453f:	call   0x42a4e8
  404544:	jmp    0x402dce
  404549:	mov    r12,QWORD PTR [rip+0x50390]        # 0x4548e0
  404550:	lea    r15,[rip+0x29de9]        # 0x42e340
  404557:	lea    r13,[rip+0x293fd]        # 0x42d95b
  40455e:	lea    rdi,[rip+0x293f2]        # 0x42d957
  404565:	lea    rax,[r12+0x28]
  40456a:	mov    QWORD PTR [rsp+0x38],rax
  40456f:	mov    rsi,QWORD PTR [r15]
  404572:	test   rsi,rsi
  404575:	je     0x4047a2
  40457b:	lea    rdx,[rip+0x29040]        # 0x42d5c2
  404582:	mov    rcx,rsi
  404585:	call   0x42a420
  40458a:	test   eax,eax
  40458c:	je     0x404788
  404592:	lea    rdx,[rip+0x290c0]        # 0x42d659
  404599:	mov    rcx,rsi
  40459c:	call   0x42a420
  4045a1:	test   eax,eax
  4045a3:	je     0x40473f
  4045a9:	lea    rdx,[rip+0x2901b]        # 0x42d5cb
  4045b0:	mov    rcx,rsi
  4045b3:	call   0x42a420
  4045b8:	test   eax,eax
  4045ba:	jne    0x40470c
  4045c0:	movzx  eax,WORD PTR [r12+0x2c]
  4045c6:	cmp    ax,0x2
  4045ca:	je     0x4046d4
  4045d0:	test   al,al
  4045d2:	mov    rcx,rdi
  4045d5:	cmovne rcx,r13
  4045d9:	call   0x4249c0
  4045de:	mov    r9,rax
  4045e1:	lea    rcx,[rip+0x29899]        # 0x42de81
  4045e8:	mov    r8,r9
  4045eb:	mov    rdx,rsi
  4045ee:	mov    QWORD PTR [rsp+0x40],r9
  4045f3:	add    r15,0x8
  4045f7:	call   0x4263a0
  4045fc:	mov    r9,QWORD PTR [rsp+0x40]
  404601:	mov    rcx,r9
  404604:	call   0x42a4e8
  404609:	jmp    0x40456f
  40460e:	xor    r8d,r8d
  404611:	mov    r9d,0x1
  404617:	mov    edx,0x1
  40461c:	mov    rcx,rbx
  40461f:	call   0x40cb10
  404624:	test   rax,rax
  404627:	mov    r13,rax
  40462a:	je     0x4046f4
  404630:	mov    r12,QWORD PTR [rip+0x502a9]        # 0x4548e0
  404637:	mov    rdi,rax
  40463a:	mov    rdx,rdi
  40463d:	mov    rcx,r15
  404640:	call   0x427f20
  404645:	test   rax,rax
  404648:	mov    rsi,rax
  40464b:	je     0x4046e4
  404651:	lea    r14,[rsp+0x80]
  404659:	mov    rcx,r14
  40465c:	call   0x427da8
  404661:	mov    rcx,rdi
  404664:	call   0x41d080
  404669:	lea    rdx,[rip+0x297ba]        # 0x42de2a
  404670:	mov    r8,rax
  404673:	mov    rcx,r14
  404676:	call   0x427d70
  40467b:	mov    r8,QWORD PTR [r12]
  40467f:	mov    rdx,rsi
  404682:	mov    rcx,r14
  404685:	call   0x41d330
  40468a:	mov    rcx,QWORD PTR [rsp+0x80]
  404692:	xor    edx,edx
  404694:	call   0x4062b0
  404699:	mov    rcx,r14
  40469c:	mov    rdi,rax
  40469f:	call   0x427d60
  4046a4:	test   rdi,rdi
  4046a7:	je     0x4046e0
  4046a9:	mov    rcx,rdi
  4046ac:	mov    edi,0x1
  4046b1:	call   0x427f68
  4046b6:	mov    rcx,rsi
  4046b9:	call   0x427ed0
  4046be:	test   r13,r13
  4046c1:	je     0x404532
  4046c7:	mov    rcx,r13
  4046ca:	call   0x42a4e8
  4046cf:	jmp    0x404532
  4046d4:	lea    rcx,[rip+0x28f02]        # 0x42d5dd
  4046db:	jmp    0x4045d9
  4046e0:	xor    edi,edi
  4046e2:	jmp    0x4046b6
  4046e4:	lea    rcx,[rip+0x29722]        # 0x42de0d
  4046eb:	xor    edi,edi
  4046ed:	call   0x405d90
  4046f2:	jmp    0x4046be
  4046f4:	mov    r12,QWORD PTR [rip+0x501e5]        # 0x4548e0
  4046fb:	mov    rcx,QWORD PTR [r12]
  4046ff:	call   0x427de8
  404704:	mov    rdi,rax
  404707:	jmp    0x40463a
  40470c:	lea    rdx,[rip+0x28ee2]        # 0x42d5f5
  404713:	mov    rcx,rsi
  404716:	call   0x42a420
  40471b:	test   eax,eax
  40471d:	jne    0x40475b
  40471f:	mov    rax,QWORD PTR [r12+0x48]
  404724:	lea    rcx,[rip+0x2896e]        # 0x42d099
  40472b:	test   rax,rax
  40472e:	cmovne rcx,rax
  404732:	call   0x42a830
  404737:	mov    r9,rax
  40473a:	jmp    0x4045e1
  40473f:	mov    edx,DWORD PTR [r12+0x80]
  404747:	lea    rcx,[rip+0x2972a]        # 0x42de78
  40474e:	call   0x424630
  404753:	mov    r9,rax
  404756:	jmp    0x4045e1
  40475b:	lea    rdx,[rip+0x28e9c]        # 0x42d5fe
  404762:	mov    rcx,rsi
  404765:	call   0x42a420
  40476a:	test   eax,eax
  40476c:	jne    0x4047ac
  40476e:	cmp    BYTE PTR [r12+0x50],0x0
  404774:	mov    rcx,rdi
  404777:	cmovne rcx,r13
  40477b:	call   0x4249c0
  404780:	mov    r9,rax
  404783:	jmp    0x4045e1
  404788:	movzx  edx,WORD PTR [r12+0x2e]
  40478e:	lea    rcx,[rip+0x296e3]        # 0x42de78
  404795:	call   0x424630
  40479a:	mov    r9,rax
  40479d:	jmp    0x4045e1
  4047a2:	mov    edi,0x1
  4047a7:	jmp    0x4043b1
  4047ac:	lea    rdx,[rip+0x28e9f]        # 0x42d652
  4047b3:	mov    rcx,rsi
  4047b6:	call   0x42a420
  4047bb:	test   eax,eax
  4047bd:	jne    0x404d6b
  4047c3:	cmp    BYTE PTR [r12+0x35],0x0
  4047c9:	mov    rcx,rdi
  4047cc:	cmovne rcx,r13
  4047d0:	call   0x4249c0
  4047d5:	mov    r9,rax
  4047d8:	jmp    0x4045e1
  4047dd:	lea    rcx,[rip+0x2957c]        # 0x42dd60
  4047e4:	mov    rdx,rbp
  4047e7:	mov    edi,0x2
  4047ec:	call   0x405d90
  4047f1:	xor    eax,eax
  4047f3:	jmp    0x404173
  4047f8:	mov    rcx,QWORD PTR [r14]
  4047fb:	call   0x42a468
  404800:	mov    r12,QWORD PTR [rip+0x500d9]        # 0x4548e0
  404807:	jmp    0x4041ff
  40480c:	lea    rdx,[rip+0x296a5]        # 0x42deb8
  404813:	mov    rcx,rbp
  404816:	call   0x42a420
  40481b:	test   eax,eax
  40481d:	je     0x404bed
  404823:	lea    rdx,[rip+0x296ad]        # 0x42ded7
  40482a:	mov    rcx,rbp
  40482d:	call   0x42a420
  404832:	test   eax,eax
  404834:	je     0x404984
  40483a:	lea    rdx,[rip+0x2969a]        # 0x42dedb
  404841:	mov    rcx,rbp
  404844:	call   0x42a420
  404849:	test   eax,eax
  40484b:	je     0x404912
  404851:	lea    rdx,[rip+0x296cb]        # 0x42df23
  404858:	mov    rcx,rbp
  40485b:	call   0x42a420
  404860:	test   eax,eax
  404862:	je     0x40487b
  404864:	lea    rdx,[rip+0x296bb]        # 0x42df26
  40486b:	mov    rcx,rbp
  40486e:	call   0x42a420
  404873:	test   eax,eax
  404875:	jne    0x404dc9
  40487b:	lea    rdx,[rip+0x296a4]        # 0x42df26
  404882:	mov    rcx,rbp
  404885:	call   0x42a420
  40488a:	mov    DWORD PTR [rsp+0x80],0x0
  404895:	mov    edi,eax
  404897:	call   0x427dc0
  40489c:	xor    r8d,r8d
  40489f:	mov    rcx,rbx
  4048a2:	mov    r9d,0x1
  4048a8:	mov    edx,0x4
  4048ad:	mov    rsi,rax
  4048b0:	call   0x40cb10
  4048b5:	mov    r12,QWORD PTR [rip+0x50024]        # 0x4548e0
  4048bc:	mov    r14,rax
  4048bf:	mov    ecx,DWORD PTR [r12+0xe4]
  4048c7:	cmp    ecx,0x13a0f
  4048cd:	jle    0x404c94
  4048d3:	test   rax,rax
  4048d6:	je     0x404c7e
  4048dc:	mov    rcx,QWORD PTR [r12]
  4048e0:	lea    r8,[rsp+0x80]
  4048e8:	mov    rdx,rax
  4048eb:	call   0x42a941
  4048f0:	test   al,al
  4048f2:	jne    0x404a35
  4048f8:	mov    edi,0x5
  4048fd:	mov    rcx,r14
  404900:	call   0x42a4e8
  404905:	mov    rcx,rsi
  404908:	call   0x427db8
  40490d:	jmp    0x403641
  404912:	xor    r9d,r9d
  404915:	xor    r8d,r8d
  404918:	xor    edx,edx
  40491a:	mov    rcx,rbx
  40491d:	call   0x40cb10
  404922:	xor    r9d,r9d
  404925:	mov    rsi,rax
  404928:	xor    r8d,r8d
  40492b:	xor    edx,edx
  40492d:	mov    rcx,rbx
  404930:	call   0x40cb10
  404935:	test   rsi,rsi
  404938:	mov    r12,rax
  40493b:	je     0x404cfc
  404941:	mov    edx,0x3d
  404946:	mov    rcx,rsi
  404949:	call   0x42a428
  40494e:	test   rax,rax
  404951:	je     0x404cd3
  404957:	lea    rcx,[rip+0x2958a]        # 0x42dee8
  40495e:	mov    rdx,rbp
  404961:	xor    edi,edi
  404963:	call   0x405d90
  404968:	mov    rcx,rsi
  40496b:	call   0x42a4e8
  404970:	mov    rcx,r12
  404973:	call   0x42a4e8
  404978:	mov    r12,QWORD PTR [rip+0x4ff61]        # 0x4548e0
  40497f:	jmp    0x402dce
  404984:	xor    r9d,r9d
  404987:	xor    r8d,r8d
  40498a:	xor    edx,edx
  40498c:	mov    rcx,rbx
  40498f:	call   0x40cb10
  404994:	test   rax,rax
  404997:	mov    r13,rax
  40499a:	je     0x404bd2
  4049a0:	xor    r9d,r9d
  4049a3:	xor    r8d,r8d
  4049a6:	xor    edx,edx
  4049a8:	mov    rcx,rbx
  4049ab:	call   0x40cb10
  4049b0:	lea    rcx,[rip+0x286e2]        # 0x42d099
  4049b7:	test   rax,rax
  4049ba:	mov    rdi,rax
  4049bd:	cmovne rcx,rax
  4049c1:	or     r15,0xffffffffffffffff
  4049c5:	xor    r14d,r14d
  4049c8:	call   0x424900
  4049cd:	mov    rcx,rdi
  4049d0:	mov    rsi,rax
  4049d3:	call   0x42a4e8
  4049d8:	xor    r9d,r9d
  4049db:	xor    r8d,r8d
  4049de:	xor    edx,edx
  4049e0:	mov    rcx,rbx
  4049e3:	call   0x40cb10
  4049e8:	test   rax,rax
  4049eb:	mov    r12,rax
  4049ee:	je     0x404b89
  4049f4:	mov    eax,r14d
  4049f7:	mov    rdi,rsi
  4049fa:	mov    rcx,r15
  4049fd:	repnz scas al,BYTE PTR es:[rdi]
  4049ff:	mov    rdi,r12
  404a02:	mov    rdx,rcx
  404a05:	mov    rcx,r15
  404a08:	repnz scas al,BYTE PTR es:[rdi]
  404a0a:	not    rdx
  404a0d:	not    rcx
  404a10:	lea    rdx,[rdx+rcx*1-0x1]
  404a15:	mov    rcx,rsi
  404a18:	call   0x4248b0
  404a1d:	mov    rdx,r12
  404a20:	mov    rcx,rax
  404a23:	mov    rsi,rax
  404a26:	call   0x42a430
  404a2b:	mov    rcx,r12
  404a2e:	call   0x42a4e8
  404a33:	jmp    0x4049d8
  404a35:	mov    edx,DWORD PTR [rsp+0x80]
  404a3c:	mov    rcx,QWORD PTR [r12]
  404a40:	mov    r8,rsi
  404a43:	call   0x42aa1a
  404a48:	test   al,al
  404a4a:	je     0x4048f8
  404a50:	mov    r13,QWORD PTR [r12+0x10]
  404a55:	call   QWORD PTR [rip+0x58159]        # 0x45cbb4
  404a5b:	add    rax,0x30
  404a5f:	cmp    r13,rax
  404a62:	je     0x404b16
  404a68:	mov    r13,QWORD PTR [r12+0x10]
  404a6d:	mov    BYTE PTR [rsp+0x38],0x0
  404a72:	test   edi,edi
  404a74:	jne    0x404aee
  404a76:	mov    r15,QWORD PTR [rsi]
  404a79:	mov    DWORD PTR [rsp+0x30],0x0
  404a81:	mov    eax,0x1
  404a86:	cmp    BYTE PTR [r15],0x0
  404a8a:	je     0x404af9
  404a8c:	test   al,al
  404a8e:	je     0x404aad
  404a90:	lea    rdx,[rip+0x2922f]        # 0x42dcc6
  404a97:	mov    r8d,0x3
  404a9d:	mov    rcx,r15
  404aa0:	call   0x42a3f8
  404aa5:	test   eax,eax
  404aa7:	jne    0x404b3a
  404aad:	mov    edx,0xa
  404ab2:	mov    rcx,r15
  404ab5:	add    DWORD PTR [rsp+0x30],0x1
  404aba:	call   0x42a428
  404abf:	test   rax,rax
  404ac2:	mov    rdi,rax
  404ac5:	je     0x404aca
  404ac7:	mov    BYTE PTR [rax],0x0
  404aca:	mov    r8d,DWORD PTR [rsp+0x30]
  404acf:	lea    rdx,[rip+0x294c7]        # 0x42df9d
  404ad6:	mov    r9,r15
  404ad9:	mov    rcx,r13
  404adc:	call   0x426370
  404ae1:	xor    eax,eax
  404ae3:	test   rdi,rdi
  404ae6:	je     0x404af9
  404ae8:	lea    r15,[rdi+0x1]
  404aec:	jmp    0x404a86
  404aee:	mov    rcx,QWORD PTR [rsi]
  404af1:	mov    rdx,r13
  404af4:	call   0x42a4f8
  404af9:	cmp    BYTE PTR [rsp+0x38],0x0
  404afe:	mov    edi,0x2
  404b03:	je     0x4048fd
  404b09:	mov    rcx,r13
  404b0c:	call   0x410290
  404b11:	jmp    0x4048fd
  404b16:	mov    rcx,QWORD PTR [rsi]
  404b19:	xor    r13d,r13d
  404b1c:	cmp    BYTE PTR [rcx],0x0
  404b1f:	je     0x404b6e
  404b21:	mov    edx,0xa
  404b26:	add    r13d,0x1
  404b2a:	call   0x42a428
  404b2f:	test   rax,rax
  404b32:	je     0x404b6e
  404b34:	lea    rcx,[rax+0x1]
  404b38:	jmp    0x404b1c
  404b3a:	mov    edx,0xa
  404b3f:	mov    rcx,r15
  404b42:	call   0x42a428
  404b47:	test   rax,rax
  404b4a:	mov    rdi,rax
  404b4d:	je     0x404b52
  404b4f:	mov    BYTE PTR [rax],0x0
  404b52:	lea    rdx,[rip+0x29438]        # 0x42df91
  404b59:	mov    r8,r15
  404b5c:	mov    rcx,r13
  404b5f:	call   0x426370
  404b64:	mov    eax,0x1
  404b69:	jmp    0x404ae3
  404b6e:	movzx  edx,WORD PTR [r12+0x30]
  404b74:	mov    ecx,r13d
  404b77:	call   0x410150
  404b7c:	mov    BYTE PTR [rsp+0x38],0x1
  404b81:	mov    r13,rax
  404b84:	jmp    0x404a72
  404b89:	mov    r12,QWORD PTR [rip+0x4fd50]        # 0x4548e0
  404b90:	mov    r8,rsi
  404b93:	mov    rdx,r13
  404b96:	mov    edi,0x1
  404b9b:	mov    rcx,QWORD PTR [r12+0x110]
  404ba3:	call   0x40ef10
  404ba8:	test   al,al
  404baa:	jne    0x404bbd
  404bac:	lea    rcx,[rip+0x2929d]        # 0x42de50
  404bb3:	mov    rdx,rbp
  404bb6:	xor    edi,edi
  404bb8:	call   0x405d90
  404bbd:	mov    rcx,rsi
  404bc0:	call   0x42a4e8
  404bc5:	mov    rcx,r13
  404bc8:	call   0x42a4e8
  404bcd:	jmp    0x402dce
  404bd2:	mov    r12,QWORD PTR [rip+0x4fd07]        # 0x4548e0
  404bd9:	mov    edi,0x1
  404bde:	mov    rcx,QWORD PTR [r12+0x110]
  404be6:	call   0x40ed40
  404beb:	jmp    0x404bc5
  404bed:	xor    r8d,r8d
  404bf0:	xor    edx,edx
  404bf2:	mov    r9d,0x1
  404bf8:	mov    rcx,rbx
  404bfb:	call   0x40cb10
  404c00:	lea    rcx,[rsp+0x80]
  404c08:	mov    QWORD PTR [rsp+0x80],rax
  404c10:	call   0x407980
  404c15:	mov    r12,QWORD PTR [rip+0x4fcc4]        # 0x4548e0
  404c1c:	mov    rcx,QWORD PTR [rsp+0x80]
  404c24:	movzx  edx,WORD PTR [r12+0x30]
  404c2a:	call   0x4087d0
  404c2f:	test   al,al
  404c31:	mov    edi,eax
  404c33:	je     0x404c5d
  404c35:	cmp    BYTE PTR [r12+0x11a],0x0
  404c3e:	jne    0x404c5d
  404c40:	mov    rdx,QWORD PTR [rsp+0x80]
  404c48:	test   rdx,rdx
  404c4b:	je     0x4051a0
  404c51:	lea    rcx,[rip+0x29262]        # 0x42deba
  404c58:	call   0x4263a0
  404c5d:	cmp    QWORD PTR [rsp+0x80],0x0
  404c66:	je     0x4051a0
  404c6c:	mov    rcx,QWORD PTR [rsp+0x80]
  404c74:	call   0x42a4e8
  404c79:	jmp    0x402dce
  404c7e:	lea    rcx,[rip+0x292f1]        # 0x42df76
  404c85:	mov    edi,0x5
  404c8a:	call   0x405d90
  404c8f:	jmp    0x404905
  404c94:	mov    eax,ecx
  404c96:	mov    r9d,0x64
  404c9c:	mov    edi,0x5
  404ca1:	cdq    
  404ca2:	idiv   r9d
  404ca5:	cdq    
  404ca6:	idiv   r9d
  404ca9:	mov    eax,ecx
  404cab:	mov    r9w,0x2710
  404cb0:	lea    rcx,[rip+0x29279]        # 0x42df30
  404cb7:	mov    r8d,edx
  404cba:	cdq    
  404cbb:	idiv   r9d
  404cbe:	mov    edx,eax
  404cc0:	call   0x405d90
  404cc5:	test   r14,r14
  404cc8:	jne    0x4048fd
  404cce:	jmp    0x404905
  404cd3:	test   r12,r12
  404cd6:	je     0x404d12
  404cd8:	lea    rcx,[rip+0x2923e]        # 0x42df1d
  404cdf:	mov    r8,r12
  404ce2:	mov    rdx,rsi
  404ce5:	mov    edi,0x1
  404cea:	call   0x424630
  404cef:	mov    rcx,rax
  404cf2:	call   0x425070
  404cf7:	jmp    0x404968
  404cfc:	lea    rcx,[rip+0x2905d]        # 0x42dd60
  404d03:	mov    rdx,rbp
  404d06:	xor    edi,edi
  404d08:	call   0x405d90
  404d0d:	jmp    0x404968
  404d12:	mov    rcx,rsi
  404d15:	mov    edi,0x1
  404d1a:	call   0x4250f0
  404d1f:	jmp    0x404968
  404d24:	lea    rdx,[rip+0x29057]        # 0x42dd82
  404d2b:	mov    rcx,rsi
  404d2e:	call   0x42a420
  404d33:	test   eax,eax
  404d35:	je     0x40523e
  404d3b:	lea    rdx,[rip+0x29060]        # 0x42dda2
  404d42:	mov    rcx,rsi
  404d45:	call   0x42a420
  404d4a:	test   eax,eax
  404d4c:	jne    0x404dbd
  404d4e:	mov    rcx,QWORD PTR [rsp+0x78]
  404d53:	test   rcx,rcx
  404d56:	je     0x4047dd
  404d5c:	call   0x40f530
  404d61:	mov    edi,0x2
  404d66:	jmp    0x404173
  404d6b:	lea    rdx,[rip+0x287a3]        # 0x42d515
  404d72:	mov    rcx,rsi
  404d75:	call   0x42a420
  404d7a:	test   eax,eax
  404d7c:	je     0x40529b
  404d82:	lea    rdx,[rip+0x28a15]        # 0x42d79e
  404d89:	mov    rcx,rsi
  404d8c:	call   0x42a420
  404d91:	test   eax,eax
  404d93:	je     0x40527a
  404d99:	lea    rdx,[rip+0x28850]        # 0x42d5f0
  404da0:	mov    rcx,rsi
  404da3:	call   0x42a420
  404da8:	test   eax,eax
  404daa:	jne    0x40524d
  404db0:	mov    rax,QWORD PTR [r12+0x88]
  404db8:	jmp    0x404724
  404dbd:	xor    edi,edi
  404dbf:	mov    eax,0x1
  404dc4:	jmp    0x404173
  404dc9:	lea    rdx,[rip+0x28855]        # 0x42d625
  404dd0:	mov    rcx,rbp
  404dd3:	call   0x42a420
  404dd8:	test   eax,eax
  404dda:	je     0x405157
  404de0:	lea    rdx,[rip+0x28852]        # 0x42d639
  404de7:	mov    rcx,rbp
  404dea:	call   0x42a420
  404def:	test   eax,eax
  404df1:	je     0x405119
  404df7:	lea    rdx,[rip+0x291a8]        # 0x42dfa6
  404dfe:	mov    rcx,rbp
  404e01:	call   0x42a420
  404e06:	test   eax,eax
  404e08:	je     0x40506f
  404e0e:	lea    rdx,[rip+0x291bd]        # 0x42dfd2
  404e15:	mov    rcx,rbp
  404e18:	call   0x42a420
  404e1d:	test   eax,eax
  404e1f:	je     0x405016
  404e25:	lea    rdx,[rip+0x282e4]        # 0x42d110
  404e2c:	mov    rcx,rbp
  404e2f:	call   0x42a420
  404e34:	test   eax,eax
  404e36:	je     0x404e4f
  404e38:	lea    rdx,[rip+0x29199]        # 0x42dfd8
  404e3f:	mov    rcx,rbp
  404e42:	call   0x42a420
  404e47:	test   eax,eax
  404e49:	jne    0x4051af
  404e4f:	test   r14,r14
  404e52:	mov    QWORD PTR [rsp+0x80],0x0
  404e5e:	je     0x404ffb
  404e64:	xor    r8d,r8d
  404e67:	mov    r9d,0x1
  404e6d:	mov    edx,0x3
  404e72:	mov    rcx,rbx
  404e75:	call   0x40cb10
  404e7a:	lea    rcx,[rsp+0x80]
  404e82:	mov    QWORD PTR [rsp+0x80],rax
  404e8a:	call   0x407980
  404e8f:	mov    rcx,QWORD PTR [rsp+0x80]
  404e97:	test   rcx,rcx
  404e9a:	je     0x404fe0
  404ea0:	cmp    BYTE PTR [rcx],0x7c
  404ea3:	je     0x404f67
  404ea9:	call   0x426d80
  404eae:	mov    rcx,QWORD PTR [rsp+0x80]
  404eb6:	lea    rdx,[rip+0x28253]        # 0x42d110
  404ebd:	xor    edi,edi
  404ebf:	call   0x42a510
  404ec4:	mov    rsi,rax
  404ec7:	test   rsi,rsi
  404eca:	je     0x404f1e
  404ecc:	cmp    QWORD PTR [r14+0x8],0x0
  404ed1:	je     0x404ee5
  404ed3:	mov    r8,QWORD PTR [r14]
  404ed6:	lea    rdx,[rip+0x29101]        # 0x42dfde
  404edd:	mov    rcx,rsi
  404ee0:	call   0x426370
  404ee5:	test   dil,dil
  404ee8:	mov    rcx,rsi
  404eeb:	je     0x404fd6
  404ef1:	call   QWORD PTR [rip+0x57d2d]        # 0x45cc24
  404ef7:	add    eax,0x1
  404efa:	je     0x404f99
  404f00:	mov    rcx,QWORD PTR [rsp+0x80]
  404f08:	mov    edi,0x2
  404f0d:	call   0x42a4e8
  404f12:	mov    r12,QWORD PTR [rip+0x4f9c7]        # 0x4548e0
  404f19:	jmp    0x40311a
  404f1e:	call   QWORD PTR [rip+0x57cc8]        # 0x45cbec
  404f24:	mov    ecx,DWORD PTR [rax]
  404f26:	mov    edi,0x2
  404f2b:	xor    esi,esi
  404f2d:	call   0x42a408
  404f32:	mov    rdx,QWORD PTR [rsp+0x80]
  404f3a:	lea    rcx,[rip+0x281d1]        # 0x42d112
  404f41:	mov    r8,rax
  404f44:	call   0x405d90
  404f49:	mov    rcx,QWORD PTR [rsp+0x80]
  404f51:	call   0x42a4e8
  404f56:	test   sil,sil
  404f59:	jne    0x404f84
  404f5b:	mov    r12,QWORD PTR [rip+0x4f97e]        # 0x4548e0
  404f62:	jmp    0x402de8
  404f67:	lea    rdx,[rip+0x281a2]        # 0x42d110
  404f6e:	add    rcx,0x1
  404f72:	mov    edi,0x1
  404f77:	call   0x424fe0
  404f7c:	mov    rsi,rax
  404f7f:	jmp    0x404ec7
  404f84:	mov    r12,QWORD PTR [rip+0x4f955]        # 0x4548e0
  404f8b:	cmp    edi,0x5
  404f8e:	jne    0x40311a
  404f94:	jmp    0x402de8
  404f99:	call   QWORD PTR [rip+0x57c4d]        # 0x45cbec
  404f9f:	mov    ecx,DWORD PTR [rax]
  404fa1:	call   0x42a408
  404fa6:	mov    rdx,QWORD PTR [rsp+0x80]
  404fae:	lea    rcx,[rip+0x2815d]        # 0x42d112
  404fb5:	mov    r8,rax
  404fb8:	call   0x405d90
  404fbd:	mov    rcx,QWORD PTR [rsp+0x80]
  404fc5:	call   0x42a4e8
  404fca:	mov    r12,QWORD PTR [rip+0x4f90f]        # 0x4548e0
  404fd1:	jmp    0x402de8
  404fd6:	call   0x42a538
  404fdb:	jmp    0x404ef7
  404fe0:	lea    rcx,[rip+0x28d79]        # 0x42dd60
  404fe7:	mov    rdx,rbp
  404fea:	mov    edi,0x2
  404fef:	xor    esi,esi
  404ff1:	call   0x405d90
  404ff6:	jmp    0x404f49
  404ffb:	lea    rcx,[rip+0x28c42]        # 0x42dc44
  405002:	mov    edi,0x5
  405007:	mov    esi,0x1
  40500c:	call   0x405d90
  405011:	jmp    0x404f49
  405016:	xor    r9d,r9d
  405019:	xor    r8d,r8d
  40501c:	xor    edx,edx
  40501e:	mov    rcx,rbx
  405021:	call   0x40cb10
  405026:	test   rax,rax
  405029:	mov    rsi,rax
  40502c:	je     0x4050d0
  405032:	mov    r12,QWORD PTR [rip+0x4f8a7]        # 0x4548e0
  405039:	xor    r8d,r8d
  40503c:	mov    rdx,rax
  40503f:	mov    edi,0x1
  405044:	mov    rcx,QWORD PTR [r12+0x110]
  40504c:	call   0x40ef10
  405051:	test   al,al
  405053:	jne    0x40448e
  405059:	lea    rcx,[rip+0x28df0]        # 0x42de50
  405060:	mov    rdx,rbp
  405063:	xor    edi,edi
  405065:	call   0x405d90
  40506a:	jmp    0x40448e
  40506f:	xor    r9d,r9d
  405072:	xor    r8d,r8d
  405075:	xor    edx,edx
  405077:	mov    rcx,rbx
  40507a:	call   0x40cb10
  40507f:	test   rax,rax
  405082:	mov    rsi,rax
  405085:	je     0x4050fe
  405087:	lea    rdx,[rip+0x28f1f]        # 0x42dfad
  40508e:	mov    rcx,rax
  405091:	call   0x40eb70
  405096:	mov    r12,QWORD PTR [rip+0x4f843]        # 0x4548e0
  40509d:	mov    BYTE PTR [r12+0x100],al
  4050a5:	cmp    BYTE PTR [r12+0x11a],0x0
  4050ae:	jne    0x403e5e
  4050b4:	cmp    BYTE PTR [r12+0x100],0x0
  4050bd:	je     0x4050ed
  4050bf:	lea    rcx,[rip+0x28eef]        # 0x42dfb5
  4050c6:	call   0x42a468
  4050cb:	jmp    0x403e5e
  4050d0:	lea    rcx,[rip+0x28c89]        # 0x42dd60
  4050d7:	mov    rdx,rbp
  4050da:	xor    edi,edi
  4050dc:	call   0x405d90
  4050e1:	mov    r12,QWORD PTR [rip+0x4f7f8]        # 0x4548e0
  4050e8:	jmp    0x40448e
  4050ed:	lea    rcx,[rip+0x28ecf]        # 0x42dfc3
  4050f4:	call   0x42a468
  4050f9:	jmp    0x403e5e
  4050fe:	mov    r12,QWORD PTR [rip+0x4f7db]        # 0x4548e0
  405105:	cmp    BYTE PTR [r12+0x100],0x0
  40510e:	sete   BYTE PTR [r12+0x100]
  405117:	jmp    0x4050a5
  405119:	xor    r9d,r9d
  40511c:	xor    r8d,r8d
  40511f:	xor    edx,edx
  405121:	mov    rcx,rbx
  405124:	call   0x40cb10
  405129:	mov    r12,QWORD PTR [rip+0x4f7b0]        # 0x4548e0
  405130:	lea    rcx,[rip+0x28504]        # 0x42d63b
  405137:	mov    rdx,rax
  40513a:	mov    rsi,rax
  40513d:	movsx  r9d,BYTE PTR [r12+0x11a]
  405146:	lea    r8,[r12+0x28]
  40514b:	call   0x402120
  405150:	mov    edi,eax
  405152:	jmp    0x40448e
  405157:	xor    r8d,r8d
  40515a:	xor    edx,edx
  40515c:	mov    rcx,rbx
  40515f:	mov    r9d,0x1
  405165:	call   0x40cb10
  40516a:	mov    r12,QWORD PTR [rip+0x4f76f]        # 0x4548e0
  405171:	lea    rcx,[rip+0x284af]        # 0x42d627
  405178:	mov    rsi,rax
  40517b:	mov    rdx,rax
  40517e:	movsx  r9d,BYTE PTR [r12+0x11a]
  405187:	lea    r8,[r12+0x28]
  40518c:	call   0x402120
  405191:	mov    rcx,rsi
  405194:	mov    edi,eax
  405196:	call   0x42a4e8
  40519b:	jmp    0x402dce
  4051a0:	mov    ecx,0xa
  4051a5:	call   0x42a470
  4051aa:	jmp    0x404c6c
  4051af:	lea    rdx,[rip+0x28e2c]        # 0x42dfe2
  4051b6:	mov    rcx,rbp
  4051b9:	call   0x42a420
  4051be:	test   eax,eax
  4051c0:	je     0x40540f
  4051c6:	lea    rdx,[rip+0x283fc]        # 0x42d5c9
  4051cd:	mov    rcx,rbp
  4051d0:	call   0x42a420
  4051d5:	test   eax,eax
  4051d7:	je     0x4053c6
  4051dd:	lea    rdx,[rip+0x28e04]        # 0x42dfe8
  4051e4:	mov    rcx,rbp
  4051e7:	call   0x42a420
  4051ec:	test   eax,eax
  4051ee:	je     0x405398
  4051f4:	lea    rdx,[rip+0x28def]        # 0x42dfea
  4051fb:	mov    rcx,rbp
  4051fe:	call   0x42a420
  405203:	test   eax,eax
  405205:	je     0x4052f4
  40520b:	lea    rdx,[rip+0x28df9]        # 0x42e00b
  405212:	mov    rcx,rbp
  405215:	call   0x42a420
  40521a:	test   eax,eax
  40521c:	mov    r12,QWORD PTR [rip+0x4f6bd]        # 0x4548e0
  405223:	jne    0x403649
  405229:	movzx  ecx,WORD PTR [r12+0x30]
  40522f:	mov    edi,0x2
  405234:	call   0x407c60
  405239:	jmp    0x40311a
  40523e:	call   0x40f600
  405243:	mov    edi,0x2
  405248:	jmp    0x404173
  40524d:	lea    rdx,[rip+0x2838e]        # 0x42d5e2
  405254:	mov    rcx,rsi
  405257:	call   0x42a420
  40525c:	test   eax,eax
  40525e:	jne    0x4052bc
  405260:	cmp    BYTE PTR [r12+0x68],0x0
  405266:	mov    rcx,rdi
  405269:	cmovne rcx,r13
  40526d:	call   0x4249c0
  405272:	mov    r9,rax
  405275:	jmp    0x4045e1
  40527a:	mov    rcx,QWORD PTR [rsp+0x38]
  40527f:	call   0x414730
  405284:	mov    rdx,QWORD PTR [rax]
  405287:	lea    rcx,[rip+0x27f8f]        # 0x42d21d
  40528e:	call   0x424630
  405293:	mov    r9,rax
  405296:	jmp    0x4045e1
  40529b:	mov    ecx,DWORD PTR [r12+0x28]
  4052a0:	call   0x401530
  4052a5:	lea    rcx,[rip+0x27f71]        # 0x42d21d
  4052ac:	mov    rdx,rax
  4052af:	call   0x424630
  4052b4:	mov    r9,rax
  4052b7:	jmp    0x4045e1
  4052bc:	lea    rdx,[rip+0x28382]        # 0x42d645
  4052c3:	mov    rcx,rsi
  4052c6:	call   0x42a420
  4052cb:	test   eax,eax
  4052cd:	je     0x4054a7
  4052d3:	lea    rdx,[rip+0x28332]        # 0x42d60c
  4052da:	mov    rcx,rsi
  4052dd:	call   0x42a420
  4052e2:	test   eax,eax
  4052e4:	jne    0x40547a
  4052ea:	mov    rax,QWORD PTR [r12+0x58]
  4052ef:	jmp    0x404724
  4052f4:	xor    r9d,r9d
  4052f7:	xor    r8d,r8d
  4052fa:	mov    edx,0x4
  4052ff:	mov    rcx,rbx
  405302:	call   0x40cb10
  405307:	test   rax,rax
  40530a:	mov    r12,rax
  40530d:	je     0x405344
  40530f:	mov    rcx,rax
  405312:	call   0x424f60
  405317:	mov    esi,eax
  405319:	add    esi,0x1
  40531c:	mov    edi,0x1
  405321:	and    esi,0xffffff7f
  405327:	jne    0x405337
  405329:	lea    rcx,[rip+0x28ccf]        # 0x42dfff
  405330:	xor    edi,edi
  405332:	call   0x405d90
  405337:	mov    rcx,r12
  40533a:	call   0x42a4e8
  40533f:	jmp    0x404053
  405344:	lea    rcx,[rip+0x28ca1]        # 0x42dfec
  40534b:	call   0x42a4d0
  405350:	test   rax,rax
  405353:	mov    rdx,rax
  405356:	jne    0x405375
  405358:	lea    rcx,[rip+0x28c93]        # 0x42dff2
  40535f:	call   0x42a4d0
  405364:	mov    rdx,rax
  405367:	test   rax,rax
  40536a:	lea    rax,[rip+0x285ed]        # 0x42d95e
  405371:	cmove  rdx,rax
  405375:	lea    rcx,[rip+0x28c7e]        # 0x42dffa
  40537c:	call   0x424630
  405381:	mov    rdi,rax
  405384:	mov    rcx,rax
  405387:	call   0x424f60
  40538c:	mov    rcx,rdi
  40538f:	mov    esi,eax
  405391:	call   0x42a4e8
  405396:	jmp    0x405319
  405398:	xor    r8d,r8d
  40539b:	xor    edx,edx
  40539d:	mov    r9d,0x1
  4053a3:	mov    rcx,rbx
  4053a6:	call   0x40cb10
  4053ab:	mov    rsi,rax
  4053ae:	mov    rcx,rax
  4053b1:	call   0x418470
  4053b6:	test   rsi,rsi
  4053b9:	mov    edi,eax
  4053bb:	jne    0x403545
  4053c1:	jmp    0x404053
  4053c6:	xor    r8d,r8d
  4053c9:	xor    edx,edx
  4053cb:	mov    rcx,rbx
  4053ce:	mov    r9d,0x1
  4053d4:	call   0x40cb10
  4053d9:	mov    r12,QWORD PTR [rip+0x4f500]        # 0x4548e0
  4053e0:	lea    rcx,[rip+0x281e4]        # 0x42d5cb
  4053e7:	mov    rsi,rax
  4053ea:	mov    rdx,rax
  4053ed:	movsx  r9d,BYTE PTR [r12+0x11a]
  4053f6:	lea    r8,[r12+0x28]
  4053fb:	call   0x402120
  405400:	mov    rcx,rsi
  405403:	mov    edi,eax
  405405:	call   0x42a4e8
  40540a:	jmp    0x402dce
  40540f:	xor    r8d,r8d
  405412:	xor    edx,edx
  405414:	mov    r9d,0x1
  40541a:	mov    rcx,rbx
  40541d:	call   0x40cb10
  405422:	test   rax,rax
  405425:	mov    rdi,rax
  405428:	je     0x4054c1
  40542e:	xor    edx,edx
  405430:	mov    rcx,rax
  405433:	mov    r8d,0xa
  405439:	call   0x42a3d0
  40543e:	mov    rcx,rdi
  405441:	mov    esi,eax
  405443:	test   eax,eax
  405445:	mov    eax,0x1
  40544a:	cmovle esi,eax
  40544d:	call   0x42a4e8
  405452:	mov    edx,esi
  405454:	mov    rcx,r14
  405457:	call   0x42aab6
  40545c:	mov    rcx,r14
  40545f:	mov    edi,eax
  405461:	call   0x427d68
  405466:	mov    rcx,rbx
  405469:	call   0x40ca60
  40546e:	mov    r12,QWORD PTR [rip+0x4f46b]        # 0x4548e0
  405475:	jmp    0x402dce
  40547a:	lea    rdx,[rip+0x28195]        # 0x42d616
  405481:	mov    rcx,rsi
  405484:	call   0x42a420
  405489:	test   eax,eax
  40548b:	jne    0x4054c8
  40548d:	cmp    BYTE PTR [r12+0x60],0x0
  405493:	mov    rcx,rdi
  405496:	cmovne rcx,r13
  40549a:	call   0x4249c0
  40549f:	mov    r9,rax
  4054a2:	jmp    0x4045e1
  4054a7:	movzx  edx,WORD PTR [r12+0x30]
  4054ad:	lea    rcx,[rip+0x289c4]        # 0x42de78
  4054b4:	call   0x424630
  4054b9:	mov    r9,rax
  4054bc:	jmp    0x4045e1
  4054c1:	mov    esi,0x2
  4054c6:	jmp    0x405452
  4054c8:	lea    rdx,[rip+0x2816c]        # 0x42d63b
  4054cf:	mov    rcx,rsi
  4054d2:	call   0x42a420
  4054d7:	test   eax,eax
  4054d9:	jne    0x4055d2
  4054df:	mov    rcx,QWORD PTR [r12+0x70]
  4054e4:	test   rcx,rcx
  4054e7:	jne    0x404732
  4054ed:	lea    rcx,[rip+0x27ba5]        # 0x42d099
  4054f4:	call   0x4249c0
  4054f9:	mov    r9,rax
  4054fc:	jmp    0x4045e1
  405501:	lea    rcx,[rip+0x287e8]        # 0x42dcf0
  405508:	mov    rdx,rsi
  40550b:	call   0x405d90
  405510:	jmp    0x403e5e
  405515:	mov    edx,DWORD PTR [rsp+0x80]
  40551c:	mov    rcx,QWORD PTR [r12]
  405520:	mov    r8,r14
  405523:	call   0x42aa1a
  405528:	test   al,al
  40552a:	je     0x403013
  405530:	test   r13d,r13d
  405533:	jle    0x405573
  405535:	mov    r8,QWORD PTR [r14]
  405538:	cmp    BYTE PTR [r8],0x0
  40553c:	jne    0x405560
  40553e:	jmp    0x405573
  405540:	mov    edx,0xa
  405545:	mov    rcx,r8
  405548:	add    r13d,0x1
  40554c:	call   0x42a428
  405551:	test   rax,rax
  405554:	je     0x405573
  405556:	cmp    BYTE PTR [rax+0x1],0x0
  40555a:	lea    r8,[rax+0x1]
  40555e:	je     0x405573
  405560:	lea    rdi,[rip+0x2875f]        # 0x42dcc6
  405567:	mov    rsi,r8
  40556a:	mov    ecx,0x3
  40556f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405571:	jne    0x405540
  405573:	mov    rcx,r15
  405576:	mov    edi,0x2
  40557b:	call   0x42a4e8
  405580:	mov    r9,QWORD PTR [rsp+0x30]
  405585:	xor    ecx,ecx
  405587:	mov    r8d,r13d
  40558a:	mov    rdx,r14
  40558d:	mov    BYTE PTR [rsp+0x80],0x0
  405595:	call   0x401680
  40559a:	test   al,al
  40559c:	je     0x402de8
  4055a2:	cmp    BYTE PTR [rsp+0x80],0x0
  4055aa:	je     0x405628
  4055ac:	mov    edi,0x4
  4055b1:	jmp    0x40311a
  4055b6:	mov    ecx,DWORD PTR [r12+0x8]
  4055bb:	mov    edi,0x2
  4055c0:	call   0x427d80
  4055c5:	mov    rcx,rax
  4055c8:	call   0x42a468
  4055cd:	jmp    0x40311a
  4055d2:	lea    rdx,[rip+0x2805a]        # 0x42d633
  4055d9:	mov    rcx,rsi
  4055dc:	call   0x42a420
  4055e1:	test   eax,eax
  4055e3:	jne    0x4055fb
  4055e5:	mov    rcx,QWORD PTR [r12+0x98]
  4055ed:	test   rcx,rcx
  4055f0:	jne    0x404732
  4055f6:	jmp    0x4054ed
  4055fb:	lea    rdx,[rip+0x28025]        # 0x42d627
  405602:	mov    rcx,rsi
  405605:	call   0x42a420
  40560a:	test   eax,eax
  40560c:	jne    0x405639
  40560e:	cmp    BYTE PTR [r12+0x32],0x0
  405614:	mov    rcx,rdi
  405617:	cmovne rcx,r13
  40561b:	call   0x4249c0
  405620:	mov    r9,rax
  405623:	jmp    0x4045e1
  405628:	lea    rcx,[rip+0x2869b]        # 0x42dcca
  40562f:	call   0x42a468
  405634:	jmp    0x40311a
  405639:	lea    rcx,[rip+0x2883b]        # 0x42de7b
  405640:	jmp    0x4045d9
  405645:	lea    rcx,[rip+0x2851c]        # 0x42db68
  40564c:	call   0x405d90
  405651:	mov    ecx,0x1
  405656:	call   0x42a540
  40565b:	lea    rdx,[rip+0x28a4e]        # 0x42e0b0
  405662:	mov    rcx,r14
  405665:	or     r13d,0xffffffff
  405669:	mov    edi,0x2
  40566e:	call   0x427d70
  405673:	lea    rax,[rsp+0x80]
  40567b:	mov    QWORD PTR [rsp+0x30],rax
  405680:	jmp    0x405580
  405685:	lea    rcx,[rip+0x285b8]        # 0x42dc44
  40568c:	call   0x405d90
  405691:	jmp    0x402de8
  405696:	call   QWORD PTR [rip+0x57550]        # 0x45cbec
  40569c:	mov    ecx,DWORD PTR [rax]
  40569e:	xor    edi,edi
  4056a0:	call   0x42a408
  4056a5:	lea    rcx,[rip+0x28454]        # 0x42db00
  4056ac:	mov    r9,rax
  4056af:	mov    r8,rsi
  4056b2:	mov    rdx,rbp
  4056b5:	call   0x405d90
  4056ba:	jmp    0x403545
  4056bf:	test   sil,sil
  4056c2:	mov    rcx,r12
  4056c5:	je     0x40571c
  4056c7:	call   0x41c650
  4056cc:	test   r12,r12
  4056cf:	mov    edi,0x2
  4056d4:	je     0x405708
  4056d6:	mov    rcx,r12
  4056d9:	mov    BYTE PTR [rsp+0x30],al
  4056dd:	call   0x42a4e8
  4056e2:	movzx  eax,BYTE PTR [rsp+0x30]
  4056e7:	jmp    0x404193
  4056ec:	mov    r9d,edi
  4056ef:	mov    r8d,esi
  4056f2:	lea    rcx,[rip+0x2853a]        # 0x42dc33
  4056f9:	and    r9d,0x1
  4056fd:	and    r8d,0x1
  405701:	xor    edx,edx
  405703:	call   0x419840
  405708:	test   al,al
  40570a:	mov    r12,QWORD PTR [rip+0x4f1cf]        # 0x4548e0
  405711:	je     0x402de8
  405717:	jmp    0x4030f2
  40571c:	call   0x41c4a0
  405721:	jmp    0x4056cc
  405723:	movzx  edx,sil
  405727:	mov    rcx,r12
  40572a:	call   0x418f70
  40572f:	jmp    0x4056cc
  405731:	cmp    BYTE PTR [rbp+0x2],0x64
  405735:	je     0x405790
  405737:	test   r12,r12
  40573a:	je     0x404f5b
  405740:	mov    edi,0x2
  405745:	xor    eax,eax
  405747:	jmp    0x4056d6
  405749:	mov    rcx,r12
  40574c:	call   0x418470
  405751:	jmp    0x4056cc
  405756:	mov    r8d,edi
  405759:	movzx  edx,sil
  40575d:	mov    rcx,r12
  405760:	and    r8d,0x1
  405764:	call   0x41aa70
  405769:	jmp    0x4056cc
  40576e:	call   0x40f600
  405773:	jmp    0x4056cc
  405778:	mov    r8d,edi
  40577b:	movzx  edx,sil
  40577f:	mov    rcx,r12
  405782:	and    r8d,0x1
  405786:	call   0x418050
  40578b:	jmp    0x4056cc
  405790:	cmp    BYTE PTR [rbp+0x3],0x73
  405794:	jne    0x405737
  405796:	test   r12,r12
  405799:	je     0x405a3f
  40579f:	mov    r9d,0x1
  4057a5:	xor    r8d,r8d
  4057a8:	xor    edx,edx
  4057aa:	mov    rcx,rbx
  4057ad:	call   0x40cb10
  4057b2:	mov    rdx,rax
  4057b5:	mov    rcx,r12
  4057b8:	call   0x419660
  4057bd:	jmp    0x4056cc
  4057c2:	movzx  edx,sil
  4057c6:	mov    rcx,r12
  4057c9:	call   0x41a400
  4057ce:	jmp    0x4056cc
  4057d3:	mov    r8d,edi
  4057d6:	movzx  edx,sil
  4057da:	mov    rcx,r12
  4057dd:	and    r8d,0x1
  4057e1:	call   0x41a830
  4057e6:	jmp    0x4056cc
  4057eb:	mov    r8d,edi
  4057ee:	movzx  edx,sil
  4057f2:	mov    rcx,r12
  4057f5:	and    r8d,0x1
  4057f9:	call   0x419d80
  4057fe:	jmp    0x4056cc
  405803:	movzx  eax,BYTE PTR [rbp+0x2]
  405807:	cmp    al,0x64
  405809:	je     0x405877
  40580b:	jle    0x40585a
  40580d:	cmp    al,0x70
  40580f:	je     0x405849
  405811:	cmp    al,0x74
  405813:	jne    0x4058ef
  405819:	movzx  edx,sil
  40581d:	mov    rcx,r12
  405820:	call   0x41b500
  405825:	jmp    0x4056cc
  40582a:	mov    r9d,edi
  40582d:	mov    r8d,esi
  405830:	lea    rcx,[rbp+0x1]
  405834:	and    r9d,0x1
  405838:	and    r8d,0x1
  40583c:	mov    rdx,r12
  40583f:	call   0x419840
  405844:	jmp    0x4056cc
  405849:	movzx  edx,sil
  40584d:	mov    rcx,r12
  405850:	call   0x41ac30
  405855:	jmp    0x4056cc
  40585a:	test   al,al
  40585c:	je     0x405866
  40585e:	cmp    al,0x2b
  405860:	jne    0x4058ef
  405866:	movzx  edx,sil
  40586a:	mov    rcx,r12
  40586d:	call   0x41b710
  405872:	jmp    0x4056cc
  405877:	movzx  edx,sil
  40587b:	mov    rcx,r12
  40587e:	call   0x41b310
  405883:	jmp    0x4056cc
  405888:	mov    r8d,edi
  40588b:	movzx  edx,sil
  40588f:	mov    rcx,r12
  405892:	and    r8d,0x1
  405896:	call   0x419fa0
  40589b:	jmp    0x4056cc
  4058a0:	movzx  edx,sil
  4058a4:	mov    rcx,r12
  4058a7:	call   0x41a5e0
  4058ac:	jmp    0x4056cc
  4058b1:	test   r12,r12
  4058b4:	je     0x4056ec
  4058ba:	mov    r8d,edi
  4058bd:	movzx  edx,sil
  4058c1:	mov    rcx,r12
  4058c4:	and    r8d,0x1
  4058c8:	mov    edi,0x2
  4058cd:	call   0x418d80
  4058d2:	jmp    0x4056d6
  4058d7:	cmp    al,0x74
  4058d9:	je     0x405a20
  4058df:	cmp    al,0x77
  4058e1:	je     0x405a20
  4058e7:	cmp    al,0x6e
  4058e9:	je     0x405a20
  4058ef:	test   r12,r12
  4058f2:	je     0x405900
  4058f4:	xor    edi,edi
  4058f6:	mov    eax,0x1
  4058fb:	jmp    0x4056d6
  405900:	mov    r12,QWORD PTR [rip+0x4efd9]        # 0x4548e0
  405907:	jmp    0x403649
  40590c:	mov    r8d,edi
  40590f:	movzx  edx,sil
  405913:	mov    rcx,r12
  405916:	and    r8d,0x1
  40591a:	call   0x41a1f0
  40591f:	jmp    0x4056cc
  405924:	movzx  edx,sil
  405928:	mov    rcx,r12
  40592b:	call   0x417520
  405930:	jmp    0x4056cc
  405935:	mov    r8d,edi
  405938:	movzx  edx,sil
  40593c:	mov    rcx,r12
  40593f:	and    r8d,0x1
  405943:	call   0x417350
  405948:	jmp    0x4056cc
  40594d:	mov    r8d,edi
  405950:	movzx  edx,sil
  405954:	mov    rcx,r12
  405957:	and    r8d,0x1
  40595b:	call   0x417db0
  405960:	jmp    0x4056cc
  405965:	movzx  eax,BYTE PTR [rbp+0x2]
  405969:	cmp    al,0x74
  40596b:	je     0x4059f1
  405971:	jle    0x4059d8
  405973:	cmp    al,0x75
  405975:	je     0x4059b6
  405977:	cmp    al,0x77
  405979:	jne    0x4058ef
  40597f:	movzx  edx,sil
  405983:	mov    rcx,r12
  405986:	call   0x41bc20
  40598b:	jmp    0x4056cc
  405990:	lea    rdx,[rip+0x282a2]        # 0x42dc39
  405997:	mov    r8d,0x3
  40599d:	mov    rcx,rbp
  4059a0:	call   0x42a3f8
  4059a5:	test   eax,eax
  4059a7:	jne    0x4059c7
  4059a9:	mov    rcx,r12
  4059ac:	call   0x418670
  4059b1:	jmp    0x4056cc
  4059b6:	movzx  edx,sil
  4059ba:	mov    rcx,r12
  4059bd:	call   0x41c0d0
  4059c2:	jmp    0x4056cc
  4059c7:	movzx  edx,dil
  4059cb:	mov    rcx,r12
  4059ce:	call   0x4188d0
  4059d3:	jmp    0x4056cc
  4059d8:	cmp    al,0x73
  4059da:	jne    0x4058ef
  4059e0:	movzx  edx,sil
  4059e4:	mov    rcx,r12
  4059e7:	call   0x41bea0
  4059ec:	jmp    0x4056cc
  4059f1:	movzx  edx,sil
  4059f5:	mov    rcx,r12
  4059f8:	call   0x41c2a0
  4059fd:	jmp    0x4056cc
  405a02:	movzx  eax,BYTE PTR [rbp+0x2]
  405a06:	cmp    al,0x61
  405a08:	je     0x405a20
  405a0a:	jg     0x4058d7
  405a10:	cmp    al,0x2b
  405a12:	je     0x405a20
  405a14:	cmp    al,0x53
  405a16:	je     0x405a20
  405a18:	test   al,al
  405a1a:	jne    0x4058ef
  405a20:	mov    r9d,edi
  405a23:	mov    r8d,esi
  405a26:	lea    rcx,[rbp+0x2]
  405a2a:	and    r9d,0x1
  405a2e:	and    r8d,0x1
  405a32:	mov    rdx,r12
  405a35:	call   0x417780
  405a3a:	jmp    0x4056cc
  405a3f:	xor    eax,eax
  405a41:	jmp    0x4057b2
  405a46:	nop
  405a47:	nop
  405a48:	nop
  405a49:	nop
  405a4a:	nop
  405a4b:	nop
  405a4c:	nop
  405a4d:	nop
  405a4e:	nop
  405a4f:	nop
  405a50:	push   r13
  405a52:	push   r12
  405a54:	push   rbp
  405a55:	push   rdi
  405a56:	push   rsi
  405a57:	push   rbx
  405a58:	sub    rsp,0x28
  405a5c:	xor    r13d,r13d
  405a5f:	movzx  eax,BYTE PTR [rcx]
  405a62:	mov    rbp,QWORD PTR [rip+0x4ee77]        # 0x4548e0
  405a69:	mov    rbx,rcx
  405a6c:	mov    r12,QWORD PTR [rip+0x57299]        # 0x45cd0c
  405a73:	jmp    0x405a86
  405a75:	test   r13d,r13d
  405a78:	jle    0x405ac0
  405a7a:	cmp    dil,0x2a
  405a7e:	je     0x405ae0
  405a80:	add    rbx,rsi
  405a83:	movzx  eax,BYTE PTR [rbx]
  405a86:	test   al,al
  405a88:	je     0x405acb
  405a8a:	mov    edx,DWORD PTR [rbp+0x8]
  405a8d:	mov    rcx,rbx
  405a90:	call   0x427e88
  405a95:	movzx  ecx,BYTE PTR [rbx]
  405a98:	movsxd rsi,eax
  405a9b:	mov    edi,ecx
  405a9d:	call   r12
  405aa0:	test   eax,eax
  405aa2:	jne    0x405a80
  405aa4:	cmp    dil,0x2f
  405aa8:	jne    0x405a75
  405aaa:	cmp    BYTE PTR [rbx+0x1],0x2a
  405aae:	je     0x405b40
  405ab4:	test   r13d,r13d
  405ab7:	jg     0x405a80
  405ab9:	nop    DWORD PTR [rax+0x0]
  405ac0:	test   r13d,r13d
  405ac3:	jne    0x405acb
  405ac5:	cmp    dil,0x2d
  405ac9:	je     0x405af4
  405acb:	mov    rax,rbx
  405ace:	add    rsp,0x28
  405ad2:	pop    rbx
  405ad3:	pop    rsi
  405ad4:	pop    rdi
  405ad5:	pop    rbp
  405ad6:	pop    r12
  405ad8:	pop    r13
  405ada:	ret    
  405adb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ae0:	cmp    BYTE PTR [rbx+0x1],0x2f
  405ae4:	jne    0x405a80
  405ae6:	movzx  eax,BYTE PTR [rbx+0x2]
  405aea:	sub    r13d,0x1
  405aee:	add    rbx,0x2
  405af2:	jmp    0x405a86
  405af4:	cmp    BYTE PTR [rbx+0x1],0x2d
  405af8:	jne    0x405acb
  405afa:	movzx  eax,BYTE PTR [rbx+0x2]
  405afe:	lea    rdx,[rbx+0x2]
  405b02:	test   al,al
  405b04:	je     0x405b56
  405b06:	cmp    al,0xa
  405b08:	mov    rbx,rdx
  405b0b:	je     0x405b51
  405b0d:	nop    DWORD PTR [rax]
  405b10:	mov    edx,DWORD PTR [rbp+0x8]
  405b13:	mov    rcx,rbx
  405b16:	call   0x427e88
  405b1b:	cdqe   
  405b1d:	add    rbx,rax
  405b20:	movzx  eax,BYTE PTR [rbx]
  405b23:	test   al,al
  405b25:	je     0x405acb
  405b27:	cmp    al,0xa
  405b29:	jne    0x405b10
  405b2b:	movzx  eax,BYTE PTR [rbx+0x1]
  405b2f:	add    rbx,0x1
  405b33:	jmp    0x405a86
  405b38:	nop    DWORD PTR [rax+rax*1+0x0]
  405b40:	movzx  eax,BYTE PTR [rbx+0x2]
  405b44:	add    r13d,0x1
  405b48:	add    rbx,0x2
  405b4c:	jmp    0x405a86
  405b51:	mov    rbx,rdx
  405b54:	jmp    0x405b2b
  405b56:	mov    rbx,rdx
  405b59:	jmp    0x405acb
  405b5e:	xchg   ax,ax
  405b60:	push   rdi
  405b61:	push   rsi
  405b62:	push   rbx
  405b63:	sub    rsp,0x30
  405b67:	mov    rbx,QWORD PTR [rip+0x4ed72]        # 0x4548e0
  405b6e:	mov    rsi,rcx
  405b71:	cmp    BYTE PTR [rbx+0x11a],0x0
  405b78:	jne    0x405b9c
  405b7a:	cmp    DWORD PTR [rbx+0x28],0x4
  405b7e:	je     0x405c10
  405b84:	call   0x427f58
  405b89:	mov    rcx,QWORD PTR [rbx+0x10]
  405b8d:	lea    rdx,[rip+0x28876]        # 0x42e40a
  405b94:	mov    r8,rax
  405b97:	call   0x426370
  405b9c:	cmp    QWORD PTR [rbx+0x108],0x0
  405ba4:	je     0x405bc4
  405ba6:	mov    rcx,rsi
  405ba9:	call   0x427f58
  405bae:	mov    rcx,QWORD PTR [rbx+0x108]
  405bb5:	lea    rdx,[rip+0x2884e]        # 0x42e40a
  405bbc:	mov    r8,rax
  405bbf:	call   0x426370
  405bc4:	mov    rcx,rsi
  405bc7:	lea    rsi,[rsp+0x20]
  405bcc:	call   0x427e68
  405bd1:	lea    r8,[rip+0x28836]        # 0x42e40e
  405bd8:	mov    r9d,eax
  405bdb:	mov    rcx,rsi
  405bde:	mov    edx,0x10
  405be3:	call   0x426220
  405be8:	mov    rcx,QWORD PTR [rbx+0x110]
  405bef:	lea    rdx,[rip+0x2881b]        # 0x42e411
  405bf6:	mov    r8,rsi
  405bf9:	call   0x40ef10
  405bfe:	nop
  405bff:	add    rsp,0x30
  405c03:	pop    rbx
  405c04:	pop    rsi
  405c05:	pop    rdi
  405c06:	ret    
  405c07:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	mov    r9,QWORD PTR [rbx+0x10]
  405c14:	lea    rcx,[rip+0x287e5]        # 0x42e400
  405c1b:	mov    r8d,0x3
  405c21:	mov    edx,0x1
  405c26:	call   0x42a4e0
  405c2b:	mov    rdi,QWORD PTR [rbx+0x10]
  405c2f:	mov    rcx,rsi
  405c32:	call   0x427f58
  405c37:	mov    rcx,rax
  405c3a:	mov    rdx,rdi
  405c3d:	call   0x40fff0
  405c42:	mov    r9,QWORD PTR [rbx+0x10]
  405c46:	lea    rcx,[rip+0x287b7]        # 0x42e404
  405c4d:	mov    r8d,0x5
  405c53:	mov    edx,0x1
  405c58:	call   0x42a4e0
  405c5d:	jmp    0x405b9c
  405c62:	nop    DWORD PTR [rax+0x0]
  405c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c70:	push   rbp
  405c71:	push   rdi
  405c72:	push   rsi
  405c73:	push   rbx
  405c74:	sub    rsp,0x128
  405c7b:	xor    eax,eax
  405c7d:	cmp    ecx,0x1
  405c80:	jbe    0x405c90
  405c82:	add    rsp,0x128
  405c89:	pop    rbx
  405c8a:	pop    rsi
  405c8b:	pop    rdi
  405c8c:	pop    rbp
  405c8d:	ret    
  405c8e:	xchg   ax,ax
  405c90:	mov    rax,QWORD PTR [rip+0x4eb79]        # 0x454810
  405c97:	lea    rcx,[rip+0x543c2]        # 0x45a060
  405c9e:	mov    BYTE PTR [rax],0x1
  405ca1:	call   QWORD PTR [rip+0x56d85]        # 0x45ca2c
  405ca7:	mov    rax,QWORD PTR [rip+0x543da]        # 0x45a088
  405cae:	test   rax,rax
  405cb1:	je     0x405cf5
  405cb3:	mov    rcx,QWORD PTR [rip+0x543ce]        # 0x45a088
  405cba:	lea    rsi,[rsp+0x20]
  405cbf:	mov    r8d,0x100
  405cc5:	mov    rdx,rsi
  405cc8:	call   0x427f70
  405ccd:	test   eax,eax
  405ccf:	je     0x405d13
  405cd1:	call   QWORD PTR [rip+0x56edd]        # 0x45cbb4
  405cd7:	lea    rcx,[rax+0x60]
  405cdb:	call   0x42a368
  405ce0:	mov    r8d,0x14
  405ce6:	lea    rdx,[rip+0x2872c]        # 0x42e419
  405ced:	mov    ecx,eax
  405cef:	call   QWORD PTR [rip+0x56f5f]        # 0x45cc54
  405cf5:	lea    rcx,[rip+0x54364]        # 0x45a060
  405cfc:	call   QWORD PTR [rip+0x56db2]        # 0x45cab4
  405d02:	mov    eax,0x1
  405d07:	add    rsp,0x128
  405d0e:	pop    rbx
  405d0f:	pop    rsi
  405d10:	pop    rdi
  405d11:	pop    rbp
  405d12:	ret    
  405d13:	mov    rbp,QWORD PTR [rip+0x56e9a]        # 0x45cbb4
  405d1a:	mov    rbx,rsi
  405d1d:	call   rbp
  405d1f:	lea    rcx,[rax+0x60]
  405d23:	call   0x42a368
  405d28:	mov    r8d,0x1f
  405d2e:	lea    rdx,[rip+0x286fb]        # 0x42e430
  405d35:	mov    ecx,eax
  405d37:	mov    rdi,QWORD PTR [rip+0x56f16]        # 0x45cc54
  405d3e:	call   rdi
  405d40:	mov    edx,DWORD PTR [rbx]
  405d42:	add    rbx,0x4
  405d46:	lea    eax,[rdx-0x1010101]
  405d4c:	not    edx
  405d4e:	and    eax,edx
  405d50:	and    eax,0x80808080
  405d55:	je     0x405d40
  405d57:	mov    edx,eax
  405d59:	shr    edx,0x10
  405d5c:	test   eax,0x8080
  405d61:	cmove  eax,edx
  405d64:	lea    rdx,[rbx+0x2]
  405d68:	cmove  rbx,rdx
  405d6c:	add    al,al
  405d6e:	sbb    rbx,0x3
  405d72:	call   rbp
  405d74:	lea    rcx,[rax+0x60]
  405d78:	sub    rbx,rsi
  405d7b:	call   0x42a368
  405d80:	mov    r8d,ebx
  405d83:	mov    rdx,rsi
  405d86:	mov    ecx,eax
  405d88:	call   rdi
  405d8a:	jmp    0x405cf5
  405d8f:	nop
  405d90:	push   r12
  405d92:	push   rbp
  405d93:	push   rdi
  405d94:	push   rsi
  405d95:	push   rbx
  405d96:	sub    rsp,0x40
  405d9a:	mov    rsi,QWORD PTR [rip+0x56e13]        # 0x45cbb4
  405da1:	mov    QWORD PTR [rsp+0x78],rdx
  405da6:	mov    QWORD PTR [rsp+0x80],r8
  405dae:	mov    rdi,rcx
  405db1:	mov    QWORD PTR [rsp+0x88],r9
  405db9:	call   rsi
  405dbb:	lea    rcx,[rax+0x30]
  405dbf:	call   0x42a520
  405dc4:	mov    rbx,QWORD PTR [rip+0x4eb15]        # 0x4548e0
  405dcb:	mov    rbp,QWORD PTR [rbx+0x10]
  405dcf:	test   rbp,rbp
  405dd2:	je     0x405de8
  405dd4:	call   rsi
  405dd6:	add    rax,0x30
  405dda:	cmp    rbp,rax
  405ddd:	je     0x405de8
  405ddf:	mov    rcx,QWORD PTR [rbx+0x10]
  405de3:	call   0x42a520
  405de8:	mov    rbp,QWORD PTR [rbx+0xf0]
  405def:	test   rbp,rbp
  405df2:	je     0x405e1f
  405df4:	mov    r12,QWORD PTR [rbx+0xf8]
  405dfb:	mov    rbx,QWORD PTR [rbx+0xe8]
  405e02:	call   rsi
  405e04:	lea    rdx,[rip+0x28645]        # 0x42e450
  405e0b:	lea    rcx,[rax+0x60]
  405e0f:	mov    r9,rbp
  405e12:	mov    QWORD PTR [rsp+0x20],r12
  405e17:	mov    r8,rbx
  405e1a:	call   0x426370
  405e1f:	lea    rbx,[rsp+0x78]
  405e24:	mov    QWORD PTR [rsp+0x38],rbx
  405e29:	call   rsi
  405e2b:	lea    rcx,[rax+0x60]
  405e2f:	mov    r8,rbx
  405e32:	mov    rdx,rdi
  405e35:	call   0x4262f0
  405e3a:	nop
  405e3b:	add    rsp,0x40
  405e3f:	pop    rbx
  405e40:	pop    rsi
  405e41:	pop    rdi
  405e42:	pop    rbp
  405e43:	pop    r12
  405e45:	ret    
  405e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e50:	push   rbp
  405e51:	push   rdi
  405e52:	push   rsi
  405e53:	push   rbx
  405e54:	sub    rsp,0x28
  405e58:	mov    rbx,QWORD PTR [rip+0x4ea81]        # 0x4548e0
  405e5f:	mov    rsi,rcx
  405e62:	mov    rdi,QWORD PTR [rbx+0x10]
  405e66:	test   rdi,rdi
  405e69:	je     0x405ea0
  405e6b:	mov    rbp,QWORD PTR [rip+0x56d42]        # 0x45cbb4
  405e72:	call   rbp
  405e74:	add    rax,0x30
  405e78:	cmp    rdi,rax
  405e7b:	je     0x405ea0
  405e7d:	mov    rdi,QWORD PTR [rbx+0x10]
  405e81:	call   rbp
  405e83:	add    rax,0x60
  405e87:	cmp    rdi,rax
  405e8a:	je     0x405ea0
  405e8c:	cmp    BYTE PTR [rbx+0x18],0x0
  405e90:	mov    rcx,QWORD PTR [rbx+0x10]
  405e94:	je     0x405f35
  405e9a:	call   QWORD PTR [rip+0x56d84]        # 0x45cc24
  405ea0:	test   rsi,rsi
  405ea3:	je     0x405eac
  405ea5:	movzx  eax,BYTE PTR [rsi]
  405ea8:	test   al,al
  405eaa:	jne    0x405ed1
  405eac:	call   QWORD PTR [rip+0x56d02]        # 0x45cbb4
  405eb2:	lea    r8,[rax+0x30]
  405eb6:	mov    BYTE PTR [rbx+0x18],0x0
  405eba:	mov    QWORD PTR [rbx+0x10],r8
  405ebe:	test   r8,r8
  405ec1:	mov    eax,0x1
  405ec6:	je     0x405ef9
  405ec8:	add    rsp,0x28
  405ecc:	pop    rbx
  405ecd:	pop    rsi
  405ece:	pop    rdi
  405ecf:	pop    rbp
  405ed0:	ret    
  405ed1:	cmp    al,0x7c
  405ed3:	je     0x405f40
  405ed5:	lea    rdx,[rip+0x28581]        # 0x42e45d
  405edc:	mov    rcx,rsi
  405edf:	call   0x42a510
  405ee4:	mov    r8,rax
  405ee7:	mov    QWORD PTR [rbx+0x10],rax
  405eeb:	mov    BYTE PTR [rbx+0x18],0x0
  405eef:	test   r8,r8
  405ef2:	mov    eax,0x1
  405ef7:	jne    0x405ec8
  405ef9:	call   QWORD PTR [rip+0x56ced]        # 0x45cbec
  405eff:	mov    ecx,DWORD PTR [rax]
  405f01:	call   0x42a408
  405f06:	lea    rcx,[rip+0x28552]        # 0x42e45f
  405f0d:	mov    r8,rax
  405f10:	mov    rdx,rsi
  405f13:	call   0x405d90
  405f18:	call   QWORD PTR [rip+0x56c96]        # 0x45cbb4
  405f1e:	add    rax,0x30
  405f22:	mov    BYTE PTR [rbx+0x18],0x0
  405f26:	mov    QWORD PTR [rbx+0x10],rax
  405f2a:	xor    eax,eax
  405f2c:	add    rsp,0x28
  405f30:	pop    rbx
  405f31:	pop    rsi
  405f32:	pop    rdi
  405f33:	pop    rbp
  405f34:	ret    
  405f35:	call   0x42a538
  405f3a:	jmp    0x405ea0
  405f3f:	nop
  405f40:	lea    rcx,[rsi+0x1]
  405f44:	lea    rdx,[rip+0x28512]        # 0x42e45d
  405f4b:	call   0x424fe0
  405f50:	mov    BYTE PTR [rbx+0x18],0x1
  405f54:	mov    r8,rax
  405f57:	mov    QWORD PTR [rbx+0x10],rax
  405f5b:	jmp    0x405ebe
  405f60:	push   rbp
  405f61:	push   rdi
  405f62:	push   rsi
  405f63:	push   rbx
  405f64:	sub    rsp,0x28
  405f68:	mov    rsi,rcx
  405f6b:	call   0x427e70
  405f70:	test   eax,eax
  405f72:	jle    0x406062
  405f78:	mov    rcx,rsi
  405f7b:	call   0x427e70
  405f80:	cmp    eax,0x1
  405f83:	jg     0x406010
  405f89:	xor    ebx,ebx
  405f8b:	mov    rbp,QWORD PTR [rip+0x4e94e]        # 0x4548e0
  405f92:	jmp    0x405fb6
  405f94:	mov    rcx,QWORD PTR [rbp+0x110]
  405f9b:	mov    rdx,rdi
  405f9e:	call   0x40ef10
  405fa3:	test   al,al
  405fa5:	je     0x406040
  405fab:	mov    rcx,rdi
  405fae:	add    ebx,0x1
  405fb1:	call   0x42a4e8
  405fb6:	mov    rcx,rsi
  405fb9:	call   0x427e80
  405fbe:	cmp    ebx,eax
  405fc0:	jge    0x406030
  405fc2:	mov    edx,ebx
  405fc4:	mov    rcx,rsi
  405fc7:	call   0x427ee0
  405fcc:	mov    rdx,QWORD PTR [rbp+0xc8]
  405fd3:	lea    rcx,[rip+0x284a9]        # 0x42e483
  405fda:	mov    r8,rax
  405fdd:	call   0x424630
  405fe2:	mov    r8d,ebx
  405fe5:	xor    edx,edx
  405fe7:	mov    rcx,rsi
  405fea:	mov    rdi,rax
  405fed:	call   0x427ea8
  405ff2:	xor    r8d,r8d
  405ff5:	test   eax,eax
  405ff7:	jne    0x405f94
  405ff9:	mov    r8d,ebx
  405ffc:	xor    edx,edx
  405ffe:	mov    rcx,rsi
  406001:	call   0x427e98
  406006:	mov    r8,rax
  406009:	jmp    0x405f94
  40600b:	nop    DWORD PTR [rax+rax*1+0x0]
  406010:	lea    rcx,[rip+0x28491]        # 0x42e4a8
  406017:	call   0x405d90
  40601c:	xor    eax,eax
  40601e:	add    rsp,0x28
  406022:	pop    rbx
  406023:	pop    rsi
  406024:	pop    rdi
  406025:	pop    rbp
  406026:	ret    
  406027:	nop    WORD PTR [rax+rax*1+0x0]
  406030:	mov    eax,0x1
  406035:	add    rsp,0x28
  406039:	pop    rbx
  40603a:	pop    rsi
  40603b:	pop    rdi
  40603c:	pop    rbp
  40603d:	ret    
  40603e:	xchg   ax,ax
  406040:	lea    rcx,[rip+0x28441]        # 0x42e488
  406047:	mov    rdx,rdi
  40604a:	call   0x405d90
  40604f:	mov    rcx,rdi
  406052:	call   0x42a4e8
  406057:	xor    eax,eax
  406059:	add    rsp,0x28
  40605d:	pop    rbx
  40605e:	pop    rsi
  40605f:	pop    rdi
  406060:	pop    rbp
  406061:	ret    
  406062:	lea    rcx,[rip+0x283fe]        # 0x42e467
  406069:	call   0x405d90
  40606e:	xor    eax,eax
  406070:	add    rsp,0x28
  406074:	pop    rbx
  406075:	pop    rsi
  406076:	pop    rdi
  406077:	pop    rbp
  406078:	ret    
  406079:	nop    DWORD PTR [rax+0x0]
  406080:	lea    rcx,[rip+0x28447]        # 0x42e4ce
  406087:	jmp    0x405d90
  40608c:	nop    DWORD PTR [rax+0x0]
  406090:	sub    rsp,0x28
  406094:	lea    rcx,[rip+0x53fc5]        # 0x45a060
  40609b:	call   QWORD PTR [rip+0x56a0b]        # 0x45caac
  4060a1:	mov    rax,QWORD PTR [rip+0x56a74]        # 0x45cb1c
  4060a8:	lea    rcx,[rip+0xfffffffffffffbc1]        # 0x405c70
  4060af:	mov    edx,0x1
  4060b4:	add    rsp,0x28
  4060b8:	rex.W jmp rax
  4060bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	sub    rsp,0x28
  4060c4:	lea    rcx,[rip+0x53f95]        # 0x45a060
  4060cb:	call   QWORD PTR [rip+0x5695b]        # 0x45ca2c
  4060d1:	mov    rcx,QWORD PTR [rip+0x53fb0]        # 0x45a088
  4060d8:	mov    QWORD PTR [rip+0x53fa5],0x0        # 0x45a088
  4060e3:	test   rcx,rcx
  4060e6:	je     0x4060ed
  4060e8:	call   0x427ed8
  4060ed:	mov    rax,QWORD PTR [rip+0x4e7ec]        # 0x4548e0
  4060f4:	mov    rcx,QWORD PTR [rax]
  4060f7:	call   0x427ec0
  4060fc:	mov    QWORD PTR [rip+0x53f85],rax        # 0x45a088
  406103:	mov    rax,QWORD PTR [rip+0x569aa]        # 0x45cab4
  40610a:	lea    rcx,[rip+0x53f4f]        # 0x45a060
  406111:	add    rsp,0x28
  406115:	rex.W jmp rax
  406118:	nop    DWORD PTR [rax+rax*1+0x0]
  406120:	sub    rsp,0x28
  406124:	lea    rcx,[rip+0x53f35]        # 0x45a060
  40612b:	call   QWORD PTR [rip+0x568fb]        # 0x45ca2c
  406131:	mov    rcx,QWORD PTR [rip+0x53f50]        # 0x45a088
  406138:	mov    QWORD PTR [rip+0x53f45],0x0        # 0x45a088
  406143:	test   rcx,rcx
  406146:	je     0x40614d
  406148:	call   0x427ed8
  40614d:	mov    rax,QWORD PTR [rip+0x56960]        # 0x45cab4
  406154:	lea    rcx,[rip+0x53f05]        # 0x45a060
  40615b:	add    rsp,0x28
  40615f:	rex.W jmp rax
  406162:	nop    DWORD PTR [rax+0x0]
  406166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406170:	push   rbx
  406171:	sub    rsp,0x20
  406175:	mov    rbx,QWORD PTR [rip+0x4e764]        # 0x4548e0
  40617c:	mov    rcx,QWORD PTR [rbx]
  40617f:	call   0x427df8
  406184:	cmp    eax,0x1
  406187:	jne    0x406200
  406189:	cmp    BYTE PTR [rbx+0xe0],0x0
  406190:	je     0x40620b
  406192:	lea    rcx,[rip+0x2835f]        # 0x42e4f8
  406199:	call   0x405d90
  40619e:	mov    rcx,QWORD PTR [rbx]
  4061a1:	call   0x427e30
  4061a6:	mov    rcx,QWORD PTR [rbx]
  4061a9:	call   0x427df8
  4061ae:	cmp    eax,0x1
  4061b1:	je     0x4061d0
  4061b3:	lea    rcx,[rip+0x28381]        # 0x42e53b
  4061ba:	call   0x405d90
  4061bf:	mov    eax,0x1
  4061c4:	add    rsp,0x20
  4061c8:	pop    rbx
  4061c9:	ret    
  4061ca:	nop    WORD PTR [rax+rax*1+0x0]
  4061d0:	lea    rcx,[rip+0x2835b]        # 0x42e532
  4061d7:	call   0x405d90
  4061dc:	mov    rcx,QWORD PTR [rbx]
  4061df:	call   0x427ee8
  4061e4:	mov    QWORD PTR [rbx],0x0
  4061eb:	call   0x406120
  4061f0:	call   0x401e50
  4061f5:	xor    eax,eax
  4061f7:	add    rsp,0x20
  4061fb:	pop    rbx
  4061fc:	ret    
  4061fd:	nop    DWORD PTR [rax]
  406200:	mov    eax,0x1
  406205:	add    rsp,0x20
  406209:	pop    rbx
  40620a:	ret    
  40620b:	lea    rcx,[rip+0x282c6]        # 0x42e4d8
  406212:	call   0x405d90
  406217:	mov    ecx,0x2
  40621c:	call   0x42a540
  406221:	nop
  406222:	nop    DWORD PTR [rax+0x0]
  406226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406230:	push   rbx
  406231:	sub    rsp,0x20
  406235:	test   rcx,rcx
  406238:	mov    rbx,rcx
  40623b:	je     0x406267
  40623d:	call   0x427e20
  406242:	cmp    eax,0x4
  406245:	mov    edx,0x1
  40624a:	jbe    0x406282
  40624c:	cmp    eax,0x7
  40624f:	jbe    0x406267
  406251:	mov    rcx,rbx
  406254:	call   0x427e20
  406259:	lea    rcx,[rip+0x282e8]        # 0x42e548
  406260:	mov    edx,eax
  406262:	call   0x405d90
  406267:	mov    rax,QWORD PTR [rip+0x4e672]        # 0x4548e0
  40626e:	mov    rcx,QWORD PTR [rax]
  406271:	call   0x427f10
  406276:	cmp    BYTE PTR [rax],0x0
  406279:	jne    0x406290
  40627b:	call   0x406170
  406280:	xor    edx,edx
  406282:	mov    eax,edx
  406284:	add    rsp,0x20
  406288:	pop    rbx
  406289:	ret    
  40628a:	nop    WORD PTR [rax+rax*1+0x0]
  406290:	lea    rcx,[rip+0x28237]        # 0x42e4ce
  406297:	mov    rdx,rax
  40629a:	call   0x405d90
  40629f:	jmp    0x40627b
  4062a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4062a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062b0:	push   rdi
  4062b1:	push   rsi
  4062b2:	push   rbx
  4062b3:	sub    rsp,0x20
  4062b7:	mov    rbx,QWORD PTR [rip+0x4e622]        # 0x4548e0
  4062be:	mov    rsi,rcx
  4062c1:	mov    edi,edx
  4062c3:	cmp    QWORD PTR [rbx],0x0
  4062c7:	je     0x4063ef
  4062cd:	mov    eax,DWORD PTR [rbx+0x128]
  4062d3:	test   eax,eax
  4062d5:	je     0x406329
  4062d7:	mov    rdx,rcx
  4062da:	lea    rcx,[rip+0x282b7]        # 0x42e598
  4062e1:	call   0x4263a0
  4062e6:	call   QWORD PTR [rip+0x568c8]        # 0x45cbb4
  4062ec:	lea    rcx,[rax+0x30]
  4062f0:	call   0x42a520
  4062f5:	mov    rcx,QWORD PTR [rbx+0x108]
  4062fc:	test   rcx,rcx
  4062ff:	je     0x40631c
  406301:	lea    rdx,[rip+0x28290]        # 0x42e598
  406308:	mov    r8,rsi
  40630b:	call   0x426370
  406310:	mov    rcx,QWORD PTR [rbx+0x108]
  406317:	call   0x42a520
  40631c:	cmp    DWORD PTR [rbx+0x128],0x2
  406323:	je     0x4063c0
  406329:	call   0x4060c0
  40632e:	test   dil,dil
  406331:	je     0x40633c
  406333:	cmp    BYTE PTR [rbx+0x118],0x0
  40633a:	je     0x406370
  40633c:	mov    rcx,QWORD PTR [rbx]
  40633f:	mov    rdx,rsi
  406342:	call   0x427ef0
  406347:	mov    rbx,rax
  40634a:	call   0x406120
  40634f:	mov    rcx,rbx
  406352:	call   0x406230
  406357:	test   al,al
  406359:	mov    rcx,rbx
  40635c:	je     0x4063a5
  40635e:	mov    rax,rcx
  406361:	add    rsp,0x20
  406365:	pop    rbx
  406366:	pop    rsi
  406367:	pop    rdi
  406368:	ret    
  406369:	nop    DWORD PTR [rax+0x0]
  406370:	mov    rcx,QWORD PTR [rbx]
  406373:	call   0x427df0
  406378:	test   eax,eax
  40637a:	jne    0x40633c
  40637c:	mov    rcx,QWORD PTR [rbx]
  40637f:	lea    rdx,[rip+0x2824d]        # 0x42e5d3
  406386:	call   0x427ef0
  40638b:	mov    rcx,rax
  40638e:	mov    rdi,rax
  406391:	call   0x427e20
  406396:	cmp    eax,0x1
  406399:	jne    0x4063c4
  40639b:	mov    rcx,rdi
  40639e:	call   0x427f68
  4063a3:	jmp    0x40633c
  4063a5:	call   0x427f68
  4063aa:	xor    ecx,ecx
  4063ac:	mov    rax,rcx
  4063af:	add    rsp,0x20
  4063b3:	pop    rbx
  4063b4:	pop    rsi
  4063b5:	pop    rdi
  4063b6:	ret    
  4063b7:	nop    WORD PTR [rax+rax*1+0x0]
  4063c0:	xor    ecx,ecx
  4063c2:	jmp    0x40635e
  4063c4:	mov    rcx,QWORD PTR [rbx]
  4063c7:	call   0x427f10
  4063cc:	lea    rcx,[rip+0x280fb]        # 0x42e4ce
  4063d3:	mov    rdx,rax
  4063d6:	call   0x405d90
  4063db:	mov    rcx,rdi
  4063de:	call   0x427f68
  4063e3:	call   0x406120
  4063e8:	xor    ecx,ecx
  4063ea:	jmp    0x40635e
  4063ef:	lea    rcx,[rip+0x28172]        # 0x42e568
  4063f6:	call   0x405d90
  4063fb:	xor    ecx,ecx
  4063fd:	jmp    0x40635e
  406402:	nop    DWORD PTR [rax+0x0]
  406406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406410:	push   r15
  406412:	push   r14
  406414:	push   r13
  406416:	push   r12
  406418:	push   rbp
  406419:	push   rdi
  40641a:	push   rsi
  40641b:	push   rbx
  40641c:	sub    rsp,0x1a8
  406423:	movaps XMMWORD PTR [rsp+0x180],xmm6
  40642b:	movaps XMMWORD PTR [rsp+0x190],xmm7
  406433:	mov    r13,rcx
  406436:	mov    rbx,QWORD PTR [rip+0x4e4a3]        # 0x4548e0
  40643d:	cmp    QWORD PTR [rbx],0x0
  406441:	je     0x406c96
  406447:	cmp    BYTE PTR [rbx+0x11c],0x0
  40644e:	jne    0x4069f0
  406454:	cmp    DWORD PTR [rbx+0x124],0x1
  40645b:	je     0x406c70
  406461:	mov    rcx,QWORD PTR [rbx+0x108]
  406468:	test   rcx,rcx
  40646b:	je     0x406488
  40646d:	lea    rdx,[rip+0x28124]        # 0x42e598
  406474:	mov    r8,r13
  406477:	call   0x426370
  40647c:	mov    rcx,QWORD PTR [rbx+0x108]
  406483:	call   0x42a520
  406488:	call   0x4060c0
  40648d:	mov    rcx,QWORD PTR [rbx]
  406490:	call   0x427df0
  406495:	test   eax,eax
  406497:	je     0x406675
  40649d:	cmp    eax,0x2
  4064a0:	jne    0x4064b0
  4064a2:	mov    eax,DWORD PTR [rbx+0x12c]
  4064a8:	test   eax,eax
  4064aa:	jne    0x406a70
  4064b0:	xor    ebp,ebp
  4064b2:	mov    eax,DWORD PTR [rbx+0x120]
  4064b8:	test   eax,eax
  4064ba:	jle    0x406508
  4064bc:	mov    rcx,r13
  4064bf:	jmp    0x4064c5
  4064c1:	lea    rcx,[rax+0x1]
  4064c5:	call   0x405a50
  4064ca:	cmp    BYTE PTR [rax],0x28
  4064cd:	je     0x4064c1
  4064cf:	mov    rsi,rax
  4064d2:	xor    r12d,r12d
  4064d5:	mov    r14,QWORD PTR [rip+0x56820]        # 0x45ccfc
  4064dc:	jmp    0x4064ee
  4064de:	xchg   ax,ax
  4064e0:	mov    edx,DWORD PTR [rbx+0x8]
  4064e3:	mov    rcx,rdi
  4064e6:	call   0x427e88
  4064eb:	add    r12d,eax
  4064ee:	movsxd rdi,r12d
  4064f1:	add    rdi,rsi
  4064f4:	movzx  ecx,BYTE PTR [rdi]
  4064f7:	call   r14
  4064fa:	test   eax,eax
  4064fc:	jne    0x4064e0
  4064fe:	cmp    r12d,0x6
  406502:	je     0x406817
  406508:	cmp    BYTE PTR [rbx+0x100],0x0
  40650f:	jne    0x406b50
  406515:	mov    rcx,QWORD PTR [rbx]
  406518:	mov    rdx,r13
  40651b:	mov    edi,0x1
  406520:	mov    r12d,0x1
  406526:	lea    r14,[rsp+0xe0]
  40652e:	call   0x427ef0
  406533:	mov    r13,rax
  406536:	call   0x406120
  40653b:	jmp    0x406578
  40653d:	nop    DWORD PTR [rax]
  406540:	lea    rcx,[rip+0x28001]        # 0x42e548
  406547:	mov    edx,eax
  406549:	call   0x405d90
  40654e:	test   dil,dil
  406551:	jne    0x406be0
  406557:	mov    rcx,QWORD PTR [rbx]
  40655a:	call   0x427eb0
  40655f:	test   rax,rax
  406562:	mov    rsi,rax
  406565:	je     0x406610
  40656b:	mov    rcx,r13
  40656e:	xor    edi,edi
  406570:	mov    r13,rsi
  406573:	call   0x427f68
  406578:	mov    rcx,r13
  40657b:	call   0x406230
  406580:	test   al,al
  406582:	je     0x406a60
  406588:	mov    rcx,r13
  40658b:	call   0x427e20
  406590:	cmp    eax,0x2
  406593:	jbe    0x40654e
  406595:	cmp    eax,0x4
  406598:	ja     0x406540
  40659a:	mov    DWORD PTR [rsp+0x30],eax
  40659e:	mov    rsi,QWORD PTR [rbx+0x20]
  4065a2:	call   0x4060c0
  4065a7:	mov    eax,DWORD PTR [rsp+0x30]
  4065ab:	cmp    eax,0x3
  4065ae:	je     0x4067d0
  4065b4:	test   rsi,rsi
  4065b7:	je     0x406a50
  4065bd:	mov    rcx,r13
  4065c0:	call   0x427f78
  4065c5:	mov    rcx,QWORD PTR [rbx]
  4065c8:	mov    r9,r14
  4065cb:	movsx  r8d,al
  4065cf:	mov    rdx,rsi
  4065d2:	call   0x40da30
  4065d7:	test   al,al
  4065d9:	setne  al
  4065dc:	and    r12d,eax
  4065df:	call   0x406120
  4065e4:	mov    rcx,r13
  4065e7:	call   0x427f68
  4065ec:	mov    rcx,QWORD PTR [rbx]
  4065ef:	mov    r13,QWORD PTR [rsp+0xe0]
  4065f7:	call   0x427eb0
  4065fc:	test   rax,rax
  4065ff:	mov    rsi,rax
  406602:	jne    0x40656b
  406608:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	test   dil,dil
  406613:	mov    r14d,r12d
  406616:	jne    0x406626
  406618:	call   0x406170
  40661d:	mov    r14d,eax
  406620:	test   al,al
  406622:	cmovne r14d,r12d
  406626:	cmp    BYTE PTR [rbx+0x100],0x0
  40662d:	pxor   xmm6,xmm6
  406631:	jne    0x406b63
  406637:	xor    r12d,r12d
  40663a:	test   r14b,r14b
  40663d:	je     0x4068f0
  406643:	test   r13,r13
  406646:	mov    r12d,0x1
  40664c:	je     0x4068f0
  406652:	mov    rcx,r13
  406655:	call   0x427e20
  40665a:	cmp    eax,0x7
  40665d:	ja     0x406b29
  406663:	lea    rdx,[rip+0x28322]        # 0x42e98c
  40666a:	mov    eax,eax
  40666c:	movsxd rax,DWORD PTR [rdx+rax*4]
  406670:	add    rdx,rax
  406673:	jmp    rdx
  406675:	cmp    BYTE PTR [rbx+0x118],0x0
  40667c:	jne    0x4064b0
  406682:	mov    rcx,r13
  406685:	xor    edi,edi
  406687:	call   0x405a50
  40668c:	mov    r14,QWORD PTR [rip+0x56669]        # 0x45ccfc
  406693:	mov    rbp,rax
  406696:	jmp    0x4066ad
  406698:	nop    DWORD PTR [rax+rax*1+0x0]
  4066a0:	mov    edx,DWORD PTR [rbx+0x8]
  4066a3:	mov    rcx,rsi
  4066a6:	call   0x427e88
  4066ab:	add    edi,eax
  4066ad:	movsxd rsi,edi
  4066b0:	add    rsi,rbp
  4066b3:	movzx  ecx,BYTE PTR [rsi]
  4066b6:	call   r14
  4066b9:	test   eax,eax
  4066bb:	jne    0x4066a0
  4066bd:	cmp    edi,0x5
  4066c0:	je     0x40732a
  4066c6:	cmp    edi,0x6
  4066c9:	je     0x4073f5
  4066cf:	cmp    edi,0x3
  4066d2:	je     0x407592
  4066d8:	cmp    edi,0x8
  4066db:	je     0x4075b4
  4066e1:	cmp    edi,0x7
  4066e4:	je     0x406d90
  4066ea:	cmp    edi,0x6
  4066ed:	je     0x407412
  4066f3:	cmp    edi,0x7
  4066f6:	je     0x406dad
  4066fc:	cmp    edi,0x6
  4066ff:	je     0x40742f
  406705:	cmp    edi,0x5
  406708:	je     0x407381
  40670e:	cmp    edi,0x4
  406711:	je     0x406e60
  406717:	cmp    edi,0x7
  40671a:	je     0x406dca
  406720:	mov    rcx,QWORD PTR [rbx]
  406723:	lea    rdx,[rip+0x27ea9]        # 0x42e5d3
  40672a:	call   0x427ef0
  40672f:	mov    rcx,rax
  406732:	mov    rsi,rax
  406735:	call   0x427e20
  40673a:	cmp    eax,0x1
  40673d:	je     0x4075d6
  406743:	mov    rcx,QWORD PTR [rbx]
  406746:	xor    r12d,r12d
  406749:	call   0x427f10
  40674e:	lea    rcx,[rip+0x27d79]        # 0x42e4ce
  406755:	mov    rdx,rax
  406758:	call   0x405d90
  40675d:	mov    rcx,rsi
  406760:	call   0x427f68
  406765:	call   0x406120
  40676a:	nop    WORD PTR [rax+rax*1+0x0]
  406770:	mov    rcx,QWORD PTR [rbx+0xc0]
  406777:	test   rcx,rcx
  40677a:	je     0x40678c
  40677c:	call   0x42a4e8
  406781:	mov    QWORD PTR [rbx+0xc0],0x0
  40678c:	mov    rcx,QWORD PTR [rbx+0xc8]
  406793:	test   rcx,rcx
  406796:	je     0x4067a8
  406798:	call   0x42a4e8
  40679d:	mov    QWORD PTR [rbx+0xc8],0x0
  4067a8:	movaps xmm6,XMMWORD PTR [rsp+0x180]
  4067b0:	mov    eax,r12d
  4067b3:	movaps xmm7,XMMWORD PTR [rsp+0x190]
  4067bb:	add    rsp,0x1a8
  4067c2:	pop    rbx
  4067c3:	pop    rsi
  4067c4:	pop    rdi
  4067c5:	pop    rbp
  4067c6:	pop    r12
  4067c8:	pop    r13
  4067ca:	pop    r14
  4067cc:	pop    r15
  4067ce:	ret    
  4067cf:	nop
  4067d0:	test   rsi,rsi
  4067d3:	je     0x406bf0
  4067d9:	mov    rcx,QWORD PTR [rbx]
  4067dc:	mov    r8,r14
  4067df:	mov    rdx,rsi
  4067e2:	call   0x40d8f0
  4067e7:	test   al,al
  4067e9:	setne  al
  4067ec:	and    r12d,eax
  4067ef:	cmp    rsi,QWORD PTR [rbx+0x10]
  4067f3:	jne    0x4065df
  4067f9:	mov    rcx,QWORD PTR [rsp+0xe0]
  406801:	call   0x427f68
  406806:	mov    QWORD PTR [rsp+0xe0],0x0
  406812:	jmp    0x4065df
  406817:	lea    rdx,[rip+0x27fc0]        # 0x42e7de
  40681e:	mov    r8d,0x6
  406824:	mov    rcx,rsi
  406827:	call   0x427870
  40682c:	test   eax,eax
  40682e:	je     0x40684d
  406830:	lea    rdx,[rip+0x2813f]        # 0x42e976
  406837:	mov    r8d,0x6
  40683d:	mov    rcx,rsi
  406840:	call   0x427870
  406845:	test   eax,eax
  406847:	jne    0x406508
  40684d:	mov    rax,QWORD PTR [rbx+0x10]
  406851:	cmp    BYTE PTR [rbx+0x100],0x0
  406858:	lea    r12,[rsp+0xe0]
  406860:	lea    rsi,[rbx+0x28]
  406864:	mov    ecx,0x13
  406869:	mov    rdi,r12
  40686c:	mov    QWORD PTR [rsp+0x40],rax
  406871:	movzx  eax,BYTE PTR [rbx+0x18]
  406875:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  406878:	mov    BYTE PTR [rsp+0xeb],0x1
  406880:	mov    BYTE PTR [rsp+0xec],0x0
  406888:	mov    DWORD PTR [rsp+0xf0],0x0
  406893:	mov    BYTE PTR [rsp+0x4f],al
  406897:	je     0x4068a4
  406899:	lea    rcx,[rsp+0x50]
  40689e:	call   QWORD PTR [rip+0x56238]        # 0x45cadc
  4068a4:	mov    rcx,QWORD PTR [rbx]
  4068a7:	call   0x427df0
  4068ac:	test   eax,eax
  4068ae:	jne    0x406ef0
  4068b4:	mov    rcx,QWORD PTR [rbx]
  4068b7:	lea    rdx,[rip+0x27d15]        # 0x42e5d3
  4068be:	call   0x427ef0
  4068c3:	mov    rcx,rax
  4068c6:	mov    rsi,rax
  4068c9:	call   0x406230
  4068ce:	test   al,al
  4068d0:	jne    0x407306
  4068d6:	pxor   xmm6,xmm6
  4068da:	mov    rcx,rsi
  4068dd:	xor    r12d,r12d
  4068e0:	call   0x427f68
  4068e5:	xor    r13d,r13d
  4068e8:	call   0x406120
  4068ed:	nop    DWORD PTR [rax]
  4068f0:	test   bpl,bpl
  4068f3:	je     0x406930
  4068f5:	mov    rcx,QWORD PTR [rbx]
  4068f8:	call   0x427df0
  4068fd:	cmp    eax,0x2
  406900:	mov    edx,eax
  406902:	je     0x406c00
  406908:	cmp    eax,0x3
  40690b:	je     0x406ad2
  406911:	test   eax,eax
  406913:	je     0x406930
  406915:	cmp    eax,0x4
  406918:	je     0x4072e5
  40691e:	lea    rcx,[rip+0x27f53]        # 0x42e878
  406925:	xor    r12d,r12d
  406928:	call   0x405d90
  40692d:	nop    DWORD PTR [rax]
  406930:	mov    rcx,r13
  406933:	call   0x427f68
  406938:	cmp    BYTE PTR [rbx+0x100],0x0
  40693f:	jne    0x406bc0
  406945:	mov    esi,DWORD PTR [rbx+0x8]
  406948:	mov    rcx,QWORD PTR [rbx]
  40694b:	call   0x427f60
  406950:	cmp    esi,eax
  406952:	je     0x4069b7
  406954:	mov    rcx,QWORD PTR [rbx]
  406957:	call   0x427f60
  40695c:	test   eax,eax
  40695e:	js     0x4069b7
  406960:	mov    rcx,QWORD PTR [rbx]
  406963:	call   0x427f60
  406968:	mov    ecx,eax
  40696a:	mov    DWORD PTR [rbx+0x8],eax
  40696d:	mov    DWORD PTR [rbx+0x78],eax
  406970:	call   0x427d80
  406975:	mov    rcx,QWORD PTR [rbx+0x110]
  40697c:	lea    rdx,[rip+0x27f28]        # 0x42e8ab
  406983:	mov    r8,rax
  406986:	call   0x40ef10
  40698b:	jmp    0x4069b7
  40698d:	nop    DWORD PTR [rax]
  406990:	mov    eax,DWORD PTR [rsi+0x8]
  406993:	lea    rdx,[rip+0x27f1e]        # 0x42e8b8
  40699a:	mov    DWORD PTR [rsp+0x20],eax
  40699e:	mov    r8,QWORD PTR [rsi]
  4069a1:	call   0x426370
  4069a6:	mov    rcx,QWORD PTR [rbx+0x10]
  4069aa:	call   0x42a520
  4069af:	mov    rcx,rsi
  4069b2:	call   0x427ed0
  4069b7:	mov    rcx,QWORD PTR [rbx]
  4069ba:	call   0x427e78
  4069bf:	test   rax,rax
  4069c2:	mov    rsi,rax
  4069c5:	je     0x406770
  4069cb:	mov    r9,QWORD PTR [rsi+0x10]
  4069cf:	mov    rcx,QWORD PTR [rbx+0x10]
  4069d3:	cmp    BYTE PTR [r9],0x0
  4069d7:	jne    0x406990
  4069d9:	mov    r9d,DWORD PTR [rsi+0x8]
  4069dd:	mov    r8,QWORD PTR [rsi]
  4069e0:	lea    rdx,[rip+0x27f31]        # 0x42e918
  4069e7:	call   0x426370
  4069ec:	jmp    0x4069a6
  4069ee:	xchg   ax,ax
  4069f0:	mov    rdx,rcx
  4069f3:	lea    rcx,[rip+0x27c46]        # 0x42e640
  4069fa:	call   0x4263a0
  4069ff:	mov    rsi,QWORD PTR [rip+0x561ae]        # 0x45cbb4
  406a06:	call   rsi
  406a08:	lea    rcx,[rax+0x30]
  406a0c:	call   0x42a520
  406a11:	call   rsi
  406a13:	lea    rcx,[rsp+0xe0]
  406a1b:	mov    r8,rax
  406a1e:	mov    edx,0x3
  406a23:	call   0x42a518
  406a28:	test   rax,rax
  406a2b:	je     0x406461
  406a31:	xor    r12d,r12d
  406a34:	cmp    BYTE PTR [rsp+0xe0],0x78
  406a3c:	jne    0x406461
  406a42:	jmp    0x406770
  406a47:	nop    WORD PTR [rax+rax*1+0x0]
  406a50:	mov    rsi,QWORD PTR [rbx+0xd8]
  406a57:	jmp    0x4065bd
  406a5c:	nop    DWORD PTR [rax+0x0]
  406a60:	xor    r12d,r12d
  406a63:	jmp    0x406610
  406a68:	nop    DWORD PTR [rax+rax*1+0x0]
  406a70:	cmp    BYTE PTR [rbx+0xe0],0x0
  406a77:	jne    0x406a82
  406a79:	cmp    eax,0x2
  406a7c:	jne    0x4064b0
  406a82:	cmp    BYTE PTR [rip+0x535b8],0x0        # 0x45a041
  406a89:	jne    0x406a9d
  406a8b:	mov    ecx,DWORD PTR [rbx+0xe4]
  406a91:	cmp    ecx,0x1387f
  406a97:	jle    0x406d33
  406a9d:	mov    rcx,QWORD PTR [rbx]
  406aa0:	lea    rdx,[rip+0x27d11]        # 0x42e7b8
  406aa7:	call   0x427ef0
  406aac:	mov    rcx,rax
  406aaf:	mov    rsi,rax
  406ab2:	call   0x427e20
  406ab7:	cmp    eax,0x1
  406aba:	jne    0x406743
  406ac0:	mov    rcx,rsi
  406ac3:	mov    ebp,0x1
  406ac8:	call   0x427f68
  406acd:	jmp    0x4064b2
  406ad2:	lea    rdx,[rip+0x27b3f]        # 0x42e618
  406ad9:	mov    rcx,QWORD PTR [rbx]
  406adc:	call   0x427ef0
  406ae1:	mov    rcx,rax
  406ae4:	mov    rsi,rax
  406ae7:	call   0x427e20
  406aec:	cmp    eax,0x1
  406aef:	je     0x406c89
  406af5:	mov    rcx,QWORD PTR [rbx]
  406af8:	xor    r12d,r12d
  406afb:	call   0x427f10
  406b00:	lea    rcx,[rip+0x279c7]        # 0x42e4ce
  406b07:	mov    rdx,rax
  406b0a:	call   0x405d90
  406b0f:	mov    rcx,rsi
  406b12:	call   0x427f68
  406b17:	mov    rcx,r13
  406b1a:	call   0x427f68
  406b1f:	call   0x406120
  406b24:	jmp    0x406770
  406b29:	mov    rcx,r13
  406b2c:	call   0x427e20
  406b31:	lea    rcx,[rip+0x27a10]        # 0x42e548
  406b38:	mov    edx,eax
  406b3a:	call   0x405d90
  406b3f:	xor    r12d,r12d
  406b42:	mov    rcx,QWORD PTR [rbx+0x10]
  406b46:	call   0x42a520
  406b4b:	jmp    0x4068f0
  406b50:	lea    rcx,[rsp+0x80]
  406b58:	call   QWORD PTR [rip+0x55f7e]        # 0x45cadc
  406b5e:	jmp    0x406515
  406b63:	lea    rcx,[rsp+0xa0]
  406b6b:	pxor   xmm6,xmm6
  406b6f:	call   QWORD PTR [rip+0x55f67]        # 0x45cadc
  406b75:	mov    rsi,QWORD PTR [rsp+0xa0]
  406b7d:	sub    rsi,QWORD PTR [rsp+0x80]
  406b85:	lea    rcx,[rsp+0xe0]
  406b8d:	mov    QWORD PTR [rsp+0xa0],rsi
  406b95:	call   QWORD PTR [rip+0x55f49]        # 0x45cae4
  406b9b:	cvtsi2sd xmm6,rsi
  406ba0:	pxor   xmm0,xmm0
  406ba4:	cvtsi2sd xmm0,QWORD PTR [rsp+0xe0]
  406bae:	mulsd  xmm6,QWORD PTR [rip+0x27e42]        # 0x42e9f8
  406bb6:	divsd  xmm6,xmm0
  406bba:	jmp    0x406637
  406bbf:	nop
  406bc0:	movapd xmm1,xmm6
  406bc4:	movq   rdx,xmm6
  406bc9:	lea    rcx,[rip+0x27ccc]        # 0x42e89c
  406bd0:	call   0x4263a0
  406bd5:	jmp    0x406945
  406bda:	nop    WORD PTR [rax+rax*1+0x0]
  406be0:	mov    r14d,r12d
  406be3:	jmp    0x406626
  406be8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bf0:	mov    rsi,QWORD PTR [rbx+0x10]
  406bf4:	jmp    0x4067d9
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	test   r13,r13
  406c03:	je     0x406c62
  406c05:	mov    rcx,r13
  406c08:	lea    rdi,[rip+0x27c57]        # 0x42e866
  406c0f:	call   0x427f58
  406c14:	mov    ecx,0xa
  406c19:	mov    rsi,rax
  406c1c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c1e:	je     0x406930
  406c24:	mov    rcx,r13
  406c27:	lea    rdi,[rip+0x27c42]        # 0x42e870
  406c2e:	call   0x427f58
  406c33:	mov    ecx,0x8
  406c38:	mov    rsi,rax
  406c3b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c3d:	je     0x406930
  406c43:	mov    rcx,r13
  406c46:	lea    rdi,[rip+0x27993]        # 0x42e5e0
  406c4d:	call   0x427f58
  406c52:	mov    ecx,0x9
  406c57:	mov    rsi,rax
  406c5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c5c:	je     0x406930
  406c62:	lea    rdx,[rip+0x27987]        # 0x42e5f0
  406c69:	jmp    0x406ad9
  406c6e:	xchg   ax,ax
  406c70:	call   0x42a468
  406c75:	call   QWORD PTR [rip+0x55f39]        # 0x45cbb4
  406c7b:	lea    rcx,[rax+0x30]
  406c7f:	call   0x42a520
  406c84:	jmp    0x406461
  406c89:	mov    rcx,rsi
  406c8c:	call   0x427f68
  406c91:	jmp    0x406930
  406c96:	lea    rcx,[rip+0x278cb]        # 0x42e568
  406c9d:	xor    r12d,r12d
  406ca0:	call   0x405d90
  406ca5:	jmp    0x406770
  406caa:	mov    r12d,0x1
  406cb0:	jmp    0x406b42
  406cb5:	mov    rcx,r13
  406cb8:	mov    r12d,0x1
  406cbe:	call   0x405b60
  406cc3:	jmp    0x406b42
  406cc8:	cmp    QWORD PTR [rbx+0xc8],0x0
  406cd0:	je     0x407663
  406cd6:	mov    rcx,r13
  406cd9:	call   0x405f60
  406cde:	mov    r12d,eax
  406ce1:	mov    rcx,r13
  406ce4:	lea    rdi,[rip+0x27afa]        # 0x42e7e5
  406ceb:	call   0x427f58
  406cf0:	mov    ecx,0x6
  406cf5:	mov    rsi,rax
  406cf8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406cfa:	je     0x406d26
  406cfc:	lea    rdi,[rip+0x27ae9]        # 0x42e7ec
  406d03:	mov    ecx,0x6
  406d08:	mov    rsi,rax
  406d0b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d0d:	je     0x406d26
  406d0f:	lea    rdi,[rip+0x27add]        # 0x42e7f3
  406d16:	mov    ecx,0x6
  406d1b:	mov    rsi,rax
  406d1e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d20:	jne    0x406b42
  406d26:	mov    rcx,r13
  406d29:	call   0x405b60
  406d2e:	jmp    0x406b42
  406d33:	mov    r9d,0x51eb851f
  406d39:	mov    eax,ecx
  406d3b:	mov    r10d,ecx
  406d3e:	imul   r9d
  406d41:	sar    r10d,0x1f
  406d45:	sar    edx,0x5
  406d48:	sub    edx,r10d
  406d4b:	mov    eax,edx
  406d4d:	mov    r8d,edx
  406d50:	imul   r9d
  406d53:	mov    eax,r8d
  406d56:	sar    eax,0x1f
  406d59:	sar    edx,0x5
  406d5c:	mov    r9d,edx
  406d5f:	mov    edx,0x68db8bad
  406d64:	sub    r9d,eax
  406d67:	mov    eax,ecx
  406d69:	lea    rcx,[rip+0x279f8]        # 0x42e768
  406d70:	imul   edx
  406d72:	imul   r9d,r9d,0x64
  406d76:	sar    edx,0xc
  406d79:	sub    edx,r10d
  406d7c:	sub    r8d,r9d
  406d7f:	call   0x405d90
  406d84:	mov    BYTE PTR [rip+0x532b6],0x1        # 0x45a041
  406d8b:	jmp    0x4064b0
  406d90:	lea    rdx,[rip+0x27969]        # 0x42e700
  406d97:	mov    r8d,0x7
  406d9d:	mov    rcx,rbp
  406da0:	call   0x427870
  406da5:	test   eax,eax
  406da7:	je     0x407737
  406dad:	lea    rdx,[rip+0x27bc9]        # 0x42e97d
  406db4:	mov    r8d,0x7
  406dba:	mov    rcx,rbp
  406dbd:	call   0x427870
  406dc2:	test   eax,eax
  406dc4:	je     0x40771c
  406dca:	lea    rdx,[rip+0x2798a]        # 0x42e75b
  406dd1:	mov    r8d,0x7
  406dd7:	mov    rcx,rbp
  406dda:	call   0x427870
  406ddf:	test   eax,eax
  406de1:	je     0x406e7d
  406de7:	lea    rdx,[rip+0x27b80]        # 0x42e96e
  406dee:	mov    r8d,0x7
  406df4:	mov    rcx,rbp
  406df7:	call   0x427870
  406dfc:	test   eax,eax
  406dfe:	jne    0x406720
  406e04:	mov    rcx,rsi
  406e07:	xor    edi,edi
  406e09:	call   0x405a50
  406e0e:	mov    rbp,rax
  406e11:	jmp    0x406e20
  406e13:	mov    edx,DWORD PTR [rbx+0x8]
  406e16:	mov    rcx,rsi
  406e19:	call   0x427e88
  406e1e:	add    edi,eax
  406e20:	movsxd rsi,edi
  406e23:	add    rsi,rbp
  406e26:	movzx  ecx,BYTE PTR [rsi]
  406e29:	call   r14
  406e2c:	test   eax,eax
  406e2e:	jne    0x406e13
  406e30:	cmp    edi,0x3
  406e33:	jne    0x406720
  406e39:	lea    rdx,[rip+0x27923]        # 0x42e763
  406e40:	mov    r8d,0x3
  406e46:	mov    rcx,rbp
  406e49:	call   0x427870
  406e4e:	test   eax,eax
  406e50:	jne    0x406720
  406e56:	jmp    0x4064b0
  406e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e60:	lea    rdx,[rip+0x278ef]        # 0x42e756
  406e67:	mov    r8d,0x4
  406e6d:	mov    rcx,rbp
  406e70:	call   0x427870
  406e75:	test   eax,eax
  406e77:	jne    0x406720
  406e7d:	mov    rcx,rsi
  406e80:	xor    edi,edi
  406e82:	call   0x405a50
  406e87:	mov    rbp,rax
  406e8a:	jmp    0x406e9d
  406e8c:	nop    DWORD PTR [rax+0x0]
  406e90:	mov    edx,DWORD PTR [rbx+0x8]
  406e93:	mov    rcx,rsi
  406e96:	call   0x427e88
  406e9b:	add    edi,eax
  406e9d:	movsxd rsi,edi
  406ea0:	add    rsi,rbp
  406ea3:	movzx  ecx,BYTE PTR [rsi]
  406ea6:	call   r14
  406ea9:	test   eax,eax
  406eab:	jne    0x406e90
  406ead:	cmp    edi,0x8
  406eb0:	je     0x4077bb
  406eb6:	cmp    edi,0x6
  406eb9:	je     0x4073d3
  406ebf:	cmp    edi,0xa
  406ec2:	jne    0x406720
  406ec8:	lea    rdx,[rip+0x27855]        # 0x42e724
  406ecf:	mov    r8d,0xa
  406ed5:	mov    rcx,rbp
  406ed8:	call   0x427870
  406edd:	test   eax,eax
  406edf:	je     0x4064b0
  406ee5:	jmp    0x406720
  406eea:	nop    WORD PTR [rax+rax*1+0x0]
  406ef0:	xor    r14d,r14d
  406ef3:	lea    rsi,[rsp+0x80]
  406efb:	mov    rcx,rsi
  406efe:	call   0x427da8
  406f03:	lea    rdx,[rip+0x278f6]        # 0x42e800
  406f0a:	mov    r8,r13
  406f0d:	mov    rcx,rsi
  406f10:	call   0x427dd8
  406f15:	mov    rdx,QWORD PTR [rsp+0x80]
  406f1d:	mov    rcx,QWORD PTR [rbx]
  406f20:	call   0x427ef0
  406f25:	mov    rcx,rax
  406f28:	mov    rdi,rax
  406f2b:	call   0x406230
  406f30:	test   al,al
  406f32:	jne    0x407145
  406f38:	pxor   xmm6,xmm6
  406f3c:	mov    rcx,rdi
  406f3f:	call   0x427f68
  406f44:	mov    rcx,rsi
  406f47:	call   0x427d60
  406f4c:	cmp    BYTE PTR [rbx+0x100],0x0
  406f53:	jne    0x4072d3
  406f59:	mov    rcx,QWORD PTR [rbx]
  406f5c:	lea    rdx,[rip+0x278f0]        # 0x42e853
  406f63:	call   0x427ef0
  406f68:	mov    rsi,rax
  406f6b:	mov    rcx,rsi
  406f6e:	call   0x427f68
  406f73:	test   r14b,r14b
  406f76:	je     0x40713d
  406f7c:	lea    rdx,[rip+0x2765d]        # 0x42e5e0
  406f83:	xor    esi,esi
  406f85:	mov    rcx,QWORD PTR [rbx]
  406f88:	xor    r12d,r12d
  406f8b:	call   0x427ef0
  406f90:	mov    rcx,rax
  406f93:	mov    rdi,rax
  406f96:	call   0x406230
  406f9b:	test   al,al
  406f9d:	jne    0x407520
  406fa3:	mov    rcx,rdi
  406fa6:	call   0x427f68
  406fab:	cmp    BYTE PTR [rbx+0x100],0x0
  406fb2:	je     0x4068e5
  406fb8:	lea    rcx,[rsp+0x60]
  406fbd:	call   QWORD PTR [rip+0x55b19]        # 0x45cadc
  406fc3:	mov    rsi,QWORD PTR [rsp+0x60]
  406fc8:	sub    rsi,QWORD PTR [rsp+0x50]
  406fcd:	lea    rcx,[rsp+0x70]
  406fd2:	mov    QWORD PTR [rsp+0x60],rsi
  406fd7:	call   QWORD PTR [rip+0x55b07]        # 0x45cae4
  406fdd:	pxor   xmm0,xmm0
  406fe1:	pxor   xmm1,xmm1
  406fe5:	cvtsi2sd xmm0,rsi
  406fea:	cvtsi2sd xmm1,QWORD PTR [rsp+0x70]
  406ff1:	mulsd  xmm0,QWORD PTR [rip+0x279ff]        # 0x42e9f8
  406ff9:	divsd  xmm0,xmm1
  406ffd:	addsd  xmm6,xmm0
  407001:	jmp    0x4068e5
  407006:	mov    rcx,QWORD PTR [rbx+0x10]
  40700a:	call   0x42a548
  40700f:	mov    rax,QWORD PTR [rip+0x55ac6]        # 0x45cadc
  407016:	movsd  xmm7,QWORD PTR [rip+0x279da]        # 0x42e9f8
  40701e:	mov    BYTE PTR [rsp+0x4e],0x0
  407023:	mov    QWORD PTR [rsp+0x38],rax
  407028:	nop    DWORD PTR [rax+rax*1+0x0]
  407030:	cmp    BYTE PTR [rbx+0x100],0x0
  407037:	jne    0x4071ef
  40703d:	mov    rcx,QWORD PTR [rbx]
  407040:	mov    rdx,r13
  407043:	call   0x427ef0
  407048:	cmp    BYTE PTR [rbx+0x100],0x0
  40704f:	mov    rsi,rax
  407052:	jne    0x4071ff
  407058:	mov    rcx,rsi
  40705b:	call   0x427e20
  407060:	cmp    eax,0x2
  407063:	jne    0x4076c2
  407069:	cmp    QWORD PTR [rbx+0xc8],0x0
  407071:	mov    rcx,rsi
  407074:	jne    0x407708
  40707a:	call   0x427e70
  40707f:	cmp    edi,eax
  407081:	mov    r15d,eax
  407084:	jle    0x40724a
  40708a:	mov    r9,QWORD PTR [rbx+0x108]
  407091:	mov    r8,QWORD PTR [rbx+0x10]
  407095:	mov    rdx,r12
  407098:	mov    rcx,rsi
  40709b:	mov    BYTE PTR [rsp+0xec],0x1
  4070a3:	mov    edi,0x1
  4070a8:	call   0x4141a0
  4070ad:	mov    rcx,rsi
  4070b0:	call   0x427f68
  4070b5:	mov    rcx,QWORD PTR [rbx+0x10]
  4070b9:	mov    BYTE PTR [rsp+0xeb],0x0
  4070c1:	add    DWORD PTR [rsp+0xf0],r15d
  4070c9:	call   0x42a520
  4070ce:	cmp    QWORD PTR [rbx+0xc0],0x0
  4070d6:	je     0x4075eb
  4070dc:	xor    ecx,ecx
  4070de:	call   0x405e50
  4070e3:	mov    rax,QWORD PTR [rsp+0x40]
  4070e8:	mov    QWORD PTR [rbx+0x10],rax
  4070ec:	movzx  eax,BYTE PTR [rsp+0x4f]
  4070f1:	mov    BYTE PTR [rbx+0x18],al
  4070f4:	cmp    BYTE PTR [rbx+0x100],0x0
  4070fb:	jne    0x4072d5
  407101:	mov    rcx,QWORD PTR [rbx]
  407104:	lea    rdx,[rip+0x27748]        # 0x42e853
  40710b:	call   0x427ef0
  407110:	test   dil,dil
  407113:	mov    rsi,rax
  407116:	je     0x406f6b
  40711c:	mov    rcx,rax
  40711f:	call   0x406230
  407124:	test   al,al
  407126:	mov    rcx,rsi
  407129:	jne    0x407615
  40712f:	call   0x427f68
  407134:	test   r14b,r14b
  407137:	jne    0x406f7c
  40713d:	xor    r12d,r12d
  407140:	jmp    0x406fab
  407145:	mov    rcx,rdi
  407148:	call   0x427e20
  40714d:	cmp    eax,0x1
  407150:	jne    0x406f38
  407156:	mov    rcx,rdi
  407159:	call   0x427f68
  40715e:	mov    rcx,rsi
  407161:	call   0x427d60
  407166:	cmp    BYTE PTR [rbx+0x100],0x0
  40716d:	jne    0x407537
  407173:	pxor   xmm6,xmm6
  407177:	lea    r13,[rsp+0xa0]
  40717f:	cmp    QWORD PTR [rbx+0xc8],0x0
  407187:	mov    edi,0x2
  40718c:	je     0x407658
  407192:	lea    r8,[rip+0x27697]        # 0x42e830
  407199:	mov    r9d,edi
  40719c:	mov    edx,0x40
  4071a1:	mov    rcx,r13
  4071a4:	call   0x426220
  4071a9:	cmp    QWORD PTR [rbx+0xc0],0x0
  4071b1:	je     0x407006
  4071b7:	call   QWORD PTR [rip+0x559f7]        # 0x45cbb4
  4071bd:	mov    rcx,QWORD PTR [rbx+0xc0]
  4071c4:	add    rax,0x30
  4071c8:	mov    QWORD PTR [rbx+0x10],rax
  4071cc:	call   0x405e50
  4071d1:	test   al,al
  4071d3:	jne    0x407006
  4071d9:	mov    rax,QWORD PTR [rsp+0x40]
  4071de:	mov    QWORD PTR [rbx+0x10],rax
  4071e2:	movzx  eax,BYTE PTR [rsp+0x4f]
  4071e7:	mov    BYTE PTR [rbx+0x18],al
  4071ea:	jmp    0x406f4c
  4071ef:	lea    rcx,[rsp+0x50]
  4071f4:	call   QWORD PTR [rip+0x558e2]        # 0x45cadc
  4071fa:	jmp    0x40703d
  4071ff:	lea    rcx,[rsp+0x60]
  407204:	mov    rax,QWORD PTR [rsp+0x38]
  407209:	call   rax
  40720b:	mov    r15,QWORD PTR [rsp+0x60]
  407210:	sub    r15,QWORD PTR [rsp+0x50]
  407215:	lea    rcx,[rsp+0x70]
  40721a:	mov    QWORD PTR [rsp+0x60],r15
  40721f:	call   QWORD PTR [rip+0x558bf]        # 0x45cae4
  407225:	pxor   xmm0,xmm0
  407229:	pxor   xmm1,xmm1
  40722d:	cvtsi2sd xmm0,r15
  407232:	cvtsi2sd xmm1,QWORD PTR [rsp+0x70]
  407239:	mulsd  xmm0,xmm7
  40723d:	divsd  xmm0,xmm1
  407241:	addsd  xmm6,xmm0
  407245:	jmp    0x407058
  40724a:	mov    rax,QWORD PTR [rbx+0x10]
  40724e:	mov    QWORD PTR [rsp+0x30],rax
  407253:	call   QWORD PTR [rip+0x5595b]        # 0x45cbb4
  407259:	add    rax,0x30
  40725d:	cmp    QWORD PTR [rsp+0x30],rax
  407262:	jne    0x40726f
  407264:	cmp    BYTE PTR [rsp+0x4e],0x0
  407269:	je     0x407798
  40726f:	mov    r8,QWORD PTR [rbx+0x10]
  407273:	mov    r9,QWORD PTR [rbx+0x108]
  40727a:	mov    rdx,r12
  40727d:	mov    rcx,rsi
  407280:	call   0x4141a0
  407285:	mov    rcx,rsi
  407288:	call   0x427f68
  40728d:	mov    rcx,QWORD PTR [rbx+0x10]
  407291:	add    DWORD PTR [rsp+0xf0],r15d
  407299:	mov    BYTE PTR [rsp+0xeb],0x0
  4072a1:	call   0x42a520
  4072a6:	mov    rdx,QWORD PTR [rip+0x4d563]        # 0x454810
  4072ad:	test   eax,eax
  4072af:	movzx  edx,BYTE PTR [rdx]
  4072b2:	jne    0x4072c9
  4072b4:	test   dl,dl
  4072b6:	jne    0x4072c9
  4072b8:	mov    rcx,QWORD PTR [rbx+0x10]
  4072bc:	call   0x42a528
  4072c1:	test   eax,eax
  4072c3:	je     0x407030
  4072c9:	mov    edi,0x1
  4072ce:	jmp    0x4070ce
  4072d3:	xor    edi,edi
  4072d5:	lea    rcx,[rsp+0x50]
  4072da:	call   QWORD PTR [rip+0x557fc]        # 0x45cadc
  4072e0:	jmp    0x407101
  4072e5:	mov    rcx,QWORD PTR [rbx]
  4072e8:	mov    DWORD PTR [rsp+0x30],eax
  4072ec:	xor    r12d,r12d
  4072ef:	call   0x427df8
  4072f4:	cmp    eax,0x1
  4072f7:	mov    edx,DWORD PTR [rsp+0x30]
  4072fb:	jne    0x40691e
  407301:	jmp    0x406930
  407306:	mov    rcx,rsi
  407309:	call   0x427e20
  40730e:	cmp    eax,0x1
  407311:	jne    0x4068d6
  407317:	mov    rcx,rsi
  40731a:	mov    r14d,0x1
  407320:	call   0x427f68
  407325:	jmp    0x406ef3
  40732a:	lea    rdx,[rip+0x273b5]        # 0x42e6e6
  407331:	mov    r8d,0x5
  407337:	mov    rcx,rbp
  40733a:	call   0x427870
  40733f:	test   eax,eax
  407341:	je     0x4064b0
  407347:	lea    rdx,[rip+0x27614]        # 0x42e962
  40734e:	mov    r8d,0x5
  407354:	mov    rcx,rbp
  407357:	call   0x427870
  40735c:	test   eax,eax
  40735e:	je     0x4064b0
  407364:	lea    rdx,[rip+0x275fd]        # 0x42e968
  40736b:	mov    r8d,0x5
  407371:	mov    rcx,rbp
  407374:	call   0x427870
  407379:	test   eax,eax
  40737b:	je     0x4064b0
  407381:	lea    rdx,[rip+0x273c1]        # 0x42e749
  407388:	mov    r8d,0x5
  40738e:	mov    rcx,rbp
  407391:	call   0x427870
  407396:	test   eax,eax
  407398:	jne    0x406720
  40739e:	mov    rcx,rsi
  4073a1:	xor    edi,edi
  4073a3:	call   0x405a50
  4073a8:	mov    rbp,rax
  4073ab:	jmp    0x4073ba
  4073ad:	mov    edx,DWORD PTR [rbx+0x8]
  4073b0:	mov    rcx,rsi
  4073b3:	call   0x427e88
  4073b8:	add    edi,eax
  4073ba:	movsxd rsi,edi
  4073bd:	add    rsi,rbp
  4073c0:	movzx  ecx,BYTE PTR [rsi]
  4073c3:	call   r14
  4073c6:	test   eax,eax
  4073c8:	jne    0x4073ad
  4073ca:	cmp    edi,0x6
  4073cd:	jne    0x406720
  4073d3:	lea    rdx,[rip+0x27375]        # 0x42e74f
  4073da:	mov    r8d,0x6
  4073e0:	mov    rcx,rbp
  4073e3:	call   0x427870
  4073e8:	test   eax,eax
  4073ea:	jne    0x406720
  4073f0:	jmp    0x4064b0
  4073f5:	lea    rdx,[rip+0x272f0]        # 0x42e6ec
  4073fc:	mov    r8d,0x6
  407402:	mov    rcx,rbp
  407405:	call   0x427870
  40740a:	test   eax,eax
  40740c:	je     0x4064b0
  407412:	lea    rdx,[rip+0x272fb]        # 0x42e714
  407419:	mov    r8d,0x6
  40741f:	mov    rcx,rbp
  407422:	call   0x427870
  407427:	test   eax,eax
  407429:	je     0x4064b0
  40742f:	lea    rdx,[rip+0x2754f]        # 0x42e985
  407436:	mov    r8d,0x6
  40743c:	mov    rcx,rbp
  40743f:	call   0x427870
  407444:	test   eax,eax
  407446:	jne    0x406720
  40744c:	mov    rcx,rsi
  40744f:	xor    edi,edi
  407451:	call   0x405a50
  407456:	mov    rbp,rax
  407459:	jmp    0x407468
  40745b:	mov    edx,DWORD PTR [rbx+0x8]
  40745e:	mov    rcx,rsi
  407461:	call   0x427e88
  407466:	add    edi,eax
  407468:	movsxd rsi,edi
  40746b:	add    rsi,rbp
  40746e:	movzx  ecx,BYTE PTR [rsi]
  407471:	call   r14
  407474:	test   eax,eax
  407476:	jne    0x40745b
  407478:	cmp    edi,0x8
  40747b:	je     0x4077bb
  407481:	cmp    edi,0xa
  407484:	je     0x406ec8
  40748a:	cmp    edi,0x6
  40748d:	je     0x40782e
  407493:	cmp    edi,0x5
  407496:	jne    0x406720
  40749c:	lea    rdx,[rip+0x27293]        # 0x42e736
  4074a3:	mov    r8d,0x5
  4074a9:	mov    rcx,rbp
  4074ac:	call   0x427870
  4074b1:	test   eax,eax
  4074b3:	jne    0x406720
  4074b9:	lea    rcx,[rbp+0x5]
  4074bd:	xor    esi,esi
  4074bf:	call   0x405a50
  4074c4:	mov    rbp,rax
  4074c7:	jmp    0x4074dd
  4074c9:	nop    DWORD PTR [rax+0x0]
  4074d0:	mov    edx,DWORD PTR [rbx+0x8]
  4074d3:	mov    rcx,rdi
  4074d6:	call   0x427e88
  4074db:	add    esi,eax
  4074dd:	movsxd rdi,esi
  4074e0:	add    rdi,rbp
  4074e3:	movzx  ecx,BYTE PTR [rdi]
  4074e6:	call   r14
  4074e9:	test   eax,eax
  4074eb:	jne    0x4074d0
  4074ed:	cmp    esi,0xc
  4074f0:	jne    0x406720
  4074f6:	lea    rdx,[rip+0x2723f]        # 0x42e73c
  4074fd:	mov    r8d,0xc
  407503:	mov    rcx,rbp
  407506:	call   0x427870
  40750b:	test   eax,eax
  40750d:	je     0x4064b0
  407513:	jmp    0x406720
  407518:	nop    DWORD PTR [rax+rax*1+0x0]
  407520:	mov    rcx,rdi
  407523:	call   0x427e20
  407528:	cmp    eax,0x1
  40752b:	sete   r12b
  40752f:	and    r12d,esi
  407532:	jmp    0x406fa3
  407537:	lea    rcx,[rsp+0x60]
  40753c:	pxor   xmm6,xmm6
  407540:	call   QWORD PTR [rip+0x55596]        # 0x45cadc
  407546:	mov    rsi,QWORD PTR [rsp+0x60]
  40754b:	sub    rsi,QWORD PTR [rsp+0x50]
  407550:	lea    r13,[rsp+0xa0]
  407558:	mov    rcx,r13
  40755b:	mov    QWORD PTR [rsp+0x60],rsi
  407560:	call   QWORD PTR [rip+0x5557e]        # 0x45cae4
  407566:	cvtsi2sd xmm6,rsi
  40756b:	pxor   xmm0,xmm0
  40756f:	cvtsi2sd xmm0,QWORD PTR [rsp+0xa0]
  407579:	mulsd  xmm6,QWORD PTR [rip+0x27477]        # 0x42e9f8
  407581:	divsd  xmm6,xmm0
  407585:	addsd  xmm6,QWORD PTR [rip+0x27463]        # 0x42e9f0
  40758d:	jmp    0x40717f
  407592:	lea    rdx,[rip+0x2715a]        # 0x42e6f3
  407599:	mov    r8d,0x3
  40759f:	mov    rcx,rbp
  4075a2:	call   0x427870
  4075a7:	test   eax,eax
  4075a9:	jne    0x406720
  4075af:	jmp    0x4064b0
  4075b4:	lea    rdx,[rip+0x2713c]        # 0x42e6f7
  4075bb:	mov    r8d,0x8
  4075c1:	mov    rcx,rbp
  4075c4:	call   0x427870
  4075c9:	test   eax,eax
  4075cb:	jne    0x406720
  4075d1:	jmp    0x4064b0
  4075d6:	mov    rcx,rsi
  4075d9:	call   0x427f68
  4075de:	mov    rcx,QWORD PTR [rbx]
  4075e1:	call   0x427df0
  4075e6:	jmp    0x40649d
  4075eb:	cmp    BYTE PTR [rsp+0x4e],0x0
  4075f0:	je     0x4070f4
  4075f6:	mov    rcx,QWORD PTR [rbx+0x10]
  4075fa:	call   0x410290
  4075ff:	mov    rax,QWORD PTR [rsp+0x40]
  407604:	mov    QWORD PTR [rbx+0x10],rax
  407608:	movzx  eax,BYTE PTR [rsp+0x4f]
  40760d:	mov    BYTE PTR [rbx+0x18],al
  407610:	jmp    0x4070f4
  407615:	call   0x427e20
  40761a:	mov    rcx,rsi
  40761d:	cmp    eax,0x1
  407620:	sete   dil
  407624:	call   0x427f68
  407629:	test   r14b,r14b
  40762c:	mov    r12d,edi
  40762f:	je     0x406fab
  407635:	cmp    dil,0x1
  407639:	lea    rdx,[rip+0x26fa0]        # 0x42e5e0
  407640:	lea    rax,[rip+0x26f92]        # 0x42e5d9
  407647:	sbb    esi,esi
  407649:	add    esi,0x1
  40764c:	test   dil,dil
  40764f:	cmovne rdx,rax
  407653:	jmp    0x406f85
  407658:	mov    edi,DWORD PTR [rbx+0x120]
  40765e:	jmp    0x407192
  407663:	cmp    QWORD PTR [rbx+0xc0],0x0
  40766b:	lea    r12,[rsp+0xe0]
  407673:	lea    rsi,[rbx+0x28]
  407677:	mov    ecx,0x13
  40767c:	mov    rdi,r12
  40767f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  407682:	je     0x40780d
  407688:	mov    rdi,QWORD PTR [rbx+0x10]
  40768c:	movzx  esi,BYTE PTR [rbx+0x18]
  407690:	call   QWORD PTR [rip+0x5551e]        # 0x45cbb4
  407696:	mov    rcx,QWORD PTR [rbx+0xc0]
  40769d:	add    rax,0x30
  4076a1:	mov    QWORD PTR [rbx+0x10],rax
  4076a5:	call   0x405e50
  4076aa:	test   al,al
  4076ac:	jne    0x4077dd
  4076b2:	mov    QWORD PTR [rbx+0x10],rdi
  4076b6:	mov    BYTE PTR [rbx+0x18],sil
  4076ba:	xor    r12d,r12d
  4076bd:	jmp    0x406ce1
  4076c2:	cmp    BYTE PTR [rsp+0x4e],0x0
  4076c7:	je     0x4076e3
  4076c9:	mov    rcx,QWORD PTR [rbx+0x10]
  4076cd:	call   0x410290
  4076d2:	mov    rax,QWORD PTR [rsp+0x40]
  4076d7:	mov    QWORD PTR [rbx+0x10],rax
  4076db:	movzx  eax,BYTE PTR [rsp+0x4f]
  4076e0:	mov    BYTE PTR [rbx+0x18],al
  4076e3:	mov    rcx,rsi
  4076e6:	call   0x406230
  4076eb:	mov    rcx,rsi
  4076ee:	mov    edi,eax
  4076f0:	call   0x427f68
  4076f5:	cmp    QWORD PTR [rbx+0xc0],0x0
  4076fd:	jne    0x4070dc
  407703:	jmp    0x4070f4
  407708:	call   0x405f60
  40770d:	mov    rcx,rsi
  407710:	mov    edi,eax
  407712:	call   0x427f68
  407717:	jmp    0x4070ce
  40771c:	mov    rcx,rsi
  40771f:	call   0x405a50
  407724:	movzx  ecx,BYTE PTR [rax]
  407727:	call   r14
  40772a:	test   eax,eax
  40772c:	jne    0x406720
  407732:	jmp    0x4064b0
  407737:	mov    rcx,rsi
  40773a:	xor    dil,dil
  40773d:	call   0x405a50
  407742:	mov    rbp,rax
  407745:	jmp    0x40775d
  407747:	nop    WORD PTR [rax+rax*1+0x0]
  407750:	mov    edx,DWORD PTR [rbx+0x8]
  407753:	mov    rcx,rsi
  407756:	call   0x427e88
  40775b:	add    edi,eax
  40775d:	movsxd rsi,edi
  407760:	add    rsi,rbp
  407763:	movzx  ecx,BYTE PTR [rsi]
  407766:	call   r14
  407769:	test   eax,eax
  40776b:	jne    0x407750
  40776d:	cmp    edi,0xb
  407770:	jne    0x406720
  407776:	lea    rdx,[rip+0x26f8b]        # 0x42e708
  40777d:	mov    r8d,0xb
  407783:	mov    rcx,rbp
  407786:	call   0x427870
  40778b:	test   eax,eax
  40778d:	je     0x4064b0
  407793:	jmp    0x406720
  407798:	movzx  edx,WORD PTR [rsp+0xe8]
  4077a0:	mov    ecx,0x186a0
  4077a5:	call   0x410150
  4077aa:	mov    BYTE PTR [rsp+0x4e],0x1
  4077af:	mov    r8,rax
  4077b2:	mov    QWORD PTR [rbx+0x10],rax
  4077b6:	jmp    0x407273
  4077bb:	lea    rdx,[rip+0x26f59]        # 0x42e71b
  4077c2:	mov    r8d,0x8
  4077c8:	mov    rcx,rbp
  4077cb:	call   0x427870
  4077d0:	test   eax,eax
  4077d2:	jne    0x406720
  4077d8:	jmp    0x4064b0
  4077dd:	mov    r9,QWORD PTR [rbx+0x108]
  4077e4:	mov    r8,QWORD PTR [rbx+0x10]
  4077e8:	mov    rdx,r12
  4077eb:	mov    rcx,r13
  4077ee:	mov    r12d,0x1
  4077f4:	call   0x4141a0
  4077f9:	xor    ecx,ecx
  4077fb:	call   0x405e50
  407800:	mov    QWORD PTR [rbx+0x10],rdi
  407804:	mov    BYTE PTR [rbx+0x18],sil
  407808:	jmp    0x406ce1
  40780d:	mov    r9,QWORD PTR [rbx+0x108]
  407814:	mov    r8,QWORD PTR [rbx+0x10]
  407818:	mov    rdx,r12
  40781b:	mov    rcx,r13
  40781e:	mov    r12d,0x1
  407824:	call   0x4141a0
  407829:	jmp    0x406ce1
  40782e:	lea    rdx,[rip+0x26efa]        # 0x42e72f
  407835:	mov    r8d,0x6
  40783b:	mov    rcx,rbp
  40783e:	call   0x427870
  407843:	test   eax,eax
  407845:	jne    0x406720
  40784b:	mov    rcx,rsi
  40784e:	xor    dil,dil
  407851:	call   0x405a50
  407856:	mov    rbp,rax
  407859:	jmp    0x40786d
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    edx,DWORD PTR [rbx+0x8]
  407863:	mov    rcx,rsi
  407866:	call   0x427e88
  40786b:	add    edi,eax
  40786d:	movsxd rsi,edi
  407870:	add    rsi,rbp
  407873:	movzx  ecx,BYTE PTR [rsi]
  407876:	call   r14
  407879:	test   eax,eax
  40787b:	jne    0x407860
  40787d:	jmp    0x407493
  407882:	nop    DWORD PTR [rax+0x0]
  407886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407890:	push   rdi
  407891:	push   rsi
  407892:	push   rbx
  407893:	sub    rsp,0x20
  407897:	mov    rax,QWORD PTR [rip+0x4d042]        # 0x4548e0
  40789e:	xor    ebx,ebx
  4078a0:	mov    rcx,QWORD PTR [rax]
  4078a3:	test   rcx,rcx
  4078a6:	je     0x4078cd
  4078a8:	lea    rdx,[rip+0x270fd]        # 0x42e9ac
  4078af:	call   0x427e60
  4078b4:	test   rax,rax
  4078b7:	je     0x4078cd
  4078b9:	lea    rdi,[rip+0x270f9]        # 0x42e9b9
  4078c0:	mov    ecx,0x3
  4078c5:	mov    rsi,rax
  4078c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4078ca:	sete   bl
  4078cd:	mov    eax,ebx
  4078cf:	add    rsp,0x20
  4078d3:	pop    rbx
  4078d4:	pop    rsi
  4078d5:	pop    rdi
  4078d6:	ret    
  4078d7:	nop    WORD PTR [rax+rax*1+0x0]
  4078e0:	push   rdi
  4078e1:	push   rsi
  4078e2:	push   rbx
  4078e3:	sub    rsp,0x20
  4078e7:	mov    rax,QWORD PTR [rip+0x4cff2]        # 0x4548e0
  4078ee:	xor    ebx,ebx
  4078f0:	mov    rcx,QWORD PTR [rax]
  4078f3:	test   rcx,rcx
  4078f6:	je     0x40791d
  4078f8:	lea    rdx,[rip+0x270bd]        # 0x42e9bc
  4078ff:	call   0x427e60
  407904:	test   rax,rax
  407907:	je     0x40791d
  407909:	lea    rdi,[rip+0x270a9]        # 0x42e9b9
  407910:	mov    ecx,0x3
  407915:	mov    rsi,rax
  407918:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40791a:	sete   bl
  40791d:	mov    eax,ebx
  40791f:	add    rsp,0x20
  407923:	pop    rbx
  407924:	pop    rsi
  407925:	pop    rdi
  407926:	ret    
  407927:	nop    WORD PTR [rax+rax*1+0x0]
  407930:	push   rbx
  407931:	sub    rsp,0x20
  407935:	mov    rbx,QWORD PTR [rip+0x4cfa4]        # 0x4548e0
  40793c:	mov    rcx,QWORD PTR [rbx]
  40793f:	test   rcx,rcx
  407942:	je     0x407970
  407944:	lea    rdx,[rip+0x2708d]        # 0x42e9d8
  40794b:	call   0x427e60
  407950:	test   rax,rax
  407953:	je     0x407960
  407955:	add    rsp,0x20
  407959:	pop    rbx
  40795a:	ret    
  40795b:	nop    DWORD PTR [rax+rax*1+0x0]
  407960:	mov    rcx,QWORD PTR [rbx]
  407963:	add    rsp,0x20
  407967:	pop    rbx
  407968:	jmp    0x427de8
  40796d:	nop    DWORD PTR [rax]
  407970:	xor    eax,eax
  407972:	jmp    0x407955
  407974:	xchg   ax,ax
  407976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407980:	ret    
  407981:	nop
  407982:	nop
  407983:	nop
  407984:	nop
  407985:	nop
  407986:	nop
  407987:	nop
  407988:	nop
  407989:	nop
  40798a:	nop
  40798b:	nop
  40798c:	nop
  40798d:	nop
  40798e:	nop
  40798f:	nop
  407990:	push   rsi
  407991:	push   rbx
  407992:	sub    rsp,0x38
  407996:	lea    rcx,[rip+0x27075]        # 0x42ea12
  40799d:	call   0x42a4d0
  4079a2:	test   rax,rax
  4079a5:	mov    rsi,rax
  4079a8:	je     0x407c20
  4079ae:	lea    rcx,[rip+0x2706b]        # 0x42ea20
  4079b5:	call   0x4263a0
  4079ba:	lea    rcx,[rip+0x2708e]        # 0x42ea4f
  4079c1:	call   0x4263a0
  4079c6:	lea    rcx,[rip+0x2708b]        # 0x42ea58
  4079cd:	call   0x4263a0
  4079d2:	lea    rcx,[rip+0x270a8]        # 0x42ea81
  4079d9:	call   0x4263a0
  4079de:	lea    rcx,[rip+0x270ae]        # 0x42ea93
  4079e5:	call   0x42a4d0
  4079ea:	lea    rcx,[rip+0x270af]        # 0x42eaa0
  4079f1:	test   rax,rax
  4079f4:	mov    rbx,rax
  4079f7:	cmove  rbx,rsi
  4079fb:	call   0x4263a0
  407a00:	lea    rcx,[rip+0x270e9]        # 0x42eaf0
  407a07:	mov    rdx,rbx
  407a0a:	call   0x4263a0
  407a0f:	lea    rcx,[rip+0x27122]        # 0x42eb38
  407a16:	call   0x4263a0
  407a1b:	lea    rcx,[rip+0x2715e]        # 0x42eb80
  407a22:	call   0x4263a0
  407a27:	lea    rcx,[rip+0x27192]        # 0x42ebc0
  407a2e:	call   0x4263a0
  407a33:	lea    rcx,[rip+0x271e6]        # 0x42ec20
  407a3a:	call   0x4263a0
  407a3f:	lea    rcx,[rip+0x27222]        # 0x42ec68
  407a46:	call   0x4263a0
  407a4b:	lea    rcx,[rip+0x2725e]        # 0x42ecb0
  407a52:	call   0x4263a0
  407a57:	lea    rcx,[rip+0x272ca]        # 0x42ed28
  407a5e:	call   0x4263a0
  407a63:	lea    rcx,[rip+0x272f4]        # 0x42ed5e
  407a6a:	call   0x4263a0
  407a6f:	lea    rcx,[rip+0x2730a]        # 0x42ed80
  407a76:	call   0x4263a0
  407a7b:	lea    rcx,[rip+0x27336]        # 0x42edb8
  407a82:	call   0x4263a0
  407a87:	lea    rcx,[rip+0x2736a]        # 0x42edf8
  407a8e:	call   0x4263a0
  407a93:	lea    rcx,[rip+0x273ae]        # 0x42ee48
  407a9a:	call   0x4263a0
  407a9f:	lea    rcx,[rip+0x273da]        # 0x42ee80
  407aa6:	call   0x4263a0
  407aab:	lea    rcx,[rip+0x2741e]        # 0x42eed0
  407ab2:	call   0x4263a0
  407ab7:	lea    rcx,[rip+0x2745a]        # 0x42ef18
  407abe:	call   0x4263a0
  407ac3:	lea    rcx,[rip+0x2749e]        # 0x42ef68
  407aca:	call   0x4263a0
  407acf:	lea    rcx,[rip+0x274da]        # 0x42efb0
  407ad6:	call   0x4263a0
  407adb:	lea    rcx,[rip+0x27520]        # 0x42f002
  407ae2:	call   0x4263a0
  407ae7:	lea    rcx,[rip+0x27532]        # 0x42f020
  407aee:	call   0x4263a0
  407af3:	lea    rdx,[rip+0x2755e]        # 0x42f058
  407afa:	lea    rcx,[rip+0x2755f]        # 0x42f060
  407b01:	call   0x4263a0
  407b06:	lea    rcx,[rip+0x275c3]        # 0x42f0d0
  407b0d:	call   0x4263a0
  407b12:	lea    rcx,[rip+0x275ef]        # 0x42f108
  407b19:	call   0x4263a0
  407b1e:	lea    rcx,[rip+0x27633]        # 0x42f158
  407b25:	call   0x4263a0
  407b2a:	lea    rcx,[rip+0x2769f]        # 0x42f1d0
  407b31:	call   0x4263a0
  407b36:	lea    rcx,[rip+0x276c3]        # 0x42f200
  407b3d:	call   0x4263a0
  407b42:	lea    rcx,[rip+0x27707]        # 0x42f250
  407b49:	call   0x4263a0
  407b4e:	lea    rcx,[rip+0x2773b]        # 0x42f290
  407b55:	call   0x4263a0
  407b5a:	lea    rcx,[rip+0x2779f]        # 0x42f300
  407b61:	call   0x4263a0
  407b66:	lea    rcx,[rip+0x27804]        # 0x42f371
  407b6d:	call   0x4263a0
  407b72:	lea    rcx,[rip+0x2780e]        # 0x42f387
  407b79:	call   0x42a4d0
  407b7e:	test   rax,rax
  407b81:	mov    rdx,rax
  407b84:	lea    rax,[rip+0x26e75]        # 0x42ea00
  407b8b:	lea    rcx,[rip+0x277fe]        # 0x42f390
  407b92:	cmove  rdx,rax
  407b96:	call   0x4263a0
  407b9b:	lea    rcx,[rip+0x27843]        # 0x42f3e5
  407ba2:	call   0x42a4d0
  407ba7:	test   rax,rax
  407baa:	mov    rdx,rax
  407bad:	lea    rax,[rip+0x26e59]        # 0x42ea0d
  407bb4:	lea    rcx,[rip+0x27835]        # 0x42f3f0
  407bbb:	cmove  rdx,rax
  407bbf:	call   0x4263a0
  407bc4:	lea    rcx,[rip+0x26e47]        # 0x42ea12
  407bcb:	call   0x42a4d0
  407bd0:	lea    rcx,[rip+0x27861]        # 0x42f438
  407bd7:	test   rax,rax
  407bda:	mov    rdx,rax
  407bdd:	cmove  rdx,rsi
  407be1:	call   0x4263a0
  407be6:	lea    rcx,[rip+0x2788b]        # 0x42f478
  407bed:	call   0x4263a0
  407bf2:	lea    rcx,[rip+0x278b7]        # 0x42f4b0
  407bf9:	call   0x4263a0
  407bfe:	lea    rcx,[rip+0x278fb]        # 0x42f500
  407c05:	call   0x4263a0
  407c0a:	lea    rcx,[rip+0x27997]        # 0x42f5a8
  407c11:	call   0x4263a0
  407c16:	nop
  407c17:	add    rsp,0x38
  407c1b:	pop    rbx
  407c1c:	pop    rsi
  407c1d:	ret    
  407c1e:	xchg   ax,ax
  407c20:	lea    rcx,[rsp+0x28]
  407c25:	call   0x4246b0
  407c2a:	test   rax,rax
  407c2d:	mov    rsi,rax
  407c30:	jne    0x4079ae
  407c36:	mov    rdx,QWORD PTR [rsp+0x28]
  407c3b:	lea    rcx,[rip+0x26dd7]        # 0x42ea19
  407c42:	call   0x405d90
  407c47:	mov    ecx,0x1
  407c4c:	call   0x42a540
  407c51:	nop
  407c52:	nop    DWORD PTR [rax+0x0]
  407c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c60:	push   r12
  407c62:	push   rbp
  407c63:	push   rdi
  407c64:	push   rsi
  407c65:	push   rbx
  407c66:	sub    rsp,0x20
  407c6a:	mov    rsi,QWORD PTR [rip+0x4cc6f]        # 0x4548e0
  407c71:	lea    rdi,[rip+0x27960]        # 0x42f5d8
  407c78:	lea    rbp,[rip+0x27956]        # 0x42f5d5
  407c7f:	mov    ebx,ecx
  407c81:	mov    rcx,QWORD PTR [rsi]
  407c84:	call   0x427f30
  407c89:	movzx  edx,bx
  407c8c:	mov    ecx,0x67
  407c91:	mov    r12,rax
  407c94:	call   0x410150
  407c99:	lea    rdx,[rip+0x27941]        # 0x42f5e1
  407ca0:	mov    rcx,rax
  407ca3:	mov    rbx,rax
  407ca6:	call   0x426370
  407cab:	lea    rdx,[rip+0x2793e]        # 0x42f5f0
  407cb2:	mov    rcx,rbx
  407cb5:	call   0x426370
  407cba:	lea    rdx,[rip+0x27977]        # 0x42f638
  407cc1:	mov    rcx,rbx
  407cc4:	call   0x426370
  407cc9:	lea    rdx,[rip+0x279b8]        # 0x42f688
  407cd0:	mov    rcx,rbx
  407cd3:	call   0x426370
  407cd8:	lea    rdx,[rip+0x279f9]        # 0x42f6d8
  407cdf:	mov    rcx,rbx
  407ce2:	call   0x426370
  407ce7:	lea    rdx,[rip+0x27a3a]        # 0x42f728
  407cee:	mov    rcx,rbx
  407cf1:	call   0x426370
  407cf6:	lea    rdx,[rip+0x27a53]        # 0x42f750
  407cfd:	mov    rcx,rbx
  407d00:	call   0x426370
  407d05:	lea    rdx,[rip+0x27a7e]        # 0x42f78a
  407d0c:	mov    rcx,rbx
  407d0f:	call   0x426370
  407d14:	lea    rdx,[rip+0x27a71]        # 0x42f78c
  407d1b:	mov    rcx,rbx
  407d1e:	call   0x426370
  407d23:	lea    rdx,[rip+0x27a76]        # 0x42f7a0
  407d2a:	mov    rcx,rbx
  407d2d:	call   0x426370
  407d32:	lea    rdx,[rip+0x27ab7]        # 0x42f7f0
  407d39:	mov    rcx,rbx
  407d3c:	call   0x426370
  407d41:	lea    rdx,[rip+0x27af0]        # 0x42f838
  407d48:	mov    rcx,rbx
  407d4b:	call   0x426370
  407d50:	lea    rdx,[rip+0x27b21]        # 0x42f878
  407d57:	mov    rcx,rbx
  407d5a:	call   0x426370
  407d5f:	lea    rdx,[rip+0x27b52]        # 0x42f8b8
  407d66:	mov    rcx,rbx
  407d69:	call   0x426370
  407d6e:	lea    rdx,[rip+0x27a15]        # 0x42f78a
  407d75:	mov    rcx,rbx
  407d78:	call   0x426370
  407d7d:	lea    rdx,[rip+0x27b69]        # 0x42f8ed
  407d84:	mov    rcx,rbx
  407d87:	call   0x426370
  407d8c:	lea    rdx,[rip+0x27b6d]        # 0x42f900
  407d93:	mov    rcx,rbx
  407d96:	call   0x426370
  407d9b:	lea    rdx,[rip+0x27bae]        # 0x42f950
  407da2:	mov    rcx,rbx
  407da5:	call   0x426370
  407daa:	lea    rdx,[rip+0x27bdf]        # 0x42f990
  407db1:	mov    rcx,rbx
  407db4:	call   0x426370
  407db9:	lea    rdx,[rip+0x27c08]        # 0x42f9c8
  407dc0:	mov    rcx,rbx
  407dc3:	call   0x426370
  407dc8:	lea    rdx,[rip+0x27c49]        # 0x42fa18
  407dcf:	mov    rcx,rbx
  407dd2:	call   0x426370
  407dd7:	lea    rdx,[rip+0x27c82]        # 0x42fa60
  407dde:	mov    rcx,rbx
  407de1:	call   0x426370
  407de6:	lea    rdx,[rip+0x2799d]        # 0x42f78a
  407ded:	mov    rcx,rbx
  407df0:	call   0x426370
  407df5:	lea    rdx,[rip+0x27cab]        # 0x42faa7
  407dfc:	mov    rcx,rbx
  407dff:	call   0x426370
  407e04:	lea    rdx,[rip+0x27cad]        # 0x42fab8
  407e0b:	mov    rcx,rbx
  407e0e:	call   0x426370
  407e13:	lea    rdx,[rip+0x27cde]        # 0x42faf8
  407e1a:	mov    rcx,rbx
  407e1d:	call   0x426370
  407e22:	lea    rdx,[rip+0x27d0f]        # 0x42fb38
  407e29:	mov    rcx,rbx
  407e2c:	call   0x426370
  407e31:	lea    rdx,[rip+0x27d48]        # 0x42fb80
  407e38:	mov    rcx,rbx
  407e3b:	call   0x426370
  407e40:	lea    rdx,[rip+0x27d69]        # 0x42fbb0
  407e47:	mov    rcx,rbx
  407e4a:	call   0x426370
  407e4f:	lea    rdx,[rip+0x27d8a]        # 0x42fbe0
  407e56:	mov    rcx,rbx
  407e59:	call   0x426370
  407e5e:	lea    rdx,[rip+0x27dab]        # 0x42fc10
  407e65:	mov    rcx,rbx
  407e68:	call   0x426370
  407e6d:	lea    rdx,[rip+0x27dc4]        # 0x42fc38
  407e74:	mov    rcx,rbx
  407e77:	call   0x426370
  407e7c:	lea    rdx,[rip+0x27e05]        # 0x42fc88
  407e83:	mov    rcx,rbx
  407e86:	call   0x426370
  407e8b:	lea    rdx,[rip+0x27e2e]        # 0x42fcc0
  407e92:	mov    rcx,rbx
  407e95:	call   0x426370
  407e9a:	lea    rdx,[rip+0x27e47]        # 0x42fce8
  407ea1:	mov    rcx,rbx
  407ea4:	call   0x426370
  407ea9:	lea    rdx,[rip+0x27e68]        # 0x42fd18
  407eb0:	mov    rcx,rbx
  407eb3:	call   0x426370
  407eb8:	lea    rdx,[rip+0x27e89]        # 0x42fd48
  407ebf:	mov    rcx,rbx
  407ec2:	call   0x426370
  407ec7:	lea    rdx,[rip+0x27eaa]        # 0x42fd78
  407ece:	mov    rcx,rbx
  407ed1:	call   0x426370
  407ed6:	lea    rdx,[rip+0x27ed3]        # 0x42fdb0
  407edd:	mov    rcx,rbx
  407ee0:	call   0x426370
  407ee5:	lea    rdx,[rip+0x27f14]        # 0x42fe00
  407eec:	mov    rcx,rbx
  407eef:	call   0x426370
  407ef4:	lea    rdx,[rip+0x27f45]        # 0x42fe40
  407efb:	mov    rcx,rbx
  407efe:	call   0x426370
  407f03:	lea    rdx,[rip+0x27f6e]        # 0x42fe78
  407f0a:	mov    rcx,rbx
  407f0d:	call   0x426370
  407f12:	lea    rdx,[rip+0x27f97]        # 0x42feb0
  407f19:	mov    rcx,rbx
  407f1c:	call   0x426370
  407f21:	lea    rdx,[rip+0x27fc0]        # 0x42fee8
  407f28:	mov    rcx,rbx
  407f2b:	call   0x426370
  407f30:	lea    rdx,[rip+0x27fd9]        # 0x42ff10
  407f37:	mov    rcx,rbx
  407f3a:	call   0x426370
  407f3f:	lea    rdx,[rip+0x27ff2]        # 0x42ff38
  407f46:	mov    rcx,rbx
  407f49:	call   0x426370
  407f4e:	lea    rdx,[rip+0x28023]        # 0x42ff78
  407f55:	mov    rcx,rbx
  407f58:	call   0x426370
  407f5d:	lea    rdx,[rip+0x2804c]        # 0x42ffb0
  407f64:	mov    rcx,rbx
  407f67:	call   0x426370
  407f6c:	lea    rdx,[rip+0x28075]        # 0x42ffe8
  407f73:	mov    rcx,rbx
  407f76:	call   0x426370
  407f7b:	lea    rdx,[rip+0x2808e]        # 0x430010
  407f82:	mov    rcx,rbx
  407f85:	call   0x426370
  407f8a:	lea    rdx,[rip+0x280af]        # 0x430040
  407f91:	mov    rcx,rbx
  407f94:	call   0x426370
  407f99:	lea    rdx,[rip+0x280d0]        # 0x430070
  407fa0:	mov    rcx,rbx
  407fa3:	call   0x426370
  407fa8:	lea    rdx,[rip+0x28111]        # 0x4300c0
  407faf:	mov    rcx,rbx
  407fb2:	call   0x426370
  407fb7:	lea    rdx,[rip+0x28142]        # 0x430100
  407fbe:	mov    rcx,rbx
  407fc1:	call   0x426370
  407fc6:	lea    rdx,[rip+0x28163]        # 0x430130
  407fcd:	mov    rcx,rbx
  407fd0:	call   0x426370
  407fd5:	lea    rdx,[rip+0x2817c]        # 0x430158
  407fdc:	mov    rcx,rbx
  407fdf:	call   0x426370
  407fe4:	lea    rdx,[rip+0x2819d]        # 0x430188
  407feb:	mov    rcx,rbx
  407fee:	call   0x426370
  407ff3:	lea    rdx,[rip+0x281b6]        # 0x4301b0
  407ffa:	mov    rcx,rbx
  407ffd:	call   0x426370
  408002:	lea    rdx,[rip+0x281cf]        # 0x4301d8
  408009:	mov    rcx,rbx
  40800c:	call   0x426370
  408011:	lea    rdx,[rip+0x281f0]        # 0x430208
  408018:	mov    rcx,rbx
  40801b:	call   0x426370
  408020:	lea    rdx,[rip+0x28211]        # 0x430238
  408027:	mov    rcx,rbx
  40802a:	call   0x426370
  40802f:	lea    rdx,[rip+0x28232]        # 0x430268
  408036:	mov    rcx,rbx
  408039:	call   0x426370
  40803e:	lea    rdx,[rip+0x28253]        # 0x430298
  408045:	mov    rcx,rbx
  408048:	call   0x426370
  40804d:	lea    rdx,[rip+0x2827c]        # 0x4302d0
  408054:	mov    rcx,rbx
  408057:	call   0x426370
  40805c:	lea    rdx,[rip+0x27727]        # 0x42f78a
  408063:	mov    rcx,rbx
  408066:	call   0x426370
  40806b:	lea    rdx,[rip+0x28284]        # 0x4302f6
  408072:	mov    rcx,rbx
  408075:	call   0x426370
  40807a:	lea    rdx,[rip+0x28287]        # 0x430308
  408081:	mov    rcx,rbx
  408084:	call   0x426370
  408089:	lea    rdx,[rip+0x282c8]        # 0x430358
  408090:	mov    rcx,rbx
  408093:	call   0x426370
  408098:	lea    rdx,[rip+0x282f9]        # 0x430398
  40809f:	mov    rcx,rbx
  4080a2:	call   0x426370
  4080a7:	cmp    DWORD PTR [rsi+0x28],0x4
  4080ab:	lea    rdx,[rip+0x2833e]        # 0x4303f0
  4080b2:	mov    r8,rdi
  4080b5:	mov    rcx,rbx
  4080b8:	cmove  r8,rbp
  4080bc:	call   0x426370
  4080c1:	lea    rdx,[rip+0x28370]        # 0x430438
  4080c8:	mov    rcx,rbx
  4080cb:	call   0x426370
  4080d0:	cmp    BYTE PTR [rsi+0x32],0x0
  4080d4:	lea    rdx,[rip+0x28455]        # 0x430530
  4080db:	mov    r8,rdi
  4080de:	mov    rcx,rbx
  4080e1:	cmovne r8,rbp
  4080e5:	call   0x426370
  4080ea:	lea    rdx,[rip+0x28477]        # 0x430568
  4080f1:	mov    rcx,rbx
  4080f4:	call   0x426370
  4080f9:	movzx  eax,WORD PTR [rsi+0x2c]
  4080fd:	lea    r8,[rip+0x274d8]        # 0x42f5dc
  408104:	cmp    ax,0x2
  408108:	je     0x408114
  40810a:	test   ax,ax
  40810d:	cmovne rdi,rbp
  408111:	mov    r8,rdi
  408114:	lea    rdx,[rip+0x2849d]        # 0x4305b8
  40811b:	mov    rcx,rbx
  40811e:	call   0x426370
  408123:	lea    rdx,[rip+0x27660]        # 0x42f78a
  40812a:	mov    rcx,rbx
  40812d:	call   0x426370
  408132:	lea    rdx,[rip+0x284bf]        # 0x4305f8
  408139:	mov    rcx,rbx
  40813c:	call   0x426370
  408141:	test   r12,r12
  408144:	je     0x408290
  40814a:	lea    rdx,[rip+0x284b7]        # 0x430608
  408151:	mov    r8,r12
  408154:	mov    rcx,rbx
  408157:	call   0x426370
  40815c:	lea    rdx,[rip+0x28595]        # 0x4306f8
  408163:	mov    rcx,rbx
  408166:	call   0x426370
  40816b:	lea    rdx,[rip+0x285be]        # 0x430730
  408172:	mov    rcx,rbx
  408175:	call   0x426370
  40817a:	lea    rdx,[rip+0x285f7]        # 0x430778
  408181:	mov    rcx,rbx
  408184:	call   0x426370
  408189:	lea    rdx,[rip+0x275fa]        # 0x42f78a
  408190:	mov    rcx,rbx
  408193:	call   0x426370
  408198:	lea    rdx,[rip+0x28620]        # 0x4307bf
  40819f:	mov    rcx,rbx
  4081a2:	call   0x426370
  4081a7:	lea    rdx,[rip+0x2862a]        # 0x4307d8
  4081ae:	mov    rcx,rbx
  4081b1:	call   0x426370
  4081b6:	lea    rdx,[rip+0x2865b]        # 0x430818
  4081bd:	mov    rcx,rbx
  4081c0:	call   0x426370
  4081c5:	cmp    BYTE PTR [rsi+0x100],0x0
  4081cc:	lea    rax,[rip+0x27405]        # 0x42f5d8
  4081d3:	lea    r8,[rip+0x273fb]        # 0x42f5d5
  4081da:	lea    rdx,[rip+0x28677]        # 0x430858
  4081e1:	mov    rcx,rbx
  4081e4:	cmove  r8,rax
  4081e8:	call   0x426370
  4081ed:	lea    rdx,[rip+0x286ac]        # 0x4308a0
  4081f4:	mov    rcx,rbx
  4081f7:	call   0x426370
  4081fc:	lea    rdx,[rip+0x27587]        # 0x42f78a
  408203:	mov    rcx,rbx
  408206:	call   0x426370
  40820b:	lea    rdx,[rip+0x286dc]        # 0x4308ee
  408212:	mov    rcx,rbx
  408215:	call   0x426370
  40821a:	lea    rdx,[rip+0x286df]        # 0x430900
  408221:	mov    rcx,rbx
  408224:	call   0x426370
  408229:	lea    rdx,[rip+0x28710]        # 0x430940
  408230:	mov    rcx,rbx
  408233:	call   0x426370
  408238:	lea    rdx,[rip+0x28751]        # 0x430990
  40823f:	mov    rcx,rbx
  408242:	call   0x426370
  408247:	lea    rdx,[rip+0x2753c]        # 0x42f78a
  40824e:	mov    rcx,rbx
  408251:	call   0x426370
  408256:	lea    rdx,[rip+0x2876e]        # 0x4309cb
  40825d:	mov    rcx,rbx
  408260:	call   0x426370
  408265:	lea    rdx,[rip+0x28774]        # 0x4309e0
  40826c:	mov    rcx,rbx
  40826f:	call   0x426370
  408274:	mov    rcx,rbx
  408277:	add    rsp,0x20
  40827b:	pop    rbx
  40827c:	pop    rsi
  40827d:	pop    rdi
  40827e:	pop    rbp
  40827f:	pop    r12
  408281:	jmp    0x410290
  408286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408290:	lea    rdx,[rip+0x283e1]        # 0x430678
  408297:	mov    rcx,rbx
  40829a:	call   0x426370
  40829f:	jmp    0x40815c
  4082a4:	xchg   ax,ax
  4082a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082b0:	push   r15
  4082b2:	push   r14
  4082b4:	push   r13
  4082b6:	push   r12
  4082b8:	push   rbp
  4082b9:	push   rdi
  4082ba:	push   rsi
  4082bb:	push   rbx
  4082bc:	sub    rsp,0x78
  4082c0:	test   rcx,rcx
  4082c3:	mov    rbx,rcx
  4082c6:	mov    DWORD PTR [rsp+0x48],edx
  4082ca:	mov    esi,edx
  4082cc:	je     0x4084c2
  4082d2:	cmp    BYTE PTR [rcx],0x0
  4082d5:	je     0x4084c2
  4082db:	call   0x42a400
  4082e0:	lea    r14,[rsp+0x50]
  4082e5:	mov    r12,rax
  4082e8:	movzx  eax,si
  4082eb:	xor    r13d,r13d
  4082ee:	mov    QWORD PTR [rsp+0x38],0x0
  4082f7:	mov    DWORD PTR [rsp+0x44],0x1
  4082ff:	mov    DWORD PTR [rsp+0x4c],eax
  408303:	lea    rbp,[rip+0x2aa16]        # 0x432d20
  40830a:	lea    r15,[rip+0x28742]        # 0x430a53
  408311:	mov    r8,r12
  408314:	mov    rdx,r15
  408317:	mov    rcx,rbx
  40831a:	call   0x427870
  40831f:	test   eax,eax
  408321:	je     0x408336
  408323:	lea    rdi,[rip+0x2874b]        # 0x430a75
  40832a:	mov    rsi,rbx
  40832d:	mov    ecx,0x2
  408332:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408334:	jne    0x40834d
  408336:	mov    eax,DWORD PTR [rbp-0x8]
  408339:	mov    rdx,r15
  40833c:	mov    rcx,rbx
  40833f:	lea    r13d,[r13+rax*1+0x5]
  408344:	call   0x427790
  408349:	test   eax,eax
  40834b:	je     0x40835a
  40834d:	add    rbp,0x20
  408351:	mov    r15,QWORD PTR [rbp-0x20]
  408355:	test   r15,r15
  408358:	jne    0x408311
  40835a:	cmp    QWORD PTR [rsp+0x38],0x0
  408360:	je     0x40856c
  408366:	lea    rbp,[rip+0x2a993]        # 0x432d00
  40836d:	lea    r15,[rip+0x286df]        # 0x430a53
  408374:	mov    BYTE PTR [rsp+0x43],0x0
  408379:	jmp    0x4083d9
  40837b:	nop    DWORD PTR [rax+rax*1+0x0]
  408380:	mov    rcx,r14
  408383:	call   0x427da8
  408388:	mov    rcx,r14
  40838b:	call   QWORD PTR [rbp+0x10]
  40838e:	mov    rax,QWORD PTR [rsp+0x50]
  408393:	mov    rcx,QWORD PTR [rsp+0x38]
  408398:	lea    rdx,[rip+0x286d9]        # 0x430a78
  40839f:	mov    r8,r15
  4083a2:	mov    QWORD PTR [rsp+0x20],rax
  4083a7:	mov    r9,QWORD PTR [rbp+0x8]
  4083ab:	call   0x426370
  4083b0:	mov    rdx,r15
  4083b3:	mov    rcx,rbx
  4083b6:	call   0x427790
  4083bb:	test   eax,eax
  4083bd:	je     0x4084a6
  4083c3:	mov    r15,QWORD PTR [rbp+0x20]
  4083c7:	test   r15,r15
  4083ca:	je     0x4084a6
  4083d0:	mov    BYTE PTR [rsp+0x43],0x1
  4083d5:	add    rbp,0x20
  4083d9:	mov    r8,r12
  4083dc:	mov    rdx,r15
  4083df:	mov    rcx,rbx
  4083e2:	call   0x427870
  4083e7:	test   eax,eax
  4083e9:	je     0x408380
  4083eb:	lea    rdi,[rip+0x28683]        # 0x430a75
  4083f2:	mov    rsi,rbx
  4083f5:	mov    ecx,0x2
  4083fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4083fc:	je     0x408380
  4083fe:	mov    r15,QWORD PTR [rbp+0x20]
  408402:	test   r15,r15
  408405:	jne    0x4083d5
  408407:	cmp    BYTE PTR [rsp+0x43],0x0
  40840c:	jne    0x4084a6
  408412:	add    DWORD PTR [rsp+0x44],0x1
  408417:	mov    eax,DWORD PTR [rsp+0x44]
  40841b:	cmp    eax,0x4
  40841e:	je     0x408492
  408420:	cmp    BYTE PTR [rbx+0x1],0x20
  408424:	je     0x408582
  40842a:	cmp    r12,0x1
  40842e:	jbe    0x40846d
  408430:	mov    eax,0x2
  408435:	mov    ecx,0x1
  40843a:	jmp    0x408448
  40843c:	nop    DWORD PTR [rax+0x0]
  408440:	add    eax,0x1
  408443:	cmp    r12,rdx
  408446:	jbe    0x408455
  408448:	movsxd rdx,eax
  40844b:	add    rcx,0x1
  40844f:	cmp    BYTE PTR [rbx+rdx*1],0x20
  408453:	jne    0x408440
  408455:	cmp    DWORD PTR [rsp+0x44],0x2
  40845a:	je     0x4085b0
  408460:	cmp    rcx,r12
  408463:	jae    0x408478
  408465:	mov    r12,rcx
  408468:	jmp    0x408303
  40846d:	cmp    DWORD PTR [rsp+0x44],0x2
  408472:	je     0x4085ee
  408478:	cmp    QWORD PTR [rsp+0x38],0x0
  40847e:	jne    0x408492
  408480:	movzx  edx,WORD PTR [rsp+0x48]
  408485:	mov    ecx,r13d
  408488:	call   0x410150
  40848d:	mov    QWORD PTR [rsp+0x38],rax
  408492:	mov    rcx,QWORD PTR [rsp+0x38]
  408497:	lea    rdx,[rip+0x2860a]        # 0x430aa8
  40849e:	mov    r8,rbx
  4084a1:	call   0x426370
  4084a6:	mov    rcx,QWORD PTR [rsp+0x38]
  4084ab:	call   0x410290
  4084b0:	nop
  4084b1:	add    rsp,0x78
  4084b5:	pop    rbx
  4084b6:	pop    rsi
  4084b7:	pop    rdi
  4084b8:	pop    rbp
  4084b9:	pop    r12
  4084bb:	pop    r13
  4084bd:	pop    r14
  4084bf:	pop    r15
  4084c1:	ret    
  4084c2:	movzx  edx,WORD PTR [rsp+0x48]
  4084c7:	mov    ecx,0x52
  4084cc:	lea    rbx,[rip+0x2a82d]        # 0x432d00
  4084d3:	lea    r12,[rip+0x2b246]        # 0x433720
  4084da:	lea    rsi,[rip+0x28571]        # 0x430a52
  4084e1:	mov    ebp,0x51
  4084e6:	call   0x410150
  4084eb:	lea    rcx,[rip+0x28567]        # 0x430a59
  4084f2:	mov    r9,rax
  4084f5:	mov    r8d,0x10
  4084fb:	mov    edx,0x1
  408500:	mov    rdi,rax
  408503:	call   0x42a4e0
  408508:	nop    DWORD PTR [rax+rax*1+0x0]
  408510:	lea    rdx,[rip+0x28553]        # 0x430a6a
  408517:	mov    rcx,rdi
  40851a:	call   0x426370
  40851f:	mov    r9,QWORD PTR [rbx]
  408522:	lea    rdx,[rip+0x28544]        # 0x430a6d
  408529:	mov    r8d,0x21
  40852f:	mov    rcx,rdi
  408532:	test   r9,r9
  408535:	cmove  r9,rsi
  408539:	call   0x426370
  40853e:	cmp    ebp,0xa1
  408544:	jne    0x408591
  408546:	mov    rdx,rdi
  408549:	mov    ecx,0xa
  40854e:	add    rbx,0x20
  408552:	call   0x42a500
  408557:	add    ebp,0x1
  40855a:	cmp    rbx,r12
  40855d:	jne    0x408510
  40855f:	mov    rcx,rdi
  408562:	call   0x410290
  408567:	jmp    0x4084b1
  40856c:	mov    edx,DWORD PTR [rsp+0x4c]
  408570:	mov    ecx,r13d
  408573:	call   0x410150
  408578:	mov    QWORD PTR [rsp+0x38],rax
  40857d:	jmp    0x408366
  408582:	mov    ecx,0x1
  408587:	mov    eax,0x1
  40858c:	jmp    0x408455
  408591:	mov    r8,QWORD PTR [rbx+0xa20]
  408598:	lea    rdx,[rip+0x284d3]        # 0x430a72
  40859f:	mov    rcx,rdi
  4085a2:	test   r8,r8
  4085a5:	cmove  r8,rsi
  4085a9:	call   0x426370
  4085ae:	jmp    0x408546
  4085b0:	lea    edx,[rax+0x1]
  4085b3:	movsxd rdx,edx
  4085b6:	cmp    BYTE PTR [rbx+rdx*1],0x20
  4085ba:	je     0x408460
  4085c0:	add    eax,0x2
  4085c3:	cmp    r12,rdx
  4085c6:	jae    0x4085dc
  4085c8:	jmp    0x408460
  4085cd:	nop    DWORD PTR [rax]
  4085d0:	add    eax,0x1
  4085d3:	cmp    r12,rdx
  4085d6:	jb     0x408460
  4085dc:	movsxd rdx,eax
  4085df:	add    rcx,0x1
  4085e3:	cmp    BYTE PTR [rbx+rdx*1],0x20
  4085e7:	jne    0x4085d0
  4085e9:	jmp    0x408460
  4085ee:	cmp    BYTE PTR [rbx+0x3],0x20
  4085f2:	je     0x408478
  4085f8:	mov    ecx,0x1
  4085fd:	jmp    0x408460
  408602:	nop    DWORD PTR [rax+0x0]
  408606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408610:	lea    rcx,[rip+0x284e1]        # 0x430af8
  408617:	jmp    0x42a468
  40861c:	nop
  40861d:	nop
  40861e:	nop
  40861f:	nop
  408620:	ret    
  408621:	nop    DWORD PTR [rax+rax*1+0x0]
  408626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408630:	ret    
  408631:	nop    DWORD PTR [rax+rax*1+0x0]
  408636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408640:	ret    
  408641:	nop    DWORD PTR [rax+rax*1+0x0]
  408646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408650:	push   rdi
  408651:	push   rsi
  408652:	push   rbx
  408653:	sub    rsp,0x420
  40865a:	mov    rdi,rcx
  40865d:	mov    rcx,QWORD PTR [rip+0x51a3c]        # 0x45a0a0
  408664:	test   rcx,rcx
  408667:	je     0x408740
  40866d:	call   0x427d68
  408672:	mov    rbx,QWORD PTR [rip+0x4c277]        # 0x4548f0
  408679:	lea    rsi,[rsp+0x20]
  40867e:	jmp    0x4086b3
  408680:	mov    rcx,QWORD PTR [rip+0x51a19]        # 0x45a0a0
  408687:	mov    rdx,rsi
  40868a:	call   0x427dc8
  40868f:	mov    rax,QWORD PTR [rip+0x51a0a]        # 0x45a0a0
  408696:	test   rax,rax
  408699:	je     0x408700
  40869b:	cmp    QWORD PTR [rax+0x10],0x0
  4086a0:	je     0x408700
  4086a2:	mov    rdx,QWORD PTR [rax+0x8]
  4086a6:	mov    r9,QWORD PTR [rax]
  4086a9:	lea    rdx,[r9+rdx*1-0x1]
  4086ae:	cmp    BYTE PTR [rdx],0xa
  4086b1:	je     0x408720
  4086b3:	mov    r8,rdi
  4086b6:	mov    edx,0x400
  4086bb:	mov    rcx,rsi
  4086be:	mov    BYTE PTR [rbx],0x1
  4086c1:	call   0x42a518
  4086c6:	test   rax,rax
  4086c9:	mov    BYTE PTR [rbx],0x0
  4086cc:	jne    0x408680
  4086ce:	mov    rcx,rdi
  4086d1:	call   0x42a528
  4086d6:	test   eax,eax
  4086d8:	jne    0x408751
  4086da:	mov    rdx,QWORD PTR [rip+0x519bf]        # 0x45a0a0
  4086e1:	xor    eax,eax
  4086e3:	cmp    QWORD PTR [rdx+0x8],0x0
  4086e8:	je     0x40870e
  4086ea:	mov    rcx,QWORD PTR [rdx]
  4086ed:	call   0x424900
  4086f2:	add    rsp,0x420
  4086f9:	pop    rbx
  4086fa:	pop    rsi
  4086fb:	pop    rdi
  4086fc:	ret    
  4086fd:	nop    DWORD PTR [rax]
  408700:	lea    rcx,[rip+0x2ba5d]        # 0x434164
  408707:	call   0x405d90
  40870c:	xor    eax,eax
  40870e:	add    rsp,0x420
  408715:	pop    rbx
  408716:	pop    rsi
  408717:	pop    rdi
  408718:	ret    
  408719:	nop    DWORD PTR [rax+0x0]
  408720:	mov    BYTE PTR [rdx],0x0
  408723:	mov    rcx,QWORD PTR [rax]
  408726:	call   0x424900
  40872b:	add    rsp,0x420
  408732:	pop    rbx
  408733:	pop    rsi
  408734:	pop    rdi
  408735:	ret    
  408736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408740:	call   0x427dc0
  408745:	mov    QWORD PTR [rip+0x51954],rax        # 0x45a0a0
  40874c:	jmp    0x408672
  408751:	call   QWORD PTR [rip+0x54495]        # 0x45cbec
  408757:	mov    ecx,DWORD PTR [rax]
  408759:	call   0x42a408
  40875e:	lea    rcx,[rip+0x2b9db]        # 0x434140
  408765:	mov    rdx,rax
  408768:	call   0x405d90
  40876d:	xor    eax,eax
  40876f:	jmp    0x40870e
  408771:	nop    DWORD PTR [rax+rax*1+0x0]
  408776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408780:	push   rsi
  408781:	push   rbx
  408782:	sub    rsp,0x28
  408786:	mov    rbx,QWORD PTR [rip+0x54427]        # 0x45cbb4
  40878d:	mov    rsi,rcx
  408790:	call   rbx
  408792:	lea    rdx,[rax+0x30]
  408796:	mov    rcx,rsi
  408799:	call   0x42a4f8
  40879e:	call   rbx
  4087a0:	lea    rcx,[rax+0x30]
  4087a4:	call   0x42a520
  4087a9:	call   rbx
  4087ab:	mov    rcx,rax
  4087ae:	add    rsp,0x28
  4087b2:	pop    rbx
  4087b3:	pop    rsi
  4087b4:	jmp    0x408650
  4087b9:	nop    DWORD PTR [rax+0x0]
  4087c0:	lea    rcx,[rip+0xfffffffffffffe59]        # 0x408620
  4087c7:	jmp    0x428030
  4087cc:	nop    DWORD PTR [rax+0x0]
  4087d0:	sub    rsp,0x28
  4087d4:	lea    rcx,[rip+0x2b99d]        # 0x434178
  4087db:	call   0x405d90
  4087e0:	xor    eax,eax
  4087e2:	add    rsp,0x28
  4087e6:	ret    
  4087e7:	nop
  4087e8:	nop
  4087e9:	nop
  4087ea:	nop
  4087eb:	nop
  4087ec:	nop
  4087ed:	nop
  4087ee:	nop
  4087ef:	nop
  4087f0:	push   r12
  4087f2:	push   rbp
  4087f3:	push   rdi
  4087f4:	push   rsi
  4087f5:	push   rbx
  4087f6:	sub    rsp,0x20
  4087fa:	movzx  eax,BYTE PTR [rcx]
  4087fd:	mov    rsi,rcx
  408800:	mov    r12d,r9d
  408803:	mov    edi,edx
  408805:	mov    ebp,r8d
  408808:	test   al,al
  40880a:	je     0x408814
  40880c:	cmp    al,dl
  40880e:	je     0x40889c
  408814:	mov    rbx,rsi
  408817:	test   al,al
  408819:	je     0x408865
  40881b:	nop    DWORD PTR [rax+rax*1+0x0]
  408820:	cmp    al,dil
  408823:	je     0x408873
  408825:	cmp    al,bpl
  408828:	je     0x408890
  40882a:	mov    edx,r12d
  40882d:	mov    rcx,rbx
  408830:	call   0x427e88
  408835:	test   eax,eax
  408837:	lea    edx,[rax-0x1]
  40883a:	je     0x40885e
  40883c:	lea    rcx,[rdx+0x1]
  408840:	xor    eax,eax
  408842:	movzx  r10d,BYTE PTR [rbx+rax*1]
  408847:	mov    BYTE PTR [rsi+rax*1],r10b
  40884b:	add    rax,0x1
  40884f:	cmp    rax,rcx
  408852:	jne    0x408842
  408854:	lea    rax,[rdx+0x1]
  408858:	add    rsi,rax
  40885b:	add    rbx,rax
  40885e:	movzx  eax,BYTE PTR [rbx]
  408861:	test   al,al
  408863:	jne    0x408820
  408865:	mov    BYTE PTR [rsi],0x0
  408868:	add    rsp,0x20
  40886c:	pop    rbx
  40886d:	pop    rsi
  40886e:	pop    rdi
  40886f:	pop    rbp
  408870:	pop    r12
  408872:	ret    
  408873:	movzx  eax,BYTE PTR [rbx+0x1]
  408877:	test   al,al
  408879:	je     0x408865
  40887b:	cmp    dil,al
  40887e:	je     0x408885
  408880:	cmp    dil,bpl
  408883:	jne    0x40882a
  408885:	add    rbx,0x1
  408889:	jmp    0x40882a
  40888b:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	cmp    BYTE PTR [rbx+0x1],0x0
  408894:	je     0x40882a
  408896:	add    rbx,0x1
  40889a:	jmp    0x40882a
  40889c:	lea    rbx,[rcx+0x1]
  4088a0:	movzx  eax,BYTE PTR [rcx+0x1]
  4088a4:	jmp    0x408817
  4088a9:	nop    DWORD PTR [rax+0x0]
  4088b0:	push   r15
  4088b2:	push   r14
  4088b4:	push   r13
  4088b6:	push   r12
  4088b8:	push   rbp
  4088b9:	push   rdi
  4088ba:	push   rsi
  4088bb:	push   rbx
  4088bc:	sub    rsp,0x38
  4088c0:	mov    eax,DWORD PTR [rsp+0xb0]
  4088c7:	mov    r14d,DWORD PTR [rsp+0xa8]
  4088cf:	test   rcx,rcx
  4088d2:	mov    rbx,rcx
  4088d5:	mov    r12,rdx
  4088d8:	mov    rbp,r8
  4088db:	mov    r13,r9
  4088de:	movzx  edi,BYTE PTR [rsp+0xa0]
  4088e6:	mov    DWORD PTR [rsp+0x2c],eax
  4088ea:	je     0x408a50
  4088f0:	mov    rcx,QWORD PTR [rip+0x517c1]        # 0x45a0b8
  4088f7:	call   0x42a4e8
  4088fc:	mov    rcx,rbx
  4088ff:	call   0x42a400
  408904:	lea    rcx,[rax+rax*1+0x1]
  408909:	call   0x424800
  40890e:	mov    rdx,rbx
  408911:	mov    rcx,rax
  408914:	mov    QWORD PTR [rip+0x5179d],rax        # 0x45a0b8
  40891b:	call   0x42a418
  408920:	mov    QWORD PTR [rip+0x51789],rax        # 0x45a0b0
  408927:	mov    r15,rax
  40892a:	mov    rbx,QWORD PTR [rip+0x5177f]        # 0x45a0b0
  408931:	mov    rdx,r12
  408934:	mov    rcx,rbx
  408937:	call   0x42a3e0
  40893c:	mov    eax,eax
  40893e:	add    rbx,rax
  408941:	movzx  esi,BYTE PTR [rbx]
  408944:	test   sil,sil
  408947:	je     0x408b74
  40894d:	test   rbp,rbp
  408950:	je     0x4089a0
  408952:	movsx  edx,sil
  408956:	mov    rcx,rbp
  408959:	call   0x42a428
  40895e:	test   rax,rax
  408961:	je     0x4089a0
  408963:	movzx  eax,BYTE PTR [rbx+0x1]
  408967:	lea    rsi,[rbx+0x1]
  40896b:	test   al,al
  40896d:	je     0x408a30
  408973:	movsx  edx,al
  408976:	mov    rcx,r12
  408979:	call   0x42a428
  40897e:	test   rax,rax
  408981:	je     0x408bc0
  408987:	lea    rcx,[rbx+0x2]
  40898b:	mov    BYTE PTR [rbx+0x1],0x0
  40898f:	mov    QWORD PTR [rip+0x5171a],rcx        # 0x45a0b0
  408996:	mov    r15,rbx
  408999:	jmp    0x408a3a
  40899e:	xchg   ax,ax
  4089a0:	test   r14b,r14b
  4089a3:	je     0x4089c0
  4089a5:	mov    eax,esi
  4089a7:	and    eax,0xffffffdf
  4089aa:	cmp    al,0x45
  4089ac:	jne    0x4089c0
  4089ae:	cmp    BYTE PTR [rbx+0x1],0x27
  4089b2:	je     0x408b5a
  4089b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089c0:	test   r13,r13
  4089c3:	je     0x408ba0
  4089c9:	mov    r15,rbx
  4089cc:	movsx  r14d,sil
  4089d0:	mov    rcx,r13
  4089d3:	mov    edx,r14d
  4089d6:	call   0x42a428
  4089db:	test   rax,rax
  4089de:	jne    0x408a62
  4089e4:	mov    rdx,r12
  4089e7:	mov    rcx,rbx
  4089ea:	call   0x42a410
  4089ef:	test   rbp,rbp
  4089f2:	mov    esi,eax
  4089f4:	je     0x408a0b
  4089f6:	mov    rdx,rbp
  4089f9:	mov    rcx,rbx
  4089fc:	call   0x42a410
  408a01:	cmp    esi,eax
  408a03:	cmova  esi,eax
  408a06:	test   r13,r13
  408a09:	je     0x408a1b
  408a0b:	mov    rdx,r13
  408a0e:	mov    rcx,rbx
  408a11:	call   0x42a410
  408a16:	cmp    esi,eax
  408a18:	cmova  esi,eax
  408a1b:	mov    esi,esi
  408a1d:	add    rsi,rbx
  408a20:	movzx  eax,BYTE PTR [rsi]
  408a23:	test   al,al
  408a25:	jne    0x408b30
  408a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a30:	mov    QWORD PTR [rip+0x51679],rsi        # 0x45a0b0
  408a37:	mov    r15,rbx
  408a3a:	mov    rax,r15
  408a3d:	add    rsp,0x38
  408a41:	pop    rbx
  408a42:	pop    rsi
  408a43:	pop    rdi
  408a44:	pop    rbp
  408a45:	pop    r12
  408a47:	pop    r13
  408a49:	pop    r14
  408a4b:	pop    r15
  408a4d:	ret    
  408a4e:	xchg   ax,ax
  408a50:	mov    r15,QWORD PTR [rip+0x51661]        # 0x45a0b8
  408a57:	test   r15,r15
  408a5a:	jne    0x40892a
  408a60:	jmp    0x408a3a
  408a62:	movzx  eax,BYTE PTR [r15+0x1]
  408a67:	lea    rbp,[r15+0x1]
  408a6b:	test   al,al
  408a6d:	jne    0x408a9d
  408a6f:	jmp    0x408b20
  408a74:	cmp    al,sil
  408a77:	je     0x408b10
  408a7d:	mov    edx,DWORD PTR [rsp+0xb8]
  408a84:	mov    rcx,rbp
  408a87:	call   0x427e88
  408a8c:	cdqe   
  408a8e:	add    rbp,rax
  408a91:	movzx  eax,BYTE PTR [rbp+0x0]
  408a95:	test   al,al
  408a97:	je     0x408b20
  408a9d:	cmp    dil,al
  408aa0:	jne    0x408a74
  408aa2:	movzx  eax,BYTE PTR [rbp+0x1]
  408aa6:	test   al,al
  408aa8:	je     0x408ab0
  408aaa:	add    rbp,0x1
  408aae:	jmp    0x408a7d
  408ab0:	cmp    dil,sil
  408ab3:	jne    0x408a7d
  408ab5:	test   al,al
  408ab7:	lea    rsi,[rbp+0x1]
  408abb:	je     0x408b1b
  408abd:	movsx  edx,al
  408ac0:	mov    rcx,r12
  408ac3:	call   0x42a428
  408ac8:	test   rax,rax
  408acb:	je     0x408be3
  408ad1:	lea    rax,[rbp+0x2]
  408ad5:	mov    BYTE PTR [rbp+0x1],0x0
  408ad9:	mov    QWORD PTR [rip+0x515d0],rax        # 0x45a0b0
  408ae0:	cmp    BYTE PTR [rsp+0x2c],0x0
  408ae5:	mov    r15,rbx
  408ae8:	je     0x408a3a
  408aee:	mov    r9d,DWORD PTR [rsp+0xb8]
  408af6:	movsx  r8d,dil
  408afa:	mov    edx,r14d
  408afd:	mov    rcx,rbx
  408b00:	call   0x4087f0
  408b05:	jmp    0x408a3a
  408b0a:	nop    WORD PTR [rax+rax*1+0x0]
  408b10:	movzx  eax,BYTE PTR [rbp+0x1]
  408b14:	cmp    al,sil
  408b17:	je     0x408aaa
  408b19:	jmp    0x408ab5
  408b1b:	mov    rbp,rsi
  408b1e:	xchg   ax,ax
  408b20:	mov    QWORD PTR [rip+0x51589],rbp        # 0x45a0b0
  408b27:	jmp    0x408ae0
  408b29:	nop    DWORD PTR [rax+0x0]
  408b30:	movsx  edx,al
  408b33:	mov    rcx,r12
  408b36:	call   0x42a428
  408b3b:	test   rax,rax
  408b3e:	je     0x408c03
  408b44:	lea    rax,[rsi+0x1]
  408b48:	mov    BYTE PTR [rsi],0x0
  408b4b:	mov    QWORD PTR [rip+0x5155e],rax        # 0x45a0b0
  408b52:	mov    r15,rbx
  408b55:	jmp    0x408a3a
  408b5a:	lea    r15,[rbx+0x1]
  408b5e:	mov    esi,0x27
  408b63:	mov    edi,0x5c
  408b68:	lea    r13,[rip+0x2b641]        # 0x4341b0
  408b6f:	jmp    0x4089cc
  408b74:	mov    rcx,r15
  408b77:	xor    r15d,r15d
  408b7a:	call   0x42a4e8
  408b7f:	mov    QWORD PTR [rip+0x5152e],0x0        # 0x45a0b8
  408b8a:	mov    QWORD PTR [rip+0x5151b],0x0        # 0x45a0b0
  408b95:	jmp    0x408a3a
  408b9a:	nop    WORD PTR [rax+rax*1+0x0]
  408ba0:	mov    rdx,r12
  408ba3:	mov    rcx,rbx
  408ba6:	call   0x42a410
  408bab:	test   rbp,rbp
  408bae:	mov    esi,eax
  408bb0:	jne    0x4089f6
  408bb6:	jmp    0x408a1b
  408bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bc0:	mov    rcx,rsi
  408bc3:	call   0x42a400
  408bc8:	lea    r9,[rbx+0x2]
  408bcc:	lea    r8,[rax+0x1]
  408bd0:	mov    rdx,rsi
  408bd3:	mov    rcx,r9
  408bd6:	call   0x42a488
  408bdb:	mov    rcx,rax
  408bde:	jmp    0x40898b
  408be3:	mov    rcx,rsi
  408be6:	call   0x42a400
  408beb:	lea    r9,[rbp+0x2]
  408bef:	lea    r8,[rax+0x1]
  408bf3:	mov    rdx,rsi
  408bf6:	mov    rcx,r9
  408bf9:	call   0x42a488
  408bfe:	jmp    0x408ad5
  408c03:	mov    rcx,rsi
  408c06:	call   0x42a400
  408c0b:	lea    r9,[rsi+0x1]
  408c0f:	lea    r8,[rax+0x1]
  408c13:	mov    rdx,rsi
  408c16:	mov    rcx,r9
  408c19:	call   0x42a488
  408c1e:	jmp    0x408b48
  408c23:	nop    DWORD PTR [rax]
  408c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c30:	push   r15
  408c32:	push   r14
  408c34:	push   r13
  408c36:	push   r12
  408c38:	push   rbp
  408c39:	push   rdi
  408c3a:	push   rsi
  408c3b:	push   rbx
  408c3c:	sub    rsp,0x38
  408c40:	mov    edi,DWORD PTR [rsp+0xa0]
  408c47:	mov    r12d,0x1
  408c4d:	mov    ebx,r8d
  408c50:	mov    r14,rcx
  408c53:	mov    r13,rdx
  408c56:	mov    DWORD PTR [rsp+0x2c],r8d
  408c5b:	mov    esi,r8d
  408c5e:	mov    ebp,r9d
  408c61:	call   0x42a400
  408c66:	lea    rcx,[rax+rax*1+0x3]
  408c6b:	call   0x424800
  408c70:	lea    r15,[rax+0x1]
  408c74:	mov    BYTE PTR [rax],bl
  408c76:	mov    QWORD PTR [rsp+0x20],rax
  408c7b:	xor    ebx,ebx
  408c7d:	movsx  edx,BYTE PTR [r14]
  408c81:	test   dl,dl
  408c83:	je     0x408ce4
  408c85:	cmp    sil,dl
  408c88:	je     0x408d10
  408c8e:	cmp    dl,bpl
  408c91:	je     0x408d20
  408c97:	mov    rcx,r13
  408c9a:	call   0x42a428
  408c9f:	test   rax,rax
  408ca2:	cmovne ebx,r12d
  408ca6:	mov    edx,edi
  408ca8:	mov    rcx,r14
  408cab:	call   0x427e88
  408cb0:	test   eax,eax
  408cb2:	lea    r9d,[rax-0x1]
  408cb6:	je     0x408c7d
  408cb8:	lea    rcx,[r9+0x1]
  408cbc:	xor    eax,eax
  408cbe:	xchg   ax,ax
  408cc0:	movzx  edx,BYTE PTR [r14+rax*1]
  408cc5:	mov    BYTE PTR [r15+rax*1],dl
  408cc9:	add    rax,0x1
  408ccd:	cmp    rax,rcx
  408cd0:	jne    0x408cc0
  408cd2:	lea    rax,[r9+0x1]
  408cd6:	add    r14,rax
  408cd9:	add    r15,rax
  408cdc:	movsx  edx,BYTE PTR [r14]
  408ce0:	test   dl,dl
  408ce2:	jne    0x408c85
  408ce4:	movzx  eax,BYTE PTR [rsp+0x2c]
  408ce9:	test   bl,bl
  408ceb:	mov    BYTE PTR [r15+0x1],0x0
  408cf0:	mov    BYTE PTR [r15],al
  408cf3:	je     0x408d31
  408cf5:	mov    rax,QWORD PTR [rsp+0x20]
  408cfa:	add    rsp,0x38
  408cfe:	pop    rbx
  408cff:	pop    rsi
  408d00:	pop    rdi
  408d01:	pop    rbp
  408d02:	pop    r12
  408d04:	pop    r13
  408d06:	pop    r14
  408d08:	pop    r15
  408d0a:	ret    
  408d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d10:	mov    BYTE PTR [r15],sil
  408d13:	mov    ebx,0x1
  408d18:	add    r15,0x1
  408d1c:	jmp    0x408ca6
  408d1e:	xchg   ax,ax
  408d20:	mov    BYTE PTR [r15],bpl
  408d23:	mov    ebx,0x1
  408d28:	add    r15,0x1
  408d2c:	jmp    0x408ca6
  408d31:	mov    rcx,QWORD PTR [rsp+0x20]
  408d36:	call   0x42a4e8
  408d3b:	mov    QWORD PTR [rsp+0x20],0x0
  408d44:	jmp    0x408cf5
  408d46:	nop
  408d47:	nop
  408d48:	nop
  408d49:	nop
  408d4a:	nop
  408d4b:	nop
  408d4c:	nop
  408d4d:	nop
  408d4e:	nop
  408d4f:	nop
  408d50:	mov    rax,QWORD PTR [rip+0x513c9]        # 0x45a120
  408d57:	mov    rdx,QWORD PTR [rip+0x513d2]        # 0x45a130
  408d5e:	lea    rdx,[rax+rdx*8]
  408d62:	mov    rax,QWORD PTR [rdx]
  408d65:	mov    ecx,DWORD PTR [rax+0x20]
  408d68:	mov    rax,QWORD PTR [rax+0x10]
  408d6c:	mov    QWORD PTR [rip+0x522cd],rax        # 0x45b040
  408d73:	mov    rdx,QWORD PTR [rdx]
  408d76:	mov    QWORD PTR [rip+0x51393],rax        # 0x45a110
  408d7d:	mov    DWORD PTR [rip+0x51395],ecx        # 0x45a118
  408d83:	mov    rdx,QWORD PTR [rdx]
  408d86:	mov    QWORD PTR [rip+0x51343],rdx        # 0x45a0d0
  408d8d:	movzx  eax,BYTE PTR [rax]
  408d90:	mov    BYTE PTR [rip+0x51386],al        # 0x45a11c
  408d96:	ret    
  408d97:	nop    WORD PTR [rax+rax*1+0x0]
  408da0:	push   rsi
  408da1:	push   rbx
  408da2:	sub    rsp,0x28
  408da6:	movsxd rbx,edx
  408da9:	mov    rsi,rcx
  408dac:	lea    ecx,[rbx+0x1]
  408daf:	movsxd rcx,ecx
  408db2:	call   0x424800
  408db7:	mov    rdx,QWORD PTR [rip+0x5133a]        # 0x45a0f8
  408dbe:	mov    r10,rax
  408dc1:	cmp    BYTE PTR [rdx+0x24],0x0
  408dc5:	jne    0x408e20
  408dc7:	mov    rax,rsi
  408dca:	sub    rax,QWORD PTR [rdx+0x28]
  408dce:	mov    rcx,QWORD PTR [rdx+0x30]
  408dd2:	xor    r8d,r8d
  408dd5:	add    rax,rcx
  408dd8:	test   ebx,ebx
  408dda:	jg     0x408ded
  408ddc:	jmp    0x408e0a
  408dde:	xchg   ax,ax
  408de0:	mov    BYTE PTR [r10+r8*1],r9b
  408de4:	add    r8,0x1
  408de8:	cmp    ebx,r8d
  408deb:	jle    0x408e0a
  408ded:	movzx  r9d,BYTE PTR [rsi+r8*1]
  408df2:	cmp    r9b,0xff
  408df6:	jne    0x408de0
  408df8:	movzx  r9d,BYTE PTR [rax+r8*1]
  408dfd:	mov    BYTE PTR [r10+r8*1],r9b
  408e01:	add    r8,0x1
  408e05:	cmp    ebx,r8d
  408e08:	jg     0x408ded
  408e0a:	mov    rax,r10
  408e0d:	mov    BYTE PTR [r10+rbx*1],0x0
  408e12:	add    rsp,0x28
  408e16:	pop    rbx
  408e17:	pop    rsi
  408e18:	ret    
  408e19:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    r8,rbx
  408e23:	mov    rdx,rsi
  408e26:	mov    rcx,rax
  408e29:	call   0x42a490
  408e2e:	mov    r10,rax
  408e31:	mov    rax,r10
  408e34:	mov    BYTE PTR [r10+rbx*1],0x0
  408e39:	add    rsp,0x28
  408e3d:	pop    rbx
  408e3e:	pop    rsi
  408e3f:	ret    
  408e40:	push   r12
  408e42:	push   rbp
  408e43:	push   rdi
  408e44:	push   rsi
  408e45:	push   rbx
  408e46:	sub    rsp,0x240
  408e4d:	mov    rax,QWORD PTR [rip+0x5129c]        # 0x45a0f0
  408e54:	movsxd r12,DWORD PTR [rip+0x5127d]        # 0x45a0d8
  408e5b:	lea    rbp,[rsp+0x20]
  408e60:	lea    rsi,[rsp+0x40]
  408e65:	add    r12,QWORD PTR [rax]
  408e68:	mov    rcx,rbp
  408e6b:	call   0x427da8
  408e70:	lea    rdx,[rip+0x2b349]        # 0x4341c0
  408e77:	mov    rcx,r12
  408e7a:	call   0x424fe0
  408e7f:	test   rax,rax
  408e82:	mov    rbx,rax
  408e85:	jne    0x408eae
  408e87:	jmp    0x408ff0
  408e8c:	nop    DWORD PTR [rax+0x0]
  408e90:	mov    r8,rdi
  408e93:	mov    rdx,rsi
  408e96:	mov    rcx,rbp
  408e99:	call   0x427de0
  408e9e:	mov    rcx,rbx
  408ea1:	call   0x42a530
  408ea6:	test   eax,eax
  408ea8:	jne    0x408fd0
  408eae:	mov    r9,rbx
  408eb1:	mov    r8d,0x200
  408eb7:	mov    edx,0x1
  408ebc:	mov    rcx,rsi
  408ebf:	call   0x42a4f0
  408ec4:	mov    rcx,rbx
  408ec7:	mov    rdi,rax
  408eca:	call   0x42a528
  408ecf:	test   eax,eax
  408ed1:	je     0x408e90
  408ed3:	call   QWORD PTR [rip+0x53d13]        # 0x45cbec
  408ed9:	mov    ecx,DWORD PTR [rax]
  408edb:	mov    esi,0x1
  408ee0:	call   0x42a408
  408ee5:	lea    rcx,[rip+0x2b2d7]        # 0x4341c3
  408eec:	mov    r8,rax
  408eef:	mov    rdx,r12
  408ef2:	call   0x405d90
  408ef7:	mov    rcx,rbx
  408efa:	call   QWORD PTR [rip+0x53d24]        # 0x45cc24
  408f00:	cmp    eax,0xffffffff
  408f03:	je     0x408f70
  408f05:	cmp    QWORD PTR [rsp+0x30],0x0
  408f0b:	je     0x408fa0
  408f11:	mov    rcx,QWORD PTR [rip+0x511d8]        # 0x45a0f0
  408f18:	movsxd rax,DWORD PTR [rip+0x511b9]        # 0x45a0d8
  408f1f:	test   sil,sil
  408f22:	mov    rdx,QWORD PTR [rcx]
  408f25:	mov    QWORD PTR [rcx+0x8],rax
  408f29:	mov    BYTE PTR [rdx+rax*1],0x0
  408f2d:	jne    0x408f53
  408f2f:	mov    r8,QWORD PTR [rsp+0x28]
  408f34:	mov    rdx,QWORD PTR [rsp+0x20]
  408f39:	test   r8,r8
  408f3c:	je     0x408f4e
  408f3e:	cmp    BYTE PTR [rdx+r8*1-0x1],0xa
  408f44:	lea    rax,[r8-0x1]
  408f48:	je     0x408fe0
  408f4e:	call   0x427de0
  408f53:	mov    rcx,rbp
  408f56:	call   0x427d60
  408f5b:	nop
  408f5c:	add    rsp,0x240
  408f63:	pop    rbx
  408f64:	pop    rsi
  408f65:	pop    rdi
  408f66:	pop    rbp
  408f67:	pop    r12
  408f69:	ret    
  408f6a:	nop    WORD PTR [rax+rax*1+0x0]
  408f70:	call   QWORD PTR [rip+0x53c76]        # 0x45cbec
  408f76:	mov    ecx,DWORD PTR [rax]
  408f78:	call   0x42a408
  408f7d:	lea    rcx,[rip+0x2b23f]        # 0x4341c3
  408f84:	mov    r8,rax
  408f87:	mov    rdx,r12
  408f8a:	call   0x405d90
  408f8f:	cmp    QWORD PTR [rsp+0x30],0x0
  408f95:	jne    0x408faf
  408f97:	nop    WORD PTR [rax+rax*1+0x0]
  408fa0:	lea    rcx,[rip+0x2b224]        # 0x4341cb
  408fa7:	mov    rdx,r12
  408faa:	call   0x405d90
  408faf:	movsxd rax,DWORD PTR [rip+0x51122]        # 0x45a0d8
  408fb6:	mov    rdx,QWORD PTR [rip+0x51133]        # 0x45a0f0
  408fbd:	mov    QWORD PTR [rdx+0x8],rax
  408fc1:	mov    rdx,QWORD PTR [rdx]
  408fc4:	mov    BYTE PTR [rdx+rax*1],0x0
  408fc8:	jmp    0x408f53
  408fca:	nop    WORD PTR [rax+rax*1+0x0]
  408fd0:	xor    esi,esi
  408fd2:	jmp    0x408ef7
  408fd7:	nop    WORD PTR [rax+rax*1+0x0]
  408fe0:	mov    QWORD PTR [rsp+0x28],rax
  408fe5:	mov    r8,rax
  408fe8:	jmp    0x408f4e
  408fed:	nop    DWORD PTR [rax]
  408ff0:	call   QWORD PTR [rip+0x53bf6]        # 0x45cbec
  408ff6:	mov    ecx,DWORD PTR [rax]
  408ff8:	mov    esi,0x1
  408ffd:	call   0x42a408
  409002:	lea    rcx,[rip+0x2b1ba]        # 0x4341c3
  409009:	mov    r8,rax
  40900c:	mov    rdx,r12
  40900f:	call   0x405d90
  409014:	jmp    0x408f05
  409019:	nop    DWORD PTR [rax+0x0]
  409020:	push   rbx
  409021:	sub    rsp,0x20
  409025:	mov    rbx,rcx
  409028:	call   QWORD PTR [rip+0x53b86]        # 0x45cbb4
  40902e:	lea    rdx,[rip+0x2b1a9]        # 0x4341de
  409035:	lea    rcx,[rax+0x60]
  409039:	mov    r8,rbx
  40903c:	call   0x426370
  409041:	mov    ecx,0x2
  409046:	call   0x42a540
  40904b:	nop
  40904c:	nop    DWORD PTR [rax+0x0]
  409050:	push   rbp
  409051:	push   rdi
  409052:	push   rsi
  409053:	push   rbx
  409054:	sub    rsp,0x28
  409058:	mov    rax,QWORD PTR [rip+0x51099]        # 0x45a0f8
  40905f:	cmp    BYTE PTR [rax+0x24],0x0
  409063:	jne    0x4090c0
  409065:	mov    rsi,rcx
  409068:	sub    rsi,QWORD PTR [rax+0x28]
  40906c:	test   edx,edx
  40906e:	mov    rbp,QWORD PTR [rax+0x30]
  409072:	mov    rax,rsi
  409075:	jle    0x4090b5
  409077:	lea    edi,[rdx-0x1]
  40907a:	mov    rsi,rcx
  40907d:	xor    ebx,ebx
  40907f:	add    rbp,rax
  409082:	add    rdi,0x1
  409086:	jmp    0x4090a5
  409088:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	mov    rcx,QWORD PTR [rip+0x51059]        # 0x45a0f0
  409097:	add    rbx,0x1
  40909b:	call   0x427dd0
  4090a0:	cmp    rbx,rdi
  4090a3:	je     0x4090b5
  4090a5:	movsx  edx,BYTE PTR [rsi+rbx*1]
  4090a9:	cmp    dl,0xff
  4090ac:	jne    0x409090
  4090ae:	movsx  edx,BYTE PTR [rbp+rbx*1+0x0]
  4090b3:	jmp    0x409090
  4090b5:	add    rsp,0x28
  4090b9:	pop    rbx
  4090ba:	pop    rsi
  4090bb:	pop    rdi
  4090bc:	pop    rbp
  4090bd:	ret    
  4090be:	xchg   ax,ax
  4090c0:	movsxd r8,edx
  4090c3:	mov    rdx,rcx
  4090c6:	mov    rcx,QWORD PTR [rip+0x51023]        # 0x45a0f0
  4090cd:	add    rsp,0x28
  4090d1:	pop    rbx
  4090d2:	pop    rsi
  4090d3:	pop    rdi
  4090d4:	pop    rbp
  4090d5:	jmp    0x427de0
  4090da:	nop    WORD PTR [rax+rax*1+0x0]
  4090e0:	push   rbp
  4090e1:	push   rdi
  4090e2:	push   rsi
  4090e3:	push   rbx
  4090e4:	sub    rsp,0x28
  4090e8:	mov    eax,DWORD PTR [rip+0x51f5a]        # 0x45b048
  4090ee:	mov    ebp,ecx
  4090f0:	lea    edx,[rax-0x3]
  4090f3:	mov    rax,QWORD PTR [rip+0x51f46]        # 0x45b040
  4090fa:	lea    rcx,[rax+0x2]
  4090fe:	call   0x408da0
  409103:	mov    rsi,QWORD PTR [rip+0x4b7d6]        # 0x4548e0
  40910a:	mov    rdi,rax
  40910d:	mov    rdx,rax
  409110:	mov    rcx,QWORD PTR [rsi+0x110]
  409117:	call   0x40eb20
  40911c:	mov    rcx,rdi
  40911f:	mov    rbx,rax
  409122:	call   0x42a4e8
  409127:	test   rbx,rbx
  40912a:	je     0x4091b2
  409130:	mov    rdi,QWORD PTR [rsi]
  409133:	test   rdi,rdi
  409136:	je     0x4091d0
  40913c:	test   bpl,bpl
  40913f:	mov    rcx,rbx
  409142:	jne    0x409180
  409144:	call   0x42a400
  409149:	mov    rdx,rbx
  40914c:	mov    r8,rax
  40914f:	mov    rcx,rdi
  409152:	call   0x427f00
  409157:	mov    rbx,rax
  40915a:	test   rbx,rbx
  40915d:	je     0x40919b
  40915f:	mov    rcx,QWORD PTR [rip+0x50f8a]        # 0x45a0f0
  409166:	mov    rdx,rbx
  409169:	call   0x427dc8
  40916e:	mov    rcx,rbx
  409171:	add    rsp,0x28
  409175:	pop    rbx
  409176:	pop    rsi
  409177:	pop    rdi
  409178:	pop    rbp
  409179:	jmp    0x427ed0
  40917e:	xchg   ax,ax
  409180:	call   0x42a400
  409185:	mov    rdx,rbx
  409188:	mov    r8,rax
  40918b:	mov    rcx,rdi
  40918e:	call   0x427f08
  409193:	mov    rbx,rax
  409196:	test   rbx,rbx
  409199:	jne    0x40915f
  40919b:	mov    rcx,QWORD PTR [rsi]
  40919e:	call   0x427f10
  4091a3:	lea    rcx,[rip+0x2b066]        # 0x434210
  4091aa:	mov    rdx,rax
  4091ad:	call   0x405d90
  4091b2:	mov    edx,DWORD PTR [rip+0x51e90]        # 0x45b048
  4091b8:	mov    rcx,QWORD PTR [rip+0x51e81]        # 0x45b040
  4091bf:	add    rsp,0x28
  4091c3:	pop    rbx
  4091c4:	pop    rsi
  4091c5:	pop    rdi
  4091c6:	pop    rbp
  4091c7:	jmp    0x409050
  4091cc:	nop    DWORD PTR [rax+0x0]
  4091d0:	lea    rcx,[rip+0x2b011]        # 0x4341e8
  4091d7:	call   0x405d90
  4091dc:	jmp    0x4091b2
  4091de:	xchg   ax,ax
  4091e0:	push   rdi
  4091e1:	push   rsi
  4091e2:	push   rbx
  4091e3:	sub    rsp,0x20
  4091e7:	mov    rcx,QWORD PTR [rip+0x50f32]        # 0x45a120
  4091ee:	test   rcx,rcx
  4091f1:	je     0x409250
  4091f3:	mov    rbx,QWORD PTR [rip+0x50f2e]        # 0x45a128
  4091fa:	lea    rax,[rbx-0x1]
  4091fe:	cmp    rax,QWORD PTR [rip+0x50f2b]        # 0x45a130
  409205:	jbe    0x409210
  409207:	add    rsp,0x20
  40920b:	pop    rbx
  40920c:	pop    rsi
  40920d:	pop    rdi
  40920e:	ret    
  40920f:	nop
  409210:	lea    esi,[rbx+0x8]
  409213:	movsxd rsi,esi
  409216:	lea    rdx,[rsi*8+0x0]
  40921e:	call   0x42a460
  409223:	test   rax,rax
  409226:	mov    QWORD PTR [rip+0x50ef3],rax        # 0x45a120
  40922d:	je     0x409282
  40922f:	lea    rdx,[rax+rbx*8]
  409233:	mov    ecx,0x8
  409238:	xor    eax,eax
  40923a:	mov    QWORD PTR [rip+0x50ee7],rsi        # 0x45a128
  409241:	mov    rdi,rdx
  409244:	rep stos QWORD PTR es:[rdi],rax
  409247:	add    rsp,0x20
  40924b:	pop    rbx
  40924c:	pop    rsi
  40924d:	pop    rdi
  40924e:	ret    
  40924f:	nop
  409250:	mov    cl,0x8
  409252:	call   0x42a4a0
  409257:	test   rax,rax
  40925a:	mov    QWORD PTR [rip+0x50ebf],rax        # 0x45a120
  409261:	je     0x409282
  409263:	mov    QWORD PTR [rax],0x0
  40926a:	mov    QWORD PTR [rip+0x50eb3],0x1        # 0x45a128
  409275:	mov    QWORD PTR [rip+0x50eb0],0x0        # 0x45a130
  409280:	jmp    0x409207
  409282:	lea    rcx,[rip+0x2af8f]        # 0x434218
  409289:	call   0x409020
  40928e:	nop
  40928f:	nop
  409290:	push   rbx
  409291:	sub    rsp,0x20
  409295:	mov    rbx,rcx
  409298:	call   0x4091e0
  40929d:	mov    rax,QWORD PTR [rip+0x50e7c]        # 0x45a120
  4092a4:	test   rax,rax
  4092a7:	je     0x409300
  4092a9:	mov    rdx,QWORD PTR [rip+0x50e80]        # 0x45a130
  4092b0:	lea    rax,[rax+rdx*8]
  4092b4:	mov    rdx,QWORD PTR [rax]
  4092b7:	cmp    rdx,rbx
  4092ba:	je     0x4092f6
  4092bc:	test   rdx,rdx
  4092bf:	je     0x4092e4
  4092c1:	movzx  ecx,BYTE PTR [rip+0x50e54]        # 0x45a11c
  4092c8:	mov    rdx,QWORD PTR [rip+0x50e41]        # 0x45a110
  4092cf:	mov    BYTE PTR [rdx],cl
  4092d1:	mov    rcx,QWORD PTR [rax]
  4092d4:	mov    QWORD PTR [rcx+0x10],rdx
  4092d8:	mov    ecx,DWORD PTR [rip+0x50e3a]        # 0x45a118
  4092de:	mov    rdx,QWORD PTR [rax]
  4092e1:	mov    DWORD PTR [rdx+0x20],ecx
  4092e4:	mov    QWORD PTR [rax],rbx
  4092e7:	call   0x408d50
  4092ec:	mov    DWORD PTR [rip+0x50e0a],0x1        # 0x45a100
  4092f6:	add    rsp,0x20
  4092fa:	pop    rbx
  4092fb:	ret    
  4092fc:	nop    DWORD PTR [rax+0x0]
  409300:	test   rbx,rbx
  409303:	je     0x4092f6
  409305:	mov    rax,QWORD PTR [rip+0x50e24]        # 0x45a130
  40930c:	shl    rax,0x3
  409310:	jmp    0x4092e4
  409312:	nop    DWORD PTR [rax+0x0]
  409316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409320:	push   rbx
  409321:	sub    rsp,0x20
  409325:	test   rcx,rcx
  409328:	je     0x409390
  40932a:	mov    rax,QWORD PTR [rip+0x50def]        # 0x45a120
  409331:	test   rax,rax
  409334:	je     0x409346
  409336:	mov    rdx,QWORD PTR [rip+0x50df3]        # 0x45a130
  40933d:	lea    rax,[rax+rdx*8]
  409341:	cmp    rcx,QWORD PTR [rax]
  409344:	je     0x409380
  409346:	mov    eax,DWORD PTR [rcx+0x24]
  409349:	mov    rbx,rcx
  40934c:	test   eax,eax
  40934e:	jne    0x409360
  409350:	mov    rcx,rbx
  409353:	add    rsp,0x20
  409357:	pop    rbx
  409358:	jmp    0x42a4e8
  40935d:	nop    DWORD PTR [rax]
  409360:	mov    rcx,QWORD PTR [rcx+0x8]
  409364:	call   0x42a4e8
  409369:	mov    rcx,rbx
  40936c:	add    rsp,0x20
  409370:	pop    rbx
  409371:	jmp    0x42a4e8
  409376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409380:	mov    QWORD PTR [rax],0x0
  409387:	jmp    0x409346
  409389:	nop    DWORD PTR [rax+0x0]
  409390:	add    rsp,0x20
  409394:	pop    rbx
  409395:	ret    
  409396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093a0:	push   rbx
  4093a1:	sub    rsp,0x20
  4093a5:	mov    rbx,QWORD PTR [rcx]
  4093a8:	mov    rax,QWORD PTR [rbx+0x20]
  4093ac:	mov    QWORD PTR [rcx],rax
  4093af:	mov    rcx,QWORD PTR [rbx]
  4093b2:	call   0x409320
  4093b7:	mov    rcx,QWORD PTR [rbx+0x8]
  4093bb:	call   0x42a4e8
  4093c0:	mov    rcx,QWORD PTR [rbx+0x10]
  4093c4:	test   rcx,rcx
  4093c7:	je     0x4093ce
  4093c9:	call   0x42a4e8
  4093ce:	mov    rcx,QWORD PTR [rbx+0x18]
  4093d2:	test   rcx,rcx
  4093d5:	je     0x4093dc
  4093d7:	call   0x42a4e8
  4093dc:	mov    rcx,rbx
  4093df:	add    rsp,0x20
  4093e3:	pop    rbx
  4093e4:	jmp    0x42a4e8
  4093e9:	nop    DWORD PTR [rax+0x0]
  4093f0:	test   rcx,rcx
  4093f3:	je     0x40943a
  4093f5:	mov    rax,QWORD PTR [rcx+0x8]
  4093f9:	mov    DWORD PTR [rcx+0x20],0x0
  409400:	mov    BYTE PTR [rax],0x0
  409403:	mov    rax,QWORD PTR [rcx+0x8]
  409407:	mov    BYTE PTR [rax+0x1],0x0
  40940b:	mov    rax,QWORD PTR [rcx+0x8]
  40940f:	mov    DWORD PTR [rcx+0x2c],0x1
  409416:	mov    DWORD PTR [rcx+0x3c],0x0
  40941d:	mov    QWORD PTR [rcx+0x10],rax
  409421:	mov    rax,QWORD PTR [rip+0x50cf8]        # 0x45a120
  409428:	test   rax,rax
  40942b:	je     0x40943a
  40942d:	mov    rdx,QWORD PTR [rip+0x50cfc]        # 0x45a130
  409434:	cmp    rcx,QWORD PTR [rax+rdx*8]
  409438:	je     0x409440
  40943a:	repz ret 
  40943c:	nop    DWORD PTR [rax+0x0]
  409440:	jmp    0x408d50
  409445:	nop
  409446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409450:	push   rbp
  409451:	push   rdi
  409452:	push   rsi
  409453:	push   rbx
  409454:	sub    rsp,0x28
  409458:	mov    rsi,QWORD PTR [rip+0x5378d]        # 0x45cbec
  40945f:	mov    rbx,rcx
  409462:	mov    rbp,rdx
  409465:	call   rsi
  409467:	mov    rcx,rbx
  40946a:	mov    edi,DWORD PTR [rax]
  40946c:	call   0x4093f0
  409471:	mov    rax,QWORD PTR [rip+0x50ca8]        # 0x45a120
  409478:	mov    QWORD PTR [rbx],rbp
  40947b:	mov    DWORD PTR [rbx+0x38],0x1
  409482:	test   rax,rax
  409485:	je     0x409494
  409487:	mov    rdx,QWORD PTR [rip+0x50ca2]        # 0x45a130
  40948e:	cmp    rbx,QWORD PTR [rax+rdx*8]
  409492:	je     0x4094a2
  409494:	mov    DWORD PTR [rbx+0x30],0x1
  40949b:	mov    DWORD PTR [rbx+0x34],0x0
  4094a2:	mov    DWORD PTR [rbx+0x28],0x0
  4094a9:	call   rsi
  4094ab:	mov    DWORD PTR [rax],edi
  4094ad:	add    rsp,0x28
  4094b1:	pop    rbx
  4094b2:	pop    rsi
  4094b3:	pop    rdi
  4094b4:	pop    rbp
  4094b5:	ret    
  4094b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094c0:	push   rdi
  4094c1:	push   rsi
  4094c2:	push   rbx
  4094c3:	sub    rsp,0x20
  4094c7:	mov    rdi,rcx
  4094ca:	mov    ecx,0x40
  4094cf:	mov    esi,edx
  4094d1:	call   0x42a4a0
  4094d6:	test   rax,rax
  4094d9:	mov    rbx,rax
  4094dc:	je     0x409514
  4094de:	movsxd rax,esi
  4094e1:	lea    rcx,[rax+0x2]
  4094e5:	mov    QWORD PTR [rbx+0x18],rax
  4094e9:	call   0x42a4a0
  4094ee:	test   rax,rax
  4094f1:	mov    QWORD PTR [rbx+0x8],rax
  4094f5:	je     0x409514
  4094f7:	mov    rdx,rdi
  4094fa:	mov    rcx,rbx
  4094fd:	mov    DWORD PTR [rbx+0x24],0x1
  409504:	call   0x409450
  409509:	mov    rax,rbx
  40950c:	add    rsp,0x20
  409510:	pop    rbx
  409511:	pop    rsi
  409512:	pop    rdi
  409513:	ret    
  409514:	lea    rcx,[rip+0x2ad35]        # 0x434250
  40951b:	call   0x409020
  409520:	nop
  409521:	nop    DWORD PTR [rax+rax*1+0x0]
  409526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409530:	push   rsi
  409531:	push   rbx
  409532:	sub    rsp,0x28
  409536:	mov    rax,QWORD PTR [rip+0x50be3]        # 0x45a120
  40953d:	mov    rbx,rcx
  409540:	test   rax,rax
  409543:	je     0x409570
  409545:	mov    rdx,QWORD PTR [rip+0x50be4]        # 0x45a130
  40954c:	mov    rcx,QWORD PTR [rax+rdx*8]
  409550:	test   rcx,rcx
  409553:	je     0x409570
  409555:	mov    rdx,rbx
  409558:	call   0x409450
  40955d:	nop
  40955e:	add    rsp,0x28
  409562:	pop    rbx
  409563:	pop    rsi
  409564:	jmp    0x408d50
  409569:	nop    DWORD PTR [rax+0x0]
  409570:	call   0x4091e0
  409575:	mov    rdx,QWORD PTR [rip+0x50bb4]        # 0x45a130
  40957c:	mov    rax,QWORD PTR [rip+0x50b9d]        # 0x45a120
  409583:	mov    rcx,QWORD PTR [rip+0x50b46]        # 0x45a0d0
  40958a:	lea    rsi,[rax+rdx*8]
  40958e:	mov    edx,0x4000
  409593:	call   0x4094c0
  409598:	mov    QWORD PTR [rsi],rax
  40959b:	mov    rax,QWORD PTR [rip+0x50b7e]        # 0x45a120
  4095a2:	xor    ecx,ecx
  4095a4:	test   rax,rax
  4095a7:	je     0x409555
  4095a9:	mov    rdx,QWORD PTR [rip+0x50b80]        # 0x45a130
  4095b0:	mov    rcx,QWORD PTR [rax+rdx*8]
  4095b4:	jmp    0x409555
  4095b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095c0:	push   rbx
  4095c1:	sub    rsp,0x20
  4095c5:	test   rcx,rcx
  4095c8:	je     0x409655
  4095ce:	mov    rbx,rcx
  4095d1:	call   0x4091e0
  4095d6:	mov    rcx,QWORD PTR [rip+0x50b43]        # 0x45a120
  4095dd:	mov    rax,QWORD PTR [rip+0x50b4c]        # 0x45a130
  4095e4:	shl    rax,0x3
  4095e8:	test   rcx,rcx
  4095eb:	je     0x409643
  4095ed:	mov    rdx,QWORD PTR [rip+0x50b3c]        # 0x45a130
  4095f4:	lea    r8,[rdx*8+0x0]
  4095fc:	lea    rax,[rcx+r8*1]
  409600:	cmp    QWORD PTR [rax],0x0
  409604:	je     0x409643
  409606:	movzx  r10d,BYTE PTR [rip+0x50b0e]        # 0x45a11c
  40960e:	mov    r9,QWORD PTR [rip+0x50afb]        # 0x45a110
  409615:	mov    BYTE PTR [r9],r10b
  409618:	mov    r10,QWORD PTR [rax]
  40961b:	mov    QWORD PTR [r10+0x10],r9
  40961f:	mov    r10d,DWORD PTR [rip+0x50af2]        # 0x45a118
  409626:	mov    r9,QWORD PTR [rax]
  409629:	mov    DWORD PTR [r9+0x20],r10d
  40962d:	cmp    QWORD PTR [rax],0x0
  409631:	je     0x409643
  409633:	add    rdx,0x1
  409637:	lea    rax,[rcx+r8*1+0x8]
  40963c:	mov    QWORD PTR [rip+0x50aed],rdx        # 0x45a130
  409643:	mov    QWORD PTR [rax],rbx
  409646:	call   0x408d50
  40964b:	mov    DWORD PTR [rip+0x50aab],0x1        # 0x45a100
  409655:	add    rsp,0x20
  409659:	pop    rbx
  40965a:	ret    
  40965b:	nop    DWORD PTR [rax+rax*1+0x0]
  409660:	push   rdi
  409661:	push   rsi
  409662:	push   rbx
  409663:	sub    rsp,0x20
  409667:	mov    rsi,QWORD PTR [rip+0x50ab2]        # 0x45a120
  40966e:	test   rsi,rsi
  409671:	je     0x4096b8
  409673:	mov    rbx,QWORD PTR [rip+0x50ab6]        # 0x45a130
  40967a:	lea    rdi,[rsi+rbx*8]
  40967e:	mov    rcx,QWORD PTR [rdi]
  409681:	test   rcx,rcx
  409684:	je     0x4096b8
  409686:	call   0x409320
  40968b:	test   rbx,rbx
  40968e:	mov    QWORD PTR [rdi],0x0
  409695:	je     0x4096b8
  409697:	sub    rbx,0x1
  40969b:	cmp    QWORD PTR [rsi+rbx*8],0x0
  4096a0:	mov    QWORD PTR [rip+0x50a89],rbx        # 0x45a130
  4096a7:	je     0x4096b8
  4096a9:	call   0x408d50
  4096ae:	mov    DWORD PTR [rip+0x50a48],0x1        # 0x45a100
  4096b8:	add    rsp,0x20
  4096bc:	pop    rbx
  4096bd:	pop    rsi
  4096be:	pop    rdi
  4096bf:	ret    
  4096c0:	push   rdi
  4096c1:	push   rsi
  4096c2:	push   rbx
  4096c3:	sub    rsp,0x20
  4096c7:	cmp    rdx,0x1
  4096cb:	jbe    0x409740
  4096cd:	cmp    BYTE PTR [rcx+rdx*1-0x2],0x0
  4096d2:	lea    rdi,[rdx-0x2]
  4096d6:	jne    0x409740
  4096d8:	cmp    BYTE PTR [rcx+rdx*1-0x1],0x0
  4096dd:	jne    0x409740
  4096df:	mov    rsi,rcx
  4096e2:	mov    ecx,0x40
  4096e7:	call   0x42a4a0
  4096ec:	test   rax,rax
  4096ef:	mov    rbx,rax
  4096f2:	je     0x40974a
  4096f4:	mov    QWORD PTR [rax+0x18],rdi
  4096f8:	mov    QWORD PTR [rax+0x8],rsi
  4096fc:	mov    rcx,rax
  4096ff:	mov    QWORD PTR [rax+0x10],rsi
  409703:	mov    DWORD PTR [rax+0x20],edi
  409706:	mov    DWORD PTR [rax+0x24],0x0
  40970d:	mov    QWORD PTR [rax],0x0
  409714:	mov    DWORD PTR [rax+0x28],0x0
  40971b:	mov    DWORD PTR [rax+0x2c],0x1
  409722:	mov    DWORD PTR [rax+0x38],0x0
  409729:	mov    DWORD PTR [rax+0x3c],0x0
  409730:	call   0x409290
  409735:	mov    rax,rbx
  409738:	add    rsp,0x20
  40973c:	pop    rbx
  40973d:	pop    rsi
  40973e:	pop    rdi
  40973f:	ret    
  409740:	xor    eax,eax
  409742:	add    rsp,0x20
  409746:	pop    rbx
  409747:	pop    rsi
  409748:	pop    rdi
  409749:	ret    
  40974a:	lea    rcx,[rip+0x2ab2f]        # 0x434280
  409751:	call   0x409020
  409756:	nop
  409757:	nop    WORD PTR [rax+rax*1+0x0]
  409760:	push   r14
  409762:	push   r13
  409764:	push   r12
  409766:	push   rbp
  409767:	push   rdi
  409768:	push   rsi
  409769:	push   rbx
  40976a:	sub    rsp,0x20
  40976e:	lea    ebp,[rdx+0x2]
  409771:	mov    esi,edx
  409773:	mov    rdi,rcx
  409776:	mov    rbx,r8
  409779:	movsxd rbp,ebp
  40977c:	mov    rcx,rbp
  40977f:	call   0x424800
  409784:	movsxd r8,esi
  409787:	mov    QWORD PTR [rbx],rax
  40978a:	mov    r12,rax
  40978d:	mov    BYTE PTR [rax+r8*1+0x1],0x0
  409793:	mov    BYTE PTR [rax+r8*1],0x0
  409798:	mov    rax,QWORD PTR [rip+0x50959]        # 0x45a0f8
  40979f:	cmp    BYTE PTR [rax+0x24],0x0
  4097a3:	jne    0x409809
  4097a5:	test   esi,esi
  4097a7:	jle    0x409814
  4097a9:	xor    ebx,ebx
  4097ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4097b0:	movsxd r13,ebx
  4097b3:	mov    edx,DWORD PTR [rax+0x20]
  4097b6:	lea    r14,[rdi+r13*1]
  4097ba:	mov    rcx,r14
  4097bd:	call   0x427e88
  4097c2:	movzx  edx,BYTE PTR [r14]
  4097c6:	lea    r9d,[rax-0x1]
  4097ca:	lea    r8d,[rbx+0x1]
  4097ce:	test   r9d,r9d
  4097d1:	mov    BYTE PTR [r12+r13*1],dl
  4097d5:	jle    0x40982d
  4097d7:	cmp    esi,r8d
  4097da:	jg     0x4097e5
  4097dc:	jmp    0x40982d
  4097de:	xchg   ax,ax
  4097e0:	test   r9d,r9d
  4097e3:	jle    0x4097fc
  4097e5:	lea    ebx,[r8+0x1]
  4097e9:	sub    r9d,0x1
  4097ed:	movsxd r8,r8d
  4097f0:	mov    BYTE PTR [r12+r8*1],0xff
  4097f5:	cmp    esi,ebx
  4097f7:	mov    r8d,ebx
  4097fa:	jg     0x4097e0
  4097fc:	cmp    esi,ebx
  4097fe:	jle    0x409814
  409800:	mov    rax,QWORD PTR [rip+0x508f1]        # 0x45a0f8
  409807:	jmp    0x4097b0
  409809:	mov    rdx,rdi
  40980c:	mov    rcx,r12
  40980f:	call   0x42a490
  409814:	mov    rdx,rbp
  409817:	mov    rcx,r12
  40981a:	add    rsp,0x20
  40981e:	pop    rbx
  40981f:	pop    rsi
  409820:	pop    rdi
  409821:	pop    rbp
  409822:	pop    r12
  409824:	pop    r13
  409826:	pop    r14
  409828:	jmp    0x4096c0
  40982d:	mov    ebx,r8d
  409830:	jmp    0x4097fc
  409832:	nop    DWORD PTR [rax+0x0]
  409836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409840:	push   r15
  409842:	push   r14
  409844:	push   r13
  409846:	push   r12
  409848:	push   rbp
  409849:	push   rdi
  40984a:	push   rsi
  40984b:	push   rbx
  40984c:	sub    rsp,0x58
  409850:	mov    eax,DWORD PTR [rip+0x508b2]        # 0x45a108
  409856:	test   eax,eax
  409858:	jne    0x4098bb
  40985a:	mov    eax,DWORD PTR [rip+0x508a4]        # 0x45a104
  409860:	mov    DWORD PTR [rip+0x5089e],0x1        # 0x45a108
  40986a:	test   eax,eax
  40986c:	jne    0x409878
  40986e:	mov    DWORD PTR [rip+0x5088c],0x1        # 0x45a104
  409878:	cmp    QWORD PTR [rip+0x50850],0x0        # 0x45a0d0
  409880:	je     0x40b75d
  409886:	cmp    QWORD PTR [rip+0x5083a],0x0        # 0x45a0c8
  40988e:	je     0x40b747
  409894:	mov    rax,QWORD PTR [rip+0x50885]        # 0x45a120
  40989b:	test   rax,rax
  40989e:	je     0x40b3e3
  4098a4:	mov    rdx,QWORD PTR [rip+0x50885]        # 0x45a130
  4098ab:	cmp    QWORD PTR [rax+rdx*8],0x0
  4098b0:	je     0x40b3e3
  4098b6:	call   0x408d50
  4098bb:	mov    rcx,QWORD PTR [rip+0x4b01e]        # 0x4548e0
  4098c2:	movzx  edx,BYTE PTR [rip+0x50853]        # 0x45a11c
  4098c9:	lea    r15,[rip+0x51778]        # 0x45b048
  4098d0:	movsxd rax,DWORD PTR [rip+0x5082d]        # 0x45a104
  4098d7:	mov    rbx,QWORD PTR [rip+0x50832]        # 0x45a110
  4098de:	lea    rsi,[rip+0x2b61b]        # 0x434f00
  4098e5:	lea    rdi,[rip+0x2af54]        # 0x434840
  4098ec:	lea    r12,[rip+0x5174d]        # 0x45b040
  4098f3:	mov    r14,r15
  4098f6:	mov    QWORD PTR [rsp+0x20],rcx
  4098fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409900:	lea    r10,[rip+0x2aae9]        # 0x4343f0
  409907:	mov    BYTE PTR [rbx],dl
  409909:	mov    rbp,rbx
  40990c:	mov    r13,r14
  40990f:	lea    rcx,[rax+rax*2]
  409913:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  409917:	mov    rax,rcx
  40991a:	shl    rax,0x4
  40991e:	sub    rax,rcx
  409921:	add    rax,rdx
  409924:	movsx  rax,WORD PTR [rsi+rax*2]
  409929:	test   eax,eax
  40992b:	jle    0x409940
  40992d:	add    rbx,0x1
  409931:	movzx  edx,BYTE PTR [rbx]
  409934:	jmp    0x40990f
  409936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409940:	neg    eax
  409942:	movsxd rdx,eax
  409945:	lea    rax,[rip+0x2b2f4]        # 0x434c40
  40994c:	mov    QWORD PTR [r12],rbp
  409950:	mov    QWORD PTR [rip+0x507b9],rbx        # 0x45a110
  409957:	movsx  eax,WORD PTR [rax+rdx*2]
  40995b:	mov    rdx,rbx
  40995e:	sub    rdx,rbp
  409961:	mov    DWORD PTR [r13+0x0],edx
  409965:	movzx  edx,BYTE PTR [rbx]
  409968:	mov    BYTE PTR [rbx],0x0
  40996b:	mov    BYTE PTR [rip+0x507ab],dl        # 0x45a11c
  409971:	cmp    eax,0x88
  409976:	ja     0x40b3d7
  40997c:	movsxd rax,DWORD PTR [r10+rax*4]
  409980:	add    rax,r10
  409983:	jmp    rax
  409985:	movzx  eax,BYTE PTR [rip+0x50790]        # 0x45a11c
  40998c:	mov    BYTE PTR [rbx],al
  40998e:	mov    QWORD PTR [rip+0x5077b],rbp        # 0x45a110
  409995:	mov    QWORD PTR [rip+0x516a4],rbp        # 0x45b040
  40999c:	mov    DWORD PTR [rip+0x516a2],0x0        # 0x45b048
  4099a6:	movzx  eax,BYTE PTR [rbp+0x0]
  4099aa:	mov    BYTE PTR [rip+0x5076c],al        # 0x45a11c
  4099b0:	mov    BYTE PTR [rbp+0x0],0x0
  4099b4:	mov    eax,0x3
  4099b9:	add    rsp,0x58
  4099bd:	pop    rbx
  4099be:	pop    rsi
  4099bf:	pop    rdi
  4099c0:	pop    rbp
  4099c1:	pop    r12
  4099c3:	pop    r13
  4099c5:	pop    r14
  4099c7:	pop    r15
  4099c9:	ret    
  4099ca:	lea    rcx,[rip+0x2a8ea]        # 0x4342bb
  4099d1:	call   0x409020
  4099d6:	mov    rax,QWORD PTR [rip+0x50713]        # 0x45a0f0
  4099dd:	mov    r14,r13
  4099e0:	cmp    QWORD PTR [rax+0x8],0x0
  4099e5:	je     0x40b2ac
  4099eb:	mov    rcx,QWORD PTR [r12]
  4099ef:	cmp    BYTE PTR [rcx],0x2d
  4099f2:	je     0x40b2ac
  4099f8:	mov    edx,DWORD PTR [r13+0x0]
  4099fc:	call   0x409050
  409a01:	mov    rbx,QWORD PTR [rip+0x50708]        # 0x45a110
  409a08:	movzx  edx,BYTE PTR [rip+0x5070d]        # 0x45a11c
  409a0f:	movsxd rax,DWORD PTR [rip+0x506ee]        # 0x45a104
  409a16:	jmp    0x409900
  409a1b:	mov    rax,QWORD PTR [rip+0x506d6]        # 0x45a0f8
  409a22:	mov    r14,r13
  409a25:	mov    DWORD PTR [rip+0x506d5],0x5        # 0x45a104
  409a2f:	mov    DWORD PTR [rax+0x40],0x0
  409a36:	movzx  eax,BYTE PTR [rip+0x506df]        # 0x45a11c
  409a3d:	mov    BYTE PTR [rbx],al
  409a3f:	lea    rax,[rbp+0x2]
  409a43:	mov    QWORD PTR [r12],rbp
  409a47:	mov    DWORD PTR [r14],0x2
  409a4e:	mov    QWORD PTR [rip+0x506bb],rax        # 0x45a110
  409a55:	movzx  eax,BYTE PTR [rbp+0x2]
  409a59:	mov    BYTE PTR [rbp+0x2],0x0
  409a5d:	mov    edx,DWORD PTR [r14]
  409a60:	mov    rcx,QWORD PTR [r12]
  409a64:	mov    BYTE PTR [rip+0x506b2],al        # 0x45a11c
  409a6a:	call   0x409050
  409a6f:	mov    rbx,QWORD PTR [rip+0x5069a]        # 0x45a110
  409a76:	movzx  edx,BYTE PTR [rip+0x5069f]        # 0x45a11c
  409a7d:	movsxd rax,DWORD PTR [rip+0x50680]        # 0x45a104
  409a84:	jmp    0x409900
  409a89:	mov    rax,QWORD PTR [rip+0x50668]        # 0x45a0f8
  409a90:	mov    r14,r13
  409a93:	add    DWORD PTR [rax+0x40],0x1
  409a97:	movzx  eax,BYTE PTR [rip+0x5067e]        # 0x45a11c
  409a9e:	mov    BYTE PTR [rbx],al
  409aa0:	lea    rax,[rbp+0x2]
  409aa4:	mov    QWORD PTR [r12],rbp
  409aa8:	mov    DWORD PTR [r14],0x2
  409aaf:	mov    QWORD PTR [rip+0x5065a],rax        # 0x45a110
  409ab6:	movzx  eax,BYTE PTR [rbp+0x2]
  409aba:	mov    BYTE PTR [rbp+0x2],0x0
  409abe:	mov    edx,DWORD PTR [r14]
  409ac1:	mov    rcx,QWORD PTR [r12]
  409ac5:	mov    BYTE PTR [rip+0x50651],al        # 0x45a11c
  409acb:	call   0x409050
  409ad0:	mov    rbx,QWORD PTR [rip+0x50639]        # 0x45a110
  409ad7:	movzx  edx,BYTE PTR [rip+0x5063e]        # 0x45a11c
  409ade:	movsxd rax,DWORD PTR [rip+0x5061f]        # 0x45a104
  409ae5:	jmp    0x409900
  409aea:	mov    rdx,QWORD PTR [rip+0x50607]        # 0x45a0f8
  409af1:	mov    r14,r13
  409af4:	mov    eax,DWORD PTR [rdx+0x40]
  409af7:	test   eax,eax
  409af9:	jle    0x40b86a
  409aff:	sub    eax,0x1
  409b02:	mov    DWORD PTR [rdx+0x40],eax
  409b05:	mov    edx,DWORD PTR [r14]
  409b08:	mov    rcx,QWORD PTR [r12]
  409b0c:	call   0x409050
  409b11:	mov    rbx,QWORD PTR [rip+0x505f8]        # 0x45a110
  409b18:	movzx  edx,BYTE PTR [rip+0x505fd]        # 0x45a11c
  409b1f:	movsxd rax,DWORD PTR [rip+0x505de]        # 0x45a104
  409b26:	jmp    0x409900
  409b2b:	mov    edx,DWORD PTR [r13+0x0]
  409b2f:	mov    rcx,QWORD PTR [r12]
  409b33:	mov    r14,r13
  409b36:	call   0x409050
  409b3b:	mov    rbx,QWORD PTR [rip+0x505ce]        # 0x45a110
  409b42:	movzx  edx,BYTE PTR [rip+0x505d3]        # 0x45a11c
  409b49:	movsxd rax,DWORD PTR [rip+0x505b4]        # 0x45a104
  409b50:	jmp    0x409900
  409b55:	mov    edx,DWORD PTR [r13+0x0]
  409b59:	mov    rcx,QWORD PTR [r12]
  409b5d:	mov    r14,r13
  409b60:	call   0x409050
  409b65:	mov    rbx,QWORD PTR [rip+0x505a4]        # 0x45a110
  409b6c:	movzx  edx,BYTE PTR [rip+0x505a9]        # 0x45a11c
  409b73:	movsxd rax,DWORD PTR [rip+0x5058a]        # 0x45a104
  409b7a:	jmp    0x409900
  409b7f:	mov    edx,DWORD PTR [r13+0x0]
  409b83:	mov    rcx,QWORD PTR [r12]
  409b87:	mov    r14,r13
  409b8a:	call   0x409050
  409b8f:	mov    rbx,QWORD PTR [rip+0x5057a]        # 0x45a110
  409b96:	movzx  edx,BYTE PTR [rip+0x5057f]        # 0x45a11c
  409b9d:	movsxd rax,DWORD PTR [rip+0x50560]        # 0x45a104
  409ba4:	jmp    0x409900
  409ba9:	mov    edx,DWORD PTR [r13+0x0]
  409bad:	mov    rcx,QWORD PTR [r12]
  409bb1:	mov    r14,r13
  409bb4:	mov    DWORD PTR [rip+0x50546],0x3        # 0x45a104
  409bbe:	call   0x409050
  409bc3:	mov    rbx,QWORD PTR [rip+0x50546]        # 0x45a110
  409bca:	movzx  edx,BYTE PTR [rip+0x5054b]        # 0x45a11c
  409bd1:	movsxd rax,DWORD PTR [rip+0x5052c]        # 0x45a104
  409bd8:	jmp    0x409900
  409bdd:	movzx  eax,BYTE PTR [rip+0x50538]        # 0x45a11c
  409be4:	mov    r14,r13
  409be7:	mov    DWORD PTR [rip+0x50513],0x1        # 0x45a104
  409bf1:	mov    BYTE PTR [rbx],al
  409bf3:	lea    rax,[rbp+0x1]
  409bf7:	mov    QWORD PTR [r12],rbp
  409bfb:	mov    DWORD PTR [r14],0x1
  409c02:	mov    QWORD PTR [rip+0x50507],rax        # 0x45a110
  409c09:	movzx  eax,BYTE PTR [rbp+0x1]
  409c0d:	mov    BYTE PTR [rbp+0x1],0x0
  409c11:	mov    edx,DWORD PTR [r14]
  409c14:	mov    rcx,QWORD PTR [r12]
  409c18:	mov    BYTE PTR [rip+0x504fe],al        # 0x45a11c
  409c1e:	call   0x409050
  409c23:	mov    rbx,QWORD PTR [rip+0x504e6]        # 0x45a110
  409c2a:	movzx  edx,BYTE PTR [rip+0x504eb]        # 0x45a11c
  409c31:	movsxd rax,DWORD PTR [rip+0x504cc]        # 0x45a104
  409c38:	jmp    0x409900
  409c3d:	mov    edx,DWORD PTR [r13+0x0]
  409c41:	mov    rcx,QWORD PTR [r12]
  409c45:	mov    r14,r13
  409c48:	call   0x409050
  409c4d:	mov    rbx,QWORD PTR [rip+0x504bc]        # 0x45a110
  409c54:	movzx  edx,BYTE PTR [rip+0x504c1]        # 0x45a11c
  409c5b:	movsxd rax,DWORD PTR [rip+0x504a2]        # 0x45a104
  409c62:	jmp    0x409900
  409c67:	mov    edx,DWORD PTR [r13+0x0]
  409c6b:	mov    rcx,QWORD PTR [r12]
  409c6f:	mov    r14,r13
  409c72:	call   0x409050
  409c77:	mov    rbx,QWORD PTR [rip+0x50492]        # 0x45a110
  409c7e:	movzx  edx,BYTE PTR [rip+0x50497]        # 0x45a11c
  409c85:	movsxd rax,DWORD PTR [rip+0x50478]        # 0x45a104
  409c8c:	jmp    0x409900
  409c91:	mov    edx,DWORD PTR [r13+0x0]
  409c95:	mov    rcx,QWORD PTR [r12]
  409c99:	mov    r14,r13
  409c9c:	mov    DWORD PTR [rip+0x5045e],0x9        # 0x45a104
  409ca6:	call   0x409050
  409cab:	mov    rbx,QWORD PTR [rip+0x5045e]        # 0x45a110
  409cb2:	movzx  edx,BYTE PTR [rip+0x50463]        # 0x45a11c
  409cb9:	movsxd rax,DWORD PTR [rip+0x50444]        # 0x45a104
  409cc0:	jmp    0x409900
  409cc5:	movzx  eax,BYTE PTR [rip+0x50450]        # 0x45a11c
  409ccc:	mov    r14,r13
  409ccf:	mov    DWORD PTR [rip+0x5042b],0x1        # 0x45a104
  409cd9:	mov    BYTE PTR [rbx],al
  409cdb:	lea    rax,[rbp+0x1]
  409cdf:	mov    QWORD PTR [r12],rbp
  409ce3:	mov    DWORD PTR [r14],0x1
  409cea:	mov    QWORD PTR [rip+0x5041f],rax        # 0x45a110
  409cf1:	movzx  eax,BYTE PTR [rbp+0x1]
  409cf5:	mov    BYTE PTR [rbp+0x1],0x0
  409cf9:	mov    edx,DWORD PTR [r14]
  409cfc:	mov    rcx,QWORD PTR [r12]
  409d00:	mov    BYTE PTR [rip+0x50416],al        # 0x45a11c
  409d06:	call   0x409050
  409d0b:	mov    rbx,QWORD PTR [rip+0x503fe]        # 0x45a110
  409d12:	movzx  edx,BYTE PTR [rip+0x50403]        # 0x45a11c
  409d19:	movsxd rax,DWORD PTR [rip+0x503e4]        # 0x45a104
  409d20:	jmp    0x409900
  409d25:	movzx  eax,BYTE PTR [rip+0x503f0]        # 0x45a11c
  409d2c:	mov    r14,r13
  409d2f:	mov    BYTE PTR [rbx],al
  409d31:	lea    rax,[rbp+0x1]
  409d35:	mov    QWORD PTR [r12],rbp
  409d39:	mov    DWORD PTR [r14],0x1
  409d40:	mov    QWORD PTR [rip+0x503c9],rax        # 0x45a110
  409d47:	movzx  eax,BYTE PTR [rbp+0x1]
  409d4b:	mov    BYTE PTR [rbp+0x1],0x0
  409d4f:	mov    edx,DWORD PTR [r14]
  409d52:	mov    rcx,QWORD PTR [r12]
  409d56:	mov    BYTE PTR [rip+0x503c0],al        # 0x45a11c
  409d5c:	call   0x409050
  409d61:	mov    rbx,QWORD PTR [rip+0x503a8]        # 0x45a110
  409d68:	movzx  edx,BYTE PTR [rip+0x503ad]        # 0x45a11c
  409d6f:	movsxd rax,DWORD PTR [rip+0x5038e]        # 0x45a104
  409d76:	jmp    0x409900
  409d7b:	call   0x4078e0
  409d80:	cmp    al,0x1
  409d82:	mov    edx,DWORD PTR [r13+0x0]
  409d86:	mov    rcx,QWORD PTR [r12]
  409d8a:	sbb    eax,eax
  409d8c:	mov    r14,r13
  409d8f:	and    eax,0xfffffffe
  409d92:	add    eax,0xd
  409d95:	mov    DWORD PTR [rip+0x50369],eax        # 0x45a104
  409d9b:	call   0x409050
  409da0:	mov    rbx,QWORD PTR [rip+0x50369]        # 0x45a110
  409da7:	movzx  edx,BYTE PTR [rip+0x5036e]        # 0x45a11c
  409dae:	movsxd rax,DWORD PTR [rip+0x5034f]        # 0x45a104
  409db5:	jmp    0x409900
  409dba:	mov    edx,DWORD PTR [r13+0x0]
  409dbe:	mov    rcx,QWORD PTR [r12]
  409dc2:	mov    r14,r13
  409dc5:	mov    DWORD PTR [rip+0x50335],0xb        # 0x45a104
  409dcf:	call   0x409050
  409dd4:	mov    rbx,QWORD PTR [rip+0x50335]        # 0x45a110
  409ddb:	movzx  edx,BYTE PTR [rip+0x5033a]        # 0x45a11c
  409de2:	movsxd rax,DWORD PTR [rip+0x5031b]        # 0x45a104
  409de9:	jmp    0x409900
  409dee:	mov    edx,DWORD PTR [r13+0x0]
  409df2:	mov    rcx,QWORD PTR [r12]
  409df6:	mov    r14,r13
  409df9:	mov    DWORD PTR [rip+0x50301],0x15        # 0x45a104
  409e03:	call   0x409050
  409e08:	mov    rbx,QWORD PTR [rip+0x50301]        # 0x45a110
  409e0f:	movzx  edx,BYTE PTR [rip+0x50306]        # 0x45a11c
  409e16:	movsxd rax,DWORD PTR [rip+0x502e7]        # 0x45a104
  409e1d:	jmp    0x409900
  409e22:	movzx  eax,BYTE PTR [rip+0x502f3]        # 0x45a11c
  409e29:	mov    r14,r13
  409e2c:	mov    DWORD PTR [rip+0x502ce],0x1        # 0x45a104
  409e36:	mov    BYTE PTR [rbx],al
  409e38:	lea    rax,[rbp+0x1]
  409e3c:	mov    QWORD PTR [r12],rbp
  409e40:	mov    DWORD PTR [r14],0x1
  409e47:	mov    QWORD PTR [rip+0x502c2],rax        # 0x45a110
  409e4e:	movzx  eax,BYTE PTR [rbp+0x1]
  409e52:	mov    BYTE PTR [rbp+0x1],0x0
  409e56:	mov    edx,DWORD PTR [r14]
  409e59:	mov    rcx,QWORD PTR [r12]
  409e5d:	mov    BYTE PTR [rip+0x502b9],al        # 0x45a11c
  409e63:	call   0x409050
  409e68:	mov    rbx,QWORD PTR [rip+0x502a1]        # 0x45a110
  409e6f:	movzx  edx,BYTE PTR [rip+0x502a6]        # 0x45a11c
  409e76:	movsxd rax,DWORD PTR [rip+0x50287]        # 0x45a104
  409e7d:	jmp    0x409900
  409e82:	movzx  eax,BYTE PTR [rip+0x50293]        # 0x45a11c
  409e89:	mov    r14,r13
  409e8c:	mov    DWORD PTR [rip+0x5026e],0x17        # 0x45a104
  409e96:	mov    BYTE PTR [rbx],al
  409e98:	lea    rax,[rbp+0x1]
  409e9c:	mov    QWORD PTR [r12],rbp
  409ea0:	mov    DWORD PTR [r14],0x1
  409ea7:	mov    QWORD PTR [rip+0x50262],rax        # 0x45a110
  409eae:	movzx  eax,BYTE PTR [rbp+0x1]
  409eb2:	mov    BYTE PTR [rbp+0x1],0x0
  409eb6:	mov    edx,DWORD PTR [r14]
  409eb9:	mov    rcx,QWORD PTR [r12]
  409ebd:	mov    BYTE PTR [rip+0x50259],al        # 0x45a11c
  409ec3:	call   0x409050
  409ec8:	mov    rbx,QWORD PTR [rip+0x50241]        # 0x45a110
  409ecf:	movzx  edx,BYTE PTR [rip+0x50246]        # 0x45a11c
  409ed6:	movsxd rax,DWORD PTR [rip+0x50227]        # 0x45a104
  409edd:	jmp    0x409900
  409ee2:	mov    edx,DWORD PTR [r13+0x0]
  409ee6:	mov    rcx,QWORD PTR [r12]
  409eea:	mov    r14,r13
  409eed:	call   0x409050
  409ef2:	mov    rbx,QWORD PTR [rip+0x50217]        # 0x45a110
  409ef9:	movzx  edx,BYTE PTR [rip+0x5021c]        # 0x45a11c
  409f00:	movsxd rax,DWORD PTR [rip+0x501fd]        # 0x45a104
  409f07:	jmp    0x409900
  409f0c:	movzx  eax,BYTE PTR [rip+0x50209]        # 0x45a11c
  409f13:	mov    r14,r13
  409f16:	mov    QWORD PTR [rip+0x501f3],rbp        # 0x45a110
  409f1d:	mov    DWORD PTR [rip+0x501dd],0x1        # 0x45a104
  409f27:	mov    BYTE PTR [rbx],al
  409f29:	mov    QWORD PTR [r12],rbp
  409f2d:	mov    DWORD PTR [r14],0x0
  409f34:	movzx  eax,BYTE PTR [rbp+0x0]
  409f38:	mov    BYTE PTR [rbp+0x0],0x0
  409f3c:	mov    edx,DWORD PTR [r14]
  409f3f:	mov    rcx,QWORD PTR [r12]
  409f43:	mov    BYTE PTR [rip+0x501d3],al        # 0x45a11c
  409f49:	call   0x409050
  409f4e:	mov    rbx,QWORD PTR [rip+0x501bb]        # 0x45a110
  409f55:	movzx  edx,BYTE PTR [rip+0x501c0]        # 0x45a11c
  409f5c:	movsxd rax,DWORD PTR [rip+0x501a1]        # 0x45a104
  409f63:	jmp    0x409900
  409f68:	mov    edx,DWORD PTR [r13+0x0]
  409f6c:	mov    rcx,QWORD PTR [r12]
  409f70:	mov    r14,r13
  409f73:	mov    DWORD PTR [rip+0x50187],0x1        # 0x45a104
  409f7d:	call   0x409050
  409f82:	mov    rbx,QWORD PTR [rip+0x50187]        # 0x45a110
  409f89:	movzx  edx,BYTE PTR [rip+0x5018c]        # 0x45a11c
  409f90:	movsxd rax,DWORD PTR [rip+0x5016d]        # 0x45a104
  409f97:	jmp    0x409900
  409f9c:	mov    edx,DWORD PTR [r13+0x0]
  409fa0:	mov    rcx,QWORD PTR [r12]
  409fa4:	mov    r14,r13
  409fa7:	call   0x409050
  409fac:	mov    rbx,QWORD PTR [rip+0x5015d]        # 0x45a110
  409fb3:	movzx  edx,BYTE PTR [rip+0x50162]        # 0x45a11c
  409fba:	movsxd rax,DWORD PTR [rip+0x50143]        # 0x45a104
  409fc1:	jmp    0x409900
  409fc6:	mov    edx,DWORD PTR [r13+0x0]
  409fca:	mov    rcx,QWORD PTR [r12]
  409fce:	mov    r14,r13
  409fd1:	call   0x409050
  409fd6:	mov    rbx,QWORD PTR [rip+0x50133]        # 0x45a110
  409fdd:	movzx  edx,BYTE PTR [rip+0x50138]        # 0x45a11c
  409fe4:	movsxd rax,DWORD PTR [rip+0x50119]        # 0x45a104
  409feb:	jmp    0x409900
  409ff0:	mov    edx,DWORD PTR [r13+0x0]
  409ff4:	mov    rcx,QWORD PTR [r12]
  409ff8:	mov    r14,r13
  409ffb:	call   0x409050
  40a000:	mov    rbx,QWORD PTR [rip+0x50109]        # 0x45a110
  40a007:	movzx  edx,BYTE PTR [rip+0x5010e]        # 0x45a11c
  40a00e:	movsxd rax,DWORD PTR [rip+0x500ef]        # 0x45a104
  40a015:	jmp    0x409900
  40a01a:	mov    edx,DWORD PTR [r13+0x0]
  40a01e:	mov    rcx,QWORD PTR [r12]
  40a022:	mov    r14,r13
  40a025:	call   0x409050
  40a02a:	mov    rbx,QWORD PTR [rip+0x500df]        # 0x45a110
  40a031:	movzx  edx,BYTE PTR [rip+0x500e4]        # 0x45a11c
  40a038:	movsxd rax,DWORD PTR [rip+0x500c5]        # 0x45a104
  40a03f:	jmp    0x409900
  40a044:	mov    edx,DWORD PTR [r13+0x0]
  40a048:	mov    rcx,QWORD PTR [r12]
  40a04c:	mov    r14,r13
  40a04f:	call   0x409050
  40a054:	mov    rbx,QWORD PTR [rip+0x500b5]        # 0x45a110
  40a05b:	movzx  edx,BYTE PTR [rip+0x500ba]        # 0x45a11c
  40a062:	movsxd rax,DWORD PTR [rip+0x5009b]        # 0x45a104
  40a069:	jmp    0x409900
  40a06e:	mov    edx,DWORD PTR [r13+0x0]
  40a072:	mov    rcx,QWORD PTR [r12]
  40a076:	mov    r14,r13
  40a079:	call   0x409050
  40a07e:	mov    rbx,QWORD PTR [rip+0x5008b]        # 0x45a110
  40a085:	movzx  edx,BYTE PTR [rip+0x50090]        # 0x45a11c
  40a08c:	movsxd rax,DWORD PTR [rip+0x50071]        # 0x45a104
  40a093:	jmp    0x409900
  40a098:	mov    edx,DWORD PTR [r13+0x0]
  40a09c:	mov    rcx,QWORD PTR [r12]
  40a0a0:	mov    r14,r13
  40a0a3:	call   0x409050
  40a0a8:	mov    rbx,QWORD PTR [rip+0x50061]        # 0x45a110
  40a0af:	movzx  edx,BYTE PTR [rip+0x50066]        # 0x45a11c
  40a0b6:	movsxd rax,DWORD PTR [rip+0x50047]        # 0x45a104
  40a0bd:	jmp    0x409900
  40a0c2:	mov    edx,DWORD PTR [r13+0x0]
  40a0c6:	mov    rcx,QWORD PTR [r12]
  40a0ca:	mov    r14,r13
  40a0cd:	call   0x409050
  40a0d2:	mov    rbx,QWORD PTR [rip+0x50037]        # 0x45a110
  40a0d9:	movzx  edx,BYTE PTR [rip+0x5003c]        # 0x45a11c
  40a0e0:	movsxd rax,DWORD PTR [rip+0x5001d]        # 0x45a104
  40a0e7:	jmp    0x409900
  40a0ec:	mov    edx,DWORD PTR [r13+0x0]
  40a0f0:	mov    rcx,QWORD PTR [r12]
  40a0f4:	mov    r14,r13
  40a0f7:	call   0x409050
  40a0fc:	mov    rbx,QWORD PTR [rip+0x5000d]        # 0x45a110
  40a103:	movzx  edx,BYTE PTR [rip+0x50012]        # 0x45a11c
  40a10a:	movsxd rax,DWORD PTR [rip+0x4fff3]        # 0x45a104
  40a111:	jmp    0x409900
  40a116:	mov    edx,DWORD PTR [r13+0x0]
  40a11a:	mov    rcx,QWORD PTR [r12]
  40a11e:	mov    r14,r13
  40a121:	call   0x409050
  40a126:	mov    rbx,QWORD PTR [rip+0x4ffe3]        # 0x45a110
  40a12d:	movzx  edx,BYTE PTR [rip+0x4ffe8]        # 0x45a11c
  40a134:	movsxd rax,DWORD PTR [rip+0x4ffc9]        # 0x45a104
  40a13b:	jmp    0x409900
  40a140:	mov    rcx,QWORD PTR [r12]
  40a144:	mov    rbx,QWORD PTR [rip+0x4ffad]        # 0x45a0f8
  40a14b:	mov    r14,r13
  40a14e:	call   0x424900
  40a153:	mov    edx,DWORD PTR [r13+0x0]
  40a157:	mov    rcx,QWORD PTR [r12]
  40a15b:	mov    QWORD PTR [rbx+0x48],rax
  40a15f:	mov    DWORD PTR [rip+0x4ff9b],0xf        # 0x45a104
  40a169:	call   0x409050
  40a16e:	mov    rbx,QWORD PTR [rip+0x4ff9b]        # 0x45a110
  40a175:	movzx  edx,BYTE PTR [rip+0x4ffa0]        # 0x45a11c
  40a17c:	movsxd rax,DWORD PTR [rip+0x4ff81]        # 0x45a104
  40a183:	jmp    0x409900
  40a188:	movzx  eax,BYTE PTR [rip+0x4ff8d]        # 0x45a11c
  40a18f:	mov    r14,r13
  40a192:	mov    BYTE PTR [rbx],al
  40a194:	lea    rax,[rbp+0x1]
  40a198:	mov    QWORD PTR [r12],rbp
  40a19c:	mov    DWORD PTR [r14],0x1
  40a1a3:	mov    QWORD PTR [rip+0x4ff66],rax        # 0x45a110
  40a1aa:	movzx  eax,BYTE PTR [rbp+0x1]
  40a1ae:	mov    BYTE PTR [rbp+0x1],0x0
  40a1b2:	mov    edx,DWORD PTR [r14]
  40a1b5:	mov    rcx,QWORD PTR [r12]
  40a1b9:	mov    BYTE PTR [rip+0x4ff5d],al        # 0x45a11c
  40a1bf:	call   0x409050
  40a1c4:	mov    rbx,QWORD PTR [rip+0x4ff45]        # 0x45a110
  40a1cb:	movzx  edx,BYTE PTR [rip+0x4ff4a]        # 0x45a11c
  40a1d2:	movsxd rax,DWORD PTR [rip+0x4ff2b]        # 0x45a104
  40a1d9:	jmp    0x409900
  40a1de:	mov    r14,r13
  40a1e1:	mov    r13,rbp
  40a1e4:	mov    rbp,QWORD PTR [rip+0x4ff0d]        # 0x45a0f8
  40a1eb:	mov    rcx,QWORD PTR [r12]
  40a1ef:	mov    r15,QWORD PTR [rbp+0x48]
  40a1f3:	mov    rdx,r15
  40a1f6:	call   0x42a420
  40a1fb:	test   eax,eax
  40a1fd:	je     0x40b879
  40a203:	mov    eax,DWORD PTR [r14]
  40a206:	lea    edx,[rax-0x1]
  40a209:	movzx  eax,BYTE PTR [rip+0x4ff0c]        # 0x45a11c
  40a210:	mov    BYTE PTR [rbx],al
  40a212:	movsxd rax,edx
  40a215:	mov    QWORD PTR [r12],r13
  40a219:	add    rax,r13
  40a21c:	mov    DWORD PTR [r14],edx
  40a21f:	movzx  edx,BYTE PTR [rax]
  40a222:	mov    QWORD PTR [rip+0x4fee7],rax        # 0x45a110
  40a229:	mov    BYTE PTR [rax],0x0
  40a22c:	mov    BYTE PTR [rip+0x4feea],dl        # 0x45a11c
  40a232:	mov    edx,DWORD PTR [r14]
  40a235:	mov    rcx,QWORD PTR [r12]
  40a239:	call   0x409050
  40a23e:	mov    rbx,QWORD PTR [rip+0x4fecb]        # 0x45a110
  40a245:	movzx  edx,BYTE PTR [rip+0x4fed0]        # 0x45a11c
  40a24c:	movsxd rax,DWORD PTR [rip+0x4feb1]        # 0x45a104
  40a253:	jmp    0x409900
  40a258:	mov    edx,DWORD PTR [r13+0x0]
  40a25c:	mov    rcx,QWORD PTR [r12]
  40a260:	mov    r14,r13
  40a263:	call   0x409050
  40a268:	mov    rbx,QWORD PTR [rip+0x4fea1]        # 0x45a110
  40a26f:	movzx  edx,BYTE PTR [rip+0x4fea6]        # 0x45a11c
  40a276:	movsxd rax,DWORD PTR [rip+0x4fe87]        # 0x45a104
  40a27d:	jmp    0x409900
  40a282:	mov    edx,DWORD PTR [r13+0x0]
  40a286:	mov    rcx,QWORD PTR [r12]
  40a28a:	mov    r14,r13
  40a28d:	call   0x409050
  40a292:	mov    rbx,QWORD PTR [rip+0x4fe77]        # 0x45a110
  40a299:	movzx  edx,BYTE PTR [rip+0x4fe7c]        # 0x45a11c
  40a2a0:	movsxd rax,DWORD PTR [rip+0x4fe5d]        # 0x45a104
  40a2a7:	jmp    0x409900
  40a2ac:	mov    edx,DWORD PTR [r13+0x0]
  40a2b0:	mov    rcx,QWORD PTR [r12]
  40a2b4:	mov    r14,r13
  40a2b7:	call   0x409050
  40a2bc:	mov    rbx,QWORD PTR [rip+0x4fe4d]        # 0x45a110
  40a2c3:	movzx  edx,BYTE PTR [rip+0x4fe52]        # 0x45a11c
  40a2ca:	movsxd rax,DWORD PTR [rip+0x4fe33]        # 0x45a104
  40a2d1:	jmp    0x409900
  40a2d6:	mov    edx,DWORD PTR [r13+0x0]
  40a2da:	mov    rcx,QWORD PTR [r12]
  40a2de:	mov    r14,r13
  40a2e1:	mov    DWORD PTR [rip+0x4fe19],0x7        # 0x45a104
  40a2eb:	call   0x409050
  40a2f0:	mov    rbx,QWORD PTR [rip+0x4fe19]        # 0x45a110
  40a2f7:	movzx  edx,BYTE PTR [rip+0x4fe1e]        # 0x45a11c
  40a2fe:	movsxd rax,DWORD PTR [rip+0x4fdff]        # 0x45a104
  40a305:	jmp    0x409900
  40a30a:	mov    edx,DWORD PTR [r13+0x0]
  40a30e:	mov    rcx,QWORD PTR [r12]
  40a312:	mov    r14,r13
  40a315:	mov    DWORD PTR [rip+0x4fde5],0x11        # 0x45a104
  40a31f:	call   0x409050
  40a324:	mov    rbx,QWORD PTR [rip+0x4fde5]        # 0x45a110
  40a32b:	movzx  edx,BYTE PTR [rip+0x4fdea]        # 0x45a11c
  40a332:	movsxd rax,DWORD PTR [rip+0x4fdcb]        # 0x45a104
  40a339:	jmp    0x409900
  40a33e:	mov    edx,DWORD PTR [r13+0x0]
  40a342:	mov    rcx,QWORD PTR [r12]
  40a346:	mov    r14,r13
  40a349:	mov    DWORD PTR [rip+0x4fdb1],0x1        # 0x45a104
  40a353:	call   0x409050
  40a358:	mov    rbx,QWORD PTR [rip+0x4fdb1]        # 0x45a110
  40a35f:	movzx  edx,BYTE PTR [rip+0x4fdb6]        # 0x45a11c
  40a366:	movsxd rax,DWORD PTR [rip+0x4fd97]        # 0x45a104
  40a36d:	jmp    0x409900
  40a372:	movzx  eax,BYTE PTR [rip+0x4fda3]        # 0x45a11c
  40a379:	mov    r14,r13
  40a37c:	mov    DWORD PTR [rip+0x4fd7e],0x13        # 0x45a104
  40a386:	mov    BYTE PTR [rbx],al
  40a388:	lea    rax,[rbp+0x1]
  40a38c:	mov    QWORD PTR [r12],rbp
  40a390:	mov    DWORD PTR [r14],0x1
  40a397:	mov    QWORD PTR [rip+0x4fd72],rax        # 0x45a110
  40a39e:	movzx  eax,BYTE PTR [rbp+0x1]
  40a3a2:	mov    BYTE PTR [rbp+0x1],0x0
  40a3a6:	mov    edx,DWORD PTR [r14]
  40a3a9:	mov    rcx,QWORD PTR [r12]
  40a3ad:	mov    BYTE PTR [rip+0x4fd69],al        # 0x45a11c
  40a3b3:	call   0x409050
  40a3b8:	mov    rbx,QWORD PTR [rip+0x4fd51]        # 0x45a110
  40a3bf:	movzx  edx,BYTE PTR [rip+0x4fd56]        # 0x45a11c
  40a3c6:	movsxd rax,DWORD PTR [rip+0x4fd37]        # 0x45a104
  40a3cd:	jmp    0x409900
  40a3d2:	mov    edx,DWORD PTR [r13+0x0]
  40a3d6:	mov    rcx,QWORD PTR [r12]
  40a3da:	mov    r14,r13
  40a3dd:	call   0x409050
  40a3e2:	mov    rbx,QWORD PTR [rip+0x4fd27]        # 0x45a110
  40a3e9:	movzx  edx,BYTE PTR [rip+0x4fd2c]        # 0x45a11c
  40a3f0:	movsxd rax,DWORD PTR [rip+0x4fd0d]        # 0x45a104
  40a3f7:	jmp    0x409900
  40a3fc:	movzx  eax,BYTE PTR [rip+0x4fd19]        # 0x45a11c
  40a403:	mov    r14,r13
  40a406:	mov    QWORD PTR [rip+0x4fd03],rbp        # 0x45a110
  40a40d:	mov    DWORD PTR [rip+0x4fced],0x1        # 0x45a104
  40a417:	mov    BYTE PTR [rbx],al
  40a419:	mov    QWORD PTR [r12],rbp
  40a41d:	mov    DWORD PTR [r14],0x0
  40a424:	movzx  eax,BYTE PTR [rbp+0x0]
  40a428:	mov    BYTE PTR [rbp+0x0],0x0
  40a42c:	mov    edx,DWORD PTR [r14]
  40a42f:	mov    rcx,QWORD PTR [r12]
  40a433:	mov    BYTE PTR [rip+0x4fce3],al        # 0x45a11c
  40a439:	call   0x409050
  40a43e:	mov    rbx,QWORD PTR [rip+0x4fccb]        # 0x45a110
  40a445:	movzx  edx,BYTE PTR [rip+0x4fcd0]        # 0x45a11c
  40a44c:	movsxd rax,DWORD PTR [rip+0x4fcb1]        # 0x45a104
  40a453:	jmp    0x409900
  40a458:	mov    edx,DWORD PTR [r13+0x0]
  40a45c:	mov    rcx,QWORD PTR [r12]
  40a460:	mov    r14,r13
  40a463:	mov    DWORD PTR [rip+0x4fc97],0x1        # 0x45a104
  40a46d:	call   0x409050
  40a472:	mov    rbx,QWORD PTR [rip+0x4fc97]        # 0x45a110
  40a479:	movzx  edx,BYTE PTR [rip+0x4fc9c]        # 0x45a11c
  40a480:	movsxd rax,DWORD PTR [rip+0x4fc7d]        # 0x45a104
  40a487:	jmp    0x409900
  40a48c:	mov    edx,DWORD PTR [r13+0x0]
  40a490:	mov    rcx,QWORD PTR [r12]
  40a494:	mov    r14,r13
  40a497:	call   0x409050
  40a49c:	mov    rbx,QWORD PTR [rip+0x4fc6d]        # 0x45a110
  40a4a3:	movzx  edx,BYTE PTR [rip+0x4fc72]        # 0x45a11c
  40a4aa:	movsxd rax,DWORD PTR [rip+0x4fc53]        # 0x45a104
  40a4b1:	jmp    0x409900
  40a4b6:	mov    edx,DWORD PTR [r13+0x0]
  40a4ba:	mov    rcx,QWORD PTR [r12]
  40a4be:	mov    r14,r13
  40a4c1:	call   0x409050
  40a4c6:	mov    rbx,QWORD PTR [rip+0x4fc43]        # 0x45a110
  40a4cd:	movzx  edx,BYTE PTR [rip+0x4fc48]        # 0x45a11c
  40a4d4:	movsxd rax,DWORD PTR [rip+0x4fc29]        # 0x45a104
  40a4db:	jmp    0x409900
  40a4e0:	movzx  eax,BYTE PTR [rip+0x4fc35]        # 0x45a11c
  40a4e7:	mov    r14,r13
  40a4ea:	mov    BYTE PTR [rbx],al
  40a4ec:	lea    rax,[rbp+0x1]
  40a4f0:	mov    QWORD PTR [r12],rbp
  40a4f4:	mov    DWORD PTR [r14],0x1
  40a4fb:	mov    QWORD PTR [rip+0x4fc0e],rax        # 0x45a110
  40a502:	movzx  eax,BYTE PTR [rbp+0x1]
  40a506:	mov    BYTE PTR [rbp+0x1],0x0
  40a50a:	mov    edx,DWORD PTR [r14]
  40a50d:	mov    rcx,QWORD PTR [r12]
  40a511:	mov    BYTE PTR [rip+0x4fc05],al        # 0x45a11c
  40a517:	call   0x409050
  40a51c:	mov    rbx,QWORD PTR [rip+0x4fbed]        # 0x45a110
  40a523:	movzx  edx,BYTE PTR [rip+0x4fbf2]        # 0x45a11c
  40a52a:	movsxd rax,DWORD PTR [rip+0x4fbd3]        # 0x45a104
  40a531:	jmp    0x409900
  40a536:	mov    edx,DWORD PTR [r13+0x0]
  40a53a:	mov    rcx,QWORD PTR [r12]
  40a53e:	mov    r14,r13
  40a541:	call   0x409050
  40a546:	mov    rbx,QWORD PTR [rip+0x4fbc3]        # 0x45a110
  40a54d:	movzx  edx,BYTE PTR [rip+0x4fbc8]        # 0x45a11c
  40a554:	movsxd rax,DWORD PTR [rip+0x4fba9]        # 0x45a104
  40a55b:	jmp    0x409900
  40a560:	mov    edx,DWORD PTR [r13+0x0]
  40a564:	mov    rcx,QWORD PTR [r12]
  40a568:	mov    r14,r13
  40a56b:	call   0x409050
  40a570:	mov    rbx,QWORD PTR [rip+0x4fb99]        # 0x45a110
  40a577:	movzx  edx,BYTE PTR [rip+0x4fb9e]        # 0x45a11c
  40a57e:	movsxd rax,DWORD PTR [rip+0x4fb7f]        # 0x45a104
  40a585:	jmp    0x409900
  40a58a:	mov    edx,DWORD PTR [r13+0x0]
  40a58e:	mov    rcx,QWORD PTR [r12]
  40a592:	mov    r14,r13
  40a595:	call   0x409050
  40a59a:	mov    rbx,QWORD PTR [rip+0x4fb6f]        # 0x45a110
  40a5a1:	movzx  edx,BYTE PTR [rip+0x4fb74]        # 0x45a11c
  40a5a8:	movsxd rax,DWORD PTR [rip+0x4fb55]        # 0x45a104
  40a5af:	jmp    0x409900
  40a5b4:	mov    rax,QWORD PTR [rip+0x4fb3d]        # 0x45a0f8
  40a5bb:	mov    edx,DWORD PTR [r13+0x0]
  40a5bf:	mov    r14,r13
  40a5c2:	mov    rcx,QWORD PTR [r12]
  40a5c6:	add    DWORD PTR [rax+0x3c],0x1
  40a5ca:	call   0x409050
  40a5cf:	mov    rbx,QWORD PTR [rip+0x4fb3a]        # 0x45a110
  40a5d6:	movzx  edx,BYTE PTR [rip+0x4fb3f]        # 0x45a11c
  40a5dd:	movsxd rax,DWORD PTR [rip+0x4fb20]        # 0x45a104
  40a5e4:	jmp    0x409900
  40a5e9:	mov    rdx,QWORD PTR [rip+0x4fb08]        # 0x45a0f8
  40a5f0:	mov    r14,r13
  40a5f3:	mov    eax,DWORD PTR [rdx+0x3c]
  40a5f6:	test   eax,eax
  40a5f8:	jle    0x40a600
  40a5fa:	sub    eax,0x1
  40a5fd:	mov    DWORD PTR [rdx+0x3c],eax
  40a600:	mov    edx,DWORD PTR [r14]
  40a603:	mov    rcx,QWORD PTR [r12]
  40a607:	call   0x409050
  40a60c:	mov    rbx,QWORD PTR [rip+0x4fafd]        # 0x45a110
  40a613:	movzx  edx,BYTE PTR [rip+0x4fb02]        # 0x45a11c
  40a61a:	movsxd rax,DWORD PTR [rip+0x4fae3]        # 0x45a104
  40a621:	jmp    0x409900
  40a626:	mov    edx,DWORD PTR [r13+0x0]
  40a62a:	mov    rcx,QWORD PTR [r12]
  40a62e:	mov    r14,r13
  40a631:	call   0x409050
  40a636:	mov    rax,QWORD PTR [rip+0x4fabb]        # 0x45a0f8
  40a63d:	mov    eax,DWORD PTR [rax+0x3c]
  40a640:	test   eax,eax
  40a642:	je     0x40bb4d
  40a648:	mov    rbx,QWORD PTR [rip+0x4fac1]        # 0x45a110
  40a64f:	movzx  edx,BYTE PTR [rip+0x4fac6]        # 0x45a11c
  40a656:	movsxd rax,DWORD PTR [rip+0x4faa7]        # 0x45a104
  40a65d:	jmp    0x409900
  40a662:	mov    rax,QWORD PTR [r12]
  40a666:	mov    edx,0x1
  40a66b:	mov    r14,r13
  40a66e:	lea    rcx,[rax+0x1]
  40a672:	call   0x409050
  40a677:	mov    rbx,QWORD PTR [rip+0x4fa92]        # 0x45a110
  40a67e:	movzx  edx,BYTE PTR [rip+0x4fa97]        # 0x45a11c
  40a685:	movsxd rax,DWORD PTR [rip+0x4fa78]        # 0x45a104
  40a68c:	jmp    0x409900
  40a691:	mov    eax,0x2
  40a696:	jmp    0x4099b9
  40a69b:	mov    eax,DWORD PTR [r13+0x0]
  40a69f:	mov    r14,r13
  40a6a2:	lea    edx,[rax-0x1]
  40a6a5:	mov    rax,QWORD PTR [r12]
  40a6a9:	lea    rcx,[rax+0x1]
  40a6ad:	call   0x408da0
  40a6b2:	mov    rbp,rax
  40a6b5:	mov    rax,QWORD PTR [rsp+0x20]
  40a6ba:	mov    rdx,rbp
  40a6bd:	mov    rcx,QWORD PTR [rax+0x110]
  40a6c4:	call   0x40eb20
  40a6c9:	test   rax,rax
  40a6cc:	mov    r13,rax
  40a6cf:	je     0x40b95e
  40a6d5:	mov    rax,QWORD PTR [rip+0x4fa1c]        # 0x45a0f8
  40a6dc:	mov    rbx,QWORD PTR [rax]
  40a6df:	test   rbx,rbx
  40a6e2:	je     0x40a706
  40a6e4:	mov    rcx,QWORD PTR [rbx+0x18]
  40a6e8:	test   rcx,rcx
  40a6eb:	je     0x40a6fd
  40a6ed:	mov    rdx,rbp
  40a6f0:	call   0x42a420
  40a6f5:	test   eax,eax
  40a6f7:	je     0x40b584
  40a6fd:	mov    rbx,QWORD PTR [rbx+0x20]
  40a701:	test   rbx,rbx
  40a704:	jne    0x40a6e4
  40a706:	mov    ecx,0x28
  40a70b:	call   0x424800
  40a710:	mov    rbx,rax
  40a713:	xor    eax,eax
  40a715:	test   rbp,rbp
  40a718:	je     0x40a722
  40a71a:	mov    rcx,rbp
  40a71d:	call   0x424900
  40a722:	mov    rcx,r13
  40a725:	mov    QWORD PTR [rbx+0x18],rax
  40a729:	call   0x42a400
  40a72e:	lea    r8,[rbx+0x8]
  40a732:	mov    edx,eax
  40a734:	mov    rcx,r13
  40a737:	call   0x409760
  40a73c:	mov    rdx,QWORD PTR [rip+0x4f9b5]        # 0x45a0f8
  40a743:	mov    QWORD PTR [rbx],rax
  40a746:	mov    rax,QWORD PTR [rbx+0x8]
  40a74a:	cmp    BYTE PTR [rdx+0x24],0x0
  40a74e:	mov    QWORD PTR [rdx+0x28],rax
  40a752:	je     0x40b76f
  40a758:	mov    rax,QWORD PTR [rbx+0x8]
  40a75c:	mov    QWORD PTR [rbx+0x10],0x0
  40a764:	mov    QWORD PTR [rdx+0x30],rax
  40a768:	mov    rax,QWORD PTR [rdx]
  40a76b:	mov    QWORD PTR [rbx+0x20],rax
  40a76f:	mov    QWORD PTR [rdx],rbx
  40a772:	jmp    0x40b59f
  40a777:	xor    ecx,ecx
  40a779:	mov    r14,r13
  40a77c:	call   0x4090e0
  40a781:	mov    rbx,QWORD PTR [rip+0x4f988]        # 0x45a110
  40a788:	movzx  edx,BYTE PTR [rip+0x4f98d]        # 0x45a11c
  40a78f:	movsxd rax,DWORD PTR [rip+0x4f96e]        # 0x45a104
  40a796:	jmp    0x409900
  40a79b:	mov    ecx,0x1
  40a7a0:	mov    r14,r13
  40a7a3:	call   0x4090e0
  40a7a8:	mov    rbx,QWORD PTR [rip+0x4f961]        # 0x45a110
  40a7af:	movzx  edx,BYTE PTR [rip+0x4f966]        # 0x45a11c
  40a7b6:	movsxd rax,DWORD PTR [rip+0x4f947]        # 0x45a104
  40a7bd:	jmp    0x409900
  40a7c2:	movzx  eax,BYTE PTR [rip+0x4f953]        # 0x45a11c
  40a7c9:	mov    r14,r13
  40a7cc:	mov    BYTE PTR [rbx],al
  40a7ce:	lea    rax,[rbp+0x1]
  40a7d2:	mov    QWORD PTR [r12],rbp
  40a7d6:	mov    DWORD PTR [r14],0x1
  40a7dd:	mov    QWORD PTR [rip+0x4f92c],rax        # 0x45a110
  40a7e4:	movzx  eax,BYTE PTR [rbp+0x1]
  40a7e8:	mov    BYTE PTR [rbp+0x1],0x0
  40a7ec:	mov    edx,DWORD PTR [r14]
  40a7ef:	mov    rcx,QWORD PTR [r12]
  40a7f3:	mov    BYTE PTR [rip+0x4f923],al        # 0x45a11c
  40a7f9:	call   0x409050
  40a7fe:	mov    rbx,QWORD PTR [rip+0x4f90b]        # 0x45a110
  40a805:	movzx  edx,BYTE PTR [rip+0x4f910]        # 0x45a11c
  40a80c:	movsxd rax,DWORD PTR [rip+0x4f8f1]        # 0x45a104
  40a813:	jmp    0x409900
  40a818:	movzx  eax,BYTE PTR [rip+0x4f8fd]        # 0x45a11c
  40a81f:	mov    r14,r13
  40a822:	mov    BYTE PTR [rbx],al
  40a824:	lea    rax,[rbp+0x1]
  40a828:	mov    QWORD PTR [r12],rbp
  40a82c:	mov    DWORD PTR [r14],0x1
  40a833:	mov    QWORD PTR [rip+0x4f8d6],rax        # 0x45a110
  40a83a:	movzx  eax,BYTE PTR [rbp+0x1]
  40a83e:	mov    BYTE PTR [rbp+0x1],0x0
  40a842:	mov    edx,DWORD PTR [r14]
  40a845:	mov    rcx,QWORD PTR [r12]
  40a849:	mov    BYTE PTR [rip+0x4f8cd],al        # 0x45a11c
  40a84f:	call   0x409050
  40a854:	mov    rbx,QWORD PTR [rip+0x4f8b5]        # 0x45a110
  40a85b:	movzx  edx,BYTE PTR [rip+0x4f8ba]        # 0x45a11c
  40a862:	movsxd rax,DWORD PTR [rip+0x4f89b]        # 0x45a104
  40a869:	jmp    0x409900
  40a86e:	mov    edx,DWORD PTR [r13+0x0]
  40a872:	mov    rcx,QWORD PTR [r12]
  40a876:	mov    r14,r13
  40a879:	call   0x409050
  40a87e:	mov    rbx,QWORD PTR [rip+0x4f88b]        # 0x45a110
  40a885:	movzx  edx,BYTE PTR [rip+0x4f890]        # 0x45a11c
  40a88c:	movsxd rax,DWORD PTR [rip+0x4f871]        # 0x45a104
  40a893:	jmp    0x409900
  40a898:	mov    r14,r13
  40a89b:	mov    r13,rbp
  40a89e:	mov    rbp,QWORD PTR [r12]
  40a8a2:	mov    eax,DWORD PTR [r14]
  40a8a5:	lea    rdx,[rip+0x299fe]        # 0x4342aa
  40a8ac:	mov    rcx,rbp
  40a8af:	mov    DWORD PTR [rsp+0x30],eax
  40a8b3:	call   0x42a3d8
  40a8b8:	lea    rdx,[rip+0x299ee]        # 0x4342ad
  40a8bf:	mov    rcx,rbp
  40a8c2:	mov    r15,rax
  40a8c5:	call   0x42a3d8
  40a8ca:	test   rax,rax
  40a8cd:	je     0x40b413
  40a8d3:	test   r15,r15
  40a8d6:	je     0x40b413
  40a8dc:	cmp    r15,rax
  40a8df:	cmova  r15,rax
  40a8e3:	mov    rax,r15
  40a8e6:	sub    rax,rbp
  40a8e9:	cmp    eax,0x1
  40a8ec:	mov    r15d,eax
  40a8ef:	mov    ecx,eax
  40a8f1:	jle    0x40a958
  40a8f3:	cdqe   
  40a8f5:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40a8fa:	sub    eax,0x2b
  40a8fd:	test   al,0xfd
  40a8ff:	jne    0x40a958
  40a901:	mov    QWORD PTR [rsp+0x28],rbx
  40a906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a910:	lea    ebx,[r15-0x2]
  40a914:	movsxd rax,ebx
  40a917:	lea    rcx,[rip+0x29992]        # 0x4342b0
  40a91e:	movsx  edx,BYTE PTR [rbp+rax*1+0x0]
  40a923:	call   0x42a428
  40a928:	test   rax,rax
  40a92b:	jne    0x40a950
  40a92d:	sub    ebx,0x1
  40a930:	cmp    ebx,0xffffffff
  40a933:	jne    0x40a914
  40a935:	sub    r15d,0x1
  40a939:	cmp    r15d,0x1
  40a93d:	je     0x40a950
  40a93f:	movsxd rax,r15d
  40a942:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40a947:	sub    eax,0x2b
  40a94a:	test   al,0xfd
  40a94c:	je     0x40a910
  40a94e:	xchg   ax,ax
  40a950:	mov    rbx,QWORD PTR [rsp+0x28]
  40a955:	mov    ecx,r15d
  40a958:	mov    edx,DWORD PTR [rsp+0x30]
  40a95c:	cmp    edx,ecx
  40a95e:	jle    0x40a990
  40a960:	movzx  eax,BYTE PTR [rip+0x4f7b5]        # 0x45a11c
  40a967:	mov    BYTE PTR [rbx],al
  40a969:	movsxd rax,ecx
  40a96c:	mov    QWORD PTR [r12],r13
  40a970:	add    rax,r13
  40a973:	mov    DWORD PTR [r14],ecx
  40a976:	movzx  edx,BYTE PTR [rax]
  40a979:	mov    BYTE PTR [rax],0x0
  40a97c:	mov    rbp,QWORD PTR [r12]
  40a980:	mov    QWORD PTR [rip+0x4f789],rax        # 0x45a110
  40a987:	mov    BYTE PTR [rip+0x4f78f],dl        # 0x45a11c
  40a98d:	mov    edx,DWORD PTR [r14]
  40a990:	mov    rcx,rbp
  40a993:	call   0x409050
  40a998:	mov    rbx,QWORD PTR [rip+0x4f771]        # 0x45a110
  40a99f:	movzx  edx,BYTE PTR [rip+0x4f776]        # 0x45a11c
  40a9a6:	movsxd rax,DWORD PTR [rip+0x4f757]        # 0x45a104
  40a9ad:	jmp    0x409900
  40a9b2:	mov    rax,QWORD PTR [rip+0x4f737]        # 0x45a0f0
  40a9b9:	mov    r14,r13
  40a9bc:	mov    DWORD PTR [rip+0x4f716],0x0        # 0x45a0dc
  40a9c6:	mov    DWORD PTR [rip+0x4f734],0x21        # 0x45a104
  40a9d0:	mov    rbx,QWORD PTR [rip+0x4f739]        # 0x45a110
  40a9d7:	movzx  edx,BYTE PTR [rip+0x4f73e]        # 0x45a11c
  40a9de:	mov    rax,QWORD PTR [rax+0x8]
  40a9e2:	mov    DWORD PTR [rip+0x4f6f0],eax        # 0x45a0d8
  40a9e8:	mov    rax,QWORD PTR [rip+0x4f6f1]        # 0x45a0e0
  40a9ef:	mov    BYTE PTR [rax],0x60
  40a9f2:	mov    eax,0x21
  40a9f7:	jmp    0x409900
  40a9fc:	mov    edx,DWORD PTR [r13+0x0]
  40aa00:	mov    rcx,QWORD PTR [r12]
  40aa04:	mov    r14,r13
  40aa07:	call   0x409050
  40aa0c:	mov    rax,QWORD PTR [rip+0x4f6cd]        # 0x45a0e0
  40aa13:	mov    DWORD PTR [rip+0x4f6bf],0x0        # 0x45a0dc
  40aa1d:	mov    DWORD PTR [rip+0x4f6dd],0x23        # 0x45a104
  40aa27:	mov    rbx,QWORD PTR [rip+0x4f6e2]        # 0x45a110
  40aa2e:	movzx  edx,BYTE PTR [rip+0x4f6e7]        # 0x45a11c
  40aa35:	mov    BYTE PTR [rax],0x22
  40aa38:	mov    eax,0x23
  40aa3d:	jmp    0x409900
  40aa42:	cmp    DWORD PTR [rip+0x4f69f],0x5        # 0x45a0e8
  40aa49:	mov    r14,r13
  40aa4c:	je     0x40b8aa
  40aa52:	mov    eax,DWORD PTR [r13+0x0]
  40aa56:	lea    edx,[rax-0x1]
  40aa59:	mov    rax,QWORD PTR [r12]
  40aa5d:	lea    rcx,[rax+0x1]
  40aa61:	call   0x408da0
  40aa66:	mov    rbp,rax
  40aa69:	mov    rax,QWORD PTR [rip+0x49e70]        # 0x4548e0
  40aa70:	mov    rdx,rbp
  40aa73:	mov    rcx,QWORD PTR [rax+0x110]
  40aa7a:	call   0x40eb20
  40aa7f:	mov    rcx,rbp
  40aa82:	mov    rbx,rax
  40aa85:	call   0x42a4e8
  40aa8a:	test   rbx,rbx
  40aa8d:	je     0x40b9d0
  40aa93:	mov    rcx,QWORD PTR [rip+0x4f656]        # 0x45a0f0
  40aa9a:	mov    rdx,rbx
  40aa9d:	call   0x427dc8
  40aaa2:	mov    rax,QWORD PTR [rip+0x4f637]        # 0x45a0e0
  40aaa9:	mov    BYTE PTR [rax],0x3a
  40aaac:	mov    DWORD PTR [rip+0x4f626],0x0        # 0x45a0dc
  40aab6:	mov    rbx,QWORD PTR [rip+0x4f653]        # 0x45a110
  40aabd:	movzx  edx,BYTE PTR [rip+0x4f658]        # 0x45a11c
  40aac4:	movsxd rax,DWORD PTR [rip+0x4f639]        # 0x45a104
  40aacb:	jmp    0x409900
  40aad0:	cmp    DWORD PTR [rip+0x4f611],0x5        # 0x45a0e8
  40aad7:	mov    r14,r13
  40aada:	je     0x40b898
  40aae0:	xor    ecx,ecx
  40aae2:	call   0x4090e0
  40aae7:	mov    rax,QWORD PTR [rip+0x4f5f2]        # 0x45a0e0
  40aaee:	mov    BYTE PTR [rax],0x3a
  40aaf1:	mov    DWORD PTR [rip+0x4f5e1],0x0        # 0x45a0dc
  40aafb:	mov    rbx,QWORD PTR [rip+0x4f60e]        # 0x45a110
  40ab02:	movzx  edx,BYTE PTR [rip+0x4f613]        # 0x45a11c
  40ab09:	movsxd rax,DWORD PTR [rip+0x4f5f4]        # 0x45a104
  40ab10:	jmp    0x409900
  40ab15:	cmp    DWORD PTR [rip+0x4f5cc],0x5        # 0x45a0e8
  40ab1c:	mov    r14,r13
  40ab1f:	je     0x40b8e3
  40ab25:	mov    ecx,0x1
  40ab2a:	call   0x4090e0
  40ab2f:	mov    rax,QWORD PTR [rip+0x4f5aa]        # 0x45a0e0
  40ab36:	mov    BYTE PTR [rax],0x3a
  40ab39:	mov    DWORD PTR [rip+0x4f599],0x0        # 0x45a0dc
  40ab43:	mov    rbx,QWORD PTR [rip+0x4f5c6]        # 0x45a110
  40ab4a:	movzx  edx,BYTE PTR [rip+0x4f5cb]        # 0x45a11c
  40ab51:	movsxd rax,DWORD PTR [rip+0x4f5ac]        # 0x45a104
  40ab58:	jmp    0x409900
  40ab5d:	movzx  eax,BYTE PTR [rip+0x4f5b8]        # 0x45a11c
  40ab64:	mov    r14,r13
  40ab67:	add    DWORD PTR [rip+0x4f56e],0x1        # 0x45a0dc
  40ab6e:	mov    BYTE PTR [rbx],al
  40ab70:	lea    rax,[rbp+0x1]
  40ab74:	mov    QWORD PTR [r12],rbp
  40ab78:	mov    DWORD PTR [r14],0x1
  40ab7f:	mov    QWORD PTR [rip+0x4f58a],rax        # 0x45a110
  40ab86:	movzx  eax,BYTE PTR [rbp+0x1]
  40ab8a:	mov    BYTE PTR [rbp+0x1],0x0
  40ab8e:	mov    edx,DWORD PTR [r14]
  40ab91:	mov    rcx,QWORD PTR [r12]
  40ab95:	mov    BYTE PTR [rip+0x4f581],al        # 0x45a11c
  40ab9b:	call   0x409050
  40aba0:	mov    rbx,QWORD PTR [rip+0x4f569]        # 0x45a110
  40aba7:	movzx  edx,BYTE PTR [rip+0x4f56e]        # 0x45a11c
  40abae:	movsxd rax,DWORD PTR [rip+0x4f54f]        # 0x45a104
  40abb5:	jmp    0x409900
  40abba:	movzx  eax,BYTE PTR [rip+0x4f55b]        # 0x45a11c
  40abc1:	mov    r14,r13
  40abc4:	add    DWORD PTR [rip+0x4f511],0x1        # 0x45a0dc
  40abcb:	mov    BYTE PTR [rbx],al
  40abcd:	lea    rax,[rbp+0x1]
  40abd1:	mov    QWORD PTR [r12],rbp
  40abd5:	mov    DWORD PTR [r14],0x1
  40abdc:	mov    QWORD PTR [rip+0x4f52d],rax        # 0x45a110
  40abe3:	movzx  eax,BYTE PTR [rbp+0x1]
  40abe7:	mov    BYTE PTR [rbp+0x1],0x0
  40abeb:	mov    edx,DWORD PTR [r14]
  40abee:	mov    rcx,QWORD PTR [r12]
  40abf2:	mov    BYTE PTR [rip+0x4f524],al        # 0x45a11c
  40abf8:	call   0x409050
  40abfd:	mov    rbx,QWORD PTR [rip+0x4f50c]        # 0x45a110
  40ac04:	movzx  edx,BYTE PTR [rip+0x4f511]        # 0x45a11c
  40ac0b:	movsxd rax,DWORD PTR [rip+0x4f4f2]        # 0x45a104
  40ac12:	jmp    0x409900
  40ac17:	mov    edx,DWORD PTR [r13+0x0]
  40ac1b:	mov    rcx,QWORD PTR [r12]
  40ac1f:	mov    r14,r13
  40ac22:	add    DWORD PTR [rip+0x4f4b3],0x1        # 0x45a0dc
  40ac29:	call   0x409050
  40ac2e:	mov    rbx,QWORD PTR [rip+0x4f4db]        # 0x45a110
  40ac35:	movzx  edx,BYTE PTR [rip+0x4f4e0]        # 0x45a11c
  40ac3c:	movsxd rax,DWORD PTR [rip+0x4f4c1]        # 0x45a104
  40ac43:	jmp    0x409900
  40ac48:	mov    r14,r13
  40ac4b:	mov    DWORD PTR [rip+0x4f4af],0x1d        # 0x45a104
  40ac55:	mov    rbx,QWORD PTR [rip+0x4f4b4]        # 0x45a110
  40ac5c:	movzx  edx,BYTE PTR [rip+0x4f4b9]        # 0x45a11c
  40ac63:	mov    eax,0x1d
  40ac68:	jmp    0x409900
  40ac6d:	mov    rcx,QWORD PTR [rip+0x4f47c]        # 0x45a0f0
  40ac74:	mov    edx,0x27
  40ac79:	mov    r14,r13
  40ac7c:	call   0x427dd0
  40ac81:	mov    rbx,QWORD PTR [rip+0x4f488]        # 0x45a110
  40ac88:	movzx  edx,BYTE PTR [rip+0x4f48d]        # 0x45a11c
  40ac8f:	movsxd rax,DWORD PTR [rip+0x4f46e]        # 0x45a104
  40ac96:	jmp    0x409900
  40ac9b:	mov    rcx,QWORD PTR [rip+0x4f44e]        # 0x45a0f0
  40aca2:	mov    edx,0xa
  40aca7:	mov    r14,r13
  40acaa:	call   0x427dd0
  40acaf:	mov    rbx,QWORD PTR [rip+0x4f45a]        # 0x45a110
  40acb6:	movzx  edx,BYTE PTR [rip+0x4f45f]        # 0x45a11c
  40acbd:	movsxd rax,DWORD PTR [rip+0x4f440]        # 0x45a104
  40acc4:	jmp    0x409900
  40acc9:	mov    rcx,QWORD PTR [rip+0x4f420]        # 0x45a0f0
  40acd0:	mov    edx,0x9
  40acd5:	mov    r14,r13
  40acd8:	call   0x427dd0
  40acdd:	mov    rbx,QWORD PTR [rip+0x4f42c]        # 0x45a110
  40ace4:	movzx  edx,BYTE PTR [rip+0x4f431]        # 0x45a11c
  40aceb:	movsxd rax,DWORD PTR [rip+0x4f412]        # 0x45a104
  40acf2:	jmp    0x409900
  40acf7:	mov    rcx,QWORD PTR [rip+0x4f3f2]        # 0x45a0f0
  40acfe:	mov    edx,0x8
  40ad03:	mov    r14,r13
  40ad06:	call   0x427dd0
  40ad0b:	mov    rbx,QWORD PTR [rip+0x4f3fe]        # 0x45a110
  40ad12:	movzx  edx,BYTE PTR [rip+0x4f403]        # 0x45a11c
  40ad19:	movsxd rax,DWORD PTR [rip+0x4f3e4]        # 0x45a104
  40ad20:	jmp    0x409900
  40ad25:	mov    rcx,QWORD PTR [rip+0x4f3c4]        # 0x45a0f0
  40ad2c:	mov    edx,0xd
  40ad31:	mov    r14,r13
  40ad34:	call   0x427dd0
  40ad39:	mov    rbx,QWORD PTR [rip+0x4f3d0]        # 0x45a110
  40ad40:	movzx  edx,BYTE PTR [rip+0x4f3d5]        # 0x45a11c
  40ad47:	movsxd rax,DWORD PTR [rip+0x4f3b6]        # 0x45a104
  40ad4e:	jmp    0x409900
  40ad53:	mov    rcx,QWORD PTR [rip+0x4f396]        # 0x45a0f0
  40ad5a:	mov    edx,0xc
  40ad5f:	mov    r14,r13
  40ad62:	call   0x427dd0
  40ad67:	mov    rbx,QWORD PTR [rip+0x4f3a2]        # 0x45a110
  40ad6e:	movzx  edx,BYTE PTR [rip+0x4f3a7]        # 0x45a11c
  40ad75:	movsxd rax,DWORD PTR [rip+0x4f388]        # 0x45a104
  40ad7c:	jmp    0x409900
  40ad81:	mov    rax,QWORD PTR [r12]
  40ad85:	mov    r8d,0x8
  40ad8b:	xor    edx,edx
  40ad8d:	mov    r14,r13
  40ad90:	lea    rcx,[rax+0x1]
  40ad94:	call   0x42a3d0
  40ad99:	mov    rcx,QWORD PTR [rip+0x4f350]        # 0x45a0f0
  40ada0:	movsx  edx,al
  40ada3:	call   0x427dd0
  40ada8:	mov    rbx,QWORD PTR [rip+0x4f361]        # 0x45a110
  40adaf:	movzx  edx,BYTE PTR [rip+0x4f366]        # 0x45a11c
  40adb6:	movsxd rax,DWORD PTR [rip+0x4f347]        # 0x45a104
  40adbd:	jmp    0x409900
  40adc2:	mov    edx,DWORD PTR [r13+0x0]
  40adc6:	mov    rcx,QWORD PTR [r12]
  40adca:	mov    r14,r13
  40adcd:	call   0x409050
  40add2:	mov    rbx,QWORD PTR [rip+0x4f337]        # 0x45a110
  40add9:	movzx  edx,BYTE PTR [rip+0x4f33c]        # 0x45a11c
  40ade0:	movsxd rax,DWORD PTR [rip+0x4f31d]        # 0x45a104
  40ade7:	jmp    0x409900
  40adec:	mov    edx,DWORD PTR [r13+0x0]
  40adf0:	mov    rcx,QWORD PTR [r12]
  40adf4:	mov    r14,r13
  40adf7:	call   0x409050
  40adfc:	mov    rbx,QWORD PTR [rip+0x4f30d]        # 0x45a110
  40ae03:	movzx  edx,BYTE PTR [rip+0x4f312]        # 0x45a11c
  40ae0a:	movsxd rax,DWORD PTR [rip+0x4f2f3]        # 0x45a104
  40ae11:	jmp    0x409900
  40ae16:	mov    edx,DWORD PTR [r13+0x0]
  40ae1a:	mov    rcx,QWORD PTR [r12]
  40ae1e:	mov    r14,r13
  40ae21:	call   0x409050
  40ae26:	mov    rbx,QWORD PTR [rip+0x4f2e3]        # 0x45a110
  40ae2d:	movzx  edx,BYTE PTR [rip+0x4f2e8]        # 0x45a11c
  40ae34:	movsxd rax,DWORD PTR [rip+0x4f2c9]        # 0x45a104
  40ae3b:	jmp    0x409900
  40ae40:	mov    r14,r13
  40ae43:	mov    eax,DWORD PTR [r14]
  40ae46:	lea    edx,[rax-0x2]
  40ae49:	movzx  eax,BYTE PTR [rip+0x4f2cc]        # 0x45a11c
  40ae50:	mov    BYTE PTR [rbx],al
  40ae52:	movsxd rax,edx
  40ae55:	mov    QWORD PTR [r12],rbp
  40ae59:	add    rax,rbp
  40ae5c:	mov    DWORD PTR [r14],edx
  40ae5f:	movzx  edx,BYTE PTR [rax]
  40ae62:	mov    BYTE PTR [rax],0x0
  40ae65:	mov    rcx,QWORD PTR [r12]
  40ae69:	mov    QWORD PTR [rip+0x4f2a0],rax        # 0x45a110
  40ae70:	mov    BYTE PTR [rip+0x4f2a6],dl        # 0x45a11c
  40ae76:	mov    edx,DWORD PTR [r14]
  40ae79:	call   0x409050
  40ae7e:	mov    rbx,QWORD PTR [rip+0x4f28b]        # 0x45a110
  40ae85:	movzx  edx,BYTE PTR [rip+0x4f290]        # 0x45a11c
  40ae8c:	movsxd rax,DWORD PTR [rip+0x4f271]        # 0x45a104
  40ae93:	jmp    0x409900
  40ae98:	mov    edx,DWORD PTR [r13+0x0]
  40ae9c:	mov    rcx,QWORD PTR [r12]
  40aea0:	mov    r14,r13
  40aea3:	call   0x409050
  40aea8:	mov    rbx,QWORD PTR [rip+0x4f261]        # 0x45a110
  40aeaf:	movzx  edx,BYTE PTR [rip+0x4f266]        # 0x45a11c
  40aeb6:	movsxd rax,DWORD PTR [rip+0x4f247]        # 0x45a104
  40aebd:	jmp    0x409900
  40aec2:	mov    r14,r13
  40aec5:	mov    eax,DWORD PTR [r14]
  40aec8:	lea    edx,[rax-0x1]
  40aecb:	movzx  eax,BYTE PTR [rip+0x4f24a]        # 0x45a11c
  40aed2:	mov    BYTE PTR [rbx],al
  40aed4:	movsxd rax,edx
  40aed7:	mov    QWORD PTR [r12],rbp
  40aedb:	add    rax,rbp
  40aede:	mov    DWORD PTR [r14],edx
  40aee1:	movzx  edx,BYTE PTR [rax]
  40aee4:	mov    BYTE PTR [rax],0x0
  40aee7:	mov    rcx,QWORD PTR [r12]
  40aeeb:	mov    QWORD PTR [rip+0x4f21e],rax        # 0x45a110
  40aef2:	mov    BYTE PTR [rip+0x4f224],dl        # 0x45a11c
  40aef8:	mov    edx,DWORD PTR [r14]
  40aefb:	call   0x409050
  40af00:	mov    rbx,QWORD PTR [rip+0x4f209]        # 0x45a110
  40af07:	movzx  edx,BYTE PTR [rip+0x4f20e]        # 0x45a11c
  40af0e:	movsxd rax,DWORD PTR [rip+0x4f1ef]        # 0x45a104
  40af15:	jmp    0x409900
  40af1a:	mov    r14,r13
  40af1d:	mov    eax,DWORD PTR [r14]
  40af20:	lea    edx,[rax-0x2]
  40af23:	movzx  eax,BYTE PTR [rip+0x4f1f2]        # 0x45a11c
  40af2a:	mov    BYTE PTR [rbx],al
  40af2c:	movsxd rax,edx
  40af2f:	mov    QWORD PTR [r12],rbp
  40af33:	add    rax,rbp
  40af36:	mov    DWORD PTR [r14],edx
  40af39:	movzx  edx,BYTE PTR [rax]
  40af3c:	mov    BYTE PTR [rax],0x0
  40af3f:	mov    rcx,QWORD PTR [r12]
  40af43:	mov    QWORD PTR [rip+0x4f1c6],rax        # 0x45a110
  40af4a:	mov    BYTE PTR [rip+0x4f1cc],dl        # 0x45a11c
  40af50:	mov    edx,DWORD PTR [r14]
  40af53:	call   0x409050
  40af58:	mov    rbx,QWORD PTR [rip+0x4f1b1]        # 0x45a110
  40af5f:	movzx  edx,BYTE PTR [rip+0x4f1b6]        # 0x45a11c
  40af66:	movsxd rax,DWORD PTR [rip+0x4f197]        # 0x45a104
  40af6d:	jmp    0x409900
  40af72:	mov    edx,DWORD PTR [r13+0x0]
  40af76:	mov    rcx,QWORD PTR [r12]
  40af7a:	mov    r14,r13
  40af7d:	call   0x409050
  40af82:	mov    rbx,QWORD PTR [rip+0x4f187]        # 0x45a110
  40af89:	movzx  edx,BYTE PTR [rip+0x4f18c]        # 0x45a11c
  40af90:	movsxd rax,DWORD PTR [rip+0x4f16d]        # 0x45a104
  40af97:	jmp    0x409900
  40af9c:	cmp    DWORD PTR [rip+0x4f145],0x3        # 0x45a0e8
  40afa3:	mov    r14,r13
  40afa6:	je     0x40b9eb
  40afac:	movzx  eax,BYTE PTR [rip+0x4f169]        # 0x45a11c
  40afb3:	mov    QWORD PTR [rip+0x4f156],rbp        # 0x45a110
  40afba:	mov    DWORD PTR [rip+0x4f140],0x1d        # 0x45a104
  40afc4:	mov    BYTE PTR [rbx],al
  40afc6:	mov    QWORD PTR [r12],rbp
  40afca:	mov    rbx,rbp
  40afcd:	mov    DWORD PTR [r14],0x0
  40afd4:	movzx  edx,BYTE PTR [rbp+0x0]
  40afd8:	mov    eax,0x1d
  40afdd:	mov    BYTE PTR [rbp+0x0],0x0
  40afe1:	mov    BYTE PTR [rip+0x4f135],dl        # 0x45a11c
  40afe7:	jmp    0x409900
  40afec:	movzx  eax,BYTE PTR [rip+0x4f129]        # 0x45a11c
  40aff3:	mov    r14,r13
  40aff6:	mov    QWORD PTR [rip+0x4f113],rbp        # 0x45a110
  40affd:	mov    DWORD PTR [rip+0x4f0fd],0x1d        # 0x45a104
  40b007:	mov    BYTE PTR [rbx],al
  40b009:	mov    QWORD PTR [r12],rbp
  40b00d:	mov    rbx,rbp
  40b010:	mov    DWORD PTR [r14],0x0
  40b017:	movzx  edx,BYTE PTR [rbp+0x0]
  40b01b:	mov    eax,0x1d
  40b020:	mov    BYTE PTR [rbp+0x0],0x0
  40b024:	mov    BYTE PTR [rip+0x4f0f2],dl        # 0x45a11c
  40b02a:	jmp    0x409900
  40b02f:	mov    rbx,QWORD PTR [rip+0x4f0c2]        # 0x45a0f8
  40b036:	mov    r14,r13
  40b039:	cmp    QWORD PTR [rbx],0x0
  40b03d:	je     0x40baab
  40b043:	mov    rcx,rbx
  40b046:	call   0x4093a0
  40b04b:	mov    rax,QWORD PTR [rip+0x4f0a6]        # 0x45a0f8
  40b052:	mov    rbp,QWORD PTR [rax]
  40b055:	test   rbp,rbp
  40b058:	je     0x40b92b
  40b05e:	mov    rcx,QWORD PTR [rbp+0x0]
  40b062:	call   0x409290
  40b067:	mov    rax,QWORD PTR [rbp+0x8]
  40b06b:	mov    QWORD PTR [rbx+0x28],rax
  40b06f:	mov    rax,QWORD PTR [rbp+0x10]
  40b073:	test   rax,rax
  40b076:	je     0x40b9e2
  40b07c:	mov    QWORD PTR [rbx+0x30],rax
  40b080:	movzx  edx,BYTE PTR [rip+0x4f095]        # 0x45a11c
  40b087:	mov    rbx,QWORD PTR [rip+0x4f082]        # 0x45a110
  40b08e:	movsxd rax,DWORD PTR [rip+0x4f06f]        # 0x45a104
  40b095:	jmp    0x409900
  40b09a:	mov    rax,QWORD PTR [rip+0x4f03f]        # 0x45a0e0
  40b0a1:	mov    r14,r13
  40b0a4:	mov    DWORD PTR [rip+0x4f02e],0x0        # 0x45a0dc
  40b0ae:	mov    DWORD PTR [rip+0x4f04c],0x1f        # 0x45a104
  40b0b8:	mov    rbx,QWORD PTR [rip+0x4f051]        # 0x45a110
  40b0bf:	movzx  edx,BYTE PTR [rip+0x4f056]        # 0x45a11c
  40b0c6:	mov    BYTE PTR [rax],0x27
  40b0c9:	mov    eax,0x1f
  40b0ce:	jmp    0x409900
  40b0d3:	mov    edx,DWORD PTR [r13+0x0]
  40b0d7:	mov    rcx,QWORD PTR [r12]
  40b0db:	mov    r14,r13
  40b0de:	call   0x409050
  40b0e3:	mov    rbx,QWORD PTR [rip+0x4f026]        # 0x45a110
  40b0ea:	movzx  edx,BYTE PTR [rip+0x4f02b]        # 0x45a11c
  40b0f1:	movsxd rax,DWORD PTR [rip+0x4f00c]        # 0x45a104
  40b0f8:	jmp    0x409900
  40b0fd:	mov    r14,r13
  40b100:	mov    rbx,QWORD PTR [rip+0x4f009]        # 0x45a110
  40b107:	movzx  edx,BYTE PTR [rip+0x4f00e]        # 0x45a11c
  40b10e:	movsxd rax,DWORD PTR [rip+0x4efef]        # 0x45a104
  40b115:	jmp    0x409900
  40b11a:	mov    edx,DWORD PTR [r13+0x0]
  40b11e:	mov    rcx,QWORD PTR [r12]
  40b122:	mov    r14,r13
  40b125:	call   0x409050
  40b12a:	mov    rbx,QWORD PTR [rip+0x4efdf]        # 0x45a110
  40b131:	movzx  edx,BYTE PTR [rip+0x4efe4]        # 0x45a11c
  40b138:	movsxd rax,DWORD PTR [rip+0x4efc5]        # 0x45a104
  40b13f:	jmp    0x409900
  40b144:	mov    rax,QWORD PTR [r12]
  40b148:	mov    r8d,0x10
  40b14e:	xor    edx,edx
  40b150:	mov    r14,r13
  40b153:	lea    rcx,[rax+0x2]
  40b157:	call   0x42a3d0
  40b15c:	mov    rcx,QWORD PTR [rip+0x4ef8d]        # 0x45a0f0
  40b163:	movsx  edx,al
  40b166:	call   0x427dd0
  40b16b:	mov    rbx,QWORD PTR [rip+0x4ef9e]        # 0x45a110
  40b172:	movzx  edx,BYTE PTR [rip+0x4efa3]        # 0x45a11c
  40b179:	movsxd rax,DWORD PTR [rip+0x4ef84]        # 0x45a104
  40b180:	jmp    0x409900
  40b185:	mov    rax,QWORD PTR [r12]
  40b189:	mov    edx,0x1
  40b18e:	mov    r14,r13
  40b191:	lea    rcx,[rax+0x1]
  40b195:	call   0x409050
  40b19a:	mov    rbx,QWORD PTR [rip+0x4ef6f]        # 0x45a110
  40b1a1:	movzx  edx,BYTE PTR [rip+0x4ef74]        # 0x45a11c
  40b1a8:	movsxd rax,DWORD PTR [rip+0x4ef55]        # 0x45a104
  40b1af:	jmp    0x409900
  40b1b4:	mov    edx,DWORD PTR [r13+0x0]
  40b1b8:	mov    rcx,QWORD PTR [r12]
  40b1bc:	mov    r14,r13
  40b1bf:	call   0x409050
  40b1c4:	mov    rbx,QWORD PTR [rip+0x4ef45]        # 0x45a110
  40b1cb:	movzx  edx,BYTE PTR [rip+0x4ef4a]        # 0x45a11c
  40b1d2:	movsxd rax,DWORD PTR [rip+0x4ef2b]        # 0x45a104
  40b1d9:	jmp    0x409900
  40b1de:	cmp    DWORD PTR [rip+0x4ef03],0x5        # 0x45a0e8
  40b1e5:	mov    r14,r13
  40b1e8:	je     0x40b1ef
  40b1ea:	call   0x408e40
  40b1ef:	mov    DWORD PTR [rip+0x4ef0b],0x1d        # 0x45a104
  40b1f9:	mov    rbx,QWORD PTR [rip+0x4ef10]        # 0x45a110
  40b200:	mov    eax,0x1d
  40b205:	movzx  edx,BYTE PTR [rip+0x4ef10]        # 0x45a11c
  40b20c:	jmp    0x409900
  40b211:	mov    edx,DWORD PTR [r13+0x0]
  40b215:	mov    rcx,QWORD PTR [r12]
  40b219:	mov    r14,r13
  40b21c:	call   0x409050
  40b221:	mov    rbx,QWORD PTR [rip+0x4eee8]        # 0x45a110
  40b228:	movzx  edx,BYTE PTR [rip+0x4eeed]        # 0x45a11c
  40b22f:	movsxd rax,DWORD PTR [rip+0x4eece]        # 0x45a104
  40b236:	jmp    0x409900
  40b23b:	mov    edx,DWORD PTR [r13+0x0]
  40b23f:	mov    rcx,QWORD PTR [r12]
  40b243:	mov    r14,r13
  40b246:	call   0x409050
  40b24b:	mov    DWORD PTR [rip+0x4eeaf],0x1d        # 0x45a104
  40b255:	mov    rbx,QWORD PTR [rip+0x4eeb4]        # 0x45a110
  40b25c:	mov    eax,0x1d
  40b261:	movzx  edx,BYTE PTR [rip+0x4eeb4]        # 0x45a11c
  40b268:	jmp    0x409900
  40b26d:	mov    edx,DWORD PTR [r13+0x0]
  40b271:	mov    rcx,QWORD PTR [r12]
  40b275:	mov    r14,r13
  40b278:	call   0x409050
  40b27d:	mov    rbx,QWORD PTR [rip+0x4ee8c]        # 0x45a110
  40b284:	movzx  edx,BYTE PTR [rip+0x4ee91]        # 0x45a11c
  40b28b:	movsxd rax,DWORD PTR [rip+0x4ee72]        # 0x45a104
  40b292:	jmp    0x409900
  40b297:	mov    rax,QWORD PTR [rip+0x4ee52]        # 0x45a0f0
  40b29e:	mov    r14,r13
  40b2a1:	cmp    QWORD PTR [rax+0x8],0x0
  40b2a6:	jne    0x40b8bc
  40b2ac:	mov    rbx,QWORD PTR [rip+0x4ee5d]        # 0x45a110
  40b2b3:	movzx  edx,BYTE PTR [rip+0x4ee62]        # 0x45a11c
  40b2ba:	movsxd rax,DWORD PTR [rip+0x4ee43]        # 0x45a104
  40b2c1:	jmp    0x409900
  40b2c6:	mov    edx,DWORD PTR [r13+0x0]
  40b2ca:	mov    rcx,QWORD PTR [r12]
  40b2ce:	mov    r14,r13
  40b2d1:	call   0x409050
  40b2d6:	mov    rbx,QWORD PTR [rip+0x4ee33]        # 0x45a110
  40b2dd:	movzx  edx,BYTE PTR [rip+0x4ee38]        # 0x45a11c
  40b2e4:	movsxd rax,DWORD PTR [rip+0x4ee19]        # 0x45a104
  40b2eb:	jmp    0x409900
  40b2f0:	mov    rax,rbx
  40b2f3:	sub    rax,QWORD PTR [r12]
  40b2f7:	mov    r11,QWORD PTR [rip+0x4ee22]        # 0x45a120
  40b2fe:	mov    rdx,QWORD PTR [rip+0x4ee2b]        # 0x45a130
  40b305:	sub    eax,0x1
  40b308:	mov    DWORD PTR [rsp+0x3c],eax
  40b30c:	movzx  eax,BYTE PTR [rip+0x4ee09]        # 0x45a11c
  40b313:	mov    BYTE PTR [rbx],al
  40b315:	lea    rax,[r11+rdx*8]
  40b319:	mov    r9,QWORD PTR [rax]
  40b31c:	mov    r15,rax
  40b31f:	mov    eax,DWORD PTR [r9+0x3c]
  40b323:	test   eax,eax
  40b325:	je     0x40b55d
  40b32b:	movsxd r14,DWORD PTR [rip+0x4ede6]        # 0x45a118
  40b332:	mov    rcx,QWORD PTR [r9+0x8]
  40b336:	mov    r8,QWORD PTR [rip+0x4edd3]        # 0x45a110
  40b33d:	lea    rax,[rcx+r14*1]
  40b341:	cmp    rax,r8
  40b344:	mov    QWORD PTR [rsp+0x28],rax
  40b349:	jae    0x40bab2
  40b34f:	lea    r14,[rcx+r14*1+0x1]
  40b354:	mov    rax,QWORD PTR [r12]
  40b358:	cmp    r8,r14
  40b35b:	ja     0x40bb6b
  40b361:	mov    r14d,DWORD PTR [r9+0x38]
  40b365:	sub    r8,rax
  40b368:	test   r14d,r14d
  40b36b:	jne    0x40b45a
  40b371:	cmp    r8,0x1
  40b375:	je     0x40b71c
  40b37b:	mov    rbx,QWORD PTR [rsp+0x28]
  40b380:	mov    rbp,rax
  40b383:	cmp    rbx,rbp
  40b386:	mov    QWORD PTR [rip+0x4ed83],rbx        # 0x45a110
  40b38d:	movsxd rdx,DWORD PTR [rip+0x4ed70]        # 0x45a104
  40b394:	jbe    0x409945
  40b39a:	mov    r8,rbp
  40b39d:	movzx  ecx,BYTE PTR [r8]
  40b3a1:	mov    eax,0x1
  40b3a6:	test   cl,cl
  40b3a8:	je     0x40b3ad
  40b3aa:	mov    eax,DWORD PTR [rdi+rcx*4]
  40b3ad:	movsxd rcx,eax
  40b3b0:	movsxd rax,edx
  40b3b3:	add    r8,0x1
  40b3b7:	lea    rdx,[rax+rax*2]
  40b3bb:	mov    rax,rdx
  40b3be:	shl    rax,0x4
  40b3c2:	sub    rax,rdx
  40b3c5:	add    rax,rcx
  40b3c8:	cmp    r8,rbx
  40b3cb:	movsx  rdx,WORD PTR [rsi+rax*2]
  40b3d0:	jne    0x40b39d
  40b3d2:	jmp    0x409945
  40b3d7:	lea    rcx,[rip+0x28faa]        # 0x434388
  40b3de:	call   0x409020
  40b3e3:	call   0x4091e0
  40b3e8:	mov    rdx,QWORD PTR [rip+0x4ed41]        # 0x45a130
  40b3ef:	mov    rax,QWORD PTR [rip+0x4ed2a]        # 0x45a120
  40b3f6:	mov    rcx,QWORD PTR [rip+0x4ecd3]        # 0x45a0d0
  40b3fd:	lea    rbx,[rax+rdx*8]
  40b401:	mov    edx,0x4000
  40b406:	call   0x4094c0
  40b40b:	mov    QWORD PTR [rbx],rax
  40b40e:	jmp    0x4098b6
  40b413:	test   r15,r15
  40b416:	jne    0x40a8e3
  40b41c:	test   rax,rax
  40b41f:	jne    0x40bb63
  40b425:	cmp    DWORD PTR [rsp+0x30],0x1
  40b42a:	mov    edx,DWORD PTR [rsp+0x30]
  40b42e:	jle    0x40a990
  40b434:	mov    ecx,DWORD PTR [rsp+0x30]
  40b438:	movsxd rax,ecx
  40b43b:	mov    edx,ecx
  40b43d:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40b442:	sub    eax,0x2b
  40b445:	test   al,0xfd
  40b447:	jne    0x40a990
  40b44d:	mov    QWORD PTR [rsp+0x28],rbx
  40b452:	mov    r15d,ecx
  40b455:	jmp    0x40a910
  40b45a:	lea    r14d,[r8-0x1]
  40b45e:	test   r14d,r14d
  40b461:	jle    0x40b485
  40b463:	xor    r8d,r8d
  40b466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b470:	movzx  r9d,BYTE PTR [rax+r8*1]
  40b475:	mov    BYTE PTR [rcx+r8*1],r9b
  40b479:	add    r8,0x1
  40b47d:	cmp    r14d,r8d
  40b480:	jg     0x40b470
  40b482:	mov    r9,QWORD PTR [r15]
  40b485:	cmp    DWORD PTR [r9+0x3c],0x2
  40b48a:	je     0x40b8f5
  40b490:	mov    eax,r14d
  40b493:	not    eax
  40b495:	add    eax,DWORD PTR [r9+0x18]
  40b499:	test   eax,eax
  40b49b:	jg     0x40b5d6
  40b4a1:	mov    QWORD PTR [rsp+0x30],rbx
  40b4a6:	mov    QWORD PTR [rsp+0x40],rbp
  40b4ab:	mov    rbx,r15
  40b4ae:	mov    QWORD PTR [rsp+0x48],r12
  40b4b3:	mov    r15,r13
  40b4b6:	mov    rbp,r9
  40b4b9:	mov    r12,r11
  40b4bc:	jmp    0x40b50e
  40b4be:	xchg   ax,ax
  40b4c0:	mov    rax,QWORD PTR [rbp+0x18]
  40b4c4:	lea    edx,[rax+rax*1]
  40b4c7:	test   edx,edx
  40b4c9:	jle    0x40b54a
  40b4cb:	add    rax,rax
  40b4ce:	mov    QWORD PTR [rbp+0x18],rax
  40b4d2:	lea    rdx,[rax+0x2]
  40b4d6:	mov    QWORD PTR [rsp+0x28],r10
  40b4db:	call   0x42a460
  40b4e0:	test   rax,rax
  40b4e3:	mov    QWORD PTR [rbp+0x8],rax
  40b4e7:	mov    r10,QWORD PTR [rsp+0x28]
  40b4ec:	je     0x40b532
  40b4ee:	movsxd rdx,r13d
  40b4f1:	mov    rbp,QWORD PTR [rbx]
  40b4f4:	add    rax,rdx
  40b4f7:	mov    QWORD PTR [rip+0x4ec12],rax        # 0x45a110
  40b4fe:	mov    eax,r14d
  40b501:	not    eax
  40b503:	add    eax,DWORD PTR [rbp+0x18]
  40b506:	test   eax,eax
  40b508:	jg     0x40b5c1
  40b50e:	test   r12,r12
  40b511:	je     0x40b540
  40b513:	mov    rcx,QWORD PTR [rbp+0x8]
  40b517:	mov    r13,QWORD PTR [rip+0x4ebf2]        # 0x45a110
  40b51e:	mov    r8d,DWORD PTR [rbp+0x24]
  40b522:	sub    r13,rcx
  40b525:	test   r8d,r8d
  40b528:	jne    0x40b4c0
  40b52a:	mov    QWORD PTR [rbp+0x8],0x0
  40b532:	lea    rcx,[rip+0x28dcf]        # 0x434308
  40b539:	call   0x409020
  40b53e:	xchg   ax,ax
  40b540:	mov    rax,QWORD PTR ds:0x8
  40b548:	ud2    
  40b54a:	mov    rdx,rax
  40b54d:	shr    rdx,0x3
  40b551:	add    rax,rdx
  40b554:	mov    QWORD PTR [rbp+0x18],rax
  40b558:	jmp    0x40b4d2
  40b55d:	mov    rax,QWORD PTR [rip+0x4eb6c]        # 0x45a0d0
  40b564:	movsxd r14,DWORD PTR [r9+0x20]
  40b568:	mov    QWORD PTR [r9],rax
  40b56b:	mov    rax,QWORD PTR [r15]
  40b56e:	mov    DWORD PTR [rip+0x4eba3],r14d        # 0x45a118
  40b575:	mov    DWORD PTR [rax+0x3c],0x1
  40b57c:	mov    r9,QWORD PTR [r15]
  40b57f:	jmp    0x40b332
  40b584:	lea    rcx,[rip+0x28e35]        # 0x4343c0
  40b58b:	mov    rdx,rbp
  40b58e:	call   0x405d90
  40b593:	mov    edx,DWORD PTR [r14]
  40b596:	mov    rcx,QWORD PTR [r12]
  40b59a:	call   0x409050
  40b59f:	mov    rcx,rbp
  40b5a2:	call   0x42a4e8
  40b5a7:	mov    rbx,QWORD PTR [rip+0x4eb62]        # 0x45a110
  40b5ae:	movzx  edx,BYTE PTR [rip+0x4eb67]        # 0x45a11c
  40b5b5:	movsxd rax,DWORD PTR [rip+0x4eb48]        # 0x45a104
  40b5bc:	jmp    0x409900
  40b5c1:	mov    r9,rbp
  40b5c4:	mov    rbx,QWORD PTR [rsp+0x30]
  40b5c9:	mov    rbp,QWORD PTR [rsp+0x40]
  40b5ce:	mov    r12,QWORD PTR [rsp+0x48]
  40b5d3:	mov    r13,r15
  40b5d6:	mov    edx,DWORD PTR [r9+0x28]
  40b5da:	cmp    eax,0x2000
  40b5df:	mov    ecx,0x2000
  40b5e4:	cmovg  eax,ecx
  40b5e7:	xor    r8d,r8d
  40b5ea:	mov    DWORD PTR [rsp+0x48],eax
  40b5ee:	cdqe   
  40b5f0:	test   edx,edx
  40b5f2:	mov    QWORD PTR [rsp+0x28],rax
  40b5f7:	movsxd rax,r14d
  40b5fa:	je     0x40b78b
  40b600:	mov    r15,rbx
  40b603:	mov    QWORD PTR [rsp+0x30],rbp
  40b608:	mov    QWORD PTR [rsp+0x40],r12
  40b60d:	mov    rbx,QWORD PTR [rsp+0x28]
  40b612:	mov    rbp,r8
  40b615:	mov    r12,rax
  40b618:	jmp    0x40b656
  40b61a:	nop    WORD PTR [rax+rax*1+0x0]
  40b620:	cmp    eax,0xa
  40b623:	je     0x40ba6b
  40b629:	mov    rdx,QWORD PTR [rip+0x4eb00]        # 0x45a130
  40b630:	mov    r11,QWORD PTR [rip+0x4eae9]        # 0x45a120
  40b637:	mov    r8,rbp
  40b63a:	add    rbp,0x1
  40b63e:	lea    rcx,[r11+rdx*8]
  40b642:	mov    r9,QWORD PTR [rcx]
  40b645:	add    r8,QWORD PTR [r9+0x8]
  40b649:	cmp    rbx,rbp
  40b64c:	mov    BYTE PTR [r8+r12*1],al
  40b650:	je     0x40ba19
  40b656:	mov    rcx,QWORD PTR [rip+0x4ea73]        # 0x45a0d0
  40b65d:	mov    QWORD PTR [rsp+0x28],r10
  40b662:	call   0x42a4d8
  40b667:	cmp    eax,0xffffffff
  40b66a:	mov    r10,QWORD PTR [rsp+0x28]
  40b66f:	jne    0x40b620
  40b671:	mov    rcx,QWORD PTR [rip+0x4ea58]        # 0x45a0d0
  40b678:	mov    QWORD PTR [rsp+0x48],r10
  40b67d:	mov    rbx,r15
  40b680:	mov    QWORD PTR [rsp+0x28],rbp
  40b685:	mov    r12,QWORD PTR [rsp+0x40]
  40b68a:	mov    rbp,QWORD PTR [rsp+0x30]
  40b68f:	call   0x42a528
  40b694:	test   eax,eax
  40b696:	mov    r8,QWORD PTR [rsp+0x28]
  40b69b:	mov    r10,QWORD PTR [rsp+0x48]
  40b6a0:	jne    0x40bb57
  40b6a6:	mov    rdx,QWORD PTR [rip+0x4ea83]        # 0x45a130
  40b6ad:	mov    r11,QWORD PTR [rip+0x4ea6c]        # 0x45a120
  40b6b4:	mov    eax,r8d
  40b6b7:	mov    rcx,QWORD PTR [r11+rdx*8]
  40b6bb:	mov    DWORD PTR [rip+0x4ea57],eax        # 0x45a118
  40b6c1:	test   eax,eax
  40b6c3:	mov    DWORD PTR [rcx+0x20],eax
  40b6c6:	je     0x40b907
  40b6cc:	lea    r11,[r11+rdx*8]
  40b6d0:	xor    r9d,r9d
  40b6d3:	lea    ecx,[rax+r14*1]
  40b6d7:	mov    r14,QWORD PTR [r11]
  40b6da:	movsxd r8,ecx
  40b6dd:	mov    r15d,ecx
  40b6e0:	cmp    r8,QWORD PTR [r14+0x18]
  40b6e4:	ja     0x40b96f
  40b6ea:	mov    rax,QWORD PTR [r14+0x8]
  40b6ee:	mov    BYTE PTR [rax+r8*1],0x0
  40b6f3:	mov    rax,QWORD PTR [r11]
  40b6f6:	cmp    r9d,0x1
  40b6fa:	mov    DWORD PTR [rip+0x4ea17],r15d        # 0x45a118
  40b701:	mov    rax,QWORD PTR [rax+0x8]
  40b705:	mov    BYTE PTR [rax+r8*1+0x1],0x0
  40b70b:	mov    rax,QWORD PTR [r11]
  40b70e:	mov    rax,QWORD PTR [rax+0x8]
  40b712:	mov    QWORD PTR [r12],rax
  40b716:	jne    0x40bb77
  40b71c:	mov    QWORD PTR [rip+0x4e9ed],rax        # 0x45a110
  40b723:	mov    eax,DWORD PTR [rip+0x4e9db]        # 0x45a104
  40b729:	mov    DWORD PTR [rip+0x4e9cd],0x0        # 0x45a100
  40b733:	sub    eax,0x1
  40b736:	mov    edx,eax
  40b738:	shr    edx,0x1f
  40b73b:	add    eax,edx
  40b73d:	sar    eax,1
  40b73f:	add    eax,0x75
  40b742:	jmp    0x409971
  40b747:	call   QWORD PTR [rip+0x51467]        # 0x45cbb4
  40b74d:	add    rax,0x30
  40b751:	mov    QWORD PTR [rip+0x4e970],rax        # 0x45a0c8
  40b758:	jmp    0x409894
  40b75d:	call   QWORD PTR [rip+0x51451]        # 0x45cbb4
  40b763:	mov    QWORD PTR [rip+0x4e966],rax        # 0x45a0d0
  40b76a:	jmp    0x409886
  40b76f:	mov    rcx,r13
  40b772:	call   0x424900
  40b777:	mov    rdx,QWORD PTR [rip+0x4e97a]        # 0x45a0f8
  40b77e:	mov    QWORD PTR [rbx+0x10],rax
  40b782:	mov    QWORD PTR [rdx+0x30],rax
  40b786:	jmp    0x40a768
  40b78b:	mov    QWORD PTR [rsp+0x40],r10
  40b790:	call   QWORD PTR [rip+0x51456]        # 0x45cbec
  40b796:	mov    DWORD PTR [rax],0x0
  40b79c:	mov    rax,QWORD PTR [rsp+0x28]
  40b7a1:	mov    r10,QWORD PTR [rsp+0x40]
  40b7a6:	mov    r15,rax
  40b7a9:	movsxd rax,r14d
  40b7ac:	mov    QWORD PTR [rsp+0x30],rax
  40b7b1:	jmp    0x40b805
  40b7b3:	mov    rcx,QWORD PTR [rip+0x4e916]        # 0x45a0d0
  40b7ba:	mov    QWORD PTR [rsp+0x28],r10
  40b7bf:	call   0x42a528
  40b7c4:	test   eax,eax
  40b7c6:	mov    r10,QWORD PTR [rsp+0x28]
  40b7cb:	je     0x40bb30
  40b7d1:	mov    QWORD PTR [rsp+0x28],r10
  40b7d6:	call   QWORD PTR [rip+0x51410]        # 0x45cbec
  40b7dc:	cmp    DWORD PTR [rax],0x2714
  40b7e2:	jne    0x40bb57
  40b7e8:	call   QWORD PTR [rip+0x513fe]        # 0x45cbec
  40b7ee:	mov    DWORD PTR [rax],0x0
  40b7f4:	mov    rcx,QWORD PTR [rip+0x4e8d5]        # 0x45a0d0
  40b7fb:	call   0x42a548
  40b800:	mov    r10,QWORD PTR [rsp+0x28]
  40b805:	mov    rdx,QWORD PTR [rip+0x4e924]        # 0x45a130
  40b80c:	mov    rax,QWORD PTR [rip+0x4e90d]        # 0x45a120
  40b813:	mov    r8,r15
  40b816:	mov    rcx,QWORD PTR [rsp+0x30]
  40b81b:	mov    r9,QWORD PTR [rip+0x4e8ae]        # 0x45a0d0
  40b822:	mov    QWORD PTR [rsp+0x28],r10
  40b827:	mov    rax,QWORD PTR [rax+rdx*8]
  40b82b:	mov    edx,0x1
  40b830:	add    rcx,QWORD PTR [rax+0x8]
  40b834:	call   0x42a4f0
  40b839:	test   eax,eax
  40b83b:	mov    DWORD PTR [rip+0x4e8d7],eax        # 0x45a118
  40b841:	mov    r10,QWORD PTR [rsp+0x28]
  40b846:	je     0x40b7b3
  40b84c:	mov    rdx,QWORD PTR [rip+0x4e8dd]        # 0x45a130
  40b853:	mov    r11,QWORD PTR [rip+0x4e8c6]        # 0x45a120
  40b85a:	mov    rcx,rax
  40b85d:	mov    r8,QWORD PTR [r11+rdx*8]
  40b861:	mov    DWORD PTR [r8+0x20],ecx
  40b865:	jmp    0x40b6cc
  40b86a:	mov    DWORD PTR [rip+0x4e890],0x1        # 0x45a104
  40b874:	jmp    0x409b05
  40b879:	mov    rcx,r15
  40b87c:	call   0x42a4e8
  40b881:	mov    QWORD PTR [rbp+0x48],0x0
  40b889:	mov    DWORD PTR [rip+0x4e871],0x1        # 0x45a104
  40b893:	jmp    0x40a232
  40b898:	mov    edx,DWORD PTR [r13+0x0]
  40b89c:	mov    rcx,QWORD PTR [r12]
  40b8a0:	call   0x409050
  40b8a5:	jmp    0x40aaf1
  40b8aa:	mov    edx,DWORD PTR [r13+0x0]
  40b8ae:	mov    rcx,QWORD PTR [r12]
  40b8b2:	call   0x409050
  40b8b7:	jmp    0x40aaac
  40b8bc:	mov    edx,DWORD PTR [r13+0x0]
  40b8c0:	mov    rcx,QWORD PTR [r12]
  40b8c4:	call   0x409050
  40b8c9:	mov    rbx,QWORD PTR [rip+0x4e840]        # 0x45a110
  40b8d0:	movzx  edx,BYTE PTR [rip+0x4e845]        # 0x45a11c
  40b8d7:	movsxd rax,DWORD PTR [rip+0x4e826]        # 0x45a104
  40b8de:	jmp    0x409900
  40b8e3:	mov    edx,DWORD PTR [r13+0x0]
  40b8e7:	mov    rcx,QWORD PTR [r12]
  40b8eb:	call   0x409050
  40b8f0:	jmp    0x40ab39
  40b8f5:	mov    DWORD PTR [rip+0x4e819],0x0        # 0x45a118
  40b8ff:	mov    DWORD PTR [r9+0x20],0x0
  40b907:	test   r14d,r14d
  40b90a:	je     0x40ba32
  40b910:	lea    r11,[r11+rdx*8]
  40b914:	mov    r9d,0x2
  40b91a:	mov    rax,QWORD PTR [r11]
  40b91d:	mov    DWORD PTR [rax+0x3c],0x2
  40b924:	xor    eax,eax
  40b926:	jmp    0x40b6d3
  40b92b:	mov    rcx,QWORD PTR [rax+0x8]
  40b92f:	call   0x409290
  40b934:	mov    rax,QWORD PTR [rbx+0x10]
  40b938:	movzx  edx,BYTE PTR [rip+0x4e7dd]        # 0x45a11c
  40b93f:	mov    QWORD PTR [rbx+0x28],rax
  40b943:	mov    rax,QWORD PTR [rbx+0x18]
  40b947:	mov    QWORD PTR [rbx+0x30],rax
  40b94b:	mov    rbx,QWORD PTR [rip+0x4e7be]        # 0x45a110
  40b952:	movsxd rax,DWORD PTR [rip+0x4e7ab]        # 0x45a104
  40b959:	jmp    0x409900
  40b95e:	mov    edx,DWORD PTR [r14]
  40b961:	mov    rcx,QWORD PTR [r12]
  40b965:	call   0x409050
  40b96a:	jmp    0x40b59f
  40b96f:	sar    eax,1
  40b971:	mov    QWORD PTR [rsp+0x48],r11
  40b976:	mov    DWORD PTR [rsp+0x40],r9d
  40b97b:	mov    edx,eax
  40b97d:	mov    QWORD PTR [rsp+0x30],r8
  40b982:	mov    QWORD PTR [rsp+0x28],r10
  40b987:	add    edx,ecx
  40b989:	mov    rcx,QWORD PTR [r14+0x8]
  40b98d:	movsxd rdx,edx
  40b990:	call   0x42a460
  40b995:	mov    r11,QWORD PTR [rsp+0x48]
  40b99a:	mov    QWORD PTR [r14+0x8],rax
  40b99e:	mov    r10,QWORD PTR [rsp+0x28]
  40b9a3:	mov    r8,QWORD PTR [rsp+0x30]
  40b9a8:	mov    r9d,DWORD PTR [rsp+0x40]
  40b9ad:	mov    rax,QWORD PTR [r11]
  40b9b0:	mov    rax,QWORD PTR [rax+0x8]
  40b9b4:	test   rax,rax
  40b9b7:	jne    0x40b6ee
  40b9bd:	lea    rcx,[rip+0x28994]        # 0x434358
  40b9c4:	call   0x409020
  40b9c9:	nop    DWORD PTR [rax+0x0]
  40b9d0:	mov    edx,DWORD PTR [r13+0x0]
  40b9d4:	mov    rcx,QWORD PTR [r12]
  40b9d8:	call   0x409050
  40b9dd:	jmp    0x40aaa2
  40b9e2:	mov    rax,QWORD PTR [rbp+0x8]
  40b9e6:	jmp    0x40b07c
  40b9eb:	mov    edx,DWORD PTR [r14]
  40b9ee:	mov    rcx,QWORD PTR [r12]
  40b9f2:	call   0x409050
  40b9f7:	mov    DWORD PTR [rip+0x4e703],0x25        # 0x45a104
  40ba01:	mov    rbx,QWORD PTR [rip+0x4e708]        # 0x45a110
  40ba08:	mov    eax,0x25
  40ba0d:	movzx  edx,BYTE PTR [rip+0x4e708]        # 0x45a11c
  40ba14:	jmp    0x409900
  40ba19:	mov    rbx,r15
  40ba1c:	mov    rbp,QWORD PTR [rsp+0x30]
  40ba21:	mov    r12,QWORD PTR [rsp+0x40]
  40ba26:	mov    eax,DWORD PTR [rsp+0x48]
  40ba2a:	mov    rcx,QWORD PTR [rcx]
  40ba2d:	jmp    0x40b6bb
  40ba32:	mov    rcx,QWORD PTR [rip+0x4e697]        # 0x45a0d0
  40ba39:	mov    QWORD PTR [rsp+0x28],r10
  40ba3e:	call   0x409530
  40ba43:	mov    rdx,QWORD PTR [rip+0x4e6d6]        # 0x45a120
  40ba4a:	mov    rcx,QWORD PTR [rip+0x4e6df]        # 0x45a130
  40ba51:	mov    r9d,0x1
  40ba57:	mov    eax,DWORD PTR [rip+0x4e6bb]        # 0x45a118
  40ba5d:	mov    r10,QWORD PTR [rsp+0x28]
  40ba62:	lea    r11,[rdx+rcx*8]
  40ba66:	jmp    0x40b6d3
  40ba6b:	mov    rdx,QWORD PTR [rip+0x4e6be]        # 0x45a130
  40ba72:	mov    r11,QWORD PTR [rip+0x4e6a7]        # 0x45a120
  40ba79:	mov    r8,rbp
  40ba7c:	mov    rbx,r15
  40ba7f:	mov    r15,r8
  40ba82:	movsxd rax,r14d
  40ba85:	mov    rbp,QWORD PTR [rsp+0x30]
  40ba8a:	mov    r12,QWORD PTR [rsp+0x40]
  40ba8f:	lea    rcx,[r11+rdx*8]
  40ba93:	mov    r9,QWORD PTR [rcx]
  40ba96:	add    r15,QWORD PTR [r9+0x8]
  40ba9a:	mov    BYTE PTR [r15+rax*1],0xa
  40ba9f:	lea    eax,[r8+0x1]
  40baa3:	mov    rcx,QWORD PTR [rcx]
  40baa6:	jmp    0x40b6bb
  40baab:	xor    eax,eax
  40baad:	jmp    0x4099b9
  40bab2:	movsxd rbx,DWORD PTR [rsp+0x3c]
  40bab7:	mov    rbp,QWORD PTR [r12]
  40babb:	movsxd rdx,DWORD PTR [rip+0x4e642]        # 0x45a104
  40bac2:	add    rbx,rbp
  40bac5:	cmp    rbp,rbx
  40bac8:	mov    QWORD PTR [rip+0x4e641],rbx        # 0x45a110
  40bacf:	jae    0x40bb05
  40bad1:	mov    rcx,rbp
  40bad4:	movzx  r8d,BYTE PTR [rcx]
  40bad8:	mov    eax,0x1
  40badd:	test   r8b,r8b
  40bae0:	je     0x40bae6
  40bae2:	movsxd rax,DWORD PTR [rdi+r8*4]
  40bae6:	lea    r8,[rdx+rdx*2]
  40baea:	add    rcx,0x1
  40baee:	mov    rdx,r8
  40baf1:	shl    rdx,0x4
  40baf5:	sub    rdx,r8
  40baf8:	add    rax,rdx
  40bafb:	cmp    rcx,rbx
  40bafe:	movsx  rdx,WORD PTR [rsi+rax*2]
  40bb03:	jne    0x40bad4
  40bb05:	imul   rax,rdx,0x5a
  40bb09:	movsx  rax,WORD PTR [rsi+rax*1+0x2]
  40bb0f:	test   eax,eax
  40bb11:	jle    0x409945
  40bb17:	add    rbx,0x1
  40bb1b:	mov    QWORD PTR [rip+0x4e5ee],rbx        # 0x45a110
  40bb22:	jmp    0x409931
  40bb27:	nop    WORD PTR [rax+rax*1+0x0]
  40bb30:	mov    rdx,QWORD PTR [rip+0x4e5f9]        # 0x45a130
  40bb37:	mov    r11,QWORD PTR [rip+0x4e5e2]        # 0x45a120
  40bb3e:	mov    eax,DWORD PTR [rip+0x4e5d4]        # 0x45a118
  40bb44:	mov    rcx,QWORD PTR [r11+rdx*8]
  40bb48:	jmp    0x40b6c1
  40bb4d:	mov    eax,0x1
  40bb52:	jmp    0x4099b9
  40bb57:	lea    rcx,[rip+0x287d6]        # 0x434334
  40bb5e:	call   0x409020
  40bb63:	mov    r15,rax
  40bb66:	jmp    0x40a8e3
  40bb6b:	lea    rcx,[rip+0x2875e]        # 0x4342d0
  40bb72:	call   0x409020
  40bb77:	cmp    r9d,0x2
  40bb7b:	je     0x40bbd8
  40bb7d:	movsxd rbx,DWORD PTR [rsp+0x3c]
  40bb82:	mov    rbp,rax
  40bb85:	add    rbx,rax
  40bb88:	movsxd rax,DWORD PTR [rip+0x4e575]        # 0x45a104
  40bb8f:	cmp    rbx,rbp
  40bb92:	mov    QWORD PTR [rip+0x4e577],rbx        # 0x45a110
  40bb99:	jbe    0x409931
  40bb9f:	mov    rcx,rbp
  40bba2:	movzx  r8d,BYTE PTR [rcx]
  40bba6:	mov    edx,0x1
  40bbab:	test   r8b,r8b
  40bbae:	je     0x40bbb4
  40bbb0:	movsxd rdx,DWORD PTR [rdi+r8*4]
  40bbb4:	lea    r8,[rax+rax*2]
  40bbb8:	add    rcx,0x1
  40bbbc:	mov    rax,r8
  40bbbf:	shl    rax,0x4
  40bbc3:	sub    rax,r8
  40bbc6:	add    rax,rdx
  40bbc9:	cmp    rcx,rbx
  40bbcc:	movsx  rax,WORD PTR [rsi+rax*2]
  40bbd1:	jne    0x40bba2
  40bbd3:	jmp    0x409931
  40bbd8:	mov    rdx,QWORD PTR [r11]
  40bbdb:	mov    rbx,r8
  40bbde:	mov    rbp,rax
  40bbe1:	add    rbx,QWORD PTR [rdx+0x8]
  40bbe5:	jmp    0x40b383
  40bbea:	nop    WORD PTR [rax+rax*1+0x0]
  40bbf0:	push   rdi
  40bbf1:	push   rsi
  40bbf2:	push   rbx
  40bbf3:	sub    rsp,0x20
  40bbf7:	movsxd rbx,edx
  40bbfa:	mov    rsi,rcx
  40bbfd:	lea    edi,[rbx+0x2]
  40bc00:	movsxd rdi,edi
  40bc03:	mov    rcx,rdi
  40bc06:	call   0x42a4a0
  40bc0b:	test   rax,rax
  40bc0e:	je     0x40bc5a
  40bc10:	xor    r8d,r8d
  40bc13:	test   ebx,ebx
  40bc15:	jle    0x40bc32
  40bc17:	nop    WORD PTR [rax+rax*1+0x0]
  40bc20:	movzx  r9d,BYTE PTR [rsi+r8*1]
  40bc25:	mov    BYTE PTR [rax+r8*1],r9b
  40bc29:	add    r8,0x1
  40bc2d:	cmp    ebx,r8d
  40bc30:	jg     0x40bc20
  40bc32:	mov    BYTE PTR [rax+rbx*1+0x1],0x0
  40bc37:	mov    BYTE PTR [rax+rbx*1],0x0
  40bc3b:	mov    rdx,rdi
  40bc3e:	mov    rcx,rax
  40bc41:	call   0x4096c0
  40bc46:	test   rax,rax
  40bc49:	je     0x40bc66
  40bc4b:	mov    DWORD PTR [rax+0x24],0x1
  40bc52:	add    rsp,0x20
  40bc56:	pop    rbx
  40bc57:	pop    rsi
  40bc58:	pop    rdi
  40bc59:	ret    
  40bc5a:	lea    rcx,[rip+0x289b7]        # 0x434618
  40bc61:	call   0x409020
  40bc66:	lea    rcx,[rip+0x289d4]        # 0x434641
  40bc6d:	call   0x409020
  40bc72:	nop
  40bc73:	nop    DWORD PTR [rax]
  40bc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc80:	push   rbx
  40bc81:	sub    rsp,0x20
  40bc85:	mov    rbx,rcx
  40bc88:	call   0x42a400
  40bc8d:	mov    rcx,rbx
  40bc90:	mov    edx,eax
  40bc92:	add    rsp,0x20
  40bc96:	pop    rbx
  40bc97:	jmp    0x40bbf0
  40bc9c:	nop    DWORD PTR [rax+0x0]
  40bca0:	mov    eax,DWORD PTR [rip+0x2036a]        # 0x42c010
  40bca6:	ret    
  40bca7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcb0:	mov    rax,QWORD PTR [rip+0x4e419]        # 0x45a0d0
  40bcb7:	ret    
  40bcb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcc0:	mov    rax,QWORD PTR [rip+0x4e401]        # 0x45a0c8
  40bcc7:	ret    
  40bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcd0:	mov    eax,DWORD PTR [rip+0x4f372]        # 0x45b048
  40bcd6:	ret    
  40bcd7:	nop    WORD PTR [rax+rax*1+0x0]
  40bce0:	mov    rax,QWORD PTR [rip+0x4f359]        # 0x45b040
  40bce7:	ret    
  40bce8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcf0:	mov    DWORD PTR [rip+0x2031a],ecx        # 0x42c010
  40bcf6:	ret    
  40bcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40bd00:	mov    QWORD PTR [rip+0x4e3c9],rcx        # 0x45a0d0
  40bd07:	ret    
  40bd08:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd10:	mov    QWORD PTR [rip+0x4e3b1],rcx        # 0x45a0c8
  40bd17:	ret    
  40bd18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd20:	mov    eax,DWORD PTR [rip+0x4e39a]        # 0x45a0c0
  40bd26:	ret    
  40bd27:	nop    WORD PTR [rax+rax*1+0x0]
  40bd30:	mov    DWORD PTR [rip+0x4e38a],ecx        # 0x45a0c0
  40bd36:	ret    
  40bd37:	nop    WORD PTR [rax+rax*1+0x0]
  40bd40:	push   rsi
  40bd41:	push   rbx
  40bd42:	sub    rsp,0x28
  40bd46:	mov    rsi,QWORD PTR [rip+0x4e3d3]        # 0x45a120
  40bd4d:	test   rsi,rsi
  40bd50:	jne    0x40bd65
  40bd52:	jmp    0x40bd78
  40bd54:	call   0x409320
  40bd59:	mov    QWORD PTR [rbx],0x0
  40bd60:	call   0x409660
  40bd65:	mov    rax,QWORD PTR [rip+0x4e3c4]        # 0x45a130
  40bd6c:	lea    rbx,[rsi+rax*8]
  40bd70:	mov    rcx,QWORD PTR [rbx]
  40bd73:	test   rcx,rcx
  40bd76:	jne    0x40bd54
  40bd78:	mov    rcx,rsi
  40bd7b:	call   0x42a4e8
  40bd80:	xor    eax,eax
  40bd82:	mov    QWORD PTR [rip+0x4e393],0x0        # 0x45a120
  40bd8d:	mov    QWORD PTR [rip+0x4e398],0x0        # 0x45a130
  40bd98:	mov    QWORD PTR [rip+0x4e385],0x0        # 0x45a128
  40bda3:	mov    QWORD PTR [rip+0x4e362],0x0        # 0x45a110
  40bdae:	mov    DWORD PTR [rip+0x4e350],0x0        # 0x45a108
  40bdb8:	mov    DWORD PTR [rip+0x4e342],0x0        # 0x45a104
  40bdc2:	mov    QWORD PTR [rip+0x4e303],0x0        # 0x45a0d0
  40bdcd:	mov    QWORD PTR [rip+0x4e2f0],0x0        # 0x45a0c8
  40bdd8:	add    rsp,0x28
  40bddc:	pop    rbx
  40bddd:	pop    rsi
  40bdde:	ret    
  40bddf:	nop
  40bde0:	jmp    0x42a4a0
  40bde5:	nop
  40bde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bdf0:	jmp    0x42a460
  40bdf5:	nop
  40bdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be00:	jmp    0x42a4e8
  40be05:	nop
  40be06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be10:	push   rbx
  40be11:	sub    rsp,0x20
  40be15:	mov    ecx,0x50
  40be1a:	call   0x424840
  40be1f:	mov    rcx,QWORD PTR [rax+0x48]
  40be23:	mov    rbx,rax
  40be26:	mov    DWORD PTR [rax+0x38],0x0
  40be2d:	mov    DWORD PTR [rax+0x3c],0x0
  40be34:	mov    DWORD PTR [rax+0x40],0x0
  40be3b:	test   rcx,rcx
  40be3e:	je     0x40be45
  40be40:	call   0x42a4e8
  40be45:	mov    rax,rbx
  40be48:	mov    QWORD PTR [rbx+0x48],0x0
  40be50:	add    rsp,0x20
  40be54:	pop    rbx
  40be55:	ret    
  40be56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be60:	push   rdi
  40be61:	push   rsi
  40be62:	push   rbx
  40be63:	sub    rsp,0x20
  40be67:	mov    rax,QWORD PTR [rip+0x48a72]        # 0x4548e0
  40be6e:	mov    rbx,rcx
  40be71:	mov    rsi,rdx
  40be74:	mov    edi,r8d
  40be77:	mov    ecx,DWORD PTR [rax+0x8]
  40be7a:	mov    DWORD PTR [rbx+0x20],ecx
  40be7d:	call   0x427d78
  40be82:	lea    r8,[rbx+0x10]
  40be86:	mov    BYTE PTR [rbx+0x24],al
  40be89:	mov    edx,edi
  40be8b:	mov    rcx,rsi
  40be8e:	mov    QWORD PTR [rip+0x4e263],rbx        # 0x45a0f8
  40be95:	call   0x409760
  40be9a:	mov    QWORD PTR [rbx+0x8],rax
  40be9e:	mov    rax,QWORD PTR [rbx+0x10]
  40bea2:	mov    QWORD PTR [rbx+0x18],rsi
  40bea6:	mov    QWORD PTR [rbx+0x30],rsi
  40beaa:	mov    QWORD PTR [rbx+0x28],rax
  40beae:	add    rsp,0x20
  40beb2:	pop    rbx
  40beb3:	pop    rsi
  40beb4:	pop    rdi
  40beb5:	ret    
  40beb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bec0:	push   rdi
  40bec1:	push   rsi
  40bec2:	push   rbx
  40bec3:	sub    rsp,0x20
  40bec7:	mov    rax,QWORD PTR [rcx]
  40beca:	mov    rbx,rcx
  40becd:	mov    rsi,rdx
  40bed0:	mov    rdi,r8
  40bed3:	mov    QWORD PTR [rip+0x4e21e],rcx        # 0x45a0f8
  40beda:	mov    QWORD PTR [rip+0x4e20f],rdx        # 0x45a0f0
  40bee1:	test   rax,rax
  40bee4:	je     0x40bfb0
  40beea:	mov    rcx,QWORD PTR [rax]
  40beed:	call   0x409290
  40bef2:	mov    eax,DWORD PTR [rbx+0x38]
  40bef5:	lea    eax,[rax+rax*1+0x1]
  40bef9:	mov    DWORD PTR [rip+0x4e205],eax        # 0x45a104
  40beff:	call   0x409840
  40bf04:	mov    ecx,DWORD PTR [rip+0x4e1fa]        # 0x45a104
  40bf0a:	lea    r9d,[rcx-0x1]
  40bf0e:	mov    edx,r9d
  40bf11:	shr    edx,0x1f
  40bf14:	add    r9d,edx
  40bf17:	sar    r9d,1
  40bf1a:	cmp    eax,0x1
  40bf1d:	mov    DWORD PTR [rbx+0x38],r9d
  40bf21:	je     0x40bf83
  40bf23:	cmp    eax,0x2
  40bf26:	je     0x40bf70
  40bf28:	test   eax,eax
  40bf2a:	je     0x40bf50
  40bf2c:	call   QWORD PTR [rip+0x50c82]        # 0x45cbb4
  40bf32:	lea    rdx,[rip+0x28738]        # 0x434671
  40bf39:	lea    rcx,[rax+0x60]
  40bf3d:	call   0x426370
  40bf42:	mov    ecx,0x1
  40bf47:	call   0x42a540
  40bf4c:	nop    DWORD PTR [rax+0x0]
  40bf50:	cmp    r9d,0xb
  40bf54:	ja     0x40c010
  40bf5a:	lea    rax,[rip+0x28727]        # 0x434688
  40bf61:	movsxd rdx,DWORD PTR [rax+r9*4]
  40bf65:	add    rax,rdx
  40bf68:	jmp    rax
  40bf6a:	nop    WORD PTR [rax+rax*1+0x0]
  40bf70:	mov    DWORD PTR [rdi],0x0
  40bf76:	mov    eax,0x1
  40bf7b:	add    rsp,0x20
  40bf7f:	pop    rbx
  40bf80:	pop    rsi
  40bf81:	pop    rdi
  40bf82:	ret    
  40bf83:	xor    eax,eax
  40bf85:	mov    DWORD PTR [rdi],0x0
  40bf8b:	add    rsp,0x20
  40bf8f:	pop    rbx
  40bf90:	pop    rsi
  40bf91:	pop    rdi
  40bf92:	ret    
  40bf93:	mov    eax,0x2
  40bf98:	mov    DWORD PTR [rdi],0x3
  40bf9e:	add    rsp,0x20
  40bfa2:	pop    rbx
  40bfa3:	pop    rsi
  40bfa4:	pop    rdi
  40bfa5:	ret    
  40bfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfb0:	mov    rcx,QWORD PTR [rcx+0x8]
  40bfb4:	call   0x409290
  40bfb9:	jmp    0x40bef2
  40bfbe:	xchg   ax,ax
  40bfc0:	mov    DWORD PTR [rdi],0x4
  40bfc6:	mov    eax,0x2
  40bfcb:	jmp    0x40bf7b
  40bfcd:	nop    DWORD PTR [rax]
  40bfd0:	mov    DWORD PTR [rdi],0x2
  40bfd6:	mov    eax,0x2
  40bfdb:	jmp    0x40bf7b
  40bfdd:	nop    DWORD PTR [rax]
  40bfe0:	mov    DWORD PTR [rdi],0x5
  40bfe6:	mov    eax,0x2
  40bfeb:	jmp    0x40bf7b
  40bfed:	nop    DWORD PTR [rax]
  40bff0:	mov    eax,DWORD PTR [rbx+0x3c]
  40bff3:	test   eax,eax
  40bff5:	jle    0x40c030
  40bff7:	mov    DWORD PTR [rdi],0x6
  40bffd:	mov    eax,0x2
  40c002:	jmp    0x40bf7b
  40c007:	nop    WORD PTR [rax+rax*1+0x0]
  40c010:	call   QWORD PTR [rip+0x50b9e]        # 0x45cbb4
  40c016:	lea    rdx,[rip+0x28642]        # 0x43465f
  40c01d:	lea    rcx,[rax+0x60]
  40c021:	call   0x426370
  40c026:	mov    ecx,0x1
  40c02b:	call   0x42a540
  40c030:	cmp    QWORD PTR [rsi+0x8],0x0
  40c035:	je     0x40c047
  40c037:	mov    DWORD PTR [rdi],0x1
  40c03d:	mov    eax,0x3
  40c042:	jmp    0x40bf7b
  40c047:	mov    DWORD PTR [rdi],0x0
  40c04d:	mov    eax,0x2
  40c052:	jmp    0x40bf7b
  40c057:	nop    WORD PTR [rax+rax*1+0x0]
  40c060:	push   rbx
  40c061:	sub    rsp,0x20
  40c065:	cmp    QWORD PTR [rcx],0x0
  40c069:	mov    rbx,rcx
  40c06c:	je     0x40c07e
  40c06e:	xchg   ax,ax
  40c070:	mov    rcx,rbx
  40c073:	call   0x4093a0
  40c078:	cmp    QWORD PTR [rbx],0x0
  40c07c:	jne    0x40c070
  40c07e:	mov    rcx,QWORD PTR [rbx+0x8]
  40c082:	test   rcx,rcx
  40c085:	je     0x40c08c
  40c087:	call   0x409320
  40c08c:	mov    rcx,QWORD PTR [rbx+0x10]
  40c090:	mov    QWORD PTR [rbx+0x8],0x0
  40c098:	test   rcx,rcx
  40c09b:	je     0x40c0a2
  40c09d:	call   0x42a4e8
  40c0a2:	mov    QWORD PTR [rbx+0x10],0x0
  40c0aa:	add    rsp,0x20
  40c0ae:	pop    rbx
  40c0af:	ret    
  40c0b0:	push   rbx
  40c0b1:	sub    rsp,0x20
  40c0b5:	mov    rbx,rcx
  40c0b8:	call   0x40c060
  40c0bd:	mov    rcx,QWORD PTR [rbx+0x48]
  40c0c1:	mov    DWORD PTR [rbx+0x38],0x0
  40c0c8:	mov    DWORD PTR [rbx+0x3c],0x0
  40c0cf:	mov    DWORD PTR [rbx+0x40],0x0
  40c0d6:	test   rcx,rcx
  40c0d9:	je     0x40c0e0
  40c0db:	call   0x42a4e8
  40c0e0:	mov    rcx,rbx
  40c0e3:	add    rsp,0x20
  40c0e7:	pop    rbx
  40c0e8:	jmp    0x42a4e8
  40c0ed:	nop    DWORD PTR [rax]
  40c0f0:	push   rbp
  40c0f1:	push   r15
  40c0f3:	push   r14
  40c0f5:	push   r13
  40c0f7:	push   r12
  40c0f9:	push   rdi
  40c0fa:	push   rsi
  40c0fb:	push   rbx
  40c0fc:	mov    rbp,rsp
  40c0ff:	sub    rsp,0xc8
  40c106:	mov    rbx,QWORD PTR [rip+0x487d3]        # 0x4548e0
  40c10d:	mov    DWORD PTR [rbp-0x2c],0x0
  40c114:	mov    QWORD PTR [rbp+0x48],rcx
  40c118:	mov    DWORD PTR [rbp-0x28],0x0
  40c11f:	mov    DWORD PTR [rbp-0x24],0x0
  40c126:	mov    rax,QWORD PTR [rbx+0xd8]
  40c12d:	mov    DWORD PTR [rbp-0x20],0x0
  40c134:	mov    QWORD PTR [rbx+0xd8],rcx
  40c13b:	mov    BYTE PTR [rbp-0x2d],0x0
  40c13f:	mov    QWORD PTR [rbp-0x50],rax
  40c143:	movzx  eax,BYTE PTR [rbx+0xe0]
  40c14a:	mov    BYTE PTR [rbp-0x51],al
  40c14d:	mov    rax,QWORD PTR [rbx+0xf8]
  40c154:	mov    QWORD PTR [rbp-0x60],rax
  40c158:	call   QWORD PTR [rip+0x50a56]        # 0x45cbb4
  40c15e:	xor    edx,edx
  40c160:	cmp    QWORD PTR [rbp+0x48],rax
  40c164:	je     0x40c550
  40c16a:	mov    rbx,QWORD PTR [rip+0x4876f]        # 0x4548e0
  40c171:	mov    BYTE PTR [rbx+0xe0],dl
  40c177:	mov    QWORD PTR [rbx+0xf8],0x0
  40c182:	call   0x40be10
  40c187:	mov    QWORD PTR [rbp-0x40],rax
  40c18b:	call   0x427dc0
  40c190:	mov    QWORD PTR [rbp-0x18],rax
  40c194:	call   0x427dc0
  40c199:	mov    QWORD PTR [rbp-0x10],rax
  40c19d:	call   0x427dc0
  40c1a2:	mov    rsi,rax
  40c1a5:	mov    QWORD PTR [rbp-0x48],rax
  40c1a9:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ad:	test   rax,rax
  40c1b0:	je     0x40c729
  40c1b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ba:	cmp    QWORD PTR [rax+0x10],0x0
  40c1bf:	je     0x40c729
  40c1c5:	mov    rax,QWORD PTR [rbp-0x10]
  40c1c9:	test   rax,rax
  40c1cc:	je     0x40c729
  40c1d2:	test   rsi,rsi
  40c1d5:	mov    rax,QWORD PTR [rbp-0x10]
  40c1d9:	je     0x40c729
  40c1df:	cmp    QWORD PTR [rax+0x10],0x0
  40c1e4:	je     0x40c729
  40c1ea:	cmp    QWORD PTR [rsi+0x10],0x0
  40c1ef:	je     0x40c729
  40c1f5:	mov    rdi,QWORD PTR [rip+0x48614]        # 0x454810
  40c1fc:	mov    rax,QWORD PTR [rip+0x509b1]        # 0x45cbb4
  40c203:	mov    QWORD PTR [rbp-0x68],rbx
  40c207:	mov    QWORD PTR [rbp-0x78],rbx
  40c20b:	mov    QWORD PTR [rbp-0x70],rdi
  40c20f:	mov    QWORD PTR [rbp-0x80],rax
  40c213:	mov    eax,DWORD PTR [rbp-0x2c]
  40c216:	test   eax,eax
  40c218:	jne    0x40c244
  40c21a:	mov    rax,QWORD PTR [rip+0x485ef]        # 0x454810
  40c221:	movzx  eax,BYTE PTR [rax]
  40c224:	test   al,al
  40c226:	je     0x40c30a
  40c22c:	mov    rax,QWORD PTR [rbp-0x68]
  40c230:	cmp    BYTE PTR [rax+0xe0],0x0
  40c237:	jne    0x40c300
  40c23d:	mov    DWORD PTR [rbp-0x2c],0x3
  40c244:	mov    rax,QWORD PTR [rbp-0x18]
  40c248:	cmp    QWORD PTR [rax+0x8],0x0
  40c24d:	je     0x40c290
  40c24f:	mov    rax,QWORD PTR [rip+0x4868a]        # 0x4548e0
  40c256:	cmp    BYTE PTR [rax+0xe0],0x0
  40c25d:	jne    0x40c290
  40c25f:	mov    eax,DWORD PTR [rbp-0x2c]
  40c262:	test   eax,eax
  40c264:	jne    0x40c290
  40c266:	mov    rax,QWORD PTR [rbp-0x18]
  40c26a:	mov    rcx,QWORD PTR [rax]
  40c26d:	call   0x406410
  40c272:	test   al,al
  40c274:	jne    0x40c530
  40c27a:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c27e:	test   al,al
  40c280:	je     0x40c530
  40c286:	mov    DWORD PTR [rbp-0x2c],0x3
  40c28d:	nop    DWORD PTR [rax]
  40c290:	mov    rax,QWORD PTR [rip+0x48659]        # 0x4548f0
  40c297:	mov    BYTE PTR [rax],0x0
  40c29a:	mov    rcx,QWORD PTR [rbp-0x18]
  40c29e:	call   0x427db8
  40c2a3:	mov    rcx,QWORD PTR [rbp-0x10]
  40c2a7:	call   0x427db8
  40c2ac:	mov    rcx,QWORD PTR [rbp-0x48]
  40c2b0:	call   0x427db8
  40c2b5:	mov    rcx,QWORD PTR [rbp-0x40]
  40c2b9:	call   0x40c0b0
  40c2be:	mov    rax,QWORD PTR [rip+0x4861b]        # 0x4548e0
  40c2c5:	mov    rdi,QWORD PTR [rbp-0x50]
  40c2c9:	movzx  edx,BYTE PTR [rbp-0x51]
  40c2cd:	mov    QWORD PTR [rax+0xd8],rdi
  40c2d4:	mov    rdi,QWORD PTR [rbp-0x60]
  40c2d8:	mov    BYTE PTR [rax+0xe0],dl
  40c2de:	mov    QWORD PTR [rax+0xf8],rdi
  40c2e5:	mov    eax,DWORD PTR [rbp-0x2c]
  40c2e8:	add    rsp,0xc8
  40c2ef:	pop    rbx
  40c2f0:	pop    rsi
  40c2f1:	pop    rdi
  40c2f2:	pop    r12
  40c2f4:	pop    r13
  40c2f6:	pop    r14
  40c2f8:	pop    r15
  40c2fa:	pop    rbp
  40c2fb:	ret    
  40c2fc:	nop    DWORD PTR [rax+0x0]
  40c300:	mov    rax,QWORD PTR [rip+0x48509]        # 0x454810
  40c307:	mov    BYTE PTR [rax],0x0
  40c30a:	mov    rcx,QWORD PTR [rip+0x485ef]        # 0x454900
  40c311:	mov    rdx,rbp
  40c314:	call   0x42a588
  40c319:	test   eax,eax
  40c31b:	jne    0x40c560
  40c321:	mov    rax,QWORD PTR [rbp-0x80]
  40c325:	call   rax
  40c327:	lea    rcx,[rax+0x30]
  40c32b:	call   0x42a520
  40c330:	mov    rax,QWORD PTR [rip+0x485a9]        # 0x4548e0
  40c337:	cmp    BYTE PTR [rax+0xe0],0x0
  40c33e:	je     0x40c803
  40c344:	mov    rax,QWORD PTR [rbp-0x18]
  40c348:	cmp    QWORD PTR [rax+0x8],0x0
  40c34d:	jne    0x40c356
  40c34f:	mov    DWORD PTR [rbp-0x24],0x0
  40c356:	mov    ecx,DWORD PTR [rbp-0x24]
  40c359:	call   0x40e4d0
  40c35e:	mov    rcx,rax
  40c361:	call   0x408780
  40c366:	test   rax,rax
  40c369:	mov    r13,rax
  40c36c:	je     0x40c82c
  40c372:	mov    rdx,QWORD PTR [rip+0x48567]        # 0x4548e0
  40c379:	mov    DWORD PTR [rbp-0x20],0x0
  40c380:	mov    rax,QWORD PTR [rdx+0xf8]
  40c387:	add    rax,0x1
  40c38b:	cmp    rax,0x1
  40c38f:	mov    QWORD PTR [rdx+0xf8],rax
  40c396:	je     0x40c854
  40c39c:	cmp    BYTE PTR [r13+0x0],0x0
  40c3a1:	jne    0x40c3b2
  40c3a3:	mov    rax,QWORD PTR [rbp-0x40]
  40c3a7:	mov    eax,DWORD PTR [rax+0x38]
  40c3aa:	test   eax,eax
  40c3ac:	je     0x40c9d7
  40c3b2:	mov    rax,QWORD PTR [rip+0x48527]        # 0x4548e0
  40c3b9:	cmp    BYTE PTR [rax+0xe0],0x0
  40c3c0:	je     0x40c73f
  40c3c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c3ca:	cmp    QWORD PTR [rax+0x8],0x0
  40c3cf:	je     0x40c94a
  40c3d5:	call   QWORD PTR [rip+0x507d9]        # 0x45cbb4
  40c3db:	lea    rcx,[rax+0x30]
  40c3df:	mov    rsi,0xffffffffffffffff
  40c3e6:	call   0x42a520
  40c3eb:	mov    rax,QWORD PTR [rbp-0x18]
  40c3ef:	cmp    QWORD PTR [rax+0x8],0x0
  40c3f4:	je     0x40c40c
  40c3f6:	mov    rcx,QWORD PTR [rbp-0x18]
  40c3fa:	mov    edx,0xa
  40c3ff:	call   0x427dd0
  40c404:	mov    rax,QWORD PTR [rbp-0x18]
  40c408:	movsxd rsi,DWORD PTR [rax+0x8]
  40c40c:	mov    r14,QWORD PTR [rip+0x484cd]        # 0x4548e0
  40c413:	mov    rcx,r13
  40c416:	lea    r12,[rbp-0x1c]
  40c41a:	xor    edi,edi
  40c41c:	mov    ebx,0x1
  40c421:	movzx  eax,BYTE PTR [r14+0x119]
  40c429:	mov    BYTE PTR [rbp-0x2d],al
  40c42c:	call   0x42a400
  40c431:	mov    rcx,QWORD PTR [rbp-0x40]
  40c435:	mov    r8d,eax
  40c438:	mov    rdx,r13
  40c43b:	call   0x40be60
  40c440:	mov    QWORD PTR [rbp-0x90],r14
  40c447:	mov    QWORD PTR [rbp-0x88],r14
  40c44e:	xchg   ax,ax
  40c450:	mov    eax,DWORD PTR [rbp-0x24]
  40c453:	mov    rcx,QWORD PTR [rbp-0x40]
  40c457:	mov    r8,r12
  40c45a:	mov    rdx,QWORD PTR [rbp-0x18]
  40c45e:	mov    DWORD PTR [rbp-0x1c],eax
  40c461:	call   0x40bec0
  40c466:	mov    r15d,eax
  40c469:	mov    eax,DWORD PTR [rbp-0x1c]
  40c46c:	mov    DWORD PTR [rbp-0x24],eax
  40c46f:	mov    rax,QWORD PTR [rbp-0x18]
  40c473:	test   rax,rax
  40c476:	je     0x40c729
  40c47c:	mov    rax,QWORD PTR [rbp-0x18]
  40c480:	cmp    QWORD PTR [rax+0x10],0x0
  40c485:	je     0x40c729
  40c48b:	test   r15d,r15d
  40c48e:	je     0x40c610
  40c494:	cmp    r15d,0x3
  40c498:	je     0x40c5f3
  40c49e:	cmp    r15d,0x1
  40c4a2:	je     0x40c67b
  40c4a8:	sub    r15d,0x2
  40c4ac:	cmp    r15d,0x1
  40c4b0:	jbe    0x40c4be
  40c4b2:	test   bl,bl
  40c4b4:	jne    0x40c450
  40c4b6:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c4ba:	test   al,al
  40c4bc:	je     0x40c450
  40c4be:	test   dil,dil
  40c4c1:	jne    0x40c4df
  40c4c3:	mov    rax,QWORD PTR [rip+0x48416]        # 0x4548e0
  40c4ca:	cmp    BYTE PTR [rax+0xe0],0x0
  40c4d1:	je     0x40c4df
  40c4d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4d7:	mov    rcx,r13
  40c4da:	call   0x408630
  40c4df:	mov    rcx,QWORD PTR [rbp-0x40]
  40c4e3:	call   0x40c060
  40c4e8:	mov    rcx,r13
  40c4eb:	call   0x42a4e8
  40c4f0:	mov    eax,DWORD PTR [rbp-0x28]
  40c4f3:	cmp    eax,0x3
  40c4f6:	je     0x40c93e
  40c4fc:	mov    rax,QWORD PTR [rip+0x483dd]        # 0x4548e0
  40c503:	cmp    BYTE PTR [rax+0xe0],0x0
  40c50a:	jne    0x40c213
  40c510:	test   bl,bl
  40c512:	jne    0x40c921
  40c518:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c51c:	test   al,al
  40c51e:	je     0x40c921
  40c524:	mov    DWORD PTR [rbp-0x2c],0x3
  40c52b:	jmp    0x40c213
  40c530:	mov    rax,QWORD PTR [rip+0x483a9]        # 0x4548e0
  40c537:	cmp    QWORD PTR [rax],0x0
  40c53b:	jne    0x40c290
  40c541:	mov    DWORD PTR [rbp-0x2c],0x2
  40c548:	jmp    0x40c290
  40c54d:	nop    DWORD PTR [rax]
  40c550:	cmp    BYTE PTR [rbx+0xd0],0x0
  40c557:	sete   dl
  40c55a:	jmp    0x40c16a
  40c55f:	nop
  40c560:	mov    rdi,QWORD PTR [rbp-0x40]
  40c564:	mov    rcx,rdi
  40c567:	call   0x40c060
  40c56c:	mov    rcx,QWORD PTR [rdi+0x48]
  40c570:	mov    DWORD PTR [rdi+0x38],0x0
  40c577:	mov    DWORD PTR [rdi+0x3c],0x0
  40c57e:	mov    DWORD PTR [rdi+0x40],0x0
  40c585:	test   rcx,rcx
  40c588:	je     0x40c58f
  40c58a:	call   0x42a4e8
  40c58f:	mov    rax,QWORD PTR [rbp-0x40]
  40c593:	mov    rcx,QWORD PTR [rbp-0x18]
  40c597:	mov    QWORD PTR [rax+0x48],0x0
  40c59f:	call   0x427d68
  40c5a4:	mov    rcx,QWORD PTR [rbp-0x48]
  40c5a8:	call   0x427d68
  40c5ad:	mov    rax,QWORD PTR [rbp-0x70]
  40c5b1:	mov    DWORD PTR [rbp-0x20],0x0
  40c5b8:	mov    DWORD PTR [rbp-0x28],0x0
  40c5bf:	mov    DWORD PTR [rbp-0x24],0x0
  40c5c6:	mov    BYTE PTR [rax],0x0
  40c5c9:	mov    rax,QWORD PTR [rbp-0x78]
  40c5cd:	cmp    BYTE PTR [rax+0xe0],0x0
  40c5d4:	je     0x40c23d
  40c5da:	call   QWORD PTR [rip+0x505d4]        # 0x45cbb4
  40c5e0:	lea    rdx,[rax+0x30]
  40c5e4:	mov    ecx,0xa
  40c5e9:	call   0x42a478
  40c5ee:	jmp    0x40c321
  40c5f3:	mov    rax,QWORD PTR [rbp-0x88]
  40c5fa:	cmp    BYTE PTR [rax+0x11b],0x0
  40c601:	je     0x40c4be
  40c607:	nop    WORD PTR [rax+rax*1+0x0]
  40c610:	test   dil,dil
  40c613:	jne    0x40c63b
  40c615:	cmp    BYTE PTR [r14+0xe0],0x0
  40c61d:	je     0x40c63b
  40c61f:	mov    rdi,QWORD PTR [rbp-0x48]
  40c623:	mov    rcx,r13
  40c626:	mov    rdx,rdi
  40c629:	call   0x408630
  40c62e:	mov    rcx,rdi
  40c631:	mov    edi,0x1
  40c636:	call   0x408640
  40c63b:	mov    rax,QWORD PTR [rbp-0x18]
  40c63f:	mov    rsi,0xffffffffffffffff
  40c646:	mov    rcx,QWORD PTR [rax]
  40c649:	call   0x406410
  40c64e:	cmp    al,0x1
  40c650:	mov    ebx,eax
  40c652:	sbb    eax,eax
  40c654:	and    eax,0x4
  40c657:	add    eax,0x1
  40c65a:	mov    DWORD PTR [rbp-0x28],eax
  40c65d:	mov    rax,QWORD PTR [rbp-0x10]
  40c661:	mov    rdx,QWORD PTR [rbp-0x18]
  40c665:	mov    QWORD PTR [rbp-0x10],rdx
  40c669:	mov    QWORD PTR [rbp-0x18],rax
  40c66d:	mov    rcx,QWORD PTR [rbp-0x18]
  40c671:	call   0x427d68
  40c676:	jmp    0x40c4a8
  40c67b:	mov    rax,QWORD PTR [rbp-0x18]
  40c67f:	cmp    QWORD PTR [rax+0x8],rsi
  40c683:	je     0x40c7d9
  40c689:	test   dil,dil
  40c68c:	jne    0x40c6a2
  40c68e:	mov    rax,QWORD PTR [rbp-0x90]
  40c695:	cmp    BYTE PTR [rax+0xe0],0x0
  40c69c:	jne    0x40c759
  40c6a2:	mov    rax,QWORD PTR [rbp-0x18]
  40c6a6:	cmp    QWORD PTR [rax+0x8],0x0
  40c6ab:	je     0x40c706
  40c6ad:	mov    rdx,QWORD PTR [rbp-0x18]
  40c6b1:	mov    rcx,QWORD PTR [rbp-0x40]
  40c6b5:	call   0x402d60
  40c6ba:	mov    DWORD PTR [rbp-0x28],eax
  40c6bd:	mov    eax,DWORD PTR [rbp-0x28]
  40c6c0:	cmp    eax,0x5
  40c6c3:	mov    eax,DWORD PTR [rbp-0x28]
  40c6c6:	setne  bl
  40c6c9:	cmp    eax,0x1
  40c6cc:	je     0x40c70c
  40c6ce:	mov    eax,DWORD PTR [rbp-0x28]
  40c6d1:	cmp    eax,0x4
  40c6d4:	je     0x40c70c
  40c6d6:	mov    eax,DWORD PTR [rbp-0x28]
  40c6d9:	cmp    eax,0x1
  40c6dc:	je     0x40c77a
  40c6e2:	mov    eax,DWORD PTR [rbp-0x28]
  40c6e5:	cmp    eax,0x4
  40c6e8:	je     0x40c89b
  40c6ee:	mov    eax,DWORD PTR [rbp-0x28]
  40c6f1:	cmp    eax,0x3
  40c6f4:	je     0x40c4be
  40c6fa:	mov    rsi,0xffffffffffffffff
  40c701:	jmp    0x40c4b2
  40c706:	mov    rdx,QWORD PTR [rbp-0x10]
  40c70a:	jmp    0x40c6b1
  40c70c:	mov    rax,QWORD PTR [rbp-0x18]
  40c710:	cmp    QWORD PTR [rax+0x8],0x0
  40c715:	jne    0x40c6d6
  40c717:	mov    rax,QWORD PTR [rbp-0x10]
  40c71b:	mov    rcx,QWORD PTR [rbp-0x18]
  40c71f:	mov    rdx,QWORD PTR [rax]
  40c722:	call   0x427dc8
  40c727:	jmp    0x40c6d6
  40c729:	lea    rcx,[rip+0x27f8c]        # 0x4346bc
  40c730:	call   0x405d90
  40c735:	mov    ecx,0x1
  40c73a:	call   0x42a540
  40c73f:	cmp    DWORD PTR [rax+0x124],0x2
  40c746:	jne    0x40c3d5
  40c74c:	mov    rcx,r13
  40c74f:	call   0x42a468
  40c754:	jmp    0x40c3d5
  40c759:	mov    rdi,QWORD PTR [rbp-0x48]
  40c75d:	mov    rcx,r13
  40c760:	mov    rdx,rdi
  40c763:	call   0x408630
  40c768:	mov    rcx,rdi
  40c76b:	mov    edi,0x1
  40c770:	call   0x408640
  40c775:	jmp    0x40c6a2
  40c77a:	mov    rax,QWORD PTR [rbp-0x18]
  40c77e:	mov    rcx,QWORD PTR [rax]
  40c781:	call   0x406410
  40c786:	mov    ebx,eax
  40c788:	mov    rax,QWORD PTR [rbp-0x10]
  40c78c:	mov    rdx,QWORD PTR [rbp-0x18]
  40c790:	mov    QWORD PTR [rbp-0x10],rdx
  40c794:	mov    QWORD PTR [rbp-0x18],rax
  40c798:	mov    rcx,QWORD PTR [rbp-0x18]
  40c79c:	call   0x427d68
  40c7a1:	mov    rax,QWORD PTR [rbp-0x40]
  40c7a5:	mov    rcx,QWORD PTR [rax+0x48]
  40c7a9:	mov    DWORD PTR [rax+0x38],0x0
  40c7b0:	mov    DWORD PTR [rax+0x3c],0x0
  40c7b7:	mov    DWORD PTR [rax+0x40],0x0
  40c7be:	test   rcx,rcx
  40c7c1:	je     0x40c7c8
  40c7c3:	call   0x42a4e8
  40c7c8:	mov    rax,QWORD PTR [rbp-0x40]
  40c7cc:	mov    QWORD PTR [rax+0x48],0x0
  40c7d4:	jmp    0x40c6fa
  40c7d9:	mov    rax,QWORD PTR [rbp-0x18]
  40c7dd:	mov    rdx,QWORD PTR [rbp-0x18]
  40c7e1:	mov    rcx,QWORD PTR [rax]
  40c7e4:	mov    rax,QWORD PTR [rdx+0x8]
  40c7e8:	lea    r8,[rax-0x1]
  40c7ec:	mov    QWORD PTR [rdx+0x8],r8
  40c7f0:	mov    BYTE PTR [rcx+rax*1-0x1],0x0
  40c7f5:	mov    rcx,QWORD PTR [rbp-0x48]
  40c7f9:	call   0x408640
  40c7fe:	jmp    0x40c689
  40c803:	mov    rcx,QWORD PTR [rbp+0x48]
  40c807:	call   0x408650
  40c80c:	test   rax,rax
  40c80f:	mov    r13,rax
  40c812:	jne    0x40c372
  40c818:	mov    rcx,QWORD PTR [rbp+0x48]
  40c81c:	call   0x42a528
  40c821:	test   eax,eax
  40c823:	je     0x40c82c
  40c825:	mov    DWORD PTR [rbp-0x2c],0x1
  40c82c:	mov    rbx,QWORD PTR [rip+0x480ad]        # 0x4548e0
  40c833:	cmp    BYTE PTR [rbx+0xe0],0x0
  40c83a:	jne    0x40c9e4
  40c840:	mov    rax,QWORD PTR [rbp-0x18]
  40c844:	cmp    QWORD PTR [rax+0x8],0x0
  40c849:	jne    0x40c25f
  40c84f:	jmp    0x40c290
  40c854:	cmp    DWORD PTR [rdx+0x8],0x6
  40c858:	jne    0x40c39c
  40c85e:	lea    rdx,[rip+0x27e87]        # 0x4346ec
  40c865:	mov    r8d,0x3
  40c86b:	mov    rcx,r13
  40c86e:	call   0x42a3f8
  40c873:	test   eax,eax
  40c875:	jne    0x40c39c
  40c87b:	lea    rdx,[r13+0x3]
  40c87f:	or     rcx,0xffffffffffffffff
  40c883:	mov    rdi,rdx
  40c886:	repnz scas al,BYTE PTR es:[rdi]
  40c888:	not    rcx
  40c88b:	mov    r8,rcx
  40c88e:	mov    rcx,r13
  40c891:	call   0x42a488
  40c896:	jmp    0x40c39c
  40c89b:	mov    rdi,QWORD PTR [rbp-0x40]
  40c89f:	mov    rcx,rdi
  40c8a2:	call   0x40c060
  40c8a7:	mov    rcx,r13
  40c8aa:	call   0x42a4e8
  40c8af:	mov    rax,QWORD PTR [rbp-0x18]
  40c8b3:	mov    rcx,QWORD PTR [rax]
  40c8b6:	call   0x424900
  40c8bb:	mov    rcx,QWORD PTR [rbp-0x18]
  40c8bf:	mov    r13,rax
  40c8c2:	call   0x427d68
  40c8c7:	mov    rcx,QWORD PTR [rdi+0x48]
  40c8cb:	mov    DWORD PTR [rdi+0x38],0x0
  40c8d2:	mov    DWORD PTR [rdi+0x3c],0x0
  40c8d9:	mov    DWORD PTR [rdi+0x40],0x0
  40c8e0:	test   rcx,rcx
  40c8e3:	je     0x40c8ea
  40c8e5:	call   0x42a4e8
  40c8ea:	mov    rsi,QWORD PTR [rbp-0x40]
  40c8ee:	mov    rdi,r13
  40c8f1:	xor    eax,eax
  40c8f3:	or     rcx,0xffffffffffffffff
  40c8f7:	mov    rdx,r13
  40c8fa:	mov    QWORD PTR [rsi+0x48],0x0
  40c902:	repnz scas al,BYTE PTR es:[rdi]
  40c904:	xor    edi,edi
  40c906:	not    rcx
  40c909:	lea    r8d,[rcx-0x1]
  40c90d:	mov    rcx,rsi
  40c910:	call   0x40be60
  40c915:	mov    DWORD PTR [rbp-0x24],0x0
  40c91c:	jmp    0x40c6fa
  40c921:	mov    rax,QWORD PTR [rip+0x47fb8]        # 0x4548e0
  40c928:	cmp    QWORD PTR [rax],0x0
  40c92c:	jne    0x40c213
  40c932:	mov    DWORD PTR [rbp-0x2c],0x2
  40c939:	jmp    0x40c213
  40c93e:	mov    DWORD PTR [rbp-0x2c],0x0
  40c945:	jmp    0x40c244
  40c94a:	lea    rdx,[rip+0x27d9f]        # 0x4346f0
  40c951:	mov    r8d,0x4
  40c957:	mov    rcx,r13
  40c95a:	call   0x427870
  40c95f:	test   eax,eax
  40c961:	jne    0x40c9b1
  40c963:	movzx  eax,BYTE PTR [r13+0x4]
  40c968:	cmp    al,0x3b
  40c96a:	je     0x40c97d
  40c96c:	test   al,al
  40c96e:	je     0x40c97d
  40c970:	movzx  ecx,al
  40c973:	call   QWORD PTR [rip+0x50393]        # 0x45cd0c
  40c979:	test   eax,eax
  40c97b:	je     0x40c9b1
  40c97d:	mov    rcx,r13
  40c980:	call   0x42a4e8
  40c985:	lea    rcx,[rip+0x27d6c]        # 0x4346f8
  40c98c:	call   0x42a468
  40c991:	lea    rcx,[rip+0x27da0]        # 0x434738
  40c998:	call   0x4263a0
  40c99d:	call   QWORD PTR [rip+0x50211]        # 0x45cbb4
  40c9a3:	lea    rcx,[rax+0x30]
  40c9a7:	call   0x42a520
  40c9ac:	jmp    0x40c213
  40c9b1:	mov    rax,QWORD PTR [rip+0x47f28]        # 0x4548e0
  40c9b8:	cmp    DWORD PTR [rax+0x124],0x2
  40c9bf:	jne    0x40c3d5
  40c9c5:	cmp    BYTE PTR [rax+0xe0],0x0
  40c9cc:	jne    0x40c3d5
  40c9d2:	jmp    0x40c74c
  40c9d7:	mov    rcx,r13
  40c9da:	call   0x42a4e8
  40c9df:	jmp    0x40c213
  40c9e4:	mov    eax,DWORD PTR [rbp-0x20]
  40c9e7:	mov    rcx,QWORD PTR [rbx+0x110]
  40c9ee:	lea    rdx,[rip+0x27cd6]        # 0x4346cb
  40c9f5:	xor    r8d,r8d
  40c9f8:	mov    DWORD PTR [rsp+0x20],0x0
  40ca00:	mov    r9d,0xa
  40ca06:	add    eax,0x1
  40ca09:	mov    DWORD PTR [rbp-0x20],eax
  40ca0c:	call   0x40ece0
  40ca11:	mov    edx,DWORD PTR [rbp-0x20]
  40ca14:	cmp    eax,edx
  40ca16:	jle    0x40ca3d
  40ca18:	cmp    BYTE PTR [rbx+0x11a],0x0
  40ca1f:	jne    0x40c213
  40ca25:	mov    rdx,QWORD PTR [rbx+0xe8]
  40ca2c:	lea    rcx,[rip+0x27ca2]        # 0x4346d5
  40ca33:	call   0x4263a0
  40ca38:	jmp    0x40c213
  40ca3d:	cmp    BYTE PTR [rbx+0x11a],0x0
  40ca44:	lea    rcx,[rip+0x27c6e]        # 0x4346b9
  40ca4b:	lea    rax,[rip+0x27c66]        # 0x4346b8
  40ca52:	cmovne rcx,rax
  40ca56:	call   0x42a468
  40ca5b:	jmp    0x40c244
  40ca60:	push   rbx
  40ca61:	sub    rsp,0x20
  40ca65:	mov    rbx,rcx
  40ca68:	mov    DWORD PTR [rcx+0x38],0x0
  40ca6f:	mov    DWORD PTR [rcx+0x3c],0x0
  40ca76:	mov    DWORD PTR [rcx+0x40],0x0
  40ca7d:	mov    rcx,QWORD PTR [rcx+0x48]
  40ca81:	test   rcx,rcx
  40ca84:	je     0x40ca8b
  40ca86:	call   0x42a4e8
  40ca8b:	mov    QWORD PTR [rbx+0x48],0x0
  40ca93:	add    rsp,0x20
  40ca97:	pop    rbx
  40ca98:	ret    
  40ca99:	nop    DWORD PTR [rax+0x0]
  40caa0:	mov    eax,DWORD PTR [rcx+0x38]
  40caa3:	test   eax,eax
  40caa5:	setne  al
  40caa8:	ret    
  40caa9:	nop    DWORD PTR [rax+0x0]
  40cab0:	push   rsi
  40cab1:	push   rbx
  40cab2:	sub    rsp,0x48
  40cab6:	lea    rsi,[rsp+0x20]
  40cabb:	mov    rbx,rcx
  40cabe:	mov    rcx,rsi
  40cac1:	call   0x427da8
  40cac6:	mov    rax,QWORD PTR [rbx]
  40cac9:	mov    QWORD PTR [rip+0x4d628],rbx        # 0x45a0f8
  40cad0:	mov    QWORD PTR [rip+0x4d619],rsi        # 0x45a0f0
  40cad7:	test   rax,rax
  40cada:	je     0x40cb00
  40cadc:	mov    rcx,QWORD PTR [rax]
  40cadf:	call   0x409290
  40cae4:	mov    DWORD PTR [rip+0x4d616],0x19        # 0x45a104
  40caee:	call   0x409840
  40caf3:	mov    rax,QWORD PTR [rsp+0x20]
  40caf8:	add    rsp,0x48
  40cafc:	pop    rbx
  40cafd:	pop    rsi
  40cafe:	ret    
  40caff:	nop
  40cb00:	mov    rcx,QWORD PTR [rbx+0x8]
  40cb04:	call   0x409290
  40cb09:	jmp    0x40cae4
  40cb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb10:	push   r13
  40cb12:	push   r12
  40cb14:	push   rbp
  40cb15:	push   rdi
  40cb16:	push   rsi
  40cb17:	push   rbx
  40cb18:	sub    rsp,0x58
  40cb1c:	lea    rax,[rsp+0x2f]
  40cb21:	test   r8,r8
  40cb24:	mov    rbx,r8
  40cb27:	lea    rdi,[rsp+0x30]
  40cb2c:	mov    r12,rcx
  40cb2f:	mov    esi,edx
  40cb31:	cmove  rbx,rax
  40cb35:	mov    ebp,r9d
  40cb38:	mov    BYTE PTR [rbx],0x0
  40cb3b:	mov    rcx,rdi
  40cb3e:	call   0x427da8
  40cb43:	mov    rax,QWORD PTR [r12]
  40cb47:	mov    QWORD PTR [rip+0x4d5aa],r12        # 0x45a0f8
  40cb4e:	mov    QWORD PTR [rip+0x4d59b],rdi        # 0x45a0f0
  40cb55:	mov    DWORD PTR [rip+0x4d58d],esi        # 0x45a0e8
  40cb5b:	mov    QWORD PTR [rip+0x4d57e],rbx        # 0x45a0e0
  40cb62:	mov    DWORD PTR [rip+0x4d570],0x0        # 0x45a0dc
  40cb6c:	test   rax,rax
  40cb6f:	je     0x40cd60
  40cb75:	mov    rcx,QWORD PTR [rax]
  40cb78:	call   0x409290
  40cb7d:	cmp    esi,0x4
  40cb80:	mov    edx,0x25
  40cb85:	mov    eax,0x1b
  40cb8a:	cmove  eax,edx
  40cb8d:	mov    DWORD PTR [rip+0x4d571],eax        # 0x45a104
  40cb93:	call   0x409840
  40cb98:	mov    eax,DWORD PTR [rip+0x4d566]        # 0x45a104
  40cb9e:	sub    eax,0x1
  40cba1:	mov    edx,eax
  40cba3:	shr    edx,0x1f
  40cba6:	add    eax,edx
  40cba8:	sar    eax,1
  40cbaa:	sub    eax,0xd
  40cbad:	cmp    eax,0x5
  40cbb0:	ja     0x40ccb4
  40cbb6:	lea    rdx,[rip+0x27c57]        # 0x434814
  40cbbd:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cbc1:	add    rdx,rax
  40cbc4:	jmp    rdx
  40cbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbd0:	test   bpl,bpl
  40cbd3:	je     0x40cc48
  40cbd5:	mov    eax,DWORD PTR [rip+0x4d501]        # 0x45a0dc
  40cbdb:	lea    ecx,[rax-0x1]
  40cbde:	test   eax,eax
  40cbe0:	mov    DWORD PTR [rip+0x4d4f6],ecx        # 0x45a0dc
  40cbe6:	jle    0x40cc48
  40cbe8:	mov    rdx,QWORD PTR [rsp+0x38]
  40cbed:	test   rdx,rdx
  40cbf0:	je     0x40cc76
  40cbf6:	mov    rax,QWORD PTR [rsp+0x30]
  40cbfb:	sub    rdx,0x1
  40cbff:	lea    r8,[rax+rdx*1]
  40cc03:	cmp    BYTE PTR [r8],0x3b
  40cc07:	je     0x40cc31
  40cc09:	jmp    0x40cd76
  40cc0e:	xchg   ax,ax
  40cc10:	mov    rdx,QWORD PTR [rsp+0x38]
  40cc15:	test   rdx,rdx
  40cc18:	je     0x40cc70
  40cc1a:	mov    rax,QWORD PTR [rsp+0x30]
  40cc1f:	sub    rdx,0x1
  40cc23:	lea    r8,[rax+rdx*1]
  40cc27:	cmp    BYTE PTR [r8],0x3b
  40cc2b:	jne    0x40cd70
  40cc31:	sub    ecx,0x1
  40cc34:	mov    QWORD PTR [rsp+0x38],rdx
  40cc39:	mov    BYTE PTR [r8],0x0
  40cc3d:	cmp    ecx,0xffffffff
  40cc40:	jne    0x40cc10
  40cc42:	mov    DWORD PTR [rip+0x4d494],ecx        # 0x45a0dc
  40cc48:	lea    eax,[rsi-0x1]
  40cc4b:	cmp    eax,0x1
  40cc4e:	jbe    0x40ccd4
  40cc54:	cmp    QWORD PTR [rsp+0x38],0x0
  40cc5a:	je     0x40cc80
  40cc5c:	mov    rax,QWORD PTR [rsp+0x30]
  40cc61:	add    rsp,0x58
  40cc65:	pop    rbx
  40cc66:	pop    rsi
  40cc67:	pop    rdi
  40cc68:	pop    rbp
  40cc69:	pop    r12
  40cc6b:	pop    r13
  40cc6d:	ret    
  40cc6e:	xchg   ax,ax
  40cc70:	mov    DWORD PTR [rip+0x4d466],ecx        # 0x45a0dc
  40cc76:	lea    eax,[rsi-0x1]
  40cc79:	cmp    eax,0x1
  40cc7c:	jbe    0x40ccd4
  40cc7e:	xchg   ax,ax
  40cc80:	cmp    BYTE PTR [rbx],0x0
  40cc83:	jne    0x40cc5c
  40cc85:	mov    rcx,rdi
  40cc88:	call   0x427d60
  40cc8d:	xor    eax,eax
  40cc8f:	jmp    0x40cc61
  40cc91:	lea    rcx,[rip+0x27b5e]        # 0x4347f6
  40cc98:	call   0x405d90
  40cc9d:	mov    rcx,rdi
  40cca0:	call   0x427d60
  40cca5:	xor    eax,eax
  40cca7:	add    rsp,0x58
  40ccab:	pop    rbx
  40ccac:	pop    rsi
  40ccad:	pop    rdi
  40ccae:	pop    rbp
  40ccaf:	pop    r12
  40ccb1:	pop    r13
  40ccb3:	ret    
  40ccb4:	call   QWORD PTR [rip+0x4fefa]        # 0x45cbb4
  40ccba:	lea    rdx,[rip+0x2799e]        # 0x43465f
  40ccc1:	lea    rcx,[rax+0x60]
  40ccc5:	call   0x426370
  40ccca:	mov    ecx,0x1
  40cccf:	call   0x42a540
  40ccd4:	mov    rbp,QWORD PTR [rsp+0x30]
  40ccd9:	mov    r13,QWORD PTR [rip+0x47c00]        # 0x4548e0
  40cce0:	xor    r12d,r12d
  40cce3:	movzx  ecx,BYTE PTR [rbp+0x0]
  40cce7:	test   cl,cl
  40cce9:	je     0x40cc54
  40ccef:	cmp    cl,0x22
  40ccf2:	je     0x40cd28
  40ccf4:	test   r12b,r12b
  40ccf7:	jne    0x40cd06
  40ccf9:	cmp    esi,0x1
  40ccfc:	jne    0x40cd06
  40ccfe:	call   0x4279a0
  40cd03:	mov    BYTE PTR [rbp+0x0],al
  40cd06:	mov    edx,DWORD PTR [r13+0x8]
  40cd0a:	mov    rcx,rbp
  40cd0d:	call   0x427e88
  40cd12:	cdqe   
  40cd14:	add    rbp,rax
  40cd17:	movzx  ecx,BYTE PTR [rbp+0x0]
  40cd1b:	test   cl,cl
  40cd1d:	je     0x40cc54
  40cd23:	cmp    cl,0x22
  40cd26:	jne    0x40ccf4
  40cd28:	test   r12b,r12b
  40cd2b:	je     0x40cd39
  40cd2d:	xor    eax,eax
  40cd2f:	cmp    BYTE PTR [rbp+0x1],0x22
  40cd33:	sete   al
  40cd36:	add    rbp,rax
  40cd39:	mov    rcx,rbp
  40cd3c:	xor    r12d,0x1
  40cd40:	call   0x42a400
  40cd45:	lea    rdx,[rbp+0x1]
  40cd49:	mov    r8,rax
  40cd4c:	mov    rcx,rbp
  40cd4f:	call   0x42a488
  40cd54:	sub    QWORD PTR [rsp+0x38],0x1
  40cd5a:	jmp    0x40cce3
  40cd5c:	nop    DWORD PTR [rax+0x0]
  40cd60:	mov    rcx,QWORD PTR [r12+0x8]
  40cd65:	call   0x409290
  40cd6a:	jmp    0x40cb7d
  40cd6f:	nop
  40cd70:	mov    DWORD PTR [rip+0x4d366],ecx        # 0x45a0dc
  40cd76:	lea    edx,[rsi-0x1]
  40cd79:	cmp    edx,0x1
  40cd7c:	ja     0x40cc61
  40cd82:	mov    rbp,rax
  40cd85:	jmp    0x40ccd9
  40cd8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd90:	sub    rsp,0x28
  40cd94:	mov    rax,QWORD PTR [rcx]
  40cd97:	mov    QWORD PTR [rip+0x4d34e],0x0        # 0x45a0f0
  40cda2:	mov    QWORD PTR [rip+0x4d34f],rcx        # 0x45a0f8
  40cda9:	test   rax,rax
  40cdac:	je     0x40cdd0
  40cdae:	mov    rcx,QWORD PTR [rax]
  40cdb1:	call   0x409290
  40cdb6:	mov    DWORD PTR [rip+0x4d344],0x27        # 0x45a104
  40cdc0:	add    rsp,0x28
  40cdc4:	jmp    0x409840
  40cdc9:	nop    DWORD PTR [rax+0x0]
  40cdd0:	mov    rcx,QWORD PTR [rcx+0x8]
  40cdd4:	call   0x409290
  40cdd9:	jmp    0x40cdb6
  40cddb:	nop
  40cddc:	nop
  40cddd:	nop
  40cdde:	nop
  40cddf:	nop
  40cde0:	push   rbx
  40cde1:	sub    rsp,0x20
  40cde5:	test   rcx,rcx
  40cde8:	je     0x40ce14
  40cdea:	mov    rbx,rcx
  40cded:	mov    rcx,QWORD PTR [rcx]
  40cdf0:	call   0x42a4e8
  40cdf5:	mov    rcx,QWORD PTR [rbx+0x8]
  40cdf9:	call   0x42a4e8
  40cdfe:	mov    rcx,QWORD PTR [rbx+0x10]
  40ce02:	call   0x42a4e8
  40ce07:	mov    rcx,rbx
  40ce0a:	add    rsp,0x20
  40ce0e:	pop    rbx
  40ce0f:	jmp    0x42a4e8
  40ce14:	add    rsp,0x20
  40ce18:	pop    rbx
  40ce19:	ret    
  40ce1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce20:	push   rsi
  40ce21:	push   rbx
  40ce22:	sub    rsp,0x28
  40ce26:	mov    r8,rdx
  40ce29:	mov    rdx,QWORD PTR [rcx]
  40ce2c:	mov    rbx,rcx
  40ce2f:	lea    rcx,[rip+0x2f80a]        # 0x43c640
  40ce36:	call   0x424630
  40ce3b:	mov    rcx,QWORD PTR [rbx]
  40ce3e:	mov    rsi,rax
  40ce41:	call   0x42a4e8
  40ce46:	mov    QWORD PTR [rbx],rsi
  40ce49:	add    rsp,0x28
  40ce4d:	pop    rbx
  40ce4e:	pop    rsi
  40ce4f:	ret    
  40ce50:	push   r12
  40ce52:	push   rbp
  40ce53:	push   rdi
  40ce54:	push   rsi
  40ce55:	push   rbx
  40ce56:	sub    rsp,0xb0
  40ce5d:	mov    rsi,rcx
  40ce60:	call   0x4078e0
  40ce65:	cmp    al,0x1
  40ce67:	sbb    ebp,ebp
  40ce69:	and    ebp,0x5c
  40ce6c:	test   rsi,rsi
  40ce6f:	je     0x40d871
  40ce75:	mov    ecx,0x20
  40ce7a:	call   0x424840
  40ce7f:	lea    rcx,[rip+0x2f7da]        # 0x43c660
  40ce86:	mov    rbx,rax
  40ce89:	call   0x424900
  40ce8e:	mov    rdi,QWORD PTR [rip+0x47a4b]        # 0x4548e0
  40ce95:	mov    QWORD PTR [rbx],rax
  40ce98:	lea    r9,[rip+0x2f7c2]        # 0x43c661
  40ce9f:	lea    r8,[rip+0x2f7bd]        # 0x43c663
  40cea6:	lea    rdx,[rip+0x2f7bb]        # 0x43c668
  40cead:	mov    rcx,rsi
  40ceb0:	mov    eax,DWORD PTR [rdi+0x8]
  40ceb3:	mov    DWORD PTR [rsp+0x30],0x0
  40cebb:	mov    DWORD PTR [rsp+0x28],0x0
  40cec3:	mov    DWORD PTR [rsp+0x20],0x0
  40cecb:	mov    DWORD PTR [rsp+0x38],eax
  40cecf:	call   0x4088b0
  40ced4:	test   rax,rax
  40ced7:	mov    rsi,rax
  40ceda:	je     0x40d0ea
  40cee0:	lea    rdx,[rip+0x2f786]        # 0x43c66d
  40cee7:	mov    rcx,rax
  40ceea:	call   0x427790
  40ceef:	test   eax,eax
  40cef1:	je     0x40d1b0
  40cef7:	cmp    BYTE PTR [rsi],0x28
  40cefa:	je     0x40d110
  40cf00:	lea    rdx,[rip+0x2f76d]        # 0x43c674
  40cf07:	mov    rcx,rbx
  40cf0a:	call   0x40ce20
  40cf0f:	mov    rdx,rsi
  40cf12:	mov    rcx,rbx
  40cf15:	call   0x40ce20
  40cf1a:	mov    eax,DWORD PTR [rdi+0x8]
  40cf1d:	lea    r9,[rip+0x2f73d]        # 0x43c661
  40cf24:	lea    r8,[rip+0x2f738]        # 0x43c663
  40cf2b:	lea    rdx,[rip+0x2f736]        # 0x43c668
  40cf32:	xor    ecx,ecx
  40cf34:	mov    DWORD PTR [rsp+0x30],0x0
  40cf3c:	mov    DWORD PTR [rsp+0x28],0x0
  40cf44:	mov    DWORD PTR [rsp+0x20],0x0
  40cf4c:	mov    DWORD PTR [rsp+0x38],eax
  40cf50:	call   0x4088b0
  40cf55:	test   rax,rax
  40cf58:	mov    rsi,rax
  40cf5b:	je     0x40d0ea
  40cf61:	movzx  eax,BYTE PTR [rax]
  40cf64:	cmp    al,0x2e
  40cf66:	je     0x40d6f0
  40cf6c:	cmp    al,0x28
  40cf6e:	je     0x40d08d
  40cf74:	lea    rdx,[rip+0x2f701]        # 0x43c67c
  40cf7b:	mov    rcx,rsi
  40cf7e:	call   0x427790
  40cf83:	test   eax,eax
  40cf85:	jne    0x40d5c4
  40cf8b:	mov    BYTE PTR [rbx+0x1a],0x1
  40cf8f:	mov    eax,DWORD PTR [rdi+0x8]
  40cf92:	lea    r9,[rip+0x2f6eb]        # 0x43c684
  40cf99:	lea    r8,[rip+0x2f6e6]        # 0x43c686
  40cfa0:	lea    rdx,[rip+0x2f6c1]        # 0x43c668
  40cfa7:	xor    ecx,ecx
  40cfa9:	mov    DWORD PTR [rsp+0x30],0x0
  40cfb1:	mov    DWORD PTR [rsp+0x28],0x0
  40cfb9:	mov    DWORD PTR [rsp+0x20],0x0
  40cfc1:	mov    DWORD PTR [rsp+0x38],eax
  40cfc5:	call   0x4088b0
  40cfca:	test   rax,rax
  40cfcd:	mov    rsi,rax
  40cfd0:	je     0x40d0ea
  40cfd6:	lea    rdx,[rip+0x2f6ab]        # 0x43c688
  40cfdd:	mov    rcx,rax
  40cfe0:	call   0x427790
  40cfe5:	test   eax,eax
  40cfe7:	jne    0x40d210
  40cfed:	mov    eax,DWORD PTR [rdi+0x8]
  40cff0:	lea    r9,[rip+0x2f68d]        # 0x43c684
  40cff7:	lea    r8,[rip+0x2f688]        # 0x43c686
  40cffe:	lea    rdx,[rip+0x2f663]        # 0x43c668
  40d005:	xor    ecx,ecx
  40d007:	mov    DWORD PTR [rsp+0x30],0x0
  40d00f:	mov    DWORD PTR [rsp+0x28],0x0
  40d017:	mov    DWORD PTR [rsp+0x20],0x0
  40d01f:	mov    DWORD PTR [rsp+0x38],eax
  40d023:	call   0x4088b0
  40d028:	test   rax,rax
  40d02b:	mov    rsi,rax
  40d02e:	je     0x40d0ea
  40d034:	mov    rcx,rax
  40d037:	call   0x42a400
  40d03c:	cmp    eax,0x1
  40d03f:	jle    0x40d610
  40d045:	cmp    BYTE PTR [rsi],0x27
  40d048:	jne    0x40d610
  40d04e:	cdqe   
  40d050:	cmp    BYTE PTR [rsi+rax*1-0x1],0x27
  40d055:	jne    0x40d610
  40d05b:	mov    r9d,DWORD PTR [rdi+0x8]
  40d05f:	xor    r8d,r8d
  40d062:	mov    edx,0x27
  40d067:	mov    rcx,rsi
  40d06a:	call   0x4087f0
  40d06f:	mov    BYTE PTR [rbx+0x18],0x1
  40d073:	mov    rcx,rsi
  40d076:	call   0x424900
  40d07b:	mov    QWORD PTR [rbx+0x10],rax
  40d07f:	jmp    0x40d22f
  40d084:	cmp    BYTE PTR [rax],0x29
  40d087:	je     0x40d680
  40d08d:	lea    rdx,[rip+0x2f5e0]        # 0x43c674
  40d094:	mov    rcx,rbx
  40d097:	call   0x40ce20
  40d09c:	mov    rdx,rsi
  40d09f:	mov    rcx,rbx
  40d0a2:	call   0x40ce20
  40d0a7:	mov    eax,DWORD PTR [rdi+0x8]
  40d0aa:	lea    r9,[rip+0x2f5b0]        # 0x43c661
  40d0b1:	lea    r8,[rip+0x2f5c1]        # 0x43c679
  40d0b8:	lea    rdx,[rip+0x2f5a9]        # 0x43c668
  40d0bf:	xor    ecx,ecx
  40d0c1:	mov    DWORD PTR [rsp+0x30],0x0
  40d0c9:	mov    DWORD PTR [rsp+0x28],0x0
  40d0d1:	mov    DWORD PTR [rsp+0x20],0x0
  40d0d9:	mov    DWORD PTR [rsp+0x38],eax
  40d0dd:	call   0x4088b0
  40d0e2:	test   rax,rax
  40d0e5:	mov    rsi,rax
  40d0e8:	jne    0x40d084
  40d0ea:	lea    rcx,[rip+0x2f68f]        # 0x43c780
  40d0f1:	call   0x405d90
  40d0f6:	mov    rcx,rbx
  40d0f9:	call   0x40cde0
  40d0fe:	xor    esi,esi
  40d100:	mov    eax,esi
  40d102:	add    rsp,0xb0
  40d109:	pop    rbx
  40d10a:	pop    rsi
  40d10b:	pop    rdi
  40d10c:	pop    rbp
  40d10d:	pop    r12
  40d10f:	ret    
  40d110:	movsx  ebp,bpl
  40d114:	mov    r12d,0x1
  40d11a:	nop    WORD PTR [rax+rax*1+0x0]
  40d120:	lea    rdx,[rip+0x2f54d]        # 0x43c674
  40d127:	mov    rcx,rbx
  40d12a:	call   0x40ce20
  40d12f:	mov    rdx,rsi
  40d132:	mov    rcx,rbx
  40d135:	call   0x40ce20
  40d13a:	mov    eax,DWORD PTR [rdi+0x8]
  40d13d:	lea    r9,[rip+0x2f532]        # 0x43c676
  40d144:	lea    r8,[rip+0x2f52e]        # 0x43c679
  40d14b:	lea    rdx,[rip+0x2f516]        # 0x43c668
  40d152:	xor    ecx,ecx
  40d154:	mov    DWORD PTR [rsp+0x30],0x0
  40d15c:	mov    DWORD PTR [rsp+0x28],0x1
  40d164:	mov    DWORD PTR [rsp+0x20],ebp
  40d168:	mov    DWORD PTR [rsp+0x38],eax
  40d16c:	call   0x4088b0
  40d171:	test   rax,rax
  40d174:	mov    rsi,rax
  40d177:	je     0x40d0ea
  40d17d:	movzx  eax,BYTE PTR [rax]
  40d180:	cmp    al,0x28
  40d182:	je     0x40d1a0
  40d184:	cmp    al,0x29
  40d186:	jne    0x40d120
  40d188:	sub    r12d,0x1
  40d18c:	test   r12d,r12d
  40d18f:	jg     0x40d120
  40d191:	jmp    0x40cf00
  40d196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1a0:	add    r12d,0x1
  40d1a4:	jmp    0x40d18c
  40d1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1b0:	mov    rdx,rsi
  40d1b3:	mov    rcx,rbx
  40d1b6:	call   0x40ce20
  40d1bb:	mov    eax,DWORD PTR [rdi+0x8]
  40d1be:	lea    r9,[rip+0x2f49c]        # 0x43c661
  40d1c5:	lea    r8,[rip+0x2f497]        # 0x43c663
  40d1cc:	lea    rdx,[rip+0x2f495]        # 0x43c668
  40d1d3:	xor    ecx,ecx
  40d1d5:	mov    DWORD PTR [rsp+0x30],0x0
  40d1dd:	mov    DWORD PTR [rsp+0x28],0x0
  40d1e5:	mov    DWORD PTR [rsp+0x20],0x0
  40d1ed:	mov    DWORD PTR [rsp+0x38],eax
  40d1f1:	call   0x4088b0
  40d1f6:	test   rax,rax
  40d1f9:	mov    rsi,rax
  40d1fc:	jne    0x40cef7
  40d202:	jmp    0x40d0ea
  40d207:	nop    WORD PTR [rax+rax*1+0x0]
  40d210:	lea    rdx,[rip+0x2f479]        # 0x43c690
  40d217:	mov    rcx,rsi
  40d21a:	call   0x427790
  40d21f:	test   eax,eax
  40d221:	jne    0x40d624
  40d227:	mov    QWORD PTR [rbx+0x10],0x0
  40d22f:	mov    eax,DWORD PTR [rdi+0x8]
  40d232:	lea    rdx,[rip+0x2f427]        # 0x43c660
  40d239:	xor    r9d,r9d
  40d23c:	xor    r8d,r8d
  40d23f:	xor    ecx,ecx
  40d241:	mov    DWORD PTR [rsp+0x30],0x0
  40d249:	mov    DWORD PTR [rsp+0x28],0x0
  40d251:	mov    DWORD PTR [rsp+0x20],0x0
  40d259:	mov    DWORD PTR [rsp+0x38],eax
  40d25d:	call   0x4088b0
  40d262:	test   rax,rax
  40d265:	je     0x40d273
  40d267:	mov    rcx,rax
  40d26a:	call   0x424900
  40d26f:	mov    QWORD PTR [rbx+0x8],rax
  40d273:	mov    rcx,QWORD PTR [rbx+0x10]
  40d277:	test   rcx,rcx
  40d27a:	je     0x40d660
  40d280:	cmp    BYTE PTR [rbx+0x18],0x0
  40d284:	je     0x40d480
  40d28a:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d28e:	je     0x40d49c
  40d294:	mov    rsi,QWORD PTR [rip+0x4f919]        # 0x45cbb4
  40d29b:	call   rsi
  40d29d:	lea    rcx,[rax+0x30]
  40d2a1:	call   0x42a520
  40d2a6:	call   rsi
  40d2a8:	lea    rcx,[rax+0x60]
  40d2ac:	call   0x42a520
  40d2b1:	call   QWORD PTR [rip+0x4f935]        # 0x45cbec
  40d2b7:	mov    DWORD PTR [rax],0x0
  40d2bd:	mov    rcx,QWORD PTR [rbx+0x10]
  40d2c1:	lea    rdx,[rip+0x2f3e4]        # 0x43c6ac
  40d2c8:	call   0x424fe0
  40d2cd:	mov    r12,rax
  40d2d0:	test   r12,r12
  40d2d3:	je     0x40d4eb
  40d2d9:	movzx  esi,BYTE PTR [rbx+0x18]
  40d2dd:	lea    rbp,[rsp+0x70]
  40d2e2:	test   sil,sil
  40d2e5:	jne    0x40d3a2
  40d2eb:	lea    rbp,[rsp+0x70]
  40d2f0:	mov    rcx,r12
  40d2f3:	call   0x42a368
  40d2f8:	mov    rdx,rbp
  40d2fb:	mov    ecx,eax
  40d2fd:	call   QWORD PTR [rip+0x4f8f9]        # 0x45cbfc
  40d303:	cmp    eax,0xffffffff
  40d306:	je     0x40d7e5
  40d30c:	movzx  ecx,WORD PTR [rsp+0x78]
  40d311:	mov    edx,DWORD PTR [rsp+0x70]
  40d315:	test   eax,eax
  40d317:	mov    DWORD PTR [rsp+0x40],edx
  40d31b:	movzx  edx,WORD PTR [rsp+0x74]
  40d320:	mov    WORD PTR [rsp+0x48],cx
  40d325:	movzx  ecx,WORD PTR [rsp+0x7a]
  40d32a:	mov    WORD PTR [rsp+0x44],dx
  40d32f:	movzx  edx,WORD PTR [rsp+0x76]
  40d334:	mov    WORD PTR [rsp+0x4a],cx
  40d339:	movzx  ecx,WORD PTR [rsp+0x7c]
  40d33e:	mov    WORD PTR [rsp+0x46],dx
  40d343:	mov    WORD PTR [rsp+0x4c],cx
  40d348:	mov    ecx,DWORD PTR [rsp+0x80]
  40d34f:	mov    DWORD PTR [rsp+0x50],ecx
  40d353:	mov    rcx,QWORD PTR [rsp+0x88]
  40d35b:	mov    DWORD PTR [rsp+0x54],ecx
  40d35f:	mov    rcx,QWORD PTR [rsp+0x90]
  40d367:	mov    QWORD PTR [rsp+0x58],rcx
  40d36c:	mov    rcx,QWORD PTR [rsp+0x98]
  40d374:	mov    QWORD PTR [rsp+0x60],rcx
  40d379:	mov    rcx,QWORD PTR [rsp+0xa0]
  40d381:	mov    QWORD PTR [rsp+0x68],rcx
  40d386:	js     0x40d7f7
  40d38c:	jne    0x40d5e0
  40d392:	and    dx,0xf000
  40d397:	cmp    dx,0x4000
  40d39c:	je     0x40d81c
  40d3a2:	mov    rcx,rbp
  40d3a5:	call   0x427da8
  40d3aa:	lea    rdx,[rip+0x2f35c]        # 0x43c70d
  40d3b1:	mov    rcx,rbp
  40d3b4:	call   0x427d70
  40d3b9:	mov    rdx,QWORD PTR [rbx]
  40d3bc:	mov    rcx,rbp
  40d3bf:	call   0x427dc8
  40d3c4:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d3c8:	je     0x40d530
  40d3ce:	lea    rdx,[rip+0x2f33e]        # 0x43c713
  40d3d5:	mov    rcx,rbp
  40d3d8:	call   0x427dc8
  40d3dd:	mov    rdx,QWORD PTR [rbx+0x8]
  40d3e1:	test   rdx,rdx
  40d3e4:	je     0x40d3ee
  40d3e6:	mov    rcx,rbp
  40d3e9:	call   0x427dc8
  40d3ee:	mov    rcx,QWORD PTR [rsp+0x70]
  40d3f3:	mov    QWORD PTR [rdi+0x20],r12
  40d3f7:	call   0x406410
  40d3fc:	mov    rcx,rbp
  40d3ff:	mov    esi,eax
  40d401:	mov    QWORD PTR [rdi+0x20],0x0
  40d409:	call   0x427d60
  40d40e:	cmp    QWORD PTR [rbx+0x10],0x0
  40d413:	je     0x40d462
  40d415:	cmp    BYTE PTR [rbx+0x18],0x0
  40d419:	mov    rcx,r12
  40d41c:	je     0x40d544
  40d422:	call   QWORD PTR [rip+0x4f7fc]        # 0x45cc24
  40d428:	test   eax,eax
  40d42a:	je     0x40d462
  40d42c:	js     0x40d840
  40d432:	mov    ecx,eax
  40d434:	call   0x424760
  40d439:	test   rax,rax
  40d43c:	mov    rsi,rax
  40d43f:	je     0x40d882
  40d445:	mov    rdx,QWORD PTR [rbx+0x10]
  40d449:	lea    rcx,[rip+0x2f28c]        # 0x43c6dc
  40d450:	mov    r8,rax
  40d453:	call   0x405d90
  40d458:	mov    rcx,rsi
  40d45b:	xor    esi,esi
  40d45d:	call   0x42a4e8
  40d462:	mov    rcx,rbx
  40d465:	call   0x40cde0
  40d46a:	mov    eax,esi
  40d46c:	add    rsp,0xb0
  40d473:	pop    rbx
  40d474:	pop    rsi
  40d475:	pop    rdi
  40d476:	pop    rbp
  40d477:	pop    r12
  40d479:	ret    
  40d47a:	nop    WORD PTR [rax+rax*1+0x0]
  40d480:	call   0x426d80
  40d485:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d489:	mov    rcx,QWORD PTR [rbx+0x10]
  40d48d:	jne    0x40d580
  40d493:	test   rcx,rcx
  40d496:	je     0x40d66a
  40d49c:	cmp    BYTE PTR [rbx+0x18],0x0
  40d4a0:	je     0x40d5b0
  40d4a6:	mov    rsi,QWORD PTR [rip+0x4f707]        # 0x45cbb4
  40d4ad:	call   rsi
  40d4af:	lea    rcx,[rax+0x30]
  40d4b3:	call   0x42a520
  40d4b8:	call   rsi
  40d4ba:	lea    rcx,[rax+0x60]
  40d4be:	call   0x42a520
  40d4c3:	call   QWORD PTR [rip+0x4f723]        # 0x45cbec
  40d4c9:	mov    DWORD PTR [rax],0x0
  40d4cf:	mov    rcx,QWORD PTR [rbx+0x10]
  40d4d3:	lea    rdx,[rip+0x2f1d5]        # 0x43c6af
  40d4da:	call   0x424fe0
  40d4df:	mov    r12,rax
  40d4e2:	test   r12,r12
  40d4e5:	jne    0x40d2d9
  40d4eb:	cmp    BYTE PTR [rbx+0x18],0x0
  40d4ef:	je     0x40d7c0
  40d4f5:	call   QWORD PTR [rip+0x4f6f1]        # 0x45cbec
  40d4fb:	mov    ecx,DWORD PTR [rax]
  40d4fd:	call   0x42a408
  40d502:	mov    rdx,QWORD PTR [rbx+0x10]
  40d506:	lea    rcx,[rip+0x2f1ab]        # 0x43c6b8
  40d50d:	mov    r8,rax
  40d510:	call   0x405d90
  40d515:	mov    rcx,rbx
  40d518:	xor    esi,esi
  40d51a:	call   0x40cde0
  40d51f:	mov    eax,esi
  40d521:	add    rsp,0xb0
  40d528:	pop    rbx
  40d529:	pop    rsi
  40d52a:	pop    rdi
  40d52b:	pop    rbp
  40d52c:	pop    r12
  40d52e:	ret    
  40d52f:	nop
  40d530:	lea    rdx,[rip+0x2f1e9]        # 0x43c720
  40d537:	mov    rcx,rbp
  40d53a:	call   0x427dc8
  40d53f:	jmp    0x40d3dd
  40d544:	call   0x42a538
  40d549:	test   eax,eax
  40d54b:	je     0x40d462
  40d551:	call   QWORD PTR [rip+0x4f695]        # 0x45cbec
  40d557:	mov    ecx,DWORD PTR [rax]
  40d559:	xor    esi,esi
  40d55b:	call   0x42a408
  40d560:	mov    rdx,QWORD PTR [rbx+0x10]
  40d564:	lea    rcx,[rip+0x2f171]        # 0x43c6dc
  40d56b:	mov    r8,rax
  40d56e:	call   0x405d90
  40d573:	jmp    0x40d462
  40d578:	nop    DWORD PTR [rax+rax*1+0x0]
  40d580:	test   rcx,rcx
  40d583:	je     0x40d7a0
  40d589:	cmp    BYTE PTR [rbx+0x18],0x0
  40d58d:	jne    0x40d294
  40d593:	lea    rdx,[rip+0x2f112]        # 0x43c6ac
  40d59a:	call   0x42a510
  40d59f:	mov    r12,rax
  40d5a2:	jmp    0x40d2d0
  40d5a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d5b0:	lea    rdx,[rip+0x2f0f8]        # 0x43c6af
  40d5b7:	call   0x42a510
  40d5bc:	mov    r12,rax
  40d5bf:	jmp    0x40d2d0
  40d5c4:	lea    rdx,[rip+0x2f0b6]        # 0x43c681
  40d5cb:	mov    rcx,rsi
  40d5ce:	call   0x427790
  40d5d3:	test   eax,eax
  40d5d5:	jne    0x40d610
  40d5d7:	mov    BYTE PTR [rbx+0x1a],0x0
  40d5db:	jmp    0x40cf8f
  40d5e0:	and    dx,0xf000
  40d5e5:	cmp    dx,0x4000
  40d5ea:	jne    0x40d3a2
  40d5f0:	mov    rcx,r12
  40d5f3:	call   0x42a538
  40d5f8:	mov    rcx,rbx
  40d5fb:	call   0x40cde0
  40d600:	mov    eax,esi
  40d602:	add    rsp,0xb0
  40d609:	pop    rbx
  40d60a:	pop    rsi
  40d60b:	pop    rdi
  40d60c:	pop    rbp
  40d60d:	pop    r12
  40d60f:	ret    
  40d610:	lea    rcx,[rip+0x2f147]        # 0x43c75e
  40d617:	mov    rdx,rsi
  40d61a:	call   0x405d90
  40d61f:	jmp    0x40d0f6
  40d624:	lea    rdx,[rip+0x2f06b]        # 0x43c696
  40d62b:	mov    rcx,rsi
  40d62e:	call   0x427790
  40d633:	test   eax,eax
  40d635:	je     0x40d227
  40d63b:	lea    rdx,[rip+0x2f05b]        # 0x43c69d
  40d642:	mov    rcx,rsi
  40d645:	call   0x427790
  40d64a:	test   eax,eax
  40d64c:	jne    0x40d8a0
  40d652:	mov    BYTE PTR [rbx+0x19],0x1
  40d656:	jmp    0x40d227
  40d65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d660:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d664:	jne    0x40d7a0
  40d66a:	cmp    BYTE PTR [rbx+0x19],0x0
  40d66e:	jne    0x40d831
  40d674:	mov    r12,QWORD PTR [rdi+0x10]
  40d678:	jmp    0x40d2d0
  40d67d:	nop    DWORD PTR [rax]
  40d680:	lea    rdx,[rip+0x2efed]        # 0x43c674
  40d687:	mov    rcx,rbx
  40d68a:	call   0x40ce20
  40d68f:	mov    rdx,rsi
  40d692:	mov    rcx,rbx
  40d695:	call   0x40ce20
  40d69a:	mov    eax,DWORD PTR [rdi+0x8]
  40d69d:	lea    r9,[rip+0x2efbd]        # 0x43c661
  40d6a4:	lea    r8,[rip+0x2efb8]        # 0x43c663
  40d6ab:	lea    rdx,[rip+0x2efb6]        # 0x43c668
  40d6b2:	xor    ecx,ecx
  40d6b4:	mov    DWORD PTR [rsp+0x30],0x0
  40d6bc:	mov    DWORD PTR [rsp+0x28],0x0
  40d6c4:	mov    DWORD PTR [rsp+0x20],0x0
  40d6cc:	mov    DWORD PTR [rsp+0x38],eax
  40d6d0:	call   0x4088b0
  40d6d5:	test   rax,rax
  40d6d8:	mov    rsi,rax
  40d6db:	jne    0x40cf74
  40d6e1:	jmp    0x40d0ea
  40d6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6f0:	mov    rdx,rsi
  40d6f3:	mov    rcx,rbx
  40d6f6:	call   0x40ce20
  40d6fb:	mov    eax,DWORD PTR [rdi+0x8]
  40d6fe:	lea    r9,[rip+0x2ef5c]        # 0x43c661
  40d705:	lea    r8,[rip+0x2ef57]        # 0x43c663
  40d70c:	lea    rdx,[rip+0x2ef55]        # 0x43c668
  40d713:	xor    ecx,ecx
  40d715:	mov    DWORD PTR [rsp+0x30],0x0
  40d71d:	mov    DWORD PTR [rsp+0x28],0x0
  40d725:	mov    DWORD PTR [rsp+0x20],0x0
  40d72d:	mov    DWORD PTR [rsp+0x38],eax
  40d731:	call   0x4088b0
  40d736:	test   rax,rax
  40d739:	je     0x40d0ea
  40d73f:	mov    rdx,rax
  40d742:	mov    rcx,rbx
  40d745:	call   0x40ce20
  40d74a:	mov    eax,DWORD PTR [rdi+0x8]
  40d74d:	lea    r9,[rip+0x2ef0d]        # 0x43c661
  40d754:	lea    r8,[rip+0x2ef08]        # 0x43c663
  40d75b:	lea    rdx,[rip+0x2ef06]        # 0x43c668
  40d762:	xor    ecx,ecx
  40d764:	mov    DWORD PTR [rsp+0x30],0x0
  40d76c:	mov    DWORD PTR [rsp+0x28],0x0
  40d774:	mov    DWORD PTR [rsp+0x20],0x0
  40d77c:	mov    DWORD PTR [rsp+0x38],eax
  40d780:	call   0x4088b0
  40d785:	test   rax,rax
  40d788:	mov    rsi,rax
  40d78b:	je     0x40d0ea
  40d791:	movzx  eax,BYTE PTR [rax]
  40d794:	jmp    0x40cf6c
  40d799:	nop    DWORD PTR [rax+0x0]
  40d7a0:	cmp    BYTE PTR [rbx+0x19],0x0
  40d7a4:	jne    0x40d863
  40d7aa:	mov    r12,QWORD PTR [rdi+0xd8]
  40d7b1:	jmp    0x40d2d0
  40d7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d7c0:	call   QWORD PTR [rip+0x4f426]        # 0x45cbec
  40d7c6:	mov    ecx,DWORD PTR [rax]
  40d7c8:	call   0x42a408
  40d7cd:	mov    rdx,QWORD PTR [rbx+0x10]
  40d7d1:	lea    rcx,[rip+0x2ef04]        # 0x43c6dc
  40d7d8:	mov    r8,rax
  40d7db:	call   0x405d90
  40d7e0:	jmp    0x40d515
  40d7e5:	lea    rdx,[rsp+0x40]
  40d7ea:	mov    ecx,0x6
  40d7ef:	xor    eax,eax
  40d7f1:	mov    rdi,rdx
  40d7f4:	rep stos QWORD PTR es:[rdi],rax
  40d7f7:	call   QWORD PTR [rip+0x4f3ef]        # 0x45cbec
  40d7fd:	mov    ecx,DWORD PTR [rax]
  40d7ff:	call   0x42a408
  40d804:	mov    rdx,QWORD PTR [rbx+0x10]
  40d808:	lea    rcx,[rip+0x2ef94]        # 0x43c7a3
  40d80f:	mov    r8,rax
  40d812:	call   0x405d90
  40d817:	jmp    0x40d5f0
  40d81c:	mov    rdx,QWORD PTR [rbx+0x10]
  40d820:	lea    rcx,[rip+0x2eec1]        # 0x43c6e8
  40d827:	call   0x405d90
  40d82c:	jmp    0x40d5f0
  40d831:	call   QWORD PTR [rip+0x4f37d]        # 0x45cbb4
  40d837:	lea    r12,[rax+0x30]
  40d83b:	jmp    0x40d2d0
  40d840:	call   QWORD PTR [rip+0x4f3a6]        # 0x45cbec
  40d846:	mov    ecx,DWORD PTR [rax]
  40d848:	xor    esi,esi
  40d84a:	call   0x42a408
  40d84f:	lea    rcx,[rip+0x2eeda]        # 0x43c730
  40d856:	mov    rdx,rax
  40d859:	call   0x405d90
  40d85e:	jmp    0x40d462
  40d863:	call   QWORD PTR [rip+0x4f34b]        # 0x45cbb4
  40d869:	mov    r12,rax
  40d86c:	jmp    0x40d2d0
  40d871:	lea    rcx,[rip+0x2edcd]        # 0x43c645
  40d878:	call   0x405d90
  40d87d:	jmp    0x40d0fe
  40d882:	mov    rdx,QWORD PTR [rbx+0x10]
  40d886:	lea    r8,[rip+0x2edd3]        # 0x43c660
  40d88d:	lea    rcx,[rip+0x2ee48]        # 0x43c6dc
  40d894:	xor    esi,esi
  40d896:	call   0x405d90
  40d89b:	jmp    0x40d462
  40d8a0:	lea    rdx,[rip+0x2edfd]        # 0x43c6a4
  40d8a7:	mov    rcx,rsi
  40d8aa:	call   0x427790
  40d8af:	test   eax,eax
  40d8b1:	je     0x40d652
  40d8b7:	mov    r9d,DWORD PTR [rdi+0x8]
  40d8bb:	xor    r8d,r8d
  40d8be:	mov    edx,0x27
  40d8c3:	mov    rcx,rsi
  40d8c6:	call   0x4087f0
  40d8cb:	mov    rcx,rsi
  40d8ce:	call   0x424900
  40d8d3:	lea    rcx,[rbx+0x10]
  40d8d7:	mov    QWORD PTR [rbx+0x10],rax
  40d8db:	call   0x407980
  40d8e0:	jmp    0x40d22f
  40d8e5:	nop
  40d8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d8f0:	push   r13
  40d8f2:	push   r12
  40d8f4:	push   rbp
  40d8f5:	push   rdi
  40d8f6:	push   rsi
  40d8f7:	push   rbx
  40d8f8:	sub    rsp,0x38
  40d8fc:	mov    r13d,0x1
  40d902:	mov    rsi,rcx
  40d905:	mov    r12,rdx
  40d908:	mov    rbp,r8
  40d90b:	lea    rdi,[rsp+0x28]
  40d910:	jmp    0x40d91c
  40d912:	mov    rcx,QWORD PTR [rsp+0x28]
  40d917:	test   rcx,rcx
  40d91a:	jne    0x40d983
  40d91c:	xor    r8d,r8d
  40d91f:	mov    rdx,rdi
  40d922:	mov    rcx,rsi
  40d925:	call   0x427eb8
  40d92a:	movsxd rbx,eax
  40d92d:	test   ebx,ebx
  40d92f:	jns    0x40d912
  40d931:	test   r13b,r13b
  40d934:	mov    edi,r13d
  40d937:	jne    0x40d990
  40d939:	cmp    ebx,0xfffffffe
  40d93c:	je     0x40da0b
  40d942:	mov    rcx,rsi
  40d945:	call   0x427eb0
  40d94a:	mov    QWORD PTR [rbp+0x0],rax
  40d94e:	mov    rcx,rax
  40d951:	call   0x427e20
  40d956:	cmp    eax,0x1
  40d959:	je     0x40d974
  40d95b:	mov    rcx,rsi
  40d95e:	xor    edi,edi
  40d960:	call   0x427f10
  40d965:	lea    rcx,[rip+0x2ee99]        # 0x43c805
  40d96c:	mov    rdx,rax
  40d96f:	call   0x405d90
  40d974:	mov    eax,edi
  40d976:	add    rsp,0x38
  40d97a:	pop    rbx
  40d97b:	pop    rsi
  40d97c:	pop    rdi
  40d97d:	pop    rbp
  40d97e:	pop    r12
  40d980:	pop    r13
  40d982:	ret    
  40d983:	test   r13b,r13b
  40d986:	jne    0x40d9c0
  40d988:	call   0x427ed0
  40d98d:	jmp    0x40d91c
  40d98f:	nop
  40d990:	mov    rcx,r12
  40d993:	call   0x42a520
  40d998:	test   eax,eax
  40d99a:	je     0x40d939
  40d99c:	call   QWORD PTR [rip+0x4f24a]        # 0x45cbec
  40d9a2:	mov    ecx,DWORD PTR [rax]
  40d9a4:	xor    edi,edi
  40d9a6:	call   0x42a408
  40d9ab:	lea    rcx,[rip+0x2ee16]        # 0x43c7c8
  40d9b2:	mov    rdx,rax
  40d9b5:	call   0x405d90
  40d9ba:	jmp    0x40d939
  40d9bf:	nop
  40d9c0:	mov    r9,r12
  40d9c3:	mov    r8,rbx
  40d9c6:	mov    edx,0x1
  40d9cb:	call   0x42a4e0
  40d9d0:	cmp    rbx,rax
  40d9d3:	je     0x40d9fb
  40d9d5:	call   QWORD PTR [rip+0x4f211]        # 0x45cbec
  40d9db:	mov    ecx,DWORD PTR [rax]
  40d9dd:	xor    r13d,r13d
  40d9e0:	call   0x42a408
  40d9e5:	lea    rcx,[rip+0x2eddc]        # 0x43c7c8
  40d9ec:	mov    rdx,rax
  40d9ef:	call   0x405d90
  40d9f4:	mov    rcx,QWORD PTR [rsp+0x28]
  40d9f9:	jmp    0x40d988
  40d9fb:	mov    rcx,QWORD PTR [rsp+0x28]
  40da00:	mov    r13d,0x1
  40da06:	jmp    0x40d988
  40da0b:	mov    rcx,rsi
  40da0e:	xor    edi,edi
  40da10:	call   0x427f10
  40da15:	lea    rcx,[rip+0x2edcb]        # 0x43c7e7
  40da1c:	mov    rdx,rax
  40da1f:	call   0x405d90
  40da24:	jmp    0x40d942
  40da29:	nop    DWORD PTR [rax+0x0]
  40da30:	push   rbp
  40da31:	push   r15
  40da33:	mov    eax,0x2038
  40da38:	push   r14
  40da3a:	push   r13
  40da3c:	push   r12
  40da3e:	push   rdi
  40da3f:	push   rsi
  40da40:	push   rbx
  40da41:	mov    rbp,rsp
  40da44:	call   0x4294a0
  40da49:	sub    rsp,rax
  40da4c:	mov    QWORD PTR [rbp+0x48],rcx
  40da50:	mov    rcx,QWORD PTR [rip+0x46ea9]        # 0x454900
  40da57:	mov    QWORD PTR [rbp+0x50],rdx
  40da5b:	mov    rdx,rbp
  40da5e:	mov    DWORD PTR [rbp-0x2014],r8d
  40da65:	mov    QWORD PTR [rbp+0x60],r9
  40da69:	call   0x42a588
  40da6e:	test   eax,eax
  40da70:	je     0x40db31
  40da76:	mov    rcx,QWORD PTR [rbp+0x48]
  40da7a:	call   0x427e48
  40da7f:	mov    rcx,QWORD PTR [rbp+0x48]
  40da83:	cmp    eax,0x2
  40da86:	lea    rax,[rip+0x2ed7b]        # 0x43c808
  40da8d:	mov    edx,0x0
  40da92:	cmovg  rdx,rax
  40da96:	xor    ebx,ebx
  40da98:	call   0x427e38
  40da9d:	lea    rdi,[rip+0x2ed9c]        # 0x43c840
  40daa4:	xor    esi,esi
  40daa6:	jmp    0x40dad3
  40daa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dab0:	call   0x427f68
  40dab5:	mov    rcx,QWORD PTR [rbp+0x48]
  40dab9:	call   0x427e48
  40dabe:	mov    rcx,QWORD PTR [rbp+0x48]
  40dac2:	cmp    eax,0x2
  40dac5:	mov    rdx,rsi
  40dac8:	cmovg  rdx,rdi
  40dacc:	xor    ebx,ebx
  40dace:	call   0x427e38
  40dad3:	mov    rcx,QWORD PTR [rbp+0x48]
  40dad7:	call   0x427eb0
  40dadc:	mov    rcx,rax
  40dadf:	mov    rax,QWORD PTR [rbp+0x60]
  40dae3:	mov    QWORD PTR [rax],rcx
  40dae6:	call   0x427e20
  40daeb:	cmp    eax,0x4
  40daee:	mov    rax,QWORD PTR [rbp+0x60]
  40daf2:	mov    rcx,QWORD PTR [rax]
  40daf5:	je     0x40dab0
  40daf7:	call   0x427e20
  40dafc:	cmp    eax,0x1
  40daff:	je     0x40db1b
  40db01:	mov    rcx,QWORD PTR [rbp+0x48]
  40db05:	xor    ebx,ebx
  40db07:	call   0x427f10
  40db0c:	lea    rcx,[rip+0x2ecf2]        # 0x43c805
  40db13:	mov    rdx,rax
  40db16:	call   0x405d90
  40db1b:	mov    eax,ebx
  40db1d:	add    rsp,0x2038
  40db24:	pop    rbx
  40db25:	pop    rsi
  40db26:	pop    rdi
  40db27:	pop    r12
  40db29:	pop    r13
  40db2b:	pop    r14
  40db2d:	pop    r15
  40db2f:	pop    rbp
  40db30:	ret    
  40db31:	mov    rcx,QWORD PTR [rbp+0x50]
  40db35:	call   0x42a368
  40db3a:	mov    ecx,eax
  40db3c:	call   0x42a380
  40db41:	test   eax,eax
  40db43:	je     0x40dcc4
  40db49:	mov    rax,QWORD PTR [rip+0x46d90]        # 0x4548e0
  40db50:	cmp    BYTE PTR [rax+0x11a],0x0
  40db57:	jne    0x40db65
  40db59:	lea    rcx,[rip+0x2ed00]        # 0x43c860
  40db60:	call   0x42a468
  40db65:	mov    ecx,0x7
  40db6a:	call   0x40e4d0
  40db6f:	cmp    BYTE PTR [rbp-0x2014],0x0
  40db76:	mov    QWORD PTR [rbp-0x2010],rax
  40db7d:	jne    0x40dd4b
  40db83:	mov    r12,QWORD PTR [rip+0x46d66]        # 0x4548f0
  40db8a:	lea    rbx,[rbp-0x2008]
  40db91:	lea    r13,[rip+0x2ed2e]        # 0x43c8c6
  40db98:	lea    r14,[rip+0x2ed2b]        # 0x43c8ca
  40db9f:	nop
  40dba0:	mov    rdi,QWORD PTR [rbp-0x2010]
  40dba7:	test   rdi,rdi
  40dbaa:	je     0x40dbcd
  40dbac:	call   QWORD PTR [rip+0x4f002]        # 0x45cbb4
  40dbb2:	lea    rdx,[rax+0x30]
  40dbb6:	mov    rcx,rdi
  40dbb9:	call   0x42a4f8
  40dbbe:	call   QWORD PTR [rip+0x4eff0]        # 0x45cbb4
  40dbc4:	lea    rcx,[rax+0x30]
  40dbc8:	call   0x42a520
  40dbcd:	mov    esi,0x1
  40dbd2:	mov    r8,QWORD PTR [rbp+0x50]
  40dbd6:	mov    edx,0x2000
  40dbdb:	mov    rcx,rbx
  40dbde:	mov    BYTE PTR [r12],0x1
  40dbe3:	call   0x42a518
  40dbe8:	test   rax,rax
  40dbeb:	mov    BYTE PTR [r12],0x0
  40dbf0:	je     0x40dd82
  40dbf6:	mov    r8,rbx
  40dbf9:	mov    rax,rbx
  40dbfc:	mov    ecx,DWORD PTR [rax]
  40dbfe:	add    rax,0x4
  40dc02:	lea    edx,[rcx-0x1010101]
  40dc08:	not    ecx
  40dc0a:	and    edx,ecx
  40dc0c:	and    edx,0x80808080
  40dc12:	je     0x40dbfc
  40dc14:	mov    ecx,edx
  40dc16:	shr    ecx,0x10
  40dc19:	test   edx,0x8080
  40dc1f:	cmove  edx,ecx
  40dc22:	lea    rcx,[rax+0x2]
  40dc26:	cmove  rax,rcx
  40dc2a:	add    dl,dl
  40dc2c:	sbb    rax,0x3
  40dc30:	xor    r15d,r15d
  40dc33:	sub    rax,r8
  40dc36:	test   eax,eax
  40dc38:	mov    r8d,eax
  40dc3b:	jle    0x40dc4e
  40dc3d:	sub    eax,0x1
  40dc40:	cdqe   
  40dc42:	cmp    BYTE PTR [rbp+rax*1-0x2008],0xa
  40dc4a:	sete   r15b
  40dc4e:	test   sil,sil
  40dc51:	je     0x40dc79
  40dc53:	mov    ecx,0x4
  40dc58:	mov    rsi,rbx
  40dc5b:	mov    rdi,r13
  40dc5e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40dc60:	je     0x40dd82
  40dc66:	mov    ecx,0x5
  40dc6b:	mov    rsi,rbx
  40dc6e:	mov    rdi,r14
  40dc71:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40dc73:	je     0x40dd82
  40dc79:	mov    rcx,QWORD PTR [rbp+0x48]
  40dc7d:	mov    rdx,rbx
  40dc80:	call   0x427e40
  40dc85:	test   eax,eax
  40dc87:	jle    0x40ddd0
  40dc8d:	xor    esi,esi
  40dc8f:	test   r15b,r15b
  40dc92:	je     0x40dbd2
  40dc98:	mov    rax,QWORD PTR [rip+0x46c41]        # 0x4548e0
  40dc9f:	mov    rdi,QWORD PTR [rbp+0x50]
  40dca3:	cmp    QWORD PTR [rax+0xd8],rdi
  40dcaa:	jne    0x40dba0
  40dcb0:	mov    rax,QWORD PTR [rip+0x46c29]        # 0x4548e0
  40dcb7:	add    QWORD PTR [rax+0xf8],0x1
  40dcbf:	jmp    0x40dba0
  40dcc4:	cmp    BYTE PTR [rbp-0x2014],0x0
  40dccb:	je     0x40ddde
  40dcd1:	mov    rbx,QWORD PTR [rip+0x46c18]        # 0x4548f0
  40dcd8:	lea    rsi,[rbp-0x2008]
  40dcdf:	jmp    0x40dcf8
  40dce1:	mov    rcx,QWORD PTR [rbp+0x48]
  40dce5:	mov    r8d,eax
  40dce8:	mov    rdx,rsi
  40dceb:	call   0x427e40
  40dcf0:	test   eax,eax
  40dcf2:	jle    0x40ddee
  40dcf8:	mov    r9,QWORD PTR [rbp+0x50]
  40dcfc:	mov    r8d,0x2000
  40dd02:	mov    edx,0x1
  40dd07:	mov    rcx,rsi
  40dd0a:	mov    BYTE PTR [rbx],0x1
  40dd0d:	call   0x42a4f0
  40dd12:	test   eax,eax
  40dd14:	mov    BYTE PTR [rbx],0x0
  40dd17:	jg     0x40dce1
  40dd19:	mov    rcx,QWORD PTR [rbp+0x50]
  40dd1d:	mov    ebx,0x1
  40dd22:	call   0x42a528
  40dd27:	test   eax,eax
  40dd29:	je     0x40dda8
  40dd2b:	mov    rcx,QWORD PTR [rbp+0x48]
  40dd2f:	xor    ebx,ebx
  40dd31:	call   0x427e48
  40dd36:	cmp    eax,0x2
  40dd39:	lea    rax,[rip+0x2eae0]        # 0x43c820
  40dd40:	mov    edx,0x0
  40dd45:	cmovg  rdx,rax
  40dd49:	jmp    0x40ddb7
  40dd4b:	cmp    QWORD PTR [rbp-0x2010],0x0
  40dd53:	je     0x40dcd1
  40dd59:	mov    rbx,QWORD PTR [rip+0x4ee54]        # 0x45cbb4
  40dd60:	call   rbx
  40dd62:	mov    rcx,QWORD PTR [rbp-0x2010]
  40dd69:	lea    rdx,[rax+0x30]
  40dd6d:	call   0x42a4f8
  40dd72:	call   rbx
  40dd74:	lea    rcx,[rax+0x30]
  40dd78:	call   0x42a520
  40dd7d:	jmp    0x40dcd1
  40dd82:	mov    ebx,0x1
  40dd87:	mov    rax,QWORD PTR [rip+0x46b52]        # 0x4548e0
  40dd8e:	mov    rdi,QWORD PTR [rbp+0x50]
  40dd92:	cmp    QWORD PTR [rax+0xd8],rdi
  40dd99:	je     0x40ddd4
  40dd9b:	mov    rcx,QWORD PTR [rbp+0x50]
  40dd9f:	call   0x42a528
  40dda4:	test   eax,eax
  40dda6:	jne    0x40dd2b
  40dda8:	test   bl,bl
  40ddaa:	je     0x40dd2b
  40ddb0:	mov    ebx,0x1
  40ddb5:	xor    edx,edx
  40ddb7:	mov    rcx,QWORD PTR [rbp+0x48]
  40ddbb:	call   0x427e38
  40ddc0:	test   eax,eax
  40ddc2:	mov    eax,0x0
  40ddc7:	cmovle ebx,eax
  40ddca:	jmp    0x40da9d
  40ddcf:	nop
  40ddd0:	xor    ebx,ebx
  40ddd2:	jmp    0x40dd87
  40ddd4:	add    QWORD PTR [rax+0xf8],0x1
  40dddc:	jmp    0x40dd9b
  40ddde:	mov    QWORD PTR [rbp-0x2010],0x0
  40dde9:	jmp    0x40db83
  40ddee:	xor    ebx,ebx
  40ddf0:	jmp    0x40dd9b
  40ddf2:	nop
  40ddf3:	nop
  40ddf4:	nop
  40ddf5:	nop
  40ddf6:	nop
  40ddf7:	nop
  40ddf8:	nop
  40ddf9:	nop
  40ddfa:	nop
  40ddfb:	nop
  40ddfc:	nop
  40ddfd:	nop
  40ddfe:	nop
  40ddff:	nop
  40de00:	lea    rax,[rip+0x2eac9]        # 0x43c8d0
  40de07:	test   rcx,rcx
  40de0a:	cmove  rcx,rax
  40de0e:	mov    QWORD PTR [rip+0x4d3a3],rcx        # 0x45b1b8
  40de15:	ret    
  40de16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de20:	lea    rax,[rip+0x2eaa9]        # 0x43c8d0
  40de27:	test   rcx,rcx
  40de2a:	cmove  rcx,rax
  40de2e:	mov    QWORD PTR [rip+0x4d38b],rcx        # 0x45b1c0
  40de35:	ret    
  40de36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de40:	lea    rax,[rip+0x2ea89]        # 0x43c8d0
  40de47:	test   rcx,rcx
  40de4a:	cmove  rcx,rax
  40de4e:	mov    QWORD PTR [rip+0x4d373],rcx        # 0x45b1c8
  40de55:	ret    
  40de56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de60:	push   rbx
  40de61:	sub    rsp,0x20
  40de65:	test   rcx,rcx
  40de68:	je     0x40de7d
  40de6a:	lea    rdx,[rip+0x2ea60]        # 0x43c8d1
  40de71:	mov    rbx,rcx
  40de74:	call   0x427790
  40de79:	test   eax,eax
  40de7b:	jne    0x40dea3
  40de7d:	mov    DWORD PTR [rip+0x4d349],0x1        # 0x45b1d0
  40de87:	mov    rcx,QWORD PTR [rip+0x4d1f2]        # 0x45b080
  40de8e:	test   rcx,rcx
  40de91:	je     0x40ded0
  40de93:	mov    edx,DWORD PTR [rip+0x4d337]        # 0x45b1d0
  40de99:	add    rsp,0x20
  40de9d:	pop    rbx
  40de9e:	jmp    0x427e08
  40dea3:	lea    rdx,[rip+0x2ea2f]        # 0x43c8d9
  40deaa:	mov    rcx,rbx
  40dead:	call   0x427790
  40deb2:	test   eax,eax
  40deb4:	jne    0x40dee0
  40deb6:	mov    rcx,QWORD PTR [rip+0x4d1c3]        # 0x45b080
  40debd:	mov    DWORD PTR [rip+0x4d309],0x0        # 0x45b1d0
  40dec7:	test   rcx,rcx
  40deca:	jne    0x40de93
  40decc:	nop    DWORD PTR [rax+0x0]
  40ded0:	add    rsp,0x20
  40ded4:	pop    rbx
  40ded5:	ret    
  40ded6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dee0:	lea    rdx,[rip+0x2e9f8]        # 0x43c8df
  40dee7:	mov    rcx,rbx
  40deea:	call   0x427790
  40deef:	test   eax,eax
  40def1:	jne    0x40df00
  40def3:	mov    DWORD PTR [rip+0x4d2d3],0x2        # 0x45b1d0
  40defd:	jmp    0x40de87
  40deff:	nop
  40df00:	lea    r9,[rip+0x2e9ca]        # 0x43c8d1
  40df07:	lea    r8,[rip+0x2e9d9]        # 0x43c8e7
  40df0e:	lea    rcx,[rip+0x2e9e3]        # 0x43c8f8
  40df15:	mov    rdx,rbx
  40df18:	call   0x405d90
  40df1d:	jmp    0x40de7d
  40df22:	nop    DWORD PTR [rax+0x0]
  40df26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df30:	sub    rsp,0x28
  40df34:	lea    rdx,[rip+0x2e9ee]        # 0x43c929
  40df3b:	call   0x40eb70
  40df40:	mov    BYTE PTR [rip+0x4d256],al        # 0x45b19c
  40df46:	add    rsp,0x28
  40df4a:	ret    
  40df4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df50:	sub    rsp,0x28
  40df54:	lea    rdx,[rip+0x2e9d9]        # 0x43c934
  40df5b:	call   0x40eb70
  40df60:	mov    BYTE PTR [rip+0x4d235],al        # 0x45b19b
  40df66:	add    rsp,0x28
  40df6a:	ret    
  40df6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df70:	sub    rsp,0x28
  40df74:	lea    rdx,[rip+0x2e9c4]        # 0x43c93f
  40df7b:	call   0x40eb70
  40df80:	mov    BYTE PTR [rip+0x4d214],al        # 0x45b19a
  40df86:	add    rsp,0x28
  40df8a:	ret    
  40df8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df90:	sub    rsp,0x28
  40df94:	lea    rdx,[rip+0x2e9aa]        # 0x43c945
  40df9b:	call   0x40eb70
  40dfa0:	mov    BYTE PTR [rip+0x4d1f3],al        # 0x45b199
  40dfa6:	add    rsp,0x28
  40dfaa:	ret    
  40dfab:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfb0:	sub    rsp,0x28
  40dfb4:	lea    rdx,[rip+0x2e998]        # 0x43c953
  40dfbb:	call   0x40eb70
  40dfc0:	mov    BYTE PTR [rip+0x4d1d2],al        # 0x45b198
  40dfc6:	add    rsp,0x28
  40dfca:	ret    
  40dfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfd0:	sub    rsp,0x28
  40dfd4:	mov    r8d,0xffffffff
  40dfda:	xor    r9d,r9d
  40dfdd:	mov    edx,r8d
  40dfe0:	call   0x40ec90
  40dfe5:	mov    DWORD PTR [rip+0x4d1b5],eax        # 0x45b1a0
  40dfeb:	add    rsp,0x28
  40dfef:	ret    
  40dff0:	push   rdi
  40dff1:	push   rsi
  40dff2:	push   rbx
  40dff3:	sub    rsp,0x20
  40dff7:	lea    r8,[rip+0x2e960]        # 0x43c95e
  40dffe:	mov    rdx,rcx
  40e001:	mov    rbx,rcx
  40e004:	lea    rcx,[rip+0x2e959]        # 0x43c964
  40e00b:	call   0x424630
  40e010:	lea    r8,[rip+0x2e953]        # 0x43c96a
  40e017:	lea    rcx,[rip+0x2e946]        # 0x43c964
  40e01e:	mov    rsi,rax
  40e021:	mov    rdx,rbx
  40e024:	call   0x424630
  40e029:	mov    edx,0x4
  40e02e:	mov    rcx,rsi
  40e031:	mov    rdi,rax
  40e034:	call   0x42a350
  40e039:	test   eax,eax
  40e03b:	je     0x40e096
  40e03d:	mov    edx,0x4
  40e042:	mov    rcx,rdi
  40e045:	call   0x42a350
  40e04a:	test   eax,eax
  40e04c:	je     0x40e087
  40e04e:	mov    edx,0x4
  40e053:	mov    rcx,rbx
  40e056:	call   0x42a350
  40e05b:	test   eax,eax
  40e05d:	jne    0x40e070
  40e05f:	xor    r8d,r8d
  40e062:	xor    edx,edx
  40e064:	mov    rcx,rbx
  40e067:	call   0x401ed0
  40e06c:	nop    DWORD PTR [rax+0x0]
  40e070:	mov    rcx,rsi
  40e073:	call   0x42a4e8
  40e078:	mov    rcx,rdi
  40e07b:	add    rsp,0x20
  40e07f:	pop    rbx
  40e080:	pop    rsi
  40e081:	pop    rdi
  40e082:	jmp    0x42a4e8
  40e087:	xor    r8d,r8d
  40e08a:	xor    edx,edx
  40e08c:	mov    rcx,rdi
  40e08f:	call   0x401ed0
  40e094:	jmp    0x40e070
  40e096:	xor    r8d,r8d
  40e099:	xor    edx,edx
  40e09b:	mov    rcx,rsi
  40e09e:	call   0x401ed0
  40e0a3:	jmp    0x40e070
  40e0a5:	nop
  40e0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0b0:	push   rdi
  40e0b1:	push   rsi
  40e0b2:	mov    eax,0x1030
  40e0b7:	push   rbx
  40e0b8:	call   0x4294a0
  40e0bd:	sub    rsp,rax
  40e0c0:	mov    rdi,rcx
  40e0c3:	lea    rbx,[rsp+0x830]
  40e0cb:	lea    rcx,[rip+0x2e89c]        # 0x43c96e
  40e0d2:	call   0x42a4d0
  40e0d7:	mov    rdx,rbx
  40e0da:	mov    rcx,rdi
  40e0dd:	mov    rsi,rax
  40e0e0:	call   0x423790
  40e0e5:	test   eax,eax
  40e0e7:	js     0x40e1a9
  40e0ed:	lea    rdi,[rsp+0xc30]
  40e0f5:	mov    rcx,rbx
  40e0f8:	lea    rbx,[rsp+0x430]
  40e100:	mov    rdx,rdi
  40e103:	call   0x4275b0
  40e108:	lea    rax,[rip+0x2e89a]        # 0x43c9a9
  40e10f:	lea    r8,[rip+0x2e88d]        # 0x43c9a3
  40e116:	mov    r9,rdi
  40e119:	mov    edx,0x400
  40e11e:	mov    rcx,rbx
  40e121:	mov    QWORD PTR [rsp+0x20],rax
  40e126:	call   0x426220
  40e12b:	mov    rcx,rbx
  40e12e:	call   0x40dff0
  40e133:	test   rsi,rsi
  40e136:	je     0x40e13d
  40e138:	cmp    BYTE PTR [rsi],0x0
  40e13b:	jne    0x40e186
  40e13d:	lea    rsi,[rsp+0x30]
  40e142:	mov    rcx,rsi
  40e145:	call   0x4276f0
  40e14a:	test   al,al
  40e14c:	jne    0x40e159
  40e14e:	add    rsp,0x1030
  40e155:	pop    rbx
  40e156:	pop    rsi
  40e157:	pop    rdi
  40e158:	ret    
  40e159:	lea    rax,[rip+0x2e850]        # 0x43c9b0
  40e160:	lea    r8,[rip+0x2e83c]        # 0x43c9a3
  40e167:	mov    rcx,rbx
  40e16a:	mov    r9,rsi
  40e16d:	mov    edx,0x400
  40e172:	mov    QWORD PTR [rsp+0x20],rax
  40e177:	call   0x426220
  40e17c:	mov    rcx,rbx
  40e17f:	call   0x40dff0
  40e184:	jmp    0x40e14e
  40e186:	mov    rcx,rsi
  40e189:	call   0x4249c0
  40e18e:	lea    rcx,[rsp+0x30]
  40e193:	mov    QWORD PTR [rsp+0x30],rax
  40e198:	call   0x407980
  40e19d:	mov    rcx,QWORD PTR [rsp+0x30]
  40e1a2:	call   0x40dff0
  40e1a7:	jmp    0x40e14e
  40e1a9:	call   QWORD PTR [rip+0x4ea05]        # 0x45cbb4
  40e1af:	lea    rdx,[rip+0x2e7c2]        # 0x43c978
  40e1b6:	lea    rcx,[rax+0x60]
  40e1ba:	mov    r8,rdi
  40e1bd:	call   0x426370
  40e1c2:	mov    ecx,0x1
  40e1c7:	call   0x42a540
  40e1cc:	nop
  40e1cd:	nop    DWORD PTR [rax]
  40e1d0:	push   rbx
  40e1d1:	sub    rsp,0x20
  40e1d5:	test   rcx,rcx
  40e1d8:	je     0x40e253
  40e1da:	lea    rdx,[rip+0x2e7db]        # 0x43c9bc
  40e1e1:	mov    rbx,rcx
  40e1e4:	call   0x427790
  40e1e9:	test   eax,eax
  40e1eb:	jne    0x40e200
  40e1ed:	mov    DWORD PTR [rip+0x4cfbd],0x1        # 0x45b1b4
  40e1f7:	add    rsp,0x20
  40e1fb:	pop    rbx
  40e1fc:	ret    
  40e1fd:	nop    DWORD PTR [rax]
  40e200:	lea    rdx,[rip+0x2e7c1]        # 0x43c9c8
  40e207:	mov    rcx,rbx
  40e20a:	call   0x427790
  40e20f:	test   eax,eax
  40e211:	jne    0x40e263
  40e213:	mov    DWORD PTR [rip+0x4cf97],0x2        # 0x45b1b4
  40e21d:	add    rsp,0x20
  40e221:	pop    rbx
  40e222:	ret    
  40e223:	lea    rdx,[rip+0x2e7b4]        # 0x43c9de
  40e22a:	mov    rcx,rbx
  40e22d:	call   0x427790
  40e232:	test   eax,eax
  40e234:	je     0x40e253
  40e236:	lea    r9,[rip+0x2e7a1]        # 0x43c9de
  40e23d:	lea    r8,[rip+0x2e79f]        # 0x43c9e3
  40e244:	lea    rcx,[rip+0x2e6ad]        # 0x43c8f8
  40e24b:	mov    rdx,rbx
  40e24e:	call   0x405d90
  40e253:	mov    DWORD PTR [rip+0x4cf57],0x0        # 0x45b1b4
  40e25d:	add    rsp,0x20
  40e261:	pop    rbx
  40e262:	ret    
  40e263:	lea    rdx,[rip+0x2e769]        # 0x43c9d3
  40e26a:	mov    rcx,rbx
  40e26d:	call   0x427790
  40e272:	test   eax,eax
  40e274:	jne    0x40e223
  40e276:	mov    DWORD PTR [rip+0x4cf34],0x3        # 0x45b1b4
  40e280:	jmp    0x40e1f7
  40e285:	nop
  40e286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e290:	push   rbx
  40e291:	sub    rsp,0x20
  40e295:	test   rcx,rcx
  40e298:	je     0x40e2ad
  40e29a:	lea    rdx,[rip+0x2e74e]        # 0x43c9ef
  40e2a1:	mov    rbx,rcx
  40e2a4:	call   0x427790
  40e2a9:	test   eax,eax
  40e2ab:	jne    0x40e2c0
  40e2ad:	mov    DWORD PTR [rip+0x4cef9],0x0        # 0x45b1b0
  40e2b7:	add    rsp,0x20
  40e2bb:	pop    rbx
  40e2bc:	ret    
  40e2bd:	nop    DWORD PTR [rax]
  40e2c0:	lea    rdx,[rip+0x2e737]        # 0x43c9fe
  40e2c7:	mov    rcx,rbx
  40e2ca:	call   0x427790
  40e2cf:	test   eax,eax
  40e2d1:	jne    0x40e2e3
  40e2d3:	mov    DWORD PTR [rip+0x4ced3],0x1        # 0x45b1b0
  40e2dd:	add    rsp,0x20
  40e2e1:	pop    rbx
  40e2e2:	ret    
  40e2e3:	lea    rdx,[rip+0x2e723]        # 0x43ca0d
  40e2ea:	mov    rcx,rbx
  40e2ed:	call   0x427790
  40e2f2:	test   eax,eax
  40e2f4:	jne    0x40e302
  40e2f6:	mov    DWORD PTR [rip+0x4ceb0],0x2        # 0x45b1b0
  40e300:	jmp    0x40e2b7
  40e302:	lea    rdx,[rip+0x2e70a]        # 0x43ca13
  40e309:	mov    rcx,rbx
  40e30c:	call   0x427790
  40e311:	test   eax,eax
  40e313:	jne    0x40e321
  40e315:	mov    DWORD PTR [rip+0x4ce91],0x3        # 0x45b1b0
  40e31f:	jmp    0x40e2b7
  40e321:	lea    r9,[rip+0x2e6c7]        # 0x43c9ef
  40e328:	lea    r8,[rip+0x2e6ea]        # 0x43ca19
  40e32f:	lea    rcx,[rip+0x2e5c2]        # 0x43c8f8
  40e336:	mov    rdx,rbx
  40e339:	call   0x405d90
  40e33e:	jmp    0x40e2ad
  40e343:	nop    DWORD PTR [rax]
  40e346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e350:	push   rbx
  40e351:	sub    rsp,0x20
  40e355:	test   rcx,rcx
  40e358:	je     0x40e3d3
  40e35a:	lea    rdx,[rip+0x2e6ca]        # 0x43ca2b
  40e361:	mov    rbx,rcx
  40e364:	call   0x427790
  40e369:	test   eax,eax
  40e36b:	jne    0x40e380
  40e36d:	mov    DWORD PTR [rip+0x4ce2d],0x1        # 0x45b1a4
  40e377:	add    rsp,0x20
  40e37b:	pop    rbx
  40e37c:	ret    
  40e37d:	nop    DWORD PTR [rax]
  40e380:	lea    rdx,[rip+0x2e6ac]        # 0x43ca33
  40e387:	mov    rcx,rbx
  40e38a:	call   0x427790
  40e38f:	test   eax,eax
  40e391:	jne    0x40e3a3
  40e393:	mov    DWORD PTR [rip+0x4ce07],0x2        # 0x45b1a4
  40e39d:	add    rsp,0x20
  40e3a1:	pop    rbx
  40e3a2:	ret    
  40e3a3:	lea    rdx,[rip+0x2e634]        # 0x43c9de
  40e3aa:	mov    rcx,rbx
  40e3ad:	call   0x427790
  40e3b2:	test   eax,eax
  40e3b4:	je     0x40e3d3
  40e3b6:	lea    r9,[rip+0x2e621]        # 0x43c9de
  40e3bd:	lea    r8,[rip+0x2e673]        # 0x43ca37
  40e3c4:	lea    rcx,[rip+0x2e52d]        # 0x43c8f8
  40e3cb:	mov    rdx,rbx
  40e3ce:	call   0x405d90
  40e3d3:	mov    DWORD PTR [rip+0x4cdc7],0x0        # 0x45b1a4
  40e3dd:	add    rsp,0x20
  40e3e1:	pop    rbx
  40e3e2:	ret    
  40e3e3:	nop    DWORD PTR [rax]
  40e3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3f0:	push   rbx
  40e3f1:	sub    rsp,0x20
  40e3f5:	test   rcx,rcx
  40e3f8:	je     0x40e433
  40e3fa:	lea    rdx,[rip+0x2e63b]        # 0x43ca3c
  40e401:	mov    rbx,rcx
  40e404:	call   0x427790
  40e409:	test   eax,eax
  40e40b:	jne    0x40e420
  40e40d:	mov    DWORD PTR [rip+0x4cd95],0x1        # 0x45b1ac
  40e417:	add    rsp,0x20
  40e41b:	pop    rbx
  40e41c:	ret    
  40e41d:	nop    DWORD PTR [rax]
  40e420:	lea    rdx,[rip+0x2e621]        # 0x43ca48
  40e427:	mov    rcx,rbx
  40e42a:	call   0x40eb70
  40e42f:	test   al,al
  40e431:	jne    0x40e443
  40e433:	mov    DWORD PTR [rip+0x4cd6f],0x0        # 0x45b1ac
  40e43d:	add    rsp,0x20
  40e441:	pop    rbx
  40e442:	ret    
  40e443:	mov    DWORD PTR [rip+0x4cd5f],0x2        # 0x45b1ac
  40e44d:	add    rsp,0x20
  40e451:	pop    rbx
  40e452:	ret    
  40e453:	nop    DWORD PTR [rax]
  40e456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e460:	push   rbx
  40e461:	sub    rsp,0x20
  40e465:	test   rcx,rcx
  40e468:	je     0x40e4a3
  40e46a:	lea    rdx,[rip+0x2e5e9]        # 0x43ca5a
  40e471:	mov    rbx,rcx
  40e474:	call   0x427790
  40e479:	test   eax,eax
  40e47b:	jne    0x40e490
  40e47d:	mov    DWORD PTR [rip+0x4cd21],0x2        # 0x45b1a8
  40e487:	add    rsp,0x20
  40e48b:	pop    rbx
  40e48c:	ret    
  40e48d:	nop    DWORD PTR [rax]
  40e490:	lea    rdx,[rip+0x2e5ca]        # 0x43ca61
  40e497:	mov    rcx,rbx
  40e49a:	call   0x40eb70
  40e49f:	test   al,al
  40e4a1:	jne    0x40e4b3
  40e4a3:	mov    DWORD PTR [rip+0x4ccfb],0x0        # 0x45b1a8
  40e4ad:	add    rsp,0x20
  40e4b1:	pop    rbx
  40e4b2:	ret    
  40e4b3:	mov    DWORD PTR [rip+0x4cceb],0x1        # 0x45b1a8
  40e4bd:	add    rsp,0x20
  40e4c1:	pop    rbx
  40e4c2:	ret    
  40e4c3:	nop
  40e4c4:	nop
  40e4c5:	nop
  40e4c6:	nop
  40e4c7:	nop
  40e4c8:	nop
  40e4c9:	nop
  40e4ca:	nop
  40e4cb:	nop
  40e4cc:	nop
  40e4cd:	nop
  40e4ce:	nop
  40e4cf:	nop
  40e4d0:	push   r15
  40e4d2:	push   r14
  40e4d4:	push   r13
  40e4d6:	push   r12
  40e4d8:	push   rbp
  40e4d9:	push   rdi
  40e4da:	push   rsi
  40e4db:	push   rbx
  40e4dc:	sub    rsp,0x158
  40e4e3:	cmp    ecx,0x6
  40e4e6:	ja     0x40e9a0
  40e4ec:	cmp    ecx,0x1
  40e4ef:	jae    0x40e970
  40e4f5:	mov    rax,QWORD PTR [rip+0x463e4]        # 0x4548e0
  40e4fc:	mov    r9,QWORD PTR [rax+0x138]
  40e503:	mov    BYTE PTR [rip+0x4bc36],0x0        # 0x45a140
  40e50a:	mov    QWORD PTR [rsp+0x38],r9
  40e50f:	xor    r8d,r8d
  40e512:	cmp    BYTE PTR [r9],0x0
  40e516:	je     0x40e650
  40e51c:	mov    rbp,QWORD PTR [rip+0x463bd]        # 0x4548e0
  40e523:	mov    esi,ecx
  40e525:	mov    r14,rbp
  40e528:	mov    QWORD PTR [rsp+0x20],rbp
  40e52d:	mov    r13,rbp
  40e530:	mov    r12,rbp
  40e533:	lea    r10,[rip+0x4bc06]        # 0x45a140
  40e53a:	mov    rdx,r10
  40e53d:	mov    ecx,DWORD PTR [rdx]
  40e53f:	add    rdx,0x4
  40e543:	lea    eax,[rcx-0x1010101]
  40e549:	not    ecx
  40e54b:	and    eax,ecx
  40e54d:	and    eax,0x80808080
  40e552:	je     0x40e53d
  40e554:	mov    ecx,eax
  40e556:	shr    ecx,0x10
  40e559:	test   eax,0x8080
  40e55e:	cmove  eax,ecx
  40e561:	lea    rcx,[rdx+0x2]
  40e565:	cmove  rdx,rcx
  40e569:	add    al,al
  40e56b:	sbb    rdx,0x3
  40e56f:	sub    rdx,r10
  40e572:	cmp    rdx,0xff
  40e579:	ja     0x40e650
  40e57f:	lea    rbx,[rsp+0x40]
  40e584:	xor    eax,eax
  40e586:	mov    ecx,0x20
  40e58b:	test   r8b,r8b
  40e58e:	mov    rdi,rbx
  40e591:	rep stos QWORD PTR es:[rdi],rax
  40e594:	mov    BYTE PTR [rdi],0x0
  40e597:	je     0x40e983
  40e59d:	movzx  ecx,BYTE PTR [r9]
  40e5a1:	lea    eax,[rcx-0x23]
  40e5a4:	cmp    al,0x5b
  40e5a6:	ja     0x40e960
  40e5ac:	lea    rdx,[rip+0x2ea35]        # 0x43cfe8
  40e5b3:	movzx  eax,al
  40e5b6:	movsxd rax,DWORD PTR [rdx+rax*4]
  40e5ba:	add    rdx,rax
  40e5bd:	jmp    rdx
  40e5bf:	nop
  40e5c0:	lea    rcx,[r9+0x1]
  40e5c4:	call   0x424900
  40e5c9:	lea    rdx,[rip+0x2ea16]        # 0x43cfe6
  40e5d0:	mov    rcx,rax
  40e5d3:	mov    r15,rax
  40e5d6:	call   0x42a410
  40e5db:	movsxd rdi,eax
  40e5de:	mov    rdx,r15
  40e5e1:	mov    BYTE PTR [r15+rdi*1],0x0
  40e5e6:	mov    rcx,QWORD PTR [rbp+0x110]
  40e5ed:	call   0x40eb20
  40e5f2:	test   rax,rax
  40e5f5:	je     0x40e608
  40e5f7:	mov    r8d,0x101
  40e5fd:	mov    rdx,rax
  40e600:	mov    rcx,rbx
  40e603:	call   0x424a90
  40e608:	mov    rcx,r15
  40e60b:	add    rdi,0x1
  40e60f:	call   0x42a4e8
  40e614:	add    QWORD PTR [rsp+0x38],rdi
  40e619:	nop    DWORD PTR [rax+0x0]
  40e620:	lea    rcx,[rip+0x4bb19]        # 0x45a140
  40e627:	mov    r8d,0x101
  40e62d:	mov    rdx,rbx
  40e630:	call   0x4249e0
  40e635:	xor    r8d,r8d
  40e638:	mov    rax,QWORD PTR [rsp+0x38]
  40e63d:	lea    r9,[rax+0x1]
  40e641:	mov    QWORD PTR [rsp+0x38],r9
  40e646:	cmp    BYTE PTR [rax+0x1],0x0
  40e64a:	jne    0x40e533
  40e650:	lea    rax,[rip+0x4bae9]        # 0x45a140
  40e657:	add    rsp,0x158
  40e65e:	pop    rbx
  40e65f:	pop    rsi
  40e660:	pop    rdi
  40e661:	pop    rbp
  40e662:	pop    r12
  40e664:	pop    r13
  40e666:	pop    r14
  40e668:	pop    r15
  40e66a:	ret    
  40e66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e670:	mov    rcx,QWORD PTR [r12]
  40e674:	test   rcx,rcx
  40e677:	je     0x40e620
  40e679:	call   0x427e50
  40e67e:	test   rax,rax
  40e681:	je     0x40e620
  40e683:	mov    rcx,QWORD PTR [r12]
  40e687:	call   0x427e50
  40e68c:	mov    r8d,0x101
  40e692:	mov    rdx,rax
  40e695:	mov    rcx,rbx
  40e698:	call   0x424a90
  40e69d:	jmp    0x40e620
  40e69f:	nop
  40e6a0:	lea    rdx,[rsp+0x38]
  40e6a5:	mov    r8d,0x8
  40e6ab:	mov    rcx,r9
  40e6ae:	call   0x42a3d0
  40e6b3:	sub    QWORD PTR [rsp+0x38],0x1
  40e6b9:	mov    BYTE PTR [rsp+0x40],al
  40e6bd:	jmp    0x40e620
  40e6c2:	mov    rax,QWORD PTR [rip+0x46217]        # 0x4548e0
  40e6c9:	mov    rcx,QWORD PTR [rax]
  40e6cc:	test   rcx,rcx
  40e6cf:	je     0x40e620
  40e6d5:	call   0x427f30
  40e6da:	mov    r8d,0x101
  40e6e0:	mov    rdx,rax
  40e6e3:	mov    rcx,rbx
  40e6e6:	call   0x424a90
  40e6eb:	jmp    0x40e620
  40e6f0:	call   0x407890
  40e6f5:	cmp    al,0x1
  40e6f7:	sbb    eax,eax
  40e6f9:	and    eax,0x1b
  40e6fc:	add    eax,0x23
  40e6ff:	mov    BYTE PTR [rsp+0x40],al
  40e703:	jmp    0x40e620
  40e708:	nop    DWORD PTR [rax+rax*1+0x0]
  40e710:	mov    rcx,QWORD PTR [r14]
  40e713:	test   rcx,rcx
  40e716:	je     0x40ea70
  40e71c:	call   0x427df0
  40e721:	cmp    eax,0x2
  40e724:	ja     0x40e9ea
  40e72a:	cmp    eax,0x1
  40e72d:	sbb    eax,eax
  40e72f:	not    eax
  40e731:	and    eax,0x2a
  40e734:	mov    BYTE PTR [rsp+0x40],al
  40e738:	jmp    0x40e620
  40e73d:	nop    DWORD PTR [rax]
  40e740:	cmp    QWORD PTR [r13+0x0],0x0
  40e745:	je     0x40e620
  40e74b:	call   0x407930
  40e750:	mov    r8d,0x101
  40e756:	mov    rdx,rax
  40e759:	mov    rcx,rbx
  40e75c:	call   0x424a90
  40e761:	jmp    0x40e620
  40e766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e770:	lea    rcx,[r9+0x1]
  40e774:	call   0x424900
  40e779:	lea    rdx,[rip+0x2e862]        # 0x43cfe2
  40e780:	mov    rcx,rax
  40e783:	mov    r15,rax
  40e786:	call   0x42a410
  40e78b:	lea    rdx,[rip+0x2e852]        # 0x43cfe4
  40e792:	movsxd rdi,eax
  40e795:	mov    rcx,r15
  40e798:	mov    BYTE PTR [r15+rdi*1],0x0
  40e79d:	call   0x424fe0
  40e7a2:	test   rax,rax
  40e7a5:	je     0x40e7d3
  40e7a7:	mov    r8,rax
  40e7aa:	mov    edx,0x101
  40e7af:	mov    rcx,rbx
  40e7b2:	mov    QWORD PTR [rsp+0x28],rax
  40e7b7:	call   0x42a518
  40e7bc:	test   rax,rax
  40e7bf:	mov    r9,QWORD PTR [rsp+0x28]
  40e7c4:	je     0x40ea84
  40e7ca:	mov    rcx,r9
  40e7cd:	call   QWORD PTR [rip+0x4e451]        # 0x45cc24
  40e7d3:	cmp    BYTE PTR [rsp+0x40],0x0
  40e7d8:	je     0x40e608
  40e7de:	mov    rdx,rbx
  40e7e1:	mov    ecx,DWORD PTR [rdx]
  40e7e3:	add    rdx,0x4
  40e7e7:	lea    eax,[rcx-0x1010101]
  40e7ed:	not    ecx
  40e7ef:	and    eax,ecx
  40e7f1:	and    eax,0x80808080
  40e7f6:	je     0x40e7e1
  40e7f8:	mov    ecx,eax
  40e7fa:	shr    ecx,0x10
  40e7fd:	test   eax,0x8080
  40e802:	cmove  eax,ecx
  40e805:	lea    rcx,[rdx+0x2]
  40e809:	cmove  rdx,rcx
  40e80d:	add    al,al
  40e80f:	sbb    rdx,0x3
  40e813:	sub    rdx,rbx
  40e816:	sub    rdx,0x1
  40e81a:	cmp    BYTE PTR [rsp+rdx*1+0x40],0xa
  40e81f:	jne    0x40e608
  40e825:	mov    BYTE PTR [rsp+rdx*1+0x40],0x0
  40e82a:	jmp    0x40e608
  40e82f:	nop
  40e830:	mov    rdi,QWORD PTR [rip+0x460a9]        # 0x4548e0
  40e837:	mov    rcx,QWORD PTR [rdi]
  40e83a:	test   rcx,rcx
  40e83d:	je     0x40e620
  40e843:	call   0x427de8
  40e848:	mov    rcx,QWORD PTR [rdi]
  40e84b:	mov    r15,rax
  40e84e:	call   0x427f30
  40e853:	mov    rdx,r15
  40e856:	mov    rcx,rax
  40e859:	call   0x42a420
  40e85e:	test   eax,eax
  40e860:	je     0x40e9d0
  40e866:	lea    rcx,[rip+0x2e768]        # 0x43cfd5
  40e86d:	call   0x42a4d0
  40e872:	test   rax,rax
  40e875:	mov    r15,rax
  40e878:	je     0x40e895
  40e87a:	mov    rcx,QWORD PTR [rdi]
  40e87d:	call   0x427f30
  40e882:	mov    rcx,r15
  40e885:	mov    rdx,rax
  40e888:	call   0x42a420
  40e88d:	test   eax,eax
  40e88f:	je     0x40e9d0
  40e895:	mov    rcx,QWORD PTR [rdi]
  40e898:	jmp    0x40e6d5
  40e89d:	nop    DWORD PTR [rax]
  40e8a0:	cmp    esi,0x6
  40e8a3:	ja     0x40e620
  40e8a9:	lea    rax,[rip+0x2e8a8]        # 0x43d158
  40e8b0:	mov    edx,esi
  40e8b2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40e8b6:	add    rax,rdx
  40e8b9:	jmp    rax
  40e8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8c0:	mov    rax,QWORD PTR [rip+0x46019]        # 0x4548e0
  40e8c7:	mov    rcx,QWORD PTR [rax]
  40e8ca:	test   rcx,rcx
  40e8cd:	je     0x40e620
  40e8d3:	call   0x427e90
  40e8d8:	test   rax,rax
  40e8db:	mov    rdi,rax
  40e8de:	je     0x40e620
  40e8e4:	movzx  eax,BYTE PTR [rax]
  40e8e7:	test   al,al
  40e8e9:	je     0x40e620
  40e8ef:	cmp    al,0x2f
  40e8f1:	je     0x40e620
  40e8f7:	cmp    al,0x5c
  40e8f9:	je     0x40e620
  40e8ff:	movzx  ecx,al
  40e902:	call   QWORD PTR [rip+0x4e3f4]        # 0x45ccfc
  40e908:	test   eax,eax
  40e90a:	je     0x40e926
  40e90c:	cmp    BYTE PTR [rdi+0x1],0x3a
  40e910:	jne    0x40e926
  40e912:	movzx  eax,BYTE PTR [rdi+0x2]
  40e916:	cmp    al,0x5c
  40e918:	je     0x40e620
  40e91e:	cmp    al,0x2f
  40e920:	je     0x40e620
  40e926:	mov    r8d,0x101
  40e92c:	mov    rdx,rdi
  40e92f:	mov    rcx,rbx
  40e932:	call   0x424a90
  40e937:	mov    rax,QWORD PTR [rsp+0x38]
  40e93c:	cmp    BYTE PTR [rax],0x6d
  40e93f:	jne    0x40e620
  40e945:	lea    rdx,[rip+0x2e694]        # 0x43cfe0
  40e94c:	mov    rcx,rbx
  40e94f:	call   0x42a410
  40e954:	mov    BYTE PTR [rsp+rax*1+0x40],0x0
  40e959:	jmp    0x40e620
  40e95e:	xchg   ax,ax
  40e960:	mov    BYTE PTR [rsp+0x40],cl
  40e964:	jmp    0x40e620
  40e969:	nop    DWORD PTR [rax+0x0]
  40e970:	mov    rax,QWORD PTR [rip+0x45f69]        # 0x4548e0
  40e977:	mov    r9,QWORD PTR [rax+0x140]
  40e97e:	jmp    0x40e503
  40e983:	movzx  eax,BYTE PTR [r9]
  40e987:	mov    r8d,0x1
  40e98d:	cmp    al,0x25
  40e98f:	je     0x40e638
  40e995:	mov    BYTE PTR [rsp+0x40],al
  40e999:	jmp    0x40e620
  40e99e:	xchg   ax,ax
  40e9a0:	cmp    ecx,0x7
  40e9a3:	jne    0x40e9c0
  40e9a5:	mov    rax,QWORD PTR [rip+0x45f34]        # 0x4548e0
  40e9ac:	mov    r9,QWORD PTR [rax+0x148]
  40e9b3:	jmp    0x40e503
  40e9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9c0:	lea    r9,[rip+0x2e609]        # 0x43cfd0
  40e9c7:	jmp    0x40e503
  40e9cc:	nop    DWORD PTR [rax+0x0]
  40e9d0:	lea    rdx,[rip+0x2e5fc]        # 0x43cfd3
  40e9d7:	mov    r8d,0x101
  40e9dd:	mov    rcx,rbx
  40e9e0:	call   0x424a90
  40e9e5:	jmp    0x40e620
  40e9ea:	cmp    eax,0x3
  40e9ed:	mov    edx,0x3f
  40e9f2:	mov    eax,0x21
  40e9f7:	cmovne eax,edx
  40e9fa:	mov    BYTE PTR [rsp+0x40],al
  40e9fe:	jmp    0x40e620
  40ea03:	mov    BYTE PTR [rsp+0x40],0x24
  40ea08:	jmp    0x40e620
  40ea0d:	mov    BYTE PTR [rsp+0x40],0x22
  40ea12:	jmp    0x40e620
  40ea17:	mov    BYTE PTR [rsp+0x40],0x27
  40ea1c:	jmp    0x40e620
  40ea21:	mov    BYTE PTR [rsp+0x40],0x2a
  40ea26:	jmp    0x40e620
  40ea2b:	mov    BYTE PTR [rsp+0x40],0x2d
  40ea30:	jmp    0x40e620
  40ea35:	mov    rax,QWORD PTR [rsp+0x20]
  40ea3a:	cmp    QWORD PTR [rax],0x0
  40ea3e:	je     0x40ea7a
  40ea40:	mov    rax,QWORD PTR [rsp+0x20]
  40ea45:	cmp    BYTE PTR [rax+0x11b],0x1
  40ea4c:	sbb    eax,eax
  40ea4e:	and    eax,0xffffffdf
  40ea51:	add    eax,0x5e
  40ea54:	mov    BYTE PTR [rsp+0x40],al
  40ea58:	jmp    0x40e620
  40ea5d:	mov    BYTE PTR [rsp+0x40],0x28
  40ea62:	jmp    0x40e620
  40ea67:	nop    WORD PTR [rax+rax*1+0x0]
  40ea70:	mov    BYTE PTR [rsp+0x40],0x3f
  40ea75:	jmp    0x40e620
  40ea7a:	mov    BYTE PTR [rsp+0x40],0x21
  40ea7f:	jmp    0x40e620
  40ea84:	mov    BYTE PTR [rsp+0x40],0x0
  40ea89:	jmp    0x40e7ca
  40ea8e:	nop
  40ea8f:	nop
  40ea90:	push   rbx
  40ea91:	sub    rsp,0x20
  40ea95:	movzx  edx,BYTE PTR [rcx]
  40ea98:	mov    rbx,rcx
  40ea9b:	test   dl,dl
  40ea9d:	je     0x40eac0
  40ea9f:	nop
  40eaa0:	test   dl,dl
  40eaa2:	js     0x40eab5
  40eaa4:	lea    rcx,[rip+0x2e6d5]        # 0x43d180
  40eaab:	call   0x42a428
  40eab0:	test   rax,rax
  40eab3:	je     0x40ead0
  40eab5:	add    rbx,0x1
  40eab9:	movzx  edx,BYTE PTR [rbx]
  40eabc:	test   dl,dl
  40eabe:	jne    0x40eaa0
  40eac0:	mov    eax,0x1
  40eac5:	add    rsp,0x20
  40eac9:	pop    rbx
  40eaca:	ret    
  40eacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ead0:	xor    eax,eax
  40ead2:	add    rsp,0x20
  40ead6:	pop    rbx
  40ead7:	ret    
  40ead8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eae0:	sub    rsp,0x28
  40eae4:	mov    ecx,0x20
  40eae9:	call   0x424800
  40eaee:	mov    QWORD PTR [rax],0x0
  40eaf5:	mov    QWORD PTR [rax+0x8],0x0
  40eafd:	mov    QWORD PTR [rax+0x10],0x0
  40eb05:	mov    QWORD PTR [rax+0x18],0x0
  40eb0d:	add    rsp,0x28
  40eb11:	ret    
  40eb12:	nop    DWORD PTR [rax+0x0]
  40eb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb20:	push   rsi
  40eb21:	push   rbx
  40eb22:	sub    rsp,0x28
  40eb26:	test   rcx,rcx
  40eb29:	je     0x40eb63
  40eb2b:	mov    rbx,QWORD PTR [rcx+0x18]
  40eb2f:	mov    rsi,rdx
  40eb32:	test   rbx,rbx
  40eb35:	jne    0x40eb49
  40eb37:	jmp    0x40eb63
  40eb39:	nop    DWORD PTR [rax+0x0]
  40eb40:	mov    rbx,QWORD PTR [rbx+0x18]
  40eb44:	test   rbx,rbx
  40eb47:	je     0x40eb63
  40eb49:	mov    rcx,QWORD PTR [rbx]
  40eb4c:	mov    rdx,rsi
  40eb4f:	call   0x42a420
  40eb54:	test   eax,eax
  40eb56:	jne    0x40eb40
  40eb58:	mov    rax,QWORD PTR [rbx+0x8]
  40eb5c:	add    rsp,0x28
  40eb60:	pop    rbx
  40eb61:	pop    rsi
  40eb62:	ret    
  40eb63:	xor    eax,eax
  40eb65:	add    rsp,0x28
  40eb69:	pop    rbx
  40eb6a:	pop    rsi
  40eb6b:	ret    
  40eb6c:	nop    DWORD PTR [rax+0x0]
  40eb70:	push   rdi
  40eb71:	push   rsi
  40eb72:	push   rbx
  40eb73:	sub    rsp,0x20
  40eb77:	test   rcx,rcx
  40eb7a:	je     0x40ebc6
  40eb7c:	mov    rdi,rdx
  40eb7f:	mov    rbx,rcx
  40eb82:	call   0x42a400
  40eb87:	lea    rdx,[rip+0x2e632]        # 0x43d1c0
  40eb8e:	mov    r8,rax
  40eb91:	mov    rcx,rbx
  40eb94:	mov    rsi,rax
  40eb97:	call   0x427870
  40eb9c:	test   eax,eax
  40eb9e:	jne    0x40ebb0
  40eba0:	mov    eax,0x1
  40eba5:	add    rsp,0x20
  40eba9:	pop    rbx
  40ebaa:	pop    rsi
  40ebab:	pop    rdi
  40ebac:	ret    
  40ebad:	nop    DWORD PTR [rax]
  40ebb0:	lea    rdx,[rip+0x2e60e]        # 0x43d1c5
  40ebb7:	mov    r8,rsi
  40ebba:	mov    rcx,rbx
  40ebbd:	call   0x427870
  40ebc2:	test   eax,eax
  40ebc4:	jne    0x40ebd0
  40ebc6:	xor    eax,eax
  40ebc8:	add    rsp,0x20
  40ebcc:	pop    rbx
  40ebcd:	pop    rsi
  40ebce:	pop    rdi
  40ebcf:	ret    
  40ebd0:	lea    rdx,[rip+0x2e5f4]        # 0x43d1cb
  40ebd7:	mov    r8,rsi
  40ebda:	mov    rcx,rbx
  40ebdd:	call   0x427870
  40ebe2:	test   eax,eax
  40ebe4:	je     0x40eba0
  40ebe6:	lea    rdx,[rip+0x2e5e2]        # 0x43d1cf
  40ebed:	mov    r8,rsi
  40ebf0:	mov    rcx,rbx
  40ebf3:	call   0x427870
  40ebf8:	test   eax,eax
  40ebfa:	je     0x40ebc6
  40ebfc:	cmp    rsi,0x2
  40ec00:	mov    eax,0x2
  40ec05:	lea    rdx,[rip+0x2e5c6]        # 0x43d1d2
  40ec0c:	cmovb  rsi,rax
  40ec10:	mov    rcx,rbx
  40ec13:	mov    r8,rsi
  40ec16:	call   0x427870
  40ec1b:	test   eax,eax
  40ec1d:	je     0x40eba0
  40ec1f:	lea    rdx,[rip+0x2e5af]        # 0x43d1d5
  40ec26:	mov    r8,rsi
  40ec29:	mov    rcx,rbx
  40ec2c:	call   0x427870
  40ec31:	test   eax,eax
  40ec33:	je     0x40ebc6
  40ec35:	lea    rdx,[rip+0x2e59d]        # 0x43d1d9
  40ec3c:	mov    rcx,rbx
  40ec3f:	call   0x427790
  40ec44:	test   eax,eax
  40ec46:	je     0x40eba0
  40ec4c:	lea    rdx,[rip+0x2e588]        # 0x43d1db
  40ec53:	mov    rcx,rbx
  40ec56:	call   0x427790
  40ec5b:	test   eax,eax
  40ec5d:	je     0x40ebc6
  40ec63:	test   rdi,rdi
  40ec66:	je     0x40eba0
  40ec6c:	lea    r9,[rip+0x2e55f]        # 0x43d1d2
  40ec73:	lea    rcx,[rip+0x2e566]        # 0x43d1e0
  40ec7a:	mov    r8,rdi
  40ec7d:	mov    rdx,rbx
  40ec80:	call   0x405d90
  40ec85:	jmp    0x40eba0
  40ec8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ec90:	push   rbx
  40ec91:	sub    rsp,0x40
  40ec95:	test   rcx,rcx
  40ec98:	mov    eax,edx
  40ec9a:	mov    ebx,r8d
  40ec9d:	je     0x40eca7
  40ec9f:	cmp    BYTE PTR [rcx],0x0
  40eca2:	mov    eax,r8d
  40eca5:	jne    0x40ecb0
  40eca7:	add    rsp,0x40
  40ecab:	pop    rbx
  40ecac:	ret    
  40ecad:	nop    DWORD PTR [rax]
  40ecb0:	lea    rdx,[rsp+0x38]
  40ecb5:	xor    r8d,r8d
  40ecb8:	mov    DWORD PTR [rsp+0x2c],r9d
  40ecbd:	call   0x42a3d0
  40ecc2:	mov    r9d,DWORD PTR [rsp+0x2c]
  40ecc7:	test   r9b,r9b
  40ecca:	jne    0x40eca7
  40eccc:	mov    rdx,QWORD PTR [rsp+0x38]
  40ecd1:	cmp    BYTE PTR [rdx],0x0
  40ecd4:	cmovne eax,ebx
  40ecd7:	add    rsp,0x40
  40ecdb:	pop    rbx
  40ecdc:	ret    
  40ecdd:	nop    DWORD PTR [rax]
  40ece0:	push   rdi
  40ece1:	push   rsi
  40ece2:	push   rbx
  40ece3:	sub    rsp,0x30
  40ece7:	mov    edi,DWORD PTR [rsp+0x70]
  40eceb:	mov    ebx,r8d
  40ecee:	mov    esi,r9d
  40ecf1:	call   0x40eb20
  40ecf6:	test   rax,rax
  40ecf9:	je     0x40ed02
  40ecfb:	cmp    BYTE PTR [rax],0x0
  40ecfe:	mov    ebx,esi
  40ed00:	jne    0x40ed10
  40ed02:	mov    eax,ebx
  40ed04:	add    rsp,0x30
  40ed08:	pop    rbx
  40ed09:	pop    rsi
  40ed0a:	pop    rdi
  40ed0b:	ret    
  40ed0c:	nop    DWORD PTR [rax+0x0]
  40ed10:	lea    rdx,[rsp+0x28]
  40ed15:	xor    r8d,r8d
  40ed18:	mov    rcx,rax
  40ed1b:	call   0x42a3d0
  40ed20:	test   dil,dil
  40ed23:	mov    ebx,eax
  40ed25:	jne    0x40ed02
  40ed27:	mov    rax,QWORD PTR [rsp+0x28]
  40ed2c:	cmp    BYTE PTR [rax],0x0
  40ed2f:	cmovne ebx,esi
  40ed32:	mov    eax,ebx
  40ed34:	add    rsp,0x30
  40ed38:	pop    rbx
  40ed39:	pop    rsi
  40ed3a:	pop    rdi
  40ed3b:	ret    
  40ed3c:	nop    DWORD PTR [rax+0x0]
  40ed40:	push   rsi
  40ed41:	push   rbx
  40ed42:	sub    rsp,0x28
  40ed46:	test   rcx,rcx
  40ed49:	je     0x40ed88
  40ed4b:	mov    rbx,QWORD PTR [rcx+0x18]
  40ed4f:	test   rbx,rbx
  40ed52:	je     0x40ed88
  40ed54:	mov    rsi,QWORD PTR [rip+0x45ab5]        # 0x454810
  40ed5b:	jmp    0x40ed69
  40ed5d:	nop    DWORD PTR [rax]
  40ed60:	mov    rbx,QWORD PTR [rbx+0x18]
  40ed64:	test   rbx,rbx
  40ed67:	je     0x40ed88
  40ed69:	mov    r8,QWORD PTR [rbx+0x8]
  40ed6d:	test   r8,r8
  40ed70:	je     0x40ed81
  40ed72:	mov    rdx,QWORD PTR [rbx]
  40ed75:	lea    rcx,[rip+0x2e495]        # 0x43d211
  40ed7c:	call   0x4263a0
  40ed81:	movzx  eax,BYTE PTR [rsi]
  40ed84:	test   al,al
  40ed86:	je     0x40ed60
  40ed88:	add    rsp,0x28
  40ed8c:	pop    rbx
  40ed8d:	pop    rsi
  40ed8e:	ret    
  40ed8f:	nop
  40ed90:	push   rbp
  40ed91:	push   rdi
  40ed92:	push   rsi
  40ed93:	push   rbx
  40ed94:	sub    rsp,0x28
  40ed98:	xor    eax,eax
  40ed9a:	test   rcx,rcx
  40ed9d:	je     0x40eda4
  40ed9f:	cmp    BYTE PTR [rdx],0x0
  40eda2:	jne    0x40edb0
  40eda4:	add    rsp,0x28
  40eda8:	pop    rbx
  40eda9:	pop    rsi
  40edaa:	pop    rdi
  40edab:	pop    rbp
  40edac:	ret    
  40edad:	nop    DWORD PTR [rax]
  40edb0:	mov    rdi,rcx
  40edb3:	mov    rcx,rdx
  40edb6:	mov    rbp,r8
  40edb9:	mov    rsi,rdx
  40edbc:	call   0x40ea90
  40edc1:	test   al,al
  40edc3:	je     0x40eda4
  40edc5:	mov    rbx,QWORD PTR [rdi+0x18]
  40edc9:	test   rbx,rbx
  40edcc:	jne    0x40eddc
  40edce:	jmp    0x40ee03
  40edd0:	mov    rax,QWORD PTR [rbx+0x18]
  40edd4:	test   rax,rax
  40edd7:	je     0x40ee10
  40edd9:	mov    rbx,rax
  40eddc:	mov    rcx,QWORD PTR [rbx]
  40eddf:	mov    rdx,rsi
  40ede2:	call   0x42a420
  40ede7:	test   eax,eax
  40ede9:	jne    0x40edd0
  40edeb:	mov    rcx,QWORD PTR [rbx+0x8]
  40edef:	mov    QWORD PTR [rbx+0x10],rbp
  40edf3:	call   rbp
  40edf5:	mov    eax,0x1
  40edfa:	add    rsp,0x28
  40edfe:	pop    rbx
  40edff:	pop    rsi
  40ee00:	pop    rdi
  40ee01:	pop    rbp
  40ee02:	ret    
  40ee03:	mov    rbx,rdi
  40ee06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee10:	mov    ecx,0x20
  40ee15:	call   0x424800
  40ee1a:	mov    rcx,rsi
  40ee1d:	mov    rdi,rax
  40ee20:	call   0x424900
  40ee25:	mov    QWORD PTR [rdi+0x8],0x0
  40ee2d:	mov    QWORD PTR [rdi],rax
  40ee30:	xor    ecx,ecx
  40ee32:	mov    QWORD PTR [rdi+0x10],rbp
  40ee36:	mov    QWORD PTR [rdi+0x18],0x0
  40ee3e:	mov    QWORD PTR [rbx+0x18],rdi
  40ee42:	call   rbp
  40ee44:	mov    eax,0x1
  40ee49:	add    rsp,0x28
  40ee4d:	pop    rbx
  40ee4e:	pop    rsi
  40ee4f:	pop    rdi
  40ee50:	pop    rbp
  40ee51:	ret    
  40ee52:	nop    DWORD PTR [rax+0x0]
  40ee56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee60:	push   rdi
  40ee61:	push   rsi
  40ee62:	push   rbx
  40ee63:	sub    rsp,0x20
  40ee67:	test   rcx,rcx
  40ee6a:	mov    rsi,rcx
  40ee6d:	mov    rdi,rdx
  40ee70:	je     0x40eee0
  40ee72:	mov    rbx,QWORD PTR [rcx+0x18]
  40ee76:	test   rbx,rbx
  40ee79:	jne    0x40ee8f
  40ee7b:	jmp    0x40eed0
  40ee7d:	nop    DWORD PTR [rax]
  40ee80:	mov    rax,QWORD PTR [rbx+0x18]
  40ee84:	mov    rsi,rbx
  40ee87:	test   rax,rax
  40ee8a:	je     0x40eed0
  40ee8c:	mov    rbx,rax
  40ee8f:	mov    rcx,QWORD PTR [rbx]
  40ee92:	mov    rdx,rdi
  40ee95:	call   0x42a420
  40ee9a:	test   eax,eax
  40ee9c:	jne    0x40ee80
  40ee9e:	mov    rcx,QWORD PTR [rbx+0x8]
  40eea2:	test   rcx,rcx
  40eea5:	je     0x40eeac
  40eea7:	call   0x42a4e8
  40eeac:	mov    rax,QWORD PTR [rbx+0x10]
  40eeb0:	mov    QWORD PTR [rbx+0x8],0x0
  40eeb8:	test   rax,rax
  40eebb:	je     0x40eeea
  40eebd:	xor    ecx,ecx
  40eebf:	call   rax
  40eec1:	mov    eax,0x1
  40eec6:	add    rsp,0x20
  40eeca:	pop    rbx
  40eecb:	pop    rsi
  40eecc:	pop    rdi
  40eecd:	ret    
  40eece:	xchg   ax,ax
  40eed0:	mov    eax,0x1
  40eed5:	add    rsp,0x20
  40eed9:	pop    rbx
  40eeda:	pop    rsi
  40eedb:	pop    rdi
  40eedc:	ret    
  40eedd:	nop    DWORD PTR [rax]
  40eee0:	xor    eax,eax
  40eee2:	add    rsp,0x20
  40eee6:	pop    rbx
  40eee7:	pop    rsi
  40eee8:	pop    rdi
  40eee9:	ret    
  40eeea:	mov    rax,QWORD PTR [rbx+0x18]
  40eeee:	mov    QWORD PTR [rsi+0x18],rax
  40eef2:	mov    rcx,QWORD PTR [rbx]
  40eef5:	call   0x42a4e8
  40eefa:	mov    rcx,rbx
  40eefd:	call   0x42a4e8
  40ef02:	mov    eax,0x1
  40ef07:	jmp    0x40eec6
  40ef09:	nop    DWORD PTR [rax+0x0]
  40ef10:	push   rbp
  40ef11:	push   rdi
  40ef12:	push   rsi
  40ef13:	push   rbx
  40ef14:	sub    rsp,0x38
  40ef18:	xor    eax,eax
  40ef1a:	test   rcx,rcx
  40ef1d:	je     0x40ef24
  40ef1f:	cmp    BYTE PTR [rdx],0x0
  40ef22:	jne    0x40ef30
  40ef24:	add    rsp,0x38
  40ef28:	pop    rbx
  40ef29:	pop    rsi
  40ef2a:	pop    rdi
  40ef2b:	pop    rbp
  40ef2c:	ret    
  40ef2d:	nop    DWORD PTR [rax]
  40ef30:	mov    rdi,rcx
  40ef33:	mov    rcx,rdx
  40ef36:	mov    rbp,r8
  40ef39:	mov    rsi,rdx
  40ef3c:	call   0x40ea90
  40ef41:	test   al,al
  40ef43:	je     0x40ef24
  40ef45:	test   rbp,rbp
  40ef48:	je     0x40f007
  40ef4e:	mov    rbx,QWORD PTR [rdi+0x18]
  40ef52:	test   rbx,rbx
  40ef55:	jne    0x40ef6c
  40ef57:	jmp    0x40efbe
  40ef59:	nop    DWORD PTR [rax+0x0]
  40ef60:	mov    rax,QWORD PTR [rbx+0x18]
  40ef64:	test   rax,rax
  40ef67:	je     0x40efc1
  40ef69:	mov    rbx,rax
  40ef6c:	mov    rcx,QWORD PTR [rbx]
  40ef6f:	mov    rdx,rsi
  40ef72:	call   0x42a420
  40ef77:	test   eax,eax
  40ef79:	jne    0x40ef60
  40ef7b:	mov    rcx,QWORD PTR [rbx+0x8]
  40ef7f:	test   rcx,rcx
  40ef82:	je     0x40ef89
  40ef84:	call   0x42a4e8
  40ef89:	mov    rcx,rbp
  40ef8c:	call   0x424900
  40ef91:	mov    rdx,QWORD PTR [rbx+0x10]
  40ef95:	mov    rcx,rax
  40ef98:	mov    QWORD PTR [rbx+0x8],rax
  40ef9c:	mov    eax,0x1
  40efa1:	test   rdx,rdx
  40efa4:	je     0x40ef24
  40efaa:	mov    BYTE PTR [rsp+0x2f],al
  40efae:	call   rdx
  40efb0:	movzx  eax,BYTE PTR [rsp+0x2f]
  40efb5:	add    rsp,0x38
  40efb9:	pop    rbx
  40efba:	pop    rsi
  40efbb:	pop    rdi
  40efbc:	pop    rbp
  40efbd:	ret    
  40efbe:	mov    rbx,rdi
  40efc1:	mov    ecx,0x20
  40efc6:	call   0x424800
  40efcb:	mov    rcx,rsi
  40efce:	mov    rdi,rax
  40efd1:	call   0x424900
  40efd6:	mov    rcx,rbp
  40efd9:	mov    QWORD PTR [rdi],rax
  40efdc:	call   0x424900
  40efe1:	mov    QWORD PTR [rdi+0x8],rax
  40efe5:	mov    eax,0x1
  40efea:	mov    QWORD PTR [rdi+0x10],0x0
  40eff2:	mov    QWORD PTR [rdi+0x18],0x0
  40effa:	mov    QWORD PTR [rbx+0x18],rdi
  40effe:	add    rsp,0x38
  40f002:	pop    rbx
  40f003:	pop    rsi
  40f004:	pop    rdi
  40f005:	pop    rbp
  40f006:	ret    
  40f007:	mov    rdx,rsi
  40f00a:	mov    rcx,rdi
  40f00d:	add    rsp,0x38
  40f011:	pop    rbx
  40f012:	pop    rsi
  40f013:	pop    rdi
  40f014:	pop    rbp
  40f015:	jmp    0x40ee60
  40f01a:	nop    WORD PTR [rax+rax*1+0x0]
  40f020:	lea    r8,[rip+0x2e1ab]        # 0x43d1d2
  40f027:	jmp    0x40ef10
  40f02c:	nop
  40f02d:	nop
  40f02e:	nop
  40f02f:	nop
  40f030:	push   rsi
  40f031:	push   rbx
  40f032:	sub    rsp,0x38
  40f036:	mov    rbx,QWORD PTR [rip+0x458a3]        # 0x4548e0
  40f03d:	mov    QWORD PTR [rsp+0x58],rdx
  40f042:	mov    QWORD PTR [rsp+0x60],r8
  40f047:	mov    rsi,rcx
  40f04a:	mov    QWORD PTR [rsp+0x68],r9
  40f04f:	cmp    BYTE PTR [rbx+0x11a],0x0
  40f056:	jne    0x40f08c
  40f058:	cmp    DWORD PTR [rbx+0x28],0x4
  40f05c:	je     0x40f0f0
  40f062:	mov    rcx,QWORD PTR [rbx+0x10]
  40f066:	lea    r8,[rsp+0x58]
  40f06b:	mov    rdx,rsi
  40f06e:	mov    QWORD PTR [rsp+0x28],r8
  40f073:	call   0x4262f0
  40f078:	cmp    DWORD PTR [rbx+0x28],0x4
  40f07c:	je     0x40f0d0
  40f07e:	mov    rdx,QWORD PTR [rbx+0x10]
  40f082:	mov    ecx,0xa
  40f087:	call   0x42a500
  40f08c:	cmp    QWORD PTR [rbx+0x108],0x0
  40f094:	je     0x40f0c1
  40f096:	mov    rcx,QWORD PTR [rbx+0x108]
  40f09d:	lea    r8,[rsp+0x58]
  40f0a2:	mov    rdx,rsi
  40f0a5:	mov    QWORD PTR [rsp+0x28],r8
  40f0aa:	call   0x4262f0
  40f0af:	mov    rdx,QWORD PTR [rbx+0x108]
  40f0b6:	mov    ecx,0xa
  40f0bb:	call   0x42a500
  40f0c0:	nop
  40f0c1:	add    rsp,0x38
  40f0c5:	pop    rbx
  40f0c6:	pop    rsi
  40f0c7:	ret    
  40f0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0d0:	mov    r9,QWORD PTR [rbx+0x10]
  40f0d4:	lea    rcx,[rip+0x2e149]        # 0x43d224
  40f0db:	mov    r8d,0x5
  40f0e1:	mov    edx,0x1
  40f0e6:	call   0x42a4e0
  40f0eb:	jmp    0x40f08c
  40f0ed:	nop    DWORD PTR [rax]
  40f0f0:	mov    r9,QWORD PTR [rbx+0x10]
  40f0f4:	lea    rcx,[rip+0x2e125]        # 0x43d220
  40f0fb:	mov    r8d,0x3
  40f101:	mov    edx,0x1
  40f106:	call   0x42a4e0
  40f10b:	jmp    0x40f062
  40f110:	push   rsi
  40f111:	push   rbx
  40f112:	sub    rsp,0x28
  40f116:	mov    rax,QWORD PTR [rip+0x457c3]        # 0x4548e0
  40f11d:	mov    rsi,rcx
  40f120:	mov    BYTE PTR [rdx],0x0
  40f123:	mov    rbx,rdx
  40f126:	mov    rcx,QWORD PTR [rax]
  40f129:	test   rcx,rcx
  40f12c:	je     0x40f1c0
  40f132:	call   0x427df0
  40f137:	mov    r8d,eax
  40f13a:	mov    eax,0x1
  40f13f:	cmp    r8d,0x2
  40f143:	je     0x40f161
  40f145:	cmp    r8d,0x3
  40f149:	je     0x40f170
  40f14b:	test   r8d,r8d
  40f14e:	je     0x40f190
  40f150:	lea    rcx,[rip+0x2e129]        # 0x43d280
  40f157:	mov    rdx,rsi
  40f15a:	call   0x405d90
  40f15f:	xor    eax,eax
  40f161:	add    rsp,0x28
  40f165:	pop    rbx
  40f166:	pop    rsi
  40f167:	ret    
  40f168:	nop    DWORD PTR [rax+rax*1+0x0]
  40f170:	lea    rcx,[rip+0x2e0e1]        # 0x43d258
  40f177:	mov    rdx,rsi
  40f17a:	call   0x405d90
  40f17f:	xor    eax,eax
  40f181:	add    rsp,0x28
  40f185:	pop    rbx
  40f186:	pop    rsi
  40f187:	ret    
  40f188:	nop    DWORD PTR [rax+rax*1+0x0]
  40f190:	lea    rcx,[rip+0x2e0ba]        # 0x43d251
  40f197:	xor    edx,edx
  40f199:	call   0x4062b0
  40f19e:	mov    rcx,rax
  40f1a1:	xor    eax,eax
  40f1a3:	test   rcx,rcx
  40f1a6:	je     0x40f161
  40f1a8:	call   0x427f68
  40f1ad:	mov    eax,0x1
  40f1b2:	mov    BYTE PTR [rbx],0x1
  40f1b5:	add    rsp,0x28
  40f1b9:	pop    rbx
  40f1ba:	pop    rsi
  40f1bb:	ret    
  40f1bc:	nop    DWORD PTR [rax+0x0]
  40f1c0:	lea    rcx,[rip+0x2e069]        # 0x43d230
  40f1c7:	mov    rdx,rsi
  40f1ca:	call   0x405d90
  40f1cf:	xor    eax,eax
  40f1d1:	add    rsp,0x28
  40f1d5:	pop    rbx
  40f1d6:	pop    rsi
  40f1d7:	ret    
  40f1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1e0:	sub    rsp,0x28
  40f1e4:	lea    rcx,[rip+0x2e0b5]        # 0x43d2a0
  40f1eb:	xor    edx,edx
  40f1ed:	call   0x4062b0
  40f1f2:	mov    rcx,rax
  40f1f5:	call   0x427f68
  40f1fa:	add    rsp,0x28
  40f1fe:	ret    
  40f1ff:	nop
  40f200:	push   rbx
  40f201:	sub    rsp,0x20
  40f205:	mov    ebx,0x1
  40f20a:	test   dl,dl
  40f20c:	je     0x40f21e
  40f20e:	mov    rax,QWORD PTR [rip+0x456cb]        # 0x4548e0
  40f215:	cmp    BYTE PTR [rax+0x118],0x0
  40f21c:	jne    0x40f230
  40f21e:	mov    eax,ebx
  40f220:	add    rsp,0x20
  40f224:	pop    rbx
  40f225:	ret    
  40f226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f230:	lea    rcx,[rip+0x2e072]        # 0x43d2a9
  40f237:	xor    edx,edx
  40f239:	call   0x4062b0
  40f23e:	test   rax,rax
  40f241:	je     0x40f253
  40f243:	mov    rcx,rax
  40f246:	call   0x427f68
  40f24b:	mov    eax,ebx
  40f24d:	add    rsp,0x20
  40f251:	pop    rbx
  40f252:	ret    
  40f253:	lea    rcx,[rip+0x2e046]        # 0x43d2a0
  40f25a:	xor    edx,edx
  40f25c:	xor    ebx,ebx
  40f25e:	call   0x4062b0
  40f263:	mov    rcx,rax
  40f266:	call   0x427f68
  40f26b:	jmp    0x40f21e
  40f26d:	nop    DWORD PTR [rax]
  40f270:	push   rsi
  40f271:	push   rbx
  40f272:	sub    rsp,0x38
  40f276:	mov    rsi,rcx
  40f279:	mov    rbx,rdx
  40f27c:	lea    rcx,[rip+0x2e02d]        # 0x43d2b0
  40f283:	lea    rdx,[rsp+0x2f]
  40f288:	call   0x40f110
  40f28d:	test   al,al
  40f28f:	jne    0x40f2a0
  40f291:	xor    eax,eax
  40f293:	add    rsp,0x38
  40f297:	pop    rbx
  40f298:	pop    rsi
  40f299:	ret    
  40f29a:	nop    WORD PTR [rax+rax*1+0x0]
  40f2a0:	call   0x4060c0
  40f2a5:	xor    edx,edx
  40f2a7:	mov    rcx,rsi
  40f2aa:	mov    r8d,0xa
  40f2b0:	call   0x42a3c8
  40f2b5:	mov    rsi,QWORD PTR [rip+0x45624]        # 0x4548e0
  40f2bc:	mov    r8,rbx
  40f2bf:	mov    edx,eax
  40f2c1:	mov    rcx,QWORD PTR [rsi]
  40f2c4:	call   0x427da0
  40f2c9:	mov    ebx,eax
  40f2cb:	call   0x406120
  40f2d0:	cmp    ebx,0x1
  40f2d3:	je     0x40f303
  40f2d5:	mov    rcx,QWORD PTR [rsi]
  40f2d8:	call   0x427f10
  40f2dd:	lea    rcx,[rip+0x2dfd7]        # 0x43d2bb
  40f2e4:	mov    rdx,rax
  40f2e7:	call   0x405d90
  40f2ec:	cmp    BYTE PTR [rsp+0x2f],0x0
  40f2f1:	je     0x40f291
  40f2f3:	cmp    BYTE PTR [rsi+0x118],0x0
  40f2fa:	je     0x40f291
  40f2fc:	call   0x40f1e0
  40f301:	jmp    0x40f291
  40f303:	movsx  edx,BYTE PTR [rsp+0x2f]
  40f308:	lea    rcx,[rip+0x2dfa1]        # 0x43d2b0
  40f30f:	call   0x40f200
  40f314:	test   al,al
  40f316:	je     0x40f291
  40f31c:	lea    rcx,[rip+0x2df9b]        # 0x43d2be
  40f323:	call   0x40f030
  40f328:	mov    eax,0x1
  40f32d:	jmp    0x40f293
  40f332:	nop    DWORD PTR [rax+0x0]
  40f336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f340:	push   r13
  40f342:	push   r12
  40f344:	push   rbp
  40f345:	push   rdi
  40f346:	push   rsi
  40f347:	push   rbx
  40f348:	sub    rsp,0x68
  40f34c:	mov    rsi,rcx
  40f34f:	mov    rbx,rdx
  40f352:	lea    rcx,[rip+0x2df6f]        # 0x43d2c8
  40f359:	lea    rdx,[rsp+0x3f]
  40f35e:	call   0x40f110
  40f363:	test   al,al
  40f365:	jne    0x40f380
  40f367:	xor    eax,eax
  40f369:	add    rsp,0x68
  40f36d:	pop    rbx
  40f36e:	pop    rsi
  40f36f:	pop    rdi
  40f370:	pop    rbp
  40f371:	pop    r12
  40f373:	pop    r13
  40f375:	ret    
  40f376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f380:	call   0x4060c0
  40f385:	mov    rdi,QWORD PTR [rip+0x45554]        # 0x4548e0
  40f38c:	mov    rdx,rsi
  40f38f:	mov    rcx,QWORD PTR [rdi]
  40f392:	call   0x427d98
  40f397:	mov    ebp,eax
  40f399:	call   0x406120
  40f39e:	test   ebp,ebp
  40f3a0:	je     0x40f4d0
  40f3a6:	test   rbx,rbx
  40f3a9:	je     0x40f46d
  40f3af:	mov    rcx,rbx
  40f3b2:	call   0x42a400
  40f3b7:	lea    rcx,[rax+rax*1+0x100]
  40f3bf:	mov    r13,rax
  40f3c2:	call   0x42a4a0
  40f3c7:	test   rax,rax
  40f3ca:	mov    r12,rax
  40f3cd:	je     0x40f4e7
  40f3d3:	lea    rdx,[rip+0x2defe]        # 0x43d2d8
  40f3da:	mov    r8d,ebp
  40f3dd:	mov    rcx,rax
  40f3e0:	call   0x426260
  40f3e5:	mov    r11,r12
  40f3e8:	mov    eax,DWORD PTR [r11]
  40f3eb:	add    r11,0x4
  40f3ef:	lea    r10d,[rax-0x1010101]
  40f3f6:	not    eax
  40f3f8:	and    r10d,eax
  40f3fb:	and    r10d,0x80808080
  40f402:	je     0x40f3e8
  40f404:	mov    eax,r10d
  40f407:	mov    QWORD PTR [rsp+0x20],0x0
  40f410:	mov    rcx,QWORD PTR [rdi]
  40f413:	shr    eax,0x10
  40f416:	test   r10d,0x8080
  40f41d:	mov    r9,r13
  40f420:	cmove  r10d,eax
  40f424:	lea    rax,[r11+0x2]
  40f428:	mov    r8,rbx
  40f42b:	cmove  r11,rax
  40f42f:	add    r10b,r10b
  40f432:	mov    rsi,r11
  40f435:	sbb    rsi,0x3
  40f439:	mov    rdx,rsi
  40f43c:	call   0x427ef8
  40f441:	mov    edx,0x27
  40f446:	mov    rcx,r12
  40f449:	mov    WORD PTR [rsi+rax*1],dx
  40f44d:	xor    edx,edx
  40f44f:	call   0x4062b0
  40f454:	test   rax,rax
  40f457:	mov    rcx,rax
  40f45a:	je     0x40f510
  40f460:	call   0x427f68
  40f465:	mov    rcx,r12
  40f468:	call   0x42a4e8
  40f46d:	movsx  edx,BYTE PTR [rsp+0x3f]
  40f472:	lea    rcx,[rip+0x2de4f]        # 0x43d2c8
  40f479:	call   0x40f200
  40f47e:	test   al,al
  40f480:	je     0x40f367
  40f486:	lea    rcx,[rip+0x2de6b]        # 0x43d2f8
  40f48d:	mov    edx,ebp
  40f48f:	lea    rbx,[rsp+0x40]
  40f494:	call   0x40f030
  40f499:	lea    rdx,[rip+0x2de65]        # 0x43d305
  40f4a0:	mov    r8d,ebp
  40f4a3:	mov    rcx,rbx
  40f4a6:	call   0x426260
  40f4ab:	mov    rcx,QWORD PTR [rdi+0x110]
  40f4b2:	lea    rdx,[rip+0x2de4f]        # 0x43d308
  40f4b9:	mov    r8,rbx
  40f4bc:	call   0x40ef10
  40f4c1:	mov    eax,0x1
  40f4c6:	jmp    0x40f369
  40f4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f4d0:	mov    rcx,QWORD PTR [rdi]
  40f4d3:	call   0x427f10
  40f4d8:	lea    rcx,[rip+0x2dddc]        # 0x43d2bb
  40f4df:	mov    rdx,rax
  40f4e2:	call   0x405d90
  40f4e7:	cmp    BYTE PTR [rsp+0x3f],0x0
  40f4ec:	je     0x40f367
  40f4f2:	cmp    BYTE PTR [rdi+0x118],0x0
  40f4f9:	je     0x40f367
  40f4ff:	call   0x40f1e0
  40f504:	jmp    0x40f367
  40f509:	nop    DWORD PTR [rax+0x0]
  40f510:	mov    rcx,r12
  40f513:	call   0x42a4e8
  40f518:	cmp    BYTE PTR [rsp+0x3f],0x0
  40f51d:	jne    0x40f4f2
  40f51f:	jmp    0x40f367
  40f524:	xchg   ax,ax
  40f526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f530:	push   rdi
  40f531:	push   rsi
  40f532:	push   rbx
  40f533:	sub    rsp,0x30
  40f537:	xor    edx,edx
  40f539:	mov    r8d,0xa
  40f53f:	call   0x42a3c8
  40f544:	lea    rdx,[rsp+0x2f]
  40f549:	lea    rcx,[rip+0x2ddc0]        # 0x43d310
  40f550:	mov    ebx,eax
  40f552:	call   0x40f110
  40f557:	test   al,al
  40f559:	jne    0x40f565
  40f55b:	xor    eax,eax
  40f55d:	add    rsp,0x30
  40f561:	pop    rbx
  40f562:	pop    rsi
  40f563:	pop    rdi
  40f564:	ret    
  40f565:	call   0x4060c0
  40f56a:	mov    rsi,QWORD PTR [rip+0x4536f]        # 0x4548e0
  40f571:	mov    edx,ebx
  40f573:	mov    rcx,QWORD PTR [rsi]
  40f576:	call   0x427d90
  40f57b:	mov    edi,eax
  40f57d:	call   0x406120
  40f582:	cmp    edi,0xffffffff
  40f585:	je     0x40f5c0
  40f587:	movsx  edx,BYTE PTR [rsp+0x2f]
  40f58c:	lea    rcx,[rip+0x2dd7d]        # 0x43d310
  40f593:	call   0x40f200
  40f598:	test   al,al
  40f59a:	je     0x40f55b
  40f59c:	lea    rcx,[rip+0x2dd78]        # 0x43d31b
  40f5a3:	mov    edx,ebx
  40f5a5:	call   0x40f030
  40f5aa:	mov    eax,0x1
  40f5af:	add    rsp,0x30
  40f5b3:	pop    rbx
  40f5b4:	pop    rsi
  40f5b5:	pop    rdi
  40f5b6:	ret    
  40f5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40f5c0:	mov    rcx,QWORD PTR [rsi]
  40f5c3:	call   0x427f10
  40f5c8:	lea    rcx,[rip+0x2dcec]        # 0x43d2bb
  40f5cf:	mov    rdx,rax
  40f5d2:	call   0x405d90
  40f5d7:	cmp    BYTE PTR [rsp+0x2f],0x0
  40f5dc:	je     0x40f55b
  40f5e2:	cmp    BYTE PTR [rsi+0x118],0x0
  40f5e9:	je     0x40f55b
  40f5ef:	call   0x40f1e0
  40f5f4:	jmp    0x40f55b
  40f5f9:	nop    DWORD PTR [rax+0x0]
  40f600:	push   rbp
  40f601:	push   rdi
  40f602:	push   rsi
  40f603:	push   rbx
  40f604:	sub    rsp,0x4d8
  40f60b:	mov    rbx,QWORD PTR [rip+0x452ce]        # 0x4548e0
  40f612:	mov    ecx,0x13
  40f617:	lea    rax,[rip+0x2ddcb]        # 0x43d3e9
  40f61e:	lea    rbp,[rsp+0x30]
  40f623:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  40f62d:	lea    rsi,[rbx+0x28]
  40f631:	mov    rdi,rbp
  40f634:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f637:	lea    rsi,[rsp+0xd0]
  40f63f:	jle    0x40f6e0
  40f645:	mov    QWORD PTR [rsp+0x28],rax
  40f64a:	lea    rax,[rip+0x2dda4]        # 0x43d3f5
  40f651:	lea    r9,[rip+0x2dcd0]        # 0x43d328
  40f658:	lea    r8,[rip+0x2dcd1]        # 0x43d330
  40f65f:	mov    edx,0x400
  40f664:	mov    rcx,rsi
  40f667:	mov    QWORD PTR [rsp+0x20],rax
  40f66c:	call   0x426220
  40f671:	xor    edx,edx
  40f673:	mov    rcx,rsi
  40f676:	call   0x4062b0
  40f67b:	mov    rsi,rax
  40f67e:	xor    eax,eax
  40f680:	test   rsi,rsi
  40f683:	je     0x40f6d0
  40f685:	mov    r9,QWORD PTR [rbx+0x108]
  40f68c:	mov    r8,QWORD PTR [rbx+0x10]
  40f690:	lea    rax,[rip+0x2de03]        # 0x43d49a
  40f697:	mov    rdx,rbp
  40f69a:	mov    rcx,rsi
  40f69d:	mov    BYTE PTR [rsp+0x3a],0x0
  40f6a2:	mov    QWORD PTR [rsp+0xa0],rax
  40f6aa:	mov    QWORD PTR [rsp+0x90],0x0
  40f6b6:	mov    BYTE PTR [rsp+0xb0],0x1
  40f6be:	call   0x4141a0
  40f6c3:	mov    rcx,rsi
  40f6c6:	call   0x427f68
  40f6cb:	mov    eax,0x1
  40f6d0:	add    rsp,0x4d8
  40f6d7:	pop    rbx
  40f6d8:	pop    rsi
  40f6d9:	pop    rdi
  40f6da:	pop    rbp
  40f6db:	ret    
  40f6dc:	nop    DWORD PTR [rax+0x0]
  40f6e0:	lea    r9,[rip+0x2dc41]        # 0x43d328
  40f6e7:	lea    r8,[rip+0x2dd12]        # 0x43d400
  40f6ee:	mov    QWORD PTR [rsp+0x20],rax
  40f6f3:	mov    edx,0x400
  40f6f8:	mov    rcx,rsi
  40f6fb:	call   0x426220
  40f700:	jmp    0x40f671
  40f705:	nop
  40f706:	nop
  40f707:	nop
  40f708:	nop
  40f709:	nop
  40f70a:	nop
  40f70b:	nop
  40f70c:	nop
  40f70d:	nop
  40f70e:	nop
  40f70f:	nop
  40f710:	push   rsi
  40f711:	push   rbx
  40f712:	sub    rsp,0x28
  40f716:	movzx  eax,BYTE PTR [rcx]
  40f719:	mov    rbx,rcx
  40f71c:	mov    rsi,rdx
  40f71f:	test   al,al
  40f721:	jne    0x40f77b
  40f723:	jmp    0x40f7c0
  40f728:	nop    DWORD PTR [rax+rax*1+0x0]
  40f730:	cmp    al,0x5f
  40f732:	je     0x40f7f0
  40f738:	jle    0x40f7d0
  40f73e:	cmp    al,0x7b
  40f740:	je     0x40f840
  40f746:	cmp    al,0x7d
  40f748:	jne    0x40f830
  40f74e:	lea    rcx,[rip+0x2dd7a]        # 0x43d4cf
  40f755:	mov    r9,rsi
  40f758:	mov    r8d,0x2
  40f75e:	mov    edx,0x1
  40f763:	call   0x42a4e0
  40f768:	nop    DWORD PTR [rax+rax*1+0x0]
  40f770:	add    rbx,0x1
  40f774:	movzx  eax,BYTE PTR [rbx]
  40f777:	test   al,al
  40f779:	je     0x40f7c0
  40f77b:	cmp    al,0x26
  40f77d:	je     0x40f810
  40f783:	jg     0x40f730
  40f785:	cmp    al,0x24
  40f787:	je     0x40f880
  40f78d:	jg     0x40f860
  40f793:	cmp    al,0xa
  40f795:	jne    0x40f830
  40f79b:	lea    rcx,[rip+0x2dd3b]        # 0x43d4dd
  40f7a2:	add    rbx,0x1
  40f7a6:	mov    r9,rsi
  40f7a9:	mov    r8d,0x2
  40f7af:	mov    edx,0x1
  40f7b4:	call   0x42a4e0
  40f7b9:	movzx  eax,BYTE PTR [rbx]
  40f7bc:	test   al,al
  40f7be:	jne    0x40f77b
  40f7c0:	add    rsp,0x28
  40f7c4:	pop    rbx
  40f7c5:	pop    rsi
  40f7c6:	ret    
  40f7c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7d0:	cmp    al,0x5c
  40f7d2:	jne    0x40f830
  40f7d4:	lea    rcx,[rip+0x2dcf7]        # 0x43d4d2
  40f7db:	mov    r9,rsi
  40f7de:	mov    r8d,0xa
  40f7e4:	mov    edx,0x1
  40f7e9:	call   0x42a4e0
  40f7ee:	jmp    0x40f770
  40f7f0:	lea    rcx,[rip+0x2dcd2]        # 0x43d4c9
  40f7f7:	mov    r9,rsi
  40f7fa:	mov    r8d,0x2
  40f800:	mov    edx,0x1
  40f805:	call   0x42a4e0
  40f80a:	jmp    0x40f770
  40f80f:	nop
  40f810:	lea    rcx,[rip+0x2dca9]        # 0x43d4c0
  40f817:	mov    r9,rsi
  40f81a:	mov    r8d,0x2
  40f820:	mov    edx,0x1
  40f825:	call   0x42a4e0
  40f82a:	jmp    0x40f770
  40f82f:	nop
  40f830:	movsx  ecx,al
  40f833:	mov    rdx,rsi
  40f836:	call   0x42a500
  40f83b:	jmp    0x40f770
  40f840:	lea    rcx,[rip+0x2dc85]        # 0x43d4cc
  40f847:	mov    r9,rsi
  40f84a:	mov    r8d,0x2
  40f850:	mov    edx,0x1
  40f855:	call   0x42a4e0
  40f85a:	jmp    0x40f770
  40f85f:	nop
  40f860:	lea    rcx,[rip+0x2dc5c]        # 0x43d4c3
  40f867:	mov    r9,rsi
  40f86a:	mov    r8d,0x2
  40f870:	mov    edx,0x1
  40f875:	call   0x42a4e0
  40f87a:	jmp    0x40f770
  40f87f:	nop
  40f880:	lea    rcx,[rip+0x2dc3f]        # 0x43d4c6
  40f887:	mov    r9,rsi
  40f88a:	mov    r8d,0x2
  40f890:	mov    edx,0x1
  40f895:	call   0x42a4e0
  40f89a:	jmp    0x40f770
  40f89f:	nop
  40f8a0:	push   rsi
  40f8a1:	push   rbx
  40f8a2:	sub    rsp,0x28
  40f8a6:	movzx  eax,BYTE PTR [rcx]
  40f8a9:	mov    rbx,rcx
  40f8ac:	mov    rsi,rdx
  40f8af:	test   al,al
  40f8b1:	jne    0x40f8da
  40f8b3:	jmp    0x40f8f4
  40f8b5:	lea    rcx,[rip+0x2dc24]        # 0x43d4e0
  40f8bc:	add    rbx,0x1
  40f8c0:	mov    r9,rsi
  40f8c3:	mov    r8d,0x4
  40f8c9:	mov    edx,0x1
  40f8ce:	call   0x42a4e0
  40f8d3:	movzx  eax,BYTE PTR [rbx]
  40f8d6:	test   al,al
  40f8d8:	je     0x40f8f4
  40f8da:	cmp    al,0x5c
  40f8dc:	je     0x40f8b5
  40f8de:	add    rbx,0x1
  40f8e2:	movsx  ecx,al
  40f8e5:	mov    rdx,rsi
  40f8e8:	call   0x42a500
  40f8ed:	movzx  eax,BYTE PTR [rbx]
  40f8f0:	test   al,al
  40f8f2:	jne    0x40f8da
  40f8f4:	add    rsp,0x28
  40f8f8:	pop    rbx
  40f8f9:	pop    rsi
  40f8fa:	ret    
  40f8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f900:	push   r15
  40f902:	push   r14
  40f904:	push   r13
  40f906:	push   r12
  40f908:	push   rbp
  40f909:	push   rdi
  40f90a:	push   rsi
  40f90b:	push   rbx
  40f90c:	sub    rsp,0x38
  40f910:	movzx  r9d,BYTE PTR [rip+0x4a968]        # 0x45a280
  40f918:	mov    rax,QWORD PTR [rcx]
  40f91b:	movzx  r14d,BYTE PTR [rax+0xa]
  40f920:	movzx  r8d,WORD PTR [rax+0x6]
  40f925:	test   r9b,r9b
  40f928:	mov    r13d,DWORD PTR [rax+0x10]
  40f92c:	jne    0x40fa99
  40f932:	cmp    r8w,0x2
  40f937:	mov    r12d,0x2
  40f93d:	mov    rbx,rdx
  40f940:	cmovbe r12d,r8d
  40f944:	cmp    BYTE PTR [rax+0xb],0x0
  40f948:	mov    rdi,rcx
  40f94b:	jne    0x40fb40
  40f951:	mov    rbp,QWORD PTR [rdi+0x28]
  40f955:	add    r13d,0x1
  40f959:	xor    r15d,r15d
  40f95c:	cmp    QWORD PTR [rbp+0x0],0x0
  40f961:	jne    0x40f9da
  40f963:	jmp    0x40fa90
  40f968:	nop    DWORD PTR [rax+rax*1+0x0]
  40f970:	mov    eax,esi
  40f972:	xor    edx,edx
  40f974:	div    DWORD PTR [rdi+0x10]
  40f977:	mov    rax,QWORD PTR [rdi+0x18]
  40f97b:	mov    edx,edx
  40f97d:	mov    rcx,QWORD PTR [rax+rdx*8]
  40f981:	mov    rdx,rbx
  40f984:	call   0x40f710
  40f989:	lea    rcx,[rip+0x2dbfc]        # 0x43d58c
  40f990:	mov    r9,rbx
  40f993:	mov    r8d,0x3
  40f999:	mov    edx,0x1
  40f99e:	call   0x42a4e0
  40f9a3:	mov    rcx,QWORD PTR [rbp+r15*8+0x0]
  40f9a8:	mov    rdx,rbx
  40f9ab:	add    r15,0x1
  40f9af:	call   0x40f710
  40f9b4:	lea    rcx,[rip+0x2dbd5]        # 0x43d590
  40f9bb:	mov    r9,rbx
  40f9be:	mov    r8d,0x4
  40f9c4:	mov    edx,0x1
  40f9c9:	call   0x42a4e0
  40f9ce:	cmp    QWORD PTR [rbp+r15*8+0x0],0x0
  40f9d4:	je     0x40fa90
  40f9da:	xor    edx,edx
  40f9dc:	mov    eax,r15d
  40f9df:	mov    esi,r15d
  40f9e2:	div    DWORD PTR [rdi+0x10]
  40f9e5:	test   edx,edx
  40f9e7:	jne    0x40f977
  40f9e9:	movzx  eax,BYTE PTR [rip+0x4a890]        # 0x45a280
  40f9f0:	test   al,al
  40f9f2:	jne    0x40fa90
  40f9f8:	test   r14b,r14b
  40f9fb:	jne    0x40fa23
  40f9fd:	cmp    r12w,0x2
  40fa02:	je     0x40fa50
  40fa04:	lea    eax,[r13+0x1]
  40fa08:	lea    rdx,[rip+0x2db51]        # 0x43d560
  40fa0f:	mov    r8d,r13d
  40fa12:	mov    rcx,rbx
  40fa15:	mov    DWORD PTR [rsp+0x2c],eax
  40fa19:	call   0x426370
  40fa1e:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fa23:	test   r12w,r12w
  40fa27:	je     0x40f970
  40fa2d:	lea    rcx,[rip+0x2daf2]        # 0x43d526
  40fa34:	mov    r9,rbx
  40fa37:	mov    r8d,0x7
  40fa3d:	mov    edx,0x1
  40fa42:	call   0x42a4e0
  40fa47:	jmp    0x40f970
  40fa4c:	nop    DWORD PTR [rax+0x0]
  40fa50:	lea    rcx,[rip+0x2dacf]        # 0x43d526
  40fa57:	mov    r9,rbx
  40fa5a:	mov    r8d,0x7
  40fa60:	mov    edx,0x1
  40fa65:	call   0x42a4e0
  40fa6a:	lea    eax,[r13+0x1]
  40fa6e:	lea    rdx,[rip+0x2dabb]        # 0x43d530
  40fa75:	mov    r8d,r13d
  40fa78:	mov    rcx,rbx
  40fa7b:	mov    DWORD PTR [rsp+0x2c],eax
  40fa7f:	call   0x426370
  40fa84:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fa89:	jmp    0x40fa2d
  40fa8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa90:	mov    rax,QWORD PTR [rdi]
  40fa93:	cmp    BYTE PTR [rax+0xc],0x0
  40fa97:	jne    0x40fab0
  40fa99:	add    rsp,0x38
  40fa9d:	pop    rbx
  40fa9e:	pop    rsi
  40fa9f:	pop    rdi
  40faa0:	pop    rbp
  40faa1:	pop    r12
  40faa3:	pop    r13
  40faa5:	pop    r14
  40faa7:	pop    r15
  40faa9:	ret    
  40faaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fab0:	cmp    r12w,0x2
  40fab5:	je     0x40fc06
  40fabb:	lea    rcx,[rip+0x2dad3]        # 0x43d595
  40fac2:	mov    r9,rbx
  40fac5:	mov    r8d,0x19
  40facb:	mov    edx,0x1
  40fad0:	call   0x42a4e0
  40fad5:	mov    rsi,QWORD PTR [rdi+0x48]
  40fad9:	test   rsi,rsi
  40fadc:	je     0x40fb1e
  40fade:	test   r14b,r14b
  40fae1:	jne    0x40fb1e
  40fae3:	movzx  eax,BYTE PTR [rip+0x4a796]        # 0x45a280
  40faea:	test   al,al
  40faec:	jne    0x40fb1e
  40faee:	xchg   ax,ax
  40faf0:	mov    rcx,QWORD PTR [rsi]
  40faf3:	mov    rdx,rbx
  40faf6:	call   0x40f710
  40fafb:	lea    rcx,[rip+0x2da8e]        # 0x43d590
  40fb02:	mov    r9,rbx
  40fb05:	mov    r8d,0x4
  40fb0b:	mov    edx,0x1
  40fb10:	call   0x42a4e0
  40fb15:	mov    rsi,QWORD PTR [rsi+0x8]
  40fb19:	test   rsi,rsi
  40fb1c:	jne    0x40faf0
  40fb1e:	mov    rdx,rbx
  40fb21:	mov    ecx,0xa
  40fb26:	add    rsp,0x38
  40fb2a:	pop    rbx
  40fb2b:	pop    rsi
  40fb2c:	pop    rdi
  40fb2d:	pop    rbp
  40fb2e:	pop    r12
  40fb30:	pop    r13
  40fb32:	pop    r14
  40fb34:	pop    r15
  40fb36:	jmp    0x42a500
  40fb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb40:	test   r14b,r14b
  40fb43:	jne    0x40fb8c
  40fb45:	cmp    QWORD PTR [rcx+0x8],0x0
  40fb4a:	je     0x40fb8c
  40fb4c:	lea    rcx,[rip+0x2d992]        # 0x43d4e5
  40fb53:	mov    r9,rdx
  40fb56:	mov    r8d,0xf
  40fb5c:	mov    edx,0x1
  40fb61:	call   0x42a4e0
  40fb66:	mov    rcx,QWORD PTR [rdi+0x8]
  40fb6a:	mov    rdx,rbx
  40fb6d:	call   0x40f710
  40fb72:	lea    rcx,[rip+0x2d97c]        # 0x43d4f5
  40fb79:	mov    r9,rbx
  40fb7c:	mov    r8d,0xf
  40fb82:	mov    edx,0x1
  40fb87:	call   0x42a4e0
  40fb8c:	lea    rcx,[rip+0x2d972]        # 0x43d505
  40fb93:	mov    r9,rbx
  40fb96:	mov    r8d,0x10
  40fb9c:	mov    edx,0x1
  40fba1:	call   0x42a4e0
  40fba6:	test   r12w,r12w
  40fbaa:	mov    r9,rbx
  40fbad:	je     0x40fbd0
  40fbaf:	cmp    r12w,0x1
  40fbb4:	je     0x40fc25
  40fbb6:	lea    rcx,[rip+0x2d960]        # 0x43d51d
  40fbbd:	mov    r8d,0x5
  40fbc3:	mov    edx,0x1
  40fbc8:	call   0x42a4e0
  40fbcd:	jmp    0x40fbe7
  40fbcf:	nop
  40fbd0:	lea    rcx,[rip+0x2d93f]        # 0x43d516
  40fbd7:	mov    r8d,0x2
  40fbdd:	mov    edx,0x1
  40fbe2:	call   0x42a4e0
  40fbe7:	lea    rcx,[rip+0x2d935]        # 0x43d523
  40fbee:	mov    r9,rbx
  40fbf1:	mov    r8d,0x2
  40fbf7:	mov    edx,0x1
  40fbfc:	call   0x42a4e0
  40fc01:	jmp    0x40f951
  40fc06:	lea    rcx,[rip+0x2d919]        # 0x43d526
  40fc0d:	mov    r9,rbx
  40fc10:	mov    r8d,0x7
  40fc16:	mov    edx,0x1
  40fc1b:	call   0x42a4e0
  40fc20:	jmp    0x40fabb
  40fc25:	lea    rcx,[rip+0x2d8ed]        # 0x43d519
  40fc2c:	mov    r8d,0x3
  40fc32:	mov    edx,0x1
  40fc37:	call   0x42a4e0
  40fc3c:	jmp    0x40fbe7
  40fc3e:	xchg   ax,ax
  40fc40:	push   r15
  40fc42:	push   r14
  40fc44:	push   r13
  40fc46:	push   r12
  40fc48:	push   rbp
  40fc49:	push   rdi
  40fc4a:	push   rsi
  40fc4b:	push   rbx
  40fc4c:	sub    rsp,0x38
  40fc50:	mov    eax,DWORD PTR [rsp+0xa8]
  40fc57:	mov    r12d,DWORD PTR [rsp+0xa0]
  40fc5f:	cmp    dx,0x2
  40fc63:	mov    QWORD PTR [rsp+0x20],rcx
  40fc68:	mov    r14d,edx
  40fc6b:	mov    ebp,r8d
  40fc6e:	mov    edi,r9d
  40fc71:	mov    rbx,QWORD PTR [rsp+0xb0]
  40fc79:	mov    esi,edx
  40fc7b:	mov    DWORD PTR [rsp+0x2c],eax
  40fc7f:	je     0x40fe20
  40fc85:	cmp    dx,0x1
  40fc89:	je     0x40fe70
  40fc8f:	test   r8d,r8d
  40fc92:	jne    0x40fd70
  40fc98:	mov    bpl,0x1
  40fc9b:	cmp    edi,ebp
  40fc9d:	jbe    0x40fcd1
  40fc9f:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fca4:	mov    r15d,ebp
  40fca7:	shl    r13,0x5
  40fcab:	add    r13,QWORD PTR [rsp+0x20]
  40fcb0:	test   si,si
  40fcb3:	lea    rcx,[rip+0x2d8f5]        # 0x43d5af
  40fcba:	je     0x40fcc0
  40fcbc:	mov    rcx,QWORD PTR [r13+0x8]
  40fcc0:	mov    rdx,rbx
  40fcc3:	add    r15d,0x1
  40fcc7:	call   0x42a4f8
  40fccc:	cmp    edi,r15d
  40fccf:	ja     0x40fcb0
  40fcd1:	sub    ebp,edi
  40fcd3:	test   r14w,r14w
  40fcd7:	je     0x40fdd0
  40fcdd:	test   ebp,ebp
  40fcdf:	lea    r13d,[rbp-0x1]
  40fce3:	jle    0x40feab
  40fce9:	test   r13d,r13d
  40fcec:	lea    edi,[rbp-0x2]
  40fcef:	jle    0x40fee9
  40fcf5:	sub    ebp,0x3
  40fcf8:	test   edi,edi
  40fcfa:	jle    0x40feca
  40fd00:	test   ebp,ebp
  40fd02:	mov    eax,0x0
  40fd07:	cmovs  ebp,eax
  40fd0a:	cmp    ebp,r12d
  40fd0d:	jae    0x40fd40
  40fd0f:	mov    edi,DWORD PTR [rsp+0x2c]
  40fd13:	shl    rdi,0x5
  40fd17:	add    rdi,QWORD PTR [rsp+0x20]
  40fd1c:	nop    DWORD PTR [rax+0x0]
  40fd20:	test   si,si
  40fd23:	lea    rcx,[rip+0x2d885]        # 0x43d5af
  40fd2a:	je     0x40fd30
  40fd2c:	mov    rcx,QWORD PTR [rdi+0x8]
  40fd30:	mov    rdx,rbx
  40fd33:	add    ebp,0x1
  40fd36:	call   0x42a4f8
  40fd3b:	cmp    r12d,ebp
  40fd3e:	ja     0x40fd20
  40fd40:	cmp    r14w,0x2
  40fd45:	je     0x40fdf3
  40fd4b:	mov    rdx,rbx
  40fd4e:	mov    ecx,0xa
  40fd53:	add    rsp,0x38
  40fd57:	pop    rbx
  40fd58:	pop    rsi
  40fd59:	pop    rdi
  40fd5a:	pop    rbp
  40fd5b:	pop    r12
  40fd5d:	pop    r13
  40fd5f:	pop    r14
  40fd61:	pop    r15
  40fd63:	jmp    0x42a500
  40fd68:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd70:	test   r14w,r14w
  40fd74:	je     0x40fda0
  40fd76:	lea    rdx,[rip+0x2d846]        # 0x43d5c3
  40fd7d:	mov    r8d,ebp
  40fd80:	mov    rcx,rbx
  40fd83:	call   0x426370
  40fd88:	add    eax,0x1
  40fd8b:	mov    ebp,0x0
  40fd90:	cmovns ebp,eax
  40fd93:	jmp    0x40fc9b
  40fd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fda0:	lea    rdx,[rip+0x2d80f]        # 0x43d5b6
  40fda7:	mov    r8d,ebp
  40fdaa:	mov    rcx,rbx
  40fdad:	call   0x426370
  40fdb2:	add    eax,0x1
  40fdb5:	mov    ebp,eax
  40fdb7:	mov    eax,0x0
  40fdbc:	cmovs  ebp,eax
  40fdbf:	cmp    edi,ebp
  40fdc1:	ja     0x40fc9f
  40fdc7:	sub    ebp,edi
  40fdc9:	nop    DWORD PTR [rax+0x0]
  40fdd0:	test   ebp,ebp
  40fdd2:	lea    edi,[rbp-0x1]
  40fdd5:	jle    0x40fe99
  40fddb:	test   edi,edi
  40fddd:	mov    ebp,0x0
  40fde2:	cmovns ebp,edi
  40fde5:	cmp    r12d,ebp
  40fde8:	ja     0x40fd0f
  40fdee:	jmp    0x40fd4b
  40fdf3:	mov    eax,DWORD PTR [rsp+0x2c]
  40fdf7:	mov    r15,QWORD PTR [rsp+0x20]
  40fdfc:	lea    rdx,[rip+0x2d7ae]        # 0x43d5b1
  40fe03:	mov    rcx,rbx
  40fe06:	shl    rax,0x5
  40fe0a:	add    r15,rax
  40fe0d:	mov    r9,QWORD PTR [r15+0x20]
  40fe11:	mov    r8,QWORD PTR [r15+0x8]
  40fe15:	call   0x426370
  40fe1a:	jmp    0x40fd4b
  40fe1f:	nop
  40fe20:	shl    rax,0x5
  40fe24:	lea    rdx,[rip+0x2d786]        # 0x43d5b1
  40fe2b:	add    rax,rcx
  40fe2e:	mov    rcx,rbx
  40fe31:	mov    r9,QWORD PTR [rax+0x8]
  40fe35:	mov    r8,QWORD PTR [rax+0x10]
  40fe39:	call   0x426370
  40fe3e:	xor    eax,eax
  40fe40:	test   ebp,ebp
  40fe42:	je     0x40fe56
  40fe44:	lea    rdx,[rip+0x2d778]        # 0x43d5c3
  40fe4b:	mov    r8d,ebp
  40fe4e:	mov    rcx,rbx
  40fe51:	call   0x426370
  40fe56:	test   eax,eax
  40fe58:	mov    ebp,0x0
  40fe5d:	cmovns ebp,eax
  40fe60:	cmp    edi,ebp
  40fe62:	ja     0x40fc9f
  40fe68:	sub    ebp,edi
  40fe6a:	jmp    0x40fcdd
  40fe6f:	nop
  40fe70:	mov    eax,DWORD PTR [rsp+0x2c]
  40fe74:	mov    rdx,QWORD PTR [rsp+0x20]
  40fe79:	shl    rax,0x5
  40fe7d:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40fe82:	mov    rdx,rbx
  40fe85:	call   0x42a4f8
  40fe8a:	xor    eax,eax
  40fe8c:	test   ebp,ebp
  40fe8e:	je     0x40fd88
  40fe94:	jmp    0x40fd76
  40fe99:	mov    rdx,rbx
  40fe9c:	mov    ecx,0x20
  40fea1:	call   0x42a500
  40fea6:	jmp    0x40fddb
  40feab:	mov    eax,DWORD PTR [rsp+0x2c]
  40feaf:	mov    rdx,QWORD PTR [rsp+0x20]
  40feb4:	shl    rax,0x5
  40feb8:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40febd:	mov    rdx,rbx
  40fec0:	call   0x42a4f8
  40fec5:	jmp    0x40fce9
  40feca:	mov    eax,DWORD PTR [rsp+0x2c]
  40fece:	mov    rdx,QWORD PTR [rsp+0x20]
  40fed3:	shl    rax,0x5
  40fed7:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40fedc:	mov    rdx,rbx
  40fedf:	call   0x42a4f8
  40fee4:	jmp    0x40fd00
  40fee9:	mov    eax,DWORD PTR [rsp+0x2c]
  40feed:	mov    rdx,QWORD PTR [rsp+0x20]
  40fef2:	shl    rax,0x5
  40fef6:	mov    rcx,QWORD PTR [rdx+rax*1+0x18]
  40fefb:	mov    rdx,rbx
  40fefe:	call   0x42a4f8
  40ff03:	jmp    0x40fcf5
  40ff08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff10:	sub    rsp,0x28
  40ff14:	mov    rax,QWORD PTR [rcx+0x48]
  40ff18:	test   rax,rax
  40ff1b:	je     0x40ff22
  40ff1d:	add    rsp,0x28
  40ff21:	ret    
  40ff22:	mov    rdx,QWORD PTR [rcx]
  40ff25:	cmp    BYTE PTR [rdx+0xd],0x0
  40ff29:	je     0x40ff1d
  40ff2b:	mov    r9d,DWORD PTR [rdx+0x10]
  40ff2f:	add    r9d,DWORD PTR [rcx+0x14]
  40ff33:	lea    rax,[rip+0x2d6a9]        # 0x43d5e3
  40ff3a:	lea    r8,[rip+0x2d698]        # 0x43d5d9
  40ff41:	lea    rcx,[rip+0x4a378]        # 0x45a2c0
  40ff48:	mov    edx,0x64
  40ff4d:	cmp    r9d,0x1
  40ff51:	cmovne r8,rax
  40ff55:	call   0x426220
  40ff5a:	lea    rax,[rip+0x1c55f]        # 0x42c4c0
  40ff61:	add    rsp,0x28
  40ff65:	ret    
  40ff66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff70:	push   rsi
  40ff71:	push   rbx
  40ff72:	sub    rsp,0x28
  40ff76:	xor    eax,eax
  40ff78:	cmp    BYTE PTR [rcx],0x2d
  40ff7b:	mov    edx,0x2e
  40ff80:	mov    rbx,rcx
  40ff83:	sete   al
  40ff86:	add    rbx,rax
  40ff89:	mov    rcx,rbx
  40ff8c:	call   0x42a428
  40ff91:	test   rax,rax
  40ff94:	je     0x40ffb1
  40ff96:	mov    rcx,rax
  40ff99:	call   0x42a400
  40ff9e:	mov    esi,eax
  40ffa0:	mov    rcx,rbx
  40ffa3:	call   0x42a400
  40ffa8:	sub    eax,esi
  40ffaa:	add    rsp,0x28
  40ffae:	pop    rbx
  40ffaf:	pop    rsi
  40ffb0:	ret    
  40ffb1:	xor    esi,esi
  40ffb3:	jmp    0x40ffa0
  40ffb5:	nop
  40ffb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffc0:	test   dl,dl
  40ffc2:	jne    0x40ffd1
  40ffc4:	test   rcx,rcx
  40ffc7:	je     0x40ffe0
  40ffc9:	mov    rdx,r8
  40ffcc:	jmp    0x42a4f8
  40ffd1:	mov    rdx,r8
  40ffd4:	xor    ecx,ecx
  40ffd6:	jmp    0x42a500
  40ffdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ffe0:	repz ret 
  40ffe2:	nop    DWORD PTR [rax+0x0]
  40ffe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fff0:	push   r12
  40fff2:	push   rbp
  40fff3:	push   rdi
  40fff4:	push   rsi
  40fff5:	push   rbx
  40fff6:	sub    rsp,0x20
  40fffa:	xor    edi,edi
  40fffc:	mov    r12d,0x1
  410002:	lea    rsi,[rip+0x2d60b]        # 0x43d614
  410009:	mov    rbx,rcx
  41000c:	movsx  ecx,BYTE PTR [rcx]
  41000f:	mov    rbp,rdx
  410012:	test   cl,cl
  410014:	je     0x410072
  410016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410020:	lea    eax,[rcx-0xa]
  410023:	cmp    al,0x34
  410025:	ja     0x410123
  41002b:	movzx  eax,al
  41002e:	movsxd rax,DWORD PTR [rsi+rax*4]
  410032:	add    rax,rsi
  410035:	jmp    rax
  410037:	nop    WORD PTR [rax+rax*1+0x0]
  410040:	lea    rcx,[rip+0x2d5b2]        # 0x43d5f9
  410047:	mov    r9,rbp
  41004a:	mov    r8d,0x4
  410050:	mov    edx,0x1
  410055:	call   0x42a4e0
  41005a:	nop    WORD PTR [rax+rax*1+0x0]
  410060:	cmp    BYTE PTR [rbx],0x20
  410063:	cmovne r12d,edi
  410067:	add    rbx,0x1
  41006b:	movsx  ecx,BYTE PTR [rbx]
  41006e:	test   cl,cl
  410070:	jne    0x410020
  410072:	add    rsp,0x20
  410076:	pop    rbx
  410077:	pop    rsi
  410078:	pop    rdi
  410079:	pop    rbp
  41007a:	pop    r12
  41007c:	ret    
  41007d:	nop    DWORD PTR [rax]
  410080:	lea    rcx,[rip+0x2d56d]        # 0x43d5f4
  410087:	mov    r9,rbp
  41008a:	mov    r8d,0x4
  410090:	mov    edx,0x1
  410095:	call   0x42a4e0
  41009a:	jmp    0x410060
  41009c:	nop    DWORD PTR [rax+0x0]
  4100a0:	lea    rcx,[rip+0x2d547]        # 0x43d5ee
  4100a7:	mov    r9,rbp
  4100aa:	mov    r8d,0x5
  4100b0:	mov    edx,0x1
  4100b5:	call   0x42a4e0
  4100ba:	jmp    0x410060
  4100bc:	nop    DWORD PTR [rax+0x0]
  4100c0:	lea    rcx,[rip+0x2d53f]        # 0x43d606
  4100c7:	mov    r9,rbp
  4100ca:	mov    r8d,0x6
  4100d0:	mov    edx,0x1
  4100d5:	call   0x42a4e0
  4100da:	jmp    0x410060
  4100dc:	nop    DWORD PTR [rax+0x0]
  4100e0:	test   r12b,r12b
  4100e3:	je     0x410130
  4100e5:	lea    rcx,[rip+0x2d521]        # 0x43d60d
  4100ec:	mov    r9,rbp
  4100ef:	mov    r8d,0x6
  4100f5:	mov    edx,0x1
  4100fa:	call   0x42a4e0
  4100ff:	jmp    0x410060
  410104:	lea    rcx,[rip+0x2d4f3]        # 0x43d5fe
  41010b:	mov    r9,rbp
  41010e:	mov    r8d,0x7
  410114:	mov    edx,0x1
  410119:	call   0x42a4e0
  41011e:	jmp    0x410060
  410123:	mov    rdx,rbp
  410126:	call   0x42a500
  41012b:	jmp    0x410060
  410130:	mov    rdx,rbp
  410133:	mov    ecx,0x20
  410138:	call   0x42a500
  41013d:	jmp    0x410060
  410142:	nop    DWORD PTR [rax+0x0]
  410146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410150:	push   rbx
  410151:	sub    rsp,0x20
  410155:	mov    rbx,QWORD PTR [rip+0x4ca58]        # 0x45cbb4
  41015c:	test   dx,dx
  41015f:	je     0x410176
  410161:	call   rbx
  410163:	mov    rcx,rax
  410166:	call   0x42a368
  41016b:	mov    ecx,eax
  41016d:	call   0x42a380
  410172:	test   eax,eax
  410174:	jne    0x410182
  410176:	call   rbx
  410178:	add    rax,0x30
  41017c:	add    rsp,0x20
  410180:	pop    rbx
  410181:	ret    
  410182:	call   rbx
  410184:	lea    rcx,[rax+0x30]
  410188:	call   0x42a368
  41018d:	mov    ecx,eax
  41018f:	call   0x42a380
  410194:	test   eax,eax
  410196:	je     0x410176
  410198:	lea    rcx,[rip+0x2d54e]        # 0x43d6ed
  41019f:	call   0x42a4d0
  4101a4:	lea    rdx,[rip+0x2d53d]        # 0x43d6e8
  4101ab:	test   rax,rax
  4101ae:	cmove  rax,rdx
  4101b2:	lea    rdx,[rip+0x2d53a]        # 0x43d6f3
  4101b9:	mov    rcx,rax
  4101bc:	call   0x424fe0
  4101c1:	test   rax,rax
  4101c4:	jne    0x41017c
  4101c6:	jmp    0x410176
  4101c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101d0:	push   r13
  4101d2:	push   r12
  4101d4:	push   rbp
  4101d5:	push   rdi
  4101d6:	push   rsi
  4101d7:	push   rbx
  4101d8:	sub    rsp,0x28
  4101dc:	mov    r12,QWORD PTR [r9]
  4101df:	mov    rbx,QWORD PTR [rip+0x4c9ce]        # 0x45cbb4
  4101e6:	mov    rbp,rcx
  4101e9:	mov    esi,edx
  4101eb:	mov    r13d,r8d
  4101ee:	mov    rdi,r9
  4101f1:	call   rbx
  4101f3:	add    rax,0x30
  4101f7:	cmp    r12,rax
  4101fa:	je     0x410214
  4101fc:	mov    rax,QWORD PTR [rsp+0x80]
  410204:	mov    BYTE PTR [rax],0x0
  410207:	add    rsp,0x28
  41020b:	pop    rbx
  41020c:	pop    rsi
  41020d:	pop    rdi
  41020e:	pop    rbp
  41020f:	pop    r12
  410211:	pop    r13
  410213:	ret    
  410214:	test   r13b,r13b
  410217:	je     0x410281
  410219:	mov    eax,DWORD PTR [rbp+0x10]
  41021c:	lea    r8d,[rax+0x1]
  410220:	imul   r8d,DWORD PTR [rbp+0x14]
  410225:	mov    rdx,QWORD PTR [rbp+0x0]
  410229:	cmp    BYTE PTR [rdx+0xa],0x0
  41022d:	jne    0x41024d
  41022f:	mov    rax,QWORD PTR [rbp+0x48]
  410233:	test   rax,rax
  410236:	je     0x41024d
  410238:	nop    DWORD PTR [rax+rax*1+0x0]
  410240:	mov    rax,QWORD PTR [rax+0x8]
  410244:	add    r8d,0x1
  410248:	test   rax,rax
  41024b:	jne    0x410240
  41024d:	movzx  edx,WORD PTR [rdx+0x8]
  410251:	lea    ecx,[r8+rsi*1]
  410255:	call   0x410150
  41025a:	mov    rsi,rax
  41025d:	mov    QWORD PTR [rdi],rax
  410260:	call   rbx
  410262:	lea    rdx,[rax+0x30]
  410266:	mov    rax,QWORD PTR [rsp+0x80]
  41026e:	cmp    rsi,rdx
  410271:	setne  BYTE PTR [rax]
  410274:	add    rsp,0x28
  410278:	pop    rbx
  410279:	pop    rsi
  41027a:	pop    rdi
  41027b:	pop    rbp
  41027c:	pop    r12
  41027e:	pop    r13
  410280:	ret    
  410281:	mov    eax,DWORD PTR [rbp+0x14]
  410284:	lea    r8d,[rax+0x1]
  410288:	jmp    0x410225
  41028a:	nop    WORD PTR [rax+rax*1+0x0]
  410290:	push   rbx
  410291:	sub    rsp,0x20
  410295:	test   rcx,rcx
  410298:	je     0x4102e1
  41029a:	mov    rbx,rcx
  41029d:	call   QWORD PTR [rip+0x4c911]        # 0x45cbb4
  4102a3:	add    rax,0x30
  4102a7:	cmp    rbx,rax
  4102aa:	je     0x4102e1
  4102ac:	movzx  eax,BYTE PTR [rip+0x49fcd]        # 0x45a280
  4102b3:	test   al,al
  4102b5:	jne    0x4102d0
  4102b7:	mov    rax,QWORD PTR [rip+0x4c966]        # 0x45cc24
  4102be:	mov    rcx,rbx
  4102c1:	add    rsp,0x20
  4102c5:	pop    rbx
  4102c6:	rex.W jmp rax
  4102c9:	nop    DWORD PTR [rax+0x0]
  4102d0:	lea    rdx,[rip+0x2d41e]        # 0x43d6f5
  4102d7:	mov    rcx,rbx
  4102da:	call   0x426370
  4102df:	jmp    0x4102b7
  4102e1:	add    rsp,0x20
  4102e5:	pop    rbx
  4102e6:	ret    
  4102e7:	nop    WORD PTR [rax+rax*1+0x0]
  4102f0:	push   r15
  4102f2:	push   r14
  4102f4:	push   r13
  4102f6:	push   r12
  4102f8:	push   rbp
  4102f9:	push   rdi
  4102fa:	push   rsi
  4102fb:	push   rbx
  4102fc:	sub    rsp,0xa8
  410303:	mov    rax,QWORD PTR [rcx]
  410306:	lea    r8,[rip+0x2dab3]        # 0x43ddc0
  41030d:	mov    QWORD PTR [rsp+0xf8],rdx
  410315:	mov    BYTE PTR [rsp+0x93],0x0
  41031d:	mov    r13,QWORD PTR [rax+0x18]
  410321:	movzx  esi,BYTE PTR [rax+0xa]
  410325:	mov    edi,DWORD PTR [rax+0x50]
  410328:	movzx  edx,WORD PTR [rax+0x6]
  41032c:	test   r13,r13
  41032f:	cmove  r13,r8
  410333:	movzx  r8d,BYTE PTR [rip+0x49f45]        # 0x45a280
  41033b:	mov    BYTE PTR [rsp+0x58],sil
  410340:	mov    esi,DWORD PTR [rax+0x10]
  410343:	mov    DWORD PTR [rsp+0x60],edi
  410347:	test   r8b,r8b
  41034a:	mov    DWORD PTR [rsp+0x64],esi
  41034e:	jne    0x4108c0
  410354:	cmp    dx,0x2
  410358:	mov    edi,0x2
  41035d:	mov    QWORD PTR [rsp+0x68],rcx
  410362:	cmovbe edi,edx
  410365:	mov    rdx,QWORD PTR [rcx+0x28]
  410369:	cmp    QWORD PTR [rdx],0x0
  41036d:	je     0x410a57
  410373:	mov    rsi,QWORD PTR [rsp+0x68]
  410378:	lea    rax,[rsp+0x93]
  410380:	lea    r9,[rsp+0xf8]
  410388:	xor    edx,edx
  41038a:	mov    r8d,0x1
  410390:	mov    QWORD PTR [rsp+0x20],rax
  410395:	mov    rcx,rsi
  410398:	call   0x4101d0
  41039d:	mov    edx,DWORD PTR [rsi+0x10]
  4103a0:	mov    rax,rsi
  4103a3:	test   edx,edx
  4103a5:	je     0x410b10
  4103ab:	lea    rcx,[rsp+0x94]
  4103b3:	xor    edx,edx
  4103b5:	lea    r12,[rsp+0x9c]
  4103bd:	lea    rbp,[rsp+0x98]
  4103c5:	mov    QWORD PTR [rsp+0x50],r13
  4103ca:	mov    WORD PTR [rsp+0x88],di
  4103d2:	xor    esi,esi
  4103d4:	mov    r15d,0x1
  4103da:	xor    ebx,ebx
  4103dc:	mov    QWORD PTR [rsp+0x48],rcx
  4103e1:	mov    edi,edx
  4103e3:	mov    r13,rax
  4103e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4103f0:	mov    rax,QWORD PTR [r13+0x18]
  4103f4:	mov    edx,ebx
  4103f6:	mov    r14,QWORD PTR [rax+rdx*8]
  4103fa:	mov    rcx,r14
  4103fd:	call   0x42a400
  410402:	mov    r9,QWORD PTR [rsp+0x48]
  410407:	mov    r8d,DWORD PTR [rsp+0x60]
  41040c:	mov    rdx,rax
  41040f:	mov    QWORD PTR [rsp+0x28],r12
  410414:	mov    QWORD PTR [rsp+0x20],rbp
  410419:	mov    rcx,r14
  41041c:	call   0x41c8e0
  410421:	mov    eax,DWORD PTR [rsp+0x94]
  410428:	cmp    edi,eax
  41042a:	cmovb  edi,eax
  41042d:	mov    eax,DWORD PTR [rsp+0x98]
  410434:	cmp    r15d,eax
  410437:	cmovb  r15d,eax
  41043b:	mov    eax,DWORD PTR [rsp+0x9c]
  410442:	cmp    esi,eax
  410444:	cmovb  esi,eax
  410447:	add    ebx,0x1
  41044a:	cmp    DWORD PTR [r13+0x10],ebx
  41044e:	ja     0x4103f0
  410450:	mov    eax,r15d
  410453:	mov    r13,QWORD PTR [rsp+0x50]
  410458:	mov    DWORD PTR [rsp+0x48],edi
  41045c:	add    eax,0x1
  41045f:	movzx  edi,WORD PTR [rsp+0x88]
  410467:	mov    DWORD PTR [rsp+0x88],r15d
  41046f:	shl    rax,0x4
  410473:	mov    QWORD PTR [rsp+0x78],rax
  410478:	mov    eax,esi
  41047a:	mov    QWORD PTR [rsp+0x80],rax
  410482:	mov    rax,QWORD PTR [rsp+0x68]
  410487:	mov    r15,QWORD PTR [rax+0x28]
  41048b:	mov    rbx,QWORD PTR [r15]
  41048e:	test   rbx,rbx
  410491:	je     0x410b3d
  410497:	lea    rbp,[rsp+0x98]
  41049f:	xor    ecx,ecx
  4104a1:	lea    r12,[rsp+0x9c]
  4104a9:	lea    rax,[rsp+0x94]
  4104b1:	xor    esi,esi
  4104b3:	mov    r14d,0x1
  4104b9:	mov    QWORD PTR [rsp+0x70],r13
  4104be:	mov    r13d,ecx
  4104c1:	mov    rcx,rbp
  4104c4:	mov    WORD PTR [rsp+0x8c],di
  4104cc:	mov    ebp,r14d
  4104cf:	mov    rdi,r12
  4104d2:	mov    r14d,esi
  4104d5:	mov    r12,rax
  4104d8:	mov    rsi,rcx
  4104db:	nop    DWORD PTR [rax+rax*1+0x0]
  4104e0:	mov    rcx,rbx
  4104e3:	call   0x42a400
  4104e8:	mov    r8d,DWORD PTR [rsp+0x60]
  4104ed:	mov    rdx,rax
  4104f0:	mov    rcx,rbx
  4104f3:	mov    QWORD PTR [rsp+0x28],rdi
  4104f8:	mov    QWORD PTR [rsp+0x20],rsi
  4104fd:	mov    r9,r12
  410500:	call   0x41c8e0
  410505:	mov    eax,DWORD PTR [rsp+0x94]
  41050c:	cmp    r13d,eax
  41050f:	cmovb  r13d,eax
  410513:	mov    eax,DWORD PTR [rsp+0x98]
  41051a:	cmp    ebp,eax
  41051c:	cmovb  ebp,eax
  41051f:	mov    eax,DWORD PTR [rsp+0x9c]
  410526:	cmp    r14d,eax
  410529:	cmovb  r14d,eax
  41052d:	add    r15,0x8
  410531:	mov    rbx,QWORD PTR [r15]
  410534:	test   rbx,rbx
  410537:	jne    0x4104e0
  410539:	movzx  edi,WORD PTR [rsp+0x8c]
  410541:	lea    ecx,[rbp+0x1]
  410544:	mov    DWORD PTR [rsp+0x50],r13d
  410549:	mov    esi,r14d
  41054c:	mov    r13,QWORD PTR [rsp+0x70]
  410551:	mov    DWORD PTR [rsp+0x70],ebp
  410555:	shl    rcx,0x4
  410559:	call   0x424800
  41055e:	mov    rcx,QWORD PTR [rsp+0x78]
  410563:	mov    r14,rax
  410566:	call   0x424800
  41056b:	mov    rcx,rsi
  41056e:	mov    r15,rax
  410571:	call   0x424800
  410576:	mov    rcx,QWORD PTR [rsp+0x80]
  41057e:	mov    QWORD PTR [r14],rax
  410581:	call   0x424800
  410586:	mov    rcx,QWORD PTR [rsp+0x68]
  41058b:	cmp    BYTE PTR [rsp+0x58],0x0
  410590:	mov    QWORD PTR [r15],rax
  410593:	mov    rax,QWORD PTR [rcx]
  410596:	sete   BYTE PTR [rsp+0x78]
  41059b:	movzx  esi,BYTE PTR [rsp+0x78]
  4105a0:	cmp    BYTE PTR [rax+0xb],0x0
  4105a4:	je     0x4105c8
  4105a6:	test   sil,sil
  4105a9:	je     0x4105c8
  4105ab:	mov    r8,QWORD PTR [rcx+0x8]
  4105af:	test   r8,r8
  4105b2:	je     0x4105c8
  4105b4:	mov    rcx,QWORD PTR [rsp+0xf8]
  4105bc:	lea    rdx,[rip+0x2d14a]        # 0x43d70d
  4105c3:	call   0x426370
  4105c8:	mov    rax,QWORD PTR [rsp+0x68]
  4105cd:	mov    rax,QWORD PTR [rax+0x28]
  4105d1:	cmp    QWORD PTR [rax],0x0
  4105d5:	mov    QWORD PTR [rsp+0x58],rax
  4105da:	je     0x410815
  4105e0:	movzx  eax,BYTE PTR [rip+0x49c99]        # 0x45a280
  4105e7:	test   al,al
  4105e9:	jne    0x410815
  4105ef:	mov    eax,DWORD PTR [rsp+0x64]
  4105f3:	mov    DWORD PTR [rsp+0x64],0x0
  4105fb:	add    eax,0x1
  4105fe:	mov    DWORD PTR [rsp+0x8c],eax
  410605:	movzx  eax,di
  410608:	mov    DWORD PTR [rsp+0x80],eax
  41060f:	nop
  410610:	mov    eax,DWORD PTR [rsp+0x64]
  410614:	test   eax,eax
  410616:	je     0x410981
  41061c:	mov    rax,QWORD PTR [rsp+0x58]
  410621:	mov    rsi,QWORD PTR [rsp+0x68]
  410626:	cmp    QWORD PTR [rax+0x8],0x1
  41062b:	mov    eax,DWORD PTR [rsp+0x64]
  41062f:	sbb    ecx,ecx
  410631:	xor    edx,edx
  410633:	div    DWORD PTR [rsi+0x10]
  410636:	not    ecx
  410638:	add    ecx,0x2
  41063b:	test   edx,edx
  41063d:	je     0x410b59
  410643:	mov    rax,QWORD PTR [rsp+0x68]
  410648:	mov    edx,edx
  41064a:	xor    ebp,ebp
  41064c:	xor    r12d,r12d
  41064f:	mov    rax,QWORD PTR [rax+0x18]
  410653:	mov    rbx,QWORD PTR [rax+rdx*8]
  410657:	mov    rcx,rbx
  41065a:	call   0x42a400
  41065f:	mov    esi,DWORD PTR [rsp+0x88]
  410666:	mov    rdx,rax
  410669:	mov    r9,r15
  41066c:	mov    rcx,rbx
  41066f:	mov    DWORD PTR [rsp+0x20],esi
  410673:	mov    esi,DWORD PTR [rsp+0x60]
  410677:	mov    r8d,esi
  41067a:	call   0x41ca80
  41067f:	mov    rax,QWORD PTR [rsp+0x58]
  410684:	mov    rbx,QWORD PTR [rax]
  410687:	mov    rcx,rbx
  41068a:	call   0x42a400
  41068f:	mov    ecx,DWORD PTR [rsp+0x70]
  410693:	mov    r8d,esi
  410696:	mov    r9,r14
  410699:	mov    rdx,rax
  41069c:	xor    esi,esi
  41069e:	mov    DWORD PTR [rsp+0x20],ecx
  4106a2:	mov    rcx,rbx
  4106a5:	call   0x41ca80
  4106aa:	jmp    0x41076c
  4106af:	nop
  4106b0:	movsxd rbx,esi
  4106b3:	lea    rcx,[rip+0x2d062]        # 0x43d71c
  4106ba:	mov    r9d,DWORD PTR [rsp+0x48]
  4106bf:	shl    rbx,0x4
  4106c3:	lea    rdx,[rip+0x2d04b]        # 0x43d715
  4106ca:	lea    rax,[r15+rbx*1]
  4106ce:	sub    r9d,DWORD PTR [rax+0x8]
  4106d2:	mov    QWORD PTR [rsp+0x20],rcx
  4106d7:	mov    rcx,QWORD PTR [rsp+0xf8]
  4106df:	mov    r8,QWORD PTR [rax]
  4106e2:	call   0x426370
  4106e7:	cmp    QWORD PTR [r15+rbx*1+0x10],0x0
  4106ed:	sete   bl
  4106f0:	movzx  ebp,bl
  4106f3:	xor    ebx,0x1
  4106f6:	test   di,di
  4106f9:	movzx  ebx,bl
  4106fc:	je     0x4107ae
  410702:	mov    r8,QWORD PTR [r13+0x78]
  410706:	mov    rcx,QWORD PTR [rsp+0xf8]
  41070e:	lea    rdx,[rip+0x2d00c]        # 0x43d721
  410715:	call   0x426370
  41071a:	test   r12d,r12d
  41071d:	je     0x4108d4
  410723:	cmp    di,0x2
  410727:	jne    0x4107c9
  41072d:	mov    rax,QWORD PTR [r13+0x80]
  410734:	mov    r8d,DWORD PTR [rsp+0x50]
  410739:	lea    r9,[rip+0x2cfdc]        # 0x43d71c
  410740:	mov    rcx,QWORD PTR [rsp+0xf8]
  410748:	lea    rdx,[rip+0x2cfe2]        # 0x43d731
  41074f:	mov    r12d,0x1
  410755:	mov    QWORD PTR [rsp+0x20],rax
  41075a:	call   0x426370
  41075f:	xor    eax,eax
  410761:	add    esi,0x1
  410764:	or     eax,ebx
  410766:	je     0x4107f0
  41076c:	cmp    di,0x2
  410770:	je     0x410964
  410776:	test   ebp,ebp
  410778:	je     0x4106b0
  41077e:	mov    r8d,DWORD PTR [rsp+0x48]
  410783:	mov    rcx,QWORD PTR [rsp+0xf8]
  41078b:	lea    r9,[rip+0x2cf8a]        # 0x43d71c
  410792:	lea    rdx,[rip+0x2cf84]        # 0x43d71d
  410799:	xor    ebx,ebx
  41079b:	mov    ebp,0x1
  4107a0:	call   0x426370
  4107a5:	test   di,di
  4107a8:	jne    0x410702
  4107ae:	mov    rdx,QWORD PTR [rsp+0xf8]
  4107b6:	mov    ecx,0x20
  4107bb:	call   0x42a500
  4107c0:	test   r12d,r12d
  4107c3:	je     0x410940
  4107c9:	mov    rdx,QWORD PTR [rsp+0xf8]
  4107d1:	mov    ecx,0xa
  4107d6:	add    esi,0x1
  4107d9:	mov    r12d,0x1
  4107df:	call   0x42a500
  4107e4:	xor    eax,eax
  4107e6:	or     eax,ebx
  4107e8:	jne    0x41076c
  4107ea:	nop    WORD PTR [rax+rax*1+0x0]
  4107f0:	add    QWORD PTR [rsp+0x58],0x8
  4107f6:	add    DWORD PTR [rsp+0x64],0x1
  4107fb:	mov    rax,QWORD PTR [rsp+0x58]
  410800:	cmp    QWORD PTR [rax],0x0
  410804:	je     0x410815
  410806:	movzx  eax,BYTE PTR [rip+0x49a73]        # 0x45a280
  41080d:	test   al,al
  41080f:	je     0x410610
  410815:	mov    rax,QWORD PTR [rsp+0x68]
  41081a:	mov    rax,QWORD PTR [rax]
  41081d:	cmp    BYTE PTR [rax+0xc],0x0
  410821:	je     0x410892
  410823:	cmp    di,0x2
  410827:	je     0x410aa0
  41082d:	cmp    BYTE PTR [rsp+0x78],0x0
  410832:	je     0x410880
  410834:	mov    rax,QWORD PTR [rsp+0x68]
  410839:	mov    rbx,QWORD PTR [rax+0x48]
  41083d:	test   rbx,rbx
  410840:	je     0x410880
  410842:	movzx  eax,BYTE PTR [rip+0x49a37]        # 0x45a280
  410849:	test   al,al
  41084b:	jne    0x410880
  41084d:	cmp    di,0x2
  410851:	jne    0x410ae6
  410857:	nop    WORD PTR [rax+rax*1+0x0]
  410860:	mov    r8,QWORD PTR [rbx]
  410863:	mov    rcx,QWORD PTR [rsp+0xf8]
  41086b:	lea    rdx,[rip+0x2ce9b]        # 0x43d70d
  410872:	call   0x426370
  410877:	mov    rbx,QWORD PTR [rbx+0x8]
  41087b:	test   rbx,rbx
  41087e:	jne    0x410860
  410880:	mov    rdx,QWORD PTR [rsp+0xf8]
  410888:	mov    ecx,0xa
  41088d:	call   0x42a500
  410892:	mov    rcx,QWORD PTR [r15]
  410895:	call   0x42a4e8
  41089a:	mov    rcx,QWORD PTR [r14]
  41089d:	call   0x42a4e8
  4108a2:	mov    rcx,r15
  4108a5:	call   0x42a4e8
  4108aa:	mov    rcx,r14
  4108ad:	call   0x42a4e8
  4108b2:	cmp    BYTE PTR [rsp+0x93],0x0
  4108ba:	jne    0x410a45
  4108c0:	add    rsp,0xa8
  4108c7:	pop    rbx
  4108c8:	pop    rsi
  4108c9:	pop    rdi
  4108ca:	pop    rbp
  4108cb:	pop    r12
  4108cd:	pop    r13
  4108cf:	pop    r14
  4108d1:	pop    r15
  4108d3:	ret    
  4108d4:	cmp    di,0x2
  4108d8:	jne    0x410940
  4108da:	movsxd r12,esi
  4108dd:	mov    rdx,QWORD PTR [r13+0x80]
  4108e4:	mov    r9d,DWORD PTR [rsp+0x50]
  4108e9:	mov    rax,r12
  4108ec:	mov    rcx,QWORD PTR [rsp+0xf8]
  4108f4:	shl    rax,0x4
  4108f8:	add    rax,r14
  4108fb:	sub    r9d,DWORD PTR [rax+0x8]
  4108ff:	mov    QWORD PTR [rsp+0x28],rdx
  410904:	lea    rdx,[rip+0x2ce11]        # 0x43d71c
  41090b:	mov    QWORD PTR [rsp+0x20],rdx
  410910:	mov    r8,QWORD PTR [rax]
  410913:	lea    rdx,[rip+0x2ce0c]        # 0x43d726
  41091a:	call   0x426370
  41091f:	add    r12,0x1
  410923:	shl    r12,0x4
  410927:	cmp    QWORD PTR [r14+r12*1],0x0
  41092c:	sete   al
  41092f:	movzx  r12d,al
  410933:	xor    eax,0x1
  410936:	movzx  eax,al
  410939:	jmp    0x410761
  41093e:	xchg   ax,ax
  410940:	movsxd r12,esi
  410943:	mov    rcx,QWORD PTR [rsp+0xf8]
  41094b:	lea    rdx,[rip+0x2cdbb]        # 0x43d70d
  410952:	mov    rax,r12
  410955:	shl    rax,0x4
  410959:	mov    r8,QWORD PTR [r14+rax*1]
  41095d:	call   0x426370
  410962:	jmp    0x41091f
  410964:	mov    r8,QWORD PTR [r13+0x70]
  410968:	mov    rcx,QWORD PTR [rsp+0xf8]
  410970:	lea    rdx,[rip+0x2cd9a]        # 0x43d711
  410977:	call   0x426370
  41097c:	jmp    0x410776
  410981:	cmp    BYTE PTR [rsp+0x78],0x0
  410986:	jne    0x4109f0
  410988:	cmp    di,0x2
  41098c:	je     0x4109a2
  41098e:	mov    rax,QWORD PTR [rsp+0x68]
  410993:	xor    edx,edx
  410995:	mov    rax,QWORD PTR [rax]
  410998:	cmp    BYTE PTR [rax+0xb],0x0
  41099c:	jne    0x410643
  4109a2:	xor    ecx,ecx
  4109a4:	mov    rax,QWORD PTR [rsp+0xf8]
  4109ac:	mov    edx,DWORD PTR [rsp+0x80]
  4109b3:	xor    r8d,r8d
  4109b6:	mov    r9d,DWORD PTR [rsp+0x48]
  4109bb:	mov    DWORD PTR [rsp+0x28],ecx
  4109bf:	mov    rcx,r13
  4109c2:	mov    QWORD PTR [rsp+0x30],rax
  4109c7:	mov    eax,DWORD PTR [rsp+0x50]
  4109cb:	mov    DWORD PTR [rsp+0x20],eax
  4109cf:	call   0x40fc40
  4109d4:	mov    rsi,QWORD PTR [rsp+0x68]
  4109d9:	mov    eax,DWORD PTR [rsp+0x64]
  4109dd:	xor    edx,edx
  4109df:	div    DWORD PTR [rsi+0x10]
  4109e2:	jmp    0x410643
  4109e7:	nop    WORD PTR [rax+rax*1+0x0]
  4109f0:	xor    ecx,ecx
  4109f2:	mov    rax,QWORD PTR [rsp+0xf8]
  4109fa:	mov    r8d,DWORD PTR [rsp+0x8c]
  410a02:	mov    edx,DWORD PTR [rsp+0x80]
  410a09:	mov    r9d,DWORD PTR [rsp+0x48]
  410a0e:	mov    DWORD PTR [rsp+0x28],ecx
  410a12:	mov    rcx,r13
  410a15:	mov    QWORD PTR [rsp+0x30],rax
  410a1a:	mov    eax,DWORD PTR [rsp+0x50]
  410a1e:	lea    ebx,[r8+0x1]
  410a22:	mov    DWORD PTR [rsp+0x20],eax
  410a26:	call   0x40fc40
  410a2b:	mov    rsi,QWORD PTR [rsp+0x68]
  410a30:	mov    eax,DWORD PTR [rsp+0x64]
  410a34:	xor    edx,edx
  410a36:	mov    DWORD PTR [rsp+0x8c],ebx
  410a3d:	div    DWORD PTR [rsi+0x10]
  410a40:	jmp    0x410643
  410a45:	mov    rcx,QWORD PTR [rsp+0xf8]
  410a4d:	call   0x410290
  410a52:	jmp    0x4108c0
  410a57:	cmp    BYTE PTR [rax+0xb],0x0
  410a5b:	je     0x410373
  410a61:	cmp    BYTE PTR [rax+0xc],0x0
  410a65:	je     0x410373
  410a6b:	cmp    BYTE PTR [rsp+0x58],0x0
  410a70:	jne    0x4108c0
  410a76:	cmp    BYTE PTR [rax+0xd],0x0
  410a7a:	je     0x4108c0
  410a80:	mov    rcx,QWORD PTR [rsp+0xf8]
  410a88:	lea    rdx,[rip+0x2cc73]        # 0x43d702
  410a8f:	call   0x426370
  410a94:	jmp    0x4108c0
  410a99:	nop    DWORD PTR [rax+0x0]
  410aa0:	movzx  eax,BYTE PTR [rip+0x497d9]        # 0x45a280
  410aa7:	test   al,al
  410aa9:	jne    0x41082d
  410aaf:	mov    rax,QWORD PTR [rsp+0xf8]
  410ab7:	mov    r9d,DWORD PTR [rsp+0x48]
  410abc:	xor    r8d,r8d
  410abf:	mov    DWORD PTR [rsp+0x28],0x2
  410ac7:	mov    edx,0x2
  410acc:	mov    rcx,r13
  410acf:	mov    QWORD PTR [rsp+0x30],rax
  410ad4:	mov    eax,DWORD PTR [rsp+0x50]
  410ad8:	mov    DWORD PTR [rsp+0x20],eax
  410adc:	call   0x40fc40
  410ae1:	jmp    0x41082d
  410ae6:	mov    rdx,QWORD PTR [rsp+0xf8]
  410aee:	mov    ecx,0xa
  410af3:	call   0x42a500
  410af8:	mov    rax,QWORD PTR [rsp+0x68]
  410afd:	mov    rbx,QWORD PTR [rax+0x48]
  410b01:	test   rbx,rbx
  410b04:	je     0x410880
  410b0a:	jmp    0x410860
  410b0f:	nop
  410b10:	mov    QWORD PTR [rsp+0x80],0x0
  410b1c:	mov    QWORD PTR [rsp+0x78],0x20
  410b25:	mov    DWORD PTR [rsp+0x88],0x1
  410b30:	mov    DWORD PTR [rsp+0x48],0x0
  410b38:	jmp    0x410482
  410b3d:	xor    esi,esi
  410b3f:	mov    ecx,0x20
  410b44:	mov    DWORD PTR [rsp+0x70],0x1
  410b4c:	mov    DWORD PTR [rsp+0x50],0x0
  410b54:	jmp    0x410559
  410b59:	cmp    BYTE PTR [rsp+0x78],0x0
  410b5e:	je     0x4109a4
  410b64:	jmp    0x4109f2
  410b69:	nop    DWORD PTR [rax+0x0]
  410b70:	push   r15
  410b72:	push   r14
  410b74:	push   r13
  410b76:	push   r12
  410b78:	push   rbp
  410b79:	push   rdi
  410b7a:	push   rsi
  410b7b:	push   rbx
  410b7c:	sub    rsp,0x128
  410b83:	mov    rax,QWORD PTR [rcx]
  410b86:	mov    QWORD PTR [rsp+0x178],rdx
  410b8e:	mov    BYTE PTR [rsp+0x113],0x0
  410b96:	movzx  edi,BYTE PTR [rax+0xa]
  410b9a:	mov    r14d,DWORD PTR [rax+0x50]
  410b9e:	movzx  edx,WORD PTR [rax+0x6]
  410ba2:	mov    rax,QWORD PTR [rax+0x18]
  410ba6:	mov    BYTE PTR [rsp+0xff],dil
  410bae:	test   rax,rax
  410bb1:	mov    rdi,rax
  410bb4:	lea    rax,[rip+0x2d205]        # 0x43ddc0
  410bbb:	mov    rsi,rax
  410bbe:	movzx  eax,BYTE PTR [rip+0x496bb]        # 0x45a280
  410bc5:	cmovne rsi,rdi
  410bc9:	mov    QWORD PTR [rsp+0x90],rsi
  410bd1:	test   al,al
  410bd3:	jne    0x411022
  410bd9:	cmp    dx,0x2
  410bdd:	mov    eax,0x2
  410be2:	mov    QWORD PTR [rsp+0x78],rcx
  410be7:	cmovbe eax,edx
  410bea:	mov    WORD PTR [rsp+0x82],ax
  410bf2:	mov    eax,DWORD PTR [rcx+0x10]
  410bf5:	test   eax,eax
  410bf7:	jle    0x411386
  410bfd:	movsxd rsi,eax
  410c00:	mov    r15d,eax
  410c03:	mov    DWORD PTR [rsp+0xf8],eax
  410c0a:	lea    rbx,[rsi*4+0x0]
  410c12:	lea    rdi,[rsi*8+0x0]
  410c1a:	lea    r12,[rsp+0x114]
  410c22:	lea    rbp,[rsp+0x118]
  410c2a:	xor    r13d,r13d
  410c2d:	mov    rcx,rbx
  410c30:	call   0x424840
  410c35:	mov    rcx,rbx
  410c38:	mov    QWORD PTR [rsp+0xd8],rax
  410c40:	call   0x424840
  410c45:	mov    rcx,rbx
  410c48:	mov    QWORD PTR [rsp+0xd0],rax
  410c50:	call   0x424840
  410c55:	mov    rcx,rbx
  410c58:	mov    QWORD PTR [rsp+0xb8],rax
  410c60:	call   0x424840
  410c65:	mov    rcx,rbx
  410c68:	mov    QWORD PTR [rsp+0x68],rax
  410c6d:	call   0x424840
  410c72:	mov    rcx,rbx
  410c75:	mov    QWORD PTR [rsp+0xc0],rax
  410c7d:	call   0x424840
  410c82:	mov    rcx,rdi
  410c85:	mov    QWORD PTR [rsp+0xa0],rax
  410c8d:	call   0x424840
  410c92:	mov    rcx,rbx
  410c95:	mov    QWORD PTR [rsp+0x60],rax
  410c9a:	call   0x424840
  410c9f:	mov    rcx,rdi
  410ca2:	mov    QWORD PTR [rsp+0xc8],rax
  410caa:	lea    rdi,[rsp+0x11c]
  410cb2:	call   0x424840
  410cb7:	mov    rcx,rsi
  410cba:	mov    QWORD PTR [rsp+0xf0],rax
  410cc2:	xor    esi,esi
  410cc4:	call   0x424840
  410cc9:	mov    rcx,rbx
  410ccc:	mov    QWORD PTR [rsp+0xe0],rax
  410cd4:	call   0x424840
  410cd9:	mov    rcx,rbx
  410cdc:	mov    QWORD PTR [rsp+0xa8],rax
  410ce4:	call   0x424840
  410ce9:	mov    QWORD PTR [rsp+0xb0],rax
  410cf1:	mov    eax,r15d
  410cf4:	sub    eax,0x1
  410cf7:	lea    rbx,[rax*4+0x4]
  410cff:	mov    r15,rbx
  410d02:	mov    rax,QWORD PTR [rsp+0x78]
  410d07:	mov    rax,QWORD PTR [rax+0x18]
  410d0b:	mov    rbx,QWORD PTR [rax+r13*2]
  410d0f:	mov    rcx,rbx
  410d12:	call   0x42a400
  410d17:	mov    QWORD PTR [rsp+0x28],rdi
  410d1c:	mov    rdx,rax
  410d1f:	mov    QWORD PTR [rsp+0x20],rbp
  410d24:	mov    r9,r12
  410d27:	mov    r8d,r14d
  410d2a:	mov    rcx,rbx
  410d2d:	call   0x41c8e0
  410d32:	mov    rdx,QWORD PTR [rsp+0xb8]
  410d3a:	mov    eax,DWORD PTR [rsp+0x114]
  410d41:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d45:	jbe    0x410d4b
  410d47:	mov    DWORD PTR [rdx+r13*1],eax
  410d4b:	mov    rdx,QWORD PTR [rsp+0xc0]
  410d53:	mov    eax,DWORD PTR [rsp+0x118]
  410d5a:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d5e:	jbe    0x410d64
  410d60:	mov    DWORD PTR [rdx+r13*1],eax
  410d64:	mov    rdx,QWORD PTR [rsp+0xc8]
  410d6c:	mov    eax,DWORD PTR [rsp+0x11c]
  410d73:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d77:	jbe    0x410d7d
  410d79:	mov    DWORD PTR [rdx+r13*1],eax
  410d7d:	mov    eax,DWORD PTR [rsp+0x118]
  410d84:	mov    rdx,QWORD PTR [rsp+0xd8]
  410d8c:	cmp    esi,eax
  410d8e:	cmovb  esi,eax
  410d91:	mov    eax,DWORD PTR [rsp+0x114]
  410d98:	mov    DWORD PTR [rdx+r13*1],eax
  410d9c:	add    r13,0x4
  410da0:	cmp    r13,r15
  410da3:	jne    0x410d02
  410da9:	mov    BYTE PTR [rsp+0xfe],0x1
  410db1:	mov    rax,QWORD PTR [rsp+0x78]
  410db6:	mov    r13,QWORD PTR [rax+0x28]
  410dba:	mov    rbx,QWORD PTR [r13+0x0]
  410dbe:	test   rbx,rbx
  410dc1:	je     0x411036
  410dc7:	lea    r12,[rsp+0x114]
  410dcf:	lea    rdi,[rsp+0x11c]
  410dd7:	lea    rbp,[rsp+0x118]
  410ddf:	xor    r15d,r15d
  410de2:	mov    rcx,rbx
  410de5:	call   0x42a400
  410dea:	mov    rcx,rbx
  410ded:	mov    rdx,rax
  410df0:	mov    QWORD PTR [rsp+0x28],rdi
  410df5:	mov    QWORD PTR [rsp+0x20],rbp
  410dfa:	mov    r9,r12
  410dfd:	mov    r8d,r14d
  410e00:	call   0x41c8e0
  410e05:	xor    edx,edx
  410e07:	mov    eax,r15d
  410e0a:	mov    ecx,DWORD PTR [rsp+0x114]
  410e11:	div    DWORD PTR [rsp+0xf8]
  410e18:	mov    rax,QWORD PTR [rsp+0xb8]
  410e20:	mov    edx,edx
  410e22:	shl    rdx,0x2
  410e26:	add    rax,rdx
  410e29:	cmp    ecx,DWORD PTR [rax]
  410e2b:	jbe    0x410e2f
  410e2d:	mov    DWORD PTR [rax],ecx
  410e2f:	mov    rax,QWORD PTR [rsp+0xc0]
  410e37:	mov    ecx,DWORD PTR [rsp+0x118]
  410e3e:	add    rax,rdx
  410e41:	cmp    ecx,DWORD PTR [rax]
  410e43:	jbe    0x410e47
  410e45:	mov    DWORD PTR [rax],ecx
  410e47:	mov    rax,QWORD PTR [rsp+0xc8]
  410e4f:	mov    ecx,DWORD PTR [rsp+0x11c]
  410e56:	add    rax,rdx
  410e59:	cmp    ecx,DWORD PTR [rax]
  410e5b:	jbe    0x410e5f
  410e5d:	mov    DWORD PTR [rax],ecx
  410e5f:	mov    rcx,QWORD PTR [rsp+0xd0]
  410e67:	add    r13,0x8
  410e6b:	mov    eax,DWORD PTR [rsp+0x114]
  410e72:	add    r15d,0x1
  410e76:	add    DWORD PTR [rcx+rdx*1],eax
  410e79:	mov    rbx,QWORD PTR [r13+0x0]
  410e7d:	test   rbx,rbx
  410e80:	jne    0x410de2
  410e86:	test   r15d,r15d
  410e89:	je     0x411036
  410e8f:	cmp    BYTE PTR [rsp+0xfe],0x0
  410e97:	je     0x411036
  410e9d:	mov    eax,r15d
  410ea0:	xor    edx,edx
  410ea2:	mov    r9,QWORD PTR [rsp+0xd0]
  410eaa:	div    DWORD PTR [rsp+0xf8]
  410eb1:	xor    r8d,r8d
  410eb4:	mov    ecx,eax
  410eb6:	mov    eax,DWORD PTR [r9+r8*4]
  410eba:	xor    edx,edx
  410ebc:	div    ecx
  410ebe:	mov    DWORD PTR [r9+r8*4],eax
  410ec2:	add    r8,0x1
  410ec6:	cmp    DWORD PTR [rsp+0xf8],r8d
  410ece:	ja     0x410eb6
  410ed0:	cmp    WORD PTR [rsp+0x82],0x0
  410ed9:	jne    0x411048
  410edf:	mov    ebx,DWORD PTR [rsp+0xf8]
  410ee6:	jmp    0x411074
  410eeb:	mov    rdx,QWORD PTR [rsp+0x178]
  410ef3:	mov    ecx,0xa
  410ef8:	call   0x42a500
  410efd:	mov    rsi,QWORD PTR [rsp+0x108]
  410f05:	add    QWORD PTR [rsp+0xe8],rsi
  410f0d:	mov    rax,QWORD PTR [rsp+0xe8]
  410f15:	cmp    QWORD PTR [rax],0x0
  410f19:	je     0x410f2a
  410f1b:	movzx  eax,BYTE PTR [rip+0x4935e]        # 0x45a280
  410f22:	test   al,al
  410f24:	je     0x4111e4
  410f2a:	mov    rax,QWORD PTR [rsp+0x78]
  410f2f:	mov    rax,QWORD PTR [rax]
  410f32:	cmp    BYTE PTR [rax+0xc],0x0
  410f36:	jne    0x411968
  410f3c:	xor    ebx,ebx
  410f3e:	cmp    BYTE PTR [rsp+0xfe],0x0
  410f46:	je     0x410f74
  410f48:	mov    rsi,QWORD PTR [rsp+0xf0]
  410f50:	mov    rdi,QWORD PTR [rsp+0x60]
  410f55:	mov    rcx,QWORD PTR [rdi+rbx*8]
  410f59:	call   0x42a4e8
  410f5e:	mov    rcx,QWORD PTR [rsi+rbx*8]
  410f62:	add    rbx,0x1
  410f66:	call   0x42a4e8
  410f6b:	cmp    DWORD PTR [rsp+0xf8],ebx
  410f72:	ja     0x410f55
  410f74:	mov    rcx,QWORD PTR [rsp+0xd8]
  410f7c:	call   0x42a4e8
  410f81:	mov    rcx,QWORD PTR [rsp+0xd0]
  410f89:	call   0x42a4e8
  410f8e:	mov    rcx,QWORD PTR [rsp+0xb8]
  410f96:	call   0x42a4e8
  410f9b:	mov    rcx,QWORD PTR [rsp+0x68]
  410fa0:	call   0x42a4e8
  410fa5:	mov    rcx,QWORD PTR [rsp+0xc0]
  410fad:	call   0x42a4e8
  410fb2:	mov    rcx,QWORD PTR [rsp+0xa0]
  410fba:	call   0x42a4e8
  410fbf:	mov    rcx,QWORD PTR [rsp+0x60]
  410fc4:	call   0x42a4e8
  410fc9:	mov    rcx,QWORD PTR [rsp+0xc8]
  410fd1:	call   0x42a4e8
  410fd6:	mov    rcx,QWORD PTR [rsp+0xf0]
  410fde:	call   0x42a4e8
  410fe3:	mov    rcx,QWORD PTR [rsp+0xe0]
  410feb:	call   0x42a4e8
  410ff0:	mov    rcx,QWORD PTR [rsp+0xa8]
  410ff8:	call   0x42a4e8
  410ffd:	mov    rcx,QWORD PTR [rsp+0xb0]
  411005:	call   0x42a4e8
  41100a:	cmp    BYTE PTR [rsp+0x113],0x0
  411012:	je     0x411022
  411014:	mov    rcx,QWORD PTR [rsp+0x178]
  41101c:	call   0x410290
  411021:	nop
  411022:	add    rsp,0x128
  411029:	pop    rbx
  41102a:	pop    rsi
  41102b:	pop    rdi
  41102c:	pop    rbp
  41102d:	pop    r12
  41102f:	pop    r13
  411031:	pop    r14
  411033:	pop    r15
  411035:	ret    
  411036:	cmp    WORD PTR [rsp+0x82],0x0
  41103f:	mov    ebx,DWORD PTR [rsp+0xf8]
  411046:	je     0x411066
  411048:	mov    edx,DWORD PTR [rsp+0xf8]
  41104f:	movzx  edi,WORD PTR [rsp+0x82]
  411057:	lea    eax,[rdx+rdx*2-0x1]
  41105b:	lea    ebx,[rdx+rdx*2+0x1]
  41105f:	cmp    di,0x1
  411063:	cmove  ebx,eax
  411066:	cmp    BYTE PTR [rsp+0xfe],0x0
  41106e:	je     0x411c6d
  411074:	mov    edi,ebx
  411076:	xor    eax,eax
  411078:	mov    rdx,QWORD PTR [rsp+0xb8]
  411080:	add    ebx,DWORD PTR [rdx+rax*4]
  411083:	mov    rdx,QWORD PTR [rsp+0xd8]
  41108b:	add    edi,DWORD PTR [rdx+rax*4]
  41108e:	add    rax,0x1
  411092:	cmp    DWORD PTR [rsp+0xf8],eax
  411099:	ja     0x411078
  41109b:	mov    r13,QWORD PTR [rsp+0xc0]
  4110a3:	mov    r15,QWORD PTR [rsp+0xc8]
  4110ab:	xor    ebp,ebp
  4110ad:	mov    r12,QWORD PTR [rsp+0x60]
  4110b2:	mov    eax,DWORD PTR [r13+rbp*4+0x0]
  4110b7:	lea    ecx,[rax+0x1]
  4110ba:	shl    rcx,0x4
  4110be:	call   0x424840
  4110c3:	mov    QWORD PTR [r12+rbp*8],rax
  4110c7:	mov    eax,DWORD PTR [r15+rbp*4]
  4110cb:	lea    ecx,[rax+0x1]
  4110ce:	call   0x424800
  4110d3:	mov    rdx,QWORD PTR [rsp+0xf0]
  4110db:	mov    QWORD PTR [rdx+rbp*8],rax
  4110df:	mov    rdx,QWORD PTR [r12+rbp*8]
  4110e3:	add    rbp,0x1
  4110e7:	cmp    DWORD PTR [rsp+0xf8],ebp
  4110ee:	mov    QWORD PTR [rdx],rax
  4110f1:	ja     0x4110b2
  4110f3:	xor    eax,eax
  4110f5:	cmp    BYTE PTR [rsp+0xfe],0x0
  4110fd:	mov    rcx,QWORD PTR [rsp+0xb8]
  411105:	je     0x411120
  411107:	mov    edx,DWORD PTR [rcx+rax*4]
  41110a:	mov    r11,QWORD PTR [rsp+0x68]
  41110f:	mov    DWORD PTR [r11+rax*4],edx
  411113:	add    rax,0x1
  411117:	cmp    DWORD PTR [rsp+0xf8],eax
  41111e:	ja     0x411107
  411120:	mov    rax,QWORD PTR [rsp+0x78]
  411125:	mov    rax,QWORD PTR [rax]
  411128:	mov    ebp,DWORD PTR [rax+0x58]
  41112b:	test   ebp,ebp
  41112d:	jle    0x411c09
  411133:	cmp    DWORD PTR [rax],0x3
  411136:	je     0x411b3e
  41113c:	cmp    WORD PTR [rax+0x4],0x2
  411141:	jne    0x411153
  411143:	cmp    ebx,ebp
  411145:	ja     0x411ff8
  41114b:	cmp    ebp,edi
  41114d:	jb     0x411ff8
  411153:	movzx  edx,BYTE PTR [rsp+0x113]
  41115b:	test   dl,dl
  41115d:	je     0x411a1a
  411163:	cmp    BYTE PTR [rax+0xb],0x0
  411167:	je     0x411189
  411169:	mov    rax,QWORD PTR [rsp+0x78]
  41116e:	mov    rsi,QWORD PTR [rax+0x8]
  411172:	test   rsi,rsi
  411175:	je     0x41203d
  41117b:	cmp    BYTE PTR [rsp+0xff],0x0
  411183:	je     0x411c74
  411189:	mov    rax,QWORD PTR [rsp+0x78]
  41118e:	mov    rax,QWORD PTR [rax+0x28]
  411192:	cmp    QWORD PTR [rax],0x0
  411196:	mov    QWORD PTR [rsp+0xe8],rax
  41119e:	je     0x410f2a
  4111a4:	movzx  eax,BYTE PTR [rip+0x490d5]        # 0x45a280
  4111ab:	test   al,al
  4111ad:	jne    0x410f2a
  4111b3:	mov    esi,DWORD PTR [rsp+0xf8]
  4111ba:	mov    eax,esi
  4111bc:	lea    rdi,[rax*4+0x0]
  4111c4:	shl    rax,0x3
  4111c8:	mov    QWORD PTR [rsp+0x108],rax
  4111d0:	mov    eax,esi
  4111d2:	sub    eax,0x1
  4111d5:	mov    QWORD PTR [rsp+0x100],rdi
  4111dd:	mov    DWORD PTR [rsp+0x84],eax
  4111e4:	xor    ebx,ebx
  4111e6:	cmp    BYTE PTR [rsp+0xfe],0x0
  4111ee:	je     0x41124b
  4111f0:	mov    edi,DWORD PTR [rsp+0xf8]
  4111f7:	mov    rbp,QWORD PTR [rsp+0xc0]
  4111ff:	mov    r12,QWORD PTR [rsp+0xe8]
  411207:	mov    r13,QWORD PTR [rsp+0xa0]
  41120f:	mov    r15,QWORD PTR [rsp+0x60]
  411214:	mov    rsi,QWORD PTR [r12+rbx*8]
  411218:	mov    rcx,rsi
  41121b:	call   0x42a400
  411220:	mov    edx,DWORD PTR [rbp+rbx*4+0x0]
  411224:	mov    r9,QWORD PTR [r15+rbx*8]
  411228:	mov    r8d,r14d
  41122b:	mov    rcx,rsi
  41122e:	mov    DWORD PTR [rsp+0x20],edx
  411232:	mov    rdx,rax
  411235:	call   0x41ca80
  41123a:	mov    DWORD PTR [r13+rbx*4+0x0],0x0
  411243:	add    rbx,0x1
  411247:	cmp    edi,ebx
  411249:	ja     0x411214
  41124b:	mov    r8,QWORD PTR [rsp+0x100]
  411253:	mov    rcx,QWORD PTR [rsp+0xa8]
  41125b:	xor    edx,edx
  41125d:	call   0x42a480
  411262:	cmp    WORD PTR [rsp+0x82],0x2
  41126b:	je     0x41187a
  411271:	cmp    BYTE PTR [rsp+0xfe],0x0
  411279:	je     0x410eeb
  41127f:	mov    rax,QWORD PTR [rsp+0xa0]
  411287:	mov    DWORD PTR [rsp+0x70],0x1
  41128f:	xor    r15d,r15d
  411292:	mov    BYTE PTR [rsp+0xfd],0x0
  41129a:	mov    QWORD PTR [rsp+0x58],rax
  41129f:	mov    rax,QWORD PTR [rsp+0xa8]
  4112a7:	mov    QWORD PTR [rsp+0x48],rax
  4112ac:	mov    rax,QWORD PTR [rsp+0xb0]
  4112b4:	mov    QWORD PTR [rsp+0x50],rax
  4112b9:	nop    DWORD PTR [rax+0x0]
  4112c0:	mov    rax,QWORD PTR [rsp+0x58]
  4112c5:	mov    r12d,DWORD PTR [rax]
  4112c8:	mov    rax,QWORD PTR [rsp+0x60]
  4112cd:	shl    r12,0x4
  4112d1:	add    r12,QWORD PTR [rax+r15*8]
  4112d5:	mov    rax,QWORD PTR [rsp+0x68]
  4112da:	mov    ebp,DWORD PTR [rax+r15*4]
  4112de:	movzx  eax,WORD PTR [rsp+0x82]
  4112e6:	cmp    ax,0x2
  4112ea:	je     0x411680
  4112f0:	xor    edx,edx
  4112f2:	cmp    DWORD PTR [rsp+0x84],r15d
  4112fa:	seta   dl
  4112fd:	test   ax,ax
  411300:	mov    DWORD PTR [rsp+0x88],edx
  411307:	jne    0x41168b
  41130d:	mov    rax,QWORD PTR [r12]
  411311:	test   rax,rax
  411314:	je     0x4116c3
  41131a:	mov    rdx,QWORD PTR [rsp+0x48]
  41131f:	movsxd r13,DWORD PTR [rdx]
  411322:	add    r13,rax
  411325:	mov    rcx,r13
  411328:	call   0x42a400
  41132d:	lea    rdi,[r13+rax*1+0x0]
  411332:	cmp    r13,rdi
  411335:	jae    0x411943
  41133b:	mov    edx,r14d
  41133e:	mov    rcx,r13
  411341:	mov    rbx,r13
  411344:	call   0x427f28
  411349:	mov    esi,eax
  41134b:	nop    DWORD PTR [rax+rax*1+0x0]
  411350:	mov    rcx,rbx
  411353:	mov    edx,r14d
  411356:	call   0x427e88
  41135b:	cdqe   
  41135d:	add    rbx,rax
  411360:	cmp    rdi,rbx
  411363:	jbe    0x411430
  411369:	mov    edx,r14d
  41136c:	mov    rcx,rbx
  41136f:	call   0x427f28
  411374:	add    eax,esi
  411376:	cmp    ebp,eax
  411378:	jge    0x411382
  41137a:	test   esi,esi
  41137c:	jne    0x411430
  411382:	mov    esi,eax
  411384:	jmp    0x411350
  411386:	mov    BYTE PTR [rsp+0xfe],0x0
  41138e:	mov    QWORD PTR [rsp+0xb0],0x0
  41139a:	xor    esi,esi
  41139c:	mov    QWORD PTR [rsp+0xa8],0x0
  4113a8:	mov    QWORD PTR [rsp+0xe0],0x0
  4113b4:	mov    QWORD PTR [rsp+0x60],0x0
  4113bd:	mov    QWORD PTR [rsp+0xf0],0x0
  4113c9:	mov    QWORD PTR [rsp+0xc8],0x0
  4113d5:	mov    QWORD PTR [rsp+0xa0],0x0
  4113e1:	mov    QWORD PTR [rsp+0xc0],0x0
  4113ed:	mov    QWORD PTR [rsp+0xd0],0x0
  4113f9:	mov    QWORD PTR [rsp+0x68],0x0
  411402:	mov    QWORD PTR [rsp+0xb8],0x0
  41140e:	mov    QWORD PTR [rsp+0xd8],0x0
  41141a:	mov    DWORD PTR [rsp+0xf8],0x0
  411425:	jmp    0x410db1
  41142a:	nop    WORD PTR [rax+rax*1+0x0]
  411430:	mov    rax,QWORD PTR [rsp+0x68]
  411435:	sub    rbx,r13
  411438:	mov    ebp,esi
  41143a:	mov    DWORD PTR [rsp+0x8c],ebx
  411441:	mov    r8d,DWORD PTR [rax+r15*4]
  411445:	cmp    esi,r8d
  411448:	jbe    0x41144d
  41144a:	mov    ebp,r8d
  41144d:	movsxd r10,ebx
  411450:	lea    rbx,[r10-0x1]
  411454:	mov    rax,QWORD PTR [rsp+0x78]
  411459:	mov    rax,QWORD PTR [rax+0x58]
  41145d:	cmp    BYTE PTR [rax+r15*1],0x72
  411462:	je     0x4117d1
  411468:	mov    rax,QWORD PTR [rsp+0x48]
  41146d:	mov    r13,QWORD PTR [rsp+0x178]
  411475:	movsxd rsi,DWORD PTR [rax]
  411478:	mov    rax,rsi
  41147b:	add    rsi,QWORD PTR [r12]
  41147f:	test   r10,r10
  411482:	je     0x4114ac
  411484:	xor    edi,edi
  411486:	add    rbx,0x1
  41148a:	nop    WORD PTR [rax+rax*1+0x0]
  411490:	movsx  ecx,BYTE PTR [rsi+rdi*1]
  411494:	mov    rdx,r13
  411497:	add    rdi,0x1
  41149b:	call   0x42a500
  4114a0:	cmp    rbx,rdi
  4114a3:	jne    0x411490
  4114a5:	mov    rax,QWORD PTR [rsp+0x48]
  4114aa:	mov    eax,DWORD PTR [rax]
  4114ac:	mov    edi,DWORD PTR [rsp+0x8c]
  4114b3:	add    edi,eax
  4114b5:	mov    rax,QWORD PTR [rsp+0x48]
  4114ba:	mov    DWORD PTR [rax],edi
  4114bc:	mov    rax,QWORD PTR [r12]
  4114c0:	movsxd rdi,edi
  4114c3:	cmp    BYTE PTR [rax+rdi*1],0x0
  4114c7:	jne    0x4117a1
  4114cd:	mov    rdx,QWORD PTR [rsp+0x58]
  4114d2:	mov    eax,DWORD PTR [rdx]
  4114d4:	mov    DWORD PTR [rsp+0x8c],eax
  4114db:	add    eax,0x1
  4114de:	mov    DWORD PTR [rdx],eax
  4114e0:	mov    rdx,QWORD PTR [rsp+0x60]
  4114e5:	shl    rax,0x4
  4114e9:	add    rax,QWORD PTR [rdx+r15*8]
  4114ed:	movzx  edx,BYTE PTR [rsp+0xfd]
  4114f5:	cmp    QWORD PTR [rax],0x0
  4114f9:	mov    eax,0x1
  4114fe:	cmovne edx,eax
  411501:	mov    rax,QWORD PTR [rsp+0x48]
  411506:	mov    BYTE PTR [rsp+0xfd],dl
  41150d:	mov    DWORD PTR [rax],0x0
  411513:	mov    rax,QWORD PTR [rsp+0x50]
  411518:	mov    rsi,QWORD PTR [rsp+0x60]
  41151d:	mov    DWORD PTR [rax],0x0
  411523:	mov    rax,QWORD PTR [rsp+0x58]
  411528:	mov    eax,DWORD PTR [rax]
  41152a:	mov    rdx,rax
  41152d:	shl    rax,0x4
  411531:	add    rax,QWORD PTR [rsi+r15*8]
  411535:	cmp    QWORD PTR [rax],0x0
  411539:	je     0x411744
  41153f:	mov    rax,QWORD PTR [rsp+0x48]
  411544:	mov    ecx,DWORD PTR [rax]
  411546:	test   ecx,ecx
  411548:	je     0x411700
  41154e:	mov    rax,QWORD PTR [rsp+0x50]
  411553:	mov    DWORD PTR [rax],0x1
  411559:	mov    rax,QWORD PTR [rsp+0x78]
  41155e:	mov    rax,QWORD PTR [rax+0x58]
  411562:	cmp    BYTE PTR [rax+r15*1],0x72
  411567:	je     0x411780
  41156d:	mov    rax,QWORD PTR [rsp+0x68]
  411572:	mov    rcx,QWORD PTR [rsp+0x178]
  41157a:	lea    r9,[rip+0x2c19b]        # 0x43d71c
  411581:	lea    rdx,[rip+0x2c195]        # 0x43d71d
  411588:	mov    eax,DWORD PTR [rax+r15*4]
  41158c:	mov    r8d,eax
  41158f:	mov    DWORD PTR [rsp+0x88],eax
  411596:	sub    r8d,ebp
  411599:	call   0x426370
  41159e:	mov    rax,QWORD PTR [rsp+0x50]
  4115a3:	mov    eax,DWORD PTR [rax]
  4115a5:	cmp    eax,0x1
  4115a8:	je     0x411780
  4115ae:	cmp    eax,0x2
  4115b1:	je     0x411723
  4115b7:	cmp    WORD PTR [rsp+0x82],0x2
  4115c0:	je     0x4115cc
  4115c2:	cmp    DWORD PTR [rsp+0x84],r15d
  4115ca:	jbe    0x411646
  4115cc:	mov    rdx,QWORD PTR [rsp+0x178]
  4115d4:	mov    ecx,0x20
  4115d9:	call   0x42a500
  4115de:	cmp    WORD PTR [rsp+0x82],0x0
  4115e7:	je     0x411646
  4115e9:	cmp    DWORD PTR [rsp+0x84],r15d
  4115f1:	jbe    0x411646
  4115f3:	mov    rax,QWORD PTR [rsp+0x50]
  4115f8:	mov    eax,DWORD PTR [rax+0x4]
  4115fb:	cmp    eax,0x1
  4115fe:	je     0x4118e8
  411604:	cmp    eax,0x2
  411607:	je     0x411909
  41160d:	mov    rax,QWORD PTR [rsp+0x58]
  411612:	mov    rdx,QWORD PTR [rsp+0x60]
  411617:	mov    eax,DWORD PTR [rax+0x4]
  41161a:	shl    rax,0x4
  41161e:	add    rax,QWORD PTR [rdx+r15*8+0x8]
  411623:	cmp    QWORD PTR [rax],0x0
  411627:	mov    rax,QWORD PTR [rsp+0x90]
  41162f:	je     0x41192a
  411635:	mov    rcx,QWORD PTR [rax+0x78]
  411639:	mov    rdx,QWORD PTR [rsp+0x178]
  411641:	call   0x42a4f8
  411646:	mov    edx,DWORD PTR [rsp+0x70]
  41164a:	add    r15,0x1
  41164e:	add    QWORD PTR [rsp+0x58],0x4
  411654:	add    QWORD PTR [rsp+0x48],0x4
  41165a:	add    QWORD PTR [rsp+0x50],0x4
  411660:	mov    eax,edx
  411662:	add    eax,0x1
  411665:	cmp    edx,DWORD PTR [rsp+0xf8]
  41166c:	jae    0x411840
  411672:	mov    DWORD PTR [rsp+0x70],eax
  411676:	jmp    0x4112c0
  41167b:	nop    DWORD PTR [rax+rax*1+0x0]
  411680:	mov    DWORD PTR [rsp+0x88],0x1
  41168b:	mov    rax,QWORD PTR [rsp+0x50]
  411690:	mov    eax,DWORD PTR [rax]
  411692:	cmp    eax,0x1
  411695:	je     0x4118c7
  41169b:	cmp    eax,0x2
  41169e:	je     0x4117b0
  4116a4:	mov    rdx,QWORD PTR [rsp+0x178]
  4116ac:	mov    ecx,0x20
  4116b1:	call   0x42a500
  4116b6:	mov    rax,QWORD PTR [r12]
  4116ba:	test   rax,rax
  4116bd:	jne    0x41131a
  4116c3:	mov    r8d,DWORD PTR [rsp+0x88]
  4116cb:	test   r8d,r8d
  4116ce:	je     0x411513
  4116d4:	mov    rcx,QWORD PTR [rsp+0x178]
  4116dc:	lea    r9,[rip+0x2c039]        # 0x43d71c
  4116e3:	lea    rdx,[rip+0x2c033]        # 0x43d71d
  4116ea:	mov    r8d,ebp
  4116ed:	call   0x426370
  4116f2:	jmp    0x411513
  4116f7:	nop    WORD PTR [rax+rax*1+0x0]
  411700:	test   edx,edx
  411702:	je     0x411744
  411704:	mov    rax,QWORD PTR [rsp+0x50]
  411709:	mov    DWORD PTR [rax],0x2
  41170f:	mov    rax,QWORD PTR [rsp+0x78]
  411714:	mov    rax,QWORD PTR [rax+0x58]
  411718:	cmp    BYTE PTR [rax+r15*1],0x72
  41171d:	jne    0x41156d
  411723:	mov    rax,QWORD PTR [rsp+0x90]
  41172b:	mov    rdx,QWORD PTR [rsp+0x178]
  411733:	mov    rcx,QWORD PTR [rax+0xb8]
  41173a:	call   0x42a4f8
  41173f:	jmp    0x4115de
  411744:	mov    rax,QWORD PTR [rsp+0x78]
  411749:	mov    rax,QWORD PTR [rax+0x58]
  41174d:	cmp    BYTE PTR [rax+r15*1],0x72
  411752:	je     0x4115b7
  411758:	mov    eax,DWORD PTR [rsp+0x88]
  41175f:	test   eax,eax
  411761:	jne    0x41156d
  411767:	mov    rax,QWORD PTR [rsp+0x50]
  41176c:	mov    eax,DWORD PTR [rax]
  41176e:	cmp    eax,0x1
  411771:	jne    0x4115ae
  411777:	nop    WORD PTR [rax+rax*1+0x0]
  411780:	mov    rax,QWORD PTR [rsp+0x90]
  411788:	mov    rdx,QWORD PTR [rsp+0x178]
  411790:	mov    rcx,QWORD PTR [rax+0xc8]
  411797:	call   0x42a4f8
  41179c:	jmp    0x4115de
  4117a1:	mov    BYTE PTR [rsp+0xfd],0x1
  4117a9:	jmp    0x411513
  4117ae:	xchg   ax,ax
  4117b0:	mov    rax,QWORD PTR [rsp+0x90]
  4117b8:	mov    rdx,QWORD PTR [rsp+0x178]
  4117c0:	mov    rcx,QWORD PTR [rax+0xb0]
  4117c7:	call   0x42a4f8
  4117cc:	jmp    0x41130d
  4117d1:	mov    rcx,QWORD PTR [rsp+0x178]
  4117d9:	lea    r9,[rip+0x2bf3c]        # 0x43d71c
  4117e0:	lea    rdx,[rip+0x2bf36]        # 0x43d71d
  4117e7:	sub    r8d,ebp
  4117ea:	mov    QWORD PTR [rsp+0x98],r10
  4117f2:	call   0x426370
  4117f7:	mov    rax,QWORD PTR [rsp+0x48]
  4117fc:	mov    r10,QWORD PTR [rsp+0x98]
  411804:	mov    r13,QWORD PTR [rsp+0x178]
  41180c:	movsxd rsi,DWORD PTR [rax]
  41180f:	mov    rax,rsi
  411812:	add    rsi,QWORD PTR [r12]
  411816:	test   r10,r10
  411819:	je     0x4114ac
  41181f:	xor    edi,edi
  411821:	add    rbx,0x1
  411825:	movsx  ecx,BYTE PTR [rsi+rdi*1]
  411829:	mov    rdx,r13
  41182c:	add    rdi,0x1
  411830:	call   0x42a500
  411835:	cmp    rdi,rbx
  411838:	jne    0x411825
  41183a:	jmp    0x4114a5
  41183f:	nop
  411840:	cmp    WORD PTR [rsp+0x82],0x2
  411849:	je     0x4118a9
  41184b:	mov    rdx,QWORD PTR [rsp+0x178]
  411853:	mov    ecx,0xa
  411858:	call   0x42a500
  41185d:	cmp    BYTE PTR [rsp+0xfd],0x0
  411865:	je     0x410efd
  41186b:	cmp    WORD PTR [rsp+0x82],0x2
  411874:	jne    0x411271
  41187a:	mov    rax,QWORD PTR [rsp+0x90]
  411882:	mov    rdx,QWORD PTR [rsp+0x178]
  41188a:	mov    rcx,QWORD PTR [rax+0x70]
  41188e:	call   0x42a4f8
  411893:	cmp    BYTE PTR [rsp+0xfe],0x0
  41189b:	jne    0x41127f
  4118a1:	mov    BYTE PTR [rsp+0xfd],0x0
  4118a9:	mov    rax,QWORD PTR [rsp+0x90]
  4118b1:	mov    rdx,QWORD PTR [rsp+0x178]
  4118b9:	mov    rcx,QWORD PTR [rax+0x80]
  4118c0:	call   0x42a4f8
  4118c5:	jmp    0x41184b
  4118c7:	mov    rax,QWORD PTR [rsp+0x90]
  4118cf:	mov    rdx,QWORD PTR [rsp+0x178]
  4118d7:	mov    rcx,QWORD PTR [rax+0xc0]
  4118de:	call   0x42a4f8
  4118e3:	jmp    0x41130d
  4118e8:	mov    rax,QWORD PTR [rsp+0x90]
  4118f0:	mov    rdx,QWORD PTR [rsp+0x178]
  4118f8:	mov    rcx,QWORD PTR [rax+0x90]
  4118ff:	call   0x42a4f8
  411904:	jmp    0x411646
  411909:	mov    rax,QWORD PTR [rsp+0x90]
  411911:	mov    rdx,QWORD PTR [rsp+0x178]
  411919:	mov    rcx,QWORD PTR [rax+0x88]
  411920:	call   0x42a4f8
  411925:	jmp    0x411646
  41192a:	mov    rcx,QWORD PTR [rax+0x98]
  411931:	mov    rdx,QWORD PTR [rsp+0x178]
  411939:	call   0x42a4f8
  41193e:	jmp    0x411646
  411943:	mov    rax,QWORD PTR [rsp+0x68]
  411948:	xor    r10d,r10d
  41194b:	mov    rbx,0xffffffffffffffff
  411952:	mov    DWORD PTR [rsp+0x8c],0x0
  41195d:	xor    ebp,ebp
  41195f:	mov    r8d,DWORD PTR [rax+r15*4]
  411963:	jmp    0x411454
  411968:	mov    rcx,QWORD PTR [rsp+0x78]
  41196d:	call   0x40ff10
  411972:	cmp    WORD PTR [rsp+0x82],0x2
  41197b:	mov    rbx,rax
  41197e:	je     0x4119d3
  411980:	test   rbx,rbx
  411983:	je     0x41199a
  411985:	cmp    BYTE PTR [rsp+0xff],0x0
  41198d:	jne    0x41199a
  41198f:	movzx  eax,BYTE PTR [rip+0x488ea]        # 0x45a280
  411996:	test   al,al
  411998:	je     0x4119b1
  41199a:	mov    rdx,QWORD PTR [rsp+0x178]
  4119a2:	mov    ecx,0xa
  4119a7:	call   0x42a500
  4119ac:	jmp    0x410f3c
  4119b1:	mov    r8,QWORD PTR [rbx]
  4119b4:	mov    rcx,QWORD PTR [rsp+0x178]
  4119bc:	lea    rdx,[rip+0x2bd4a]        # 0x43d70d
  4119c3:	call   0x426370
  4119c8:	mov    rbx,QWORD PTR [rbx+0x8]
  4119cc:	test   rbx,rbx
  4119cf:	jne    0x4119b1
  4119d1:	jmp    0x41199a
  4119d3:	movzx  eax,BYTE PTR [rip+0x488a6]        # 0x45a280
  4119da:	test   al,al
  4119dc:	jne    0x411980
  4119de:	mov    rax,QWORD PTR [rsp+0x178]
  4119e6:	mov    rdx,QWORD PTR [rsp+0x68]
  4119eb:	mov    r9d,0x2
  4119f1:	mov    ecx,DWORD PTR [rsp+0xf8]
  4119f8:	mov    r8d,0x2
  4119fe:	mov    QWORD PTR [rsp+0x28],rax
  411a03:	mov    rax,QWORD PTR [rsp+0x90]
  411a0b:	mov    QWORD PTR [rsp+0x20],rax
  411a10:	call   0x42bc20
  411a15:	jmp    0x411980
  411a1a:	call   QWORD PTR [rip+0x4b194]        # 0x45cbb4
  411a20:	add    rax,0x30
  411a24:	cmp    QWORD PTR [rsp+0x178],rax
  411a2c:	jne    0x411a3e
  411a2e:	cmp    ebx,ebp
  411a30:	ja     0x41200f
  411a36:	cmp    ebp,edi
  411a38:	jb     0x41200f
  411a3e:	cmp    BYTE PTR [rsp+0x113],0x0
  411a46:	mov    rax,QWORD PTR [rsp+0x78]
  411a4b:	jne    0x411b36
  411a51:	mov    r10,QWORD PTR [rax+0x28]
  411a55:	mov    r11,QWORD PTR [r10]
  411a58:	test   r11,r11
  411a5b:	je     0x411b0c
  411a61:	lea    r12,[rsp+0x114]
  411a69:	lea    rdi,[rsp+0x11c]
  411a71:	lea    rbp,[rsp+0x118]
  411a79:	xor    r13d,r13d
  411a7c:	xor    r15d,r15d
  411a7f:	mov    rcx,r11
  411a82:	mov    QWORD PTR [rsp+0x50],r10
  411a87:	mov    QWORD PTR [rsp+0x48],r11
  411a8c:	call   0x42a400
  411a91:	mov    r11,QWORD PTR [rsp+0x48]
  411a96:	mov    rdx,rax
  411a99:	mov    QWORD PTR [rsp+0x28],rdi
  411a9e:	mov    QWORD PTR [rsp+0x20],rbp
  411aa3:	mov    r9,r12
  411aa6:	mov    r8d,r14d
  411aa9:	mov    rcx,r11
  411aac:	call   0x41c8e0
  411ab1:	mov    eax,DWORD PTR [rsp+0x114]
  411ab8:	mov    r10,QWORD PTR [rsp+0x50]
  411abd:	test   eax,eax
  411abf:	jle    0x411ae5
  411ac1:	mov    rcx,QWORD PTR [rsp+0x68]
  411ac6:	mov    edx,r15d
  411ac9:	mov    ecx,DWORD PTR [rcx+rdx*4]
  411acc:	test   ecx,ecx
  411ace:	je     0x411ae5
  411ad0:	sub    eax,0x1
  411ad3:	xor    edx,edx
  411ad5:	div    ecx
  411ad7:	add    eax,DWORD PTR [rsp+0x118]
  411ade:	cmp    r13d,eax
  411ae1:	cmovb  r13d,eax
  411ae5:	add    r15d,0x1
  411ae9:	cmp    r15d,DWORD PTR [rsp+0xf8]
  411af1:	jb     0x411afc
  411af3:	add    esi,r13d
  411af6:	xor    r15d,r15d
  411af9:	xor    r13d,r13d
  411afc:	add    r10,0x8
  411b00:	mov    r11,QWORD PTR [r10]
  411b03:	test   r11,r11
  411b06:	jne    0x411a7f
  411b0c:	mov    rdi,QWORD PTR [rsp+0x78]
  411b11:	lea    rax,[rsp+0x113]
  411b19:	lea    r9,[rsp+0x178]
  411b21:	xor    r8d,r8d
  411b24:	mov    edx,esi
  411b26:	mov    QWORD PTR [rsp+0x20],rax
  411b2b:	mov    rcx,rdi
  411b2e:	call   0x4101d0
  411b33:	mov    rax,rdi
  411b36:	mov    rax,QWORD PTR [rax]
  411b39:	jmp    0x411163
  411b3e:	cmp    ebp,edi
  411b40:	jb     0x41113c
  411b46:	cmp    ebp,ebx
  411b48:	jae    0x41113c
  411b4e:	cmp    BYTE PTR [rsp+0xfe],0x0
  411b56:	movsd  xmm3,QWORD PTR [rip+0x2c33a]        # 0x43de98
  411b5e:	mov    r9,QWORD PTR [rsp+0x68]
  411b63:	je     0x41113c
  411b69:	pxor   xmm2,xmm2
  411b6d:	xor    eax,eax
  411b6f:	mov    rdx,0xffffffffffffffff
  411b76:	mov    rcx,QWORD PTR [rsp+0xd0]
  411b7e:	mov    ecx,DWORD PTR [rcx+rax*4]
  411b81:	test   ecx,ecx
  411b83:	je     0x411bda
  411b85:	mov    r11,QWORD PTR [rsp+0xd8]
  411b8d:	mov    r8d,DWORD PTR [r9+rax*4]
  411b91:	cmp    r8d,DWORD PTR [r11+rax*4]
  411b95:	jbe    0x411bda
  411b97:	pxor   xmm0,xmm0
  411b9b:	pxor   xmm1,xmm1
  411b9f:	cvtsi2sd xmm0,r8
  411ba4:	cvtsi2sd xmm1,rcx
  411ba9:	mov    rcx,QWORD PTR [rsp+0xb8]
  411bb1:	mov    ecx,DWORD PTR [rcx+rax*4]
  411bb4:	divsd  xmm0,xmm1
  411bb8:	movapd xmm1,xmm0
  411bbc:	pxor   xmm0,xmm0
  411bc0:	cvtsi2sd xmm0,rcx
  411bc5:	mulsd  xmm0,xmm3
  411bc9:	addsd  xmm0,xmm1
  411bcd:	ucomisd xmm0,xmm2
  411bd1:	jbe    0x411bda
  411bd3:	movapd xmm2,xmm0
  411bd7:	movsxd rdx,eax
  411bda:	add    rax,0x1
  411bde:	cmp    DWORD PTR [rsp+0xf8],eax
  411be5:	ja     0x411b76
  411be7:	cmp    edx,0xffffffff
  411bea:	je     0x411bfc
  411bec:	sub    ebx,0x1
  411bef:	sub    DWORD PTR [r9+rdx*4],0x1
  411bf4:	cmp    ebp,ebx
  411bf6:	jb     0x411b69
  411bfc:	mov    rax,QWORD PTR [rsp+0x78]
  411c01:	mov    rax,QWORD PTR [rax]
  411c04:	jmp    0x41113c
  411c09:	mov    r12,QWORD PTR [rip+0x4afa4]        # 0x45cbb4
  411c10:	call   r12
  411c13:	add    rax,0x30
  411c17:	cmp    QWORD PTR [rsp+0x178],rax
  411c1f:	je     0x411c54
  411c21:	cmp    BYTE PTR [rsp+0x113],0x0
  411c29:	je     0x411c4c
  411c2b:	mov    rax,QWORD PTR [rsp+0x78]
  411c30:	mov    rax,QWORD PTR [rax]
  411c33:	mov    ebp,DWORD PTR [rax+0x54]
  411c36:	test   ebp,ebp
  411c38:	jg     0x411133
  411c3e:	cmp    BYTE PTR [rsp+0x113],0x0
  411c46:	jne    0x411163
  411c4c:	call   r12
  411c4f:	jmp    0x411a3e
  411c54:	call   r12
  411c57:	lea    rcx,[rax+0x30]
  411c5b:	call   0x42a368
  411c60:	mov    ecx,eax
  411c62:	call   0x42a380
  411c67:	test   eax,eax
  411c69:	je     0x411c21
  411c6b:	jmp    0x411c2b
  411c6d:	mov    edi,ebx
  411c6f:	jmp    0x411120
  411c74:	mov    rcx,rsi
  411c77:	call   0x42a400
  411c7c:	lea    rdx,[rsp+0x11c]
  411c84:	lea    r9,[rsp+0x118]
  411c8c:	mov    QWORD PTR [rsp+0x28],0x0
  411c95:	mov    r8d,r14d
  411c98:	mov    rcx,rsi
  411c9b:	mov    QWORD PTR [rsp+0x20],rdx
  411ca0:	mov    rdx,rax
  411ca3:	call   0x41c8e0
  411ca8:	mov    eax,DWORD PTR [rsp+0x118]
  411caf:	cmp    eax,ebx
  411cb1:	jb     0x411fc2
  411cb7:	mov    rax,QWORD PTR [rsp+0x78]
  411cbc:	mov    rcx,QWORD PTR [rsp+0x178]
  411cc4:	lea    rdx,[rip+0x2ba42]        # 0x43d70d
  411ccb:	mov    r8,QWORD PTR [rax+0x8]
  411ccf:	call   0x426370
  411cd4:	cmp    WORD PTR [rsp+0x82],0x2
  411cdd:	jne    0x411d13
  411cdf:	mov    rax,QWORD PTR [rsp+0x178]
  411ce7:	mov    rdx,QWORD PTR [rsp+0x68]
  411cec:	xor    r9d,r9d
  411cef:	mov    ecx,DWORD PTR [rsp+0xf8]
  411cf6:	mov    r8d,0x2
  411cfc:	mov    QWORD PTR [rsp+0x28],rax
  411d01:	mov    rax,QWORD PTR [rsp+0x90]
  411d09:	mov    QWORD PTR [rsp+0x20],rax
  411d0e:	call   0x42bc20
  411d13:	xor    ebx,ebx
  411d15:	cmp    BYTE PTR [rsp+0xfe],0x0
  411d1d:	je     0x411d67
  411d1f:	mov    rdi,QWORD PTR [rsp+0xc0]
  411d27:	mov    rbp,QWORD PTR [rsp+0x78]
  411d2c:	mov    rax,QWORD PTR [rbp+0x18]
  411d30:	mov    rsi,QWORD PTR [rax+rbx*8]
  411d34:	mov    rcx,rsi
  411d37:	call   0x42a400
  411d3c:	mov    rdx,QWORD PTR [rsp+0x60]
  411d41:	mov    r8d,r14d
  411d44:	mov    rcx,rsi
  411d47:	mov    r9,QWORD PTR [rdx+rbx*8]
  411d4b:	mov    edx,DWORD PTR [rdi+rbx*4]
  411d4e:	add    rbx,0x1
  411d52:	mov    DWORD PTR [rsp+0x20],edx
  411d56:	mov    rdx,rax
  411d59:	call   0x41ca80
  411d5e:	cmp    DWORD PTR [rsp+0xf8],ebx
  411d65:	ja     0x411d2c
  411d67:	mov    edi,DWORD PTR [rsp+0xf8]
  411d6e:	mov    rcx,QWORD PTR [rsp+0xe0]
  411d76:	xor    edx,edx
  411d78:	mov    r12d,0x1
  411d7e:	mov    r8d,edi
  411d81:	lea    esi,[rdi-0x1]
  411d84:	mov    ebp,edi
  411d86:	call   0x42a480
  411d8b:	test   edi,edi
  411d8d:	mov    DWORD PTR [rsp+0x50],esi
  411d91:	je     0x411f83
  411d97:	movzx  edi,WORD PTR [rsp+0x82]
  411d9f:	mov    rsi,QWORD PTR [rsp+0x90]
  411da7:	cmp    di,0x2
  411dab:	lea    r15d,[r12-0x1]
  411db0:	je     0x4120ba
  411db6:	mov    rax,QWORD PTR [rsp+0x78]
  411dbb:	mov    edx,DWORD PTR [rax+0x10]
  411dbe:	test   edx,edx
  411dc0:	je     0x411f65
  411dc6:	movsxd r13,r15d
  411dc9:	xor    ebx,ebx
  411dcb:	shl    r13,0x4
  411dcf:	mov    QWORD PTR [rsp+0x48],r13
  411dd4:	jmp    0x411e7c
  411dd9:	add    r11,QWORD PTR [rsp+0x48]
  411dde:	mov    rax,QWORD PTR [rsp+0x68]
  411de3:	lea    r9,[rip+0x2b932]        # 0x43d71c
  411dea:	mov    rcx,QWORD PTR [rsp+0x178]
  411df2:	lea    rdx,[rip+0x2b948]        # 0x43d741
  411df9:	mov    r8d,DWORD PTR [rax+r8*4]
  411dfd:	lea    rax,[rip+0x2b918]        # 0x43d71c
  411e04:	sub    r8d,DWORD PTR [r11+0x8]
  411e08:	mov    QWORD PTR [rsp+0x58],r11
  411e0d:	mov    QWORD PTR [rsp+0x30],rax
  411e12:	lea    eax,[r8+0x1]
  411e16:	shr    r8d,1
  411e19:	shr    eax,1
  411e1b:	mov    DWORD PTR [rsp+0x28],eax
  411e1f:	mov    rax,QWORD PTR [r11]
  411e22:	mov    QWORD PTR [rsp+0x20],rax
  411e27:	call   0x426370
  411e2c:	mov    r11,QWORD PTR [rsp+0x58]
  411e31:	cmp    QWORD PTR [r11+0x10],0x0
  411e36:	je     0x412072
  411e3c:	test   di,di
  411e3f:	jne    0x411f12
  411e45:	cmp    BYTE PTR [rsi+0xd0],0x0
  411e4c:	je     0x411e6b
  411e4e:	cmp    BYTE PTR [r13+0x0],0x0
  411e53:	mov    rdx,QWORD PTR [rsp+0x178]
  411e5b:	je     0x412061
  411e61:	mov    ecx,0x20
  411e66:	call   0x42a500
  411e6b:	mov    rax,QWORD PTR [rsp+0x78]
  411e70:	add    ebx,0x1
  411e73:	cmp    DWORD PTR [rax+0x10],ebx
  411e76:	jbe    0x411f5b
  411e7c:	mov    rax,QWORD PTR [rsp+0x60]
  411e81:	mov    r8d,ebx
  411e84:	test   di,di
  411e87:	mov    r11,QWORD PTR [rax+r8*8]
  411e8b:	jne    0x411e9a
  411e8d:	test   ebx,ebx
  411e8f:	je     0x411ece
  411e91:	cmp    BYTE PTR [rsi+0xd0],0x0
  411e98:	jne    0x411ece
  411e9a:	test   r15d,r15d
  411e9d:	mov    rdx,QWORD PTR [rsp+0x178]
  411ea5:	lea    rcx,[rip+0x2b703]        # 0x43d5af
  411eac:	je     0x411eb5
  411eae:	mov    rcx,QWORD PTR [rsi+0xa0]
  411eb5:	mov    QWORD PTR [rsp+0x70],r11
  411eba:	mov    QWORD PTR [rsp+0x58],r8
  411ebf:	call   0x42a4f8
  411ec4:	mov    r11,QWORD PTR [rsp+0x70]
  411ec9:	mov    r8,QWORD PTR [rsp+0x58]
  411ece:	mov    rax,QWORD PTR [rsp+0xe0]
  411ed6:	lea    r13,[rax+r8*1]
  411eda:	cmp    BYTE PTR [r13+0x0],0x0
  411edf:	je     0x411dd9
  411ee5:	mov    rax,QWORD PTR [rsp+0x68]
  411eea:	mov    rcx,QWORD PTR [rsp+0x178]
  411ef2:	lea    r9,[rip+0x2b823]        # 0x43d71c
  411ef9:	lea    rdx,[rip+0x2b81d]        # 0x43d71d
  411f00:	mov    r8d,DWORD PTR [rax+r8*4]
  411f04:	call   0x426370
  411f09:	test   di,di
  411f0c:	je     0x411e45
  411f12:	cmp    BYTE PTR [r13+0x0],0x0
  411f17:	mov    rdx,QWORD PTR [rsp+0x178]
  411f1f:	je     0x412050
  411f25:	mov    ecx,0x20
  411f2a:	call   0x42a500
  411f2f:	cmp    DWORD PTR [rsp+0x50],ebx
  411f33:	jbe    0x411e6b
  411f39:	mov    rcx,QWORD PTR [rsi+0x78]
  411f3d:	mov    rdx,QWORD PTR [rsp+0x178]
  411f45:	add    ebx,0x1
  411f48:	call   0x42a4f8
  411f4d:	mov    rax,QWORD PTR [rsp+0x78]
  411f52:	cmp    DWORD PTR [rax+0x10],ebx
  411f55:	ja     0x411e7c
  411f5b:	cmp    di,0x2
  411f5f:	je     0x4120dd
  411f65:	mov    rdx,QWORD PTR [rsp+0x178]
  411f6d:	mov    ecx,0xa
  411f72:	add    r12d,0x1
  411f76:	call   0x42a500
  411f7b:	test   ebp,ebp
  411f7d:	jne    0x411da7
  411f83:	mov    rax,QWORD PTR [rsp+0x178]
  411f8b:	movzx  r8d,WORD PTR [rsp+0x82]
  411f94:	mov    r9d,0x1
  411f9a:	mov    rdx,QWORD PTR [rsp+0x68]
  411f9f:	mov    ecx,DWORD PTR [rsp+0xf8]
  411fa6:	mov    QWORD PTR [rsp+0x28],rax
  411fab:	mov    rax,QWORD PTR [rsp+0x90]
  411fb3:	mov    QWORD PTR [rsp+0x20],rax
  411fb8:	call   0x42bc20
  411fbd:	jmp    0x411189
  411fc2:	sub    ebx,eax
  411fc4:	mov    rax,QWORD PTR [rsp+0x78]
  411fc9:	mov    rcx,QWORD PTR [rsp+0x178]
  411fd1:	mov    r8d,ebx
  411fd4:	lea    r9,[rip+0x2b741]        # 0x43d71c
  411fdb:	lea    rdx,[rip+0x2b757]        # 0x43d739
  411fe2:	shr    r8d,1
  411fe5:	mov    rax,QWORD PTR [rax+0x8]
  411fe9:	mov    QWORD PTR [rsp+0x20],rax
  411fee:	call   0x426370
  411ff3:	jmp    0x411cd4
  411ff8:	mov    rdx,QWORD PTR [rsp+0x178]
  412000:	mov    rcx,QWORD PTR [rsp+0x78]
  412005:	call   0x4102f0
  41200a:	jmp    0x410f3c
  41200f:	mov    rdi,QWORD PTR [rsp+0x78]
  412014:	mov    ecx,0x7fffffff
  412019:	mov    rax,QWORD PTR [rdi]
  41201c:	movzx  edx,WORD PTR [rax+0x8]
  412020:	call   0x410150
  412025:	mov    BYTE PTR [rsp+0x113],0x1
  41202d:	mov    QWORD PTR [rsp+0x178],rax
  412035:	mov    rax,QWORD PTR [rdi]
  412038:	jmp    0x411163
  41203d:	cmp    BYTE PTR [rsp+0xff],0x0
  412045:	jne    0x411189
  41204b:	jmp    0x411cd4
  412050:	mov    rcx,QWORD PTR [rsi+0xa8]
  412057:	call   0x42a4f8
  41205c:	jmp    0x411f2f
  412061:	mov    rcx,QWORD PTR [rsi+0xa8]
  412068:	call   0x42a4f8
  41206d:	jmp    0x411e6b
  412072:	sub    ebp,0x1
  412075:	test   di,di
  412078:	mov    BYTE PTR [r13+0x0],0x1
  41207d:	je     0x4120a0
  41207f:	mov    rdx,QWORD PTR [rsp+0x178]
  412087:	mov    ecx,0x20
  41208c:	call   0x42a500
  412091:	jmp    0x411f2f
  412096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120a0:	cmp    BYTE PTR [rsi+0xd0],0x0
  4120a7:	je     0x411e6b
  4120ad:	mov    rdx,QWORD PTR [rsp+0x178]
  4120b5:	jmp    0x411e61
  4120ba:	mov    rcx,QWORD PTR [rsi+0x70]
  4120be:	mov    rdx,QWORD PTR [rsp+0x178]
  4120c6:	call   0x42a4f8
  4120cb:	mov    rax,QWORD PTR [rsp+0x78]
  4120d0:	mov    r9d,DWORD PTR [rax+0x10]
  4120d4:	test   r9d,r9d
  4120d7:	jne    0x411dc6
  4120dd:	mov    rcx,QWORD PTR [rsi+0x80]
  4120e4:	mov    rdx,QWORD PTR [rsp+0x178]
  4120ec:	call   0x42a4f8
  4120f1:	jmp    0x411f65
  4120f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412100:	push   rbp
  412101:	push   rdi
  412102:	push   rsi
  412103:	push   rbx
  412104:	sub    rsp,0x28
  412108:	mov    esi,DWORD PTR [rsp+0x70]
  41210c:	mov    rbx,rcx
  41210f:	mov    ebp,r9d
  412112:	mov    QWORD PTR [rcx],rdx
  412115:	mov    QWORD PTR [rcx+0x8],r8
  412119:	lea    edi,[r9+0x1]
  41211d:	mov    DWORD PTR [rbx+0x10],r9d
  412121:	mov    DWORD PTR [rcx+0x14],esi
  412124:	imul   esi,ebp
  412127:	movsxd rdi,edi
  41212a:	lea    rcx,[rdi*8+0x0]
  412132:	add    esi,0x1
  412135:	movsxd rsi,esi
  412138:	call   0x424840
  41213d:	lea    rcx,[rsi*8+0x0]
  412145:	mov    QWORD PTR [rbx+0x18],rax
  412149:	call   0x424840
  41214e:	mov    QWORD PTR [rbx+0x40],0x0
  412156:	mov    QWORD PTR [rbx+0x28],rax
  41215a:	mov    rcx,rdi
  41215d:	mov    QWORD PTR [rbx+0x48],0x0
  412165:	call   0x424840
  41216a:	mov    rdx,QWORD PTR [rbx+0x18]
  41216e:	mov    QWORD PTR [rbx+0x58],rax
  412172:	mov    QWORD PTR [rbx+0x60],rax
  412176:	mov    DWORD PTR [rbx+0x38],0x0
  41217d:	mov    QWORD PTR [rbx+0x20],rdx
  412181:	mov    rdx,QWORD PTR [rbx+0x28]
  412185:	mov    QWORD PTR [rbx+0x30],rdx
  412189:	mov    rdx,QWORD PTR [rbx+0x48]
  41218d:	mov    QWORD PTR [rbx+0x50],rdx
  412191:	add    rsp,0x28
  412195:	pop    rbx
  412196:	pop    rsi
  412197:	pop    rdi
  412198:	pop    rbp
  412199:	ret    
  41219a:	nop    WORD PTR [rax+rax*1+0x0]
  4121a0:	push   rbp
  4121a1:	push   rdi
  4121a2:	push   rsi
  4121a3:	push   rbx
  4121a4:	sub    rsp,0x28
  4121a8:	mov    rbx,rcx
  4121ab:	mov    edi,r9d
  4121ae:	mov    rcx,rdx
  4121b1:	movsxd r10,DWORD PTR [rbx+0x10]
  4121b5:	mov    rax,QWORD PTR [rbx+0x18]
  4121b9:	mov    rsi,QWORD PTR [rbx+0x20]
  4121bd:	lea    rax,[rax+r10*8]
  4121c1:	mov    rbp,r10
  4121c4:	cmp    rsi,rax
  4121c7:	jae    0x4121f1
  4121c9:	mov    rax,QWORD PTR [rbx]
  4121cc:	mov    edx,DWORD PTR [rax+0x50]
  4121cf:	call   0x41ccf0
  4121d4:	mov    QWORD PTR [rsi],rax
  4121d7:	mov    rax,QWORD PTR [rbx+0x60]
  4121db:	add    QWORD PTR [rbx+0x20],0x8
  4121e0:	mov    BYTE PTR [rax],dil
  4121e3:	add    QWORD PTR [rbx+0x60],0x1
  4121e8:	add    rsp,0x28
  4121ec:	pop    rbx
  4121ed:	pop    rsi
  4121ee:	pop    rdi
  4121ef:	pop    rbp
  4121f0:	ret    
  4121f1:	call   QWORD PTR [rip+0x4a9bd]        # 0x45cbb4
  4121f7:	lea    rdx,[rip+0x2b552]        # 0x43d750
  4121fe:	lea    rcx,[rax+0x60]
  412202:	mov    r8d,ebp
  412205:	call   0x426370
  41220a:	mov    ecx,0x1
  41220f:	call   0x42a540
  412214:	nop
  412215:	nop
  412216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412220:	push   rdi
  412221:	push   rsi
  412222:	push   rbx
  412223:	sub    rsp,0x20
  412227:	mov    rbx,rcx
  41222a:	mov    esi,r9d
  41222d:	mov    rcx,rdx
  412230:	mov    r8d,DWORD PTR [rbx+0x14]
  412234:	mov    edi,DWORD PTR [rbx+0x10]
  412237:	imul   edi,r8d
  41223b:	cmp    DWORD PTR [rbx+0x38],edi
  41223e:	jge    0x412298
  412240:	mov    rax,QWORD PTR [rbx]
  412243:	mov    rdi,QWORD PTR [rbx+0x30]
  412247:	mov    edx,DWORD PTR [rax+0x50]
  41224a:	call   0x41ccf0
  41224f:	test   sil,sil
  412252:	mov    QWORD PTR [rdi],rax
  412255:	je     0x412268
  412257:	mov    rax,QWORD PTR [rbx+0x40]
  41225b:	test   rax,rax
  41225e:	je     0x412280
  412260:	movsxd rdx,DWORD PTR [rbx+0x38]
  412264:	mov    BYTE PTR [rax+rdx*1],0x1
  412268:	add    QWORD PTR [rbx+0x30],0x8
  41226d:	add    DWORD PTR [rbx+0x38],0x1
  412271:	add    rsp,0x20
  412275:	pop    rbx
  412276:	pop    rsi
  412277:	pop    rdi
  412278:	ret    
  412279:	nop    DWORD PTR [rax+0x0]
  412280:	mov    ecx,DWORD PTR [rbx+0x14]
  412283:	imul   ecx,DWORD PTR [rbx+0x10]
  412287:	add    ecx,0x1
  41228a:	movsxd rcx,ecx
  41228d:	call   0x424840
  412292:	mov    QWORD PTR [rbx+0x40],rax
  412296:	jmp    0x412260
  412298:	call   QWORD PTR [rip+0x4a916]        # 0x45cbb4
  41229e:	lea    rdx,[rip+0x2b4f3]        # 0x43d798
  4122a5:	lea    rcx,[rax+0x60]
  4122a9:	mov    r8d,edi
  4122ac:	call   0x426370
  4122b1:	mov    ecx,0x1
  4122b6:	call   0x42a540
  4122bb:	nop
  4122bc:	nop    DWORD PTR [rax+0x0]
  4122c0:	push   rdi
  4122c1:	push   rsi
  4122c2:	push   rbx
  4122c3:	sub    rsp,0x20
  4122c7:	mov    rdi,rdx
  4122ca:	mov    rbx,rcx
  4122cd:	mov    ecx,0x10
  4122d2:	call   0x424840
  4122d7:	mov    rcx,rdi
  4122da:	mov    rsi,rax
  4122dd:	call   0x424900
  4122e2:	mov    QWORD PTR [rsi],rax
  4122e5:	cmp    QWORD PTR [rbx+0x48],0x0
  4122ea:	je     0x412300
  4122ec:	mov    rax,QWORD PTR [rbx+0x50]
  4122f0:	mov    QWORD PTR [rax+0x8],rsi
  4122f4:	mov    QWORD PTR [rbx+0x50],rsi
  4122f8:	add    rsp,0x20
  4122fc:	pop    rbx
  4122fd:	pop    rsi
  4122fe:	pop    rdi
  4122ff:	ret    
  412300:	mov    QWORD PTR [rbx+0x48],rsi
  412304:	mov    QWORD PTR [rbx+0x50],rsi
  412308:	add    rsp,0x20
  41230c:	pop    rbx
  41230d:	pop    rsi
  41230e:	pop    rdi
  41230f:	ret    
  412310:	push   rsi
  412311:	push   rbx
  412312:	sub    rsp,0x28
  412316:	cmp    QWORD PTR [rcx+0x48],0x0
  41231b:	je     0x412345
  41231d:	mov    rax,QWORD PTR [rcx+0x50]
  412321:	mov    rbx,rcx
  412324:	mov    rsi,rdx
  412327:	mov    rcx,QWORD PTR [rax]
  41232a:	call   0x42a4e8
  41232f:	mov    rbx,QWORD PTR [rbx+0x50]
  412333:	mov    rcx,rsi
  412336:	call   0x424900
  41233b:	mov    QWORD PTR [rbx],rax
  41233e:	add    rsp,0x28
  412342:	pop    rbx
  412343:	pop    rsi
  412344:	ret    
  412345:	add    rsp,0x28
  412349:	pop    rbx
  41234a:	pop    rsi
  41234b:	jmp    0x4122c0
  412350:	push   rsi
  412351:	push   rbx
  412352:	sub    rsp,0x28
  412356:	mov    rbx,rcx
  412359:	mov    rcx,QWORD PTR [rcx+0x40]
  41235d:	test   rcx,rcx
  412360:	je     0x4123b7
  412362:	mov    edx,DWORD PTR [rbx+0x10]
  412365:	mov    eax,DWORD PTR [rbx+0x14]
  412368:	imul   eax,edx
  41236b:	test   eax,eax
  41236d:	jle    0x4123aa
  41236f:	xor    esi,esi
  412371:	jmp    0x412380
  412373:	mov    eax,DWORD PTR [rbx+0x14]
  412376:	add    esi,0x1
  412379:	imul   eax,edx
  41237c:	cmp    eax,esi
  41237e:	jle    0x4123aa
  412380:	movsxd rax,esi
  412383:	cmp    BYTE PTR [rcx+rax*1],0x0
  412387:	je     0x412373
  412389:	mov    rdx,QWORD PTR [rbx+0x28]
  41238d:	add    esi,0x1
  412390:	mov    rcx,QWORD PTR [rdx+rax*8]
  412394:	call   0x42a4e8
  412399:	mov    edx,DWORD PTR [rbx+0x10]
  41239c:	mov    eax,DWORD PTR [rbx+0x14]
  41239f:	mov    rcx,QWORD PTR [rbx+0x40]
  4123a3:	imul   eax,edx
  4123a6:	cmp    eax,esi
  4123a8:	jg     0x412380
  4123aa:	call   0x42a4e8
  4123af:	mov    QWORD PTR [rbx+0x40],0x0
  4123b7:	mov    rcx,QWORD PTR [rbx+0x18]
  4123bb:	call   0x42a4e8
  4123c0:	mov    rcx,QWORD PTR [rbx+0x28]
  4123c4:	call   0x42a4e8
  4123c9:	mov    rcx,QWORD PTR [rbx+0x58]
  4123cd:	call   0x42a4e8
  4123d2:	mov    rsi,QWORD PTR [rbx+0x48]
  4123d6:	mov    QWORD PTR [rbx],0x0
  4123dd:	mov    QWORD PTR [rbx+0x8],0x0
  4123e5:	mov    QWORD PTR [rbx+0x18],0x0
  4123ed:	mov    QWORD PTR [rbx+0x28],0x0
  4123f5:	mov    QWORD PTR [rbx+0x58],0x0
  4123fd:	test   rsi,rsi
  412400:	mov    QWORD PTR [rbx+0x20],0x0
  412408:	mov    QWORD PTR [rbx+0x30],0x0
  412410:	mov    QWORD PTR [rbx+0x60],0x0
  412418:	je     0x412441
  41241a:	mov    QWORD PTR [rbx+0x50],rsi
  41241e:	xchg   ax,ax
  412420:	mov    rax,QWORD PTR [rsi+0x8]
  412424:	mov    QWORD PTR [rbx+0x50],rax
  412428:	mov    rcx,QWORD PTR [rsi]
  41242b:	call   0x42a4e8
  412430:	mov    rcx,rsi
  412433:	call   0x42a4e8
  412438:	mov    rsi,QWORD PTR [rbx+0x50]
  41243c:	test   rsi,rsi
  41243f:	jne    0x412420
  412441:	mov    QWORD PTR [rbx+0x48],0x0
  412449:	mov    QWORD PTR [rbx+0x50],0x0
  412451:	add    rsp,0x28
  412455:	pop    rbx
  412456:	pop    rsi
  412457:	ret    
  412458:	nop    DWORD PTR [rax+rax*1+0x0]
  412460:	push   r15
  412462:	push   r14
  412464:	push   r13
  412466:	push   r12
  412468:	push   rbp
  412469:	push   rdi
  41246a:	push   rsi
  41246b:	push   rbx
  41246c:	sub    rsp,0x58
  412470:	movzx  eax,BYTE PTR [rip+0x47e09]        # 0x45a280
  412477:	mov    QWORD PTR [rsp+0xa8],rdx
  41247f:	mov    BYTE PTR [rsp+0x4f],0x0
  412484:	test   al,al
  412486:	jne    0x412491
  412488:	mov    rdx,QWORD PTR [rcx]
  41248b:	mov    eax,DWORD PTR [rdx]
  41248d:	test   eax,eax
  41248f:	jne    0x4124a2
  412491:	add    rsp,0x58
  412495:	pop    rbx
  412496:	pop    rsi
  412497:	pop    rdi
  412498:	pop    rbp
  412499:	pop    r12
  41249b:	pop    r13
  41249d:	pop    r14
  41249f:	pop    r15
  4124a1:	ret    
  4124a2:	sub    eax,0x2
  4124a5:	mov    rsi,r8
  4124a8:	mov    rbx,rcx
  4124ab:	cmp    eax,0x1
  4124ae:	jbe    0x4124d5
  4124b0:	xor    r8d,r8d
  4124b3:	cmp    WORD PTR [rdx+0x4],0x1
  4124b8:	lea    rax,[rsp+0x4f]
  4124bd:	lea    r9,[rsp+0xa8]
  4124c5:	mov    QWORD PTR [rsp+0x20],rax
  4124ca:	sete   r8b
  4124ce:	xor    edx,edx
  4124d0:	call   0x4101d0
  4124d5:	test   rsi,rsi
  4124d8:	je     0x4124e5
  4124da:	mov    rdx,rsi
  4124dd:	mov    rcx,rbx
  4124e0:	call   0x410b70
  4124e5:	mov    rax,QWORD PTR [rbx]
  4124e8:	mov    esi,DWORD PTR [rax]
  4124ea:	cmp    esi,0x7
  4124ed:	ja     0x412a71
  4124f3:	lea    rdx,[rip+0x2b62a]        # 0x43db24
  4124fa:	mov    ecx,esi
  4124fc:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412500:	add    rdx,rcx
  412503:	jmp    rdx
  412505:	cmp    WORD PTR [rax+0x4],0x1
  41250a:	mov    rdi,QWORD PTR [rsp+0xa8]
  412512:	je     0x413469
  412518:	movzx  edx,BYTE PTR [rip+0x47d61]        # 0x45a280
  41251f:	movzx  r12d,BYTE PTR [rax+0xa]
  412524:	movzx  esi,WORD PTR [rax+0x6]
  412528:	test   dl,dl
  41252a:	jne    0x4126f0
  412530:	cmp    BYTE PTR [rax+0xb],0x0
  412534:	je     0x413070
  41253a:	test   r12b,r12b
  41253d:	jne    0x412586
  41253f:	cmp    QWORD PTR [rbx+0x8],0x0
  412544:	je     0x412586
  412546:	lea    rcx,[rip+0x2b51a]        # 0x43da67
  41254d:	mov    r9,rdi
  412550:	mov    r8d,0xa
  412556:	mov    edx,0x1
  41255b:	call   0x42a4e0
  412560:	mov    rcx,QWORD PTR [rbx+0x8]
  412564:	mov    rdx,rdi
  412567:	call   0x40f8a0
  41256c:	lea    rcx,[rip+0x2b4ff]        # 0x43da72
  412573:	mov    r9,rdi
  412576:	mov    r8d,0x5
  41257c:	mov    edx,0x1
  412581:	call   0x42a4e0
  412586:	cmp    si,0x2
  41258a:	mov    ebp,0x2
  41258f:	lea    rcx,[rip+0x2b4e2]        # 0x43da78
  412596:	cmovbe ebp,esi
  412599:	mov    r9,rdi
  41259c:	mov    r8d,0x8
  4125a2:	mov    edx,0x1
  4125a7:	call   0x42a4e0
  4125ac:	cmp    bp,0x2
  4125b0:	mov    r9,rdi
  4125b3:	je     0x413ef1
  4125b9:	lea    rcx,[rip+0x2b4ce]        # 0x43da8e
  4125c0:	mov    r8d,0x8
  4125c6:	mov    edx,0x1
  4125cb:	call   0x42a4e0
  4125d0:	mov    r10d,DWORD PTR [rbx+0x10]
  4125d4:	xor    esi,esi
  4125d6:	test   r10d,r10d
  4125d9:	jne    0x4125eb
  4125db:	jmp    0x413753
  4125e0:	add    esi,0x1
  4125e3:	cmp    esi,eax
  4125e5:	jae    0x413753
  4125eb:	mov    rdx,QWORD PTR [rbx+0x58]
  4125ef:	mov    eax,esi
  4125f1:	movsx  ecx,BYTE PTR [rdx+rax*1]
  4125f5:	mov    rdx,rdi
  4125f8:	call   0x42a500
  4125fd:	test   bp,bp
  412600:	mov    eax,DWORD PTR [rbx+0x10]
  412603:	je     0x4125e0
  412605:	lea    edx,[rax-0x1]
  412608:	cmp    edx,esi
  41260a:	jbe    0x4125e0
  41260c:	lea    rcx,[rip+0x2b31e]        # 0x43d931
  412613:	mov    r9,rdi
  412616:	mov    r8d,0x3
  41261c:	mov    edx,0x1
  412621:	call   0x42a4e0
  412626:	mov    eax,DWORD PTR [rbx+0x10]
  412629:	jmp    0x4125e0
  41262b:	nop    DWORD PTR [rax+rax*1+0x0]
  412630:	cmp    WORD PTR [rax+0x4],0x1
  412635:	je     0x4131b4
  41263b:	movzx  edx,BYTE PTR [rip+0x47c3e]        # 0x45a280
  412642:	mov    rbp,QWORD PTR [rsp+0xa8]
  41264a:	movzx  r13d,BYTE PTR [rax+0xa]
  41264f:	test   dl,dl
  412651:	jne    0x4126f0
  412657:	cmp    BYTE PTR [rax+0xb],0x0
  41265b:	je     0x412f80
  412661:	xor    r12d,r12d
  412664:	test   r13b,r13b
  412667:	jne    0x412f86
  41266d:	mov    rcx,QWORD PTR [rbx+0x8]
  412671:	test   rcx,rcx
  412674:	je     0x412691
  412676:	mov    rdx,rbp
  412679:	call   0x42a4f8
  41267e:	mov    rax,QWORD PTR [rbx]
  412681:	mov    r8,rbp
  412684:	movzx  edx,BYTE PTR [rax+0x38]
  412688:	mov    rcx,QWORD PTR [rax+0x30]
  41268c:	call   0x40ffc0
  412691:	mov    rsi,QWORD PTR [rbx+0x18]
  412695:	cmp    QWORD PTR [rsi],0x0
  412699:	je     0x412f80
  41269f:	nop
  4126a0:	mov    rcx,QWORD PTR [rsi]
  4126a3:	mov    rdx,rbp
  4126a6:	add    rsi,0x8
  4126aa:	call   0x42a4f8
  4126af:	cmp    QWORD PTR [rsi],0x0
  4126b3:	je     0x412f80
  4126b9:	cmp    rsi,QWORD PTR [rbx+0x18]
  4126bd:	je     0x4126a0
  4126bf:	mov    rax,QWORD PTR [rbx]
  4126c2:	mov    r8,rbp
  4126c5:	movzx  edx,BYTE PTR [rax+0x28]
  4126c9:	mov    rcx,QWORD PTR [rax+0x20]
  4126cd:	call   0x40ffc0
  4126d2:	jmp    0x4126a0
  4126d4:	cmp    WORD PTR [rax+0x4],0x1
  4126d9:	mov    rdx,QWORD PTR [rsp+0xa8]
  4126e1:	mov    rcx,rbx
  4126e4:	je     0x41345f
  4126ea:	call   0x410b70
  4126ef:	nop
  4126f0:	cmp    BYTE PTR [rsp+0x4f],0x0
  4126f5:	je     0x412491
  4126fb:	mov    rcx,QWORD PTR [rsp+0xa8]
  412703:	call   0x410290
  412708:	jmp    0x412491
  41270d:	nop    DWORD PTR [rax]
  412710:	cmp    WORD PTR [rax+0x4],0x1
  412715:	mov    rdi,QWORD PTR [rsp+0xa8]
  41271d:	je     0x4132c5
  412723:	movzx  edx,BYTE PTR [rip+0x47b56]        # 0x45a280
  41272a:	movzx  r14d,BYTE PTR [rax+0xa]
  41272f:	movzx  r8d,WORD PTR [rax+0x6]
  412734:	mov    rsi,QWORD PTR [rax+0x48]
  412738:	test   dl,dl
  41273a:	jne    0x4126f0
  41273c:	cmp    BYTE PTR [rax+0xb],0x0
  412740:	jne    0x4139d8
  412746:	mov    rbp,QWORD PTR [rbx+0x28]
  41274a:	xor    esi,esi
  41274c:	lea    r13,[rip+0x2b089]        # 0x43d7dc
  412753:	lea    r12,[rip+0x2b088]        # 0x43d7e2
  41275a:	cmp    QWORD PTR [rbp+0x0],0x0
  41275f:	jne    0x4127c5
  412761:	jmp    0x412ed2
  412766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412770:	lea    rcx,[rip+0x2b14d]        # 0x43d8c4
  412777:	mov    r9,rdi
  41277a:	mov    r8d,0x7
  412780:	mov    edx,0x1
  412785:	call   0x42a4e0
  41278a:	lea    rcx,[rip+0x2b193]        # 0x43d924
  412791:	mov    edx,0x1
  412796:	add    esi,0x1
  412799:	mov    r9,rdi
  41279c:	mov    r8d,0x6
  4127a2:	call   0x42a4e0
  4127a7:	xor    edx,edx
  4127a9:	mov    eax,esi
  4127ab:	div    DWORD PTR [rbx+0x10]
  4127ae:	test   edx,edx
  4127b0:	je     0x412b83
  4127b6:	add    rbp,0x8
  4127ba:	cmp    QWORD PTR [rbp+0x0],0x0
  4127bf:	je     0x412ed2
  4127c5:	xor    edx,edx
  4127c7:	mov    eax,esi
  4127c9:	div    DWORD PTR [rbx+0x10]
  4127cc:	test   edx,edx
  4127ce:	jne    0x412800
  4127d0:	movzx  eax,BYTE PTR [rip+0x47aa9]        # 0x45a280
  4127d7:	test   al,al
  4127d9:	jne    0x412ed2
  4127df:	lea    rcx,[rip+0x2b129]        # 0x43d90f
  4127e6:	mov    edx,0x1
  4127eb:	mov    r9,rdi
  4127ee:	mov    r8d,0x14
  4127f4:	call   0x42a4e0
  4127f9:	mov    eax,esi
  4127fb:	xor    edx,edx
  4127fd:	div    DWORD PTR [rbx+0x10]
  412800:	mov    rax,QWORD PTR [rbx+0x58]
  412804:	mov    r8d,edx
  412807:	lea    rdx,[rip+0x2b09f]        # 0x43d8ad
  41280e:	mov    rcx,rdi
  412811:	cmp    BYTE PTR [rax+r8*1],0x72
  412816:	mov    r8,r12
  412819:	cmove  r8,r13
  41281d:	call   0x426370
  412822:	mov    r15,QWORD PTR [rbp+0x0]
  412826:	lea    rdx,[rip+0x2b094]        # 0x43d8c1
  41282d:	mov    rcx,r15
  412830:	call   0x42a3e0
  412835:	cmp    BYTE PTR [r15+rax*1],0x0
  41283a:	je     0x412770
  412840:	mov    rdx,rdi
  412843:	mov    rcx,r15
  412846:	call   0x40fff0
  41284b:	jmp    0x41278a
  412850:	cmp    WORD PTR [rax+0x4],0x1
  412855:	je     0x412bf0
  41285b:	movzx  ecx,BYTE PTR [rip+0x47a1e]        # 0x45a280
  412862:	mov    rdi,QWORD PTR [rsp+0xa8]
  41286a:	movzx  r13d,BYTE PTR [rax+0xa]
  41286f:	movzx  edx,WORD PTR [rax+0x6]
  412873:	test   cl,cl
  412875:	jne    0x4126f0
  41287b:	cmp    dx,0x3
  41287f:	mov    r12d,0x3
  412885:	cmovbe r12d,edx
  412889:	cmp    BYTE PTR [rax+0xb],0x0
  41288d:	je     0x412dc0
  412893:	test   r13b,r13b
  412896:	jne    0x4128df
  412898:	cmp    QWORD PTR [rbx+0x8],0x0
  41289d:	je     0x4128df
  41289f:	lea    rcx,[rip+0x2ac3f]        # 0x43d4e5
  4128a6:	mov    r9,rdi
  4128a9:	mov    r8d,0xf
  4128af:	mov    edx,0x1
  4128b4:	call   0x42a4e0
  4128b9:	mov    rcx,QWORD PTR [rbx+0x8]
  4128bd:	mov    rdx,rdi
  4128c0:	call   0x40f710
  4128c5:	lea    rcx,[rip+0x2ac29]        # 0x43d4f5
  4128cc:	mov    r9,rdi
  4128cf:	mov    r8d,0xf
  4128d5:	mov    edx,0x1
  4128da:	call   0x42a4e0
  4128df:	lea    rcx,[rip+0x2ac1f]        # 0x43d505
  4128e6:	mov    r9,rdi
  4128e9:	mov    r8d,0x10
  4128ef:	mov    edx,0x1
  4128f4:	call   0x42a4e0
  4128f9:	cmp    r12w,0x1
  4128fe:	jbe    0x413719
  412904:	lea    rcx,[rip+0x2b020]        # 0x43d92b
  41290b:	mov    r9,rdi
  41290e:	mov    r8d,0x2
  412914:	mov    edx,0x1
  412919:	call   0x42a4e0
  41291e:	mov    eax,DWORD PTR [rbx+0x10]
  412921:	test   eax,eax
  412923:	je     0x412a9f
  412929:	xor    esi,esi
  41292b:	jmp    0x41293b
  41292d:	nop    DWORD PTR [rax]
  412930:	add    esi,0x1
  412933:	cmp    esi,eax
  412935:	jae    0x412a94
  41293b:	mov    rdx,QWORD PTR [rbx+0x58]
  41293f:	mov    eax,esi
  412941:	movsx  ecx,BYTE PTR [rdx+rax*1]
  412945:	mov    rdx,rdi
  412948:	call   0x42a500
  41294d:	test   r12w,r12w
  412951:	mov    eax,DWORD PTR [rbx+0x10]
  412954:	je     0x412930
  412956:	lea    edx,[rax-0x1]
  412959:	cmp    edx,esi
  41295b:	jbe    0x412930
  41295d:	lea    rcx,[rip+0x2afcd]        # 0x43d931
  412964:	mov    r9,rdi
  412967:	mov    r8d,0x3
  41296d:	mov    edx,0x1
  412972:	call   0x42a4e0
  412977:	mov    eax,DWORD PTR [rbx+0x10]
  41297a:	jmp    0x412930
  41297c:	nop    DWORD PTR [rax+0x0]
  412980:	cmp    WORD PTR [rax+0x4],0x1
  412985:	je     0x412bf0
  41298b:	movzx  edx,BYTE PTR [rip+0x478ee]        # 0x45a280
  412992:	mov    rdi,QWORD PTR [rsp+0xa8]
  41299a:	movzx  r14d,BYTE PTR [rax+0xa]
  41299f:	movzx  r12d,WORD PTR [rax+0x6]
  4129a4:	mov    rsi,QWORD PTR [rax+0x48]
  4129a8:	test   dl,dl
  4129aa:	jne    0x4126f0
  4129b0:	cmp    r12w,0x3
  4129b5:	jbe    0x412c05
  4129bb:	cmp    BYTE PTR [rax+0xb],0x0
  4129bf:	mov    r12d,0x3
  4129c5:	jne    0x414179
  4129cb:	mov    rbp,QWORD PTR [rbx+0x28]
  4129cf:	cmp    QWORD PTR [rbp+0x0],0x0
  4129d4:	je     0x412d60
  4129da:	xor    esi,esi
  4129dc:	nop    DWORD PTR [rax+0x0]
  4129e0:	lea    rcx,[rip+0x2b046]        # 0x43da2d
  4129e7:	mov    r9,rdi
  4129ea:	mov    r8d,0xd
  4129f0:	mov    edx,0x1
  4129f5:	add    esi,0x1
  4129f8:	call   0x42a4e0
  4129fd:	mov    rcx,QWORD PTR [rbp+0x0]
  412a01:	mov    rdx,rdi
  412a04:	call   0x40f710
  412a09:	mov    rdx,rdi
  412a0c:	mov    ecx,0x7d
  412a11:	call   0x42a500
  412a16:	xor    edx,edx
  412a18:	mov    eax,esi
  412a1a:	div    DWORD PTR [rbx+0x10]
  412a1d:	test   edx,edx
  412a1f:	je     0x412ba2
  412a25:	movzx  eax,BYTE PTR [rip+0x47854]        # 0x45a280
  412a2c:	test   al,al
  412a2e:	jne    0x412d60
  412a34:	add    rbp,0x8
  412a38:	cmp    QWORD PTR [rbp+0x0],0x0
  412a3d:	je     0x412d60
  412a43:	test   esi,esi
  412a45:	je     0x4129e0
  412a47:	xor    edx,edx
  412a49:	mov    eax,esi
  412a4b:	div    DWORD PTR [rbx+0x10]
  412a4e:	test   edx,edx
  412a50:	je     0x4129e0
  412a52:	lea    rcx,[rip+0x2afd0]        # 0x43da29
  412a59:	mov    r9,rdi
  412a5c:	mov    r8d,0x3
  412a62:	mov    edx,0x1
  412a67:	call   0x42a4e0
  412a6c:	jmp    0x4129e0
  412a71:	call   QWORD PTR [rip+0x4a13d]        # 0x45cbb4
  412a77:	lea    rdx,[rip+0x2b072]        # 0x43daf0
  412a7e:	lea    rcx,[rax+0x60]
  412a82:	mov    r8d,esi
  412a85:	call   0x426370
  412a8a:	mov    ecx,0x1
  412a8f:	call   0x42a540
  412a94:	cmp    r12w,0x1
  412a99:	jbe    0x413726
  412a9f:	lea    rcx,[rip+0x2ae88]        # 0x43d92e
  412aa6:	mov    r9,rdi
  412aa9:	mov    r8d,0x2
  412aaf:	mov    edx,0x1
  412ab4:	call   0x42a4e0
  412ab9:	lea    rcx,[rip+0x2aa63]        # 0x43d523
  412ac0:	mov    edx,0x1
  412ac5:	mov    r9,rdi
  412ac8:	mov    r8d,0x2
  412ace:	call   0x42a4e0
  412ad3:	test   r13b,r13b
  412ad6:	sete   dl
  412ad9:	cmp    r12w,0x1
  412ade:	mov    eax,edx
  412ae0:	jbe    0x413746
  412ae6:	test   dl,dl
  412ae8:	je     0x412dc0
  412aee:	lea    rcx,[rip+0x2aa31]        # 0x43d526
  412af5:	mov    r9,rdi
  412af8:	mov    r8d,0x7
  412afe:	mov    edx,0x1
  412b03:	call   0x42a4e0
  412b08:	mov    r14d,DWORD PTR [rbx+0x10]
  412b0c:	mov    rbp,QWORD PTR [rbx+0x18]
  412b10:	test   r14d,r14d
  412b13:	je     0x412d8c
  412b19:	xor    esi,esi
  412b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  412b20:	lea    rcx,[rip+0x2ae0e]        # 0x43d935
  412b27:	mov    r9,rdi
  412b2a:	mov    r8d,0x8
  412b30:	mov    edx,0x1
  412b35:	add    esi,0x1
  412b38:	add    rbp,0x8
  412b3c:	call   0x42a4e0
  412b41:	mov    rcx,QWORD PTR [rbp-0x8]
  412b45:	mov    rdx,rdi
  412b48:	call   0x40f710
  412b4d:	mov    rdx,rdi
  412b50:	mov    ecx,0x7d
  412b55:	call   0x42a500
  412b5a:	cmp    esi,DWORD PTR [rbx+0x10]
  412b5d:	jae    0x412d8c
  412b63:	test   esi,esi
  412b65:	je     0x412b20
  412b67:	lea    rcx,[rip+0x2aa1e]        # 0x43d58c
  412b6e:	mov    r9,rdi
  412b71:	mov    r8d,0x3
  412b77:	mov    edx,0x1
  412b7c:	call   0x42a4e0
  412b81:	jmp    0x412b20
  412b83:	lea    rcx,[rip+0x2ad7c]        # 0x43d906
  412b8a:	mov    r9,rdi
  412b8d:	mov    r8d,0x8
  412b93:	mov    edx,0x1
  412b98:	call   0x42a4e0
  412b9d:	jmp    0x4127b6
  412ba2:	lea    rcx,[rip+0x2ae92]        # 0x43da3b
  412ba9:	mov    r9,rdi
  412bac:	mov    r8d,0x11
  412bb2:	mov    edx,0x1
  412bb7:	call   0x42a4e0
  412bbc:	cmp    r12w,0x3
  412bc1:	jne    0x412a25
  412bc7:	lea    rcx,[rip+0x2ae7f]        # 0x43da4d
  412bce:	mov    r9,rdi
  412bd1:	mov    r8d,0x8
  412bd7:	mov    edx,0x1
  412bdc:	call   0x42a4e0
  412be1:	jmp    0x412a25
  412be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bf0:	mov    rdx,QWORD PTR [rsp+0xa8]
  412bf8:	mov    rcx,rbx
  412bfb:	call   0x40f900
  412c00:	jmp    0x4126f0
  412c05:	cmp    BYTE PTR [rax+0xb],0x0
  412c09:	je     0x4129cb
  412c0f:	lea    rcx,[rip+0x2ad28]        # 0x43d93e
  412c16:	mov    r9,rdi
  412c19:	mov    r8d,0x12
  412c1f:	mov    edx,0x1
  412c24:	call   0x42a4e0
  412c29:	cmp    r12w,0x1
  412c2e:	jbe    0x413e0b
  412c34:	lea    rcx,[rip+0x2acf0]        # 0x43d92b
  412c3b:	mov    edx,0x1
  412c40:	mov    r9,rdi
  412c43:	mov    r8d,0x2
  412c49:	call   0x42a4e0
  412c4e:	mov    edx,DWORD PTR [rbx+0x10]
  412c51:	test   edx,edx
  412c53:	je     0x413b04
  412c59:	test   rsi,rsi
  412c5c:	setne  bpl
  412c60:	xor    r13d,r13d
  412c63:	xor    r15d,r15d
  412c66:	jmp    0x412c7d
  412c68:	nop    DWORD PTR [rax+rax*1+0x0]
  412c70:	add    r15d,0x1
  412c74:	cmp    r15d,eax
  412c77:	jae    0x413af9
  412c7d:	mov    rdx,QWORD PTR [rbx+0x58]
  412c81:	mov    eax,r15d
  412c84:	movsx  ecx,BYTE PTR [rdx+rax*1]
  412c88:	cmp    cl,0x6c
  412c8b:	jne    0x412d50
  412c91:	test   bpl,bpl
  412c94:	je     0x412d50
  412c9a:	lea    rdx,[rip+0x2acb0]        # 0x43d951
  412ca1:	mov    rcx,rsi
  412ca4:	call   0x42a3e0
  412ca9:	add    rsi,rax
  412cac:	cmp    BYTE PTR [rsi],0x0
  412caf:	jne    0x41395d
  412cb5:	test   r13,r13
  412cb8:	je     0x413f0d
  412cbe:	lea    rcx,[rip+0x2ac90]        # 0x43d955
  412cc5:	mov    r9,rdi
  412cc8:	mov    r8d,0x2
  412cce:	mov    edx,0x1
  412cd3:	call   0x42a4e0
  412cd8:	lea    rdx,[rip+0x2ac72]        # 0x43d951
  412cdf:	mov    rcx,r13
  412ce2:	call   0x42a410
  412ce7:	mov    r9,rdi
  412cea:	mov    r8d,0x1
  412cf0:	mov    rdx,rax
  412cf3:	mov    rcx,r13
  412cf6:	call   0x42a4e0
  412cfb:	lea    rcx,[rip+0x2ac56]        # 0x43d958
  412d02:	mov    r9,rdi
  412d05:	mov    r8d,0xb
  412d0b:	mov    edx,0x1
  412d10:	call   0x42a4e0
  412d15:	test   r12w,r12w
  412d19:	mov    eax,DWORD PTR [rbx+0x10]
  412d1c:	je     0x412c70
  412d22:	lea    edx,[rax-0x1]
  412d25:	cmp    edx,r15d
  412d28:	jbe    0x412c70
  412d2e:	lea    rcx,[rip+0x2abfc]        # 0x43d931
  412d35:	mov    r9,rdi
  412d38:	mov    r8d,0x3
  412d3e:	mov    edx,0x1
  412d43:	call   0x42a4e0
  412d48:	mov    eax,DWORD PTR [rbx+0x10]
  412d4b:	jmp    0x412c70
  412d50:	mov    rdx,rdi
  412d53:	call   0x42a500
  412d58:	jmp    0x412d15
  412d5a:	nop    WORD PTR [rax+rax*1+0x0]
  412d60:	mov    rax,QWORD PTR [rbx]
  412d63:	cmp    BYTE PTR [rax+0xc],0x0
  412d67:	je     0x4126f0
  412d6d:	lea    rcx,[rip+0x2ace2]        # 0x43da56
  412d74:	mov    r9,rdi
  412d77:	mov    r8d,0x10
  412d7d:	mov    edx,0x1
  412d82:	call   0x42a4e0
  412d87:	jmp    0x4126f0
  412d8c:	lea    rcx,[rip+0x2a7fd]        # 0x43d590
  412d93:	mov    r9,rdi
  412d96:	mov    r8d,0x4
  412d9c:	mov    edx,0x1
  412da1:	call   0x42a4e0
  412da6:	lea    rcx,[rip+0x2a779]        # 0x43d526
  412dad:	mov    r9,rdi
  412db0:	mov    r8d,0x7
  412db6:	mov    edx,0x1
  412dbb:	call   0x42a4e0
  412dc0:	mov    rbp,QWORD PTR [rbx+0x28]
  412dc4:	xor    esi,esi
  412dc6:	mov    rcx,QWORD PTR [rbp+0x0]
  412dca:	test   rcx,rcx
  412dcd:	jne    0x412e0b
  412dcf:	jmp    0x412e40
  412dd1:	lea    rcx,[rip+0x2a7b8]        # 0x43d590
  412dd8:	mov    r8d,0x4
  412dde:	mov    edx,0x1
  412de3:	call   0x42a4e0
  412de8:	cmp    r12w,0x3
  412ded:	je     0x413195
  412df3:	movzx  eax,BYTE PTR [rip+0x47486]        # 0x45a280
  412dfa:	test   al,al
  412dfc:	jne    0x412e40
  412dfe:	add    rbp,0x8
  412e02:	mov    rcx,QWORD PTR [rbp+0x0]
  412e06:	test   rcx,rcx
  412e09:	je     0x412e40
  412e0b:	mov    rdx,rdi
  412e0e:	add    esi,0x1
  412e11:	call   0x40f710
  412e16:	xor    edx,edx
  412e18:	mov    eax,esi
  412e1a:	mov    r9,rdi
  412e1d:	div    DWORD PTR [rbx+0x10]
  412e20:	test   edx,edx
  412e22:	je     0x412dd1
  412e24:	lea    rcx,[rip+0x2a761]        # 0x43d58c
  412e2b:	mov    r8d,0x3
  412e31:	mov    edx,0x1
  412e36:	call   0x42a4e0
  412e3b:	jmp    0x412dfe
  412e3d:	nop    DWORD PTR [rax]
  412e40:	mov    rax,QWORD PTR [rbx]
  412e43:	cmp    BYTE PTR [rax+0xc],0x0
  412e47:	je     0x4126f0
  412e4d:	mov    rcx,rbx
  412e50:	call   0x40ff10
  412e55:	cmp    r12w,0x2
  412e5a:	mov    rbx,rax
  412e5d:	je     0x414062
  412e63:	lea    rcx,[rip+0x2a72b]        # 0x43d595
  412e6a:	mov    r9,rdi
  412e6d:	mov    r8d,0x19
  412e73:	mov    edx,0x1
  412e78:	call   0x42a4e0
  412e7d:	test   rbx,rbx
  412e80:	je     0x412ec0
  412e82:	test   r13b,r13b
  412e85:	jne    0x412ec0
  412e87:	movzx  eax,BYTE PTR [rip+0x473f2]        # 0x45a280
  412e8e:	test   al,al
  412e90:	jne    0x412ec0
  412e92:	mov    rcx,QWORD PTR [rbx]
  412e95:	mov    rdx,rdi
  412e98:	call   0x40f710
  412e9d:	lea    rcx,[rip+0x2a6ec]        # 0x43d590
  412ea4:	mov    r9,rdi
  412ea7:	mov    r8d,0x4
  412ead:	mov    edx,0x1
  412eb2:	call   0x42a4e0
  412eb7:	mov    rbx,QWORD PTR [rbx+0x8]
  412ebb:	test   rbx,rbx
  412ebe:	jne    0x412e92
  412ec0:	mov    rdx,rdi
  412ec3:	mov    ecx,0xa
  412ec8:	call   0x42a500
  412ecd:	jmp    0x4126f0
  412ed2:	mov    rax,QWORD PTR [rbx]
  412ed5:	cmp    BYTE PTR [rax+0xc],0x0
  412ed9:	je     0x4126f0
  412edf:	mov    rcx,rbx
  412ee2:	call   0x40ff10
  412ee7:	lea    rcx,[rip+0x2a9ed]        # 0x43d8db
  412eee:	mov    rbx,rax
  412ef1:	mov    r9,rdi
  412ef4:	mov    r8d,0x9
  412efa:	mov    edx,0x1
  412eff:	call   0x42a4e0
  412f04:	test   rbx,rbx
  412f07:	je     0x412ec0
  412f09:	test   r14b,r14b
  412f0c:	jne    0x412ec0
  412f0e:	movzx  eax,BYTE PTR [rip+0x4736b]        # 0x45a280
  412f15:	test   al,al
  412f17:	jne    0x412ec0
  412f19:	lea    rcx,[rip+0x2a9c5]        # 0x43d8e5
  412f20:	mov    r9,rdi
  412f23:	mov    r8d,0x3
  412f29:	mov    edx,0x1
  412f2e:	call   0x42a4e0
  412f33:	mov    rcx,QWORD PTR [rbx]
  412f36:	mov    rdx,rdi
  412f39:	call   0x40fff0
  412f3e:	lea    rcx,[rip+0x2a6b9]        # 0x43d5fe
  412f45:	mov    r9,rdi
  412f48:	mov    r8d,0x7
  412f4e:	mov    edx,0x1
  412f53:	call   0x42a4e0
  412f58:	mov    rbx,QWORD PTR [rbx+0x8]
  412f5c:	test   rbx,rbx
  412f5f:	jne    0x412f33
  412f61:	lea    rcx,[rip+0x2a981]        # 0x43d8e9
  412f68:	mov    r9,rdi
  412f6b:	mov    r8d,0x4
  412f71:	mov    edx,0x1
  412f76:	call   0x42a4e0
  412f7b:	jmp    0x412ec0
  412f80:	mov    r12d,0x1
  412f86:	mov    rsi,QWORD PTR [rbx+0x28]
  412f8a:	cmp    QWORD PTR [rsi],0x0
  412f8e:	je     0x412ffb
  412f90:	xor    edi,edi
  412f92:	jmp    0x412f9e
  412f94:	add    rsi,0x8
  412f98:	cmp    QWORD PTR [rsi],0x0
  412f9c:	je     0x412ffb
  412f9e:	test   r12b,r12b
  412fa1:	je     0x412fc1
  412fa3:	mov    rax,QWORD PTR [rbx]
  412fa6:	mov    r8,rbp
  412fa9:	movzx  edx,BYTE PTR [rax+0x38]
  412fad:	mov    rcx,QWORD PTR [rax+0x30]
  412fb1:	call   0x40ffc0
  412fb6:	movzx  eax,BYTE PTR [rip+0x472c3]        # 0x45a280
  412fbd:	test   al,al
  412fbf:	jne    0x412ff8
  412fc1:	mov    rcx,QWORD PTR [rsi]
  412fc4:	mov    rdx,rbp
  412fc7:	add    edi,0x1
  412fca:	mov    r12d,0x1
  412fd0:	call   0x42a4f8
  412fd5:	xor    edx,edx
  412fd7:	mov    eax,edi
  412fd9:	div    DWORD PTR [rbx+0x10]
  412fdc:	test   edx,edx
  412fde:	je     0x412f94
  412fe0:	mov    rax,QWORD PTR [rbx]
  412fe3:	mov    r8,rbp
  412fe6:	xor    r12d,r12d
  412fe9:	movzx  edx,BYTE PTR [rax+0x28]
  412fed:	mov    rcx,QWORD PTR [rax+0x20]
  412ff1:	call   0x40ffc0
  412ff6:	jmp    0x412f94
  412ff8:	xor    r12d,r12d
  412ffb:	mov    rax,QWORD PTR [rbx]
  412ffe:	cmp    BYTE PTR [rax+0xc],0x0
  413002:	je     0x4126f0
  413008:	mov    rcx,rbx
  41300b:	call   0x40ff10
  413010:	test   rax,rax
  413013:	mov    rsi,rax
  413016:	je     0x41302c
  413018:	test   r13b,r13b
  41301b:	jne    0x41302c
  41301d:	movzx  eax,BYTE PTR [rip+0x4725c]        # 0x45a280
  413024:	test   al,al
  413026:	je     0x413163
  41302c:	test   r12b,r12b
  41302f:	je     0x4126f0
  413035:	mov    rax,QWORD PTR [rbx]
  413038:	movzx  edx,BYTE PTR [rax+0x38]
  41303c:	test   dl,dl
  41303e:	jne    0x413fb8
  413044:	mov    rdx,rbp
  413047:	mov    ecx,0xa
  41304c:	call   0x42a500
  413051:	jmp    0x4126f0
  413056:	lea    rcx,[rip+0x2aa81]        # 0x43dade
  41305d:	mov    r9,rdi
  413060:	mov    r8d,0x3
  413066:	mov    edx,0x1
  41306b:	call   0x42a4e0
  413070:	mov    rbp,QWORD PTR [rbx+0x28]
  413074:	xor    esi,esi
  413076:	mov    rcx,QWORD PTR [rbp+0x0]
  41307a:	test   rcx,rcx
  41307d:	jne    0x4130a3
  41307f:	jmp    0x4130d0
  413081:	mov    ecx,0xa
  413086:	call   0x42a500
  41308b:	movzx  eax,BYTE PTR [rip+0x471ee]        # 0x45a280
  413092:	test   al,al
  413094:	jne    0x4130d0
  413096:	add    rbp,0x8
  41309a:	mov    rcx,QWORD PTR [rbp+0x0]
  41309e:	test   rcx,rcx
  4130a1:	je     0x4130d0
  4130a3:	mov    rdx,rdi
  4130a6:	add    esi,0x1
  4130a9:	call   0x40f8a0
  4130ae:	xor    edx,edx
  4130b0:	mov    eax,esi
  4130b2:	div    DWORD PTR [rbx+0x10]
  4130b5:	test   edx,edx
  4130b7:	mov    rdx,rdi
  4130ba:	je     0x413081
  4130bc:	mov    ecx,0x9
  4130c1:	call   0x42a500
  4130c6:	jmp    0x413096
  4130c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4130d0:	mov    rax,QWORD PTR [rbx]
  4130d3:	cmp    BYTE PTR [rax+0xc],0x0
  4130d7:	je     0x4126f0
  4130dd:	mov    rcx,rbx
  4130e0:	call   0x40ff10
  4130e5:	lea    rcx,[rip+0x2a9df]        # 0x43dacb
  4130ec:	mov    rbx,rax
  4130ef:	mov    r9,rdi
  4130f2:	mov    r8d,0xa
  4130f8:	mov    edx,0x1
  4130fd:	call   0x42a4e0
  413102:	test   rbx,rbx
  413105:	je     0x413117
  413107:	test   r12b,r12b
  41310a:	jne    0x413117
  41310c:	movzx  eax,BYTE PTR [rip+0x4716d]        # 0x45a280
  413113:	test   al,al
  413115:	je     0x413140
  413117:	lea    rcx,[rip+0x2a9b8]        # 0x43dad6
  41311e:	mov    r9,rdi
  413121:	mov    r8d,0x4
  413127:	mov    edx,0x1
  41312c:	call   0x42a4e0
  413131:	jmp    0x4126f0
  413136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413140:	mov    rcx,QWORD PTR [rbx]
  413143:	mov    rdx,rdi
  413146:	call   0x40f8a0
  41314b:	mov    rdx,rdi
  41314e:	mov    ecx,0xa
  413153:	call   0x42a500
  413158:	mov    rbx,QWORD PTR [rbx+0x8]
  41315c:	test   rbx,rbx
  41315f:	jne    0x413140
  413161:	jmp    0x413117
  413163:	test   r12b,r12b
  413166:	jne    0x413180
  413168:	mov    rcx,QWORD PTR [rsi]
  41316b:	mov    rdx,rbp
  41316e:	call   0x42a4f8
  413173:	mov    rsi,QWORD PTR [rsi+0x8]
  413177:	test   rsi,rsi
  41317a:	je     0x413035
  413180:	mov    rax,QWORD PTR [rbx]
  413183:	mov    r8,rbp
  413186:	movzx  edx,BYTE PTR [rax+0x38]
  41318a:	mov    rcx,QWORD PTR [rax+0x30]
  41318e:	call   0x40ffc0
  413193:	jmp    0x413168
  413195:	lea    rcx,[rip+0x2a38a]        # 0x43d526
  41319c:	mov    r9,rdi
  41319f:	mov    r8d,0x7
  4131a5:	mov    edx,0x1
  4131aa:	call   0x42a4e0
  4131af:	jmp    0x412df3
  4131b4:	movzx  edx,BYTE PTR [rip+0x470c5]        # 0x45a280
  4131bb:	mov    rdi,QWORD PTR [rsp+0xa8]
  4131c3:	movzx  r12d,BYTE PTR [rax+0xa]
  4131c8:	test   dl,dl
  4131ca:	jne    0x4126f0
  4131d0:	cmp    BYTE PTR [rax+0xb],0x0
  4131d4:	mov    r13d,0x1
  4131da:	je     0x4131fe
  4131dc:	xor    r13d,r13d
  4131df:	test   r12b,r12b
  4131e2:	jne    0x4131fe
  4131e4:	mov    rcx,QWORD PTR [rbx+0x8]
  4131e8:	mov    r13d,r12d
  4131eb:	test   rcx,rcx
  4131ee:	je     0x4131fe
  4131f0:	mov    rdx,rdi
  4131f3:	mov    r13d,0x1
  4131f9:	call   0x42a4f8
  4131fe:	mov    rbp,QWORD PTR [rbx+0x28]
  413202:	cmp    QWORD PTR [rbp+0x0],0x0
  413207:	je     0x41390c
  41320d:	xor    esi,esi
  41320f:	jmp    0x413220
  413211:	add    rbp,0x8
  413215:	cmp    QWORD PTR [rbp+0x0],0x0
  41321a:	je     0x41390c
  413220:	test   r13b,r13b
  413223:	je     0x41325a
  413225:	mov    rax,QWORD PTR [rbx]
  413228:	mov    r8,rdi
  41322b:	movzx  edx,BYTE PTR [rax+0x38]
  41322f:	mov    rcx,QWORD PTR [rax+0x30]
  413233:	call   0x40ffc0
  413238:	mov    rax,QWORD PTR [rbx]
  41323b:	mov    r8,rdi
  41323e:	movzx  edx,BYTE PTR [rax+0x38]
  413242:	mov    rcx,QWORD PTR [rax+0x30]
  413246:	call   0x40ffc0
  41324b:	movzx  eax,BYTE PTR [rip+0x4702e]        # 0x45a280
  413252:	test   al,al
  413254:	jne    0x413909
  41325a:	mov    eax,esi
  41325c:	xor    edx,edx
  41325e:	add    esi,0x1
  413261:	div    DWORD PTR [rbx+0x10]
  413264:	mov    rax,QWORD PTR [rbx+0x18]
  413268:	mov    r13d,0x1
  41326e:	mov    edx,edx
  413270:	mov    rcx,QWORD PTR [rax+rdx*8]
  413274:	mov    rdx,rdi
  413277:	call   0x42a4f8
  41327c:	mov    rax,QWORD PTR [rbx]
  41327f:	mov    r8,rdi
  413282:	movzx  edx,BYTE PTR [rax+0x28]
  413286:	mov    rcx,QWORD PTR [rax+0x20]
  41328a:	call   0x40ffc0
  41328f:	mov    rcx,QWORD PTR [rbp+0x0]
  413293:	mov    rdx,rdi
  413296:	call   0x42a4f8
  41329b:	xor    edx,edx
  41329d:	mov    eax,esi
  41329f:	div    DWORD PTR [rbx+0x10]
  4132a2:	test   edx,edx
  4132a4:	je     0x413211
  4132aa:	mov    rax,QWORD PTR [rbx]
  4132ad:	mov    r8,rdi
  4132b0:	xor    r13d,r13d
  4132b3:	movzx  edx,BYTE PTR [rax+0x38]
  4132b7:	mov    rcx,QWORD PTR [rax+0x30]
  4132bb:	call   0x40ffc0
  4132c0:	jmp    0x413211
  4132c5:	movzx  edx,BYTE PTR [rip+0x46fb4]        # 0x45a280
  4132cc:	movzx  r15d,BYTE PTR [rax+0xa]
  4132d1:	movzx  r8d,WORD PTR [rax+0x6]
  4132d6:	mov    rsi,QWORD PTR [rax+0x48]
  4132da:	mov    r13d,DWORD PTR [rax+0x10]
  4132de:	test   dl,dl
  4132e0:	jne    0x4126f0
  4132e6:	cmp    BYTE PTR [rax+0xb],0x0
  4132ea:	jne    0x413f1f
  4132f0:	mov    r12,QWORD PTR [rbx+0x28]
  4132f4:	add    r13d,0x1
  4132f8:	xor    ebp,ebp
  4132fa:	lea    r14,[rip+0x2a4db]        # 0x43d7dc
  413301:	cmp    QWORD PTR [r12],0x0
  413306:	jne    0x413353
  413308:	jmp    0x413865
  41330d:	nop    DWORD PTR [rax]
  413310:	lea    rcx,[rip+0x2a5ad]        # 0x43d8c4
  413317:	mov    r9,rdi
  41331a:	mov    r8d,0x7
  413320:	mov    edx,0x1
  413325:	call   0x42a4e0
  41332a:	lea    rcx,[rip+0x2a59b]        # 0x43d8cc
  413331:	mov    r9,rdi
  413334:	mov    r8d,0xe
  41333a:	mov    edx,0x1
  41333f:	add    rbp,0x1
  413343:	call   0x42a4e0
  413348:	cmp    QWORD PTR [r12+rbp*8],0x0
  41334d:	je     0x413865
  413353:	xor    edx,edx
  413355:	mov    eax,ebp
  413357:	mov    esi,ebp
  413359:	div    DWORD PTR [rbx+0x10]
  41335c:	test   edx,edx
  41335e:	jne    0x413397
  413360:	movzx  eax,BYTE PTR [rip+0x46f19]        # 0x45a280
  413367:	test   al,al
  413369:	jne    0x413865
  41336f:	test   r15b,r15b
  413372:	jne    0x413440
  413378:	lea    eax,[r13+0x1]
  41337c:	lea    rdx,[rip+0x2a49d]        # 0x43d820
  413383:	mov    r8d,r13d
  413386:	mov    rcx,rdi
  413389:	mov    DWORD PTR [rsp+0x30],eax
  41338d:	call   0x426370
  413392:	mov    r13d,DWORD PTR [rsp+0x30]
  413397:	lea    rcx,[rip+0x2a4eb]        # 0x43d889
  41339e:	mov    r9,rdi
  4133a1:	mov    r8d,0x1c
  4133a7:	mov    edx,0x1
  4133ac:	call   0x42a4e0
  4133b1:	mov    eax,esi
  4133b3:	xor    edx,edx
  4133b5:	div    DWORD PTR [rbx+0x10]
  4133b8:	mov    rax,QWORD PTR [rbx+0x18]
  4133bc:	mov    edx,edx
  4133be:	mov    rcx,QWORD PTR [rax+rdx*8]
  4133c2:	mov    rdx,rdi
  4133c5:	call   0x40fff0
  4133ca:	lea    rcx,[rip+0x2a4d5]        # 0x43d8a6
  4133d1:	mov    r9,rdi
  4133d4:	mov    r8d,0x6
  4133da:	mov    edx,0x1
  4133df:	call   0x42a4e0
  4133e4:	mov    eax,esi
  4133e6:	xor    edx,edx
  4133e8:	lea    r8,[rip+0x2a3f3]        # 0x43d7e2
  4133ef:	div    DWORD PTR [rbx+0x10]
  4133f2:	mov    rax,QWORD PTR [rbx+0x58]
  4133f6:	mov    rcx,rdi
  4133f9:	mov    edx,edx
  4133fb:	cmp    BYTE PTR [rax+rdx*1],0x72
  4133ff:	lea    rdx,[rip+0x2a4a7]        # 0x43d8ad
  413406:	cmove  r8,r14
  41340a:	call   0x426370
  41340f:	mov    rsi,QWORD PTR [r12+rbp*8]
  413413:	lea    rdx,[rip+0x2a4a7]        # 0x43d8c1
  41341a:	mov    rcx,rsi
  41341d:	call   0x42a3e0
  413422:	cmp    BYTE PTR [rsi+rax*1],0x0
  413426:	je     0x413310
  41342c:	mov    rdx,rdi
  41342f:	mov    rcx,rsi
  413432:	call   0x40fff0
  413437:	jmp    0x41332a
  41343c:	nop    DWORD PTR [rax+0x0]
  413440:	lea    rcx,[rip+0x2a419]        # 0x43d860
  413447:	mov    r9,rdi
  41344a:	mov    r8d,0x28
  413450:	mov    edx,0x1
  413455:	call   0x42a4e0
  41345a:	jmp    0x413397
  41345f:	call   0x4102f0
  413464:	jmp    0x4126f0
  413469:	movzx  ecx,BYTE PTR [rip+0x46e10]        # 0x45a280
  413470:	movzx  r14d,BYTE PTR [rax+0xa]
  413475:	movzx  edx,WORD PTR [rax+0x6]
  413479:	mov    r15d,DWORD PTR [rax+0x10]
  41347d:	test   cl,cl
  41347f:	jne    0x4126f0
  413485:	cmp    dx,0x2
  413489:	mov    ecx,0x2
  41348e:	mov    r13d,0x2
  413494:	cmovbe ecx,edx
  413497:	cmp    BYTE PTR [rax+0xb],0x0
  41349b:	mov    WORD PTR [rsp+0x30],cx
  4134a0:	je     0x41353e
  4134a6:	test   r14b,r14b
  4134a9:	jne    0x4134f2
  4134ab:	cmp    QWORD PTR [rbx+0x8],0x0
  4134b0:	je     0x4134f2
  4134b2:	lea    rcx,[rip+0x2a5ae]        # 0x43da67
  4134b9:	mov    r9,rdi
  4134bc:	mov    r8d,0xa
  4134c2:	mov    edx,0x1
  4134c7:	call   0x42a4e0
  4134cc:	mov    rcx,QWORD PTR [rbx+0x8]
  4134d0:	mov    rdx,rdi
  4134d3:	call   0x40f8a0
  4134d8:	lea    rcx,[rip+0x2a593]        # 0x43da72
  4134df:	mov    r9,rdi
  4134e2:	mov    r8d,0x5
  4134e8:	mov    edx,0x1
  4134ed:	call   0x42a4e0
  4134f2:	lea    rcx,[rip+0x2a57f]        # 0x43da78
  4134f9:	mov    r9,rdi
  4134fc:	mov    r8d,0x8
  413502:	mov    edx,0x1
  413507:	call   0x42a4e0
  41350c:	cmp    WORD PTR [rsp+0x30],0x2
  413512:	mov    r9,rdi
  413515:	je     0x414046
  41351b:	lea    rcx,[rip+0x2a56c]        # 0x43da8e
  413522:	mov    r8d,0x8
  413528:	mov    edx,0x1
  41352d:	call   0x42a4e0
  413532:	xor    r13d,r13d
  413535:	test   r14b,r14b
  413538:	jne    0x414027
  41353e:	mov    r12,QWORD PTR [rbx+0x28]
  413542:	add    r15d,0x1
  413546:	xor    ebp,ebp
  413548:	cmp    QWORD PTR [r12],0x0
  41354d:	jne    0x413690
  413553:	jmp    0x4137f3
  413558:	nop    DWORD PTR [rax+rax*1+0x0]
  413560:	movzx  eax,BYTE PTR [rip+0x46d19]        # 0x45a280
  413567:	test   al,al
  413569:	jne    0x4137f3
  41356f:	test   r14b,r14b
  413572:	jne    0x4136d0
  413578:	cmp    r13w,0x1
  41357d:	je     0x4135cb
  41357f:	cmp    r15d,0x1
  413583:	jbe    0x4135a7
  413585:	cmp    WORD PTR [rsp+0x30],0x2
  41358b:	jne    0x4135a7
  41358d:	lea    rcx,[rip+0x2a509]        # 0x43da9d
  413594:	mov    r9,rdi
  413597:	mov    r8d,0x2
  41359d:	mov    edx,0x1
  4135a2:	call   0x42a4e0
  4135a7:	test   r13w,r13w
  4135ab:	jne    0x413dec
  4135b1:	lea    rcx,[rip+0x2a4ed]        # 0x43daa5
  4135b8:	mov    r9,rdi
  4135bb:	mov    r8d,0x5
  4135c1:	mov    edx,0x1
  4135c6:	call   0x42a4e0
  4135cb:	lea    eax,[r15+0x1]
  4135cf:	lea    rdx,[rip+0x2a4d5]        # 0x43daab
  4135d6:	mov    r8d,r15d
  4135d9:	mov    rcx,rdi
  4135dc:	mov    r13d,0x1
  4135e2:	mov    DWORD PTR [rsp+0x3c],eax
  4135e6:	call   0x426370
  4135eb:	cmp    WORD PTR [rsp+0x30],0x0
  4135f1:	jne    0x4136e1
  4135f7:	lea    rcx,[rip+0x2a4a2]        # 0x43daa0
  4135fe:	mov    r9,rdi
  413601:	mov    r8d,0x4
  413607:	mov    edx,0x1
  41360c:	call   0x42a4e0
  413611:	mov    r15d,DWORD PTR [rsp+0x3c]
  413616:	cmp    WORD PTR [rsp+0x30],0x1
  41361c:	mov    r9,rdi
  41361f:	je     0x413702
  413625:	lea    rcx,[rip+0x2a491]        # 0x43dabd
  41362c:	mov    r8d,0x5
  413632:	mov    edx,0x1
  413637:	call   0x42a4e0
  41363c:	mov    eax,esi
  41363e:	xor    edx,edx
  413640:	mov    r13d,0x2
  413646:	div    DWORD PTR [rbx+0x10]
  413649:	mov    rax,QWORD PTR [rbx+0x18]
  41364d:	mov    edx,edx
  41364f:	mov    rcx,QWORD PTR [rax+rdx*8]
  413653:	mov    rdx,rdi
  413656:	call   0x40f8a0
  41365b:	mov    rdx,rdi
  41365e:	mov    ecx,0x9
  413663:	call   0x42a500
  413668:	mov    rcx,QWORD PTR [r12+rbp*8]
  41366c:	mov    rdx,rdi
  41366f:	add    rbp,0x1
  413673:	call   0x40f8a0
  413678:	mov    rdx,rdi
  41367b:	mov    ecx,0xa
  413680:	call   0x42a500
  413685:	cmp    QWORD PTR [r12+rbp*8],0x0
  41368a:	je     0x4137f3
  413690:	xor    edx,edx
  413692:	mov    eax,ebp
  413694:	mov    esi,ebp
  413696:	div    DWORD PTR [rbx+0x10]
  413699:	test   edx,edx
  41369b:	je     0x413560
  4136a1:	test   r14b,r14b
  4136a4:	jne    0x4136c1
  4136a6:	cmp    r13w,0x2
  4136ab:	je     0x4136c1
  4136ad:	test   r13w,r13w
  4136b1:	je     0x413616
  4136b7:	mov    DWORD PTR [rsp+0x3c],r15d
  4136bc:	jmp    0x4135f7
  4136c1:	mov    eax,esi
  4136c3:	xor    edx,edx
  4136c5:	div    DWORD PTR [rbx+0x10]
  4136c8:	jmp    0x413649
  4136cd:	nop    DWORD PTR [rax]
  4136d0:	cmp    WORD PTR [rsp+0x30],0x0
  4136d6:	je     0x413649
  4136dc:	mov    DWORD PTR [rsp+0x3c],r15d
  4136e1:	lea    rcx,[rip+0x2a3b5]        # 0x43da9d
  4136e8:	mov    r9,rdi
  4136eb:	mov    r8d,0x2
  4136f1:	mov    edx,0x1
  4136f6:	call   0x42a4e0
  4136fb:	mov    r15d,DWORD PTR [rsp+0x3c]
  413700:	jmp    0x4136a1
  413702:	mov    r8d,0x7
  413708:	mov    edx,0x1
  41370d:	lea    rcx,[rip+0x2a3af]        # 0x43dac3
  413714:	jmp    0x413637
  413719:	mov    r15d,DWORD PTR [rbx+0x10]
  41371d:	test   r15d,r15d
  413720:	jne    0x412929
  413726:	lea    rcx,[rip+0x29df6]        # 0x43d523
  41372d:	mov    r9,rdi
  413730:	mov    r8d,0x2
  413736:	mov    edx,0x1
  41373b:	call   0x42a4e0
  413740:	test   r13b,r13b
  413743:	sete   al
  413746:	test   al,al
  413748:	je     0x412dc0
  41374e:	jmp    0x412b08
  413753:	lea    rcx,[rip+0x2a381]        # 0x43dadb
  41375a:	mov    r9,rdi
  41375d:	mov    r8d,0x2
  413763:	mov    edx,0x1
  413768:	call   0x42a4e0
  41376d:	test   r12b,r12b
  413770:	jne    0x413070
  413776:	mov    r9d,DWORD PTR [rbx+0x10]
  41377a:	mov    rbp,QWORD PTR [rbx+0x18]
  41377e:	test   r9d,r9d
  413781:	je     0x413056
  413787:	xor    esi,esi
  413789:	nop    DWORD PTR [rax+0x0]
  413790:	lea    rcx,[rip+0x2a34b]        # 0x43dae2
  413797:	mov    r9,rdi
  41379a:	mov    r8d,0x3
  4137a0:	mov    edx,0x1
  4137a5:	add    esi,0x1
  4137a8:	add    rbp,0x8
  4137ac:	call   0x42a4e0
  4137b1:	mov    rcx,QWORD PTR [rbp-0x8]
  4137b5:	mov    rdx,rdi
  4137b8:	call   0x40f8a0
  4137bd:	lea    rcx,[rip+0x2a322]        # 0x43dae6
  4137c4:	mov    r9,rdi
  4137c7:	mov    r8d,0x3
  4137cd:	mov    edx,0x1
  4137d2:	call   0x42a4e0
  4137d7:	cmp    esi,DWORD PTR [rbx+0x10]
  4137da:	jae    0x413056
  4137e0:	test   esi,esi
  4137e2:	je     0x413790
  4137e4:	mov    rdx,rdi
  4137e7:	mov    ecx,0x9
  4137ec:	call   0x42a500
  4137f1:	jmp    0x413790
  4137f3:	mov    rax,QWORD PTR [rbx]
  4137f6:	cmp    BYTE PTR [rax+0xc],0x0
  4137fa:	je     0x4126f0
  413800:	lea    rcx,[rip+0x2a2c4]        # 0x43dacb
  413807:	mov    r9,rdi
  41380a:	mov    r8d,0xa
  413810:	mov    edx,0x1
  413815:	call   0x42a4e0
  41381a:	mov    rbx,QWORD PTR [rbx+0x48]
  41381e:	test   rbx,rbx
  413821:	je     0x413117
  413827:	test   r14b,r14b
  41382a:	jne    0x413117
  413830:	movzx  eax,BYTE PTR [rip+0x46a49]        # 0x45a280
  413837:	test   al,al
  413839:	jne    0x413117
  41383f:	mov    rcx,QWORD PTR [rbx]
  413842:	mov    rdx,rdi
  413845:	call   0x40f8a0
  41384a:	mov    rdx,rdi
  41384d:	mov    ecx,0xa
  413852:	call   0x42a500
  413857:	mov    rbx,QWORD PTR [rbx+0x8]
  41385b:	test   rbx,rbx
  41385e:	jne    0x41383f
  413860:	jmp    0x413117
  413865:	mov    rax,QWORD PTR [rbx]
  413868:	cmp    BYTE PTR [rax+0xc],0x0
  41386c:	je     0x4126f0
  413872:	lea    rcx,[rip+0x2a062]        # 0x43d8db
  413879:	mov    r9,rdi
  41387c:	mov    r8d,0x9
  413882:	mov    edx,0x1
  413887:	call   0x42a4e0
  41388c:	test   r15b,r15b
  41388f:	jne    0x412ec0
  413895:	cmp    QWORD PTR [rbx+0x48],0x0
  41389a:	je     0x412ec0
  4138a0:	movzx  eax,BYTE PTR [rip+0x469d9]        # 0x45a280
  4138a7:	test   al,al
  4138a9:	jne    0x412ec0
  4138af:	lea    rcx,[rip+0x2a02f]        # 0x43d8e5
  4138b6:	mov    r9,rdi
  4138b9:	mov    r8d,0x3
  4138bf:	mov    edx,0x1
  4138c4:	call   0x42a4e0
  4138c9:	mov    rbx,QWORD PTR [rbx+0x48]
  4138cd:	test   rbx,rbx
  4138d0:	je     0x412f61
  4138d6:	mov    rcx,QWORD PTR [rbx]
  4138d9:	mov    rdx,rdi
  4138dc:	call   0x40fff0
  4138e1:	lea    rcx,[rip+0x29d16]        # 0x43d5fe
  4138e8:	mov    r9,rdi
  4138eb:	mov    r8d,0x7
  4138f1:	mov    edx,0x1
  4138f6:	call   0x42a4e0
  4138fb:	mov    rbx,QWORD PTR [rbx+0x8]
  4138ff:	test   rbx,rbx
  413902:	jne    0x4138d6
  413904:	jmp    0x412f61
  413909:	xor    r13d,r13d
  41390c:	mov    rax,QWORD PTR [rbx]
  41390f:	cmp    BYTE PTR [rax+0xc],0x0
  413913:	je     0x4126f0
  413919:	test   r12b,r12b
  41391c:	jne    0x413934
  41391e:	cmp    QWORD PTR [rbx+0x48],0x0
  413923:	je     0x413934
  413925:	movzx  edx,BYTE PTR [rip+0x46954]        # 0x45a280
  41392c:	test   dl,dl
  41392e:	je     0x414081
  413934:	test   r13b,r13b
  413937:	je     0x4126f0
  41393d:	mov    rax,QWORD PTR [rbx]
  413940:	movzx  edx,BYTE PTR [rax+0x38]
  413944:	test   dl,dl
  413946:	je     0x412ec0
  41394c:	mov    rcx,QWORD PTR [rax+0x30]
  413950:	mov    r8,rdi
  413953:	call   0x40ffc0
  413958:	jmp    0x4126f0
  41395d:	lea    rcx,[rip+0x29ff1]        # 0x43d955
  413964:	mov    r9,rdi
  413967:	mov    r8d,0x2
  41396d:	mov    edx,0x1
  413972:	mov    r13,rsi
  413975:	call   0x42a4e0
  41397a:	lea    rdx,[rip+0x29fd0]        # 0x43d951
  413981:	mov    rcx,rsi
  413984:	call   0x42a410
  413989:	mov    r9,rdi
  41398c:	mov    r8d,0x1
  413992:	mov    rcx,rsi
  413995:	mov    rdx,rax
  413998:	call   0x42a4e0
  41399d:	lea    rdx,[rip+0x29fad]        # 0x43d951
  4139a4:	mov    rcx,rsi
  4139a7:	call   0x42a410
  4139ac:	lea    rcx,[rip+0x29fa5]        # 0x43d958
  4139b3:	add    rax,rsi
  4139b6:	mov    r9,rdi
  4139b9:	mov    r8d,0xb
  4139bf:	mov    edx,0x1
  4139c4:	mov    QWORD PTR [rsp+0x30],rax
  4139c9:	call   0x42a4e0
  4139ce:	mov    rsi,QWORD PTR [rsp+0x30]
  4139d3:	jmp    0x412d15
  4139d8:	lea    rdx,[rip+0x29e08]        # 0x43d7e7
  4139df:	mov    rcx,rdi
  4139e2:	call   0x426370
  4139e7:	test   rsi,rsi
  4139ea:	je     0x4139fe
  4139ec:	lea    rdx,[rip+0x29e07]        # 0x43d7fa
  4139f3:	mov    r8,rsi
  4139f6:	mov    rcx,rdi
  4139f9:	call   0x426370
  4139fe:	lea    rcx,[rip+0x29df9]        # 0x43d7fe
  413a05:	mov    r9,rdi
  413a08:	mov    r8d,0x2
  413a0e:	mov    edx,0x1
  413a13:	call   0x42a4e0
  413a18:	test   r14b,r14b
  413a1b:	jne    0x412746
  413a21:	cmp    QWORD PTR [rbx+0x8],0x0
  413a26:	je     0x413a68
  413a28:	lea    rcx,[rip+0x29dd2]        # 0x43d801
  413a2f:	mov    r9,rdi
  413a32:	mov    r8d,0xb
  413a38:	mov    edx,0x1
  413a3d:	call   0x42a4e0
  413a42:	mov    rcx,QWORD PTR [rbx+0x8]
  413a46:	mov    rdx,rdi
  413a49:	call   0x40fff0
  413a4e:	lea    rcx,[rip+0x29db8]        # 0x43d80d
  413a55:	mov    r9,rdi
  413a58:	mov    r8d,0xb
  413a5e:	mov    edx,0x1
  413a63:	call   0x42a4e0
  413a68:	lea    rcx,[rip+0x2a0ac]        # 0x43db1b
  413a6f:	mov    r9,rdi
  413a72:	mov    r8d,0x7
  413a78:	mov    edx,0x1
  413a7d:	call   0x42a4e0
  413a82:	mov    rsi,QWORD PTR [rbx+0x18]
  413a86:	cmp    QWORD PTR [rsi],0x0
  413a8a:	je     0x413ada
  413a8c:	nop    DWORD PTR [rax+0x0]
  413a90:	lea    rcx,[rip+0x29e57]        # 0x43d8ee
  413a97:	mov    r9,rdi
  413a9a:	mov    r8d,0x17
  413aa0:	mov    edx,0x1
  413aa5:	add    rsi,0x8
  413aa9:	call   0x42a4e0
  413aae:	mov    rcx,QWORD PTR [rsi-0x8]
  413ab2:	mov    rdx,rdi
  413ab5:	call   0x40fff0
  413aba:	lea    rcx,[rip+0x29de5]        # 0x43d8a6
  413ac1:	mov    r9,rdi
  413ac4:	mov    r8d,0x6
  413aca:	mov    edx,0x1
  413acf:	call   0x42a4e0
  413ad4:	cmp    QWORD PTR [rsi],0x0
  413ad8:	jne    0x413a90
  413ada:	lea    rcx,[rip+0x29e25]        # 0x43d906
  413ae1:	mov    r9,rdi
  413ae4:	mov    r8d,0x8
  413aea:	mov    edx,0x1
  413aef:	call   0x42a4e0
  413af4:	jmp    0x412746
  413af9:	cmp    r12w,0x1
  413afe:	jbe    0x413e18
  413b04:	lea    rcx,[rip+0x29e23]        # 0x43d92e
  413b0b:	mov    r9,rdi
  413b0e:	mov    r8d,0x2
  413b14:	mov    edx,0x1
  413b19:	call   0x42a4e0
  413b1e:	lea    rcx,[rip+0x299fe]        # 0x43d523
  413b25:	mov    r9,rdi
  413b28:	mov    r8d,0x2
  413b2e:	mov    edx,0x1
  413b33:	call   0x42a4e0
  413b38:	test   r14b,r14b
  413b3b:	jne    0x4129cb
  413b41:	lea    rcx,[rip+0x29e1c]        # 0x43d964
  413b48:	mov    r9,rdi
  413b4b:	mov    r8d,0x9
  413b51:	mov    edx,0x1
  413b56:	call   0x42a4e0
  413b5b:	mov    esi,DWORD PTR [rbx+0x10]
  413b5e:	mov    rbp,QWORD PTR [rbx+0x18]
  413b62:	test   esi,esi
  413b64:	je     0x413be0
  413b66:	xor    esi,esi
  413b68:	nop    DWORD PTR [rax+rax*1+0x0]
  413b70:	lea    rcx,[rip+0x29df7]        # 0x43d96e
  413b77:	mov    r9,rdi
  413b7a:	mov    r8d,0x16
  413b80:	mov    edx,0x1
  413b85:	add    esi,0x1
  413b88:	add    rbp,0x8
  413b8c:	call   0x42a4e0
  413b91:	mov    rcx,QWORD PTR [rbp-0x8]
  413b95:	mov    rdx,rdi
  413b98:	call   0x40f710
  413b9d:	lea    rcx,[rip+0x29de1]        # 0x43d985
  413ba4:	mov    r9,rdi
  413ba7:	mov    r8d,0x2
  413bad:	mov    edx,0x1
  413bb2:	call   0x42a4e0
  413bb7:	cmp    esi,DWORD PTR [rbx+0x10]
  413bba:	jae    0x413eb0
  413bc0:	test   esi,esi
  413bc2:	je     0x413b70
  413bc4:	lea    rcx,[rip+0x299c1]        # 0x43d58c
  413bcb:	mov    r9,rdi
  413bce:	mov    r8d,0x3
  413bd4:	mov    edx,0x1
  413bd9:	call   0x42a4e0
  413bde:	jmp    0x413b70
  413be0:	lea    rcx,[rip+0x299a9]        # 0x43d590
  413be7:	mov    r9,rdi
  413bea:	mov    r8d,0x4
  413bf0:	mov    edx,0x1
  413bf5:	call   0x42a4e0
  413bfa:	lea    rcx,[rip+0x29d87]        # 0x43d988
  413c01:	mov    r9,rdi
  413c04:	mov    r8d,0x17
  413c0a:	mov    edx,0x1
  413c0f:	call   0x42a4e0
  413c14:	lea    rcx,[rip+0x29d49]        # 0x43d964
  413c1b:	mov    r9,rdi
  413c1e:	mov    r8d,0x9
  413c24:	mov    edx,0x1
  413c29:	call   0x42a4e0
  413c2e:	mov    r11d,DWORD PTR [rbx+0x10]
  413c32:	mov    rbp,QWORD PTR [rbx+0x18]
  413c36:	test   r11d,r11d
  413c39:	je     0x413cac
  413c3b:	xor    esi,esi
  413c3d:	nop    DWORD PTR [rax]
  413c40:	lea    rcx,[rip+0x29d27]        # 0x43d96e
  413c47:	mov    r9,rdi
  413c4a:	mov    r8d,0x16
  413c50:	mov    edx,0x1
  413c55:	add    esi,0x1
  413c58:	add    rbp,0x8
  413c5c:	call   0x42a4e0
  413c61:	mov    rcx,QWORD PTR [rbp-0x8]
  413c65:	mov    rdx,rdi
  413c68:	call   0x40f710
  413c6d:	lea    rcx,[rip+0x29d11]        # 0x43d985
  413c74:	mov    r9,rdi
  413c77:	mov    r8d,0x2
  413c7d:	mov    edx,0x1
  413c82:	call   0x42a4e0
  413c87:	cmp    esi,DWORD PTR [rbx+0x10]
  413c8a:	jae    0x413cac
  413c8c:	test   esi,esi
  413c8e:	je     0x413c40
  413c90:	lea    rcx,[rip+0x298f5]        # 0x43d58c
  413c97:	mov    r9,rdi
  413c9a:	mov    r8d,0x3
  413ca0:	mov    edx,0x1
  413ca5:	call   0x42a4e0
  413caa:	jmp    0x413c40
  413cac:	lea    rcx,[rip+0x298dd]        # 0x43d590
  413cb3:	mov    r9,rdi
  413cb6:	mov    r8d,0x4
  413cbc:	mov    edx,0x1
  413cc1:	call   0x42a4e0
  413cc6:	cmp    r12w,0x3
  413ccb:	je     0x413fc9
  413cd1:	lea    rcx,[rip+0x29cc8]        # 0x43d9a0
  413cd8:	mov    r9,rdi
  413cdb:	mov    r8d,0x9
  413ce1:	mov    edx,0x1
  413ce6:	call   0x42a4e0
  413ceb:	lea    rcx,[rip+0x29cb8]        # 0x43d9aa
  413cf2:	mov    r9,rdi
  413cf5:	mov    r8d,0x9
  413cfb:	mov    edx,0x1
  413d00:	call   0x42a4e0
  413d05:	cmp    QWORD PTR [rbx+0x8],0x0
  413d0a:	je     0x4140ca
  413d10:	cmp    r12w,0x2
  413d15:	je     0x4140da
  413d1b:	lea    rcx,[rip+0x29c9f]        # 0x43d9c1
  413d22:	mov    r9,rdi
  413d25:	mov    r8d,0x9
  413d2b:	mov    edx,0x1
  413d30:	call   0x42a4e0
  413d35:	mov    rcx,QWORD PTR [rbx+0x8]
  413d39:	mov    rdx,rdi
  413d3c:	call   0x40f710
  413d41:	lea    rcx,[rip+0x29c83]        # 0x43d9cb
  413d48:	mov    r9,rdi
  413d4b:	mov    r8d,0xe
  413d51:	mov    edx,0x1
  413d56:	call   0x42a4e0
  413d5b:	mov    rcx,QWORD PTR [rbx+0x8]
  413d5f:	mov    rdx,rdi
  413d62:	call   0x40f710
  413d67:	lea    rcx,[rip+0x29c6c]        # 0x43d9da
  413d6e:	mov    r9,rdi
  413d71:	mov    r8d,0xb
  413d77:	mov    edx,0x1
  413d7c:	call   0x42a4e0
  413d81:	lea    rcx,[rip+0x29c39]        # 0x43d9c1
  413d88:	mov    r9,rdi
  413d8b:	mov    r8d,0x9
  413d91:	mov    edx,0x1
  413d96:	call   0x42a4e0
  413d9b:	mov    rcx,QWORD PTR [rbx+0x8]
  413d9f:	mov    rdx,rdi
  413da2:	call   0x40f710
  413da7:	lea    rcx,[rip+0x29c38]        # 0x43d9e6
  413dae:	mov    r9,rdi
  413db1:	mov    r8d,0x2
  413db7:	mov    edx,0x1
  413dbc:	call   0x42a4e0
  413dc1:	mov    rcx,QWORD PTR [rbx+0x8]
  413dc5:	mov    rdx,rdi
  413dc8:	call   0x40f710
  413dcd:	lea    rcx,[rip+0x29c15]        # 0x43d9e9
  413dd4:	mov    r9,rdi
  413dd7:	mov    r8d,0xf
  413ddd:	mov    edx,0x1
  413de2:	call   0x42a4e0
  413de7:	jmp    0x4129cb
  413dec:	lea    rcx,[rip+0x29cad]        # 0x43daa0
  413df3:	mov    r9,rdi
  413df6:	mov    r8d,0x4
  413dfc:	mov    edx,0x1
  413e01:	call   0x42a4e0
  413e06:	jmp    0x4135b1
  413e0b:	mov    r8d,DWORD PTR [rbx+0x10]
  413e0f:	test   r8d,r8d
  413e12:	jne    0x412c59
  413e18:	lea    rcx,[rip+0x29704]        # 0x43d523
  413e1f:	mov    r9,rdi
  413e22:	mov    r8d,0x2
  413e28:	mov    edx,0x1
  413e2d:	call   0x42a4e0
  413e32:	test   r14b,r14b
  413e35:	jne    0x4129cb
  413e3b:	mov    ecx,DWORD PTR [rbx+0x10]
  413e3e:	mov    rbp,QWORD PTR [rbx+0x18]
  413e42:	test   ecx,ecx
  413e44:	jne    0x413b66
  413e4a:	lea    rcx,[rip+0x2973f]        # 0x43d590
  413e51:	mov    r9,rdi
  413e54:	mov    r8d,0x4
  413e5a:	mov    edx,0x1
  413e5f:	call   0x42a4e0
  413e64:	lea    rcx,[rip+0x29b1d]        # 0x43d988
  413e6b:	mov    r9,rdi
  413e6e:	mov    r8d,0x17
  413e74:	mov    edx,0x1
  413e79:	call   0x42a4e0
  413e7e:	mov    eax,DWORD PTR [rbx+0x10]
  413e81:	mov    rbp,QWORD PTR [rbx+0x18]
  413e85:	test   eax,eax
  413e87:	jne    0x413c3b
  413e8d:	lea    rcx,[rip+0x296fc]        # 0x43d590
  413e94:	mov    r9,rdi
  413e97:	mov    r8d,0x4
  413e9d:	mov    edx,0x1
  413ea2:	call   0x42a4e0
  413ea7:	jmp    0x413cd1
  413eac:	nop    DWORD PTR [rax+0x0]
  413eb0:	lea    rcx,[rip+0x296d9]        # 0x43d590
  413eb7:	mov    r9,rdi
  413eba:	mov    r8d,0x4
  413ec0:	mov    edx,0x1
  413ec5:	call   0x42a4e0
  413eca:	lea    rcx,[rip+0x29ab7]        # 0x43d988
  413ed1:	mov    r9,rdi
  413ed4:	mov    r8d,0x17
  413eda:	mov    edx,0x1
  413edf:	call   0x42a4e0
  413ee4:	cmp    r12w,0x1
  413ee9:	ja     0x413c14
  413eef:	jmp    0x413e7e
  413ef1:	lea    rcx,[rip+0x29b89]        # 0x43da81
  413ef8:	mov    r8d,0xc
  413efe:	mov    edx,0x1
  413f03:	call   0x42a4e0
  413f08:	jmp    0x4125d0
  413f0d:	mov    rdx,rdi
  413f10:	mov    ecx,0x6c
  413f15:	call   0x42a500
  413f1a:	jmp    0x412d15
  413f1f:	lea    rdx,[rip+0x298c1]        # 0x43d7e7
  413f26:	mov    rcx,rdi
  413f29:	call   0x426370
  413f2e:	test   rsi,rsi
  413f31:	je     0x413f45
  413f33:	lea    rdx,[rip+0x298c0]        # 0x43d7fa
  413f3a:	mov    r8,rsi
  413f3d:	mov    rcx,rdi
  413f40:	call   0x426370
  413f45:	lea    rcx,[rip+0x298b2]        # 0x43d7fe
  413f4c:	mov    r9,rdi
  413f4f:	mov    r8d,0x2
  413f55:	mov    edx,0x1
  413f5a:	call   0x42a4e0
  413f5f:	test   r15b,r15b
  413f62:	jne    0x4132f0
  413f68:	cmp    QWORD PTR [rbx+0x8],0x0
  413f6d:	je     0x4132f0
  413f73:	lea    rcx,[rip+0x29887]        # 0x43d801
  413f7a:	mov    r9,rdi
  413f7d:	mov    r8d,0xb
  413f83:	mov    edx,0x1
  413f88:	call   0x42a4e0
  413f8d:	mov    rcx,QWORD PTR [rbx+0x8]
  413f91:	mov    rdx,rdi
  413f94:	call   0x40fff0
  413f99:	lea    rcx,[rip+0x2986d]        # 0x43d80d
  413fa0:	mov    r9,rdi
  413fa3:	mov    r8d,0xb
  413fa9:	mov    edx,0x1
  413fae:	call   0x42a4e0
  413fb3:	jmp    0x4132f0
  413fb8:	mov    rcx,QWORD PTR [rax+0x30]
  413fbc:	mov    r8,rbp
  413fbf:	call   0x40ffc0
  413fc4:	jmp    0x4126f0
  413fc9:	lea    rcx,[rip+0x299da]        # 0x43d9aa
  413fd0:	mov    r9,rdi
  413fd3:	mov    r8d,0x9
  413fd9:	mov    edx,0x1
  413fde:	call   0x42a4e0
  413fe3:	cmp    QWORD PTR [rbx+0x8],0x0
  413fe8:	jne    0x413d1b
  413fee:	lea    rcx,[rip+0x29a04]        # 0x43d9f9
  413ff5:	mov    r9,rdi
  413ff8:	mov    r8d,0x15
  413ffe:	mov    edx,0x1
  414003:	call   0x42a4e0
  414008:	lea    rcx,[rip+0x29a00]        # 0x43da0f
  41400f:	mov    r9,rdi
  414012:	mov    r8d,0x19
  414018:	mov    edx,0x1
  41401d:	call   0x42a4e0
  414022:	jmp    0x4129cb
  414027:	lea    rcx,[rip+0x29a69]        # 0x43da97
  41402e:	mov    r9,rdi
  414031:	mov    r8d,0x5
  414037:	mov    edx,0x1
  41403c:	call   0x42a4e0
  414041:	jmp    0x41353e
  414046:	lea    rcx,[rip+0x29a34]        # 0x43da81
  41404d:	mov    r8d,0xc
  414053:	mov    edx,0x1
  414058:	call   0x42a4e0
  41405d:	jmp    0x413532
  414062:	lea    rcx,[rip+0x294bd]        # 0x43d526
  414069:	mov    r9,rdi
  41406c:	mov    r8d,0x7
  414072:	mov    edx,0x1
  414077:	call   0x42a4e0
  41407c:	jmp    0x412e63
  414081:	movzx  edx,BYTE PTR [rax+0x38]
  414085:	mov    rcx,QWORD PTR [rax+0x30]
  414089:	mov    r8,rdi
  41408c:	call   0x40ffc0
  414091:	mov    rsi,QWORD PTR [rbx+0x48]
  414095:	test   rsi,rsi
  414098:	je     0x413934
  41409e:	mov    rax,QWORD PTR [rbx]
  4140a1:	mov    r8,rdi
  4140a4:	movzx  edx,BYTE PTR [rax+0x38]
  4140a8:	mov    rcx,QWORD PTR [rax+0x30]
  4140ac:	call   0x40ffc0
  4140b1:	mov    rcx,QWORD PTR [rsi]
  4140b4:	mov    rdx,rdi
  4140b7:	call   0x42a4f8
  4140bc:	mov    rsi,QWORD PTR [rsi+0x8]
  4140c0:	test   rsi,rsi
  4140c3:	jne    0x41409e
  4140c5:	jmp    0x413934
  4140ca:	cmp    r12w,0x2
  4140cf:	jne    0x4129cb
  4140d5:	jmp    0x413fee
  4140da:	lea    rcx,[rip+0x298d3]        # 0x43d9b4
  4140e1:	mov    r9,rdi
  4140e4:	mov    r8d,0xc
  4140ea:	mov    edx,0x1
  4140ef:	call   0x42a4e0
  4140f4:	lea    rcx,[rip+0x298c6]        # 0x43d9c1
  4140fb:	mov    r9,rdi
  4140fe:	mov    r8d,0x9
  414104:	mov    edx,0x1
  414109:	call   0x42a4e0
  41410e:	mov    rcx,QWORD PTR [rbx+0x8]
  414112:	mov    rdx,rdi
  414115:	call   0x40f710
  41411a:	lea    rcx,[rip+0x298aa]        # 0x43d9cb
  414121:	mov    r9,rdi
  414124:	mov    r8d,0xe
  41412a:	mov    edx,0x1
  41412f:	call   0x42a4e0
  414134:	mov    rcx,QWORD PTR [rbx+0x8]
  414138:	mov    rdx,rdi
  41413b:	call   0x40f710
  414140:	lea    rcx,[rip+0x29893]        # 0x43d9da
  414147:	mov    r9,rdi
  41414a:	mov    r8d,0xb
  414150:	mov    edx,0x1
  414155:	call   0x42a4e0
  41415a:	lea    rcx,[rip+0x29853]        # 0x43d9b4
  414161:	mov    r9,rdi
  414164:	mov    r8d,0xc
  41416a:	mov    edx,0x1
  41416f:	call   0x42a4e0
  414174:	jmp    0x413d81
  414179:	lea    rcx,[rip+0x297be]        # 0x43d93e
  414180:	mov    r9,rdi
  414183:	mov    r8d,0x12
  414189:	mov    edx,0x1
  41418e:	mov    r12d,0x3
  414194:	call   0x42a4e0
  414199:	jmp    0x412c34
  41419e:	xchg   ax,ax
  4141a0:	push   r15
  4141a2:	push   r14
  4141a4:	push   r13
  4141a6:	push   r12
  4141a8:	push   rbp
  4141a9:	push   rdi
  4141aa:	push   rsi
  4141ab:	push   rbx
  4141ac:	sub    rsp,0xe8
  4141b3:	movzx  eax,BYTE PTR [rip+0x460c6]        # 0x45a280
  4141ba:	test   al,al
  4141bc:	je     0x4141d2
  4141be:	add    rsp,0xe8
  4141c5:	pop    rbx
  4141c6:	pop    rsi
  4141c7:	pop    rdi
  4141c8:	pop    rbp
  4141c9:	pop    r12
  4141cb:	pop    r13
  4141cd:	pop    r14
  4141cf:	pop    r15
  4141d1:	ret    
  4141d2:	mov    rbp,rcx
  4141d5:	mov    rsi,rdx
  4141d8:	mov    QWORD PTR [rsp+0x68],r9
  4141dd:	mov    QWORD PTR [rsp+0x60],r8
  4141e2:	lea    r12,[rsp+0x70]
  4141e7:	call   0x427e70
  4141ec:	mov    rcx,rbp
  4141ef:	mov    ebx,eax
  4141f1:	call   0x427e80
  4141f6:	mov    DWORD PTR [rsp+0x20],ebx
  4141fa:	mov    r8,QWORD PTR [rsi+0x70]
  4141fe:	mov    rcx,r12
  414201:	mov    r9d,eax
  414204:	mov    rdx,rsi
  414207:	xor    ebx,ebx
  414209:	call   0x412100
  41420e:	mov    ecx,DWORD PTR [rsp+0x80]
  414215:	test   ecx,ecx
  414217:	jg     0x414268
  414219:	jmp    0x4142bd
  41421e:	xchg   ax,ax
  414220:	cmp    eax,0x1c
  414223:	jae    0x414290
  414225:	cmp    eax,0x17
  414228:	je     0x414290
  41422a:	ja     0x4142a0
  41422c:	sub    eax,0x14
  41422f:	cmp    eax,0x1
  414232:	jbe    0x414290
  414234:	mov    r13d,0x6c
  41423a:	movsx  edi,BYTE PTR [rsi+0x80]
  414241:	mov    edx,ebx
  414243:	mov    rcx,rbp
  414246:	call   0x427ee0
  41424b:	mov    r9d,r13d
  41424e:	mov    rdx,rax
  414251:	mov    rcx,r12
  414254:	add    ebx,0x1
  414257:	mov    r8d,edi
  41425a:	call   0x4121a0
  41425f:	cmp    DWORD PTR [rsp+0x80],ebx
  414266:	jle    0x4142bd
  414268:	mov    edx,ebx
  41426a:	mov    rcx,rbp
  41426d:	call   0x427ec8
  414272:	cmp    eax,0x1d
  414275:	jbe    0x414220
  414277:	cmp    eax,0x316
  41427c:	je     0x414290
  41427e:	ja     0x4142b0
  414280:	sub    eax,0x2bc
  414285:	cmp    eax,0x1
  414288:	ja     0x414234
  41428a:	nop    WORD PTR [rax+rax*1+0x0]
  414290:	mov    r13d,0x72
  414296:	jmp    0x41423a
  414298:	nop    DWORD PTR [rax+rax*1+0x0]
  4142a0:	cmp    eax,0x1a
  4142a3:	jne    0x414234
  4142a5:	jmp    0x414290
  4142a7:	nop    WORD PTR [rax+rax*1+0x0]
  4142b0:	cmp    eax,0x6a4
  4142b5:	jne    0x414234
  4142bb:	jmp    0x414290
  4142bd:	mov    edx,DWORD PTR [rsp+0x84]
  4142c4:	xor    edi,edi
  4142c6:	test   edx,edx
  4142c8:	jle    0x414530
  4142ce:	xchg   ax,ax
  4142d0:	mov    eax,DWORD PTR [rsp+0x80]
  4142d7:	xor    ebx,ebx
  4142d9:	test   eax,eax
  4142db:	jg     0x41432b
  4142dd:	jmp    0x414520
  4142e2:	mov    r15,QWORD PTR [rsi+0x60]
  4142e6:	xor    r9d,r9d
  4142e9:	test   r15,r15
  4142ec:	je     0x414510
  4142f2:	mov    rax,QWORD PTR [rsi+0x88]
  4142f9:	test   rax,rax
  4142fc:	je     0x414500
  414302:	movsxd rdx,ebx
  414305:	xor    r8d,r8d
  414308:	cmp    BYTE PTR [rax+rdx*1],0x0
  41430c:	setne  r8b
  414310:	mov    rdx,r15
  414313:	mov    rcx,r12
  414316:	add    ebx,0x1
  414319:	call   0x412220
  41431e:	cmp    DWORD PTR [rsp+0x80],ebx
  414325:	jle    0x414520
  41432b:	mov    r8d,ebx
  41432e:	mov    edx,edi
  414330:	mov    rcx,rbp
  414333:	call   0x427ea8
  414338:	test   eax,eax
  41433a:	jne    0x4142e2
  41433c:	mov    edx,edi
  41433e:	mov    r8d,ebx
  414341:	mov    rcx,rbp
  414344:	mov    DWORD PTR [rsp+0x30],eax
  414348:	call   0x427e98
  41434d:	mov    rdx,QWORD PTR [rsp+0xc8]
  414355:	mov    r15,rax
  414358:	movsxd rax,ebx
  41435b:	mov    r9d,DWORD PTR [rsp+0x30]
  414360:	cmp    BYTE PTR [rdx+rax*1],0x72
  414364:	jne    0x4142f2
  414366:	cmp    BYTE PTR [rsi+0x40],0x0
  41436a:	je     0x4142f2
  41436c:	mov    rcx,r15
  41436f:	xor    r14d,r14d
  414372:	call   0x40ff70
  414377:	mov    rcx,QWORD PTR [rip+0x45fb2]        # 0x45a330
  41437e:	mov    DWORD PTR [rsp+0x38],eax
  414382:	call   0x42a558
  414387:	mov    rcx,r15
  41438a:	mov    DWORD PTR [rsp+0x30],eax
  41438e:	call   0x42a400
  414393:	mov    rcx,r15
  414396:	mov    QWORD PTR [rsp+0x40],rax
  41439b:	call   0x40ff70
  4143a0:	mov    rcx,QWORD PTR [rip+0x45f89]        # 0x45a330
  4143a7:	mov    r13d,eax
  4143aa:	call   0x42a558
  4143af:	test   r13d,r13d
  4143b2:	mov    DWORD PTR [rsp+0x48],eax
  4143b6:	jle    0x4143e7
  4143b8:	mov    rcx,QWORD PTR [rip+0x45f69]        # 0x45a328
  4143bf:	call   0x42a400
  4143c4:	mov    r9d,DWORD PTR [rsp+0x48]
  4143c9:	mov    r8,rax
  4143cc:	mov    eax,r13d
  4143cf:	cdq    
  4143d0:	idiv   r9d
  4143d3:	mov    r13d,eax
  4143d6:	xor    eax,eax
  4143d8:	test   edx,edx
  4143da:	sete   al
  4143dd:	sub    r13d,eax
  4143e0:	mov    r14d,r13d
  4143e3:	imul   r14d,r8d
  4143e7:	mov    edx,0x2e
  4143ec:	mov    rcx,r15
  4143ef:	call   0x42a428
  4143f4:	test   rax,rax
  4143f7:	je     0x41440a
  4143f9:	mov    rcx,QWORD PTR [rip+0x45f38]        # 0x45a338
  414400:	call   0x42a400
  414405:	lea    r14d,[r14+rax*1-0x1]
  41440a:	mov    rax,QWORD PTR [rsp+0x40]
  41440f:	lea    ecx,[r14+rax*1+0x1]
  414414:	movsxd rcx,ecx
  414417:	call   0x424800
  41441c:	mov    r10,rax
  41441f:	mov    eax,DWORD PTR [rsp+0x38]
  414423:	mov    ecx,DWORD PTR [rsp+0x30]
  414427:	cdq    
  414428:	idiv   ecx
  41442a:	movzx  eax,BYTE PTR [r15]
  41442e:	test   edx,edx
  414430:	cmove  edx,ecx
  414433:	cmp    al,0x2d
  414435:	je     0x414621
  41443b:	mov    ecx,eax
  41443d:	xor    r14d,r14d
  414440:	xor    eax,eax
  414442:	cmp    cl,0x2e
  414445:	je     0x41463d
  41444b:	test   cl,cl
  41444d:	je     0x414591
  414453:	mov    r11d,0x1
  414459:	mov    DWORD PTR [rsp+0x38],ebx
  41445d:	mov    DWORD PTR [rsp+0x40],edi
  414461:	sub    r11d,edx
  414464:	mov    QWORD PTR [rsp+0x50],rbp
  414469:	mov    QWORD PTR [rsp+0x58],rsi
  41446e:	xor    r13d,r13d
  414471:	mov    rbx,r15
  414474:	mov    rdi,r10
  414477:	mov    r8d,ecx
  41447a:	mov    QWORD PTR [rsp+0x48],r12
  41447f:	mov    ebp,r11d
  414482:	mov    esi,DWORD PTR [rsp+0x30]
  414486:	jmp    0x414494
  414488:	nop    DWORD PTR [rax+rax*1+0x0]
  414490:	add    r13,0x1
  414494:	lea    edx,[r13+0x1]
  414498:	movsxd rax,r14d
  41449b:	add    r14d,0x1
  41449f:	mov    BYTE PTR [rdi+rax*1],r8b
  4144a3:	mov    eax,r13d
  4144a6:	movsxd rcx,edx
  4144a9:	lea    r15,[rbx+rcx*1]
  4144ad:	movzx  r8d,BYTE PTR [r15]
  4144b1:	cmp    r8b,0x2e
  4144b5:	je     0x4145a4
  4144bb:	test   r8b,r8b
  4144be:	je     0x414574
  4144c4:	test   edx,edx
  4144c6:	je     0x414490
  4144c8:	add    eax,ebp
  4144ca:	cdq    
  4144cb:	idiv   esi
  4144cd:	test   edx,edx
  4144cf:	jne    0x414490
  4144d1:	mov    r12,QWORD PTR [rip+0x45e50]        # 0x45a328
  4144d8:	movsxd rcx,r14d
  4144db:	add    rcx,rdi
  4144de:	mov    rdx,r12
  4144e1:	call   0x42a418
  4144e6:	mov    rcx,r12
  4144e9:	call   0x42a400
  4144ee:	movzx  r8d,BYTE PTR [r15]
  4144f2:	add    r14d,eax
  4144f5:	jmp    0x414490
  4144f7:	nop    WORD PTR [rax+rax*1+0x0]
  414500:	xor    r8d,r8d
  414503:	jmp    0x414310
  414508:	nop    DWORD PTR [rax+rax*1+0x0]
  414510:	lea    r15,[rip+0x29205]        # 0x43d71c
  414517:	jmp    0x4142f2
  41451c:	nop    DWORD PTR [rax+0x0]
  414520:	add    edi,0x1
  414523:	cmp    DWORD PTR [rsp+0x84],edi
  41452a:	jg     0x4142d0
  414530:	mov    rbx,QWORD PTR [rsi+0x78]
  414534:	test   rbx,rbx
  414537:	je     0x414555
  414539:	mov    rdx,QWORD PTR [rbx]
  41453c:	test   rdx,rdx
  41453f:	je     0x414555
  414541:	add    rbx,0x8
  414545:	mov    rcx,r12
  414548:	call   0x4122c0
  41454d:	mov    rdx,QWORD PTR [rbx]
  414550:	test   rdx,rdx
  414553:	jne    0x414541
  414555:	mov    r8,QWORD PTR [rsp+0x68]
  41455a:	mov    rdx,QWORD PTR [rsp+0x60]
  41455f:	mov    rcx,r12
  414562:	call   0x412460
  414567:	mov    rcx,r12
  41456a:	call   0x412350
  41456f:	jmp    0x4141be
  414574:	mov    r10,rdi
  414577:	mov    ebx,DWORD PTR [rsp+0x38]
  41457b:	mov    edi,DWORD PTR [rsp+0x40]
  41457f:	mov    r12,QWORD PTR [rsp+0x48]
  414584:	mov    rbp,QWORD PTR [rsp+0x50]
  414589:	movsxd rax,r14d
  41458c:	mov    rsi,QWORD PTR [rsp+0x58]
  414591:	mov    BYTE PTR [r10+rax*1],0x0
  414596:	mov    r15,r10
  414599:	mov    r9d,0x1
  41459f:	jmp    0x4142f2
  4145a4:	lea    rax,[rcx+0x1]
  4145a8:	mov    r15,rbx
  4145ab:	mov    r10,rdi
  4145ae:	mov    ebx,DWORD PTR [rsp+0x38]
  4145b2:	mov    edi,DWORD PTR [rsp+0x40]
  4145b6:	mov    r12,QWORD PTR [rsp+0x48]
  4145bb:	mov    rbp,QWORD PTR [rsp+0x50]
  4145c0:	mov    rsi,QWORD PTR [rsp+0x58]
  4145c5:	mov    QWORD PTR [rsp+0x30],rax
  4145ca:	movsxd rax,r14d
  4145cd:	mov    r13,QWORD PTR [rip+0x45d64]        # 0x45a338
  4145d4:	lea    rcx,[r10+rax*1]
  4145d8:	mov    QWORD PTR [rsp+0x38],r10
  4145dd:	mov    rdx,r13
  4145e0:	call   0x42a418
  4145e5:	mov    rcx,r13
  4145e8:	call   0x42a400
  4145ed:	mov    r10,QWORD PTR [rsp+0x38]
  4145f2:	mov    rdx,QWORD PTR [rsp+0x30]
  4145f7:	lea    ecx,[r14+rax*1]
  4145fb:	movsxd rcx,ecx
  4145fe:	add    rdx,r15
  414601:	add    rcx,r10
  414604:	mov    QWORD PTR [rsp+0x30],r10
  414609:	call   0x42a418
  41460e:	mov    r10,QWORD PTR [rsp+0x30]
  414613:	mov    r9d,0x1
  414619:	mov    r15,r10
  41461c:	jmp    0x4142f2
  414621:	mov    BYTE PTR [r10],0x2d
  414625:	add    r15,0x1
  414629:	movzx  ecx,BYTE PTR [r15]
  41462d:	mov    eax,0x1
  414632:	mov    r14d,0x1
  414638:	jmp    0x414442
  41463d:	mov    QWORD PTR [rsp+0x30],0x1
  414646:	jmp    0x4145cd
  414648:	nop    DWORD PTR [rax+rax*1+0x0]
  414650:	push   rdi
  414651:	push   rsi
  414652:	push   rbx
  414653:	sub    rsp,0x20
  414657:	call   QWORD PTR [rip+0x486bf]        # 0x45cd1c
  41465d:	mov    rcx,QWORD PTR [rax]
  414660:	mov    rbx,rax
  414663:	cmp    BYTE PTR [rcx],0x0
  414666:	jne    0x4146d0
  414668:	mov    rcx,QWORD PTR [rbx+0x10]
  41466c:	lea    rax,[rip+0x294d1]        # 0x43db44
  414673:	mov    QWORD PTR [rip+0x45cbe],rax        # 0x45a338
  41467a:	cmp    BYTE PTR [rcx],0x0
  41467d:	jne    0x4146e5
  41467f:	mov    rcx,QWORD PTR [rbx+0x8]
  414683:	lea    rax,[rip+0x294bc]        # 0x43db46
  41468a:	mov    QWORD PTR [rip+0x45c9f],rax        # 0x45a330
  414691:	cmp    BYTE PTR [rcx],0x0
  414694:	jne    0x414710
  414696:	lea    rdx,[rip+0x294ab]        # 0x43db48
  41469d:	mov    rsi,QWORD PTR [rip+0x45c94]        # 0x45a338
  4146a4:	mov    ecx,0x2
  4146a9:	lea    rax,[rip+0x29494]        # 0x43db44
  4146b0:	mov    rdi,rdx
  4146b3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4146b5:	cmove  rdx,rax
  4146b9:	mov    QWORD PTR [rip+0x45c68],rdx        # 0x45a328
  4146c0:	add    rsp,0x20
  4146c4:	pop    rbx
  4146c5:	pop    rsi
  4146c6:	pop    rdi
  4146c7:	ret    
  4146c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4146d0:	call   0x424900
  4146d5:	mov    rcx,QWORD PTR [rbx+0x10]
  4146d9:	mov    QWORD PTR [rip+0x45c58],rax        # 0x45a338
  4146e0:	cmp    BYTE PTR [rcx],0x0
  4146e3:	je     0x41467f
  4146e5:	call   0x42a558
  4146ea:	test   eax,eax
  4146ec:	jle    0x41467f
  4146ee:	mov    rcx,QWORD PTR [rbx+0x10]
  4146f2:	call   0x424900
  4146f7:	mov    rcx,QWORD PTR [rbx+0x8]
  4146fb:	mov    QWORD PTR [rip+0x45c2e],rax        # 0x45a330
  414702:	cmp    BYTE PTR [rcx],0x0
  414705:	je     0x414696
  414707:	nop    WORD PTR [rax+rax*1+0x0]
  414710:	call   0x424900
  414715:	mov    QWORD PTR [rip+0x45c0c],rax        # 0x45a328
  41471c:	add    rsp,0x20
  414720:	pop    rbx
  414721:	pop    rsi
  414722:	pop    rdi
  414723:	ret    
  414724:	xchg   ax,ax
  414726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414730:	mov    rax,QWORD PTR [rcx+0x18]
  414734:	lea    rdx,[rip+0x29685]        # 0x43ddc0
  41473b:	test   rax,rax
  41473e:	cmove  rax,rdx
  414742:	ret    
  414743:	nop
  414744:	nop
  414745:	nop
  414746:	nop
  414747:	nop
  414748:	nop
  414749:	nop
  41474a:	nop
  41474b:	nop
  41474c:	nop
  41474d:	nop
  41474e:	nop
  41474f:	nop
  414750:	push   rsi
  414751:	push   rbx
  414752:	sub    rsp,0x28
  414756:	cmp    QWORD PTR [rcx+0x8],0x0
  41475b:	mov    rbx,rcx
  41475e:	mov    rsi,rdx
  414761:	je     0x41476f
  414763:	lea    rdx,[rip+0x29756]        # 0x43dec0
  41476a:	call   0x427dc8
  41476f:	mov    rdx,rsi
  414772:	mov    rcx,rbx
  414775:	add    rsp,0x28
  414779:	pop    rbx
  41477a:	pop    rsi
  41477b:	jmp    0x427dc8
  414780:	push   r14
  414782:	push   r13
  414784:	push   r12
  414786:	push   rbp
  414787:	push   rdi
  414788:	push   rsi
  414789:	push   rbx
  41478a:	sub    rsp,0x4e0
  414791:	mov    r12,QWORD PTR [rip+0x40148]        # 0x4548e0
  414798:	lea    rbx,[rsp+0x20]
  41479d:	lea    rbp,[rsp+0x40]
  4147a2:	mov    r13,rcx
  4147a5:	mov    ecx,0x13
  4147aa:	mov    r14,rdx
  4147ad:	lea    rsi,[r12+0x28]
  4147b2:	mov    rdi,rbp
  4147b5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4147b8:	mov    rcx,rbx
  4147bb:	call   0x427da8
  4147c0:	lea    r8,[rip+0x296fc]        # 0x43dec3
  4147c7:	lea    rdx,[rip+0x2970a]        # 0x43ded8
  4147ce:	mov    r9,r14
  4147d1:	mov    rcx,rbx
  4147d4:	call   0x427d70
  4147d9:	mov    rcx,QWORD PTR [rsp+0x20]
  4147de:	xor    edx,edx
  4147e0:	call   0x4062b0
  4147e5:	mov    rcx,rbx
  4147e8:	mov    rsi,rax
  4147eb:	call   0x427d60
  4147f0:	xor    eax,eax
  4147f2:	test   rsi,rsi
  4147f5:	je     0x414857
  4147f7:	lea    rbx,[rsp+0xe0]
  4147ff:	lea    r8,[rip+0x297a0]        # 0x43dfa6
  414806:	mov    r9,r13
  414809:	mov    edx,0x400
  41480e:	mov    QWORD PTR [rsp+0xa0],0x0
  41481a:	mov    rcx,rbx
  41481d:	call   0x426220
  414822:	mov    r9,QWORD PTR [r12+0x108]
  41482a:	mov    r8,QWORD PTR [r12+0x10]
  41482f:	mov    rdx,rbp
  414832:	mov    rcx,rsi
  414835:	mov    QWORD PTR [rsp+0xb0],rbx
  41483d:	mov    BYTE PTR [rsp+0xc0],0x1
  414845:	call   0x4141a0
  41484a:	mov    rcx,rsi
  41484d:	call   0x427f68
  414852:	mov    eax,0x1
  414857:	add    rsp,0x4e0
  41485e:	pop    rbx
  41485f:	pop    rsi
  414860:	pop    rdi
  414861:	pop    rbp
  414862:	pop    r12
  414864:	pop    r13
  414866:	pop    r14
  414868:	ret    
  414869:	nop    DWORD PTR [rax+0x0]
  414870:	mov    rax,QWORD PTR [rip+0x40069]        # 0x4548e0
  414877:	lea    r9,[rip+0x29742]        # 0x43dfc0
  41487e:	mov    r8,rdx
  414881:	cmp    DWORD PTR [rax+0xe4],0x138e3
  41488b:	jg     0x4148a0
  41488d:	lea    rdx,[rip+0x29774]        # 0x43e008
  414894:	jmp    0x427dd8
  414899:	nop    DWORD PTR [rax+0x0]
  4148a0:	lea    rdx,[rip+0x29731]        # 0x43dfd8
  4148a7:	jmp    0x427dd8
  4148ac:	nop    DWORD PTR [rax+0x0]
  4148b0:	push   rdi
  4148b1:	push   rsi
  4148b2:	push   rbx
  4148b3:	sub    rsp,0x50
  4148b7:	mov    eax,edx
  4148b9:	mov    rbx,rcx
  4148bc:	and    eax,0xfffffffb
  4148bf:	cmp    al,0x69
  4148c1:	je     0x4148d0
  4148c3:	cmp    dl,0x72
  4148c6:	je     0x4148d0
  4148c8:	add    rsp,0x50
  4148cc:	pop    rbx
  4148cd:	pop    rsi
  4148ce:	pop    rdi
  4148cf:	ret    
  4148d0:	test   r8d,r8d
  4148d3:	je     0x4148c8
  4148d5:	lea    rsi,[rsp+0x30]
  4148da:	mov    DWORD PTR [rsp+0x2c],r9d
  4148df:	mov    DWORD PTR [rsp+0x28],r8d
  4148e4:	mov    rcx,rsi
  4148e7:	call   0x427da8
  4148ec:	mov    r8d,DWORD PTR [rsp+0x28]
  4148f1:	lea    rdx,[rip+0x29740]        # 0x43e038
  4148f8:	mov    rcx,rsi
  4148fb:	call   0x427d70
  414900:	mov    rcx,QWORD PTR [rsp+0x30]
  414905:	xor    edx,edx
  414907:	call   0x4062b0
  41490c:	test   rax,rax
  41490f:	mov    rdi,rax
  414912:	je     0x4148c8
  414914:	mov    rcx,rax
  414917:	call   0x427e70
  41491c:	test   eax,eax
  41491e:	jle    0x414956
  414920:	mov    r9d,DWORD PTR [rsp+0x2c]
  414925:	test   r9b,r9b
  414928:	je     0x414970
  41492a:	xor    r8d,r8d
  41492d:	xor    edx,edx
  41492f:	mov    rcx,rdi
  414932:	call   0x427e98
  414937:	lea    rdx,[rip+0x29739]        # 0x43e077
  41493e:	mov    rcx,rsi
  414941:	mov    r8,rax
  414944:	call   0x427d70
  414949:	mov    rdx,QWORD PTR [rsp+0x30]
  41494e:	mov    rcx,rbx
  414951:	call   0x4122c0
  414956:	mov    rcx,rdi
  414959:	call   0x427f68
  41495e:	mov    rcx,rsi
  414961:	call   0x427d60
  414966:	nop
  414967:	add    rsp,0x50
  41496b:	pop    rbx
  41496c:	pop    rsi
  41496d:	pop    rdi
  41496e:	ret    
  41496f:	nop
  414970:	mov    rax,QWORD PTR [rbx+0x50]
  414974:	lea    rdx,[rip+0x2970d]        # 0x43e088
  41497b:	mov    rcx,rsi
  41497e:	mov    r8,QWORD PTR [rax]
  414981:	call   0x427d70
  414986:	xor    r8d,r8d
  414989:	xor    edx,edx
  41498b:	mov    rcx,rdi
  41498e:	call   0x427e98
  414993:	lea    rdx,[rip+0x296f1]        # 0x43e08b
  41499a:	mov    rcx,rsi
  41499d:	mov    r8,rax
  4149a0:	call   0x427dd8
  4149a5:	mov    rdx,QWORD PTR [rsp+0x30]
  4149aa:	mov    rcx,rbx
  4149ad:	call   0x412310
  4149b2:	jmp    0x414956
  4149b4:	xchg   ax,ax
  4149b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149c0:	push   r15
  4149c2:	push   r14
  4149c4:	push   r13
  4149c6:	push   r12
  4149c8:	push   rbp
  4149c9:	push   rdi
  4149ca:	push   rsi
  4149cb:	push   rbx
  4149cc:	sub    rsp,0x268
  4149d3:	mov    rbx,QWORD PTR [rip+0x3ff06]        # 0x4548e0
  4149da:	xor    r10d,r10d
  4149dd:	lea    r14,[rsp+0xe0]
  4149e5:	mov    QWORD PTR [rsp+0x2b0],rcx
  4149ed:	mov    r12,rdx
  4149f0:	mov    QWORD PTR [rsp+0x2c0],r8
  4149f8:	mov    DWORD PTR [rsp+0x44],r9d
  4149fd:	mov    rax,QWORD PTR [rbx+0x28]
  414a01:	mov    rcx,r14
  414a04:	mov    QWORD PTR [rsp+0x190],rax
  414a0c:	mov    rax,QWORD PTR [rbx+0x30]
  414a10:	mov    WORD PTR [rsp+0x194],r10w
  414a19:	mov    QWORD PTR [rsp+0x198],rax
  414a21:	mov    rax,QWORD PTR [rbx+0x38]
  414a25:	mov    BYTE PTR [rsp+0x19d],0x0
  414a2d:	mov    QWORD PTR [rsp+0x1a0],rax
  414a35:	mov    rax,QWORD PTR [rbx+0x40]
  414a39:	mov    QWORD PTR [rsp+0x1a8],rax
  414a41:	mov    rax,QWORD PTR [rbx+0x48]
  414a45:	mov    QWORD PTR [rsp+0x1b0],rax
  414a4d:	mov    rax,QWORD PTR [rbx+0x50]
  414a51:	mov    QWORD PTR [rsp+0x1b8],rax
  414a59:	mov    rax,QWORD PTR [rbx+0x58]
  414a5d:	mov    QWORD PTR [rsp+0x1c0],rax
  414a65:	mov    rax,QWORD PTR [rbx+0x60]
  414a69:	mov    QWORD PTR [rsp+0x1c8],rax
  414a71:	mov    rax,QWORD PTR [rbx+0x68]
  414a75:	mov    QWORD PTR [rsp+0x1d0],rax
  414a7d:	mov    rax,QWORD PTR [rbx+0x70]
  414a81:	mov    QWORD PTR [rsp+0x1d8],rax
  414a89:	mov    rax,QWORD PTR [rbx+0x78]
  414a8d:	mov    QWORD PTR [rsp+0x1e0],rax
  414a95:	mov    rax,QWORD PTR [rbx+0x80]
  414a9c:	mov    QWORD PTR [rsp+0x1e8],rax
  414aa4:	call   0x427da8
  414aa9:	lea    rax,[rsp+0x100]
  414ab1:	mov    rcx,rax
  414ab4:	mov    QWORD PTR [rsp+0x58],rax
  414ab9:	call   0x427da8
  414abe:	lea    rax,[rsp+0x120]
  414ac6:	mov    rcx,rax
  414ac9:	mov    QWORD PTR [rsp+0x38],rax
  414ace:	call   0x427da8
  414ad3:	mov    eax,DWORD PTR [rbx+0xe4]
  414ad9:	cmp    eax,0x1611f
  414ade:	jle    0x414b93
  414ae4:	cmp    BYTE PTR [rsp+0x44],0x0
  414ae9:	lea    rax,[rip+0x29627]        # 0x43e117
  414af0:	lea    r8,[rip+0x295a9]        # 0x43e0a0
  414af7:	mov    r9,QWORD PTR [rsp+0x2c0]
  414aff:	lea    rdx,[rip+0x296d2]        # 0x43e1d8
  414b06:	mov    rcx,r14
  414b09:	cmove  r8,rax
  414b0d:	call   0x427d70
  414b12:	mov    rcx,QWORD PTR [rsp+0xe0]
  414b1a:	xor    edx,edx
  414b1c:	call   0x4062b0
  414b21:	test   rax,rax
  414b24:	mov    rbp,rax
  414b27:	je     0x414f00
  414b2d:	mov    rcx,rax
  414b30:	call   0x427e70
  414b35:	test   eax,eax
  414b37:	jne    0x414c20
  414b3d:	cmp    BYTE PTR [rbx+0x11a],0x0
  414b44:	je     0x4150a0
  414b4a:	mov    rcx,r14
  414b4d:	call   0x427d60
  414b52:	mov    rcx,QWORD PTR [rsp+0x58]
  414b57:	call   0x427d60
  414b5c:	mov    rcx,QWORD PTR [rsp+0x38]
  414b61:	call   0x427d60
  414b66:	xor    esi,esi
  414b68:	nop    DWORD PTR [rax+rax*1+0x0]
  414b70:	test   rbp,rbp
  414b73:	je     0x414b7d
  414b75:	mov    rcx,rbp
  414b78:	call   0x427f68
  414b7d:	mov    eax,esi
  414b7f:	add    rsp,0x268
  414b86:	pop    rbx
  414b87:	pop    rsi
  414b88:	pop    rdi
  414b89:	pop    rbp
  414b8a:	pop    r12
  414b8c:	pop    r13
  414b8e:	pop    r14
  414b90:	pop    r15
  414b92:	ret    
  414b93:	cmp    eax,0x15ff3
  414b98:	jle    0x414bd0
  414b9a:	cmp    BYTE PTR [rsp+0x44],0x0
  414b9f:	lea    rax,[rip+0x29571]        # 0x43e117
  414ba6:	mov    r9,QWORD PTR [rsp+0x2c0]
  414bae:	lea    r8,[rip+0x294eb]        # 0x43e0a0
  414bb5:	lea    rdx,[rip+0x2977c]        # 0x43e338
  414bbc:	mov    rcx,r14
  414bbf:	cmove  r8,rax
  414bc3:	call   0x427d70
  414bc8:	jmp    0x414b12
  414bcd:	nop    DWORD PTR [rax]
  414bd0:	cmp    eax,0x15f8f
  414bd5:	jg     0x414f10
  414bdb:	cmp    eax,0x13a0f
  414be0:	jle    0x4150d4
  414be6:	cmp    BYTE PTR [rsp+0x44],0x0
  414beb:	lea    rax,[rip+0x29525]        # 0x43e117
  414bf2:	mov    r9,QWORD PTR [rsp+0x2c0]
  414bfa:	lea    r8,[rip+0x2949f]        # 0x43e0a0
  414c01:	lea    rdx,[rip+0x299c0]        # 0x43e5c8
  414c08:	mov    rcx,r14
  414c0b:	cmove  r8,rax
  414c0f:	call   0x427d70
  414c14:	jmp    0x414b12
  414c19:	nop    DWORD PTR [rax+0x0]
  414c20:	xor    r8d,r8d
  414c23:	xor    edx,edx
  414c25:	mov    rcx,rbp
  414c28:	call   0x427e98
  414c2d:	mov    rcx,rax
  414c30:	lea    rdi,[rip+0x29c41]        # 0x43e878
  414c37:	call   0x42a558
  414c3c:	xor    edx,edx
  414c3e:	mov    r8d,0x1
  414c44:	mov    rcx,rbp
  414c47:	mov    DWORD PTR [rsp+0xc0],eax
  414c4e:	call   0x427e98
  414c53:	movzx  eax,BYTE PTR [rax]
  414c56:	xor    edx,edx
  414c58:	mov    r8d,0x2
  414c5e:	mov    rcx,rbp
  414c61:	mov    BYTE PTR [rsp+0xb1],al
  414c68:	call   0x427e98
  414c6d:	mov    ecx,0x2
  414c72:	mov    rsi,rax
  414c75:	mov    r8d,0x3
  414c7b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414c7d:	mov    rcx,rbp
  414c80:	lea    rdi,[rip+0x29bf1]        # 0x43e878
  414c87:	setb   al
  414c8a:	seta   dl
  414c8d:	sub    edx,eax
  414c8f:	movsx  eax,dl
  414c92:	xor    edx,edx
  414c94:	mov    DWORD PTR [rsp+0xb8],eax
  414c9b:	call   0x427e98
  414ca0:	mov    ecx,0x2
  414ca5:	mov    rsi,rax
  414ca8:	mov    r8d,0x4
  414cae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414cb0:	mov    rcx,rbp
  414cb3:	lea    rdi,[rip+0x29bbe]        # 0x43e878
  414cba:	setb   al
  414cbd:	seta   dl
  414cc0:	sub    edx,eax
  414cc2:	movsx  eax,dl
  414cc5:	xor    edx,edx
  414cc7:	mov    DWORD PTR [rsp+0x98],eax
  414cce:	call   0x427e98
  414cd3:	mov    ecx,0x2
  414cd8:	mov    rsi,rax
  414cdb:	mov    r8d,0x5
  414ce1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414ce3:	mov    rcx,rbp
  414ce6:	lea    rdi,[rip+0x29b8b]        # 0x43e878
  414ced:	setb   al
  414cf0:	seta   dl
  414cf3:	sub    edx,eax
  414cf5:	movsx  eax,dl
  414cf8:	xor    edx,edx
  414cfa:	mov    DWORD PTR [rsp+0xa0],eax
  414d01:	call   0x427e98
  414d06:	mov    ecx,0x2
  414d0b:	mov    rsi,rax
  414d0e:	mov    QWORD PTR [rsp+0xa8],0x0
  414d1a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414d1c:	setb   al
  414d1f:	seta   dl
  414d22:	sub    edx,eax
  414d24:	movsx  eax,dl
  414d27:	mov    DWORD PTR [rsp+0xd4],eax
  414d2e:	mov    eax,DWORD PTR [rbx+0xe4]
  414d34:	cmp    eax,0x13947
  414d39:	jg     0x414fe7
  414d3f:	cmp    eax,0x1387f
  414d44:	mov    DWORD PTR [rsp+0xb4],0x0
  414d4f:	mov    QWORD PTR [rsp+0xc8],0x0
  414d5b:	jg     0x414f43
  414d61:	xor    r13d,r13d
  414d64:	mov    BYTE PTR [rsp+0xd3],0x64
  414d6c:	mov    rcx,rbp
  414d6f:	call   0x427f68
  414d74:	cmp    BYTE PTR [rsp+0xb1],0x53
  414d7c:	mov    QWORD PTR [rsp+0x50],0x0
  414d85:	je     0x414ea2
  414d8b:	lea    rdx,[rip+0x29afe]        # 0x43e890
  414d92:	mov    rcx,r14
  414d95:	call   0x427d70
  414d9a:	lea    rdx,[rip+0x29b07]        # 0x43e8a8
  414da1:	mov    rcx,r14
  414da4:	call   0x427dc8
  414da9:	cmp    DWORD PTR [rbx+0xe4],0x15ff3
  414db3:	jle    0x4150c0
  414db9:	lea    rdx,[rip+0x29be8]        # 0x43e9a8
  414dc0:	mov    rcx,r14
  414dc3:	call   0x427dc8
  414dc8:	cmp    BYTE PTR [rsp+0xb1],0x69
  414dd0:	je     0x415012
  414dd6:	lea    rdx,[rip+0x29ce2]        # 0x43eabf
  414ddd:	mov    rcx,r14
  414de0:	call   0x427dc8
  414de5:	cmp    BYTE PTR [rsp+0xb1],0x66
  414ded:	jne    0x415021
  414df3:	cmp    DWORD PTR [rbx+0xe4],0x16057
  414dfd:	jg     0x41525f
  414e03:	lea    rdx,[rip+0x29db4]        # 0x43ebbe
  414e0a:	mov    rcx,r14
  414e0d:	call   0x427dc8
  414e12:	cmp    BYTE PTR [rsp+0x44],0x0
  414e17:	jne    0x415279
  414e1d:	nop    DWORD PTR [rax]
  414e20:	lea    rdx,[rip+0x29e59]        # 0x43ec80
  414e27:	mov    rcx,r14
  414e2a:	call   0x427dc8
  414e2f:	mov    r8,QWORD PTR [rsp+0x2c0]
  414e37:	lea    rdx,[rip+0x29e62]        # 0x43eca0
  414e3e:	mov    rcx,r14
  414e41:	call   0x427dd8
  414e46:	lea    rdx,[rip+0x29e94]        # 0x43ece1
  414e4d:	mov    rcx,r14
  414e50:	call   0x427dc8
  414e55:	mov    rcx,QWORD PTR [rsp+0xe0]
  414e5d:	xor    edx,edx
  414e5f:	call   0x4062b0
  414e64:	test   rax,rax
  414e67:	mov    rbp,rax
  414e6a:	je     0x415106
  414e70:	mov    rcx,rax
  414e73:	call   0x427e70
  414e78:	mov    DWORD PTR [rsp+0x60],eax
  414e7c:	movzx  eax,BYTE PTR [rsp+0xb1]
  414e84:	sub    eax,0x53
  414e87:	cmp    al,0x23
  414e89:	ja     0x415ba1
  414e8f:	movzx  edx,al
  414e92:	lea    rax,[rip+0x2b50b]        # 0x4403a4
  414e99:	movsxd rdx,DWORD PTR [rax+rdx*4]
  414e9d:	add    rax,rdx
  414ea0:	jmp    rax
  414ea2:	mov    rcx,QWORD PTR [rsp+0x2b0]
  414eaa:	call   0x41d080
  414eaf:	lea    rdx,[rip+0x299c4]        # 0x43e87a
  414eb6:	mov    r8,rax
  414eb9:	mov    rcx,r14
  414ebc:	call   0x427d70
  414ec1:	mov    rcx,r12
  414ec4:	call   0x41d080
  414ec9:	lea    rdx,[rip+0x299bb]        # 0x43e88b
  414ed0:	mov    r8,rax
  414ed3:	mov    rcx,r14
  414ed6:	call   0x427dd8
  414edb:	mov    rcx,QWORD PTR [rsp+0xe0]
  414ee3:	xor    edx,edx
  414ee5:	call   0x4062b0
  414eea:	test   rax,rax
  414eed:	mov    rdi,rax
  414ef0:	jne    0x4151b8
  414ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f00:	xor    ebp,ebp
  414f02:	jmp    0x414b4a
  414f07:	nop    WORD PTR [rax+rax*1+0x0]
  414f10:	cmp    BYTE PTR [rsp+0x44],0x0
  414f15:	lea    rax,[rip+0x291fb]        # 0x43e117
  414f1c:	mov    r9,QWORD PTR [rsp+0x2c0]
  414f24:	lea    r8,[rip+0x29175]        # 0x43e0a0
  414f2b:	lea    rdx,[rip+0x29556]        # 0x43e488
  414f32:	mov    rcx,r14
  414f35:	cmove  r8,rax
  414f39:	call   0x427d70
  414f3e:	jmp    0x414b12
  414f43:	xor    edx,edx
  414f45:	mov    r8d,0x7
  414f4b:	mov    rcx,rbp
  414f4e:	call   0x427e98
  414f53:	xor    edx,edx
  414f55:	mov    r8d,0xa
  414f5b:	mov    rcx,rax
  414f5e:	call   0x42a3c8
  414f63:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  414f6d:	mov    DWORD PTR [rsp+0xb4],eax
  414f74:	jle    0x414d61
  414f7a:	xor    edx,edx
  414f7c:	mov    r8d,0x8
  414f82:	mov    rcx,rbp
  414f85:	call   0x427e98
  414f8a:	cmp    BYTE PTR [rax],0x0
  414f8d:	jne    0x4152a0
  414f93:	mov    eax,DWORD PTR [rbx+0xe4]
  414f99:	cmp    eax,0x15ff3
  414f9e:	jle    0x414d61
  414fa4:	xor    edx,edx
  414fa6:	mov    r8d,0x9
  414fac:	mov    rcx,rbp
  414faf:	call   0x427e98
  414fb4:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  414fbe:	movzx  r13d,BYTE PTR [rax]
  414fc2:	jle    0x414d64
  414fc8:	mov    r8d,0xa
  414fce:	xor    edx,edx
  414fd0:	mov    rcx,rbp
  414fd3:	call   0x427e98
  414fd8:	movzx  eax,BYTE PTR [rax]
  414fdb:	mov    BYTE PTR [rsp+0xd3],al
  414fe2:	jmp    0x414d6c
  414fe7:	mov    r8d,0x6
  414fed:	xor    edx,edx
  414fef:	mov    rcx,rbp
  414ff2:	call   0x427e98
  414ff7:	mov    rcx,rax
  414ffa:	call   0x424900
  414fff:	mov    QWORD PTR [rsp+0xa8],rax
  415007:	mov    eax,DWORD PTR [rbx+0xe4]
  41500d:	jmp    0x414d3f
  415012:	lea    rdx,[rip+0x29a5f]        # 0x43ea78
  415019:	mov    rcx,r14
  41501c:	call   0x427dc8
  415021:	lea    rdx,[rip+0x29b96]        # 0x43ebbe
  415028:	mov    rcx,r14
  41502b:	call   0x427dc8
  415030:	cmp    BYTE PTR [rsp+0x44],0x0
  415035:	je     0x414e20
  41503b:	lea    rdx,[rip+0x29b96]        # 0x43ebd8
  415042:	mov    rcx,r14
  415045:	call   0x427dc8
  41504a:	lea    rdx,[rip+0x29b9f]        # 0x43ebf0
  415051:	mov    rcx,r14
  415054:	call   0x427dc8
  415059:	movzx  edi,BYTE PTR [rsp+0xb1]
  415061:	cmp    dil,0x6d
  415065:	sete   dl
  415068:	cmp    dil,0x72
  41506c:	sete   al
  41506f:	or     eax,edx
  415071:	cmp    dil,0x63
  415075:	sete   dl
  415078:	or     al,dl
  41507a:	jne    0x415089
  41507c:	mov    eax,edi
  41507e:	and    eax,0xffffffef
  415081:	cmp    al,0x66
  415083:	jne    0x414e20
  415089:	lea    rdx,[rip+0x29bb8]        # 0x43ec48
  415090:	mov    rcx,r14
  415093:	call   0x427dc8
  415098:	jmp    0x414e20
  41509d:	nop    DWORD PTR [rax]
  4150a0:	mov    rdx,QWORD PTR [rsp+0x2c0]
  4150a8:	lea    rcx,[rip+0x297a1]        # 0x43e850
  4150af:	call   0x405d90
  4150b4:	jmp    0x414b4a
  4150b9:	nop    DWORD PTR [rax+0x0]
  4150c0:	lea    rdx,[rip+0x29999]        # 0x43ea60
  4150c7:	mov    rcx,r14
  4150ca:	call   0x427dc8
  4150cf:	jmp    0x414dc8
  4150d4:	cmp    eax,0x13947
  4150d9:	jg     0x41522c
  4150df:	cmp    eax,0x1387f
  4150e4:	mov    r8,QWORD PTR [rsp+0x2c0]
  4150ec:	jle    0x416acc
  4150f2:	lea    rdx,[rip+0x2963f]        # 0x43e738
  4150f9:	mov    rcx,r14
  4150fc:	call   0x427d70
  415101:	jmp    0x414b12
  415106:	mov    rcx,r14
  415109:	call   0x427d60
  41510e:	mov    rcx,QWORD PTR [rsp+0x58]
  415113:	call   0x427d60
  415118:	mov    rcx,QWORD PTR [rsp+0x38]
  41511d:	call   0x427d60
  415122:	cmp    QWORD PTR [rsp+0x50],0x0
  415128:	je     0x414b66
  41512e:	mov    QWORD PTR [rsp+0x48],0x0
  415137:	xor    esi,esi
  415139:	mov    QWORD PTR [rsp+0x78],0x0
  415142:	mov    rax,QWORD PTR [rsp+0x50]
  415147:	mov    rcx,QWORD PTR [rax]
  41514a:	mov    rbx,rax
  41514d:	test   rcx,rcx
  415150:	je     0x415163
  415152:	add    rbx,0x8
  415156:	call   0x42a4e8
  41515b:	mov    rcx,QWORD PTR [rbx]
  41515e:	test   rcx,rcx
  415161:	jne    0x415152
  415163:	mov    rcx,QWORD PTR [rsp+0x50]
  415168:	call   0x42a4e8
  41516d:	mov    rax,QWORD PTR [rsp+0x48]
  415172:	test   rax,rax
  415175:	je     0x41519d
  415177:	mov    rcx,QWORD PTR [rax]
  41517a:	mov    rbx,rax
  41517d:	test   rcx,rcx
  415180:	je     0x415193
  415182:	add    rbx,0x8
  415186:	call   0x42a4e8
  41518b:	mov    rcx,QWORD PTR [rbx]
  41518e:	test   rcx,rcx
  415191:	jne    0x415182
  415193:	mov    rcx,QWORD PTR [rsp+0x48]
  415198:	call   0x42a4e8
  41519d:	mov    rax,QWORD PTR [rsp+0x78]
  4151a2:	test   rax,rax
  4151a5:	je     0x414b70
  4151ab:	mov    rcx,rax
  4151ae:	call   0x42a4e8
  4151b3:	jmp    0x414b70
  4151b8:	mov    rcx,rax
  4151bb:	xor    esi,esi
  4151bd:	call   0x427e80
  4151c2:	lea    ecx,[rax+0x1]
  4151c5:	movsxd rcx,ecx
  4151c8:	shl    rcx,0x3
  4151cc:	call   0x424800
  4151d1:	mov    QWORD PTR [rsp+0x50],rax
  4151d6:	mov    rbp,rax
  4151d9:	jmp    0x415203
  4151db:	nop    DWORD PTR [rax+rax*1+0x0]
  4151e0:	movsxd rax,esi
  4151e3:	mov    r8d,esi
  4151e6:	xor    edx,edx
  4151e8:	lea    r15,[rbp+rax*8+0x0]
  4151ed:	mov    rcx,rdi
  4151f0:	add    esi,0x1
  4151f3:	call   0x427e98
  4151f8:	mov    rcx,rax
  4151fb:	call   0x424900
  415200:	mov    QWORD PTR [r15],rax
  415203:	mov    rcx,rdi
  415206:	call   0x427e80
  41520b:	cmp    esi,eax
  41520d:	jl     0x4151e0
  41520f:	mov    rax,QWORD PTR [rsp+0x50]
  415214:	movsxd rsi,esi
  415217:	mov    rcx,rdi
  41521a:	mov    QWORD PTR [rax+rsi*8],0x0
  415222:	call   0x427f68
  415227:	jmp    0x414d8b
  41522c:	cmp    BYTE PTR [rsp+0x44],0x0
  415231:	lea    rax,[rip+0x28edf]        # 0x43e117
  415238:	mov    r9,QWORD PTR [rsp+0x2c0]
  415240:	lea    r8,[rip+0x28ed9]        # 0x43e120
  415247:	lea    rdx,[rip+0x2945a]        # 0x43e6a8
  41524e:	mov    rcx,r14
  415251:	cmove  r8,rax
  415255:	call   0x427d70
  41525a:	jmp    0x414b12
  41525f:	lea    rdx,[rip+0x29872]        # 0x43ead8
  415266:	mov    rcx,r14
  415269:	call   0x427dc8
  41526e:	cmp    BYTE PTR [rsp+0x44],0x0
  415273:	je     0x414e20
  415279:	lea    rdx,[rip+0x29958]        # 0x43ebd8
  415280:	mov    rcx,r14
  415283:	call   0x427dc8
  415288:	lea    rdx,[rip+0x29961]        # 0x43ebf0
  41528f:	mov    rcx,r14
  415292:	call   0x427dc8
  415297:	jmp    0x415089
  41529c:	nop    DWORD PTR [rax+0x0]
  4152a0:	mov    r8d,0x8
  4152a6:	xor    edx,edx
  4152a8:	mov    rcx,rbp
  4152ab:	call   0x427e98
  4152b0:	mov    rcx,rax
  4152b3:	call   0x424900
  4152b8:	mov    QWORD PTR [rsp+0xc8],rax
  4152c0:	jmp    0x414f93
  4152c5:	mov    r8,QWORD PTR [rsp+0x2b0]
  4152cd:	mov    rcx,QWORD PTR [rsp+0x58]
  4152d2:	lea    rdx,[rip+0x29a8c]        # 0x43ed65
  4152d9:	mov    r9,r12
  4152dc:	call   0x427d70
  4152e1:	movzx  esi,BYTE PTR [rsp+0xb1]
  4152e9:	lea    rax,[rip+0x29b12]        # 0x43ee02
  4152f0:	mov    BYTE PTR [rsp+0x70],0x0
  4152f5:	mov    r13d,0x2
  4152fb:	mov    QWORD PTR [rsp+0x48],0x0
  415304:	mov    QWORD PTR [rsp+0x140],rax
  41530c:	lea    rax,[rip+0x29af6]        # 0x43ee09
  415313:	cmp    sil,0x72
  415317:	mov    QWORD PTR [rsp+0x148],rax
  41531f:	mov    eax,esi
  415321:	sete   BYTE PTR [rsp+0xb3]
  415329:	cmp    sil,0x76
  41532d:	sete   BYTE PTR [rsp+0x78]
  415332:	cmp    sil,0x6d
  415336:	sete   BYTE PTR [rsp+0xb2]
  41533e:	movzx  edx,BYTE PTR [rsp+0xb2]
  415346:	and    eax,0xfffffffb
  415349:	cmp    al,0x72
  41534b:	sete   dil
  41534f:	mov    eax,edx
  415351:	or     edi,eax
  415353:	cmp    sil,0x66
  415357:	sete   BYTE PTR [rsp+0x68]
  41535c:	cmp    sil,0x63
  415360:	sete   BYTE PTR [rsp+0x80]
  415368:	cmp    BYTE PTR [rsp+0xb1],0x53
  415370:	je     0x415e3c
  415376:	cmp    BYTE PTR [rsp+0xb1],0x69
  41537e:	je     0x41619e
  415384:	cmp    BYTE PTR [rsp+0x68],0x0
  415389:	je     0x415e52
  41538f:	cmp    DWORD PTR [rbx+0xe4],0x16057
  415399:	jle    0x4153b1
  41539b:	lea    rsi,[rip+0x29a87]        # 0x43ee29
  4153a2:	movsxd rax,r13d
  4153a5:	add    r13d,0x1
  4153a9:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  4153b1:	cmp    BYTE PTR [rsp+0x44],0x0
  4153b6:	je     0x415e5d
  4153bc:	lea    rsi,[rip+0x29a72]        # 0x43ee35
  4153c3:	movsxd rdx,r13d
  4153c6:	lea    eax,[r13+0x1]
  4153ca:	mov    QWORD PTR [rsp+rdx*8+0x140],rsi
  4153d2:	lea    rdx,[rip+0x29a64]        # 0x43ee3d
  4153d9:	cdqe   
  4153db:	lea    esi,[r13+0x2]
  4153df:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  4153e7:	movzx  eax,BYTE PTR [rsp+0x68]
  4153ec:	or     al,dil
  4153ef:	jne    0x4160ff
  4153f5:	cmp    BYTE PTR [rsp+0x80],0x0
  4153fd:	jne    0x4160ff
  415403:	mov    eax,DWORD PTR [rsp+0x60]
  415407:	lea    r15,[rsp+0x1f0]
  41540f:	mov    r8,QWORD PTR [rsp+0x100]
  415417:	lea    rdx,[rsp+0x190]
  41541f:	mov    r9d,esi
  415422:	mov    rcx,r15
  415425:	mov    DWORD PTR [rsp+0x20],eax
  415429:	call   0x412100
  41542e:	test   esi,esi
  415430:	jle    0x415461
  415432:	lea    r12,[rsp+0x140]
  41543a:	xor    r13d,r13d
  41543d:	nop    DWORD PTR [rax]
  415440:	mov    rdx,QWORD PTR [r12+r13*8]
  415444:	mov    r9d,0x6c
  41544a:	mov    r8d,0x1
  415450:	mov    rcx,r15
  415453:	add    r13,0x1
  415457:	call   0x4121a0
  41545c:	cmp    esi,r13d
  41545f:	jg     0x415440
  415461:	cmp    BYTE PTR [rsp+0x44],0x0
  415466:	movzx  r12d,BYTE PTR [rsp+0x78]
  41546c:	setne  BYTE PTR [rsp+0xb0]
  415474:	or     r12b,BYTE PTR [rsp+0xb2]
  41547c:	movzx  eax,BYTE PTR [rsp+0xb0]
  415484:	and    r12b,al
  415487:	jne    0x416476
  41548d:	mov    QWORD PTR [rsp+0x78],0x0
  415496:	movzx  esi,BYTE PTR [rsp+0x68]
  41549b:	movzx  eax,BYTE PTR [rsp+0xb3]
  4154a3:	xor    r12d,r12d
  4154a6:	mov    r9d,DWORD PTR [rsp+0x60]
  4154ab:	or     eax,esi
  4154ad:	or     edi,esi
  4154af:	test   r9d,r9d
  4154b2:	mov    BYTE PTR [rsp+0x88],al
  4154b9:	mov    BYTE PTR [rsp+0x90],dil
  4154c1:	jle    0x415774
  4154c7:	mov    QWORD PTR [rsp+0xd8],r14
  4154cf:	movzx  r14d,BYTE PTR [rsp+0xb1]
  4154d8:	jmp    0x415522
  4154da:	nop    WORD PTR [rax+rax*1+0x0]
  4154e0:	cmp    r14b,0x53
  4154e4:	je     0x415683
  4154ea:	cmp    r14b,0x69
  4154ee:	mov    r8d,0x6
  4154f4:	je     0x415c7a
  4154fa:	cmp    BYTE PTR [rsp+0x68],0x0
  4154ff:	jne    0x415c64
  415505:	cmp    BYTE PTR [rsp+0xb0],0x0
  41550d:	jne    0x4156b0
  415513:	add    r12,0x1
  415517:	cmp    DWORD PTR [rsp+0x60],r12d
  41551c:	jle    0x41576c
  415522:	xor    r8d,r8d
  415525:	mov    edx,r12d
  415528:	mov    rcx,rbp
  41552b:	call   0x427e98
  415530:	xor    r9d,r9d
  415533:	xor    r8d,r8d
  415536:	mov    rdx,rax
  415539:	mov    rcx,r15
  41553c:	mov    r13d,r12d
  41553f:	call   0x412220
  415544:	mov    r8d,0x1
  41554a:	mov    edx,r12d
  41554d:	mov    rcx,rbp
  415550:	call   0x427e98
  415555:	xor    r9d,r9d
  415558:	xor    r8d,r8d
  41555b:	mov    rdx,rax
  41555e:	mov    rcx,r15
  415561:	call   0x412220
  415566:	cmp    BYTE PTR [rsp+0x70],0x0
  41556b:	je     0x4154e0
  415571:	mov    rcx,QWORD PTR [rsp+0x38]
  415576:	call   0x427d68
  41557b:	mov    r8d,0x5
  415581:	mov    edx,r12d
  415584:	mov    rcx,rbp
  415587:	call   0x427ea8
  41558c:	test   eax,eax
  41558e:	jne    0x4155c4
  415590:	cmp    QWORD PTR [rsp+0x128],0x0
  415599:	jne    0x416119
  41559f:	mov    r8d,0x5
  4155a5:	mov    edx,r13d
  4155a8:	mov    rcx,rbp
  4155ab:	call   0x427e98
  4155b0:	mov    rcx,QWORD PTR [rsp+0x38]
  4155b5:	lea    rdx,[rip+0x298dc]        # 0x43ee98
  4155bc:	mov    r8,rax
  4155bf:	call   0x427dd8
  4155c4:	mov    rcx,rbp
  4155c7:	mov    r8d,0x3
  4155cd:	mov    edx,r13d
  4155d0:	lea    rdi,[rip+0x292a1]        # 0x43e878
  4155d7:	call   0x427e98
  4155dc:	mov    ecx,0x2
  4155e1:	mov    rsi,rax
  4155e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4155e6:	jne    0x415608
  4155e8:	cmp    QWORD PTR [rsp+0x128],0x0
  4155f1:	jne    0x41612f
  4155f7:	mov    rcx,QWORD PTR [rsp+0x38]
  4155fc:	lea    rdx,[rip+0x298a0]        # 0x43eea3
  415603:	call   0x427dc8
  415608:	mov    r8d,0x2
  41560e:	mov    edx,r13d
  415611:	mov    rcx,rbp
  415614:	call   0x427e98
  415619:	cmp    BYTE PTR [rax],0x0
  41561c:	je     0x415652
  41561e:	cmp    QWORD PTR [rsp+0x128],0x0
  415627:	jne    0x416145
  41562d:	mov    r8d,0x2
  415633:	mov    edx,r13d
  415636:	mov    rcx,rbp
  415639:	call   0x427e98
  41563e:	mov    rcx,QWORD PTR [rsp+0x38]
  415643:	lea    rdx,[rip+0x29862]        # 0x43eeac
  41564a:	mov    r8,rax
  41564d:	call   0x427dd8
  415652:	mov    rcx,QWORD PTR [rsp+0x120]
  41565a:	call   0x424900
  41565f:	mov    rdi,QWORD PTR [rsp+0x48]
  415664:	xor    r9d,r9d
  415667:	xor    r8d,r8d
  41566a:	mov    rdx,rax
  41566d:	mov    rcx,r15
  415670:	mov    QWORD PTR [rdi+r12*8],rax
  415674:	call   0x412220
  415679:	cmp    r14b,0x53
  41567d:	jne    0x4154ea
  415683:	mov    rax,QWORD PTR [rsp+0x50]
  415688:	xor    r9d,r9d
  41568b:	xor    r8d,r8d
  41568e:	mov    rcx,r15
  415691:	mov    rdx,QWORD PTR [rax+r12*8]
  415695:	call   0x412220
  41569a:	cmp    BYTE PTR [rsp+0xb0],0x0
  4156a2:	je     0x415513
  4156a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4156b0:	mov    edx,r13d
  4156b3:	mov    r8d,0x8
  4156b9:	mov    rcx,rbp
  4156bc:	call   0x427e98
  4156c1:	movzx  eax,BYTE PTR [rax]
  4156c4:	lea    rdx,[rip+0x28a88]        # 0x43e153
  4156cb:	cmp    al,0x70
  4156cd:	je     0x4156f9
  4156cf:	cmp    al,0x6d
  4156d1:	lea    rdx,[rip+0x28a76]        # 0x43e14e
  4156d8:	je     0x4156f9
  4156da:	cmp    al,0x78
  4156dc:	lea    rdx,[rip+0x28a76]        # 0x43e159
  4156e3:	je     0x4156f9
  4156e5:	cmp    al,0x65
  4156e7:	lea    rdx,[rip+0x28a74]        # 0x43e162
  4156ee:	lea    rax,[rip+0x28a71]        # 0x43e166
  4156f5:	cmove  rdx,rax
  4156f9:	xor    r9d,r9d
  4156fc:	xor    r8d,r8d
  4156ff:	mov    rcx,r15
  415702:	call   0x412220
  415707:	cmp    BYTE PTR [rsp+0x88],0x0
  41570f:	jne    0x415ca0
  415715:	cmp    BYTE PTR [rsp+0xb2],0x0
  41571d:	jne    0x415ca0
  415723:	cmp    BYTE PTR [rsp+0x90],0x0
  41572b:	jne    0x41573b
  41572d:	cmp    BYTE PTR [rsp+0x80],0x0
  415735:	je     0x415513
  41573b:	mov    r8d,0xa
  415741:	mov    edx,r13d
  415744:	mov    rcx,rbp
  415747:	call   0x427e98
  41574c:	xor    r9d,r9d
  41574f:	xor    r8d,r8d
  415752:	mov    rdx,rax
  415755:	mov    rcx,r15
  415758:	add    r12,0x1
  41575c:	call   0x412220
  415761:	cmp    DWORD PTR [rsp+0x60],r12d
  415766:	jg     0x415522
  41576c:	mov    r14,QWORD PTR [rsp+0xd8]
  415774:	mov    ecx,DWORD PTR [rsp+0x98]
  41577b:	mov    r8d,DWORD PTR [rsp+0xa0]
  415783:	test   ecx,ecx
  415785:	sete   BYTE PTR [rsp+0x70]
  41578a:	test   r8d,r8d
  41578d:	sete   BYTE PTR [rsp+0x60]
  415792:	cmp    BYTE PTR [rsp+0xb1],0x69
  41579a:	je     0x4164ec
  4157a0:	cmp    BYTE PTR [rsp+0xb1],0x53
  4157a8:	je     0x416ae0
  4157ae:	movzx  eax,BYTE PTR [rsp+0xb3]
  4157b6:	or     al,BYTE PTR [rsp+0x68]
  4157ba:	jne    0x415f38
  4157c0:	cmp    BYTE PTR [rsp+0xb2],0x0
  4157c8:	jne    0x415f38
  4157ce:	mov    rdi,QWORD PTR [rsp+0x78]
  4157d3:	test   rdi,rdi
  4157d6:	je     0x4157fd
  4157d8:	lea    rdx,[rip+0x2a456]        # 0x43fc35
  4157df:	mov    rcx,r15
  4157e2:	call   0x4122c0
  4157e7:	mov    rdx,rdi
  4157ea:	mov    rcx,r15
  4157ed:	call   0x4122c0
  4157f2:	cmp    BYTE PTR [rsp+0x70],0x0
  4157f7:	jne    0x4165aa
  4157fd:	cmp    BYTE PTR [rsp+0x60],0x0
  415802:	je     0x41593d
  415808:	mov    eax,DWORD PTR [rbx+0xe4]
  41580e:	lea    r9,[rip+0x2895b]        # 0x43e170
  415815:	lea    r8,[rip+0x28963]        # 0x43e17f
  41581c:	cmp    eax,0x15f8f
  415821:	jg     0x415841
  415823:	cmp    eax,0x139ac
  415828:	lea    r9,[rip+0x28969]        # 0x43e198
  41582f:	lea    rax,[rip+0x28986]        # 0x43e1bc
  415836:	lea    r8,[rip+0x28932]        # 0x43e16f
  41583d:	cmovl  r9,rax
  415841:	mov    rax,QWORD PTR [rsp+0x2c0]
  415849:	lea    rdx,[rip+0x2a4a8]        # 0x43fcf8
  415850:	mov    rcx,r14
  415853:	mov    QWORD PTR [rsp+0x20],rax
  415858:	call   0x427d70
  41585d:	mov    eax,DWORD PTR [rbx+0xe4]
  415863:	cmp    eax,0x15f8f
  415868:	jg     0x416d24
  41586e:	cmp    eax,0x139ab
  415873:	jle    0x416ca9
  415879:	lea    rdx,[rip+0x2a540]        # 0x43fdc0
  415880:	mov    rcx,r14
  415883:	call   0x427dc8
  415888:	lea    rdx,[rip+0x2a67a]        # 0x43ff09
  41588f:	mov    rcx,r14
  415892:	xor    esi,esi
  415894:	call   0x427dc8
  415899:	mov    rcx,QWORD PTR [rsp+0xe0]
  4158a1:	xor    edx,edx
  4158a3:	call   0x4062b0
  4158a8:	test   rax,rax
  4158ab:	mov    r12,rax
  4158ae:	je     0x4159a1
  4158b4:	mov    rcx,rax
  4158b7:	xor    edi,edi
  4158b9:	call   0x427e70
  4158be:	test   eax,eax
  4158c0:	jle    0x415935
  4158c2:	mov    QWORD PTR [rsp+0x60],r14
  4158c7:	mov    QWORD PTR [rsp+0x70],rbp
  4158cc:	mov    r14d,eax
  4158cf:	nop
  4158d0:	xor    r13d,r13d
  4158d3:	xor    esi,esi
  4158d5:	mov    r8d,0x2
  4158db:	mov    edx,esi
  4158dd:	mov    rcx,r12
  4158e0:	call   0x427e98
  4158e5:	mov    r8d,0x3
  4158eb:	mov    edx,esi
  4158ed:	mov    rcx,r12
  4158f0:	mov    rbp,rax
  4158f3:	call   0x427e98
  4158f8:	cmp    edi,0x2
  4158fb:	je     0x415d10
  415901:	jle    0x415cd0
  415907:	cmp    edi,0x3
  41590a:	je     0x415d60
  415910:	cmp    edi,0x4
  415913:	jne    0x415df0
  415919:	cmp    BYTE PTR [rbp+0x0],0x52
  41591d:	je     0x41615b
  415923:	add    esi,0x1
  415926:	cmp    r14d,esi
  415929:	jg     0x4158d5
  41592b:	mov    rbp,QWORD PTR [rsp+0x70]
  415930:	mov    r14,QWORD PTR [rsp+0x60]
  415935:	mov    rcx,r12
  415938:	call   0x427f68
  41593d:	movzx  eax,BYTE PTR [rsp+0xb2]
  415945:	or     al,BYTE PTR [rsp+0xb3]
  41594c:	mov    BYTE PTR [rsp+0x60],al
  415950:	jne    0x4161b9
  415956:	cmp    BYTE PTR [rsp+0x68],0x0
  41595b:	jne    0x416cd2
  415961:	cmp    BYTE PTR [rsp+0xb0],0x0
  415969:	je     0x415981
  41596b:	mov    rax,QWORD PTR [rsp+0xa8]
  415973:	test   rax,rax
  415976:	je     0x415981
  415978:	cmp    BYTE PTR [rax],0x0
  41597b:	jne    0x416e20
  415981:	mov    rdx,QWORD PTR [rbx+0x10]
  415985:	mov    r8,QWORD PTR [rbx+0x108]
  41598c:	mov    rcx,r15
  41598f:	mov    esi,0x1
  415994:	call   0x412460
  415999:	mov    rcx,r15
  41599c:	call   0x412350
  4159a1:	mov    rcx,r15
  4159a4:	call   0x412350
  4159a9:	mov    rcx,r14
  4159ac:	call   0x427d60
  4159b1:	mov    rcx,QWORD PTR [rsp+0x58]
  4159b6:	call   0x427d60
  4159bb:	mov    rcx,QWORD PTR [rsp+0x38]
  4159c0:	call   0x427d60
  4159c5:	cmp    QWORD PTR [rsp+0x50],0x0
  4159cb:	jne    0x415142
  4159d1:	jmp    0x41516d
  4159d6:	mov    r8,QWORD PTR [rsp+0x2b0]
  4159de:	mov    rcx,QWORD PTR [rsp+0x58]
  4159e3:	lea    rdx,[rip+0x29330]        # 0x43ed1a
  4159ea:	mov    r9,r12
  4159ed:	call   0x427d70
  4159f2:	movzx  esi,BYTE PTR [rsp+0xb1]
  4159fa:	lea    rax,[rip+0x29401]        # 0x43ee02
  415a01:	mov    QWORD PTR [rsp+0x140],rax
  415a09:	lea    rax,[rip+0x293f9]        # 0x43ee09
  415a10:	cmp    sil,0x72
  415a14:	mov    QWORD PTR [rsp+0x148],rax
  415a1c:	mov    eax,esi
  415a1e:	sete   BYTE PTR [rsp+0xb3]
  415a26:	cmp    sil,0x76
  415a2a:	sete   BYTE PTR [rsp+0x78]
  415a2f:	cmp    sil,0x6d
  415a33:	sete   BYTE PTR [rsp+0xb2]
  415a3b:	movzx  edx,BYTE PTR [rsp+0xb2]
  415a43:	and    eax,0xfffffffb
  415a46:	cmp    al,0x72
  415a48:	sete   dil
  415a4c:	mov    eax,edx
  415a4e:	or     edi,eax
  415a50:	cmp    sil,0x66
  415a54:	sete   BYTE PTR [rsp+0x68]
  415a59:	cmp    sil,0x63
  415a5d:	sete   BYTE PTR [rsp+0x80]
  415a65:	lea    rax,[rip+0x293a2]        # 0x43ee0e
  415a6c:	mov    r13d,0x3
  415a72:	mov    QWORD PTR [rsp+0x150],rax
  415a7a:	mov    eax,DWORD PTR [rsp+0x60]
  415a7e:	lea    ecx,[rax+0x1]
  415a81:	movsxd rcx,ecx
  415a84:	shl    rcx,0x3
  415a88:	call   0x424840
  415a8d:	mov    BYTE PTR [rsp+0x70],0x1
  415a92:	mov    QWORD PTR [rsp+0x48],rax
  415a97:	jmp    0x415368
  415a9c:	mov    r8,QWORD PTR [rsp+0x2b0]
  415aa4:	mov    rcx,QWORD PTR [rsp+0x58]
  415aa9:	lea    rdx,[rip+0x29304]        # 0x43edb4
  415ab0:	mov    r9,r12
  415ab3:	call   0x427d70
  415ab8:	jmp    0x4152e1
  415abd:	mov    r8,QWORD PTR [rsp+0x2b0]
  415ac5:	mov    rcx,QWORD PTR [rsp+0x58]
  415aca:	lea    rdx,[rip+0x292ca]        # 0x43ed9b
  415ad1:	mov    r9,r12
  415ad4:	call   0x427d70
  415ad9:	jmp    0x4152e1
  415ade:	cmp    r13b,0x75
  415ae2:	mov    r9,r12
  415ae5:	mov    r8,QWORD PTR [rsp+0x2b0]
  415aed:	je     0x416f04
  415af3:	mov    rcx,QWORD PTR [rsp+0x58]
  415af8:	lea    rdx,[rip+0x2920d]        # 0x43ed0c
  415aff:	call   0x427d70
  415b04:	jmp    0x4159f2
  415b09:	cmp    r13b,0x75
  415b0d:	mov    r9,r12
  415b10:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b18:	je     0x416f1a
  415b1e:	mov    rcx,QWORD PTR [rsp+0x58]
  415b23:	lea    rdx,[rip+0x29221]        # 0x43ed4b
  415b2a:	call   0x427d70
  415b2f:	jmp    0x4159f2
  415b34:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b3c:	mov    rcx,QWORD PTR [rsp+0x58]
  415b41:	lea    rdx,[rip+0x29297]        # 0x43eddf
  415b48:	mov    r9,r12
  415b4b:	call   0x427d70
  415b50:	jmp    0x4159f2
  415b55:	cmp    r13b,0x75
  415b59:	mov    r9,r12
  415b5c:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b64:	je     0x416f30
  415b6a:	mov    rcx,QWORD PTR [rsp+0x58]
  415b6f:	lea    rdx,[rip+0x29217]        # 0x43ed8d
  415b76:	call   0x427d70
  415b7b:	jmp    0x4152e1
  415b80:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b88:	mov    rcx,QWORD PTR [rsp+0x58]
  415b8d:	lea    rdx,[rip+0x29234]        # 0x43edc8
  415b94:	mov    r9,r12
  415b97:	call   0x427d70
  415b9c:	jmp    0x4159f2
  415ba1:	movzx  edi,BYTE PTR [rsp+0xb1]
  415ba9:	mov    r9,QWORD PTR [rsp+0x2b0]
  415bb1:	lea    rdx,[rip+0x2923d]        # 0x43edf5
  415bb8:	mov    rcx,QWORD PTR [rsp+0x58]
  415bbd:	mov    QWORD PTR [rsp+0x20],r12
  415bc2:	movsx  r8d,dil
  415bc6:	call   0x427d70
  415bcb:	lea    rax,[rip+0x29230]        # 0x43ee02
  415bd2:	cmp    dil,0x72
  415bd6:	sete   BYTE PTR [rsp+0xb3]
  415bde:	cmp    dil,0x76
  415be2:	mov    QWORD PTR [rsp+0x140],rax
  415bea:	lea    rax,[rip+0x29218]        # 0x43ee09
  415bf1:	sete   BYTE PTR [rsp+0x78]
  415bf6:	cmp    dil,0x6d
  415bfa:	sete   BYTE PTR [rsp+0xb2]
  415c02:	mov    QWORD PTR [rsp+0x148],rax
  415c0a:	mov    eax,edi
  415c0c:	movzx  esi,BYTE PTR [rsp+0xb2]
  415c14:	and    eax,0xfffffffb
  415c17:	cmp    al,0x72
  415c19:	sete   al
  415c1c:	or     eax,esi
  415c1e:	cmp    dil,0x66
  415c22:	sete   BYTE PTR [rsp+0x68]
  415c27:	cmp    dil,0x63
  415c2b:	movzx  esi,BYTE PTR [rsp+0x68]
  415c30:	sete   BYTE PTR [rsp+0x80]
  415c38:	movzx  edi,BYTE PTR [rsp+0x80]
  415c40:	or     edi,esi
  415c42:	or     dil,al
  415c45:	jne    0x417343
  415c4b:	mov    BYTE PTR [rsp+0x70],0x0
  415c50:	mov    r13d,0x2
  415c56:	mov    QWORD PTR [rsp+0x48],0x0
  415c5f:	jmp    0x415368
  415c64:	cmp    DWORD PTR [rbx+0xe4],0x16057
  415c6e:	jle    0x415505
  415c74:	mov    r8d,0x7
  415c7a:	mov    edx,r13d
  415c7d:	mov    rcx,rbp
  415c80:	call   0x427e98
  415c85:	xor    r9d,r9d
  415c88:	xor    r8d,r8d
  415c8b:	mov    rdx,rax
  415c8e:	mov    rcx,r15
  415c91:	call   0x412220
  415c96:	jmp    0x415505
  415c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  415ca0:	mov    edx,r13d
  415ca3:	mov    rcx,rbp
  415ca6:	mov    r8d,0x9
  415cac:	call   0x427e98
  415cb1:	xor    r9d,r9d
  415cb4:	xor    r8d,r8d
  415cb7:	mov    rdx,rax
  415cba:	mov    rcx,r15
  415cbd:	call   0x412220
  415cc2:	jmp    0x415723
  415cc7:	nop    WORD PTR [rax+rax*1+0x0]
  415cd0:	cmp    edi,0x1
  415cd3:	jne    0x415df0
  415cd9:	movzx  r8d,BYTE PTR [rbp+0x0]
  415cde:	cmp    r8b,0x66
  415ce2:	je     0x415e90
  415ce8:	cmp    r8b,0x44
  415cec:	je     0x415e90
  415cf2:	add    esi,0x1
  415cf5:	cmp    r14d,esi
  415cf8:	jg     0x4158d5
  415cfe:	add    edi,0x1
  415d01:	cmp    edi,0x5
  415d04:	jne    0x4158d0
  415d0a:	jmp    0x41592b
  415d0f:	nop
  415d10:	movzx  r8d,BYTE PTR [rbp+0x0]
  415d15:	cmp    r8b,0x66
  415d19:	je     0x415d21
  415d1b:	cmp    r8b,0x44
  415d1f:	jne    0x415cf2
  415d21:	cmp    BYTE PTR [rax],0x74
  415d24:	je     0x41617f
  415d2a:	add    esi,0x1
  415d2d:	cmp    r14d,esi
  415d30:	jle    0x416d54
  415d36:	mov    edx,esi
  415d38:	mov    rcx,r12
  415d3b:	mov    r8d,0x2
  415d41:	call   0x427e98
  415d46:	mov    r8d,0x3
  415d4c:	mov    edx,esi
  415d4e:	mov    rcx,r12
  415d51:	mov    rbp,rax
  415d54:	call   0x427e98
  415d59:	jmp    0x415d10
  415d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d60:	cmp    BYTE PTR [rbp+0x0],0x41
  415d64:	jne    0x415cf2
  415d66:	test   r13b,r13b
  415d69:	jne    0x415d96
  415d6b:	mov    rcx,QWORD PTR [rsp+0x60]
  415d70:	lea    rdx,[rip+0x2a1f0]        # 0x43ff67
  415d77:	call   0x427d70
  415d7c:	nop    DWORD PTR [rax+0x0]
  415d80:	mov    rdx,QWORD PTR [rsp+0xe0]
  415d88:	mov    rcx,r15
  415d8b:	mov    r13d,0x1
  415d91:	call   0x4122c0
  415d96:	mov    r8d,0x1
  415d9c:	mov    edx,esi
  415d9e:	mov    rcx,r12
  415da1:	call   0x427e98
  415da6:	lea    rdx,[rip+0x2a1f4]        # 0x43ffa1
  415dad:	mov    rcx,rax
  415db0:	mov    rbp,rax
  415db3:	call   0x42a3d8
  415db8:	mov    rcx,QWORD PTR [rsp+0x60]
  415dbd:	lea    r8,[rax+0x9]
  415dc1:	test   rax,rax
  415dc4:	lea    rdx,[rip+0x29e63]        # 0x43fc2e
  415dcb:	cmove  r8,rbp
  415dcf:	call   0x427d70
  415dd4:	mov    rdx,QWORD PTR [rsp+0xe0]
  415ddc:	mov    rcx,r15
  415ddf:	call   0x4122c0
  415de4:	jmp    0x415cf2
  415de9:	nop    DWORD PTR [rax+0x0]
  415df0:	movzx  eax,BYTE PTR [rbp+0x0]
  415df4:	cmp    al,0x74
  415df6:	je     0x415e00
  415df8:	cmp    al,0x4f
  415dfa:	jne    0x415cf2
  415e00:	test   r13b,r13b
  415e03:	jne    0x415d96
  415e05:	cmp    edi,0x2
  415e08:	je     0x416188
  415e0e:	jle    0x415ed0
  415e14:	cmp    edi,0x3
  415e17:	je     0x415d6b
  415e1d:	cmp    edi,0x4
  415e20:	jne    0x416169
  415e26:	mov    rcx,QWORD PTR [rsp+0x60]
  415e2b:	lea    rdx,[rip+0x2a14e]        # 0x43ff80
  415e32:	call   0x427d70
  415e37:	jmp    0x415d80
  415e3c:	lea    rsi,[rip+0x28fd5]        # 0x43ee18
  415e43:	movsxd rax,r13d
  415e46:	add    r13d,0x1
  415e4a:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  415e52:	cmp    BYTE PTR [rsp+0x44],0x0
  415e57:	jne    0x415eff
  415e5d:	mov    eax,DWORD PTR [rsp+0x60]
  415e61:	lea    r15,[rsp+0x1f0]
  415e69:	mov    r8,QWORD PTR [rsp+0x100]
  415e71:	lea    rdx,[rsp+0x190]
  415e79:	mov    r9d,r13d
  415e7c:	mov    esi,r13d
  415e7f:	mov    rcx,r15
  415e82:	mov    DWORD PTR [rsp+0x20],eax
  415e86:	call   0x412100
  415e8b:	jmp    0x415432
  415e90:	cmp    BYTE PTR [rax],0x66
  415e93:	je     0x416452
  415e99:	add    esi,0x1
  415e9c:	cmp    r14d,esi
  415e9f:	jle    0x416d54
  415ea5:	mov    edx,esi
  415ea7:	mov    rcx,r12
  415eaa:	mov    r8d,0x2
  415eb0:	call   0x427e98
  415eb5:	mov    r8d,0x3
  415ebb:	mov    edx,esi
  415ebd:	mov    rcx,r12
  415ec0:	mov    rbp,rax
  415ec3:	call   0x427e98
  415ec8:	jmp    0x415cd9
  415ecd:	nop    DWORD PTR [rax]
  415ed0:	cmp    edi,0x1
  415ed3:	jne    0x416169
  415ed9:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  415ee3:	jle    0x416460
  415ee9:	mov    rcx,QWORD PTR [rsp+0x60]
  415eee:	lea    rdx,[rip+0x2a02b]        # 0x43ff20
  415ef5:	call   0x427d70
  415efa:	jmp    0x415d80
  415eff:	lea    rdx,[rip+0x28f2f]        # 0x43ee35
  415f06:	movsxd rax,r13d
  415f09:	lea    esi,[r13+0x1]
  415f0d:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  415f15:	movzx  eax,BYTE PTR [rsp+0xb3]
  415f1d:	or     al,BYTE PTR [rsp+0x68]
  415f21:	jne    0x415f31
  415f23:	cmp    BYTE PTR [rsp+0xb2],0x0
  415f2b:	je     0x4153e7
  415f31:	mov    eax,esi
  415f33:	jmp    0x4153d2
  415f38:	mov    edx,DWORD PTR [rsp+0xb8]
  415f3f:	test   edx,edx
  415f41:	je     0x41664c
  415f47:	cmp    WORD PTR [rsp+0xc0],0x0
  415f50:	jne    0x416a1e
  415f56:	cmp    BYTE PTR [rsp+0x60],0x0
  415f5b:	jne    0x416b32
  415f61:	cmp    BYTE PTR [rsp+0xb1],0x6d
  415f69:	je     0x4157ce
  415f6f:	cmp    BYTE PTR [rsp+0x70],0x0
  415f74:	je     0x4157ce
  415f7a:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  415f84:	mov    r8,QWORD PTR [rsp+0x2c0]
  415f8c:	jle    0x416de8
  415f92:	lea    rdx,[rip+0x29aff]        # 0x43fa98
  415f99:	mov    rcx,r14
  415f9c:	call   0x427d70
  415fa1:	mov    rcx,QWORD PTR [rsp+0xe0]
  415fa9:	xor    edx,edx
  415fab:	xor    esi,esi
  415fad:	call   0x4062b0
  415fb2:	test   rax,rax
  415fb5:	mov    r13,rax
  415fb8:	je     0x4159a1
  415fbe:	mov    rcx,rax
  415fc1:	xor    edi,edi
  415fc3:	call   0x427e70
  415fc8:	test   eax,eax
  415fca:	mov    r12d,eax
  415fcd:	jle    0x416445
  415fd3:	mov    QWORD PTR [rsp+0x80],rbp
  415fdb:	xor    ebp,ebp
  415fdd:	xor    esi,esi
  415fdf:	jmp    0x41600d
  415fe1:	cmp    edi,0x3
  415fe4:	je     0x4160d4
  415fea:	cmp    edi,0x1
  415fed:	je     0x4160ad
  415ff3:	call   0x427e98
  415ff8:	cmp    BYTE PTR [rax],0x4f
  415ffb:	je     0x416088
  416001:	add    esi,0x1
  416004:	cmp    esi,r12d
  416007:	je     0x416431
  41600d:	cmp    edi,0x2
  416010:	mov    r8d,0x2
  416016:	mov    edx,esi
  416018:	mov    rcx,r13
  41601b:	jne    0x415fe1
  41601d:	call   0x427e98
  416022:	cmp    BYTE PTR [rax],0x41
  416025:	jne    0x416001
  416027:	test   bpl,bpl
  41602a:	jne    0x416050
  41602c:	lea    rdx,[rip+0x29bc8]        # 0x43fbfb
  416033:	mov    rcx,r14
  416036:	call   0x427d70
  41603b:	mov    rdx,QWORD PTR [rsp+0xe0]
  416043:	mov    rcx,r15
  416046:	mov    ebp,0x1
  41604b:	call   0x4122c0
  416050:	mov    edx,esi
  416052:	mov    rcx,r13
  416055:	mov    r8d,0x1
  41605b:	call   0x427e98
  416060:	lea    rdx,[rip+0x29bc7]        # 0x43fc2e
  416067:	lea    r8,[rax+0xc]
  41606b:	mov    rcx,r14
  41606e:	call   0x427d70
  416073:	mov    rdx,QWORD PTR [rsp+0xe0]
  41607b:	mov    rcx,r15
  41607e:	call   0x4122c0
  416083:	jmp    0x416001
  416088:	test   bpl,bpl
  41608b:	jne    0x416050
  41608d:	cmp    edi,0x2
  416090:	je     0x41602c
  416092:	cmp    edi,0x3
  416095:	je     0x4160eb
  416097:	cmp    edi,0x1
  41609a:	je     0x4160c0
  41609c:	lea    rdx,[rip+0x29b41]        # 0x43fbe4
  4160a3:	mov    rcx,r14
  4160a6:	call   0x427d70
  4160ab:	jmp    0x41603b
  4160ad:	call   0x427e98
  4160b2:	cmp    BYTE PTR [rax],0x44
  4160b5:	jne    0x416001
  4160bb:	test   bpl,bpl
  4160be:	jne    0x416050
  4160c0:	lea    rdx,[rip+0x29b24]        # 0x43fbeb
  4160c7:	mov    rcx,r14
  4160ca:	call   0x427d70
  4160cf:	jmp    0x41603b
  4160d4:	call   0x427e98
  4160d9:	cmp    BYTE PTR [rax],0x52
  4160dc:	jne    0x416001
  4160e2:	test   bpl,bpl
  4160e5:	jne    0x416050
  4160eb:	lea    rdx,[rip+0x29b1e]        # 0x43fc10
  4160f2:	mov    rcx,r14
  4160f5:	call   0x427d70
  4160fa:	jmp    0x41603b
  4160ff:	lea    rdx,[rip+0x28d44]        # 0x43ee4a
  416106:	movsxd rax,esi
  416109:	add    esi,0x1
  41610c:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  416114:	jmp    0x415403
  416119:	mov    rcx,QWORD PTR [rsp+0x38]
  41611e:	lea    rdx,[rip+0x28d71]        # 0x43ee96
  416125:	call   0x427dc8
  41612a:	jmp    0x41559f
  41612f:	mov    rcx,QWORD PTR [rsp+0x38]
  416134:	lea    rdx,[rip+0x28d5b]        # 0x43ee96
  41613b:	call   0x427dc8
  416140:	jmp    0x4155f7
  416145:	mov    rcx,QWORD PTR [rsp+0x38]
  41614a:	lea    rdx,[rip+0x28d45]        # 0x43ee96
  416151:	call   0x427dc8
  416156:	jmp    0x41562d
  41615b:	test   r13b,r13b
  41615e:	je     0x415e26
  416164:	jmp    0x415d96
  416169:	mov    rcx,QWORD PTR [rsp+0x60]
  41616e:	lea    rdx,[rip+0x29da1]        # 0x43ff16
  416175:	call   0x427d70
  41617a:	jmp    0x415d80
  41617f:	test   r13b,r13b
  416182:	jne    0x415d96
  416188:	mov    rcx,QWORD PTR [rsp+0x60]
  41618d:	lea    rdx,[rip+0x29db7]        # 0x43ff4b
  416194:	call   0x427d70
  416199:	jmp    0x415d80
  41619e:	lea    rsi,[rip+0x28c79]        # 0x43ee1e
  4161a5:	movsxd rax,r13d
  4161a8:	add    r13d,0x1
  4161ac:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  4161b4:	jmp    0x415e52
  4161b9:	cmp    BYTE PTR [rsp+0x68],0x0
  4161be:	jne    0x416cd2
  4161c4:	mov    r8,QWORD PTR [rsp+0x2c0]
  4161cc:	lea    rdx,[rip+0x29f2d]        # 0x440100
  4161d3:	mov    rcx,r14
  4161d6:	xor    esi,esi
  4161d8:	call   0x427d70
  4161dd:	mov    rcx,QWORD PTR [rsp+0xe0]
  4161e5:	xor    edx,edx
  4161e7:	call   0x4062b0
  4161ec:	test   rax,rax
  4161ef:	mov    r12,rax
  4161f2:	je     0x4159a1
  4161f8:	mov    r8d,DWORD PTR [rbx+0x8]
  4161fc:	lea    rcx,[rip+0x29f95]        # 0x440198
  416203:	mov    edx,0x8
  416208:	xor    esi,esi
  41620a:	call   0x41c880
  41620f:	mov    rcx,r12
  416212:	mov    r13d,eax
  416215:	call   0x427e70
  41621a:	mov    edi,eax
  41621c:	lea    eax,[rax-0x1]
  41621f:	test   edi,edi
  416221:	jle    0x416292
  416223:	mov    QWORD PTR [rsp+0x68],rbp
  416228:	mov    ebp,eax
  41622a:	nop    WORD PTR [rax+rax*1+0x0]
  416230:	xor    r8d,r8d
  416233:	test   esi,esi
  416235:	je     0x4172f3
  41623b:	mov    edx,esi
  41623d:	mov    rcx,r12
  416240:	call   0x427e98
  416245:	lea    r9,[rip+0x27f23]        # 0x43e16f
  41624c:	lea    rdx,[rip+0x29f55]        # 0x4401a8
  416253:	mov    QWORD PTR [rsp+0x20],rax
  416258:	mov    r8d,r13d
  41625b:	mov    rcx,r14
  41625e:	call   0x427d70
  416263:	cmp    esi,ebp
  416265:	jge    0x416276
  416267:	lea    rdx,[rip+0x29f42]        # 0x4401b0
  41626e:	mov    rcx,r14
  416271:	call   0x427dc8
  416276:	mov    rdx,QWORD PTR [rsp+0xe0]
  41627e:	mov    rcx,r15
  416281:	add    esi,0x1
  416284:	call   0x4122c0
  416289:	cmp    esi,edi
  41628b:	jne    0x416230
  41628d:	mov    rbp,QWORD PTR [rsp+0x68]
  416292:	mov    rcx,r12
  416295:	call   0x427f68
  41629a:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  4162a4:	jle    0x416d38
  4162aa:	mov    r8,QWORD PTR [rsp+0x2c0]
  4162b2:	lea    rdx,[rip+0x29eff]        # 0x4401b8
  4162b9:	mov    rcx,r14
  4162bc:	call   0x427d70
  4162c1:	mov    rcx,QWORD PTR [rsp+0xe0]
  4162c9:	xor    edx,edx
  4162cb:	xor    esi,esi
  4162cd:	call   0x4062b0
  4162d2:	test   rax,rax
  4162d5:	mov    rdi,rax
  4162d8:	je     0x4159a1
  4162de:	mov    rcx,rax
  4162e1:	call   0x427e70
  4162e6:	cmp    BYTE PTR [rsp+0x44],0x0
  4162eb:	mov    r12d,eax
  4162ee:	jne    0x416e4e
  4162f4:	test   eax,eax
  4162f6:	jle    0x41631a
  4162f8:	lea    rdx,[rip+0x2a019]        # 0x440318
  4162ff:	mov    rcx,r14
  416302:	mov    r8d,eax
  416305:	call   0x427d70
  41630a:	mov    rdx,QWORD PTR [rsp+0xe0]
  416312:	mov    rcx,r15
  416315:	call   0x4122c0
  41631a:	mov    rcx,rdi
  41631d:	call   0x427f68
  416322:	cmp    QWORD PTR [rsp+0xc8],0x0
  41632b:	je     0x41640e
  416331:	mov    r8,QWORD PTR [rsp+0xc8]
  416339:	lea    rdx,[rip+0x2a018]        # 0x440358
  416340:	mov    rcx,r14
  416343:	call   0x427d70
  416348:	mov    rdx,QWORD PTR [rsp+0xe0]
  416350:	mov    rcx,r15
  416353:	call   0x4122c0
  416358:	cmp    BYTE PTR [rsp+0xb0],0x0
  416360:	je     0x41640e
  416366:	cmp    BYTE PTR [rsp+0x60],0x0
  41636b:	je     0x4163ea
  41636d:	cmp    BYTE PTR [rsp+0xd3],0x69
  416375:	je     0x4163ea
  416377:	mov    rsi,QWORD PTR [rsp+0x2b0]
  41637f:	lea    rdi,[rip+0x29fea]        # 0x440370
  416386:	mov    ecx,0xb
  41638b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41638d:	jne    0x417174
  416393:	cmp    BYTE PTR [rsp+0xd3],0x6e
  41639b:	je     0x4163ea
  41639d:	movzx  eax,BYTE PTR [rsp+0xd3]
  4163a5:	lea    r9,[rip+0x27dda]        # 0x43e186
  4163ac:	cmp    al,0x66
  4163ae:	je     0x4163c4
  4163b0:	cmp    al,0x6e
  4163b2:	lea    r9,[rip+0x27da9]        # 0x43e162
  4163b9:	lea    rax,[rip+0x27dcb]        # 0x43e18b
  4163c0:	cmove  r9,rax
  4163c4:	lea    rdx,[rip+0x29dd6]        # 0x4401a1
  4163cb:	lea    r8,[rip+0x29fa9]        # 0x44037b
  4163d2:	mov    rcx,r14
  4163d5:	call   0x427d70
  4163da:	mov    rdx,QWORD PTR [rsp+0xe0]
  4163e2:	mov    rcx,r15
  4163e5:	call   0x4122c0
  4163ea:	cmp    BYTE PTR [rsp+0xb1],0x6d
  4163f2:	je     0x41640e
  4163f4:	mov    eax,DWORD PTR [rsp+0xd4]
  4163fb:	test   eax,eax
  4163fd:	jne    0x41640e
  4163ff:	lea    rdx,[rip+0x29f86]        # 0x44038c
  416406:	mov    rcx,r15
  416409:	call   0x4122c0
  41640e:	movsx  edx,BYTE PTR [rsp+0xb1]
  416416:	mov    r8d,DWORD PTR [rsp+0xb4]
  41641e:	mov    r9d,0x1
  416424:	mov    rcx,r15
  416427:	call   0x4148b0
  41642c:	jmp    0x415961
  416431:	add    edi,0x1
  416434:	cmp    edi,0x4
  416437:	jne    0x415fdb
  41643d:	mov    rbp,QWORD PTR [rsp+0x80]
  416445:	mov    rcx,r13
  416448:	call   0x427f68
  41644d:	jmp    0x4157ce
  416452:	test   r13b,r13b
  416455:	je     0x415ed9
  41645b:	jmp    0x415d96
  416460:	mov    rcx,QWORD PTR [rsp+0x60]
  416465:	lea    rdx,[rip+0x29acc]        # 0x43ff38
  41646c:	call   0x427d70
  416471:	jmp    0x415d80
  416476:	mov    r8,QWORD PTR [rsp+0x2c0]
  41647e:	lea    rdx,[rip+0x289d3]        # 0x43ee58
  416485:	mov    rcx,r14
  416488:	call   0x427d70
  41648d:	mov    rcx,QWORD PTR [rsp+0xe0]
  416495:	xor    edx,edx
  416497:	call   0x4062b0
  41649c:	test   rax,rax
  41649f:	mov    rsi,rax
  4164a2:	je     0x416dfc
  4164a8:	mov    rcx,rax
  4164ab:	call   0x427e70
  4164b0:	test   eax,eax
  4164b2:	mov    QWORD PTR [rsp+0x78],0x0
  4164bb:	jle    0x4164d7
  4164bd:	xor    r8d,r8d
  4164c0:	xor    edx,edx
  4164c2:	mov    rcx,rsi
  4164c5:	call   0x427e98
  4164ca:	mov    rcx,rax
  4164cd:	call   0x424900
  4164d2:	mov    QWORD PTR [rsp+0x78],rax
  4164d7:	mov    rcx,rsi
  4164da:	call   0x427f68
  4164df:	mov    BYTE PTR [rsp+0xb0],r12b
  4164e7:	jmp    0x415496
  4164ec:	lea    rdx,[rip+0x289c5]        # 0x43eeb8
  4164f3:	mov    rcx,r14
  4164f6:	call   0x427d70
  4164fb:	cmp    DWORD PTR [rbx+0xe4],0x13947
  416505:	jle    0x416dd4
  41650b:	lea    rdx,[rip+0x289df]        # 0x43eef1
  416512:	mov    rcx,r14
  416515:	call   0x427dc8
  41651a:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  416524:	jle    0x416dc0
  41652a:	lea    rdx,[rip+0x289e7]        # 0x43ef18
  416531:	mov    rcx,r14
  416534:	call   0x427dc8
  416539:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  416543:	jle    0x416dac
  416549:	lea    rdx,[rip+0x28b81]        # 0x43f0d1
  416550:	mov    rcx,r14
  416553:	call   0x427dd8
  416558:	mov    r8,QWORD PTR [rsp+0x2c0]
  416560:	lea    rdx,[rip+0x28b99]        # 0x43f100
  416567:	mov    rcx,r14
  41656a:	xor    esi,esi
  41656c:	call   0x427dd8
  416571:	mov    rcx,QWORD PTR [rsp+0xe0]
  416579:	xor    edx,edx
  41657b:	call   0x4062b0
  416580:	test   rax,rax
  416583:	mov    r12,rax
  416586:	je     0x4159a1
  41658c:	mov    rcx,rax
  41658f:	call   0x427e70
  416594:	cmp    eax,0x1
  416597:	je     0x416f46
  41659d:	mov    rcx,r12
  4165a0:	call   0x427f68
  4165a5:	jmp    0x4159a1
  4165aa:	mov    r8,QWORD PTR [rsp+0x2c0]
  4165b2:	lea    rdx,[rip+0x2968f]        # 0x43fc48
  4165b9:	mov    rcx,r14
  4165bc:	xor    esi,esi
  4165be:	call   0x427d70
  4165c3:	mov    rcx,QWORD PTR [rsp+0xe0]
  4165cb:	xor    edx,edx
  4165cd:	call   0x4062b0
  4165d2:	test   rax,rax
  4165d5:	mov    rdi,rax
  4165d8:	je     0x4159a1
  4165de:	mov    rcx,rax
  4165e1:	call   0x427e70
  4165e6:	test   eax,eax
  4165e8:	jle    0x41663f
  4165ea:	lea    rdx,[rip+0x295f3]        # 0x43fbe4
  4165f1:	mov    rcx,r15
  4165f4:	xor    esi,esi
  4165f6:	call   0x4122c0
  4165fb:	jmp    0x416633
  4165fd:	mov    edx,esi
  4165ff:	mov    r8d,0x1
  416605:	mov    rcx,rdi
  416608:	call   0x427e98
  41660d:	lea    rdx,[rip+0x2918a]        # 0x43f79e
  416614:	lea    r8,[rax+0xc]
  416618:	mov    rcx,r14
  41661b:	add    esi,0x1
  41661e:	call   0x427d70
  416623:	mov    rdx,QWORD PTR [rsp+0xe0]
  41662b:	mov    rcx,r15
  41662e:	call   0x4122c0
  416633:	mov    rcx,rdi
  416636:	call   0x427e70
  41663b:	cmp    esi,eax
  41663d:	jl     0x4165fd
  41663f:	mov    rcx,rdi
  416642:	call   0x427f68
  416647:	jmp    0x4157fd
  41664c:	lea    rdx,[rip+0x28e4d]        # 0x43f4a0
  416653:	mov    rcx,r14
  416656:	call   0x427d70
  41665b:	cmp    DWORD PTR [rbx+0xe4],0x13947
  416665:	jle    0x416d98
  41666b:	lea    rdx,[rip+0x28e73]        # 0x43f4e5
  416672:	mov    rcx,r14
  416675:	call   0x427dc8
  41667a:	lea    rdx,[rip+0x28e8f]        # 0x43f510
  416681:	mov    rcx,r14
  416684:	call   0x427dc8
  416689:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  416693:	jle    0x416d84
  416699:	lea    rdx,[rip+0x28ea8]        # 0x43f548
  4166a0:	mov    rcx,r14
  4166a3:	call   0x427dc8
  4166a8:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  4166b2:	jle    0x416d70
  4166b8:	lea    rdx,[rip+0x28f36]        # 0x43f5f5
  4166bf:	mov    rcx,r14
  4166c2:	call   0x427dc8
  4166c7:	cmp    DWORD PTR [rbx+0xe4],0x1387f
  4166d1:	jg     0x416ef0
  4166d7:	lea    rdx,[rip+0x28f5a]        # 0x43f638
  4166de:	mov    rcx,r14
  4166e1:	call   0x427dc8
  4166e6:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  4166f0:	jg     0x416e0c
  4166f6:	mov    r8,QWORD PTR [rsp+0x2c0]
  4166fe:	lea    rdx,[rip+0x29003]        # 0x43f708
  416705:	mov    rcx,r14
  416708:	xor    esi,esi
  41670a:	call   0x427dd8
  41670f:	mov    rcx,QWORD PTR [rsp+0xe0]
  416717:	xor    edx,edx
  416719:	call   0x4062b0
  41671e:	test   rax,rax
  416721:	mov    r13,rax
  416724:	je     0x4159a1
  41672a:	mov    rcx,rax
  41672d:	call   0x427e70
  416732:	test   eax,eax
  416734:	mov    edi,eax
  416736:	jle    0x416cc5
  41673c:	lea    rdx,[rip+0x29047]        # 0x43f78a
  416743:	mov    rcx,r15
  416746:	xor    r12d,r12d
  416749:	call   0x4122c0
  41674e:	mov    QWORD PTR [rsp+0x80],rbp
  416756:	mov    ebp,edi
  416758:	jmp    0x416825
  41675d:	mov    r8d,0x6
  416763:	mov    edx,r12d
  416766:	mov    rcx,r13
  416769:	call   0x427e98
  41676e:	lea    rdx,[rip+0x29029]        # 0x43f79e
  416775:	mov    r8,rax
  416778:	mov    rcx,r14
  41677b:	call   0x427dd8
  416780:	mov    rcx,r13
  416783:	mov    r8d,0x3
  416789:	mov    edx,r12d
  41678c:	lea    rdi,[rip+0x280e5]        # 0x43e878
  416793:	call   0x427e98
  416798:	mov    ecx,0x2
  41679d:	mov    rsi,rax
  4167a0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167a2:	je     0x4169a6
  4167a8:	mov    rcx,r13
  4167ab:	mov    r8d,0x4
  4167b1:	mov    edx,r12d
  4167b4:	lea    rdi,[rip+0x280bd]        # 0x43e878
  4167bb:	call   0x427e98
  4167c0:	mov    ecx,0x2
  4167c5:	mov    rsi,rax
  4167c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167ca:	jne    0x416992
  4167d0:	mov    rcx,r13
  4167d3:	mov    r8d,0xa
  4167d9:	mov    edx,r12d
  4167dc:	lea    rdi,[rip+0x28095]        # 0x43e878
  4167e3:	call   0x427e98
  4167e8:	mov    ecx,0x2
  4167ed:	mov    rsi,rax
  4167f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167f2:	je     0x41697e
  4167f8:	mov    rdx,QWORD PTR [rsp+0xe0]
  416800:	mov    rcx,r15
  416803:	call   0x4122c0
  416808:	cmp    DWORD PTR [rbx+0xe4],0x1387f
  416812:	jg     0x416945
  416818:	add    r12d,0x1
  41681c:	cmp    r12d,ebp
  41681f:	je     0x416cbd
  416825:	xor    r8d,r8d
  416828:	mov    edx,r12d
  41682b:	mov    rcx,r13
  41682e:	call   0x427e98
  416833:	lea    rdx,[rip+0x28f59]        # 0x43f793
  41683a:	mov    r8,rax
  41683d:	mov    rcx,r14
  416840:	lea    rdi,[rip+0x28f55]        # 0x43f79c
  416847:	call   0x427d70
  41684c:	mov    rcx,r13
  41684f:	mov    r8d,0x7
  416855:	mov    edx,r12d
  416858:	call   0x427e98
  41685d:	mov    ecx,0x2
  416862:	mov    rsi,rax
  416865:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416867:	je     0x41675d
  41686d:	mov    rcx,r13
  416870:	mov    r8d,0x1
  416876:	mov    edx,r12d
  416879:	lea    rdi,[rip+0x27ff8]        # 0x43e878
  416880:	call   0x427e98
  416885:	mov    ecx,0x2
  41688a:	mov    rsi,rax
  41688d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41688f:	jne    0x4169ba
  416895:	lea    rdx,[rip+0x28f06]        # 0x43f7a2
  41689c:	mov    rcx,r14
  41689f:	call   0x427dc8
  4168a4:	mov    r8d,0x5
  4168aa:	mov    edx,r12d
  4168ad:	mov    rcx,r13
  4168b0:	call   0x427e98
  4168b5:	lea    rdx,[rip+0x28f13]        # 0x43f7cf
  4168bc:	mov    rcx,rax
  4168bf:	mov    rsi,rax
  4168c2:	lea    rdi,[rip+0x27faf]        # 0x43e878
  4168c9:	call   0x42a3d8
  4168ce:	lea    r8,[rax+0x7]
  4168d2:	test   rax,rax
  4168d5:	lea    rdx,[rip+0x28ec2]        # 0x43f79e
  4168dc:	mov    rcx,r14
  4168df:	cmove  r8,rsi
  4168e3:	call   0x427dd8
  4168e8:	mov    rcx,r13
  4168eb:	mov    r8d,0x8
  4168f1:	mov    edx,r12d
  4168f4:	call   0x427e98
  4168f9:	mov    ecx,0x2
  4168fe:	mov    rsi,rax
  416901:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416903:	je     0x416d5c
  416909:	mov    rcx,r13
  41690c:	mov    r8d,0x9
  416912:	mov    edx,r12d
  416915:	lea    rdi,[rip+0x27f5c]        # 0x43e878
  41691c:	call   0x427e98
  416921:	mov    ecx,0x2
  416926:	mov    rsi,rax
  416929:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41692b:	jne    0x416780
  416931:	lea    rdx,[rip+0x28eab]        # 0x43f7e3
  416938:	mov    rcx,r14
  41693b:	call   0x427dc8
  416940:	jmp    0x416780
  416945:	mov    edx,r12d
  416948:	mov    rcx,r13
  41694b:	mov    r8d,0xb
  416951:	call   0x427e98
  416956:	xor    edx,edx
  416958:	mov    r8d,0xa
  41695e:	mov    rcx,rax
  416961:	call   0x42a3c8
  416966:	xor    r9d,r9d
  416969:	mov    r8d,eax
  41696c:	mov    edx,0x69
  416971:	mov    rcx,r15
  416974:	call   0x4148b0
  416979:	jmp    0x416818
  41697e:	lea    rdx,[rip+0x28e84]        # 0x43f809
  416985:	mov    rcx,r14
  416988:	call   0x427dd8
  41698d:	jmp    0x4167f8
  416992:	lea    rdx,[rip+0x28e67]        # 0x43f800
  416999:	mov    rcx,r14
  41699c:	call   0x427dc8
  4169a1:	jmp    0x4167d0
  4169a6:	lea    rdx,[rip+0x28e4a]        # 0x43f7f7
  4169ad:	mov    rcx,r14
  4169b0:	call   0x427dc8
  4169b5:	jmp    0x4167a8
  4169ba:	mov    rcx,r13
  4169bd:	mov    r8d,0x2
  4169c3:	mov    edx,r12d
  4169c6:	lea    rdi,[rip+0x27eab]        # 0x43e878
  4169cd:	call   0x427e98
  4169d2:	mov    ecx,0x2
  4169d7:	mov    rsi,rax
  4169da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4169dc:	jne    0x4168a4
  4169e2:	mov    rcx,r13
  4169e5:	mov    r8d,0x7
  4169eb:	mov    edx,r12d
  4169ee:	lea    rdi,[rip+0x28dbb]        # 0x43f7b0
  4169f5:	call   0x427e98
  4169fa:	mov    ecx,0x2
  4169ff:	mov    rsi,rax
  416a02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416a04:	jne    0x4171ff
  416a0a:	lea    rdx,[rip+0x28da1]        # 0x43f7b2
  416a11:	mov    rcx,r14
  416a14:	call   0x427dc8
  416a19:	jmp    0x4168a4
  416a1e:	mov    r8,QWORD PTR [rsp+0x2c0]
  416a26:	lea    rdx,[rip+0x28df3]        # 0x43f820
  416a2d:	mov    rcx,r14
  416a30:	xor    esi,esi
  416a32:	call   0x427d70
  416a37:	mov    rcx,QWORD PTR [rsp+0xe0]
  416a3f:	xor    edx,edx
  416a41:	call   0x4062b0
  416a46:	test   rax,rax
  416a49:	mov    rdi,rax
  416a4c:	je     0x4159a1
  416a52:	mov    rcx,rax
  416a55:	call   0x427e70
  416a5a:	test   eax,eax
  416a5c:	mov    r12d,eax
  416a5f:	jle    0x416abf
  416a61:	lea    rdx,[rip+0x28e4f]        # 0x43f8b7
  416a68:	mov    rcx,r15
  416a6b:	xor    esi,esi
  416a6d:	call   0x4122c0
  416a72:	mov    edx,esi
  416a74:	mov    r8d,0x1
  416a7a:	mov    rcx,rdi
  416a7d:	call   0x427e98
  416a82:	xor    r8d,r8d
  416a85:	mov    edx,esi
  416a87:	mov    rcx,rdi
  416a8a:	mov    r13,rax
  416a8d:	add    esi,0x1
  416a90:	call   0x427e98
  416a95:	lea    rdx,[rip+0x28e2e]        # 0x43f8ca
  416a9c:	mov    r8,rax
  416a9f:	mov    r9,r13
  416aa2:	mov    rcx,r14
  416aa5:	call   0x427d70
  416aaa:	mov    rdx,QWORD PTR [rsp+0xe0]
  416ab2:	mov    rcx,r15
  416ab5:	call   0x4122c0
  416aba:	cmp    esi,r12d
  416abd:	jne    0x416a72
  416abf:	mov    rcx,rdi
  416ac2:	call   0x427f68
  416ac7:	jmp    0x415f56
  416acc:	lea    rdx,[rip+0x27cf5]        # 0x43e7c8
  416ad3:	mov    rcx,r14
  416ad6:	call   0x427d70
  416adb:	jmp    0x414b12
  416ae0:	mov    r8,QWORD PTR [rsp+0x2c0]
  416ae8:	lea    rdx,[rip+0x287a1]        # 0x43f290
  416aef:	mov    rcx,r14
  416af2:	xor    esi,esi
  416af4:	call   0x427d70
  416af9:	mov    rcx,QWORD PTR [rsp+0xe0]
  416b01:	xor    edx,edx
  416b03:	call   0x4062b0
  416b08:	test   rax,rax
  416b0b:	mov    rdi,rax
  416b0e:	je     0x4159a1
  416b14:	mov    rcx,rax
  416b17:	call   0x427e70
  416b1c:	cmp    eax,0x1
  416b1f:	je     0x41726e
  416b25:	mov    rcx,rdi
  416b28:	call   0x427f68
  416b2d:	jmp    0x4157ce
  416b32:	mov    r8,QWORD PTR [rsp+0x2c0]
  416b3a:	lea    rdx,[rip+0x28d97]        # 0x43f8d8
  416b41:	mov    rcx,r14
  416b44:	xor    esi,esi
  416b46:	call   0x427d70
  416b4b:	mov    rcx,QWORD PTR [rsp+0xe0]
  416b53:	xor    edx,edx
  416b55:	call   0x4062b0
  416b5a:	test   rax,rax
  416b5d:	mov    rdi,rax
  416b60:	je     0x4159a1
  416b66:	mov    rcx,rax
  416b69:	call   0x427e70
  416b6e:	test   eax,eax
  416b70:	mov    r12d,eax
  416b73:	jle    0x416bd3
  416b75:	lea    rdx,[rip+0x28ec5]        # 0x43fa41
  416b7c:	mov    rcx,r15
  416b7f:	xor    esi,esi
  416b81:	call   0x4122c0
  416b86:	mov    edx,esi
  416b88:	mov    r8d,0x1
  416b8e:	mov    rcx,rdi
  416b91:	call   0x427e98
  416b96:	xor    r8d,r8d
  416b99:	mov    edx,esi
  416b9b:	mov    rcx,rdi
  416b9e:	mov    r13,rax
  416ba1:	add    esi,0x1
  416ba4:	call   0x427e98
  416ba9:	lea    rdx,[rip+0x28d1a]        # 0x43f8ca
  416bb0:	mov    r8,rax
  416bb3:	mov    r9,r13
  416bb6:	mov    rcx,r14
  416bb9:	call   0x427d70
  416bbe:	mov    rdx,QWORD PTR [rsp+0xe0]
  416bc6:	mov    rcx,r15
  416bc9:	call   0x4122c0
  416bce:	cmp    esi,r12d
  416bd1:	jne    0x416b86
  416bd3:	mov    rcx,rdi
  416bd6:	xor    esi,esi
  416bd8:	call   0x427f68
  416bdd:	mov    r8,QWORD PTR [rsp+0x2c0]
  416be5:	lea    rdx,[rip+0x28d94]        # 0x43f980
  416bec:	mov    rcx,r14
  416bef:	call   0x427d70
  416bf4:	mov    rcx,QWORD PTR [rsp+0xe0]
  416bfc:	xor    edx,edx
  416bfe:	call   0x4062b0
  416c03:	test   rax,rax
  416c06:	mov    rdi,rax
  416c09:	je     0x4159a1
  416c0f:	mov    rcx,rax
  416c12:	call   0x427e70
  416c17:	test   eax,eax
  416c19:	mov    DWORD PTR [rsp+0x80],eax
  416c20:	jle    0x416c9c
  416c22:	lea    rdx,[rip+0x28e31]        # 0x43fa5a
  416c29:	mov    rcx,r15
  416c2c:	xor    esi,esi
  416c2e:	call   0x4122c0
  416c33:	mov    edx,esi
  416c35:	mov    r8d,0x2
  416c3b:	mov    rcx,rdi
  416c3e:	call   0x427e98
  416c43:	xor    r8d,r8d
  416c46:	mov    edx,esi
  416c48:	mov    rcx,rdi
  416c4b:	mov    r12,rax
  416c4e:	call   0x427e98
  416c53:	mov    edx,esi
  416c55:	mov    r8d,0x1
  416c5b:	mov    rcx,rdi
  416c5e:	mov    r13,rax
  416c61:	add    esi,0x1
  416c64:	call   0x427e98
  416c69:	lea    rdx,[rip+0x28e00]        # 0x43fa70
  416c70:	mov    r8,rax
  416c73:	mov    r9,r13
  416c76:	mov    rcx,r14
  416c79:	mov    QWORD PTR [rsp+0x20],r12
  416c7e:	call   0x427d70
  416c83:	mov    rdx,QWORD PTR [rsp+0xe0]
  416c8b:	mov    rcx,r15
  416c8e:	call   0x4122c0
  416c93:	cmp    esi,DWORD PTR [rsp+0x80]
  416c9a:	jne    0x416c33
  416c9c:	mov    rcx,rdi
  416c9f:	call   0x427f68
  416ca4:	jmp    0x415f61
  416ca9:	lea    rdx,[rip+0x29158]        # 0x43fe08
  416cb0:	mov    rcx,r14
  416cb3:	call   0x427dc8
  416cb8:	jmp    0x415888
  416cbd:	mov    rbp,QWORD PTR [rsp+0x80]
  416cc5:	mov    rcx,r13
  416cc8:	call   0x427f68
  416ccd:	jmp    0x415f47
  416cd2:	mov    r8,QWORD PTR [rsp+0x2c0]
  416cda:	lea    rdx,[rip+0x292cf]        # 0x43ffb0
  416ce1:	mov    rcx,r14
  416ce4:	xor    esi,esi
  416ce6:	call   0x427d70
  416ceb:	mov    rcx,QWORD PTR [rsp+0xe0]
  416cf3:	xor    edx,edx
  416cf5:	call   0x4062b0
  416cfa:	test   rax,rax
  416cfd:	mov    rdi,rax
  416d00:	je     0x4159a1
  416d06:	mov    rcx,rax
  416d09:	call   0x427e70
  416d0e:	cmp    eax,0x1
  416d11:	je     0x417187
  416d17:	mov    rcx,rdi
  416d1a:	call   0x427f68
  416d1f:	jmp    0x4159a1
  416d24:	lea    rdx,[rip+0x29055]        # 0x43fd80
  416d2b:	mov    rcx,r14
  416d2e:	call   0x427dd8
  416d33:	jmp    0x415888
  416d38:	mov    r8,QWORD PTR [rsp+0x2c0]
  416d40:	lea    rdx,[rip+0x29531]        # 0x440278
  416d47:	mov    rcx,r14
  416d4a:	call   0x427d70
  416d4f:	jmp    0x4162c1
  416d54:	add    edi,0x1
  416d57:	jmp    0x4158d0
  416d5c:	lea    rdx,[rip+0x28a74]        # 0x43f7d7
  416d63:	mov    rcx,r14
  416d66:	call   0x427dc8
  416d6b:	jmp    0x416909
  416d70:	lea    rdx,[rip+0x28891]        # 0x43f608
  416d77:	mov    rcx,r14
  416d7a:	call   0x427dc8
  416d7f:	jmp    0x4166c7
  416d84:	lea    rdx,[rip+0x28815]        # 0x43f5a0
  416d8b:	mov    rcx,r14
  416d8e:	call   0x427dc8
  416d93:	jmp    0x4166a8
  416d98:	lea    rdx,[rip+0x28755]        # 0x43f4f4
  416d9f:	mov    rcx,r14
  416da2:	call   0x427dc8
  416da7:	jmp    0x41667a
  416dac:	lea    rdx,[rip+0x28331]        # 0x43f0e4
  416db3:	mov    rcx,r14
  416db6:	call   0x427dd8
  416dbb:	jmp    0x416558
  416dc0:	lea    rdx,[rip+0x282d9]        # 0x43f0a0
  416dc7:	mov    rcx,r14
  416dca:	call   0x427dc8
  416dcf:	jmp    0x416539
  416dd4:	lea    rdx,[rip+0x28125]        # 0x43ef00
  416ddb:	mov    rcx,r14
  416dde:	call   0x427dc8
  416de3:	jmp    0x41651a
  416de8:	lea    rdx,[rip+0x28d49]        # 0x43fb38
  416def:	mov    rcx,r14
  416df2:	call   0x427d70
  416df7:	jmp    0x415fa1
  416dfc:	xor    esi,esi
  416dfe:	mov    QWORD PTR [rsp+0x78],0x0
  416e07:	jmp    0x4159a1
  416e0c:	lea    rdx,[rip+0x28875]        # 0x43f688
  416e13:	mov    rcx,r14
  416e16:	call   0x427dc8
  416e1b:	jmp    0x4166f6
  416e20:	lea    r8,[rip+0x29573]        # 0x44039a
  416e27:	lea    rdx,[rip+0x29373]        # 0x4401a1
  416e2e:	mov    rcx,r14
  416e31:	mov    r9,rax
  416e34:	call   0x427d70
  416e39:	mov    rdx,QWORD PTR [rsp+0xe0]
  416e41:	mov    rcx,r15
  416e44:	call   0x4122c0
  416e49:	jmp    0x415981
  416e4e:	mov    r8d,DWORD PTR [rbx+0x8]
  416e52:	lea    rcx,[rip+0x294f2]        # 0x44034b
  416e59:	mov    edx,0xc
  416e5e:	xor    esi,esi
  416e60:	call   0x41c880
  416e65:	mov    r13d,eax
  416e68:	lea    eax,[r12-0x1]
  416e6d:	test   r12d,r12d
  416e70:	mov    DWORD PTR [rsp+0x44],eax
  416e74:	jle    0x416ed4
  416e76:	xor    r8d,r8d
  416e79:	test   esi,esi
  416e7b:	je     0x41731b
  416e81:	mov    edx,esi
  416e83:	mov    rcx,rdi
  416e86:	call   0x427e98
  416e8b:	lea    r9,[rip+0x272dd]        # 0x43e16f
  416e92:	lea    rdx,[rip+0x2930f]        # 0x4401a8
  416e99:	mov    QWORD PTR [rsp+0x20],rax
  416e9e:	mov    r8d,r13d
  416ea1:	mov    rcx,r14
  416ea4:	call   0x427d70
  416ea9:	cmp    DWORD PTR [rsp+0x44],esi
  416ead:	jle    0x416ebc
  416eaf:	mov    edx,0x2c
  416eb4:	mov    rcx,r14
  416eb7:	call   0x427dd0
  416ebc:	mov    rdx,QWORD PTR [rsp+0xe0]
  416ec4:	mov    rcx,r15
  416ec7:	add    esi,0x1
  416eca:	call   0x4122c0
  416ecf:	cmp    esi,r12d
  416ed2:	jne    0x416e76
  416ed4:	mov    rcx,rdi
  416ed7:	call   0x427f68
  416edc:	cmp    QWORD PTR [rsp+0xc8],0x0
  416ee5:	jne    0x416331
  416eeb:	jmp    0x416358
  416ef0:	lea    rdx,[rip+0x2872b]        # 0x43f622
  416ef7:	mov    rcx,r14
  416efa:	call   0x427dc8
  416eff:	jmp    0x4166d7
  416f04:	mov    rcx,QWORD PTR [rsp+0x58]
  416f09:	lea    rdx,[rip+0x27de5]        # 0x43ecf5
  416f10:	call   0x427d70
  416f15:	jmp    0x4159f2
  416f1a:	mov    rcx,QWORD PTR [rsp+0x58]
  416f1f:	lea    rdx,[rip+0x27e02]        # 0x43ed28
  416f26:	call   0x427d70
  416f2b:	jmp    0x4159f2
  416f30:	mov    rcx,QWORD PTR [rsp+0x58]
  416f35:	lea    rdx,[rip+0x27e3a]        # 0x43ed76
  416f3c:	call   0x427d70
  416f41:	jmp    0x4152e1
  416f46:	xor    r8d,r8d
  416f49:	xor    edx,edx
  416f4b:	mov    rcx,r12
  416f4e:	call   0x427e98
  416f53:	xor    edx,edx
  416f55:	mov    r8d,0x1
  416f5b:	mov    rcx,r12
  416f5e:	mov    QWORD PTR [rsp+0x80],rax
  416f66:	lea    rdi,[rip+0x2790b]        # 0x43e878
  416f6d:	call   0x427e98
  416f72:	xor    edx,edx
  416f74:	mov    r8d,0x2
  416f7a:	mov    rcx,r12
  416f7d:	mov    rsi,rax
  416f80:	call   0x427e98
  416f85:	xor    edx,edx
  416f87:	mov    r8d,0x3
  416f8d:	mov    rcx,r12
  416f90:	mov    QWORD PTR [rsp+0x88],rax
  416f98:	call   0x427e98
  416f9d:	xor    edx,edx
  416f9f:	mov    r8d,0x4
  416fa5:	mov    rcx,r12
  416fa8:	mov    QWORD PTR [rsp+0x90],rax
  416fb0:	call   0x427e98
  416fb5:	xor    edx,edx
  416fb7:	mov    r8d,0x5
  416fbd:	mov    rcx,r12
  416fc0:	mov    QWORD PTR [rsp+0x98],rax
  416fc8:	call   0x427e98
  416fcd:	xor    edx,edx
  416fcf:	mov    r8d,0x6
  416fd5:	mov    rcx,r12
  416fd8:	mov    QWORD PTR [rsp+0xa0],rax
  416fe0:	call   0x427e98
  416fe5:	xor    edx,edx
  416fe7:	mov    r8d,0x7
  416fed:	mov    rcx,r12
  416ff0:	mov    QWORD PTR [rsp+0xb8],rax
  416ff8:	call   0x427e98
  416ffd:	xor    edx,edx
  416fff:	mov    r8d,0x8
  417005:	mov    rcx,r12
  417008:	mov    QWORD PTR [rsp+0xc0],rax
  417010:	call   0x427e98
  417015:	xor    edx,edx
  417017:	mov    rcx,r12
  41701a:	mov    r8d,0x9
  417020:	mov    QWORD PTR [rsp+0xd8],rax
  417028:	call   0x427e98
  41702d:	mov    ecx,0x2
  417032:	mov    r13,rax
  417035:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417037:	je     0x4172dd
  41703d:	mov    rsi,QWORD PTR [rsp+0x80]
  417045:	lea    rdi,[rip+0x2782c]        # 0x43e878
  41704c:	mov    ecx,0x2
  417051:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417053:	jne    0x4172ce
  417059:	mov    rcx,QWORD PTR [rsp+0x38]
  41705e:	lea    rdx,[rip+0x281ac]        # 0x43f211
  417065:	call   0x427d70
  41706a:	mov    rdi,QWORD PTR [rsp+0x38]
  41706f:	mov    r8,QWORD PTR [rsp+0xc0]
  417077:	lea    rdx,[rip+0x2819c]        # 0x43f21a
  41707e:	mov    rcx,rdi
  417081:	call   0x427dd8
  417086:	mov    r9,QWORD PTR [rsp+0xd8]
  41708e:	mov    r8,QWORD PTR [rsp+0x2b0]
  417096:	lea    rdx,[rip+0x28182]        # 0x43f21f
  41709d:	mov    rcx,rdi
  4170a0:	call   0x427dd8
  4170a5:	cmp    BYTE PTR [r13+0x0],0x0
  4170aa:	jne    0x417255
  4170b0:	mov    rsi,QWORD PTR [rsp+0x88]
  4170b8:	lea    rdi,[rip+0x277b9]        # 0x43e878
  4170bf:	mov    ecx,0x2
  4170c4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170c6:	je     0x41723f
  4170cc:	mov    rsi,QWORD PTR [rsp+0x90]
  4170d4:	lea    rdi,[rip+0x2779d]        # 0x43e878
  4170db:	mov    ecx,0x2
  4170e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170e2:	jne    0x417229
  4170e8:	mov    rsi,QWORD PTR [rsp+0x98]
  4170f0:	lea    rdi,[rip+0x27781]        # 0x43e878
  4170f7:	mov    ecx,0x2
  4170fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170fe:	je     0x417213
  417104:	mov    rsi,QWORD PTR [rsp+0xa0]
  41710c:	lea    rdi,[rip+0x27765]        # 0x43e878
  417113:	mov    ecx,0x2
  417118:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41711a:	je     0x4172b8
  417120:	mov    rsi,QWORD PTR [rsp+0xb8]
  417128:	lea    rdi,[rip+0x27749]        # 0x43e878
  41712f:	mov    ecx,0x2
  417134:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417136:	je     0x4172a2
  41713c:	mov    rdx,QWORD PTR [rsp+0x120]
  417144:	mov    rcx,r15
  417147:	call   0x4122c0
  41714c:	mov    r8d,DWORD PTR [rsp+0xb4]
  417154:	mov    rcx,r15
  417157:	mov    r9d,0x1
  41715d:	mov    edx,0x69
  417162:	call   0x4148b0
  417167:	mov    rcx,r12
  41716a:	call   0x427f68
  41716f:	jmp    0x4157ce
  417174:	cmp    BYTE PTR [rsp+0xd3],0x64
  41717c:	jne    0x41639d
  417182:	jmp    0x4163ea
  417187:	xor    r8d,r8d
  41718a:	xor    edx,edx
  41718c:	mov    rcx,rdi
  41718f:	call   0x427e98
  417194:	lea    rdx,[rip+0x28f43]        # 0x4400de
  41719b:	mov    r8,rax
  41719e:	mov    rcx,r14
  4171a1:	call   0x427d70
  4171a6:	mov    rdx,QWORD PTR [rsp+0xe0]
  4171ae:	mov    rcx,r15
  4171b1:	call   0x4122c0
  4171b6:	mov    r8d,0x1
  4171bc:	xor    edx,edx
  4171be:	mov    rcx,rdi
  4171c1:	call   0x427e98
  4171c6:	test   rax,rax
  4171c9:	mov    r8,rax
  4171cc:	je     0x4171f2
  4171ce:	cmp    BYTE PTR [rax],0x0
  4171d1:	je     0x4171f2
  4171d3:	lea    rdx,[rip+0x28f0f]        # 0x4400e9
  4171da:	mov    rcx,r14
  4171dd:	call   0x427d70
  4171e2:	mov    rdx,QWORD PTR [rsp+0xe0]
  4171ea:	mov    rcx,r15
  4171ed:	call   0x4122c0
  4171f2:	mov    rcx,rdi
  4171f5:	call   0x427f68
  4171fa:	jmp    0x4161c4
  4171ff:	lea    rdx,[rip+0x285c0]        # 0x43f7c6
  417206:	mov    rcx,r14
  417209:	call   0x427dc8
  41720e:	jmp    0x4168a4
  417213:	mov    rcx,QWORD PTR [rsp+0x38]
  417218:	lea    rdx,[rip+0x28039]        # 0x43f258
  41721f:	call   0x427dc8
  417224:	jmp    0x417104
  417229:	mov    rcx,QWORD PTR [rsp+0x38]
  41722e:	lea    rdx,[rip+0x28019]        # 0x43f24e
  417235:	call   0x427dc8
  41723a:	jmp    0x4170e8
  41723f:	mov    rcx,QWORD PTR [rsp+0x38]
  417244:	lea    rdx,[rip+0x27ff7]        # 0x43f242
  41724b:	call   0x427dc8
  417250:	jmp    0x4170cc
  417255:	mov    rcx,QWORD PTR [rsp+0x38]
  41725a:	lea    rdx,[rip+0x27fd0]        # 0x43f231
  417261:	mov    r8,r13
  417264:	call   0x427dd8
  417269:	jmp    0x4170b0
  41726e:	xor    r8d,r8d
  417271:	xor    edx,edx
  417273:	mov    rcx,rdi
  417276:	call   0x427e98
  41727b:	lea    rdx,[rip+0x28211]        # 0x43f493
  417282:	mov    rcx,r14
  417285:	mov    r8,rax
  417288:	call   0x427d70
  41728d:	mov    rdx,QWORD PTR [rsp+0xe0]
  417295:	mov    rcx,r15
  417298:	call   0x4122c0
  41729d:	jmp    0x416b25
  4172a2:	mov    rcx,QWORD PTR [rsp+0x38]
  4172a7:	lea    rdx,[rip+0x27fcc]        # 0x43f27a
  4172ae:	call   0x427dd8
  4172b3:	jmp    0x41713c
  4172b8:	mov    rcx,QWORD PTR [rsp+0x38]
  4172bd:	lea    rdx,[rip+0x27fa1]        # 0x43f265
  4172c4:	call   0x427dc8
  4172c9:	jmp    0x417120
  4172ce:	mov    rcx,QWORD PTR [rsp+0x38]
  4172d3:	call   0x427d68
  4172d8:	jmp    0x41706a
  4172dd:	mov    rcx,QWORD PTR [rsp+0x38]
  4172e2:	lea    rdx,[rip+0x27f1a]        # 0x43f203
  4172e9:	call   0x427d70
  4172ee:	jmp    0x41706a
  4172f3:	xor    edx,edx
  4172f5:	mov    rcx,r12
  4172f8:	call   0x427e98
  4172fd:	lea    r8,[rip+0x28e94]        # 0x440198
  417304:	lea    rdx,[rip+0x28e96]        # 0x4401a1
  41730b:	mov    r9,rax
  41730e:	mov    rcx,r14
  417311:	call   0x427d70
  417316:	jmp    0x416263
  41731b:	xor    edx,edx
  41731d:	mov    rcx,rdi
  417320:	call   0x427e98
  417325:	lea    r8,[rip+0x2901f]        # 0x44034b
  41732c:	lea    rdx,[rip+0x28e6e]        # 0x4401a1
  417333:	mov    r9,rax
  417336:	mov    rcx,r14
  417339:	call   0x427d70
  41733e:	jmp    0x416ea9
  417343:	mov    edi,eax
  417345:	jmp    0x415a65
  41734a:	nop    WORD PTR [rax+rax*1+0x0]
  417350:	push   r14
  417352:	push   r13
  417354:	push   r12
  417356:	push   rbp
  417357:	push   rdi
  417358:	push   rsi
  417359:	push   rbx
  41735a:	sub    rsp,0x110
  417361:	mov    rbp,QWORD PTR [rip+0x3d578]        # 0x4548e0
  417368:	lea    rbx,[rsp+0x50]
  41736d:	lea    r12,[rsp+0x70]
  417372:	mov    r13,rcx
  417375:	mov    ecx,0x13
  41737a:	mov    r14d,r8d
  41737d:	lea    rsi,[rbp+0x28]
  417381:	mov    rdi,r12
  417384:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417387:	mov    rcx,rbx
  41738a:	call   0x427da8
  41738f:	lea    rax,[rip+0x29110]        # 0x4404a6
  417396:	lea    r8,[rip+0x2909c]        # 0x440439
  41739d:	lea    r9,[rip+0x29090]        # 0x440434
  4173a4:	lea    rdx,[rip+0x29095]        # 0x440440
  4173ab:	mov    rcx,rbx
  4173ae:	mov    QWORD PTR [rsp+0x20],rax
  4173b3:	call   0x427d70
  4173b8:	mov    eax,DWORD PTR [rbp+0xe4]
  4173be:	lea    r8,[rip+0x290f2]        # 0x4404b7
  4173c5:	cmp    eax,0x13a0f
  4173ca:	jg     0x417504
  4173d0:	cmp    eax,0x13947
  4173d5:	jg     0x4174f0
  4173db:	lea    rdx,[rip+0x292ae]        # 0x440690
  4173e2:	mov    rcx,rbx
  4173e5:	call   0x427dd8
  4173ea:	lea    r8,[rip+0x27a59]        # 0x43ee4a
  4173f1:	lea    rdx,[rip+0x292d8]        # 0x4406d0
  4173f8:	mov    rcx,rbx
  4173fb:	call   0x427dd8
  417400:	test   r14b,r14b
  417403:	jne    0x417419
  417405:	test   r13,r13
  417408:	jne    0x417419
  41740a:	lea    rdx,[rip+0x29367]        # 0x440778
  417411:	mov    rcx,rbx
  417414:	call   0x427dc8
  417419:	lea    rax,[rip+0x293b0]        # 0x4407d0
  417420:	mov    QWORD PTR [rsp+0x38],0x0
  417429:	mov    DWORD PTR [rsp+0x20],0x0
  417431:	mov    r9d,0x1
  417437:	mov    r8,r13
  41743a:	mov    rdx,rbx
  41743d:	mov    QWORD PTR [rsp+0x40],rax
  417442:	lea    rax,[rip+0x293b0]        # 0x4407f9
  417449:	mov    QWORD PTR [rsp+0x30],rax
  41744e:	lea    rax,[rip+0x293ae]        # 0x440803
  417455:	mov    QWORD PTR [rsp+0x28],rax
  41745a:	mov    rcx,QWORD PTR [rbp+0x0]
  41745e:	call   0x41e8f0
  417463:	lea    rdx,[rip+0x293a3]        # 0x44080d
  41746a:	mov    rcx,rbx
  41746d:	call   0x427dc8
  417472:	mov    rcx,QWORD PTR [rsp+0x50]
  417477:	xor    edx,edx
  417479:	call   0x4062b0
  41747e:	mov    rcx,rbx
  417481:	mov    rsi,rax
  417484:	call   0x427d60
  417489:	xor    eax,eax
  41748b:	test   rsi,rsi
  41748e:	je     0x4174d6
  417490:	mov    r9,QWORD PTR [rbp+0x108]
  417497:	mov    r8,QWORD PTR [rbp+0x10]
  41749b:	lea    rax,[rip+0x2937d]        # 0x44081f
  4174a2:	mov    rdx,r12
  4174a5:	mov    rcx,rsi
  4174a8:	mov    QWORD PTR [rsp+0xd0],0x0
  4174b4:	mov    QWORD PTR [rsp+0xe0],rax
  4174bc:	mov    BYTE PTR [rsp+0xf0],0x1
  4174c4:	call   0x4141a0
  4174c9:	mov    rcx,rsi
  4174cc:	call   0x427f68
  4174d1:	mov    eax,0x1
  4174d6:	add    rsp,0x110
  4174dd:	pop    rbx
  4174de:	pop    rsi
  4174df:	pop    rdi
  4174e0:	pop    rbp
  4174e1:	pop    r12
  4174e3:	pop    r13
  4174e5:	pop    r14
  4174e7:	ret    
  4174e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4174f0:	lea    rdx,[rip+0x29061]        # 0x440558
  4174f7:	mov    rcx,rbx
  4174fa:	call   0x427dd8
  4174ff:	jmp    0x4173ea
  417504:	lea    rdx,[rip+0x28fc5]        # 0x4404d0
  41750b:	mov    rcx,rbx
  41750e:	call   0x427dd8
  417513:	jmp    0x4173ea
  417518:	nop    DWORD PTR [rax+rax*1+0x0]
  417520:	push   r13
  417522:	push   r12
  417524:	push   rbp
  417525:	push   rdi
  417526:	push   rsi
  417527:	push   rbx
  417528:	sub    rsp,0x118
  41752f:	mov    rbx,QWORD PTR [rip+0x3d3aa]        # 0x4548e0
  417536:	lea    rbp,[rsp+0x70]
  41753b:	mov    r12,rcx
  41753e:	mov    r13d,edx
  417541:	mov    ecx,0x13
  417546:	mov    r9d,DWORD PTR [rbx+0xe4]
  41754d:	lea    rsi,[rbx+0x28]
  417551:	mov    rdi,rbp
  417554:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417557:	cmp    r9d,0x1387f
  41755e:	jle    0x417710
  417564:	lea    rsi,[rsp+0x50]
  417569:	mov    rcx,rsi
  41756c:	call   0x427da8
  417571:	cmp    DWORD PTR [rbx+0xe4],0x16057
  41757b:	lea    rax,[rip+0x29377]        # 0x4408f9
  417582:	lea    r9,[rip+0x292f1]        # 0x44087a
  417589:	lea    r8,[rip+0x28ea4]        # 0x440434
  417590:	mov    QWORD PTR [rsp+0x20],rax
  417595:	jg     0x417685
  41759b:	lea    rdx,[rip+0x29366]        # 0x440908
  4175a2:	mov    rcx,rsi
  4175a5:	call   0x427d70
  4175aa:	test   r13b,r13b
  4175ad:	jne    0x41769d
  4175b3:	lea    rdx,[rip+0x29416]        # 0x4409d0
  4175ba:	mov    rcx,rsi
  4175bd:	call   0x427dc8
  4175c2:	lea    rax,[rip+0x29427]        # 0x4409f0
  4175c9:	mov    QWORD PTR [rsp+0x40],0x0
  4175d2:	mov    QWORD PTR [rsp+0x38],0x0
  4175db:	mov    QWORD PTR [rsp+0x28],0x0
  4175e4:	mov    DWORD PTR [rsp+0x20],0x0
  4175ec:	xor    r9d,r9d
  4175ef:	mov    QWORD PTR [rsp+0x30],rax
  4175f4:	mov    rcx,QWORD PTR [rbx]
  4175f7:	mov    r8,r12
  4175fa:	mov    rdx,rsi
  4175fd:	call   0x41e8f0
  417602:	lea    rdx,[rip+0x293ef]        # 0x4409f8
  417609:	mov    rcx,rsi
  41760c:	call   0x427dc8
  417611:	mov    rcx,QWORD PTR [rsp+0x50]
  417616:	xor    edx,edx
  417618:	call   0x4062b0
  41761d:	mov    rcx,rsi
  417620:	mov    r12,rax
  417623:	call   0x427d60
  417628:	xor    eax,eax
  41762a:	test   r12,r12
  41762d:	je     0x417675
  41762f:	mov    r9,QWORD PTR [rbx+0x108]
  417636:	mov    r8,QWORD PTR [rbx+0x10]
  41763a:	lea    rax,[rip+0x293c3]        # 0x440a04
  417641:	mov    rdx,rbp
  417644:	mov    rcx,r12
  417647:	mov    QWORD PTR [rsp+0xd0],0x0
  417653:	mov    QWORD PTR [rsp+0xe0],rax
  41765b:	mov    BYTE PTR [rsp+0xf0],0x1
  417663:	call   0x4141a0
  417668:	mov    rcx,r12
  41766b:	call   0x427f68
  417670:	mov    eax,0x1
  417675:	add    rsp,0x118
  41767c:	pop    rbx
  41767d:	pop    rsi
  41767e:	pop    rdi
  41767f:	pop    rbp
  417680:	pop    r12
  417682:	pop    r13
  417684:	ret    
  417685:	lea    rdx,[rip+0x291f4]        # 0x440880
  41768c:	mov    rcx,rsi
  41768f:	call   0x427d70
  417694:	test   r13b,r13b
  417697:	je     0x4175b3
  41769d:	lea    rdx,[rip+0x292c2]        # 0x440966
  4176a4:	mov    rcx,rsi
  4176a7:	call   0x427dc8
  4176ac:	lea    rdx,[rip+0x292b8]        # 0x44096b
  4176b3:	mov    rcx,rsi
  4176b6:	call   0x414870
  4176bb:	mov    eax,DWORD PTR [rbx+0xe4]
  4176c1:	cmp    eax,0x15f8f
  4176c6:	jle    0x4176e4
  4176c8:	lea    r8,[rip+0x28ccb]        # 0x44039a
  4176cf:	lea    rdx,[rip+0x2929c]        # 0x440972
  4176d6:	mov    rcx,rsi
  4176d9:	call   0x427dd8
  4176de:	mov    eax,DWORD PTR [rbx+0xe4]
  4176e4:	cmp    eax,0x13947
  4176e9:	jle    0x4175b3
  4176ef:	lea    r8,[rip+0x27754]        # 0x43ee4a
  4176f6:	lea    rdx,[rip+0x29293]        # 0x440990
  4176fd:	mov    rcx,rsi
  417700:	call   0x427dd8
  417705:	jmp    0x4175b3
  41770a:	nop    WORD PTR [rax+rax*1+0x0]
  417710:	mov    eax,r9d
  417713:	mov    ecx,0x51eb851f
  417718:	mov    r10d,r9d
  41771b:	imul   ecx
  41771d:	sar    r10d,0x1f
  417721:	sar    edx,0x5
  417724:	mov    r8d,edx
  417727:	sub    r8d,r10d
  41772a:	mov    eax,r8d
  41772d:	imul   ecx
  41772f:	mov    eax,r8d
  417732:	sar    eax,0x1f
  417735:	sar    edx,0x5
  417738:	mov    ecx,edx
  41773a:	mov    edx,0x68db8bad
  41773f:	sub    ecx,eax
  417741:	mov    eax,r9d
  417744:	imul   edx
  417746:	imul   ecx,ecx,0x64
  417749:	sar    edx,0xc
  41774c:	sub    r8d,ecx
  41774f:	lea    rcx,[rip+0x290ea]        # 0x440840
  417756:	sub    edx,r10d
  417759:	call   0x405d90
  41775e:	mov    eax,0x1
  417763:	add    rsp,0x118
  41776a:	pop    rbx
  41776b:	pop    rsi
  41776c:	pop    rdi
  41776d:	pop    rbp
  41776e:	pop    r12
  417770:	pop    r13
  417772:	ret    
  417773:	nop    DWORD PTR [rax]
  417776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417780:	push   r15
  417782:	push   r14
  417784:	push   r13
  417786:	push   r12
  417788:	push   rbp
  417789:	push   rdi
  41778a:	push   rsi
  41778b:	push   rbx
  41778c:	sub    rsp,0x158
  417793:	mov    rbx,rcx
  417796:	mov    r13,rdx
  417799:	mov    edx,0x61
  41779e:	mov    DWORD PTR [rsp+0x88],r8d
  4177a6:	mov    DWORD PTR [rsp+0x8c],r9d
  4177ae:	lea    r15,[rsp+0xb0]
  4177b6:	call   0x42a428
  4177bb:	mov    edx,0x6e
  4177c0:	mov    rcx,rbx
  4177c3:	mov    QWORD PTR [rsp+0x78],rax
  4177c8:	call   0x42a428
  4177cd:	mov    edx,0x74
  4177d2:	mov    rcx,rbx
  4177d5:	mov    QWORD PTR [rsp+0x80],rax
  4177dd:	call   0x42a428
  4177e2:	mov    edx,0x77
  4177e7:	test   rax,rax
  4177ea:	mov    rcx,rbx
  4177ed:	setne  r14b
  4177f1:	mov    rdi,r15
  4177f4:	call   0x42a428
  4177f9:	mov    rbp,QWORD PTR [rip+0x3d0e0]        # 0x4548e0
  417800:	test   rax,rax
  417803:	mov    ecx,0x13
  417808:	setne  r12b
  41780c:	lea    rsi,[rbp+0x28]
  417810:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417813:	mov    rcx,rbx
  417816:	call   0x42a400
  41781b:	lea    rdx,[rip+0x291f6]        # 0x440a18
  417822:	mov    rsi,rax
  417825:	mov    rcx,rbx
  417828:	call   0x42a3e0
  41782d:	cmp    rsi,rax
  417830:	jne    0x417af0
  417836:	cmp    QWORD PTR [rsp+0x78],0x0
  41783c:	setne  sil
  417840:	cmp    QWORD PTR [rsp+0x80],0x0
  417849:	mov    eax,esi
  41784b:	setne  dil
  41784f:	test   r12b,r12b
  417852:	mov    edx,edi
  417854:	jne    0x417ad0
  41785a:	mov    ebx,esi
  41785c:	or     bl,r14b
  41785f:	jne    0x417da0
  417865:	test   dil,dil
  417868:	jne    0x417da0
  41786e:	cmp    DWORD PTR [rbp+0xe4],0x13a10
  417878:	mov    BYTE PTR [rsp+0x78],0x1
  41787d:	mov    r14d,0x1
  417883:	mov    edi,0x1
  417888:	mov    esi,0x1
  41788d:	setge  r12b
  417891:	lea    rbx,[rsp+0x90]
  417899:	mov    rcx,rbx
  41789c:	call   0x427da8
  4178a1:	lea    r9,[rip+0x28b8c]        # 0x440434
  4178a8:	lea    r8,[rip+0x28b8a]        # 0x440439
  4178af:	lea    rdx,[rip+0x291d2]        # 0x440a88
  4178b6:	mov    rcx,rbx
  4178b9:	call   0x427d70
  4178be:	mov    eax,DWORD PTR [rbp+0xe4]
  4178c4:	cmp    eax,0x13a0f
  4178c9:	jg     0x417c60
  4178cf:	cmp    eax,0x138e3
  4178d4:	lea    rax,[rip+0x2752e]        # 0x43ee09
  4178db:	lea    r9,[rip+0x28bd5]        # 0x4404b7
  4178e2:	lea    r8,[rip+0x28bbd]        # 0x4404a6
  4178e9:	mov    QWORD PTR [rsp+0x38],rax
  4178ee:	lea    rax,[rip+0x292d1]        # 0x440bc6
  4178f5:	mov    QWORD PTR [rsp+0x30],rax
  4178fa:	lea    rax,[rip+0x292cc]        # 0x440bcd
  417901:	mov    QWORD PTR [rsp+0x28],rax
  417906:	lea    rax,[rip+0x292cf]        # 0x440bdc
  41790d:	mov    QWORD PTR [rsp+0x20],rax
  417912:	jg     0x417b15
  417918:	lea    rdx,[rip+0x297b9]        # 0x4410d8
  41791f:	mov    rcx,rbx
  417922:	call   0x427dd8
  417927:	cmp    BYTE PTR [rsp+0x88],0x0
  41792f:	jne    0x417b32
  417935:	lea    rdx,[rip+0x29a6c]        # 0x4413a8
  41793c:	mov    rcx,rbx
  41793f:	call   0x427dc8
  417944:	cmp    BYTE PTR [rsp+0x78],0x0
  417949:	je     0x417be4
  41794f:	xor    r9d,r9d
  417952:	test   r12b,r14b
  417955:	jne    0x4179d0
  417957:	test   sil,sil
  41795a:	je     0x417cc0
  417960:	xor    r9d,r9d
  417963:	test   r14b,r14b
  417966:	jne    0x41798c
  417968:	lea    rdx,[rip+0x29ad7]        # 0x441446
  41796f:	mov    rcx,rbx
  417972:	call   0x427dc8
  417977:	lea    rdx,[rip+0x29aea]        # 0x441468
  41797e:	mov    rcx,rbx
  417981:	call   0x427dc8
  417986:	mov    r9d,0x1
  41798c:	test   r12b,r12b
  41798f:	jne    0x4179d0
  417991:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  41799b:	jle    0x4179d0
  41799d:	test   r9b,r9b
  4179a0:	jne    0x417d60
  4179a6:	lea    rdx,[rip+0x29a99]        # 0x441446
  4179ad:	mov    rcx,rbx
  4179b0:	call   0x427dc8
  4179b5:	lea    rdx,[rip+0x29ae6]        # 0x4414a2
  4179bc:	mov    rcx,rbx
  4179bf:	call   0x427dc8
  4179c4:	mov    r9d,0x1
  4179ca:	nop    WORD PTR [rax+rax*1+0x0]
  4179d0:	lea    rax,[rip+0x28df9]        # 0x4407d0
  4179d7:	mov    QWORD PTR [rsp+0x38],0x0
  4179e0:	mov    DWORD PTR [rsp+0x20],0x0
  4179e8:	mov    r8,r13
  4179eb:	mov    rdx,rbx
  4179ee:	mov    QWORD PTR [rsp+0x40],rax
  4179f3:	lea    rax,[rip+0x28dff]        # 0x4407f9
  4179fa:	mov    QWORD PTR [rsp+0x30],rax
  4179ff:	lea    rax,[rip+0x28dfd]        # 0x440803
  417a06:	mov    QWORD PTR [rsp+0x28],rax
  417a0b:	mov    rcx,QWORD PTR [rbp+0x0]
  417a0f:	call   0x41e8f0
  417a14:	test   r13,r13
  417a17:	jne    0x417a32
  417a19:	cmp    BYTE PTR [rsp+0x8c],0x0
  417a21:	jne    0x417a32
  417a23:	lea    rdx,[rip+0x28d4e]        # 0x440778
  417a2a:	mov    rcx,rbx
  417a2d:	call   0x427dc8
  417a32:	lea    rdx,[rip+0x28dd4]        # 0x44080d
  417a39:	mov    rcx,rbx
  417a3c:	call   0x427dc8
  417a41:	mov    rcx,QWORD PTR [rsp+0x90]
  417a49:	xor    edx,edx
  417a4b:	call   0x4062b0
  417a50:	mov    rcx,rbx
  417a53:	mov    rsi,rax
  417a56:	call   0x427d60
  417a5b:	xor    eax,eax
  417a5d:	test   rsi,rsi
  417a60:	je     0x417b01
  417a66:	lea    rax,[rip+0x29ac4]        # 0x441531
  417a6d:	mov    r9,QWORD PTR [rbp+0x108]
  417a74:	mov    r8,QWORD PTR [rbp+0x10]
  417a78:	mov    rdx,r15
  417a7b:	mov    rcx,rsi
  417a7e:	mov    QWORD PTR [rsp+0x110],0x0
  417a8a:	mov    QWORD PTR [rsp+0x120],rax
  417a92:	lea    rax,[rip+0x2ec2b]        # 0x4466c4
  417a99:	mov    BYTE PTR [rsp+0x130],0x1
  417aa1:	mov    DWORD PTR [rsp+0x140],0xb
  417aac:	mov    QWORD PTR [rsp+0x138],rax
  417ab4:	call   0x4141a0
  417ab9:	mov    rcx,rsi
  417abc:	call   0x427f68
  417ac1:	mov    eax,0x1
  417ac6:	jmp    0x417b01
  417ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ad0:	mov    ecx,DWORD PTR [rbp+0xe4]
  417ad6:	cmp    ecx,0x13a0f
  417adc:	jle    0x417d01
  417ae2:	mov    eax,edi
  417ae4:	and    eax,esi
  417ae6:	mov    BYTE PTR [rsp+0x78],al
  417aea:	jmp    0x417891
  417aef:	nop
  417af0:	lea    rcx,[rip+0x28f29]        # 0x440a20
  417af7:	call   0x405d90
  417afc:	mov    eax,0x1
  417b01:	add    rsp,0x158
  417b08:	pop    rbx
  417b09:	pop    rsi
  417b0a:	pop    rdi
  417b0b:	pop    rbp
  417b0c:	pop    r12
  417b0e:	pop    r13
  417b10:	pop    r14
  417b12:	pop    r15
  417b14:	ret    
  417b15:	lea    rdx,[rip+0x290c4]        # 0x440be0
  417b1c:	mov    rcx,rbx
  417b1f:	call   0x427dd8
  417b24:	cmp    BYTE PTR [rsp+0x88],0x0
  417b2c:	je     0x417935
  417b32:	lea    rax,[rip+0x27311]        # 0x43ee4a
  417b39:	lea    r9,[rip+0x296c3]        # 0x441203
  417b40:	lea    r8,[rip+0x296c4]        # 0x44120b
  417b47:	lea    rdx,[rip+0x296ca]        # 0x441218
  417b4e:	mov    rcx,rbx
  417b51:	mov    QWORD PTR [rsp+0x60],rax
  417b56:	lea    rax,[rip+0x29808]        # 0x441365
  417b5d:	mov    QWORD PTR [rsp+0x58],rax
  417b62:	lea    rax,[rip+0x29808]        # 0x441371
  417b69:	mov    QWORD PTR [rsp+0x50],rax
  417b6e:	lea    rax,[rip+0x28d05]        # 0x44087a
  417b75:	mov    QWORD PTR [rsp+0x48],rax
  417b7a:	lea    rax,[rip+0x297f9]        # 0x44137a
  417b81:	mov    QWORD PTR [rsp+0x40],rax
  417b86:	lea    rax,[rip+0x297f8]        # 0x441385
  417b8d:	mov    QWORD PTR [rsp+0x38],rax
  417b92:	lea    rax,[rip+0x297f5]        # 0x44138e
  417b99:	mov    QWORD PTR [rsp+0x30],rax
  417b9e:	lea    rax,[rip+0x297f0]        # 0x441395
  417ba5:	mov    QWORD PTR [rsp+0x28],rax
  417baa:	lea    rax,[rip+0x297ee]        # 0x44139f
  417bb1:	mov    QWORD PTR [rsp+0x20],rax
  417bb6:	call   0x427dd8
  417bbb:	lea    rdx,[rip+0x297e6]        # 0x4413a8
  417bc2:	mov    rcx,rbx
  417bc5:	call   0x427dc8
  417bca:	lea    rdx,[rip+0x29837]        # 0x441408
  417bd1:	mov    rcx,rbx
  417bd4:	call   0x427dc8
  417bd9:	cmp    BYTE PTR [rsp+0x78],0x0
  417bde:	jne    0x41794f
  417be4:	test   dil,dil
  417be7:	jne    0x417957
  417bed:	lea    rdx,[rip+0x298c1]        # 0x4414b5
  417bf4:	mov    rcx,rbx
  417bf7:	call   0x427dc8
  417bfc:	test   sil,sil
  417bff:	jne    0x417d74
  417c05:	test   r14b,r14b
  417c08:	je     0x417c30
  417c0a:	lea    rdx,[rip+0x298cf]        # 0x4414e0
  417c11:	mov    rcx,rbx
  417c14:	call   0x427dc8
  417c19:	test   r12b,r12b
  417c1c:	je     0x417c44
  417c1e:	lea    rdx,[rip+0x298ac]        # 0x4414d1
  417c25:	mov    rcx,rbx
  417c28:	call   0x427dc8
  417c2d:	jmp    0x417c35
  417c2f:	nop
  417c30:	test   r12b,r12b
  417c33:	je     0x417c44
  417c35:	lea    rdx,[rip+0x298dd]        # 0x441519
  417c3c:	mov    rcx,rbx
  417c3f:	call   0x427dc8
  417c44:	lea    rdx,[rip+0x298dd]        # 0x441528
  417c4b:	mov    rcx,rbx
  417c4e:	call   0x427dc8
  417c53:	mov    r9d,0x1
  417c59:	jmp    0x4179d0
  417c5e:	xchg   ax,ax
  417c60:	lea    rax,[rip+0x271a2]        # 0x43ee09
  417c67:	lea    r9,[rip+0x28849]        # 0x4404b7
  417c6e:	lea    r8,[rip+0x28831]        # 0x4404a6
  417c75:	lea    rdx,[rip+0x28e3c]        # 0x440ab8
  417c7c:	mov    rcx,rbx
  417c7f:	mov    QWORD PTR [rsp+0x40],rax
  417c84:	lea    rax,[rip+0x28f3b]        # 0x440bc6
  417c8b:	mov    QWORD PTR [rsp+0x38],rax
  417c90:	lea    rax,[rip+0x28f36]        # 0x440bcd
  417c97:	mov    QWORD PTR [rsp+0x30],rax
  417c9c:	lea    rax,[rip+0x28f32]        # 0x440bd5
  417ca3:	mov    QWORD PTR [rsp+0x28],rax
  417ca8:	lea    rax,[rip+0x28f2d]        # 0x440bdc
  417caf:	mov    QWORD PTR [rsp+0x20],rax
  417cb4:	call   0x427dd8
  417cb9:	jmp    0x417927
  417cbe:	xchg   ax,ax
  417cc0:	lea    rdx,[rip+0x2977f]        # 0x441446
  417cc7:	mov    rcx,rbx
  417cca:	call   0x427dc8
  417ccf:	lea    rdx,[rip+0x29777]        # 0x44144d
  417cd6:	mov    rcx,rbx
  417cd9:	call   0x427dc8
  417cde:	test   r14b,r14b
  417ce1:	mov    r9d,0x1
  417ce7:	jne    0x41798c
  417ced:	lea    rdx,[rip+0x29769]        # 0x44145d
  417cf4:	mov    rcx,rbx
  417cf7:	call   0x427dc8
  417cfc:	jmp    0x417977
  417d01:	mov    r9d,0x51eb851f
  417d07:	mov    eax,ecx
  417d09:	mov    r10d,ecx
  417d0c:	imul   r9d
  417d0f:	sar    r10d,0x1f
  417d13:	sar    edx,0x5
  417d16:	mov    r8d,edx
  417d19:	sub    r8d,r10d
  417d1c:	mov    eax,r8d
  417d1f:	imul   r9d
  417d22:	mov    eax,r8d
  417d25:	sar    eax,0x1f
  417d28:	sar    edx,0x5
  417d2b:	mov    r9d,edx
  417d2e:	mov    edx,0x68db8bad
  417d33:	sub    r9d,eax
  417d36:	mov    eax,ecx
  417d38:	lea    rcx,[rip+0x28d09]        # 0x440a48
  417d3f:	imul   edx
  417d41:	imul   r9d,r9d,0x64
  417d45:	sar    edx,0xc
  417d48:	sub    edx,r10d
  417d4b:	sub    r8d,r9d
  417d4e:	call   0x405d90
  417d53:	mov    eax,0x1
  417d58:	jmp    0x417b01
  417d5d:	nop    DWORD PTR [rax]
  417d60:	lea    rdx,[rip+0x296f6]        # 0x44145d
  417d67:	mov    rcx,rbx
  417d6a:	call   0x427dc8
  417d6f:	jmp    0x4179b5
  417d74:	lea    rdx,[rip+0x2974a]        # 0x4414c5
  417d7b:	mov    rcx,rbx
  417d7e:	call   0x427dc8
  417d83:	test   r14b,r14b
  417d86:	je     0x417c19
  417d8c:	lea    rdx,[rip+0x2973e]        # 0x4414d1
  417d93:	mov    rcx,rbx
  417d96:	call   0x427dc8
  417d9b:	jmp    0x417c0a
  417da0:	and    edx,eax
  417da2:	mov    BYTE PTR [rsp+0x78],dl
  417da6:	jmp    0x417891
  417dab:	nop    DWORD PTR [rax+rax*1+0x0]
  417db0:	push   r15
  417db2:	push   r14
  417db4:	push   r13
  417db6:	push   r12
  417db8:	push   rbp
  417db9:	push   rdi
  417dba:	push   rsi
  417dbb:	push   rbx
  417dbc:	sub    rsp,0x118
  417dc3:	mov    rbp,QWORD PTR [rip+0x3cb16]        # 0x4548e0
  417dca:	lea    rbx,[rsp+0x50]
  417dcf:	lea    r12,[rsp+0x70]
  417dd4:	mov    r13,rcx
  417dd7:	mov    ecx,0x13
  417ddc:	mov    r15d,edx
  417ddf:	mov    r14d,r8d
  417de2:	lea    rsi,[rbp+0x28]
  417de6:	mov    rdi,r12
  417de9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417dec:	mov    rcx,rbx
  417def:	call   0x427da8
  417df4:	lea    r9,[rip+0x28639]        # 0x440434
  417dfb:	lea    r8,[rip+0x28637]        # 0x440439
  417e02:	lea    rdx,[rip+0x2973f]        # 0x441548
  417e09:	mov    rcx,rbx
  417e0c:	call   0x427d70
  417e11:	test   r15b,r15b
  417e14:	jne    0x417f90
  417e1a:	lea    r8,[rip+0x27029]        # 0x43ee4a
  417e21:	lea    rdx,[rip+0x29960]        # 0x441788
  417e28:	mov    rcx,rbx
  417e2b:	call   0x427dd8
  417e30:	lea    rdx,[rip+0x29989]        # 0x4417c0
  417e37:	mov    rcx,rbx
  417e3a:	call   0x427dc8
  417e3f:	lea    rdx,[rip+0x299d8]        # 0x44181e
  417e46:	mov    rcx,rbx
  417e49:	call   0x427dc8
  417e4e:	lea    rdx,[rip+0x299e3]        # 0x441838
  417e55:	mov    rcx,rbx
  417e58:	call   0x427dc8
  417e5d:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  417e67:	jle    0x417f60
  417e6d:	lea    rdx,[rip+0x29a1c]        # 0x441890
  417e74:	mov    rcx,rbx
  417e77:	call   0x427dc8
  417e7c:	test   r14b,r14b
  417e7f:	jne    0x417e8a
  417e81:	test   r13,r13
  417e84:	je     0x417f74
  417e8a:	lea    rax,[rip+0x29a87]        # 0x441918
  417e91:	mov    DWORD PTR [rsp+0x20],0x0
  417e99:	mov    r9d,0x1
  417e9f:	mov    r8,r13
  417ea2:	mov    rdx,rbx
  417ea5:	mov    QWORD PTR [rsp+0x40],rax
  417eaa:	lea    rax,[rip+0x29a8f]        # 0x441940
  417eb1:	mov    QWORD PTR [rsp+0x38],rax
  417eb6:	lea    rax,[rip+0x29aa7]        # 0x441964
  417ebd:	mov    QWORD PTR [rsp+0x30],rax
  417ec2:	lea    rax,[rip+0x2893a]        # 0x440803
  417ec9:	mov    QWORD PTR [rsp+0x28],rax
  417ece:	mov    rcx,QWORD PTR [rbp+0x0]
  417ed2:	call   0x41e8f0
  417ed7:	lea    rdx,[rip+0x29a90]        # 0x44196e
  417ede:	mov    rcx,rbx
  417ee1:	call   0x427dc8
  417ee6:	mov    rcx,QWORD PTR [rsp+0x50]
  417eeb:	xor    edx,edx
  417eed:	call   0x4062b0
  417ef2:	mov    rcx,rbx
  417ef5:	mov    rsi,rax
  417ef8:	call   0x427d60
  417efd:	xor    eax,eax
  417eff:	test   rsi,rsi
  417f02:	je     0x417f4a
  417f04:	mov    r9,QWORD PTR [rbp+0x108]
  417f0b:	mov    r8,QWORD PTR [rbp+0x10]
  417f0f:	lea    rax,[rip+0x29a67]        # 0x44197d
  417f16:	mov    rdx,r12
  417f19:	mov    rcx,rsi
  417f1c:	mov    QWORD PTR [rsp+0xd0],0x0
  417f28:	mov    QWORD PTR [rsp+0xe0],rax
  417f30:	mov    BYTE PTR [rsp+0xf0],0x1
  417f38:	call   0x4141a0
  417f3d:	mov    rcx,rsi
  417f40:	call   0x427f68
  417f45:	mov    eax,0x1
  417f4a:	add    rsp,0x118
  417f51:	pop    rbx
  417f52:	pop    rsi
  417f53:	pop    rdi
  417f54:	pop    rbp
  417f55:	pop    r12
  417f57:	pop    r13
  417f59:	pop    r14
  417f5b:	pop    r15
  417f5d:	ret    
  417f5e:	xchg   ax,ax
  417f60:	lea    rdx,[rip+0x29991]        # 0x4418f8
  417f67:	mov    rcx,rbx
  417f6a:	call   0x427dc8
  417f6f:	jmp    0x417e7c
  417f74:	lea    rdx,[rip+0x287fd]        # 0x440778
  417f7b:	mov    rcx,rbx
  417f7e:	call   0x427dc8
  417f83:	jmp    0x417e8a
  417f88:	nop    DWORD PTR [rax+rax*1+0x0]
  417f90:	lea    r9,[rip+0x295fb]        # 0x441592
  417f97:	lea    r8,[rip+0x295f9]        # 0x441597
  417f9e:	lea    rdx,[rip+0x29603]        # 0x4415a8
  417fa5:	mov    rcx,rbx
  417fa8:	call   0x427dd8
  417fad:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  417fb7:	jle    0x417e1a
  417fbd:	lea    rdx,[rip+0x296bc]        # 0x441680
  417fc4:	mov    rcx,rbx
  417fc7:	call   0x427dc8
  417fcc:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  417fd6:	jle    0x418030
  417fd8:	lea    rdx,[rip+0x29731]        # 0x441710
  417fdf:	mov    rcx,rbx
  417fe2:	call   0x427dc8
  417fe7:	lea    r8,[rip+0x29760]        # 0x44174e
  417fee:	lea    rdx,[rip+0x29763]        # 0x441758
  417ff5:	mov    rcx,rbx
  417ff8:	call   0x427dd8
  417ffd:	cmp    DWORD PTR [rbp+0xe4],0x16057
  418007:	jle    0x417e1a
  41800d:	lea    rdx,[rip+0x29767]        # 0x44177b
  418014:	mov    rcx,rbx
  418017:	call   0x414870
  41801c:	lea    rdx,[rip+0x28943]        # 0x440966
  418023:	mov    rcx,rbx
  418026:	call   0x427dc8
  41802b:	jmp    0x417e1a
  418030:	lea    rdx,[rip+0x296fd]        # 0x441734
  418037:	mov    rcx,rbx
  41803a:	call   0x427dc8
  41803f:	jmp    0x417fe7
  418041:	nop    DWORD PTR [rax+rax*1+0x0]
  418046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418050:	push   r15
  418052:	push   r14
  418054:	push   r13
  418056:	push   r12
  418058:	push   rbp
  418059:	push   rdi
  41805a:	push   rsi
  41805b:	push   rbx
  41805c:	sub    rsp,0x118
  418063:	mov    rbp,QWORD PTR [rip+0x3c876]        # 0x4548e0
  41806a:	lea    rbx,[rsp+0x50]
  41806f:	lea    r12,[rsp+0x70]
  418074:	mov    r13,rcx
  418077:	mov    ecx,0x13
  41807c:	mov    r15d,edx
  41807f:	mov    r14d,r8d
  418082:	lea    rsi,[rbp+0x28]
  418086:	mov    rdi,r12
  418089:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41808c:	mov    rcx,rbx
  41808f:	call   0x427da8
  418094:	lea    rax,[rip+0x29a17]        # 0x441ab2
  41809b:	lea    r9,[rip+0x28392]        # 0x440434
  4180a2:	lea    r8,[rip+0x28390]        # 0x440439
  4180a9:	lea    rdx,[rip+0x298e0]        # 0x441990
  4180b0:	mov    rcx,rbx
  4180b3:	mov    QWORD PTR [rsp+0x30],rax
  4180b8:	lea    rax,[rip+0x299ff]        # 0x441abe
  4180bf:	mov    QWORD PTR [rsp+0x28],rax
  4180c4:	lea    rax,[rip+0x29a02]        # 0x441acd
  4180cb:	mov    QWORD PTR [rsp+0x20],rax
  4180d0:	call   0x427d70
  4180d5:	test   r15b,r15b
  4180d8:	jne    0x4181e0
  4180de:	lea    r8,[rip+0x26d65]        # 0x43ee4a
  4180e5:	lea    rdx,[rip+0x29a14]        # 0x441b00
  4180ec:	mov    rcx,rbx
  4180ef:	call   0x427dd8
  4180f4:	test   r14b,r14b
  4180f7:	sete   r9b
  4180fb:	test   r13,r13
  4180fe:	sete   al
  418101:	mov    esi,r9d
  418104:	and    sil,al
  418107:	jne    0x418200
  41810d:	lea    rax,[rip+0x29b24]        # 0x441c38
  418114:	mov    QWORD PTR [rsp+0x38],0x0
  41811d:	mov    DWORD PTR [rsp+0x20],0x1
  418125:	mov    r9d,esi
  418128:	mov    r8,r13
  41812b:	mov    rdx,rbx
  41812e:	mov    QWORD PTR [rsp+0x40],rax
  418133:	lea    rax,[rip+0x29b27]        # 0x441c61
  41813a:	and    r9d,0x1
  41813e:	mov    QWORD PTR [rsp+0x30],rax
  418143:	lea    rax,[rip+0x286b9]        # 0x440803
  41814a:	mov    QWORD PTR [rsp+0x28],rax
  41814f:	mov    rcx,QWORD PTR [rbp+0x0]
  418153:	call   0x41e8f0
  418158:	lea    rdx,[rip+0x29b0c]        # 0x441c6b
  41815f:	mov    rcx,rbx
  418162:	call   0x427dc8
  418167:	mov    rcx,QWORD PTR [rsp+0x50]
  41816c:	xor    edx,edx
  41816e:	call   0x4062b0
  418173:	mov    rcx,rbx
  418176:	mov    rsi,rax
  418179:	call   0x427d60
  41817e:	xor    eax,eax
  418180:	test   rsi,rsi
  418183:	je     0x4181cb
  418185:	mov    r9,QWORD PTR [rbp+0x108]
  41818c:	mov    r8,QWORD PTR [rbp+0x10]
  418190:	lea    rax,[rip+0x29ae9]        # 0x441c80
  418197:	mov    rdx,r12
  41819a:	mov    rcx,rsi
  41819d:	mov    QWORD PTR [rsp+0xd0],0x0
  4181a9:	mov    QWORD PTR [rsp+0xe0],rax
  4181b1:	mov    BYTE PTR [rsp+0xf0],0x1
  4181b9:	call   0x4141a0
  4181be:	mov    rcx,rsi
  4181c1:	call   0x427f68
  4181c6:	mov    eax,0x1
  4181cb:	add    rsp,0x118
  4181d2:	pop    rbx
  4181d3:	pop    rsi
  4181d4:	pop    rdi
  4181d5:	pop    rbp
  4181d6:	pop    r12
  4181d8:	pop    r13
  4181da:	pop    r14
  4181dc:	pop    r15
  4181de:	ret    
  4181df:	nop
  4181e0:	lea    r8,[rip+0x298f4]        # 0x441adb
  4181e7:	lea    rdx,[rip+0x298f6]        # 0x441ae4
  4181ee:	mov    rcx,rbx
  4181f1:	call   0x427dd8
  4181f6:	jmp    0x4180de
  4181fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418200:	lea    rdx,[rip+0x299e1]        # 0x441be8
  418207:	mov    rcx,rbx
  41820a:	call   0x427dc8
  41820f:	jmp    0x41810d
  418214:	xchg   ax,ax
  418216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418220:	push   r14
  418222:	push   r13
  418224:	push   r12
  418226:	push   rbp
  418227:	push   rdi
  418228:	push   rsi
  418229:	push   rbx
  41822a:	sub    rsp,0x110
  418231:	mov    rbp,QWORD PTR [rip+0x3c6a8]        # 0x4548e0
  418238:	lea    rbx,[rsp+0x50]
  41823d:	lea    r12,[rsp+0x70]
  418242:	mov    r13,rcx
  418245:	mov    ecx,0x13
  41824a:	mov    r14d,edx
  41824d:	lea    rsi,[rbp+0x28]
  418251:	mov    rdi,r12
  418254:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418257:	mov    rcx,rbx
  41825a:	call   0x427da8
  41825f:	lea    rax,[rip+0x29abd]        # 0x441d23
  418266:	lea    r9,[rip+0x2860d]        # 0x44087a
  41826d:	lea    r8,[rip+0x281c0]        # 0x440434
  418274:	lea    rdx,[rip+0x29a1d]        # 0x441c98
  41827b:	mov    rcx,rbx
  41827e:	mov    QWORD PTR [rsp+0x20],rax
  418283:	call   0x427d70
  418288:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  418292:	jg     0x4183e0
  418298:	lea    rdx,[rip+0x29ada]        # 0x441d79
  41829f:	mov    rcx,rbx
  4182a2:	call   0x427dc8
  4182a7:	lea    rdx,[rip+0x29ad3]        # 0x441d81
  4182ae:	mov    rcx,rbx
  4182b1:	call   0x414870
  4182b6:	test   r14b,r14b
  4182b9:	je     0x418303
  4182bb:	mov    eax,DWORD PTR [rbp+0xe4]
  4182c1:	cmp    eax,0x13947
  4182c6:	jg     0x418402
  4182cc:	cmp    eax,0x1387f
  4182d1:	jg     0x418428
  4182d7:	lea    rdx,[rip+0x29c52]        # 0x441f30
  4182de:	mov    rcx,rbx
  4182e1:	call   0x427dc8
  4182e6:	cmp    DWORD PTR [rbp+0xe4],0x1387f
  4182f0:	jle    0x418312
  4182f2:	lea    rdx,[rip+0x29bd7]        # 0x441ed0
  4182f9:	mov    rcx,rbx
  4182fc:	call   0x427dc8
  418301:	jmp    0x418312
  418303:	lea    rdx,[rip+0x29c26]        # 0x441f30
  41830a:	mov    rcx,rbx
  41830d:	call   0x427dc8
  418312:	test   r13,r13
  418315:	je     0x418358
  418317:	lea    rax,[rip+0x29bf0]        # 0x441f0e
  41831e:	mov    QWORD PTR [rsp+0x40],0x0
  418327:	mov    QWORD PTR [rsp+0x38],0x0
  418330:	mov    QWORD PTR [rsp+0x28],0x0
  418339:	mov    DWORD PTR [rsp+0x20],0x0
  418341:	xor    r9d,r9d
  418344:	mov    QWORD PTR [rsp+0x30],rax
  418349:	mov    rcx,QWORD PTR [rbp+0x0]
  41834d:	mov    r8,r13
  418350:	mov    rdx,rbx
  418353:	call   0x41e8f0
  418358:	lea    rdx,[rip+0x28699]        # 0x4409f8
  41835f:	mov    rcx,rbx
  418362:	call   0x427dc8
  418367:	mov    rcx,QWORD PTR [rsp+0x50]
  41836c:	xor    edx,edx
  41836e:	call   0x4062b0
  418373:	mov    rcx,rbx
  418376:	mov    rsi,rax
  418379:	call   0x427d60
  41837e:	xor    eax,eax
  418380:	test   rsi,rsi
  418383:	je     0x4183cb
  418385:	mov    r9,QWORD PTR [rbp+0x108]
  41838c:	mov    r8,QWORD PTR [rbp+0x10]
  418390:	lea    rax,[rip+0x29b81]        # 0x441f18
  418397:	mov    rdx,r12
  41839a:	mov    rcx,rsi
  41839d:	mov    QWORD PTR [rsp+0xd0],0x0
  4183a9:	mov    QWORD PTR [rsp+0xe0],rax
  4183b1:	mov    BYTE PTR [rsp+0xf0],0x1
  4183b9:	call   0x4141a0
  4183be:	mov    rcx,rsi
  4183c1:	call   0x427f68
  4183c6:	mov    eax,0x1
  4183cb:	add    rsp,0x110
  4183d2:	pop    rbx
  4183d3:	pop    rsi
  4183d4:	pop    rdi
  4183d5:	pop    rbp
  4183d6:	pop    r12
  4183d8:	pop    r13
  4183da:	pop    r14
  4183dc:	ret    
  4183dd:	nop    DWORD PTR [rax]
  4183e0:	lea    r9,[rip+0x29945]        # 0x441d2c
  4183e7:	lea    r8,[rip+0x29944]        # 0x441d32
  4183ee:	lea    rdx,[rip+0x2994b]        # 0x441d40
  4183f5:	mov    rcx,rbx
  4183f8:	call   0x427dd8
  4183fd:	jmp    0x418298
  418402:	lea    r8,[rip+0x29189]        # 0x441592
  418409:	lea    rdx,[rip+0x29980]        # 0x441d90
  418410:	mov    rcx,rbx
  418413:	call   0x427dd8
  418418:	cmp    DWORD PTR [rbp+0xe4],0x1387f
  418422:	jle    0x4182d7
  418428:	lea    r8,[rip+0x29a2f]        # 0x441e5e
  41842f:	lea    rdx,[rip+0x29a33]        # 0x441e69
  418436:	mov    rcx,rbx
  418439:	call   0x427dd8
  41843e:	cmp    DWORD PTR [rbp+0xe4],0x13947
  418448:	jle    0x4182d7
  41844e:	lea    r8,[rip+0x269f5]        # 0x43ee4a
  418455:	lea    rdx,[rip+0x29a2c]        # 0x441e88
  41845c:	mov    rcx,rbx
  41845f:	call   0x427dd8
  418464:	jmp    0x4182d7
  418469:	nop    DWORD PTR [rax+0x0]
  418470:	push   r13
  418472:	push   r12
  418474:	push   rbp
  418475:	push   rdi
  418476:	push   rsi
  418477:	push   rbx
  418478:	sub    rsp,0x118
  41847f:	mov    rbp,QWORD PTR [rip+0x3c45a]        # 0x4548e0
  418486:	lea    rbx,[rsp+0x50]
  41848b:	lea    r12,[rsp+0x70]
  418490:	mov    r13,rcx
  418493:	mov    ecx,0x13
  418498:	lea    rsi,[rbp+0x28]
  41849c:	mov    rdi,r12
  41849f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4184a2:	mov    rcx,rbx
  4184a5:	call   0x427da8
  4184aa:	lea    rax,[rip+0x26958]        # 0x43ee09
  4184b1:	lea    r9,[rip+0x27f7c]        # 0x440434
  4184b8:	lea    r8,[rip+0x27f7a]        # 0x440439
  4184bf:	lea    rdx,[rip+0x29a8a]        # 0x441f50
  4184c6:	mov    rcx,rbx
  4184c9:	mov    QWORD PTR [rsp+0x48],rax
  4184ce:	lea    rax,[rip+0x29b2a]        # 0x441fff
  4184d5:	mov    QWORD PTR [rsp+0x40],rax
  4184da:	lea    rax,[rip+0x29b2c]        # 0x44200d
  4184e1:	mov    QWORD PTR [rsp+0x38],rax
  4184e6:	lea    rax,[rip+0x29b29]        # 0x442016
  4184ed:	mov    QWORD PTR [rsp+0x30],rax
  4184f2:	lea    rax,[rip+0x29b2f]        # 0x442028
  4184f9:	mov    QWORD PTR [rsp+0x28],rax
  4184fe:	lea    rax,[rip+0x29b28]        # 0x44202d
  418505:	mov    QWORD PTR [rsp+0x20],rax
  41850a:	call   0x427d70
  41850f:	lea    rdx,[rip+0x29b1d]        # 0x442033
  418516:	mov    rcx,rbx
  418519:	call   0x414870
  41851e:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  418528:	jg     0x418633
  41852e:	lea    rdx,[rip+0x29c1b]        # 0x442150
  418535:	mov    rcx,rbx
  418538:	call   0x427dc8
  41853d:	lea    rax,[rip+0x29c9c]        # 0x4421e0
  418544:	mov    QWORD PTR [rsp+0x38],0x0
  41854d:	mov    DWORD PTR [rsp+0x20],0x0
  418555:	mov    r9d,0x1
  41855b:	mov    r8,r13
  41855e:	mov    rdx,rbx
  418561:	mov    QWORD PTR [rsp+0x40],rax
  418566:	lea    rax,[rip+0x29cb1]        # 0x44221e
  41856d:	mov    QWORD PTR [rsp+0x30],rax
  418572:	lea    rax,[rip+0x2828a]        # 0x440803
  418579:	mov    QWORD PTR [rsp+0x28],rax
  41857e:	mov    rcx,QWORD PTR [rbp+0x0]
  418582:	call   0x41e8f0
  418587:	lea    rdx,[rip+0x293e0]        # 0x44196e
  41858e:	mov    rcx,rbx
  418591:	call   0x427dc8
  418596:	mov    rcx,QWORD PTR [rsp+0x50]
  41859b:	xor    edx,edx
  41859d:	call   0x4062b0
  4185a2:	test   rax,rax
  4185a5:	mov    rsi,rax
  4185a8:	je     0x418650
  4185ae:	lea    rdx,[rip+0x25a0b]        # 0x43dfc0
  4185b5:	mov    rcx,rbx
  4185b8:	mov    QWORD PTR [rsp+0xd0],0x0
  4185c4:	call   0x427d70
  4185c9:	mov    rax,QWORD PTR [rsp+0x50]
  4185ce:	mov    r9,QWORD PTR [rbp+0x108]
  4185d5:	mov    rdx,r12
  4185d8:	mov    r8,QWORD PTR [rbp+0x10]
  4185dc:	mov    rcx,rsi
  4185df:	mov    BYTE PTR [rsp+0xf0],0x1
  4185e7:	mov    DWORD PTR [rsp+0x100],0x5
  4185f2:	mov    QWORD PTR [rsp+0xe0],rax
  4185fa:	lea    rax,[rip+0x2e0be]        # 0x4466bf
  418601:	mov    QWORD PTR [rsp+0xf8],rax
  418609:	call   0x4141a0
  41860e:	mov    rcx,rbx
  418611:	call   0x427d60
  418616:	mov    rcx,rsi
  418619:	call   0x427f68
  41861e:	mov    eax,0x1
  418623:	add    rsp,0x118
  41862a:	pop    rbx
  41862b:	pop    rsi
  41862c:	pop    rdi
  41862d:	pop    rbp
  41862e:	pop    r12
  418630:	pop    r13
  418632:	ret    
  418633:	lea    r8,[rip+0x29a02]        # 0x44203c
  41863a:	lea    rdx,[rip+0x29a17]        # 0x442058
  418641:	mov    rcx,rbx
  418644:	call   0x427dd8
  418649:	jmp    0x41852e
  41864e:	xchg   ax,ax
  418650:	mov    rcx,rbx
  418653:	call   0x427d60
  418658:	xor    eax,eax
  41865a:	add    rsp,0x118
  418661:	pop    rbx
  418662:	pop    rsi
  418663:	pop    rdi
  418664:	pop    rbp
  418665:	pop    r12
  418667:	pop    r13
  418669:	ret    
  41866a:	nop    WORD PTR [rax+rax*1+0x0]
  418670:	push   r13
  418672:	push   r12
  418674:	push   rbp
  418675:	push   rdi
  418676:	push   rsi
  418677:	push   rbx
  418678:	sub    rsp,0x138
  41867f:	mov    rbp,QWORD PTR [rip+0x3c25a]        # 0x4548e0
  418686:	lea    r12,[rsp+0x90]
  41868e:	mov    r13,rcx
  418691:	mov    ecx,0x13
  418696:	mov    r9d,DWORD PTR [rbp+0xe4]
  41869d:	lea    rsi,[rbp+0x28]
  4186a1:	mov    rdi,r12
  4186a4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4186a7:	cmp    r9d,0x15f8f
  4186ae:	jle    0x418850
  4186b4:	lea    rbx,[rsp+0x70]
  4186b9:	mov    rcx,rbx
  4186bc:	call   0x427da8
  4186c1:	lea    rax,[rip+0x26741]        # 0x43ee09
  4186c8:	lea    r9,[rip+0x27d6a]        # 0x440439
  4186cf:	lea    r8,[rip+0x281a4]        # 0x44087a
  4186d6:	lea    rdx,[rip+0x29b9b]        # 0x442278
  4186dd:	mov    rcx,rbx
  4186e0:	mov    DWORD PTR [rsp+0x50],0x54
  4186e8:	mov    QWORD PTR [rsp+0x60],rax
  4186ed:	lea    rax,[rip+0x29c49]        # 0x44233d
  4186f4:	mov    DWORD PTR [rsp+0x40],0x66
  4186fc:	mov    DWORD PTR [rsp+0x30],0x53
  418704:	mov    DWORD PTR [rsp+0x20],0x72
  41870c:	mov    QWORD PTR [rsp+0x58],rax
  418711:	lea    rax,[rip+0x29c2a]        # 0x442342
  418718:	mov    QWORD PTR [rsp+0x48],rax
  41871d:	lea    rax,[rip+0x298e9]        # 0x44200d
  418724:	mov    QWORD PTR [rsp+0x38],rax
  418729:	lea    rax,[rip+0x298fd]        # 0x44202d
  418730:	mov    QWORD PTR [rsp+0x28],rax
  418735:	call   0x427d70
  41873a:	lea    rdx,[rip+0x29c0a]        # 0x44234b
  418741:	mov    rcx,rbx
  418744:	call   0x414870
  418749:	lea    rdx,[rip+0x29c08]        # 0x442358
  418750:	mov    rcx,rbx
  418753:	call   0x427dc8
  418758:	lea    rax,[rip+0x29c69]        # 0x4423c8
  41875f:	mov    QWORD PTR [rsp+0x40],0x0
  418768:	mov    QWORD PTR [rsp+0x28],0x0
  418771:	mov    DWORD PTR [rsp+0x20],0x0
  418779:	xor    r9d,r9d
  41877c:	mov    r8,r13
  41877f:	mov    QWORD PTR [rsp+0x38],rax
  418784:	lea    rax,[rip+0x28078]        # 0x440803
  41878b:	mov    rdx,rbx
  41878e:	mov    QWORD PTR [rsp+0x30],rax
  418793:	mov    rcx,QWORD PTR [rbp+0x0]
  418797:	call   0x41e8f0
  41879c:	lea    rdx,[rip+0x29c4e]        # 0x4423f1
  4187a3:	mov    rcx,rbx
  4187a6:	call   0x427dc8
  4187ab:	mov    rcx,QWORD PTR [rsp+0x70]
  4187b0:	xor    edx,edx
  4187b2:	call   0x4062b0
  4187b7:	test   rax,rax
  4187ba:	mov    rsi,rax
  4187bd:	je     0x4188b3
  4187c3:	lea    rdx,[rip+0x29c39]        # 0x442403
  4187ca:	mov    rcx,rbx
  4187cd:	mov    QWORD PTR [rsp+0xf0],0x0
  4187d9:	call   0x427d70
  4187de:	mov    rax,QWORD PTR [rsp+0x70]
  4187e3:	mov    r9,QWORD PTR [rbp+0x108]
  4187ea:	mov    rdx,r12
  4187ed:	mov    r8,QWORD PTR [rbp+0x10]
  4187f1:	mov    rcx,rsi
  4187f4:	mov    BYTE PTR [rsp+0x110],0x1
  4187fc:	mov    DWORD PTR [rsp+0x120],0x4
  418807:	mov    QWORD PTR [rsp+0x100],rax
  41880f:	lea    rax,[rip+0x2dea5]        # 0x4466bb
  418816:	mov    QWORD PTR [rsp+0x118],rax
  41881e:	call   0x4141a0
  418823:	mov    rcx,rbx
  418826:	call   0x427d60
  41882b:	mov    rcx,rsi
  41882e:	call   0x427f68
  418833:	mov    eax,0x1
  418838:	add    rsp,0x138
  41883f:	pop    rbx
  418840:	pop    rsi
  418841:	pop    rdi
  418842:	pop    rbp
  418843:	pop    r12
  418845:	pop    r13
  418847:	ret    
  418848:	nop    DWORD PTR [rax+rax*1+0x0]
  418850:	mov    eax,r9d
  418853:	mov    ecx,0x51eb851f
  418858:	mov    r10d,r9d
  41885b:	imul   ecx
  41885d:	sar    r10d,0x1f
  418861:	sar    edx,0x5
  418864:	mov    r8d,edx
  418867:	sub    r8d,r10d
  41886a:	mov    eax,r8d
  41886d:	imul   ecx
  41886f:	mov    eax,r8d
  418872:	sar    eax,0x1f
  418875:	sar    edx,0x5
  418878:	mov    ecx,edx
  41887a:	mov    edx,0x68db8bad
  41887f:	sub    ecx,eax
  418881:	mov    eax,r9d
  418884:	imul   edx
  418886:	imul   ecx,ecx,0x64
  418889:	sar    edx,0xc
  41888c:	sub    r8d,ecx
  41888f:	lea    rcx,[rip+0x29992]        # 0x442228
  418896:	sub    edx,r10d
  418899:	call   0x405d90
  41889e:	mov    eax,0x1
  4188a3:	add    rsp,0x138
  4188aa:	pop    rbx
  4188ab:	pop    rsi
  4188ac:	pop    rdi
  4188ad:	pop    rbp
  4188ae:	pop    r12
  4188b0:	pop    r13
  4188b2:	ret    
  4188b3:	mov    rcx,rbx
  4188b6:	call   0x427d60
  4188bb:	xor    eax,eax
  4188bd:	jmp    0x418838
  4188c2:	nop    DWORD PTR [rax+0x0]
  4188c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188d0:	push   r14
  4188d2:	push   r13
  4188d4:	push   r12
  4188d6:	push   rbp
  4188d7:	push   rdi
  4188d8:	push   rsi
  4188d9:	push   rbx
  4188da:	sub    rsp,0x110
  4188e1:	mov    rbp,QWORD PTR [rip+0x3bff8]        # 0x4548e0
  4188e8:	lea    rbx,[rsp+0x50]
  4188ed:	lea    r13,[rsp+0x70]
  4188f2:	mov    r12,rcx
  4188f5:	mov    ecx,0x13
  4188fa:	mov    r14d,edx
  4188fd:	lea    rsi,[rbp+0x28]
  418901:	mov    rdi,r13
  418904:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418907:	mov    rcx,rbx
  41890a:	call   0x427da8
  41890f:	lea    rax,[rip+0x26534]        # 0x43ee4a
  418916:	lea    r9,[rip+0x27b17]        # 0x440434
  41891d:	lea    r8,[rip+0x27b15]        # 0x440439
  418924:	lea    rdx,[rip+0x29af5]        # 0x442420
  41892b:	mov    rcx,rbx
  41892e:	mov    QWORD PTR [rsp+0x28],rax
  418933:	lea    rax,[rip+0x29b4c]        # 0x442486
  41893a:	mov    QWORD PTR [rsp+0x20],rax
  41893f:	call   0x427dd8
  418944:	lea    r8,[rip+0x29b42]        # 0x44248d
  41894b:	lea    rdx,[rip+0x29b46]        # 0x442498
  418952:	mov    rcx,rbx
  418955:	call   0x427dd8
  41895a:	test   r14b,r14b
  41895d:	sete   sil
  418961:	test   r12,r12
  418964:	sete   al
  418967:	and    sil,al
  41896a:	jne    0x418b35
  418970:	lea    rax,[rip+0x29c69]        # 0x4425e0
  418977:	mov    QWORD PTR [rsp+0x38],0x0
  418980:	mov    DWORD PTR [rsp+0x20],0x0
  418988:	xor    r9d,r9d
  41898b:	mov    r8,r12
  41898e:	mov    rdx,rbx
  418991:	mov    QWORD PTR [rsp+0x40],rax
  418996:	lea    rax,[rip+0x29c69]        # 0x442606
  41899d:	mov    QWORD PTR [rsp+0x30],rax
  4189a2:	lea    rax,[rip+0x27e5a]        # 0x440803
  4189a9:	mov    QWORD PTR [rsp+0x28],rax
  4189ae:	mov    rcx,QWORD PTR [rbp+0x0]
  4189b2:	call   0x41e8f0
  4189b7:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  4189c1:	jg     0x418d61
  4189c7:	lea    r8,[rip+0x29e11]        # 0x4427df
  4189ce:	lea    rdx,[rip+0x29e13]        # 0x4427e8
  4189d5:	mov    rcx,rbx
  4189d8:	xor    r14d,r14d
  4189db:	call   0x427dd8
  4189e0:	lea    rax,[rip+0x29bf9]        # 0x4425e0
  4189e7:	mov    QWORD PTR [rsp+0x38],0x0
  4189f0:	mov    DWORD PTR [rsp+0x20],0x0
  4189f8:	mov    r8,r12
  4189fb:	mov    rdx,rbx
  4189fe:	mov    r9d,0x1
  418a04:	mov    QWORD PTR [rsp+0x40],rax
  418a09:	lea    rax,[rip+0x29f3e]        # 0x44294e
  418a10:	mov    QWORD PTR [rsp+0x30],rax
  418a15:	lea    rax,[rip+0x27de7]        # 0x440803
  418a1c:	mov    QWORD PTR [rsp+0x28],rax
  418a21:	mov    rcx,QWORD PTR [rbp+0x0]
  418a25:	call   0x41e8f0
  418a2a:	lea    r8,[rip+0x2819c]        # 0x440bcd
  418a31:	lea    rdx,[rip+0x29f28]        # 0x442960
  418a38:	mov    rcx,rbx
  418a3b:	call   0x427dd8
  418a40:	lea    rax,[rip+0x29b99]        # 0x4425e0
  418a47:	mov    QWORD PTR [rsp+0x38],0x0
  418a50:	mov    DWORD PTR [rsp+0x20],0x0
  418a58:	mov    r9d,r14d
  418a5b:	mov    r8,r12
  418a5e:	mov    rdx,rbx
  418a61:	mov    QWORD PTR [rsp+0x40],rax
  418a66:	lea    rax,[rip+0x2a036]        # 0x442aa3
  418a6d:	mov    QWORD PTR [rsp+0x30],rax
  418a72:	lea    rax,[rip+0x27d8a]        # 0x440803
  418a79:	mov    QWORD PTR [rsp+0x28],rax
  418a7e:	mov    rcx,QWORD PTR [rbp+0x0]
  418a82:	call   0x41e8f0
  418a87:	lea    rdx,[rip+0x2a022]        # 0x442ab0
  418a8e:	mov    rcx,rbx
  418a91:	call   0x427dc8
  418a96:	lea    rdx,[rip+0x29954]        # 0x4423f1
  418a9d:	mov    rcx,rbx
  418aa0:	call   0x427dc8
  418aa5:	mov    rcx,QWORD PTR [rsp+0x50]
  418aaa:	xor    edx,edx
  418aac:	call   0x4062b0
  418ab1:	mov    rcx,rbx
  418ab4:	mov    rsi,rax
  418ab7:	call   0x427d60
  418abc:	xor    eax,eax
  418abe:	test   rsi,rsi
  418ac1:	je     0x418b23
  418ac3:	lea    rax,[rip+0x2a059]        # 0x442b23
  418aca:	mov    r9,QWORD PTR [rbp+0x108]
  418ad1:	mov    r8,QWORD PTR [rbp+0x10]
  418ad5:	mov    rdx,r13
  418ad8:	mov    rcx,rsi
  418adb:	mov    QWORD PTR [rsp+0xd0],0x0
  418ae7:	mov    QWORD PTR [rsp+0xe0],rax
  418aef:	lea    rax,[rip+0x2dbc1]        # 0x4466b7
  418af6:	mov    BYTE PTR [rsp+0xf0],0x1
  418afe:	mov    DWORD PTR [rsp+0x100],0x4
  418b09:	mov    QWORD PTR [rsp+0xf8],rax
  418b11:	call   0x4141a0
  418b16:	mov    rcx,rsi
  418b19:	call   0x427f68
  418b1e:	mov    eax,0x1
  418b23:	add    rsp,0x110
  418b2a:	pop    rbx
  418b2b:	pop    rsi
  418b2c:	pop    rdi
  418b2d:	pop    rbp
  418b2e:	pop    r12
  418b30:	pop    r13
  418b32:	pop    r14
  418b34:	ret    
  418b35:	lea    rdx,[rip+0x290ac]        # 0x441be8
  418b3c:	mov    rcx,rbx
  418b3f:	call   0x427dc8
  418b44:	lea    rax,[rip+0x29a95]        # 0x4425e0
  418b4b:	mov    QWORD PTR [rsp+0x38],0x0
  418b54:	mov    DWORD PTR [rsp+0x20],0x0
  418b5c:	xor    r8d,r8d
  418b5f:	mov    r9d,0x1
  418b65:	mov    rdx,rbx
  418b68:	mov    QWORD PTR [rsp+0x40],rax
  418b6d:	lea    rax,[rip+0x29a92]        # 0x442606
  418b74:	mov    QWORD PTR [rsp+0x30],rax
  418b79:	lea    rax,[rip+0x27c83]        # 0x440803
  418b80:	mov    QWORD PTR [rsp+0x28],rax
  418b85:	mov    rcx,QWORD PTR [rbp+0x0]
  418b89:	call   0x41e8f0
  418b8e:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  418b98:	jg     0x418c3d
  418b9e:	lea    r8,[rip+0x29c3a]        # 0x4427df
  418ba5:	lea    rdx,[rip+0x29c3c]        # 0x4427e8
  418bac:	mov    rcx,rbx
  418baf:	mov    r14d,0x1
  418bb5:	call   0x427dd8
  418bba:	lea    rdx,[rip+0x27bb7]        # 0x440778
  418bc1:	mov    rcx,rbx
  418bc4:	call   0x427dc8
  418bc9:	lea    rax,[rip+0x29a10]        # 0x4425e0
  418bd0:	mov    QWORD PTR [rsp+0x38],0x0
  418bd9:	mov    DWORD PTR [rsp+0x20],0x0
  418be1:	mov    r9d,0x1
  418be7:	xor    r8d,r8d
  418bea:	mov    rdx,rbx
  418bed:	mov    QWORD PTR [rsp+0x40],rax
  418bf2:	lea    rax,[rip+0x29d55]        # 0x44294e
  418bf9:	mov    QWORD PTR [rsp+0x30],rax
  418bfe:	lea    rax,[rip+0x27bfe]        # 0x440803
  418c05:	mov    QWORD PTR [rsp+0x28],rax
  418c0a:	mov    rcx,QWORD PTR [rbp+0x0]
  418c0e:	call   0x41e8f0
  418c13:	lea    r8,[rip+0x27fb3]        # 0x440bcd
  418c1a:	lea    rdx,[rip+0x29d3f]        # 0x442960
  418c21:	mov    rcx,rbx
  418c24:	call   0x427dd8
  418c29:	lea    rdx,[rip+0x28fb8]        # 0x441be8
  418c30:	mov    rcx,rbx
  418c33:	call   0x427dc8
  418c38:	jmp    0x418a40
  418c3d:	lea    r8,[rip+0x29ef3]        # 0x442b37
  418c44:	lea    rdx,[rip+0x29efd]        # 0x442b48
  418c4b:	mov    rcx,rbx
  418c4e:	mov    r14d,0x1
  418c54:	call   0x427dd8
  418c59:	lea    rdx,[rip+0x27b18]        # 0x440778
  418c60:	mov    rcx,rbx
  418c63:	call   0x427dc8
  418c68:	lea    rax,[rip+0x299a9]        # 0x442618
  418c6f:	mov    QWORD PTR [rsp+0x38],0x0
  418c78:	mov    DWORD PTR [rsp+0x20],0x0
  418c80:	mov    r9d,0x1
  418c86:	mov    r8,r12
  418c89:	mov    rdx,rbx
  418c8c:	mov    QWORD PTR [rsp+0x40],rax
  418c91:	lea    rax,[rip+0x299a8]        # 0x442640
  418c98:	mov    QWORD PTR [rsp+0x30],rax
  418c9d:	lea    rax,[rip+0x27b5f]        # 0x440803
  418ca4:	mov    QWORD PTR [rsp+0x28],rax
  418ca9:	mov    rcx,QWORD PTR [rbp+0x0]
  418cad:	call   0x41e8f0
  418cb2:	cmp    DWORD PTR [rbp+0xe4],0x16057
  418cbc:	jg     0x418ce2
  418cbe:	lea    r8,[rip+0x29b1a]        # 0x4427df
  418cc5:	lea    rdx,[rip+0x29b1c]        # 0x4427e8
  418ccc:	mov    rcx,rbx
  418ccf:	call   0x427dd8
  418cd4:	test   sil,sil
  418cd7:	je     0x4189e0
  418cdd:	jmp    0x418bba
  418ce2:	lea    r8,[rip+0x29961]        # 0x44264a
  418ce9:	lea    rdx,[rip+0x29970]        # 0x442660
  418cf0:	mov    rcx,rbx
  418cf3:	call   0x427dd8
  418cf8:	test   sil,sil
  418cfb:	jne    0x418d50
  418cfd:	lea    rax,[rip+0x29aa4]        # 0x4427a8
  418d04:	mov    QWORD PTR [rsp+0x38],0x0
  418d0d:	mov    DWORD PTR [rsp+0x20],0x0
  418d15:	mov    r9d,0x1
  418d1b:	mov    r8,r12
  418d1e:	mov    rdx,rbx
  418d21:	mov    QWORD PTR [rsp+0x40],rax
  418d26:	lea    rax,[rip+0x29aa6]        # 0x4427d3
  418d2d:	mov    QWORD PTR [rsp+0x30],rax
  418d32:	lea    rax,[rip+0x27aca]        # 0x440803
  418d39:	mov    QWORD PTR [rsp+0x28],rax
  418d3e:	mov    rcx,QWORD PTR [rbp+0x0]
  418d42:	call   0x41e8f0
  418d47:	jmp    0x418cbe
  418d4c:	nop    DWORD PTR [rax+0x0]
  418d50:	lea    rdx,[rip+0x27a21]        # 0x440778
  418d57:	mov    rcx,rbx
  418d5a:	call   0x427dc8
  418d5f:	jmp    0x418cfd
  418d61:	lea    r8,[rip+0x29dcf]        # 0x442b37
  418d68:	lea    rdx,[rip+0x29dd9]        # 0x442b48
  418d6f:	mov    rcx,rbx
  418d72:	xor    r14d,r14d
  418d75:	call   0x427dd8
  418d7a:	jmp    0x418c68
  418d7f:	nop
  418d80:	push   r13
  418d82:	push   r12
  418d84:	push   rbp
  418d85:	push   rdi
  418d86:	push   rsi
  418d87:	push   rbx
  418d88:	sub    rsp,0x88
  418d8f:	lea    rbx,[rsp+0x60]
  418d94:	mov    rdi,rcx
  418d97:	mov    esi,r8d
  418d9a:	movsx  ebp,dl
  418d9d:	mov    rcx,rbx
  418da0:	call   0x427da8
  418da5:	lea    rdx,[rip+0x29edc]        # 0x442c88
  418dac:	mov    rcx,rbx
  418daf:	call   0x427d70
  418db4:	test   sil,sil
  418db7:	sete   r9b
  418dbb:	test   rdi,rdi
  418dbe:	sete   al
  418dc1:	mov    esi,r9d
  418dc4:	and    sil,al
  418dc7:	jne    0x418f25
  418dcd:	lea    rax,[rip+0x2980c]        # 0x4425e0
  418dd4:	mov    r12,QWORD PTR [rip+0x3bb05]        # 0x4548e0
  418ddb:	mov    QWORD PTR [rsp+0x38],0x0
  418de4:	mov    DWORD PTR [rsp+0x20],0x0
  418dec:	mov    r9d,esi
  418def:	mov    r8,rdi
  418df2:	mov    QWORD PTR [rsp+0x40],rax
  418df7:	lea    rax,[rip+0x29420]        # 0x44221e
  418dfe:	and    r9d,0x1
  418e02:	mov    rdx,rbx
  418e05:	mov    QWORD PTR [rsp+0x30],rax
  418e0a:	lea    rax,[rip+0x279f2]        # 0x440803
  418e11:	mov    QWORD PTR [rsp+0x28],rax
  418e16:	mov    rcx,QWORD PTR [r12]
  418e1a:	call   0x41e8f0
  418e1f:	lea    rdx,[rip+0x29ee8]        # 0x442d0e
  418e26:	mov    rcx,rbx
  418e29:	call   0x427dc8
  418e2e:	mov    rcx,QWORD PTR [rsp+0x60]
  418e33:	xor    edx,edx
  418e35:	call   0x4062b0
  418e3a:	mov    rcx,rbx
  418e3d:	mov    rsi,rax
  418e40:	call   0x427d60
  418e45:	xor    eax,eax
  418e47:	test   rsi,rsi
  418e4a:	je     0x418ee1
  418e50:	mov    rcx,rsi
  418e53:	call   0x427e70
  418e58:	test   eax,eax
  418e5a:	je     0x418ef1
  418e60:	xor    ebx,ebx
  418e62:	mov    r12,QWORD PTR [rip+0x3b9a7]        # 0x454810
  418e69:	jmp    0x418ec8
  418e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  418e70:	xor    r8d,r8d
  418e73:	mov    edx,ebx
  418e75:	mov    rcx,rsi
  418e78:	call   0x427e98
  418e7d:	mov    r8d,0x1
  418e83:	mov    edx,ebx
  418e85:	mov    rcx,rsi
  418e88:	mov    r13,rax
  418e8b:	call   0x427e98
  418e90:	mov    r8d,0x2
  418e96:	mov    rdi,rax
  418e99:	mov    edx,ebx
  418e9b:	mov    rcx,rsi
  418e9e:	call   0x427e98
  418ea3:	mov    r9d,ebp
  418ea6:	mov    rdx,rax
  418ea9:	mov    r8,r13
  418eac:	mov    rcx,rdi
  418eaf:	call   0x4149c0
  418eb4:	test   al,al
  418eb6:	je     0x418f40
  418ebc:	movzx  eax,BYTE PTR [r12]
  418ec1:	test   al,al
  418ec3:	jne    0x418f0b
  418ec5:	add    ebx,0x1
  418ec8:	mov    rcx,rsi
  418ecb:	call   0x427e70
  418ed0:	cmp    ebx,eax
  418ed2:	jl     0x418e70
  418ed4:	mov    rcx,rsi
  418ed7:	call   0x427f68
  418edc:	mov    eax,0x1
  418ee1:	add    rsp,0x88
  418ee8:	pop    rbx
  418ee9:	pop    rsi
  418eea:	pop    rdi
  418eeb:	pop    rbp
  418eec:	pop    r12
  418eee:	pop    r13
  418ef0:	ret    
  418ef1:	cmp    BYTE PTR [r12+0x11a],0x0
  418efa:	jne    0x418f0b
  418efc:	lea    rcx,[rip+0x29e1d]        # 0x442d20
  418f03:	mov    rdx,rdi
  418f06:	call   0x405d90
  418f0b:	mov    rcx,rsi
  418f0e:	call   0x427f68
  418f13:	xor    eax,eax
  418f15:	add    rsp,0x88
  418f1c:	pop    rbx
  418f1d:	pop    rsi
  418f1e:	pop    rdi
  418f1f:	pop    rbp
  418f20:	pop    r12
  418f22:	pop    r13
  418f24:	ret    
  418f25:	lea    rdx,[rip+0x28cbc]        # 0x441be8
  418f2c:	mov    rcx,rbx
  418f2f:	call   0x427dc8
  418f34:	jmp    0x418dcd
  418f39:	nop    DWORD PTR [rax+0x0]
  418f40:	mov    rcx,rsi
  418f43:	mov    BYTE PTR [rsp+0x5f],al
  418f47:	call   0x427f68
  418f4c:	movzx  eax,BYTE PTR [rsp+0x5f]
  418f51:	add    rsp,0x88
  418f58:	pop    rbx
  418f59:	pop    rsi
  418f5a:	pop    rdi
  418f5b:	pop    rbp
  418f5c:	pop    r12
  418f5e:	pop    r13
  418f60:	ret    
  418f61:	nop    DWORD PTR [rax+rax*1+0x0]
  418f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f70:	push   r15
  418f72:	push   r14
  418f74:	push   r13
  418f76:	push   r12
  418f78:	push   rbp
  418f79:	push   rdi
  418f7a:	push   rsi
  418f7b:	push   rbx
  418f7c:	sub    rsp,0x168
  418f83:	mov    r15,QWORD PTR [rip+0x3b956]        # 0x4548e0
  418f8a:	lea    r14,[rsp+0x70]
  418f8f:	mov    rbx,rcx
  418f92:	mov    edi,edx
  418f94:	mov    BYTE PTR [rsp+0x5f],dl
  418f98:	mov    rax,QWORD PTR [r15+0x28]
  418f9c:	mov    rcx,r14
  418f9f:	mov    QWORD PTR [rsp+0x90],rax
  418fa7:	mov    rax,QWORD PTR [r15+0x30]
  418fab:	mov    QWORD PTR [rsp+0x98],rax
  418fb3:	mov    rax,QWORD PTR [r15+0x38]
  418fb7:	mov    BYTE PTR [rsp+0x9d],0x0
  418fbf:	mov    QWORD PTR [rsp+0xa0],rax
  418fc7:	mov    rax,QWORD PTR [r15+0x40]
  418fcb:	mov    QWORD PTR [rsp+0xa8],rax
  418fd3:	mov    rax,QWORD PTR [r15+0x48]
  418fd7:	mov    QWORD PTR [rsp+0xb0],rax
  418fdf:	mov    rax,QWORD PTR [r15+0x50]
  418fe3:	mov    QWORD PTR [rsp+0xb8],rax
  418feb:	mov    rax,QWORD PTR [r15+0x58]
  418fef:	mov    QWORD PTR [rsp+0xc0],rax
  418ff7:	mov    rax,QWORD PTR [r15+0x60]
  418ffb:	mov    QWORD PTR [rsp+0xc8],rax
  419003:	mov    rax,QWORD PTR [r15+0x68]
  419007:	mov    QWORD PTR [rsp+0xd0],rax
  41900f:	mov    rax,QWORD PTR [r15+0x70]
  419013:	mov    QWORD PTR [rsp+0xd8],rax
  41901b:	mov    rax,QWORD PTR [r15+0x78]
  41901f:	mov    QWORD PTR [rsp+0xe0],rax
  419027:	mov    rax,QWORD PTR [r15+0x80]
  41902e:	mov    QWORD PTR [rsp+0xe8],rax
  419036:	call   0x427da8
  41903b:	cmp    DWORD PTR [r15+0xe4],0x138e3
  419046:	jle    0x4190d0
  41904c:	lea    rdx,[rip+0x29d15]        # 0x442d68
  419053:	mov    rcx,r14
  419056:	call   0x427d70
  41905b:	test   dil,dil
  41905e:	jne    0x4195e5
  419064:	mov    eax,DWORD PTR [r15+0xe4]
  41906b:	mov    ebp,0x3
  419070:	cmp    eax,0x15ff3
  419075:	jg     0x419620
  41907b:	lea    rdx,[rip+0x29e65]        # 0x442ee7
  419082:	mov    rcx,r14
  419085:	call   0x427dc8
  41908a:	lea    rax,[rip+0x29e73]        # 0x442f04
  419091:	mov    QWORD PTR [rsp+0x40],0x0
  41909a:	mov    QWORD PTR [rsp+0x38],0x0
  4190a3:	mov    QWORD PTR [rsp+0x28],0x0
  4190ac:	mov    DWORD PTR [rsp+0x20],0x0
  4190b4:	xor    r9d,r9d
  4190b7:	mov    QWORD PTR [rsp+0x30],rax
  4190bc:	mov    rcx,QWORD PTR [r15]
  4190bf:	mov    r8,rbx
  4190c2:	mov    rdx,r14
  4190c5:	call   0x41e8f0
  4190ca:	jmp    0x419124
  4190cc:	nop    DWORD PTR [rax+0x0]
  4190d0:	lea    rdx,[rip+0x29e39]        # 0x442f10
  4190d7:	mov    rcx,r14
  4190da:	mov    ebp,0x3
  4190df:	call   0x427d70
  4190e4:	lea    rax,[rip+0x29f71]        # 0x44305c
  4190eb:	mov    QWORD PTR [rsp+0x40],0x0
  4190f4:	mov    QWORD PTR [rsp+0x38],0x0
  4190fd:	mov    QWORD PTR [rsp+0x28],0x0
  419106:	mov    DWORD PTR [rsp+0x20],0x0
  41910e:	xor    r9d,r9d
  419111:	mov    QWORD PTR [rsp+0x30],rax
  419116:	mov    rcx,QWORD PTR [r15]
  419119:	mov    r8,rbx
  41911c:	mov    rdx,r14
  41911f:	call   0x41e8f0
  419124:	lea    rdx,[rip+0x278cd]        # 0x4409f8
  41912b:	mov    rcx,r14
  41912e:	call   0x427dc8
  419133:	mov    rcx,QWORD PTR [rsp+0x70]
  419138:	xor    edx,edx
  41913a:	call   0x4062b0
  41913f:	mov    rbx,rax
  419142:	xor    eax,eax
  419144:	test   rbx,rbx
  419147:	je     0x419589
  41914d:	mov    rcx,rbx
  419150:	lea    r13,[rsp+0xf0]
  419158:	call   0x427e70
  41915d:	lea    ecx,[rax+0x1]
  419160:	mov    esi,eax
  419162:	mov    DWORD PTR [rsp+0x68],eax
  419166:	movsxd rcx,ecx
  419169:	shl    rcx,0x3
  41916d:	call   0x424840
  419172:	lea    rdx,[rsp+0x90]
  41917a:	lea    r8,[rip+0x29ee5]        # 0x443066
  419181:	mov    r9d,ebp
  419184:	mov    rcx,r13
  419187:	mov    DWORD PTR [rsp+0x20],esi
  41918b:	mov    QWORD PTR [rsp+0x60],rax
  419190:	call   0x412100
  419195:	lea    rdx,[rip+0x29ed8]        # 0x443074
  41919c:	mov    r9d,0x6c
  4191a2:	mov    r8d,0x1
  4191a8:	mov    rcx,r13
  4191ab:	call   0x4121a0
  4191b0:	lea    rdx,[rip+0x29ec7]        # 0x44307e
  4191b7:	mov    r9d,0x6c
  4191bd:	mov    r8d,0x1
  4191c3:	mov    rcx,r13
  4191c6:	call   0x4121a0
  4191cb:	lea    rdx,[rip+0x29eb7]        # 0x443089
  4191d2:	mov    r9d,0x6c
  4191d8:	mov    r8d,0x1
  4191de:	mov    rcx,r13
  4191e1:	call   0x4121a0
  4191e6:	test   dil,dil
  4191e9:	jne    0x4195b4
  4191ef:	mov    eax,DWORD PTR [rsp+0x68]
  4191f3:	test   eax,eax
  4191f5:	jle    0x419634
  4191fb:	xor    r12d,r12d
  4191fe:	jmp    0x4193e0
  419203:	mov    rcx,rbx
  419206:	mov    r8d,0x2
  41920c:	mov    edx,ebp
  41920e:	lea    rdi,[rip+0x25663]        # 0x43e878
  419215:	call   0x427e98
  41921a:	mov    ecx,0x2
  41921f:	mov    rsi,rax
  419222:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419224:	jne    0x419464
  41922a:	mov    rcx,rbx
  41922d:	mov    r8d,0x3
  419233:	mov    edx,ebp
  419235:	lea    rdi,[rip+0x2563c]        # 0x43e878
  41923c:	call   0x427e98
  419241:	mov    ecx,0x2
  419246:	mov    rsi,rax
  419249:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41924b:	je     0x419494
  419251:	mov    rcx,rbx
  419254:	mov    r8d,0x4
  41925a:	mov    edx,ebp
  41925c:	lea    rdi,[rip+0x25615]        # 0x43e878
  419263:	call   0x427e98
  419268:	mov    ecx,0x2
  41926d:	mov    rsi,rax
  419270:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419272:	je     0x419480
  419278:	mov    rcx,rbx
  41927b:	mov    r8d,0x5
  419281:	mov    edx,ebp
  419283:	lea    rdi,[rip+0x255ee]        # 0x43e878
  41928a:	call   0x427e98
  41928f:	mov    ecx,0x2
  419294:	mov    rsi,rax
  419297:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419299:	jne    0x419450
  41929f:	cmp    DWORD PTR [r15+0xe4],0x15ff3
  4192aa:	jle    0x4192d9
  4192ac:	cmp    BYTE PTR [rsp+0x5f],0x1
  4192b1:	mov    rcx,rbx
  4192b4:	mov    edx,ebp
  4192b6:	lea    rdi,[rip+0x255bb]        # 0x43e878
  4192bd:	sbb    r8d,r8d
  4192c0:	add    r8d,0xa
  4192c4:	call   0x427e98
  4192c9:	mov    ecx,0x2
  4192ce:	mov    rsi,rax
  4192d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4192d3:	je     0x4195a0
  4192d9:	mov    r8d,0x6
  4192df:	mov    edx,ebp
  4192e1:	mov    rcx,rbx
  4192e4:	call   0x427e98
  4192e9:	mov    rcx,rax
  4192ec:	call   0x42a558
  4192f1:	test   eax,eax
  4192f3:	js     0x419329
  4192f5:	cmp    QWORD PTR [rsp+0x78],0x0
  4192fb:	jne    0x4194c4
  419301:	test   eax,eax
  419303:	je     0x4194b0
  419309:	lea    rdx,[rip+0x29a45]        # 0x442d55
  419310:	lea    rdi,[rip+0x29a30]        # 0x442d47
  419317:	cmp    eax,0x1
  41931a:	mov    r8d,eax
  41931d:	mov    rcx,r14
  419320:	cmove  rdx,rdi
  419324:	call   0x427dd8
  419329:	mov    r8d,0x7
  41932f:	mov    edx,ebp
  419331:	mov    rcx,rbx
  419334:	call   0x427e98
  419339:	cmp    BYTE PTR [rax],0x0
  41933c:	je     0x419374
  41933e:	cmp    QWORD PTR [rsp+0x78],0x0
  419344:	jne    0x4194e0
  41934a:	lea    rdx,[rip+0x29d9b]        # 0x4430ec
  419351:	mov    rcx,r14
  419354:	call   0x427dc8
  419359:	mov    edx,ebp
  41935b:	mov    rcx,rbx
  41935e:	mov    r8d,0x7
  419364:	call   0x427e98
  419369:	mov    rcx,r14
  41936c:	mov    rdx,rax
  41936f:	call   0x427dc8
  419374:	mov    rcx,QWORD PTR [rsp+0x70]
  419379:	call   0x424900
  41937e:	mov    rsi,QWORD PTR [rsp+0x60]
  419383:	xor    r9d,r9d
  419386:	xor    r8d,r8d
  419389:	mov    rdx,rax
  41938c:	mov    rcx,r13
  41938f:	mov    QWORD PTR [rsi+r12*8],rax
  419393:	call   0x412220
  419398:	mov    r8d,0x8
  41939e:	mov    edx,ebp
  4193a0:	mov    rcx,rbx
  4193a3:	call   0x427e98
  4193a8:	xor    r9d,r9d
  4193ab:	xor    r8d,r8d
  4193ae:	mov    rdx,rax
  4193b1:	mov    rcx,r13
  4193b4:	call   0x412220
  4193b9:	cmp    BYTE PTR [rsp+0x5f],0x0
  4193be:	je     0x4193d1
  4193c0:	cmp    DWORD PTR [r15+0xe4],0x13947
  4193cb:	jg     0x4194f4
  4193d1:	add    r12,0x1
  4193d5:	cmp    DWORD PTR [rsp+0x68],r12d
  4193da:	jle    0x419524
  4193e0:	xor    r8d,r8d
  4193e3:	mov    edx,r12d
  4193e6:	mov    rcx,rbx
  4193e9:	call   0x427e98
  4193ee:	xor    r9d,r9d
  4193f1:	xor    r8d,r8d
  4193f4:	mov    rdx,rax
  4193f7:	mov    rcx,r13
  4193fa:	lea    rdi,[rip+0x25477]        # 0x43e878
  419401:	mov    ebp,r12d
  419404:	call   0x412220
  419409:	mov    rcx,r14
  41940c:	call   0x427d68
  419411:	mov    rcx,rbx
  419414:	mov    r8d,0x1
  41941a:	mov    edx,r12d
  41941d:	call   0x427e98
  419422:	mov    ecx,0x2
  419427:	mov    rsi,rax
  41942a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41942c:	jne    0x419203
  419432:	lea    rdx,[rip+0x29c5a]        # 0x443093
  419439:	mov    rcx,r14
  41943c:	call   0x414750
  419441:	jmp    0x419203
  419446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419450:	lea    rdx,[rip+0x29c6b]        # 0x4430c2
  419457:	mov    rcx,r14
  41945a:	call   0x414750
  41945f:	jmp    0x41929f
  419464:	lea    rdx,[rip+0x29c32]        # 0x44309d
  41946b:	mov    rcx,r14
  41946e:	call   0x414750
  419473:	jmp    0x41922a
  419478:	nop    DWORD PTR [rax+rax*1+0x0]
  419480:	lea    rdx,[rip+0x29c31]        # 0x4430b8
  419487:	mov    rcx,r14
  41948a:	call   0x414750
  41948f:	jmp    0x419278
  419494:	lea    rdx,[rip+0x29c11]        # 0x4430ac
  41949b:	mov    rcx,r14
  41949e:	call   0x414750
  4194a3:	jmp    0x419251
  4194a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4194b0:	lea    rdx,[rip+0x29c24]        # 0x4430db
  4194b7:	mov    rcx,r14
  4194ba:	call   0x427dc8
  4194bf:	jmp    0x419329
  4194c4:	mov    edx,0xa
  4194c9:	mov    rcx,r14
  4194cc:	mov    DWORD PTR [rsp+0x6c],eax
  4194d0:	call   0x427dd0
  4194d5:	mov    eax,DWORD PTR [rsp+0x6c]
  4194d9:	jmp    0x419301
  4194de:	xchg   ax,ax
  4194e0:	lea    rdx,[rip+0x29c03]        # 0x4430ea
  4194e7:	mov    rcx,r14
  4194ea:	call   0x427dc8
  4194ef:	jmp    0x41934a
  4194f4:	mov    r8d,0x9
  4194fa:	mov    edx,ebp
  4194fc:	mov    rcx,rbx
  4194ff:	call   0x427e98
  419504:	xor    r9d,r9d
  419507:	xor    r8d,r8d
  41950a:	mov    rdx,rax
  41950d:	mov    rcx,r13
  419510:	add    r12,0x1
  419514:	call   0x412220
  419519:	cmp    DWORD PTR [rsp+0x68],r12d
  41951e:	jg     0x4193e0
  419524:	mov    rcx,r14
  419527:	call   0x427d60
  41952c:	mov    rdx,QWORD PTR [r15+0x10]
  419530:	mov    r8,QWORD PTR [r15+0x108]
  419537:	mov    rcx,r13
  41953a:	call   0x412460
  41953f:	mov    rcx,r13
  419542:	call   0x412350
  419547:	mov    eax,DWORD PTR [rsp+0x68]
  41954b:	mov    rdi,QWORD PTR [rsp+0x60]
  419550:	sub    eax,0x1
  419553:	mov    rbp,rdi
  419556:	lea    r12,[rdi+rax*8+0x8]
  41955b:	nop    DWORD PTR [rax+rax*1+0x0]
  419560:	mov    rcx,QWORD PTR [rbp+0x0]
  419564:	add    rbp,0x8
  419568:	call   0x42a4e8
  41956d:	cmp    rbp,r12
  419570:	jne    0x419560
  419572:	mov    rcx,QWORD PTR [rsp+0x60]
  419577:	call   0x42a4e8
  41957c:	mov    rcx,rbx
  41957f:	call   0x427f68
  419584:	mov    eax,0x1
  419589:	add    rsp,0x168
  419590:	pop    rbx
  419591:	pop    rsi
  419592:	pop    rdi
  419593:	pop    rbp
  419594:	pop    r12
  419596:	pop    r13
  419598:	pop    r14
  41959a:	pop    r15
  41959c:	ret    
  41959d:	nop    DWORD PTR [rax]
  4195a0:	lea    rdx,[rip+0x29b28]        # 0x4430cf
  4195a7:	mov    rcx,r14
  4195aa:	call   0x414750
  4195af:	jmp    0x4192d9
  4195b4:	cmp    DWORD PTR [r15+0xe4],0x13947
  4195bf:	jle    0x4191ef
  4195c5:	lea    rdx,[rip+0x2587e]        # 0x43ee4a
  4195cc:	mov    r9d,0x6c
  4195d2:	mov    r8d,0x1
  4195d8:	mov    rcx,r13
  4195db:	call   0x4121a0
  4195e0:	jmp    0x4191ef
  4195e5:	cmp    DWORD PTR [r15+0xe4],0x13947
  4195f0:	mov    ebp,0x3
  4195f5:	jle    0x41907b
  4195fb:	lea    rdx,[rip+0x2988e]        # 0x442e90
  419602:	mov    rcx,r14
  419605:	mov    bpl,0x4
  419608:	call   0x427dc8
  41960d:	mov    eax,DWORD PTR [r15+0xe4]
  419614:	jmp    0x419070
  419619:	nop    DWORD PTR [rax+0x0]
  419620:	lea    rdx,[rip+0x298ac]        # 0x442ed3
  419627:	mov    rcx,r14
  41962a:	call   0x427dc8
  41962f:	jmp    0x41907b
  419634:	mov    rcx,r14
  419637:	call   0x427d60
  41963c:	mov    rdx,QWORD PTR [r15+0x10]
  419640:	mov    r8,QWORD PTR [r15+0x108]
  419647:	mov    rcx,r13
  41964a:	call   0x412460
  41964f:	mov    rcx,r13
  419652:	call   0x412350
  419657:	jmp    0x419572
  41965c:	nop    DWORD PTR [rax+0x0]
  419660:	push   r13
  419662:	push   r12
  419664:	push   rbp
  419665:	push   rdi
  419666:	push   rsi
  419667:	push   rbx
  419668:	sub    rsp,0x118
  41966f:	mov    rbx,QWORD PTR [rip+0x3b26a]        # 0x4548e0
  419676:	lea    rbp,[rsp+0x70]
  41967b:	mov    r12,rcx
  41967e:	mov    ecx,0x13
  419683:	mov    r13,rdx
  419686:	lea    rsi,[rbx+0x28]
  41968a:	mov    rdi,rbp
  41968d:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419690:	lea    rsi,[rsp+0x50]
  419695:	mov    rcx,rsi
  419698:	call   0x427da8
  41969d:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  4196a7:	jle    0x419810
  4196ad:	lea    rax,[rip+0x29b3c]        # 0x4431f0
  4196b4:	lea    r9,[rip+0x29a47]        # 0x443102
  4196bb:	lea    r8,[rip+0x29a49]        # 0x44310b
  4196c2:	lea    rdx,[rip+0x29a47]        # 0x443110
  4196c9:	mov    rcx,rsi
  4196cc:	lea    rdi,[rip+0x29b37]        # 0x44320a
  4196d3:	mov    QWORD PTR [rsp+0x20],rax
  4196d8:	call   0x427d70
  4196dd:	lea    rax,[rip+0x29b15]        # 0x4431f9
  4196e4:	mov    QWORD PTR [rsp+0x40],0x0
  4196ed:	mov    QWORD PTR [rsp+0x38],0x0
  4196f6:	mov    QWORD PTR [rsp+0x28],0x0
  4196ff:	mov    DWORD PTR [rsp+0x20],0x0
  419707:	xor    r9d,r9d
  41970a:	mov    QWORD PTR [rsp+0x30],rax
  41970f:	mov    rcx,QWORD PTR [rbx]
  419712:	mov    r8,r12
  419715:	mov    rdx,rsi
  419718:	call   0x41e8f0
  41971d:	mov    QWORD PTR [rsp+0x40],0x0
  419726:	mov    QWORD PTR [rsp+0x38],0x0
  41972f:	mov    r8,r13
  419732:	mov    QWORD PTR [rsp+0x30],rdi
  419737:	mov    QWORD PTR [rsp+0x28],0x0
  419740:	movsx  r9d,al
  419744:	mov    DWORD PTR [rsp+0x20],0x0
  41974c:	mov    rcx,QWORD PTR [rbx]
  41974f:	mov    rdx,rsi
  419752:	call   0x41e8f0
  419757:	lea    rdx,[rip+0x28210]        # 0x44196e
  41975e:	mov    rcx,rsi
  419761:	call   0x427dc8
  419766:	mov    rcx,QWORD PTR [rsp+0x50]
  41976b:	xor    edx,edx
  41976d:	call   0x4062b0
  419772:	mov    r13,rax
  419775:	xor    eax,eax
  419777:	test   r13,r13
  41977a:	je     0x4197fe
  419780:	mov    rcx,r13
  419783:	call   0x427e70
  419788:	test   eax,eax
  41978a:	jne    0x4197b0
  41978c:	cmp    BYTE PTR [rbx+0x11a],0x0
  419793:	jne    0x4197b0
  419795:	test   r12,r12
  419798:	mov    rcx,QWORD PTR [rbx+0x10]
  41979c:	je     0x419832
  4197a2:	lea    rdx,[rip+0x29ab6]        # 0x44325f
  4197a9:	call   0x426370
  4197ae:	jmp    0x4197e9
  4197b0:	mov    r9,QWORD PTR [rbx+0x108]
  4197b7:	mov    r8,QWORD PTR [rbx+0x10]
  4197bb:	lea    rax,[rip+0x29ace]        # 0x443290
  4197c2:	mov    rdx,rbp
  4197c5:	mov    rcx,r13
  4197c8:	mov    QWORD PTR [rsp+0xd0],0x0
  4197d4:	mov    QWORD PTR [rsp+0xe0],rax
  4197dc:	mov    BYTE PTR [rsp+0xf0],0x1
  4197e4:	call   0x4141a0
  4197e9:	mov    rcx,r13
  4197ec:	call   0x427f68
  4197f1:	mov    rcx,rsi
  4197f4:	call   0x427d68
  4197f9:	mov    eax,0x1
  4197fe:	add    rsp,0x118
  419805:	pop    rbx
  419806:	pop    rsi
  419807:	pop    rdi
  419808:	pop    rbp
  419809:	pop    r12
  41980b:	pop    r13
  41980d:	ret    
  41980e:	xchg   ax,ax
  419810:	mov    rcx,QWORD PTR [rbx+0x10]
  419814:	lea    rdx,[rip+0x29a05]        # 0x443220
  41981b:	call   0x426370
  419820:	xor    eax,eax
  419822:	add    rsp,0x118
  419829:	pop    rbx
  41982a:	pop    rsi
  41982b:	pop    rdi
  41982c:	pop    rbp
  41982d:	pop    r12
  41982f:	pop    r13
  419831:	ret    
  419832:	lea    rdx,[rip+0x29a43]        # 0x44327c
  419839:	call   0x426370
  41983e:	jmp    0x4197e9
  419840:	push   r15
  419842:	push   r14
  419844:	push   r13
  419846:	push   r12
  419848:	push   rbp
  419849:	push   rdi
  41984a:	push   rsi
  41984b:	push   rbx
  41984c:	sub    rsp,0x148
  419853:	mov    rsi,rcx
  419856:	mov    rbp,rdx
  419859:	mov    edx,0x74
  41985e:	mov    DWORD PTR [rsp+0x74],r8d
  419863:	mov    DWORD PTR [rsp+0x70],r9d
  419868:	lea    rdi,[rsp+0xa0]
  419870:	call   0x42a428
  419875:	mov    rcx,rsi
  419878:	test   rax,rax
  41987b:	mov    edx,0x69
  419880:	setne  r15b
  419884:	call   0x42a428
  419889:	mov    rcx,rsi
  41988c:	test   rax,rax
  41988f:	mov    edx,0x76
  419894:	setne  r12b
  419898:	call   0x42a428
  41989d:	mov    rcx,rsi
  4198a0:	test   rax,rax
  4198a3:	mov    edx,0x6d
  4198a8:	setne  r14b
  4198ac:	call   0x42a428
  4198b1:	mov    rcx,rsi
  4198b4:	test   rax,rax
  4198b7:	mov    edx,0x73
  4198bc:	setne  r13b
  4198c0:	call   0x42a428
  4198c5:	mov    rcx,rsi
  4198c8:	test   rax,rax
  4198cb:	mov    edx,0x45
  4198d0:	setne  bl
  4198d3:	call   0x42a428
  4198d8:	test   rax,rax
  4198db:	mov    rax,QWORD PTR [rip+0x3affe]        # 0x4548e0
  4198e2:	mov    QWORD PTR [rsp+0x78],rdi
  4198e7:	setne  dl
  4198ea:	mov    ecx,0x13
  4198ef:	lea    rsi,[rax+0x28]
  4198f3:	mov    eax,r12d
  4198f6:	or     eax,r15d
  4198f9:	or     eax,r14d
  4198fc:	or     eax,r13d
  4198ff:	or     al,bl
  419901:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419904:	jne    0x419bb0
  41990a:	test   dl,dl
  41990c:	jne    0x419bb0
  419912:	mov    r14d,0x1
  419918:	mov    ebx,0x1
  41991d:	mov    r15d,0x1
  419923:	mov    esi,0x1
  419928:	mov    edi,0x1
  41992d:	lea    r13,[rsp+0x80]
  419935:	mov    rcx,r13
  419938:	call   0x427da8
  41993d:	lea    rax,[rip+0x26f36]        # 0x44087a
  419944:	lea    r9,[rip+0x26ae9]        # 0x440434
  41994b:	lea    r8,[rip+0x26ae7]        # 0x440439
  419952:	lea    rdx,[rip+0x2994f]        # 0x4432a8
  419959:	mov    rcx,r13
  41995c:	mov    QWORD PTR [rsp+0x60],rax
  419961:	lea    rax,[rip+0x254a1]        # 0x43ee09
  419968:	mov    QWORD PTR [rsp+0x58],rax
  41996d:	lea    rax,[rip+0x2868b]        # 0x441fff
  419974:	mov    QWORD PTR [rsp+0x50],rax
  419979:	lea    rax,[rip+0x29a2b]        # 0x4433ab
  419980:	mov    QWORD PTR [rsp+0x48],rax
  419985:	lea    rax,[rip+0x28681]        # 0x44200d
  41998c:	mov    QWORD PTR [rsp+0x40],rax
  419991:	lea    rax,[rip+0x29a1b]        # 0x4433b3
  419998:	mov    QWORD PTR [rsp+0x38],rax
  41999d:	lea    rax,[rip+0x28672]        # 0x442016
  4199a4:	mov    QWORD PTR [rsp+0x30],rax
  4199a9:	lea    rax,[rip+0x28678]        # 0x442028
  4199b0:	mov    QWORD PTR [rsp+0x28],rax
  4199b5:	lea    rax,[rip+0x28671]        # 0x44202d
  4199bc:	mov    QWORD PTR [rsp+0x20],rax
  4199c1:	call   0x427d70
  4199c6:	test   r12b,r12b
  4199c9:	jne    0x419c40
  4199cf:	cmp    BYTE PTR [rsp+0x74],0x0
  4199d4:	je     0x419d4b
  4199da:	mov    rax,QWORD PTR [rip+0x3aeff]        # 0x4548e0
  4199e1:	mov    eax,DWORD PTR [rax+0xe4]
  4199e7:	cmp    eax,0x15f8f
  4199ec:	jg     0x419d14
  4199f2:	cmp    eax,0x138e3
  4199f7:	jg     0x419d30
  4199fd:	lea    r8,[rip+0x25446]        # 0x43ee4a
  419a04:	lea    rdx,[rip+0x29a65]        # 0x443470
  419a0b:	mov    rcx,r13
  419a0e:	call   0x427dd8
  419a13:	lea    rdx,[rip+0x29a96]        # 0x4434b0
  419a1a:	mov    rcx,r13
  419a1d:	call   0x427dc8
  419a22:	test   r12b,r12b
  419a25:	jne    0x419c70
  419a2b:	lea    rdx,[rip+0x29b59]        # 0x44358b
  419a32:	mov    rcx,r13
  419a35:	call   0x427dc8
  419a3a:	test   dil,dil
  419a3d:	jne    0x419d00
  419a43:	test   sil,sil
  419a46:	jne    0x419ce4
  419a4c:	test   r15b,r15b
  419a4f:	jne    0x419cd0
  419a55:	test   r12b,r12b
  419a58:	jne    0x419cb4
  419a5e:	test   bl,bl
  419a60:	jne    0x419ca0
  419a66:	test   rbp,rbp
  419a69:	setne  sil
  419a6d:	cmp    BYTE PTR [rsp+0x70],0x0
  419a72:	jne    0x419c84
  419a78:	test   sil,sil
  419a7b:	jne    0x419c84
  419a81:	test   r14b,r14b
  419a84:	jne    0x419c22
  419a8a:	lea    rdx,[rip+0x24686]        # 0x43e117
  419a91:	mov    rcx,r13
  419a94:	call   0x427dc8
  419a99:	lea    rdx,[rip+0x29b24]        # 0x4435c4
  419aa0:	mov    rcx,r13
  419aa3:	call   0x427dc8
  419aa8:	cmp    BYTE PTR [rsp+0x70],0x0
  419aad:	jne    0x419ac3
  419aaf:	test   rbp,rbp
  419ab2:	jne    0x419ac3
  419ab4:	lea    rdx,[rip+0x26cbd]        # 0x440778
  419abb:	mov    rcx,r13
  419abe:	call   0x427dc8
  419ac3:	lea    rdx,[rip+0x29afe]        # 0x4435c8
  419aca:	mov    rcx,r13
  419acd:	call   0x427dc8
  419ad2:	lea    rax,[rip+0x28b07]        # 0x4425e0
  419ad9:	mov    QWORD PTR [rsp+0x38],0x0
  419ae2:	mov    DWORD PTR [rsp+0x20],0x0
  419aea:	mov    r9d,0x1
  419af0:	mov    r8,rbp
  419af3:	mov    rdx,r13
  419af6:	mov    QWORD PTR [rsp+0x40],rax
  419afb:	lea    rax,[rip+0x2871c]        # 0x44221e
  419b02:	mov    QWORD PTR [rsp+0x30],rax
  419b07:	lea    rax,[rip+0x26cf5]        # 0x440803
  419b0e:	mov    QWORD PTR [rsp+0x28],rax
  419b13:	mov    rax,QWORD PTR [rip+0x3adc6]        # 0x4548e0
  419b1a:	mov    rcx,QWORD PTR [rax]
  419b1d:	call   0x41e8f0
  419b22:	lea    rdx,[rip+0x29ac3]        # 0x4435ec
  419b29:	mov    rcx,r13
  419b2c:	call   0x427dc8
  419b31:	mov    rcx,QWORD PTR [rsp+0x80]
  419b39:	xor    edx,edx
  419b3b:	call   0x4062b0
  419b40:	mov    rcx,r13
  419b43:	mov    rbx,rax
  419b46:	call   0x427d60
  419b4b:	xor    eax,eax
  419b4d:	test   rbx,rbx
  419b50:	je     0x419b94
  419b52:	mov    rcx,rbx
  419b55:	call   0x427e70
  419b5a:	test   eax,eax
  419b5c:	jne    0x419bc1
  419b5e:	mov    rax,QWORD PTR [rip+0x3ad7b]        # 0x4548e0
  419b65:	cmp    BYTE PTR [rax+0x11a],0x0
  419b6c:	jne    0x419bc1
  419b6e:	test   sil,sil
  419b71:	je     0x419d60
  419b77:	mov    rcx,QWORD PTR [rax+0x10]
  419b7b:	lea    rdx,[rip+0x29a78]        # 0x4435fa
  419b82:	call   0x426370
  419b87:	mov    rcx,rbx
  419b8a:	call   0x427f68
  419b8f:	mov    eax,0x1
  419b94:	add    rsp,0x148
  419b9b:	pop    rbx
  419b9c:	pop    rsi
  419b9d:	pop    rdi
  419b9e:	pop    rbp
  419b9f:	pop    r12
  419ba1:	pop    r13
  419ba3:	pop    r14
  419ba5:	pop    r15
  419ba7:	ret    
  419ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  419bb0:	mov    edi,r15d
  419bb3:	mov    esi,r14d
  419bb6:	mov    r15d,r13d
  419bb9:	mov    r14d,edx
  419bbc:	jmp    0x41992d
  419bc1:	lea    rax,[rip+0x29a65]        # 0x44362d
  419bc8:	mov    rdx,QWORD PTR [rsp+0x78]
  419bcd:	mov    rcx,rbx
  419bd0:	mov    QWORD PTR [rsp+0x100],0x0
  419bdc:	mov    BYTE PTR [rsp+0x120],0x1
  419be4:	mov    QWORD PTR [rsp+0x110],rax
  419bec:	lea    rax,[rip+0x2cabd]        # 0x4466b0
  419bf3:	mov    DWORD PTR [rsp+0x130],0x7
  419bfe:	mov    QWORD PTR [rsp+0x128],rax
  419c06:	mov    rax,QWORD PTR [rip+0x3acd3]        # 0x4548e0
  419c0d:	mov    r9,QWORD PTR [rax+0x108]
  419c14:	mov    r8,QWORD PTR [rax+0x10]
  419c18:	call   0x4141a0
  419c1d:	jmp    0x419b87
  419c22:	lea    rdx,[rip+0x29996]        # 0x4435bf
  419c29:	mov    rcx,r13
  419c2c:	call   0x427dc8
  419c31:	jmp    0x419a8a
  419c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c40:	lea    r8,[rip+0x29772]        # 0x4433b9
  419c47:	lea    rdx,[rip+0x29771]        # 0x4433bf
  419c4e:	mov    rcx,r13
  419c51:	call   0x427dd8
  419c56:	cmp    BYTE PTR [rsp+0x74],0x0
  419c5b:	jne    0x4199da
  419c61:	lea    rdx,[rip+0x29848]        # 0x4434b0
  419c68:	mov    rcx,r13
  419c6b:	call   0x427dc8
  419c70:	lea    rdx,[rip+0x29899]        # 0x443510
  419c77:	mov    rcx,r13
  419c7a:	call   0x427dc8
  419c7f:	jmp    0x419a2b
  419c84:	lea    rdx,[rip+0x2992f]        # 0x4435ba
  419c8b:	mov    rcx,r13
  419c8e:	call   0x427dc8
  419c93:	jmp    0x419a81
  419c98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ca0:	lea    rdx,[rip+0x2990e]        # 0x4435b5
  419ca7:	mov    rcx,r13
  419caa:	call   0x427dc8
  419caf:	jmp    0x419a66
  419cb4:	lea    rdx,[rip+0x298f5]        # 0x4435b0
  419cbb:	mov    rcx,r13
  419cbe:	call   0x427dc8
  419cc3:	jmp    0x419a5e
  419cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  419cd0:	lea    rdx,[rip+0x298d4]        # 0x4435ab
  419cd7:	mov    rcx,r13
  419cda:	call   0x427dc8
  419cdf:	jmp    0x419a55
  419ce4:	lea    rdx,[rip+0x298bb]        # 0x4435a6
  419ceb:	mov    rcx,r13
  419cee:	call   0x427dc8
  419cf3:	jmp    0x419a4c
  419cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  419d00:	lea    rdx,[rip+0x2989a]        # 0x4435a1
  419d07:	mov    rcx,r13
  419d0a:	call   0x427dc8
  419d0f:	jmp    0x419a43
  419d14:	lea    r8,[rip+0x27877]        # 0x441592
  419d1b:	lea    rdx,[rip+0x296b6]        # 0x4433d8
  419d22:	mov    rcx,r13
  419d25:	call   0x427dd8
  419d2a:	jmp    0x4199fd
  419d2f:	nop
  419d30:	lea    r8,[rip+0x2785b]        # 0x441592
  419d37:	lea    rdx,[rip+0x296e2]        # 0x443420
  419d3e:	mov    rcx,r13
  419d41:	call   0x427dd8
  419d46:	jmp    0x4199fd
  419d4b:	lea    rdx,[rip+0x2975e]        # 0x4434b0
  419d52:	mov    rcx,r13
  419d55:	call   0x427dc8
  419d5a:	jmp    0x419a2b
  419d5f:	nop
  419d60:	mov    rax,QWORD PTR [rip+0x3ab79]        # 0x4548e0
  419d67:	lea    rdx,[rip+0x298aa]        # 0x443618
  419d6e:	mov    rcx,QWORD PTR [rax+0x10]
  419d72:	call   0x426370
  419d77:	jmp    0x419b87
  419d7c:	nop    DWORD PTR [rax+0x0]
  419d80:	push   r15
  419d82:	push   r14
  419d84:	push   r13
  419d86:	push   r12
  419d88:	push   rbp
  419d89:	push   rdi
  419d8a:	push   rsi
  419d8b:	push   rbx
  419d8c:	sub    rsp,0x118
  419d93:	mov    rbp,QWORD PTR [rip+0x3ab46]        # 0x4548e0
  419d9a:	lea    rbx,[rsp+0x50]
  419d9f:	lea    r12,[rsp+0x70]
  419da4:	mov    r13,rcx
  419da7:	mov    ecx,0x13
  419dac:	mov    r14d,edx
  419daf:	mov    r15d,r8d
  419db2:	lea    rsi,[rbp+0x28]
  419db6:	mov    rdi,r12
  419db9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419dbc:	mov    rcx,rbx
  419dbf:	call   0x427da8
  419dc4:	lea    r8,[rip+0x26669]        # 0x440434
  419dcb:	lea    rdx,[rip+0x2986d]        # 0x44363f
  419dd2:	mov    rcx,rbx
  419dd5:	call   0x427d70
  419dda:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  419de4:	jg     0x419f60
  419dea:	lea    r8,[rip+0x298a7]        # 0x443698
  419df1:	lea    rdx,[rip+0x298a8]        # 0x4436a0
  419df8:	mov    rcx,rbx
  419dfb:	call   0x427dd8
  419e00:	test   r14b,r14b
  419e03:	jne    0x419f10
  419e09:	lea    r8,[rip+0x2503a]        # 0x43ee4a
  419e10:	lea    rdx,[rip+0x299a1]        # 0x4437b8
  419e17:	mov    rcx,rbx
  419e1a:	call   0x427dd8
  419e1f:	test   r13,r13
  419e22:	je     0x419ef0
  419e28:	lea    rax,[rip+0x29a34]        # 0x443863
  419e2f:	mov    QWORD PTR [rsp+0x40],0x0
  419e38:	mov    QWORD PTR [rsp+0x38],0x0
  419e41:	mov    QWORD PTR [rsp+0x28],0x0
  419e4a:	mov    DWORD PTR [rsp+0x20],0x0
  419e52:	xor    r9d,r9d
  419e55:	mov    QWORD PTR [rsp+0x30],rax
  419e5a:	mov    rcx,QWORD PTR [rbp+0x0]
  419e5e:	mov    r8,r13
  419e61:	mov    rdx,rbx
  419e64:	call   0x41e8f0
  419e69:	lea    rdx,[rip+0x26b88]        # 0x4409f8
  419e70:	mov    rcx,rbx
  419e73:	call   0x427dc8
  419e78:	mov    rcx,QWORD PTR [rsp+0x50]
  419e7d:	xor    edx,edx
  419e7f:	call   0x4062b0
  419e84:	mov    rcx,rbx
  419e87:	mov    rsi,rax
  419e8a:	call   0x427d60
  419e8f:	xor    eax,eax
  419e91:	test   rsi,rsi
  419e94:	je     0x419edc
  419e96:	mov    r9,QWORD PTR [rbp+0x108]
  419e9d:	mov    r8,QWORD PTR [rbp+0x10]
  419ea1:	lea    rax,[rip+0x299e1]        # 0x443889
  419ea8:	mov    rdx,r12
  419eab:	mov    rcx,rsi
  419eae:	mov    QWORD PTR [rsp+0xd0],0x0
  419eba:	mov    QWORD PTR [rsp+0xe0],rax
  419ec2:	mov    BYTE PTR [rsp+0xf0],0x1
  419eca:	call   0x4141a0
  419ecf:	mov    rcx,rsi
  419ed2:	call   0x427f68
  419ed7:	mov    eax,0x1
  419edc:	add    rsp,0x118
  419ee3:	pop    rbx
  419ee4:	pop    rsi
  419ee5:	pop    rdi
  419ee6:	pop    rbp
  419ee7:	pop    r12
  419ee9:	pop    r13
  419eeb:	pop    r14
  419eed:	pop    r15
  419eef:	ret    
  419ef0:	test   r15b,r15b
  419ef3:	jne    0x419e69
  419ef9:	lea    rdx,[rip+0x2996d]        # 0x44386d
  419f00:	mov    rcx,rbx
  419f03:	call   0x427dc8
  419f08:	jmp    0x419e69
  419f0d:	nop    DWORD PTR [rax]
  419f10:	lea    rax,[rip+0x2984c]        # 0x443763
  419f17:	lea    r9,[rip+0x297a0]        # 0x4436be
  419f1e:	lea    r8,[rip+0x297a6]        # 0x4436cb
  419f25:	lea    rdx,[rip+0x297b4]        # 0x4436e0
  419f2c:	mov    rcx,rbx
  419f2f:	mov    QWORD PTR [rsp+0x20],rax
  419f34:	call   0x427dd8
  419f39:	cmp    DWORD PTR [rbp+0xe4],0x15f8f
  419f43:	jg     0x419f80
  419f45:	lea    rdx,[rip+0x2985f]        # 0x4437ab
  419f4c:	mov    rcx,rbx
  419f4f:	call   0x414870
  419f54:	jmp    0x419e09
  419f59:	nop    DWORD PTR [rax+0x0]
  419f60:	lea    r8,[rip+0x26913]        # 0x44087a
  419f67:	lea    rdx,[rip+0x296f2]        # 0x443660
  419f6e:	mov    rcx,rbx
  419f71:	call   0x427dd8
  419f76:	jmp    0x419dea
  419f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  419f80:	lea    r8,[rip+0x297e6]        # 0x44376d
  419f87:	lea    rdx,[rip+0x297f2]        # 0x443780
  419f8e:	mov    rcx,rbx
  419f91:	call   0x427dd8
  419f96:	jmp    0x419f45
  419f98:	nop    DWORD PTR [rax+rax*1+0x0]
  419fa0:	push   r15
  419fa2:	push   r14
  419fa4:	push   r13
  419fa6:	push   r12
  419fa8:	push   rbp
  419fa9:	push   rdi
  419faa:	push   rsi
  419fab:	push   rbx
  419fac:	sub    rsp,0x118
  419fb3:	mov    rbp,QWORD PTR [rip+0x3a926]        # 0x4548e0
  419fba:	lea    rbx,[rsp+0x50]
  419fbf:	lea    r12,[rsp+0x70]
  419fc4:	mov    r13,rcx
  419fc7:	mov    ecx,0x13
  419fcc:	mov    r15d,edx
  419fcf:	mov    r14d,r8d
  419fd2:	lea    rsi,[rbp+0x28]
  419fd6:	mov    rdi,r12
  419fd9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419fdc:	mov    rcx,rbx
  419fdf:	call   0x427da8
  419fe4:	lea    rax,[rip+0x24e1e]        # 0x43ee09
  419feb:	lea    r9,[rip+0x26442]        # 0x440434
  419ff2:	lea    r8,[rip+0x26440]        # 0x440439
  419ff9:	lea    rdx,[rip+0x298a0]        # 0x4438a0
  41a000:	mov    rcx,rbx
  41a003:	mov    QWORD PTR [rsp+0x20],rax
  41a008:	call   0x427d70
  41a00d:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41a017:	jg     0x41a1a4
  41a01d:	lea    r9,[rip+0x299f7]        # 0x443a1b
  41a024:	lea    r8,[rip+0x299f6]        # 0x443a21
  41a02b:	lea    rdx,[rip+0x299fe]        # 0x443a30
  41a032:	mov    rcx,rbx
  41a035:	call   0x427dd8
  41a03a:	test   r15b,r15b
  41a03d:	je     0x41a175
  41a043:	cmp    DWORD PTR [rbp+0xe4],0x16057
  41a04d:	jg     0x41a1c0
  41a053:	lea    r8,[rip+0x24df0]        # 0x43ee4a
  41a05a:	lea    rdx,[rip+0x29b37]        # 0x443b98
  41a061:	mov    rcx,rbx
  41a064:	call   0x427dd8
  41a069:	lea    rdx,[rip+0x29b48]        # 0x443bb8
  41a070:	mov    rcx,rbx
  41a073:	call   0x427dc8
  41a078:	lea    rdx,[rip+0x29b99]        # 0x443c18
  41a07f:	mov    rcx,rbx
  41a082:	call   0x427dc8
  41a087:	lea    rdx,[rip+0x29bf9]        # 0x443c87
  41a08e:	mov    rcx,rbx
  41a091:	call   0x427dc8
  41a096:	test   r14b,r14b
  41a099:	jne    0x41a0a4
  41a09b:	test   r13,r13
  41a09e:	je     0x41a190
  41a0a4:	lea    rax,[rip+0x2786d]        # 0x441918
  41a0ab:	mov    QWORD PTR [rsp+0x38],0x0
  41a0b4:	mov    DWORD PTR [rsp+0x20],0x0
  41a0bc:	mov    r9d,0x1
  41a0c2:	mov    r8,r13
  41a0c5:	mov    rdx,rbx
  41a0c8:	mov    QWORD PTR [rsp+0x40],rax
  41a0cd:	lea    rax,[rip+0x27890]        # 0x441964
  41a0d4:	mov    QWORD PTR [rsp+0x30],rax
  41a0d9:	lea    rax,[rip+0x26723]        # 0x440803
  41a0e0:	mov    QWORD PTR [rsp+0x28],rax
  41a0e5:	mov    rcx,QWORD PTR [rbp+0x0]
  41a0e9:	call   0x41e8f0
  41a0ee:	lea    rdx,[rip+0x27879]        # 0x44196e
  41a0f5:	mov    rcx,rbx
  41a0f8:	call   0x427dc8
  41a0fd:	mov    rcx,QWORD PTR [rsp+0x50]
  41a102:	xor    edx,edx
  41a104:	call   0x4062b0
  41a109:	mov    rcx,rbx
  41a10c:	mov    rsi,rax
  41a10f:	call   0x427d60
  41a114:	xor    eax,eax
  41a116:	test   rsi,rsi
  41a119:	je     0x41a161
  41a11b:	mov    r9,QWORD PTR [rbp+0x108]
  41a122:	mov    r8,QWORD PTR [rbp+0x10]
  41a126:	lea    rax,[rip+0x29b71]        # 0x443c9e
  41a12d:	mov    rdx,r12
  41a130:	mov    rcx,rsi
  41a133:	mov    QWORD PTR [rsp+0xd0],0x0
  41a13f:	mov    QWORD PTR [rsp+0xe0],rax
  41a147:	mov    BYTE PTR [rsp+0xf0],0x1
  41a14f:	call   0x4141a0
  41a154:	mov    rcx,rsi
  41a157:	call   0x427f68
  41a15c:	mov    eax,0x1
  41a161:	add    rsp,0x118
  41a168:	pop    rbx
  41a169:	pop    rsi
  41a16a:	pop    rdi
  41a16b:	pop    rbp
  41a16c:	pop    r12
  41a16e:	pop    r13
  41a170:	pop    r14
  41a172:	pop    r15
  41a174:	ret    
  41a175:	lea    rdx,[rip+0x29a3c]        # 0x443bb8
  41a17c:	mov    rcx,rbx
  41a17f:	call   0x427dc8
  41a184:	jmp    0x41a087
  41a189:	nop    DWORD PTR [rax+0x0]
  41a190:	lea    rdx,[rip+0x265e1]        # 0x440778
  41a197:	mov    rcx,rbx
  41a19a:	call   0x427dc8
  41a19f:	jmp    0x41a0a4
  41a1a4:	lea    rdx,[rip+0x29785]        # 0x443930
  41a1ab:	mov    rcx,rbx
  41a1ae:	call   0x427dc8
  41a1b3:	jmp    0x41a01d
  41a1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1c0:	lea    rdx,[rip+0x2679f]        # 0x440966
  41a1c7:	mov    rcx,rbx
  41a1ca:	call   0x427dc8
  41a1cf:	lea    rdx,[rip+0x275a5]        # 0x44177b
  41a1d6:	mov    rcx,rbx
  41a1d9:	call   0x414870
  41a1de:	jmp    0x41a053
  41a1e3:	nop    DWORD PTR [rax]
  41a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1f0:	push   r15
  41a1f2:	push   r14
  41a1f4:	push   r13
  41a1f6:	push   r12
  41a1f8:	push   rbp
  41a1f9:	push   rdi
  41a1fa:	push   rsi
  41a1fb:	push   rbx
  41a1fc:	sub    rsp,0x118
  41a203:	mov    rbp,QWORD PTR [rip+0x3a6d6]        # 0x4548e0
  41a20a:	lea    rbx,[rsp+0x50]
  41a20f:	lea    r12,[rsp+0x70]
  41a214:	mov    r13,rcx
  41a217:	mov    ecx,0x13
  41a21c:	mov    r15d,edx
  41a21f:	mov    r14d,r8d
  41a222:	lea    rsi,[rbp+0x28]
  41a226:	mov    rdi,r12
  41a229:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a22c:	mov    rcx,rbx
  41a22f:	call   0x427da8
  41a234:	lea    rax,[rip+0x29b6f]        # 0x443daa
  41a23b:	lea    r9,[rip+0x261f2]        # 0x440434
  41a242:	lea    r8,[rip+0x261f0]        # 0x440439
  41a249:	lea    rdx,[rip+0x29a60]        # 0x443cb0
  41a250:	mov    rcx,rbx
  41a253:	mov    QWORD PTR [rsp+0x40],rax
  41a258:	lea    rax,[rip+0x29b54]        # 0x443db3
  41a25f:	mov    QWORD PTR [rsp+0x38],rax
  41a264:	lea    rax,[rip+0x29b4b]        # 0x443db6
  41a26b:	mov    QWORD PTR [rsp+0x30],rax
  41a270:	lea    rax,[rip+0x29b43]        # 0x443dba
  41a277:	mov    QWORD PTR [rsp+0x28],rax
  41a27c:	lea    rax,[rip+0x29b43]        # 0x443dc6
  41a283:	mov    QWORD PTR [rsp+0x20],rax
  41a288:	call   0x427d70
  41a28d:	test   r15b,r15b
  41a290:	jne    0x41a3c4
  41a296:	lea    rdx,[rip+0x29b53]        # 0x443df0
  41a29d:	mov    rcx,rbx
  41a2a0:	call   0x427dc8
  41a2a5:	lea    rdx,[rip+0x29c18]        # 0x443ec4
  41a2ac:	mov    rcx,rbx
  41a2af:	call   0x427dc8
  41a2b4:	test   r14b,r14b
  41a2b7:	jne    0x41a2c2
  41a2b9:	test   r13,r13
  41a2bc:	je     0x41a3b0
  41a2c2:	lea    rax,[rip+0x29c57]        # 0x443f20
  41a2c9:	mov    QWORD PTR [rsp+0x38],0x0
  41a2d2:	mov    DWORD PTR [rsp+0x20],0x0
  41a2da:	mov    r9d,0x1
  41a2e0:	mov    r8,r13
  41a2e3:	mov    rdx,rbx
  41a2e6:	mov    QWORD PTR [rsp+0x40],rax
  41a2eb:	lea    rax,[rip+0x29c59]        # 0x443f4b
  41a2f2:	mov    QWORD PTR [rsp+0x30],rax
  41a2f7:	lea    rax,[rip+0x26505]        # 0x440803
  41a2fe:	mov    QWORD PTR [rsp+0x28],rax
  41a303:	mov    rcx,QWORD PTR [rbp+0x0]
  41a307:	call   0x41e8f0
  41a30c:	lea    rdx,[rip+0x2765b]        # 0x44196e
  41a313:	mov    rcx,rbx
  41a316:	call   0x427dc8
  41a31b:	mov    rcx,QWORD PTR [rsp+0x50]
  41a320:	xor    edx,edx
  41a322:	call   0x4062b0
  41a327:	mov    rcx,rbx
  41a32a:	mov    rsi,rax
  41a32d:	call   0x427d60
  41a332:	xor    eax,eax
  41a334:	test   rsi,rsi
  41a337:	je     0x41a399
  41a339:	lea    rax,[rip+0x29c15]        # 0x443f55
  41a340:	mov    r9,QWORD PTR [rbp+0x108]
  41a347:	mov    r8,QWORD PTR [rbp+0x10]
  41a34b:	mov    rdx,r12
  41a34e:	mov    rcx,rsi
  41a351:	mov    QWORD PTR [rsp+0xd0],0x0
  41a35d:	mov    QWORD PTR [rsp+0xe0],rax
  41a365:	lea    rax,[rip+0x2c33e]        # 0x4466aa
  41a36c:	mov    BYTE PTR [rsp+0xf0],0x1
  41a374:	mov    DWORD PTR [rsp+0x100],0x6
  41a37f:	mov    QWORD PTR [rsp+0xf8],rax
  41a387:	call   0x4141a0
  41a38c:	mov    rcx,rsi
  41a38f:	call   0x427f68
  41a394:	mov    eax,0x1
  41a399:	add    rsp,0x118
  41a3a0:	pop    rbx
  41a3a1:	pop    rsi
  41a3a2:	pop    rdi
  41a3a3:	pop    rbp
  41a3a4:	pop    r12
  41a3a6:	pop    r13
  41a3a8:	pop    r14
  41a3aa:	pop    r15
  41a3ac:	ret    
  41a3ad:	nop    DWORD PTR [rax]
  41a3b0:	lea    rdx,[rip+0x29b19]        # 0x443ed0
  41a3b7:	mov    rcx,rbx
  41a3ba:	call   0x427dc8
  41a3bf:	jmp    0x41a2c2
  41a3c4:	lea    r8,[rip+0x24a7f]        # 0x43ee4a
  41a3cb:	lea    rdx,[rip+0x299fe]        # 0x443dd0
  41a3d2:	mov    rcx,rbx
  41a3d5:	call   0x427dd8
  41a3da:	lea    rdx,[rip+0x29a0f]        # 0x443df0
  41a3e1:	mov    rcx,rbx
  41a3e4:	call   0x427dc8
  41a3e9:	lea    rdx,[rip+0x29a60]        # 0x443e50
  41a3f0:	mov    rcx,rbx
  41a3f3:	call   0x427dc8
  41a3f8:	jmp    0x41a2a5
  41a3fd:	nop    DWORD PTR [rax]
  41a400:	push   r14
  41a402:	push   r13
  41a404:	push   r12
  41a406:	push   rbp
  41a407:	push   rdi
  41a408:	push   rsi
  41a409:	push   rbx
  41a40a:	sub    rsp,0x120
  41a411:	mov    rbp,QWORD PTR [rip+0x3a4c8]        # 0x4548e0
  41a418:	lea    rbx,[rsp+0x60]
  41a41d:	lea    r12,[rsp+0x80]
  41a425:	mov    r13,rcx
  41a428:	mov    ecx,0x13
  41a42d:	mov    r14d,edx
  41a430:	lea    rsi,[rbp+0x28]
  41a434:	mov    rdi,r12
  41a437:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a43a:	mov    rcx,rbx
  41a43d:	call   0x427da8
  41a442:	lea    rax,[rip+0x29c78]        # 0x4440c1
  41a449:	lea    r9,[rip+0x29b19]        # 0x443f69
  41a450:	lea    r8,[rip+0x25fdd]        # 0x440434
  41a457:	lea    rdx,[rip+0x29b12]        # 0x443f70
  41a45e:	mov    rcx,rbx
  41a461:	mov    QWORD PTR [rsp+0x58],rax
  41a466:	lea    rax,[rip+0x29c59]        # 0x4440c6
  41a46d:	mov    QWORD PTR [rsp+0x50],rax
  41a472:	lea    rax,[rip+0x29c57]        # 0x4440d0
  41a479:	mov    QWORD PTR [rsp+0x48],rax
  41a47e:	lea    rax,[rip+0x29c53]        # 0x4440d8
  41a485:	mov    QWORD PTR [rsp+0x40],rax
  41a48a:	lea    rax,[rip+0x29c50]        # 0x4440e1
  41a491:	mov    QWORD PTR [rsp+0x38],rax
  41a496:	lea    rax,[rip+0x29c4b]        # 0x4440e8
  41a49d:	mov    QWORD PTR [rsp+0x30],rax
  41a4a2:	lea    rax,[rip+0x29c47]        # 0x4440f0
  41a4a9:	mov    QWORD PTR [rsp+0x28],rax
  41a4ae:	lea    rax,[rip+0x263c5]        # 0x44087a
  41a4b5:	mov    QWORD PTR [rsp+0x20],rax
  41a4ba:	call   0x427d70
  41a4bf:	test   r14b,r14b
  41a4c2:	jne    0x41a5c0
  41a4c8:	lea    rdx,[rip+0x29c69]        # 0x444138
  41a4cf:	mov    rcx,rbx
  41a4d2:	call   0x427dc8
  41a4d7:	lea    rax,[rip+0x29c7f]        # 0x44415d
  41a4de:	mov    QWORD PTR [rsp+0x40],0x0
  41a4e7:	mov    QWORD PTR [rsp+0x38],0x0
  41a4f0:	mov    QWORD PTR [rsp+0x28],0x0
  41a4f9:	mov    DWORD PTR [rsp+0x20],0x0
  41a501:	xor    r9d,r9d
  41a504:	mov    QWORD PTR [rsp+0x30],rax
  41a509:	mov    rcx,QWORD PTR [rbp+0x0]
  41a50d:	mov    r8,r13
  41a510:	mov    rdx,rbx
  41a513:	call   0x41e8f0
  41a518:	lea    rdx,[rip+0x29c46]        # 0x444165
  41a51f:	mov    rcx,rbx
  41a522:	call   0x427dc8
  41a527:	mov    rcx,QWORD PTR [rsp+0x60]
  41a52c:	xor    edx,edx
  41a52e:	call   0x4062b0
  41a533:	mov    rcx,rbx
  41a536:	mov    rsi,rax
  41a539:	call   0x427d60
  41a53e:	xor    eax,eax
  41a540:	test   rsi,rsi
  41a543:	je     0x41a5a5
  41a545:	lea    rax,[rip+0x29c24]        # 0x444170
  41a54c:	mov    r9,QWORD PTR [rbp+0x108]
  41a553:	mov    r8,QWORD PTR [rbp+0x10]
  41a557:	mov    rdx,r12
  41a55a:	mov    rcx,rsi
  41a55d:	mov    QWORD PTR [rsp+0xe0],0x0
  41a569:	mov    QWORD PTR [rsp+0xf0],rax
  41a571:	lea    rax,[rip+0x2c12b]        # 0x4466a3
  41a578:	mov    BYTE PTR [rsp+0x100],0x1
  41a580:	mov    DWORD PTR [rsp+0x110],0x7
  41a58b:	mov    QWORD PTR [rsp+0x108],rax
  41a593:	call   0x4141a0
  41a598:	mov    rcx,rsi
  41a59b:	call   0x427f68
  41a5a0:	mov    eax,0x1
  41a5a5:	add    rsp,0x120
  41a5ac:	pop    rbx
  41a5ad:	pop    rsi
  41a5ae:	pop    rdi
  41a5af:	pop    rbp
  41a5b0:	pop    r12
  41a5b2:	pop    r13
  41a5b4:	pop    r14
  41a5b6:	ret    
  41a5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a5c0:	lea    r8,[rip+0x24883]        # 0x43ee4a
  41a5c7:	lea    rdx,[rip+0x29b2a]        # 0x4440f8
  41a5ce:	mov    rcx,rbx
  41a5d1:	call   0x427dd8
  41a5d6:	jmp    0x41a4c8
  41a5db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5e0:	push   r14
  41a5e2:	push   r13
  41a5e4:	push   r12
  41a5e6:	push   rbp
  41a5e7:	push   rdi
  41a5e8:	push   rsi
  41a5e9:	push   rbx
  41a5ea:	sub    rsp,0x110
  41a5f1:	mov    rbp,QWORD PTR [rip+0x3a2e8]        # 0x4548e0
  41a5f8:	lea    rbx,[rsp+0x50]
  41a5fd:	lea    r12,[rsp+0x70]
  41a602:	mov    r13,rcx
  41a605:	mov    ecx,0x13
  41a60a:	mov    r14d,edx
  41a60d:	lea    rsi,[rbp+0x28]
  41a611:	mov    rdi,r12
  41a614:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a617:	mov    rcx,rbx
  41a61a:	call   0x427da8
  41a61f:	lea    rax,[rip+0x29cda]        # 0x444300
  41a626:	lea    r9,[rip+0x29b5a]        # 0x444187
  41a62d:	lea    r8,[rip+0x29b5f]        # 0x444193
  41a634:	lea    rdx,[rip+0x29b65]        # 0x4441a0
  41a63b:	mov    rcx,rbx
  41a63e:	mov    QWORD PTR [rsp+0x40],rax
  41a643:	lea    rax,[rip+0x2976c]        # 0x443db6
  41a64a:	mov    QWORD PTR [rsp+0x38],rax
  41a64f:	lea    rax,[rip+0x29cb4]        # 0x44430a
  41a656:	mov    QWORD PTR [rsp+0x30],rax
  41a65b:	lea    rax,[rip+0x29751]        # 0x443db3
  41a662:	mov    QWORD PTR [rsp+0x28],rax
  41a667:	lea    rax,[rip+0x2746d]        # 0x441adb
  41a66e:	mov    QWORD PTR [rsp+0x20],rax
  41a673:	call   0x427d70
  41a678:	test   r14b,r14b
  41a67b:	jne    0x41a7f0
  41a681:	lea    rdx,[rip+0x29cb0]        # 0x444338
  41a688:	mov    rcx,rbx
  41a68b:	call   0x427dc8
  41a690:	lea    rdx,[rip+0x29e8d]        # 0x444524
  41a697:	mov    rcx,rbx
  41a69a:	call   0x427dc8
  41a69f:	lea    rax,[rip+0x29e92]        # 0x444538
  41a6a6:	mov    DWORD PTR [rsp+0x20],0x0
  41a6ae:	mov    r9d,0x1
  41a6b4:	mov    r8,r13
  41a6b7:	mov    rdx,rbx
  41a6ba:	mov    QWORD PTR [rsp+0x40],rax
  41a6bf:	lea    rax,[rip+0x29e9a]        # 0x444560
  41a6c6:	mov    QWORD PTR [rsp+0x38],rax
  41a6cb:	lea    rax,[rip+0x29eb3]        # 0x444585
  41a6d2:	mov    QWORD PTR [rsp+0x30],rax
  41a6d7:	lea    rax,[rip+0x29eb2]        # 0x444590
  41a6de:	mov    QWORD PTR [rsp+0x28],rax
  41a6e3:	mov    rcx,QWORD PTR [rbp+0x0]
  41a6e7:	call   0x41e8f0
  41a6ec:	lea    rdx,[rip+0x29ea8]        # 0x44459b
  41a6f3:	mov    rcx,rbx
  41a6f6:	call   0x427dc8
  41a6fb:	lea    rax,[rip+0x29ea6]        # 0x4445a8
  41a702:	mov    DWORD PTR [rsp+0x20],0x0
  41a70a:	mov    r9d,0x1
  41a710:	mov    r8,r13
  41a713:	mov    rdx,rbx
  41a716:	mov    QWORD PTR [rsp+0x40],rax
  41a71b:	lea    rax,[rip+0x29eae]        # 0x4445d0
  41a722:	mov    QWORD PTR [rsp+0x38],rax
  41a727:	lea    rax,[rip+0x29ec7]        # 0x4445f5
  41a72e:	mov    QWORD PTR [rsp+0x30],rax
  41a733:	lea    rax,[rip+0x29ec6]        # 0x444600
  41a73a:	mov    QWORD PTR [rsp+0x28],rax
  41a73f:	mov    rcx,QWORD PTR [rbp+0x0]
  41a743:	call   0x41e8f0
  41a748:	lea    rdx,[rip+0x29ebc]        # 0x44460b
  41a74f:	mov    rcx,rbx
  41a752:	call   0x427dc8
  41a757:	mov    rcx,QWORD PTR [rsp+0x50]
  41a75c:	xor    edx,edx
  41a75e:	call   0x4062b0
  41a763:	mov    rcx,rbx
  41a766:	mov    rsi,rax
  41a769:	call   0x427d60
  41a76e:	xor    eax,eax
  41a770:	test   rsi,rsi
  41a773:	je     0x41a7d5
  41a775:	lea    rax,[rip+0x29ea2]        # 0x44461e
  41a77c:	mov    r9,QWORD PTR [rbp+0x108]
  41a783:	mov    r8,QWORD PTR [rbp+0x10]
  41a787:	mov    rdx,r12
  41a78a:	mov    rcx,rsi
  41a78d:	mov    QWORD PTR [rsp+0xd0],0x0
  41a799:	mov    QWORD PTR [rsp+0xe0],rax
  41a7a1:	lea    rax,[rip+0x2bef6]        # 0x44669e
  41a7a8:	mov    BYTE PTR [rsp+0xf0],0x1
  41a7b0:	mov    DWORD PTR [rsp+0x100],0x5
  41a7bb:	mov    QWORD PTR [rsp+0xf8],rax
  41a7c3:	call   0x4141a0
  41a7c8:	mov    rcx,rsi
  41a7cb:	call   0x427f68
  41a7d0:	mov    eax,0x1
  41a7d5:	add    rsp,0x110
  41a7dc:	pop    rbx
  41a7dd:	pop    rsi
  41a7de:	pop    rdi
  41a7df:	pop    rbp
  41a7e0:	pop    r12
  41a7e2:	pop    r13
  41a7e4:	pop    r14
  41a7e6:	ret    
  41a7e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a7f0:	lea    r8,[rip+0x24653]        # 0x43ee4a
  41a7f7:	lea    rdx,[rip+0x29b1a]        # 0x444318
  41a7fe:	mov    rcx,rbx
  41a801:	call   0x427dd8
  41a806:	lea    rdx,[rip+0x29b2b]        # 0x444338
  41a80d:	mov    rcx,rbx
  41a810:	call   0x427dc8
  41a815:	lea    rdx,[rip+0x29c94]        # 0x4444b0
  41a81c:	mov    rcx,rbx
  41a81f:	call   0x427dc8
  41a824:	jmp    0x41a690
  41a829:	nop    DWORD PTR [rax+0x0]
  41a830:	push   r15
  41a832:	push   r14
  41a834:	push   r13
  41a836:	push   r12
  41a838:	push   rbp
  41a839:	push   rdi
  41a83a:	push   rsi
  41a83b:	push   rbx
  41a83c:	sub    rsp,0x118
  41a843:	mov    rbp,QWORD PTR [rip+0x3a096]        # 0x4548e0
  41a84a:	lea    r12,[rsp+0x70]
  41a84f:	mov    r13,rcx
  41a852:	mov    r15d,edx
  41a855:	mov    ecx,0x13
  41a85a:	mov    r14d,r8d
  41a85d:	mov    r9d,DWORD PTR [rbp+0xe4]
  41a864:	lea    rsi,[rbp+0x28]
  41a868:	mov    rdi,r12
  41a86b:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a86e:	cmp    r9d,0x15ff3
  41a875:	jle    0x41a9e0
  41a87b:	lea    rbx,[rsp+0x50]
  41a880:	mov    rcx,rbx
  41a883:	call   0x427da8
  41a888:	lea    rax,[rip+0x2749d]        # 0x441d2c
  41a88f:	lea    r9,[rip+0x25b9e]        # 0x440434
  41a896:	lea    r8,[rip+0x25b9c]        # 0x440439
  41a89d:	lea    rdx,[rip+0x29dcc]        # 0x444670
  41a8a4:	mov    rcx,rbx
  41a8a7:	mov    QWORD PTR [rsp+0x28],rax
  41a8ac:	lea    rax,[rip+0x2747f]        # 0x441d32
  41a8b3:	mov    QWORD PTR [rsp+0x20],rax
  41a8b8:	call   0x427d70
  41a8bd:	test   r15b,r15b
  41a8c0:	jne    0x41aa50
  41a8c6:	lea    rdx,[rip+0x29e5b]        # 0x444728
  41a8cd:	mov    rcx,rbx
  41a8d0:	call   0x427dc8
  41a8d5:	test   r14b,r14b
  41a8d8:	jne    0x41a8e3
  41a8da:	test   r13,r13
  41a8dd:	je     0x41aa35
  41a8e3:	lea    rdx,[rip+0x29e9e]        # 0x444788
  41a8ea:	mov    rcx,rbx
  41a8ed:	call   0x427dc8
  41a8f2:	lea    rax,[rip+0x29ef7]        # 0x4447f0
  41a8f9:	mov    QWORD PTR [rsp+0x38],0x0
  41a902:	mov    DWORD PTR [rsp+0x20],0x0
  41a90a:	mov    r9d,0x1
  41a910:	mov    r8,r13
  41a913:	mov    rdx,rbx
  41a916:	mov    QWORD PTR [rsp+0x40],rax
  41a91b:	lea    rax,[rip+0x29ef8]        # 0x44481a
  41a922:	mov    QWORD PTR [rsp+0x30],rax
  41a927:	lea    rax,[rip+0x25ed5]        # 0x440803
  41a92e:	mov    QWORD PTR [rsp+0x28],rax
  41a933:	mov    rcx,QWORD PTR [rbp+0x0]
  41a937:	call   0x41e8f0
  41a93c:	lea    rdx,[rip+0x2702b]        # 0x44196e
  41a943:	mov    rcx,rbx
  41a946:	call   0x427dc8
  41a94b:	mov    rcx,QWORD PTR [rsp+0x50]
  41a950:	xor    edx,edx
  41a952:	call   0x4062b0
  41a957:	mov    rcx,rbx
  41a95a:	mov    rsi,rax
  41a95d:	call   0x427d60
  41a962:	xor    eax,eax
  41a964:	test   rsi,rsi
  41a967:	je     0x41a9c9
  41a969:	lea    rax,[rip+0x29eb5]        # 0x444825
  41a970:	mov    r9,QWORD PTR [rbp+0x108]
  41a977:	mov    r8,QWORD PTR [rbp+0x10]
  41a97b:	mov    rdx,r12
  41a97e:	mov    rcx,rsi
  41a981:	mov    QWORD PTR [rsp+0xd0],0x0
  41a98d:	mov    QWORD PTR [rsp+0xe0],rax
  41a995:	lea    rax,[rip+0x2bcfd]        # 0x446699
  41a99c:	mov    BYTE PTR [rsp+0xf0],0x1
  41a9a4:	mov    DWORD PTR [rsp+0x100],0x5
  41a9af:	mov    QWORD PTR [rsp+0xf8],rax
  41a9b7:	call   0x4141a0
  41a9bc:	mov    rcx,rsi
  41a9bf:	call   0x427f68
  41a9c4:	mov    eax,0x1
  41a9c9:	add    rsp,0x118
  41a9d0:	pop    rbx
  41a9d1:	pop    rsi
  41a9d2:	pop    rdi
  41a9d3:	pop    rbp
  41a9d4:	pop    r12
  41a9d6:	pop    r13
  41a9d8:	pop    r14
  41a9da:	pop    r15
  41a9dc:	ret    
  41a9dd:	nop    DWORD PTR [rax]
  41a9e0:	mov    ecx,0x51eb851f
  41a9e5:	mov    eax,r9d
  41a9e8:	mov    r10d,r9d
  41a9eb:	imul   ecx
  41a9ed:	sar    r10d,0x1f
  41a9f1:	sar    edx,0x5
  41a9f4:	mov    r8d,edx
  41a9f7:	sub    r8d,r10d
  41a9fa:	mov    eax,r8d
  41a9fd:	imul   ecx
  41a9ff:	mov    eax,r8d
  41aa02:	sar    eax,0x1f
  41aa05:	sar    edx,0x5
  41aa08:	mov    ecx,edx
  41aa0a:	mov    edx,0x68db8bad
  41aa0f:	sub    ecx,eax
  41aa11:	mov    eax,r9d
  41aa14:	imul   edx
  41aa16:	imul   ecx,ecx,0x64
  41aa19:	sar    edx,0xc
  41aa1c:	sub    r8d,ecx
  41aa1f:	lea    rcx,[rip+0x29c0a]        # 0x444630
  41aa26:	sub    edx,r10d
  41aa29:	call   0x405d90
  41aa2e:	mov    eax,0x1
  41aa33:	jmp    0x41a9c9
  41aa35:	lea    rdx,[rip+0x25d3c]        # 0x440778
  41aa3c:	mov    rcx,rbx
  41aa3f:	call   0x427dc8
  41aa44:	jmp    0x41a8e3
  41aa49:	nop    DWORD PTR [rax+0x0]
  41aa50:	lea    r8,[rip+0x243f3]        # 0x43ee4a
  41aa57:	lea    rdx,[rip+0x29c82]        # 0x4446e0
  41aa5e:	mov    rcx,rbx
  41aa61:	call   0x427dd8
  41aa66:	jmp    0x41a8c6
  41aa6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa70:	push   r15
  41aa72:	push   r14
  41aa74:	push   r13
  41aa76:	push   r12
  41aa78:	push   rbp
  41aa79:	push   rdi
  41aa7a:	push   rsi
  41aa7b:	push   rbx
  41aa7c:	sub    rsp,0x118
  41aa83:	mov    rbp,QWORD PTR [rip+0x39e56]        # 0x4548e0
  41aa8a:	lea    rbx,[rsp+0x50]
  41aa8f:	lea    r12,[rsp+0x70]
  41aa94:	mov    r13,rcx
  41aa97:	mov    ecx,0x13
  41aa9c:	mov    r15d,edx
  41aa9f:	mov    r14d,r8d
  41aaa2:	lea    rsi,[rbp+0x28]
  41aaa6:	mov    rdi,r12
  41aaa9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41aaac:	mov    rcx,rbx
  41aaaf:	call   0x427da8
  41aab4:	lea    r9,[rip+0x25dbf]        # 0x44087a
  41aabb:	lea    r8,[rip+0x25972]        # 0x440434
  41aac2:	lea    rdx,[rip+0x29d6f]        # 0x444838
  41aac9:	mov    rcx,rbx
  41aacc:	call   0x427d70
  41aad1:	test   r15b,r15b
  41aad4:	jne    0x41abd0
  41aada:	lea    rdx,[rip+0x29def]        # 0x4448d0
  41aae1:	mov    rcx,rbx
  41aae4:	call   0x427dd8
  41aae9:	test   r14b,r14b
  41aaec:	sete   r9b
  41aaf0:	test   r13,r13
  41aaf3:	sete   al
  41aaf6:	mov    esi,r9d
  41aaf9:	and    sil,al
  41aafc:	jne    0x41ac10
  41ab02:	lea    rax,[rip+0x25cfa]        # 0x440803
  41ab09:	mov    QWORD PTR [rsp+0x40],0x0
  41ab12:	mov    QWORD PTR [rsp+0x38],0x0
  41ab1b:	mov    QWORD PTR [rsp+0x28],0x0
  41ab24:	mov    DWORD PTR [rsp+0x20],0x0
  41ab2c:	mov    r9d,esi
  41ab2f:	mov    QWORD PTR [rsp+0x30],rax
  41ab34:	mov    rcx,QWORD PTR [rbp+0x0]
  41ab38:	and    r9d,0x1
  41ab3c:	mov    r8,r13
  41ab3f:	mov    rdx,rbx
  41ab42:	call   0x41e8f0
  41ab47:	lea    rdx,[rip+0x25eaa]        # 0x4409f8
  41ab4e:	mov    rcx,rbx
  41ab51:	call   0x427dc8
  41ab56:	mov    rcx,QWORD PTR [rsp+0x50]
  41ab5b:	xor    edx,edx
  41ab5d:	call   0x4062b0
  41ab62:	mov    rcx,rbx
  41ab65:	mov    rsi,rax
  41ab68:	call   0x427d60
  41ab6d:	xor    eax,eax
  41ab6f:	test   rsi,rsi
  41ab72:	je     0x41abba
  41ab74:	mov    r9,QWORD PTR [rbp+0x108]
  41ab7b:	mov    r8,QWORD PTR [rbp+0x10]
  41ab7f:	lea    rax,[rip+0x29db3]        # 0x444939
  41ab86:	mov    rdx,r12
  41ab89:	mov    rcx,rsi
  41ab8c:	mov    QWORD PTR [rsp+0xd0],0x0
  41ab98:	mov    QWORD PTR [rsp+0xe0],rax
  41aba0:	mov    BYTE PTR [rsp+0xf0],0x1
  41aba8:	call   0x4141a0
  41abad:	mov    rcx,rsi
  41abb0:	call   0x427f68
  41abb5:	mov    eax,0x1
  41abba:	add    rsp,0x118
  41abc1:	pop    rbx
  41abc2:	pop    rsi
  41abc3:	pop    rdi
  41abc4:	pop    rbp
  41abc5:	pop    r12
  41abc7:	pop    r13
  41abc9:	pop    r14
  41abcb:	pop    r15
  41abcd:	ret    
  41abce:	xchg   ax,ax
  41abd0:	lea    rdx,[rip+0x25d8f]        # 0x440966
  41abd7:	mov    rcx,rbx
  41abda:	call   0x427dc8
  41abdf:	lea    rdx,[rip+0x29c9d]        # 0x444883
  41abe6:	mov    rcx,rbx
  41abe9:	call   0x414870
  41abee:	lea    r8,[rip+0x24255]        # 0x43ee4a
  41abf5:	lea    rdx,[rip+0x29c94]        # 0x444890
  41abfc:	mov    rcx,rbx
  41abff:	call   0x427dd8
  41ac04:	jmp    0x41aada
  41ac09:	nop    DWORD PTR [rax+0x0]
  41ac10:	lea    rdx,[rip+0x29ce1]        # 0x4448f8
  41ac17:	mov    rcx,rbx
  41ac1a:	call   0x427dc8
  41ac1f:	jmp    0x41ab02
  41ac24:	xchg   ax,ax
  41ac26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac30:	push   r15
  41ac32:	push   r14
  41ac34:	push   r13
  41ac36:	push   r12
  41ac38:	push   rbp
  41ac39:	push   rdi
  41ac3a:	push   rsi
  41ac3b:	push   rbx
  41ac3c:	sub    rsp,0x628
  41ac43:	mov    rbx,QWORD PTR [rip+0x39c96]        # 0x4548e0
  41ac4a:	lea    rbp,[rsp+0xe0]
  41ac52:	mov    r12,rcx
  41ac55:	mov    ecx,0x13
  41ac5a:	lea    rsi,[rbx+0x28]
  41ac5e:	mov    rdi,rbp
  41ac61:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41ac64:	mov    ecx,DWORD PTR [rbx+0xe4]
  41ac6a:	cmp    ecx,0x139ab
  41ac70:	jle    0x41afb5
  41ac76:	test   dl,dl
  41ac78:	jne    0x41ad90
  41ac7e:	lea    rsi,[rsp+0x220]
  41ac86:	mov    rcx,rsi
  41ac89:	call   0x427da8
  41ac8e:	lea    rax,[rip+0x241b5]        # 0x43ee4a
  41ac95:	lea    r9,[rip+0x25798]        # 0x440434
  41ac9c:	lea    r8,[rip+0x25796]        # 0x440439
  41aca3:	lea    rdx,[rip+0x2a286]        # 0x444f30
  41acaa:	mov    rcx,rsi
  41acad:	mov    QWORD PTR [rsp+0x20],rax
  41acb2:	call   0x427d70
  41acb7:	lea    rax,[rip+0x29d5a]        # 0x444a18
  41acbe:	mov    QWORD PTR [rsp+0x38],0x0
  41acc7:	mov    DWORD PTR [rsp+0x20],0x0
  41accf:	xor    r9d,r9d
  41acd2:	mov    r8,r12
  41acd5:	mov    rdx,rsi
  41acd8:	mov    QWORD PTR [rsp+0x40],rax
  41acdd:	lea    rax,[rip+0x29d5e]        # 0x444a42
  41ace4:	mov    QWORD PTR [rsp+0x30],rax
  41ace9:	lea    rax,[rip+0x25b13]        # 0x440803
  41acf0:	mov    QWORD PTR [rsp+0x28],rax
  41acf5:	mov    rcx,QWORD PTR [rbx]
  41acf8:	call   0x41e8f0
  41acfd:	lea    rdx,[rip+0x26c6a]        # 0x44196e
  41ad04:	mov    rcx,rsi
  41ad07:	call   0x427dc8
  41ad0c:	mov    rcx,QWORD PTR [rsp+0x220]
  41ad14:	xor    edx,edx
  41ad16:	call   0x4062b0
  41ad1b:	mov    rcx,rsi
  41ad1e:	mov    r12,rax
  41ad21:	call   0x427d60
  41ad26:	xor    eax,eax
  41ad28:	test   r12,r12
  41ad2b:	je     0x41ad73
  41ad2d:	mov    r9,QWORD PTR [rbx+0x108]
  41ad34:	mov    r8,QWORD PTR [rbx+0x10]
  41ad38:	lea    rax,[rip+0x2a2be]        # 0x444ffd
  41ad3f:	mov    rdx,rbp
  41ad42:	mov    rcx,r12
  41ad45:	mov    QWORD PTR [rsp+0x140],0x0
  41ad51:	mov    QWORD PTR [rsp+0x150],rax
  41ad59:	mov    BYTE PTR [rsp+0x160],0x1
  41ad61:	call   0x4141a0
  41ad66:	mov    rcx,r12
  41ad69:	call   0x427f68
  41ad6e:	mov    eax,0x1
  41ad73:	add    rsp,0x628
  41ad7a:	pop    rbx
  41ad7b:	pop    rsi
  41ad7c:	pop    rdi
  41ad7d:	pop    rbp
  41ad7e:	pop    r12
  41ad80:	pop    r13
  41ad82:	pop    r14
  41ad84:	pop    r15
  41ad86:	ret    
  41ad87:	nop    WORD PTR [rax+rax*1+0x0]
  41ad90:	lea    rsi,[rsp+0xa0]
  41ad98:	mov    rcx,rsi
  41ad9b:	call   0x427da8
  41ada0:	lea    rdx,[rip+0x29be9]        # 0x444990
  41ada7:	mov    rcx,rsi
  41adaa:	call   0x427d70
  41adaf:	lea    rax,[rip+0x29c62]        # 0x444a18
  41adb6:	mov    QWORD PTR [rsp+0x38],0x0
  41adbf:	mov    DWORD PTR [rsp+0x20],0x0
  41adc7:	xor    r9d,r9d
  41adca:	mov    r8,r12
  41adcd:	mov    rdx,rsi
  41add0:	mov    QWORD PTR [rsp+0x40],rax
  41add5:	lea    rax,[rip+0x29c66]        # 0x444a42
  41addc:	mov    QWORD PTR [rsp+0x30],rax
  41ade1:	lea    rax,[rip+0x25a1b]        # 0x440803
  41ade8:	mov    QWORD PTR [rsp+0x28],rax
  41aded:	mov    rcx,QWORD PTR [rbx]
  41adf0:	call   0x41e8f0
  41adf5:	lea    rdx,[rip+0x26b72]        # 0x44196e
  41adfc:	mov    rcx,rsi
  41adff:	call   0x427dc8
  41ae04:	mov    rcx,QWORD PTR [rsp+0xa0]
  41ae0c:	xor    edx,edx
  41ae0e:	call   0x4062b0
  41ae13:	mov    rcx,rsi
  41ae16:	mov    r15,rax
  41ae19:	call   0x427d60
  41ae1e:	xor    eax,eax
  41ae20:	test   r15,r15
  41ae23:	je     0x41ad73
  41ae29:	mov    rcx,r15
  41ae2c:	call   0x427e70
  41ae31:	test   eax,eax
  41ae33:	je     0x41b011
  41ae39:	lea    rax,[rsp+0x180]
  41ae41:	lea    r13,[rsp+0xc0]
  41ae49:	xor    r12d,r12d
  41ae4c:	mov    QWORD PTR [rsp+0x88],rax
  41ae54:	lea    rax,[rbx+0x28]
  41ae58:	mov    QWORD PTR [rsp+0x98],rax
  41ae60:	lea    rax,[rsp+0x220]
  41ae68:	mov    QWORD PTR [rsp+0x80],rax
  41ae70:	mov    rcx,r15
  41ae73:	call   0x427e70
  41ae78:	cmp    r12d,eax
  41ae7b:	jge    0x41b2f1
  41ae81:	xor    r8d,r8d
  41ae84:	mov    edx,r12d
  41ae87:	mov    rcx,r15
  41ae8a:	call   0x427e98
  41ae8f:	mov    r8d,0x1
  41ae95:	mov    edx,r12d
  41ae98:	mov    rcx,r15
  41ae9b:	mov    rbp,rax
  41ae9e:	call   0x427ea8
  41aea3:	test   eax,eax
  41aea5:	je     0x41b040
  41aeab:	mov    r8d,0x2
  41aeb1:	mov    edx,r12d
  41aeb4:	mov    rcx,r15
  41aeb7:	call   0x427e98
  41aebc:	mov    rdi,QWORD PTR [rsp+0x88]
  41aec4:	mov    rsi,QWORD PTR [rsp+0x98]
  41aecc:	mov    ecx,0x13
  41aed1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41aed4:	mov    rcx,r13
  41aed7:	mov    QWORD PTR [rsp+0x90],rax
  41aedf:	call   0x427da8
  41aee4:	lea    rax,[rip+0x29f0d]        # 0x444df8
  41aeeb:	lea    r9,[rip+0x29b8f]        # 0x444a81
  41aef2:	lea    r8,[rip+0x29b8f]        # 0x444a88
  41aef9:	lea    rdx,[rip+0x29b98]        # 0x444a98
  41af00:	mov    rcx,r13
  41af03:	mov    QWORD PTR [rsp+0x70],rbp
  41af08:	mov    QWORD PTR [rsp+0x68],rax
  41af0d:	lea    rax,[rip+0x29ef4]        # 0x444e08
  41af14:	mov    QWORD PTR [rsp+0x60],rbp
  41af19:	mov    QWORD PTR [rsp+0x50],rbp
  41af1e:	mov    QWORD PTR [rsp+0x40],rbp
  41af23:	mov    QWORD PTR [rsp+0x58],rax
  41af28:	lea    rax,[rip+0x29ee6]        # 0x444e15
  41af2f:	mov    QWORD PTR [rsp+0x30],rbp
  41af34:	mov    QWORD PTR [rsp+0x48],rax
  41af39:	lea    rax,[rip+0x29edf]        # 0x444e1f
  41af40:	mov    QWORD PTR [rsp+0x38],rax
  41af45:	lea    rax,[rip+0x23efe]        # 0x43ee4a
  41af4c:	mov    QWORD PTR [rsp+0x28],rax
  41af51:	lea    rax,[rip+0x26b83]        # 0x441adb
  41af58:	mov    QWORD PTR [rsp+0x20],rax
  41af5d:	call   0x427d70
  41af62:	mov    rcx,QWORD PTR [rsp+0xc0]
  41af6a:	xor    edx,edx
  41af6c:	call   0x4062b0
  41af71:	mov    rcx,r13
  41af74:	mov    rsi,rax
  41af77:	call   0x427d60
  41af7c:	test   rsi,rsi
  41af7f:	je     0x41b030
  41af85:	mov    QWORD PTR [rsp+0x1e0],0x0
  41af91:	mov    r8,QWORD PTR [rsp+0x90]
  41af99:	mov    rcx,QWORD PTR [rsp+0x80]
  41afa1:	lea    rdx,[rip+0x29ea1]        # 0x444e49
  41afa8:	xor    r14d,r14d
  41afab:	call   0x426260
  41afb0:	jmp    0x41b162
  41afb5:	mov    r9d,0x51eb851f
  41afbb:	mov    eax,ecx
  41afbd:	mov    r10d,ecx
  41afc0:	imul   r9d
  41afc3:	sar    r10d,0x1f
  41afc7:	sar    edx,0x5
  41afca:	mov    r8d,edx
  41afcd:	sub    r8d,r10d
  41afd0:	mov    eax,r8d
  41afd3:	imul   r9d
  41afd6:	mov    eax,r8d
  41afd9:	sar    eax,0x1f
  41afdc:	sar    edx,0x5
  41afdf:	mov    r9d,edx
  41afe2:	mov    edx,0x68db8bad
  41afe7:	sub    r9d,eax
  41afea:	mov    eax,ecx
  41afec:	lea    rcx,[rip+0x2995d]        # 0x444950
  41aff3:	imul   edx
  41aff5:	imul   r9d,r9d,0x64
  41aff9:	sar    edx,0xc
  41affc:	sub    edx,r10d
  41afff:	sub    r8d,r9d
  41b002:	call   0x405d90
  41b007:	mov    eax,0x1
  41b00c:	jmp    0x41ad73
  41b011:	cmp    BYTE PTR [rbx+0x11a],0x0
  41b018:	jne    0x41b030
  41b01a:	lea    rcx,[rip+0x29a2f]        # 0x444a50
  41b021:	mov    rdx,r12
  41b024:	call   0x405d90
  41b029:	nop    DWORD PTR [rax+0x0]
  41b030:	mov    rcx,r15
  41b033:	call   0x427f68
  41b038:	xor    eax,eax
  41b03a:	jmp    0x41ad73
  41b03f:	nop
  41b040:	mov    r8d,0x1
  41b046:	mov    edx,r12d
  41b049:	mov    rcx,r15
  41b04c:	call   0x427e98
  41b051:	mov    r8d,0x2
  41b057:	mov    edx,r12d
  41b05a:	mov    rcx,r15
  41b05d:	mov    r14,rax
  41b060:	call   0x427e98
  41b065:	mov    rdi,QWORD PTR [rsp+0x88]
  41b06d:	mov    rsi,QWORD PTR [rsp+0x98]
  41b075:	mov    ecx,0x13
  41b07a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b07d:	lea    rdi,[rip+0x29d74]        # 0x444df8
  41b084:	mov    rcx,r13
  41b087:	mov    QWORD PTR [rsp+0x90],rax
  41b08f:	call   0x427da8
  41b094:	mov    QWORD PTR [rsp+0x68],rdi
  41b099:	lea    rdi,[rip+0x29d68]        # 0x444e08
  41b0a0:	lea    r9,[rip+0x299da]        # 0x444a81
  41b0a7:	lea    r8,[rip+0x299da]        # 0x444a88
  41b0ae:	lea    rdx,[rip+0x299e3]        # 0x444a98
  41b0b5:	mov    rcx,r13
  41b0b8:	mov    QWORD PTR [rsp+0x58],rdi
  41b0bd:	lea    rdi,[rip+0x29d51]        # 0x444e15
  41b0c4:	mov    QWORD PTR [rsp+0x70],rbp
  41b0c9:	mov    QWORD PTR [rsp+0x60],rbp
  41b0ce:	mov    QWORD PTR [rsp+0x50],rbp
  41b0d3:	mov    QWORD PTR [rsp+0x48],rdi
  41b0d8:	lea    rdi,[rip+0x29d40]        # 0x444e1f
  41b0df:	mov    QWORD PTR [rsp+0x40],rbp
  41b0e4:	mov    QWORD PTR [rsp+0x30],rbp
  41b0e9:	mov    QWORD PTR [rsp+0x38],rdi
  41b0ee:	lea    rdi,[rip+0x23d55]        # 0x43ee4a
  41b0f5:	mov    QWORD PTR [rsp+0x28],rdi
  41b0fa:	lea    rdi,[rip+0x269da]        # 0x441adb
  41b101:	mov    QWORD PTR [rsp+0x20],rdi
  41b106:	call   0x427d70
  41b10b:	mov    rcx,QWORD PTR [rsp+0xc0]
  41b113:	xor    edx,edx
  41b115:	call   0x4062b0
  41b11a:	mov    rcx,r13
  41b11d:	mov    rsi,rax
  41b120:	call   0x427d60
  41b125:	test   rsi,rsi
  41b128:	je     0x41b030
  41b12e:	test   r14,r14
  41b131:	mov    QWORD PTR [rsp+0x1e0],0x0
  41b13d:	je     0x41af91
  41b143:	mov    r9,QWORD PTR [rsp+0x90]
  41b14b:	mov    rcx,QWORD PTR [rsp+0x80]
  41b153:	lea    rdx,[rip+0x29cd4]        # 0x444e2e
  41b15a:	mov    r8,r14
  41b15d:	call   0x426260
  41b162:	mov    r9,QWORD PTR [rbx+0x108]
  41b169:	mov    r8,QWORD PTR [rbx+0x10]
  41b16d:	lea    rax,[rip+0x2b522]        # 0x446696
  41b174:	mov    rdx,QWORD PTR [rsp+0x88]
  41b17c:	mov    rdi,QWORD PTR [rsp+0x80]
  41b184:	mov    rcx,rsi
  41b187:	mov    QWORD PTR [rsp+0x208],rax
  41b18f:	mov    QWORD PTR [rsp+0x1f8],0x0
  41b19b:	mov    BYTE PTR [rsp+0x18d],0x0
  41b1a3:	mov    BYTE PTR [rsp+0x200],0x1
  41b1ab:	mov    QWORD PTR [rsp+0x1f0],rdi
  41b1b3:	mov    DWORD PTR [rsp+0x210],0x3
  41b1be:	call   0x4141a0
  41b1c3:	mov    rcx,rsi
  41b1c6:	call   0x427f68
  41b1cb:	mov    rcx,r13
  41b1ce:	call   0x427da8
  41b1d3:	lea    r9,[rip+0x23c70]        # 0x43ee4a
  41b1da:	lea    r8,[rip+0x29c80]        # 0x444e61
  41b1e1:	lea    rdx,[rip+0x29c88]        # 0x444e70
  41b1e8:	mov    rcx,r13
  41b1eb:	mov    QWORD PTR [rsp+0x20],rbp
  41b1f0:	call   0x427d70
  41b1f5:	mov    rcx,QWORD PTR [rsp+0xc0]
  41b1fd:	xor    edx,edx
  41b1ff:	call   0x4062b0
  41b204:	mov    rcx,r13
  41b207:	mov    rsi,rax
  41b20a:	call   0x427d60
  41b20f:	test   rsi,rsi
  41b212:	je     0x41b030
  41b218:	test   r14,r14
  41b21b:	mov    QWORD PTR [rsp+0x1e0],0x0
  41b227:	je     0x41b2d0
  41b22d:	mov    r9,QWORD PTR [rsp+0x90]
  41b235:	lea    rdx,[rip+0x29cb4]        # 0x444ef0
  41b23c:	mov    r8,r14
  41b23f:	mov    rcx,rdi
  41b242:	call   0x426260
  41b247:	mov    rax,QWORD PTR [rsp+0x80]
  41b24f:	mov    r9,QWORD PTR [rbx+0x108]
  41b256:	mov    rcx,rsi
  41b259:	mov    r8,QWORD PTR [rbx+0x10]
  41b25d:	mov    rdx,QWORD PTR [rsp+0x88]
  41b265:	mov    QWORD PTR [rsp+0x1f8],0x0
  41b271:	mov    BYTE PTR [rsp+0x18d],0x1
  41b279:	mov    QWORD PTR [rsp+0x1f0],rax
  41b281:	mov    BYTE PTR [rsp+0x200],0x1
  41b289:	mov    QWORD PTR [rsp+0x208],0x0
  41b295:	mov    DWORD PTR [rsp+0x210],0x0
  41b2a0:	call   0x4141a0
  41b2a5:	mov    rcx,rsi
  41b2a8:	call   0x427f68
  41b2ad:	mov    rax,QWORD PTR [rip+0x3955c]        # 0x454810
  41b2b4:	movzx  eax,BYTE PTR [rax]
  41b2b7:	test   al,al
  41b2b9:	jne    0x41b030
  41b2bf:	add    r12d,0x1
  41b2c3:	jmp    0x41ae70
  41b2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2d0:	mov    r8,QWORD PTR [rsp+0x90]
  41b2d8:	mov    rcx,QWORD PTR [rsp+0x80]
  41b2e0:	lea    rdx,[rip+0x29c28]        # 0x444f0f
  41b2e7:	call   0x426260
  41b2ec:	jmp    0x41b247
  41b2f1:	mov    rcx,r15
  41b2f4:	call   0x427f68
  41b2f9:	mov    eax,0x1
  41b2fe:	jmp    0x41ad73
  41b303:	nop    DWORD PTR [rax]
  41b306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b310:	push   r14
  41b312:	push   r13
  41b314:	push   r12
  41b316:	push   rbp
  41b317:	push   rdi
  41b318:	push   rsi
  41b319:	push   rbx
  41b31a:	sub    rsp,0x110
  41b321:	mov    rbp,QWORD PTR [rip+0x395b8]        # 0x4548e0
  41b328:	lea    r12,[rsp+0x70]
  41b32d:	mov    r13,rcx
  41b330:	mov    r14d,edx
  41b333:	mov    ecx,0x13
  41b338:	mov    r9d,DWORD PTR [rbp+0xe4]
  41b33f:	lea    rsi,[rbp+0x28]
  41b343:	mov    rdi,r12
  41b346:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b349:	cmp    r9d,0x139ab
  41b350:	jle    0x41b480
  41b356:	lea    rbx,[rsp+0x50]
  41b35b:	mov    rcx,rbx
  41b35e:	call   0x427da8
  41b363:	lea    r9,[rip+0x250ca]        # 0x440434
  41b36a:	lea    r8,[rip+0x250c8]        # 0x440439
  41b371:	lea    rdx,[rip+0x29ca8]        # 0x445020
  41b378:	mov    rcx,rbx
  41b37b:	call   0x427d70
  41b380:	test   r14b,r14b
  41b383:	jne    0x41b4d5
  41b389:	lea    r8,[rip+0x23aba]        # 0x43ee4a
  41b390:	lea    rdx,[rip+0x29de9]        # 0x445180
  41b397:	mov    rcx,rbx
  41b39a:	call   0x427dd8
  41b39f:	lea    rdx,[rip+0x29e1a]        # 0x4451c0
  41b3a6:	mov    rcx,rbx
  41b3a9:	call   0x427dc8
  41b3ae:	lea    rax,[rip+0x29e6b]        # 0x445220
  41b3b5:	mov    QWORD PTR [rsp+0x38],0x0
  41b3be:	mov    DWORD PTR [rsp+0x20],0x0
  41b3c6:	xor    r9d,r9d
  41b3c9:	mov    r8,r13
  41b3cc:	mov    rdx,rbx
  41b3cf:	mov    QWORD PTR [rsp+0x40],rax
  41b3d4:	lea    rax,[rip+0x29e6d]        # 0x445248
  41b3db:	mov    QWORD PTR [rsp+0x30],rax
  41b3e0:	lea    rax,[rip+0x2541c]        # 0x440803
  41b3e7:	mov    QWORD PTR [rsp+0x28],rax
  41b3ec:	mov    rcx,QWORD PTR [rbp+0x0]
  41b3f0:	call   0x41e8f0
  41b3f5:	lea    rdx,[rip+0x26572]        # 0x44196e
  41b3fc:	mov    rcx,rbx
  41b3ff:	call   0x427dc8
  41b404:	mov    rcx,QWORD PTR [rsp+0x50]
  41b409:	xor    edx,edx
  41b40b:	call   0x4062b0
  41b410:	mov    rcx,rbx
  41b413:	mov    rsi,rax
  41b416:	call   0x427d60
  41b41b:	xor    eax,eax
  41b41d:	test   rsi,rsi
  41b420:	je     0x41b468
  41b422:	mov    r9,QWORD PTR [rbp+0x108]
  41b429:	mov    r8,QWORD PTR [rbp+0x10]
  41b42d:	lea    rax,[rip+0x29e24]        # 0x445258
  41b434:	mov    rdx,r12
  41b437:	mov    rcx,rsi
  41b43a:	mov    QWORD PTR [rsp+0xd0],0x0
  41b446:	mov    QWORD PTR [rsp+0xe0],rax
  41b44e:	mov    BYTE PTR [rsp+0xf0],0x1
  41b456:	call   0x4141a0
  41b45b:	mov    rcx,rsi
  41b45e:	call   0x427f68
  41b463:	mov    eax,0x1
  41b468:	add    rsp,0x110
  41b46f:	pop    rbx
  41b470:	pop    rsi
  41b471:	pop    rdi
  41b472:	pop    rbp
  41b473:	pop    r12
  41b475:	pop    r13
  41b477:	pop    r14
  41b479:	ret    
  41b47a:	nop    WORD PTR [rax+rax*1+0x0]
  41b480:	mov    ecx,0x51eb851f
  41b485:	mov    eax,r9d
  41b488:	mov    r10d,r9d
  41b48b:	imul   ecx
  41b48d:	sar    r10d,0x1f
  41b491:	sar    edx,0x5
  41b494:	mov    r8d,edx
  41b497:	sub    r8d,r10d
  41b49a:	mov    eax,r8d
  41b49d:	imul   ecx
  41b49f:	mov    eax,r8d
  41b4a2:	sar    eax,0x1f
  41b4a5:	sar    edx,0x5
  41b4a8:	mov    ecx,edx
  41b4aa:	mov    edx,0x68db8bad
  41b4af:	sub    ecx,eax
  41b4b1:	mov    eax,r9d
  41b4b4:	imul   edx
  41b4b6:	imul   ecx,ecx,0x64
  41b4b9:	sar    edx,0xc
  41b4bc:	sub    r8d,ecx
  41b4bf:	lea    rcx,[rip+0x2948a]        # 0x444950
  41b4c6:	sub    edx,r10d
  41b4c9:	call   0x405d90
  41b4ce:	mov    eax,0x1
  41b4d3:	jmp    0x41b468
  41b4d5:	lea    r9,[rip+0x29b78]        # 0x445054
  41b4dc:	lea    r8,[rip+0x29b7e]        # 0x445061
  41b4e3:	lea    rdx,[rip+0x29b86]        # 0x445070
  41b4ea:	mov    rcx,rbx
  41b4ed:	call   0x427dd8
  41b4f2:	jmp    0x41b389
  41b4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b500:	push   r13
  41b502:	push   r12
  41b504:	push   rbp
  41b505:	push   rdi
  41b506:	push   rsi
  41b507:	push   rbx
  41b508:	sub    rsp,0x118
  41b50f:	mov    rbx,QWORD PTR [rip+0x393ca]        # 0x4548e0
  41b516:	lea    rbp,[rsp+0x70]
  41b51b:	mov    r12,rcx
  41b51e:	mov    r13d,edx
  41b521:	mov    ecx,0x13
  41b526:	mov    r9d,DWORD PTR [rbx+0xe4]
  41b52d:	lea    rsi,[rbx+0x28]
  41b531:	mov    rdi,rbp
  41b534:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b537:	cmp    r9d,0x139ab
  41b53e:	jle    0x41b6a0
  41b544:	lea    rsi,[rsp+0x50]
  41b549:	mov    rcx,rsi
  41b54c:	call   0x427da8
  41b551:	test   r13b,r13b
  41b554:	lea    rax,[rip+0x238ef]        # 0x43ee4a
  41b55b:	jne    0x41b660
  41b561:	lea    r9,[rip+0x24ecc]        # 0x440434
  41b568:	lea    r8,[rip+0x24eca]        # 0x440439
  41b56f:	lea    rdx,[rip+0x29de2]        # 0x445358
  41b576:	mov    QWORD PTR [rsp+0x20],rax
  41b57b:	mov    rcx,rsi
  41b57e:	call   0x427d70
  41b583:	lea    rdx,[rip+0x29e46]        # 0x4453d0
  41b58a:	mov    rcx,rsi
  41b58d:	call   0x427dc8
  41b592:	lea    rax,[rip+0x29e9f]        # 0x445438
  41b599:	mov    QWORD PTR [rsp+0x38],0x0
  41b5a2:	mov    DWORD PTR [rsp+0x20],0x0
  41b5aa:	xor    r9d,r9d
  41b5ad:	mov    r8,r12
  41b5b0:	mov    rdx,rsi
  41b5b3:	mov    QWORD PTR [rsp+0x40],rax
  41b5b8:	lea    rax,[rip+0x29ea5]        # 0x445464
  41b5bf:	mov    QWORD PTR [rsp+0x30],rax
  41b5c4:	lea    rax,[rip+0x25238]        # 0x440803
  41b5cb:	mov    QWORD PTR [rsp+0x28],rax
  41b5d0:	mov    rcx,QWORD PTR [rbx]
  41b5d3:	call   0x41e8f0
  41b5d8:	lea    rdx,[rip+0x2638f]        # 0x44196e
  41b5df:	mov    rcx,rsi
  41b5e2:	call   0x427dc8
  41b5e7:	mov    rcx,QWORD PTR [rsp+0x50]
  41b5ec:	xor    edx,edx
  41b5ee:	call   0x4062b0
  41b5f3:	mov    rcx,rsi
  41b5f6:	mov    r12,rax
  41b5f9:	call   0x427d60
  41b5fe:	xor    eax,eax
  41b600:	test   r12,r12
  41b603:	je     0x41b64b
  41b605:	mov    r9,QWORD PTR [rbx+0x108]
  41b60c:	mov    r8,QWORD PTR [rbx+0x10]
  41b610:	lea    rax,[rip+0x29e58]        # 0x44546f
  41b617:	mov    rdx,rbp
  41b61a:	mov    rcx,r12
  41b61d:	mov    QWORD PTR [rsp+0xd0],0x0
  41b629:	mov    QWORD PTR [rsp+0xe0],rax
  41b631:	mov    BYTE PTR [rsp+0xf0],0x1
  41b639:	call   0x4141a0
  41b63e:	mov    rcx,r12
  41b641:	call   0x427f68
  41b646:	mov    eax,0x1
  41b64b:	add    rsp,0x118
  41b652:	pop    rbx
  41b653:	pop    rsi
  41b654:	pop    rdi
  41b655:	pop    rbp
  41b656:	pop    r12
  41b658:	pop    r13
  41b65a:	ret    
  41b65b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b660:	mov    QWORD PTR [rsp+0x30],rax
  41b665:	lea    rax,[rip+0x29cdc]        # 0x445348
  41b66c:	lea    r9,[rip+0x24dc1]        # 0x440434
  41b673:	lea    r8,[rip+0x24dbf]        # 0x440439
  41b67a:	lea    rdx,[rip+0x29bff]        # 0x445280
  41b681:	mov    rcx,rsi
  41b684:	mov    QWORD PTR [rsp+0x28],rax
  41b689:	lea    rax,[rip+0x29cbf]        # 0x44534f
  41b690:	mov    QWORD PTR [rsp+0x20],rax
  41b695:	call   0x427d70
  41b69a:	jmp    0x41b583
  41b69f:	nop
  41b6a0:	mov    eax,r9d
  41b6a3:	mov    ecx,0x51eb851f
  41b6a8:	mov    r10d,r9d
  41b6ab:	imul   ecx
  41b6ad:	sar    r10d,0x1f
  41b6b1:	sar    edx,0x5
  41b6b4:	mov    r8d,edx
  41b6b7:	sub    r8d,r10d
  41b6ba:	mov    eax,r8d
  41b6bd:	imul   ecx
  41b6bf:	mov    eax,r8d
  41b6c2:	sar    eax,0x1f
  41b6c5:	sar    edx,0x5
  41b6c8:	mov    ecx,edx
  41b6ca:	mov    edx,0x68db8bad
  41b6cf:	sub    ecx,eax
  41b6d1:	mov    eax,r9d
  41b6d4:	imul   edx
  41b6d6:	imul   ecx,ecx,0x64
  41b6d9:	sar    edx,0xc
  41b6dc:	sub    r8d,ecx
  41b6df:	lea    rcx,[rip+0x2926a]        # 0x444950
  41b6e6:	sub    edx,r10d
  41b6e9:	call   0x405d90
  41b6ee:	mov    eax,0x1
  41b6f3:	add    rsp,0x118
  41b6fa:	pop    rbx
  41b6fb:	pop    rsi
  41b6fc:	pop    rdi
  41b6fd:	pop    rbp
  41b6fe:	pop    r12
  41b700:	pop    r13
  41b702:	ret    
  41b703:	nop    DWORD PTR [rax]
  41b706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b710:	push   r15
  41b712:	push   r14
  41b714:	push   r13
  41b716:	push   r12
  41b718:	push   rbp
  41b719:	push   rdi
  41b71a:	push   rsi
  41b71b:	push   rbx
  41b71c:	sub    rsp,0x228
  41b723:	mov    r15,QWORD PTR [rip+0x391b6]        # 0x4548e0
  41b72a:	lea    rbx,[rsp+0xe0]
  41b732:	mov    rbp,rcx
  41b735:	mov    ecx,0x13
  41b73a:	lea    rsi,[r15+0x28]
  41b73e:	mov    rdi,rbx
  41b741:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b744:	mov    ecx,DWORD PTR [r15+0xe4]
  41b74b:	cmp    ecx,0x139ab
  41b751:	jle    0x41bb10
  41b757:	test   dl,dl
  41b759:	jne    0x41b870
  41b75f:	lea    rsi,[rsp+0x180]
  41b767:	mov    rcx,rsi
  41b76a:	call   0x427da8
  41b76f:	lea    rax,[rip+0x236d4]        # 0x43ee4a
  41b776:	lea    r9,[rip+0x24cb7]        # 0x440434
  41b77d:	lea    r8,[rip+0x24cb5]        # 0x440439
  41b784:	lea    rdx,[rip+0x2a195]        # 0x445920
  41b78b:	mov    rcx,rsi
  41b78e:	mov    QWORD PTR [rsp+0x20],rax
  41b793:	call   0x427d70
  41b798:	lea    rax,[rip+0x29e29]        # 0x4455c8
  41b79f:	mov    QWORD PTR [rsp+0x38],0x0
  41b7a8:	mov    DWORD PTR [rsp+0x20],0x0
  41b7b0:	xor    r9d,r9d
  41b7b3:	mov    r8,rbp
  41b7b6:	mov    rdx,rsi
  41b7b9:	mov    QWORD PTR [rsp+0x40],rax
  41b7be:	lea    rax,[rip+0x29e2d]        # 0x4455f2
  41b7c5:	mov    QWORD PTR [rsp+0x30],rax
  41b7ca:	lea    rax,[rip+0x25032]        # 0x440803
  41b7d1:	mov    QWORD PTR [rsp+0x28],rax
  41b7d6:	mov    rcx,QWORD PTR [r15]
  41b7d9:	call   0x41e8f0
  41b7de:	lea    rdx,[rip+0x26189]        # 0x44196e
  41b7e5:	mov    rcx,rsi
  41b7e8:	call   0x427dc8
  41b7ed:	mov    rcx,QWORD PTR [rsp+0x180]
  41b7f5:	xor    edx,edx
  41b7f7:	call   0x4062b0
  41b7fc:	mov    rcx,rsi
  41b7ff:	mov    rbp,rax
  41b802:	call   0x427d60
  41b807:	xor    eax,eax
  41b809:	test   rbp,rbp
  41b80c:	je     0x41b854
  41b80e:	mov    r9,QWORD PTR [r15+0x108]
  41b815:	mov    r8,QWORD PTR [r15+0x10]
  41b819:	lea    rax,[rip+0x2a1d0]        # 0x4459f0
  41b820:	mov    rdx,rbx
  41b823:	mov    rcx,rbp
  41b826:	mov    QWORD PTR [rsp+0x140],0x0
  41b832:	mov    QWORD PTR [rsp+0x150],rax
  41b83a:	mov    BYTE PTR [rsp+0x160],0x1
  41b842:	call   0x4141a0
  41b847:	mov    rcx,rbp
  41b84a:	call   0x427f68
  41b84f:	mov    eax,0x1
  41b854:	add    rsp,0x228
  41b85b:	pop    rbx
  41b85c:	pop    rsi
  41b85d:	pop    rdi
  41b85e:	pop    rbp
  41b85f:	pop    r12
  41b861:	pop    r13
  41b863:	pop    r14
  41b865:	pop    r15
  41b867:	ret    
  41b868:	nop    DWORD PTR [rax+rax*1+0x0]
  41b870:	lea    rbx,[rsp+0x80]
  41b878:	mov    rcx,rbx
  41b87b:	call   0x427da8
  41b880:	lea    rdx,[rip+0x29c09]        # 0x445490
  41b887:	mov    rcx,rbx
  41b88a:	call   0x427d70
  41b88f:	lea    rax,[rip+0x29d32]        # 0x4455c8
  41b896:	mov    QWORD PTR [rsp+0x38],0x0
  41b89f:	mov    DWORD PTR [rsp+0x20],0x0
  41b8a7:	mov    r9d,0x1
  41b8ad:	mov    r8,rbp
  41b8b0:	mov    rdx,rbx
  41b8b3:	mov    QWORD PTR [rsp+0x40],rax
  41b8b8:	lea    rax,[rip+0x29d33]        # 0x4455f2
  41b8bf:	mov    QWORD PTR [rsp+0x30],rax
  41b8c4:	lea    rax,[rip+0x24f38]        # 0x440803
  41b8cb:	mov    QWORD PTR [rsp+0x28],rax
  41b8d0:	mov    rcx,QWORD PTR [r15]
  41b8d3:	call   0x41e8f0
  41b8d8:	lea    rdx,[rip+0x29d1d]        # 0x4455fc
  41b8df:	mov    rcx,rbx
  41b8e2:	call   0x427dc8
  41b8e7:	mov    rcx,QWORD PTR [rsp+0x80]
  41b8ef:	xor    edx,edx
  41b8f1:	call   0x4062b0
  41b8f6:	mov    rcx,rbx
  41b8f9:	mov    r14,rax
  41b8fc:	call   0x427d60
  41b901:	xor    eax,eax
  41b903:	test   r14,r14
  41b906:	je     0x41b854
  41b90c:	mov    rcx,r14
  41b90f:	call   0x427e70
  41b914:	test   eax,eax
  41b916:	je     0x41bb70
  41b91c:	lea    rax,[rsp+0x180]
  41b924:	xor    ebx,ebx
  41b926:	mov    QWORD PTR [rsp+0x58],rax
  41b92b:	lea    rax,[r15+0x28]
  41b92f:	mov    QWORD PTR [rsp+0x70],rax
  41b934:	lea    rax,[rsp+0xa0]
  41b93c:	mov    QWORD PTR [rsp+0x78],rax
  41b941:	lea    rax,[rsp+0xc0]
  41b949:	mov    r13,rax
  41b94c:	jmp    0x41baa6
  41b951:	mov    r8d,0x3
  41b957:	mov    edx,ebx
  41b959:	mov    rcx,r14
  41b95c:	call   0x427e98
  41b961:	mov    r8d,0x4
  41b967:	mov    edx,ebx
  41b969:	mov    rcx,r14
  41b96c:	mov    QWORD PTR [rsp+0x68],rax
  41b971:	xor    ebp,ebp
  41b973:	call   0x427ea8
  41b978:	test   eax,eax
  41b97a:	je     0x41bba0
  41b980:	mov    rdi,QWORD PTR [rsp+0x58]
  41b985:	mov    rsi,QWORD PTR [rsp+0x70]
  41b98a:	mov    ecx,0x13
  41b98f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b992:	mov    rdi,QWORD PTR [rsp+0x78]
  41b997:	mov    rcx,rdi
  41b99a:	call   0x427da8
  41b99f:	mov    rax,QWORD PTR [rsp+0x50]
  41b9a4:	lea    r9,[rip+0x29c9d]        # 0x445648
  41b9ab:	lea    r8,[rip+0x29ca3]        # 0x445655
  41b9b2:	lea    rdx,[rip+0x29ca7]        # 0x445660
  41b9b9:	mov    rcx,rdi
  41b9bc:	mov    QWORD PTR [rsp+0x20],rax
  41b9c1:	call   0x427d70
  41b9c6:	mov    rcx,QWORD PTR [rsp+0xa0]
  41b9ce:	xor    edx,edx
  41b9d0:	call   0x4062b0
  41b9d5:	mov    rcx,rdi
  41b9d8:	mov    rsi,rax
  41b9db:	call   0x427d60
  41b9e0:	test   rsi,rsi
  41b9e3:	je     0x41bb90
  41b9e9:	mov    rcx,r13
  41b9ec:	call   0x427da8
  41b9f1:	test   r12,r12
  41b9f4:	je     0x41bbe0
  41b9fa:	mov    r9,QWORD PTR [rsp+0x60]
  41b9ff:	lea    rdx,[rip+0x29eb2]        # 0x4458b8
  41ba06:	mov    r8,r12
  41ba09:	mov    rcx,r13
  41ba0c:	call   0x427dd8
  41ba11:	test   rbp,rbp
  41ba14:	je     0x41bbc0
  41ba1a:	mov    r9,QWORD PTR [rsp+0x68]
  41ba1f:	lea    rdx,[rip+0x29ed9]        # 0x4458ff
  41ba26:	mov    r8,rbp
  41ba29:	mov    rcx,r13
  41ba2c:	call   0x427dd8
  41ba31:	mov    rax,QWORD PTR [rsp+0xc0]
  41ba39:	mov    r9,QWORD PTR [r15+0x108]
  41ba40:	mov    rcx,rsi
  41ba43:	mov    r8,QWORD PTR [r15+0x10]
  41ba47:	mov    rdx,QWORD PTR [rsp+0x58]
  41ba4c:	mov    QWORD PTR [rsp+0x1e0],0x0
  41ba58:	mov    QWORD PTR [rsp+0x1f8],0x0
  41ba64:	mov    QWORD PTR [rsp+0x1f0],rax
  41ba6c:	mov    BYTE PTR [rsp+0x18d],0x0
  41ba74:	mov    BYTE PTR [rsp+0x200],0x1
  41ba7c:	call   0x4141a0
  41ba81:	mov    rcx,r13
  41ba84:	call   0x427d60
  41ba89:	mov    rcx,rsi
  41ba8c:	call   0x427f68
  41ba91:	mov    rax,QWORD PTR [rip+0x38d78]        # 0x454810
  41ba98:	movzx  eax,BYTE PTR [rax]
  41ba9b:	test   al,al
  41ba9d:	jne    0x41bb90
  41baa3:	add    ebx,0x1
  41baa6:	mov    rcx,r14
  41baa9:	call   0x427e70
  41baae:	cmp    ebx,eax
  41bab0:	jge    0x41bc00
  41bab6:	xor    r8d,r8d
  41bab9:	mov    edx,ebx
  41babb:	mov    rcx,r14
  41babe:	call   0x427e98
  41bac3:	mov    r8d,0x1
  41bac9:	mov    edx,ebx
  41bacb:	mov    rcx,r14
  41bace:	mov    QWORD PTR [rsp+0x50],rax
  41bad3:	xor    r12d,r12d
  41bad6:	call   0x427e98
  41badb:	mov    r8d,0x2
  41bae1:	mov    edx,ebx
  41bae3:	mov    rcx,r14
  41bae6:	mov    QWORD PTR [rsp+0x60],rax
  41baeb:	call   0x427ea8
  41baf0:	test   eax,eax
  41baf2:	jne    0x41b951
  41baf8:	mov    r8d,0x2
  41bafe:	mov    edx,ebx
  41bb00:	mov    rcx,r14
  41bb03:	call   0x427e98
  41bb08:	mov    r12,rax
  41bb0b:	jmp    0x41b951
  41bb10:	mov    r9d,0x51eb851f
  41bb16:	mov    eax,ecx
  41bb18:	mov    r10d,ecx
  41bb1b:	imul   r9d
  41bb1e:	sar    r10d,0x1f
  41bb22:	sar    edx,0x5
  41bb25:	mov    r8d,edx
  41bb28:	sub    r8d,r10d
  41bb2b:	mov    eax,r8d
  41bb2e:	imul   r9d
  41bb31:	mov    eax,r8d
  41bb34:	sar    eax,0x1f
  41bb37:	sar    edx,0x5
  41bb3a:	mov    r9d,edx
  41bb3d:	mov    edx,0x68db8bad
  41bb42:	sub    r9d,eax
  41bb45:	mov    eax,ecx
  41bb47:	lea    rcx,[rip+0x28e02]        # 0x444950
  41bb4e:	imul   edx
  41bb50:	imul   r9d,r9d,0x64
  41bb54:	sar    edx,0xc
  41bb57:	sub    edx,r10d
  41bb5a:	sub    r8d,r9d
  41bb5d:	call   0x405d90
  41bb62:	mov    eax,0x1
  41bb67:	jmp    0x41b854
  41bb6c:	nop    DWORD PTR [rax+0x0]
  41bb70:	cmp    BYTE PTR [r15+0x11a],0x0
  41bb78:	jne    0x41bb90
  41bb7a:	lea    rcx,[rip+0x29a8f]        # 0x445610
  41bb81:	mov    rdx,rbp
  41bb84:	call   0x405d90
  41bb89:	nop    DWORD PTR [rax+0x0]
  41bb90:	mov    rcx,r14
  41bb93:	call   0x427f68
  41bb98:	xor    eax,eax
  41bb9a:	jmp    0x41b854
  41bb9f:	nop
  41bba0:	mov    r8d,0x4
  41bba6:	mov    edx,ebx
  41bba8:	mov    rcx,r14
  41bbab:	call   0x427e98
  41bbb0:	mov    rbp,rax
  41bbb3:	jmp    0x41b980
  41bbb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbc0:	mov    r8,QWORD PTR [rsp+0x68]
  41bbc5:	lea    rdx,[rip+0x29d44]        # 0x445910
  41bbcc:	mov    rcx,r13
  41bbcf:	call   0x427dd8
  41bbd4:	jmp    0x41ba31
  41bbd9:	nop    DWORD PTR [rax+0x0]
  41bbe0:	mov    r8,QWORD PTR [rsp+0x60]
  41bbe5:	lea    rdx,[rip+0x29cf4]        # 0x4458e0
  41bbec:	mov    rcx,r13
  41bbef:	call   0x427dd8
  41bbf4:	jmp    0x41ba11
  41bbf9:	nop    DWORD PTR [rax+0x0]
  41bc00:	mov    rcx,r14
  41bc03:	call   0x427f68
  41bc08:	mov    eax,0x1
  41bc0d:	jmp    0x41b854
  41bc12:	nop    DWORD PTR [rax+0x0]
  41bc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc20:	push   r14
  41bc22:	push   r13
  41bc24:	push   r12
  41bc26:	push   rbp
  41bc27:	push   rdi
  41bc28:	push   rsi
  41bc29:	push   rbx
  41bc2a:	sub    rsp,0x110
  41bc31:	mov    rbp,QWORD PTR [rip+0x38ca8]        # 0x4548e0
  41bc38:	lea    r12,[rsp+0x70]
  41bc3d:	mov    r13,rcx
  41bc40:	mov    r14d,edx
  41bc43:	mov    ecx,0x13
  41bc48:	mov    r9d,DWORD PTR [rbp+0xe4]
  41bc4f:	lea    rsi,[rbp+0x28]
  41bc53:	mov    rdi,r12
  41bc56:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41bc59:	cmp    r9d,0x13a0f
  41bc60:	jle    0x41bd94
  41bc66:	lea    rbx,[rsp+0x50]
  41bc6b:	mov    rcx,rbx
  41bc6e:	call   0x427da8
  41bc73:	lea    r9,[rip+0x24c00]        # 0x44087a
  41bc7a:	lea    r8,[rip+0x247b3]        # 0x440434
  41bc81:	lea    rdx,[rip+0x29dd8]        # 0x445a60
  41bc88:	mov    rcx,rbx
  41bc8b:	call   0x427d70
  41bc90:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41bc9a:	jg     0x41be63
  41bca0:	lea    r8,[rip+0x27abc]        # 0x443763
  41bca7:	lea    rdx,[rip+0x29e42]        # 0x445af0
  41bcae:	mov    rcx,rbx
  41bcb1:	call   0x427dd8
  41bcb6:	test   r14b,r14b
  41bcb9:	jne    0x41bdf0
  41bcbf:	lea    rdx,[rip+0x29ffa]        # 0x445cc0
  41bcc6:	mov    rcx,rbx
  41bcc9:	call   0x427dc8
  41bcce:	lea    rax,[rip+0x29fc0]        # 0x445c95
  41bcd5:	mov    QWORD PTR [rsp+0x40],0x0
  41bcde:	mov    QWORD PTR [rsp+0x38],0x0
  41bce7:	mov    QWORD PTR [rsp+0x28],0x0
  41bcf0:	mov    DWORD PTR [rsp+0x20],0x0
  41bcf8:	xor    r9d,r9d
  41bcfb:	mov    QWORD PTR [rsp+0x30],rax
  41bd00:	mov    rcx,QWORD PTR [rbp+0x0]
  41bd04:	mov    r8,r13
  41bd07:	mov    rdx,rbx
  41bd0a:	call   0x41e8f0
  41bd0f:	lea    rdx,[rip+0x24ce2]        # 0x4409f8
  41bd16:	mov    rcx,rbx
  41bd19:	call   0x427dc8
  41bd1e:	mov    rcx,QWORD PTR [rsp+0x50]
  41bd23:	xor    edx,edx
  41bd25:	call   0x4062b0
  41bd2a:	mov    rcx,rbx
  41bd2d:	mov    rsi,rax
  41bd30:	call   0x427d60
  41bd35:	xor    eax,eax
  41bd37:	test   rsi,rsi
  41bd3a:	je     0x41bd82
  41bd3c:	mov    r9,QWORD PTR [rbp+0x108]
  41bd43:	mov    r8,QWORD PTR [rbp+0x10]
  41bd47:	lea    rax,[rip+0x29f4f]        # 0x445c9d
  41bd4e:	mov    rdx,r12
  41bd51:	mov    rcx,rsi
  41bd54:	mov    QWORD PTR [rsp+0xd0],0x0
  41bd60:	mov    QWORD PTR [rsp+0xe0],rax
  41bd68:	mov    BYTE PTR [rsp+0xf0],0x1
  41bd70:	call   0x4141a0
  41bd75:	mov    rcx,rsi
  41bd78:	call   0x427f68
  41bd7d:	mov    eax,0x1
  41bd82:	add    rsp,0x110
  41bd89:	pop    rbx
  41bd8a:	pop    rsi
  41bd8b:	pop    rdi
  41bd8c:	pop    rbp
  41bd8d:	pop    r12
  41bd8f:	pop    r13
  41bd91:	pop    r14
  41bd93:	ret    
  41bd94:	mov    ecx,0x51eb851f
  41bd99:	mov    eax,r9d
  41bd9c:	mov    r10d,r9d
  41bd9f:	imul   ecx
  41bda1:	sar    r10d,0x1f
  41bda5:	sar    edx,0x5
  41bda8:	mov    r8d,edx
  41bdab:	sub    r8d,r10d
  41bdae:	mov    eax,r8d
  41bdb1:	imul   ecx
  41bdb3:	mov    eax,r8d
  41bdb6:	sar    eax,0x1f
  41bdb9:	sar    edx,0x5
  41bdbc:	mov    ecx,edx
  41bdbe:	mov    edx,0x68db8bad
  41bdc3:	sub    ecx,eax
  41bdc5:	mov    eax,r9d
  41bdc8:	imul   edx
  41bdca:	imul   ecx,ecx,0x64
  41bdcd:	sar    edx,0xc
  41bdd0:	sub    r8d,ecx
  41bdd3:	lea    rcx,[rip+0x29c3e]        # 0x445a18
  41bdda:	sub    edx,r10d
  41bddd:	call   0x405d90
  41bde2:	mov    eax,0x1
  41bde7:	jmp    0x41bd82
  41bde9:	nop    DWORD PTR [rax+0x0]
  41bdf0:	lea    rdx,[rip+0x24b6f]        # 0x440966
  41bdf7:	mov    rcx,rbx
  41bdfa:	call   0x427dc8
  41bdff:	lea    rdx,[rip+0x29d19]        # 0x445b1f
  41be06:	mov    rcx,rbx
  41be09:	call   0x414870
  41be0e:	lea    r8,[rip+0x23014]        # 0x43ee29
  41be15:	lea    rdx,[rip+0x29d0c]        # 0x445b28
  41be1c:	mov    rcx,rbx
  41be1f:	call   0x427dd8
  41be24:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41be2e:	jg     0x41be80
  41be30:	lea    rdx,[rip+0x29e89]        # 0x445cc0
  41be37:	mov    rcx,rbx
  41be3a:	call   0x427dc8
  41be3f:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41be49:	jle    0x41bcce
  41be4f:	lea    rdx,[rip+0x29dca]        # 0x445c20
  41be56:	mov    rcx,rbx
  41be59:	call   0x427dc8
  41be5e:	jmp    0x41bcce
  41be63:	lea    r8,[rip+0x29c47]        # 0x445ab1
  41be6a:	lea    rdx,[rip+0x29c4f]        # 0x445ac0
  41be71:	mov    rcx,rbx
  41be74:	call   0x427dd8
  41be79:	jmp    0x41bca0
  41be7e:	xchg   ax,ax
  41be80:	lea    r8,[rip+0x22fc3]        # 0x43ee4a
  41be87:	lea    rdx,[rip+0x29d77]        # 0x445c05
  41be8e:	mov    rcx,rbx
  41be91:	call   0x427dd8
  41be96:	jmp    0x41be30
  41be98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bea0:	push   r14
  41bea2:	push   r13
  41bea4:	push   r12
  41bea6:	push   rbp
  41bea7:	push   rdi
  41bea8:	push   rsi
  41bea9:	push   rbx
  41beaa:	sub    rsp,0x110
  41beb1:	mov    rbp,QWORD PTR [rip+0x38a28]        # 0x4548e0
  41beb8:	lea    r12,[rsp+0x70]
  41bebd:	mov    r13,rcx
  41bec0:	mov    r14d,edx
  41bec3:	mov    ecx,0x13
  41bec8:	mov    r9d,DWORD PTR [rbp+0xe4]
  41becf:	lea    rsi,[rbp+0x28]
  41bed3:	mov    rdi,r12
  41bed6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41bed9:	cmp    r9d,0x13a0f
  41bee0:	jle    0x41c000
  41bee6:	lea    rbx,[rsp+0x50]
  41beeb:	mov    rcx,rbx
  41beee:	call   0x427da8
  41bef3:	lea    rax,[rip+0x29e96]        # 0x445d90
  41befa:	lea    r9,[rip+0x24979]        # 0x44087a
  41bf01:	lea    r8,[rip+0x2452c]        # 0x440434
  41bf08:	lea    rdx,[rip+0x29e21]        # 0x445d30
  41bf0f:	mov    rcx,rbx
  41bf12:	mov    QWORD PTR [rsp+0x20],rax
  41bf17:	call   0x427d70
  41bf1c:	test   r14b,r14b
  41bf1f:	jne    0x41c055
  41bf25:	lea    rdx,[rip+0x29fb4]        # 0x445ee0
  41bf2c:	mov    rcx,rbx
  41bf2f:	call   0x427dc8
  41bf34:	lea    rax,[rip+0x2a073]        # 0x445fae
  41bf3b:	mov    QWORD PTR [rsp+0x40],0x0
  41bf44:	mov    QWORD PTR [rsp+0x38],0x0
  41bf4d:	mov    QWORD PTR [rsp+0x28],0x0
  41bf56:	mov    DWORD PTR [rsp+0x20],0x0
  41bf5e:	xor    r9d,r9d
  41bf61:	mov    QWORD PTR [rsp+0x30],rax
  41bf66:	mov    rcx,QWORD PTR [rbp+0x0]
  41bf6a:	mov    r8,r13
  41bf6d:	mov    rdx,rbx
  41bf70:	call   0x41e8f0
  41bf75:	lea    rdx,[rip+0x24a7c]        # 0x4409f8
  41bf7c:	mov    rcx,rbx
  41bf7f:	call   0x427dc8
  41bf84:	mov    rcx,QWORD PTR [rsp+0x50]
  41bf89:	xor    edx,edx
  41bf8b:	call   0x4062b0
  41bf90:	mov    rcx,rbx
  41bf93:	mov    rsi,rax
  41bf96:	call   0x427d60
  41bf9b:	xor    eax,eax
  41bf9d:	test   rsi,rsi
  41bfa0:	je     0x41bfe8
  41bfa2:	mov    r9,QWORD PTR [rbp+0x108]
  41bfa9:	mov    r8,QWORD PTR [rbp+0x10]
  41bfad:	lea    rax,[rip+0x2a004]        # 0x445fb8
  41bfb4:	mov    rdx,r12
  41bfb7:	mov    rcx,rsi
  41bfba:	mov    QWORD PTR [rsp+0xd0],0x0
  41bfc6:	mov    QWORD PTR [rsp+0xe0],rax
  41bfce:	mov    BYTE PTR [rsp+0xf0],0x1
  41bfd6:	call   0x4141a0
  41bfdb:	mov    rcx,rsi
  41bfde:	call   0x427f68
  41bfe3:	mov    eax,0x1
  41bfe8:	add    rsp,0x110
  41bfef:	pop    rbx
  41bff0:	pop    rsi
  41bff1:	pop    rdi
  41bff2:	pop    rbp
  41bff3:	pop    r12
  41bff5:	pop    r13
  41bff7:	pop    r14
  41bff9:	ret    
  41bffa:	nop    WORD PTR [rax+rax*1+0x0]
  41c000:	mov    ecx,0x51eb851f
  41c005:	mov    eax,r9d
  41c008:	mov    r10d,r9d
  41c00b:	imul   ecx
  41c00d:	sar    r10d,0x1f
  41c011:	sar    edx,0x5
  41c014:	mov    r8d,edx
  41c017:	sub    r8d,r10d
  41c01a:	mov    eax,r8d
  41c01d:	imul   ecx
  41c01f:	mov    eax,r8d
  41c022:	sar    eax,0x1f
  41c025:	sar    edx,0x5
  41c028:	mov    ecx,edx
  41c02a:	mov    edx,0x68db8bad
  41c02f:	sub    ecx,eax
  41c031:	mov    eax,r9d
  41c034:	imul   edx
  41c036:	imul   ecx,ecx,0x64
  41c039:	sar    edx,0xc
  41c03c:	sub    r8d,ecx
  41c03f:	lea    rcx,[rip+0x29caa]        # 0x445cf0
  41c046:	sub    edx,r10d
  41c049:	call   0x405d90
  41c04e:	mov    eax,0x1
  41c053:	jmp    0x41bfe8
  41c055:	lea    rdx,[rip+0x2490a]        # 0x440966
  41c05c:	mov    rcx,rbx
  41c05f:	call   0x427dc8
  41c064:	lea    rdx,[rip+0x29d3a]        # 0x445da5
  41c06b:	mov    rcx,rbx
  41c06e:	call   0x414870
  41c073:	lea    rax,[rip+0x22dd0]        # 0x43ee4a
  41c07a:	lea    r9,[rip+0x29d2d]        # 0x445dae
  41c081:	lea    r8,[rip+0x22d81]        # 0x43ee09
  41c088:	lea    rdx,[rip+0x29d29]        # 0x445db8
  41c08f:	mov    rcx,rbx
  41c092:	mov    QWORD PTR [rsp+0x28],rax
  41c097:	lea    rax,[rip+0x22d8b]        # 0x43ee29
  41c09e:	mov    QWORD PTR [rsp+0x20],rax
  41c0a3:	call   0x427dd8
  41c0a8:	lea    rdx,[rip+0x29e31]        # 0x445ee0
  41c0af:	mov    rcx,rbx
  41c0b2:	call   0x427dc8
  41c0b7:	lea    rdx,[rip+0x29e8a]        # 0x445f48
  41c0be:	mov    rcx,rbx
  41c0c1:	call   0x427dc8
  41c0c6:	jmp    0x41bf34
  41c0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0d0:	push   r13
  41c0d2:	push   r12
  41c0d4:	push   rbp
  41c0d5:	push   rdi
  41c0d6:	push   rsi
  41c0d7:	push   rbx
  41c0d8:	sub    rsp,0x118
  41c0df:	mov    rbx,QWORD PTR [rip+0x387fa]        # 0x4548e0
  41c0e6:	lea    rbp,[rsp+0x70]
  41c0eb:	mov    r12,rcx
  41c0ee:	mov    r13d,edx
  41c0f1:	mov    ecx,0x13
  41c0f6:	mov    r9d,DWORD PTR [rbx+0xe4]
  41c0fd:	lea    rsi,[rbx+0x28]
  41c101:	mov    rdi,rbp
  41c104:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c107:	cmp    r9d,0x13a0f
  41c10e:	jle    0x41c220
  41c114:	lea    rsi,[rsp+0x50]
  41c119:	mov    rcx,rsi
  41c11c:	call   0x427da8
  41c121:	lea    r9,[rip+0x29ee4]        # 0x44600c
  41c128:	lea    r8,[rip+0x29ee7]        # 0x446016
  41c12f:	lea    rdx,[rip+0x29eea]        # 0x446020
  41c136:	mov    rcx,rsi
  41c139:	call   0x427d70
  41c13e:	test   r13b,r13b
  41c141:	jne    0x41c283
  41c147:	lea    rdx,[rip+0x29fe2]        # 0x446130
  41c14e:	mov    rcx,rsi
  41c151:	call   0x427dc8
  41c156:	lea    rax,[rip+0x29ff9]        # 0x446156
  41c15d:	mov    QWORD PTR [rsp+0x40],0x0
  41c166:	mov    QWORD PTR [rsp+0x28],0x0
  41c16f:	mov    DWORD PTR [rsp+0x20],0x0
  41c177:	xor    r9d,r9d
  41c17a:	mov    r8,r12
  41c17d:	mov    QWORD PTR [rsp+0x38],rax
  41c182:	lea    rax,[rip+0x29fd8]        # 0x446161
  41c189:	mov    rdx,rsi
  41c18c:	mov    QWORD PTR [rsp+0x30],rax
  41c191:	mov    rcx,QWORD PTR [rbx]
  41c194:	call   0x41e8f0
  41c199:	lea    rdx,[rip+0x257ce]        # 0x44196e
  41c1a0:	mov    rcx,rsi
  41c1a3:	call   0x427dc8
  41c1a8:	mov    rcx,QWORD PTR [rsp+0x50]
  41c1ad:	xor    edx,edx
  41c1af:	call   0x4062b0
  41c1b4:	mov    rcx,rsi
  41c1b7:	mov    r12,rax
  41c1ba:	call   0x427d60
  41c1bf:	xor    eax,eax
  41c1c1:	test   r12,r12
  41c1c4:	je     0x41c20c
  41c1c6:	mov    r9,QWORD PTR [rbx+0x108]
  41c1cd:	mov    r8,QWORD PTR [rbx+0x10]
  41c1d1:	lea    rax,[rip+0x29f94]        # 0x44616c
  41c1d8:	mov    rdx,rbp
  41c1db:	mov    rcx,r12
  41c1de:	mov    QWORD PTR [rsp+0xd0],0x0
  41c1ea:	mov    QWORD PTR [rsp+0xe0],rax
  41c1f2:	mov    BYTE PTR [rsp+0xf0],0x1
  41c1fa:	call   0x4141a0
  41c1ff:	mov    rcx,r12
  41c202:	call   0x427f68
  41c207:	mov    eax,0x1
  41c20c:	add    rsp,0x118
  41c213:	pop    rbx
  41c214:	pop    rsi
  41c215:	pop    rdi
  41c216:	pop    rbp
  41c217:	pop    r12
  41c219:	pop    r13
  41c21b:	ret    
  41c21c:	nop    DWORD PTR [rax+0x0]
  41c220:	mov    eax,r9d
  41c223:	mov    ecx,0x51eb851f
  41c228:	mov    r10d,r9d
  41c22b:	imul   ecx
  41c22d:	sar    r10d,0x1f
  41c231:	sar    edx,0x5
  41c234:	mov    r8d,edx
  41c237:	sub    r8d,r10d
  41c23a:	mov    eax,r8d
  41c23d:	imul   ecx
  41c23f:	mov    eax,r8d
  41c242:	sar    eax,0x1f
  41c245:	sar    edx,0x5
  41c248:	mov    ecx,edx
  41c24a:	mov    edx,0x68db8bad
  41c24f:	sub    ecx,eax
  41c251:	mov    eax,r9d
  41c254:	imul   edx
  41c256:	imul   ecx,ecx,0x64
  41c259:	sar    edx,0xc
  41c25c:	sub    r8d,ecx
  41c25f:	lea    rcx,[rip+0x29d6a]        # 0x445fd0
  41c266:	sub    edx,r10d
  41c269:	call   0x405d90
  41c26e:	mov    eax,0x1
  41c273:	add    rsp,0x118
  41c27a:	pop    rbx
  41c27b:	pop    rsi
  41c27c:	pop    rdi
  41c27d:	pop    rbp
  41c27e:	pop    r12
  41c280:	pop    r13
  41c282:	ret    
  41c283:	lea    r8,[rip+0x22b9f]        # 0x43ee29
  41c28a:	lea    rdx,[rip+0x29dbf]        # 0x446050
  41c291:	mov    rcx,rsi
  41c294:	call   0x427dd8
  41c299:	jmp    0x41c147
  41c29e:	xchg   ax,ax
  41c2a0:	push   r14
  41c2a2:	push   r13
  41c2a4:	push   r12
  41c2a6:	push   rbp
  41c2a7:	push   rdi
  41c2a8:	push   rsi
  41c2a9:	push   rbx
  41c2aa:	sub    rsp,0x110
  41c2b1:	mov    rbp,QWORD PTR [rip+0x38628]        # 0x4548e0
  41c2b8:	lea    r12,[rsp+0x70]
  41c2bd:	mov    r13,rcx
  41c2c0:	mov    r14d,edx
  41c2c3:	mov    ecx,0x13
  41c2c8:	mov    r9d,DWORD PTR [rbp+0xe4]
  41c2cf:	lea    rsi,[rbp+0x28]
  41c2d3:	mov    rdi,r12
  41c2d6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c2d9:	cmp    r9d,0x15ff3
  41c2e0:	jle    0x41c400
  41c2e6:	lea    rbx,[rsp+0x50]
  41c2eb:	mov    rcx,rbx
  41c2ee:	call   0x427da8
  41c2f3:	lea    rax,[rip+0x29d1c]        # 0x446016
  41c2fa:	lea    r9,[rip+0x270b8]        # 0x4433b9
  41c301:	lea    r8,[rip+0x24131]        # 0x440439
  41c308:	lea    rdx,[rip+0x29eb9]        # 0x4461c8
  41c30f:	mov    rcx,rbx
  41c312:	mov    QWORD PTR [rsp+0x20],rax
  41c317:	call   0x427d70
  41c31c:	test   r14b,r14b
  41c31f:	jne    0x41c455
  41c325:	lea    rdx,[rip+0x29fdc]        # 0x446308
  41c32c:	mov    rcx,rbx
  41c32f:	call   0x427dc8
  41c334:	lea    rax,[rip+0x25ee3]        # 0x44221e
  41c33b:	mov    QWORD PTR [rsp+0x40],0x0
  41c344:	mov    QWORD PTR [rsp+0x28],0x0
  41c34d:	mov    DWORD PTR [rsp+0x20],0x0
  41c355:	xor    r9d,r9d
  41c358:	mov    r8,r13
  41c35b:	mov    QWORD PTR [rsp+0x38],rax
  41c360:	lea    rax,[rip+0x2449c]        # 0x440803
  41c367:	mov    rdx,rbx
  41c36a:	mov    QWORD PTR [rsp+0x30],rax
  41c36f:	mov    rcx,QWORD PTR [rbp+0x0]
  41c373:	call   0x41e8f0
  41c378:	lea    rdx,[rip+0x255ef]        # 0x44196e
  41c37f:	mov    rcx,rbx
  41c382:	call   0x427dc8
  41c387:	mov    rcx,QWORD PTR [rsp+0x50]
  41c38c:	xor    edx,edx
  41c38e:	call   0x4062b0
  41c393:	mov    rcx,rbx
  41c396:	mov    rsi,rax
  41c399:	call   0x427d60
  41c39e:	xor    eax,eax
  41c3a0:	test   rsi,rsi
  41c3a3:	je     0x41c3eb
  41c3a5:	mov    r9,QWORD PTR [rbp+0x108]
  41c3ac:	mov    r8,QWORD PTR [rbp+0x10]
  41c3b0:	lea    rax,[rip+0x2a0b0]        # 0x446467
  41c3b7:	mov    rdx,r12
  41c3ba:	mov    rcx,rsi
  41c3bd:	mov    QWORD PTR [rsp+0xd0],0x0
  41c3c9:	mov    QWORD PTR [rsp+0xe0],rax
  41c3d1:	mov    BYTE PTR [rsp+0xf0],0x1
  41c3d9:	call   0x4141a0
  41c3de:	mov    rcx,rsi
  41c3e1:	call   0x427f68
  41c3e6:	mov    eax,0x1
  41c3eb:	add    rsp,0x110
  41c3f2:	pop    rbx
  41c3f3:	pop    rsi
  41c3f4:	pop    rdi
  41c3f5:	pop    rbp
  41c3f6:	pop    r12
  41c3f8:	pop    r13
  41c3fa:	pop    r14
  41c3fc:	ret    
  41c3fd:	nop    DWORD PTR [rax]
  41c400:	mov    ecx,0x51eb851f
  41c405:	mov    eax,r9d
  41c408:	mov    r10d,r9d
  41c40b:	imul   ecx
  41c40d:	sar    r10d,0x1f
  41c411:	sar    edx,0x5
  41c414:	mov    r8d,edx
  41c417:	sub    r8d,r10d
  41c41a:	mov    eax,r8d
  41c41d:	imul   ecx
  41c41f:	mov    eax,r8d
  41c422:	sar    eax,0x1f
  41c425:	sar    edx,0x5
  41c428:	mov    ecx,edx
  41c42a:	mov    edx,0x68db8bad
  41c42f:	sub    ecx,eax
  41c431:	mov    eax,r9d
  41c434:	imul   edx
  41c436:	imul   ecx,ecx,0x64
  41c439:	sar    edx,0xc
  41c43c:	sub    r8d,ecx
  41c43f:	lea    rcx,[rip+0x29d42]        # 0x446188
  41c446:	sub    edx,r10d
  41c449:	call   0x405d90
  41c44e:	mov    eax,0x1
  41c453:	jmp    0x41c3eb
  41c455:	lea    r9,[rip+0x229ee]        # 0x43ee4a
  41c45c:	lea    r8,[rip+0x229c6]        # 0x43ee29
  41c463:	lea    rdx,[rip+0x29da6]        # 0x446210
  41c46a:	mov    rcx,rbx
  41c46d:	call   0x427dd8
  41c472:	lea    rdx,[rip+0x29e8f]        # 0x446308
  41c479:	mov    rcx,rbx
  41c47c:	call   0x427dc8
  41c481:	lea    rdx,[rip+0x29f68]        # 0x4463f0
  41c488:	mov    rcx,rbx
  41c48b:	call   0x427dc8
  41c490:	jmp    0x41c334
  41c495:	nop
  41c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4a0:	push   r12
  41c4a2:	push   rbp
  41c4a3:	push   rdi
  41c4a4:	push   rsi
  41c4a5:	push   rbx
  41c4a6:	sub    rsp,0x110
  41c4ad:	mov    rbx,QWORD PTR [rip+0x3842c]        # 0x4548e0
  41c4b4:	lea    rbp,[rsp+0x70]
  41c4b9:	mov    r12,rcx
  41c4bc:	mov    ecx,0x13
  41c4c1:	mov    r9d,DWORD PTR [rbx+0xe4]
  41c4c8:	lea    rsi,[rbx+0x28]
  41c4cc:	mov    rdi,rbp
  41c4cf:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c4d2:	cmp    r9d,0x15ff3
  41c4d9:	jle    0x41c5e2
  41c4df:	lea    rsi,[rsp+0x50]
  41c4e4:	mov    rcx,rsi
  41c4e7:	call   0x427da8
  41c4ec:	lea    rax,[rip+0x22957]        # 0x43ee4a
  41c4f3:	lea    r9,[rip+0x298b4]        # 0x445dae
  41c4fa:	lea    r8,[rip+0x23f33]        # 0x440434
  41c501:	lea    rdx,[rip+0x29fb8]        # 0x4464c0
  41c508:	mov    rcx,rsi
  41c50b:	mov    QWORD PTR [rsp+0x28],rax
  41c510:	lea    rax,[rip+0x23f22]        # 0x440439
  41c517:	mov    QWORD PTR [rsp+0x20],rax
  41c51c:	call   0x427d70
  41c521:	lea    rax,[rip+0x2a0c9]        # 0x4465f1
  41c528:	mov    QWORD PTR [rsp+0x40],0x0
  41c531:	mov    QWORD PTR [rsp+0x38],0x0
  41c53a:	mov    QWORD PTR [rsp+0x28],0x0
  41c543:	mov    DWORD PTR [rsp+0x20],0x0
  41c54b:	xor    r9d,r9d
  41c54e:	mov    QWORD PTR [rsp+0x30],rax
  41c553:	mov    rcx,QWORD PTR [rbx]
  41c556:	mov    r8,r12
  41c559:	mov    rdx,rsi
  41c55c:	call   0x41e8f0
  41c561:	lea    rdx,[rip+0x24490]        # 0x4409f8
  41c568:	mov    rcx,rsi
  41c56b:	call   0x427dc8
  41c570:	mov    rcx,QWORD PTR [rsp+0x50]
  41c575:	xor    edx,edx
  41c577:	call   0x4062b0
  41c57c:	mov    rcx,rsi
  41c57f:	mov    rdi,rax
  41c582:	call   0x427d60
  41c587:	xor    eax,eax
  41c589:	test   rdi,rdi
  41c58c:	je     0x41c5d4
  41c58e:	mov    r9,QWORD PTR [rbx+0x108]
  41c595:	mov    r8,QWORD PTR [rbx+0x10]
  41c599:	lea    rax,[rip+0x2a05b]        # 0x4465fb
  41c5a0:	mov    rdx,rbp
  41c5a3:	mov    rcx,rdi
  41c5a6:	mov    QWORD PTR [rsp+0xd0],0x0
  41c5b2:	mov    QWORD PTR [rsp+0xe0],rax
  41c5ba:	mov    BYTE PTR [rsp+0xf0],0x1
  41c5c2:	call   0x4141a0
  41c5c7:	mov    rcx,rdi
  41c5ca:	call   0x427f68
  41c5cf:	mov    eax,0x1
  41c5d4:	add    rsp,0x110
  41c5db:	pop    rbx
  41c5dc:	pop    rsi
  41c5dd:	pop    rdi
  41c5de:	pop    rbp
  41c5df:	pop    r12
  41c5e1:	ret    
  41c5e2:	mov    eax,r9d
  41c5e5:	mov    ecx,0x51eb851f
  41c5ea:	mov    r10d,r9d
  41c5ed:	imul   ecx
  41c5ef:	sar    r10d,0x1f
  41c5f3:	sar    edx,0x5
  41c5f6:	mov    r8d,edx
  41c5f9:	sub    r8d,r10d
  41c5fc:	mov    eax,r8d
  41c5ff:	imul   ecx
  41c601:	mov    eax,r8d
  41c604:	sar    eax,0x1f
  41c607:	sar    edx,0x5
  41c60a:	mov    ecx,edx
  41c60c:	mov    edx,0x68db8bad
  41c611:	sub    ecx,eax
  41c613:	mov    eax,r9d
  41c616:	imul   edx
  41c618:	imul   ecx,ecx,0x64
  41c61b:	sar    edx,0xc
  41c61e:	sub    r8d,ecx
  41c621:	lea    rcx,[rip+0x29e58]        # 0x446480
  41c628:	sub    edx,r10d
  41c62b:	call   0x405d90
  41c630:	mov    eax,0x1
  41c635:	add    rsp,0x110
  41c63c:	pop    rbx
  41c63d:	pop    rsi
  41c63e:	pop    rdi
  41c63f:	pop    rbp
  41c640:	pop    r12
  41c642:	ret    
  41c643:	nop    DWORD PTR [rax]
  41c646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c650:	push   rbp
  41c651:	push   rdi
  41c652:	push   rsi
  41c653:	push   rbx
  41c654:	sub    rsp,0x88
  41c65b:	mov    rdi,QWORD PTR [rip+0x3827e]        # 0x4548e0
  41c662:	mov    rbp,rcx
  41c665:	mov    r9d,DWORD PTR [rdi+0xe4]
  41c66c:	cmp    r9d,0x15ff3
  41c673:	jle    0x41c750
  41c679:	lea    rbx,[rsp+0x60]
  41c67e:	mov    rcx,rbx
  41c681:	call   0x427da8
  41c686:	lea    rdx,[rip+0x29f8b]        # 0x446618
  41c68d:	mov    rcx,rbx
  41c690:	call   0x427d70
  41c695:	lea    rax,[rip+0x29f55]        # 0x4465f1
  41c69c:	mov    QWORD PTR [rsp+0x40],0x0
  41c6a5:	mov    QWORD PTR [rsp+0x38],0x0
  41c6ae:	mov    QWORD PTR [rsp+0x28],0x0
  41c6b7:	mov    DWORD PTR [rsp+0x20],0x0
  41c6bf:	xor    r9d,r9d
  41c6c2:	mov    QWORD PTR [rsp+0x30],rax
  41c6c7:	mov    rcx,QWORD PTR [rdi]
  41c6ca:	mov    r8,rbp
  41c6cd:	mov    rdx,rbx
  41c6d0:	call   0x41e8f0
  41c6d5:	lea    rdx,[rip+0x2431c]        # 0x4409f8
  41c6dc:	mov    rcx,rbx
  41c6df:	call   0x427dc8
  41c6e4:	mov    rcx,QWORD PTR [rsp+0x60]
  41c6e9:	xor    edx,edx
  41c6eb:	call   0x4062b0
  41c6f0:	mov    rcx,rbx
  41c6f3:	mov    rsi,rax
  41c6f6:	call   0x427d60
  41c6fb:	xor    eax,eax
  41c6fd:	test   rsi,rsi
  41c700:	je     0x41c73d
  41c702:	mov    rcx,rsi
  41c705:	call   0x427e70
  41c70a:	test   eax,eax
  41c70c:	jne    0x41c7b0
  41c712:	cmp    BYTE PTR [rdi+0x11a],0x0
  41c719:	jne    0x41c733
  41c71b:	test   rbp,rbp
  41c71e:	je     0x41c836
  41c724:	lea    rcx,[rip+0x29f25]        # 0x446650
  41c72b:	mov    rdx,rbp
  41c72e:	call   0x405d90
  41c733:	mov    rcx,rsi
  41c736:	call   0x427f68
  41c73b:	xor    eax,eax
  41c73d:	add    rsp,0x88
  41c744:	pop    rbx
  41c745:	pop    rsi
  41c746:	pop    rdi
  41c747:	pop    rbp
  41c748:	ret    
  41c749:	nop    DWORD PTR [rax+0x0]
  41c750:	mov    eax,r9d
  41c753:	mov    ecx,0x51eb851f
  41c758:	mov    r10d,r9d
  41c75b:	imul   ecx
  41c75d:	sar    r10d,0x1f
  41c761:	sar    edx,0x5
  41c764:	mov    r8d,edx
  41c767:	sub    r8d,r10d
  41c76a:	mov    eax,r8d
  41c76d:	imul   ecx
  41c76f:	mov    eax,r8d
  41c772:	sar    eax,0x1f
  41c775:	sar    edx,0x5
  41c778:	mov    ecx,edx
  41c77a:	mov    edx,0x68db8bad
  41c77f:	sub    ecx,eax
  41c781:	mov    eax,r9d
  41c784:	imul   edx
  41c786:	imul   ecx,ecx,0x64
  41c789:	sar    edx,0xc
  41c78c:	sub    r8d,ecx
  41c78f:	lea    rcx,[rip+0x29cea]        # 0x446480
  41c796:	sub    edx,r10d
  41c799:	call   0x405d90
  41c79e:	mov    eax,0x1
  41c7a3:	add    rsp,0x88
  41c7aa:	pop    rbx
  41c7ab:	pop    rsi
  41c7ac:	pop    rdi
  41c7ad:	pop    rbp
  41c7ae:	ret    
  41c7af:	nop
  41c7b0:	xor    ebx,ebx
  41c7b2:	mov    rbp,QWORD PTR [rip+0x38057]        # 0x454810
  41c7b9:	jmp    0x41c7fe
  41c7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7c0:	xor    r8d,r8d
  41c7c3:	mov    edx,ebx
  41c7c5:	mov    rcx,rsi
  41c7c8:	call   0x427e98
  41c7cd:	mov    r8d,0x1
  41c7d3:	mov    rdi,rax
  41c7d6:	mov    edx,ebx
  41c7d8:	mov    rcx,rsi
  41c7db:	call   0x427e98
  41c7e0:	mov    rcx,rdi
  41c7e3:	mov    rdx,rax
  41c7e6:	call   0x414780
  41c7eb:	test   al,al
  41c7ed:	je     0x41c820
  41c7ef:	movzx  eax,BYTE PTR [rbp+0x0]
  41c7f3:	test   al,al
  41c7f5:	jne    0x41c733
  41c7fb:	add    ebx,0x1
  41c7fe:	mov    rcx,rsi
  41c801:	call   0x427e70
  41c806:	cmp    ebx,eax
  41c808:	jl     0x41c7c0
  41c80a:	mov    rcx,rsi
  41c80d:	call   0x427f68
  41c812:	mov    eax,0x1
  41c817:	jmp    0x41c73d
  41c81c:	nop    DWORD PTR [rax+0x0]
  41c820:	mov    rcx,rsi
  41c823:	mov    BYTE PTR [rsp+0x5f],al
  41c827:	call   0x427f68
  41c82c:	movzx  eax,BYTE PTR [rsp+0x5f]
  41c831:	jmp    0x41c73d
  41c836:	lea    rcx,[rip+0x29e3b]        # 0x446678
  41c83d:	call   0x405d90
  41c842:	jmp    0x41c733
  41c847:	nop
  41c848:	nop
  41c849:	nop
  41c84a:	nop
  41c84b:	nop
  41c84c:	nop
  41c84d:	nop
  41c84e:	nop
  41c84f:	nop
  41c850:	sub    rsp,0x28
  41c854:	mov    eax,DWORD PTR [rip+0xfc76]        # 0x42c4d0
  41c85a:	test   eax,eax
  41c85c:	js     0x41c863
  41c85e:	add    rsp,0x28
  41c862:	ret    
  41c863:	lea    rcx,[rip+0x29e66]        # 0x4466d0
  41c86a:	call   0x427d88
  41c86f:	mov    DWORD PTR [rip+0xfc5b],eax        # 0x42c4d0
  41c875:	add    rsp,0x28
  41c879:	ret    
  41c87a:	nop    WORD PTR [rax+rax*1+0x0]
  41c880:	push   r12
  41c882:	push   rbp
  41c883:	push   rdi
  41c884:	push   rsi
  41c885:	push   rbx
  41c886:	sub    rsp,0x20
  41c88a:	xor    ebp,ebp
  41c88c:	test   rdx,rdx
  41c88f:	mov    rdi,rcx
  41c892:	mov    rsi,rdx
  41c895:	mov    r12d,r8d
  41c898:	jne    0x41c8bc
  41c89a:	jmp    0x41c8cf
  41c89c:	nop    DWORD PTR [rax+0x0]
  41c8a0:	mov    edx,r12d
  41c8a3:	mov    rcx,rdi
  41c8a6:	call   0x427f28
  41c8ab:	lea    edx,[rbp+rax*1+0x0]
  41c8af:	test   eax,eax
  41c8b1:	cmovg  ebp,edx
  41c8b4:	add    rdi,rbx
  41c8b7:	sub    rsi,rbx
  41c8ba:	je     0x41c8cf
  41c8bc:	mov    edx,r12d
  41c8bf:	mov    rcx,rdi
  41c8c2:	call   0x427e88
  41c8c7:	movsxd rbx,eax
  41c8ca:	cmp    rbx,rsi
  41c8cd:	jbe    0x41c8a0
  41c8cf:	mov    eax,ebp
  41c8d1:	add    rsp,0x20
  41c8d5:	pop    rbx
  41c8d6:	pop    rsi
  41c8d7:	pop    rdi
  41c8d8:	pop    rbp
  41c8d9:	pop    r12
  41c8db:	ret    
  41c8dc:	nop    DWORD PTR [rax+0x0]
  41c8e0:	push   r15
  41c8e2:	push   r14
  41c8e4:	push   r13
  41c8e6:	push   r12
  41c8e8:	push   rbp
  41c8e9:	push   rdi
  41c8ea:	push   rsi
  41c8eb:	push   rbx
  41c8ec:	sub    rsp,0x38
  41c8f0:	cmp    BYTE PTR [rcx],0x0
  41c8f3:	mov    r14,rcx
  41c8f6:	mov    rbx,rdx
  41c8f9:	mov    ebp,r8d
  41c8fc:	mov    QWORD PTR [rsp+0x98],r9
  41c904:	je     0x41ca6b
  41c90a:	test   rdx,rdx
  41c90d:	je     0x41ca6b
  41c913:	xor    edi,edi
  41c915:	mov    DWORD PTR [rsp+0x2c],0x1
  41c91d:	xor    r12d,r12d
  41c920:	xor    esi,esi
  41c922:	jmp    0x41c942
  41c924:	test   eax,eax
  41c926:	js     0x41ca00
  41c92c:	add    esi,eax
  41c92e:	add    edi,r13d
  41c931:	add    r14,r13
  41c934:	sub    rbx,r13
  41c937:	cmp    BYTE PTR [r14],0x0
  41c93b:	je     0x41c9a0
  41c93d:	test   rbx,rbx
  41c940:	je     0x41c9a0
  41c942:	mov    edx,ebp
  41c944:	mov    rcx,r14
  41c947:	call   0x427e88
  41c94c:	movsxd r13,eax
  41c94f:	cmp    r13,rbx
  41c952:	ja     0x41c9a0
  41c954:	mov    edx,ebp
  41c956:	mov    rcx,r14
  41c959:	call   0x427f28
  41c95e:	cmp    r13d,0x1
  41c962:	jne    0x41c924
  41c964:	movzx  edx,BYTE PTR [r14]
  41c968:	cmp    dl,0xa
  41c96b:	je     0x41ca10
  41c971:	cmp    dl,0xd
  41c974:	je     0x41ca30
  41c97a:	cmp    dl,0x9
  41c97d:	je     0x41ca40
  41c983:	test   eax,eax
  41c985:	js     0x41ca60
  41c98b:	add    r14,r13
  41c98e:	add    esi,eax
  41c990:	add    edi,0x1
  41c993:	sub    rbx,r13
  41c996:	cmp    BYTE PTR [r14],0x0
  41c99a:	jne    0x41c93d
  41c99c:	nop    DWORD PTR [rax+0x0]
  41c9a0:	cmp    r12d,esi
  41c9a3:	cmovge esi,r12d
  41c9a7:	add    edi,0x1
  41c9aa:	cmp    QWORD PTR [rsp+0x98],0x0
  41c9b3:	je     0x41c9bf
  41c9b5:	mov    rax,QWORD PTR [rsp+0x98]
  41c9bd:	mov    DWORD PTR [rax],esi
  41c9bf:	cmp    QWORD PTR [rsp+0xa0],0x0
  41c9c8:	je     0x41c9d8
  41c9ca:	mov    rax,QWORD PTR [rsp+0xa0]
  41c9d2:	mov    esi,DWORD PTR [rsp+0x2c]
  41c9d6:	mov    DWORD PTR [rax],esi
  41c9d8:	cmp    QWORD PTR [rsp+0xa8],0x0
  41c9e1:	je     0x41c9ed
  41c9e3:	mov    rax,QWORD PTR [rsp+0xa8]
  41c9eb:	mov    DWORD PTR [rax],edi
  41c9ed:	add    rsp,0x38
  41c9f1:	pop    rbx
  41c9f2:	pop    rsi
  41c9f3:	pop    rdi
  41c9f4:	pop    rbp
  41c9f5:	pop    r12
  41c9f7:	pop    r13
  41c9f9:	pop    r14
  41c9fb:	pop    r15
  41c9fd:	ret    
  41c9fe:	xchg   ax,ax
  41ca00:	add    esi,0x6
  41ca03:	add    edi,0x6
  41ca06:	jmp    0x41c931
  41ca0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca10:	cmp    r12d,esi
  41ca13:	cmovl  r12d,esi
  41ca17:	add    DWORD PTR [rsp+0x2c],0x1
  41ca1c:	add    edi,0x1
  41ca1f:	xor    esi,esi
  41ca21:	jmp    0x41c931
  41ca26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca30:	add    esi,0x2
  41ca33:	add    edi,0x2
  41ca36:	jmp    0x41c931
  41ca3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca40:	mov    eax,esi
  41ca42:	add    eax,0x1
  41ca45:	lea    edx,[rdi+rax*1]
  41ca48:	sub    edx,esi
  41ca4a:	test   al,0x7
  41ca4c:	jne    0x41ca42
  41ca4e:	mov    edi,edx
  41ca50:	mov    esi,eax
  41ca52:	jmp    0x41c931
  41ca57:	nop    WORD PTR [rax+rax*1+0x0]
  41ca60:	add    esi,0x4
  41ca63:	add    edi,0x4
  41ca66:	jmp    0x41c931
  41ca6b:	mov    edi,0x1
  41ca70:	mov    DWORD PTR [rsp+0x2c],0x1
  41ca78:	xor    esi,esi
  41ca7a:	jmp    0x41c9aa
  41ca7f:	nop
  41ca80:	push   r15
  41ca82:	push   r14
  41ca84:	push   r13
  41ca86:	push   r12
  41ca88:	push   rbp
  41ca89:	push   rdi
  41ca8a:	push   rsi
  41ca8b:	push   rbx
  41ca8c:	sub    rsp,0x28
  41ca90:	xor    edi,edi
  41ca92:	cmp    BYTE PTR [rcx],0x0
  41ca95:	mov    r15,QWORD PTR [r9]
  41ca98:	mov    rbx,rcx
  41ca9b:	mov    rsi,rdx
  41ca9e:	mov    ebp,r8d
  41caa1:	mov    r12,r9
  41caa4:	je     0x41cb18
  41caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cab0:	test   rsi,rsi
  41cab3:	je     0x41cb18
  41cab5:	mov    edx,ebp
  41cab7:	mov    rcx,rbx
  41caba:	call   0x427e88
  41cabf:	movsxd r13,eax
  41cac2:	cmp    r13,rsi
  41cac5:	mov    r14,r13
  41cac8:	ja     0x41cb18
  41caca:	mov    edx,ebp
  41cacc:	mov    rcx,rbx
  41cacf:	call   0x427f28
  41cad4:	cmp    r13d,0x1
  41cad8:	je     0x41cb50
  41cada:	test   eax,eax
  41cadc:	js     0x41cba0
  41cae2:	xor    r10d,r10d
  41cae5:	test   r13d,r13d
  41cae8:	jle    0x41cb0b
  41caea:	nop    WORD PTR [rax+rax*1+0x0]
  41caf0:	movzx  r11d,BYTE PTR [rbx+r10*1]
  41caf5:	mov    BYTE PTR [r15+r10*1],r11b
  41caf9:	add    r10,0x1
  41cafd:	cmp    r14d,r10d
  41cb00:	jg     0x41caf0
  41cb02:	lea    edx,[r14-0x1]
  41cb06:	lea    r15,[r15+rdx*1+0x1]
  41cb0b:	add    edi,eax
  41cb0d:	add    rbx,r13
  41cb10:	sub    rsi,r13
  41cb13:	cmp    BYTE PTR [rbx],0x0
  41cb16:	jne    0x41cab0
  41cb18:	mov    eax,DWORD PTR [rsp+0x90]
  41cb1f:	mov    DWORD PTR [r12+0x8],edi
  41cb24:	mov    BYTE PTR [r15],0x0
  41cb28:	test   eax,eax
  41cb2a:	jle    0x41cce1
  41cb30:	mov    QWORD PTR [r12+0x10],0x0
  41cb39:	add    rsp,0x28
  41cb3d:	pop    rbx
  41cb3e:	pop    rsi
  41cb3f:	pop    rdi
  41cb40:	pop    rbp
  41cb41:	pop    r12
  41cb43:	pop    r13
  41cb45:	pop    r14
  41cb47:	pop    r15
  41cb49:	ret    
  41cb4a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb50:	movzx  r8d,BYTE PTR [rbx]
  41cb54:	cmp    r8b,0xa
  41cb58:	je     0x41cbc4
  41cb5a:	cmp    r8b,0xd
  41cb5e:	je     0x41cbff
  41cb64:	cmp    r8b,0x9
  41cb68:	je     0x41cb80
  41cb6a:	test   eax,eax
  41cb6c:	js     0x41cc35
  41cb72:	mov    BYTE PTR [r15],r8b
  41cb75:	add    edi,eax
  41cb77:	add    r15,0x1
  41cb7b:	jmp    0x41cb0d
  41cb7d:	nop    DWORD PTR [rax]
  41cb80:	add    edi,0x1
  41cb83:	add    r15,0x1
  41cb87:	mov    BYTE PTR [r15-0x1],0x20
  41cb8c:	test   dil,0x7
  41cb90:	jne    0x41cb80
  41cb92:	jmp    0x41cb0d
  41cb97:	nop    WORD PTR [rax+rax*1+0x0]
  41cba0:	call   0x41c850
  41cba5:	cmp    eax,ebp
  41cba7:	je     0x41cc19
  41cba9:	lea    rdx,[rip+0x29b33]        # 0x4466e3
  41cbb0:	mov    rcx,r15
  41cbb3:	call   0x426260
  41cbb8:	add    r15,0x6
  41cbbc:	add    edi,0x6
  41cbbf:	jmp    0x41cb0d
  41cbc4:	sub    DWORD PTR [rsp+0x90],0x1
  41cbcc:	mov    BYTE PTR [r15],0x0
  41cbd0:	lea    rax,[r15+0x1]
  41cbd4:	mov    ecx,DWORD PTR [rsp+0x90]
  41cbdb:	mov    DWORD PTR [r12+0x8],edi
  41cbe0:	lea    rdx,[r12+0x10]
  41cbe5:	test   ecx,ecx
  41cbe7:	jle    0x41cce1
  41cbed:	mov    QWORD PTR [r12+0x10],rax
  41cbf2:	mov    r15,rax
  41cbf5:	mov    r12,rdx
  41cbf8:	xor    edi,edi
  41cbfa:	jmp    0x41cb0d
  41cbff:	mov    edx,0x725c
  41cc04:	mov    BYTE PTR [r15+0x2],0x0
  41cc09:	add    edi,0x2
  41cc0c:	mov    WORD PTR [r15],dx
  41cc10:	add    r15,0x2
  41cc14:	jmp    0x41cb0d
  41cc19:	movzx  eax,BYTE PTR [rbx]
  41cc1c:	test   al,al
  41cc1e:	movzx  r8d,al
  41cc22:	js     0x41cc50
  41cc24:	lea    rdx,[rip+0x29ab1]        # 0x4466dc
  41cc2b:	mov    rcx,r15
  41cc2e:	call   0x426260
  41cc33:	jmp    0x41cbb8
  41cc35:	lea    rdx,[rip+0x29a99]        # 0x4466d5
  41cc3c:	mov    rcx,r15
  41cc3f:	add    edi,0x4
  41cc42:	add    r15,0x4
  41cc46:	call   0x426260
  41cc4b:	jmp    0x41cb0d
  41cc50:	mov    edx,eax
  41cc52:	and    edx,0xffffffe0
  41cc55:	cmp    dl,0xc0
  41cc58:	je     0x41cca1
  41cc5a:	mov    edx,eax
  41cc5c:	and    edx,0xfffffff0
  41cc5f:	cmp    dl,0xe0
  41cc62:	je     0x41ccb8
  41cc64:	mov    edx,eax
  41cc66:	mov    r8d,0xffffffff
  41cc6c:	and    edx,0xfffffff8
  41cc6f:	cmp    dl,0xf0
  41cc72:	jne    0x41cc24
  41cc74:	movzx  edx,BYTE PTR [rbx+0x1]
  41cc78:	movzx  r8d,BYTE PTR [rbx+0x3]
  41cc7d:	and    eax,0x7
  41cc80:	shl    eax,0x12
  41cc83:	and    edx,0x3f
  41cc86:	and    r8d,0x3f
  41cc8a:	shl    edx,0xc
  41cc8d:	or     eax,edx
  41cc8f:	or     r8d,eax
  41cc92:	movzx  eax,BYTE PTR [rbx+0x2]
  41cc96:	and    eax,0x3f
  41cc99:	shl    eax,0x6
  41cc9c:	or     r8d,eax
  41cc9f:	jmp    0x41cc24
  41cca1:	movzx  r8d,BYTE PTR [rbx+0x1]
  41cca6:	and    eax,0x1f
  41cca9:	shl    eax,0x6
  41ccac:	and    r8d,0x3f
  41ccb0:	or     r8d,eax
  41ccb3:	jmp    0x41cc24
  41ccb8:	movzx  r8d,BYTE PTR [rbx+0x1]
  41ccbd:	movzx  edx,BYTE PTR [rbx+0x2]
  41ccc1:	shl    eax,0xc
  41ccc4:	and    eax,0xf000
  41ccc9:	and    r8d,0x3f
  41cccd:	and    edx,0x3f
  41ccd0:	shl    r8d,0x6
  41ccd4:	or     eax,r8d
  41ccd7:	or     eax,edx
  41ccd9:	mov    r8d,eax
  41ccdc:	jmp    0x41cc24
  41cce1:	mov    ecx,0x1
  41cce6:	call   0x42a540
  41cceb:	nop
  41ccec:	nop    DWORD PTR [rax+0x0]
  41ccf0:	push   rsi
  41ccf1:	push   rbx
  41ccf2:	sub    rsp,0x28
  41ccf6:	mov    ebx,edx
  41ccf8:	mov    rsi,rcx
  41ccfb:	call   0x41c850
  41cd00:	cmp    eax,ebx
  41cd02:	je     0x41cd10
  41cd04:	mov    rax,rsi
  41cd07:	add    rsp,0x28
  41cd0b:	pop    rbx
  41cd0c:	pop    rsi
  41cd0d:	ret    
  41cd0e:	xchg   ax,ax
  41cd10:	movzx  r9d,BYTE PTR [rsi]
  41cd14:	mov    r10,rsi
  41cd17:	mov    rdx,rsi
  41cd1a:	test   r9b,r9b
  41cd1d:	je     0x41cd6b
  41cd1f:	mov    r11d,0x1
  41cd25:	js     0x41cd80
  41cd27:	cmp    rdx,r10
  41cd2a:	je     0x41ce40
  41cd30:	mov    r8,r10
  41cd33:	mov    rbx,rdx
  41cd36:	jmp    0x41cd47
  41cd38:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd40:	movzx  r9d,BYTE PTR [rdx]
  41cd44:	mov    rbx,rdx
  41cd47:	add    r8,0x1
  41cd4b:	mov    BYTE PTR [r8-0x1],r9b
  41cd4f:	add    rdx,0x1
  41cd53:	mov    r9d,r8d
  41cd56:	sub    r9d,r10d
  41cd59:	cmp    r9d,r11d
  41cd5c:	jl     0x41cd40
  41cd5e:	movzx  r9d,BYTE PTR [rbx+0x1]
  41cd63:	mov    r10,r8
  41cd66:	test   r9b,r9b
  41cd69:	jne    0x41cd1f
  41cd6b:	cmp    r10,rdx
  41cd6e:	je     0x41cd04
  41cd70:	mov    rax,rsi
  41cd73:	mov    BYTE PTR [r10],0x0
  41cd77:	add    rsp,0x28
  41cd7b:	pop    rbx
  41cd7c:	pop    rsi
  41cd7d:	ret    
  41cd7e:	xchg   ax,ax
  41cd80:	mov    eax,r9d
  41cd83:	and    eax,0xffffffe0
  41cd86:	cmp    al,0xc0
  41cd88:	je     0x41ce50
  41cd8e:	mov    eax,r9d
  41cd91:	and    eax,0xfffffff0
  41cd94:	cmp    al,0xe0
  41cd96:	je     0x41ce74
  41cd9c:	mov    eax,r9d
  41cd9f:	and    eax,0xfffffff8
  41cda2:	cmp    al,0xf0
  41cda4:	jne    0x41cf00
  41cdaa:	movzx  r8d,BYTE PTR [rdx+0x1]
  41cdaf:	mov    ecx,r9d
  41cdb2:	and    ecx,0x7
  41cdb5:	mov    eax,r8d
  41cdb8:	and    eax,0x30
  41cdbb:	sar    eax,0x4
  41cdbe:	mov    r11d,eax
  41cdc1:	lea    eax,[rcx*4+0x0]
  41cdc8:	mov    ecx,r8d
  41cdcb:	and    ecx,0xffffffc0
  41cdce:	or     eax,r11d
  41cdd1:	cmp    cl,0x80
  41cdd4:	jne    0x41ce30
  41cdd6:	sub    eax,0x1
  41cdd9:	cmp    eax,0xf
  41cddc:	ja     0x41ce30
  41cdde:	movzx  eax,BYTE PTR [rdx+0x2]
  41cde2:	mov    ecx,eax
  41cde4:	and    ecx,0xffffffc0
  41cde7:	cmp    cl,0x80
  41cdea:	jne    0x41ce30
  41cdec:	movzx  ecx,BYTE PTR [rdx+0x3]
  41cdf0:	mov    r11d,ecx
  41cdf3:	and    r11d,0xffffffc0
  41cdf7:	cmp    r11b,0x80
  41cdfb:	jne    0x41ce30
  41cdfd:	mov    ebx,r8d
  41ce00:	mov    r11d,0x4
  41ce06:	and    ebx,0xf
  41ce09:	cmp    bl,0xf
  41ce0c:	jne    0x41cd27
  41ce12:	and    eax,0x3f
  41ce15:	cmp    al,0x3f
  41ce17:	jne    0x41cd27
  41ce1d:	and    ecx,0x3e
  41ce20:	cmp    cl,0x3e
  41ce23:	jne    0x41cd27
  41ce29:	nop    DWORD PTR [rax+0x0]
  41ce30:	mov    r9d,r8d
  41ce33:	add    rdx,0x1
  41ce37:	jmp    0x41cd1a
  41ce3c:	nop    DWORD PTR [rax+0x0]
  41ce40:	add    rdx,r11
  41ce43:	add    r10,r11
  41ce46:	movzx  r9d,BYTE PTR [rdx]
  41ce4a:	jmp    0x41cd1a
  41ce4f:	nop
  41ce50:	movzx  r8d,BYTE PTR [rdx+0x1]
  41ce55:	mov    eax,r8d
  41ce58:	and    eax,0xffffffc0
  41ce5b:	cmp    al,0x80
  41ce5d:	jne    0x41ce30
  41ce5f:	mov    eax,r9d
  41ce62:	and    eax,0x1f
  41ce65:	cmp    al,0x1
  41ce67:	jbe    0x41ce30
  41ce69:	mov    r11d,0x2
  41ce6f:	jmp    0x41cd27
  41ce74:	movzx  r8d,BYTE PTR [rdx+0x1]
  41ce79:	mov    eax,r8d
  41ce7c:	and    eax,0xffffffc0
  41ce7f:	cmp    al,0x80
  41ce81:	jne    0x41ce30
  41ce83:	mov    ebx,r9d
  41ce86:	and    ebx,0xf
  41ce89:	jne    0x41ceb0
  41ce8b:	test   r8b,0x20
  41ce8f:	je     0x41ce30
  41ce91:	movzx  eax,BYTE PTR [rdx+0x2]
  41ce95:	mov    r11d,0x3
  41ce9b:	and    eax,0xffffffc0
  41ce9e:	cmp    al,0x80
  41cea0:	je     0x41cd27
  41cea6:	jmp    0x41ce30
  41cea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ceb0:	movzx  eax,BYTE PTR [rdx+0x2]
  41ceb4:	and    eax,0xffffffc0
  41ceb7:	cmp    al,0x80
  41ceb9:	jne    0x41ce30
  41cebf:	mov    eax,r8d
  41cec2:	and    eax,0x3f
  41cec5:	shl    eax,0x6
  41cec8:	mov    ecx,eax
  41ceca:	mov    eax,r9d
  41cecd:	and    eax,0x3f
  41ced0:	or     eax,ecx
  41ced2:	cmp    bl,0xf
  41ced5:	je     0x41cf0a
  41ced7:	cmp    bl,0xd
  41ceda:	mov    r11d,0x3
  41cee0:	jne    0x41cd27
  41cee6:	and    eax,0xb00
  41ceeb:	cmp    eax,0x800
  41cef0:	jne    0x41cd27
  41cef6:	jmp    0x41ce30
  41cefb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf00:	movzx  r9d,BYTE PTR [rdx+0x1]
  41cf05:	jmp    0x41ce33
  41cf0a:	mov    ecx,eax
  41cf0c:	mov    r11d,0x3
  41cf12:	and    ecx,0xf80
  41cf18:	cmp    ecx,0xd80
  41cf1e:	jne    0x41cd27
  41cf24:	and    eax,0x7f
  41cf27:	sub    eax,0x30
  41cf2a:	cmp    eax,0x1f
  41cf2d:	ja     0x41cd27
  41cf33:	jmp    0x41ce30
  41cf38:	nop
  41cf39:	nop
  41cf3a:	nop
  41cf3b:	nop
  41cf3c:	nop
  41cf3d:	nop
  41cf3e:	nop
  41cf3f:	nop
  41cf40:	sub    rsp,0x28
  41cf44:	mov    rcx,QWORD PTR [rip+0x3d3fd]        # 0x45a348
  41cf4b:	test   rcx,rcx
  41cf4e:	je     0x41cf61
  41cf50:	call   0x427d68
  41cf55:	mov    rax,QWORD PTR [rip+0x3d3ec]        # 0x45a348
  41cf5c:	add    rsp,0x28
  41cf60:	ret    
  41cf61:	call   0x427dc0
  41cf66:	mov    QWORD PTR [rip+0x3d3db],rax        # 0x45a348
  41cf6d:	add    rsp,0x28
  41cf71:	ret    
  41cf72:	nop    DWORD PTR [rax+0x0]
  41cf76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf80:	push   rdi
  41cf81:	push   rsi
  41cf82:	push   rbx
  41cf83:	sub    rsp,0x20
  41cf87:	mov    rbx,rdx
  41cf8a:	mov    rsi,rcx
  41cf8d:	call   0x427d68
  41cf92:	movzx  r8d,BYTE PTR [rbx]
  41cf96:	cmp    r8b,0x3d
  41cf9a:	je     0x41cfc5
  41cf9c:	test   r8b,r8b
  41cf9f:	je     0x41cfc5
  41cfa1:	cmp    r8b,0x22
  41cfa5:	je     0x41cfd0
  41cfa7:	movsx  edx,r8b
  41cfab:	mov    rcx,rsi
  41cfae:	lea    rdi,[rbx+0x1]
  41cfb2:	call   0x427dd0
  41cfb7:	movzx  r8d,BYTE PTR [rbx+0x1]
  41cfbc:	mov    rbx,rdi
  41cfbf:	cmp    r8b,0x3d
  41cfc3:	jne    0x41cf9c
  41cfc5:	mov    rax,rbx
  41cfc8:	add    rsp,0x20
  41cfcc:	pop    rbx
  41cfcd:	pop    rsi
  41cfce:	pop    rdi
  41cfcf:	ret    
  41cfd0:	add    rbx,0x1
  41cfd4:	jmp    0x41cff5
  41cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfe0:	test   r8b,r8b
  41cfe3:	je     0x41cfc5
  41cfe5:	movsx  edx,r8b
  41cfe9:	mov    rcx,rsi
  41cfec:	add    rbx,0x1
  41cff0:	call   0x427dd0
  41cff5:	movzx  r8d,BYTE PTR [rbx]
  41cff9:	cmp    r8b,0x22
  41cffd:	jne    0x41cfe0
  41cfff:	movzx  r8d,BYTE PTR [rbx+0x1]
  41d004:	add    rbx,0x1
  41d008:	cmp    r8b,0x22
  41d00c:	je     0x41cfe5
  41d00e:	jmp    0x41cf96
  41d010:	push   rdi
  41d011:	push   rsi
  41d012:	push   rbx
  41d013:	sub    rsp,0x20
  41d017:	cmp    QWORD PTR [rcx+0x8],0x0
  41d01c:	mov    rbx,rcx
  41d01f:	mov    rdi,rdx
  41d022:	mov    rsi,r8
  41d025:	jne    0x41d050
  41d027:	mov    rdx,rdi
  41d02a:	mov    rcx,rbx
  41d02d:	call   0x427dc8
  41d032:	test   rsi,rsi
  41d035:	je     0x41d06a
  41d037:	lea    rdx,[rip+0x296b2]        # 0x4466f0
  41d03e:	mov    r8,rsi
  41d041:	mov    rcx,rbx
  41d044:	add    rsp,0x20
  41d048:	pop    rbx
  41d049:	pop    rsi
  41d04a:	pop    rdi
  41d04b:	jmp    0x427dd8
  41d050:	mov    edx,0x2c
  41d055:	call   0x427dd0
  41d05a:	mov    rdx,rdi
  41d05d:	mov    rcx,rbx
  41d060:	call   0x427dc8
  41d065:	test   rsi,rsi
  41d068:	jne    0x41d037
  41d06a:	add    rsp,0x20
  41d06e:	pop    rbx
  41d06f:	pop    rsi
  41d070:	pop    rdi
  41d071:	ret    
  41d072:	nop    DWORD PTR [rax+0x0]
  41d076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d080:	push   rsi
  41d081:	push   rbx
  41d082:	sub    rsp,0x28
  41d086:	mov    rbx,rcx
  41d089:	call   QWORD PTR [rip+0xf451]        # 0x42c4e0
  41d08f:	mov    rsi,rax
  41d092:	mov    eax,DWORD PTR [rip+0x3d2a8]        # 0x45a340
  41d098:	test   eax,eax
  41d09a:	jne    0x41d0ab
  41d09c:	movzx  edx,BYTE PTR [rbx]
  41d09f:	lea    eax,[rdx-0x61]
  41d0a2:	cmp    al,0x19
  41d0a4:	jbe    0x41d110
  41d0a6:	cmp    dl,0x5f
  41d0a9:	je     0x41d110
  41d0ab:	mov    edx,0x22
  41d0b0:	mov    rcx,rsi
  41d0b3:	call   0x427dd0
  41d0b8:	movzx  edx,BYTE PTR [rbx]
  41d0bb:	test   dl,dl
  41d0bd:	jne    0x41d0d7
  41d0bf:	jmp    0x41d0f0
  41d0c1:	movsx  edx,BYTE PTR [rbx]
  41d0c4:	mov    rcx,rsi
  41d0c7:	add    rbx,0x1
  41d0cb:	call   0x427dd0
  41d0d0:	movzx  edx,BYTE PTR [rbx]
  41d0d3:	test   dl,dl
  41d0d5:	je     0x41d0f0
  41d0d7:	cmp    dl,0x22
  41d0da:	jne    0x41d0c1
  41d0dc:	mov    edx,0x22
  41d0e1:	mov    rcx,rsi
  41d0e4:	call   0x427dd0
  41d0e9:	jmp    0x41d0c1
  41d0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0f0:	mov    edx,0x22
  41d0f5:	mov    rcx,rsi
  41d0f8:	call   0x427dd0
  41d0fd:	mov    rax,QWORD PTR [rsi]
  41d100:	add    rsp,0x28
  41d104:	pop    rbx
  41d105:	pop    rsi
  41d106:	ret    
  41d107:	nop    WORD PTR [rax+rax*1+0x0]
  41d110:	test   dl,dl
  41d112:	je     0x41d146
  41d114:	mov    r8,rbx
  41d117:	nop    WORD PTR [rax+rax*1+0x0]
  41d120:	lea    r9d,[rdx-0x61]
  41d124:	cmp    r9b,0x19
  41d128:	jbe    0x41d13a
  41d12a:	lea    eax,[rdx-0x30]
  41d12d:	cmp    al,0x9
  41d12f:	jbe    0x41d13a
  41d131:	cmp    dl,0x5f
  41d134:	jne    0x41d0ab
  41d13a:	add    r8,0x1
  41d13e:	movzx  edx,BYTE PTR [r8]
  41d142:	test   dl,dl
  41d144:	jne    0x41d120
  41d146:	mov    rax,QWORD PTR [rip+0x37513]        # 0x454660
  41d14d:	mov    rdx,QWORD PTR [rip+0x374ec]        # 0x454640
  41d154:	mov    rcx,rbx
  41d157:	mov    r8d,DWORD PTR [rax]
  41d15a:	call   0x41ef60
  41d15f:	test   rax,rax
  41d162:	je     0x41d16f
  41d164:	cmp    WORD PTR [rax+0xa],0x0
  41d169:	jne    0x41d0ab
  41d16f:	mov    rdx,rbx
  41d172:	mov    rcx,rsi
  41d175:	call   0x427dc8
  41d17a:	mov    rax,QWORD PTR [rsi]
  41d17d:	add    rsp,0x28
  41d181:	pop    rbx
  41d182:	pop    rsi
  41d183:	ret    
  41d184:	xchg   ax,ax
  41d186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d190:	push   rbp
  41d191:	push   rdi
  41d192:	push   rsi
  41d193:	push   rbx
  41d194:	sub    rsp,0x28
  41d198:	mov    ebp,ecx
  41d19a:	mov    rsi,rdx
  41d19d:	mov    rdi,r8
  41d1a0:	call   0x427dc0
  41d1a5:	cmp    ebp,0x1129b
  41d1ab:	mov    rbx,rax
  41d1ae:	jle    0x41d1ba
  41d1b0:	test   rsi,rsi
  41d1b3:	je     0x41d1ba
  41d1b5:	cmp    BYTE PTR [rsi],0x0
  41d1b8:	jne    0x41d1f5
  41d1ba:	mov    rcx,rdi
  41d1bd:	call   0x41d080
  41d1c2:	mov    rcx,rbx
  41d1c5:	mov    rdx,rax
  41d1c8:	call   0x427dc8
  41d1cd:	call   QWORD PTR [rip+0xf30d]        # 0x42c4e0
  41d1d3:	mov    rdx,QWORD PTR [rbx]
  41d1d6:	mov    rcx,rax
  41d1d9:	mov    rsi,rax
  41d1dc:	call   0x427dc8
  41d1e1:	mov    rcx,rbx
  41d1e4:	call   0x427db8
  41d1e9:	mov    rax,QWORD PTR [rsi]
  41d1ec:	add    rsp,0x28
  41d1f0:	pop    rbx
  41d1f1:	pop    rsi
  41d1f2:	pop    rdi
  41d1f3:	pop    rbp
  41d1f4:	ret    
  41d1f5:	mov    rcx,rsi
  41d1f8:	call   0x41d080
  41d1fd:	lea    rdx,[rip+0x294f1]        # 0x4466f5
  41d204:	mov    r8,rax
  41d207:	mov    rcx,rbx
  41d20a:	call   0x427dd8
  41d20f:	jmp    0x41d1ba
  41d211:	nop    DWORD PTR [rax+rax*1+0x0]
  41d216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d220:	push   r12
  41d222:	push   rbp
  41d223:	push   rdi
  41d224:	push   rsi
  41d225:	push   rbx
  41d226:	sub    rsp,0x20
  41d22a:	mov    rbp,rcx
  41d22d:	mov    rcx,rdx
  41d230:	mov    rbx,rdx
  41d233:	mov    edi,r8d
  41d236:	mov    r12d,r9d
  41d239:	call   0x42a400
  41d23e:	lea    rdx,[rax+rax*1+0x2]
  41d243:	mov    rcx,rbp
  41d246:	call   0x427db0
  41d24b:	test   eax,eax
  41d24d:	je     0x41d313
  41d253:	mov    rax,QWORD PTR [rbp+0x8]
  41d257:	add    rax,QWORD PTR [rbp+0x0]
  41d25b:	lea    rsi,[rax+0x1]
  41d25f:	mov    BYTE PTR [rax],0x27
  41d262:	jmp    0x41d27a
  41d264:	test   r12b,r12b
  41d267:	jne    0x41d28b
  41d269:	lea    r10,[rsi+0x1]
  41d26d:	mov    BYTE PTR [rsi],al
  41d26f:	lea    rsi,[r10+0x1]
  41d273:	mov    BYTE PTR [r10],al
  41d276:	add    rbx,0x1
  41d27a:	movzx  eax,BYTE PTR [rbx]
  41d27d:	test   al,al
  41d27f:	je     0x41d300
  41d281:	js     0x41d290
  41d283:	cmp    al,0x27
  41d285:	je     0x41d269
  41d287:	cmp    al,0x5c
  41d289:	je     0x41d264
  41d28b:	mov    r10,rsi
  41d28e:	jmp    0x41d26f
  41d290:	mov    edx,edi
  41d292:	mov    rcx,rbx
  41d295:	call   0x427e88
  41d29a:	test   eax,eax
  41d29c:	jle    0x41d27a
  41d29e:	movzx  r11d,BYTE PTR [rbx]
  41d2a2:	test   r11b,r11b
  41d2a5:	je     0x41d31e
  41d2a7:	xor    r10d,r10d
  41d2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41d2b0:	add    r10d,0x1
  41d2b4:	add    rsi,0x1
  41d2b8:	add    rbx,0x1
  41d2bc:	cmp    r10d,eax
  41d2bf:	mov    BYTE PTR [rsi-0x1],r11b
  41d2c3:	je     0x41d27a
  41d2c5:	movzx  r11d,BYTE PTR [rbx]
  41d2c9:	test   r11b,r11b
  41d2cc:	jne    0x41d2b0
  41d2ce:	mov    rdx,QWORD PTR [rbp+0x10]
  41d2d2:	mov    rcx,QWORD PTR [rbp+0x0]
  41d2d6:	cmp    eax,r10d
  41d2d9:	lea    rdx,[rcx+rdx*1-0x2]
  41d2de:	jle    0x41d300
  41d2e0:	cmp    rdx,rsi
  41d2e3:	jbe    0x41d300
  41d2e5:	add    r10d,0x1
  41d2e9:	add    rsi,0x1
  41d2ed:	mov    BYTE PTR [rsi-0x1],0x20
  41d2f1:	cmp    eax,r10d
  41d2f4:	jg     0x41d2e0
  41d2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d300:	mov    BYTE PTR [rsi],0x27
  41d303:	mov    BYTE PTR [rsi+0x1],0x0
  41d307:	add    rsi,0x1
  41d30b:	sub    rsi,QWORD PTR [rbp+0x0]
  41d30f:	mov    QWORD PTR [rbp+0x8],rsi
  41d313:	add    rsp,0x20
  41d317:	pop    rbx
  41d318:	pop    rsi
  41d319:	pop    rdi
  41d31a:	pop    rbp
  41d31b:	pop    r12
  41d31d:	ret    
  41d31e:	xor    r10d,r10d
  41d321:	jmp    0x41d2ce
  41d323:	nop    DWORD PTR [rax]
  41d326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d330:	push   rbp
  41d331:	push   rdi
  41d332:	push   rsi
  41d333:	push   rbx
  41d334:	sub    rsp,0x38
  41d338:	mov    rsi,rdx
  41d33b:	mov    rbx,rcx
  41d33e:	mov    rcx,rdx
  41d341:	mov    rdi,r8
  41d344:	call   0x42a400
  41d349:	mov    edx,0x5c
  41d34e:	mov    rcx,rsi
  41d351:	mov    rbp,rax
  41d354:	call   0x42a428
  41d359:	test   rax,rax
  41d35c:	je     0x41d3c0
  41d35e:	mov    rcx,rdi
  41d361:	call   0x427e18
  41d366:	cmp    eax,0x138e3
  41d36b:	jle    0x41d3c0
  41d36d:	mov    rax,QWORD PTR [rbx+0x8]
  41d371:	test   rax,rax
  41d374:	je     0x41d38d
  41d376:	mov    rdx,QWORD PTR [rbx]
  41d379:	cmp    BYTE PTR [rdx+rax*1-0x1],0x20
  41d37e:	je     0x41d38d
  41d380:	mov    edx,0x20
  41d385:	mov    rcx,rbx
  41d388:	call   0x427dd0
  41d38d:	mov    edx,0x45
  41d392:	mov    rcx,rbx
  41d395:	call   0x427dd0
  41d39a:	mov    rcx,rdi
  41d39d:	call   0x427f60
  41d3a2:	xor    r9d,r9d
  41d3a5:	mov    r8d,eax
  41d3a8:	mov    rdx,rsi
  41d3ab:	mov    rcx,rbx
  41d3ae:	add    rsp,0x38
  41d3b2:	pop    rbx
  41d3b3:	pop    rsi
  41d3b4:	pop    rdi
  41d3b5:	pop    rbp
  41d3b6:	jmp    0x41d220
  41d3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3c0:	lea    rdx,[rbp+rbp*1+0x2]
  41d3c5:	mov    rcx,rbx
  41d3c8:	call   0x427db0
  41d3cd:	test   eax,eax
  41d3cf:	jne    0x41d3e0
  41d3d1:	add    rsp,0x38
  41d3d5:	pop    rbx
  41d3d6:	pop    rsi
  41d3d7:	pop    rdi
  41d3d8:	pop    rbp
  41d3d9:	ret    
  41d3da:	nop    WORD PTR [rax+rax*1+0x0]
  41d3e0:	mov    rcx,rbx
  41d3e3:	mov    edx,0x27
  41d3e8:	call   0x427dd0
  41d3ed:	mov    rdx,QWORD PTR [rbx+0x8]
  41d3f1:	add    rdx,QWORD PTR [rbx]
  41d3f4:	mov    rcx,rdi
  41d3f7:	mov    QWORD PTR [rsp+0x20],0x0
  41d400:	mov    r9,rbp
  41d403:	mov    r8,rsi
  41d406:	call   0x427ef8
  41d40b:	add    QWORD PTR [rbx+0x8],rax
  41d40f:	mov    edx,0x27
  41d414:	mov    rcx,rbx
  41d417:	add    rsp,0x38
  41d41b:	pop    rbx
  41d41c:	pop    rsi
  41d41d:	pop    rdi
  41d41e:	pop    rbp
  41d41f:	jmp    0x427dd0
  41d424:	xchg   ax,ax
  41d426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d430:	push   r12
  41d432:	push   rbp
  41d433:	push   rdi
  41d434:	push   rsi
  41d435:	push   rbx
  41d436:	sub    rsp,0x20
  41d43a:	mov    rbx,r8
  41d43d:	mov    r12,rcx
  41d440:	mov    rbp,rdx
  41d443:	call   0x427dc0
  41d448:	mov    edx,0x24
  41d44d:	mov    rcx,rax
  41d450:	mov    rsi,rax
  41d453:	call   0x427dd0
  41d458:	test   rbx,rbx
  41d45b:	je     0x41d468
  41d45d:	mov    rdx,rbx
  41d460:	mov    rcx,rsi
  41d463:	call   0x427dc8
  41d468:	xor    ebx,ebx
  41d46a:	jmp    0x41d48c
  41d46c:	nop    DWORD PTR [rax+0x0]
  41d470:	lea    rax,[rip+0x2962a]        # 0x446aa1
  41d477:	lea    edi,[rbx+0x1]
  41d47a:	mov    rcx,rsi
  41d47d:	movsx  edx,BYTE PTR [rax+rbx*1]
  41d481:	and    edi,0x7
  41d484:	movsxd rbx,edi
  41d487:	call   0x427dd0
  41d48c:	mov    rdx,QWORD PTR [rsi]
  41d48f:	mov    rcx,rbp
  41d492:	call   0x42a3d8
  41d497:	test   rax,rax
  41d49a:	jne    0x41d470
  41d49c:	mov    rcx,rsi
  41d49f:	mov    edx,0x24
  41d4a4:	call   0x427dd0
  41d4a9:	mov    rdx,QWORD PTR [rsi]
  41d4ac:	mov    rcx,r12
  41d4af:	call   0x427dc8
  41d4b4:	mov    rdx,rbp
  41d4b7:	mov    rcx,r12
  41d4ba:	call   0x427dc8
  41d4bf:	mov    rdx,QWORD PTR [rsi]
  41d4c2:	mov    rcx,r12
  41d4c5:	call   0x427dc8
  41d4ca:	mov    rcx,rsi
  41d4cd:	add    rsp,0x20
  41d4d1:	pop    rbx
  41d4d2:	pop    rsi
  41d4d3:	pop    rdi
  41d4d4:	pop    rbp
  41d4d5:	pop    r12
  41d4d7:	jmp    0x427db8
  41d4dc:	nop    DWORD PTR [rax+0x0]
  41d4e0:	push   r12
  41d4e2:	push   rbp
  41d4e3:	push   rdi
  41d4e4:	push   rsi
  41d4e5:	push   rbx
  41d4e6:	sub    rsp,0x20
  41d4ea:	lea    rdi,[r8+r8*1]
  41d4ee:	mov    rbx,rdx
  41d4f1:	mov    rsi,rcx
  41d4f4:	mov    rbp,r8
  41d4f7:	mov    r12d,r9d
  41d4fa:	lea    rdx,[rdi+0x5]
  41d4fe:	call   0x427db0
  41d503:	test   eax,eax
  41d505:	je     0x41d585
  41d507:	mov    rax,QWORD PTR [rsi+0x8]
  41d50b:	add    rax,QWORD PTR [rsi]
  41d50e:	test   r12b,r12b
  41d511:	mov    BYTE PTR [rax],0x27
  41d514:	lea    rdx,[rax+0x1]
  41d518:	je     0x41d590
  41d51a:	test   rbp,rbp
  41d51d:	mov    BYTE PTR [rdx],0x5c
  41d520:	lea    rcx,[rdx+0x2]
  41d524:	mov    BYTE PTR [rdx+0x1],0x78
  41d528:	je     0x41d573
  41d52a:	lea    r8,[rbx+rbp*1]
  41d52e:	lea    r10,[rip+0x2955b]        # 0x446a90
  41d535:	mov    rdx,rcx
  41d538:	nop    DWORD PTR [rax+rax*1+0x0]
  41d540:	add    rbx,0x1
  41d544:	movzx  eax,BYTE PTR [rbx-0x1]
  41d548:	add    rdx,0x2
  41d54c:	mov    r9d,eax
  41d54f:	and    eax,0xf
  41d552:	shr    r9b,0x4
  41d556:	movzx  eax,BYTE PTR [r10+rax*1]
  41d55b:	and    r9d,0xf
  41d55f:	movzx  r9d,BYTE PTR [r10+r9*1]
  41d564:	mov    BYTE PTR [rdx-0x2],r9b
  41d568:	cmp    rbx,r8
  41d56b:	mov    BYTE PTR [rdx-0x1],al
  41d56e:	jne    0x41d540
  41d570:	add    rcx,rdi
  41d573:	mov    BYTE PTR [rcx],0x27
  41d576:	mov    BYTE PTR [rcx+0x1],0x0
  41d57a:	add    rcx,0x1
  41d57e:	sub    rcx,QWORD PTR [rsi]
  41d581:	mov    QWORD PTR [rsi+0x8],rcx
  41d585:	add    rsp,0x20
  41d589:	pop    rbx
  41d58a:	pop    rsi
  41d58b:	pop    rdi
  41d58c:	pop    rbp
  41d58d:	pop    r12
  41d58f:	ret    
  41d590:	lea    rdx,[rax+0x2]
  41d594:	mov    BYTE PTR [rax+0x1],0x5c
  41d598:	jmp    0x41d51a
  41d59a:	nop    WORD PTR [rax+rax*1+0x0]
  41d5a0:	push   rbp
  41d5a1:	push   rdi
  41d5a2:	push   rsi
  41d5a3:	push   rbx
  41d5a4:	sub    rsp,0x28
  41d5a8:	mov    QWORD PTR [rdx],0x0
  41d5af:	mov    DWORD PTR [r8],0x0
  41d5b6:	mov    rbx,rcx
  41d5b9:	mov    rdi,rdx
  41d5bc:	mov    rsi,r8
  41d5bf:	call   0x42a400
  41d5c4:	cmp    eax,0x1
  41d5c7:	jle    0x41d5ce
  41d5c9:	cmp    BYTE PTR [rbx],0x7b
  41d5cc:	je     0x41d5e0
  41d5ce:	xor    eax,eax
  41d5d0:	add    rsp,0x28
  41d5d4:	pop    rbx
  41d5d5:	pop    rsi
  41d5d6:	pop    rdi
  41d5d7:	pop    rbp
  41d5d8:	ret    
  41d5d9:	nop    DWORD PTR [rax+0x0]
  41d5e0:	cdqe   
  41d5e2:	cmp    BYTE PTR [rbx+rax*1-0x1],0x7d
  41d5e7:	jne    0x41d5ce
  41d5e9:	lea    rbp,[rax*8+0x0]
  41d5f1:	lea    rcx,[rbp+rax*1+0x0]
  41d5f6:	call   0x42a4a0
  41d5fb:	test   rax,rax
  41d5fe:	je     0x41d5ce
  41d600:	mov    QWORD PTR [rdi],rax
  41d603:	movzx  edx,BYTE PTR [rbx+0x1]
  41d607:	lea    r9,[rax+rbp*1]
  41d60b:	lea    r8,[rbx+0x1]
  41d60f:	cmp    dl,0x7d
  41d612:	je     0x41d6db
  41d618:	test   dl,dl
  41d61a:	je     0x41d5ce
  41d61c:	xor    r11d,r11d
  41d61f:	movsxd rcx,r11d
  41d622:	mov    QWORD PTR [rax+rcx*8],r9
  41d626:	jmp    0x41d63f
  41d628:	nop    DWORD PTR [rax+rax*1+0x0]
  41d630:	mov    BYTE PTR [r9],dl
  41d633:	add    r8,0x1
  41d637:	add    r9,0x1
  41d63b:	movzx  edx,BYTE PTR [r8]
  41d63f:	cmp    dl,0x2c
  41d642:	je     0x41d6a6
  41d644:	cmp    dl,0x7d
  41d647:	je     0x41d6a6
  41d649:	test   dl,dl
  41d64b:	je     0x41d5ce
  41d64d:	cmp    dl,0x22
  41d650:	jne    0x41d630
  41d652:	movzx  edx,BYTE PTR [r8+0x1]
  41d657:	lea    rcx,[r8+0x1]
  41d65b:	cmp    dl,0x22
  41d65e:	jne    0x41d67e
  41d660:	jmp    0x41d6a0
  41d662:	movzx  r10d,BYTE PTR [rcx]
  41d666:	mov    rdx,rcx
  41d669:	lea    rcx,[rdx+0x1]
  41d66d:	movzx  edx,BYTE PTR [rdx+0x1]
  41d671:	add    r9,0x1
  41d675:	mov    BYTE PTR [r9-0x1],r10b
  41d679:	cmp    dl,0x22
  41d67c:	je     0x41d6a0
  41d67e:	test   dl,dl
  41d680:	je     0x41d5ce
  41d686:	cmp    dl,0x5c
  41d689:	jne    0x41d662
  41d68b:	movzx  r10d,BYTE PTR [rcx+0x1]
  41d690:	lea    rdx,[rcx+0x1]
  41d694:	test   r10b,r10b
  41d697:	jne    0x41d669
  41d699:	jmp    0x41d5ce
  41d69e:	xchg   ax,ax
  41d6a0:	lea    r8,[rcx+0x1]
  41d6a4:	jmp    0x41d63b
  41d6a6:	mov    rcx,r9
  41d6a9:	add    r9,0x1
  41d6ad:	cmp    dl,0x2c
  41d6b0:	mov    r10,r8
  41d6b3:	mov    BYTE PTR [rcx],0x0
  41d6b6:	je     0x41d6d0
  41d6b8:	add    r11d,0x1
  41d6bc:	cmp    dl,0x7d
  41d6bf:	je     0x41d6de
  41d6c1:	test   dl,dl
  41d6c3:	jne    0x41d61f
  41d6c9:	jmp    0x41d5ce
  41d6ce:	xchg   ax,ax
  41d6d0:	add    r8,0x1
  41d6d4:	movzx  edx,BYTE PTR [r10+0x1]
  41d6d9:	jmp    0x41d6b8
  41d6db:	xor    r11d,r11d
  41d6de:	cmp    BYTE PTR [r8+0x1],0x0
  41d6e3:	jne    0x41d5ce
  41d6e9:	mov    DWORD PTR [rsi],r11d
  41d6ec:	mov    eax,0x1
  41d6f1:	jmp    0x41d5d0
  41d6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d700:	push   r15
  41d702:	push   r14
  41d704:	push   r13
  41d706:	push   r12
  41d708:	push   rbp
  41d709:	push   rdi
  41d70a:	push   rsi
  41d70b:	push   rbx
  41d70c:	sub    rsp,0x88
  41d713:	mov    r14,QWORD PTR [rsp+0xf0]
  41d71b:	mov    QWORD PTR [rsp+0xd0],rcx
  41d723:	mov    QWORD PTR [rsp+0xd8],rdx
  41d72b:	mov    QWORD PTR [rsp+0xe0],r8
  41d733:	test   r14,r14
  41d736:	je     0x41d745
  41d738:	cmp    BYTE PTR [r14],0x0
  41d73c:	mov    eax,0x0
  41d741:	cmove  r14,rax
  41d745:	lea    rdx,[rsp+0x78]
  41d74a:	lea    r8,[rsp+0x74]
  41d74f:	mov    rcx,r9
  41d752:	call   0x41d5a0
  41d757:	test   al,al
  41d759:	jne    0x41d790
  41d75b:	mov    rcx,QWORD PTR [rsp+0x78]
  41d760:	test   rcx,rcx
  41d763:	je     0x41d773
  41d765:	mov    BYTE PTR [rsp+0x40],al
  41d769:	call   0x42a4e8
  41d76e:	movzx  eax,BYTE PTR [rsp+0x40]
  41d773:	add    rsp,0x88
  41d77a:	pop    rbx
  41d77b:	pop    rsi
  41d77c:	pop    rdi
  41d77d:	pop    rbp
  41d77e:	pop    r12
  41d780:	pop    r13
  41d782:	pop    r14
  41d784:	pop    r15
  41d786:	ret    
  41d787:	nop    WORD PTR [rax+rax*1+0x0]
  41d790:	call   0x427dc0
  41d795:	mov    QWORD PTR [rsp+0x48],rax
  41d79a:	call   0x427dc0
  41d79f:	mov    r15,rax
  41d7a2:	call   0x427dc0
  41d7a7:	mov    r13,rax
  41d7aa:	call   0x427dc0
  41d7af:	mov    QWORD PTR [rsp+0x40],rax
  41d7b4:	call   0x427dc0
  41d7b9:	mov    rsi,rax
  41d7bc:	mov    QWORD PTR [rsp+0x60],rax
  41d7c1:	call   0x427dc0
  41d7c6:	mov    r8,QWORD PTR [rsp+0xf8]
  41d7ce:	lea    rdx,[rip+0x28f24]        # 0x4466f9
  41d7d5:	mov    rcx,rsi
  41d7d8:	mov    QWORD PTR [rsp+0x50],rax
  41d7dd:	call   0x427dd8
  41d7e2:	cmp    QWORD PTR [rsp+0xd8],0x0
  41d7eb:	je     0x41d804
  41d7ed:	mov    r8,QWORD PTR [rsp+0xd8]
  41d7f5:	lea    rdx,[rip+0x28ef4]        # 0x4466f0
  41d7fc:	mov    rcx,rsi
  41d7ff:	call   0x427dd8
  41d804:	mov    r9,QWORD PTR [rsp+0xd0]
  41d80c:	mov    r8,QWORD PTR [rsp+0xe0]
  41d814:	lea    rdx,[rip+0x28eeb]        # 0x446706
  41d81b:	mov    rcx,QWORD PTR [rsp+0x60]
  41d820:	call   0x427dd8
  41d825:	cmp    DWORD PTR [rsp+0x100],0x13947
  41d830:	jle    0x41e120
  41d836:	mov    eax,DWORD PTR [rsp+0x74]
  41d83a:	xor    ebp,ebp
  41d83c:	mov    BYTE PTR [rsp+0x6f],0x0
  41d841:	test   eax,eax
  41d843:	jle    0x41e559
  41d849:	nop    DWORD PTR [rax+0x0]
  41d850:	mov    rbx,QWORD PTR [rsp+0x78]
  41d855:	movsxd rax,ebp
  41d858:	mov    rcx,QWORD PTR [rbx+rax*8]
  41d85c:	call   0x42a390
  41d861:	test   rax,rax
  41d864:	mov    r12,rax
  41d867:	je     0x41dd2d
  41d86d:	mov    rcx,QWORD PTR [rsp+0x48]
  41d872:	mov    rdx,rax
  41d875:	call   0x41cf80
  41d87a:	cmp    BYTE PTR [rax],0x3d
  41d87d:	jne    0x41dd20
  41d883:	lea    rbx,[rax+0x1]
  41d887:	mov    edx,0x2f
  41d88c:	mov    rcx,rbx
  41d88f:	call   0x42a428
  41d894:	test   rax,rax
  41d897:	je     0x41e0b0
  41d89d:	lea    rdx,[rax+0x1]
  41d8a1:	mov    BYTE PTR [rax],0x0
  41d8a4:	mov    rcx,r15
  41d8a7:	call   0x41cf80
  41d8ac:	cmp    BYTE PTR [rax],0x0
  41d8af:	jne    0x41dd20
  41d8b5:	mov    rcx,r13
  41d8b8:	lea    rdi,[rip+0x28e8e]        # 0x44674d
  41d8bf:	call   0x427d68
  41d8c4:	mov    rcx,QWORD PTR [rsp+0x40]
  41d8c9:	call   0x427d68
  41d8ce:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d8d6:	mov    ecx,0x6
  41d8db:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8dd:	je     0x41dd40
  41d8e3:	lea    rdi,[rip+0x28e69]        # 0x446753
  41d8ea:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d8f2:	mov    ecx,0x9
  41d8f7:	mov    QWORD PTR [rsp+0x58],rdi
  41d8fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8fe:	je     0x41dd70
  41d904:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d90c:	lea    rdi,[rip+0x28e49]        # 0x44675c
  41d913:	mov    ecx,0x7
  41d918:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d91a:	je     0x41da80
  41d920:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d928:	lea    rdi,[rip+0x28e34]        # 0x446763
  41d92f:	mov    ecx,0xa
  41d934:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d936:	je     0x41dd70
  41d93c:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d944:	lea    rdi,[rip+0x28e6e]        # 0x4467b9
  41d94b:	mov    ecx,0x9
  41d950:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d952:	je     0x41e020
  41d958:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d960:	lea    rdi,[rip+0x28e5b]        # 0x4467c2
  41d967:	mov    ecx,0xa
  41d96c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d96e:	je     0x41e020
  41d974:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d97c:	lea    rdi,[rip+0x28e51]        # 0x4467d4
  41d983:	mov    ecx,0x9
  41d988:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d98a:	je     0x41e569
  41d990:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d998:	lea    rdi,[rip+0x28e3e]        # 0x4467dd
  41d99f:	mov    ecx,0x7
  41d9a4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9a6:	jne    0x41e5d6
  41d9ac:	mov    edx,0x43
  41d9b1:	mov    rcx,rbx
  41d9b4:	call   0x42a428
  41d9b9:	test   rax,rax
  41d9bc:	je     0x41e739
  41d9c2:	cmp    BYTE PTR [rax+0x1],0x2a
  41d9c6:	mov    r8,QWORD PTR [rsp+0xd8]
  41d9ce:	lea    rdx,[rip+0x28e0f]        # 0x4467e4
  41d9d5:	je     0x41e720
  41d9db:	mov    rcx,r13
  41d9de:	call   0x41d010
  41d9e3:	mov    BYTE PTR [rsp+0x6e],0x1
  41d9e8:	mov    BYTE PTR [rsp+0x6d],0x0
  41d9ed:	mov    edx,0x55
  41d9f2:	mov    rcx,rbx
  41d9f5:	call   0x42a428
  41d9fa:	test   rax,rax
  41d9fd:	je     0x41dbde
  41da03:	cmp    BYTE PTR [rax+0x1],0x2a
  41da07:	mov    r8,QWORD PTR [rsp+0xd8]
  41da0f:	lea    rdx,[rip+0x28d5e]        # 0x446774
  41da16:	jne    0x41dbcb
  41da1c:	nop    DWORD PTR [rax+0x0]
  41da20:	mov    rcx,QWORD PTR [rsp+0x40]
  41da25:	call   0x41d010
  41da2a:	cmp    BYTE PTR [rsp+0x6d],0x0
  41da2f:	je     0x41dbde
  41da35:	mov    rcx,r13
  41da38:	call   0x427d68
  41da3d:	mov    rbx,QWORD PTR [rsp+0x40]
  41da42:	lea    rdx,[rip+0x28e09]        # 0x446852
  41da49:	mov    rcx,rbx
  41da4c:	call   0x427d70
  41da51:	cmp    QWORD PTR [rsp+0xd8],0x0
  41da5a:	je     0x41dbde
  41da60:	mov    r8,QWORD PTR [rsp+0xd8]
  41da68:	lea    rdx,[rip+0x28c81]        # 0x4466f0
  41da6f:	mov    rcx,rbx
  41da72:	call   0x427dd8
  41da77:	jmp    0x41dbde
  41da7c:	nop    DWORD PTR [rax+0x0]
  41da80:	mov    edx,0x72
  41da85:	mov    rcx,rbx
  41da88:	call   0x42a428
  41da8d:	test   rax,rax
  41da90:	je     0x41e2d0
  41da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41daa0:	cmp    BYTE PTR [rax+0x1],0x2a
  41daa4:	mov    r8,QWORD PTR [rsp+0xd8]
  41daac:	lea    rdx,[rip+0x28cba]        # 0x44676d
  41dab3:	je     0x41e000
  41dab9:	mov    rcx,r13
  41dabc:	call   0x41d010
  41dac1:	mov    BYTE PTR [rsp+0x6e],0x1
  41dac6:	mov    BYTE PTR [rsp+0x6d],0x0
  41dacb:	mov    rsi,QWORD PTR [rsp+0xe0]
  41dad3:	mov    rdi,QWORD PTR [rsp+0x58]
  41dad8:	mov    ecx,0x9
  41dadd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dadf:	je     0x41dd90
  41dae5:	mov    rsi,QWORD PTR [rsp+0xe0]
  41daed:	lea    rdi,[rip+0x28c6f]        # 0x446763
  41daf4:	mov    ecx,0xa
  41daf9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dafb:	je     0x41dd90
  41db01:	mov    edx,0x61
  41db06:	mov    rcx,rbx
  41db09:	call   0x42a428
  41db0e:	test   rax,rax
  41db11:	je     0x41e411
  41db17:	cmp    BYTE PTR [rax+0x1],0x2a
  41db1b:	mov    r8,QWORD PTR [rsp+0xd8]
  41db23:	lea    rdx,[rip+0x28c50]        # 0x44677a
  41db2a:	je     0x41e170
  41db30:	mov    rcx,r13
  41db33:	call   0x41d010
  41db38:	mov    BYTE PTR [rsp+0x6d],0x0
  41db3d:	cmp    DWORD PTR [rsp+0x100],0x11237
  41db48:	jle    0x41dddd
  41db4e:	mov    edx,0x78
  41db53:	mov    rcx,rbx
  41db56:	call   0x42a428
  41db5b:	test   rax,rax
  41db5e:	je     0x41e484
  41db64:	cmp    BYTE PTR [rax+0x1],0x2a
  41db68:	mov    r8,QWORD PTR [rsp+0xd8]
  41db70:	lea    rdx,[rip+0x28c0a]        # 0x446781
  41db77:	je     0x41e470
  41db7d:	mov    rcx,r13
  41db80:	call   0x41d010
  41db85:	mov    BYTE PTR [rsp+0x6d],0x0
  41db8a:	cmp    QWORD PTR [rsp+0xd8],0x0
  41db93:	je     0x41e2df
  41db99:	nop    DWORD PTR [rax+0x0]
  41dba0:	mov    edx,0x77
  41dba5:	mov    rcx,rbx
  41dba8:	call   0x42a428
  41dbad:	test   rax,rax
  41dbb0:	je     0x41dbde
  41dbb2:	cmp    BYTE PTR [rax+0x1],0x2a
  41dbb6:	mov    r8,QWORD PTR [rsp+0xd8]
  41dbbe:	lea    rdx,[rip+0x28bdf]        # 0x4467a4
  41dbc5:	je     0x41da20
  41dbcb:	mov    rcx,r13
  41dbce:	call   0x41d010
  41dbd3:	cmp    BYTE PTR [rsp+0x6e],0x0
  41dbd8:	jne    0x41e060
  41dbde:	mov    rcx,r12
  41dbe1:	call   0x42a4e8
  41dbe6:	test   r14,r14
  41dbe9:	setne  bl
  41dbec:	je     0x41dc07
  41dbee:	cmp    QWORD PTR [r15+0x8],0x0
  41dbf3:	jne    0x41dc07
  41dbf5:	lea    rdx,[rip+0x28c5a]        # 0x446856
  41dbfc:	mov    r8,r14
  41dbff:	mov    rcx,r15
  41dc02:	call   0x427d70
  41dc07:	mov    rsi,QWORD PTR [r13+0x8]
  41dc0b:	test   rsi,rsi
  41dc0e:	jne    0x41dc1c
  41dc10:	mov    rax,QWORD PTR [rsp+0x40]
  41dc15:	cmp    QWORD PTR [rax+0x8],0x0
  41dc1a:	je     0x41dc90
  41dc1c:	test   bl,bl
  41dc1e:	je     0x41de50
  41dc24:	mov    rax,QWORD PTR [rsp+0x48]
  41dc29:	mov    rdx,r14
  41dc2c:	mov    rcx,QWORD PTR [rax]
  41dc2f:	call   0x42a420
  41dc34:	test   eax,eax
  41dc36:	jne    0x41de50
  41dc3c:	mov    rcx,QWORD PTR [r15]
  41dc3f:	mov    rdx,r14
  41dc42:	call   0x42a420
  41dc47:	test   eax,eax
  41dc49:	jne    0x41de50
  41dc4f:	cmp    DWORD PTR [rsp+0x100],0x112ff
  41dc5a:	jle    0x41e0a4
  41dc60:	mov    rax,QWORD PTR [rsp+0x40]
  41dc65:	mov    rsi,QWORD PTR [rax]
  41dc68:	lea    rdi,[rip+0x28be3]        # 0x446852
  41dc6f:	mov    ecx,0x4
  41dc74:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dc76:	setne  al
  41dc79:	test   al,al
  41dc7b:	jne    0x41e1e0
  41dc81:	mov    BYTE PTR [rsp+0x6f],0x1
  41dc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc90:	add    ebp,0x1
  41dc93:	cmp    ebp,DWORD PTR [rsp+0x74]
  41dc97:	jl     0x41d850
  41dc9d:	movzx  eax,BYTE PTR [rsp+0x6f]
  41dca2:	xor    eax,0x1
  41dca5:	test   bl,bl
  41dca7:	je     0x41dcb1
  41dca9:	test   al,al
  41dcab:	jne    0x41e3a0
  41dcb1:	mov    rcx,QWORD PTR [rsp+0x48]
  41dcb6:	call   0x427db8
  41dcbb:	mov    rcx,r15
  41dcbe:	call   0x427db8
  41dcc3:	mov    rcx,r13
  41dcc6:	call   0x427db8
  41dccb:	mov    rcx,QWORD PTR [rsp+0x40]
  41dcd0:	call   0x427db8
  41dcd5:	mov    rbx,QWORD PTR [rsp+0x50]
  41dcda:	mov    rsi,QWORD PTR [rsp+0x60]
  41dcdf:	lea    rdx,[rip+0x28c74]        # 0x44695a
  41dce6:	mov    rcx,QWORD PTR [rsp+0x108]
  41dcee:	mov    r9,QWORD PTR [rbx]
  41dcf1:	mov    r8,QWORD PTR [rsi]
  41dcf4:	call   0x427dd8
  41dcf9:	mov    rcx,rsi
  41dcfc:	call   0x427db8
  41dd01:	mov    rcx,rbx
  41dd04:	call   0x427db8
  41dd09:	mov    rcx,QWORD PTR [rsp+0x78]
  41dd0e:	call   0x42a4e8
  41dd13:	mov    eax,0x1
  41dd18:	jmp    0x41d773
  41dd1d:	nop    DWORD PTR [rax]
  41dd20:	mov    rcx,r12
  41dd23:	call   0x42a4e8
  41dd28:	mov    rbx,QWORD PTR [rsp+0x78]
  41dd2d:	mov    rcx,rbx
  41dd30:	call   0x42a4e8
  41dd35:	xor    eax,eax
  41dd37:	jmp    0x41d773
  41dd3c:	nop    DWORD PTR [rax+0x0]
  41dd40:	mov    edx,0x72
  41dd45:	mov    rcx,rbx
  41dd48:	call   0x42a428
  41dd4d:	test   rax,rax
  41dd50:	je     0x41e184
  41dd56:	lea    rdi,[rip+0x289f6]        # 0x446753
  41dd5d:	mov    QWORD PTR [rsp+0x58],rdi
  41dd62:	jmp    0x41daa0
  41dd67:	nop    WORD PTR [rax+rax*1+0x0]
  41dd70:	mov    edx,0x72
  41dd75:	mov    rcx,rbx
  41dd78:	call   0x42a428
  41dd7d:	test   rax,rax
  41dd80:	jne    0x41daa0
  41dd86:	mov    BYTE PTR [rsp+0x6e],0x0
  41dd8b:	mov    BYTE PTR [rsp+0x6d],0x0
  41dd90:	mov    edx,0x55
  41dd95:	mov    rcx,rbx
  41dd98:	call   0x42a428
  41dd9d:	test   rax,rax
  41dda0:	je     0x41e2c0
  41dda6:	cmp    BYTE PTR [rax+0x1],0x2a
  41ddaa:	mov    r8,QWORD PTR [rsp+0xd8]
  41ddb2:	lea    rdx,[rip+0x289bb]        # 0x446774
  41ddb9:	je     0x41e0c0
  41ddbf:	mov    rcx,r13
  41ddc2:	call   0x41d010
  41ddc7:	mov    BYTE PTR [rsp+0x6d],0x0
  41ddcc:	cmp    DWORD PTR [rsp+0x100],0x11237
  41ddd7:	jg     0x41dba0
  41dddd:	mov    rsi,QWORD PTR [rsp+0xe0]
  41dde5:	mov    rdi,QWORD PTR [rsp+0x58]
  41ddea:	mov    ecx,0x9
  41ddef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ddf1:	je     0x41dba0
  41ddf7:	mov    rsi,QWORD PTR [rsp+0xe0]
  41ddff:	lea    rdi,[rip+0x2895d]        # 0x446763
  41de06:	mov    ecx,0xa
  41de0b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41de0d:	je     0x41dba0
  41de13:	mov    edx,0x77
  41de18:	mov    rcx,rbx
  41de1b:	call   0x42a428
  41de20:	test   rax,rax
  41de23:	je     0x41dbde
  41de29:	cmp    BYTE PTR [rax+0x1],0x2a
  41de2d:	mov    r8,QWORD PTR [rsp+0xd8]
  41de35:	lea    rdx,[rip+0x2896f]        # 0x4467ab
  41de3c:	jne    0x41dbcb
  41de42:	jmp    0x41da20
  41de47:	nop    WORD PTR [rax+rax*1+0x0]
  41de50:	cmp    QWORD PTR [r15+0x8],0x0
  41de55:	je     0x41de8e
  41de57:	test   r14,r14
  41de5a:	mov    rdi,QWORD PTR [r15]
  41de5d:	je     0x41de6e
  41de5f:	mov    rdx,rdi
  41de62:	mov    rcx,r14
  41de65:	call   0x42a420
  41de6a:	test   eax,eax
  41de6c:	je     0x41de8e
  41de6e:	mov    rcx,rdi
  41de71:	call   0x41d080
  41de76:	mov    rcx,QWORD PTR [rsp+0x50]
  41de7b:	lea    rdx,[rip+0x28a3e]        # 0x4468c0
  41de82:	mov    r8,rax
  41de85:	call   0x427dd8
  41de8a:	mov    rsi,QWORD PTR [r13+0x8]
  41de8e:	test   rsi,rsi
  41de91:	jne    0x41df75
  41de97:	mov    rax,QWORD PTR [rsp+0x40]
  41de9c:	cmp    QWORD PTR [rax+0x8],0x0
  41dea1:	jne    0x41dee0
  41dea3:	cmp    QWORD PTR [r15+0x8],0x0
  41dea8:	je     0x41dc90
  41deae:	test   r14,r14
  41deb1:	je     0x41dec6
  41deb3:	mov    rdx,QWORD PTR [r15]
  41deb6:	mov    rcx,r14
  41deb9:	call   0x42a420
  41debe:	test   eax,eax
  41dec0:	je     0x41dc90
  41dec6:	mov    rcx,QWORD PTR [rsp+0x50]
  41decb:	lea    rdx,[rip+0x28a6a]        # 0x44693c
  41ded2:	call   0x427dc8
  41ded7:	jmp    0x41dc90
  41dedc:	nop    DWORD PTR [rax+0x0]
  41dee0:	mov    rax,QWORD PTR [rsp+0xd0]
  41dee8:	mov    r8,QWORD PTR [rsp+0xf8]
  41def0:	lea    rdx,[rip+0x289e8]        # 0x4468df
  41def7:	mov    rcx,QWORD PTR [rsp+0x50]
  41defc:	mov    QWORD PTR [rsp+0x28],rax
  41df01:	mov    rax,QWORD PTR [rsp+0xe0]
  41df09:	mov    QWORD PTR [rsp+0x20],rax
  41df0e:	mov    rax,QWORD PTR [rsp+0x40]
  41df13:	mov    r9,QWORD PTR [rax]
  41df16:	call   0x427dd8
  41df1b:	mov    rax,QWORD PTR [rsp+0x48]
  41df20:	cmp    QWORD PTR [rax+0x8],0x0
  41df25:	je     0x41e1c0
  41df2b:	mov    rax,QWORD PTR [rsp+0x48]
  41df30:	lea    rdi,[rip+0x289c9]        # 0x446900
  41df37:	mov    ecx,0x6
  41df3c:	mov    rax,QWORD PTR [rax]
  41df3f:	mov    rsi,rax
  41df42:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41df44:	je     0x41e0f5
  41df4a:	mov    rcx,rax
  41df4d:	call   0x41d080
  41df52:	mov    rcx,QWORD PTR [rsp+0x50]
  41df57:	mov    rdx,rax
  41df5a:	call   0x427dc8
  41df5f:	mov    rcx,QWORD PTR [rsp+0x50]
  41df64:	lea    rdx,[rip+0x289bc]        # 0x446927
  41df6b:	call   0x427dc8
  41df70:	jmp    0x41dea3
  41df75:	mov    rax,QWORD PTR [rsp+0xd0]
  41df7d:	mov    r8,QWORD PTR [rsp+0xf8]
  41df85:	lea    rdx,[rip+0x28953]        # 0x4468df
  41df8c:	mov    rcx,QWORD PTR [rsp+0x50]
  41df91:	mov    QWORD PTR [rsp+0x28],rax
  41df96:	mov    rax,QWORD PTR [rsp+0xe0]
  41df9e:	mov    QWORD PTR [rsp+0x20],rax
  41dfa3:	mov    r9,QWORD PTR [r13+0x0]
  41dfa7:	call   0x427dd8
  41dfac:	mov    rax,QWORD PTR [rsp+0x48]
  41dfb1:	cmp    QWORD PTR [rax+0x8],0x0
  41dfb6:	je     0x41e1a0
  41dfbc:	mov    rax,QWORD PTR [rsp+0x48]
  41dfc1:	lea    rdi,[rip+0x28938]        # 0x446900
  41dfc8:	mov    ecx,0x6
  41dfcd:	mov    rax,QWORD PTR [rax]
  41dfd0:	mov    rsi,rax
  41dfd3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dfd5:	jne    0x41e0d4
  41dfdb:	lea    rcx,[rax+0x6]
  41dfdf:	call   0x41d080
  41dfe4:	mov    rcx,QWORD PTR [rsp+0x50]
  41dfe9:	lea    rdx,[rip+0x28917]        # 0x446907
  41dff0:	mov    r8,rax
  41dff3:	call   0x427dd8
  41dff8:	jmp    0x41de97
  41dffd:	nop    DWORD PTR [rax]
  41e000:	mov    rcx,QWORD PTR [rsp+0x40]
  41e005:	call   0x41d010
  41e00a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e00f:	mov    BYTE PTR [rsp+0x6d],0x1
  41e014:	jmp    0x41dacb
  41e019:	nop    DWORD PTR [rax+0x0]
  41e020:	mov    edx,0x58
  41e025:	mov    rcx,rbx
  41e028:	call   0x42a428
  41e02d:	test   rax,rax
  41e030:	je     0x41dbde
  41e036:	cmp    BYTE PTR [rax+0x1],0x2a
  41e03a:	mov    r8,QWORD PTR [rsp+0xd8]
  41e042:	lea    rdx,[rip+0x28783]        # 0x4467cc
  41e049:	je     0x41e54a
  41e04f:	mov    rcx,r13
  41e052:	call   0x41d010
  41e057:	nop    WORD PTR [rax+rax*1+0x0]
  41e060:	mov    rcx,QWORD PTR [rsp+0x40]
  41e065:	call   0x427d68
  41e06a:	lea    rdx,[rip+0x287e1]        # 0x446852
  41e071:	mov    rcx,r13
  41e074:	call   0x427d70
  41e079:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e082:	je     0x41dbde
  41e088:	mov    r8,QWORD PTR [rsp+0xd8]
  41e090:	lea    rdx,[rip+0x28659]        # 0x4466f0
  41e097:	mov    rcx,r13
  41e09a:	call   0x427dd8
  41e09f:	jmp    0x41dbde
  41e0a4:	mov    rsi,QWORD PTR [r13+0x0]
  41e0a8:	jmp    0x41dc68
  41e0ad:	nop    DWORD PTR [rax]
  41e0b0:	mov    rcx,r15
  41e0b3:	call   0x427d68
  41e0b8:	jmp    0x41d8b5
  41e0bd:	nop    DWORD PTR [rax]
  41e0c0:	mov    rcx,QWORD PTR [rsp+0x40]
  41e0c5:	call   0x41d010
  41e0ca:	mov    BYTE PTR [rsp+0x6e],0x0
  41e0cf:	jmp    0x41ddcc
  41e0d4:	mov    rcx,rax
  41e0d7:	call   0x41d080
  41e0dc:	mov    rcx,QWORD PTR [rsp+0x50]
  41e0e1:	lea    rdx,[rip+0x2882a]        # 0x446912
  41e0e8:	mov    r8,rax
  41e0eb:	call   0x427dd8
  41e0f0:	jmp    0x41de97
  41e0f5:	lea    rcx,[rax+0x6]
  41e0f9:	call   0x41d080
  41e0fe:	mov    rcx,QWORD PTR [rsp+0x50]
  41e103:	lea    rdx,[rip+0x28814]        # 0x44691e
  41e10a:	mov    r8,rax
  41e10d:	call   0x427dd8
  41e112:	jmp    0x41df5f
  41e117:	nop    WORD PTR [rax+rax*1+0x0]
  41e120:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e128:	lea    rdi,[rip+0x285ef]        # 0x44671e
  41e12f:	mov    ecx,0x9
  41e134:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e136:	jne    0x41d836
  41e13c:	mov    rax,QWORD PTR [rsp+0xd0]
  41e144:	mov    r9,QWORD PTR [rsp+0xe0]
  41e14c:	lea    rdx,[rip+0x285d5]        # 0x446728
  41e153:	mov    r8,QWORD PTR [rsp+0xf8]
  41e15b:	mov    rcx,QWORD PTR [rsp+0x60]
  41e160:	mov    QWORD PTR [rsp+0x20],rax
  41e165:	call   0x427dd8
  41e16a:	jmp    0x41d836
  41e16f:	nop
  41e170:	mov    rcx,QWORD PTR [rsp+0x40]
  41e175:	call   0x41d010
  41e17a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e17f:	jmp    0x41db3d
  41e184:	lea    rax,[rip+0x285c8]        # 0x446753
  41e18b:	mov    BYTE PTR [rsp+0x6e],0x0
  41e190:	mov    BYTE PTR [rsp+0x6d],0x0
  41e195:	mov    QWORD PTR [rsp+0x58],rax
  41e19a:	jmp    0x41dacb
  41e19f:	nop
  41e1a0:	mov    rcx,QWORD PTR [rsp+0x50]
  41e1a5:	lea    rdx,[rip+0x2874b]        # 0x4468f7
  41e1ac:	call   0x427dc8
  41e1b1:	jmp    0x41de97
  41e1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1c0:	mov    rcx,QWORD PTR [rsp+0x50]
  41e1c5:	lea    rdx,[rip+0x2874b]        # 0x446917
  41e1cc:	call   0x427dc8
  41e1d1:	jmp    0x41df5f
  41e1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1e0:	mov    rsi,QWORD PTR [rsp+0x60]
  41e1e5:	mov    r8,QWORD PTR [rsp+0xf8]
  41e1ed:	lea    rdx,[rip+0x28505]        # 0x4466f9
  41e1f4:	mov    rcx,rsi
  41e1f7:	call   0x427dd8
  41e1fc:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e205:	je     0x41e21e
  41e207:	mov    r8,QWORD PTR [rsp+0xd8]
  41e20f:	lea    rdx,[rip+0x284da]        # 0x4466f0
  41e216:	mov    rcx,rsi
  41e219:	call   0x427dd8
  41e21e:	mov    rax,QWORD PTR [rsp+0x48]
  41e223:	mov    rcx,QWORD PTR [rax]
  41e226:	call   0x41d080
  41e22b:	mov    r9,QWORD PTR [rsp+0xd0]
  41e233:	mov    r8,QWORD PTR [rsp+0xe0]
  41e23b:	lea    rdx,[rip+0x28617]        # 0x446859
  41e242:	mov    rcx,QWORD PTR [rsp+0x60]
  41e247:	mov    QWORD PTR [rsp+0x20],rax
  41e24c:	call   0x427dd8
  41e251:	cmp    QWORD PTR [r13+0x8],0x0
  41e256:	jne    0x41e420
  41e25c:	mov    rax,QWORD PTR [rsp+0x40]
  41e261:	cmp    QWORD PTR [rax+0x8],0x0
  41e266:	je     0x41dc81
  41e26c:	mov    rax,QWORD PTR [rsp+0x48]
  41e271:	mov    rcx,QWORD PTR [rax]
  41e274:	call   0x41d080
  41e279:	mov    QWORD PTR [rsp+0x30],rax
  41e27e:	mov    rax,QWORD PTR [rsp+0xd0]
  41e286:	lea    rdx,[rip+0x28603]        # 0x446890
  41e28d:	mov    r8,QWORD PTR [rsp+0xf8]
  41e295:	mov    rcx,QWORD PTR [rsp+0x60]
  41e29a:	mov    QWORD PTR [rsp+0x28],rax
  41e29f:	mov    rax,QWORD PTR [rsp+0xe0]
  41e2a7:	mov    QWORD PTR [rsp+0x20],rax
  41e2ac:	mov    rax,QWORD PTR [rsp+0x40]
  41e2b1:	mov    r9,QWORD PTR [rax]
  41e2b4:	call   0x427dd8
  41e2b9:	jmp    0x41dc81
  41e2be:	xchg   ax,ax
  41e2c0:	mov    BYTE PTR [rsp+0x6e],0x0
  41e2c5:	mov    BYTE PTR [rsp+0x6d],0x0
  41e2ca:	jmp    0x41ddcc
  41e2cf:	nop
  41e2d0:	mov    BYTE PTR [rsp+0x6e],0x0
  41e2d5:	mov    BYTE PTR [rsp+0x6d],0x0
  41e2da:	jmp    0x41dae5
  41e2df:	mov    edx,0x64
  41e2e4:	mov    rcx,rbx
  41e2e7:	call   0x42a428
  41e2ec:	test   rax,rax
  41e2ef:	je     0x41e6c1
  41e2f5:	xor    r8d,r8d
  41e2f8:	cmp    BYTE PTR [rax+0x1],0x2a
  41e2fc:	lea    rdx,[rip+0x28489]        # 0x44678c
  41e303:	je     0x41e5c2
  41e309:	mov    rcx,r13
  41e30c:	call   0x41d010
  41e311:	mov    BYTE PTR [rsp+0x6d],0x0
  41e316:	mov    edx,0x74
  41e31b:	mov    rcx,rbx
  41e31e:	call   0x42a428
  41e323:	test   rax,rax
  41e326:	je     0x41e6b2
  41e32c:	xor    r8d,r8d
  41e32f:	cmp    BYTE PTR [rax+0x1],0x2a
  41e333:	lea    rdx,[rip+0x28459]        # 0x446793
  41e33a:	je     0x41e5ae
  41e340:	mov    rcx,r13
  41e343:	call   0x41d010
  41e348:	mov    BYTE PTR [rsp+0x6d],0x0
  41e34d:	cmp    DWORD PTR [rsp+0x100],0x13a0f
  41e358:	jle    0x41dba0
  41e35e:	mov    edx,0x44
  41e363:	mov    rcx,rbx
  41e366:	call   0x42a428
  41e36b:	test   rax,rax
  41e36e:	je     0x41e6a3
  41e374:	xor    r8d,r8d
  41e377:	cmp    BYTE PTR [rax+0x1],0x2a
  41e37b:	lea    rdx,[rip+0x28419]        # 0x44679b
  41e382:	je     0x41e59a
  41e388:	mov    rcx,r13
  41e38b:	call   0x41d010
  41e390:	mov    BYTE PTR [rsp+0x6d],0x0
  41e395:	jmp    0x41dba0
  41e39a:	nop    WORD PTR [rax+rax*1+0x0]
  41e3a0:	mov    rbx,QWORD PTR [rsp+0x60]
  41e3a5:	mov    r8,QWORD PTR [rsp+0xf8]
  41e3ad:	lea    rdx,[rip+0x28345]        # 0x4466f9
  41e3b4:	mov    rcx,rbx
  41e3b7:	call   0x427dd8
  41e3bc:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e3c5:	je     0x41e3de
  41e3c7:	mov    r8,QWORD PTR [rsp+0xd8]
  41e3cf:	lea    rdx,[rip+0x2831a]        # 0x4466f0
  41e3d6:	mov    rcx,rbx
  41e3d9:	call   0x427dd8
  41e3de:	mov    rcx,r14
  41e3e1:	call   0x41d080
  41e3e6:	mov    r9,QWORD PTR [rsp+0xd0]
  41e3ee:	mov    r8,QWORD PTR [rsp+0xe0]
  41e3f6:	lea    rdx,[rip+0x2845c]        # 0x446859
  41e3fd:	mov    rcx,QWORD PTR [rsp+0x60]
  41e402:	mov    QWORD PTR [rsp+0x20],rax
  41e407:	call   0x427dd8
  41e40c:	jmp    0x41dcb1
  41e411:	mov    BYTE PTR [rsp+0x6e],0x0
  41e416:	mov    BYTE PTR [rsp+0x6d],0x0
  41e41b:	jmp    0x41db3d
  41e420:	mov    rax,QWORD PTR [rsp+0x48]
  41e425:	mov    rcx,QWORD PTR [rax]
  41e428:	call   0x41d080
  41e42d:	mov    QWORD PTR [rsp+0x30],rax
  41e432:	mov    rax,QWORD PTR [rsp+0xd0]
  41e43a:	lea    rdx,[rip+0x2842c]        # 0x44686d
  41e441:	mov    r8,QWORD PTR [rsp+0xf8]
  41e449:	mov    rcx,QWORD PTR [rsp+0x60]
  41e44e:	mov    QWORD PTR [rsp+0x28],rax
  41e453:	mov    rax,QWORD PTR [rsp+0xe0]
  41e45b:	mov    QWORD PTR [rsp+0x20],rax
  41e460:	mov    r9,QWORD PTR [r13+0x0]
  41e464:	call   0x427dd8
  41e469:	jmp    0x41e25c
  41e46e:	xchg   ax,ax
  41e470:	mov    rcx,QWORD PTR [rsp+0x40]
  41e475:	call   0x41d010
  41e47a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e47f:	jmp    0x41db8a
  41e484:	mov    BYTE PTR [rsp+0x6e],0x0
  41e489:	mov    BYTE PTR [rsp+0x6d],0x0
  41e48e:	jmp    0x41db8a
  41e493:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e49b:	lea    rdi,[rip+0x28366]        # 0x446808
  41e4a2:	mov    ecx,0x5
  41e4a7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e4a9:	je     0x41e569
  41e4af:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4b7:	lea    rdx,[rip+0x2834f]        # 0x44680d
  41e4be:	call   0x42a420
  41e4c3:	test   eax,eax
  41e4c5:	je     0x41e569
  41e4cb:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4d3:	lea    rdx,[rip+0x28339]        # 0x446813
  41e4da:	call   0x42a420
  41e4df:	test   eax,eax
  41e4e1:	je     0x41e569
  41e4e7:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4ef:	lea    rdx,[rip+0x28332]        # 0x446828
  41e4f6:	call   0x42a420
  41e4fb:	test   eax,eax
  41e4fd:	je     0x41e569
  41e4ff:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e507:	lea    rdx,[rip+0x28329]        # 0x446837
  41e50e:	call   0x42a420
  41e513:	test   eax,eax
  41e515:	jne    0x41e793
  41e51b:	mov    edx,0x72
  41e520:	mov    rcx,rbx
  41e523:	call   0x42a428
  41e528:	test   rax,rax
  41e52b:	je     0x41dbde
  41e531:	cmp    BYTE PTR [rax+0x1],0x2a
  41e535:	mov    r8,QWORD PTR [rsp+0xd8]
  41e53d:	lea    rdx,[rip+0x28229]        # 0x44676d
  41e544:	jne    0x41e04f
  41e54a:	mov    rcx,QWORD PTR [rsp+0x40]
  41e54f:	call   0x41d010
  41e554:	jmp    0x41da35
  41e559:	test   r14,r14
  41e55c:	mov    eax,0x1
  41e561:	setne  bl
  41e564:	jmp    0x41dca5
  41e569:	mov    edx,0x55
  41e56e:	mov    rcx,rbx
  41e571:	call   0x42a428
  41e576:	test   rax,rax
  41e579:	je     0x41dbde
  41e57f:	cmp    BYTE PTR [rax+0x1],0x2a
  41e583:	mov    r8,QWORD PTR [rsp+0xd8]
  41e58b:	lea    rdx,[rip+0x281e2]        # 0x446774
  41e592:	jne    0x41e04f
  41e598:	jmp    0x41e54a
  41e59a:	mov    rcx,QWORD PTR [rsp+0x40]
  41e59f:	call   0x41d010
  41e5a4:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5a9:	jmp    0x41dba0
  41e5ae:	mov    rcx,QWORD PTR [rsp+0x40]
  41e5b3:	call   0x41d010
  41e5b8:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5bd:	jmp    0x41e34d
  41e5c2:	mov    rcx,QWORD PTR [rsp+0x40]
  41e5c7:	call   0x41d010
  41e5cc:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5d1:	jmp    0x41e316
  41e5d6:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e5de:	lea    rdi,[rip+0x28139]        # 0x44671e
  41e5e5:	mov    ecx,0x9
  41e5ea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e5ec:	jne    0x41e6d0
  41e5f2:	mov    edx,0x43
  41e5f7:	mov    rcx,rbx
  41e5fa:	call   0x42a428
  41e5ff:	test   rax,rax
  41e602:	je     0x41e784
  41e608:	cmp    BYTE PTR [rax+0x1],0x2a
  41e60c:	mov    r8,QWORD PTR [rsp+0xd8]
  41e614:	lea    rdx,[rip+0x281c9]        # 0x4467e4
  41e61b:	je     0x41e75c
  41e621:	mov    rcx,r13
  41e624:	call   0x41d010
  41e629:	mov    BYTE PTR [rsp+0x6e],0x1
  41e62e:	mov    BYTE PTR [rsp+0x6d],0x0
  41e633:	mov    edx,0x63
  41e638:	mov    rcx,rbx
  41e63b:	call   0x42a428
  41e640:	test   rax,rax
  41e643:	je     0x41e775
  41e649:	cmp    BYTE PTR [rax+0x1],0x2a
  41e64d:	mov    r8,QWORD PTR [rsp+0xd8]
  41e655:	lea    rdx,[rip+0x2818f]        # 0x4467eb
  41e65c:	je     0x41e748
  41e662:	mov    rcx,r13
  41e665:	call   0x41d010
  41e66a:	mov    BYTE PTR [rsp+0x6d],0x0
  41e66f:	mov    edx,0x54
  41e674:	mov    rcx,rbx
  41e677:	call   0x42a428
  41e67c:	test   rax,rax
  41e67f:	je     0x41dbde
  41e685:	cmp    BYTE PTR [rax+0x1],0x2a
  41e689:	mov    r8,QWORD PTR [rsp+0xd8]
  41e691:	lea    rdx,[rip+0x2815b]        # 0x4467f3
  41e698:	jne    0x41dbcb
  41e69e:	jmp    0x41da20
  41e6a3:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6a8:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6ad:	jmp    0x41dba0
  41e6b2:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6b7:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6bc:	jmp    0x41e34d
  41e6c1:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6c6:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6cb:	jmp    0x41e316
  41e6d0:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e6d8:	lea    rdi,[rip+0x2811e]        # 0x4467fd
  41e6df:	mov    ecx,0xb
  41e6e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e6e6:	jne    0x41e493
  41e6ec:	mov    edx,0x43
  41e6f1:	mov    rcx,rbx
  41e6f4:	call   0x42a428
  41e6f9:	test   rax,rax
  41e6fc:	je     0x41dbde
  41e702:	cmp    BYTE PTR [rax+0x1],0x2a
  41e706:	mov    r8,QWORD PTR [rsp+0xd8]
  41e70e:	lea    rdx,[rip+0x280cf]        # 0x4467e4
  41e715:	jne    0x41e04f
  41e71b:	jmp    0x41e54a
  41e720:	mov    rcx,QWORD PTR [rsp+0x40]
  41e725:	call   0x41d010
  41e72a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e72f:	mov    BYTE PTR [rsp+0x6d],0x1
  41e734:	jmp    0x41d9ed
  41e739:	mov    BYTE PTR [rsp+0x6e],0x0
  41e73e:	mov    BYTE PTR [rsp+0x6d],0x0
  41e743:	jmp    0x41d9ed
  41e748:	mov    rcx,QWORD PTR [rsp+0x40]
  41e74d:	call   0x41d010
  41e752:	mov    BYTE PTR [rsp+0x6e],0x0
  41e757:	jmp    0x41e66f
  41e75c:	mov    rcx,QWORD PTR [rsp+0x40]
  41e761:	call   0x41d010
  41e766:	mov    BYTE PTR [rsp+0x6e],0x0
  41e76b:	mov    BYTE PTR [rsp+0x6d],0x1
  41e770:	jmp    0x41e633
  41e775:	mov    BYTE PTR [rsp+0x6e],0x0
  41e77a:	mov    BYTE PTR [rsp+0x6d],0x0
  41e77f:	jmp    0x41e66f
  41e784:	mov    BYTE PTR [rsp+0x6e],0x0
  41e789:	mov    BYTE PTR [rsp+0x6d],0x0
  41e78e:	jmp    0x41e633
  41e793:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e79b:	lea    rdx,[rip+0x280a3]        # 0x446845
  41e7a2:	call   0x42a420
  41e7a7:	test   eax,eax
  41e7a9:	jne    0x41e7ed
  41e7ab:	mov    edx,0x72
  41e7b0:	mov    rcx,rbx
  41e7b3:	call   0x42a428
  41e7b8:	test   rax,rax
  41e7bb:	je     0x41e6a3
  41e7c1:	cmp    BYTE PTR [rax+0x1],0x2a
  41e7c5:	mov    r8,QWORD PTR [rsp+0xd8]
  41e7cd:	lea    rdx,[rip+0x27f99]        # 0x44676d
  41e7d4:	je     0x41e7f2
  41e7d6:	mov    rcx,r13
  41e7d9:	call   0x41d010
  41e7de:	mov    BYTE PTR [rsp+0x6e],0x1
  41e7e3:	mov    BYTE PTR [rsp+0x6d],0x0
  41e7e8:	jmp    0x41dba0
  41e7ed:	call   0x42a568
  41e7f2:	mov    rcx,QWORD PTR [rsp+0x40]
  41e7f7:	call   0x41d010
  41e7fc:	mov    BYTE PTR [rsp+0x6e],0x0
  41e801:	mov    BYTE PTR [rsp+0x6d],0x1
  41e806:	jmp    0x41dba0
  41e80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e810:	push   rbx
  41e811:	cmp    BYTE PTR [r9],0x0
  41e815:	je     0x41e820
  41e817:	pop    rbx
  41e818:	jmp    0x41d700
  41e81d:	nop    DWORD PTR [rax]
  41e820:	mov    eax,0x1
  41e825:	pop    rbx
  41e826:	ret    
  41e827:	nop    WORD PTR [rax+rax*1+0x0]
  41e830:	push   r12
  41e832:	push   rbp
  41e833:	push   rdi
  41e834:	push   rsi
  41e835:	push   rbx
  41e836:	sub    rsp,0x40
  41e83a:	mov    rbp,r9
  41e83d:	mov    rsi,rdx
  41e840:	mov    rdi,r8
  41e843:	mov    r12,rcx
  41e846:	call   0x427dc0
  41e84b:	mov    rcx,rbp
  41e84e:	mov    rbx,rax
  41e851:	call   0x41d080
  41e856:	lea    rdx,[rip+0x28103]        # 0x446960
  41e85d:	mov    r8,rax
  41e860:	mov    rcx,rbx
  41e863:	call   0x427dd8
  41e868:	test   rsi,rsi
  41e86b:	je     0x41e887
  41e86d:	mov    rcx,rsi
  41e870:	call   0x41d080
  41e875:	lea    rdx,[rip+0x2810a]        # 0x446986
  41e87c:	mov    r8,rax
  41e87f:	mov    rcx,rbx
  41e882:	call   0x427dd8
  41e887:	cmp    BYTE PTR [rdi],0x0
  41e88a:	mov    rax,QWORD PTR [rbx]
  41e88d:	mov    esi,0x1
  41e892:	je     0x41e8cc
  41e894:	mov    rdx,QWORD PTR [rsp+0x98]
  41e89c:	lea    rcx,[rip+0x280f1]        # 0x446994
  41e8a3:	mov    QWORD PTR [rsp+0x28],rax
  41e8a8:	mov    QWORD PTR [rsp+0x20],rbp
  41e8ad:	mov    r9,rdi
  41e8b0:	mov    r8,r12
  41e8b3:	mov    QWORD PTR [rsp+0x38],rdx
  41e8b8:	mov    edx,DWORD PTR [rsp+0x90]
  41e8bf:	mov    DWORD PTR [rsp+0x30],edx
  41e8c3:	xor    edx,edx
  41e8c5:	call   0x41d700
  41e8ca:	mov    esi,eax
  41e8cc:	mov    rcx,rbx
  41e8cf:	call   0x427db8
  41e8d4:	mov    eax,esi
  41e8d6:	add    rsp,0x40
  41e8da:	pop    rbx
  41e8db:	pop    rsi
  41e8dc:	pop    rdi
  41e8dd:	pop    rbp
  41e8de:	pop    r12
  41e8e0:	ret    
  41e8e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8f0:	push   r15
  41e8f2:	push   r14
  41e8f4:	push   r13
  41e8f6:	push   r12
  41e8f8:	push   rbp
  41e8f9:	push   rdi
  41e8fa:	push   rsi
  41e8fb:	push   rbx
  41e8fc:	sub    rsp,0x78
  41e900:	movzx  eax,BYTE PTR [rsp+0xe0]
  41e908:	mov    r15,r8
  41e90b:	mov    QWORD PTR [rsp+0xc0],rcx
  41e913:	mov    r12,rdx
  41e916:	mov    r13d,r9d
  41e919:	mov    BYTE PTR [rsp+0x2f],r9b
  41e91e:	mov    BYTE PTR [rsp+0x2e],al
  41e922:	call   0x427f60
  41e927:	test   r15,r15
  41e92a:	mov    DWORD PTR [rsp+0x28],eax
  41e92e:	je     0x41eca0
  41e934:	lea    rbp,[rsp+0x30]
  41e939:	lea    rbx,[rsp+0x50]
  41e93e:	xor    edi,edi
  41e940:	mov    rcx,rbp
  41e943:	call   0x427da8
  41e948:	mov    rcx,rbx
  41e94b:	call   0x427da8
  41e950:	lea    rdx,[rip+0x28050]        # 0x4469a7
  41e957:	mov    rcx,rbx
  41e95a:	call   0x427dc8
  41e95f:	movzx  r14d,BYTE PTR [r15]
  41e963:	test   r14b,r14b
  41e966:	je     0x41ea10
  41e96c:	cmp    r14b,0x22
  41e970:	je     0x41ead2
  41e976:	test   dil,dil
  41e979:	je     0x41eaa0
  41e97f:	cmp    r14b,0x24
  41e983:	je     0x41ecf0
  41e989:	movzx  eax,BYTE PTR [rsp+0x2e]
  41e98e:	or     al,dil
  41e991:	je     0x41e9b5
  41e993:	lea    rcx,[rip+0x28016]        # 0x4469b0
  41e99a:	movsx  edx,r14b
  41e99e:	call   0x42a428
  41e9a3:	test   rax,rax
  41e9a6:	je     0x41e9b5
  41e9a8:	mov    edx,0x5c
  41e9ad:	mov    rcx,rbx
  41e9b0:	call   0x427dd0
  41e9b5:	mov    edx,DWORD PTR [rsp+0x28]
  41e9b9:	mov    rcx,r15
  41e9bc:	call   0x427e88
  41e9c1:	test   eax,eax
  41e9c3:	je     0x41ed27
  41e9c9:	movsx  edx,BYTE PTR [r15]
  41e9cd:	test   dl,dl
  41e9cf:	je     0x41ea10
  41e9d1:	sub    eax,0x1
  41e9d4:	lea    rsi,[r15+rax*1+0x1]
  41e9d9:	jmp    0x41e9ec
  41e9db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9e0:	movsx  edx,BYTE PTR [r15+0x1]
  41e9e5:	mov    r15,rax
  41e9e8:	test   dl,dl
  41e9ea:	je     0x41ea10
  41e9ec:	mov    rcx,rbx
  41e9ef:	call   0x427dd0
  41e9f4:	lea    rax,[r15+0x1]
  41e9f8:	cmp    rax,rsi
  41e9fb:	jne    0x41e9e0
  41e9fd:	movzx  r14d,BYTE PTR [r15+0x1]
  41ea02:	mov    r15,rsi
  41ea05:	test   r14b,r14b
  41ea08:	jne    0x41e96c
  41ea0e:	xchg   ax,ax
  41ea10:	cmp    QWORD PTR [rsp+0x58],0x2
  41ea16:	ja     0x41ebd0
  41ea1c:	xor    r13d,r13d
  41ea1f:	cmp    QWORD PTR [rsp+0x38],0x2
  41ea25:	ja     0x41eb35
  41ea2b:	cmp    QWORD PTR [rsp+0x100],0x0
  41ea34:	je     0x41ea72
  41ea36:	cmp    BYTE PTR [rsp+0x2f],0x0
  41ea3b:	lea    rax,[rip+0x27f53]        # 0x446995
  41ea42:	lea    rdx,[rip+0x27f53]        # 0x44699c
  41ea49:	mov    rcx,r12
  41ea4c:	mov    r13d,0x1
  41ea52:	cmovne rdx,rax
  41ea56:	call   0x427dc8
  41ea5b:	mov    r8,QWORD PTR [rsp+0x100]
  41ea63:	lea    rdx,[rip+0x27f39]        # 0x4469a3
  41ea6a:	mov    rcx,r12
  41ea6d:	call   0x427dd8
  41ea72:	mov    rcx,rbp
  41ea75:	call   0x427d60
  41ea7a:	mov    rcx,rbx
  41ea7d:	call   0x427d60
  41ea82:	mov    eax,r13d
  41ea85:	add    rsp,0x78
  41ea89:	pop    rbx
  41ea8a:	pop    rsi
  41ea8b:	pop    rdi
  41ea8c:	pop    rbp
  41ea8d:	pop    r12
  41ea8f:	pop    r13
  41ea91:	pop    r14
  41ea93:	pop    r15
  41ea95:	ret    
  41ea96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eaa0:	movzx  esi,r14b
  41eaa4:	mov    ecx,esi
  41eaa6:	call   QWORD PTR [rip+0x3e268]        # 0x45cd14
  41eaac:	test   eax,eax
  41eaae:	jne    0x41eaf2
  41eab0:	cmp    r14b,0x2a
  41eab4:	jne    0x41eb11
  41eab6:	lea    rdx,[rip+0x27eed]        # 0x4469aa
  41eabd:	mov    rcx,rbx
  41eac0:	add    r15,0x1
  41eac4:	call   0x427dc8
  41eac9:	movzx  r14d,BYTE PTR [r15]
  41eacd:	jmp    0x41e963
  41ead2:	test   dil,dil
  41ead5:	movzx  r14d,BYTE PTR [r15+0x1]
  41eada:	je     0x41eae6
  41eadc:	cmp    r14b,0x22
  41eae0:	je     0x41ed0c
  41eae6:	xor    edi,0x1
  41eae9:	add    r15,0x1
  41eaed:	jmp    0x41e963
  41eaf2:	mov    ecx,esi
  41eaf4:	add    r15,0x1
  41eaf8:	call   0x4279a0
  41eafd:	mov    rcx,rbx
  41eb00:	movsx  edx,al
  41eb03:	call   0x427dd0
  41eb08:	movzx  r14d,BYTE PTR [r15]
  41eb0c:	jmp    0x41e963
  41eb11:	cmp    r14b,0x3f
  41eb15:	jne    0x41ed79
  41eb1b:	mov    edx,0x2e
  41eb20:	mov    rcx,rbx
  41eb23:	add    r15,0x1
  41eb27:	call   0x427dd0
  41eb2c:	movzx  r14d,BYTE PTR [r15]
  41eb30:	jmp    0x41e963
  41eb35:	lea    rdx,[rip+0x27e83]        # 0x4469bf
  41eb3c:	mov    rcx,rbp
  41eb3f:	lea    rdi,[rip+0x27e7c]        # 0x4469c2
  41eb46:	call   0x427dc8
  41eb4b:	mov    rsi,QWORD PTR [rsp+0x30]
  41eb50:	mov    ecx,0x7
  41eb55:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41eb57:	je     0x41ea72
  41eb5d:	cmp    QWORD PTR [rsp+0xe8],0x0
  41eb66:	je     0x41ea72
  41eb6c:	cmp    BYTE PTR [rsp+0x2f],0x0
  41eb71:	lea    rax,[rip+0x27e1d]        # 0x446995
  41eb78:	lea    rdx,[rip+0x27e1d]        # 0x44699c
  41eb7f:	mov    rcx,r12
  41eb82:	mov    r13d,0x1
  41eb88:	cmovne rdx,rax
  41eb8c:	call   0x427dc8
  41eb91:	mov    r8,QWORD PTR [rsp+0xe8]
  41eb99:	lea    rdx,[rip+0x27e45]        # 0x4469e5
  41eba0:	mov    rcx,r12
  41eba3:	call   0x427dd8
  41eba8:	mov    r8,QWORD PTR [rsp+0xc0]
  41ebb0:	mov    rdx,QWORD PTR [rsp+0x30]
  41ebb5:	mov    rcx,r12
  41ebb8:	call   0x41d330
  41ebbd:	mov    edx,0xa
  41ebc2:	mov    rcx,r12
  41ebc5:	call   0x427dd0
  41ebca:	jmp    0x41ea72
  41ebcf:	nop
  41ebd0:	lea    rdx,[rip+0x27de8]        # 0x4469bf
  41ebd7:	mov    rcx,rbx
  41ebda:	lea    rdi,[rip+0x27de1]        # 0x4469c2
  41ebe1:	call   0x427dc8
  41ebe6:	mov    rsi,QWORD PTR [rsp+0x50]
  41ebeb:	mov    ecx,0x7
  41ebf0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ebf2:	je     0x41ea1c
  41ebf8:	lea    rax,[rip+0x27d96]        # 0x446995
  41ebff:	lea    rdx,[rip+0x27d96]        # 0x44699c
  41ec06:	test   r13b,r13b
  41ec09:	mov    rcx,r12
  41ec0c:	cmovne rdx,rax
  41ec10:	call   0x427dc8
  41ec15:	cmp    QWORD PTR [rsp+0xf8],0x0
  41ec1e:	mov    r8,QWORD PTR [rsp+0xf0]
  41ec26:	je     0x41ed38
  41ec2c:	lea    rdx,[rip+0x27d96]        # 0x4469c9
  41ec33:	mov    rcx,r12
  41ec36:	mov    r13d,0x1
  41ec3c:	call   0x427dd8
  41ec41:	mov    r8,QWORD PTR [rsp+0xc0]
  41ec49:	mov    rdx,QWORD PTR [rsp+0x50]
  41ec4e:	mov    rcx,r12
  41ec51:	call   0x41d330
  41ec56:	mov    r8,QWORD PTR [rsp+0xf8]
  41ec5e:	lea    rdx,[rip+0x27d6b]        # 0x4469d0
  41ec65:	mov    rcx,r12
  41ec68:	call   0x427dd8
  41ec6d:	mov    r8,QWORD PTR [rsp+0xc0]
  41ec75:	mov    rdx,QWORD PTR [rsp+0x50]
  41ec7a:	mov    rcx,r12
  41ec7d:	call   0x41d330
  41ec82:	lea    rdx,[rip+0x27d59]        # 0x4469e2
  41ec89:	mov    rcx,r12
  41ec8c:	call   0x427dc8
  41ec91:	mov    BYTE PTR [rsp+0x2f],0x1
  41ec96:	jmp    0x41ea1f
  41ec9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eca0:	cmp    QWORD PTR [rsp+0x100],0x0
  41eca9:	je     0x41ed30
  41ecaf:	lea    rax,[rip+0x27cdf]        # 0x446995
  41ecb6:	lea    rdx,[rip+0x27cdf]        # 0x44699c
  41ecbd:	test   r13b,r13b
  41ecc0:	mov    rcx,r12
  41ecc3:	mov    r13d,0x1
  41ecc9:	cmovne rdx,rax
  41eccd:	call   0x427dc8
  41ecd2:	mov    r8,QWORD PTR [rsp+0x100]
  41ecda:	lea    rdx,[rip+0x27cc2]        # 0x4469a3
  41ece1:	mov    rcx,r12
  41ece4:	call   0x427dd8
  41ece9:	jmp    0x41ea82
  41ecee:	xchg   ax,ax
  41ecf0:	lea    rdx,[rip+0x27cb6]        # 0x4469ad
  41ecf7:	mov    rcx,rbx
  41ecfa:	add    r15,0x1
  41ecfe:	call   0x427dc8
  41ed03:	movzx  r14d,BYTE PTR [r15]
  41ed07:	jmp    0x41e963
  41ed0c:	mov    edx,0x22
  41ed11:	mov    rcx,rbx
  41ed14:	add    r15,0x1
  41ed18:	call   0x427dd0
  41ed1d:	movzx  r14d,BYTE PTR [r15+0x1]
  41ed22:	jmp    0x41eae9
  41ed27:	movzx  r14d,BYTE PTR [r15]
  41ed2b:	jmp    0x41e963
  41ed30:	xor    r13d,r13d
  41ed33:	jmp    0x41ea82
  41ed38:	lea    rdx,[rip+0x27ca6]        # 0x4469e5
  41ed3f:	mov    rcx,r12
  41ed42:	mov    r13d,0x1
  41ed48:	call   0x427dd8
  41ed4d:	mov    r8,QWORD PTR [rsp+0xc0]
  41ed55:	mov    rdx,QWORD PTR [rsp+0x50]
  41ed5a:	mov    rcx,r12
  41ed5d:	call   0x41d330
  41ed62:	mov    edx,0xa
  41ed67:	mov    rcx,r12
  41ed6a:	call   0x427dd0
  41ed6f:	mov    BYTE PTR [rsp+0x2f],0x1
  41ed74:	jmp    0x41ea1f
  41ed79:	cmp    r14b,0x2e
  41ed7d:	jne    0x41e97f
  41ed83:	mov    rcx,rbp
  41ed86:	add    r15,0x1
  41ed8a:	call   0x427d68
  41ed8f:	mov    rdx,QWORD PTR [rsp+0x50]
  41ed94:	mov    rcx,rbp
  41ed97:	call   0x427dc8
  41ed9c:	mov    rcx,rbx
  41ed9f:	call   0x427d68
  41eda4:	lea    rdx,[rip+0x27bfc]        # 0x4469a7
  41edab:	mov    rcx,rbx
  41edae:	call   0x427dc8
  41edb3:	movzx  r14d,BYTE PTR [r15]
  41edb7:	jmp    0x41e963
  41edbc:	nop    DWORD PTR [rax+0x0]
  41edc0:	mov    rcx,r9
  41edc3:	mov    r9d,r8d
  41edc6:	mov    r8,rdx
  41edc9:	lea    rdx,[rip+0x27c20]        # 0x4469f0
  41edd0:	jmp    0x427dd8
  41edd5:	nop
  41edd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ede0:	push   r15
  41ede2:	push   r14
  41ede4:	push   r13
  41ede6:	push   r12
  41ede8:	push   rbp
  41ede9:	push   rdi
  41edea:	push   rsi
  41edeb:	push   rbx
  41edec:	sub    rsp,0x28
  41edf0:	xor    ebx,ebx
  41edf2:	mov    r12,QWORD PTR [rsp+0x90]
  41edfa:	mov    r14,rcx
  41edfd:	mov    rdi,rdx
  41ee00:	mov    rsi,r8
  41ee03:	mov    r13,r9
  41ee06:	jmp    0x41ee8a
  41ee0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee10:	mov    edx,ebx
  41ee12:	xor    r8d,r8d
  41ee15:	mov    rcx,rdi
  41ee18:	call   0x427e98
  41ee1d:	mov    edx,ebx
  41ee1f:	mov    r8d,0x1
  41ee25:	mov    r15,rax
  41ee28:	mov    rcx,rdi
  41ee2b:	add    ebx,0x1
  41ee2e:	call   0x427e98
  41ee33:	mov    rcx,r15
  41ee36:	mov    rbp,rax
  41ee39:	call   0x41d080
  41ee3e:	lea    rdx,[rip+0x27c1b]        # 0x446a60
  41ee45:	mov    r9,r13
  41ee48:	mov    r8,rax
  41ee4b:	mov    rcx,rsi
  41ee4e:	call   0x427dd8
  41ee53:	mov    rcx,r12
  41ee56:	call   0x41d080
  41ee5b:	lea    rdx,[rip+0x27c1a]        # 0x446a7c
  41ee62:	mov    r8,rax
  41ee65:	mov    rcx,rsi
  41ee68:	call   0x427dd8
  41ee6d:	mov    r8,r14
  41ee70:	mov    rdx,rbp
  41ee73:	mov    rcx,rsi
  41ee76:	call   0x41d330
  41ee7b:	lea    rdx,[rip+0x27c02]        # 0x446a84
  41ee82:	mov    rcx,rsi
  41ee85:	call   0x427dc8
  41ee8a:	mov    rcx,rdi
  41ee8d:	call   0x427e70
  41ee92:	cmp    ebx,eax
  41ee94:	jl     0x41ee10
  41ee9a:	add    rsp,0x28
  41ee9e:	pop    rbx
  41ee9f:	pop    rsi
  41eea0:	pop    rdi
  41eea1:	pop    rbp
  41eea2:	pop    r12
  41eea4:	pop    r13
  41eea6:	pop    r14
  41eea8:	pop    r15
  41eeaa:	ret    
  41eeab:	nop    DWORD PTR [rax+rax*1+0x0]
  41eeb0:	push   rdi
  41eeb1:	push   rsi
  41eeb2:	push   rbx
  41eeb3:	sub    rsp,0x20
  41eeb7:	mov    rsi,rcx
  41eeba:	mov    rcx,rdx
  41eebd:	mov    rdi,rdx
  41eec0:	call   0x42a400
  41eec5:	lea    rcx,[rax+0x10]
  41eec9:	call   0x424800
  41eece:	lea    rcx,[rax+0x8]
  41eed2:	mov    QWORD PTR [rax],0x0
  41eed9:	mov    rdx,rdi
  41eedc:	mov    rbx,rax
  41eedf:	call   0x42a418
  41eee4:	mov    rax,QWORD PTR [rsi+0x8]
  41eee8:	test   rax,rax
  41eeeb:	je     0x41ef00
  41eeed:	mov    QWORD PTR [rax],rbx
  41eef0:	mov    QWORD PTR [rsi+0x8],rbx
  41eef4:	add    rsp,0x20
  41eef8:	pop    rbx
  41eef9:	pop    rsi
  41eefa:	pop    rdi
  41eefb:	ret    
  41eefc:	nop    DWORD PTR [rax+0x0]
  41ef00:	mov    QWORD PTR [rsi],rbx
  41ef03:	mov    QWORD PTR [rsi+0x8],rbx
  41ef07:	add    rsp,0x20
  41ef0b:	pop    rbx
  41ef0c:	pop    rsi
  41ef0d:	pop    rdi
  41ef0e:	ret    
  41ef0f:	nop
  41ef10:	push   rsi
  41ef11:	push   rbx
  41ef12:	sub    rsp,0x28
  41ef16:	mov    rbx,QWORD PTR [rcx]
  41ef19:	mov    rsi,rdx
  41ef1c:	test   rbx,rbx
  41ef1f:	jne    0x41ef2b
  41ef21:	jmp    0x41ef50
  41ef23:	mov    rbx,QWORD PTR [rbx]
  41ef26:	test   rbx,rbx
  41ef29:	je     0x41ef50
  41ef2b:	lea    rcx,[rbx+0x8]
  41ef2f:	mov    rdx,rsi
  41ef32:	call   0x42a420
  41ef37:	test   eax,eax
  41ef39:	jne    0x41ef23
  41ef3b:	mov    eax,0x1
  41ef40:	add    rsp,0x28
  41ef44:	pop    rbx
  41ef45:	pop    rsi
  41ef46:	ret    
  41ef47:	nop    WORD PTR [rax+rax*1+0x0]
  41ef50:	xor    eax,eax
  41ef52:	add    rsp,0x28
  41ef56:	pop    rbx
  41ef57:	pop    rsi
  41ef58:	ret    
  41ef59:	nop
  41ef5a:	nop
  41ef5b:	nop
  41ef5c:	nop
  41ef5d:	nop
  41ef5e:	nop
  41ef5f:	nop
  41ef60:	push   r12
  41ef62:	push   rbp
  41ef63:	push   rdi
  41ef64:	push   rsi
  41ef65:	push   rbx
  41ef66:	sub    rsp,0x60
  41ef6a:	mov    r12,rcx
  41ef6d:	mov    rsi,rdx
  41ef70:	movsxd rbp,r8d
  41ef73:	call   0x42a400
  41ef78:	cmp    eax,0x3f
  41ef7b:	jg     0x41f012
  41ef81:	test   eax,eax
  41ef83:	jle    0x41efb5
  41ef85:	lea    edx,[rax-0x1]
  41ef88:	lea    rdi,[rsp+0x20]
  41ef8d:	xor    r10d,r10d
  41ef90:	add    rdx,0x1
  41ef94:	movzx  r9d,BYTE PTR [r12+r10*1]
  41ef99:	lea    ebx,[r9-0x41]
  41ef9d:	lea    r11d,[r9+0x20]
  41efa1:	cmp    bl,0x19
  41efa4:	cmovbe r9d,r11d
  41efa8:	mov    BYTE PTR [rdi+r10*1],r9b
  41efac:	add    r10,0x1
  41efb0:	cmp    r10,rdx
  41efb3:	jne    0x41ef94
  41efb5:	shl    rbp,0x4
  41efb9:	cdqe   
  41efbb:	lea    rdi,[rsp+0x20]
  41efc0:	lea    rbp,[rsi+rbp*1-0x10]
  41efc5:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41efca:	cmp    rsi,rbp
  41efcd:	jbe    0x41efda
  41efcf:	jmp    0x41f012
  41efd1:	lea    rbp,[rbx-0x10]
  41efd5:	cmp    rsi,rbp
  41efd8:	ja     0x41f012
  41efda:	mov    rax,rbp
  41efdd:	mov    rdx,rdi
  41efe0:	sub    rax,rsi
  41efe3:	sar    rax,0x4
  41efe7:	mov    rbx,rax
  41efea:	shr    rbx,0x3f
  41efee:	add    rbx,rax
  41eff1:	sar    rbx,1
  41eff4:	shl    rbx,0x4
  41eff8:	add    rbx,rsi
  41effb:	mov    rcx,QWORD PTR [rbx]
  41effe:	call   0x42a420
  41f003:	test   eax,eax
  41f005:	je     0x41f01f
  41f007:	jns    0x41efd1
  41f009:	lea    rsi,[rbx+0x10]
  41f00d:	cmp    rsi,rbp
  41f010:	jbe    0x41efda
  41f012:	xor    eax,eax
  41f014:	add    rsp,0x60
  41f018:	pop    rbx
  41f019:	pop    rsi
  41f01a:	pop    rdi
  41f01b:	pop    rbp
  41f01c:	pop    r12
  41f01e:	ret    
  41f01f:	mov    rax,rbx
  41f022:	add    rsp,0x60
  41f026:	pop    rbx
  41f027:	pop    rsi
  41f028:	pop    rdi
  41f029:	pop    rbp
  41f02a:	pop    r12
  41f02c:	ret    
  41f02d:	nop
  41f02e:	nop
  41f02f:	nop
  41f030:	lea    rdx,[rip+0x2a009]        # 0x449040
  41f037:	jmp    0x427dd8
  41f03c:	nop    DWORD PTR [rax+0x0]
  41f040:	sub    rsp,0xb8
  41f047:	lea    rax,[rip+0x2a118]        # 0x449166
  41f04e:	lea    r8,[rip+0x2a101]        # 0x449156
  41f055:	lea    rdx,[rip+0x2a102]        # 0x44915e
  41f05c:	lea    r9,[rip+0x29ffa]        # 0x44905d
  41f063:	mov    QWORD PTR [rsp+0x90],rax
  41f06b:	mov    QWORD PTR [rsp+0x78],rax
  41f070:	mov    QWORD PTR [rsp+0x60],rax
  41f075:	lea    rax,[rip+0x2a0f2]        # 0x44916e
  41f07c:	mov    QWORD PTR [rsp+0xa0],r8
  41f084:	mov    QWORD PTR [rsp+0x88],r8
  41f08c:	mov    QWORD PTR [rsp+0x70],r8
  41f091:	lea    r8,[rip+0x29fd9]        # 0x449071
  41f098:	mov    QWORD PTR [rsp+0x58],rax
  41f09d:	lea    rax,[rip+0x2a0e8]        # 0x44918c
  41f0a4:	mov    QWORD PTR [rsp+0x98],rdx
  41f0ac:	mov    QWORD PTR [rsp+0x80],rdx
  41f0b4:	mov    QWORD PTR [rsp+0x68],rdx
  41f0b9:	lea    rdx,[rip+0x29fb8]        # 0x449078
  41f0c0:	mov    QWORD PTR [rsp+0x50],rax
  41f0c5:	lea    rax,[rip+0x2a0cb]        # 0x449197
  41f0cc:	mov    QWORD PTR [rsp+0x48],r9
  41f0d1:	mov    QWORD PTR [rsp+0x40],r8
  41f0d6:	mov    QWORD PTR [rsp+0x30],r9
  41f0db:	mov    QWORD PTR [rsp+0x38],rax
  41f0e0:	lea    rax,[rip+0x2a0ba]        # 0x4491a1
  41f0e7:	mov    QWORD PTR [rsp+0x28],r8
  41f0ec:	mov    QWORD PTR [rsp+0x20],rax
  41f0f1:	call   0x427dd8
  41f0f6:	nop
  41f0f7:	add    rsp,0xb8
  41f0fe:	ret    
  41f0ff:	nop
  41f100:	sub    rsp,0x48
  41f104:	lea    rax,[rip+0x2a081]        # 0x44918c
  41f10b:	lea    r8,[rip+0x29f5f]        # 0x449071
  41f112:	lea    r9,[rip+0x2a088]        # 0x4491a1
  41f119:	lea    rdx,[rip+0x2a090]        # 0x4491b0
  41f120:	mov    QWORD PTR [rsp+0x38],rax
  41f125:	lea    rax,[rip+0x2a06b]        # 0x449197
  41f12c:	mov    QWORD PTR [rsp+0x30],r8
  41f131:	mov    QWORD PTR [rsp+0x20],r8
  41f136:	mov    QWORD PTR [rsp+0x28],rax
  41f13b:	call   0x427dd8
  41f140:	nop
  41f141:	add    rsp,0x48
  41f145:	ret    
  41f146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f150:	sub    rsp,0x48
  41f154:	lea    rax,[rip+0x2a031]        # 0x44918c
  41f15b:	lea    r8,[rip+0x29f0f]        # 0x449071
  41f162:	lea    r9,[rip+0x2a038]        # 0x4491a1
  41f169:	lea    rdx,[rip+0x2a0a0]        # 0x449210
  41f170:	mov    QWORD PTR [rsp+0x38],rax
  41f175:	lea    rax,[rip+0x2a01b]        # 0x449197
  41f17c:	mov    QWORD PTR [rsp+0x30],r8
  41f181:	mov    QWORD PTR [rsp+0x20],r8
  41f186:	mov    QWORD PTR [rsp+0x28],rax
  41f18b:	call   0x427dd8
  41f190:	nop
  41f191:	add    rsp,0x48
  41f195:	ret    
  41f196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1a0:	sub    rsp,0xa8
  41f1a7:	lea    rax,[rip+0x2a210]        # 0x4493be
  41f1ae:	lea    rdx,[rip+0x2a221]        # 0x4493d6
  41f1b5:	lea    r8,[rip+0x29eb5]        # 0x449071
  41f1bc:	lea    r9,[rip+0x2a0b0]        # 0x449273
  41f1c3:	mov    QWORD PTR [rsp+0x90],rax
  41f1cb:	mov    QWORD PTR [rsp+0x80],rax
  41f1d3:	mov    QWORD PTR [rsp+0x68],rax
  41f1d8:	lea    rax,[rip+0x2a1fd]        # 0x4493dc
  41f1df:	mov    QWORD PTR [rsp+0x70],rdx
  41f1e4:	lea    rdx,[rip+0x2a095]        # 0x449280
  41f1eb:	mov    QWORD PTR [rsp+0x98],r8
  41f1f3:	mov    QWORD PTR [rsp+0x88],r8
  41f1fb:	mov    QWORD PTR [rsp+0x58],rax
  41f200:	lea    rax,[rip+0x29f90]        # 0x449197
  41f207:	mov    QWORD PTR [rsp+0x78],r8
  41f20c:	mov    QWORD PTR [rsp+0x60],r8
  41f211:	mov    QWORD PTR [rsp+0x50],r8
  41f216:	mov    QWORD PTR [rsp+0x48],rax
  41f21b:	lea    rax,[rip+0x29f7f]        # 0x4491a1
  41f222:	mov    QWORD PTR [rsp+0x40],r8
  41f227:	mov    QWORD PTR [rsp+0x30],r8
  41f22c:	mov    QWORD PTR [rsp+0x38],rax
  41f231:	lea    rax,[rip+0x2a1b3]        # 0x4493eb
  41f238:	mov    QWORD PTR [rsp+0x28],rax
  41f23d:	lea    rax,[rip+0x2a1b1]        # 0x4493f5
  41f244:	mov    QWORD PTR [rsp+0x20],rax
  41f249:	call   0x427dd8
  41f24e:	nop
  41f24f:	add    rsp,0xa8
  41f256:	ret    
  41f257:	nop    WORD PTR [rax+rax*1+0x0]
  41f260:	sub    rsp,0x78
  41f264:	lea    rax,[rip+0x2a72f]        # 0x44999a
  41f26b:	lea    r9,[rip+0x2a198]        # 0x44940a
  41f272:	lea    r8,[rip+0x2a19d]        # 0x449416
  41f279:	lea    rdx,[rip+0x2a1a8]        # 0x449428
  41f280:	mov    QWORD PTR [rsp+0x68],rax
  41f285:	mov    QWORD PTR [rsp+0x60],rax
  41f28a:	mov    QWORD PTR [rsp+0x58],rax
  41f28f:	mov    QWORD PTR [rsp+0x50],rax
  41f294:	mov    QWORD PTR [rsp+0x48],rax
  41f299:	mov    QWORD PTR [rsp+0x40],rax
  41f29e:	mov    QWORD PTR [rsp+0x38],rax
  41f2a3:	mov    QWORD PTR [rsp+0x30],rax
  41f2a8:	lea    rax,[rip+0x2a6f9]        # 0x4499a8
  41f2af:	mov    QWORD PTR [rsp+0x28],rax
  41f2b4:	lea    rax,[rip+0x2a71a]        # 0x4499d5
  41f2bb:	mov    QWORD PTR [rsp+0x20],rax
  41f2c0:	call   0x427dd8
  41f2c5:	nop
  41f2c6:	add    rsp,0x78
  41f2ca:	ret    
  41f2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	sub    rsp,0xa8
  41f2d7:	lea    rax,[rip+0x29eae]        # 0x44918c
  41f2de:	lea    rdx,[rip+0x2a8c0]        # 0x449ba5
  41f2e5:	lea    r8,[rip+0x29d85]        # 0x449071
  41f2ec:	lea    r9,[rip+0x2a6fe]        # 0x4499f1
  41f2f3:	mov    QWORD PTR [rsp+0x98],rax
  41f2fb:	lea    rax,[rip+0x29e9f]        # 0x4491a1
  41f302:	mov    QWORD PTR [rsp+0x58],rdx
  41f307:	lea    rdx,[rip+0x2a6f2]        # 0x449a00
  41f30e:	mov    QWORD PTR [rsp+0x90],r8
  41f316:	mov    QWORD PTR [rsp+0x80],r8
  41f31e:	mov    QWORD PTR [rsp+0x88],rax
  41f326:	lea    rax,[rip+0x29e6a]        # 0x449197
  41f32d:	mov    QWORD PTR [rsp+0x70],r8
  41f332:	mov    QWORD PTR [rsp+0x60],r8
  41f337:	mov    QWORD PTR [rsp+0x48],r8
  41f33c:	mov    QWORD PTR [rsp+0x78],rax
  41f341:	lea    rax,[rip+0x2a84d]        # 0x449b95
  41f348:	mov    QWORD PTR [rsp+0x38],r8
  41f34d:	mov    QWORD PTR [rsp+0x28],r8
  41f352:	mov    QWORD PTR [rsp+0x20],r8
  41f357:	mov    QWORD PTR [rsp+0x68],rax
  41f35c:	mov    QWORD PTR [rsp+0x50],rax
  41f361:	mov    QWORD PTR [rsp+0x40],rax
  41f366:	lea    rax,[rip+0x2a84c]        # 0x449bb9
  41f36d:	mov    QWORD PTR [rsp+0x30],rax
  41f372:	call   0x427dd8
  41f377:	nop
  41f378:	add    rsp,0xa8
  41f37f:	ret    
  41f380:	sub    rsp,0x48
  41f384:	lea    rax,[rip+0x29e16]        # 0x4491a1
  41f38b:	lea    r8,[rip+0x29cdf]        # 0x449071
  41f392:	lea    rdx,[rip+0x2a837]        # 0x449bd0
  41f399:	mov    QWORD PTR [rsp+0x38],rax
  41f39e:	lea    rax,[rip+0x29df2]        # 0x449197
  41f3a5:	mov    QWORD PTR [rsp+0x30],r8
  41f3aa:	mov    QWORD PTR [rsp+0x20],r8
  41f3af:	mov    r9,r8
  41f3b2:	mov    QWORD PTR [rsp+0x28],rax
  41f3b7:	call   0x427dd8
  41f3bc:	nop
  41f3bd:	add    rsp,0x48
  41f3c1:	ret    
  41f3c2:	nop    DWORD PTR [rax+0x0]
  41f3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3d0:	sub    rsp,0x1b8
  41f3d7:	lea    rdx,[rip+0x29d88]        # 0x449166
  41f3de:	lea    r10,[rip+0x2abcb]        # 0x449fb0
  41f3e5:	lea    rax,[rip+0x2ab9c]        # 0x449f88
  41f3ec:	lea    r11,[rip+0x2abca]        # 0x449fbd
  41f3f3:	lea    r9,[rip+0x29d5c]        # 0x449156
  41f3fa:	lea    r8,[rip+0x29d5d]        # 0x44915e
  41f401:	mov    QWORD PTR [rsp+0x198],rdx
  41f409:	mov    QWORD PTR [rsp+0x180],rdx
  41f411:	mov    QWORD PTR [rsp+0x168],rdx
  41f419:	mov    QWORD PTR [rsp+0x160],rax
  41f421:	lea    rax,[rip+0x2ab7c]        # 0x449fa4
  41f428:	mov    QWORD PTR [rsp+0x100],r10
  41f430:	mov    QWORD PTR [rsp+0xf0],r10
  41f438:	lea    r10,[rip+0x2ab93]        # 0x449fd2
  41f43f:	mov    QWORD PTR [rsp+0xe0],r11
  41f447:	mov    QWORD PTR [rsp+0xb0],rdx
  41f44f:	lea    r11,[rip+0x2ab72]        # 0x449fc8
  41f456:	lea    rdx,[rip+0x2ab83]        # 0x449fe0
  41f45d:	mov    QWORD PTR [rsp+0x1a8],r9
  41f465:	mov    QWORD PTR [rsp+0x1a0],r8
  41f46d:	mov    QWORD PTR [rsp+0x190],r9
  41f475:	mov    QWORD PTR [rsp+0x188],r8
  41f47d:	mov    QWORD PTR [rsp+0x178],r9
  41f485:	mov    QWORD PTR [rsp+0x170],r8
  41f48d:	mov    QWORD PTR [rsp+0x158],rax
  41f495:	mov    QWORD PTR [rsp+0x150],rax
  41f49d:	mov    QWORD PTR [rsp+0x148],rax
  41f4a5:	mov    QWORD PTR [rsp+0x140],rax
  41f4ad:	mov    QWORD PTR [rsp+0x138],rax
  41f4b5:	mov    QWORD PTR [rsp+0x130],rax
  41f4bd:	mov    QWORD PTR [rsp+0x128],rax
  41f4c5:	mov    QWORD PTR [rsp+0x120],rax
  41f4cd:	mov    QWORD PTR [rsp+0x118],rax
  41f4d5:	mov    QWORD PTR [rsp+0x110],rax
  41f4dd:	mov    QWORD PTR [rsp+0x108],rax
  41f4e5:	mov    QWORD PTR [rsp+0xf8],rax
  41f4ed:	mov    QWORD PTR [rsp+0xe8],rax
  41f4f5:	mov    QWORD PTR [rsp+0xd8],r11
  41f4fd:	mov    QWORD PTR [rsp+0xd0],r10
  41f505:	mov    QWORD PTR [rsp+0xc8],rax
  41f50d:	mov    QWORD PTR [rsp+0xc0],r9
  41f515:	mov    QWORD PTR [rsp+0xb8],r8
  41f51d:	lea    r8,[rip+0x29b4d]        # 0x449071
  41f524:	mov    QWORD PTR [rsp+0xa8],rdx
  41f52c:	mov    QWORD PTR [rsp+0xa0],rax
  41f534:	lea    r9,[rip+0x2a72e]        # 0x449c69
  41f53b:	mov    QWORD PTR [rsp+0x98],rax
  41f543:	mov    QWORD PTR [rsp+0x90],rax
  41f54b:	lea    rdx,[rip+0x2a726]        # 0x449c78
  41f552:	mov    QWORD PTR [rsp+0x88],rax
  41f55a:	mov    QWORD PTR [rsp+0x80],rax
  41f562:	mov    QWORD PTR [rsp+0x78],rax
  41f567:	lea    rax,[rip+0x2aa80]        # 0x449fee
  41f56e:	mov    QWORD PTR [rsp+0x40],r8
  41f573:	mov    QWORD PTR [rsp+0x30],r8
  41f578:	mov    QWORD PTR [rsp+0x20],r8
  41f57d:	mov    QWORD PTR [rsp+0x70],rax
  41f582:	lea    rax,[rip+0x2aa71]        # 0x449ffa
  41f589:	mov    QWORD PTR [rsp+0x68],rax
  41f58e:	lea    rax,[rip+0x29ac8]        # 0x44905d
  41f595:	mov    QWORD PTR [rsp+0x60],rax
  41f59a:	lea    rax,[rip+0x2aa65]        # 0x44a006
  41f5a1:	mov    QWORD PTR [rsp+0x58],rax
  41f5a6:	lea    rax,[rip+0x2aa68]        # 0x44a015
  41f5ad:	mov    QWORD PTR [rsp+0x50],rax
  41f5b2:	lea    rax,[rip+0x2aa74]        # 0x44a02d
  41f5b9:	mov    QWORD PTR [rsp+0x48],rax
  41f5be:	mov    QWORD PTR [rsp+0x38],rax
  41f5c3:	lea    rax,[rip+0x29bc2]        # 0x44918c
  41f5ca:	mov    QWORD PTR [rsp+0x28],rax
  41f5cf:	call   0x427dd8
  41f5d4:	nop
  41f5d5:	add    rsp,0x1b8
  41f5dc:	ret    
  41f5dd:	nop    DWORD PTR [rax]
  41f5e0:	sub    rsp,0x68
  41f5e4:	lea    rax,[rip+0x29bb6]        # 0x4491a1
  41f5eb:	lea    r8,[rip+0x29a7f]        # 0x449071
  41f5f2:	lea    r9,[rip+0x2aa42]        # 0x44a03b
  41f5f9:	lea    rdx,[rip+0x2aa50]        # 0x44a050
  41f600:	mov    QWORD PTR [rsp+0x50],rax
  41f605:	lea    rax,[rip+0x29b8b]        # 0x449197
  41f60c:	mov    QWORD PTR [rsp+0x48],r8
  41f611:	mov    QWORD PTR [rsp+0x38],r8
  41f616:	mov    QWORD PTR [rsp+0x40],rax
  41f61b:	lea    rax,[rip+0x29db4]        # 0x4493d6
  41f622:	mov    QWORD PTR [rsp+0x30],rax
  41f627:	lea    rax,[rip+0x29c45]        # 0x449273
  41f62e:	mov    QWORD PTR [rsp+0x28],rax
  41f633:	lea    rax,[rip+0x2ab08]        # 0x44a142
  41f63a:	mov    QWORD PTR [rsp+0x20],rax
  41f63f:	call   0x427dd8
  41f644:	nop
  41f645:	add    rsp,0x68
  41f649:	ret    
  41f64a:	nop    WORD PTR [rax+rax*1+0x0]
  41f650:	sub    rsp,0x148
  41f657:	lea    rdx,[rip+0x29d78]        # 0x4493d6
  41f65e:	lea    r8,[rip+0x29c0e]        # 0x449273
  41f665:	lea    rax,[rip+0x29b2b]        # 0x449197
  41f66c:	lea    r10,[rip+0x2aed5]        # 0x44a548
  41f673:	lea    r11,[rip+0x2aee0]        # 0x44a55a
  41f67a:	lea    r9,[rip+0x2aad4]        # 0x44a155
  41f681:	mov    QWORD PTR [rsp+0x138],rdx
  41f689:	mov    QWORD PTR [rsp+0x100],rdx
  41f691:	mov    QWORD PTR [rsp+0xd8],rdx
  41f699:	lea    rdx,[rip+0x2ae96]        # 0x44a536
  41f6a0:	mov    QWORD PTR [rsp+0x130],r8
  41f6a8:	mov    QWORD PTR [rsp+0x128],rax
  41f6b0:	mov    QWORD PTR [rsp+0xf8],r8
  41f6b8:	lea    rax,[rip+0x2ae4d]        # 0x44a50c
  41f6bf:	mov    QWORD PTR [rsp+0xc0],rdx
  41f6c7:	lea    rdx,[rip+0x2a323]        # 0x4499f1
  41f6ce:	lea    r8,[rip+0x2ae50]        # 0x44a525
  41f6d5:	mov    QWORD PTR [rsp+0x120],rax
  41f6dd:	mov    QWORD PTR [rsp+0x118],rax
  41f6e5:	mov    QWORD PTR [rsp+0xa0],rdx
  41f6ed:	lea    rdx,[rip+0x2ae4a]        # 0x44a53e
  41f6f4:	mov    QWORD PTR [rsp+0x110],rax
  41f6fc:	mov    QWORD PTR [rsp+0x108],rax
  41f704:	mov    QWORD PTR [rsp+0xe8],r8
  41f70c:	lea    rax,[rip+0x2ae06]        # 0x44a519
  41f713:	mov    QWORD PTR [rsp+0x90],rdx
  41f71b:	mov    QWORD PTR [rsp+0x68],rdx
  41f720:	lea    rdx,[rip+0x2ae3d]        # 0x44a564
  41f727:	mov    QWORD PTR [rsp+0xd0],r8
  41f72f:	lea    r8,[rip+0x2993b]        # 0x449071
  41f736:	mov    QWORD PTR [rsp+0xf0],rax
  41f73e:	mov    QWORD PTR [rsp+0x58],rdx
  41f743:	lea    rdx,[rip+0x29a42]        # 0x44918c
  41f74a:	mov    QWORD PTR [rsp+0xe0],rax
  41f752:	mov    QWORD PTR [rsp+0xc8],rax
  41f75a:	mov    QWORD PTR [rsp+0xb8],rax
  41f762:	mov    QWORD PTR [rsp+0x50],rdx
  41f767:	lea    rdx,[rip+0x29a33]        # 0x4491a1
  41f76e:	mov    QWORD PTR [rsp+0xb0],rax
  41f776:	mov    QWORD PTR [rsp+0xa8],rax
  41f77e:	mov    QWORD PTR [rsp+0x98],rax
  41f786:	mov    QWORD PTR [rsp+0x40],rdx
  41f78b:	lea    rdx,[rip+0x2adea]        # 0x44a57c
  41f792:	mov    QWORD PTR [rsp+0x88],rax
  41f79a:	mov    QWORD PTR [rsp+0x80],rax
  41f7a2:	mov    QWORD PTR [rsp+0x78],r10
  41f7a7:	mov    QWORD PTR [rsp+0x70],r11
  41f7ac:	mov    QWORD PTR [rsp+0x60],rax
  41f7b1:	mov    QWORD PTR [rsp+0x48],r8
  41f7b6:	mov    QWORD PTR [rsp+0x38],r8
  41f7bb:	mov    QWORD PTR [rsp+0x30],rdx
  41f7c0:	lea    rdx,[rip+0x2a999]        # 0x44a160
  41f7c7:	mov    QWORD PTR [rsp+0x28],rax
  41f7cc:	mov    QWORD PTR [rsp+0x20],r8
  41f7d1:	call   0x427dd8
  41f7d6:	nop
  41f7d7:	add    rsp,0x148
  41f7de:	ret    
  41f7df:	nop
  41f7e0:	sub    rsp,0xf8
  41f7e7:	lea    rax,[rip+0x29bd0]        # 0x4493be
  41f7ee:	lea    rdx,[rip+0x29be1]        # 0x4493d6
  41f7f5:	lea    r10,[rip+0x2999b]        # 0x449197
  41f7fc:	lea    r9,[rip+0x29963]        # 0x449166
  41f803:	lea    r8,[rip+0x29867]        # 0x449071
  41f80a:	lea    r11,[rip+0x29990]        # 0x4491a1
  41f811:	mov    QWORD PTR [rsp+0xe0],rax
  41f819:	mov    QWORD PTR [rsp+0xd8],rax
  41f821:	mov    QWORD PTR [rsp+0xc8],rax
  41f829:	lea    rax,[rip+0x2afa9]        # 0x44a7d9
  41f830:	mov    QWORD PTR [rsp+0xd0],rdx
  41f838:	lea    rdx,[rip+0x29917]        # 0x449156
  41f83f:	mov    QWORD PTR [rsp+0x80],r10
  41f847:	lea    r10,[rip+0x2a907]        # 0x44a155
  41f84e:	mov    QWORD PTR [rsp+0xc0],rax
  41f856:	lea    rax,[rip+0x2af88]        # 0x44a7e5
  41f85d:	mov    QWORD PTR [rsp+0x58],r11
  41f862:	mov    QWORD PTR [rsp+0xa0],rdx
  41f86a:	mov    QWORD PTR [rsp+0x78],rdx
  41f86f:	mov    QWORD PTR [rsp+0xb8],rax
  41f877:	lea    rax,[rip+0x2ace6]        # 0x44a564
  41f87e:	mov    QWORD PTR [rsp+0x50],rdx
  41f883:	mov    QWORD PTR [rsp+0x28],rdx
  41f888:	lea    rdx,[rip+0x2ad01]        # 0x44a590
  41f88f:	mov    QWORD PTR [rsp+0x40],r9
  41f894:	mov    QWORD PTR [rsp+0xb0],rax
  41f89c:	lea    rax,[rip+0x298e9]        # 0x44918c
  41f8a3:	mov    QWORD PTR [rsp+0x38],r8
  41f8a8:	mov    QWORD PTR [rsp+0x30],r10
  41f8ad:	mov    QWORD PTR [rsp+0x90],r9
  41f8b5:	mov    QWORD PTR [rsp+0xa8],rax
  41f8bd:	lea    rax,[rip+0x2989a]        # 0x44915e
  41f8c4:	mov    QWORD PTR [rsp+0x88],r8
  41f8cc:	mov    QWORD PTR [rsp+0x68],r9
  41f8d1:	mov    QWORD PTR [rsp+0x60],r8
  41f8d6:	mov    QWORD PTR [rsp+0x48],rax
  41f8db:	mov    QWORD PTR [rsp+0x20],rax
  41f8e0:	mov    QWORD PTR [rsp+0x98],rax
  41f8e8:	mov    QWORD PTR [rsp+0x70],rax
  41f8ed:	call   0x427dd8
  41f8f2:	nop
  41f8f3:	add    rsp,0xf8
  41f8fa:	ret    
  41f8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f900:	sub    rsp,0x48
  41f904:	lea    r8,[rip+0x2aef3]        # 0x44a7fe
  41f90b:	lea    rax,[rip+0x2988f]        # 0x4491a1
  41f912:	lea    r9,[rip+0x2aedb]        # 0x44a7f4
  41f919:	lea    rdx,[rip+0x2aef0]        # 0x44a810
  41f920:	mov    QWORD PTR [rsp+0x38],rax
  41f925:	mov    QWORD PTR [rsp+0x30],r8
  41f92a:	mov    QWORD PTR [rsp+0x28],r9
  41f92f:	mov    QWORD PTR [rsp+0x20],r8
  41f934:	call   0x427dd8
  41f939:	nop
  41f93a:	add    rsp,0x48
  41f93e:	ret    
  41f93f:	nop
  41f940:	sub    rsp,0x78
  41f944:	lea    rax,[rip+0x29a91]        # 0x4493dc
  41f94b:	lea    rdx,[rip+0x29a84]        # 0x4493d6
  41f952:	lea    r8,[rip+0x29718]        # 0x449071
  41f959:	lea    r9,[rip+0x29841]        # 0x4491a1
  41f960:	mov    QWORD PTR [rsp+0x68],rax
  41f965:	lea    rax,[rip+0x2a02e]        # 0x44999a
  41f96c:	mov    QWORD PTR [rsp+0x40],rdx
  41f971:	lea    rdx,[rip+0x2af00]        # 0x44a878
  41f978:	mov    QWORD PTR [rsp+0x58],r8
  41f97d:	mov    QWORD PTR [rsp+0x48],r8
  41f982:	mov    QWORD PTR [rsp+0x60],rax
  41f987:	lea    rax,[rip+0x2b007]        # 0x44a995
  41f98e:	mov    QWORD PTR [rsp+0x30],r8
  41f993:	mov    QWORD PTR [rsp+0x20],r8
  41f998:	mov    QWORD PTR [rsp+0x50],rax
  41f99d:	mov    QWORD PTR [rsp+0x38],rax
  41f9a2:	lea    rax,[rip+0x2affe]        # 0x44a9a7
  41f9a9:	mov    QWORD PTR [rsp+0x28],rax
  41f9ae:	call   0x427dd8
  41f9b3:	nop
  41f9b4:	add    rsp,0x78
  41f9b8:	ret    
  41f9b9:	nop    DWORD PTR [rax+0x0]
  41f9c0:	sub    rsp,0x38
  41f9c4:	lea    rax,[rip+0x297cc]        # 0x449197
  41f9cb:	lea    r8,[rip+0x2969f]        # 0x449071
  41f9d2:	lea    r9,[rip+0x297c8]        # 0x4491a1
  41f9d9:	lea    rdx,[rip+0x2afd8]        # 0x44a9b8
  41f9e0:	mov    QWORD PTR [rsp+0x28],rax
  41f9e5:	mov    QWORD PTR [rsp+0x20],r8
  41f9ea:	call   0x427dd8
  41f9ef:	nop
  41f9f0:	add    rsp,0x38
  41f9f4:	ret    
  41f9f5:	nop
  41f9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa00:	lea    r9,[rip+0x29790]        # 0x449197
  41fa07:	lea    r8,[rip+0x2b005]        # 0x44aa13
  41fa0e:	lea    rdx,[rip+0x2b013]        # 0x44aa28
  41fa15:	jmp    0x427dd8
  41fa1a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa20:	sub    rsp,0xf8
  41fa27:	lea    rdx,[rip+0x299ae]        # 0x4493dc
  41fa2e:	lea    rax,[rip+0x29762]        # 0x449197
  41fa35:	lea    r8,[rip+0x2aae9]        # 0x44a525
  41fa3c:	lea    r9,[rip+0x29993]        # 0x4493d6
  41fa43:	lea    r10,[rip+0x2aaec]        # 0x44a536
  41fa4a:	lea    r11,[rip+0x2ab13]        # 0x44a564
  41fa51:	mov    QWORD PTR [rsp+0xe0],rdx
  41fa59:	mov    QWORD PTR [rsp+0x68],rdx
  41fa5e:	lea    rdx,[rip+0x29f35]        # 0x44999a
  41fa65:	mov    QWORD PTR [rsp+0xd8],rax
  41fa6d:	lea    rax,[rip+0x2af21]        # 0x44a995
  41fa74:	mov    QWORD PTR [rsp+0xa8],r8
  41fa7c:	mov    QWORD PTR [rsp+0x60],rdx
  41fa81:	lea    rdx,[rip+0x29704]        # 0x44918c
  41fa88:	mov    QWORD PTR [rsp+0x90],r8
  41fa90:	mov    QWORD PTR [rsp+0xd0],rax
  41fa98:	mov    QWORD PTR [rsp+0xc0],rax
  41faa0:	lea    rax,[rip+0x2b266]        # 0x44ad0d
  41faa7:	mov    QWORD PTR [rsp+0x50],rdx
  41faac:	lea    rdx,[rip+0x296ee]        # 0x4491a1
  41fab3:	lea    r8,[rip+0x295b7]        # 0x449071
  41faba:	mov    QWORD PTR [rsp+0xb8],rax
  41fac2:	lea    rax,[rip+0x2aa50]        # 0x44a519
  41fac9:	mov    QWORD PTR [rsp+0xc8],r9
  41fad1:	mov    QWORD PTR [rsp+0x40],rdx
  41fad6:	lea    rdx,[rip+0x2aa9f]        # 0x44a57c
  41fadd:	mov    QWORD PTR [rsp+0x98],r9
  41fae5:	lea    r9,[rip+0x2a669]        # 0x44a155
  41faec:	mov    QWORD PTR [rsp+0x58],r8
  41faf1:	mov    QWORD PTR [rsp+0x48],r8
  41faf6:	mov    QWORD PTR [rsp+0x30],rdx
  41fafb:	lea    rdx,[rip+0x2af4e]        # 0x44aa50
  41fb02:	mov    QWORD PTR [rsp+0x38],r8
  41fb07:	mov    QWORD PTR [rsp+0x28],rax
  41fb0c:	mov    QWORD PTR [rsp+0x20],r8
  41fb11:	mov    QWORD PTR [rsp+0xb0],rax
  41fb19:	mov    QWORD PTR [rsp+0xa0],rax
  41fb21:	mov    QWORD PTR [rsp+0x88],rax
  41fb29:	mov    QWORD PTR [rsp+0x80],r10
  41fb31:	mov    QWORD PTR [rsp+0x78],rax
  41fb36:	mov    QWORD PTR [rsp+0x70],r11
  41fb3b:	call   0x427dd8
  41fb40:	nop
  41fb41:	add    rsp,0xf8
  41fb48:	ret    
  41fb49:	nop    DWORD PTR [rax+0x0]
  41fb50:	sub    rsp,0x58
  41fb54:	lea    rax,[rip+0x29631]        # 0x44918c
  41fb5b:	lea    rdx,[rip+0x29635]        # 0x449197
  41fb62:	lea    r9,[rip+0x2a45f]        # 0x449fc8
  41fb69:	lea    r8,[rip+0x29501]        # 0x449071
  41fb70:	mov    QWORD PTR [rsp+0x48],rax
  41fb75:	lea    rax,[rip+0x2a441]        # 0x449fbd
  41fb7c:	mov    QWORD PTR [rsp+0x28],rdx
  41fb81:	lea    rdx,[rip+0x2b190]        # 0x44ad18
  41fb88:	mov    QWORD PTR [rsp+0x38],r9
  41fb8d:	mov    QWORD PTR [rsp+0x30],r8
  41fb92:	mov    QWORD PTR [rsp+0x40],rax
  41fb97:	mov    QWORD PTR [rsp+0x20],rax
  41fb9c:	call   0x427dd8
  41fba1:	nop
  41fba2:	add    rsp,0x58
  41fba6:	ret    
  41fba7:	nop    WORD PTR [rax+rax*1+0x0]
  41fbb0:	sub    rsp,0x68
  41fbb4:	lea    rax,[rip+0x295d1]        # 0x44918c
  41fbbb:	lea    r9,[rip+0x2a3ee]        # 0x449fb0
  41fbc2:	lea    r8,[rip+0x294a8]        # 0x449071
  41fbc9:	lea    rdx,[rip+0x2b1d0]        # 0x44ada0
  41fbd0:	mov    QWORD PTR [rsp+0x50],rax
  41fbd5:	lea    rax,[rip+0x295bb]        # 0x449197
  41fbdc:	mov    QWORD PTR [rsp+0x48],r9
  41fbe1:	mov    QWORD PTR [rsp+0x40],r8
  41fbe6:	mov    QWORD PTR [rsp+0x30],r9
  41fbeb:	mov    QWORD PTR [rsp+0x38],rax
  41fbf0:	lea    rax,[rip+0x295aa]        # 0x4491a1
  41fbf7:	mov    QWORD PTR [rsp+0x28],r8
  41fbfc:	mov    QWORD PTR [rsp+0x20],rax
  41fc01:	call   0x427dd8
  41fc06:	nop
  41fc07:	add    rsp,0x68
  41fc0b:	ret    
  41fc0c:	nop    DWORD PTR [rax+0x0]
  41fc10:	sub    rsp,0x108
  41fc17:	lea    rax,[rip+0x2956e]        # 0x44918c
  41fc1e:	lea    r10,[rip+0x2b3c0]        # 0x44afe5
  41fc25:	lea    rdx,[rip+0x2b3c8]        # 0x44aff4
  41fc2c:	lea    r11,[rip+0x2b3d1]        # 0x44b004
  41fc33:	lea    r9,[rip+0x2a376]        # 0x449fb0
  41fc3a:	lea    r8,[rip+0x29430]        # 0x449071
  41fc41:	mov    QWORD PTR [rsp+0xf0],rax
  41fc49:	lea    rax,[rip+0x29547]        # 0x449197
  41fc50:	mov    QWORD PTR [rsp+0x98],r10
  41fc58:	mov    QWORD PTR [rsp+0x48],r10
  41fc5d:	lea    r10,[rip+0x2b3ae]        # 0x44b012
  41fc64:	mov    QWORD PTR [rsp+0x80],rdx
  41fc6c:	mov    QWORD PTR [rsp+0xd8],rax
  41fc74:	lea    rax,[rip+0x29526]        # 0x4491a1
  41fc7b:	mov    QWORD PTR [rsp+0x68],r11
  41fc80:	mov    QWORD PTR [rsp+0x20],rdx
  41fc85:	lea    r11,[rip+0x2a354]        # 0x449fe0
  41fc8c:	lea    rdx,[rip+0x2b19d]        # 0x44ae30
  41fc93:	mov    QWORD PTR [rsp+0xc0],rax
  41fc9b:	lea    rax,[rip+0x2b33b]        # 0x44afdd
  41fca2:	mov    QWORD PTR [rsp+0x40],r10
  41fca7:	mov    QWORD PTR [rsp+0xe8],r9
  41fcaf:	mov    QWORD PTR [rsp+0xe0],r8
  41fcb7:	mov    QWORD PTR [rsp+0xa8],rax
  41fcbf:	mov    QWORD PTR [rsp+0xa0],rax
  41fcc7:	mov    QWORD PTR [rsp+0x90],rax
  41fccf:	mov    QWORD PTR [rsp+0x88],rax
  41fcd7:	mov    QWORD PTR [rsp+0x58],rax
  41fcdc:	mov    QWORD PTR [rsp+0x50],rax
  41fce1:	mov    QWORD PTR [rsp+0x38],rax
  41fce6:	mov    QWORD PTR [rsp+0x30],rax
  41fceb:	lea    rax,[rip+0x2a2e0]        # 0x449fd2
  41fcf2:	mov    QWORD PTR [rsp+0xd0],r9
  41fcfa:	mov    QWORD PTR [rsp+0xc8],r8
  41fd02:	mov    QWORD PTR [rsp+0x28],rax
  41fd07:	mov    QWORD PTR [rsp+0xb8],r9
  41fd0f:	mov    QWORD PTR [rsp+0xb0],r8
  41fd17:	mov    QWORD PTR [rsp+0x78],r9
  41fd1c:	mov    QWORD PTR [rsp+0x70],r8
  41fd21:	mov    QWORD PTR [rsp+0x60],r11
  41fd26:	call   0x427dd8
  41fd2b:	nop
  41fd2c:	add    rsp,0x108
  41fd33:	ret    
  41fd34:	xchg   ax,ax
  41fd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd40:	sub    rsp,0xb8
  41fd47:	lea    rax,[rip+0x2b53b]        # 0x44b289
  41fd4e:	lea    rdx,[rip+0x29669]        # 0x4493be
  41fd55:	lea    r8,[rip+0x29315]        # 0x449071
  41fd5c:	lea    r10,[rip+0x29673]        # 0x4493d6
  41fd63:	lea    r9,[rip+0x29509]        # 0x449273
  41fd6a:	mov    QWORD PTR [rsp+0xa8],rax
  41fd72:	mov    QWORD PTR [rsp+0x90],rax
  41fd7a:	mov    QWORD PTR [rsp+0x78],rax
  41fd7f:	mov    QWORD PTR [rsp+0x58],rax
  41fd84:	lea    rax,[rip+0x29416]        # 0x4491a1
  41fd8b:	mov    QWORD PTR [rsp+0x98],rdx
  41fd93:	mov    QWORD PTR [rsp+0x80],rdx
  41fd9b:	mov    QWORD PTR [rsp+0x48],rax
  41fda0:	lea    rax,[rip+0x2b4f0]        # 0x44b297
  41fda7:	mov    QWORD PTR [rsp+0x60],rdx
  41fdac:	lea    rdx,[rip+0x2b275]        # 0x44b028
  41fdb3:	mov    QWORD PTR [rsp+0x88],r8
  41fdbb:	mov    QWORD PTR [rsp+0x70],r8
  41fdc0:	mov    QWORD PTR [rsp+0x38],rax
  41fdc5:	lea    rax,[rip+0x2b4d5]        # 0x44b2a1
  41fdcc:	mov    QWORD PTR [rsp+0x68],r10
  41fdd1:	mov    QWORD PTR [rsp+0x50],r8
  41fdd6:	mov    QWORD PTR [rsp+0x40],r8
  41fddb:	mov    QWORD PTR [rsp+0x30],rax
  41fde0:	lea    rax,[rip+0x29604]        # 0x4493eb
  41fde7:	mov    QWORD PTR [rsp+0xa0],r8
  41fdef:	mov    QWORD PTR [rsp+0x28],rax
  41fdf4:	lea    rax,[rip+0x295fa]        # 0x4493f5
  41fdfb:	mov    QWORD PTR [rsp+0x20],rax
  41fe00:	call   0x427dd8
  41fe05:	nop
  41fe06:	add    rsp,0xb8
  41fe0d:	ret    
  41fe0e:	xchg   ax,ax
  41fe10:	sub    rsp,0x38
  41fe14:	lea    rax,[rip+0x29386]        # 0x4491a1
  41fe1b:	lea    r9,[rip+0x2b488]        # 0x44b2aa
  41fe22:	lea    r8,[rip+0x29248]        # 0x449071
  41fe29:	lea    rdx,[rip+0x2b488]        # 0x44b2b8
  41fe30:	mov    QWORD PTR [rsp+0x20],rax
  41fe35:	call   0x427dd8
  41fe3a:	nop
  41fe3b:	add    rsp,0x38
  41fe3f:	ret    
  41fe40:	sub    rsp,0x38
  41fe44:	lea    rax,[rip+0x2934c]        # 0x449197
  41fe4b:	lea    r8,[rip+0x2921f]        # 0x449071
  41fe52:	lea    r9,[rip+0x29348]        # 0x4491a1
  41fe59:	lea    rdx,[rip+0x2b480]        # 0x44b2e0
  41fe60:	mov    QWORD PTR [rsp+0x28],rax
  41fe65:	mov    QWORD PTR [rsp+0x20],r8
  41fe6a:	call   0x427dd8
  41fe6f:	nop
  41fe70:	add    rsp,0x38
  41fe74:	ret    
  41fe75:	nop
  41fe76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe80:	sub    rsp,0x98
  41fe87:	lea    rax,[rip+0x292fe]        # 0x44918c
  41fe8e:	lea    r8,[rip+0x291dc]        # 0x449071
  41fe95:	lea    r9,[rip+0x2b47d]        # 0x44b319
  41fe9c:	lea    rdx,[rip+0x2b485]        # 0x44b328
  41fea3:	mov    QWORD PTR [rsp+0x80],rax
  41feab:	lea    rax,[rip+0x292ef]        # 0x4491a1
  41feb2:	mov    QWORD PTR [rsp+0x78],r8
  41feb7:	mov    QWORD PTR [rsp+0x68],r8
  41febc:	mov    QWORD PTR [rsp+0x58],r8
  41fec1:	mov    QWORD PTR [rsp+0x70],rax
  41fec6:	lea    rax,[rip+0x292ca]        # 0x449197
  41fecd:	mov    QWORD PTR [rsp+0x60],rax
  41fed2:	lea    rax,[rip+0x2a640]        # 0x44a519
  41fed9:	mov    QWORD PTR [rsp+0x50],rax
  41fede:	lea    rax,[rip+0x2b3c5]        # 0x44b2aa
  41fee5:	mov    QWORD PTR [rsp+0x48],rax
  41feea:	lea    rax,[rip+0x2b5b4]        # 0x44b4a5
  41fef1:	mov    QWORD PTR [rsp+0x40],rax
  41fef6:	lea    rax,[rip+0x2b5ae]        # 0x44b4ab
  41fefd:	mov    QWORD PTR [rsp+0x38],rax
  41ff02:	lea    rax,[rip+0x2b5aa]        # 0x44b4b3
  41ff09:	mov    QWORD PTR [rsp+0x30],rax
  41ff0e:	lea    rax,[rip+0x2b5a4]        # 0x44b4b9
  41ff15:	mov    QWORD PTR [rsp+0x28],rax
  41ff1a:	lea    rax,[rip+0x2b5a1]        # 0x44b4c2
  41ff21:	mov    QWORD PTR [rsp+0x20],rax
  41ff26:	call   0x427dd8
  41ff2b:	nop
  41ff2c:	add    rsp,0x98
  41ff33:	ret    
  41ff34:	xchg   ax,ax
  41ff36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff40:	sub    rsp,0x58
  41ff44:	lea    rax,[rip+0x29256]        # 0x4491a1
  41ff4b:	lea    r8,[rip+0x2911f]        # 0x449071
  41ff52:	lea    r9,[rip+0x29d10]        # 0x449c69
  41ff59:	lea    rdx,[rip+0x2b570]        # 0x44b4d0
  41ff60:	mov    QWORD PTR [rsp+0x48],rax
  41ff65:	lea    rax,[rip+0x2922b]        # 0x449197
  41ff6c:	mov    QWORD PTR [rsp+0x40],r8
  41ff71:	mov    QWORD PTR [rsp+0x30],r8
  41ff76:	mov    QWORD PTR [rsp+0x38],rax
  41ff7b:	lea    rax,[rip+0x29454]        # 0x4493d6
  41ff82:	mov    QWORD PTR [rsp+0x28],rax
  41ff87:	lea    rax,[rip+0x292e5]        # 0x449273
  41ff8e:	mov    QWORD PTR [rsp+0x20],rax
  41ff93:	call   0x427dd8
  41ff98:	nop
  41ff99:	add    rsp,0x58
  41ff9d:	ret    
  41ff9e:	xchg   ax,ax
  41ffa0:	sub    rsp,0x38
  41ffa4:	lea    r8,[rip+0x29413]        # 0x4493be
  41ffab:	lea    r9,[rip+0x29424]        # 0x4493d6
  41ffb2:	lea    rdx,[rip+0x2b5af]        # 0x44b568
  41ffb9:	mov    QWORD PTR [rsp+0x28],r8
  41ffbe:	mov    QWORD PTR [rsp+0x20],r9
  41ffc3:	call   0x427dd8
  41ffc8:	nop
  41ffc9:	add    rsp,0x38
  41ffcd:	ret    
  41ffce:	xchg   ax,ax
  41ffd0:	sub    rsp,0x218
  41ffd7:	lea    rax,[rip+0x2ad2f]        # 0x44ad0d
  41ffde:	lea    r9,[rip+0x2bd3a]        # 0x44bd1f
  41ffe5:	lea    r10,[rip+0x293ea]        # 0x4493d6
  41ffec:	lea    r11,[rip+0x2bcfd]        # 0x44bcf0
  41fff3:	lea    rdx,[rip+0x29b9b]        # 0x449b95
  41fffa:	lea    r8,[rip+0x293db]        # 0x4493dc
  420001:	mov    QWORD PTR [rsp+0x200],rax
  420009:	mov    QWORD PTR [rsp+0x1e8],rax
  420011:	mov    QWORD PTR [rsp+0x1a0],rax
  420019:	lea    rax,[rip+0x2bd0c]        # 0x44bd2c
  420020:	mov    QWORD PTR [rsp+0x1f0],r11
  420028:	mov    QWORD PTR [rsp+0x1c8],r9
  420030:	mov    QWORD PTR [rsp+0x1c0],r9
  420038:	lea    r11,[rip+0x29158]        # 0x449197
  42003f:	mov    QWORD PTR [rsp+0x198],rax
  420047:	mov    QWORD PTR [rsp+0x190],rax
  42004f:	lea    r9,[rip+0x2a93f]        # 0x44a995
  420056:	mov    QWORD PTR [rsp+0x188],rax
  42005e:	mov    QWORD PTR [rsp+0x180],rax
  420066:	lea    rax,[rip+0x2a49f]        # 0x44a50c
  42006d:	mov    QWORD PTR [rsp+0x1b0],r10
  420075:	mov    QWORD PTR [rsp+0x118],r10
  42007d:	lea    r10,[rip+0x2a4b2]        # 0x44a536
  420084:	mov    QWORD PTR [rsp+0x178],rax
  42008c:	mov    QWORD PTR [rsp+0x170],rax
  420094:	mov    QWORD PTR [rsp+0x168],rax
  42009c:	mov    QWORD PTR [rsp+0x160],rax
  4200a4:	lea    rax,[rip+0x2bc93]        # 0x44bd3e
  4200ab:	mov    QWORD PTR [rsp+0x1d8],r11
  4200b3:	mov    QWORD PTR [rsp+0x1b8],r9
  4200bb:	lea    r11,[rip+0x2bc53]        # 0x44bd15
  4200c2:	mov    QWORD PTR [rsp+0x140],rax
  4200ca:	lea    rax,[rip+0x2bc8a]        # 0x44bd5b
  4200d1:	mov    QWORD PTR [rsp+0x1a8],r9
  4200d9:	mov    QWORD PTR [rsp+0x100],r10
  4200e1:	lea    r9,[rip+0x2a43d]        # 0x44a525
  4200e8:	lea    r10,[rip+0x2a46b]        # 0x44a55a
  4200ef:	mov    QWORD PTR [rsp+0x138],rax
  4200f7:	lea    rax,[rip+0x2a41b]        # 0x44a519
  4200fe:	mov    QWORD PTR [rsp+0x1f8],rdx
  420106:	mov    QWORD PTR [rsp+0x1e0],r8
  42010e:	mov    QWORD PTR [rsp+0x1d0],r11
  420116:	lea    r11,[rip+0x2a42b]        # 0x44a548
  42011d:	mov    QWORD PTR [rsp+0x158],rdx
  420125:	mov    QWORD PTR [rsp+0x150],rdx
  42012d:	mov    QWORD PTR [rsp+0x148],rdx
  420135:	mov    QWORD PTR [rsp+0x130],rax
  42013d:	mov    QWORD PTR [rsp+0x128],r9
  420145:	mov    QWORD PTR [rsp+0x120],rax
  42014d:	mov    QWORD PTR [rsp+0x110],r9
  420155:	mov    QWORD PTR [rsp+0x108],rax
  42015d:	lea    r9,[rip+0x2988d]        # 0x4499f1
  420164:	mov    QWORD PTR [rsp+0xf8],rax
  42016c:	mov    QWORD PTR [rsp+0xc8],r10
  420174:	mov    QWORD PTR [rsp+0xa0],r10
  42017c:	lea    r10,[rip+0x2a3e1]        # 0x44a564
  420183:	mov    QWORD PTR [rsp+0xe0],r9
  42018b:	mov    QWORD PTR [rsp+0xd0],r9
  420193:	mov    QWORD PTR [rsp+0xa8],r11
  42019b:	lea    r9,[rip+0x2a39c]        # 0x44a53e
  4201a2:	mov    QWORD PTR [rsp+0x88],r10
  4201aa:	lea    r10,[rip+0x28fdb]        # 0x44918c
  4201b1:	mov    QWORD PTR [rsp+0x40],rdx
  4201b6:	lea    r11,[rip+0x297dd]        # 0x44999a
  4201bd:	lea    rdx,[rip+0x2a3b8]        # 0x44a57c
  4201c4:	mov    QWORD PTR [rsp+0x80],r8
  4201cc:	mov    QWORD PTR [rsp+0x68],r10
  4201d1:	lea    r8,[rip+0x28e99]        # 0x449071
  4201d8:	lea    r10,[rip+0x299c6]        # 0x449ba5
  4201df:	mov    QWORD PTR [rsp+0xc0],r9
  4201e7:	mov    QWORD PTR [rsp+0x98],r9
  4201ef:	lea    r9,[rip+0x29f5f]        # 0x44a155
  4201f6:	mov    QWORD PTR [rsp+0x78],r11
  4201fb:	mov    QWORD PTR [rsp+0x30],rdx
  420200:	lea    r11,[rip+0x28f9a]        # 0x4491a1
  420207:	lea    rdx,[rip+0x2b3c2]        # 0x44b5d0
  42020e:	mov    QWORD PTR [rsp+0x48],r10
  420213:	mov    QWORD PTR [rsp+0x38],r8
  420218:	mov    QWORD PTR [rsp+0x28],rax
  42021d:	mov    QWORD PTR [rsp+0x20],r8
  420222:	mov    QWORD PTR [rsp+0xf0],rax
  42022a:	mov    QWORD PTR [rsp+0xe8],rax
  420232:	mov    QWORD PTR [rsp+0xd8],rax
  42023a:	mov    QWORD PTR [rsp+0xb8],rax
  420242:	mov    QWORD PTR [rsp+0xb0],rax
  42024a:	mov    QWORD PTR [rsp+0x90],rax
  420252:	mov    QWORD PTR [rsp+0x70],r8
  420257:	mov    QWORD PTR [rsp+0x60],r8
  42025c:	mov    QWORD PTR [rsp+0x58],r11
  420261:	mov    QWORD PTR [rsp+0x50],r8
  420266:	call   0x427dd8
  42026b:	nop
  42026c:	add    rsp,0x218
  420273:	ret    
  420274:	xchg   ax,ax
  420276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420280:	sub    rsp,0x68
  420284:	lea    rax,[rip+0x2bb7d]        # 0x44be08
  42028b:	lea    rdx,[rip+0x29144]        # 0x4493d6
  420292:	lea    r8,[rip+0x28dd8]        # 0x449071
  420299:	lea    r9,[rip+0x28f01]        # 0x4491a1
  4202a0:	mov    QWORD PTR [rsp+0x50],rax
  4202a5:	mov    QWORD PTR [rsp+0x38],rax
  4202aa:	lea    rax,[rip+0x28ee6]        # 0x449197
  4202b1:	mov    QWORD PTR [rsp+0x40],rdx
  4202b6:	lea    rdx,[rip+0x2bab3]        # 0x44bd70
  4202bd:	mov    QWORD PTR [rsp+0x48],r8
  4202c2:	mov    QWORD PTR [rsp+0x30],r8
  4202c7:	mov    QWORD PTR [rsp+0x28],rax
  4202cc:	mov    QWORD PTR [rsp+0x20],r8
  4202d1:	call   0x427dd8
  4202d6:	nop
  4202d7:	add    rsp,0x68
  4202db:	ret    
  4202dc:	nop    DWORD PTR [rax+0x0]
  4202e0:	sub    rsp,0xc8
  4202e7:	lea    rax,[rip+0x28e9e]        # 0x44918c
  4202ee:	lea    rdx,[rip+0x2bd5f]        # 0x44c054
  4202f5:	lea    r8,[rip+0x28d75]        # 0x449071
  4202fc:	lea    r9,[rip+0x2bb17]        # 0x44be1a
  420303:	mov    QWORD PTR [rsp+0xb0],rax
  42030b:	lea    rax,[rip+0x28e85]        # 0x449197
  420312:	mov    QWORD PTR [rsp+0x70],rdx
  420317:	mov    QWORD PTR [rsp+0x50],rdx
  42031c:	lea    rdx,[rip+0x2bb05]        # 0x44be28
  420323:	mov    QWORD PTR [rsp+0x88],r8
  42032b:	mov    QWORD PTR [rsp+0xa0],rax
  420333:	lea    rax,[rip+0x28e67]        # 0x4491a1
  42033a:	mov    QWORD PTR [rsp+0x80],r9
  420342:	mov    QWORD PTR [rsp+0x78],r8
  420347:	mov    QWORD PTR [rsp+0x60],r9
  42034c:	mov    QWORD PTR [rsp+0x90],rax
  420354:	lea    rax,[rip+0x2bd08]        # 0x44c063
  42035b:	mov    QWORD PTR [rsp+0x58],r8
  420360:	mov    QWORD PTR [rsp+0x40],r8
  420365:	mov    QWORD PTR [rsp+0x30],r9
  42036a:	mov    QWORD PTR [rsp+0x68],rax
  42036f:	mov    QWORD PTR [rsp+0x48],rax
  420374:	lea    rax,[rip+0x2bcf7]        # 0x44c072
  42037b:	mov    QWORD PTR [rsp+0x28],r8
  420380:	mov    QWORD PTR [rsp+0xa8],r8
  420388:	mov    QWORD PTR [rsp+0x38],rax
  42038d:	mov    QWORD PTR [rsp+0x20],rax
  420392:	mov    QWORD PTR [rsp+0x98],r8
  42039a:	call   0x427dd8
  42039f:	nop
  4203a0:	add    rsp,0xc8
  4203a7:	ret    
  4203a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4203b0:	sub    rsp,0x68
  4203b4:	lea    rax,[rip+0x28dd1]        # 0x44918c
  4203bb:	lea    r8,[rip+0x28caf]        # 0x449071
  4203c2:	lea    r9,[rip+0x28eaa]        # 0x449273
  4203c9:	lea    rdx,[rip+0x2bcb8]        # 0x44c088
  4203d0:	mov    QWORD PTR [rsp+0x50],rax
  4203d5:	lea    rax,[rip+0x28dbb]        # 0x449197
  4203dc:	mov    QWORD PTR [rsp+0x48],r8
  4203e1:	mov    QWORD PTR [rsp+0x38],r8
  4203e6:	mov    QWORD PTR [rsp+0x28],r8
  4203eb:	mov    QWORD PTR [rsp+0x40],rax
  4203f0:	lea    rax,[rip+0x28daa]        # 0x4491a1
  4203f7:	mov    QWORD PTR [rsp+0x30],rax
  4203fc:	lea    rax,[rip+0x28fd3]        # 0x4493d6
  420403:	mov    QWORD PTR [rsp+0x20],rax
  420408:	call   0x427dd8
  42040d:	nop
  42040e:	add    rsp,0x68
  420412:	ret    
  420413:	nop    DWORD PTR [rax]
  420416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420420:	sub    rsp,0x38
  420424:	lea    rax,[rip+0x28d61]        # 0x44918c
  42042b:	lea    r8,[rip+0x28c3f]        # 0x449071
  420432:	lea    r9,[rip+0x28d68]        # 0x4491a1
  420439:	lea    rdx,[rip+0x2bd10]        # 0x44c150
  420440:	mov    QWORD PTR [rsp+0x28],rax
  420445:	mov    QWORD PTR [rsp+0x20],r8
  42044a:	call   0x427dd8
  42044f:	nop
  420450:	add    rsp,0x38
  420454:	ret    
  420455:	nop
  420456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420460:	sub    rsp,0x38
  420464:	lea    rax,[rip+0x28d21]        # 0x44918c
  42046b:	lea    r8,[rip+0x28bff]        # 0x449071
  420472:	lea    r9,[rip+0x28d28]        # 0x4491a1
  420479:	lea    rdx,[rip+0x2bd28]        # 0x44c1a8
  420480:	mov    QWORD PTR [rsp+0x28],rax
  420485:	mov    QWORD PTR [rsp+0x20],r8
  42048a:	call   0x427dd8
  42048f:	nop
  420490:	add    rsp,0x38
  420494:	ret    
  420495:	nop
  420496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204a0:	sub    rsp,0x38
  4204a4:	lea    rax,[rip+0x28cf6]        # 0x4491a1
  4204ab:	lea    r9,[rip+0x2adf8]        # 0x44b2aa
  4204b2:	lea    r8,[rip+0x28bb8]        # 0x449071
  4204b9:	lea    rdx,[rip+0x2bd40]        # 0x44c200
  4204c0:	mov    QWORD PTR [rsp+0x20],rax
  4204c5:	call   0x427dd8
  4204ca:	nop
  4204cb:	add    rsp,0x38
  4204cf:	ret    
  4204d0:	sub    rsp,0xc8
  4204d7:	lea    rdx,[rip+0x2a060]        # 0x44a53e
  4204de:	lea    rax,[rip+0x2bf04]        # 0x44c3e9
  4204e5:	lea    r8,[rip+0x2a06e]        # 0x44a55a
  4204ec:	lea    r9,[rip+0x29c62]        # 0x44a155
  4204f3:	mov    QWORD PTR [rsp+0xb0],rdx
  4204fb:	mov    QWORD PTR [rsp+0x90],rdx
  420503:	lea    rdx,[rip+0x2a05a]        # 0x44a564
  42050a:	mov    QWORD PTR [rsp+0xb8],r8
  420512:	mov    QWORD PTR [rsp+0xa8],rax
  42051a:	mov    QWORD PTR [rsp+0x80],rdx
  420522:	lea    rdx,[rip+0x2becf]        # 0x44c3f8
  420529:	mov    QWORD PTR [rsp+0xa0],rax
  420531:	mov    QWORD PTR [rsp+0x98],r8
  420539:	mov    QWORD PTR [rsp+0x88],rax
  420541:	lea    r8,[rip+0x28b29]        # 0x449071
  420548:	mov    QWORD PTR [rsp+0x78],rdx
  42054d:	lea    rdx,[rip+0x2beb8]        # 0x44c40c
  420554:	mov    QWORD PTR [rsp+0x38],rax
  420559:	lea    rax,[rip+0x28c37]        # 0x449197
  420560:	mov    QWORD PTR [rsp+0x68],r8
  420565:	mov    QWORD PTR [rsp+0x58],r8
  42056a:	mov    QWORD PTR [rsp+0x70],rdx
  42056f:	lea    rdx,[rip+0x28c16]        # 0x44918c
  420576:	mov    QWORD PTR [rsp+0x48],r8
  42057b:	mov    QWORD PTR [rsp+0x30],r8
  420580:	mov    QWORD PTR [rsp+0x28],rax
  420585:	mov    QWORD PTR [rsp+0x60],rdx
  42058a:	lea    rdx,[rip+0x28c10]        # 0x4491a1
  420591:	mov    QWORD PTR [rsp+0x20],r8
  420596:	mov    QWORD PTR [rsp+0x50],rdx
  42059b:	lea    rdx,[rip+0x2be79]        # 0x44c41b
  4205a2:	mov    QWORD PTR [rsp+0x40],rdx
  4205a7:	lea    rdx,[rip+0x2bc7a]        # 0x44c228
  4205ae:	call   0x427dd8
  4205b3:	nop
  4205b4:	add    rsp,0xc8
  4205bb:	ret    
  4205bc:	nop    DWORD PTR [rax+0x0]
  4205c0:	sub    rsp,0x98
  4205c7:	lea    rax,[rip+0x28df0]        # 0x4493be
  4205ce:	lea    rdx,[rip+0x28e01]        # 0x4493d6
  4205d5:	lea    r8,[rip+0x28a95]        # 0x449071
  4205dc:	lea    r9,[rip+0x28c90]        # 0x449273
  4205e3:	mov    QWORD PTR [rsp+0x80],rax
  4205eb:	mov    QWORD PTR [rsp+0x70],rax
  4205f0:	mov    QWORD PTR [rsp+0x58],rax
  4205f5:	lea    rax,[rip+0x28ba5]        # 0x4491a1
  4205fc:	mov    QWORD PTR [rsp+0x60],rdx
  420601:	lea    rdx,[rip+0x2be28]        # 0x44c430
  420608:	mov    QWORD PTR [rsp+0x88],r8
  420610:	mov    QWORD PTR [rsp+0x78],r8
  420615:	mov    QWORD PTR [rsp+0x48],rax
  42061a:	lea    rax,[rip+0x2ac76]        # 0x44b297
  420621:	mov    QWORD PTR [rsp+0x68],r8
  420626:	mov    QWORD PTR [rsp+0x50],r8
  42062b:	mov    QWORD PTR [rsp+0x40],r8
  420630:	mov    QWORD PTR [rsp+0x38],rax
  420635:	lea    rax,[rip+0x2ac65]        # 0x44b2a1
  42063c:	mov    QWORD PTR [rsp+0x30],rax
  420641:	lea    rax,[rip+0x28da3]        # 0x4493eb
  420648:	mov    QWORD PTR [rsp+0x28],rax
  42064d:	lea    rax,[rip+0x28da1]        # 0x4493f5
  420654:	mov    QWORD PTR [rsp+0x20],rax
  420659:	call   0x427dd8
  42065e:	nop
  42065f:	add    rsp,0x98
  420666:	ret    
  420667:	nop    WORD PTR [rax+rax*1+0x0]
  420670:	sub    rsp,0x38
  420674:	lea    rax,[rip+0x28d5b]        # 0x4493d6
  42067b:	lea    r9,[rip+0x2bfa5]        # 0x44c627
  420682:	lea    r8,[rip+0x2a16b]        # 0x44a7f4
  420689:	lea    rdx,[rip+0x2bfa8]        # 0x44c638
  420690:	mov    QWORD PTR [rsp+0x28],rax
  420695:	lea    rax,[rip+0x28bd7]        # 0x449273
  42069c:	mov    QWORD PTR [rsp+0x20],rax
  4206a1:	call   0x427dd8
  4206a6:	nop
  4206a7:	add    rsp,0x38
  4206ab:	ret    
  4206ac:	nop    DWORD PTR [rax+0x0]
  4206b0:	sub    rsp,0x98
  4206b7:	lea    rax,[rip+0x2c162]        # 0x44c820
  4206be:	lea    rdx,[rip+0x2c16c]        # 0x44c831
  4206c5:	lea    r8,[rip+0x289a5]        # 0x449071
  4206cc:	lea    r9,[rip+0x29e46]        # 0x44a519
  4206d3:	mov    QWORD PTR [rsp+0x88],rax
  4206db:	mov    QWORD PTR [rsp+0x70],rax
  4206e0:	lea    rax,[rip+0x28aa5]        # 0x44918c
  4206e7:	mov    QWORD PTR [rsp+0x78],rdx
  4206ec:	lea    rdx,[rip+0x2bfcd]        # 0x44c6c0
  4206f3:	mov    QWORD PTR [rsp+0x80],r8
  4206fb:	mov    QWORD PTR [rsp+0x60],rax
  420700:	lea    rax,[rip+0x28a9a]        # 0x4491a1
  420707:	mov    QWORD PTR [rsp+0x68],r8
  42070c:	mov    QWORD PTR [rsp+0x58],r8
  420711:	mov    QWORD PTR [rsp+0x48],r8
  420716:	mov    QWORD PTR [rsp+0x50],rax
  42071b:	lea    rax,[rip+0x28a75]        # 0x449197
  420722:	mov    QWORD PTR [rsp+0x38],r8
  420727:	mov    QWORD PTR [rsp+0x30],r9
  42072c:	mov    QWORD PTR [rsp+0x28],r8
  420731:	mov    QWORD PTR [rsp+0x40],rax
  420736:	lea    rax,[rip+0x292b4]        # 0x4499f1
  42073d:	mov    QWORD PTR [rsp+0x20],rax
  420742:	call   0x427dd8
  420747:	nop
  420748:	add    rsp,0x98
  42074f:	ret    
  420750:	lea    r9,[rip+0x29dc2]        # 0x44a519
  420757:	lea    r8,[rip+0x2ab4c]        # 0x44b2aa
  42075e:	lea    rdx,[rip+0x2c0e3]        # 0x44c848
  420765:	jmp    0x427dd8
  42076a:	nop    WORD PTR [rax+rax*1+0x0]
  420770:	lea    r9,[rip+0x2c101]        # 0x44c878
  420777:	lea    r8,[rip+0x2c11c]        # 0x44c89a
  42077e:	lea    rdx,[rip+0x2c12b]        # 0x44c8b0
  420785:	jmp    0x427dd8
  42078a:	nop    WORD PTR [rax+rax*1+0x0]
  420790:	lea    rdx,[rip+0x2c1d7]        # 0x44c96e
  420797:	jmp    0x427dd8
  42079c:	nop    DWORD PTR [rax+0x0]
  4207a0:	lea    r8,[rip+0x288ca]        # 0x449071
  4207a7:	lea    rdx,[rip+0x2c1cb]        # 0x44c979
  4207ae:	jmp    0x427dd8
  4207b3:	nop    DWORD PTR [rax]
  4207b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4207c0:	lea    r9,[rip+0x2a546]        # 0x44ad0d
  4207c7:	lea    r8,[rip+0x2aadc]        # 0x44b2aa
  4207ce:	lea    rdx,[rip+0x2c1bb]        # 0x44c990
  4207d5:	jmp    0x427dd8
  4207da:	nop    WORD PTR [rax+rax*1+0x0]
  4207e0:	sub    rsp,0x1e8
  4207e7:	lea    r11,[rip+0x29d1e]        # 0x44a50c
  4207ee:	lea    rax,[rip+0x28979]        # 0x44916e
  4207f5:	lea    r9,[rip+0x2895a]        # 0x449156
  4207fc:	lea    r8,[rip+0x2895b]        # 0x44915e
  420803:	lea    rdx,[rip+0x2895c]        # 0x449166
  42080a:	lea    r10,[rip+0x2aa99]        # 0x44b2aa
  420811:	mov    QWORD PTR [rsp+0x168],r11
  420819:	lea    r11,[rip+0x2c505]        # 0x44cd25
  420820:	mov    QWORD PTR [rsp+0x190],rax
  420828:	lea    rax,[rip+0x2c4f1]        # 0x44cd20
  42082f:	mov    QWORD PTR [rsp+0x1d8],r9
  420837:	mov    QWORD PTR [rsp+0x1d0],r8
  42083f:	mov    QWORD PTR [rsp+0x110],r11
  420847:	lea    r11,[rip+0x29762]        # 0x449fb0
  42084e:	mov    QWORD PTR [rsp+0x1c8],rdx
  420856:	mov    QWORD PTR [rsp+0x188],rax
  42085e:	lea    rax,[rip+0x2973f]        # 0x449fa4
  420865:	mov    QWORD PTR [rsp+0x1c0],r9
  42086d:	mov    QWORD PTR [rsp+0xf8],r11
  420875:	mov    QWORD PTR [rsp+0xe8],r11
  42087d:	lea    r11,[rip+0x29739]        # 0x449fbd
  420884:	mov    QWORD PTR [rsp+0x1b8],r8
  42088c:	mov    QWORD PTR [rsp+0x1b0],rdx
  420894:	mov    QWORD PTR [rsp+0xd8],r11
  42089c:	lea    r11,[rip+0x29725]        # 0x449fc8
  4208a3:	mov    QWORD PTR [rsp+0x1a8],r9
  4208ab:	mov    QWORD PTR [rsp+0x1a0],r8
  4208b3:	mov    QWORD PTR [rsp+0x198],rdx
  4208bb:	mov    QWORD PTR [rsp+0x180],rax
  4208c3:	mov    QWORD PTR [rsp+0x178],rax
  4208cb:	mov    QWORD PTR [rsp+0x170],r10
  4208d3:	mov    QWORD PTR [rsp+0x160],rax
  4208db:	mov    QWORD PTR [rsp+0x158],rax
  4208e3:	mov    QWORD PTR [rsp+0x150],rax
  4208eb:	mov    QWORD PTR [rsp+0x148],rax
  4208f3:	mov    QWORD PTR [rsp+0x140],rax
  4208fb:	mov    QWORD PTR [rsp+0x138],rax
  420903:	mov    QWORD PTR [rsp+0x130],rax
  42090b:	mov    QWORD PTR [rsp+0x128],rax
  420913:	mov    QWORD PTR [rsp+0x120],rax
  42091b:	mov    QWORD PTR [rsp+0x118],r10
  420923:	mov    QWORD PTR [rsp+0x108],rax
  42092b:	mov    QWORD PTR [rsp+0x100],rax
  420933:	mov    QWORD PTR [rsp+0xf0],rax
  42093b:	mov    QWORD PTR [rsp+0xe0],rax
  420943:	mov    QWORD PTR [rsp+0xd0],r11
  42094b:	lea    r11,[rip+0x29680]        # 0x449fd2
  420952:	mov    QWORD PTR [rsp+0x98],rdx
  42095a:	lea    rdx,[rip+0x2967f]        # 0x449fe0
  420961:	mov    QWORD PTR [rsp+0xc0],rax
  420969:	mov    QWORD PTR [rsp+0xb0],rax
  420971:	mov    QWORD PTR [rsp+0x88],rax
  420979:	mov    QWORD PTR [rsp+0x90],rdx
  420981:	lea    rdx,[rip+0x2920d]        # 0x449b95
  420988:	mov    QWORD PTR [rsp+0x80],rax
  420990:	mov    QWORD PTR [rsp+0x78],rax
  420995:	mov    QWORD PTR [rsp+0x70],rax
  42099a:	mov    QWORD PTR [rsp+0x48],rdx
  42099f:	lea    rdx,[rip+0x29b73]        # 0x44a519
  4209a6:	mov    QWORD PTR [rsp+0x68],rax
  4209ab:	mov    QWORD PTR [rsp+0x60],rax
  4209b0:	mov    QWORD PTR [rsp+0x58],rax
  4209b5:	mov    QWORD PTR [rsp+0x30],rax
  4209ba:	lea    rax,[rip+0x2962d]        # 0x449fee
  4209c1:	mov    QWORD PTR [rsp+0x40],rdx
  4209c6:	lea    rdx,[rip+0x2c362]        # 0x44cd2f
  4209cd:	mov    QWORD PTR [rsp+0xc8],r11
  4209d5:	mov    QWORD PTR [rsp+0xa8],r9
  4209dd:	mov    QWORD PTR [rsp+0x28],rax
  4209e2:	lea    rax,[rip+0x29611]        # 0x449ffa
  4209e9:	lea    r11,[rip+0x2a023]        # 0x44aa13
  4209f0:	mov    QWORD PTR [rsp+0xa0],r8
  4209f8:	mov    QWORD PTR [rsp+0x38],rdx
  4209fd:	lea    r9,[rip+0x28659]        # 0x44905d
  420a04:	lea    r8,[rip+0x295fb]        # 0x44a006
  420a0b:	lea    rdx,[rip+0x2bfb6]        # 0x44c9c8
  420a12:	mov    QWORD PTR [rsp+0x50],r10
  420a17:	mov    QWORD PTR [rsp+0x20],rax
  420a1c:	mov    QWORD PTR [rsp+0xb8],r11
  420a24:	call   0x427dd8
  420a29:	nop
  420a2a:	add    rsp,0x1e8
  420a31:	ret    
  420a32:	nop    DWORD PTR [rax+0x0]
  420a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a40:	lea    rdx,[rip+0x2c2f6]        # 0x44cd3d
  420a47:	jmp    0x427dd8
  420a4c:	nop    DWORD PTR [rax+0x0]
  420a50:	lea    r8,[rip+0x2c304]        # 0x44cd5b
  420a57:	lea    rdx,[rip+0x2c30c]        # 0x44cd6a
  420a5e:	jmp    0x427dd8
  420a63:	nop    DWORD PTR [rax]
  420a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a70:	sub    rsp,0xd8
  420a77:	lea    rax,[rip+0x2c4d7]        # 0x44cf55
  420a7e:	lea    rdx,[rip+0x2c507]        # 0x44cf8c
  420a85:	lea    r9,[rip+0x29a8d]        # 0x44a519
  420a8c:	lea    r10,[rip+0x287e0]        # 0x449273
  420a93:	lea    r11,[rip+0x2c54b]        # 0x44cfe5
  420a9a:	lea    r8,[rip+0x2a809]        # 0x44b2aa
  420aa1:	mov    QWORD PTR [rsp+0xc8],rax
  420aa9:	lea    rax,[rip+0x2c4b3]        # 0x44cf63
  420ab0:	mov    QWORD PTR [rsp+0x90],rdx
  420ab8:	lea    rdx,[rip+0x2c4d9]        # 0x44cf98
  420abf:	mov    QWORD PTR [rsp+0x60],r10
  420ac4:	mov    QWORD PTR [rsp+0x48],r11
  420ac9:	mov    QWORD PTR [rsp+0xa8],rax
  420ad1:	lea    rax,[rip+0x2c49c]        # 0x44cf74
  420ad8:	mov    QWORD PTR [rsp+0x40],r9
  420add:	mov    QWORD PTR [rsp+0x88],rdx
  420ae5:	lea    rdx,[rip+0x2c4e8]        # 0x44cfd4
  420aec:	mov    QWORD PTR [rsp+0x38],r8
  420af1:	mov    QWORD PTR [rsp+0xa0],rax
  420af9:	lea    rax,[rip+0x2c484]        # 0x44cf84
  420b00:	mov    QWORD PTR [rsp+0x30],r10
  420b05:	mov    QWORD PTR [rsp+0x58],rdx
  420b0a:	mov    QWORD PTR [rsp+0x28],rdx
  420b0f:	lea    rdx,[rip+0x2c26a]        # 0x44cd80
  420b16:	mov    QWORD PTR [rsp+0x98],rax
  420b1e:	mov    QWORD PTR [rsp+0x80],rax
  420b26:	mov    QWORD PTR [rsp+0x78],rax
  420b2b:	lea    rax,[rip+0x2c47a]        # 0x44cfac
  420b32:	mov    QWORD PTR [rsp+0xc0],r9
  420b3a:	mov    QWORD PTR [rsp+0xb8],r9
  420b42:	mov    QWORD PTR [rsp+0xb0],r9
  420b4a:	mov    QWORD PTR [rsp+0x70],rax
  420b4f:	lea    rax,[rip+0x2c462]        # 0x44cfb8
  420b56:	mov    QWORD PTR [rsp+0x68],rax
  420b5b:	lea    rax,[rip+0x2c47a]        # 0x44cfdc
  420b62:	mov    QWORD PTR [rsp+0x50],rax
  420b67:	mov    QWORD PTR [rsp+0x20],rax
  420b6c:	call   0x427dd8
  420b71:	nop
  420b72:	add    rsp,0xd8
  420b79:	ret    
  420b7a:	nop    WORD PTR [rax+rax*1+0x0]
  420b80:	push   r15
  420b82:	push   r14
  420b84:	push   r13
  420b86:	push   r12
  420b88:	push   rbp
  420b89:	push   rdi
  420b8a:	push   rsi
  420b8b:	push   rbx
  420b8c:	sub    rsp,0x178
  420b93:	lea    rax,[rip+0x2c894]        # 0x44d42e
  420b9a:	lea    r15,[rip+0x2c843]        # 0x44d3e4
  420ba1:	lea    r14,[rip+0x2c84a]        # 0x44d3f2
  420ba8:	lea    r11,[rip+0x2c8b7]        # 0x44d466
  420baf:	lea    r10,[rip+0x2c8c0]        # 0x44d476
  420bb6:	lea    rdi,[rip+0x2c881]        # 0x44d43e
  420bbd:	mov    QWORD PTR [rsp+0x138],rax
  420bc5:	lea    rax,[rip+0x2c86b]        # 0x44d437
  420bcc:	lea    rsi,[rip+0x2c87d]        # 0x44d450
  420bd3:	lea    rbx,[rip+0x2c87c]        # 0x44d456
  420bda:	lea    r8,[rip+0x28490]        # 0x449071
  420be1:	lea    rdx,[rip+0x2c8b0]        # 0x44d498
  420be8:	mov    QWORD PTR [rsp+0x130],rax
  420bf0:	lea    rax,[rip+0x2c885]        # 0x44d47c
  420bf7:	lea    r9,[rip+0x28568]        # 0x449166
  420bfe:	mov    QWORD PTR [rsp+0x160],r15
  420c06:	mov    QWORD PTR [rsp+0x158],r14
  420c0e:	lea    r13,[rip+0x2c7f0]        # 0x44d405
  420c15:	mov    QWORD PTR [rsp+0x100],rax
  420c1d:	lea    rax,[rip+0x2c862]        # 0x44d486
  420c24:	lea    r12,[rip+0x2c7e1]        # 0x44d40c
  420c2b:	lea    rbp,[rip+0x2c7eb]        # 0x44d41d
  420c32:	mov    QWORD PTR [rsp+0x88],r15
  420c3a:	mov    QWORD PTR [rsp+0x80],r14
  420c42:	mov    QWORD PTR [rsp+0xf0],rax
  420c4a:	lea    r14,[rip+0x2c7dd]        # 0x44d42e
  420c51:	lea    rax,[rip+0x28506]        # 0x44915e
  420c58:	lea    r15,[rip+0x2c7d8]        # 0x44d437
  420c5f:	mov    QWORD PTR [rsp+0x110],r11
  420c67:	mov    QWORD PTR [rsp+0x108],r10
  420c6f:	mov    QWORD PTR [rsp+0xf8],r8
  420c77:	mov    QWORD PTR [rsp+0xd0],r11
  420c7f:	mov    QWORD PTR [rsp+0xc8],r10
  420c87:	mov    QWORD PTR [rsp+0xc0],rdx
  420c8f:	mov    QWORD PTR [rsp+0xb8],rax
  420c97:	mov    QWORD PTR [rsp+0xb0],r9
  420c9f:	mov    QWORD PTR [rsp+0xa8],rdx
  420ca7:	mov    QWORD PTR [rsp+0xa0],rax
  420caf:	mov    QWORD PTR [rsp+0x98],r9
  420cb7:	mov    QWORD PTR [rsp+0x90],r8
  420cbf:	mov    QWORD PTR [rsp+0x150],r13
  420cc7:	mov    QWORD PTR [rsp+0x148],r12
  420ccf:	mov    QWORD PTR [rsp+0x140],rbp
  420cd7:	mov    QWORD PTR [rsp+0x128],rdi
  420cdf:	mov    QWORD PTR [rsp+0x120],rsi
  420ce7:	mov    QWORD PTR [rsp+0x118],rbx
  420cef:	mov    QWORD PTR [rsp+0xe8],rdi
  420cf7:	mov    QWORD PTR [rsp+0xe0],rsi
  420cff:	mov    QWORD PTR [rsp+0xd8],rbx
  420d07:	mov    QWORD PTR [rsp+0x78],r13
  420d0c:	mov    QWORD PTR [rsp+0x70],r12
  420d11:	mov    QWORD PTR [rsp+0x68],rbp
  420d16:	mov    QWORD PTR [rsp+0x60],r14
  420d1b:	mov    QWORD PTR [rsp+0x58],r15
  420d20:	mov    QWORD PTR [rsp+0x28],rdx
  420d25:	lea    rdx,[rip+0x2c2c4]        # 0x44cff0
  420d2c:	mov    QWORD PTR [rsp+0x50],rdi
  420d31:	mov    QWORD PTR [rsp+0x48],rsi
  420d36:	mov    QWORD PTR [rsp+0x40],rbx
  420d3b:	mov    QWORD PTR [rsp+0x38],r11
  420d40:	mov    QWORD PTR [rsp+0x30],r10
  420d45:	mov    QWORD PTR [rsp+0x20],rax
  420d4a:	call   0x427dd8
  420d4f:	nop
  420d50:	add    rsp,0x178
  420d57:	pop    rbx
  420d58:	pop    rsi
  420d59:	pop    rdi
  420d5a:	pop    rbp
  420d5b:	pop    r12
  420d5d:	pop    r13
  420d5f:	pop    r14
  420d61:	pop    r15
  420d63:	ret    
  420d64:	xchg   ax,ax
  420d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d70:	sub    rsp,0x58
  420d74:	lea    rax,[rip+0x2a289]        # 0x44b004
  420d7b:	lea    r9,[rip+0x2926c]        # 0x449fee
  420d82:	lea    r8,[rip+0x29271]        # 0x449ffa
  420d89:	lea    rdx,[rip+0x2c718]        # 0x44d4a8
  420d90:	mov    QWORD PTR [rsp+0x28],rax
  420d95:	lea    rax,[rip+0x29244]        # 0x449fe0
  420d9c:	mov    QWORD PTR [rsp+0x48],r9
  420da1:	mov    QWORD PTR [rsp+0x40],r8
  420da6:	mov    QWORD PTR [rsp+0x38],r9
  420dab:	mov    QWORD PTR [rsp+0x30],r8
  420db0:	mov    QWORD PTR [rsp+0x20],rax
  420db5:	call   0x427dd8
  420dba:	nop
  420dbb:	add    rsp,0x58
  420dbf:	ret    
  420dc0:	sub    rsp,0x48
  420dc4:	lea    rax,[rip+0x2c855]        # 0x44d620
  420dcb:	lea    r8,[rip+0x2829f]        # 0x449071
  420dd2:	lea    r9,[rip+0x2c7c8]        # 0x44d5a1
  420dd9:	lea    rdx,[rip+0x2c7c8]        # 0x44d5a8
  420de0:	mov    QWORD PTR [rsp+0x38],rax
  420de5:	lea    rax,[rip+0x2c847]        # 0x44d633
  420dec:	mov    QWORD PTR [rsp+0x30],r8
  420df1:	mov    QWORD PTR [rsp+0x28],rax
  420df6:	lea    rax,[rip+0x2c83f]        # 0x44d63c
  420dfd:	mov    QWORD PTR [rsp+0x20],rax
  420e02:	call   0x427dd8
  420e07:	nop
  420e08:	add    rsp,0x48
  420e0c:	ret    
  420e0d:	nop    DWORD PTR [rax]
  420e10:	sub    rsp,0x38
  420e14:	lea    rax,[rip+0x291c5]        # 0x449fe0
  420e1b:	lea    r9,[rip+0x2c825]        # 0x44d647
  420e22:	lea    r8,[rip+0x28248]        # 0x449071
  420e29:	lea    rdx,[rip+0x2c828]        # 0x44d658
  420e30:	mov    QWORD PTR [rsp+0x28],rax
  420e35:	lea    rax,[rip+0x2c856]        # 0x44d692
  420e3c:	mov    QWORD PTR [rsp+0x20],rax
  420e41:	call   0x427dd8
  420e46:	nop
  420e47:	add    rsp,0x38
  420e4b:	ret    
  420e4c:	nop    DWORD PTR [rax+0x0]
  420e50:	sub    rsp,0x58
  420e54:	lea    rax,[rip+0x28590]        # 0x4493eb
  420e5b:	lea    r9,[rip+0x29992]        # 0x44a7f4
  420e62:	lea    r8,[rip+0x28208]        # 0x449071
  420e69:	lea    rdx,[rip+0x2c830]        # 0x44d6a0
  420e70:	mov    QWORD PTR [rsp+0x48],rax
  420e75:	lea    rax,[rip+0x29b2b]        # 0x44a9a7
  420e7c:	mov    QWORD PTR [rsp+0x40],rax
  420e81:	lea    rax,[rip+0x2c7ab]        # 0x44d633
  420e88:	mov    QWORD PTR [rsp+0x38],rax
  420e8d:	lea    rax,[rip+0x2c7a8]        # 0x44d63c
  420e94:	mov    QWORD PTR [rsp+0x30],rax
  420e99:	lea    rax,[rip+0x2c8fb]        # 0x44d79b
  420ea0:	mov    QWORD PTR [rsp+0x28],rax
  420ea5:	lea    rax,[rip+0x2c8f8]        # 0x44d7a4
  420eac:	mov    QWORD PTR [rsp+0x20],rax
  420eb1:	call   0x427dd8
  420eb6:	nop
  420eb7:	add    rsp,0x58
  420ebb:	ret    
  420ebc:	nop    DWORD PTR [rax+0x0]
  420ec0:	sub    rsp,0x58
  420ec4:	lea    rdx,[rip+0x28cca]        # 0x449b95
  420ecb:	lea    rax,[rip+0x28b1f]        # 0x4499f1
  420ed2:	lea    r9,[rip+0x29665]        # 0x44a53e
  420ed9:	lea    r8,[rip+0x28191]        # 0x449071
  420ee0:	mov    QWORD PTR [rsp+0x40],rdx
  420ee5:	lea    rdx,[rip+0x2c950]        # 0x44d83c
  420eec:	mov    QWORD PTR [rsp+0x48],rax
  420ef1:	mov    QWORD PTR [rsp+0x28],rax
  420ef6:	lea    rax,[rip+0x2965d]        # 0x44a55a
  420efd:	mov    QWORD PTR [rsp+0x38],rdx
  420f02:	lea    rdx,[rip+0x2c948]        # 0x44d851
  420f09:	mov    QWORD PTR [rsp+0x20],rax
  420f0e:	mov    QWORD PTR [rsp+0x30],rdx
  420f13:	lea    rdx,[rip+0x2c896]        # 0x44d7b0
  420f1a:	call   0x427dd8
  420f1f:	nop
  420f20:	add    rsp,0x58
  420f24:	ret    
  420f25:	nop
  420f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f30:	sub    rsp,0x38
  420f34:	lea    rax,[rip+0x290a5]        # 0x449fe0
  420f3b:	lea    r9,[rip+0x2c91a]        # 0x44d85c
  420f42:	lea    r8,[rip+0x28128]        # 0x449071
  420f49:	lea    rdx,[rip+0x2c918]        # 0x44d868
  420f50:	mov    QWORD PTR [rsp+0x28],rax
  420f55:	lea    rax,[rip+0x2c97a]        # 0x44d8d6
  420f5c:	mov    QWORD PTR [rsp+0x20],rax
  420f61:	call   0x427dd8
  420f66:	nop
  420f67:	add    rsp,0x38
  420f6b:	ret    
  420f6c:	nop    DWORD PTR [rax+0x0]
  420f70:	sub    rsp,0x38
  420f74:	lea    rax,[rip+0x2c9f3]        # 0x44d96e
  420f7b:	lea    r9,[rip+0x28488]        # 0x44940a
  420f82:	lea    r8,[rip+0x2c95d]        # 0x44d8e6
  420f89:	lea    rdx,[rip+0x2c968]        # 0x44d8f8
  420f90:	mov    QWORD PTR [rsp+0x28],rax
  420f95:	lea    rax,[rip+0x2c9de]        # 0x44d97a
  420f9c:	mov    QWORD PTR [rsp+0x20],rax
  420fa1:	call   0x427dd8
  420fa6:	nop
  420fa7:	add    rsp,0x38
  420fab:	ret    
  420fac:	nop    DWORD PTR [rax+0x0]
  420fb0:	sub    rsp,0x48
  420fb4:	lea    rax,[rip+0x2841b]        # 0x4493d6
  420fbb:	lea    r9,[rip+0x29079]        # 0x44a03b
  420fc2:	lea    r8,[rip+0x280a8]        # 0x449071
  420fc9:	lea    rdx,[rip+0x2c9b8]        # 0x44d988
  420fd0:	mov    QWORD PTR [rsp+0x30],rax
  420fd5:	lea    rax,[rip+0x28297]        # 0x449273
  420fdc:	mov    QWORD PTR [rsp+0x28],rax
  420fe1:	lea    rax,[rip+0x2915a]        # 0x44a142
  420fe8:	mov    QWORD PTR [rsp+0x20],rax
  420fed:	call   0x427dd8
  420ff2:	nop
  420ff3:	add    rsp,0x48
  420ff7:	ret    
  420ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  421000:	sub    rsp,0x88
  421007:	lea    rax,[rip+0x2caf3]        # 0x44db01
  42100e:	lea    rdx,[rip+0x283c1]        # 0x4493d6
  421015:	lea    r8,[rip+0x2953e]        # 0x44a55a
  42101c:	lea    r10,[rip+0x2b604]        # 0x44c627
  421023:	lea    r11,[rip+0x2951e]        # 0x44a548
  42102a:	lea    r9,[rip+0x294e8]        # 0x44a519
  421031:	mov    QWORD PTR [rsp+0x70],rax
  421036:	lea    rax,[rip+0x28b58]        # 0x449b95
  42103d:	mov    QWORD PTR [rsp+0x58],rdx
  421042:	mov    QWORD PTR [rsp+0x38],r8
  421047:	mov    QWORD PTR [rsp+0x30],rdx
  42104c:	lea    r8,[rip+0x2a257]        # 0x44b2aa
  421053:	mov    QWORD PTR [rsp+0x68],rax
  421058:	lea    rax,[rip+0x2caaf]        # 0x44db0e
  42105f:	lea    rdx,[rip+0x2c9aa]        # 0x44da10
  421066:	mov    QWORD PTR [rsp+0x48],r10
  42106b:	mov    QWORD PTR [rsp+0x40],r11
  421070:	mov    QWORD PTR [rsp+0x60],rax
  421075:	lea    rax,[rip+0x281f7]        # 0x449273
  42107c:	mov    QWORD PTR [rsp+0x50],rax
  421081:	mov    QWORD PTR [rsp+0x28],rax
  421086:	lea    rax,[rip+0x294b1]        # 0x44a53e
  42108d:	mov    QWORD PTR [rsp+0x20],rax
  421092:	call   0x427dd8
  421097:	nop
  421098:	add    rsp,0x88
  42109f:	ret    
  4210a0:	sub    rsp,0xa8
  4210a7:	lea    rax,[rip+0x2cc84]        # 0x44dd32
  4210ae:	lea    r9,[rip+0x280b1]        # 0x449166
  4210b5:	lea    r8,[rip+0x27fb5]        # 0x449071
  4210bc:	lea    rdx,[rip+0x2ca6d]        # 0x44db30
  4210c3:	mov    QWORD PTR [rsp+0x98],rax
  4210cb:	lea    rax,[rip+0x2cc6a]        # 0x44dd3c
  4210d2:	mov    QWORD PTR [rsp+0x90],rax
  4210da:	lea    rax,[rip+0x2cc67]        # 0x44dd48
  4210e1:	mov    QWORD PTR [rsp+0x88],rax
  4210e9:	lea    rax,[rip+0x2cc61]        # 0x44dd51
  4210f0:	mov    QWORD PTR [rsp+0x80],rax
  4210f8:	lea    rax,[rip+0x282d7]        # 0x4493d6
  4210ff:	mov    QWORD PTR [rsp+0x78],rax
  421104:	mov    QWORD PTR [rsp+0x70],rax
  421109:	lea    rax,[rip+0x282ae]        # 0x4493be
  421110:	mov    QWORD PTR [rsp+0x68],rax
  421115:	lea    rax,[rip+0x296bd]        # 0x44a7d9
  42111c:	mov    QWORD PTR [rsp+0x60],rax
  421121:	lea    rax,[rip+0x296bd]        # 0x44a7e5
  421128:	mov    QWORD PTR [rsp+0x58],rax
  42112d:	lea    rax,[rip+0x2cc28]        # 0x44dd5c
  421134:	mov    QWORD PTR [rsp+0x50],rax
  421139:	lea    rax,[rip+0x2cc26]        # 0x44dd66
  421140:	mov    QWORD PTR [rsp+0x48],rax
  421145:	lea    rax,[rip+0x293cd]        # 0x44a519
  42114c:	mov    QWORD PTR [rsp+0x40],rax
  421151:	lea    rax,[rip+0x2cc1a]        # 0x44dd72
  421158:	mov    QWORD PTR [rsp+0x38],rax
  42115d:	lea    rax,[rip+0x2c99d]        # 0x44db01
  421164:	mov    QWORD PTR [rsp+0x30],rax
  421169:	lea    rax,[rip+0x27fe6]        # 0x449156
  421170:	mov    QWORD PTR [rsp+0x28],rax
  421175:	lea    rax,[rip+0x27fe2]        # 0x44915e
  42117c:	mov    QWORD PTR [rsp+0x20],rax
  421181:	call   0x427dd8
  421186:	nop
  421187:	add    rsp,0xa8
  42118e:	ret    
  42118f:	nop
  421190:	sub    rsp,0x78
  421194:	lea    rax,[rip+0x2cd88]        # 0x44df23
  42119b:	lea    r9,[rip+0x280d1]        # 0x449273
  4211a2:	lea    r8,[rip+0x27ec8]        # 0x449071
  4211a9:	lea    rdx,[rip+0x2cbd0]        # 0x44dd80
  4211b0:	mov    QWORD PTR [rsp+0x60],rax
  4211b5:	lea    rax,[rip+0x287de]        # 0x44999a
  4211bc:	mov    QWORD PTR [rsp+0x58],rax
  4211c1:	mov    QWORD PTR [rsp+0x50],rax
  4211c6:	mov    QWORD PTR [rsp+0x48],rax
  4211cb:	mov    QWORD PTR [rsp+0x40],rax
  4211d0:	mov    QWORD PTR [rsp+0x38],rax
  4211d5:	lea    rax,[rip+0x2a0bb]        # 0x44b297
  4211dc:	mov    QWORD PTR [rsp+0x30],rax
  4211e1:	lea    rax,[rip+0x2a0b9]        # 0x44b2a1
  4211e8:	mov    QWORD PTR [rsp+0x28],rax
  4211ed:	lea    rax,[rip+0x28201]        # 0x4493f5
  4211f4:	mov    QWORD PTR [rsp+0x20],rax
  4211f9:	call   0x427dd8
  4211fe:	nop
  4211ff:	add    rsp,0x78
  421203:	ret    
  421204:	xchg   ax,ax
  421206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421210:	sub    rsp,0x78
  421214:	lea    rax,[rip+0x2cdf9]        # 0x44e014
  42121b:	lea    r9,[rip+0x2a088]        # 0x44b2aa
  421222:	lea    r8,[rip+0x27e48]        # 0x449071
  421229:	lea    rdx,[rip+0x2ccf8]        # 0x44df28
  421230:	mov    QWORD PTR [rsp+0x60],rax
  421235:	lea    rax,[rip+0x2976b]        # 0x44a9a7
  42123c:	mov    QWORD PTR [rsp+0x58],rax
  421241:	lea    rax,[rip+0x2818e]        # 0x4493d6
  421248:	mov    QWORD PTR [rsp+0x50],rax
  42124d:	lea    rax,[rip+0x29741]        # 0x44a995
  421254:	mov    QWORD PTR [rsp+0x48],rax
  421259:	lea    rax,[rip+0x2cdbe]        # 0x44e01e
  421260:	mov    QWORD PTR [rsp+0x40],rax
  421265:	lea    rax,[rip+0x292ee]        # 0x44a55a
  42126c:	mov    QWORD PTR [rsp+0x38],rax
  421271:	lea    rax,[rip+0x28779]        # 0x4499f1
  421278:	mov    QWORD PTR [rsp+0x30],rax
  42127d:	lea    rax,[rip+0x29295]        # 0x44a519
  421284:	mov    QWORD PTR [rsp+0x28],rax
  421289:	lea    rax,[rip+0x2cd96]        # 0x44e026
  421290:	mov    QWORD PTR [rsp+0x20],rax
  421295:	call   0x427dd8
  42129a:	nop
  42129b:	add    rsp,0x78
  42129f:	ret    
  4212a0:	sub    rsp,0x48
  4212a4:	lea    rax,[rip+0x2ce21]        # 0x44e0cc
  4212ab:	lea    r9,[rip+0x27dbf]        # 0x449071
  4212b2:	lea    rdx,[rip+0x2cd77]        # 0x44e030
  4212b9:	mov    QWORD PTR [rsp+0x30],rax
  4212be:	lea    rax,[rip+0x2ce13]        # 0x44e0d8
  4212c5:	mov    r8,r9
  4212c8:	mov    QWORD PTR [rsp+0x28],rax
  4212cd:	lea    rax,[rip+0x2ce13]        # 0x44e0e7
  4212d4:	mov    QWORD PTR [rsp+0x20],rax
  4212d9:	call   0x427dd8
  4212de:	nop
  4212df:	add    rsp,0x48
  4212e3:	ret    
  4212e4:	xchg   ax,ax
  4212e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212f0:	sub    rsp,0x48
  4212f4:	lea    rax,[rip+0x2bcea]        # 0x44cfe5
  4212fb:	lea    r9,[rip+0x29217]        # 0x44a519
  421302:	lea    r8,[rip+0x29fa1]        # 0x44b2aa
  421309:	lea    rdx,[rip+0x2cde8]        # 0x44e0f8
  421310:	mov    QWORD PTR [rsp+0x38],rax
  421315:	lea    rax,[rip+0x2968b]        # 0x44a9a7
  42131c:	mov    QWORD PTR [rsp+0x30],rax
  421321:	lea    rax,[rip+0x280ae]        # 0x4493d6
  421328:	mov    QWORD PTR [rsp+0x28],rax
  42132d:	lea    rax,[rip+0x29661]        # 0x44a995
  421334:	mov    QWORD PTR [rsp+0x20],rax
  421339:	call   0x427dd8
  42133e:	nop
  42133f:	add    rsp,0x48
  421343:	ret    
  421344:	xchg   ax,ax
  421346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421350:	sub    rsp,0x58
  421354:	lea    rax,[rip+0x2ceed]        # 0x44e248
  42135b:	lea    r9,[rip+0x28c7e]        # 0x449fe0
  421362:	lea    r8,[rip+0x27d08]        # 0x449071
  421369:	lea    rdx,[rip+0x2ce18]        # 0x44e188
  421370:	mov    QWORD PTR [rsp+0x48],rax
  421375:	lea    rax,[rip+0x2ced6]        # 0x44e252
  42137c:	mov    QWORD PTR [rsp+0x40],rax
  421381:	lea    rax,[rip+0x2ced3]        # 0x44e25b
  421388:	mov    QWORD PTR [rsp+0x38],rax
  42138d:	lea    rax,[rip+0x2cece]        # 0x44e262
  421394:	mov    QWORD PTR [rsp+0x30],rax
  421399:	lea    rax,[rip+0x28c1d]        # 0x449fbd
  4213a0:	mov    QWORD PTR [rsp+0x28],rax
  4213a5:	lea    rax,[rip+0x28c1c]        # 0x449fc8
  4213ac:	mov    QWORD PTR [rsp+0x20],rax
  4213b1:	call   0x427dd8
  4213b6:	nop
  4213b7:	add    rsp,0x58
  4213bb:	ret    
  4213bc:	nop    DWORD PTR [rax+0x0]
  4213c0:	sub    rsp,0x98
  4213c7:	lea    rax,[rip+0x2cf87]        # 0x44e355
  4213ce:	lea    rdx,[rip+0x29c10]        # 0x44afe5
  4213d5:	lea    r9,[rip+0x29162]        # 0x44a53e
  4213dc:	lea    r8,[rip+0x27c8e]        # 0x449071
  4213e3:	mov    QWORD PTR [rsp+0x80],rax
  4213eb:	lea    rax,[rip+0x29c12]        # 0x44b004
  4213f2:	mov    QWORD PTR [rsp+0x58],rdx
  4213f7:	lea    rdx,[rip+0x29c14]        # 0x44b012
  4213fe:	mov    QWORD PTR [rsp+0x78],rax
  421403:	lea    rax,[rip+0x28bd6]        # 0x449fe0
  42140a:	mov    QWORD PTR [rsp+0x50],rdx
  42140f:	lea    rdx,[rip+0x2ce5a]        # 0x44e270
  421416:	mov    QWORD PTR [rsp+0x70],rax
  42141b:	lea    rax,[rip+0x29bbb]        # 0x44afdd
  421422:	mov    QWORD PTR [rsp+0x68],rax
  421427:	mov    QWORD PTR [rsp+0x60],rax
  42142c:	mov    QWORD PTR [rsp+0x48],rax
  421431:	mov    QWORD PTR [rsp+0x40],rax
  421436:	lea    rax,[rip+0x28b95]        # 0x449fd2
  42143d:	mov    QWORD PTR [rsp+0x38],rax
  421442:	lea    rax,[rip+0x29bab]        # 0x44aff4
  421449:	mov    QWORD PTR [rsp+0x30],rax
  42144e:	lea    rax,[rip+0x2cf0d]        # 0x44e362
  421455:	mov    QWORD PTR [rsp+0x28],rax
  42145a:	lea    rax,[rip+0x28b4f]        # 0x449fb0
  421461:	mov    QWORD PTR [rsp+0x20],rax
  421466:	call   0x427dd8
  42146b:	nop
  42146c:	add    rsp,0x98
  421473:	ret    
  421474:	xchg   ax,ax
  421476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421480:	lea    r9,[rip+0x28b29]        # 0x449fb0
  421487:	lea    r8,[rip+0x27be3]        # 0x449071
  42148e:	lea    rdx,[rip+0x2cedb]        # 0x44e370
  421495:	jmp    0x427dd8
  42149a:	nop    WORD PTR [rax+rax*1+0x0]
  4214a0:	sub    rsp,0x78
  4214a4:	lea    rax,[rip+0x2ca78]        # 0x44df23
  4214ab:	lea    r9,[rip+0x27dc1]        # 0x449273
  4214b2:	lea    r8,[rip+0x27bb8]        # 0x449071
  4214b9:	lea    rdx,[rip+0x2ced8]        # 0x44e398
  4214c0:	mov    QWORD PTR [rsp+0x68],rax
  4214c5:	lea    rax,[rip+0x284ce]        # 0x44999a
  4214cc:	mov    QWORD PTR [rsp+0x60],rax
  4214d1:	mov    QWORD PTR [rsp+0x58],rax
  4214d6:	mov    QWORD PTR [rsp+0x50],rax
  4214db:	mov    QWORD PTR [rsp+0x48],rax
  4214e0:	mov    QWORD PTR [rsp+0x40],rax
  4214e5:	lea    rax,[rip+0x29dab]        # 0x44b297
  4214ec:	mov    QWORD PTR [rsp+0x38],rax
  4214f1:	lea    rax,[rip+0x29da9]        # 0x44b2a1
  4214f8:	mov    QWORD PTR [rsp+0x30],rax
  4214fd:	lea    rax,[rip+0x27ee7]        # 0x4493eb
  421504:	mov    QWORD PTR [rsp+0x28],rax
  421509:	lea    rax,[rip+0x27ee5]        # 0x4493f5
  421510:	mov    QWORD PTR [rsp+0x20],rax
  421515:	call   0x427dd8
  42151a:	nop
  42151b:	add    rsp,0x78
  42151f:	ret    
  421520:	sub    rsp,0x58
  421524:	lea    rax,[rip+0x2d0f3]        # 0x44e61e
  42152b:	lea    r9,[rip+0x2c32a]        # 0x44d85c
  421532:	lea    r8,[rip+0x27b38]        # 0x449071
  421539:	lea    rdx,[rip+0x2d038]        # 0x44e578
  421540:	mov    QWORD PTR [rsp+0x48],rax
  421545:	lea    rax,[rip+0x2ba88]        # 0x44cfd4
  42154c:	mov    QWORD PTR [rsp+0x40],rax
  421551:	mov    QWORD PTR [rsp+0x38],rax
  421556:	mov    QWORD PTR [rsp+0x30],rax
  42155b:	lea    rax,[rip+0x2d0d7]        # 0x44e639
  421562:	mov    QWORD PTR [rsp+0x28],rax
  421567:	lea    rax,[rip+0x29d3c]        # 0x44b2aa
  42156e:	mov    QWORD PTR [rsp+0x20],rax
  421573:	call   0x427dd8
  421578:	nop
  421579:	add    rsp,0x58
  42157d:	ret    
  42157e:	xchg   ax,ax
  421580:	sub    rsp,0x58
  421584:	lea    r9,[rip+0x29269]        # 0x44a7f4
  42158b:	lea    rax,[rip+0x2d17a]        # 0x44e70c
  421592:	lea    r8,[rip+0x27e71]        # 0x44940a
  421599:	lea    rdx,[rip+0x2d0a8]        # 0x44e648
  4215a0:	mov    QWORD PTR [rsp+0x48],r9
  4215a5:	mov    QWORD PTR [rsp+0x40],r9
  4215aa:	mov    QWORD PTR [rsp+0x38],r8
  4215af:	mov    QWORD PTR [rsp+0x30],rax
  4215b4:	mov    QWORD PTR [rsp+0x28],r9
  4215b9:	mov    QWORD PTR [rsp+0x20],rax
  4215be:	call   0x427dd8
  4215c3:	nop
  4215c4:	add    rsp,0x58
  4215c8:	ret    
  4215c9:	nop    DWORD PTR [rax+0x0]
  4215d0:	sub    rsp,0x58
  4215d4:	lea    rax,[rip+0x28f3e]        # 0x44a519
  4215db:	lea    r9,[rip+0x29d37]        # 0x44b319
  4215e2:	lea    r8,[rip+0x27a88]        # 0x449071
  4215e9:	lea    rdx,[rip+0x2d130]        # 0x44e720
  4215f0:	mov    QWORD PTR [rsp+0x48],rax
  4215f5:	lea    rax,[rip+0x29cae]        # 0x44b2aa
  4215fc:	mov    QWORD PTR [rsp+0x40],rax
  421601:	lea    rax,[rip+0x29e9d]        # 0x44b4a5
  421608:	mov    QWORD PTR [rsp+0x38],rax
  42160d:	lea    rax,[rip+0x29e9f]        # 0x44b4b3
  421614:	mov    QWORD PTR [rsp+0x30],rax
  421619:	lea    rax,[rip+0x29e99]        # 0x44b4b9
  421620:	mov    QWORD PTR [rsp+0x28],rax
  421625:	lea    rax,[rip+0x29e96]        # 0x44b4c2
  42162c:	mov    QWORD PTR [rsp+0x20],rax
  421631:	call   0x427dd8
  421636:	nop
  421637:	add    rsp,0x58
  42163b:	ret    
  42163c:	nop    DWORD PTR [rax+0x0]
  421640:	sub    rsp,0x48
  421644:	lea    rax,[rip+0x27d8b]        # 0x4493d6
  42164b:	lea    r9,[rip+0x2d1a8]        # 0x44e7fa
  421652:	lea    r8,[rip+0x2afce]        # 0x44c627
  421659:	lea    rdx,[rip+0x2d1a8]        # 0x44e808
  421660:	mov    QWORD PTR [rsp+0x38],rax
  421665:	lea    rax,[rip+0x27c07]        # 0x449273
  42166c:	mov    QWORD PTR [rsp+0x30],rax
  421671:	lea    rax,[rip+0x2d201]        # 0x44e879
  421678:	mov    QWORD PTR [rsp+0x28],rax
  42167d:	lea    rax,[rip+0x2d1fe]        # 0x44e882
  421684:	mov    QWORD PTR [rsp+0x20],rax
  421689:	call   0x427dd8
  42168e:	nop
  42168f:	add    rsp,0x48
  421693:	ret    
  421694:	xchg   ax,ax
  421696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216a0:	push   r14
  4216a2:	push   rbp
  4216a3:	push   rdi
  4216a4:	push   rsi
  4216a5:	push   rbx
  4216a6:	sub    rsp,0x1d0
  4216ad:	lea    rax,[rip+0x2c96a]        # 0x44e01e
  4216b4:	lea    rsi,[rip+0x2d8d3]        # 0x44ef8e
  4216bb:	lea    r9,[rip+0x28e57]        # 0x44a519
  4216c2:	lea    r11,[rip+0x27d0d]        # 0x4493d6
  4216c9:	lea    r10,[rip+0x292c5]        # 0x44a995
  4216d0:	lea    rdx,[rip+0x28a7e]        # 0x44a155
  4216d7:	mov    QWORD PTR [rsp+0x1c8],rax
  4216df:	lea    rax,[rip+0x2d7fa]        # 0x44eee0
  4216e6:	mov    QWORD PTR [rsp+0x148],rsi
  4216ee:	lea    rsi,[rip+0x2d8a2]        # 0x44ef97
  4216f5:	lea    r8,[rip+0x282f5]        # 0x4499f1
  4216fc:	lea    rbx,[rip+0x292a4]        # 0x44a9a7
  421703:	mov    QWORD PTR [rsp+0x1b0],rax
  42170b:	lea    rax,[rip+0x2d7fe]        # 0x44ef10
  421712:	lea    rbp,[rip+0x2d851]        # 0x44ef6a
  421719:	mov    QWORD PTR [rsp+0x140],rsi
  421721:	lea    rsi,[rip+0x28888]        # 0x449fb0
  421728:	lea    rdi,[rip+0x2d845]        # 0x44ef74
  42172f:	mov    QWORD PTR [rsp+0x190],rax
  421737:	lea    rax,[rip+0x2d818]        # 0x44ef56
  42173e:	lea    r14,[rip+0x2d862]        # 0x44efa7
  421745:	mov    QWORD PTR [rsp+0x138],rsi
  42174d:	lea    rsi,[rip+0x28441]        # 0x449b95
  421754:	mov    QWORD PTR [rsp+0x1c0],r8
  42175c:	mov    QWORD PTR [rsp+0x188],rax
  421764:	lea    rax,[rip+0x2c8a9]        # 0x44e014
  42176b:	mov    QWORD PTR [rsp+0x1b8],r9
  421773:	mov    QWORD PTR [rsp+0x1a8],rbx
  42177b:	mov    QWORD PTR [rsp+0x1a0],r11
  421783:	mov    QWORD PTR [rsp+0x158],rax
  42178b:	lea    rax,[rip+0x2d7eb]        # 0x44ef7d
  421792:	mov    QWORD PTR [rsp+0x198],r10
  42179a:	mov    QWORD PTR [rsp+0x180],rdx
  4217a2:	mov    QWORD PTR [rsp+0x178],rdx
  4217aa:	mov    QWORD PTR [rsp+0x150],rax
  4217b2:	mov    QWORD PTR [rsp+0x130],rax
  4217ba:	mov    QWORD PTR [rsp+0x120],rax
  4217c2:	mov    QWORD PTR [rsp+0xd8],rax
  4217ca:	mov    QWORD PTR [rsp+0xd0],rax
  4217d2:	lea    rax,[rip+0x2c328]        # 0x44db01
  4217d9:	mov    QWORD PTR [rsp+0x168],rdi
  4217e1:	mov    QWORD PTR [rsp+0x160],r9
  4217e9:	mov    QWORD PTR [rsp+0x128],r9
  4217f1:	mov    QWORD PTR [rsp+0xc8],rax
  4217f9:	lea    rax,[rip+0x2c30e]        # 0x44db0e
  421800:	mov    QWORD PTR [rsp+0x118],r9
  421808:	mov    QWORD PTR [rsp+0x110],r8
  421810:	mov    QWORD PTR [rsp+0xf8],rdx
  421818:	mov    QWORD PTR [rsp+0xf0],rdx
  421820:	mov    QWORD PTR [rsp+0xe0],rdi
  421828:	lea    rdi,[rip+0x2a4e6]        # 0x44bd15
  42182f:	mov    QWORD PTR [rsp+0x170],rbp
  421837:	mov    QWORD PTR [rsp+0x108],rsi
  42183f:	lea    rdx,[rip+0x2a515]        # 0x44bd5b
  421846:	mov    QWORD PTR [rsp+0x100],r14
  42184e:	mov    QWORD PTR [rsp+0xe8],rbp
  421856:	mov    QWORD PTR [rsp+0xc0],r8
  42185e:	mov    QWORD PTR [rsp+0xb0],rax
  421866:	lea    rax,[rip+0x28cdb]        # 0x44a548
  42186d:	mov    QWORD PTR [rsp+0xa8],rbx
  421875:	mov    QWORD PTR [rsp+0x68],rbx
  42187a:	lea    rbx,[rip+0x2a49e]        # 0x44bd1f
  421881:	mov    QWORD PTR [rsp+0x88],rax
  421889:	mov    QWORD PTR [rsp+0x30],rax
  42188e:	lea    rax,[rip+0x28cc5]        # 0x44a55a
  421895:	mov    QWORD PTR [rsp+0x78],rdi
  42189a:	lea    r8,[rip+0x29a09]        # 0x44b2aa
  4218a1:	mov    QWORD PTR [rsp+0x50],rbx
  4218a6:	mov    QWORD PTR [rsp+0x28],rax
  4218ab:	lea    rdi,[rip+0x2d70e]        # 0x44efc0
  4218b2:	lea    rax,[rip+0x28c85]        # 0x44a53e
  4218b9:	lea    rbx,[rip+0x2d70c]        # 0x44efcc
  4218c0:	mov    QWORD PTR [rsp+0x90],rdx
  4218c8:	mov    QWORD PTR [rsp+0x38],rdx
  4218cd:	lea    rdx,[rip+0x2cfc4]        # 0x44e898
  4218d4:	mov    QWORD PTR [rsp+0x80],r9
  4218dc:	mov    QWORD PTR [rsp+0x70],r8
  4218e1:	mov    QWORD PTR [rsp+0x60],r11
  4218e6:	mov    QWORD PTR [rsp+0x58],r10
  4218eb:	mov    QWORD PTR [rsp+0x48],rdi
  4218f0:	mov    QWORD PTR [rsp+0x40],rbx
  4218f5:	mov    QWORD PTR [rsp+0x20],rax
  4218fa:	mov    QWORD PTR [rsp+0xb8],rsi
  421902:	mov    QWORD PTR [rsp+0xa0],r11
  42190a:	mov    QWORD PTR [rsp+0x98],r10
  421912:	call   0x427dd8
  421917:	nop
  421918:	add    rsp,0x1d0
  42191f:	pop    rbx
  421920:	pop    rsi
  421921:	pop    rdi
  421922:	pop    rbp
  421923:	pop    r14
  421925:	ret    
  421926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421930:	sub    rsp,0x48
  421934:	lea    rax,[rip+0x2b6aa]        # 0x44cfe5
  42193b:	lea    r9,[rip+0x28bd7]        # 0x44a519
  421942:	lea    r8,[rip+0x29961]        # 0x44b2aa
  421949:	lea    rdx,[rip+0x2d690]        # 0x44efe0
  421950:	mov    QWORD PTR [rsp+0x38],rax
  421955:	lea    rax,[rip+0x2904b]        # 0x44a9a7
  42195c:	mov    QWORD PTR [rsp+0x30],rax
  421961:	lea    rax,[rip+0x27a6e]        # 0x4493d6
  421968:	mov    QWORD PTR [rsp+0x28],rax
  42196d:	lea    rax,[rip+0x29021]        # 0x44a995
  421974:	mov    QWORD PTR [rsp+0x20],rax
  421979:	call   0x427dd8
  42197e:	nop
  42197f:	add    rsp,0x48
  421983:	ret    
  421984:	xchg   ax,ax
  421986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421990:	sub    rsp,0x48
  421994:	lea    rax,[rip+0x27a3b]        # 0x4493d6
  42199b:	lea    r9,[rip+0x28e52]        # 0x44a7f4
  4219a2:	lea    r8,[rip+0x28ffe]        # 0x44a9a7
  4219a9:	lea    rdx,[rip+0x2d740]        # 0x44f0f0
  4219b0:	mov    QWORD PTR [rsp+0x30],rax
  4219b5:	lea    rax,[rip+0x2a44c]        # 0x44be08
  4219bc:	mov    QWORD PTR [rsp+0x28],rax
  4219c1:	lea    rax,[rip+0x2d782]        # 0x44f14a
  4219c8:	mov    QWORD PTR [rsp+0x20],rax
  4219cd:	call   0x427dd8
  4219d2:	nop
  4219d3:	add    rsp,0x48
  4219d7:	ret    
  4219d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4219e0:	sub    rsp,0x38
  4219e4:	lea    rax,[rip+0x2d7bd]        # 0x44f1a8
  4219eb:	lea    r9,[rip+0x2d762]        # 0x44f154
  4219f2:	lea    r8,[rip+0x27678]        # 0x449071
  4219f9:	lea    rdx,[rip+0x2d760]        # 0x44f160
  421a00:	mov    QWORD PTR [rsp+0x20],rax
  421a05:	call   0x427dd8
  421a0a:	nop
  421a0b:	add    rsp,0x38
  421a0f:	ret    
  421a10:	sub    rsp,0x38
  421a14:	lea    rax,[rip+0x279bb]        # 0x4493d6
  421a1b:	lea    r9,[rip+0x2bd82]        # 0x44d7a4
  421a22:	lea    r8,[rip+0x27648]        # 0x449071
  421a29:	lea    rdx,[rip+0x2d788]        # 0x44f1b8
  421a30:	mov    QWORD PTR [rsp+0x28],rax
  421a35:	lea    rax,[rip+0x27837]        # 0x449273
  421a3c:	mov    QWORD PTR [rsp+0x20],rax
  421a41:	call   0x427dd8
  421a46:	nop
  421a47:	add    rsp,0x38
  421a4b:	ret    
  421a4c:	nop    DWORD PTR [rax+0x0]
  421a50:	sub    rsp,0x48
  421a54:	lea    rax,[rip+0x2d83b]        # 0x44f296
  421a5b:	lea    r9,[rip+0x2d7a6]        # 0x44f208
  421a62:	lea    r8,[rip+0x27608]        # 0x449071
  421a69:	lea    rdx,[rip+0x2d7a8]        # 0x44f218
  421a70:	mov    QWORD PTR [rsp+0x38],rax
  421a75:	lea    rax,[rip+0x2d82c]        # 0x44f2a8
  421a7c:	mov    QWORD PTR [rsp+0x30],rax
  421a81:	lea    rax,[rip+0x2d832]        # 0x44f2ba
  421a88:	mov    QWORD PTR [rsp+0x28],rax
  421a8d:	lea    rax,[rip+0x2d833]        # 0x44f2c7
  421a94:	mov    QWORD PTR [rsp+0x20],rax
  421a99:	call   0x427dd8
  421a9e:	nop
  421a9f:	add    rsp,0x48
  421aa3:	ret    
  421aa4:	xchg   ax,ax
  421aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ab0:	sub    rsp,0x38
  421ab4:	lea    rax,[rip+0x2d874]        # 0x44f32f
  421abb:	lea    r9,[rip+0x2d817]        # 0x44f2d9
  421ac2:	lea    r8,[rip+0x275a8]        # 0x449071
  421ac9:	lea    rdx,[rip+0x2d818]        # 0x44f2e8
  421ad0:	mov    QWORD PTR [rsp+0x20],rax
  421ad5:	call   0x427dd8
  421ada:	nop
  421adb:	add    rsp,0x38
  421adf:	ret    
  421ae0:	sub    rsp,0x68
  421ae4:	lea    rax,[rip+0x28a2e]        # 0x44a519
  421aeb:	lea    r9,[rip+0x2bd6a]        # 0x44d85c
  421af2:	lea    r8,[rip+0x27578]        # 0x449071
  421af9:	lea    rdx,[rip+0x2d840]        # 0x44f340
  421b00:	mov    QWORD PTR [rsp+0x50],rax
  421b05:	lea    rax,[rip+0x2cb12]        # 0x44e61e
  421b0c:	mov    QWORD PTR [rsp+0x48],rax
  421b11:	lea    rax,[rip+0x2d98d]        # 0x44f4a5
  421b18:	mov    QWORD PTR [rsp+0x40],rax
  421b1d:	lea    rax,[rip+0x284bc]        # 0x449fe0
  421b24:	mov    QWORD PTR [rsp+0x38],rax
  421b29:	lea    rax,[rip+0x2cb09]        # 0x44e639
  421b30:	mov    QWORD PTR [rsp+0x30],rax
  421b35:	lea    rax,[rip+0x2d973]        # 0x44f4af
  421b3c:	mov    QWORD PTR [rsp+0x28],rax
  421b41:	lea    rax,[rip+0x29762]        # 0x44b2aa
  421b48:	mov    QWORD PTR [rsp+0x20],rax
  421b4d:	call   0x427dd8
  421b52:	nop
  421b53:	add    rsp,0x68
  421b57:	ret    
  421b58:	nop    DWORD PTR [rax+rax*1+0x0]
  421b60:	sub    rsp,0x118
  421b67:	lea    rax,[rip+0x2dc37]        # 0x44f7a5
  421b6e:	lea    rdx,[rip+0x2dd46]        # 0x44f8bb
  421b75:	lea    r8,[rip+0x274f5]        # 0x449071
  421b7c:	lea    r9,[rip+0x2a866]        # 0x44c3e9
  421b83:	mov    QWORD PTR [rsp+0xf8],rax
  421b8b:	lea    rax,[rip+0x2dc1e]        # 0x44f7b0
  421b92:	mov    QWORD PTR [rsp+0x50],rdx
  421b97:	lea    rdx,[rip+0x2dd34]        # 0x44f8d2
  421b9e:	mov    QWORD PTR [rsp+0x30],r8
  421ba3:	mov    QWORD PTR [rsp+0x100],r8
  421bab:	mov    QWORD PTR [rsp+0xf0],rax
  421bb3:	lea    rax,[rip+0x2dc00]        # 0x44f7ba
  421bba:	mov    QWORD PTR [rsp+0x70],r8
  421bbf:	mov    QWORD PTR [rsp+0x48],rdx
  421bc4:	lea    rdx,[rip+0x2dd0f]        # 0x44f8da
  421bcb:	mov    QWORD PTR [rsp+0x40],r8
  421bd0:	mov    QWORD PTR [rsp+0xe8],rax
  421bd8:	lea    rax,[rip+0x2dbe3]        # 0x44f7c2
  421bdf:	mov    QWORD PTR [rsp+0x38],rdx
  421be4:	lea    rdx,[rip+0x2d8dd]        # 0x44f4c8
  421beb:	mov    QWORD PTR [rsp+0xe0],rax
  421bf3:	lea    rax,[rip+0x2dbd0]        # 0x44f7ca
  421bfa:	mov    QWORD PTR [rsp+0xd8],rax
  421c02:	lea    rax,[rip+0x2dbcb]        # 0x44f7d4
  421c09:	mov    QWORD PTR [rsp+0xd0],rax
  421c11:	lea    rax,[rip+0x2dbc5]        # 0x44f7dd
  421c18:	mov    QWORD PTR [rsp+0xc8],rax
  421c20:	lea    rax,[rip+0x2dbc0]        # 0x44f7e7
  421c27:	mov    QWORD PTR [rsp+0xc0],rax
  421c2f:	lea    rax,[rip+0x2dbb9]        # 0x44f7ef
  421c36:	mov    QWORD PTR [rsp+0xb8],rax
  421c3e:	lea    rax,[rip+0x2dbb4]        # 0x44f7f9
  421c45:	mov    QWORD PTR [rsp+0xb0],rax
  421c4d:	lea    rax,[rip+0x2dbb4]        # 0x44f808
  421c54:	mov    QWORD PTR [rsp+0xa8],rax
  421c5c:	lea    rax,[rip+0x2dbb6]        # 0x44f819
  421c63:	mov    QWORD PTR [rsp+0xa0],rax
  421c6b:	lea    rax,[rip+0x2dbc5]        # 0x44f837
  421c72:	mov    QWORD PTR [rsp+0x98],rax
  421c7a:	lea    rax,[rip+0x2dbd3]        # 0x44f854
  421c81:	mov    QWORD PTR [rsp+0x90],rax
  421c89:	lea    rax,[rip+0x2dbd2]        # 0x44f862
  421c90:	mov    QWORD PTR [rsp+0x88],rax
  421c98:	lea    rax,[rip+0x2dbd4]        # 0x44f873
  421c9f:	mov    QWORD PTR [rsp+0x80],rax
  421ca7:	lea    rax,[rip+0x2dbd5]        # 0x44f883
  421cae:	mov    QWORD PTR [rsp+0x78],rax
  421cb3:	lea    rax,[rip+0x2dbd8]        # 0x44f892
  421cba:	mov    QWORD PTR [rsp+0x68],rax
  421cbf:	lea    rax,[rip+0x2dbe2]        # 0x44f8a8
  421cc6:	mov    QWORD PTR [rsp+0x60],rax
  421ccb:	lea    rax,[rip+0x28888]        # 0x44a55a
  421cd2:	mov    QWORD PTR [rsp+0x58],rax
  421cd7:	mov    QWORD PTR [rsp+0x28],rax
  421cdc:	lea    rax,[rip+0x2885b]        # 0x44a53e
  421ce3:	mov    QWORD PTR [rsp+0x20],rax
  421ce8:	call   0x427dd8
  421ced:	nop
  421cee:	add    rsp,0x118
  421cf5:	ret    
  421cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d00:	sub    rsp,0x78
  421d04:	lea    rax,[rip+0x2c218]        # 0x44df23
  421d0b:	lea    r9,[rip+0x27561]        # 0x449273
  421d12:	lea    r8,[rip+0x27358]        # 0x449071
  421d19:	lea    rdx,[rip+0x2dbc0]        # 0x44f8e0
  421d20:	mov    QWORD PTR [rsp+0x68],rax
  421d25:	lea    rax,[rip+0x27c6e]        # 0x44999a
  421d2c:	mov    QWORD PTR [rsp+0x60],rax
  421d31:	mov    QWORD PTR [rsp+0x58],rax
  421d36:	mov    QWORD PTR [rsp+0x50],rax
  421d3b:	mov    QWORD PTR [rsp+0x48],rax
  421d40:	mov    QWORD PTR [rsp+0x40],rax
  421d45:	lea    rax,[rip+0x2954b]        # 0x44b297
  421d4c:	mov    QWORD PTR [rsp+0x38],rax
  421d51:	lea    rax,[rip+0x29549]        # 0x44b2a1
  421d58:	mov    QWORD PTR [rsp+0x30],rax
  421d5d:	lea    rax,[rip+0x27687]        # 0x4493eb
  421d64:	mov    QWORD PTR [rsp+0x28],rax
  421d69:	lea    rax,[rip+0x27685]        # 0x4493f5
  421d70:	mov    QWORD PTR [rsp+0x20],rax
  421d75:	call   0x427dd8
  421d7a:	nop
  421d7b:	add    rsp,0x78
  421d7f:	ret    
  421d80:	sub    rsp,0x38
  421d84:	lea    rax,[rip+0x2764b]        # 0x4493d6
  421d8b:	lea    r9,[rip+0x2a895]        # 0x44c627
  421d92:	lea    r8,[rip+0x28a5b]        # 0x44a7f4
  421d99:	lea    rdx,[rip+0x2dd20]        # 0x44fac0
  421da0:	mov    QWORD PTR [rsp+0x28],rax
  421da5:	lea    rax,[rip+0x274c7]        # 0x449273
  421dac:	mov    QWORD PTR [rsp+0x20],rax
  421db1:	call   0x427dd8
  421db6:	nop
  421db7:	add    rsp,0x38
  421dbb:	ret    
  421dbc:	nop    DWORD PTR [rax+0x0]
  421dc0:	sub    rsp,0x48
  421dc4:	lea    rax,[rip+0x2b21a]        # 0x44cfe5
  421dcb:	lea    r9,[rip+0x28747]        # 0x44a519
  421dd2:	lea    r8,[rip+0x27298]        # 0x449071
  421dd9:	lea    rdx,[rip+0x2dd58]        # 0x44fb38
  421de0:	mov    QWORD PTR [rsp+0x30],rax
  421de5:	lea    rax,[rip+0x2aa45]        # 0x44c831
  421dec:	mov    QWORD PTR [rsp+0x28],rax
  421df1:	lea    rax,[rip+0x2aa28]        # 0x44c820
  421df8:	mov    QWORD PTR [rsp+0x20],rax
  421dfd:	call   0x427dd8
  421e02:	nop
  421e03:	add    rsp,0x48
  421e07:	ret    
  421e08:	nop    DWORD PTR [rax+rax*1+0x0]
  421e10:	lea    r8,[rip+0x2725a]        # 0x449071
  421e17:	lea    rdx,[rip+0x2ddd2]        # 0x44fbf0
  421e1e:	jmp    0x427dd8
  421e23:	nop    DWORD PTR [rax]
  421e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e30:	lea    r9,[rip+0x2b1ae]        # 0x44cfe5
  421e37:	lea    r8,[rip+0x27233]        # 0x449071
  421e3e:	lea    rdx,[rip+0x2ddd3]        # 0x44fc18
  421e45:	jmp    0x427dd8
  421e4a:	nop    WORD PTR [rax+rax*1+0x0]
  421e50:	sub    rsp,0x58
  421e54:	lea    rax,[rip+0x2deea]        # 0x44fd45
  421e5b:	lea    r9,[rip+0x29448]        # 0x44b2aa
  421e62:	lea    r8,[rip+0x2de15]        # 0x44fc7e
  421e69:	lea    rdx,[rip+0x2de20]        # 0x44fc90
  421e70:	mov    QWORD PTR [rsp+0x48],rax
  421e75:	lea    rax,[rip+0x2ded5]        # 0x44fd51
  421e7c:	mov    QWORD PTR [rsp+0x40],rax
  421e81:	lea    rax,[rip+0x2dedb]        # 0x44fd63
  421e88:	mov    QWORD PTR [rsp+0x38],rax
  421e8d:	lea    rax,[rip+0x2c7a5]        # 0x44e639
  421e94:	mov    QWORD PTR [rsp+0x30],rax
  421e99:	lea    rax,[rip+0x2decf]        # 0x44fd6f
  421ea0:	mov    QWORD PTR [rsp+0x28],rax
  421ea5:	lea    rax,[rip+0x2dece]        # 0x44fd7a
  421eac:	mov    QWORD PTR [rsp+0x20],rax
  421eb1:	call   0x427dd8
  421eb6:	nop
  421eb7:	add    rsp,0x58
  421ebb:	ret    
  421ebc:	nop    DWORD PTR [rax+0x0]
  421ec0:	lea    rdx,[rip+0x2deb9]        # 0x44fd80
  421ec7:	jmp    0x427dd8
  421ecc:	nop    DWORD PTR [rax+0x0]
  421ed0:	lea    r9,[rip+0x2dee0]        # 0x44fdb7
  421ed7:	lea    r8,[rip+0x2be7e]        # 0x44dd5c
  421ede:	lea    rdx,[rip+0x2ded7]        # 0x44fdbc
  421ee5:	jmp    0x427dd8
  421eea:	nop    WORD PTR [rax+rax*1+0x0]
  421ef0:	sub    rsp,0x78
  421ef4:	lea    rax,[rip+0x2726b]        # 0x449166
  421efb:	lea    r8,[rip+0x27254]        # 0x449156
  421f02:	lea    rdx,[rip+0x27255]        # 0x44915e
  421f09:	lea    r9,[rip+0x2714d]        # 0x44905d
  421f10:	mov    QWORD PTR [rsp+0x58],rax
  421f15:	mov    QWORD PTR [rsp+0x40],rax
  421f1a:	mov    QWORD PTR [rsp+0x28],rax
  421f1f:	lea    rax,[rip+0x27248]        # 0x44916e
  421f26:	mov    QWORD PTR [rsp+0x68],r8
  421f2b:	mov    QWORD PTR [rsp+0x60],rdx
  421f30:	mov    QWORD PTR [rsp+0x50],r8
  421f35:	mov    QWORD PTR [rsp+0x48],rdx
  421f3a:	mov    QWORD PTR [rsp+0x38],r8
  421f3f:	lea    r8,[rip+0x2712b]        # 0x449071
  421f46:	mov    QWORD PTR [rsp+0x30],rdx
  421f4b:	lea    rdx,[rip+0x2de86]        # 0x44fdd8
  421f52:	mov    QWORD PTR [rsp+0x20],rax
  421f57:	call   0x427dd8
  421f5c:	nop
  421f5d:	add    rsp,0x78
  421f61:	ret    
  421f62:	nop    DWORD PTR [rax+0x0]
  421f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f70:	lea    r9,[rip+0x28077]        # 0x449fee
  421f77:	lea    r8,[rip+0x2807c]        # 0x449ffa
  421f7e:	lea    rdx,[rip+0x2defb]        # 0x44fe80
  421f85:	jmp    0x427dd8
  421f8a:	nop    WORD PTR [rax+rax*1+0x0]
  421f90:	lea    r8,[rip+0x270da]        # 0x449071
  421f97:	lea    rdx,[rip+0x2df22]        # 0x44fec0
  421f9e:	jmp    0x427dd8
  421fa3:	nop    DWORD PTR [rax]
  421fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fb0:	lea    r8,[rip+0x270ba]        # 0x449071
  421fb7:	lea    rdx,[rip+0x2df3a]        # 0x44fef8
  421fbe:	jmp    0x427dd8
  421fc3:	nop    DWORD PTR [rax]
  421fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fd0:	lea    r8,[rip+0x2709a]        # 0x449071
  421fd7:	lea    rdx,[rip+0x2df52]        # 0x44ff30
  421fde:	jmp    0x427dd8
  421fe3:	nop    DWORD PTR [rax]
  421fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ff0:	lea    r8,[rip+0x2707a]        # 0x449071
  421ff7:	lea    rdx,[rip+0x2df52]        # 0x44ff50
  421ffe:	jmp    0x427dd8
  422003:	nop    DWORD PTR [rax]
  422006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422010:	lea    r8,[rip+0x2705a]        # 0x449071
  422017:	lea    rdx,[rip+0x2df72]        # 0x44ff90
  42201e:	jmp    0x427dd8
  422023:	nop    DWORD PTR [rax]
  422026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422030:	lea    r8,[rip+0x2703a]        # 0x449071
  422037:	lea    rdx,[rip+0x2df92]        # 0x44ffd0
  42203e:	jmp    0x427dd8
  422043:	nop    DWORD PTR [rax]
  422046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422050:	lea    r8,[rip+0x2701a]        # 0x449071
  422057:	lea    rdx,[rip+0x2dfb2]        # 0x450010
  42205e:	jmp    0x427dd8
  422063:	nop    DWORD PTR [rax]
  422066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422070:	lea    r8,[rip+0x26ffa]        # 0x449071
  422077:	lea    rdx,[rip+0x2dfda]        # 0x450058
  42207e:	jmp    0x427dd8
  422083:	nop    DWORD PTR [rax]
  422086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422090:	sub    rsp,0x38
  422094:	lea    rax,[rip+0x270bb]        # 0x449156
  42209b:	lea    r9,[rip+0x270c4]        # 0x449166
  4220a2:	lea    r8,[rip+0x26fc8]        # 0x449071
  4220a9:	lea    rdx,[rip+0x2dff0]        # 0x4500a0
  4220b0:	mov    QWORD PTR [rsp+0x28],rax
  4220b5:	lea    rax,[rip+0x270a2]        # 0x44915e
  4220bc:	mov    QWORD PTR [rsp+0x20],rax
  4220c1:	call   0x427dd8
  4220c6:	nop
  4220c7:	add    rsp,0x38
  4220cb:	ret    
  4220cc:	nop    DWORD PTR [rax+0x0]
  4220d0:	lea    r8,[rip+0x26f9a]        # 0x449071
  4220d7:	lea    rdx,[rip+0x2e022]        # 0x450100
  4220de:	jmp    0x427dd8
  4220e3:	nop    DWORD PTR [rax]
  4220e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4220f0:	lea    r8,[rip+0x26f7a]        # 0x449071
  4220f7:	lea    rdx,[rip+0x2e02a]        # 0x450128
  4220fe:	jmp    0x427dd8
  422103:	nop    DWORD PTR [rax]
  422106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422110:	lea    r8,[rip+0x26f5a]        # 0x449071
  422117:	lea    rdx,[rip+0x2e05a]        # 0x450178
  42211e:	jmp    0x427dd8
  422123:	nop    DWORD PTR [rax]
  422126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422130:	lea    r8,[rip+0x26f3a]        # 0x449071
  422137:	lea    rdx,[rip+0x2e082]        # 0x4501c0
  42213e:	jmp    0x427dd8
  422143:	nop    DWORD PTR [rax]
  422146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422150:	sub    rsp,0x38
  422154:	lea    rax,[rip+0x27e62]        # 0x449fbd
  42215b:	lea    r9,[rip+0x27e66]        # 0x449fc8
  422162:	lea    r8,[rip+0x26f08]        # 0x449071
  422169:	lea    rdx,[rip+0x2e098]        # 0x450208
  422170:	mov    QWORD PTR [rsp+0x20],rax
  422175:	call   0x427dd8
  42217a:	nop
  42217b:	add    rsp,0x38
  42217f:	ret    
  422180:	lea    r9,[rip+0x27e29]        # 0x449fb0
  422187:	lea    r8,[rip+0x26ee3]        # 0x449071
  42218e:	lea    rdx,[rip+0x2e0cb]        # 0x450260
  422195:	jmp    0x427dd8
  42219a:	nop    WORD PTR [rax+rax*1+0x0]
  4221a0:	lea    r9,[rip+0x27e09]        # 0x449fb0
  4221a7:	lea    r8,[rip+0x26ec3]        # 0x449071
  4221ae:	lea    rdx,[rip+0x2e0f3]        # 0x4502a8
  4221b5:	jmp    0x427dd8
  4221ba:	nop    WORD PTR [rax+rax*1+0x0]
  4221c0:	lea    r8,[rip+0x26eaa]        # 0x449071
  4221c7:	lea    rdx,[rip+0x2e122]        # 0x4502f0
  4221ce:	jmp    0x427dd8
  4221d3:	nop    DWORD PTR [rax]
  4221d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4221e0:	lea    r8,[rip+0x26e8a]        # 0x449071
  4221e7:	lea    rdx,[rip+0x2e132]        # 0x450320
  4221ee:	jmp    0x427dd8
  4221f3:	nop    DWORD PTR [rax]
  4221f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422200:	lea    r9,[rip+0x290a3]        # 0x44b2aa
  422207:	lea    r8,[rip+0x26e63]        # 0x449071
  42220e:	lea    rdx,[rip+0x2e133]        # 0x450348
  422215:	jmp    0x427dd8
  42221a:	nop    WORD PTR [rax+rax*1+0x0]
  422220:	lea    r8,[rip+0x26e4a]        # 0x449071
  422227:	lea    rdx,[rip+0x2e152]        # 0x450380
  42222e:	jmp    0x427dd8
  422233:	nop    DWORD PTR [rax]
  422236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422240:	lea    r8,[rip+0x26e2a]        # 0x449071
  422247:	lea    rdx,[rip+0x2e172]        # 0x4503c0
  42224e:	jmp    0x427dd8
  422253:	nop    DWORD PTR [rax]
  422256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422260:	lea    r8,[rip+0x26e0a]        # 0x449071
  422267:	lea    rdx,[rip+0x2e192]        # 0x450400
  42226e:	jmp    0x427dd8
  422273:	nop    DWORD PTR [rax]
  422276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422280:	lea    r8,[rip+0x26dea]        # 0x449071
  422287:	lea    rdx,[rip+0x2e1aa]        # 0x450438
  42228e:	jmp    0x427dd8
  422293:	nop    DWORD PTR [rax]
  422296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222a0:	lea    r8,[rip+0x26dca]        # 0x449071
  4222a7:	lea    rdx,[rip+0x2e1ca]        # 0x450478
  4222ae:	jmp    0x427dd8
  4222b3:	nop    DWORD PTR [rax]
  4222b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222c0:	lea    r8,[rip+0x26daa]        # 0x449071
  4222c7:	lea    rdx,[rip+0x2e1d2]        # 0x4504a0
  4222ce:	jmp    0x427dd8
  4222d3:	nop    DWORD PTR [rax]
  4222d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222e0:	lea    r8,[rip+0x26d8a]        # 0x449071
  4222e7:	lea    rdx,[rip+0x2e1fa]        # 0x4504e8
  4222ee:	jmp    0x427dd8
  4222f3:	nop    DWORD PTR [rax]
  4222f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422300:	lea    r8,[rip+0x26d6a]        # 0x449071
  422307:	lea    rdx,[rip+0x2e222]        # 0x450530
  42230e:	jmp    0x427dd8
  422313:	nop    DWORD PTR [rax]
  422316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422320:	lea    r8,[rip+0x26d4a]        # 0x449071
  422327:	lea    rdx,[rip+0x2e242]        # 0x450570
  42232e:	jmp    0x427dd8
  422333:	nop    DWORD PTR [rax]
  422336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422340:	lea    r9,[rip+0x28f63]        # 0x44b2aa
  422347:	lea    r8,[rip+0x26d23]        # 0x449071
  42234e:	lea    rdx,[rip+0x2e263]        # 0x4505b8
  422355:	jmp    0x427dd8
  42235a:	nop    WORD PTR [rax+rax*1+0x0]
  422360:	lea    r8,[rip+0x26d0a]        # 0x449071
  422367:	lea    rdx,[rip+0x2e28a]        # 0x4505f8
  42236e:	jmp    0x427dd8
  422373:	nop    DWORD PTR [rax]
  422376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422380:	lea    r8,[rip+0x26cea]        # 0x449071
  422387:	lea    rdx,[rip+0x2e2aa]        # 0x450638
  42238e:	jmp    0x427dd8
  422393:	nop    DWORD PTR [rax]
  422396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4223a0:	lea    r9,[rip+0x2a280]        # 0x44c627
  4223a7:	lea    r8,[rip+0x28446]        # 0x44a7f4
  4223ae:	lea    rdx,[rip+0x2e2ab]        # 0x450660
  4223b5:	jmp    0x427dd8
  4223ba:	nop    WORD PTR [rax+rax*1+0x0]
  4223c0:	lea    r8,[rip+0x26caa]        # 0x449071
  4223c7:	lea    rdx,[rip+0x2e2ea]        # 0x4506b8
  4223ce:	jmp    0x427dd8
  4223d3:	nop    DWORD PTR [rax]
  4223d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4223e0:	lea    rdx,[rip+0x2e30b]        # 0x4506f2
  4223e7:	jmp    0x427dd8
  4223ec:	nop    DWORD PTR [rax+0x0]
  4223f0:	lea    r9,[rip+0x2e316]        # 0x45070d
  4223f7:	lea    r8,[rip+0x26c73]        # 0x449071
  4223fe:	lea    rdx,[rip+0x2e312]        # 0x450717
  422405:	jmp    0x427dd8
  42240a:	nop    WORD PTR [rax+rax*1+0x0]
  422410:	sub    rsp,0x68
  422414:	lea    rax,[rip+0x2ab69]        # 0x44cf84
  42241b:	lea    r9,[rip+0x2e313]        # 0x450735
  422422:	lea    r8,[rip+0x26e4a]        # 0x449273
  422429:	lea    rdx,[rip+0x2e310]        # 0x450740
  422430:	mov    QWORD PTR [rsp+0x50],rax
  422435:	mov    QWORD PTR [rsp+0x48],rax
  42243a:	mov    QWORD PTR [rsp+0x40],rax
  42243f:	mov    QWORD PTR [rsp+0x38],rax
  422444:	mov    QWORD PTR [rsp+0x30],rax
  422449:	lea    rax,[rip+0x2ab68]        # 0x44cfb8
  422450:	mov    QWORD PTR [rsp+0x20],r9
  422455:	mov    QWORD PTR [rsp+0x28],rax
  42245a:	call   0x427dd8
  42245f:	nop
  422460:	add    rsp,0x68
  422464:	ret    
  422465:	nop
  422466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422470:	sub    rsp,0x58
  422474:	lea    rax,[rip+0x2e46e]        # 0x4508e9
  42247b:	lea    r9,[rip+0x2d8e1]        # 0x44fd63
  422482:	lea    r8,[rip+0x2e381]        # 0x45080a
  422489:	lea    rdx,[rip+0x2e388]        # 0x450818
  422490:	mov    QWORD PTR [rsp+0x48],rax
  422495:	mov    QWORD PTR [rsp+0x40],rax
  42249a:	mov    QWORD PTR [rsp+0x38],rax
  42249f:	mov    QWORD PTR [rsp+0x30],rax
  4224a4:	mov    QWORD PTR [rsp+0x28],rax
  4224a9:	lea    rax,[rip+0x2e440]        # 0x4508f0
  4224b0:	mov    QWORD PTR [rsp+0x20],rax
  4224b5:	call   0x427dd8
  4224ba:	nop
  4224bb:	add    rsp,0x58
  4224bf:	ret    
  4224c0:	sub    rsp,0x138
  4224c7:	lea    rdx,[rip+0x29847]        # 0x44bd15
  4224ce:	lea    rax,[rip+0x274c5]        # 0x44999a
  4224d5:	lea    r9,[rip+0x26f2e]        # 0x44940a
  4224dc:	lea    r8,[rip+0x28dc7]        # 0x44b2aa
  4224e3:	mov    QWORD PTR [rsp+0x110],rdx
  4224eb:	lea    rdx,[rip+0x284b5]        # 0x44a9a7
  4224f2:	mov    QWORD PTR [rsp+0x128],rax
  4224fa:	mov    QWORD PTR [rsp+0x120],rax
  422502:	mov    QWORD PTR [rsp+0x118],rax
  42250a:	mov    QWORD PTR [rsp+0x100],rdx
  422512:	lea    rdx,[rip+0x2ec90]        # 0x4511a9
  422519:	mov    QWORD PTR [rsp+0x108],rax
  422521:	mov    QWORD PTR [rsp+0xf8],rax
  422529:	mov    QWORD PTR [rsp+0xf0],r9
  422531:	mov    QWORD PTR [rsp+0xe0],rdx
  422539:	lea    rdx,[rip+0x2b81c]        # 0x44dd5c
  422540:	mov    QWORD PTR [rsp+0xe8],rax
  422548:	mov    QWORD PTR [rsp+0xd8],rax
  422550:	mov    QWORD PTR [rsp+0xc8],rax
  422558:	mov    QWORD PTR [rsp+0xd0],rdx
  422560:	lea    rdx,[rip+0x2ec47]        # 0x4511ae
  422567:	mov    QWORD PTR [rsp+0xc0],r9
  42256f:	mov    QWORD PTR [rsp+0x98],rax
  422577:	mov    QWORD PTR [rsp+0x88],rax
  42257f:	mov    QWORD PTR [rsp+0xb8],rdx
  422587:	lea    rdx,[rip+0x2ec29]        # 0x4511b7
  42258e:	mov    QWORD PTR [rsp+0x78],rax
  422593:	mov    QWORD PTR [rsp+0x68],rax
  422598:	mov    QWORD PTR [rsp+0x58],rax
  42259d:	mov    QWORD PTR [rsp+0xb0],rdx
  4225a5:	lea    rdx,[rip+0x26bba]        # 0x449166
  4225ac:	mov    QWORD PTR [rsp+0x50],r9
  4225b1:	mov    QWORD PTR [rsp+0x40],rax
  4225b6:	mov    QWORD PTR [rsp+0x38],r8
  4225bb:	mov    QWORD PTR [rsp+0xa8],rdx
  4225c3:	lea    rdx,[rip+0x27a16]        # 0x449fe0
  4225ca:	mov    QWORD PTR [rsp+0xa0],rdx
  4225d2:	lea    rdx,[rip+0x2a04e]        # 0x44c627
  4225d9:	mov    QWORD PTR [rsp+0x90],rdx
  4225e1:	lea    rdx,[rip+0x2c291]        # 0x44e879
  4225e8:	mov    QWORD PTR [rsp+0x80],rdx
  4225f0:	lea    rdx,[rip+0x2ebc9]        # 0x4511c0
  4225f7:	mov    QWORD PTR [rsp+0x70],rdx
  4225fc:	lea    rdx,[rip+0x28c86]        # 0x44b289
  422603:	mov    QWORD PTR [rsp+0x60],rdx
  422608:	lea    rdx,[rip+0x2ebbd]        # 0x4511cc
  42260f:	mov    QWORD PTR [rsp+0x48],rdx
  422614:	lea    rdx,[rip+0x27efe]        # 0x44a519
  42261b:	mov    QWORD PTR [rsp+0x30],rdx
  422620:	mov    QWORD PTR [rsp+0x28],rdx
  422625:	lea    rdx,[rip+0x2e2ec]        # 0x450918
  42262c:	mov    QWORD PTR [rsp+0x20],rax
  422631:	call   0x427dd8
  422636:	nop
  422637:	add    rsp,0x138
  42263e:	ret    
  42263f:	nop
  422640:	sub    rsp,0x58
  422644:	lea    rax,[rip+0x2d6fa]        # 0x44fd45
  42264b:	lea    r9,[rip+0x28c58]        # 0x44b2aa
  422652:	lea    r8,[rip+0x2d625]        # 0x44fc7e
  422659:	lea    rdx,[rip+0x2eb80]        # 0x4511e0
  422660:	mov    QWORD PTR [rsp+0x40],rax
  422665:	lea    rax,[rip+0x2d6e5]        # 0x44fd51
  42266c:	mov    QWORD PTR [rsp+0x38],rax
  422671:	lea    rax,[rip+0x2a96d]        # 0x44cfe5
  422678:	mov    QWORD PTR [rsp+0x30],rax
  42267d:	lea    rax,[rip+0x2736d]        # 0x4499f1
  422684:	mov    QWORD PTR [rsp+0x28],rax
  422689:	lea    rax,[rip+0x27e89]        # 0x44a519
  422690:	mov    QWORD PTR [rsp+0x20],rax
  422695:	call   0x427dd8
  42269a:	nop
  42269b:	add    rsp,0x58
  42269f:	ret    
  4226a0:	lea    r8,[rip+0x2ebf6]        # 0x45129d
  4226a7:	lea    rdx,[rip+0x2ebf7]        # 0x4512a5
  4226ae:	jmp    0x427dd8
  4226b3:	nop    DWORD PTR [rax]
  4226b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226c0:	lea    r8,[rip+0x2a915]        # 0x44cfdc
  4226c7:	lea    rdx,[rip+0x2ebe1]        # 0x4512af
  4226ce:	jmp    0x427dd8
  4226d3:	nop    DWORD PTR [rax]
  4226d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226e0:	sub    rsp,0x38
  4226e4:	lea    rax,[rip+0x2ecac]        # 0x451397
  4226eb:	lea    r9,[rip+0x2ebc7]        # 0x4512b9
  4226f2:	lea    r8,[rip+0x26978]        # 0x449071
  4226f9:	lea    rdx,[rip+0x2ebc8]        # 0x4512c8
  422700:	mov    QWORD PTR [rsp+0x20],rax
  422705:	call   0x427dd8
  42270a:	nop
  42270b:	add    rsp,0x38
  42270f:	ret    
  422710:	sub    rsp,0x58
  422714:	lea    rax,[rip+0x2e1ce]        # 0x4508e9
  42271b:	lea    r9,[rip+0x2d641]        # 0x44fd63
  422722:	lea    r8,[rip+0x2e0e1]        # 0x45080a
  422729:	lea    rdx,[rip+0x2ec88]        # 0x4513b8
  422730:	mov    QWORD PTR [rsp+0x48],rax
  422735:	mov    QWORD PTR [rsp+0x40],rax
  42273a:	mov    QWORD PTR [rsp+0x38],rax
  42273f:	mov    QWORD PTR [rsp+0x30],rax
  422744:	mov    QWORD PTR [rsp+0x28],rax
  422749:	lea    rax,[rip+0x2e1a0]        # 0x4508f0
  422750:	mov    QWORD PTR [rsp+0x20],rax
  422755:	call   0x427dd8
  42275a:	nop
  42275b:	add    rsp,0x58
  42275f:	ret    
  422760:	lea    r9,[rip+0x2ed21]        # 0x451488
  422767:	lea    r8,[rip+0x2eb2f]        # 0x45129d
  42276e:	lea    rdx,[rip+0x2ed1b]        # 0x451490
  422775:	jmp    0x427dd8
  42277a:	nop    WORD PTR [rax+rax*1+0x0]
  422780:	sub    rsp,0x38
  422784:	lea    rax,[rip+0x2dfaa]        # 0x450735
  42278b:	lea    r9,[rip+0x27dac]        # 0x44a53e
  422792:	lea    r8,[rip+0x268d8]        # 0x449071
  422799:	lea    rdx,[rip+0x2ed08]        # 0x4514a8
  4227a0:	mov    QWORD PTR [rsp+0x20],rax
  4227a5:	call   0x427dd8
  4227aa:	nop
  4227ab:	add    rsp,0x38
  4227af:	ret    
  4227b0:	lea    r8,[rip+0x2a5a4]        # 0x44cd5b
  4227b7:	lea    rdx,[rip+0x2ed0e]        # 0x4514cc
  4227be:	jmp    0x427dd8
  4227c3:	nop    DWORD PTR [rax]
  4227c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227d0:	lea    r9,[rip+0x2ed0c]        # 0x4514e3
  4227d7:	lea    r8,[rip+0x2ed0e]        # 0x4514ec
  4227de:	lea    rdx,[rip+0x2ed13]        # 0x4514f8
  4227e5:	jmp    0x427dd8
  4227ea:	nop    WORD PTR [rax+rax*1+0x0]
  4227f0:	lea    r8,[rip+0x2687a]        # 0x449071
  4227f7:	lea    rdx,[rip+0x2ed22]        # 0x451520
  4227fe:	jmp    0x427dd8
  422803:	nop    DWORD PTR [rax]
  422806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422810:	lea    r8,[rip+0x2685a]        # 0x449071
  422817:	lea    rdx,[rip+0x2ed4a]        # 0x451568
  42281e:	jmp    0x427dd8
  422823:	nop    DWORD PTR [rax]
  422826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422830:	lea    r8,[rip+0x2ed6c]        # 0x4515a3
  422837:	lea    rdx,[rip+0x2ed74]        # 0x4515b2
  42283e:	jmp    0x427dd8
  422843:	nop    DWORD PTR [rax]
  422846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422850:	lea    r8,[rip+0x26b67]        # 0x4493be
  422857:	lea    rdx,[rip+0x2ed6d]        # 0x4515cb
  42285e:	jmp    0x427dd8
  422863:	nop    DWORD PTR [rax]
  422866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422870:	sub    rsp,0x138
  422877:	lea    rdx,[rip+0x29497]        # 0x44bd15
  42287e:	lea    rax,[rip+0x27115]        # 0x44999a
  422885:	lea    r9,[rip+0x26b7e]        # 0x44940a
  42288c:	lea    r8,[rip+0x28a17]        # 0x44b2aa
  422893:	mov    QWORD PTR [rsp+0x110],rdx
  42289b:	lea    rdx,[rip+0x28105]        # 0x44a9a7
  4228a2:	mov    QWORD PTR [rsp+0x128],rax
  4228aa:	mov    QWORD PTR [rsp+0x120],rax
  4228b2:	mov    QWORD PTR [rsp+0x118],rax
  4228ba:	mov    QWORD PTR [rsp+0x100],rdx
  4228c2:	lea    rdx,[rip+0x2e8e0]        # 0x4511a9
  4228c9:	mov    QWORD PTR [rsp+0x108],rax
  4228d1:	mov    QWORD PTR [rsp+0xf8],rax
  4228d9:	mov    QWORD PTR [rsp+0xf0],r9
  4228e1:	mov    QWORD PTR [rsp+0xe0],rdx
  4228e9:	lea    rdx,[rip+0x2b46c]        # 0x44dd5c
  4228f0:	mov    QWORD PTR [rsp+0xe8],rax
  4228f8:	mov    QWORD PTR [rsp+0xd8],rax
  422900:	mov    QWORD PTR [rsp+0xc8],rax
  422908:	mov    QWORD PTR [rsp+0xd0],rdx
  422910:	lea    rdx,[rip+0x2e897]        # 0x4511ae
  422917:	mov    QWORD PTR [rsp+0xc0],r9
  42291f:	mov    QWORD PTR [rsp+0x98],rax
  422927:	mov    QWORD PTR [rsp+0x88],rax
  42292f:	mov    QWORD PTR [rsp+0xb8],rdx
  422937:	lea    rdx,[rip+0x2e879]        # 0x4511b7
  42293e:	mov    QWORD PTR [rsp+0x78],rax
  422943:	mov    QWORD PTR [rsp+0x68],rax
  422948:	mov    QWORD PTR [rsp+0x58],rax
  42294d:	mov    QWORD PTR [rsp+0xb0],rdx
  422955:	lea    rdx,[rip+0x2680a]        # 0x449166
  42295c:	mov    QWORD PTR [rsp+0x50],r9
  422961:	mov    QWORD PTR [rsp+0x40],rax
  422966:	mov    QWORD PTR [rsp+0x38],r8
  42296b:	mov    QWORD PTR [rsp+0xa8],rdx
  422973:	lea    rdx,[rip+0x27666]        # 0x449fe0
  42297a:	mov    QWORD PTR [rsp+0xa0],rdx
  422982:	lea    rdx,[rip+0x29c9e]        # 0x44c627
  422989:	mov    QWORD PTR [rsp+0x90],rdx
  422991:	lea    rdx,[rip+0x2bee1]        # 0x44e879
  422998:	mov    QWORD PTR [rsp+0x80],rdx
  4229a0:	lea    rdx,[rip+0x2e819]        # 0x4511c0
  4229a7:	mov    QWORD PTR [rsp+0x70],rdx
  4229ac:	lea    rdx,[rip+0x288d6]        # 0x44b289
  4229b3:	mov    QWORD PTR [rsp+0x60],rdx
  4229b8:	lea    rdx,[rip+0x2e80d]        # 0x4511cc
  4229bf:	mov    QWORD PTR [rsp+0x48],rdx
  4229c4:	lea    rdx,[rip+0x27b4e]        # 0x44a519
  4229cb:	mov    QWORD PTR [rsp+0x30],rdx
  4229d0:	mov    QWORD PTR [rsp+0x28],rdx
  4229d5:	lea    rdx,[rip+0x2ec04]        # 0x4515e0
  4229dc:	mov    QWORD PTR [rsp+0x20],rax
  4229e1:	call   0x427dd8
  4229e6:	nop
  4229e7:	add    rsp,0x138
  4229ee:	ret    
  4229ef:	nop
  4229f0:	lea    rdx,[rip+0x2f649]        # 0x452040
  4229f7:	jmp    0x427dd8
  4229fc:	nop    DWORD PTR [rax+0x0]
  422a00:	lea    r8,[rip+0x2a354]        # 0x44cd5b
  422a07:	lea    rdx,[rip+0x2f652]        # 0x452060
  422a0e:	jmp    0x427dd8
  422a13:	nop    DWORD PTR [rax]
  422a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a20:	lea    r8,[rip+0x2eb7c]        # 0x4515a3
  422a27:	lea    rdx,[rip+0x2f64a]        # 0x452078
  422a2e:	jmp    0x427dd8
  422a33:	nop    DWORD PTR [rax]
  422a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a40:	lea    r8,[rip+0x2eb5c]        # 0x4515a3
  422a47:	lea    rdx,[rip+0x2f65e]        # 0x4520ac
  422a4e:	jmp    0x427dd8
  422a53:	nop    DWORD PTR [rax]
  422a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a60:	sub    rsp,0x128
  422a67:	lea    rax,[rip+0x266f8]        # 0x449166
  422a6e:	lea    r8,[rip+0x266e1]        # 0x449156
  422a75:	lea    rdx,[rip+0x266e2]        # 0x44915e
  422a7c:	lea    r10,[rip+0x266eb]        # 0x44916e
  422a83:	lea    r9,[rip+0x2751a]        # 0x449fa4
  422a8a:	lea    r11,[rip+0x2ce49]        # 0x44f8da
  422a91:	mov    QWORD PTR [rsp+0x108],rax
  422a99:	mov    QWORD PTR [rsp+0xf0],rax
  422aa1:	mov    QWORD PTR [rsp+0xd8],rax
  422aa9:	mov    QWORD PTR [rsp+0x68],rax
  422aae:	lea    rax,[rip+0x2752b]        # 0x449fe0
  422ab5:	mov    QWORD PTR [rsp+0x118],r8
  422abd:	mov    QWORD PTR [rsp+0x110],rdx
  422ac5:	mov    QWORD PTR [rsp+0x60],rax
  422aca:	lea    rax,[rip+0x2658c]        # 0x44905d
  422ad1:	mov    QWORD PTR [rsp+0x100],r8
  422ad9:	mov    QWORD PTR [rsp+0xf8],rdx
  422ae1:	mov    QWORD PTR [rsp+0xe8],r8
  422ae9:	mov    QWORD PTR [rsp+0x38],rax
  422aee:	lea    rax,[rip+0x27511]        # 0x44a006
  422af5:	mov    QWORD PTR [rsp+0xe0],rdx
  422afd:	mov    QWORD PTR [rsp+0xd0],r10
  422b05:	mov    QWORD PTR [rsp+0x78],r8
  422b0a:	lea    r10,[rip+0x27f02]        # 0x44aa13
  422b11:	mov    QWORD PTR [rsp+0x30],rax
  422b16:	lea    rax,[rip+0x279fc]        # 0x44a519
  422b1d:	mov    QWORD PTR [rsp+0x70],rdx
  422b22:	lea    r8,[rip+0x2f590]        # 0x4520b9
  422b29:	lea    rdx,[rip+0x2f598]        # 0x4520c8
  422b30:	mov    QWORD PTR [rsp+0xc8],r11
  422b38:	mov    QWORD PTR [rsp+0x28],rax
  422b3d:	lea    rax,[rip+0x28766]        # 0x44b2aa
  422b44:	mov    QWORD PTR [rsp+0xc0],r9
  422b4c:	mov    QWORD PTR [rsp+0xb8],r9
  422b54:	mov    QWORD PTR [rsp+0xb0],r9
  422b5c:	mov    QWORD PTR [rsp+0x20],rax
  422b61:	mov    QWORD PTR [rsp+0xa8],r9
  422b69:	mov    QWORD PTR [rsp+0xa0],r9
  422b71:	mov    QWORD PTR [rsp+0x98],r9
  422b79:	mov    QWORD PTR [rsp+0x90],r9
  422b81:	mov    QWORD PTR [rsp+0x88],r9
  422b89:	mov    QWORD PTR [rsp+0x80],r10
  422b91:	mov    QWORD PTR [rsp+0x58],r9
  422b96:	mov    QWORD PTR [rsp+0x50],r9
  422b9b:	mov    QWORD PTR [rsp+0x48],r9
  422ba0:	mov    QWORD PTR [rsp+0x40],r9
  422ba5:	call   0x427dd8
  422baa:	nop
  422bab:	add    rsp,0x128
  422bb2:	ret    
  422bb3:	nop    DWORD PTR [rax]
  422bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422bc0:	push   rdi
  422bc1:	push   rsi
  422bc2:	push   rbx
  422bc3:	sub    rsp,0x1e0
  422bca:	lea    rax,[rip+0x2fbd3]        # 0x4527a4
  422bd1:	lea    rdx,[rip+0x2fc41]        # 0x452819
  422bd8:	lea    r11,[rip+0x2fbe1]        # 0x4527c0
  422bdf:	lea    r10,[rip+0x2fc1f]        # 0x452805
  422be6:	lea    r9,[rip+0x2fc4b]        # 0x452838
  422bed:	lea    r8,[rip+0x273ec]        # 0x449fe0
  422bf4:	mov    QWORD PTR [rsp+0x1c8],rax
  422bfc:	lea    rax,[rip+0x2fba8]        # 0x4527ab
  422c03:	lea    rbx,[rip+0x286a0]        # 0x44b2aa
  422c0a:	lea    rsi,[rip+0x2fc15]        # 0x452826
  422c11:	lea    rdi,[rip+0x2fbaf]        # 0x4527c7
  422c18:	mov    QWORD PTR [rsp+0x1a8],r11
  422c20:	mov    QWORD PTR [rsp+0x1c0],rax
  422c28:	lea    rax,[rip+0x2fb83]        # 0x4527b2
  422c2f:	mov    QWORD PTR [rsp+0x178],r10
  422c37:	mov    QWORD PTR [rsp+0x198],rdi
  422c3f:	mov    QWORD PTR [rsp+0x168],r10
  422c47:	mov    QWORD PTR [rsp+0x1b8],rax
  422c4f:	lea    rax,[rip+0x2fb63]        # 0x4527b9
  422c56:	mov    QWORD PTR [rsp+0x160],rdx
  422c5e:	mov    QWORD PTR [rsp+0x148],r9
  422c66:	mov    QWORD PTR [rsp+0x140],r8
  422c6e:	mov    QWORD PTR [rsp+0x1b0],rax
  422c76:	lea    rax,[rip+0x2789c]        # 0x44a519
  422c7d:	mov    QWORD PTR [rsp+0x130],r9
  422c85:	mov    QWORD PTR [rsp+0x128],r8
  422c8d:	mov    QWORD PTR [rsp+0x110],r9
  422c95:	mov    QWORD PTR [rsp+0x1a0],rax
  422c9d:	lea    rax,[rip+0x2fb33]        # 0x4527d7
  422ca4:	mov    QWORD PTR [rsp+0x108],r8
  422cac:	mov    QWORD PTR [rsp+0x100],rdx
  422cb4:	mov    QWORD PTR [rsp+0xf0],r9
  422cbc:	lea    r9,[rip+0x26d2e]        # 0x4499f1
  422cc3:	mov    QWORD PTR [rsp+0x190],rax
  422ccb:	lea    rax,[rip+0x2fb18]        # 0x4527ea
  422cd2:	mov    QWORD PTR [rsp+0xe8],r8
  422cda:	mov    QWORD PTR [rsp+0xe0],rdx
  422ce2:	mov    QWORD PTR [rsp+0xd0],rdi
  422cea:	lea    r8,[rip+0x2cf8d]        # 0x44fc7e
  422cf1:	mov    QWORD PTR [rsp+0x188],rax
  422cf9:	lea    rax,[rip+0x2faf6]        # 0x4527f6
  422d00:	mov    QWORD PTR [rsp+0x1d0],rbx
  422d08:	mov    QWORD PTR [rsp+0x150],rsi
  422d10:	mov    QWORD PTR [rsp+0x138],rsi
  422d18:	lea    rdi,[rip+0x28794]        # 0x44b4b3
  422d1f:	mov    QWORD PTR [rsp+0x180],rax
  422d27:	lea    rax,[rip+0x2fae1]        # 0x45280f
  422d2e:	mov    QWORD PTR [rsp+0x120],rsi
  422d36:	mov    QWORD PTR [rsp+0x170],rax
  422d3e:	lea    rax,[rip+0x2d035]        # 0x44fd7a
  422d45:	mov    QWORD PTR [rsp+0x158],rax
  422d4d:	mov    QWORD PTR [rsp+0x118],rax
  422d55:	mov    QWORD PTR [rsp+0xf8],rax
  422d5d:	mov    QWORD PTR [rsp+0xd8],rax
  422d65:	mov    QWORD PTR [rsp+0xc8],rdx
  422d6d:	mov    QWORD PTR [rsp+0xc0],rax
  422d75:	mov    QWORD PTR [rsp+0xa8],rax
  422d7d:	lea    rax,[rip+0x2fac4]        # 0x452848
  422d84:	mov    QWORD PTR [rsp+0xb0],rdx
  422d8c:	lea    rdx,[rip+0x2f515]        # 0x4522a8
  422d93:	mov    QWORD PTR [rsp+0x68],r9
  422d98:	mov    QWORD PTR [rsp+0x60],r11
  422d9d:	mov    QWORD PTR [rsp+0x98],rax
  422da5:	lea    rax,[rip+0x2db3d]        # 0x4508e9
  422dac:	mov    QWORD PTR [rsp+0x40],r9
  422db1:	mov    QWORD PTR [rsp+0x30],r10
  422db6:	mov    QWORD PTR [rsp+0x20],r9
  422dbb:	mov    QWORD PTR [rsp+0x88],rax
  422dc3:	mov    QWORD PTR [rsp+0x78],rax
  422dc8:	lea    rax,[rip+0x2c1bf]        # 0x44ef8e
  422dcf:	mov    QWORD PTR [rsp+0xb8],r11
  422dd7:	mov    QWORD PTR [rsp+0xa0],rbx
  422ddf:	mov    QWORD PTR [rsp+0x70],rax
  422de4:	lea    rax,[rip+0x2fa7c]        # 0x452867
  422deb:	mov    QWORD PTR [rsp+0x90],rbx
  422df3:	mov    QWORD PTR [rsp+0x80],rdi
  422dfb:	mov    QWORD PTR [rsp+0x58],rax
  422e00:	lea    rax,[rip+0x2fa72]        # 0x452879
  422e07:	mov    QWORD PTR [rsp+0x50],rax
  422e0c:	lea    rax,[rip+0x2b826]        # 0x44e639
  422e13:	mov    QWORD PTR [rsp+0x48],rax
  422e18:	mov    QWORD PTR [rsp+0x38],rax
  422e1d:	lea    rax,[rip+0x2cf21]        # 0x44fd45
  422e24:	mov    QWORD PTR [rsp+0x28],rax
  422e29:	call   0x427dd8
  422e2e:	nop
  422e2f:	add    rsp,0x1e0
  422e36:	pop    rbx
  422e37:	pop    rsi
  422e38:	pop    rdi
  422e39:	ret    
  422e3a:	nop    WORD PTR [rax+rax*1+0x0]
  422e40:	sub    rsp,0xa8
  422e47:	lea    rax,[rip+0x2845c]        # 0x44b2aa
  422e4e:	lea    rdx,[rip+0x2865e]        # 0x44b4b3
  422e55:	lea    r9,[rip+0x26b95]        # 0x4499f1
  422e5c:	lea    r8,[rip+0x2ce1b]        # 0x44fc7e
  422e63:	mov    QWORD PTR [rsp+0x98],rax
  422e6b:	lea    rax,[rip+0x2da77]        # 0x4508e9
  422e72:	mov    QWORD PTR [rsp+0x88],rdx
  422e7a:	lea    rdx,[rip+0x2fa07]        # 0x452888
  422e81:	mov    QWORD PTR [rsp+0x70],r9
  422e86:	mov    QWORD PTR [rsp+0x48],r9
  422e8b:	mov    QWORD PTR [rsp+0x90],rax
  422e93:	mov    QWORD PTR [rsp+0x80],rax
  422e9b:	lea    rax,[rip+0x2c0ec]        # 0x44ef8e
  422ea2:	mov    QWORD PTR [rsp+0x20],r9
  422ea7:	mov    QWORD PTR [rsp+0x78],rax
  422eac:	lea    rax,[rip+0x2f90d]        # 0x4527c0
  422eb3:	mov    QWORD PTR [rsp+0x68],rax
  422eb8:	lea    rax,[rip+0x2f9a8]        # 0x452867
  422ebf:	mov    QWORD PTR [rsp+0x60],rax
  422ec4:	lea    rax,[rip+0x2f9ae]        # 0x452879
  422ecb:	mov    QWORD PTR [rsp+0x58],rax
  422ed0:	lea    rax,[rip+0x2b762]        # 0x44e639
  422ed7:	mov    QWORD PTR [rsp+0x50],rax
  422edc:	mov    QWORD PTR [rsp+0x40],rax
  422ee1:	lea    rax,[rip+0x2f91d]        # 0x452805
  422ee8:	mov    QWORD PTR [rsp+0x38],rax
  422eed:	lea    rax,[rip+0x2fc06]        # 0x452afa
  422ef4:	mov    QWORD PTR [rsp+0x30],rax
  422ef9:	lea    rax,[rip+0x2ce45]        # 0x44fd45
  422f00:	mov    QWORD PTR [rsp+0x28],rax
  422f05:	call   0x427dd8
  422f0a:	nop
  422f0b:	add    rsp,0xa8
  422f12:	ret    
  422f13:	nop    DWORD PTR [rax]
  422f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f20:	sub    rsp,0x38
  422f24:	lea    rax,[rip+0x2fc56]        # 0x452b81
  422f2b:	lea    r9,[rip+0x264a4]        # 0x4493d6
  422f32:	lea    r8,[rip+0x26485]        # 0x4493be
  422f39:	lea    rdx,[rip+0x2fbc8]        # 0x452b08
  422f40:	mov    QWORD PTR [rsp+0x28],rax
  422f45:	mov    QWORD PTR [rsp+0x20],r9
  422f4a:	call   0x427dd8
  422f4f:	nop
  422f50:	add    rsp,0x38
  422f54:	ret    
  422f55:	nop
  422f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f60:	lea    r8,[rip+0x2610a]        # 0x449071
  422f67:	lea    rdx,[rip+0x2fc22]        # 0x452b90
  422f6e:	jmp    0x427dd8
  422f73:	nop    DWORD PTR [rax]
  422f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f80:	lea    r8,[rip+0x26a13]        # 0x44999a
  422f87:	lea    rdx,[rip+0x2fc42]        # 0x452bd0
  422f8e:	jmp    0x427dd8
  422f93:	nop    DWORD PTR [rax]
  422f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fa0:	lea    r8,[rip+0x2784d]        # 0x44a7f4
  422fa7:	lea    rdx,[rip+0x2fc72]        # 0x452c20
  422fae:	jmp    0x427dd8
  422fb3:	nop    DWORD PTR [rax]
  422fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fc0:	sub    rsp,0x38
  422fc4:	lea    rax,[rip+0x298ad]        # 0x44c878
  422fcb:	lea    r8,[rip+0x298c8]        # 0x44c89a
  422fd2:	lea    r9,[rip+0x2fcca]        # 0x452ca3
  422fd9:	lea    rdx,[rip+0x2fcd0]        # 0x452cb0
  422fe0:	mov    QWORD PTR [rsp+0x28],rax
  422fe5:	mov    QWORD PTR [rsp+0x20],r8
  422fea:	call   0x427dd8
  422fef:	nop
  422ff0:	add    rsp,0x38
  422ff4:	ret    
  422ff5:	nop
  422ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423000:	lea    r8,[rip+0x2606a]        # 0x449071
  423007:	lea    rdx,[rip+0x2fda1]        # 0x452daf
  42300e:	jmp    0x427dd8
  423013:	nop    DWORD PTR [rax]
  423016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423020:	lea    r9,[rip+0x29851]        # 0x44c878
  423027:	lea    r8,[rip+0x2986c]        # 0x44c89a
  42302e:	lea    rdx,[rip+0x2fd8b]        # 0x452dc0
  423035:	jmp    0x427dd8
  42303a:	nop    WORD PTR [rax+rax*1+0x0]
  423040:	push   rdi
  423041:	push   rsi
  423042:	push   rbx
  423043:	sub    rsp,0x1e0
  42304a:	lea    rax,[rip+0x2f753]        # 0x4527a4
  423051:	lea    rdx,[rip+0x2f7c1]        # 0x452819
  423058:	lea    r11,[rip+0x2f761]        # 0x4527c0
  42305f:	lea    r10,[rip+0x2f79f]        # 0x452805
  423066:	lea    r9,[rip+0x2f7cb]        # 0x452838
  42306d:	lea    r8,[rip+0x26f6c]        # 0x449fe0
  423074:	mov    QWORD PTR [rsp+0x1c8],rax
  42307c:	lea    rax,[rip+0x2f728]        # 0x4527ab
  423083:	lea    rbx,[rip+0x28220]        # 0x44b2aa
  42308a:	lea    rsi,[rip+0x2f795]        # 0x452826
  423091:	lea    rdi,[rip+0x2f72f]        # 0x4527c7
  423098:	mov    QWORD PTR [rsp+0x1a8],r11
  4230a0:	mov    QWORD PTR [rsp+0x1c0],rax
  4230a8:	lea    rax,[rip+0x2f703]        # 0x4527b2
  4230af:	mov    QWORD PTR [rsp+0x178],r10
  4230b7:	mov    QWORD PTR [rsp+0x198],rdi
  4230bf:	mov    QWORD PTR [rsp+0x168],r10
  4230c7:	mov    QWORD PTR [rsp+0x1b8],rax
  4230cf:	lea    rax,[rip+0x2f6e3]        # 0x4527b9
  4230d6:	mov    QWORD PTR [rsp+0x160],rdx
  4230de:	mov    QWORD PTR [rsp+0x148],r9
  4230e6:	mov    QWORD PTR [rsp+0x140],r8
  4230ee:	mov    QWORD PTR [rsp+0x1b0],rax
  4230f6:	lea    rax,[rip+0x2741c]        # 0x44a519
  4230fd:	mov    QWORD PTR [rsp+0x130],r9
  423105:	mov    QWORD PTR [rsp+0x128],r8
  42310d:	mov    QWORD PTR [rsp+0x110],r9
  423115:	mov    QWORD PTR [rsp+0x1a0],rax
  42311d:	lea    rax,[rip+0x2f6b3]        # 0x4527d7
  423124:	mov    QWORD PTR [rsp+0x108],r8
  42312c:	mov    QWORD PTR [rsp+0x100],rdx
  423134:	mov    QWORD PTR [rsp+0xf0],r9
  42313c:	lea    r9,[rip+0x268ae]        # 0x4499f1
  423143:	mov    QWORD PTR [rsp+0x190],rax
  42314b:	lea    rax,[rip+0x2f698]        # 0x4527ea
  423152:	mov    QWORD PTR [rsp+0xe8],r8
  42315a:	mov    QWORD PTR [rsp+0xe0],rdx
  423162:	mov    QWORD PTR [rsp+0xd0],rdi
  42316a:	lea    r8,[rip+0x2cb0d]        # 0x44fc7e
  423171:	mov    QWORD PTR [rsp+0x188],rax
  423179:	lea    rax,[rip+0x2f676]        # 0x4527f6
  423180:	mov    QWORD PTR [rsp+0x1d0],rbx
  423188:	mov    QWORD PTR [rsp+0x150],rsi
  423190:	mov    QWORD PTR [rsp+0x138],rsi
  423198:	lea    rdi,[rip+0x28314]        # 0x44b4b3
  42319f:	mov    QWORD PTR [rsp+0x180],rax
  4231a7:	lea    rax,[rip+0x2f661]        # 0x45280f
  4231ae:	mov    QWORD PTR [rsp+0x120],rsi
  4231b6:	mov    QWORD PTR [rsp+0x170],rax
  4231be:	lea    rax,[rip+0x2cbb5]        # 0x44fd7a
  4231c5:	mov    QWORD PTR [rsp+0x158],rax
  4231cd:	mov    QWORD PTR [rsp+0x118],rax
  4231d5:	mov    QWORD PTR [rsp+0xf8],rax
  4231dd:	mov    QWORD PTR [rsp+0xd8],rax
  4231e5:	mov    QWORD PTR [rsp+0xc8],rdx
  4231ed:	mov    QWORD PTR [rsp+0xc0],rax
  4231f5:	mov    QWORD PTR [rsp+0xa8],rax
  4231fd:	lea    rax,[rip+0x2f644]        # 0x452848
  423204:	mov    QWORD PTR [rsp+0xb0],rdx
  42320c:	lea    rdx,[rip+0x2f095]        # 0x4522a8
  423213:	mov    QWORD PTR [rsp+0x68],r9
  423218:	mov    QWORD PTR [rsp+0x60],r11
  42321d:	mov    QWORD PTR [rsp+0x98],rax
  423225:	lea    rax,[rip+0x2d6bd]        # 0x4508e9
  42322c:	mov    QWORD PTR [rsp+0x40],r9
  423231:	mov    QWORD PTR [rsp+0x30],r10
  423236:	mov    QWORD PTR [rsp+0x20],r9
  42323b:	mov    QWORD PTR [rsp+0x88],rax
  423243:	mov    QWORD PTR [rsp+0x78],rax
  423248:	lea    rax,[rip+0x2bd3f]        # 0x44ef8e
  42324f:	mov    QWORD PTR [rsp+0xb8],r11
  423257:	mov    QWORD PTR [rsp+0xa0],rbx
  42325f:	mov    QWORD PTR [rsp+0x70],rax
  423264:	lea    rax,[rip+0x2f5fc]        # 0x452867
  42326b:	mov    QWORD PTR [rsp+0x90],rbx
  423273:	mov    QWORD PTR [rsp+0x80],rdi
  42327b:	mov    QWORD PTR [rsp+0x58],rax
  423280:	lea    rax,[rip+0x2f5f2]        # 0x452879
  423287:	mov    QWORD PTR [rsp+0x50],rax
  42328c:	lea    rax,[rip+0x2b3a6]        # 0x44e639
  423293:	mov    QWORD PTR [rsp+0x48],rax
  423298:	mov    QWORD PTR [rsp+0x38],rax
  42329d:	lea    rax,[rip+0x2caa1]        # 0x44fd45
  4232a4:	mov    QWORD PTR [rsp+0x28],rax
  4232a9:	call   0x427dd8
  4232ae:	nop
  4232af:	add    rsp,0x1e0
  4232b6:	pop    rbx
  4232b7:	pop    rsi
  4232b8:	pop    rdi
  4232b9:	ret    
  4232ba:	nop    WORD PTR [rax+rax*1+0x0]
  4232c0:	lea    r8,[rip+0x25daa]        # 0x449071
  4232c7:	lea    rdx,[rip+0x2fbaa]        # 0x452e78
  4232ce:	jmp    0x427dd8
  4232d3:	nop    DWORD PTR [rax]
  4232d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232e0:	lea    r8,[rip+0x2dfb6]        # 0x45129d
  4232e7:	lea    rdx,[rip+0x2fbfc]        # 0x452eea
  4232ee:	jmp    0x427dd8
  4232f3:	nop    DWORD PTR [rax]
  4232f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423300:	sub    rsp,0x78
  423304:	lea    rax,[rip+0x2ca3a]        # 0x44fd45
  42330b:	lea    rdx,[rip+0x266df]        # 0x4499f1
  423312:	lea    r9,[rip+0x27f91]        # 0x44b2aa
  423319:	lea    r8,[rip+0x2c95e]        # 0x44fc7e
  423320:	mov    QWORD PTR [rsp+0x68],rax
  423325:	lea    rax,[rip+0x2ca25]        # 0x44fd51
  42332c:	mov    QWORD PTR [rsp+0x40],rdx
  423331:	mov    QWORD PTR [rsp+0x30],rdx
  423336:	lea    rdx,[rip+0x2fbc3]        # 0x452f00
  42333d:	mov    QWORD PTR [rsp+0x60],rax
  423342:	lea    rax,[rip+0x2ca1a]        # 0x44fd63
  423349:	mov    QWORD PTR [rsp+0x58],rax
  42334e:	lea    rax,[rip+0x2b2e4]        # 0x44e639
  423355:	mov    QWORD PTR [rsp+0x50],rax
  42335a:	lea    rax,[rip+0x2fcb2]        # 0x453013
  423361:	mov    QWORD PTR [rsp+0x48],rax
  423366:	lea    rax,[rip+0x271ac]        # 0x44a519
  42336d:	mov    QWORD PTR [rsp+0x38],rax
  423372:	mov    QWORD PTR [rsp+0x28],rax
  423377:	lea    rax,[rip+0x2c9fc]        # 0x44fd7a
  42337e:	mov    QWORD PTR [rsp+0x20],rax
  423383:	call   0x427dd8
  423388:	nop
  423389:	add    rsp,0x78
  42338d:	ret    
  42338e:	xchg   ax,ax
  423390:	sub    rsp,0x48
  423394:	lea    r8,[rip+0x27f0f]        # 0x44b2aa
  42339b:	lea    r9,[rip+0x27177]        # 0x44a519
  4233a2:	lea    rdx,[rip+0x2fc77]        # 0x453020
  4233a9:	mov    QWORD PTR [rsp+0x30],r9
  4233ae:	mov    QWORD PTR [rsp+0x28],r8
  4233b3:	mov    QWORD PTR [rsp+0x20],r8
  4233b8:	call   0x427dd8
  4233bd:	nop
  4233be:	add    rsp,0x48
  4233c2:	ret    
  4233c3:	nop    DWORD PTR [rax]
  4233c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233d0:	sub    rsp,0x48
  4233d4:	lea    rax,[rip+0x2d50e]        # 0x4508e9
  4233db:	lea    rdx,[rip+0x280d1]        # 0x44b4b3
  4233e2:	lea    r9,[rip+0x2fd03]        # 0x4530ec
  4233e9:	lea    r8,[rip+0x26601]        # 0x4499f1
  4233f0:	mov    QWORD PTR [rsp+0x38],rax
  4233f5:	mov    QWORD PTR [rsp+0x28],rax
  4233fa:	lea    rax,[rip+0x2bb8d]        # 0x44ef8e
  423401:	mov    QWORD PTR [rsp+0x30],rdx
  423406:	lea    rdx,[rip+0x2fcf3]        # 0x453100
  42340d:	mov    QWORD PTR [rsp+0x20],rax
  423412:	call   0x427dd8
  423417:	nop
  423418:	add    rsp,0x48
  42341c:	ret    
  42341d:	nop    DWORD PTR [rax]
  423420:	push   rdi
  423421:	push   rsi
  423422:	push   rbx
  423423:	sub    rsp,0x1e0
  42342a:	lea    rax,[rip+0x2f373]        # 0x4527a4
  423431:	lea    rdx,[rip+0x2f3e1]        # 0x452819
  423438:	lea    r11,[rip+0x2f381]        # 0x4527c0
  42343f:	lea    r10,[rip+0x2f3bf]        # 0x452805
  423446:	lea    r9,[rip+0x2f3eb]        # 0x452838
  42344d:	lea    r8,[rip+0x26b8c]        # 0x449fe0
  423454:	mov    QWORD PTR [rsp+0x1c8],rax
  42345c:	lea    rax,[rip+0x2f348]        # 0x4527ab
  423463:	lea    rbx,[rip+0x27e40]        # 0x44b2aa
  42346a:	lea    rsi,[rip+0x2f3b5]        # 0x452826
  423471:	lea    rdi,[rip+0x2f34f]        # 0x4527c7
  423478:	mov    QWORD PTR [rsp+0x1a8],r11
  423480:	mov    QWORD PTR [rsp+0x1c0],rax
  423488:	lea    rax,[rip+0x2f323]        # 0x4527b2
  42348f:	mov    QWORD PTR [rsp+0x178],r10
  423497:	mov    QWORD PTR [rsp+0x198],rdi
  42349f:	mov    QWORD PTR [rsp+0x168],r10
  4234a7:	mov    QWORD PTR [rsp+0x1b8],rax
  4234af:	lea    rax,[rip+0x2f303]        # 0x4527b9
  4234b6:	mov    QWORD PTR [rsp+0x160],rdx
  4234be:	mov    QWORD PTR [rsp+0x148],r9
  4234c6:	mov    QWORD PTR [rsp+0x140],r8
  4234ce:	mov    QWORD PTR [rsp+0x1b0],rax
  4234d6:	lea    rax,[rip+0x2703c]        # 0x44a519
  4234dd:	mov    QWORD PTR [rsp+0x130],r9
  4234e5:	mov    QWORD PTR [rsp+0x128],r8
  4234ed:	mov    QWORD PTR [rsp+0x110],r9
  4234f5:	mov    QWORD PTR [rsp+0x1a0],rax
  4234fd:	lea    rax,[rip+0x2f2d3]        # 0x4527d7
  423504:	mov    QWORD PTR [rsp+0x108],r8
  42350c:	mov    QWORD PTR [rsp+0x100],rdx
  423514:	mov    QWORD PTR [rsp+0xf0],r9
  42351c:	lea    r9,[rip+0x264ce]        # 0x4499f1
  423523:	mov    QWORD PTR [rsp+0x190],rax
  42352b:	lea    rax,[rip+0x2f2b8]        # 0x4527ea
  423532:	mov    QWORD PTR [rsp+0xe8],r8
  42353a:	mov    QWORD PTR [rsp+0xe0],rdx
  423542:	mov    QWORD PTR [rsp+0xd0],rdi
  42354a:	lea    r8,[rip+0x2c72d]        # 0x44fc7e
  423551:	mov    QWORD PTR [rsp+0x188],rax
  423559:	lea    rax,[rip+0x2f296]        # 0x4527f6
  423560:	mov    QWORD PTR [rsp+0x1d0],rbx
  423568:	mov    QWORD PTR [rsp+0x150],rsi
  423570:	mov    QWORD PTR [rsp+0x138],rsi
  423578:	lea    rdi,[rip+0x27f34]        # 0x44b4b3
  42357f:	mov    QWORD PTR [rsp+0x180],rax
  423587:	lea    rax,[rip+0x2f281]        # 0x45280f
  42358e:	mov    QWORD PTR [rsp+0x120],rsi
  423596:	mov    QWORD PTR [rsp+0x170],rax
  42359e:	lea    rax,[rip+0x2c7d5]        # 0x44fd7a
  4235a5:	mov    QWORD PTR [rsp+0x158],rax
  4235ad:	mov    QWORD PTR [rsp+0x118],rax
  4235b5:	mov    QWORD PTR [rsp+0xf8],rax
  4235bd:	mov    QWORD PTR [rsp+0xd8],rax
  4235c5:	mov    QWORD PTR [rsp+0xc8],rdx
  4235cd:	mov    QWORD PTR [rsp+0xc0],rax
  4235d5:	mov    QWORD PTR [rsp+0xa8],rax
  4235dd:	lea    rax,[rip+0x2f264]        # 0x452848
  4235e4:	mov    QWORD PTR [rsp+0xb0],rdx
  4235ec:	lea    rdx,[rip+0x2ecb5]        # 0x4522a8
  4235f3:	mov    QWORD PTR [rsp+0x68],r9
  4235f8:	mov    QWORD PTR [rsp+0x60],r11
  4235fd:	mov    QWORD PTR [rsp+0x98],rax
  423605:	lea    rax,[rip+0x2d2dd]        # 0x4508e9
  42360c:	mov    QWORD PTR [rsp+0x40],r9
  423611:	mov    QWORD PTR [rsp+0x30],r10
  423616:	mov    QWORD PTR [rsp+0x20],r9
  42361b:	mov    QWORD PTR [rsp+0x88],rax
  423623:	mov    QWORD PTR [rsp+0x78],rax
  423628:	lea    rax,[rip+0x2b95f]        # 0x44ef8e
  42362f:	mov    QWORD PTR [rsp+0xb8],r11
  423637:	mov    QWORD PTR [rsp+0xa0],rbx
  42363f:	mov    QWORD PTR [rsp+0x70],rax
  423644:	lea    rax,[rip+0x2f21c]        # 0x452867
  42364b:	mov    QWORD PTR [rsp+0x90],rbx
  423653:	mov    QWORD PTR [rsp+0x80],rdi
  42365b:	mov    QWORD PTR [rsp+0x58],rax
  423660:	lea    rax,[rip+0x2f212]        # 0x452879
  423667:	mov    QWORD PTR [rsp+0x50],rax
  42366c:	lea    rax,[rip+0x2afc6]        # 0x44e639
  423673:	mov    QWORD PTR [rsp+0x48],rax
  423678:	mov    QWORD PTR [rsp+0x38],rax
  42367d:	lea    rax,[rip+0x2c6c1]        # 0x44fd45
  423684:	mov    QWORD PTR [rsp+0x28],rax
  423689:	call   0x427dd8
  42368e:	nop
  42368f:	add    rsp,0x1e0
  423696:	pop    rbx
  423697:	pop    rsi
  423698:	pop    rdi
  423699:	ret    
  42369a:	nop
  42369b:	nop
  42369c:	nop
  42369d:	nop
  42369e:	nop
  42369f:	nop
  4236a0:	push   rsi
  4236a1:	push   rbx
  4236a2:	sub    rsp,0x468
  4236a9:	mov    rbx,rcx
  4236ac:	call   0x42a400
  4236b1:	cmp    rax,0x3
  4236b5:	ja     0x423701
  4236b7:	lea    rdx,[rsp+0x20]
  4236bc:	mov    rcx,rbx
  4236bf:	call   0x4269b0
  4236c4:	test   eax,eax
  4236c6:	js     0x423780
  4236cc:	movzx  edx,WORD PTR [rsp+0x26]
  4236d1:	mov    eax,0xffffffff
  4236d6:	mov    ecx,edx
  4236d8:	and    cx,0xf000
  4236dd:	cmp    cx,0x8000
  4236e2:	jne    0x4236f7
  4236e4:	test   dl,0x40
  4236e7:	je     0x4236f7
  4236e9:	and    dx,0x100
  4236ee:	cmp    dx,0x1
  4236f2:	sbb    eax,eax
  4236f4:	and    eax,0xfffffffe
  4236f7:	add    rsp,0x468
  4236fe:	pop    rbx
  4236ff:	pop    rsi
  423700:	ret    
  423701:	lea    rcx,[rbx+rax*1-0x4]
  423706:	lea    rdx,[rip+0x2fac3]        # 0x4531d0
  42370d:	call   0x427790
  423712:	test   eax,eax
  423714:	je     0x4236b7
  423716:	lea    rsi,[rsp+0x50]
  42371b:	mov    rdx,rbx
  42371e:	mov    r8d,0x400
  423724:	mov    rcx,rsi
  423727:	call   0x424a90
  42372c:	mov    rdx,rsi
  42372f:	mov    r8d,DWORD PTR [rdx]
  423732:	add    rdx,0x4
  423736:	lea    eax,[r8-0x1010101]
  42373d:	not    r8d
  423740:	and    eax,r8d
  423743:	and    eax,0x80808080
  423748:	je     0x42372f
  42374a:	mov    ecx,eax
  42374c:	mov    rbx,rsi
  42374f:	shr    ecx,0x10
  423752:	test   eax,0x8080
  423757:	cmove  eax,ecx
  42375a:	lea    rcx,[rdx+0x2]
  42375e:	cmove  rdx,rcx
  423762:	add    al,al
  423764:	sbb    rdx,0x3
  423768:	mov    DWORD PTR [rdx],0x6578652e
  42376e:	mov    BYTE PTR [rdx+0x4],0x0
  423772:	jmp    0x4236b7
  423777:	nop    WORD PTR [rax+rax*1+0x0]
  423780:	mov    eax,0xffffffff
  423785:	jmp    0x4236f7
  42378a:	nop    WORD PTR [rax+rax*1+0x0]
  423790:	push   r15
  423792:	push   r14
  423794:	push   r13
  423796:	push   r12
  423798:	push   rbp
  423799:	push   rdi
  42379a:	push   rsi
  42379b:	push   rbx
  42379c:	sub    rsp,0x838
  4237a3:	lea    rdi,[rsp+0x30]
  4237a8:	mov    rbx,rcx
  4237ab:	mov    rsi,rdx
  4237ae:	mov    edx,0x400
  4237b3:	mov    rcx,rdi
  4237b6:	call   0x42a370
  4237bb:	test   rax,rax
  4237be:	je     0x423a41
  4237c4:	mov    rcx,rbx
  4237c7:	call   0x426c00
  4237cc:	test   rax,rax
  4237cf:	je     0x423860
  4237d5:	movzx  ecx,BYTE PTR [rbx]
  4237d8:	cmp    cl,0x5c
  4237db:	je     0x423840
  4237dd:	cmp    cl,0x2f
  4237e0:	je     0x423840
  4237e2:	call   QWORD PTR [rip+0x39514]        # 0x45ccfc
  4237e8:	test   eax,eax
  4237ea:	je     0x4237f2
  4237ec:	cmp    BYTE PTR [rbx+0x1],0x3a
  4237f0:	je     0x423830
  4237f2:	mov    r8,rbx
  4237f5:	mov    rdx,rdi
  4237f8:	mov    rcx,rsi
  4237fb:	call   0x426ce0
  423800:	mov    rcx,rsi
  423803:	call   0x426d80
  423808:	mov    rcx,rsi
  42380b:	call   0x4236a0
  423810:	test   eax,eax
  423812:	jne    0x4239a0
  423818:	xor    eax,eax
  42381a:	add    rsp,0x838
  423821:	pop    rbx
  423822:	pop    rsi
  423823:	pop    rdi
  423824:	pop    rbp
  423825:	pop    r12
  423827:	pop    r13
  423829:	pop    r14
  42382b:	pop    r15
  42382d:	ret    
  42382e:	xchg   ax,ax
  423830:	movzx  eax,BYTE PTR [rbx+0x2]
  423834:	cmp    al,0x5c
  423836:	je     0x423840
  423838:	cmp    al,0x2f
  42383a:	jne    0x4237f2
  42383c:	nop    DWORD PTR [rax+0x0]
  423840:	mov    r8d,0x400
  423846:	mov    rdx,rbx
  423849:	mov    rcx,rsi
  42384c:	call   0x42a3f0
  423851:	mov    BYTE PTR [rsi+0x3ff],0x0
  423858:	jmp    0x423800
  42385a:	nop    WORD PTR [rax+rax*1+0x0]
  423860:	mov    r8,rbx
  423863:	mov    rdx,rdi
  423866:	mov    rcx,rsi
  423869:	call   0x426ce0
  42386e:	mov    rcx,rsi
  423871:	call   0x4236a0
  423876:	test   eax,eax
  423878:	je     0x423818
  42387a:	lea    rcx,[rip+0x2f994]        # 0x453215
  423881:	call   0x42a4d0
  423886:	test   rax,rax
  423889:	mov    r14,rax
  42388c:	je     0x423a6d
  423892:	cmp    BYTE PTR [rax],0x0
  423895:	je     0x423a6d
  42389b:	mov    r12,rax
  42389e:	lea    r13,[rsp+0x430]
  4238a6:	mov    r15d,0x1
  4238ac:	jmp    0x4238cf
  4238ae:	xchg   ax,ax
  4238b0:	test   eax,eax
  4238b2:	je     0x42381a
  4238b8:	cmp    BYTE PTR [rbp+0x0],0x0
  4238bc:	je     0x423a6d
  4238c2:	test   r12,r12
  4238c5:	je     0x423aa3
  4238cb:	lea    r12,[rbp+0x1]
  4238cf:	mov    rcx,r12
  4238d2:	call   0x426c30
  4238d7:	test   rax,rax
  4238da:	mov    rbp,rax
  4238dd:	je     0x423a30
  4238e3:	mov    r9,r15
  4238e6:	mov    eax,0x400
  4238eb:	sub    r9,r12
  4238ee:	add    r9,rbp
  4238f1:	cmp    r9,0x400
  4238f8:	cmovg  r9,rax
  4238fc:	test   r9,r9
  4238ff:	jne    0x423a03
  423905:	movzx  ecx,BYTE PTR [rsp+0x430]
  42390d:	cmp    cl,0x5c
  423910:	je     0x4239f0
  423916:	cmp    cl,0x2f
  423919:	je     0x4239f0
  42391f:	call   QWORD PTR [rip+0x393d7]        # 0x45ccfc
  423925:	test   eax,eax
  423927:	je     0x423937
  423929:	cmp    BYTE PTR [rsp+0x431],0x3a
  423931:	je     0x4239d6
  423937:	mov    r8,r13
  42393a:	mov    rdx,rdi
  42393d:	mov    rcx,rsi
  423940:	call   0x426ce0
  423945:	mov    r8,rbx
  423948:	mov    rdx,rsi
  42394b:	mov    rcx,rsi
  42394e:	call   0x426ce0
  423953:	mov    rcx,rsi
  423956:	call   0x426d80
  42395b:	mov    rcx,rsi
  42395e:	call   0x4236a0
  423963:	cmp    eax,0xfffffffe
  423966:	jne    0x4238b0
  42396c:	call   QWORD PTR [rip+0x39242]        # 0x45cbb4
  423972:	lea    rdx,[rip+0x2f8c8]        # 0x453241
  423979:	lea    rcx,[rax+0x60]
  42397d:	mov    r8,rsi
  423980:	call   0x426370
  423985:	call   QWORD PTR [rip+0x39229]        # 0x45cbb4
  42398b:	lea    rdx,[rax+0x60]
  42398f:	mov    ecx,0xa
  423994:	call   0x42a500
  423999:	jmp    0x4238b8
  42399e:	xchg   ax,ax
  4239a0:	mov    rbx,QWORD PTR [rip+0x3920d]        # 0x45cbb4
  4239a7:	call   rbx
  4239a9:	lea    rdx,[rip+0x2f851]        # 0x453201
  4239b0:	lea    rcx,[rax+0x60]
  4239b4:	mov    r8,rsi
  4239b7:	call   0x426370
  4239bc:	call   rbx
  4239be:	lea    rdx,[rax+0x60]
  4239c2:	mov    ecx,0xa
  4239c7:	call   0x42a500
  4239cc:	mov    eax,0xffffffff
  4239d1:	jmp    0x42381a
  4239d6:	movzx  eax,BYTE PTR [rsp+0x432]
  4239de:	cmp    al,0x5c
  4239e0:	je     0x4239f0
  4239e2:	cmp    al,0x2f
  4239e4:	jne    0x423937
  4239ea:	nop    WORD PTR [rax+rax*1+0x0]
  4239f0:	mov    r8,rbx
  4239f3:	mov    rdx,r13
  4239f6:	mov    rcx,rsi
  4239f9:	call   0x426ce0
  4239fe:	jmp    0x423953
  423a03:	mov    r8,r9
  423a06:	mov    rdx,r12
  423a09:	mov    rcx,r13
  423a0c:	mov    QWORD PTR [rsp+0x28],r9
  423a11:	call   0x42a3f0
  423a16:	mov    r9,QWORD PTR [rsp+0x28]
  423a1b:	mov    BYTE PTR [rsp+r9*1+0x42f],0x0
  423a24:	jmp    0x423905
  423a29:	nop    DWORD PTR [rax+0x0]
  423a30:	mov    rcx,r12
  423a33:	call   0x42a400
  423a38:	lea    rbp,[r12+rax*1]
  423a3c:	jmp    0x4238e3
  423a41:	call   QWORD PTR [rip+0x391a5]        # 0x45cbec
  423a47:	mov    ecx,DWORD PTR [rax]
  423a49:	call   0x42a408
  423a4e:	mov    rsi,rax
  423a51:	mov    rbx,QWORD PTR [rip+0x3915c]        # 0x45cbb4
  423a58:	call   rbx
  423a5a:	mov    r8,rsi
  423a5d:	lea    rcx,[rax+0x60]
  423a61:	lea    rdx,[rip+0x2f770]        # 0x4531d8
  423a68:	jmp    0x4239b7
  423a6d:	mov    rsi,QWORD PTR [rip+0x39140]        # 0x45cbb4
  423a74:	call   rsi
  423a76:	lea    rdx,[rip+0x2f7a3]        # 0x453220
  423a7d:	lea    rcx,[rax+0x60]
  423a81:	mov    r8,rbx
  423a84:	call   0x426370
  423a89:	call   rsi
  423a8b:	lea    rdx,[rax+0x60]
  423a8f:	mov    ecx,0xa
  423a94:	call   0x42a500
  423a99:	mov    eax,0xffffffff
  423a9e:	jmp    0x42381a
  423aa3:	mov    r12,r14
  423aa6:	jmp    0x4238cf
  423aab:	nop    DWORD PTR [rax+rax*1+0x0]
  423ab0:	push   r15
  423ab2:	push   r14
  423ab4:	push   r13
  423ab6:	push   r12
  423ab8:	push   rbp
  423ab9:	push   rdi
  423aba:	push   rsi
  423abb:	push   rbx
  423abc:	sub    rsp,0x598
  423ac3:	mov    rsi,rdx
  423ac6:	mov    rdx,r9
  423ac9:	mov    rbp,r8
  423acc:	mov    rbx,r9
  423acf:	call   0x423790
  423ad4:	test   eax,eax
  423ad6:	js     0x423cad
  423adc:	mov    rcx,rbx
  423adf:	call   0x426c60
  423ae4:	mov    rcx,rbx
  423ae7:	mov    BYTE PTR [rax],0x0
  423aea:	call   0x426d80
  423aef:	mov    rcx,rbx
  423af2:	call   0x42a400
  423af7:	mov    r10d,0x400
  423afd:	lea    rcx,[rbx+rax*1]
  423b01:	lea    r8,[rip+0x2f754]        # 0x45325c
  423b08:	mov    rdx,r10
  423b0b:	mov    r9,rsi
  423b0e:	sub    rdx,rax
  423b11:	lea    rax,[rip+0x2f6b8]        # 0x4531d0
  423b18:	mov    QWORD PTR [rsp+0x20],rax
  423b1d:	call   0x426220
  423b22:	mov    rcx,rbx
  423b25:	call   0x4236a0
  423b2a:	test   eax,eax
  423b2c:	jne    0x423cad
  423b32:	lea    rsi,[rsp+0x190]
  423b3a:	lea    r8,[rip+0x2f721]        # 0x453262
  423b41:	mov    r9,rbx
  423b44:	mov    edx,0x400
  423b49:	mov    rcx,rsi
  423b4c:	call   0x426220
  423b51:	xor    r9d,r9d
  423b54:	mov    DWORD PTR [rsp+0x70],0x18
  423b5c:	mov    DWORD PTR [rsp+0x80],0x1
  423b67:	mov    QWORD PTR [rsp+0x78],0x0
  423b70:	lea    rdx,[rsp+0x60]
  423b75:	lea    rcx,[rsp+0x58]
  423b7a:	lea    r8,[rsp+0x70]
  423b7f:	call   QWORD PTR [rip+0x38e7f]        # 0x45ca04
  423b85:	test   eax,eax
  423b87:	je     0x423cad
  423b8d:	mov    rbx,QWORD PTR [rip+0x38ec0]        # 0x45ca54
  423b94:	call   rbx
  423b96:	mov    rdi,QWORD PTR [rsp+0x58]
  423b9b:	mov    r12,rax
  423b9e:	call   rbx
  423ba0:	mov    DWORD PTR [rsp+0x30],0x2
  423ba8:	mov    rcx,rax
  423bab:	mov    DWORD PTR [rsp+0x28],0x0
  423bb3:	mov    DWORD PTR [rsp+0x20],0x0
  423bbb:	lea    r9,[rsp+0x68]
  423bc0:	mov    r8,r12
  423bc3:	mov    rdx,rdi
  423bc6:	call   QWORD PTR [rip+0x38e58]        # 0x45ca24
  423bcc:	test   eax,eax
  423bce:	mov    rcx,QWORD PTR [rsp+0x58]
  423bd3:	je     0x423e90
  423bd9:	mov    r12,QWORD PTR [rip+0x38e0c]        # 0x45c9ec
  423be0:	xor    ebx,ebx
  423be2:	call   r12
  423be5:	lea    r8,[rsp+0x120]
  423bed:	mov    rax,rbx
  423bf0:	mov    ecx,0xd
  423bf5:	lea    rdx,[rsp+0x90]
  423bfd:	xor    r9d,r9d
  423c00:	mov    QWORD PTR [rsp+0x90],0x0
  423c0c:	mov    rdi,r8
  423c0f:	mov    QWORD PTR [rsp+0x98],0x0
  423c1b:	mov    QWORD PTR [rsp+0xa0],0x0
  423c27:	rep stos QWORD PTR es:[rdi],rax
  423c2a:	mov    rax,QWORD PTR [rsp+0x60]
  423c2f:	mov    QWORD PTR [rsp+0x48],rdx
  423c34:	mov    rdx,rsi
  423c37:	mov    QWORD PTR [rsp+0x40],r8
  423c3c:	mov    DWORD PTR [rsp+0x120],0x68
  423c47:	xor    r8d,r8d
  423c4a:	mov    DWORD PTR [rsp+0x15c],0x100
  423c55:	mov    QWORD PTR [rsp+0x170],0xffffffffffffffff
  423c61:	mov    QWORD PTR [rsp+0x180],rax
  423c69:	mov    QWORD PTR [rsp+0x178],rax
  423c71:	mov    QWORD PTR [rsp+0x38],0x0
  423c7a:	mov    QWORD PTR [rsp+0x30],0x0
  423c83:	mov    DWORD PTR [rsp+0x28],0x0
  423c8b:	mov    DWORD PTR [rsp+0x20],0x1
  423c93:	call   QWORD PTR [rip+0x38d73]        # 0x45ca0c
  423c99:	test   eax,eax
  423c9b:	jne    0x423cd0
  423c9d:	mov    rcx,QWORD PTR [rsp+0x60]
  423ca2:	call   r12
  423ca5:	mov    rcx,QWORD PTR [rsp+0x68]
  423caa:	call   r12
  423cad:	mov    eax,0xffffffff
  423cb2:	add    rsp,0x598
  423cb9:	pop    rbx
  423cba:	pop    rsi
  423cbb:	pop    rdi
  423cbc:	pop    rbp
  423cbd:	pop    r12
  423cbf:	pop    r13
  423cc1:	pop    r14
  423cc3:	pop    r15
  423cc5:	ret    
  423cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cd0:	lea    rsi,[rsp+0xb0]
  423cd8:	mov    rax,rbx
  423cdb:	mov    ecx,0xc
  423ce0:	lea    r14,[rsp+0x54]
  423ce5:	mov    r13,QWORD PTR [rip+0x38e00]        # 0x45caec
  423cec:	mov    rdi,rsi
  423cef:	mov    rbx,rsi
  423cf2:	lea    r15,[rsi+0x63]
  423cf6:	rep stos QWORD PTR es:[rdi],rax
  423cf9:	mov    DWORD PTR [rdi],0x0
  423cff:	mov    rdi,QWORD PTR [rip+0x38e6e]        # 0x45cb74
  423d06:	jmp    0x423d5f
  423d08:	nop    DWORD PTR [rax+rax*1+0x0]
  423d10:	mov    rax,rsi
  423d13:	mov    QWORD PTR [rsp+0x20],0x0
  423d1c:	mov    r9,r14
  423d1f:	sub    rax,rbx
  423d22:	mov    rdx,rbx
  423d25:	mov    rcx,QWORD PTR [rsp+0x68]
  423d2a:	lea    r8d,[rax+0x64]
  423d2e:	call   r13
  423d31:	test   eax,eax
  423d33:	je     0x423d77
  423d35:	mov    rcx,rbx
  423d38:	call   0x42a400
  423d3d:	mov    ecx,DWORD PTR [rsp+0x54]
  423d41:	add    rbx,rax
  423d44:	test   ecx,ecx
  423d46:	je     0x423d77
  423d48:	mov    edx,0xa
  423d4d:	mov    rcx,rsi
  423d50:	call   0x42a428
  423d55:	test   rax,rax
  423d58:	jne    0x423d77
  423d5a:	cmp    rbx,r15
  423d5d:	jae    0x423d77
  423d5f:	mov    DWORD PTR [rsp+0x54],0x0
  423d67:	mov    edx,0x2710
  423d6c:	mov    rcx,QWORD PTR [rsp+0x68]
  423d71:	call   rdi
  423d73:	test   eax,eax
  423d75:	je     0x423d10
  423d77:	cmp    rbx,rsi
  423d7a:	je     0x423ef0
  423d80:	mov    edx,0xa
  423d85:	mov    rcx,rsi
  423d88:	call   0x42a428
  423d8d:	test   rax,rax
  423d90:	je     0x423d96
  423d92:	mov    BYTE PTR [rax+0x1],0x0
  423d96:	mov    rax,rsi
  423d99:	mov    ecx,DWORD PTR [rax]
  423d9b:	add    rax,0x4
  423d9f:	lea    edx,[rcx-0x1010101]
  423da5:	not    ecx
  423da7:	and    edx,ecx
  423da9:	and    edx,0x80808080
  423daf:	je     0x423d99
  423db1:	mov    ecx,edx
  423db3:	shr    ecx,0x10
  423db6:	test   edx,0x8080
  423dbc:	cmove  edx,ecx
  423dbf:	lea    rcx,[rax+0x2]
  423dc3:	cmove  rax,rcx
  423dc7:	add    dl,dl
  423dc9:	sbb    rax,0x3
  423dcd:	sub    rax,rsi
  423dd0:	cmp    eax,0x1
  423dd3:	movsxd rcx,eax
  423dd6:	jle    0x423ea5
  423ddc:	cdqe   
  423dde:	lea    rdx,[rsi+rax*1-0x2]
  423de3:	cmp    BYTE PTR [rdx],0xd
  423de6:	je     0x423ec0
  423dec:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  423df4:	cmp    al,0xa
  423df6:	mov    rbx,rsi
  423df9:	je     0x423e41
  423dfb:	mov    rax,rsi
  423dfe:	mov    ecx,DWORD PTR [rax]
  423e00:	add    rax,0x4
  423e04:	lea    edx,[rcx-0x1010101]
  423e0a:	not    ecx
  423e0c:	and    edx,ecx
  423e0e:	and    edx,0x80808080
  423e14:	je     0x423dfe
  423e16:	mov    ecx,edx
  423e18:	shr    ecx,0x10
  423e1b:	test   edx,0x8080
  423e21:	cmove  edx,ecx
  423e24:	lea    rcx,[rax+0x2]
  423e28:	cmove  rax,rcx
  423e2c:	add    dl,dl
  423e2e:	sbb    rax,0x3
  423e32:	sub    rax,rsi
  423e35:	mov    edx,0xa
  423e3a:	mov    rbx,rsi
  423e3d:	mov    WORD PTR [rsi+rax*1],dx
  423e41:	mov    rcx,QWORD PTR [rsp+0x90]
  423e49:	call   r12
  423e4c:	mov    rcx,QWORD PTR [rsp+0x98]
  423e54:	call   r12
  423e57:	mov    rcx,QWORD PTR [rsp+0x60]
  423e5c:	call   r12
  423e5f:	mov    rcx,QWORD PTR [rsp+0x68]
  423e64:	call   r12
  423e67:	test   rbx,rbx
  423e6a:	je     0x423cad
  423e70:	mov    rdx,rbp
  423e73:	mov    rcx,rsi
  423e76:	call   0x42a420
  423e7b:	mov    edx,0xfffffffe
  423e80:	test   eax,eax
  423e82:	cmovne eax,edx
  423e85:	jmp    0x423cb2
  423e8a:	nop    WORD PTR [rax+rax*1+0x0]
  423e90:	mov    rbx,QWORD PTR [rip+0x38b55]        # 0x45c9ec
  423e97:	call   rbx
  423e99:	mov    rcx,QWORD PTR [rsp+0x60]
  423e9e:	call   rbx
  423ea0:	jmp    0x423cad
  423ea5:	test   eax,eax
  423ea7:	je     0x423e35
  423ea9:	movzx  eax,BYTE PTR [rsp+rcx*1+0xaf]
  423eb1:	jmp    0x423df4
  423eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ec0:	lea    rax,[rsi+rax*1-0x1]
  423ec5:	cmp    BYTE PTR [rax],0xa
  423ec8:	jne    0x423dfb
  423ece:	mov    BYTE PTR [rdx],0xa
  423ed1:	mov    BYTE PTR [rax],0x0
  423ed4:	lea    eax,[rcx-0x1]
  423ed7:	cdqe   
  423ed9:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  423ee1:	jmp    0x423df4
  423ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ef0:	xor    ebx,ebx
  423ef2:	jmp    0x423e41
  423ef7:	nop    WORD PTR [rax+rax*1+0x0]
  423f00:	push   rdi
  423f01:	push   rsi
  423f02:	push   rbx
  423f03:	sub    rsp,0x20
  423f07:	call   QWORD PTR [rip+0x38d17]        # 0x45cc24
  423f0d:	mov    ebx,eax
  423f0f:	xor    eax,eax
  423f11:	test   ebx,ebx
  423f13:	je     0x423f5a
  423f15:	cmp    ebx,0xffffffff
  423f18:	je     0x423f62
  423f1a:	mov    ecx,ebx
  423f1c:	call   0x424760
  423f21:	mov    rdi,QWORD PTR [rip+0x38c8c]        # 0x45cbb4
  423f28:	mov    rsi,rax
  423f2b:	call   rdi
  423f2d:	lea    rdx,[rip+0x2f348]        # 0x45327c
  423f34:	lea    rcx,[rax+0x60]
  423f38:	mov    r8,rsi
  423f3b:	call   0x426370
  423f40:	call   rdi
  423f42:	lea    rdx,[rax+0x60]
  423f46:	mov    ecx,0xa
  423f4b:	call   0x42a500
  423f50:	mov    rcx,rsi
  423f53:	call   0x42a4e8
  423f58:	mov    eax,ebx
  423f5a:	add    rsp,0x20
  423f5e:	pop    rbx
  423f5f:	pop    rsi
  423f60:	pop    rdi
  423f61:	ret    
  423f62:	call   QWORD PTR [rip+0x38c84]        # 0x45cbec
  423f68:	mov    ecx,DWORD PTR [rax]
  423f6a:	call   0x42a408
  423f6f:	mov    rsi,QWORD PTR [rip+0x38c3e]        # 0x45cbb4
  423f76:	mov    rdi,rax
  423f79:	call   rsi
  423f7b:	lea    rdx,[rip+0x2f2e8]        # 0x45326a
  423f82:	lea    rcx,[rax+0x60]
  423f86:	mov    r8,rdi
  423f89:	call   0x426370
  423f8e:	call   rsi
  423f90:	lea    rdx,[rax+0x60]
  423f94:	mov    ecx,0xa
  423f99:	call   0x42a500
  423f9e:	mov    eax,ebx
  423fa0:	add    rsp,0x20
  423fa4:	pop    rbx
  423fa5:	pop    rsi
  423fa6:	pop    rdi
  423fa7:	ret    
  423fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  423fb0:	push   rdi
  423fb1:	push   rsi
  423fb2:	push   rbx
  423fb3:	sub    rsp,0xc30
  423fba:	lea    rdi,[rip+0x2f2be]        # 0x45327f
  423fc1:	mov    rbx,rcx
  423fc4:	mov    rsi,rdx
  423fc7:	mov    ecx,0xd
  423fcc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423fce:	jne    0x424003
  423fd0:	lea    rsi,[rsp+0x420]
  423fd8:	mov    rcx,rbx
  423fdb:	mov    rdx,rsi
  423fde:	call   0x423790
  423fe3:	test   eax,eax
  423fe5:	js     0x423ff8
  423fe7:	lea    rcx,[rip+0x2f29f]        # 0x45328d
  423fee:	call   0x42a4d0
  423ff3:	test   rax,rax
  423ff6:	je     0x424013
  423ff8:	add    rsp,0xc30
  423fff:	pop    rbx
  424000:	pop    rsi
  424001:	pop    rdi
  424002:	ret    
  424003:	lea    rdx,[rip+0x2f282]        # 0x45328c
  42400a:	xor    ecx,ecx
  42400c:	call   0x425290
  424011:	jmp    0x423fd0
  424013:	lea    rdi,[rsp+0x20]
  424018:	lea    rbx,[rsp+0x820]
  424020:	mov    rcx,rsi
  424023:	mov    rdx,rdi
  424026:	call   0x4275b0
  42402b:	lea    r8,[rip+0x2f268]        # 0x45329a
  424032:	mov    r9,rdi
  424035:	mov    edx,0x40e
  42403a:	mov    rcx,rbx
  42403d:	call   0x426220
  424042:	lea    rcx,[rbx+0xd]
  424046:	call   0x426d80
  42404b:	mov    rcx,rbx
  42404e:	call   0x42a390
  424053:	mov    rcx,rax
  424056:	call   0x425070
  42405b:	jmp    0x423ff8
  42405d:	nop    DWORD PTR [rax]
  424060:	push   r15
  424062:	push   r14
  424064:	push   r13
  424066:	push   r12
  424068:	push   rbp
  424069:	push   rdi
  42406a:	push   rsi
  42406b:	push   rbx
  42406c:	sub    rsp,0x78
  424070:	xor    r9d,r9d
  424073:	xor    r8d,r8d
  424076:	mov    edx,0x6
  42407b:	lea    r12,[rsp+0x4c]
  424080:	mov    rdi,rcx
  424083:	mov    DWORD PTR [rsp+0x4c],0x0
  42408b:	mov    rbx,QWORD PTR [rip+0x38932]        # 0x45c9c4
  424092:	mov    QWORD PTR [rsp+0x20],r12
  424097:	call   rbx
  424099:	test   eax,eax
  42409b:	jne    0x4240f0
  42409d:	mov    rbp,QWORD PTR [rip+0x389d8]        # 0x45ca7c
  4240a4:	call   rbp
  4240a6:	cmp    eax,0x7a
  4240a9:	je     0x424100
  4240ab:	call   rbp
  4240ad:	mov    rbx,QWORD PTR [rip+0x38b00]        # 0x45cbb4
  4240b4:	mov    esi,eax
  4240b6:	call   rbx
  4240b8:	lea    rdx,[rip+0x2f249]        # 0x453308
  4240bf:	lea    rcx,[rax+0x60]
  4240c3:	mov    r8d,esi
  4240c6:	call   0x426370
  4240cb:	call   rbx
  4240cd:	lea    rdx,[rax+0x60]
  4240d1:	mov    ecx,0xa
  4240d6:	xor    ebx,ebx
  4240d8:	call   0x42a500
  4240dd:	mov    eax,ebx
  4240df:	add    rsp,0x78
  4240e3:	pop    rbx
  4240e4:	pop    rsi
  4240e5:	pop    rdi
  4240e6:	pop    rbp
  4240e7:	pop    r12
  4240e9:	pop    r13
  4240eb:	pop    r14
  4240ed:	pop    r15
  4240ef:	ret    
  4240f0:	mov    rax,QWORD PTR ds:0x0
  4240f8:	ud2    
  4240fa:	nop    WORD PTR [rax+rax*1+0x0]
  424100:	mov    edx,DWORD PTR [rsp+0x4c]
  424104:	mov    ecx,0x40
  424109:	mov    r13,QWORD PTR [rip+0x389ac]        # 0x45cabc
  424110:	call   r13
  424113:	test   rax,rax
  424116:	mov    rsi,rax
  424119:	je     0x4244c3
  42411f:	mov    QWORD PTR [rsp+0x20],r12
  424124:	mov    r9d,DWORD PTR [rsp+0x4c]
  424129:	mov    r8,rax
  42412c:	mov    edx,0x6
  424131:	mov    rcx,rdi
  424134:	call   rbx
  424136:	test   eax,eax
  424138:	je     0x4243f0
  42413e:	lea    rdx,[rsp+0x60]
  424143:	mov    r9d,0x2
  424149:	mov    r8d,0xc
  42414f:	mov    rcx,QWORD PTR [rsi]
  424152:	call   QWORD PTR [rip+0x3885c]        # 0x45c9b4
  424158:	test   eax,eax
  42415a:	jne    0x4241a0
  42415c:	call   rbp
  42415e:	mov    rbx,QWORD PTR [rip+0x38a4f]        # 0x45cbb4
  424165:	mov    edi,eax
  424167:	call   rbx
  424169:	lea    rdx,[rip+0x2f1d8]        # 0x453348
  424170:	lea    rcx,[rax+0x60]
  424174:	mov    r8d,edi
  424177:	call   0x426370
  42417c:	call   rbx
  42417e:	lea    rdx,[rax+0x60]
  424182:	mov    ecx,0xa
  424187:	xor    ebx,ebx
  424189:	call   0x42a500
  42418e:	mov    rdi,QWORD PTR [rip+0x3892f]        # 0x45cac4
  424195:	mov    rcx,rsi
  424198:	call   rdi
  42419a:	jmp    0x4240dd
  42419f:	nop
  4241a0:	lea    r12,[rsp+0x58]
  4241a5:	xor    r9d,r9d
  4241a8:	xor    r8d,r8d
  4241ab:	mov    edx,0x1
  4241b0:	mov    rcx,rdi
  4241b3:	mov    QWORD PTR [rsp+0x20],r12
  4241b8:	call   rbx
  4241ba:	test   eax,eax
  4241bc:	jne    0x424230
  4241be:	call   rbp
  4241c0:	cmp    eax,0x7a
  4241c3:	je     0x424394
  4241c9:	call   rbp
  4241cb:	mov    rbx,QWORD PTR [rip+0x389e2]        # 0x45cbb4
  4241d2:	mov    edi,eax
  4241d4:	call   rbx
  4241d6:	lea    rdx,[rip+0x2f12b]        # 0x453308
  4241dd:	lea    rcx,[rax+0x60]
  4241e1:	mov    r8d,edi
  4241e4:	call   0x426370
  4241e9:	call   rbx
  4241eb:	lea    rdx,[rax+0x60]
  4241ef:	mov    ecx,0xa
  4241f4:	call   0x42a500
  4241f9:	mov    rdi,QWORD PTR [rip+0x388c4]        # 0x45cac4
  424200:	call   rbp
  424202:	mov    ebp,eax
  424204:	call   rbx
  424206:	lea    rdx,[rip+0x2f253]        # 0x453460
  42420d:	lea    rcx,[rax+0x60]
  424211:	mov    r8d,ebp
  424214:	call   0x426370
  424219:	call   rbx
  42421b:	lea    rdx,[rax+0x60]
  42421f:	mov    ecx,0xa
  424224:	xor    ebx,ebx
  424226:	call   0x42a500
  42422b:	jmp    0x424195
  424230:	mov    QWORD PTR [rsp+0x30],0x0
  424239:	mov    QWORD PTR [rsp+0x20],r12
  42423e:	mov    r9d,DWORD PTR [rsp+0x58]
  424243:	mov    edx,0x1
  424248:	mov    r8,QWORD PTR [rsp+0x30]
  42424d:	mov    rcx,rdi
  424250:	call   rbx
  424252:	test   eax,eax
  424254:	je     0x424350
  42425a:	mov    ebx,DWORD PTR [rsp+0x64]
  42425e:	mov    rax,QWORD PTR [rsp+0x30]
  424263:	mov    rcx,QWORD PTR [rax]
  424266:	call   QWORD PTR [rip+0x38750]        # 0x45c9bc
  42426c:	lea    edx,[rbx+rax*1+0x8]
  424270:	mov    ecx,0x40
  424275:	mov    DWORD PTR [rsp+0x3c],edx
  424279:	call   r13
  42427c:	test   rax,rax
  42427f:	mov    r13,rax
  424282:	je     0x424480
  424288:	mov    r8d,0x2
  42428e:	mov    edx,DWORD PTR [rsp+0x3c]
  424292:	mov    rcx,r13
  424295:	call   QWORD PTR [rip+0x38739]        # 0x45c9d4
  42429b:	test   eax,eax
  42429d:	je     0x4243d0
  4242a3:	mov    eax,DWORD PTR [rsp+0x60]
  4242a7:	xor    ebx,ebx
  4242a9:	mov    r14,QWORD PTR [rip+0x386fc]        # 0x45c9ac
  4242b0:	mov    r15,QWORD PTR [rip+0x386ed]        # 0x45c9a4
  4242b7:	test   eax,eax
  4242b9:	jg     0x4242f4
  4242bb:	jmp    0x424410
  4242c0:	mov    r9,QWORD PTR [rsp+0x58]
  4242c5:	mov    r8d,0xffffffff
  4242cb:	mov    edx,0x2
  4242d0:	mov    rcx,r13
  4242d3:	movzx  eax,WORD PTR [r9+0x2]
  4242d8:	mov    DWORD PTR [rsp+0x20],eax
  4242dc:	call   r15
  4242df:	test   eax,eax
  4242e1:	je     0x424460
  4242e7:	add    ebx,0x1
  4242ea:	cmp    DWORD PTR [rsp+0x60],ebx
  4242ee:	jle    0x424410
  4242f4:	mov    r8,r12
  4242f7:	mov    edx,ebx
  4242f9:	mov    rcx,QWORD PTR [rsi]
  4242fc:	call   r14
  4242ff:	test   eax,eax
  424301:	jne    0x4242c0
  424303:	call   rbp
  424305:	mov    rbx,QWORD PTR [rip+0x388a8]        # 0x45cbb4
  42430c:	mov    edi,eax
  42430e:	call   rbx
  424310:	lea    rdx,[rip+0x2f091]        # 0x4533a8
  424317:	lea    rcx,[rax+0x60]
  42431b:	mov    r8d,edi
  42431e:	call   0x426370
  424323:	call   rbx
  424325:	lea    rdx,[rax+0x60]
  424329:	mov    ecx,0xa
  42432e:	xor    ebx,ebx
  424330:	call   0x42a500
  424335:	mov    rcx,QWORD PTR [rsp+0x30]
  42433a:	mov    rdi,QWORD PTR [rip+0x38783]        # 0x45cac4
  424341:	call   rdi
  424343:	mov    rcx,r13
  424346:	call   rdi
  424348:	jmp    0x424195
  42434d:	nop    DWORD PTR [rax]
  424350:	mov    rcx,QWORD PTR [rsp+0x30]
  424355:	mov    rdi,QWORD PTR [rip+0x38768]        # 0x45cac4
  42435c:	call   rdi
  42435e:	call   rbp
  424360:	mov    rbx,QWORD PTR [rip+0x3884d]        # 0x45cbb4
  424367:	mov    r12d,eax
  42436a:	call   rbx
  42436c:	lea    rdx,[rip+0x2ef65]        # 0x4532d8
  424373:	lea    rcx,[rax+0x60]
  424377:	mov    r8d,r12d
  42437a:	call   0x426370
  42437f:	call   rbx
  424381:	lea    rdx,[rax+0x60]
  424385:	mov    ecx,0xa
  42438a:	call   0x42a500
  42438f:	jmp    0x424200
  424394:	mov    edx,DWORD PTR [rsp+0x58]
  424398:	mov    ecx,0x40
  42439d:	call   r13
  4243a0:	test   rax,rax
  4243a3:	mov    QWORD PTR [rsp+0x30],rax
  4243a8:	jne    0x424239
  4243ae:	mov    edi,DWORD PTR [rsp+0x58]
  4243b2:	mov    rbx,QWORD PTR [rip+0x387fb]        # 0x45cbb4
  4243b9:	call   rbx
  4243bb:	lea    rdx,[rip+0x2eeee]        # 0x4532b0
  4243c2:	lea    rcx,[rax+0x60]
  4243c6:	mov    r8d,edi
  4243c9:	jmp    0x4241e4
  4243ce:	xchg   ax,ax
  4243d0:	call   rbp
  4243d2:	mov    edi,eax
  4243d4:	mov    rbx,QWORD PTR [rip+0x387d9]        # 0x45cbb4
  4243db:	call   rbx
  4243dd:	mov    r8d,edi
  4243e0:	lea    rcx,[rax+0x60]
  4243e4:	lea    rdx,[rip+0x2ef8d]        # 0x453378
  4243eb:	jmp    0x42431e
  4243f0:	call   rbp
  4243f2:	mov    edi,eax
  4243f4:	mov    rbx,QWORD PTR [rip+0x387b9]        # 0x45cbb4
  4243fb:	call   rbx
  4243fd:	mov    r8d,edi
  424400:	lea    rcx,[rax+0x60]
  424404:	lea    rdx,[rip+0x2eecd]        # 0x4532d8
  42440b:	jmp    0x424177
  424410:	mov    rax,QWORD PTR [rsp+0x30]
  424415:	mov    r9d,0x10000000
  42441b:	mov    r8d,0x1
  424421:	mov    edx,0x2
  424426:	mov    rcx,r13
  424429:	mov    rax,QWORD PTR [rax]
  42442c:	mov    QWORD PTR [rsp+0x20],rax
  424431:	call   QWORD PTR [rip+0x38565]        # 0x45c99c
  424437:	test   eax,eax
  424439:	jne    0x4244e3
  42443f:	call   rbp
  424441:	mov    edi,eax
  424443:	mov    rbx,QWORD PTR [rip+0x3876a]        # 0x45cbb4
  42444a:	call   rbx
  42444c:	mov    r8d,edi
  42444f:	lea    rcx,[rax+0x60]
  424453:	lea    rdx,[rip+0x2ef9e]        # 0x4533f8
  42445a:	jmp    0x42431e
  42445f:	nop
  424460:	call   rbp
  424462:	mov    edi,eax
  424464:	mov    rbx,QWORD PTR [rip+0x38749]        # 0x45cbb4
  42446b:	call   rbx
  42446d:	mov    r8d,edi
  424470:	lea    rcx,[rax+0x60]
  424474:	lea    rdx,[rip+0x2ef55]        # 0x4533d0
  42447b:	jmp    0x42431e
  424480:	mov    rbx,QWORD PTR [rip+0x3872d]        # 0x45cbb4
  424487:	call   rbx
  424489:	mov    r8d,DWORD PTR [rsp+0x3c]
  42448e:	lea    rcx,[rax+0x60]
  424492:	lea    rdx,[rip+0x2ee17]        # 0x4532b0
  424499:	call   0x426370
  42449e:	call   rbx
  4244a0:	lea    rdx,[rax+0x60]
  4244a4:	mov    ecx,0xa
  4244a9:	xor    ebx,ebx
  4244ab:	call   0x42a500
  4244b0:	mov    rcx,QWORD PTR [rsp+0x30]
  4244b5:	mov    rdi,QWORD PTR [rip+0x38608]        # 0x45cac4
  4244bc:	call   rdi
  4244be:	jmp    0x424195
  4244c3:	mov    esi,DWORD PTR [rsp+0x4c]
  4244c7:	mov    rbx,QWORD PTR [rip+0x386e6]        # 0x45cbb4
  4244ce:	call   rbx
  4244d0:	lea    rdx,[rip+0x2edd9]        # 0x4532b0
  4244d7:	lea    rcx,[rax+0x60]
  4244db:	mov    r8d,esi
  4244de:	jmp    0x4240c6
  4244e3:	mov    QWORD PTR [rsp+0x50],r13
  4244e8:	mov    r9d,DWORD PTR [rsp+0x3c]
  4244ed:	lea    r8,[rsp+0x50]
  4244f2:	mov    edx,0x6
  4244f7:	mov    rcx,rdi
  4244fa:	mov    ebx,0x1
  4244ff:	call   QWORD PTR [rip+0x384d7]        # 0x45c9dc
  424505:	test   eax,eax
  424507:	jne    0x424335
  42450d:	call   rbp
  42450f:	mov    edi,eax
  424511:	mov    rbx,QWORD PTR [rip+0x3869c]        # 0x45cbb4
  424518:	call   rbx
  42451a:	mov    r8d,edi
  42451d:	lea    rcx,[rax+0x60]
  424521:	lea    rdx,[rip+0x2ef08]        # 0x453430
  424528:	jmp    0x42431e
  42452d:	nop
  42452e:	nop
  42452f:	nop
  424530:	push   rdi
  424531:	push   rsi
  424532:	push   rbx
  424533:	sub    rsp,0x30
  424537:	mov    rsi,QWORD PTR [rip+0x386ae]        # 0x45cbec
  42453e:	mov    rdi,rcx
  424541:	mov    rbx,rdx
  424544:	mov    QWORD PTR [rsp+0x28],r8
  424549:	mov    QWORD PTR [rsp+0x20],r9
  42454e:	call   rsi
  424550:	mov    r9,QWORD PTR [rsp+0x20]
  424555:	mov    r8,QWORD PTR [rsp+0x28]
  42455a:	mov    rdx,rbx
  42455d:	mov    DWORD PTR [rax],0x0
  424563:	mov    rcx,rdi
  424566:	call   0x426200
  42456b:	test   eax,eax
  42456d:	js     0x4245a0
  42456f:	lea    rcx,[rbx-0x1]
  424573:	movsxd rdx,eax
  424576:	cmp    rdx,rcx
  424579:	jb     0x4245c5
  42457b:	cmp    rbx,rdx
  42457e:	jae    0x4245a8
  424580:	cmp    eax,0x3ffffffd
  424585:	jg     0x4245a8
  424587:	add    eax,0x2
  42458a:	movsxd rdx,eax
  42458d:	mov    rax,rdx
  424590:	add    rsp,0x30
  424594:	pop    rbx
  424595:	pop    rsi
  424596:	pop    rdi
  424597:	ret    
  424598:	nop    DWORD PTR [rax+rax*1+0x0]
  4245a0:	call   rsi
  4245a2:	mov    eax,DWORD PTR [rax]
  4245a4:	test   eax,eax
  4245a6:	jne    0x4245d0
  4245a8:	cmp    rbx,0x3ffffffe
  4245af:	ja     0x424606
  4245b1:	lea    rax,[rbx+rbx*1]
  4245b5:	cmp    rbx,0x1ffffffe
  4245bc:	mov    edx,0x3fffffff
  4245c1:	cmovbe rdx,rax
  4245c5:	mov    rax,rdx
  4245c8:	add    rsp,0x30
  4245cc:	pop    rbx
  4245cd:	pop    rsi
  4245ce:	pop    rdi
  4245cf:	ret    
  4245d0:	call   rsi
  4245d2:	cmp    DWORD PTR [rax],0xc
  4245d5:	je     0x4245a8
  4245d7:	call   rsi
  4245d9:	mov    ecx,DWORD PTR [rax]
  4245db:	call   0x42a408
  4245e0:	mov    rbx,rax
  4245e3:	call   QWORD PTR [rip+0x385cb]        # 0x45cbb4
  4245e9:	lea    rdx,[rip+0x2eea0]        # 0x453490
  4245f0:	lea    rcx,[rax+0x60]
  4245f4:	mov    r8,rbx
  4245f7:	call   0x426370
  4245fc:	mov    ecx,0x1
  424601:	call   0x42a540
  424606:	call   QWORD PTR [rip+0x385a8]        # 0x45cbb4
  42460c:	lea    rdx,[rip+0x2ee93]        # 0x4534a6
  424613:	lea    rcx,[rax+0x60]
  424617:	call   0x426370
  42461c:	mov    ecx,0x1
  424621:	call   0x42a540
  424626:	nop
  424627:	nop    WORD PTR [rax+rax*1+0x0]
  424630:	push   r12
  424632:	push   rbp
  424633:	push   rdi
  424634:	push   rsi
  424635:	push   rbx
  424636:	sub    rsp,0x30
  42463a:	mov    ebx,0x80
  42463f:	mov    QWORD PTR [rsp+0x68],rdx
  424644:	mov    QWORD PTR [rsp+0x70],r8
  424649:	mov    r12,rcx
  42464c:	mov    QWORD PTR [rsp+0x78],r9
  424651:	lea    rbp,[rsp+0x68]
  424656:	jmp    0x42466b
  424658:	nop    DWORD PTR [rax+rax*1+0x0]
  424660:	mov    rcx,rsi
  424663:	mov    rbx,rdi
  424666:	call   0x4249a0
  42466b:	mov    rcx,rbx
  42466e:	call   0x424980
  424673:	mov    r9,rbp
  424676:	mov    r8,r12
  424679:	mov    rdx,rbx
  42467c:	mov    rcx,rax
  42467f:	mov    rsi,rax
  424682:	mov    QWORD PTR [rsp+0x28],rbp
  424687:	call   0x424530
  42468c:	cmp    rbx,rax
  42468f:	mov    rdi,rax
  424692:	jbe    0x424660
  424694:	mov    rax,rsi
  424697:	add    rsp,0x30
  42469b:	pop    rbx
  42469c:	pop    rsi
  42469d:	pop    rdi
  42469e:	pop    rbp
  42469f:	pop    r12
  4246a1:	ret    
  4246a2:	nop
  4246a3:	nop
  4246a4:	nop
  4246a5:	nop
  4246a6:	nop
  4246a7:	nop
  4246a8:	nop
  4246a9:	nop
  4246aa:	nop
  4246ab:	nop
  4246ac:	nop
  4246ad:	nop
  4246ae:	nop
  4246af:	nop
  4246b0:	push   rbx
  4246b1:	sub    rsp,0x30
  4246b5:	mov    QWORD PTR [rcx],0x0
  4246bc:	lea    rdx,[rsp+0x2c]
  4246c1:	mov    rbx,rcx
  4246c4:	mov    DWORD PTR [rsp+0x2c],0x101
  4246cc:	lea    rcx,[rip+0x35cad]        # 0x45a380
  4246d3:	call   QWORD PTR [rip+0x382f3]        # 0x45c9cc
  4246d9:	test   eax,eax
  4246db:	lea    rdx,[rip+0x35c9e]        # 0x45a380
  4246e2:	je     0x4246f0
  4246e4:	mov    rax,rdx
  4246e7:	add    rsp,0x30
  4246eb:	pop    rbx
  4246ec:	ret    
  4246ed:	nop    DWORD PTR [rax]
  4246f0:	call   QWORD PTR [rip+0x38386]        # 0x45ca7c
  4246f6:	lea    rcx,[rip+0x2edc3]        # 0x4534c0
  4246fd:	mov    edx,eax
  4246ff:	call   0x424630
  424704:	xor    edx,edx
  424706:	mov    QWORD PTR [rbx],rax
  424709:	jmp    0x4246e4
  42470b:	nop    DWORD PTR [rax+rax*1+0x0]
  424710:	push   rsi
  424711:	push   rbx
  424712:	sub    rsp,0x38
  424716:	mov    rbx,rcx
  424719:	lea    rcx,[rsp+0x28]
  42471e:	call   0x4246b0
  424723:	test   rax,rax
  424726:	je     0x42472f
  424728:	add    rsp,0x38
  42472c:	pop    rbx
  42472d:	pop    rsi
  42472e:	ret    
  42472f:	mov    rsi,QWORD PTR [rsp+0x28]
  424734:	call   QWORD PTR [rip+0x3847a]        # 0x45cbb4
  42473a:	lea    rdx,[rip+0x2eda8]        # 0x4534e9
  424741:	lea    rcx,[rax+0x60]
  424745:	mov    r8,rbx
  424748:	mov    r9,rsi
  42474b:	call   0x426370
  424750:	mov    ecx,0x1
  424755:	call   0x42a540
  42475a:	nop
  42475b:	nop
  42475c:	nop
  42475d:	nop
  42475e:	nop
  42475f:	nop
  424760:	push   rbx
  424761:	sub    rsp,0x220
  424768:	test   ecx,0xffffff00
  42476e:	je     0x4247a0
  424770:	lea    rbx,[rsp+0x20]
  424775:	lea    r8,[rip+0x2eddc]        # 0x453558
  42477c:	mov    r9d,ecx
  42477f:	mov    edx,0x200
  424784:	mov    rcx,rbx
  424787:	call   0x426220
  42478c:	mov    rcx,rbx
  42478f:	call   0x4249c0
  424794:	add    rsp,0x220
  42479b:	pop    rbx
  42479c:	ret    
  42479d:	nop    DWORD PTR [rax]
  4247a0:	cmp    ecx,0x7e
  4247a3:	je     0x4247e3
  4247a5:	cmp    ecx,0x7f
  4247a8:	jne    0x4247c5
  4247aa:	lea    rbx,[rsp+0x20]
  4247af:	lea    r8,[rip+0x2ed61]        # 0x453517
  4247b6:	mov    edx,0x200
  4247bb:	mov    rcx,rbx
  4247be:	call   0x426220
  4247c3:	jmp    0x42478c
  4247c5:	lea    rbx,[rsp+0x20]
  4247ca:	lea    r8,[rip+0x2ed5f]        # 0x453530
  4247d1:	mov    r9d,ecx
  4247d4:	mov    edx,0x200
  4247d9:	mov    rcx,rbx
  4247dc:	call   0x426220
  4247e1:	jmp    0x42478c
  4247e3:	lea    rbx,[rsp+0x20]
  4247e8:	lea    r8,[rip+0x2ed11]        # 0x453500
  4247ef:	mov    edx,0x200
  4247f4:	mov    rcx,rbx
  4247f7:	call   0x426220
  4247fc:	jmp    0x42478c
  4247fe:	nop
  4247ff:	nop
  424800:	sub    rsp,0x28
  424804:	mov    eax,0x1
  424809:	test   rcx,rcx
  42480c:	cmove  rcx,rax
  424810:	call   0x42a4a0
  424815:	test   rax,rax
  424818:	je     0x42481f
  42481a:	add    rsp,0x28
  42481e:	ret    
  42481f:	call   QWORD PTR [rip+0x3838f]        # 0x45cbb4
  424825:	lea    rdx,[rip+0x2ed64]        # 0x453590
  42482c:	lea    rcx,[rax+0x60]
  424830:	call   0x426370
  424835:	mov    ecx,0x1
  42483a:	call   0x42a540
  42483f:	nop
  424840:	push   rsi
  424841:	push   rbx
  424842:	sub    rsp,0x28
  424846:	mov    rbx,rcx
  424849:	call   0x424800
  42484e:	mov    rsi,rax
  424851:	or     rax,rbx
  424854:	test   al,0x3
  424856:	jne    0x424890
  424858:	cmp    rbx,0x400
  42485f:	ja     0x424890
  424861:	add    rbx,rsi
  424864:	mov    rdx,rsi
  424867:	cmp    rsi,rbx
  42486a:	jae    0x424880
  42486c:	nop    DWORD PTR [rax+0x0]
  424870:	add    rdx,0x4
  424874:	mov    DWORD PTR [rdx-0x4],0x0
  42487b:	cmp    rbx,rdx
  42487e:	ja     0x424870
  424880:	mov    rax,rsi
  424883:	add    rsp,0x28
  424887:	pop    rbx
  424888:	pop    rsi
  424889:	ret    
  42488a:	nop    WORD PTR [rax+rax*1+0x0]
  424890:	mov    r8,rbx
  424893:	xor    edx,edx
  424895:	mov    rcx,rsi
  424898:	call   0x42a480
  42489d:	mov    rax,rsi
  4248a0:	add    rsp,0x28
  4248a4:	pop    rbx
  4248a5:	pop    rsi
  4248a6:	ret    
  4248a7:	nop    WORD PTR [rax+rax*1+0x0]
  4248b0:	sub    rsp,0x28
  4248b4:	test   rcx,rcx
  4248b7:	jne    0x4248c5
  4248b9:	test   rdx,rdx
  4248bc:	mov    eax,0x1
  4248c1:	cmove  rdx,rax
  4248c5:	call   0x42a460
  4248ca:	test   rax,rax
  4248cd:	je     0x4248d4
  4248cf:	add    rsp,0x28
  4248d3:	ret    
  4248d4:	call   QWORD PTR [rip+0x382da]        # 0x45cbb4
  4248da:	lea    rdx,[rip+0x2ecaf]        # 0x453590
  4248e1:	lea    rcx,[rax+0x60]
  4248e5:	call   0x426370
  4248ea:	mov    ecx,0x1
  4248ef:	call   0x42a540
  4248f4:	nop
  4248f5:	nop
  4248f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424900:	sub    rsp,0x28
  424904:	test   rcx,rcx
  424907:	je     0x424918
  424909:	call   0x42a390
  42490e:	test   rax,rax
  424911:	je     0x424938
  424913:	add    rsp,0x28
  424917:	ret    
  424918:	call   QWORD PTR [rip+0x38296]        # 0x45cbb4
  42491e:	lea    rdx,[rip+0x2ec7b]        # 0x4535a0
  424925:	lea    rcx,[rax+0x60]
  424929:	call   0x426370
  42492e:	mov    ecx,0x1
  424933:	call   0x42a540
  424938:	call   QWORD PTR [rip+0x38276]        # 0x45cbb4
  42493e:	lea    rdx,[rip+0x2ec4b]        # 0x453590
  424945:	lea    rcx,[rax+0x60]
  424949:	call   0x426370
  42494e:	mov    ecx,0x1
  424953:	call   0x42a540
  424958:	nop
  424959:	nop    DWORD PTR [rax+0x0]
  424960:	test   rcx,rcx
  424963:	je     0x424970
  424965:	jmp    0x42a4e8
  42496a:	nop    WORD PTR [rax+rax*1+0x0]
  424970:	repz ret 
  424972:	nop    DWORD PTR [rax+0x0]
  424976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424980:	jmp    0x424800
  424985:	nop
  424986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424990:	jmp    0x424840
  424995:	nop
  424996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249a0:	test   rcx,rcx
  4249a3:	je     0x4249b0
  4249a5:	jmp    0x42a4e8
  4249aa:	nop    WORD PTR [rax+rax*1+0x0]
  4249b0:	repz ret 
  4249b2:	nop    DWORD PTR [rax+0x0]
  4249b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249c0:	jmp    0x424900
  4249c5:	nop
  4249c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249d0:	jmp    0x4248b0
  4249d5:	nop
  4249d6:	nop
  4249d7:	nop
  4249d8:	nop
  4249d9:	nop
  4249da:	nop
  4249db:	nop
  4249dc:	nop
  4249dd:	nop
  4249de:	nop
  4249df:	nop
  4249e0:	push   rbx
  4249e1:	sub    rsp,0x20
  4249e5:	test   r8,r8
  4249e8:	je     0x424a81
  4249ee:	cmp    BYTE PTR [rcx],0x0
  4249f1:	je     0x424a85
  4249f7:	lea    r10,[rcx+0x1]
  4249fb:	lea    rax,[rcx+r8*1]
  4249ff:	jmp    0x424a0c
  424a01:	lea    r10,[r10+0x1]
  424a05:	cmp    BYTE PTR [r10-0x1],0x0
  424a0a:	je     0x424a60
  424a0c:	cmp    r10,rax
  424a0f:	mov    r9,r10
  424a12:	jne    0x424a01
  424a14:	sub    rax,rcx
  424a17:	mov    rbx,rax
  424a1a:	sub    r8,rbx
  424a1d:	je     0x424a6b
  424a1f:	movzx  r11d,BYTE PTR [rdx]
  424a23:	mov    r10,rdx
  424a26:	test   r11b,r11b
  424a29:	je     0x424a7c
  424a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  424a30:	cmp    r8,0x1
  424a34:	je     0x424a41
  424a36:	mov    BYTE PTR [r9],r11b
  424a39:	sub    r8,0x1
  424a3d:	add    r9,0x1
  424a41:	add    r10,0x1
  424a45:	movzx  r11d,BYTE PTR [r10]
  424a49:	test   r11b,r11b
  424a4c:	jne    0x424a30
  424a4e:	sub    r10,rdx
  424a51:	lea    rax,[r10+rbx*1]
  424a55:	mov    BYTE PTR [r9],0x0
  424a59:	add    rsp,0x20
  424a5d:	pop    rbx
  424a5e:	ret    
  424a5f:	nop
  424a60:	mov    rbx,r9
  424a63:	sub    rbx,rcx
  424a66:	sub    r8,rbx
  424a69:	jne    0x424a1f
  424a6b:	mov    rcx,rdx
  424a6e:	call   0x42a400
  424a73:	add    rax,rbx
  424a76:	add    rsp,0x20
  424a7a:	pop    rbx
  424a7b:	ret    
  424a7c:	xor    r10d,r10d
  424a7f:	jmp    0x424a51
  424a81:	xor    ebx,ebx
  424a83:	jmp    0x424a6b
  424a85:	mov    r9,rcx
  424a88:	xor    ebx,ebx
  424a8a:	jmp    0x424a1f
  424a8c:	nop
  424a8d:	nop
  424a8e:	nop
  424a8f:	nop
  424a90:	test   r8,r8
  424a93:	je     0x424ae0
  424a95:	lea    rax,[rcx+r8*1-0x1]
  424a9a:	mov    r8,rdx
  424a9d:	jmp    0x424ab6
  424a9f:	nop
  424aa0:	add    r8,0x1
  424aa4:	movzx  r9d,BYTE PTR [r8-0x1]
  424aa9:	add    rcx,0x1
  424aad:	test   r9b,r9b
  424ab0:	mov    BYTE PTR [rcx-0x1],r9b
  424ab4:	je     0x424ad0
  424ab6:	cmp    rcx,rax
  424ab9:	jne    0x424aa0
  424abb:	add    r8,0x1
  424abf:	mov    BYTE PTR [rcx],0x0
  424ac2:	cmp    BYTE PTR [r8-0x1],0x0
  424ac7:	jne    0x424ae3
  424ac9:	nop    DWORD PTR [rax+0x0]
  424ad0:	not    rdx
  424ad3:	lea    rax,[r8+rdx*1]
  424ad7:	ret    
  424ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  424ae0:	mov    r8,rdx
  424ae3:	add    r8,0x1
  424ae7:	cmp    BYTE PTR [r8-0x1],0x0
  424aec:	jne    0x424ae3
  424aee:	not    rdx
  424af1:	lea    rax,[r8+rdx*1]
  424af5:	ret    
  424af6:	nop
  424af7:	nop
  424af8:	nop
  424af9:	nop
  424afa:	nop
  424afb:	nop
  424afc:	nop
  424afd:	nop
  424afe:	nop
  424aff:	nop
  424b00:	push   r15
  424b02:	push   r14
  424b04:	push   r13
  424b06:	push   r12
  424b08:	push   rbp
  424b09:	push   rdi
  424b0a:	push   rsi
  424b0b:	push   rbx
  424b0c:	sub    rsp,0x48
  424b10:	mov    rbx,QWORD PTR [rip+0x79d9]        # 0x42c4f0
  424b17:	mov    DWORD PTR [rsp+0x90],ecx
  424b1e:	mov    r15,rdx
  424b21:	mov    rbp,r8
  424b24:	mov    r14,r9
  424b27:	movzx  r10d,BYTE PTR [rbx]
  424b2b:	test   r10b,r10b
  424b2e:	jne    0x424b7a
  424b30:	mov    r12,QWORD PTR [rip+0x2fd59]        # 0x454890
  424b37:	mov    eax,DWORD PTR [r12]
  424b3b:	cmp    eax,ecx
  424b3d:	mov    DWORD PTR [rsp+0x34],eax
  424b41:	jge    0x424dc0
  424b47:	movsxd rax,DWORD PTR [rsp+0x34]
  424b4c:	mov    rdi,QWORD PTR [rdx+rax*8]
  424b50:	cmp    BYTE PTR [rdi],0x2d
  424b53:	mov    QWORD PTR [rip+0x7996],rdi        # 0x42c4f0
  424b5a:	jne    0x424dc0
  424b60:	movzx  r10d,BYTE PTR [rdi+0x1]
  424b65:	lea    rbx,[rdi+0x1]
  424b69:	mov    QWORD PTR [rip+0x7980],rbx        # 0x42c4f0
  424b70:	cmp    r10b,0x2d
  424b74:	je     0x424c20
  424b7a:	mov    rax,QWORD PTR [rip+0x2fd1f]        # 0x4548a0
  424b81:	movsx  r13d,r10b
  424b85:	lea    rsi,[rbx+0x1]
  424b89:	mov    edx,r13d
  424b8c:	mov    rcx,rbp
  424b8f:	mov    QWORD PTR [rip+0x795a],rsi        # 0x42c4f0
  424b96:	mov    DWORD PTR [rax],r13d
  424b99:	call   0x42a428
  424b9e:	test   rax,rax
  424ba1:	je     0x424de0
  424ba7:	cmp    BYTE PTR [rax+0x1],0x3a
  424bab:	je     0x424be0
  424bad:	mov    rax,QWORD PTR [rip+0x2fcbc]        # 0x454870
  424bb4:	mov    QWORD PTR [rax],0x0
  424bbb:	cmp    BYTE PTR [rbx+0x1],0x0
  424bbf:	jne    0x424bcb
  424bc1:	mov    rax,QWORD PTR [rip+0x2fcc8]        # 0x454890
  424bc8:	add    DWORD PTR [rax],0x1
  424bcb:	mov    eax,r13d
  424bce:	add    rsp,0x48
  424bd2:	pop    rbx
  424bd3:	pop    rsi
  424bd4:	pop    rdi
  424bd5:	pop    rbp
  424bd6:	pop    r12
  424bd8:	pop    r13
  424bda:	pop    r14
  424bdc:	pop    r15
  424bde:	ret    
  424bdf:	nop
  424be0:	cmp    BYTE PTR [rbx+0x1],0x0
  424be4:	je     0x424d40
  424bea:	mov    rax,QWORD PTR [rip+0x2fc7f]        # 0x454870
  424bf1:	mov    r12,QWORD PTR [rip+0x2fc98]        # 0x454890
  424bf8:	mov    QWORD PTR [rax],rsi
  424bfb:	mov    eax,DWORD PTR [r12]
  424bff:	lea    rdi,[rip+0x2e9ca]        # 0x4535d0
  424c06:	add    eax,0x1
  424c09:	mov    DWORD PTR [r12],eax
  424c0d:	mov    QWORD PTR [rip+0x78dc],rdi        # 0x42c4f0
  424c14:	jmp    0x424bcb
  424c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c20:	cmp    BYTE PTR [rdi+0x2],0x0
  424c24:	je     0x424dae
  424c2a:	lea    rax,[rdi+0x2]
  424c2e:	lea    rdx,[rip+0x2e99c]        # 0x4535d1
  424c35:	mov    rcx,rax
  424c38:	mov    QWORD PTR [rsp+0x38],rax
  424c3d:	mov    QWORD PTR [rip+0x78ac],rax        # 0x42c4f0
  424c44:	call   0x42a410
  424c49:	mov    r13,QWORD PTR [r14]
  424c4c:	mov    QWORD PTR [rsp+0x28],rax
  424c51:	test   r13,r13
  424c54:	je     0x424e40
  424c5a:	mov    rbx,r14
  424c5d:	xor    esi,esi
  424c5f:	jmp    0x424c7a
  424c61:	add    esi,0x1
  424c64:	movsxd rbx,esi
  424c67:	shl    rbx,0x5
  424c6b:	add    rbx,r14
  424c6e:	mov    r13,QWORD PTR [rbx]
  424c71:	test   r13,r13
  424c74:	je     0x424e40
  424c7a:	mov    rcx,r13
  424c7d:	call   0x42a400
  424c82:	cmp    rax,QWORD PTR [rsp+0x28]
  424c87:	jne    0x424c61
  424c89:	mov    r8,QWORD PTR [rsp+0x28]
  424c8e:	mov    rcx,QWORD PTR [rsp+0x38]
  424c93:	mov    rdx,r13
  424c96:	call   0x42a3f8
  424c9b:	test   eax,eax
  424c9d:	mov    r13d,eax
  424ca0:	jne    0x424c61
  424ca2:	mov    r9d,DWORD PTR [rbx+0x8]
  424ca6:	test   r9d,r9d
  424ca9:	je     0x424ed0
  424caf:	mov    rax,QWORD PTR [rsp+0x28]
  424cb4:	cmp    BYTE PTR [rdi+rax*1+0x2],0x3d
  424cb9:	je     0x424f2a
  424cbf:	mov    eax,DWORD PTR [rsp+0x90]
  424cc6:	lea    r14d,[rax-0x1]
  424cca:	cmp    DWORD PTR [rsp+0x34],r14d
  424ccf:	jge    0x424ee3
  424cd5:	add    DWORD PTR [rsp+0x34],0x1
  424cda:	movsxd rax,DWORD PTR [rsp+0x34]
  424cdf:	mov    DWORD PTR [r12],eax
  424ce3:	mov    rdx,QWORD PTR [r15+rax*8]
  424ce7:	mov    rax,QWORD PTR [rip+0x2fb82]        # 0x454870
  424cee:	mov    QWORD PTR [rax],rdx
  424cf1:	mov    eax,DWORD PTR [rsp+0x34]
  424cf5:	add    eax,0x1
  424cf8:	cmp    QWORD PTR [rsp+0xb0],0x0
  424d01:	mov    DWORD PTR [r12],eax
  424d05:	je     0x424d11
  424d07:	mov    rax,QWORD PTR [rsp+0xb0]
  424d0f:	mov    DWORD PTR [rax],esi
  424d11:	lea    rax,[rip+0x2e8b8]        # 0x4535d0
  424d18:	mov    QWORD PTR [rip+0x77d1],rax        # 0x42c4f0
  424d1f:	mov    rax,QWORD PTR [rbx+0x10]
  424d23:	test   rax,rax
  424d26:	je     0x424f48
  424d2c:	mov    edx,DWORD PTR [rbx+0x18]
  424d2f:	mov    DWORD PTR [rax],edx
  424d31:	jmp    0x424bcb
  424d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d40:	mov    r12,QWORD PTR [rip+0x2fb49]        # 0x454890
  424d47:	mov    eax,DWORD PTR [r12]
  424d4b:	add    eax,0x1
  424d4e:	cmp    DWORD PTR [rsp+0x90],eax
  424d55:	mov    DWORD PTR [r12],eax
  424d59:	jg     0x424e10
  424d5f:	cmp    BYTE PTR [rbp+0x0],0x3a
  424d63:	lea    rax,[rip+0x2e866]        # 0x4535d0
  424d6a:	mov    QWORD PTR [rip+0x777f],rax        # 0x42c4f0
  424d71:	je     0x424e30
  424d77:	mov    rax,QWORD PTR [rip+0x2fb02]        # 0x454880
  424d7e:	mov    eax,DWORD PTR [rax]
  424d80:	test   eax,eax
  424d82:	je     0x424e01
  424d84:	mov    rbx,QWORD PTR [r15]
  424d87:	call   QWORD PTR [rip+0x37e27]        # 0x45cbb4
  424d8d:	lea    rdx,[rip+0x2e8a4]        # 0x453638
  424d94:	lea    rcx,[rax+0x60]
  424d98:	mov    r9d,r13d
  424d9b:	mov    r8,rbx
  424d9e:	mov    r13d,0x3f
  424da4:	call   0x426370
  424da9:	jmp    0x424bcb
  424dae:	mov    r13d,DWORD PTR [rsp+0x34]
  424db3:	add    r13d,0x1
  424db7:	mov    DWORD PTR [r12],r13d
  424dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  424dc0:	lea    rax,[rip+0x2e809]        # 0x4535d0
  424dc7:	mov    r13d,0xffffffff
  424dcd:	mov    QWORD PTR [rip+0x771c],rax        # 0x42c4f0
  424dd4:	jmp    0x424bcb
  424dd9:	nop    DWORD PTR [rax+0x0]
  424de0:	cmp    BYTE PTR [rbx+0x1],0x0
  424de4:	jne    0x424df0
  424de6:	mov    rax,QWORD PTR [rip+0x2faa3]        # 0x454890
  424ded:	add    DWORD PTR [rax],0x1
  424df0:	mov    rax,QWORD PTR [rip+0x2fa89]        # 0x454880
  424df7:	mov    edx,DWORD PTR [rax]
  424df9:	test   edx,edx
  424dfb:	jne    0x424ea2
  424e01:	mov    r13d,0x3f
  424e07:	jmp    0x424bcb
  424e0c:	nop    DWORD PTR [rax+0x0]
  424e10:	movsxd rdx,eax
  424e13:	mov    rcx,QWORD PTR [r15+rdx*8]
  424e17:	mov    rdx,QWORD PTR [rip+0x2fa52]        # 0x454870
  424e1e:	mov    QWORD PTR [rdx],rcx
  424e21:	jmp    0x424bff
  424e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e30:	mov    r13d,0x3a
  424e36:	jmp    0x424bcb
  424e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  424e40:	mov    rax,QWORD PTR [rip+0x2fa39]        # 0x454880
  424e47:	mov    ecx,DWORD PTR [rax]
  424e49:	test   ecx,ecx
  424e4b:	je     0x424e7c
  424e4d:	cmp    BYTE PTR [rbp+0x0],0x3a
  424e51:	je     0x424e7c
  424e53:	mov    rbx,QWORD PTR [r15]
  424e56:	call   QWORD PTR [rip+0x37d58]        # 0x45cbb4
  424e5c:	mov    r9,QWORD PTR [rsp+0x38]
  424e61:	lea    rcx,[rax+0x60]
  424e65:	lea    rdx,[rip+0x2e793]        # 0x4535ff
  424e6c:	mov    r8,rbx
  424e6f:	call   0x426370
  424e74:	mov    eax,DWORD PTR [r12]
  424e78:	mov    DWORD PTR [rsp+0x34],eax
  424e7c:	mov    r13d,DWORD PTR [rsp+0x34]
  424e81:	lea    rax,[rip+0x2e748]        # 0x4535d0
  424e88:	mov    QWORD PTR [rip+0x7661],rax        # 0x42c4f0
  424e8f:	add    r13d,0x1
  424e93:	mov    DWORD PTR [r12],r13d
  424e97:	mov    r13d,0x3f
  424e9d:	jmp    0x424bcb
  424ea2:	cmp    BYTE PTR [rbp+0x0],0x3a
  424ea6:	je     0x424e01
  424eac:	mov    rbx,QWORD PTR [r15]
  424eaf:	call   QWORD PTR [rip+0x37cff]        # 0x45cbb4
  424eb5:	lea    rdx,[rip+0x2e75d]        # 0x453619
  424ebc:	lea    rcx,[rax+0x60]
  424ec0:	mov    r9d,r13d
  424ec3:	mov    r8,rbx
  424ec6:	call   0x426370
  424ecb:	jmp    0x424e01
  424ed0:	mov    rax,QWORD PTR [rip+0x2f999]        # 0x454870
  424ed7:	mov    QWORD PTR [rax],0x0
  424ede:	jmp    0x424cf1
  424ee3:	cmp    BYTE PTR [rbp+0x0],0x3a
  424ee7:	je     0x424e30
  424eed:	mov    rax,QWORD PTR [rip+0x2f98c]        # 0x454880
  424ef4:	mov    r8d,DWORD PTR [rax]
  424ef7:	test   r8d,r8d
  424efa:	je     0x424e7c
  424efc:	mov    rbx,QWORD PTR [r15]
  424eff:	call   QWORD PTR [rip+0x37caf]        # 0x45cbb4
  424f05:	mov    r9,QWORD PTR [rsp+0x38]
  424f0a:	lea    rcx,[rax+0x60]
  424f0e:	lea    rdx,[rip+0x2e6c3]        # 0x4535d8
  424f15:	mov    r8,rbx
  424f18:	call   0x426370
  424f1d:	mov    eax,DWORD PTR [r12]
  424f21:	mov    DWORD PTR [rsp+0x34],eax
  424f25:	jmp    0x424e7c
  424f2a:	mov    rax,QWORD PTR [rsp+0x38]
  424f2f:	mov    rdi,QWORD PTR [rsp+0x28]
  424f34:	lea    rdx,[rax+rdi*1+0x1]
  424f39:	mov    rax,QWORD PTR [rip+0x2f930]        # 0x454870
  424f40:	mov    QWORD PTR [rax],rdx
  424f43:	jmp    0x424cf1
  424f48:	mov    r13d,DWORD PTR [rbx+0x18]
  424f4c:	jmp    0x424bcb
  424f51:	nop
  424f52:	nop
  424f53:	nop
  424f54:	nop
  424f55:	nop
  424f56:	nop
  424f57:	nop
  424f58:	nop
  424f59:	nop
  424f5a:	nop
  424f5b:	nop
  424f5c:	nop
  424f5d:	nop
  424f5e:	nop
  424f5f:	nop
  424f60:	push   rbp
  424f61:	push   rdi
  424f62:	push   rsi
  424f63:	push   rbx
  424f64:	sub    rsp,0x28
  424f68:	mov    rdi,rcx
  424f6b:	call   0x42a400
  424f70:	lea    rcx,[rax+0x3]
  424f74:	mov    rsi,rax
  424f77:	call   0x42a4a0
  424f7c:	test   rax,rax
  424f7f:	mov    rbx,rax
  424f82:	je     0x424fcc
  424f84:	lea    rcx,[rax+0x1]
  424f88:	mov    r8,rsi
  424f8b:	mov    rdx,rdi
  424f8e:	mov    BYTE PTR [rax],0x22
  424f91:	call   0x42a490
  424f96:	mov    rcx,rbx
  424f99:	mov    BYTE PTR [rbx+rsi*1+0x1],0x22
  424f9e:	mov    BYTE PTR [rbx+rsi*1+0x2],0x0
  424fa3:	call   0x42a3c0
  424fa8:	mov    rdi,QWORD PTR [rip+0x37c3d]        # 0x45cbec
  424faf:	mov    esi,eax
  424fb1:	call   rdi
  424fb3:	mov    ebp,DWORD PTR [rax]
  424fb5:	mov    rcx,rbx
  424fb8:	call   0x42a4e8
  424fbd:	call   rdi
  424fbf:	mov    DWORD PTR [rax],ebp
  424fc1:	mov    eax,esi
  424fc3:	add    rsp,0x28
  424fc7:	pop    rbx
  424fc8:	pop    rsi
  424fc9:	pop    rdi
  424fca:	pop    rbp
  424fcb:	ret    
  424fcc:	call   QWORD PTR [rip+0x37c1a]        # 0x45cbec
  424fd2:	mov    DWORD PTR [rax],0xc
  424fd8:	mov    eax,0xffffffff
  424fdd:	jmp    0x424fc3
  424fdf:	nop
  424fe0:	push   rbp
  424fe1:	push   rdi
  424fe2:	push   rsi
  424fe3:	push   rbx
  424fe4:	sub    rsp,0x28
  424fe8:	mov    rdi,rcx
  424feb:	mov    rbp,rdx
  424fee:	call   0x42a400
  424ff3:	lea    rcx,[rax+0x3]
  424ff7:	mov    rsi,rax
  424ffa:	call   0x42a4a0
  424fff:	test   rax,rax
  425002:	mov    rbx,rax
  425005:	je     0x425055
  425007:	lea    rcx,[rax+0x1]
  42500b:	mov    r8,rsi
  42500e:	mov    rdx,rdi
  425011:	mov    BYTE PTR [rax],0x22
  425014:	call   0x42a490
  425019:	mov    rdx,rbp
  42501c:	mov    rcx,rbx
  42501f:	mov    BYTE PTR [rbx+rsi*1+0x1],0x22
  425024:	mov    BYTE PTR [rbx+rsi*1+0x2],0x0
  425029:	call   QWORD PTR [rip+0x37bfd]        # 0x45cc2c
  42502f:	mov    rdi,QWORD PTR [rip+0x37bb6]        # 0x45cbec
  425036:	mov    rsi,rax
  425039:	call   rdi
  42503b:	mov    ebp,DWORD PTR [rax]
  42503d:	mov    rcx,rbx
  425040:	call   0x42a4e8
  425045:	call   rdi
  425047:	mov    DWORD PTR [rax],ebp
  425049:	mov    rax,rsi
  42504c:	add    rsp,0x28
  425050:	pop    rbx
  425051:	pop    rsi
  425052:	pop    rdi
  425053:	pop    rbp
  425054:	ret    
  425055:	call   QWORD PTR [rip+0x37b91]        # 0x45cbec
  42505b:	mov    DWORD PTR [rax],0xc
  425061:	xor    eax,eax
  425063:	jmp    0x42504c
  425065:	nop
  425066:	nop
  425067:	nop
  425068:	nop
  425069:	nop
  42506a:	nop
  42506b:	nop
  42506c:	nop
  42506d:	nop
  42506e:	nop
  42506f:	nop
  425070:	push   rsi
  425071:	push   rbx
  425072:	sub    rsp,0x28
  425076:	mov    rsi,rcx
  425079:	call   0x42a390
  42507e:	test   rax,rax
  425081:	mov    rbx,rax
  425084:	je     0x4250d8
  425086:	mov    edx,0x3d
  42508b:	mov    rcx,rax
  42508e:	call   0x42a428
  425093:	test   rax,rax
  425096:	je     0x4250d0
  425098:	cmp    BYTE PTR [rax+0x1],0x0
  42509c:	mov    BYTE PTR [rax],0x0
  42509f:	je     0x4250b2
  4250a1:	lea    rdx,[rax+0x1]
  4250a5:	mov    rcx,rbx
  4250a8:	call   QWORD PTR [rip+0x37a7e]        # 0x45cb2c
  4250ae:	test   eax,eax
  4250b0:	je     0x4250d0
  4250b2:	mov    rcx,rbx
  4250b5:	call   0x42a4e8
  4250ba:	mov    rax,QWORD PTR [rip+0x37b73]        # 0x45cc34
  4250c1:	mov    rcx,rsi
  4250c4:	add    rsp,0x28
  4250c8:	pop    rbx
  4250c9:	pop    rsi
  4250ca:	rex.W jmp rax
  4250cd:	nop    DWORD PTR [rax]
  4250d0:	mov    rcx,rbx
  4250d3:	call   0x42a4e8
  4250d8:	mov    eax,0xffffffff
  4250dd:	add    rsp,0x28
  4250e1:	pop    rbx
  4250e2:	pop    rsi
  4250e3:	ret    
  4250e4:	xchg   ax,ax
  4250e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4250f0:	push   rsi
  4250f1:	push   rbx
  4250f2:	sub    rsp,0x28
  4250f6:	mov    rsi,rcx
  4250f9:	call   0x42a400
  4250fe:	lea    rcx,[rax+0x2]
  425102:	call   0x42a4a0
  425107:	test   rax,rax
  42510a:	mov    rbx,rax
  42510d:	je     0x425140
  42510f:	lea    rdx,[rip+0x2e54a]        # 0x453660
  425116:	mov    r8,rsi
  425119:	mov    rcx,rax
  42511c:	call   0x426260
  425121:	mov    rcx,rbx
  425124:	call   0x425070
  425129:	mov    rcx,rbx
  42512c:	add    rsp,0x28
  425130:	pop    rbx
  425131:	pop    rsi
  425132:	jmp    0x42a4e8
  425137:	nop    WORD PTR [rax+rax*1+0x0]
  425140:	add    rsp,0x28
  425144:	pop    rbx
  425145:	pop    rsi
  425146:	ret    
  425147:	nop
  425148:	nop
  425149:	nop
  42514a:	nop
  42514b:	nop
  42514c:	nop
  42514d:	nop
  42514e:	nop
  42514f:	nop
  425150:	push   r15
  425152:	push   r14
  425154:	push   r13
  425156:	push   r12
  425158:	push   rbp
  425159:	push   rdi
  42515a:	push   rsi
  42515b:	push   rbx
  42515c:	sub    rsp,0x28
  425160:	mov    rsi,QWORD PTR [rcx]
  425163:	test   rsi,rsi
  425166:	je     0x42527e
  42516c:	mov    r12,rdx
  42516f:	mov    r14,rcx
  425172:	mov    r8,rcx
  425175:	xor    ebp,ebp
  425177:	nop    WORD PTR [rax+rax*1+0x0]
  425180:	mov    rdx,rsi
  425183:	mov    rcx,r12
  425186:	mov    rdi,QWORD PTR [r8+0x8]
  42518a:	mov    r13,QWORD PTR [r8+0x10]
  42518e:	call   0x42a3d8
  425193:	test   rax,rax
  425196:	mov    rbx,rax
  425199:	je     0x425251
  42519f:	test   rdi,rdi
  4251a2:	mov    rcx,rsi
  4251a5:	je     0x425270
  4251ab:	call   0x42a400
  4251b0:	lea    rcx,[rbx+rax*1]
  4251b4:	mov    rdx,rdi
  4251b7:	call   0x42a3d8
  4251bc:	test   rax,rax
  4251bf:	mov    rsi,rax
  4251c2:	je     0x425251
  4251c8:	mov    rcx,rdi
  4251cb:	call   0x42a400
  4251d0:	lea    rdi,[rsi+rax*1]
  4251d4:	mov    rcx,r13
  4251d7:	sub    rbx,r12
  4251da:	call   0x42a400
  4251df:	mov    rcx,rdi
  4251e2:	mov    rbp,rax
  4251e5:	lea    r14d,[rbp+rbx*1+0x0]
  4251ea:	call   0x42a400
  4251ef:	lea    esi,[rax+0x1]
  4251f2:	xor    eax,eax
  4251f4:	lea    r9d,[r14+rsi*1]
  4251f8:	cmp    r9d,0x64
  4251fc:	jg     0x425240
  4251fe:	lea    r15,[rip+0x352bb]        # 0x45a4c0
  425205:	movsxd rbx,ebx
  425208:	mov    rdx,r12
  42520b:	mov    r8,rbx
  42520e:	mov    rcx,r15
  425211:	call   0x42a490
  425216:	lea    rcx,[rbx+r15*1]
  42521a:	movsxd r8,ebp
  42521d:	mov    rdx,r13
  425220:	call   0x42a490
  425225:	movsxd rcx,r14d
  425228:	movsxd r8,esi
  42522b:	mov    rdx,rdi
  42522e:	add    rcx,r15
  425231:	call   0x42a490
  425236:	mov    rax,r15
  425239:	nop    DWORD PTR [rax+0x0]
  425240:	add    rsp,0x28
  425244:	pop    rbx
  425245:	pop    rsi
  425246:	pop    rdi
  425247:	pop    rbp
  425248:	pop    r12
  42524a:	pop    r13
  42524c:	pop    r14
  42524e:	pop    r15
  425250:	ret    
  425251:	add    ebp,0x1
  425254:	movsxd rax,ebp
  425257:	lea    rax,[rax+rax*2]
  42525b:	lea    r8,[r14+rax*8]
  42525f:	mov    rsi,QWORD PTR [r8]
  425262:	test   rsi,rsi
  425265:	jne    0x425180
  42526b:	mov    rax,r12
  42526e:	jmp    0x425240
  425270:	call   0x42a400
  425275:	lea    rdi,[rbx+rax*1]
  425279:	jmp    0x4251d4
  42527e:	mov    rax,rdx
  425281:	jmp    0x425240
  425283:	nop    DWORD PTR [rax]
  425286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425290:	push   rbx
  425291:	sub    rsp,0x20
  425295:	xor    eax,eax
  425297:	test   rdx,rdx
  42529a:	mov    ebx,ecx
  42529c:	je     0x4252aa
  42529e:	lea    rcx,[rip+0x2e51b]        # 0x4537c0
  4252a5:	call   0x425150
  4252aa:	mov    rdx,rax
  4252ad:	mov    ecx,ebx
  4252af:	call   0x42a450
  4252b4:	test   rax,rax
  4252b7:	je     0x4252d0
  4252b9:	lea    rcx,[rip+0x2e400]        # 0x4536c0
  4252c0:	mov    rdx,rax
  4252c3:	add    rsp,0x20
  4252c7:	pop    rbx
  4252c8:	jmp    0x425150
  4252cd:	nop    DWORD PTR [rax]
  4252d0:	xor    eax,eax
  4252d2:	add    rsp,0x20
  4252d6:	pop    rbx
  4252d7:	ret    
  4252d8:	nop
  4252d9:	nop
  4252da:	nop
  4252db:	nop
  4252dc:	nop
  4252dd:	nop
  4252de:	nop
  4252df:	nop
  4252e0:	push   rbx
  4252e1:	sub    rsp,0x20
  4252e5:	mov    rbx,rcx
  4252e8:	mov    rcx,QWORD PTR [rcx+0x8]
  4252ec:	mov    r8,QWORD PTR [rbx]
  4252ef:	sub    r8,rcx
  4252f2:	je     0x425309
  4252f4:	mov    r9,QWORD PTR [rbx+0x18]
  4252f8:	mov    edx,0x1
  4252fd:	call   0x42a4e0
  425302:	add    DWORD PTR [rbx+0x20],eax
  425305:	mov    rcx,QWORD PTR [rbx+0x8]
  425309:	mov    QWORD PTR [rbx],rcx
  42530c:	add    rsp,0x20
  425310:	pop    rbx
  425311:	ret    
  425312:	nop    DWORD PTR [rax+0x0]
  425316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425320:	push   r12
  425322:	push   rbp
  425323:	push   rdi
  425324:	push   rsi
  425325:	push   rbx
  425326:	sub    rsp,0x20
  42532a:	test   edx,edx
  42532c:	mov    rbp,rcx
  42532f:	mov    edi,edx
  425331:	mov    rbx,r8
  425334:	jle    0x42538d
  425336:	mov    rax,QWORD PTR [rbx+0x10]
  42533a:	mov    rcx,QWORD PTR [rbx]
  42533d:	test   rax,rax
  425340:	je     0x425367
  425342:	sub    rax,rcx
  425345:	test   eax,eax
  425347:	mov    r8d,eax
  42534a:	jg     0x42536a
  42534c:	cmp    QWORD PTR [rbx+0x18],0x0
  425351:	je     0x42538d
  425353:	mov    rcx,rbx
  425356:	call   0x4252e0
  42535b:	mov    rax,QWORD PTR [rbx+0x10]
  42535f:	mov    rcx,QWORD PTR [rbx]
  425362:	test   rax,rax
  425365:	jne    0x425342
  425367:	mov    r8d,edi
  42536a:	cmp    r8d,edi
  42536d:	mov    esi,r8d
  425370:	mov    rdx,rbp
  425373:	cmovg  esi,edi
  425376:	movsxd r12,esi
  425379:	sub    edi,esi
  42537b:	mov    r8,r12
  42537e:	add    rbp,r12
  425381:	call   0x42a488
  425386:	add    QWORD PTR [rbx],r12
  425389:	test   edi,edi
  42538b:	jg     0x425336
  42538d:	add    rsp,0x20
  425391:	pop    rbx
  425392:	pop    rsi
  425393:	pop    rdi
  425394:	pop    rbp
  425395:	pop    r12
  425397:	ret    
  425398:	nop    DWORD PTR [rax+rax*1+0x0]
  4253a0:	push   rbx
  4253a1:	sub    rsp,0x30
  4253a5:	mov    r8,QWORD PTR [rdx+0x10]
  4253a9:	mov    rax,QWORD PTR [rdx]
  4253ac:	mov    ebx,ecx
  4253ae:	test   r8,r8
  4253b1:	je     0x4253d4
  4253b3:	cmp    r8,rax
  4253b6:	ja     0x4253d4
  4253b8:	cmp    QWORD PTR [rdx+0x18],0x0
  4253bd:	je     0x4253dd
  4253bf:	mov    rcx,rdx
  4253c2:	mov    QWORD PTR [rsp+0x28],rdx
  4253c7:	call   0x4252e0
  4253cc:	mov    rdx,QWORD PTR [rsp+0x28]
  4253d1:	mov    rax,QWORD PTR [rdx]
  4253d4:	lea    rcx,[rax+0x1]
  4253d8:	mov    QWORD PTR [rdx],rcx
  4253db:	mov    BYTE PTR [rax],bl
  4253dd:	add    rsp,0x30
  4253e1:	pop    rbx
  4253e2:	ret    
  4253e3:	nop    DWORD PTR [rax]
  4253e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253f0:	push   rbp
  4253f1:	push   rdi
  4253f2:	push   rsi
  4253f3:	push   rbx
  4253f4:	sub    rsp,0x28
  4253f8:	mov    eax,DWORD PTR [r8]
  4253fb:	mov    ebp,ecx
  4253fd:	mov    rdi,rdx
  425400:	mov    rbx,r8
  425403:	mov    rsi,r9
  425406:	mov    ecx,DWORD PTR [rdx]
  425408:	test   eax,eax
  42540a:	jle    0x425450
  42540c:	test   ebp,ebp
  42540e:	je     0x425450
  425410:	test   ecx,ecx
  425412:	jne    0x4254a5
  425418:	nop    DWORD PTR [rax+rax*1+0x0]
  425420:	mov    rdx,rsi
  425423:	mov    ecx,ebp
  425425:	call   0x4253a0
  42542a:	mov    eax,DWORD PTR [rbx]
  42542c:	sub    eax,0x1
  42542f:	test   eax,eax
  425431:	mov    DWORD PTR [rbx],eax
  425433:	jg     0x425420
  425435:	mov    ecx,DWORD PTR [rdi]
  425437:	test   ecx,ecx
  425439:	jne    0x425488
  42543b:	nop    DWORD PTR [rax+rax*1+0x0]
  425440:	add    rsp,0x28
  425444:	pop    rbx
  425445:	pop    rsi
  425446:	pop    rdi
  425447:	pop    rbp
  425448:	ret    
  425449:	nop    DWORD PTR [rax+0x0]
  425450:	xor    edx,edx
  425452:	test   ecx,ecx
  425454:	setne  dl
  425457:	cmp    eax,edx
  425459:	jle    0x425437
  42545b:	nop    DWORD PTR [rax+rax*1+0x0]
  425460:	mov    ecx,0x20
  425465:	mov    rdx,rsi
  425468:	call   0x4253a0
  42546d:	mov    eax,DWORD PTR [rbx]
  42546f:	xor    r8d,r8d
  425472:	sub    eax,0x1
  425475:	mov    DWORD PTR [rbx],eax
  425477:	mov    ecx,DWORD PTR [rdi]
  425479:	test   ecx,ecx
  42547b:	setne  r8b
  42547f:	cmp    r8d,eax
  425482:	jl     0x425460
  425484:	test   ecx,ecx
  425486:	je     0x425440
  425488:	mov    rdx,rsi
  42548b:	call   0x4253a0
  425490:	mov    eax,DWORD PTR [rbx]
  425492:	cmp    eax,0x0
  425495:	jle    0x4254c5
  425497:	sub    eax,0x1
  42549a:	mov    DWORD PTR [rbx],eax
  42549c:	add    rsp,0x28
  4254a0:	pop    rbx
  4254a1:	pop    rsi
  4254a2:	pop    rdi
  4254a3:	pop    rbp
  4254a4:	ret    
  4254a5:	mov    rdx,r9
  4254a8:	call   0x4253a0
  4254ad:	sub    DWORD PTR [rbx],0x1
  4254b0:	mov    DWORD PTR [rdi],0x0
  4254b6:	mov    eax,DWORD PTR [rbx]
  4254b8:	test   eax,eax
  4254ba:	jg     0x425420
  4254c0:	jmp    0x425435
  4254c5:	je     0x425440
  4254cb:	add    eax,0x1
  4254ce:	mov    DWORD PTR [rbx],eax
  4254d0:	jmp    0x425440
  4254d5:	nop
  4254d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4254e0:	push   rbp
  4254e1:	push   rdi
  4254e2:	push   rsi
  4254e3:	push   rbx
  4254e4:	sub    rsp,0x78
  4254e8:	mov    edi,DWORD PTR [rsp+0xd0]
  4254ef:	mov    rsi,QWORD PTR [rsp+0xe0]
  4254f7:	sub    edx,0x58
  4254fa:	mov    DWORD PTR [rsp+0x28],0x0
  425502:	mov    DWORD PTR [rsp+0x2c],0x0
  42550a:	cmp    dl,0x20
  42550d:	ja     0x425555
  42550f:	lea    rax,[rip+0x2e38e]        # 0x4538a4
  425516:	movzx  edx,dl
  425519:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42551d:	add    rax,rdx
  425520:	jmp    rax
  425522:	sub    ebx,0x1
  425525:	mov    rdx,rsi
  425528:	movsxd rax,ebx
  42552b:	movsx  ecx,BYTE PTR [rsp+rax*1+0x30]
  425530:	call   0x4253a0
  425535:	test   ebx,ebx
  425537:	jne    0x425522
  425539:	mov    eax,DWORD PTR [rsp+0x2c]
  42553d:	test   eax,eax
  42553f:	jns    0x425555
  425541:	mov    rdx,rsi
  425544:	mov    ecx,0x20
  425549:	call   0x4253a0
  42554e:	add    DWORD PTR [rsp+0x2c],0x1
  425553:	js     0x425541
  425555:	add    rsp,0x78
  425559:	pop    rbx
  42555a:	pop    rsi
  42555b:	pop    rdi
  42555c:	pop    rbp
  42555d:	ret    
  42555e:	test   rcx,rcx
  425561:	js     0x42560a
  425567:	test   r8d,r8d
  42556a:	je     0x425574
  42556c:	mov    DWORD PTR [rsp+0x28],0x2b
  425574:	lea    r11,[rip+0x2e305]        # 0x453880
  42557b:	mov    r10d,0xa
  425581:	mov    edx,DWORD PTR [rsp+0xd8]
  425588:	test   edx,edx
  42558a:	setne  dl
  42558d:	test   edi,edi
  42558f:	sete   al
  425592:	test   dl,al
  425594:	je     0x425622
  42559a:	xor    ebx,ebx
  42559c:	test   rcx,rcx
  42559f:	jne    0x425622
  4255a5:	mov    eax,DWORD PTR [rsp+0xc0]
  4255ac:	xor    edx,edx
  4255ae:	sub    edi,ebx
  4255b0:	mov    ebp,edi
  4255b2:	cmovs  ebp,edx
  4255b5:	sub    eax,ebx
  4255b7:	sub    eax,ebp
  4255b9:	cmovs  eax,edx
  4255bc:	test   r9d,r9d
  4255bf:	mov    DWORD PTR [rsp+0x2c],eax
  4255c3:	je     0x4255c9
  4255c5:	neg    DWORD PTR [rsp+0x2c]
  4255c9:	mov    ecx,DWORD PTR [rsp+0xc8]
  4255d0:	lea    rdx,[rsp+0x28]
  4255d5:	lea    r8,[rsp+0x2c]
  4255da:	mov    r9,rsi
  4255dd:	lea    edi,[rbp-0x1]
  4255e0:	call   0x4253f0
  4255e5:	test   ebp,ebp
  4255e7:	je     0x425535
  4255ed:	nop    DWORD PTR [rax]
  4255f0:	mov    rdx,rsi
  4255f3:	mov    ecx,0x30
  4255f8:	sub    edi,0x1
  4255fb:	call   0x4253a0
  425600:	cmp    edi,0xffffffff
  425603:	jne    0x4255f0
  425605:	jmp    0x425535
  42560a:	lea    r11,[rip+0x2e26f]        # 0x453880
  425611:	mov    DWORD PTR [rsp+0x28],0x2d
  425619:	neg    rcx
  42561c:	mov    r10d,0xa
  425622:	lea    r8,[rsp+0x30]
  425627:	mov    rax,rcx
  42562a:	xor    ebx,ebx
  42562c:	nop    DWORD PTR [rax+0x0]
  425630:	xor    edx,edx
  425632:	add    ebx,0x1
  425635:	add    r8,0x1
  425639:	div    r10
  42563c:	movzx  edx,BYTE PTR [r11+rdx*1]
  425641:	mov    BYTE PTR [r8-0x1],dl
  425645:	test   rax,rax
  425648:	jne    0x425630
  42564a:	jmp    0x4255a5
  42564f:	lea    r11,[rip+0x2e22a]        # 0x453880
  425656:	mov    r10d,0x10
  42565c:	jmp    0x425581
  425661:	lea    r11,[rip+0x2e218]        # 0x453880
  425668:	mov    r10d,0x8
  42566e:	jmp    0x425581
  425673:	lea    r11,[rip+0x2e217]        # 0x453891
  42567a:	mov    r10d,0x10
  425680:	jmp    0x425581
  425685:	nop
  425686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425690:	push   r15
  425692:	push   r14
  425694:	push   r13
  425696:	push   r12
  425698:	push   rbp
  425699:	push   rdi
  42569a:	push   rsi
  42569b:	push   rbx
  42569c:	sub    rsp,0x5c8
  4256a3:	movaps XMMWORD PTR [rsp+0x590],xmm6
  4256ab:	movaps XMMWORD PTR [rsp+0x5a0],xmm7
  4256b3:	movaps XMMWORD PTR [rsp+0x5b0],xmm8
  4256bc:	lea    r10,[rsp+0xb0]
  4256c4:	mov    rbp,rdx
  4256c7:	mov    r15,rcx
  4256ca:	mov    r14,r8
  4256cd:	lea    rdx,[r10+0x44]
  4256d1:	mov    rax,r10
  4256d4:	add    rax,0x4
  4256d8:	mov    DWORD PTR [rax-0x4],0x0
  4256df:	cmp    rax,rdx
  4256e2:	jb     0x4256d4
  4256e4:	lea    r8,[rip+0x2e24d]        # 0x453938
  4256eb:	mov    rax,rbp
  4256ee:	xor    edi,edi
  4256f0:	xor    ebx,ebx
  4256f2:	mov    BYTE PTR [rsp+0x54],0x0
  4256f7:	nop    WORD PTR [rax+rax*1+0x0]
  425700:	add    rax,0x1
  425704:	movsx  edx,BYTE PTR [rax-0x1]
  425708:	test   edx,edx
  42570a:	je     0x425760
  42570c:	cmp    edx,0x25
  42570f:	jne    0x425700
  425711:	xor    r9d,r9d
  425714:	xor    r13d,r13d
  425717:	xor    r12d,r12d
  42571a:	xor    r11d,r11d
  42571d:	xor    esi,esi
  42571f:	add    rax,0x1
  425723:	movsx  ecx,BYTE PTR [rax-0x1]
  425727:	test   ecx,ecx
  425729:	mov    edx,ecx
  42572b:	je     0x425760
  42572d:	sub    edx,0x24
  425730:	cmp    dl,0x56
  425733:	ja     0x425880
  425739:	movzx  edx,dl
  42573c:	movsxd rdx,DWORD PTR [r8+rdx*4]
  425740:	add    rdx,r8
  425743:	jmp    rdx
  425745:	add    rax,0x1
  425749:	movsx  ecx,BYTE PTR [rax-0x1]
  42574d:	mov    r12d,0x1
  425753:	test   ecx,ecx
  425755:	mov    edx,ecx
  425757:	jne    0x42572d
  425759:	nop    DWORD PTR [rax+0x0]
  425760:	movzx  eax,BYTE PTR [rsp+0x54]
  425765:	test   bl,bl
  425767:	mov    BYTE PTR [rsp+0x5e],al
  42576b:	je     0x425775
  42576d:	test   al,al
  42576f:	jne    0x425a40
  425775:	test   edi,edi
  425777:	je     0x42596c
  42577d:	lea    rcx,[rsp+0x108]
  425785:	lea    r8,[rip+0x2e308]        # 0x453a94
  42578c:	add    r10,0x4
  425790:	mov    edx,0x1
  425795:	cmp    DWORD PTR [r10],0x5
  425799:	ja     0x425959
  42579f:	mov    eax,DWORD PTR [r10]
  4257a2:	movsxd rax,DWORD PTR [r8+rax*4]
  4257a6:	add    rax,r8
  4257a9:	jmp    rax
  4257ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4257b0:	test   r9d,r9d
  4257b3:	je     0x425940
  4257b9:	movsxd rdx,r9d
  4257bc:	mov    ecx,DWORD PTR [rsp+rdx*4+0xb0]
  4257c3:	cmp    ecx,0x5
  4257c6:	je     0x4257d0
  4257c8:	test   ecx,ecx
  4257ca:	jne    0x425a40
  4257d0:	cmp    edi,r9d
  4257d3:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x5
  4257de:	cmovl  edi,r9d
  4257e2:	jmp    0x425880
  4257e7:	nop    WORD PTR [rax+rax*1+0x0]
  4257f0:	lea    edx,[r11-0x1]
  4257f4:	cmp    edx,0xf
  4257f7:	ja     0x425a40
  4257fd:	test   sil,sil
  425800:	je     0x425a84
  425806:	movsxd rdx,r11d
  425809:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  425811:	ja     0x425a40
  425817:	cmp    edi,r11d
  42581a:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  425825:	mov    BYTE PTR [rsp+0x54],0x1
  42582a:	cmovl  edi,r11d
  42582e:	xor    r11d,r11d
  425831:	xor    esi,esi
  425833:	jmp    0x42571f
  425838:	nop    DWORD PTR [rax+rax*1+0x0]
  425840:	test   r13d,r13d
  425843:	jne    0x425745
  425849:	mov    r13b,0x1
  42584c:	jmp    0x42571f
  425851:	test   r9d,r9d
  425854:	je     0x425940
  42585a:	movsxd rdx,r9d
  42585d:	test   DWORD PTR [rsp+rdx*4+0xb0],0xfffffffb
  425868:	jne    0x425a40
  42586e:	cmp    edi,r9d
  425871:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x4
  42587c:	cmovl  edi,r9d
  425880:	test   sil,sil
  425883:	mov    edx,0x1
  425888:	cmovne ebx,edx
  42588b:	jmp    0x425700
  425890:	xor    r11d,r11d
  425893:	jmp    0x42571f
  425898:	nop    DWORD PTR [rax+rax*1+0x0]
  4258a0:	xor    r11d,r11d
  4258a3:	test   sil,sil
  4258a6:	mov    esi,0x1
  4258ab:	je     0x42571f
  4258b1:	mov    ebx,0x1
  4258b6:	jmp    0x42571f
  4258bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4258c0:	test   r9d,r9d
  4258c3:	je     0x425940
  4258c5:	movsxd rdx,r9d
  4258c8:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  4258d0:	ja     0x425a40
  4258d6:	cmp    edi,r9d
  4258d9:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  4258e4:	cmovl  edi,r9d
  4258e8:	jmp    0x425880
  4258ea:	nop    WORD PTR [rax+rax*1+0x0]
  4258f0:	test   r9d,r9d
  4258f3:	je     0x425940
  4258f5:	test   r12d,r12d
  4258f8:	mov    ecx,0x3
  4258fd:	je     0x425a94
  425903:	movsxd rdx,r9d
  425906:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  42590e:	cmp    ecx,r11d
  425911:	je     0x42591c
  425913:	test   r11d,r11d
  425916:	jne    0x425a40
  42591c:	cmp    edi,r9d
  42591f:	mov    DWORD PTR [rsp+rdx*4+0xb0],ecx
  425926:	cmovl  edi,r9d
  42592a:	jmp    0x425880
  42592f:	nop
  425930:	lea    edx,[r11+r11*4]
  425934:	lea    r11d,[rcx+rdx*2-0x30]
  425939:	jmp    0x42571f
  42593e:	xchg   ax,ax
  425940:	mov    ebx,0x1
  425945:	jmp    0x425880
  42594a:	nop    WORD PTR [rax+rax*1+0x0]
  425950:	mov    eax,DWORD PTR [r14]
  425953:	add    r14,0x8
  425957:	mov    DWORD PTR [rcx],eax
  425959:	add    edx,0x1
  42595c:	add    r10,0x4
  425960:	add    rcx,0x8
  425964:	cmp    edi,edx
  425966:	jge    0x425795
  42596c:	lea    rax,[rsp+0x190]
  425974:	pxor   xmm8,xmm8
  425979:	movsd  xmm7,QWORD PTR [rip+0x2e28f]        # 0x453c10
  425981:	mov    QWORD PTR [rsp+0x60],rax
  425986:	lea    rax,[rsp+0x8c]
  42598e:	mov    QWORD PTR [rsp+0x70],rax
  425993:	lea    rax,[rsp+0x88]
  42599b:	mov    QWORD PTR [rsp+0x78],rax
  4259a0:	lea    rax,[rsp+0x90]
  4259a8:	mov    QWORD PTR [rsp+0x68],rax
  4259ad:	nop    DWORD PTR [rax]
  4259b0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4259b4:	lea    rbx,[rbp+0x1]
  4259b8:	test   ecx,ecx
  4259ba:	je     0x425cba
  4259c0:	cmp    ecx,0x25
  4259c3:	jne    0x425cc1
  4259c9:	lea    rcx,[rip+0x2e0dc]        # 0x453aac
  4259d0:	xor    r12d,r12d
  4259d3:	mov    DWORD PTR [rsp+0x54],0x0
  4259db:	xor    r13d,r13d
  4259de:	xor    r9d,r9d
  4259e1:	xor    esi,esi
  4259e3:	xor    edi,edi
  4259e5:	xor    r10d,r10d
  4259e8:	mov    DWORD PTR [rsp+0x58],0x0
  4259f0:	xor    ebp,ebp
  4259f2:	xor    r8d,r8d
  4259f5:	mov    BYTE PTR [rsp+0x5f],0x0
  4259fa:	xor    r11d,r11d
  4259fd:	add    rbx,0x1
  425a01:	movsx  edx,BYTE PTR [rbx-0x1]
  425a05:	test   edx,edx
  425a07:	mov    eax,edx
  425a09:	je     0x425cba
  425a0f:	sub    eax,0x24
  425a12:	cmp    al,0x56
  425a14:	ja     0x425ca7
  425a1a:	movzx  eax,al
  425a1d:	movsxd rax,DWORD PTR [rcx+rax*4]
  425a21:	add    rax,rcx
  425a24:	jmp    rax
  425a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a30:	mov    rax,QWORD PTR [r14]
  425a33:	add    r14,0x8
  425a37:	mov    QWORD PTR [rcx],rax
  425a3a:	jmp    0x425959
  425a3f:	nop
  425a40:	mov    eax,0xffffffff
  425a45:	movaps xmm6,XMMWORD PTR [rsp+0x590]
  425a4d:	movaps xmm7,XMMWORD PTR [rsp+0x5a0]
  425a55:	movaps xmm8,XMMWORD PTR [rsp+0x5b0]
  425a5e:	add    rsp,0x5c8
  425a65:	pop    rbx
  425a66:	pop    rsi
  425a67:	pop    rdi
  425a68:	pop    rbp
  425a69:	pop    r12
  425a6b:	pop    r13
  425a6d:	pop    r14
  425a6f:	pop    r15
  425a71:	ret    
  425a72:	movsd  xmm0,QWORD PTR [r14]
  425a77:	add    r14,0x8
  425a7b:	movsd  QWORD PTR [rcx],xmm0
  425a7f:	jmp    0x425959
  425a84:	mov    r9d,r11d
  425a87:	mov    BYTE PTR [rsp+0x54],0x1
  425a8c:	xor    r11d,r11d
  425a8f:	jmp    0x42571f
  425a94:	movsxd rdx,r9d
  425a97:	cmp    r13d,0x1
  425a9b:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  425aa3:	sbb    ecx,ecx
  425aa5:	add    ecx,0x2
  425aa8:	cmp    ecx,r11d
  425aab:	jne    0x425913
  425ab1:	jmp    0x42591c
  425ab6:	mov    eax,r10d
  425ab9:	or     eax,r8d
  425abc:	mov    eax,0x30
  425ac1:	cmove  r13d,eax
  425ac5:	lea    eax,[r8+r8*4]
  425ac9:	lea    r8d,[rdx+rax*2-0x30]
  425ace:	jmp    0x4259fd
  425ad3:	mov    ebp,0x1
  425ad8:	jmp    0x4259fd
  425add:	test   r11b,r11b
  425ae0:	mov    rax,r14
  425ae3:	jne    0x425af0
  425ae5:	test   r10d,r10d
  425ae8:	cmovne r9d,r8d
  425aec:	cmove  esi,r8d
  425af0:	cmp    BYTE PTR [rsp+0x5e],0x0
  425af5:	je     0x42601c
  425afb:	movsxd rax,r12d
  425afe:	movsd  xmm6,QWORD PTR [rsp+rax*8+0x100]
  425b07:	test   r10d,r10d
  425b0a:	mov    DWORD PTR [rsp+0x88],0x0
  425b15:	mov    DWORD PTR [rsp+0x8c],0x0
  425b20:	je     0x425fb2
  425b26:	test   r9d,r9d
  425b29:	mov    ebp,0x0
  425b2e:	mov    r12d,0x15e
  425b34:	cmovns ebp,r9d
  425b38:	mov    rcx,QWORD PTR [rsp+0x68]
  425b3d:	mov    r9d,edx
  425b40:	cmp    ebp,0x15e
  425b46:	lea    rdx,[rip+0x2ddde]        # 0x45392b
  425b4d:	cmovle r12d,ebp
  425b51:	mov    r8d,r12d
  425b54:	sub    ebp,r12d
  425b57:	call   0x42a438
  425b5c:	movq   rax,xmm6
  425b61:	mov    edx,eax
  425b63:	neg    edx
  425b65:	or     edx,eax
  425b67:	shr    rax,0x20
  425b6b:	shr    edx,0x1f
  425b6e:	and    eax,0x7fffffff
  425b73:	or     eax,edx
  425b75:	mov    edx,0x7ff00000
  425b7a:	cmp    edx,eax
  425b7c:	js     0x425b9c
  425b7e:	ucomisd xmm8,xmm6
  425b83:	ja     0x42608c
  425b89:	mov    edx,DWORD PTR [rsp+0x54]
  425b8d:	test   edx,edx
  425b8f:	je     0x425b9c
  425b91:	mov    DWORD PTR [rsp+0x88],0x2b
  425b9c:	mov    rdx,QWORD PTR [rsp+0x68]
  425ba1:	mov    rcx,QWORD PTR [rsp+0x60]
  425ba6:	movq   r8,xmm6
  425bab:	movapd xmm2,xmm6
  425baf:	call   0x42a438
  425bb4:	test   ebp,ebp
  425bb6:	mov    r12d,eax
  425bb9:	jle    0x425bd6
  425bbb:	lea    eax,[rax-0x1]
  425bbe:	cdqe   
  425bc0:	movzx  eax,BYTE PTR [rsp+rax*1+0x190]
  425bc8:	sub    eax,0x30
  425bcb:	cmp    eax,0xa
  425bce:	mov    eax,0x0
  425bd3:	cmovae ebp,eax
  425bd6:	sub    esi,r12d
  425bd9:	mov    eax,0x0
  425bde:	sub    esi,ebp
  425be0:	cmovns eax,esi
  425be3:	test   edi,edi
  425be5:	mov    DWORD PTR [rsp+0x8c],eax
  425bec:	je     0x425bf5
  425bee:	neg    DWORD PTR [rsp+0x8c]
  425bf5:	mov    r8,QWORD PTR [rsp+0x70]
  425bfa:	mov    rdx,QWORD PTR [rsp+0x78]
  425bff:	mov    r9,r15
  425c02:	mov    ecx,r13d
  425c05:	call   0x4253f0
  425c0a:	test   ebp,ebp
  425c0c:	jle    0x4260a0
  425c12:	mov    rcx,QWORD PTR [rsp+0x60]
  425c17:	mov    edx,0x65
  425c1c:	call   0x42a3e8
  425c21:	test   rax,rax
  425c24:	mov    rsi,rax
  425c27:	je     0x4260b5
  425c2d:	mov    rax,QWORD PTR [rsp+0x60]
  425c32:	mov    rdx,rsi
  425c35:	mov    r8,r15
  425c38:	sub    ebp,0x1
  425c3b:	sub    rdx,rax
  425c3e:	mov    rcx,rax
  425c41:	call   0x425320
  425c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c50:	mov    rdx,r15
  425c53:	mov    ecx,0x30
  425c58:	sub    ebp,0x1
  425c5b:	call   0x4253a0
  425c60:	cmp    ebp,0xffffffff
  425c63:	jne    0x425c50
  425c65:	mov    rdx,QWORD PTR [rsp+0x60]
  425c6a:	mov    r8,r15
  425c6d:	mov    rcx,rsi
  425c70:	sub    rdx,rsi
  425c73:	add    edx,r12d
  425c76:	call   0x425320
  425c7b:	mov    eax,DWORD PTR [rsp+0x8c]
  425c82:	test   eax,eax
  425c84:	jns    0x425ca7
  425c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c90:	mov    rdx,r15
  425c93:	mov    ecx,0x20
  425c98:	call   0x4253a0
  425c9d:	add    DWORD PTR [rsp+0x8c],0x1
  425ca5:	js     0x425c90
  425ca7:	mov    rbp,rbx
  425caa:	movsx  ecx,BYTE PTR [rbp+0x0]
  425cae:	lea    rbx,[rbp+0x1]
  425cb2:	test   ecx,ecx
  425cb4:	jne    0x4259c0
  425cba:	xor    eax,eax
  425cbc:	jmp    0x425a45
  425cc1:	mov    rdx,r15
  425cc4:	mov    rbp,rbx
  425cc7:	call   0x4253a0
  425ccc:	jmp    0x4259b0
  425cd1:	test   r11b,r11b
  425cd4:	mov    rbp,rbx
  425cd7:	mov    rax,r14
  425cda:	jne    0x425ce7
  425cdc:	test   r10d,r10d
  425cdf:	cmovne r9d,r8d
  425ce3:	cmove  esi,r8d
  425ce7:	cmp    BYTE PTR [rsp+0x5e],0x0
  425cec:	je     0x425fa6
  425cf2:	movsxd rax,r12d
  425cf5:	mov    rbx,QWORD PTR [rsp+rax*8+0x100]
  425cfd:	test   r10d,r10d
  425d00:	je     0x425f59
  425d06:	movsxd rdx,r9d
  425d09:	test   rdx,rdx
  425d0c:	je     0x426187
  425d12:	cmp    BYTE PTR [rbx],0x0
  425d15:	je     0x426187
  425d1b:	lea    rax,[rbx+0x1]
  425d1f:	add    rdx,rbx
  425d22:	jmp    0x425d32
  425d24:	add    rax,0x1
  425d28:	cmp    BYTE PTR [rax-0x1],0x0
  425d2c:	je     0x426084
  425d32:	cmp    rax,rdx
  425d35:	mov    r12,rax
  425d38:	jne    0x425d24
  425d3a:	mov    r12d,eax
  425d3d:	sub    r12d,ebx
  425d40:	jmp    0x425f64
  425d45:	cmp    BYTE PTR [rsp+0x5e],0x0
  425d4a:	mov    rax,r14
  425d4d:	je     0x426029
  425d53:	movsxd rax,r12d
  425d56:	mov    r8,QWORD PTR [rsp+rax*8+0x100]
  425d5e:	mov    rsi,QWORD PTR [rsp+0x60]
  425d63:	lea    rdx,[rip+0x2dbbe]        # 0x453928
  425d6a:	mov    rbp,rbx
  425d6d:	mov    rcx,rsi
  425d70:	call   0x42a438
  425d75:	mov    r8,r15
  425d78:	mov    edx,eax
  425d7a:	mov    rcx,rsi
  425d7d:	call   0x425320
  425d82:	jmp    0x4259b0
  425d87:	mov    eax,DWORD PTR [rsp+0x58]
  425d8b:	test   eax,eax
  425d8d:	jne    0x425ad3
  425d93:	mov    DWORD PTR [rsp+0x58],0x1
  425d9b:	jmp    0x4259fd
  425da0:	test   r11b,r11b
  425da3:	mov    rbp,rbx
  425da6:	mov    rax,r14
  425da9:	jne    0x425db2
  425dab:	test   r10d,r10d
  425dae:	cmove  esi,r8d
  425db2:	cmp    BYTE PTR [rsp+0x5e],0x0
  425db7:	je     0x426005
  425dbd:	movsxd rax,r12d
  425dc0:	movzx  ebx,BYTE PTR [rsp+rax*8+0x100]
  425dc8:	sub    esi,0x1
  425dcb:	mov    eax,0x0
  425dd0:	cmovns eax,esi
  425dd3:	mov    edx,eax
  425dd5:	mov    eax,edi
  425dd7:	neg    eax
  425dd9:	xor    eax,edx
  425ddb:	add    edi,eax
  425ddd:	test   edi,edi
  425ddf:	jle    0x42612a
  425de5:	mov    rdx,r15
  425de8:	mov    ecx,0x20
  425ded:	call   0x4253a0
  425df2:	sub    edi,0x1
  425df5:	jne    0x425de5
  425df7:	mov    rdx,r15
  425dfa:	mov    ecx,ebx
  425dfc:	call   0x4253a0
  425e01:	jmp    0x4259b0
  425e06:	test   r11b,r11b
  425e09:	mov    rax,r14
  425e0c:	jne    0x425e19
  425e0e:	test   r10d,r10d
  425e11:	cmovne r9d,r8d
  425e15:	cmove  esi,r8d
  425e19:	cmp    BYTE PTR [rsp+0x5e],0x0
  425e1e:	je     0x425f45
  425e24:	test   ebp,ebp
  425e26:	movsxd rax,r12d
  425e29:	je     0x426078
  425e2f:	mov    rcx,QWORD PTR [rsp+rax*8+0x100]
  425e37:	mov    r8d,DWORD PTR [rsp+0x54]
  425e3c:	mov    DWORD PTR [rsp+0x30],r9d
  425e41:	mov    r9d,edi
  425e44:	mov    QWORD PTR [rsp+0x40],r15
  425e49:	mov    DWORD PTR [rsp+0x38],r10d
  425e4e:	mov    rbp,rbx
  425e51:	mov    DWORD PTR [rsp+0x28],r13d
  425e56:	mov    DWORD PTR [rsp+0x20],esi
  425e5a:	call   0x4254e0
  425e5f:	jmp    0x4259b0
  425e64:	test   r11b,r11b
  425e67:	mov    rax,r14
  425e6a:	jne    0x425e77
  425e6c:	test   r10d,r10d
  425e6f:	cmovne r9d,r8d
  425e73:	cmove  esi,r8d
  425e77:	cmp    BYTE PTR [rsp+0x5e],0x0
  425e7c:	je     0x425fde
  425e82:	test   ebp,ebp
  425e84:	movsxd rax,r12d
  425e87:	jne    0x425e2f
  425e89:	movsxd rcx,DWORD PTR [rsp+rax*8+0x100]
  425e91:	jmp    0x425e37
  425e93:	mov    DWORD PTR [rsp+0x54],0x1
  425e9b:	jmp    0x4259fd
  425ea0:	test   r11b,r11b
  425ea3:	jne    0x425fcd
  425ea9:	mov    esi,r8d
  425eac:	mov    r10d,0x1
  425eb2:	xor    r8d,r8d
  425eb5:	jmp    0x4259fd
  425eba:	mov    edi,0x1
  425ebf:	jmp    0x4259fd
  425ec4:	mov    rdx,r15
  425ec7:	mov    ecx,0x25
  425ecc:	mov    rbp,rbx
  425ecf:	call   0x4253a0
  425ed4:	jmp    0x4259b0
  425ed9:	cmp    BYTE PTR [rsp+0x5f],0x0
  425ede:	je     0x426011
  425ee4:	movsxd r8,r8d
  425ee7:	test   r10d,r10d
  425eea:	mov    eax,DWORD PTR [rsp+r8*8+0x100]
  425ef2:	jne    0x42605c
  425ef8:	test   eax,eax
  425efa:	js     0x426171
  425f00:	mov    esi,eax
  425f02:	xor    r8d,r8d
  425f05:	mov    BYTE PTR [rsp+0x5f],0x0
  425f0a:	jmp    0x4259fd
  425f0f:	cmp    BYTE PTR [rsp+0x5e],0x0
  425f14:	jne    0x425ff2
  425f1a:	test   r10d,r10d
  425f1d:	lea    rdx,[r14+0x8]
  425f21:	mov    eax,DWORD PTR [r14]
  425f24:	jne    0x42603c
  425f2a:	test   eax,eax
  425f2c:	js     0x426157
  425f32:	mov    esi,eax
  425f34:	mov    r14,rdx
  425f37:	xor    r8d,r8d
  425f3a:	mov    r11d,0x1
  425f40:	jmp    0x4259fd
  425f45:	add    r14,0x8
  425f49:	test   ebp,ebp
  425f4b:	je     0x426035
  425f51:	mov    rcx,QWORD PTR [rax]
  425f54:	jmp    0x425e37
  425f59:	mov    rcx,rbx
  425f5c:	call   0x42a400
  425f61:	mov    r12d,eax
  425f64:	sub    esi,r12d
  425f67:	mov    eax,0x0
  425f6c:	cmovns eax,esi
  425f6f:	mov    edx,eax
  425f71:	mov    eax,edi
  425f73:	neg    eax
  425f75:	xor    eax,edx
  425f77:	add    edi,eax
  425f79:	test   edi,edi
  425f7b:	jle    0x4260fd
  425f81:	mov    rdx,r15
  425f84:	mov    ecx,0x20
  425f89:	call   0x4253a0
  425f8e:	sub    edi,0x1
  425f91:	jne    0x425f81
  425f93:	mov    r8,r15
  425f96:	mov    edx,r12d
  425f99:	mov    rcx,rbx
  425f9c:	call   0x425320
  425fa1:	jmp    0x4259b0
  425fa6:	add    r14,0x8
  425faa:	mov    rbx,QWORD PTR [rax]
  425fad:	jmp    0x425cfd
  425fb2:	mov    rcx,QWORD PTR [rsp+0x68]
  425fb7:	mov    r8d,edx
  425fba:	lea    rdx,[rip+0x2d972]        # 0x453933
  425fc1:	xor    ebp,ebp
  425fc3:	call   0x42a438
  425fc8:	jmp    0x425b5c
  425fcd:	mov    r10d,0x1
  425fd3:	xor    r8d,r8d
  425fd6:	xor    r11d,r11d
  425fd9:	jmp    0x4259fd
  425fde:	add    r14,0x8
  425fe2:	test   ebp,ebp
  425fe4:	jne    0x425f51
  425fea:	movsxd rcx,DWORD PTR [rax]
  425fed:	jmp    0x425e37
  425ff2:	xor    r8d,r8d
  425ff5:	mov    BYTE PTR [rsp+0x5f],0x1
  425ffa:	mov    r11d,0x1
  426000:	jmp    0x4259fd
  426005:	add    r14,0x8
  426009:	movzx  ebx,BYTE PTR [rax]
  42600c:	jmp    0x425dc8
  426011:	mov    r12d,r8d
  426014:	xor    r8d,r8d
  426017:	jmp    0x4259fd
  42601c:	add    r14,0x8
  426020:	movsd  xmm6,QWORD PTR [rax]
  426024:	jmp    0x425b07
  426029:	add    r14,0x8
  42602d:	mov    r8,QWORD PTR [rax]
  426030:	jmp    0x425d5e
  426035:	mov    ecx,DWORD PTR [rax]
  426037:	jmp    0x425e37
  42603c:	mov    r14,rdx
  42603f:	xor    edx,edx
  426041:	test   eax,eax
  426043:	mov    r9d,edx
  426046:	cmovs  r10d,edx
  42604a:	mov    r11d,0x1
  426050:	cmovns r9d,eax
  426054:	xor    r8d,r8d
  426057:	jmp    0x4259fd
  42605c:	xor    edx,edx
  42605e:	test   eax,eax
  426060:	mov    BYTE PTR [rsp+0x5f],0x0
  426065:	mov    r9d,edx
  426068:	cmovs  r10d,edx
  42606c:	cmovns r9d,eax
  426070:	xor    r8d,r8d
  426073:	jmp    0x4259fd
  426078:	mov    ecx,DWORD PTR [rsp+rax*8+0x100]
  42607f:	jmp    0x425e37
  426084:	sub    r12d,ebx
  426087:	jmp    0x425f64
  42608c:	mov    DWORD PTR [rsp+0x88],0x2d
  426097:	xorpd  xmm6,xmm7
  42609b:	jmp    0x425b9c
  4260a0:	mov    rcx,QWORD PTR [rsp+0x60]
  4260a5:	mov    r8,r15
  4260a8:	mov    edx,r12d
  4260ab:	call   0x425320
  4260b0:	jmp    0x425c7b
  4260b5:	mov    rcx,QWORD PTR [rsp+0x60]
  4260ba:	mov    edx,0x45
  4260bf:	call   0x42a3e8
  4260c4:	test   rax,rax
  4260c7:	mov    rsi,rax
  4260ca:	jne    0x425c2d
  4260d0:	mov    rcx,QWORD PTR [rsp+0x60]
  4260d5:	mov    r8,r15
  4260d8:	mov    edx,r12d
  4260db:	sub    ebp,0x1
  4260de:	call   0x425320
  4260e3:	mov    rdx,r15
  4260e6:	mov    ecx,0x30
  4260eb:	sub    ebp,0x1
  4260ee:	call   0x4253a0
  4260f3:	cmp    ebp,0xffffffff
  4260f6:	jne    0x4260e3
  4260f8:	jmp    0x425c7b
  4260fd:	mov    r8,r15
  426100:	mov    edx,r12d
  426103:	mov    rcx,rbx
  426106:	call   0x425320
  42610b:	test   edi,edi
  42610d:	je     0x4259b0
  426113:	mov    rdx,r15
  426116:	mov    ecx,0x20
  42611b:	call   0x4253a0
  426120:	add    edi,0x1
  426123:	jne    0x426113
  426125:	jmp    0x4259b0
  42612a:	mov    rdx,r15
  42612d:	mov    ecx,ebx
  42612f:	call   0x4253a0
  426134:	test   edi,edi
  426136:	je     0x4259b0
  42613c:	nop    DWORD PTR [rax+0x0]
  426140:	mov    rdx,r15
  426143:	mov    ecx,0x20
  426148:	call   0x4253a0
  42614d:	add    edi,0x1
  426150:	jne    0x426140
  426152:	jmp    0x4259b0
  426157:	neg    eax
  426159:	mov    r14,rdx
  42615c:	mov    edi,0x1
  426161:	mov    esi,eax
  426163:	xor    r8d,r8d
  426166:	mov    r11d,0x1
  42616c:	jmp    0x4259fd
  426171:	neg    eax
  426173:	mov    edi,0x1
  426178:	xor    r8d,r8d
  42617b:	mov    esi,eax
  42617d:	mov    BYTE PTR [rsp+0x5f],0x0
  426182:	jmp    0x4259fd
  426187:	xor    r12d,r12d
  42618a:	jmp    0x425f64
  42618f:	nop
  426190:	sub    rsp,0x58
  426194:	lea    rdx,[rcx+rdx*1-0x1]
  426199:	mov    rax,r8
  42619c:	mov    QWORD PTR [rsp+0x20],rcx
  4261a1:	mov    QWORD PTR [rsp+0x28],rcx
  4261a6:	lea    rcx,[rsp+0x20]
  4261ab:	mov    r8,r9
  4261ae:	mov    QWORD PTR [rsp+0x30],rdx
  4261b3:	mov    rdx,rax
  4261b6:	mov    QWORD PTR [rsp+0x38],0x0
  4261bf:	call   0x425690
  4261c4:	test   eax,eax
  4261c6:	mov    rax,QWORD PTR [rsp+0x20]
  4261cb:	mov    BYTE PTR [rax],0x0
  4261ce:	jne    0x4261e0
  4261d0:	mov    rax,QWORD PTR [rsp+0x20]
  4261d5:	sub    eax,DWORD PTR [rsp+0x28]
  4261d9:	add    rsp,0x58
  4261dd:	ret    
  4261de:	xchg   ax,ax
  4261e0:	call   QWORD PTR [rip+0x36a06]        # 0x45cbec
  4261e6:	mov    DWORD PTR [rax],0x16
  4261ec:	mov    eax,0xffffffff
  4261f1:	jmp    0x4261d9
  4261f3:	nop    DWORD PTR [rax]
  4261f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426200:	test   rcx,rcx
  426203:	je     0x426210
  426205:	test   rdx,rdx
  426208:	je     0x426210
  42620a:	jmp    0x426190
  42620c:	nop    DWORD PTR [rax+0x0]
  426210:	xor    eax,eax
  426212:	ret    
  426213:	nop    DWORD PTR [rax]
  426216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426220:	sub    rsp,0x38
  426224:	mov    QWORD PTR [rsp+0x58],r9
  426229:	lea    r9,[rsp+0x58]
  42622e:	test   rcx,rcx
  426231:	mov    QWORD PTR [rsp+0x28],r9
  426236:	je     0x426250
  426238:	test   rdx,rdx
  42623b:	je     0x426250
  42623d:	call   0x426190
  426242:	add    rsp,0x38
  426246:	ret    
  426247:	nop    WORD PTR [rax+rax*1+0x0]
  426250:	xor    eax,eax
  426252:	add    rsp,0x38
  426256:	ret    
  426257:	nop    WORD PTR [rax+rax*1+0x0]
  426260:	sub    rsp,0x68
  426264:	xor    eax,eax
  426266:	mov    QWORD PTR [rsp+0x80],r8
  42626e:	lea    r8,[rsp+0x80]
  426276:	test   rcx,rcx
  426279:	mov    QWORD PTR [rsp+0x88],r9
  426281:	mov    QWORD PTR [rsp+0x28],r8
  426286:	je     0x4262c3
  426288:	mov    QWORD PTR [rsp+0x30],rcx
  42628d:	mov    QWORD PTR [rsp+0x38],rcx
  426292:	lea    rcx,[rsp+0x30]
  426297:	mov    QWORD PTR [rsp+0x40],0x0
  4262a0:	mov    QWORD PTR [rsp+0x48],0x0
  4262a9:	call   0x425690
  4262ae:	test   eax,eax
  4262b0:	mov    rax,QWORD PTR [rsp+0x30]
  4262b5:	mov    BYTE PTR [rax],0x0
  4262b8:	jne    0x4262d0
  4262ba:	mov    rax,QWORD PTR [rsp+0x30]
  4262bf:	sub    eax,DWORD PTR [rsp+0x38]
  4262c3:	add    rsp,0x68
  4262c7:	ret    
  4262c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4262d0:	call   QWORD PTR [rip+0x36916]        # 0x45cbec
  4262d6:	mov    DWORD PTR [rax],0x16
  4262dc:	mov    eax,0xffffffff
  4262e1:	jmp    0x4262c3
  4262e3:	nop    DWORD PTR [rax]
  4262e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262f0:	push   rbx
  4262f1:	sub    rsp,0x450
  4262f8:	test   rcx,rcx
  4262fb:	je     0x426350
  4262fd:	lea    rax,[rsp+0x50]
  426302:	lea    rbx,[rsp+0x20]
  426307:	mov    QWORD PTR [rsp+0x38],rcx
  42630c:	mov    DWORD PTR [rsp+0x40],0x0
  426314:	mov    QWORD PTR [rsp+0x20],rax
  426319:	mov    QWORD PTR [rsp+0x28],rax
  42631e:	lea    rax,[rsp+0x44f]
  426326:	mov    rcx,rbx
  426329:	mov    QWORD PTR [rsp+0x30],rax
  42632e:	call   0x425690
  426333:	test   eax,eax
  426335:	jne    0x426350
  426337:	mov    rcx,rbx
  42633a:	call   0x4252e0
  42633f:	mov    eax,DWORD PTR [rsp+0x40]
  426343:	add    rsp,0x450
  42634a:	pop    rbx
  42634b:	ret    
  42634c:	nop    DWORD PTR [rax+0x0]
  426350:	call   QWORD PTR [rip+0x36896]        # 0x45cbec
  426356:	mov    DWORD PTR [rax],0x16
  42635c:	mov    eax,0xffffffff
  426361:	jmp    0x426343
  426363:	nop    DWORD PTR [rax]
  426366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426370:	sub    rsp,0x38
  426374:	mov    QWORD PTR [rsp+0x50],r8
  426379:	lea    r8,[rsp+0x50]
  42637e:	mov    QWORD PTR [rsp+0x58],r9
  426383:	mov    QWORD PTR [rsp+0x28],r8
  426388:	call   0x4262f0
  42638d:	add    rsp,0x38
  426391:	ret    
  426392:	nop    DWORD PTR [rax+0x0]
  426396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263a0:	push   rsi
  4263a1:	push   rbx
  4263a2:	sub    rsp,0x38
  4263a6:	lea    rbx,[rsp+0x58]
  4263ab:	mov    rsi,rcx
  4263ae:	mov    QWORD PTR [rsp+0x58],rdx
  4263b3:	mov    QWORD PTR [rsp+0x60],r8
  4263b8:	mov    QWORD PTR [rsp+0x68],r9
  4263bd:	mov    QWORD PTR [rsp+0x28],rbx
  4263c2:	call   QWORD PTR [rip+0x367ec]        # 0x45cbb4
  4263c8:	lea    rcx,[rax+0x30]
  4263cc:	mov    r8,rbx
  4263cf:	mov    rdx,rsi
  4263d2:	call   0x4262f0
  4263d7:	add    rsp,0x38
  4263db:	pop    rbx
  4263dc:	pop    rsi
  4263dd:	ret    
  4263de:	nop
  4263df:	nop
  4263e0:	push   r13
  4263e2:	push   r12
  4263e4:	push   rbp
  4263e5:	push   rdi
  4263e6:	push   rsi
  4263e7:	push   rbx
  4263e8:	sub    rsp,0x28
  4263ec:	mov    esi,0x65
  4263f1:	mov    rdi,QWORD PTR [rip+0x366d4]        # 0x45cacc
  4263f8:	mov    r13,QWORD PTR [rip+0x3667d]        # 0x45ca7c
  4263ff:	mov    r12,rcx
  426402:	mov    rbp,rdx
  426405:	jmp    0x426438
  426407:	nop    WORD PTR [rax+rax*1+0x0]
  426410:	call   r13
  426413:	mov    ebx,eax
  426415:	mov    ecx,eax
  426417:	call   0x427cc0
  42641c:	lea    eax,[rbx-0x20]
  42641f:	cmp    eax,0x1
  426422:	jbe    0x426429
  426424:	cmp    ebx,0x5
  426427:	jne    0x426460
  426429:	sub    esi,0x1
  42642c:	je     0x426460
  42642e:	mov    ecx,0x186a0
  426433:	call   0x427740
  426438:	mov    r8d,0x1
  42643e:	mov    rdx,rbp
  426441:	mov    rcx,r12
  426444:	call   rdi
  426446:	test   eax,eax
  426448:	je     0x426410
  42644a:	xor    eax,eax
  42644c:	add    rsp,0x28
  426450:	pop    rbx
  426451:	pop    rsi
  426452:	pop    rdi
  426453:	pop    rbp
  426454:	pop    r12
  426456:	pop    r13
  426458:	ret    
  426459:	nop    DWORD PTR [rax+0x0]
  426460:	mov    eax,0xffffffff
  426465:	add    rsp,0x28
  426469:	pop    rbx
  42646a:	pop    rsi
  42646b:	pop    rdi
  42646c:	pop    rbp
  42646d:	pop    r12
  42646f:	pop    r13
  426471:	ret    
  426472:	nop    DWORD PTR [rax+0x0]
  426476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426480:	push   rdi
  426481:	push   rsi
  426482:	push   rbx
  426483:	sub    rsp,0x20
  426487:	mov    ebx,0x65
  42648c:	mov    rdi,QWORD PTR [rip+0x36759]        # 0x45cbec
  426493:	mov    rsi,rcx
  426496:	jmp    0x4264b6
  426498:	nop    DWORD PTR [rax+rax*1+0x0]
  4264a0:	call   rdi
  4264a2:	cmp    DWORD PTR [rax],0xd
  4264a5:	jne    0x4264d0
  4264a7:	sub    ebx,0x1
  4264aa:	je     0x4264d0
  4264ac:	mov    ecx,0x186a0
  4264b1:	call   0x427740
  4264b6:	mov    rcx,rsi
  4264b9:	call   0x42a398
  4264be:	test   eax,eax
  4264c0:	jne    0x4264a0
  4264c2:	add    rsp,0x20
  4264c6:	pop    rbx
  4264c7:	pop    rsi
  4264c8:	pop    rdi
  4264c9:	ret    
  4264ca:	nop    WORD PTR [rax+rax*1+0x0]
  4264d0:	mov    eax,0xffffffff
  4264d5:	add    rsp,0x20
  4264d9:	pop    rbx
  4264da:	pop    rsi
  4264db:	pop    rdi
  4264dc:	ret    
  4264dd:	nop    DWORD PTR [rax]
  4264e0:	push   rbp
  4264e1:	push   rdi
  4264e2:	push   rsi
  4264e3:	push   rbx
  4264e4:	sub    rsp,0x388
  4264eb:	mov    rdi,rdx
  4264ee:	mov    rbp,rcx
  4264f1:	xor    edx,edx
  4264f3:	mov    rcx,rdi
  4264f6:	call   QWORD PTR [rip+0x364f8]        # 0x45c9f4
  4264fc:	xor    r9d,r9d
  4264ff:	xor    r8d,r8d
  426502:	mov    QWORD PTR [rsp+0x30],0x0
  42650b:	mov    DWORD PTR [rsp+0x28],0x2200000
  426513:	mov    DWORD PTR [rsp+0x20],0x3
  42651b:	mov    edx,0xc0000000
  426520:	mov    rcx,rdi
  426523:	call   QWORD PTR [rip+0x364d3]        # 0x45c9fc
  426529:	cmp    rax,0xffffffffffffffff
  42652d:	mov    rbx,rax
  426530:	je     0x426742
  426536:	lea    rcx,[rip+0x2d6e3]        # 0x453c20
  42653d:	mov    r8d,0x4
  426543:	mov    rdx,rbp
  426546:	lea    rsi,[rsp+0x50]
  42654b:	call   0x42a498
  426550:	test   eax,eax
  426552:	jne    0x4266a0
  426558:	mov    rdx,rbp
  42655b:	mov    rcx,rsi
  42655e:	call   0x42a418
  426563:	mov    rcx,rsi
  426566:	jmp    0x426577
  426568:	nop    DWORD PTR [rax+rax*1+0x0]
  426570:	lea    rcx,[rax+0x1]
  426574:	mov    BYTE PTR [rax],0x5c
  426577:	mov    edx,0x2f
  42657c:	call   0x42a428
  426581:	test   rax,rax
  426584:	jne    0x426570
  426586:	mov    r9,rsi
  426589:	mov    edx,DWORD PTR [r9]
  42658c:	add    r9,0x4
  426590:	lea    eax,[rdx-0x1010101]
  426596:	not    edx
  426598:	and    eax,edx
  42659a:	and    eax,0x80808080
  42659f:	je     0x426589
  4265a1:	mov    edx,eax
  4265a3:	mov    r8,rsi
  4265a6:	mov    DWORD PTR [rsp+0x160],0xa0000003
  4265b1:	shr    edx,0x10
  4265b4:	test   eax,0x8080
  4265b9:	mov    DWORD PTR [rsp+0x28],0x104
  4265c1:	cmove  eax,edx
  4265c4:	lea    rdx,[r9+0x2]
  4265c8:	lea    rbp,[rsp+0x160]
  4265d0:	cmove  r9,rdx
  4265d4:	add    al,al
  4265d6:	sbb    r9,0x3
  4265da:	xor    edx,edx
  4265dc:	xor    ecx,ecx
  4265de:	sub    r9,rsi
  4265e1:	mov    WORD PTR [rsp+0x168],dx
  4265e9:	mov    WORD PTR [rsp+0x16e],cx
  4265f1:	add    r9d,r9d
  4265f4:	xor    edx,edx
  4265f6:	xor    ecx,ecx
  4265f8:	lea    eax,[r9+0xc]
  4265fc:	mov    DWORD PTR [rsp+0x44],r9d
  426601:	mov    WORD PTR [rsp+0x16a],r9w
  42660a:	add    r9d,0x2
  42660e:	mov    WORD PTR [rsp+0x164],ax
  426616:	xor    eax,eax
  426618:	mov    WORD PTR [rsp+0x16c],r9w
  426621:	mov    WORD PTR [rsp+0x166],ax
  426629:	lea    rax,[rsp+0x170]
  426631:	mov    r9d,0xffffffff
  426637:	mov    QWORD PTR [rsp+0x20],rax
  42663c:	call   QWORD PTR [rip+0x36492]        # 0x45cad4
  426642:	movzx  eax,WORD PTR [rsp+0x164]
  42664a:	lea    rdx,[rsp+0x44]
  42664f:	mov    QWORD PTR [rsp+0x38],0x0
  426658:	mov    DWORD PTR [rsp+0x28],0x0
  426660:	mov    QWORD PTR [rsp+0x20],0x0
  426669:	mov    r8,rbp
  42666c:	mov    QWORD PTR [rsp+0x30],rdx
  426671:	mov    rcx,rbx
  426674:	mov    edx,0x900a4
  426679:	lea    r9d,[rax+0x8]
  42667d:	call   QWORD PTR [rip+0x36399]        # 0x45ca1c
  426683:	test   eax,eax
  426685:	je     0x4266b7
  426687:	mov    rcx,rbx
  42668a:	call   QWORD PTR [rip+0x3635c]        # 0x45c9ec
  426690:	xor    eax,eax
  426692:	add    rsp,0x388
  426699:	pop    rbx
  42669a:	pop    rsi
  42669b:	pop    rdi
  42669c:	pop    rbp
  42669d:	ret    
  42669e:	xchg   ax,ax
  4266a0:	lea    rdx,[rip+0x2d57e]        # 0x453c25
  4266a7:	mov    r8,rbp
  4266aa:	mov    rcx,rsi
  4266ad:	call   0x426260
  4266b2:	jmp    0x426563
  4266b7:	call   QWORD PTR [rip+0x3652f]        # 0x45cbec
  4266bd:	mov    DWORD PTR [rax],0x0
  4266c3:	call   QWORD PTR [rip+0x363b3]        # 0x45ca7c
  4266c9:	mov    r8d,eax
  4266cc:	lea    rax,[rsp+0x48]
  4266d1:	mov    r9d,0x409
  4266d7:	xor    edx,edx
  4266d9:	mov    ecx,0x1100
  4266de:	mov    QWORD PTR [rsp+0x30],0x0
  4266e7:	mov    DWORD PTR [rsp+0x28],0x0
  4266ef:	mov    QWORD PTR [rsp+0x20],rax
  4266f4:	call   QWORD PTR [rip+0x3633a]        # 0x45ca34
  4266fa:	mov    rbp,QWORD PTR [rsp+0x48]
  4266ff:	call   QWORD PTR [rip+0x364af]        # 0x45cbb4
  426705:	lea    rdx,[rip+0x2d524]        # 0x453c30
  42670c:	lea    rcx,[rax+0x60]
  426710:	mov    r8,rsi
  426713:	mov    r9,rbp
  426716:	call   0x426370
  42671b:	mov    rcx,QWORD PTR [rsp+0x48]
  426720:	call   QWORD PTR [rip+0x3639e]        # 0x45cac4
  426726:	mov    rcx,rbx
  426729:	call   QWORD PTR [rip+0x362bd]        # 0x45c9ec
  42672f:	mov    rcx,rdi
  426732:	call   QWORD PTR [rip+0x363bc]        # 0x45caf4
  426738:	mov    eax,0xffffffff
  42673d:	jmp    0x426692
  426742:	jmp    0x426692
  426747:	nop    WORD PTR [rax+rax*1+0x0]
  426750:	push   r12
  426752:	push   rbp
  426753:	push   rdi
  426754:	push   rsi
  426755:	push   rbx
  426756:	sub    rsp,0x270
  42675d:	mov    rdi,rcx
  426760:	mov    r12,rdx
  426763:	mov    rsi,r8
  426766:	call   QWORD PTR [rip+0x36300]        # 0x45ca6c
  42676c:	cmp    eax,0xffffffff
  42676f:	mov    ebx,eax
  426771:	je     0x426950
  426777:	and    bh,0x4
  42677a:	je     0x4268a1
  426780:	xor    r9d,r9d
  426783:	mov    QWORD PTR [rsp+0x30],0x0
  42678c:	mov    DWORD PTR [rsp+0x28],0x2200000
  426794:	mov    DWORD PTR [rsp+0x20],0x3
  42679c:	mov    r8d,0x3
  4267a2:	mov    edx,0x80000000
  4267a7:	mov    rcx,rdi
  4267aa:	call   QWORD PTR [rip+0x3624c]        # 0x45c9fc
  4267b0:	cmp    rax,0xffffffffffffffff
  4267b4:	mov    rbx,rax
  4267b7:	je     0x426950
  4267bd:	lea    rax,[rsp+0x44]
  4267c2:	lea    rbp,[rsp+0x50]
  4267c7:	xor    r9d,r9d
  4267ca:	xor    r8d,r8d
  4267cd:	mov    QWORD PTR [rsp+0x38],0x0
  4267d6:	mov    DWORD PTR [rsp+0x28],0x21c
  4267de:	mov    QWORD PTR [rsp+0x30],rax
  4267e3:	mov    QWORD PTR [rsp+0x20],rbp
  4267e8:	mov    edx,0x900a8
  4267ed:	mov    rcx,rbx
  4267f0:	call   QWORD PTR [rip+0x36226]        # 0x45ca1c
  4267f6:	test   eax,eax
  4267f8:	je     0x4268c2
  4267fe:	mov    rcx,rbx
  426801:	call   QWORD PTR [rip+0x361e5]        # 0x45c9ec
  426807:	cmp    DWORD PTR [rsp+0x50],0xa0000003
  42680f:	jne    0x4268a1
  426815:	xor    edx,edx
  426817:	xor    ecx,ecx
  426819:	mov    QWORD PTR [rsp+0x38],0x0
  426822:	mov    QWORD PTR [rsp+0x30],0x0
  42682b:	mov    DWORD PTR [rsp+0x28],esi
  42682f:	mov    r9d,0xffffffff
  426835:	mov    QWORD PTR [rsp+0x20],r12
  42683a:	lea    r8,[rbp+0x10]
  42683e:	call   QWORD PTR [rip+0x36338]        # 0x45cb7c
  426844:	test   eax,eax
  426846:	jle    0x4268a1
  426848:	cmp    eax,0x4
  42684b:	mov    ebx,eax
  42684d:	jle    0x426862
  42684f:	lea    rdi,[rip+0x2d3ca]        # 0x453c20
  426856:	mov    ecx,0x4
  42685b:	mov    rsi,r12
  42685e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426860:	je     0x426872
  426862:	mov    eax,ebx
  426864:	add    rsp,0x270
  42686b:	pop    rbx
  42686c:	pop    rsi
  42686d:	pop    rdi
  42686e:	pop    rbp
  42686f:	pop    r12
  426871:	ret    
  426872:	lea    rsi,[r12+0x4]
  426877:	sub    ebx,0x4
  42687a:	mov    rcx,rsi
  42687d:	call   0x42a400
  426882:	lea    r8,[rax+0x1]
  426886:	mov    rdx,rsi
  426889:	mov    rcx,r12
  42688c:	call   0x42a488
  426891:	mov    eax,ebx
  426893:	add    rsp,0x270
  42689a:	pop    rbx
  42689b:	pop    rsi
  42689c:	pop    rdi
  42689d:	pop    rbp
  42689e:	pop    r12
  4268a0:	ret    
  4268a1:	mov    ebx,0xffffffff
  4268a6:	call   QWORD PTR [rip+0x36340]        # 0x45cbec
  4268ac:	mov    DWORD PTR [rax],0x16
  4268b2:	mov    eax,ebx
  4268b4:	add    rsp,0x270
  4268bb:	pop    rbx
  4268bc:	pop    rsi
  4268bd:	pop    rdi
  4268be:	pop    rbp
  4268bf:	pop    r12
  4268c1:	ret    
  4268c2:	mov    rsi,QWORD PTR [rip+0x36323]        # 0x45cbec
  4268c9:	call   rsi
  4268cb:	mov    DWORD PTR [rax],0x0
  4268d1:	call   QWORD PTR [rip+0x361a5]        # 0x45ca7c
  4268d7:	mov    r8d,eax
  4268da:	lea    rax,[rsp+0x48]
  4268df:	mov    r9d,0x409
  4268e5:	xor    edx,edx
  4268e7:	mov    ecx,0x1100
  4268ec:	mov    QWORD PTR [rsp+0x30],0x0
  4268f5:	mov    DWORD PTR [rsp+0x28],0x0
  4268fd:	mov    QWORD PTR [rsp+0x20],rax
  426902:	call   QWORD PTR [rip+0x3612c]        # 0x45ca34
  426908:	mov    rbp,QWORD PTR [rsp+0x48]
  42690d:	call   QWORD PTR [rip+0x362a1]        # 0x45cbb4
  426913:	lea    rdx,[rip+0x2d33e]        # 0x453c58
  42691a:	lea    rcx,[rax+0x60]
  42691e:	mov    r8,rdi
  426921:	mov    r9,rbp
  426924:	call   0x426370
  426929:	mov    rcx,QWORD PTR [rsp+0x48]
  42692e:	call   QWORD PTR [rip+0x36190]        # 0x45cac4
  426934:	mov    rcx,rbx
  426937:	mov    ebx,0xffffffff
  42693c:	call   QWORD PTR [rip+0x360aa]        # 0x45c9ec
  426942:	call   rsi
  426944:	mov    DWORD PTR [rax],0x16
  42694a:	jmp    0x426862
  42694f:	nop
  426950:	call   QWORD PTR [rip+0x36126]        # 0x45ca7c
  426956:	mov    ecx,eax
  426958:	call   0x427cc0
  42695d:	jmp    0x426862
  426962:	nop    DWORD PTR [rax+0x0]
  426966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426970:	sub    rsp,0x28
  426974:	call   QWORD PTR [rip+0x360f2]        # 0x45ca6c
  42697a:	mov    edx,eax
  42697c:	shr    edx,0xa
  42697f:	and    edx,0x1
  426982:	cmp    eax,0xffffffff
  426985:	je     0x426990
  426987:	mov    eax,edx
  426989:	add    rsp,0x28
  42698d:	ret    
  42698e:	xchg   ax,ax
  426990:	call   QWORD PTR [rip+0x360e6]        # 0x45ca7c
  426996:	mov    ecx,eax
  426998:	call   0x427cc0
  42699d:	xor    edx,edx
  42699f:	jmp    0x426987
  4269a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4269a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269b0:	push   rsi
  4269b1:	push   rbx
  4269b2:	sub    rsp,0x58
  4269b6:	mov    rbx,rcx
  4269b9:	mov    rsi,rdx
  4269bc:	call   0x42a130
  4269c1:	test   eax,eax
  4269c3:	js     0x4269e2
  4269c5:	xor    edx,edx
  4269c7:	lea    r8,[rsp+0x20]
  4269cc:	mov    rcx,rbx
  4269cf:	call   QWORD PTR [rip+0x3609f]        # 0x45ca74
  4269d5:	test   eax,eax
  4269d7:	je     0x4269f0
  4269d9:	mov    eax,DWORD PTR [rsp+0x40]
  4269dd:	mov    DWORD PTR [rsi+0x14],eax
  4269e0:	xor    eax,eax
  4269e2:	add    rsp,0x58
  4269e6:	pop    rbx
  4269e7:	pop    rsi
  4269e8:	ret    
  4269e9:	nop    DWORD PTR [rax+0x0]
  4269f0:	call   QWORD PTR [rip+0x36086]        # 0x45ca7c
  4269f6:	mov    ecx,eax
  4269f8:	call   0x427cc0
  4269fd:	mov    eax,0xffffffff
  426a02:	jmp    0x4269e2
  426a04:	nop
  426a05:	nop
  426a06:	nop
  426a07:	nop
  426a08:	nop
  426a09:	nop
  426a0a:	nop
  426a0b:	nop
  426a0c:	nop
  426a0d:	nop
  426a0e:	nop
  426a0f:	nop
  426a10:	push   rbx
  426a11:	sub    rsp,0x20
  426a15:	mov    rbx,rcx
  426a18:	movzx  ecx,BYTE PTR [rcx]
  426a1b:	cmp    cl,0x5c
  426a1e:	je     0x426a44
  426a20:	cmp    cl,0x2f
  426a23:	je     0x426a44
  426a25:	call   QWORD PTR [rip+0x362d1]        # 0x45ccfc
  426a2b:	test   eax,eax
  426a2d:	je     0x426a3b
  426a2f:	cmp    BYTE PTR [rbx+0x1],0x3a
  426a33:	lea    rax,[rbx+0x2]
  426a37:	cmove  rbx,rax
  426a3b:	mov    rax,rbx
  426a3e:	add    rsp,0x20
  426a42:	pop    rbx
  426a43:	ret    
  426a44:	movzx  eax,BYTE PTR [rbx+0x1]
  426a48:	cmp    al,0x5c
  426a4a:	je     0x426a50
  426a4c:	cmp    al,0x2f
  426a4e:	jne    0x426a25
  426a50:	movzx  eax,BYTE PTR [rbx+0x2]
  426a54:	lea    rdx,[rbx+0x2]
  426a58:	mov    rbx,rdx
  426a5b:	test   al,al
  426a5d:	je     0x426a3b
  426a5f:	cmp    al,0x2f
  426a61:	je     0x426a3b
  426a63:	cmp    al,0x5c
  426a65:	jne    0x426a78
  426a67:	jmp    0x426a3b
  426a69:	nop    DWORD PTR [rax+0x0]
  426a70:	cmp    al,0x5c
  426a72:	je     0x426a3b
  426a74:	cmp    al,0x2f
  426a76:	je     0x426a3b
  426a78:	add    rbx,0x1
  426a7c:	movzx  eax,BYTE PTR [rbx]
  426a7f:	test   al,al
  426a81:	jne    0x426a70
  426a83:	mov    rax,rbx
  426a86:	add    rsp,0x20
  426a8a:	pop    rbx
  426a8b:	ret    
  426a8c:	nop    DWORD PTR [rax+0x0]
  426a90:	push   rbx
  426a91:	sub    rsp,0x20
  426a95:	call   0x426a10
  426a9a:	mov    rbx,rax
  426a9d:	mov    rcx,rax
  426aa0:	call   0x42a400
  426aa5:	add    rax,rbx
  426aa8:	cmp    rbx,rax
  426aab:	jae    0x426ade
  426aad:	lea    rdx,[rax-0x1]
  426ab1:	cmp    rbx,rdx
  426ab4:	jae    0x426ade
  426ab6:	movzx  eax,BYTE PTR [rax-0x1]
  426aba:	cmp    al,0x5c
  426abc:	je     0x426ac2
  426abe:	cmp    al,0x2f
  426ac0:	jne    0x426ade
  426ac2:	mov    BYTE PTR [rdx],0x0
  426ac5:	sub    rdx,0x1
  426ac9:	cmp    rdx,rbx
  426acc:	je     0x426ade
  426ace:	movzx  r8d,BYTE PTR [rdx]
  426ad2:	cmp    r8b,0x5c
  426ad6:	je     0x426ac2
  426ad8:	cmp    r8b,0x2f
  426adc:	je     0x426ac2
  426ade:	add    rsp,0x20
  426ae2:	pop    rbx
  426ae3:	ret    
  426ae4:	xchg   ax,ax
  426ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426af0:	push   rbx
  426af1:	sub    rsp,0x20
  426af5:	call   0x426a10
  426afa:	cmp    BYTE PTR [rax],0x0
  426afd:	mov    rbx,rax
  426b00:	je     0x426bb8
  426b06:	mov    rcx,rax
  426b09:	call   0x42a400
  426b0e:	lea    rdx,[rbx+rax*1-0x1]
  426b13:	movzx  eax,BYTE PTR [rdx]
  426b16:	cmp    rbx,rdx
  426b19:	setb   r9b
  426b1d:	cmp    al,0x5c
  426b1f:	sete   r8b
  426b23:	cmp    al,0x2f
  426b25:	sete   cl
  426b28:	or     r8b,cl
  426b2b:	je     0x426b54
  426b2d:	test   r9b,r9b
  426b30:	jne    0x426b44
  426b32:	jmp    0x426b54
  426b34:	cmp    al,0x5c
  426b36:	sete   r8b
  426b3a:	cmp    al,0x2f
  426b3c:	sete   cl
  426b3f:	or     r8b,cl
  426b42:	je     0x426b54
  426b44:	sub    rdx,0x1
  426b48:	movzx  eax,BYTE PTR [rdx]
  426b4b:	cmp    rbx,rdx
  426b4e:	setb   r9b
  426b52:	jb     0x426b34
  426b54:	cmp    al,0x2f
  426b56:	setne  cl
  426b59:	cmp    al,0x5c
  426b5b:	setne  al
  426b5e:	test   cl,al
  426b60:	je     0x426b8a
  426b62:	test   r9b,r9b
  426b65:	jne    0x426b75
  426b67:	jmp    0x426b8a
  426b69:	nop    DWORD PTR [rax+0x0]
  426b70:	cmp    rbx,rdx
  426b73:	jae    0x426b8a
  426b75:	sub    rdx,0x1
  426b79:	movzx  eax,BYTE PTR [rdx]
  426b7c:	cmp    al,0x5c
  426b7e:	setne  cl
  426b81:	cmp    al,0x2f
  426b83:	setne  al
  426b86:	test   cl,al
  426b88:	jne    0x426b70
  426b8a:	cmp    rbx,rdx
  426b8d:	jae    0x426bbe
  426b8f:	movzx  eax,BYTE PTR [rdx-0x1]
  426b93:	cmp    al,0x5c
  426b95:	je     0x426ba0
  426b97:	cmp    al,0x2f
  426b99:	jne    0x426bbe
  426b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  426ba0:	sub    rdx,0x1
  426ba4:	cmp    rdx,rbx
  426ba7:	je     0x426bc3
  426ba9:	movzx  eax,BYTE PTR [rdx-0x1]
  426bad:	cmp    al,0x5c
  426baf:	je     0x426ba0
  426bb1:	cmp    al,0x2f
  426bb3:	je     0x426ba0
  426bb5:	mov    BYTE PTR [rdx],0x0
  426bb8:	add    rsp,0x20
  426bbc:	pop    rbx
  426bbd:	ret    
  426bbe:	cmp    rbx,rdx
  426bc1:	jne    0x426bb5
  426bc3:	movzx  eax,BYTE PTR [rbx]
  426bc6:	cmp    al,0x5c
  426bc8:	je     0x426bd1
  426bca:	cmp    al,0x2f
  426bcc:	mov    rdx,rbx
  426bcf:	jne    0x426bb5
  426bd1:	lea    rdx,[rbx+0x1]
  426bd5:	jmp    0x426bb5
  426bd7:	nop    WORD PTR [rax+rax*1+0x0]
  426be0:	push   rbx
  426be1:	sub    rsp,0x20
  426be5:	mov    rbx,rcx
  426be8:	call   0x426a10
  426bed:	cmp    rax,rbx
  426bf0:	setne  al
  426bf3:	add    rsp,0x20
  426bf7:	pop    rbx
  426bf8:	ret    
  426bf9:	nop    DWORD PTR [rax+0x0]
  426c00:	sub    rsp,0x28
  426c04:	call   0x426a10
  426c09:	movzx  edx,BYTE PTR [rax]
  426c0c:	test   dl,dl
  426c0e:	je     0x426c25
  426c10:	cmp    dl,0x5c
  426c13:	je     0x426c27
  426c15:	cmp    dl,0x2f
  426c18:	je     0x426c27
  426c1a:	add    rax,0x1
  426c1e:	movzx  edx,BYTE PTR [rax]
  426c21:	test   dl,dl
  426c23:	jne    0x426c10
  426c25:	xor    eax,eax
  426c27:	add    rsp,0x28
  426c2b:	ret    
  426c2c:	nop    DWORD PTR [rax+0x0]
  426c30:	movzx  eax,BYTE PTR [rcx]
  426c33:	test   al,al
  426c35:	jne    0x426c4b
  426c37:	jmp    0x426c53
  426c39:	nop    DWORD PTR [rax+0x0]
  426c40:	add    rcx,0x1
  426c44:	movzx  eax,BYTE PTR [rcx]
  426c47:	test   al,al
  426c49:	je     0x426c53
  426c4b:	cmp    al,0x3b
  426c4d:	jne    0x426c40
  426c4f:	mov    rax,rcx
  426c52:	ret    
  426c53:	xor    eax,eax
  426c55:	ret    
  426c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426c60:	sub    rsp,0x28
  426c64:	call   0x426a10
  426c69:	movzx  edx,BYTE PTR [rax]
  426c6c:	mov    rcx,rax
  426c6f:	xor    eax,eax
  426c71:	test   dl,dl
  426c73:	jne    0x426c90
  426c75:	jmp    0x426ca3
  426c77:	nop    WORD PTR [rax+rax*1+0x0]
  426c80:	cmp    dl,0x2f
  426c83:	je     0x426c95
  426c85:	add    rcx,0x1
  426c89:	movzx  edx,BYTE PTR [rcx]
  426c8c:	test   dl,dl
  426c8e:	je     0x426ca3
  426c90:	cmp    dl,0x5c
  426c93:	jne    0x426c80
  426c95:	mov    rax,rcx
  426c98:	add    rcx,0x1
  426c9c:	movzx  edx,BYTE PTR [rcx]
  426c9f:	test   dl,dl
  426ca1:	jne    0x426c90
  426ca3:	add    rsp,0x28
  426ca7:	ret    
  426ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  426cb0:	movzx  eax,BYTE PTR [rcx]
  426cb3:	test   al,al
  426cb5:	jne    0x426ccb
  426cb7:	jmp    0x426cdd
  426cb9:	nop    DWORD PTR [rax+0x0]
  426cc0:	add    rcx,0x1
  426cc4:	movzx  eax,BYTE PTR [rcx]
  426cc7:	test   al,al
  426cc9:	je     0x426cdd
  426ccb:	cmp    al,0x2f
  426ccd:	jne    0x426cc0
  426ccf:	mov    BYTE PTR [rcx],0x5c
  426cd2:	add    rcx,0x1
  426cd6:	movzx  eax,BYTE PTR [rcx]
  426cd9:	test   al,al
  426cdb:	jne    0x426ccb
  426cdd:	repz ret 
  426cdf:	nop
  426ce0:	push   rdi
  426ce1:	push   rsi
  426ce2:	push   rbx
  426ce3:	sub    rsp,0x30
  426ce7:	cmp    rcx,rdx
  426cea:	mov    rsi,rcx
  426ced:	mov    rdi,rdx
  426cf0:	mov    rbx,r8
  426cf3:	je     0x426d12
  426cf5:	mov    r8d,0x400
  426cfb:	call   0x424a90
  426d00:	jmp    0x426d12
  426d02:	movzx  eax,BYTE PTR [rbx+0x1]
  426d06:	cmp    al,0x5c
  426d08:	je     0x426d0e
  426d0a:	cmp    al,0x2f
  426d0c:	jne    0x426d25
  426d0e:	add    rbx,0x2
  426d12:	movzx  eax,BYTE PTR [rbx]
  426d15:	cmp    al,0x2e
  426d17:	je     0x426d02
  426d19:	test   al,al
  426d1b:	jne    0x426d25
  426d1d:	add    rsp,0x30
  426d21:	pop    rbx
  426d22:	pop    rsi
  426d23:	pop    rdi
  426d24:	ret    
  426d25:	mov    rcx,rdi
  426d28:	lea    rdi,[rip+0x2cf53]        # 0x453c82
  426d2f:	call   0x426a10
  426d34:	cmp    BYTE PTR [rax],0x0
  426d37:	lea    rax,[rip+0x2cf42]        # 0x453c80
  426d3e:	mov    rcx,rsi
  426d41:	cmovne rdi,rax
  426d45:	call   0x42a400
  426d4a:	lea    r8,[rip+0x2cf32]        # 0x453c83
  426d51:	lea    rcx,[rsi+rax*1]
  426d55:	mov    edx,0x400
  426d5a:	sub    rdx,rax
  426d5d:	mov    QWORD PTR [rsp+0x20],rbx
  426d62:	mov    r9,rdi
  426d65:	call   0x426220
  426d6a:	nop
  426d6b:	add    rsp,0x30
  426d6f:	pop    rbx
  426d70:	pop    rsi
  426d71:	pop    rdi
  426d72:	ret    
  426d73:	nop    DWORD PTR [rax]
  426d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d80:	push   r15
  426d82:	push   r14
  426d84:	push   r13
  426d86:	push   r12
  426d88:	push   rbp
  426d89:	push   rdi
  426d8a:	push   rsi
  426d8b:	push   rbx
  426d8c:	sub    rsp,0x28
  426d90:	movzx  edx,BYTE PTR [rcx]
  426d93:	mov    r12,rcx
  426d96:	mov    rax,rcx
  426d99:	test   dl,dl
  426d9b:	jne    0x426dab
  426d9d:	jmp    0x426dcd
  426d9f:	nop
  426da0:	add    rax,0x1
  426da4:	movzx  edx,BYTE PTR [rax]
  426da7:	test   dl,dl
  426da9:	je     0x426dbe
  426dab:	cmp    dl,0x5c
  426dae:	jne    0x426da0
  426db0:	mov    BYTE PTR [rax],0x2f
  426db3:	add    rax,0x1
  426db7:	movzx  edx,BYTE PTR [rax]
  426dba:	test   dl,dl
  426dbc:	jne    0x426dab
  426dbe:	cmp    r12,rax
  426dc1:	jae    0x426dcd
  426dc3:	cmp    BYTE PTR [rax-0x1],0x22
  426dc7:	je     0x426f56
  426dcd:	mov    rcx,r12
  426dd0:	call   0x426a90
  426dd5:	cmp    BYTE PTR [r12],0x0
  426dda:	mov    rcx,r12
  426ddd:	je     0x426e2b
  426ddf:	movzx  edx,BYTE PTR [r12+0x1]
  426de5:	lea    rcx,[r12+0x1]
  426dea:	test   dl,dl
  426dec:	je     0x426e2b
  426dee:	mov    r8,rcx
  426df1:	xor    r9d,r9d
  426df4:	cmp    dl,0x2f
  426df7:	mov    rax,r8
  426dfa:	jne    0x426e0d
  426dfc:	test   r9b,r9b
  426dff:	je     0x426e0d
  426e01:	add    rax,0x1
  426e05:	movzx  edx,BYTE PTR [rax]
  426e08:	cmp    dl,0x2f
  426e0b:	je     0x426e01
  426e0d:	cmp    rcx,rax
  426e10:	je     0x426e14
  426e12:	mov    BYTE PTR [rcx],dl
  426e14:	cmp    BYTE PTR [rax],0x2f
  426e17:	movzx  edx,BYTE PTR [rax+0x1]
  426e1b:	lea    r8,[rax+0x1]
  426e1f:	sete   r9b
  426e23:	add    rcx,0x1
  426e27:	test   dl,dl
  426e29:	jne    0x426df4
  426e2b:	mov    BYTE PTR [rcx],0x0
  426e2e:	lea    r15,[rip+0x2ce56]        # 0x453c8b
  426e35:	mov    rcx,r12
  426e38:	call   0x426a10
  426e3d:	xor    ebp,ebp
  426e3f:	mov    rbx,rax
  426e42:	mov    r14d,0x2
  426e48:	mov    r13d,0x3
  426e4e:	xchg   ax,ax
  426e50:	mov    rcx,rbx
  426e53:	call   0x42a400
  426e58:	cmp    eax,0x1
  426e5b:	jle    0x426e77
  426e5d:	movsxd rdx,eax
  426e60:	lea    rdi,[rip+0x2ce21]        # 0x453c88
  426e67:	mov    rcx,r13
  426e6a:	lea    rsi,[rbx+rdx*1-0x2]
  426e6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e71:	je     0x426f40
  426e77:	mov    rsi,rbx
  426e7a:	mov    rdi,r15
  426e7d:	mov    rcx,r14
  426e80:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e82:	je     0x426f4d
  426e88:	cmp    eax,0x2
  426e8b:	jle    0x426ec0
  426e8d:	cdqe   
  426e8f:	lea    rdi,[rip+0x2cdf7]        # 0x453c8d
  426e96:	mov    ecx,0x4
  426e9b:	lea    rsi,[rbx+rax*1-0x3]
  426ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426ea2:	jne    0x426ec0
  426ea4:	mov    rcx,r12
  426ea7:	add    ebp,0x1
  426eaa:	call   0x426af0
  426eaf:	mov    rcx,rbx
  426eb2:	call   0x42a400
  426eb7:	cmp    eax,0x1
  426eba:	jg     0x426e5d
  426ebc:	jmp    0x426e77
  426ebe:	xchg   ax,ax
  426ec0:	lea    rdi,[rip+0x2cdca]        # 0x453c91
  426ec7:	mov    rsi,rbx
  426eca:	mov    rcx,r13
  426ecd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426ecf:	je     0x426ea4
  426ed1:	test   ebp,ebp
  426ed3:	jle    0x426f2d
  426ed5:	cmp    BYTE PTR [rbx],0x0
  426ed8:	je     0x426f0d
  426eda:	mov    rcx,r12
  426edd:	sub    ebp,0x1
  426ee0:	call   0x426af0
  426ee5:	cmp    BYTE PTR [rbx],0x0
  426ee8:	jne    0x426e50
  426eee:	mov    edx,0x2e
  426ef3:	mov    WORD PTR [rbx],dx
  426ef6:	jmp    0x426e50
  426efb:	nop    DWORD PTR [rax+rax*1+0x0]
  426f00:	call   0x42a400
  426f05:	mov    DWORD PTR [r12+rax*1],0x2f2e2e
  426f0d:	sub    ebp,0x1
  426f10:	mov    rcx,r12
  426f13:	jne    0x426f00
  426f15:	call   0x42a400
  426f1a:	add    r12,rax
  426f1d:	mov    eax,0x2e2e
  426f22:	mov    WORD PTR [r12],ax
  426f27:	mov    BYTE PTR [r12+0x2],0x0
  426f2d:	add    rsp,0x28
  426f31:	pop    rbx
  426f32:	pop    rsi
  426f33:	pop    rdi
  426f34:	pop    rbp
  426f35:	pop    r12
  426f37:	pop    r13
  426f39:	pop    r14
  426f3b:	pop    r15
  426f3d:	ret    
  426f3e:	xchg   ax,ax
  426f40:	mov    rcx,r12
  426f43:	call   0x426af0
  426f48:	jmp    0x426e50
  426f4d:	test   ebp,ebp
  426f4f:	jle    0x426f2d
  426f51:	mov    BYTE PTR [rbx],0x0
  426f54:	jmp    0x426f0d
  426f56:	mov    BYTE PTR [rax-0x1],0x2f
  426f5a:	jmp    0x426dcd
  426f5f:	nop
  426f60:	push   r15
  426f62:	push   r14
  426f64:	push   r13
  426f66:	push   r12
  426f68:	push   rbp
  426f69:	push   rdi
  426f6a:	push   rsi
  426f6b:	push   rbx
  426f6c:	sub    rsp,0x28
  426f70:	mov    rbx,rdx
  426f73:	mov    rsi,rcx
  426f76:	mov    rdx,r8
  426f79:	movzx  eax,BYTE PTR [rbx]
  426f7c:	test   al,al
  426f7e:	je     0x427025
  426f84:	mov    r10d,0x1
  426f8a:	xor    edi,edi
  426f8c:	mov    r9d,0x2f
  426f92:	jmp    0x426fbe
  426f94:	cmp    al,0x2f
  426f96:	je     0x426fc2
  426f98:	cmp    al,r9b
  426f9b:	jne    0x426fe0
  426f9d:	movsxd r9,r10d
  426fa0:	movzx  eax,BYTE PTR [rbx+r9*1]
  426fa5:	test   al,al
  426fa7:	je     0x426fe0
  426fa9:	lea    r11,[rip+0x2cce8]        # 0x453c98
  426fb0:	add    r10d,0x1
  426fb4:	movzx  r9d,BYTE PTR [r11+r9*1]
  426fb9:	test   r9b,r9b
  426fbc:	je     0x426fe0
  426fbe:	cmp    al,0x5c
  426fc0:	jne    0x426f94
  426fc2:	cmp    r9b,0x5c
  426fc6:	je     0x426fce
  426fc8:	cmp    r9b,0x2f
  426fcc:	jne    0x426f98
  426fce:	movsxd r9,r10d
  426fd1:	movsxd rdi,r10d
  426fd4:	movzx  eax,BYTE PTR [rbx+r9*1]
  426fd9:	test   al,al
  426fdb:	jne    0x426fa9
  426fdd:	nop    DWORD PTR [rax]
  426fe0:	test   edi,edi
  426fe2:	je     0x427025
  426fe4:	mov    r8d,0x400
  426fea:	mov    rcx,rsi
  426fed:	call   0x424a90
  426ff2:	mov    rcx,rsi
  426ff5:	call   0x426af0
  426ffa:	mov    rcx,rsi
  426ffd:	call   0x426d80
  427002:	mov    rcx,rsi
  427005:	call   0x42a400
  42700a:	lea    r13d,[rdi+rax*1-0x3f]
  42700f:	test   r13d,r13d
  427012:	jle    0x427025
  427014:	movsxd r13,r13d
  427017:	movzx  eax,BYTE PTR [rsi+r13*1-0x1]
  42701d:	cmp    al,0x5c
  42701f:	je     0x42704e
  427021:	cmp    al,0x2f
  427023:	je     0x42704e
  427025:	mov    r8d,0x400
  42702b:	mov    rdx,rbx
  42702e:	mov    rcx,rsi
  427031:	call   0x424a90
  427036:	mov    rcx,rsi
  427039:	add    rsp,0x28
  42703d:	pop    rbx
  42703e:	pop    rsi
  42703f:	pop    rdi
  427040:	pop    rbp
  427041:	pop    r12
  427043:	pop    r13
  427045:	pop    r14
  427047:	pop    r15
  427049:	jmp    0x426d80
  42704e:	add    r13,rsi
  427051:	lea    r14,[rip+0x2cc40]        # 0x453c98
  427058:	movzx  eax,BYTE PTR [r13+0x0]
  42705d:	add    r14,rdi
  427060:	test   al,al
  427062:	je     0x4270be
  427064:	movzx  ebp,BYTE PTR [r14]
  427068:	test   bpl,bpl
  42706b:	je     0x427025
  42706d:	mov    r12,r13
  427070:	jmp    0x42707b
  427072:	movzx  ebp,BYTE PTR [r14]
  427076:	test   bpl,bpl
  427079:	je     0x427025
  42707b:	movzx  ecx,al
  42707e:	call   0x4279a0
  427083:	movzx  ecx,bpl
  427087:	mov    r15d,eax
  42708a:	call   0x4279a0
  42708f:	cmp    r15b,al
  427092:	je     0x4270ad
  427094:	movzx  eax,BYTE PTR [r12]
  427099:	cmp    al,0x5c
  42709b:	je     0x4270a1
  42709d:	cmp    al,0x2f
  42709f:	jne    0x4270e9
  4270a1:	cmp    bpl,0x5c
  4270a5:	je     0x4270ad
  4270a7:	cmp    bpl,0x2f
  4270ab:	jne    0x4270e9
  4270ad:	add    r12,0x1
  4270b1:	movzx  eax,BYTE PTR [r12]
  4270b6:	add    r14,0x1
  4270ba:	test   al,al
  4270bc:	jne    0x427072
  4270be:	cmp    BYTE PTR [r14],0x0
  4270c2:	jne    0x427025
  4270c8:	mov    rcx,rsi
  4270cb:	mov    BYTE PTR [r13+0x0],0x0
  4270d0:	call   0x426a90
  4270d5:	lea    r8,[rbx+rdi*1]
  4270d9:	mov    rdx,rsi
  4270dc:	mov    rcx,rsi
  4270df:	call   0x426ce0
  4270e4:	jmp    0x427036
  4270e9:	cmp    bpl,al
  4270ec:	jne    0x427025
  4270f2:	jmp    0x4270c8
  4270f4:	xchg   ax,ax
  4270f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427100:	push   r12
  427102:	push   rbp
  427103:	push   rdi
  427104:	push   rsi
  427105:	push   rbx
  427106:	sub    rsp,0x20
  42710a:	lea    rdi,[rip+0x2cb80]        # 0x453c91
  427111:	mov    ebp,0x1
  427116:	call   0x426a10
  42711b:	mov    rbx,rax
  42711e:	mov    rcx,rax
  427121:	call   0x42a400
  427126:	mov    rsi,rbx
  427129:	mov    ecx,0x3
  42712e:	mov    r12,rax
  427131:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427133:	seta   cl
  427136:	setb   dl
  427139:	cmp    cl,dl
  42713b:	je     0x427164
  42713d:	lea    rdi,[rip+0x2cb94]        # 0x453cd8
  427144:	mov    ecx,0x3
  427149:	mov    rsi,rbx
  42714c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42714e:	je     0x427164
  427150:	lea    rdx,[rip+0x2cb85]        # 0x453cdc
  427157:	mov    rcx,rbx
  42715a:	call   0x42a3d8
  42715f:	test   rax,rax
  427162:	je     0x427171
  427164:	mov    eax,ebp
  427166:	add    rsp,0x20
  42716a:	pop    rbx
  42716b:	pop    rsi
  42716c:	pop    rdi
  42716d:	pop    rbp
  42716e:	pop    r12
  427170:	ret    
  427171:	xor    ebp,ebp
  427173:	cmp    r12d,0x2
  427177:	jle    0x427164
  427179:	movsxd r12,r12d
  42717c:	lea    rdi,[rip+0x2cb0a]        # 0x453c8d
  427183:	mov    ecx,0x4
  427188:	lea    rsi,[rbx+r12*1-0x3]
  42718d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42718f:	sete   bpl
  427193:	jmp    0x427164
  427195:	nop
  427196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4271a0:	push   rsi
  4271a1:	push   rbx
  4271a2:	sub    rsp,0x28
  4271a6:	movzx  eax,BYTE PTR [rcx]
  4271a9:	cmp    al,0x5c
  4271ab:	je     0x4271e0
  4271ad:	cmp    al,0x2f
  4271af:	je     0x4271e0
  4271b1:	mov    rbx,rcx
  4271b4:	movzx  ecx,al
  4271b7:	call   QWORD PTR [rip+0x35b3f]        # 0x45ccfc
  4271bd:	test   eax,eax
  4271bf:	je     0x4271c7
  4271c1:	cmp    BYTE PTR [rbx+0x1],0x3a
  4271c5:	je     0x4271f0
  4271c7:	mov    rcx,rbx
  4271ca:	call   0x427100
  4271cf:	test   al,al
  4271d1:	sete   al
  4271d4:	add    rsp,0x28
  4271d8:	pop    rbx
  4271d9:	pop    rsi
  4271da:	ret    
  4271db:	nop    DWORD PTR [rax+rax*1+0x0]
  4271e0:	xor    eax,eax
  4271e2:	add    rsp,0x28
  4271e6:	pop    rbx
  4271e7:	pop    rsi
  4271e8:	ret    
  4271e9:	nop    DWORD PTR [rax+0x0]
  4271f0:	movzx  esi,BYTE PTR [rbx+0x2]
  4271f4:	cmp    sil,0x5c
  4271f8:	je     0x4271e0
  4271fa:	cmp    sil,0x2f
  4271fe:	je     0x4271e0
  427200:	mov    rcx,rbx
  427203:	call   0x427100
  427208:	mov    edx,eax
  42720a:	xor    eax,eax
  42720c:	test   dl,dl
  42720e:	jne    0x4271d4
  427210:	cmp    sil,0x5c
  427214:	setne  dl
  427217:	cmp    sil,0x2f
  42721b:	setne  al
  42721e:	and    eax,edx
  427220:	xor    eax,0x1
  427223:	jmp    0x4271d4
  427225:	nop
  427226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427230:	push   rdi
  427231:	push   rsi
  427232:	push   rbx
  427233:	sub    rsp,0x20
  427237:	mov    rsi,rcx
  42723a:	mov    rdi,rdx
  42723d:	call   0x42a400
  427242:	movsxd rbx,eax
  427245:	mov    rcx,rsi
  427248:	mov    rdx,rdi
  42724b:	mov    r8,rbx
  42724e:	call   0x42a3f8
  427253:	xor    ecx,ecx
  427255:	test   eax,eax
  427257:	jne    0x427272
  427259:	movzx  edx,BYTE PTR [rdi+rbx*1]
  42725d:	cmp    dl,0x5c
  427260:	sete   cl
  427263:	cmp    dl,0x2f
  427266:	sete   al
  427269:	or     ecx,eax
  42726b:	test   dl,dl
  42726d:	sete   dl
  427270:	or     ecx,edx
  427272:	mov    eax,ecx
  427274:	add    rsp,0x20
  427278:	pop    rbx
  427279:	pop    rsi
  42727a:	pop    rdi
  42727b:	ret    
  42727c:	nop    DWORD PTR [rax+0x0]
  427280:	push   rsi
  427281:	push   rbx
  427282:	sub    rsp,0x28
  427286:	mov    rbx,rcx
  427289:	call   0x426c60
  42728e:	test   rax,rax
  427291:	je     0x427360
  427297:	lea    rsi,[rax+0x1]
  42729b:	mov    rcx,rsi
  42729e:	call   0x42a390
  4272a3:	test   rax,rax
  4272a6:	mov    rbx,rax
  4272a9:	je     0x427370
  4272af:	mov    rcx,rax
  4272b2:	mov    eax,DWORD PTR [rcx]
  4272b4:	add    rcx,0x4
  4272b8:	lea    edx,[rax-0x1010101]
  4272be:	not    eax
  4272c0:	and    edx,eax
  4272c2:	and    edx,0x80808080
  4272c8:	je     0x4272b2
  4272ca:	mov    eax,edx
  4272cc:	shr    eax,0x10
  4272cf:	test   edx,0x8080
  4272d5:	cmove  edx,eax
  4272d8:	lea    rax,[rcx+0x2]
  4272dc:	cmove  rcx,rax
  4272e0:	add    dl,dl
  4272e2:	sbb    rcx,0x3
  4272e6:	sub    rcx,rbx
  4272e9:	cmp    rcx,0x4
  4272ed:	ja     0x427300
  4272ef:	mov    rax,rbx
  4272f2:	add    rsp,0x28
  4272f6:	pop    rbx
  4272f7:	pop    rsi
  4272f8:	ret    
  4272f9:	nop    DWORD PTR [rax+0x0]
  427300:	lea    rcx,[rbx+rcx*1-0x4]
  427305:	lea    rdx,[rip+0x2c9e8]        # 0x453cf4
  42730c:	call   0x427790
  427311:	test   eax,eax
  427313:	jne    0x4272ef
  427315:	mov    rdx,rbx
  427318:	mov    ecx,DWORD PTR [rdx]
  42731a:	add    rdx,0x4
  42731e:	lea    eax,[rcx-0x1010101]
  427324:	not    ecx
  427326:	and    eax,ecx
  427328:	and    eax,0x80808080
  42732d:	je     0x427318
  42732f:	mov    ecx,eax
  427331:	shr    ecx,0x10
  427334:	test   eax,0x8080
  427339:	cmove  eax,ecx
  42733c:	lea    rcx,[rdx+0x2]
  427340:	cmove  rdx,rcx
  427344:	add    al,al
  427346:	mov    rax,rbx
  427349:	sbb    rdx,0x3
  42734d:	mov    BYTE PTR [rdx-0x4],0x0
  427351:	add    rsp,0x28
  427355:	pop    rbx
  427356:	pop    rsi
  427357:	ret    
  427358:	nop    DWORD PTR [rax+rax*1+0x0]
  427360:	mov    rcx,rbx
  427363:	call   0x426a10
  427368:	mov    rsi,rax
  42736b:	jmp    0x42729b
  427370:	call   QWORD PTR [rip+0x3583e]        # 0x45cbb4
  427376:	lea    rdx,[rip+0x2c964]        # 0x453ce1
  42737d:	lea    rcx,[rax+0x60]
  427381:	mov    r8,rsi
  427384:	call   0x426370
  427389:	call   0x42a568
  42738e:	nop
  42738f:	nop
  427390:	push   r12
  427392:	push   rbp
  427393:	push   rdi
  427394:	push   rsi
  427395:	push   rbx
  427396:	sub    rsp,0x20
  42739a:	test   rcx,rcx
  42739d:	je     0x427544
  4273a3:	movzx  eax,BYTE PTR [rcx]
  4273a6:	mov    r12,rcx
  4273a9:	cmp    al,0x5c
  4273ab:	je     0x4274a1
  4273b1:	cmp    al,0x2f
  4273b3:	je     0x4274a1
  4273b9:	movzx  ecx,al
  4273bc:	mov    esi,0x400
  4273c1:	call   QWORD PTR [rip+0x35935]        # 0x45ccfc
  4273c7:	test   eax,eax
  4273c9:	jne    0x427483
  4273cf:	mov    rcx,rsi
  4273d2:	mov    rbp,QWORD PTR [rip+0x35813]        # 0x45cbec
  4273d9:	call   0x42a4a0
  4273de:	test   rax,rax
  4273e1:	mov    rbx,rax
  4273e4:	je     0x42741e
  4273e6:	mov    edx,esi
  4273e8:	mov    rcx,rax
  4273eb:	call   0x42a370
  4273f0:	test   rax,rax
  4273f3:	mov    rdi,rax
  4273f6:	jne    0x4274d0
  4273fc:	call   rbp
  4273fe:	cmp    DWORD PTR [rax],0x22
  427401:	jne    0x427440
  427403:	mov    rcx,rbx
  427406:	add    rsi,rsi
  427409:	call   0x42a4e8
  42740e:	mov    rcx,rsi
  427411:	call   0x42a4a0
  427416:	test   rax,rax
  427419:	mov    rbx,rax
  42741c:	jne    0x4273e6
  42741e:	call   QWORD PTR [rip+0x35790]        # 0x45cbb4
  427424:	lea    rdx,[rip+0x2c8ce]        # 0x453cf9
  42742b:	lea    rcx,[rax+0x60]
  42742f:	xor    edi,edi
  427431:	call   0x426370
  427436:	jmp    0x427475
  427438:	nop    DWORD PTR [rax+rax*1+0x0]
  427440:	call   rbp
  427442:	mov    esi,DWORD PTR [rax]
  427444:	mov    rcx,rbx
  427447:	call   0x42a4e8
  42744c:	call   rbp
  42744e:	mov    DWORD PTR [rax],esi
  427450:	call   rbp
  427452:	mov    ecx,DWORD PTR [rax]
  427454:	call   0x42a408
  427459:	mov    rbx,rax
  42745c:	call   QWORD PTR [rip+0x35752]        # 0x45cbb4
  427462:	lea    rdx,[rip+0x2c89f]        # 0x453d08
  427469:	lea    rcx,[rax+0x60]
  42746d:	mov    r8,rbx
  427470:	call   0x426370
  427475:	mov    rax,rdi
  427478:	add    rsp,0x20
  42747c:	pop    rbx
  42747d:	pop    rsi
  42747e:	pop    rdi
  42747f:	pop    rbp
  427480:	pop    r12
  427482:	ret    
  427483:	cmp    BYTE PTR [r12+0x1],0x3a
  427489:	jne    0x4273cf
  42748f:	movzx  eax,BYTE PTR [r12+0x2]
  427495:	cmp    al,0x5c
  427497:	je     0x4274a1
  427499:	cmp    al,0x2f
  42749b:	jne    0x4273cf
  4274a1:	mov    rcx,r12
  4274a4:	call   0x42a390
  4274a9:	test   rax,rax
  4274ac:	mov    rdi,rax
  4274af:	je     0x42754b
  4274b5:	mov    rcx,rdi
  4274b8:	call   0x426d80
  4274bd:	mov    rax,rdi
  4274c0:	add    rsp,0x20
  4274c4:	pop    rbx
  4274c5:	pop    rsi
  4274c6:	pop    rdi
  4274c7:	pop    rbp
  4274c8:	pop    r12
  4274ca:	ret    
  4274cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4274d0:	mov    rsi,rbx
  4274d3:	mov    edx,DWORD PTR [rsi]
  4274d5:	add    rsi,0x4
  4274d9:	lea    eax,[rdx-0x1010101]
  4274df:	not    edx
  4274e1:	and    eax,edx
  4274e3:	and    eax,0x80808080
  4274e8:	je     0x4274d3
  4274ea:	mov    edx,eax
  4274ec:	mov    rcx,r12
  4274ef:	shr    edx,0x10
  4274f2:	test   eax,0x8080
  4274f7:	cmove  eax,edx
  4274fa:	lea    rdx,[rsi+0x2]
  4274fe:	cmove  rsi,rdx
  427502:	add    al,al
  427504:	sbb    rsi,0x3
  427508:	sub    rsi,rbx
  42750b:	call   0x42a400
  427510:	lea    rcx,[rsi+rax*1+0x2]
  427515:	call   0x42a4a0
  42751a:	test   rax,rax
  42751d:	mov    rdi,rax
  427520:	je     0x427566
  427522:	lea    rdx,[rip+0x2c80c]        # 0x453d35
  427529:	mov    r9,r12
  42752c:	mov    r8,rbx
  42752f:	mov    rcx,rax
  427532:	call   0x426260
  427537:	mov    rcx,rbx
  42753a:	call   0x42a4e8
  42753f:	jmp    0x4274b5
  427544:	xor    edi,edi
  427546:	jmp    0x427475
  42754b:	call   QWORD PTR [rip+0x35663]        # 0x45cbb4
  427551:	lea    rdx,[rip+0x2c7a1]        # 0x453cf9
  427558:	lea    rcx,[rax+0x60]
  42755c:	call   0x426370
  427561:	jmp    0x427475
  427566:	mov    rcx,rbx
  427569:	call   0x42a4e8
  42756e:	call   QWORD PTR [rip+0x35640]        # 0x45cbb4
  427574:	lea    rdx,[rip+0x2c77e]        # 0x453cf9
  42757b:	lea    rcx,[rax+0x60]
  42757f:	call   0x426370
  427584:	jmp    0x427475
  427589:	nop    DWORD PTR [rax+0x0]
  427590:	mov    r8,rcx
  427593:	mov    rcx,rdx
  427596:	lea    rdx,[rip+0x2c7a3]        # 0x453d40
  42759d:	jmp    0x426f60
  4275a2:	nop    DWORD PTR [rax+0x0]
  4275a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275b0:	mov    r8,rcx
  4275b3:	mov    rcx,rdx
  4275b6:	lea    rdx,[rip+0x2c7d3]        # 0x453d90
  4275bd:	jmp    0x426f60
  4275c2:	nop    DWORD PTR [rax+0x0]
  4275c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275d0:	mov    r8,rcx
  4275d3:	mov    rcx,rdx
  4275d6:	lea    rdx,[rip+0x2c803]        # 0x453de0
  4275dd:	jmp    0x426f60
  4275e2:	nop    DWORD PTR [rax+0x0]
  4275e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275f0:	mov    r8,rcx
  4275f3:	mov    rcx,rdx
  4275f6:	lea    rdx,[rip+0x2c82b]        # 0x453e28
  4275fd:	jmp    0x426f60
  427602:	nop    DWORD PTR [rax+0x0]
  427606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427610:	mov    r8,rcx
  427613:	mov    rcx,rdx
  427616:	lea    rdx,[rip+0x2c85b]        # 0x453e78
  42761d:	jmp    0x426f60
  427622:	nop    DWORD PTR [rax+0x0]
  427626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427630:	mov    r8,rcx
  427633:	mov    rcx,rdx
  427636:	lea    rdx,[rip+0x2c893]        # 0x453ed0
  42763d:	jmp    0x426f60
  427642:	nop    DWORD PTR [rax+0x0]
  427646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427650:	mov    r8,rcx
  427653:	mov    rcx,rdx
  427656:	lea    rdx,[rip+0x2c8b3]        # 0x453f10
  42765d:	jmp    0x426f60
  427662:	nop    DWORD PTR [rax+0x0]
  427666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427670:	mov    r8,rcx
  427673:	mov    rcx,rdx
  427676:	lea    rdx,[rip+0x2c8e3]        # 0x453f60
  42767d:	jmp    0x426f60
  427682:	nop    DWORD PTR [rax+0x0]
  427686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427690:	mov    r8,rcx
  427693:	mov    rcx,rdx
  427696:	lea    rdx,[rip+0x2c913]        # 0x453fb0
  42769d:	jmp    0x426f60
  4276a2:	nop    DWORD PTR [rax+0x0]
  4276a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276b0:	mov    r8,rcx
  4276b3:	mov    rcx,rdx
  4276b6:	lea    rdx,[rip+0x2c8f3]        # 0x453fb0
  4276bd:	jmp    0x426f60
  4276c2:	nop    DWORD PTR [rax+0x0]
  4276c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276d0:	mov    r8,rcx
  4276d3:	mov    rcx,rdx
  4276d6:	lea    rdx,[rip+0x2c92b]        # 0x454008
  4276dd:	jmp    0x426f60
  4276e2:	nop    DWORD PTR [rax+0x0]
  4276e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276f0:	push   rbx
  4276f1:	sub    rsp,0x20
  4276f5:	mov    rbx,rcx
  4276f8:	lea    rcx,[rip+0x2c94f]        # 0x45404e
  4276ff:	call   0x42a4d0
  427704:	mov    r9,rax
  427707:	xor    eax,eax
  427709:	test   r9,r9
  42770c:	je     0x427727
  42770e:	lea    r8,[rip+0x2c941]        # 0x454056
  427715:	mov    edx,0x400
  42771a:	mov    rcx,rbx
  42771d:	call   0x426220
  427722:	mov    eax,0x1
  427727:	add    rsp,0x20
  42772b:	pop    rbx
  42772c:	ret    
  42772d:	nop    DWORD PTR [rax]
  427730:	jmp    0x426af0
  427735:	nop
  427736:	nop
  427737:	nop
  427738:	nop
  427739:	nop
  42773a:	nop
  42773b:	nop
  42773c:	nop
  42773d:	nop
  42773e:	nop
  42773f:	nop
  427740:	test   ecx,ecx
  427742:	mov    eax,ecx
  427744:	jle    0x427780
  427746:	cmp    eax,0x1f3
  42774b:	mov    ecx,0x1
  427750:	jle    0x427770
  427752:	lea    r8d,[rax+0x1f4]
  427759:	mov    edx,0x10624dd3
  42775e:	mov    eax,r8d
  427761:	imul   edx
  427763:	mov    eax,r8d
  427766:	sar    eax,0x1f
  427769:	sar    edx,0x6
  42776c:	mov    ecx,edx
  42776e:	sub    ecx,eax
  427770:	mov    rax,QWORD PTR [rip+0x353cd]        # 0x45cb44
  427777:	xor    edx,edx
  427779:	rex.W jmp rax
  42777c:	nop    DWORD PTR [rax+0x0]
  427780:	repz ret 
  427782:	nop
  427783:	nop
  427784:	nop
  427785:	nop
  427786:	nop
  427787:	nop
  427788:	nop
  427789:	nop
  42778a:	nop
  42778b:	nop
  42778c:	nop
  42778d:	nop
  42778e:	nop
  42778f:	nop
  427790:	push   r15
  427792:	push   r14
  427794:	push   r13
  427796:	push   r12
  427798:	push   rbp
  427799:	push   rdi
  42779a:	push   rsi
  42779b:	push   rbx
  42779c:	sub    rsp,0x28
  4277a0:	mov    r13,QWORD PTR [rip+0x3556d]        # 0x45cd14
  4277a7:	mov    r14,QWORD PTR [rip+0x3565e]        # 0x45ce0c
  4277ae:	mov    r12,rcx
  4277b1:	mov    r15,rdx
  4277b4:	jmp    0x4277d7
  4277b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277c0:	add    ebx,0x20
  4277c3:	lea    eax,[rsi-0x41]
  4277c6:	cmp    al,0x19
  4277c8:	ja     0x427820
  4277ca:	lea    edi,[rsi+0x20]
  4277cd:	cmp    bl,dil
  4277d0:	jne    0x427840
  4277d2:	test   dil,dil
  4277d5:	je     0x427850
  4277d7:	add    r12,0x1
  4277db:	add    r15,0x1
  4277df:	movzx  esi,BYTE PTR [r15-0x1]
  4277e4:	movzx  ebx,BYTE PTR [r12-0x1]
  4277ea:	mov    edi,esi
  4277ec:	cmp    bl,sil
  4277ef:	je     0x4277d2
  4277f1:	lea    eax,[rbx-0x41]
  4277f4:	cmp    al,0x19
  4277f6:	jbe    0x4277c0
  4277f8:	test   bl,bl
  4277fa:	jns    0x4277c3
  4277fc:	movzx  ebp,bl
  4277ff:	mov    ecx,ebp
  427801:	call   r13
  427804:	test   eax,eax
  427806:	je     0x4277c3
  427808:	mov    ecx,ebp
  42780a:	call   r14
  42780d:	mov    ebx,eax
  42780f:	lea    eax,[rsi-0x41]
  427812:	cmp    al,0x19
  427814:	jbe    0x4277ca
  427816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427820:	test   sil,sil
  427823:	jns    0x4277cd
  427825:	mov    ecx,esi
  427827:	call   QWORD PTR [rip+0x354e7]        # 0x45cd14
  42782d:	test   eax,eax
  42782f:	je     0x4277cd
  427831:	mov    ecx,esi
  427833:	call   QWORD PTR [rip+0x355d3]        # 0x45ce0c
  427839:	mov    edi,eax
  42783b:	cmp    bl,dil
  42783e:	je     0x4277d2
  427840:	movzx  eax,bl
  427843:	movzx  edi,dil
  427847:	sub    eax,edi
  427849:	jmp    0x427852
  42784b:	nop    DWORD PTR [rax+rax*1+0x0]
  427850:	xor    eax,eax
  427852:	add    rsp,0x28
  427856:	pop    rbx
  427857:	pop    rsi
  427858:	pop    rdi
  427859:	pop    rbp
  42785a:	pop    r12
  42785c:	pop    r13
  42785e:	pop    r14
  427860:	pop    r15
  427862:	ret    
  427863:	nop    DWORD PTR [rax]
  427866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427870:	push   r15
  427872:	push   r14
  427874:	push   r13
  427876:	push   r12
  427878:	push   rbp
  427879:	push   rdi
  42787a:	push   rsi
  42787b:	push   rbx
  42787c:	sub    rsp,0x38
  427880:	mov    rax,QWORD PTR [rip+0x35585]        # 0x45ce0c
  427887:	mov    r13,QWORD PTR [rip+0x35486]        # 0x45cd14
  42788e:	mov    rbp,rcx
  427891:	mov    rdi,rdx
  427894:	lea    r12,[rdx+r8*1]
  427898:	mov    QWORD PTR [rsp+0x28],rax
  42789d:	jmp    0x4278b8
  42789f:	nop
  4278a0:	add    ebx,0x20
  4278a3:	lea    eax,[rsi-0x41]
  4278a6:	cmp    al,0x19
  4278a8:	ja     0x427901
  4278aa:	lea    r15d,[rsi+0x20]
  4278ae:	cmp    bl,r15b
  4278b1:	jne    0x427922
  4278b3:	test   r15b,r15b
  4278b6:	je     0x427930
  4278b8:	cmp    rdi,r12
  4278bb:	je     0x427930
  4278bd:	add    rbp,0x1
  4278c1:	add    rdi,0x1
  4278c5:	movzx  esi,BYTE PTR [rdi-0x1]
  4278c9:	movzx  ebx,BYTE PTR [rbp-0x1]
  4278cd:	mov    r15d,esi
  4278d0:	cmp    bl,sil
  4278d3:	je     0x4278b3
  4278d5:	lea    eax,[rbx-0x41]
  4278d8:	cmp    al,0x19
  4278da:	jbe    0x4278a0
  4278dc:	test   bl,bl
  4278de:	jns    0x4278a3
  4278e0:	movzx  r14d,bl
  4278e4:	mov    ecx,r14d
  4278e7:	call   r13
  4278ea:	test   eax,eax
  4278ec:	je     0x4278a3
  4278ee:	mov    ecx,r14d
  4278f1:	mov    rax,QWORD PTR [rsp+0x28]
  4278f6:	call   rax
  4278f8:	mov    ebx,eax
  4278fa:	lea    eax,[rsi-0x41]
  4278fd:	cmp    al,0x19
  4278ff:	jbe    0x4278aa
  427901:	test   sil,sil
  427904:	jns    0x4278ae
  427906:	mov    ecx,esi
  427908:	call   QWORD PTR [rip+0x35406]        # 0x45cd14
  42790e:	test   eax,eax
  427910:	je     0x4278ae
  427912:	mov    ecx,esi
  427914:	call   QWORD PTR [rip+0x354f2]        # 0x45ce0c
  42791a:	mov    r15d,eax
  42791d:	cmp    bl,r15b
  427920:	je     0x4278b3
  427922:	movzx  ebx,bl
  427925:	movzx  r15d,r15b
  427929:	mov    eax,ebx
  42792b:	sub    eax,r15d
  42792e:	jmp    0x427932
  427930:	xor    eax,eax
  427932:	add    rsp,0x38
  427936:	pop    rbx
  427937:	pop    rsi
  427938:	pop    rdi
  427939:	pop    rbp
  42793a:	pop    r12
  42793c:	pop    r13
  42793e:	pop    r14
  427940:	pop    r15
  427942:	ret    
  427943:	nop    DWORD PTR [rax]
  427946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427950:	push   rsi
  427951:	push   rbx
  427952:	sub    rsp,0x28
  427956:	lea    eax,[rcx-0x61]
  427959:	mov    esi,ecx
  42795b:	cmp    al,0x19
  42795d:	jbe    0x427992
  42795f:	test   cl,cl
  427961:	js     0x427970
  427963:	mov    eax,esi
  427965:	add    rsp,0x28
  427969:	pop    rbx
  42796a:	pop    rsi
  42796b:	ret    
  42796c:	nop    DWORD PTR [rax+0x0]
  427970:	movzx  ebx,cl
  427973:	mov    ecx,ebx
  427975:	call   QWORD PTR [rip+0x35389]        # 0x45cd04
  42797b:	test   eax,eax
  42797d:	je     0x427963
  42797f:	mov    ecx,ebx
  427981:	call   QWORD PTR [rip+0x3548d]        # 0x45ce14
  427987:	mov    esi,eax
  427989:	mov    eax,esi
  42798b:	add    rsp,0x28
  42798f:	pop    rbx
  427990:	pop    rsi
  427991:	ret    
  427992:	lea    esi,[rcx-0x20]
  427995:	mov    eax,esi
  427997:	add    rsp,0x28
  42799b:	pop    rbx
  42799c:	pop    rsi
  42799d:	ret    
  42799e:	xchg   ax,ax
  4279a0:	push   rsi
  4279a1:	push   rbx
  4279a2:	sub    rsp,0x28
  4279a6:	lea    eax,[rcx-0x41]
  4279a9:	mov    esi,ecx
  4279ab:	cmp    al,0x19
  4279ad:	jbe    0x4279e2
  4279af:	test   cl,cl
  4279b1:	js     0x4279c0
  4279b3:	mov    eax,esi
  4279b5:	add    rsp,0x28
  4279b9:	pop    rbx
  4279ba:	pop    rsi
  4279bb:	ret    
  4279bc:	nop    DWORD PTR [rax+0x0]
  4279c0:	movzx  ebx,cl
  4279c3:	mov    ecx,ebx
  4279c5:	call   QWORD PTR [rip+0x35349]        # 0x45cd14
  4279cb:	test   eax,eax
  4279cd:	je     0x4279b3
  4279cf:	mov    ecx,ebx
  4279d1:	call   QWORD PTR [rip+0x35435]        # 0x45ce0c
  4279d7:	mov    esi,eax
  4279d9:	mov    eax,esi
  4279db:	add    rsp,0x28
  4279df:	pop    rbx
  4279e0:	pop    rsi
  4279e1:	ret    
  4279e2:	lea    esi,[rcx+0x20]
  4279e5:	mov    eax,esi
  4279e7:	add    rsp,0x28
  4279eb:	pop    rbx
  4279ec:	pop    rsi
  4279ed:	ret    
  4279ee:	xchg   ax,ax
  4279f0:	lea    edx,[rcx-0x61]
  4279f3:	mov    eax,ecx
  4279f5:	sub    ecx,0x20
  4279f8:	cmp    dl,0x19
  4279fb:	cmovbe eax,ecx
  4279fe:	ret    
  4279ff:	nop
  427a00:	lea    edx,[rcx-0x41]
  427a03:	lea    eax,[rcx+0x20]
  427a06:	cmp    dl,0x19
  427a09:	cmova  eax,ecx
  427a0c:	ret    
  427a0d:	nop
  427a0e:	nop
  427a0f:	nop
  427a10:	push   r15
  427a12:	push   r14
  427a14:	push   r13
  427a16:	push   r12
  427a18:	push   rbp
  427a19:	push   rdi
  427a1a:	push   rsi
  427a1b:	push   rbx
  427a1c:	sub    rsp,0xb8
  427a23:	lea    r13d,[rdx+0x1]
  427a27:	mov    r15,rcx
  427a2a:	mov    r14d,r8d
  427a2d:	movsxd rcx,r13d
  427a30:	call   0x42a4a0
  427a35:	test   rax,rax
  427a38:	mov    rbp,rax
  427a3b:	je     0x427cb9
  427a41:	lea    rdx,[rip+0x2c628]        # 0x454070
  427a48:	lea    rcx,[rip+0x2c623]        # 0x454072
  427a4f:	call   0x42a510
  427a54:	lea    rdx,[rip+0x2c61e]        # 0x454079
  427a5b:	lea    rcx,[rip+0x2c61a]        # 0x45407c
  427a62:	mov    rbx,rax
  427a65:	call   0x42a510
  427a6a:	test   rax,rax
  427a6d:	mov    r12,rax
  427a70:	je     0x427a7b
  427a72:	test   rbx,rbx
  427a75:	jne    0x427be2
  427a7b:	test   rbx,rbx
  427a7e:	je     0x427a88
  427a80:	mov    rcx,rbx
  427a83:	call   0x42a538
  427a88:	test   r12,r12
  427a8b:	je     0x427a95
  427a8d:	mov    rcx,r12
  427a90:	call   0x42a538
  427a95:	mov    rsi,QWORD PTR [rip+0x35118]        # 0x45cbb4
  427a9c:	call   rsi
  427a9e:	mov    rbx,rax
  427aa1:	call   rsi
  427aa3:	lea    r12,[rax+0x60]
  427aa7:	xor    edi,edi
  427aa9:	test   r14b,r14b
  427aac:	mov    QWORD PTR [rsp+0x28],0x0
  427ab5:	je     0x427c64
  427abb:	test   r15,r15
  427abe:	je     0x427ad3
  427ac0:	mov    rcx,r15
  427ac3:	mov    rdx,r12
  427ac6:	call   0x42a4f8
  427acb:	mov    rcx,r12
  427ace:	call   0x42a520
  427ad3:	mov    r8,rbx
  427ad6:	mov    edx,r13d
  427ad9:	mov    rcx,rbp
  427adc:	call   0x42a518
  427ae1:	test   rax,rax
  427ae4:	je     0x427cb0
  427aea:	mov    rdx,rbp
  427aed:	mov    ecx,DWORD PTR [rdx]
  427aef:	add    rdx,0x4
  427af3:	lea    eax,[rcx-0x1010101]
  427af9:	not    ecx
  427afb:	and    eax,ecx
  427afd:	and    eax,0x80808080
  427b02:	je     0x427aed
  427b04:	mov    ecx,eax
  427b06:	shr    ecx,0x10
  427b09:	test   eax,0x8080
  427b0e:	cmove  eax,ecx
  427b11:	lea    rcx,[rdx+0x2]
  427b15:	cmove  rdx,rcx
  427b19:	add    al,al
  427b1b:	sbb    rdx,0x3
  427b1f:	sub    rdx,rbp
  427b22:	test   edx,edx
  427b24:	jle    0x427bab
  427b2a:	movsxd rdx,edx
  427b2d:	lea    r13,[rsp+0x30]
  427b32:	lea    r15,[rbp+rdx*1-0x1]
  427b37:	cmp    BYTE PTR [r15],0xa
  427b3b:	jne    0x427b8c
  427b3d:	jmp    0x427ca2
  427b42:	mov    rax,r13
  427b45:	mov    ecx,DWORD PTR [rax]
  427b47:	add    rax,0x4
  427b4b:	lea    edx,[rcx-0x1010101]
  427b51:	not    ecx
  427b53:	and    edx,ecx
  427b55:	and    edx,0x80808080
  427b5b:	je     0x427b45
  427b5d:	mov    ecx,edx
  427b5f:	shr    ecx,0x10
  427b62:	test   edx,0x8080
  427b68:	cmove  edx,ecx
  427b6b:	lea    rcx,[rax+0x2]
  427b6f:	cmove  rax,rcx
  427b73:	add    dl,dl
  427b75:	sbb    rax,0x3
  427b79:	sub    rax,r13
  427b7c:	test   eax,eax
  427b7e:	jle    0x427ba1
  427b80:	sub    eax,0x1
  427b83:	cdqe   
  427b85:	cmp    BYTE PTR [rsp+rax*1+0x30],0xa
  427b8a:	je     0x427ba1
  427b8c:	mov    r8,rbx
  427b8f:	mov    edx,0x80
  427b94:	mov    rcx,r13
  427b97:	call   0x42a518
  427b9c:	test   rax,rax
  427b9f:	jne    0x427b42
  427ba1:	cmp    BYTE PTR [r15],0xa
  427ba5:	je     0x427ca2
  427bab:	test   r14b,r14b
  427bae:	je     0x427c35
  427bb4:	call   rsi
  427bb6:	cmp    rax,rbx
  427bb9:	je     0x427bcb
  427bbb:	mov    rcx,rbx
  427bbe:	call   0x42a538
  427bc3:	mov    rcx,r12
  427bc6:	call   0x42a538
  427bcb:	mov    rax,rbp
  427bce:	add    rsp,0xb8
  427bd5:	pop    rbx
  427bd6:	pop    rsi
  427bd7:	pop    rdi
  427bd8:	pop    rbp
  427bd9:	pop    r12
  427bdb:	pop    r13
  427bdd:	pop    r14
  427bdf:	pop    r15
  427be1:	ret    
  427be2:	lea    rcx,[rip+0x2c49b]        # 0x454084
  427be9:	call   0x42a4d0
  427bee:	test   rax,rax
  427bf1:	mov    rsi,QWORD PTR [rip+0x34fbc]        # 0x45cbb4
  427bf8:	je     0x427aa7
  427bfe:	lea    rcx,[rip+0x2c47f]        # 0x454084
  427c05:	lea    rdi,[rip+0x2c47f]        # 0x45408b
  427c0c:	call   0x42a4d0
  427c11:	mov    ecx,0x5
  427c16:	mov    rsi,rax
  427c19:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427c1b:	mov    rsi,QWORD PTR [rip+0x34f92]        # 0x45cbb4
  427c22:	seta   dl
  427c25:	setb   al
  427c28:	cmp    dl,al
  427c2a:	jne    0x427aa7
  427c30:	jmp    0x427a80
  427c35:	mov    edx,DWORD PTR [rdi]
  427c37:	mov    rcx,QWORD PTR [rsp+0x28]
  427c3c:	call   QWORD PTR [rip+0x34ee2]        # 0x45cb24
  427c42:	mov    rdx,r12
  427c45:	mov    ecx,0xa
  427c4a:	call   0x42a500
  427c4f:	mov    rcx,r12
  427c52:	call   0x42a520
  427c57:	mov    rcx,rdi
  427c5a:	call   0x42a4e8
  427c5f:	jmp    0x427bb4
  427c64:	mov    ecx,0x4
  427c69:	call   0x42a4a0
  427c6e:	mov    rdi,rax
  427c71:	mov    ecx,0xfffffff6
  427c76:	call   QWORD PTR [rip+0x34e10]        # 0x45ca8c
  427c7c:	mov    rdx,rdi
  427c7f:	mov    QWORD PTR [rsp+0x28],rax
  427c84:	mov    rcx,rax
  427c87:	call   QWORD PTR [rip+0x34dbf]        # 0x45ca4c
  427c8d:	mov    edx,0x3
  427c92:	mov    rcx,QWORD PTR [rsp+0x28]
  427c97:	call   QWORD PTR [rip+0x34e87]        # 0x45cb24
  427c9d:	jmp    0x427abb
  427ca2:	mov    BYTE PTR [r15],0x0
  427ca6:	jmp    0x427bab
  427cab:	nop    DWORD PTR [rax+rax*1+0x0]
  427cb0:	mov    BYTE PTR [rbp+0x0],0x0
  427cb4:	jmp    0x427aea
  427cb9:	xor    ebp,ebp
  427cbb:	jmp    0x427bcb
  427cc0:	push   rbx
  427cc1:	sub    rsp,0x20
  427cc5:	test   ecx,ecx
  427cc7:	mov    ebx,ecx
  427cc9:	je     0x427d40
  427ccb:	cmp    ecx,0x1
  427cce:	lea    rdx,[rip+0x2c433]        # 0x454108
  427cd5:	mov    eax,0x1
  427cda:	jne    0x427cec
  427cdc:	jmp    0x427d52
  427cde:	xchg   ax,ax
  427ce0:	add    eax,0x1
  427ce3:	add    rdx,0x8
  427ce7:	cmp    eax,0x2e
  427cea:	je     0x427d10
  427cec:	cmp    DWORD PTR [rdx],ebx
  427cee:	jne    0x427ce0
  427cf0:	lea    rdx,[rip+0x2c409]        # 0x454100
  427cf7:	cdqe   
  427cf9:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
  427cfd:	call   QWORD PTR [rip+0x34ee9]        # 0x45cbec
  427d03:	mov    DWORD PTR [rax],ebx
  427d05:	add    rsp,0x20
  427d09:	pop    rbx
  427d0a:	ret    
  427d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d10:	call   QWORD PTR [rip+0x34e9e]        # 0x45cbb4
  427d16:	lea    rdx,[rip+0x2c3a3]        # 0x4540c0
  427d1d:	lea    rcx,[rax+0x60]
  427d21:	mov    r8d,ebx
  427d24:	call   0x426370
  427d29:	call   QWORD PTR [rip+0x34ebd]        # 0x45cbec
  427d2f:	mov    DWORD PTR [rax],0x16
  427d35:	add    rsp,0x20
  427d39:	pop    rbx
  427d3a:	ret    
  427d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d40:	call   QWORD PTR [rip+0x34ea6]        # 0x45cbec
  427d46:	mov    DWORD PTR [rax],0x0
  427d4c:	add    rsp,0x20
  427d50:	pop    rbx
  427d51:	ret    
  427d52:	xor    eax,eax
  427d54:	jmp    0x427cf0
  427d56:	nop
  427d57:	nop
  427d58:	nop
  427d59:	nop
  427d5a:	nop
  427d5b:	nop
  427d5c:	nop
  427d5d:	nop
  427d5e:	nop
  427d5f:	nop
  427d60:	jmp    QWORD PTR [rip+0x34c26]        # 0x45c98c
  427d66:	nop
  427d67:	nop
  427d68:	jmp    QWORD PTR [rip+0x34c16]        # 0x45c984
  427d6e:	nop
  427d6f:	nop
  427d70:	jmp    QWORD PTR [rip+0x34c06]        # 0x45c97c
  427d76:	nop
  427d77:	nop
  427d78:	jmp    QWORD PTR [rip+0x34bf6]        # 0x45c974
  427d7e:	nop
  427d7f:	nop
  427d80:	jmp    QWORD PTR [rip+0x34be6]        # 0x45c96c
  427d86:	nop
  427d87:	nop
  427d88:	jmp    QWORD PTR [rip+0x34bd6]        # 0x45c964
  427d8e:	nop
  427d8f:	nop
  427d90:	jmp    QWORD PTR [rip+0x34bc6]        # 0x45c95c
  427d96:	nop
  427d97:	nop
  427d98:	jmp    QWORD PTR [rip+0x34bb6]        # 0x45c954
  427d9e:	nop
  427d9f:	nop
  427da0:	jmp    QWORD PTR [rip+0x34ba6]        # 0x45c94c
  427da6:	nop
  427da7:	nop
  427da8:	jmp    QWORD PTR [rip+0x34b96]        # 0x45c944
  427dae:	nop
  427daf:	nop
  427db0:	jmp    QWORD PTR [rip+0x34b86]        # 0x45c93c
  427db6:	nop
  427db7:	nop
  427db8:	jmp    QWORD PTR [rip+0x34b76]        # 0x45c934
  427dbe:	nop
  427dbf:	nop
  427dc0:	jmp    QWORD PTR [rip+0x34b66]        # 0x45c92c
  427dc6:	nop
  427dc7:	nop
  427dc8:	jmp    QWORD PTR [rip+0x34b56]        # 0x45c924
  427dce:	nop
  427dcf:	nop
  427dd0:	jmp    QWORD PTR [rip+0x34b46]        # 0x45c91c
  427dd6:	nop
  427dd7:	nop
  427dd8:	jmp    QWORD PTR [rip+0x34b36]        # 0x45c914
  427dde:	nop
  427ddf:	nop
  427de0:	jmp    QWORD PTR [rip+0x34b26]        # 0x45c90c
  427de6:	nop
  427de7:	nop
  427de8:	jmp    QWORD PTR [rip+0x34b16]        # 0x45c904
  427dee:	nop
  427def:	nop
  427df0:	jmp    QWORD PTR [rip+0x34b06]        # 0x45c8fc
  427df6:	nop
  427df7:	nop
  427df8:	jmp    QWORD PTR [rip+0x34af6]        # 0x45c8f4
  427dfe:	nop
  427dff:	nop
  427e00:	jmp    QWORD PTR [rip+0x34ae6]        # 0x45c8ec
  427e06:	nop
  427e07:	nop
  427e08:	jmp    QWORD PTR [rip+0x34ad6]        # 0x45c8e4
  427e0e:	nop
  427e0f:	nop
  427e10:	jmp    QWORD PTR [rip+0x34ac6]        # 0x45c8dc
  427e16:	nop
  427e17:	nop
  427e18:	jmp    QWORD PTR [rip+0x34ab6]        # 0x45c8d4
  427e1e:	nop
  427e1f:	nop
  427e20:	jmp    QWORD PTR [rip+0x34aa6]        # 0x45c8cc
  427e26:	nop
  427e27:	nop
  427e28:	jmp    QWORD PTR [rip+0x34a96]        # 0x45c8c4
  427e2e:	nop
  427e2f:	nop
  427e30:	jmp    QWORD PTR [rip+0x34a86]        # 0x45c8bc
  427e36:	nop
  427e37:	nop
  427e38:	jmp    QWORD PTR [rip+0x34a76]        # 0x45c8b4
  427e3e:	nop
  427e3f:	nop
  427e40:	jmp    QWORD PTR [rip+0x34a66]        # 0x45c8ac
  427e46:	nop
  427e47:	nop
  427e48:	jmp    QWORD PTR [rip+0x34a56]        # 0x45c8a4
  427e4e:	nop
  427e4f:	nop
  427e50:	jmp    QWORD PTR [rip+0x34a46]        # 0x45c89c
  427e56:	nop
  427e57:	nop
  427e58:	jmp    QWORD PTR [rip+0x34a36]        # 0x45c894
  427e5e:	nop
  427e5f:	nop
  427e60:	jmp    QWORD PTR [rip+0x34a26]        # 0x45c88c
  427e66:	nop
  427e67:	nop
  427e68:	jmp    QWORD PTR [rip+0x34a16]        # 0x45c884
  427e6e:	nop
  427e6f:	nop
  427e70:	jmp    QWORD PTR [rip+0x34a06]        # 0x45c87c
  427e76:	nop
  427e77:	nop
  427e78:	jmp    QWORD PTR [rip+0x349f6]        # 0x45c874
  427e7e:	nop
  427e7f:	nop
  427e80:	jmp    QWORD PTR [rip+0x349e6]        # 0x45c86c
  427e86:	nop
  427e87:	nop
  427e88:	jmp    QWORD PTR [rip+0x349d6]        # 0x45c864
  427e8e:	nop
  427e8f:	nop
  427e90:	jmp    QWORD PTR [rip+0x349c6]        # 0x45c85c
  427e96:	nop
  427e97:	nop
  427e98:	jmp    QWORD PTR [rip+0x349b6]        # 0x45c854
  427e9e:	nop
  427e9f:	nop
  427ea0:	jmp    QWORD PTR [rip+0x349a6]        # 0x45c84c
  427ea6:	nop
  427ea7:	nop
  427ea8:	jmp    QWORD PTR [rip+0x34996]        # 0x45c844
  427eae:	nop
  427eaf:	nop
  427eb0:	jmp    QWORD PTR [rip+0x34986]        # 0x45c83c
  427eb6:	nop
  427eb7:	nop
  427eb8:	jmp    QWORD PTR [rip+0x34976]        # 0x45c834
  427ebe:	nop
  427ebf:	nop
  427ec0:	jmp    QWORD PTR [rip+0x34966]        # 0x45c82c
  427ec6:	nop
  427ec7:	nop
  427ec8:	jmp    QWORD PTR [rip+0x34956]        # 0x45c824
  427ece:	nop
  427ecf:	nop
  427ed0:	jmp    QWORD PTR [rip+0x34946]        # 0x45c81c
  427ed6:	nop
  427ed7:	nop
  427ed8:	jmp    QWORD PTR [rip+0x34936]        # 0x45c814
  427ede:	nop
  427edf:	nop
  427ee0:	jmp    QWORD PTR [rip+0x34926]        # 0x45c80c
  427ee6:	nop
  427ee7:	nop
  427ee8:	jmp    QWORD PTR [rip+0x34916]        # 0x45c804
  427eee:	nop
  427eef:	nop
  427ef0:	jmp    QWORD PTR [rip+0x34906]        # 0x45c7fc
  427ef6:	nop
  427ef7:	nop
  427ef8:	jmp    QWORD PTR [rip+0x348f6]        # 0x45c7f4
  427efe:	nop
  427eff:	nop
  427f00:	jmp    QWORD PTR [rip+0x348e6]        # 0x45c7ec
  427f06:	nop
  427f07:	nop
  427f08:	jmp    QWORD PTR [rip+0x348d6]        # 0x45c7e4
  427f0e:	nop
  427f0f:	nop
  427f10:	jmp    QWORD PTR [rip+0x348c6]        # 0x45c7dc
  427f16:	nop
  427f17:	nop
  427f18:	jmp    QWORD PTR [rip+0x348b6]        # 0x45c7d4
  427f1e:	nop
  427f1f:	nop
  427f20:	jmp    QWORD PTR [rip+0x348a6]        # 0x45c7cc
  427f26:	nop
  427f27:	nop
  427f28:	jmp    QWORD PTR [rip+0x34896]        # 0x45c7c4
  427f2e:	nop
  427f2f:	nop
  427f30:	jmp    QWORD PTR [rip+0x34886]        # 0x45c7bc
  427f36:	nop
  427f37:	nop
  427f38:	jmp    QWORD PTR [rip+0x34876]        # 0x45c7b4
  427f3e:	nop
  427f3f:	nop
  427f40:	jmp    QWORD PTR [rip+0x34866]        # 0x45c7ac
  427f46:	nop
  427f47:	nop
  427f48:	jmp    QWORD PTR [rip+0x34856]        # 0x45c7a4
  427f4e:	nop
  427f4f:	nop
  427f50:	jmp    QWORD PTR [rip+0x34846]        # 0x45c79c
  427f56:	nop
  427f57:	nop
  427f58:	jmp    QWORD PTR [rip+0x34836]        # 0x45c794
  427f5e:	nop
  427f5f:	nop
  427f60:	jmp    QWORD PTR [rip+0x34826]        # 0x45c78c
  427f66:	nop
  427f67:	nop
  427f68:	jmp    QWORD PTR [rip+0x34816]        # 0x45c784
  427f6e:	nop
  427f6f:	nop
  427f70:	jmp    QWORD PTR [rip+0x34806]        # 0x45c77c
  427f76:	nop
  427f77:	nop
  427f78:	jmp    QWORD PTR [rip+0x347f6]        # 0x45c774
  427f7e:	nop
  427f7f:	nop
  427f80:	push   rbx
  427f81:	sub    rsp,0x30
  427f85:	mov    rbx,rcx
  427f88:	mov    rcx,QWORD PTR [rip+0x33249]        # 0x45b1d8
  427f8f:	call   0x428530
  427f94:	cmp    rax,0xffffffffffffffff
  427f98:	mov    QWORD PTR [rsp+0x20],rax
  427f9d:	je     0x428015
  427f9f:	mov    ecx,0x8
  427fa4:	call   0x42a5b0
  427fa9:	mov    rcx,QWORD PTR [rip+0x33228]        # 0x45b1d8
  427fb0:	call   0x428530
  427fb5:	mov    rcx,QWORD PTR [rip+0x33224]        # 0x45b1e0
  427fbc:	mov    QWORD PTR [rsp+0x20],rax
  427fc1:	call   0x428530
  427fc6:	lea    rdx,[rsp+0x20]
  427fcb:	lea    r8,[rsp+0x28]
  427fd0:	mov    rcx,rbx
  427fd3:	mov    QWORD PTR [rsp+0x28],rax
  427fd8:	call   0x42a610
  427fdd:	mov    rcx,QWORD PTR [rsp+0x20]
  427fe2:	mov    rbx,rax
  427fe5:	call   0x428540
  427fea:	mov    rcx,QWORD PTR [rsp+0x28]
  427fef:	mov    QWORD PTR [rip+0x331e2],rax        # 0x45b1d8
  427ff6:	call   0x428540
  427ffb:	mov    ecx,0x8
  428000:	mov    QWORD PTR [rip+0x331d9],rax        # 0x45b1e0
  428007:	call   0x42a578
  42800c:	mov    rax,rbx
  42800f:	add    rsp,0x30
  428013:	pop    rbx
  428014:	ret    
  428015:	mov    rax,QWORD PTR [rip+0x2c704]        # 0x454720
  42801c:	mov    rcx,rbx
  42801f:	call   QWORD PTR [rax]
  428021:	add    rsp,0x30
  428025:	pop    rbx
  428026:	ret    
  428027:	nop    WORD PTR [rax+rax*1+0x0]
  428030:	sub    rsp,0x28
  428034:	call   0x427f80
  428039:	test   rax,rax
  42803c:	sete   al
  42803f:	movzx  eax,al
  428042:	neg    eax
  428044:	add    rsp,0x28
  428048:	ret    
  428049:	nop
  42804a:	nop
  42804b:	nop
  42804c:	nop
  42804d:	nop
  42804e:	nop
  42804f:	nop
  428050:	sub    rsp,0x28
  428054:	mov    rax,QWORD PTR [rip+0x44a5]        # 0x42c500
  42805b:	mov    rax,QWORD PTR [rax]
  42805e:	test   rax,rax
  428061:	je     0x428080
  428063:	call   rax
  428065:	mov    rax,QWORD PTR [rip+0x4494]        # 0x42c500
  42806c:	lea    rdx,[rax+0x8]
  428070:	mov    rax,QWORD PTR [rax+0x8]
  428074:	mov    QWORD PTR [rip+0x4485],rdx        # 0x42c500
  42807b:	test   rax,rax
  42807e:	jne    0x428063
  428080:	add    rsp,0x28
  428084:	ret    
  428085:	nop
  428086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428090:	push   rsi
  428091:	push   rbx
  428092:	sub    rsp,0x28
  428096:	mov    rsi,QWORD PTR [rip+0x2c5f3]        # 0x454690
  42809d:	mov    rax,QWORD PTR [rsi]
  4280a0:	cmp    eax,0xffffffff
  4280a3:	mov    ebx,eax
  4280a5:	je     0x4280d0
  4280a7:	test   ebx,ebx
  4280a9:	je     0x4280ba
  4280ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4280b0:	mov    eax,ebx
  4280b2:	call   QWORD PTR [rsi+rax*8]
  4280b5:	sub    ebx,0x1
  4280b8:	jne    0x4280b0
  4280ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x428050
  4280c1:	add    rsp,0x28
  4280c5:	pop    rbx
  4280c6:	pop    rsi
  4280c7:	jmp    0x428030
  4280cc:	nop    DWORD PTR [rax+0x0]
  4280d0:	xor    ebx,ebx
  4280d2:	jmp    0x4280d6
  4280d4:	mov    ebx,eax
  4280d6:	lea    edx,[rbx+0x1]
  4280d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4280de:	mov    rax,rdx
  4280e1:	jne    0x4280d4
  4280e3:	jmp    0x4280a7
  4280e5:	nop
  4280e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280f0:	mov    eax,DWORD PTR [rip+0x3244a]        # 0x45a540
  4280f6:	test   eax,eax
  4280f8:	je     0x428100
  4280fa:	repz ret 
  4280fc:	nop    DWORD PTR [rax+0x0]
  428100:	mov    DWORD PTR [rip+0x32436],0x1        # 0x45a540
  42810a:	jmp    0x428090
  42810c:	nop
  42810d:	nop
  42810e:	nop
  42810f:	nop
  428110:	mov    rax,QWORD PTR [rip+0x34aa5]        # 0x45cbbc
  428117:	rex.W jmp rax
  42811a:	nop
  42811b:	nop
  42811c:	nop
  42811d:	nop
  42811e:	nop
  42811f:	nop
  428120:	xor    eax,eax
  428122:	ret    
  428123:	nop
  428124:	nop
  428125:	nop
  428126:	nop
  428127:	nop
  428128:	nop
  428129:	nop
  42812a:	nop
  42812b:	nop
  42812c:	nop
  42812d:	nop
  42812e:	nop
  42812f:	nop
  428130:	push   r12
  428132:	push   rbp
  428133:	push   rdi
  428134:	push   rsi
  428135:	push   rbx
  428136:	sub    rsp,0x40
  42813a:	mov    rbx,QWORD PTR [rip+0x445f]        # 0x42c5a0
  428141:	movabs rax,0x2b992ddfa232
  42814b:	mov    QWORD PTR [rsp+0x20],0x0
  428154:	cmp    rbx,rax
  428157:	je     0x428170
  428159:	not    rbx
  42815c:	mov    QWORD PTR [rip+0x444d],rbx        # 0x42c5b0
  428163:	add    rsp,0x40
  428167:	pop    rbx
  428168:	pop    rsi
  428169:	pop    rdi
  42816a:	pop    rbp
  42816b:	pop    r12
  42816d:	ret    
  42816e:	xchg   ax,ax
  428170:	lea    rcx,[rsp+0x20]
  428175:	call   QWORD PTR [rip+0x34919]        # 0x45ca94
  42817b:	mov    r12,QWORD PTR [rsp+0x20]
  428180:	call   QWORD PTR [rip+0x348d6]        # 0x45ca5c
  428186:	mov    ebp,eax
  428188:	call   QWORD PTR [rip+0x348d6]        # 0x45ca64
  42818e:	mov    edi,eax
  428190:	call   QWORD PTR [rip+0x3490e]        # 0x45caa4
  428196:	lea    rcx,[rsp+0x30]
  42819b:	mov    esi,eax
  42819d:	call   QWORD PTR [rip+0x34939]        # 0x45cadc
  4281a3:	xor    r12,QWORD PTR [rsp+0x30]
  4281a8:	mov    edx,edi
  4281aa:	movabs rax,0xffffffffffff
  4281b4:	xor    rbp,r12
  4281b7:	mov    rdi,rbp
  4281ba:	xor    rdi,rdx
  4281bd:	mov    edx,esi
  4281bf:	xor    rdi,rdx
  4281c2:	mov    rsi,rdi
  4281c5:	and    rsi,rax
  4281c8:	cmp    rsi,rbx
  4281cb:	je     0x4281f0
  4281cd:	mov    rax,rsi
  4281d0:	not    rax
  4281d3:	mov    QWORD PTR [rip+0x43c6],rsi        # 0x42c5a0
  4281da:	mov    QWORD PTR [rip+0x43cf],rax        # 0x42c5b0
  4281e1:	add    rsp,0x40
  4281e5:	pop    rbx
  4281e6:	pop    rsi
  4281e7:	pop    rdi
  4281e8:	pop    rbp
  4281e9:	pop    r12
  4281eb:	ret    
  4281ec:	nop    DWORD PTR [rax+0x0]
  4281f0:	movabs rax,0xffffd466d2205dcc
  4281fa:	movabs rsi,0x2b992ddfa233
  428204:	jmp    0x4281d3
  428206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428210:	push   rbp
  428211:	push   rsi
  428212:	push   rbx
  428213:	mov    rbp,rsp
  428216:	sub    rsp,0x70
  42821a:	mov    rsi,rcx
  42821d:	lea    rcx,[rip+0x3235c]        # 0x45a580
  428224:	call   QWORD PTR [rip+0x348da]        # 0x45cb04
  42822a:	mov    rbx,QWORD PTR [rip+0x32447]        # 0x45a678
  428231:	xor    r8d,r8d
  428234:	lea    rdx,[rbp-0x28]
  428238:	mov    rcx,rbx
  42823b:	call   QWORD PTR [rip+0x348cb]        # 0x45cb0c
  428241:	test   rax,rax
  428244:	mov    r9,rax
  428247:	je     0x4282f0
  42824d:	lea    rax,[rbp-0x20]
  428251:	mov    QWORD PTR [rsp+0x38],0x0
  42825a:	mov    r8,rbx
  42825d:	mov    rdx,QWORD PTR [rbp-0x28]
  428261:	xor    ecx,ecx
  428263:	mov    QWORD PTR [rsp+0x30],rax
  428268:	lea    rax,[rbp-0x18]
  42826c:	mov    QWORD PTR [rsp+0x28],rax
  428271:	lea    rax,[rip+0x32308]        # 0x45a580
  428278:	mov    QWORD PTR [rsp+0x20],rax
  42827d:	call   QWORD PTR [rip+0x34891]        # 0x45cb14
  428283:	mov    rax,QWORD PTR [rip+0x323ee]        # 0x45a678
  42828a:	xor    ecx,ecx
  42828c:	mov    QWORD PTR [rip+0x3236d],rsi        # 0x45a600
  428293:	mov    DWORD PTR [rip+0x327e3],0xc0000409        # 0x45aa80
  42829d:	mov    DWORD PTR [rip+0x327dd],0x1        # 0x45aa84
  4282a7:	mov    QWORD PTR [rip+0x327e2],rax        # 0x45aa90
  4282ae:	mov    rax,QWORD PTR [rip+0x42eb]        # 0x42c5a0
  4282b5:	mov    QWORD PTR [rbp-0x10],rax
  4282b9:	mov    rax,QWORD PTR [rip+0x42f0]        # 0x42c5b0
  4282c0:	mov    QWORD PTR [rbp-0x8],rax
  4282c4:	call   QWORD PTR [rip+0x3486a]        # 0x45cb34
  4282ca:	lea    rcx,[rip+0x2bfaf]        # 0x454280
  4282d1:	call   QWORD PTR [rip+0x34885]        # 0x45cb5c
  4282d7:	call   QWORD PTR [rip+0x34777]        # 0x45ca54
  4282dd:	mov    edx,0xc0000409
  4282e2:	mov    rcx,rax
  4282e5:	call   QWORD PTR [rip+0x34861]        # 0x45cb4c
  4282eb:	call   0x42a568
  4282f0:	mov    rax,QWORD PTR [rbp+0x18]
  4282f4:	mov    QWORD PTR [rip+0x3237d],rax        # 0x45a678
  4282fb:	lea    rax,[rbp+0x8]
  4282ff:	mov    QWORD PTR [rip+0x32312],rax        # 0x45a618
  428306:	jmp    0x428283
  42830b:	nop
  42830c:	nop
  42830d:	nop
  42830e:	nop
  42830f:	nop
  428310:	sub    rsp,0x28
  428314:	test   edx,edx
  428316:	je     0x428330
  428318:	cmp    edx,0x3
  42831b:	je     0x428330
  42831d:	mov    eax,0x1
  428322:	add    rsp,0x28
  428326:	ret    
  428327:	nop    WORD PTR [rax+rax*1+0x0]
  428330:	call   0x429020
  428335:	mov    eax,0x1
  42833a:	add    rsp,0x28
  42833e:	ret    
  42833f:	nop
  428340:	push   rsi
  428341:	push   rbx
  428342:	sub    rsp,0x28
  428346:	mov    rax,QWORD PTR [rip+0x2c323]        # 0x454670
  42834d:	cmp    DWORD PTR [rax],0x2
  428350:	je     0x428358
  428352:	mov    DWORD PTR [rax],0x2
  428358:	cmp    edx,0x2
  42835b:	je     0x428370
  42835d:	cmp    edx,0x1
  428360:	je     0x4283a2
  428362:	mov    eax,0x1
  428367:	add    rsp,0x28
  42836b:	pop    rbx
  42836c:	pop    rsi
  42836d:	ret    
  42836e:	xchg   ax,ax
  428370:	lea    rbx,[rip+0x35ce9]        # 0x45e060
  428377:	lea    rsi,[rip+0x35ce2]        # 0x45e060
  42837e:	cmp    rbx,rsi
  428381:	je     0x428362
  428383:	mov    rax,QWORD PTR [rbx]
  428386:	test   rax,rax
  428389:	je     0x42838d
  42838b:	call   rax
  42838d:	add    rbx,0x8
  428391:	cmp    rbx,rsi
  428394:	jne    0x428383
  428396:	mov    eax,0x1
  42839b:	add    rsp,0x28
  42839f:	pop    rbx
  4283a0:	pop    rsi
  4283a1:	ret    
  4283a2:	call   0x429020
  4283a7:	jmp    0x428362
  4283a9:	nop    DWORD PTR [rax+0x0]
  4283b0:	xor    eax,eax
  4283b2:	ret    
  4283b3:	nop
  4283b4:	nop
  4283b5:	nop
  4283b6:	nop
  4283b7:	nop
  4283b8:	nop
  4283b9:	nop
  4283ba:	nop
  4283bb:	nop
  4283bc:	nop
  4283bd:	nop
  4283be:	nop
  4283bf:	nop
  4283c0:	sub    rsp,0x58
  4283c4:	mov    rax,QWORD PTR [rip+0x32795]        # 0x45ab60
  4283cb:	test   rax,rax
  4283ce:	je     0x4283fc
  4283d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4283d9:	mov    DWORD PTR [rsp+0x20],ecx
  4283dd:	lea    rcx,[rsp+0x20]
  4283e2:	mov    QWORD PTR [rsp+0x28],rdx
  4283e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4283ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4283f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4283f9:	call   rax
  4283fb:	nop
  4283fc:	add    rsp,0x58
  428400:	ret    
  428401:	nop    DWORD PTR [rax+rax*1+0x0]
  428406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428410:	mov    QWORD PTR [rip+0x32749],rcx        # 0x45ab60
  428417:	jmp    0x42a5e8
  42841c:	nop    DWORD PTR [rax+0x0]
  428420:	push   rsi
  428421:	push   rbx
  428422:	sub    rsp,0x78
  428426:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42842b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  428430:	movaps XMMWORD PTR [rsp+0x60],xmm8
  428436:	cmp    DWORD PTR [rcx],0x6
  428439:	ja     0x428510
  42843f:	mov    edx,DWORD PTR [rcx]
  428441:	lea    rax,[rip+0x2bf7c]        # 0x4543c4
  428448:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42844c:	add    rax,rdx
  42844f:	jmp    rax
  428451:	lea    rbx,[rip+0x2be48]        # 0x4542a0
  428458:	nop    DWORD PTR [rax+rax*1+0x0]
  428460:	movsd  xmm8,QWORD PTR [rcx+0x20]
  428466:	mov    rsi,QWORD PTR [rcx+0x8]
  42846a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  42846f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  428474:	call   0x42a600
  428479:	movsd  QWORD PTR [rsp+0x30],xmm8
  428480:	lea    rcx,[rax+0x60]
  428484:	lea    rdx,[rip+0x2bf0d]        # 0x454398
  42848b:	movsd  QWORD PTR [rsp+0x28],xmm7
  428491:	mov    r9,rsi
  428494:	mov    r8,rbx
  428497:	movsd  QWORD PTR [rsp+0x20],xmm6
  42849d:	call   0x42a508
  4284a2:	nop
  4284a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4284a8:	xor    eax,eax
  4284aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4284af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4284b5:	add    rsp,0x78
  4284b9:	pop    rbx
  4284ba:	pop    rsi
  4284bb:	ret    
  4284bc:	nop    DWORD PTR [rax+0x0]
  4284c0:	lea    rbx,[rip+0x2bdf8]        # 0x4542bf
  4284c7:	jmp    0x428460
  4284c9:	nop    DWORD PTR [rax+0x0]
  4284d0:	lea    rbx,[rip+0x2be09]        # 0x4542e0
  4284d7:	jmp    0x428460
  4284d9:	nop    DWORD PTR [rax+0x0]
  4284e0:	lea    rbx,[rip+0x2be69]        # 0x454350
  4284e7:	jmp    0x428460
  4284ec:	nop    DWORD PTR [rax+0x0]
  4284f0:	lea    rbx,[rip+0x2be31]        # 0x454328
  4284f7:	jmp    0x428460
  4284fc:	nop    DWORD PTR [rax+0x0]
  428500:	lea    rbx,[rip+0x2bdf9]        # 0x454300
  428507:	jmp    0x428460
  42850c:	nop    DWORD PTR [rax+0x0]
  428510:	lea    rbx,[rip+0x2be6f]        # 0x454386
  428517:	jmp    0x428460
  42851c:	nop
  42851d:	nop
  42851e:	nop
  42851f:	nop
  428520:	fninit 
  428522:	ret    
  428523:	nop
  428524:	nop
  428525:	nop
  428526:	nop
  428527:	nop
  428528:	nop
  428529:	nop
  42852a:	nop
  42852b:	nop
  42852c:	nop
  42852d:	nop
  42852e:	nop
  42852f:	nop
  428530:	mov    rax,rcx
  428533:	ret    
  428534:	xchg   ax,ax
  428536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428540:	mov    rax,rcx
  428543:	ret    
  428544:	nop
  428545:	nop
  428546:	nop
  428547:	nop
  428548:	nop
  428549:	nop
  42854a:	nop
  42854b:	nop
  42854c:	nop
  42854d:	nop
  42854e:	nop
  42854f:	nop
  428550:	push   rsi
  428551:	push   rbx
  428552:	sub    rsp,0x38
  428556:	lea    rax,[rsp+0x58]
  42855b:	mov    rbx,rcx
  42855e:	mov    QWORD PTR [rsp+0x58],rdx
  428563:	mov    QWORD PTR [rsp+0x60],r8
  428568:	mov    QWORD PTR [rsp+0x68],r9
  42856d:	mov    QWORD PTR [rsp+0x28],rax
  428572:	call   0x42a600
  428577:	lea    rcx,[rip+0x2be62]        # 0x4543e0
  42857e:	lea    r9,[rax+0x60]
  428582:	mov    r8d,0x1b
  428588:	mov    edx,0x1
  42858d:	call   0x42a4e0
  428592:	mov    rsi,QWORD PTR [rsp+0x28]
  428597:	call   0x42a600
  42859c:	lea    rcx,[rax+0x60]
  4285a0:	mov    rdx,rbx
  4285a3:	mov    r8,rsi
  4285a6:	call   0x42a3a8
  4285ab:	call   0x42a568
  4285b0:	nop
  4285b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4285b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4285c0:	push   r13
  4285c2:	push   r12
  4285c4:	push   rbp
  4285c5:	push   rdi
  4285c6:	push   rsi
  4285c7:	push   rbx
  4285c8:	sub    rsp,0x58
  4285cc:	movsxd rbp,DWORD PTR [rip+0x325b1]        # 0x45ab84
  4285d3:	mov    rbx,rcx
  4285d6:	mov    rsi,rdx
  4285d9:	mov    rdi,r8
  4285dc:	test   ebp,ebp
  4285de:	jle    0x4286da
  4285e4:	mov    rax,QWORD PTR [rip+0x3259d]        # 0x45ab88
  4285eb:	xor    r9d,r9d
  4285ee:	add    rax,0x8
  4285f2:	mov    r10,QWORD PTR [rax]
  4285f5:	cmp    rbx,r10
  4285f8:	jb     0x42860e
  4285fa:	mov    rdx,QWORD PTR [rax+0x8]
  4285fe:	mov    r11d,DWORD PTR [rdx+0x8]
  428602:	add    r10,r11
  428605:	cmp    rbx,r10
  428608:	jb     0x4286c0
  42860e:	add    r9d,0x1
  428612:	add    rax,0x18
  428616:	cmp    r9d,ebp
  428619:	jne    0x4285f2
  42861b:	mov    rcx,rbx
  42861e:	call   0x429230
  428623:	test   rax,rax
  428626:	mov    r12,rax
  428629:	je     0x428712
  42862f:	lea    rbp,[rbp+rbp*2+0x0]
  428634:	shl    rbp,0x3
  428638:	mov    r13,rbp
  42863b:	add    r13,QWORD PTR [rip+0x32546]        # 0x45ab88
  428642:	mov    QWORD PTR [r13+0x10],rax
  428646:	mov    DWORD PTR [r13+0x0],0x0
  42864e:	call   0x429350
  428653:	mov    edx,DWORD PTR [r12+0xc]
  428658:	mov    r8d,0x30
  42865e:	add    rax,rdx
  428661:	lea    rdx,[rsp+0x20]
  428666:	mov    QWORD PTR [r13+0x8],rax
  42866a:	mov    rax,QWORD PTR [rip+0x32517]        # 0x45ab88
  428671:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  428676:	call   QWORD PTR [rip+0x344f0]        # 0x45cb6c
  42867c:	test   rax,rax
  42867f:	je     0x4286f5
  428681:	mov    eax,DWORD PTR [rsp+0x44]
  428685:	lea    edx,[rax-0x4]
  428688:	and    edx,0xfffffffb
  42868b:	je     0x4286b9
  42868d:	sub    eax,0x40
  428690:	and    eax,0xffffffbf
  428693:	je     0x4286b9
  428695:	mov    r9,rbp
  428698:	add    r9,QWORD PTR [rip+0x324e9]        # 0x45ab88
  42869f:	mov    r8d,0x40
  4286a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4286aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4286af:	call   QWORD PTR [rip+0x344af]        # 0x45cb64
  4286b5:	test   eax,eax
  4286b7:	je     0x4286e1
  4286b9:	add    DWORD PTR [rip+0x324c4],0x1        # 0x45ab84
  4286c0:	mov    r8,rdi
  4286c3:	mov    rdx,rsi
  4286c6:	mov    rcx,rbx
  4286c9:	add    rsp,0x58
  4286cd:	pop    rbx
  4286ce:	pop    rsi
  4286cf:	pop    rdi
  4286d0:	pop    rbp
  4286d1:	pop    r12
  4286d3:	pop    r13
  4286d5:	jmp    0x42a490
  4286da:	xor    ebp,ebp
  4286dc:	jmp    0x42861b
  4286e1:	call   QWORD PTR [rip+0x34395]        # 0x45ca7c
  4286e7:	lea    rcx,[rip+0x2bd6a]        # 0x454458
  4286ee:	mov    edx,eax
  4286f0:	call   0x428550
  4286f5:	mov    rax,QWORD PTR [rip+0x3248c]        # 0x45ab88
  4286fc:	mov    edx,DWORD PTR [r12+0x8]
  428701:	lea    rcx,[rip+0x2bd18]        # 0x454420
  428708:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42870d:	call   0x428550
  428712:	lea    rcx,[rip+0x2bce7]        # 0x454400
  428719:	mov    rdx,rbx
  42871c:	call   0x428550
  428721:	nop
  428722:	nop    DWORD PTR [rax+0x0]
  428726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428730:	push   rbp
  428731:	push   r14
  428733:	push   r13
  428735:	push   r12
  428737:	push   rdi
  428738:	push   rsi
  428739:	push   rbx
  42873a:	mov    rbp,rsp
  42873d:	sub    rsp,0x60
  428741:	mov    ebx,DWORD PTR [rip+0x32439]        # 0x45ab80
  428747:	test   ebx,ebx
  428749:	je     0x428760
  42874b:	mov    rsp,rbp
  42874e:	pop    rbx
  42874f:	pop    rsi
  428750:	pop    rdi
  428751:	pop    r12
  428753:	pop    r13
  428755:	pop    r14
  428757:	pop    rbp
  428758:	ret    
  428759:	nop    DWORD PTR [rax+0x0]
  428760:	mov    DWORD PTR [rip+0x32416],0x1        # 0x45ab80
  42876a:	call   0x429280
  42876f:	cdqe   
  428771:	lea    rax,[rax+rax*2]
  428775:	lea    rax,[rax*8+0x1e]
  42877d:	and    rax,0xfffffffffffffff0
  428781:	call   0x4294a0
  428786:	mov    rsi,QWORD PTR [rip+0x2bf13]        # 0x4546a0
  42878d:	mov    rbx,QWORD PTR [rip+0x2bf1c]        # 0x4546b0
  428794:	sub    rsp,rax
  428797:	mov    DWORD PTR [rip+0x323e3],0x0        # 0x45ab84
  4287a1:	lea    rax,[rsp+0x20]
  4287a6:	mov    QWORD PTR [rip+0x323db],rax        # 0x45ab88
  4287ad:	mov    rax,rsi
  4287b0:	sub    rax,rbx
  4287b3:	cmp    rax,0x7
  4287b7:	jle    0x42874b
  4287b9:	cmp    rax,0xb
  4287bd:	jle    0x4287e5
  4287bf:	mov    r11d,DWORD PTR [rbx]
  4287c2:	test   r11d,r11d
  4287c5:	jne    0x428910
  4287cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4287cf:	test   r10d,r10d
  4287d2:	jne    0x428910
  4287d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4287dc:	test   r9d,r9d
  4287df:	jne    0x4287fc
  4287e1:	add    rbx,0xc
  4287e5:	mov    r8d,DWORD PTR [rbx]
  4287e8:	test   r8d,r8d
  4287eb:	jne    0x428910
  4287f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4287f4:	test   ecx,ecx
  4287f6:	jne    0x428910
  4287fc:	mov    edx,DWORD PTR [rbx+0x8]
  4287ff:	cmp    edx,0x1
  428802:	jne    0x428a1c
  428808:	add    rbx,0xc
  42880c:	cmp    rbx,rsi
  42880f:	jae    0x42874b
  428815:	mov    r12,QWORD PTR [rip+0x2beb4]        # 0x4546d0
  42881c:	lea    r13,[rbp-0x30]
  428820:	movabs r14,0xffffffff00000000
  42882a:	mov    ecx,DWORD PTR [rbx+0x4]
  42882d:	mov    eax,DWORD PTR [rbx]
  42882f:	movzx  edx,BYTE PTR [rbx+0x8]
  428833:	add    rax,r12
  428836:	add    rcx,r12
  428839:	cmp    edx,0x10
  42883c:	mov    r8,QWORD PTR [rax]
  42883f:	je     0x428986
  428845:	jbe    0x42894d
  42884b:	cmp    edx,0x20
  42884e:	je     0x4289cf
  428854:	cmp    edx,0x40
  428857:	jne    0x4289bb
  42885d:	sub    r8,rax
  428860:	mov    rdx,r13
  428863:	mov    rdi,r13
  428866:	mov    rax,r8
  428869:	add    rax,QWORD PTR [rcx]
  42886c:	mov    r8d,0x8
  428872:	mov    QWORD PTR [rbp-0x30],rax
  428876:	call   0x4285c0
  42887b:	add    rbx,0xc
  42887f:	cmp    rbx,rsi
  428882:	jb     0x42882a
  428884:	mov    eax,DWORD PTR [rip+0x322fa]        # 0x45ab84
  42888a:	xor    ebx,ebx
  42888c:	xor    esi,esi
  42888e:	test   eax,eax
  428890:	jle    0x42874b
  428896:	mov    r14,QWORD PTR [rip+0x342cf]        # 0x45cb6c
  42889d:	lea    r13,[rbp-0x34]
  4288a1:	mov    r12,QWORD PTR [rip+0x342bc]        # 0x45cb64
  4288a8:	jmp    0x4288c3
  4288aa:	nop    WORD PTR [rax+rax*1+0x0]
  4288b0:	add    esi,0x1
  4288b3:	add    rbx,0x18
  4288b7:	cmp    esi,DWORD PTR [rip+0x322c7]        # 0x45ab84
  4288bd:	jge    0x42874b
  4288c3:	mov    rax,rbx
  4288c6:	add    rax,QWORD PTR [rip+0x322bb]        # 0x45ab88
  4288cd:	mov    edx,DWORD PTR [rax]
  4288cf:	test   edx,edx
  4288d1:	je     0x4288b0
  4288d3:	mov    rcx,QWORD PTR [rax+0x8]
  4288d7:	mov    r8d,0x30
  4288dd:	mov    rdx,rdi
  4288e0:	call   r14
  4288e3:	test   rax,rax
  4288e6:	je     0x4289fe
  4288ec:	mov    rax,QWORD PTR [rip+0x32295]        # 0x45ab88
  4288f3:	mov    r9,r13
  4288f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4288fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4288fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  428902:	call   r12
  428905:	jmp    0x4288b0
  428907:	nop    WORD PTR [rax+rax*1+0x0]
  428910:	cmp    rbx,rsi
  428913:	jae    0x42874b
  428919:	mov    r12,QWORD PTR [rip+0x2bdb0]        # 0x4546d0
  428920:	lea    rdi,[rbp-0x30]
  428924:	mov    ecx,DWORD PTR [rbx+0x4]
  428927:	mov    eax,DWORD PTR [rbx]
  428929:	mov    r8d,0x4
  42892f:	mov    rdx,rdi
  428932:	add    rbx,0x8
  428936:	add    rcx,r12
  428939:	add    eax,DWORD PTR [rcx]
  42893b:	mov    DWORD PTR [rbp-0x30],eax
  42893e:	call   0x4285c0
  428943:	cmp    rbx,rsi
  428946:	jb     0x428924
  428948:	jmp    0x428884
  42894d:	cmp    edx,0x8
  428950:	jne    0x4289bb
  428952:	movzx  edx,BYTE PTR [rcx]
  428955:	mov    rdi,r13
  428958:	mov    r10,rdx
  42895b:	or     r10,0xffffffffffffff00
  428962:	test   dl,dl
  428964:	cmovs  rdx,r10
  428968:	sub    rdx,rax
  42896b:	lea    rax,[r8+rdx*1]
  42896f:	mov    r8d,0x1
  428975:	mov    rdx,r13
  428978:	mov    QWORD PTR [rbp-0x30],rax
  42897c:	call   0x4285c0
  428981:	jmp    0x42887b
  428986:	movzx  edx,WORD PTR [rcx]
  428989:	mov    rdi,r13
  42898c:	mov    r10,rdx
  42898f:	or     r10,0xffffffffffff0000
  428996:	test   dx,dx
  428999:	cmovs  rdx,r10
  42899d:	sub    rdx,rax
  4289a0:	lea    rax,[r8+rdx*1]
  4289a4:	mov    r8d,0x2
  4289aa:	mov    rdx,r13
  4289ad:	mov    QWORD PTR [rbp-0x30],rax
  4289b1:	call   0x4285c0
  4289b6:	jmp    0x42887b
  4289bb:	lea    rcx,[rip+0x2baf6]        # 0x4544b8
  4289c2:	mov    QWORD PTR [rbp-0x30],0x0
  4289ca:	call   0x428550
  4289cf:	mov    edx,DWORD PTR [rcx]
  4289d1:	mov    rdi,r13
  4289d4:	mov    r10,rdx
  4289d7:	or     r10,r14
  4289da:	test   edx,edx
  4289dc:	cmovs  rdx,r10
  4289e0:	sub    rdx,rax
  4289e3:	lea    rax,[r8+rdx*1]
  4289e7:	mov    r8d,0x4
  4289ed:	mov    rdx,r13
  4289f0:	mov    QWORD PTR [rbp-0x30],rax
  4289f4:	call   0x4285c0
  4289f9:	jmp    0x42887b
  4289fe:	add    rbx,QWORD PTR [rip+0x32183]        # 0x45ab88
  428a05:	lea    rcx,[rip+0x2ba14]        # 0x454420
  428a0c:	mov    rax,QWORD PTR [rbx+0x10]
  428a10:	mov    r8,QWORD PTR [rbx+0x8]
  428a14:	mov    edx,DWORD PTR [rax+0x8]
  428a17:	call   0x428550
  428a1c:	lea    rcx,[rip+0x2ba5d]        # 0x454480
  428a23:	call   0x428550
  428a28:	nop
  428a29:	nop
  428a2a:	nop
  428a2b:	nop
  428a2c:	nop
  428a2d:	nop
  428a2e:	nop
  428a2f:	nop
  428a30:	sub    rsp,0x28
  428a34:	mov    eax,DWORD PTR [rcx]
  428a36:	cmp    eax,0xc0000091
  428a3b:	ja     0x428aa0
  428a3d:	cmp    eax,0xc000008d
  428a42:	jae    0x428abf
  428a44:	cmp    eax,0xc0000008
  428a49:	je     0x428b60
  428a4f:	ja     0x428b30
  428a55:	cmp    eax,0x80000002
  428a5a:	je     0x428b60
  428a60:	cmp    eax,0xc0000005
  428a65:	jne    0x428b3e
  428a6b:	xor    edx,edx
  428a6d:	mov    ecx,0xb
  428a72:	call   0x42a440
  428a77:	cmp    rax,0x1
  428a7b:	je     0x428bc0
  428a81:	test   rax,rax
  428a84:	je     0x428ba0
  428a8a:	mov    ecx,0xb
  428a8f:	call   rax
  428a91:	xor    eax,eax
  428a93:	add    rsp,0x28
  428a97:	ret    
  428a98:	nop    DWORD PTR [rax+rax*1+0x0]
  428aa0:	cmp    eax,0xc0000094
  428aa5:	je     0x428b70
  428aab:	ja     0x428af0
  428aad:	cmp    eax,0xc0000092
  428ab2:	je     0x428b60
  428ab8:	cmp    eax,0xc0000093
  428abd:	jne    0x428b3e
  428abf:	xor    edx,edx
  428ac1:	mov    ecx,0x8
  428ac6:	call   0x42a440
  428acb:	cmp    rax,0x1
  428acf:	mov    rdx,rax
  428ad2:	je     0x428b48
  428ad4:	test   rdx,rdx
  428ad7:	mov    eax,0x1
  428adc:	je     0x428a93
  428ade:	mov    ecx,0x8
  428ae3:	call   rdx
  428ae5:	xor    eax,eax
  428ae7:	add    rsp,0x28
  428aeb:	ret    
  428aec:	nop    DWORD PTR [rax+0x0]
  428af0:	cmp    eax,0xc0000095
  428af5:	je     0x428b60
  428af7:	cmp    eax,0xc0000096
  428afc:	jne    0x428b3e
  428afe:	xor    edx,edx
  428b00:	mov    ecx,0x4
  428b05:	call   0x42a440
  428b0a:	cmp    rax,0x1
  428b0e:	je     0x428baa
  428b14:	test   rax,rax
  428b17:	je     0x428ba0
  428b1d:	mov    ecx,0x4
  428b22:	call   rax
  428b24:	xor    eax,eax
  428b26:	jmp    0x428a93
  428b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  428b30:	cmp    eax,0xc000001d
  428b35:	je     0x428afe
  428b37:	cmp    eax,0xc000008c
  428b3c:	je     0x428b60
  428b3e:	mov    eax,0x1
  428b43:	add    rsp,0x28
  428b47:	ret    
  428b48:	mov    edx,0x1
  428b4d:	mov    ecx,0x8
  428b52:	call   0x42a440
  428b57:	call   0x428520
  428b5c:	nop    DWORD PTR [rax+0x0]
  428b60:	xor    eax,eax
  428b62:	add    rsp,0x28
  428b66:	ret    
  428b67:	nop    WORD PTR [rax+rax*1+0x0]
  428b70:	xor    edx,edx
  428b72:	mov    ecx,0x8
  428b77:	call   0x42a440
  428b7c:	cmp    rax,0x1
  428b80:	mov    rdx,rax
  428b83:	jne    0x428ad4
  428b89:	mov    edx,0x1
  428b8e:	mov    ecx,0x8
  428b93:	call   0x42a440
  428b98:	xor    eax,eax
  428b9a:	jmp    0x428a93
  428b9f:	nop
  428ba0:	mov    eax,0x4
  428ba5:	add    rsp,0x28
  428ba9:	ret    
  428baa:	mov    edx,0x1
  428baf:	mov    ecx,0x4
  428bb4:	call   0x42a440
  428bb9:	xor    eax,eax
  428bbb:	jmp    0x428a93
  428bc0:	mov    edx,0x1
  428bc5:	mov    ecx,0xb
  428bca:	call   0x42a440
  428bcf:	xor    eax,eax
  428bd1:	jmp    0x428a93
  428bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428be0:	push   r12
  428be2:	push   rbp
  428be3:	push   rdi
  428be4:	push   rsi
  428be5:	push   rbx
  428be6:	sub    rsp,0x20
  428bea:	call   0x429350
  428bef:	mov    rbp,rax
  428bf2:	mov    eax,DWORD PTR [rip+0x31fd0]        # 0x45abc8
  428bf8:	test   eax,eax
  428bfa:	jne    0x428c21
  428bfc:	test   rbp,rbp
  428bff:	je     0x428c21
  428c01:	lea    rcx,[rip+0x2b8e8]        # 0x4544f0
  428c08:	mov    DWORD PTR [rip+0x31fb6],0x1        # 0x45abc8
  428c12:	call   0x429190
  428c17:	test   rax,rax
  428c1a:	je     0x428c30
  428c1c:	mov    eax,0x1
  428c21:	add    rsp,0x20
  428c25:	pop    rbx
  428c26:	pop    rsi
  428c27:	pop    rdi
  428c28:	pop    rbp
  428c29:	pop    r12
  428c2b:	ret    
  428c2c:	nop    DWORD PTR [rax+0x0]
  428c30:	lea    rbx,[rip+0x320c9]        # 0x45ad00
  428c37:	mov    ecx,0x30
  428c3c:	lea    rdx,[rip+0x31fbd]        # 0x45ac00
  428c43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x428a30
  428c4a:	xor    esi,esi
  428c4c:	mov    rdi,rbx
  428c4f:	rep stos QWORD PTR es:[rdi],rax
  428c52:	mov    rdi,rdx
  428c55:	sub    r12,rbp
  428c58:	mov    cl,0x20
  428c5a:	rep stos QWORD PTR es:[rdi],rax
  428c5d:	mov    rdi,rdx
  428c60:	jmp    0x428c90
  428c62:	mov    BYTE PTR [rdi],0x9
  428c65:	mov    DWORD PTR [rdi+0x4],r12d
  428c69:	add    rsi,0x1
  428c6d:	mov    edx,DWORD PTR [rax+0xc]
  428c70:	add    rbx,0xc
  428c74:	mov    DWORD PTR [rbx-0xc],edx
  428c77:	add    edx,DWORD PTR [rax+0x8]
  428c7a:	mov    rax,rdi
  428c7d:	sub    rax,rbp
  428c80:	add    rdi,0x8
  428c84:	mov    DWORD PTR [rbx-0x4],eax
  428c87:	mov    DWORD PTR [rbx-0x8],edx
  428c8a:	cmp    rsi,0x20
  428c8e:	je     0x428cc5
  428c90:	mov    rcx,rsi
  428c93:	call   0x4292c0
  428c98:	test   rax,rax
  428c9b:	jne    0x428c62
  428c9d:	test   rsi,rsi
  428ca0:	je     0x428c1c
  428ca6:	mov    edx,esi
  428ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cb0:	mov    r8,rbp
  428cb3:	lea    rcx,[rip+0x32046]        # 0x45ad00
  428cba:	call   QWORD PTR [rip+0x33e3c]        # 0x45cafc
  428cc0:	jmp    0x428c1c
  428cc5:	mov    edx,0x20
  428cca:	jmp    0x428cb0
  428ccc:	nop    DWORD PTR [rax+0x0]
  428cd0:	push   rbx
  428cd1:	sub    rsp,0x20
  428cd5:	mov    rdx,QWORD PTR [rcx]
  428cd8:	mov    eax,DWORD PTR [rdx]
  428cda:	mov    r8d,eax
  428cdd:	and    r8d,0x20ffffff
  428ce4:	cmp    r8d,0x20474343
  428ceb:	je     0x428df0
  428cf1:	cmp    eax,0xc0000091
  428cf6:	mov    rbx,rcx
  428cf9:	ja     0x428d80
  428cff:	cmp    eax,0xc000008d
  428d04:	jae    0x428d97
  428d0a:	cmp    eax,0xc0000008
  428d0f:	je     0x428d43
  428d11:	ja     0x428d50
  428d13:	cmp    eax,0x80000002
  428d18:	je     0x428d43
  428d1a:	cmp    eax,0xc0000005
  428d1f:	jne    0x428d62
  428d21:	xor    edx,edx
  428d23:	mov    ecx,0xb
  428d28:	call   0x42a440
  428d2d:	cmp    rax,0x1
  428d31:	je     0x428e60
  428d37:	test   rax,rax
  428d3a:	je     0x428d62
  428d3c:	mov    ecx,0xb
  428d41:	call   rax
  428d43:	mov    eax,0xffffffff
  428d48:	add    rsp,0x20
  428d4c:	pop    rbx
  428d4d:	ret    
  428d4e:	xchg   ax,ax
  428d50:	cmp    eax,0xc000001d
  428d55:	je     0x428e16
  428d5b:	cmp    eax,0xc000008c
  428d60:	je     0x428d43
  428d62:	mov    rax,QWORD PTR [rip+0x31e57]        # 0x45abc0
  428d69:	test   rax,rax
  428d6c:	je     0x428d48
  428d6e:	mov    rcx,rbx
  428d71:	add    rsp,0x20
  428d75:	pop    rbx
  428d76:	rex.W jmp rax
  428d79:	nop    DWORD PTR [rax+0x0]
  428d80:	cmp    eax,0xc0000094
  428d85:	je     0x428dc2
  428d87:	ja     0x428e00
  428d89:	cmp    eax,0xc0000092
  428d8e:	je     0x428d43
  428d90:	cmp    eax,0xc0000093
  428d95:	jne    0x428d62
  428d97:	xor    edx,edx
  428d99:	mov    ecx,0x8
  428d9e:	call   0x42a440
  428da3:	cmp    rax,0x1
  428da7:	jne    0x428dd4
  428da9:	mov    edx,0x1
  428dae:	mov    ecx,0x8
  428db3:	call   0x42a440
  428db8:	call   0x428520
  428dbd:	jmp    0x428d43
  428dc2:	xor    edx,edx
  428dc4:	mov    ecx,0x8
  428dc9:	call   0x42a440
  428dce:	cmp    rax,0x1
  428dd2:	je     0x428e42
  428dd4:	test   rax,rax
  428dd7:	je     0x428d62
  428dd9:	mov    ecx,0x8
  428dde:	call   rax
  428de0:	mov    eax,0xffffffff
  428de5:	jmp    0x428d48
  428dea:	nop    WORD PTR [rax+rax*1+0x0]
  428df0:	test   BYTE PTR [rdx+0x4],0x1
  428df4:	jne    0x428cf1
  428dfa:	jmp    0x428d43
  428dff:	nop
  428e00:	cmp    eax,0xc0000095
  428e05:	je     0x428d43
  428e0b:	cmp    eax,0xc0000096
  428e10:	jne    0x428d62
  428e16:	xor    edx,edx
  428e18:	mov    ecx,0x4
  428e1d:	call   0x42a440
  428e22:	cmp    rax,0x1
  428e26:	je     0x428e74
  428e28:	test   rax,rax
  428e2b:	je     0x428d62
  428e31:	mov    ecx,0x4
  428e36:	call   rax
  428e38:	mov    eax,0xffffffff
  428e3d:	jmp    0x428d48
  428e42:	mov    edx,0x1
  428e47:	mov    ecx,0x8
  428e4c:	call   0x42a440
  428e51:	jmp    0x428d43
  428e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e60:	mov    edx,0x1
  428e65:	mov    ecx,0xb
  428e6a:	call   0x42a440
  428e6f:	jmp    0x428d43
  428e74:	mov    edx,0x1
  428e79:	mov    ecx,0x4
  428e7e:	call   0x42a440
  428e83:	jmp    0x428d43
  428e88:	nop
  428e89:	nop
  428e8a:	nop
  428e8b:	nop
  428e8c:	nop
  428e8d:	nop
  428e8e:	nop
  428e8f:	nop
  428e90:	push   rbp
  428e91:	push   rdi
  428e92:	push   rsi
  428e93:	push   rbx
  428e94:	sub    rsp,0x28
  428e98:	lea    rcx,[rip+0x32001]        # 0x45aea0
  428e9f:	call   QWORD PTR [rip+0x33b87]        # 0x45ca2c
  428ea5:	mov    rbx,QWORD PTR [rip+0x31fd4]        # 0x45ae80
  428eac:	test   rbx,rbx
  428eaf:	je     0x428ee4
  428eb1:	mov    rbp,QWORD PTR [rip+0x33c9c]        # 0x45cb54
  428eb8:	mov    rdi,QWORD PTR [rip+0x33bbd]        # 0x45ca7c
  428ebf:	nop
  428ec0:	mov    ecx,DWORD PTR [rbx]
  428ec2:	call   rbp
  428ec4:	mov    rsi,rax
  428ec7:	call   rdi
  428ec9:	test   eax,eax
  428ecb:	jne    0x428edb
  428ecd:	test   rsi,rsi
  428ed0:	je     0x428edb
  428ed2:	mov    rax,QWORD PTR [rbx+0x8]
  428ed6:	mov    rcx,rsi
  428ed9:	call   rax
  428edb:	mov    rbx,QWORD PTR [rbx+0x10]
  428edf:	test   rbx,rbx
  428ee2:	jne    0x428ec0
  428ee4:	mov    rax,QWORD PTR [rip+0x33bc9]        # 0x45cab4
  428eeb:	lea    rcx,[rip+0x31fae]        # 0x45aea0
  428ef2:	add    rsp,0x28
  428ef6:	pop    rbx
  428ef7:	pop    rsi
  428ef8:	pop    rdi
  428ef9:	pop    rbp
  428efa:	rex.W jmp rax
  428efd:	nop    DWORD PTR [rax]
  428f00:	push   rdi
  428f01:	push   rsi
  428f02:	push   rbx
  428f03:	sub    rsp,0x20
  428f07:	mov    eax,DWORD PTR [rip+0x31f7b]        # 0x45ae88
  428f0d:	test   eax,eax
  428f0f:	jne    0x428f20
  428f11:	add    rsp,0x20
  428f15:	pop    rbx
  428f16:	pop    rsi
  428f17:	pop    rdi
  428f18:	ret    
  428f19:	nop    DWORD PTR [rax+0x0]
  428f20:	mov    rsi,rdx
  428f23:	mov    edi,ecx
  428f25:	mov    edx,0x18
  428f2a:	mov    ecx,0x1
  428f2f:	call   0x42a550
  428f34:	test   rax,rax
  428f37:	mov    rbx,rax
  428f3a:	je     0x428f78
  428f3c:	mov    DWORD PTR [rax],edi
  428f3e:	mov    QWORD PTR [rax+0x8],rsi
  428f42:	lea    rcx,[rip+0x31f57]        # 0x45aea0
  428f49:	call   QWORD PTR [rip+0x33add]        # 0x45ca2c
  428f4f:	mov    rax,QWORD PTR [rip+0x31f2a]        # 0x45ae80
  428f56:	lea    rcx,[rip+0x31f43]        # 0x45aea0
  428f5d:	mov    QWORD PTR [rip+0x31f1c],rbx        # 0x45ae80
  428f64:	mov    QWORD PTR [rbx+0x10],rax
  428f68:	call   QWORD PTR [rip+0x33b46]        # 0x45cab4
  428f6e:	xor    eax,eax
  428f70:	add    rsp,0x20
  428f74:	pop    rbx
  428f75:	pop    rsi
  428f76:	pop    rdi
  428f77:	ret    
  428f78:	mov    eax,0xffffffff
  428f7d:	jmp    0x428f11
  428f7f:	nop
  428f80:	push   rbx
  428f81:	sub    rsp,0x20
  428f85:	mov    eax,DWORD PTR [rip+0x31efd]        # 0x45ae88
  428f8b:	test   eax,eax
  428f8d:	jne    0x428fa0
  428f8f:	xor    eax,eax
  428f91:	add    rsp,0x20
  428f95:	pop    rbx
  428f96:	ret    
  428f97:	nop    WORD PTR [rax+rax*1+0x0]
  428fa0:	mov    ebx,ecx
  428fa2:	lea    rcx,[rip+0x31ef7]        # 0x45aea0
  428fa9:	call   QWORD PTR [rip+0x33a7d]        # 0x45ca2c
  428faf:	mov    rdx,QWORD PTR [rip+0x31eca]        # 0x45ae80
  428fb6:	test   rdx,rdx
  428fb9:	je     0x428fd7
  428fbb:	mov    eax,DWORD PTR [rdx]
  428fbd:	cmp    eax,ebx
  428fbf:	jne    0x428fce
  428fc1:	jmp    0x42900f
  428fc3:	mov    r8d,DWORD PTR [rax]
  428fc6:	cmp    r8d,ebx
  428fc9:	je     0x428ff0
  428fcb:	mov    rdx,rax
  428fce:	mov    rax,QWORD PTR [rdx+0x10]
  428fd2:	test   rax,rax
  428fd5:	jne    0x428fc3
  428fd7:	lea    rcx,[rip+0x31ec2]        # 0x45aea0
  428fde:	call   QWORD PTR [rip+0x33ad0]        # 0x45cab4
  428fe4:	xor    eax,eax
  428fe6:	add    rsp,0x20
  428fea:	pop    rbx
  428feb:	ret    
  428fec:	nop    DWORD PTR [rax+0x0]
  428ff0:	mov    rcx,rax
  428ff3:	mov    rax,QWORD PTR [rax+0x10]
  428ff7:	mov    QWORD PTR [rdx+0x10],rax
  428ffb:	call   0x42a4e8
  429000:	lea    rcx,[rip+0x31e99]        # 0x45aea0
  429007:	call   QWORD PTR [rip+0x33aa7]        # 0x45cab4
  42900d:	jmp    0x428fe4
  42900f:	mov    rax,QWORD PTR [rdx+0x10]
  429013:	mov    rcx,rdx
  429016:	mov    QWORD PTR [rip+0x31e63],rax        # 0x45ae80
  42901d:	jmp    0x428ffb
  42901f:	nop
  429020:	push   rbx
  429021:	sub    rsp,0x20
  429025:	cmp    edx,0x1
  429028:	je     0x4290c0
  42902e:	jb     0x429060
  429030:	cmp    edx,0x2
  429033:	je     0x429050
  429035:	cmp    edx,0x3
  429038:	jne    0x429055
  42903a:	mov    eax,DWORD PTR [rip+0x31e48]        # 0x45ae88
  429040:	test   eax,eax
  429042:	je     0x429055
  429044:	call   0x428e90
  429049:	jmp    0x429055
  42904b:	nop    DWORD PTR [rax+rax*1+0x0]
  429050:	call   0x428520
  429055:	mov    eax,0x1
  42905a:	add    rsp,0x20
  42905e:	pop    rbx
  42905f:	ret    
  429060:	mov    eax,DWORD PTR [rip+0x31e22]        # 0x45ae88
  429066:	test   eax,eax
  429068:	jne    0x4290f0
  42906e:	mov    eax,DWORD PTR [rip+0x31e14]        # 0x45ae88
  429074:	cmp    eax,0x1
  429077:	jne    0x429055
  429079:	mov    rcx,QWORD PTR [rip+0x31e00]        # 0x45ae80
  429080:	test   rcx,rcx
  429083:	je     0x429096
  429085:	mov    rbx,QWORD PTR [rcx+0x10]
  429089:	call   0x42a4e8
  42908e:	test   rbx,rbx
  429091:	mov    rcx,rbx
  429094:	jne    0x429085
  429096:	lea    rcx,[rip+0x31e03]        # 0x45aea0
  42909d:	mov    QWORD PTR [rip+0x31dd8],0x0        # 0x45ae80
  4290a8:	mov    DWORD PTR [rip+0x31dd6],0x0        # 0x45ae88
  4290b2:	call   QWORD PTR [rip+0x3395c]        # 0x45ca14
  4290b8:	jmp    0x429055
  4290ba:	nop    WORD PTR [rax+rax*1+0x0]
  4290c0:	mov    eax,DWORD PTR [rip+0x31dc2]        # 0x45ae88
  4290c6:	test   eax,eax
  4290c8:	je     0x4290e0
  4290ca:	mov    eax,0x1
  4290cf:	mov    DWORD PTR [rip+0x31daf],0x1        # 0x45ae88
  4290d9:	add    rsp,0x20
  4290dd:	pop    rbx
  4290de:	ret    
  4290df:	nop
  4290e0:	lea    rcx,[rip+0x31db9]        # 0x45aea0
  4290e7:	call   QWORD PTR [rip+0x339bf]        # 0x45caac
  4290ed:	jmp    0x4290ca
  4290ef:	nop
  4290f0:	call   0x428e90
  4290f5:	jmp    0x42906e
  4290fa:	nop
  4290fb:	nop
  4290fc:	nop
  4290fd:	nop
  4290fe:	nop
  4290ff:	nop
  429100:	movsxd rax,DWORD PTR [rcx+0x3c]
  429104:	add    rcx,rax
  429107:	xor    eax,eax
  429109:	cmp    DWORD PTR [rcx],0x4550
  42910f:	je     0x429113
  429111:	repz ret 
  429113:	xor    eax,eax
  429115:	cmp    WORD PTR [rcx+0x18],0x20b
  42911b:	sete   al
  42911e:	ret    
  42911f:	nop
  429120:	cmp    WORD PTR [rcx],0x5a4d
  429125:	je     0x429130
  429127:	xor    eax,eax
  429129:	ret    
  42912a:	nop    WORD PTR [rax+rax*1+0x0]
  429130:	jmp    0x429100
  429132:	nop    DWORD PTR [rax+0x0]
  429136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429140:	movsxd rax,DWORD PTR [rcx+0x3c]
  429144:	add    rcx,rax
  429147:	movzx  eax,WORD PTR [rcx+0x14]
  42914b:	lea    rax,[rcx+rax*1+0x18]
  429150:	movzx  ecx,WORD PTR [rcx+0x6]
  429154:	test   ecx,ecx
  429156:	je     0x429181
  429158:	sub    ecx,0x1
  42915b:	lea    rcx,[rcx+rcx*4]
  42915f:	lea    r9,[rax+rcx*8+0x28]
  429164:	mov    r8d,DWORD PTR [rax+0xc]
  429168:	cmp    r8,rdx
  42916b:	mov    rcx,r8
  42916e:	ja     0x429178
  429170:	add    ecx,DWORD PTR [rax+0x8]
  429173:	cmp    rdx,rcx
  429176:	jb     0x429183
  429178:	add    rax,0x28
  42917c:	cmp    rax,r9
  42917f:	jne    0x429164
  429181:	xor    eax,eax
  429183:	repz ret 
  429185:	nop
  429186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429190:	push   rdi
  429191:	push   rsi
  429192:	push   rbx
  429193:	sub    rsp,0x20
  429197:	mov    rsi,rcx
  42919a:	call   0x42a400
  42919f:	cmp    rax,0x8
  4291a3:	ja     0x4291c0
  4291a5:	mov    rbx,QWORD PTR [rip+0x2b524]        # 0x4546d0
  4291ac:	xor    edi,edi
  4291ae:	cmp    WORD PTR [rbx],0x5a4d
  4291b3:	je     0x4291d0
  4291b5:	mov    rax,rdi
  4291b8:	add    rsp,0x20
  4291bc:	pop    rbx
  4291bd:	pop    rsi
  4291be:	pop    rdi
  4291bf:	ret    
  4291c0:	xor    edi,edi
  4291c2:	mov    rax,rdi
  4291c5:	add    rsp,0x20
  4291c9:	pop    rbx
  4291ca:	pop    rsi
  4291cb:	pop    rdi
  4291cc:	ret    
  4291cd:	nop    DWORD PTR [rax]
  4291d0:	mov    rcx,rbx
  4291d3:	call   0x429100
  4291d8:	test   eax,eax
  4291da:	je     0x4291b5
  4291dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4291e0:	add    rdx,rbx
  4291e3:	movzx  eax,WORD PTR [rdx+0x14]
  4291e7:	lea    rbx,[rdx+rax*1+0x18]
  4291ec:	movzx  eax,WORD PTR [rdx+0x6]
  4291f0:	test   eax,eax
  4291f2:	je     0x4291b5
  4291f4:	sub    eax,0x1
  4291f7:	lea    rax,[rax+rax*4]
  4291fb:	lea    rdi,[rbx+rax*8+0x28]
  429200:	jmp    0x42920b
  429202:	add    rbx,0x28
  429206:	cmp    rbx,rdi
  429209:	je     0x4291c0
  42920b:	mov    r8d,0x8
  429211:	mov    rdx,rsi
  429214:	mov    rcx,rbx
  429217:	call   0x42a3f8
  42921c:	test   eax,eax
  42921e:	jne    0x429202
  429220:	mov    rdi,rbx
  429223:	mov    rax,rdi
  429226:	add    rsp,0x20
  42922a:	pop    rbx
  42922b:	pop    rsi
  42922c:	pop    rdi
  42922d:	ret    
  42922e:	xchg   ax,ax
  429230:	push   rsi
  429231:	push   rbx
  429232:	sub    rsp,0x28
  429236:	mov    rbx,QWORD PTR [rip+0x2b493]        # 0x4546d0
  42923d:	cmp    WORD PTR [rbx],0x5a4d
  429242:	je     0x429250
  429244:	xor    eax,eax
  429246:	add    rsp,0x28
  42924a:	pop    rbx
  42924b:	pop    rsi
  42924c:	ret    
  42924d:	nop    DWORD PTR [rax]
  429250:	mov    rsi,rcx
  429253:	mov    rcx,rbx
  429256:	call   0x429100
  42925b:	test   eax,eax
  42925d:	je     0x429244
  42925f:	sub    rsi,rbx
  429262:	mov    rcx,rbx
  429265:	mov    rdx,rsi
  429268:	add    rsp,0x28
  42926c:	pop    rbx
  42926d:	pop    rsi
  42926e:	jmp    0x429140
  429273:	nop    DWORD PTR [rax]
  429276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429280:	push   rbx
  429281:	sub    rsp,0x20
  429285:	mov    rbx,QWORD PTR [rip+0x2b444]        # 0x4546d0
  42928c:	xor    eax,eax
  42928e:	cmp    WORD PTR [rbx],0x5a4d
  429293:	je     0x4292a0
  429295:	add    rsp,0x20
  429299:	pop    rbx
  42929a:	ret    
  42929b:	nop    DWORD PTR [rax+rax*1+0x0]
  4292a0:	mov    rcx,rbx
  4292a3:	call   0x429100
  4292a8:	test   eax,eax
  4292aa:	je     0x429295
  4292ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4292b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4292b5:	add    rsp,0x20
  4292b9:	pop    rbx
  4292ba:	ret    
  4292bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4292c0:	push   rdi
  4292c1:	push   rsi
  4292c2:	push   rbx
  4292c3:	sub    rsp,0x20
  4292c7:	mov    rsi,QWORD PTR [rip+0x2b402]        # 0x4546d0
  4292ce:	xor    edi,edi
  4292d0:	mov    rbx,rcx
  4292d3:	cmp    WORD PTR [rsi],0x5a4d
  4292d8:	je     0x4292e5
  4292da:	mov    rax,rdi
  4292dd:	add    rsp,0x20
  4292e1:	pop    rbx
  4292e2:	pop    rsi
  4292e3:	pop    rdi
  4292e4:	ret    
  4292e5:	mov    rcx,rsi
  4292e8:	call   0x429100
  4292ed:	test   eax,eax
  4292ef:	je     0x4292da
  4292f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4292f5:	add    rsi,rax
  4292f8:	movzx  eax,WORD PTR [rsi+0x14]
  4292fc:	lea    rdx,[rsi+rax*1+0x18]
  429301:	movzx  eax,WORD PTR [rsi+0x6]
  429305:	test   eax,eax
  429307:	je     0x4292da
  429309:	sub    eax,0x1
  42930c:	lea    rax,[rax+rax*4]
  429310:	lea    rax,[rdx+rax*8+0x28]
  429315:	test   BYTE PTR [rdx+0x27],0x20
  429319:	je     0x429324
  42931b:	test   rbx,rbx
  42931e:	je     0x429340
  429320:	sub    rbx,0x1
  429324:	add    rdx,0x28
  429328:	cmp    rdx,rax
  42932b:	jne    0x429315
  42932d:	xor    edi,edi
  42932f:	mov    rax,rdi
  429332:	add    rsp,0x20
  429336:	pop    rbx
  429337:	pop    rsi
  429338:	pop    rdi
  429339:	ret    
  42933a:	nop    WORD PTR [rax+rax*1+0x0]
  429340:	mov    rdi,rdx
  429343:	mov    rax,rdi
  429346:	add    rsp,0x20
  42934a:	pop    rbx
  42934b:	pop    rsi
  42934c:	pop    rdi
  42934d:	ret    
  42934e:	xchg   ax,ax
  429350:	push   rsi
  429351:	push   rbx
  429352:	sub    rsp,0x28
  429356:	mov    rsi,QWORD PTR [rip+0x2b373]        # 0x4546d0
  42935d:	xor    ebx,ebx
  42935f:	cmp    WORD PTR [rsi],0x5a4d
  429364:	je     0x429370
  429366:	mov    rax,rbx
  429369:	add    rsp,0x28
  42936d:	pop    rbx
  42936e:	pop    rsi
  42936f:	ret    
  429370:	mov    rcx,rsi
  429373:	call   0x429100
  429378:	test   eax,eax
  42937a:	cmovne rbx,rsi
  42937e:	mov    rax,rbx
  429381:	add    rsp,0x28
  429385:	pop    rbx
  429386:	pop    rsi
  429387:	ret    
  429388:	nop    DWORD PTR [rax+rax*1+0x0]
  429390:	push   rsi
  429391:	push   rbx
  429392:	sub    rsp,0x28
  429396:	mov    rbx,QWORD PTR [rip+0x2b333]        # 0x4546d0
  42939d:	xor    eax,eax
  42939f:	cmp    WORD PTR [rbx],0x5a4d
  4293a4:	je     0x4293b0
  4293a6:	add    rsp,0x28
  4293aa:	pop    rbx
  4293ab:	pop    rsi
  4293ac:	ret    
  4293ad:	nop    DWORD PTR [rax]
  4293b0:	mov    rsi,rcx
  4293b3:	mov    rcx,rbx
  4293b6:	call   0x429100
  4293bb:	test   eax,eax
  4293bd:	je     0x4293a6
  4293bf:	sub    rsi,rbx
  4293c2:	mov    rcx,rbx
  4293c5:	mov    rdx,rsi
  4293c8:	call   0x429140
  4293cd:	test   rax,rax
  4293d0:	je     0x4293e1
  4293d2:	mov    eax,DWORD PTR [rax+0x24]
  4293d5:	not    eax
  4293d7:	shr    eax,0x1f
  4293da:	add    rsp,0x28
  4293de:	pop    rbx
  4293df:	pop    rsi
  4293e0:	ret    
  4293e1:	xor    eax,eax
  4293e3:	jmp    0x4293a6
  4293e5:	nop
  4293e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293f0:	push   rbp
  4293f1:	push   rdi
  4293f2:	push   rsi
  4293f3:	push   rbx
  4293f4:	sub    rsp,0x28
  4293f8:	mov    rdi,QWORD PTR [rip+0x2b2d1]        # 0x4546d0
  4293ff:	xor    ebp,ebp
  429401:	mov    esi,ecx
  429403:	cmp    WORD PTR [rdi],0x5a4d
  429408:	je     0x429420
  42940a:	mov    rax,rbp
  42940d:	add    rsp,0x28
  429411:	pop    rbx
  429412:	pop    rsi
  429413:	pop    rdi
  429414:	pop    rbp
  429415:	ret    
  429416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429420:	mov    rcx,rdi
  429423:	call   0x429100
  429428:	test   eax,eax
  42942a:	je     0x42940a
  42942c:	movsxd rax,DWORD PTR [rdi+0x3c]
  429430:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  429437:	test   edx,edx
  429439:	je     0x42940a
  42943b:	mov    ebx,edx
  42943d:	mov    rcx,rdi
  429440:	mov    rdx,rbx
  429443:	call   0x429140
  429448:	test   rax,rax
  42944b:	je     0x42940a
  42944d:	add    rbx,rdi
  429450:	mov    rdx,rbx
  429453:	jne    0x429467
  429455:	jmp    0x42940a
  429457:	nop    WORD PTR [rax+rax*1+0x0]
  429460:	sub    esi,0x1
  429463:	add    rdx,0x14
  429467:	mov    ecx,DWORD PTR [rdx+0x4]
  42946a:	test   ecx,ecx
  42946c:	jne    0x429475
  42946e:	mov    eax,DWORD PTR [rdx+0xc]
  429471:	test   eax,eax
  429473:	je     0x429490
  429475:	test   esi,esi
  429477:	jg     0x429460
  429479:	mov    ebp,DWORD PTR [rdx+0xc]
  42947c:	add    rbp,rdi
  42947f:	mov    rax,rbp
  429482:	add    rsp,0x28
  429486:	pop    rbx
  429487:	pop    rsi
  429488:	pop    rdi
  429489:	pop    rbp
  42948a:	ret    
  42948b:	nop    DWORD PTR [rax+rax*1+0x0]
  429490:	xor    ebp,ebp
  429492:	mov    rax,rbp
  429495:	add    rsp,0x28
  429499:	pop    rbx
  42949a:	pop    rsi
  42949b:	pop    rdi
  42949c:	pop    rbp
  42949d:	ret    
  42949e:	nop
  42949f:	nop
  4294a0:	push   rcx
  4294a1:	push   rax
  4294a2:	cmp    rax,0x1000
  4294a8:	lea    rcx,[rsp+0x18]
  4294ad:	jb     0x4294c8
  4294af:	sub    rcx,0x1000
  4294b6:	or     QWORD PTR [rcx],0x0
  4294ba:	sub    rax,0x1000
  4294c0:	cmp    rax,0x1000
  4294c6:	ja     0x4294af
  4294c8:	sub    rcx,rax
  4294cb:	or     QWORD PTR [rcx],0x0
  4294cf:	pop    rax
  4294d0:	pop    rcx
  4294d1:	ret    
  4294d2:	nop
  4294d3:	nop
  4294d4:	nop
  4294d5:	nop
  4294d6:	nop
  4294d7:	nop
  4294d8:	nop
  4294d9:	nop
  4294da:	nop
  4294db:	nop
  4294dc:	nop
  4294dd:	nop
  4294de:	nop
  4294df:	nop
  4294e0:	push   r13
  4294e2:	push   r12
  4294e4:	push   rbp
  4294e5:	push   rdi
  4294e6:	push   rsi
  4294e7:	push   rbx
  4294e8:	mov    r12d,edx
  4294eb:	mov    ebp,r8d
  4294ee:	mov    edi,edx
  4294f0:	sub    r12d,ecx
  4294f3:	sub    ebp,edx
  4294f5:	mov    eax,r12d
  4294f8:	cdq    
  4294f9:	idiv   ebp
  4294fb:	test   edx,edx
  4294fd:	mov    r13d,edx
  429500:	je     0x429585
  429506:	mov    eax,ebp
  429508:	jmp    0x429513
  42950a:	nop    WORD PTR [rax+rax*1+0x0]
  429510:	mov    r13d,edx
  429513:	cdq    
  429514:	idiv   r13d
  429517:	mov    eax,r13d
  42951a:	test   edx,edx
  42951c:	jne    0x429510
  42951e:	mov    eax,r8d
  429521:	sub    eax,ecx
  429523:	cdq    
  429524:	idiv   r13d
  429527:	test   r13d,r13d
  42952a:	jle    0x42957c
  42952c:	movsxd rdx,edi
  42952f:	xor    esi,esi
  429531:	lea    rdx,[r9+rdx*8]
  429535:	test   eax,eax
  429537:	lea    ecx,[rdi+rsi*1]
  42953a:	jle    0x429573
  42953c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  429540:	xor    r10d,r10d
  429543:	mov    r11d,ecx
  429546:	lea    r8d,[rcx+rbp*1]
  42954a:	sub    r11d,r12d
  42954d:	cmp    edi,ecx
  42954f:	mov    ecx,r11d
  429552:	cmovg  ecx,r8d
  429556:	add    r10d,0x1
  42955a:	movsxd r11,ecx
  42955d:	cmp    r10d,eax
  429560:	lea    r8,[r9+r11*8]
  429564:	mov    r11,QWORD PTR [r8]
  429567:	mov    QWORD PTR [r8],rbx
  42956a:	mov    QWORD PTR [rdx+rsi*8],r11
  42956e:	mov    rbx,r11
  429571:	jne    0x429543
  429573:	add    rsi,0x1
  429577:	cmp    r13d,esi
  42957a:	jg     0x429535
  42957c:	pop    rbx
  42957d:	pop    rsi
  42957e:	pop    rdi
  42957f:	pop    rbp
  429580:	pop    r12
  429582:	pop    r13
  429584:	ret    
  429585:	mov    r13d,ebp
  429588:	jmp    0x42951e
  42958a:	nop    WORD PTR [rax+rax*1+0x0]
  429590:	push   rdi
  429591:	push   rsi
  429592:	push   rbx
  429593:	sub    rsp,0x30
  429597:	mov    rax,QWORD PTR [rip+0x2b142]        # 0x4546e0
  42959e:	mov    QWORD PTR [rsp+0x58],rdx
  4295a3:	mov    QWORD PTR [rsp+0x60],r8
  4295a8:	lea    rsi,[rsp+0x58]
  4295ad:	mov    QWORD PTR [rsp+0x68],r9
  4295b2:	mov    rbx,rcx
  4295b5:	mov    rax,QWORD PTR [rax]
  4295b8:	mov    QWORD PTR [rsp+0x28],rsi
  4295bd:	mov    rax,QWORD PTR [rax]
  4295c0:	mov    rdi,QWORD PTR [rax]
  4295c3:	call   0x42a600
  4295c8:	lea    rdx,[rip+0x2af31]        # 0x454500
  4295cf:	lea    rcx,[rax+0x60]
  4295d3:	mov    r8,rdi
  4295d6:	call   0x42a508
  4295db:	test   rbx,rbx
  4295de:	je     0x4295f4
  4295e0:	call   0x42a600
  4295e5:	lea    rcx,[rax+0x60]
  4295e9:	mov    r8,rsi
  4295ec:	mov    rdx,rbx
  4295ef:	call   0x42a3a8
  4295f4:	call   0x42a600
  4295f9:	lea    rdx,[rax+0x60]
  4295fd:	mov    ecx,0xa
  429602:	call   0x42a500
  429607:	nop
  429608:	add    rsp,0x30
  42960c:	pop    rbx
  42960d:	pop    rsi
  42960e:	pop    rdi
  42960f:	ret    
  429610:	push   r15
  429612:	push   r14
  429614:	push   r13
  429616:	push   r12
  429618:	push   rbp
  429619:	push   rdi
  42961a:	push   rsi
  42961b:	push   rbx
  42961c:	sub    rsp,0x48
  429620:	mov    eax,DWORD PTR [rip+0x2f36]        # 0x42c55c
  429626:	mov    rbp,QWORD PTR [rip+0x2f23]        # 0x42c550
  42962d:	mov    QWORD PTR [rsp+0x90],rcx
  429635:	mov    QWORD PTR [rsp+0x98],rdx
  42963d:	mov    edx,0x3d
  429642:	mov    r14,r8
  429645:	mov    QWORD PTR [rsp+0xa8],r9
  42964d:	mov    r13d,DWORD PTR [rsp+0xb0]
  429655:	mov    DWORD PTR [rsp+0x38],eax
  429659:	mov    rcx,rbp
  42965c:	add    eax,0x1
  42965f:	mov    DWORD PTR [rsp+0x3c],eax
  429663:	mov    DWORD PTR [rip+0x2ef3],eax        # 0x42c55c
  429669:	call   0x42a428
  42966e:	test   rax,rax
  429671:	mov    QWORD PTR [rsp+0x30],rax
  429676:	je     0x429854
  42967c:	mov    rdi,rax
  42967f:	add    rax,0x1
  429683:	sub    rdi,rbp
  429686:	mov    QWORD PTR [rsp+0x30],rax
  42968b:	mov    r15,QWORD PTR [r14]
  42968e:	test   r15,r15
  429691:	je     0x42989b
  429697:	lea    rbx,[r14+0x20]
  42969b:	mov    r12d,0xffffffff
  4296a1:	mov    DWORD PTR [rsp+0x2c],0x0
  4296a9:	xor    esi,esi
  4296ab:	jmp    0x4296c5
  4296ad:	nop    DWORD PTR [rax]
  4296b0:	test   r13d,r13d
  4296b3:	je     0x4296ee
  4296b5:	add    rbx,0x20
  4296b9:	mov    r15,QWORD PTR [rbx-0x20]
  4296bd:	add    esi,0x1
  4296c0:	test   r15,r15
  4296c3:	je     0x429730
  4296c5:	mov    r8,rdi
  4296c8:	mov    rdx,r15
  4296cb:	mov    rcx,rbp
  4296ce:	call   0x42a3f8
  4296d3:	test   eax,eax
  4296d5:	jne    0x4296b5
  4296d7:	mov    rcx,r15
  4296da:	call   0x42a400
  4296df:	cmp    rax,rdi
  4296e2:	je     0x4297dd
  4296e8:	cmp    rdi,0x1
  4296ec:	je     0x4296b0
  4296ee:	cmp    r12d,0xffffffff
  4296f2:	je     0x429790
  4296f8:	movsxd rax,r12d
  4296fb:	shl    rax,0x5
  4296ff:	add    rax,r14
  429702:	mov    edx,DWORD PTR [rax+0x8]
  429705:	cmp    DWORD PTR [rbx-0x18],edx
  429708:	je     0x4297a0
  42970e:	add    rbx,0x20
  429712:	mov    r15,QWORD PTR [rbx-0x20]
  429716:	add    esi,0x1
  429719:	mov    DWORD PTR [rsp+0x2c],0x1
  429721:	test   r15,r15
  429724:	jne    0x4296c5
  429726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429730:	mov    r9d,DWORD PTR [rsp+0x2c]
  429735:	test   r9d,r9d
  429738:	je     0x4297d0
  42973e:	mov    r8d,DWORD PTR [rip+0x2e1b]        # 0x42c560
  429745:	test   r8d,r8d
  429748:	je     0x429768
  42974a:	mov    rax,QWORD PTR [rsp+0x98]
  429752:	cmp    BYTE PTR [rax],0x3a
  429755:	je     0x429768
  429757:	lea    rcx,[rip+0x2ae32]        # 0x454590
  42975e:	mov    r8,rbp
  429761:	mov    edx,edi
  429763:	call   0x429590
  429768:	mov    DWORD PTR [rip+0x2de6],0x0        # 0x42c558
  429772:	mov    eax,0x3f
  429777:	add    rsp,0x48
  42977b:	pop    rbx
  42977c:	pop    rsi
  42977d:	pop    rdi
  42977e:	pop    rbp
  42977f:	pop    r12
  429781:	pop    r13
  429783:	pop    r14
  429785:	pop    r15
  429787:	ret    
  429788:	nop    DWORD PTR [rax+rax*1+0x0]
  429790:	mov    r12d,esi
  429793:	jmp    0x4296b5
  429798:	nop    DWORD PTR [rax+rax*1+0x0]
  4297a0:	mov    rdx,QWORD PTR [rax+0x10]
  4297a4:	cmp    QWORD PTR [rbx-0x10],rdx
  4297a8:	jne    0x42970e
  4297ae:	mov    eax,DWORD PTR [rax+0x18]
  4297b1:	cmp    DWORD PTR [rbx-0x8],eax
  4297b4:	mov    eax,0x1
  4297b9:	cmove  eax,DWORD PTR [rsp+0x2c]
  4297be:	mov    DWORD PTR [rsp+0x2c],eax
  4297c2:	jmp    0x4296b5
  4297c7:	nop    WORD PTR [rax+rax*1+0x0]
  4297d0:	cmp    r12d,0xffffffff
  4297d4:	je     0x42989b
  4297da:	mov    esi,r12d
  4297dd:	movsxd rax,esi
  4297e0:	shl    rax,0x5
  4297e4:	add    r14,rax
  4297e7:	cmp    QWORD PTR [rsp+0x30],0x0
  4297ed:	mov    eax,DWORD PTR [r14+0x8]
  4297f1:	setne  cl
  4297f4:	je     0x429864
  4297f6:	test   eax,eax
  4297f8:	jne    0x429864
  4297fa:	mov    ecx,DWORD PTR [rip+0x2d60]        # 0x42c560
  429800:	test   ecx,ecx
  429802:	jne    0x429834
  429804:	cmp    QWORD PTR [r14+0x10],0x0
  429809:	je     0x429964
  42980f:	mov    DWORD PTR [rip+0x2d3f],0x0        # 0x42c558
  429819:	mov    rax,QWORD PTR [rsp+0x98]
  429821:	cmp    BYTE PTR [rax],0x3a
  429824:	je     0x429951
  42982a:	mov    eax,0x3f
  42982f:	jmp    0x429777
  429834:	mov    rax,QWORD PTR [rsp+0x98]
  42983c:	cmp    BYTE PTR [rax],0x3a
  42983f:	je     0x429804
  429841:	lea    rcx,[rip+0x2ad18]        # 0x454560
  429848:	mov    r8,rbp
  42984b:	mov    edx,edi
  42984d:	call   0x429590
  429852:	jmp    0x429804
  429854:	mov    rcx,rbp
  429857:	call   0x42a400
  42985c:	mov    rdi,rax
  42985f:	jmp    0x42968b
  429864:	lea    edx,[rax-0x1]
  429867:	cmp    edx,0x1
  42986a:	jbe    0x4298d7
  42986c:	cmp    QWORD PTR [rsp+0xa8],0x0
  429875:	je     0x429881
  429877:	mov    rax,QWORD PTR [rsp+0xa8]
  42987f:	mov    DWORD PTR [rax],esi
  429881:	mov    rax,QWORD PTR [r14+0x10]
  429885:	test   rax,rax
  429888:	je     0x42995b
  42988e:	mov    edx,DWORD PTR [r14+0x18]
  429892:	mov    DWORD PTR [rax],edx
  429894:	xor    eax,eax
  429896:	jmp    0x429777
  42989b:	test   r13d,r13d
  42989e:	jne    0x4299b2
  4298a4:	mov    eax,DWORD PTR [rip+0x2cb6]        # 0x42c560
  4298aa:	test   eax,eax
  4298ac:	je     0x429768
  4298b2:	mov    rax,QWORD PTR [rsp+0x98]
  4298ba:	cmp    BYTE PTR [rax],0x3a
  4298bd:	je     0x429768
  4298c3:	lea    rcx,[rip+0x2ac56]        # 0x454520
  4298ca:	mov    rdx,rbp
  4298cd:	call   0x429590
  4298d2:	jmp    0x429768
  4298d7:	test   cl,cl
  4298d9:	je     0x429973
  4298df:	mov    rdx,QWORD PTR [rsp+0x30]
  4298e4:	cmp    eax,0x1
  4298e7:	mov    QWORD PTR [rip+0x31932],rdx        # 0x45b220
  4298ee:	jne    0x42986c
  4298f4:	mov    r15,QWORD PTR [rsp+0x30]
  4298f9:	test   r15,r15
  4298fc:	jne    0x42986c
  429902:	mov    edx,DWORD PTR [rip+0x2c58]        # 0x42c560
  429908:	test   edx,edx
  42990a:	je     0x429928
  42990c:	mov    rax,QWORD PTR [rsp+0x98]
  429914:	cmp    BYTE PTR [rax],0x3a
  429917:	je     0x429928
  429919:	lea    rcx,[rip+0x2aca0]        # 0x4545c0
  429920:	mov    rdx,rbp
  429923:	call   0x429590
  429928:	cmp    QWORD PTR [r14+0x10],0x0
  42992d:	je     0x4299a6
  42992f:	mov    DWORD PTR [rip+0x2c1f],0x0        # 0x42c558
  429939:	mov    rax,QWORD PTR [rsp+0x98]
  429941:	sub    DWORD PTR [rip+0x2c14],0x1        # 0x42c55c
  429948:	cmp    BYTE PTR [rax],0x3a
  42994b:	jne    0x42982a
  429951:	mov    eax,0x3a
  429956:	jmp    0x429777
  42995b:	mov    eax,DWORD PTR [r14+0x18]
  42995f:	jmp    0x429777
  429964:	mov    eax,DWORD PTR [r14+0x18]
  429968:	mov    DWORD PTR [rip+0x2bea],eax        # 0x42c558
  42996e:	jmp    0x429819
  429973:	cmp    eax,0x1
  429976:	jne    0x42986c
  42997c:	mov    eax,DWORD PTR [rsp+0x38]
  429980:	mov    rdx,QWORD PTR [rsp+0x90]
  429988:	add    eax,0x2
  42998b:	mov    DWORD PTR [rip+0x2bcb],eax        # 0x42c55c
  429991:	movsxd rax,DWORD PTR [rsp+0x3c]
  429996:	mov    r15,QWORD PTR [rdx+rax*8]
  42999a:	mov    QWORD PTR [rip+0x3187f],r15        # 0x45b220
  4299a1:	jmp    0x4298f9
  4299a6:	mov    eax,DWORD PTR [r14+0x18]
  4299aa:	mov    DWORD PTR [rip+0x2ba8],eax        # 0x42c558
  4299b0:	jmp    0x429939
  4299b2:	mov    eax,DWORD PTR [rsp+0x38]
  4299b6:	mov    DWORD PTR [rip+0x2ba0],eax        # 0x42c55c
  4299bc:	mov    eax,0xffffffff
  4299c1:	jmp    0x429777
  4299c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4299d0:	push   r15
  4299d2:	push   r14
  4299d4:	push   r13
  4299d6:	push   r12
  4299d8:	push   rbp
  4299d9:	push   rdi
  4299da:	push   rsi
  4299db:	push   rbx
  4299dc:	sub    rsp,0x38
  4299e0:	test   r8,r8
  4299e3:	mov    edi,ecx
  4299e5:	mov    r15,rdx
  4299e8:	mov    QWORD PTR [rsp+0x90],r8
  4299f0:	mov    QWORD PTR [rsp+0x98],r9
  4299f8:	je     0x429cce
  4299fe:	mov    r9d,DWORD PTR [rip+0x2b57]        # 0x42c55c
  429a05:	test   r9d,r9d
  429a08:	je     0x429c60
  429a0e:	cmp    DWORD PTR [rip+0x2b2b],0xffffffff        # 0x42c540
  429a15:	je     0x429bd4
  429a1b:	mov    edx,DWORD PTR [rip+0x31807]        # 0x45b228
  429a21:	test   edx,edx
  429a23:	jne    0x429bd4
  429a29:	mov    rax,QWORD PTR [rsp+0x90]
  429a31:	movzx  eax,BYTE PTR [rax]
  429a34:	cmp    al,0x2d
  429a36:	je     0x429c08
  429a3c:	cmp    al,0x2b
  429a3e:	je     0x429ce4
  429a44:	mov    r8d,DWORD PTR [rip+0x2af5]        # 0x42c540
  429a4b:	test   r8d,r8d
  429a4e:	jne    0x429ce4
  429a54:	sub    eax,0x2b
  429a57:	test   al,0xfd
  429a59:	je     0x429c10
  429a5f:	test   edx,edx
  429a61:	mov    QWORD PTR [rip+0x317b4],0x0        # 0x45b220
  429a6c:	jne    0x429c40
  429a72:	mov    r14d,DWORD PTR [rsp+0xa8]
  429a7a:	mov    ebp,DWORD PTR [rsp+0xa8]
  429a81:	and    r14d,0x2
  429a85:	and    ebp,0x1
  429a88:	jmp    0x429b0e
  429a8d:	nop    DWORD PTR [rax]
  429a90:	lea    rax,[rip+0x2aa7e]        # 0x454515
  429a97:	test   r14d,r14d
  429a9a:	mov    edx,r14d
  429a9d:	mov    QWORD PTR [rip+0x2aac],rax        # 0x42c550
  429aa4:	jne    0x429db0
  429aaa:	test   ebp,ebp
  429aac:	je     0x429cce
  429ab2:	mov    r12d,DWORD PTR [rip+0x2a8f]        # 0x42c548
  429ab9:	cmp    r12d,0xffffffff
  429abd:	je     0x429c30
  429ac3:	mov    r13d,DWORD PTR [rip+0x2a7a]        # 0x42c544
  429aca:	cmp    r13d,0xffffffff
  429ace:	je     0x429b05
  429ad0:	mov    edx,r13d
  429ad3:	mov    r9,r15
  429ad6:	mov    r8d,ebx
  429ad9:	mov    ecx,r12d
  429adc:	call   0x4294e0
  429ae1:	mov    esi,DWORD PTR [rip+0x2a75]        # 0x42c55c
  429ae7:	mov    eax,r12d
  429aea:	mov    edx,DWORD PTR [rip+0x31738]        # 0x45b228
  429af0:	sub    eax,r13d
  429af3:	mov    DWORD PTR [rip+0x2a47],0xffffffff        # 0x42c544
  429afd:	add    eax,esi
  429aff:	mov    DWORD PTR [rip+0x2a43],eax        # 0x42c548
  429b05:	add    esi,0x1
  429b08:	mov    DWORD PTR [rip+0x2a4e],esi        # 0x42c55c
  429b0e:	test   edx,edx
  429b10:	jne    0x429b24
  429b12:	mov    rsi,QWORD PTR [rip+0x2a37]        # 0x42c550
  429b19:	movzx  eax,BYTE PTR [rsi]
  429b1c:	test   al,al
  429b1e:	jne    0x429d1e
  429b24:	movsxd rbx,DWORD PTR [rip+0x2a31]        # 0x42c55c
  429b2b:	mov    DWORD PTR [rip+0x316f3],0x0        # 0x45b228
  429b35:	cmp    ebx,edi
  429b37:	mov    esi,ebx
  429b39:	jge    0x429c80
  429b3f:	movsxd rax,ebx
  429b42:	mov    r13,QWORD PTR [r15+rax*8]
  429b46:	cmp    BYTE PTR [r13+0x0],0x2d
  429b4b:	mov    QWORD PTR [rip+0x29fe],r13        # 0x42c550
  429b52:	jne    0x429a90
  429b58:	movzx  eax,BYTE PTR [r13+0x1]
  429b5d:	test   al,al
  429b5f:	jne    0x429cf1
  429b65:	mov    rcx,QWORD PTR [rsp+0x90]
  429b6d:	mov    edx,0x2d
  429b72:	call   0x42a428
  429b77:	test   rax,rax
  429b7a:	je     0x429a90
  429b80:	cmp    DWORD PTR [rip+0x29c1],0xffffffff        # 0x42c548
  429b87:	mov    rsi,r13
  429b8a:	je     0x429ba4
  429b8c:	cmp    DWORD PTR [rip+0x29b1],0xffffffff        # 0x42c544
  429b93:	mov    eax,0x2d
  429b98:	jne    0x429d1e
  429b9e:	mov    DWORD PTR [rip+0x29a0],ebx        # 0x42c544
  429ba4:	cmp    QWORD PTR [rsp+0x98],0x0
  429bad:	je     0x429f9c
  429bb3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  429bb7:	mov    eax,0x2d
  429bbc:	je     0x429dee
  429bc2:	add    rsi,0x1
  429bc6:	xor    edx,edx
  429bc8:	mov    QWORD PTR [rip+0x2981],rsi        # 0x42c550
  429bcf:	jmp    0x429d72
  429bd4:	lea    rcx,[rip+0x2a92a]        # 0x454505
  429bdb:	call   0x42a4d0
  429be0:	test   rax,rax
  429be3:	mov    edx,DWORD PTR [rip+0x3163f]        # 0x45b228
  429be9:	setne  al
  429bec:	movzx  eax,al
  429bef:	mov    DWORD PTR [rip+0x294b],eax        # 0x42c540
  429bf5:	mov    rax,QWORD PTR [rsp+0x90]
  429bfd:	movzx  eax,BYTE PTR [rax]
  429c00:	cmp    al,0x2d
  429c02:	jne    0x429a3c
  429c08:	or     DWORD PTR [rsp+0xa8],0x2
  429c10:	add    QWORD PTR [rsp+0x90],0x1
  429c19:	test   edx,edx
  429c1b:	mov    QWORD PTR [rip+0x315fa],0x0        # 0x45b220
  429c26:	je     0x429a72
  429c2c:	jmp    0x429c40
  429c2e:	xchg   ax,ax
  429c30:	mov    DWORD PTR [rip+0x2912],ebx        # 0x42c548
  429c36:	jmp    0x429b05
  429c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  429c40:	mov    DWORD PTR [rip+0x28fa],0xffffffff        # 0x42c544
  429c4a:	mov    DWORD PTR [rip+0x28f4],0xffffffff        # 0x42c548
  429c54:	jmp    0x429a72
  429c59:	nop    DWORD PTR [rax+0x0]
  429c60:	mov    DWORD PTR [rip+0x315be],0x1        # 0x45b228
  429c6a:	mov    DWORD PTR [rip+0x28e8],0x1        # 0x42c55c
  429c74:	jmp    0x429a0e
  429c79:	nop    DWORD PTR [rax+0x0]
  429c80:	mov    esi,DWORD PTR [rip+0x28be]        # 0x42c544
  429c86:	lea    rax,[rip+0x2a888]        # 0x454515
  429c8d:	mov    QWORD PTR [rip+0x28bc],rax        # 0x42c550
  429c94:	cmp    esi,0xffffffff
  429c97:	je     0x429dca
  429c9d:	mov    edi,DWORD PTR [rip+0x28a5]        # 0x42c548
  429ca3:	mov    r9,r15
  429ca6:	mov    r8d,ebx
  429ca9:	mov    edx,esi
  429cab:	mov    ecx,edi
  429cad:	sub    edi,esi
  429caf:	call   0x4294e0
  429cb4:	add    DWORD PTR [rip+0x28a2],edi        # 0x42c55c
  429cba:	mov    DWORD PTR [rip+0x2880],0xffffffff        # 0x42c544
  429cc4:	mov    DWORD PTR [rip+0x287a],0xffffffff        # 0x42c548
  429cce:	mov    eax,0xffffffff
  429cd3:	add    rsp,0x38
  429cd7:	pop    rbx
  429cd8:	pop    rsi
  429cd9:	pop    rdi
  429cda:	pop    rbp
  429cdb:	pop    r12
  429cdd:	pop    r13
  429cdf:	pop    r14
  429ce1:	pop    r15
  429ce3:	ret    
  429ce4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  429cec:	jmp    0x429a54
  429cf1:	mov    ebp,DWORD PTR [rip+0x2851]        # 0x42c548
  429cf7:	cmp    ebp,0xffffffff
  429cfa:	je     0x429d0b
  429cfc:	cmp    DWORD PTR [rip+0x2841],0xffffffff        # 0x42c544
  429d03:	jne    0x429d0b
  429d05:	mov    DWORD PTR [rip+0x2839],ebx        # 0x42c544
  429d0b:	lea    rsi,[r13+0x1]
  429d0f:	cmp    al,0x2d
  429d11:	mov    QWORD PTR [rip+0x2838],rsi        # 0x42c550
  429d18:	je     0x429ecf
  429d1e:	cmp    QWORD PTR [rsp+0x98],0x0
  429d27:	je     0x429dee
  429d2d:	movsxd rdx,DWORD PTR [rip+0x2828]        # 0x42c55c
  429d34:	cmp    rsi,QWORD PTR [r15+rdx*8]
  429d38:	je     0x429dee
  429d3e:	cmp    al,0x2d
  429d40:	je     0x429bc2
  429d46:	test   BYTE PTR [rsp+0xa8],0x4
  429d4e:	je     0x429dee
  429d54:	xor    edx,edx
  429d56:	cmp    al,0x3a
  429d58:	je     0x429d72
  429d5a:	mov    rcx,QWORD PTR [rsp+0x90]
  429d62:	movsx  edx,al
  429d65:	call   0x42a428
  429d6a:	xor    edx,edx
  429d6c:	test   rax,rax
  429d6f:	setne  dl
  429d72:	mov    DWORD PTR [rsp+0x20],edx
  429d76:	mov    r9,QWORD PTR [rsp+0xa0]
  429d7e:	mov    rcx,r15
  429d81:	mov    r8,QWORD PTR [rsp+0x98]
  429d89:	mov    rdx,QWORD PTR [rsp+0x90]
  429d91:	call   0x429610
  429d96:	cmp    eax,0xffffffff
  429d99:	je     0x429de4
  429d9b:	lea    rcx,[rip+0x2a773]        # 0x454515
  429da2:	mov    QWORD PTR [rip+0x27a7],rcx        # 0x42c550
  429da9:	jmp    0x429cd3
  429dae:	xchg   ax,ax
  429db0:	add    ebx,0x1
  429db3:	mov    QWORD PTR [rip+0x31466],r13        # 0x45b220
  429dba:	mov    eax,0x1
  429dbf:	mov    DWORD PTR [rip+0x2797],ebx        # 0x42c55c
  429dc5:	jmp    0x429cd3
  429dca:	mov    eax,DWORD PTR [rip+0x2778]        # 0x42c548
  429dd0:	cmp    eax,0xffffffff
  429dd3:	je     0x429cba
  429dd9:	mov    DWORD PTR [rip+0x277d],eax        # 0x42c55c
  429ddf:	jmp    0x429cba
  429de4:	mov    rsi,QWORD PTR [rip+0x2765]        # 0x42c550
  429deb:	movzx  eax,BYTE PTR [rsi]
  429dee:	lea    rbp,[rsi+0x1]
  429df2:	movsx  ebx,al
  429df5:	cmp    ebx,0x3a
  429df8:	mov    QWORD PTR [rip+0x2751],rbp        # 0x42c550
  429dff:	je     0x429e64
  429e01:	cmp    ebx,0x2d
  429e04:	je     0x429fa7
  429e0a:	mov    rcx,QWORD PTR [rsp+0x90]
  429e12:	mov    edx,ebx
  429e14:	call   0x42a428
  429e19:	test   rax,rax
  429e1c:	je     0x429e64
  429e1e:	cmp    ebx,0x57
  429e21:	jne    0x429ec6
  429e27:	cmp    QWORD PTR [rsp+0x98],0x0
  429e30:	je     0x429ec6
  429e36:	movzx  edx,BYTE PTR [rax+0x1]
  429e3a:	cmp    dl,0x3b
  429e3d:	je     0x429f20
  429e43:	cmp    dl,0x3a
  429e46:	je     0x429fbb
  429e4c:	cmp    BYTE PTR [rsi+0x1],0x0
  429e50:	mov    eax,ebx
  429e52:	jne    0x429cd3
  429e58:	add    DWORD PTR [rip+0x26fd],0x1        # 0x42c55c
  429e5f:	jmp    0x429cd3
  429e64:	cmp    BYTE PTR [rsi+0x1],0x0
  429e68:	jne    0x429e71
  429e6a:	add    DWORD PTR [rip+0x26eb],0x1        # 0x42c55c
  429e71:	mov    ecx,DWORD PTR [rip+0x26e9]        # 0x42c560
  429e77:	test   ecx,ecx
  429e79:	je     0x429e96
  429e7b:	mov    rax,QWORD PTR [rsp+0x90]
  429e83:	cmp    BYTE PTR [rax],0x3a
  429e86:	je     0x429e96
  429e88:	lea    rcx,[rip+0x2a6b1]        # 0x454540
  429e8f:	mov    edx,ebx
  429e91:	call   0x429590
  429e96:	mov    DWORD PTR [rip+0x26bc],ebx        # 0x42c558
  429e9c:	mov    eax,0x3f
  429ea1:	jmp    0x429cd3
  429ea6:	mov    rcx,QWORD PTR [rsp+0x90]
  429eae:	mov    edx,0x2d
  429eb3:	call   0x42a428
  429eb8:	test   rax,rax
  429ebb:	je     0x429cce
  429ec1:	mov    ebx,0x2d
  429ec6:	movzx  edx,BYTE PTR [rax+0x1]
  429eca:	jmp    0x429e43
  429ecf:	cmp    BYTE PTR [r13+0x2],0x0
  429ed4:	jne    0x429ba4
  429eda:	mov    esi,DWORD PTR [rip+0x2664]        # 0x42c544
  429ee0:	lea    r8d,[rbx+0x1]
  429ee4:	lea    rax,[rip+0x2a62a]        # 0x454515
  429eeb:	mov    DWORD PTR [rip+0x266a],r8d        # 0x42c55c
  429ef2:	mov    QWORD PTR [rip+0x2657],rax        # 0x42c550
  429ef9:	cmp    esi,0xffffffff
  429efc:	je     0x429cba
  429f02:	mov    ecx,ebp
  429f04:	mov    r9,r15
  429f07:	mov    edx,esi
  429f09:	call   0x4294e0
  429f0e:	sub    ebp,esi
  429f10:	add    DWORD PTR [rip+0x2646],ebp        # 0x42c55c
  429f16:	jmp    0x429cba
  429f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  429f20:	cmp    BYTE PTR [rsi+0x1],0x0
  429f24:	jne    0x42a075
  429f2a:	mov    eax,DWORD PTR [rip+0x262c]        # 0x42c55c
  429f30:	add    eax,0x1
  429f33:	cmp    edi,eax
  429f35:	mov    DWORD PTR [rip+0x2621],eax        # 0x42c55c
  429f3b:	jg     0x42a068
  429f41:	mov    edx,DWORD PTR [rip+0x2619]        # 0x42c560
  429f47:	lea    rax,[rip+0x2a5c7]        # 0x454515
  429f4e:	mov    QWORD PTR [rip+0x25fb],rax        # 0x42c550
  429f55:	test   edx,edx
  429f57:	je     0x429f77
  429f59:	mov    rax,QWORD PTR [rsp+0x90]
  429f61:	cmp    BYTE PTR [rax],0x3a
  429f64:	je     0x429f77
  429f66:	lea    rcx,[rip+0x2a693]        # 0x454600
  429f6d:	mov    edx,0x57
  429f72:	call   0x429590
  429f77:	mov    rax,QWORD PTR [rsp+0x90]
  429f7f:	mov    DWORD PTR [rip+0x25cf],0x57        # 0x42c558
  429f89:	cmp    BYTE PTR [rax],0x3a
  429f8c:	je     0x42a05e
  429f92:	mov    eax,0x3f
  429f97:	jmp    0x429cd3
  429f9c:	lea    rbp,[rsi+0x1]
  429fa0:	mov    QWORD PTR [rip+0x25a9],rbp        # 0x42c550
  429fa7:	cmp    BYTE PTR [rsi+0x1],0x0
  429fab:	je     0x429ea6
  429fb1:	mov    ebx,0x2d
  429fb6:	jmp    0x429e71
  429fbb:	mov    QWORD PTR [rip+0x3125a],0x0        # 0x45b220
  429fc6:	cmp    BYTE PTR [rsi+0x1],0x0
  429fca:	je     0x429ff7
  429fcc:	mov    eax,DWORD PTR [rip+0x258a]        # 0x42c55c
  429fd2:	mov    QWORD PTR [rip+0x31247],rbp        # 0x45b220
  429fd9:	lea    rcx,[rip+0x2a535]        # 0x454515
  429fe0:	add    eax,0x1
  429fe3:	mov    DWORD PTR [rip+0x2573],eax        # 0x42c55c
  429fe9:	mov    eax,ebx
  429feb:	mov    QWORD PTR [rip+0x255e],rcx        # 0x42c550
  429ff2:	jmp    0x429cd3
  429ff7:	cmp    BYTE PTR [rax+0x2],0x3a
  429ffb:	mov    eax,DWORD PTR [rip+0x255b]        # 0x42c55c
  42a001:	je     0x429fd9
  42a003:	add    eax,0x1
  42a006:	cmp    edi,eax
  42a008:	mov    DWORD PTR [rip+0x254e],eax        # 0x42c55c
  42a00e:	jg     0x42a0a2
  42a014:	lea    rax,[rip+0x2a4fa]        # 0x454515
  42a01b:	mov    QWORD PTR [rip+0x252e],rax        # 0x42c550
  42a022:	mov    eax,DWORD PTR [rip+0x2538]        # 0x42c560
  42a028:	test   eax,eax
  42a02a:	je     0x42a047
  42a02c:	mov    rax,QWORD PTR [rsp+0x90]
  42a034:	cmp    BYTE PTR [rax],0x3a
  42a037:	je     0x42a047
  42a039:	lea    rcx,[rip+0x2a5c0]        # 0x454600
  42a040:	mov    edx,ebx
  42a042:	call   0x429590
  42a047:	mov    rax,QWORD PTR [rsp+0x90]
  42a04f:	mov    DWORD PTR [rip+0x2503],ebx        # 0x42c558
  42a055:	cmp    BYTE PTR [rax],0x3a
  42a058:	jne    0x429f92
  42a05e:	mov    eax,0x3a
  42a063:	jmp    0x429cd3
  42a068:	cdqe   
  42a06a:	mov    rax,QWORD PTR [r15+rax*8]
  42a06e:	mov    QWORD PTR [rip+0x24db],rax        # 0x42c550
  42a075:	mov    r9,QWORD PTR [rsp+0xa0]
  42a07d:	mov    r8,QWORD PTR [rsp+0x98]
  42a085:	mov    rcx,r15
  42a088:	mov    rdx,QWORD PTR [rsp+0x90]
  42a090:	mov    DWORD PTR [rsp+0x20],0x0
  42a098:	call   0x429610
  42a09d:	jmp    0x429d9b
  42a0a2:	movsxd rdx,eax
  42a0a5:	mov    rdx,QWORD PTR [r15+rdx*8]
  42a0a9:	mov    QWORD PTR [rip+0x31170],rdx        # 0x45b220
  42a0b0:	jmp    0x429fd9
  42a0b5:	nop
  42a0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0c0:	sub    rsp,0x38
  42a0c4:	xor    r9d,r9d
  42a0c7:	mov    DWORD PTR [rsp+0x28],0x0
  42a0cf:	mov    QWORD PTR [rsp+0x20],0x0
  42a0d8:	call   0x4299d0
  42a0dd:	add    rsp,0x38
  42a0e1:	ret    
  42a0e2:	nop    DWORD PTR [rax+0x0]
  42a0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0f0:	sub    rsp,0x38
  42a0f4:	mov    rax,QWORD PTR [rsp+0x60]
  42a0f9:	mov    DWORD PTR [rsp+0x28],0x1
  42a101:	mov    QWORD PTR [rsp+0x20],rax
  42a106:	call   0x4299d0
  42a10b:	add    rsp,0x38
  42a10f:	ret    
  42a110:	sub    rsp,0x38
  42a114:	mov    rax,QWORD PTR [rsp+0x60]
  42a119:	mov    DWORD PTR [rsp+0x28],0x5
  42a121:	mov    QWORD PTR [rsp+0x20],rax
  42a126:	call   0x4299d0
  42a12b:	add    rsp,0x38
  42a12f:	ret    
  42a130:	push   r12
  42a132:	push   rbp
  42a133:	push   rdi
  42a134:	push   rsi
  42a135:	push   rbx
  42a136:	sub    rsp,0x60
  42a13a:	test   rcx,rcx
  42a13d:	mov    rsi,rcx
  42a140:	mov    rbx,rdx
  42a143:	je     0x42a192
  42a145:	movzx  ebp,BYTE PTR [rcx]
  42a148:	test   bpl,bpl
  42a14b:	je     0x42a192
  42a14d:	call   0x42a400
  42a152:	cmp    eax,0x1
  42a155:	mov    rdi,rax
  42a158:	jle    0x42a192
  42a15a:	lea    eax,[rax-0x2]
  42a15d:	cmp    eax,0x1
  42a160:	jbe    0x42a2f0
  42a166:	cmp    bpl,0x2f
  42a16a:	je     0x42a214
  42a170:	cmp    bpl,0x5c
  42a174:	je     0x42a214
  42a17a:	movsxd rbp,edi
  42a17d:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  42a182:	cmp    al,0x5c
  42a184:	je     0x42a2a0
  42a18a:	cmp    al,0x2f
  42a18c:	je     0x42a2a0
  42a192:	lea    rdx,[rsp+0x20]
  42a197:	mov    rcx,rsi
  42a19a:	call   0x42a3a0
  42a19f:	mov    ebp,eax
  42a1a1:	cmp    ebp,0xffffffff
  42a1a4:	je     0x42a320
  42a1aa:	mov    eax,DWORD PTR [rsp+0x20]
  42a1ae:	mov    DWORD PTR [rbx],eax
  42a1b0:	movzx  eax,WORD PTR [rsp+0x24]
  42a1b5:	mov    WORD PTR [rbx+0x4],ax
  42a1b9:	movzx  eax,WORD PTR [rsp+0x26]
  42a1be:	mov    WORD PTR [rbx+0x6],ax
  42a1c2:	movzx  eax,WORD PTR [rsp+0x28]
  42a1c7:	mov    WORD PTR [rbx+0x8],ax
  42a1cb:	movzx  eax,WORD PTR [rsp+0x2a]
  42a1d0:	mov    WORD PTR [rbx+0xa],ax
  42a1d4:	movzx  eax,WORD PTR [rsp+0x2c]
  42a1d9:	mov    WORD PTR [rbx+0xc],ax
  42a1dd:	mov    eax,DWORD PTR [rsp+0x30]
  42a1e1:	mov    DWORD PTR [rbx+0x10],eax
  42a1e4:	mov    rax,QWORD PTR [rsp+0x38]
  42a1e9:	mov    DWORD PTR [rbx+0x14],eax
  42a1ec:	mov    rax,QWORD PTR [rsp+0x40]
  42a1f1:	mov    QWORD PTR [rbx+0x18],rax
  42a1f5:	mov    rax,QWORD PTR [rsp+0x48]
  42a1fa:	mov    QWORD PTR [rbx+0x20],rax
  42a1fe:	mov    rax,QWORD PTR [rsp+0x50]
  42a203:	mov    QWORD PTR [rbx+0x28],rax
  42a207:	mov    eax,ebp
  42a209:	add    rsp,0x60
  42a20d:	pop    rbx
  42a20e:	pop    rsi
  42a20f:	pop    rdi
  42a210:	pop    rbp
  42a211:	pop    r12
  42a213:	ret    
  42a214:	movzx  eax,BYTE PTR [rsi+0x1]
  42a218:	cmp    al,0x2f
  42a21a:	je     0x42a224
  42a21c:	cmp    al,0x5c
  42a21e:	jne    0x42a17a
  42a224:	movzx  ecx,BYTE PTR [rsi+0x2]
  42a228:	lea    rdx,[rsi+0x2]
  42a22c:	cmp    cl,0x5c
  42a22f:	jne    0x42a250
  42a231:	jmp    0x42a300
  42a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a240:	add    rdx,0x1
  42a244:	movzx  ecx,BYTE PTR [rdx]
  42a247:	cmp    cl,0x5c
  42a24a:	je     0x42a300
  42a250:	test   cl,cl
  42a252:	je     0x42a300
  42a258:	cmp    cl,0x2f
  42a25b:	jne    0x42a240
  42a25d:	add    rdx,0x1
  42a261:	movzx  eax,BYTE PTR [rdx]
  42a264:	test   al,al
  42a266:	je     0x42a192
  42a26c:	cmp    al,0x5c
  42a26e:	je     0x42a291
  42a270:	cmp    al,0x2f
  42a272:	je     0x42a291
  42a274:	add    rdx,0x1
  42a278:	movzx  ecx,BYTE PTR [rdx]
  42a27b:	cmp    cl,0x5c
  42a27e:	je     0x42a310
  42a284:	test   cl,cl
  42a286:	je     0x42a310
  42a28c:	cmp    cl,0x2f
  42a28f:	jne    0x42a274
  42a291:	cmp    BYTE PTR [rdx+0x1],0x0
  42a295:	jne    0x42a17a
  42a29b:	jmp    0x42a192
  42a2a0:	mov    rcx,rbp
  42a2a3:	call   0x42a4a0
  42a2a8:	lea    r8d,[rdi-0x1]
  42a2ac:	mov    rdx,rsi
  42a2af:	mov    rcx,rax
  42a2b2:	mov    r12,rax
  42a2b5:	movsxd r8,r8d
  42a2b8:	call   0x42a490
  42a2bd:	lea    rdx,[rsp+0x20]
  42a2c2:	mov    rcx,r12
  42a2c5:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  42a2cb:	call   0x42a3a0
  42a2d0:	cmp    rsi,r12
  42a2d3:	mov    ebp,eax
  42a2d5:	je     0x42a1a1
  42a2db:	mov    rcx,r12
  42a2de:	call   0x42a4e8
  42a2e3:	jmp    0x42a1a1
  42a2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2f0:	cmp    BYTE PTR [rsi+0x1],0x3a
  42a2f4:	jne    0x42a166
  42a2fa:	jmp    0x42a192
  42a2ff:	nop
  42a300:	test   cl,cl
  42a302:	je     0x42a261
  42a308:	jmp    0x42a25d
  42a30d:	nop    DWORD PTR [rax]
  42a310:	test   cl,cl
  42a312:	je     0x42a192
  42a318:	jmp    0x42a291
  42a31d:	nop    DWORD PTR [rax]
  42a320:	lea    rdi,[rbx+0x8]
  42a324:	mov    QWORD PTR [rbx],0x0
  42a32b:	mov    QWORD PTR [rbx+0x28],0x0
  42a333:	xor    eax,eax
  42a335:	and    rdi,0xfffffffffffffff8
  42a339:	sub    rbx,rdi
  42a33c:	lea    ecx,[rbx+0x30]
  42a33f:	shr    ecx,0x3
  42a342:	rep stos QWORD PTR es:[rdi],rax
  42a345:	jmp    0x42a207
  42a34a:	nop
  42a34b:	nop
  42a34c:	nop
  42a34d:	nop
  42a34e:	nop
  42a34f:	nop
  42a350:	jmp    QWORD PTR [rip+0x32b1e]        # 0x45ce74
  42a356:	nop
  42a357:	nop
  42a358:	jmp    QWORD PTR [rip+0x32b0e]        # 0x45ce6c
  42a35e:	nop
  42a35f:	nop
  42a360:	jmp    QWORD PTR [rip+0x32afe]        # 0x45ce64
  42a366:	nop
  42a367:	nop
  42a368:	jmp    QWORD PTR [rip+0x32aee]        # 0x45ce5c
  42a36e:	nop
  42a36f:	nop
  42a370:	jmp    QWORD PTR [rip+0x32ade]        # 0x45ce54
  42a376:	nop
  42a377:	nop
  42a378:	jmp    QWORD PTR [rip+0x32ace]        # 0x45ce4c
  42a37e:	nop
  42a37f:	nop
  42a380:	jmp    QWORD PTR [rip+0x32abe]        # 0x45ce44
  42a386:	nop
  42a387:	nop
  42a388:	jmp    QWORD PTR [rip+0x32aae]        # 0x45ce3c
  42a38e:	nop
  42a38f:	nop
  42a390:	jmp    QWORD PTR [rip+0x32a9e]        # 0x45ce34
  42a396:	nop
  42a397:	nop
  42a398:	jmp    QWORD PTR [rip+0x32a8e]        # 0x45ce2c
  42a39e:	nop
  42a39f:	nop
  42a3a0:	jmp    QWORD PTR [rip+0x32a7e]        # 0x45ce24
  42a3a6:	nop
  42a3a7:	nop
  42a3a8:	jmp    QWORD PTR [rip+0x32a6e]        # 0x45ce1c
  42a3ae:	nop
  42a3af:	nop
  42a3b0:	jmp    QWORD PTR [rip+0x32a5e]        # 0x45ce14
  42a3b6:	nop
  42a3b7:	nop
  42a3b8:	jmp    QWORD PTR [rip+0x32a4e]        # 0x45ce0c
  42a3be:	nop
  42a3bf:	nop
  42a3c0:	jmp    QWORD PTR [rip+0x32a3e]        # 0x45ce04
  42a3c6:	nop
  42a3c7:	nop
  42a3c8:	jmp    QWORD PTR [rip+0x32a2e]        # 0x45cdfc
  42a3ce:	nop
  42a3cf:	nop
  42a3d0:	jmp    QWORD PTR [rip+0x32a1e]        # 0x45cdf4
  42a3d6:	nop
  42a3d7:	nop
  42a3d8:	jmp    QWORD PTR [rip+0x32a0e]        # 0x45cdec
  42a3de:	nop
  42a3df:	nop
  42a3e0:	jmp    QWORD PTR [rip+0x329fe]        # 0x45cde4
  42a3e6:	nop
  42a3e7:	nop
  42a3e8:	jmp    QWORD PTR [rip+0x329ee]        # 0x45cddc
  42a3ee:	nop
  42a3ef:	nop
  42a3f0:	jmp    QWORD PTR [rip+0x329de]        # 0x45cdd4
  42a3f6:	nop
  42a3f7:	nop
  42a3f8:	jmp    QWORD PTR [rip+0x329ce]        # 0x45cdcc
  42a3fe:	nop
  42a3ff:	nop
  42a400:	jmp    QWORD PTR [rip+0x329be]        # 0x45cdc4
  42a406:	nop
  42a407:	nop
  42a408:	jmp    QWORD PTR [rip+0x329ae]        # 0x45cdbc
  42a40e:	nop
  42a40f:	nop
  42a410:	jmp    QWORD PTR [rip+0x3299e]        # 0x45cdb4
  42a416:	nop
  42a417:	nop
  42a418:	jmp    QWORD PTR [rip+0x3298e]        # 0x45cdac
  42a41e:	nop
  42a41f:	nop
  42a420:	jmp    QWORD PTR [rip+0x3297e]        # 0x45cda4
  42a426:	nop
  42a427:	nop
  42a428:	jmp    QWORD PTR [rip+0x3296e]        # 0x45cd9c
  42a42e:	nop
  42a42f:	nop
  42a430:	jmp    QWORD PTR [rip+0x3295e]        # 0x45cd94
  42a436:	nop
  42a437:	nop
  42a438:	jmp    QWORD PTR [rip+0x3294e]        # 0x45cd8c
  42a43e:	nop
  42a43f:	nop
  42a440:	jmp    QWORD PTR [rip+0x3293e]        # 0x45cd84
  42a446:	nop
  42a447:	nop
  42a448:	jmp    QWORD PTR [rip+0x3292e]        # 0x45cd7c
  42a44e:	nop
  42a44f:	nop
  42a450:	jmp    QWORD PTR [rip+0x3291e]        # 0x45cd74
  42a456:	nop
  42a457:	nop
  42a458:	jmp    QWORD PTR [rip+0x3290e]        # 0x45cd6c
  42a45e:	nop
  42a45f:	nop
  42a460:	jmp    QWORD PTR [rip+0x328fe]        # 0x45cd64
  42a466:	nop
  42a467:	nop
  42a468:	jmp    QWORD PTR [rip+0x328ee]        # 0x45cd5c
  42a46e:	nop
  42a46f:	nop
  42a470:	jmp    QWORD PTR [rip+0x328de]        # 0x45cd54
  42a476:	nop
  42a477:	nop
  42a478:	jmp    QWORD PTR [rip+0x328ce]        # 0x45cd4c
  42a47e:	nop
  42a47f:	nop
  42a480:	jmp    QWORD PTR [rip+0x328be]        # 0x45cd44
  42a486:	nop
  42a487:	nop
  42a488:	jmp    QWORD PTR [rip+0x328ae]        # 0x45cd3c
  42a48e:	nop
  42a48f:	nop
  42a490:	jmp    QWORD PTR [rip+0x3289e]        # 0x45cd34
  42a496:	nop
  42a497:	nop
  42a498:	jmp    QWORD PTR [rip+0x3288e]        # 0x45cd2c
  42a49e:	nop
  42a49f:	nop
  42a4a0:	jmp    QWORD PTR [rip+0x3287e]        # 0x45cd24
  42a4a6:	nop
  42a4a7:	nop
  42a4a8:	jmp    QWORD PTR [rip+0x3286e]        # 0x45cd1c
  42a4ae:	nop
  42a4af:	nop
  42a4b0:	jmp    QWORD PTR [rip+0x3285e]        # 0x45cd14
  42a4b6:	nop
  42a4b7:	nop
  42a4b8:	jmp    QWORD PTR [rip+0x3284e]        # 0x45cd0c
  42a4be:	nop
  42a4bf:	nop
  42a4c0:	jmp    QWORD PTR [rip+0x3283e]        # 0x45cd04
  42a4c6:	nop
  42a4c7:	nop
  42a4c8:	jmp    QWORD PTR [rip+0x3282e]        # 0x45ccfc
  42a4ce:	nop
  42a4cf:	nop
  42a4d0:	jmp    QWORD PTR [rip+0x3281e]        # 0x45ccf4
  42a4d6:	nop
  42a4d7:	nop
  42a4d8:	jmp    QWORD PTR [rip+0x3280e]        # 0x45ccec
  42a4de:	nop
  42a4df:	nop
  42a4e0:	jmp    QWORD PTR [rip+0x327fe]        # 0x45cce4
  42a4e6:	nop
  42a4e7:	nop
  42a4e8:	jmp    QWORD PTR [rip+0x327ee]        # 0x45ccdc
  42a4ee:	nop
  42a4ef:	nop
  42a4f0:	jmp    QWORD PTR [rip+0x327de]        # 0x45ccd4
  42a4f6:	nop
  42a4f7:	nop
  42a4f8:	jmp    QWORD PTR [rip+0x327ce]        # 0x45cccc
  42a4fe:	nop
  42a4ff:	nop
  42a500:	jmp    QWORD PTR [rip+0x327be]        # 0x45ccc4
  42a506:	nop
  42a507:	nop
  42a508:	jmp    QWORD PTR [rip+0x327ae]        # 0x45ccbc
  42a50e:	nop
  42a50f:	nop
  42a510:	jmp    QWORD PTR [rip+0x3279e]        # 0x45ccb4
  42a516:	nop
  42a517:	nop
  42a518:	jmp    QWORD PTR [rip+0x3278e]        # 0x45ccac
  42a51e:	nop
  42a51f:	nop
  42a520:	jmp    QWORD PTR [rip+0x3277e]        # 0x45cca4
  42a526:	nop
  42a527:	nop
  42a528:	jmp    QWORD PTR [rip+0x3276e]        # 0x45cc9c
  42a52e:	nop
  42a52f:	nop
  42a530:	jmp    QWORD PTR [rip+0x3275e]        # 0x45cc94
  42a536:	nop
  42a537:	nop
  42a538:	jmp    QWORD PTR [rip+0x3274e]        # 0x45cc8c
  42a53e:	nop
  42a53f:	nop
  42a540:	jmp    QWORD PTR [rip+0x3273e]        # 0x45cc84
  42a546:	nop
  42a547:	nop
  42a548:	jmp    QWORD PTR [rip+0x3272e]        # 0x45cc7c
  42a54e:	nop
  42a54f:	nop
  42a550:	jmp    QWORD PTR [rip+0x3271e]        # 0x45cc74
  42a556:	nop
  42a557:	nop
  42a558:	jmp    QWORD PTR [rip+0x3270e]        # 0x45cc6c
  42a55e:	nop
  42a55f:	nop
  42a560:	jmp    QWORD PTR [rip+0x326fe]        # 0x45cc64
  42a566:	nop
  42a567:	nop
  42a568:	jmp    QWORD PTR [rip+0x326ee]        # 0x45cc5c
  42a56e:	nop
  42a56f:	nop
  42a570:	jmp    QWORD PTR [rip+0x326de]        # 0x45cc54
  42a576:	nop
  42a577:	nop
  42a578:	jmp    QWORD PTR [rip+0x326ce]        # 0x45cc4c
  42a57e:	nop
  42a57f:	nop
  42a580:	jmp    QWORD PTR [rip+0x326be]        # 0x45cc44
  42a586:	nop
  42a587:	nop
  42a588:	jmp    QWORD PTR [rip+0x326ae]        # 0x45cc3c
  42a58e:	nop
  42a58f:	nop
  42a590:	jmp    QWORD PTR [rip+0x3269e]        # 0x45cc34
  42a596:	nop
  42a597:	nop
  42a598:	jmp    QWORD PTR [rip+0x3268e]        # 0x45cc2c
  42a59e:	nop
  42a59f:	nop
  42a5a0:	jmp    QWORD PTR [rip+0x3267e]        # 0x45cc24
  42a5a6:	nop
  42a5a7:	nop
  42a5a8:	jmp    QWORD PTR [rip+0x3266e]        # 0x45cc1c
  42a5ae:	nop
  42a5af:	nop
  42a5b0:	jmp    QWORD PTR [rip+0x3265e]        # 0x45cc14
  42a5b6:	nop
  42a5b7:	nop
  42a5b8:	jmp    QWORD PTR [rip+0x3264e]        # 0x45cc0c
  42a5be:	nop
  42a5bf:	nop
  42a5c0:	jmp    QWORD PTR [rip+0x3263e]        # 0x45cc04
  42a5c6:	nop
  42a5c7:	nop
  42a5c8:	jmp    QWORD PTR [rip+0x3262e]        # 0x45cbfc
  42a5ce:	nop
  42a5cf:	nop
  42a5d0:	jmp    QWORD PTR [rip+0x32616]        # 0x45cbec
  42a5d6:	nop
  42a5d7:	nop
  42a5d8:	jmp    QWORD PTR [rip+0x32606]        # 0x45cbe4
  42a5de:	nop
  42a5df:	nop
  42a5e0:	jmp    QWORD PTR [rip+0x325f6]        # 0x45cbdc
  42a5e6:	nop
  42a5e7:	nop
  42a5e8:	jmp    QWORD PTR [rip+0x325de]        # 0x45cbcc
  42a5ee:	nop
  42a5ef:	nop
  42a5f0:	jmp    QWORD PTR [rip+0x325ce]        # 0x45cbc4
  42a5f6:	nop
  42a5f7:	nop
  42a5f8:	jmp    QWORD PTR [rip+0x325be]        # 0x45cbbc
  42a5fe:	nop
  42a5ff:	nop
  42a600:	jmp    QWORD PTR [rip+0x325ae]        # 0x45cbb4
  42a606:	nop
  42a607:	nop
  42a608:	jmp    QWORD PTR [rip+0x32596]        # 0x45cba4
  42a60e:	nop
  42a60f:	nop
  42a610:	jmp    QWORD PTR [rip+0x32586]        # 0x45cb9c
  42a616:	nop
  42a617:	nop
  42a618:	jmp    QWORD PTR [rip+0x3256e]        # 0x45cb8c
  42a61e:	nop
  42a61f:	nop
  42a620:	mov    rax,QWORD PTR [rip+0x308c9]        # 0x45aef0
  42a627:	ret    
  42a628:	nop    DWORD PTR [rax+rax*1+0x0]
  42a630:	mov    rax,rcx
  42a633:	xchg   QWORD PTR [rip+0x308b6],rax        # 0x45aef0
  42a63a:	ret    
  42a63b:	nop
  42a63c:	nop
  42a63d:	nop
  42a63e:	nop
  42a63f:	nop
  42a640:	jmp    QWORD PTR [rip+0x32396]        # 0x45c9dc
  42a646:	nop
  42a647:	nop
  42a648:	jmp    QWORD PTR [rip+0x32386]        # 0x45c9d4
  42a64e:	nop
  42a64f:	nop
  42a650:	jmp    QWORD PTR [rip+0x32376]        # 0x45c9cc
  42a656:	nop
  42a657:	nop
  42a658:	jmp    QWORD PTR [rip+0x32366]        # 0x45c9c4
  42a65e:	nop
  42a65f:	nop
  42a660:	jmp    QWORD PTR [rip+0x32356]        # 0x45c9bc
  42a666:	nop
  42a667:	nop
  42a668:	jmp    QWORD PTR [rip+0x32346]        # 0x45c9b4
  42a66e:	nop
  42a66f:	nop
  42a670:	jmp    QWORD PTR [rip+0x32336]        # 0x45c9ac
  42a676:	nop
  42a677:	nop
  42a678:	jmp    QWORD PTR [rip+0x32326]        # 0x45c9a4
  42a67e:	nop
  42a67f:	nop
  42a680:	jmp    QWORD PTR [rip+0x32316]        # 0x45c99c
  42a686:	nop
  42a687:	nop
  42a688:	nop    DWORD PTR [rax+rax*1+0x0]
  42a690:	jmp    QWORD PTR [rip+0x324e6]        # 0x45cb7c
  42a696:	nop
  42a697:	nop
  42a698:	jmp    QWORD PTR [rip+0x324d6]        # 0x45cb74
  42a69e:	nop
  42a69f:	nop
  42a6a0:	jmp    QWORD PTR [rip+0x324c6]        # 0x45cb6c
  42a6a6:	nop
  42a6a7:	nop
  42a6a8:	jmp    QWORD PTR [rip+0x324b6]        # 0x45cb64
  42a6ae:	nop
  42a6af:	nop
  42a6b0:	jmp    QWORD PTR [rip+0x324a6]        # 0x45cb5c
  42a6b6:	nop
  42a6b7:	nop
  42a6b8:	jmp    QWORD PTR [rip+0x32496]        # 0x45cb54
  42a6be:	nop
  42a6bf:	nop
  42a6c0:	jmp    QWORD PTR [rip+0x32486]        # 0x45cb4c
  42a6c6:	nop
  42a6c7:	nop
  42a6c8:	jmp    QWORD PTR [rip+0x32476]        # 0x45cb44
  42a6ce:	nop
  42a6cf:	nop
  42a6d0:	jmp    QWORD PTR [rip+0x32466]        # 0x45cb3c
  42a6d6:	nop
  42a6d7:	nop
  42a6d8:	jmp    QWORD PTR [rip+0x32456]        # 0x45cb34
  42a6de:	nop
  42a6df:	nop
  42a6e0:	jmp    QWORD PTR [rip+0x32446]        # 0x45cb2c
  42a6e6:	nop
  42a6e7:	nop
  42a6e8:	jmp    QWORD PTR [rip+0x32436]        # 0x45cb24
  42a6ee:	nop
  42a6ef:	nop
  42a6f0:	jmp    QWORD PTR [rip+0x32426]        # 0x45cb1c
  42a6f6:	nop
  42a6f7:	nop
  42a6f8:	jmp    QWORD PTR [rip+0x32416]        # 0x45cb14
  42a6fe:	nop
  42a6ff:	nop
  42a700:	jmp    QWORD PTR [rip+0x32406]        # 0x45cb0c
  42a706:	nop
  42a707:	nop
  42a708:	jmp    QWORD PTR [rip+0x323f6]        # 0x45cb04
  42a70e:	nop
  42a70f:	nop
  42a710:	jmp    QWORD PTR [rip+0x323e6]        # 0x45cafc
  42a716:	nop
  42a717:	nop
  42a718:	jmp    QWORD PTR [rip+0x323d6]        # 0x45caf4
  42a71e:	nop
  42a71f:	nop
  42a720:	jmp    QWORD PTR [rip+0x323c6]        # 0x45caec
  42a726:	nop
  42a727:	nop
  42a728:	jmp    QWORD PTR [rip+0x323b6]        # 0x45cae4
  42a72e:	nop
  42a72f:	nop
  42a730:	jmp    QWORD PTR [rip+0x323a6]        # 0x45cadc
  42a736:	nop
  42a737:	nop
  42a738:	jmp    QWORD PTR [rip+0x32396]        # 0x45cad4
  42a73e:	nop
  42a73f:	nop
  42a740:	jmp    QWORD PTR [rip+0x32386]        # 0x45cacc
  42a746:	nop
  42a747:	nop
  42a748:	jmp    QWORD PTR [rip+0x32376]        # 0x45cac4
  42a74e:	nop
  42a74f:	nop
  42a750:	jmp    QWORD PTR [rip+0x32366]        # 0x45cabc
  42a756:	nop
  42a757:	nop
  42a758:	jmp    QWORD PTR [rip+0x32356]        # 0x45cab4
  42a75e:	nop
  42a75f:	nop
  42a760:	jmp    QWORD PTR [rip+0x32346]        # 0x45caac
  42a766:	nop
  42a767:	nop
  42a768:	jmp    QWORD PTR [rip+0x32336]        # 0x45caa4
  42a76e:	nop
  42a76f:	nop
  42a770:	jmp    QWORD PTR [rip+0x32326]        # 0x45ca9c
  42a776:	nop
  42a777:	nop
  42a778:	jmp    QWORD PTR [rip+0x32316]        # 0x45ca94
  42a77e:	nop
  42a77f:	nop
  42a780:	jmp    QWORD PTR [rip+0x32306]        # 0x45ca8c
  42a786:	nop
  42a787:	nop
  42a788:	jmp    QWORD PTR [rip+0x322f6]        # 0x45ca84
  42a78e:	nop
  42a78f:	nop
  42a790:	jmp    QWORD PTR [rip+0x322e6]        # 0x45ca7c
  42a796:	nop
  42a797:	nop
  42a798:	jmp    QWORD PTR [rip+0x322d6]        # 0x45ca74
  42a79e:	nop
  42a79f:	nop
  42a7a0:	jmp    QWORD PTR [rip+0x322c6]        # 0x45ca6c
  42a7a6:	nop
  42a7a7:	nop
  42a7a8:	jmp    QWORD PTR [rip+0x322b6]        # 0x45ca64
  42a7ae:	nop
  42a7af:	nop
  42a7b0:	jmp    QWORD PTR [rip+0x322a6]        # 0x45ca5c
  42a7b6:	nop
  42a7b7:	nop
  42a7b8:	jmp    QWORD PTR [rip+0x32296]        # 0x45ca54
  42a7be:	nop
  42a7bf:	nop
  42a7c0:	jmp    QWORD PTR [rip+0x32286]        # 0x45ca4c
  42a7c6:	nop
  42a7c7:	nop
  42a7c8:	jmp    QWORD PTR [rip+0x32276]        # 0x45ca44
  42a7ce:	nop
  42a7cf:	nop
  42a7d0:	jmp    QWORD PTR [rip+0x32266]        # 0x45ca3c
  42a7d6:	nop
  42a7d7:	nop
  42a7d8:	jmp    QWORD PTR [rip+0x32256]        # 0x45ca34
  42a7de:	nop
  42a7df:	nop
  42a7e0:	jmp    QWORD PTR [rip+0x32246]        # 0x45ca2c
  42a7e6:	nop
  42a7e7:	nop
  42a7e8:	jmp    QWORD PTR [rip+0x32236]        # 0x45ca24
  42a7ee:	nop
  42a7ef:	nop
  42a7f0:	jmp    QWORD PTR [rip+0x32226]        # 0x45ca1c
  42a7f6:	nop
  42a7f7:	nop
  42a7f8:	jmp    QWORD PTR [rip+0x32216]        # 0x45ca14
  42a7fe:	nop
  42a7ff:	nop
  42a800:	jmp    QWORD PTR [rip+0x32206]        # 0x45ca0c
  42a806:	nop
  42a807:	nop
  42a808:	jmp    QWORD PTR [rip+0x321f6]        # 0x45ca04
  42a80e:	nop
  42a80f:	nop
  42a810:	jmp    QWORD PTR [rip+0x321e6]        # 0x45c9fc
  42a816:	nop
  42a817:	nop
  42a818:	jmp    QWORD PTR [rip+0x321d6]        # 0x45c9f4
  42a81e:	nop
  42a81f:	nop
  42a820:	jmp    QWORD PTR [rip+0x321c6]        # 0x45c9ec
  42a826:	nop
  42a827:	nop
  42a828:	nop    DWORD PTR [rax+rax*1+0x0]
  42a830:	push   rdi
  42a831:	push   rbx
  42a832:	sub    rsp,0x28
  42a836:	xor    eax,eax
  42a838:	mov    rdi,rcx
  42a83b:	mov    rbx,rcx
  42a83e:	or     rcx,0xffffffffffffffff
  42a842:	repnz scas al,BYTE PTR es:[rdi]
  42a844:	not    rcx
  42a847:	lea    rcx,[rcx+rcx*1+0x1]
  42a84c:	call   0x424800
  42a851:	lea    r8,[rax+0x1]
  42a855:	mov    BYTE PTR [rax],0x27
  42a858:	mov    dl,BYTE PTR [rbx]
  42a85a:	test   dl,dl
  42a85c:	je     0x42a891
  42a85e:	cmp    dl,0xa
  42a861:	jne    0x42a872
  42a863:	mov    BYTE PTR [r8],0x5c
  42a867:	mov    BYTE PTR [r8+0x1],0x6e
  42a86c:	add    r8,0x2
  42a870:	jmp    0x42a88c
  42a872:	cmp    dl,0x27
  42a875:	jne    0x42a886
  42a877:	mov    BYTE PTR [r8],0x5c
  42a87b:	mov    BYTE PTR [r8+0x1],0x27
  42a880:	add    r8,0x2
  42a884:	jmp    0x42a88c
  42a886:	mov    BYTE PTR [r8],dl
  42a889:	inc    r8
  42a88c:	inc    rbx
  42a88f:	jmp    0x42a858
  42a891:	mov    BYTE PTR [r8],0x27
  42a895:	mov    BYTE PTR [r8+0x1],0x0
  42a89a:	add    rsp,0x28
  42a89e:	pop    rbx
  42a89f:	pop    rdi
  42a8a0:	ret    
  42a8a1:	push   rsi
  42a8a2:	push   rbx
  42a8a3:	sub    rsp,0x28
  42a8a7:	mov    rsi,rcx
  42a8aa:	call   0x427dc0
  42a8af:	mov    edx,0x53
  42a8b4:	mov    rcx,rsi
  42a8b7:	mov    rbx,rax
  42a8ba:	call   0x427e28
  42a8bf:	test   rax,rax
  42a8c2:	mov    r8,rax
  42a8c5:	je     0x42a8d8
  42a8c7:	lea    rdx,[rip+0x292e]        # 0x42d1fc
  42a8ce:	mov    rcx,rbx
  42a8d1:	call   0x427d70
  42a8d6:	jmp    0x42a8e7
  42a8d8:	lea    rdx,[rip+0x2923]        # 0x42d202
  42a8df:	mov    rcx,rbx
  42a8e2:	call   0x427d70
  42a8e7:	mov    edx,0x4d
  42a8ec:	mov    rcx,rsi
  42a8ef:	call   0x427e28
  42a8f4:	test   rax,rax
  42a8f7:	je     0x42a906
  42a8f9:	mov    rdx,rax
  42a8fc:	mov    rcx,rbx
  42a8ff:	call   0x427dc8
  42a904:	jmp    0x42a915
  42a906:	lea    rdx,[rip+0x28fe]        # 0x42d20b
  42a90d:	mov    rcx,rbx
  42a910:	call   0x427dc8
  42a915:	lea    rdx,[rip+0x28ff]        # 0x42d21b
  42a91c:	mov    rcx,rbx
  42a91f:	call   0x427dc8
  42a924:	mov    rdx,QWORD PTR [rbx]
  42a927:	lea    rcx,[rip+0x28ef]        # 0x42d21d
  42a92e:	call   0x405d90
  42a933:	mov    rcx,rbx
  42a936:	add    rsp,0x28
  42a93a:	pop    rbx
  42a93b:	pop    rsi
  42a93c:	jmp    0x427db8
  42a941:	push   rbp
  42a942:	push   rdi
  42a943:	push   rsi
  42a944:	push   rbx
  42a945:	sub    rsp,0x28
  42a949:	mov    rsi,rcx
  42a94c:	mov    rdi,rdx
  42a94f:	mov    rbp,r8
  42a952:	call   0x427dc0
  42a957:	lea    rdx,[rip+0x28d7]        # 0x42d235
  42a95e:	mov    rbx,rax
  42a961:	mov    rcx,rax
  42a964:	call   0x427dc8
  42a969:	mov    r8,rsi
  42a96c:	mov    rdx,rdi
  42a96f:	mov    rcx,rbx
  42a972:	call   0x41d330
  42a977:	mov    edx,0x28
  42a97c:	mov    rcx,rdi
  42a97f:	call   0x42a428
  42a984:	lea    rdx,[rip+0x2895]        # 0x42d220
  42a98b:	lea    r8,[rip+0x289b]        # 0x42d22d
  42a992:	test   rax,rax
  42a995:	mov    rcx,rbx
  42a998:	cmovne r8,rdx
  42a99c:	lea    rdx,[rip+0x289d]        # 0x42d240
  42a9a3:	call   0x427dd8
  42a9a8:	mov    rdx,QWORD PTR [rbx]
  42a9ab:	mov    rcx,rsi
  42a9ae:	call   0x427ef0
  42a9b3:	mov    rcx,rax
  42a9b6:	mov    rsi,rax
  42a9b9:	call   0x427e20
  42a9be:	cmp    eax,0x2
  42a9c1:	jne    0x42a9f4
  42a9c3:	mov    rcx,rsi
  42a9c6:	call   0x427e70
  42a9cb:	dec    eax
  42a9cd:	jne    0x42a9f4
  42a9cf:	xor    r8d,r8d
  42a9d2:	xor    edx,edx
  42a9d4:	mov    rcx,rsi
  42a9d7:	call   0x427e98
  42a9dc:	mov    r8d,0xa
  42a9e2:	xor    edx,edx
  42a9e4:	mov    rcx,rax
  42a9e7:	call   0x42a3c8
  42a9ec:	mov    dil,0x1
  42a9ef:	mov    DWORD PTR [rbp+0x0],eax
  42a9f2:	jmp    0x42a9fe
  42a9f4:	mov    rcx,rsi
  42a9f7:	xor    edi,edi
  42a9f9:	call   0x42a8a1
  42a9fe:	mov    rcx,rsi
  42aa01:	call   0x427f68
  42aa06:	mov    rcx,rbx
  42aa09:	call   0x427db8
  42aa0e:	mov    al,dil
  42aa11:	add    rsp,0x28
  42aa15:	pop    rbx
  42aa16:	pop    rsi
  42aa17:	pop    rdi
  42aa18:	pop    rbp
  42aa19:	ret    
  42aa1a:	push   rbp
  42aa1b:	push   rdi
  42aa1c:	push   rsi
  42aa1d:	push   rbx
  42aa1e:	sub    rsp,0x28
  42aa22:	mov    rbx,rcx
  42aa25:	mov    edi,edx
  42aa27:	mov    rbp,r8
  42aa2a:	call   0x427dc0
  42aa2f:	lea    rdx,[rip+0x282a]        # 0x42d260
  42aa36:	mov    rsi,rax
  42aa39:	mov    r8d,edi
  42aa3c:	mov    rcx,rax
  42aa3f:	call   0x427d70
  42aa44:	mov    rdx,QWORD PTR [rsi]
  42aa47:	mov    rcx,rbx
  42aa4a:	call   0x427ef0
  42aa4f:	mov    rcx,rax
  42aa52:	mov    rbx,rax
  42aa55:	call   0x427e20
  42aa5a:	cmp    eax,0x2
  42aa5d:	jne    0x42aa90
  42aa5f:	mov    rcx,rbx
  42aa62:	call   0x427e70
  42aa67:	dec    eax
  42aa69:	jne    0x42aa90
  42aa6b:	mov    rcx,rbp
  42aa6e:	mov    dil,0x1
  42aa71:	call   0x427d68
  42aa76:	xor    r8d,r8d
  42aa79:	xor    edx,edx
  42aa7b:	mov    rcx,rbx
  42aa7e:	call   0x427e98
  42aa83:	mov    rcx,rbp
  42aa86:	mov    rdx,rax
  42aa89:	call   0x427dc8
  42aa8e:	jmp    0x42aa9a
  42aa90:	mov    rcx,rbx
  42aa93:	xor    edi,edi
  42aa95:	call   0x42a8a1
  42aa9a:	mov    rcx,rbx
  42aa9d:	call   0x427f68
  42aaa2:	mov    rcx,rsi
  42aaa5:	call   0x427db8
  42aaaa:	mov    al,dil
  42aaad:	add    rsp,0x28
  42aab1:	pop    rbx
  42aab2:	pop    rsi
  42aab3:	pop    rdi
  42aab4:	pop    rbp
  42aab5:	ret    
  42aab6:	push   rbp
  42aab7:	push   rdi
  42aab8:	push   rsi
  42aab9:	mov    rbp,rsp
  42aabc:	sub    rsp,0x150
  42aac3:	mov    rax,QWORD PTR [rip+0x29e16]        # 0x4548e0
  42aaca:	mov    QWORD PTR [rbp+0x20],rcx
  42aace:	cmp    QWORD PTR [rbp+0x20],0x0
  42aad3:	lea    rdi,[rbp-0xa0]
  42aada:	mov    ecx,0x26
  42aadf:	mov    DWORD PTR [rbp+0x28],edx
  42aae2:	lea    rsi,[rax+0x28]
  42aae6:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42aae8:	je     0x42aaf5
  42aaea:	mov    rdx,QWORD PTR [rbp+0x20]
  42aaee:	cmp    QWORD PTR [rdx+0x8],0x0
  42aaf3:	jne    0x42ab08
  42aaf5:	lea    rcx,[rip+0x2794]        # 0x42d290
  42aafc:	xor    esi,esi
  42aafe:	call   0x405d90
  42ab03:	jmp    0x42ace6
  42ab08:	mov    rdi,QWORD PTR [rip+0x32135]        # 0x45cc44
  42ab0f:	mov    WORD PTR [rbp-0x98],0x0
  42ab18:	mov    QWORD PTR [rbp-0xf8],rax
  42ab1f:	mov    QWORD PTR [rbp-0x118],rax
  42ab26:	mov    QWORD PTR [rbp-0x110],rax
  42ab2d:	mov    QWORD PTR [rbp-0x100],rdi
  42ab34:	mov    rdi,QWORD PTR [rip+0x320d1]        # 0x45cc0c
  42ab3b:	mov    QWORD PTR [rbp-0x108],rdi
  42ab42:	xor    ecx,ecx
  42ab44:	mov    rax,QWORD PTR [rbp-0x100]
  42ab4b:	lea    rsi,[rbp-0xe0]
  42ab52:	call   rax
  42ab54:	lea    rcx,[rbp-0xe8]
  42ab5b:	mov    QWORD PTR [rbp-0xe8],rax
  42ab62:	mov    rax,QWORD PTR [rbp-0x108]
  42ab69:	call   rax
  42ab6b:	mov    rcx,rax
  42ab6e:	call   0x42a560
  42ab73:	mov    r9d,DWORD PTR [rbp+0x28]
  42ab77:	lea    r8,[rip+0x273d]        # 0x42d2bb
  42ab7e:	mov    edx,0x32
  42ab83:	mov    rcx,rsi
  42ab86:	mov    QWORD PTR [rsp+0x20],rax
  42ab8b:	call   0x426220
  42ab90:	mov    rax,QWORD PTR [rbp+0x20]
  42ab94:	xor    edx,edx
  42ab96:	mov    QWORD PTR [rbp-0x30],rsi
  42ab9a:	mov    rcx,QWORD PTR [rax]
  42ab9d:	call   0x4062b0
  42aba2:	test   rax,rax
  42aba5:	mov    rdi,rax
  42aba8:	je     0x42ace3
  42abae:	mov    rax,QWORD PTR [rip+0x29c5b]        # 0x454810
  42abb5:	mov    rcx,rdi
  42abb8:	mov    sil,BYTE PTR [rax]
  42abbb:	test   sil,sil
  42abbe:	je     0x42abca
  42abc0:	call   0x427f68
  42abc5:	jmp    0x42ace3
  42abca:	call   0x427e20
  42abcf:	cmp    eax,0x8
  42abd2:	ja     0x42ac67
  42abd8:	lea    rdx,[rip+0x2749]        # 0x42d328
  42abdf:	mov    eax,eax
  42abe1:	movsxd rax,DWORD PTR [rdx+rax*4]
  42abe5:	add    rdx,rax
  42abe8:	jmp    rdx
  42abea:	mov    rax,QWORD PTR [rbp-0x118]
  42abf1:	lea    rdx,[rbp-0xa0]
  42abf8:	mov    rcx,rdi
  42abfb:	mov    r9,QWORD PTR [rax+0x108]
  42ac02:	mov    r8,QWORD PTR [rax+0x10]
  42ac06:	call   0x4141a0
  42ac0b:	jmp    0x42ac7d
  42ac0d:	mov    rcx,rdi
  42ac10:	call   0x427f58
  42ac15:	mov    r9,rax
  42ac18:	mov    rax,QWORD PTR [rbp-0xf8]
  42ac1f:	lea    r8,[rbp-0xe0]
  42ac26:	lea    rdx,[rip+0x26a2]        # 0x42d2cf
  42ac2d:	mov    rcx,QWORD PTR [rax+0x10]
  42ac31:	call   0x426370
  42ac36:	jmp    0x42ac7d
  42ac38:	lea    rcx,[rip+0x2651]        # 0x42d290
  42ac3f:	call   0x405d90
  42ac44:	mov    rcx,rdi
  42ac47:	call   0x427f68
  42ac4c:	jmp    0x42ace6
  42ac51:	lea    rcx,[rip+0x2680]        # 0x42d2d8
  42ac58:	call   0x405d90
  42ac5d:	mov    rcx,rdi
  42ac60:	call   0x427f68
  42ac65:	jmp    0x42ace6
  42ac67:	lea    rcx,[rip+0x2692]        # 0x42d300
  42ac6e:	call   0x405d90
  42ac73:	mov    rcx,rdi
  42ac76:	call   0x427f68
  42ac7b:	jmp    0x42ace6
  42ac7d:	mov    rcx,rdi
  42ac80:	call   0x427f68
  42ac85:	mov    rax,QWORD PTR [rbp-0x110]
  42ac8c:	mov    rcx,QWORD PTR [rax+0x10]
  42ac90:	call   0x42a520
  42ac95:	mov    rcx,QWORD PTR [rip+0x29c64]        # 0x454900
  42ac9c:	mov    rdx,rbp
  42ac9f:	call   0x42a588
  42aca4:	test   eax,eax
  42aca6:	jne    0x42ace3
  42aca8:	mov    rax,QWORD PTR [rip+0x29c41]        # 0x4548f0
  42acaf:	mov    rdi,QWORD PTR [rip+0x29b5a]        # 0x454810
  42acb6:	xor    esi,esi
  42acb8:	mov    BYTE PTR [rax],0x1
  42acbb:	cmp    esi,DWORD PTR [rbp+0x28]
  42acbe:	jge    0x42acd0
  42acc0:	mov    ecx,0xf4240
  42acc5:	call   0x427740
  42acca:	mov    al,BYTE PTR [rdi]
  42accc:	test   al,al
  42acce:	je     0x42acdf
  42acd0:	mov    rax,QWORD PTR [rip+0x29c19]        # 0x4548f0
  42acd7:	mov    BYTE PTR [rax],0x0
  42acda:	jmp    0x42ab42
  42acdf:	inc    esi
  42ace1:	jmp    0x42acbb
  42ace3:	mov    sil,0x1
  42ace6:	mov    al,sil
  42ace9:	add    rsp,0x150
  42acf0:	pop    rsi
  42acf1:	pop    rdi
  42acf2:	pop    rbp
  42acf3:	ret    
  42acf4:	nop
  42acf5:	nop
  42acf6:	nop
  42acf7:	nop
  42acf8:	nop
  42acf9:	nop
  42acfa:	nop
  42acfb:	nop
  42acfc:	nop
  42acfd:	nop
  42acfe:	nop
  42acff:	nop
  42ad00:	push   r15
  42ad02:	push   r14
  42ad04:	push   r13
  42ad06:	push   r12
  42ad08:	push   rbp
  42ad09:	push   rdi
  42ad0a:	push   rsi
  42ad0b:	push   rbx
  42ad0c:	sub    rsp,0xa8
  42ad13:	mov    rbx,rdx
  42ad16:	mov    ebp,ecx
  42ad18:	call   0x4280f0
  42ad1d:	mov    rcx,QWORD PTR [rbx]
  42ad20:	lea    rdx,[rip+0x11d54]        # 0x43ca7b
  42ad27:	call   0x423fb0
  42ad2c:	cmp    ebp,0x1
  42ad2f:	jle    0x42ad91
  42ad31:	mov    rax,QWORD PTR [rbx+0x8]
  42ad35:	lea    rdi,[rip+0x11d48]        # 0x43ca84
  42ad3c:	mov    ecx,0x7
  42ad41:	mov    rsi,rax
  42ad44:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad46:	je     0x42b4a8
  42ad4c:	lea    rdi,[rip+0x11d38]        # 0x43ca8b
  42ad53:	mov    ecx,0x3
  42ad58:	mov    rsi,rax
  42ad5b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad5d:	je     0x42b4a8
  42ad63:	lea    rdi,[rip+0x11d24]        # 0x43ca8e
  42ad6a:	mov    ecx,0xa
  42ad6f:	mov    rsi,rax
  42ad72:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad74:	je     0x42b137
  42ad7a:	lea    rdi,[rip+0x11d17]        # 0x43ca98
  42ad81:	mov    ecx,0x3
  42ad86:	mov    rsi,rax
  42ad89:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad8b:	je     0x42b137
  42ad91:	mov    r13,QWORD PTR [rip+0x31e1c]        # 0x45cbb4
  42ad98:	call   r13
  42ad9b:	lea    rcx,[rax+0x60]
  42ad9f:	xor    r9d,r9d
  42ada2:	xor    edx,edx
  42ada4:	mov    r8d,0x4
  42adaa:	call   0x42a448
  42adaf:	mov    rcx,QWORD PTR [rbx]
  42adb2:	call   0x427280
  42adb7:	mov    QWORD PTR [rip+0x302be],0x0        # 0x45b080
  42adc2:	mov    QWORD PTR [rip+0x3039f],rax        # 0x45b168
  42adc9:	call   0x414650
  42adce:	call   0x427f18
  42add3:	mov    DWORD PTR [rip+0x302af],eax        # 0x45b088
  42add9:	call   r13
  42addc:	add    rax,0x30
  42ade0:	mov    BYTE PTR [rip+0x302b1],0x0        # 0x45b098
  42ade7:	mov    QWORD PTR [rip+0x302ae],0x0        # 0x45b0a0
  42adf2:	mov    QWORD PTR [rip+0x30297],rax        # 0x45b090
  42adf9:	call   r13
  42adfc:	lea    rcx,[rip+0x11cb0]        # 0x43cab3
  42ae03:	mov    edx,0x1
  42ae08:	mov    QWORD PTR [rip+0x30349],rax        # 0x45b158
  42ae0f:	mov    eax,0x1
  42ae14:	mov    WORD PTR [rip+0x30295],dx        # 0x45b0b0
  42ae1b:	mov    BYTE PTR [rip+0x3033e],0x0        # 0x45b160
  42ae22:	mov    DWORD PTR [rip+0x3027c],0x2        # 0x45b0a8
  42ae2c:	mov    WORD PTR [rip+0x3027b],ax        # 0x45b0ae
  42ae33:	mov    BYTE PTR [rip+0x30279],0x1        # 0x45b0b3
  42ae3a:	mov    BYTE PTR [rip+0x30273],0x1        # 0x45b0b4
  42ae41:	mov    BYTE PTR [rip+0x3026d],0x1        # 0x45b0b5
  42ae48:	call   0x42a4d0
  42ae4d:	xor    edx,edx
  42ae4f:	test   rax,rax
  42ae52:	je     0x42ae6a
  42ae54:	lea    rcx,[rip+0x11c58]        # 0x43cab3
  42ae5b:	call   0x42a4d0
  42ae60:	mov    rcx,rax
  42ae63:	call   0x42a558
  42ae68:	mov    edx,eax
  42ae6a:	mov    DWORD PTR [rip+0x3028c],edx        # 0x45b0fc
  42ae70:	call   r13
  42ae73:	mov    rcx,rax
  42ae76:	call   0x42a368
  42ae7b:	mov    ecx,eax
  42ae7d:	call   0x42a380
  42ae82:	test   eax,eax
  42ae84:	mov    edx,0x1
  42ae89:	jne    0x42b4f4
  42ae8f:	mov    BYTE PTR [rip+0x302bb],dl        # 0x45b150
  42ae95:	mov    DWORD PTR [rip+0x302b5],0x0        # 0x45b154
  42ae9f:	call   0x40eae0
  42aea4:	lea    r8,[rip+0xfffffffffffe3105]        # 0x40dfb0
  42aeab:	lea    rdx,[rip+0x11aa1]        # 0x43c953
  42aeb2:	mov    rcx,rax
  42aeb5:	mov    QWORD PTR [rip+0x302d4],rax        # 0x45b190
  42aebc:	call   0x40ed90
  42aec1:	mov    rcx,QWORD PTR [rip+0x302c8]        # 0x45b190
  42aec8:	lea    r8,[rip+0xfffffffffffe30c1]        # 0x40df90
  42aecf:	lea    rdx,[rip+0x11a6f]        # 0x43c945
  42aed6:	call   0x40ed90
  42aedb:	mov    rcx,QWORD PTR [rip+0x302ae]        # 0x45b190
  42aee2:	lea    r8,[rip+0xfffffffffffe3087]        # 0x40df70
  42aee9:	lea    rdx,[rip+0x11a4f]        # 0x43c93f
  42aef0:	call   0x40ed90
  42aef5:	mov    rcx,QWORD PTR [rip+0x30294]        # 0x45b190
  42aefc:	lea    r8,[rip+0xfffffffffffe304d]        # 0x40df50
  42af03:	lea    rdx,[rip+0x11a2a]        # 0x43c934
  42af0a:	call   0x40ed90
  42af0f:	mov    rcx,QWORD PTR [rip+0x3027a]        # 0x45b190
  42af16:	lea    r8,[rip+0xfffffffffffe3013]        # 0x40df30
  42af1d:	lea    rdx,[rip+0x11a05]        # 0x43c929
  42af24:	call   0x40ed90
  42af29:	mov    rcx,QWORD PTR [rip+0x30260]        # 0x45b190
  42af30:	lea    r8,[rip+0xfffffffffffe3099]        # 0x40dfd0
  42af37:	lea    rdx,[rip+0x11b7d]        # 0x43cabb
  42af3e:	call   0x40ed90
  42af43:	mov    rcx,QWORD PTR [rip+0x30246]        # 0x45b190
  42af4a:	lea    r8,[rip+0xfffffffffffe33ff]        # 0x40e350
  42af51:	lea    rdx,[rip+0x11adf]        # 0x43ca37
  42af58:	call   0x40ed90
  42af5d:	mov    rcx,QWORD PTR [rip+0x3022c]        # 0x45b190
  42af64:	lea    r8,[rip+0xfffffffffffe34f5]        # 0x40e460
  42af6b:	lea    rdx,[rip+0x11aef]        # 0x43ca61
  42af72:	call   0x40ed90
  42af77:	mov    rcx,QWORD PTR [rip+0x30212]        # 0x45b190
  42af7e:	lea    r8,[rip+0xfffffffffffe346b]        # 0x40e3f0
  42af85:	lea    rdx,[rip+0x11abc]        # 0x43ca48
  42af8c:	call   0x40ed90
  42af91:	mov    rcx,QWORD PTR [rip+0x301f8]        # 0x45b190
  42af98:	lea    r8,[rip+0xfffffffffffe32f1]        # 0x40e290
  42af9f:	lea    rdx,[rip+0x11a73]        # 0x43ca19
  42afa6:	call   0x40ed90
  42afab:	mov    rcx,QWORD PTR [rip+0x301de]        # 0x45b190
  42afb2:	lea    r8,[rip+0xfffffffffffe3217]        # 0x40e1d0
  42afb9:	lea    rdx,[rip+0x11a23]        # 0x43c9e3
  42afc0:	call   0x40ed90
  42afc5:	mov    rcx,QWORD PTR [rip+0x301c4]        # 0x45b190
  42afcc:	lea    r8,[rip+0xfffffffffffe2e2d]        # 0x40de00
  42afd3:	lea    rdx,[rip+0x11aed]        # 0x43cac7
  42afda:	call   0x40ed90
  42afdf:	mov    rcx,QWORD PTR [rip+0x301aa]        # 0x45b190
  42afe6:	lea    r8,[rip+0xfffffffffffe2e33]        # 0x40de20
  42afed:	lea    rdx,[rip+0x11adb]        # 0x43cacf
  42aff4:	call   0x40ed90
  42aff9:	mov    rcx,QWORD PTR [rip+0x30190]        # 0x45b190
  42b000:	lea    r8,[rip+0xfffffffffffe2e39]        # 0x40de40
  42b007:	lea    rdx,[rip+0x11ac9]        # 0x43cad7
  42b00e:	call   0x40ed90
  42b013:	mov    rcx,QWORD PTR [rip+0x30176]        # 0x45b190
  42b01a:	lea    r8,[rip+0xfffffffffffe2e3f]        # 0x40de60
  42b021:	lea    rdx,[rip+0x118bf]        # 0x43c8e7
  42b028:	call   0x40ed90
  42b02d:	mov    rcx,QWORD PTR [rip+0x3015c]        # 0x45b190
  42b034:	lea    r8,[rip+0x11aa5]        # 0x43cae0
  42b03b:	lea    rdx,[rip+0x11afd]        # 0x43cb3f
  42b042:	call   0x40ef10
  42b047:	mov    rcx,QWORD PTR [rip+0x30142]        # 0x45b190
  42b04e:	lea    rdx,[rip+0x118fe]        # 0x43c953
  42b055:	call   0x40f020
  42b05a:	mov    rcx,QWORD PTR [rip+0x3012f]        # 0x45b190
  42b061:	lea    r8,[rip+0x11869]        # 0x43c8d1
  42b068:	lea    rdx,[rip+0x11878]        # 0x43c8e7
  42b06f:	call   0x40ef10
  42b074:	mov    rcx,QWORD PTR [rip+0x30115]        # 0x45b190
  42b07b:	lea    r8,[rip+0x11ac5]        # 0x43cb47
  42b082:	lea    rdx,[rip+0x11a3e]        # 0x43cac7
  42b089:	call   0x40ef10
  42b08e:	mov    rcx,QWORD PTR [rip+0x300fb]        # 0x45b190
  42b095:	lea    r8,[rip+0x11aab]        # 0x43cb47
  42b09c:	lea    rdx,[rip+0x11a2c]        # 0x43cacf
  42b0a3:	call   0x40ef10
  42b0a8:	mov    rcx,QWORD PTR [rip+0x300e1]        # 0x45b190
  42b0af:	lea    rdx,[rip+0x11a21]        # 0x43cad7
  42b0b6:	lea    r8,[rip+0x11a92]        # 0x43cb4f
  42b0bd:	call   0x40ef10
  42b0c2:	lea    rdx,[rsp+0x60]
  42b0c7:	mov    r12,QWORD PTR [rip+0x297a2]        # 0x454870
  42b0ce:	mov    ecx,0x8
  42b0d3:	xor    eax,eax
  42b0d5:	mov    rdi,rdx
  42b0d8:	rep stos QWORD PTR es:[rdi],rax
  42b0db:	lea    rdi,[rsp+0x5c]
  42b0e0:	mov    r15,r12
  42b0e3:	mov    r14,r12
  42b0e6:	mov    QWORD PTR [rsp+0x30],r12
  42b0eb:	mov    QWORD PTR [rsp+0x38],r12
  42b0f0:	mov    QWORD PTR [rsp+0x40],r12
  42b0f5:	lea    r9,[rip+0xf44]        # 0x42c040
  42b0fc:	lea    r8,[rip+0x11afd]        # 0x43cc00
  42b103:	mov    QWORD PTR [rsp+0x20],rdi
  42b108:	mov    rdx,rbx
  42b10b:	mov    ecx,ebp
  42b10d:	call   0x424b00
  42b112:	cmp    eax,0xffffffff
  42b115:	je     0x42b52d
  42b11b:	sub    eax,0x30
  42b11e:	cmp    eax,0x4a
  42b121:	ja     0x42b4cd
  42b127:	lea    rdx,[rip+0x11c3a]        # 0x43cd68
  42b12e:	movsxd rax,DWORD PTR [rdx+rax*4]
  42b132:	add    rdx,rax
  42b135:	jmp    rdx
  42b137:	lea    rcx,[rip+0x1195d]        # 0x43ca9b
  42b13e:	call   0x42a468
  42b143:	xor    ecx,ecx
  42b145:	call   0x42a540
  42b14a:	mov    BYTE PTR [rip+0x2ff7f],0x1        # 0x45b0d0
  42b151:	jmp    0x42b0f5
  42b153:	mov    WORD PTR [rip+0x2ff50],0x1        # 0x45b0ac
  42b15c:	jmp    0x42b0f5
  42b15e:	mov    DWORD PTR [rip+0x2ffec],0x1        # 0x45b154
  42b168:	jmp    0x42b0f5
  42b16a:	mov    rcx,QWORD PTR [r12]
  42b16e:	call   0x424900
  42b173:	mov    edx,0x3d
  42b178:	mov    rcx,rax
  42b17b:	mov    rsi,rax
  42b17e:	call   0x42a428
  42b183:	test   rax,rax
  42b186:	je     0x42b990
  42b18c:	lea    rcx,[rip+0x2feed]        # 0x45b080
  42b193:	mov    BYTE PTR [rax],0x0
  42b196:	lea    r8,[rax+0x1]
  42b19a:	mov    rdx,rsi
  42b19d:	mov    QWORD PTR [rsp+0x48],rcx
  42b1a2:	mov    rcx,QWORD PTR [rip+0x2ffe7]        # 0x45b190
  42b1a9:	call   0x40ef10
  42b1ae:	test   al,al
  42b1b0:	je     0x42bbe2
  42b1b6:	mov    rcx,rsi
  42b1b9:	call   0x42a4e8
  42b1be:	jmp    0x42b0f5
  42b1c3:	mov    BYTE PTR [rip+0x2fee8],0x1        # 0x45b0b2
  42b1ca:	jmp    0x42b0f5
  42b1cf:	mov    rcx,QWORD PTR [rip+0x2ffba]        # 0x45b190
  42b1d6:	lea    rdx,[rip+0x1174c]        # 0x43c929
  42b1dd:	call   0x40f020
  42b1e2:	jmp    0x42b0f5
  42b1e7:	mov    rcx,QWORD PTR [rip+0x2ffa2]        # 0x45b190
  42b1ee:	lea    rdx,[rip+0x1174a]        # 0x43c93f
  42b1f5:	call   0x40f020
  42b1fa:	jmp    0x42b0f5
  42b1ff:	mov    rax,QWORD PTR [rsp+0x40]
  42b204:	mov    rcx,QWORD PTR [rax]
  42b207:	call   0x424900
  42b20c:	mov    QWORD PTR [rsp+0x70],rax
  42b211:	jmp    0x42b0f5
  42b216:	mov    rax,QWORD PTR [rip+0x29653]        # 0x454870
  42b21d:	mov    rcx,QWORD PTR [rax]
  42b220:	call   0x405e50
  42b225:	jmp    0x42b0f5
  42b22a:	mov    BYTE PTR [rsp+0x98],0x1
  42b232:	jmp    0x42b0f5
  42b237:	mov    DWORD PTR [rsp+0x88],0x2
  42b242:	jmp    0x42b0f5
  42b247:	mov    rax,QWORD PTR [rip+0x29622]        # 0x454870
  42b24e:	mov    rcx,QWORD PTR [rax]
  42b251:	call   0x424900
  42b256:	mov    QWORD PTR [rsp+0x68],rax
  42b25b:	jmp    0x42b0f5
  42b260:	mov    rax,QWORD PTR [rip+0x29609]        # 0x454870
  42b267:	mov    DWORD PTR [rsp+0x88],0x4
  42b272:	mov    rcx,QWORD PTR [rax]
  42b275:	call   0x424900
  42b27a:	mov    QWORD PTR [rsp+0x90],rax
  42b282:	jmp    0x42b0f5
  42b287:	mov    rcx,QWORD PTR [rip+0x2ff02]        # 0x45b190
  42b28e:	lea    r8,[rip+0x11796]        # 0x43ca2b
  42b295:	lea    rdx,[rip+0x1179b]        # 0x43ca37
  42b29c:	call   0x40ef10
  42b2a1:	jmp    0x42b0f5
  42b2a6:	mov    rax,QWORD PTR [rip+0x295c3]        # 0x454870
  42b2ad:	mov    rcx,QWORD PTR [rax]
  42b2b0:	call   0x424900
  42b2b5:	mov    QWORD PTR [rsp+0x60],rax
  42b2ba:	jmp    0x42b0f5
  42b2bf:	mov    rsi,QWORD PTR [rip+0x295aa]        # 0x454870
  42b2c6:	mov    rcx,QWORD PTR [rsi]
  42b2c9:	call   0x424900
  42b2ce:	mov    rdx,QWORD PTR [rsi]
  42b2d1:	mov    QWORD PTR [rsp+0x90],rax
  42b2d9:	cmp    BYTE PTR [rdx],0x5c
  42b2dc:	je     0x42b511
  42b2e2:	mov    DWORD PTR [rsp+0x88],0x3
  42b2ed:	jmp    0x42b0f5
  42b2f2:	mov    rcx,QWORD PTR [rip+0x2fe97]        # 0x45b190
  42b2f9:	lea    r8,[rip+0x11733]        # 0x43ca33
  42b300:	lea    rdx,[rip+0x11730]        # 0x43ca37
  42b307:	call   0x40ef10
  42b30c:	jmp    0x42b0f5
  42b311:	mov    BYTE PTR [rsp+0x99],0x1
  42b319:	jmp    0x42b0f5
  42b31e:	mov    DWORD PTR [rip+0x2fe2c],0x2        # 0x45b154
  42b328:	jmp    0x42b0f5
  42b32d:	mov    rcx,QWORD PTR [r15]
  42b330:	call   0x424900
  42b335:	mov    QWORD PTR [rsp+0x78],rax
  42b33a:	jmp    0x42b0f5
  42b33f:	mov    rcx,QWORD PTR [r14]
  42b342:	call   0x424900
  42b347:	mov    QWORD PTR [rip+0x2fda2],rax        # 0x45b0f0
  42b34e:	jmp    0x42b0f5
  42b353:	mov    rcx,QWORD PTR [rip+0x2fe36]        # 0x45b190
  42b35a:	lea    rdx,[rip+0x115d3]        # 0x43c934
  42b361:	call   0x40f020
  42b366:	jmp    0x42b0f5
  42b36b:	mov    rax,QWORD PTR [rsp+0x30]
  42b370:	mov    rcx,QWORD PTR [rax]
  42b373:	call   0x424900
  42b378:	mov    BYTE PTR [rip+0x2fd61],0x0        # 0x45b0e0
  42b37f:	mov    QWORD PTR [rip+0x2fd52],rax        # 0x45b0d8
  42b386:	jmp    0x42b0f5
  42b38b:	mov    rax,QWORD PTR [rsp+0x38]
  42b390:	mov    rcx,QWORD PTR [rax]
  42b393:	call   0x424900
  42b398:	mov    edx,0x3d
  42b39d:	mov    rcx,rax
  42b3a0:	mov    rsi,rax
  42b3a3:	call   0x42a428
  42b3a8:	test   rax,rax
  42b3ab:	je     0x42b974
  42b3b1:	lea    rdx,[rax+0x1]
  42b3b5:	lea    r8,[rip+0x2fcec]        # 0x45b0a8
  42b3bc:	mov    BYTE PTR [rax],0x0
  42b3bf:	mov    r9d,0x1
  42b3c5:	mov    rcx,rsi
  42b3c8:	call   0x402120
  42b3cd:	test   al,al
  42b3cf:	jne    0x42b1b6
  42b3d5:	mov    rbx,QWORD PTR [rip+0x2fd8c]        # 0x45b168
  42b3dc:	call   r13
  42b3df:	lea    rdx,[rip+0x11772]        # 0x43cb58
  42b3e6:	lea    rcx,[rax+0x60]
  42b3ea:	mov    r9,rsi
  42b3ed:	mov    r8,rbx
  42b3f0:	call   0x426370
  42b3f5:	mov    ecx,0x1
  42b3fa:	call   0x42a540
  42b3ff:	mov    rax,QWORD PTR [rip+0x2946a]        # 0x454870
  42b406:	mov    rcx,QWORD PTR [rax]
  42b409:	call   0x424900
  42b40e:	mov    QWORD PTR [rsp+0x80],rax
  42b416:	jmp    0x42b0f5
  42b41b:	mov    DWORD PTR [rip+0x2fc83],0x4        # 0x45b0a8
  42b425:	jmp    0x42b0f5
  42b42a:	mov    rax,QWORD PTR [rip+0x2943f]        # 0x454870
  42b431:	mov    rcx,QWORD PTR [rax]
  42b434:	call   0x424900
  42b439:	mov    BYTE PTR [rip+0x2fc90],0x0        # 0x45b0d0
  42b440:	mov    QWORD PTR [rip+0x2fc81],rax        # 0x45b0c8
  42b447:	jmp    0x42b0f5
  42b44c:	mov    rcx,QWORD PTR [rip+0x2fd3d]        # 0x45b190
  42b453:	lea    rdx,[rip+0x11607]        # 0x43ca61
  42b45a:	call   0x40f020
  42b45f:	jmp    0x42b0f5
  42b464:	mov    DWORD PTR [rip+0x2fc3a],0x1        # 0x45b0a8
  42b46e:	jmp    0x42b0f5
  42b473:	mov    rax,QWORD PTR [rip+0x29416]        # 0x454890
  42b47a:	lea    rdx,[rip+0x11603]        # 0x43ca84
  42b481:	movsxd rax,DWORD PTR [rax]
  42b484:	mov    rbx,QWORD PTR [rbx+rax*8-0x8]
  42b489:	mov    rcx,rbx
  42b48c:	call   0x42a420
  42b491:	test   eax,eax
  42b493:	je     0x42b4a8
  42b495:	lea    rdx,[rip+0x115ef]        # 0x43ca8b
  42b49c:	mov    rcx,rbx
  42b49f:	call   0x42a420
  42b4a4:	test   eax,eax
  42b4a6:	jne    0x42b4cd
  42b4a8:	call   0x407990
  42b4ad:	xor    ecx,ecx
  42b4af:	call   0x42a540
  42b4b4:	mov    BYTE PTR [rsp+0x9a],0x1
  42b4bc:	jmp    0x42b0f5
  42b4c1:	mov    BYTE PTR [rip+0x2fc18],0x1        # 0x45b0e0
  42b4c8:	jmp    0x42b0f5
  42b4cd:	mov    rbx,QWORD PTR [rip+0x2fc94]        # 0x45b168
  42b4d4:	call   r13
  42b4d7:	lea    rdx,[rip+0x116fa]        # 0x43cbd8
  42b4de:	lea    rcx,[rax+0x60]
  42b4e2:	mov    r8,rbx
  42b4e5:	call   0x426370
  42b4ea:	mov    ecx,0x1
  42b4ef:	call   0x42a540
  42b4f4:	call   r13
  42b4f7:	lea    rcx,[rax+0x30]
  42b4fb:	call   0x42a368
  42b500:	mov    ecx,eax
  42b502:	call   0x42a380
  42b507:	test   eax,eax
  42b509:	sete   dl
  42b50c:	jmp    0x42ae8f
  42b511:	add    rax,0x1
  42b515:	mov    DWORD PTR [rsp+0x88],0x1
  42b520:	mov    QWORD PTR [rsp+0x90],rax
  42b528:	jmp    0x42b0f5
  42b52d:	mov    rsi,QWORD PTR [rip+0x2935c]        # 0x454890
  42b534:	mov    edx,ebp
  42b536:	mov    eax,DWORD PTR [rsi]
  42b538:	sub    edx,eax
  42b53a:	test   edx,edx
  42b53c:	jg     0x42b54f
  42b53e:	jmp    0x42b5aa
  42b540:	mov    eax,DWORD PTR [rsi]
  42b542:	mov    edx,ebp
  42b544:	add    eax,0x1
  42b547:	sub    edx,eax
  42b549:	mov    DWORD PTR [rsi],eax
  42b54b:	test   edx,edx
  42b54d:	jle    0x42b5aa
  42b54f:	cmp    QWORD PTR [rsp+0x60],0x0
  42b555:	je     0x42b590
  42b557:	cmp    QWORD PTR [rsp+0x78],0x0
  42b55d:	je     0x42b59d
  42b55f:	cmp    BYTE PTR [rip+0x2fc34],0x0        # 0x45b19a
  42b566:	jne    0x42b540
  42b568:	cdqe   
  42b56a:	mov    rdi,QWORD PTR [rip+0x2fbf7]        # 0x45b168
  42b571:	mov    r12,QWORD PTR [rbx+rax*8]
  42b575:	call   r13
  42b578:	lea    rdx,[rip+0x116b1]        # 0x43cc30
  42b57f:	lea    rcx,[rax+0x60]
  42b583:	mov    r8,rdi
  42b586:	mov    r9,r12
  42b589:	call   0x426370
  42b58e:	jmp    0x42b540
  42b590:	cdqe   
  42b592:	mov    rax,QWORD PTR [rbx+rax*8]
  42b596:	mov    QWORD PTR [rsp+0x60],rax
  42b59b:	jmp    0x42b540
  42b59d:	cdqe   
  42b59f:	mov    rax,QWORD PTR [rbx+rax*8]
  42b5a3:	mov    QWORD PTR [rsp+0x78],rax
  42b5a8:	jmp    0x42b540
  42b5aa:	cmp    DWORD PTR [rsp+0x88],0x0
  42b5b2:	jne    0x42b5f8
  42b5b4:	cmp    BYTE PTR [rip+0x2fb95],0x0        # 0x45b150
  42b5bb:	jne    0x42b942
  42b5c1:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b5c9:	test   al,al
  42b5cb:	mov    BYTE PTR [rsp+0x48],al
  42b5cf:	je     0x42b604
  42b5d1:	mov    rbx,QWORD PTR [rip+0x2fb90]        # 0x45b168
  42b5d8:	call   r13
  42b5db:	lea    rdx,[rip+0x11686]        # 0x43cc68
  42b5e2:	lea    rcx,[rax+0x60]
  42b5e6:	mov    r8,rbx
  42b5e9:	call   0x426370
  42b5ee:	mov    ecx,0x1
  42b5f3:	call   0x42a540
  42b5f8:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b600:	mov    BYTE PTR [rsp+0x48],al
  42b604:	cmp    QWORD PTR [rip+0x2fabc],0x0        # 0x45b0c8
  42b60c:	je     0x42ba80
  42b612:	cmp    QWORD PTR [rip+0x2fabe],0x0        # 0x45b0d8
  42b61a:	je     0x42ba54
  42b620:	mov    r12,QWORD PTR [rsp+0x78]
  42b625:	test   r12,r12
  42b628:	je     0x42ba3e
  42b62e:	lea    rcx,[rip+0x11673]        # 0x43cca8
  42b635:	mov    rdx,r12
  42b638:	call   0x424630
  42b63d:	mov    QWORD PTR [rsp+0x38],rax
  42b642:	xor    edi,edi
  42b644:	cmp    DWORD PTR [rip+0x2fb09],0x2        # 0x45b154
  42b64b:	je     0x42bad2
  42b651:	mov    esi,DWORD PTR [rsp+0x88]
  42b658:	mov    rax,QWORD PTR [rsp+0x70]
  42b65d:	mov    r15,QWORD PTR [rsp+0x68]
  42b662:	mov    QWORD PTR [rsp+0xf8],rbx
  42b66a:	mov    QWORD PTR [rsp+0x40],r13
  42b66f:	mov    DWORD PTR [rsp+0x30],esi
  42b673:	lea    rsi,[rip+0x2fa06]        # 0x45b080
  42b67a:	mov    rbp,rax
  42b67d:	nop    DWORD PTR [rax]
  42b680:	mov    ecx,0x40
  42b685:	call   0x424800
  42b68a:	mov    ecx,0x40
  42b68f:	mov    r13,rax
  42b692:	call   0x424800
  42b697:	mov    rbx,rax
  42b69a:	lea    rax,[rip+0x1161e]        # 0x43ccbf
  42b6a1:	cmp    DWORD PTR [rsp+0x30],0x2
  42b6a6:	mov    QWORD PTR [r13+0x0],rax
  42b6aa:	lea    rax,[rip+0x11613]        # 0x43ccc4
  42b6b1:	mov    QWORD PTR [rbx],r15
  42b6b4:	mov    QWORD PTR [r13+0x8],rax
  42b6b8:	lea    rax,[rip+0x1160a]        # 0x43ccc9
  42b6bf:	mov    QWORD PTR [rbx+0x8],rbp
  42b6c3:	mov    QWORD PTR [r13+0x10],rax
  42b6c7:	lea    rax,[rip+0x11600]        # 0x43ccce
  42b6ce:	mov    QWORD PTR [rbx+0x10],r12
  42b6d2:	mov    QWORD PTR [r13+0x18],rax
  42b6d6:	lea    rax,[rip+0x115fa]        # 0x43ccd7
  42b6dd:	mov    QWORD PTR [rbx+0x18],rdi
  42b6e1:	mov    QWORD PTR [r13+0x20],rax
  42b6e5:	je     0x42b7c9
  42b6eb:	mov    rax,QWORD PTR [rsp+0x60]
  42b6f0:	mov    QWORD PTR [rbx+0x20],rax
  42b6f4:	lea    rax,[rip+0x115e3]        # 0x43ccde
  42b6fb:	xor    r14d,r14d
  42b6fe:	mov    QWORD PTR [r13+0x28],rax
  42b702:	mov    rax,QWORD PTR [rsi+0xe8]
  42b709:	mov    QWORD PTR [rbx+0x28],rax
  42b70d:	lea    rax,[rip+0x115e4]        # 0x43ccf8
  42b714:	mov    QWORD PTR [r13+0x30],rax
  42b718:	cmp    BYTE PTR [rsi+0xd0],0x0
  42b71f:	je     0x42b7aa
  42b725:	mov    r8d,0x1
  42b72b:	mov    rdx,rbx
  42b72e:	mov    QWORD PTR [rbx+0x30],r14
  42b732:	mov    rcx,r13
  42b735:	mov    QWORD PTR [r13+0x38],0x0
  42b73d:	mov    QWORD PTR [rbx+0x38],0x0
  42b745:	call   0x427f50
  42b74a:	mov    rcx,r13
  42b74d:	mov    QWORD PTR [rsi],rax
  42b750:	call   0x42a4e8
  42b755:	mov    rcx,rbx
  42b758:	call   0x42a4e8
  42b75d:	mov    rcx,QWORD PTR [rsi]
  42b760:	call   0x427df8
  42b765:	cmp    eax,0x1
  42b768:	jne    0x42b7e1
  42b76a:	mov    rcx,QWORD PTR [rsi]
  42b76d:	call   0x427f48
  42b772:	test   eax,eax
  42b774:	je     0x42b7e1
  42b776:	test   rdi,rdi
  42b779:	jne    0x42b7e1
  42b77b:	cmp    DWORD PTR [rsi+0xd4],0x1
  42b782:	je     0x42b90b
  42b788:	mov    rcx,QWORD PTR [rsi]
  42b78b:	call   0x427ee8
  42b790:	mov    rcx,QWORD PTR [rsp+0x38]
  42b795:	xor    r8d,r8d
  42b798:	mov    edx,0x64
  42b79d:	call   0x427a10
  42b7a2:	mov    rdi,rax
  42b7a5:	jmp    0x42b680
  42b7aa:	lea    rcx,[rip+0x11557]        # 0x43cd08
  42b7b1:	call   0x42a4d0
  42b7b6:	test   rax,rax
  42b7b9:	lea    rax,[rip+0x112b6]        # 0x43ca76
  42b7c0:	cmove  r14,rax
  42b7c4:	jmp    0x42b725
  42b7c9:	cmp    QWORD PTR [rsp+0x60],0x0
  42b7cf:	jne    0x42b6eb
  42b7d5:	lea    rax,[rip+0x11291]        # 0x43ca6d
  42b7dc:	jmp    0x42b6f0
  42b7e1:	mov    rbx,QWORD PTR [rsp+0xf8]
  42b7e9:	mov    r13,QWORD PTR [rsp+0x40]
  42b7ee:	mov    rcx,rdi
  42b7f1:	call   0x42a4e8
  42b7f6:	mov    rcx,QWORD PTR [rsp+0x38]
  42b7fb:	call   0x42a4e8
  42b800:	mov    rcx,QWORD PTR [rip+0x2f879]        # 0x45b080
  42b807:	call   0x427df8
  42b80c:	sub    eax,0x1
  42b80f:	je     0x42bb9d
  42b815:	call   0x406090
  42b81a:	mov    rcx,QWORD PTR [rip+0x2f85f]        # 0x45b080
  42b821:	lea    rdx,[rip+0xfffffffffffda858]        # 0x406080
  42b828:	xor    r8d,r8d
  42b82b:	call   0x427e00
  42b830:	call   0x401d70
  42b835:	cmp    DWORD PTR [rsp+0x30],0x2
  42b83a:	je     0x42bb68
  42b840:	mov    rsi,QWORD PTR [rsp+0x80]
  42b848:	test   rsi,rsi
  42b84b:	je     0x42b86c
  42b84d:	lea    rdx,[rip+0x114cc]        # 0x43cd20
  42b854:	mov    rcx,rsi
  42b857:	call   0x42a510
  42b85c:	test   rax,rax
  42b85f:	mov    QWORD PTR [rip+0x2f922],rax        # 0x45b188
  42b866:	je     0x42bb0a
  42b86c:	cmp    DWORD PTR [rsp+0x30],0x4
  42b871:	je     0x42b91f
  42b877:	cmp    DWORD PTR [rsp+0x30],0x1
  42b87c:	je     0x42b9e5
  42b882:	cmp    DWORD PTR [rsp+0x30],0x3
  42b887:	je     0x42baac
  42b88d:	cmp    BYTE PTR [rsp+0x99],0x0
  42b895:	je     0x42baec
  42b89b:	mov    ecx,0x1
  42b8a0:	call   0x401ba0
  42b8a5:	cmp    BYTE PTR [rip+0x2f8ee],0x0        # 0x45b19a
  42b8ac:	je     0x42baf9
  42b8b2:	xor    ecx,ecx
  42b8b4:	cmp    BYTE PTR [rsp+0x98],0x0
  42b8bc:	sete   cl
  42b8bf:	call   0x4087c0
  42b8c4:	call   r13
  42b8c7:	mov    rcx,rax
  42b8ca:	call   0x40c0f0
  42b8cf:	mov    ebx,eax
  42b8d1:	mov    rcx,QWORD PTR [rip+0x2f8b0]        # 0x45b188
  42b8d8:	test   rcx,rcx
  42b8db:	je     0x42b8e2
  42b8dd:	call   0x42a538
  42b8e2:	mov    rcx,QWORD PTR [rip+0x2f797]        # 0x45b080
  42b8e9:	call   0x427ee8
  42b8ee:	xor    ecx,ecx
  42b8f0:	call   0x405e50
  42b8f5:	mov    eax,ebx
  42b8f7:	add    rsp,0xa8
  42b8fe:	pop    rbx
  42b8ff:	pop    rsi
  42b900:	pop    rdi
  42b901:	pop    rbp
  42b902:	pop    r12
  42b904:	pop    r13
  42b906:	pop    r14
  42b908:	pop    r15
  42b90a:	ret    
  42b90b:	mov    rbx,QWORD PTR [rsp+0xf8]
  42b913:	mov    r13,QWORD PTR [rsp+0x40]
  42b918:	xor    edi,edi
  42b91a:	jmp    0x42b7ee
  42b91f:	cmp    BYTE PTR [rsp+0x99],0x0
  42b927:	je     0x42b96a
  42b929:	movsx  edx,BYTE PTR [rsp+0x48]
  42b92e:	mov    rcx,QWORD PTR [rsp+0x90]
  42b936:	xor    r8d,r8d
  42b939:	call   0x401ed0
  42b93e:	mov    ebx,eax
  42b940:	jmp    0x42b8d1
  42b942:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b94a:	mov    DWORD PTR [rsp+0x88],0x4
  42b955:	mov    QWORD PTR [rsp+0x90],0x0
  42b961:	mov    BYTE PTR [rsp+0x48],al
  42b965:	jmp    0x42b604
  42b96a:	mov    rcx,QWORD PTR [rbx]
  42b96d:	call   0x40e0b0
  42b972:	jmp    0x42b929
  42b974:	lea    r8,[rip+0x2f72d]        # 0x45b0a8
  42b97b:	mov    r9d,0x1
  42b981:	xor    edx,edx
  42b983:	mov    rcx,rsi
  42b986:	call   0x402120
  42b98b:	jmp    0x42b3cd
  42b990:	mov    rcx,QWORD PTR [rip+0x2f7f9]        # 0x45b190
  42b997:	lea    rax,[rip+0x2f6e2]        # 0x45b080
  42b99e:	mov    rdx,rsi
  42b9a1:	mov    QWORD PTR [rsp+0x48],rax
  42b9a6:	call   0x40ee60
  42b9ab:	test   al,al
  42b9ad:	jne    0x42b1b6
  42b9b3:	mov    rdi,rsi
  42b9b6:	mov    rsi,QWORD PTR [rsp+0x48]
  42b9bb:	mov    rbx,QWORD PTR [rsi+0xe8]
  42b9c2:	call   r13
  42b9c5:	lea    rdx,[rip+0x111bc]        # 0x43cb88
  42b9cc:	lea    rcx,[rax+0x60]
  42b9d0:	mov    r9,rdi
  42b9d3:	mov    r8,rbx
  42b9d6:	call   0x426370
  42b9db:	mov    ecx,0x1
  42b9e0:	call   0x42a540
  42b9e5:	cmp    DWORD PTR [rip+0x2f7b8],0x2        # 0x45b1a4
  42b9ec:	je     0x42bb44
  42b9f2:	call   0x40be10
  42b9f7:	mov    rdx,QWORD PTR [rsp+0x90]
  42b9ff:	mov    rsi,rax
  42ba02:	or     rcx,0xffffffffffffffff
  42ba06:	xor    eax,eax
  42ba08:	xor    ebx,ebx
  42ba0a:	mov    rdi,rdx
  42ba0d:	repnz scas al,BYTE PTR es:[rdi]
  42ba0f:	not    rcx
  42ba12:	mov    r8,rcx
  42ba15:	mov    rcx,rsi
  42ba18:	sub    r8d,0x1
  42ba1c:	call   0x40be60
  42ba21:	xor    edx,edx
  42ba23:	mov    rcx,rsi
  42ba26:	call   0x402d60
  42ba2b:	mov    rcx,rsi
  42ba2e:	cmp    eax,0x5
  42ba31:	sete   bl
  42ba34:	call   0x40c0b0
  42ba39:	jmp    0x42b8d1
  42ba3e:	lea    rcx,[rip+0x11258]        # 0x43cc9d
  42ba45:	call   0x424900
  42ba4a:	mov    QWORD PTR [rsp+0x38],rax
  42ba4f:	jmp    0x42b642
  42ba54:	cmp    BYTE PTR [rip+0x2f685],0x0        # 0x45b0e0
  42ba5b:	jne    0x42b620
  42ba61:	lea    rcx,[rip+0x11233]        # 0x43cc9b
  42ba68:	call   0x424900
  42ba6d:	mov    BYTE PTR [rip+0x2f66c],0x0        # 0x45b0e0
  42ba74:	mov    QWORD PTR [rip+0x2f65d],rax        # 0x45b0d8
  42ba7b:	jmp    0x42b620
  42ba80:	cmp    BYTE PTR [rip+0x2f649],0x0        # 0x45b0d0
  42ba87:	jne    0x42b612
  42ba8d:	lea    rcx,[rip+0x11205]        # 0x43cc99
  42ba94:	call   0x424900
  42ba99:	mov    BYTE PTR [rip+0x2f630],0x0        # 0x45b0d0
  42baa0:	mov    QWORD PTR [rip+0x2f621],rax        # 0x45b0c8
  42baa7:	jmp    0x42b612
  42baac:	cmp    DWORD PTR [rip+0x2f6f1],0x2        # 0x45b1a4
  42bab3:	je     0x42bb56
  42bab9:	mov    rcx,QWORD PTR [rsp+0x90]
  42bac1:	xor    ebx,ebx
  42bac3:	call   0x406410
  42bac8:	test   al,al
  42baca:	sete   bl
  42bacd:	jmp    0x42b8d1
  42bad2:	mov    rcx,QWORD PTR [rsp+0x38]
  42bad7:	xor    r8d,r8d
  42bada:	mov    edx,0x64
  42badf:	call   0x427a10
  42bae4:	mov    rdi,rax
  42bae7:	jmp    0x42b651
  42baec:	mov    rcx,QWORD PTR [rbx]
  42baef:	call   0x40e0b0
  42baf4:	jmp    0x42b89b
  42baf9:	lea    rcx,[rip+0x1124e]        # 0x43cd4e
  42bb00:	call   0x4263a0
  42bb05:	jmp    0x42b8b2
  42bb0a:	call   QWORD PTR [rip+0x310dc]        # 0x45cbec
  42bb10:	mov    ecx,DWORD PTR [rax]
  42bb12:	call   0x42a408
  42bb17:	mov    rdi,QWORD PTR [rip+0x2f64a]        # 0x45b168
  42bb1e:	mov    r12,rax
  42bb21:	call   r13
  42bb24:	lea    rdx,[rip+0x111fd]        # 0x43cd28
  42bb2b:	lea    rcx,[rax+0x60]
  42bb2f:	mov    QWORD PTR [rsp+0x20],r12
  42bb34:	mov    r9,rsi
  42bb37:	mov    r8,rdi
  42bb3a:	call   0x426370
  42bb3f:	jmp    0x42b86c
  42bb44:	mov    rcx,QWORD PTR [rsp+0x90]
  42bb4c:	call   0x42a468
  42bb51:	jmp    0x42b9f2
  42bb56:	mov    rcx,QWORD PTR [rsp+0x90]
  42bb5e:	call   0x42a468
  42bb63:	jmp    0x42bab9
  42bb68:	cmp    BYTE PTR [rsp+0x99],0x0
  42bb70:	jne    0x42bb7a
  42bb72:	mov    rcx,QWORD PTR [rbx]
  42bb75:	call   0x40e0b0
  42bb7a:	xor    edx,edx
  42bb7c:	xor    ecx,ecx
  42bb7e:	call   0x418220
  42bb83:	mov    rcx,QWORD PTR [rip+0x2f4f6]        # 0x45b080
  42bb8a:	mov    ebx,eax
  42bb8c:	call   0x427ee8
  42bb91:	xor    ecx,ecx
  42bb93:	test   bl,bl
  42bb95:	sete   cl
  42bb98:	call   0x42a540
  42bb9d:	mov    rcx,QWORD PTR [rip+0x2f4dc]        # 0x45b080
  42bba4:	call   0x427f10
  42bba9:	mov    rbx,QWORD PTR [rip+0x2f5b8]        # 0x45b168
  42bbb0:	mov    rsi,rax
  42bbb3:	call   r13
  42bbb6:	lea    rdx,[rip+0x1115c]        # 0x43cd19
  42bbbd:	lea    rcx,[rax+0x60]
  42bbc1:	mov    r9,rsi
  42bbc4:	mov    r8,rbx
  42bbc7:	call   0x426370
  42bbcc:	mov    rcx,QWORD PTR [rip+0x2f4ad]        # 0x45b080
  42bbd3:	call   0x427ee8
  42bbd8:	mov    ecx,0x2
  42bbdd:	call   0x42a540
  42bbe2:	mov    rdi,rsi
  42bbe5:	mov    rsi,QWORD PTR [rsp+0x48]
  42bbea:	mov    rbx,QWORD PTR [rsi+0xe8]
  42bbf1:	call   r13
  42bbf4:	lea    rdx,[rip+0x10fb5]        # 0x43cbb0
  42bbfb:	lea    rcx,[rax+0x60]
  42bbff:	mov    r9,rdi
  42bc02:	mov    r8,rbx
  42bc05:	call   0x426370
  42bc0a:	mov    ecx,0x1
  42bc0f:	call   0x42a540
  42bc14:	nop
  42bc15:	nop
  42bc16:	nop
  42bc17:	nop
  42bc18:	nop
  42bc19:	nop
  42bc1a:	nop
  42bc1b:	nop
  42bc1c:	nop
  42bc1d:	nop
  42bc1e:	nop
  42bc1f:	nop
  42bc20:	push   r15
  42bc22:	push   r14
  42bc24:	push   r13
  42bc26:	push   r12
  42bc28:	push   rbp
  42bc29:	push   rdi
  42bc2a:	push   rsi
  42bc2b:	push   rbx
  42bc2c:	sub    rsp,0x48
  42bc30:	mov    rax,QWORD PTR [rsp+0xb0]
  42bc38:	mov    rdi,QWORD PTR [rsp+0xb8]
  42bc40:	mov    DWORD PTR [rsp+0x30],r8d
  42bc45:	mov    r13d,DWORD PTR [rsp+0x30]
  42bc4a:	mov    ebp,ecx
  42bc4c:	mov    rsi,rdx
  42bc4f:	mov    DWORD PTR [rsp+0x34],r9d
  42bc54:	mov    QWORD PTR [rsp+0x38],rax
  42bc59:	cmp    r13w,0x1
  42bc5e:	jne    0x42bc94
  42bc60:	mov    rdx,QWORD PTR [rsp+0x38]
  42bc65:	mov    eax,r9d
  42bc68:	shl    rax,0x5
  42bc6c:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  42bc71:	mov    rdx,rdi
  42bc74:	call   0x42a4f8
  42bc79:	mov    r10d,DWORD PTR [rsp+0x34]
  42bc7e:	mov    rax,QWORD PTR [rsp+0x38]
  42bc83:	mov    r12d,ebp
  42bc86:	xor    ebx,ebx
  42bc88:	dec    ebp
  42bc8a:	shl    r10,0x5
  42bc8e:	lea    r15,[rax+r10*1]
  42bc92:	jmp    0x42bcc9
  42bc94:	cmp    WORD PTR [rsp+0x30],0x2
  42bc9a:	jne    0x42bc79
  42bc9c:	mov    eax,DWORD PTR [rsp+0x34]
  42bca0:	lea    rdx,[rip+0x1190a]        # 0x43d5b1
  42bca7:	mov    rcx,rdi
  42bcaa:	shl    rax,0x5
  42bcae:	add    rax,QWORD PTR [rsp+0x38]
  42bcb3:	mov    r9,QWORD PTR [rax+0x8]
  42bcb7:	mov    r8,QWORD PTR [rax+0x10]
  42bcbb:	call   0x426370
  42bcc0:	jmp    0x42bc79
  42bcc2:	cmp    ebp,ebx
  42bcc4:	ja     0x42bce8
  42bcc6:	inc    rbx
  42bcc9:	cmp    rbx,r12
  42bccc:	je     0x42bd1b
  42bcce:	xor    r14d,r14d
  42bcd1:	cmp    DWORD PTR [rsi+rbx*4],r14d
  42bcd5:	jbe    0x42bcc2
  42bcd7:	mov    rcx,QWORD PTR [r15+0x8]
  42bcdb:	mov    rdx,rdi
  42bcde:	inc    r14d
  42bce1:	call   0x42a4f8
  42bce6:	jmp    0x42bcd1
  42bce8:	test   r13w,r13w
  42bcec:	jne    0x42bcfd
  42bcee:	mov    rdx,rdi
  42bcf1:	mov    ecx,0x20
  42bcf6:	call   0x42a500
  42bcfb:	jmp    0x42bcc6
  42bcfd:	mov    r8,QWORD PTR [r15+0x8]
  42bd01:	lea    rdx,[rip+0x118ca]        # 0x43d5d2
  42bd08:	mov    rcx,rdi
  42bd0b:	mov    QWORD PTR [rsp+0x20],r8
  42bd10:	mov    r9,QWORD PTR [r15+0x18]
  42bd14:	call   0x426370
  42bd19:	jmp    0x42bcc6
  42bd1b:	cmp    WORD PTR [rsp+0x30],0x2
  42bd21:	jne    0x42bd49
  42bd23:	mov    eax,DWORD PTR [rsp+0x34]
  42bd27:	lea    rdx,[rip+0x11883]        # 0x43d5b1
  42bd2e:	mov    rcx,rdi
  42bd31:	shl    rax,0x5
  42bd35:	add    rax,QWORD PTR [rsp+0x38]
  42bd3a:	mov    r9,QWORD PTR [rax+0x20]
  42bd3e:	mov    r8,QWORD PTR [rax+0x8]
  42bd42:	call   0x426370
  42bd47:	jmp    0x42bd6b
  42bd49:	cmp    WORD PTR [rsp+0x30],0x1
  42bd4f:	jne    0x42bd6b
  42bd51:	mov    eax,DWORD PTR [rsp+0x34]
  42bd55:	mov    rdx,QWORD PTR [rsp+0x38]
  42bd5a:	shl    rax,0x5
  42bd5e:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  42bd63:	mov    rdx,rdi
  42bd66:	call   0x42a4f8
  42bd6b:	mov    rdx,rdi
  42bd6e:	mov    ecx,0xa
  42bd73:	add    rsp,0x48
  42bd77:	pop    rbx
  42bd78:	pop    rsi
  42bd79:	pop    rdi
  42bd7a:	pop    rbp
  42bd7b:	pop    r12
  42bd7d:	pop    r13
  42bd7f:	pop    r14
  42bd81:	pop    r15
  42bd83:	jmp    0x42a500
  42bd88:	nop
  42bd89:	nop
  42bd8a:	nop
  42bd8b:	nop
  42bd8c:	nop
  42bd8d:	nop
  42bd8e:	nop
  42bd8f:	nop
  42bd90:	(bad)  
  42bd91:	(bad)  
  42bd92:	(bad)  
  42bd93:	(bad)  
  42bd94:	(bad)  
  42bd95:	(bad)  
  42bd96:	(bad)  
  42bd97:	inc    DWORD PTR [rax]
  42bd99:	add    BYTE PTR [rax],al
  42bd9b:	add    BYTE PTR [rax],al
  42bd9d:	add    BYTE PTR [rax],al
  42bd9f:	add    bh,bh
  42bda1:	(bad)  
  42bda2:	(bad)  
  42bda3:	(bad)  
  42bda4:	(bad)  
  42bda5:	(bad)  
  42bda6:	(bad)  
  42bda7:	inc    DWORD PTR [rax]
  42bda9:	add    BYTE PTR [rax],al
  42bdab:	add    BYTE PTR [rax],al
  42bdad:	add    BYTE PTR [rax],al
	...
