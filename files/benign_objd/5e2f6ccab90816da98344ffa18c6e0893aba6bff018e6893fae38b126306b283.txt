
5e2f6ccab90816da98344ffa18c6e0893aba6bff018e6893fae38b126306b283.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x53825]        # 0x454840
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x53826]        # 0x454850
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x53829]        # 0x454860
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x537ec]        # 0x454830
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5367f]        # 0x4546d0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x537c1]        # 0x454820
  40105f:	mov    DWORD PTR [rip+0x58fa3],edx        # 0x45a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42a5f0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x428540
  401081:	mov    rdx,QWORD PTR [rip+0x536e8]        # 0x454770
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x536ce]        # 0x454760
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x53734]        # 0x4547d0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5366b]        # 0x454710
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x428120
  4010af:	mov    rax,QWORD PTR [rip+0x535ca]        # 0x454680
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42a5f0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x272f9]        # 0x428420
  401127:	call   0x428410
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x53695]        # 0x454800
  40116b:	lea    r8,[rip+0x58ea6]        # 0x45a018
  401172:	lea    rdx,[rip+0x58ea7]        # 0x45a020
  401179:	lea    rcx,[rip+0x58ea8]        # 0x45a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x58e78],eax        # 0x45a000
  401188:	lea    rax,[rip+0x58e71]        # 0x45a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x53625]        # 0x4547c0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42a608
  4011a3:	mov    DWORD PTR [rip+0x58e67],eax        # 0x45a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5365a]        # 0x454820
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5354b]        # 0x454740
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x5b93a]        # 0x45cb3c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x53527]        # 0x454750
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x58dba],0x1        # 0x45a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x5345c]        # 0x4546c0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x428730
  40127d:	lea    rcx,[rip+0x27a4c]        # 0x428cd0
  401284:	call   QWORD PTR [rip+0x5b8aa]        # 0x45cb34
  40128a:	mov    rdx,QWORD PTR [rip+0x5349f]        # 0x454730
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x428be0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42a630
  4012a5:	call   0x428520
  4012aa:	mov    rax,QWORD PTR [rip+0x5341f]        # 0x4546d0
  4012b1:	mov    QWORD PTR [rip+0x59c50],rax        # 0x45af08
  4012b8:	mov    rax,QWORD PTR [rip+0x53441]        # 0x454700
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x59be9],rax        # 0x45af00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2acca],eax        # 0x42c000
  401336:	mov    r12d,DWORD PTR [rip+0x58ceb]        # 0x45a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42a4a0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x58cc2]        # 0x45a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42a400
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42a4a0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42a490
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x58c6a],rbp        # 0x45a020
  4013b6:	call   0x4280f0
  4013bb:	mov    rax,QWORD PTR [rip+0x5332e]        # 0x4546f0
  4013c2:	mov    rdx,QWORD PTR [rip+0x58c4f]        # 0x45a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x58c59]        # 0x45a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x58c3c]        # 0x45a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x58c3d]        # 0x45a020
  4013e3:	call   0x42ad00
  4013e8:	mov    ecx,DWORD PTR [rip+0x58c1a]        # 0x45a008
  4013ee:	mov    DWORD PTR [rip+0x58c18],eax        # 0x45a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x58c02]        # 0x45a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42a5d8
  40140b:	mov    eax,DWORD PTR [rip+0x58bfb]        # 0x45a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x53319]        # 0x454750
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42a5e0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x5332d]        # 0x454790
  401463:	mov    rcx,QWORD PTR [rip+0x53316]        # 0x454780
  40146a:	call   0x42a5c0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x5b5eb]        # 0x45ca84
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x53309]        # 0x4547b0
  4014a7:	mov    rcx,QWORD PTR [rip+0x532f2]        # 0x4547a0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42a5c0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42a540
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x53345]        # 0x454820
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x428130
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x53315]        # 0x454820
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x428130
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	cmp    ecx,0x7
  401533:	ja     0x4015d0
  401539:	lea    rax,[rip+0x2bb10]        # 0x42d050
  401540:	mov    ecx,ecx
  401542:	movsxd rdx,DWORD PTR [rax+rcx*4]
  401546:	add    rax,rdx
  401549:	jmp    rax
  40154b:	nop    DWORD PTR [rax+rax*1+0x0]
  401550:	lea    rax,[rip+0x2baa9]        # 0x42d000
  401557:	ret    
  401558:	nop    DWORD PTR [rax+rax*1+0x0]
  401560:	lea    rax,[rip+0x2baa1]        # 0x42d008
  401567:	ret    
  401568:	nop    DWORD PTR [rax+rax*1+0x0]
  401570:	lea    rax,[rip+0x2ba9b]        # 0x42d012
  401577:	ret    
  401578:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	lea    rax,[rip+0x2ba93]        # 0x42d01a
  401587:	ret    
  401588:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	lea    rax,[rip+0x2ba8b]        # 0x42d022
  401597:	ret    
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	lea    rax,[rip+0x2ba80]        # 0x42d027
  4015a7:	ret    
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	lea    rax,[rip+0x2ba76]        # 0x42d02d
  4015b7:	ret    
  4015b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	lea    rax,[rip+0x2ba76]        # 0x42d03d
  4015c7:	ret    
  4015c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015d0:	lea    rax,[rip+0x2ba6f]        # 0x42d046
  4015d7:	ret    
  4015d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e0:	push   rdi
  4015e1:	push   rsi
  4015e2:	sub    rsp,0x38
  4015e6:	mov    r9d,0x1
  4015ec:	mov    edx,0x2
  4015f1:	lea    r8,[rsp+0x2f]
  4015f6:	call   0x40cb10
  4015fb:	test   rax,rax
  4015fe:	je     0x401630
  401600:	cmp    BYTE PTR [rsp+0x2f],0x0
  401605:	jne    0x401626
  401607:	cmp    BYTE PTR [rax],0x0
  40160a:	je     0x401630
  40160c:	lea    rdi,[rip+0x2ba5d]        # 0x42d070
  401613:	mov    rsi,rax
  401616:	mov    ecx,0x2
  40161b:	mov    edx,0x0
  401620:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401622:	cmove  rax,rdx
  401626:	add    rsp,0x38
  40162a:	pop    rsi
  40162b:	pop    rdi
  40162c:	ret    
  40162d:	nop    DWORD PTR [rax]
  401630:	xor    eax,eax
  401632:	jmp    0x401626
  401634:	xchg   ax,ax
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	sub    rsp,0x28
  401644:	mov    rax,QWORD PTR [rip+0x53295]        # 0x4548e0
  40164b:	mov    rcx,QWORD PTR [rax]
  40164e:	call   0x427ea0
  401653:	test   rax,rax
  401656:	je     0x401670
  401658:	lea    rcx,[rip+0x2ba19]        # 0x42d078
  40165f:	add    rsp,0x28
  401663:	jmp    0x4263a0
  401668:	nop    DWORD PTR [rax+rax*1+0x0]
  401670:	add    rsp,0x28
  401674:	ret    
  401675:	nop
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	push   r15
  401682:	push   r14
  401684:	push   r13
  401686:	push   r12
  401688:	push   rbp
  401689:	push   rdi
  40168a:	push   rsi
  40168b:	push   rbx
  40168c:	sub    rsp,0x898
  401693:	test   rcx,rcx
  401696:	mov    rsi,rcx
  401699:	mov    rdi,rdx
  40169c:	mov    ebp,r8d
  40169f:	mov    r13,r9
  4016a2:	mov    r12,rcx
  4016a5:	je     0x401880
  4016ab:	lea    rdx,[rsp+0x30]
  4016b0:	mov    rcx,r12
  4016b3:	call   0x4269b0
  4016b8:	test   eax,eax
  4016ba:	jne    0x401802
  4016c0:	lea    rcx,[rip+0x2bb10]        # 0x42d1d7
  4016c7:	call   0x42a4d0
  4016cc:	test   rax,rax
  4016cf:	mov    r14,rax
  4016d2:	je     0x4019fd
  4016d8:	test   ebp,ebp
  4016da:	jle    0x401830
  4016e0:	lea    rcx,[rip+0x2ba41]        # 0x42d128
  4016e7:	call   0x42a4d0
  4016ec:	test   rax,rax
  4016ef:	mov    r8,rax
  4016f2:	je     0x401aed
  4016f8:	lea    rcx,[rip+0x2bae4]        # 0x42d1e3
  4016ff:	mov    r9d,ebp
  401702:	mov    QWORD PTR [rsp+0x20],r12
  401707:	mov    rdx,r14
  40170a:	call   0x424630
  40170f:	mov    rbp,rax
  401712:	mov    rcx,rbp
  401715:	call   0x424f60
  40171a:	cmp    eax,0xffffffff
  40171d:	mov    ebx,eax
  40171f:	je     0x401954
  401725:	cmp    eax,0x7f
  401728:	je     0x401975
  40172e:	mov    rcx,rbp
  401731:	call   0x42a4e8
  401736:	test   ebx,ebx
  401738:	jne    0x401821
  40173e:	lea    rdx,[rsp+0x60]
  401743:	mov    rcx,r12
  401746:	call   0x4269b0
  40174b:	test   eax,eax
  40174d:	jne    0x401850
  401753:	xor    ebx,ebx
  401755:	mov    rax,QWORD PTR [rsp+0x80]
  40175d:	cmp    QWORD PTR [rsp+0x50],rax
  401762:	je     0x4017e0
  401764:	lea    rdx,[rip+0x2ba69]        # 0x42d1d4
  40176b:	mov    rcx,r12
  40176e:	call   0x42a510
  401773:	test   rax,rax
  401776:	mov    rbp,rax
  401779:	je     0x401850
  40177f:	mov    rcx,rdi
  401782:	lea    rbx,[rsp+0x490]
  40178a:	call   0x427d68
  40178f:	jmp    0x40179c
  401791:	mov    rdx,rbx
  401794:	mov    rcx,rdi
  401797:	call   0x427dc8
  40179c:	mov    r8,rbp
  40179f:	mov    edx,0x400
  4017a4:	mov    rcx,rbx
  4017a7:	call   0x42a518
  4017ac:	test   rax,rax
  4017af:	jne    0x401791
  4017b1:	mov    rcx,rbp
  4017b4:	call   0x42a528
  4017b9:	test   eax,eax
  4017bb:	jne    0x401910
  4017c1:	test   r13,r13
  4017c4:	je     0x401983
  4017ca:	mov    BYTE PTR [r13+0x0],0x1
  4017cf:	xor    ebx,ebx
  4017d1:	mov    rcx,rbp
  4017d4:	call   0x42a538
  4017d9:	nop    DWORD PTR [rax+0x0]
  4017e0:	test   rsi,rsi
  4017e3:	je     0x4018d1
  4017e9:	mov    eax,ebx
  4017eb:	xor    eax,0x1
  4017ee:	add    rsp,0x898
  4017f5:	pop    rbx
  4017f6:	pop    rsi
  4017f7:	pop    rdi
  4017f8:	pop    rbp
  4017f9:	pop    r12
  4017fb:	pop    r13
  4017fd:	pop    r14
  4017ff:	pop    r15
  401801:	ret    
  401802:	call   QWORD PTR [rip+0x5b3e4]        # 0x45cbec
  401808:	mov    ecx,DWORD PTR [rax]
  40180a:	call   0x42a408
  40180f:	lea    rcx,[rip+0x2b8fc]        # 0x42d112
  401816:	mov    r8,rax
  401819:	mov    rdx,r12
  40181c:	call   0x405d90
  401821:	mov    ebx,0x1
  401826:	jmp    0x4017e0
  401828:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	lea    rcx,[rip+0x2b9bb]        # 0x42d1f2
  401837:	mov    r8,r12
  40183a:	mov    rdx,r14
  40183d:	call   0x424630
  401842:	mov    rbp,rax
  401845:	jmp    0x401712
  40184a:	nop    WORD PTR [rax+rax*1+0x0]
  401850:	call   QWORD PTR [rip+0x5b396]        # 0x45cbec
  401856:	mov    ecx,DWORD PTR [rax]
  401858:	mov    ebx,0x1
  40185d:	call   0x42a408
  401862:	lea    rcx,[rip+0x2b8a9]        # 0x42d112
  401869:	mov    r8,rax
  40186c:	mov    rdx,r12
  40186f:	call   0x405d90
  401874:	jmp    0x4017e0
  401879:	nop    DWORD PTR [rax+0x0]
  401880:	lea    rbx,[rsp+0x490]
  401888:	mov    ecx,0x400
  40188d:	mov    rdx,rbx
  401890:	call   QWORD PTR [rip+0x5b206]        # 0x45ca9c
  401896:	test   eax,eax
  401898:	sete   dl
  40189b:	cmp    eax,0x400
  4018a0:	jg     0x401940
  4018a6:	test   dl,dl
  4018a8:	je     0x40198a
  4018ae:	call   QWORD PTR [rip+0x5b338]        # 0x45cbec
  4018b4:	mov    ecx,DWORD PTR [rax]
  4018b6:	call   0x42a408
  4018bb:	mov    rdx,rax
  4018be:	lea    rcx,[rip+0x2b7e3]        # 0x42d0a8
  4018c5:	call   0x405d90
  4018ca:	xor    eax,eax
  4018cc:	jmp    0x4017ee
  4018d1:	mov    rcx,r12
  4018d4:	call   0x42a458
  4018d9:	cmp    eax,0xffffffff
  4018dc:	jne    0x4017e9
  4018e2:	call   QWORD PTR [rip+0x5b304]        # 0x45cbec
  4018e8:	mov    ecx,DWORD PTR [rax]
  4018ea:	call   0x42a408
  4018ef:	lea    rcx,[rip+0x2b81c]        # 0x42d112
  4018f6:	mov    r8,rax
  4018f9:	mov    rdx,r12
  4018fc:	call   0x405d90
  401901:	xor    eax,eax
  401903:	jmp    0x4017ee
  401908:	nop    DWORD PTR [rax+rax*1+0x0]
  401910:	call   QWORD PTR [rip+0x5b2d6]        # 0x45cbec
  401916:	mov    ecx,DWORD PTR [rax]
  401918:	mov    ebx,0x1
  40191d:	call   0x42a408
  401922:	lea    rcx,[rip+0x2b7e9]        # 0x42d112
  401929:	mov    r8,rax
  40192c:	mov    rdx,r12
  40192f:	call   0x405d90
  401934:	jmp    0x4017d1
  401939:	nop    DWORD PTR [rax+0x0]
  401940:	test   dl,dl
  401942:	jne    0x4018ae
  401948:	lea    rdx,[rip+0x2b74a]        # 0x42d099
  40194f:	jmp    0x4018be
  401954:	lea    rcx,[rip+0x2b843]        # 0x42d19e
  40195b:	mov    rdx,r14
  40195e:	call   0x405d90
  401963:	mov    rcx,rbp
  401966:	call   0x42a4e8
  40196b:	test   ebx,ebx
  40196d:	setne  bl
  401970:	jmp    0x4017e0
  401975:	lea    rcx,[rip+0x2b83f]        # 0x42d1bb
  40197c:	call   0x405d90
  401981:	jmp    0x401963
  401983:	xor    ebx,ebx
  401985:	jmp    0x4017d1
  40198a:	call   0x42a378
  40198f:	lea    r14,[rsp+0x90]
  401997:	mov    DWORD PTR [rsp+0x28],eax
  40199b:	lea    rax,[rip+0x2b6f7]        # 0x42d099
  4019a2:	lea    r8,[rip+0x2b729]        # 0x42d0d2
  4019a9:	mov    r9,rbx
  4019ac:	mov    edx,0x400
  4019b1:	mov    rcx,r14
  4019b4:	mov    QWORD PTR [rsp+0x20],rax
  4019b9:	call   0x426220
  4019be:	mov    r8d,0x180
  4019c4:	mov    edx,0x501
  4019c9:	mov    rcx,r14
  4019cc:	call   0x42a388
  4019d1:	cmp    eax,0xffffffff
  4019d4:	jne    0x401a37
  4019d6:	call   QWORD PTR [rip+0x5b210]        # 0x45cbec
  4019dc:	mov    ecx,DWORD PTR [rax]
  4019de:	call   0x42a408
  4019e3:	lea    rcx,[rip+0x2b6fe]        # 0x42d0e8
  4019ea:	mov    r8,rax
  4019ed:	mov    rdx,r14
  4019f0:	call   0x405d90
  4019f5:	mov    r12,r14
  4019f8:	jmp    0x401821
  4019fd:	lea    rcx,[rip+0x2b716]        # 0x42d11a
  401a04:	call   0x42a4d0
  401a09:	test   rax,rax
  401a0c:	mov    r14,rax
  401a0f:	jne    0x4016d8
  401a15:	lea    rcx,[rip+0x2b705]        # 0x42d121
  401a1c:	call   0x42a4d0
  401a21:	mov    r14,rax
  401a24:	test   rax,rax
  401a27:	lea    rax,[rip+0x2b66c]        # 0x42d09a
  401a2e:	cmove  r14,rax
  401a32:	jmp    0x4016d8
  401a37:	lea    rdx,[rip+0x2b6d2]        # 0x42d110
  401a3e:	mov    ecx,eax
  401a40:	call   0x42a360
  401a45:	test   rax,rax
  401a48:	mov    r12,rax
  401a4b:	je     0x4019d6
  401a4d:	mov    r15,QWORD PTR [rdi+0x8]
  401a51:	test   r15d,r15d
  401a54:	mov    ebx,r15d
  401a57:	je     0x401a66
  401a59:	mov    rcx,QWORD PTR [rdi]
  401a5c:	lea    eax,[r15-0x1]
  401a60:	cmp    BYTE PTR [rcx+rax*1],0xa
  401a64:	je     0x401a7a
  401a66:	mov    rcx,rdi
  401a69:	mov    edx,0xa
  401a6e:	lea    ebx,[r15+0x1]
  401a72:	call   0x427dd0
  401a77:	mov    rcx,QWORD PTR [rdi]
  401a7a:	mov    r9,r12
  401a7d:	mov    r8,rbx
  401a80:	mov    edx,0x1
  401a85:	call   0x42a4e0
  401a8a:	cmp    rbx,rax
  401a8d:	je     0x401b03
  401a8f:	mov    rbx,QWORD PTR [rip+0x5b156]        # 0x45cbec
  401a96:	call   rbx
  401a98:	mov    ecx,DWORD PTR [rax]
  401a9a:	call   0x42a408
  401a9f:	lea    rcx,[rip+0x2b66c]        # 0x42d112
  401aa6:	mov    r8,rax
  401aa9:	mov    rdx,r14
  401aac:	call   0x405d90
  401ab1:	mov    rcx,r12
  401ab4:	call   0x42a538
  401ab9:	test   eax,eax
  401abb:	jne    0x401b1d
  401abd:	mov    rcx,r14
  401ac0:	call   0x42a458
  401ac5:	test   eax,eax
  401ac7:	je     0x4019f5
  401acd:	call   rbx
  401acf:	mov    ecx,DWORD PTR [rax]
  401ad1:	call   0x42a408
  401ad6:	lea    rcx,[rip+0x2b635]        # 0x42d112
  401add:	mov    r8,rax
  401ae0:	mov    rdx,r14
  401ae3:	call   0x405d90
  401ae8:	jmp    0x4019f5
  401aed:	lea    rcx,[rip+0x2b654]        # 0x42d148
  401af4:	mov    ebx,0x1
  401af9:	call   0x405d90
  401afe:	jmp    0x4017e0
  401b03:	mov    rcx,r12
  401b06:	mov    r12,r14
  401b09:	call   0x42a538
  401b0e:	test   eax,eax
  401b10:	je     0x4016ab
  401b16:	mov    rbx,QWORD PTR [rip+0x5b0cf]        # 0x45cbec
  401b1d:	call   rbx
  401b1f:	mov    ecx,DWORD PTR [rax]
  401b21:	call   0x42a408
  401b26:	lea    rcx,[rip+0x2b5e5]        # 0x42d112
  401b2d:	mov    r8,rax
  401b30:	mov    rdx,r14
  401b33:	call   0x405d90
  401b38:	jmp    0x401abd
  401b3a:	nop    WORD PTR [rax+rax*1+0x0]
  401b40:	push   rsi
  401b41:	push   rbx
  401b42:	sub    rsp,0x28
  401b46:	test   rcx,rcx
  401b49:	je     0x401b82
  401b4b:	mov    rdx,rcx
  401b4e:	lea    rcx,[rip+0x2b802]        # 0x42d357
  401b55:	call   0x424630
  401b5a:	xor    r8d,r8d
  401b5d:	mov    rbx,rax
  401b60:	mov    edx,0x64
  401b65:	mov    rcx,rax
  401b68:	call   0x427a10
  401b6d:	mov    rcx,rbx
  401b70:	mov    rsi,rax
  401b73:	call   0x42a4e8
  401b78:	mov    rax,rsi
  401b7b:	add    rsp,0x28
  401b7f:	pop    rbx
  401b80:	pop    rsi
  401b81:	ret    
  401b82:	lea    rcx,[rip+0x2b7c3]        # 0x42d34c
  401b89:	xor    r8d,r8d
  401b8c:	mov    edx,0x64
  401b91:	add    rsp,0x28
  401b95:	pop    rbx
  401b96:	pop    rsi
  401b97:	jmp    0x427a10
  401b9c:	nop    DWORD PTR [rax+0x0]
  401ba0:	push   rsi
  401ba1:	push   rbx
  401ba2:	sub    rsp,0x48
  401ba6:	mov    rbx,QWORD PTR [rip+0x52d33]        # 0x4548e0
  401bad:	cmp    BYTE PTR [rbx+0x11a],0x0
  401bb4:	jne    0x401cb4
  401bba:	cmp    BYTE PTR [rbx+0xd0],0x0
  401bc1:	jne    0x401cb4
  401bc7:	cmp    DWORD PTR [rbx+0xe4],0x16121
  401bd1:	je     0x401cc0
  401bd7:	mov    rcx,QWORD PTR [rbx]
  401bda:	lea    rdx,[rip+0x2b78d]        # 0x42d36e
  401be1:	call   0x427e60
  401be6:	test   rax,rax
  401be9:	mov    r9,rax
  401bec:	je     0x401ce3
  401bf2:	mov    rdx,QWORD PTR [rbx+0xe8]
  401bf9:	lea    r8,[rip+0x2b786]        # 0x42d386
  401c00:	lea    rcx,[rip+0x2b785]        # 0x42d38c
  401c07:	call   0x4263a0
  401c0c:	mov    r9d,DWORD PTR [rbx+0xe4]
  401c13:	cmp    r9d,0x16183
  401c1a:	jle    0x401c8b
  401c1c:	mov    ecx,0x51eb851f
  401c21:	mov    eax,r9d
  401c24:	mov    r11d,r9d
  401c27:	imul   ecx
  401c29:	sar    r11d,0x1f
  401c2d:	mov    r10,QWORD PTR [rbx+0xe8]
  401c34:	sar    edx,0x5
  401c37:	mov    r8d,edx
  401c3a:	sub    r8d,r11d
  401c3d:	mov    eax,r8d
  401c40:	imul   ecx
  401c42:	mov    eax,r8d
  401c45:	sar    eax,0x1f
  401c48:	sar    edx,0x5
  401c4b:	mov    ecx,edx
  401c4d:	mov    edx,0x68db8bad
  401c52:	sub    ecx,eax
  401c54:	mov    eax,r9d
  401c57:	mov    r9d,0x4
  401c5d:	imul   edx
  401c5f:	imul   ecx,ecx,0x64
  401c62:	sar    edx,0xc
  401c65:	sub    r8d,ecx
  401c68:	mov    ecx,edx
  401c6a:	mov    rdx,r10
  401c6d:	sub    ecx,r11d
  401c70:	mov    DWORD PTR [rsp+0x28],r8d
  401c75:	mov    r8d,0x9
  401c7b:	mov    DWORD PTR [rsp+0x20],ecx
  401c7f:	lea    rcx,[rip+0x2b72a]        # 0x42d3b0
  401c86:	call   0x4263a0
  401c8b:	call   QWORD PTR [rip+0x5adab]        # 0x45ca3c
  401c91:	mov    ebx,eax
  401c93:	call   QWORD PTR [rip+0x5adab]        # 0x45ca44
  401c99:	cmp    ebx,eax
  401c9b:	je     0x401cae
  401c9d:	lea    rcx,[rip+0x2b77c]        # 0x42d420
  401ca4:	mov    r8d,ebx
  401ca7:	mov    edx,eax
  401ca9:	call   0x4263a0
  401cae:	call   0x401640
  401cb3:	nop
  401cb4:	add    rsp,0x48
  401cb8:	pop    rbx
  401cb9:	pop    rsi
  401cba:	ret    
  401cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	test   cl,cl
  401cc2:	je     0x401c8b
  401cc4:	mov    rdx,QWORD PTR [rbx+0xe8]
  401ccb:	lea    r8,[rip+0x2b6b4]        # 0x42d386
  401cd2:	lea    rcx,[rip+0x2b6c7]        # 0x42d3a0
  401cd9:	call   0x4263a0
  401cde:	jmp    0x401c0c
  401ce3:	mov    r10d,DWORD PTR [rbx+0xe4]
  401cea:	mov    edx,0x68db8bad
  401cef:	mov    r8d,0x51eb851f
  401cf5:	lea    rsi,[rsp+0x30]
  401cfa:	mov    eax,r10d
  401cfd:	mov    r11d,r10d
  401d00:	imul   edx
  401d02:	mov    eax,r10d
  401d05:	sar    r11d,0x1f
  401d09:	sar    edx,0xc
  401d0c:	mov    r9d,edx
  401d0f:	imul   r8d
  401d12:	sub    r9d,r11d
  401d15:	sar    edx,0x5
  401d18:	sub    edx,r11d
  401d1b:	imul   eax,edx,0x64
  401d1e:	mov    ecx,edx
  401d20:	sub    r10d,eax
  401d23:	mov    eax,edx
  401d25:	imul   r8d
  401d28:	mov    eax,ecx
  401d2a:	mov    DWORD PTR [rsp+0x28],r10d
  401d2f:	sar    eax,0x1f
  401d32:	sar    edx,0x5
  401d35:	mov    r8d,edx
  401d38:	mov    edx,0x10
  401d3d:	sub    r8d,eax
  401d40:	imul   eax,r8d,0x64
  401d44:	lea    r8,[rip+0x2b632]        # 0x42d37d
  401d4b:	sub    ecx,eax
  401d4d:	mov    DWORD PTR [rsp+0x20],ecx
  401d51:	mov    rcx,rsi
  401d54:	call   0x426220
  401d59:	mov    r9,rsi
  401d5c:	jmp    0x401bf2
  401d61:	nop    DWORD PTR [rax+rax*1+0x0]
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	push   rbx
  401d71:	sub    rsp,0x20
  401d75:	mov    rbx,QWORD PTR [rip+0x52b64]        # 0x4548e0
  401d7c:	mov    rcx,QWORD PTR [rbx]
  401d7f:	call   0x427f60
  401d84:	mov    rcx,QWORD PTR [rbx]
  401d87:	mov    DWORD PTR [rbx+0x8],eax
  401d8a:	mov    DWORD PTR [rbx+0x78],eax
  401d8d:	call   0x427e18
  401d92:	mov    rcx,QWORD PTR [rbx]
  401d95:	mov    DWORD PTR [rbx+0xe4],eax
  401d9b:	call   0x427f30
  401da0:	mov    rcx,QWORD PTR [rbx+0x110]
  401da7:	lea    rdx,[rip+0x2b733]        # 0x42d4e1
  401dae:	mov    r8,rax
  401db1:	call   0x40ef10
  401db6:	mov    rcx,QWORD PTR [rbx]
  401db9:	call   0x427de8
  401dbe:	mov    rcx,QWORD PTR [rbx+0x110]
  401dc5:	lea    rdx,[rip+0x2b71c]        # 0x42d4e8
  401dcc:	mov    r8,rax
  401dcf:	call   0x40ef10
  401dd4:	mov    rcx,QWORD PTR [rbx]
  401dd7:	call   0x427e90
  401ddc:	mov    rcx,QWORD PTR [rbx+0x110]
  401de3:	lea    rdx,[rip+0x2b703]        # 0x42d4ed
  401dea:	mov    r8,rax
  401ded:	call   0x40ef10
  401df2:	mov    rcx,QWORD PTR [rbx]
  401df5:	call   0x427e50
  401dfa:	mov    rcx,QWORD PTR [rbx+0x110]
  401e01:	lea    rdx,[rip+0x2b6ea]        # 0x42d4f2
  401e08:	mov    r8,rax
  401e0b:	call   0x40ef10
  401e10:	mov    ecx,DWORD PTR [rbx+0x8]
  401e13:	call   0x427d80
  401e18:	mov    rcx,QWORD PTR [rbx+0x110]
  401e1f:	lea    rdx,[rip+0x2b6d1]        # 0x42d4f7
  401e26:	mov    r8,rax
  401e29:	call   0x40ef10
  401e2e:	mov    edx,DWORD PTR [rbx+0x150]
  401e34:	mov    rcx,QWORD PTR [rbx]
  401e37:	add    rsp,0x20
  401e3b:	pop    rbx
  401e3c:	jmp    0x427e08
  401e41:	nop    DWORD PTR [rax+rax*1+0x0]
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	push   rbx
  401e51:	sub    rsp,0x20
  401e55:	mov    rbx,QWORD PTR [rip+0x52a84]        # 0x4548e0
  401e5c:	lea    rdx,[rip+0x2b67e]        # 0x42d4e1
  401e63:	xor    r8d,r8d
  401e66:	mov    rcx,QWORD PTR [rbx+0x110]
  401e6d:	call   0x40ef10
  401e72:	mov    rcx,QWORD PTR [rbx+0x110]
  401e79:	lea    rdx,[rip+0x2b668]        # 0x42d4e8
  401e80:	xor    r8d,r8d
  401e83:	call   0x40ef10
  401e88:	mov    rcx,QWORD PTR [rbx+0x110]
  401e8f:	lea    rdx,[rip+0x2b657]        # 0x42d4ed
  401e96:	xor    r8d,r8d
  401e99:	call   0x40ef10
  401e9e:	mov    rcx,QWORD PTR [rbx+0x110]
  401ea5:	lea    rdx,[rip+0x2b646]        # 0x42d4f2
  401eac:	xor    r8d,r8d
  401eaf:	call   0x40ef10
  401eb4:	mov    rcx,QWORD PTR [rbx+0x110]
  401ebb:	lea    rdx,[rip+0x2b635]        # 0x42d4f7
  401ec2:	xor    r8d,r8d
  401ec5:	add    rsp,0x20
  401ec9:	pop    rbx
  401eca:	jmp    0x40ef10
  401ecf:	nop
  401ed0:	push   r13
  401ed2:	push   r12
  401ed4:	push   rbp
  401ed5:	push   rdi
  401ed6:	push   rsi
  401ed7:	push   rbx
  401ed8:	sub    rsp,0x438
  401edf:	test   rcx,rcx
  401ee2:	mov    rbx,rcx
  401ee5:	mov    ebp,edx
  401ee7:	je     0x4020a4
  401eed:	lea    rdi,[rip+0x2b17c]        # 0x42d070
  401ef4:	mov    ecx,0x2
  401ef9:	mov    rsi,rbx
  401efc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401efe:	jne    0x401fb0
  401f04:	lea    rbx,[rip+0x2b5f5]        # 0x42d500
  401f0b:	mov    r12,QWORD PTR [rip+0x5aca2]        # 0x45cbb4
  401f12:	call   r12
  401f15:	mov    rdi,rax
  401f18:	mov    rsi,QWORD PTR [rip+0x529c1]        # 0x4548e0
  401f1f:	test   bpl,bpl
  401f22:	mov    r13,QWORD PTR [rsi+0xf0]
  401f29:	mov    QWORD PTR [rsi+0xf0],rbx
  401f30:	je     0x402060
  401f36:	lea    rcx,[rip+0x2b5cb]        # 0x42d508
  401f3d:	xor    edx,edx
  401f3f:	call   0x4062b0
  401f44:	test   rax,rax
  401f47:	je     0x402070
  401f4d:	mov    rcx,rax
  401f50:	call   0x427f68
  401f55:	mov    rcx,rdi
  401f58:	call   0x40c0f0
  401f5d:	lea    rcx,[rip+0x2b5aa]        # 0x42d50e
  401f64:	xor    edx,edx
  401f66:	mov    ebx,eax
  401f68:	call   0x4062b0
  401f6d:	test   rax,rax
  401f70:	je     0x402090
  401f76:	mov    rcx,rax
  401f79:	call   0x427f68
  401f7e:	call   r12
  401f81:	cmp    rax,rdi
  401f84:	je     0x401f8e
  401f86:	mov    rcx,rdi
  401f89:	call   0x42a538
  401f8e:	mov    QWORD PTR [rsi+0xf0],r13
  401f95:	mov    eax,ebx
  401f97:	add    rsp,0x438
  401f9e:	pop    rbx
  401f9f:	pop    rsi
  401fa0:	pop    rdi
  401fa1:	pop    rbp
  401fa2:	pop    r12
  401fa4:	pop    r13
  401fa6:	ret    
  401fa7:	nop    WORD PTR [rax+rax*1+0x0]
  401fb0:	mov    rcx,rbx
  401fb3:	mov    DWORD PTR [rsp+0x2c],r8d
  401fb8:	call   0x426d80
  401fbd:	mov    r8d,DWORD PTR [rsp+0x2c]
  401fc2:	test   r8b,r8b
  401fc5:	je     0x402010
  401fc7:	mov    rsi,QWORD PTR [rip+0x52912]        # 0x4548e0
  401fce:	cmp    QWORD PTR [rsi+0xf0],0x0
  401fd6:	je     0x402010
  401fd8:	movzx  ecx,BYTE PTR [rbx]
  401fdb:	cmp    cl,0x5c
  401fde:	je     0x402010
  401fe0:	cmp    cl,0x2f
  401fe3:	je     0x402010
  401fe5:	call   QWORD PTR [rip+0x5ad11]        # 0x45ccfc
  401feb:	test   eax,eax
  401fed:	je     0x401ff9
  401fef:	cmp    BYTE PTR [rbx+0x1],0x3a
  401ff3:	je     0x402100
  401ff9:	mov    rcx,rbx
  401ffc:	call   0x426be0
  402001:	test   al,al
  402003:	je     0x4020c0
  402009:	nop    DWORD PTR [rax+0x0]
  402010:	lea    rdx,[rip+0x2b1bd]        # 0x42d1d4
  402017:	mov    rcx,rbx
  40201a:	call   0x42a510
  40201f:	test   rax,rax
  402022:	mov    rdi,rax
  402025:	mov    r12,QWORD PTR [rip+0x5ab88]        # 0x45cbb4
  40202c:	jne    0x401f18
  402032:	call   QWORD PTR [rip+0x5abb4]        # 0x45cbec
  402038:	mov    ecx,DWORD PTR [rax]
  40203a:	call   0x42a408
  40203f:	lea    rcx,[rip+0x2b0cc]        # 0x42d112
  402046:	mov    r8,rax
  402049:	mov    rdx,rbx
  40204c:	call   0x405d90
  402051:	mov    eax,0x1
  402056:	jmp    0x401f97
  40205b:	nop    DWORD PTR [rax+rax*1+0x0]
  402060:	mov    rcx,rdi
  402063:	call   0x40c0f0
  402068:	mov    ebx,eax
  40206a:	jmp    0x401f7e
  40206f:	nop
  402070:	cmp    BYTE PTR [rsi+0x119],0x0
  402077:	mov    ebx,0x3
  40207c:	jne    0x401f7e
  402082:	jmp    0x401f55
  402087:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	cmp    BYTE PTR [rsi+0x119],0x0
  402097:	mov    eax,0x3
  40209c:	cmovne ebx,eax
  40209f:	jmp    0x401f7e
  4020a4:	mov    r12,QWORD PTR [rip+0x5ab09]        # 0x45cbb4
  4020ab:	call   r12
  4020ae:	mov    rdi,rax
  4020b1:	jmp    0x401f18
  4020b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020c0:	mov    rdx,QWORD PTR [rsi+0xf0]
  4020c7:	lea    rsi,[rsp+0x30]
  4020cc:	mov    r8d,0x400
  4020d2:	mov    rcx,rsi
  4020d5:	call   0x424a90
  4020da:	mov    rcx,rsi
  4020dd:	call   0x427730
  4020e2:	mov    r8,rbx
  4020e5:	mov    rdx,rsi
  4020e8:	mov    rcx,rsi
  4020eb:	call   0x426ce0
  4020f0:	mov    rcx,rsi
  4020f3:	mov    rbx,rsi
  4020f6:	call   0x426d80
  4020fb:	jmp    0x402010
  402100:	movzx  eax,BYTE PTR [rbx+0x2]
  402104:	cmp    al,0x5c
  402106:	je     0x402010
  40210c:	cmp    al,0x2f
  40210e:	jne    0x401ff9
  402114:	jmp    0x402010
  402119:	nop    DWORD PTR [rax+0x0]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x28
  402130:	test   rdx,rdx
  402133:	mov    rbx,rcx
  402136:	mov    rbp,rdx
  402139:	mov    r14,r8
  40213c:	mov    r12d,r9d
  40213f:	je     0x4022a0
  402145:	lea    r13,[rip+0x2b3c9]        # 0x42d515
  40214c:	mov    rcx,rdx
  40214f:	mov    rsi,rbx
  402152:	call   0x42a400
  402157:	mov    rdi,r13
  40215a:	mov    ecx,0x7
  40215f:	mov    r15,rax
  402162:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402164:	jne    0x4021a2
  402166:	lea    rcx,[rip+0x2ae9b]        # 0x42d008
  40216d:	mov    r8,rax
  402170:	mov    rdx,rbp
  402173:	call   0x427870
  402178:	test   eax,eax
  40217a:	jne    0x402464
  402180:	mov    DWORD PTR [r14],0x1
  402187:	test   r12b,r12b
  40218a:	je     0x4021e3
  40218c:	mov    eax,0x1
  402191:	add    rsp,0x28
  402195:	pop    rbx
  402196:	pop    rsi
  402197:	pop    rdi
  402198:	pop    rbp
  402199:	pop    r12
  40219b:	pop    r13
  40219d:	pop    r14
  40219f:	pop    r15
  4021a1:	ret    
  4021a2:	lea    rdi,[rip+0x2b5f5]        # 0x42d79e
  4021a9:	mov    ecx,0xa
  4021ae:	mov    rsi,rbx
  4021b1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021b3:	jne    0x4022d1
  4021b9:	lea    rcx,[rip+0x2b3af]        # 0x42d56f
  4021c0:	mov    r8,r15
  4021c3:	mov    rdx,rbp
  4021c6:	call   0x427870
  4021cb:	test   eax,eax
  4021cd:	jne    0x4023d0
  4021d3:	mov    rax,QWORD PTR [rip+0x526d6]        # 0x4548b0
  4021da:	test   r12b,r12b
  4021dd:	mov    QWORD PTR [r14+0x18],rax
  4021e1:	jne    0x40218c
  4021e3:	lea    rdi,[rip+0x2b3d8]        # 0x42d5c2
  4021ea:	mov    ecx,0x7
  4021ef:	mov    rsi,rbx
  4021f2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021f4:	je     0x4024a0
  4021fa:	lea    rdi,[rip+0x2b458]        # 0x42d659
  402201:	mov    ecx,0x8
  402206:	mov    rsi,rbx
  402209:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40220b:	je     0x402320
  402211:	lea    rdi,[rip+0x2b3b1]        # 0x42d5c9
  402218:	mov    ecx,0x2
  40221d:	mov    rsi,rbx
  402220:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402222:	je     0x402400
  402228:	lea    r15,[rip+0x2b39c]        # 0x42d5cb
  40222f:	mov    ecx,0x9
  402234:	mov    rsi,rbx
  402237:	mov    rdi,r15
  40223a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40223c:	je     0x402400
  402242:	lea    rdi,[rip+0x2b38b]        # 0x42d5d4
  402249:	mov    ecx,0x9
  40224e:	mov    rsi,rbx
  402251:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402253:	je     0x402400
  402259:	lea    rdi,[rip+0x2b395]        # 0x42d5f5
  402260:	mov    ecx,0x9
  402265:	mov    rsi,rbx
  402268:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40226a:	jne    0x4025a6
  402270:	mov    rax,QWORD PTR [rip+0x52669]        # 0x4548e0
  402277:	cmp    BYTE PTR [rax+0x50],0x0
  40227b:	jne    0x402657
  402281:	mov    rdx,QWORD PTR [rax+0x48]
  402285:	lea    rcx,[rip+0x2b4b3]        # 0x42d73f
  40228c:	call   0x4263a0
  402291:	mov    eax,0x1
  402296:	jmp    0x402191
  40229b:	nop    DWORD PTR [rax+rax*1+0x0]
  4022a0:	lea    r13,[rip+0x2b26e]        # 0x42d515
  4022a7:	mov    ecx,0x7
  4022ac:	mov    rsi,rbx
  4022af:	mov    rdi,r13
  4022b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022b4:	je     0x402187
  4022ba:	lea    rdi,[rip+0x2b4dd]        # 0x42d79e
  4022c1:	mov    ecx,0xa
  4022c6:	mov    rsi,rbx
  4022c9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022cb:	je     0x402187
  4022d1:	lea    rdi,[rip+0x2b2ea]        # 0x42d5c2
  4022d8:	mov    ecx,0x7
  4022dd:	mov    rsi,rbx
  4022e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4022e2:	jne    0x402350
  4022e4:	test   rbp,rbp
  4022e7:	je     0x402490
  4022ed:	mov    rcx,rbp
  4022f0:	call   0x42a558
  4022f5:	mov    WORD PTR [r14+0x6],ax
  4022fa:	jmp    0x402187
  4022ff:	test   r12b,r12b
  402302:	jne    0x40218c
  402308:	lea    rdx,[rip+0x2b34a]        # 0x42d659
  40230f:	mov    rcx,rbx
  402312:	call   0x42a420
  402317:	test   eax,eax
  402319:	jne    0x40222f
  40231f:	nop
  402320:	mov    rax,QWORD PTR [rip+0x525b9]        # 0x4548e0
  402327:	mov    edx,DWORD PTR [rax+0x80]
  40232d:	test   edx,edx
  40232f:	jne    0x4024c1
  402335:	lea    rcx,[rip+0x2b355]        # 0x42d691
  40233c:	call   0x4263a0
  402341:	mov    eax,0x1
  402346:	jmp    0x402191
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]
  402350:	lea    rdi,[rip+0x2b272]        # 0x42d5c9
  402357:	mov    ecx,0x2
  40235c:	mov    rsi,rbx
  40235f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402361:	je     0x402435
  402367:	lea    r15,[rip+0x2b25d]        # 0x42d5cb
  40236e:	mov    ecx,0x9
  402373:	mov    rsi,rbx
  402376:	mov    rdi,r15
  402379:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40237b:	je     0x402435
  402381:	lea    rdi,[rip+0x2b24c]        # 0x42d5d4
  402388:	mov    ecx,0x9
  40238d:	mov    rsi,rbx
  402390:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402392:	je     0x402435
  402398:	lea    rdi,[rip+0x2b243]        # 0x42d5e2
  40239f:	mov    ecx,0xe
  4023a4:	mov    rsi,rbx
  4023a7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4023a9:	jne    0x402621
  4023af:	test   rbp,rbp
  4023b2:	je     0x402758
  4023b8:	mov    rdx,rbx
  4023bb:	mov    rcx,rbp
  4023be:	call   0x40eb70
  4023c3:	mov    BYTE PTR [r14+0x40],al
  4023c7:	jmp    0x402187
  4023cc:	nop    DWORD PTR [rax+0x0]
  4023d0:	lea    rcx,[rip+0x2b19e]        # 0x42d575
  4023d7:	mov    r8,r15
  4023da:	mov    rdx,rbp
  4023dd:	call   0x427870
  4023e2:	test   eax,eax
  4023e4:	jne    0x402500
  4023ea:	mov    rax,QWORD PTR [rip+0x524cf]        # 0x4548c0
  4023f1:	mov    QWORD PTR [r14+0x18],rax
  4023f5:	jmp    0x402187
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	mov    rax,QWORD PTR [rip+0x524d9]        # 0x4548e0
  402407:	movzx  eax,WORD PTR [rax+0x2c]
  40240b:	cmp    ax,0x1
  40240f:	je     0x402590
  402415:	cmp    ax,0x2
  402419:	je     0x402530
  40241f:	lea    rcx,[rip+0x2b2db]        # 0x42d701
  402426:	call   0x4263a0
  40242b:	mov    eax,0x1
  402430:	jmp    0x402191
  402435:	test   rbp,rbp
  402438:	je     0x402550
  40243e:	lea    rdx,[rip+0x2b198]        # 0x42d5dd
  402445:	mov    rcx,rbp
  402448:	call   0x427790
  40244d:	test   eax,eax
  40244f:	jne    0x4024e0
  402455:	mov    eax,0x2
  40245a:	mov    WORD PTR [r14+0x4],ax
  40245f:	jmp    0x402187
  402464:	lea    rcx,[rip+0x2aba7]        # 0x42d012
  40246b:	mov    r8,r15
  40246e:	mov    rdx,rbp
  402471:	call   0x427870
  402476:	test   eax,eax
  402478:	jne    0x402565
  40247e:	mov    DWORD PTR [r14],0x2
  402485:	jmp    0x402187
  40248a:	nop    WORD PTR [rax+rax*1+0x0]
  402490:	test   r12b,r12b
  402493:	jne    0x40218c
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	mov    rax,QWORD PTR [rip+0x52439]        # 0x4548e0
  4024a7:	lea    rcx,[rip+0x2b1ce]        # 0x42d67c
  4024ae:	movzx  edx,WORD PTR [rax+0x2e]
  4024b2:	call   0x4263a0
  4024b7:	mov    eax,0x1
  4024bc:	jmp    0x402191
  4024c1:	lea    rcx,[rip+0x2b1e1]        # 0x42d6a9
  4024c8:	call   0x4263a0
  4024cd:	mov    eax,0x1
  4024d2:	jmp    0x402191
  4024d7:	nop    WORD PTR [rax+rax*1+0x0]
  4024e0:	mov    rdx,rbx
  4024e3:	mov    rcx,rbp
  4024e6:	call   0x40eb70
  4024eb:	cbw    
  4024ed:	mov    WORD PTR [r14+0x4],ax
  4024f2:	jmp    0x402187
  4024f7:	nop    WORD PTR [rax+rax*1+0x0]
  402500:	lea    rcx,[rip+0x2b078]        # 0x42d57f
  402507:	mov    r8,r15
  40250a:	mov    rdx,rbp
  40250d:	call   0x427870
  402512:	test   eax,eax
  402514:	jne    0x40271f
  40251a:	mov    rax,QWORD PTR [rip+0x523af]        # 0x4548d0
  402521:	mov    QWORD PTR [r14+0x18],rax
  402525:	jmp    0x402187
  40252a:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	lea    rcx,[rip+0x2b1a1]        # 0x42d6d8
  402537:	call   0x4263a0
  40253c:	mov    eax,0x1
  402541:	jmp    0x402191
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	xor    eax,eax
  402552:	cmp    WORD PTR [r14+0x4],0x0
  402558:	sete   al
  40255b:	mov    WORD PTR [r14+0x4],ax
  402560:	jmp    0x402187
  402565:	lea    rcx,[rip+0x2aaae]        # 0x42d01a
  40256c:	mov    r8,r15
  40256f:	mov    rdx,rbp
  402572:	call   0x427870
  402577:	test   eax,eax
  402579:	jne    0x4025fb
  40257f:	mov    DWORD PTR [r14],0x3
  402586:	jmp    0x402187
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]
  402590:	lea    rcx,[rip+0x2b127]        # 0x42d6be
  402597:	call   0x4263a0
  40259c:	mov    eax,0x1
  4025a1:	jmp    0x402191
  4025a6:	lea    rdi,[rip+0x2b051]        # 0x42d5fe
  4025ad:	mov    ecx,0xe
  4025b2:	mov    rsi,rbx
  4025b5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4025b7:	je     0x402657
  4025bd:	lea    rdi,[rip+0x2b08e]        # 0x42d652
  4025c4:	mov    ecx,0x7
  4025c9:	mov    rsi,rbx
  4025cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4025ce:	jne    0x4026ac
  4025d4:	mov    rax,QWORD PTR [rip+0x52305]        # 0x4548e0
  4025db:	cmp    BYTE PTR [rax+0x35],0x0
  4025df:	je     0x4027bd
  4025e5:	lea    rcx,[rip+0x2b16d]        # 0x42d759
  4025ec:	call   0x4263a0
  4025f1:	mov    eax,0x1
  4025f6:	jmp    0x402191
  4025fb:	lea    rcx,[rip+0x2aa20]        # 0x42d022
  402602:	mov    r8,r15
  402605:	mov    rdx,rbp
  402608:	call   0x427870
  40260d:	test   eax,eax
  40260f:	jne    0x402732
  402615:	mov    DWORD PTR [r14],0x4
  40261c:	jmp    0x402187
  402621:	lea    rdi,[rip+0x2afc8]        # 0x42d5f0
  402628:	mov    ecx,0x5
  40262d:	mov    rsi,rbx
  402630:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402632:	jne    0x40266d
  402634:	test   rbp,rbp
  402637:	je     0x4022ff
  40263d:	mov    rcx,QWORD PTR [r14+0x60]
  402641:	call   0x42a4e8
  402646:	mov    rcx,rbp
  402649:	call   0x424900
  40264e:	mov    QWORD PTR [r14+0x60],rax
  402652:	jmp    0x402187
  402657:	lea    rcx,[rip+0x2b0c2]        # 0x42d720
  40265e:	call   0x4263a0
  402663:	mov    eax,0x1
  402668:	jmp    0x402191
  40266d:	lea    rdi,[rip+0x2af81]        # 0x42d5f5
  402674:	mov    ecx,0x9
  402679:	mov    rsi,rbx
  40267c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40267e:	jne    0x402767
  402684:	test   rbp,rbp
  402687:	je     0x4022ff
  40268d:	mov    rcx,QWORD PTR [r14+0x20]
  402691:	call   0x42a4e8
  402696:	mov    rcx,rbp
  402699:	call   0x424900
  40269e:	mov    BYTE PTR [r14+0x28],0x0
  4026a3:	mov    QWORD PTR [r14+0x20],rax
  4026a7:	jmp    0x402187
  4026ac:	mov    ecx,0x7
  4026b1:	mov    rsi,rbx
  4026b4:	mov    rdi,r13
  4026b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026b9:	je     0x402811
  4026bf:	lea    rdi,[rip+0x2b0d8]        # 0x42d79e
  4026c6:	mov    ecx,0xa
  4026cb:	mov    rsi,rbx
  4026ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026d0:	je     0x40292c
  4026d6:	lea    rdi,[rip+0x2af13]        # 0x42d5f0
  4026dd:	mov    ecx,0x5
  4026e2:	mov    rsi,rbx
  4026e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4026e7:	jne    0x4027d3
  4026ed:	mov    rax,QWORD PTR [rip+0x521ec]        # 0x4548e0
  4026f4:	lea    rcx,[rip+0x2b0c0]        # 0x42d7bb
  4026fb:	mov    rdx,QWORD PTR [rax+0x88]
  402702:	lea    rax,[rip+0x2a990]        # 0x42d099
  402709:	test   rdx,rdx
  40270c:	cmove  rdx,rax
  402710:	call   0x4263a0
  402715:	mov    eax,0x1
  40271a:	jmp    0x402191
  40271f:	lea    rcx,[rip+0x2ae62]        # 0x42d588
  402726:	call   0x405d90
  40272b:	xor    eax,eax
  40272d:	jmp    0x402191
  402732:	lea    rcx,[rip+0x2a8ee]        # 0x42d027
  402739:	mov    r8,r15
  40273c:	mov    rdx,rbp
  40273f:	call   0x427870
  402744:	test   eax,eax
  402746:	jne    0x402839
  40274c:	mov    DWORD PTR [r14],0x5
  402753:	jmp    0x402187
  402758:	cmp    BYTE PTR [r14+0x40],0x0
  40275d:	sete   BYTE PTR [r14+0x40]
  402762:	jmp    0x402187
  402767:	lea    rdi,[rip+0x2ae90]        # 0x42d5fe
  40276e:	mov    ecx,0xe
  402773:	mov    rsi,rbx
  402776:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402778:	je     0x4029a1
  40277e:	lea    rdi,[rip+0x2ae87]        # 0x42d60c
  402785:	mov    ecx,0xa
  40278a:	mov    rsi,rbx
  40278d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40278f:	jne    0x40285f
  402795:	test   rbp,rbp
  402798:	je     0x4022ff
  40279e:	mov    rcx,QWORD PTR [r14+0x30]
  4027a2:	call   0x42a4e8
  4027a7:	mov    rcx,rbp
  4027aa:	call   0x424900
  4027af:	mov    BYTE PTR [r14+0x38],0x0
  4027b4:	mov    QWORD PTR [r14+0x30],rax
  4027b8:	jmp    0x402187
  4027bd:	lea    rcx,[rip+0x2afac]        # 0x42d770
  4027c4:	call   0x4263a0
  4027c9:	mov    eax,0x1
  4027ce:	jmp    0x402191
  4027d3:	lea    rdi,[rip+0x2ae08]        # 0x42d5e2
  4027da:	mov    ecx,0xe
  4027df:	mov    rsi,rbx
  4027e2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4027e4:	jne    0x402955
  4027ea:	mov    rax,QWORD PTR [rip+0x520ef]        # 0x4548e0
  4027f1:	cmp    BYTE PTR [rax+0x68],0x0
  4027f5:	je     0x4029d9
  4027fb:	lea    rcx,[rip+0x2afd6]        # 0x42d7d8
  402802:	call   0x4263a0
  402807:	mov    eax,0x1
  40280c:	jmp    0x402191
  402811:	mov    rax,QWORD PTR [rip+0x520c8]        # 0x4548e0
  402818:	mov    ecx,DWORD PTR [rax+0x28]
  40281b:	call   0x401530
  402820:	lea    rcx,[rip+0x2af61]        # 0x42d788
  402827:	mov    rdx,rax
  40282a:	call   0x4263a0
  40282f:	mov    eax,0x1
  402834:	jmp    0x402191
  402839:	lea    rcx,[rip+0x2a7ed]        # 0x42d02d
  402840:	mov    r8,r15
  402843:	mov    rdx,rbp
  402846:	call   0x427870
  40284b:	test   eax,eax
  40284d:	jne    0x402a63
  402853:	mov    DWORD PTR [r14],0x6
  40285a:	jmp    0x402187
  40285f:	lea    rdx,[rip+0x2adb0]        # 0x42d616
  402866:	mov    rcx,rbx
  402869:	call   0x42a420
  40286e:	test   eax,eax
  402870:	je     0x402a48
  402876:	lea    rdx,[rip+0x2ada8]        # 0x42d625
  40287d:	mov    rcx,rbx
  402880:	call   0x42a420
  402885:	test   eax,eax
  402887:	je     0x4029bc
  40288d:	lea    rdx,[rip+0x2ad93]        # 0x42d627
  402894:	mov    rcx,rbx
  402897:	call   0x42a420
  40289c:	test   eax,eax
  40289e:	je     0x4029bc
  4028a4:	lea    rdx,[rip+0x2ad88]        # 0x42d633
  4028ab:	mov    rcx,rbx
  4028ae:	call   0x42a420
  4028b3:	test   eax,eax
  4028b5:	je     0x402c67
  4028bb:	lea    rdx,[rip+0x2ad77]        # 0x42d639
  4028c2:	mov    rcx,rbx
  4028c5:	call   0x42a420
  4028ca:	test   eax,eax
  4028cc:	je     0x402a9f
  4028d2:	lea    rdx,[rip+0x2ad62]        # 0x42d63b
  4028d9:	mov    rcx,rbx
  4028dc:	call   0x42a420
  4028e1:	test   eax,eax
  4028e3:	je     0x402a9f
  4028e9:	lea    rdx,[rip+0x2ad55]        # 0x42d645
  4028f0:	mov    rcx,rbx
  4028f3:	call   0x42a420
  4028f8:	test   eax,eax
  4028fa:	jne    0x402cb5
  402900:	test   rbp,rbp
  402903:	je     0x402c86
  402909:	lea    rdx,[rip+0x2ad3b]        # 0x42d64b
  402910:	mov    rcx,rbp
  402913:	call   0x427790
  402918:	test   eax,eax
  40291a:	jne    0x402c9a
  402920:	mov    WORD PTR [r14+0x8],0x2
  402927:	jmp    0x402187
  40292c:	mov    rcx,QWORD PTR [rip+0x51fad]        # 0x4548e0
  402933:	add    rcx,0x28
  402937:	call   0x414730
  40293c:	mov    rdx,QWORD PTR [rax]
  40293f:	lea    rcx,[rip+0x2ae62]        # 0x42d7a8
  402946:	call   0x4263a0
  40294b:	mov    eax,0x1
  402950:	jmp    0x402191
  402955:	lea    rdx,[rip+0x2ace9]        # 0x42d645
  40295c:	mov    rcx,rbx
  40295f:	call   0x42a420
  402964:	test   eax,eax
  402966:	jne    0x4029ef
  40296c:	mov    rax,QWORD PTR [rip+0x51f6d]        # 0x4548e0
  402973:	movzx  eax,WORD PTR [rax+0x30]
  402977:	cmp    ax,0x1
  40297b:	je     0x402c28
  402981:	cmp    ax,0x2
  402985:	je     0x402a89
  40298b:	lea    rcx,[rip+0x2aecd]        # 0x42d85f
  402992:	call   0x4263a0
  402997:	mov    eax,0x1
  40299c:	jmp    0x402191
  4029a1:	mov    rcx,QWORD PTR [r14+0x20]
  4029a5:	call   0x42a4e8
  4029aa:	mov    QWORD PTR [r14+0x20],0x0
  4029b2:	mov    BYTE PTR [r14+0x28],0x1
  4029b7:	jmp    0x402187
  4029bc:	test   rbp,rbp
  4029bf:	je     0x402ac2
  4029c5:	mov    rdx,rbx
  4029c8:	mov    rcx,rbp
  4029cb:	call   0x40eb70
  4029d0:	mov    BYTE PTR [r14+0xa],al
  4029d4:	jmp    0x402187
  4029d9:	lea    rcx,[rip+0x2ae20]        # 0x42d800
  4029e0:	call   0x4263a0
  4029e5:	mov    eax,0x1
  4029ea:	jmp    0x402191
  4029ef:	lea    rdx,[rip+0x2ac16]        # 0x42d60c
  4029f6:	mov    rcx,rbx
  4029f9:	call   0x42a420
  4029fe:	test   eax,eax
  402a00:	jne    0x402aea
  402a06:	mov    rax,QWORD PTR [rip+0x51ed3]        # 0x4548e0
  402a0d:	cmp    BYTE PTR [rax+0x60],0x0
  402a11:	jne    0x402c3e
  402a17:	mov    rbx,QWORD PTR [rax+0x58]
  402a1b:	lea    rdx,[rip+0x2a7f9]        # 0x42d21b
  402a22:	mov    rcx,rbx
  402a25:	call   0x42a420
  402a2a:	test   eax,eax
  402a2c:	jne    0x402ad1
  402a32:	lea    rcx,[rip+0x2ae5f]        # 0x42d898
  402a39:	call   0x4263a0
  402a3e:	mov    eax,0x1
  402a43:	jmp    0x402191
  402a48:	mov    rcx,QWORD PTR [r14+0x30]
  402a4c:	call   0x42a4e8
  402a51:	mov    QWORD PTR [r14+0x30],0x0
  402a59:	mov    BYTE PTR [r14+0x38],0x1
  402a5e:	jmp    0x402187
  402a63:	lea    rcx,[rip+0x2a5d3]        # 0x42d03d
  402a6a:	mov    r8,r15
  402a6d:	mov    rdx,rbp
  402a70:	call   0x427870
  402a75:	test   eax,eax
  402a77:	jne    0x402c54
  402a7d:	mov    DWORD PTR [r14],0x7
  402a84:	jmp    0x402187
  402a89:	lea    rcx,[rip+0x2adb8]        # 0x42d848
  402a90:	call   0x4263a0
  402a95:	mov    eax,0x1
  402a9a:	jmp    0x402191
  402a9f:	mov    rcx,QWORD PTR [r14+0x48]
  402aa3:	call   0x42a4e8
  402aa8:	test   rbp,rbp
  402aab:	je     0x402ce1
  402ab1:	mov    rcx,rbp
  402ab4:	call   0x424900
  402ab9:	mov    QWORD PTR [r14+0x48],rax
  402abd:	jmp    0x402187
  402ac2:	cmp    BYTE PTR [r14+0xa],0x0
  402ac7:	sete   BYTE PTR [r14+0xa]
  402acc:	jmp    0x402187
  402ad1:	lea    rcx,[rip+0x2ade0]        # 0x42d8b8
  402ad8:	mov    rdx,rbx
  402adb:	call   0x4263a0
  402ae0:	mov    eax,0x1
  402ae5:	jmp    0x402191
  402aea:	lea    rdx,[rip+0x2ab25]        # 0x42d616
  402af1:	mov    rcx,rbx
  402af4:	call   0x42a420
  402af9:	test   eax,eax
  402afb:	je     0x402c3e
  402b01:	lea    rdx,[rip+0x2ab31]        # 0x42d639
  402b08:	mov    rcx,rbx
  402b0b:	call   0x42a420
  402b10:	test   eax,eax
  402b12:	je     0x402b63
  402b14:	lea    rdx,[rip+0x2ab20]        # 0x42d63b
  402b1b:	mov    rcx,rbx
  402b1e:	call   0x42a420
  402b23:	test   eax,eax
  402b25:	je     0x402b63
  402b27:	lea    rdx,[rip+0x2ab05]        # 0x42d633
  402b2e:	mov    rcx,rbx
  402b31:	call   0x42a420
  402b36:	test   eax,eax
  402b38:	jne    0x402b9f
  402b3a:	mov    rax,QWORD PTR [rip+0x51d9f]        # 0x4548e0
  402b41:	mov    rdx,QWORD PTR [rax+0x98]
  402b48:	test   rdx,rdx
  402b4b:	je     0x402b89
  402b4d:	lea    rcx,[rip+0x2adb4]        # 0x42d908
  402b54:	call   0x4263a0
  402b59:	mov    eax,0x1
  402b5e:	jmp    0x402191
  402b63:	mov    rax,QWORD PTR [rip+0x51d76]        # 0x4548e0
  402b6a:	mov    rdx,QWORD PTR [rax+0x70]
  402b6e:	test   rdx,rdx
  402b71:	je     0x402be8
  402b73:	lea    rcx,[rip+0x2ad59]        # 0x42d8d3
  402b7a:	call   0x4263a0
  402b7f:	mov    eax,0x1
  402b84:	jmp    0x402191
  402b89:	lea    rcx,[rip+0x2ad88]        # 0x42d918
  402b90:	call   0x4263a0
  402b95:	mov    eax,0x1
  402b9a:	jmp    0x402191
  402b9f:	lea    rdx,[rip+0x2aa7f]        # 0x42d625
  402ba6:	mov    rcx,rbx
  402ba9:	call   0x42a420
  402bae:	test   eax,eax
  402bb0:	je     0x402bc5
  402bb2:	lea    rdx,[rip+0x2aa6e]        # 0x42d627
  402bb9:	mov    rcx,rbx
  402bbc:	call   0x42a420
  402bc1:	test   eax,eax
  402bc3:	jne    0x402bfe
  402bc5:	mov    rax,QWORD PTR [rip+0x51d14]        # 0x4548e0
  402bcc:	cmp    BYTE PTR [rax+0x32],0x0
  402bd0:	je     0x402c17
  402bd2:	lea    rcx,[rip+0x2ad50]        # 0x42d929
  402bd9:	call   0x4263a0
  402bde:	mov    eax,0x1
  402be3:	jmp    0x402191
  402be8:	lea    rcx,[rip+0x2ad00]        # 0x42d8ef
  402bef:	call   0x4263a0
  402bf4:	mov    eax,0x1
  402bf9:	jmp    0x402191
  402bfe:	lea    rcx,[rip+0x2aa5c]        # 0x42d661
  402c05:	mov    rdx,rbx
  402c08:	call   0x405d90
  402c0d:	mov    eax,0x1
  402c12:	jmp    0x402191
  402c17:	lea    rcx,[rip+0x2ad1f]        # 0x42d93d
  402c1e:	call   0x4263a0
  402c23:	jmp    0x40218c
  402c28:	lea    rcx,[rip+0x2abf9]        # 0x42d828
  402c2f:	call   0x4263a0
  402c34:	mov    eax,0x1
  402c39:	jmp    0x402191
  402c3e:	lea    rcx,[rip+0x2ac33]        # 0x42d878
  402c45:	call   0x4263a0
  402c4a:	mov    eax,0x1
  402c4f:	jmp    0x402191
  402c54:	lea    rcx,[rip+0x2a8c5]        # 0x42d520
  402c5b:	call   0x405d90
  402c60:	xor    eax,eax
  402c62:	jmp    0x402191
  402c67:	mov    rcx,QWORD PTR [r14+0x70]
  402c6b:	call   0x42a4e8
  402c70:	test   rbp,rbp
  402c73:	je     0x402cee
  402c75:	mov    rcx,rbp
  402c78:	call   0x424900
  402c7d:	mov    QWORD PTR [r14+0x70],rax
  402c81:	jmp    0x402187
  402c86:	cmp    WORD PTR [r14+0x8],0x1
  402c8c:	je     0x402ca9
  402c8e:	mov    WORD PTR [r14+0x8],0x1
  402c95:	jmp    0x402187
  402c9a:	mov    rdx,rbx
  402c9d:	mov    rcx,rbp
  402ca0:	call   0x40eb70
  402ca5:	test   al,al
  402ca7:	jne    0x402c8e
  402ca9:	mov    WORD PTR [r14+0x8],0x0
  402cb0:	jmp    0x402187
  402cb5:	lea    rdx,[rip+0x2a996]        # 0x42d652
  402cbc:	mov    rcx,rbx
  402cbf:	call   0x42a420
  402cc4:	test   eax,eax
  402cc6:	jne    0x402d0a
  402cc8:	test   rbp,rbp
  402ccb:	je     0x402cfb
  402ccd:	mov    rdx,rbx
  402cd0:	mov    rcx,rbp
  402cd3:	call   0x40eb70
  402cd8:	mov    BYTE PTR [r14+0xd],al
  402cdc:	jmp    0x402187
  402ce1:	mov    QWORD PTR [r14+0x48],0x0
  402ce9:	jmp    0x402187
  402cee:	mov    QWORD PTR [r14+0x70],0x0
  402cf6:	jmp    0x402187
  402cfb:	cmp    BYTE PTR [r14+0xd],0x0
  402d00:	sete   BYTE PTR [r14+0xd]
  402d05:	jmp    0x402187
  402d0a:	lea    rdx,[rip+0x2a948]        # 0x42d659
  402d11:	mov    rcx,rbx
  402d14:	call   0x42a420
  402d19:	test   eax,eax
  402d1b:	jne    0x402d33
  402d1d:	test   rbp,rbp
  402d20:	je     0x402d49
  402d22:	mov    rcx,rbp
  402d25:	call   0x42a558
  402d2a:	mov    DWORD PTR [r14+0x58],eax
  402d2e:	jmp    0x402187
  402d33:	lea    rcx,[rip+0x2a927]        # 0x42d661
  402d3a:	mov    rdx,rbx
  402d3d:	call   0x405d90
  402d42:	xor    eax,eax
  402d44:	jmp    0x402191
  402d49:	test   r12b,r12b
  402d4c:	jne    0x40218c
  402d52:	jmp    0x402320
  402d57:	nop    WORD PTR [rax+rax*1+0x0]
  402d60:	push   r15
  402d62:	push   r14
  402d64:	push   r13
  402d66:	push   r12
  402d68:	push   rbp
  402d69:	push   rdi
  402d6a:	push   rsi
  402d6b:	push   rbx
  402d6c:	sub    rsp,0xa8
  402d73:	lea    rdi,[rip+0x2abec]        # 0x42d966
  402d7a:	mov    rbx,rcx
  402d7d:	mov    r14,rdx
  402d80:	call   0x40cab0
  402d85:	mov    ecx,0x2
  402d8a:	mov    rsi,rax
  402d8d:	mov    rbp,rax
  402d90:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402d92:	jne    0x402e35
  402d98:	mov    r12,QWORD PTR [rip+0x51b41]        # 0x4548e0
  402d9f:	cmp    DWORD PTR [r12+0x28],0x2
  402da5:	movsx  r9d,BYTE PTR [r12+0x11a]
  402dae:	lea    r8,[r12+0x28]
  402db3:	je     0x403340
  402db9:	lea    rdx,[rip+0x2a252]        # 0x42d012
  402dc0:	lea    rcx,[rip+0x2a74e]        # 0x42d515
  402dc7:	call   0x402120
  402dcc:	mov    edi,eax
  402dce:	test   dil,dil
  402dd1:	je     0x402de8
  402dd3:	jmp    0x4030f2
  402dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	mov    rcx,rax
  402de3:	call   0x42a4e8
  402de8:	xor    r9d,r9d
  402deb:	xor    r8d,r8d
  402dee:	mov    edx,0x4
  402df3:	mov    rcx,rbx
  402df6:	call   0x40cb10
  402dfb:	test   rax,rax
  402dfe:	jne    0x402de0
  402e00:	mov    edi,0x5
  402e05:	mov    rcx,rbx
  402e08:	call   0x40cd90
  402e0d:	mov    rcx,rbp
  402e10:	call   0x42a4e8
  402e15:	mov    rcx,QWORD PTR [r12+0x10]
  402e1a:	call   0x42a520
  402e1f:	mov    eax,edi
  402e21:	add    rsp,0xa8
  402e28:	pop    rbx
  402e29:	pop    rsi
  402e2a:	pop    rdi
  402e2b:	pop    rbp
  402e2c:	pop    r12
  402e2e:	pop    r13
  402e30:	pop    r14
  402e32:	pop    r15
  402e34:	ret    
  402e35:	lea    rdi,[rip+0x2ab2c]        # 0x42d968
  402e3c:	mov    ecx,0x2
  402e41:	mov    rsi,rax
  402e44:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e46:	je     0x4032f1
  402e4c:	lea    rdi,[rip+0x2ab17]        # 0x42d96a
  402e53:	mov    ecx,0x2
  402e58:	mov    rsi,rax
  402e5b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e5d:	je     0x403020
  402e63:	lea    rdi,[rip+0x2ab02]        # 0x42d96c
  402e6a:	mov    ecx,0x8
  402e6f:	mov    rsi,rax
  402e72:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e74:	je     0x403020
  402e7a:	lea    rdi,[rip+0x2ac77]        # 0x42daf8
  402e81:	mov    ecx,0x3
  402e86:	mov    rsi,rax
  402e89:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e8b:	je     0x403510
  402e91:	lea    rdi,[rip+0x2ac95]        # 0x42db2d
  402e98:	mov    ecx,0x9
  402e9d:	mov    rsi,rax
  402ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ea2:	je     0x4033e7
  402ea8:	lea    rdx,[rip+0x2ad75]        # 0x42dc24
  402eaf:	mov    rcx,rax
  402eb2:	call   0x427790
  402eb7:	test   eax,eax
  402eb9:	je     0x4036ee
  402ebf:	lea    rdi,[rip+0x2ad63]        # 0x42dc29
  402ec6:	mov    ecx,0xa
  402ecb:	mov    rsi,rbp
  402ece:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ed0:	je     0x403733
  402ed6:	cmp    BYTE PTR [rbp+0x0],0x64
  402eda:	je     0x403810
  402ee0:	lea    rdi,[rip+0x2ad56]        # 0x42dc3d
  402ee7:	mov    ecx,0x2
  402eec:	mov    rsi,rbp
  402eef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ef1:	je     0x40357f
  402ef7:	lea    rdi,[rip+0x2ad41]        # 0x42dc3f
  402efe:	mov    ecx,0x5
  402f03:	mov    rsi,rbp
  402f06:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402f08:	je     0x40357f
  402f0e:	lea    rdi,[rip+0x2ad64]        # 0x42dc79
  402f15:	mov    ecx,0x3
  402f1a:	mov    rsi,rbp
  402f1d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402f1f:	jne    0x40391e
  402f25:	mov    r12,QWORD PTR [rip+0x519b4]        # 0x4548e0
  402f2c:	mov    r10d,DWORD PTR [r12+0xe4]
  402f34:	cmp    r10d,0x13a0f
  402f3b:	jle    0x403c64
  402f41:	test   r14,r14
  402f44:	je     0x405685
  402f4a:	xor    r8d,r8d
  402f4d:	mov    r9d,0x1
  402f53:	mov    edx,0x4
  402f58:	mov    rcx,rbx
  402f5b:	mov    DWORD PTR [rsp+0x80],0x0
  402f66:	call   0x40cb10
  402f6b:	test   rax,rax
  402f6e:	mov    r15,rax
  402f71:	je     0x40565b
  402f77:	cmp    BYTE PTR [rax],0x0
  402f7a:	je     0x402fe9
  402f7c:	mov    rcx,rax
  402f7f:	call   0x42a400
  402f84:	lea    rsi,[r15+rax*1-0x1]
  402f89:	cmp    r15,rsi
  402f8c:	jae    0x402fb9
  402f8e:	movzx  eax,BYTE PTR [rsi]
  402f91:	mov    rdi,QWORD PTR [rip+0x59d74]        # 0x45cd0c
  402f98:	test   al,al
  402f9a:	jns    0x402fb0
  402f9c:	jmp    0x402fb9
  402f9e:	xchg   ax,ax
  402fa0:	sub    rsi,0x1
  402fa4:	cmp    rsi,r15
  402fa7:	je     0x402fe9
  402fa9:	movzx  eax,BYTE PTR [rsi]
  402fac:	test   al,al
  402fae:	js     0x402fbe
  402fb0:	movsx  ecx,al
  402fb3:	call   rdi
  402fb5:	test   eax,eax
  402fb7:	jne    0x402fa0
  402fb9:	cmp    r15,rsi
  402fbc:	je     0x402fe9
  402fbe:	movzx  eax,BYTE PTR [rsi]
  402fc1:	sub    eax,0x30
  402fc4:	cmp    al,0x9
  402fc6:	ja     0x402fe9
  402fc8:	cmp    r15,rsi
  402fcb:	jb     0x402fe0
  402fcd:	jmp    0x403b10
  402fd2:	movzx  eax,BYTE PTR [rsi]
  402fd5:	sub    eax,0x30
  402fd8:	cmp    al,0x9
  402fda:	ja     0x403b10
  402fe0:	sub    rsi,0x1
  402fe4:	cmp    rsi,r15
  402fe7:	jne    0x402fd2
  402fe9:	mov    r13d,0xffffffff
  402fef:	lea    rax,[rsp+0x80]
  402ff7:	mov    rcx,QWORD PTR [r12]
  402ffb:	mov    rdx,r15
  402ffe:	mov    r8,rax
  403001:	mov    QWORD PTR [rsp+0x30],rax
  403006:	call   0x42a941
  40300b:	test   al,al
  40300d:	jne    0x405515
  403013:	mov    rcx,r15
  403016:	call   0x42a4e8
  40301b:	jmp    0x402de8
  403020:	mov    rcx,rbx
  403023:	call   0x4015e0
  403028:	mov    rcx,rbx
  40302b:	mov    QWORD PTR [rsp+0x38],rax
  403030:	call   0x4015e0
  403035:	mov    rcx,rbx
  403038:	mov    QWORD PTR [rsp+0x48],rax
  40303d:	call   0x4015e0
  403042:	mov    rcx,rbx
  403045:	mov    QWORD PTR [rsp+0x30],rax
  40304a:	call   0x4015e0
  40304f:	mov    r12,QWORD PTR [rip+0x5188a]        # 0x4548e0
  403056:	mov    QWORD PTR [rsp+0x40],rax
  40305b:	mov    rax,QWORD PTR [r12]
  40305f:	test   rax,rax
  403062:	mov    QWORD PTR [rsp+0x50],rax
  403067:	mov    rax,QWORD PTR [rsp+0x38]
  40306c:	je     0x4034d2
  403072:	test   rax,rax
  403075:	mov    QWORD PTR [rsp+0x68],rax
  40307a:	je     0x40356b
  403080:	mov    rax,QWORD PTR [rsp+0x48]
  403085:	test   rax,rax
  403088:	mov    r13,rax
  40308b:	je     0x403559
  403091:	mov    rax,QWORD PTR [rsp+0x30]
  403096:	test   rax,rax
  403099:	mov    QWORD PTR [rsp+0x58],rax
  40309e:	je     0x403695
  4030a4:	mov    rax,QWORD PTR [rsp+0x40]
  4030a9:	test   rax,rax
  4030ac:	mov    QWORD PTR [rsp+0x60],rax
  4030b1:	je     0x403681
  4030b7:	cmp    DWORD PTR [r12+0xd4],0x2
  4030c0:	je     0x403177
  4030c6:	test   r13,r13
  4030c9:	je     0x4030d7
  4030cb:	cmp    QWORD PTR [rsp+0x50],0x0
  4030d1:	jne    0x40335a
  4030d7:	xor    edi,edi
  4030d9:	jmp    0x403182
  4030de:	cmp    BYTE PTR [rsp+0x38],0x0
  4030e3:	jne    0x4030f2
  4030e5:	mov    rdx,r14
  4030e8:	mov    ecx,0xa
  4030ed:	call   0x42a500
  4030f2:	mov    edi,0x2
  4030f7:	jmp    0x40311a
  4030f9:	nop    DWORD PTR [rax+0x0]
  403100:	lea    rcx,[rip+0x2af49]        # 0x42e050
  403107:	mov    r8,r13
  40310a:	mov    rdx,rbp
  40310d:	call   0x405d90
  403112:	mov    rcx,r13
  403115:	call   0x42a4e8
  40311a:	xor    r9d,r9d
  40311d:	xor    r8d,r8d
  403120:	mov    edx,0x5
  403125:	mov    rcx,rbx
  403128:	call   0x40cb10
  40312d:	test   rax,rax
  403130:	mov    r13,rax
  403133:	jne    0x403100
  403135:	jmp    0x402e05
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	mov    rcx,rsi
  403143:	call   0x427df8
  403148:	test   eax,eax
  40314a:	je     0x403749
  403150:	mov    rcx,rsi
  403153:	call   0x427f48
  403158:	test   eax,eax
  40315a:	je     0x403280
  403160:	cmp    DWORD PTR [r12+0xd4],0x1
  403169:	je     0x403280
  40316f:	mov    rcx,rsi
  403172:	call   0x427ee8
  403177:	mov    rcx,r13
  40317a:	call   0x401b40
  40317f:	mov    rdi,rax
  403182:	mov    ecx,0x40
  403187:	xor    esi,esi
  403189:	call   0x424800
  40318e:	mov    ecx,0x40
  403193:	mov    r15,rax
  403196:	call   0x424800
  40319b:	mov    r14,rax
  40319e:	lea    rax,[rip+0x2a825]        # 0x42d9ca
  4031a5:	mov    QWORD PTR [r15],rax
  4031a8:	mov    rax,QWORD PTR [rsp+0x58]
  4031ad:	mov    QWORD PTR [r14],rax
  4031b0:	lea    rax,[rip+0x2a818]        # 0x42d9cf
  4031b7:	mov    QWORD PTR [r15+0x8],rax
  4031bb:	mov    rax,QWORD PTR [rsp+0x60]
  4031c0:	mov    QWORD PTR [r14+0x8],rax
  4031c4:	lea    rax,[rip+0x2a809]        # 0x42d9d4
  4031cb:	mov    QWORD PTR [r15+0x10],rax
  4031cf:	lea    rax,[rip+0x2a803]        # 0x42d9d9
  4031d6:	mov    QWORD PTR [r14+0x10],r13
  4031da:	mov    QWORD PTR [r15+0x18],rax
  4031de:	lea    rax,[rip+0x2a7fd]        # 0x42d9e2
  4031e5:	mov    QWORD PTR [r14+0x18],rdi
  4031e9:	mov    QWORD PTR [r15+0x20],rax
  4031ed:	mov    rax,QWORD PTR [rsp+0x68]
  4031f2:	mov    QWORD PTR [r14+0x20],rax
  4031f6:	lea    rax,[rip+0x2a7ec]        # 0x42d9e9
  4031fd:	mov    QWORD PTR [r15+0x28],rax
  403201:	mov    rax,QWORD PTR [r12+0xe8]
  403209:	mov    QWORD PTR [r14+0x28],rax
  40320d:	lea    rax,[rip+0x2a7ef]        # 0x42da03
  403214:	mov    QWORD PTR [r15+0x30],rax
  403218:	cmp    BYTE PTR [r12+0xd0],0x0
  403221:	je     0x403391
  403227:	mov    QWORD PTR [r14+0x30],rsi
  40322b:	mov    r8d,0x1
  403231:	mov    rdx,r14
  403234:	mov    QWORD PTR [r15+0x38],0x0
  40323c:	mov    rcx,r15
  40323f:	mov    QWORD PTR [r14+0x38],0x0
  403247:	call   0x427f50
  40324c:	mov    rcx,r15
  40324f:	mov    rsi,rax
  403252:	call   0x42a4e8
  403257:	mov    rcx,r14
  40325a:	call   0x42a4e8
  40325f:	test   rdi,rdi
  403262:	je     0x403140
  403268:	mov    rcx,rdi
  40326b:	call   0x42a4e8
  403270:	mov    rcx,rsi
  403273:	call   0x427df8
  403278:	test   eax,eax
  40327a:	je     0x403749
  403280:	cmp    BYTE PTR [r12+0xe0],0x0
  403289:	mov    rcx,rsi
  40328c:	je     0x4033b0
  403292:	call   0x427f10
  403297:	lea    rcx,[rip+0x29f7f]        # 0x42d21d
  40329e:	mov    rdx,rax
  4032a1:	call   0x405d90
  4032a6:	cmp    QWORD PTR [rsp+0x50],0x0
  4032ac:	je     0x4032ba
  4032ae:	lea    rcx,[rip+0x2a76f]        # 0x42da24
  4032b5:	call   0x405d90
  4032ba:	mov    rcx,rsi
  4032bd:	xor    edi,edi
  4032bf:	call   0x427ee8
  4032c4:	mov    rcx,QWORD PTR [rsp+0x38]
  4032c9:	call   0x42a4e8
  4032ce:	mov    rcx,QWORD PTR [rsp+0x48]
  4032d3:	call   0x42a4e8
  4032d8:	mov    rcx,QWORD PTR [rsp+0x30]
  4032dd:	call   0x42a4e8
  4032e2:	mov    rcx,QWORD PTR [rsp+0x40]
  4032e7:	call   0x42a4e8
  4032ec:	jmp    0x402dce
  4032f1:	xor    r8d,r8d
  4032f4:	xor    edx,edx
  4032f6:	mov    rcx,rbx
  4032f9:	mov    r9d,0x1
  4032ff:	call   0x40cb10
  403304:	mov    r12,QWORD PTR [rip+0x515d5]        # 0x4548e0
  40330b:	lea    rcx,[rip+0x2a321]        # 0x42d633
  403312:	mov    rsi,rax
  403315:	mov    rdx,rax
  403318:	movsx  r9d,BYTE PTR [r12+0x11a]
  403321:	lea    r8,[r12+0x28]
  403326:	call   0x402120
  40332b:	mov    rcx,rsi
  40332e:	mov    edi,eax
  403330:	call   0x42a4e8
  403335:	jmp    0x402dce
  40333a:	nop    WORD PTR [rax+rax*1+0x0]
  403340:	lea    rdx,[rip+0x29cc1]        # 0x42d008
  403347:	lea    rcx,[rip+0x2a1c7]        # 0x42d515
  40334e:	call   0x402120
  403353:	mov    edi,eax
  403355:	jmp    0x402dce
  40335a:	mov    rcx,QWORD PTR [rsp+0x50]
  40335f:	call   0x427de8
  403364:	mov    rdx,r13
  403367:	mov    rcx,rax
  40336a:	call   0x42a420
  40336f:	test   eax,eax
  403371:	jne    0x4030d7
  403377:	mov    rcx,QWORD PTR [rsp+0x50]
  40337c:	call   0x427e58
  403381:	mov    rcx,rax
  403384:	call   0x424900
  403389:	mov    rdi,rax
  40338c:	jmp    0x403182
  403391:	lea    rcx,[rip+0x2a67b]        # 0x42da13
  403398:	call   0x42a4d0
  40339d:	test   rax,rax
  4033a0:	lea    rax,[rip+0x2a236]        # 0x42d5dd
  4033a7:	cmove  rsi,rax
  4033ab:	jmp    0x403227
  4033b0:	call   0x427f10
  4033b5:	lea    rcx,[rip+0x2a682]        # 0x42da3e
  4033bc:	mov    rdx,rax
  4033bf:	call   0x405d90
  4033c4:	mov    rax,QWORD PTR [rsp+0x50]
  4033c9:	test   rax,rax
  4033cc:	je     0x4032ba
  4033d2:	mov    rcx,rax
  4033d5:	call   0x427ee8
  4033da:	mov    QWORD PTR [r12],0x0
  4033e2:	jmp    0x4032ba
  4033e7:	mov    r12,QWORD PTR [rip+0x514f2]        # 0x4548e0
  4033ee:	mov    rcx,QWORD PTR [r12]
  4033f2:	call   0x427f30
  4033f7:	test   rax,rax
  4033fa:	mov    r14,rax
  4033fd:	je     0x40379a
  403403:	mov    rcx,QWORD PTR [r12]
  403407:	call   0x427e90
  40340c:	mov    rcx,QWORD PTR [r12]
  403410:	test   rax,rax
  403413:	mov    r15,rax
  403416:	lea    rax,[rip+0x2a535]        # 0x42d952
  40341d:	cmove  r15,rax
  403421:	call   0x427f40
  403426:	test   rax,rax
  403429:	mov    r13,rax
  40342c:	je     0x405645
  403432:	mov    rdx,rax
  403435:	mov    eax,0x9
  40343a:	jmp    0x403458
  40343c:	nop    DWORD PTR [rax+0x0]
  403440:	lea    rdi,[rip+0x2a730]        # 0x42db77
  403447:	mov    rcx,rax
  40344a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40344c:	je     0x403713
  403452:	add    rdx,0x38
  403456:	je     0x403460
  403458:	mov    rsi,QWORD PTR [rdx]
  40345b:	test   rsi,rsi
  40345e:	jne    0x403440
  403460:	movzx  eax,BYTE PTR [r15]
  403464:	cmp    al,0x5c
  403466:	je     0x4036ba
  40346c:	cmp    al,0x2f
  40346e:	je     0x4036ba
  403474:	movzx  ecx,al
  403477:	call   QWORD PTR [rip+0x5987f]        # 0x45ccfc
  40347d:	test   eax,eax
  40347f:	je     0x40348c
  403481:	cmp    BYTE PTR [r15+0x1],0x3a
  403486:	je     0x4036a9
  40348c:	mov    rcx,QWORD PTR [r12]
  403490:	call   0x427e50
  403495:	mov    rcx,QWORD PTR [r12]
  403499:	mov    rsi,rax
  40349c:	call   0x427de8
  4034a1:	lea    rcx,[rip+0x2a730]        # 0x42dbd8
  4034a8:	mov    r8,rax
  4034ab:	mov    QWORD PTR [rsp+0x20],rsi
  4034b0:	mov    r9,r15
  4034b3:	mov    rdx,r14
  4034b6:	call   0x4263a0
  4034bb:	call   0x401640
  4034c0:	mov    rcx,r13
  4034c3:	mov    edi,0x2
  4034c8:	call   0x427f38
  4034cd:	jmp    0x40311a
  4034d2:	test   rax,rax
  4034d5:	je     0x4034fd
  4034d7:	mov    rsi,QWORD PTR [rsp+0x48]
  4034dc:	test   rsi,rsi
  4034df:	je     0x4034fd
  4034e1:	cmp    QWORD PTR [rsp+0x30],0x0
  4034e7:	je     0x4034fd
  4034e9:	cmp    QWORD PTR [rsp+0x40],0x0
  4034ef:	mov    QWORD PTR [rsp+0x68],rax
  4034f4:	mov    r13,rsi
  4034f7:	jne    0x403091
  4034fd:	lea    rcx,[rip+0x2a474]        # 0x42d978
  403504:	xor    edi,edi
  403506:	call   0x405d90
  40350b:	jmp    0x4032c4
  403510:	xor    r8d,r8d
  403513:	xor    edx,edx
  403515:	mov    r9d,0x1
  40351b:	mov    rcx,rbx
  40351e:	call   0x40cb10
  403523:	test   rax,rax
  403526:	mov    rsi,rax
  403529:	je     0x4037b0
  40352f:	mov    rcx,rax
  403532:	call   0x42a358
  403537:	cmp    eax,0xffffffff
  40353a:	je     0x405696
  403540:	mov    edi,0x1
  403545:	mov    rcx,rsi
  403548:	call   0x42a4e8
  40354d:	mov    r12,QWORD PTR [rip+0x5138c]        # 0x4548e0
  403554:	jmp    0x402dce
  403559:	mov    rcx,QWORD PTR [rsp+0x50]
  40355e:	call   0x427de8
  403563:	mov    r13,rax
  403566:	jmp    0x403091
  40356b:	mov    rcx,QWORD PTR [rsp+0x50]
  403570:	call   0x427f30
  403575:	mov    QWORD PTR [rsp+0x68],rax
  40357a:	jmp    0x403080
  40357f:	test   r14,r14
  403582:	je     0x40386c
  403588:	xor    r8d,r8d
  40358b:	xor    edx,edx
  40358d:	mov    r9d,0x1
  403593:	mov    rcx,rbx
  403596:	call   0x40cb10
  40359b:	test   rax,rax
  40359e:	mov    QWORD PTR [rsp+0x80],rax
  4035a6:	je     0x4037d2
  4035ac:	xor    r8d,r8d
  4035af:	xor    edx,edx
  4035b1:	mov    r9d,0x1
  4035b7:	mov    rcx,rbx
  4035ba:	call   0x40cb10
  4035bf:	test   rax,rax
  4035c2:	mov    rsi,rax
  4035c5:	je     0x403b54
  4035cb:	mov    rcx,rsi
  4035ce:	call   0x42a558
  4035d3:	test   eax,eax
  4035d5:	mov    edi,eax
  4035d7:	jle    0x403cb6
  4035dd:	lea    rcx,[rsp+0x80]
  4035e5:	call   0x407980
  4035ea:	mov    rcx,QWORD PTR [rsp+0x80]
  4035f2:	test   rcx,rcx
  4035f5:	je     0x403604
  4035f7:	call   0x426d80
  4035fc:	mov    rcx,QWORD PTR [rsp+0x80]
  403604:	xor    r9d,r9d
  403607:	mov    r8d,edi
  40360a:	mov    rdx,r14
  40360d:	call   0x401680
  403612:	mov    rcx,QWORD PTR [rsp+0x80]
  40361a:	cmp    al,0x1
  40361c:	sbb    edi,edi
  40361e:	not    edi
  403620:	add    edi,0x5
  403623:	test   rcx,rcx
  403626:	je     0x40362d
  403628:	call   0x42a4e8
  40362d:	test   rsi,rsi
  403630:	je     0x40363a
  403632:	mov    rcx,rsi
  403635:	call   0x42a4e8
  40363a:	mov    r12,QWORD PTR [rip+0x5129f]        # 0x4548e0
  403641:	test   edi,edi
  403643:	jne    0x404f8b
  403649:	cmp    BYTE PTR [r12+0xe0],0x0
  403652:	mov    rdx,rbp
  403655:	je     0x403670
  403657:	lea    rcx,[rip+0x2a9b2]        # 0x42e010
  40365e:	call   0x405d90
  403663:	jmp    0x402de8
  403668:	nop    DWORD PTR [rax+rax*1+0x0]
  403670:	lea    rcx,[rip+0x2a9c0]        # 0x42e037
  403677:	call   0x405d90
  40367c:	jmp    0x402de8
  403681:	mov    rcx,QWORD PTR [rsp+0x50]
  403686:	call   0x427e50
  40368b:	mov    QWORD PTR [rsp+0x60],rax
  403690:	jmp    0x4030b7
  403695:	mov    rcx,QWORD PTR [rsp+0x50]
  40369a:	call   0x427e90
  40369f:	mov    QWORD PTR [rsp+0x58],rax
  4036a4:	jmp    0x4030a4
  4036a9:	movzx  eax,BYTE PTR [r15+0x2]
  4036ae:	cmp    al,0x5c
  4036b0:	je     0x4036ba
  4036b2:	cmp    al,0x2f
  4036b4:	jne    0x40348c
  4036ba:	mov    rcx,QWORD PTR [r12]
  4036be:	call   0x427e50
  4036c3:	mov    rcx,QWORD PTR [r12]
  4036c7:	mov    rsi,rax
  4036ca:	call   0x427de8
  4036cf:	lea    rcx,[rip+0x2a4aa]        # 0x42db80
  4036d6:	mov    r8,rax
  4036d9:	mov    QWORD PTR [rsp+0x20],rsi
  4036de:	mov    r9,r15
  4036e1:	mov    rdx,r14
  4036e4:	call   0x4263a0
  4036e9:	jmp    0x4034bb
  4036ee:	xor    r9d,r9d
  4036f1:	xor    r8d,r8d
  4036f4:	mov    edx,0x4
  4036f9:	mov    rcx,rbx
  4036fc:	call   0x40cb10
  403701:	mov    rcx,rax
  403704:	mov    rsi,rax
  403707:	call   0x40ce50
  40370c:	mov    edi,eax
  40370e:	jmp    0x403545
  403713:	mov    rdx,QWORD PTR [rdx+0x18]
  403717:	test   rdx,rdx
  40371a:	je     0x403460
  403720:	movzx  eax,BYTE PTR [rdx]
  403723:	test   al,al
  403725:	je     0x403460
  40372b:	mov    r15,rdx
  40372e:	jmp    0x403464
  403733:	call   0x408610
  403738:	mov    edi,0x2
  40373d:	mov    r12,QWORD PTR [rip+0x5119c]        # 0x4548e0
  403744:	jmp    0x40311a
  403749:	lea    rdx,[rip+0x2930]        # 0x406080
  403750:	xor    r8d,r8d
  403753:	mov    rcx,rsi
  403756:	call   0x427e00
  40375b:	mov    QWORD PTR [r12],rsi
  40375f:	call   0x401d70
  403764:	xor    ecx,ecx
  403766:	call   0x401ba0
  40376b:	cmp    BYTE PTR [r12+0x11a],0x0
  403774:	je     0x403884
  40377a:	mov    rax,QWORD PTR [rsp+0x50]
  40377f:	mov    edi,0x1
  403784:	test   rax,rax
  403787:	je     0x4032c4
  40378d:	mov    rcx,rax
  403790:	call   0x427ee8
  403795:	jmp    0x4032c4
  40379a:	lea    rcx,[rip+0x2a397]        # 0x42db38
  4037a1:	mov    edi,0x2
  4037a6:	call   0x4263a0
  4037ab:	jmp    0x40311a
  4037b0:	lea    rcx,[rip+0x2a344]        # 0x42dafb
  4037b7:	call   0x42a358
  4037bc:	cmp    eax,0xffffffff
  4037bf:	je     0x4037de
  4037c1:	mov    edi,0x2
  4037c6:	mov    r12,QWORD PTR [rip+0x51113]        # 0x4548e0
  4037cd:	jmp    0x40311a
  4037d2:	xor    esi,esi
  4037d4:	mov    edi,0xffffffff
  4037d9:	jmp    0x4035dd
  4037de:	call   QWORD PTR [rip+0x59408]        # 0x45cbec
  4037e4:	mov    ecx,DWORD PTR [rax]
  4037e6:	call   0x42a408
  4037eb:	lea    r8,[rip+0x2a309]        # 0x42dafb
  4037f2:	lea    rcx,[rip+0x2a307]        # 0x42db00
  4037f9:	mov    r9,rax
  4037fc:	mov    rdx,rbp
  4037ff:	call   0x405d90
  403804:	mov    r12,QWORD PTR [rip+0x510d5]        # 0x4548e0
  40380b:	jmp    0x402de8
  403810:	xor    r8d,r8d
  403813:	mov    r9d,0x1
  403819:	xor    edx,edx
  40381b:	mov    rcx,rbx
  40381e:	call   0x40cb10
  403823:	mov    edx,0x2b
  403828:	mov    rcx,rbp
  40382b:	mov    r12,rax
  40382e:	call   0x42a428
  403833:	mov    edx,0x53
  403838:	test   rax,rax
  40383b:	mov    rcx,rbp
  40383e:	setne  sil
  403842:	call   0x42a428
  403847:	test   rax,rax
  40384a:	setne  dil
  40384e:	cmp    BYTE PTR [rbp+0x1],0x79
  403852:	ja     0x4058ef
  403858:	movzx  edx,BYTE PTR [rbp+0x1]
  40385c:	lea    rax,[rip+0x2a8d5]        # 0x42e138
  403863:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403867:	add    rax,rdx
  40386a:	jmp    rax
  40386c:	lea    rcx,[rip+0x2a3d1]        # 0x42dc44
  403873:	call   0x405d90
  403878:	mov    r12,QWORD PTR [rip+0x51061]        # 0x4548e0
  40387f:	jmp    0x402de8
  403884:	mov    rcx,QWORD PTR [r12]
  403888:	call   0x427e90
  40388d:	mov    rcx,QWORD PTR [rsp+0x50]
  403892:	mov    rsi,rax
  403895:	call   0x427e90
  40389a:	test   rsi,rsi
  40389d:	mov    rcx,rax
  4038a0:	je     0x4038bb
  4038a2:	test   rax,rax
  4038a5:	je     0x403ba0
  4038ab:	mov    rdx,rsi
  4038ae:	call   0x42a420
  4038b3:	test   eax,eax
  4038b5:	jne    0x403ba0
  4038bb:	mov    rcx,QWORD PTR [r12]
  4038bf:	call   0x427e50
  4038c4:	mov    rcx,QWORD PTR [rsp+0x50]
  4038c9:	mov    rsi,rax
  4038cc:	call   0x427e50
  4038d1:	test   rsi,rsi
  4038d4:	je     0x4038f2
  4038d6:	test   rax,rax
  4038d9:	je     0x403ba0
  4038df:	mov    rdx,rsi
  4038e2:	mov    rcx,rax
  4038e5:	call   0x42a420
  4038ea:	test   eax,eax
  4038ec:	jne    0x403ba0
  4038f2:	mov    rcx,QWORD PTR [r12]
  4038f6:	call   0x427de8
  4038fb:	mov    rcx,QWORD PTR [r12]
  4038ff:	mov    rsi,rax
  403902:	call   0x427f30
  403907:	lea    rcx,[rip+0x2a76a]        # 0x42e078
  40390e:	mov    r8,rsi
  403911:	mov    rdx,rax
  403914:	call   0x4263a0
  403919:	jmp    0x40377a
  40391e:	lea    rdi,[rip+0x2a3b0]        # 0x42dcd5
  403925:	mov    ecx,0x5
  40392a:	mov    rsi,rbp
  40392d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40392f:	mov    ecx,0x6
  403934:	lea    rdi,[rip+0x2a39f]        # 0x42dcda
  40393b:	mov    rsi,rbp
  40393e:	seta   dl
  403941:	setb   al
  403944:	cmp    dl,al
  403946:	jne    0x4039fc
  40394c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40394e:	je     0x4039eb
  403954:	call   QWORD PTR [rip+0x5925a]        # 0x45cbb4
  40395a:	mov    r12,QWORD PTR [rip+0x50f7f]        # 0x4548e0
  403961:	lea    r14,[rax+0x30]
  403965:	lea    rax,[rsp+0x80]
  40396d:	mov    r15d,0x1
  403973:	mov    BYTE PTR [rsp+0x38],0x0
  403978:	mov    QWORD PTR [rsp+0x30],rax
  40397d:	jmp    0x40399f
  40397f:	lea    rdi,[rip+0x2a35a]        # 0x42dce0
  403986:	mov    rsi,r13
  403989:	mov    ecx,0x3
  40398e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403990:	jne    0x4039c7
  403992:	mov    BYTE PTR [rsp+0x38],0x1
  403997:	mov    rcx,r13
  40399a:	call   0x42a4e8
  40399f:	mov    r8,QWORD PTR [rsp+0x30]
  4039a4:	xor    r9d,r9d
  4039a7:	xor    edx,edx
  4039a9:	mov    rcx,rbx
  4039ac:	call   0x40cb10
  4039b1:	test   rax,rax
  4039b4:	mov    r13,rax
  4039b7:	je     0x4030de
  4039bd:	cmp    BYTE PTR [rsp+0x80],0x0
  4039c5:	je     0x40397f
  4039c7:	test   r15b,r15b
  4039ca:	je     0x4039dc
  4039cc:	mov    rdx,r14
  4039cf:	mov    rcx,r13
  4039d2:	xor    r15d,r15d
  4039d5:	call   0x42a4f8
  4039da:	jmp    0x403997
  4039dc:	mov    rdx,r14
  4039df:	mov    ecx,0x20
  4039e4:	call   0x42a500
  4039e9:	jmp    0x4039cc
  4039eb:	mov    r12,QWORD PTR [rip+0x50eee]        # 0x4548e0
  4039f2:	mov    r14,QWORD PTR [r12+0x10]
  4039f7:	jmp    0x403965
  4039fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4039fe:	je     0x4039eb
  403a00:	lea    rdi,[rip+0x2a2dc]        # 0x42dce3
  403a07:	mov    ecx,0x9
  403a0c:	mov    rsi,rbp
  403a0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403a11:	je     0x403df5
  403a17:	lea    rdi,[rip+0x2a30f]        # 0x42dd2d
  403a1e:	mov    ecx,0x2
  403a23:	mov    rsi,rbp
  403a26:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403a28:	je     0x403d9a
  403a2e:	lea    rdx,[rip+0x2a2fa]        # 0x42dd2f
  403a35:	mov    rcx,rbp
  403a38:	call   0x42a420
  403a3d:	test   eax,eax
  403a3f:	je     0x403d36
  403a45:	lea    rdx,[rip+0x2a2e5]        # 0x42dd31
  403a4c:	mov    rcx,rbp
  403a4f:	call   0x42a420
  403a54:	test   eax,eax
  403a56:	je     0x403cfc
  403a5c:	lea    rdx,[rip+0x2a2d3]        # 0x42dd36
  403a63:	mov    rcx,rbp
  403a66:	call   0x42a420
  403a6b:	test   eax,eax
  403a6d:	je     0x403a86
  403a6f:	lea    rdx,[rip+0x2a2c2]        # 0x42dd38
  403a76:	mov    rcx,rbp
  403a79:	call   0x42a420
  403a7e:	test   eax,eax
  403a80:	jne    0x403e70
  403a86:	xor    r9d,r9d
  403a89:	xor    r8d,r8d
  403a8c:	mov    edx,0x4
  403a91:	mov    rcx,rbx
  403a94:	call   0x40cb10
  403a99:	test   rax,rax
  403a9c:	mov    r13,rax
  403a9f:	je     0x403ae3
  403aa1:	xor    eax,eax
  403aa3:	or     rcx,0xffffffffffffffff
  403aa7:	mov    rdi,r13
  403aaa:	repnz scas al,BYTE PTR es:[rdi]
  403aac:	mov    rdi,QWORD PTR [rip+0x59259]        # 0x45cd0c
  403ab3:	mov    rsi,rcx
  403ab6:	not    rsi
  403ab9:	sub    rsi,0x1
  403abd:	je     0x403ae3
  403abf:	sub    rsi,0x1
  403ac3:	movzx  ecx,BYTE PTR [r13+rsi*1+0x0]
  403ac9:	mov    r12d,ecx
  403acc:	call   rdi
  403ace:	test   eax,eax
  403ad0:	jne    0x403ad8
  403ad2:	cmp    r12b,0x3b
  403ad6:	jne    0x403ae3
  403ad8:	test   rsi,rsi
  403adb:	mov    BYTE PTR [r13+rsi*1+0x0],0x0
  403ae1:	jne    0x403abf
  403ae3:	mov    r12,QWORD PTR [rip+0x50df6]        # 0x4548e0
  403aea:	mov    rcx,r13
  403aed:	mov    edi,0x2
  403af2:	movzx  edx,WORD PTR [r12+0x30]
  403af8:	call   0x4082b0
  403afd:	mov    rcx,r13
  403b00:	call   0x42a4e8
  403b05:	jmp    0x40311a
  403b0a:	nop    WORD PTR [rax+rax*1+0x0]
  403b10:	movzx  edi,BYTE PTR [rsi]
  403b13:	test   dil,dil
  403b16:	js     0x402fe9
  403b1c:	movsx  ecx,dil
  403b20:	call   QWORD PTR [rip+0x591e6]        # 0x45cd0c
  403b26:	test   eax,eax
  403b28:	jne    0x403b34
  403b2a:	cmp    dil,0x29
  403b2e:	jne    0x402fe9
  403b34:	lea    rdi,[rsi+0x1]
  403b38:	mov    rcx,rdi
  403b3b:	call   0x42a558
  403b40:	test   eax,eax
  403b42:	mov    r13d,eax
  403b45:	jle    0x403ce0
  403b4b:	mov    BYTE PTR [rsi+0x1],0x0
  403b4f:	jmp    0x402fef
  403b54:	mov    rsi,QWORD PTR [rsp+0x80]
  403b5c:	cmp    BYTE PTR [rsi],0x0
  403b5f:	je     0x4037d2
  403b65:	lea    rdx,[rip+0x2a0e9]        # 0x42dc55
  403b6c:	mov    rcx,rsi
  403b6f:	call   0x42a3e0
  403b74:	mov    rcx,rsi
  403b77:	mov    rdi,rax
  403b7a:	call   0x42a400
  403b7f:	cmp    rdi,rax
  403b82:	jne    0x4037d2
  403b88:	mov    QWORD PTR [rsp+0x80],0x0
  403b94:	jmp    0x4035cb
  403b99:	nop    DWORD PTR [rax+0x0]
  403ba0:	mov    rcx,QWORD PTR [r12]
  403ba4:	call   0x427e90
  403ba9:	test   rax,rax
  403bac:	mov    rdi,rax
  403baf:	lea    rax,[rip+0x29d9c]        # 0x42d952
  403bb6:	cmove  rdi,rax
  403bba:	movzx  eax,BYTE PTR [rdi]
  403bbd:	cmp    al,0x5c
  403bbf:	je     0x403c24
  403bc1:	cmp    al,0x2f
  403bc3:	je     0x403c24
  403bc5:	movzx  ecx,al
  403bc8:	call   QWORD PTR [rip+0x5912e]        # 0x45ccfc
  403bce:	test   eax,eax
  403bd0:	je     0x403bd8
  403bd2:	cmp    BYTE PTR [rdi+0x1],0x3a
  403bd6:	je     0x403c18
  403bd8:	mov    rcx,QWORD PTR [r12]
  403bdc:	call   0x427e50
  403be1:	mov    rcx,QWORD PTR [r12]
  403be5:	mov    r13,rax
  403be8:	call   0x427de8
  403bed:	mov    rcx,QWORD PTR [r12]
  403bf1:	mov    rsi,rax
  403bf4:	call   0x427f30
  403bf9:	lea    rcx,[rip+0x29ea8]        # 0x42daa8
  403c00:	mov    rdx,rax
  403c03:	mov    QWORD PTR [rsp+0x20],r13
  403c08:	mov    r9,rdi
  403c0b:	mov    r8,rsi
  403c0e:	call   0x4263a0
  403c13:	jmp    0x40377a
  403c18:	movzx  eax,BYTE PTR [rdi+0x2]
  403c1c:	cmp    al,0x5c
  403c1e:	je     0x403c24
  403c20:	cmp    al,0x2f
  403c22:	jne    0x403bd8
  403c24:	mov    rcx,QWORD PTR [r12]
  403c28:	call   0x427e50
  403c2d:	mov    rcx,QWORD PTR [r12]
  403c31:	mov    r13,rax
  403c34:	call   0x427de8
  403c39:	mov    rcx,QWORD PTR [r12]
  403c3d:	mov    rsi,rax
  403c40:	call   0x427f30
  403c45:	lea    rcx,[rip+0x29e04]        # 0x42da50
  403c4c:	mov    rdx,rax
  403c4f:	mov    QWORD PTR [rsp+0x20],r13
  403c54:	mov    r9,rdi
  403c57:	mov    r8,rsi
  403c5a:	call   0x4263a0
  403c5f:	jmp    0x40377a
  403c64:	mov    ecx,0x51eb851f
  403c69:	mov    eax,r10d
  403c6c:	mov    r9d,r10d
  403c6f:	imul   ecx
  403c71:	sar    r9d,0x1f
  403c75:	sar    edx,0x5
  403c78:	sub    edx,r9d
  403c7b:	mov    eax,edx
  403c7d:	mov    r8d,edx
  403c80:	imul   ecx
  403c82:	mov    eax,r8d
  403c85:	sar    eax,0x1f
  403c88:	sar    edx,0x5
  403c8b:	mov    ecx,edx
  403c8d:	mov    edx,0x68db8bad
  403c92:	sub    ecx,eax
  403c94:	mov    eax,r10d
  403c97:	imul   ecx,ecx,0x64
  403c9a:	imul   edx
  403c9c:	sub    r8d,ecx
  403c9f:	lea    rcx,[rip+0x29fda]        # 0x42dc80
  403ca6:	sar    edx,0xc
  403ca9:	sub    edx,r9d
  403cac:	call   0x405d90
  403cb1:	jmp    0x402de8
  403cb6:	lea    rcx,[rip+0x29fa3]        # 0x42dc60
  403cbd:	mov    rdx,rsi
  403cc0:	mov    edi,0x5
  403cc5:	call   0x405d90
  403cca:	mov    rcx,QWORD PTR [rsp+0x80]
  403cd2:	test   rcx,rcx
  403cd5:	jne    0x403628
  403cdb:	jmp    0x403632
  403ce0:	lea    rcx,[rip+0x29f79]        # 0x42dc60
  403ce7:	mov    rdx,rdi
  403cea:	call   0x405d90
  403cef:	mov    rcx,r15
  403cf2:	call   0x42a4e8
  403cf7:	jmp    0x402de8
  403cfc:	xor    r9d,r9d
  403cff:	xor    r8d,r8d
  403d02:	xor    edx,edx
  403d04:	mov    rcx,rbx
  403d07:	call   0x40cb10
  403d0c:	test   rax,rax
  403d0f:	jne    0x403d1d
  403d11:	lea    rcx,[rip+0x29381]        # 0x42d099
  403d18:	call   0x424900
  403d1d:	mov    r12,QWORD PTR [rip+0x50bbc]        # 0x4548e0
  403d24:	mov    edi,0x1
  403d29:	mov    QWORD PTR [r12+0xc8],rax
  403d31:	jmp    0x40311a
  403d36:	xor    r9d,r9d
  403d39:	xor    r8d,r8d
  403d3c:	mov    edx,0x3
  403d41:	mov    rcx,rbx
  403d44:	call   0x40cb10
  403d49:	test   rax,rax
  403d4c:	mov    QWORD PTR [rsp+0x80],rax
  403d54:	je     0x403de0
  403d5a:	lea    rcx,[rsp+0x80]
  403d62:	call   0x407980
  403d67:	mov    rcx,QWORD PTR [rsp+0x80]
  403d6f:	call   0x424900
  403d74:	mov    r12,QWORD PTR [rip+0x50b65]        # 0x4548e0
  403d7b:	mov    QWORD PTR [r12+0xc0],rax
  403d83:	mov    rcx,QWORD PTR [rsp+0x80]
  403d8b:	mov    edi,0x1
  403d90:	call   0x42a4e8
  403d95:	jmp    0x40311a
  403d9a:	xor    r9d,r9d
  403d9d:	xor    r8d,r8d
  403da0:	xor    edx,edx
  403da2:	mov    rcx,rbx
  403da5:	call   0x40cb10
  403daa:	mov    r12,QWORD PTR [rip+0x50b2f]        # 0x4548e0
  403db1:	lea    rcx,[rip+0x2983d]        # 0x42d5f5
  403db8:	mov    rsi,rax
  403dbb:	mov    rdx,rax
  403dbe:	movsx  r9d,BYTE PTR [r12+0x11a]
  403dc7:	lea    r8,[r12+0x28]
  403dcc:	call   0x402120
  403dd1:	mov    rcx,rsi
  403dd4:	mov    edi,eax
  403dd6:	call   0x42a4e8
  403ddb:	jmp    0x402dce
  403de0:	mov    r12,QWORD PTR [rip+0x50af9]        # 0x4548e0
  403de7:	mov    QWORD PTR [r12+0xc0],0x0
  403df3:	jmp    0x403d83
  403df5:	xor    r9d,r9d
  403df8:	xor    r8d,r8d
  403dfb:	xor    edx,edx
  403dfd:	mov    rcx,rbx
  403e00:	call   0x40cb10
  403e05:	test   rax,rax
  403e08:	mov    rsi,rax
  403e0b:	mov    r12,QWORD PTR [rip+0x50ace]        # 0x4548e0
  403e12:	je     0x4055b6
  403e18:	mov    rcx,QWORD PTR [r12]
  403e1c:	mov    rdx,rax
  403e1f:	call   0x427e10
  403e24:	add    eax,0x1
  403e27:	je     0x405501
  403e2d:	mov    rcx,QWORD PTR [r12]
  403e31:	call   0x427f60
  403e36:	mov    ecx,eax
  403e38:	mov    DWORD PTR [r12+0x8],eax
  403e3d:	mov    DWORD PTR [r12+0x78],eax
  403e42:	call   0x427d80
  403e47:	mov    rcx,QWORD PTR [r12+0x110]
  403e4f:	lea    rdx,[rip+0x296a1]        # 0x42d4f7
  403e56:	mov    r8,rax
  403e59:	call   0x40ef10
  403e5e:	mov    rcx,rsi
  403e61:	mov    edi,0x2
  403e66:	call   0x42a4e8
  403e6b:	jmp    0x40311a
  403e70:	lea    rdx,[rip+0x29ec6]        # 0x42dd3d
  403e77:	mov    rcx,rbp
  403e7a:	call   0x42a420
  403e7f:	test   eax,eax
  403e81:	je     0x403e96
  403e83:	lea    rdx,[rip+0x29198]        # 0x42d022
  403e8a:	mov    rcx,rbp
  403e8d:	call   0x42a420
  403e92:	test   eax,eax
  403e94:	jne    0x403ed1
  403e96:	mov    r12,QWORD PTR [rip+0x50a43]        # 0x4548e0
  403e9d:	cmp    DWORD PTR [r12+0x28],0x4
  403ea3:	movsx  r9d,BYTE PTR [r12+0x11a]
  403eac:	lea    r8,[r12+0x28]
  403eb1:	je     0x402db9
  403eb7:	lea    rdx,[rip+0x29164]        # 0x42d022
  403ebe:	lea    rcx,[rip+0x29650]        # 0x42d515
  403ec5:	call   0x402120
  403eca:	mov    edi,eax
  403ecc:	jmp    0x402dce
  403ed1:	lea    rdx,[rip+0x29e67]        # 0x42dd3f
  403ed8:	mov    rcx,rbp
  403edb:	call   0x42a420
  403ee0:	test   eax,eax
  403ee2:	je     0x403f21
  403ee4:	lea    rdx,[rip+0x29e56]        # 0x42dd41
  403eeb:	mov    rcx,rbp
  403eee:	call   0x42a420
  403ef3:	test   eax,eax
  403ef5:	je     0x403f21
  403ef7:	lea    rdx,[rip+0x29e4b]        # 0x42dd49
  403efe:	mov    rcx,rbp
  403f01:	call   0x42a420
  403f06:	test   eax,eax
  403f08:	je     0x403f21
  403f0a:	lea    rdx,[rip+0x29e3b]        # 0x42dd4c
  403f11:	mov    rcx,rbp
  403f14:	call   0x42a420
  403f19:	test   eax,eax
  403f1b:	jne    0x403fc9
  403f21:	xor    r8d,r8d
  403f24:	xor    edx,edx
  403f26:	mov    r9d,0x1
  403f2c:	mov    rcx,rbx
  403f2f:	call   0x40cb10
  403f34:	test   rax,rax
  403f37:	mov    QWORD PTR [rsp+0x80],rax
  403f3f:	je     0x403fae
  403f41:	lea    rdx,[rip+0x29e01]        # 0x42dd49
  403f48:	mov    rcx,rbp
  403f4b:	mov    esi,0x1
  403f50:	call   0x42a420
  403f55:	test   eax,eax
  403f57:	je     0x403f70
  403f59:	lea    rdx,[rip+0x29dec]        # 0x42dd4c
  403f60:	mov    rcx,rbp
  403f63:	xor    esi,esi
  403f65:	call   0x42a420
  403f6a:	test   eax,eax
  403f6c:	sete   sil
  403f70:	lea    rcx,[rsp+0x80]
  403f78:	call   0x407980
  403f7d:	mov    rcx,QWORD PTR [rsp+0x80]
  403f85:	xor    edx,edx
  403f87:	mov    r8d,esi
  403f8a:	call   0x401ed0
  403f8f:	mov    rcx,QWORD PTR [rsp+0x80]
  403f97:	test   eax,eax
  403f99:	sete   dil
  403f9d:	call   0x42a4e8
  403fa2:	mov    r12,QWORD PTR [rip+0x50937]        # 0x4548e0
  403fa9:	jmp    0x402dce
  403fae:	lea    rcx,[rip+0x29dab]        # 0x42dd60
  403fb5:	mov    rdx,rbp
  403fb8:	call   0x405d90
  403fbd:	mov    r12,QWORD PTR [rip+0x5091c]        # 0x4548e0
  403fc4:	jmp    0x402de8
  403fc9:	lea    rdx,[rip+0x29db0]        # 0x42dd80
  403fd0:	mov    rcx,rbp
  403fd3:	call   0x42a420
  403fd8:	test   eax,eax
  403fda:	je     0x404015
  403fdc:	lea    rdx,[rip+0x29d9f]        # 0x42dd82
  403fe3:	mov    rcx,rbp
  403fe6:	call   0x42a420
  403feb:	test   eax,eax
  403fed:	je     0x404015
  403fef:	lea    rdx,[rip+0x29d91]        # 0x42dd87
  403ff6:	mov    rcx,rbp
  403ff9:	call   0x42a420
  403ffe:	test   eax,eax
  404000:	je     0x404015
  404002:	lea    rdx,[rip+0x29d81]        # 0x42dd8a
  404009:	mov    rcx,rbp
  40400c:	call   0x42a420
  404011:	test   eax,eax
  404013:	jne    0x40405f
  404015:	xor    r8d,r8d
  404018:	mov    r9d,0x1
  40401e:	xor    edx,edx
  404020:	mov    rcx,rbx
  404023:	call   0x40cb10
  404028:	mov    edx,0x2b
  40402d:	mov    rcx,rbp
  404030:	mov    rsi,rax
  404033:	call   0x42a428
  404038:	xor    edx,edx
  40403a:	test   rax,rax
  40403d:	mov    rcx,rsi
  404040:	setne  dl
  404043:	call   0x418220
  404048:	test   rsi,rsi
  40404b:	mov    edi,eax
  40404d:	jne    0x403545
  404053:	mov    r12,QWORD PTR [rip+0x50886]        # 0x4548e0
  40405a:	jmp    0x402dce
  40405f:	lea    rdx,[rip+0x29d2a]        # 0x42dd90
  404066:	mov    r8d,0x3
  40406c:	mov    rcx,rbp
  40406f:	call   0x42a3f8
  404074:	test   eax,eax
  404076:	je     0x4040f5
  404078:	lea    rdx,[rip+0x29d2a]        # 0x42dda9
  40407f:	mov    rcx,rbp
  404082:	call   0x42a420
  404087:	test   eax,eax
  404089:	je     0x4040a2
  40408b:	lea    rdx,[rip+0x29d19]        # 0x42ddab
  404092:	mov    rcx,rbp
  404095:	call   0x42a420
  40409a:	test   eax,eax
  40409c:	jne    0x4041a7
  4040a2:	mov    r9d,0x1
  4040a8:	xor    r8d,r8d
  4040ab:	mov    edx,0x3
  4040b0:	mov    rcx,rbx
  4040b3:	call   0x40cb10
  4040b8:	lea    rcx,[rsp+0x80]
  4040c0:	mov    QWORD PTR [rsp+0x80],rax
  4040c8:	call   0x407980
  4040cd:	mov    rcx,QWORD PTR [rsp+0x80]
  4040d5:	call   0x405e50
  4040da:	mov    rcx,QWORD PTR [rsp+0x80]
  4040e2:	mov    edi,eax
  4040e4:	call   0x42a4e8
  4040e9:	mov    r12,QWORD PTR [rip+0x507f0]        # 0x4548e0
  4040f0:	jmp    0x402dce
  4040f5:	xor    r8d,r8d
  4040f8:	xor    edx,edx
  4040fa:	mov    r9d,0x1
  404100:	mov    rcx,rbx
  404103:	lea    rsi,[rbp+0x3]
  404107:	call   0x40cb10
  40410c:	xor    r8d,r8d
  40410f:	xor    edx,edx
  404111:	mov    r9d,0x1
  404117:	mov    rcx,rbx
  40411a:	mov    QWORD PTR [rsp+0x78],rax
  40411f:	call   0x40cb10
  404124:	lea    rdx,[rip+0x29c69]        # 0x42dd94
  40412b:	mov    rcx,rsi
  40412e:	mov    rdi,rax
  404131:	mov    QWORD PTR [rsp+0x80],rax
  404139:	call   0x42a420
  40413e:	test   eax,eax
  404140:	jne    0x404231
  404146:	test   rdi,rdi
  404149:	je     0x404218
  40414f:	lea    rcx,[rsp+0x80]
  404157:	mov    edi,0x2
  40415c:	call   0x407980
  404161:	mov    rdx,QWORD PTR [rsp+0x80]
  404169:	mov    rcx,QWORD PTR [rsp+0x78]
  40416e:	call   0x40f270
  404173:	mov    rcx,QWORD PTR [rsp+0x78]
  404178:	mov    BYTE PTR [rsp+0x30],al
  40417c:	call   0x42a4e8
  404181:	mov    rcx,QWORD PTR [rsp+0x80]
  404189:	call   0x42a4e8
  40418e:	movzx  eax,BYTE PTR [rsp+0x30]
  404193:	test   al,al
  404195:	mov    r12,QWORD PTR [rip+0x50744]        # 0x4548e0
  40419c:	je     0x402de8
  4041a2:	jmp    0x403641
  4041a7:	lea    rdx,[rip+0x29c01]        # 0x42ddaf
  4041ae:	mov    rcx,rbp
  4041b1:	call   0x42a420
  4041b6:	test   eax,eax
  4041b8:	je     0x4041d1
  4041ba:	lea    rdx,[rip+0x29bf0]        # 0x42ddb1
  4041c1:	mov    rcx,rbp
  4041c4:	call   0x42a420
  4041c9:	test   eax,eax
  4041cb:	jne    0x40427a
  4041d1:	test   r14,r14
  4041d4:	je     0x4041e1
  4041d6:	cmp    QWORD PTR [r14+0x8],0x0
  4041db:	jne    0x4047f8
  4041e1:	mov    r12,QWORD PTR [rip+0x506f8]        # 0x4548e0
  4041e8:	cmp    BYTE PTR [r12+0x11a],0x0
  4041f1:	jne    0x4041ff
  4041f3:	lea    rcx,[rip+0x29bbd]        # 0x42ddb7
  4041fa:	call   0x42a468
  4041ff:	call   QWORD PTR [rip+0x589af]        # 0x45cbb4
  404205:	lea    rcx,[rax+0x30]
  404209:	mov    edi,0x2
  40420e:	call   0x42a520
  404213:	jmp    0x40311a
  404218:	lea    rcx,[rip+0x29b41]        # 0x42dd60
  40421f:	mov    rdx,rbp
  404222:	mov    dil,0x2
  404225:	call   0x405d90
  40422a:	xor    eax,eax
  40422c:	jmp    0x404173
  404231:	lea    rdx,[rip+0x29b63]        # 0x42dd9b
  404238:	mov    rcx,rsi
  40423b:	call   0x42a420
  404240:	test   eax,eax
  404242:	jne    0x404d24
  404248:	cmp    QWORD PTR [rsp+0x78],0x0
  40424e:	je     0x4047dd
  404254:	lea    rcx,[rsp+0x78]
  404259:	mov    edi,0x2
  40425e:	call   0x407980
  404263:	mov    rdx,QWORD PTR [rsp+0x80]
  40426b:	mov    rcx,QWORD PTR [rsp+0x78]
  404270:	call   0x40f340
  404275:	jmp    0x404173
  40427a:	lea    rdx,[rip+0x29758]        # 0x42d9d9
  404281:	mov    rcx,rbp
  404284:	call   0x42a420
  404289:	test   eax,eax
  40428b:	je     0x4044da
  404291:	lea    rdx,[rip+0x29baa]        # 0x42de42
  404298:	mov    rcx,rbp
  40429b:	call   0x42a420
  4042a0:	test   eax,eax
  4042a2:	je     0x4043c8
  4042a8:	lea    rdx,[rip+0x29bc4]        # 0x42de73
  4042af:	mov    rcx,rbp
  4042b2:	call   0x42a420
  4042b7:	test   eax,eax
  4042b9:	je     0x40435c
  4042bf:	lea    rdx,[rip+0x29bc5]        # 0x42de8b
  4042c6:	mov    rcx,rbp
  4042c9:	call   0x42a420
  4042ce:	test   eax,eax
  4042d0:	je     0x40434b
  4042d2:	lea    rdx,[rip+0x29bb4]        # 0x42de8d
  4042d9:	mov    rcx,rbp
  4042dc:	call   0x42a420
  4042e1:	test   eax,eax
  4042e3:	je     0x40434b
  4042e5:	lea    rdx,[rip+0x29ba6]        # 0x42de92
  4042ec:	mov    rcx,rbp
  4042ef:	call   0x42a420
  4042f4:	test   eax,eax
  4042f6:	je     0x40430f
  4042f8:	lea    rdx,[rip+0x29b95]        # 0x42de94
  4042ff:	mov    rcx,rbp
  404302:	call   0x42a420
  404307:	test   eax,eax
  404309:	jne    0x40480c
  40430f:	mov    rcx,r14
  404312:	mov    edi,0x2
  404317:	call   0x427d68
  40431c:	mov    rcx,rbx
  40431f:	call   0x40ca60
  404324:	mov    r12,QWORD PTR [rip+0x505b5]        # 0x4548e0
  40432b:	cmp    BYTE PTR [r12+0x11a],0x0
  404334:	jne    0x40311a
  40433a:	lea    rcx,[rip+0x29b59]        # 0x42de9a
  404341:	call   0x42a468
  404346:	jmp    0x40311a
  40434b:	mov    edi,0x3
  404350:	mov    r12,QWORD PTR [rip+0x50589]        # 0x4548e0
  404357:	jmp    0x40311a
  40435c:	xor    r9d,r9d
  40435f:	xor    r8d,r8d
  404362:	xor    edx,edx
  404364:	mov    rcx,rbx
  404367:	call   0x40cb10
  40436c:	xor    r9d,r9d
  40436f:	mov    r14,rax
  404372:	xor    r8d,r8d
  404375:	xor    edx,edx
  404377:	mov    rcx,rbx
  40437a:	call   0x40cb10
  40437f:	test   r14,r14
  404382:	mov    QWORD PTR [rsp+0x30],rax
  404387:	je     0x404549
  40438d:	mov    r12,QWORD PTR [rip+0x5054c]        # 0x4548e0
  404394:	mov    rdx,QWORD PTR [rsp+0x30]
  404399:	mov    rcx,r14
  40439c:	movsx  r9d,BYTE PTR [r12+0x11a]
  4043a5:	lea    r8,[r12+0x28]
  4043aa:	call   0x402120
  4043af:	mov    edi,eax
  4043b1:	mov    rcx,r14
  4043b4:	call   0x42a4e8
  4043b9:	mov    rcx,QWORD PTR [rsp+0x30]
  4043be:	call   0x42a4e8
  4043c3:	jmp    0x402dce
  4043c8:	xor    r9d,r9d
  4043cb:	xor    r8d,r8d
  4043ce:	xor    edx,edx
  4043d0:	mov    rcx,rbx
  4043d3:	call   0x40cb10
  4043d8:	xor    r9d,r9d
  4043db:	mov    rsi,rax
  4043de:	xor    r8d,r8d
  4043e1:	xor    edx,edx
  4043e3:	mov    rcx,rbx
  4043e6:	call   0x40cb10
  4043eb:	test   rsi,rsi
  4043ee:	mov    r13,rax
  4043f1:	je     0x403fae
  4043f7:	test   rax,rax
  4043fa:	je     0x4044bc
  404400:	mov    r12,QWORD PTR [rip+0x504d9]        # 0x4548e0
  404407:	cmp    QWORD PTR [r12+0xf0],0x0
  404410:	je     0x40449b
  404416:	mov    rdi,QWORD PTR [rip+0x58797]        # 0x45cbb4
  40441d:	call   rdi
  40441f:	lea    rdx,[rax+0x30]
  404423:	mov    rcx,rsi
  404426:	call   0x42a4f8
  40442b:	call   rdi
  40442d:	lea    rcx,[rax+0x30]
  404431:	call   0x42a520
  404436:	mov    rax,r13
  404439:	mov    r13,rsi
  40443c:	mov    rsi,rax
  40443f:	call   rdi
  404441:	mov    rcx,rax
  404444:	call   0x408650
  404449:	mov    r14,rax
  40444c:	mov    rcx,QWORD PTR [r12+0x110]
  404454:	mov    r8,r14
  404457:	mov    rdx,rsi
  40445a:	mov    edi,0x1
  40445f:	call   0x40ef10
  404464:	test   al,al
  404466:	jne    0x404479
  404468:	lea    rcx,[rip+0x299e1]        # 0x42de50
  40446f:	mov    rdx,rbp
  404472:	xor    edi,edi
  404474:	call   0x405d90
  404479:	mov    rcx,r14
  40447c:	call   0x42a4e8
  404481:	test   r13,r13
  404484:	je     0x40448e
  404486:	mov    rcx,r13
  404489:	call   0x42a4e8
  40448e:	mov    rcx,rsi
  404491:	call   0x42a4e8
  404496:	jmp    0x402dce
  40449b:	mov    rax,r13
  40449e:	mov    r13,rsi
  4044a1:	mov    rsi,rax
  4044a4:	mov    r8d,0x1
  4044aa:	mov    edx,0x1000
  4044af:	mov    rcx,r13
  4044b2:	call   0x427a10
  4044b7:	mov    r14,rax
  4044ba:	jmp    0x40444c
  4044bc:	mov    r12,QWORD PTR [rip+0x5041d]        # 0x4548e0
  4044c3:	cmp    QWORD PTR [r12+0xf0],0x0
  4044cc:	je     0x4044a4
  4044ce:	mov    rdi,QWORD PTR [rip+0x586df]        # 0x45cbb4
  4044d5:	jmp    0x40443f
  4044da:	lea    rcx,[rip+0x298ed]        # 0x42ddce
  4044e1:	xor    r8d,r8d
  4044e4:	mov    edx,0x64
  4044e9:	call   0x427a10
  4044ee:	lea    rcx,[rip+0x298ee]        # 0x42dde3
  4044f5:	xor    r8d,r8d
  4044f8:	mov    r15,rax
  4044fb:	mov    edx,0x64
  404500:	call   0x427a10
  404505:	mov    rcx,r15
  404508:	mov    rdx,rax
  40450b:	mov    QWORD PTR [rsp+0x30],rax
  404510:	call   0x42a420
  404515:	test   eax,eax
  404517:	je     0x40460e
  40451d:	lea    rcx,[rip+0x298d0]        # 0x42ddf4
  404524:	xor    edi,edi
  404526:	call   0x405d90
  40452b:	mov    r12,QWORD PTR [rip+0x503ae]        # 0x4548e0
  404532:	mov    rcx,r15
  404535:	call   0x42a4e8
  40453a:	mov    rcx,QWORD PTR [rsp+0x30]
  40453f:	call   0x42a4e8
  404544:	jmp    0x402dce
  404549:	mov    r12,QWORD PTR [rip+0x50390]        # 0x4548e0
  404550:	lea    r15,[rip+0x29de9]        # 0x42e340
  404557:	lea    r13,[rip+0x293fd]        # 0x42d95b
  40455e:	lea    rdi,[rip+0x293f2]        # 0x42d957
  404565:	lea    rax,[r12+0x28]
  40456a:	mov    QWORD PTR [rsp+0x38],rax
  40456f:	mov    rsi,QWORD PTR [r15]
  404572:	test   rsi,rsi
  404575:	je     0x4047a2
  40457b:	lea    rdx,[rip+0x29040]        # 0x42d5c2
  404582:	mov    rcx,rsi
  404585:	call   0x42a420
  40458a:	test   eax,eax
  40458c:	je     0x404788
  404592:	lea    rdx,[rip+0x290c0]        # 0x42d659
  404599:	mov    rcx,rsi
  40459c:	call   0x42a420
  4045a1:	test   eax,eax
  4045a3:	je     0x40473f
  4045a9:	lea    rdx,[rip+0x2901b]        # 0x42d5cb
  4045b0:	mov    rcx,rsi
  4045b3:	call   0x42a420
  4045b8:	test   eax,eax
  4045ba:	jne    0x40470c
  4045c0:	movzx  eax,WORD PTR [r12+0x2c]
  4045c6:	cmp    ax,0x2
  4045ca:	je     0x4046d4
  4045d0:	test   al,al
  4045d2:	mov    rcx,rdi
  4045d5:	cmovne rcx,r13
  4045d9:	call   0x4249c0
  4045de:	mov    r9,rax
  4045e1:	lea    rcx,[rip+0x29899]        # 0x42de81
  4045e8:	mov    r8,r9
  4045eb:	mov    rdx,rsi
  4045ee:	mov    QWORD PTR [rsp+0x40],r9
  4045f3:	add    r15,0x8
  4045f7:	call   0x4263a0
  4045fc:	mov    r9,QWORD PTR [rsp+0x40]
  404601:	mov    rcx,r9
  404604:	call   0x42a4e8
  404609:	jmp    0x40456f
  40460e:	xor    r8d,r8d
  404611:	mov    r9d,0x1
  404617:	mov    edx,0x1
  40461c:	mov    rcx,rbx
  40461f:	call   0x40cb10
  404624:	test   rax,rax
  404627:	mov    r13,rax
  40462a:	je     0x4046f4
  404630:	mov    r12,QWORD PTR [rip+0x502a9]        # 0x4548e0
  404637:	mov    rdi,rax
  40463a:	mov    rdx,rdi
  40463d:	mov    rcx,r15
  404640:	call   0x427f20
  404645:	test   rax,rax
  404648:	mov    rsi,rax
  40464b:	je     0x4046e4
  404651:	lea    r14,[rsp+0x80]
  404659:	mov    rcx,r14
  40465c:	call   0x427da8
  404661:	mov    rcx,rdi
  404664:	call   0x41d080
  404669:	lea    rdx,[rip+0x297ba]        # 0x42de2a
  404670:	mov    r8,rax
  404673:	mov    rcx,r14
  404676:	call   0x427d70
  40467b:	mov    r8,QWORD PTR [r12]
  40467f:	mov    rdx,rsi
  404682:	mov    rcx,r14
  404685:	call   0x41d330
  40468a:	mov    rcx,QWORD PTR [rsp+0x80]
  404692:	xor    edx,edx
  404694:	call   0x4062b0
  404699:	mov    rcx,r14
  40469c:	mov    rdi,rax
  40469f:	call   0x427d60
  4046a4:	test   rdi,rdi
  4046a7:	je     0x4046e0
  4046a9:	mov    rcx,rdi
  4046ac:	mov    edi,0x1
  4046b1:	call   0x427f68
  4046b6:	mov    rcx,rsi
  4046b9:	call   0x427ed0
  4046be:	test   r13,r13
  4046c1:	je     0x404532
  4046c7:	mov    rcx,r13
  4046ca:	call   0x42a4e8
  4046cf:	jmp    0x404532
  4046d4:	lea    rcx,[rip+0x28f02]        # 0x42d5dd
  4046db:	jmp    0x4045d9
  4046e0:	xor    edi,edi
  4046e2:	jmp    0x4046b6
  4046e4:	lea    rcx,[rip+0x29722]        # 0x42de0d
  4046eb:	xor    edi,edi
  4046ed:	call   0x405d90
  4046f2:	jmp    0x4046be
  4046f4:	mov    r12,QWORD PTR [rip+0x501e5]        # 0x4548e0
  4046fb:	mov    rcx,QWORD PTR [r12]
  4046ff:	call   0x427de8
  404704:	mov    rdi,rax
  404707:	jmp    0x40463a
  40470c:	lea    rdx,[rip+0x28ee2]        # 0x42d5f5
  404713:	mov    rcx,rsi
  404716:	call   0x42a420
  40471b:	test   eax,eax
  40471d:	jne    0x40475b
  40471f:	mov    rax,QWORD PTR [r12+0x48]
  404724:	lea    rcx,[rip+0x2896e]        # 0x42d099
  40472b:	test   rax,rax
  40472e:	cmovne rcx,rax
  404732:	call   0x42a830
  404737:	mov    r9,rax
  40473a:	jmp    0x4045e1
  40473f:	mov    edx,DWORD PTR [r12+0x80]
  404747:	lea    rcx,[rip+0x2972a]        # 0x42de78
  40474e:	call   0x424630
  404753:	mov    r9,rax
  404756:	jmp    0x4045e1
  40475b:	lea    rdx,[rip+0x28e9c]        # 0x42d5fe
  404762:	mov    rcx,rsi
  404765:	call   0x42a420
  40476a:	test   eax,eax
  40476c:	jne    0x4047ac
  40476e:	cmp    BYTE PTR [r12+0x50],0x0
  404774:	mov    rcx,rdi
  404777:	cmovne rcx,r13
  40477b:	call   0x4249c0
  404780:	mov    r9,rax
  404783:	jmp    0x4045e1
  404788:	movzx  edx,WORD PTR [r12+0x2e]
  40478e:	lea    rcx,[rip+0x296e3]        # 0x42de78
  404795:	call   0x424630
  40479a:	mov    r9,rax
  40479d:	jmp    0x4045e1
  4047a2:	mov    edi,0x1
  4047a7:	jmp    0x4043b1
  4047ac:	lea    rdx,[rip+0x28e9f]        # 0x42d652
  4047b3:	mov    rcx,rsi
  4047b6:	call   0x42a420
  4047bb:	test   eax,eax
  4047bd:	jne    0x404d6b
  4047c3:	cmp    BYTE PTR [r12+0x35],0x0
  4047c9:	mov    rcx,rdi
  4047cc:	cmovne rcx,r13
  4047d0:	call   0x4249c0
  4047d5:	mov    r9,rax
  4047d8:	jmp    0x4045e1
  4047dd:	lea    rcx,[rip+0x2957c]        # 0x42dd60
  4047e4:	mov    rdx,rbp
  4047e7:	mov    edi,0x2
  4047ec:	call   0x405d90
  4047f1:	xor    eax,eax
  4047f3:	jmp    0x404173
  4047f8:	mov    rcx,QWORD PTR [r14]
  4047fb:	call   0x42a468
  404800:	mov    r12,QWORD PTR [rip+0x500d9]        # 0x4548e0
  404807:	jmp    0x4041ff
  40480c:	lea    rdx,[rip+0x296a5]        # 0x42deb8
  404813:	mov    rcx,rbp
  404816:	call   0x42a420
  40481b:	test   eax,eax
  40481d:	je     0x404bed
  404823:	lea    rdx,[rip+0x296ad]        # 0x42ded7
  40482a:	mov    rcx,rbp
  40482d:	call   0x42a420
  404832:	test   eax,eax
  404834:	je     0x404984
  40483a:	lea    rdx,[rip+0x2969a]        # 0x42dedb
  404841:	mov    rcx,rbp
  404844:	call   0x42a420
  404849:	test   eax,eax
  40484b:	je     0x404912
  404851:	lea    rdx,[rip+0x296cb]        # 0x42df23
  404858:	mov    rcx,rbp
  40485b:	call   0x42a420
  404860:	test   eax,eax
  404862:	je     0x40487b
  404864:	lea    rdx,[rip+0x296bb]        # 0x42df26
  40486b:	mov    rcx,rbp
  40486e:	call   0x42a420
  404873:	test   eax,eax
  404875:	jne    0x404dc9
  40487b:	lea    rdx,[rip+0x296a4]        # 0x42df26
  404882:	mov    rcx,rbp
  404885:	call   0x42a420
  40488a:	mov    DWORD PTR [rsp+0x80],0x0
  404895:	mov    edi,eax
  404897:	call   0x427dc0
  40489c:	xor    r8d,r8d
  40489f:	mov    rcx,rbx
  4048a2:	mov    r9d,0x1
  4048a8:	mov    edx,0x4
  4048ad:	mov    rsi,rax
  4048b0:	call   0x40cb10
  4048b5:	mov    r12,QWORD PTR [rip+0x50024]        # 0x4548e0
  4048bc:	mov    r14,rax
  4048bf:	mov    ecx,DWORD PTR [r12+0xe4]
  4048c7:	cmp    ecx,0x13a0f
  4048cd:	jle    0x404c94
  4048d3:	test   rax,rax
  4048d6:	je     0x404c7e
  4048dc:	mov    rcx,QWORD PTR [r12]
  4048e0:	lea    r8,[rsp+0x80]
  4048e8:	mov    rdx,rax
  4048eb:	call   0x42a941
  4048f0:	test   al,al
  4048f2:	jne    0x404a35
  4048f8:	mov    edi,0x5
  4048fd:	mov    rcx,r14
  404900:	call   0x42a4e8
  404905:	mov    rcx,rsi
  404908:	call   0x427db8
  40490d:	jmp    0x403641
  404912:	xor    r9d,r9d
  404915:	xor    r8d,r8d
  404918:	xor    edx,edx
  40491a:	mov    rcx,rbx
  40491d:	call   0x40cb10
  404922:	xor    r9d,r9d
  404925:	mov    rsi,rax
  404928:	xor    r8d,r8d
  40492b:	xor    edx,edx
  40492d:	mov    rcx,rbx
  404930:	call   0x40cb10
  404935:	test   rsi,rsi
  404938:	mov    r12,rax
  40493b:	je     0x404cfc
  404941:	mov    edx,0x3d
  404946:	mov    rcx,rsi
  404949:	call   0x42a428
  40494e:	test   rax,rax
  404951:	je     0x404cd3
  404957:	lea    rcx,[rip+0x2958a]        # 0x42dee8
  40495e:	mov    rdx,rbp
  404961:	xor    edi,edi
  404963:	call   0x405d90
  404968:	mov    rcx,rsi
  40496b:	call   0x42a4e8
  404970:	mov    rcx,r12
  404973:	call   0x42a4e8
  404978:	mov    r12,QWORD PTR [rip+0x4ff61]        # 0x4548e0
  40497f:	jmp    0x402dce
  404984:	xor    r9d,r9d
  404987:	xor    r8d,r8d
  40498a:	xor    edx,edx
  40498c:	mov    rcx,rbx
  40498f:	call   0x40cb10
  404994:	test   rax,rax
  404997:	mov    r13,rax
  40499a:	je     0x404bd2
  4049a0:	xor    r9d,r9d
  4049a3:	xor    r8d,r8d
  4049a6:	xor    edx,edx
  4049a8:	mov    rcx,rbx
  4049ab:	call   0x40cb10
  4049b0:	lea    rcx,[rip+0x286e2]        # 0x42d099
  4049b7:	test   rax,rax
  4049ba:	mov    rdi,rax
  4049bd:	cmovne rcx,rax
  4049c1:	or     r15,0xffffffffffffffff
  4049c5:	xor    r14d,r14d
  4049c8:	call   0x424900
  4049cd:	mov    rcx,rdi
  4049d0:	mov    rsi,rax
  4049d3:	call   0x42a4e8
  4049d8:	xor    r9d,r9d
  4049db:	xor    r8d,r8d
  4049de:	xor    edx,edx
  4049e0:	mov    rcx,rbx
  4049e3:	call   0x40cb10
  4049e8:	test   rax,rax
  4049eb:	mov    r12,rax
  4049ee:	je     0x404b89
  4049f4:	mov    eax,r14d
  4049f7:	mov    rdi,rsi
  4049fa:	mov    rcx,r15
  4049fd:	repnz scas al,BYTE PTR es:[rdi]
  4049ff:	mov    rdi,r12
  404a02:	mov    rdx,rcx
  404a05:	mov    rcx,r15
  404a08:	repnz scas al,BYTE PTR es:[rdi]
  404a0a:	not    rdx
  404a0d:	not    rcx
  404a10:	lea    rdx,[rdx+rcx*1-0x1]
  404a15:	mov    rcx,rsi
  404a18:	call   0x4248b0
  404a1d:	mov    rdx,r12
  404a20:	mov    rcx,rax
  404a23:	mov    rsi,rax
  404a26:	call   0x42a430
  404a2b:	mov    rcx,r12
  404a2e:	call   0x42a4e8
  404a33:	jmp    0x4049d8
  404a35:	mov    edx,DWORD PTR [rsp+0x80]
  404a3c:	mov    rcx,QWORD PTR [r12]
  404a40:	mov    r8,rsi
  404a43:	call   0x42aa1a
  404a48:	test   al,al
  404a4a:	je     0x4048f8
  404a50:	mov    r13,QWORD PTR [r12+0x10]
  404a55:	call   QWORD PTR [rip+0x58159]        # 0x45cbb4
  404a5b:	add    rax,0x30
  404a5f:	cmp    r13,rax
  404a62:	je     0x404b16
  404a68:	mov    r13,QWORD PTR [r12+0x10]
  404a6d:	mov    BYTE PTR [rsp+0x38],0x0
  404a72:	test   edi,edi
  404a74:	jne    0x404aee
  404a76:	mov    r15,QWORD PTR [rsi]
  404a79:	mov    DWORD PTR [rsp+0x30],0x0
  404a81:	mov    eax,0x1
  404a86:	cmp    BYTE PTR [r15],0x0
  404a8a:	je     0x404af9
  404a8c:	test   al,al
  404a8e:	je     0x404aad
  404a90:	lea    rdx,[rip+0x2922f]        # 0x42dcc6
  404a97:	mov    r8d,0x3
  404a9d:	mov    rcx,r15
  404aa0:	call   0x42a3f8
  404aa5:	test   eax,eax
  404aa7:	jne    0x404b3a
  404aad:	mov    edx,0xa
  404ab2:	mov    rcx,r15
  404ab5:	add    DWORD PTR [rsp+0x30],0x1
  404aba:	call   0x42a428
  404abf:	test   rax,rax
  404ac2:	mov    rdi,rax
  404ac5:	je     0x404aca
  404ac7:	mov    BYTE PTR [rax],0x0
  404aca:	mov    r8d,DWORD PTR [rsp+0x30]
  404acf:	lea    rdx,[rip+0x294c7]        # 0x42df9d
  404ad6:	mov    r9,r15
  404ad9:	mov    rcx,r13
  404adc:	call   0x426370
  404ae1:	xor    eax,eax
  404ae3:	test   rdi,rdi
  404ae6:	je     0x404af9
  404ae8:	lea    r15,[rdi+0x1]
  404aec:	jmp    0x404a86
  404aee:	mov    rcx,QWORD PTR [rsi]
  404af1:	mov    rdx,r13
  404af4:	call   0x42a4f8
  404af9:	cmp    BYTE PTR [rsp+0x38],0x0
  404afe:	mov    edi,0x2
  404b03:	je     0x4048fd
  404b09:	mov    rcx,r13
  404b0c:	call   0x410290
  404b11:	jmp    0x4048fd
  404b16:	mov    rcx,QWORD PTR [rsi]
  404b19:	xor    r13d,r13d
  404b1c:	cmp    BYTE PTR [rcx],0x0
  404b1f:	je     0x404b6e
  404b21:	mov    edx,0xa
  404b26:	add    r13d,0x1
  404b2a:	call   0x42a428
  404b2f:	test   rax,rax
  404b32:	je     0x404b6e
  404b34:	lea    rcx,[rax+0x1]
  404b38:	jmp    0x404b1c
  404b3a:	mov    edx,0xa
  404b3f:	mov    rcx,r15
  404b42:	call   0x42a428
  404b47:	test   rax,rax
  404b4a:	mov    rdi,rax
  404b4d:	je     0x404b52
  404b4f:	mov    BYTE PTR [rax],0x0
  404b52:	lea    rdx,[rip+0x29438]        # 0x42df91
  404b59:	mov    r8,r15
  404b5c:	mov    rcx,r13
  404b5f:	call   0x426370
  404b64:	mov    eax,0x1
  404b69:	jmp    0x404ae3
  404b6e:	movzx  edx,WORD PTR [r12+0x30]
  404b74:	mov    ecx,r13d
  404b77:	call   0x410150
  404b7c:	mov    BYTE PTR [rsp+0x38],0x1
  404b81:	mov    r13,rax
  404b84:	jmp    0x404a72
  404b89:	mov    r12,QWORD PTR [rip+0x4fd50]        # 0x4548e0
  404b90:	mov    r8,rsi
  404b93:	mov    rdx,r13
  404b96:	mov    edi,0x1
  404b9b:	mov    rcx,QWORD PTR [r12+0x110]
  404ba3:	call   0x40ef10
  404ba8:	test   al,al
  404baa:	jne    0x404bbd
  404bac:	lea    rcx,[rip+0x2929d]        # 0x42de50
  404bb3:	mov    rdx,rbp
  404bb6:	xor    edi,edi
  404bb8:	call   0x405d90
  404bbd:	mov    rcx,rsi
  404bc0:	call   0x42a4e8
  404bc5:	mov    rcx,r13
  404bc8:	call   0x42a4e8
  404bcd:	jmp    0x402dce
  404bd2:	mov    r12,QWORD PTR [rip+0x4fd07]        # 0x4548e0
  404bd9:	mov    edi,0x1
  404bde:	mov    rcx,QWORD PTR [r12+0x110]
  404be6:	call   0x40ed40
  404beb:	jmp    0x404bc5
  404bed:	xor    r8d,r8d
  404bf0:	xor    edx,edx
  404bf2:	mov    r9d,0x1
  404bf8:	mov    rcx,rbx
  404bfb:	call   0x40cb10
  404c00:	lea    rcx,[rsp+0x80]
  404c08:	mov    QWORD PTR [rsp+0x80],rax
  404c10:	call   0x407980
  404c15:	mov    r12,QWORD PTR [rip+0x4fcc4]        # 0x4548e0
  404c1c:	mov    rcx,QWORD PTR [rsp+0x80]
  404c24:	movzx  edx,WORD PTR [r12+0x30]
  404c2a:	call   0x4087d0
  404c2f:	test   al,al
  404c31:	mov    edi,eax
  404c33:	je     0x404c5d
  404c35:	cmp    BYTE PTR [r12+0x11a],0x0
  404c3e:	jne    0x404c5d
  404c40:	mov    rdx,QWORD PTR [rsp+0x80]
  404c48:	test   rdx,rdx
  404c4b:	je     0x4051a0
  404c51:	lea    rcx,[rip+0x29262]        # 0x42deba
  404c58:	call   0x4263a0
  404c5d:	cmp    QWORD PTR [rsp+0x80],0x0
  404c66:	je     0x4051a0
  404c6c:	mov    rcx,QWORD PTR [rsp+0x80]
  404c74:	call   0x42a4e8
  404c79:	jmp    0x402dce
  404c7e:	lea    rcx,[rip+0x292f1]        # 0x42df76
  404c85:	mov    edi,0x5
  404c8a:	call   0x405d90
  404c8f:	jmp    0x404905
  404c94:	mov    eax,ecx
  404c96:	mov    r9d,0x64
  404c9c:	mov    edi,0x5
  404ca1:	cdq    
  404ca2:	idiv   r9d
  404ca5:	cdq    
  404ca6:	idiv   r9d
  404ca9:	mov    eax,ecx
  404cab:	mov    r9w,0x2710
  404cb0:	lea    rcx,[rip+0x29279]        # 0x42df30
  404cb7:	mov    r8d,edx
  404cba:	cdq    
  404cbb:	idiv   r9d
  404cbe:	mov    edx,eax
  404cc0:	call   0x405d90
  404cc5:	test   r14,r14
  404cc8:	jne    0x4048fd
  404cce:	jmp    0x404905
  404cd3:	test   r12,r12
  404cd6:	je     0x404d12
  404cd8:	lea    rcx,[rip+0x2923e]        # 0x42df1d
  404cdf:	mov    r8,r12
  404ce2:	mov    rdx,rsi
  404ce5:	mov    edi,0x1
  404cea:	call   0x424630
  404cef:	mov    rcx,rax
  404cf2:	call   0x425070
  404cf7:	jmp    0x404968
  404cfc:	lea    rcx,[rip+0x2905d]        # 0x42dd60
  404d03:	mov    rdx,rbp
  404d06:	xor    edi,edi
  404d08:	call   0x405d90
  404d0d:	jmp    0x404968
  404d12:	mov    rcx,rsi
  404d15:	mov    edi,0x1
  404d1a:	call   0x4250f0
  404d1f:	jmp    0x404968
  404d24:	lea    rdx,[rip+0x29057]        # 0x42dd82
  404d2b:	mov    rcx,rsi
  404d2e:	call   0x42a420
  404d33:	test   eax,eax
  404d35:	je     0x40523e
  404d3b:	lea    rdx,[rip+0x29060]        # 0x42dda2
  404d42:	mov    rcx,rsi
  404d45:	call   0x42a420
  404d4a:	test   eax,eax
  404d4c:	jne    0x404dbd
  404d4e:	mov    rcx,QWORD PTR [rsp+0x78]
  404d53:	test   rcx,rcx
  404d56:	je     0x4047dd
  404d5c:	call   0x40f530
  404d61:	mov    edi,0x2
  404d66:	jmp    0x404173
  404d6b:	lea    rdx,[rip+0x287a3]        # 0x42d515
  404d72:	mov    rcx,rsi
  404d75:	call   0x42a420
  404d7a:	test   eax,eax
  404d7c:	je     0x40529b
  404d82:	lea    rdx,[rip+0x28a15]        # 0x42d79e
  404d89:	mov    rcx,rsi
  404d8c:	call   0x42a420
  404d91:	test   eax,eax
  404d93:	je     0x40527a
  404d99:	lea    rdx,[rip+0x28850]        # 0x42d5f0
  404da0:	mov    rcx,rsi
  404da3:	call   0x42a420
  404da8:	test   eax,eax
  404daa:	jne    0x40524d
  404db0:	mov    rax,QWORD PTR [r12+0x88]
  404db8:	jmp    0x404724
  404dbd:	xor    edi,edi
  404dbf:	mov    eax,0x1
  404dc4:	jmp    0x404173
  404dc9:	lea    rdx,[rip+0x28855]        # 0x42d625
  404dd0:	mov    rcx,rbp
  404dd3:	call   0x42a420
  404dd8:	test   eax,eax
  404dda:	je     0x405157
  404de0:	lea    rdx,[rip+0x28852]        # 0x42d639
  404de7:	mov    rcx,rbp
  404dea:	call   0x42a420
  404def:	test   eax,eax
  404df1:	je     0x405119
  404df7:	lea    rdx,[rip+0x291a8]        # 0x42dfa6
  404dfe:	mov    rcx,rbp
  404e01:	call   0x42a420
  404e06:	test   eax,eax
  404e08:	je     0x40506f
  404e0e:	lea    rdx,[rip+0x291bd]        # 0x42dfd2
  404e15:	mov    rcx,rbp
  404e18:	call   0x42a420
  404e1d:	test   eax,eax
  404e1f:	je     0x405016
  404e25:	lea    rdx,[rip+0x282e4]        # 0x42d110
  404e2c:	mov    rcx,rbp
  404e2f:	call   0x42a420
  404e34:	test   eax,eax
  404e36:	je     0x404e4f
  404e38:	lea    rdx,[rip+0x29199]        # 0x42dfd8
  404e3f:	mov    rcx,rbp
  404e42:	call   0x42a420
  404e47:	test   eax,eax
  404e49:	jne    0x4051af
  404e4f:	test   r14,r14
  404e52:	mov    QWORD PTR [rsp+0x80],0x0
  404e5e:	je     0x404ffb
  404e64:	xor    r8d,r8d
  404e67:	mov    r9d,0x1
  404e6d:	mov    edx,0x3
  404e72:	mov    rcx,rbx
  404e75:	call   0x40cb10
  404e7a:	lea    rcx,[rsp+0x80]
  404e82:	mov    QWORD PTR [rsp+0x80],rax
  404e8a:	call   0x407980
  404e8f:	mov    rcx,QWORD PTR [rsp+0x80]
  404e97:	test   rcx,rcx
  404e9a:	je     0x404fe0
  404ea0:	cmp    BYTE PTR [rcx],0x7c
  404ea3:	je     0x404f67
  404ea9:	call   0x426d80
  404eae:	mov    rcx,QWORD PTR [rsp+0x80]
  404eb6:	lea    rdx,[rip+0x28253]        # 0x42d110
  404ebd:	xor    edi,edi
  404ebf:	call   0x42a510
  404ec4:	mov    rsi,rax
  404ec7:	test   rsi,rsi
  404eca:	je     0x404f1e
  404ecc:	cmp    QWORD PTR [r14+0x8],0x0
  404ed1:	je     0x404ee5
  404ed3:	mov    r8,QWORD PTR [r14]
  404ed6:	lea    rdx,[rip+0x29101]        # 0x42dfde
  404edd:	mov    rcx,rsi
  404ee0:	call   0x426370
  404ee5:	test   dil,dil
  404ee8:	mov    rcx,rsi
  404eeb:	je     0x404fd6
  404ef1:	call   QWORD PTR [rip+0x57d2d]        # 0x45cc24
  404ef7:	add    eax,0x1
  404efa:	je     0x404f99
  404f00:	mov    rcx,QWORD PTR [rsp+0x80]
  404f08:	mov    edi,0x2
  404f0d:	call   0x42a4e8
  404f12:	mov    r12,QWORD PTR [rip+0x4f9c7]        # 0x4548e0
  404f19:	jmp    0x40311a
  404f1e:	call   QWORD PTR [rip+0x57cc8]        # 0x45cbec
  404f24:	mov    ecx,DWORD PTR [rax]
  404f26:	mov    edi,0x2
  404f2b:	xor    esi,esi
  404f2d:	call   0x42a408
  404f32:	mov    rdx,QWORD PTR [rsp+0x80]
  404f3a:	lea    rcx,[rip+0x281d1]        # 0x42d112
  404f41:	mov    r8,rax
  404f44:	call   0x405d90
  404f49:	mov    rcx,QWORD PTR [rsp+0x80]
  404f51:	call   0x42a4e8
  404f56:	test   sil,sil
  404f59:	jne    0x404f84
  404f5b:	mov    r12,QWORD PTR [rip+0x4f97e]        # 0x4548e0
  404f62:	jmp    0x402de8
  404f67:	lea    rdx,[rip+0x281a2]        # 0x42d110
  404f6e:	add    rcx,0x1
  404f72:	mov    edi,0x1
  404f77:	call   0x424fe0
  404f7c:	mov    rsi,rax
  404f7f:	jmp    0x404ec7
  404f84:	mov    r12,QWORD PTR [rip+0x4f955]        # 0x4548e0
  404f8b:	cmp    edi,0x5
  404f8e:	jne    0x40311a
  404f94:	jmp    0x402de8
  404f99:	call   QWORD PTR [rip+0x57c4d]        # 0x45cbec
  404f9f:	mov    ecx,DWORD PTR [rax]
  404fa1:	call   0x42a408
  404fa6:	mov    rdx,QWORD PTR [rsp+0x80]
  404fae:	lea    rcx,[rip+0x2815d]        # 0x42d112
  404fb5:	mov    r8,rax
  404fb8:	call   0x405d90
  404fbd:	mov    rcx,QWORD PTR [rsp+0x80]
  404fc5:	call   0x42a4e8
  404fca:	mov    r12,QWORD PTR [rip+0x4f90f]        # 0x4548e0
  404fd1:	jmp    0x402de8
  404fd6:	call   0x42a538
  404fdb:	jmp    0x404ef7
  404fe0:	lea    rcx,[rip+0x28d79]        # 0x42dd60
  404fe7:	mov    rdx,rbp
  404fea:	mov    edi,0x2
  404fef:	xor    esi,esi
  404ff1:	call   0x405d90
  404ff6:	jmp    0x404f49
  404ffb:	lea    rcx,[rip+0x28c42]        # 0x42dc44
  405002:	mov    edi,0x5
  405007:	mov    esi,0x1
  40500c:	call   0x405d90
  405011:	jmp    0x404f49
  405016:	xor    r9d,r9d
  405019:	xor    r8d,r8d
  40501c:	xor    edx,edx
  40501e:	mov    rcx,rbx
  405021:	call   0x40cb10
  405026:	test   rax,rax
  405029:	mov    rsi,rax
  40502c:	je     0x4050d0
  405032:	mov    r12,QWORD PTR [rip+0x4f8a7]        # 0x4548e0
  405039:	xor    r8d,r8d
  40503c:	mov    rdx,rax
  40503f:	mov    edi,0x1
  405044:	mov    rcx,QWORD PTR [r12+0x110]
  40504c:	call   0x40ef10
  405051:	test   al,al
  405053:	jne    0x40448e
  405059:	lea    rcx,[rip+0x28df0]        # 0x42de50
  405060:	mov    rdx,rbp
  405063:	xor    edi,edi
  405065:	call   0x405d90
  40506a:	jmp    0x40448e
  40506f:	xor    r9d,r9d
  405072:	xor    r8d,r8d
  405075:	xor    edx,edx
  405077:	mov    rcx,rbx
  40507a:	call   0x40cb10
  40507f:	test   rax,rax
  405082:	mov    rsi,rax
  405085:	je     0x4050fe
  405087:	lea    rdx,[rip+0x28f1f]        # 0x42dfad
  40508e:	mov    rcx,rax
  405091:	call   0x40eb70
  405096:	mov    r12,QWORD PTR [rip+0x4f843]        # 0x4548e0
  40509d:	mov    BYTE PTR [r12+0x100],al
  4050a5:	cmp    BYTE PTR [r12+0x11a],0x0
  4050ae:	jne    0x403e5e
  4050b4:	cmp    BYTE PTR [r12+0x100],0x0
  4050bd:	je     0x4050ed
  4050bf:	lea    rcx,[rip+0x28eef]        # 0x42dfb5
  4050c6:	call   0x42a468
  4050cb:	jmp    0x403e5e
  4050d0:	lea    rcx,[rip+0x28c89]        # 0x42dd60
  4050d7:	mov    rdx,rbp
  4050da:	xor    edi,edi
  4050dc:	call   0x405d90
  4050e1:	mov    r12,QWORD PTR [rip+0x4f7f8]        # 0x4548e0
  4050e8:	jmp    0x40448e
  4050ed:	lea    rcx,[rip+0x28ecf]        # 0x42dfc3
  4050f4:	call   0x42a468
  4050f9:	jmp    0x403e5e
  4050fe:	mov    r12,QWORD PTR [rip+0x4f7db]        # 0x4548e0
  405105:	cmp    BYTE PTR [r12+0x100],0x0
  40510e:	sete   BYTE PTR [r12+0x100]
  405117:	jmp    0x4050a5
  405119:	xor    r9d,r9d
  40511c:	xor    r8d,r8d
  40511f:	xor    edx,edx
  405121:	mov    rcx,rbx
  405124:	call   0x40cb10
  405129:	mov    r12,QWORD PTR [rip+0x4f7b0]        # 0x4548e0
  405130:	lea    rcx,[rip+0x28504]        # 0x42d63b
  405137:	mov    rdx,rax
  40513a:	mov    rsi,rax
  40513d:	movsx  r9d,BYTE PTR [r12+0x11a]
  405146:	lea    r8,[r12+0x28]
  40514b:	call   0x402120
  405150:	mov    edi,eax
  405152:	jmp    0x40448e
  405157:	xor    r8d,r8d
  40515a:	xor    edx,edx
  40515c:	mov    rcx,rbx
  40515f:	mov    r9d,0x1
  405165:	call   0x40cb10
  40516a:	mov    r12,QWORD PTR [rip+0x4f76f]        # 0x4548e0
  405171:	lea    rcx,[rip+0x284af]        # 0x42d627
  405178:	mov    rsi,rax
  40517b:	mov    rdx,rax
  40517e:	movsx  r9d,BYTE PTR [r12+0x11a]
  405187:	lea    r8,[r12+0x28]
  40518c:	call   0x402120
  405191:	mov    rcx,rsi
  405194:	mov    edi,eax
  405196:	call   0x42a4e8
  40519b:	jmp    0x402dce
  4051a0:	mov    ecx,0xa
  4051a5:	call   0x42a470
  4051aa:	jmp    0x404c6c
  4051af:	lea    rdx,[rip+0x28e2c]        # 0x42dfe2
  4051b6:	mov    rcx,rbp
  4051b9:	call   0x42a420
  4051be:	test   eax,eax
  4051c0:	je     0x40540f
  4051c6:	lea    rdx,[rip+0x283fc]        # 0x42d5c9
  4051cd:	mov    rcx,rbp
  4051d0:	call   0x42a420
  4051d5:	test   eax,eax
  4051d7:	je     0x4053c6
  4051dd:	lea    rdx,[rip+0x28e04]        # 0x42dfe8
  4051e4:	mov    rcx,rbp
  4051e7:	call   0x42a420
  4051ec:	test   eax,eax
  4051ee:	je     0x405398
  4051f4:	lea    rdx,[rip+0x28def]        # 0x42dfea
  4051fb:	mov    rcx,rbp
  4051fe:	call   0x42a420
  405203:	test   eax,eax
  405205:	je     0x4052f4
  40520b:	lea    rdx,[rip+0x28df9]        # 0x42e00b
  405212:	mov    rcx,rbp
  405215:	call   0x42a420
  40521a:	test   eax,eax
  40521c:	mov    r12,QWORD PTR [rip+0x4f6bd]        # 0x4548e0
  405223:	jne    0x403649
  405229:	movzx  ecx,WORD PTR [r12+0x30]
  40522f:	mov    edi,0x2
  405234:	call   0x407c60
  405239:	jmp    0x40311a
  40523e:	call   0x40f600
  405243:	mov    edi,0x2
  405248:	jmp    0x404173
  40524d:	lea    rdx,[rip+0x2838e]        # 0x42d5e2
  405254:	mov    rcx,rsi
  405257:	call   0x42a420
  40525c:	test   eax,eax
  40525e:	jne    0x4052bc
  405260:	cmp    BYTE PTR [r12+0x68],0x0
  405266:	mov    rcx,rdi
  405269:	cmovne rcx,r13
  40526d:	call   0x4249c0
  405272:	mov    r9,rax
  405275:	jmp    0x4045e1
  40527a:	mov    rcx,QWORD PTR [rsp+0x38]
  40527f:	call   0x414730
  405284:	mov    rdx,QWORD PTR [rax]
  405287:	lea    rcx,[rip+0x27f8f]        # 0x42d21d
  40528e:	call   0x424630
  405293:	mov    r9,rax
  405296:	jmp    0x4045e1
  40529b:	mov    ecx,DWORD PTR [r12+0x28]
  4052a0:	call   0x401530
  4052a5:	lea    rcx,[rip+0x27f71]        # 0x42d21d
  4052ac:	mov    rdx,rax
  4052af:	call   0x424630
  4052b4:	mov    r9,rax
  4052b7:	jmp    0x4045e1
  4052bc:	lea    rdx,[rip+0x28382]        # 0x42d645
  4052c3:	mov    rcx,rsi
  4052c6:	call   0x42a420
  4052cb:	test   eax,eax
  4052cd:	je     0x4054a7
  4052d3:	lea    rdx,[rip+0x28332]        # 0x42d60c
  4052da:	mov    rcx,rsi
  4052dd:	call   0x42a420
  4052e2:	test   eax,eax
  4052e4:	jne    0x40547a
  4052ea:	mov    rax,QWORD PTR [r12+0x58]
  4052ef:	jmp    0x404724
  4052f4:	xor    r9d,r9d
  4052f7:	xor    r8d,r8d
  4052fa:	mov    edx,0x4
  4052ff:	mov    rcx,rbx
  405302:	call   0x40cb10
  405307:	test   rax,rax
  40530a:	mov    r12,rax
  40530d:	je     0x405344
  40530f:	mov    rcx,rax
  405312:	call   0x424f60
  405317:	mov    esi,eax
  405319:	add    esi,0x1
  40531c:	mov    edi,0x1
  405321:	and    esi,0xffffff7f
  405327:	jne    0x405337
  405329:	lea    rcx,[rip+0x28ccf]        # 0x42dfff
  405330:	xor    edi,edi
  405332:	call   0x405d90
  405337:	mov    rcx,r12
  40533a:	call   0x42a4e8
  40533f:	jmp    0x404053
  405344:	lea    rcx,[rip+0x28ca1]        # 0x42dfec
  40534b:	call   0x42a4d0
  405350:	test   rax,rax
  405353:	mov    rdx,rax
  405356:	jne    0x405375
  405358:	lea    rcx,[rip+0x28c93]        # 0x42dff2
  40535f:	call   0x42a4d0
  405364:	mov    rdx,rax
  405367:	test   rax,rax
  40536a:	lea    rax,[rip+0x285ed]        # 0x42d95e
  405371:	cmove  rdx,rax
  405375:	lea    rcx,[rip+0x28c7e]        # 0x42dffa
  40537c:	call   0x424630
  405381:	mov    rdi,rax
  405384:	mov    rcx,rax
  405387:	call   0x424f60
  40538c:	mov    rcx,rdi
  40538f:	mov    esi,eax
  405391:	call   0x42a4e8
  405396:	jmp    0x405319
  405398:	xor    r8d,r8d
  40539b:	xor    edx,edx
  40539d:	mov    r9d,0x1
  4053a3:	mov    rcx,rbx
  4053a6:	call   0x40cb10
  4053ab:	mov    rsi,rax
  4053ae:	mov    rcx,rax
  4053b1:	call   0x418470
  4053b6:	test   rsi,rsi
  4053b9:	mov    edi,eax
  4053bb:	jne    0x403545
  4053c1:	jmp    0x404053
  4053c6:	xor    r8d,r8d
  4053c9:	xor    edx,edx
  4053cb:	mov    rcx,rbx
  4053ce:	mov    r9d,0x1
  4053d4:	call   0x40cb10
  4053d9:	mov    r12,QWORD PTR [rip+0x4f500]        # 0x4548e0
  4053e0:	lea    rcx,[rip+0x281e4]        # 0x42d5cb
  4053e7:	mov    rsi,rax
  4053ea:	mov    rdx,rax
  4053ed:	movsx  r9d,BYTE PTR [r12+0x11a]
  4053f6:	lea    r8,[r12+0x28]
  4053fb:	call   0x402120
  405400:	mov    rcx,rsi
  405403:	mov    edi,eax
  405405:	call   0x42a4e8
  40540a:	jmp    0x402dce
  40540f:	xor    r8d,r8d
  405412:	xor    edx,edx
  405414:	mov    r9d,0x1
  40541a:	mov    rcx,rbx
  40541d:	call   0x40cb10
  405422:	test   rax,rax
  405425:	mov    rdi,rax
  405428:	je     0x4054c1
  40542e:	xor    edx,edx
  405430:	mov    rcx,rax
  405433:	mov    r8d,0xa
  405439:	call   0x42a3d0
  40543e:	mov    rcx,rdi
  405441:	mov    esi,eax
  405443:	test   eax,eax
  405445:	mov    eax,0x1
  40544a:	cmovle esi,eax
  40544d:	call   0x42a4e8
  405452:	mov    edx,esi
  405454:	mov    rcx,r14
  405457:	call   0x42aab6
  40545c:	mov    rcx,r14
  40545f:	mov    edi,eax
  405461:	call   0x427d68
  405466:	mov    rcx,rbx
  405469:	call   0x40ca60
  40546e:	mov    r12,QWORD PTR [rip+0x4f46b]        # 0x4548e0
  405475:	jmp    0x402dce
  40547a:	lea    rdx,[rip+0x28195]        # 0x42d616
  405481:	mov    rcx,rsi
  405484:	call   0x42a420
  405489:	test   eax,eax
  40548b:	jne    0x4054c8
  40548d:	cmp    BYTE PTR [r12+0x60],0x0
  405493:	mov    rcx,rdi
  405496:	cmovne rcx,r13
  40549a:	call   0x4249c0
  40549f:	mov    r9,rax
  4054a2:	jmp    0x4045e1
  4054a7:	movzx  edx,WORD PTR [r12+0x30]
  4054ad:	lea    rcx,[rip+0x289c4]        # 0x42de78
  4054b4:	call   0x424630
  4054b9:	mov    r9,rax
  4054bc:	jmp    0x4045e1
  4054c1:	mov    esi,0x2
  4054c6:	jmp    0x405452
  4054c8:	lea    rdx,[rip+0x2816c]        # 0x42d63b
  4054cf:	mov    rcx,rsi
  4054d2:	call   0x42a420
  4054d7:	test   eax,eax
  4054d9:	jne    0x4055d2
  4054df:	mov    rcx,QWORD PTR [r12+0x70]
  4054e4:	test   rcx,rcx
  4054e7:	jne    0x404732
  4054ed:	lea    rcx,[rip+0x27ba5]        # 0x42d099
  4054f4:	call   0x4249c0
  4054f9:	mov    r9,rax
  4054fc:	jmp    0x4045e1
  405501:	lea    rcx,[rip+0x287e8]        # 0x42dcf0
  405508:	mov    rdx,rsi
  40550b:	call   0x405d90
  405510:	jmp    0x403e5e
  405515:	mov    edx,DWORD PTR [rsp+0x80]
  40551c:	mov    rcx,QWORD PTR [r12]
  405520:	mov    r8,r14
  405523:	call   0x42aa1a
  405528:	test   al,al
  40552a:	je     0x403013
  405530:	test   r13d,r13d
  405533:	jle    0x405573
  405535:	mov    r8,QWORD PTR [r14]
  405538:	cmp    BYTE PTR [r8],0x0
  40553c:	jne    0x405560
  40553e:	jmp    0x405573
  405540:	mov    edx,0xa
  405545:	mov    rcx,r8
  405548:	add    r13d,0x1
  40554c:	call   0x42a428
  405551:	test   rax,rax
  405554:	je     0x405573
  405556:	cmp    BYTE PTR [rax+0x1],0x0
  40555a:	lea    r8,[rax+0x1]
  40555e:	je     0x405573
  405560:	lea    rdi,[rip+0x2875f]        # 0x42dcc6
  405567:	mov    rsi,r8
  40556a:	mov    ecx,0x3
  40556f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405571:	jne    0x405540
  405573:	mov    rcx,r15
  405576:	mov    edi,0x2
  40557b:	call   0x42a4e8
  405580:	mov    r9,QWORD PTR [rsp+0x30]
  405585:	xor    ecx,ecx
  405587:	mov    r8d,r13d
  40558a:	mov    rdx,r14
  40558d:	mov    BYTE PTR [rsp+0x80],0x0
  405595:	call   0x401680
  40559a:	test   al,al
  40559c:	je     0x402de8
  4055a2:	cmp    BYTE PTR [rsp+0x80],0x0
  4055aa:	je     0x405628
  4055ac:	mov    edi,0x4
  4055b1:	jmp    0x40311a
  4055b6:	mov    ecx,DWORD PTR [r12+0x8]
  4055bb:	mov    edi,0x2
  4055c0:	call   0x427d80
  4055c5:	mov    rcx,rax
  4055c8:	call   0x42a468
  4055cd:	jmp    0x40311a
  4055d2:	lea    rdx,[rip+0x2805a]        # 0x42d633
  4055d9:	mov    rcx,rsi
  4055dc:	call   0x42a420
  4055e1:	test   eax,eax
  4055e3:	jne    0x4055fb
  4055e5:	mov    rcx,QWORD PTR [r12+0x98]
  4055ed:	test   rcx,rcx
  4055f0:	jne    0x404732
  4055f6:	jmp    0x4054ed
  4055fb:	lea    rdx,[rip+0x28025]        # 0x42d627
  405602:	mov    rcx,rsi
  405605:	call   0x42a420
  40560a:	test   eax,eax
  40560c:	jne    0x405639
  40560e:	cmp    BYTE PTR [r12+0x32],0x0
  405614:	mov    rcx,rdi
  405617:	cmovne rcx,r13
  40561b:	call   0x4249c0
  405620:	mov    r9,rax
  405623:	jmp    0x4045e1
  405628:	lea    rcx,[rip+0x2869b]        # 0x42dcca
  40562f:	call   0x42a468
  405634:	jmp    0x40311a
  405639:	lea    rcx,[rip+0x2883b]        # 0x42de7b
  405640:	jmp    0x4045d9
  405645:	lea    rcx,[rip+0x2851c]        # 0x42db68
  40564c:	call   0x405d90
  405651:	mov    ecx,0x1
  405656:	call   0x42a540
  40565b:	lea    rdx,[rip+0x28a4e]        # 0x42e0b0
  405662:	mov    rcx,r14
  405665:	or     r13d,0xffffffff
  405669:	mov    edi,0x2
  40566e:	call   0x427d70
  405673:	lea    rax,[rsp+0x80]
  40567b:	mov    QWORD PTR [rsp+0x30],rax
  405680:	jmp    0x405580
  405685:	lea    rcx,[rip+0x285b8]        # 0x42dc44
  40568c:	call   0x405d90
  405691:	jmp    0x402de8
  405696:	call   QWORD PTR [rip+0x57550]        # 0x45cbec
  40569c:	mov    ecx,DWORD PTR [rax]
  40569e:	xor    edi,edi
  4056a0:	call   0x42a408
  4056a5:	lea    rcx,[rip+0x28454]        # 0x42db00
  4056ac:	mov    r9,rax
  4056af:	mov    r8,rsi
  4056b2:	mov    rdx,rbp
  4056b5:	call   0x405d90
  4056ba:	jmp    0x403545
  4056bf:	test   sil,sil
  4056c2:	mov    rcx,r12
  4056c5:	je     0x40571c
  4056c7:	call   0x41c650
  4056cc:	test   r12,r12
  4056cf:	mov    edi,0x2
  4056d4:	je     0x405708
  4056d6:	mov    rcx,r12
  4056d9:	mov    BYTE PTR [rsp+0x30],al
  4056dd:	call   0x42a4e8
  4056e2:	movzx  eax,BYTE PTR [rsp+0x30]
  4056e7:	jmp    0x404193
  4056ec:	mov    r9d,edi
  4056ef:	mov    r8d,esi
  4056f2:	lea    rcx,[rip+0x2853a]        # 0x42dc33
  4056f9:	and    r9d,0x1
  4056fd:	and    r8d,0x1
  405701:	xor    edx,edx
  405703:	call   0x419840
  405708:	test   al,al
  40570a:	mov    r12,QWORD PTR [rip+0x4f1cf]        # 0x4548e0
  405711:	je     0x402de8
  405717:	jmp    0x4030f2
  40571c:	call   0x41c4a0
  405721:	jmp    0x4056cc
  405723:	movzx  edx,sil
  405727:	mov    rcx,r12
  40572a:	call   0x418f70
  40572f:	jmp    0x4056cc
  405731:	cmp    BYTE PTR [rbp+0x2],0x64
  405735:	je     0x405790
  405737:	test   r12,r12
  40573a:	je     0x404f5b
  405740:	mov    edi,0x2
  405745:	xor    eax,eax
  405747:	jmp    0x4056d6
  405749:	mov    rcx,r12
  40574c:	call   0x418470
  405751:	jmp    0x4056cc
  405756:	mov    r8d,edi
  405759:	movzx  edx,sil
  40575d:	mov    rcx,r12
  405760:	and    r8d,0x1
  405764:	call   0x41aa70
  405769:	jmp    0x4056cc
  40576e:	call   0x40f600
  405773:	jmp    0x4056cc
  405778:	mov    r8d,edi
  40577b:	movzx  edx,sil
  40577f:	mov    rcx,r12
  405782:	and    r8d,0x1
  405786:	call   0x418050
  40578b:	jmp    0x4056cc
  405790:	cmp    BYTE PTR [rbp+0x3],0x73
  405794:	jne    0x405737
  405796:	test   r12,r12
  405799:	je     0x405a3f
  40579f:	mov    r9d,0x1
  4057a5:	xor    r8d,r8d
  4057a8:	xor    edx,edx
  4057aa:	mov    rcx,rbx
  4057ad:	call   0x40cb10
  4057b2:	mov    rdx,rax
  4057b5:	mov    rcx,r12
  4057b8:	call   0x419660
  4057bd:	jmp    0x4056cc
  4057c2:	movzx  edx,sil
  4057c6:	mov    rcx,r12
  4057c9:	call   0x41a400
  4057ce:	jmp    0x4056cc
  4057d3:	mov    r8d,edi
  4057d6:	movzx  edx,sil
  4057da:	mov    rcx,r12
  4057dd:	and    r8d,0x1
  4057e1:	call   0x41a830
  4057e6:	jmp    0x4056cc
  4057eb:	mov    r8d,edi
  4057ee:	movzx  edx,sil
  4057f2:	mov    rcx,r12
  4057f5:	and    r8d,0x1
  4057f9:	call   0x419d80
  4057fe:	jmp    0x4056cc
  405803:	movzx  eax,BYTE PTR [rbp+0x2]
  405807:	cmp    al,0x64
  405809:	je     0x405877
  40580b:	jle    0x40585a
  40580d:	cmp    al,0x70
  40580f:	je     0x405849
  405811:	cmp    al,0x74
  405813:	jne    0x4058ef
  405819:	movzx  edx,sil
  40581d:	mov    rcx,r12
  405820:	call   0x41b500
  405825:	jmp    0x4056cc
  40582a:	mov    r9d,edi
  40582d:	mov    r8d,esi
  405830:	lea    rcx,[rbp+0x1]
  405834:	and    r9d,0x1
  405838:	and    r8d,0x1
  40583c:	mov    rdx,r12
  40583f:	call   0x419840
  405844:	jmp    0x4056cc
  405849:	movzx  edx,sil
  40584d:	mov    rcx,r12
  405850:	call   0x41ac30
  405855:	jmp    0x4056cc
  40585a:	test   al,al
  40585c:	je     0x405866
  40585e:	cmp    al,0x2b
  405860:	jne    0x4058ef
  405866:	movzx  edx,sil
  40586a:	mov    rcx,r12
  40586d:	call   0x41b710
  405872:	jmp    0x4056cc
  405877:	movzx  edx,sil
  40587b:	mov    rcx,r12
  40587e:	call   0x41b310
  405883:	jmp    0x4056cc
  405888:	mov    r8d,edi
  40588b:	movzx  edx,sil
  40588f:	mov    rcx,r12
  405892:	and    r8d,0x1
  405896:	call   0x419fa0
  40589b:	jmp    0x4056cc
  4058a0:	movzx  edx,sil
  4058a4:	mov    rcx,r12
  4058a7:	call   0x41a5e0
  4058ac:	jmp    0x4056cc
  4058b1:	test   r12,r12
  4058b4:	je     0x4056ec
  4058ba:	mov    r8d,edi
  4058bd:	movzx  edx,sil
  4058c1:	mov    rcx,r12
  4058c4:	and    r8d,0x1
  4058c8:	mov    edi,0x2
  4058cd:	call   0x418d80
  4058d2:	jmp    0x4056d6
  4058d7:	cmp    al,0x74
  4058d9:	je     0x405a20
  4058df:	cmp    al,0x77
  4058e1:	je     0x405a20
  4058e7:	cmp    al,0x6e
  4058e9:	je     0x405a20
  4058ef:	test   r12,r12
  4058f2:	je     0x405900
  4058f4:	xor    edi,edi
  4058f6:	mov    eax,0x1
  4058fb:	jmp    0x4056d6
  405900:	mov    r12,QWORD PTR [rip+0x4efd9]        # 0x4548e0
  405907:	jmp    0x403649
  40590c:	mov    r8d,edi
  40590f:	movzx  edx,sil
  405913:	mov    rcx,r12
  405916:	and    r8d,0x1
  40591a:	call   0x41a1f0
  40591f:	jmp    0x4056cc
  405924:	movzx  edx,sil
  405928:	mov    rcx,r12
  40592b:	call   0x417520
  405930:	jmp    0x4056cc
  405935:	mov    r8d,edi
  405938:	movzx  edx,sil
  40593c:	mov    rcx,r12
  40593f:	and    r8d,0x1
  405943:	call   0x417350
  405948:	jmp    0x4056cc
  40594d:	mov    r8d,edi
  405950:	movzx  edx,sil
  405954:	mov    rcx,r12
  405957:	and    r8d,0x1
  40595b:	call   0x417db0
  405960:	jmp    0x4056cc
  405965:	movzx  eax,BYTE PTR [rbp+0x2]
  405969:	cmp    al,0x74
  40596b:	je     0x4059f1
  405971:	jle    0x4059d8
  405973:	cmp    al,0x75
  405975:	je     0x4059b6
  405977:	cmp    al,0x77
  405979:	jne    0x4058ef
  40597f:	movzx  edx,sil
  405983:	mov    rcx,r12
  405986:	call   0x41bc20
  40598b:	jmp    0x4056cc
  405990:	lea    rdx,[rip+0x282a2]        # 0x42dc39
  405997:	mov    r8d,0x3
  40599d:	mov    rcx,rbp
  4059a0:	call   0x42a3f8
  4059a5:	test   eax,eax
  4059a7:	jne    0x4059c7
  4059a9:	mov    rcx,r12
  4059ac:	call   0x418670
  4059b1:	jmp    0x4056cc
  4059b6:	movzx  edx,sil
  4059ba:	mov    rcx,r12
  4059bd:	call   0x41c0d0
  4059c2:	jmp    0x4056cc
  4059c7:	movzx  edx,dil
  4059cb:	mov    rcx,r12
  4059ce:	call   0x4188d0
  4059d3:	jmp    0x4056cc
  4059d8:	cmp    al,0x73
  4059da:	jne    0x4058ef
  4059e0:	movzx  edx,sil
  4059e4:	mov    rcx,r12
  4059e7:	call   0x41bea0
  4059ec:	jmp    0x4056cc
  4059f1:	movzx  edx,sil
  4059f5:	mov    rcx,r12
  4059f8:	call   0x41c2a0
  4059fd:	jmp    0x4056cc
  405a02:	movzx  eax,BYTE PTR [rbp+0x2]
  405a06:	cmp    al,0x61
  405a08:	je     0x405a20
  405a0a:	jg     0x4058d7
  405a10:	cmp    al,0x2b
  405a12:	je     0x405a20
  405a14:	cmp    al,0x53
  405a16:	je     0x405a20
  405a18:	test   al,al
  405a1a:	jne    0x4058ef
  405a20:	mov    r9d,edi
  405a23:	mov    r8d,esi
  405a26:	lea    rcx,[rbp+0x2]
  405a2a:	and    r9d,0x1
  405a2e:	and    r8d,0x1
  405a32:	mov    rdx,r12
  405a35:	call   0x417780
  405a3a:	jmp    0x4056cc
  405a3f:	xor    eax,eax
  405a41:	jmp    0x4057b2
  405a46:	nop
  405a47:	nop
  405a48:	nop
  405a49:	nop
  405a4a:	nop
  405a4b:	nop
  405a4c:	nop
  405a4d:	nop
  405a4e:	nop
  405a4f:	nop
  405a50:	push   r13
  405a52:	push   r12
  405a54:	push   rbp
  405a55:	push   rdi
  405a56:	push   rsi
  405a57:	push   rbx
  405a58:	sub    rsp,0x28
  405a5c:	xor    r13d,r13d
  405a5f:	movzx  eax,BYTE PTR [rcx]
  405a62:	mov    rbp,QWORD PTR [rip+0x4ee77]        # 0x4548e0
  405a69:	mov    rbx,rcx
  405a6c:	mov    r12,QWORD PTR [rip+0x57299]        # 0x45cd0c
  405a73:	jmp    0x405a86
  405a75:	test   r13d,r13d
  405a78:	jle    0x405ac0
  405a7a:	cmp    dil,0x2a
  405a7e:	je     0x405ae0
  405a80:	add    rbx,rsi
  405a83:	movzx  eax,BYTE PTR [rbx]
  405a86:	test   al,al
  405a88:	je     0x405acb
  405a8a:	mov    edx,DWORD PTR [rbp+0x8]
  405a8d:	mov    rcx,rbx
  405a90:	call   0x427e88
  405a95:	movzx  ecx,BYTE PTR [rbx]
  405a98:	movsxd rsi,eax
  405a9b:	mov    edi,ecx
  405a9d:	call   r12
  405aa0:	test   eax,eax
  405aa2:	jne    0x405a80
  405aa4:	cmp    dil,0x2f
  405aa8:	jne    0x405a75
  405aaa:	cmp    BYTE PTR [rbx+0x1],0x2a
  405aae:	je     0x405b40
  405ab4:	test   r13d,r13d
  405ab7:	jg     0x405a80
  405ab9:	nop    DWORD PTR [rax+0x0]
  405ac0:	test   r13d,r13d
  405ac3:	jne    0x405acb
  405ac5:	cmp    dil,0x2d
  405ac9:	je     0x405af4
  405acb:	mov    rax,rbx
  405ace:	add    rsp,0x28
  405ad2:	pop    rbx
  405ad3:	pop    rsi
  405ad4:	pop    rdi
  405ad5:	pop    rbp
  405ad6:	pop    r12
  405ad8:	pop    r13
  405ada:	ret    
  405adb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ae0:	cmp    BYTE PTR [rbx+0x1],0x2f
  405ae4:	jne    0x405a80
  405ae6:	movzx  eax,BYTE PTR [rbx+0x2]
  405aea:	sub    r13d,0x1
  405aee:	add    rbx,0x2
  405af2:	jmp    0x405a86
  405af4:	cmp    BYTE PTR [rbx+0x1],0x2d
  405af8:	jne    0x405acb
  405afa:	movzx  eax,BYTE PTR [rbx+0x2]
  405afe:	lea    rdx,[rbx+0x2]
  405b02:	test   al,al
  405b04:	je     0x405b56
  405b06:	cmp    al,0xa
  405b08:	mov    rbx,rdx
  405b0b:	je     0x405b51
  405b0d:	nop    DWORD PTR [rax]
  405b10:	mov    edx,DWORD PTR [rbp+0x8]
  405b13:	mov    rcx,rbx
  405b16:	call   0x427e88
  405b1b:	cdqe   
  405b1d:	add    rbx,rax
  405b20:	movzx  eax,BYTE PTR [rbx]
  405b23:	test   al,al
  405b25:	je     0x405acb
  405b27:	cmp    al,0xa
  405b29:	jne    0x405b10
  405b2b:	movzx  eax,BYTE PTR [rbx+0x1]
  405b2f:	add    rbx,0x1
  405b33:	jmp    0x405a86
  405b38:	nop    DWORD PTR [rax+rax*1+0x0]
  405b40:	movzx  eax,BYTE PTR [rbx+0x2]
  405b44:	add    r13d,0x1
  405b48:	add    rbx,0x2
  405b4c:	jmp    0x405a86
  405b51:	mov    rbx,rdx
  405b54:	jmp    0x405b2b
  405b56:	mov    rbx,rdx
  405b59:	jmp    0x405acb
  405b5e:	xchg   ax,ax
  405b60:	push   rdi
  405b61:	push   rsi
  405b62:	push   rbx
  405b63:	sub    rsp,0x30
  405b67:	mov    rbx,QWORD PTR [rip+0x4ed72]        # 0x4548e0
  405b6e:	mov    rsi,rcx
  405b71:	cmp    BYTE PTR [rbx+0x11a],0x0
  405b78:	jne    0x405b9c
  405b7a:	cmp    DWORD PTR [rbx+0x28],0x4
  405b7e:	je     0x405c10
  405b84:	call   0x427f58
  405b89:	mov    rcx,QWORD PTR [rbx+0x10]
  405b8d:	lea    rdx,[rip+0x28876]        # 0x42e40a
  405b94:	mov    r8,rax
  405b97:	call   0x426370
  405b9c:	cmp    QWORD PTR [rbx+0x108],0x0
  405ba4:	je     0x405bc4
  405ba6:	mov    rcx,rsi
  405ba9:	call   0x427f58
  405bae:	mov    rcx,QWORD PTR [rbx+0x108]
  405bb5:	lea    rdx,[rip+0x2884e]        # 0x42e40a
  405bbc:	mov    r8,rax
  405bbf:	call   0x426370
  405bc4:	mov    rcx,rsi
  405bc7:	lea    rsi,[rsp+0x20]
  405bcc:	call   0x427e68
  405bd1:	lea    r8,[rip+0x28836]        # 0x42e40e
  405bd8:	mov    r9d,eax
  405bdb:	mov    rcx,rsi
  405bde:	mov    edx,0x10
  405be3:	call   0x426220
  405be8:	mov    rcx,QWORD PTR [rbx+0x110]
  405bef:	lea    rdx,[rip+0x2881b]        # 0x42e411
  405bf6:	mov    r8,rsi
  405bf9:	call   0x40ef10
  405bfe:	nop
  405bff:	add    rsp,0x30
  405c03:	pop    rbx
  405c04:	pop    rsi
  405c05:	pop    rdi
  405c06:	ret    
  405c07:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	mov    r9,QWORD PTR [rbx+0x10]
  405c14:	lea    rcx,[rip+0x287e5]        # 0x42e400
  405c1b:	mov    r8d,0x3
  405c21:	mov    edx,0x1
  405c26:	call   0x42a4e0
  405c2b:	mov    rdi,QWORD PTR [rbx+0x10]
  405c2f:	mov    rcx,rsi
  405c32:	call   0x427f58
  405c37:	mov    rcx,rax
  405c3a:	mov    rdx,rdi
  405c3d:	call   0x40fff0
  405c42:	mov    r9,QWORD PTR [rbx+0x10]
  405c46:	lea    rcx,[rip+0x287b7]        # 0x42e404
  405c4d:	mov    r8d,0x5
  405c53:	mov    edx,0x1
  405c58:	call   0x42a4e0
  405c5d:	jmp    0x405b9c
  405c62:	nop    DWORD PTR [rax+0x0]
  405c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c70:	push   rbp
  405c71:	push   rdi
  405c72:	push   rsi
  405c73:	push   rbx
  405c74:	sub    rsp,0x128
  405c7b:	xor    eax,eax
  405c7d:	cmp    ecx,0x1
  405c80:	jbe    0x405c90
  405c82:	add    rsp,0x128
  405c89:	pop    rbx
  405c8a:	pop    rsi
  405c8b:	pop    rdi
  405c8c:	pop    rbp
  405c8d:	ret    
  405c8e:	xchg   ax,ax
  405c90:	mov    rax,QWORD PTR [rip+0x4eb79]        # 0x454810
  405c97:	lea    rcx,[rip+0x543c2]        # 0x45a060
  405c9e:	mov    BYTE PTR [rax],0x1
  405ca1:	call   QWORD PTR [rip+0x56d85]        # 0x45ca2c
  405ca7:	mov    rax,QWORD PTR [rip+0x543da]        # 0x45a088
  405cae:	test   rax,rax
  405cb1:	je     0x405cf5
  405cb3:	mov    rcx,QWORD PTR [rip+0x543ce]        # 0x45a088
  405cba:	lea    rsi,[rsp+0x20]
  405cbf:	mov    r8d,0x100
  405cc5:	mov    rdx,rsi
  405cc8:	call   0x427f70
  405ccd:	test   eax,eax
  405ccf:	je     0x405d13
  405cd1:	call   QWORD PTR [rip+0x56edd]        # 0x45cbb4
  405cd7:	lea    rcx,[rax+0x60]
  405cdb:	call   0x42a368
  405ce0:	mov    r8d,0x14
  405ce6:	lea    rdx,[rip+0x2872c]        # 0x42e419
  405ced:	mov    ecx,eax
  405cef:	call   QWORD PTR [rip+0x56f5f]        # 0x45cc54
  405cf5:	lea    rcx,[rip+0x54364]        # 0x45a060
  405cfc:	call   QWORD PTR [rip+0x56db2]        # 0x45cab4
  405d02:	mov    eax,0x1
  405d07:	add    rsp,0x128
  405d0e:	pop    rbx
  405d0f:	pop    rsi
  405d10:	pop    rdi
  405d11:	pop    rbp
  405d12:	ret    
  405d13:	mov    rbp,QWORD PTR [rip+0x56e9a]        # 0x45cbb4
  405d1a:	mov    rbx,rsi
  405d1d:	call   rbp
  405d1f:	lea    rcx,[rax+0x60]
  405d23:	call   0x42a368
  405d28:	mov    r8d,0x1f
  405d2e:	lea    rdx,[rip+0x286fb]        # 0x42e430
  405d35:	mov    ecx,eax
  405d37:	mov    rdi,QWORD PTR [rip+0x56f16]        # 0x45cc54
  405d3e:	call   rdi
  405d40:	mov    edx,DWORD PTR [rbx]
  405d42:	add    rbx,0x4
  405d46:	lea    eax,[rdx-0x1010101]
  405d4c:	not    edx
  405d4e:	and    eax,edx
  405d50:	and    eax,0x80808080
  405d55:	je     0x405d40
  405d57:	mov    edx,eax
  405d59:	shr    edx,0x10
  405d5c:	test   eax,0x8080
  405d61:	cmove  eax,edx
  405d64:	lea    rdx,[rbx+0x2]
  405d68:	cmove  rbx,rdx
  405d6c:	add    al,al
  405d6e:	sbb    rbx,0x3
  405d72:	call   rbp
  405d74:	lea    rcx,[rax+0x60]
  405d78:	sub    rbx,rsi
  405d7b:	call   0x42a368
  405d80:	mov    r8d,ebx
  405d83:	mov    rdx,rsi
  405d86:	mov    ecx,eax
  405d88:	call   rdi
  405d8a:	jmp    0x405cf5
  405d8f:	nop
  405d90:	push   r12
  405d92:	push   rbp
  405d93:	push   rdi
  405d94:	push   rsi
  405d95:	push   rbx
  405d96:	sub    rsp,0x40
  405d9a:	mov    rsi,QWORD PTR [rip+0x56e13]        # 0x45cbb4
  405da1:	mov    QWORD PTR [rsp+0x78],rdx
  405da6:	mov    QWORD PTR [rsp+0x80],r8
  405dae:	mov    rdi,rcx
  405db1:	mov    QWORD PTR [rsp+0x88],r9
  405db9:	call   rsi
  405dbb:	lea    rcx,[rax+0x30]
  405dbf:	call   0x42a520
  405dc4:	mov    rbx,QWORD PTR [rip+0x4eb15]        # 0x4548e0
  405dcb:	mov    rbp,QWORD PTR [rbx+0x10]
  405dcf:	test   rbp,rbp
  405dd2:	je     0x405de8
  405dd4:	call   rsi
  405dd6:	add    rax,0x30
  405dda:	cmp    rbp,rax
  405ddd:	je     0x405de8
  405ddf:	mov    rcx,QWORD PTR [rbx+0x10]
  405de3:	call   0x42a520
  405de8:	mov    rbp,QWORD PTR [rbx+0xf0]
  405def:	test   rbp,rbp
  405df2:	je     0x405e1f
  405df4:	mov    r12,QWORD PTR [rbx+0xf8]
  405dfb:	mov    rbx,QWORD PTR [rbx+0xe8]
  405e02:	call   rsi
  405e04:	lea    rdx,[rip+0x28645]        # 0x42e450
  405e0b:	lea    rcx,[rax+0x60]
  405e0f:	mov    r9,rbp
  405e12:	mov    QWORD PTR [rsp+0x20],r12
  405e17:	mov    r8,rbx
  405e1a:	call   0x426370
  405e1f:	lea    rbx,[rsp+0x78]
  405e24:	mov    QWORD PTR [rsp+0x38],rbx
  405e29:	call   rsi
  405e2b:	lea    rcx,[rax+0x60]
  405e2f:	mov    r8,rbx
  405e32:	mov    rdx,rdi
  405e35:	call   0x4262f0
  405e3a:	nop
  405e3b:	add    rsp,0x40
  405e3f:	pop    rbx
  405e40:	pop    rsi
  405e41:	pop    rdi
  405e42:	pop    rbp
  405e43:	pop    r12
  405e45:	ret    
  405e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e50:	push   rbp
  405e51:	push   rdi
  405e52:	push   rsi
  405e53:	push   rbx
  405e54:	sub    rsp,0x28
  405e58:	mov    rbx,QWORD PTR [rip+0x4ea81]        # 0x4548e0
  405e5f:	mov    rsi,rcx
  405e62:	mov    rdi,QWORD PTR [rbx+0x10]
  405e66:	test   rdi,rdi
  405e69:	je     0x405ea0
  405e6b:	mov    rbp,QWORD PTR [rip+0x56d42]        # 0x45cbb4
  405e72:	call   rbp
  405e74:	add    rax,0x30
  405e78:	cmp    rdi,rax
  405e7b:	je     0x405ea0
  405e7d:	mov    rdi,QWORD PTR [rbx+0x10]
  405e81:	call   rbp
  405e83:	add    rax,0x60
  405e87:	cmp    rdi,rax
  405e8a:	je     0x405ea0
  405e8c:	cmp    BYTE PTR [rbx+0x18],0x0
  405e90:	mov    rcx,QWORD PTR [rbx+0x10]
  405e94:	je     0x405f35
  405e9a:	call   QWORD PTR [rip+0x56d84]        # 0x45cc24
  405ea0:	test   rsi,rsi
  405ea3:	je     0x405eac
  405ea5:	movzx  eax,BYTE PTR [rsi]
  405ea8:	test   al,al
  405eaa:	jne    0x405ed1
  405eac:	call   QWORD PTR [rip+0x56d02]        # 0x45cbb4
  405eb2:	lea    r8,[rax+0x30]
  405eb6:	mov    BYTE PTR [rbx+0x18],0x0
  405eba:	mov    QWORD PTR [rbx+0x10],r8
  405ebe:	test   r8,r8
  405ec1:	mov    eax,0x1
  405ec6:	je     0x405ef9
  405ec8:	add    rsp,0x28
  405ecc:	pop    rbx
  405ecd:	pop    rsi
  405ece:	pop    rdi
  405ecf:	pop    rbp
  405ed0:	ret    
  405ed1:	cmp    al,0x7c
  405ed3:	je     0x405f40
  405ed5:	lea    rdx,[rip+0x28581]        # 0x42e45d
  405edc:	mov    rcx,rsi
  405edf:	call   0x42a510
  405ee4:	mov    r8,rax
  405ee7:	mov    QWORD PTR [rbx+0x10],rax
  405eeb:	mov    BYTE PTR [rbx+0x18],0x0
  405eef:	test   r8,r8
  405ef2:	mov    eax,0x1
  405ef7:	jne    0x405ec8
  405ef9:	call   QWORD PTR [rip+0x56ced]        # 0x45cbec
  405eff:	mov    ecx,DWORD PTR [rax]
  405f01:	call   0x42a408
  405f06:	lea    rcx,[rip+0x28552]        # 0x42e45f
  405f0d:	mov    r8,rax
  405f10:	mov    rdx,rsi
  405f13:	call   0x405d90
  405f18:	call   QWORD PTR [rip+0x56c96]        # 0x45cbb4
  405f1e:	add    rax,0x30
  405f22:	mov    BYTE PTR [rbx+0x18],0x0
  405f26:	mov    QWORD PTR [rbx+0x10],rax
  405f2a:	xor    eax,eax
  405f2c:	add    rsp,0x28
  405f30:	pop    rbx
  405f31:	pop    rsi
  405f32:	pop    rdi
  405f33:	pop    rbp
  405f34:	ret    
  405f35:	call   0x42a538
  405f3a:	jmp    0x405ea0
  405f3f:	nop
  405f40:	lea    rcx,[rsi+0x1]
  405f44:	lea    rdx,[rip+0x28512]        # 0x42e45d
  405f4b:	call   0x424fe0
  405f50:	mov    BYTE PTR [rbx+0x18],0x1
  405f54:	mov    r8,rax
  405f57:	mov    QWORD PTR [rbx+0x10],rax
  405f5b:	jmp    0x405ebe
  405f60:	push   rbp
  405f61:	push   rdi
  405f62:	push   rsi
  405f63:	push   rbx
  405f64:	sub    rsp,0x28
  405f68:	mov    rsi,rcx
  405f6b:	call   0x427e70
  405f70:	test   eax,eax
  405f72:	jle    0x406062
  405f78:	mov    rcx,rsi
  405f7b:	call   0x427e70
  405f80:	cmp    eax,0x1
  405f83:	jg     0x406010
  405f89:	xor    ebx,ebx
  405f8b:	mov    rbp,QWORD PTR [rip+0x4e94e]        # 0x4548e0
  405f92:	jmp    0x405fb6
  405f94:	mov    rcx,QWORD PTR [rbp+0x110]
  405f9b:	mov    rdx,rdi
  405f9e:	call   0x40ef10
  405fa3:	test   al,al
  405fa5:	je     0x406040
  405fab:	mov    rcx,rdi
  405fae:	add    ebx,0x1
  405fb1:	call   0x42a4e8
  405fb6:	mov    rcx,rsi
  405fb9:	call   0x427e80
  405fbe:	cmp    ebx,eax
  405fc0:	jge    0x406030
  405fc2:	mov    edx,ebx
  405fc4:	mov    rcx,rsi
  405fc7:	call   0x427ee0
  405fcc:	mov    rdx,QWORD PTR [rbp+0xc8]
  405fd3:	lea    rcx,[rip+0x284a9]        # 0x42e483
  405fda:	mov    r8,rax
  405fdd:	call   0x424630
  405fe2:	mov    r8d,ebx
  405fe5:	xor    edx,edx
  405fe7:	mov    rcx,rsi
  405fea:	mov    rdi,rax
  405fed:	call   0x427ea8
  405ff2:	xor    r8d,r8d
  405ff5:	test   eax,eax
  405ff7:	jne    0x405f94
  405ff9:	mov    r8d,ebx
  405ffc:	xor    edx,edx
  405ffe:	mov    rcx,rsi
  406001:	call   0x427e98
  406006:	mov    r8,rax
  406009:	jmp    0x405f94
  40600b:	nop    DWORD PTR [rax+rax*1+0x0]
  406010:	lea    rcx,[rip+0x28491]        # 0x42e4a8
  406017:	call   0x405d90
  40601c:	xor    eax,eax
  40601e:	add    rsp,0x28
  406022:	pop    rbx
  406023:	pop    rsi
  406024:	pop    rdi
  406025:	pop    rbp
  406026:	ret    
  406027:	nop    WORD PTR [rax+rax*1+0x0]
  406030:	mov    eax,0x1
  406035:	add    rsp,0x28
  406039:	pop    rbx
  40603a:	pop    rsi
  40603b:	pop    rdi
  40603c:	pop    rbp
  40603d:	ret    
  40603e:	xchg   ax,ax
  406040:	lea    rcx,[rip+0x28441]        # 0x42e488
  406047:	mov    rdx,rdi
  40604a:	call   0x405d90
  40604f:	mov    rcx,rdi
  406052:	call   0x42a4e8
  406057:	xor    eax,eax
  406059:	add    rsp,0x28
  40605d:	pop    rbx
  40605e:	pop    rsi
  40605f:	pop    rdi
  406060:	pop    rbp
  406061:	ret    
  406062:	lea    rcx,[rip+0x283fe]        # 0x42e467
  406069:	call   0x405d90
  40606e:	xor    eax,eax
  406070:	add    rsp,0x28
  406074:	pop    rbx
  406075:	pop    rsi
  406076:	pop    rdi
  406077:	pop    rbp
  406078:	ret    
  406079:	nop    DWORD PTR [rax+0x0]
  406080:	lea    rcx,[rip+0x28447]        # 0x42e4ce
  406087:	jmp    0x405d90
  40608c:	nop    DWORD PTR [rax+0x0]
  406090:	sub    rsp,0x28
  406094:	lea    rcx,[rip+0x53fc5]        # 0x45a060
  40609b:	call   QWORD PTR [rip+0x56a0b]        # 0x45caac
  4060a1:	mov    rax,QWORD PTR [rip+0x56a74]        # 0x45cb1c
  4060a8:	lea    rcx,[rip+0xfffffffffffffbc1]        # 0x405c70
  4060af:	mov    edx,0x1
  4060b4:	add    rsp,0x28
  4060b8:	rex.W jmp rax
  4060bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	sub    rsp,0x28
  4060c4:	lea    rcx,[rip+0x53f95]        # 0x45a060
  4060cb:	call   QWORD PTR [rip+0x5695b]        # 0x45ca2c
  4060d1:	mov    rcx,QWORD PTR [rip+0x53fb0]        # 0x45a088
  4060d8:	mov    QWORD PTR [rip+0x53fa5],0x0        # 0x45a088
  4060e3:	test   rcx,rcx
  4060e6:	je     0x4060ed
  4060e8:	call   0x427ed8
  4060ed:	mov    rax,QWORD PTR [rip+0x4e7ec]        # 0x4548e0
  4060f4:	mov    rcx,QWORD PTR [rax]
  4060f7:	call   0x427ec0
  4060fc:	mov    QWORD PTR [rip+0x53f85],rax        # 0x45a088
  406103:	mov    rax,QWORD PTR [rip+0x569aa]        # 0x45cab4
  40610a:	lea    rcx,[rip+0x53f4f]        # 0x45a060
  406111:	add    rsp,0x28
  406115:	rex.W jmp rax
  406118:	nop    DWORD PTR [rax+rax*1+0x0]
  406120:	sub    rsp,0x28
  406124:	lea    rcx,[rip+0x53f35]        # 0x45a060
  40612b:	call   QWORD PTR [rip+0x568fb]        # 0x45ca2c
  406131:	mov    rcx,QWORD PTR [rip+0x53f50]        # 0x45a088
  406138:	mov    QWORD PTR [rip+0x53f45],0x0        # 0x45a088
  406143:	test   rcx,rcx
  406146:	je     0x40614d
  406148:	call   0x427ed8
  40614d:	mov    rax,QWORD PTR [rip+0x56960]        # 0x45cab4
  406154:	lea    rcx,[rip+0x53f05]        # 0x45a060
  40615b:	add    rsp,0x28
  40615f:	rex.W jmp rax
  406162:	nop    DWORD PTR [rax+0x0]
  406166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406170:	push   rbx
  406171:	sub    rsp,0x20
  406175:	mov    rbx,QWORD PTR [rip+0x4e764]        # 0x4548e0
  40617c:	mov    rcx,QWORD PTR [rbx]
  40617f:	call   0x427df8
  406184:	cmp    eax,0x1
  406187:	jne    0x406200
  406189:	cmp    BYTE PTR [rbx+0xe0],0x0
  406190:	je     0x40620b
  406192:	lea    rcx,[rip+0x2835f]        # 0x42e4f8
  406199:	call   0x405d90
  40619e:	mov    rcx,QWORD PTR [rbx]
  4061a1:	call   0x427e30
  4061a6:	mov    rcx,QWORD PTR [rbx]
  4061a9:	call   0x427df8
  4061ae:	cmp    eax,0x1
  4061b1:	je     0x4061d0
  4061b3:	lea    rcx,[rip+0x28381]        # 0x42e53b
  4061ba:	call   0x405d90
  4061bf:	mov    eax,0x1
  4061c4:	add    rsp,0x20
  4061c8:	pop    rbx
  4061c9:	ret    
  4061ca:	nop    WORD PTR [rax+rax*1+0x0]
  4061d0:	lea    rcx,[rip+0x2835b]        # 0x42e532
  4061d7:	call   0x405d90
  4061dc:	mov    rcx,QWORD PTR [rbx]
  4061df:	call   0x427ee8
  4061e4:	mov    QWORD PTR [rbx],0x0
  4061eb:	call   0x406120
  4061f0:	call   0x401e50
  4061f5:	xor    eax,eax
  4061f7:	add    rsp,0x20
  4061fb:	pop    rbx
  4061fc:	ret    
  4061fd:	nop    DWORD PTR [rax]
  406200:	mov    eax,0x1
  406205:	add    rsp,0x20
  406209:	pop    rbx
  40620a:	ret    
  40620b:	lea    rcx,[rip+0x282c6]        # 0x42e4d8
  406212:	call   0x405d90
  406217:	mov    ecx,0x2
  40621c:	call   0x42a540
  406221:	nop
  406222:	nop    DWORD PTR [rax+0x0]
  406226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406230:	push   rbx
  406231:	sub    rsp,0x20
  406235:	test   rcx,rcx
  406238:	mov    rbx,rcx
  40623b:	je     0x406267
  40623d:	call   0x427e20
  406242:	cmp    eax,0x4
  406245:	mov    edx,0x1
  40624a:	jbe    0x406282
  40624c:	cmp    eax,0x7
  40624f:	jbe    0x406267
  406251:	mov    rcx,rbx
  406254:	call   0x427e20
  406259:	lea    rcx,[rip+0x282e8]        # 0x42e548
  406260:	mov    edx,eax
  406262:	call   0x405d90
  406267:	mov    rax,QWORD PTR [rip+0x4e672]        # 0x4548e0
  40626e:	mov    rcx,QWORD PTR [rax]
  406271:	call   0x427f10
  406276:	cmp    BYTE PTR [rax],0x0
  406279:	jne    0x406290
  40627b:	call   0x406170
  406280:	xor    edx,edx
  406282:	mov    eax,edx
  406284:	add    rsp,0x20
  406288:	pop    rbx
  406289:	ret    
  40628a:	nop    WORD PTR [rax+rax*1+0x0]
  406290:	lea    rcx,[rip+0x28237]        # 0x42e4ce
  406297:	mov    rdx,rax
  40629a:	call   0x405d90
  40629f:	jmp    0x40627b
  4062a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4062a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062b0:	push   rdi
  4062b1:	push   rsi
  4062b2:	push   rbx
  4062b3:	sub    rsp,0x20
  4062b7:	mov    rbx,QWORD PTR [rip+0x4e622]        # 0x4548e0
  4062be:	mov    rsi,rcx
  4062c1:	mov    edi,edx
  4062c3:	cmp    QWORD PTR [rbx],0x0
  4062c7:	je     0x4063ef
  4062cd:	mov    eax,DWORD PTR [rbx+0x128]
  4062d3:	test   eax,eax
  4062d5:	je     0x406329
  4062d7:	mov    rdx,rcx
  4062da:	lea    rcx,[rip+0x282b7]        # 0x42e598
  4062e1:	call   0x4263a0
  4062e6:	call   QWORD PTR [rip+0x568c8]        # 0x45cbb4
  4062ec:	lea    rcx,[rax+0x30]
  4062f0:	call   0x42a520
  4062f5:	mov    rcx,QWORD PTR [rbx+0x108]
  4062fc:	test   rcx,rcx
  4062ff:	je     0x40631c
  406301:	lea    rdx,[rip+0x28290]        # 0x42e598
  406308:	mov    r8,rsi
  40630b:	call   0x426370
  406310:	mov    rcx,QWORD PTR [rbx+0x108]
  406317:	call   0x42a520
  40631c:	cmp    DWORD PTR [rbx+0x128],0x2
  406323:	je     0x4063c0
  406329:	call   0x4060c0
  40632e:	test   dil,dil
  406331:	je     0x40633c
  406333:	cmp    BYTE PTR [rbx+0x118],0x0
  40633a:	je     0x406370
  40633c:	mov    rcx,QWORD PTR [rbx]
  40633f:	mov    rdx,rsi
  406342:	call   0x427ef0
  406347:	mov    rbx,rax
  40634a:	call   0x406120
  40634f:	mov    rcx,rbx
  406352:	call   0x406230
  406357:	test   al,al
  406359:	mov    rcx,rbx
  40635c:	je     0x4063a5
  40635e:	mov    rax,rcx
  406361:	add    rsp,0x20
  406365:	pop    rbx
  406366:	pop    rsi
  406367:	pop    rdi
  406368:	ret    
  406369:	nop    DWORD PTR [rax+0x0]
  406370:	mov    rcx,QWORD PTR [rbx]
  406373:	call   0x427df0
  406378:	test   eax,eax
  40637a:	jne    0x40633c
  40637c:	mov    rcx,QWORD PTR [rbx]
  40637f:	lea    rdx,[rip+0x2824d]        # 0x42e5d3
  406386:	call   0x427ef0
  40638b:	mov    rcx,rax
  40638e:	mov    rdi,rax
  406391:	call   0x427e20
  406396:	cmp    eax,0x1
  406399:	jne    0x4063c4
  40639b:	mov    rcx,rdi
  40639e:	call   0x427f68
  4063a3:	jmp    0x40633c
  4063a5:	call   0x427f68
  4063aa:	xor    ecx,ecx
  4063ac:	mov    rax,rcx
  4063af:	add    rsp,0x20
  4063b3:	pop    rbx
  4063b4:	pop    rsi
  4063b5:	pop    rdi
  4063b6:	ret    
  4063b7:	nop    WORD PTR [rax+rax*1+0x0]
  4063c0:	xor    ecx,ecx
  4063c2:	jmp    0x40635e
  4063c4:	mov    rcx,QWORD PTR [rbx]
  4063c7:	call   0x427f10
  4063cc:	lea    rcx,[rip+0x280fb]        # 0x42e4ce
  4063d3:	mov    rdx,rax
  4063d6:	call   0x405d90
  4063db:	mov    rcx,rdi
  4063de:	call   0x427f68
  4063e3:	call   0x406120
  4063e8:	xor    ecx,ecx
  4063ea:	jmp    0x40635e
  4063ef:	lea    rcx,[rip+0x28172]        # 0x42e568
  4063f6:	call   0x405d90
  4063fb:	xor    ecx,ecx
  4063fd:	jmp    0x40635e
  406402:	nop    DWORD PTR [rax+0x0]
  406406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406410:	push   r15
  406412:	push   r14
  406414:	push   r13
  406416:	push   r12
  406418:	push   rbp
  406419:	push   rdi
  40641a:	push   rsi
  40641b:	push   rbx
  40641c:	sub    rsp,0x1a8
  406423:	movaps XMMWORD PTR [rsp+0x180],xmm6
  40642b:	movaps XMMWORD PTR [rsp+0x190],xmm7
  406433:	mov    r13,rcx
  406436:	mov    rbx,QWORD PTR [rip+0x4e4a3]        # 0x4548e0
  40643d:	cmp    QWORD PTR [rbx],0x0
  406441:	je     0x406c96
  406447:	cmp    BYTE PTR [rbx+0x11c],0x0
  40644e:	jne    0x4069f0
  406454:	cmp    DWORD PTR [rbx+0x124],0x1
  40645b:	je     0x406c70
  406461:	mov    rcx,QWORD PTR [rbx+0x108]
  406468:	test   rcx,rcx
  40646b:	je     0x406488
  40646d:	lea    rdx,[rip+0x28124]        # 0x42e598
  406474:	mov    r8,r13
  406477:	call   0x426370
  40647c:	mov    rcx,QWORD PTR [rbx+0x108]
  406483:	call   0x42a520
  406488:	call   0x4060c0
  40648d:	mov    rcx,QWORD PTR [rbx]
  406490:	call   0x427df0
  406495:	test   eax,eax
  406497:	je     0x406675
  40649d:	cmp    eax,0x2
  4064a0:	jne    0x4064b0
  4064a2:	mov    eax,DWORD PTR [rbx+0x12c]
  4064a8:	test   eax,eax
  4064aa:	jne    0x406a70
  4064b0:	xor    ebp,ebp
  4064b2:	mov    eax,DWORD PTR [rbx+0x120]
  4064b8:	test   eax,eax
  4064ba:	jle    0x406508
  4064bc:	mov    rcx,r13
  4064bf:	jmp    0x4064c5
  4064c1:	lea    rcx,[rax+0x1]
  4064c5:	call   0x405a50
  4064ca:	cmp    BYTE PTR [rax],0x28
  4064cd:	je     0x4064c1
  4064cf:	mov    rsi,rax
  4064d2:	xor    r12d,r12d
  4064d5:	mov    r14,QWORD PTR [rip+0x56820]        # 0x45ccfc
  4064dc:	jmp    0x4064ee
  4064de:	xchg   ax,ax
  4064e0:	mov    edx,DWORD PTR [rbx+0x8]
  4064e3:	mov    rcx,rdi
  4064e6:	call   0x427e88
  4064eb:	add    r12d,eax
  4064ee:	movsxd rdi,r12d
  4064f1:	add    rdi,rsi
  4064f4:	movzx  ecx,BYTE PTR [rdi]
  4064f7:	call   r14
  4064fa:	test   eax,eax
  4064fc:	jne    0x4064e0
  4064fe:	cmp    r12d,0x6
  406502:	je     0x406817
  406508:	cmp    BYTE PTR [rbx+0x100],0x0
  40650f:	jne    0x406b50
  406515:	mov    rcx,QWORD PTR [rbx]
  406518:	mov    rdx,r13
  40651b:	mov    edi,0x1
  406520:	mov    r12d,0x1
  406526:	lea    r14,[rsp+0xe0]
  40652e:	call   0x427ef0
  406533:	mov    r13,rax
  406536:	call   0x406120
  40653b:	jmp    0x406578
  40653d:	nop    DWORD PTR [rax]
  406540:	lea    rcx,[rip+0x28001]        # 0x42e548
  406547:	mov    edx,eax
  406549:	call   0x405d90
  40654e:	test   dil,dil
  406551:	jne    0x406be0
  406557:	mov    rcx,QWORD PTR [rbx]
  40655a:	call   0x427eb0
  40655f:	test   rax,rax
  406562:	mov    rsi,rax
  406565:	je     0x406610
  40656b:	mov    rcx,r13
  40656e:	xor    edi,edi
  406570:	mov    r13,rsi
  406573:	call   0x427f68
  406578:	mov    rcx,r13
  40657b:	call   0x406230
  406580:	test   al,al
  406582:	je     0x406a60
  406588:	mov    rcx,r13
  40658b:	call   0x427e20
  406590:	cmp    eax,0x2
  406593:	jbe    0x40654e
  406595:	cmp    eax,0x4
  406598:	ja     0x406540
  40659a:	mov    DWORD PTR [rsp+0x30],eax
  40659e:	mov    rsi,QWORD PTR [rbx+0x20]
  4065a2:	call   0x4060c0
  4065a7:	mov    eax,DWORD PTR [rsp+0x30]
  4065ab:	cmp    eax,0x3
  4065ae:	je     0x4067d0
  4065b4:	test   rsi,rsi
  4065b7:	je     0x406a50
  4065bd:	mov    rcx,r13
  4065c0:	call   0x427f78
  4065c5:	mov    rcx,QWORD PTR [rbx]
  4065c8:	mov    r9,r14
  4065cb:	movsx  r8d,al
  4065cf:	mov    rdx,rsi
  4065d2:	call   0x40da30
  4065d7:	test   al,al
  4065d9:	setne  al
  4065dc:	and    r12d,eax
  4065df:	call   0x406120
  4065e4:	mov    rcx,r13
  4065e7:	call   0x427f68
  4065ec:	mov    rcx,QWORD PTR [rbx]
  4065ef:	mov    r13,QWORD PTR [rsp+0xe0]
  4065f7:	call   0x427eb0
  4065fc:	test   rax,rax
  4065ff:	mov    rsi,rax
  406602:	jne    0x40656b
  406608:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	test   dil,dil
  406613:	mov    r14d,r12d
  406616:	jne    0x406626
  406618:	call   0x406170
  40661d:	mov    r14d,eax
  406620:	test   al,al
  406622:	cmovne r14d,r12d
  406626:	cmp    BYTE PTR [rbx+0x100],0x0
  40662d:	pxor   xmm6,xmm6
  406631:	jne    0x406b63
  406637:	xor    r12d,r12d
  40663a:	test   r14b,r14b
  40663d:	je     0x4068f0
  406643:	test   r13,r13
  406646:	mov    r12d,0x1
  40664c:	je     0x4068f0
  406652:	mov    rcx,r13
  406655:	call   0x427e20
  40665a:	cmp    eax,0x7
  40665d:	ja     0x406b29
  406663:	lea    rdx,[rip+0x28322]        # 0x42e98c
  40666a:	mov    eax,eax
  40666c:	movsxd rax,DWORD PTR [rdx+rax*4]
  406670:	add    rdx,rax
  406673:	jmp    rdx
  406675:	cmp    BYTE PTR [rbx+0x118],0x0
  40667c:	jne    0x4064b0
  406682:	mov    rcx,r13
  406685:	xor    edi,edi
  406687:	call   0x405a50
  40668c:	mov    r14,QWORD PTR [rip+0x56669]        # 0x45ccfc
  406693:	mov    rbp,rax
  406696:	jmp    0x4066ad
  406698:	nop    DWORD PTR [rax+rax*1+0x0]
  4066a0:	mov    edx,DWORD PTR [rbx+0x8]
  4066a3:	mov    rcx,rsi
  4066a6:	call   0x427e88
  4066ab:	add    edi,eax
  4066ad:	movsxd rsi,edi
  4066b0:	add    rsi,rbp
  4066b3:	movzx  ecx,BYTE PTR [rsi]
  4066b6:	call   r14
  4066b9:	test   eax,eax
  4066bb:	jne    0x4066a0
  4066bd:	cmp    edi,0x5
  4066c0:	je     0x40732a
  4066c6:	cmp    edi,0x6
  4066c9:	je     0x4073f5
  4066cf:	cmp    edi,0x3
  4066d2:	je     0x407592
  4066d8:	cmp    edi,0x8
  4066db:	je     0x4075b4
  4066e1:	cmp    edi,0x7
  4066e4:	je     0x406d90
  4066ea:	cmp    edi,0x6
  4066ed:	je     0x407412
  4066f3:	cmp    edi,0x7
  4066f6:	je     0x406dad
  4066fc:	cmp    edi,0x6
  4066ff:	je     0x40742f
  406705:	cmp    edi,0x5
  406708:	je     0x407381
  40670e:	cmp    edi,0x4
  406711:	je     0x406e60
  406717:	cmp    edi,0x7
  40671a:	je     0x406dca
  406720:	mov    rcx,QWORD PTR [rbx]
  406723:	lea    rdx,[rip+0x27ea9]        # 0x42e5d3
  40672a:	call   0x427ef0
  40672f:	mov    rcx,rax
  406732:	mov    rsi,rax
  406735:	call   0x427e20
  40673a:	cmp    eax,0x1
  40673d:	je     0x4075d6
  406743:	mov    rcx,QWORD PTR [rbx]
  406746:	xor    r12d,r12d
  406749:	call   0x427f10
  40674e:	lea    rcx,[rip+0x27d79]        # 0x42e4ce
  406755:	mov    rdx,rax
  406758:	call   0x405d90
  40675d:	mov    rcx,rsi
  406760:	call   0x427f68
  406765:	call   0x406120
  40676a:	nop    WORD PTR [rax+rax*1+0x0]
  406770:	mov    rcx,QWORD PTR [rbx+0xc0]
  406777:	test   rcx,rcx
  40677a:	je     0x40678c
  40677c:	call   0x42a4e8
  406781:	mov    QWORD PTR [rbx+0xc0],0x0
  40678c:	mov    rcx,QWORD PTR [rbx+0xc8]
  406793:	test   rcx,rcx
  406796:	je     0x4067a8
  406798:	call   0x42a4e8
  40679d:	mov    QWORD PTR [rbx+0xc8],0x0
  4067a8:	movaps xmm6,XMMWORD PTR [rsp+0x180]
  4067b0:	mov    eax,r12d
  4067b3:	movaps xmm7,XMMWORD PTR [rsp+0x190]
  4067bb:	add    rsp,0x1a8
  4067c2:	pop    rbx
  4067c3:	pop    rsi
  4067c4:	pop    rdi
  4067c5:	pop    rbp
  4067c6:	pop    r12
  4067c8:	pop    r13
  4067ca:	pop    r14
  4067cc:	pop    r15
  4067ce:	ret    
  4067cf:	nop
  4067d0:	test   rsi,rsi
  4067d3:	je     0x406bf0
  4067d9:	mov    rcx,QWORD PTR [rbx]
  4067dc:	mov    r8,r14
  4067df:	mov    rdx,rsi
  4067e2:	call   0x40d8f0
  4067e7:	test   al,al
  4067e9:	setne  al
  4067ec:	and    r12d,eax
  4067ef:	cmp    rsi,QWORD PTR [rbx+0x10]
  4067f3:	jne    0x4065df
  4067f9:	mov    rcx,QWORD PTR [rsp+0xe0]
  406801:	call   0x427f68
  406806:	mov    QWORD PTR [rsp+0xe0],0x0
  406812:	jmp    0x4065df
  406817:	lea    rdx,[rip+0x27fc0]        # 0x42e7de
  40681e:	mov    r8d,0x6
  406824:	mov    rcx,rsi
  406827:	call   0x427870
  40682c:	test   eax,eax
  40682e:	je     0x40684d
  406830:	lea    rdx,[rip+0x2813f]        # 0x42e976
  406837:	mov    r8d,0x6
  40683d:	mov    rcx,rsi
  406840:	call   0x427870
  406845:	test   eax,eax
  406847:	jne    0x406508
  40684d:	mov    rax,QWORD PTR [rbx+0x10]
  406851:	cmp    BYTE PTR [rbx+0x100],0x0
  406858:	lea    r12,[rsp+0xe0]
  406860:	lea    rsi,[rbx+0x28]
  406864:	mov    ecx,0x13
  406869:	mov    rdi,r12
  40686c:	mov    QWORD PTR [rsp+0x40],rax
  406871:	movzx  eax,BYTE PTR [rbx+0x18]
  406875:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  406878:	mov    BYTE PTR [rsp+0xeb],0x1
  406880:	mov    BYTE PTR [rsp+0xec],0x0
  406888:	mov    DWORD PTR [rsp+0xf0],0x0
  406893:	mov    BYTE PTR [rsp+0x4f],al
  406897:	je     0x4068a4
  406899:	lea    rcx,[rsp+0x50]
  40689e:	call   QWORD PTR [rip+0x56238]        # 0x45cadc
  4068a4:	mov    rcx,QWORD PTR [rbx]
  4068a7:	call   0x427df0
  4068ac:	test   eax,eax
  4068ae:	jne    0x406ef0
  4068b4:	mov    rcx,QWORD PTR [rbx]
  4068b7:	lea    rdx,[rip+0x27d15]        # 0x42e5d3
  4068be:	call   0x427ef0
  4068c3:	mov    rcx,rax
  4068c6:	mov    rsi,rax
  4068c9:	call   0x406230
  4068ce:	test   al,al
  4068d0:	jne    0x407306
  4068d6:	pxor   xmm6,xmm6
  4068da:	mov    rcx,rsi
  4068dd:	xor    r12d,r12d
  4068e0:	call   0x427f68
  4068e5:	xor    r13d,r13d
  4068e8:	call   0x406120
  4068ed:	nop    DWORD PTR [rax]
  4068f0:	test   bpl,bpl
  4068f3:	je     0x406930
  4068f5:	mov    rcx,QWORD PTR [rbx]
  4068f8:	call   0x427df0
  4068fd:	cmp    eax,0x2
  406900:	mov    edx,eax
  406902:	je     0x406c00
  406908:	cmp    eax,0x3
  40690b:	je     0x406ad2
  406911:	test   eax,eax
  406913:	je     0x406930
  406915:	cmp    eax,0x4
  406918:	je     0x4072e5
  40691e:	lea    rcx,[rip+0x27f53]        # 0x42e878
  406925:	xor    r12d,r12d
  406928:	call   0x405d90
  40692d:	nop    DWORD PTR [rax]
  406930:	mov    rcx,r13
  406933:	call   0x427f68
  406938:	cmp    BYTE PTR [rbx+0x100],0x0
  40693f:	jne    0x406bc0
  406945:	mov    esi,DWORD PTR [rbx+0x8]
  406948:	mov    rcx,QWORD PTR [rbx]
  40694b:	call   0x427f60
  406950:	cmp    esi,eax
  406952:	je     0x4069b7
  406954:	mov    rcx,QWORD PTR [rbx]
  406957:	call   0x427f60
  40695c:	test   eax,eax
  40695e:	js     0x4069b7
  406960:	mov    rcx,QWORD PTR [rbx]
  406963:	call   0x427f60
  406968:	mov    ecx,eax
  40696a:	mov    DWORD PTR [rbx+0x8],eax
  40696d:	mov    DWORD PTR [rbx+0x78],eax
  406970:	call   0x427d80
  406975:	mov    rcx,QWORD PTR [rbx+0x110]
  40697c:	lea    rdx,[rip+0x27f28]        # 0x42e8ab
  406983:	mov    r8,rax
  406986:	call   0x40ef10
  40698b:	jmp    0x4069b7
  40698d:	nop    DWORD PTR [rax]
  406990:	mov    eax,DWORD PTR [rsi+0x8]
  406993:	lea    rdx,[rip+0x27f1e]        # 0x42e8b8
  40699a:	mov    DWORD PTR [rsp+0x20],eax
  40699e:	mov    r8,QWORD PTR [rsi]
  4069a1:	call   0x426370
  4069a6:	mov    rcx,QWORD PTR [rbx+0x10]
  4069aa:	call   0x42a520
  4069af:	mov    rcx,rsi
  4069b2:	call   0x427ed0
  4069b7:	mov    rcx,QWORD PTR [rbx]
  4069ba:	call   0x427e78
  4069bf:	test   rax,rax
  4069c2:	mov    rsi,rax
  4069c5:	je     0x406770
  4069cb:	mov    r9,QWORD PTR [rsi+0x10]
  4069cf:	mov    rcx,QWORD PTR [rbx+0x10]
  4069d3:	cmp    BYTE PTR [r9],0x0
  4069d7:	jne    0x406990
  4069d9:	mov    r9d,DWORD PTR [rsi+0x8]
  4069dd:	mov    r8,QWORD PTR [rsi]
  4069e0:	lea    rdx,[rip+0x27f31]        # 0x42e918
  4069e7:	call   0x426370
  4069ec:	jmp    0x4069a6
  4069ee:	xchg   ax,ax
  4069f0:	mov    rdx,rcx
  4069f3:	lea    rcx,[rip+0x27c46]        # 0x42e640
  4069fa:	call   0x4263a0
  4069ff:	mov    rsi,QWORD PTR [rip+0x561ae]        # 0x45cbb4
  406a06:	call   rsi
  406a08:	lea    rcx,[rax+0x30]
  406a0c:	call   0x42a520
  406a11:	call   rsi
  406a13:	lea    rcx,[rsp+0xe0]
  406a1b:	mov    r8,rax
  406a1e:	mov    edx,0x3
  406a23:	call   0x42a518
  406a28:	test   rax,rax
  406a2b:	je     0x406461
  406a31:	xor    r12d,r12d
  406a34:	cmp    BYTE PTR [rsp+0xe0],0x78
  406a3c:	jne    0x406461
  406a42:	jmp    0x406770
  406a47:	nop    WORD PTR [rax+rax*1+0x0]
  406a50:	mov    rsi,QWORD PTR [rbx+0xd8]
  406a57:	jmp    0x4065bd
  406a5c:	nop    DWORD PTR [rax+0x0]
  406a60:	xor    r12d,r12d
  406a63:	jmp    0x406610
  406a68:	nop    DWORD PTR [rax+rax*1+0x0]
  406a70:	cmp    BYTE PTR [rbx+0xe0],0x0
  406a77:	jne    0x406a82
  406a79:	cmp    eax,0x2
  406a7c:	jne    0x4064b0
  406a82:	cmp    BYTE PTR [rip+0x535b8],0x0        # 0x45a041
  406a89:	jne    0x406a9d
  406a8b:	mov    ecx,DWORD PTR [rbx+0xe4]
  406a91:	cmp    ecx,0x1387f
  406a97:	jle    0x406d33
  406a9d:	mov    rcx,QWORD PTR [rbx]
  406aa0:	lea    rdx,[rip+0x27d11]        # 0x42e7b8
  406aa7:	call   0x427ef0
  406aac:	mov    rcx,rax
  406aaf:	mov    rsi,rax
  406ab2:	call   0x427e20
  406ab7:	cmp    eax,0x1
  406aba:	jne    0x406743
  406ac0:	mov    rcx,rsi
  406ac3:	mov    ebp,0x1
  406ac8:	call   0x427f68
  406acd:	jmp    0x4064b2
  406ad2:	lea    rdx,[rip+0x27b3f]        # 0x42e618
  406ad9:	mov    rcx,QWORD PTR [rbx]
  406adc:	call   0x427ef0
  406ae1:	mov    rcx,rax
  406ae4:	mov    rsi,rax
  406ae7:	call   0x427e20
  406aec:	cmp    eax,0x1
  406aef:	je     0x406c89
  406af5:	mov    rcx,QWORD PTR [rbx]
  406af8:	xor    r12d,r12d
  406afb:	call   0x427f10
  406b00:	lea    rcx,[rip+0x279c7]        # 0x42e4ce
  406b07:	mov    rdx,rax
  406b0a:	call   0x405d90
  406b0f:	mov    rcx,rsi
  406b12:	call   0x427f68
  406b17:	mov    rcx,r13
  406b1a:	call   0x427f68
  406b1f:	call   0x406120
  406b24:	jmp    0x406770
  406b29:	mov    rcx,r13
  406b2c:	call   0x427e20
  406b31:	lea    rcx,[rip+0x27a10]        # 0x42e548
  406b38:	mov    edx,eax
  406b3a:	call   0x405d90
  406b3f:	xor    r12d,r12d
  406b42:	mov    rcx,QWORD PTR [rbx+0x10]
  406b46:	call   0x42a520
  406b4b:	jmp    0x4068f0
  406b50:	lea    rcx,[rsp+0x80]
  406b58:	call   QWORD PTR [rip+0x55f7e]        # 0x45cadc
  406b5e:	jmp    0x406515
  406b63:	lea    rcx,[rsp+0xa0]
  406b6b:	pxor   xmm6,xmm6
  406b6f:	call   QWORD PTR [rip+0x55f67]        # 0x45cadc
  406b75:	mov    rsi,QWORD PTR [rsp+0xa0]
  406b7d:	sub    rsi,QWORD PTR [rsp+0x80]
  406b85:	lea    rcx,[rsp+0xe0]
  406b8d:	mov    QWORD PTR [rsp+0xa0],rsi
  406b95:	call   QWORD PTR [rip+0x55f49]        # 0x45cae4
  406b9b:	cvtsi2sd xmm6,rsi
  406ba0:	pxor   xmm0,xmm0
  406ba4:	cvtsi2sd xmm0,QWORD PTR [rsp+0xe0]
  406bae:	mulsd  xmm6,QWORD PTR [rip+0x27e42]        # 0x42e9f8
  406bb6:	divsd  xmm6,xmm0
  406bba:	jmp    0x406637
  406bbf:	nop
  406bc0:	movapd xmm1,xmm6
  406bc4:	movq   rdx,xmm6
  406bc9:	lea    rcx,[rip+0x27ccc]        # 0x42e89c
  406bd0:	call   0x4263a0
  406bd5:	jmp    0x406945
  406bda:	nop    WORD PTR [rax+rax*1+0x0]
  406be0:	mov    r14d,r12d
  406be3:	jmp    0x406626
  406be8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bf0:	mov    rsi,QWORD PTR [rbx+0x10]
  406bf4:	jmp    0x4067d9
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	test   r13,r13
  406c03:	je     0x406c62
  406c05:	mov    rcx,r13
  406c08:	lea    rdi,[rip+0x27c57]        # 0x42e866
  406c0f:	call   0x427f58
  406c14:	mov    ecx,0xa
  406c19:	mov    rsi,rax
  406c1c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c1e:	je     0x406930
  406c24:	mov    rcx,r13
  406c27:	lea    rdi,[rip+0x27c42]        # 0x42e870
  406c2e:	call   0x427f58
  406c33:	mov    ecx,0x8
  406c38:	mov    rsi,rax
  406c3b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c3d:	je     0x406930
  406c43:	mov    rcx,r13
  406c46:	lea    rdi,[rip+0x27993]        # 0x42e5e0
  406c4d:	call   0x427f58
  406c52:	mov    ecx,0x9
  406c57:	mov    rsi,rax
  406c5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c5c:	je     0x406930
  406c62:	lea    rdx,[rip+0x27987]        # 0x42e5f0
  406c69:	jmp    0x406ad9
  406c6e:	xchg   ax,ax
  406c70:	call   0x42a468
  406c75:	call   QWORD PTR [rip+0x55f39]        # 0x45cbb4
  406c7b:	lea    rcx,[rax+0x30]
  406c7f:	call   0x42a520
  406c84:	jmp    0x406461
  406c89:	mov    rcx,rsi
  406c8c:	call   0x427f68
  406c91:	jmp    0x406930
  406c96:	lea    rcx,[rip+0x278cb]        # 0x42e568
  406c9d:	xor    r12d,r12d
  406ca0:	call   0x405d90
  406ca5:	jmp    0x406770
  406caa:	mov    r12d,0x1
  406cb0:	jmp    0x406b42
  406cb5:	mov    rcx,r13
  406cb8:	mov    r12d,0x1
  406cbe:	call   0x405b60
  406cc3:	jmp    0x406b42
  406cc8:	cmp    QWORD PTR [rbx+0xc8],0x0
  406cd0:	je     0x407663
  406cd6:	mov    rcx,r13
  406cd9:	call   0x405f60
  406cde:	mov    r12d,eax
  406ce1:	mov    rcx,r13
  406ce4:	lea    rdi,[rip+0x27afa]        # 0x42e7e5
  406ceb:	call   0x427f58
  406cf0:	mov    ecx,0x6
  406cf5:	mov    rsi,rax
  406cf8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406cfa:	je     0x406d26
  406cfc:	lea    rdi,[rip+0x27ae9]        # 0x42e7ec
  406d03:	mov    ecx,0x6
  406d08:	mov    rsi,rax
  406d0b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d0d:	je     0x406d26
  406d0f:	lea    rdi,[rip+0x27add]        # 0x42e7f3
  406d16:	mov    ecx,0x6
  406d1b:	mov    rsi,rax
  406d1e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d20:	jne    0x406b42
  406d26:	mov    rcx,r13
  406d29:	call   0x405b60
  406d2e:	jmp    0x406b42
  406d33:	mov    r9d,0x51eb851f
  406d39:	mov    eax,ecx
  406d3b:	mov    r10d,ecx
  406d3e:	imul   r9d
  406d41:	sar    r10d,0x1f
  406d45:	sar    edx,0x5
  406d48:	sub    edx,r10d
  406d4b:	mov    eax,edx
  406d4d:	mov    r8d,edx
  406d50:	imul   r9d
  406d53:	mov    eax,r8d
  406d56:	sar    eax,0x1f
  406d59:	sar    edx,0x5
  406d5c:	mov    r9d,edx
  406d5f:	mov    edx,0x68db8bad
  406d64:	sub    r9d,eax
  406d67:	mov    eax,ecx
  406d69:	lea    rcx,[rip+0x279f8]        # 0x42e768
  406d70:	imul   edx
  406d72:	imul   r9d,r9d,0x64
  406d76:	sar    edx,0xc
  406d79:	sub    edx,r10d
  406d7c:	sub    r8d,r9d
  406d7f:	call   0x405d90
  406d84:	mov    BYTE PTR [rip+0x532b6],0x1        # 0x45a041
  406d8b:	jmp    0x4064b0
  406d90:	lea    rdx,[rip+0x27969]        # 0x42e700
  406d97:	mov    r8d,0x7
  406d9d:	mov    rcx,rbp
  406da0:	call   0x427870
  406da5:	test   eax,eax
  406da7:	je     0x407737
  406dad:	lea    rdx,[rip+0x27bc9]        # 0x42e97d
  406db4:	mov    r8d,0x7
  406dba:	mov    rcx,rbp
  406dbd:	call   0x427870
  406dc2:	test   eax,eax
  406dc4:	je     0x40771c
  406dca:	lea    rdx,[rip+0x2798a]        # 0x42e75b
  406dd1:	mov    r8d,0x7
  406dd7:	mov    rcx,rbp
  406dda:	call   0x427870
  406ddf:	test   eax,eax
  406de1:	je     0x406e7d
  406de7:	lea    rdx,[rip+0x27b80]        # 0x42e96e
  406dee:	mov    r8d,0x7
  406df4:	mov    rcx,rbp
  406df7:	call   0x427870
  406dfc:	test   eax,eax
  406dfe:	jne    0x406720
  406e04:	mov    rcx,rsi
  406e07:	xor    edi,edi
  406e09:	call   0x405a50
  406e0e:	mov    rbp,rax
  406e11:	jmp    0x406e20
  406e13:	mov    edx,DWORD PTR [rbx+0x8]
  406e16:	mov    rcx,rsi
  406e19:	call   0x427e88
  406e1e:	add    edi,eax
  406e20:	movsxd rsi,edi
  406e23:	add    rsi,rbp
  406e26:	movzx  ecx,BYTE PTR [rsi]
  406e29:	call   r14
  406e2c:	test   eax,eax
  406e2e:	jne    0x406e13
  406e30:	cmp    edi,0x3
  406e33:	jne    0x406720
  406e39:	lea    rdx,[rip+0x27923]        # 0x42e763
  406e40:	mov    r8d,0x3
  406e46:	mov    rcx,rbp
  406e49:	call   0x427870
  406e4e:	test   eax,eax
  406e50:	jne    0x406720
  406e56:	jmp    0x4064b0
  406e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e60:	lea    rdx,[rip+0x278ef]        # 0x42e756
  406e67:	mov    r8d,0x4
  406e6d:	mov    rcx,rbp
  406e70:	call   0x427870
  406e75:	test   eax,eax
  406e77:	jne    0x406720
  406e7d:	mov    rcx,rsi
  406e80:	xor    edi,edi
  406e82:	call   0x405a50
  406e87:	mov    rbp,rax
  406e8a:	jmp    0x406e9d
  406e8c:	nop    DWORD PTR [rax+0x0]
  406e90:	mov    edx,DWORD PTR [rbx+0x8]
  406e93:	mov    rcx,rsi
  406e96:	call   0x427e88
  406e9b:	add    edi,eax
  406e9d:	movsxd rsi,edi
  406ea0:	add    rsi,rbp
  406ea3:	movzx  ecx,BYTE PTR [rsi]
  406ea6:	call   r14
  406ea9:	test   eax,eax
  406eab:	jne    0x406e90
  406ead:	cmp    edi,0x8
  406eb0:	je     0x4077bb
  406eb6:	cmp    edi,0x6
  406eb9:	je     0x4073d3
  406ebf:	cmp    edi,0xa
  406ec2:	jne    0x406720
  406ec8:	lea    rdx,[rip+0x27855]        # 0x42e724
  406ecf:	mov    r8d,0xa
  406ed5:	mov    rcx,rbp
  406ed8:	call   0x427870
  406edd:	test   eax,eax
  406edf:	je     0x4064b0
  406ee5:	jmp    0x406720
  406eea:	nop    WORD PTR [rax+rax*1+0x0]
  406ef0:	xor    r14d,r14d
  406ef3:	lea    rsi,[rsp+0x80]
  406efb:	mov    rcx,rsi
  406efe:	call   0x427da8
  406f03:	lea    rdx,[rip+0x278f6]        # 0x42e800
  406f0a:	mov    r8,r13
  406f0d:	mov    rcx,rsi
  406f10:	call   0x427dd8
  406f15:	mov    rdx,QWORD PTR [rsp+0x80]
  406f1d:	mov    rcx,QWORD PTR [rbx]
  406f20:	call   0x427ef0
  406f25:	mov    rcx,rax
  406f28:	mov    rdi,rax
  406f2b:	call   0x406230
  406f30:	test   al,al
  406f32:	jne    0x407145
  406f38:	pxor   xmm6,xmm6
  406f3c:	mov    rcx,rdi
  406f3f:	call   0x427f68
  406f44:	mov    rcx,rsi
  406f47:	call   0x427d60
  406f4c:	cmp    BYTE PTR [rbx+0x100],0x0
  406f53:	jne    0x4072d3
  406f59:	mov    rcx,QWORD PTR [rbx]
  406f5c:	lea    rdx,[rip+0x278f0]        # 0x42e853
  406f63:	call   0x427ef0
  406f68:	mov    rsi,rax
  406f6b:	mov    rcx,rsi
  406f6e:	call   0x427f68
  406f73:	test   r14b,r14b
  406f76:	je     0x40713d
  406f7c:	lea    rdx,[rip+0x2765d]        # 0x42e5e0
  406f83:	xor    esi,esi
  406f85:	mov    rcx,QWORD PTR [rbx]
  406f88:	xor    r12d,r12d
  406f8b:	call   0x427ef0
  406f90:	mov    rcx,rax
  406f93:	mov    rdi,rax
  406f96:	call   0x406230
  406f9b:	test   al,al
  406f9d:	jne    0x407520
  406fa3:	mov    rcx,rdi
  406fa6:	call   0x427f68
  406fab:	cmp    BYTE PTR [rbx+0x100],0x0
  406fb2:	je     0x4068e5
  406fb8:	lea    rcx,[rsp+0x60]
  406fbd:	call   QWORD PTR [rip+0x55b19]        # 0x45cadc
  406fc3:	mov    rsi,QWORD PTR [rsp+0x60]
  406fc8:	sub    rsi,QWORD PTR [rsp+0x50]
  406fcd:	lea    rcx,[rsp+0x70]
  406fd2:	mov    QWORD PTR [rsp+0x60],rsi
  406fd7:	call   QWORD PTR [rip+0x55b07]        # 0x45cae4
  406fdd:	pxor   xmm0,xmm0
  406fe1:	pxor   xmm1,xmm1
  406fe5:	cvtsi2sd xmm0,rsi
  406fea:	cvtsi2sd xmm1,QWORD PTR [rsp+0x70]
  406ff1:	mulsd  xmm0,QWORD PTR [rip+0x279ff]        # 0x42e9f8
  406ff9:	divsd  xmm0,xmm1
  406ffd:	addsd  xmm6,xmm0
  407001:	jmp    0x4068e5
  407006:	mov    rcx,QWORD PTR [rbx+0x10]
  40700a:	call   0x42a548
  40700f:	mov    rax,QWORD PTR [rip+0x55ac6]        # 0x45cadc
  407016:	movsd  xmm7,QWORD PTR [rip+0x279da]        # 0x42e9f8
  40701e:	mov    BYTE PTR [rsp+0x4e],0x0
  407023:	mov    QWORD PTR [rsp+0x38],rax
  407028:	nop    DWORD PTR [rax+rax*1+0x0]
  407030:	cmp    BYTE PTR [rbx+0x100],0x0
  407037:	jne    0x4071ef
  40703d:	mov    rcx,QWORD PTR [rbx]
  407040:	mov    rdx,r13
  407043:	call   0x427ef0
  407048:	cmp    BYTE PTR [rbx+0x100],0x0
  40704f:	mov    rsi,rax
  407052:	jne    0x4071ff
  407058:	mov    rcx,rsi
  40705b:	call   0x427e20
  407060:	cmp    eax,0x2
  407063:	jne    0x4076c2
  407069:	cmp    QWORD PTR [rbx+0xc8],0x0
  407071:	mov    rcx,rsi
  407074:	jne    0x407708
  40707a:	call   0x427e70
  40707f:	cmp    edi,eax
  407081:	mov    r15d,eax
  407084:	jle    0x40724a
  40708a:	mov    r9,QWORD PTR [rbx+0x108]
  407091:	mov    r8,QWORD PTR [rbx+0x10]
  407095:	mov    rdx,r12
  407098:	mov    rcx,rsi
  40709b:	mov    BYTE PTR [rsp+0xec],0x1
  4070a3:	mov    edi,0x1
  4070a8:	call   0x4141a0
  4070ad:	mov    rcx,rsi
  4070b0:	call   0x427f68
  4070b5:	mov    rcx,QWORD PTR [rbx+0x10]
  4070b9:	mov    BYTE PTR [rsp+0xeb],0x0
  4070c1:	add    DWORD PTR [rsp+0xf0],r15d
  4070c9:	call   0x42a520
  4070ce:	cmp    QWORD PTR [rbx+0xc0],0x0
  4070d6:	je     0x4075eb
  4070dc:	xor    ecx,ecx
  4070de:	call   0x405e50
  4070e3:	mov    rax,QWORD PTR [rsp+0x40]
  4070e8:	mov    QWORD PTR [rbx+0x10],rax
  4070ec:	movzx  eax,BYTE PTR [rsp+0x4f]
  4070f1:	mov    BYTE PTR [rbx+0x18],al
  4070f4:	cmp    BYTE PTR [rbx+0x100],0x0
  4070fb:	jne    0x4072d5
  407101:	mov    rcx,QWORD PTR [rbx]
  407104:	lea    rdx,[rip+0x27748]        # 0x42e853
  40710b:	call   0x427ef0
  407110:	test   dil,dil
  407113:	mov    rsi,rax
  407116:	je     0x406f6b
  40711c:	mov    rcx,rax
  40711f:	call   0x406230
  407124:	test   al,al
  407126:	mov    rcx,rsi
  407129:	jne    0x407615
  40712f:	call   0x427f68
  407134:	test   r14b,r14b
  407137:	jne    0x406f7c
  40713d:	xor    r12d,r12d
  407140:	jmp    0x406fab
  407145:	mov    rcx,rdi
  407148:	call   0x427e20
  40714d:	cmp    eax,0x1
  407150:	jne    0x406f38
  407156:	mov    rcx,rdi
  407159:	call   0x427f68
  40715e:	mov    rcx,rsi
  407161:	call   0x427d60
  407166:	cmp    BYTE PTR [rbx+0x100],0x0
  40716d:	jne    0x407537
  407173:	pxor   xmm6,xmm6
  407177:	lea    r13,[rsp+0xa0]
  40717f:	cmp    QWORD PTR [rbx+0xc8],0x0
  407187:	mov    edi,0x2
  40718c:	je     0x407658
  407192:	lea    r8,[rip+0x27697]        # 0x42e830
  407199:	mov    r9d,edi
  40719c:	mov    edx,0x40
  4071a1:	mov    rcx,r13
  4071a4:	call   0x426220
  4071a9:	cmp    QWORD PTR [rbx+0xc0],0x0
  4071b1:	je     0x407006
  4071b7:	call   QWORD PTR [rip+0x559f7]        # 0x45cbb4
  4071bd:	mov    rcx,QWORD PTR [rbx+0xc0]
  4071c4:	add    rax,0x30
  4071c8:	mov    QWORD PTR [rbx+0x10],rax
  4071cc:	call   0x405e50
  4071d1:	test   al,al
  4071d3:	jne    0x407006
  4071d9:	mov    rax,QWORD PTR [rsp+0x40]
  4071de:	mov    QWORD PTR [rbx+0x10],rax
  4071e2:	movzx  eax,BYTE PTR [rsp+0x4f]
  4071e7:	mov    BYTE PTR [rbx+0x18],al
  4071ea:	jmp    0x406f4c
  4071ef:	lea    rcx,[rsp+0x50]
  4071f4:	call   QWORD PTR [rip+0x558e2]        # 0x45cadc
  4071fa:	jmp    0x40703d
  4071ff:	lea    rcx,[rsp+0x60]
  407204:	mov    rax,QWORD PTR [rsp+0x38]
  407209:	call   rax
  40720b:	mov    r15,QWORD PTR [rsp+0x60]
  407210:	sub    r15,QWORD PTR [rsp+0x50]
  407215:	lea    rcx,[rsp+0x70]
  40721a:	mov    QWORD PTR [rsp+0x60],r15
  40721f:	call   QWORD PTR [rip+0x558bf]        # 0x45cae4
  407225:	pxor   xmm0,xmm0
  407229:	pxor   xmm1,xmm1
  40722d:	cvtsi2sd xmm0,r15
  407232:	cvtsi2sd xmm1,QWORD PTR [rsp+0x70]
  407239:	mulsd  xmm0,xmm7
  40723d:	divsd  xmm0,xmm1
  407241:	addsd  xmm6,xmm0
  407245:	jmp    0x407058
  40724a:	mov    rax,QWORD PTR [rbx+0x10]
  40724e:	mov    QWORD PTR [rsp+0x30],rax
  407253:	call   QWORD PTR [rip+0x5595b]        # 0x45cbb4
  407259:	add    rax,0x30
  40725d:	cmp    QWORD PTR [rsp+0x30],rax
  407262:	jne    0x40726f
  407264:	cmp    BYTE PTR [rsp+0x4e],0x0
  407269:	je     0x407798
  40726f:	mov    r8,QWORD PTR [rbx+0x10]
  407273:	mov    r9,QWORD PTR [rbx+0x108]
  40727a:	mov    rdx,r12
  40727d:	mov    rcx,rsi
  407280:	call   0x4141a0
  407285:	mov    rcx,rsi
  407288:	call   0x427f68
  40728d:	mov    rcx,QWORD PTR [rbx+0x10]
  407291:	add    DWORD PTR [rsp+0xf0],r15d
  407299:	mov    BYTE PTR [rsp+0xeb],0x0
  4072a1:	call   0x42a520
  4072a6:	mov    rdx,QWORD PTR [rip+0x4d563]        # 0x454810
  4072ad:	test   eax,eax
  4072af:	movzx  edx,BYTE PTR [rdx]
  4072b2:	jne    0x4072c9
  4072b4:	test   dl,dl
  4072b6:	jne    0x4072c9
  4072b8:	mov    rcx,QWORD PTR [rbx+0x10]
  4072bc:	call   0x42a528
  4072c1:	test   eax,eax
  4072c3:	je     0x407030
  4072c9:	mov    edi,0x1
  4072ce:	jmp    0x4070ce
  4072d3:	xor    edi,edi
  4072d5:	lea    rcx,[rsp+0x50]
  4072da:	call   QWORD PTR [rip+0x557fc]        # 0x45cadc
  4072e0:	jmp    0x407101
  4072e5:	mov    rcx,QWORD PTR [rbx]
  4072e8:	mov    DWORD PTR [rsp+0x30],eax
  4072ec:	xor    r12d,r12d
  4072ef:	call   0x427df8
  4072f4:	cmp    eax,0x1
  4072f7:	mov    edx,DWORD PTR [rsp+0x30]
  4072fb:	jne    0x40691e
  407301:	jmp    0x406930
  407306:	mov    rcx,rsi
  407309:	call   0x427e20
  40730e:	cmp    eax,0x1
  407311:	jne    0x4068d6
  407317:	mov    rcx,rsi
  40731a:	mov    r14d,0x1
  407320:	call   0x427f68
  407325:	jmp    0x406ef3
  40732a:	lea    rdx,[rip+0x273b5]        # 0x42e6e6
  407331:	mov    r8d,0x5
  407337:	mov    rcx,rbp
  40733a:	call   0x427870
  40733f:	test   eax,eax
  407341:	je     0x4064b0
  407347:	lea    rdx,[rip+0x27614]        # 0x42e962
  40734e:	mov    r8d,0x5
  407354:	mov    rcx,rbp
  407357:	call   0x427870
  40735c:	test   eax,eax
  40735e:	je     0x4064b0
  407364:	lea    rdx,[rip+0x275fd]        # 0x42e968
  40736b:	mov    r8d,0x5
  407371:	mov    rcx,rbp
  407374:	call   0x427870
  407379:	test   eax,eax
  40737b:	je     0x4064b0
  407381:	lea    rdx,[rip+0x273c1]        # 0x42e749
  407388:	mov    r8d,0x5
  40738e:	mov    rcx,rbp
  407391:	call   0x427870
  407396:	test   eax,eax
  407398:	jne    0x406720
  40739e:	mov    rcx,rsi
  4073a1:	xor    edi,edi
  4073a3:	call   0x405a50
  4073a8:	mov    rbp,rax
  4073ab:	jmp    0x4073ba
  4073ad:	mov    edx,DWORD PTR [rbx+0x8]
  4073b0:	mov    rcx,rsi
  4073b3:	call   0x427e88
  4073b8:	add    edi,eax
  4073ba:	movsxd rsi,edi
  4073bd:	add    rsi,rbp
  4073c0:	movzx  ecx,BYTE PTR [rsi]
  4073c3:	call   r14
  4073c6:	test   eax,eax
  4073c8:	jne    0x4073ad
  4073ca:	cmp    edi,0x6
  4073cd:	jne    0x406720
  4073d3:	lea    rdx,[rip+0x27375]        # 0x42e74f
  4073da:	mov    r8d,0x6
  4073e0:	mov    rcx,rbp
  4073e3:	call   0x427870
  4073e8:	test   eax,eax
  4073ea:	jne    0x406720
  4073f0:	jmp    0x4064b0
  4073f5:	lea    rdx,[rip+0x272f0]        # 0x42e6ec
  4073fc:	mov    r8d,0x6
  407402:	mov    rcx,rbp
  407405:	call   0x427870
  40740a:	test   eax,eax
  40740c:	je     0x4064b0
  407412:	lea    rdx,[rip+0x272fb]        # 0x42e714
  407419:	mov    r8d,0x6
  40741f:	mov    rcx,rbp
  407422:	call   0x427870
  407427:	test   eax,eax
  407429:	je     0x4064b0
  40742f:	lea    rdx,[rip+0x2754f]        # 0x42e985
  407436:	mov    r8d,0x6
  40743c:	mov    rcx,rbp
  40743f:	call   0x427870
  407444:	test   eax,eax
  407446:	jne    0x406720
  40744c:	mov    rcx,rsi
  40744f:	xor    edi,edi
  407451:	call   0x405a50
  407456:	mov    rbp,rax
  407459:	jmp    0x407468
  40745b:	mov    edx,DWORD PTR [rbx+0x8]
  40745e:	mov    rcx,rsi
  407461:	call   0x427e88
  407466:	add    edi,eax
  407468:	movsxd rsi,edi
  40746b:	add    rsi,rbp
  40746e:	movzx  ecx,BYTE PTR [rsi]
  407471:	call   r14
  407474:	test   eax,eax
  407476:	jne    0x40745b
  407478:	cmp    edi,0x8
  40747b:	je     0x4077bb
  407481:	cmp    edi,0xa
  407484:	je     0x406ec8
  40748a:	cmp    edi,0x6
  40748d:	je     0x40782e
  407493:	cmp    edi,0x5
  407496:	jne    0x406720
  40749c:	lea    rdx,[rip+0x27293]        # 0x42e736
  4074a3:	mov    r8d,0x5
  4074a9:	mov    rcx,rbp
  4074ac:	call   0x427870
  4074b1:	test   eax,eax
  4074b3:	jne    0x406720
  4074b9:	lea    rcx,[rbp+0x5]
  4074bd:	xor    esi,esi
  4074bf:	call   0x405a50
  4074c4:	mov    rbp,rax
  4074c7:	jmp    0x4074dd
  4074c9:	nop    DWORD PTR [rax+0x0]
  4074d0:	mov    edx,DWORD PTR [rbx+0x8]
  4074d3:	mov    rcx,rdi
  4074d6:	call   0x427e88
  4074db:	add    esi,eax
  4074dd:	movsxd rdi,esi
  4074e0:	add    rdi,rbp
  4074e3:	movzx  ecx,BYTE PTR [rdi]
  4074e6:	call   r14
  4074e9:	test   eax,eax
  4074eb:	jne    0x4074d0
  4074ed:	cmp    esi,0xc
  4074f0:	jne    0x406720
  4074f6:	lea    rdx,[rip+0x2723f]        # 0x42e73c
  4074fd:	mov    r8d,0xc
  407503:	mov    rcx,rbp
  407506:	call   0x427870
  40750b:	test   eax,eax
  40750d:	je     0x4064b0
  407513:	jmp    0x406720
  407518:	nop    DWORD PTR [rax+rax*1+0x0]
  407520:	mov    rcx,rdi
  407523:	call   0x427e20
  407528:	cmp    eax,0x1
  40752b:	sete   r12b
  40752f:	and    r12d,esi
  407532:	jmp    0x406fa3
  407537:	lea    rcx,[rsp+0x60]
  40753c:	pxor   xmm6,xmm6
  407540:	call   QWORD PTR [rip+0x55596]        # 0x45cadc
  407546:	mov    rsi,QWORD PTR [rsp+0x60]
  40754b:	sub    rsi,QWORD PTR [rsp+0x50]
  407550:	lea    r13,[rsp+0xa0]
  407558:	mov    rcx,r13
  40755b:	mov    QWORD PTR [rsp+0x60],rsi
  407560:	call   QWORD PTR [rip+0x5557e]        # 0x45cae4
  407566:	cvtsi2sd xmm6,rsi
  40756b:	pxor   xmm0,xmm0
  40756f:	cvtsi2sd xmm0,QWORD PTR [rsp+0xa0]
  407579:	mulsd  xmm6,QWORD PTR [rip+0x27477]        # 0x42e9f8
  407581:	divsd  xmm6,xmm0
  407585:	addsd  xmm6,QWORD PTR [rip+0x27463]        # 0x42e9f0
  40758d:	jmp    0x40717f
  407592:	lea    rdx,[rip+0x2715a]        # 0x42e6f3
  407599:	mov    r8d,0x3
  40759f:	mov    rcx,rbp
  4075a2:	call   0x427870
  4075a7:	test   eax,eax
  4075a9:	jne    0x406720
  4075af:	jmp    0x4064b0
  4075b4:	lea    rdx,[rip+0x2713c]        # 0x42e6f7
  4075bb:	mov    r8d,0x8
  4075c1:	mov    rcx,rbp
  4075c4:	call   0x427870
  4075c9:	test   eax,eax
  4075cb:	jne    0x406720
  4075d1:	jmp    0x4064b0
  4075d6:	mov    rcx,rsi
  4075d9:	call   0x427f68
  4075de:	mov    rcx,QWORD PTR [rbx]
  4075e1:	call   0x427df0
  4075e6:	jmp    0x40649d
  4075eb:	cmp    BYTE PTR [rsp+0x4e],0x0
  4075f0:	je     0x4070f4
  4075f6:	mov    rcx,QWORD PTR [rbx+0x10]
  4075fa:	call   0x410290
  4075ff:	mov    rax,QWORD PTR [rsp+0x40]
  407604:	mov    QWORD PTR [rbx+0x10],rax
  407608:	movzx  eax,BYTE PTR [rsp+0x4f]
  40760d:	mov    BYTE PTR [rbx+0x18],al
  407610:	jmp    0x4070f4
  407615:	call   0x427e20
  40761a:	mov    rcx,rsi
  40761d:	cmp    eax,0x1
  407620:	sete   dil
  407624:	call   0x427f68
  407629:	test   r14b,r14b
  40762c:	mov    r12d,edi
  40762f:	je     0x406fab
  407635:	cmp    dil,0x1
  407639:	lea    rdx,[rip+0x26fa0]        # 0x42e5e0
  407640:	lea    rax,[rip+0x26f92]        # 0x42e5d9
  407647:	sbb    esi,esi
  407649:	add    esi,0x1
  40764c:	test   dil,dil
  40764f:	cmovne rdx,rax
  407653:	jmp    0x406f85
  407658:	mov    edi,DWORD PTR [rbx+0x120]
  40765e:	jmp    0x407192
  407663:	cmp    QWORD PTR [rbx+0xc0],0x0
  40766b:	lea    r12,[rsp+0xe0]
  407673:	lea    rsi,[rbx+0x28]
  407677:	mov    ecx,0x13
  40767c:	mov    rdi,r12
  40767f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  407682:	je     0x40780d
  407688:	mov    rdi,QWORD PTR [rbx+0x10]
  40768c:	movzx  esi,BYTE PTR [rbx+0x18]
  407690:	call   QWORD PTR [rip+0x5551e]        # 0x45cbb4
  407696:	mov    rcx,QWORD PTR [rbx+0xc0]
  40769d:	add    rax,0x30
  4076a1:	mov    QWORD PTR [rbx+0x10],rax
  4076a5:	call   0x405e50
  4076aa:	test   al,al
  4076ac:	jne    0x4077dd
  4076b2:	mov    QWORD PTR [rbx+0x10],rdi
  4076b6:	mov    BYTE PTR [rbx+0x18],sil
  4076ba:	xor    r12d,r12d
  4076bd:	jmp    0x406ce1
  4076c2:	cmp    BYTE PTR [rsp+0x4e],0x0
  4076c7:	je     0x4076e3
  4076c9:	mov    rcx,QWORD PTR [rbx+0x10]
  4076cd:	call   0x410290
  4076d2:	mov    rax,QWORD PTR [rsp+0x40]
  4076d7:	mov    QWORD PTR [rbx+0x10],rax
  4076db:	movzx  eax,BYTE PTR [rsp+0x4f]
  4076e0:	mov    BYTE PTR [rbx+0x18],al
  4076e3:	mov    rcx,rsi
  4076e6:	call   0x406230
  4076eb:	mov    rcx,rsi
  4076ee:	mov    edi,eax
  4076f0:	call   0x427f68
  4076f5:	cmp    QWORD PTR [rbx+0xc0],0x0
  4076fd:	jne    0x4070dc
  407703:	jmp    0x4070f4
  407708:	call   0x405f60
  40770d:	mov    rcx,rsi
  407710:	mov    edi,eax
  407712:	call   0x427f68
  407717:	jmp    0x4070ce
  40771c:	mov    rcx,rsi
  40771f:	call   0x405a50
  407724:	movzx  ecx,BYTE PTR [rax]
  407727:	call   r14
  40772a:	test   eax,eax
  40772c:	jne    0x406720
  407732:	jmp    0x4064b0
  407737:	mov    rcx,rsi
  40773a:	xor    dil,dil
  40773d:	call   0x405a50
  407742:	mov    rbp,rax
  407745:	jmp    0x40775d
  407747:	nop    WORD PTR [rax+rax*1+0x0]
  407750:	mov    edx,DWORD PTR [rbx+0x8]
  407753:	mov    rcx,rsi
  407756:	call   0x427e88
  40775b:	add    edi,eax
  40775d:	movsxd rsi,edi
  407760:	add    rsi,rbp
  407763:	movzx  ecx,BYTE PTR [rsi]
  407766:	call   r14
  407769:	test   eax,eax
  40776b:	jne    0x407750
  40776d:	cmp    edi,0xb
  407770:	jne    0x406720
  407776:	lea    rdx,[rip+0x26f8b]        # 0x42e708
  40777d:	mov    r8d,0xb
  407783:	mov    rcx,rbp
  407786:	call   0x427870
  40778b:	test   eax,eax
  40778d:	je     0x4064b0
  407793:	jmp    0x406720
  407798:	movzx  edx,WORD PTR [rsp+0xe8]
  4077a0:	mov    ecx,0x186a0
  4077a5:	call   0x410150
  4077aa:	mov    BYTE PTR [rsp+0x4e],0x1
  4077af:	mov    r8,rax
  4077b2:	mov    QWORD PTR [rbx+0x10],rax
  4077b6:	jmp    0x407273
  4077bb:	lea    rdx,[rip+0x26f59]        # 0x42e71b
  4077c2:	mov    r8d,0x8
  4077c8:	mov    rcx,rbp
  4077cb:	call   0x427870
  4077d0:	test   eax,eax
  4077d2:	jne    0x406720
  4077d8:	jmp    0x4064b0
  4077dd:	mov    r9,QWORD PTR [rbx+0x108]
  4077e4:	mov    r8,QWORD PTR [rbx+0x10]
  4077e8:	mov    rdx,r12
  4077eb:	mov    rcx,r13
  4077ee:	mov    r12d,0x1
  4077f4:	call   0x4141a0
  4077f9:	xor    ecx,ecx
  4077fb:	call   0x405e50
  407800:	mov    QWORD PTR [rbx+0x10],rdi
  407804:	mov    BYTE PTR [rbx+0x18],sil
  407808:	jmp    0x406ce1
  40780d:	mov    r9,QWORD PTR [rbx+0x108]
  407814:	mov    r8,QWORD PTR [rbx+0x10]
  407818:	mov    rdx,r12
  40781b:	mov    rcx,r13
  40781e:	mov    r12d,0x1
  407824:	call   0x4141a0
  407829:	jmp    0x406ce1
  40782e:	lea    rdx,[rip+0x26efa]        # 0x42e72f
  407835:	mov    r8d,0x6
  40783b:	mov    rcx,rbp
  40783e:	call   0x427870
  407843:	test   eax,eax
  407845:	jne    0x406720
  40784b:	mov    rcx,rsi
  40784e:	xor    dil,dil
  407851:	call   0x405a50
  407856:	mov    rbp,rax
  407859:	jmp    0x40786d
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    edx,DWORD PTR [rbx+0x8]
  407863:	mov    rcx,rsi
  407866:	call   0x427e88
  40786b:	add    edi,eax
  40786d:	movsxd rsi,edi
  407870:	add    rsi,rbp
  407873:	movzx  ecx,BYTE PTR [rsi]
  407876:	call   r14
  407879:	test   eax,eax
  40787b:	jne    0x407860
  40787d:	jmp    0x407493
  407882:	nop    DWORD PTR [rax+0x0]
  407886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407890:	push   rdi
  407891:	push   rsi
  407892:	push   rbx
  407893:	sub    rsp,0x20
  407897:	mov    rax,QWORD PTR [rip+0x4d042]        # 0x4548e0
  40789e:	xor    ebx,ebx
  4078a0:	mov    rcx,QWORD PTR [rax]
  4078a3:	test   rcx,rcx
  4078a6:	je     0x4078cd
  4078a8:	lea    rdx,[rip+0x270fd]        # 0x42e9ac
  4078af:	call   0x427e60
  4078b4:	test   rax,rax
  4078b7:	je     0x4078cd
  4078b9:	lea    rdi,[rip+0x270f9]        # 0x42e9b9
  4078c0:	mov    ecx,0x3
  4078c5:	mov    rsi,rax
  4078c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4078ca:	sete   bl
  4078cd:	mov    eax,ebx
  4078cf:	add    rsp,0x20
  4078d3:	pop    rbx
  4078d4:	pop    rsi
  4078d5:	pop    rdi
  4078d6:	ret    
  4078d7:	nop    WORD PTR [rax+rax*1+0x0]
  4078e0:	push   rdi
  4078e1:	push   rsi
  4078e2:	push   rbx
  4078e3:	sub    rsp,0x20
  4078e7:	mov    rax,QWORD PTR [rip+0x4cff2]        # 0x4548e0
  4078ee:	xor    ebx,ebx
  4078f0:	mov    rcx,QWORD PTR [rax]
  4078f3:	test   rcx,rcx
  4078f6:	je     0x40791d
  4078f8:	lea    rdx,[rip+0x270bd]        # 0x42e9bc
  4078ff:	call   0x427e60
  407904:	test   rax,rax
  407907:	je     0x40791d
  407909:	lea    rdi,[rip+0x270a9]        # 0x42e9b9
  407910:	mov    ecx,0x3
  407915:	mov    rsi,rax
  407918:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40791a:	sete   bl
  40791d:	mov    eax,ebx
  40791f:	add    rsp,0x20
  407923:	pop    rbx
  407924:	pop    rsi
  407925:	pop    rdi
  407926:	ret    
  407927:	nop    WORD PTR [rax+rax*1+0x0]
  407930:	push   rbx
  407931:	sub    rsp,0x20
  407935:	mov    rbx,QWORD PTR [rip+0x4cfa4]        # 0x4548e0
  40793c:	mov    rcx,QWORD PTR [rbx]
  40793f:	test   rcx,rcx
  407942:	je     0x407970
  407944:	lea    rdx,[rip+0x2708d]        # 0x42e9d8
  40794b:	call   0x427e60
  407950:	test   rax,rax
  407953:	je     0x407960
  407955:	add    rsp,0x20
  407959:	pop    rbx
  40795a:	ret    
  40795b:	nop    DWORD PTR [rax+rax*1+0x0]
  407960:	mov    rcx,QWORD PTR [rbx]
  407963:	add    rsp,0x20
  407967:	pop    rbx
  407968:	jmp    0x427de8
  40796d:	nop    DWORD PTR [rax]
  407970:	xor    eax,eax
  407972:	jmp    0x407955
  407974:	xchg   ax,ax
  407976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407980:	ret    
  407981:	nop
  407982:	nop
  407983:	nop
  407984:	nop
  407985:	nop
  407986:	nop
  407987:	nop
  407988:	nop
  407989:	nop
  40798a:	nop
  40798b:	nop
  40798c:	nop
  40798d:	nop
  40798e:	nop
  40798f:	nop
  407990:	push   rsi
  407991:	push   rbx
  407992:	sub    rsp,0x38
  407996:	lea    rcx,[rip+0x27075]        # 0x42ea12
  40799d:	call   0x42a4d0
  4079a2:	test   rax,rax
  4079a5:	mov    rsi,rax
  4079a8:	je     0x407c20
  4079ae:	lea    rcx,[rip+0x2706b]        # 0x42ea20
  4079b5:	call   0x4263a0
  4079ba:	lea    rcx,[rip+0x2708e]        # 0x42ea4f
  4079c1:	call   0x4263a0
  4079c6:	lea    rcx,[rip+0x2708b]        # 0x42ea58
  4079cd:	call   0x4263a0
  4079d2:	lea    rcx,[rip+0x270a8]        # 0x42ea81
  4079d9:	call   0x4263a0
  4079de:	lea    rcx,[rip+0x270ae]        # 0x42ea93
  4079e5:	call   0x42a4d0
  4079ea:	lea    rcx,[rip+0x270af]        # 0x42eaa0
  4079f1:	test   rax,rax
  4079f4:	mov    rbx,rax
  4079f7:	cmove  rbx,rsi
  4079fb:	call   0x4263a0
  407a00:	lea    rcx,[rip+0x270e9]        # 0x42eaf0
  407a07:	mov    rdx,rbx
  407a0a:	call   0x4263a0
  407a0f:	lea    rcx,[rip+0x27122]        # 0x42eb38
  407a16:	call   0x4263a0
  407a1b:	lea    rcx,[rip+0x2715e]        # 0x42eb80
  407a22:	call   0x4263a0
  407a27:	lea    rcx,[rip+0x27192]        # 0x42ebc0
  407a2e:	call   0x4263a0
  407a33:	lea    rcx,[rip+0x271e6]        # 0x42ec20
  407a3a:	call   0x4263a0
  407a3f:	lea    rcx,[rip+0x27222]        # 0x42ec68
  407a46:	call   0x4263a0
  407a4b:	lea    rcx,[rip+0x2725e]        # 0x42ecb0
  407a52:	call   0x4263a0
  407a57:	lea    rcx,[rip+0x272ca]        # 0x42ed28
  407a5e:	call   0x4263a0
  407a63:	lea    rcx,[rip+0x272f4]        # 0x42ed5e
  407a6a:	call   0x4263a0
  407a6f:	lea    rcx,[rip+0x2730a]        # 0x42ed80
  407a76:	call   0x4263a0
  407a7b:	lea    rcx,[rip+0x27336]        # 0x42edb8
  407a82:	call   0x4263a0
  407a87:	lea    rcx,[rip+0x2736a]        # 0x42edf8
  407a8e:	call   0x4263a0
  407a93:	lea    rcx,[rip+0x273ae]        # 0x42ee48
  407a9a:	call   0x4263a0
  407a9f:	lea    rcx,[rip+0x273da]        # 0x42ee80
  407aa6:	call   0x4263a0
  407aab:	lea    rcx,[rip+0x2741e]        # 0x42eed0
  407ab2:	call   0x4263a0
  407ab7:	lea    rcx,[rip+0x2745a]        # 0x42ef18
  407abe:	call   0x4263a0
  407ac3:	lea    rcx,[rip+0x2749e]        # 0x42ef68
  407aca:	call   0x4263a0
  407acf:	lea    rcx,[rip+0x274da]        # 0x42efb0
  407ad6:	call   0x4263a0
  407adb:	lea    rcx,[rip+0x27520]        # 0x42f002
  407ae2:	call   0x4263a0
  407ae7:	lea    rcx,[rip+0x27532]        # 0x42f020
  407aee:	call   0x4263a0
  407af3:	lea    rdx,[rip+0x2755e]        # 0x42f058
  407afa:	lea    rcx,[rip+0x2755f]        # 0x42f060
  407b01:	call   0x4263a0
  407b06:	lea    rcx,[rip+0x275c3]        # 0x42f0d0
  407b0d:	call   0x4263a0
  407b12:	lea    rcx,[rip+0x275ef]        # 0x42f108
  407b19:	call   0x4263a0
  407b1e:	lea    rcx,[rip+0x27633]        # 0x42f158
  407b25:	call   0x4263a0
  407b2a:	lea    rcx,[rip+0x2769f]        # 0x42f1d0
  407b31:	call   0x4263a0
  407b36:	lea    rcx,[rip+0x276c3]        # 0x42f200
  407b3d:	call   0x4263a0
  407b42:	lea    rcx,[rip+0x27707]        # 0x42f250
  407b49:	call   0x4263a0
  407b4e:	lea    rcx,[rip+0x2773b]        # 0x42f290
  407b55:	call   0x4263a0
  407b5a:	lea    rcx,[rip+0x2779f]        # 0x42f300
  407b61:	call   0x4263a0
  407b66:	lea    rcx,[rip+0x27804]        # 0x42f371
  407b6d:	call   0x4263a0
  407b72:	lea    rcx,[rip+0x2780e]        # 0x42f387
  407b79:	call   0x42a4d0
  407b7e:	test   rax,rax
  407b81:	mov    rdx,rax
  407b84:	lea    rax,[rip+0x26e75]        # 0x42ea00
  407b8b:	lea    rcx,[rip+0x277fe]        # 0x42f390
  407b92:	cmove  rdx,rax
  407b96:	call   0x4263a0
  407b9b:	lea    rcx,[rip+0x27843]        # 0x42f3e5
  407ba2:	call   0x42a4d0
  407ba7:	test   rax,rax
  407baa:	mov    rdx,rax
  407bad:	lea    rax,[rip+0x26e59]        # 0x42ea0d
  407bb4:	lea    rcx,[rip+0x27835]        # 0x42f3f0
  407bbb:	cmove  rdx,rax
  407bbf:	call   0x4263a0
  407bc4:	lea    rcx,[rip+0x26e47]        # 0x42ea12
  407bcb:	call   0x42a4d0
  407bd0:	lea    rcx,[rip+0x27861]        # 0x42f438
  407bd7:	test   rax,rax
  407bda:	mov    rdx,rax
  407bdd:	cmove  rdx,rsi
  407be1:	call   0x4263a0
  407be6:	lea    rcx,[rip+0x2788b]        # 0x42f478
  407bed:	call   0x4263a0
  407bf2:	lea    rcx,[rip+0x278b7]        # 0x42f4b0
  407bf9:	call   0x4263a0
  407bfe:	lea    rcx,[rip+0x278fb]        # 0x42f500
  407c05:	call   0x4263a0
  407c0a:	lea    rcx,[rip+0x27997]        # 0x42f5a8
  407c11:	call   0x4263a0
  407c16:	nop
  407c17:	add    rsp,0x38
  407c1b:	pop    rbx
  407c1c:	pop    rsi
  407c1d:	ret    
  407c1e:	xchg   ax,ax
  407c20:	lea    rcx,[rsp+0x28]
  407c25:	call   0x4246b0
  407c2a:	test   rax,rax
  407c2d:	mov    rsi,rax
  407c30:	jne    0x4079ae
  407c36:	mov    rdx,QWORD PTR [rsp+0x28]
  407c3b:	lea    rcx,[rip+0x26dd7]        # 0x42ea19
  407c42:	call   0x405d90
  407c47:	mov    ecx,0x1
  407c4c:	call   0x42a540
  407c51:	nop
  407c52:	nop    DWORD PTR [rax+0x0]
  407c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c60:	push   r12
  407c62:	push   rbp
  407c63:	push   rdi
  407c64:	push   rsi
  407c65:	push   rbx
  407c66:	sub    rsp,0x20
  407c6a:	mov    rsi,QWORD PTR [rip+0x4cc6f]        # 0x4548e0
  407c71:	lea    rdi,[rip+0x27960]        # 0x42f5d8
  407c78:	lea    rbp,[rip+0x27956]        # 0x42f5d5
  407c7f:	mov    ebx,ecx
  407c81:	mov    rcx,QWORD PTR [rsi]
  407c84:	call   0x427f30
  407c89:	movzx  edx,bx
  407c8c:	mov    ecx,0x67
  407c91:	mov    r12,rax
  407c94:	call   0x410150
  407c99:	lea    rdx,[rip+0x27941]        # 0x42f5e1
  407ca0:	mov    rcx,rax
  407ca3:	mov    rbx,rax
  407ca6:	call   0x426370
  407cab:	lea    rdx,[rip+0x2793e]        # 0x42f5f0
  407cb2:	mov    rcx,rbx
  407cb5:	call   0x426370
  407cba:	lea    rdx,[rip+0x27977]        # 0x42f638
  407cc1:	mov    rcx,rbx
  407cc4:	call   0x426370
  407cc9:	lea    rdx,[rip+0x279b8]        # 0x42f688
  407cd0:	mov    rcx,rbx
  407cd3:	call   0x426370
  407cd8:	lea    rdx,[rip+0x279f9]        # 0x42f6d8
  407cdf:	mov    rcx,rbx
  407ce2:	call   0x426370
  407ce7:	lea    rdx,[rip+0x27a3a]        # 0x42f728
  407cee:	mov    rcx,rbx
  407cf1:	call   0x426370
  407cf6:	lea    rdx,[rip+0x27a53]        # 0x42f750
  407cfd:	mov    rcx,rbx
  407d00:	call   0x426370
  407d05:	lea    rdx,[rip+0x27a7e]        # 0x42f78a
  407d0c:	mov    rcx,rbx
  407d0f:	call   0x426370
  407d14:	lea    rdx,[rip+0x27a71]        # 0x42f78c
  407d1b:	mov    rcx,rbx
  407d1e:	call   0x426370
  407d23:	lea    rdx,[rip+0x27a76]        # 0x42f7a0
  407d2a:	mov    rcx,rbx
  407d2d:	call   0x426370
  407d32:	lea    rdx,[rip+0x27ab7]        # 0x42f7f0
  407d39:	mov    rcx,rbx
  407d3c:	call   0x426370
  407d41:	lea    rdx,[rip+0x27af0]        # 0x42f838
  407d48:	mov    rcx,rbx
  407d4b:	call   0x426370
  407d50:	lea    rdx,[rip+0x27b21]        # 0x42f878
  407d57:	mov    rcx,rbx
  407d5a:	call   0x426370
  407d5f:	lea    rdx,[rip+0x27b52]        # 0x42f8b8
  407d66:	mov    rcx,rbx
  407d69:	call   0x426370
  407d6e:	lea    rdx,[rip+0x27a15]        # 0x42f78a
  407d75:	mov    rcx,rbx
  407d78:	call   0x426370
  407d7d:	lea    rdx,[rip+0x27b69]        # 0x42f8ed
  407d84:	mov    rcx,rbx
  407d87:	call   0x426370
  407d8c:	lea    rdx,[rip+0x27b6d]        # 0x42f900
  407d93:	mov    rcx,rbx
  407d96:	call   0x426370
  407d9b:	lea    rdx,[rip+0x27bae]        # 0x42f950
  407da2:	mov    rcx,rbx
  407da5:	call   0x426370
  407daa:	lea    rdx,[rip+0x27bdf]        # 0x42f990
  407db1:	mov    rcx,rbx
  407db4:	call   0x426370
  407db9:	lea    rdx,[rip+0x27c08]        # 0x42f9c8
  407dc0:	mov    rcx,rbx
  407dc3:	call   0x426370
  407dc8:	lea    rdx,[rip+0x27c49]        # 0x42fa18
  407dcf:	mov    rcx,rbx
  407dd2:	call   0x426370
  407dd7:	lea    rdx,[rip+0x27c82]        # 0x42fa60
  407dde:	mov    rcx,rbx
  407de1:	call   0x426370
  407de6:	lea    rdx,[rip+0x2799d]        # 0x42f78a
  407ded:	mov    rcx,rbx
  407df0:	call   0x426370
  407df5:	lea    rdx,[rip+0x27cab]        # 0x42faa7
  407dfc:	mov    rcx,rbx
  407dff:	call   0x426370
  407e04:	lea    rdx,[rip+0x27cad]        # 0x42fab8
  407e0b:	mov    rcx,rbx
  407e0e:	call   0x426370
  407e13:	lea    rdx,[rip+0x27cde]        # 0x42faf8
  407e1a:	mov    rcx,rbx
  407e1d:	call   0x426370
  407e22:	lea    rdx,[rip+0x27d0f]        # 0x42fb38
  407e29:	mov    rcx,rbx
  407e2c:	call   0x426370
  407e31:	lea    rdx,[rip+0x27d48]        # 0x42fb80
  407e38:	mov    rcx,rbx
  407e3b:	call   0x426370
  407e40:	lea    rdx,[rip+0x27d69]        # 0x42fbb0
  407e47:	mov    rcx,rbx
  407e4a:	call   0x426370
  407e4f:	lea    rdx,[rip+0x27d8a]        # 0x42fbe0
  407e56:	mov    rcx,rbx
  407e59:	call   0x426370
  407e5e:	lea    rdx,[rip+0x27dab]        # 0x42fc10
  407e65:	mov    rcx,rbx
  407e68:	call   0x426370
  407e6d:	lea    rdx,[rip+0x27dc4]        # 0x42fc38
  407e74:	mov    rcx,rbx
  407e77:	call   0x426370
  407e7c:	lea    rdx,[rip+0x27e05]        # 0x42fc88
  407e83:	mov    rcx,rbx
  407e86:	call   0x426370
  407e8b:	lea    rdx,[rip+0x27e2e]        # 0x42fcc0
  407e92:	mov    rcx,rbx
  407e95:	call   0x426370
  407e9a:	lea    rdx,[rip+0x27e47]        # 0x42fce8
  407ea1:	mov    rcx,rbx
  407ea4:	call   0x426370
  407ea9:	lea    rdx,[rip+0x27e68]        # 0x42fd18
  407eb0:	mov    rcx,rbx
  407eb3:	call   0x426370
  407eb8:	lea    rdx,[rip+0x27e89]        # 0x42fd48
  407ebf:	mov    rcx,rbx
  407ec2:	call   0x426370
  407ec7:	lea    rdx,[rip+0x27eaa]        # 0x42fd78
  407ece:	mov    rcx,rbx
  407ed1:	call   0x426370
  407ed6:	lea    rdx,[rip+0x27ed3]        # 0x42fdb0
  407edd:	mov    rcx,rbx
  407ee0:	call   0x426370
  407ee5:	lea    rdx,[rip+0x27f14]        # 0x42fe00
  407eec:	mov    rcx,rbx
  407eef:	call   0x426370
  407ef4:	lea    rdx,[rip+0x27f45]        # 0x42fe40
  407efb:	mov    rcx,rbx
  407efe:	call   0x426370
  407f03:	lea    rdx,[rip+0x27f6e]        # 0x42fe78
  407f0a:	mov    rcx,rbx
  407f0d:	call   0x426370
  407f12:	lea    rdx,[rip+0x27f97]        # 0x42feb0
  407f19:	mov    rcx,rbx
  407f1c:	call   0x426370
  407f21:	lea    rdx,[rip+0x27fc0]        # 0x42fee8
  407f28:	mov    rcx,rbx
  407f2b:	call   0x426370
  407f30:	lea    rdx,[rip+0x27fd9]        # 0x42ff10
  407f37:	mov    rcx,rbx
  407f3a:	call   0x426370
  407f3f:	lea    rdx,[rip+0x27ff2]        # 0x42ff38
  407f46:	mov    rcx,rbx
  407f49:	call   0x426370
  407f4e:	lea    rdx,[rip+0x28023]        # 0x42ff78
  407f55:	mov    rcx,rbx
  407f58:	call   0x426370
  407f5d:	lea    rdx,[rip+0x2804c]        # 0x42ffb0
  407f64:	mov    rcx,rbx
  407f67:	call   0x426370
  407f6c:	lea    rdx,[rip+0x28075]        # 0x42ffe8
  407f73:	mov    rcx,rbx
  407f76:	call   0x426370
  407f7b:	lea    rdx,[rip+0x2808e]        # 0x430010
  407f82:	mov    rcx,rbx
  407f85:	call   0x426370
  407f8a:	lea    rdx,[rip+0x280af]        # 0x430040
  407f91:	mov    rcx,rbx
  407f94:	call   0x426370
  407f99:	lea    rdx,[rip+0x280d0]        # 0x430070
  407fa0:	mov    rcx,rbx
  407fa3:	call   0x426370
  407fa8:	lea    rdx,[rip+0x28111]        # 0x4300c0
  407faf:	mov    rcx,rbx
  407fb2:	call   0x426370
  407fb7:	lea    rdx,[rip+0x28142]        # 0x430100
  407fbe:	mov    rcx,rbx
  407fc1:	call   0x426370
  407fc6:	lea    rdx,[rip+0x28163]        # 0x430130
  407fcd:	mov    rcx,rbx
  407fd0:	call   0x426370
  407fd5:	lea    rdx,[rip+0x2817c]        # 0x430158
  407fdc:	mov    rcx,rbx
  407fdf:	call   0x426370
  407fe4:	lea    rdx,[rip+0x2819d]        # 0x430188
  407feb:	mov    rcx,rbx
  407fee:	call   0x426370
  407ff3:	lea    rdx,[rip+0x281b6]        # 0x4301b0
  407ffa:	mov    rcx,rbx
  407ffd:	call   0x426370
  408002:	lea    rdx,[rip+0x281cf]        # 0x4301d8
  408009:	mov    rcx,rbx
  40800c:	call   0x426370
  408011:	lea    rdx,[rip+0x281f0]        # 0x430208
  408018:	mov    rcx,rbx
  40801b:	call   0x426370
  408020:	lea    rdx,[rip+0x28211]        # 0x430238
  408027:	mov    rcx,rbx
  40802a:	call   0x426370
  40802f:	lea    rdx,[rip+0x28232]        # 0x430268
  408036:	mov    rcx,rbx
  408039:	call   0x426370
  40803e:	lea    rdx,[rip+0x28253]        # 0x430298
  408045:	mov    rcx,rbx
  408048:	call   0x426370
  40804d:	lea    rdx,[rip+0x2827c]        # 0x4302d0
  408054:	mov    rcx,rbx
  408057:	call   0x426370
  40805c:	lea    rdx,[rip+0x27727]        # 0x42f78a
  408063:	mov    rcx,rbx
  408066:	call   0x426370
  40806b:	lea    rdx,[rip+0x28284]        # 0x4302f6
  408072:	mov    rcx,rbx
  408075:	call   0x426370
  40807a:	lea    rdx,[rip+0x28287]        # 0x430308
  408081:	mov    rcx,rbx
  408084:	call   0x426370
  408089:	lea    rdx,[rip+0x282c8]        # 0x430358
  408090:	mov    rcx,rbx
  408093:	call   0x426370
  408098:	lea    rdx,[rip+0x282f9]        # 0x430398
  40809f:	mov    rcx,rbx
  4080a2:	call   0x426370
  4080a7:	cmp    DWORD PTR [rsi+0x28],0x4
  4080ab:	lea    rdx,[rip+0x2833e]        # 0x4303f0
  4080b2:	mov    r8,rdi
  4080b5:	mov    rcx,rbx
  4080b8:	cmove  r8,rbp
  4080bc:	call   0x426370
  4080c1:	lea    rdx,[rip+0x28370]        # 0x430438
  4080c8:	mov    rcx,rbx
  4080cb:	call   0x426370
  4080d0:	cmp    BYTE PTR [rsi+0x32],0x0
  4080d4:	lea    rdx,[rip+0x28455]        # 0x430530
  4080db:	mov    r8,rdi
  4080de:	mov    rcx,rbx
  4080e1:	cmovne r8,rbp
  4080e5:	call   0x426370
  4080ea:	lea    rdx,[rip+0x28477]        # 0x430568
  4080f1:	mov    rcx,rbx
  4080f4:	call   0x426370
  4080f9:	movzx  eax,WORD PTR [rsi+0x2c]
  4080fd:	lea    r8,[rip+0x274d8]        # 0x42f5dc
  408104:	cmp    ax,0x2
  408108:	je     0x408114
  40810a:	test   ax,ax
  40810d:	cmovne rdi,rbp
  408111:	mov    r8,rdi
  408114:	lea    rdx,[rip+0x2849d]        # 0x4305b8
  40811b:	mov    rcx,rbx
  40811e:	call   0x426370
  408123:	lea    rdx,[rip+0x27660]        # 0x42f78a
  40812a:	mov    rcx,rbx
  40812d:	call   0x426370
  408132:	lea    rdx,[rip+0x284bf]        # 0x4305f8
  408139:	mov    rcx,rbx
  40813c:	call   0x426370
  408141:	test   r12,r12
  408144:	je     0x408290
  40814a:	lea    rdx,[rip+0x284b7]        # 0x430608
  408151:	mov    r8,r12
  408154:	mov    rcx,rbx
  408157:	call   0x426370
  40815c:	lea    rdx,[rip+0x28595]        # 0x4306f8
  408163:	mov    rcx,rbx
  408166:	call   0x426370
  40816b:	lea    rdx,[rip+0x285be]        # 0x430730
  408172:	mov    rcx,rbx
  408175:	call   0x426370
  40817a:	lea    rdx,[rip+0x285f7]        # 0x430778
  408181:	mov    rcx,rbx
  408184:	call   0x426370
  408189:	lea    rdx,[rip+0x275fa]        # 0x42f78a
  408190:	mov    rcx,rbx
  408193:	call   0x426370
  408198:	lea    rdx,[rip+0x28620]        # 0x4307bf
  40819f:	mov    rcx,rbx
  4081a2:	call   0x426370
  4081a7:	lea    rdx,[rip+0x2862a]        # 0x4307d8
  4081ae:	mov    rcx,rbx
  4081b1:	call   0x426370
  4081b6:	lea    rdx,[rip+0x2865b]        # 0x430818
  4081bd:	mov    rcx,rbx
  4081c0:	call   0x426370
  4081c5:	cmp    BYTE PTR [rsi+0x100],0x0
  4081cc:	lea    rax,[rip+0x27405]        # 0x42f5d8
  4081d3:	lea    r8,[rip+0x273fb]        # 0x42f5d5
  4081da:	lea    rdx,[rip+0x28677]        # 0x430858
  4081e1:	mov    rcx,rbx
  4081e4:	cmove  r8,rax
  4081e8:	call   0x426370
  4081ed:	lea    rdx,[rip+0x286ac]        # 0x4308a0
  4081f4:	mov    rcx,rbx
  4081f7:	call   0x426370
  4081fc:	lea    rdx,[rip+0x27587]        # 0x42f78a
  408203:	mov    rcx,rbx
  408206:	call   0x426370
  40820b:	lea    rdx,[rip+0x286dc]        # 0x4308ee
  408212:	mov    rcx,rbx
  408215:	call   0x426370
  40821a:	lea    rdx,[rip+0x286df]        # 0x430900
  408221:	mov    rcx,rbx
  408224:	call   0x426370
  408229:	lea    rdx,[rip+0x28710]        # 0x430940
  408230:	mov    rcx,rbx
  408233:	call   0x426370
  408238:	lea    rdx,[rip+0x28751]        # 0x430990
  40823f:	mov    rcx,rbx
  408242:	call   0x426370
  408247:	lea    rdx,[rip+0x2753c]        # 0x42f78a
  40824e:	mov    rcx,rbx
  408251:	call   0x426370
  408256:	lea    rdx,[rip+0x2876e]        # 0x4309cb
  40825d:	mov    rcx,rbx
  408260:	call   0x426370
  408265:	lea    rdx,[rip+0x28774]        # 0x4309e0
  40826c:	mov    rcx,rbx
  40826f:	call   0x426370
  408274:	mov    rcx,rbx
  408277:	add    rsp,0x20
  40827b:	pop    rbx
  40827c:	pop    rsi
  40827d:	pop    rdi
  40827e:	pop    rbp
  40827f:	pop    r12
  408281:	jmp    0x410290
  408286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408290:	lea    rdx,[rip+0x283e1]        # 0x430678
  408297:	mov    rcx,rbx
  40829a:	call   0x426370
  40829f:	jmp    0x40815c
  4082a4:	xchg   ax,ax
  4082a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082b0:	push   r15
  4082b2:	push   r14
  4082b4:	push   r13
  4082b6:	push   r12
  4082b8:	push   rbp
  4082b9:	push   rdi
  4082ba:	push   rsi
  4082bb:	push   rbx
  4082bc:	sub    rsp,0x78
  4082c0:	test   rcx,rcx
  4082c3:	mov    rbx,rcx
  4082c6:	mov    DWORD PTR [rsp+0x48],edx
  4082ca:	mov    esi,edx
  4082cc:	je     0x4084c2
  4082d2:	cmp    BYTE PTR [rcx],0x0
  4082d5:	je     0x4084c2
  4082db:	call   0x42a400
  4082e0:	lea    r14,[rsp+0x50]
  4082e5:	mov    r12,rax
  4082e8:	movzx  eax,si
  4082eb:	xor    r13d,r13d
  4082ee:	mov    QWORD PTR [rsp+0x38],0x0
  4082f7:	mov    DWORD PTR [rsp+0x44],0x1
  4082ff:	mov    DWORD PTR [rsp+0x4c],eax
  408303:	lea    rbp,[rip+0x2aa16]        # 0x432d20
  40830a:	lea    r15,[rip+0x28742]        # 0x430a53
  408311:	mov    r8,r12
  408314:	mov    rdx,r15
  408317:	mov    rcx,rbx
  40831a:	call   0x427870
  40831f:	test   eax,eax
  408321:	je     0x408336
  408323:	lea    rdi,[rip+0x2874b]        # 0x430a75
  40832a:	mov    rsi,rbx
  40832d:	mov    ecx,0x2
  408332:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408334:	jne    0x40834d
  408336:	mov    eax,DWORD PTR [rbp-0x8]
  408339:	mov    rdx,r15
  40833c:	mov    rcx,rbx
  40833f:	lea    r13d,[r13+rax*1+0x5]
  408344:	call   0x427790
  408349:	test   eax,eax
  40834b:	je     0x40835a
  40834d:	add    rbp,0x20
  408351:	mov    r15,QWORD PTR [rbp-0x20]
  408355:	test   r15,r15
  408358:	jne    0x408311
  40835a:	cmp    QWORD PTR [rsp+0x38],0x0
  408360:	je     0x40856c
  408366:	lea    rbp,[rip+0x2a993]        # 0x432d00
  40836d:	lea    r15,[rip+0x286df]        # 0x430a53
  408374:	mov    BYTE PTR [rsp+0x43],0x0
  408379:	jmp    0x4083d9
  40837b:	nop    DWORD PTR [rax+rax*1+0x0]
  408380:	mov    rcx,r14
  408383:	call   0x427da8
  408388:	mov    rcx,r14
  40838b:	call   QWORD PTR [rbp+0x10]
  40838e:	mov    rax,QWORD PTR [rsp+0x50]
  408393:	mov    rcx,QWORD PTR [rsp+0x38]
  408398:	lea    rdx,[rip+0x286d9]        # 0x430a78
  40839f:	mov    r8,r15
  4083a2:	mov    QWORD PTR [rsp+0x20],rax
  4083a7:	mov    r9,QWORD PTR [rbp+0x8]
  4083ab:	call   0x426370
  4083b0:	mov    rdx,r15
  4083b3:	mov    rcx,rbx
  4083b6:	call   0x427790
  4083bb:	test   eax,eax
  4083bd:	je     0x4084a6
  4083c3:	mov    r15,QWORD PTR [rbp+0x20]
  4083c7:	test   r15,r15
  4083ca:	je     0x4084a6
  4083d0:	mov    BYTE PTR [rsp+0x43],0x1
  4083d5:	add    rbp,0x20
  4083d9:	mov    r8,r12
  4083dc:	mov    rdx,r15
  4083df:	mov    rcx,rbx
  4083e2:	call   0x427870
  4083e7:	test   eax,eax
  4083e9:	je     0x408380
  4083eb:	lea    rdi,[rip+0x28683]        # 0x430a75
  4083f2:	mov    rsi,rbx
  4083f5:	mov    ecx,0x2
  4083fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4083fc:	je     0x408380
  4083fe:	mov    r15,QWORD PTR [rbp+0x20]
  408402:	test   r15,r15
  408405:	jne    0x4083d5
  408407:	cmp    BYTE PTR [rsp+0x43],0x0
  40840c:	jne    0x4084a6
  408412:	add    DWORD PTR [rsp+0x44],0x1
  408417:	mov    eax,DWORD PTR [rsp+0x44]
  40841b:	cmp    eax,0x4
  40841e:	je     0x408492
  408420:	cmp    BYTE PTR [rbx+0x1],0x20
  408424:	je     0x408582
  40842a:	cmp    r12,0x1
  40842e:	jbe    0x40846d
  408430:	mov    eax,0x2
  408435:	mov    ecx,0x1
  40843a:	jmp    0x408448
  40843c:	nop    DWORD PTR [rax+0x0]
  408440:	add    eax,0x1
  408443:	cmp    r12,rdx
  408446:	jbe    0x408455
  408448:	movsxd rdx,eax
  40844b:	add    rcx,0x1
  40844f:	cmp    BYTE PTR [rbx+rdx*1],0x20
  408453:	jne    0x408440
  408455:	cmp    DWORD PTR [rsp+0x44],0x2
  40845a:	je     0x4085b0
  408460:	cmp    rcx,r12
  408463:	jae    0x408478
  408465:	mov    r12,rcx
  408468:	jmp    0x408303
  40846d:	cmp    DWORD PTR [rsp+0x44],0x2
  408472:	je     0x4085ee
  408478:	cmp    QWORD PTR [rsp+0x38],0x0
  40847e:	jne    0x408492
  408480:	movzx  edx,WORD PTR [rsp+0x48]
  408485:	mov    ecx,r13d
  408488:	call   0x410150
  40848d:	mov    QWORD PTR [rsp+0x38],rax
  408492:	mov    rcx,QWORD PTR [rsp+0x38]
  408497:	lea    rdx,[rip+0x2860a]        # 0x430aa8
  40849e:	mov    r8,rbx
  4084a1:	call   0x426370
  4084a6:	mov    rcx,QWORD PTR [rsp+0x38]
  4084ab:	call   0x410290
  4084b0:	nop
  4084b1:	add    rsp,0x78
  4084b5:	pop    rbx
  4084b6:	pop    rsi
  4084b7:	pop    rdi
  4084b8:	pop    rbp
  4084b9:	pop    r12
  4084bb:	pop    r13
  4084bd:	pop    r14
  4084bf:	pop    r15
  4084c1:	ret    
  4084c2:	movzx  edx,WORD PTR [rsp+0x48]
  4084c7:	mov    ecx,0x52
  4084cc:	lea    rbx,[rip+0x2a82d]        # 0x432d00
  4084d3:	lea    r12,[rip+0x2b246]        # 0x433720
  4084da:	lea    rsi,[rip+0x28571]        # 0x430a52
  4084e1:	mov    ebp,0x51
  4084e6:	call   0x410150
  4084eb:	lea    rcx,[rip+0x28567]        # 0x430a59
  4084f2:	mov    r9,rax
  4084f5:	mov    r8d,0x10
  4084fb:	mov    edx,0x1
  408500:	mov    rdi,rax
  408503:	call   0x42a4e0
  408508:	nop    DWORD PTR [rax+rax*1+0x0]
  408510:	lea    rdx,[rip+0x28553]        # 0x430a6a
  408517:	mov    rcx,rdi
  40851a:	call   0x426370
  40851f:	mov    r9,QWORD PTR [rbx]
  408522:	lea    rdx,[rip+0x28544]        # 0x430a6d
  408529:	mov    r8d,0x21
  40852f:	mov    rcx,rdi
  408532:	test   r9,r9
  408535:	cmove  r9,rsi
  408539:	call   0x426370
  40853e:	cmp    ebp,0xa1
  408544:	jne    0x408591
  408546:	mov    rdx,rdi
  408549:	mov    ecx,0xa
  40854e:	add    rbx,0x20
  408552:	call   0x42a500
  408557:	add    ebp,0x1
  40855a:	cmp    rbx,r12
  40855d:	jne    0x408510
  40855f:	mov    rcx,rdi
  408562:	call   0x410290
  408567:	jmp    0x4084b1
  40856c:	mov    edx,DWORD PTR [rsp+0x4c]
  408570:	mov    ecx,r13d
  408573:	call   0x410150
  408578:	mov    QWORD PTR [rsp+0x38],rax
  40857d:	jmp    0x408366
  408582:	mov    ecx,0x1
  408587:	mov    eax,0x1
  40858c:	jmp    0x408455
  408591:	mov    r8,QWORD PTR [rbx+0xa20]
  408598:	lea    rdx,[rip+0x284d3]        # 0x430a72
  40859f:	mov    rcx,rdi
  4085a2:	test   r8,r8
  4085a5:	cmove  r8,rsi
  4085a9:	call   0x426370
  4085ae:	jmp    0x408546
  4085b0:	lea    edx,[rax+0x1]
  4085b3:	movsxd rdx,edx
  4085b6:	cmp    BYTE PTR [rbx+rdx*1],0x20
  4085ba:	je     0x408460
  4085c0:	add    eax,0x2
  4085c3:	cmp    r12,rdx
  4085c6:	jae    0x4085dc
  4085c8:	jmp    0x408460
  4085cd:	nop    DWORD PTR [rax]
  4085d0:	add    eax,0x1
  4085d3:	cmp    r12,rdx
  4085d6:	jb     0x408460
  4085dc:	movsxd rdx,eax
  4085df:	add    rcx,0x1
  4085e3:	cmp    BYTE PTR [rbx+rdx*1],0x20
  4085e7:	jne    0x4085d0
  4085e9:	jmp    0x408460
  4085ee:	cmp    BYTE PTR [rbx+0x3],0x20
  4085f2:	je     0x408478
  4085f8:	mov    ecx,0x1
  4085fd:	jmp    0x408460
  408602:	nop    DWORD PTR [rax+0x0]
  408606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408610:	lea    rcx,[rip+0x284e1]        # 0x430af8
  408617:	jmp    0x42a468
  40861c:	nop
  40861d:	nop
  40861e:	nop
  40861f:	nop
  408620:	ret    
  408621:	nop    DWORD PTR [rax+rax*1+0x0]
  408626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408630:	ret    
  408631:	nop    DWORD PTR [rax+rax*1+0x0]
  408636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408640:	ret    
  408641:	nop    DWORD PTR [rax+rax*1+0x0]
  408646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408650:	push   rdi
  408651:	push   rsi
  408652:	push   rbx
  408653:	sub    rsp,0x420
  40865a:	mov    rdi,rcx
  40865d:	mov    rcx,QWORD PTR [rip+0x51a3c]        # 0x45a0a0
  408664:	test   rcx,rcx
  408667:	je     0x408740
  40866d:	call   0x427d68
  408672:	mov    rbx,QWORD PTR [rip+0x4c277]        # 0x4548f0
  408679:	lea    rsi,[rsp+0x20]
  40867e:	jmp    0x4086b3
  408680:	mov    rcx,QWORD PTR [rip+0x51a19]        # 0x45a0a0
  408687:	mov    rdx,rsi
  40868a:	call   0x427dc8
  40868f:	mov    rax,QWORD PTR [rip+0x51a0a]        # 0x45a0a0
  408696:	test   rax,rax
  408699:	je     0x408700
  40869b:	cmp    QWORD PTR [rax+0x10],0x0
  4086a0:	je     0x408700
  4086a2:	mov    rdx,QWORD PTR [rax+0x8]
  4086a6:	mov    r9,QWORD PTR [rax]
  4086a9:	lea    rdx,[r9+rdx*1-0x1]
  4086ae:	cmp    BYTE PTR [rdx],0xa
  4086b1:	je     0x408720
  4086b3:	mov    r8,rdi
  4086b6:	mov    edx,0x400
  4086bb:	mov    rcx,rsi
  4086be:	mov    BYTE PTR [rbx],0x1
  4086c1:	call   0x42a518
  4086c6:	test   rax,rax
  4086c9:	mov    BYTE PTR [rbx],0x0
  4086cc:	jne    0x408680
  4086ce:	mov    rcx,rdi
  4086d1:	call   0x42a528
  4086d6:	test   eax,eax
  4086d8:	jne    0x408751
  4086da:	mov    rdx,QWORD PTR [rip+0x519bf]        # 0x45a0a0
  4086e1:	xor    eax,eax
  4086e3:	cmp    QWORD PTR [rdx+0x8],0x0
  4086e8:	je     0x40870e
  4086ea:	mov    rcx,QWORD PTR [rdx]
  4086ed:	call   0x424900
  4086f2:	add    rsp,0x420
  4086f9:	pop    rbx
  4086fa:	pop    rsi
  4086fb:	pop    rdi
  4086fc:	ret    
  4086fd:	nop    DWORD PTR [rax]
  408700:	lea    rcx,[rip+0x2ba5d]        # 0x434164
  408707:	call   0x405d90
  40870c:	xor    eax,eax
  40870e:	add    rsp,0x420
  408715:	pop    rbx
  408716:	pop    rsi
  408717:	pop    rdi
  408718:	ret    
  408719:	nop    DWORD PTR [rax+0x0]
  408720:	mov    BYTE PTR [rdx],0x0
  408723:	mov    rcx,QWORD PTR [rax]
  408726:	call   0x424900
  40872b:	add    rsp,0x420
  408732:	pop    rbx
  408733:	pop    rsi
  408734:	pop    rdi
  408735:	ret    
  408736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408740:	call   0x427dc0
  408745:	mov    QWORD PTR [rip+0x51954],rax        # 0x45a0a0
  40874c:	jmp    0x408672
  408751:	call   QWORD PTR [rip+0x54495]        # 0x45cbec
  408757:	mov    ecx,DWORD PTR [rax]
  408759:	call   0x42a408
  40875e:	lea    rcx,[rip+0x2b9db]        # 0x434140
  408765:	mov    rdx,rax
  408768:	call   0x405d90
  40876d:	xor    eax,eax
  40876f:	jmp    0x40870e
  408771:	nop    DWORD PTR [rax+rax*1+0x0]
  408776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408780:	push   rsi
  408781:	push   rbx
  408782:	sub    rsp,0x28
  408786:	mov    rbx,QWORD PTR [rip+0x54427]        # 0x45cbb4
  40878d:	mov    rsi,rcx
  408790:	call   rbx
  408792:	lea    rdx,[rax+0x30]
  408796:	mov    rcx,rsi
  408799:	call   0x42a4f8
  40879e:	call   rbx
  4087a0:	lea    rcx,[rax+0x30]
  4087a4:	call   0x42a520
  4087a9:	call   rbx
  4087ab:	mov    rcx,rax
  4087ae:	add    rsp,0x28
  4087b2:	pop    rbx
  4087b3:	pop    rsi
  4087b4:	jmp    0x408650
  4087b9:	nop    DWORD PTR [rax+0x0]
  4087c0:	lea    rcx,[rip+0xfffffffffffffe59]        # 0x408620
  4087c7:	jmp    0x428030
  4087cc:	nop    DWORD PTR [rax+0x0]
  4087d0:	sub    rsp,0x28
  4087d4:	lea    rcx,[rip+0x2b99d]        # 0x434178
  4087db:	call   0x405d90
  4087e0:	xor    eax,eax
  4087e2:	add    rsp,0x28
  4087e6:	ret    
  4087e7:	nop
  4087e8:	nop
  4087e9:	nop
  4087ea:	nop
  4087eb:	nop
  4087ec:	nop
  4087ed:	nop
  4087ee:	nop
  4087ef:	nop
  4087f0:	push   r12
  4087f2:	push   rbp
  4087f3:	push   rdi
  4087f4:	push   rsi
  4087f5:	push   rbx
  4087f6:	sub    rsp,0x20
  4087fa:	movzx  eax,BYTE PTR [rcx]
  4087fd:	mov    rsi,rcx
  408800:	mov    r12d,r9d
  408803:	mov    edi,edx
  408805:	mov    ebp,r8d
  408808:	test   al,al
  40880a:	je     0x408814
  40880c:	cmp    al,dl
  40880e:	je     0x40889c
  408814:	mov    rbx,rsi
  408817:	test   al,al
  408819:	je     0x408865
  40881b:	nop    DWORD PTR [rax+rax*1+0x0]
  408820:	cmp    al,dil
  408823:	je     0x408873
  408825:	cmp    al,bpl
  408828:	je     0x408890
  40882a:	mov    edx,r12d
  40882d:	mov    rcx,rbx
  408830:	call   0x427e88
  408835:	test   eax,eax
  408837:	lea    edx,[rax-0x1]
  40883a:	je     0x40885e
  40883c:	lea    rcx,[rdx+0x1]
  408840:	xor    eax,eax
  408842:	movzx  r10d,BYTE PTR [rbx+rax*1]
  408847:	mov    BYTE PTR [rsi+rax*1],r10b
  40884b:	add    rax,0x1
  40884f:	cmp    rax,rcx
  408852:	jne    0x408842
  408854:	lea    rax,[rdx+0x1]
  408858:	add    rsi,rax
  40885b:	add    rbx,rax
  40885e:	movzx  eax,BYTE PTR [rbx]
  408861:	test   al,al
  408863:	jne    0x408820
  408865:	mov    BYTE PTR [rsi],0x0
  408868:	add    rsp,0x20
  40886c:	pop    rbx
  40886d:	pop    rsi
  40886e:	pop    rdi
  40886f:	pop    rbp
  408870:	pop    r12
  408872:	ret    
  408873:	movzx  eax,BYTE PTR [rbx+0x1]
  408877:	test   al,al
  408879:	je     0x408865
  40887b:	cmp    dil,al
  40887e:	je     0x408885
  408880:	cmp    dil,bpl
  408883:	jne    0x40882a
  408885:	add    rbx,0x1
  408889:	jmp    0x40882a
  40888b:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	cmp    BYTE PTR [rbx+0x1],0x0
  408894:	je     0x40882a
  408896:	add    rbx,0x1
  40889a:	jmp    0x40882a
  40889c:	lea    rbx,[rcx+0x1]
  4088a0:	movzx  eax,BYTE PTR [rcx+0x1]
  4088a4:	jmp    0x408817
  4088a9:	nop    DWORD PTR [rax+0x0]
  4088b0:	push   r15
  4088b2:	push   r14
  4088b4:	push   r13
  4088b6:	push   r12
  4088b8:	push   rbp
  4088b9:	push   rdi
  4088ba:	push   rsi
  4088bb:	push   rbx
  4088bc:	sub    rsp,0x38
  4088c0:	mov    eax,DWORD PTR [rsp+0xb0]
  4088c7:	mov    r14d,DWORD PTR [rsp+0xa8]
  4088cf:	test   rcx,rcx
  4088d2:	mov    rbx,rcx
  4088d5:	mov    r12,rdx
  4088d8:	mov    rbp,r8
  4088db:	mov    r13,r9
  4088de:	movzx  edi,BYTE PTR [rsp+0xa0]
  4088e6:	mov    DWORD PTR [rsp+0x2c],eax
  4088ea:	je     0x408a50
  4088f0:	mov    rcx,QWORD PTR [rip+0x517c1]        # 0x45a0b8
  4088f7:	call   0x42a4e8
  4088fc:	mov    rcx,rbx
  4088ff:	call   0x42a400
  408904:	lea    rcx,[rax+rax*1+0x1]
  408909:	call   0x424800
  40890e:	mov    rdx,rbx
  408911:	mov    rcx,rax
  408914:	mov    QWORD PTR [rip+0x5179d],rax        # 0x45a0b8
  40891b:	call   0x42a418
  408920:	mov    QWORD PTR [rip+0x51789],rax        # 0x45a0b0
  408927:	mov    r15,rax
  40892a:	mov    rbx,QWORD PTR [rip+0x5177f]        # 0x45a0b0
  408931:	mov    rdx,r12
  408934:	mov    rcx,rbx
  408937:	call   0x42a3e0
  40893c:	mov    eax,eax
  40893e:	add    rbx,rax
  408941:	movzx  esi,BYTE PTR [rbx]
  408944:	test   sil,sil
  408947:	je     0x408b74
  40894d:	test   rbp,rbp
  408950:	je     0x4089a0
  408952:	movsx  edx,sil
  408956:	mov    rcx,rbp
  408959:	call   0x42a428
  40895e:	test   rax,rax
  408961:	je     0x4089a0
  408963:	movzx  eax,BYTE PTR [rbx+0x1]
  408967:	lea    rsi,[rbx+0x1]
  40896b:	test   al,al
  40896d:	je     0x408a30
  408973:	movsx  edx,al
  408976:	mov    rcx,r12
  408979:	call   0x42a428
  40897e:	test   rax,rax
  408981:	je     0x408bc0
  408987:	lea    rcx,[rbx+0x2]
  40898b:	mov    BYTE PTR [rbx+0x1],0x0
  40898f:	mov    QWORD PTR [rip+0x5171a],rcx        # 0x45a0b0
  408996:	mov    r15,rbx
  408999:	jmp    0x408a3a
  40899e:	xchg   ax,ax
  4089a0:	test   r14b,r14b
  4089a3:	je     0x4089c0
  4089a5:	mov    eax,esi
  4089a7:	and    eax,0xffffffdf
  4089aa:	cmp    al,0x45
  4089ac:	jne    0x4089c0
  4089ae:	cmp    BYTE PTR [rbx+0x1],0x27
  4089b2:	je     0x408b5a
  4089b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089c0:	test   r13,r13
  4089c3:	je     0x408ba0
  4089c9:	mov    r15,rbx
  4089cc:	movsx  r14d,sil
  4089d0:	mov    rcx,r13
  4089d3:	mov    edx,r14d
  4089d6:	call   0x42a428
  4089db:	test   rax,rax
  4089de:	jne    0x408a62
  4089e4:	mov    rdx,r12
  4089e7:	mov    rcx,rbx
  4089ea:	call   0x42a410
  4089ef:	test   rbp,rbp
  4089f2:	mov    esi,eax
  4089f4:	je     0x408a0b
  4089f6:	mov    rdx,rbp
  4089f9:	mov    rcx,rbx
  4089fc:	call   0x42a410
  408a01:	cmp    esi,eax
  408a03:	cmova  esi,eax
  408a06:	test   r13,r13
  408a09:	je     0x408a1b
  408a0b:	mov    rdx,r13
  408a0e:	mov    rcx,rbx
  408a11:	call   0x42a410
  408a16:	cmp    esi,eax
  408a18:	cmova  esi,eax
  408a1b:	mov    esi,esi
  408a1d:	add    rsi,rbx
  408a20:	movzx  eax,BYTE PTR [rsi]
  408a23:	test   al,al
  408a25:	jne    0x408b30
  408a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a30:	mov    QWORD PTR [rip+0x51679],rsi        # 0x45a0b0
  408a37:	mov    r15,rbx
  408a3a:	mov    rax,r15
  408a3d:	add    rsp,0x38
  408a41:	pop    rbx
  408a42:	pop    rsi
  408a43:	pop    rdi
  408a44:	pop    rbp
  408a45:	pop    r12
  408a47:	pop    r13
  408a49:	pop    r14
  408a4b:	pop    r15
  408a4d:	ret    
  408a4e:	xchg   ax,ax
  408a50:	mov    r15,QWORD PTR [rip+0x51661]        # 0x45a0b8
  408a57:	test   r15,r15
  408a5a:	jne    0x40892a
  408a60:	jmp    0x408a3a
  408a62:	movzx  eax,BYTE PTR [r15+0x1]
  408a67:	lea    rbp,[r15+0x1]
  408a6b:	test   al,al
  408a6d:	jne    0x408a9d
  408a6f:	jmp    0x408b20
  408a74:	cmp    al,sil
  408a77:	je     0x408b10
  408a7d:	mov    edx,DWORD PTR [rsp+0xb8]
  408a84:	mov    rcx,rbp
  408a87:	call   0x427e88
  408a8c:	cdqe   
  408a8e:	add    rbp,rax
  408a91:	movzx  eax,BYTE PTR [rbp+0x0]
  408a95:	test   al,al
  408a97:	je     0x408b20
  408a9d:	cmp    dil,al
  408aa0:	jne    0x408a74
  408aa2:	movzx  eax,BYTE PTR [rbp+0x1]
  408aa6:	test   al,al
  408aa8:	je     0x408ab0
  408aaa:	add    rbp,0x1
  408aae:	jmp    0x408a7d
  408ab0:	cmp    dil,sil
  408ab3:	jne    0x408a7d
  408ab5:	test   al,al
  408ab7:	lea    rsi,[rbp+0x1]
  408abb:	je     0x408b1b
  408abd:	movsx  edx,al
  408ac0:	mov    rcx,r12
  408ac3:	call   0x42a428
  408ac8:	test   rax,rax
  408acb:	je     0x408be3
  408ad1:	lea    rax,[rbp+0x2]
  408ad5:	mov    BYTE PTR [rbp+0x1],0x0
  408ad9:	mov    QWORD PTR [rip+0x515d0],rax        # 0x45a0b0
  408ae0:	cmp    BYTE PTR [rsp+0x2c],0x0
  408ae5:	mov    r15,rbx
  408ae8:	je     0x408a3a
  408aee:	mov    r9d,DWORD PTR [rsp+0xb8]
  408af6:	movsx  r8d,dil
  408afa:	mov    edx,r14d
  408afd:	mov    rcx,rbx
  408b00:	call   0x4087f0
  408b05:	jmp    0x408a3a
  408b0a:	nop    WORD PTR [rax+rax*1+0x0]
  408b10:	movzx  eax,BYTE PTR [rbp+0x1]
  408b14:	cmp    al,sil
  408b17:	je     0x408aaa
  408b19:	jmp    0x408ab5
  408b1b:	mov    rbp,rsi
  408b1e:	xchg   ax,ax
  408b20:	mov    QWORD PTR [rip+0x51589],rbp        # 0x45a0b0
  408b27:	jmp    0x408ae0
  408b29:	nop    DWORD PTR [rax+0x0]
  408b30:	movsx  edx,al
  408b33:	mov    rcx,r12
  408b36:	call   0x42a428
  408b3b:	test   rax,rax
  408b3e:	je     0x408c03
  408b44:	lea    rax,[rsi+0x1]
  408b48:	mov    BYTE PTR [rsi],0x0
  408b4b:	mov    QWORD PTR [rip+0x5155e],rax        # 0x45a0b0
  408b52:	mov    r15,rbx
  408b55:	jmp    0x408a3a
  408b5a:	lea    r15,[rbx+0x1]
  408b5e:	mov    esi,0x27
  408b63:	mov    edi,0x5c
  408b68:	lea    r13,[rip+0x2b641]        # 0x4341b0
  408b6f:	jmp    0x4089cc
  408b74:	mov    rcx,r15
  408b77:	xor    r15d,r15d
  408b7a:	call   0x42a4e8
  408b7f:	mov    QWORD PTR [rip+0x5152e],0x0        # 0x45a0b8
  408b8a:	mov    QWORD PTR [rip+0x5151b],0x0        # 0x45a0b0
  408b95:	jmp    0x408a3a
  408b9a:	nop    WORD PTR [rax+rax*1+0x0]
  408ba0:	mov    rdx,r12
  408ba3:	mov    rcx,rbx
  408ba6:	call   0x42a410
  408bab:	test   rbp,rbp
  408bae:	mov    esi,eax
  408bb0:	jne    0x4089f6
  408bb6:	jmp    0x408a1b
  408bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bc0:	mov    rcx,rsi
  408bc3:	call   0x42a400
  408bc8:	lea    r9,[rbx+0x2]
  408bcc:	lea    r8,[rax+0x1]
  408bd0:	mov    rdx,rsi
  408bd3:	mov    rcx,r9
  408bd6:	call   0x42a488
  408bdb:	mov    rcx,rax
  408bde:	jmp    0x40898b
  408be3:	mov    rcx,rsi
  408be6:	call   0x42a400
  408beb:	lea    r9,[rbp+0x2]
  408bef:	lea    r8,[rax+0x1]
  408bf3:	mov    rdx,rsi
  408bf6:	mov    rcx,r9
  408bf9:	call   0x42a488
  408bfe:	jmp    0x408ad5
  408c03:	mov    rcx,rsi
  408c06:	call   0x42a400
  408c0b:	lea    r9,[rsi+0x1]
  408c0f:	lea    r8,[rax+0x1]
  408c13:	mov    rdx,rsi
  408c16:	mov    rcx,r9
  408c19:	call   0x42a488
  408c1e:	jmp    0x408b48
  408c23:	nop    DWORD PTR [rax]
  408c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c30:	push   r15
  408c32:	push   r14
  408c34:	push   r13
  408c36:	push   r12
  408c38:	push   rbp
  408c39:	push   rdi
  408c3a:	push   rsi
  408c3b:	push   rbx
  408c3c:	sub    rsp,0x38
  408c40:	mov    edi,DWORD PTR [rsp+0xa0]
  408c47:	mov    r12d,0x1
  408c4d:	mov    ebx,r8d
  408c50:	mov    r14,rcx
  408c53:	mov    r13,rdx
  408c56:	mov    DWORD PTR [rsp+0x2c],r8d
  408c5b:	mov    esi,r8d
  408c5e:	mov    ebp,r9d
  408c61:	call   0x42a400
  408c66:	lea    rcx,[rax+rax*1+0x3]
  408c6b:	call   0x424800
  408c70:	lea    r15,[rax+0x1]
  408c74:	mov    BYTE PTR [rax],bl
  408c76:	mov    QWORD PTR [rsp+0x20],rax
  408c7b:	xor    ebx,ebx
  408c7d:	movsx  edx,BYTE PTR [r14]
  408c81:	test   dl,dl
  408c83:	je     0x408ce4
  408c85:	cmp    sil,dl
  408c88:	je     0x408d10
  408c8e:	cmp    dl,bpl
  408c91:	je     0x408d20
  408c97:	mov    rcx,r13
  408c9a:	call   0x42a428
  408c9f:	test   rax,rax
  408ca2:	cmovne ebx,r12d
  408ca6:	mov    edx,edi
  408ca8:	mov    rcx,r14
  408cab:	call   0x427e88
  408cb0:	test   eax,eax
  408cb2:	lea    r9d,[rax-0x1]
  408cb6:	je     0x408c7d
  408cb8:	lea    rcx,[r9+0x1]
  408cbc:	xor    eax,eax
  408cbe:	xchg   ax,ax
  408cc0:	movzx  edx,BYTE PTR [r14+rax*1]
  408cc5:	mov    BYTE PTR [r15+rax*1],dl
  408cc9:	add    rax,0x1
  408ccd:	cmp    rax,rcx
  408cd0:	jne    0x408cc0
  408cd2:	lea    rax,[r9+0x1]
  408cd6:	add    r14,rax
  408cd9:	add    r15,rax
  408cdc:	movsx  edx,BYTE PTR [r14]
  408ce0:	test   dl,dl
  408ce2:	jne    0x408c85
  408ce4:	movzx  eax,BYTE PTR [rsp+0x2c]
  408ce9:	test   bl,bl
  408ceb:	mov    BYTE PTR [r15+0x1],0x0
  408cf0:	mov    BYTE PTR [r15],al
  408cf3:	je     0x408d31
  408cf5:	mov    rax,QWORD PTR [rsp+0x20]
  408cfa:	add    rsp,0x38
  408cfe:	pop    rbx
  408cff:	pop    rsi
  408d00:	pop    rdi
  408d01:	pop    rbp
  408d02:	pop    r12
  408d04:	pop    r13
  408d06:	pop    r14
  408d08:	pop    r15
  408d0a:	ret    
  408d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d10:	mov    BYTE PTR [r15],sil
  408d13:	mov    ebx,0x1
  408d18:	add    r15,0x1
  408d1c:	jmp    0x408ca6
  408d1e:	xchg   ax,ax
  408d20:	mov    BYTE PTR [r15],bpl
  408d23:	mov    ebx,0x1
  408d28:	add    r15,0x1
  408d2c:	jmp    0x408ca6
  408d31:	mov    rcx,QWORD PTR [rsp+0x20]
  408d36:	call   0x42a4e8
  408d3b:	mov    QWORD PTR [rsp+0x20],0x0
  408d44:	jmp    0x408cf5
  408d46:	nop
  408d47:	nop
  408d48:	nop
  408d49:	nop
  408d4a:	nop
  408d4b:	nop
  408d4c:	nop
  408d4d:	nop
  408d4e:	nop
  408d4f:	nop
  408d50:	mov    rax,QWORD PTR [rip+0x513c9]        # 0x45a120
  408d57:	mov    rdx,QWORD PTR [rip+0x513d2]        # 0x45a130
  408d5e:	lea    rdx,[rax+rdx*8]
  408d62:	mov    rax,QWORD PTR [rdx]
  408d65:	mov    ecx,DWORD PTR [rax+0x20]
  408d68:	mov    rax,QWORD PTR [rax+0x10]
  408d6c:	mov    QWORD PTR [rip+0x522cd],rax        # 0x45b040
  408d73:	mov    rdx,QWORD PTR [rdx]
  408d76:	mov    QWORD PTR [rip+0x51393],rax        # 0x45a110
  408d7d:	mov    DWORD PTR [rip+0x51395],ecx        # 0x45a118
  408d83:	mov    rdx,QWORD PTR [rdx]
  408d86:	mov    QWORD PTR [rip+0x51343],rdx        # 0x45a0d0
  408d8d:	movzx  eax,BYTE PTR [rax]
  408d90:	mov    BYTE PTR [rip+0x51386],al        # 0x45a11c
  408d96:	ret    
  408d97:	nop    WORD PTR [rax+rax*1+0x0]
  408da0:	push   rsi
  408da1:	push   rbx
  408da2:	sub    rsp,0x28
  408da6:	movsxd rbx,edx
  408da9:	mov    rsi,rcx
  408dac:	lea    ecx,[rbx+0x1]
  408daf:	movsxd rcx,ecx
  408db2:	call   0x424800
  408db7:	mov    rdx,QWORD PTR [rip+0x5133a]        # 0x45a0f8
  408dbe:	mov    r10,rax
  408dc1:	cmp    BYTE PTR [rdx+0x24],0x0
  408dc5:	jne    0x408e20
  408dc7:	mov    rax,rsi
  408dca:	sub    rax,QWORD PTR [rdx+0x28]
  408dce:	mov    rcx,QWORD PTR [rdx+0x30]
  408dd2:	xor    r8d,r8d
  408dd5:	add    rax,rcx
  408dd8:	test   ebx,ebx
  408dda:	jg     0x408ded
  408ddc:	jmp    0x408e0a
  408dde:	xchg   ax,ax
  408de0:	mov    BYTE PTR [r10+r8*1],r9b
  408de4:	add    r8,0x1
  408de8:	cmp    ebx,r8d
  408deb:	jle    0x408e0a
  408ded:	movzx  r9d,BYTE PTR [rsi+r8*1]
  408df2:	cmp    r9b,0xff
  408df6:	jne    0x408de0
  408df8:	movzx  r9d,BYTE PTR [rax+r8*1]
  408dfd:	mov    BYTE PTR [r10+r8*1],r9b
  408e01:	add    r8,0x1
  408e05:	cmp    ebx,r8d
  408e08:	jg     0x408ded
  408e0a:	mov    rax,r10
  408e0d:	mov    BYTE PTR [r10+rbx*1],0x0
  408e12:	add    rsp,0x28
  408e16:	pop    rbx
  408e17:	pop    rsi
  408e18:	ret    
  408e19:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    r8,rbx
  408e23:	mov    rdx,rsi
  408e26:	mov    rcx,rax
  408e29:	call   0x42a490
  408e2e:	mov    r10,rax
  408e31:	mov    rax,r10
  408e34:	mov    BYTE PTR [r10+rbx*1],0x0
  408e39:	add    rsp,0x28
  408e3d:	pop    rbx
  408e3e:	pop    rsi
  408e3f:	ret    
  408e40:	push   r12
  408e42:	push   rbp
  408e43:	push   rdi
  408e44:	push   rsi
  408e45:	push   rbx
  408e46:	sub    rsp,0x240
  408e4d:	mov    rax,QWORD PTR [rip+0x5129c]        # 0x45a0f0
  408e54:	movsxd r12,DWORD PTR [rip+0x5127d]        # 0x45a0d8
  408e5b:	lea    rbp,[rsp+0x20]
  408e60:	lea    rsi,[rsp+0x40]
  408e65:	add    r12,QWORD PTR [rax]
  408e68:	mov    rcx,rbp
  408e6b:	call   0x427da8
  408e70:	lea    rdx,[rip+0x2b349]        # 0x4341c0
  408e77:	mov    rcx,r12
  408e7a:	call   0x424fe0
  408e7f:	test   rax,rax
  408e82:	mov    rbx,rax
  408e85:	jne    0x408eae
  408e87:	jmp    0x408ff0
  408e8c:	nop    DWORD PTR [rax+0x0]
  408e90:	mov    r8,rdi
  408e93:	mov    rdx,rsi
  408e96:	mov    rcx,rbp
  408e99:	call   0x427de0
  408e9e:	mov    rcx,rbx
  408ea1:	call   0x42a530
  408ea6:	test   eax,eax
  408ea8:	jne    0x408fd0
  408eae:	mov    r9,rbx
  408eb1:	mov    r8d,0x200
  408eb7:	mov    edx,0x1
  408ebc:	mov    rcx,rsi
  408ebf:	call   0x42a4f0
  408ec4:	mov    rcx,rbx
  408ec7:	mov    rdi,rax
  408eca:	call   0x42a528
  408ecf:	test   eax,eax
  408ed1:	je     0x408e90
  408ed3:	call   QWORD PTR [rip+0x53d13]        # 0x45cbec
  408ed9:	mov    ecx,DWORD PTR [rax]
  408edb:	mov    esi,0x1
  408ee0:	call   0x42a408
  408ee5:	lea    rcx,[rip+0x2b2d7]        # 0x4341c3
  408eec:	mov    r8,rax
  408eef:	mov    rdx,r12
  408ef2:	call   0x405d90
  408ef7:	mov    rcx,rbx
  408efa:	call   QWORD PTR [rip+0x53d24]        # 0x45cc24
  408f00:	cmp    eax,0xffffffff
  408f03:	je     0x408f70
  408f05:	cmp    QWORD PTR [rsp+0x30],0x0
  408f0b:	je     0x408fa0
  408f11:	mov    rcx,QWORD PTR [rip+0x511d8]        # 0x45a0f0
  408f18:	movsxd rax,DWORD PTR [rip+0x511b9]        # 0x45a0d8
  408f1f:	test   sil,sil
  408f22:	mov    rdx,QWORD PTR [rcx]
  408f25:	mov    QWORD PTR [rcx+0x8],rax
  408f29:	mov    BYTE PTR [rdx+rax*1],0x0
  408f2d:	jne    0x408f53
  408f2f:	mov    r8,QWORD PTR [rsp+0x28]
  408f34:	mov    rdx,QWORD PTR [rsp+0x20]
  408f39:	test   r8,r8
  408f3c:	je     0x408f4e
  408f3e:	cmp    BYTE PTR [rdx+r8*1-0x1],0xa
  408f44:	lea    rax,[r8-0x1]
  408f48:	je     0x408fe0
  408f4e:	call   0x427de0
  408f53:	mov    rcx,rbp
  408f56:	call   0x427d60
  408f5b:	nop
  408f5c:	add    rsp,0x240
  408f63:	pop    rbx
  408f64:	pop    rsi
  408f65:	pop    rdi
  408f66:	pop    rbp
  408f67:	pop    r12
  408f69:	ret    
  408f6a:	nop    WORD PTR [rax+rax*1+0x0]
  408f70:	call   QWORD PTR [rip+0x53c76]        # 0x45cbec
  408f76:	mov    ecx,DWORD PTR [rax]
  408f78:	call   0x42a408
  408f7d:	lea    rcx,[rip+0x2b23f]        # 0x4341c3
  408f84:	mov    r8,rax
  408f87:	mov    rdx,r12
  408f8a:	call   0x405d90
  408f8f:	cmp    QWORD PTR [rsp+0x30],0x0
  408f95:	jne    0x408faf
  408f97:	nop    WORD PTR [rax+rax*1+0x0]
  408fa0:	lea    rcx,[rip+0x2b224]        # 0x4341cb
  408fa7:	mov    rdx,r12
  408faa:	call   0x405d90
  408faf:	movsxd rax,DWORD PTR [rip+0x51122]        # 0x45a0d8
  408fb6:	mov    rdx,QWORD PTR [rip+0x51133]        # 0x45a0f0
  408fbd:	mov    QWORD PTR [rdx+0x8],rax
  408fc1:	mov    rdx,QWORD PTR [rdx]
  408fc4:	mov    BYTE PTR [rdx+rax*1],0x0
  408fc8:	jmp    0x408f53
  408fca:	nop    WORD PTR [rax+rax*1+0x0]
  408fd0:	xor    esi,esi
  408fd2:	jmp    0x408ef7
  408fd7:	nop    WORD PTR [rax+rax*1+0x0]
  408fe0:	mov    QWORD PTR [rsp+0x28],rax
  408fe5:	mov    r8,rax
  408fe8:	jmp    0x408f4e
  408fed:	nop    DWORD PTR [rax]
  408ff0:	call   QWORD PTR [rip+0x53bf6]        # 0x45cbec
  408ff6:	mov    ecx,DWORD PTR [rax]
  408ff8:	mov    esi,0x1
  408ffd:	call   0x42a408
  409002:	lea    rcx,[rip+0x2b1ba]        # 0x4341c3
  409009:	mov    r8,rax
  40900c:	mov    rdx,r12
  40900f:	call   0x405d90
  409014:	jmp    0x408f05
  409019:	nop    DWORD PTR [rax+0x0]
  409020:	push   rbx
  409021:	sub    rsp,0x20
  409025:	mov    rbx,rcx
  409028:	call   QWORD PTR [rip+0x53b86]        # 0x45cbb4
  40902e:	lea    rdx,[rip+0x2b1a9]        # 0x4341de
  409035:	lea    rcx,[rax+0x60]
  409039:	mov    r8,rbx
  40903c:	call   0x426370
  409041:	mov    ecx,0x2
  409046:	call   0x42a540
  40904b:	nop
  40904c:	nop    DWORD PTR [rax+0x0]
  409050:	push   rbp
  409051:	push   rdi
  409052:	push   rsi
  409053:	push   rbx
  409054:	sub    rsp,0x28
  409058:	mov    rax,QWORD PTR [rip+0x51099]        # 0x45a0f8
  40905f:	cmp    BYTE PTR [rax+0x24],0x0
  409063:	jne    0x4090c0
  409065:	mov    rsi,rcx
  409068:	sub    rsi,QWORD PTR [rax+0x28]
  40906c:	test   edx,edx
  40906e:	mov    rbp,QWORD PTR [rax+0x30]
  409072:	mov    rax,rsi
  409075:	jle    0x4090b5
  409077:	lea    edi,[rdx-0x1]
  40907a:	mov    rsi,rcx
  40907d:	xor    ebx,ebx
  40907f:	add    rbp,rax
  409082:	add    rdi,0x1
  409086:	jmp    0x4090a5
  409088:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	mov    rcx,QWORD PTR [rip+0x51059]        # 0x45a0f0
  409097:	add    rbx,0x1
  40909b:	call   0x427dd0
  4090a0:	cmp    rbx,rdi
  4090a3:	je     0x4090b5
  4090a5:	movsx  edx,BYTE PTR [rsi+rbx*1]
  4090a9:	cmp    dl,0xff
  4090ac:	jne    0x409090
  4090ae:	movsx  edx,BYTE PTR [rbp+rbx*1+0x0]
  4090b3:	jmp    0x409090
  4090b5:	add    rsp,0x28
  4090b9:	pop    rbx
  4090ba:	pop    rsi
  4090bb:	pop    rdi
  4090bc:	pop    rbp
  4090bd:	ret    
  4090be:	xchg   ax,ax
  4090c0:	movsxd r8,edx
  4090c3:	mov    rdx,rcx
  4090c6:	mov    rcx,QWORD PTR [rip+0x51023]        # 0x45a0f0
  4090cd:	add    rsp,0x28
  4090d1:	pop    rbx
  4090d2:	pop    rsi
  4090d3:	pop    rdi
  4090d4:	pop    rbp
  4090d5:	jmp    0x427de0
  4090da:	nop    WORD PTR [rax+rax*1+0x0]
  4090e0:	push   rbp
  4090e1:	push   rdi
  4090e2:	push   rsi
  4090e3:	push   rbx
  4090e4:	sub    rsp,0x28
  4090e8:	mov    eax,DWORD PTR [rip+0x51f5a]        # 0x45b048
  4090ee:	mov    ebp,ecx
  4090f0:	lea    edx,[rax-0x3]
  4090f3:	mov    rax,QWORD PTR [rip+0x51f46]        # 0x45b040
  4090fa:	lea    rcx,[rax+0x2]
  4090fe:	call   0x408da0
  409103:	mov    rsi,QWORD PTR [rip+0x4b7d6]        # 0x4548e0
  40910a:	mov    rdi,rax
  40910d:	mov    rdx,rax
  409110:	mov    rcx,QWORD PTR [rsi+0x110]
  409117:	call   0x40eb20
  40911c:	mov    rcx,rdi
  40911f:	mov    rbx,rax
  409122:	call   0x42a4e8
  409127:	test   rbx,rbx
  40912a:	je     0x4091b2
  409130:	mov    rdi,QWORD PTR [rsi]
  409133:	test   rdi,rdi
  409136:	je     0x4091d0
  40913c:	test   bpl,bpl
  40913f:	mov    rcx,rbx
  409142:	jne    0x409180
  409144:	call   0x42a400
  409149:	mov    rdx,rbx
  40914c:	mov    r8,rax
  40914f:	mov    rcx,rdi
  409152:	call   0x427f00
  409157:	mov    rbx,rax
  40915a:	test   rbx,rbx
  40915d:	je     0x40919b
  40915f:	mov    rcx,QWORD PTR [rip+0x50f8a]        # 0x45a0f0
  409166:	mov    rdx,rbx
  409169:	call   0x427dc8
  40916e:	mov    rcx,rbx
  409171:	add    rsp,0x28
  409175:	pop    rbx
  409176:	pop    rsi
  409177:	pop    rdi
  409178:	pop    rbp
  409179:	jmp    0x427ed0
  40917e:	xchg   ax,ax
  409180:	call   0x42a400
  409185:	mov    rdx,rbx
  409188:	mov    r8,rax
  40918b:	mov    rcx,rdi
  40918e:	call   0x427f08
  409193:	mov    rbx,rax
  409196:	test   rbx,rbx
  409199:	jne    0x40915f
  40919b:	mov    rcx,QWORD PTR [rsi]
  40919e:	call   0x427f10
  4091a3:	lea    rcx,[rip+0x2b066]        # 0x434210
  4091aa:	mov    rdx,rax
  4091ad:	call   0x405d90
  4091b2:	mov    edx,DWORD PTR [rip+0x51e90]        # 0x45b048
  4091b8:	mov    rcx,QWORD PTR [rip+0x51e81]        # 0x45b040
  4091bf:	add    rsp,0x28
  4091c3:	pop    rbx
  4091c4:	pop    rsi
  4091c5:	pop    rdi
  4091c6:	pop    rbp
  4091c7:	jmp    0x409050
  4091cc:	nop    DWORD PTR [rax+0x0]
  4091d0:	lea    rcx,[rip+0x2b011]        # 0x4341e8
  4091d7:	call   0x405d90
  4091dc:	jmp    0x4091b2
  4091de:	xchg   ax,ax
  4091e0:	push   rdi
  4091e1:	push   rsi
  4091e2:	push   rbx
  4091e3:	sub    rsp,0x20
  4091e7:	mov    rcx,QWORD PTR [rip+0x50f32]        # 0x45a120
  4091ee:	test   rcx,rcx
  4091f1:	je     0x409250
  4091f3:	mov    rbx,QWORD PTR [rip+0x50f2e]        # 0x45a128
  4091fa:	lea    rax,[rbx-0x1]
  4091fe:	cmp    rax,QWORD PTR [rip+0x50f2b]        # 0x45a130
  409205:	jbe    0x409210
  409207:	add    rsp,0x20
  40920b:	pop    rbx
  40920c:	pop    rsi
  40920d:	pop    rdi
  40920e:	ret    
  40920f:	nop
  409210:	lea    esi,[rbx+0x8]
  409213:	movsxd rsi,esi
  409216:	lea    rdx,[rsi*8+0x0]
  40921e:	call   0x42a460
  409223:	test   rax,rax
  409226:	mov    QWORD PTR [rip+0x50ef3],rax        # 0x45a120
  40922d:	je     0x409282
  40922f:	lea    rdx,[rax+rbx*8]
  409233:	mov    ecx,0x8
  409238:	xor    eax,eax
  40923a:	mov    QWORD PTR [rip+0x50ee7],rsi        # 0x45a128
  409241:	mov    rdi,rdx
  409244:	rep stos QWORD PTR es:[rdi],rax
  409247:	add    rsp,0x20
  40924b:	pop    rbx
  40924c:	pop    rsi
  40924d:	pop    rdi
  40924e:	ret    
  40924f:	nop
  409250:	mov    cl,0x8
  409252:	call   0x42a4a0
  409257:	test   rax,rax
  40925a:	mov    QWORD PTR [rip+0x50ebf],rax        # 0x45a120
  409261:	je     0x409282
  409263:	mov    QWORD PTR [rax],0x0
  40926a:	mov    QWORD PTR [rip+0x50eb3],0x1        # 0x45a128
  409275:	mov    QWORD PTR [rip+0x50eb0],0x0        # 0x45a130
  409280:	jmp    0x409207
  409282:	lea    rcx,[rip+0x2af8f]        # 0x434218
  409289:	call   0x409020
  40928e:	nop
  40928f:	nop
  409290:	push   rbx
  409291:	sub    rsp,0x20
  409295:	mov    rbx,rcx
  409298:	call   0x4091e0
  40929d:	mov    rax,QWORD PTR [rip+0x50e7c]        # 0x45a120
  4092a4:	test   rax,rax
  4092a7:	je     0x409300
  4092a9:	mov    rdx,QWORD PTR [rip+0x50e80]        # 0x45a130
  4092b0:	lea    rax,[rax+rdx*8]
  4092b4:	mov    rdx,QWORD PTR [rax]
  4092b7:	cmp    rdx,rbx
  4092ba:	je     0x4092f6
  4092bc:	test   rdx,rdx
  4092bf:	je     0x4092e4
  4092c1:	movzx  ecx,BYTE PTR [rip+0x50e54]        # 0x45a11c
  4092c8:	mov    rdx,QWORD PTR [rip+0x50e41]        # 0x45a110
  4092cf:	mov    BYTE PTR [rdx],cl
  4092d1:	mov    rcx,QWORD PTR [rax]
  4092d4:	mov    QWORD PTR [rcx+0x10],rdx
  4092d8:	mov    ecx,DWORD PTR [rip+0x50e3a]        # 0x45a118
  4092de:	mov    rdx,QWORD PTR [rax]
  4092e1:	mov    DWORD PTR [rdx+0x20],ecx
  4092e4:	mov    QWORD PTR [rax],rbx
  4092e7:	call   0x408d50
  4092ec:	mov    DWORD PTR [rip+0x50e0a],0x1        # 0x45a100
  4092f6:	add    rsp,0x20
  4092fa:	pop    rbx
  4092fb:	ret    
  4092fc:	nop    DWORD PTR [rax+0x0]
  409300:	test   rbx,rbx
  409303:	je     0x4092f6
  409305:	mov    rax,QWORD PTR [rip+0x50e24]        # 0x45a130
  40930c:	shl    rax,0x3
  409310:	jmp    0x4092e4
  409312:	nop    DWORD PTR [rax+0x0]
  409316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409320:	push   rbx
  409321:	sub    rsp,0x20
  409325:	test   rcx,rcx
  409328:	je     0x409390
  40932a:	mov    rax,QWORD PTR [rip+0x50def]        # 0x45a120
  409331:	test   rax,rax
  409334:	je     0x409346
  409336:	mov    rdx,QWORD PTR [rip+0x50df3]        # 0x45a130
  40933d:	lea    rax,[rax+rdx*8]
  409341:	cmp    rcx,QWORD PTR [rax]
  409344:	je     0x409380
  409346:	mov    eax,DWORD PTR [rcx+0x24]
  409349:	mov    rbx,rcx
  40934c:	test   eax,eax
  40934e:	jne    0x409360
  409350:	mov    rcx,rbx
  409353:	add    rsp,0x20
  409357:	pop    rbx
  409358:	jmp    0x42a4e8
  40935d:	nop    DWORD PTR [rax]
  409360:	mov    rcx,QWORD PTR [rcx+0x8]
  409364:	call   0x42a4e8
  409369:	mov    rcx,rbx
  40936c:	add    rsp,0x20
  409370:	pop    rbx
  409371:	jmp    0x42a4e8
  409376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409380:	mov    QWORD PTR [rax],0x0
  409387:	jmp    0x409346
  409389:	nop    DWORD PTR [rax+0x0]
  409390:	add    rsp,0x20
  409394:	pop    rbx
  409395:	ret    
  409396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093a0:	push   rbx
  4093a1:	sub    rsp,0x20
  4093a5:	mov    rbx,QWORD PTR [rcx]
  4093a8:	mov    rax,QWORD PTR [rbx+0x20]
  4093ac:	mov    QWORD PTR [rcx],rax
  4093af:	mov    rcx,QWORD PTR [rbx]
  4093b2:	call   0x409320
  4093b7:	mov    rcx,QWORD PTR [rbx+0x8]
  4093bb:	call   0x42a4e8
  4093c0:	mov    rcx,QWORD PTR [rbx+0x10]
  4093c4:	test   rcx,rcx
  4093c7:	je     0x4093ce
  4093c9:	call   0x42a4e8
  4093ce:	mov    rcx,QWORD PTR [rbx+0x18]
  4093d2:	test   rcx,rcx
  4093d5:	je     0x4093dc
  4093d7:	call   0x42a4e8
  4093dc:	mov    rcx,rbx
  4093df:	add    rsp,0x20
  4093e3:	pop    rbx
  4093e4:	jmp    0x42a4e8
  4093e9:	nop    DWORD PTR [rax+0x0]
  4093f0:	test   rcx,rcx
  4093f3:	je     0x40943a
  4093f5:	mov    rax,QWORD PTR [rcx+0x8]
  4093f9:	mov    DWORD PTR [rcx+0x20],0x0
  409400:	mov    BYTE PTR [rax],0x0
  409403:	mov    rax,QWORD PTR [rcx+0x8]
  409407:	mov    BYTE PTR [rax+0x1],0x0
  40940b:	mov    rax,QWORD PTR [rcx+0x8]
  40940f:	mov    DWORD PTR [rcx+0x2c],0x1
  409416:	mov    DWORD PTR [rcx+0x3c],0x0
  40941d:	mov    QWORD PTR [rcx+0x10],rax
  409421:	mov    rax,QWORD PTR [rip+0x50cf8]        # 0x45a120
  409428:	test   rax,rax
  40942b:	je     0x40943a
  40942d:	mov    rdx,QWORD PTR [rip+0x50cfc]        # 0x45a130
  409434:	cmp    rcx,QWORD PTR [rax+rdx*8]
  409438:	je     0x409440
  40943a:	repz ret 
  40943c:	nop    DWORD PTR [rax+0x0]
  409440:	jmp    0x408d50
  409445:	nop
  409446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409450:	push   rbp
  409451:	push   rdi
  409452:	push   rsi
  409453:	push   rbx
  409454:	sub    rsp,0x28
  409458:	mov    rsi,QWORD PTR [rip+0x5378d]        # 0x45cbec
  40945f:	mov    rbx,rcx
  409462:	mov    rbp,rdx
  409465:	call   rsi
  409467:	mov    rcx,rbx
  40946a:	mov    edi,DWORD PTR [rax]
  40946c:	call   0x4093f0
  409471:	mov    rax,QWORD PTR [rip+0x50ca8]        # 0x45a120
  409478:	mov    QWORD PTR [rbx],rbp
  40947b:	mov    DWORD PTR [rbx+0x38],0x1
  409482:	test   rax,rax
  409485:	je     0x409494
  409487:	mov    rdx,QWORD PTR [rip+0x50ca2]        # 0x45a130
  40948e:	cmp    rbx,QWORD PTR [rax+rdx*8]
  409492:	je     0x4094a2
  409494:	mov    DWORD PTR [rbx+0x30],0x1
  40949b:	mov    DWORD PTR [rbx+0x34],0x0
  4094a2:	mov    DWORD PTR [rbx+0x28],0x0
  4094a9:	call   rsi
  4094ab:	mov    DWORD PTR [rax],edi
  4094ad:	add    rsp,0x28
  4094b1:	pop    rbx
  4094b2:	pop    rsi
  4094b3:	pop    rdi
  4094b4:	pop    rbp
  4094b5:	ret    
  4094b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094c0:	push   rdi
  4094c1:	push   rsi
  4094c2:	push   rbx
  4094c3:	sub    rsp,0x20
  4094c7:	mov    rdi,rcx
  4094ca:	mov    ecx,0x40
  4094cf:	mov    esi,edx
  4094d1:	call   0x42a4a0
  4094d6:	test   rax,rax
  4094d9:	mov    rbx,rax
  4094dc:	je     0x409514
  4094de:	movsxd rax,esi
  4094e1:	lea    rcx,[rax+0x2]
  4094e5:	mov    QWORD PTR [rbx+0x18],rax
  4094e9:	call   0x42a4a0
  4094ee:	test   rax,rax
  4094f1:	mov    QWORD PTR [rbx+0x8],rax
  4094f5:	je     0x409514
  4094f7:	mov    rdx,rdi
  4094fa:	mov    rcx,rbx
  4094fd:	mov    DWORD PTR [rbx+0x24],0x1
  409504:	call   0x409450
  409509:	mov    rax,rbx
  40950c:	add    rsp,0x20
  409510:	pop    rbx
  409511:	pop    rsi
  409512:	pop    rdi
  409513:	ret    
  409514:	lea    rcx,[rip+0x2ad35]        # 0x434250
  40951b:	call   0x409020
  409520:	nop
  409521:	nop    DWORD PTR [rax+rax*1+0x0]
  409526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409530:	push   rsi
  409531:	push   rbx
  409532:	sub    rsp,0x28
  409536:	mov    rax,QWORD PTR [rip+0x50be3]        # 0x45a120
  40953d:	mov    rbx,rcx
  409540:	test   rax,rax
  409543:	je     0x409570
  409545:	mov    rdx,QWORD PTR [rip+0x50be4]        # 0x45a130
  40954c:	mov    rcx,QWORD PTR [rax+rdx*8]
  409550:	test   rcx,rcx
  409553:	je     0x409570
  409555:	mov    rdx,rbx
  409558:	call   0x409450
  40955d:	nop
  40955e:	add    rsp,0x28
  409562:	pop    rbx
  409563:	pop    rsi
  409564:	jmp    0x408d50
  409569:	nop    DWORD PTR [rax+0x0]
  409570:	call   0x4091e0
  409575:	mov    rdx,QWORD PTR [rip+0x50bb4]        # 0x45a130
  40957c:	mov    rax,QWORD PTR [rip+0x50b9d]        # 0x45a120
  409583:	mov    rcx,QWORD PTR [rip+0x50b46]        # 0x45a0d0
  40958a:	lea    rsi,[rax+rdx*8]
  40958e:	mov    edx,0x4000
  409593:	call   0x4094c0
  409598:	mov    QWORD PTR [rsi],rax
  40959b:	mov    rax,QWORD PTR [rip+0x50b7e]        # 0x45a120
  4095a2:	xor    ecx,ecx
  4095a4:	test   rax,rax
  4095a7:	je     0x409555
  4095a9:	mov    rdx,QWORD PTR [rip+0x50b80]        # 0x45a130
  4095b0:	mov    rcx,QWORD PTR [rax+rdx*8]
  4095b4:	jmp    0x409555
  4095b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095c0:	push   rbx
  4095c1:	sub    rsp,0x20
  4095c5:	test   rcx,rcx
  4095c8:	je     0x409655
  4095ce:	mov    rbx,rcx
  4095d1:	call   0x4091e0
  4095d6:	mov    rcx,QWORD PTR [rip+0x50b43]        # 0x45a120
  4095dd:	mov    rax,QWORD PTR [rip+0x50b4c]        # 0x45a130
  4095e4:	shl    rax,0x3
  4095e8:	test   rcx,rcx
  4095eb:	je     0x409643
  4095ed:	mov    rdx,QWORD PTR [rip+0x50b3c]        # 0x45a130
  4095f4:	lea    r8,[rdx*8+0x0]
  4095fc:	lea    rax,[rcx+r8*1]
  409600:	cmp    QWORD PTR [rax],0x0
  409604:	je     0x409643
  409606:	movzx  r10d,BYTE PTR [rip+0x50b0e]        # 0x45a11c
  40960e:	mov    r9,QWORD PTR [rip+0x50afb]        # 0x45a110
  409615:	mov    BYTE PTR [r9],r10b
  409618:	mov    r10,QWORD PTR [rax]
  40961b:	mov    QWORD PTR [r10+0x10],r9
  40961f:	mov    r10d,DWORD PTR [rip+0x50af2]        # 0x45a118
  409626:	mov    r9,QWORD PTR [rax]
  409629:	mov    DWORD PTR [r9+0x20],r10d
  40962d:	cmp    QWORD PTR [rax],0x0
  409631:	je     0x409643
  409633:	add    rdx,0x1
  409637:	lea    rax,[rcx+r8*1+0x8]
  40963c:	mov    QWORD PTR [rip+0x50aed],rdx        # 0x45a130
  409643:	mov    QWORD PTR [rax],rbx
  409646:	call   0x408d50
  40964b:	mov    DWORD PTR [rip+0x50aab],0x1        # 0x45a100
  409655:	add    rsp,0x20
  409659:	pop    rbx
  40965a:	ret    
  40965b:	nop    DWORD PTR [rax+rax*1+0x0]
  409660:	push   rdi
  409661:	push   rsi
  409662:	push   rbx
  409663:	sub    rsp,0x20
  409667:	mov    rsi,QWORD PTR [rip+0x50ab2]        # 0x45a120
  40966e:	test   rsi,rsi
  409671:	je     0x4096b8
  409673:	mov    rbx,QWORD PTR [rip+0x50ab6]        # 0x45a130
  40967a:	lea    rdi,[rsi+rbx*8]
  40967e:	mov    rcx,QWORD PTR [rdi]
  409681:	test   rcx,rcx
  409684:	je     0x4096b8
  409686:	call   0x409320
  40968b:	test   rbx,rbx
  40968e:	mov    QWORD PTR [rdi],0x0
  409695:	je     0x4096b8
  409697:	sub    rbx,0x1
  40969b:	cmp    QWORD PTR [rsi+rbx*8],0x0
  4096a0:	mov    QWORD PTR [rip+0x50a89],rbx        # 0x45a130
  4096a7:	je     0x4096b8
  4096a9:	call   0x408d50
  4096ae:	mov    DWORD PTR [rip+0x50a48],0x1        # 0x45a100
  4096b8:	add    rsp,0x20
  4096bc:	pop    rbx
  4096bd:	pop    rsi
  4096be:	pop    rdi
  4096bf:	ret    
  4096c0:	push   rdi
  4096c1:	push   rsi
  4096c2:	push   rbx
  4096c3:	sub    rsp,0x20
  4096c7:	cmp    rdx,0x1
  4096cb:	jbe    0x409740
  4096cd:	cmp    BYTE PTR [rcx+rdx*1-0x2],0x0
  4096d2:	lea    rdi,[rdx-0x2]
  4096d6:	jne    0x409740
  4096d8:	cmp    BYTE PTR [rcx+rdx*1-0x1],0x0
  4096dd:	jne    0x409740
  4096df:	mov    rsi,rcx
  4096e2:	mov    ecx,0x40
  4096e7:	call   0x42a4a0
  4096ec:	test   rax,rax
  4096ef:	mov    rbx,rax
  4096f2:	je     0x40974a
  4096f4:	mov    QWORD PTR [rax+0x18],rdi
  4096f8:	mov    QWORD PTR [rax+0x8],rsi
  4096fc:	mov    rcx,rax
  4096ff:	mov    QWORD PTR [rax+0x10],rsi
  409703:	mov    DWORD PTR [rax+0x20],edi
  409706:	mov    DWORD PTR [rax+0x24],0x0
  40970d:	mov    QWORD PTR [rax],0x0
  409714:	mov    DWORD PTR [rax+0x28],0x0
  40971b:	mov    DWORD PTR [rax+0x2c],0x1
  409722:	mov    DWORD PTR [rax+0x38],0x0
  409729:	mov    DWORD PTR [rax+0x3c],0x0
  409730:	call   0x409290
  409735:	mov    rax,rbx
  409738:	add    rsp,0x20
  40973c:	pop    rbx
  40973d:	pop    rsi
  40973e:	pop    rdi
  40973f:	ret    
  409740:	xor    eax,eax
  409742:	add    rsp,0x20
  409746:	pop    rbx
  409747:	pop    rsi
  409748:	pop    rdi
  409749:	ret    
  40974a:	lea    rcx,[rip+0x2ab2f]        # 0x434280
  409751:	call   0x409020
  409756:	nop
  409757:	nop    WORD PTR [rax+rax*1+0x0]
  409760:	push   r14
  409762:	push   r13
  409764:	push   r12
  409766:	push   rbp
  409767:	push   rdi
  409768:	push   rsi
  409769:	push   rbx
  40976a:	sub    rsp,0x20
  40976e:	lea    ebp,[rdx+0x2]
  409771:	mov    esi,edx
  409773:	mov    rdi,rcx
  409776:	mov    rbx,r8
  409779:	movsxd rbp,ebp
  40977c:	mov    rcx,rbp
  40977f:	call   0x424800
  409784:	movsxd r8,esi
  409787:	mov    QWORD PTR [rbx],rax
  40978a:	mov    r12,rax
  40978d:	mov    BYTE PTR [rax+r8*1+0x1],0x0
  409793:	mov    BYTE PTR [rax+r8*1],0x0
  409798:	mov    rax,QWORD PTR [rip+0x50959]        # 0x45a0f8
  40979f:	cmp    BYTE PTR [rax+0x24],0x0
  4097a3:	jne    0x409809
  4097a5:	test   esi,esi
  4097a7:	jle    0x409814
  4097a9:	xor    ebx,ebx
  4097ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4097b0:	movsxd r13,ebx
  4097b3:	mov    edx,DWORD PTR [rax+0x20]
  4097b6:	lea    r14,[rdi+r13*1]
  4097ba:	mov    rcx,r14
  4097bd:	call   0x427e88
  4097c2:	movzx  edx,BYTE PTR [r14]
  4097c6:	lea    r9d,[rax-0x1]
  4097ca:	lea    r8d,[rbx+0x1]
  4097ce:	test   r9d,r9d
  4097d1:	mov    BYTE PTR [r12+r13*1],dl
  4097d5:	jle    0x40982d
  4097d7:	cmp    esi,r8d
  4097da:	jg     0x4097e5
  4097dc:	jmp    0x40982d
  4097de:	xchg   ax,ax
  4097e0:	test   r9d,r9d
  4097e3:	jle    0x4097fc
  4097e5:	lea    ebx,[r8+0x1]
  4097e9:	sub    r9d,0x1
  4097ed:	movsxd r8,r8d
  4097f0:	mov    BYTE PTR [r12+r8*1],0xff
  4097f5:	cmp    esi,ebx
  4097f7:	mov    r8d,ebx
  4097fa:	jg     0x4097e0
  4097fc:	cmp    esi,ebx
  4097fe:	jle    0x409814
  409800:	mov    rax,QWORD PTR [rip+0x508f1]        # 0x45a0f8
  409807:	jmp    0x4097b0
  409809:	mov    rdx,rdi
  40980c:	mov    rcx,r12
  40980f:	call   0x42a490
  409814:	mov    rdx,rbp
  409817:	mov    rcx,r12
  40981a:	add    rsp,0x20
  40981e:	pop    rbx
  40981f:	pop    rsi
  409820:	pop    rdi
  409821:	pop    rbp
  409822:	pop    r12
  409824:	pop    r13
  409826:	pop    r14
  409828:	jmp    0x4096c0
  40982d:	mov    ebx,r8d
  409830:	jmp    0x4097fc
  409832:	nop    DWORD PTR [rax+0x0]
  409836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409840:	push   r15
  409842:	push   r14
  409844:	push   r13
  409846:	push   r12
  409848:	push   rbp
  409849:	push   rdi
  40984a:	push   rsi
  40984b:	push   rbx
  40984c:	sub    rsp,0x58
  409850:	mov    eax,DWORD PTR [rip+0x508b2]        # 0x45a108
  409856:	test   eax,eax
  409858:	jne    0x4098bb
  40985a:	mov    eax,DWORD PTR [rip+0x508a4]        # 0x45a104
  409860:	mov    DWORD PTR [rip+0x5089e],0x1        # 0x45a108
  40986a:	test   eax,eax
  40986c:	jne    0x409878
  40986e:	mov    DWORD PTR [rip+0x5088c],0x1        # 0x45a104
  409878:	cmp    QWORD PTR [rip+0x50850],0x0        # 0x45a0d0
  409880:	je     0x40b75d
  409886:	cmp    QWORD PTR [rip+0x5083a],0x0        # 0x45a0c8
  40988e:	je     0x40b747
  409894:	mov    rax,QWORD PTR [rip+0x50885]        # 0x45a120
  40989b:	test   rax,rax
  40989e:	je     0x40b3e3
  4098a4:	mov    rdx,QWORD PTR [rip+0x50885]        # 0x45a130
  4098ab:	cmp    QWORD PTR [rax+rdx*8],0x0
  4098b0:	je     0x40b3e3
  4098b6:	call   0x408d50
  4098bb:	mov    rcx,QWORD PTR [rip+0x4b01e]        # 0x4548e0
  4098c2:	movzx  edx,BYTE PTR [rip+0x50853]        # 0x45a11c
  4098c9:	lea    r15,[rip+0x51778]        # 0x45b048
  4098d0:	movsxd rax,DWORD PTR [rip+0x5082d]        # 0x45a104
  4098d7:	mov    rbx,QWORD PTR [rip+0x50832]        # 0x45a110
  4098de:	lea    rsi,[rip+0x2b61b]        # 0x434f00
  4098e5:	lea    rdi,[rip+0x2af54]        # 0x434840
  4098ec:	lea    r12,[rip+0x5174d]        # 0x45b040
  4098f3:	mov    r14,r15
  4098f6:	mov    QWORD PTR [rsp+0x20],rcx
  4098fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409900:	lea    r10,[rip+0x2aae9]        # 0x4343f0
  409907:	mov    BYTE PTR [rbx],dl
  409909:	mov    rbp,rbx
  40990c:	mov    r13,r14
  40990f:	lea    rcx,[rax+rax*2]
  409913:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  409917:	mov    rax,rcx
  40991a:	shl    rax,0x4
  40991e:	sub    rax,rcx
  409921:	add    rax,rdx
  409924:	movsx  rax,WORD PTR [rsi+rax*2]
  409929:	test   eax,eax
  40992b:	jle    0x409940
  40992d:	add    rbx,0x1
  409931:	movzx  edx,BYTE PTR [rbx]
  409934:	jmp    0x40990f
  409936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409940:	neg    eax
  409942:	movsxd rdx,eax
  409945:	lea    rax,[rip+0x2b2f4]        # 0x434c40
  40994c:	mov    QWORD PTR [r12],rbp
  409950:	mov    QWORD PTR [rip+0x507b9],rbx        # 0x45a110
  409957:	movsx  eax,WORD PTR [rax+rdx*2]
  40995b:	mov    rdx,rbx
  40995e:	sub    rdx,rbp
  409961:	mov    DWORD PTR [r13+0x0],edx
  409965:	movzx  edx,BYTE PTR [rbx]
  409968:	mov    BYTE PTR [rbx],0x0
  40996b:	mov    BYTE PTR [rip+0x507ab],dl        # 0x45a11c
  409971:	cmp    eax,0x88
  409976:	ja     0x40b3d7
  40997c:	movsxd rax,DWORD PTR [r10+rax*4]
  409980:	add    rax,r10
  409983:	jmp    rax
  409985:	movzx  eax,BYTE PTR [rip+0x50790]        # 0x45a11c
  40998c:	mov    BYTE PTR [rbx],al
  40998e:	mov    QWORD PTR [rip+0x5077b],rbp        # 0x45a110
  409995:	mov    QWORD PTR [rip+0x516a4],rbp        # 0x45b040
  40999c:	mov    DWORD PTR [rip+0x516a2],0x0        # 0x45b048
  4099a6:	movzx  eax,BYTE PTR [rbp+0x0]
  4099aa:	mov    BYTE PTR [rip+0x5076c],al        # 0x45a11c
  4099b0:	mov    BYTE PTR [rbp+0x0],0x0
  4099b4:	mov    eax,0x3
  4099b9:	add    rsp,0x58
  4099bd:	pop    rbx
  4099be:	pop    rsi
  4099bf:	pop    rdi
  4099c0:	pop    rbp
  4099c1:	pop    r12
  4099c3:	pop    r13
  4099c5:	pop    r14
  4099c7:	pop    r15
  4099c9:	ret    
  4099ca:	lea    rcx,[rip+0x2a8ea]        # 0x4342bb
  4099d1:	call   0x409020
  4099d6:	mov    rax,QWORD PTR [rip+0x50713]        # 0x45a0f0
  4099dd:	mov    r14,r13
  4099e0:	cmp    QWORD PTR [rax+0x8],0x0
  4099e5:	je     0x40b2ac
  4099eb:	mov    rcx,QWORD PTR [r12]
  4099ef:	cmp    BYTE PTR [rcx],0x2d
  4099f2:	je     0x40b2ac
  4099f8:	mov    edx,DWORD PTR [r13+0x0]
  4099fc:	call   0x409050
  409a01:	mov    rbx,QWORD PTR [rip+0x50708]        # 0x45a110
  409a08:	movzx  edx,BYTE PTR [rip+0x5070d]        # 0x45a11c
  409a0f:	movsxd rax,DWORD PTR [rip+0x506ee]        # 0x45a104
  409a16:	jmp    0x409900
  409a1b:	mov    rax,QWORD PTR [rip+0x506d6]        # 0x45a0f8
  409a22:	mov    r14,r13
  409a25:	mov    DWORD PTR [rip+0x506d5],0x5        # 0x45a104
  409a2f:	mov    DWORD PTR [rax+0x40],0x0
  409a36:	movzx  eax,BYTE PTR [rip+0x506df]        # 0x45a11c
  409a3d:	mov    BYTE PTR [rbx],al
  409a3f:	lea    rax,[rbp+0x2]
  409a43:	mov    QWORD PTR [r12],rbp
  409a47:	mov    DWORD PTR [r14],0x2
  409a4e:	mov    QWORD PTR [rip+0x506bb],rax        # 0x45a110
  409a55:	movzx  eax,BYTE PTR [rbp+0x2]
  409a59:	mov    BYTE PTR [rbp+0x2],0x0
  409a5d:	mov    edx,DWORD PTR [r14]
  409a60:	mov    rcx,QWORD PTR [r12]
  409a64:	mov    BYTE PTR [rip+0x506b2],al        # 0x45a11c
  409a6a:	call   0x409050
  409a6f:	mov    rbx,QWORD PTR [rip+0x5069a]        # 0x45a110
  409a76:	movzx  edx,BYTE PTR [rip+0x5069f]        # 0x45a11c
  409a7d:	movsxd rax,DWORD PTR [rip+0x50680]        # 0x45a104
  409a84:	jmp    0x409900
  409a89:	mov    rax,QWORD PTR [rip+0x50668]        # 0x45a0f8
  409a90:	mov    r14,r13
  409a93:	add    DWORD PTR [rax+0x40],0x1
  409a97:	movzx  eax,BYTE PTR [rip+0x5067e]        # 0x45a11c
  409a9e:	mov    BYTE PTR [rbx],al
  409aa0:	lea    rax,[rbp+0x2]
  409aa4:	mov    QWORD PTR [r12],rbp
  409aa8:	mov    DWORD PTR [r14],0x2
  409aaf:	mov    QWORD PTR [rip+0x5065a],rax        # 0x45a110
  409ab6:	movzx  eax,BYTE PTR [rbp+0x2]
  409aba:	mov    BYTE PTR [rbp+0x2],0x0
  409abe:	mov    edx,DWORD PTR [r14]
  409ac1:	mov    rcx,QWORD PTR [r12]
  409ac5:	mov    BYTE PTR [rip+0x50651],al        # 0x45a11c
  409acb:	call   0x409050
  409ad0:	mov    rbx,QWORD PTR [rip+0x50639]        # 0x45a110
  409ad7:	movzx  edx,BYTE PTR [rip+0x5063e]        # 0x45a11c
  409ade:	movsxd rax,DWORD PTR [rip+0x5061f]        # 0x45a104
  409ae5:	jmp    0x409900
  409aea:	mov    rdx,QWORD PTR [rip+0x50607]        # 0x45a0f8
  409af1:	mov    r14,r13
  409af4:	mov    eax,DWORD PTR [rdx+0x40]
  409af7:	test   eax,eax
  409af9:	jle    0x40b86a
  409aff:	sub    eax,0x1
  409b02:	mov    DWORD PTR [rdx+0x40],eax
  409b05:	mov    edx,DWORD PTR [r14]
  409b08:	mov    rcx,QWORD PTR [r12]
  409b0c:	call   0x409050
  409b11:	mov    rbx,QWORD PTR [rip+0x505f8]        # 0x45a110
  409b18:	movzx  edx,BYTE PTR [rip+0x505fd]        # 0x45a11c
  409b1f:	movsxd rax,DWORD PTR [rip+0x505de]        # 0x45a104
  409b26:	jmp    0x409900
  409b2b:	mov    edx,DWORD PTR [r13+0x0]
  409b2f:	mov    rcx,QWORD PTR [r12]
  409b33:	mov    r14,r13
  409b36:	call   0x409050
  409b3b:	mov    rbx,QWORD PTR [rip+0x505ce]        # 0x45a110
  409b42:	movzx  edx,BYTE PTR [rip+0x505d3]        # 0x45a11c
  409b49:	movsxd rax,DWORD PTR [rip+0x505b4]        # 0x45a104
  409b50:	jmp    0x409900
  409b55:	mov    edx,DWORD PTR [r13+0x0]
  409b59:	mov    rcx,QWORD PTR [r12]
  409b5d:	mov    r14,r13
  409b60:	call   0x409050
  409b65:	mov    rbx,QWORD PTR [rip+0x505a4]        # 0x45a110
  409b6c:	movzx  edx,BYTE PTR [rip+0x505a9]        # 0x45a11c
  409b73:	movsxd rax,DWORD PTR [rip+0x5058a]        # 0x45a104
  409b7a:	jmp    0x409900
  409b7f:	mov    edx,DWORD PTR [r13+0x0]
  409b83:	mov    rcx,QWORD PTR [r12]
  409b87:	mov    r14,r13
  409b8a:	call   0x409050
  409b8f:	mov    rbx,QWORD PTR [rip+0x5057a]        # 0x45a110
  409b96:	movzx  edx,BYTE PTR [rip+0x5057f]        # 0x45a11c
  409b9d:	movsxd rax,DWORD PTR [rip+0x50560]        # 0x45a104
  409ba4:	jmp    0x409900
  409ba9:	mov    edx,DWORD PTR [r13+0x0]
  409bad:	mov    rcx,QWORD PTR [r12]
  409bb1:	mov    r14,r13
  409bb4:	mov    DWORD PTR [rip+0x50546],0x3        # 0x45a104
  409bbe:	call   0x409050
  409bc3:	mov    rbx,QWORD PTR [rip+0x50546]        # 0x45a110
  409bca:	movzx  edx,BYTE PTR [rip+0x5054b]        # 0x45a11c
  409bd1:	movsxd rax,DWORD PTR [rip+0x5052c]        # 0x45a104
  409bd8:	jmp    0x409900
  409bdd:	movzx  eax,BYTE PTR [rip+0x50538]        # 0x45a11c
  409be4:	mov    r14,r13
  409be7:	mov    DWORD PTR [rip+0x50513],0x1        # 0x45a104
  409bf1:	mov    BYTE PTR [rbx],al
  409bf3:	lea    rax,[rbp+0x1]
  409bf7:	mov    QWORD PTR [r12],rbp
  409bfb:	mov    DWORD PTR [r14],0x1
  409c02:	mov    QWORD PTR [rip+0x50507],rax        # 0x45a110
  409c09:	movzx  eax,BYTE PTR [rbp+0x1]
  409c0d:	mov    BYTE PTR [rbp+0x1],0x0
  409c11:	mov    edx,DWORD PTR [r14]
  409c14:	mov    rcx,QWORD PTR [r12]
  409c18:	mov    BYTE PTR [rip+0x504fe],al        # 0x45a11c
  409c1e:	call   0x409050
  409c23:	mov    rbx,QWORD PTR [rip+0x504e6]        # 0x45a110
  409c2a:	movzx  edx,BYTE PTR [rip+0x504eb]        # 0x45a11c
  409c31:	movsxd rax,DWORD PTR [rip+0x504cc]        # 0x45a104
  409c38:	jmp    0x409900
  409c3d:	mov    edx,DWORD PTR [r13+0x0]
  409c41:	mov    rcx,QWORD PTR [r12]
  409c45:	mov    r14,r13
  409c48:	call   0x409050
  409c4d:	mov    rbx,QWORD PTR [rip+0x504bc]        # 0x45a110
  409c54:	movzx  edx,BYTE PTR [rip+0x504c1]        # 0x45a11c
  409c5b:	movsxd rax,DWORD PTR [rip+0x504a2]        # 0x45a104
  409c62:	jmp    0x409900
  409c67:	mov    edx,DWORD PTR [r13+0x0]
  409c6b:	mov    rcx,QWORD PTR [r12]
  409c6f:	mov    r14,r13
  409c72:	call   0x409050
  409c77:	mov    rbx,QWORD PTR [rip+0x50492]        # 0x45a110
  409c7e:	movzx  edx,BYTE PTR [rip+0x50497]        # 0x45a11c
  409c85:	movsxd rax,DWORD PTR [rip+0x50478]        # 0x45a104
  409c8c:	jmp    0x409900
  409c91:	mov    edx,DWORD PTR [r13+0x0]
  409c95:	mov    rcx,QWORD PTR [r12]
  409c99:	mov    r14,r13
  409c9c:	mov    DWORD PTR [rip+0x5045e],0x9        # 0x45a104
  409ca6:	call   0x409050
  409cab:	mov    rbx,QWORD PTR [rip+0x5045e]        # 0x45a110
  409cb2:	movzx  edx,BYTE PTR [rip+0x50463]        # 0x45a11c
  409cb9:	movsxd rax,DWORD PTR [rip+0x50444]        # 0x45a104
  409cc0:	jmp    0x409900
  409cc5:	movzx  eax,BYTE PTR [rip+0x50450]        # 0x45a11c
  409ccc:	mov    r14,r13
  409ccf:	mov    DWORD PTR [rip+0x5042b],0x1        # 0x45a104
  409cd9:	mov    BYTE PTR [rbx],al
  409cdb:	lea    rax,[rbp+0x1]
  409cdf:	mov    QWORD PTR [r12],rbp
  409ce3:	mov    DWORD PTR [r14],0x1
  409cea:	mov    QWORD PTR [rip+0x5041f],rax        # 0x45a110
  409cf1:	movzx  eax,BYTE PTR [rbp+0x1]
  409cf5:	mov    BYTE PTR [rbp+0x1],0x0
  409cf9:	mov    edx,DWORD PTR [r14]
  409cfc:	mov    rcx,QWORD PTR [r12]
  409d00:	mov    BYTE PTR [rip+0x50416],al        # 0x45a11c
  409d06:	call   0x409050
  409d0b:	mov    rbx,QWORD PTR [rip+0x503fe]        # 0x45a110
  409d12:	movzx  edx,BYTE PTR [rip+0x50403]        # 0x45a11c
  409d19:	movsxd rax,DWORD PTR [rip+0x503e4]        # 0x45a104
  409d20:	jmp    0x409900
  409d25:	movzx  eax,BYTE PTR [rip+0x503f0]        # 0x45a11c
  409d2c:	mov    r14,r13
  409d2f:	mov    BYTE PTR [rbx],al
  409d31:	lea    rax,[rbp+0x1]
  409d35:	mov    QWORD PTR [r12],rbp
  409d39:	mov    DWORD PTR [r14],0x1
  409d40:	mov    QWORD PTR [rip+0x503c9],rax        # 0x45a110
  409d47:	movzx  eax,BYTE PTR [rbp+0x1]
  409d4b:	mov    BYTE PTR [rbp+0x1],0x0
  409d4f:	mov    edx,DWORD PTR [r14]
  409d52:	mov    rcx,QWORD PTR [r12]
  409d56:	mov    BYTE PTR [rip+0x503c0],al        # 0x45a11c
  409d5c:	call   0x409050
  409d61:	mov    rbx,QWORD PTR [rip+0x503a8]        # 0x45a110
  409d68:	movzx  edx,BYTE PTR [rip+0x503ad]        # 0x45a11c
  409d6f:	movsxd rax,DWORD PTR [rip+0x5038e]        # 0x45a104
  409d76:	jmp    0x409900
  409d7b:	call   0x4078e0
  409d80:	cmp    al,0x1
  409d82:	mov    edx,DWORD PTR [r13+0x0]
  409d86:	mov    rcx,QWORD PTR [r12]
  409d8a:	sbb    eax,eax
  409d8c:	mov    r14,r13
  409d8f:	and    eax,0xfffffffe
  409d92:	add    eax,0xd
  409d95:	mov    DWORD PTR [rip+0x50369],eax        # 0x45a104
  409d9b:	call   0x409050
  409da0:	mov    rbx,QWORD PTR [rip+0x50369]        # 0x45a110
  409da7:	movzx  edx,BYTE PTR [rip+0x5036e]        # 0x45a11c
  409dae:	movsxd rax,DWORD PTR [rip+0x5034f]        # 0x45a104
  409db5:	jmp    0x409900
  409dba:	mov    edx,DWORD PTR [r13+0x0]
  409dbe:	mov    rcx,QWORD PTR [r12]
  409dc2:	mov    r14,r13
  409dc5:	mov    DWORD PTR [rip+0x50335],0xb        # 0x45a104
  409dcf:	call   0x409050
  409dd4:	mov    rbx,QWORD PTR [rip+0x50335]        # 0x45a110
  409ddb:	movzx  edx,BYTE PTR [rip+0x5033a]        # 0x45a11c
  409de2:	movsxd rax,DWORD PTR [rip+0x5031b]        # 0x45a104
  409de9:	jmp    0x409900
  409dee:	mov    edx,DWORD PTR [r13+0x0]
  409df2:	mov    rcx,QWORD PTR [r12]
  409df6:	mov    r14,r13
  409df9:	mov    DWORD PTR [rip+0x50301],0x15        # 0x45a104
  409e03:	call   0x409050
  409e08:	mov    rbx,QWORD PTR [rip+0x50301]        # 0x45a110
  409e0f:	movzx  edx,BYTE PTR [rip+0x50306]        # 0x45a11c
  409e16:	movsxd rax,DWORD PTR [rip+0x502e7]        # 0x45a104
  409e1d:	jmp    0x409900
  409e22:	movzx  eax,BYTE PTR [rip+0x502f3]        # 0x45a11c
  409e29:	mov    r14,r13
  409e2c:	mov    DWORD PTR [rip+0x502ce],0x1        # 0x45a104
  409e36:	mov    BYTE PTR [rbx],al
  409e38:	lea    rax,[rbp+0x1]
  409e3c:	mov    QWORD PTR [r12],rbp
  409e40:	mov    DWORD PTR [r14],0x1
  409e47:	mov    QWORD PTR [rip+0x502c2],rax        # 0x45a110
  409e4e:	movzx  eax,BYTE PTR [rbp+0x1]
  409e52:	mov    BYTE PTR [rbp+0x1],0x0
  409e56:	mov    edx,DWORD PTR [r14]
  409e59:	mov    rcx,QWORD PTR [r12]
  409e5d:	mov    BYTE PTR [rip+0x502b9],al        # 0x45a11c
  409e63:	call   0x409050
  409e68:	mov    rbx,QWORD PTR [rip+0x502a1]        # 0x45a110
  409e6f:	movzx  edx,BYTE PTR [rip+0x502a6]        # 0x45a11c
  409e76:	movsxd rax,DWORD PTR [rip+0x50287]        # 0x45a104
  409e7d:	jmp    0x409900
  409e82:	movzx  eax,BYTE PTR [rip+0x50293]        # 0x45a11c
  409e89:	mov    r14,r13
  409e8c:	mov    DWORD PTR [rip+0x5026e],0x17        # 0x45a104
  409e96:	mov    BYTE PTR [rbx],al
  409e98:	lea    rax,[rbp+0x1]
  409e9c:	mov    QWORD PTR [r12],rbp
  409ea0:	mov    DWORD PTR [r14],0x1
  409ea7:	mov    QWORD PTR [rip+0x50262],rax        # 0x45a110
  409eae:	movzx  eax,BYTE PTR [rbp+0x1]
  409eb2:	mov    BYTE PTR [rbp+0x1],0x0
  409eb6:	mov    edx,DWORD PTR [r14]
  409eb9:	mov    rcx,QWORD PTR [r12]
  409ebd:	mov    BYTE PTR [rip+0x50259],al        # 0x45a11c
  409ec3:	call   0x409050
  409ec8:	mov    rbx,QWORD PTR [rip+0x50241]        # 0x45a110
  409ecf:	movzx  edx,BYTE PTR [rip+0x50246]        # 0x45a11c
  409ed6:	movsxd rax,DWORD PTR [rip+0x50227]        # 0x45a104
  409edd:	jmp    0x409900
  409ee2:	mov    edx,DWORD PTR [r13+0x0]
  409ee6:	mov    rcx,QWORD PTR [r12]
  409eea:	mov    r14,r13
  409eed:	call   0x409050
  409ef2:	mov    rbx,QWORD PTR [rip+0x50217]        # 0x45a110
  409ef9:	movzx  edx,BYTE PTR [rip+0x5021c]        # 0x45a11c
  409f00:	movsxd rax,DWORD PTR [rip+0x501fd]        # 0x45a104
  409f07:	jmp    0x409900
  409f0c:	movzx  eax,BYTE PTR [rip+0x50209]        # 0x45a11c
  409f13:	mov    r14,r13
  409f16:	mov    QWORD PTR [rip+0x501f3],rbp        # 0x45a110
  409f1d:	mov    DWORD PTR [rip+0x501dd],0x1        # 0x45a104
  409f27:	mov    BYTE PTR [rbx],al
  409f29:	mov    QWORD PTR [r12],rbp
  409f2d:	mov    DWORD PTR [r14],0x0
  409f34:	movzx  eax,BYTE PTR [rbp+0x0]
  409f38:	mov    BYTE PTR [rbp+0x0],0x0
  409f3c:	mov    edx,DWORD PTR [r14]
  409f3f:	mov    rcx,QWORD PTR [r12]
  409f43:	mov    BYTE PTR [rip+0x501d3],al        # 0x45a11c
  409f49:	call   0x409050
  409f4e:	mov    rbx,QWORD PTR [rip+0x501bb]        # 0x45a110
  409f55:	movzx  edx,BYTE PTR [rip+0x501c0]        # 0x45a11c
  409f5c:	movsxd rax,DWORD PTR [rip+0x501a1]        # 0x45a104
  409f63:	jmp    0x409900
  409f68:	mov    edx,DWORD PTR [r13+0x0]
  409f6c:	mov    rcx,QWORD PTR [r12]
  409f70:	mov    r14,r13
  409f73:	mov    DWORD PTR [rip+0x50187],0x1        # 0x45a104
  409f7d:	call   0x409050
  409f82:	mov    rbx,QWORD PTR [rip+0x50187]        # 0x45a110
  409f89:	movzx  edx,BYTE PTR [rip+0x5018c]        # 0x45a11c
  409f90:	movsxd rax,DWORD PTR [rip+0x5016d]        # 0x45a104
  409f97:	jmp    0x409900
  409f9c:	mov    edx,DWORD PTR [r13+0x0]
  409fa0:	mov    rcx,QWORD PTR [r12]
  409fa4:	mov    r14,r13
  409fa7:	call   0x409050
  409fac:	mov    rbx,QWORD PTR [rip+0x5015d]        # 0x45a110
  409fb3:	movzx  edx,BYTE PTR [rip+0x50162]        # 0x45a11c
  409fba:	movsxd rax,DWORD PTR [rip+0x50143]        # 0x45a104
  409fc1:	jmp    0x409900
  409fc6:	mov    edx,DWORD PTR [r13+0x0]
  409fca:	mov    rcx,QWORD PTR [r12]
  409fce:	mov    r14,r13
  409fd1:	call   0x409050
  409fd6:	mov    rbx,QWORD PTR [rip+0x50133]        # 0x45a110
  409fdd:	movzx  edx,BYTE PTR [rip+0x50138]        # 0x45a11c
  409fe4:	movsxd rax,DWORD PTR [rip+0x50119]        # 0x45a104
  409feb:	jmp    0x409900
  409ff0:	mov    edx,DWORD PTR [r13+0x0]
  409ff4:	mov    rcx,QWORD PTR [r12]
  409ff8:	mov    r14,r13
  409ffb:	call   0x409050
  40a000:	mov    rbx,QWORD PTR [rip+0x50109]        # 0x45a110
  40a007:	movzx  edx,BYTE PTR [rip+0x5010e]        # 0x45a11c
  40a00e:	movsxd rax,DWORD PTR [rip+0x500ef]        # 0x45a104
  40a015:	jmp    0x409900
  40a01a:	mov    edx,DWORD PTR [r13+0x0]
  40a01e:	mov    rcx,QWORD PTR [r12]
  40a022:	mov    r14,r13
  40a025:	call   0x409050
  40a02a:	mov    rbx,QWORD PTR [rip+0x500df]        # 0x45a110
  40a031:	movzx  edx,BYTE PTR [rip+0x500e4]        # 0x45a11c
  40a038:	movsxd rax,DWORD PTR [rip+0x500c5]        # 0x45a104
  40a03f:	jmp    0x409900
  40a044:	mov    edx,DWORD PTR [r13+0x0]
  40a048:	mov    rcx,QWORD PTR [r12]
  40a04c:	mov    r14,r13
  40a04f:	call   0x409050
  40a054:	mov    rbx,QWORD PTR [rip+0x500b5]        # 0x45a110
  40a05b:	movzx  edx,BYTE PTR [rip+0x500ba]        # 0x45a11c
  40a062:	movsxd rax,DWORD PTR [rip+0x5009b]        # 0x45a104
  40a069:	jmp    0x409900
  40a06e:	mov    edx,DWORD PTR [r13+0x0]
  40a072:	mov    rcx,QWORD PTR [r12]
  40a076:	mov    r14,r13
  40a079:	call   0x409050
  40a07e:	mov    rbx,QWORD PTR [rip+0x5008b]        # 0x45a110
  40a085:	movzx  edx,BYTE PTR [rip+0x50090]        # 0x45a11c
  40a08c:	movsxd rax,DWORD PTR [rip+0x50071]        # 0x45a104
  40a093:	jmp    0x409900
  40a098:	mov    edx,DWORD PTR [r13+0x0]
  40a09c:	mov    rcx,QWORD PTR [r12]
  40a0a0:	mov    r14,r13
  40a0a3:	call   0x409050
  40a0a8:	mov    rbx,QWORD PTR [rip+0x50061]        # 0x45a110
  40a0af:	movzx  edx,BYTE PTR [rip+0x50066]        # 0x45a11c
  40a0b6:	movsxd rax,DWORD PTR [rip+0x50047]        # 0x45a104
  40a0bd:	jmp    0x409900
  40a0c2:	mov    edx,DWORD PTR [r13+0x0]
  40a0c6:	mov    rcx,QWORD PTR [r12]
  40a0ca:	mov    r14,r13
  40a0cd:	call   0x409050
  40a0d2:	mov    rbx,QWORD PTR [rip+0x50037]        # 0x45a110
  40a0d9:	movzx  edx,BYTE PTR [rip+0x5003c]        # 0x45a11c
  40a0e0:	movsxd rax,DWORD PTR [rip+0x5001d]        # 0x45a104
  40a0e7:	jmp    0x409900
  40a0ec:	mov    edx,DWORD PTR [r13+0x0]
  40a0f0:	mov    rcx,QWORD PTR [r12]
  40a0f4:	mov    r14,r13
  40a0f7:	call   0x409050
  40a0fc:	mov    rbx,QWORD PTR [rip+0x5000d]        # 0x45a110
  40a103:	movzx  edx,BYTE PTR [rip+0x50012]        # 0x45a11c
  40a10a:	movsxd rax,DWORD PTR [rip+0x4fff3]        # 0x45a104
  40a111:	jmp    0x409900
  40a116:	mov    edx,DWORD PTR [r13+0x0]
  40a11a:	mov    rcx,QWORD PTR [r12]
  40a11e:	mov    r14,r13
  40a121:	call   0x409050
  40a126:	mov    rbx,QWORD PTR [rip+0x4ffe3]        # 0x45a110
  40a12d:	movzx  edx,BYTE PTR [rip+0x4ffe8]        # 0x45a11c
  40a134:	movsxd rax,DWORD PTR [rip+0x4ffc9]        # 0x45a104
  40a13b:	jmp    0x409900
  40a140:	mov    rcx,QWORD PTR [r12]
  40a144:	mov    rbx,QWORD PTR [rip+0x4ffad]        # 0x45a0f8
  40a14b:	mov    r14,r13
  40a14e:	call   0x424900
  40a153:	mov    edx,DWORD PTR [r13+0x0]
  40a157:	mov    rcx,QWORD PTR [r12]
  40a15b:	mov    QWORD PTR [rbx+0x48],rax
  40a15f:	mov    DWORD PTR [rip+0x4ff9b],0xf        # 0x45a104
  40a169:	call   0x409050
  40a16e:	mov    rbx,QWORD PTR [rip+0x4ff9b]        # 0x45a110
  40a175:	movzx  edx,BYTE PTR [rip+0x4ffa0]        # 0x45a11c
  40a17c:	movsxd rax,DWORD PTR [rip+0x4ff81]        # 0x45a104
  40a183:	jmp    0x409900
  40a188:	movzx  eax,BYTE PTR [rip+0x4ff8d]        # 0x45a11c
  40a18f:	mov    r14,r13
  40a192:	mov    BYTE PTR [rbx],al
  40a194:	lea    rax,[rbp+0x1]
  40a198:	mov    QWORD PTR [r12],rbp
  40a19c:	mov    DWORD PTR [r14],0x1
  40a1a3:	mov    QWORD PTR [rip+0x4ff66],rax        # 0x45a110
  40a1aa:	movzx  eax,BYTE PTR [rbp+0x1]
  40a1ae:	mov    BYTE PTR [rbp+0x1],0x0
  40a1b2:	mov    edx,DWORD PTR [r14]
  40a1b5:	mov    rcx,QWORD PTR [r12]
  40a1b9:	mov    BYTE PTR [rip+0x4ff5d],al        # 0x45a11c
  40a1bf:	call   0x409050
  40a1c4:	mov    rbx,QWORD PTR [rip+0x4ff45]        # 0x45a110
  40a1cb:	movzx  edx,BYTE PTR [rip+0x4ff4a]        # 0x45a11c
  40a1d2:	movsxd rax,DWORD PTR [rip+0x4ff2b]        # 0x45a104
  40a1d9:	jmp    0x409900
  40a1de:	mov    r14,r13
  40a1e1:	mov    r13,rbp
  40a1e4:	mov    rbp,QWORD PTR [rip+0x4ff0d]        # 0x45a0f8
  40a1eb:	mov    rcx,QWORD PTR [r12]
  40a1ef:	mov    r15,QWORD PTR [rbp+0x48]
  40a1f3:	mov    rdx,r15
  40a1f6:	call   0x42a420
  40a1fb:	test   eax,eax
  40a1fd:	je     0x40b879
  40a203:	mov    eax,DWORD PTR [r14]
  40a206:	lea    edx,[rax-0x1]
  40a209:	movzx  eax,BYTE PTR [rip+0x4ff0c]        # 0x45a11c
  40a210:	mov    BYTE PTR [rbx],al
  40a212:	movsxd rax,edx
  40a215:	mov    QWORD PTR [r12],r13
  40a219:	add    rax,r13
  40a21c:	mov    DWORD PTR [r14],edx
  40a21f:	movzx  edx,BYTE PTR [rax]
  40a222:	mov    QWORD PTR [rip+0x4fee7],rax        # 0x45a110
  40a229:	mov    BYTE PTR [rax],0x0
  40a22c:	mov    BYTE PTR [rip+0x4feea],dl        # 0x45a11c
  40a232:	mov    edx,DWORD PTR [r14]
  40a235:	mov    rcx,QWORD PTR [r12]
  40a239:	call   0x409050
  40a23e:	mov    rbx,QWORD PTR [rip+0x4fecb]        # 0x45a110
  40a245:	movzx  edx,BYTE PTR [rip+0x4fed0]        # 0x45a11c
  40a24c:	movsxd rax,DWORD PTR [rip+0x4feb1]        # 0x45a104
  40a253:	jmp    0x409900
  40a258:	mov    edx,DWORD PTR [r13+0x0]
  40a25c:	mov    rcx,QWORD PTR [r12]
  40a260:	mov    r14,r13
  40a263:	call   0x409050
  40a268:	mov    rbx,QWORD PTR [rip+0x4fea1]        # 0x45a110
  40a26f:	movzx  edx,BYTE PTR [rip+0x4fea6]        # 0x45a11c
  40a276:	movsxd rax,DWORD PTR [rip+0x4fe87]        # 0x45a104
  40a27d:	jmp    0x409900
  40a282:	mov    edx,DWORD PTR [r13+0x0]
  40a286:	mov    rcx,QWORD PTR [r12]
  40a28a:	mov    r14,r13
  40a28d:	call   0x409050
  40a292:	mov    rbx,QWORD PTR [rip+0x4fe77]        # 0x45a110
  40a299:	movzx  edx,BYTE PTR [rip+0x4fe7c]        # 0x45a11c
  40a2a0:	movsxd rax,DWORD PTR [rip+0x4fe5d]        # 0x45a104
  40a2a7:	jmp    0x409900
  40a2ac:	mov    edx,DWORD PTR [r13+0x0]
  40a2b0:	mov    rcx,QWORD PTR [r12]
  40a2b4:	mov    r14,r13
  40a2b7:	call   0x409050
  40a2bc:	mov    rbx,QWORD PTR [rip+0x4fe4d]        # 0x45a110
  40a2c3:	movzx  edx,BYTE PTR [rip+0x4fe52]        # 0x45a11c
  40a2ca:	movsxd rax,DWORD PTR [rip+0x4fe33]        # 0x45a104
  40a2d1:	jmp    0x409900
  40a2d6:	mov    edx,DWORD PTR [r13+0x0]
  40a2da:	mov    rcx,QWORD PTR [r12]
  40a2de:	mov    r14,r13
  40a2e1:	mov    DWORD PTR [rip+0x4fe19],0x7        # 0x45a104
  40a2eb:	call   0x409050
  40a2f0:	mov    rbx,QWORD PTR [rip+0x4fe19]        # 0x45a110
  40a2f7:	movzx  edx,BYTE PTR [rip+0x4fe1e]        # 0x45a11c
  40a2fe:	movsxd rax,DWORD PTR [rip+0x4fdff]        # 0x45a104
  40a305:	jmp    0x409900
  40a30a:	mov    edx,DWORD PTR [r13+0x0]
  40a30e:	mov    rcx,QWORD PTR [r12]
  40a312:	mov    r14,r13
  40a315:	mov    DWORD PTR [rip+0x4fde5],0x11        # 0x45a104
  40a31f:	call   0x409050
  40a324:	mov    rbx,QWORD PTR [rip+0x4fde5]        # 0x45a110
  40a32b:	movzx  edx,BYTE PTR [rip+0x4fdea]        # 0x45a11c
  40a332:	movsxd rax,DWORD PTR [rip+0x4fdcb]        # 0x45a104
  40a339:	jmp    0x409900
  40a33e:	mov    edx,DWORD PTR [r13+0x0]
  40a342:	mov    rcx,QWORD PTR [r12]
  40a346:	mov    r14,r13
  40a349:	mov    DWORD PTR [rip+0x4fdb1],0x1        # 0x45a104
  40a353:	call   0x409050
  40a358:	mov    rbx,QWORD PTR [rip+0x4fdb1]        # 0x45a110
  40a35f:	movzx  edx,BYTE PTR [rip+0x4fdb6]        # 0x45a11c
  40a366:	movsxd rax,DWORD PTR [rip+0x4fd97]        # 0x45a104
  40a36d:	jmp    0x409900
  40a372:	movzx  eax,BYTE PTR [rip+0x4fda3]        # 0x45a11c
  40a379:	mov    r14,r13
  40a37c:	mov    DWORD PTR [rip+0x4fd7e],0x13        # 0x45a104
  40a386:	mov    BYTE PTR [rbx],al
  40a388:	lea    rax,[rbp+0x1]
  40a38c:	mov    QWORD PTR [r12],rbp
  40a390:	mov    DWORD PTR [r14],0x1
  40a397:	mov    QWORD PTR [rip+0x4fd72],rax        # 0x45a110
  40a39e:	movzx  eax,BYTE PTR [rbp+0x1]
  40a3a2:	mov    BYTE PTR [rbp+0x1],0x0
  40a3a6:	mov    edx,DWORD PTR [r14]
  40a3a9:	mov    rcx,QWORD PTR [r12]
  40a3ad:	mov    BYTE PTR [rip+0x4fd69],al        # 0x45a11c
  40a3b3:	call   0x409050
  40a3b8:	mov    rbx,QWORD PTR [rip+0x4fd51]        # 0x45a110
  40a3bf:	movzx  edx,BYTE PTR [rip+0x4fd56]        # 0x45a11c
  40a3c6:	movsxd rax,DWORD PTR [rip+0x4fd37]        # 0x45a104
  40a3cd:	jmp    0x409900
  40a3d2:	mov    edx,DWORD PTR [r13+0x0]
  40a3d6:	mov    rcx,QWORD PTR [r12]
  40a3da:	mov    r14,r13
  40a3dd:	call   0x409050
  40a3e2:	mov    rbx,QWORD PTR [rip+0x4fd27]        # 0x45a110
  40a3e9:	movzx  edx,BYTE PTR [rip+0x4fd2c]        # 0x45a11c
  40a3f0:	movsxd rax,DWORD PTR [rip+0x4fd0d]        # 0x45a104
  40a3f7:	jmp    0x409900
  40a3fc:	movzx  eax,BYTE PTR [rip+0x4fd19]        # 0x45a11c
  40a403:	mov    r14,r13
  40a406:	mov    QWORD PTR [rip+0x4fd03],rbp        # 0x45a110
  40a40d:	mov    DWORD PTR [rip+0x4fced],0x1        # 0x45a104
  40a417:	mov    BYTE PTR [rbx],al
  40a419:	mov    QWORD PTR [r12],rbp
  40a41d:	mov    DWORD PTR [r14],0x0
  40a424:	movzx  eax,BYTE PTR [rbp+0x0]
  40a428:	mov    BYTE PTR [rbp+0x0],0x0
  40a42c:	mov    edx,DWORD PTR [r14]
  40a42f:	mov    rcx,QWORD PTR [r12]
  40a433:	mov    BYTE PTR [rip+0x4fce3],al        # 0x45a11c
  40a439:	call   0x409050
  40a43e:	mov    rbx,QWORD PTR [rip+0x4fccb]        # 0x45a110
  40a445:	movzx  edx,BYTE PTR [rip+0x4fcd0]        # 0x45a11c
  40a44c:	movsxd rax,DWORD PTR [rip+0x4fcb1]        # 0x45a104
  40a453:	jmp    0x409900
  40a458:	mov    edx,DWORD PTR [r13+0x0]
  40a45c:	mov    rcx,QWORD PTR [r12]
  40a460:	mov    r14,r13
  40a463:	mov    DWORD PTR [rip+0x4fc97],0x1        # 0x45a104
  40a46d:	call   0x409050
  40a472:	mov    rbx,QWORD PTR [rip+0x4fc97]        # 0x45a110
  40a479:	movzx  edx,BYTE PTR [rip+0x4fc9c]        # 0x45a11c
  40a480:	movsxd rax,DWORD PTR [rip+0x4fc7d]        # 0x45a104
  40a487:	jmp    0x409900
  40a48c:	mov    edx,DWORD PTR [r13+0x0]
  40a490:	mov    rcx,QWORD PTR [r12]
  40a494:	mov    r14,r13
  40a497:	call   0x409050
  40a49c:	mov    rbx,QWORD PTR [rip+0x4fc6d]        # 0x45a110
  40a4a3:	movzx  edx,BYTE PTR [rip+0x4fc72]        # 0x45a11c
  40a4aa:	movsxd rax,DWORD PTR [rip+0x4fc53]        # 0x45a104
  40a4b1:	jmp    0x409900
  40a4b6:	mov    edx,DWORD PTR [r13+0x0]
  40a4ba:	mov    rcx,QWORD PTR [r12]
  40a4be:	mov    r14,r13
  40a4c1:	call   0x409050
  40a4c6:	mov    rbx,QWORD PTR [rip+0x4fc43]        # 0x45a110
  40a4cd:	movzx  edx,BYTE PTR [rip+0x4fc48]        # 0x45a11c
  40a4d4:	movsxd rax,DWORD PTR [rip+0x4fc29]        # 0x45a104
  40a4db:	jmp    0x409900
  40a4e0:	movzx  eax,BYTE PTR [rip+0x4fc35]        # 0x45a11c
  40a4e7:	mov    r14,r13
  40a4ea:	mov    BYTE PTR [rbx],al
  40a4ec:	lea    rax,[rbp+0x1]
  40a4f0:	mov    QWORD PTR [r12],rbp
  40a4f4:	mov    DWORD PTR [r14],0x1
  40a4fb:	mov    QWORD PTR [rip+0x4fc0e],rax        # 0x45a110
  40a502:	movzx  eax,BYTE PTR [rbp+0x1]
  40a506:	mov    BYTE PTR [rbp+0x1],0x0
  40a50a:	mov    edx,DWORD PTR [r14]
  40a50d:	mov    rcx,QWORD PTR [r12]
  40a511:	mov    BYTE PTR [rip+0x4fc05],al        # 0x45a11c
  40a517:	call   0x409050
  40a51c:	mov    rbx,QWORD PTR [rip+0x4fbed]        # 0x45a110
  40a523:	movzx  edx,BYTE PTR [rip+0x4fbf2]        # 0x45a11c
  40a52a:	movsxd rax,DWORD PTR [rip+0x4fbd3]        # 0x45a104
  40a531:	jmp    0x409900
  40a536:	mov    edx,DWORD PTR [r13+0x0]
  40a53a:	mov    rcx,QWORD PTR [r12]
  40a53e:	mov    r14,r13
  40a541:	call   0x409050
  40a546:	mov    rbx,QWORD PTR [rip+0x4fbc3]        # 0x45a110
  40a54d:	movzx  edx,BYTE PTR [rip+0x4fbc8]        # 0x45a11c
  40a554:	movsxd rax,DWORD PTR [rip+0x4fba9]        # 0x45a104
  40a55b:	jmp    0x409900
  40a560:	mov    edx,DWORD PTR [r13+0x0]
  40a564:	mov    rcx,QWORD PTR [r12]
  40a568:	mov    r14,r13
  40a56b:	call   0x409050
  40a570:	mov    rbx,QWORD PTR [rip+0x4fb99]        # 0x45a110
  40a577:	movzx  edx,BYTE PTR [rip+0x4fb9e]        # 0x45a11c
  40a57e:	movsxd rax,DWORD PTR [rip+0x4fb7f]        # 0x45a104
  40a585:	jmp    0x409900
  40a58a:	mov    edx,DWORD PTR [r13+0x0]
  40a58e:	mov    rcx,QWORD PTR [r12]
  40a592:	mov    r14,r13
  40a595:	call   0x409050
  40a59a:	mov    rbx,QWORD PTR [rip+0x4fb6f]        # 0x45a110
  40a5a1:	movzx  edx,BYTE PTR [rip+0x4fb74]        # 0x45a11c
  40a5a8:	movsxd rax,DWORD PTR [rip+0x4fb55]        # 0x45a104
  40a5af:	jmp    0x409900
  40a5b4:	mov    rax,QWORD PTR [rip+0x4fb3d]        # 0x45a0f8
  40a5bb:	mov    edx,DWORD PTR [r13+0x0]
  40a5bf:	mov    r14,r13
  40a5c2:	mov    rcx,QWORD PTR [r12]
  40a5c6:	add    DWORD PTR [rax+0x3c],0x1
  40a5ca:	call   0x409050
  40a5cf:	mov    rbx,QWORD PTR [rip+0x4fb3a]        # 0x45a110
  40a5d6:	movzx  edx,BYTE PTR [rip+0x4fb3f]        # 0x45a11c
  40a5dd:	movsxd rax,DWORD PTR [rip+0x4fb20]        # 0x45a104
  40a5e4:	jmp    0x409900
  40a5e9:	mov    rdx,QWORD PTR [rip+0x4fb08]        # 0x45a0f8
  40a5f0:	mov    r14,r13
  40a5f3:	mov    eax,DWORD PTR [rdx+0x3c]
  40a5f6:	test   eax,eax
  40a5f8:	jle    0x40a600
  40a5fa:	sub    eax,0x1
  40a5fd:	mov    DWORD PTR [rdx+0x3c],eax
  40a600:	mov    edx,DWORD PTR [r14]
  40a603:	mov    rcx,QWORD PTR [r12]
  40a607:	call   0x409050
  40a60c:	mov    rbx,QWORD PTR [rip+0x4fafd]        # 0x45a110
  40a613:	movzx  edx,BYTE PTR [rip+0x4fb02]        # 0x45a11c
  40a61a:	movsxd rax,DWORD PTR [rip+0x4fae3]        # 0x45a104
  40a621:	jmp    0x409900
  40a626:	mov    edx,DWORD PTR [r13+0x0]
  40a62a:	mov    rcx,QWORD PTR [r12]
  40a62e:	mov    r14,r13
  40a631:	call   0x409050
  40a636:	mov    rax,QWORD PTR [rip+0x4fabb]        # 0x45a0f8
  40a63d:	mov    eax,DWORD PTR [rax+0x3c]
  40a640:	test   eax,eax
  40a642:	je     0x40bb4d
  40a648:	mov    rbx,QWORD PTR [rip+0x4fac1]        # 0x45a110
  40a64f:	movzx  edx,BYTE PTR [rip+0x4fac6]        # 0x45a11c
  40a656:	movsxd rax,DWORD PTR [rip+0x4faa7]        # 0x45a104
  40a65d:	jmp    0x409900
  40a662:	mov    rax,QWORD PTR [r12]
  40a666:	mov    edx,0x1
  40a66b:	mov    r14,r13
  40a66e:	lea    rcx,[rax+0x1]
  40a672:	call   0x409050
  40a677:	mov    rbx,QWORD PTR [rip+0x4fa92]        # 0x45a110
  40a67e:	movzx  edx,BYTE PTR [rip+0x4fa97]        # 0x45a11c
  40a685:	movsxd rax,DWORD PTR [rip+0x4fa78]        # 0x45a104
  40a68c:	jmp    0x409900
  40a691:	mov    eax,0x2
  40a696:	jmp    0x4099b9
  40a69b:	mov    eax,DWORD PTR [r13+0x0]
  40a69f:	mov    r14,r13
  40a6a2:	lea    edx,[rax-0x1]
  40a6a5:	mov    rax,QWORD PTR [r12]
  40a6a9:	lea    rcx,[rax+0x1]
  40a6ad:	call   0x408da0
  40a6b2:	mov    rbp,rax
  40a6b5:	mov    rax,QWORD PTR [rsp+0x20]
  40a6ba:	mov    rdx,rbp
  40a6bd:	mov    rcx,QWORD PTR [rax+0x110]
  40a6c4:	call   0x40eb20
  40a6c9:	test   rax,rax
  40a6cc:	mov    r13,rax
  40a6cf:	je     0x40b95e
  40a6d5:	mov    rax,QWORD PTR [rip+0x4fa1c]        # 0x45a0f8
  40a6dc:	mov    rbx,QWORD PTR [rax]
  40a6df:	test   rbx,rbx
  40a6e2:	je     0x40a706
  40a6e4:	mov    rcx,QWORD PTR [rbx+0x18]
  40a6e8:	test   rcx,rcx
  40a6eb:	je     0x40a6fd
  40a6ed:	mov    rdx,rbp
  40a6f0:	call   0x42a420
  40a6f5:	test   eax,eax
  40a6f7:	je     0x40b584
  40a6fd:	mov    rbx,QWORD PTR [rbx+0x20]
  40a701:	test   rbx,rbx
  40a704:	jne    0x40a6e4
  40a706:	mov    ecx,0x28
  40a70b:	call   0x424800
  40a710:	mov    rbx,rax
  40a713:	xor    eax,eax
  40a715:	test   rbp,rbp
  40a718:	je     0x40a722
  40a71a:	mov    rcx,rbp
  40a71d:	call   0x424900
  40a722:	mov    rcx,r13
  40a725:	mov    QWORD PTR [rbx+0x18],rax
  40a729:	call   0x42a400
  40a72e:	lea    r8,[rbx+0x8]
  40a732:	mov    edx,eax
  40a734:	mov    rcx,r13
  40a737:	call   0x409760
  40a73c:	mov    rdx,QWORD PTR [rip+0x4f9b5]        # 0x45a0f8
  40a743:	mov    QWORD PTR [rbx],rax
  40a746:	mov    rax,QWORD PTR [rbx+0x8]
  40a74a:	cmp    BYTE PTR [rdx+0x24],0x0
  40a74e:	mov    QWORD PTR [rdx+0x28],rax
  40a752:	je     0x40b76f
  40a758:	mov    rax,QWORD PTR [rbx+0x8]
  40a75c:	mov    QWORD PTR [rbx+0x10],0x0
  40a764:	mov    QWORD PTR [rdx+0x30],rax
  40a768:	mov    rax,QWORD PTR [rdx]
  40a76b:	mov    QWORD PTR [rbx+0x20],rax
  40a76f:	mov    QWORD PTR [rdx],rbx
  40a772:	jmp    0x40b59f
  40a777:	xor    ecx,ecx
  40a779:	mov    r14,r13
  40a77c:	call   0x4090e0
  40a781:	mov    rbx,QWORD PTR [rip+0x4f988]        # 0x45a110
  40a788:	movzx  edx,BYTE PTR [rip+0x4f98d]        # 0x45a11c
  40a78f:	movsxd rax,DWORD PTR [rip+0x4f96e]        # 0x45a104
  40a796:	jmp    0x409900
  40a79b:	mov    ecx,0x1
  40a7a0:	mov    r14,r13
  40a7a3:	call   0x4090e0
  40a7a8:	mov    rbx,QWORD PTR [rip+0x4f961]        # 0x45a110
  40a7af:	movzx  edx,BYTE PTR [rip+0x4f966]        # 0x45a11c
  40a7b6:	movsxd rax,DWORD PTR [rip+0x4f947]        # 0x45a104
  40a7bd:	jmp    0x409900
  40a7c2:	movzx  eax,BYTE PTR [rip+0x4f953]        # 0x45a11c
  40a7c9:	mov    r14,r13
  40a7cc:	mov    BYTE PTR [rbx],al
  40a7ce:	lea    rax,[rbp+0x1]
  40a7d2:	mov    QWORD PTR [r12],rbp
  40a7d6:	mov    DWORD PTR [r14],0x1
  40a7dd:	mov    QWORD PTR [rip+0x4f92c],rax        # 0x45a110
  40a7e4:	movzx  eax,BYTE PTR [rbp+0x1]
  40a7e8:	mov    BYTE PTR [rbp+0x1],0x0
  40a7ec:	mov    edx,DWORD PTR [r14]
  40a7ef:	mov    rcx,QWORD PTR [r12]
  40a7f3:	mov    BYTE PTR [rip+0x4f923],al        # 0x45a11c
  40a7f9:	call   0x409050
  40a7fe:	mov    rbx,QWORD PTR [rip+0x4f90b]        # 0x45a110
  40a805:	movzx  edx,BYTE PTR [rip+0x4f910]        # 0x45a11c
  40a80c:	movsxd rax,DWORD PTR [rip+0x4f8f1]        # 0x45a104
  40a813:	jmp    0x409900
  40a818:	movzx  eax,BYTE PTR [rip+0x4f8fd]        # 0x45a11c
  40a81f:	mov    r14,r13
  40a822:	mov    BYTE PTR [rbx],al
  40a824:	lea    rax,[rbp+0x1]
  40a828:	mov    QWORD PTR [r12],rbp
  40a82c:	mov    DWORD PTR [r14],0x1
  40a833:	mov    QWORD PTR [rip+0x4f8d6],rax        # 0x45a110
  40a83a:	movzx  eax,BYTE PTR [rbp+0x1]
  40a83e:	mov    BYTE PTR [rbp+0x1],0x0
  40a842:	mov    edx,DWORD PTR [r14]
  40a845:	mov    rcx,QWORD PTR [r12]
  40a849:	mov    BYTE PTR [rip+0x4f8cd],al        # 0x45a11c
  40a84f:	call   0x409050
  40a854:	mov    rbx,QWORD PTR [rip+0x4f8b5]        # 0x45a110
  40a85b:	movzx  edx,BYTE PTR [rip+0x4f8ba]        # 0x45a11c
  40a862:	movsxd rax,DWORD PTR [rip+0x4f89b]        # 0x45a104
  40a869:	jmp    0x409900
  40a86e:	mov    edx,DWORD PTR [r13+0x0]
  40a872:	mov    rcx,QWORD PTR [r12]
  40a876:	mov    r14,r13
  40a879:	call   0x409050
  40a87e:	mov    rbx,QWORD PTR [rip+0x4f88b]        # 0x45a110
  40a885:	movzx  edx,BYTE PTR [rip+0x4f890]        # 0x45a11c
  40a88c:	movsxd rax,DWORD PTR [rip+0x4f871]        # 0x45a104
  40a893:	jmp    0x409900
  40a898:	mov    r14,r13
  40a89b:	mov    r13,rbp
  40a89e:	mov    rbp,QWORD PTR [r12]
  40a8a2:	mov    eax,DWORD PTR [r14]
  40a8a5:	lea    rdx,[rip+0x299fe]        # 0x4342aa
  40a8ac:	mov    rcx,rbp
  40a8af:	mov    DWORD PTR [rsp+0x30],eax
  40a8b3:	call   0x42a3d8
  40a8b8:	lea    rdx,[rip+0x299ee]        # 0x4342ad
  40a8bf:	mov    rcx,rbp
  40a8c2:	mov    r15,rax
  40a8c5:	call   0x42a3d8
  40a8ca:	test   rax,rax
  40a8cd:	je     0x40b413
  40a8d3:	test   r15,r15
  40a8d6:	je     0x40b413
  40a8dc:	cmp    r15,rax
  40a8df:	cmova  r15,rax
  40a8e3:	mov    rax,r15
  40a8e6:	sub    rax,rbp
  40a8e9:	cmp    eax,0x1
  40a8ec:	mov    r15d,eax
  40a8ef:	mov    ecx,eax
  40a8f1:	jle    0x40a958
  40a8f3:	cdqe   
  40a8f5:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40a8fa:	sub    eax,0x2b
  40a8fd:	test   al,0xfd
  40a8ff:	jne    0x40a958
  40a901:	mov    QWORD PTR [rsp+0x28],rbx
  40a906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a910:	lea    ebx,[r15-0x2]
  40a914:	movsxd rax,ebx
  40a917:	lea    rcx,[rip+0x29992]        # 0x4342b0
  40a91e:	movsx  edx,BYTE PTR [rbp+rax*1+0x0]
  40a923:	call   0x42a428
  40a928:	test   rax,rax
  40a92b:	jne    0x40a950
  40a92d:	sub    ebx,0x1
  40a930:	cmp    ebx,0xffffffff
  40a933:	jne    0x40a914
  40a935:	sub    r15d,0x1
  40a939:	cmp    r15d,0x1
  40a93d:	je     0x40a950
  40a93f:	movsxd rax,r15d
  40a942:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40a947:	sub    eax,0x2b
  40a94a:	test   al,0xfd
  40a94c:	je     0x40a910
  40a94e:	xchg   ax,ax
  40a950:	mov    rbx,QWORD PTR [rsp+0x28]
  40a955:	mov    ecx,r15d
  40a958:	mov    edx,DWORD PTR [rsp+0x30]
  40a95c:	cmp    edx,ecx
  40a95e:	jle    0x40a990
  40a960:	movzx  eax,BYTE PTR [rip+0x4f7b5]        # 0x45a11c
  40a967:	mov    BYTE PTR [rbx],al
  40a969:	movsxd rax,ecx
  40a96c:	mov    QWORD PTR [r12],r13
  40a970:	add    rax,r13
  40a973:	mov    DWORD PTR [r14],ecx
  40a976:	movzx  edx,BYTE PTR [rax]
  40a979:	mov    BYTE PTR [rax],0x0
  40a97c:	mov    rbp,QWORD PTR [r12]
  40a980:	mov    QWORD PTR [rip+0x4f789],rax        # 0x45a110
  40a987:	mov    BYTE PTR [rip+0x4f78f],dl        # 0x45a11c
  40a98d:	mov    edx,DWORD PTR [r14]
  40a990:	mov    rcx,rbp
  40a993:	call   0x409050
  40a998:	mov    rbx,QWORD PTR [rip+0x4f771]        # 0x45a110
  40a99f:	movzx  edx,BYTE PTR [rip+0x4f776]        # 0x45a11c
  40a9a6:	movsxd rax,DWORD PTR [rip+0x4f757]        # 0x45a104
  40a9ad:	jmp    0x409900
  40a9b2:	mov    rax,QWORD PTR [rip+0x4f737]        # 0x45a0f0
  40a9b9:	mov    r14,r13
  40a9bc:	mov    DWORD PTR [rip+0x4f716],0x0        # 0x45a0dc
  40a9c6:	mov    DWORD PTR [rip+0x4f734],0x21        # 0x45a104
  40a9d0:	mov    rbx,QWORD PTR [rip+0x4f739]        # 0x45a110
  40a9d7:	movzx  edx,BYTE PTR [rip+0x4f73e]        # 0x45a11c
  40a9de:	mov    rax,QWORD PTR [rax+0x8]
  40a9e2:	mov    DWORD PTR [rip+0x4f6f0],eax        # 0x45a0d8
  40a9e8:	mov    rax,QWORD PTR [rip+0x4f6f1]        # 0x45a0e0
  40a9ef:	mov    BYTE PTR [rax],0x60
  40a9f2:	mov    eax,0x21
  40a9f7:	jmp    0x409900
  40a9fc:	mov    edx,DWORD PTR [r13+0x0]
  40aa00:	mov    rcx,QWORD PTR [r12]
  40aa04:	mov    r14,r13
  40aa07:	call   0x409050
  40aa0c:	mov    rax,QWORD PTR [rip+0x4f6cd]        # 0x45a0e0
  40aa13:	mov    DWORD PTR [rip+0x4f6bf],0x0        # 0x45a0dc
  40aa1d:	mov    DWORD PTR [rip+0x4f6dd],0x23        # 0x45a104
  40aa27:	mov    rbx,QWORD PTR [rip+0x4f6e2]        # 0x45a110
  40aa2e:	movzx  edx,BYTE PTR [rip+0x4f6e7]        # 0x45a11c
  40aa35:	mov    BYTE PTR [rax],0x22
  40aa38:	mov    eax,0x23
  40aa3d:	jmp    0x409900
  40aa42:	cmp    DWORD PTR [rip+0x4f69f],0x5        # 0x45a0e8
  40aa49:	mov    r14,r13
  40aa4c:	je     0x40b8aa
  40aa52:	mov    eax,DWORD PTR [r13+0x0]
  40aa56:	lea    edx,[rax-0x1]
  40aa59:	mov    rax,QWORD PTR [r12]
  40aa5d:	lea    rcx,[rax+0x1]
  40aa61:	call   0x408da0
  40aa66:	mov    rbp,rax
  40aa69:	mov    rax,QWORD PTR [rip+0x49e70]        # 0x4548e0
  40aa70:	mov    rdx,rbp
  40aa73:	mov    rcx,QWORD PTR [rax+0x110]
  40aa7a:	call   0x40eb20
  40aa7f:	mov    rcx,rbp
  40aa82:	mov    rbx,rax
  40aa85:	call   0x42a4e8
  40aa8a:	test   rbx,rbx
  40aa8d:	je     0x40b9d0
  40aa93:	mov    rcx,QWORD PTR [rip+0x4f656]        # 0x45a0f0
  40aa9a:	mov    rdx,rbx
  40aa9d:	call   0x427dc8
  40aaa2:	mov    rax,QWORD PTR [rip+0x4f637]        # 0x45a0e0
  40aaa9:	mov    BYTE PTR [rax],0x3a
  40aaac:	mov    DWORD PTR [rip+0x4f626],0x0        # 0x45a0dc
  40aab6:	mov    rbx,QWORD PTR [rip+0x4f653]        # 0x45a110
  40aabd:	movzx  edx,BYTE PTR [rip+0x4f658]        # 0x45a11c
  40aac4:	movsxd rax,DWORD PTR [rip+0x4f639]        # 0x45a104
  40aacb:	jmp    0x409900
  40aad0:	cmp    DWORD PTR [rip+0x4f611],0x5        # 0x45a0e8
  40aad7:	mov    r14,r13
  40aada:	je     0x40b898
  40aae0:	xor    ecx,ecx
  40aae2:	call   0x4090e0
  40aae7:	mov    rax,QWORD PTR [rip+0x4f5f2]        # 0x45a0e0
  40aaee:	mov    BYTE PTR [rax],0x3a
  40aaf1:	mov    DWORD PTR [rip+0x4f5e1],0x0        # 0x45a0dc
  40aafb:	mov    rbx,QWORD PTR [rip+0x4f60e]        # 0x45a110
  40ab02:	movzx  edx,BYTE PTR [rip+0x4f613]        # 0x45a11c
  40ab09:	movsxd rax,DWORD PTR [rip+0x4f5f4]        # 0x45a104
  40ab10:	jmp    0x409900
  40ab15:	cmp    DWORD PTR [rip+0x4f5cc],0x5        # 0x45a0e8
  40ab1c:	mov    r14,r13
  40ab1f:	je     0x40b8e3
  40ab25:	mov    ecx,0x1
  40ab2a:	call   0x4090e0
  40ab2f:	mov    rax,QWORD PTR [rip+0x4f5aa]        # 0x45a0e0
  40ab36:	mov    BYTE PTR [rax],0x3a
  40ab39:	mov    DWORD PTR [rip+0x4f599],0x0        # 0x45a0dc
  40ab43:	mov    rbx,QWORD PTR [rip+0x4f5c6]        # 0x45a110
  40ab4a:	movzx  edx,BYTE PTR [rip+0x4f5cb]        # 0x45a11c
  40ab51:	movsxd rax,DWORD PTR [rip+0x4f5ac]        # 0x45a104
  40ab58:	jmp    0x409900
  40ab5d:	movzx  eax,BYTE PTR [rip+0x4f5b8]        # 0x45a11c
  40ab64:	mov    r14,r13
  40ab67:	add    DWORD PTR [rip+0x4f56e],0x1        # 0x45a0dc
  40ab6e:	mov    BYTE PTR [rbx],al
  40ab70:	lea    rax,[rbp+0x1]
  40ab74:	mov    QWORD PTR [r12],rbp
  40ab78:	mov    DWORD PTR [r14],0x1
  40ab7f:	mov    QWORD PTR [rip+0x4f58a],rax        # 0x45a110
  40ab86:	movzx  eax,BYTE PTR [rbp+0x1]
  40ab8a:	mov    BYTE PTR [rbp+0x1],0x0
  40ab8e:	mov    edx,DWORD PTR [r14]
  40ab91:	mov    rcx,QWORD PTR [r12]
  40ab95:	mov    BYTE PTR [rip+0x4f581],al        # 0x45a11c
  40ab9b:	call   0x409050
  40aba0:	mov    rbx,QWORD PTR [rip+0x4f569]        # 0x45a110
  40aba7:	movzx  edx,BYTE PTR [rip+0x4f56e]        # 0x45a11c
  40abae:	movsxd rax,DWORD PTR [rip+0x4f54f]        # 0x45a104
  40abb5:	jmp    0x409900
  40abba:	movzx  eax,BYTE PTR [rip+0x4f55b]        # 0x45a11c
  40abc1:	mov    r14,r13
  40abc4:	add    DWORD PTR [rip+0x4f511],0x1        # 0x45a0dc
  40abcb:	mov    BYTE PTR [rbx],al
  40abcd:	lea    rax,[rbp+0x1]
  40abd1:	mov    QWORD PTR [r12],rbp
  40abd5:	mov    DWORD PTR [r14],0x1
  40abdc:	mov    QWORD PTR [rip+0x4f52d],rax        # 0x45a110
  40abe3:	movzx  eax,BYTE PTR [rbp+0x1]
  40abe7:	mov    BYTE PTR [rbp+0x1],0x0
  40abeb:	mov    edx,DWORD PTR [r14]
  40abee:	mov    rcx,QWORD PTR [r12]
  40abf2:	mov    BYTE PTR [rip+0x4f524],al        # 0x45a11c
  40abf8:	call   0x409050
  40abfd:	mov    rbx,QWORD PTR [rip+0x4f50c]        # 0x45a110
  40ac04:	movzx  edx,BYTE PTR [rip+0x4f511]        # 0x45a11c
  40ac0b:	movsxd rax,DWORD PTR [rip+0x4f4f2]        # 0x45a104
  40ac12:	jmp    0x409900
  40ac17:	mov    edx,DWORD PTR [r13+0x0]
  40ac1b:	mov    rcx,QWORD PTR [r12]
  40ac1f:	mov    r14,r13
  40ac22:	add    DWORD PTR [rip+0x4f4b3],0x1        # 0x45a0dc
  40ac29:	call   0x409050
  40ac2e:	mov    rbx,QWORD PTR [rip+0x4f4db]        # 0x45a110
  40ac35:	movzx  edx,BYTE PTR [rip+0x4f4e0]        # 0x45a11c
  40ac3c:	movsxd rax,DWORD PTR [rip+0x4f4c1]        # 0x45a104
  40ac43:	jmp    0x409900
  40ac48:	mov    r14,r13
  40ac4b:	mov    DWORD PTR [rip+0x4f4af],0x1d        # 0x45a104
  40ac55:	mov    rbx,QWORD PTR [rip+0x4f4b4]        # 0x45a110
  40ac5c:	movzx  edx,BYTE PTR [rip+0x4f4b9]        # 0x45a11c
  40ac63:	mov    eax,0x1d
  40ac68:	jmp    0x409900
  40ac6d:	mov    rcx,QWORD PTR [rip+0x4f47c]        # 0x45a0f0
  40ac74:	mov    edx,0x27
  40ac79:	mov    r14,r13
  40ac7c:	call   0x427dd0
  40ac81:	mov    rbx,QWORD PTR [rip+0x4f488]        # 0x45a110
  40ac88:	movzx  edx,BYTE PTR [rip+0x4f48d]        # 0x45a11c
  40ac8f:	movsxd rax,DWORD PTR [rip+0x4f46e]        # 0x45a104
  40ac96:	jmp    0x409900
  40ac9b:	mov    rcx,QWORD PTR [rip+0x4f44e]        # 0x45a0f0
  40aca2:	mov    edx,0xa
  40aca7:	mov    r14,r13
  40acaa:	call   0x427dd0
  40acaf:	mov    rbx,QWORD PTR [rip+0x4f45a]        # 0x45a110
  40acb6:	movzx  edx,BYTE PTR [rip+0x4f45f]        # 0x45a11c
  40acbd:	movsxd rax,DWORD PTR [rip+0x4f440]        # 0x45a104
  40acc4:	jmp    0x409900
  40acc9:	mov    rcx,QWORD PTR [rip+0x4f420]        # 0x45a0f0
  40acd0:	mov    edx,0x9
  40acd5:	mov    r14,r13
  40acd8:	call   0x427dd0
  40acdd:	mov    rbx,QWORD PTR [rip+0x4f42c]        # 0x45a110
  40ace4:	movzx  edx,BYTE PTR [rip+0x4f431]        # 0x45a11c
  40aceb:	movsxd rax,DWORD PTR [rip+0x4f412]        # 0x45a104
  40acf2:	jmp    0x409900
  40acf7:	mov    rcx,QWORD PTR [rip+0x4f3f2]        # 0x45a0f0
  40acfe:	mov    edx,0x8
  40ad03:	mov    r14,r13
  40ad06:	call   0x427dd0
  40ad0b:	mov    rbx,QWORD PTR [rip+0x4f3fe]        # 0x45a110
  40ad12:	movzx  edx,BYTE PTR [rip+0x4f403]        # 0x45a11c
  40ad19:	movsxd rax,DWORD PTR [rip+0x4f3e4]        # 0x45a104
  40ad20:	jmp    0x409900
  40ad25:	mov    rcx,QWORD PTR [rip+0x4f3c4]        # 0x45a0f0
  40ad2c:	mov    edx,0xd
  40ad31:	mov    r14,r13
  40ad34:	call   0x427dd0
  40ad39:	mov    rbx,QWORD PTR [rip+0x4f3d0]        # 0x45a110
  40ad40:	movzx  edx,BYTE PTR [rip+0x4f3d5]        # 0x45a11c
  40ad47:	movsxd rax,DWORD PTR [rip+0x4f3b6]        # 0x45a104
  40ad4e:	jmp    0x409900
  40ad53:	mov    rcx,QWORD PTR [rip+0x4f396]        # 0x45a0f0
  40ad5a:	mov    edx,0xc
  40ad5f:	mov    r14,r13
  40ad62:	call   0x427dd0
  40ad67:	mov    rbx,QWORD PTR [rip+0x4f3a2]        # 0x45a110
  40ad6e:	movzx  edx,BYTE PTR [rip+0x4f3a7]        # 0x45a11c
  40ad75:	movsxd rax,DWORD PTR [rip+0x4f388]        # 0x45a104
  40ad7c:	jmp    0x409900
  40ad81:	mov    rax,QWORD PTR [r12]
  40ad85:	mov    r8d,0x8
  40ad8b:	xor    edx,edx
  40ad8d:	mov    r14,r13
  40ad90:	lea    rcx,[rax+0x1]
  40ad94:	call   0x42a3d0
  40ad99:	mov    rcx,QWORD PTR [rip+0x4f350]        # 0x45a0f0
  40ada0:	movsx  edx,al
  40ada3:	call   0x427dd0
  40ada8:	mov    rbx,QWORD PTR [rip+0x4f361]        # 0x45a110
  40adaf:	movzx  edx,BYTE PTR [rip+0x4f366]        # 0x45a11c
  40adb6:	movsxd rax,DWORD PTR [rip+0x4f347]        # 0x45a104
  40adbd:	jmp    0x409900
  40adc2:	mov    edx,DWORD PTR [r13+0x0]
  40adc6:	mov    rcx,QWORD PTR [r12]
  40adca:	mov    r14,r13
  40adcd:	call   0x409050
  40add2:	mov    rbx,QWORD PTR [rip+0x4f337]        # 0x45a110
  40add9:	movzx  edx,BYTE PTR [rip+0x4f33c]        # 0x45a11c
  40ade0:	movsxd rax,DWORD PTR [rip+0x4f31d]        # 0x45a104
  40ade7:	jmp    0x409900
  40adec:	mov    edx,DWORD PTR [r13+0x0]
  40adf0:	mov    rcx,QWORD PTR [r12]
  40adf4:	mov    r14,r13
  40adf7:	call   0x409050
  40adfc:	mov    rbx,QWORD PTR [rip+0x4f30d]        # 0x45a110
  40ae03:	movzx  edx,BYTE PTR [rip+0x4f312]        # 0x45a11c
  40ae0a:	movsxd rax,DWORD PTR [rip+0x4f2f3]        # 0x45a104
  40ae11:	jmp    0x409900
  40ae16:	mov    edx,DWORD PTR [r13+0x0]
  40ae1a:	mov    rcx,QWORD PTR [r12]
  40ae1e:	mov    r14,r13
  40ae21:	call   0x409050
  40ae26:	mov    rbx,QWORD PTR [rip+0x4f2e3]        # 0x45a110
  40ae2d:	movzx  edx,BYTE PTR [rip+0x4f2e8]        # 0x45a11c
  40ae34:	movsxd rax,DWORD PTR [rip+0x4f2c9]        # 0x45a104
  40ae3b:	jmp    0x409900
  40ae40:	mov    r14,r13
  40ae43:	mov    eax,DWORD PTR [r14]
  40ae46:	lea    edx,[rax-0x2]
  40ae49:	movzx  eax,BYTE PTR [rip+0x4f2cc]        # 0x45a11c
  40ae50:	mov    BYTE PTR [rbx],al
  40ae52:	movsxd rax,edx
  40ae55:	mov    QWORD PTR [r12],rbp
  40ae59:	add    rax,rbp
  40ae5c:	mov    DWORD PTR [r14],edx
  40ae5f:	movzx  edx,BYTE PTR [rax]
  40ae62:	mov    BYTE PTR [rax],0x0
  40ae65:	mov    rcx,QWORD PTR [r12]
  40ae69:	mov    QWORD PTR [rip+0x4f2a0],rax        # 0x45a110
  40ae70:	mov    BYTE PTR [rip+0x4f2a6],dl        # 0x45a11c
  40ae76:	mov    edx,DWORD PTR [r14]
  40ae79:	call   0x409050
  40ae7e:	mov    rbx,QWORD PTR [rip+0x4f28b]        # 0x45a110
  40ae85:	movzx  edx,BYTE PTR [rip+0x4f290]        # 0x45a11c
  40ae8c:	movsxd rax,DWORD PTR [rip+0x4f271]        # 0x45a104
  40ae93:	jmp    0x409900
  40ae98:	mov    edx,DWORD PTR [r13+0x0]
  40ae9c:	mov    rcx,QWORD PTR [r12]
  40aea0:	mov    r14,r13
  40aea3:	call   0x409050
  40aea8:	mov    rbx,QWORD PTR [rip+0x4f261]        # 0x45a110
  40aeaf:	movzx  edx,BYTE PTR [rip+0x4f266]        # 0x45a11c
  40aeb6:	movsxd rax,DWORD PTR [rip+0x4f247]        # 0x45a104
  40aebd:	jmp    0x409900
  40aec2:	mov    r14,r13
  40aec5:	mov    eax,DWORD PTR [r14]
  40aec8:	lea    edx,[rax-0x1]
  40aecb:	movzx  eax,BYTE PTR [rip+0x4f24a]        # 0x45a11c
  40aed2:	mov    BYTE PTR [rbx],al
  40aed4:	movsxd rax,edx
  40aed7:	mov    QWORD PTR [r12],rbp
  40aedb:	add    rax,rbp
  40aede:	mov    DWORD PTR [r14],edx
  40aee1:	movzx  edx,BYTE PTR [rax]
  40aee4:	mov    BYTE PTR [rax],0x0
  40aee7:	mov    rcx,QWORD PTR [r12]
  40aeeb:	mov    QWORD PTR [rip+0x4f21e],rax        # 0x45a110
  40aef2:	mov    BYTE PTR [rip+0x4f224],dl        # 0x45a11c
  40aef8:	mov    edx,DWORD PTR [r14]
  40aefb:	call   0x409050
  40af00:	mov    rbx,QWORD PTR [rip+0x4f209]        # 0x45a110
  40af07:	movzx  edx,BYTE PTR [rip+0x4f20e]        # 0x45a11c
  40af0e:	movsxd rax,DWORD PTR [rip+0x4f1ef]        # 0x45a104
  40af15:	jmp    0x409900
  40af1a:	mov    r14,r13
  40af1d:	mov    eax,DWORD PTR [r14]
  40af20:	lea    edx,[rax-0x2]
  40af23:	movzx  eax,BYTE PTR [rip+0x4f1f2]        # 0x45a11c
  40af2a:	mov    BYTE PTR [rbx],al
  40af2c:	movsxd rax,edx
  40af2f:	mov    QWORD PTR [r12],rbp
  40af33:	add    rax,rbp
  40af36:	mov    DWORD PTR [r14],edx
  40af39:	movzx  edx,BYTE PTR [rax]
  40af3c:	mov    BYTE PTR [rax],0x0
  40af3f:	mov    rcx,QWORD PTR [r12]
  40af43:	mov    QWORD PTR [rip+0x4f1c6],rax        # 0x45a110
  40af4a:	mov    BYTE PTR [rip+0x4f1cc],dl        # 0x45a11c
  40af50:	mov    edx,DWORD PTR [r14]
  40af53:	call   0x409050
  40af58:	mov    rbx,QWORD PTR [rip+0x4f1b1]        # 0x45a110
  40af5f:	movzx  edx,BYTE PTR [rip+0x4f1b6]        # 0x45a11c
  40af66:	movsxd rax,DWORD PTR [rip+0x4f197]        # 0x45a104
  40af6d:	jmp    0x409900
  40af72:	mov    edx,DWORD PTR [r13+0x0]
  40af76:	mov    rcx,QWORD PTR [r12]
  40af7a:	mov    r14,r13
  40af7d:	call   0x409050
  40af82:	mov    rbx,QWORD PTR [rip+0x4f187]        # 0x45a110
  40af89:	movzx  edx,BYTE PTR [rip+0x4f18c]        # 0x45a11c
  40af90:	movsxd rax,DWORD PTR [rip+0x4f16d]        # 0x45a104
  40af97:	jmp    0x409900
  40af9c:	cmp    DWORD PTR [rip+0x4f145],0x3        # 0x45a0e8
  40afa3:	mov    r14,r13
  40afa6:	je     0x40b9eb
  40afac:	movzx  eax,BYTE PTR [rip+0x4f169]        # 0x45a11c
  40afb3:	mov    QWORD PTR [rip+0x4f156],rbp        # 0x45a110
  40afba:	mov    DWORD PTR [rip+0x4f140],0x1d        # 0x45a104
  40afc4:	mov    BYTE PTR [rbx],al
  40afc6:	mov    QWORD PTR [r12],rbp
  40afca:	mov    rbx,rbp
  40afcd:	mov    DWORD PTR [r14],0x0
  40afd4:	movzx  edx,BYTE PTR [rbp+0x0]
  40afd8:	mov    eax,0x1d
  40afdd:	mov    BYTE PTR [rbp+0x0],0x0
  40afe1:	mov    BYTE PTR [rip+0x4f135],dl        # 0x45a11c
  40afe7:	jmp    0x409900
  40afec:	movzx  eax,BYTE PTR [rip+0x4f129]        # 0x45a11c
  40aff3:	mov    r14,r13
  40aff6:	mov    QWORD PTR [rip+0x4f113],rbp        # 0x45a110
  40affd:	mov    DWORD PTR [rip+0x4f0fd],0x1d        # 0x45a104
  40b007:	mov    BYTE PTR [rbx],al
  40b009:	mov    QWORD PTR [r12],rbp
  40b00d:	mov    rbx,rbp
  40b010:	mov    DWORD PTR [r14],0x0
  40b017:	movzx  edx,BYTE PTR [rbp+0x0]
  40b01b:	mov    eax,0x1d
  40b020:	mov    BYTE PTR [rbp+0x0],0x0
  40b024:	mov    BYTE PTR [rip+0x4f0f2],dl        # 0x45a11c
  40b02a:	jmp    0x409900
  40b02f:	mov    rbx,QWORD PTR [rip+0x4f0c2]        # 0x45a0f8
  40b036:	mov    r14,r13
  40b039:	cmp    QWORD PTR [rbx],0x0
  40b03d:	je     0x40baab
  40b043:	mov    rcx,rbx
  40b046:	call   0x4093a0
  40b04b:	mov    rax,QWORD PTR [rip+0x4f0a6]        # 0x45a0f8
  40b052:	mov    rbp,QWORD PTR [rax]
  40b055:	test   rbp,rbp
  40b058:	je     0x40b92b
  40b05e:	mov    rcx,QWORD PTR [rbp+0x0]
  40b062:	call   0x409290
  40b067:	mov    rax,QWORD PTR [rbp+0x8]
  40b06b:	mov    QWORD PTR [rbx+0x28],rax
  40b06f:	mov    rax,QWORD PTR [rbp+0x10]
  40b073:	test   rax,rax
  40b076:	je     0x40b9e2
  40b07c:	mov    QWORD PTR [rbx+0x30],rax
  40b080:	movzx  edx,BYTE PTR [rip+0x4f095]        # 0x45a11c
  40b087:	mov    rbx,QWORD PTR [rip+0x4f082]        # 0x45a110
  40b08e:	movsxd rax,DWORD PTR [rip+0x4f06f]        # 0x45a104
  40b095:	jmp    0x409900
  40b09a:	mov    rax,QWORD PTR [rip+0x4f03f]        # 0x45a0e0
  40b0a1:	mov    r14,r13
  40b0a4:	mov    DWORD PTR [rip+0x4f02e],0x0        # 0x45a0dc
  40b0ae:	mov    DWORD PTR [rip+0x4f04c],0x1f        # 0x45a104
  40b0b8:	mov    rbx,QWORD PTR [rip+0x4f051]        # 0x45a110
  40b0bf:	movzx  edx,BYTE PTR [rip+0x4f056]        # 0x45a11c
  40b0c6:	mov    BYTE PTR [rax],0x27
  40b0c9:	mov    eax,0x1f
  40b0ce:	jmp    0x409900
  40b0d3:	mov    edx,DWORD PTR [r13+0x0]
  40b0d7:	mov    rcx,QWORD PTR [r12]
  40b0db:	mov    r14,r13
  40b0de:	call   0x409050
  40b0e3:	mov    rbx,QWORD PTR [rip+0x4f026]        # 0x45a110
  40b0ea:	movzx  edx,BYTE PTR [rip+0x4f02b]        # 0x45a11c
  40b0f1:	movsxd rax,DWORD PTR [rip+0x4f00c]        # 0x45a104
  40b0f8:	jmp    0x409900
  40b0fd:	mov    r14,r13
  40b100:	mov    rbx,QWORD PTR [rip+0x4f009]        # 0x45a110
  40b107:	movzx  edx,BYTE PTR [rip+0x4f00e]        # 0x45a11c
  40b10e:	movsxd rax,DWORD PTR [rip+0x4efef]        # 0x45a104
  40b115:	jmp    0x409900
  40b11a:	mov    edx,DWORD PTR [r13+0x0]
  40b11e:	mov    rcx,QWORD PTR [r12]
  40b122:	mov    r14,r13
  40b125:	call   0x409050
  40b12a:	mov    rbx,QWORD PTR [rip+0x4efdf]        # 0x45a110
  40b131:	movzx  edx,BYTE PTR [rip+0x4efe4]        # 0x45a11c
  40b138:	movsxd rax,DWORD PTR [rip+0x4efc5]        # 0x45a104
  40b13f:	jmp    0x409900
  40b144:	mov    rax,QWORD PTR [r12]
  40b148:	mov    r8d,0x10
  40b14e:	xor    edx,edx
  40b150:	mov    r14,r13
  40b153:	lea    rcx,[rax+0x2]
  40b157:	call   0x42a3d0
  40b15c:	mov    rcx,QWORD PTR [rip+0x4ef8d]        # 0x45a0f0
  40b163:	movsx  edx,al
  40b166:	call   0x427dd0
  40b16b:	mov    rbx,QWORD PTR [rip+0x4ef9e]        # 0x45a110
  40b172:	movzx  edx,BYTE PTR [rip+0x4efa3]        # 0x45a11c
  40b179:	movsxd rax,DWORD PTR [rip+0x4ef84]        # 0x45a104
  40b180:	jmp    0x409900
  40b185:	mov    rax,QWORD PTR [r12]
  40b189:	mov    edx,0x1
  40b18e:	mov    r14,r13
  40b191:	lea    rcx,[rax+0x1]
  40b195:	call   0x409050
  40b19a:	mov    rbx,QWORD PTR [rip+0x4ef6f]        # 0x45a110
  40b1a1:	movzx  edx,BYTE PTR [rip+0x4ef74]        # 0x45a11c
  40b1a8:	movsxd rax,DWORD PTR [rip+0x4ef55]        # 0x45a104
  40b1af:	jmp    0x409900
  40b1b4:	mov    edx,DWORD PTR [r13+0x0]
  40b1b8:	mov    rcx,QWORD PTR [r12]
  40b1bc:	mov    r14,r13
  40b1bf:	call   0x409050
  40b1c4:	mov    rbx,QWORD PTR [rip+0x4ef45]        # 0x45a110
  40b1cb:	movzx  edx,BYTE PTR [rip+0x4ef4a]        # 0x45a11c
  40b1d2:	movsxd rax,DWORD PTR [rip+0x4ef2b]        # 0x45a104
  40b1d9:	jmp    0x409900
  40b1de:	cmp    DWORD PTR [rip+0x4ef03],0x5        # 0x45a0e8
  40b1e5:	mov    r14,r13
  40b1e8:	je     0x40b1ef
  40b1ea:	call   0x408e40
  40b1ef:	mov    DWORD PTR [rip+0x4ef0b],0x1d        # 0x45a104
  40b1f9:	mov    rbx,QWORD PTR [rip+0x4ef10]        # 0x45a110
  40b200:	mov    eax,0x1d
  40b205:	movzx  edx,BYTE PTR [rip+0x4ef10]        # 0x45a11c
  40b20c:	jmp    0x409900
  40b211:	mov    edx,DWORD PTR [r13+0x0]
  40b215:	mov    rcx,QWORD PTR [r12]
  40b219:	mov    r14,r13
  40b21c:	call   0x409050
  40b221:	mov    rbx,QWORD PTR [rip+0x4eee8]        # 0x45a110
  40b228:	movzx  edx,BYTE PTR [rip+0x4eeed]        # 0x45a11c
  40b22f:	movsxd rax,DWORD PTR [rip+0x4eece]        # 0x45a104
  40b236:	jmp    0x409900
  40b23b:	mov    edx,DWORD PTR [r13+0x0]
  40b23f:	mov    rcx,QWORD PTR [r12]
  40b243:	mov    r14,r13
  40b246:	call   0x409050
  40b24b:	mov    DWORD PTR [rip+0x4eeaf],0x1d        # 0x45a104
  40b255:	mov    rbx,QWORD PTR [rip+0x4eeb4]        # 0x45a110
  40b25c:	mov    eax,0x1d
  40b261:	movzx  edx,BYTE PTR [rip+0x4eeb4]        # 0x45a11c
  40b268:	jmp    0x409900
  40b26d:	mov    edx,DWORD PTR [r13+0x0]
  40b271:	mov    rcx,QWORD PTR [r12]
  40b275:	mov    r14,r13
  40b278:	call   0x409050
  40b27d:	mov    rbx,QWORD PTR [rip+0x4ee8c]        # 0x45a110
  40b284:	movzx  edx,BYTE PTR [rip+0x4ee91]        # 0x45a11c
  40b28b:	movsxd rax,DWORD PTR [rip+0x4ee72]        # 0x45a104
  40b292:	jmp    0x409900
  40b297:	mov    rax,QWORD PTR [rip+0x4ee52]        # 0x45a0f0
  40b29e:	mov    r14,r13
  40b2a1:	cmp    QWORD PTR [rax+0x8],0x0
  40b2a6:	jne    0x40b8bc
  40b2ac:	mov    rbx,QWORD PTR [rip+0x4ee5d]        # 0x45a110
  40b2b3:	movzx  edx,BYTE PTR [rip+0x4ee62]        # 0x45a11c
  40b2ba:	movsxd rax,DWORD PTR [rip+0x4ee43]        # 0x45a104
  40b2c1:	jmp    0x409900
  40b2c6:	mov    edx,DWORD PTR [r13+0x0]
  40b2ca:	mov    rcx,QWORD PTR [r12]
  40b2ce:	mov    r14,r13
  40b2d1:	call   0x409050
  40b2d6:	mov    rbx,QWORD PTR [rip+0x4ee33]        # 0x45a110
  40b2dd:	movzx  edx,BYTE PTR [rip+0x4ee38]        # 0x45a11c
  40b2e4:	movsxd rax,DWORD PTR [rip+0x4ee19]        # 0x45a104
  40b2eb:	jmp    0x409900
  40b2f0:	mov    rax,rbx
  40b2f3:	sub    rax,QWORD PTR [r12]
  40b2f7:	mov    r11,QWORD PTR [rip+0x4ee22]        # 0x45a120
  40b2fe:	mov    rdx,QWORD PTR [rip+0x4ee2b]        # 0x45a130
  40b305:	sub    eax,0x1
  40b308:	mov    DWORD PTR [rsp+0x3c],eax
  40b30c:	movzx  eax,BYTE PTR [rip+0x4ee09]        # 0x45a11c
  40b313:	mov    BYTE PTR [rbx],al
  40b315:	lea    rax,[r11+rdx*8]
  40b319:	mov    r9,QWORD PTR [rax]
  40b31c:	mov    r15,rax
  40b31f:	mov    eax,DWORD PTR [r9+0x3c]
  40b323:	test   eax,eax
  40b325:	je     0x40b55d
  40b32b:	movsxd r14,DWORD PTR [rip+0x4ede6]        # 0x45a118
  40b332:	mov    rcx,QWORD PTR [r9+0x8]
  40b336:	mov    r8,QWORD PTR [rip+0x4edd3]        # 0x45a110
  40b33d:	lea    rax,[rcx+r14*1]
  40b341:	cmp    rax,r8
  40b344:	mov    QWORD PTR [rsp+0x28],rax
  40b349:	jae    0x40bab2
  40b34f:	lea    r14,[rcx+r14*1+0x1]
  40b354:	mov    rax,QWORD PTR [r12]
  40b358:	cmp    r8,r14
  40b35b:	ja     0x40bb6b
  40b361:	mov    r14d,DWORD PTR [r9+0x38]
  40b365:	sub    r8,rax
  40b368:	test   r14d,r14d
  40b36b:	jne    0x40b45a
  40b371:	cmp    r8,0x1
  40b375:	je     0x40b71c
  40b37b:	mov    rbx,QWORD PTR [rsp+0x28]
  40b380:	mov    rbp,rax
  40b383:	cmp    rbx,rbp
  40b386:	mov    QWORD PTR [rip+0x4ed83],rbx        # 0x45a110
  40b38d:	movsxd rdx,DWORD PTR [rip+0x4ed70]        # 0x45a104
  40b394:	jbe    0x409945
  40b39a:	mov    r8,rbp
  40b39d:	movzx  ecx,BYTE PTR [r8]
  40b3a1:	mov    eax,0x1
  40b3a6:	test   cl,cl
  40b3a8:	je     0x40b3ad
  40b3aa:	mov    eax,DWORD PTR [rdi+rcx*4]
  40b3ad:	movsxd rcx,eax
  40b3b0:	movsxd rax,edx
  40b3b3:	add    r8,0x1
  40b3b7:	lea    rdx,[rax+rax*2]
  40b3bb:	mov    rax,rdx
  40b3be:	shl    rax,0x4
  40b3c2:	sub    rax,rdx
  40b3c5:	add    rax,rcx
  40b3c8:	cmp    r8,rbx
  40b3cb:	movsx  rdx,WORD PTR [rsi+rax*2]
  40b3d0:	jne    0x40b39d
  40b3d2:	jmp    0x409945
  40b3d7:	lea    rcx,[rip+0x28faa]        # 0x434388
  40b3de:	call   0x409020
  40b3e3:	call   0x4091e0
  40b3e8:	mov    rdx,QWORD PTR [rip+0x4ed41]        # 0x45a130
  40b3ef:	mov    rax,QWORD PTR [rip+0x4ed2a]        # 0x45a120
  40b3f6:	mov    rcx,QWORD PTR [rip+0x4ecd3]        # 0x45a0d0
  40b3fd:	lea    rbx,[rax+rdx*8]
  40b401:	mov    edx,0x4000
  40b406:	call   0x4094c0
  40b40b:	mov    QWORD PTR [rbx],rax
  40b40e:	jmp    0x4098b6
  40b413:	test   r15,r15
  40b416:	jne    0x40a8e3
  40b41c:	test   rax,rax
  40b41f:	jne    0x40bb63
  40b425:	cmp    DWORD PTR [rsp+0x30],0x1
  40b42a:	mov    edx,DWORD PTR [rsp+0x30]
  40b42e:	jle    0x40a990
  40b434:	mov    ecx,DWORD PTR [rsp+0x30]
  40b438:	movsxd rax,ecx
  40b43b:	mov    edx,ecx
  40b43d:	movzx  eax,BYTE PTR [rbp+rax*1-0x1]
  40b442:	sub    eax,0x2b
  40b445:	test   al,0xfd
  40b447:	jne    0x40a990
  40b44d:	mov    QWORD PTR [rsp+0x28],rbx
  40b452:	mov    r15d,ecx
  40b455:	jmp    0x40a910
  40b45a:	lea    r14d,[r8-0x1]
  40b45e:	test   r14d,r14d
  40b461:	jle    0x40b485
  40b463:	xor    r8d,r8d
  40b466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b470:	movzx  r9d,BYTE PTR [rax+r8*1]
  40b475:	mov    BYTE PTR [rcx+r8*1],r9b
  40b479:	add    r8,0x1
  40b47d:	cmp    r14d,r8d
  40b480:	jg     0x40b470
  40b482:	mov    r9,QWORD PTR [r15]
  40b485:	cmp    DWORD PTR [r9+0x3c],0x2
  40b48a:	je     0x40b8f5
  40b490:	mov    eax,r14d
  40b493:	not    eax
  40b495:	add    eax,DWORD PTR [r9+0x18]
  40b499:	test   eax,eax
  40b49b:	jg     0x40b5d6
  40b4a1:	mov    QWORD PTR [rsp+0x30],rbx
  40b4a6:	mov    QWORD PTR [rsp+0x40],rbp
  40b4ab:	mov    rbx,r15
  40b4ae:	mov    QWORD PTR [rsp+0x48],r12
  40b4b3:	mov    r15,r13
  40b4b6:	mov    rbp,r9
  40b4b9:	mov    r12,r11
  40b4bc:	jmp    0x40b50e
  40b4be:	xchg   ax,ax
  40b4c0:	mov    rax,QWORD PTR [rbp+0x18]
  40b4c4:	lea    edx,[rax+rax*1]
  40b4c7:	test   edx,edx
  40b4c9:	jle    0x40b54a
  40b4cb:	add    rax,rax
  40b4ce:	mov    QWORD PTR [rbp+0x18],rax
  40b4d2:	lea    rdx,[rax+0x2]
  40b4d6:	mov    QWORD PTR [rsp+0x28],r10
  40b4db:	call   0x42a460
  40b4e0:	test   rax,rax
  40b4e3:	mov    QWORD PTR [rbp+0x8],rax
  40b4e7:	mov    r10,QWORD PTR [rsp+0x28]
  40b4ec:	je     0x40b532
  40b4ee:	movsxd rdx,r13d
  40b4f1:	mov    rbp,QWORD PTR [rbx]
  40b4f4:	add    rax,rdx
  40b4f7:	mov    QWORD PTR [rip+0x4ec12],rax        # 0x45a110
  40b4fe:	mov    eax,r14d
  40b501:	not    eax
  40b503:	add    eax,DWORD PTR [rbp+0x18]
  40b506:	test   eax,eax
  40b508:	jg     0x40b5c1
  40b50e:	test   r12,r12
  40b511:	je     0x40b540
  40b513:	mov    rcx,QWORD PTR [rbp+0x8]
  40b517:	mov    r13,QWORD PTR [rip+0x4ebf2]        # 0x45a110
  40b51e:	mov    r8d,DWORD PTR [rbp+0x24]
  40b522:	sub    r13,rcx
  40b525:	test   r8d,r8d
  40b528:	jne    0x40b4c0
  40b52a:	mov    QWORD PTR [rbp+0x8],0x0
  40b532:	lea    rcx,[rip+0x28dcf]        # 0x434308
  40b539:	call   0x409020
  40b53e:	xchg   ax,ax
  40b540:	mov    rax,QWORD PTR ds:0x8
  40b548:	ud2    
  40b54a:	mov    rdx,rax
  40b54d:	shr    rdx,0x3
  40b551:	add    rax,rdx
  40b554:	mov    QWORD PTR [rbp+0x18],rax
  40b558:	jmp    0x40b4d2
  40b55d:	mov    rax,QWORD PTR [rip+0x4eb6c]        # 0x45a0d0
  40b564:	movsxd r14,DWORD PTR [r9+0x20]
  40b568:	mov    QWORD PTR [r9],rax
  40b56b:	mov    rax,QWORD PTR [r15]
  40b56e:	mov    DWORD PTR [rip+0x4eba3],r14d        # 0x45a118
  40b575:	mov    DWORD PTR [rax+0x3c],0x1
  40b57c:	mov    r9,QWORD PTR [r15]
  40b57f:	jmp    0x40b332
  40b584:	lea    rcx,[rip+0x28e35]        # 0x4343c0
  40b58b:	mov    rdx,rbp
  40b58e:	call   0x405d90
  40b593:	mov    edx,DWORD PTR [r14]
  40b596:	mov    rcx,QWORD PTR [r12]
  40b59a:	call   0x409050
  40b59f:	mov    rcx,rbp
  40b5a2:	call   0x42a4e8
  40b5a7:	mov    rbx,QWORD PTR [rip+0x4eb62]        # 0x45a110
  40b5ae:	movzx  edx,BYTE PTR [rip+0x4eb67]        # 0x45a11c
  40b5b5:	movsxd rax,DWORD PTR [rip+0x4eb48]        # 0x45a104
  40b5bc:	jmp    0x409900
  40b5c1:	mov    r9,rbp
  40b5c4:	mov    rbx,QWORD PTR [rsp+0x30]
  40b5c9:	mov    rbp,QWORD PTR [rsp+0x40]
  40b5ce:	mov    r12,QWORD PTR [rsp+0x48]
  40b5d3:	mov    r13,r15
  40b5d6:	mov    edx,DWORD PTR [r9+0x28]
  40b5da:	cmp    eax,0x2000
  40b5df:	mov    ecx,0x2000
  40b5e4:	cmovg  eax,ecx
  40b5e7:	xor    r8d,r8d
  40b5ea:	mov    DWORD PTR [rsp+0x48],eax
  40b5ee:	cdqe   
  40b5f0:	test   edx,edx
  40b5f2:	mov    QWORD PTR [rsp+0x28],rax
  40b5f7:	movsxd rax,r14d
  40b5fa:	je     0x40b78b
  40b600:	mov    r15,rbx
  40b603:	mov    QWORD PTR [rsp+0x30],rbp
  40b608:	mov    QWORD PTR [rsp+0x40],r12
  40b60d:	mov    rbx,QWORD PTR [rsp+0x28]
  40b612:	mov    rbp,r8
  40b615:	mov    r12,rax
  40b618:	jmp    0x40b656
  40b61a:	nop    WORD PTR [rax+rax*1+0x0]
  40b620:	cmp    eax,0xa
  40b623:	je     0x40ba6b
  40b629:	mov    rdx,QWORD PTR [rip+0x4eb00]        # 0x45a130
  40b630:	mov    r11,QWORD PTR [rip+0x4eae9]        # 0x45a120
  40b637:	mov    r8,rbp
  40b63a:	add    rbp,0x1
  40b63e:	lea    rcx,[r11+rdx*8]
  40b642:	mov    r9,QWORD PTR [rcx]
  40b645:	add    r8,QWORD PTR [r9+0x8]
  40b649:	cmp    rbx,rbp
  40b64c:	mov    BYTE PTR [r8+r12*1],al
  40b650:	je     0x40ba19
  40b656:	mov    rcx,QWORD PTR [rip+0x4ea73]        # 0x45a0d0
  40b65d:	mov    QWORD PTR [rsp+0x28],r10
  40b662:	call   0x42a4d8
  40b667:	cmp    eax,0xffffffff
  40b66a:	mov    r10,QWORD PTR [rsp+0x28]
  40b66f:	jne    0x40b620
  40b671:	mov    rcx,QWORD PTR [rip+0x4ea58]        # 0x45a0d0
  40b678:	mov    QWORD PTR [rsp+0x48],r10
  40b67d:	mov    rbx,r15
  40b680:	mov    QWORD PTR [rsp+0x28],rbp
  40b685:	mov    r12,QWORD PTR [rsp+0x40]
  40b68a:	mov    rbp,QWORD PTR [rsp+0x30]
  40b68f:	call   0x42a528
  40b694:	test   eax,eax
  40b696:	mov    r8,QWORD PTR [rsp+0x28]
  40b69b:	mov    r10,QWORD PTR [rsp+0x48]
  40b6a0:	jne    0x40bb57
  40b6a6:	mov    rdx,QWORD PTR [rip+0x4ea83]        # 0x45a130
  40b6ad:	mov    r11,QWORD PTR [rip+0x4ea6c]        # 0x45a120
  40b6b4:	mov    eax,r8d
  40b6b7:	mov    rcx,QWORD PTR [r11+rdx*8]
  40b6bb:	mov    DWORD PTR [rip+0x4ea57],eax        # 0x45a118
  40b6c1:	test   eax,eax
  40b6c3:	mov    DWORD PTR [rcx+0x20],eax
  40b6c6:	je     0x40b907
  40b6cc:	lea    r11,[r11+rdx*8]
  40b6d0:	xor    r9d,r9d
  40b6d3:	lea    ecx,[rax+r14*1]
  40b6d7:	mov    r14,QWORD PTR [r11]
  40b6da:	movsxd r8,ecx
  40b6dd:	mov    r15d,ecx
  40b6e0:	cmp    r8,QWORD PTR [r14+0x18]
  40b6e4:	ja     0x40b96f
  40b6ea:	mov    rax,QWORD PTR [r14+0x8]
  40b6ee:	mov    BYTE PTR [rax+r8*1],0x0
  40b6f3:	mov    rax,QWORD PTR [r11]
  40b6f6:	cmp    r9d,0x1
  40b6fa:	mov    DWORD PTR [rip+0x4ea17],r15d        # 0x45a118
  40b701:	mov    rax,QWORD PTR [rax+0x8]
  40b705:	mov    BYTE PTR [rax+r8*1+0x1],0x0
  40b70b:	mov    rax,QWORD PTR [r11]
  40b70e:	mov    rax,QWORD PTR [rax+0x8]
  40b712:	mov    QWORD PTR [r12],rax
  40b716:	jne    0x40bb77
  40b71c:	mov    QWORD PTR [rip+0x4e9ed],rax        # 0x45a110
  40b723:	mov    eax,DWORD PTR [rip+0x4e9db]        # 0x45a104
  40b729:	mov    DWORD PTR [rip+0x4e9cd],0x0        # 0x45a100
  40b733:	sub    eax,0x1
  40b736:	mov    edx,eax
  40b738:	shr    edx,0x1f
  40b73b:	add    eax,edx
  40b73d:	sar    eax,1
  40b73f:	add    eax,0x75
  40b742:	jmp    0x409971
  40b747:	call   QWORD PTR [rip+0x51467]        # 0x45cbb4
  40b74d:	add    rax,0x30
  40b751:	mov    QWORD PTR [rip+0x4e970],rax        # 0x45a0c8
  40b758:	jmp    0x409894
  40b75d:	call   QWORD PTR [rip+0x51451]        # 0x45cbb4
  40b763:	mov    QWORD PTR [rip+0x4e966],rax        # 0x45a0d0
  40b76a:	jmp    0x409886
  40b76f:	mov    rcx,r13
  40b772:	call   0x424900
  40b777:	mov    rdx,QWORD PTR [rip+0x4e97a]        # 0x45a0f8
  40b77e:	mov    QWORD PTR [rbx+0x10],rax
  40b782:	mov    QWORD PTR [rdx+0x30],rax
  40b786:	jmp    0x40a768
  40b78b:	mov    QWORD PTR [rsp+0x40],r10
  40b790:	call   QWORD PTR [rip+0x51456]        # 0x45cbec
  40b796:	mov    DWORD PTR [rax],0x0
  40b79c:	mov    rax,QWORD PTR [rsp+0x28]
  40b7a1:	mov    r10,QWORD PTR [rsp+0x40]
  40b7a6:	mov    r15,rax
  40b7a9:	movsxd rax,r14d
  40b7ac:	mov    QWORD PTR [rsp+0x30],rax
  40b7b1:	jmp    0x40b805
  40b7b3:	mov    rcx,QWORD PTR [rip+0x4e916]        # 0x45a0d0
  40b7ba:	mov    QWORD PTR [rsp+0x28],r10
  40b7bf:	call   0x42a528
  40b7c4:	test   eax,eax
  40b7c6:	mov    r10,QWORD PTR [rsp+0x28]
  40b7cb:	je     0x40bb30
  40b7d1:	mov    QWORD PTR [rsp+0x28],r10
  40b7d6:	call   QWORD PTR [rip+0x51410]        # 0x45cbec
  40b7dc:	cmp    DWORD PTR [rax],0x2714
  40b7e2:	jne    0x40bb57
  40b7e8:	call   QWORD PTR [rip+0x513fe]        # 0x45cbec
  40b7ee:	mov    DWORD PTR [rax],0x0
  40b7f4:	mov    rcx,QWORD PTR [rip+0x4e8d5]        # 0x45a0d0
  40b7fb:	call   0x42a548
  40b800:	mov    r10,QWORD PTR [rsp+0x28]
  40b805:	mov    rdx,QWORD PTR [rip+0x4e924]        # 0x45a130
  40b80c:	mov    rax,QWORD PTR [rip+0x4e90d]        # 0x45a120
  40b813:	mov    r8,r15
  40b816:	mov    rcx,QWORD PTR [rsp+0x30]
  40b81b:	mov    r9,QWORD PTR [rip+0x4e8ae]        # 0x45a0d0
  40b822:	mov    QWORD PTR [rsp+0x28],r10
  40b827:	mov    rax,QWORD PTR [rax+rdx*8]
  40b82b:	mov    edx,0x1
  40b830:	add    rcx,QWORD PTR [rax+0x8]
  40b834:	call   0x42a4f0
  40b839:	test   eax,eax
  40b83b:	mov    DWORD PTR [rip+0x4e8d7],eax        # 0x45a118
  40b841:	mov    r10,QWORD PTR [rsp+0x28]
  40b846:	je     0x40b7b3
  40b84c:	mov    rdx,QWORD PTR [rip+0x4e8dd]        # 0x45a130
  40b853:	mov    r11,QWORD PTR [rip+0x4e8c6]        # 0x45a120
  40b85a:	mov    rcx,rax
  40b85d:	mov    r8,QWORD PTR [r11+rdx*8]
  40b861:	mov    DWORD PTR [r8+0x20],ecx
  40b865:	jmp    0x40b6cc
  40b86a:	mov    DWORD PTR [rip+0x4e890],0x1        # 0x45a104
  40b874:	jmp    0x409b05
  40b879:	mov    rcx,r15
  40b87c:	call   0x42a4e8
  40b881:	mov    QWORD PTR [rbp+0x48],0x0
  40b889:	mov    DWORD PTR [rip+0x4e871],0x1        # 0x45a104
  40b893:	jmp    0x40a232
  40b898:	mov    edx,DWORD PTR [r13+0x0]
  40b89c:	mov    rcx,QWORD PTR [r12]
  40b8a0:	call   0x409050
  40b8a5:	jmp    0x40aaf1
  40b8aa:	mov    edx,DWORD PTR [r13+0x0]
  40b8ae:	mov    rcx,QWORD PTR [r12]
  40b8b2:	call   0x409050
  40b8b7:	jmp    0x40aaac
  40b8bc:	mov    edx,DWORD PTR [r13+0x0]
  40b8c0:	mov    rcx,QWORD PTR [r12]
  40b8c4:	call   0x409050
  40b8c9:	mov    rbx,QWORD PTR [rip+0x4e840]        # 0x45a110
  40b8d0:	movzx  edx,BYTE PTR [rip+0x4e845]        # 0x45a11c
  40b8d7:	movsxd rax,DWORD PTR [rip+0x4e826]        # 0x45a104
  40b8de:	jmp    0x409900
  40b8e3:	mov    edx,DWORD PTR [r13+0x0]
  40b8e7:	mov    rcx,QWORD PTR [r12]
  40b8eb:	call   0x409050
  40b8f0:	jmp    0x40ab39
  40b8f5:	mov    DWORD PTR [rip+0x4e819],0x0        # 0x45a118
  40b8ff:	mov    DWORD PTR [r9+0x20],0x0
  40b907:	test   r14d,r14d
  40b90a:	je     0x40ba32
  40b910:	lea    r11,[r11+rdx*8]
  40b914:	mov    r9d,0x2
  40b91a:	mov    rax,QWORD PTR [r11]
  40b91d:	mov    DWORD PTR [rax+0x3c],0x2
  40b924:	xor    eax,eax
  40b926:	jmp    0x40b6d3
  40b92b:	mov    rcx,QWORD PTR [rax+0x8]
  40b92f:	call   0x409290
  40b934:	mov    rax,QWORD PTR [rbx+0x10]
  40b938:	movzx  edx,BYTE PTR [rip+0x4e7dd]        # 0x45a11c
  40b93f:	mov    QWORD PTR [rbx+0x28],rax
  40b943:	mov    rax,QWORD PTR [rbx+0x18]
  40b947:	mov    QWORD PTR [rbx+0x30],rax
  40b94b:	mov    rbx,QWORD PTR [rip+0x4e7be]        # 0x45a110
  40b952:	movsxd rax,DWORD PTR [rip+0x4e7ab]        # 0x45a104
  40b959:	jmp    0x409900
  40b95e:	mov    edx,DWORD PTR [r14]
  40b961:	mov    rcx,QWORD PTR [r12]
  40b965:	call   0x409050
  40b96a:	jmp    0x40b59f
  40b96f:	sar    eax,1
  40b971:	mov    QWORD PTR [rsp+0x48],r11
  40b976:	mov    DWORD PTR [rsp+0x40],r9d
  40b97b:	mov    edx,eax
  40b97d:	mov    QWORD PTR [rsp+0x30],r8
  40b982:	mov    QWORD PTR [rsp+0x28],r10
  40b987:	add    edx,ecx
  40b989:	mov    rcx,QWORD PTR [r14+0x8]
  40b98d:	movsxd rdx,edx
  40b990:	call   0x42a460
  40b995:	mov    r11,QWORD PTR [rsp+0x48]
  40b99a:	mov    QWORD PTR [r14+0x8],rax
  40b99e:	mov    r10,QWORD PTR [rsp+0x28]
  40b9a3:	mov    r8,QWORD PTR [rsp+0x30]
  40b9a8:	mov    r9d,DWORD PTR [rsp+0x40]
  40b9ad:	mov    rax,QWORD PTR [r11]
  40b9b0:	mov    rax,QWORD PTR [rax+0x8]
  40b9b4:	test   rax,rax
  40b9b7:	jne    0x40b6ee
  40b9bd:	lea    rcx,[rip+0x28994]        # 0x434358
  40b9c4:	call   0x409020
  40b9c9:	nop    DWORD PTR [rax+0x0]
  40b9d0:	mov    edx,DWORD PTR [r13+0x0]
  40b9d4:	mov    rcx,QWORD PTR [r12]
  40b9d8:	call   0x409050
  40b9dd:	jmp    0x40aaa2
  40b9e2:	mov    rax,QWORD PTR [rbp+0x8]
  40b9e6:	jmp    0x40b07c
  40b9eb:	mov    edx,DWORD PTR [r14]
  40b9ee:	mov    rcx,QWORD PTR [r12]
  40b9f2:	call   0x409050
  40b9f7:	mov    DWORD PTR [rip+0x4e703],0x25        # 0x45a104
  40ba01:	mov    rbx,QWORD PTR [rip+0x4e708]        # 0x45a110
  40ba08:	mov    eax,0x25
  40ba0d:	movzx  edx,BYTE PTR [rip+0x4e708]        # 0x45a11c
  40ba14:	jmp    0x409900
  40ba19:	mov    rbx,r15
  40ba1c:	mov    rbp,QWORD PTR [rsp+0x30]
  40ba21:	mov    r12,QWORD PTR [rsp+0x40]
  40ba26:	mov    eax,DWORD PTR [rsp+0x48]
  40ba2a:	mov    rcx,QWORD PTR [rcx]
  40ba2d:	jmp    0x40b6bb
  40ba32:	mov    rcx,QWORD PTR [rip+0x4e697]        # 0x45a0d0
  40ba39:	mov    QWORD PTR [rsp+0x28],r10
  40ba3e:	call   0x409530
  40ba43:	mov    rdx,QWORD PTR [rip+0x4e6d6]        # 0x45a120
  40ba4a:	mov    rcx,QWORD PTR [rip+0x4e6df]        # 0x45a130
  40ba51:	mov    r9d,0x1
  40ba57:	mov    eax,DWORD PTR [rip+0x4e6bb]        # 0x45a118
  40ba5d:	mov    r10,QWORD PTR [rsp+0x28]
  40ba62:	lea    r11,[rdx+rcx*8]
  40ba66:	jmp    0x40b6d3
  40ba6b:	mov    rdx,QWORD PTR [rip+0x4e6be]        # 0x45a130
  40ba72:	mov    r11,QWORD PTR [rip+0x4e6a7]        # 0x45a120
  40ba79:	mov    r8,rbp
  40ba7c:	mov    rbx,r15
  40ba7f:	mov    r15,r8
  40ba82:	movsxd rax,r14d
  40ba85:	mov    rbp,QWORD PTR [rsp+0x30]
  40ba8a:	mov    r12,QWORD PTR [rsp+0x40]
  40ba8f:	lea    rcx,[r11+rdx*8]
  40ba93:	mov    r9,QWORD PTR [rcx]
  40ba96:	add    r15,QWORD PTR [r9+0x8]
  40ba9a:	mov    BYTE PTR [r15+rax*1],0xa
  40ba9f:	lea    eax,[r8+0x1]
  40baa3:	mov    rcx,QWORD PTR [rcx]
  40baa6:	jmp    0x40b6bb
  40baab:	xor    eax,eax
  40baad:	jmp    0x4099b9
  40bab2:	movsxd rbx,DWORD PTR [rsp+0x3c]
  40bab7:	mov    rbp,QWORD PTR [r12]
  40babb:	movsxd rdx,DWORD PTR [rip+0x4e642]        # 0x45a104
  40bac2:	add    rbx,rbp
  40bac5:	cmp    rbp,rbx
  40bac8:	mov    QWORD PTR [rip+0x4e641],rbx        # 0x45a110
  40bacf:	jae    0x40bb05
  40bad1:	mov    rcx,rbp
  40bad4:	movzx  r8d,BYTE PTR [rcx]
  40bad8:	mov    eax,0x1
  40badd:	test   r8b,r8b
  40bae0:	je     0x40bae6
  40bae2:	movsxd rax,DWORD PTR [rdi+r8*4]
  40bae6:	lea    r8,[rdx+rdx*2]
  40baea:	add    rcx,0x1
  40baee:	mov    rdx,r8
  40baf1:	shl    rdx,0x4
  40baf5:	sub    rdx,r8
  40baf8:	add    rax,rdx
  40bafb:	cmp    rcx,rbx
  40bafe:	movsx  rdx,WORD PTR [rsi+rax*2]
  40bb03:	jne    0x40bad4
  40bb05:	imul   rax,rdx,0x5a
  40bb09:	movsx  rax,WORD PTR [rsi+rax*1+0x2]
  40bb0f:	test   eax,eax
  40bb11:	jle    0x409945
  40bb17:	add    rbx,0x1
  40bb1b:	mov    QWORD PTR [rip+0x4e5ee],rbx        # 0x45a110
  40bb22:	jmp    0x409931
  40bb27:	nop    WORD PTR [rax+rax*1+0x0]
  40bb30:	mov    rdx,QWORD PTR [rip+0x4e5f9]        # 0x45a130
  40bb37:	mov    r11,QWORD PTR [rip+0x4e5e2]        # 0x45a120
  40bb3e:	mov    eax,DWORD PTR [rip+0x4e5d4]        # 0x45a118
  40bb44:	mov    rcx,QWORD PTR [r11+rdx*8]
  40bb48:	jmp    0x40b6c1
  40bb4d:	mov    eax,0x1
  40bb52:	jmp    0x4099b9
  40bb57:	lea    rcx,[rip+0x287d6]        # 0x434334
  40bb5e:	call   0x409020
  40bb63:	mov    r15,rax
  40bb66:	jmp    0x40a8e3
  40bb6b:	lea    rcx,[rip+0x2875e]        # 0x4342d0
  40bb72:	call   0x409020
  40bb77:	cmp    r9d,0x2
  40bb7b:	je     0x40bbd8
  40bb7d:	movsxd rbx,DWORD PTR [rsp+0x3c]
  40bb82:	mov    rbp,rax
  40bb85:	add    rbx,rax
  40bb88:	movsxd rax,DWORD PTR [rip+0x4e575]        # 0x45a104
  40bb8f:	cmp    rbx,rbp
  40bb92:	mov    QWORD PTR [rip+0x4e577],rbx        # 0x45a110
  40bb99:	jbe    0x409931
  40bb9f:	mov    rcx,rbp
  40bba2:	movzx  r8d,BYTE PTR [rcx]
  40bba6:	mov    edx,0x1
  40bbab:	test   r8b,r8b
  40bbae:	je     0x40bbb4
  40bbb0:	movsxd rdx,DWORD PTR [rdi+r8*4]
  40bbb4:	lea    r8,[rax+rax*2]
  40bbb8:	add    rcx,0x1
  40bbbc:	mov    rax,r8
  40bbbf:	shl    rax,0x4
  40bbc3:	sub    rax,r8
  40bbc6:	add    rax,rdx
  40bbc9:	cmp    rcx,rbx
  40bbcc:	movsx  rax,WORD PTR [rsi+rax*2]
  40bbd1:	jne    0x40bba2
  40bbd3:	jmp    0x409931
  40bbd8:	mov    rdx,QWORD PTR [r11]
  40bbdb:	mov    rbx,r8
  40bbde:	mov    rbp,rax
  40bbe1:	add    rbx,QWORD PTR [rdx+0x8]
  40bbe5:	jmp    0x40b383
  40bbea:	nop    WORD PTR [rax+rax*1+0x0]
  40bbf0:	push   rdi
  40bbf1:	push   rsi
  40bbf2:	push   rbx
  40bbf3:	sub    rsp,0x20
  40bbf7:	movsxd rbx,edx
  40bbfa:	mov    rsi,rcx
  40bbfd:	lea    edi,[rbx+0x2]
  40bc00:	movsxd rdi,edi
  40bc03:	mov    rcx,rdi
  40bc06:	call   0x42a4a0
  40bc0b:	test   rax,rax
  40bc0e:	je     0x40bc5a
  40bc10:	xor    r8d,r8d
  40bc13:	test   ebx,ebx
  40bc15:	jle    0x40bc32
  40bc17:	nop    WORD PTR [rax+rax*1+0x0]
  40bc20:	movzx  r9d,BYTE PTR [rsi+r8*1]
  40bc25:	mov    BYTE PTR [rax+r8*1],r9b
  40bc29:	add    r8,0x1
  40bc2d:	cmp    ebx,r8d
  40bc30:	jg     0x40bc20
  40bc32:	mov    BYTE PTR [rax+rbx*1+0x1],0x0
  40bc37:	mov    BYTE PTR [rax+rbx*1],0x0
  40bc3b:	mov    rdx,rdi
  40bc3e:	mov    rcx,rax
  40bc41:	call   0x4096c0
  40bc46:	test   rax,rax
  40bc49:	je     0x40bc66
  40bc4b:	mov    DWORD PTR [rax+0x24],0x1
  40bc52:	add    rsp,0x20
  40bc56:	pop    rbx
  40bc57:	pop    rsi
  40bc58:	pop    rdi
  40bc59:	ret    
  40bc5a:	lea    rcx,[rip+0x289b7]        # 0x434618
  40bc61:	call   0x409020
  40bc66:	lea    rcx,[rip+0x289d4]        # 0x434641
  40bc6d:	call   0x409020
  40bc72:	nop
  40bc73:	nop    DWORD PTR [rax]
  40bc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc80:	push   rbx
  40bc81:	sub    rsp,0x20
  40bc85:	mov    rbx,rcx
  40bc88:	call   0x42a400
  40bc8d:	mov    rcx,rbx
  40bc90:	mov    edx,eax
  40bc92:	add    rsp,0x20
  40bc96:	pop    rbx
  40bc97:	jmp    0x40bbf0
  40bc9c:	nop    DWORD PTR [rax+0x0]
  40bca0:	mov    eax,DWORD PTR [rip+0x2036a]        # 0x42c010
  40bca6:	ret    
  40bca7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcb0:	mov    rax,QWORD PTR [rip+0x4e419]        # 0x45a0d0
  40bcb7:	ret    
  40bcb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcc0:	mov    rax,QWORD PTR [rip+0x4e401]        # 0x45a0c8
  40bcc7:	ret    
  40bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcd0:	mov    eax,DWORD PTR [rip+0x4f372]        # 0x45b048
  40bcd6:	ret    
  40bcd7:	nop    WORD PTR [rax+rax*1+0x0]
  40bce0:	mov    rax,QWORD PTR [rip+0x4f359]        # 0x45b040
  40bce7:	ret    
  40bce8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcf0:	mov    DWORD PTR [rip+0x2031a],ecx        # 0x42c010
  40bcf6:	ret    
  40bcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40bd00:	mov    QWORD PTR [rip+0x4e3c9],rcx        # 0x45a0d0
  40bd07:	ret    
  40bd08:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd10:	mov    QWORD PTR [rip+0x4e3b1],rcx        # 0x45a0c8
  40bd17:	ret    
  40bd18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd20:	mov    eax,DWORD PTR [rip+0x4e39a]        # 0x45a0c0
  40bd26:	ret    
  40bd27:	nop    WORD PTR [rax+rax*1+0x0]
  40bd30:	mov    DWORD PTR [rip+0x4e38a],ecx        # 0x45a0c0
  40bd36:	ret    
  40bd37:	nop    WORD PTR [rax+rax*1+0x0]
  40bd40:	push   rsi
  40bd41:	push   rbx
  40bd42:	sub    rsp,0x28
  40bd46:	mov    rsi,QWORD PTR [rip+0x4e3d3]        # 0x45a120
  40bd4d:	test   rsi,rsi
  40bd50:	jne    0x40bd65
  40bd52:	jmp    0x40bd78
  40bd54:	call   0x409320
  40bd59:	mov    QWORD PTR [rbx],0x0
  40bd60:	call   0x409660
  40bd65:	mov    rax,QWORD PTR [rip+0x4e3c4]        # 0x45a130
  40bd6c:	lea    rbx,[rsi+rax*8]
  40bd70:	mov    rcx,QWORD PTR [rbx]
  40bd73:	test   rcx,rcx
  40bd76:	jne    0x40bd54
  40bd78:	mov    rcx,rsi
  40bd7b:	call   0x42a4e8
  40bd80:	xor    eax,eax
  40bd82:	mov    QWORD PTR [rip+0x4e393],0x0        # 0x45a120
  40bd8d:	mov    QWORD PTR [rip+0x4e398],0x0        # 0x45a130
  40bd98:	mov    QWORD PTR [rip+0x4e385],0x0        # 0x45a128
  40bda3:	mov    QWORD PTR [rip+0x4e362],0x0        # 0x45a110
  40bdae:	mov    DWORD PTR [rip+0x4e350],0x0        # 0x45a108
  40bdb8:	mov    DWORD PTR [rip+0x4e342],0x0        # 0x45a104
  40bdc2:	mov    QWORD PTR [rip+0x4e303],0x0        # 0x45a0d0
  40bdcd:	mov    QWORD PTR [rip+0x4e2f0],0x0        # 0x45a0c8
  40bdd8:	add    rsp,0x28
  40bddc:	pop    rbx
  40bddd:	pop    rsi
  40bdde:	ret    
  40bddf:	nop
  40bde0:	jmp    0x42a4a0
  40bde5:	nop
  40bde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bdf0:	jmp    0x42a460
  40bdf5:	nop
  40bdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be00:	jmp    0x42a4e8
  40be05:	nop
  40be06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be10:	push   rbx
  40be11:	sub    rsp,0x20
  40be15:	mov    ecx,0x50
  40be1a:	call   0x424840
  40be1f:	mov    rcx,QWORD PTR [rax+0x48]
  40be23:	mov    rbx,rax
  40be26:	mov    DWORD PTR [rax+0x38],0x0
  40be2d:	mov    DWORD PTR [rax+0x3c],0x0
  40be34:	mov    DWORD PTR [rax+0x40],0x0
  40be3b:	test   rcx,rcx
  40be3e:	je     0x40be45
  40be40:	call   0x42a4e8
  40be45:	mov    rax,rbx
  40be48:	mov    QWORD PTR [rbx+0x48],0x0
  40be50:	add    rsp,0x20
  40be54:	pop    rbx
  40be55:	ret    
  40be56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be60:	push   rdi
  40be61:	push   rsi
  40be62:	push   rbx
  40be63:	sub    rsp,0x20
  40be67:	mov    rax,QWORD PTR [rip+0x48a72]        # 0x4548e0
  40be6e:	mov    rbx,rcx
  40be71:	mov    rsi,rdx
  40be74:	mov    edi,r8d
  40be77:	mov    ecx,DWORD PTR [rax+0x8]
  40be7a:	mov    DWORD PTR [rbx+0x20],ecx
  40be7d:	call   0x427d78
  40be82:	lea    r8,[rbx+0x10]
  40be86:	mov    BYTE PTR [rbx+0x24],al
  40be89:	mov    edx,edi
  40be8b:	mov    rcx,rsi
  40be8e:	mov    QWORD PTR [rip+0x4e263],rbx        # 0x45a0f8
  40be95:	call   0x409760
  40be9a:	mov    QWORD PTR [rbx+0x8],rax
  40be9e:	mov    rax,QWORD PTR [rbx+0x10]
  40bea2:	mov    QWORD PTR [rbx+0x18],rsi
  40bea6:	mov    QWORD PTR [rbx+0x30],rsi
  40beaa:	mov    QWORD PTR [rbx+0x28],rax
  40beae:	add    rsp,0x20
  40beb2:	pop    rbx
  40beb3:	pop    rsi
  40beb4:	pop    rdi
  40beb5:	ret    
  40beb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bec0:	push   rdi
  40bec1:	push   rsi
  40bec2:	push   rbx
  40bec3:	sub    rsp,0x20
  40bec7:	mov    rax,QWORD PTR [rcx]
  40beca:	mov    rbx,rcx
  40becd:	mov    rsi,rdx
  40bed0:	mov    rdi,r8
  40bed3:	mov    QWORD PTR [rip+0x4e21e],rcx        # 0x45a0f8
  40beda:	mov    QWORD PTR [rip+0x4e20f],rdx        # 0x45a0f0
  40bee1:	test   rax,rax
  40bee4:	je     0x40bfb0
  40beea:	mov    rcx,QWORD PTR [rax]
  40beed:	call   0x409290
  40bef2:	mov    eax,DWORD PTR [rbx+0x38]
  40bef5:	lea    eax,[rax+rax*1+0x1]
  40bef9:	mov    DWORD PTR [rip+0x4e205],eax        # 0x45a104
  40beff:	call   0x409840
  40bf04:	mov    ecx,DWORD PTR [rip+0x4e1fa]        # 0x45a104
  40bf0a:	lea    r9d,[rcx-0x1]
  40bf0e:	mov    edx,r9d
  40bf11:	shr    edx,0x1f
  40bf14:	add    r9d,edx
  40bf17:	sar    r9d,1
  40bf1a:	cmp    eax,0x1
  40bf1d:	mov    DWORD PTR [rbx+0x38],r9d
  40bf21:	je     0x40bf83
  40bf23:	cmp    eax,0x2
  40bf26:	je     0x40bf70
  40bf28:	test   eax,eax
  40bf2a:	je     0x40bf50
  40bf2c:	call   QWORD PTR [rip+0x50c82]        # 0x45cbb4
  40bf32:	lea    rdx,[rip+0x28738]        # 0x434671
  40bf39:	lea    rcx,[rax+0x60]
  40bf3d:	call   0x426370
  40bf42:	mov    ecx,0x1
  40bf47:	call   0x42a540
  40bf4c:	nop    DWORD PTR [rax+0x0]
  40bf50:	cmp    r9d,0xb
  40bf54:	ja     0x40c010
  40bf5a:	lea    rax,[rip+0x28727]        # 0x434688
  40bf61:	movsxd rdx,DWORD PTR [rax+r9*4]
  40bf65:	add    rax,rdx
  40bf68:	jmp    rax
  40bf6a:	nop    WORD PTR [rax+rax*1+0x0]
  40bf70:	mov    DWORD PTR [rdi],0x0
  40bf76:	mov    eax,0x1
  40bf7b:	add    rsp,0x20
  40bf7f:	pop    rbx
  40bf80:	pop    rsi
  40bf81:	pop    rdi
  40bf82:	ret    
  40bf83:	xor    eax,eax
  40bf85:	mov    DWORD PTR [rdi],0x0
  40bf8b:	add    rsp,0x20
  40bf8f:	pop    rbx
  40bf90:	pop    rsi
  40bf91:	pop    rdi
  40bf92:	ret    
  40bf93:	mov    eax,0x2
  40bf98:	mov    DWORD PTR [rdi],0x3
  40bf9e:	add    rsp,0x20
  40bfa2:	pop    rbx
  40bfa3:	pop    rsi
  40bfa4:	pop    rdi
  40bfa5:	ret    
  40bfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfb0:	mov    rcx,QWORD PTR [rcx+0x8]
  40bfb4:	call   0x409290
  40bfb9:	jmp    0x40bef2
  40bfbe:	xchg   ax,ax
  40bfc0:	mov    DWORD PTR [rdi],0x4
  40bfc6:	mov    eax,0x2
  40bfcb:	jmp    0x40bf7b
  40bfcd:	nop    DWORD PTR [rax]
  40bfd0:	mov    DWORD PTR [rdi],0x2
  40bfd6:	mov    eax,0x2
  40bfdb:	jmp    0x40bf7b
  40bfdd:	nop    DWORD PTR [rax]
  40bfe0:	mov    DWORD PTR [rdi],0x5
  40bfe6:	mov    eax,0x2
  40bfeb:	jmp    0x40bf7b
  40bfed:	nop    DWORD PTR [rax]
  40bff0:	mov    eax,DWORD PTR [rbx+0x3c]
  40bff3:	test   eax,eax
  40bff5:	jle    0x40c030
  40bff7:	mov    DWORD PTR [rdi],0x6
  40bffd:	mov    eax,0x2
  40c002:	jmp    0x40bf7b
  40c007:	nop    WORD PTR [rax+rax*1+0x0]
  40c010:	call   QWORD PTR [rip+0x50b9e]        # 0x45cbb4
  40c016:	lea    rdx,[rip+0x28642]        # 0x43465f
  40c01d:	lea    rcx,[rax+0x60]
  40c021:	call   0x426370
  40c026:	mov    ecx,0x1
  40c02b:	call   0x42a540
  40c030:	cmp    QWORD PTR [rsi+0x8],0x0
  40c035:	je     0x40c047
  40c037:	mov    DWORD PTR [rdi],0x1
  40c03d:	mov    eax,0x3
  40c042:	jmp    0x40bf7b
  40c047:	mov    DWORD PTR [rdi],0x0
  40c04d:	mov    eax,0x2
  40c052:	jmp    0x40bf7b
  40c057:	nop    WORD PTR [rax+rax*1+0x0]
  40c060:	push   rbx
  40c061:	sub    rsp,0x20
  40c065:	cmp    QWORD PTR [rcx],0x0
  40c069:	mov    rbx,rcx
  40c06c:	je     0x40c07e
  40c06e:	xchg   ax,ax
  40c070:	mov    rcx,rbx
  40c073:	call   0x4093a0
  40c078:	cmp    QWORD PTR [rbx],0x0
  40c07c:	jne    0x40c070
  40c07e:	mov    rcx,QWORD PTR [rbx+0x8]
  40c082:	test   rcx,rcx
  40c085:	je     0x40c08c
  40c087:	call   0x409320
  40c08c:	mov    rcx,QWORD PTR [rbx+0x10]
  40c090:	mov    QWORD PTR [rbx+0x8],0x0
  40c098:	test   rcx,rcx
  40c09b:	je     0x40c0a2
  40c09d:	call   0x42a4e8
  40c0a2:	mov    QWORD PTR [rbx+0x10],0x0
  40c0aa:	add    rsp,0x20
  40c0ae:	pop    rbx
  40c0af:	ret    
  40c0b0:	push   rbx
  40c0b1:	sub    rsp,0x20
  40c0b5:	mov    rbx,rcx
  40c0b8:	call   0x40c060
  40c0bd:	mov    rcx,QWORD PTR [rbx+0x48]
  40c0c1:	mov    DWORD PTR [rbx+0x38],0x0
  40c0c8:	mov    DWORD PTR [rbx+0x3c],0x0
  40c0cf:	mov    DWORD PTR [rbx+0x40],0x0
  40c0d6:	test   rcx,rcx
  40c0d9:	je     0x40c0e0
  40c0db:	call   0x42a4e8
  40c0e0:	mov    rcx,rbx
  40c0e3:	add    rsp,0x20
  40c0e7:	pop    rbx
  40c0e8:	jmp    0x42a4e8
  40c0ed:	nop    DWORD PTR [rax]
  40c0f0:	push   rbp
  40c0f1:	push   r15
  40c0f3:	push   r14
  40c0f5:	push   r13
  40c0f7:	push   r12
  40c0f9:	push   rdi
  40c0fa:	push   rsi
  40c0fb:	push   rbx
  40c0fc:	mov    rbp,rsp
  40c0ff:	sub    rsp,0xc8
  40c106:	mov    rbx,QWORD PTR [rip+0x487d3]        # 0x4548e0
  40c10d:	mov    DWORD PTR [rbp-0x2c],0x0
  40c114:	mov    QWORD PTR [rbp+0x48],rcx
  40c118:	mov    DWORD PTR [rbp-0x28],0x0
  40c11f:	mov    DWORD PTR [rbp-0x24],0x0
  40c126:	mov    rax,QWORD PTR [rbx+0xd8]
  40c12d:	mov    DWORD PTR [rbp-0x20],0x0
  40c134:	mov    QWORD PTR [rbx+0xd8],rcx
  40c13b:	mov    BYTE PTR [rbp-0x2d],0x0
  40c13f:	mov    QWORD PTR [rbp-0x50],rax
  40c143:	movzx  eax,BYTE PTR [rbx+0xe0]
  40c14a:	mov    BYTE PTR [rbp-0x51],al
  40c14d:	mov    rax,QWORD PTR [rbx+0xf8]
  40c154:	mov    QWORD PTR [rbp-0x60],rax
  40c158:	call   QWORD PTR [rip+0x50a56]        # 0x45cbb4
  40c15e:	xor    edx,edx
  40c160:	cmp    QWORD PTR [rbp+0x48],rax
  40c164:	je     0x40c550
  40c16a:	mov    rbx,QWORD PTR [rip+0x4876f]        # 0x4548e0
  40c171:	mov    BYTE PTR [rbx+0xe0],dl
  40c177:	mov    QWORD PTR [rbx+0xf8],0x0
  40c182:	call   0x40be10
  40c187:	mov    QWORD PTR [rbp-0x40],rax
  40c18b:	call   0x427dc0
  40c190:	mov    QWORD PTR [rbp-0x18],rax
  40c194:	call   0x427dc0
  40c199:	mov    QWORD PTR [rbp-0x10],rax
  40c19d:	call   0x427dc0
  40c1a2:	mov    rsi,rax
  40c1a5:	mov    QWORD PTR [rbp-0x48],rax
  40c1a9:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ad:	test   rax,rax
  40c1b0:	je     0x40c729
  40c1b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ba:	cmp    QWORD PTR [rax+0x10],0x0
  40c1bf:	je     0x40c729
  40c1c5:	mov    rax,QWORD PTR [rbp-0x10]
  40c1c9:	test   rax,rax
  40c1cc:	je     0x40c729
  40c1d2:	test   rsi,rsi
  40c1d5:	mov    rax,QWORD PTR [rbp-0x10]
  40c1d9:	je     0x40c729
  40c1df:	cmp    QWORD PTR [rax+0x10],0x0
  40c1e4:	je     0x40c729
  40c1ea:	cmp    QWORD PTR [rsi+0x10],0x0
  40c1ef:	je     0x40c729
  40c1f5:	mov    rdi,QWORD PTR [rip+0x48614]        # 0x454810
  40c1fc:	mov    rax,QWORD PTR [rip+0x509b1]        # 0x45cbb4
  40c203:	mov    QWORD PTR [rbp-0x68],rbx
  40c207:	mov    QWORD PTR [rbp-0x78],rbx
  40c20b:	mov    QWORD PTR [rbp-0x70],rdi
  40c20f:	mov    QWORD PTR [rbp-0x80],rax
  40c213:	mov    eax,DWORD PTR [rbp-0x2c]
  40c216:	test   eax,eax
  40c218:	jne    0x40c244
  40c21a:	mov    rax,QWORD PTR [rip+0x485ef]        # 0x454810
  40c221:	movzx  eax,BYTE PTR [rax]
  40c224:	test   al,al
  40c226:	je     0x40c30a
  40c22c:	mov    rax,QWORD PTR [rbp-0x68]
  40c230:	cmp    BYTE PTR [rax+0xe0],0x0
  40c237:	jne    0x40c300
  40c23d:	mov    DWORD PTR [rbp-0x2c],0x3
  40c244:	mov    rax,QWORD PTR [rbp-0x18]
  40c248:	cmp    QWORD PTR [rax+0x8],0x0
  40c24d:	je     0x40c290
  40c24f:	mov    rax,QWORD PTR [rip+0x4868a]        # 0x4548e0
  40c256:	cmp    BYTE PTR [rax+0xe0],0x0
  40c25d:	jne    0x40c290
  40c25f:	mov    eax,DWORD PTR [rbp-0x2c]
  40c262:	test   eax,eax
  40c264:	jne    0x40c290
  40c266:	mov    rax,QWORD PTR [rbp-0x18]
  40c26a:	mov    rcx,QWORD PTR [rax]
  40c26d:	call   0x406410
  40c272:	test   al,al
  40c274:	jne    0x40c530
  40c27a:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c27e:	test   al,al
  40c280:	je     0x40c530
  40c286:	mov    DWORD PTR [rbp-0x2c],0x3
  40c28d:	nop    DWORD PTR [rax]
  40c290:	mov    rax,QWORD PTR [rip+0x48659]        # 0x4548f0
  40c297:	mov    BYTE PTR [rax],0x0
  40c29a:	mov    rcx,QWORD PTR [rbp-0x18]
  40c29e:	call   0x427db8
  40c2a3:	mov    rcx,QWORD PTR [rbp-0x10]
  40c2a7:	call   0x427db8
  40c2ac:	mov    rcx,QWORD PTR [rbp-0x48]
  40c2b0:	call   0x427db8
  40c2b5:	mov    rcx,QWORD PTR [rbp-0x40]
  40c2b9:	call   0x40c0b0
  40c2be:	mov    rax,QWORD PTR [rip+0x4861b]        # 0x4548e0
  40c2c5:	mov    rdi,QWORD PTR [rbp-0x50]
  40c2c9:	movzx  edx,BYTE PTR [rbp-0x51]
  40c2cd:	mov    QWORD PTR [rax+0xd8],rdi
  40c2d4:	mov    rdi,QWORD PTR [rbp-0x60]
  40c2d8:	mov    BYTE PTR [rax+0xe0],dl
  40c2de:	mov    QWORD PTR [rax+0xf8],rdi
  40c2e5:	mov    eax,DWORD PTR [rbp-0x2c]
  40c2e8:	add    rsp,0xc8
  40c2ef:	pop    rbx
  40c2f0:	pop    rsi
  40c2f1:	pop    rdi
  40c2f2:	pop    r12
  40c2f4:	pop    r13
  40c2f6:	pop    r14
  40c2f8:	pop    r15
  40c2fa:	pop    rbp
  40c2fb:	ret    
  40c2fc:	nop    DWORD PTR [rax+0x0]
  40c300:	mov    rax,QWORD PTR [rip+0x48509]        # 0x454810
  40c307:	mov    BYTE PTR [rax],0x0
  40c30a:	mov    rcx,QWORD PTR [rip+0x485ef]        # 0x454900
  40c311:	mov    rdx,rbp
  40c314:	call   0x42a588
  40c319:	test   eax,eax
  40c31b:	jne    0x40c560
  40c321:	mov    rax,QWORD PTR [rbp-0x80]
  40c325:	call   rax
  40c327:	lea    rcx,[rax+0x30]
  40c32b:	call   0x42a520
  40c330:	mov    rax,QWORD PTR [rip+0x485a9]        # 0x4548e0
  40c337:	cmp    BYTE PTR [rax+0xe0],0x0
  40c33e:	je     0x40c803
  40c344:	mov    rax,QWORD PTR [rbp-0x18]
  40c348:	cmp    QWORD PTR [rax+0x8],0x0
  40c34d:	jne    0x40c356
  40c34f:	mov    DWORD PTR [rbp-0x24],0x0
  40c356:	mov    ecx,DWORD PTR [rbp-0x24]
  40c359:	call   0x40e4d0
  40c35e:	mov    rcx,rax
  40c361:	call   0x408780
  40c366:	test   rax,rax
  40c369:	mov    r13,rax
  40c36c:	je     0x40c82c
  40c372:	mov    rdx,QWORD PTR [rip+0x48567]        # 0x4548e0
  40c379:	mov    DWORD PTR [rbp-0x20],0x0
  40c380:	mov    rax,QWORD PTR [rdx+0xf8]
  40c387:	add    rax,0x1
  40c38b:	cmp    rax,0x1
  40c38f:	mov    QWORD PTR [rdx+0xf8],rax
  40c396:	je     0x40c854
  40c39c:	cmp    BYTE PTR [r13+0x0],0x0
  40c3a1:	jne    0x40c3b2
  40c3a3:	mov    rax,QWORD PTR [rbp-0x40]
  40c3a7:	mov    eax,DWORD PTR [rax+0x38]
  40c3aa:	test   eax,eax
  40c3ac:	je     0x40c9d7
  40c3b2:	mov    rax,QWORD PTR [rip+0x48527]        # 0x4548e0
  40c3b9:	cmp    BYTE PTR [rax+0xe0],0x0
  40c3c0:	je     0x40c73f
  40c3c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c3ca:	cmp    QWORD PTR [rax+0x8],0x0
  40c3cf:	je     0x40c94a
  40c3d5:	call   QWORD PTR [rip+0x507d9]        # 0x45cbb4
  40c3db:	lea    rcx,[rax+0x30]
  40c3df:	mov    rsi,0xffffffffffffffff
  40c3e6:	call   0x42a520
  40c3eb:	mov    rax,QWORD PTR [rbp-0x18]
  40c3ef:	cmp    QWORD PTR [rax+0x8],0x0
  40c3f4:	je     0x40c40c
  40c3f6:	mov    rcx,QWORD PTR [rbp-0x18]
  40c3fa:	mov    edx,0xa
  40c3ff:	call   0x427dd0
  40c404:	mov    rax,QWORD PTR [rbp-0x18]
  40c408:	movsxd rsi,DWORD PTR [rax+0x8]
  40c40c:	mov    r14,QWORD PTR [rip+0x484cd]        # 0x4548e0
  40c413:	mov    rcx,r13
  40c416:	lea    r12,[rbp-0x1c]
  40c41a:	xor    edi,edi
  40c41c:	mov    ebx,0x1
  40c421:	movzx  eax,BYTE PTR [r14+0x119]
  40c429:	mov    BYTE PTR [rbp-0x2d],al
  40c42c:	call   0x42a400
  40c431:	mov    rcx,QWORD PTR [rbp-0x40]
  40c435:	mov    r8d,eax
  40c438:	mov    rdx,r13
  40c43b:	call   0x40be60
  40c440:	mov    QWORD PTR [rbp-0x90],r14
  40c447:	mov    QWORD PTR [rbp-0x88],r14
  40c44e:	xchg   ax,ax
  40c450:	mov    eax,DWORD PTR [rbp-0x24]
  40c453:	mov    rcx,QWORD PTR [rbp-0x40]
  40c457:	mov    r8,r12
  40c45a:	mov    rdx,QWORD PTR [rbp-0x18]
  40c45e:	mov    DWORD PTR [rbp-0x1c],eax
  40c461:	call   0x40bec0
  40c466:	mov    r15d,eax
  40c469:	mov    eax,DWORD PTR [rbp-0x1c]
  40c46c:	mov    DWORD PTR [rbp-0x24],eax
  40c46f:	mov    rax,QWORD PTR [rbp-0x18]
  40c473:	test   rax,rax
  40c476:	je     0x40c729
  40c47c:	mov    rax,QWORD PTR [rbp-0x18]
  40c480:	cmp    QWORD PTR [rax+0x10],0x0
  40c485:	je     0x40c729
  40c48b:	test   r15d,r15d
  40c48e:	je     0x40c610
  40c494:	cmp    r15d,0x3
  40c498:	je     0x40c5f3
  40c49e:	cmp    r15d,0x1
  40c4a2:	je     0x40c67b
  40c4a8:	sub    r15d,0x2
  40c4ac:	cmp    r15d,0x1
  40c4b0:	jbe    0x40c4be
  40c4b2:	test   bl,bl
  40c4b4:	jne    0x40c450
  40c4b6:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c4ba:	test   al,al
  40c4bc:	je     0x40c450
  40c4be:	test   dil,dil
  40c4c1:	jne    0x40c4df
  40c4c3:	mov    rax,QWORD PTR [rip+0x48416]        # 0x4548e0
  40c4ca:	cmp    BYTE PTR [rax+0xe0],0x0
  40c4d1:	je     0x40c4df
  40c4d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4d7:	mov    rcx,r13
  40c4da:	call   0x408630
  40c4df:	mov    rcx,QWORD PTR [rbp-0x40]
  40c4e3:	call   0x40c060
  40c4e8:	mov    rcx,r13
  40c4eb:	call   0x42a4e8
  40c4f0:	mov    eax,DWORD PTR [rbp-0x28]
  40c4f3:	cmp    eax,0x3
  40c4f6:	je     0x40c93e
  40c4fc:	mov    rax,QWORD PTR [rip+0x483dd]        # 0x4548e0
  40c503:	cmp    BYTE PTR [rax+0xe0],0x0
  40c50a:	jne    0x40c213
  40c510:	test   bl,bl
  40c512:	jne    0x40c921
  40c518:	movzx  eax,BYTE PTR [rbp-0x2d]
  40c51c:	test   al,al
  40c51e:	je     0x40c921
  40c524:	mov    DWORD PTR [rbp-0x2c],0x3
  40c52b:	jmp    0x40c213
  40c530:	mov    rax,QWORD PTR [rip+0x483a9]        # 0x4548e0
  40c537:	cmp    QWORD PTR [rax],0x0
  40c53b:	jne    0x40c290
  40c541:	mov    DWORD PTR [rbp-0x2c],0x2
  40c548:	jmp    0x40c290
  40c54d:	nop    DWORD PTR [rax]
  40c550:	cmp    BYTE PTR [rbx+0xd0],0x0
  40c557:	sete   dl
  40c55a:	jmp    0x40c16a
  40c55f:	nop
  40c560:	mov    rdi,QWORD PTR [rbp-0x40]
  40c564:	mov    rcx,rdi
  40c567:	call   0x40c060
  40c56c:	mov    rcx,QWORD PTR [rdi+0x48]
  40c570:	mov    DWORD PTR [rdi+0x38],0x0
  40c577:	mov    DWORD PTR [rdi+0x3c],0x0
  40c57e:	mov    DWORD PTR [rdi+0x40],0x0
  40c585:	test   rcx,rcx
  40c588:	je     0x40c58f
  40c58a:	call   0x42a4e8
  40c58f:	mov    rax,QWORD PTR [rbp-0x40]
  40c593:	mov    rcx,QWORD PTR [rbp-0x18]
  40c597:	mov    QWORD PTR [rax+0x48],0x0
  40c59f:	call   0x427d68
  40c5a4:	mov    rcx,QWORD PTR [rbp-0x48]
  40c5a8:	call   0x427d68
  40c5ad:	mov    rax,QWORD PTR [rbp-0x70]
  40c5b1:	mov    DWORD PTR [rbp-0x20],0x0
  40c5b8:	mov    DWORD PTR [rbp-0x28],0x0
  40c5bf:	mov    DWORD PTR [rbp-0x24],0x0
  40c5c6:	mov    BYTE PTR [rax],0x0
  40c5c9:	mov    rax,QWORD PTR [rbp-0x78]
  40c5cd:	cmp    BYTE PTR [rax+0xe0],0x0
  40c5d4:	je     0x40c23d
  40c5da:	call   QWORD PTR [rip+0x505d4]        # 0x45cbb4
  40c5e0:	lea    rdx,[rax+0x30]
  40c5e4:	mov    ecx,0xa
  40c5e9:	call   0x42a478
  40c5ee:	jmp    0x40c321
  40c5f3:	mov    rax,QWORD PTR [rbp-0x88]
  40c5fa:	cmp    BYTE PTR [rax+0x11b],0x0
  40c601:	je     0x40c4be
  40c607:	nop    WORD PTR [rax+rax*1+0x0]
  40c610:	test   dil,dil
  40c613:	jne    0x40c63b
  40c615:	cmp    BYTE PTR [r14+0xe0],0x0
  40c61d:	je     0x40c63b
  40c61f:	mov    rdi,QWORD PTR [rbp-0x48]
  40c623:	mov    rcx,r13
  40c626:	mov    rdx,rdi
  40c629:	call   0x408630
  40c62e:	mov    rcx,rdi
  40c631:	mov    edi,0x1
  40c636:	call   0x408640
  40c63b:	mov    rax,QWORD PTR [rbp-0x18]
  40c63f:	mov    rsi,0xffffffffffffffff
  40c646:	mov    rcx,QWORD PTR [rax]
  40c649:	call   0x406410
  40c64e:	cmp    al,0x1
  40c650:	mov    ebx,eax
  40c652:	sbb    eax,eax
  40c654:	and    eax,0x4
  40c657:	add    eax,0x1
  40c65a:	mov    DWORD PTR [rbp-0x28],eax
  40c65d:	mov    rax,QWORD PTR [rbp-0x10]
  40c661:	mov    rdx,QWORD PTR [rbp-0x18]
  40c665:	mov    QWORD PTR [rbp-0x10],rdx
  40c669:	mov    QWORD PTR [rbp-0x18],rax
  40c66d:	mov    rcx,QWORD PTR [rbp-0x18]
  40c671:	call   0x427d68
  40c676:	jmp    0x40c4a8
  40c67b:	mov    rax,QWORD PTR [rbp-0x18]
  40c67f:	cmp    QWORD PTR [rax+0x8],rsi
  40c683:	je     0x40c7d9
  40c689:	test   dil,dil
  40c68c:	jne    0x40c6a2
  40c68e:	mov    rax,QWORD PTR [rbp-0x90]
  40c695:	cmp    BYTE PTR [rax+0xe0],0x0
  40c69c:	jne    0x40c759
  40c6a2:	mov    rax,QWORD PTR [rbp-0x18]
  40c6a6:	cmp    QWORD PTR [rax+0x8],0x0
  40c6ab:	je     0x40c706
  40c6ad:	mov    rdx,QWORD PTR [rbp-0x18]
  40c6b1:	mov    rcx,QWORD PTR [rbp-0x40]
  40c6b5:	call   0x402d60
  40c6ba:	mov    DWORD PTR [rbp-0x28],eax
  40c6bd:	mov    eax,DWORD PTR [rbp-0x28]
  40c6c0:	cmp    eax,0x5
  40c6c3:	mov    eax,DWORD PTR [rbp-0x28]
  40c6c6:	setne  bl
  40c6c9:	cmp    eax,0x1
  40c6cc:	je     0x40c70c
  40c6ce:	mov    eax,DWORD PTR [rbp-0x28]
  40c6d1:	cmp    eax,0x4
  40c6d4:	je     0x40c70c
  40c6d6:	mov    eax,DWORD PTR [rbp-0x28]
  40c6d9:	cmp    eax,0x1
  40c6dc:	je     0x40c77a
  40c6e2:	mov    eax,DWORD PTR [rbp-0x28]
  40c6e5:	cmp    eax,0x4
  40c6e8:	je     0x40c89b
  40c6ee:	mov    eax,DWORD PTR [rbp-0x28]
  40c6f1:	cmp    eax,0x3
  40c6f4:	je     0x40c4be
  40c6fa:	mov    rsi,0xffffffffffffffff
  40c701:	jmp    0x40c4b2
  40c706:	mov    rdx,QWORD PTR [rbp-0x10]
  40c70a:	jmp    0x40c6b1
  40c70c:	mov    rax,QWORD PTR [rbp-0x18]
  40c710:	cmp    QWORD PTR [rax+0x8],0x0
  40c715:	jne    0x40c6d6
  40c717:	mov    rax,QWORD PTR [rbp-0x10]
  40c71b:	mov    rcx,QWORD PTR [rbp-0x18]
  40c71f:	mov    rdx,QWORD PTR [rax]
  40c722:	call   0x427dc8
  40c727:	jmp    0x40c6d6
  40c729:	lea    rcx,[rip+0x27f8c]        # 0x4346bc
  40c730:	call   0x405d90
  40c735:	mov    ecx,0x1
  40c73a:	call   0x42a540
  40c73f:	cmp    DWORD PTR [rax+0x124],0x2
  40c746:	jne    0x40c3d5
  40c74c:	mov    rcx,r13
  40c74f:	call   0x42a468
  40c754:	jmp    0x40c3d5
  40c759:	mov    rdi,QWORD PTR [rbp-0x48]
  40c75d:	mov    rcx,r13
  40c760:	mov    rdx,rdi
  40c763:	call   0x408630
  40c768:	mov    rcx,rdi
  40c76b:	mov    edi,0x1
  40c770:	call   0x408640
  40c775:	jmp    0x40c6a2
  40c77a:	mov    rax,QWORD PTR [rbp-0x18]
  40c77e:	mov    rcx,QWORD PTR [rax]
  40c781:	call   0x406410
  40c786:	mov    ebx,eax
  40c788:	mov    rax,QWORD PTR [rbp-0x10]
  40c78c:	mov    rdx,QWORD PTR [rbp-0x18]
  40c790:	mov    QWORD PTR [rbp-0x10],rdx
  40c794:	mov    QWORD PTR [rbp-0x18],rax
  40c798:	mov    rcx,QWORD PTR [rbp-0x18]
  40c79c:	call   0x427d68
  40c7a1:	mov    rax,QWORD PTR [rbp-0x40]
  40c7a5:	mov    rcx,QWORD PTR [rax+0x48]
  40c7a9:	mov    DWORD PTR [rax+0x38],0x0
  40c7b0:	mov    DWORD PTR [rax+0x3c],0x0
  40c7b7:	mov    DWORD PTR [rax+0x40],0x0
  40c7be:	test   rcx,rcx
  40c7c1:	je     0x40c7c8
  40c7c3:	call   0x42a4e8
  40c7c8:	mov    rax,QWORD PTR [rbp-0x40]
  40c7cc:	mov    QWORD PTR [rax+0x48],0x0
  40c7d4:	jmp    0x40c6fa
  40c7d9:	mov    rax,QWORD PTR [rbp-0x18]
  40c7dd:	mov    rdx,QWORD PTR [rbp-0x18]
  40c7e1:	mov    rcx,QWORD PTR [rax]
  40c7e4:	mov    rax,QWORD PTR [rdx+0x8]
  40c7e8:	lea    r8,[rax-0x1]
  40c7ec:	mov    QWORD PTR [rdx+0x8],r8
  40c7f0:	mov    BYTE PTR [rcx+rax*1-0x1],0x0
  40c7f5:	mov    rcx,QWORD PTR [rbp-0x48]
  40c7f9:	call   0x408640
  40c7fe:	jmp    0x40c689
  40c803:	mov    rcx,QWORD PTR [rbp+0x48]
  40c807:	call   0x408650
  40c80c:	test   rax,rax
  40c80f:	mov    r13,rax
  40c812:	jne    0x40c372
  40c818:	mov    rcx,QWORD PTR [rbp+0x48]
  40c81c:	call   0x42a528
  40c821:	test   eax,eax
  40c823:	je     0x40c82c
  40c825:	mov    DWORD PTR [rbp-0x2c],0x1
  40c82c:	mov    rbx,QWORD PTR [rip+0x480ad]        # 0x4548e0
  40c833:	cmp    BYTE PTR [rbx+0xe0],0x0
  40c83a:	jne    0x40c9e4
  40c840:	mov    rax,QWORD PTR [rbp-0x18]
  40c844:	cmp    QWORD PTR [rax+0x8],0x0
  40c849:	jne    0x40c25f
  40c84f:	jmp    0x40c290
  40c854:	cmp    DWORD PTR [rdx+0x8],0x6
  40c858:	jne    0x40c39c
  40c85e:	lea    rdx,[rip+0x27e87]        # 0x4346ec
  40c865:	mov    r8d,0x3
  40c86b:	mov    rcx,r13
  40c86e:	call   0x42a3f8
  40c873:	test   eax,eax
  40c875:	jne    0x40c39c
  40c87b:	lea    rdx,[r13+0x3]
  40c87f:	or     rcx,0xffffffffffffffff
  40c883:	mov    rdi,rdx
  40c886:	repnz scas al,BYTE PTR es:[rdi]
  40c888:	not    rcx
  40c88b:	mov    r8,rcx
  40c88e:	mov    rcx,r13
  40c891:	call   0x42a488
  40c896:	jmp    0x40c39c
  40c89b:	mov    rdi,QWORD PTR [rbp-0x40]
  40c89f:	mov    rcx,rdi
  40c8a2:	call   0x40c060
  40c8a7:	mov    rcx,r13
  40c8aa:	call   0x42a4e8
  40c8af:	mov    rax,QWORD PTR [rbp-0x18]
  40c8b3:	mov    rcx,QWORD PTR [rax]
  40c8b6:	call   0x424900
  40c8bb:	mov    rcx,QWORD PTR [rbp-0x18]
  40c8bf:	mov    r13,rax
  40c8c2:	call   0x427d68
  40c8c7:	mov    rcx,QWORD PTR [rdi+0x48]
  40c8cb:	mov    DWORD PTR [rdi+0x38],0x0
  40c8d2:	mov    DWORD PTR [rdi+0x3c],0x0
  40c8d9:	mov    DWORD PTR [rdi+0x40],0x0
  40c8e0:	test   rcx,rcx
  40c8e3:	je     0x40c8ea
  40c8e5:	call   0x42a4e8
  40c8ea:	mov    rsi,QWORD PTR [rbp-0x40]
  40c8ee:	mov    rdi,r13
  40c8f1:	xor    eax,eax
  40c8f3:	or     rcx,0xffffffffffffffff
  40c8f7:	mov    rdx,r13
  40c8fa:	mov    QWORD PTR [rsi+0x48],0x0
  40c902:	repnz scas al,BYTE PTR es:[rdi]
  40c904:	xor    edi,edi
  40c906:	not    rcx
  40c909:	lea    r8d,[rcx-0x1]
  40c90d:	mov    rcx,rsi
  40c910:	call   0x40be60
  40c915:	mov    DWORD PTR [rbp-0x24],0x0
  40c91c:	jmp    0x40c6fa
  40c921:	mov    rax,QWORD PTR [rip+0x47fb8]        # 0x4548e0
  40c928:	cmp    QWORD PTR [rax],0x0
  40c92c:	jne    0x40c213
  40c932:	mov    DWORD PTR [rbp-0x2c],0x2
  40c939:	jmp    0x40c213
  40c93e:	mov    DWORD PTR [rbp-0x2c],0x0
  40c945:	jmp    0x40c244
  40c94a:	lea    rdx,[rip+0x27d9f]        # 0x4346f0
  40c951:	mov    r8d,0x4
  40c957:	mov    rcx,r13
  40c95a:	call   0x427870
  40c95f:	test   eax,eax
  40c961:	jne    0x40c9b1
  40c963:	movzx  eax,BYTE PTR [r13+0x4]
  40c968:	cmp    al,0x3b
  40c96a:	je     0x40c97d
  40c96c:	test   al,al
  40c96e:	je     0x40c97d
  40c970:	movzx  ecx,al
  40c973:	call   QWORD PTR [rip+0x50393]        # 0x45cd0c
  40c979:	test   eax,eax
  40c97b:	je     0x40c9b1
  40c97d:	mov    rcx,r13
  40c980:	call   0x42a4e8
  40c985:	lea    rcx,[rip+0x27d6c]        # 0x4346f8
  40c98c:	call   0x42a468
  40c991:	lea    rcx,[rip+0x27da0]        # 0x434738
  40c998:	call   0x4263a0
  40c99d:	call   QWORD PTR [rip+0x50211]        # 0x45cbb4
  40c9a3:	lea    rcx,[rax+0x30]
  40c9a7:	call   0x42a520
  40c9ac:	jmp    0x40c213
  40c9b1:	mov    rax,QWORD PTR [rip+0x47f28]        # 0x4548e0
  40c9b8:	cmp    DWORD PTR [rax+0x124],0x2
  40c9bf:	jne    0x40c3d5
  40c9c5:	cmp    BYTE PTR [rax+0xe0],0x0
  40c9cc:	jne    0x40c3d5
  40c9d2:	jmp    0x40c74c
  40c9d7:	mov    rcx,r13
  40c9da:	call   0x42a4e8
  40c9df:	jmp    0x40c213
  40c9e4:	mov    eax,DWORD PTR [rbp-0x20]
  40c9e7:	mov    rcx,QWORD PTR [rbx+0x110]
  40c9ee:	lea    rdx,[rip+0x27cd6]        # 0x4346cb
  40c9f5:	xor    r8d,r8d
  40c9f8:	mov    DWORD PTR [rsp+0x20],0x0
  40ca00:	mov    r9d,0xa
  40ca06:	add    eax,0x1
  40ca09:	mov    DWORD PTR [rbp-0x20],eax
  40ca0c:	call   0x40ece0
  40ca11:	mov    edx,DWORD PTR [rbp-0x20]
  40ca14:	cmp    eax,edx
  40ca16:	jle    0x40ca3d
  40ca18:	cmp    BYTE PTR [rbx+0x11a],0x0
  40ca1f:	jne    0x40c213
  40ca25:	mov    rdx,QWORD PTR [rbx+0xe8]
  40ca2c:	lea    rcx,[rip+0x27ca2]        # 0x4346d5
  40ca33:	call   0x4263a0
  40ca38:	jmp    0x40c213
  40ca3d:	cmp    BYTE PTR [rbx+0x11a],0x0
  40ca44:	lea    rcx,[rip+0x27c6e]        # 0x4346b9
  40ca4b:	lea    rax,[rip+0x27c66]        # 0x4346b8
  40ca52:	cmovne rcx,rax
  40ca56:	call   0x42a468
  40ca5b:	jmp    0x40c244
  40ca60:	push   rbx
  40ca61:	sub    rsp,0x20
  40ca65:	mov    rbx,rcx
  40ca68:	mov    DWORD PTR [rcx+0x38],0x0
  40ca6f:	mov    DWORD PTR [rcx+0x3c],0x0
  40ca76:	mov    DWORD PTR [rcx+0x40],0x0
  40ca7d:	mov    rcx,QWORD PTR [rcx+0x48]
  40ca81:	test   rcx,rcx
  40ca84:	je     0x40ca8b
  40ca86:	call   0x42a4e8
  40ca8b:	mov    QWORD PTR [rbx+0x48],0x0
  40ca93:	add    rsp,0x20
  40ca97:	pop    rbx
  40ca98:	ret    
  40ca99:	nop    DWORD PTR [rax+0x0]
  40caa0:	mov    eax,DWORD PTR [rcx+0x38]
  40caa3:	test   eax,eax
  40caa5:	setne  al
  40caa8:	ret    
  40caa9:	nop    DWORD PTR [rax+0x0]
  40cab0:	push   rsi
  40cab1:	push   rbx
  40cab2:	sub    rsp,0x48
  40cab6:	lea    rsi,[rsp+0x20]
  40cabb:	mov    rbx,rcx
  40cabe:	mov    rcx,rsi
  40cac1:	call   0x427da8
  40cac6:	mov    rax,QWORD PTR [rbx]
  40cac9:	mov    QWORD PTR [rip+0x4d628],rbx        # 0x45a0f8
  40cad0:	mov    QWORD PTR [rip+0x4d619],rsi        # 0x45a0f0
  40cad7:	test   rax,rax
  40cada:	je     0x40cb00
  40cadc:	mov    rcx,QWORD PTR [rax]
  40cadf:	call   0x409290
  40cae4:	mov    DWORD PTR [rip+0x4d616],0x19        # 0x45a104
  40caee:	call   0x409840
  40caf3:	mov    rax,QWORD PTR [rsp+0x20]
  40caf8:	add    rsp,0x48
  40cafc:	pop    rbx
  40cafd:	pop    rsi
  40cafe:	ret    
  40caff:	nop
  40cb00:	mov    rcx,QWORD PTR [rbx+0x8]
  40cb04:	call   0x409290
  40cb09:	jmp    0x40cae4
  40cb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb10:	push   r13
  40cb12:	push   r12
  40cb14:	push   rbp
  40cb15:	push   rdi
  40cb16:	push   rsi
  40cb17:	push   rbx
  40cb18:	sub    rsp,0x58
  40cb1c:	lea    rax,[rsp+0x2f]
  40cb21:	test   r8,r8
  40cb24:	mov    rbx,r8
  40cb27:	lea    rdi,[rsp+0x30]
  40cb2c:	mov    r12,rcx
  40cb2f:	mov    esi,edx
  40cb31:	cmove  rbx,rax
  40cb35:	mov    ebp,r9d
  40cb38:	mov    BYTE PTR [rbx],0x0
  40cb3b:	mov    rcx,rdi
  40cb3e:	call   0x427da8
  40cb43:	mov    rax,QWORD PTR [r12]
  40cb47:	mov    QWORD PTR [rip+0x4d5aa],r12        # 0x45a0f8
  40cb4e:	mov    QWORD PTR [rip+0x4d59b],rdi        # 0x45a0f0
  40cb55:	mov    DWORD PTR [rip+0x4d58d],esi        # 0x45a0e8
  40cb5b:	mov    QWORD PTR [rip+0x4d57e],rbx        # 0x45a0e0
  40cb62:	mov    DWORD PTR [rip+0x4d570],0x0        # 0x45a0dc
  40cb6c:	test   rax,rax
  40cb6f:	je     0x40cd60
  40cb75:	mov    rcx,QWORD PTR [rax]
  40cb78:	call   0x409290
  40cb7d:	cmp    esi,0x4
  40cb80:	mov    edx,0x25
  40cb85:	mov    eax,0x1b
  40cb8a:	cmove  eax,edx
  40cb8d:	mov    DWORD PTR [rip+0x4d571],eax        # 0x45a104
  40cb93:	call   0x409840
  40cb98:	mov    eax,DWORD PTR [rip+0x4d566]        # 0x45a104
  40cb9e:	sub    eax,0x1
  40cba1:	mov    edx,eax
  40cba3:	shr    edx,0x1f
  40cba6:	add    eax,edx
  40cba8:	sar    eax,1
  40cbaa:	sub    eax,0xd
  40cbad:	cmp    eax,0x5
  40cbb0:	ja     0x40ccb4
  40cbb6:	lea    rdx,[rip+0x27c57]        # 0x434814
  40cbbd:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cbc1:	add    rdx,rax
  40cbc4:	jmp    rdx
  40cbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbd0:	test   bpl,bpl
  40cbd3:	je     0x40cc48
  40cbd5:	mov    eax,DWORD PTR [rip+0x4d501]        # 0x45a0dc
  40cbdb:	lea    ecx,[rax-0x1]
  40cbde:	test   eax,eax
  40cbe0:	mov    DWORD PTR [rip+0x4d4f6],ecx        # 0x45a0dc
  40cbe6:	jle    0x40cc48
  40cbe8:	mov    rdx,QWORD PTR [rsp+0x38]
  40cbed:	test   rdx,rdx
  40cbf0:	je     0x40cc76
  40cbf6:	mov    rax,QWORD PTR [rsp+0x30]
  40cbfb:	sub    rdx,0x1
  40cbff:	lea    r8,[rax+rdx*1]
  40cc03:	cmp    BYTE PTR [r8],0x3b
  40cc07:	je     0x40cc31
  40cc09:	jmp    0x40cd76
  40cc0e:	xchg   ax,ax
  40cc10:	mov    rdx,QWORD PTR [rsp+0x38]
  40cc15:	test   rdx,rdx
  40cc18:	je     0x40cc70
  40cc1a:	mov    rax,QWORD PTR [rsp+0x30]
  40cc1f:	sub    rdx,0x1
  40cc23:	lea    r8,[rax+rdx*1]
  40cc27:	cmp    BYTE PTR [r8],0x3b
  40cc2b:	jne    0x40cd70
  40cc31:	sub    ecx,0x1
  40cc34:	mov    QWORD PTR [rsp+0x38],rdx
  40cc39:	mov    BYTE PTR [r8],0x0
  40cc3d:	cmp    ecx,0xffffffff
  40cc40:	jne    0x40cc10
  40cc42:	mov    DWORD PTR [rip+0x4d494],ecx        # 0x45a0dc
  40cc48:	lea    eax,[rsi-0x1]
  40cc4b:	cmp    eax,0x1
  40cc4e:	jbe    0x40ccd4
  40cc54:	cmp    QWORD PTR [rsp+0x38],0x0
  40cc5a:	je     0x40cc80
  40cc5c:	mov    rax,QWORD PTR [rsp+0x30]
  40cc61:	add    rsp,0x58
  40cc65:	pop    rbx
  40cc66:	pop    rsi
  40cc67:	pop    rdi
  40cc68:	pop    rbp
  40cc69:	pop    r12
  40cc6b:	pop    r13
  40cc6d:	ret    
  40cc6e:	xchg   ax,ax
  40cc70:	mov    DWORD PTR [rip+0x4d466],ecx        # 0x45a0dc
  40cc76:	lea    eax,[rsi-0x1]
  40cc79:	cmp    eax,0x1
  40cc7c:	jbe    0x40ccd4
  40cc7e:	xchg   ax,ax
  40cc80:	cmp    BYTE PTR [rbx],0x0
  40cc83:	jne    0x40cc5c
  40cc85:	mov    rcx,rdi
  40cc88:	call   0x427d60
  40cc8d:	xor    eax,eax
  40cc8f:	jmp    0x40cc61
  40cc91:	lea    rcx,[rip+0x27b5e]        # 0x4347f6
  40cc98:	call   0x405d90
  40cc9d:	mov    rcx,rdi
  40cca0:	call   0x427d60
  40cca5:	xor    eax,eax
  40cca7:	add    rsp,0x58
  40ccab:	pop    rbx
  40ccac:	pop    rsi
  40ccad:	pop    rdi
  40ccae:	pop    rbp
  40ccaf:	pop    r12
  40ccb1:	pop    r13
  40ccb3:	ret    
  40ccb4:	call   QWORD PTR [rip+0x4fefa]        # 0x45cbb4
  40ccba:	lea    rdx,[rip+0x2799e]        # 0x43465f
  40ccc1:	lea    rcx,[rax+0x60]
  40ccc5:	call   0x426370
  40ccca:	mov    ecx,0x1
  40cccf:	call   0x42a540
  40ccd4:	mov    rbp,QWORD PTR [rsp+0x30]
  40ccd9:	mov    r13,QWORD PTR [rip+0x47c00]        # 0x4548e0
  40cce0:	xor    r12d,r12d
  40cce3:	movzx  ecx,BYTE PTR [rbp+0x0]
  40cce7:	test   cl,cl
  40cce9:	je     0x40cc54
  40ccef:	cmp    cl,0x22
  40ccf2:	je     0x40cd28
  40ccf4:	test   r12b,r12b
  40ccf7:	jne    0x40cd06
  40ccf9:	cmp    esi,0x1
  40ccfc:	jne    0x40cd06
  40ccfe:	call   0x4279a0
  40cd03:	mov    BYTE PTR [rbp+0x0],al
  40cd06:	mov    edx,DWORD PTR [r13+0x8]
  40cd0a:	mov    rcx,rbp
  40cd0d:	call   0x427e88
  40cd12:	cdqe   
  40cd14:	add    rbp,rax
  40cd17:	movzx  ecx,BYTE PTR [rbp+0x0]
  40cd1b:	test   cl,cl
  40cd1d:	je     0x40cc54
  40cd23:	cmp    cl,0x22
  40cd26:	jne    0x40ccf4
  40cd28:	test   r12b,r12b
  40cd2b:	je     0x40cd39
  40cd2d:	xor    eax,eax
  40cd2f:	cmp    BYTE PTR [rbp+0x1],0x22
  40cd33:	sete   al
  40cd36:	add    rbp,rax
  40cd39:	mov    rcx,rbp
  40cd3c:	xor    r12d,0x1
  40cd40:	call   0x42a400
  40cd45:	lea    rdx,[rbp+0x1]
  40cd49:	mov    r8,rax
  40cd4c:	mov    rcx,rbp
  40cd4f:	call   0x42a488
  40cd54:	sub    QWORD PTR [rsp+0x38],0x1
  40cd5a:	jmp    0x40cce3
  40cd5c:	nop    DWORD PTR [rax+0x0]
  40cd60:	mov    rcx,QWORD PTR [r12+0x8]
  40cd65:	call   0x409290
  40cd6a:	jmp    0x40cb7d
  40cd6f:	nop
  40cd70:	mov    DWORD PTR [rip+0x4d366],ecx        # 0x45a0dc
  40cd76:	lea    edx,[rsi-0x1]
  40cd79:	cmp    edx,0x1
  40cd7c:	ja     0x40cc61
  40cd82:	mov    rbp,rax
  40cd85:	jmp    0x40ccd9
  40cd8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd90:	sub    rsp,0x28
  40cd94:	mov    rax,QWORD PTR [rcx]
  40cd97:	mov    QWORD PTR [rip+0x4d34e],0x0        # 0x45a0f0
  40cda2:	mov    QWORD PTR [rip+0x4d34f],rcx        # 0x45a0f8
  40cda9:	test   rax,rax
  40cdac:	je     0x40cdd0
  40cdae:	mov    rcx,QWORD PTR [rax]
  40cdb1:	call   0x409290
  40cdb6:	mov    DWORD PTR [rip+0x4d344],0x27        # 0x45a104
  40cdc0:	add    rsp,0x28
  40cdc4:	jmp    0x409840
  40cdc9:	nop    DWORD PTR [rax+0x0]
  40cdd0:	mov    rcx,QWORD PTR [rcx+0x8]
  40cdd4:	call   0x409290
  40cdd9:	jmp    0x40cdb6
  40cddb:	nop
  40cddc:	nop
  40cddd:	nop
  40cdde:	nop
  40cddf:	nop
  40cde0:	push   rbx
  40cde1:	sub    rsp,0x20
  40cde5:	test   rcx,rcx
  40cde8:	je     0x40ce14
  40cdea:	mov    rbx,rcx
  40cded:	mov    rcx,QWORD PTR [rcx]
  40cdf0:	call   0x42a4e8
  40cdf5:	mov    rcx,QWORD PTR [rbx+0x8]
  40cdf9:	call   0x42a4e8
  40cdfe:	mov    rcx,QWORD PTR [rbx+0x10]
  40ce02:	call   0x42a4e8
  40ce07:	mov    rcx,rbx
  40ce0a:	add    rsp,0x20
  40ce0e:	pop    rbx
  40ce0f:	jmp    0x42a4e8
  40ce14:	add    rsp,0x20
  40ce18:	pop    rbx
  40ce19:	ret    
  40ce1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce20:	push   rsi
  40ce21:	push   rbx
  40ce22:	sub    rsp,0x28
  40ce26:	mov    r8,rdx
  40ce29:	mov    rdx,QWORD PTR [rcx]
  40ce2c:	mov    rbx,rcx
  40ce2f:	lea    rcx,[rip+0x2f80a]        # 0x43c640
  40ce36:	call   0x424630
  40ce3b:	mov    rcx,QWORD PTR [rbx]
  40ce3e:	mov    rsi,rax
  40ce41:	call   0x42a4e8
  40ce46:	mov    QWORD PTR [rbx],rsi
  40ce49:	add    rsp,0x28
  40ce4d:	pop    rbx
  40ce4e:	pop    rsi
  40ce4f:	ret    
  40ce50:	push   r12
  40ce52:	push   rbp
  40ce53:	push   rdi
  40ce54:	push   rsi
  40ce55:	push   rbx
  40ce56:	sub    rsp,0xb0
  40ce5d:	mov    rsi,rcx
  40ce60:	call   0x4078e0
  40ce65:	cmp    al,0x1
  40ce67:	sbb    ebp,ebp
  40ce69:	and    ebp,0x5c
  40ce6c:	test   rsi,rsi
  40ce6f:	je     0x40d871
  40ce75:	mov    ecx,0x20
  40ce7a:	call   0x424840
  40ce7f:	lea    rcx,[rip+0x2f7da]        # 0x43c660
  40ce86:	mov    rbx,rax
  40ce89:	call   0x424900
  40ce8e:	mov    rdi,QWORD PTR [rip+0x47a4b]        # 0x4548e0
  40ce95:	mov    QWORD PTR [rbx],rax
  40ce98:	lea    r9,[rip+0x2f7c2]        # 0x43c661
  40ce9f:	lea    r8,[rip+0x2f7bd]        # 0x43c663
  40cea6:	lea    rdx,[rip+0x2f7bb]        # 0x43c668
  40cead:	mov    rcx,rsi
  40ceb0:	mov    eax,DWORD PTR [rdi+0x8]
  40ceb3:	mov    DWORD PTR [rsp+0x30],0x0
  40cebb:	mov    DWORD PTR [rsp+0x28],0x0
  40cec3:	mov    DWORD PTR [rsp+0x20],0x0
  40cecb:	mov    DWORD PTR [rsp+0x38],eax
  40cecf:	call   0x4088b0
  40ced4:	test   rax,rax
  40ced7:	mov    rsi,rax
  40ceda:	je     0x40d0ea
  40cee0:	lea    rdx,[rip+0x2f786]        # 0x43c66d
  40cee7:	mov    rcx,rax
  40ceea:	call   0x427790
  40ceef:	test   eax,eax
  40cef1:	je     0x40d1b0
  40cef7:	cmp    BYTE PTR [rsi],0x28
  40cefa:	je     0x40d110
  40cf00:	lea    rdx,[rip+0x2f76d]        # 0x43c674
  40cf07:	mov    rcx,rbx
  40cf0a:	call   0x40ce20
  40cf0f:	mov    rdx,rsi
  40cf12:	mov    rcx,rbx
  40cf15:	call   0x40ce20
  40cf1a:	mov    eax,DWORD PTR [rdi+0x8]
  40cf1d:	lea    r9,[rip+0x2f73d]        # 0x43c661
  40cf24:	lea    r8,[rip+0x2f738]        # 0x43c663
  40cf2b:	lea    rdx,[rip+0x2f736]        # 0x43c668
  40cf32:	xor    ecx,ecx
  40cf34:	mov    DWORD PTR [rsp+0x30],0x0
  40cf3c:	mov    DWORD PTR [rsp+0x28],0x0
  40cf44:	mov    DWORD PTR [rsp+0x20],0x0
  40cf4c:	mov    DWORD PTR [rsp+0x38],eax
  40cf50:	call   0x4088b0
  40cf55:	test   rax,rax
  40cf58:	mov    rsi,rax
  40cf5b:	je     0x40d0ea
  40cf61:	movzx  eax,BYTE PTR [rax]
  40cf64:	cmp    al,0x2e
  40cf66:	je     0x40d6f0
  40cf6c:	cmp    al,0x28
  40cf6e:	je     0x40d08d
  40cf74:	lea    rdx,[rip+0x2f701]        # 0x43c67c
  40cf7b:	mov    rcx,rsi
  40cf7e:	call   0x427790
  40cf83:	test   eax,eax
  40cf85:	jne    0x40d5c4
  40cf8b:	mov    BYTE PTR [rbx+0x1a],0x1
  40cf8f:	mov    eax,DWORD PTR [rdi+0x8]
  40cf92:	lea    r9,[rip+0x2f6eb]        # 0x43c684
  40cf99:	lea    r8,[rip+0x2f6e6]        # 0x43c686
  40cfa0:	lea    rdx,[rip+0x2f6c1]        # 0x43c668
  40cfa7:	xor    ecx,ecx
  40cfa9:	mov    DWORD PTR [rsp+0x30],0x0
  40cfb1:	mov    DWORD PTR [rsp+0x28],0x0
  40cfb9:	mov    DWORD PTR [rsp+0x20],0x0
  40cfc1:	mov    DWORD PTR [rsp+0x38],eax
  40cfc5:	call   0x4088b0
  40cfca:	test   rax,rax
  40cfcd:	mov    rsi,rax
  40cfd0:	je     0x40d0ea
  40cfd6:	lea    rdx,[rip+0x2f6ab]        # 0x43c688
  40cfdd:	mov    rcx,rax
  40cfe0:	call   0x427790
  40cfe5:	test   eax,eax
  40cfe7:	jne    0x40d210
  40cfed:	mov    eax,DWORD PTR [rdi+0x8]
  40cff0:	lea    r9,[rip+0x2f68d]        # 0x43c684
  40cff7:	lea    r8,[rip+0x2f688]        # 0x43c686
  40cffe:	lea    rdx,[rip+0x2f663]        # 0x43c668
  40d005:	xor    ecx,ecx
  40d007:	mov    DWORD PTR [rsp+0x30],0x0
  40d00f:	mov    DWORD PTR [rsp+0x28],0x0
  40d017:	mov    DWORD PTR [rsp+0x20],0x0
  40d01f:	mov    DWORD PTR [rsp+0x38],eax
  40d023:	call   0x4088b0
  40d028:	test   rax,rax
  40d02b:	mov    rsi,rax
  40d02e:	je     0x40d0ea
  40d034:	mov    rcx,rax
  40d037:	call   0x42a400
  40d03c:	cmp    eax,0x1
  40d03f:	jle    0x40d610
  40d045:	cmp    BYTE PTR [rsi],0x27
  40d048:	jne    0x40d610
  40d04e:	cdqe   
  40d050:	cmp    BYTE PTR [rsi+rax*1-0x1],0x27
  40d055:	jne    0x40d610
  40d05b:	mov    r9d,DWORD PTR [rdi+0x8]
  40d05f:	xor    r8d,r8d
  40d062:	mov    edx,0x27
  40d067:	mov    rcx,rsi
  40d06a:	call   0x4087f0
  40d06f:	mov    BYTE PTR [rbx+0x18],0x1
  40d073:	mov    rcx,rsi
  40d076:	call   0x424900
  40d07b:	mov    QWORD PTR [rbx+0x10],rax
  40d07f:	jmp    0x40d22f
  40d084:	cmp    BYTE PTR [rax],0x29
  40d087:	je     0x40d680
  40d08d:	lea    rdx,[rip+0x2f5e0]        # 0x43c674
  40d094:	mov    rcx,rbx
  40d097:	call   0x40ce20
  40d09c:	mov    rdx,rsi
  40d09f:	mov    rcx,rbx
  40d0a2:	call   0x40ce20
  40d0a7:	mov    eax,DWORD PTR [rdi+0x8]
  40d0aa:	lea    r9,[rip+0x2f5b0]        # 0x43c661
  40d0b1:	lea    r8,[rip+0x2f5c1]        # 0x43c679
  40d0b8:	lea    rdx,[rip+0x2f5a9]        # 0x43c668
  40d0bf:	xor    ecx,ecx
  40d0c1:	mov    DWORD PTR [rsp+0x30],0x0
  40d0c9:	mov    DWORD PTR [rsp+0x28],0x0
  40d0d1:	mov    DWORD PTR [rsp+0x20],0x0
  40d0d9:	mov    DWORD PTR [rsp+0x38],eax
  40d0dd:	call   0x4088b0
  40d0e2:	test   rax,rax
  40d0e5:	mov    rsi,rax
  40d0e8:	jne    0x40d084
  40d0ea:	lea    rcx,[rip+0x2f68f]        # 0x43c780
  40d0f1:	call   0x405d90
  40d0f6:	mov    rcx,rbx
  40d0f9:	call   0x40cde0
  40d0fe:	xor    esi,esi
  40d100:	mov    eax,esi
  40d102:	add    rsp,0xb0
  40d109:	pop    rbx
  40d10a:	pop    rsi
  40d10b:	pop    rdi
  40d10c:	pop    rbp
  40d10d:	pop    r12
  40d10f:	ret    
  40d110:	movsx  ebp,bpl
  40d114:	mov    r12d,0x1
  40d11a:	nop    WORD PTR [rax+rax*1+0x0]
  40d120:	lea    rdx,[rip+0x2f54d]        # 0x43c674
  40d127:	mov    rcx,rbx
  40d12a:	call   0x40ce20
  40d12f:	mov    rdx,rsi
  40d132:	mov    rcx,rbx
  40d135:	call   0x40ce20
  40d13a:	mov    eax,DWORD PTR [rdi+0x8]
  40d13d:	lea    r9,[rip+0x2f532]        # 0x43c676
  40d144:	lea    r8,[rip+0x2f52e]        # 0x43c679
  40d14b:	lea    rdx,[rip+0x2f516]        # 0x43c668
  40d152:	xor    ecx,ecx
  40d154:	mov    DWORD PTR [rsp+0x30],0x0
  40d15c:	mov    DWORD PTR [rsp+0x28],0x1
  40d164:	mov    DWORD PTR [rsp+0x20],ebp
  40d168:	mov    DWORD PTR [rsp+0x38],eax
  40d16c:	call   0x4088b0
  40d171:	test   rax,rax
  40d174:	mov    rsi,rax
  40d177:	je     0x40d0ea
  40d17d:	movzx  eax,BYTE PTR [rax]
  40d180:	cmp    al,0x28
  40d182:	je     0x40d1a0
  40d184:	cmp    al,0x29
  40d186:	jne    0x40d120
  40d188:	sub    r12d,0x1
  40d18c:	test   r12d,r12d
  40d18f:	jg     0x40d120
  40d191:	jmp    0x40cf00
  40d196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1a0:	add    r12d,0x1
  40d1a4:	jmp    0x40d18c
  40d1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1b0:	mov    rdx,rsi
  40d1b3:	mov    rcx,rbx
  40d1b6:	call   0x40ce20
  40d1bb:	mov    eax,DWORD PTR [rdi+0x8]
  40d1be:	lea    r9,[rip+0x2f49c]        # 0x43c661
  40d1c5:	lea    r8,[rip+0x2f497]        # 0x43c663
  40d1cc:	lea    rdx,[rip+0x2f495]        # 0x43c668
  40d1d3:	xor    ecx,ecx
  40d1d5:	mov    DWORD PTR [rsp+0x30],0x0
  40d1dd:	mov    DWORD PTR [rsp+0x28],0x0
  40d1e5:	mov    DWORD PTR [rsp+0x20],0x0
  40d1ed:	mov    DWORD PTR [rsp+0x38],eax
  40d1f1:	call   0x4088b0
  40d1f6:	test   rax,rax
  40d1f9:	mov    rsi,rax
  40d1fc:	jne    0x40cef7
  40d202:	jmp    0x40d0ea
  40d207:	nop    WORD PTR [rax+rax*1+0x0]
  40d210:	lea    rdx,[rip+0x2f479]        # 0x43c690
  40d217:	mov    rcx,rsi
  40d21a:	call   0x427790
  40d21f:	test   eax,eax
  40d221:	jne    0x40d624
  40d227:	mov    QWORD PTR [rbx+0x10],0x0
  40d22f:	mov    eax,DWORD PTR [rdi+0x8]
  40d232:	lea    rdx,[rip+0x2f427]        # 0x43c660
  40d239:	xor    r9d,r9d
  40d23c:	xor    r8d,r8d
  40d23f:	xor    ecx,ecx
  40d241:	mov    DWORD PTR [rsp+0x30],0x0
  40d249:	mov    DWORD PTR [rsp+0x28],0x0
  40d251:	mov    DWORD PTR [rsp+0x20],0x0
  40d259:	mov    DWORD PTR [rsp+0x38],eax
  40d25d:	call   0x4088b0
  40d262:	test   rax,rax
  40d265:	je     0x40d273
  40d267:	mov    rcx,rax
  40d26a:	call   0x424900
  40d26f:	mov    QWORD PTR [rbx+0x8],rax
  40d273:	mov    rcx,QWORD PTR [rbx+0x10]
  40d277:	test   rcx,rcx
  40d27a:	je     0x40d660
  40d280:	cmp    BYTE PTR [rbx+0x18],0x0
  40d284:	je     0x40d480
  40d28a:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d28e:	je     0x40d49c
  40d294:	mov    rsi,QWORD PTR [rip+0x4f919]        # 0x45cbb4
  40d29b:	call   rsi
  40d29d:	lea    rcx,[rax+0x30]
  40d2a1:	call   0x42a520
  40d2a6:	call   rsi
  40d2a8:	lea    rcx,[rax+0x60]
  40d2ac:	call   0x42a520
  40d2b1:	call   QWORD PTR [rip+0x4f935]        # 0x45cbec
  40d2b7:	mov    DWORD PTR [rax],0x0
  40d2bd:	mov    rcx,QWORD PTR [rbx+0x10]
  40d2c1:	lea    rdx,[rip+0x2f3e4]        # 0x43c6ac
  40d2c8:	call   0x424fe0
  40d2cd:	mov    r12,rax
  40d2d0:	test   r12,r12
  40d2d3:	je     0x40d4eb
  40d2d9:	movzx  esi,BYTE PTR [rbx+0x18]
  40d2dd:	lea    rbp,[rsp+0x70]
  40d2e2:	test   sil,sil
  40d2e5:	jne    0x40d3a2
  40d2eb:	lea    rbp,[rsp+0x70]
  40d2f0:	mov    rcx,r12
  40d2f3:	call   0x42a368
  40d2f8:	mov    rdx,rbp
  40d2fb:	mov    ecx,eax
  40d2fd:	call   QWORD PTR [rip+0x4f8f9]        # 0x45cbfc
  40d303:	cmp    eax,0xffffffff
  40d306:	je     0x40d7e5
  40d30c:	movzx  ecx,WORD PTR [rsp+0x78]
  40d311:	mov    edx,DWORD PTR [rsp+0x70]
  40d315:	test   eax,eax
  40d317:	mov    DWORD PTR [rsp+0x40],edx
  40d31b:	movzx  edx,WORD PTR [rsp+0x74]
  40d320:	mov    WORD PTR [rsp+0x48],cx
  40d325:	movzx  ecx,WORD PTR [rsp+0x7a]
  40d32a:	mov    WORD PTR [rsp+0x44],dx
  40d32f:	movzx  edx,WORD PTR [rsp+0x76]
  40d334:	mov    WORD PTR [rsp+0x4a],cx
  40d339:	movzx  ecx,WORD PTR [rsp+0x7c]
  40d33e:	mov    WORD PTR [rsp+0x46],dx
  40d343:	mov    WORD PTR [rsp+0x4c],cx
  40d348:	mov    ecx,DWORD PTR [rsp+0x80]
  40d34f:	mov    DWORD PTR [rsp+0x50],ecx
  40d353:	mov    rcx,QWORD PTR [rsp+0x88]
  40d35b:	mov    DWORD PTR [rsp+0x54],ecx
  40d35f:	mov    rcx,QWORD PTR [rsp+0x90]
  40d367:	mov    QWORD PTR [rsp+0x58],rcx
  40d36c:	mov    rcx,QWORD PTR [rsp+0x98]
  40d374:	mov    QWORD PTR [rsp+0x60],rcx
  40d379:	mov    rcx,QWORD PTR [rsp+0xa0]
  40d381:	mov    QWORD PTR [rsp+0x68],rcx
  40d386:	js     0x40d7f7
  40d38c:	jne    0x40d5e0
  40d392:	and    dx,0xf000
  40d397:	cmp    dx,0x4000
  40d39c:	je     0x40d81c
  40d3a2:	mov    rcx,rbp
  40d3a5:	call   0x427da8
  40d3aa:	lea    rdx,[rip+0x2f35c]        # 0x43c70d
  40d3b1:	mov    rcx,rbp
  40d3b4:	call   0x427d70
  40d3b9:	mov    rdx,QWORD PTR [rbx]
  40d3bc:	mov    rcx,rbp
  40d3bf:	call   0x427dc8
  40d3c4:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d3c8:	je     0x40d530
  40d3ce:	lea    rdx,[rip+0x2f33e]        # 0x43c713
  40d3d5:	mov    rcx,rbp
  40d3d8:	call   0x427dc8
  40d3dd:	mov    rdx,QWORD PTR [rbx+0x8]
  40d3e1:	test   rdx,rdx
  40d3e4:	je     0x40d3ee
  40d3e6:	mov    rcx,rbp
  40d3e9:	call   0x427dc8
  40d3ee:	mov    rcx,QWORD PTR [rsp+0x70]
  40d3f3:	mov    QWORD PTR [rdi+0x20],r12
  40d3f7:	call   0x406410
  40d3fc:	mov    rcx,rbp
  40d3ff:	mov    esi,eax
  40d401:	mov    QWORD PTR [rdi+0x20],0x0
  40d409:	call   0x427d60
  40d40e:	cmp    QWORD PTR [rbx+0x10],0x0
  40d413:	je     0x40d462
  40d415:	cmp    BYTE PTR [rbx+0x18],0x0
  40d419:	mov    rcx,r12
  40d41c:	je     0x40d544
  40d422:	call   QWORD PTR [rip+0x4f7fc]        # 0x45cc24
  40d428:	test   eax,eax
  40d42a:	je     0x40d462
  40d42c:	js     0x40d840
  40d432:	mov    ecx,eax
  40d434:	call   0x424760
  40d439:	test   rax,rax
  40d43c:	mov    rsi,rax
  40d43f:	je     0x40d882
  40d445:	mov    rdx,QWORD PTR [rbx+0x10]
  40d449:	lea    rcx,[rip+0x2f28c]        # 0x43c6dc
  40d450:	mov    r8,rax
  40d453:	call   0x405d90
  40d458:	mov    rcx,rsi
  40d45b:	xor    esi,esi
  40d45d:	call   0x42a4e8
  40d462:	mov    rcx,rbx
  40d465:	call   0x40cde0
  40d46a:	mov    eax,esi
  40d46c:	add    rsp,0xb0
  40d473:	pop    rbx
  40d474:	pop    rsi
  40d475:	pop    rdi
  40d476:	pop    rbp
  40d477:	pop    r12
  40d479:	ret    
  40d47a:	nop    WORD PTR [rax+rax*1+0x0]
  40d480:	call   0x426d80
  40d485:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d489:	mov    rcx,QWORD PTR [rbx+0x10]
  40d48d:	jne    0x40d580
  40d493:	test   rcx,rcx
  40d496:	je     0x40d66a
  40d49c:	cmp    BYTE PTR [rbx+0x18],0x0
  40d4a0:	je     0x40d5b0
  40d4a6:	mov    rsi,QWORD PTR [rip+0x4f707]        # 0x45cbb4
  40d4ad:	call   rsi
  40d4af:	lea    rcx,[rax+0x30]
  40d4b3:	call   0x42a520
  40d4b8:	call   rsi
  40d4ba:	lea    rcx,[rax+0x60]
  40d4be:	call   0x42a520
  40d4c3:	call   QWORD PTR [rip+0x4f723]        # 0x45cbec
  40d4c9:	mov    DWORD PTR [rax],0x0
  40d4cf:	mov    rcx,QWORD PTR [rbx+0x10]
  40d4d3:	lea    rdx,[rip+0x2f1d5]        # 0x43c6af
  40d4da:	call   0x424fe0
  40d4df:	mov    r12,rax
  40d4e2:	test   r12,r12
  40d4e5:	jne    0x40d2d9
  40d4eb:	cmp    BYTE PTR [rbx+0x18],0x0
  40d4ef:	je     0x40d7c0
  40d4f5:	call   QWORD PTR [rip+0x4f6f1]        # 0x45cbec
  40d4fb:	mov    ecx,DWORD PTR [rax]
  40d4fd:	call   0x42a408
  40d502:	mov    rdx,QWORD PTR [rbx+0x10]
  40d506:	lea    rcx,[rip+0x2f1ab]        # 0x43c6b8
  40d50d:	mov    r8,rax
  40d510:	call   0x405d90
  40d515:	mov    rcx,rbx
  40d518:	xor    esi,esi
  40d51a:	call   0x40cde0
  40d51f:	mov    eax,esi
  40d521:	add    rsp,0xb0
  40d528:	pop    rbx
  40d529:	pop    rsi
  40d52a:	pop    rdi
  40d52b:	pop    rbp
  40d52c:	pop    r12
  40d52e:	ret    
  40d52f:	nop
  40d530:	lea    rdx,[rip+0x2f1e9]        # 0x43c720
  40d537:	mov    rcx,rbp
  40d53a:	call   0x427dc8
  40d53f:	jmp    0x40d3dd
  40d544:	call   0x42a538
  40d549:	test   eax,eax
  40d54b:	je     0x40d462
  40d551:	call   QWORD PTR [rip+0x4f695]        # 0x45cbec
  40d557:	mov    ecx,DWORD PTR [rax]
  40d559:	xor    esi,esi
  40d55b:	call   0x42a408
  40d560:	mov    rdx,QWORD PTR [rbx+0x10]
  40d564:	lea    rcx,[rip+0x2f171]        # 0x43c6dc
  40d56b:	mov    r8,rax
  40d56e:	call   0x405d90
  40d573:	jmp    0x40d462
  40d578:	nop    DWORD PTR [rax+rax*1+0x0]
  40d580:	test   rcx,rcx
  40d583:	je     0x40d7a0
  40d589:	cmp    BYTE PTR [rbx+0x18],0x0
  40d58d:	jne    0x40d294
  40d593:	lea    rdx,[rip+0x2f112]        # 0x43c6ac
  40d59a:	call   0x42a510
  40d59f:	mov    r12,rax
  40d5a2:	jmp    0x40d2d0
  40d5a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d5b0:	lea    rdx,[rip+0x2f0f8]        # 0x43c6af
  40d5b7:	call   0x42a510
  40d5bc:	mov    r12,rax
  40d5bf:	jmp    0x40d2d0
  40d5c4:	lea    rdx,[rip+0x2f0b6]        # 0x43c681
  40d5cb:	mov    rcx,rsi
  40d5ce:	call   0x427790
  40d5d3:	test   eax,eax
  40d5d5:	jne    0x40d610
  40d5d7:	mov    BYTE PTR [rbx+0x1a],0x0
  40d5db:	jmp    0x40cf8f
  40d5e0:	and    dx,0xf000
  40d5e5:	cmp    dx,0x4000
  40d5ea:	jne    0x40d3a2
  40d5f0:	mov    rcx,r12
  40d5f3:	call   0x42a538
  40d5f8:	mov    rcx,rbx
  40d5fb:	call   0x40cde0
  40d600:	mov    eax,esi
  40d602:	add    rsp,0xb0
  40d609:	pop    rbx
  40d60a:	pop    rsi
  40d60b:	pop    rdi
  40d60c:	pop    rbp
  40d60d:	pop    r12
  40d60f:	ret    
  40d610:	lea    rcx,[rip+0x2f147]        # 0x43c75e
  40d617:	mov    rdx,rsi
  40d61a:	call   0x405d90
  40d61f:	jmp    0x40d0f6
  40d624:	lea    rdx,[rip+0x2f06b]        # 0x43c696
  40d62b:	mov    rcx,rsi
  40d62e:	call   0x427790
  40d633:	test   eax,eax
  40d635:	je     0x40d227
  40d63b:	lea    rdx,[rip+0x2f05b]        # 0x43c69d
  40d642:	mov    rcx,rsi
  40d645:	call   0x427790
  40d64a:	test   eax,eax
  40d64c:	jne    0x40d8a0
  40d652:	mov    BYTE PTR [rbx+0x19],0x1
  40d656:	jmp    0x40d227
  40d65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d660:	cmp    BYTE PTR [rbx+0x1a],0x0
  40d664:	jne    0x40d7a0
  40d66a:	cmp    BYTE PTR [rbx+0x19],0x0
  40d66e:	jne    0x40d831
  40d674:	mov    r12,QWORD PTR [rdi+0x10]
  40d678:	jmp    0x40d2d0
  40d67d:	nop    DWORD PTR [rax]
  40d680:	lea    rdx,[rip+0x2efed]        # 0x43c674
  40d687:	mov    rcx,rbx
  40d68a:	call   0x40ce20
  40d68f:	mov    rdx,rsi
  40d692:	mov    rcx,rbx
  40d695:	call   0x40ce20
  40d69a:	mov    eax,DWORD PTR [rdi+0x8]
  40d69d:	lea    r9,[rip+0x2efbd]        # 0x43c661
  40d6a4:	lea    r8,[rip+0x2efb8]        # 0x43c663
  40d6ab:	lea    rdx,[rip+0x2efb6]        # 0x43c668
  40d6b2:	xor    ecx,ecx
  40d6b4:	mov    DWORD PTR [rsp+0x30],0x0
  40d6bc:	mov    DWORD PTR [rsp+0x28],0x0
  40d6c4:	mov    DWORD PTR [rsp+0x20],0x0
  40d6cc:	mov    DWORD PTR [rsp+0x38],eax
  40d6d0:	call   0x4088b0
  40d6d5:	test   rax,rax
  40d6d8:	mov    rsi,rax
  40d6db:	jne    0x40cf74
  40d6e1:	jmp    0x40d0ea
  40d6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6f0:	mov    rdx,rsi
  40d6f3:	mov    rcx,rbx
  40d6f6:	call   0x40ce20
  40d6fb:	mov    eax,DWORD PTR [rdi+0x8]
  40d6fe:	lea    r9,[rip+0x2ef5c]        # 0x43c661
  40d705:	lea    r8,[rip+0x2ef57]        # 0x43c663
  40d70c:	lea    rdx,[rip+0x2ef55]        # 0x43c668
  40d713:	xor    ecx,ecx
  40d715:	mov    DWORD PTR [rsp+0x30],0x0
  40d71d:	mov    DWORD PTR [rsp+0x28],0x0
  40d725:	mov    DWORD PTR [rsp+0x20],0x0
  40d72d:	mov    DWORD PTR [rsp+0x38],eax
  40d731:	call   0x4088b0
  40d736:	test   rax,rax
  40d739:	je     0x40d0ea
  40d73f:	mov    rdx,rax
  40d742:	mov    rcx,rbx
  40d745:	call   0x40ce20
  40d74a:	mov    eax,DWORD PTR [rdi+0x8]
  40d74d:	lea    r9,[rip+0x2ef0d]        # 0x43c661
  40d754:	lea    r8,[rip+0x2ef08]        # 0x43c663
  40d75b:	lea    rdx,[rip+0x2ef06]        # 0x43c668
  40d762:	xor    ecx,ecx
  40d764:	mov    DWORD PTR [rsp+0x30],0x0
  40d76c:	mov    DWORD PTR [rsp+0x28],0x0
  40d774:	mov    DWORD PTR [rsp+0x20],0x0
  40d77c:	mov    DWORD PTR [rsp+0x38],eax
  40d780:	call   0x4088b0
  40d785:	test   rax,rax
  40d788:	mov    rsi,rax
  40d78b:	je     0x40d0ea
  40d791:	movzx  eax,BYTE PTR [rax]
  40d794:	jmp    0x40cf6c
  40d799:	nop    DWORD PTR [rax+0x0]
  40d7a0:	cmp    BYTE PTR [rbx+0x19],0x0
  40d7a4:	jne    0x40d863
  40d7aa:	mov    r12,QWORD PTR [rdi+0xd8]
  40d7b1:	jmp    0x40d2d0
  40d7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d7c0:	call   QWORD PTR [rip+0x4f426]        # 0x45cbec
  40d7c6:	mov    ecx,DWORD PTR [rax]
  40d7c8:	call   0x42a408
  40d7cd:	mov    rdx,QWORD PTR [rbx+0x10]
  40d7d1:	lea    rcx,[rip+0x2ef04]        # 0x43c6dc
  40d7d8:	mov    r8,rax
  40d7db:	call   0x405d90
  40d7e0:	jmp    0x40d515
  40d7e5:	lea    rdx,[rsp+0x40]
  40d7ea:	mov    ecx,0x6
  40d7ef:	xor    eax,eax
  40d7f1:	mov    rdi,rdx
  40d7f4:	rep stos QWORD PTR es:[rdi],rax
  40d7f7:	call   QWORD PTR [rip+0x4f3ef]        # 0x45cbec
  40d7fd:	mov    ecx,DWORD PTR [rax]
  40d7ff:	call   0x42a408
  40d804:	mov    rdx,QWORD PTR [rbx+0x10]
  40d808:	lea    rcx,[rip+0x2ef94]        # 0x43c7a3
  40d80f:	mov    r8,rax
  40d812:	call   0x405d90
  40d817:	jmp    0x40d5f0
  40d81c:	mov    rdx,QWORD PTR [rbx+0x10]
  40d820:	lea    rcx,[rip+0x2eec1]        # 0x43c6e8
  40d827:	call   0x405d90
  40d82c:	jmp    0x40d5f0
  40d831:	call   QWORD PTR [rip+0x4f37d]        # 0x45cbb4
  40d837:	lea    r12,[rax+0x30]
  40d83b:	jmp    0x40d2d0
  40d840:	call   QWORD PTR [rip+0x4f3a6]        # 0x45cbec
  40d846:	mov    ecx,DWORD PTR [rax]
  40d848:	xor    esi,esi
  40d84a:	call   0x42a408
  40d84f:	lea    rcx,[rip+0x2eeda]        # 0x43c730
  40d856:	mov    rdx,rax
  40d859:	call   0x405d90
  40d85e:	jmp    0x40d462
  40d863:	call   QWORD PTR [rip+0x4f34b]        # 0x45cbb4
  40d869:	mov    r12,rax
  40d86c:	jmp    0x40d2d0
  40d871:	lea    rcx,[rip+0x2edcd]        # 0x43c645
  40d878:	call   0x405d90
  40d87d:	jmp    0x40d0fe
  40d882:	mov    rdx,QWORD PTR [rbx+0x10]
  40d886:	lea    r8,[rip+0x2edd3]        # 0x43c660
  40d88d:	lea    rcx,[rip+0x2ee48]        # 0x43c6dc
  40d894:	xor    esi,esi
  40d896:	call   0x405d90
  40d89b:	jmp    0x40d462
  40d8a0:	lea    rdx,[rip+0x2edfd]        # 0x43c6a4
  40d8a7:	mov    rcx,rsi
  40d8aa:	call   0x427790
  40d8af:	test   eax,eax
  40d8b1:	je     0x40d652
  40d8b7:	mov    r9d,DWORD PTR [rdi+0x8]
  40d8bb:	xor    r8d,r8d
  40d8be:	mov    edx,0x27
  40d8c3:	mov    rcx,rsi
  40d8c6:	call   0x4087f0
  40d8cb:	mov    rcx,rsi
  40d8ce:	call   0x424900
  40d8d3:	lea    rcx,[rbx+0x10]
  40d8d7:	mov    QWORD PTR [rbx+0x10],rax
  40d8db:	call   0x407980
  40d8e0:	jmp    0x40d22f
  40d8e5:	nop
  40d8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d8f0:	push   r13
  40d8f2:	push   r12
  40d8f4:	push   rbp
  40d8f5:	push   rdi
  40d8f6:	push   rsi
  40d8f7:	push   rbx
  40d8f8:	sub    rsp,0x38
  40d8fc:	mov    r13d,0x1
  40d902:	mov    rsi,rcx
  40d905:	mov    r12,rdx
  40d908:	mov    rbp,r8
  40d90b:	lea    rdi,[rsp+0x28]
  40d910:	jmp    0x40d91c
  40d912:	mov    rcx,QWORD PTR [rsp+0x28]
  40d917:	test   rcx,rcx
  40d91a:	jne    0x40d983
  40d91c:	xor    r8d,r8d
  40d91f:	mov    rdx,rdi
  40d922:	mov    rcx,rsi
  40d925:	call   0x427eb8
  40d92a:	movsxd rbx,eax
  40d92d:	test   ebx,ebx
  40d92f:	jns    0x40d912
  40d931:	test   r13b,r13b
  40d934:	mov    edi,r13d
  40d937:	jne    0x40d990
  40d939:	cmp    ebx,0xfffffffe
  40d93c:	je     0x40da0b
  40d942:	mov    rcx,rsi
  40d945:	call   0x427eb0
  40d94a:	mov    QWORD PTR [rbp+0x0],rax
  40d94e:	mov    rcx,rax
  40d951:	call   0x427e20
  40d956:	cmp    eax,0x1
  40d959:	je     0x40d974
  40d95b:	mov    rcx,rsi
  40d95e:	xor    edi,edi
  40d960:	call   0x427f10
  40d965:	lea    rcx,[rip+0x2ee99]        # 0x43c805
  40d96c:	mov    rdx,rax
  40d96f:	call   0x405d90
  40d974:	mov    eax,edi
  40d976:	add    rsp,0x38
  40d97a:	pop    rbx
  40d97b:	pop    rsi
  40d97c:	pop    rdi
  40d97d:	pop    rbp
  40d97e:	pop    r12
  40d980:	pop    r13
  40d982:	ret    
  40d983:	test   r13b,r13b
  40d986:	jne    0x40d9c0
  40d988:	call   0x427ed0
  40d98d:	jmp    0x40d91c
  40d98f:	nop
  40d990:	mov    rcx,r12
  40d993:	call   0x42a520
  40d998:	test   eax,eax
  40d99a:	je     0x40d939
  40d99c:	call   QWORD PTR [rip+0x4f24a]        # 0x45cbec
  40d9a2:	mov    ecx,DWORD PTR [rax]
  40d9a4:	xor    edi,edi
  40d9a6:	call   0x42a408
  40d9ab:	lea    rcx,[rip+0x2ee16]        # 0x43c7c8
  40d9b2:	mov    rdx,rax
  40d9b5:	call   0x405d90
  40d9ba:	jmp    0x40d939
  40d9bf:	nop
  40d9c0:	mov    r9,r12
  40d9c3:	mov    r8,rbx
  40d9c6:	mov    edx,0x1
  40d9cb:	call   0x42a4e0
  40d9d0:	cmp    rbx,rax
  40d9d3:	je     0x40d9fb
  40d9d5:	call   QWORD PTR [rip+0x4f211]        # 0x45cbec
  40d9db:	mov    ecx,DWORD PTR [rax]
  40d9dd:	xor    r13d,r13d
  40d9e0:	call   0x42a408
  40d9e5:	lea    rcx,[rip+0x2eddc]        # 0x43c7c8
  40d9ec:	mov    rdx,rax
  40d9ef:	call   0x405d90
  40d9f4:	mov    rcx,QWORD PTR [rsp+0x28]
  40d9f9:	jmp    0x40d988
  40d9fb:	mov    rcx,QWORD PTR [rsp+0x28]
  40da00:	mov    r13d,0x1
  40da06:	jmp    0x40d988
  40da0b:	mov    rcx,rsi
  40da0e:	xor    edi,edi
  40da10:	call   0x427f10
  40da15:	lea    rcx,[rip+0x2edcb]        # 0x43c7e7
  40da1c:	mov    rdx,rax
  40da1f:	call   0x405d90
  40da24:	jmp    0x40d942
  40da29:	nop    DWORD PTR [rax+0x0]
  40da30:	push   rbp
  40da31:	push   r15
  40da33:	mov    eax,0x2038
  40da38:	push   r14
  40da3a:	push   r13
  40da3c:	push   r12
  40da3e:	push   rdi
  40da3f:	push   rsi
  40da40:	push   rbx
  40da41:	mov    rbp,rsp
  40da44:	call   0x4294a0
  40da49:	sub    rsp,rax
  40da4c:	mov    QWORD PTR [rbp+0x48],rcx
  40da50:	mov    rcx,QWORD PTR [rip+0x46ea9]        # 0x454900
  40da57:	mov    QWORD PTR [rbp+0x50],rdx
  40da5b:	mov    rdx,rbp
  40da5e:	mov    DWORD PTR [rbp-0x2014],r8d
  40da65:	mov    QWORD PTR [rbp+0x60],r9
  40da69:	call   0x42a588
  40da6e:	test   eax,eax
  40da70:	je     0x40db31
  40da76:	mov    rcx,QWORD PTR [rbp+0x48]
  40da7a:	call   0x427e48
  40da7f:	mov    rcx,QWORD PTR [rbp+0x48]
  40da83:	cmp    eax,0x2
  40da86:	lea    rax,[rip+0x2ed7b]        # 0x43c808
  40da8d:	mov    edx,0x0
  40da92:	cmovg  rdx,rax
  40da96:	xor    ebx,ebx
  40da98:	call   0x427e38
  40da9d:	lea    rdi,[rip+0x2ed9c]        # 0x43c840
  40daa4:	xor    esi,esi
  40daa6:	jmp    0x40dad3
  40daa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dab0:	call   0x427f68
  40dab5:	mov    rcx,QWORD PTR [rbp+0x48]
  40dab9:	call   0x427e48
  40dabe:	mov    rcx,QWORD PTR [rbp+0x48]
  40dac2:	cmp    eax,0x2
  40dac5:	mov    rdx,rsi
  40dac8:	cmovg  rdx,rdi
  40dacc:	xor    ebx,ebx
  40dace:	call   0x427e38
  40dad3:	mov    rcx,QWORD PTR [rbp+0x48]
  40dad7:	call   0x427eb0
  40dadc:	mov    rcx,rax
  40dadf:	mov    rax,QWORD PTR [rbp+0x60]
  40dae3:	mov    QWORD PTR [rax],rcx
  40dae6:	call   0x427e20
  40daeb:	cmp    eax,0x4
  40daee:	mov    rax,QWORD PTR [rbp+0x60]
  40daf2:	mov    rcx,QWORD PTR [rax]
  40daf5:	je     0x40dab0
  40daf7:	call   0x427e20
  40dafc:	cmp    eax,0x1
  40daff:	je     0x40db1b
  40db01:	mov    rcx,QWORD PTR [rbp+0x48]
  40db05:	xor    ebx,ebx
  40db07:	call   0x427f10
  40db0c:	lea    rcx,[rip+0x2ecf2]        # 0x43c805
  40db13:	mov    rdx,rax
  40db16:	call   0x405d90
  40db1b:	mov    eax,ebx
  40db1d:	add    rsp,0x2038
  40db24:	pop    rbx
  40db25:	pop    rsi
  40db26:	pop    rdi
  40db27:	pop    r12
  40db29:	pop    r13
  40db2b:	pop    r14
  40db2d:	pop    r15
  40db2f:	pop    rbp
  40db30:	ret    
  40db31:	mov    rcx,QWORD PTR [rbp+0x50]
  40db35:	call   0x42a368
  40db3a:	mov    ecx,eax
  40db3c:	call   0x42a380
  40db41:	test   eax,eax
  40db43:	je     0x40dcc4
  40db49:	mov    rax,QWORD PTR [rip+0x46d90]        # 0x4548e0
  40db50:	cmp    BYTE PTR [rax+0x11a],0x0
  40db57:	jne    0x40db65
  40db59:	lea    rcx,[rip+0x2ed00]        # 0x43c860
  40db60:	call   0x42a468
  40db65:	mov    ecx,0x7
  40db6a:	call   0x40e4d0
  40db6f:	cmp    BYTE PTR [rbp-0x2014],0x0
  40db76:	mov    QWORD PTR [rbp-0x2010],rax
  40db7d:	jne    0x40dd4b
  40db83:	mov    r12,QWORD PTR [rip+0x46d66]        # 0x4548f0
  40db8a:	lea    rbx,[rbp-0x2008]
  40db91:	lea    r13,[rip+0x2ed2e]        # 0x43c8c6
  40db98:	lea    r14,[rip+0x2ed2b]        # 0x43c8ca
  40db9f:	nop
  40dba0:	mov    rdi,QWORD PTR [rbp-0x2010]
  40dba7:	test   rdi,rdi
  40dbaa:	je     0x40dbcd
  40dbac:	call   QWORD PTR [rip+0x4f002]        # 0x45cbb4
  40dbb2:	lea    rdx,[rax+0x30]
  40dbb6:	mov    rcx,rdi
  40dbb9:	call   0x42a4f8
  40dbbe:	call   QWORD PTR [rip+0x4eff0]        # 0x45cbb4
  40dbc4:	lea    rcx,[rax+0x30]
  40dbc8:	call   0x42a520
  40dbcd:	mov    esi,0x1
  40dbd2:	mov    r8,QWORD PTR [rbp+0x50]
  40dbd6:	mov    edx,0x2000
  40dbdb:	mov    rcx,rbx
  40dbde:	mov    BYTE PTR [r12],0x1
  40dbe3:	call   0x42a518
  40dbe8:	test   rax,rax
  40dbeb:	mov    BYTE PTR [r12],0x0
  40dbf0:	je     0x40dd82
  40dbf6:	mov    r8,rbx
  40dbf9:	mov    rax,rbx
  40dbfc:	mov    ecx,DWORD PTR [rax]
  40dbfe:	add    rax,0x4
  40dc02:	lea    edx,[rcx-0x1010101]
  40dc08:	not    ecx
  40dc0a:	and    edx,ecx
  40dc0c:	and    edx,0x80808080
  40dc12:	je     0x40dbfc
  40dc14:	mov    ecx,edx
  40dc16:	shr    ecx,0x10
  40dc19:	test   edx,0x8080
  40dc1f:	cmove  edx,ecx
  40dc22:	lea    rcx,[rax+0x2]
  40dc26:	cmove  rax,rcx
  40dc2a:	add    dl,dl
  40dc2c:	sbb    rax,0x3
  40dc30:	xor    r15d,r15d
  40dc33:	sub    rax,r8
  40dc36:	test   eax,eax
  40dc38:	mov    r8d,eax
  40dc3b:	jle    0x40dc4e
  40dc3d:	sub    eax,0x1
  40dc40:	cdqe   
  40dc42:	cmp    BYTE PTR [rbp+rax*1-0x2008],0xa
  40dc4a:	sete   r15b
  40dc4e:	test   sil,sil
  40dc51:	je     0x40dc79
  40dc53:	mov    ecx,0x4
  40dc58:	mov    rsi,rbx
  40dc5b:	mov    rdi,r13
  40dc5e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40dc60:	je     0x40dd82
  40dc66:	mov    ecx,0x5
  40dc6b:	mov    rsi,rbx
  40dc6e:	mov    rdi,r14
  40dc71:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40dc73:	je     0x40dd82
  40dc79:	mov    rcx,QWORD PTR [rbp+0x48]
  40dc7d:	mov    rdx,rbx
  40dc80:	call   0x427e40
  40dc85:	test   eax,eax
  40dc87:	jle    0x40ddd0
  40dc8d:	xor    esi,esi
  40dc8f:	test   r15b,r15b
  40dc92:	je     0x40dbd2
  40dc98:	mov    rax,QWORD PTR [rip+0x46c41]        # 0x4548e0
  40dc9f:	mov    rdi,QWORD PTR [rbp+0x50]
  40dca3:	cmp    QWORD PTR [rax+0xd8],rdi
  40dcaa:	jne    0x40dba0
  40dcb0:	mov    rax,QWORD PTR [rip+0x46c29]        # 0x4548e0
  40dcb7:	add    QWORD PTR [rax+0xf8],0x1
  40dcbf:	jmp    0x40dba0
  40dcc4:	cmp    BYTE PTR [rbp-0x2014],0x0
  40dccb:	je     0x40ddde
  40dcd1:	mov    rbx,QWORD PTR [rip+0x46c18]        # 0x4548f0
  40dcd8:	lea    rsi,[rbp-0x2008]
  40dcdf:	jmp    0x40dcf8
  40dce1:	mov    rcx,QWORD PTR [rbp+0x48]
  40dce5:	mov    r8d,eax
  40dce8:	mov    rdx,rsi
  40dceb:	call   0x427e40
  40dcf0:	test   eax,eax
  40dcf2:	jle    0x40ddee
  40dcf8:	mov    r9,QWORD PTR [rbp+0x50]
  40dcfc:	mov    r8d,0x2000
  40dd02:	mov    edx,0x1
  40dd07:	mov    rcx,rsi
  40dd0a:	mov    BYTE PTR [rbx],0x1
  40dd0d:	call   0x42a4f0
  40dd12:	test   eax,eax
  40dd14:	mov    BYTE PTR [rbx],0x0
  40dd17:	jg     0x40dce1
  40dd19:	mov    rcx,QWORD PTR [rbp+0x50]
  40dd1d:	mov    ebx,0x1
  40dd22:	call   0x42a528
  40dd27:	test   eax,eax
  40dd29:	je     0x40dda8
  40dd2b:	mov    rcx,QWORD PTR [rbp+0x48]
  40dd2f:	xor    ebx,ebx
  40dd31:	call   0x427e48
  40dd36:	cmp    eax,0x2
  40dd39:	lea    rax,[rip+0x2eae0]        # 0x43c820
  40dd40:	mov    edx,0x0
  40dd45:	cmovg  rdx,rax
  40dd49:	jmp    0x40ddb7
  40dd4b:	cmp    QWORD PTR [rbp-0x2010],0x0
  40dd53:	je     0x40dcd1
  40dd59:	mov    rbx,QWORD PTR [rip+0x4ee54]        # 0x45cbb4
  40dd60:	call   rbx
  40dd62:	mov    rcx,QWORD PTR [rbp-0x2010]
  40dd69:	lea    rdx,[rax+0x30]
  40dd6d:	call   0x42a4f8
  40dd72:	call   rbx
  40dd74:	lea    rcx,[rax+0x30]
  40dd78:	call   0x42a520
  40dd7d:	jmp    0x40dcd1
  40dd82:	mov    ebx,0x1
  40dd87:	mov    rax,QWORD PTR [rip+0x46b52]        # 0x4548e0
  40dd8e:	mov    rdi,QWORD PTR [rbp+0x50]
  40dd92:	cmp    QWORD PTR [rax+0xd8],rdi
  40dd99:	je     0x40ddd4
  40dd9b:	mov    rcx,QWORD PTR [rbp+0x50]
  40dd9f:	call   0x42a528
  40dda4:	test   eax,eax
  40dda6:	jne    0x40dd2b
  40dda8:	test   bl,bl
  40ddaa:	je     0x40dd2b
  40ddb0:	mov    ebx,0x1
  40ddb5:	xor    edx,edx
  40ddb7:	mov    rcx,QWORD PTR [rbp+0x48]
  40ddbb:	call   0x427e38
  40ddc0:	test   eax,eax
  40ddc2:	mov    eax,0x0
  40ddc7:	cmovle ebx,eax
  40ddca:	jmp    0x40da9d
  40ddcf:	nop
  40ddd0:	xor    ebx,ebx
  40ddd2:	jmp    0x40dd87
  40ddd4:	add    QWORD PTR [rax+0xf8],0x1
  40dddc:	jmp    0x40dd9b
  40ddde:	mov    QWORD PTR [rbp-0x2010],0x0
  40dde9:	jmp    0x40db83
  40ddee:	xor    ebx,ebx
  40ddf0:	jmp    0x40dd9b
  40ddf2:	nop
  40ddf3:	nop
  40ddf4:	nop
  40ddf5:	nop
  40ddf6:	nop
  40ddf7:	nop
  40ddf8:	nop
  40ddf9:	nop
  40ddfa:	nop
  40ddfb:	nop
  40ddfc:	nop
  40ddfd:	nop
  40ddfe:	nop
  40ddff:	nop
  40de00:	lea    rax,[rip+0x2eac9]        # 0x43c8d0
  40de07:	test   rcx,rcx
  40de0a:	cmove  rcx,rax
  40de0e:	mov    QWORD PTR [rip+0x4d3a3],rcx        # 0x45b1b8
  40de15:	ret    
  40de16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de20:	lea    rax,[rip+0x2eaa9]        # 0x43c8d0
  40de27:	test   rcx,rcx
  40de2a:	cmove  rcx,rax
  40de2e:	mov    QWORD PTR [rip+0x4d38b],rcx        # 0x45b1c0
  40de35:	ret    
  40de36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de40:	lea    rax,[rip+0x2ea89]        # 0x43c8d0
  40de47:	test   rcx,rcx
  40de4a:	cmove  rcx,rax
  40de4e:	mov    QWORD PTR [rip+0x4d373],rcx        # 0x45b1c8
  40de55:	ret    
  40de56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de60:	push   rbx
  40de61:	sub    rsp,0x20
  40de65:	test   rcx,rcx
  40de68:	je     0x40de7d
  40de6a:	lea    rdx,[rip+0x2ea60]        # 0x43c8d1
  40de71:	mov    rbx,rcx
  40de74:	call   0x427790
  40de79:	test   eax,eax
  40de7b:	jne    0x40dea3
  40de7d:	mov    DWORD PTR [rip+0x4d349],0x1        # 0x45b1d0
  40de87:	mov    rcx,QWORD PTR [rip+0x4d1f2]        # 0x45b080
  40de8e:	test   rcx,rcx
  40de91:	je     0x40ded0
  40de93:	mov    edx,DWORD PTR [rip+0x4d337]        # 0x45b1d0
  40de99:	add    rsp,0x20
  40de9d:	pop    rbx
  40de9e:	jmp    0x427e08
  40dea3:	lea    rdx,[rip+0x2ea2f]        # 0x43c8d9
  40deaa:	mov    rcx,rbx
  40dead:	call   0x427790
  40deb2:	test   eax,eax
  40deb4:	jne    0x40dee0
  40deb6:	mov    rcx,QWORD PTR [rip+0x4d1c3]        # 0x45b080
  40debd:	mov    DWORD PTR [rip+0x4d309],0x0        # 0x45b1d0
  40dec7:	test   rcx,rcx
  40deca:	jne    0x40de93
  40decc:	nop    DWORD PTR [rax+0x0]
  40ded0:	add    rsp,0x20
  40ded4:	pop    rbx
  40ded5:	ret    
  40ded6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dee0:	lea    rdx,[rip+0x2e9f8]        # 0x43c8df
  40dee7:	mov    rcx,rbx
  40deea:	call   0x427790
  40deef:	test   eax,eax
  40def1:	jne    0x40df00
  40def3:	mov    DWORD PTR [rip+0x4d2d3],0x2        # 0x45b1d0
  40defd:	jmp    0x40de87
  40deff:	nop
  40df00:	lea    r9,[rip+0x2e9ca]        # 0x43c8d1
  40df07:	lea    r8,[rip+0x2e9d9]        # 0x43c8e7
  40df0e:	lea    rcx,[rip+0x2e9e3]        # 0x43c8f8
  40df15:	mov    rdx,rbx
  40df18:	call   0x405d90
  40df1d:	jmp    0x40de7d
  40df22:	nop    DWORD PTR [rax+0x0]
  40df26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df30:	sub    rsp,0x28
  40df34:	lea    rdx,[rip+0x2e9ee]        # 0x43c929
  40df3b:	call   0x40eb70
  40df40:	mov    BYTE PTR [rip+0x4d256],al        # 0x45b19c
  40df46:	add    rsp,0x28
  40df4a:	ret    
  40df4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df50:	sub    rsp,0x28
  40df54:	lea    rdx,[rip+0x2e9d9]        # 0x43c934
  40df5b:	call   0x40eb70
  40df60:	mov    BYTE PTR [rip+0x4d235],al        # 0x45b19b
  40df66:	add    rsp,0x28
  40df6a:	ret    
  40df6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df70:	sub    rsp,0x28
  40df74:	lea    rdx,[rip+0x2e9c4]        # 0x43c93f
  40df7b:	call   0x40eb70
  40df80:	mov    BYTE PTR [rip+0x4d214],al        # 0x45b19a
  40df86:	add    rsp,0x28
  40df8a:	ret    
  40df8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df90:	sub    rsp,0x28
  40df94:	lea    rdx,[rip+0x2e9aa]        # 0x43c945
  40df9b:	call   0x40eb70
  40dfa0:	mov    BYTE PTR [rip+0x4d1f3],al        # 0x45b199
  40dfa6:	add    rsp,0x28
  40dfaa:	ret    
  40dfab:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfb0:	sub    rsp,0x28
  40dfb4:	lea    rdx,[rip+0x2e998]        # 0x43c953
  40dfbb:	call   0x40eb70
  40dfc0:	mov    BYTE PTR [rip+0x4d1d2],al        # 0x45b198
  40dfc6:	add    rsp,0x28
  40dfca:	ret    
  40dfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfd0:	sub    rsp,0x28
  40dfd4:	mov    r8d,0xffffffff
  40dfda:	xor    r9d,r9d
  40dfdd:	mov    edx,r8d
  40dfe0:	call   0x40ec90
  40dfe5:	mov    DWORD PTR [rip+0x4d1b5],eax        # 0x45b1a0
  40dfeb:	add    rsp,0x28
  40dfef:	ret    
  40dff0:	push   rdi
  40dff1:	push   rsi
  40dff2:	push   rbx
  40dff3:	sub    rsp,0x20
  40dff7:	lea    r8,[rip+0x2e960]        # 0x43c95e
  40dffe:	mov    rdx,rcx
  40e001:	mov    rbx,rcx
  40e004:	lea    rcx,[rip+0x2e959]        # 0x43c964
  40e00b:	call   0x424630
  40e010:	lea    r8,[rip+0x2e953]        # 0x43c96a
  40e017:	lea    rcx,[rip+0x2e946]        # 0x43c964
  40e01e:	mov    rsi,rax
  40e021:	mov    rdx,rbx
  40e024:	call   0x424630
  40e029:	mov    edx,0x4
  40e02e:	mov    rcx,rsi
  40e031:	mov    rdi,rax
  40e034:	call   0x42a350
  40e039:	test   eax,eax
  40e03b:	je     0x40e096
  40e03d:	mov    edx,0x4
  40e042:	mov    rcx,rdi
  40e045:	call   0x42a350
  40e04a:	test   eax,eax
  40e04c:	je     0x40e087
  40e04e:	mov    edx,0x4
  40e053:	mov    rcx,rbx
  40e056:	call   0x42a350
  40e05b:	test   eax,eax
  40e05d:	jne    0x40e070
  40e05f:	xor    r8d,r8d
  40e062:	xor    edx,edx
  40e064:	mov    rcx,rbx
  40e067:	call   0x401ed0
  40e06c:	nop    DWORD PTR [rax+0x0]
  40e070:	mov    rcx,rsi
  40e073:	call   0x42a4e8
  40e078:	mov    rcx,rdi
  40e07b:	add    rsp,0x20
  40e07f:	pop    rbx
  40e080:	pop    rsi
  40e081:	pop    rdi
  40e082:	jmp    0x42a4e8
  40e087:	xor    r8d,r8d
  40e08a:	xor    edx,edx
  40e08c:	mov    rcx,rdi
  40e08f:	call   0x401ed0
  40e094:	jmp    0x40e070
  40e096:	xor    r8d,r8d
  40e099:	xor    edx,edx
  40e09b:	mov    rcx,rsi
  40e09e:	call   0x401ed0
  40e0a3:	jmp    0x40e070
  40e0a5:	nop
  40e0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0b0:	push   rdi
  40e0b1:	push   rsi
  40e0b2:	mov    eax,0x1030
  40e0b7:	push   rbx
  40e0b8:	call   0x4294a0
  40e0bd:	sub    rsp,rax
  40e0c0:	mov    rdi,rcx
  40e0c3:	lea    rbx,[rsp+0x830]
  40e0cb:	lea    rcx,[rip+0x2e89c]        # 0x43c96e
  40e0d2:	call   0x42a4d0
  40e0d7:	mov    rdx,rbx
  40e0da:	mov    rcx,rdi
  40e0dd:	mov    rsi,rax
  40e0e0:	call   0x423790
  40e0e5:	test   eax,eax
  40e0e7:	js     0x40e1a9
  40e0ed:	lea    rdi,[rsp+0xc30]
  40e0f5:	mov    rcx,rbx
  40e0f8:	lea    rbx,[rsp+0x430]
  40e100:	mov    rdx,rdi
  40e103:	call   0x4275b0
  40e108:	lea    rax,[rip+0x2e89a]        # 0x43c9a9
  40e10f:	lea    r8,[rip+0x2e88d]        # 0x43c9a3
  40e116:	mov    r9,rdi
  40e119:	mov    edx,0x400
  40e11e:	mov    rcx,rbx
  40e121:	mov    QWORD PTR [rsp+0x20],rax
  40e126:	call   0x426220
  40e12b:	mov    rcx,rbx
  40e12e:	call   0x40dff0
  40e133:	test   rsi,rsi
  40e136:	je     0x40e13d
  40e138:	cmp    BYTE PTR [rsi],0x0
  40e13b:	jne    0x40e186
  40e13d:	lea    rsi,[rsp+0x30]
  40e142:	mov    rcx,rsi
  40e145:	call   0x4276f0
  40e14a:	test   al,al
  40e14c:	jne    0x40e159
  40e14e:	add    rsp,0x1030
  40e155:	pop    rbx
  40e156:	pop    rsi
  40e157:	pop    rdi
  40e158:	ret    
  40e159:	lea    rax,[rip+0x2e850]        # 0x43c9b0
  40e160:	lea    r8,[rip+0x2e83c]        # 0x43c9a3
  40e167:	mov    rcx,rbx
  40e16a:	mov    r9,rsi
  40e16d:	mov    edx,0x400
  40e172:	mov    QWORD PTR [rsp+0x20],rax
  40e177:	call   0x426220
  40e17c:	mov    rcx,rbx
  40e17f:	call   0x40dff0
  40e184:	jmp    0x40e14e
  40e186:	mov    rcx,rsi
  40e189:	call   0x4249c0
  40e18e:	lea    rcx,[rsp+0x30]
  40e193:	mov    QWORD PTR [rsp+0x30],rax
  40e198:	call   0x407980
  40e19d:	mov    rcx,QWORD PTR [rsp+0x30]
  40e1a2:	call   0x40dff0
  40e1a7:	jmp    0x40e14e
  40e1a9:	call   QWORD PTR [rip+0x4ea05]        # 0x45cbb4
  40e1af:	lea    rdx,[rip+0x2e7c2]        # 0x43c978
  40e1b6:	lea    rcx,[rax+0x60]
  40e1ba:	mov    r8,rdi
  40e1bd:	call   0x426370
  40e1c2:	mov    ecx,0x1
  40e1c7:	call   0x42a540
  40e1cc:	nop
  40e1cd:	nop    DWORD PTR [rax]
  40e1d0:	push   rbx
  40e1d1:	sub    rsp,0x20
  40e1d5:	test   rcx,rcx
  40e1d8:	je     0x40e253
  40e1da:	lea    rdx,[rip+0x2e7db]        # 0x43c9bc
  40e1e1:	mov    rbx,rcx
  40e1e4:	call   0x427790
  40e1e9:	test   eax,eax
  40e1eb:	jne    0x40e200
  40e1ed:	mov    DWORD PTR [rip+0x4cfbd],0x1        # 0x45b1b4
  40e1f7:	add    rsp,0x20
  40e1fb:	pop    rbx
  40e1fc:	ret    
  40e1fd:	nop    DWORD PTR [rax]
  40e200:	lea    rdx,[rip+0x2e7c1]        # 0x43c9c8
  40e207:	mov    rcx,rbx
  40e20a:	call   0x427790
  40e20f:	test   eax,eax
  40e211:	jne    0x40e263
  40e213:	mov    DWORD PTR [rip+0x4cf97],0x2        # 0x45b1b4
  40e21d:	add    rsp,0x20
  40e221:	pop    rbx
  40e222:	ret    
  40e223:	lea    rdx,[rip+0x2e7b4]        # 0x43c9de
  40e22a:	mov    rcx,rbx
  40e22d:	call   0x427790
  40e232:	test   eax,eax
  40e234:	je     0x40e253
  40e236:	lea    r9,[rip+0x2e7a1]        # 0x43c9de
  40e23d:	lea    r8,[rip+0x2e79f]        # 0x43c9e3
  40e244:	lea    rcx,[rip+0x2e6ad]        # 0x43c8f8
  40e24b:	mov    rdx,rbx
  40e24e:	call   0x405d90
  40e253:	mov    DWORD PTR [rip+0x4cf57],0x0        # 0x45b1b4
  40e25d:	add    rsp,0x20
  40e261:	pop    rbx
  40e262:	ret    
  40e263:	lea    rdx,[rip+0x2e769]        # 0x43c9d3
  40e26a:	mov    rcx,rbx
  40e26d:	call   0x427790
  40e272:	test   eax,eax
  40e274:	jne    0x40e223
  40e276:	mov    DWORD PTR [rip+0x4cf34],0x3        # 0x45b1b4
  40e280:	jmp    0x40e1f7
  40e285:	nop
  40e286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e290:	push   rbx
  40e291:	sub    rsp,0x20
  40e295:	test   rcx,rcx
  40e298:	je     0x40e2ad
  40e29a:	lea    rdx,[rip+0x2e74e]        # 0x43c9ef
  40e2a1:	mov    rbx,rcx
  40e2a4:	call   0x427790
  40e2a9:	test   eax,eax
  40e2ab:	jne    0x40e2c0
  40e2ad:	mov    DWORD PTR [rip+0x4cef9],0x0        # 0x45b1b0
  40e2b7:	add    rsp,0x20
  40e2bb:	pop    rbx
  40e2bc:	ret    
  40e2bd:	nop    DWORD PTR [rax]
  40e2c0:	lea    rdx,[rip+0x2e737]        # 0x43c9fe
  40e2c7:	mov    rcx,rbx
  40e2ca:	call   0x427790
  40e2cf:	test   eax,eax
  40e2d1:	jne    0x40e2e3
  40e2d3:	mov    DWORD PTR [rip+0x4ced3],0x1        # 0x45b1b0
  40e2dd:	add    rsp,0x20
  40e2e1:	pop    rbx
  40e2e2:	ret    
  40e2e3:	lea    rdx,[rip+0x2e723]        # 0x43ca0d
  40e2ea:	mov    rcx,rbx
  40e2ed:	call   0x427790
  40e2f2:	test   eax,eax
  40e2f4:	jne    0x40e302
  40e2f6:	mov    DWORD PTR [rip+0x4ceb0],0x2        # 0x45b1b0
  40e300:	jmp    0x40e2b7
  40e302:	lea    rdx,[rip+0x2e70a]        # 0x43ca13
  40e309:	mov    rcx,rbx
  40e30c:	call   0x427790
  40e311:	test   eax,eax
  40e313:	jne    0x40e321
  40e315:	mov    DWORD PTR [rip+0x4ce91],0x3        # 0x45b1b0
  40e31f:	jmp    0x40e2b7
  40e321:	lea    r9,[rip+0x2e6c7]        # 0x43c9ef
  40e328:	lea    r8,[rip+0x2e6ea]        # 0x43ca19
  40e32f:	lea    rcx,[rip+0x2e5c2]        # 0x43c8f8
  40e336:	mov    rdx,rbx
  40e339:	call   0x405d90
  40e33e:	jmp    0x40e2ad
  40e343:	nop    DWORD PTR [rax]
  40e346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e350:	push   rbx
  40e351:	sub    rsp,0x20
  40e355:	test   rcx,rcx
  40e358:	je     0x40e3d3
  40e35a:	lea    rdx,[rip+0x2e6ca]        # 0x43ca2b
  40e361:	mov    rbx,rcx
  40e364:	call   0x427790
  40e369:	test   eax,eax
  40e36b:	jne    0x40e380
  40e36d:	mov    DWORD PTR [rip+0x4ce2d],0x1        # 0x45b1a4
  40e377:	add    rsp,0x20
  40e37b:	pop    rbx
  40e37c:	ret    
  40e37d:	nop    DWORD PTR [rax]
  40e380:	lea    rdx,[rip+0x2e6ac]        # 0x43ca33
  40e387:	mov    rcx,rbx
  40e38a:	call   0x427790
  40e38f:	test   eax,eax
  40e391:	jne    0x40e3a3
  40e393:	mov    DWORD PTR [rip+0x4ce07],0x2        # 0x45b1a4
  40e39d:	add    rsp,0x20
  40e3a1:	pop    rbx
  40e3a2:	ret    
  40e3a3:	lea    rdx,[rip+0x2e634]        # 0x43c9de
  40e3aa:	mov    rcx,rbx
  40e3ad:	call   0x427790
  40e3b2:	test   eax,eax
  40e3b4:	je     0x40e3d3
  40e3b6:	lea    r9,[rip+0x2e621]        # 0x43c9de
  40e3bd:	lea    r8,[rip+0x2e673]        # 0x43ca37
  40e3c4:	lea    rcx,[rip+0x2e52d]        # 0x43c8f8
  40e3cb:	mov    rdx,rbx
  40e3ce:	call   0x405d90
  40e3d3:	mov    DWORD PTR [rip+0x4cdc7],0x0        # 0x45b1a4
  40e3dd:	add    rsp,0x20
  40e3e1:	pop    rbx
  40e3e2:	ret    
  40e3e3:	nop    DWORD PTR [rax]
  40e3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3f0:	push   rbx
  40e3f1:	sub    rsp,0x20
  40e3f5:	test   rcx,rcx
  40e3f8:	je     0x40e433
  40e3fa:	lea    rdx,[rip+0x2e63b]        # 0x43ca3c
  40e401:	mov    rbx,rcx
  40e404:	call   0x427790
  40e409:	test   eax,eax
  40e40b:	jne    0x40e420
  40e40d:	mov    DWORD PTR [rip+0x4cd95],0x1        # 0x45b1ac
  40e417:	add    rsp,0x20
  40e41b:	pop    rbx
  40e41c:	ret    
  40e41d:	nop    DWORD PTR [rax]
  40e420:	lea    rdx,[rip+0x2e621]        # 0x43ca48
  40e427:	mov    rcx,rbx
  40e42a:	call   0x40eb70
  40e42f:	test   al,al
  40e431:	jne    0x40e443
  40e433:	mov    DWORD PTR [rip+0x4cd6f],0x0        # 0x45b1ac
  40e43d:	add    rsp,0x20
  40e441:	pop    rbx
  40e442:	ret    
  40e443:	mov    DWORD PTR [rip+0x4cd5f],0x2        # 0x45b1ac
  40e44d:	add    rsp,0x20
  40e451:	pop    rbx
  40e452:	ret    
  40e453:	nop    DWORD PTR [rax]
  40e456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e460:	push   rbx
  40e461:	sub    rsp,0x20
  40e465:	test   rcx,rcx
  40e468:	je     0x40e4a3
  40e46a:	lea    rdx,[rip+0x2e5e9]        # 0x43ca5a
  40e471:	mov    rbx,rcx
  40e474:	call   0x427790
  40e479:	test   eax,eax
  40e47b:	jne    0x40e490
  40e47d:	mov    DWORD PTR [rip+0x4cd21],0x2        # 0x45b1a8
  40e487:	add    rsp,0x20
  40e48b:	pop    rbx
  40e48c:	ret    
  40e48d:	nop    DWORD PTR [rax]
  40e490:	lea    rdx,[rip+0x2e5ca]        # 0x43ca61
  40e497:	mov    rcx,rbx
  40e49a:	call   0x40eb70
  40e49f:	test   al,al
  40e4a1:	jne    0x40e4b3
  40e4a3:	mov    DWORD PTR [rip+0x4ccfb],0x0        # 0x45b1a8
  40e4ad:	add    rsp,0x20
  40e4b1:	pop    rbx
  40e4b2:	ret    
  40e4b3:	mov    DWORD PTR [rip+0x4cceb],0x1        # 0x45b1a8
  40e4bd:	add    rsp,0x20
  40e4c1:	pop    rbx
  40e4c2:	ret    
  40e4c3:	nop
  40e4c4:	nop
  40e4c5:	nop
  40e4c6:	nop
  40e4c7:	nop
  40e4c8:	nop
  40e4c9:	nop
  40e4ca:	nop
  40e4cb:	nop
  40e4cc:	nop
  40e4cd:	nop
  40e4ce:	nop
  40e4cf:	nop
  40e4d0:	push   r15
  40e4d2:	push   r14
  40e4d4:	push   r13
  40e4d6:	push   r12
  40e4d8:	push   rbp
  40e4d9:	push   rdi
  40e4da:	push   rsi
  40e4db:	push   rbx
  40e4dc:	sub    rsp,0x158
  40e4e3:	cmp    ecx,0x6
  40e4e6:	ja     0x40e9a0
  40e4ec:	cmp    ecx,0x1
  40e4ef:	jae    0x40e970
  40e4f5:	mov    rax,QWORD PTR [rip+0x463e4]        # 0x4548e0
  40e4fc:	mov    r9,QWORD PTR [rax+0x138]
  40e503:	mov    BYTE PTR [rip+0x4bc36],0x0        # 0x45a140
  40e50a:	mov    QWORD PTR [rsp+0x38],r9
  40e50f:	xor    r8d,r8d
  40e512:	cmp    BYTE PTR [r9],0x0
  40e516:	je     0x40e650
  40e51c:	mov    rbp,QWORD PTR [rip+0x463bd]        # 0x4548e0
  40e523:	mov    esi,ecx
  40e525:	mov    r14,rbp
  40e528:	mov    QWORD PTR [rsp+0x20],rbp
  40e52d:	mov    r13,rbp
  40e530:	mov    r12,rbp
  40e533:	lea    r10,[rip+0x4bc06]        # 0x45a140
  40e53a:	mov    rdx,r10
  40e53d:	mov    ecx,DWORD PTR [rdx]
  40e53f:	add    rdx,0x4
  40e543:	lea    eax,[rcx-0x1010101]
  40e549:	not    ecx
  40e54b:	and    eax,ecx
  40e54d:	and    eax,0x80808080
  40e552:	je     0x40e53d
  40e554:	mov    ecx,eax
  40e556:	shr    ecx,0x10
  40e559:	test   eax,0x8080
  40e55e:	cmove  eax,ecx
  40e561:	lea    rcx,[rdx+0x2]
  40e565:	cmove  rdx,rcx
  40e569:	add    al,al
  40e56b:	sbb    rdx,0x3
  40e56f:	sub    rdx,r10
  40e572:	cmp    rdx,0xff
  40e579:	ja     0x40e650
  40e57f:	lea    rbx,[rsp+0x40]
  40e584:	xor    eax,eax
  40e586:	mov    ecx,0x20
  40e58b:	test   r8b,r8b
  40e58e:	mov    rdi,rbx
  40e591:	rep stos QWORD PTR es:[rdi],rax
  40e594:	mov    BYTE PTR [rdi],0x0
  40e597:	je     0x40e983
  40e59d:	movzx  ecx,BYTE PTR [r9]
  40e5a1:	lea    eax,[rcx-0x23]
  40e5a4:	cmp    al,0x5b
  40e5a6:	ja     0x40e960
  40e5ac:	lea    rdx,[rip+0x2ea35]        # 0x43cfe8
  40e5b3:	movzx  eax,al
  40e5b6:	movsxd rax,DWORD PTR [rdx+rax*4]
  40e5ba:	add    rdx,rax
  40e5bd:	jmp    rdx
  40e5bf:	nop
  40e5c0:	lea    rcx,[r9+0x1]
  40e5c4:	call   0x424900
  40e5c9:	lea    rdx,[rip+0x2ea16]        # 0x43cfe6
  40e5d0:	mov    rcx,rax
  40e5d3:	mov    r15,rax
  40e5d6:	call   0x42a410
  40e5db:	movsxd rdi,eax
  40e5de:	mov    rdx,r15
  40e5e1:	mov    BYTE PTR [r15+rdi*1],0x0
  40e5e6:	mov    rcx,QWORD PTR [rbp+0x110]
  40e5ed:	call   0x40eb20
  40e5f2:	test   rax,rax
  40e5f5:	je     0x40e608
  40e5f7:	mov    r8d,0x101
  40e5fd:	mov    rdx,rax
  40e600:	mov    rcx,rbx
  40e603:	call   0x424a90
  40e608:	mov    rcx,r15
  40e60b:	add    rdi,0x1
  40e60f:	call   0x42a4e8
  40e614:	add    QWORD PTR [rsp+0x38],rdi
  40e619:	nop    DWORD PTR [rax+0x0]
  40e620:	lea    rcx,[rip+0x4bb19]        # 0x45a140
  40e627:	mov    r8d,0x101
  40e62d:	mov    rdx,rbx
  40e630:	call   0x4249e0
  40e635:	xor    r8d,r8d
  40e638:	mov    rax,QWORD PTR [rsp+0x38]
  40e63d:	lea    r9,[rax+0x1]
  40e641:	mov    QWORD PTR [rsp+0x38],r9
  40e646:	cmp    BYTE PTR [rax+0x1],0x0
  40e64a:	jne    0x40e533
  40e650:	lea    rax,[rip+0x4bae9]        # 0x45a140
  40e657:	add    rsp,0x158
  40e65e:	pop    rbx
  40e65f:	pop    rsi
  40e660:	pop    rdi
  40e661:	pop    rbp
  40e662:	pop    r12
  40e664:	pop    r13
  40e666:	pop    r14
  40e668:	pop    r15
  40e66a:	ret    
  40e66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e670:	mov    rcx,QWORD PTR [r12]
  40e674:	test   rcx,rcx
  40e677:	je     0x40e620
  40e679:	call   0x427e50
  40e67e:	test   rax,rax
  40e681:	je     0x40e620
  40e683:	mov    rcx,QWORD PTR [r12]
  40e687:	call   0x427e50
  40e68c:	mov    r8d,0x101
  40e692:	mov    rdx,rax
  40e695:	mov    rcx,rbx
  40e698:	call   0x424a90
  40e69d:	jmp    0x40e620
  40e69f:	nop
  40e6a0:	lea    rdx,[rsp+0x38]
  40e6a5:	mov    r8d,0x8
  40e6ab:	mov    rcx,r9
  40e6ae:	call   0x42a3d0
  40e6b3:	sub    QWORD PTR [rsp+0x38],0x1
  40e6b9:	mov    BYTE PTR [rsp+0x40],al
  40e6bd:	jmp    0x40e620
  40e6c2:	mov    rax,QWORD PTR [rip+0x46217]        # 0x4548e0
  40e6c9:	mov    rcx,QWORD PTR [rax]
  40e6cc:	test   rcx,rcx
  40e6cf:	je     0x40e620
  40e6d5:	call   0x427f30
  40e6da:	mov    r8d,0x101
  40e6e0:	mov    rdx,rax
  40e6e3:	mov    rcx,rbx
  40e6e6:	call   0x424a90
  40e6eb:	jmp    0x40e620
  40e6f0:	call   0x407890
  40e6f5:	cmp    al,0x1
  40e6f7:	sbb    eax,eax
  40e6f9:	and    eax,0x1b
  40e6fc:	add    eax,0x23
  40e6ff:	mov    BYTE PTR [rsp+0x40],al
  40e703:	jmp    0x40e620
  40e708:	nop    DWORD PTR [rax+rax*1+0x0]
  40e710:	mov    rcx,QWORD PTR [r14]
  40e713:	test   rcx,rcx
  40e716:	je     0x40ea70
  40e71c:	call   0x427df0
  40e721:	cmp    eax,0x2
  40e724:	ja     0x40e9ea
  40e72a:	cmp    eax,0x1
  40e72d:	sbb    eax,eax
  40e72f:	not    eax
  40e731:	and    eax,0x2a
  40e734:	mov    BYTE PTR [rsp+0x40],al
  40e738:	jmp    0x40e620
  40e73d:	nop    DWORD PTR [rax]
  40e740:	cmp    QWORD PTR [r13+0x0],0x0
  40e745:	je     0x40e620
  40e74b:	call   0x407930
  40e750:	mov    r8d,0x101
  40e756:	mov    rdx,rax
  40e759:	mov    rcx,rbx
  40e75c:	call   0x424a90
  40e761:	jmp    0x40e620
  40e766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e770:	lea    rcx,[r9+0x1]
  40e774:	call   0x424900
  40e779:	lea    rdx,[rip+0x2e862]        # 0x43cfe2
  40e780:	mov    rcx,rax
  40e783:	mov    r15,rax
  40e786:	call   0x42a410
  40e78b:	lea    rdx,[rip+0x2e852]        # 0x43cfe4
  40e792:	movsxd rdi,eax
  40e795:	mov    rcx,r15
  40e798:	mov    BYTE PTR [r15+rdi*1],0x0
  40e79d:	call   0x424fe0
  40e7a2:	test   rax,rax
  40e7a5:	je     0x40e7d3
  40e7a7:	mov    r8,rax
  40e7aa:	mov    edx,0x101
  40e7af:	mov    rcx,rbx
  40e7b2:	mov    QWORD PTR [rsp+0x28],rax
  40e7b7:	call   0x42a518
  40e7bc:	test   rax,rax
  40e7bf:	mov    r9,QWORD PTR [rsp+0x28]
  40e7c4:	je     0x40ea84
  40e7ca:	mov    rcx,r9
  40e7cd:	call   QWORD PTR [rip+0x4e451]        # 0x45cc24
  40e7d3:	cmp    BYTE PTR [rsp+0x40],0x0
  40e7d8:	je     0x40e608
  40e7de:	mov    rdx,rbx
  40e7e1:	mov    ecx,DWORD PTR [rdx]
  40e7e3:	add    rdx,0x4
  40e7e7:	lea    eax,[rcx-0x1010101]
  40e7ed:	not    ecx
  40e7ef:	and    eax,ecx
  40e7f1:	and    eax,0x80808080
  40e7f6:	je     0x40e7e1
  40e7f8:	mov    ecx,eax
  40e7fa:	shr    ecx,0x10
  40e7fd:	test   eax,0x8080
  40e802:	cmove  eax,ecx
  40e805:	lea    rcx,[rdx+0x2]
  40e809:	cmove  rdx,rcx
  40e80d:	add    al,al
  40e80f:	sbb    rdx,0x3
  40e813:	sub    rdx,rbx
  40e816:	sub    rdx,0x1
  40e81a:	cmp    BYTE PTR [rsp+rdx*1+0x40],0xa
  40e81f:	jne    0x40e608
  40e825:	mov    BYTE PTR [rsp+rdx*1+0x40],0x0
  40e82a:	jmp    0x40e608
  40e82f:	nop
  40e830:	mov    rdi,QWORD PTR [rip+0x460a9]        # 0x4548e0
  40e837:	mov    rcx,QWORD PTR [rdi]
  40e83a:	test   rcx,rcx
  40e83d:	je     0x40e620
  40e843:	call   0x427de8
  40e848:	mov    rcx,QWORD PTR [rdi]
  40e84b:	mov    r15,rax
  40e84e:	call   0x427f30
  40e853:	mov    rdx,r15
  40e856:	mov    rcx,rax
  40e859:	call   0x42a420
  40e85e:	test   eax,eax
  40e860:	je     0x40e9d0
  40e866:	lea    rcx,[rip+0x2e768]        # 0x43cfd5
  40e86d:	call   0x42a4d0
  40e872:	test   rax,rax
  40e875:	mov    r15,rax
  40e878:	je     0x40e895
  40e87a:	mov    rcx,QWORD PTR [rdi]
  40e87d:	call   0x427f30
  40e882:	mov    rcx,r15
  40e885:	mov    rdx,rax
  40e888:	call   0x42a420
  40e88d:	test   eax,eax
  40e88f:	je     0x40e9d0
  40e895:	mov    rcx,QWORD PTR [rdi]
  40e898:	jmp    0x40e6d5
  40e89d:	nop    DWORD PTR [rax]
  40e8a0:	cmp    esi,0x6
  40e8a3:	ja     0x40e620
  40e8a9:	lea    rax,[rip+0x2e8a8]        # 0x43d158
  40e8b0:	mov    edx,esi
  40e8b2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40e8b6:	add    rax,rdx
  40e8b9:	jmp    rax
  40e8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8c0:	mov    rax,QWORD PTR [rip+0x46019]        # 0x4548e0
  40e8c7:	mov    rcx,QWORD PTR [rax]
  40e8ca:	test   rcx,rcx
  40e8cd:	je     0x40e620
  40e8d3:	call   0x427e90
  40e8d8:	test   rax,rax
  40e8db:	mov    rdi,rax
  40e8de:	je     0x40e620
  40e8e4:	movzx  eax,BYTE PTR [rax]
  40e8e7:	test   al,al
  40e8e9:	je     0x40e620
  40e8ef:	cmp    al,0x2f
  40e8f1:	je     0x40e620
  40e8f7:	cmp    al,0x5c
  40e8f9:	je     0x40e620
  40e8ff:	movzx  ecx,al
  40e902:	call   QWORD PTR [rip+0x4e3f4]        # 0x45ccfc
  40e908:	test   eax,eax
  40e90a:	je     0x40e926
  40e90c:	cmp    BYTE PTR [rdi+0x1],0x3a
  40e910:	jne    0x40e926
  40e912:	movzx  eax,BYTE PTR [rdi+0x2]
  40e916:	cmp    al,0x5c
  40e918:	je     0x40e620
  40e91e:	cmp    al,0x2f
  40e920:	je     0x40e620
  40e926:	mov    r8d,0x101
  40e92c:	mov    rdx,rdi
  40e92f:	mov    rcx,rbx
  40e932:	call   0x424a90
  40e937:	mov    rax,QWORD PTR [rsp+0x38]
  40e93c:	cmp    BYTE PTR [rax],0x6d
  40e93f:	jne    0x40e620
  40e945:	lea    rdx,[rip+0x2e694]        # 0x43cfe0
  40e94c:	mov    rcx,rbx
  40e94f:	call   0x42a410
  40e954:	mov    BYTE PTR [rsp+rax*1+0x40],0x0
  40e959:	jmp    0x40e620
  40e95e:	xchg   ax,ax
  40e960:	mov    BYTE PTR [rsp+0x40],cl
  40e964:	jmp    0x40e620
  40e969:	nop    DWORD PTR [rax+0x0]
  40e970:	mov    rax,QWORD PTR [rip+0x45f69]        # 0x4548e0
  40e977:	mov    r9,QWORD PTR [rax+0x140]
  40e97e:	jmp    0x40e503
  40e983:	movzx  eax,BYTE PTR [r9]
  40e987:	mov    r8d,0x1
  40e98d:	cmp    al,0x25
  40e98f:	je     0x40e638
  40e995:	mov    BYTE PTR [rsp+0x40],al
  40e999:	jmp    0x40e620
  40e99e:	xchg   ax,ax
  40e9a0:	cmp    ecx,0x7
  40e9a3:	jne    0x40e9c0
  40e9a5:	mov    rax,QWORD PTR [rip+0x45f34]        # 0x4548e0
  40e9ac:	mov    r9,QWORD PTR [rax+0x148]
  40e9b3:	jmp    0x40e503
  40e9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9c0:	lea    r9,[rip+0x2e609]        # 0x43cfd0
  40e9c7:	jmp    0x40e503
  40e9cc:	nop    DWORD PTR [rax+0x0]
  40e9d0:	lea    rdx,[rip+0x2e5fc]        # 0x43cfd3
  40e9d7:	mov    r8d,0x101
  40e9dd:	mov    rcx,rbx
  40e9e0:	call   0x424a90
  40e9e5:	jmp    0x40e620
  40e9ea:	cmp    eax,0x3
  40e9ed:	mov    edx,0x3f
  40e9f2:	mov    eax,0x21
  40e9f7:	cmovne eax,edx
  40e9fa:	mov    BYTE PTR [rsp+0x40],al
  40e9fe:	jmp    0x40e620
  40ea03:	mov    BYTE PTR [rsp+0x40],0x24
  40ea08:	jmp    0x40e620
  40ea0d:	mov    BYTE PTR [rsp+0x40],0x22
  40ea12:	jmp    0x40e620
  40ea17:	mov    BYTE PTR [rsp+0x40],0x27
  40ea1c:	jmp    0x40e620
  40ea21:	mov    BYTE PTR [rsp+0x40],0x2a
  40ea26:	jmp    0x40e620
  40ea2b:	mov    BYTE PTR [rsp+0x40],0x2d
  40ea30:	jmp    0x40e620
  40ea35:	mov    rax,QWORD PTR [rsp+0x20]
  40ea3a:	cmp    QWORD PTR [rax],0x0
  40ea3e:	je     0x40ea7a
  40ea40:	mov    rax,QWORD PTR [rsp+0x20]
  40ea45:	cmp    BYTE PTR [rax+0x11b],0x1
  40ea4c:	sbb    eax,eax
  40ea4e:	and    eax,0xffffffdf
  40ea51:	add    eax,0x5e
  40ea54:	mov    BYTE PTR [rsp+0x40],al
  40ea58:	jmp    0x40e620
  40ea5d:	mov    BYTE PTR [rsp+0x40],0x28
  40ea62:	jmp    0x40e620
  40ea67:	nop    WORD PTR [rax+rax*1+0x0]
  40ea70:	mov    BYTE PTR [rsp+0x40],0x3f
  40ea75:	jmp    0x40e620
  40ea7a:	mov    BYTE PTR [rsp+0x40],0x21
  40ea7f:	jmp    0x40e620
  40ea84:	mov    BYTE PTR [rsp+0x40],0x0
  40ea89:	jmp    0x40e7ca
  40ea8e:	nop
  40ea8f:	nop
  40ea90:	push   rbx
  40ea91:	sub    rsp,0x20
  40ea95:	movzx  edx,BYTE PTR [rcx]
  40ea98:	mov    rbx,rcx
  40ea9b:	test   dl,dl
  40ea9d:	je     0x40eac0
  40ea9f:	nop
  40eaa0:	test   dl,dl
  40eaa2:	js     0x40eab5
  40eaa4:	lea    rcx,[rip+0x2e6d5]        # 0x43d180
  40eaab:	call   0x42a428
  40eab0:	test   rax,rax
  40eab3:	je     0x40ead0
  40eab5:	add    rbx,0x1
  40eab9:	movzx  edx,BYTE PTR [rbx]
  40eabc:	test   dl,dl
  40eabe:	jne    0x40eaa0
  40eac0:	mov    eax,0x1
  40eac5:	add    rsp,0x20
  40eac9:	pop    rbx
  40eaca:	ret    
  40eacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ead0:	xor    eax,eax
  40ead2:	add    rsp,0x20
  40ead6:	pop    rbx
  40ead7:	ret    
  40ead8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eae0:	sub    rsp,0x28
  40eae4:	mov    ecx,0x20
  40eae9:	call   0x424800
  40eaee:	mov    QWORD PTR [rax],0x0
  40eaf5:	mov    QWORD PTR [rax+0x8],0x0
  40eafd:	mov    QWORD PTR [rax+0x10],0x0
  40eb05:	mov    QWORD PTR [rax+0x18],0x0
  40eb0d:	add    rsp,0x28
  40eb11:	ret    
  40eb12:	nop    DWORD PTR [rax+0x0]
  40eb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb20:	push   rsi
  40eb21:	push   rbx
  40eb22:	sub    rsp,0x28
  40eb26:	test   rcx,rcx
  40eb29:	je     0x40eb63
  40eb2b:	mov    rbx,QWORD PTR [rcx+0x18]
  40eb2f:	mov    rsi,rdx
  40eb32:	test   rbx,rbx
  40eb35:	jne    0x40eb49
  40eb37:	jmp    0x40eb63
  40eb39:	nop    DWORD PTR [rax+0x0]
  40eb40:	mov    rbx,QWORD PTR [rbx+0x18]
  40eb44:	test   rbx,rbx
  40eb47:	je     0x40eb63
  40eb49:	mov    rcx,QWORD PTR [rbx]
  40eb4c:	mov    rdx,rsi
  40eb4f:	call   0x42a420
  40eb54:	test   eax,eax
  40eb56:	jne    0x40eb40
  40eb58:	mov    rax,QWORD PTR [rbx+0x8]
  40eb5c:	add    rsp,0x28
  40eb60:	pop    rbx
  40eb61:	pop    rsi
  40eb62:	ret    
  40eb63:	xor    eax,eax
  40eb65:	add    rsp,0x28
  40eb69:	pop    rbx
  40eb6a:	pop    rsi
  40eb6b:	ret    
  40eb6c:	nop    DWORD PTR [rax+0x0]
  40eb70:	push   rdi
  40eb71:	push   rsi
  40eb72:	push   rbx
  40eb73:	sub    rsp,0x20
  40eb77:	test   rcx,rcx
  40eb7a:	je     0x40ebc6
  40eb7c:	mov    rdi,rdx
  40eb7f:	mov    rbx,rcx
  40eb82:	call   0x42a400
  40eb87:	lea    rdx,[rip+0x2e632]        # 0x43d1c0
  40eb8e:	mov    r8,rax
  40eb91:	mov    rcx,rbx
  40eb94:	mov    rsi,rax
  40eb97:	call   0x427870
  40eb9c:	test   eax,eax
  40eb9e:	jne    0x40ebb0
  40eba0:	mov    eax,0x1
  40eba5:	add    rsp,0x20
  40eba9:	pop    rbx
  40ebaa:	pop    rsi
  40ebab:	pop    rdi
  40ebac:	ret    
  40ebad:	nop    DWORD PTR [rax]
  40ebb0:	lea    rdx,[rip+0x2e60e]        # 0x43d1c5
  40ebb7:	mov    r8,rsi
  40ebba:	mov    rcx,rbx
  40ebbd:	call   0x427870
  40ebc2:	test   eax,eax
  40ebc4:	jne    0x40ebd0
  40ebc6:	xor    eax,eax
  40ebc8:	add    rsp,0x20
  40ebcc:	pop    rbx
  40ebcd:	pop    rsi
  40ebce:	pop    rdi
  40ebcf:	ret    
  40ebd0:	lea    rdx,[rip+0x2e5f4]        # 0x43d1cb
  40ebd7:	mov    r8,rsi
  40ebda:	mov    rcx,rbx
  40ebdd:	call   0x427870
  40ebe2:	test   eax,eax
  40ebe4:	je     0x40eba0
  40ebe6:	lea    rdx,[rip+0x2e5e2]        # 0x43d1cf
  40ebed:	mov    r8,rsi
  40ebf0:	mov    rcx,rbx
  40ebf3:	call   0x427870
  40ebf8:	test   eax,eax
  40ebfa:	je     0x40ebc6
  40ebfc:	cmp    rsi,0x2
  40ec00:	mov    eax,0x2
  40ec05:	lea    rdx,[rip+0x2e5c6]        # 0x43d1d2
  40ec0c:	cmovb  rsi,rax
  40ec10:	mov    rcx,rbx
  40ec13:	mov    r8,rsi
  40ec16:	call   0x427870
  40ec1b:	test   eax,eax
  40ec1d:	je     0x40eba0
  40ec1f:	lea    rdx,[rip+0x2e5af]        # 0x43d1d5
  40ec26:	mov    r8,rsi
  40ec29:	mov    rcx,rbx
  40ec2c:	call   0x427870
  40ec31:	test   eax,eax
  40ec33:	je     0x40ebc6
  40ec35:	lea    rdx,[rip+0x2e59d]        # 0x43d1d9
  40ec3c:	mov    rcx,rbx
  40ec3f:	call   0x427790
  40ec44:	test   eax,eax
  40ec46:	je     0x40eba0
  40ec4c:	lea    rdx,[rip+0x2e588]        # 0x43d1db
  40ec53:	mov    rcx,rbx
  40ec56:	call   0x427790
  40ec5b:	test   eax,eax
  40ec5d:	je     0x40ebc6
  40ec63:	test   rdi,rdi
  40ec66:	je     0x40eba0
  40ec6c:	lea    r9,[rip+0x2e55f]        # 0x43d1d2
  40ec73:	lea    rcx,[rip+0x2e566]        # 0x43d1e0
  40ec7a:	mov    r8,rdi
  40ec7d:	mov    rdx,rbx
  40ec80:	call   0x405d90
  40ec85:	jmp    0x40eba0
  40ec8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ec90:	push   rbx
  40ec91:	sub    rsp,0x40
  40ec95:	test   rcx,rcx
  40ec98:	mov    eax,edx
  40ec9a:	mov    ebx,r8d
  40ec9d:	je     0x40eca7
  40ec9f:	cmp    BYTE PTR [rcx],0x0
  40eca2:	mov    eax,r8d
  40eca5:	jne    0x40ecb0
  40eca7:	add    rsp,0x40
  40ecab:	pop    rbx
  40ecac:	ret    
  40ecad:	nop    DWORD PTR [rax]
  40ecb0:	lea    rdx,[rsp+0x38]
  40ecb5:	xor    r8d,r8d
  40ecb8:	mov    DWORD PTR [rsp+0x2c],r9d
  40ecbd:	call   0x42a3d0
  40ecc2:	mov    r9d,DWORD PTR [rsp+0x2c]
  40ecc7:	test   r9b,r9b
  40ecca:	jne    0x40eca7
  40eccc:	mov    rdx,QWORD PTR [rsp+0x38]
  40ecd1:	cmp    BYTE PTR [rdx],0x0
  40ecd4:	cmovne eax,ebx
  40ecd7:	add    rsp,0x40
  40ecdb:	pop    rbx
  40ecdc:	ret    
  40ecdd:	nop    DWORD PTR [rax]
  40ece0:	push   rdi
  40ece1:	push   rsi
  40ece2:	push   rbx
  40ece3:	sub    rsp,0x30
  40ece7:	mov    edi,DWORD PTR [rsp+0x70]
  40eceb:	mov    ebx,r8d
  40ecee:	mov    esi,r9d
  40ecf1:	call   0x40eb20
  40ecf6:	test   rax,rax
  40ecf9:	je     0x40ed02
  40ecfb:	cmp    BYTE PTR [rax],0x0
  40ecfe:	mov    ebx,esi
  40ed00:	jne    0x40ed10
  40ed02:	mov    eax,ebx
  40ed04:	add    rsp,0x30
  40ed08:	pop    rbx
  40ed09:	pop    rsi
  40ed0a:	pop    rdi
  40ed0b:	ret    
  40ed0c:	nop    DWORD PTR [rax+0x0]
  40ed10:	lea    rdx,[rsp+0x28]
  40ed15:	xor    r8d,r8d
  40ed18:	mov    rcx,rax
  40ed1b:	call   0x42a3d0
  40ed20:	test   dil,dil
  40ed23:	mov    ebx,eax
  40ed25:	jne    0x40ed02
  40ed27:	mov    rax,QWORD PTR [rsp+0x28]
  40ed2c:	cmp    BYTE PTR [rax],0x0
  40ed2f:	cmovne ebx,esi
  40ed32:	mov    eax,ebx
  40ed34:	add    rsp,0x30
  40ed38:	pop    rbx
  40ed39:	pop    rsi
  40ed3a:	pop    rdi
  40ed3b:	ret    
  40ed3c:	nop    DWORD PTR [rax+0x0]
  40ed40:	push   rsi
  40ed41:	push   rbx
  40ed42:	sub    rsp,0x28
  40ed46:	test   rcx,rcx
  40ed49:	je     0x40ed88
  40ed4b:	mov    rbx,QWORD PTR [rcx+0x18]
  40ed4f:	test   rbx,rbx
  40ed52:	je     0x40ed88
  40ed54:	mov    rsi,QWORD PTR [rip+0x45ab5]        # 0x454810
  40ed5b:	jmp    0x40ed69
  40ed5d:	nop    DWORD PTR [rax]
  40ed60:	mov    rbx,QWORD PTR [rbx+0x18]
  40ed64:	test   rbx,rbx
  40ed67:	je     0x40ed88
  40ed69:	mov    r8,QWORD PTR [rbx+0x8]
  40ed6d:	test   r8,r8
  40ed70:	je     0x40ed81
  40ed72:	mov    rdx,QWORD PTR [rbx]
  40ed75:	lea    rcx,[rip+0x2e495]        # 0x43d211
  40ed7c:	call   0x4263a0
  40ed81:	movzx  eax,BYTE PTR [rsi]
  40ed84:	test   al,al
  40ed86:	je     0x40ed60
  40ed88:	add    rsp,0x28
  40ed8c:	pop    rbx
  40ed8d:	pop    rsi
  40ed8e:	ret    
  40ed8f:	nop
  40ed90:	push   rbp
  40ed91:	push   rdi
  40ed92:	push   rsi
  40ed93:	push   rbx
  40ed94:	sub    rsp,0x28
  40ed98:	xor    eax,eax
  40ed9a:	test   rcx,rcx
  40ed9d:	je     0x40eda4
  40ed9f:	cmp    BYTE PTR [rdx],0x0
  40eda2:	jne    0x40edb0
  40eda4:	add    rsp,0x28
  40eda8:	pop    rbx
  40eda9:	pop    rsi
  40edaa:	pop    rdi
  40edab:	pop    rbp
  40edac:	ret    
  40edad:	nop    DWORD PTR [rax]
  40edb0:	mov    rdi,rcx
  40edb3:	mov    rcx,rdx
  40edb6:	mov    rbp,r8
  40edb9:	mov    rsi,rdx
  40edbc:	call   0x40ea90
  40edc1:	test   al,al
  40edc3:	je     0x40eda4
  40edc5:	mov    rbx,QWORD PTR [rdi+0x18]
  40edc9:	test   rbx,rbx
  40edcc:	jne    0x40eddc
  40edce:	jmp    0x40ee03
  40edd0:	mov    rax,QWORD PTR [rbx+0x18]
  40edd4:	test   rax,rax
  40edd7:	je     0x40ee10
  40edd9:	mov    rbx,rax
  40eddc:	mov    rcx,QWORD PTR [rbx]
  40eddf:	mov    rdx,rsi
  40ede2:	call   0x42a420
  40ede7:	test   eax,eax
  40ede9:	jne    0x40edd0
  40edeb:	mov    rcx,QWORD PTR [rbx+0x8]
  40edef:	mov    QWORD PTR [rbx+0x10],rbp
  40edf3:	call   rbp
  40edf5:	mov    eax,0x1
  40edfa:	add    rsp,0x28
  40edfe:	pop    rbx
  40edff:	pop    rsi
  40ee00:	pop    rdi
  40ee01:	pop    rbp
  40ee02:	ret    
  40ee03:	mov    rbx,rdi
  40ee06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee10:	mov    ecx,0x20
  40ee15:	call   0x424800
  40ee1a:	mov    rcx,rsi
  40ee1d:	mov    rdi,rax
  40ee20:	call   0x424900
  40ee25:	mov    QWORD PTR [rdi+0x8],0x0
  40ee2d:	mov    QWORD PTR [rdi],rax
  40ee30:	xor    ecx,ecx
  40ee32:	mov    QWORD PTR [rdi+0x10],rbp
  40ee36:	mov    QWORD PTR [rdi+0x18],0x0
  40ee3e:	mov    QWORD PTR [rbx+0x18],rdi
  40ee42:	call   rbp
  40ee44:	mov    eax,0x1
  40ee49:	add    rsp,0x28
  40ee4d:	pop    rbx
  40ee4e:	pop    rsi
  40ee4f:	pop    rdi
  40ee50:	pop    rbp
  40ee51:	ret    
  40ee52:	nop    DWORD PTR [rax+0x0]
  40ee56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee60:	push   rdi
  40ee61:	push   rsi
  40ee62:	push   rbx
  40ee63:	sub    rsp,0x20
  40ee67:	test   rcx,rcx
  40ee6a:	mov    rsi,rcx
  40ee6d:	mov    rdi,rdx
  40ee70:	je     0x40eee0
  40ee72:	mov    rbx,QWORD PTR [rcx+0x18]
  40ee76:	test   rbx,rbx
  40ee79:	jne    0x40ee8f
  40ee7b:	jmp    0x40eed0
  40ee7d:	nop    DWORD PTR [rax]
  40ee80:	mov    rax,QWORD PTR [rbx+0x18]
  40ee84:	mov    rsi,rbx
  40ee87:	test   rax,rax
  40ee8a:	je     0x40eed0
  40ee8c:	mov    rbx,rax
  40ee8f:	mov    rcx,QWORD PTR [rbx]
  40ee92:	mov    rdx,rdi
  40ee95:	call   0x42a420
  40ee9a:	test   eax,eax
  40ee9c:	jne    0x40ee80
  40ee9e:	mov    rcx,QWORD PTR [rbx+0x8]
  40eea2:	test   rcx,rcx
  40eea5:	je     0x40eeac
  40eea7:	call   0x42a4e8
  40eeac:	mov    rax,QWORD PTR [rbx+0x10]
  40eeb0:	mov    QWORD PTR [rbx+0x8],0x0
  40eeb8:	test   rax,rax
  40eebb:	je     0x40eeea
  40eebd:	xor    ecx,ecx
  40eebf:	call   rax
  40eec1:	mov    eax,0x1
  40eec6:	add    rsp,0x20
  40eeca:	pop    rbx
  40eecb:	pop    rsi
  40eecc:	pop    rdi
  40eecd:	ret    
  40eece:	xchg   ax,ax
  40eed0:	mov    eax,0x1
  40eed5:	add    rsp,0x20
  40eed9:	pop    rbx
  40eeda:	pop    rsi
  40eedb:	pop    rdi
  40eedc:	ret    
  40eedd:	nop    DWORD PTR [rax]
  40eee0:	xor    eax,eax
  40eee2:	add    rsp,0x20
  40eee6:	pop    rbx
  40eee7:	pop    rsi
  40eee8:	pop    rdi
  40eee9:	ret    
  40eeea:	mov    rax,QWORD PTR [rbx+0x18]
  40eeee:	mov    QWORD PTR [rsi+0x18],rax
  40eef2:	mov    rcx,QWORD PTR [rbx]
  40eef5:	call   0x42a4e8
  40eefa:	mov    rcx,rbx
  40eefd:	call   0x42a4e8
  40ef02:	mov    eax,0x1
  40ef07:	jmp    0x40eec6
  40ef09:	nop    DWORD PTR [rax+0x0]
  40ef10:	push   rbp
  40ef11:	push   rdi
  40ef12:	push   rsi
  40ef13:	push   rbx
  40ef14:	sub    rsp,0x38
  40ef18:	xor    eax,eax
  40ef1a:	test   rcx,rcx
  40ef1d:	je     0x40ef24
  40ef1f:	cmp    BYTE PTR [rdx],0x0
  40ef22:	jne    0x40ef30
  40ef24:	add    rsp,0x38
  40ef28:	pop    rbx
  40ef29:	pop    rsi
  40ef2a:	pop    rdi
  40ef2b:	pop    rbp
  40ef2c:	ret    
  40ef2d:	nop    DWORD PTR [rax]
  40ef30:	mov    rdi,rcx
  40ef33:	mov    rcx,rdx
  40ef36:	mov    rbp,r8
  40ef39:	mov    rsi,rdx
  40ef3c:	call   0x40ea90
  40ef41:	test   al,al
  40ef43:	je     0x40ef24
  40ef45:	test   rbp,rbp
  40ef48:	je     0x40f007
  40ef4e:	mov    rbx,QWORD PTR [rdi+0x18]
  40ef52:	test   rbx,rbx
  40ef55:	jne    0x40ef6c
  40ef57:	jmp    0x40efbe
  40ef59:	nop    DWORD PTR [rax+0x0]
  40ef60:	mov    rax,QWORD PTR [rbx+0x18]
  40ef64:	test   rax,rax
  40ef67:	je     0x40efc1
  40ef69:	mov    rbx,rax
  40ef6c:	mov    rcx,QWORD PTR [rbx]
  40ef6f:	mov    rdx,rsi
  40ef72:	call   0x42a420
  40ef77:	test   eax,eax
  40ef79:	jne    0x40ef60
  40ef7b:	mov    rcx,QWORD PTR [rbx+0x8]
  40ef7f:	test   rcx,rcx
  40ef82:	je     0x40ef89
  40ef84:	call   0x42a4e8
  40ef89:	mov    rcx,rbp
  40ef8c:	call   0x424900
  40ef91:	mov    rdx,QWORD PTR [rbx+0x10]
  40ef95:	mov    rcx,rax
  40ef98:	mov    QWORD PTR [rbx+0x8],rax
  40ef9c:	mov    eax,0x1
  40efa1:	test   rdx,rdx
  40efa4:	je     0x40ef24
  40efaa:	mov    BYTE PTR [rsp+0x2f],al
  40efae:	call   rdx
  40efb0:	movzx  eax,BYTE PTR [rsp+0x2f]
  40efb5:	add    rsp,0x38
  40efb9:	pop    rbx
  40efba:	pop    rsi
  40efbb:	pop    rdi
  40efbc:	pop    rbp
  40efbd:	ret    
  40efbe:	mov    rbx,rdi
  40efc1:	mov    ecx,0x20
  40efc6:	call   0x424800
  40efcb:	mov    rcx,rsi
  40efce:	mov    rdi,rax
  40efd1:	call   0x424900
  40efd6:	mov    rcx,rbp
  40efd9:	mov    QWORD PTR [rdi],rax
  40efdc:	call   0x424900
  40efe1:	mov    QWORD PTR [rdi+0x8],rax
  40efe5:	mov    eax,0x1
  40efea:	mov    QWORD PTR [rdi+0x10],0x0
  40eff2:	mov    QWORD PTR [rdi+0x18],0x0
  40effa:	mov    QWORD PTR [rbx+0x18],rdi
  40effe:	add    rsp,0x38
  40f002:	pop    rbx
  40f003:	pop    rsi
  40f004:	pop    rdi
  40f005:	pop    rbp
  40f006:	ret    
  40f007:	mov    rdx,rsi
  40f00a:	mov    rcx,rdi
  40f00d:	add    rsp,0x38
  40f011:	pop    rbx
  40f012:	pop    rsi
  40f013:	pop    rdi
  40f014:	pop    rbp
  40f015:	jmp    0x40ee60
  40f01a:	nop    WORD PTR [rax+rax*1+0x0]
  40f020:	lea    r8,[rip+0x2e1ab]        # 0x43d1d2
  40f027:	jmp    0x40ef10
  40f02c:	nop
  40f02d:	nop
  40f02e:	nop
  40f02f:	nop
  40f030:	push   rsi
  40f031:	push   rbx
  40f032:	sub    rsp,0x38
  40f036:	mov    rbx,QWORD PTR [rip+0x458a3]        # 0x4548e0
  40f03d:	mov    QWORD PTR [rsp+0x58],rdx
  40f042:	mov    QWORD PTR [rsp+0x60],r8
  40f047:	mov    rsi,rcx
  40f04a:	mov    QWORD PTR [rsp+0x68],r9
  40f04f:	cmp    BYTE PTR [rbx+0x11a],0x0
  40f056:	jne    0x40f08c
  40f058:	cmp    DWORD PTR [rbx+0x28],0x4
  40f05c:	je     0x40f0f0
  40f062:	mov    rcx,QWORD PTR [rbx+0x10]
  40f066:	lea    r8,[rsp+0x58]
  40f06b:	mov    rdx,rsi
  40f06e:	mov    QWORD PTR [rsp+0x28],r8
  40f073:	call   0x4262f0
  40f078:	cmp    DWORD PTR [rbx+0x28],0x4
  40f07c:	je     0x40f0d0
  40f07e:	mov    rdx,QWORD PTR [rbx+0x10]
  40f082:	mov    ecx,0xa
  40f087:	call   0x42a500
  40f08c:	cmp    QWORD PTR [rbx+0x108],0x0
  40f094:	je     0x40f0c1
  40f096:	mov    rcx,QWORD PTR [rbx+0x108]
  40f09d:	lea    r8,[rsp+0x58]
  40f0a2:	mov    rdx,rsi
  40f0a5:	mov    QWORD PTR [rsp+0x28],r8
  40f0aa:	call   0x4262f0
  40f0af:	mov    rdx,QWORD PTR [rbx+0x108]
  40f0b6:	mov    ecx,0xa
  40f0bb:	call   0x42a500
  40f0c0:	nop
  40f0c1:	add    rsp,0x38
  40f0c5:	pop    rbx
  40f0c6:	pop    rsi
  40f0c7:	ret    
  40f0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0d0:	mov    r9,QWORD PTR [rbx+0x10]
  40f0d4:	lea    rcx,[rip+0x2e149]        # 0x43d224
  40f0db:	mov    r8d,0x5
  40f0e1:	mov    edx,0x1
  40f0e6:	call   0x42a4e0
  40f0eb:	jmp    0x40f08c
  40f0ed:	nop    DWORD PTR [rax]
  40f0f0:	mov    r9,QWORD PTR [rbx+0x10]
  40f0f4:	lea    rcx,[rip+0x2e125]        # 0x43d220
  40f0fb:	mov    r8d,0x3
  40f101:	mov    edx,0x1
  40f106:	call   0x42a4e0
  40f10b:	jmp    0x40f062
  40f110:	push   rsi
  40f111:	push   rbx
  40f112:	sub    rsp,0x28
  40f116:	mov    rax,QWORD PTR [rip+0x457c3]        # 0x4548e0
  40f11d:	mov    rsi,rcx
  40f120:	mov    BYTE PTR [rdx],0x0
  40f123:	mov    rbx,rdx
  40f126:	mov    rcx,QWORD PTR [rax]
  40f129:	test   rcx,rcx
  40f12c:	je     0x40f1c0
  40f132:	call   0x427df0
  40f137:	mov    r8d,eax
  40f13a:	mov    eax,0x1
  40f13f:	cmp    r8d,0x2
  40f143:	je     0x40f161
  40f145:	cmp    r8d,0x3
  40f149:	je     0x40f170
  40f14b:	test   r8d,r8d
  40f14e:	je     0x40f190
  40f150:	lea    rcx,[rip+0x2e129]        # 0x43d280
  40f157:	mov    rdx,rsi
  40f15a:	call   0x405d90
  40f15f:	xor    eax,eax
  40f161:	add    rsp,0x28
  40f165:	pop    rbx
  40f166:	pop    rsi
  40f167:	ret    
  40f168:	nop    DWORD PTR [rax+rax*1+0x0]
  40f170:	lea    rcx,[rip+0x2e0e1]        # 0x43d258
  40f177:	mov    rdx,rsi
  40f17a:	call   0x405d90
  40f17f:	xor    eax,eax
  40f181:	add    rsp,0x28
  40f185:	pop    rbx
  40f186:	pop    rsi
  40f187:	ret    
  40f188:	nop    DWORD PTR [rax+rax*1+0x0]
  40f190:	lea    rcx,[rip+0x2e0ba]        # 0x43d251
  40f197:	xor    edx,edx
  40f199:	call   0x4062b0
  40f19e:	mov    rcx,rax
  40f1a1:	xor    eax,eax
  40f1a3:	test   rcx,rcx
  40f1a6:	je     0x40f161
  40f1a8:	call   0x427f68
  40f1ad:	mov    eax,0x1
  40f1b2:	mov    BYTE PTR [rbx],0x1
  40f1b5:	add    rsp,0x28
  40f1b9:	pop    rbx
  40f1ba:	pop    rsi
  40f1bb:	ret    
  40f1bc:	nop    DWORD PTR [rax+0x0]
  40f1c0:	lea    rcx,[rip+0x2e069]        # 0x43d230
  40f1c7:	mov    rdx,rsi
  40f1ca:	call   0x405d90
  40f1cf:	xor    eax,eax
  40f1d1:	add    rsp,0x28
  40f1d5:	pop    rbx
  40f1d6:	pop    rsi
  40f1d7:	ret    
  40f1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1e0:	sub    rsp,0x28
  40f1e4:	lea    rcx,[rip+0x2e0b5]        # 0x43d2a0
  40f1eb:	xor    edx,edx
  40f1ed:	call   0x4062b0
  40f1f2:	mov    rcx,rax
  40f1f5:	call   0x427f68
  40f1fa:	add    rsp,0x28
  40f1fe:	ret    
  40f1ff:	nop
  40f200:	push   rbx
  40f201:	sub    rsp,0x20
  40f205:	mov    ebx,0x1
  40f20a:	test   dl,dl
  40f20c:	je     0x40f21e
  40f20e:	mov    rax,QWORD PTR [rip+0x456cb]        # 0x4548e0
  40f215:	cmp    BYTE PTR [rax+0x118],0x0
  40f21c:	jne    0x40f230
  40f21e:	mov    eax,ebx
  40f220:	add    rsp,0x20
  40f224:	pop    rbx
  40f225:	ret    
  40f226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f230:	lea    rcx,[rip+0x2e072]        # 0x43d2a9
  40f237:	xor    edx,edx
  40f239:	call   0x4062b0
  40f23e:	test   rax,rax
  40f241:	je     0x40f253
  40f243:	mov    rcx,rax
  40f246:	call   0x427f68
  40f24b:	mov    eax,ebx
  40f24d:	add    rsp,0x20
  40f251:	pop    rbx
  40f252:	ret    
  40f253:	lea    rcx,[rip+0x2e046]        # 0x43d2a0
  40f25a:	xor    edx,edx
  40f25c:	xor    ebx,ebx
  40f25e:	call   0x4062b0
  40f263:	mov    rcx,rax
  40f266:	call   0x427f68
  40f26b:	jmp    0x40f21e
  40f26d:	nop    DWORD PTR [rax]
  40f270:	push   rsi
  40f271:	push   rbx
  40f272:	sub    rsp,0x38
  40f276:	mov    rsi,rcx
  40f279:	mov    rbx,rdx
  40f27c:	lea    rcx,[rip+0x2e02d]        # 0x43d2b0
  40f283:	lea    rdx,[rsp+0x2f]
  40f288:	call   0x40f110
  40f28d:	test   al,al
  40f28f:	jne    0x40f2a0
  40f291:	xor    eax,eax
  40f293:	add    rsp,0x38
  40f297:	pop    rbx
  40f298:	pop    rsi
  40f299:	ret    
  40f29a:	nop    WORD PTR [rax+rax*1+0x0]
  40f2a0:	call   0x4060c0
  40f2a5:	xor    edx,edx
  40f2a7:	mov    rcx,rsi
  40f2aa:	mov    r8d,0xa
  40f2b0:	call   0x42a3c8
  40f2b5:	mov    rsi,QWORD PTR [rip+0x45624]        # 0x4548e0
  40f2bc:	mov    r8,rbx
  40f2bf:	mov    edx,eax
  40f2c1:	mov    rcx,QWORD PTR [rsi]
  40f2c4:	call   0x427da0
  40f2c9:	mov    ebx,eax
  40f2cb:	call   0x406120
  40f2d0:	cmp    ebx,0x1
  40f2d3:	je     0x40f303
  40f2d5:	mov    rcx,QWORD PTR [rsi]
  40f2d8:	call   0x427f10
  40f2dd:	lea    rcx,[rip+0x2dfd7]        # 0x43d2bb
  40f2e4:	mov    rdx,rax
  40f2e7:	call   0x405d90
  40f2ec:	cmp    BYTE PTR [rsp+0x2f],0x0
  40f2f1:	je     0x40f291
  40f2f3:	cmp    BYTE PTR [rsi+0x118],0x0
  40f2fa:	je     0x40f291
  40f2fc:	call   0x40f1e0
  40f301:	jmp    0x40f291
  40f303:	movsx  edx,BYTE PTR [rsp+0x2f]
  40f308:	lea    rcx,[rip+0x2dfa1]        # 0x43d2b0
  40f30f:	call   0x40f200
  40f314:	test   al,al
  40f316:	je     0x40f291
  40f31c:	lea    rcx,[rip+0x2df9b]        # 0x43d2be
  40f323:	call   0x40f030
  40f328:	mov    eax,0x1
  40f32d:	jmp    0x40f293
  40f332:	nop    DWORD PTR [rax+0x0]
  40f336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f340:	push   r13
  40f342:	push   r12
  40f344:	push   rbp
  40f345:	push   rdi
  40f346:	push   rsi
  40f347:	push   rbx
  40f348:	sub    rsp,0x68
  40f34c:	mov    rsi,rcx
  40f34f:	mov    rbx,rdx
  40f352:	lea    rcx,[rip+0x2df6f]        # 0x43d2c8
  40f359:	lea    rdx,[rsp+0x3f]
  40f35e:	call   0x40f110
  40f363:	test   al,al
  40f365:	jne    0x40f380
  40f367:	xor    eax,eax
  40f369:	add    rsp,0x68
  40f36d:	pop    rbx
  40f36e:	pop    rsi
  40f36f:	pop    rdi
  40f370:	pop    rbp
  40f371:	pop    r12
  40f373:	pop    r13
  40f375:	ret    
  40f376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f380:	call   0x4060c0
  40f385:	mov    rdi,QWORD PTR [rip+0x45554]        # 0x4548e0
  40f38c:	mov    rdx,rsi
  40f38f:	mov    rcx,QWORD PTR [rdi]
  40f392:	call   0x427d98
  40f397:	mov    ebp,eax
  40f399:	call   0x406120
  40f39e:	test   ebp,ebp
  40f3a0:	je     0x40f4d0
  40f3a6:	test   rbx,rbx
  40f3a9:	je     0x40f46d
  40f3af:	mov    rcx,rbx
  40f3b2:	call   0x42a400
  40f3b7:	lea    rcx,[rax+rax*1+0x100]
  40f3bf:	mov    r13,rax
  40f3c2:	call   0x42a4a0
  40f3c7:	test   rax,rax
  40f3ca:	mov    r12,rax
  40f3cd:	je     0x40f4e7
  40f3d3:	lea    rdx,[rip+0x2defe]        # 0x43d2d8
  40f3da:	mov    r8d,ebp
  40f3dd:	mov    rcx,rax
  40f3e0:	call   0x426260
  40f3e5:	mov    r11,r12
  40f3e8:	mov    eax,DWORD PTR [r11]
  40f3eb:	add    r11,0x4
  40f3ef:	lea    r10d,[rax-0x1010101]
  40f3f6:	not    eax
  40f3f8:	and    r10d,eax
  40f3fb:	and    r10d,0x80808080
  40f402:	je     0x40f3e8
  40f404:	mov    eax,r10d
  40f407:	mov    QWORD PTR [rsp+0x20],0x0
  40f410:	mov    rcx,QWORD PTR [rdi]
  40f413:	shr    eax,0x10
  40f416:	test   r10d,0x8080
  40f41d:	mov    r9,r13
  40f420:	cmove  r10d,eax
  40f424:	lea    rax,[r11+0x2]
  40f428:	mov    r8,rbx
  40f42b:	cmove  r11,rax
  40f42f:	add    r10b,r10b
  40f432:	mov    rsi,r11
  40f435:	sbb    rsi,0x3
  40f439:	mov    rdx,rsi
  40f43c:	call   0x427ef8
  40f441:	mov    edx,0x27
  40f446:	mov    rcx,r12
  40f449:	mov    WORD PTR [rsi+rax*1],dx
  40f44d:	xor    edx,edx
  40f44f:	call   0x4062b0
  40f454:	test   rax,rax
  40f457:	mov    rcx,rax
  40f45a:	je     0x40f510
  40f460:	call   0x427f68
  40f465:	mov    rcx,r12
  40f468:	call   0x42a4e8
  40f46d:	movsx  edx,BYTE PTR [rsp+0x3f]
  40f472:	lea    rcx,[rip+0x2de4f]        # 0x43d2c8
  40f479:	call   0x40f200
  40f47e:	test   al,al
  40f480:	je     0x40f367
  40f486:	lea    rcx,[rip+0x2de6b]        # 0x43d2f8
  40f48d:	mov    edx,ebp
  40f48f:	lea    rbx,[rsp+0x40]
  40f494:	call   0x40f030
  40f499:	lea    rdx,[rip+0x2de65]        # 0x43d305
  40f4a0:	mov    r8d,ebp
  40f4a3:	mov    rcx,rbx
  40f4a6:	call   0x426260
  40f4ab:	mov    rcx,QWORD PTR [rdi+0x110]
  40f4b2:	lea    rdx,[rip+0x2de4f]        # 0x43d308
  40f4b9:	mov    r8,rbx
  40f4bc:	call   0x40ef10
  40f4c1:	mov    eax,0x1
  40f4c6:	jmp    0x40f369
  40f4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f4d0:	mov    rcx,QWORD PTR [rdi]
  40f4d3:	call   0x427f10
  40f4d8:	lea    rcx,[rip+0x2dddc]        # 0x43d2bb
  40f4df:	mov    rdx,rax
  40f4e2:	call   0x405d90
  40f4e7:	cmp    BYTE PTR [rsp+0x3f],0x0
  40f4ec:	je     0x40f367
  40f4f2:	cmp    BYTE PTR [rdi+0x118],0x0
  40f4f9:	je     0x40f367
  40f4ff:	call   0x40f1e0
  40f504:	jmp    0x40f367
  40f509:	nop    DWORD PTR [rax+0x0]
  40f510:	mov    rcx,r12
  40f513:	call   0x42a4e8
  40f518:	cmp    BYTE PTR [rsp+0x3f],0x0
  40f51d:	jne    0x40f4f2
  40f51f:	jmp    0x40f367
  40f524:	xchg   ax,ax
  40f526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f530:	push   rdi
  40f531:	push   rsi
  40f532:	push   rbx
  40f533:	sub    rsp,0x30
  40f537:	xor    edx,edx
  40f539:	mov    r8d,0xa
  40f53f:	call   0x42a3c8
  40f544:	lea    rdx,[rsp+0x2f]
  40f549:	lea    rcx,[rip+0x2ddc0]        # 0x43d310
  40f550:	mov    ebx,eax
  40f552:	call   0x40f110
  40f557:	test   al,al
  40f559:	jne    0x40f565
  40f55b:	xor    eax,eax
  40f55d:	add    rsp,0x30
  40f561:	pop    rbx
  40f562:	pop    rsi
  40f563:	pop    rdi
  40f564:	ret    
  40f565:	call   0x4060c0
  40f56a:	mov    rsi,QWORD PTR [rip+0x4536f]        # 0x4548e0
  40f571:	mov    edx,ebx
  40f573:	mov    rcx,QWORD PTR [rsi]
  40f576:	call   0x427d90
  40f57b:	mov    edi,eax
  40f57d:	call   0x406120
  40f582:	cmp    edi,0xffffffff
  40f585:	je     0x40f5c0
  40f587:	movsx  edx,BYTE PTR [rsp+0x2f]
  40f58c:	lea    rcx,[rip+0x2dd7d]        # 0x43d310
  40f593:	call   0x40f200
  40f598:	test   al,al
  40f59a:	je     0x40f55b
  40f59c:	lea    rcx,[rip+0x2dd78]        # 0x43d31b
  40f5a3:	mov    edx,ebx
  40f5a5:	call   0x40f030
  40f5aa:	mov    eax,0x1
  40f5af:	add    rsp,0x30
  40f5b3:	pop    rbx
  40f5b4:	pop    rsi
  40f5b5:	pop    rdi
  40f5b6:	ret    
  40f5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40f5c0:	mov    rcx,QWORD PTR [rsi]
  40f5c3:	call   0x427f10
  40f5c8:	lea    rcx,[rip+0x2dcec]        # 0x43d2bb
  40f5cf:	mov    rdx,rax
  40f5d2:	call   0x405d90
  40f5d7:	cmp    BYTE PTR [rsp+0x2f],0x0
  40f5dc:	je     0x40f55b
  40f5e2:	cmp    BYTE PTR [rsi+0x118],0x0
  40f5e9:	je     0x40f55b
  40f5ef:	call   0x40f1e0
  40f5f4:	jmp    0x40f55b
  40f5f9:	nop    DWORD PTR [rax+0x0]
  40f600:	push   rbp
  40f601:	push   rdi
  40f602:	push   rsi
  40f603:	push   rbx
  40f604:	sub    rsp,0x4d8
  40f60b:	mov    rbx,QWORD PTR [rip+0x452ce]        # 0x4548e0
  40f612:	mov    ecx,0x13
  40f617:	lea    rax,[rip+0x2ddcb]        # 0x43d3e9
  40f61e:	lea    rbp,[rsp+0x30]
  40f623:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  40f62d:	lea    rsi,[rbx+0x28]
  40f631:	mov    rdi,rbp
  40f634:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f637:	lea    rsi,[rsp+0xd0]
  40f63f:	jle    0x40f6e0
  40f645:	mov    QWORD PTR [rsp+0x28],rax
  40f64a:	lea    rax,[rip+0x2dda4]        # 0x43d3f5
  40f651:	lea    r9,[rip+0x2dcd0]        # 0x43d328
  40f658:	lea    r8,[rip+0x2dcd1]        # 0x43d330
  40f65f:	mov    edx,0x400
  40f664:	mov    rcx,rsi
  40f667:	mov    QWORD PTR [rsp+0x20],rax
  40f66c:	call   0x426220
  40f671:	xor    edx,edx
  40f673:	mov    rcx,rsi
  40f676:	call   0x4062b0
  40f67b:	mov    rsi,rax
  40f67e:	xor    eax,eax
  40f680:	test   rsi,rsi
  40f683:	je     0x40f6d0
  40f685:	mov    r9,QWORD PTR [rbx+0x108]
  40f68c:	mov    r8,QWORD PTR [rbx+0x10]
  40f690:	lea    rax,[rip+0x2de03]        # 0x43d49a
  40f697:	mov    rdx,rbp
  40f69a:	mov    rcx,rsi
  40f69d:	mov    BYTE PTR [rsp+0x3a],0x0
  40f6a2:	mov    QWORD PTR [rsp+0xa0],rax
  40f6aa:	mov    QWORD PTR [rsp+0x90],0x0
  40f6b6:	mov    BYTE PTR [rsp+0xb0],0x1
  40f6be:	call   0x4141a0
  40f6c3:	mov    rcx,rsi
  40f6c6:	call   0x427f68
  40f6cb:	mov    eax,0x1
  40f6d0:	add    rsp,0x4d8
  40f6d7:	pop    rbx
  40f6d8:	pop    rsi
  40f6d9:	pop    rdi
  40f6da:	pop    rbp
  40f6db:	ret    
  40f6dc:	nop    DWORD PTR [rax+0x0]
  40f6e0:	lea    r9,[rip+0x2dc41]        # 0x43d328
  40f6e7:	lea    r8,[rip+0x2dd12]        # 0x43d400
  40f6ee:	mov    QWORD PTR [rsp+0x20],rax
  40f6f3:	mov    edx,0x400
  40f6f8:	mov    rcx,rsi
  40f6fb:	call   0x426220
  40f700:	jmp    0x40f671
  40f705:	nop
  40f706:	nop
  40f707:	nop
  40f708:	nop
  40f709:	nop
  40f70a:	nop
  40f70b:	nop
  40f70c:	nop
  40f70d:	nop
  40f70e:	nop
  40f70f:	nop
  40f710:	push   rsi
  40f711:	push   rbx
  40f712:	sub    rsp,0x28
  40f716:	movzx  eax,BYTE PTR [rcx]
  40f719:	mov    rbx,rcx
  40f71c:	mov    rsi,rdx
  40f71f:	test   al,al
  40f721:	jne    0x40f77b
  40f723:	jmp    0x40f7c0
  40f728:	nop    DWORD PTR [rax+rax*1+0x0]
  40f730:	cmp    al,0x5f
  40f732:	je     0x40f7f0
  40f738:	jle    0x40f7d0
  40f73e:	cmp    al,0x7b
  40f740:	je     0x40f840
  40f746:	cmp    al,0x7d
  40f748:	jne    0x40f830
  40f74e:	lea    rcx,[rip+0x2dd7a]        # 0x43d4cf
  40f755:	mov    r9,rsi
  40f758:	mov    r8d,0x2
  40f75e:	mov    edx,0x1
  40f763:	call   0x42a4e0
  40f768:	nop    DWORD PTR [rax+rax*1+0x0]
  40f770:	add    rbx,0x1
  40f774:	movzx  eax,BYTE PTR [rbx]
  40f777:	test   al,al
  40f779:	je     0x40f7c0
  40f77b:	cmp    al,0x26
  40f77d:	je     0x40f810
  40f783:	jg     0x40f730
  40f785:	cmp    al,0x24
  40f787:	je     0x40f880
  40f78d:	jg     0x40f860
  40f793:	cmp    al,0xa
  40f795:	jne    0x40f830
  40f79b:	lea    rcx,[rip+0x2dd3b]        # 0x43d4dd
  40f7a2:	add    rbx,0x1
  40f7a6:	mov    r9,rsi
  40f7a9:	mov    r8d,0x2
  40f7af:	mov    edx,0x1
  40f7b4:	call   0x42a4e0
  40f7b9:	movzx  eax,BYTE PTR [rbx]
  40f7bc:	test   al,al
  40f7be:	jne    0x40f77b
  40f7c0:	add    rsp,0x28
  40f7c4:	pop    rbx
  40f7c5:	pop    rsi
  40f7c6:	ret    
  40f7c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7d0:	cmp    al,0x5c
  40f7d2:	jne    0x40f830
  40f7d4:	lea    rcx,[rip+0x2dcf7]        # 0x43d4d2
  40f7db:	mov    r9,rsi
  40f7de:	mov    r8d,0xa
  40f7e4:	mov    edx,0x1
  40f7e9:	call   0x42a4e0
  40f7ee:	jmp    0x40f770
  40f7f0:	lea    rcx,[rip+0x2dcd2]        # 0x43d4c9
  40f7f7:	mov    r9,rsi
  40f7fa:	mov    r8d,0x2
  40f800:	mov    edx,0x1
  40f805:	call   0x42a4e0
  40f80a:	jmp    0x40f770
  40f80f:	nop
  40f810:	lea    rcx,[rip+0x2dca9]        # 0x43d4c0
  40f817:	mov    r9,rsi
  40f81a:	mov    r8d,0x2
  40f820:	mov    edx,0x1
  40f825:	call   0x42a4e0
  40f82a:	jmp    0x40f770
  40f82f:	nop
  40f830:	movsx  ecx,al
  40f833:	mov    rdx,rsi
  40f836:	call   0x42a500
  40f83b:	jmp    0x40f770
  40f840:	lea    rcx,[rip+0x2dc85]        # 0x43d4cc
  40f847:	mov    r9,rsi
  40f84a:	mov    r8d,0x2
  40f850:	mov    edx,0x1
  40f855:	call   0x42a4e0
  40f85a:	jmp    0x40f770
  40f85f:	nop
  40f860:	lea    rcx,[rip+0x2dc5c]        # 0x43d4c3
  40f867:	mov    r9,rsi
  40f86a:	mov    r8d,0x2
  40f870:	mov    edx,0x1
  40f875:	call   0x42a4e0
  40f87a:	jmp    0x40f770
  40f87f:	nop
  40f880:	lea    rcx,[rip+0x2dc3f]        # 0x43d4c6
  40f887:	mov    r9,rsi
  40f88a:	mov    r8d,0x2
  40f890:	mov    edx,0x1
  40f895:	call   0x42a4e0
  40f89a:	jmp    0x40f770
  40f89f:	nop
  40f8a0:	push   rsi
  40f8a1:	push   rbx
  40f8a2:	sub    rsp,0x28
  40f8a6:	movzx  eax,BYTE PTR [rcx]
  40f8a9:	mov    rbx,rcx
  40f8ac:	mov    rsi,rdx
  40f8af:	test   al,al
  40f8b1:	jne    0x40f8da
  40f8b3:	jmp    0x40f8f4
  40f8b5:	lea    rcx,[rip+0x2dc24]        # 0x43d4e0
  40f8bc:	add    rbx,0x1
  40f8c0:	mov    r9,rsi
  40f8c3:	mov    r8d,0x4
  40f8c9:	mov    edx,0x1
  40f8ce:	call   0x42a4e0
  40f8d3:	movzx  eax,BYTE PTR [rbx]
  40f8d6:	test   al,al
  40f8d8:	je     0x40f8f4
  40f8da:	cmp    al,0x5c
  40f8dc:	je     0x40f8b5
  40f8de:	add    rbx,0x1
  40f8e2:	movsx  ecx,al
  40f8e5:	mov    rdx,rsi
  40f8e8:	call   0x42a500
  40f8ed:	movzx  eax,BYTE PTR [rbx]
  40f8f0:	test   al,al
  40f8f2:	jne    0x40f8da
  40f8f4:	add    rsp,0x28
  40f8f8:	pop    rbx
  40f8f9:	pop    rsi
  40f8fa:	ret    
  40f8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f900:	push   r15
  40f902:	push   r14
  40f904:	push   r13
  40f906:	push   r12
  40f908:	push   rbp
  40f909:	push   rdi
  40f90a:	push   rsi
  40f90b:	push   rbx
  40f90c:	sub    rsp,0x38
  40f910:	movzx  r9d,BYTE PTR [rip+0x4a968]        # 0x45a280
  40f918:	mov    rax,QWORD PTR [rcx]
  40f91b:	movzx  r14d,BYTE PTR [rax+0xa]
  40f920:	movzx  r8d,WORD PTR [rax+0x6]
  40f925:	test   r9b,r9b
  40f928:	mov    r13d,DWORD PTR [rax+0x10]
  40f92c:	jne    0x40fa99
  40f932:	cmp    r8w,0x2
  40f937:	mov    r12d,0x2
  40f93d:	mov    rbx,rdx
  40f940:	cmovbe r12d,r8d
  40f944:	cmp    BYTE PTR [rax+0xb],0x0
  40f948:	mov    rdi,rcx
  40f94b:	jne    0x40fb40
  40f951:	mov    rbp,QWORD PTR [rdi+0x28]
  40f955:	add    r13d,0x1
  40f959:	xor    r15d,r15d
  40f95c:	cmp    QWORD PTR [rbp+0x0],0x0
  40f961:	jne    0x40f9da
  40f963:	jmp    0x40fa90
  40f968:	nop    DWORD PTR [rax+rax*1+0x0]
  40f970:	mov    eax,esi
  40f972:	xor    edx,edx
  40f974:	div    DWORD PTR [rdi+0x10]
  40f977:	mov    rax,QWORD PTR [rdi+0x18]
  40f97b:	mov    edx,edx
  40f97d:	mov    rcx,QWORD PTR [rax+rdx*8]
  40f981:	mov    rdx,rbx
  40f984:	call   0x40f710
  40f989:	lea    rcx,[rip+0x2dbfc]        # 0x43d58c
  40f990:	mov    r9,rbx
  40f993:	mov    r8d,0x3
  40f999:	mov    edx,0x1
  40f99e:	call   0x42a4e0
  40f9a3:	mov    rcx,QWORD PTR [rbp+r15*8+0x0]
  40f9a8:	mov    rdx,rbx
  40f9ab:	add    r15,0x1
  40f9af:	call   0x40f710
  40f9b4:	lea    rcx,[rip+0x2dbd5]        # 0x43d590
  40f9bb:	mov    r9,rbx
  40f9be:	mov    r8d,0x4
  40f9c4:	mov    edx,0x1
  40f9c9:	call   0x42a4e0
  40f9ce:	cmp    QWORD PTR [rbp+r15*8+0x0],0x0
  40f9d4:	je     0x40fa90
  40f9da:	xor    edx,edx
  40f9dc:	mov    eax,r15d
  40f9df:	mov    esi,r15d
  40f9e2:	div    DWORD PTR [rdi+0x10]
  40f9e5:	test   edx,edx
  40f9e7:	jne    0x40f977
  40f9e9:	movzx  eax,BYTE PTR [rip+0x4a890]        # 0x45a280
  40f9f0:	test   al,al
  40f9f2:	jne    0x40fa90
  40f9f8:	test   r14b,r14b
  40f9fb:	jne    0x40fa23
  40f9fd:	cmp    r12w,0x2
  40fa02:	je     0x40fa50
  40fa04:	lea    eax,[r13+0x1]
  40fa08:	lea    rdx,[rip+0x2db51]        # 0x43d560
  40fa0f:	mov    r8d,r13d
  40fa12:	mov    rcx,rbx
  40fa15:	mov    DWORD PTR [rsp+0x2c],eax
  40fa19:	call   0x426370
  40fa1e:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fa23:	test   r12w,r12w
  40fa27:	je     0x40f970
  40fa2d:	lea    rcx,[rip+0x2daf2]        # 0x43d526
  40fa34:	mov    r9,rbx
  40fa37:	mov    r8d,0x7
  40fa3d:	mov    edx,0x1
  40fa42:	call   0x42a4e0
  40fa47:	jmp    0x40f970
  40fa4c:	nop    DWORD PTR [rax+0x0]
  40fa50:	lea    rcx,[rip+0x2dacf]        # 0x43d526
  40fa57:	mov    r9,rbx
  40fa5a:	mov    r8d,0x7
  40fa60:	mov    edx,0x1
  40fa65:	call   0x42a4e0
  40fa6a:	lea    eax,[r13+0x1]
  40fa6e:	lea    rdx,[rip+0x2dabb]        # 0x43d530
  40fa75:	mov    r8d,r13d
  40fa78:	mov    rcx,rbx
  40fa7b:	mov    DWORD PTR [rsp+0x2c],eax
  40fa7f:	call   0x426370
  40fa84:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fa89:	jmp    0x40fa2d
  40fa8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa90:	mov    rax,QWORD PTR [rdi]
  40fa93:	cmp    BYTE PTR [rax+0xc],0x0
  40fa97:	jne    0x40fab0
  40fa99:	add    rsp,0x38
  40fa9d:	pop    rbx
  40fa9e:	pop    rsi
  40fa9f:	pop    rdi
  40faa0:	pop    rbp
  40faa1:	pop    r12
  40faa3:	pop    r13
  40faa5:	pop    r14
  40faa7:	pop    r15
  40faa9:	ret    
  40faaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fab0:	cmp    r12w,0x2
  40fab5:	je     0x40fc06
  40fabb:	lea    rcx,[rip+0x2dad3]        # 0x43d595
  40fac2:	mov    r9,rbx
  40fac5:	mov    r8d,0x19
  40facb:	mov    edx,0x1
  40fad0:	call   0x42a4e0
  40fad5:	mov    rsi,QWORD PTR [rdi+0x48]
  40fad9:	test   rsi,rsi
  40fadc:	je     0x40fb1e
  40fade:	test   r14b,r14b
  40fae1:	jne    0x40fb1e
  40fae3:	movzx  eax,BYTE PTR [rip+0x4a796]        # 0x45a280
  40faea:	test   al,al
  40faec:	jne    0x40fb1e
  40faee:	xchg   ax,ax
  40faf0:	mov    rcx,QWORD PTR [rsi]
  40faf3:	mov    rdx,rbx
  40faf6:	call   0x40f710
  40fafb:	lea    rcx,[rip+0x2da8e]        # 0x43d590
  40fb02:	mov    r9,rbx
  40fb05:	mov    r8d,0x4
  40fb0b:	mov    edx,0x1
  40fb10:	call   0x42a4e0
  40fb15:	mov    rsi,QWORD PTR [rsi+0x8]
  40fb19:	test   rsi,rsi
  40fb1c:	jne    0x40faf0
  40fb1e:	mov    rdx,rbx
  40fb21:	mov    ecx,0xa
  40fb26:	add    rsp,0x38
  40fb2a:	pop    rbx
  40fb2b:	pop    rsi
  40fb2c:	pop    rdi
  40fb2d:	pop    rbp
  40fb2e:	pop    r12
  40fb30:	pop    r13
  40fb32:	pop    r14
  40fb34:	pop    r15
  40fb36:	jmp    0x42a500
  40fb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb40:	test   r14b,r14b
  40fb43:	jne    0x40fb8c
  40fb45:	cmp    QWORD PTR [rcx+0x8],0x0
  40fb4a:	je     0x40fb8c
  40fb4c:	lea    rcx,[rip+0x2d992]        # 0x43d4e5
  40fb53:	mov    r9,rdx
  40fb56:	mov    r8d,0xf
  40fb5c:	mov    edx,0x1
  40fb61:	call   0x42a4e0
  40fb66:	mov    rcx,QWORD PTR [rdi+0x8]
  40fb6a:	mov    rdx,rbx
  40fb6d:	call   0x40f710
  40fb72:	lea    rcx,[rip+0x2d97c]        # 0x43d4f5
  40fb79:	mov    r9,rbx
  40fb7c:	mov    r8d,0xf
  40fb82:	mov    edx,0x1
  40fb87:	call   0x42a4e0
  40fb8c:	lea    rcx,[rip+0x2d972]        # 0x43d505
  40fb93:	mov    r9,rbx
  40fb96:	mov    r8d,0x10
  40fb9c:	mov    edx,0x1
  40fba1:	call   0x42a4e0
  40fba6:	test   r12w,r12w
  40fbaa:	mov    r9,rbx
  40fbad:	je     0x40fbd0
  40fbaf:	cmp    r12w,0x1
  40fbb4:	je     0x40fc25
  40fbb6:	lea    rcx,[rip+0x2d960]        # 0x43d51d
  40fbbd:	mov    r8d,0x5
  40fbc3:	mov    edx,0x1
  40fbc8:	call   0x42a4e0
  40fbcd:	jmp    0x40fbe7
  40fbcf:	nop
  40fbd0:	lea    rcx,[rip+0x2d93f]        # 0x43d516
  40fbd7:	mov    r8d,0x2
  40fbdd:	mov    edx,0x1
  40fbe2:	call   0x42a4e0
  40fbe7:	lea    rcx,[rip+0x2d935]        # 0x43d523
  40fbee:	mov    r9,rbx
  40fbf1:	mov    r8d,0x2
  40fbf7:	mov    edx,0x1
  40fbfc:	call   0x42a4e0
  40fc01:	jmp    0x40f951
  40fc06:	lea    rcx,[rip+0x2d919]        # 0x43d526
  40fc0d:	mov    r9,rbx
  40fc10:	mov    r8d,0x7
  40fc16:	mov    edx,0x1
  40fc1b:	call   0x42a4e0
  40fc20:	jmp    0x40fabb
  40fc25:	lea    rcx,[rip+0x2d8ed]        # 0x43d519
  40fc2c:	mov    r8d,0x3
  40fc32:	mov    edx,0x1
  40fc37:	call   0x42a4e0
  40fc3c:	jmp    0x40fbe7
  40fc3e:	xchg   ax,ax
  40fc40:	push   r15
  40fc42:	push   r14
  40fc44:	push   r13
  40fc46:	push   r12
  40fc48:	push   rbp
  40fc49:	push   rdi
  40fc4a:	push   rsi
  40fc4b:	push   rbx
  40fc4c:	sub    rsp,0x38
  40fc50:	mov    eax,DWORD PTR [rsp+0xa8]
  40fc57:	mov    r12d,DWORD PTR [rsp+0xa0]
  40fc5f:	cmp    dx,0x2
  40fc63:	mov    QWORD PTR [rsp+0x20],rcx
  40fc68:	mov    r14d,edx
  40fc6b:	mov    ebp,r8d
  40fc6e:	mov    edi,r9d
  40fc71:	mov    rbx,QWORD PTR [rsp+0xb0]
  40fc79:	mov    esi,edx
  40fc7b:	mov    DWORD PTR [rsp+0x2c],eax
  40fc7f:	je     0x40fe20
  40fc85:	cmp    dx,0x1
  40fc89:	je     0x40fe70
  40fc8f:	test   r8d,r8d
  40fc92:	jne    0x40fd70
  40fc98:	mov    bpl,0x1
  40fc9b:	cmp    edi,ebp
  40fc9d:	jbe    0x40fcd1
  40fc9f:	mov    r13d,DWORD PTR [rsp+0x2c]
  40fca4:	mov    r15d,ebp
  40fca7:	shl    r13,0x5
  40fcab:	add    r13,QWORD PTR [rsp+0x20]
  40fcb0:	test   si,si
  40fcb3:	lea    rcx,[rip+0x2d8f5]        # 0x43d5af
  40fcba:	je     0x40fcc0
  40fcbc:	mov    rcx,QWORD PTR [r13+0x8]
  40fcc0:	mov    rdx,rbx
  40fcc3:	add    r15d,0x1
  40fcc7:	call   0x42a4f8
  40fccc:	cmp    edi,r15d
  40fccf:	ja     0x40fcb0
  40fcd1:	sub    ebp,edi
  40fcd3:	test   r14w,r14w
  40fcd7:	je     0x40fdd0
  40fcdd:	test   ebp,ebp
  40fcdf:	lea    r13d,[rbp-0x1]
  40fce3:	jle    0x40feab
  40fce9:	test   r13d,r13d
  40fcec:	lea    edi,[rbp-0x2]
  40fcef:	jle    0x40fee9
  40fcf5:	sub    ebp,0x3
  40fcf8:	test   edi,edi
  40fcfa:	jle    0x40feca
  40fd00:	test   ebp,ebp
  40fd02:	mov    eax,0x0
  40fd07:	cmovs  ebp,eax
  40fd0a:	cmp    ebp,r12d
  40fd0d:	jae    0x40fd40
  40fd0f:	mov    edi,DWORD PTR [rsp+0x2c]
  40fd13:	shl    rdi,0x5
  40fd17:	add    rdi,QWORD PTR [rsp+0x20]
  40fd1c:	nop    DWORD PTR [rax+0x0]
  40fd20:	test   si,si
  40fd23:	lea    rcx,[rip+0x2d885]        # 0x43d5af
  40fd2a:	je     0x40fd30
  40fd2c:	mov    rcx,QWORD PTR [rdi+0x8]
  40fd30:	mov    rdx,rbx
  40fd33:	add    ebp,0x1
  40fd36:	call   0x42a4f8
  40fd3b:	cmp    r12d,ebp
  40fd3e:	ja     0x40fd20
  40fd40:	cmp    r14w,0x2
  40fd45:	je     0x40fdf3
  40fd4b:	mov    rdx,rbx
  40fd4e:	mov    ecx,0xa
  40fd53:	add    rsp,0x38
  40fd57:	pop    rbx
  40fd58:	pop    rsi
  40fd59:	pop    rdi
  40fd5a:	pop    rbp
  40fd5b:	pop    r12
  40fd5d:	pop    r13
  40fd5f:	pop    r14
  40fd61:	pop    r15
  40fd63:	jmp    0x42a500
  40fd68:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd70:	test   r14w,r14w
  40fd74:	je     0x40fda0
  40fd76:	lea    rdx,[rip+0x2d846]        # 0x43d5c3
  40fd7d:	mov    r8d,ebp
  40fd80:	mov    rcx,rbx
  40fd83:	call   0x426370
  40fd88:	add    eax,0x1
  40fd8b:	mov    ebp,0x0
  40fd90:	cmovns ebp,eax
  40fd93:	jmp    0x40fc9b
  40fd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fda0:	lea    rdx,[rip+0x2d80f]        # 0x43d5b6
  40fda7:	mov    r8d,ebp
  40fdaa:	mov    rcx,rbx
  40fdad:	call   0x426370
  40fdb2:	add    eax,0x1
  40fdb5:	mov    ebp,eax
  40fdb7:	mov    eax,0x0
  40fdbc:	cmovs  ebp,eax
  40fdbf:	cmp    edi,ebp
  40fdc1:	ja     0x40fc9f
  40fdc7:	sub    ebp,edi
  40fdc9:	nop    DWORD PTR [rax+0x0]
  40fdd0:	test   ebp,ebp
  40fdd2:	lea    edi,[rbp-0x1]
  40fdd5:	jle    0x40fe99
  40fddb:	test   edi,edi
  40fddd:	mov    ebp,0x0
  40fde2:	cmovns ebp,edi
  40fde5:	cmp    r12d,ebp
  40fde8:	ja     0x40fd0f
  40fdee:	jmp    0x40fd4b
  40fdf3:	mov    eax,DWORD PTR [rsp+0x2c]
  40fdf7:	mov    r15,QWORD PTR [rsp+0x20]
  40fdfc:	lea    rdx,[rip+0x2d7ae]        # 0x43d5b1
  40fe03:	mov    rcx,rbx
  40fe06:	shl    rax,0x5
  40fe0a:	add    r15,rax
  40fe0d:	mov    r9,QWORD PTR [r15+0x20]
  40fe11:	mov    r8,QWORD PTR [r15+0x8]
  40fe15:	call   0x426370
  40fe1a:	jmp    0x40fd4b
  40fe1f:	nop
  40fe20:	shl    rax,0x5
  40fe24:	lea    rdx,[rip+0x2d786]        # 0x43d5b1
  40fe2b:	add    rax,rcx
  40fe2e:	mov    rcx,rbx
  40fe31:	mov    r9,QWORD PTR [rax+0x8]
  40fe35:	mov    r8,QWORD PTR [rax+0x10]
  40fe39:	call   0x426370
  40fe3e:	xor    eax,eax
  40fe40:	test   ebp,ebp
  40fe42:	je     0x40fe56
  40fe44:	lea    rdx,[rip+0x2d778]        # 0x43d5c3
  40fe4b:	mov    r8d,ebp
  40fe4e:	mov    rcx,rbx
  40fe51:	call   0x426370
  40fe56:	test   eax,eax
  40fe58:	mov    ebp,0x0
  40fe5d:	cmovns ebp,eax
  40fe60:	cmp    edi,ebp
  40fe62:	ja     0x40fc9f
  40fe68:	sub    ebp,edi
  40fe6a:	jmp    0x40fcdd
  40fe6f:	nop
  40fe70:	mov    eax,DWORD PTR [rsp+0x2c]
  40fe74:	mov    rdx,QWORD PTR [rsp+0x20]
  40fe79:	shl    rax,0x5
  40fe7d:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40fe82:	mov    rdx,rbx
  40fe85:	call   0x42a4f8
  40fe8a:	xor    eax,eax
  40fe8c:	test   ebp,ebp
  40fe8e:	je     0x40fd88
  40fe94:	jmp    0x40fd76
  40fe99:	mov    rdx,rbx
  40fe9c:	mov    ecx,0x20
  40fea1:	call   0x42a500
  40fea6:	jmp    0x40fddb
  40feab:	mov    eax,DWORD PTR [rsp+0x2c]
  40feaf:	mov    rdx,QWORD PTR [rsp+0x20]
  40feb4:	shl    rax,0x5
  40feb8:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40febd:	mov    rdx,rbx
  40fec0:	call   0x42a4f8
  40fec5:	jmp    0x40fce9
  40feca:	mov    eax,DWORD PTR [rsp+0x2c]
  40fece:	mov    rdx,QWORD PTR [rsp+0x20]
  40fed3:	shl    rax,0x5
  40fed7:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40fedc:	mov    rdx,rbx
  40fedf:	call   0x42a4f8
  40fee4:	jmp    0x40fd00
  40fee9:	mov    eax,DWORD PTR [rsp+0x2c]
  40feed:	mov    rdx,QWORD PTR [rsp+0x20]
  40fef2:	shl    rax,0x5
  40fef6:	mov    rcx,QWORD PTR [rdx+rax*1+0x18]
  40fefb:	mov    rdx,rbx
  40fefe:	call   0x42a4f8
  40ff03:	jmp    0x40fcf5
  40ff08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff10:	sub    rsp,0x28
  40ff14:	mov    rax,QWORD PTR [rcx+0x48]
  40ff18:	test   rax,rax
  40ff1b:	je     0x40ff22
  40ff1d:	add    rsp,0x28
  40ff21:	ret    
  40ff22:	mov    rdx,QWORD PTR [rcx]
  40ff25:	cmp    BYTE PTR [rdx+0xd],0x0
  40ff29:	je     0x40ff1d
  40ff2b:	mov    r9d,DWORD PTR [rdx+0x10]
  40ff2f:	add    r9d,DWORD PTR [rcx+0x14]
  40ff33:	lea    rax,[rip+0x2d6a9]        # 0x43d5e3
  40ff3a:	lea    r8,[rip+0x2d698]        # 0x43d5d9
  40ff41:	lea    rcx,[rip+0x4a378]        # 0x45a2c0
  40ff48:	mov    edx,0x64
  40ff4d:	cmp    r9d,0x1
  40ff51:	cmovne r8,rax
  40ff55:	call   0x426220
  40ff5a:	lea    rax,[rip+0x1c55f]        # 0x42c4c0
  40ff61:	add    rsp,0x28
  40ff65:	ret    
  40ff66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff70:	push   rsi
  40ff71:	push   rbx
  40ff72:	sub    rsp,0x28
  40ff76:	xor    eax,eax
  40ff78:	cmp    BYTE PTR [rcx],0x2d
  40ff7b:	mov    edx,0x2e
  40ff80:	mov    rbx,rcx
  40ff83:	sete   al
  40ff86:	add    rbx,rax
  40ff89:	mov    rcx,rbx
  40ff8c:	call   0x42a428
  40ff91:	test   rax,rax
  40ff94:	je     0x40ffb1
  40ff96:	mov    rcx,rax
  40ff99:	call   0x42a400
  40ff9e:	mov    esi,eax
  40ffa0:	mov    rcx,rbx
  40ffa3:	call   0x42a400
  40ffa8:	sub    eax,esi
  40ffaa:	add    rsp,0x28
  40ffae:	pop    rbx
  40ffaf:	pop    rsi
  40ffb0:	ret    
  40ffb1:	xor    esi,esi
  40ffb3:	jmp    0x40ffa0
  40ffb5:	nop
  40ffb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffc0:	test   dl,dl
  40ffc2:	jne    0x40ffd1
  40ffc4:	test   rcx,rcx
  40ffc7:	je     0x40ffe0
  40ffc9:	mov    rdx,r8
  40ffcc:	jmp    0x42a4f8
  40ffd1:	mov    rdx,r8
  40ffd4:	xor    ecx,ecx
  40ffd6:	jmp    0x42a500
  40ffdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ffe0:	repz ret 
  40ffe2:	nop    DWORD PTR [rax+0x0]
  40ffe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fff0:	push   r12
  40fff2:	push   rbp
  40fff3:	push   rdi
  40fff4:	push   rsi
  40fff5:	push   rbx
  40fff6:	sub    rsp,0x20
  40fffa:	xor    edi,edi
  40fffc:	mov    r12d,0x1
  410002:	lea    rsi,[rip+0x2d60b]        # 0x43d614
  410009:	mov    rbx,rcx
  41000c:	movsx  ecx,BYTE PTR [rcx]
  41000f:	mov    rbp,rdx
  410012:	test   cl,cl
  410014:	je     0x410072
  410016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410020:	lea    eax,[rcx-0xa]
  410023:	cmp    al,0x34
  410025:	ja     0x410123
  41002b:	movzx  eax,al
  41002e:	movsxd rax,DWORD PTR [rsi+rax*4]
  410032:	add    rax,rsi
  410035:	jmp    rax
  410037:	nop    WORD PTR [rax+rax*1+0x0]
  410040:	lea    rcx,[rip+0x2d5b2]        # 0x43d5f9
  410047:	mov    r9,rbp
  41004a:	mov    r8d,0x4
  410050:	mov    edx,0x1
  410055:	call   0x42a4e0
  41005a:	nop    WORD PTR [rax+rax*1+0x0]
  410060:	cmp    BYTE PTR [rbx],0x20
  410063:	cmovne r12d,edi
  410067:	add    rbx,0x1
  41006b:	movsx  ecx,BYTE PTR [rbx]
  41006e:	test   cl,cl
  410070:	jne    0x410020
  410072:	add    rsp,0x20
  410076:	pop    rbx
  410077:	pop    rsi
  410078:	pop    rdi
  410079:	pop    rbp
  41007a:	pop    r12
  41007c:	ret    
  41007d:	nop    DWORD PTR [rax]
  410080:	lea    rcx,[rip+0x2d56d]        # 0x43d5f4
  410087:	mov    r9,rbp
  41008a:	mov    r8d,0x4
  410090:	mov    edx,0x1
  410095:	call   0x42a4e0
  41009a:	jmp    0x410060
  41009c:	nop    DWORD PTR [rax+0x0]
  4100a0:	lea    rcx,[rip+0x2d547]        # 0x43d5ee
  4100a7:	mov    r9,rbp
  4100aa:	mov    r8d,0x5
  4100b0:	mov    edx,0x1
  4100b5:	call   0x42a4e0
  4100ba:	jmp    0x410060
  4100bc:	nop    DWORD PTR [rax+0x0]
  4100c0:	lea    rcx,[rip+0x2d53f]        # 0x43d606
  4100c7:	mov    r9,rbp
  4100ca:	mov    r8d,0x6
  4100d0:	mov    edx,0x1
  4100d5:	call   0x42a4e0
  4100da:	jmp    0x410060
  4100dc:	nop    DWORD PTR [rax+0x0]
  4100e0:	test   r12b,r12b
  4100e3:	je     0x410130
  4100e5:	lea    rcx,[rip+0x2d521]        # 0x43d60d
  4100ec:	mov    r9,rbp
  4100ef:	mov    r8d,0x6
  4100f5:	mov    edx,0x1
  4100fa:	call   0x42a4e0
  4100ff:	jmp    0x410060
  410104:	lea    rcx,[rip+0x2d4f3]        # 0x43d5fe
  41010b:	mov    r9,rbp
  41010e:	mov    r8d,0x7
  410114:	mov    edx,0x1
  410119:	call   0x42a4e0
  41011e:	jmp    0x410060
  410123:	mov    rdx,rbp
  410126:	call   0x42a500
  41012b:	jmp    0x410060
  410130:	mov    rdx,rbp
  410133:	mov    ecx,0x20
  410138:	call   0x42a500
  41013d:	jmp    0x410060
  410142:	nop    DWORD PTR [rax+0x0]
  410146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410150:	push   rbx
  410151:	sub    rsp,0x20
  410155:	mov    rbx,QWORD PTR [rip+0x4ca58]        # 0x45cbb4
  41015c:	test   dx,dx
  41015f:	je     0x410176
  410161:	call   rbx
  410163:	mov    rcx,rax
  410166:	call   0x42a368
  41016b:	mov    ecx,eax
  41016d:	call   0x42a380
  410172:	test   eax,eax
  410174:	jne    0x410182
  410176:	call   rbx
  410178:	add    rax,0x30
  41017c:	add    rsp,0x20
  410180:	pop    rbx
  410181:	ret    
  410182:	call   rbx
  410184:	lea    rcx,[rax+0x30]
  410188:	call   0x42a368
  41018d:	mov    ecx,eax
  41018f:	call   0x42a380
  410194:	test   eax,eax
  410196:	je     0x410176
  410198:	lea    rcx,[rip+0x2d54e]        # 0x43d6ed
  41019f:	call   0x42a4d0
  4101a4:	lea    rdx,[rip+0x2d53d]        # 0x43d6e8
  4101ab:	test   rax,rax
  4101ae:	cmove  rax,rdx
  4101b2:	lea    rdx,[rip+0x2d53a]        # 0x43d6f3
  4101b9:	mov    rcx,rax
  4101bc:	call   0x424fe0
  4101c1:	test   rax,rax
  4101c4:	jne    0x41017c
  4101c6:	jmp    0x410176
  4101c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101d0:	push   r13
  4101d2:	push   r12
  4101d4:	push   rbp
  4101d5:	push   rdi
  4101d6:	push   rsi
  4101d7:	push   rbx
  4101d8:	sub    rsp,0x28
  4101dc:	mov    r12,QWORD PTR [r9]
  4101df:	mov    rbx,QWORD PTR [rip+0x4c9ce]        # 0x45cbb4
  4101e6:	mov    rbp,rcx
  4101e9:	mov    esi,edx
  4101eb:	mov    r13d,r8d
  4101ee:	mov    rdi,r9
  4101f1:	call   rbx
  4101f3:	add    rax,0x30
  4101f7:	cmp    r12,rax
  4101fa:	je     0x410214
  4101fc:	mov    rax,QWORD PTR [rsp+0x80]
  410204:	mov    BYTE PTR [rax],0x0
  410207:	add    rsp,0x28
  41020b:	pop    rbx
  41020c:	pop    rsi
  41020d:	pop    rdi
  41020e:	pop    rbp
  41020f:	pop    r12
  410211:	pop    r13
  410213:	ret    
  410214:	test   r13b,r13b
  410217:	je     0x410281
  410219:	mov    eax,DWORD PTR [rbp+0x10]
  41021c:	lea    r8d,[rax+0x1]
  410220:	imul   r8d,DWORD PTR [rbp+0x14]
  410225:	mov    rdx,QWORD PTR [rbp+0x0]
  410229:	cmp    BYTE PTR [rdx+0xa],0x0
  41022d:	jne    0x41024d
  41022f:	mov    rax,QWORD PTR [rbp+0x48]
  410233:	test   rax,rax
  410236:	je     0x41024d
  410238:	nop    DWORD PTR [rax+rax*1+0x0]
  410240:	mov    rax,QWORD PTR [rax+0x8]
  410244:	add    r8d,0x1
  410248:	test   rax,rax
  41024b:	jne    0x410240
  41024d:	movzx  edx,WORD PTR [rdx+0x8]
  410251:	lea    ecx,[r8+rsi*1]
  410255:	call   0x410150
  41025a:	mov    rsi,rax
  41025d:	mov    QWORD PTR [rdi],rax
  410260:	call   rbx
  410262:	lea    rdx,[rax+0x30]
  410266:	mov    rax,QWORD PTR [rsp+0x80]
  41026e:	cmp    rsi,rdx
  410271:	setne  BYTE PTR [rax]
  410274:	add    rsp,0x28
  410278:	pop    rbx
  410279:	pop    rsi
  41027a:	pop    rdi
  41027b:	pop    rbp
  41027c:	pop    r12
  41027e:	pop    r13
  410280:	ret    
  410281:	mov    eax,DWORD PTR [rbp+0x14]
  410284:	lea    r8d,[rax+0x1]
  410288:	jmp    0x410225
  41028a:	nop    WORD PTR [rax+rax*1+0x0]
  410290:	push   rbx
  410291:	sub    rsp,0x20
  410295:	test   rcx,rcx
  410298:	je     0x4102e1
  41029a:	mov    rbx,rcx
  41029d:	call   QWORD PTR [rip+0x4c911]        # 0x45cbb4
  4102a3:	add    rax,0x30
  4102a7:	cmp    rbx,rax
  4102aa:	je     0x4102e1
  4102ac:	movzx  eax,BYTE PTR [rip+0x49fcd]        # 0x45a280
  4102b3:	test   al,al
  4102b5:	jne    0x4102d0
  4102b7:	mov    rax,QWORD PTR [rip+0x4c966]        # 0x45cc24
  4102be:	mov    rcx,rbx
  4102c1:	add    rsp,0x20
  4102c5:	pop    rbx
  4102c6:	rex.W jmp rax
  4102c9:	nop    DWORD PTR [rax+0x0]
  4102d0:	lea    rdx,[rip+0x2d41e]        # 0x43d6f5
  4102d7:	mov    rcx,rbx
  4102da:	call   0x426370
  4102df:	jmp    0x4102b7
  4102e1:	add    rsp,0x20
  4102e5:	pop    rbx
  4102e6:	ret    
  4102e7:	nop    WORD PTR [rax+rax*1+0x0]
  4102f0:	push   r15
  4102f2:	push   r14
  4102f4:	push   r13
  4102f6:	push   r12
  4102f8:	push   rbp
  4102f9:	push   rdi
  4102fa:	push   rsi
  4102fb:	push   rbx
  4102fc:	sub    rsp,0xa8
  410303:	mov    rax,QWORD PTR [rcx]
  410306:	lea    r8,[rip+0x2dab3]        # 0x43ddc0
  41030d:	mov    QWORD PTR [rsp+0xf8],rdx
  410315:	mov    BYTE PTR [rsp+0x93],0x0
  41031d:	mov    r13,QWORD PTR [rax+0x18]
  410321:	movzx  esi,BYTE PTR [rax+0xa]
  410325:	mov    edi,DWORD PTR [rax+0x50]
  410328:	movzx  edx,WORD PTR [rax+0x6]
  41032c:	test   r13,r13
  41032f:	cmove  r13,r8
  410333:	movzx  r8d,BYTE PTR [rip+0x49f45]        # 0x45a280
  41033b:	mov    BYTE PTR [rsp+0x58],sil
  410340:	mov    esi,DWORD PTR [rax+0x10]
  410343:	mov    DWORD PTR [rsp+0x60],edi
  410347:	test   r8b,r8b
  41034a:	mov    DWORD PTR [rsp+0x64],esi
  41034e:	jne    0x4108c0
  410354:	cmp    dx,0x2
  410358:	mov    edi,0x2
  41035d:	mov    QWORD PTR [rsp+0x68],rcx
  410362:	cmovbe edi,edx
  410365:	mov    rdx,QWORD PTR [rcx+0x28]
  410369:	cmp    QWORD PTR [rdx],0x0
  41036d:	je     0x410a57
  410373:	mov    rsi,QWORD PTR [rsp+0x68]
  410378:	lea    rax,[rsp+0x93]
  410380:	lea    r9,[rsp+0xf8]
  410388:	xor    edx,edx
  41038a:	mov    r8d,0x1
  410390:	mov    QWORD PTR [rsp+0x20],rax
  410395:	mov    rcx,rsi
  410398:	call   0x4101d0
  41039d:	mov    edx,DWORD PTR [rsi+0x10]
  4103a0:	mov    rax,rsi
  4103a3:	test   edx,edx
  4103a5:	je     0x410b10
  4103ab:	lea    rcx,[rsp+0x94]
  4103b3:	xor    edx,edx
  4103b5:	lea    r12,[rsp+0x9c]
  4103bd:	lea    rbp,[rsp+0x98]
  4103c5:	mov    QWORD PTR [rsp+0x50],r13
  4103ca:	mov    WORD PTR [rsp+0x88],di
  4103d2:	xor    esi,esi
  4103d4:	mov    r15d,0x1
  4103da:	xor    ebx,ebx
  4103dc:	mov    QWORD PTR [rsp+0x48],rcx
  4103e1:	mov    edi,edx
  4103e3:	mov    r13,rax
  4103e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4103f0:	mov    rax,QWORD PTR [r13+0x18]
  4103f4:	mov    edx,ebx
  4103f6:	mov    r14,QWORD PTR [rax+rdx*8]
  4103fa:	mov    rcx,r14
  4103fd:	call   0x42a400
  410402:	mov    r9,QWORD PTR [rsp+0x48]
  410407:	mov    r8d,DWORD PTR [rsp+0x60]
  41040c:	mov    rdx,rax
  41040f:	mov    QWORD PTR [rsp+0x28],r12
  410414:	mov    QWORD PTR [rsp+0x20],rbp
  410419:	mov    rcx,r14
  41041c:	call   0x41c8e0
  410421:	mov    eax,DWORD PTR [rsp+0x94]
  410428:	cmp    edi,eax
  41042a:	cmovb  edi,eax
  41042d:	mov    eax,DWORD PTR [rsp+0x98]
  410434:	cmp    r15d,eax
  410437:	cmovb  r15d,eax
  41043b:	mov    eax,DWORD PTR [rsp+0x9c]
  410442:	cmp    esi,eax
  410444:	cmovb  esi,eax
  410447:	add    ebx,0x1
  41044a:	cmp    DWORD PTR [r13+0x10],ebx
  41044e:	ja     0x4103f0
  410450:	mov    eax,r15d
  410453:	mov    r13,QWORD PTR [rsp+0x50]
  410458:	mov    DWORD PTR [rsp+0x48],edi
  41045c:	add    eax,0x1
  41045f:	movzx  edi,WORD PTR [rsp+0x88]
  410467:	mov    DWORD PTR [rsp+0x88],r15d
  41046f:	shl    rax,0x4
  410473:	mov    QWORD PTR [rsp+0x78],rax
  410478:	mov    eax,esi
  41047a:	mov    QWORD PTR [rsp+0x80],rax
  410482:	mov    rax,QWORD PTR [rsp+0x68]
  410487:	mov    r15,QWORD PTR [rax+0x28]
  41048b:	mov    rbx,QWORD PTR [r15]
  41048e:	test   rbx,rbx
  410491:	je     0x410b3d
  410497:	lea    rbp,[rsp+0x98]
  41049f:	xor    ecx,ecx
  4104a1:	lea    r12,[rsp+0x9c]
  4104a9:	lea    rax,[rsp+0x94]
  4104b1:	xor    esi,esi
  4104b3:	mov    r14d,0x1
  4104b9:	mov    QWORD PTR [rsp+0x70],r13
  4104be:	mov    r13d,ecx
  4104c1:	mov    rcx,rbp
  4104c4:	mov    WORD PTR [rsp+0x8c],di
  4104cc:	mov    ebp,r14d
  4104cf:	mov    rdi,r12
  4104d2:	mov    r14d,esi
  4104d5:	mov    r12,rax
  4104d8:	mov    rsi,rcx
  4104db:	nop    DWORD PTR [rax+rax*1+0x0]
  4104e0:	mov    rcx,rbx
  4104e3:	call   0x42a400
  4104e8:	mov    r8d,DWORD PTR [rsp+0x60]
  4104ed:	mov    rdx,rax
  4104f0:	mov    rcx,rbx
  4104f3:	mov    QWORD PTR [rsp+0x28],rdi
  4104f8:	mov    QWORD PTR [rsp+0x20],rsi
  4104fd:	mov    r9,r12
  410500:	call   0x41c8e0
  410505:	mov    eax,DWORD PTR [rsp+0x94]
  41050c:	cmp    r13d,eax
  41050f:	cmovb  r13d,eax
  410513:	mov    eax,DWORD PTR [rsp+0x98]
  41051a:	cmp    ebp,eax
  41051c:	cmovb  ebp,eax
  41051f:	mov    eax,DWORD PTR [rsp+0x9c]
  410526:	cmp    r14d,eax
  410529:	cmovb  r14d,eax
  41052d:	add    r15,0x8
  410531:	mov    rbx,QWORD PTR [r15]
  410534:	test   rbx,rbx
  410537:	jne    0x4104e0
  410539:	movzx  edi,WORD PTR [rsp+0x8c]
  410541:	lea    ecx,[rbp+0x1]
  410544:	mov    DWORD PTR [rsp+0x50],r13d
  410549:	mov    esi,r14d
  41054c:	mov    r13,QWORD PTR [rsp+0x70]
  410551:	mov    DWORD PTR [rsp+0x70],ebp
  410555:	shl    rcx,0x4
  410559:	call   0x424800
  41055e:	mov    rcx,QWORD PTR [rsp+0x78]
  410563:	mov    r14,rax
  410566:	call   0x424800
  41056b:	mov    rcx,rsi
  41056e:	mov    r15,rax
  410571:	call   0x424800
  410576:	mov    rcx,QWORD PTR [rsp+0x80]
  41057e:	mov    QWORD PTR [r14],rax
  410581:	call   0x424800
  410586:	mov    rcx,QWORD PTR [rsp+0x68]
  41058b:	cmp    BYTE PTR [rsp+0x58],0x0
  410590:	mov    QWORD PTR [r15],rax
  410593:	mov    rax,QWORD PTR [rcx]
  410596:	sete   BYTE PTR [rsp+0x78]
  41059b:	movzx  esi,BYTE PTR [rsp+0x78]
  4105a0:	cmp    BYTE PTR [rax+0xb],0x0
  4105a4:	je     0x4105c8
  4105a6:	test   sil,sil
  4105a9:	je     0x4105c8
  4105ab:	mov    r8,QWORD PTR [rcx+0x8]
  4105af:	test   r8,r8
  4105b2:	je     0x4105c8
  4105b4:	mov    rcx,QWORD PTR [rsp+0xf8]
  4105bc:	lea    rdx,[rip+0x2d14a]        # 0x43d70d
  4105c3:	call   0x426370
  4105c8:	mov    rax,QWORD PTR [rsp+0x68]
  4105cd:	mov    rax,QWORD PTR [rax+0x28]
  4105d1:	cmp    QWORD PTR [rax],0x0
  4105d5:	mov    QWORD PTR [rsp+0x58],rax
  4105da:	je     0x410815
  4105e0:	movzx  eax,BYTE PTR [rip+0x49c99]        # 0x45a280
  4105e7:	test   al,al
  4105e9:	jne    0x410815
  4105ef:	mov    eax,DWORD PTR [rsp+0x64]
  4105f3:	mov    DWORD PTR [rsp+0x64],0x0
  4105fb:	add    eax,0x1
  4105fe:	mov    DWORD PTR [rsp+0x8c],eax
  410605:	movzx  eax,di
  410608:	mov    DWORD PTR [rsp+0x80],eax
  41060f:	nop
  410610:	mov    eax,DWORD PTR [rsp+0x64]
  410614:	test   eax,eax
  410616:	je     0x410981
  41061c:	mov    rax,QWORD PTR [rsp+0x58]
  410621:	mov    rsi,QWORD PTR [rsp+0x68]
  410626:	cmp    QWORD PTR [rax+0x8],0x1
  41062b:	mov    eax,DWORD PTR [rsp+0x64]
  41062f:	sbb    ecx,ecx
  410631:	xor    edx,edx
  410633:	div    DWORD PTR [rsi+0x10]
  410636:	not    ecx
  410638:	add    ecx,0x2
  41063b:	test   edx,edx
  41063d:	je     0x410b59
  410643:	mov    rax,QWORD PTR [rsp+0x68]
  410648:	mov    edx,edx
  41064a:	xor    ebp,ebp
  41064c:	xor    r12d,r12d
  41064f:	mov    rax,QWORD PTR [rax+0x18]
  410653:	mov    rbx,QWORD PTR [rax+rdx*8]
  410657:	mov    rcx,rbx
  41065a:	call   0x42a400
  41065f:	mov    esi,DWORD PTR [rsp+0x88]
  410666:	mov    rdx,rax
  410669:	mov    r9,r15
  41066c:	mov    rcx,rbx
  41066f:	mov    DWORD PTR [rsp+0x20],esi
  410673:	mov    esi,DWORD PTR [rsp+0x60]
  410677:	mov    r8d,esi
  41067a:	call   0x41ca80
  41067f:	mov    rax,QWORD PTR [rsp+0x58]
  410684:	mov    rbx,QWORD PTR [rax]
  410687:	mov    rcx,rbx
  41068a:	call   0x42a400
  41068f:	mov    ecx,DWORD PTR [rsp+0x70]
  410693:	mov    r8d,esi
  410696:	mov    r9,r14
  410699:	mov    rdx,rax
  41069c:	xor    esi,esi
  41069e:	mov    DWORD PTR [rsp+0x20],ecx
  4106a2:	mov    rcx,rbx
  4106a5:	call   0x41ca80
  4106aa:	jmp    0x41076c
  4106af:	nop
  4106b0:	movsxd rbx,esi
  4106b3:	lea    rcx,[rip+0x2d062]        # 0x43d71c
  4106ba:	mov    r9d,DWORD PTR [rsp+0x48]
  4106bf:	shl    rbx,0x4
  4106c3:	lea    rdx,[rip+0x2d04b]        # 0x43d715
  4106ca:	lea    rax,[r15+rbx*1]
  4106ce:	sub    r9d,DWORD PTR [rax+0x8]
  4106d2:	mov    QWORD PTR [rsp+0x20],rcx
  4106d7:	mov    rcx,QWORD PTR [rsp+0xf8]
  4106df:	mov    r8,QWORD PTR [rax]
  4106e2:	call   0x426370
  4106e7:	cmp    QWORD PTR [r15+rbx*1+0x10],0x0
  4106ed:	sete   bl
  4106f0:	movzx  ebp,bl
  4106f3:	xor    ebx,0x1
  4106f6:	test   di,di
  4106f9:	movzx  ebx,bl
  4106fc:	je     0x4107ae
  410702:	mov    r8,QWORD PTR [r13+0x78]
  410706:	mov    rcx,QWORD PTR [rsp+0xf8]
  41070e:	lea    rdx,[rip+0x2d00c]        # 0x43d721
  410715:	call   0x426370
  41071a:	test   r12d,r12d
  41071d:	je     0x4108d4
  410723:	cmp    di,0x2
  410727:	jne    0x4107c9
  41072d:	mov    rax,QWORD PTR [r13+0x80]
  410734:	mov    r8d,DWORD PTR [rsp+0x50]
  410739:	lea    r9,[rip+0x2cfdc]        # 0x43d71c
  410740:	mov    rcx,QWORD PTR [rsp+0xf8]
  410748:	lea    rdx,[rip+0x2cfe2]        # 0x43d731
  41074f:	mov    r12d,0x1
  410755:	mov    QWORD PTR [rsp+0x20],rax
  41075a:	call   0x426370
  41075f:	xor    eax,eax
  410761:	add    esi,0x1
  410764:	or     eax,ebx
  410766:	je     0x4107f0
  41076c:	cmp    di,0x2
  410770:	je     0x410964
  410776:	test   ebp,ebp
  410778:	je     0x4106b0
  41077e:	mov    r8d,DWORD PTR [rsp+0x48]
  410783:	mov    rcx,QWORD PTR [rsp+0xf8]
  41078b:	lea    r9,[rip+0x2cf8a]        # 0x43d71c
  410792:	lea    rdx,[rip+0x2cf84]        # 0x43d71d
  410799:	xor    ebx,ebx
  41079b:	mov    ebp,0x1
  4107a0:	call   0x426370
  4107a5:	test   di,di
  4107a8:	jne    0x410702
  4107ae:	mov    rdx,QWORD PTR [rsp+0xf8]
  4107b6:	mov    ecx,0x20
  4107bb:	call   0x42a500
  4107c0:	test   r12d,r12d
  4107c3:	je     0x410940
  4107c9:	mov    rdx,QWORD PTR [rsp+0xf8]
  4107d1:	mov    ecx,0xa
  4107d6:	add    esi,0x1
  4107d9:	mov    r12d,0x1
  4107df:	call   0x42a500
  4107e4:	xor    eax,eax
  4107e6:	or     eax,ebx
  4107e8:	jne    0x41076c
  4107ea:	nop    WORD PTR [rax+rax*1+0x0]
  4107f0:	add    QWORD PTR [rsp+0x58],0x8
  4107f6:	add    DWORD PTR [rsp+0x64],0x1
  4107fb:	mov    rax,QWORD PTR [rsp+0x58]
  410800:	cmp    QWORD PTR [rax],0x0
  410804:	je     0x410815
  410806:	movzx  eax,BYTE PTR [rip+0x49a73]        # 0x45a280
  41080d:	test   al,al
  41080f:	je     0x410610
  410815:	mov    rax,QWORD PTR [rsp+0x68]
  41081a:	mov    rax,QWORD PTR [rax]
  41081d:	cmp    BYTE PTR [rax+0xc],0x0
  410821:	je     0x410892
  410823:	cmp    di,0x2
  410827:	je     0x410aa0
  41082d:	cmp    BYTE PTR [rsp+0x78],0x0
  410832:	je     0x410880
  410834:	mov    rax,QWORD PTR [rsp+0x68]
  410839:	mov    rbx,QWORD PTR [rax+0x48]
  41083d:	test   rbx,rbx
  410840:	je     0x410880
  410842:	movzx  eax,BYTE PTR [rip+0x49a37]        # 0x45a280
  410849:	test   al,al
  41084b:	jne    0x410880
  41084d:	cmp    di,0x2
  410851:	jne    0x410ae6
  410857:	nop    WORD PTR [rax+rax*1+0x0]
  410860:	mov    r8,QWORD PTR [rbx]
  410863:	mov    rcx,QWORD PTR [rsp+0xf8]
  41086b:	lea    rdx,[rip+0x2ce9b]        # 0x43d70d
  410872:	call   0x426370
  410877:	mov    rbx,QWORD PTR [rbx+0x8]
  41087b:	test   rbx,rbx
  41087e:	jne    0x410860
  410880:	mov    rdx,QWORD PTR [rsp+0xf8]
  410888:	mov    ecx,0xa
  41088d:	call   0x42a500
  410892:	mov    rcx,QWORD PTR [r15]
  410895:	call   0x42a4e8
  41089a:	mov    rcx,QWORD PTR [r14]
  41089d:	call   0x42a4e8
  4108a2:	mov    rcx,r15
  4108a5:	call   0x42a4e8
  4108aa:	mov    rcx,r14
  4108ad:	call   0x42a4e8
  4108b2:	cmp    BYTE PTR [rsp+0x93],0x0
  4108ba:	jne    0x410a45
  4108c0:	add    rsp,0xa8
  4108c7:	pop    rbx
  4108c8:	pop    rsi
  4108c9:	pop    rdi
  4108ca:	pop    rbp
  4108cb:	pop    r12
  4108cd:	pop    r13
  4108cf:	pop    r14
  4108d1:	pop    r15
  4108d3:	ret    
  4108d4:	cmp    di,0x2
  4108d8:	jne    0x410940
  4108da:	movsxd r12,esi
  4108dd:	mov    rdx,QWORD PTR [r13+0x80]
  4108e4:	mov    r9d,DWORD PTR [rsp+0x50]
  4108e9:	mov    rax,r12
  4108ec:	mov    rcx,QWORD PTR [rsp+0xf8]
  4108f4:	shl    rax,0x4
  4108f8:	add    rax,r14
  4108fb:	sub    r9d,DWORD PTR [rax+0x8]
  4108ff:	mov    QWORD PTR [rsp+0x28],rdx
  410904:	lea    rdx,[rip+0x2ce11]        # 0x43d71c
  41090b:	mov    QWORD PTR [rsp+0x20],rdx
  410910:	mov    r8,QWORD PTR [rax]
  410913:	lea    rdx,[rip+0x2ce0c]        # 0x43d726
  41091a:	call   0x426370
  41091f:	add    r12,0x1
  410923:	shl    r12,0x4
  410927:	cmp    QWORD PTR [r14+r12*1],0x0
  41092c:	sete   al
  41092f:	movzx  r12d,al
  410933:	xor    eax,0x1
  410936:	movzx  eax,al
  410939:	jmp    0x410761
  41093e:	xchg   ax,ax
  410940:	movsxd r12,esi
  410943:	mov    rcx,QWORD PTR [rsp+0xf8]
  41094b:	lea    rdx,[rip+0x2cdbb]        # 0x43d70d
  410952:	mov    rax,r12
  410955:	shl    rax,0x4
  410959:	mov    r8,QWORD PTR [r14+rax*1]
  41095d:	call   0x426370
  410962:	jmp    0x41091f
  410964:	mov    r8,QWORD PTR [r13+0x70]
  410968:	mov    rcx,QWORD PTR [rsp+0xf8]
  410970:	lea    rdx,[rip+0x2cd9a]        # 0x43d711
  410977:	call   0x426370
  41097c:	jmp    0x410776
  410981:	cmp    BYTE PTR [rsp+0x78],0x0
  410986:	jne    0x4109f0
  410988:	cmp    di,0x2
  41098c:	je     0x4109a2
  41098e:	mov    rax,QWORD PTR [rsp+0x68]
  410993:	xor    edx,edx
  410995:	mov    rax,QWORD PTR [rax]
  410998:	cmp    BYTE PTR [rax+0xb],0x0
  41099c:	jne    0x410643
  4109a2:	xor    ecx,ecx
  4109a4:	mov    rax,QWORD PTR [rsp+0xf8]
  4109ac:	mov    edx,DWORD PTR [rsp+0x80]
  4109b3:	xor    r8d,r8d
  4109b6:	mov    r9d,DWORD PTR [rsp+0x48]
  4109bb:	mov    DWORD PTR [rsp+0x28],ecx
  4109bf:	mov    rcx,r13
  4109c2:	mov    QWORD PTR [rsp+0x30],rax
  4109c7:	mov    eax,DWORD PTR [rsp+0x50]
  4109cb:	mov    DWORD PTR [rsp+0x20],eax
  4109cf:	call   0x40fc40
  4109d4:	mov    rsi,QWORD PTR [rsp+0x68]
  4109d9:	mov    eax,DWORD PTR [rsp+0x64]
  4109dd:	xor    edx,edx
  4109df:	div    DWORD PTR [rsi+0x10]
  4109e2:	jmp    0x410643
  4109e7:	nop    WORD PTR [rax+rax*1+0x0]
  4109f0:	xor    ecx,ecx
  4109f2:	mov    rax,QWORD PTR [rsp+0xf8]
  4109fa:	mov    r8d,DWORD PTR [rsp+0x8c]
  410a02:	mov    edx,DWORD PTR [rsp+0x80]
  410a09:	mov    r9d,DWORD PTR [rsp+0x48]
  410a0e:	mov    DWORD PTR [rsp+0x28],ecx
  410a12:	mov    rcx,r13
  410a15:	mov    QWORD PTR [rsp+0x30],rax
  410a1a:	mov    eax,DWORD PTR [rsp+0x50]
  410a1e:	lea    ebx,[r8+0x1]
  410a22:	mov    DWORD PTR [rsp+0x20],eax
  410a26:	call   0x40fc40
  410a2b:	mov    rsi,QWORD PTR [rsp+0x68]
  410a30:	mov    eax,DWORD PTR [rsp+0x64]
  410a34:	xor    edx,edx
  410a36:	mov    DWORD PTR [rsp+0x8c],ebx
  410a3d:	div    DWORD PTR [rsi+0x10]
  410a40:	jmp    0x410643
  410a45:	mov    rcx,QWORD PTR [rsp+0xf8]
  410a4d:	call   0x410290
  410a52:	jmp    0x4108c0
  410a57:	cmp    BYTE PTR [rax+0xb],0x0
  410a5b:	je     0x410373
  410a61:	cmp    BYTE PTR [rax+0xc],0x0
  410a65:	je     0x410373
  410a6b:	cmp    BYTE PTR [rsp+0x58],0x0
  410a70:	jne    0x4108c0
  410a76:	cmp    BYTE PTR [rax+0xd],0x0
  410a7a:	je     0x4108c0
  410a80:	mov    rcx,QWORD PTR [rsp+0xf8]
  410a88:	lea    rdx,[rip+0x2cc73]        # 0x43d702
  410a8f:	call   0x426370
  410a94:	jmp    0x4108c0
  410a99:	nop    DWORD PTR [rax+0x0]
  410aa0:	movzx  eax,BYTE PTR [rip+0x497d9]        # 0x45a280
  410aa7:	test   al,al
  410aa9:	jne    0x41082d
  410aaf:	mov    rax,QWORD PTR [rsp+0xf8]
  410ab7:	mov    r9d,DWORD PTR [rsp+0x48]
  410abc:	xor    r8d,r8d
  410abf:	mov    DWORD PTR [rsp+0x28],0x2
  410ac7:	mov    edx,0x2
  410acc:	mov    rcx,r13
  410acf:	mov    QWORD PTR [rsp+0x30],rax
  410ad4:	mov    eax,DWORD PTR [rsp+0x50]
  410ad8:	mov    DWORD PTR [rsp+0x20],eax
  410adc:	call   0x40fc40
  410ae1:	jmp    0x41082d
  410ae6:	mov    rdx,QWORD PTR [rsp+0xf8]
  410aee:	mov    ecx,0xa
  410af3:	call   0x42a500
  410af8:	mov    rax,QWORD PTR [rsp+0x68]
  410afd:	mov    rbx,QWORD PTR [rax+0x48]
  410b01:	test   rbx,rbx
  410b04:	je     0x410880
  410b0a:	jmp    0x410860
  410b0f:	nop
  410b10:	mov    QWORD PTR [rsp+0x80],0x0
  410b1c:	mov    QWORD PTR [rsp+0x78],0x20
  410b25:	mov    DWORD PTR [rsp+0x88],0x1
  410b30:	mov    DWORD PTR [rsp+0x48],0x0
  410b38:	jmp    0x410482
  410b3d:	xor    esi,esi
  410b3f:	mov    ecx,0x20
  410b44:	mov    DWORD PTR [rsp+0x70],0x1
  410b4c:	mov    DWORD PTR [rsp+0x50],0x0
  410b54:	jmp    0x410559
  410b59:	cmp    BYTE PTR [rsp+0x78],0x0
  410b5e:	je     0x4109a4
  410b64:	jmp    0x4109f2
  410b69:	nop    DWORD PTR [rax+0x0]
  410b70:	push   r15
  410b72:	push   r14
  410b74:	push   r13
  410b76:	push   r12
  410b78:	push   rbp
  410b79:	push   rdi
  410b7a:	push   rsi
  410b7b:	push   rbx
  410b7c:	sub    rsp,0x128
  410b83:	mov    rax,QWORD PTR [rcx]
  410b86:	mov    QWORD PTR [rsp+0x178],rdx
  410b8e:	mov    BYTE PTR [rsp+0x113],0x0
  410b96:	movzx  edi,BYTE PTR [rax+0xa]
  410b9a:	mov    r14d,DWORD PTR [rax+0x50]
  410b9e:	movzx  edx,WORD PTR [rax+0x6]
  410ba2:	mov    rax,QWORD PTR [rax+0x18]
  410ba6:	mov    BYTE PTR [rsp+0xff],dil
  410bae:	test   rax,rax
  410bb1:	mov    rdi,rax
  410bb4:	lea    rax,[rip+0x2d205]        # 0x43ddc0
  410bbb:	mov    rsi,rax
  410bbe:	movzx  eax,BYTE PTR [rip+0x496bb]        # 0x45a280
  410bc5:	cmovne rsi,rdi
  410bc9:	mov    QWORD PTR [rsp+0x90],rsi
  410bd1:	test   al,al
  410bd3:	jne    0x411022
  410bd9:	cmp    dx,0x2
  410bdd:	mov    eax,0x2
  410be2:	mov    QWORD PTR [rsp+0x78],rcx
  410be7:	cmovbe eax,edx
  410bea:	mov    WORD PTR [rsp+0x82],ax
  410bf2:	mov    eax,DWORD PTR [rcx+0x10]
  410bf5:	test   eax,eax
  410bf7:	jle    0x411386
  410bfd:	movsxd rsi,eax
  410c00:	mov    r15d,eax
  410c03:	mov    DWORD PTR [rsp+0xf8],eax
  410c0a:	lea    rbx,[rsi*4+0x0]
  410c12:	lea    rdi,[rsi*8+0x0]
  410c1a:	lea    r12,[rsp+0x114]
  410c22:	lea    rbp,[rsp+0x118]
  410c2a:	xor    r13d,r13d
  410c2d:	mov    rcx,rbx
  410c30:	call   0x424840
  410c35:	mov    rcx,rbx
  410c38:	mov    QWORD PTR [rsp+0xd8],rax
  410c40:	call   0x424840
  410c45:	mov    rcx,rbx
  410c48:	mov    QWORD PTR [rsp+0xd0],rax
  410c50:	call   0x424840
  410c55:	mov    rcx,rbx
  410c58:	mov    QWORD PTR [rsp+0xb8],rax
  410c60:	call   0x424840
  410c65:	mov    rcx,rbx
  410c68:	mov    QWORD PTR [rsp+0x68],rax
  410c6d:	call   0x424840
  410c72:	mov    rcx,rbx
  410c75:	mov    QWORD PTR [rsp+0xc0],rax
  410c7d:	call   0x424840
  410c82:	mov    rcx,rdi
  410c85:	mov    QWORD PTR [rsp+0xa0],rax
  410c8d:	call   0x424840
  410c92:	mov    rcx,rbx
  410c95:	mov    QWORD PTR [rsp+0x60],rax
  410c9a:	call   0x424840
  410c9f:	mov    rcx,rdi
  410ca2:	mov    QWORD PTR [rsp+0xc8],rax
  410caa:	lea    rdi,[rsp+0x11c]
  410cb2:	call   0x424840
  410cb7:	mov    rcx,rsi
  410cba:	mov    QWORD PTR [rsp+0xf0],rax
  410cc2:	xor    esi,esi
  410cc4:	call   0x424840
  410cc9:	mov    rcx,rbx
  410ccc:	mov    QWORD PTR [rsp+0xe0],rax
  410cd4:	call   0x424840
  410cd9:	mov    rcx,rbx
  410cdc:	mov    QWORD PTR [rsp+0xa8],rax
  410ce4:	call   0x424840
  410ce9:	mov    QWORD PTR [rsp+0xb0],rax
  410cf1:	mov    eax,r15d
  410cf4:	sub    eax,0x1
  410cf7:	lea    rbx,[rax*4+0x4]
  410cff:	mov    r15,rbx
  410d02:	mov    rax,QWORD PTR [rsp+0x78]
  410d07:	mov    rax,QWORD PTR [rax+0x18]
  410d0b:	mov    rbx,QWORD PTR [rax+r13*2]
  410d0f:	mov    rcx,rbx
  410d12:	call   0x42a400
  410d17:	mov    QWORD PTR [rsp+0x28],rdi
  410d1c:	mov    rdx,rax
  410d1f:	mov    QWORD PTR [rsp+0x20],rbp
  410d24:	mov    r9,r12
  410d27:	mov    r8d,r14d
  410d2a:	mov    rcx,rbx
  410d2d:	call   0x41c8e0
  410d32:	mov    rdx,QWORD PTR [rsp+0xb8]
  410d3a:	mov    eax,DWORD PTR [rsp+0x114]
  410d41:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d45:	jbe    0x410d4b
  410d47:	mov    DWORD PTR [rdx+r13*1],eax
  410d4b:	mov    rdx,QWORD PTR [rsp+0xc0]
  410d53:	mov    eax,DWORD PTR [rsp+0x118]
  410d5a:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d5e:	jbe    0x410d64
  410d60:	mov    DWORD PTR [rdx+r13*1],eax
  410d64:	mov    rdx,QWORD PTR [rsp+0xc8]
  410d6c:	mov    eax,DWORD PTR [rsp+0x11c]
  410d73:	cmp    eax,DWORD PTR [rdx+r13*1]
  410d77:	jbe    0x410d7d
  410d79:	mov    DWORD PTR [rdx+r13*1],eax
  410d7d:	mov    eax,DWORD PTR [rsp+0x118]
  410d84:	mov    rdx,QWORD PTR [rsp+0xd8]
  410d8c:	cmp    esi,eax
  410d8e:	cmovb  esi,eax
  410d91:	mov    eax,DWORD PTR [rsp+0x114]
  410d98:	mov    DWORD PTR [rdx+r13*1],eax
  410d9c:	add    r13,0x4
  410da0:	cmp    r13,r15
  410da3:	jne    0x410d02
  410da9:	mov    BYTE PTR [rsp+0xfe],0x1
  410db1:	mov    rax,QWORD PTR [rsp+0x78]
  410db6:	mov    r13,QWORD PTR [rax+0x28]
  410dba:	mov    rbx,QWORD PTR [r13+0x0]
  410dbe:	test   rbx,rbx
  410dc1:	je     0x411036
  410dc7:	lea    r12,[rsp+0x114]
  410dcf:	lea    rdi,[rsp+0x11c]
  410dd7:	lea    rbp,[rsp+0x118]
  410ddf:	xor    r15d,r15d
  410de2:	mov    rcx,rbx
  410de5:	call   0x42a400
  410dea:	mov    rcx,rbx
  410ded:	mov    rdx,rax
  410df0:	mov    QWORD PTR [rsp+0x28],rdi
  410df5:	mov    QWORD PTR [rsp+0x20],rbp
  410dfa:	mov    r9,r12
  410dfd:	mov    r8d,r14d
  410e00:	call   0x41c8e0
  410e05:	xor    edx,edx
  410e07:	mov    eax,r15d
  410e0a:	mov    ecx,DWORD PTR [rsp+0x114]
  410e11:	div    DWORD PTR [rsp+0xf8]
  410e18:	mov    rax,QWORD PTR [rsp+0xb8]
  410e20:	mov    edx,edx
  410e22:	shl    rdx,0x2
  410e26:	add    rax,rdx
  410e29:	cmp    ecx,DWORD PTR [rax]
  410e2b:	jbe    0x410e2f
  410e2d:	mov    DWORD PTR [rax],ecx
  410e2f:	mov    rax,QWORD PTR [rsp+0xc0]
  410e37:	mov    ecx,DWORD PTR [rsp+0x118]
  410e3e:	add    rax,rdx
  410e41:	cmp    ecx,DWORD PTR [rax]
  410e43:	jbe    0x410e47
  410e45:	mov    DWORD PTR [rax],ecx
  410e47:	mov    rax,QWORD PTR [rsp+0xc8]
  410e4f:	mov    ecx,DWORD PTR [rsp+0x11c]
  410e56:	add    rax,rdx
  410e59:	cmp    ecx,DWORD PTR [rax]
  410e5b:	jbe    0x410e5f
  410e5d:	mov    DWORD PTR [rax],ecx
  410e5f:	mov    rcx,QWORD PTR [rsp+0xd0]
  410e67:	add    r13,0x8
  410e6b:	mov    eax,DWORD PTR [rsp+0x114]
  410e72:	add    r15d,0x1
  410e76:	add    DWORD PTR [rcx+rdx*1],eax
  410e79:	mov    rbx,QWORD PTR [r13+0x0]
  410e7d:	test   rbx,rbx
  410e80:	jne    0x410de2
  410e86:	test   r15d,r15d
  410e89:	je     0x411036
  410e8f:	cmp    BYTE PTR [rsp+0xfe],0x0
  410e97:	je     0x411036
  410e9d:	mov    eax,r15d
  410ea0:	xor    edx,edx
  410ea2:	mov    r9,QWORD PTR [rsp+0xd0]
  410eaa:	div    DWORD PTR [rsp+0xf8]
  410eb1:	xor    r8d,r8d
  410eb4:	mov    ecx,eax
  410eb6:	mov    eax,DWORD PTR [r9+r8*4]
  410eba:	xor    edx,edx
  410ebc:	div    ecx
  410ebe:	mov    DWORD PTR [r9+r8*4],eax
  410ec2:	add    r8,0x1
  410ec6:	cmp    DWORD PTR [rsp+0xf8],r8d
  410ece:	ja     0x410eb6
  410ed0:	cmp    WORD PTR [rsp+0x82],0x0
  410ed9:	jne    0x411048
  410edf:	mov    ebx,DWORD PTR [rsp+0xf8]
  410ee6:	jmp    0x411074
  410eeb:	mov    rdx,QWORD PTR [rsp+0x178]
  410ef3:	mov    ecx,0xa
  410ef8:	call   0x42a500
  410efd:	mov    rsi,QWORD PTR [rsp+0x108]
  410f05:	add    QWORD PTR [rsp+0xe8],rsi
  410f0d:	mov    rax,QWORD PTR [rsp+0xe8]
  410f15:	cmp    QWORD PTR [rax],0x0
  410f19:	je     0x410f2a
  410f1b:	movzx  eax,BYTE PTR [rip+0x4935e]        # 0x45a280
  410f22:	test   al,al
  410f24:	je     0x4111e4
  410f2a:	mov    rax,QWORD PTR [rsp+0x78]
  410f2f:	mov    rax,QWORD PTR [rax]
  410f32:	cmp    BYTE PTR [rax+0xc],0x0
  410f36:	jne    0x411968
  410f3c:	xor    ebx,ebx
  410f3e:	cmp    BYTE PTR [rsp+0xfe],0x0
  410f46:	je     0x410f74
  410f48:	mov    rsi,QWORD PTR [rsp+0xf0]
  410f50:	mov    rdi,QWORD PTR [rsp+0x60]
  410f55:	mov    rcx,QWORD PTR [rdi+rbx*8]
  410f59:	call   0x42a4e8
  410f5e:	mov    rcx,QWORD PTR [rsi+rbx*8]
  410f62:	add    rbx,0x1
  410f66:	call   0x42a4e8
  410f6b:	cmp    DWORD PTR [rsp+0xf8],ebx
  410f72:	ja     0x410f55
  410f74:	mov    rcx,QWORD PTR [rsp+0xd8]
  410f7c:	call   0x42a4e8
  410f81:	mov    rcx,QWORD PTR [rsp+0xd0]
  410f89:	call   0x42a4e8
  410f8e:	mov    rcx,QWORD PTR [rsp+0xb8]
  410f96:	call   0x42a4e8
  410f9b:	mov    rcx,QWORD PTR [rsp+0x68]
  410fa0:	call   0x42a4e8
  410fa5:	mov    rcx,QWORD PTR [rsp+0xc0]
  410fad:	call   0x42a4e8
  410fb2:	mov    rcx,QWORD PTR [rsp+0xa0]
  410fba:	call   0x42a4e8
  410fbf:	mov    rcx,QWORD PTR [rsp+0x60]
  410fc4:	call   0x42a4e8
  410fc9:	mov    rcx,QWORD PTR [rsp+0xc8]
  410fd1:	call   0x42a4e8
  410fd6:	mov    rcx,QWORD PTR [rsp+0xf0]
  410fde:	call   0x42a4e8
  410fe3:	mov    rcx,QWORD PTR [rsp+0xe0]
  410feb:	call   0x42a4e8
  410ff0:	mov    rcx,QWORD PTR [rsp+0xa8]
  410ff8:	call   0x42a4e8
  410ffd:	mov    rcx,QWORD PTR [rsp+0xb0]
  411005:	call   0x42a4e8
  41100a:	cmp    BYTE PTR [rsp+0x113],0x0
  411012:	je     0x411022
  411014:	mov    rcx,QWORD PTR [rsp+0x178]
  41101c:	call   0x410290
  411021:	nop
  411022:	add    rsp,0x128
  411029:	pop    rbx
  41102a:	pop    rsi
  41102b:	pop    rdi
  41102c:	pop    rbp
  41102d:	pop    r12
  41102f:	pop    r13
  411031:	pop    r14
  411033:	pop    r15
  411035:	ret    
  411036:	cmp    WORD PTR [rsp+0x82],0x0
  41103f:	mov    ebx,DWORD PTR [rsp+0xf8]
  411046:	je     0x411066
  411048:	mov    edx,DWORD PTR [rsp+0xf8]
  41104f:	movzx  edi,WORD PTR [rsp+0x82]
  411057:	lea    eax,[rdx+rdx*2-0x1]
  41105b:	lea    ebx,[rdx+rdx*2+0x1]
  41105f:	cmp    di,0x1
  411063:	cmove  ebx,eax
  411066:	cmp    BYTE PTR [rsp+0xfe],0x0
  41106e:	je     0x411c6d
  411074:	mov    edi,ebx
  411076:	xor    eax,eax
  411078:	mov    rdx,QWORD PTR [rsp+0xb8]
  411080:	add    ebx,DWORD PTR [rdx+rax*4]
  411083:	mov    rdx,QWORD PTR [rsp+0xd8]
  41108b:	add    edi,DWORD PTR [rdx+rax*4]
  41108e:	add    rax,0x1
  411092:	cmp    DWORD PTR [rsp+0xf8],eax
  411099:	ja     0x411078
  41109b:	mov    r13,QWORD PTR [rsp+0xc0]
  4110a3:	mov    r15,QWORD PTR [rsp+0xc8]
  4110ab:	xor    ebp,ebp
  4110ad:	mov    r12,QWORD PTR [rsp+0x60]
  4110b2:	mov    eax,DWORD PTR [r13+rbp*4+0x0]
  4110b7:	lea    ecx,[rax+0x1]
  4110ba:	shl    rcx,0x4
  4110be:	call   0x424840
  4110c3:	mov    QWORD PTR [r12+rbp*8],rax
  4110c7:	mov    eax,DWORD PTR [r15+rbp*4]
  4110cb:	lea    ecx,[rax+0x1]
  4110ce:	call   0x424800
  4110d3:	mov    rdx,QWORD PTR [rsp+0xf0]
  4110db:	mov    QWORD PTR [rdx+rbp*8],rax
  4110df:	mov    rdx,QWORD PTR [r12+rbp*8]
  4110e3:	add    rbp,0x1
  4110e7:	cmp    DWORD PTR [rsp+0xf8],ebp
  4110ee:	mov    QWORD PTR [rdx],rax
  4110f1:	ja     0x4110b2
  4110f3:	xor    eax,eax
  4110f5:	cmp    BYTE PTR [rsp+0xfe],0x0
  4110fd:	mov    rcx,QWORD PTR [rsp+0xb8]
  411105:	je     0x411120
  411107:	mov    edx,DWORD PTR [rcx+rax*4]
  41110a:	mov    r11,QWORD PTR [rsp+0x68]
  41110f:	mov    DWORD PTR [r11+rax*4],edx
  411113:	add    rax,0x1
  411117:	cmp    DWORD PTR [rsp+0xf8],eax
  41111e:	ja     0x411107
  411120:	mov    rax,QWORD PTR [rsp+0x78]
  411125:	mov    rax,QWORD PTR [rax]
  411128:	mov    ebp,DWORD PTR [rax+0x58]
  41112b:	test   ebp,ebp
  41112d:	jle    0x411c09
  411133:	cmp    DWORD PTR [rax],0x3
  411136:	je     0x411b3e
  41113c:	cmp    WORD PTR [rax+0x4],0x2
  411141:	jne    0x411153
  411143:	cmp    ebx,ebp
  411145:	ja     0x411ff8
  41114b:	cmp    ebp,edi
  41114d:	jb     0x411ff8
  411153:	movzx  edx,BYTE PTR [rsp+0x113]
  41115b:	test   dl,dl
  41115d:	je     0x411a1a
  411163:	cmp    BYTE PTR [rax+0xb],0x0
  411167:	je     0x411189
  411169:	mov    rax,QWORD PTR [rsp+0x78]
  41116e:	mov    rsi,QWORD PTR [rax+0x8]
  411172:	test   rsi,rsi
  411175:	je     0x41203d
  41117b:	cmp    BYTE PTR [rsp+0xff],0x0
  411183:	je     0x411c74
  411189:	mov    rax,QWORD PTR [rsp+0x78]
  41118e:	mov    rax,QWORD PTR [rax+0x28]
  411192:	cmp    QWORD PTR [rax],0x0
  411196:	mov    QWORD PTR [rsp+0xe8],rax
  41119e:	je     0x410f2a
  4111a4:	movzx  eax,BYTE PTR [rip+0x490d5]        # 0x45a280
  4111ab:	test   al,al
  4111ad:	jne    0x410f2a
  4111b3:	mov    esi,DWORD PTR [rsp+0xf8]
  4111ba:	mov    eax,esi
  4111bc:	lea    rdi,[rax*4+0x0]
  4111c4:	shl    rax,0x3
  4111c8:	mov    QWORD PTR [rsp+0x108],rax
  4111d0:	mov    eax,esi
  4111d2:	sub    eax,0x1
  4111d5:	mov    QWORD PTR [rsp+0x100],rdi
  4111dd:	mov    DWORD PTR [rsp+0x84],eax
  4111e4:	xor    ebx,ebx
  4111e6:	cmp    BYTE PTR [rsp+0xfe],0x0
  4111ee:	je     0x41124b
  4111f0:	mov    edi,DWORD PTR [rsp+0xf8]
  4111f7:	mov    rbp,QWORD PTR [rsp+0xc0]
  4111ff:	mov    r12,QWORD PTR [rsp+0xe8]
  411207:	mov    r13,QWORD PTR [rsp+0xa0]
  41120f:	mov    r15,QWORD PTR [rsp+0x60]
  411214:	mov    rsi,QWORD PTR [r12+rbx*8]
  411218:	mov    rcx,rsi
  41121b:	call   0x42a400
  411220:	mov    edx,DWORD PTR [rbp+rbx*4+0x0]
  411224:	mov    r9,QWORD PTR [r15+rbx*8]
  411228:	mov    r8d,r14d
  41122b:	mov    rcx,rsi
  41122e:	mov    DWORD PTR [rsp+0x20],edx
  411232:	mov    rdx,rax
  411235:	call   0x41ca80
  41123a:	mov    DWORD PTR [r13+rbx*4+0x0],0x0
  411243:	add    rbx,0x1
  411247:	cmp    edi,ebx
  411249:	ja     0x411214
  41124b:	mov    r8,QWORD PTR [rsp+0x100]
  411253:	mov    rcx,QWORD PTR [rsp+0xa8]
  41125b:	xor    edx,edx
  41125d:	call   0x42a480
  411262:	cmp    WORD PTR [rsp+0x82],0x2
  41126b:	je     0x41187a
  411271:	cmp    BYTE PTR [rsp+0xfe],0x0
  411279:	je     0x410eeb
  41127f:	mov    rax,QWORD PTR [rsp+0xa0]
  411287:	mov    DWORD PTR [rsp+0x70],0x1
  41128f:	xor    r15d,r15d
  411292:	mov    BYTE PTR [rsp+0xfd],0x0
  41129a:	mov    QWORD PTR [rsp+0x58],rax
  41129f:	mov    rax,QWORD PTR [rsp+0xa8]
  4112a7:	mov    QWORD PTR [rsp+0x48],rax
  4112ac:	mov    rax,QWORD PTR [rsp+0xb0]
  4112b4:	mov    QWORD PTR [rsp+0x50],rax
  4112b9:	nop    DWORD PTR [rax+0x0]
  4112c0:	mov    rax,QWORD PTR [rsp+0x58]
  4112c5:	mov    r12d,DWORD PTR [rax]
  4112c8:	mov    rax,QWORD PTR [rsp+0x60]
  4112cd:	shl    r12,0x4
  4112d1:	add    r12,QWORD PTR [rax+r15*8]
  4112d5:	mov    rax,QWORD PTR [rsp+0x68]
  4112da:	mov    ebp,DWORD PTR [rax+r15*4]
  4112de:	movzx  eax,WORD PTR [rsp+0x82]
  4112e6:	cmp    ax,0x2
  4112ea:	je     0x411680
  4112f0:	xor    edx,edx
  4112f2:	cmp    DWORD PTR [rsp+0x84],r15d
  4112fa:	seta   dl
  4112fd:	test   ax,ax
  411300:	mov    DWORD PTR [rsp+0x88],edx
  411307:	jne    0x41168b
  41130d:	mov    rax,QWORD PTR [r12]
  411311:	test   rax,rax
  411314:	je     0x4116c3
  41131a:	mov    rdx,QWORD PTR [rsp+0x48]
  41131f:	movsxd r13,DWORD PTR [rdx]
  411322:	add    r13,rax
  411325:	mov    rcx,r13
  411328:	call   0x42a400
  41132d:	lea    rdi,[r13+rax*1+0x0]
  411332:	cmp    r13,rdi
  411335:	jae    0x411943
  41133b:	mov    edx,r14d
  41133e:	mov    rcx,r13
  411341:	mov    rbx,r13
  411344:	call   0x427f28
  411349:	mov    esi,eax
  41134b:	nop    DWORD PTR [rax+rax*1+0x0]
  411350:	mov    rcx,rbx
  411353:	mov    edx,r14d
  411356:	call   0x427e88
  41135b:	cdqe   
  41135d:	add    rbx,rax
  411360:	cmp    rdi,rbx
  411363:	jbe    0x411430
  411369:	mov    edx,r14d
  41136c:	mov    rcx,rbx
  41136f:	call   0x427f28
  411374:	add    eax,esi
  411376:	cmp    ebp,eax
  411378:	jge    0x411382
  41137a:	test   esi,esi
  41137c:	jne    0x411430
  411382:	mov    esi,eax
  411384:	jmp    0x411350
  411386:	mov    BYTE PTR [rsp+0xfe],0x0
  41138e:	mov    QWORD PTR [rsp+0xb0],0x0
  41139a:	xor    esi,esi
  41139c:	mov    QWORD PTR [rsp+0xa8],0x0
  4113a8:	mov    QWORD PTR [rsp+0xe0],0x0
  4113b4:	mov    QWORD PTR [rsp+0x60],0x0
  4113bd:	mov    QWORD PTR [rsp+0xf0],0x0
  4113c9:	mov    QWORD PTR [rsp+0xc8],0x0
  4113d5:	mov    QWORD PTR [rsp+0xa0],0x0
  4113e1:	mov    QWORD PTR [rsp+0xc0],0x0
  4113ed:	mov    QWORD PTR [rsp+0xd0],0x0
  4113f9:	mov    QWORD PTR [rsp+0x68],0x0
  411402:	mov    QWORD PTR [rsp+0xb8],0x0
  41140e:	mov    QWORD PTR [rsp+0xd8],0x0
  41141a:	mov    DWORD PTR [rsp+0xf8],0x0
  411425:	jmp    0x410db1
  41142a:	nop    WORD PTR [rax+rax*1+0x0]
  411430:	mov    rax,QWORD PTR [rsp+0x68]
  411435:	sub    rbx,r13
  411438:	mov    ebp,esi
  41143a:	mov    DWORD PTR [rsp+0x8c],ebx
  411441:	mov    r8d,DWORD PTR [rax+r15*4]
  411445:	cmp    esi,r8d
  411448:	jbe    0x41144d
  41144a:	mov    ebp,r8d
  41144d:	movsxd r10,ebx
  411450:	lea    rbx,[r10-0x1]
  411454:	mov    rax,QWORD PTR [rsp+0x78]
  411459:	mov    rax,QWORD PTR [rax+0x58]
  41145d:	cmp    BYTE PTR [rax+r15*1],0x72
  411462:	je     0x4117d1
  411468:	mov    rax,QWORD PTR [rsp+0x48]
  41146d:	mov    r13,QWORD PTR [rsp+0x178]
  411475:	movsxd rsi,DWORD PTR [rax]
  411478:	mov    rax,rsi
  41147b:	add    rsi,QWORD PTR [r12]
  41147f:	test   r10,r10
  411482:	je     0x4114ac
  411484:	xor    edi,edi
  411486:	add    rbx,0x1
  41148a:	nop    WORD PTR [rax+rax*1+0x0]
  411490:	movsx  ecx,BYTE PTR [rsi+rdi*1]
  411494:	mov    rdx,r13
  411497:	add    rdi,0x1
  41149b:	call   0x42a500
  4114a0:	cmp    rbx,rdi
  4114a3:	jne    0x411490
  4114a5:	mov    rax,QWORD PTR [rsp+0x48]
  4114aa:	mov    eax,DWORD PTR [rax]
  4114ac:	mov    edi,DWORD PTR [rsp+0x8c]
  4114b3:	add    edi,eax
  4114b5:	mov    rax,QWORD PTR [rsp+0x48]
  4114ba:	mov    DWORD PTR [rax],edi
  4114bc:	mov    rax,QWORD PTR [r12]
  4114c0:	movsxd rdi,edi
  4114c3:	cmp    BYTE PTR [rax+rdi*1],0x0
  4114c7:	jne    0x4117a1
  4114cd:	mov    rdx,QWORD PTR [rsp+0x58]
  4114d2:	mov    eax,DWORD PTR [rdx]
  4114d4:	mov    DWORD PTR [rsp+0x8c],eax
  4114db:	add    eax,0x1
  4114de:	mov    DWORD PTR [rdx],eax
  4114e0:	mov    rdx,QWORD PTR [rsp+0x60]
  4114e5:	shl    rax,0x4
  4114e9:	add    rax,QWORD PTR [rdx+r15*8]
  4114ed:	movzx  edx,BYTE PTR [rsp+0xfd]
  4114f5:	cmp    QWORD PTR [rax],0x0
  4114f9:	mov    eax,0x1
  4114fe:	cmovne edx,eax
  411501:	mov    rax,QWORD PTR [rsp+0x48]
  411506:	mov    BYTE PTR [rsp+0xfd],dl
  41150d:	mov    DWORD PTR [rax],0x0
  411513:	mov    rax,QWORD PTR [rsp+0x50]
  411518:	mov    rsi,QWORD PTR [rsp+0x60]
  41151d:	mov    DWORD PTR [rax],0x0
  411523:	mov    rax,QWORD PTR [rsp+0x58]
  411528:	mov    eax,DWORD PTR [rax]
  41152a:	mov    rdx,rax
  41152d:	shl    rax,0x4
  411531:	add    rax,QWORD PTR [rsi+r15*8]
  411535:	cmp    QWORD PTR [rax],0x0
  411539:	je     0x411744
  41153f:	mov    rax,QWORD PTR [rsp+0x48]
  411544:	mov    ecx,DWORD PTR [rax]
  411546:	test   ecx,ecx
  411548:	je     0x411700
  41154e:	mov    rax,QWORD PTR [rsp+0x50]
  411553:	mov    DWORD PTR [rax],0x1
  411559:	mov    rax,QWORD PTR [rsp+0x78]
  41155e:	mov    rax,QWORD PTR [rax+0x58]
  411562:	cmp    BYTE PTR [rax+r15*1],0x72
  411567:	je     0x411780
  41156d:	mov    rax,QWORD PTR [rsp+0x68]
  411572:	mov    rcx,QWORD PTR [rsp+0x178]
  41157a:	lea    r9,[rip+0x2c19b]        # 0x43d71c
  411581:	lea    rdx,[rip+0x2c195]        # 0x43d71d
  411588:	mov    eax,DWORD PTR [rax+r15*4]
  41158c:	mov    r8d,eax
  41158f:	mov    DWORD PTR [rsp+0x88],eax
  411596:	sub    r8d,ebp
  411599:	call   0x426370
  41159e:	mov    rax,QWORD PTR [rsp+0x50]
  4115a3:	mov    eax,DWORD PTR [rax]
  4115a5:	cmp    eax,0x1
  4115a8:	je     0x411780
  4115ae:	cmp    eax,0x2
  4115b1:	je     0x411723
  4115b7:	cmp    WORD PTR [rsp+0x82],0x2
  4115c0:	je     0x4115cc
  4115c2:	cmp    DWORD PTR [rsp+0x84],r15d
  4115ca:	jbe    0x411646
  4115cc:	mov    rdx,QWORD PTR [rsp+0x178]
  4115d4:	mov    ecx,0x20
  4115d9:	call   0x42a500
  4115de:	cmp    WORD PTR [rsp+0x82],0x0
  4115e7:	je     0x411646
  4115e9:	cmp    DWORD PTR [rsp+0x84],r15d
  4115f1:	jbe    0x411646
  4115f3:	mov    rax,QWORD PTR [rsp+0x50]
  4115f8:	mov    eax,DWORD PTR [rax+0x4]
  4115fb:	cmp    eax,0x1
  4115fe:	je     0x4118e8
  411604:	cmp    eax,0x2
  411607:	je     0x411909
  41160d:	mov    rax,QWORD PTR [rsp+0x58]
  411612:	mov    rdx,QWORD PTR [rsp+0x60]
  411617:	mov    eax,DWORD PTR [rax+0x4]
  41161a:	shl    rax,0x4
  41161e:	add    rax,QWORD PTR [rdx+r15*8+0x8]
  411623:	cmp    QWORD PTR [rax],0x0
  411627:	mov    rax,QWORD PTR [rsp+0x90]
  41162f:	je     0x41192a
  411635:	mov    rcx,QWORD PTR [rax+0x78]
  411639:	mov    rdx,QWORD PTR [rsp+0x178]
  411641:	call   0x42a4f8
  411646:	mov    edx,DWORD PTR [rsp+0x70]
  41164a:	add    r15,0x1
  41164e:	add    QWORD PTR [rsp+0x58],0x4
  411654:	add    QWORD PTR [rsp+0x48],0x4
  41165a:	add    QWORD PTR [rsp+0x50],0x4
  411660:	mov    eax,edx
  411662:	add    eax,0x1
  411665:	cmp    edx,DWORD PTR [rsp+0xf8]
  41166c:	jae    0x411840
  411672:	mov    DWORD PTR [rsp+0x70],eax
  411676:	jmp    0x4112c0
  41167b:	nop    DWORD PTR [rax+rax*1+0x0]
  411680:	mov    DWORD PTR [rsp+0x88],0x1
  41168b:	mov    rax,QWORD PTR [rsp+0x50]
  411690:	mov    eax,DWORD PTR [rax]
  411692:	cmp    eax,0x1
  411695:	je     0x4118c7
  41169b:	cmp    eax,0x2
  41169e:	je     0x4117b0
  4116a4:	mov    rdx,QWORD PTR [rsp+0x178]
  4116ac:	mov    ecx,0x20
  4116b1:	call   0x42a500
  4116b6:	mov    rax,QWORD PTR [r12]
  4116ba:	test   rax,rax
  4116bd:	jne    0x41131a
  4116c3:	mov    r8d,DWORD PTR [rsp+0x88]
  4116cb:	test   r8d,r8d
  4116ce:	je     0x411513
  4116d4:	mov    rcx,QWORD PTR [rsp+0x178]
  4116dc:	lea    r9,[rip+0x2c039]        # 0x43d71c
  4116e3:	lea    rdx,[rip+0x2c033]        # 0x43d71d
  4116ea:	mov    r8d,ebp
  4116ed:	call   0x426370
  4116f2:	jmp    0x411513
  4116f7:	nop    WORD PTR [rax+rax*1+0x0]
  411700:	test   edx,edx
  411702:	je     0x411744
  411704:	mov    rax,QWORD PTR [rsp+0x50]
  411709:	mov    DWORD PTR [rax],0x2
  41170f:	mov    rax,QWORD PTR [rsp+0x78]
  411714:	mov    rax,QWORD PTR [rax+0x58]
  411718:	cmp    BYTE PTR [rax+r15*1],0x72
  41171d:	jne    0x41156d
  411723:	mov    rax,QWORD PTR [rsp+0x90]
  41172b:	mov    rdx,QWORD PTR [rsp+0x178]
  411733:	mov    rcx,QWORD PTR [rax+0xb8]
  41173a:	call   0x42a4f8
  41173f:	jmp    0x4115de
  411744:	mov    rax,QWORD PTR [rsp+0x78]
  411749:	mov    rax,QWORD PTR [rax+0x58]
  41174d:	cmp    BYTE PTR [rax+r15*1],0x72
  411752:	je     0x4115b7
  411758:	mov    eax,DWORD PTR [rsp+0x88]
  41175f:	test   eax,eax
  411761:	jne    0x41156d
  411767:	mov    rax,QWORD PTR [rsp+0x50]
  41176c:	mov    eax,DWORD PTR [rax]
  41176e:	cmp    eax,0x1
  411771:	jne    0x4115ae
  411777:	nop    WORD PTR [rax+rax*1+0x0]
  411780:	mov    rax,QWORD PTR [rsp+0x90]
  411788:	mov    rdx,QWORD PTR [rsp+0x178]
  411790:	mov    rcx,QWORD PTR [rax+0xc8]
  411797:	call   0x42a4f8
  41179c:	jmp    0x4115de
  4117a1:	mov    BYTE PTR [rsp+0xfd],0x1
  4117a9:	jmp    0x411513
  4117ae:	xchg   ax,ax
  4117b0:	mov    rax,QWORD PTR [rsp+0x90]
  4117b8:	mov    rdx,QWORD PTR [rsp+0x178]
  4117c0:	mov    rcx,QWORD PTR [rax+0xb0]
  4117c7:	call   0x42a4f8
  4117cc:	jmp    0x41130d
  4117d1:	mov    rcx,QWORD PTR [rsp+0x178]
  4117d9:	lea    r9,[rip+0x2bf3c]        # 0x43d71c
  4117e0:	lea    rdx,[rip+0x2bf36]        # 0x43d71d
  4117e7:	sub    r8d,ebp
  4117ea:	mov    QWORD PTR [rsp+0x98],r10
  4117f2:	call   0x426370
  4117f7:	mov    rax,QWORD PTR [rsp+0x48]
  4117fc:	mov    r10,QWORD PTR [rsp+0x98]
  411804:	mov    r13,QWORD PTR [rsp+0x178]
  41180c:	movsxd rsi,DWORD PTR [rax]
  41180f:	mov    rax,rsi
  411812:	add    rsi,QWORD PTR [r12]
  411816:	test   r10,r10
  411819:	je     0x4114ac
  41181f:	xor    edi,edi
  411821:	add    rbx,0x1
  411825:	movsx  ecx,BYTE PTR [rsi+rdi*1]
  411829:	mov    rdx,r13
  41182c:	add    rdi,0x1
  411830:	call   0x42a500
  411835:	cmp    rdi,rbx
  411838:	jne    0x411825
  41183a:	jmp    0x4114a5
  41183f:	nop
  411840:	cmp    WORD PTR [rsp+0x82],0x2
  411849:	je     0x4118a9
  41184b:	mov    rdx,QWORD PTR [rsp+0x178]
  411853:	mov    ecx,0xa
  411858:	call   0x42a500
  41185d:	cmp    BYTE PTR [rsp+0xfd],0x0
  411865:	je     0x410efd
  41186b:	cmp    WORD PTR [rsp+0x82],0x2
  411874:	jne    0x411271
  41187a:	mov    rax,QWORD PTR [rsp+0x90]
  411882:	mov    rdx,QWORD PTR [rsp+0x178]
  41188a:	mov    rcx,QWORD PTR [rax+0x70]
  41188e:	call   0x42a4f8
  411893:	cmp    BYTE PTR [rsp+0xfe],0x0
  41189b:	jne    0x41127f
  4118a1:	mov    BYTE PTR [rsp+0xfd],0x0
  4118a9:	mov    rax,QWORD PTR [rsp+0x90]
  4118b1:	mov    rdx,QWORD PTR [rsp+0x178]
  4118b9:	mov    rcx,QWORD PTR [rax+0x80]
  4118c0:	call   0x42a4f8
  4118c5:	jmp    0x41184b
  4118c7:	mov    rax,QWORD PTR [rsp+0x90]
  4118cf:	mov    rdx,QWORD PTR [rsp+0x178]
  4118d7:	mov    rcx,QWORD PTR [rax+0xc0]
  4118de:	call   0x42a4f8
  4118e3:	jmp    0x41130d
  4118e8:	mov    rax,QWORD PTR [rsp+0x90]
  4118f0:	mov    rdx,QWORD PTR [rsp+0x178]
  4118f8:	mov    rcx,QWORD PTR [rax+0x90]
  4118ff:	call   0x42a4f8
  411904:	jmp    0x411646
  411909:	mov    rax,QWORD PTR [rsp+0x90]
  411911:	mov    rdx,QWORD PTR [rsp+0x178]
  411919:	mov    rcx,QWORD PTR [rax+0x88]
  411920:	call   0x42a4f8
  411925:	jmp    0x411646
  41192a:	mov    rcx,QWORD PTR [rax+0x98]
  411931:	mov    rdx,QWORD PTR [rsp+0x178]
  411939:	call   0x42a4f8
  41193e:	jmp    0x411646
  411943:	mov    rax,QWORD PTR [rsp+0x68]
  411948:	xor    r10d,r10d
  41194b:	mov    rbx,0xffffffffffffffff
  411952:	mov    DWORD PTR [rsp+0x8c],0x0
  41195d:	xor    ebp,ebp
  41195f:	mov    r8d,DWORD PTR [rax+r15*4]
  411963:	jmp    0x411454
  411968:	mov    rcx,QWORD PTR [rsp+0x78]
  41196d:	call   0x40ff10
  411972:	cmp    WORD PTR [rsp+0x82],0x2
  41197b:	mov    rbx,rax
  41197e:	je     0x4119d3
  411980:	test   rbx,rbx
  411983:	je     0x41199a
  411985:	cmp    BYTE PTR [rsp+0xff],0x0
  41198d:	jne    0x41199a
  41198f:	movzx  eax,BYTE PTR [rip+0x488ea]        # 0x45a280
  411996:	test   al,al
  411998:	je     0x4119b1
  41199a:	mov    rdx,QWORD PTR [rsp+0x178]
  4119a2:	mov    ecx,0xa
  4119a7:	call   0x42a500
  4119ac:	jmp    0x410f3c
  4119b1:	mov    r8,QWORD PTR [rbx]
  4119b4:	mov    rcx,QWORD PTR [rsp+0x178]
  4119bc:	lea    rdx,[rip+0x2bd4a]        # 0x43d70d
  4119c3:	call   0x426370
  4119c8:	mov    rbx,QWORD PTR [rbx+0x8]
  4119cc:	test   rbx,rbx
  4119cf:	jne    0x4119b1
  4119d1:	jmp    0x41199a
  4119d3:	movzx  eax,BYTE PTR [rip+0x488a6]        # 0x45a280
  4119da:	test   al,al
  4119dc:	jne    0x411980
  4119de:	mov    rax,QWORD PTR [rsp+0x178]
  4119e6:	mov    rdx,QWORD PTR [rsp+0x68]
  4119eb:	mov    r9d,0x2
  4119f1:	mov    ecx,DWORD PTR [rsp+0xf8]
  4119f8:	mov    r8d,0x2
  4119fe:	mov    QWORD PTR [rsp+0x28],rax
  411a03:	mov    rax,QWORD PTR [rsp+0x90]
  411a0b:	mov    QWORD PTR [rsp+0x20],rax
  411a10:	call   0x42bc20
  411a15:	jmp    0x411980
  411a1a:	call   QWORD PTR [rip+0x4b194]        # 0x45cbb4
  411a20:	add    rax,0x30
  411a24:	cmp    QWORD PTR [rsp+0x178],rax
  411a2c:	jne    0x411a3e
  411a2e:	cmp    ebx,ebp
  411a30:	ja     0x41200f
  411a36:	cmp    ebp,edi
  411a38:	jb     0x41200f
  411a3e:	cmp    BYTE PTR [rsp+0x113],0x0
  411a46:	mov    rax,QWORD PTR [rsp+0x78]
  411a4b:	jne    0x411b36
  411a51:	mov    r10,QWORD PTR [rax+0x28]
  411a55:	mov    r11,QWORD PTR [r10]
  411a58:	test   r11,r11
  411a5b:	je     0x411b0c
  411a61:	lea    r12,[rsp+0x114]
  411a69:	lea    rdi,[rsp+0x11c]
  411a71:	lea    rbp,[rsp+0x118]
  411a79:	xor    r13d,r13d
  411a7c:	xor    r15d,r15d
  411a7f:	mov    rcx,r11
  411a82:	mov    QWORD PTR [rsp+0x50],r10
  411a87:	mov    QWORD PTR [rsp+0x48],r11
  411a8c:	call   0x42a400
  411a91:	mov    r11,QWORD PTR [rsp+0x48]
  411a96:	mov    rdx,rax
  411a99:	mov    QWORD PTR [rsp+0x28],rdi
  411a9e:	mov    QWORD PTR [rsp+0x20],rbp
  411aa3:	mov    r9,r12
  411aa6:	mov    r8d,r14d
  411aa9:	mov    rcx,r11
  411aac:	call   0x41c8e0
  411ab1:	mov    eax,DWORD PTR [rsp+0x114]
  411ab8:	mov    r10,QWORD PTR [rsp+0x50]
  411abd:	test   eax,eax
  411abf:	jle    0x411ae5
  411ac1:	mov    rcx,QWORD PTR [rsp+0x68]
  411ac6:	mov    edx,r15d
  411ac9:	mov    ecx,DWORD PTR [rcx+rdx*4]
  411acc:	test   ecx,ecx
  411ace:	je     0x411ae5
  411ad0:	sub    eax,0x1
  411ad3:	xor    edx,edx
  411ad5:	div    ecx
  411ad7:	add    eax,DWORD PTR [rsp+0x118]
  411ade:	cmp    r13d,eax
  411ae1:	cmovb  r13d,eax
  411ae5:	add    r15d,0x1
  411ae9:	cmp    r15d,DWORD PTR [rsp+0xf8]
  411af1:	jb     0x411afc
  411af3:	add    esi,r13d
  411af6:	xor    r15d,r15d
  411af9:	xor    r13d,r13d
  411afc:	add    r10,0x8
  411b00:	mov    r11,QWORD PTR [r10]
  411b03:	test   r11,r11
  411b06:	jne    0x411a7f
  411b0c:	mov    rdi,QWORD PTR [rsp+0x78]
  411b11:	lea    rax,[rsp+0x113]
  411b19:	lea    r9,[rsp+0x178]
  411b21:	xor    r8d,r8d
  411b24:	mov    edx,esi
  411b26:	mov    QWORD PTR [rsp+0x20],rax
  411b2b:	mov    rcx,rdi
  411b2e:	call   0x4101d0
  411b33:	mov    rax,rdi
  411b36:	mov    rax,QWORD PTR [rax]
  411b39:	jmp    0x411163
  411b3e:	cmp    ebp,edi
  411b40:	jb     0x41113c
  411b46:	cmp    ebp,ebx
  411b48:	jae    0x41113c
  411b4e:	cmp    BYTE PTR [rsp+0xfe],0x0
  411b56:	movsd  xmm3,QWORD PTR [rip+0x2c33a]        # 0x43de98
  411b5e:	mov    r9,QWORD PTR [rsp+0x68]
  411b63:	je     0x41113c
  411b69:	pxor   xmm2,xmm2
  411b6d:	xor    eax,eax
  411b6f:	mov    rdx,0xffffffffffffffff
  411b76:	mov    rcx,QWORD PTR [rsp+0xd0]
  411b7e:	mov    ecx,DWORD PTR [rcx+rax*4]
  411b81:	test   ecx,ecx
  411b83:	je     0x411bda
  411b85:	mov    r11,QWORD PTR [rsp+0xd8]
  411b8d:	mov    r8d,DWORD PTR [r9+rax*4]
  411b91:	cmp    r8d,DWORD PTR [r11+rax*4]
  411b95:	jbe    0x411bda
  411b97:	pxor   xmm0,xmm0
  411b9b:	pxor   xmm1,xmm1
  411b9f:	cvtsi2sd xmm0,r8
  411ba4:	cvtsi2sd xmm1,rcx
  411ba9:	mov    rcx,QWORD PTR [rsp+0xb8]
  411bb1:	mov    ecx,DWORD PTR [rcx+rax*4]
  411bb4:	divsd  xmm0,xmm1
  411bb8:	movapd xmm1,xmm0
  411bbc:	pxor   xmm0,xmm0
  411bc0:	cvtsi2sd xmm0,rcx
  411bc5:	mulsd  xmm0,xmm3
  411bc9:	addsd  xmm0,xmm1
  411bcd:	ucomisd xmm0,xmm2
  411bd1:	jbe    0x411bda
  411bd3:	movapd xmm2,xmm0
  411bd7:	movsxd rdx,eax
  411bda:	add    rax,0x1
  411bde:	cmp    DWORD PTR [rsp+0xf8],eax
  411be5:	ja     0x411b76
  411be7:	cmp    edx,0xffffffff
  411bea:	je     0x411bfc
  411bec:	sub    ebx,0x1
  411bef:	sub    DWORD PTR [r9+rdx*4],0x1
  411bf4:	cmp    ebp,ebx
  411bf6:	jb     0x411b69
  411bfc:	mov    rax,QWORD PTR [rsp+0x78]
  411c01:	mov    rax,QWORD PTR [rax]
  411c04:	jmp    0x41113c
  411c09:	mov    r12,QWORD PTR [rip+0x4afa4]        # 0x45cbb4
  411c10:	call   r12
  411c13:	add    rax,0x30
  411c17:	cmp    QWORD PTR [rsp+0x178],rax
  411c1f:	je     0x411c54
  411c21:	cmp    BYTE PTR [rsp+0x113],0x0
  411c29:	je     0x411c4c
  411c2b:	mov    rax,QWORD PTR [rsp+0x78]
  411c30:	mov    rax,QWORD PTR [rax]
  411c33:	mov    ebp,DWORD PTR [rax+0x54]
  411c36:	test   ebp,ebp
  411c38:	jg     0x411133
  411c3e:	cmp    BYTE PTR [rsp+0x113],0x0
  411c46:	jne    0x411163
  411c4c:	call   r12
  411c4f:	jmp    0x411a3e
  411c54:	call   r12
  411c57:	lea    rcx,[rax+0x30]
  411c5b:	call   0x42a368
  411c60:	mov    ecx,eax
  411c62:	call   0x42a380
  411c67:	test   eax,eax
  411c69:	je     0x411c21
  411c6b:	jmp    0x411c2b
  411c6d:	mov    edi,ebx
  411c6f:	jmp    0x411120
  411c74:	mov    rcx,rsi
  411c77:	call   0x42a400
  411c7c:	lea    rdx,[rsp+0x11c]
  411c84:	lea    r9,[rsp+0x118]
  411c8c:	mov    QWORD PTR [rsp+0x28],0x0
  411c95:	mov    r8d,r14d
  411c98:	mov    rcx,rsi
  411c9b:	mov    QWORD PTR [rsp+0x20],rdx
  411ca0:	mov    rdx,rax
  411ca3:	call   0x41c8e0
  411ca8:	mov    eax,DWORD PTR [rsp+0x118]
  411caf:	cmp    eax,ebx
  411cb1:	jb     0x411fc2
  411cb7:	mov    rax,QWORD PTR [rsp+0x78]
  411cbc:	mov    rcx,QWORD PTR [rsp+0x178]
  411cc4:	lea    rdx,[rip+0x2ba42]        # 0x43d70d
  411ccb:	mov    r8,QWORD PTR [rax+0x8]
  411ccf:	call   0x426370
  411cd4:	cmp    WORD PTR [rsp+0x82],0x2
  411cdd:	jne    0x411d13
  411cdf:	mov    rax,QWORD PTR [rsp+0x178]
  411ce7:	mov    rdx,QWORD PTR [rsp+0x68]
  411cec:	xor    r9d,r9d
  411cef:	mov    ecx,DWORD PTR [rsp+0xf8]
  411cf6:	mov    r8d,0x2
  411cfc:	mov    QWORD PTR [rsp+0x28],rax
  411d01:	mov    rax,QWORD PTR [rsp+0x90]
  411d09:	mov    QWORD PTR [rsp+0x20],rax
  411d0e:	call   0x42bc20
  411d13:	xor    ebx,ebx
  411d15:	cmp    BYTE PTR [rsp+0xfe],0x0
  411d1d:	je     0x411d67
  411d1f:	mov    rdi,QWORD PTR [rsp+0xc0]
  411d27:	mov    rbp,QWORD PTR [rsp+0x78]
  411d2c:	mov    rax,QWORD PTR [rbp+0x18]
  411d30:	mov    rsi,QWORD PTR [rax+rbx*8]
  411d34:	mov    rcx,rsi
  411d37:	call   0x42a400
  411d3c:	mov    rdx,QWORD PTR [rsp+0x60]
  411d41:	mov    r8d,r14d
  411d44:	mov    rcx,rsi
  411d47:	mov    r9,QWORD PTR [rdx+rbx*8]
  411d4b:	mov    edx,DWORD PTR [rdi+rbx*4]
  411d4e:	add    rbx,0x1
  411d52:	mov    DWORD PTR [rsp+0x20],edx
  411d56:	mov    rdx,rax
  411d59:	call   0x41ca80
  411d5e:	cmp    DWORD PTR [rsp+0xf8],ebx
  411d65:	ja     0x411d2c
  411d67:	mov    edi,DWORD PTR [rsp+0xf8]
  411d6e:	mov    rcx,QWORD PTR [rsp+0xe0]
  411d76:	xor    edx,edx
  411d78:	mov    r12d,0x1
  411d7e:	mov    r8d,edi
  411d81:	lea    esi,[rdi-0x1]
  411d84:	mov    ebp,edi
  411d86:	call   0x42a480
  411d8b:	test   edi,edi
  411d8d:	mov    DWORD PTR [rsp+0x50],esi
  411d91:	je     0x411f83
  411d97:	movzx  edi,WORD PTR [rsp+0x82]
  411d9f:	mov    rsi,QWORD PTR [rsp+0x90]
  411da7:	cmp    di,0x2
  411dab:	lea    r15d,[r12-0x1]
  411db0:	je     0x4120ba
  411db6:	mov    rax,QWORD PTR [rsp+0x78]
  411dbb:	mov    edx,DWORD PTR [rax+0x10]
  411dbe:	test   edx,edx
  411dc0:	je     0x411f65
  411dc6:	movsxd r13,r15d
  411dc9:	xor    ebx,ebx
  411dcb:	shl    r13,0x4
  411dcf:	mov    QWORD PTR [rsp+0x48],r13
  411dd4:	jmp    0x411e7c
  411dd9:	add    r11,QWORD PTR [rsp+0x48]
  411dde:	mov    rax,QWORD PTR [rsp+0x68]
  411de3:	lea    r9,[rip+0x2b932]        # 0x43d71c
  411dea:	mov    rcx,QWORD PTR [rsp+0x178]
  411df2:	lea    rdx,[rip+0x2b948]        # 0x43d741
  411df9:	mov    r8d,DWORD PTR [rax+r8*4]
  411dfd:	lea    rax,[rip+0x2b918]        # 0x43d71c
  411e04:	sub    r8d,DWORD PTR [r11+0x8]
  411e08:	mov    QWORD PTR [rsp+0x58],r11
  411e0d:	mov    QWORD PTR [rsp+0x30],rax
  411e12:	lea    eax,[r8+0x1]
  411e16:	shr    r8d,1
  411e19:	shr    eax,1
  411e1b:	mov    DWORD PTR [rsp+0x28],eax
  411e1f:	mov    rax,QWORD PTR [r11]
  411e22:	mov    QWORD PTR [rsp+0x20],rax
  411e27:	call   0x426370
  411e2c:	mov    r11,QWORD PTR [rsp+0x58]
  411e31:	cmp    QWORD PTR [r11+0x10],0x0
  411e36:	je     0x412072
  411e3c:	test   di,di
  411e3f:	jne    0x411f12
  411e45:	cmp    BYTE PTR [rsi+0xd0],0x0
  411e4c:	je     0x411e6b
  411e4e:	cmp    BYTE PTR [r13+0x0],0x0
  411e53:	mov    rdx,QWORD PTR [rsp+0x178]
  411e5b:	je     0x412061
  411e61:	mov    ecx,0x20
  411e66:	call   0x42a500
  411e6b:	mov    rax,QWORD PTR [rsp+0x78]
  411e70:	add    ebx,0x1
  411e73:	cmp    DWORD PTR [rax+0x10],ebx
  411e76:	jbe    0x411f5b
  411e7c:	mov    rax,QWORD PTR [rsp+0x60]
  411e81:	mov    r8d,ebx
  411e84:	test   di,di
  411e87:	mov    r11,QWORD PTR [rax+r8*8]
  411e8b:	jne    0x411e9a
  411e8d:	test   ebx,ebx
  411e8f:	je     0x411ece
  411e91:	cmp    BYTE PTR [rsi+0xd0],0x0
  411e98:	jne    0x411ece
  411e9a:	test   r15d,r15d
  411e9d:	mov    rdx,QWORD PTR [rsp+0x178]
  411ea5:	lea    rcx,[rip+0x2b703]        # 0x43d5af
  411eac:	je     0x411eb5
  411eae:	mov    rcx,QWORD PTR [rsi+0xa0]
  411eb5:	mov    QWORD PTR [rsp+0x70],r11
  411eba:	mov    QWORD PTR [rsp+0x58],r8
  411ebf:	call   0x42a4f8
  411ec4:	mov    r11,QWORD PTR [rsp+0x70]
  411ec9:	mov    r8,QWORD PTR [rsp+0x58]
  411ece:	mov    rax,QWORD PTR [rsp+0xe0]
  411ed6:	lea    r13,[rax+r8*1]
  411eda:	cmp    BYTE PTR [r13+0x0],0x0
  411edf:	je     0x411dd9
  411ee5:	mov    rax,QWORD PTR [rsp+0x68]
  411eea:	mov    rcx,QWORD PTR [rsp+0x178]
  411ef2:	lea    r9,[rip+0x2b823]        # 0x43d71c
  411ef9:	lea    rdx,[rip+0x2b81d]        # 0x43d71d
  411f00:	mov    r8d,DWORD PTR [rax+r8*4]
  411f04:	call   0x426370
  411f09:	test   di,di
  411f0c:	je     0x411e45
  411f12:	cmp    BYTE PTR [r13+0x0],0x0
  411f17:	mov    rdx,QWORD PTR [rsp+0x178]
  411f1f:	je     0x412050
  411f25:	mov    ecx,0x20
  411f2a:	call   0x42a500
  411f2f:	cmp    DWORD PTR [rsp+0x50],ebx
  411f33:	jbe    0x411e6b
  411f39:	mov    rcx,QWORD PTR [rsi+0x78]
  411f3d:	mov    rdx,QWORD PTR [rsp+0x178]
  411f45:	add    ebx,0x1
  411f48:	call   0x42a4f8
  411f4d:	mov    rax,QWORD PTR [rsp+0x78]
  411f52:	cmp    DWORD PTR [rax+0x10],ebx
  411f55:	ja     0x411e7c
  411f5b:	cmp    di,0x2
  411f5f:	je     0x4120dd
  411f65:	mov    rdx,QWORD PTR [rsp+0x178]
  411f6d:	mov    ecx,0xa
  411f72:	add    r12d,0x1
  411f76:	call   0x42a500
  411f7b:	test   ebp,ebp
  411f7d:	jne    0x411da7
  411f83:	mov    rax,QWORD PTR [rsp+0x178]
  411f8b:	movzx  r8d,WORD PTR [rsp+0x82]
  411f94:	mov    r9d,0x1
  411f9a:	mov    rdx,QWORD PTR [rsp+0x68]
  411f9f:	mov    ecx,DWORD PTR [rsp+0xf8]
  411fa6:	mov    QWORD PTR [rsp+0x28],rax
  411fab:	mov    rax,QWORD PTR [rsp+0x90]
  411fb3:	mov    QWORD PTR [rsp+0x20],rax
  411fb8:	call   0x42bc20
  411fbd:	jmp    0x411189
  411fc2:	sub    ebx,eax
  411fc4:	mov    rax,QWORD PTR [rsp+0x78]
  411fc9:	mov    rcx,QWORD PTR [rsp+0x178]
  411fd1:	mov    r8d,ebx
  411fd4:	lea    r9,[rip+0x2b741]        # 0x43d71c
  411fdb:	lea    rdx,[rip+0x2b757]        # 0x43d739
  411fe2:	shr    r8d,1
  411fe5:	mov    rax,QWORD PTR [rax+0x8]
  411fe9:	mov    QWORD PTR [rsp+0x20],rax
  411fee:	call   0x426370
  411ff3:	jmp    0x411cd4
  411ff8:	mov    rdx,QWORD PTR [rsp+0x178]
  412000:	mov    rcx,QWORD PTR [rsp+0x78]
  412005:	call   0x4102f0
  41200a:	jmp    0x410f3c
  41200f:	mov    rdi,QWORD PTR [rsp+0x78]
  412014:	mov    ecx,0x7fffffff
  412019:	mov    rax,QWORD PTR [rdi]
  41201c:	movzx  edx,WORD PTR [rax+0x8]
  412020:	call   0x410150
  412025:	mov    BYTE PTR [rsp+0x113],0x1
  41202d:	mov    QWORD PTR [rsp+0x178],rax
  412035:	mov    rax,QWORD PTR [rdi]
  412038:	jmp    0x411163
  41203d:	cmp    BYTE PTR [rsp+0xff],0x0
  412045:	jne    0x411189
  41204b:	jmp    0x411cd4
  412050:	mov    rcx,QWORD PTR [rsi+0xa8]
  412057:	call   0x42a4f8
  41205c:	jmp    0x411f2f
  412061:	mov    rcx,QWORD PTR [rsi+0xa8]
  412068:	call   0x42a4f8
  41206d:	jmp    0x411e6b
  412072:	sub    ebp,0x1
  412075:	test   di,di
  412078:	mov    BYTE PTR [r13+0x0],0x1
  41207d:	je     0x4120a0
  41207f:	mov    rdx,QWORD PTR [rsp+0x178]
  412087:	mov    ecx,0x20
  41208c:	call   0x42a500
  412091:	jmp    0x411f2f
  412096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120a0:	cmp    BYTE PTR [rsi+0xd0],0x0
  4120a7:	je     0x411e6b
  4120ad:	mov    rdx,QWORD PTR [rsp+0x178]
  4120b5:	jmp    0x411e61
  4120ba:	mov    rcx,QWORD PTR [rsi+0x70]
  4120be:	mov    rdx,QWORD PTR [rsp+0x178]
  4120c6:	call   0x42a4f8
  4120cb:	mov    rax,QWORD PTR [rsp+0x78]
  4120d0:	mov    r9d,DWORD PTR [rax+0x10]
  4120d4:	test   r9d,r9d
  4120d7:	jne    0x411dc6
  4120dd:	mov    rcx,QWORD PTR [rsi+0x80]
  4120e4:	mov    rdx,QWORD PTR [rsp+0x178]
  4120ec:	call   0x42a4f8
  4120f1:	jmp    0x411f65
  4120f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412100:	push   rbp
  412101:	push   rdi
  412102:	push   rsi
  412103:	push   rbx
  412104:	sub    rsp,0x28
  412108:	mov    esi,DWORD PTR [rsp+0x70]
  41210c:	mov    rbx,rcx
  41210f:	mov    ebp,r9d
  412112:	mov    QWORD PTR [rcx],rdx
  412115:	mov    QWORD PTR [rcx+0x8],r8
  412119:	lea    edi,[r9+0x1]
  41211d:	mov    DWORD PTR [rbx+0x10],r9d
  412121:	mov    DWORD PTR [rcx+0x14],esi
  412124:	imul   esi,ebp
  412127:	movsxd rdi,edi
  41212a:	lea    rcx,[rdi*8+0x0]
  412132:	add    esi,0x1
  412135:	movsxd rsi,esi
  412138:	call   0x424840
  41213d:	lea    rcx,[rsi*8+0x0]
  412145:	mov    QWORD PTR [rbx+0x18],rax
  412149:	call   0x424840
  41214e:	mov    QWORD PTR [rbx+0x40],0x0
  412156:	mov    QWORD PTR [rbx+0x28],rax
  41215a:	mov    rcx,rdi
  41215d:	mov    QWORD PTR [rbx+0x48],0x0
  412165:	call   0x424840
  41216a:	mov    rdx,QWORD PTR [rbx+0x18]
  41216e:	mov    QWORD PTR [rbx+0x58],rax
  412172:	mov    QWORD PTR [rbx+0x60],rax
  412176:	mov    DWORD PTR [rbx+0x38],0x0
  41217d:	mov    QWORD PTR [rbx+0x20],rdx
  412181:	mov    rdx,QWORD PTR [rbx+0x28]
  412185:	mov    QWORD PTR [rbx+0x30],rdx
  412189:	mov    rdx,QWORD PTR [rbx+0x48]
  41218d:	mov    QWORD PTR [rbx+0x50],rdx
  412191:	add    rsp,0x28
  412195:	pop    rbx
  412196:	pop    rsi
  412197:	pop    rdi
  412198:	pop    rbp
  412199:	ret    
  41219a:	nop    WORD PTR [rax+rax*1+0x0]
  4121a0:	push   rbp
  4121a1:	push   rdi
  4121a2:	push   rsi
  4121a3:	push   rbx
  4121a4:	sub    rsp,0x28
  4121a8:	mov    rbx,rcx
  4121ab:	mov    edi,r9d
  4121ae:	mov    rcx,rdx
  4121b1:	movsxd r10,DWORD PTR [rbx+0x10]
  4121b5:	mov    rax,QWORD PTR [rbx+0x18]
  4121b9:	mov    rsi,QWORD PTR [rbx+0x20]
  4121bd:	lea    rax,[rax+r10*8]
  4121c1:	mov    rbp,r10
  4121c4:	cmp    rsi,rax
  4121c7:	jae    0x4121f1
  4121c9:	mov    rax,QWORD PTR [rbx]
  4121cc:	mov    edx,DWORD PTR [rax+0x50]
  4121cf:	call   0x41ccf0
  4121d4:	mov    QWORD PTR [rsi],rax
  4121d7:	mov    rax,QWORD PTR [rbx+0x60]
  4121db:	add    QWORD PTR [rbx+0x20],0x8
  4121e0:	mov    BYTE PTR [rax],dil
  4121e3:	add    QWORD PTR [rbx+0x60],0x1
  4121e8:	add    rsp,0x28
  4121ec:	pop    rbx
  4121ed:	pop    rsi
  4121ee:	pop    rdi
  4121ef:	pop    rbp
  4121f0:	ret    
  4121f1:	call   QWORD PTR [rip+0x4a9bd]        # 0x45cbb4
  4121f7:	lea    rdx,[rip+0x2b552]        # 0x43d750
  4121fe:	lea    rcx,[rax+0x60]
  412202:	mov    r8d,ebp
  412205:	call   0x426370
  41220a:	mov    ecx,0x1
  41220f:	call   0x42a540
  412214:	nop
  412215:	nop
  412216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412220:	push   rdi
  412221:	push   rsi
  412222:	push   rbx
  412223:	sub    rsp,0x20
  412227:	mov    rbx,rcx
  41222a:	mov    esi,r9d
  41222d:	mov    rcx,rdx
  412230:	mov    r8d,DWORD PTR [rbx+0x14]
  412234:	mov    edi,DWORD PTR [rbx+0x10]
  412237:	imul   edi,r8d
  41223b:	cmp    DWORD PTR [rbx+0x38],edi
  41223e:	jge    0x412298
  412240:	mov    rax,QWORD PTR [rbx]
  412243:	mov    rdi,QWORD PTR [rbx+0x30]
  412247:	mov    edx,DWORD PTR [rax+0x50]
  41224a:	call   0x41ccf0
  41224f:	test   sil,sil
  412252:	mov    QWORD PTR [rdi],rax
  412255:	je     0x412268
  412257:	mov    rax,QWORD PTR [rbx+0x40]
  41225b:	test   rax,rax
  41225e:	je     0x412280
  412260:	movsxd rdx,DWORD PTR [rbx+0x38]
  412264:	mov    BYTE PTR [rax+rdx*1],0x1
  412268:	add    QWORD PTR [rbx+0x30],0x8
  41226d:	add    DWORD PTR [rbx+0x38],0x1
  412271:	add    rsp,0x20
  412275:	pop    rbx
  412276:	pop    rsi
  412277:	pop    rdi
  412278:	ret    
  412279:	nop    DWORD PTR [rax+0x0]
  412280:	mov    ecx,DWORD PTR [rbx+0x14]
  412283:	imul   ecx,DWORD PTR [rbx+0x10]
  412287:	add    ecx,0x1
  41228a:	movsxd rcx,ecx
  41228d:	call   0x424840
  412292:	mov    QWORD PTR [rbx+0x40],rax
  412296:	jmp    0x412260
  412298:	call   QWORD PTR [rip+0x4a916]        # 0x45cbb4
  41229e:	lea    rdx,[rip+0x2b4f3]        # 0x43d798
  4122a5:	lea    rcx,[rax+0x60]
  4122a9:	mov    r8d,edi
  4122ac:	call   0x426370
  4122b1:	mov    ecx,0x1
  4122b6:	call   0x42a540
  4122bb:	nop
  4122bc:	nop    DWORD PTR [rax+0x0]
  4122c0:	push   rdi
  4122c1:	push   rsi
  4122c2:	push   rbx
  4122c3:	sub    rsp,0x20
  4122c7:	mov    rdi,rdx
  4122ca:	mov    rbx,rcx
  4122cd:	mov    ecx,0x10
  4122d2:	call   0x424840
  4122d7:	mov    rcx,rdi
  4122da:	mov    rsi,rax
  4122dd:	call   0x424900
  4122e2:	mov    QWORD PTR [rsi],rax
  4122e5:	cmp    QWORD PTR [rbx+0x48],0x0
  4122ea:	je     0x412300
  4122ec:	mov    rax,QWORD PTR [rbx+0x50]
  4122f0:	mov    QWORD PTR [rax+0x8],rsi
  4122f4:	mov    QWORD PTR [rbx+0x50],rsi
  4122f8:	add    rsp,0x20
  4122fc:	pop    rbx
  4122fd:	pop    rsi
  4122fe:	pop    rdi
  4122ff:	ret    
  412300:	mov    QWORD PTR [rbx+0x48],rsi
  412304:	mov    QWORD PTR [rbx+0x50],rsi
  412308:	add    rsp,0x20
  41230c:	pop    rbx
  41230d:	pop    rsi
  41230e:	pop    rdi
  41230f:	ret    
  412310:	push   rsi
  412311:	push   rbx
  412312:	sub    rsp,0x28
  412316:	cmp    QWORD PTR [rcx+0x48],0x0
  41231b:	je     0x412345
  41231d:	mov    rax,QWORD PTR [rcx+0x50]
  412321:	mov    rbx,rcx
  412324:	mov    rsi,rdx
  412327:	mov    rcx,QWORD PTR [rax]
  41232a:	call   0x42a4e8
  41232f:	mov    rbx,QWORD PTR [rbx+0x50]
  412333:	mov    rcx,rsi
  412336:	call   0x424900
  41233b:	mov    QWORD PTR [rbx],rax
  41233e:	add    rsp,0x28
  412342:	pop    rbx
  412343:	pop    rsi
  412344:	ret    
  412345:	add    rsp,0x28
  412349:	pop    rbx
  41234a:	pop    rsi
  41234b:	jmp    0x4122c0
  412350:	push   rsi
  412351:	push   rbx
  412352:	sub    rsp,0x28
  412356:	mov    rbx,rcx
  412359:	mov    rcx,QWORD PTR [rcx+0x40]
  41235d:	test   rcx,rcx
  412360:	je     0x4123b7
  412362:	mov    edx,DWORD PTR [rbx+0x10]
  412365:	mov    eax,DWORD PTR [rbx+0x14]
  412368:	imul   eax,edx
  41236b:	test   eax,eax
  41236d:	jle    0x4123aa
  41236f:	xor    esi,esi
  412371:	jmp    0x412380
  412373:	mov    eax,DWORD PTR [rbx+0x14]
  412376:	add    esi,0x1
  412379:	imul   eax,edx
  41237c:	cmp    eax,esi
  41237e:	jle    0x4123aa
  412380:	movsxd rax,esi
  412383:	cmp    BYTE PTR [rcx+rax*1],0x0
  412387:	je     0x412373
  412389:	mov    rdx,QWORD PTR [rbx+0x28]
  41238d:	add    esi,0x1
  412390:	mov    rcx,QWORD PTR [rdx+rax*8]
  412394:	call   0x42a4e8
  412399:	mov    edx,DWORD PTR [rbx+0x10]
  41239c:	mov    eax,DWORD PTR [rbx+0x14]
  41239f:	mov    rcx,QWORD PTR [rbx+0x40]
  4123a3:	imul   eax,edx
  4123a6:	cmp    eax,esi
  4123a8:	jg     0x412380
  4123aa:	call   0x42a4e8
  4123af:	mov    QWORD PTR [rbx+0x40],0x0
  4123b7:	mov    rcx,QWORD PTR [rbx+0x18]
  4123bb:	call   0x42a4e8
  4123c0:	mov    rcx,QWORD PTR [rbx+0x28]
  4123c4:	call   0x42a4e8
  4123c9:	mov    rcx,QWORD PTR [rbx+0x58]
  4123cd:	call   0x42a4e8
  4123d2:	mov    rsi,QWORD PTR [rbx+0x48]
  4123d6:	mov    QWORD PTR [rbx],0x0
  4123dd:	mov    QWORD PTR [rbx+0x8],0x0
  4123e5:	mov    QWORD PTR [rbx+0x18],0x0
  4123ed:	mov    QWORD PTR [rbx+0x28],0x0
  4123f5:	mov    QWORD PTR [rbx+0x58],0x0
  4123fd:	test   rsi,rsi
  412400:	mov    QWORD PTR [rbx+0x20],0x0
  412408:	mov    QWORD PTR [rbx+0x30],0x0
  412410:	mov    QWORD PTR [rbx+0x60],0x0
  412418:	je     0x412441
  41241a:	mov    QWORD PTR [rbx+0x50],rsi
  41241e:	xchg   ax,ax
  412420:	mov    rax,QWORD PTR [rsi+0x8]
  412424:	mov    QWORD PTR [rbx+0x50],rax
  412428:	mov    rcx,QWORD PTR [rsi]
  41242b:	call   0x42a4e8
  412430:	mov    rcx,rsi
  412433:	call   0x42a4e8
  412438:	mov    rsi,QWORD PTR [rbx+0x50]
  41243c:	test   rsi,rsi
  41243f:	jne    0x412420
  412441:	mov    QWORD PTR [rbx+0x48],0x0
  412449:	mov    QWORD PTR [rbx+0x50],0x0
  412451:	add    rsp,0x28
  412455:	pop    rbx
  412456:	pop    rsi
  412457:	ret    
  412458:	nop    DWORD PTR [rax+rax*1+0x0]
  412460:	push   r15
  412462:	push   r14
  412464:	push   r13
  412466:	push   r12
  412468:	push   rbp
  412469:	push   rdi
  41246a:	push   rsi
  41246b:	push   rbx
  41246c:	sub    rsp,0x58
  412470:	movzx  eax,BYTE PTR [rip+0x47e09]        # 0x45a280
  412477:	mov    QWORD PTR [rsp+0xa8],rdx
  41247f:	mov    BYTE PTR [rsp+0x4f],0x0
  412484:	test   al,al
  412486:	jne    0x412491
  412488:	mov    rdx,QWORD PTR [rcx]
  41248b:	mov    eax,DWORD PTR [rdx]
  41248d:	test   eax,eax
  41248f:	jne    0x4124a2
  412491:	add    rsp,0x58
  412495:	pop    rbx
  412496:	pop    rsi
  412497:	pop    rdi
  412498:	pop    rbp
  412499:	pop    r12
  41249b:	pop    r13
  41249d:	pop    r14
  41249f:	pop    r15
  4124a1:	ret    
  4124a2:	sub    eax,0x2
  4124a5:	mov    rsi,r8
  4124a8:	mov    rbx,rcx
  4124ab:	cmp    eax,0x1
  4124ae:	jbe    0x4124d5
  4124b0:	xor    r8d,r8d
  4124b3:	cmp    WORD PTR [rdx+0x4],0x1
  4124b8:	lea    rax,[rsp+0x4f]
  4124bd:	lea    r9,[rsp+0xa8]
  4124c5:	mov    QWORD PTR [rsp+0x20],rax
  4124ca:	sete   r8b
  4124ce:	xor    edx,edx
  4124d0:	call   0x4101d0
  4124d5:	test   rsi,rsi
  4124d8:	je     0x4124e5
  4124da:	mov    rdx,rsi
  4124dd:	mov    rcx,rbx
  4124e0:	call   0x410b70
  4124e5:	mov    rax,QWORD PTR [rbx]
  4124e8:	mov    esi,DWORD PTR [rax]
  4124ea:	cmp    esi,0x7
  4124ed:	ja     0x412a71
  4124f3:	lea    rdx,[rip+0x2b62a]        # 0x43db24
  4124fa:	mov    ecx,esi
  4124fc:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412500:	add    rdx,rcx
  412503:	jmp    rdx
  412505:	cmp    WORD PTR [rax+0x4],0x1
  41250a:	mov    rdi,QWORD PTR [rsp+0xa8]
  412512:	je     0x413469
  412518:	movzx  edx,BYTE PTR [rip+0x47d61]        # 0x45a280
  41251f:	movzx  r12d,BYTE PTR [rax+0xa]
  412524:	movzx  esi,WORD PTR [rax+0x6]
  412528:	test   dl,dl
  41252a:	jne    0x4126f0
  412530:	cmp    BYTE PTR [rax+0xb],0x0
  412534:	je     0x413070
  41253a:	test   r12b,r12b
  41253d:	jne    0x412586
  41253f:	cmp    QWORD PTR [rbx+0x8],0x0
  412544:	je     0x412586
  412546:	lea    rcx,[rip+0x2b51a]        # 0x43da67
  41254d:	mov    r9,rdi
  412550:	mov    r8d,0xa
  412556:	mov    edx,0x1
  41255b:	call   0x42a4e0
  412560:	mov    rcx,QWORD PTR [rbx+0x8]
  412564:	mov    rdx,rdi
  412567:	call   0x40f8a0
  41256c:	lea    rcx,[rip+0x2b4ff]        # 0x43da72
  412573:	mov    r9,rdi
  412576:	mov    r8d,0x5
  41257c:	mov    edx,0x1
  412581:	call   0x42a4e0
  412586:	cmp    si,0x2
  41258a:	mov    ebp,0x2
  41258f:	lea    rcx,[rip+0x2b4e2]        # 0x43da78
  412596:	cmovbe ebp,esi
  412599:	mov    r9,rdi
  41259c:	mov    r8d,0x8
  4125a2:	mov    edx,0x1
  4125a7:	call   0x42a4e0
  4125ac:	cmp    bp,0x2
  4125b0:	mov    r9,rdi
  4125b3:	je     0x413ef1
  4125b9:	lea    rcx,[rip+0x2b4ce]        # 0x43da8e
  4125c0:	mov    r8d,0x8
  4125c6:	mov    edx,0x1
  4125cb:	call   0x42a4e0
  4125d0:	mov    r10d,DWORD PTR [rbx+0x10]
  4125d4:	xor    esi,esi
  4125d6:	test   r10d,r10d
  4125d9:	jne    0x4125eb
  4125db:	jmp    0x413753
  4125e0:	add    esi,0x1
  4125e3:	cmp    esi,eax
  4125e5:	jae    0x413753
  4125eb:	mov    rdx,QWORD PTR [rbx+0x58]
  4125ef:	mov    eax,esi
  4125f1:	movsx  ecx,BYTE PTR [rdx+rax*1]
  4125f5:	mov    rdx,rdi
  4125f8:	call   0x42a500
  4125fd:	test   bp,bp
  412600:	mov    eax,DWORD PTR [rbx+0x10]
  412603:	je     0x4125e0
  412605:	lea    edx,[rax-0x1]
  412608:	cmp    edx,esi
  41260a:	jbe    0x4125e0
  41260c:	lea    rcx,[rip+0x2b31e]        # 0x43d931
  412613:	mov    r9,rdi
  412616:	mov    r8d,0x3
  41261c:	mov    edx,0x1
  412621:	call   0x42a4e0
  412626:	mov    eax,DWORD PTR [rbx+0x10]
  412629:	jmp    0x4125e0
  41262b:	nop    DWORD PTR [rax+rax*1+0x0]
  412630:	cmp    WORD PTR [rax+0x4],0x1
  412635:	je     0x4131b4
  41263b:	movzx  edx,BYTE PTR [rip+0x47c3e]        # 0x45a280
  412642:	mov    rbp,QWORD PTR [rsp+0xa8]
  41264a:	movzx  r13d,BYTE PTR [rax+0xa]
  41264f:	test   dl,dl
  412651:	jne    0x4126f0
  412657:	cmp    BYTE PTR [rax+0xb],0x0
  41265b:	je     0x412f80
  412661:	xor    r12d,r12d
  412664:	test   r13b,r13b
  412667:	jne    0x412f86
  41266d:	mov    rcx,QWORD PTR [rbx+0x8]
  412671:	test   rcx,rcx
  412674:	je     0x412691
  412676:	mov    rdx,rbp
  412679:	call   0x42a4f8
  41267e:	mov    rax,QWORD PTR [rbx]
  412681:	mov    r8,rbp
  412684:	movzx  edx,BYTE PTR [rax+0x38]
  412688:	mov    rcx,QWORD PTR [rax+0x30]
  41268c:	call   0x40ffc0
  412691:	mov    rsi,QWORD PTR [rbx+0x18]
  412695:	cmp    QWORD PTR [rsi],0x0
  412699:	je     0x412f80
  41269f:	nop
  4126a0:	mov    rcx,QWORD PTR [rsi]
  4126a3:	mov    rdx,rbp
  4126a6:	add    rsi,0x8
  4126aa:	call   0x42a4f8
  4126af:	cmp    QWORD PTR [rsi],0x0
  4126b3:	je     0x412f80
  4126b9:	cmp    rsi,QWORD PTR [rbx+0x18]
  4126bd:	je     0x4126a0
  4126bf:	mov    rax,QWORD PTR [rbx]
  4126c2:	mov    r8,rbp
  4126c5:	movzx  edx,BYTE PTR [rax+0x28]
  4126c9:	mov    rcx,QWORD PTR [rax+0x20]
  4126cd:	call   0x40ffc0
  4126d2:	jmp    0x4126a0
  4126d4:	cmp    WORD PTR [rax+0x4],0x1
  4126d9:	mov    rdx,QWORD PTR [rsp+0xa8]
  4126e1:	mov    rcx,rbx
  4126e4:	je     0x41345f
  4126ea:	call   0x410b70
  4126ef:	nop
  4126f0:	cmp    BYTE PTR [rsp+0x4f],0x0
  4126f5:	je     0x412491
  4126fb:	mov    rcx,QWORD PTR [rsp+0xa8]
  412703:	call   0x410290
  412708:	jmp    0x412491
  41270d:	nop    DWORD PTR [rax]
  412710:	cmp    WORD PTR [rax+0x4],0x1
  412715:	mov    rdi,QWORD PTR [rsp+0xa8]
  41271d:	je     0x4132c5
  412723:	movzx  edx,BYTE PTR [rip+0x47b56]        # 0x45a280
  41272a:	movzx  r14d,BYTE PTR [rax+0xa]
  41272f:	movzx  r8d,WORD PTR [rax+0x6]
  412734:	mov    rsi,QWORD PTR [rax+0x48]
  412738:	test   dl,dl
  41273a:	jne    0x4126f0
  41273c:	cmp    BYTE PTR [rax+0xb],0x0
  412740:	jne    0x4139d8
  412746:	mov    rbp,QWORD PTR [rbx+0x28]
  41274a:	xor    esi,esi
  41274c:	lea    r13,[rip+0x2b089]        # 0x43d7dc
  412753:	lea    r12,[rip+0x2b088]        # 0x43d7e2
  41275a:	cmp    QWORD PTR [rbp+0x0],0x0
  41275f:	jne    0x4127c5
  412761:	jmp    0x412ed2
  412766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412770:	lea    rcx,[rip+0x2b14d]        # 0x43d8c4
  412777:	mov    r9,rdi
  41277a:	mov    r8d,0x7
  412780:	mov    edx,0x1
  412785:	call   0x42a4e0
  41278a:	lea    rcx,[rip+0x2b193]        # 0x43d924
  412791:	mov    edx,0x1
  412796:	add    esi,0x1
  412799:	mov    r9,rdi
  41279c:	mov    r8d,0x6
  4127a2:	call   0x42a4e0
  4127a7:	xor    edx,edx
  4127a9:	mov    eax,esi
  4127ab:	div    DWORD PTR [rbx+0x10]
  4127ae:	test   edx,edx
  4127b0:	je     0x412b83
  4127b6:	add    rbp,0x8
  4127ba:	cmp    QWORD PTR [rbp+0x0],0x0
  4127bf:	je     0x412ed2
  4127c5:	xor    edx,edx
  4127c7:	mov    eax,esi
  4127c9:	div    DWORD PTR [rbx+0x10]
  4127cc:	test   edx,edx
  4127ce:	jne    0x412800
  4127d0:	movzx  eax,BYTE PTR [rip+0x47aa9]        # 0x45a280
  4127d7:	test   al,al
  4127d9:	jne    0x412ed2
  4127df:	lea    rcx,[rip+0x2b129]        # 0x43d90f
  4127e6:	mov    edx,0x1
  4127eb:	mov    r9,rdi
  4127ee:	mov    r8d,0x14
  4127f4:	call   0x42a4e0
  4127f9:	mov    eax,esi
  4127fb:	xor    edx,edx
  4127fd:	div    DWORD PTR [rbx+0x10]
  412800:	mov    rax,QWORD PTR [rbx+0x58]
  412804:	mov    r8d,edx
  412807:	lea    rdx,[rip+0x2b09f]        # 0x43d8ad
  41280e:	mov    rcx,rdi
  412811:	cmp    BYTE PTR [rax+r8*1],0x72
  412816:	mov    r8,r12
  412819:	cmove  r8,r13
  41281d:	call   0x426370
  412822:	mov    r15,QWORD PTR [rbp+0x0]
  412826:	lea    rdx,[rip+0x2b094]        # 0x43d8c1
  41282d:	mov    rcx,r15
  412830:	call   0x42a3e0
  412835:	cmp    BYTE PTR [r15+rax*1],0x0
  41283a:	je     0x412770
  412840:	mov    rdx,rdi
  412843:	mov    rcx,r15
  412846:	call   0x40fff0
  41284b:	jmp    0x41278a
  412850:	cmp    WORD PTR [rax+0x4],0x1
  412855:	je     0x412bf0
  41285b:	movzx  ecx,BYTE PTR [rip+0x47a1e]        # 0x45a280
  412862:	mov    rdi,QWORD PTR [rsp+0xa8]
  41286a:	movzx  r13d,BYTE PTR [rax+0xa]
  41286f:	movzx  edx,WORD PTR [rax+0x6]
  412873:	test   cl,cl
  412875:	jne    0x4126f0
  41287b:	cmp    dx,0x3
  41287f:	mov    r12d,0x3
  412885:	cmovbe r12d,edx
  412889:	cmp    BYTE PTR [rax+0xb],0x0
  41288d:	je     0x412dc0
  412893:	test   r13b,r13b
  412896:	jne    0x4128df
  412898:	cmp    QWORD PTR [rbx+0x8],0x0
  41289d:	je     0x4128df
  41289f:	lea    rcx,[rip+0x2ac3f]        # 0x43d4e5
  4128a6:	mov    r9,rdi
  4128a9:	mov    r8d,0xf
  4128af:	mov    edx,0x1
  4128b4:	call   0x42a4e0
  4128b9:	mov    rcx,QWORD PTR [rbx+0x8]
  4128bd:	mov    rdx,rdi
  4128c0:	call   0x40f710
  4128c5:	lea    rcx,[rip+0x2ac29]        # 0x43d4f5
  4128cc:	mov    r9,rdi
  4128cf:	mov    r8d,0xf
  4128d5:	mov    edx,0x1
  4128da:	call   0x42a4e0
  4128df:	lea    rcx,[rip+0x2ac1f]        # 0x43d505
  4128e6:	mov    r9,rdi
  4128e9:	mov    r8d,0x10
  4128ef:	mov    edx,0x1
  4128f4:	call   0x42a4e0
  4128f9:	cmp    r12w,0x1
  4128fe:	jbe    0x413719
  412904:	lea    rcx,[rip+0x2b020]        # 0x43d92b
  41290b:	mov    r9,rdi
  41290e:	mov    r8d,0x2
  412914:	mov    edx,0x1
  412919:	call   0x42a4e0
  41291e:	mov    eax,DWORD PTR [rbx+0x10]
  412921:	test   eax,eax
  412923:	je     0x412a9f
  412929:	xor    esi,esi
  41292b:	jmp    0x41293b
  41292d:	nop    DWORD PTR [rax]
  412930:	add    esi,0x1
  412933:	cmp    esi,eax
  412935:	jae    0x412a94
  41293b:	mov    rdx,QWORD PTR [rbx+0x58]
  41293f:	mov    eax,esi
  412941:	movsx  ecx,BYTE PTR [rdx+rax*1]
  412945:	mov    rdx,rdi
  412948:	call   0x42a500
  41294d:	test   r12w,r12w
  412951:	mov    eax,DWORD PTR [rbx+0x10]
  412954:	je     0x412930
  412956:	lea    edx,[rax-0x1]
  412959:	cmp    edx,esi
  41295b:	jbe    0x412930
  41295d:	lea    rcx,[rip+0x2afcd]        # 0x43d931
  412964:	mov    r9,rdi
  412967:	mov    r8d,0x3
  41296d:	mov    edx,0x1
  412972:	call   0x42a4e0
  412977:	mov    eax,DWORD PTR [rbx+0x10]
  41297a:	jmp    0x412930
  41297c:	nop    DWORD PTR [rax+0x0]
  412980:	cmp    WORD PTR [rax+0x4],0x1
  412985:	je     0x412bf0
  41298b:	movzx  edx,BYTE PTR [rip+0x478ee]        # 0x45a280
  412992:	mov    rdi,QWORD PTR [rsp+0xa8]
  41299a:	movzx  r14d,BYTE PTR [rax+0xa]
  41299f:	movzx  r12d,WORD PTR [rax+0x6]
  4129a4:	mov    rsi,QWORD PTR [rax+0x48]
  4129a8:	test   dl,dl
  4129aa:	jne    0x4126f0
  4129b0:	cmp    r12w,0x3
  4129b5:	jbe    0x412c05
  4129bb:	cmp    BYTE PTR [rax+0xb],0x0
  4129bf:	mov    r12d,0x3
  4129c5:	jne    0x414179
  4129cb:	mov    rbp,QWORD PTR [rbx+0x28]
  4129cf:	cmp    QWORD PTR [rbp+0x0],0x0
  4129d4:	je     0x412d60
  4129da:	xor    esi,esi
  4129dc:	nop    DWORD PTR [rax+0x0]
  4129e0:	lea    rcx,[rip+0x2b046]        # 0x43da2d
  4129e7:	mov    r9,rdi
  4129ea:	mov    r8d,0xd
  4129f0:	mov    edx,0x1
  4129f5:	add    esi,0x1
  4129f8:	call   0x42a4e0
  4129fd:	mov    rcx,QWORD PTR [rbp+0x0]
  412a01:	mov    rdx,rdi
  412a04:	call   0x40f710
  412a09:	mov    rdx,rdi
  412a0c:	mov    ecx,0x7d
  412a11:	call   0x42a500
  412a16:	xor    edx,edx
  412a18:	mov    eax,esi
  412a1a:	div    DWORD PTR [rbx+0x10]
  412a1d:	test   edx,edx
  412a1f:	je     0x412ba2
  412a25:	movzx  eax,BYTE PTR [rip+0x47854]        # 0x45a280
  412a2c:	test   al,al
  412a2e:	jne    0x412d60
  412a34:	add    rbp,0x8
  412a38:	cmp    QWORD PTR [rbp+0x0],0x0
  412a3d:	je     0x412d60
  412a43:	test   esi,esi
  412a45:	je     0x4129e0
  412a47:	xor    edx,edx
  412a49:	mov    eax,esi
  412a4b:	div    DWORD PTR [rbx+0x10]
  412a4e:	test   edx,edx
  412a50:	je     0x4129e0
  412a52:	lea    rcx,[rip+0x2afd0]        # 0x43da29
  412a59:	mov    r9,rdi
  412a5c:	mov    r8d,0x3
  412a62:	mov    edx,0x1
  412a67:	call   0x42a4e0
  412a6c:	jmp    0x4129e0
  412a71:	call   QWORD PTR [rip+0x4a13d]        # 0x45cbb4
  412a77:	lea    rdx,[rip+0x2b072]        # 0x43daf0
  412a7e:	lea    rcx,[rax+0x60]
  412a82:	mov    r8d,esi
  412a85:	call   0x426370
  412a8a:	mov    ecx,0x1
  412a8f:	call   0x42a540
  412a94:	cmp    r12w,0x1
  412a99:	jbe    0x413726
  412a9f:	lea    rcx,[rip+0x2ae88]        # 0x43d92e
  412aa6:	mov    r9,rdi
  412aa9:	mov    r8d,0x2
  412aaf:	mov    edx,0x1
  412ab4:	call   0x42a4e0
  412ab9:	lea    rcx,[rip+0x2aa63]        # 0x43d523
  412ac0:	mov    edx,0x1
  412ac5:	mov    r9,rdi
  412ac8:	mov    r8d,0x2
  412ace:	call   0x42a4e0
  412ad3:	test   r13b,r13b
  412ad6:	sete   dl
  412ad9:	cmp    r12w,0x1
  412ade:	mov    eax,edx
  412ae0:	jbe    0x413746
  412ae6:	test   dl,dl
  412ae8:	je     0x412dc0
  412aee:	lea    rcx,[rip+0x2aa31]        # 0x43d526
  412af5:	mov    r9,rdi
  412af8:	mov    r8d,0x7
  412afe:	mov    edx,0x1
  412b03:	call   0x42a4e0
  412b08:	mov    r14d,DWORD PTR [rbx+0x10]
  412b0c:	mov    rbp,QWORD PTR [rbx+0x18]
  412b10:	test   r14d,r14d
  412b13:	je     0x412d8c
  412b19:	xor    esi,esi
  412b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  412b20:	lea    rcx,[rip+0x2ae0e]        # 0x43d935
  412b27:	mov    r9,rdi
  412b2a:	mov    r8d,0x8
  412b30:	mov    edx,0x1
  412b35:	add    esi,0x1
  412b38:	add    rbp,0x8
  412b3c:	call   0x42a4e0
  412b41:	mov    rcx,QWORD PTR [rbp-0x8]
  412b45:	mov    rdx,rdi
  412b48:	call   0x40f710
  412b4d:	mov    rdx,rdi
  412b50:	mov    ecx,0x7d
  412b55:	call   0x42a500
  412b5a:	cmp    esi,DWORD PTR [rbx+0x10]
  412b5d:	jae    0x412d8c
  412b63:	test   esi,esi
  412b65:	je     0x412b20
  412b67:	lea    rcx,[rip+0x2aa1e]        # 0x43d58c
  412b6e:	mov    r9,rdi
  412b71:	mov    r8d,0x3
  412b77:	mov    edx,0x1
  412b7c:	call   0x42a4e0
  412b81:	jmp    0x412b20
  412b83:	lea    rcx,[rip+0x2ad7c]        # 0x43d906
  412b8a:	mov    r9,rdi
  412b8d:	mov    r8d,0x8
  412b93:	mov    edx,0x1
  412b98:	call   0x42a4e0
  412b9d:	jmp    0x4127b6
  412ba2:	lea    rcx,[rip+0x2ae92]        # 0x43da3b
  412ba9:	mov    r9,rdi
  412bac:	mov    r8d,0x11
  412bb2:	mov    edx,0x1
  412bb7:	call   0x42a4e0
  412bbc:	cmp    r12w,0x3
  412bc1:	jne    0x412a25
  412bc7:	lea    rcx,[rip+0x2ae7f]        # 0x43da4d
  412bce:	mov    r9,rdi
  412bd1:	mov    r8d,0x8
  412bd7:	mov    edx,0x1
  412bdc:	call   0x42a4e0
  412be1:	jmp    0x412a25
  412be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bf0:	mov    rdx,QWORD PTR [rsp+0xa8]
  412bf8:	mov    rcx,rbx
  412bfb:	call   0x40f900
  412c00:	jmp    0x4126f0
  412c05:	cmp    BYTE PTR [rax+0xb],0x0
  412c09:	je     0x4129cb
  412c0f:	lea    rcx,[rip+0x2ad28]        # 0x43d93e
  412c16:	mov    r9,rdi
  412c19:	mov    r8d,0x12
  412c1f:	mov    edx,0x1
  412c24:	call   0x42a4e0
  412c29:	cmp    r12w,0x1
  412c2e:	jbe    0x413e0b
  412c34:	lea    rcx,[rip+0x2acf0]        # 0x43d92b
  412c3b:	mov    edx,0x1
  412c40:	mov    r9,rdi
  412c43:	mov    r8d,0x2
  412c49:	call   0x42a4e0
  412c4e:	mov    edx,DWORD PTR [rbx+0x10]
  412c51:	test   edx,edx
  412c53:	je     0x413b04
  412c59:	test   rsi,rsi
  412c5c:	setne  bpl
  412c60:	xor    r13d,r13d
  412c63:	xor    r15d,r15d
  412c66:	jmp    0x412c7d
  412c68:	nop    DWORD PTR [rax+rax*1+0x0]
  412c70:	add    r15d,0x1
  412c74:	cmp    r15d,eax
  412c77:	jae    0x413af9
  412c7d:	mov    rdx,QWORD PTR [rbx+0x58]
  412c81:	mov    eax,r15d
  412c84:	movsx  ecx,BYTE PTR [rdx+rax*1]
  412c88:	cmp    cl,0x6c
  412c8b:	jne    0x412d50
  412c91:	test   bpl,bpl
  412c94:	je     0x412d50
  412c9a:	lea    rdx,[rip+0x2acb0]        # 0x43d951
  412ca1:	mov    rcx,rsi
  412ca4:	call   0x42a3e0
  412ca9:	add    rsi,rax
  412cac:	cmp    BYTE PTR [rsi],0x0
  412caf:	jne    0x41395d
  412cb5:	test   r13,r13
  412cb8:	je     0x413f0d
  412cbe:	lea    rcx,[rip+0x2ac90]        # 0x43d955
  412cc5:	mov    r9,rdi
  412cc8:	mov    r8d,0x2
  412cce:	mov    edx,0x1
  412cd3:	call   0x42a4e0
  412cd8:	lea    rdx,[rip+0x2ac72]        # 0x43d951
  412cdf:	mov    rcx,r13
  412ce2:	call   0x42a410
  412ce7:	mov    r9,rdi
  412cea:	mov    r8d,0x1
  412cf0:	mov    rdx,rax
  412cf3:	mov    rcx,r13
  412cf6:	call   0x42a4e0
  412cfb:	lea    rcx,[rip+0x2ac56]        # 0x43d958
  412d02:	mov    r9,rdi
  412d05:	mov    r8d,0xb
  412d0b:	mov    edx,0x1
  412d10:	call   0x42a4e0
  412d15:	test   r12w,r12w
  412d19:	mov    eax,DWORD PTR [rbx+0x10]
  412d1c:	je     0x412c70
  412d22:	lea    edx,[rax-0x1]
  412d25:	cmp    edx,r15d
  412d28:	jbe    0x412c70
  412d2e:	lea    rcx,[rip+0x2abfc]        # 0x43d931
  412d35:	mov    r9,rdi
  412d38:	mov    r8d,0x3
  412d3e:	mov    edx,0x1
  412d43:	call   0x42a4e0
  412d48:	mov    eax,DWORD PTR [rbx+0x10]
  412d4b:	jmp    0x412c70
  412d50:	mov    rdx,rdi
  412d53:	call   0x42a500
  412d58:	jmp    0x412d15
  412d5a:	nop    WORD PTR [rax+rax*1+0x0]
  412d60:	mov    rax,QWORD PTR [rbx]
  412d63:	cmp    BYTE PTR [rax+0xc],0x0
  412d67:	je     0x4126f0
  412d6d:	lea    rcx,[rip+0x2ace2]        # 0x43da56
  412d74:	mov    r9,rdi
  412d77:	mov    r8d,0x10
  412d7d:	mov    edx,0x1
  412d82:	call   0x42a4e0
  412d87:	jmp    0x4126f0
  412d8c:	lea    rcx,[rip+0x2a7fd]        # 0x43d590
  412d93:	mov    r9,rdi
  412d96:	mov    r8d,0x4
  412d9c:	mov    edx,0x1
  412da1:	call   0x42a4e0
  412da6:	lea    rcx,[rip+0x2a779]        # 0x43d526
  412dad:	mov    r9,rdi
  412db0:	mov    r8d,0x7
  412db6:	mov    edx,0x1
  412dbb:	call   0x42a4e0
  412dc0:	mov    rbp,QWORD PTR [rbx+0x28]
  412dc4:	xor    esi,esi
  412dc6:	mov    rcx,QWORD PTR [rbp+0x0]
  412dca:	test   rcx,rcx
  412dcd:	jne    0x412e0b
  412dcf:	jmp    0x412e40
  412dd1:	lea    rcx,[rip+0x2a7b8]        # 0x43d590
  412dd8:	mov    r8d,0x4
  412dde:	mov    edx,0x1
  412de3:	call   0x42a4e0
  412de8:	cmp    r12w,0x3
  412ded:	je     0x413195
  412df3:	movzx  eax,BYTE PTR [rip+0x47486]        # 0x45a280
  412dfa:	test   al,al
  412dfc:	jne    0x412e40
  412dfe:	add    rbp,0x8
  412e02:	mov    rcx,QWORD PTR [rbp+0x0]
  412e06:	test   rcx,rcx
  412e09:	je     0x412e40
  412e0b:	mov    rdx,rdi
  412e0e:	add    esi,0x1
  412e11:	call   0x40f710
  412e16:	xor    edx,edx
  412e18:	mov    eax,esi
  412e1a:	mov    r9,rdi
  412e1d:	div    DWORD PTR [rbx+0x10]
  412e20:	test   edx,edx
  412e22:	je     0x412dd1
  412e24:	lea    rcx,[rip+0x2a761]        # 0x43d58c
  412e2b:	mov    r8d,0x3
  412e31:	mov    edx,0x1
  412e36:	call   0x42a4e0
  412e3b:	jmp    0x412dfe
  412e3d:	nop    DWORD PTR [rax]
  412e40:	mov    rax,QWORD PTR [rbx]
  412e43:	cmp    BYTE PTR [rax+0xc],0x0
  412e47:	je     0x4126f0
  412e4d:	mov    rcx,rbx
  412e50:	call   0x40ff10
  412e55:	cmp    r12w,0x2
  412e5a:	mov    rbx,rax
  412e5d:	je     0x414062
  412e63:	lea    rcx,[rip+0x2a72b]        # 0x43d595
  412e6a:	mov    r9,rdi
  412e6d:	mov    r8d,0x19
  412e73:	mov    edx,0x1
  412e78:	call   0x42a4e0
  412e7d:	test   rbx,rbx
  412e80:	je     0x412ec0
  412e82:	test   r13b,r13b
  412e85:	jne    0x412ec0
  412e87:	movzx  eax,BYTE PTR [rip+0x473f2]        # 0x45a280
  412e8e:	test   al,al
  412e90:	jne    0x412ec0
  412e92:	mov    rcx,QWORD PTR [rbx]
  412e95:	mov    rdx,rdi
  412e98:	call   0x40f710
  412e9d:	lea    rcx,[rip+0x2a6ec]        # 0x43d590
  412ea4:	mov    r9,rdi
  412ea7:	mov    r8d,0x4
  412ead:	mov    edx,0x1
  412eb2:	call   0x42a4e0
  412eb7:	mov    rbx,QWORD PTR [rbx+0x8]
  412ebb:	test   rbx,rbx
  412ebe:	jne    0x412e92
  412ec0:	mov    rdx,rdi
  412ec3:	mov    ecx,0xa
  412ec8:	call   0x42a500
  412ecd:	jmp    0x4126f0
  412ed2:	mov    rax,QWORD PTR [rbx]
  412ed5:	cmp    BYTE PTR [rax+0xc],0x0
  412ed9:	je     0x4126f0
  412edf:	mov    rcx,rbx
  412ee2:	call   0x40ff10
  412ee7:	lea    rcx,[rip+0x2a9ed]        # 0x43d8db
  412eee:	mov    rbx,rax
  412ef1:	mov    r9,rdi
  412ef4:	mov    r8d,0x9
  412efa:	mov    edx,0x1
  412eff:	call   0x42a4e0
  412f04:	test   rbx,rbx
  412f07:	je     0x412ec0
  412f09:	test   r14b,r14b
  412f0c:	jne    0x412ec0
  412f0e:	movzx  eax,BYTE PTR [rip+0x4736b]        # 0x45a280
  412f15:	test   al,al
  412f17:	jne    0x412ec0
  412f19:	lea    rcx,[rip+0x2a9c5]        # 0x43d8e5
  412f20:	mov    r9,rdi
  412f23:	mov    r8d,0x3
  412f29:	mov    edx,0x1
  412f2e:	call   0x42a4e0
  412f33:	mov    rcx,QWORD PTR [rbx]
  412f36:	mov    rdx,rdi
  412f39:	call   0x40fff0
  412f3e:	lea    rcx,[rip+0x2a6b9]        # 0x43d5fe
  412f45:	mov    r9,rdi
  412f48:	mov    r8d,0x7
  412f4e:	mov    edx,0x1
  412f53:	call   0x42a4e0
  412f58:	mov    rbx,QWORD PTR [rbx+0x8]
  412f5c:	test   rbx,rbx
  412f5f:	jne    0x412f33
  412f61:	lea    rcx,[rip+0x2a981]        # 0x43d8e9
  412f68:	mov    r9,rdi
  412f6b:	mov    r8d,0x4
  412f71:	mov    edx,0x1
  412f76:	call   0x42a4e0
  412f7b:	jmp    0x412ec0
  412f80:	mov    r12d,0x1
  412f86:	mov    rsi,QWORD PTR [rbx+0x28]
  412f8a:	cmp    QWORD PTR [rsi],0x0
  412f8e:	je     0x412ffb
  412f90:	xor    edi,edi
  412f92:	jmp    0x412f9e
  412f94:	add    rsi,0x8
  412f98:	cmp    QWORD PTR [rsi],0x0
  412f9c:	je     0x412ffb
  412f9e:	test   r12b,r12b
  412fa1:	je     0x412fc1
  412fa3:	mov    rax,QWORD PTR [rbx]
  412fa6:	mov    r8,rbp
  412fa9:	movzx  edx,BYTE PTR [rax+0x38]
  412fad:	mov    rcx,QWORD PTR [rax+0x30]
  412fb1:	call   0x40ffc0
  412fb6:	movzx  eax,BYTE PTR [rip+0x472c3]        # 0x45a280
  412fbd:	test   al,al
  412fbf:	jne    0x412ff8
  412fc1:	mov    rcx,QWORD PTR [rsi]
  412fc4:	mov    rdx,rbp
  412fc7:	add    edi,0x1
  412fca:	mov    r12d,0x1
  412fd0:	call   0x42a4f8
  412fd5:	xor    edx,edx
  412fd7:	mov    eax,edi
  412fd9:	div    DWORD PTR [rbx+0x10]
  412fdc:	test   edx,edx
  412fde:	je     0x412f94
  412fe0:	mov    rax,QWORD PTR [rbx]
  412fe3:	mov    r8,rbp
  412fe6:	xor    r12d,r12d
  412fe9:	movzx  edx,BYTE PTR [rax+0x28]
  412fed:	mov    rcx,QWORD PTR [rax+0x20]
  412ff1:	call   0x40ffc0
  412ff6:	jmp    0x412f94
  412ff8:	xor    r12d,r12d
  412ffb:	mov    rax,QWORD PTR [rbx]
  412ffe:	cmp    BYTE PTR [rax+0xc],0x0
  413002:	je     0x4126f0
  413008:	mov    rcx,rbx
  41300b:	call   0x40ff10
  413010:	test   rax,rax
  413013:	mov    rsi,rax
  413016:	je     0x41302c
  413018:	test   r13b,r13b
  41301b:	jne    0x41302c
  41301d:	movzx  eax,BYTE PTR [rip+0x4725c]        # 0x45a280
  413024:	test   al,al
  413026:	je     0x413163
  41302c:	test   r12b,r12b
  41302f:	je     0x4126f0
  413035:	mov    rax,QWORD PTR [rbx]
  413038:	movzx  edx,BYTE PTR [rax+0x38]
  41303c:	test   dl,dl
  41303e:	jne    0x413fb8
  413044:	mov    rdx,rbp
  413047:	mov    ecx,0xa
  41304c:	call   0x42a500
  413051:	jmp    0x4126f0
  413056:	lea    rcx,[rip+0x2aa81]        # 0x43dade
  41305d:	mov    r9,rdi
  413060:	mov    r8d,0x3
  413066:	mov    edx,0x1
  41306b:	call   0x42a4e0
  413070:	mov    rbp,QWORD PTR [rbx+0x28]
  413074:	xor    esi,esi
  413076:	mov    rcx,QWORD PTR [rbp+0x0]
  41307a:	test   rcx,rcx
  41307d:	jne    0x4130a3
  41307f:	jmp    0x4130d0
  413081:	mov    ecx,0xa
  413086:	call   0x42a500
  41308b:	movzx  eax,BYTE PTR [rip+0x471ee]        # 0x45a280
  413092:	test   al,al
  413094:	jne    0x4130d0
  413096:	add    rbp,0x8
  41309a:	mov    rcx,QWORD PTR [rbp+0x0]
  41309e:	test   rcx,rcx
  4130a1:	je     0x4130d0
  4130a3:	mov    rdx,rdi
  4130a6:	add    esi,0x1
  4130a9:	call   0x40f8a0
  4130ae:	xor    edx,edx
  4130b0:	mov    eax,esi
  4130b2:	div    DWORD PTR [rbx+0x10]
  4130b5:	test   edx,edx
  4130b7:	mov    rdx,rdi
  4130ba:	je     0x413081
  4130bc:	mov    ecx,0x9
  4130c1:	call   0x42a500
  4130c6:	jmp    0x413096
  4130c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4130d0:	mov    rax,QWORD PTR [rbx]
  4130d3:	cmp    BYTE PTR [rax+0xc],0x0
  4130d7:	je     0x4126f0
  4130dd:	mov    rcx,rbx
  4130e0:	call   0x40ff10
  4130e5:	lea    rcx,[rip+0x2a9df]        # 0x43dacb
  4130ec:	mov    rbx,rax
  4130ef:	mov    r9,rdi
  4130f2:	mov    r8d,0xa
  4130f8:	mov    edx,0x1
  4130fd:	call   0x42a4e0
  413102:	test   rbx,rbx
  413105:	je     0x413117
  413107:	test   r12b,r12b
  41310a:	jne    0x413117
  41310c:	movzx  eax,BYTE PTR [rip+0x4716d]        # 0x45a280
  413113:	test   al,al
  413115:	je     0x413140
  413117:	lea    rcx,[rip+0x2a9b8]        # 0x43dad6
  41311e:	mov    r9,rdi
  413121:	mov    r8d,0x4
  413127:	mov    edx,0x1
  41312c:	call   0x42a4e0
  413131:	jmp    0x4126f0
  413136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413140:	mov    rcx,QWORD PTR [rbx]
  413143:	mov    rdx,rdi
  413146:	call   0x40f8a0
  41314b:	mov    rdx,rdi
  41314e:	mov    ecx,0xa
  413153:	call   0x42a500
  413158:	mov    rbx,QWORD PTR [rbx+0x8]
  41315c:	test   rbx,rbx
  41315f:	jne    0x413140
  413161:	jmp    0x413117
  413163:	test   r12b,r12b
  413166:	jne    0x413180
  413168:	mov    rcx,QWORD PTR [rsi]
  41316b:	mov    rdx,rbp
  41316e:	call   0x42a4f8
  413173:	mov    rsi,QWORD PTR [rsi+0x8]
  413177:	test   rsi,rsi
  41317a:	je     0x413035
  413180:	mov    rax,QWORD PTR [rbx]
  413183:	mov    r8,rbp
  413186:	movzx  edx,BYTE PTR [rax+0x38]
  41318a:	mov    rcx,QWORD PTR [rax+0x30]
  41318e:	call   0x40ffc0
  413193:	jmp    0x413168
  413195:	lea    rcx,[rip+0x2a38a]        # 0x43d526
  41319c:	mov    r9,rdi
  41319f:	mov    r8d,0x7
  4131a5:	mov    edx,0x1
  4131aa:	call   0x42a4e0
  4131af:	jmp    0x412df3
  4131b4:	movzx  edx,BYTE PTR [rip+0x470c5]        # 0x45a280
  4131bb:	mov    rdi,QWORD PTR [rsp+0xa8]
  4131c3:	movzx  r12d,BYTE PTR [rax+0xa]
  4131c8:	test   dl,dl
  4131ca:	jne    0x4126f0
  4131d0:	cmp    BYTE PTR [rax+0xb],0x0
  4131d4:	mov    r13d,0x1
  4131da:	je     0x4131fe
  4131dc:	xor    r13d,r13d
  4131df:	test   r12b,r12b
  4131e2:	jne    0x4131fe
  4131e4:	mov    rcx,QWORD PTR [rbx+0x8]
  4131e8:	mov    r13d,r12d
  4131eb:	test   rcx,rcx
  4131ee:	je     0x4131fe
  4131f0:	mov    rdx,rdi
  4131f3:	mov    r13d,0x1
  4131f9:	call   0x42a4f8
  4131fe:	mov    rbp,QWORD PTR [rbx+0x28]
  413202:	cmp    QWORD PTR [rbp+0x0],0x0
  413207:	je     0x41390c
  41320d:	xor    esi,esi
  41320f:	jmp    0x413220
  413211:	add    rbp,0x8
  413215:	cmp    QWORD PTR [rbp+0x0],0x0
  41321a:	je     0x41390c
  413220:	test   r13b,r13b
  413223:	je     0x41325a
  413225:	mov    rax,QWORD PTR [rbx]
  413228:	mov    r8,rdi
  41322b:	movzx  edx,BYTE PTR [rax+0x38]
  41322f:	mov    rcx,QWORD PTR [rax+0x30]
  413233:	call   0x40ffc0
  413238:	mov    rax,QWORD PTR [rbx]
  41323b:	mov    r8,rdi
  41323e:	movzx  edx,BYTE PTR [rax+0x38]
  413242:	mov    rcx,QWORD PTR [rax+0x30]
  413246:	call   0x40ffc0
  41324b:	movzx  eax,BYTE PTR [rip+0x4702e]        # 0x45a280
  413252:	test   al,al
  413254:	jne    0x413909
  41325a:	mov    eax,esi
  41325c:	xor    edx,edx
  41325e:	add    esi,0x1
  413261:	div    DWORD PTR [rbx+0x10]
  413264:	mov    rax,QWORD PTR [rbx+0x18]
  413268:	mov    r13d,0x1
  41326e:	mov    edx,edx
  413270:	mov    rcx,QWORD PTR [rax+rdx*8]
  413274:	mov    rdx,rdi
  413277:	call   0x42a4f8
  41327c:	mov    rax,QWORD PTR [rbx]
  41327f:	mov    r8,rdi
  413282:	movzx  edx,BYTE PTR [rax+0x28]
  413286:	mov    rcx,QWORD PTR [rax+0x20]
  41328a:	call   0x40ffc0
  41328f:	mov    rcx,QWORD PTR [rbp+0x0]
  413293:	mov    rdx,rdi
  413296:	call   0x42a4f8
  41329b:	xor    edx,edx
  41329d:	mov    eax,esi
  41329f:	div    DWORD PTR [rbx+0x10]
  4132a2:	test   edx,edx
  4132a4:	je     0x413211
  4132aa:	mov    rax,QWORD PTR [rbx]
  4132ad:	mov    r8,rdi
  4132b0:	xor    r13d,r13d
  4132b3:	movzx  edx,BYTE PTR [rax+0x38]
  4132b7:	mov    rcx,QWORD PTR [rax+0x30]
  4132bb:	call   0x40ffc0
  4132c0:	jmp    0x413211
  4132c5:	movzx  edx,BYTE PTR [rip+0x46fb4]        # 0x45a280
  4132cc:	movzx  r15d,BYTE PTR [rax+0xa]
  4132d1:	movzx  r8d,WORD PTR [rax+0x6]
  4132d6:	mov    rsi,QWORD PTR [rax+0x48]
  4132da:	mov    r13d,DWORD PTR [rax+0x10]
  4132de:	test   dl,dl
  4132e0:	jne    0x4126f0
  4132e6:	cmp    BYTE PTR [rax+0xb],0x0
  4132ea:	jne    0x413f1f
  4132f0:	mov    r12,QWORD PTR [rbx+0x28]
  4132f4:	add    r13d,0x1
  4132f8:	xor    ebp,ebp
  4132fa:	lea    r14,[rip+0x2a4db]        # 0x43d7dc
  413301:	cmp    QWORD PTR [r12],0x0
  413306:	jne    0x413353
  413308:	jmp    0x413865
  41330d:	nop    DWORD PTR [rax]
  413310:	lea    rcx,[rip+0x2a5ad]        # 0x43d8c4
  413317:	mov    r9,rdi
  41331a:	mov    r8d,0x7
  413320:	mov    edx,0x1
  413325:	call   0x42a4e0
  41332a:	lea    rcx,[rip+0x2a59b]        # 0x43d8cc
  413331:	mov    r9,rdi
  413334:	mov    r8d,0xe
  41333a:	mov    edx,0x1
  41333f:	add    rbp,0x1
  413343:	call   0x42a4e0
  413348:	cmp    QWORD PTR [r12+rbp*8],0x0
  41334d:	je     0x413865
  413353:	xor    edx,edx
  413355:	mov    eax,ebp
  413357:	mov    esi,ebp
  413359:	div    DWORD PTR [rbx+0x10]
  41335c:	test   edx,edx
  41335e:	jne    0x413397
  413360:	movzx  eax,BYTE PTR [rip+0x46f19]        # 0x45a280
  413367:	test   al,al
  413369:	jne    0x413865
  41336f:	test   r15b,r15b
  413372:	jne    0x413440
  413378:	lea    eax,[r13+0x1]
  41337c:	lea    rdx,[rip+0x2a49d]        # 0x43d820
  413383:	mov    r8d,r13d
  413386:	mov    rcx,rdi
  413389:	mov    DWORD PTR [rsp+0x30],eax
  41338d:	call   0x426370
  413392:	mov    r13d,DWORD PTR [rsp+0x30]
  413397:	lea    rcx,[rip+0x2a4eb]        # 0x43d889
  41339e:	mov    r9,rdi
  4133a1:	mov    r8d,0x1c
  4133a7:	mov    edx,0x1
  4133ac:	call   0x42a4e0
  4133b1:	mov    eax,esi
  4133b3:	xor    edx,edx
  4133b5:	div    DWORD PTR [rbx+0x10]
  4133b8:	mov    rax,QWORD PTR [rbx+0x18]
  4133bc:	mov    edx,edx
  4133be:	mov    rcx,QWORD PTR [rax+rdx*8]
  4133c2:	mov    rdx,rdi
  4133c5:	call   0x40fff0
  4133ca:	lea    rcx,[rip+0x2a4d5]        # 0x43d8a6
  4133d1:	mov    r9,rdi
  4133d4:	mov    r8d,0x6
  4133da:	mov    edx,0x1
  4133df:	call   0x42a4e0
  4133e4:	mov    eax,esi
  4133e6:	xor    edx,edx
  4133e8:	lea    r8,[rip+0x2a3f3]        # 0x43d7e2
  4133ef:	div    DWORD PTR [rbx+0x10]
  4133f2:	mov    rax,QWORD PTR [rbx+0x58]
  4133f6:	mov    rcx,rdi
  4133f9:	mov    edx,edx
  4133fb:	cmp    BYTE PTR [rax+rdx*1],0x72
  4133ff:	lea    rdx,[rip+0x2a4a7]        # 0x43d8ad
  413406:	cmove  r8,r14
  41340a:	call   0x426370
  41340f:	mov    rsi,QWORD PTR [r12+rbp*8]
  413413:	lea    rdx,[rip+0x2a4a7]        # 0x43d8c1
  41341a:	mov    rcx,rsi
  41341d:	call   0x42a3e0
  413422:	cmp    BYTE PTR [rsi+rax*1],0x0
  413426:	je     0x413310
  41342c:	mov    rdx,rdi
  41342f:	mov    rcx,rsi
  413432:	call   0x40fff0
  413437:	jmp    0x41332a
  41343c:	nop    DWORD PTR [rax+0x0]
  413440:	lea    rcx,[rip+0x2a419]        # 0x43d860
  413447:	mov    r9,rdi
  41344a:	mov    r8d,0x28
  413450:	mov    edx,0x1
  413455:	call   0x42a4e0
  41345a:	jmp    0x413397
  41345f:	call   0x4102f0
  413464:	jmp    0x4126f0
  413469:	movzx  ecx,BYTE PTR [rip+0x46e10]        # 0x45a280
  413470:	movzx  r14d,BYTE PTR [rax+0xa]
  413475:	movzx  edx,WORD PTR [rax+0x6]
  413479:	mov    r15d,DWORD PTR [rax+0x10]
  41347d:	test   cl,cl
  41347f:	jne    0x4126f0
  413485:	cmp    dx,0x2
  413489:	mov    ecx,0x2
  41348e:	mov    r13d,0x2
  413494:	cmovbe ecx,edx
  413497:	cmp    BYTE PTR [rax+0xb],0x0
  41349b:	mov    WORD PTR [rsp+0x30],cx
  4134a0:	je     0x41353e
  4134a6:	test   r14b,r14b
  4134a9:	jne    0x4134f2
  4134ab:	cmp    QWORD PTR [rbx+0x8],0x0
  4134b0:	je     0x4134f2
  4134b2:	lea    rcx,[rip+0x2a5ae]        # 0x43da67
  4134b9:	mov    r9,rdi
  4134bc:	mov    r8d,0xa
  4134c2:	mov    edx,0x1
  4134c7:	call   0x42a4e0
  4134cc:	mov    rcx,QWORD PTR [rbx+0x8]
  4134d0:	mov    rdx,rdi
  4134d3:	call   0x40f8a0
  4134d8:	lea    rcx,[rip+0x2a593]        # 0x43da72
  4134df:	mov    r9,rdi
  4134e2:	mov    r8d,0x5
  4134e8:	mov    edx,0x1
  4134ed:	call   0x42a4e0
  4134f2:	lea    rcx,[rip+0x2a57f]        # 0x43da78
  4134f9:	mov    r9,rdi
  4134fc:	mov    r8d,0x8
  413502:	mov    edx,0x1
  413507:	call   0x42a4e0
  41350c:	cmp    WORD PTR [rsp+0x30],0x2
  413512:	mov    r9,rdi
  413515:	je     0x414046
  41351b:	lea    rcx,[rip+0x2a56c]        # 0x43da8e
  413522:	mov    r8d,0x8
  413528:	mov    edx,0x1
  41352d:	call   0x42a4e0
  413532:	xor    r13d,r13d
  413535:	test   r14b,r14b
  413538:	jne    0x414027
  41353e:	mov    r12,QWORD PTR [rbx+0x28]
  413542:	add    r15d,0x1
  413546:	xor    ebp,ebp
  413548:	cmp    QWORD PTR [r12],0x0
  41354d:	jne    0x413690
  413553:	jmp    0x4137f3
  413558:	nop    DWORD PTR [rax+rax*1+0x0]
  413560:	movzx  eax,BYTE PTR [rip+0x46d19]        # 0x45a280
  413567:	test   al,al
  413569:	jne    0x4137f3
  41356f:	test   r14b,r14b
  413572:	jne    0x4136d0
  413578:	cmp    r13w,0x1
  41357d:	je     0x4135cb
  41357f:	cmp    r15d,0x1
  413583:	jbe    0x4135a7
  413585:	cmp    WORD PTR [rsp+0x30],0x2
  41358b:	jne    0x4135a7
  41358d:	lea    rcx,[rip+0x2a509]        # 0x43da9d
  413594:	mov    r9,rdi
  413597:	mov    r8d,0x2
  41359d:	mov    edx,0x1
  4135a2:	call   0x42a4e0
  4135a7:	test   r13w,r13w
  4135ab:	jne    0x413dec
  4135b1:	lea    rcx,[rip+0x2a4ed]        # 0x43daa5
  4135b8:	mov    r9,rdi
  4135bb:	mov    r8d,0x5
  4135c1:	mov    edx,0x1
  4135c6:	call   0x42a4e0
  4135cb:	lea    eax,[r15+0x1]
  4135cf:	lea    rdx,[rip+0x2a4d5]        # 0x43daab
  4135d6:	mov    r8d,r15d
  4135d9:	mov    rcx,rdi
  4135dc:	mov    r13d,0x1
  4135e2:	mov    DWORD PTR [rsp+0x3c],eax
  4135e6:	call   0x426370
  4135eb:	cmp    WORD PTR [rsp+0x30],0x0
  4135f1:	jne    0x4136e1
  4135f7:	lea    rcx,[rip+0x2a4a2]        # 0x43daa0
  4135fe:	mov    r9,rdi
  413601:	mov    r8d,0x4
  413607:	mov    edx,0x1
  41360c:	call   0x42a4e0
  413611:	mov    r15d,DWORD PTR [rsp+0x3c]
  413616:	cmp    WORD PTR [rsp+0x30],0x1
  41361c:	mov    r9,rdi
  41361f:	je     0x413702
  413625:	lea    rcx,[rip+0x2a491]        # 0x43dabd
  41362c:	mov    r8d,0x5
  413632:	mov    edx,0x1
  413637:	call   0x42a4e0
  41363c:	mov    eax,esi
  41363e:	xor    edx,edx
  413640:	mov    r13d,0x2
  413646:	div    DWORD PTR [rbx+0x10]
  413649:	mov    rax,QWORD PTR [rbx+0x18]
  41364d:	mov    edx,edx
  41364f:	mov    rcx,QWORD PTR [rax+rdx*8]
  413653:	mov    rdx,rdi
  413656:	call   0x40f8a0
  41365b:	mov    rdx,rdi
  41365e:	mov    ecx,0x9
  413663:	call   0x42a500
  413668:	mov    rcx,QWORD PTR [r12+rbp*8]
  41366c:	mov    rdx,rdi
  41366f:	add    rbp,0x1
  413673:	call   0x40f8a0
  413678:	mov    rdx,rdi
  41367b:	mov    ecx,0xa
  413680:	call   0x42a500
  413685:	cmp    QWORD PTR [r12+rbp*8],0x0
  41368a:	je     0x4137f3
  413690:	xor    edx,edx
  413692:	mov    eax,ebp
  413694:	mov    esi,ebp
  413696:	div    DWORD PTR [rbx+0x10]
  413699:	test   edx,edx
  41369b:	je     0x413560
  4136a1:	test   r14b,r14b
  4136a4:	jne    0x4136c1
  4136a6:	cmp    r13w,0x2
  4136ab:	je     0x4136c1
  4136ad:	test   r13w,r13w
  4136b1:	je     0x413616
  4136b7:	mov    DWORD PTR [rsp+0x3c],r15d
  4136bc:	jmp    0x4135f7
  4136c1:	mov    eax,esi
  4136c3:	xor    edx,edx
  4136c5:	div    DWORD PTR [rbx+0x10]
  4136c8:	jmp    0x413649
  4136cd:	nop    DWORD PTR [rax]
  4136d0:	cmp    WORD PTR [rsp+0x30],0x0
  4136d6:	je     0x413649
  4136dc:	mov    DWORD PTR [rsp+0x3c],r15d
  4136e1:	lea    rcx,[rip+0x2a3b5]        # 0x43da9d
  4136e8:	mov    r9,rdi
  4136eb:	mov    r8d,0x2
  4136f1:	mov    edx,0x1
  4136f6:	call   0x42a4e0
  4136fb:	mov    r15d,DWORD PTR [rsp+0x3c]
  413700:	jmp    0x4136a1
  413702:	mov    r8d,0x7
  413708:	mov    edx,0x1
  41370d:	lea    rcx,[rip+0x2a3af]        # 0x43dac3
  413714:	jmp    0x413637
  413719:	mov    r15d,DWORD PTR [rbx+0x10]
  41371d:	test   r15d,r15d
  413720:	jne    0x412929
  413726:	lea    rcx,[rip+0x29df6]        # 0x43d523
  41372d:	mov    r9,rdi
  413730:	mov    r8d,0x2
  413736:	mov    edx,0x1
  41373b:	call   0x42a4e0
  413740:	test   r13b,r13b
  413743:	sete   al
  413746:	test   al,al
  413748:	je     0x412dc0
  41374e:	jmp    0x412b08
  413753:	lea    rcx,[rip+0x2a381]        # 0x43dadb
  41375a:	mov    r9,rdi
  41375d:	mov    r8d,0x2
  413763:	mov    edx,0x1
  413768:	call   0x42a4e0
  41376d:	test   r12b,r12b
  413770:	jne    0x413070
  413776:	mov    r9d,DWORD PTR [rbx+0x10]
  41377a:	mov    rbp,QWORD PTR [rbx+0x18]
  41377e:	test   r9d,r9d
  413781:	je     0x413056
  413787:	xor    esi,esi
  413789:	nop    DWORD PTR [rax+0x0]
  413790:	lea    rcx,[rip+0x2a34b]        # 0x43dae2
  413797:	mov    r9,rdi
  41379a:	mov    r8d,0x3
  4137a0:	mov    edx,0x1
  4137a5:	add    esi,0x1
  4137a8:	add    rbp,0x8
  4137ac:	call   0x42a4e0
  4137b1:	mov    rcx,QWORD PTR [rbp-0x8]
  4137b5:	mov    rdx,rdi
  4137b8:	call   0x40f8a0
  4137bd:	lea    rcx,[rip+0x2a322]        # 0x43dae6
  4137c4:	mov    r9,rdi
  4137c7:	mov    r8d,0x3
  4137cd:	mov    edx,0x1
  4137d2:	call   0x42a4e0
  4137d7:	cmp    esi,DWORD PTR [rbx+0x10]
  4137da:	jae    0x413056
  4137e0:	test   esi,esi
  4137e2:	je     0x413790
  4137e4:	mov    rdx,rdi
  4137e7:	mov    ecx,0x9
  4137ec:	call   0x42a500
  4137f1:	jmp    0x413790
  4137f3:	mov    rax,QWORD PTR [rbx]
  4137f6:	cmp    BYTE PTR [rax+0xc],0x0
  4137fa:	je     0x4126f0
  413800:	lea    rcx,[rip+0x2a2c4]        # 0x43dacb
  413807:	mov    r9,rdi
  41380a:	mov    r8d,0xa
  413810:	mov    edx,0x1
  413815:	call   0x42a4e0
  41381a:	mov    rbx,QWORD PTR [rbx+0x48]
  41381e:	test   rbx,rbx
  413821:	je     0x413117
  413827:	test   r14b,r14b
  41382a:	jne    0x413117
  413830:	movzx  eax,BYTE PTR [rip+0x46a49]        # 0x45a280
  413837:	test   al,al
  413839:	jne    0x413117
  41383f:	mov    rcx,QWORD PTR [rbx]
  413842:	mov    rdx,rdi
  413845:	call   0x40f8a0
  41384a:	mov    rdx,rdi
  41384d:	mov    ecx,0xa
  413852:	call   0x42a500
  413857:	mov    rbx,QWORD PTR [rbx+0x8]
  41385b:	test   rbx,rbx
  41385e:	jne    0x41383f
  413860:	jmp    0x413117
  413865:	mov    rax,QWORD PTR [rbx]
  413868:	cmp    BYTE PTR [rax+0xc],0x0
  41386c:	je     0x4126f0
  413872:	lea    rcx,[rip+0x2a062]        # 0x43d8db
  413879:	mov    r9,rdi
  41387c:	mov    r8d,0x9
  413882:	mov    edx,0x1
  413887:	call   0x42a4e0
  41388c:	test   r15b,r15b
  41388f:	jne    0x412ec0
  413895:	cmp    QWORD PTR [rbx+0x48],0x0
  41389a:	je     0x412ec0
  4138a0:	movzx  eax,BYTE PTR [rip+0x469d9]        # 0x45a280
  4138a7:	test   al,al
  4138a9:	jne    0x412ec0
  4138af:	lea    rcx,[rip+0x2a02f]        # 0x43d8e5
  4138b6:	mov    r9,rdi
  4138b9:	mov    r8d,0x3
  4138bf:	mov    edx,0x1
  4138c4:	call   0x42a4e0
  4138c9:	mov    rbx,QWORD PTR [rbx+0x48]
  4138cd:	test   rbx,rbx
  4138d0:	je     0x412f61
  4138d6:	mov    rcx,QWORD PTR [rbx]
  4138d9:	mov    rdx,rdi
  4138dc:	call   0x40fff0
  4138e1:	lea    rcx,[rip+0x29d16]        # 0x43d5fe
  4138e8:	mov    r9,rdi
  4138eb:	mov    r8d,0x7
  4138f1:	mov    edx,0x1
  4138f6:	call   0x42a4e0
  4138fb:	mov    rbx,QWORD PTR [rbx+0x8]
  4138ff:	test   rbx,rbx
  413902:	jne    0x4138d6
  413904:	jmp    0x412f61
  413909:	xor    r13d,r13d
  41390c:	mov    rax,QWORD PTR [rbx]
  41390f:	cmp    BYTE PTR [rax+0xc],0x0
  413913:	je     0x4126f0
  413919:	test   r12b,r12b
  41391c:	jne    0x413934
  41391e:	cmp    QWORD PTR [rbx+0x48],0x0
  413923:	je     0x413934
  413925:	movzx  edx,BYTE PTR [rip+0x46954]        # 0x45a280
  41392c:	test   dl,dl
  41392e:	je     0x414081
  413934:	test   r13b,r13b
  413937:	je     0x4126f0
  41393d:	mov    rax,QWORD PTR [rbx]
  413940:	movzx  edx,BYTE PTR [rax+0x38]
  413944:	test   dl,dl
  413946:	je     0x412ec0
  41394c:	mov    rcx,QWORD PTR [rax+0x30]
  413950:	mov    r8,rdi
  413953:	call   0x40ffc0
  413958:	jmp    0x4126f0
  41395d:	lea    rcx,[rip+0x29ff1]        # 0x43d955
  413964:	mov    r9,rdi
  413967:	mov    r8d,0x2
  41396d:	mov    edx,0x1
  413972:	mov    r13,rsi
  413975:	call   0x42a4e0
  41397a:	lea    rdx,[rip+0x29fd0]        # 0x43d951
  413981:	mov    rcx,rsi
  413984:	call   0x42a410
  413989:	mov    r9,rdi
  41398c:	mov    r8d,0x1
  413992:	mov    rcx,rsi
  413995:	mov    rdx,rax
  413998:	call   0x42a4e0
  41399d:	lea    rdx,[rip+0x29fad]        # 0x43d951
  4139a4:	mov    rcx,rsi
  4139a7:	call   0x42a410
  4139ac:	lea    rcx,[rip+0x29fa5]        # 0x43d958
  4139b3:	add    rax,rsi
  4139b6:	mov    r9,rdi
  4139b9:	mov    r8d,0xb
  4139bf:	mov    edx,0x1
  4139c4:	mov    QWORD PTR [rsp+0x30],rax
  4139c9:	call   0x42a4e0
  4139ce:	mov    rsi,QWORD PTR [rsp+0x30]
  4139d3:	jmp    0x412d15
  4139d8:	lea    rdx,[rip+0x29e08]        # 0x43d7e7
  4139df:	mov    rcx,rdi
  4139e2:	call   0x426370
  4139e7:	test   rsi,rsi
  4139ea:	je     0x4139fe
  4139ec:	lea    rdx,[rip+0x29e07]        # 0x43d7fa
  4139f3:	mov    r8,rsi
  4139f6:	mov    rcx,rdi
  4139f9:	call   0x426370
  4139fe:	lea    rcx,[rip+0x29df9]        # 0x43d7fe
  413a05:	mov    r9,rdi
  413a08:	mov    r8d,0x2
  413a0e:	mov    edx,0x1
  413a13:	call   0x42a4e0
  413a18:	test   r14b,r14b
  413a1b:	jne    0x412746
  413a21:	cmp    QWORD PTR [rbx+0x8],0x0
  413a26:	je     0x413a68
  413a28:	lea    rcx,[rip+0x29dd2]        # 0x43d801
  413a2f:	mov    r9,rdi
  413a32:	mov    r8d,0xb
  413a38:	mov    edx,0x1
  413a3d:	call   0x42a4e0
  413a42:	mov    rcx,QWORD PTR [rbx+0x8]
  413a46:	mov    rdx,rdi
  413a49:	call   0x40fff0
  413a4e:	lea    rcx,[rip+0x29db8]        # 0x43d80d
  413a55:	mov    r9,rdi
  413a58:	mov    r8d,0xb
  413a5e:	mov    edx,0x1
  413a63:	call   0x42a4e0
  413a68:	lea    rcx,[rip+0x2a0ac]        # 0x43db1b
  413a6f:	mov    r9,rdi
  413a72:	mov    r8d,0x7
  413a78:	mov    edx,0x1
  413a7d:	call   0x42a4e0
  413a82:	mov    rsi,QWORD PTR [rbx+0x18]
  413a86:	cmp    QWORD PTR [rsi],0x0
  413a8a:	je     0x413ada
  413a8c:	nop    DWORD PTR [rax+0x0]
  413a90:	lea    rcx,[rip+0x29e57]        # 0x43d8ee
  413a97:	mov    r9,rdi
  413a9a:	mov    r8d,0x17
  413aa0:	mov    edx,0x1
  413aa5:	add    rsi,0x8
  413aa9:	call   0x42a4e0
  413aae:	mov    rcx,QWORD PTR [rsi-0x8]
  413ab2:	mov    rdx,rdi
  413ab5:	call   0x40fff0
  413aba:	lea    rcx,[rip+0x29de5]        # 0x43d8a6
  413ac1:	mov    r9,rdi
  413ac4:	mov    r8d,0x6
  413aca:	mov    edx,0x1
  413acf:	call   0x42a4e0
  413ad4:	cmp    QWORD PTR [rsi],0x0
  413ad8:	jne    0x413a90
  413ada:	lea    rcx,[rip+0x29e25]        # 0x43d906
  413ae1:	mov    r9,rdi
  413ae4:	mov    r8d,0x8
  413aea:	mov    edx,0x1
  413aef:	call   0x42a4e0
  413af4:	jmp    0x412746
  413af9:	cmp    r12w,0x1
  413afe:	jbe    0x413e18
  413b04:	lea    rcx,[rip+0x29e23]        # 0x43d92e
  413b0b:	mov    r9,rdi
  413b0e:	mov    r8d,0x2
  413b14:	mov    edx,0x1
  413b19:	call   0x42a4e0
  413b1e:	lea    rcx,[rip+0x299fe]        # 0x43d523
  413b25:	mov    r9,rdi
  413b28:	mov    r8d,0x2
  413b2e:	mov    edx,0x1
  413b33:	call   0x42a4e0
  413b38:	test   r14b,r14b
  413b3b:	jne    0x4129cb
  413b41:	lea    rcx,[rip+0x29e1c]        # 0x43d964
  413b48:	mov    r9,rdi
  413b4b:	mov    r8d,0x9
  413b51:	mov    edx,0x1
  413b56:	call   0x42a4e0
  413b5b:	mov    esi,DWORD PTR [rbx+0x10]
  413b5e:	mov    rbp,QWORD PTR [rbx+0x18]
  413b62:	test   esi,esi
  413b64:	je     0x413be0
  413b66:	xor    esi,esi
  413b68:	nop    DWORD PTR [rax+rax*1+0x0]
  413b70:	lea    rcx,[rip+0x29df7]        # 0x43d96e
  413b77:	mov    r9,rdi
  413b7a:	mov    r8d,0x16
  413b80:	mov    edx,0x1
  413b85:	add    esi,0x1
  413b88:	add    rbp,0x8
  413b8c:	call   0x42a4e0
  413b91:	mov    rcx,QWORD PTR [rbp-0x8]
  413b95:	mov    rdx,rdi
  413b98:	call   0x40f710
  413b9d:	lea    rcx,[rip+0x29de1]        # 0x43d985
  413ba4:	mov    r9,rdi
  413ba7:	mov    r8d,0x2
  413bad:	mov    edx,0x1
  413bb2:	call   0x42a4e0
  413bb7:	cmp    esi,DWORD PTR [rbx+0x10]
  413bba:	jae    0x413eb0
  413bc0:	test   esi,esi
  413bc2:	je     0x413b70
  413bc4:	lea    rcx,[rip+0x299c1]        # 0x43d58c
  413bcb:	mov    r9,rdi
  413bce:	mov    r8d,0x3
  413bd4:	mov    edx,0x1
  413bd9:	call   0x42a4e0
  413bde:	jmp    0x413b70
  413be0:	lea    rcx,[rip+0x299a9]        # 0x43d590
  413be7:	mov    r9,rdi
  413bea:	mov    r8d,0x4
  413bf0:	mov    edx,0x1
  413bf5:	call   0x42a4e0
  413bfa:	lea    rcx,[rip+0x29d87]        # 0x43d988
  413c01:	mov    r9,rdi
  413c04:	mov    r8d,0x17
  413c0a:	mov    edx,0x1
  413c0f:	call   0x42a4e0
  413c14:	lea    rcx,[rip+0x29d49]        # 0x43d964
  413c1b:	mov    r9,rdi
  413c1e:	mov    r8d,0x9
  413c24:	mov    edx,0x1
  413c29:	call   0x42a4e0
  413c2e:	mov    r11d,DWORD PTR [rbx+0x10]
  413c32:	mov    rbp,QWORD PTR [rbx+0x18]
  413c36:	test   r11d,r11d
  413c39:	je     0x413cac
  413c3b:	xor    esi,esi
  413c3d:	nop    DWORD PTR [rax]
  413c40:	lea    rcx,[rip+0x29d27]        # 0x43d96e
  413c47:	mov    r9,rdi
  413c4a:	mov    r8d,0x16
  413c50:	mov    edx,0x1
  413c55:	add    esi,0x1
  413c58:	add    rbp,0x8
  413c5c:	call   0x42a4e0
  413c61:	mov    rcx,QWORD PTR [rbp-0x8]
  413c65:	mov    rdx,rdi
  413c68:	call   0x40f710
  413c6d:	lea    rcx,[rip+0x29d11]        # 0x43d985
  413c74:	mov    r9,rdi
  413c77:	mov    r8d,0x2
  413c7d:	mov    edx,0x1
  413c82:	call   0x42a4e0
  413c87:	cmp    esi,DWORD PTR [rbx+0x10]
  413c8a:	jae    0x413cac
  413c8c:	test   esi,esi
  413c8e:	je     0x413c40
  413c90:	lea    rcx,[rip+0x298f5]        # 0x43d58c
  413c97:	mov    r9,rdi
  413c9a:	mov    r8d,0x3
  413ca0:	mov    edx,0x1
  413ca5:	call   0x42a4e0
  413caa:	jmp    0x413c40
  413cac:	lea    rcx,[rip+0x298dd]        # 0x43d590
  413cb3:	mov    r9,rdi
  413cb6:	mov    r8d,0x4
  413cbc:	mov    edx,0x1
  413cc1:	call   0x42a4e0
  413cc6:	cmp    r12w,0x3
  413ccb:	je     0x413fc9
  413cd1:	lea    rcx,[rip+0x29cc8]        # 0x43d9a0
  413cd8:	mov    r9,rdi
  413cdb:	mov    r8d,0x9
  413ce1:	mov    edx,0x1
  413ce6:	call   0x42a4e0
  413ceb:	lea    rcx,[rip+0x29cb8]        # 0x43d9aa
  413cf2:	mov    r9,rdi
  413cf5:	mov    r8d,0x9
  413cfb:	mov    edx,0x1
  413d00:	call   0x42a4e0
  413d05:	cmp    QWORD PTR [rbx+0x8],0x0
  413d0a:	je     0x4140ca
  413d10:	cmp    r12w,0x2
  413d15:	je     0x4140da
  413d1b:	lea    rcx,[rip+0x29c9f]        # 0x43d9c1
  413d22:	mov    r9,rdi
  413d25:	mov    r8d,0x9
  413d2b:	mov    edx,0x1
  413d30:	call   0x42a4e0
  413d35:	mov    rcx,QWORD PTR [rbx+0x8]
  413d39:	mov    rdx,rdi
  413d3c:	call   0x40f710
  413d41:	lea    rcx,[rip+0x29c83]        # 0x43d9cb
  413d48:	mov    r9,rdi
  413d4b:	mov    r8d,0xe
  413d51:	mov    edx,0x1
  413d56:	call   0x42a4e0
  413d5b:	mov    rcx,QWORD PTR [rbx+0x8]
  413d5f:	mov    rdx,rdi
  413d62:	call   0x40f710
  413d67:	lea    rcx,[rip+0x29c6c]        # 0x43d9da
  413d6e:	mov    r9,rdi
  413d71:	mov    r8d,0xb
  413d77:	mov    edx,0x1
  413d7c:	call   0x42a4e0
  413d81:	lea    rcx,[rip+0x29c39]        # 0x43d9c1
  413d88:	mov    r9,rdi
  413d8b:	mov    r8d,0x9
  413d91:	mov    edx,0x1
  413d96:	call   0x42a4e0
  413d9b:	mov    rcx,QWORD PTR [rbx+0x8]
  413d9f:	mov    rdx,rdi
  413da2:	call   0x40f710
  413da7:	lea    rcx,[rip+0x29c38]        # 0x43d9e6
  413dae:	mov    r9,rdi
  413db1:	mov    r8d,0x2
  413db7:	mov    edx,0x1
  413dbc:	call   0x42a4e0
  413dc1:	mov    rcx,QWORD PTR [rbx+0x8]
  413dc5:	mov    rdx,rdi
  413dc8:	call   0x40f710
  413dcd:	lea    rcx,[rip+0x29c15]        # 0x43d9e9
  413dd4:	mov    r9,rdi
  413dd7:	mov    r8d,0xf
  413ddd:	mov    edx,0x1
  413de2:	call   0x42a4e0
  413de7:	jmp    0x4129cb
  413dec:	lea    rcx,[rip+0x29cad]        # 0x43daa0
  413df3:	mov    r9,rdi
  413df6:	mov    r8d,0x4
  413dfc:	mov    edx,0x1
  413e01:	call   0x42a4e0
  413e06:	jmp    0x4135b1
  413e0b:	mov    r8d,DWORD PTR [rbx+0x10]
  413e0f:	test   r8d,r8d
  413e12:	jne    0x412c59
  413e18:	lea    rcx,[rip+0x29704]        # 0x43d523
  413e1f:	mov    r9,rdi
  413e22:	mov    r8d,0x2
  413e28:	mov    edx,0x1
  413e2d:	call   0x42a4e0
  413e32:	test   r14b,r14b
  413e35:	jne    0x4129cb
  413e3b:	mov    ecx,DWORD PTR [rbx+0x10]
  413e3e:	mov    rbp,QWORD PTR [rbx+0x18]
  413e42:	test   ecx,ecx
  413e44:	jne    0x413b66
  413e4a:	lea    rcx,[rip+0x2973f]        # 0x43d590
  413e51:	mov    r9,rdi
  413e54:	mov    r8d,0x4
  413e5a:	mov    edx,0x1
  413e5f:	call   0x42a4e0
  413e64:	lea    rcx,[rip+0x29b1d]        # 0x43d988
  413e6b:	mov    r9,rdi
  413e6e:	mov    r8d,0x17
  413e74:	mov    edx,0x1
  413e79:	call   0x42a4e0
  413e7e:	mov    eax,DWORD PTR [rbx+0x10]
  413e81:	mov    rbp,QWORD PTR [rbx+0x18]
  413e85:	test   eax,eax
  413e87:	jne    0x413c3b
  413e8d:	lea    rcx,[rip+0x296fc]        # 0x43d590
  413e94:	mov    r9,rdi
  413e97:	mov    r8d,0x4
  413e9d:	mov    edx,0x1
  413ea2:	call   0x42a4e0
  413ea7:	jmp    0x413cd1
  413eac:	nop    DWORD PTR [rax+0x0]
  413eb0:	lea    rcx,[rip+0x296d9]        # 0x43d590
  413eb7:	mov    r9,rdi
  413eba:	mov    r8d,0x4
  413ec0:	mov    edx,0x1
  413ec5:	call   0x42a4e0
  413eca:	lea    rcx,[rip+0x29ab7]        # 0x43d988
  413ed1:	mov    r9,rdi
  413ed4:	mov    r8d,0x17
  413eda:	mov    edx,0x1
  413edf:	call   0x42a4e0
  413ee4:	cmp    r12w,0x1
  413ee9:	ja     0x413c14
  413eef:	jmp    0x413e7e
  413ef1:	lea    rcx,[rip+0x29b89]        # 0x43da81
  413ef8:	mov    r8d,0xc
  413efe:	mov    edx,0x1
  413f03:	call   0x42a4e0
  413f08:	jmp    0x4125d0
  413f0d:	mov    rdx,rdi
  413f10:	mov    ecx,0x6c
  413f15:	call   0x42a500
  413f1a:	jmp    0x412d15
  413f1f:	lea    rdx,[rip+0x298c1]        # 0x43d7e7
  413f26:	mov    rcx,rdi
  413f29:	call   0x426370
  413f2e:	test   rsi,rsi
  413f31:	je     0x413f45
  413f33:	lea    rdx,[rip+0x298c0]        # 0x43d7fa
  413f3a:	mov    r8,rsi
  413f3d:	mov    rcx,rdi
  413f40:	call   0x426370
  413f45:	lea    rcx,[rip+0x298b2]        # 0x43d7fe
  413f4c:	mov    r9,rdi
  413f4f:	mov    r8d,0x2
  413f55:	mov    edx,0x1
  413f5a:	call   0x42a4e0
  413f5f:	test   r15b,r15b
  413f62:	jne    0x4132f0
  413f68:	cmp    QWORD PTR [rbx+0x8],0x0
  413f6d:	je     0x4132f0
  413f73:	lea    rcx,[rip+0x29887]        # 0x43d801
  413f7a:	mov    r9,rdi
  413f7d:	mov    r8d,0xb
  413f83:	mov    edx,0x1
  413f88:	call   0x42a4e0
  413f8d:	mov    rcx,QWORD PTR [rbx+0x8]
  413f91:	mov    rdx,rdi
  413f94:	call   0x40fff0
  413f99:	lea    rcx,[rip+0x2986d]        # 0x43d80d
  413fa0:	mov    r9,rdi
  413fa3:	mov    r8d,0xb
  413fa9:	mov    edx,0x1
  413fae:	call   0x42a4e0
  413fb3:	jmp    0x4132f0
  413fb8:	mov    rcx,QWORD PTR [rax+0x30]
  413fbc:	mov    r8,rbp
  413fbf:	call   0x40ffc0
  413fc4:	jmp    0x4126f0
  413fc9:	lea    rcx,[rip+0x299da]        # 0x43d9aa
  413fd0:	mov    r9,rdi
  413fd3:	mov    r8d,0x9
  413fd9:	mov    edx,0x1
  413fde:	call   0x42a4e0
  413fe3:	cmp    QWORD PTR [rbx+0x8],0x0
  413fe8:	jne    0x413d1b
  413fee:	lea    rcx,[rip+0x29a04]        # 0x43d9f9
  413ff5:	mov    r9,rdi
  413ff8:	mov    r8d,0x15
  413ffe:	mov    edx,0x1
  414003:	call   0x42a4e0
  414008:	lea    rcx,[rip+0x29a00]        # 0x43da0f
  41400f:	mov    r9,rdi
  414012:	mov    r8d,0x19
  414018:	mov    edx,0x1
  41401d:	call   0x42a4e0
  414022:	jmp    0x4129cb
  414027:	lea    rcx,[rip+0x29a69]        # 0x43da97
  41402e:	mov    r9,rdi
  414031:	mov    r8d,0x5
  414037:	mov    edx,0x1
  41403c:	call   0x42a4e0
  414041:	jmp    0x41353e
  414046:	lea    rcx,[rip+0x29a34]        # 0x43da81
  41404d:	mov    r8d,0xc
  414053:	mov    edx,0x1
  414058:	call   0x42a4e0
  41405d:	jmp    0x413532
  414062:	lea    rcx,[rip+0x294bd]        # 0x43d526
  414069:	mov    r9,rdi
  41406c:	mov    r8d,0x7
  414072:	mov    edx,0x1
  414077:	call   0x42a4e0
  41407c:	jmp    0x412e63
  414081:	movzx  edx,BYTE PTR [rax+0x38]
  414085:	mov    rcx,QWORD PTR [rax+0x30]
  414089:	mov    r8,rdi
  41408c:	call   0x40ffc0
  414091:	mov    rsi,QWORD PTR [rbx+0x48]
  414095:	test   rsi,rsi
  414098:	je     0x413934
  41409e:	mov    rax,QWORD PTR [rbx]
  4140a1:	mov    r8,rdi
  4140a4:	movzx  edx,BYTE PTR [rax+0x38]
  4140a8:	mov    rcx,QWORD PTR [rax+0x30]
  4140ac:	call   0x40ffc0
  4140b1:	mov    rcx,QWORD PTR [rsi]
  4140b4:	mov    rdx,rdi
  4140b7:	call   0x42a4f8
  4140bc:	mov    rsi,QWORD PTR [rsi+0x8]
  4140c0:	test   rsi,rsi
  4140c3:	jne    0x41409e
  4140c5:	jmp    0x413934
  4140ca:	cmp    r12w,0x2
  4140cf:	jne    0x4129cb
  4140d5:	jmp    0x413fee
  4140da:	lea    rcx,[rip+0x298d3]        # 0x43d9b4
  4140e1:	mov    r9,rdi
  4140e4:	mov    r8d,0xc
  4140ea:	mov    edx,0x1
  4140ef:	call   0x42a4e0
  4140f4:	lea    rcx,[rip+0x298c6]        # 0x43d9c1
  4140fb:	mov    r9,rdi
  4140fe:	mov    r8d,0x9
  414104:	mov    edx,0x1
  414109:	call   0x42a4e0
  41410e:	mov    rcx,QWORD PTR [rbx+0x8]
  414112:	mov    rdx,rdi
  414115:	call   0x40f710
  41411a:	lea    rcx,[rip+0x298aa]        # 0x43d9cb
  414121:	mov    r9,rdi
  414124:	mov    r8d,0xe
  41412a:	mov    edx,0x1
  41412f:	call   0x42a4e0
  414134:	mov    rcx,QWORD PTR [rbx+0x8]
  414138:	mov    rdx,rdi
  41413b:	call   0x40f710
  414140:	lea    rcx,[rip+0x29893]        # 0x43d9da
  414147:	mov    r9,rdi
  41414a:	mov    r8d,0xb
  414150:	mov    edx,0x1
  414155:	call   0x42a4e0
  41415a:	lea    rcx,[rip+0x29853]        # 0x43d9b4
  414161:	mov    r9,rdi
  414164:	mov    r8d,0xc
  41416a:	mov    edx,0x1
  41416f:	call   0x42a4e0
  414174:	jmp    0x413d81
  414179:	lea    rcx,[rip+0x297be]        # 0x43d93e
  414180:	mov    r9,rdi
  414183:	mov    r8d,0x12
  414189:	mov    edx,0x1
  41418e:	mov    r12d,0x3
  414194:	call   0x42a4e0
  414199:	jmp    0x412c34
  41419e:	xchg   ax,ax
  4141a0:	push   r15
  4141a2:	push   r14
  4141a4:	push   r13
  4141a6:	push   r12
  4141a8:	push   rbp
  4141a9:	push   rdi
  4141aa:	push   rsi
  4141ab:	push   rbx
  4141ac:	sub    rsp,0xe8
  4141b3:	movzx  eax,BYTE PTR [rip+0x460c6]        # 0x45a280
  4141ba:	test   al,al
  4141bc:	je     0x4141d2
  4141be:	add    rsp,0xe8
  4141c5:	pop    rbx
  4141c6:	pop    rsi
  4141c7:	pop    rdi
  4141c8:	pop    rbp
  4141c9:	pop    r12
  4141cb:	pop    r13
  4141cd:	pop    r14
  4141cf:	pop    r15
  4141d1:	ret    
  4141d2:	mov    rbp,rcx
  4141d5:	mov    rsi,rdx
  4141d8:	mov    QWORD PTR [rsp+0x68],r9
  4141dd:	mov    QWORD PTR [rsp+0x60],r8
  4141e2:	lea    r12,[rsp+0x70]
  4141e7:	call   0x427e70
  4141ec:	mov    rcx,rbp
  4141ef:	mov    ebx,eax
  4141f1:	call   0x427e80
  4141f6:	mov    DWORD PTR [rsp+0x20],ebx
  4141fa:	mov    r8,QWORD PTR [rsi+0x70]
  4141fe:	mov    rcx,r12
  414201:	mov    r9d,eax
  414204:	mov    rdx,rsi
  414207:	xor    ebx,ebx
  414209:	call   0x412100
  41420e:	mov    ecx,DWORD PTR [rsp+0x80]
  414215:	test   ecx,ecx
  414217:	jg     0x414268
  414219:	jmp    0x4142bd
  41421e:	xchg   ax,ax
  414220:	cmp    eax,0x1c
  414223:	jae    0x414290
  414225:	cmp    eax,0x17
  414228:	je     0x414290
  41422a:	ja     0x4142a0
  41422c:	sub    eax,0x14
  41422f:	cmp    eax,0x1
  414232:	jbe    0x414290
  414234:	mov    r13d,0x6c
  41423a:	movsx  edi,BYTE PTR [rsi+0x80]
  414241:	mov    edx,ebx
  414243:	mov    rcx,rbp
  414246:	call   0x427ee0
  41424b:	mov    r9d,r13d
  41424e:	mov    rdx,rax
  414251:	mov    rcx,r12
  414254:	add    ebx,0x1
  414257:	mov    r8d,edi
  41425a:	call   0x4121a0
  41425f:	cmp    DWORD PTR [rsp+0x80],ebx
  414266:	jle    0x4142bd
  414268:	mov    edx,ebx
  41426a:	mov    rcx,rbp
  41426d:	call   0x427ec8
  414272:	cmp    eax,0x1d
  414275:	jbe    0x414220
  414277:	cmp    eax,0x316
  41427c:	je     0x414290
  41427e:	ja     0x4142b0
  414280:	sub    eax,0x2bc
  414285:	cmp    eax,0x1
  414288:	ja     0x414234
  41428a:	nop    WORD PTR [rax+rax*1+0x0]
  414290:	mov    r13d,0x72
  414296:	jmp    0x41423a
  414298:	nop    DWORD PTR [rax+rax*1+0x0]
  4142a0:	cmp    eax,0x1a
  4142a3:	jne    0x414234
  4142a5:	jmp    0x414290
  4142a7:	nop    WORD PTR [rax+rax*1+0x0]
  4142b0:	cmp    eax,0x6a4
  4142b5:	jne    0x414234
  4142bb:	jmp    0x414290
  4142bd:	mov    edx,DWORD PTR [rsp+0x84]
  4142c4:	xor    edi,edi
  4142c6:	test   edx,edx
  4142c8:	jle    0x414530
  4142ce:	xchg   ax,ax
  4142d0:	mov    eax,DWORD PTR [rsp+0x80]
  4142d7:	xor    ebx,ebx
  4142d9:	test   eax,eax
  4142db:	jg     0x41432b
  4142dd:	jmp    0x414520
  4142e2:	mov    r15,QWORD PTR [rsi+0x60]
  4142e6:	xor    r9d,r9d
  4142e9:	test   r15,r15
  4142ec:	je     0x414510
  4142f2:	mov    rax,QWORD PTR [rsi+0x88]
  4142f9:	test   rax,rax
  4142fc:	je     0x414500
  414302:	movsxd rdx,ebx
  414305:	xor    r8d,r8d
  414308:	cmp    BYTE PTR [rax+rdx*1],0x0
  41430c:	setne  r8b
  414310:	mov    rdx,r15
  414313:	mov    rcx,r12
  414316:	add    ebx,0x1
  414319:	call   0x412220
  41431e:	cmp    DWORD PTR [rsp+0x80],ebx
  414325:	jle    0x414520
  41432b:	mov    r8d,ebx
  41432e:	mov    edx,edi
  414330:	mov    rcx,rbp
  414333:	call   0x427ea8
  414338:	test   eax,eax
  41433a:	jne    0x4142e2
  41433c:	mov    edx,edi
  41433e:	mov    r8d,ebx
  414341:	mov    rcx,rbp
  414344:	mov    DWORD PTR [rsp+0x30],eax
  414348:	call   0x427e98
  41434d:	mov    rdx,QWORD PTR [rsp+0xc8]
  414355:	mov    r15,rax
  414358:	movsxd rax,ebx
  41435b:	mov    r9d,DWORD PTR [rsp+0x30]
  414360:	cmp    BYTE PTR [rdx+rax*1],0x72
  414364:	jne    0x4142f2
  414366:	cmp    BYTE PTR [rsi+0x40],0x0
  41436a:	je     0x4142f2
  41436c:	mov    rcx,r15
  41436f:	xor    r14d,r14d
  414372:	call   0x40ff70
  414377:	mov    rcx,QWORD PTR [rip+0x45fb2]        # 0x45a330
  41437e:	mov    DWORD PTR [rsp+0x38],eax
  414382:	call   0x42a558
  414387:	mov    rcx,r15
  41438a:	mov    DWORD PTR [rsp+0x30],eax
  41438e:	call   0x42a400
  414393:	mov    rcx,r15
  414396:	mov    QWORD PTR [rsp+0x40],rax
  41439b:	call   0x40ff70
  4143a0:	mov    rcx,QWORD PTR [rip+0x45f89]        # 0x45a330
  4143a7:	mov    r13d,eax
  4143aa:	call   0x42a558
  4143af:	test   r13d,r13d
  4143b2:	mov    DWORD PTR [rsp+0x48],eax
  4143b6:	jle    0x4143e7
  4143b8:	mov    rcx,QWORD PTR [rip+0x45f69]        # 0x45a328
  4143bf:	call   0x42a400
  4143c4:	mov    r9d,DWORD PTR [rsp+0x48]
  4143c9:	mov    r8,rax
  4143cc:	mov    eax,r13d
  4143cf:	cdq    
  4143d0:	idiv   r9d
  4143d3:	mov    r13d,eax
  4143d6:	xor    eax,eax
  4143d8:	test   edx,edx
  4143da:	sete   al
  4143dd:	sub    r13d,eax
  4143e0:	mov    r14d,r13d
  4143e3:	imul   r14d,r8d
  4143e7:	mov    edx,0x2e
  4143ec:	mov    rcx,r15
  4143ef:	call   0x42a428
  4143f4:	test   rax,rax
  4143f7:	je     0x41440a
  4143f9:	mov    rcx,QWORD PTR [rip+0x45f38]        # 0x45a338
  414400:	call   0x42a400
  414405:	lea    r14d,[r14+rax*1-0x1]
  41440a:	mov    rax,QWORD PTR [rsp+0x40]
  41440f:	lea    ecx,[r14+rax*1+0x1]
  414414:	movsxd rcx,ecx
  414417:	call   0x424800
  41441c:	mov    r10,rax
  41441f:	mov    eax,DWORD PTR [rsp+0x38]
  414423:	mov    ecx,DWORD PTR [rsp+0x30]
  414427:	cdq    
  414428:	idiv   ecx
  41442a:	movzx  eax,BYTE PTR [r15]
  41442e:	test   edx,edx
  414430:	cmove  edx,ecx
  414433:	cmp    al,0x2d
  414435:	je     0x414621
  41443b:	mov    ecx,eax
  41443d:	xor    r14d,r14d
  414440:	xor    eax,eax
  414442:	cmp    cl,0x2e
  414445:	je     0x41463d
  41444b:	test   cl,cl
  41444d:	je     0x414591
  414453:	mov    r11d,0x1
  414459:	mov    DWORD PTR [rsp+0x38],ebx
  41445d:	mov    DWORD PTR [rsp+0x40],edi
  414461:	sub    r11d,edx
  414464:	mov    QWORD PTR [rsp+0x50],rbp
  414469:	mov    QWORD PTR [rsp+0x58],rsi
  41446e:	xor    r13d,r13d
  414471:	mov    rbx,r15
  414474:	mov    rdi,r10
  414477:	mov    r8d,ecx
  41447a:	mov    QWORD PTR [rsp+0x48],r12
  41447f:	mov    ebp,r11d
  414482:	mov    esi,DWORD PTR [rsp+0x30]
  414486:	jmp    0x414494
  414488:	nop    DWORD PTR [rax+rax*1+0x0]
  414490:	add    r13,0x1
  414494:	lea    edx,[r13+0x1]
  414498:	movsxd rax,r14d
  41449b:	add    r14d,0x1
  41449f:	mov    BYTE PTR [rdi+rax*1],r8b
  4144a3:	mov    eax,r13d
  4144a6:	movsxd rcx,edx
  4144a9:	lea    r15,[rbx+rcx*1]
  4144ad:	movzx  r8d,BYTE PTR [r15]
  4144b1:	cmp    r8b,0x2e
  4144b5:	je     0x4145a4
  4144bb:	test   r8b,r8b
  4144be:	je     0x414574
  4144c4:	test   edx,edx
  4144c6:	je     0x414490
  4144c8:	add    eax,ebp
  4144ca:	cdq    
  4144cb:	idiv   esi
  4144cd:	test   edx,edx
  4144cf:	jne    0x414490
  4144d1:	mov    r12,QWORD PTR [rip+0x45e50]        # 0x45a328
  4144d8:	movsxd rcx,r14d
  4144db:	add    rcx,rdi
  4144de:	mov    rdx,r12
  4144e1:	call   0x42a418
  4144e6:	mov    rcx,r12
  4144e9:	call   0x42a400
  4144ee:	movzx  r8d,BYTE PTR [r15]
  4144f2:	add    r14d,eax
  4144f5:	jmp    0x414490
  4144f7:	nop    WORD PTR [rax+rax*1+0x0]
  414500:	xor    r8d,r8d
  414503:	jmp    0x414310
  414508:	nop    DWORD PTR [rax+rax*1+0x0]
  414510:	lea    r15,[rip+0x29205]        # 0x43d71c
  414517:	jmp    0x4142f2
  41451c:	nop    DWORD PTR [rax+0x0]
  414520:	add    edi,0x1
  414523:	cmp    DWORD PTR [rsp+0x84],edi
  41452a:	jg     0x4142d0
  414530:	mov    rbx,QWORD PTR [rsi+0x78]
  414534:	test   rbx,rbx
  414537:	je     0x414555
  414539:	mov    rdx,QWORD PTR [rbx]
  41453c:	test   rdx,rdx
  41453f:	je     0x414555
  414541:	add    rbx,0x8
  414545:	mov    rcx,r12
  414548:	call   0x4122c0
  41454d:	mov    rdx,QWORD PTR [rbx]
  414550:	test   rdx,rdx
  414553:	jne    0x414541
  414555:	mov    r8,QWORD PTR [rsp+0x68]
  41455a:	mov    rdx,QWORD PTR [rsp+0x60]
  41455f:	mov    rcx,r12
  414562:	call   0x412460
  414567:	mov    rcx,r12
  41456a:	call   0x412350
  41456f:	jmp    0x4141be
  414574:	mov    r10,rdi
  414577:	mov    ebx,DWORD PTR [rsp+0x38]
  41457b:	mov    edi,DWORD PTR [rsp+0x40]
  41457f:	mov    r12,QWORD PTR [rsp+0x48]
  414584:	mov    rbp,QWORD PTR [rsp+0x50]
  414589:	movsxd rax,r14d
  41458c:	mov    rsi,QWORD PTR [rsp+0x58]
  414591:	mov    BYTE PTR [r10+rax*1],0x0
  414596:	mov    r15,r10
  414599:	mov    r9d,0x1
  41459f:	jmp    0x4142f2
  4145a4:	lea    rax,[rcx+0x1]
  4145a8:	mov    r15,rbx
  4145ab:	mov    r10,rdi
  4145ae:	mov    ebx,DWORD PTR [rsp+0x38]
  4145b2:	mov    edi,DWORD PTR [rsp+0x40]
  4145b6:	mov    r12,QWORD PTR [rsp+0x48]
  4145bb:	mov    rbp,QWORD PTR [rsp+0x50]
  4145c0:	mov    rsi,QWORD PTR [rsp+0x58]
  4145c5:	mov    QWORD PTR [rsp+0x30],rax
  4145ca:	movsxd rax,r14d
  4145cd:	mov    r13,QWORD PTR [rip+0x45d64]        # 0x45a338
  4145d4:	lea    rcx,[r10+rax*1]
  4145d8:	mov    QWORD PTR [rsp+0x38],r10
  4145dd:	mov    rdx,r13
  4145e0:	call   0x42a418
  4145e5:	mov    rcx,r13
  4145e8:	call   0x42a400
  4145ed:	mov    r10,QWORD PTR [rsp+0x38]
  4145f2:	mov    rdx,QWORD PTR [rsp+0x30]
  4145f7:	lea    ecx,[r14+rax*1]
  4145fb:	movsxd rcx,ecx
  4145fe:	add    rdx,r15
  414601:	add    rcx,r10
  414604:	mov    QWORD PTR [rsp+0x30],r10
  414609:	call   0x42a418
  41460e:	mov    r10,QWORD PTR [rsp+0x30]
  414613:	mov    r9d,0x1
  414619:	mov    r15,r10
  41461c:	jmp    0x4142f2
  414621:	mov    BYTE PTR [r10],0x2d
  414625:	add    r15,0x1
  414629:	movzx  ecx,BYTE PTR [r15]
  41462d:	mov    eax,0x1
  414632:	mov    r14d,0x1
  414638:	jmp    0x414442
  41463d:	mov    QWORD PTR [rsp+0x30],0x1
  414646:	jmp    0x4145cd
  414648:	nop    DWORD PTR [rax+rax*1+0x0]
  414650:	push   rdi
  414651:	push   rsi
  414652:	push   rbx
  414653:	sub    rsp,0x20
  414657:	call   QWORD PTR [rip+0x486bf]        # 0x45cd1c
  41465d:	mov    rcx,QWORD PTR [rax]
  414660:	mov    rbx,rax
  414663:	cmp    BYTE PTR [rcx],0x0
  414666:	jne    0x4146d0
  414668:	mov    rcx,QWORD PTR [rbx+0x10]
  41466c:	lea    rax,[rip+0x294d1]        # 0x43db44
  414673:	mov    QWORD PTR [rip+0x45cbe],rax        # 0x45a338
  41467a:	cmp    BYTE PTR [rcx],0x0
  41467d:	jne    0x4146e5
  41467f:	mov    rcx,QWORD PTR [rbx+0x8]
  414683:	lea    rax,[rip+0x294bc]        # 0x43db46
  41468a:	mov    QWORD PTR [rip+0x45c9f],rax        # 0x45a330
  414691:	cmp    BYTE PTR [rcx],0x0
  414694:	jne    0x414710
  414696:	lea    rdx,[rip+0x294ab]        # 0x43db48
  41469d:	mov    rsi,QWORD PTR [rip+0x45c94]        # 0x45a338
  4146a4:	mov    ecx,0x2
  4146a9:	lea    rax,[rip+0x29494]        # 0x43db44
  4146b0:	mov    rdi,rdx
  4146b3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4146b5:	cmove  rdx,rax
  4146b9:	mov    QWORD PTR [rip+0x45c68],rdx        # 0x45a328
  4146c0:	add    rsp,0x20
  4146c4:	pop    rbx
  4146c5:	pop    rsi
  4146c6:	pop    rdi
  4146c7:	ret    
  4146c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4146d0:	call   0x424900
  4146d5:	mov    rcx,QWORD PTR [rbx+0x10]
  4146d9:	mov    QWORD PTR [rip+0x45c58],rax        # 0x45a338
  4146e0:	cmp    BYTE PTR [rcx],0x0
  4146e3:	je     0x41467f
  4146e5:	call   0x42a558
  4146ea:	test   eax,eax
  4146ec:	jle    0x41467f
  4146ee:	mov    rcx,QWORD PTR [rbx+0x10]
  4146f2:	call   0x424900
  4146f7:	mov    rcx,QWORD PTR [rbx+0x8]
  4146fb:	mov    QWORD PTR [rip+0x45c2e],rax        # 0x45a330
  414702:	cmp    BYTE PTR [rcx],0x0
  414705:	je     0x414696
  414707:	nop    WORD PTR [rax+rax*1+0x0]
  414710:	call   0x424900
  414715:	mov    QWORD PTR [rip+0x45c0c],rax        # 0x45a328
  41471c:	add    rsp,0x20
  414720:	pop    rbx
  414721:	pop    rsi
  414722:	pop    rdi
  414723:	ret    
  414724:	xchg   ax,ax
  414726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414730:	mov    rax,QWORD PTR [rcx+0x18]
  414734:	lea    rdx,[rip+0x29685]        # 0x43ddc0
  41473b:	test   rax,rax
  41473e:	cmove  rax,rdx
  414742:	ret    
  414743:	nop
  414744:	nop
  414745:	nop
  414746:	nop
  414747:	nop
  414748:	nop
  414749:	nop
  41474a:	nop
  41474b:	nop
  41474c:	nop
  41474d:	nop
  41474e:	nop
  41474f:	nop
  414750:	push   rsi
  414751:	push   rbx
  414752:	sub    rsp,0x28
  414756:	cmp    QWORD PTR [rcx+0x8],0x0
  41475b:	mov    rbx,rcx
  41475e:	mov    rsi,rdx
  414761:	je     0x41476f
  414763:	lea    rdx,[rip+0x29756]        # 0x43dec0
  41476a:	call   0x427dc8
  41476f:	mov    rdx,rsi
  414772:	mov    rcx,rbx
  414775:	add    rsp,0x28
  414779:	pop    rbx
  41477a:	pop    rsi
  41477b:	jmp    0x427dc8
  414780:	push   r14
  414782:	push   r13
  414784:	push   r12
  414786:	push   rbp
  414787:	push   rdi
  414788:	push   rsi
  414789:	push   rbx
  41478a:	sub    rsp,0x4e0
  414791:	mov    r12,QWORD PTR [rip+0x40148]        # 0x4548e0
  414798:	lea    rbx,[rsp+0x20]
  41479d:	lea    rbp,[rsp+0x40]
  4147a2:	mov    r13,rcx
  4147a5:	mov    ecx,0x13
  4147aa:	mov    r14,rdx
  4147ad:	lea    rsi,[r12+0x28]
  4147b2:	mov    rdi,rbp
  4147b5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4147b8:	mov    rcx,rbx
  4147bb:	call   0x427da8
  4147c0:	lea    r8,[rip+0x296fc]        # 0x43dec3
  4147c7:	lea    rdx,[rip+0x2970a]        # 0x43ded8
  4147ce:	mov    r9,r14
  4147d1:	mov    rcx,rbx
  4147d4:	call   0x427d70
  4147d9:	mov    rcx,QWORD PTR [rsp+0x20]
  4147de:	xor    edx,edx
  4147e0:	call   0x4062b0
  4147e5:	mov    rcx,rbx
  4147e8:	mov    rsi,rax
  4147eb:	call   0x427d60
  4147f0:	xor    eax,eax
  4147f2:	test   rsi,rsi
  4147f5:	je     0x414857
  4147f7:	lea    rbx,[rsp+0xe0]
  4147ff:	lea    r8,[rip+0x297a0]        # 0x43dfa6
  414806:	mov    r9,r13
  414809:	mov    edx,0x400
  41480e:	mov    QWORD PTR [rsp+0xa0],0x0
  41481a:	mov    rcx,rbx
  41481d:	call   0x426220
  414822:	mov    r9,QWORD PTR [r12+0x108]
  41482a:	mov    r8,QWORD PTR [r12+0x10]
  41482f:	mov    rdx,rbp
  414832:	mov    rcx,rsi
  414835:	mov    QWORD PTR [rsp+0xb0],rbx
  41483d:	mov    BYTE PTR [rsp+0xc0],0x1
  414845:	call   0x4141a0
  41484a:	mov    rcx,rsi
  41484d:	call   0x427f68
  414852:	mov    eax,0x1
  414857:	add    rsp,0x4e0
  41485e:	pop    rbx
  41485f:	pop    rsi
  414860:	pop    rdi
  414861:	pop    rbp
  414862:	pop    r12
  414864:	pop    r13
  414866:	pop    r14
  414868:	ret    
  414869:	nop    DWORD PTR [rax+0x0]
  414870:	mov    rax,QWORD PTR [rip+0x40069]        # 0x4548e0
  414877:	lea    r9,[rip+0x29742]        # 0x43dfc0
  41487e:	mov    r8,rdx
  414881:	cmp    DWORD PTR [rax+0xe4],0x138e3
  41488b:	jg     0x4148a0
  41488d:	lea    rdx,[rip+0x29774]        # 0x43e008
  414894:	jmp    0x427dd8
  414899:	nop    DWORD PTR [rax+0x0]
  4148a0:	lea    rdx,[rip+0x29731]        # 0x43dfd8
  4148a7:	jmp    0x427dd8
  4148ac:	nop    DWORD PTR [rax+0x0]
  4148b0:	push   rdi
  4148b1:	push   rsi
  4148b2:	push   rbx
  4148b3:	sub    rsp,0x50
  4148b7:	mov    eax,edx
  4148b9:	mov    rbx,rcx
  4148bc:	and    eax,0xfffffffb
  4148bf:	cmp    al,0x69
  4148c1:	je     0x4148d0
  4148c3:	cmp    dl,0x72
  4148c6:	je     0x4148d0
  4148c8:	add    rsp,0x50
  4148cc:	pop    rbx
  4148cd:	pop    rsi
  4148ce:	pop    rdi
  4148cf:	ret    
  4148d0:	test   r8d,r8d
  4148d3:	je     0x4148c8
  4148d5:	lea    rsi,[rsp+0x30]
  4148da:	mov    DWORD PTR [rsp+0x2c],r9d
  4148df:	mov    DWORD PTR [rsp+0x28],r8d
  4148e4:	mov    rcx,rsi
  4148e7:	call   0x427da8
  4148ec:	mov    r8d,DWORD PTR [rsp+0x28]
  4148f1:	lea    rdx,[rip+0x29740]        # 0x43e038
  4148f8:	mov    rcx,rsi
  4148fb:	call   0x427d70
  414900:	mov    rcx,QWORD PTR [rsp+0x30]
  414905:	xor    edx,edx
  414907:	call   0x4062b0
  41490c:	test   rax,rax
  41490f:	mov    rdi,rax
  414912:	je     0x4148c8
  414914:	mov    rcx,rax
  414917:	call   0x427e70
  41491c:	test   eax,eax
  41491e:	jle    0x414956
  414920:	mov    r9d,DWORD PTR [rsp+0x2c]
  414925:	test   r9b,r9b
  414928:	je     0x414970
  41492a:	xor    r8d,r8d
  41492d:	xor    edx,edx
  41492f:	mov    rcx,rdi
  414932:	call   0x427e98
  414937:	lea    rdx,[rip+0x29739]        # 0x43e077
  41493e:	mov    rcx,rsi
  414941:	mov    r8,rax
  414944:	call   0x427d70
  414949:	mov    rdx,QWORD PTR [rsp+0x30]
  41494e:	mov    rcx,rbx
  414951:	call   0x4122c0
  414956:	mov    rcx,rdi
  414959:	call   0x427f68
  41495e:	mov    rcx,rsi
  414961:	call   0x427d60
  414966:	nop
  414967:	add    rsp,0x50
  41496b:	pop    rbx
  41496c:	pop    rsi
  41496d:	pop    rdi
  41496e:	ret    
  41496f:	nop
  414970:	mov    rax,QWORD PTR [rbx+0x50]
  414974:	lea    rdx,[rip+0x2970d]        # 0x43e088
  41497b:	mov    rcx,rsi
  41497e:	mov    r8,QWORD PTR [rax]
  414981:	call   0x427d70
  414986:	xor    r8d,r8d
  414989:	xor    edx,edx
  41498b:	mov    rcx,rdi
  41498e:	call   0x427e98
  414993:	lea    rdx,[rip+0x296f1]        # 0x43e08b
  41499a:	mov    rcx,rsi
  41499d:	mov    r8,rax
  4149a0:	call   0x427dd8
  4149a5:	mov    rdx,QWORD PTR [rsp+0x30]
  4149aa:	mov    rcx,rbx
  4149ad:	call   0x412310
  4149b2:	jmp    0x414956
  4149b4:	xchg   ax,ax
  4149b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149c0:	push   r15
  4149c2:	push   r14
  4149c4:	push   r13
  4149c6:	push   r12
  4149c8:	push   rbp
  4149c9:	push   rdi
  4149ca:	push   rsi
  4149cb:	push   rbx
  4149cc:	sub    rsp,0x268
  4149d3:	mov    rbx,QWORD PTR [rip+0x3ff06]        # 0x4548e0
  4149da:	xor    r10d,r10d
  4149dd:	lea    r14,[rsp+0xe0]
  4149e5:	mov    QWORD PTR [rsp+0x2b0],rcx
  4149ed:	mov    r12,rdx
  4149f0:	mov    QWORD PTR [rsp+0x2c0],r8
  4149f8:	mov    DWORD PTR [rsp+0x44],r9d
  4149fd:	mov    rax,QWORD PTR [rbx+0x28]
  414a01:	mov    rcx,r14
  414a04:	mov    QWORD PTR [rsp+0x190],rax
  414a0c:	mov    rax,QWORD PTR [rbx+0x30]
  414a10:	mov    WORD PTR [rsp+0x194],r10w
  414a19:	mov    QWORD PTR [rsp+0x198],rax
  414a21:	mov    rax,QWORD PTR [rbx+0x38]
  414a25:	mov    BYTE PTR [rsp+0x19d],0x0
  414a2d:	mov    QWORD PTR [rsp+0x1a0],rax
  414a35:	mov    rax,QWORD PTR [rbx+0x40]
  414a39:	mov    QWORD PTR [rsp+0x1a8],rax
  414a41:	mov    rax,QWORD PTR [rbx+0x48]
  414a45:	mov    QWORD PTR [rsp+0x1b0],rax
  414a4d:	mov    rax,QWORD PTR [rbx+0x50]
  414a51:	mov    QWORD PTR [rsp+0x1b8],rax
  414a59:	mov    rax,QWORD PTR [rbx+0x58]
  414a5d:	mov    QWORD PTR [rsp+0x1c0],rax
  414a65:	mov    rax,QWORD PTR [rbx+0x60]
  414a69:	mov    QWORD PTR [rsp+0x1c8],rax
  414a71:	mov    rax,QWORD PTR [rbx+0x68]
  414a75:	mov    QWORD PTR [rsp+0x1d0],rax
  414a7d:	mov    rax,QWORD PTR [rbx+0x70]
  414a81:	mov    QWORD PTR [rsp+0x1d8],rax
  414a89:	mov    rax,QWORD PTR [rbx+0x78]
  414a8d:	mov    QWORD PTR [rsp+0x1e0],rax
  414a95:	mov    rax,QWORD PTR [rbx+0x80]
  414a9c:	mov    QWORD PTR [rsp+0x1e8],rax
  414aa4:	call   0x427da8
  414aa9:	lea    rax,[rsp+0x100]
  414ab1:	mov    rcx,rax
  414ab4:	mov    QWORD PTR [rsp+0x58],rax
  414ab9:	call   0x427da8
  414abe:	lea    rax,[rsp+0x120]
  414ac6:	mov    rcx,rax
  414ac9:	mov    QWORD PTR [rsp+0x38],rax
  414ace:	call   0x427da8
  414ad3:	mov    eax,DWORD PTR [rbx+0xe4]
  414ad9:	cmp    eax,0x1611f
  414ade:	jle    0x414b93
  414ae4:	cmp    BYTE PTR [rsp+0x44],0x0
  414ae9:	lea    rax,[rip+0x29627]        # 0x43e117
  414af0:	lea    r8,[rip+0x295a9]        # 0x43e0a0
  414af7:	mov    r9,QWORD PTR [rsp+0x2c0]
  414aff:	lea    rdx,[rip+0x296d2]        # 0x43e1d8
  414b06:	mov    rcx,r14
  414b09:	cmove  r8,rax
  414b0d:	call   0x427d70
  414b12:	mov    rcx,QWORD PTR [rsp+0xe0]
  414b1a:	xor    edx,edx
  414b1c:	call   0x4062b0
  414b21:	test   rax,rax
  414b24:	mov    rbp,rax
  414b27:	je     0x414f00
  414b2d:	mov    rcx,rax
  414b30:	call   0x427e70
  414b35:	test   eax,eax
  414b37:	jne    0x414c20
  414b3d:	cmp    BYTE PTR [rbx+0x11a],0x0
  414b44:	je     0x4150a0
  414b4a:	mov    rcx,r14
  414b4d:	call   0x427d60
  414b52:	mov    rcx,QWORD PTR [rsp+0x58]
  414b57:	call   0x427d60
  414b5c:	mov    rcx,QWORD PTR [rsp+0x38]
  414b61:	call   0x427d60
  414b66:	xor    esi,esi
  414b68:	nop    DWORD PTR [rax+rax*1+0x0]
  414b70:	test   rbp,rbp
  414b73:	je     0x414b7d
  414b75:	mov    rcx,rbp
  414b78:	call   0x427f68
  414b7d:	mov    eax,esi
  414b7f:	add    rsp,0x268
  414b86:	pop    rbx
  414b87:	pop    rsi
  414b88:	pop    rdi
  414b89:	pop    rbp
  414b8a:	pop    r12
  414b8c:	pop    r13
  414b8e:	pop    r14
  414b90:	pop    r15
  414b92:	ret    
  414b93:	cmp    eax,0x15ff3
  414b98:	jle    0x414bd0
  414b9a:	cmp    BYTE PTR [rsp+0x44],0x0
  414b9f:	lea    rax,[rip+0x29571]        # 0x43e117
  414ba6:	mov    r9,QWORD PTR [rsp+0x2c0]
  414bae:	lea    r8,[rip+0x294eb]        # 0x43e0a0
  414bb5:	lea    rdx,[rip+0x2977c]        # 0x43e338
  414bbc:	mov    rcx,r14
  414bbf:	cmove  r8,rax
  414bc3:	call   0x427d70
  414bc8:	jmp    0x414b12
  414bcd:	nop    DWORD PTR [rax]
  414bd0:	cmp    eax,0x15f8f
  414bd5:	jg     0x414f10
  414bdb:	cmp    eax,0x13a0f
  414be0:	jle    0x4150d4
  414be6:	cmp    BYTE PTR [rsp+0x44],0x0
  414beb:	lea    rax,[rip+0x29525]        # 0x43e117
  414bf2:	mov    r9,QWORD PTR [rsp+0x2c0]
  414bfa:	lea    r8,[rip+0x2949f]        # 0x43e0a0
  414c01:	lea    rdx,[rip+0x299c0]        # 0x43e5c8
  414c08:	mov    rcx,r14
  414c0b:	cmove  r8,rax
  414c0f:	call   0x427d70
  414c14:	jmp    0x414b12
  414c19:	nop    DWORD PTR [rax+0x0]
  414c20:	xor    r8d,r8d
  414c23:	xor    edx,edx
  414c25:	mov    rcx,rbp
  414c28:	call   0x427e98
  414c2d:	mov    rcx,rax
  414c30:	lea    rdi,[rip+0x29c41]        # 0x43e878
  414c37:	call   0x42a558
  414c3c:	xor    edx,edx
  414c3e:	mov    r8d,0x1
  414c44:	mov    rcx,rbp
  414c47:	mov    DWORD PTR [rsp+0xc0],eax
  414c4e:	call   0x427e98
  414c53:	movzx  eax,BYTE PTR [rax]
  414c56:	xor    edx,edx
  414c58:	mov    r8d,0x2
  414c5e:	mov    rcx,rbp
  414c61:	mov    BYTE PTR [rsp+0xb1],al
  414c68:	call   0x427e98
  414c6d:	mov    ecx,0x2
  414c72:	mov    rsi,rax
  414c75:	mov    r8d,0x3
  414c7b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414c7d:	mov    rcx,rbp
  414c80:	lea    rdi,[rip+0x29bf1]        # 0x43e878
  414c87:	setb   al
  414c8a:	seta   dl
  414c8d:	sub    edx,eax
  414c8f:	movsx  eax,dl
  414c92:	xor    edx,edx
  414c94:	mov    DWORD PTR [rsp+0xb8],eax
  414c9b:	call   0x427e98
  414ca0:	mov    ecx,0x2
  414ca5:	mov    rsi,rax
  414ca8:	mov    r8d,0x4
  414cae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414cb0:	mov    rcx,rbp
  414cb3:	lea    rdi,[rip+0x29bbe]        # 0x43e878
  414cba:	setb   al
  414cbd:	seta   dl
  414cc0:	sub    edx,eax
  414cc2:	movsx  eax,dl
  414cc5:	xor    edx,edx
  414cc7:	mov    DWORD PTR [rsp+0x98],eax
  414cce:	call   0x427e98
  414cd3:	mov    ecx,0x2
  414cd8:	mov    rsi,rax
  414cdb:	mov    r8d,0x5
  414ce1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414ce3:	mov    rcx,rbp
  414ce6:	lea    rdi,[rip+0x29b8b]        # 0x43e878
  414ced:	setb   al
  414cf0:	seta   dl
  414cf3:	sub    edx,eax
  414cf5:	movsx  eax,dl
  414cf8:	xor    edx,edx
  414cfa:	mov    DWORD PTR [rsp+0xa0],eax
  414d01:	call   0x427e98
  414d06:	mov    ecx,0x2
  414d0b:	mov    rsi,rax
  414d0e:	mov    QWORD PTR [rsp+0xa8],0x0
  414d1a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414d1c:	setb   al
  414d1f:	seta   dl
  414d22:	sub    edx,eax
  414d24:	movsx  eax,dl
  414d27:	mov    DWORD PTR [rsp+0xd4],eax
  414d2e:	mov    eax,DWORD PTR [rbx+0xe4]
  414d34:	cmp    eax,0x13947
  414d39:	jg     0x414fe7
  414d3f:	cmp    eax,0x1387f
  414d44:	mov    DWORD PTR [rsp+0xb4],0x0
  414d4f:	mov    QWORD PTR [rsp+0xc8],0x0
  414d5b:	jg     0x414f43
  414d61:	xor    r13d,r13d
  414d64:	mov    BYTE PTR [rsp+0xd3],0x64
  414d6c:	mov    rcx,rbp
  414d6f:	call   0x427f68
  414d74:	cmp    BYTE PTR [rsp+0xb1],0x53
  414d7c:	mov    QWORD PTR [rsp+0x50],0x0
  414d85:	je     0x414ea2
  414d8b:	lea    rdx,[rip+0x29afe]        # 0x43e890
  414d92:	mov    rcx,r14
  414d95:	call   0x427d70
  414d9a:	lea    rdx,[rip+0x29b07]        # 0x43e8a8
  414da1:	mov    rcx,r14
  414da4:	call   0x427dc8
  414da9:	cmp    DWORD PTR [rbx+0xe4],0x15ff3
  414db3:	jle    0x4150c0
  414db9:	lea    rdx,[rip+0x29be8]        # 0x43e9a8
  414dc0:	mov    rcx,r14
  414dc3:	call   0x427dc8
  414dc8:	cmp    BYTE PTR [rsp+0xb1],0x69
  414dd0:	je     0x415012
  414dd6:	lea    rdx,[rip+0x29ce2]        # 0x43eabf
  414ddd:	mov    rcx,r14
  414de0:	call   0x427dc8
  414de5:	cmp    BYTE PTR [rsp+0xb1],0x66
  414ded:	jne    0x415021
  414df3:	cmp    DWORD PTR [rbx+0xe4],0x16057
  414dfd:	jg     0x41525f
  414e03:	lea    rdx,[rip+0x29db4]        # 0x43ebbe
  414e0a:	mov    rcx,r14
  414e0d:	call   0x427dc8
  414e12:	cmp    BYTE PTR [rsp+0x44],0x0
  414e17:	jne    0x415279
  414e1d:	nop    DWORD PTR [rax]
  414e20:	lea    rdx,[rip+0x29e59]        # 0x43ec80
  414e27:	mov    rcx,r14
  414e2a:	call   0x427dc8
  414e2f:	mov    r8,QWORD PTR [rsp+0x2c0]
  414e37:	lea    rdx,[rip+0x29e62]        # 0x43eca0
  414e3e:	mov    rcx,r14
  414e41:	call   0x427dd8
  414e46:	lea    rdx,[rip+0x29e94]        # 0x43ece1
  414e4d:	mov    rcx,r14
  414e50:	call   0x427dc8
  414e55:	mov    rcx,QWORD PTR [rsp+0xe0]
  414e5d:	xor    edx,edx
  414e5f:	call   0x4062b0
  414e64:	test   rax,rax
  414e67:	mov    rbp,rax
  414e6a:	je     0x415106
  414e70:	mov    rcx,rax
  414e73:	call   0x427e70
  414e78:	mov    DWORD PTR [rsp+0x60],eax
  414e7c:	movzx  eax,BYTE PTR [rsp+0xb1]
  414e84:	sub    eax,0x53
  414e87:	cmp    al,0x23
  414e89:	ja     0x415ba1
  414e8f:	movzx  edx,al
  414e92:	lea    rax,[rip+0x2b50b]        # 0x4403a4
  414e99:	movsxd rdx,DWORD PTR [rax+rdx*4]
  414e9d:	add    rax,rdx
  414ea0:	jmp    rax
  414ea2:	mov    rcx,QWORD PTR [rsp+0x2b0]
  414eaa:	call   0x41d080
  414eaf:	lea    rdx,[rip+0x299c4]        # 0x43e87a
  414eb6:	mov    r8,rax
  414eb9:	mov    rcx,r14
  414ebc:	call   0x427d70
  414ec1:	mov    rcx,r12
  414ec4:	call   0x41d080
  414ec9:	lea    rdx,[rip+0x299bb]        # 0x43e88b
  414ed0:	mov    r8,rax
  414ed3:	mov    rcx,r14
  414ed6:	call   0x427dd8
  414edb:	mov    rcx,QWORD PTR [rsp+0xe0]
  414ee3:	xor    edx,edx
  414ee5:	call   0x4062b0
  414eea:	test   rax,rax
  414eed:	mov    rdi,rax
  414ef0:	jne    0x4151b8
  414ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f00:	xor    ebp,ebp
  414f02:	jmp    0x414b4a
  414f07:	nop    WORD PTR [rax+rax*1+0x0]
  414f10:	cmp    BYTE PTR [rsp+0x44],0x0
  414f15:	lea    rax,[rip+0x291fb]        # 0x43e117
  414f1c:	mov    r9,QWORD PTR [rsp+0x2c0]
  414f24:	lea    r8,[rip+0x29175]        # 0x43e0a0
  414f2b:	lea    rdx,[rip+0x29556]        # 0x43e488
  414f32:	mov    rcx,r14
  414f35:	cmove  r8,rax
  414f39:	call   0x427d70
  414f3e:	jmp    0x414b12
  414f43:	xor    edx,edx
  414f45:	mov    r8d,0x7
  414f4b:	mov    rcx,rbp
  414f4e:	call   0x427e98
  414f53:	xor    edx,edx
  414f55:	mov    r8d,0xa
  414f5b:	mov    rcx,rax
  414f5e:	call   0x42a3c8
  414f63:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  414f6d:	mov    DWORD PTR [rsp+0xb4],eax
  414f74:	jle    0x414d61
  414f7a:	xor    edx,edx
  414f7c:	mov    r8d,0x8
  414f82:	mov    rcx,rbp
  414f85:	call   0x427e98
  414f8a:	cmp    BYTE PTR [rax],0x0
  414f8d:	jne    0x4152a0
  414f93:	mov    eax,DWORD PTR [rbx+0xe4]
  414f99:	cmp    eax,0x15ff3
  414f9e:	jle    0x414d61
  414fa4:	xor    edx,edx
  414fa6:	mov    r8d,0x9
  414fac:	mov    rcx,rbp
  414faf:	call   0x427e98
  414fb4:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  414fbe:	movzx  r13d,BYTE PTR [rax]
  414fc2:	jle    0x414d64
  414fc8:	mov    r8d,0xa
  414fce:	xor    edx,edx
  414fd0:	mov    rcx,rbp
  414fd3:	call   0x427e98
  414fd8:	movzx  eax,BYTE PTR [rax]
  414fdb:	mov    BYTE PTR [rsp+0xd3],al
  414fe2:	jmp    0x414d6c
  414fe7:	mov    r8d,0x6
  414fed:	xor    edx,edx
  414fef:	mov    rcx,rbp
  414ff2:	call   0x427e98
  414ff7:	mov    rcx,rax
  414ffa:	call   0x424900
  414fff:	mov    QWORD PTR [rsp+0xa8],rax
  415007:	mov    eax,DWORD PTR [rbx+0xe4]
  41500d:	jmp    0x414d3f
  415012:	lea    rdx,[rip+0x29a5f]        # 0x43ea78
  415019:	mov    rcx,r14
  41501c:	call   0x427dc8
  415021:	lea    rdx,[rip+0x29b96]        # 0x43ebbe
  415028:	mov    rcx,r14
  41502b:	call   0x427dc8
  415030:	cmp    BYTE PTR [rsp+0x44],0x0
  415035:	je     0x414e20
  41503b:	lea    rdx,[rip+0x29b96]        # 0x43ebd8
  415042:	mov    rcx,r14
  415045:	call   0x427dc8
  41504a:	lea    rdx,[rip+0x29b9f]        # 0x43ebf0
  415051:	mov    rcx,r14
  415054:	call   0x427dc8
  415059:	movzx  edi,BYTE PTR [rsp+0xb1]
  415061:	cmp    dil,0x6d
  415065:	sete   dl
  415068:	cmp    dil,0x72
  41506c:	sete   al
  41506f:	or     eax,edx
  415071:	cmp    dil,0x63
  415075:	sete   dl
  415078:	or     al,dl
  41507a:	jne    0x415089
  41507c:	mov    eax,edi
  41507e:	and    eax,0xffffffef
  415081:	cmp    al,0x66
  415083:	jne    0x414e20
  415089:	lea    rdx,[rip+0x29bb8]        # 0x43ec48
  415090:	mov    rcx,r14
  415093:	call   0x427dc8
  415098:	jmp    0x414e20
  41509d:	nop    DWORD PTR [rax]
  4150a0:	mov    rdx,QWORD PTR [rsp+0x2c0]
  4150a8:	lea    rcx,[rip+0x297a1]        # 0x43e850
  4150af:	call   0x405d90
  4150b4:	jmp    0x414b4a
  4150b9:	nop    DWORD PTR [rax+0x0]
  4150c0:	lea    rdx,[rip+0x29999]        # 0x43ea60
  4150c7:	mov    rcx,r14
  4150ca:	call   0x427dc8
  4150cf:	jmp    0x414dc8
  4150d4:	cmp    eax,0x13947
  4150d9:	jg     0x41522c
  4150df:	cmp    eax,0x1387f
  4150e4:	mov    r8,QWORD PTR [rsp+0x2c0]
  4150ec:	jle    0x416acc
  4150f2:	lea    rdx,[rip+0x2963f]        # 0x43e738
  4150f9:	mov    rcx,r14
  4150fc:	call   0x427d70
  415101:	jmp    0x414b12
  415106:	mov    rcx,r14
  415109:	call   0x427d60
  41510e:	mov    rcx,QWORD PTR [rsp+0x58]
  415113:	call   0x427d60
  415118:	mov    rcx,QWORD PTR [rsp+0x38]
  41511d:	call   0x427d60
  415122:	cmp    QWORD PTR [rsp+0x50],0x0
  415128:	je     0x414b66
  41512e:	mov    QWORD PTR [rsp+0x48],0x0
  415137:	xor    esi,esi
  415139:	mov    QWORD PTR [rsp+0x78],0x0
  415142:	mov    rax,QWORD PTR [rsp+0x50]
  415147:	mov    rcx,QWORD PTR [rax]
  41514a:	mov    rbx,rax
  41514d:	test   rcx,rcx
  415150:	je     0x415163
  415152:	add    rbx,0x8
  415156:	call   0x42a4e8
  41515b:	mov    rcx,QWORD PTR [rbx]
  41515e:	test   rcx,rcx
  415161:	jne    0x415152
  415163:	mov    rcx,QWORD PTR [rsp+0x50]
  415168:	call   0x42a4e8
  41516d:	mov    rax,QWORD PTR [rsp+0x48]
  415172:	test   rax,rax
  415175:	je     0x41519d
  415177:	mov    rcx,QWORD PTR [rax]
  41517a:	mov    rbx,rax
  41517d:	test   rcx,rcx
  415180:	je     0x415193
  415182:	add    rbx,0x8
  415186:	call   0x42a4e8
  41518b:	mov    rcx,QWORD PTR [rbx]
  41518e:	test   rcx,rcx
  415191:	jne    0x415182
  415193:	mov    rcx,QWORD PTR [rsp+0x48]
  415198:	call   0x42a4e8
  41519d:	mov    rax,QWORD PTR [rsp+0x78]
  4151a2:	test   rax,rax
  4151a5:	je     0x414b70
  4151ab:	mov    rcx,rax
  4151ae:	call   0x42a4e8
  4151b3:	jmp    0x414b70
  4151b8:	mov    rcx,rax
  4151bb:	xor    esi,esi
  4151bd:	call   0x427e80
  4151c2:	lea    ecx,[rax+0x1]
  4151c5:	movsxd rcx,ecx
  4151c8:	shl    rcx,0x3
  4151cc:	call   0x424800
  4151d1:	mov    QWORD PTR [rsp+0x50],rax
  4151d6:	mov    rbp,rax
  4151d9:	jmp    0x415203
  4151db:	nop    DWORD PTR [rax+rax*1+0x0]
  4151e0:	movsxd rax,esi
  4151e3:	mov    r8d,esi
  4151e6:	xor    edx,edx
  4151e8:	lea    r15,[rbp+rax*8+0x0]
  4151ed:	mov    rcx,rdi
  4151f0:	add    esi,0x1
  4151f3:	call   0x427e98
  4151f8:	mov    rcx,rax
  4151fb:	call   0x424900
  415200:	mov    QWORD PTR [r15],rax
  415203:	mov    rcx,rdi
  415206:	call   0x427e80
  41520b:	cmp    esi,eax
  41520d:	jl     0x4151e0
  41520f:	mov    rax,QWORD PTR [rsp+0x50]
  415214:	movsxd rsi,esi
  415217:	mov    rcx,rdi
  41521a:	mov    QWORD PTR [rax+rsi*8],0x0
  415222:	call   0x427f68
  415227:	jmp    0x414d8b
  41522c:	cmp    BYTE PTR [rsp+0x44],0x0
  415231:	lea    rax,[rip+0x28edf]        # 0x43e117
  415238:	mov    r9,QWORD PTR [rsp+0x2c0]
  415240:	lea    r8,[rip+0x28ed9]        # 0x43e120
  415247:	lea    rdx,[rip+0x2945a]        # 0x43e6a8
  41524e:	mov    rcx,r14
  415251:	cmove  r8,rax
  415255:	call   0x427d70
  41525a:	jmp    0x414b12
  41525f:	lea    rdx,[rip+0x29872]        # 0x43ead8
  415266:	mov    rcx,r14
  415269:	call   0x427dc8
  41526e:	cmp    BYTE PTR [rsp+0x44],0x0
  415273:	je     0x414e20
  415279:	lea    rdx,[rip+0x29958]        # 0x43ebd8
  415280:	mov    rcx,r14
  415283:	call   0x427dc8
  415288:	lea    rdx,[rip+0x29961]        # 0x43ebf0
  41528f:	mov    rcx,r14
  415292:	call   0x427dc8
  415297:	jmp    0x415089
  41529c:	nop    DWORD PTR [rax+0x0]
  4152a0:	mov    r8d,0x8
  4152a6:	xor    edx,edx
  4152a8:	mov    rcx,rbp
  4152ab:	call   0x427e98
  4152b0:	mov    rcx,rax
  4152b3:	call   0x424900
  4152b8:	mov    QWORD PTR [rsp+0xc8],rax
  4152c0:	jmp    0x414f93
  4152c5:	mov    r8,QWORD PTR [rsp+0x2b0]
  4152cd:	mov    rcx,QWORD PTR [rsp+0x58]
  4152d2:	lea    rdx,[rip+0x29a8c]        # 0x43ed65
  4152d9:	mov    r9,r12
  4152dc:	call   0x427d70
  4152e1:	movzx  esi,BYTE PTR [rsp+0xb1]
  4152e9:	lea    rax,[rip+0x29b12]        # 0x43ee02
  4152f0:	mov    BYTE PTR [rsp+0x70],0x0
  4152f5:	mov    r13d,0x2
  4152fb:	mov    QWORD PTR [rsp+0x48],0x0
  415304:	mov    QWORD PTR [rsp+0x140],rax
  41530c:	lea    rax,[rip+0x29af6]        # 0x43ee09
  415313:	cmp    sil,0x72
  415317:	mov    QWORD PTR [rsp+0x148],rax
  41531f:	mov    eax,esi
  415321:	sete   BYTE PTR [rsp+0xb3]
  415329:	cmp    sil,0x76
  41532d:	sete   BYTE PTR [rsp+0x78]
  415332:	cmp    sil,0x6d
  415336:	sete   BYTE PTR [rsp+0xb2]
  41533e:	movzx  edx,BYTE PTR [rsp+0xb2]
  415346:	and    eax,0xfffffffb
  415349:	cmp    al,0x72
  41534b:	sete   dil
  41534f:	mov    eax,edx
  415351:	or     edi,eax
  415353:	cmp    sil,0x66
  415357:	sete   BYTE PTR [rsp+0x68]
  41535c:	cmp    sil,0x63
  415360:	sete   BYTE PTR [rsp+0x80]
  415368:	cmp    BYTE PTR [rsp+0xb1],0x53
  415370:	je     0x415e3c
  415376:	cmp    BYTE PTR [rsp+0xb1],0x69
  41537e:	je     0x41619e
  415384:	cmp    BYTE PTR [rsp+0x68],0x0
  415389:	je     0x415e52
  41538f:	cmp    DWORD PTR [rbx+0xe4],0x16057
  415399:	jle    0x4153b1
  41539b:	lea    rsi,[rip+0x29a87]        # 0x43ee29
  4153a2:	movsxd rax,r13d
  4153a5:	add    r13d,0x1
  4153a9:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  4153b1:	cmp    BYTE PTR [rsp+0x44],0x0
  4153b6:	je     0x415e5d
  4153bc:	lea    rsi,[rip+0x29a72]        # 0x43ee35
  4153c3:	movsxd rdx,r13d
  4153c6:	lea    eax,[r13+0x1]
  4153ca:	mov    QWORD PTR [rsp+rdx*8+0x140],rsi
  4153d2:	lea    rdx,[rip+0x29a64]        # 0x43ee3d
  4153d9:	cdqe   
  4153db:	lea    esi,[r13+0x2]
  4153df:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  4153e7:	movzx  eax,BYTE PTR [rsp+0x68]
  4153ec:	or     al,dil
  4153ef:	jne    0x4160ff
  4153f5:	cmp    BYTE PTR [rsp+0x80],0x0
  4153fd:	jne    0x4160ff
  415403:	mov    eax,DWORD PTR [rsp+0x60]
  415407:	lea    r15,[rsp+0x1f0]
  41540f:	mov    r8,QWORD PTR [rsp+0x100]
  415417:	lea    rdx,[rsp+0x190]
  41541f:	mov    r9d,esi
  415422:	mov    rcx,r15
  415425:	mov    DWORD PTR [rsp+0x20],eax
  415429:	call   0x412100
  41542e:	test   esi,esi
  415430:	jle    0x415461
  415432:	lea    r12,[rsp+0x140]
  41543a:	xor    r13d,r13d
  41543d:	nop    DWORD PTR [rax]
  415440:	mov    rdx,QWORD PTR [r12+r13*8]
  415444:	mov    r9d,0x6c
  41544a:	mov    r8d,0x1
  415450:	mov    rcx,r15
  415453:	add    r13,0x1
  415457:	call   0x4121a0
  41545c:	cmp    esi,r13d
  41545f:	jg     0x415440
  415461:	cmp    BYTE PTR [rsp+0x44],0x0
  415466:	movzx  r12d,BYTE PTR [rsp+0x78]
  41546c:	setne  BYTE PTR [rsp+0xb0]
  415474:	or     r12b,BYTE PTR [rsp+0xb2]
  41547c:	movzx  eax,BYTE PTR [rsp+0xb0]
  415484:	and    r12b,al
  415487:	jne    0x416476
  41548d:	mov    QWORD PTR [rsp+0x78],0x0
  415496:	movzx  esi,BYTE PTR [rsp+0x68]
  41549b:	movzx  eax,BYTE PTR [rsp+0xb3]
  4154a3:	xor    r12d,r12d
  4154a6:	mov    r9d,DWORD PTR [rsp+0x60]
  4154ab:	or     eax,esi
  4154ad:	or     edi,esi
  4154af:	test   r9d,r9d
  4154b2:	mov    BYTE PTR [rsp+0x88],al
  4154b9:	mov    BYTE PTR [rsp+0x90],dil
  4154c1:	jle    0x415774
  4154c7:	mov    QWORD PTR [rsp+0xd8],r14
  4154cf:	movzx  r14d,BYTE PTR [rsp+0xb1]
  4154d8:	jmp    0x415522
  4154da:	nop    WORD PTR [rax+rax*1+0x0]
  4154e0:	cmp    r14b,0x53
  4154e4:	je     0x415683
  4154ea:	cmp    r14b,0x69
  4154ee:	mov    r8d,0x6
  4154f4:	je     0x415c7a
  4154fa:	cmp    BYTE PTR [rsp+0x68],0x0
  4154ff:	jne    0x415c64
  415505:	cmp    BYTE PTR [rsp+0xb0],0x0
  41550d:	jne    0x4156b0
  415513:	add    r12,0x1
  415517:	cmp    DWORD PTR [rsp+0x60],r12d
  41551c:	jle    0x41576c
  415522:	xor    r8d,r8d
  415525:	mov    edx,r12d
  415528:	mov    rcx,rbp
  41552b:	call   0x427e98
  415530:	xor    r9d,r9d
  415533:	xor    r8d,r8d
  415536:	mov    rdx,rax
  415539:	mov    rcx,r15
  41553c:	mov    r13d,r12d
  41553f:	call   0x412220
  415544:	mov    r8d,0x1
  41554a:	mov    edx,r12d
  41554d:	mov    rcx,rbp
  415550:	call   0x427e98
  415555:	xor    r9d,r9d
  415558:	xor    r8d,r8d
  41555b:	mov    rdx,rax
  41555e:	mov    rcx,r15
  415561:	call   0x412220
  415566:	cmp    BYTE PTR [rsp+0x70],0x0
  41556b:	je     0x4154e0
  415571:	mov    rcx,QWORD PTR [rsp+0x38]
  415576:	call   0x427d68
  41557b:	mov    r8d,0x5
  415581:	mov    edx,r12d
  415584:	mov    rcx,rbp
  415587:	call   0x427ea8
  41558c:	test   eax,eax
  41558e:	jne    0x4155c4
  415590:	cmp    QWORD PTR [rsp+0x128],0x0
  415599:	jne    0x416119
  41559f:	mov    r8d,0x5
  4155a5:	mov    edx,r13d
  4155a8:	mov    rcx,rbp
  4155ab:	call   0x427e98
  4155b0:	mov    rcx,QWORD PTR [rsp+0x38]
  4155b5:	lea    rdx,[rip+0x298dc]        # 0x43ee98
  4155bc:	mov    r8,rax
  4155bf:	call   0x427dd8
  4155c4:	mov    rcx,rbp
  4155c7:	mov    r8d,0x3
  4155cd:	mov    edx,r13d
  4155d0:	lea    rdi,[rip+0x292a1]        # 0x43e878
  4155d7:	call   0x427e98
  4155dc:	mov    ecx,0x2
  4155e1:	mov    rsi,rax
  4155e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4155e6:	jne    0x415608
  4155e8:	cmp    QWORD PTR [rsp+0x128],0x0
  4155f1:	jne    0x41612f
  4155f7:	mov    rcx,QWORD PTR [rsp+0x38]
  4155fc:	lea    rdx,[rip+0x298a0]        # 0x43eea3
  415603:	call   0x427dc8
  415608:	mov    r8d,0x2
  41560e:	mov    edx,r13d
  415611:	mov    rcx,rbp
  415614:	call   0x427e98
  415619:	cmp    BYTE PTR [rax],0x0
  41561c:	je     0x415652
  41561e:	cmp    QWORD PTR [rsp+0x128],0x0
  415627:	jne    0x416145
  41562d:	mov    r8d,0x2
  415633:	mov    edx,r13d
  415636:	mov    rcx,rbp
  415639:	call   0x427e98
  41563e:	mov    rcx,QWORD PTR [rsp+0x38]
  415643:	lea    rdx,[rip+0x29862]        # 0x43eeac
  41564a:	mov    r8,rax
  41564d:	call   0x427dd8
  415652:	mov    rcx,QWORD PTR [rsp+0x120]
  41565a:	call   0x424900
  41565f:	mov    rdi,QWORD PTR [rsp+0x48]
  415664:	xor    r9d,r9d
  415667:	xor    r8d,r8d
  41566a:	mov    rdx,rax
  41566d:	mov    rcx,r15
  415670:	mov    QWORD PTR [rdi+r12*8],rax
  415674:	call   0x412220
  415679:	cmp    r14b,0x53
  41567d:	jne    0x4154ea
  415683:	mov    rax,QWORD PTR [rsp+0x50]
  415688:	xor    r9d,r9d
  41568b:	xor    r8d,r8d
  41568e:	mov    rcx,r15
  415691:	mov    rdx,QWORD PTR [rax+r12*8]
  415695:	call   0x412220
  41569a:	cmp    BYTE PTR [rsp+0xb0],0x0
  4156a2:	je     0x415513
  4156a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4156b0:	mov    edx,r13d
  4156b3:	mov    r8d,0x8
  4156b9:	mov    rcx,rbp
  4156bc:	call   0x427e98
  4156c1:	movzx  eax,BYTE PTR [rax]
  4156c4:	lea    rdx,[rip+0x28a88]        # 0x43e153
  4156cb:	cmp    al,0x70
  4156cd:	je     0x4156f9
  4156cf:	cmp    al,0x6d
  4156d1:	lea    rdx,[rip+0x28a76]        # 0x43e14e
  4156d8:	je     0x4156f9
  4156da:	cmp    al,0x78
  4156dc:	lea    rdx,[rip+0x28a76]        # 0x43e159
  4156e3:	je     0x4156f9
  4156e5:	cmp    al,0x65
  4156e7:	lea    rdx,[rip+0x28a74]        # 0x43e162
  4156ee:	lea    rax,[rip+0x28a71]        # 0x43e166
  4156f5:	cmove  rdx,rax
  4156f9:	xor    r9d,r9d
  4156fc:	xor    r8d,r8d
  4156ff:	mov    rcx,r15
  415702:	call   0x412220
  415707:	cmp    BYTE PTR [rsp+0x88],0x0
  41570f:	jne    0x415ca0
  415715:	cmp    BYTE PTR [rsp+0xb2],0x0
  41571d:	jne    0x415ca0
  415723:	cmp    BYTE PTR [rsp+0x90],0x0
  41572b:	jne    0x41573b
  41572d:	cmp    BYTE PTR [rsp+0x80],0x0
  415735:	je     0x415513
  41573b:	mov    r8d,0xa
  415741:	mov    edx,r13d
  415744:	mov    rcx,rbp
  415747:	call   0x427e98
  41574c:	xor    r9d,r9d
  41574f:	xor    r8d,r8d
  415752:	mov    rdx,rax
  415755:	mov    rcx,r15
  415758:	add    r12,0x1
  41575c:	call   0x412220
  415761:	cmp    DWORD PTR [rsp+0x60],r12d
  415766:	jg     0x415522
  41576c:	mov    r14,QWORD PTR [rsp+0xd8]
  415774:	mov    ecx,DWORD PTR [rsp+0x98]
  41577b:	mov    r8d,DWORD PTR [rsp+0xa0]
  415783:	test   ecx,ecx
  415785:	sete   BYTE PTR [rsp+0x70]
  41578a:	test   r8d,r8d
  41578d:	sete   BYTE PTR [rsp+0x60]
  415792:	cmp    BYTE PTR [rsp+0xb1],0x69
  41579a:	je     0x4164ec
  4157a0:	cmp    BYTE PTR [rsp+0xb1],0x53
  4157a8:	je     0x416ae0
  4157ae:	movzx  eax,BYTE PTR [rsp+0xb3]
  4157b6:	or     al,BYTE PTR [rsp+0x68]
  4157ba:	jne    0x415f38
  4157c0:	cmp    BYTE PTR [rsp+0xb2],0x0
  4157c8:	jne    0x415f38
  4157ce:	mov    rdi,QWORD PTR [rsp+0x78]
  4157d3:	test   rdi,rdi
  4157d6:	je     0x4157fd
  4157d8:	lea    rdx,[rip+0x2a456]        # 0x43fc35
  4157df:	mov    rcx,r15
  4157e2:	call   0x4122c0
  4157e7:	mov    rdx,rdi
  4157ea:	mov    rcx,r15
  4157ed:	call   0x4122c0
  4157f2:	cmp    BYTE PTR [rsp+0x70],0x0
  4157f7:	jne    0x4165aa
  4157fd:	cmp    BYTE PTR [rsp+0x60],0x0
  415802:	je     0x41593d
  415808:	mov    eax,DWORD PTR [rbx+0xe4]
  41580e:	lea    r9,[rip+0x2895b]        # 0x43e170
  415815:	lea    r8,[rip+0x28963]        # 0x43e17f
  41581c:	cmp    eax,0x15f8f
  415821:	jg     0x415841
  415823:	cmp    eax,0x139ac
  415828:	lea    r9,[rip+0x28969]        # 0x43e198
  41582f:	lea    rax,[rip+0x28986]        # 0x43e1bc
  415836:	lea    r8,[rip+0x28932]        # 0x43e16f
  41583d:	cmovl  r9,rax
  415841:	mov    rax,QWORD PTR [rsp+0x2c0]
  415849:	lea    rdx,[rip+0x2a4a8]        # 0x43fcf8
  415850:	mov    rcx,r14
  415853:	mov    QWORD PTR [rsp+0x20],rax
  415858:	call   0x427d70
  41585d:	mov    eax,DWORD PTR [rbx+0xe4]
  415863:	cmp    eax,0x15f8f
  415868:	jg     0x416d24
  41586e:	cmp    eax,0x139ab
  415873:	jle    0x416ca9
  415879:	lea    rdx,[rip+0x2a540]        # 0x43fdc0
  415880:	mov    rcx,r14
  415883:	call   0x427dc8
  415888:	lea    rdx,[rip+0x2a67a]        # 0x43ff09
  41588f:	mov    rcx,r14
  415892:	xor    esi,esi
  415894:	call   0x427dc8
  415899:	mov    rcx,QWORD PTR [rsp+0xe0]
  4158a1:	xor    edx,edx
  4158a3:	call   0x4062b0
  4158a8:	test   rax,rax
  4158ab:	mov    r12,rax
  4158ae:	je     0x4159a1
  4158b4:	mov    rcx,rax
  4158b7:	xor    edi,edi
  4158b9:	call   0x427e70
  4158be:	test   eax,eax
  4158c0:	jle    0x415935
  4158c2:	mov    QWORD PTR [rsp+0x60],r14
  4158c7:	mov    QWORD PTR [rsp+0x70],rbp
  4158cc:	mov    r14d,eax
  4158cf:	nop
  4158d0:	xor    r13d,r13d
  4158d3:	xor    esi,esi
  4158d5:	mov    r8d,0x2
  4158db:	mov    edx,esi
  4158dd:	mov    rcx,r12
  4158e0:	call   0x427e98
  4158e5:	mov    r8d,0x3
  4158eb:	mov    edx,esi
  4158ed:	mov    rcx,r12
  4158f0:	mov    rbp,rax
  4158f3:	call   0x427e98
  4158f8:	cmp    edi,0x2
  4158fb:	je     0x415d10
  415901:	jle    0x415cd0
  415907:	cmp    edi,0x3
  41590a:	je     0x415d60
  415910:	cmp    edi,0x4
  415913:	jne    0x415df0
  415919:	cmp    BYTE PTR [rbp+0x0],0x52
  41591d:	je     0x41615b
  415923:	add    esi,0x1
  415926:	cmp    r14d,esi
  415929:	jg     0x4158d5
  41592b:	mov    rbp,QWORD PTR [rsp+0x70]
  415930:	mov    r14,QWORD PTR [rsp+0x60]
  415935:	mov    rcx,r12
  415938:	call   0x427f68
  41593d:	movzx  eax,BYTE PTR [rsp+0xb2]
  415945:	or     al,BYTE PTR [rsp+0xb3]
  41594c:	mov    BYTE PTR [rsp+0x60],al
  415950:	jne    0x4161b9
  415956:	cmp    BYTE PTR [rsp+0x68],0x0
  41595b:	jne    0x416cd2
  415961:	cmp    BYTE PTR [rsp+0xb0],0x0
  415969:	je     0x415981
  41596b:	mov    rax,QWORD PTR [rsp+0xa8]
  415973:	test   rax,rax
  415976:	je     0x415981
  415978:	cmp    BYTE PTR [rax],0x0
  41597b:	jne    0x416e20
  415981:	mov    rdx,QWORD PTR [rbx+0x10]
  415985:	mov    r8,QWORD PTR [rbx+0x108]
  41598c:	mov    rcx,r15
  41598f:	mov    esi,0x1
  415994:	call   0x412460
  415999:	mov    rcx,r15
  41599c:	call   0x412350
  4159a1:	mov    rcx,r15
  4159a4:	call   0x412350
  4159a9:	mov    rcx,r14
  4159ac:	call   0x427d60
  4159b1:	mov    rcx,QWORD PTR [rsp+0x58]
  4159b6:	call   0x427d60
  4159bb:	mov    rcx,QWORD PTR [rsp+0x38]
  4159c0:	call   0x427d60
  4159c5:	cmp    QWORD PTR [rsp+0x50],0x0
  4159cb:	jne    0x415142
  4159d1:	jmp    0x41516d
  4159d6:	mov    r8,QWORD PTR [rsp+0x2b0]
  4159de:	mov    rcx,QWORD PTR [rsp+0x58]
  4159e3:	lea    rdx,[rip+0x29330]        # 0x43ed1a
  4159ea:	mov    r9,r12
  4159ed:	call   0x427d70
  4159f2:	movzx  esi,BYTE PTR [rsp+0xb1]
  4159fa:	lea    rax,[rip+0x29401]        # 0x43ee02
  415a01:	mov    QWORD PTR [rsp+0x140],rax
  415a09:	lea    rax,[rip+0x293f9]        # 0x43ee09
  415a10:	cmp    sil,0x72
  415a14:	mov    QWORD PTR [rsp+0x148],rax
  415a1c:	mov    eax,esi
  415a1e:	sete   BYTE PTR [rsp+0xb3]
  415a26:	cmp    sil,0x76
  415a2a:	sete   BYTE PTR [rsp+0x78]
  415a2f:	cmp    sil,0x6d
  415a33:	sete   BYTE PTR [rsp+0xb2]
  415a3b:	movzx  edx,BYTE PTR [rsp+0xb2]
  415a43:	and    eax,0xfffffffb
  415a46:	cmp    al,0x72
  415a48:	sete   dil
  415a4c:	mov    eax,edx
  415a4e:	or     edi,eax
  415a50:	cmp    sil,0x66
  415a54:	sete   BYTE PTR [rsp+0x68]
  415a59:	cmp    sil,0x63
  415a5d:	sete   BYTE PTR [rsp+0x80]
  415a65:	lea    rax,[rip+0x293a2]        # 0x43ee0e
  415a6c:	mov    r13d,0x3
  415a72:	mov    QWORD PTR [rsp+0x150],rax
  415a7a:	mov    eax,DWORD PTR [rsp+0x60]
  415a7e:	lea    ecx,[rax+0x1]
  415a81:	movsxd rcx,ecx
  415a84:	shl    rcx,0x3
  415a88:	call   0x424840
  415a8d:	mov    BYTE PTR [rsp+0x70],0x1
  415a92:	mov    QWORD PTR [rsp+0x48],rax
  415a97:	jmp    0x415368
  415a9c:	mov    r8,QWORD PTR [rsp+0x2b0]
  415aa4:	mov    rcx,QWORD PTR [rsp+0x58]
  415aa9:	lea    rdx,[rip+0x29304]        # 0x43edb4
  415ab0:	mov    r9,r12
  415ab3:	call   0x427d70
  415ab8:	jmp    0x4152e1
  415abd:	mov    r8,QWORD PTR [rsp+0x2b0]
  415ac5:	mov    rcx,QWORD PTR [rsp+0x58]
  415aca:	lea    rdx,[rip+0x292ca]        # 0x43ed9b
  415ad1:	mov    r9,r12
  415ad4:	call   0x427d70
  415ad9:	jmp    0x4152e1
  415ade:	cmp    r13b,0x75
  415ae2:	mov    r9,r12
  415ae5:	mov    r8,QWORD PTR [rsp+0x2b0]
  415aed:	je     0x416f04
  415af3:	mov    rcx,QWORD PTR [rsp+0x58]
  415af8:	lea    rdx,[rip+0x2920d]        # 0x43ed0c
  415aff:	call   0x427d70
  415b04:	jmp    0x4159f2
  415b09:	cmp    r13b,0x75
  415b0d:	mov    r9,r12
  415b10:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b18:	je     0x416f1a
  415b1e:	mov    rcx,QWORD PTR [rsp+0x58]
  415b23:	lea    rdx,[rip+0x29221]        # 0x43ed4b
  415b2a:	call   0x427d70
  415b2f:	jmp    0x4159f2
  415b34:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b3c:	mov    rcx,QWORD PTR [rsp+0x58]
  415b41:	lea    rdx,[rip+0x29297]        # 0x43eddf
  415b48:	mov    r9,r12
  415b4b:	call   0x427d70
  415b50:	jmp    0x4159f2
  415b55:	cmp    r13b,0x75
  415b59:	mov    r9,r12
  415b5c:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b64:	je     0x416f30
  415b6a:	mov    rcx,QWORD PTR [rsp+0x58]
  415b6f:	lea    rdx,[rip+0x29217]        # 0x43ed8d
  415b76:	call   0x427d70
  415b7b:	jmp    0x4152e1
  415b80:	mov    r8,QWORD PTR [rsp+0x2b0]
  415b88:	mov    rcx,QWORD PTR [rsp+0x58]
  415b8d:	lea    rdx,[rip+0x29234]        # 0x43edc8
  415b94:	mov    r9,r12
  415b97:	call   0x427d70
  415b9c:	jmp    0x4159f2
  415ba1:	movzx  edi,BYTE PTR [rsp+0xb1]
  415ba9:	mov    r9,QWORD PTR [rsp+0x2b0]
  415bb1:	lea    rdx,[rip+0x2923d]        # 0x43edf5
  415bb8:	mov    rcx,QWORD PTR [rsp+0x58]
  415bbd:	mov    QWORD PTR [rsp+0x20],r12
  415bc2:	movsx  r8d,dil
  415bc6:	call   0x427d70
  415bcb:	lea    rax,[rip+0x29230]        # 0x43ee02
  415bd2:	cmp    dil,0x72
  415bd6:	sete   BYTE PTR [rsp+0xb3]
  415bde:	cmp    dil,0x76
  415be2:	mov    QWORD PTR [rsp+0x140],rax
  415bea:	lea    rax,[rip+0x29218]        # 0x43ee09
  415bf1:	sete   BYTE PTR [rsp+0x78]
  415bf6:	cmp    dil,0x6d
  415bfa:	sete   BYTE PTR [rsp+0xb2]
  415c02:	mov    QWORD PTR [rsp+0x148],rax
  415c0a:	mov    eax,edi
  415c0c:	movzx  esi,BYTE PTR [rsp+0xb2]
  415c14:	and    eax,0xfffffffb
  415c17:	cmp    al,0x72
  415c19:	sete   al
  415c1c:	or     eax,esi
  415c1e:	cmp    dil,0x66
  415c22:	sete   BYTE PTR [rsp+0x68]
  415c27:	cmp    dil,0x63
  415c2b:	movzx  esi,BYTE PTR [rsp+0x68]
  415c30:	sete   BYTE PTR [rsp+0x80]
  415c38:	movzx  edi,BYTE PTR [rsp+0x80]
  415c40:	or     edi,esi
  415c42:	or     dil,al
  415c45:	jne    0x417343
  415c4b:	mov    BYTE PTR [rsp+0x70],0x0
  415c50:	mov    r13d,0x2
  415c56:	mov    QWORD PTR [rsp+0x48],0x0
  415c5f:	jmp    0x415368
  415c64:	cmp    DWORD PTR [rbx+0xe4],0x16057
  415c6e:	jle    0x415505
  415c74:	mov    r8d,0x7
  415c7a:	mov    edx,r13d
  415c7d:	mov    rcx,rbp
  415c80:	call   0x427e98
  415c85:	xor    r9d,r9d
  415c88:	xor    r8d,r8d
  415c8b:	mov    rdx,rax
  415c8e:	mov    rcx,r15
  415c91:	call   0x412220
  415c96:	jmp    0x415505
  415c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  415ca0:	mov    edx,r13d
  415ca3:	mov    rcx,rbp
  415ca6:	mov    r8d,0x9
  415cac:	call   0x427e98
  415cb1:	xor    r9d,r9d
  415cb4:	xor    r8d,r8d
  415cb7:	mov    rdx,rax
  415cba:	mov    rcx,r15
  415cbd:	call   0x412220
  415cc2:	jmp    0x415723
  415cc7:	nop    WORD PTR [rax+rax*1+0x0]
  415cd0:	cmp    edi,0x1
  415cd3:	jne    0x415df0
  415cd9:	movzx  r8d,BYTE PTR [rbp+0x0]
  415cde:	cmp    r8b,0x66
  415ce2:	je     0x415e90
  415ce8:	cmp    r8b,0x44
  415cec:	je     0x415e90
  415cf2:	add    esi,0x1
  415cf5:	cmp    r14d,esi
  415cf8:	jg     0x4158d5
  415cfe:	add    edi,0x1
  415d01:	cmp    edi,0x5
  415d04:	jne    0x4158d0
  415d0a:	jmp    0x41592b
  415d0f:	nop
  415d10:	movzx  r8d,BYTE PTR [rbp+0x0]
  415d15:	cmp    r8b,0x66
  415d19:	je     0x415d21
  415d1b:	cmp    r8b,0x44
  415d1f:	jne    0x415cf2
  415d21:	cmp    BYTE PTR [rax],0x74
  415d24:	je     0x41617f
  415d2a:	add    esi,0x1
  415d2d:	cmp    r14d,esi
  415d30:	jle    0x416d54
  415d36:	mov    edx,esi
  415d38:	mov    rcx,r12
  415d3b:	mov    r8d,0x2
  415d41:	call   0x427e98
  415d46:	mov    r8d,0x3
  415d4c:	mov    edx,esi
  415d4e:	mov    rcx,r12
  415d51:	mov    rbp,rax
  415d54:	call   0x427e98
  415d59:	jmp    0x415d10
  415d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d60:	cmp    BYTE PTR [rbp+0x0],0x41
  415d64:	jne    0x415cf2
  415d66:	test   r13b,r13b
  415d69:	jne    0x415d96
  415d6b:	mov    rcx,QWORD PTR [rsp+0x60]
  415d70:	lea    rdx,[rip+0x2a1f0]        # 0x43ff67
  415d77:	call   0x427d70
  415d7c:	nop    DWORD PTR [rax+0x0]
  415d80:	mov    rdx,QWORD PTR [rsp+0xe0]
  415d88:	mov    rcx,r15
  415d8b:	mov    r13d,0x1
  415d91:	call   0x4122c0
  415d96:	mov    r8d,0x1
  415d9c:	mov    edx,esi
  415d9e:	mov    rcx,r12
  415da1:	call   0x427e98
  415da6:	lea    rdx,[rip+0x2a1f4]        # 0x43ffa1
  415dad:	mov    rcx,rax
  415db0:	mov    rbp,rax
  415db3:	call   0x42a3d8
  415db8:	mov    rcx,QWORD PTR [rsp+0x60]
  415dbd:	lea    r8,[rax+0x9]
  415dc1:	test   rax,rax
  415dc4:	lea    rdx,[rip+0x29e63]        # 0x43fc2e
  415dcb:	cmove  r8,rbp
  415dcf:	call   0x427d70
  415dd4:	mov    rdx,QWORD PTR [rsp+0xe0]
  415ddc:	mov    rcx,r15
  415ddf:	call   0x4122c0
  415de4:	jmp    0x415cf2
  415de9:	nop    DWORD PTR [rax+0x0]
  415df0:	movzx  eax,BYTE PTR [rbp+0x0]
  415df4:	cmp    al,0x74
  415df6:	je     0x415e00
  415df8:	cmp    al,0x4f
  415dfa:	jne    0x415cf2
  415e00:	test   r13b,r13b
  415e03:	jne    0x415d96
  415e05:	cmp    edi,0x2
  415e08:	je     0x416188
  415e0e:	jle    0x415ed0
  415e14:	cmp    edi,0x3
  415e17:	je     0x415d6b
  415e1d:	cmp    edi,0x4
  415e20:	jne    0x416169
  415e26:	mov    rcx,QWORD PTR [rsp+0x60]
  415e2b:	lea    rdx,[rip+0x2a14e]        # 0x43ff80
  415e32:	call   0x427d70
  415e37:	jmp    0x415d80
  415e3c:	lea    rsi,[rip+0x28fd5]        # 0x43ee18
  415e43:	movsxd rax,r13d
  415e46:	add    r13d,0x1
  415e4a:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  415e52:	cmp    BYTE PTR [rsp+0x44],0x0
  415e57:	jne    0x415eff
  415e5d:	mov    eax,DWORD PTR [rsp+0x60]
  415e61:	lea    r15,[rsp+0x1f0]
  415e69:	mov    r8,QWORD PTR [rsp+0x100]
  415e71:	lea    rdx,[rsp+0x190]
  415e79:	mov    r9d,r13d
  415e7c:	mov    esi,r13d
  415e7f:	mov    rcx,r15
  415e82:	mov    DWORD PTR [rsp+0x20],eax
  415e86:	call   0x412100
  415e8b:	jmp    0x415432
  415e90:	cmp    BYTE PTR [rax],0x66
  415e93:	je     0x416452
  415e99:	add    esi,0x1
  415e9c:	cmp    r14d,esi
  415e9f:	jle    0x416d54
  415ea5:	mov    edx,esi
  415ea7:	mov    rcx,r12
  415eaa:	mov    r8d,0x2
  415eb0:	call   0x427e98
  415eb5:	mov    r8d,0x3
  415ebb:	mov    edx,esi
  415ebd:	mov    rcx,r12
  415ec0:	mov    rbp,rax
  415ec3:	call   0x427e98
  415ec8:	jmp    0x415cd9
  415ecd:	nop    DWORD PTR [rax]
  415ed0:	cmp    edi,0x1
  415ed3:	jne    0x416169
  415ed9:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  415ee3:	jle    0x416460
  415ee9:	mov    rcx,QWORD PTR [rsp+0x60]
  415eee:	lea    rdx,[rip+0x2a02b]        # 0x43ff20
  415ef5:	call   0x427d70
  415efa:	jmp    0x415d80
  415eff:	lea    rdx,[rip+0x28f2f]        # 0x43ee35
  415f06:	movsxd rax,r13d
  415f09:	lea    esi,[r13+0x1]
  415f0d:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  415f15:	movzx  eax,BYTE PTR [rsp+0xb3]
  415f1d:	or     al,BYTE PTR [rsp+0x68]
  415f21:	jne    0x415f31
  415f23:	cmp    BYTE PTR [rsp+0xb2],0x0
  415f2b:	je     0x4153e7
  415f31:	mov    eax,esi
  415f33:	jmp    0x4153d2
  415f38:	mov    edx,DWORD PTR [rsp+0xb8]
  415f3f:	test   edx,edx
  415f41:	je     0x41664c
  415f47:	cmp    WORD PTR [rsp+0xc0],0x0
  415f50:	jne    0x416a1e
  415f56:	cmp    BYTE PTR [rsp+0x60],0x0
  415f5b:	jne    0x416b32
  415f61:	cmp    BYTE PTR [rsp+0xb1],0x6d
  415f69:	je     0x4157ce
  415f6f:	cmp    BYTE PTR [rsp+0x70],0x0
  415f74:	je     0x4157ce
  415f7a:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  415f84:	mov    r8,QWORD PTR [rsp+0x2c0]
  415f8c:	jle    0x416de8
  415f92:	lea    rdx,[rip+0x29aff]        # 0x43fa98
  415f99:	mov    rcx,r14
  415f9c:	call   0x427d70
  415fa1:	mov    rcx,QWORD PTR [rsp+0xe0]
  415fa9:	xor    edx,edx
  415fab:	xor    esi,esi
  415fad:	call   0x4062b0
  415fb2:	test   rax,rax
  415fb5:	mov    r13,rax
  415fb8:	je     0x4159a1
  415fbe:	mov    rcx,rax
  415fc1:	xor    edi,edi
  415fc3:	call   0x427e70
  415fc8:	test   eax,eax
  415fca:	mov    r12d,eax
  415fcd:	jle    0x416445
  415fd3:	mov    QWORD PTR [rsp+0x80],rbp
  415fdb:	xor    ebp,ebp
  415fdd:	xor    esi,esi
  415fdf:	jmp    0x41600d
  415fe1:	cmp    edi,0x3
  415fe4:	je     0x4160d4
  415fea:	cmp    edi,0x1
  415fed:	je     0x4160ad
  415ff3:	call   0x427e98
  415ff8:	cmp    BYTE PTR [rax],0x4f
  415ffb:	je     0x416088
  416001:	add    esi,0x1
  416004:	cmp    esi,r12d
  416007:	je     0x416431
  41600d:	cmp    edi,0x2
  416010:	mov    r8d,0x2
  416016:	mov    edx,esi
  416018:	mov    rcx,r13
  41601b:	jne    0x415fe1
  41601d:	call   0x427e98
  416022:	cmp    BYTE PTR [rax],0x41
  416025:	jne    0x416001
  416027:	test   bpl,bpl
  41602a:	jne    0x416050
  41602c:	lea    rdx,[rip+0x29bc8]        # 0x43fbfb
  416033:	mov    rcx,r14
  416036:	call   0x427d70
  41603b:	mov    rdx,QWORD PTR [rsp+0xe0]
  416043:	mov    rcx,r15
  416046:	mov    ebp,0x1
  41604b:	call   0x4122c0
  416050:	mov    edx,esi
  416052:	mov    rcx,r13
  416055:	mov    r8d,0x1
  41605b:	call   0x427e98
  416060:	lea    rdx,[rip+0x29bc7]        # 0x43fc2e
  416067:	lea    r8,[rax+0xc]
  41606b:	mov    rcx,r14
  41606e:	call   0x427d70
  416073:	mov    rdx,QWORD PTR [rsp+0xe0]
  41607b:	mov    rcx,r15
  41607e:	call   0x4122c0
  416083:	jmp    0x416001
  416088:	test   bpl,bpl
  41608b:	jne    0x416050
  41608d:	cmp    edi,0x2
  416090:	je     0x41602c
  416092:	cmp    edi,0x3
  416095:	je     0x4160eb
  416097:	cmp    edi,0x1
  41609a:	je     0x4160c0
  41609c:	lea    rdx,[rip+0x29b41]        # 0x43fbe4
  4160a3:	mov    rcx,r14
  4160a6:	call   0x427d70
  4160ab:	jmp    0x41603b
  4160ad:	call   0x427e98
  4160b2:	cmp    BYTE PTR [rax],0x44
  4160b5:	jne    0x416001
  4160bb:	test   bpl,bpl
  4160be:	jne    0x416050
  4160c0:	lea    rdx,[rip+0x29b24]        # 0x43fbeb
  4160c7:	mov    rcx,r14
  4160ca:	call   0x427d70
  4160cf:	jmp    0x41603b
  4160d4:	call   0x427e98
  4160d9:	cmp    BYTE PTR [rax],0x52
  4160dc:	jne    0x416001
  4160e2:	test   bpl,bpl
  4160e5:	jne    0x416050
  4160eb:	lea    rdx,[rip+0x29b1e]        # 0x43fc10
  4160f2:	mov    rcx,r14
  4160f5:	call   0x427d70
  4160fa:	jmp    0x41603b
  4160ff:	lea    rdx,[rip+0x28d44]        # 0x43ee4a
  416106:	movsxd rax,esi
  416109:	add    esi,0x1
  41610c:	mov    QWORD PTR [rsp+rax*8+0x140],rdx
  416114:	jmp    0x415403
  416119:	mov    rcx,QWORD PTR [rsp+0x38]
  41611e:	lea    rdx,[rip+0x28d71]        # 0x43ee96
  416125:	call   0x427dc8
  41612a:	jmp    0x41559f
  41612f:	mov    rcx,QWORD PTR [rsp+0x38]
  416134:	lea    rdx,[rip+0x28d5b]        # 0x43ee96
  41613b:	call   0x427dc8
  416140:	jmp    0x4155f7
  416145:	mov    rcx,QWORD PTR [rsp+0x38]
  41614a:	lea    rdx,[rip+0x28d45]        # 0x43ee96
  416151:	call   0x427dc8
  416156:	jmp    0x41562d
  41615b:	test   r13b,r13b
  41615e:	je     0x415e26
  416164:	jmp    0x415d96
  416169:	mov    rcx,QWORD PTR [rsp+0x60]
  41616e:	lea    rdx,[rip+0x29da1]        # 0x43ff16
  416175:	call   0x427d70
  41617a:	jmp    0x415d80
  41617f:	test   r13b,r13b
  416182:	jne    0x415d96
  416188:	mov    rcx,QWORD PTR [rsp+0x60]
  41618d:	lea    rdx,[rip+0x29db7]        # 0x43ff4b
  416194:	call   0x427d70
  416199:	jmp    0x415d80
  41619e:	lea    rsi,[rip+0x28c79]        # 0x43ee1e
  4161a5:	movsxd rax,r13d
  4161a8:	add    r13d,0x1
  4161ac:	mov    QWORD PTR [rsp+rax*8+0x140],rsi
  4161b4:	jmp    0x415e52
  4161b9:	cmp    BYTE PTR [rsp+0x68],0x0
  4161be:	jne    0x416cd2
  4161c4:	mov    r8,QWORD PTR [rsp+0x2c0]
  4161cc:	lea    rdx,[rip+0x29f2d]        # 0x440100
  4161d3:	mov    rcx,r14
  4161d6:	xor    esi,esi
  4161d8:	call   0x427d70
  4161dd:	mov    rcx,QWORD PTR [rsp+0xe0]
  4161e5:	xor    edx,edx
  4161e7:	call   0x4062b0
  4161ec:	test   rax,rax
  4161ef:	mov    r12,rax
  4161f2:	je     0x4159a1
  4161f8:	mov    r8d,DWORD PTR [rbx+0x8]
  4161fc:	lea    rcx,[rip+0x29f95]        # 0x440198
  416203:	mov    edx,0x8
  416208:	xor    esi,esi
  41620a:	call   0x41c880
  41620f:	mov    rcx,r12
  416212:	mov    r13d,eax
  416215:	call   0x427e70
  41621a:	mov    edi,eax
  41621c:	lea    eax,[rax-0x1]
  41621f:	test   edi,edi
  416221:	jle    0x416292
  416223:	mov    QWORD PTR [rsp+0x68],rbp
  416228:	mov    ebp,eax
  41622a:	nop    WORD PTR [rax+rax*1+0x0]
  416230:	xor    r8d,r8d
  416233:	test   esi,esi
  416235:	je     0x4172f3
  41623b:	mov    edx,esi
  41623d:	mov    rcx,r12
  416240:	call   0x427e98
  416245:	lea    r9,[rip+0x27f23]        # 0x43e16f
  41624c:	lea    rdx,[rip+0x29f55]        # 0x4401a8
  416253:	mov    QWORD PTR [rsp+0x20],rax
  416258:	mov    r8d,r13d
  41625b:	mov    rcx,r14
  41625e:	call   0x427d70
  416263:	cmp    esi,ebp
  416265:	jge    0x416276
  416267:	lea    rdx,[rip+0x29f42]        # 0x4401b0
  41626e:	mov    rcx,r14
  416271:	call   0x427dc8
  416276:	mov    rdx,QWORD PTR [rsp+0xe0]
  41627e:	mov    rcx,r15
  416281:	add    esi,0x1
  416284:	call   0x4122c0
  416289:	cmp    esi,edi
  41628b:	jne    0x416230
  41628d:	mov    rbp,QWORD PTR [rsp+0x68]
  416292:	mov    rcx,r12
  416295:	call   0x427f68
  41629a:	cmp    DWORD PTR [rbx+0xe4],0x139ab
  4162a4:	jle    0x416d38
  4162aa:	mov    r8,QWORD PTR [rsp+0x2c0]
  4162b2:	lea    rdx,[rip+0x29eff]        # 0x4401b8
  4162b9:	mov    rcx,r14
  4162bc:	call   0x427d70
  4162c1:	mov    rcx,QWORD PTR [rsp+0xe0]
  4162c9:	xor    edx,edx
  4162cb:	xor    esi,esi
  4162cd:	call   0x4062b0
  4162d2:	test   rax,rax
  4162d5:	mov    rdi,rax
  4162d8:	je     0x4159a1
  4162de:	mov    rcx,rax
  4162e1:	call   0x427e70
  4162e6:	cmp    BYTE PTR [rsp+0x44],0x0
  4162eb:	mov    r12d,eax
  4162ee:	jne    0x416e4e
  4162f4:	test   eax,eax
  4162f6:	jle    0x41631a
  4162f8:	lea    rdx,[rip+0x2a019]        # 0x440318
  4162ff:	mov    rcx,r14
  416302:	mov    r8d,eax
  416305:	call   0x427d70
  41630a:	mov    rdx,QWORD PTR [rsp+0xe0]
  416312:	mov    rcx,r15
  416315:	call   0x4122c0
  41631a:	mov    rcx,rdi
  41631d:	call   0x427f68
  416322:	cmp    QWORD PTR [rsp+0xc8],0x0
  41632b:	je     0x41640e
  416331:	mov    r8,QWORD PTR [rsp+0xc8]
  416339:	lea    rdx,[rip+0x2a018]        # 0x440358
  416340:	mov    rcx,r14
  416343:	call   0x427d70
  416348:	mov    rdx,QWORD PTR [rsp+0xe0]
  416350:	mov    rcx,r15
  416353:	call   0x4122c0
  416358:	cmp    BYTE PTR [rsp+0xb0],0x0
  416360:	je     0x41640e
  416366:	cmp    BYTE PTR [rsp+0x60],0x0
  41636b:	je     0x4163ea
  41636d:	cmp    BYTE PTR [rsp+0xd3],0x69
  416375:	je     0x4163ea
  416377:	mov    rsi,QWORD PTR [rsp+0x2b0]
  41637f:	lea    rdi,[rip+0x29fea]        # 0x440370
  416386:	mov    ecx,0xb
  41638b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41638d:	jne    0x417174
  416393:	cmp    BYTE PTR [rsp+0xd3],0x6e
  41639b:	je     0x4163ea
  41639d:	movzx  eax,BYTE PTR [rsp+0xd3]
  4163a5:	lea    r9,[rip+0x27dda]        # 0x43e186
  4163ac:	cmp    al,0x66
  4163ae:	je     0x4163c4
  4163b0:	cmp    al,0x6e
  4163b2:	lea    r9,[rip+0x27da9]        # 0x43e162
  4163b9:	lea    rax,[rip+0x27dcb]        # 0x43e18b
  4163c0:	cmove  r9,rax
  4163c4:	lea    rdx,[rip+0x29dd6]        # 0x4401a1
  4163cb:	lea    r8,[rip+0x29fa9]        # 0x44037b
  4163d2:	mov    rcx,r14
  4163d5:	call   0x427d70
  4163da:	mov    rdx,QWORD PTR [rsp+0xe0]
  4163e2:	mov    rcx,r15
  4163e5:	call   0x4122c0
  4163ea:	cmp    BYTE PTR [rsp+0xb1],0x6d
  4163f2:	je     0x41640e
  4163f4:	mov    eax,DWORD PTR [rsp+0xd4]
  4163fb:	test   eax,eax
  4163fd:	jne    0x41640e
  4163ff:	lea    rdx,[rip+0x29f86]        # 0x44038c
  416406:	mov    rcx,r15
  416409:	call   0x4122c0
  41640e:	movsx  edx,BYTE PTR [rsp+0xb1]
  416416:	mov    r8d,DWORD PTR [rsp+0xb4]
  41641e:	mov    r9d,0x1
  416424:	mov    rcx,r15
  416427:	call   0x4148b0
  41642c:	jmp    0x415961
  416431:	add    edi,0x1
  416434:	cmp    edi,0x4
  416437:	jne    0x415fdb
  41643d:	mov    rbp,QWORD PTR [rsp+0x80]
  416445:	mov    rcx,r13
  416448:	call   0x427f68
  41644d:	jmp    0x4157ce
  416452:	test   r13b,r13b
  416455:	je     0x415ed9
  41645b:	jmp    0x415d96
  416460:	mov    rcx,QWORD PTR [rsp+0x60]
  416465:	lea    rdx,[rip+0x29acc]        # 0x43ff38
  41646c:	call   0x427d70
  416471:	jmp    0x415d80
  416476:	mov    r8,QWORD PTR [rsp+0x2c0]
  41647e:	lea    rdx,[rip+0x289d3]        # 0x43ee58
  416485:	mov    rcx,r14
  416488:	call   0x427d70
  41648d:	mov    rcx,QWORD PTR [rsp+0xe0]
  416495:	xor    edx,edx
  416497:	call   0x4062b0
  41649c:	test   rax,rax
  41649f:	mov    rsi,rax
  4164a2:	je     0x416dfc
  4164a8:	mov    rcx,rax
  4164ab:	call   0x427e70
  4164b0:	test   eax,eax
  4164b2:	mov    QWORD PTR [rsp+0x78],0x0
  4164bb:	jle    0x4164d7
  4164bd:	xor    r8d,r8d
  4164c0:	xor    edx,edx
  4164c2:	mov    rcx,rsi
  4164c5:	call   0x427e98
  4164ca:	mov    rcx,rax
  4164cd:	call   0x424900
  4164d2:	mov    QWORD PTR [rsp+0x78],rax
  4164d7:	mov    rcx,rsi
  4164da:	call   0x427f68
  4164df:	mov    BYTE PTR [rsp+0xb0],r12b
  4164e7:	jmp    0x415496
  4164ec:	lea    rdx,[rip+0x289c5]        # 0x43eeb8
  4164f3:	mov    rcx,r14
  4164f6:	call   0x427d70
  4164fb:	cmp    DWORD PTR [rbx+0xe4],0x13947
  416505:	jle    0x416dd4
  41650b:	lea    rdx,[rip+0x289df]        # 0x43eef1
  416512:	mov    rcx,r14
  416515:	call   0x427dc8
  41651a:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  416524:	jle    0x416dc0
  41652a:	lea    rdx,[rip+0x289e7]        # 0x43ef18
  416531:	mov    rcx,r14
  416534:	call   0x427dc8
  416539:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  416543:	jle    0x416dac
  416549:	lea    rdx,[rip+0x28b81]        # 0x43f0d1
  416550:	mov    rcx,r14
  416553:	call   0x427dd8
  416558:	mov    r8,QWORD PTR [rsp+0x2c0]
  416560:	lea    rdx,[rip+0x28b99]        # 0x43f100
  416567:	mov    rcx,r14
  41656a:	xor    esi,esi
  41656c:	call   0x427dd8
  416571:	mov    rcx,QWORD PTR [rsp+0xe0]
  416579:	xor    edx,edx
  41657b:	call   0x4062b0
  416580:	test   rax,rax
  416583:	mov    r12,rax
  416586:	je     0x4159a1
  41658c:	mov    rcx,rax
  41658f:	call   0x427e70
  416594:	cmp    eax,0x1
  416597:	je     0x416f46
  41659d:	mov    rcx,r12
  4165a0:	call   0x427f68
  4165a5:	jmp    0x4159a1
  4165aa:	mov    r8,QWORD PTR [rsp+0x2c0]
  4165b2:	lea    rdx,[rip+0x2968f]        # 0x43fc48
  4165b9:	mov    rcx,r14
  4165bc:	xor    esi,esi
  4165be:	call   0x427d70
  4165c3:	mov    rcx,QWORD PTR [rsp+0xe0]
  4165cb:	xor    edx,edx
  4165cd:	call   0x4062b0
  4165d2:	test   rax,rax
  4165d5:	mov    rdi,rax
  4165d8:	je     0x4159a1
  4165de:	mov    rcx,rax
  4165e1:	call   0x427e70
  4165e6:	test   eax,eax
  4165e8:	jle    0x41663f
  4165ea:	lea    rdx,[rip+0x295f3]        # 0x43fbe4
  4165f1:	mov    rcx,r15
  4165f4:	xor    esi,esi
  4165f6:	call   0x4122c0
  4165fb:	jmp    0x416633
  4165fd:	mov    edx,esi
  4165ff:	mov    r8d,0x1
  416605:	mov    rcx,rdi
  416608:	call   0x427e98
  41660d:	lea    rdx,[rip+0x2918a]        # 0x43f79e
  416614:	lea    r8,[rax+0xc]
  416618:	mov    rcx,r14
  41661b:	add    esi,0x1
  41661e:	call   0x427d70
  416623:	mov    rdx,QWORD PTR [rsp+0xe0]
  41662b:	mov    rcx,r15
  41662e:	call   0x4122c0
  416633:	mov    rcx,rdi
  416636:	call   0x427e70
  41663b:	cmp    esi,eax
  41663d:	jl     0x4165fd
  41663f:	mov    rcx,rdi
  416642:	call   0x427f68
  416647:	jmp    0x4157fd
  41664c:	lea    rdx,[rip+0x28e4d]        # 0x43f4a0
  416653:	mov    rcx,r14
  416656:	call   0x427d70
  41665b:	cmp    DWORD PTR [rbx+0xe4],0x13947
  416665:	jle    0x416d98
  41666b:	lea    rdx,[rip+0x28e73]        # 0x43f4e5
  416672:	mov    rcx,r14
  416675:	call   0x427dc8
  41667a:	lea    rdx,[rip+0x28e8f]        # 0x43f510
  416681:	mov    rcx,r14
  416684:	call   0x427dc8
  416689:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  416693:	jle    0x416d84
  416699:	lea    rdx,[rip+0x28ea8]        # 0x43f548
  4166a0:	mov    rcx,r14
  4166a3:	call   0x427dc8
  4166a8:	cmp    DWORD PTR [rbx+0xe4],0x1611f
  4166b2:	jle    0x416d70
  4166b8:	lea    rdx,[rip+0x28f36]        # 0x43f5f5
  4166bf:	mov    rcx,r14
  4166c2:	call   0x427dc8
  4166c7:	cmp    DWORD PTR [rbx+0xe4],0x1387f
  4166d1:	jg     0x416ef0
  4166d7:	lea    rdx,[rip+0x28f5a]        # 0x43f638
  4166de:	mov    rcx,r14
  4166e1:	call   0x427dc8
  4166e6:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  4166f0:	jg     0x416e0c
  4166f6:	mov    r8,QWORD PTR [rsp+0x2c0]
  4166fe:	lea    rdx,[rip+0x29003]        # 0x43f708
  416705:	mov    rcx,r14
  416708:	xor    esi,esi
  41670a:	call   0x427dd8
  41670f:	mov    rcx,QWORD PTR [rsp+0xe0]
  416717:	xor    edx,edx
  416719:	call   0x4062b0
  41671e:	test   rax,rax
  416721:	mov    r13,rax
  416724:	je     0x4159a1
  41672a:	mov    rcx,rax
  41672d:	call   0x427e70
  416732:	test   eax,eax
  416734:	mov    edi,eax
  416736:	jle    0x416cc5
  41673c:	lea    rdx,[rip+0x29047]        # 0x43f78a
  416743:	mov    rcx,r15
  416746:	xor    r12d,r12d
  416749:	call   0x4122c0
  41674e:	mov    QWORD PTR [rsp+0x80],rbp
  416756:	mov    ebp,edi
  416758:	jmp    0x416825
  41675d:	mov    r8d,0x6
  416763:	mov    edx,r12d
  416766:	mov    rcx,r13
  416769:	call   0x427e98
  41676e:	lea    rdx,[rip+0x29029]        # 0x43f79e
  416775:	mov    r8,rax
  416778:	mov    rcx,r14
  41677b:	call   0x427dd8
  416780:	mov    rcx,r13
  416783:	mov    r8d,0x3
  416789:	mov    edx,r12d
  41678c:	lea    rdi,[rip+0x280e5]        # 0x43e878
  416793:	call   0x427e98
  416798:	mov    ecx,0x2
  41679d:	mov    rsi,rax
  4167a0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167a2:	je     0x4169a6
  4167a8:	mov    rcx,r13
  4167ab:	mov    r8d,0x4
  4167b1:	mov    edx,r12d
  4167b4:	lea    rdi,[rip+0x280bd]        # 0x43e878
  4167bb:	call   0x427e98
  4167c0:	mov    ecx,0x2
  4167c5:	mov    rsi,rax
  4167c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167ca:	jne    0x416992
  4167d0:	mov    rcx,r13
  4167d3:	mov    r8d,0xa
  4167d9:	mov    edx,r12d
  4167dc:	lea    rdi,[rip+0x28095]        # 0x43e878
  4167e3:	call   0x427e98
  4167e8:	mov    ecx,0x2
  4167ed:	mov    rsi,rax
  4167f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4167f2:	je     0x41697e
  4167f8:	mov    rdx,QWORD PTR [rsp+0xe0]
  416800:	mov    rcx,r15
  416803:	call   0x4122c0
  416808:	cmp    DWORD PTR [rbx+0xe4],0x1387f
  416812:	jg     0x416945
  416818:	add    r12d,0x1
  41681c:	cmp    r12d,ebp
  41681f:	je     0x416cbd
  416825:	xor    r8d,r8d
  416828:	mov    edx,r12d
  41682b:	mov    rcx,r13
  41682e:	call   0x427e98
  416833:	lea    rdx,[rip+0x28f59]        # 0x43f793
  41683a:	mov    r8,rax
  41683d:	mov    rcx,r14
  416840:	lea    rdi,[rip+0x28f55]        # 0x43f79c
  416847:	call   0x427d70
  41684c:	mov    rcx,r13
  41684f:	mov    r8d,0x7
  416855:	mov    edx,r12d
  416858:	call   0x427e98
  41685d:	mov    ecx,0x2
  416862:	mov    rsi,rax
  416865:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416867:	je     0x41675d
  41686d:	mov    rcx,r13
  416870:	mov    r8d,0x1
  416876:	mov    edx,r12d
  416879:	lea    rdi,[rip+0x27ff8]        # 0x43e878
  416880:	call   0x427e98
  416885:	mov    ecx,0x2
  41688a:	mov    rsi,rax
  41688d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41688f:	jne    0x4169ba
  416895:	lea    rdx,[rip+0x28f06]        # 0x43f7a2
  41689c:	mov    rcx,r14
  41689f:	call   0x427dc8
  4168a4:	mov    r8d,0x5
  4168aa:	mov    edx,r12d
  4168ad:	mov    rcx,r13
  4168b0:	call   0x427e98
  4168b5:	lea    rdx,[rip+0x28f13]        # 0x43f7cf
  4168bc:	mov    rcx,rax
  4168bf:	mov    rsi,rax
  4168c2:	lea    rdi,[rip+0x27faf]        # 0x43e878
  4168c9:	call   0x42a3d8
  4168ce:	lea    r8,[rax+0x7]
  4168d2:	test   rax,rax
  4168d5:	lea    rdx,[rip+0x28ec2]        # 0x43f79e
  4168dc:	mov    rcx,r14
  4168df:	cmove  r8,rsi
  4168e3:	call   0x427dd8
  4168e8:	mov    rcx,r13
  4168eb:	mov    r8d,0x8
  4168f1:	mov    edx,r12d
  4168f4:	call   0x427e98
  4168f9:	mov    ecx,0x2
  4168fe:	mov    rsi,rax
  416901:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416903:	je     0x416d5c
  416909:	mov    rcx,r13
  41690c:	mov    r8d,0x9
  416912:	mov    edx,r12d
  416915:	lea    rdi,[rip+0x27f5c]        # 0x43e878
  41691c:	call   0x427e98
  416921:	mov    ecx,0x2
  416926:	mov    rsi,rax
  416929:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41692b:	jne    0x416780
  416931:	lea    rdx,[rip+0x28eab]        # 0x43f7e3
  416938:	mov    rcx,r14
  41693b:	call   0x427dc8
  416940:	jmp    0x416780
  416945:	mov    edx,r12d
  416948:	mov    rcx,r13
  41694b:	mov    r8d,0xb
  416951:	call   0x427e98
  416956:	xor    edx,edx
  416958:	mov    r8d,0xa
  41695e:	mov    rcx,rax
  416961:	call   0x42a3c8
  416966:	xor    r9d,r9d
  416969:	mov    r8d,eax
  41696c:	mov    edx,0x69
  416971:	mov    rcx,r15
  416974:	call   0x4148b0
  416979:	jmp    0x416818
  41697e:	lea    rdx,[rip+0x28e84]        # 0x43f809
  416985:	mov    rcx,r14
  416988:	call   0x427dd8
  41698d:	jmp    0x4167f8
  416992:	lea    rdx,[rip+0x28e67]        # 0x43f800
  416999:	mov    rcx,r14
  41699c:	call   0x427dc8
  4169a1:	jmp    0x4167d0
  4169a6:	lea    rdx,[rip+0x28e4a]        # 0x43f7f7
  4169ad:	mov    rcx,r14
  4169b0:	call   0x427dc8
  4169b5:	jmp    0x4167a8
  4169ba:	mov    rcx,r13
  4169bd:	mov    r8d,0x2
  4169c3:	mov    edx,r12d
  4169c6:	lea    rdi,[rip+0x27eab]        # 0x43e878
  4169cd:	call   0x427e98
  4169d2:	mov    ecx,0x2
  4169d7:	mov    rsi,rax
  4169da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4169dc:	jne    0x4168a4
  4169e2:	mov    rcx,r13
  4169e5:	mov    r8d,0x7
  4169eb:	mov    edx,r12d
  4169ee:	lea    rdi,[rip+0x28dbb]        # 0x43f7b0
  4169f5:	call   0x427e98
  4169fa:	mov    ecx,0x2
  4169ff:	mov    rsi,rax
  416a02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416a04:	jne    0x4171ff
  416a0a:	lea    rdx,[rip+0x28da1]        # 0x43f7b2
  416a11:	mov    rcx,r14
  416a14:	call   0x427dc8
  416a19:	jmp    0x4168a4
  416a1e:	mov    r8,QWORD PTR [rsp+0x2c0]
  416a26:	lea    rdx,[rip+0x28df3]        # 0x43f820
  416a2d:	mov    rcx,r14
  416a30:	xor    esi,esi
  416a32:	call   0x427d70
  416a37:	mov    rcx,QWORD PTR [rsp+0xe0]
  416a3f:	xor    edx,edx
  416a41:	call   0x4062b0
  416a46:	test   rax,rax
  416a49:	mov    rdi,rax
  416a4c:	je     0x4159a1
  416a52:	mov    rcx,rax
  416a55:	call   0x427e70
  416a5a:	test   eax,eax
  416a5c:	mov    r12d,eax
  416a5f:	jle    0x416abf
  416a61:	lea    rdx,[rip+0x28e4f]        # 0x43f8b7
  416a68:	mov    rcx,r15
  416a6b:	xor    esi,esi
  416a6d:	call   0x4122c0
  416a72:	mov    edx,esi
  416a74:	mov    r8d,0x1
  416a7a:	mov    rcx,rdi
  416a7d:	call   0x427e98
  416a82:	xor    r8d,r8d
  416a85:	mov    edx,esi
  416a87:	mov    rcx,rdi
  416a8a:	mov    r13,rax
  416a8d:	add    esi,0x1
  416a90:	call   0x427e98
  416a95:	lea    rdx,[rip+0x28e2e]        # 0x43f8ca
  416a9c:	mov    r8,rax
  416a9f:	mov    r9,r13
  416aa2:	mov    rcx,r14
  416aa5:	call   0x427d70
  416aaa:	mov    rdx,QWORD PTR [rsp+0xe0]
  416ab2:	mov    rcx,r15
  416ab5:	call   0x4122c0
  416aba:	cmp    esi,r12d
  416abd:	jne    0x416a72
  416abf:	mov    rcx,rdi
  416ac2:	call   0x427f68
  416ac7:	jmp    0x415f56
  416acc:	lea    rdx,[rip+0x27cf5]        # 0x43e7c8
  416ad3:	mov    rcx,r14
  416ad6:	call   0x427d70
  416adb:	jmp    0x414b12
  416ae0:	mov    r8,QWORD PTR [rsp+0x2c0]
  416ae8:	lea    rdx,[rip+0x287a1]        # 0x43f290
  416aef:	mov    rcx,r14
  416af2:	xor    esi,esi
  416af4:	call   0x427d70
  416af9:	mov    rcx,QWORD PTR [rsp+0xe0]
  416b01:	xor    edx,edx
  416b03:	call   0x4062b0
  416b08:	test   rax,rax
  416b0b:	mov    rdi,rax
  416b0e:	je     0x4159a1
  416b14:	mov    rcx,rax
  416b17:	call   0x427e70
  416b1c:	cmp    eax,0x1
  416b1f:	je     0x41726e
  416b25:	mov    rcx,rdi
  416b28:	call   0x427f68
  416b2d:	jmp    0x4157ce
  416b32:	mov    r8,QWORD PTR [rsp+0x2c0]
  416b3a:	lea    rdx,[rip+0x28d97]        # 0x43f8d8
  416b41:	mov    rcx,r14
  416b44:	xor    esi,esi
  416b46:	call   0x427d70
  416b4b:	mov    rcx,QWORD PTR [rsp+0xe0]
  416b53:	xor    edx,edx
  416b55:	call   0x4062b0
  416b5a:	test   rax,rax
  416b5d:	mov    rdi,rax
  416b60:	je     0x4159a1
  416b66:	mov    rcx,rax
  416b69:	call   0x427e70
  416b6e:	test   eax,eax
  416b70:	mov    r12d,eax
  416b73:	jle    0x416bd3
  416b75:	lea    rdx,[rip+0x28ec5]        # 0x43fa41
  416b7c:	mov    rcx,r15
  416b7f:	xor    esi,esi
  416b81:	call   0x4122c0
  416b86:	mov    edx,esi
  416b88:	mov    r8d,0x1
  416b8e:	mov    rcx,rdi
  416b91:	call   0x427e98
  416b96:	xor    r8d,r8d
  416b99:	mov    edx,esi
  416b9b:	mov    rcx,rdi
  416b9e:	mov    r13,rax
  416ba1:	add    esi,0x1
  416ba4:	call   0x427e98
  416ba9:	lea    rdx,[rip+0x28d1a]        # 0x43f8ca
  416bb0:	mov    r8,rax
  416bb3:	mov    r9,r13
  416bb6:	mov    rcx,r14
  416bb9:	call   0x427d70
  416bbe:	mov    rdx,QWORD PTR [rsp+0xe0]
  416bc6:	mov    rcx,r15
  416bc9:	call   0x4122c0
  416bce:	cmp    esi,r12d
  416bd1:	jne    0x416b86
  416bd3:	mov    rcx,rdi
  416bd6:	xor    esi,esi
  416bd8:	call   0x427f68
  416bdd:	mov    r8,QWORD PTR [rsp+0x2c0]
  416be5:	lea    rdx,[rip+0x28d94]        # 0x43f980
  416bec:	mov    rcx,r14
  416bef:	call   0x427d70
  416bf4:	mov    rcx,QWORD PTR [rsp+0xe0]
  416bfc:	xor    edx,edx
  416bfe:	call   0x4062b0
  416c03:	test   rax,rax
  416c06:	mov    rdi,rax
  416c09:	je     0x4159a1
  416c0f:	mov    rcx,rax
  416c12:	call   0x427e70
  416c17:	test   eax,eax
  416c19:	mov    DWORD PTR [rsp+0x80],eax
  416c20:	jle    0x416c9c
  416c22:	lea    rdx,[rip+0x28e31]        # 0x43fa5a
  416c29:	mov    rcx,r15
  416c2c:	xor    esi,esi
  416c2e:	call   0x4122c0
  416c33:	mov    edx,esi
  416c35:	mov    r8d,0x2
  416c3b:	mov    rcx,rdi
  416c3e:	call   0x427e98
  416c43:	xor    r8d,r8d
  416c46:	mov    edx,esi
  416c48:	mov    rcx,rdi
  416c4b:	mov    r12,rax
  416c4e:	call   0x427e98
  416c53:	mov    edx,esi
  416c55:	mov    r8d,0x1
  416c5b:	mov    rcx,rdi
  416c5e:	mov    r13,rax
  416c61:	add    esi,0x1
  416c64:	call   0x427e98
  416c69:	lea    rdx,[rip+0x28e00]        # 0x43fa70
  416c70:	mov    r8,rax
  416c73:	mov    r9,r13
  416c76:	mov    rcx,r14
  416c79:	mov    QWORD PTR [rsp+0x20],r12
  416c7e:	call   0x427d70
  416c83:	mov    rdx,QWORD PTR [rsp+0xe0]
  416c8b:	mov    rcx,r15
  416c8e:	call   0x4122c0
  416c93:	cmp    esi,DWORD PTR [rsp+0x80]
  416c9a:	jne    0x416c33
  416c9c:	mov    rcx,rdi
  416c9f:	call   0x427f68
  416ca4:	jmp    0x415f61
  416ca9:	lea    rdx,[rip+0x29158]        # 0x43fe08
  416cb0:	mov    rcx,r14
  416cb3:	call   0x427dc8
  416cb8:	jmp    0x415888
  416cbd:	mov    rbp,QWORD PTR [rsp+0x80]
  416cc5:	mov    rcx,r13
  416cc8:	call   0x427f68
  416ccd:	jmp    0x415f47
  416cd2:	mov    r8,QWORD PTR [rsp+0x2c0]
  416cda:	lea    rdx,[rip+0x292cf]        # 0x43ffb0
  416ce1:	mov    rcx,r14
  416ce4:	xor    esi,esi
  416ce6:	call   0x427d70
  416ceb:	mov    rcx,QWORD PTR [rsp+0xe0]
  416cf3:	xor    edx,edx
  416cf5:	call   0x4062b0
  416cfa:	test   rax,rax
  416cfd:	mov    rdi,rax
  416d00:	je     0x4159a1
  416d06:	mov    rcx,rax
  416d09:	call   0x427e70
  416d0e:	cmp    eax,0x1
  416d11:	je     0x417187
  416d17:	mov    rcx,rdi
  416d1a:	call   0x427f68
  416d1f:	jmp    0x4159a1
  416d24:	lea    rdx,[rip+0x29055]        # 0x43fd80
  416d2b:	mov    rcx,r14
  416d2e:	call   0x427dd8
  416d33:	jmp    0x415888
  416d38:	mov    r8,QWORD PTR [rsp+0x2c0]
  416d40:	lea    rdx,[rip+0x29531]        # 0x440278
  416d47:	mov    rcx,r14
  416d4a:	call   0x427d70
  416d4f:	jmp    0x4162c1
  416d54:	add    edi,0x1
  416d57:	jmp    0x4158d0
  416d5c:	lea    rdx,[rip+0x28a74]        # 0x43f7d7
  416d63:	mov    rcx,r14
  416d66:	call   0x427dc8
  416d6b:	jmp    0x416909
  416d70:	lea    rdx,[rip+0x28891]        # 0x43f608
  416d77:	mov    rcx,r14
  416d7a:	call   0x427dc8
  416d7f:	jmp    0x4166c7
  416d84:	lea    rdx,[rip+0x28815]        # 0x43f5a0
  416d8b:	mov    rcx,r14
  416d8e:	call   0x427dc8
  416d93:	jmp    0x4166a8
  416d98:	lea    rdx,[rip+0x28755]        # 0x43f4f4
  416d9f:	mov    rcx,r14
  416da2:	call   0x427dc8
  416da7:	jmp    0x41667a
  416dac:	lea    rdx,[rip+0x28331]        # 0x43f0e4
  416db3:	mov    rcx,r14
  416db6:	call   0x427dd8
  416dbb:	jmp    0x416558
  416dc0:	lea    rdx,[rip+0x282d9]        # 0x43f0a0
  416dc7:	mov    rcx,r14
  416dca:	call   0x427dc8
  416dcf:	jmp    0x416539
  416dd4:	lea    rdx,[rip+0x28125]        # 0x43ef00
  416ddb:	mov    rcx,r14
  416dde:	call   0x427dc8
  416de3:	jmp    0x41651a
  416de8:	lea    rdx,[rip+0x28d49]        # 0x43fb38
  416def:	mov    rcx,r14
  416df2:	call   0x427d70
  416df7:	jmp    0x415fa1
  416dfc:	xor    esi,esi
  416dfe:	mov    QWORD PTR [rsp+0x78],0x0
  416e07:	jmp    0x4159a1
  416e0c:	lea    rdx,[rip+0x28875]        # 0x43f688
  416e13:	mov    rcx,r14
  416e16:	call   0x427dc8
  416e1b:	jmp    0x4166f6
  416e20:	lea    r8,[rip+0x29573]        # 0x44039a
  416e27:	lea    rdx,[rip+0x29373]        # 0x4401a1
  416e2e:	mov    rcx,r14
  416e31:	mov    r9,rax
  416e34:	call   0x427d70
  416e39:	mov    rdx,QWORD PTR [rsp+0xe0]
  416e41:	mov    rcx,r15
  416e44:	call   0x4122c0
  416e49:	jmp    0x415981
  416e4e:	mov    r8d,DWORD PTR [rbx+0x8]
  416e52:	lea    rcx,[rip+0x294f2]        # 0x44034b
  416e59:	mov    edx,0xc
  416e5e:	xor    esi,esi
  416e60:	call   0x41c880
  416e65:	mov    r13d,eax
  416e68:	lea    eax,[r12-0x1]
  416e6d:	test   r12d,r12d
  416e70:	mov    DWORD PTR [rsp+0x44],eax
  416e74:	jle    0x416ed4
  416e76:	xor    r8d,r8d
  416e79:	test   esi,esi
  416e7b:	je     0x41731b
  416e81:	mov    edx,esi
  416e83:	mov    rcx,rdi
  416e86:	call   0x427e98
  416e8b:	lea    r9,[rip+0x272dd]        # 0x43e16f
  416e92:	lea    rdx,[rip+0x2930f]        # 0x4401a8
  416e99:	mov    QWORD PTR [rsp+0x20],rax
  416e9e:	mov    r8d,r13d
  416ea1:	mov    rcx,r14
  416ea4:	call   0x427d70
  416ea9:	cmp    DWORD PTR [rsp+0x44],esi
  416ead:	jle    0x416ebc
  416eaf:	mov    edx,0x2c
  416eb4:	mov    rcx,r14
  416eb7:	call   0x427dd0
  416ebc:	mov    rdx,QWORD PTR [rsp+0xe0]
  416ec4:	mov    rcx,r15
  416ec7:	add    esi,0x1
  416eca:	call   0x4122c0
  416ecf:	cmp    esi,r12d
  416ed2:	jne    0x416e76
  416ed4:	mov    rcx,rdi
  416ed7:	call   0x427f68
  416edc:	cmp    QWORD PTR [rsp+0xc8],0x0
  416ee5:	jne    0x416331
  416eeb:	jmp    0x416358
  416ef0:	lea    rdx,[rip+0x2872b]        # 0x43f622
  416ef7:	mov    rcx,r14
  416efa:	call   0x427dc8
  416eff:	jmp    0x4166d7
  416f04:	mov    rcx,QWORD PTR [rsp+0x58]
  416f09:	lea    rdx,[rip+0x27de5]        # 0x43ecf5
  416f10:	call   0x427d70
  416f15:	jmp    0x4159f2
  416f1a:	mov    rcx,QWORD PTR [rsp+0x58]
  416f1f:	lea    rdx,[rip+0x27e02]        # 0x43ed28
  416f26:	call   0x427d70
  416f2b:	jmp    0x4159f2
  416f30:	mov    rcx,QWORD PTR [rsp+0x58]
  416f35:	lea    rdx,[rip+0x27e3a]        # 0x43ed76
  416f3c:	call   0x427d70
  416f41:	jmp    0x4152e1
  416f46:	xor    r8d,r8d
  416f49:	xor    edx,edx
  416f4b:	mov    rcx,r12
  416f4e:	call   0x427e98
  416f53:	xor    edx,edx
  416f55:	mov    r8d,0x1
  416f5b:	mov    rcx,r12
  416f5e:	mov    QWORD PTR [rsp+0x80],rax
  416f66:	lea    rdi,[rip+0x2790b]        # 0x43e878
  416f6d:	call   0x427e98
  416f72:	xor    edx,edx
  416f74:	mov    r8d,0x2
  416f7a:	mov    rcx,r12
  416f7d:	mov    rsi,rax
  416f80:	call   0x427e98
  416f85:	xor    edx,edx
  416f87:	mov    r8d,0x3
  416f8d:	mov    rcx,r12
  416f90:	mov    QWORD PTR [rsp+0x88],rax
  416f98:	call   0x427e98
  416f9d:	xor    edx,edx
  416f9f:	mov    r8d,0x4
  416fa5:	mov    rcx,r12
  416fa8:	mov    QWORD PTR [rsp+0x90],rax
  416fb0:	call   0x427e98
  416fb5:	xor    edx,edx
  416fb7:	mov    r8d,0x5
  416fbd:	mov    rcx,r12
  416fc0:	mov    QWORD PTR [rsp+0x98],rax
  416fc8:	call   0x427e98
  416fcd:	xor    edx,edx
  416fcf:	mov    r8d,0x6
  416fd5:	mov    rcx,r12
  416fd8:	mov    QWORD PTR [rsp+0xa0],rax
  416fe0:	call   0x427e98
  416fe5:	xor    edx,edx
  416fe7:	mov    r8d,0x7
  416fed:	mov    rcx,r12
  416ff0:	mov    QWORD PTR [rsp+0xb8],rax
  416ff8:	call   0x427e98
  416ffd:	xor    edx,edx
  416fff:	mov    r8d,0x8
  417005:	mov    rcx,r12
  417008:	mov    QWORD PTR [rsp+0xc0],rax
  417010:	call   0x427e98
  417015:	xor    edx,edx
  417017:	mov    rcx,r12
  41701a:	mov    r8d,0x9
  417020:	mov    QWORD PTR [rsp+0xd8],rax
  417028:	call   0x427e98
  41702d:	mov    ecx,0x2
  417032:	mov    r13,rax
  417035:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417037:	je     0x4172dd
  41703d:	mov    rsi,QWORD PTR [rsp+0x80]
  417045:	lea    rdi,[rip+0x2782c]        # 0x43e878
  41704c:	mov    ecx,0x2
  417051:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417053:	jne    0x4172ce
  417059:	mov    rcx,QWORD PTR [rsp+0x38]
  41705e:	lea    rdx,[rip+0x281ac]        # 0x43f211
  417065:	call   0x427d70
  41706a:	mov    rdi,QWORD PTR [rsp+0x38]
  41706f:	mov    r8,QWORD PTR [rsp+0xc0]
  417077:	lea    rdx,[rip+0x2819c]        # 0x43f21a
  41707e:	mov    rcx,rdi
  417081:	call   0x427dd8
  417086:	mov    r9,QWORD PTR [rsp+0xd8]
  41708e:	mov    r8,QWORD PTR [rsp+0x2b0]
  417096:	lea    rdx,[rip+0x28182]        # 0x43f21f
  41709d:	mov    rcx,rdi
  4170a0:	call   0x427dd8
  4170a5:	cmp    BYTE PTR [r13+0x0],0x0
  4170aa:	jne    0x417255
  4170b0:	mov    rsi,QWORD PTR [rsp+0x88]
  4170b8:	lea    rdi,[rip+0x277b9]        # 0x43e878
  4170bf:	mov    ecx,0x2
  4170c4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170c6:	je     0x41723f
  4170cc:	mov    rsi,QWORD PTR [rsp+0x90]
  4170d4:	lea    rdi,[rip+0x2779d]        # 0x43e878
  4170db:	mov    ecx,0x2
  4170e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170e2:	jne    0x417229
  4170e8:	mov    rsi,QWORD PTR [rsp+0x98]
  4170f0:	lea    rdi,[rip+0x27781]        # 0x43e878
  4170f7:	mov    ecx,0x2
  4170fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4170fe:	je     0x417213
  417104:	mov    rsi,QWORD PTR [rsp+0xa0]
  41710c:	lea    rdi,[rip+0x27765]        # 0x43e878
  417113:	mov    ecx,0x2
  417118:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41711a:	je     0x4172b8
  417120:	mov    rsi,QWORD PTR [rsp+0xb8]
  417128:	lea    rdi,[rip+0x27749]        # 0x43e878
  41712f:	mov    ecx,0x2
  417134:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417136:	je     0x4172a2
  41713c:	mov    rdx,QWORD PTR [rsp+0x120]
  417144:	mov    rcx,r15
  417147:	call   0x4122c0
  41714c:	mov    r8d,DWORD PTR [rsp+0xb4]
  417154:	mov    rcx,r15
  417157:	mov    r9d,0x1
  41715d:	mov    edx,0x69
  417162:	call   0x4148b0
  417167:	mov    rcx,r12
  41716a:	call   0x427f68
  41716f:	jmp    0x4157ce
  417174:	cmp    BYTE PTR [rsp+0xd3],0x64
  41717c:	jne    0x41639d
  417182:	jmp    0x4163ea
  417187:	xor    r8d,r8d
  41718a:	xor    edx,edx
  41718c:	mov    rcx,rdi
  41718f:	call   0x427e98
  417194:	lea    rdx,[rip+0x28f43]        # 0x4400de
  41719b:	mov    r8,rax
  41719e:	mov    rcx,r14
  4171a1:	call   0x427d70
  4171a6:	mov    rdx,QWORD PTR [rsp+0xe0]
  4171ae:	mov    rcx,r15
  4171b1:	call   0x4122c0
  4171b6:	mov    r8d,0x1
  4171bc:	xor    edx,edx
  4171be:	mov    rcx,rdi
  4171c1:	call   0x427e98
  4171c6:	test   rax,rax
  4171c9:	mov    r8,rax
  4171cc:	je     0x4171f2
  4171ce:	cmp    BYTE PTR [rax],0x0
  4171d1:	je     0x4171f2
  4171d3:	lea    rdx,[rip+0x28f0f]        # 0x4400e9
  4171da:	mov    rcx,r14
  4171dd:	call   0x427d70
  4171e2:	mov    rdx,QWORD PTR [rsp+0xe0]
  4171ea:	mov    rcx,r15
  4171ed:	call   0x4122c0
  4171f2:	mov    rcx,rdi
  4171f5:	call   0x427f68
  4171fa:	jmp    0x4161c4
  4171ff:	lea    rdx,[rip+0x285c0]        # 0x43f7c6
  417206:	mov    rcx,r14
  417209:	call   0x427dc8
  41720e:	jmp    0x4168a4
  417213:	mov    rcx,QWORD PTR [rsp+0x38]
  417218:	lea    rdx,[rip+0x28039]        # 0x43f258
  41721f:	call   0x427dc8
  417224:	jmp    0x417104
  417229:	mov    rcx,QWORD PTR [rsp+0x38]
  41722e:	lea    rdx,[rip+0x28019]        # 0x43f24e
  417235:	call   0x427dc8
  41723a:	jmp    0x4170e8
  41723f:	mov    rcx,QWORD PTR [rsp+0x38]
  417244:	lea    rdx,[rip+0x27ff7]        # 0x43f242
  41724b:	call   0x427dc8
  417250:	jmp    0x4170cc
  417255:	mov    rcx,QWORD PTR [rsp+0x38]
  41725a:	lea    rdx,[rip+0x27fd0]        # 0x43f231
  417261:	mov    r8,r13
  417264:	call   0x427dd8
  417269:	jmp    0x4170b0
  41726e:	xor    r8d,r8d
  417271:	xor    edx,edx
  417273:	mov    rcx,rdi
  417276:	call   0x427e98
  41727b:	lea    rdx,[rip+0x28211]        # 0x43f493
  417282:	mov    rcx,r14
  417285:	mov    r8,rax
  417288:	call   0x427d70
  41728d:	mov    rdx,QWORD PTR [rsp+0xe0]
  417295:	mov    rcx,r15
  417298:	call   0x4122c0
  41729d:	jmp    0x416b25
  4172a2:	mov    rcx,QWORD PTR [rsp+0x38]
  4172a7:	lea    rdx,[rip+0x27fcc]        # 0x43f27a
  4172ae:	call   0x427dd8
  4172b3:	jmp    0x41713c
  4172b8:	mov    rcx,QWORD PTR [rsp+0x38]
  4172bd:	lea    rdx,[rip+0x27fa1]        # 0x43f265
  4172c4:	call   0x427dc8
  4172c9:	jmp    0x417120
  4172ce:	mov    rcx,QWORD PTR [rsp+0x38]
  4172d3:	call   0x427d68
  4172d8:	jmp    0x41706a
  4172dd:	mov    rcx,QWORD PTR [rsp+0x38]
  4172e2:	lea    rdx,[rip+0x27f1a]        # 0x43f203
  4172e9:	call   0x427d70
  4172ee:	jmp    0x41706a
  4172f3:	xor    edx,edx
  4172f5:	mov    rcx,r12
  4172f8:	call   0x427e98
  4172fd:	lea    r8,[rip+0x28e94]        # 0x440198
  417304:	lea    rdx,[rip+0x28e96]        # 0x4401a1
  41730b:	mov    r9,rax
  41730e:	mov    rcx,r14
  417311:	call   0x427d70
  417316:	jmp    0x416263
  41731b:	xor    edx,edx
  41731d:	mov    rcx,rdi
  417320:	call   0x427e98
  417325:	lea    r8,[rip+0x2901f]        # 0x44034b
  41732c:	lea    rdx,[rip+0x28e6e]        # 0x4401a1
  417333:	mov    r9,rax
  417336:	mov    rcx,r14
  417339:	call   0x427d70
  41733e:	jmp    0x416ea9
  417343:	mov    edi,eax
  417345:	jmp    0x415a65
  41734a:	nop    WORD PTR [rax+rax*1+0x0]
  417350:	push   r14
  417352:	push   r13
  417354:	push   r12
  417356:	push   rbp
  417357:	push   rdi
  417358:	push   rsi
  417359:	push   rbx
  41735a:	sub    rsp,0x110
  417361:	mov    rbp,QWORD PTR [rip+0x3d578]        # 0x4548e0
  417368:	lea    rbx,[rsp+0x50]
  41736d:	lea    r12,[rsp+0x70]
  417372:	mov    r13,rcx
  417375:	mov    ecx,0x13
  41737a:	mov    r14d,r8d
  41737d:	lea    rsi,[rbp+0x28]
  417381:	mov    rdi,r12
  417384:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417387:	mov    rcx,rbx
  41738a:	call   0x427da8
  41738f:	lea    rax,[rip+0x29110]        # 0x4404a6
  417396:	lea    r8,[rip+0x2909c]        # 0x440439
  41739d:	lea    r9,[rip+0x29090]        # 0x440434
  4173a4:	lea    rdx,[rip+0x29095]        # 0x440440
  4173ab:	mov    rcx,rbx
  4173ae:	mov    QWORD PTR [rsp+0x20],rax
  4173b3:	call   0x427d70
  4173b8:	mov    eax,DWORD PTR [rbp+0xe4]
  4173be:	lea    r8,[rip+0x290f2]        # 0x4404b7
  4173c5:	cmp    eax,0x13a0f
  4173ca:	jg     0x417504
  4173d0:	cmp    eax,0x13947
  4173d5:	jg     0x4174f0
  4173db:	lea    rdx,[rip+0x292ae]        # 0x440690
  4173e2:	mov    rcx,rbx
  4173e5:	call   0x427dd8
  4173ea:	lea    r8,[rip+0x27a59]        # 0x43ee4a
  4173f1:	lea    rdx,[rip+0x292d8]        # 0x4406d0
  4173f8:	mov    rcx,rbx
  4173fb:	call   0x427dd8
  417400:	test   r14b,r14b
  417403:	jne    0x417419
  417405:	test   r13,r13
  417408:	jne    0x417419
  41740a:	lea    rdx,[rip+0x29367]        # 0x440778
  417411:	mov    rcx,rbx
  417414:	call   0x427dc8
  417419:	lea    rax,[rip+0x293b0]        # 0x4407d0
  417420:	mov    QWORD PTR [rsp+0x38],0x0
  417429:	mov    DWORD PTR [rsp+0x20],0x0
  417431:	mov    r9d,0x1
  417437:	mov    r8,r13
  41743a:	mov    rdx,rbx
  41743d:	mov    QWORD PTR [rsp+0x40],rax
  417442:	lea    rax,[rip+0x293b0]        # 0x4407f9
  417449:	mov    QWORD PTR [rsp+0x30],rax
  41744e:	lea    rax,[rip+0x293ae]        # 0x440803
  417455:	mov    QWORD PTR [rsp+0x28],rax
  41745a:	mov    rcx,QWORD PTR [rbp+0x0]
  41745e:	call   0x41e8f0
  417463:	lea    rdx,[rip+0x293a3]        # 0x44080d
  41746a:	mov    rcx,rbx
  41746d:	call   0x427dc8
  417472:	mov    rcx,QWORD PTR [rsp+0x50]
  417477:	xor    edx,edx
  417479:	call   0x4062b0
  41747e:	mov    rcx,rbx
  417481:	mov    rsi,rax
  417484:	call   0x427d60
  417489:	xor    eax,eax
  41748b:	test   rsi,rsi
  41748e:	je     0x4174d6
  417490:	mov    r9,QWORD PTR [rbp+0x108]
  417497:	mov    r8,QWORD PTR [rbp+0x10]
  41749b:	lea    rax,[rip+0x2937d]        # 0x44081f
  4174a2:	mov    rdx,r12
  4174a5:	mov    rcx,rsi
  4174a8:	mov    QWORD PTR [rsp+0xd0],0x0
  4174b4:	mov    QWORD PTR [rsp+0xe0],rax
  4174bc:	mov    BYTE PTR [rsp+0xf0],0x1
  4174c4:	call   0x4141a0
  4174c9:	mov    rcx,rsi
  4174cc:	call   0x427f68
  4174d1:	mov    eax,0x1
  4174d6:	add    rsp,0x110
  4174dd:	pop    rbx
  4174de:	pop    rsi
  4174df:	pop    rdi
  4174e0:	pop    rbp
  4174e1:	pop    r12
  4174e3:	pop    r13
  4174e5:	pop    r14
  4174e7:	ret    
  4174e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4174f0:	lea    rdx,[rip+0x29061]        # 0x440558
  4174f7:	mov    rcx,rbx
  4174fa:	call   0x427dd8
  4174ff:	jmp    0x4173ea
  417504:	lea    rdx,[rip+0x28fc5]        # 0x4404d0
  41750b:	mov    rcx,rbx
  41750e:	call   0x427dd8
  417513:	jmp    0x4173ea
  417518:	nop    DWORD PTR [rax+rax*1+0x0]
  417520:	push   r13
  417522:	push   r12
  417524:	push   rbp
  417525:	push   rdi
  417526:	push   rsi
  417527:	push   rbx
  417528:	sub    rsp,0x118
  41752f:	mov    rbx,QWORD PTR [rip+0x3d3aa]        # 0x4548e0
  417536:	lea    rbp,[rsp+0x70]
  41753b:	mov    r12,rcx
  41753e:	mov    r13d,edx
  417541:	mov    ecx,0x13
  417546:	mov    r9d,DWORD PTR [rbx+0xe4]
  41754d:	lea    rsi,[rbx+0x28]
  417551:	mov    rdi,rbp
  417554:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417557:	cmp    r9d,0x1387f
  41755e:	jle    0x417710
  417564:	lea    rsi,[rsp+0x50]
  417569:	mov    rcx,rsi
  41756c:	call   0x427da8
  417571:	cmp    DWORD PTR [rbx+0xe4],0x16057
  41757b:	lea    rax,[rip+0x29377]        # 0x4408f9
  417582:	lea    r9,[rip+0x292f1]        # 0x44087a
  417589:	lea    r8,[rip+0x28ea4]        # 0x440434
  417590:	mov    QWORD PTR [rsp+0x20],rax
  417595:	jg     0x417685
  41759b:	lea    rdx,[rip+0x29366]        # 0x440908
  4175a2:	mov    rcx,rsi
  4175a5:	call   0x427d70
  4175aa:	test   r13b,r13b
  4175ad:	jne    0x41769d
  4175b3:	lea    rdx,[rip+0x29416]        # 0x4409d0
  4175ba:	mov    rcx,rsi
  4175bd:	call   0x427dc8
  4175c2:	lea    rax,[rip+0x29427]        # 0x4409f0
  4175c9:	mov    QWORD PTR [rsp+0x40],0x0
  4175d2:	mov    QWORD PTR [rsp+0x38],0x0
  4175db:	mov    QWORD PTR [rsp+0x28],0x0
  4175e4:	mov    DWORD PTR [rsp+0x20],0x0
  4175ec:	xor    r9d,r9d
  4175ef:	mov    QWORD PTR [rsp+0x30],rax
  4175f4:	mov    rcx,QWORD PTR [rbx]
  4175f7:	mov    r8,r12
  4175fa:	mov    rdx,rsi
  4175fd:	call   0x41e8f0
  417602:	lea    rdx,[rip+0x293ef]        # 0x4409f8
  417609:	mov    rcx,rsi
  41760c:	call   0x427dc8
  417611:	mov    rcx,QWORD PTR [rsp+0x50]
  417616:	xor    edx,edx
  417618:	call   0x4062b0
  41761d:	mov    rcx,rsi
  417620:	mov    r12,rax
  417623:	call   0x427d60
  417628:	xor    eax,eax
  41762a:	test   r12,r12
  41762d:	je     0x417675
  41762f:	mov    r9,QWORD PTR [rbx+0x108]
  417636:	mov    r8,QWORD PTR [rbx+0x10]
  41763a:	lea    rax,[rip+0x293c3]        # 0x440a04
  417641:	mov    rdx,rbp
  417644:	mov    rcx,r12
  417647:	mov    QWORD PTR [rsp+0xd0],0x0
  417653:	mov    QWORD PTR [rsp+0xe0],rax
  41765b:	mov    BYTE PTR [rsp+0xf0],0x1
  417663:	call   0x4141a0
  417668:	mov    rcx,r12
  41766b:	call   0x427f68
  417670:	mov    eax,0x1
  417675:	add    rsp,0x118
  41767c:	pop    rbx
  41767d:	pop    rsi
  41767e:	pop    rdi
  41767f:	pop    rbp
  417680:	pop    r12
  417682:	pop    r13
  417684:	ret    
  417685:	lea    rdx,[rip+0x291f4]        # 0x440880
  41768c:	mov    rcx,rsi
  41768f:	call   0x427d70
  417694:	test   r13b,r13b
  417697:	je     0x4175b3
  41769d:	lea    rdx,[rip+0x292c2]        # 0x440966
  4176a4:	mov    rcx,rsi
  4176a7:	call   0x427dc8
  4176ac:	lea    rdx,[rip+0x292b8]        # 0x44096b
  4176b3:	mov    rcx,rsi
  4176b6:	call   0x414870
  4176bb:	mov    eax,DWORD PTR [rbx+0xe4]
  4176c1:	cmp    eax,0x15f8f
  4176c6:	jle    0x4176e4
  4176c8:	lea    r8,[rip+0x28ccb]        # 0x44039a
  4176cf:	lea    rdx,[rip+0x2929c]        # 0x440972
  4176d6:	mov    rcx,rsi
  4176d9:	call   0x427dd8
  4176de:	mov    eax,DWORD PTR [rbx+0xe4]
  4176e4:	cmp    eax,0x13947
  4176e9:	jle    0x4175b3
  4176ef:	lea    r8,[rip+0x27754]        # 0x43ee4a
  4176f6:	lea    rdx,[rip+0x29293]        # 0x440990
  4176fd:	mov    rcx,rsi
  417700:	call   0x427dd8
  417705:	jmp    0x4175b3
  41770a:	nop    WORD PTR [rax+rax*1+0x0]
  417710:	mov    eax,r9d
  417713:	mov    ecx,0x51eb851f
  417718:	mov    r10d,r9d
  41771b:	imul   ecx
  41771d:	sar    r10d,0x1f
  417721:	sar    edx,0x5
  417724:	mov    r8d,edx
  417727:	sub    r8d,r10d
  41772a:	mov    eax,r8d
  41772d:	imul   ecx
  41772f:	mov    eax,r8d
  417732:	sar    eax,0x1f
  417735:	sar    edx,0x5
  417738:	mov    ecx,edx
  41773a:	mov    edx,0x68db8bad
  41773f:	sub    ecx,eax
  417741:	mov    eax,r9d
  417744:	imul   edx
  417746:	imul   ecx,ecx,0x64
  417749:	sar    edx,0xc
  41774c:	sub    r8d,ecx
  41774f:	lea    rcx,[rip+0x290ea]        # 0x440840
  417756:	sub    edx,r10d
  417759:	call   0x405d90
  41775e:	mov    eax,0x1
  417763:	add    rsp,0x118
  41776a:	pop    rbx
  41776b:	pop    rsi
  41776c:	pop    rdi
  41776d:	pop    rbp
  41776e:	pop    r12
  417770:	pop    r13
  417772:	ret    
  417773:	nop    DWORD PTR [rax]
  417776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417780:	push   r15
  417782:	push   r14
  417784:	push   r13
  417786:	push   r12
  417788:	push   rbp
  417789:	push   rdi
  41778a:	push   rsi
  41778b:	push   rbx
  41778c:	sub    rsp,0x158
  417793:	mov    rbx,rcx
  417796:	mov    r13,rdx
  417799:	mov    edx,0x61
  41779e:	mov    DWORD PTR [rsp+0x88],r8d
  4177a6:	mov    DWORD PTR [rsp+0x8c],r9d
  4177ae:	lea    r15,[rsp+0xb0]
  4177b6:	call   0x42a428
  4177bb:	mov    edx,0x6e
  4177c0:	mov    rcx,rbx
  4177c3:	mov    QWORD PTR [rsp+0x78],rax
  4177c8:	call   0x42a428
  4177cd:	mov    edx,0x74
  4177d2:	mov    rcx,rbx
  4177d5:	mov    QWORD PTR [rsp+0x80],rax
  4177dd:	call   0x42a428
  4177e2:	mov    edx,0x77
  4177e7:	test   rax,rax
  4177ea:	mov    rcx,rbx
  4177ed:	setne  r14b
  4177f1:	mov    rdi,r15
  4177f4:	call   0x42a428
  4177f9:	mov    rbp,QWORD PTR [rip+0x3d0e0]        # 0x4548e0
  417800:	test   rax,rax
  417803:	mov    ecx,0x13
  417808:	setne  r12b
  41780c:	lea    rsi,[rbp+0x28]
  417810:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417813:	mov    rcx,rbx
  417816:	call   0x42a400
  41781b:	lea    rdx,[rip+0x291f6]        # 0x440a18
  417822:	mov    rsi,rax
  417825:	mov    rcx,rbx
  417828:	call   0x42a3e0
  41782d:	cmp    rsi,rax
  417830:	jne    0x417af0
  417836:	cmp    QWORD PTR [rsp+0x78],0x0
  41783c:	setne  sil
  417840:	cmp    QWORD PTR [rsp+0x80],0x0
  417849:	mov    eax,esi
  41784b:	setne  dil
  41784f:	test   r12b,r12b
  417852:	mov    edx,edi
  417854:	jne    0x417ad0
  41785a:	mov    ebx,esi
  41785c:	or     bl,r14b
  41785f:	jne    0x417da0
  417865:	test   dil,dil
  417868:	jne    0x417da0
  41786e:	cmp    DWORD PTR [rbp+0xe4],0x13a10
  417878:	mov    BYTE PTR [rsp+0x78],0x1
  41787d:	mov    r14d,0x1
  417883:	mov    edi,0x1
  417888:	mov    esi,0x1
  41788d:	setge  r12b
  417891:	lea    rbx,[rsp+0x90]
  417899:	mov    rcx,rbx
  41789c:	call   0x427da8
  4178a1:	lea    r9,[rip+0x28b8c]        # 0x440434
  4178a8:	lea    r8,[rip+0x28b8a]        # 0x440439
  4178af:	lea    rdx,[rip+0x291d2]        # 0x440a88
  4178b6:	mov    rcx,rbx
  4178b9:	call   0x427d70
  4178be:	mov    eax,DWORD PTR [rbp+0xe4]
  4178c4:	cmp    eax,0x13a0f
  4178c9:	jg     0x417c60
  4178cf:	cmp    eax,0x138e3
  4178d4:	lea    rax,[rip+0x2752e]        # 0x43ee09
  4178db:	lea    r9,[rip+0x28bd5]        # 0x4404b7
  4178e2:	lea    r8,[rip+0x28bbd]        # 0x4404a6
  4178e9:	mov    QWORD PTR [rsp+0x38],rax
  4178ee:	lea    rax,[rip+0x292d1]        # 0x440bc6
  4178f5:	mov    QWORD PTR [rsp+0x30],rax
  4178fa:	lea    rax,[rip+0x292cc]        # 0x440bcd
  417901:	mov    QWORD PTR [rsp+0x28],rax
  417906:	lea    rax,[rip+0x292cf]        # 0x440bdc
  41790d:	mov    QWORD PTR [rsp+0x20],rax
  417912:	jg     0x417b15
  417918:	lea    rdx,[rip+0x297b9]        # 0x4410d8
  41791f:	mov    rcx,rbx
  417922:	call   0x427dd8
  417927:	cmp    BYTE PTR [rsp+0x88],0x0
  41792f:	jne    0x417b32
  417935:	lea    rdx,[rip+0x29a6c]        # 0x4413a8
  41793c:	mov    rcx,rbx
  41793f:	call   0x427dc8
  417944:	cmp    BYTE PTR [rsp+0x78],0x0
  417949:	je     0x417be4
  41794f:	xor    r9d,r9d
  417952:	test   r12b,r14b
  417955:	jne    0x4179d0
  417957:	test   sil,sil
  41795a:	je     0x417cc0
  417960:	xor    r9d,r9d
  417963:	test   r14b,r14b
  417966:	jne    0x41798c
  417968:	lea    rdx,[rip+0x29ad7]        # 0x441446
  41796f:	mov    rcx,rbx
  417972:	call   0x427dc8
  417977:	lea    rdx,[rip+0x29aea]        # 0x441468
  41797e:	mov    rcx,rbx
  417981:	call   0x427dc8
  417986:	mov    r9d,0x1
  41798c:	test   r12b,r12b
  41798f:	jne    0x4179d0
  417991:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  41799b:	jle    0x4179d0
  41799d:	test   r9b,r9b
  4179a0:	jne    0x417d60
  4179a6:	lea    rdx,[rip+0x29a99]        # 0x441446
  4179ad:	mov    rcx,rbx
  4179b0:	call   0x427dc8
  4179b5:	lea    rdx,[rip+0x29ae6]        # 0x4414a2
  4179bc:	mov    rcx,rbx
  4179bf:	call   0x427dc8
  4179c4:	mov    r9d,0x1
  4179ca:	nop    WORD PTR [rax+rax*1+0x0]
  4179d0:	lea    rax,[rip+0x28df9]        # 0x4407d0
  4179d7:	mov    QWORD PTR [rsp+0x38],0x0
  4179e0:	mov    DWORD PTR [rsp+0x20],0x0
  4179e8:	mov    r8,r13
  4179eb:	mov    rdx,rbx
  4179ee:	mov    QWORD PTR [rsp+0x40],rax
  4179f3:	lea    rax,[rip+0x28dff]        # 0x4407f9
  4179fa:	mov    QWORD PTR [rsp+0x30],rax
  4179ff:	lea    rax,[rip+0x28dfd]        # 0x440803
  417a06:	mov    QWORD PTR [rsp+0x28],rax
  417a0b:	mov    rcx,QWORD PTR [rbp+0x0]
  417a0f:	call   0x41e8f0
  417a14:	test   r13,r13
  417a17:	jne    0x417a32
  417a19:	cmp    BYTE PTR [rsp+0x8c],0x0
  417a21:	jne    0x417a32
  417a23:	lea    rdx,[rip+0x28d4e]        # 0x440778
  417a2a:	mov    rcx,rbx
  417a2d:	call   0x427dc8
  417a32:	lea    rdx,[rip+0x28dd4]        # 0x44080d
  417a39:	mov    rcx,rbx
  417a3c:	call   0x427dc8
  417a41:	mov    rcx,QWORD PTR [rsp+0x90]
  417a49:	xor    edx,edx
  417a4b:	call   0x4062b0
  417a50:	mov    rcx,rbx
  417a53:	mov    rsi,rax
  417a56:	call   0x427d60
  417a5b:	xor    eax,eax
  417a5d:	test   rsi,rsi
  417a60:	je     0x417b01
  417a66:	lea    rax,[rip+0x29ac4]        # 0x441531
  417a6d:	mov    r9,QWORD PTR [rbp+0x108]
  417a74:	mov    r8,QWORD PTR [rbp+0x10]
  417a78:	mov    rdx,r15
  417a7b:	mov    rcx,rsi
  417a7e:	mov    QWORD PTR [rsp+0x110],0x0
  417a8a:	mov    QWORD PTR [rsp+0x120],rax
  417a92:	lea    rax,[rip+0x2ec2b]        # 0x4466c4
  417a99:	mov    BYTE PTR [rsp+0x130],0x1
  417aa1:	mov    DWORD PTR [rsp+0x140],0xb
  417aac:	mov    QWORD PTR [rsp+0x138],rax
  417ab4:	call   0x4141a0
  417ab9:	mov    rcx,rsi
  417abc:	call   0x427f68
  417ac1:	mov    eax,0x1
  417ac6:	jmp    0x417b01
  417ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ad0:	mov    ecx,DWORD PTR [rbp+0xe4]
  417ad6:	cmp    ecx,0x13a0f
  417adc:	jle    0x417d01
  417ae2:	mov    eax,edi
  417ae4:	and    eax,esi
  417ae6:	mov    BYTE PTR [rsp+0x78],al
  417aea:	jmp    0x417891
  417aef:	nop
  417af0:	lea    rcx,[rip+0x28f29]        # 0x440a20
  417af7:	call   0x405d90
  417afc:	mov    eax,0x1
  417b01:	add    rsp,0x158
  417b08:	pop    rbx
  417b09:	pop    rsi
  417b0a:	pop    rdi
  417b0b:	pop    rbp
  417b0c:	pop    r12
  417b0e:	pop    r13
  417b10:	pop    r14
  417b12:	pop    r15
  417b14:	ret    
  417b15:	lea    rdx,[rip+0x290c4]        # 0x440be0
  417b1c:	mov    rcx,rbx
  417b1f:	call   0x427dd8
  417b24:	cmp    BYTE PTR [rsp+0x88],0x0
  417b2c:	je     0x417935
  417b32:	lea    rax,[rip+0x27311]        # 0x43ee4a
  417b39:	lea    r9,[rip+0x296c3]        # 0x441203
  417b40:	lea    r8,[rip+0x296c4]        # 0x44120b
  417b47:	lea    rdx,[rip+0x296ca]        # 0x441218
  417b4e:	mov    rcx,rbx
  417b51:	mov    QWORD PTR [rsp+0x60],rax
  417b56:	lea    rax,[rip+0x29808]        # 0x441365
  417b5d:	mov    QWORD PTR [rsp+0x58],rax
  417b62:	lea    rax,[rip+0x29808]        # 0x441371
  417b69:	mov    QWORD PTR [rsp+0x50],rax
  417b6e:	lea    rax,[rip+0x28d05]        # 0x44087a
  417b75:	mov    QWORD PTR [rsp+0x48],rax
  417b7a:	lea    rax,[rip+0x297f9]        # 0x44137a
  417b81:	mov    QWORD PTR [rsp+0x40],rax
  417b86:	lea    rax,[rip+0x297f8]        # 0x441385
  417b8d:	mov    QWORD PTR [rsp+0x38],rax
  417b92:	lea    rax,[rip+0x297f5]        # 0x44138e
  417b99:	mov    QWORD PTR [rsp+0x30],rax
  417b9e:	lea    rax,[rip+0x297f0]        # 0x441395
  417ba5:	mov    QWORD PTR [rsp+0x28],rax
  417baa:	lea    rax,[rip+0x297ee]        # 0x44139f
  417bb1:	mov    QWORD PTR [rsp+0x20],rax
  417bb6:	call   0x427dd8
  417bbb:	lea    rdx,[rip+0x297e6]        # 0x4413a8
  417bc2:	mov    rcx,rbx
  417bc5:	call   0x427dc8
  417bca:	lea    rdx,[rip+0x29837]        # 0x441408
  417bd1:	mov    rcx,rbx
  417bd4:	call   0x427dc8
  417bd9:	cmp    BYTE PTR [rsp+0x78],0x0
  417bde:	jne    0x41794f
  417be4:	test   dil,dil
  417be7:	jne    0x417957
  417bed:	lea    rdx,[rip+0x298c1]        # 0x4414b5
  417bf4:	mov    rcx,rbx
  417bf7:	call   0x427dc8
  417bfc:	test   sil,sil
  417bff:	jne    0x417d74
  417c05:	test   r14b,r14b
  417c08:	je     0x417c30
  417c0a:	lea    rdx,[rip+0x298cf]        # 0x4414e0
  417c11:	mov    rcx,rbx
  417c14:	call   0x427dc8
  417c19:	test   r12b,r12b
  417c1c:	je     0x417c44
  417c1e:	lea    rdx,[rip+0x298ac]        # 0x4414d1
  417c25:	mov    rcx,rbx
  417c28:	call   0x427dc8
  417c2d:	jmp    0x417c35
  417c2f:	nop
  417c30:	test   r12b,r12b
  417c33:	je     0x417c44
  417c35:	lea    rdx,[rip+0x298dd]        # 0x441519
  417c3c:	mov    rcx,rbx
  417c3f:	call   0x427dc8
  417c44:	lea    rdx,[rip+0x298dd]        # 0x441528
  417c4b:	mov    rcx,rbx
  417c4e:	call   0x427dc8
  417c53:	mov    r9d,0x1
  417c59:	jmp    0x4179d0
  417c5e:	xchg   ax,ax
  417c60:	lea    rax,[rip+0x271a2]        # 0x43ee09
  417c67:	lea    r9,[rip+0x28849]        # 0x4404b7
  417c6e:	lea    r8,[rip+0x28831]        # 0x4404a6
  417c75:	lea    rdx,[rip+0x28e3c]        # 0x440ab8
  417c7c:	mov    rcx,rbx
  417c7f:	mov    QWORD PTR [rsp+0x40],rax
  417c84:	lea    rax,[rip+0x28f3b]        # 0x440bc6
  417c8b:	mov    QWORD PTR [rsp+0x38],rax
  417c90:	lea    rax,[rip+0x28f36]        # 0x440bcd
  417c97:	mov    QWORD PTR [rsp+0x30],rax
  417c9c:	lea    rax,[rip+0x28f32]        # 0x440bd5
  417ca3:	mov    QWORD PTR [rsp+0x28],rax
  417ca8:	lea    rax,[rip+0x28f2d]        # 0x440bdc
  417caf:	mov    QWORD PTR [rsp+0x20],rax
  417cb4:	call   0x427dd8
  417cb9:	jmp    0x417927
  417cbe:	xchg   ax,ax
  417cc0:	lea    rdx,[rip+0x2977f]        # 0x441446
  417cc7:	mov    rcx,rbx
  417cca:	call   0x427dc8
  417ccf:	lea    rdx,[rip+0x29777]        # 0x44144d
  417cd6:	mov    rcx,rbx
  417cd9:	call   0x427dc8
  417cde:	test   r14b,r14b
  417ce1:	mov    r9d,0x1
  417ce7:	jne    0x41798c
  417ced:	lea    rdx,[rip+0x29769]        # 0x44145d
  417cf4:	mov    rcx,rbx
  417cf7:	call   0x427dc8
  417cfc:	jmp    0x417977
  417d01:	mov    r9d,0x51eb851f
  417d07:	mov    eax,ecx
  417d09:	mov    r10d,ecx
  417d0c:	imul   r9d
  417d0f:	sar    r10d,0x1f
  417d13:	sar    edx,0x5
  417d16:	mov    r8d,edx
  417d19:	sub    r8d,r10d
  417d1c:	mov    eax,r8d
  417d1f:	imul   r9d
  417d22:	mov    eax,r8d
  417d25:	sar    eax,0x1f
  417d28:	sar    edx,0x5
  417d2b:	mov    r9d,edx
  417d2e:	mov    edx,0x68db8bad
  417d33:	sub    r9d,eax
  417d36:	mov    eax,ecx
  417d38:	lea    rcx,[rip+0x28d09]        # 0x440a48
  417d3f:	imul   edx
  417d41:	imul   r9d,r9d,0x64
  417d45:	sar    edx,0xc
  417d48:	sub    edx,r10d
  417d4b:	sub    r8d,r9d
  417d4e:	call   0x405d90
  417d53:	mov    eax,0x1
  417d58:	jmp    0x417b01
  417d5d:	nop    DWORD PTR [rax]
  417d60:	lea    rdx,[rip+0x296f6]        # 0x44145d
  417d67:	mov    rcx,rbx
  417d6a:	call   0x427dc8
  417d6f:	jmp    0x4179b5
  417d74:	lea    rdx,[rip+0x2974a]        # 0x4414c5
  417d7b:	mov    rcx,rbx
  417d7e:	call   0x427dc8
  417d83:	test   r14b,r14b
  417d86:	je     0x417c19
  417d8c:	lea    rdx,[rip+0x2973e]        # 0x4414d1
  417d93:	mov    rcx,rbx
  417d96:	call   0x427dc8
  417d9b:	jmp    0x417c0a
  417da0:	and    edx,eax
  417da2:	mov    BYTE PTR [rsp+0x78],dl
  417da6:	jmp    0x417891
  417dab:	nop    DWORD PTR [rax+rax*1+0x0]
  417db0:	push   r15
  417db2:	push   r14
  417db4:	push   r13
  417db6:	push   r12
  417db8:	push   rbp
  417db9:	push   rdi
  417dba:	push   rsi
  417dbb:	push   rbx
  417dbc:	sub    rsp,0x118
  417dc3:	mov    rbp,QWORD PTR [rip+0x3cb16]        # 0x4548e0
  417dca:	lea    rbx,[rsp+0x50]
  417dcf:	lea    r12,[rsp+0x70]
  417dd4:	mov    r13,rcx
  417dd7:	mov    ecx,0x13
  417ddc:	mov    r15d,edx
  417ddf:	mov    r14d,r8d
  417de2:	lea    rsi,[rbp+0x28]
  417de6:	mov    rdi,r12
  417de9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  417dec:	mov    rcx,rbx
  417def:	call   0x427da8
  417df4:	lea    r9,[rip+0x28639]        # 0x440434
  417dfb:	lea    r8,[rip+0x28637]        # 0x440439
  417e02:	lea    rdx,[rip+0x2973f]        # 0x441548
  417e09:	mov    rcx,rbx
  417e0c:	call   0x427d70
  417e11:	test   r15b,r15b
  417e14:	jne    0x417f90
  417e1a:	lea    r8,[rip+0x27029]        # 0x43ee4a
  417e21:	lea    rdx,[rip+0x29960]        # 0x441788
  417e28:	mov    rcx,rbx
  417e2b:	call   0x427dd8
  417e30:	lea    rdx,[rip+0x29989]        # 0x4417c0
  417e37:	mov    rcx,rbx
  417e3a:	call   0x427dc8
  417e3f:	lea    rdx,[rip+0x299d8]        # 0x44181e
  417e46:	mov    rcx,rbx
  417e49:	call   0x427dc8
  417e4e:	lea    rdx,[rip+0x299e3]        # 0x441838
  417e55:	mov    rcx,rbx
  417e58:	call   0x427dc8
  417e5d:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  417e67:	jle    0x417f60
  417e6d:	lea    rdx,[rip+0x29a1c]        # 0x441890
  417e74:	mov    rcx,rbx
  417e77:	call   0x427dc8
  417e7c:	test   r14b,r14b
  417e7f:	jne    0x417e8a
  417e81:	test   r13,r13
  417e84:	je     0x417f74
  417e8a:	lea    rax,[rip+0x29a87]        # 0x441918
  417e91:	mov    DWORD PTR [rsp+0x20],0x0
  417e99:	mov    r9d,0x1
  417e9f:	mov    r8,r13
  417ea2:	mov    rdx,rbx
  417ea5:	mov    QWORD PTR [rsp+0x40],rax
  417eaa:	lea    rax,[rip+0x29a8f]        # 0x441940
  417eb1:	mov    QWORD PTR [rsp+0x38],rax
  417eb6:	lea    rax,[rip+0x29aa7]        # 0x441964
  417ebd:	mov    QWORD PTR [rsp+0x30],rax
  417ec2:	lea    rax,[rip+0x2893a]        # 0x440803
  417ec9:	mov    QWORD PTR [rsp+0x28],rax
  417ece:	mov    rcx,QWORD PTR [rbp+0x0]
  417ed2:	call   0x41e8f0
  417ed7:	lea    rdx,[rip+0x29a90]        # 0x44196e
  417ede:	mov    rcx,rbx
  417ee1:	call   0x427dc8
  417ee6:	mov    rcx,QWORD PTR [rsp+0x50]
  417eeb:	xor    edx,edx
  417eed:	call   0x4062b0
  417ef2:	mov    rcx,rbx
  417ef5:	mov    rsi,rax
  417ef8:	call   0x427d60
  417efd:	xor    eax,eax
  417eff:	test   rsi,rsi
  417f02:	je     0x417f4a
  417f04:	mov    r9,QWORD PTR [rbp+0x108]
  417f0b:	mov    r8,QWORD PTR [rbp+0x10]
  417f0f:	lea    rax,[rip+0x29a67]        # 0x44197d
  417f16:	mov    rdx,r12
  417f19:	mov    rcx,rsi
  417f1c:	mov    QWORD PTR [rsp+0xd0],0x0
  417f28:	mov    QWORD PTR [rsp+0xe0],rax
  417f30:	mov    BYTE PTR [rsp+0xf0],0x1
  417f38:	call   0x4141a0
  417f3d:	mov    rcx,rsi
  417f40:	call   0x427f68
  417f45:	mov    eax,0x1
  417f4a:	add    rsp,0x118
  417f51:	pop    rbx
  417f52:	pop    rsi
  417f53:	pop    rdi
  417f54:	pop    rbp
  417f55:	pop    r12
  417f57:	pop    r13
  417f59:	pop    r14
  417f5b:	pop    r15
  417f5d:	ret    
  417f5e:	xchg   ax,ax
  417f60:	lea    rdx,[rip+0x29991]        # 0x4418f8
  417f67:	mov    rcx,rbx
  417f6a:	call   0x427dc8
  417f6f:	jmp    0x417e7c
  417f74:	lea    rdx,[rip+0x287fd]        # 0x440778
  417f7b:	mov    rcx,rbx
  417f7e:	call   0x427dc8
  417f83:	jmp    0x417e8a
  417f88:	nop    DWORD PTR [rax+rax*1+0x0]
  417f90:	lea    r9,[rip+0x295fb]        # 0x441592
  417f97:	lea    r8,[rip+0x295f9]        # 0x441597
  417f9e:	lea    rdx,[rip+0x29603]        # 0x4415a8
  417fa5:	mov    rcx,rbx
  417fa8:	call   0x427dd8
  417fad:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  417fb7:	jle    0x417e1a
  417fbd:	lea    rdx,[rip+0x296bc]        # 0x441680
  417fc4:	mov    rcx,rbx
  417fc7:	call   0x427dc8
  417fcc:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  417fd6:	jle    0x418030
  417fd8:	lea    rdx,[rip+0x29731]        # 0x441710
  417fdf:	mov    rcx,rbx
  417fe2:	call   0x427dc8
  417fe7:	lea    r8,[rip+0x29760]        # 0x44174e
  417fee:	lea    rdx,[rip+0x29763]        # 0x441758
  417ff5:	mov    rcx,rbx
  417ff8:	call   0x427dd8
  417ffd:	cmp    DWORD PTR [rbp+0xe4],0x16057
  418007:	jle    0x417e1a
  41800d:	lea    rdx,[rip+0x29767]        # 0x44177b
  418014:	mov    rcx,rbx
  418017:	call   0x414870
  41801c:	lea    rdx,[rip+0x28943]        # 0x440966
  418023:	mov    rcx,rbx
  418026:	call   0x427dc8
  41802b:	jmp    0x417e1a
  418030:	lea    rdx,[rip+0x296fd]        # 0x441734
  418037:	mov    rcx,rbx
  41803a:	call   0x427dc8
  41803f:	jmp    0x417fe7
  418041:	nop    DWORD PTR [rax+rax*1+0x0]
  418046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418050:	push   r15
  418052:	push   r14
  418054:	push   r13
  418056:	push   r12
  418058:	push   rbp
  418059:	push   rdi
  41805a:	push   rsi
  41805b:	push   rbx
  41805c:	sub    rsp,0x118
  418063:	mov    rbp,QWORD PTR [rip+0x3c876]        # 0x4548e0
  41806a:	lea    rbx,[rsp+0x50]
  41806f:	lea    r12,[rsp+0x70]
  418074:	mov    r13,rcx
  418077:	mov    ecx,0x13
  41807c:	mov    r15d,edx
  41807f:	mov    r14d,r8d
  418082:	lea    rsi,[rbp+0x28]
  418086:	mov    rdi,r12
  418089:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41808c:	mov    rcx,rbx
  41808f:	call   0x427da8
  418094:	lea    rax,[rip+0x29a17]        # 0x441ab2
  41809b:	lea    r9,[rip+0x28392]        # 0x440434
  4180a2:	lea    r8,[rip+0x28390]        # 0x440439
  4180a9:	lea    rdx,[rip+0x298e0]        # 0x441990
  4180b0:	mov    rcx,rbx
  4180b3:	mov    QWORD PTR [rsp+0x30],rax
  4180b8:	lea    rax,[rip+0x299ff]        # 0x441abe
  4180bf:	mov    QWORD PTR [rsp+0x28],rax
  4180c4:	lea    rax,[rip+0x29a02]        # 0x441acd
  4180cb:	mov    QWORD PTR [rsp+0x20],rax
  4180d0:	call   0x427d70
  4180d5:	test   r15b,r15b
  4180d8:	jne    0x4181e0
  4180de:	lea    r8,[rip+0x26d65]        # 0x43ee4a
  4180e5:	lea    rdx,[rip+0x29a14]        # 0x441b00
  4180ec:	mov    rcx,rbx
  4180ef:	call   0x427dd8
  4180f4:	test   r14b,r14b
  4180f7:	sete   r9b
  4180fb:	test   r13,r13
  4180fe:	sete   al
  418101:	mov    esi,r9d
  418104:	and    sil,al
  418107:	jne    0x418200
  41810d:	lea    rax,[rip+0x29b24]        # 0x441c38
  418114:	mov    QWORD PTR [rsp+0x38],0x0
  41811d:	mov    DWORD PTR [rsp+0x20],0x1
  418125:	mov    r9d,esi
  418128:	mov    r8,r13
  41812b:	mov    rdx,rbx
  41812e:	mov    QWORD PTR [rsp+0x40],rax
  418133:	lea    rax,[rip+0x29b27]        # 0x441c61
  41813a:	and    r9d,0x1
  41813e:	mov    QWORD PTR [rsp+0x30],rax
  418143:	lea    rax,[rip+0x286b9]        # 0x440803
  41814a:	mov    QWORD PTR [rsp+0x28],rax
  41814f:	mov    rcx,QWORD PTR [rbp+0x0]
  418153:	call   0x41e8f0
  418158:	lea    rdx,[rip+0x29b0c]        # 0x441c6b
  41815f:	mov    rcx,rbx
  418162:	call   0x427dc8
  418167:	mov    rcx,QWORD PTR [rsp+0x50]
  41816c:	xor    edx,edx
  41816e:	call   0x4062b0
  418173:	mov    rcx,rbx
  418176:	mov    rsi,rax
  418179:	call   0x427d60
  41817e:	xor    eax,eax
  418180:	test   rsi,rsi
  418183:	je     0x4181cb
  418185:	mov    r9,QWORD PTR [rbp+0x108]
  41818c:	mov    r8,QWORD PTR [rbp+0x10]
  418190:	lea    rax,[rip+0x29ae9]        # 0x441c80
  418197:	mov    rdx,r12
  41819a:	mov    rcx,rsi
  41819d:	mov    QWORD PTR [rsp+0xd0],0x0
  4181a9:	mov    QWORD PTR [rsp+0xe0],rax
  4181b1:	mov    BYTE PTR [rsp+0xf0],0x1
  4181b9:	call   0x4141a0
  4181be:	mov    rcx,rsi
  4181c1:	call   0x427f68
  4181c6:	mov    eax,0x1
  4181cb:	add    rsp,0x118
  4181d2:	pop    rbx
  4181d3:	pop    rsi
  4181d4:	pop    rdi
  4181d5:	pop    rbp
  4181d6:	pop    r12
  4181d8:	pop    r13
  4181da:	pop    r14
  4181dc:	pop    r15
  4181de:	ret    
  4181df:	nop
  4181e0:	lea    r8,[rip+0x298f4]        # 0x441adb
  4181e7:	lea    rdx,[rip+0x298f6]        # 0x441ae4
  4181ee:	mov    rcx,rbx
  4181f1:	call   0x427dd8
  4181f6:	jmp    0x4180de
  4181fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418200:	lea    rdx,[rip+0x299e1]        # 0x441be8
  418207:	mov    rcx,rbx
  41820a:	call   0x427dc8
  41820f:	jmp    0x41810d
  418214:	xchg   ax,ax
  418216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418220:	push   r14
  418222:	push   r13
  418224:	push   r12
  418226:	push   rbp
  418227:	push   rdi
  418228:	push   rsi
  418229:	push   rbx
  41822a:	sub    rsp,0x110
  418231:	mov    rbp,QWORD PTR [rip+0x3c6a8]        # 0x4548e0
  418238:	lea    rbx,[rsp+0x50]
  41823d:	lea    r12,[rsp+0x70]
  418242:	mov    r13,rcx
  418245:	mov    ecx,0x13
  41824a:	mov    r14d,edx
  41824d:	lea    rsi,[rbp+0x28]
  418251:	mov    rdi,r12
  418254:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418257:	mov    rcx,rbx
  41825a:	call   0x427da8
  41825f:	lea    rax,[rip+0x29abd]        # 0x441d23
  418266:	lea    r9,[rip+0x2860d]        # 0x44087a
  41826d:	lea    r8,[rip+0x281c0]        # 0x440434
  418274:	lea    rdx,[rip+0x29a1d]        # 0x441c98
  41827b:	mov    rcx,rbx
  41827e:	mov    QWORD PTR [rsp+0x20],rax
  418283:	call   0x427d70
  418288:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  418292:	jg     0x4183e0
  418298:	lea    rdx,[rip+0x29ada]        # 0x441d79
  41829f:	mov    rcx,rbx
  4182a2:	call   0x427dc8
  4182a7:	lea    rdx,[rip+0x29ad3]        # 0x441d81
  4182ae:	mov    rcx,rbx
  4182b1:	call   0x414870
  4182b6:	test   r14b,r14b
  4182b9:	je     0x418303
  4182bb:	mov    eax,DWORD PTR [rbp+0xe4]
  4182c1:	cmp    eax,0x13947
  4182c6:	jg     0x418402
  4182cc:	cmp    eax,0x1387f
  4182d1:	jg     0x418428
  4182d7:	lea    rdx,[rip+0x29c52]        # 0x441f30
  4182de:	mov    rcx,rbx
  4182e1:	call   0x427dc8
  4182e6:	cmp    DWORD PTR [rbp+0xe4],0x1387f
  4182f0:	jle    0x418312
  4182f2:	lea    rdx,[rip+0x29bd7]        # 0x441ed0
  4182f9:	mov    rcx,rbx
  4182fc:	call   0x427dc8
  418301:	jmp    0x418312
  418303:	lea    rdx,[rip+0x29c26]        # 0x441f30
  41830a:	mov    rcx,rbx
  41830d:	call   0x427dc8
  418312:	test   r13,r13
  418315:	je     0x418358
  418317:	lea    rax,[rip+0x29bf0]        # 0x441f0e
  41831e:	mov    QWORD PTR [rsp+0x40],0x0
  418327:	mov    QWORD PTR [rsp+0x38],0x0
  418330:	mov    QWORD PTR [rsp+0x28],0x0
  418339:	mov    DWORD PTR [rsp+0x20],0x0
  418341:	xor    r9d,r9d
  418344:	mov    QWORD PTR [rsp+0x30],rax
  418349:	mov    rcx,QWORD PTR [rbp+0x0]
  41834d:	mov    r8,r13
  418350:	mov    rdx,rbx
  418353:	call   0x41e8f0
  418358:	lea    rdx,[rip+0x28699]        # 0x4409f8
  41835f:	mov    rcx,rbx
  418362:	call   0x427dc8
  418367:	mov    rcx,QWORD PTR [rsp+0x50]
  41836c:	xor    edx,edx
  41836e:	call   0x4062b0
  418373:	mov    rcx,rbx
  418376:	mov    rsi,rax
  418379:	call   0x427d60
  41837e:	xor    eax,eax
  418380:	test   rsi,rsi
  418383:	je     0x4183cb
  418385:	mov    r9,QWORD PTR [rbp+0x108]
  41838c:	mov    r8,QWORD PTR [rbp+0x10]
  418390:	lea    rax,[rip+0x29b81]        # 0x441f18
  418397:	mov    rdx,r12
  41839a:	mov    rcx,rsi
  41839d:	mov    QWORD PTR [rsp+0xd0],0x0
  4183a9:	mov    QWORD PTR [rsp+0xe0],rax
  4183b1:	mov    BYTE PTR [rsp+0xf0],0x1
  4183b9:	call   0x4141a0
  4183be:	mov    rcx,rsi
  4183c1:	call   0x427f68
  4183c6:	mov    eax,0x1
  4183cb:	add    rsp,0x110
  4183d2:	pop    rbx
  4183d3:	pop    rsi
  4183d4:	pop    rdi
  4183d5:	pop    rbp
  4183d6:	pop    r12
  4183d8:	pop    r13
  4183da:	pop    r14
  4183dc:	ret    
  4183dd:	nop    DWORD PTR [rax]
  4183e0:	lea    r9,[rip+0x29945]        # 0x441d2c
  4183e7:	lea    r8,[rip+0x29944]        # 0x441d32
  4183ee:	lea    rdx,[rip+0x2994b]        # 0x441d40
  4183f5:	mov    rcx,rbx
  4183f8:	call   0x427dd8
  4183fd:	jmp    0x418298
  418402:	lea    r8,[rip+0x29189]        # 0x441592
  418409:	lea    rdx,[rip+0x29980]        # 0x441d90
  418410:	mov    rcx,rbx
  418413:	call   0x427dd8
  418418:	cmp    DWORD PTR [rbp+0xe4],0x1387f
  418422:	jle    0x4182d7
  418428:	lea    r8,[rip+0x29a2f]        # 0x441e5e
  41842f:	lea    rdx,[rip+0x29a33]        # 0x441e69
  418436:	mov    rcx,rbx
  418439:	call   0x427dd8
  41843e:	cmp    DWORD PTR [rbp+0xe4],0x13947
  418448:	jle    0x4182d7
  41844e:	lea    r8,[rip+0x269f5]        # 0x43ee4a
  418455:	lea    rdx,[rip+0x29a2c]        # 0x441e88
  41845c:	mov    rcx,rbx
  41845f:	call   0x427dd8
  418464:	jmp    0x4182d7
  418469:	nop    DWORD PTR [rax+0x0]
  418470:	push   r13
  418472:	push   r12
  418474:	push   rbp
  418475:	push   rdi
  418476:	push   rsi
  418477:	push   rbx
  418478:	sub    rsp,0x118
  41847f:	mov    rbp,QWORD PTR [rip+0x3c45a]        # 0x4548e0
  418486:	lea    rbx,[rsp+0x50]
  41848b:	lea    r12,[rsp+0x70]
  418490:	mov    r13,rcx
  418493:	mov    ecx,0x13
  418498:	lea    rsi,[rbp+0x28]
  41849c:	mov    rdi,r12
  41849f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4184a2:	mov    rcx,rbx
  4184a5:	call   0x427da8
  4184aa:	lea    rax,[rip+0x26958]        # 0x43ee09
  4184b1:	lea    r9,[rip+0x27f7c]        # 0x440434
  4184b8:	lea    r8,[rip+0x27f7a]        # 0x440439
  4184bf:	lea    rdx,[rip+0x29a8a]        # 0x441f50
  4184c6:	mov    rcx,rbx
  4184c9:	mov    QWORD PTR [rsp+0x48],rax
  4184ce:	lea    rax,[rip+0x29b2a]        # 0x441fff
  4184d5:	mov    QWORD PTR [rsp+0x40],rax
  4184da:	lea    rax,[rip+0x29b2c]        # 0x44200d
  4184e1:	mov    QWORD PTR [rsp+0x38],rax
  4184e6:	lea    rax,[rip+0x29b29]        # 0x442016
  4184ed:	mov    QWORD PTR [rsp+0x30],rax
  4184f2:	lea    rax,[rip+0x29b2f]        # 0x442028
  4184f9:	mov    QWORD PTR [rsp+0x28],rax
  4184fe:	lea    rax,[rip+0x29b28]        # 0x44202d
  418505:	mov    QWORD PTR [rsp+0x20],rax
  41850a:	call   0x427d70
  41850f:	lea    rdx,[rip+0x29b1d]        # 0x442033
  418516:	mov    rcx,rbx
  418519:	call   0x414870
  41851e:	cmp    DWORD PTR [rbp+0xe4],0x13a0f
  418528:	jg     0x418633
  41852e:	lea    rdx,[rip+0x29c1b]        # 0x442150
  418535:	mov    rcx,rbx
  418538:	call   0x427dc8
  41853d:	lea    rax,[rip+0x29c9c]        # 0x4421e0
  418544:	mov    QWORD PTR [rsp+0x38],0x0
  41854d:	mov    DWORD PTR [rsp+0x20],0x0
  418555:	mov    r9d,0x1
  41855b:	mov    r8,r13
  41855e:	mov    rdx,rbx
  418561:	mov    QWORD PTR [rsp+0x40],rax
  418566:	lea    rax,[rip+0x29cb1]        # 0x44221e
  41856d:	mov    QWORD PTR [rsp+0x30],rax
  418572:	lea    rax,[rip+0x2828a]        # 0x440803
  418579:	mov    QWORD PTR [rsp+0x28],rax
  41857e:	mov    rcx,QWORD PTR [rbp+0x0]
  418582:	call   0x41e8f0
  418587:	lea    rdx,[rip+0x293e0]        # 0x44196e
  41858e:	mov    rcx,rbx
  418591:	call   0x427dc8
  418596:	mov    rcx,QWORD PTR [rsp+0x50]
  41859b:	xor    edx,edx
  41859d:	call   0x4062b0
  4185a2:	test   rax,rax
  4185a5:	mov    rsi,rax
  4185a8:	je     0x418650
  4185ae:	lea    rdx,[rip+0x25a0b]        # 0x43dfc0
  4185b5:	mov    rcx,rbx
  4185b8:	mov    QWORD PTR [rsp+0xd0],0x0
  4185c4:	call   0x427d70
  4185c9:	mov    rax,QWORD PTR [rsp+0x50]
  4185ce:	mov    r9,QWORD PTR [rbp+0x108]
  4185d5:	mov    rdx,r12
  4185d8:	mov    r8,QWORD PTR [rbp+0x10]
  4185dc:	mov    rcx,rsi
  4185df:	mov    BYTE PTR [rsp+0xf0],0x1
  4185e7:	mov    DWORD PTR [rsp+0x100],0x5
  4185f2:	mov    QWORD PTR [rsp+0xe0],rax
  4185fa:	lea    rax,[rip+0x2e0be]        # 0x4466bf
  418601:	mov    QWORD PTR [rsp+0xf8],rax
  418609:	call   0x4141a0
  41860e:	mov    rcx,rbx
  418611:	call   0x427d60
  418616:	mov    rcx,rsi
  418619:	call   0x427f68
  41861e:	mov    eax,0x1
  418623:	add    rsp,0x118
  41862a:	pop    rbx
  41862b:	pop    rsi
  41862c:	pop    rdi
  41862d:	pop    rbp
  41862e:	pop    r12
  418630:	pop    r13
  418632:	ret    
  418633:	lea    r8,[rip+0x29a02]        # 0x44203c
  41863a:	lea    rdx,[rip+0x29a17]        # 0x442058
  418641:	mov    rcx,rbx
  418644:	call   0x427dd8
  418649:	jmp    0x41852e
  41864e:	xchg   ax,ax
  418650:	mov    rcx,rbx
  418653:	call   0x427d60
  418658:	xor    eax,eax
  41865a:	add    rsp,0x118
  418661:	pop    rbx
  418662:	pop    rsi
  418663:	pop    rdi
  418664:	pop    rbp
  418665:	pop    r12
  418667:	pop    r13
  418669:	ret    
  41866a:	nop    WORD PTR [rax+rax*1+0x0]
  418670:	push   r13
  418672:	push   r12
  418674:	push   rbp
  418675:	push   rdi
  418676:	push   rsi
  418677:	push   rbx
  418678:	sub    rsp,0x138
  41867f:	mov    rbp,QWORD PTR [rip+0x3c25a]        # 0x4548e0
  418686:	lea    r12,[rsp+0x90]
  41868e:	mov    r13,rcx
  418691:	mov    ecx,0x13
  418696:	mov    r9d,DWORD PTR [rbp+0xe4]
  41869d:	lea    rsi,[rbp+0x28]
  4186a1:	mov    rdi,r12
  4186a4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4186a7:	cmp    r9d,0x15f8f
  4186ae:	jle    0x418850
  4186b4:	lea    rbx,[rsp+0x70]
  4186b9:	mov    rcx,rbx
  4186bc:	call   0x427da8
  4186c1:	lea    rax,[rip+0x26741]        # 0x43ee09
  4186c8:	lea    r9,[rip+0x27d6a]        # 0x440439
  4186cf:	lea    r8,[rip+0x281a4]        # 0x44087a
  4186d6:	lea    rdx,[rip+0x29b9b]        # 0x442278
  4186dd:	mov    rcx,rbx
  4186e0:	mov    DWORD PTR [rsp+0x50],0x54
  4186e8:	mov    QWORD PTR [rsp+0x60],rax
  4186ed:	lea    rax,[rip+0x29c49]        # 0x44233d
  4186f4:	mov    DWORD PTR [rsp+0x40],0x66
  4186fc:	mov    DWORD PTR [rsp+0x30],0x53
  418704:	mov    DWORD PTR [rsp+0x20],0x72
  41870c:	mov    QWORD PTR [rsp+0x58],rax
  418711:	lea    rax,[rip+0x29c2a]        # 0x442342
  418718:	mov    QWORD PTR [rsp+0x48],rax
  41871d:	lea    rax,[rip+0x298e9]        # 0x44200d
  418724:	mov    QWORD PTR [rsp+0x38],rax
  418729:	lea    rax,[rip+0x298fd]        # 0x44202d
  418730:	mov    QWORD PTR [rsp+0x28],rax
  418735:	call   0x427d70
  41873a:	lea    rdx,[rip+0x29c0a]        # 0x44234b
  418741:	mov    rcx,rbx
  418744:	call   0x414870
  418749:	lea    rdx,[rip+0x29c08]        # 0x442358
  418750:	mov    rcx,rbx
  418753:	call   0x427dc8
  418758:	lea    rax,[rip+0x29c69]        # 0x4423c8
  41875f:	mov    QWORD PTR [rsp+0x40],0x0
  418768:	mov    QWORD PTR [rsp+0x28],0x0
  418771:	mov    DWORD PTR [rsp+0x20],0x0
  418779:	xor    r9d,r9d
  41877c:	mov    r8,r13
  41877f:	mov    QWORD PTR [rsp+0x38],rax
  418784:	lea    rax,[rip+0x28078]        # 0x440803
  41878b:	mov    rdx,rbx
  41878e:	mov    QWORD PTR [rsp+0x30],rax
  418793:	mov    rcx,QWORD PTR [rbp+0x0]
  418797:	call   0x41e8f0
  41879c:	lea    rdx,[rip+0x29c4e]        # 0x4423f1
  4187a3:	mov    rcx,rbx
  4187a6:	call   0x427dc8
  4187ab:	mov    rcx,QWORD PTR [rsp+0x70]
  4187b0:	xor    edx,edx
  4187b2:	call   0x4062b0
  4187b7:	test   rax,rax
  4187ba:	mov    rsi,rax
  4187bd:	je     0x4188b3
  4187c3:	lea    rdx,[rip+0x29c39]        # 0x442403
  4187ca:	mov    rcx,rbx
  4187cd:	mov    QWORD PTR [rsp+0xf0],0x0
  4187d9:	call   0x427d70
  4187de:	mov    rax,QWORD PTR [rsp+0x70]
  4187e3:	mov    r9,QWORD PTR [rbp+0x108]
  4187ea:	mov    rdx,r12
  4187ed:	mov    r8,QWORD PTR [rbp+0x10]
  4187f1:	mov    rcx,rsi
  4187f4:	mov    BYTE PTR [rsp+0x110],0x1
  4187fc:	mov    DWORD PTR [rsp+0x120],0x4
  418807:	mov    QWORD PTR [rsp+0x100],rax
  41880f:	lea    rax,[rip+0x2dea5]        # 0x4466bb
  418816:	mov    QWORD PTR [rsp+0x118],rax
  41881e:	call   0x4141a0
  418823:	mov    rcx,rbx
  418826:	call   0x427d60
  41882b:	mov    rcx,rsi
  41882e:	call   0x427f68
  418833:	mov    eax,0x1
  418838:	add    rsp,0x138
  41883f:	pop    rbx
  418840:	pop    rsi
  418841:	pop    rdi
  418842:	pop    rbp
  418843:	pop    r12
  418845:	pop    r13
  418847:	ret    
  418848:	nop    DWORD PTR [rax+rax*1+0x0]
  418850:	mov    eax,r9d
  418853:	mov    ecx,0x51eb851f
  418858:	mov    r10d,r9d
  41885b:	imul   ecx
  41885d:	sar    r10d,0x1f
  418861:	sar    edx,0x5
  418864:	mov    r8d,edx
  418867:	sub    r8d,r10d
  41886a:	mov    eax,r8d
  41886d:	imul   ecx
  41886f:	mov    eax,r8d
  418872:	sar    eax,0x1f
  418875:	sar    edx,0x5
  418878:	mov    ecx,edx
  41887a:	mov    edx,0x68db8bad
  41887f:	sub    ecx,eax
  418881:	mov    eax,r9d
  418884:	imul   edx
  418886:	imul   ecx,ecx,0x64
  418889:	sar    edx,0xc
  41888c:	sub    r8d,ecx
  41888f:	lea    rcx,[rip+0x29992]        # 0x442228
  418896:	sub    edx,r10d
  418899:	call   0x405d90
  41889e:	mov    eax,0x1
  4188a3:	add    rsp,0x138
  4188aa:	pop    rbx
  4188ab:	pop    rsi
  4188ac:	pop    rdi
  4188ad:	pop    rbp
  4188ae:	pop    r12
  4188b0:	pop    r13
  4188b2:	ret    
  4188b3:	mov    rcx,rbx
  4188b6:	call   0x427d60
  4188bb:	xor    eax,eax
  4188bd:	jmp    0x418838
  4188c2:	nop    DWORD PTR [rax+0x0]
  4188c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188d0:	push   r14
  4188d2:	push   r13
  4188d4:	push   r12
  4188d6:	push   rbp
  4188d7:	push   rdi
  4188d8:	push   rsi
  4188d9:	push   rbx
  4188da:	sub    rsp,0x110
  4188e1:	mov    rbp,QWORD PTR [rip+0x3bff8]        # 0x4548e0
  4188e8:	lea    rbx,[rsp+0x50]
  4188ed:	lea    r13,[rsp+0x70]
  4188f2:	mov    r12,rcx
  4188f5:	mov    ecx,0x13
  4188fa:	mov    r14d,edx
  4188fd:	lea    rsi,[rbp+0x28]
  418901:	mov    rdi,r13
  418904:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418907:	mov    rcx,rbx
  41890a:	call   0x427da8
  41890f:	lea    rax,[rip+0x26534]        # 0x43ee4a
  418916:	lea    r9,[rip+0x27b17]        # 0x440434
  41891d:	lea    r8,[rip+0x27b15]        # 0x440439
  418924:	lea    rdx,[rip+0x29af5]        # 0x442420
  41892b:	mov    rcx,rbx
  41892e:	mov    QWORD PTR [rsp+0x28],rax
  418933:	lea    rax,[rip+0x29b4c]        # 0x442486
  41893a:	mov    QWORD PTR [rsp+0x20],rax
  41893f:	call   0x427dd8
  418944:	lea    r8,[rip+0x29b42]        # 0x44248d
  41894b:	lea    rdx,[rip+0x29b46]        # 0x442498
  418952:	mov    rcx,rbx
  418955:	call   0x427dd8
  41895a:	test   r14b,r14b
  41895d:	sete   sil
  418961:	test   r12,r12
  418964:	sete   al
  418967:	and    sil,al
  41896a:	jne    0x418b35
  418970:	lea    rax,[rip+0x29c69]        # 0x4425e0
  418977:	mov    QWORD PTR [rsp+0x38],0x0
  418980:	mov    DWORD PTR [rsp+0x20],0x0
  418988:	xor    r9d,r9d
  41898b:	mov    r8,r12
  41898e:	mov    rdx,rbx
  418991:	mov    QWORD PTR [rsp+0x40],rax
  418996:	lea    rax,[rip+0x29c69]        # 0x442606
  41899d:	mov    QWORD PTR [rsp+0x30],rax
  4189a2:	lea    rax,[rip+0x27e5a]        # 0x440803
  4189a9:	mov    QWORD PTR [rsp+0x28],rax
  4189ae:	mov    rcx,QWORD PTR [rbp+0x0]
  4189b2:	call   0x41e8f0
  4189b7:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  4189c1:	jg     0x418d61
  4189c7:	lea    r8,[rip+0x29e11]        # 0x4427df
  4189ce:	lea    rdx,[rip+0x29e13]        # 0x4427e8
  4189d5:	mov    rcx,rbx
  4189d8:	xor    r14d,r14d
  4189db:	call   0x427dd8
  4189e0:	lea    rax,[rip+0x29bf9]        # 0x4425e0
  4189e7:	mov    QWORD PTR [rsp+0x38],0x0
  4189f0:	mov    DWORD PTR [rsp+0x20],0x0
  4189f8:	mov    r8,r12
  4189fb:	mov    rdx,rbx
  4189fe:	mov    r9d,0x1
  418a04:	mov    QWORD PTR [rsp+0x40],rax
  418a09:	lea    rax,[rip+0x29f3e]        # 0x44294e
  418a10:	mov    QWORD PTR [rsp+0x30],rax
  418a15:	lea    rax,[rip+0x27de7]        # 0x440803
  418a1c:	mov    QWORD PTR [rsp+0x28],rax
  418a21:	mov    rcx,QWORD PTR [rbp+0x0]
  418a25:	call   0x41e8f0
  418a2a:	lea    r8,[rip+0x2819c]        # 0x440bcd
  418a31:	lea    rdx,[rip+0x29f28]        # 0x442960
  418a38:	mov    rcx,rbx
  418a3b:	call   0x427dd8
  418a40:	lea    rax,[rip+0x29b99]        # 0x4425e0
  418a47:	mov    QWORD PTR [rsp+0x38],0x0
  418a50:	mov    DWORD PTR [rsp+0x20],0x0
  418a58:	mov    r9d,r14d
  418a5b:	mov    r8,r12
  418a5e:	mov    rdx,rbx
  418a61:	mov    QWORD PTR [rsp+0x40],rax
  418a66:	lea    rax,[rip+0x2a036]        # 0x442aa3
  418a6d:	mov    QWORD PTR [rsp+0x30],rax
  418a72:	lea    rax,[rip+0x27d8a]        # 0x440803
  418a79:	mov    QWORD PTR [rsp+0x28],rax
  418a7e:	mov    rcx,QWORD PTR [rbp+0x0]
  418a82:	call   0x41e8f0
  418a87:	lea    rdx,[rip+0x2a022]        # 0x442ab0
  418a8e:	mov    rcx,rbx
  418a91:	call   0x427dc8
  418a96:	lea    rdx,[rip+0x29954]        # 0x4423f1
  418a9d:	mov    rcx,rbx
  418aa0:	call   0x427dc8
  418aa5:	mov    rcx,QWORD PTR [rsp+0x50]
  418aaa:	xor    edx,edx
  418aac:	call   0x4062b0
  418ab1:	mov    rcx,rbx
  418ab4:	mov    rsi,rax
  418ab7:	call   0x427d60
  418abc:	xor    eax,eax
  418abe:	test   rsi,rsi
  418ac1:	je     0x418b23
  418ac3:	lea    rax,[rip+0x2a059]        # 0x442b23
  418aca:	mov    r9,QWORD PTR [rbp+0x108]
  418ad1:	mov    r8,QWORD PTR [rbp+0x10]
  418ad5:	mov    rdx,r13
  418ad8:	mov    rcx,rsi
  418adb:	mov    QWORD PTR [rsp+0xd0],0x0
  418ae7:	mov    QWORD PTR [rsp+0xe0],rax
  418aef:	lea    rax,[rip+0x2dbc1]        # 0x4466b7
  418af6:	mov    BYTE PTR [rsp+0xf0],0x1
  418afe:	mov    DWORD PTR [rsp+0x100],0x4
  418b09:	mov    QWORD PTR [rsp+0xf8],rax
  418b11:	call   0x4141a0
  418b16:	mov    rcx,rsi
  418b19:	call   0x427f68
  418b1e:	mov    eax,0x1
  418b23:	add    rsp,0x110
  418b2a:	pop    rbx
  418b2b:	pop    rsi
  418b2c:	pop    rdi
  418b2d:	pop    rbp
  418b2e:	pop    r12
  418b30:	pop    r13
  418b32:	pop    r14
  418b34:	ret    
  418b35:	lea    rdx,[rip+0x290ac]        # 0x441be8
  418b3c:	mov    rcx,rbx
  418b3f:	call   0x427dc8
  418b44:	lea    rax,[rip+0x29a95]        # 0x4425e0
  418b4b:	mov    QWORD PTR [rsp+0x38],0x0
  418b54:	mov    DWORD PTR [rsp+0x20],0x0
  418b5c:	xor    r8d,r8d
  418b5f:	mov    r9d,0x1
  418b65:	mov    rdx,rbx
  418b68:	mov    QWORD PTR [rsp+0x40],rax
  418b6d:	lea    rax,[rip+0x29a92]        # 0x442606
  418b74:	mov    QWORD PTR [rsp+0x30],rax
  418b79:	lea    rax,[rip+0x27c83]        # 0x440803
  418b80:	mov    QWORD PTR [rsp+0x28],rax
  418b85:	mov    rcx,QWORD PTR [rbp+0x0]
  418b89:	call   0x41e8f0
  418b8e:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  418b98:	jg     0x418c3d
  418b9e:	lea    r8,[rip+0x29c3a]        # 0x4427df
  418ba5:	lea    rdx,[rip+0x29c3c]        # 0x4427e8
  418bac:	mov    rcx,rbx
  418baf:	mov    r14d,0x1
  418bb5:	call   0x427dd8
  418bba:	lea    rdx,[rip+0x27bb7]        # 0x440778
  418bc1:	mov    rcx,rbx
  418bc4:	call   0x427dc8
  418bc9:	lea    rax,[rip+0x29a10]        # 0x4425e0
  418bd0:	mov    QWORD PTR [rsp+0x38],0x0
  418bd9:	mov    DWORD PTR [rsp+0x20],0x0
  418be1:	mov    r9d,0x1
  418be7:	xor    r8d,r8d
  418bea:	mov    rdx,rbx
  418bed:	mov    QWORD PTR [rsp+0x40],rax
  418bf2:	lea    rax,[rip+0x29d55]        # 0x44294e
  418bf9:	mov    QWORD PTR [rsp+0x30],rax
  418bfe:	lea    rax,[rip+0x27bfe]        # 0x440803
  418c05:	mov    QWORD PTR [rsp+0x28],rax
  418c0a:	mov    rcx,QWORD PTR [rbp+0x0]
  418c0e:	call   0x41e8f0
  418c13:	lea    r8,[rip+0x27fb3]        # 0x440bcd
  418c1a:	lea    rdx,[rip+0x29d3f]        # 0x442960
  418c21:	mov    rcx,rbx
  418c24:	call   0x427dd8
  418c29:	lea    rdx,[rip+0x28fb8]        # 0x441be8
  418c30:	mov    rcx,rbx
  418c33:	call   0x427dc8
  418c38:	jmp    0x418a40
  418c3d:	lea    r8,[rip+0x29ef3]        # 0x442b37
  418c44:	lea    rdx,[rip+0x29efd]        # 0x442b48
  418c4b:	mov    rcx,rbx
  418c4e:	mov    r14d,0x1
  418c54:	call   0x427dd8
  418c59:	lea    rdx,[rip+0x27b18]        # 0x440778
  418c60:	mov    rcx,rbx
  418c63:	call   0x427dc8
  418c68:	lea    rax,[rip+0x299a9]        # 0x442618
  418c6f:	mov    QWORD PTR [rsp+0x38],0x0
  418c78:	mov    DWORD PTR [rsp+0x20],0x0
  418c80:	mov    r9d,0x1
  418c86:	mov    r8,r12
  418c89:	mov    rdx,rbx
  418c8c:	mov    QWORD PTR [rsp+0x40],rax
  418c91:	lea    rax,[rip+0x299a8]        # 0x442640
  418c98:	mov    QWORD PTR [rsp+0x30],rax
  418c9d:	lea    rax,[rip+0x27b5f]        # 0x440803
  418ca4:	mov    QWORD PTR [rsp+0x28],rax
  418ca9:	mov    rcx,QWORD PTR [rbp+0x0]
  418cad:	call   0x41e8f0
  418cb2:	cmp    DWORD PTR [rbp+0xe4],0x16057
  418cbc:	jg     0x418ce2
  418cbe:	lea    r8,[rip+0x29b1a]        # 0x4427df
  418cc5:	lea    rdx,[rip+0x29b1c]        # 0x4427e8
  418ccc:	mov    rcx,rbx
  418ccf:	call   0x427dd8
  418cd4:	test   sil,sil
  418cd7:	je     0x4189e0
  418cdd:	jmp    0x418bba
  418ce2:	lea    r8,[rip+0x29961]        # 0x44264a
  418ce9:	lea    rdx,[rip+0x29970]        # 0x442660
  418cf0:	mov    rcx,rbx
  418cf3:	call   0x427dd8
  418cf8:	test   sil,sil
  418cfb:	jne    0x418d50
  418cfd:	lea    rax,[rip+0x29aa4]        # 0x4427a8
  418d04:	mov    QWORD PTR [rsp+0x38],0x0
  418d0d:	mov    DWORD PTR [rsp+0x20],0x0
  418d15:	mov    r9d,0x1
  418d1b:	mov    r8,r12
  418d1e:	mov    rdx,rbx
  418d21:	mov    QWORD PTR [rsp+0x40],rax
  418d26:	lea    rax,[rip+0x29aa6]        # 0x4427d3
  418d2d:	mov    QWORD PTR [rsp+0x30],rax
  418d32:	lea    rax,[rip+0x27aca]        # 0x440803
  418d39:	mov    QWORD PTR [rsp+0x28],rax
  418d3e:	mov    rcx,QWORD PTR [rbp+0x0]
  418d42:	call   0x41e8f0
  418d47:	jmp    0x418cbe
  418d4c:	nop    DWORD PTR [rax+0x0]
  418d50:	lea    rdx,[rip+0x27a21]        # 0x440778
  418d57:	mov    rcx,rbx
  418d5a:	call   0x427dc8
  418d5f:	jmp    0x418cfd
  418d61:	lea    r8,[rip+0x29dcf]        # 0x442b37
  418d68:	lea    rdx,[rip+0x29dd9]        # 0x442b48
  418d6f:	mov    rcx,rbx
  418d72:	xor    r14d,r14d
  418d75:	call   0x427dd8
  418d7a:	jmp    0x418c68
  418d7f:	nop
  418d80:	push   r13
  418d82:	push   r12
  418d84:	push   rbp
  418d85:	push   rdi
  418d86:	push   rsi
  418d87:	push   rbx
  418d88:	sub    rsp,0x88
  418d8f:	lea    rbx,[rsp+0x60]
  418d94:	mov    rdi,rcx
  418d97:	mov    esi,r8d
  418d9a:	movsx  ebp,dl
  418d9d:	mov    rcx,rbx
  418da0:	call   0x427da8
  418da5:	lea    rdx,[rip+0x29edc]        # 0x442c88
  418dac:	mov    rcx,rbx
  418daf:	call   0x427d70
  418db4:	test   sil,sil
  418db7:	sete   r9b
  418dbb:	test   rdi,rdi
  418dbe:	sete   al
  418dc1:	mov    esi,r9d
  418dc4:	and    sil,al
  418dc7:	jne    0x418f25
  418dcd:	lea    rax,[rip+0x2980c]        # 0x4425e0
  418dd4:	mov    r12,QWORD PTR [rip+0x3bb05]        # 0x4548e0
  418ddb:	mov    QWORD PTR [rsp+0x38],0x0
  418de4:	mov    DWORD PTR [rsp+0x20],0x0
  418dec:	mov    r9d,esi
  418def:	mov    r8,rdi
  418df2:	mov    QWORD PTR [rsp+0x40],rax
  418df7:	lea    rax,[rip+0x29420]        # 0x44221e
  418dfe:	and    r9d,0x1
  418e02:	mov    rdx,rbx
  418e05:	mov    QWORD PTR [rsp+0x30],rax
  418e0a:	lea    rax,[rip+0x279f2]        # 0x440803
  418e11:	mov    QWORD PTR [rsp+0x28],rax
  418e16:	mov    rcx,QWORD PTR [r12]
  418e1a:	call   0x41e8f0
  418e1f:	lea    rdx,[rip+0x29ee8]        # 0x442d0e
  418e26:	mov    rcx,rbx
  418e29:	call   0x427dc8
  418e2e:	mov    rcx,QWORD PTR [rsp+0x60]
  418e33:	xor    edx,edx
  418e35:	call   0x4062b0
  418e3a:	mov    rcx,rbx
  418e3d:	mov    rsi,rax
  418e40:	call   0x427d60
  418e45:	xor    eax,eax
  418e47:	test   rsi,rsi
  418e4a:	je     0x418ee1
  418e50:	mov    rcx,rsi
  418e53:	call   0x427e70
  418e58:	test   eax,eax
  418e5a:	je     0x418ef1
  418e60:	xor    ebx,ebx
  418e62:	mov    r12,QWORD PTR [rip+0x3b9a7]        # 0x454810
  418e69:	jmp    0x418ec8
  418e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  418e70:	xor    r8d,r8d
  418e73:	mov    edx,ebx
  418e75:	mov    rcx,rsi
  418e78:	call   0x427e98
  418e7d:	mov    r8d,0x1
  418e83:	mov    edx,ebx
  418e85:	mov    rcx,rsi
  418e88:	mov    r13,rax
  418e8b:	call   0x427e98
  418e90:	mov    r8d,0x2
  418e96:	mov    rdi,rax
  418e99:	mov    edx,ebx
  418e9b:	mov    rcx,rsi
  418e9e:	call   0x427e98
  418ea3:	mov    r9d,ebp
  418ea6:	mov    rdx,rax
  418ea9:	mov    r8,r13
  418eac:	mov    rcx,rdi
  418eaf:	call   0x4149c0
  418eb4:	test   al,al
  418eb6:	je     0x418f40
  418ebc:	movzx  eax,BYTE PTR [r12]
  418ec1:	test   al,al
  418ec3:	jne    0x418f0b
  418ec5:	add    ebx,0x1
  418ec8:	mov    rcx,rsi
  418ecb:	call   0x427e70
  418ed0:	cmp    ebx,eax
  418ed2:	jl     0x418e70
  418ed4:	mov    rcx,rsi
  418ed7:	call   0x427f68
  418edc:	mov    eax,0x1
  418ee1:	add    rsp,0x88
  418ee8:	pop    rbx
  418ee9:	pop    rsi
  418eea:	pop    rdi
  418eeb:	pop    rbp
  418eec:	pop    r12
  418eee:	pop    r13
  418ef0:	ret    
  418ef1:	cmp    BYTE PTR [r12+0x11a],0x0
  418efa:	jne    0x418f0b
  418efc:	lea    rcx,[rip+0x29e1d]        # 0x442d20
  418f03:	mov    rdx,rdi
  418f06:	call   0x405d90
  418f0b:	mov    rcx,rsi
  418f0e:	call   0x427f68
  418f13:	xor    eax,eax
  418f15:	add    rsp,0x88
  418f1c:	pop    rbx
  418f1d:	pop    rsi
  418f1e:	pop    rdi
  418f1f:	pop    rbp
  418f20:	pop    r12
  418f22:	pop    r13
  418f24:	ret    
  418f25:	lea    rdx,[rip+0x28cbc]        # 0x441be8
  418f2c:	mov    rcx,rbx
  418f2f:	call   0x427dc8
  418f34:	jmp    0x418dcd
  418f39:	nop    DWORD PTR [rax+0x0]
  418f40:	mov    rcx,rsi
  418f43:	mov    BYTE PTR [rsp+0x5f],al
  418f47:	call   0x427f68
  418f4c:	movzx  eax,BYTE PTR [rsp+0x5f]
  418f51:	add    rsp,0x88
  418f58:	pop    rbx
  418f59:	pop    rsi
  418f5a:	pop    rdi
  418f5b:	pop    rbp
  418f5c:	pop    r12
  418f5e:	pop    r13
  418f60:	ret    
  418f61:	nop    DWORD PTR [rax+rax*1+0x0]
  418f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f70:	push   r15
  418f72:	push   r14
  418f74:	push   r13
  418f76:	push   r12
  418f78:	push   rbp
  418f79:	push   rdi
  418f7a:	push   rsi
  418f7b:	push   rbx
  418f7c:	sub    rsp,0x168
  418f83:	mov    r15,QWORD PTR [rip+0x3b956]        # 0x4548e0
  418f8a:	lea    r14,[rsp+0x70]
  418f8f:	mov    rbx,rcx
  418f92:	mov    edi,edx
  418f94:	mov    BYTE PTR [rsp+0x5f],dl
  418f98:	mov    rax,QWORD PTR [r15+0x28]
  418f9c:	mov    rcx,r14
  418f9f:	mov    QWORD PTR [rsp+0x90],rax
  418fa7:	mov    rax,QWORD PTR [r15+0x30]
  418fab:	mov    QWORD PTR [rsp+0x98],rax
  418fb3:	mov    rax,QWORD PTR [r15+0x38]
  418fb7:	mov    BYTE PTR [rsp+0x9d],0x0
  418fbf:	mov    QWORD PTR [rsp+0xa0],rax
  418fc7:	mov    rax,QWORD PTR [r15+0x40]
  418fcb:	mov    QWORD PTR [rsp+0xa8],rax
  418fd3:	mov    rax,QWORD PTR [r15+0x48]
  418fd7:	mov    QWORD PTR [rsp+0xb0],rax
  418fdf:	mov    rax,QWORD PTR [r15+0x50]
  418fe3:	mov    QWORD PTR [rsp+0xb8],rax
  418feb:	mov    rax,QWORD PTR [r15+0x58]
  418fef:	mov    QWORD PTR [rsp+0xc0],rax
  418ff7:	mov    rax,QWORD PTR [r15+0x60]
  418ffb:	mov    QWORD PTR [rsp+0xc8],rax
  419003:	mov    rax,QWORD PTR [r15+0x68]
  419007:	mov    QWORD PTR [rsp+0xd0],rax
  41900f:	mov    rax,QWORD PTR [r15+0x70]
  419013:	mov    QWORD PTR [rsp+0xd8],rax
  41901b:	mov    rax,QWORD PTR [r15+0x78]
  41901f:	mov    QWORD PTR [rsp+0xe0],rax
  419027:	mov    rax,QWORD PTR [r15+0x80]
  41902e:	mov    QWORD PTR [rsp+0xe8],rax
  419036:	call   0x427da8
  41903b:	cmp    DWORD PTR [r15+0xe4],0x138e3
  419046:	jle    0x4190d0
  41904c:	lea    rdx,[rip+0x29d15]        # 0x442d68
  419053:	mov    rcx,r14
  419056:	call   0x427d70
  41905b:	test   dil,dil
  41905e:	jne    0x4195e5
  419064:	mov    eax,DWORD PTR [r15+0xe4]
  41906b:	mov    ebp,0x3
  419070:	cmp    eax,0x15ff3
  419075:	jg     0x419620
  41907b:	lea    rdx,[rip+0x29e65]        # 0x442ee7
  419082:	mov    rcx,r14
  419085:	call   0x427dc8
  41908a:	lea    rax,[rip+0x29e73]        # 0x442f04
  419091:	mov    QWORD PTR [rsp+0x40],0x0
  41909a:	mov    QWORD PTR [rsp+0x38],0x0
  4190a3:	mov    QWORD PTR [rsp+0x28],0x0
  4190ac:	mov    DWORD PTR [rsp+0x20],0x0
  4190b4:	xor    r9d,r9d
  4190b7:	mov    QWORD PTR [rsp+0x30],rax
  4190bc:	mov    rcx,QWORD PTR [r15]
  4190bf:	mov    r8,rbx
  4190c2:	mov    rdx,r14
  4190c5:	call   0x41e8f0
  4190ca:	jmp    0x419124
  4190cc:	nop    DWORD PTR [rax+0x0]
  4190d0:	lea    rdx,[rip+0x29e39]        # 0x442f10
  4190d7:	mov    rcx,r14
  4190da:	mov    ebp,0x3
  4190df:	call   0x427d70
  4190e4:	lea    rax,[rip+0x29f71]        # 0x44305c
  4190eb:	mov    QWORD PTR [rsp+0x40],0x0
  4190f4:	mov    QWORD PTR [rsp+0x38],0x0
  4190fd:	mov    QWORD PTR [rsp+0x28],0x0
  419106:	mov    DWORD PTR [rsp+0x20],0x0
  41910e:	xor    r9d,r9d
  419111:	mov    QWORD PTR [rsp+0x30],rax
  419116:	mov    rcx,QWORD PTR [r15]
  419119:	mov    r8,rbx
  41911c:	mov    rdx,r14
  41911f:	call   0x41e8f0
  419124:	lea    rdx,[rip+0x278cd]        # 0x4409f8
  41912b:	mov    rcx,r14
  41912e:	call   0x427dc8
  419133:	mov    rcx,QWORD PTR [rsp+0x70]
  419138:	xor    edx,edx
  41913a:	call   0x4062b0
  41913f:	mov    rbx,rax
  419142:	xor    eax,eax
  419144:	test   rbx,rbx
  419147:	je     0x419589
  41914d:	mov    rcx,rbx
  419150:	lea    r13,[rsp+0xf0]
  419158:	call   0x427e70
  41915d:	lea    ecx,[rax+0x1]
  419160:	mov    esi,eax
  419162:	mov    DWORD PTR [rsp+0x68],eax
  419166:	movsxd rcx,ecx
  419169:	shl    rcx,0x3
  41916d:	call   0x424840
  419172:	lea    rdx,[rsp+0x90]
  41917a:	lea    r8,[rip+0x29ee5]        # 0x443066
  419181:	mov    r9d,ebp
  419184:	mov    rcx,r13
  419187:	mov    DWORD PTR [rsp+0x20],esi
  41918b:	mov    QWORD PTR [rsp+0x60],rax
  419190:	call   0x412100
  419195:	lea    rdx,[rip+0x29ed8]        # 0x443074
  41919c:	mov    r9d,0x6c
  4191a2:	mov    r8d,0x1
  4191a8:	mov    rcx,r13
  4191ab:	call   0x4121a0
  4191b0:	lea    rdx,[rip+0x29ec7]        # 0x44307e
  4191b7:	mov    r9d,0x6c
  4191bd:	mov    r8d,0x1
  4191c3:	mov    rcx,r13
  4191c6:	call   0x4121a0
  4191cb:	lea    rdx,[rip+0x29eb7]        # 0x443089
  4191d2:	mov    r9d,0x6c
  4191d8:	mov    r8d,0x1
  4191de:	mov    rcx,r13
  4191e1:	call   0x4121a0
  4191e6:	test   dil,dil
  4191e9:	jne    0x4195b4
  4191ef:	mov    eax,DWORD PTR [rsp+0x68]
  4191f3:	test   eax,eax
  4191f5:	jle    0x419634
  4191fb:	xor    r12d,r12d
  4191fe:	jmp    0x4193e0
  419203:	mov    rcx,rbx
  419206:	mov    r8d,0x2
  41920c:	mov    edx,ebp
  41920e:	lea    rdi,[rip+0x25663]        # 0x43e878
  419215:	call   0x427e98
  41921a:	mov    ecx,0x2
  41921f:	mov    rsi,rax
  419222:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419224:	jne    0x419464
  41922a:	mov    rcx,rbx
  41922d:	mov    r8d,0x3
  419233:	mov    edx,ebp
  419235:	lea    rdi,[rip+0x2563c]        # 0x43e878
  41923c:	call   0x427e98
  419241:	mov    ecx,0x2
  419246:	mov    rsi,rax
  419249:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41924b:	je     0x419494
  419251:	mov    rcx,rbx
  419254:	mov    r8d,0x4
  41925a:	mov    edx,ebp
  41925c:	lea    rdi,[rip+0x25615]        # 0x43e878
  419263:	call   0x427e98
  419268:	mov    ecx,0x2
  41926d:	mov    rsi,rax
  419270:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419272:	je     0x419480
  419278:	mov    rcx,rbx
  41927b:	mov    r8d,0x5
  419281:	mov    edx,ebp
  419283:	lea    rdi,[rip+0x255ee]        # 0x43e878
  41928a:	call   0x427e98
  41928f:	mov    ecx,0x2
  419294:	mov    rsi,rax
  419297:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419299:	jne    0x419450
  41929f:	cmp    DWORD PTR [r15+0xe4],0x15ff3
  4192aa:	jle    0x4192d9
  4192ac:	cmp    BYTE PTR [rsp+0x5f],0x1
  4192b1:	mov    rcx,rbx
  4192b4:	mov    edx,ebp
  4192b6:	lea    rdi,[rip+0x255bb]        # 0x43e878
  4192bd:	sbb    r8d,r8d
  4192c0:	add    r8d,0xa
  4192c4:	call   0x427e98
  4192c9:	mov    ecx,0x2
  4192ce:	mov    rsi,rax
  4192d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4192d3:	je     0x4195a0
  4192d9:	mov    r8d,0x6
  4192df:	mov    edx,ebp
  4192e1:	mov    rcx,rbx
  4192e4:	call   0x427e98
  4192e9:	mov    rcx,rax
  4192ec:	call   0x42a558
  4192f1:	test   eax,eax
  4192f3:	js     0x419329
  4192f5:	cmp    QWORD PTR [rsp+0x78],0x0
  4192fb:	jne    0x4194c4
  419301:	test   eax,eax
  419303:	je     0x4194b0
  419309:	lea    rdx,[rip+0x29a45]        # 0x442d55
  419310:	lea    rdi,[rip+0x29a30]        # 0x442d47
  419317:	cmp    eax,0x1
  41931a:	mov    r8d,eax
  41931d:	mov    rcx,r14
  419320:	cmove  rdx,rdi
  419324:	call   0x427dd8
  419329:	mov    r8d,0x7
  41932f:	mov    edx,ebp
  419331:	mov    rcx,rbx
  419334:	call   0x427e98
  419339:	cmp    BYTE PTR [rax],0x0
  41933c:	je     0x419374
  41933e:	cmp    QWORD PTR [rsp+0x78],0x0
  419344:	jne    0x4194e0
  41934a:	lea    rdx,[rip+0x29d9b]        # 0x4430ec
  419351:	mov    rcx,r14
  419354:	call   0x427dc8
  419359:	mov    edx,ebp
  41935b:	mov    rcx,rbx
  41935e:	mov    r8d,0x7
  419364:	call   0x427e98
  419369:	mov    rcx,r14
  41936c:	mov    rdx,rax
  41936f:	call   0x427dc8
  419374:	mov    rcx,QWORD PTR [rsp+0x70]
  419379:	call   0x424900
  41937e:	mov    rsi,QWORD PTR [rsp+0x60]
  419383:	xor    r9d,r9d
  419386:	xor    r8d,r8d
  419389:	mov    rdx,rax
  41938c:	mov    rcx,r13
  41938f:	mov    QWORD PTR [rsi+r12*8],rax
  419393:	call   0x412220
  419398:	mov    r8d,0x8
  41939e:	mov    edx,ebp
  4193a0:	mov    rcx,rbx
  4193a3:	call   0x427e98
  4193a8:	xor    r9d,r9d
  4193ab:	xor    r8d,r8d
  4193ae:	mov    rdx,rax
  4193b1:	mov    rcx,r13
  4193b4:	call   0x412220
  4193b9:	cmp    BYTE PTR [rsp+0x5f],0x0
  4193be:	je     0x4193d1
  4193c0:	cmp    DWORD PTR [r15+0xe4],0x13947
  4193cb:	jg     0x4194f4
  4193d1:	add    r12,0x1
  4193d5:	cmp    DWORD PTR [rsp+0x68],r12d
  4193da:	jle    0x419524
  4193e0:	xor    r8d,r8d
  4193e3:	mov    edx,r12d
  4193e6:	mov    rcx,rbx
  4193e9:	call   0x427e98
  4193ee:	xor    r9d,r9d
  4193f1:	xor    r8d,r8d
  4193f4:	mov    rdx,rax
  4193f7:	mov    rcx,r13
  4193fa:	lea    rdi,[rip+0x25477]        # 0x43e878
  419401:	mov    ebp,r12d
  419404:	call   0x412220
  419409:	mov    rcx,r14
  41940c:	call   0x427d68
  419411:	mov    rcx,rbx
  419414:	mov    r8d,0x1
  41941a:	mov    edx,r12d
  41941d:	call   0x427e98
  419422:	mov    ecx,0x2
  419427:	mov    rsi,rax
  41942a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41942c:	jne    0x419203
  419432:	lea    rdx,[rip+0x29c5a]        # 0x443093
  419439:	mov    rcx,r14
  41943c:	call   0x414750
  419441:	jmp    0x419203
  419446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419450:	lea    rdx,[rip+0x29c6b]        # 0x4430c2
  419457:	mov    rcx,r14
  41945a:	call   0x414750
  41945f:	jmp    0x41929f
  419464:	lea    rdx,[rip+0x29c32]        # 0x44309d
  41946b:	mov    rcx,r14
  41946e:	call   0x414750
  419473:	jmp    0x41922a
  419478:	nop    DWORD PTR [rax+rax*1+0x0]
  419480:	lea    rdx,[rip+0x29c31]        # 0x4430b8
  419487:	mov    rcx,r14
  41948a:	call   0x414750
  41948f:	jmp    0x419278
  419494:	lea    rdx,[rip+0x29c11]        # 0x4430ac
  41949b:	mov    rcx,r14
  41949e:	call   0x414750
  4194a3:	jmp    0x419251
  4194a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4194b0:	lea    rdx,[rip+0x29c24]        # 0x4430db
  4194b7:	mov    rcx,r14
  4194ba:	call   0x427dc8
  4194bf:	jmp    0x419329
  4194c4:	mov    edx,0xa
  4194c9:	mov    rcx,r14
  4194cc:	mov    DWORD PTR [rsp+0x6c],eax
  4194d0:	call   0x427dd0
  4194d5:	mov    eax,DWORD PTR [rsp+0x6c]
  4194d9:	jmp    0x419301
  4194de:	xchg   ax,ax
  4194e0:	lea    rdx,[rip+0x29c03]        # 0x4430ea
  4194e7:	mov    rcx,r14
  4194ea:	call   0x427dc8
  4194ef:	jmp    0x41934a
  4194f4:	mov    r8d,0x9
  4194fa:	mov    edx,ebp
  4194fc:	mov    rcx,rbx
  4194ff:	call   0x427e98
  419504:	xor    r9d,r9d
  419507:	xor    r8d,r8d
  41950a:	mov    rdx,rax
  41950d:	mov    rcx,r13
  419510:	add    r12,0x1
  419514:	call   0x412220
  419519:	cmp    DWORD PTR [rsp+0x68],r12d
  41951e:	jg     0x4193e0
  419524:	mov    rcx,r14
  419527:	call   0x427d60
  41952c:	mov    rdx,QWORD PTR [r15+0x10]
  419530:	mov    r8,QWORD PTR [r15+0x108]
  419537:	mov    rcx,r13
  41953a:	call   0x412460
  41953f:	mov    rcx,r13
  419542:	call   0x412350
  419547:	mov    eax,DWORD PTR [rsp+0x68]
  41954b:	mov    rdi,QWORD PTR [rsp+0x60]
  419550:	sub    eax,0x1
  419553:	mov    rbp,rdi
  419556:	lea    r12,[rdi+rax*8+0x8]
  41955b:	nop    DWORD PTR [rax+rax*1+0x0]
  419560:	mov    rcx,QWORD PTR [rbp+0x0]
  419564:	add    rbp,0x8
  419568:	call   0x42a4e8
  41956d:	cmp    rbp,r12
  419570:	jne    0x419560
  419572:	mov    rcx,QWORD PTR [rsp+0x60]
  419577:	call   0x42a4e8
  41957c:	mov    rcx,rbx
  41957f:	call   0x427f68
  419584:	mov    eax,0x1
  419589:	add    rsp,0x168
  419590:	pop    rbx
  419591:	pop    rsi
  419592:	pop    rdi
  419593:	pop    rbp
  419594:	pop    r12
  419596:	pop    r13
  419598:	pop    r14
  41959a:	pop    r15
  41959c:	ret    
  41959d:	nop    DWORD PTR [rax]
  4195a0:	lea    rdx,[rip+0x29b28]        # 0x4430cf
  4195a7:	mov    rcx,r14
  4195aa:	call   0x414750
  4195af:	jmp    0x4192d9
  4195b4:	cmp    DWORD PTR [r15+0xe4],0x13947
  4195bf:	jle    0x4191ef
  4195c5:	lea    rdx,[rip+0x2587e]        # 0x43ee4a
  4195cc:	mov    r9d,0x6c
  4195d2:	mov    r8d,0x1
  4195d8:	mov    rcx,r13
  4195db:	call   0x4121a0
  4195e0:	jmp    0x4191ef
  4195e5:	cmp    DWORD PTR [r15+0xe4],0x13947
  4195f0:	mov    ebp,0x3
  4195f5:	jle    0x41907b
  4195fb:	lea    rdx,[rip+0x2988e]        # 0x442e90
  419602:	mov    rcx,r14
  419605:	mov    bpl,0x4
  419608:	call   0x427dc8
  41960d:	mov    eax,DWORD PTR [r15+0xe4]
  419614:	jmp    0x419070
  419619:	nop    DWORD PTR [rax+0x0]
  419620:	lea    rdx,[rip+0x298ac]        # 0x442ed3
  419627:	mov    rcx,r14
  41962a:	call   0x427dc8
  41962f:	jmp    0x41907b
  419634:	mov    rcx,r14
  419637:	call   0x427d60
  41963c:	mov    rdx,QWORD PTR [r15+0x10]
  419640:	mov    r8,QWORD PTR [r15+0x108]
  419647:	mov    rcx,r13
  41964a:	call   0x412460
  41964f:	mov    rcx,r13
  419652:	call   0x412350
  419657:	jmp    0x419572
  41965c:	nop    DWORD PTR [rax+0x0]
  419660:	push   r13
  419662:	push   r12
  419664:	push   rbp
  419665:	push   rdi
  419666:	push   rsi
  419667:	push   rbx
  419668:	sub    rsp,0x118
  41966f:	mov    rbx,QWORD PTR [rip+0x3b26a]        # 0x4548e0
  419676:	lea    rbp,[rsp+0x70]
  41967b:	mov    r12,rcx
  41967e:	mov    ecx,0x13
  419683:	mov    r13,rdx
  419686:	lea    rsi,[rbx+0x28]
  41968a:	mov    rdi,rbp
  41968d:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419690:	lea    rsi,[rsp+0x50]
  419695:	mov    rcx,rsi
  419698:	call   0x427da8
  41969d:	cmp    DWORD PTR [rbx+0xe4],0x15f8f
  4196a7:	jle    0x419810
  4196ad:	lea    rax,[rip+0x29b3c]        # 0x4431f0
  4196b4:	lea    r9,[rip+0x29a47]        # 0x443102
  4196bb:	lea    r8,[rip+0x29a49]        # 0x44310b
  4196c2:	lea    rdx,[rip+0x29a47]        # 0x443110
  4196c9:	mov    rcx,rsi
  4196cc:	lea    rdi,[rip+0x29b37]        # 0x44320a
  4196d3:	mov    QWORD PTR [rsp+0x20],rax
  4196d8:	call   0x427d70
  4196dd:	lea    rax,[rip+0x29b15]        # 0x4431f9
  4196e4:	mov    QWORD PTR [rsp+0x40],0x0
  4196ed:	mov    QWORD PTR [rsp+0x38],0x0
  4196f6:	mov    QWORD PTR [rsp+0x28],0x0
  4196ff:	mov    DWORD PTR [rsp+0x20],0x0
  419707:	xor    r9d,r9d
  41970a:	mov    QWORD PTR [rsp+0x30],rax
  41970f:	mov    rcx,QWORD PTR [rbx]
  419712:	mov    r8,r12
  419715:	mov    rdx,rsi
  419718:	call   0x41e8f0
  41971d:	mov    QWORD PTR [rsp+0x40],0x0
  419726:	mov    QWORD PTR [rsp+0x38],0x0
  41972f:	mov    r8,r13
  419732:	mov    QWORD PTR [rsp+0x30],rdi
  419737:	mov    QWORD PTR [rsp+0x28],0x0
  419740:	movsx  r9d,al
  419744:	mov    DWORD PTR [rsp+0x20],0x0
  41974c:	mov    rcx,QWORD PTR [rbx]
  41974f:	mov    rdx,rsi
  419752:	call   0x41e8f0
  419757:	lea    rdx,[rip+0x28210]        # 0x44196e
  41975e:	mov    rcx,rsi
  419761:	call   0x427dc8
  419766:	mov    rcx,QWORD PTR [rsp+0x50]
  41976b:	xor    edx,edx
  41976d:	call   0x4062b0
  419772:	mov    r13,rax
  419775:	xor    eax,eax
  419777:	test   r13,r13
  41977a:	je     0x4197fe
  419780:	mov    rcx,r13
  419783:	call   0x427e70
  419788:	test   eax,eax
  41978a:	jne    0x4197b0
  41978c:	cmp    BYTE PTR [rbx+0x11a],0x0
  419793:	jne    0x4197b0
  419795:	test   r12,r12
  419798:	mov    rcx,QWORD PTR [rbx+0x10]
  41979c:	je     0x419832
  4197a2:	lea    rdx,[rip+0x29ab6]        # 0x44325f
  4197a9:	call   0x426370
  4197ae:	jmp    0x4197e9
  4197b0:	mov    r9,QWORD PTR [rbx+0x108]
  4197b7:	mov    r8,QWORD PTR [rbx+0x10]
  4197bb:	lea    rax,[rip+0x29ace]        # 0x443290
  4197c2:	mov    rdx,rbp
  4197c5:	mov    rcx,r13
  4197c8:	mov    QWORD PTR [rsp+0xd0],0x0
  4197d4:	mov    QWORD PTR [rsp+0xe0],rax
  4197dc:	mov    BYTE PTR [rsp+0xf0],0x1
  4197e4:	call   0x4141a0
  4197e9:	mov    rcx,r13
  4197ec:	call   0x427f68
  4197f1:	mov    rcx,rsi
  4197f4:	call   0x427d68
  4197f9:	mov    eax,0x1
  4197fe:	add    rsp,0x118
  419805:	pop    rbx
  419806:	pop    rsi
  419807:	pop    rdi
  419808:	pop    rbp
  419809:	pop    r12
  41980b:	pop    r13
  41980d:	ret    
  41980e:	xchg   ax,ax
  419810:	mov    rcx,QWORD PTR [rbx+0x10]
  419814:	lea    rdx,[rip+0x29a05]        # 0x443220
  41981b:	call   0x426370
  419820:	xor    eax,eax
  419822:	add    rsp,0x118
  419829:	pop    rbx
  41982a:	pop    rsi
  41982b:	pop    rdi
  41982c:	pop    rbp
  41982d:	pop    r12
  41982f:	pop    r13
  419831:	ret    
  419832:	lea    rdx,[rip+0x29a43]        # 0x44327c
  419839:	call   0x426370
  41983e:	jmp    0x4197e9
  419840:	push   r15
  419842:	push   r14
  419844:	push   r13
  419846:	push   r12
  419848:	push   rbp
  419849:	push   rdi
  41984a:	push   rsi
  41984b:	push   rbx
  41984c:	sub    rsp,0x148
  419853:	mov    rsi,rcx
  419856:	mov    rbp,rdx
  419859:	mov    edx,0x74
  41985e:	mov    DWORD PTR [rsp+0x74],r8d
  419863:	mov    DWORD PTR [rsp+0x70],r9d
  419868:	lea    rdi,[rsp+0xa0]
  419870:	call   0x42a428
  419875:	mov    rcx,rsi
  419878:	test   rax,rax
  41987b:	mov    edx,0x69
  419880:	setne  r15b
  419884:	call   0x42a428
  419889:	mov    rcx,rsi
  41988c:	test   rax,rax
  41988f:	mov    edx,0x76
  419894:	setne  r12b
  419898:	call   0x42a428
  41989d:	mov    rcx,rsi
  4198a0:	test   rax,rax
  4198a3:	mov    edx,0x6d
  4198a8:	setne  r14b
  4198ac:	call   0x42a428
  4198b1:	mov    rcx,rsi
  4198b4:	test   rax,rax
  4198b7:	mov    edx,0x73
  4198bc:	setne  r13b
  4198c0:	call   0x42a428
  4198c5:	mov    rcx,rsi
  4198c8:	test   rax,rax
  4198cb:	mov    edx,0x45
  4198d0:	setne  bl
  4198d3:	call   0x42a428
  4198d8:	test   rax,rax
  4198db:	mov    rax,QWORD PTR [rip+0x3affe]        # 0x4548e0
  4198e2:	mov    QWORD PTR [rsp+0x78],rdi
  4198e7:	setne  dl
  4198ea:	mov    ecx,0x13
  4198ef:	lea    rsi,[rax+0x28]
  4198f3:	mov    eax,r12d
  4198f6:	or     eax,r15d
  4198f9:	or     eax,r14d
  4198fc:	or     eax,r13d
  4198ff:	or     al,bl
  419901:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419904:	jne    0x419bb0
  41990a:	test   dl,dl
  41990c:	jne    0x419bb0
  419912:	mov    r14d,0x1
  419918:	mov    ebx,0x1
  41991d:	mov    r15d,0x1
  419923:	mov    esi,0x1
  419928:	mov    edi,0x1
  41992d:	lea    r13,[rsp+0x80]
  419935:	mov    rcx,r13
  419938:	call   0x427da8
  41993d:	lea    rax,[rip+0x26f36]        # 0x44087a
  419944:	lea    r9,[rip+0x26ae9]        # 0x440434
  41994b:	lea    r8,[rip+0x26ae7]        # 0x440439
  419952:	lea    rdx,[rip+0x2994f]        # 0x4432a8
  419959:	mov    rcx,r13
  41995c:	mov    QWORD PTR [rsp+0x60],rax
  419961:	lea    rax,[rip+0x254a1]        # 0x43ee09
  419968:	mov    QWORD PTR [rsp+0x58],rax
  41996d:	lea    rax,[rip+0x2868b]        # 0x441fff
  419974:	mov    QWORD PTR [rsp+0x50],rax
  419979:	lea    rax,[rip+0x29a2b]        # 0x4433ab
  419980:	mov    QWORD PTR [rsp+0x48],rax
  419985:	lea    rax,[rip+0x28681]        # 0x44200d
  41998c:	mov    QWORD PTR [rsp+0x40],rax
  419991:	lea    rax,[rip+0x29a1b]        # 0x4433b3
  419998:	mov    QWORD PTR [rsp+0x38],rax
  41999d:	lea    rax,[rip+0x28672]        # 0x442016
  4199a4:	mov    QWORD PTR [rsp+0x30],rax
  4199a9:	lea    rax,[rip+0x28678]        # 0x442028
  4199b0:	mov    QWORD PTR [rsp+0x28],rax
  4199b5:	lea    rax,[rip+0x28671]        # 0x44202d
  4199bc:	mov    QWORD PTR [rsp+0x20],rax
  4199c1:	call   0x427d70
  4199c6:	test   r12b,r12b
  4199c9:	jne    0x419c40
  4199cf:	cmp    BYTE PTR [rsp+0x74],0x0
  4199d4:	je     0x419d4b
  4199da:	mov    rax,QWORD PTR [rip+0x3aeff]        # 0x4548e0
  4199e1:	mov    eax,DWORD PTR [rax+0xe4]
  4199e7:	cmp    eax,0x15f8f
  4199ec:	jg     0x419d14
  4199f2:	cmp    eax,0x138e3
  4199f7:	jg     0x419d30
  4199fd:	lea    r8,[rip+0x25446]        # 0x43ee4a
  419a04:	lea    rdx,[rip+0x29a65]        # 0x443470
  419a0b:	mov    rcx,r13
  419a0e:	call   0x427dd8
  419a13:	lea    rdx,[rip+0x29a96]        # 0x4434b0
  419a1a:	mov    rcx,r13
  419a1d:	call   0x427dc8
  419a22:	test   r12b,r12b
  419a25:	jne    0x419c70
  419a2b:	lea    rdx,[rip+0x29b59]        # 0x44358b
  419a32:	mov    rcx,r13
  419a35:	call   0x427dc8
  419a3a:	test   dil,dil
  419a3d:	jne    0x419d00
  419a43:	test   sil,sil
  419a46:	jne    0x419ce4
  419a4c:	test   r15b,r15b
  419a4f:	jne    0x419cd0
  419a55:	test   r12b,r12b
  419a58:	jne    0x419cb4
  419a5e:	test   bl,bl
  419a60:	jne    0x419ca0
  419a66:	test   rbp,rbp
  419a69:	setne  sil
  419a6d:	cmp    BYTE PTR [rsp+0x70],0x0
  419a72:	jne    0x419c84
  419a78:	test   sil,sil
  419a7b:	jne    0x419c84
  419a81:	test   r14b,r14b
  419a84:	jne    0x419c22
  419a8a:	lea    rdx,[rip+0x24686]        # 0x43e117
  419a91:	mov    rcx,r13
  419a94:	call   0x427dc8
  419a99:	lea    rdx,[rip+0x29b24]        # 0x4435c4
  419aa0:	mov    rcx,r13
  419aa3:	call   0x427dc8
  419aa8:	cmp    BYTE PTR [rsp+0x70],0x0
  419aad:	jne    0x419ac3
  419aaf:	test   rbp,rbp
  419ab2:	jne    0x419ac3
  419ab4:	lea    rdx,[rip+0x26cbd]        # 0x440778
  419abb:	mov    rcx,r13
  419abe:	call   0x427dc8
  419ac3:	lea    rdx,[rip+0x29afe]        # 0x4435c8
  419aca:	mov    rcx,r13
  419acd:	call   0x427dc8
  419ad2:	lea    rax,[rip+0x28b07]        # 0x4425e0
  419ad9:	mov    QWORD PTR [rsp+0x38],0x0
  419ae2:	mov    DWORD PTR [rsp+0x20],0x0
  419aea:	mov    r9d,0x1
  419af0:	mov    r8,rbp
  419af3:	mov    rdx,r13
  419af6:	mov    QWORD PTR [rsp+0x40],rax
  419afb:	lea    rax,[rip+0x2871c]        # 0x44221e
  419b02:	mov    QWORD PTR [rsp+0x30],rax
  419b07:	lea    rax,[rip+0x26cf5]        # 0x440803
  419b0e:	mov    QWORD PTR [rsp+0x28],rax
  419b13:	mov    rax,QWORD PTR [rip+0x3adc6]        # 0x4548e0
  419b1a:	mov    rcx,QWORD PTR [rax]
  419b1d:	call   0x41e8f0
  419b22:	lea    rdx,[rip+0x29ac3]        # 0x4435ec
  419b29:	mov    rcx,r13
  419b2c:	call   0x427dc8
  419b31:	mov    rcx,QWORD PTR [rsp+0x80]
  419b39:	xor    edx,edx
  419b3b:	call   0x4062b0
  419b40:	mov    rcx,r13
  419b43:	mov    rbx,rax
  419b46:	call   0x427d60
  419b4b:	xor    eax,eax
  419b4d:	test   rbx,rbx
  419b50:	je     0x419b94
  419b52:	mov    rcx,rbx
  419b55:	call   0x427e70
  419b5a:	test   eax,eax
  419b5c:	jne    0x419bc1
  419b5e:	mov    rax,QWORD PTR [rip+0x3ad7b]        # 0x4548e0
  419b65:	cmp    BYTE PTR [rax+0x11a],0x0
  419b6c:	jne    0x419bc1
  419b6e:	test   sil,sil
  419b71:	je     0x419d60
  419b77:	mov    rcx,QWORD PTR [rax+0x10]
  419b7b:	lea    rdx,[rip+0x29a78]        # 0x4435fa
  419b82:	call   0x426370
  419b87:	mov    rcx,rbx
  419b8a:	call   0x427f68
  419b8f:	mov    eax,0x1
  419b94:	add    rsp,0x148
  419b9b:	pop    rbx
  419b9c:	pop    rsi
  419b9d:	pop    rdi
  419b9e:	pop    rbp
  419b9f:	pop    r12
  419ba1:	pop    r13
  419ba3:	pop    r14
  419ba5:	pop    r15
  419ba7:	ret    
  419ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  419bb0:	mov    edi,r15d
  419bb3:	mov    esi,r14d
  419bb6:	mov    r15d,r13d
  419bb9:	mov    r14d,edx
  419bbc:	jmp    0x41992d
  419bc1:	lea    rax,[rip+0x29a65]        # 0x44362d
  419bc8:	mov    rdx,QWORD PTR [rsp+0x78]
  419bcd:	mov    rcx,rbx
  419bd0:	mov    QWORD PTR [rsp+0x100],0x0
  419bdc:	mov    BYTE PTR [rsp+0x120],0x1
  419be4:	mov    QWORD PTR [rsp+0x110],rax
  419bec:	lea    rax,[rip+0x2cabd]        # 0x4466b0
  419bf3:	mov    DWORD PTR [rsp+0x130],0x7
  419bfe:	mov    QWORD PTR [rsp+0x128],rax
  419c06:	mov    rax,QWORD PTR [rip+0x3acd3]        # 0x4548e0
  419c0d:	mov    r9,QWORD PTR [rax+0x108]
  419c14:	mov    r8,QWORD PTR [rax+0x10]
  419c18:	call   0x4141a0
  419c1d:	jmp    0x419b87
  419c22:	lea    rdx,[rip+0x29996]        # 0x4435bf
  419c29:	mov    rcx,r13
  419c2c:	call   0x427dc8
  419c31:	jmp    0x419a8a
  419c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c40:	lea    r8,[rip+0x29772]        # 0x4433b9
  419c47:	lea    rdx,[rip+0x29771]        # 0x4433bf
  419c4e:	mov    rcx,r13
  419c51:	call   0x427dd8
  419c56:	cmp    BYTE PTR [rsp+0x74],0x0
  419c5b:	jne    0x4199da
  419c61:	lea    rdx,[rip+0x29848]        # 0x4434b0
  419c68:	mov    rcx,r13
  419c6b:	call   0x427dc8
  419c70:	lea    rdx,[rip+0x29899]        # 0x443510
  419c77:	mov    rcx,r13
  419c7a:	call   0x427dc8
  419c7f:	jmp    0x419a2b
  419c84:	lea    rdx,[rip+0x2992f]        # 0x4435ba
  419c8b:	mov    rcx,r13
  419c8e:	call   0x427dc8
  419c93:	jmp    0x419a81
  419c98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ca0:	lea    rdx,[rip+0x2990e]        # 0x4435b5
  419ca7:	mov    rcx,r13
  419caa:	call   0x427dc8
  419caf:	jmp    0x419a66
  419cb4:	lea    rdx,[rip+0x298f5]        # 0x4435b0
  419cbb:	mov    rcx,r13
  419cbe:	call   0x427dc8
  419cc3:	jmp    0x419a5e
  419cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  419cd0:	lea    rdx,[rip+0x298d4]        # 0x4435ab
  419cd7:	mov    rcx,r13
  419cda:	call   0x427dc8
  419cdf:	jmp    0x419a55
  419ce4:	lea    rdx,[rip+0x298bb]        # 0x4435a6
  419ceb:	mov    rcx,r13
  419cee:	call   0x427dc8
  419cf3:	jmp    0x419a4c
  419cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  419d00:	lea    rdx,[rip+0x2989a]        # 0x4435a1
  419d07:	mov    rcx,r13
  419d0a:	call   0x427dc8
  419d0f:	jmp    0x419a43
  419d14:	lea    r8,[rip+0x27877]        # 0x441592
  419d1b:	lea    rdx,[rip+0x296b6]        # 0x4433d8
  419d22:	mov    rcx,r13
  419d25:	call   0x427dd8
  419d2a:	jmp    0x4199fd
  419d2f:	nop
  419d30:	lea    r8,[rip+0x2785b]        # 0x441592
  419d37:	lea    rdx,[rip+0x296e2]        # 0x443420
  419d3e:	mov    rcx,r13
  419d41:	call   0x427dd8
  419d46:	jmp    0x4199fd
  419d4b:	lea    rdx,[rip+0x2975e]        # 0x4434b0
  419d52:	mov    rcx,r13
  419d55:	call   0x427dc8
  419d5a:	jmp    0x419a2b
  419d5f:	nop
  419d60:	mov    rax,QWORD PTR [rip+0x3ab79]        # 0x4548e0
  419d67:	lea    rdx,[rip+0x298aa]        # 0x443618
  419d6e:	mov    rcx,QWORD PTR [rax+0x10]
  419d72:	call   0x426370
  419d77:	jmp    0x419b87
  419d7c:	nop    DWORD PTR [rax+0x0]
  419d80:	push   r15
  419d82:	push   r14
  419d84:	push   r13
  419d86:	push   r12
  419d88:	push   rbp
  419d89:	push   rdi
  419d8a:	push   rsi
  419d8b:	push   rbx
  419d8c:	sub    rsp,0x118
  419d93:	mov    rbp,QWORD PTR [rip+0x3ab46]        # 0x4548e0
  419d9a:	lea    rbx,[rsp+0x50]
  419d9f:	lea    r12,[rsp+0x70]
  419da4:	mov    r13,rcx
  419da7:	mov    ecx,0x13
  419dac:	mov    r14d,edx
  419daf:	mov    r15d,r8d
  419db2:	lea    rsi,[rbp+0x28]
  419db6:	mov    rdi,r12
  419db9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419dbc:	mov    rcx,rbx
  419dbf:	call   0x427da8
  419dc4:	lea    r8,[rip+0x26669]        # 0x440434
  419dcb:	lea    rdx,[rip+0x2986d]        # 0x44363f
  419dd2:	mov    rcx,rbx
  419dd5:	call   0x427d70
  419dda:	cmp    DWORD PTR [rbp+0xe4],0x139ab
  419de4:	jg     0x419f60
  419dea:	lea    r8,[rip+0x298a7]        # 0x443698
  419df1:	lea    rdx,[rip+0x298a8]        # 0x4436a0
  419df8:	mov    rcx,rbx
  419dfb:	call   0x427dd8
  419e00:	test   r14b,r14b
  419e03:	jne    0x419f10
  419e09:	lea    r8,[rip+0x2503a]        # 0x43ee4a
  419e10:	lea    rdx,[rip+0x299a1]        # 0x4437b8
  419e17:	mov    rcx,rbx
  419e1a:	call   0x427dd8
  419e1f:	test   r13,r13
  419e22:	je     0x419ef0
  419e28:	lea    rax,[rip+0x29a34]        # 0x443863
  419e2f:	mov    QWORD PTR [rsp+0x40],0x0
  419e38:	mov    QWORD PTR [rsp+0x38],0x0
  419e41:	mov    QWORD PTR [rsp+0x28],0x0
  419e4a:	mov    DWORD PTR [rsp+0x20],0x0
  419e52:	xor    r9d,r9d
  419e55:	mov    QWORD PTR [rsp+0x30],rax
  419e5a:	mov    rcx,QWORD PTR [rbp+0x0]
  419e5e:	mov    r8,r13
  419e61:	mov    rdx,rbx
  419e64:	call   0x41e8f0
  419e69:	lea    rdx,[rip+0x26b88]        # 0x4409f8
  419e70:	mov    rcx,rbx
  419e73:	call   0x427dc8
  419e78:	mov    rcx,QWORD PTR [rsp+0x50]
  419e7d:	xor    edx,edx
  419e7f:	call   0x4062b0
  419e84:	mov    rcx,rbx
  419e87:	mov    rsi,rax
  419e8a:	call   0x427d60
  419e8f:	xor    eax,eax
  419e91:	test   rsi,rsi
  419e94:	je     0x419edc
  419e96:	mov    r9,QWORD PTR [rbp+0x108]
  419e9d:	mov    r8,QWORD PTR [rbp+0x10]
  419ea1:	lea    rax,[rip+0x299e1]        # 0x443889
  419ea8:	mov    rdx,r12
  419eab:	mov    rcx,rsi
  419eae:	mov    QWORD PTR [rsp+0xd0],0x0
  419eba:	mov    QWORD PTR [rsp+0xe0],rax
  419ec2:	mov    BYTE PTR [rsp+0xf0],0x1
  419eca:	call   0x4141a0
  419ecf:	mov    rcx,rsi
  419ed2:	call   0x427f68
  419ed7:	mov    eax,0x1
  419edc:	add    rsp,0x118
  419ee3:	pop    rbx
  419ee4:	pop    rsi
  419ee5:	pop    rdi
  419ee6:	pop    rbp
  419ee7:	pop    r12
  419ee9:	pop    r13
  419eeb:	pop    r14
  419eed:	pop    r15
  419eef:	ret    
  419ef0:	test   r15b,r15b
  419ef3:	jne    0x419e69
  419ef9:	lea    rdx,[rip+0x2996d]        # 0x44386d
  419f00:	mov    rcx,rbx
  419f03:	call   0x427dc8
  419f08:	jmp    0x419e69
  419f0d:	nop    DWORD PTR [rax]
  419f10:	lea    rax,[rip+0x2984c]        # 0x443763
  419f17:	lea    r9,[rip+0x297a0]        # 0x4436be
  419f1e:	lea    r8,[rip+0x297a6]        # 0x4436cb
  419f25:	lea    rdx,[rip+0x297b4]        # 0x4436e0
  419f2c:	mov    rcx,rbx
  419f2f:	mov    QWORD PTR [rsp+0x20],rax
  419f34:	call   0x427dd8
  419f39:	cmp    DWORD PTR [rbp+0xe4],0x15f8f
  419f43:	jg     0x419f80
  419f45:	lea    rdx,[rip+0x2985f]        # 0x4437ab
  419f4c:	mov    rcx,rbx
  419f4f:	call   0x414870
  419f54:	jmp    0x419e09
  419f59:	nop    DWORD PTR [rax+0x0]
  419f60:	lea    r8,[rip+0x26913]        # 0x44087a
  419f67:	lea    rdx,[rip+0x296f2]        # 0x443660
  419f6e:	mov    rcx,rbx
  419f71:	call   0x427dd8
  419f76:	jmp    0x419dea
  419f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  419f80:	lea    r8,[rip+0x297e6]        # 0x44376d
  419f87:	lea    rdx,[rip+0x297f2]        # 0x443780
  419f8e:	mov    rcx,rbx
  419f91:	call   0x427dd8
  419f96:	jmp    0x419f45
  419f98:	nop    DWORD PTR [rax+rax*1+0x0]
  419fa0:	push   r15
  419fa2:	push   r14
  419fa4:	push   r13
  419fa6:	push   r12
  419fa8:	push   rbp
  419fa9:	push   rdi
  419faa:	push   rsi
  419fab:	push   rbx
  419fac:	sub    rsp,0x118
  419fb3:	mov    rbp,QWORD PTR [rip+0x3a926]        # 0x4548e0
  419fba:	lea    rbx,[rsp+0x50]
  419fbf:	lea    r12,[rsp+0x70]
  419fc4:	mov    r13,rcx
  419fc7:	mov    ecx,0x13
  419fcc:	mov    r15d,edx
  419fcf:	mov    r14d,r8d
  419fd2:	lea    rsi,[rbp+0x28]
  419fd6:	mov    rdi,r12
  419fd9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419fdc:	mov    rcx,rbx
  419fdf:	call   0x427da8
  419fe4:	lea    rax,[rip+0x24e1e]        # 0x43ee09
  419feb:	lea    r9,[rip+0x26442]        # 0x440434
  419ff2:	lea    r8,[rip+0x26440]        # 0x440439
  419ff9:	lea    rdx,[rip+0x298a0]        # 0x4438a0
  41a000:	mov    rcx,rbx
  41a003:	mov    QWORD PTR [rsp+0x20],rax
  41a008:	call   0x427d70
  41a00d:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41a017:	jg     0x41a1a4
  41a01d:	lea    r9,[rip+0x299f7]        # 0x443a1b
  41a024:	lea    r8,[rip+0x299f6]        # 0x443a21
  41a02b:	lea    rdx,[rip+0x299fe]        # 0x443a30
  41a032:	mov    rcx,rbx
  41a035:	call   0x427dd8
  41a03a:	test   r15b,r15b
  41a03d:	je     0x41a175
  41a043:	cmp    DWORD PTR [rbp+0xe4],0x16057
  41a04d:	jg     0x41a1c0
  41a053:	lea    r8,[rip+0x24df0]        # 0x43ee4a
  41a05a:	lea    rdx,[rip+0x29b37]        # 0x443b98
  41a061:	mov    rcx,rbx
  41a064:	call   0x427dd8
  41a069:	lea    rdx,[rip+0x29b48]        # 0x443bb8
  41a070:	mov    rcx,rbx
  41a073:	call   0x427dc8
  41a078:	lea    rdx,[rip+0x29b99]        # 0x443c18
  41a07f:	mov    rcx,rbx
  41a082:	call   0x427dc8
  41a087:	lea    rdx,[rip+0x29bf9]        # 0x443c87
  41a08e:	mov    rcx,rbx
  41a091:	call   0x427dc8
  41a096:	test   r14b,r14b
  41a099:	jne    0x41a0a4
  41a09b:	test   r13,r13
  41a09e:	je     0x41a190
  41a0a4:	lea    rax,[rip+0x2786d]        # 0x441918
  41a0ab:	mov    QWORD PTR [rsp+0x38],0x0
  41a0b4:	mov    DWORD PTR [rsp+0x20],0x0
  41a0bc:	mov    r9d,0x1
  41a0c2:	mov    r8,r13
  41a0c5:	mov    rdx,rbx
  41a0c8:	mov    QWORD PTR [rsp+0x40],rax
  41a0cd:	lea    rax,[rip+0x27890]        # 0x441964
  41a0d4:	mov    QWORD PTR [rsp+0x30],rax
  41a0d9:	lea    rax,[rip+0x26723]        # 0x440803
  41a0e0:	mov    QWORD PTR [rsp+0x28],rax
  41a0e5:	mov    rcx,QWORD PTR [rbp+0x0]
  41a0e9:	call   0x41e8f0
  41a0ee:	lea    rdx,[rip+0x27879]        # 0x44196e
  41a0f5:	mov    rcx,rbx
  41a0f8:	call   0x427dc8
  41a0fd:	mov    rcx,QWORD PTR [rsp+0x50]
  41a102:	xor    edx,edx
  41a104:	call   0x4062b0
  41a109:	mov    rcx,rbx
  41a10c:	mov    rsi,rax
  41a10f:	call   0x427d60
  41a114:	xor    eax,eax
  41a116:	test   rsi,rsi
  41a119:	je     0x41a161
  41a11b:	mov    r9,QWORD PTR [rbp+0x108]
  41a122:	mov    r8,QWORD PTR [rbp+0x10]
  41a126:	lea    rax,[rip+0x29b71]        # 0x443c9e
  41a12d:	mov    rdx,r12
  41a130:	mov    rcx,rsi
  41a133:	mov    QWORD PTR [rsp+0xd0],0x0
  41a13f:	mov    QWORD PTR [rsp+0xe0],rax
  41a147:	mov    BYTE PTR [rsp+0xf0],0x1
  41a14f:	call   0x4141a0
  41a154:	mov    rcx,rsi
  41a157:	call   0x427f68
  41a15c:	mov    eax,0x1
  41a161:	add    rsp,0x118
  41a168:	pop    rbx
  41a169:	pop    rsi
  41a16a:	pop    rdi
  41a16b:	pop    rbp
  41a16c:	pop    r12
  41a16e:	pop    r13
  41a170:	pop    r14
  41a172:	pop    r15
  41a174:	ret    
  41a175:	lea    rdx,[rip+0x29a3c]        # 0x443bb8
  41a17c:	mov    rcx,rbx
  41a17f:	call   0x427dc8
  41a184:	jmp    0x41a087
  41a189:	nop    DWORD PTR [rax+0x0]
  41a190:	lea    rdx,[rip+0x265e1]        # 0x440778
  41a197:	mov    rcx,rbx
  41a19a:	call   0x427dc8
  41a19f:	jmp    0x41a0a4
  41a1a4:	lea    rdx,[rip+0x29785]        # 0x443930
  41a1ab:	mov    rcx,rbx
  41a1ae:	call   0x427dc8
  41a1b3:	jmp    0x41a01d
  41a1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1c0:	lea    rdx,[rip+0x2679f]        # 0x440966
  41a1c7:	mov    rcx,rbx
  41a1ca:	call   0x427dc8
  41a1cf:	lea    rdx,[rip+0x275a5]        # 0x44177b
  41a1d6:	mov    rcx,rbx
  41a1d9:	call   0x414870
  41a1de:	jmp    0x41a053
  41a1e3:	nop    DWORD PTR [rax]
  41a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1f0:	push   r15
  41a1f2:	push   r14
  41a1f4:	push   r13
  41a1f6:	push   r12
  41a1f8:	push   rbp
  41a1f9:	push   rdi
  41a1fa:	push   rsi
  41a1fb:	push   rbx
  41a1fc:	sub    rsp,0x118
  41a203:	mov    rbp,QWORD PTR [rip+0x3a6d6]        # 0x4548e0
  41a20a:	lea    rbx,[rsp+0x50]
  41a20f:	lea    r12,[rsp+0x70]
  41a214:	mov    r13,rcx
  41a217:	mov    ecx,0x13
  41a21c:	mov    r15d,edx
  41a21f:	mov    r14d,r8d
  41a222:	lea    rsi,[rbp+0x28]
  41a226:	mov    rdi,r12
  41a229:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a22c:	mov    rcx,rbx
  41a22f:	call   0x427da8
  41a234:	lea    rax,[rip+0x29b6f]        # 0x443daa
  41a23b:	lea    r9,[rip+0x261f2]        # 0x440434
  41a242:	lea    r8,[rip+0x261f0]        # 0x440439
  41a249:	lea    rdx,[rip+0x29a60]        # 0x443cb0
  41a250:	mov    rcx,rbx
  41a253:	mov    QWORD PTR [rsp+0x40],rax
  41a258:	lea    rax,[rip+0x29b54]        # 0x443db3
  41a25f:	mov    QWORD PTR [rsp+0x38],rax
  41a264:	lea    rax,[rip+0x29b4b]        # 0x443db6
  41a26b:	mov    QWORD PTR [rsp+0x30],rax
  41a270:	lea    rax,[rip+0x29b43]        # 0x443dba
  41a277:	mov    QWORD PTR [rsp+0x28],rax
  41a27c:	lea    rax,[rip+0x29b43]        # 0x443dc6
  41a283:	mov    QWORD PTR [rsp+0x20],rax
  41a288:	call   0x427d70
  41a28d:	test   r15b,r15b
  41a290:	jne    0x41a3c4
  41a296:	lea    rdx,[rip+0x29b53]        # 0x443df0
  41a29d:	mov    rcx,rbx
  41a2a0:	call   0x427dc8
  41a2a5:	lea    rdx,[rip+0x29c18]        # 0x443ec4
  41a2ac:	mov    rcx,rbx
  41a2af:	call   0x427dc8
  41a2b4:	test   r14b,r14b
  41a2b7:	jne    0x41a2c2
  41a2b9:	test   r13,r13
  41a2bc:	je     0x41a3b0
  41a2c2:	lea    rax,[rip+0x29c57]        # 0x443f20
  41a2c9:	mov    QWORD PTR [rsp+0x38],0x0
  41a2d2:	mov    DWORD PTR [rsp+0x20],0x0
  41a2da:	mov    r9d,0x1
  41a2e0:	mov    r8,r13
  41a2e3:	mov    rdx,rbx
  41a2e6:	mov    QWORD PTR [rsp+0x40],rax
  41a2eb:	lea    rax,[rip+0x29c59]        # 0x443f4b
  41a2f2:	mov    QWORD PTR [rsp+0x30],rax
  41a2f7:	lea    rax,[rip+0x26505]        # 0x440803
  41a2fe:	mov    QWORD PTR [rsp+0x28],rax
  41a303:	mov    rcx,QWORD PTR [rbp+0x0]
  41a307:	call   0x41e8f0
  41a30c:	lea    rdx,[rip+0x2765b]        # 0x44196e
  41a313:	mov    rcx,rbx
  41a316:	call   0x427dc8
  41a31b:	mov    rcx,QWORD PTR [rsp+0x50]
  41a320:	xor    edx,edx
  41a322:	call   0x4062b0
  41a327:	mov    rcx,rbx
  41a32a:	mov    rsi,rax
  41a32d:	call   0x427d60
  41a332:	xor    eax,eax
  41a334:	test   rsi,rsi
  41a337:	je     0x41a399
  41a339:	lea    rax,[rip+0x29c15]        # 0x443f55
  41a340:	mov    r9,QWORD PTR [rbp+0x108]
  41a347:	mov    r8,QWORD PTR [rbp+0x10]
  41a34b:	mov    rdx,r12
  41a34e:	mov    rcx,rsi
  41a351:	mov    QWORD PTR [rsp+0xd0],0x0
  41a35d:	mov    QWORD PTR [rsp+0xe0],rax
  41a365:	lea    rax,[rip+0x2c33e]        # 0x4466aa
  41a36c:	mov    BYTE PTR [rsp+0xf0],0x1
  41a374:	mov    DWORD PTR [rsp+0x100],0x6
  41a37f:	mov    QWORD PTR [rsp+0xf8],rax
  41a387:	call   0x4141a0
  41a38c:	mov    rcx,rsi
  41a38f:	call   0x427f68
  41a394:	mov    eax,0x1
  41a399:	add    rsp,0x118
  41a3a0:	pop    rbx
  41a3a1:	pop    rsi
  41a3a2:	pop    rdi
  41a3a3:	pop    rbp
  41a3a4:	pop    r12
  41a3a6:	pop    r13
  41a3a8:	pop    r14
  41a3aa:	pop    r15
  41a3ac:	ret    
  41a3ad:	nop    DWORD PTR [rax]
  41a3b0:	lea    rdx,[rip+0x29b19]        # 0x443ed0
  41a3b7:	mov    rcx,rbx
  41a3ba:	call   0x427dc8
  41a3bf:	jmp    0x41a2c2
  41a3c4:	lea    r8,[rip+0x24a7f]        # 0x43ee4a
  41a3cb:	lea    rdx,[rip+0x299fe]        # 0x443dd0
  41a3d2:	mov    rcx,rbx
  41a3d5:	call   0x427dd8
  41a3da:	lea    rdx,[rip+0x29a0f]        # 0x443df0
  41a3e1:	mov    rcx,rbx
  41a3e4:	call   0x427dc8
  41a3e9:	lea    rdx,[rip+0x29a60]        # 0x443e50
  41a3f0:	mov    rcx,rbx
  41a3f3:	call   0x427dc8
  41a3f8:	jmp    0x41a2a5
  41a3fd:	nop    DWORD PTR [rax]
  41a400:	push   r14
  41a402:	push   r13
  41a404:	push   r12
  41a406:	push   rbp
  41a407:	push   rdi
  41a408:	push   rsi
  41a409:	push   rbx
  41a40a:	sub    rsp,0x120
  41a411:	mov    rbp,QWORD PTR [rip+0x3a4c8]        # 0x4548e0
  41a418:	lea    rbx,[rsp+0x60]
  41a41d:	lea    r12,[rsp+0x80]
  41a425:	mov    r13,rcx
  41a428:	mov    ecx,0x13
  41a42d:	mov    r14d,edx
  41a430:	lea    rsi,[rbp+0x28]
  41a434:	mov    rdi,r12
  41a437:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a43a:	mov    rcx,rbx
  41a43d:	call   0x427da8
  41a442:	lea    rax,[rip+0x29c78]        # 0x4440c1
  41a449:	lea    r9,[rip+0x29b19]        # 0x443f69
  41a450:	lea    r8,[rip+0x25fdd]        # 0x440434
  41a457:	lea    rdx,[rip+0x29b12]        # 0x443f70
  41a45e:	mov    rcx,rbx
  41a461:	mov    QWORD PTR [rsp+0x58],rax
  41a466:	lea    rax,[rip+0x29c59]        # 0x4440c6
  41a46d:	mov    QWORD PTR [rsp+0x50],rax
  41a472:	lea    rax,[rip+0x29c57]        # 0x4440d0
  41a479:	mov    QWORD PTR [rsp+0x48],rax
  41a47e:	lea    rax,[rip+0x29c53]        # 0x4440d8
  41a485:	mov    QWORD PTR [rsp+0x40],rax
  41a48a:	lea    rax,[rip+0x29c50]        # 0x4440e1
  41a491:	mov    QWORD PTR [rsp+0x38],rax
  41a496:	lea    rax,[rip+0x29c4b]        # 0x4440e8
  41a49d:	mov    QWORD PTR [rsp+0x30],rax
  41a4a2:	lea    rax,[rip+0x29c47]        # 0x4440f0
  41a4a9:	mov    QWORD PTR [rsp+0x28],rax
  41a4ae:	lea    rax,[rip+0x263c5]        # 0x44087a
  41a4b5:	mov    QWORD PTR [rsp+0x20],rax
  41a4ba:	call   0x427d70
  41a4bf:	test   r14b,r14b
  41a4c2:	jne    0x41a5c0
  41a4c8:	lea    rdx,[rip+0x29c69]        # 0x444138
  41a4cf:	mov    rcx,rbx
  41a4d2:	call   0x427dc8
  41a4d7:	lea    rax,[rip+0x29c7f]        # 0x44415d
  41a4de:	mov    QWORD PTR [rsp+0x40],0x0
  41a4e7:	mov    QWORD PTR [rsp+0x38],0x0
  41a4f0:	mov    QWORD PTR [rsp+0x28],0x0
  41a4f9:	mov    DWORD PTR [rsp+0x20],0x0
  41a501:	xor    r9d,r9d
  41a504:	mov    QWORD PTR [rsp+0x30],rax
  41a509:	mov    rcx,QWORD PTR [rbp+0x0]
  41a50d:	mov    r8,r13
  41a510:	mov    rdx,rbx
  41a513:	call   0x41e8f0
  41a518:	lea    rdx,[rip+0x29c46]        # 0x444165
  41a51f:	mov    rcx,rbx
  41a522:	call   0x427dc8
  41a527:	mov    rcx,QWORD PTR [rsp+0x60]
  41a52c:	xor    edx,edx
  41a52e:	call   0x4062b0
  41a533:	mov    rcx,rbx
  41a536:	mov    rsi,rax
  41a539:	call   0x427d60
  41a53e:	xor    eax,eax
  41a540:	test   rsi,rsi
  41a543:	je     0x41a5a5
  41a545:	lea    rax,[rip+0x29c24]        # 0x444170
  41a54c:	mov    r9,QWORD PTR [rbp+0x108]
  41a553:	mov    r8,QWORD PTR [rbp+0x10]
  41a557:	mov    rdx,r12
  41a55a:	mov    rcx,rsi
  41a55d:	mov    QWORD PTR [rsp+0xe0],0x0
  41a569:	mov    QWORD PTR [rsp+0xf0],rax
  41a571:	lea    rax,[rip+0x2c12b]        # 0x4466a3
  41a578:	mov    BYTE PTR [rsp+0x100],0x1
  41a580:	mov    DWORD PTR [rsp+0x110],0x7
  41a58b:	mov    QWORD PTR [rsp+0x108],rax
  41a593:	call   0x4141a0
  41a598:	mov    rcx,rsi
  41a59b:	call   0x427f68
  41a5a0:	mov    eax,0x1
  41a5a5:	add    rsp,0x120
  41a5ac:	pop    rbx
  41a5ad:	pop    rsi
  41a5ae:	pop    rdi
  41a5af:	pop    rbp
  41a5b0:	pop    r12
  41a5b2:	pop    r13
  41a5b4:	pop    r14
  41a5b6:	ret    
  41a5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a5c0:	lea    r8,[rip+0x24883]        # 0x43ee4a
  41a5c7:	lea    rdx,[rip+0x29b2a]        # 0x4440f8
  41a5ce:	mov    rcx,rbx
  41a5d1:	call   0x427dd8
  41a5d6:	jmp    0x41a4c8
  41a5db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5e0:	push   r14
  41a5e2:	push   r13
  41a5e4:	push   r12
  41a5e6:	push   rbp
  41a5e7:	push   rdi
  41a5e8:	push   rsi
  41a5e9:	push   rbx
  41a5ea:	sub    rsp,0x110
  41a5f1:	mov    rbp,QWORD PTR [rip+0x3a2e8]        # 0x4548e0
  41a5f8:	lea    rbx,[rsp+0x50]
  41a5fd:	lea    r12,[rsp+0x70]
  41a602:	mov    r13,rcx
  41a605:	mov    ecx,0x13
  41a60a:	mov    r14d,edx
  41a60d:	lea    rsi,[rbp+0x28]
  41a611:	mov    rdi,r12
  41a614:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a617:	mov    rcx,rbx
  41a61a:	call   0x427da8
  41a61f:	lea    rax,[rip+0x29cda]        # 0x444300
  41a626:	lea    r9,[rip+0x29b5a]        # 0x444187
  41a62d:	lea    r8,[rip+0x29b5f]        # 0x444193
  41a634:	lea    rdx,[rip+0x29b65]        # 0x4441a0
  41a63b:	mov    rcx,rbx
  41a63e:	mov    QWORD PTR [rsp+0x40],rax
  41a643:	lea    rax,[rip+0x2976c]        # 0x443db6
  41a64a:	mov    QWORD PTR [rsp+0x38],rax
  41a64f:	lea    rax,[rip+0x29cb4]        # 0x44430a
  41a656:	mov    QWORD PTR [rsp+0x30],rax
  41a65b:	lea    rax,[rip+0x29751]        # 0x443db3
  41a662:	mov    QWORD PTR [rsp+0x28],rax
  41a667:	lea    rax,[rip+0x2746d]        # 0x441adb
  41a66e:	mov    QWORD PTR [rsp+0x20],rax
  41a673:	call   0x427d70
  41a678:	test   r14b,r14b
  41a67b:	jne    0x41a7f0
  41a681:	lea    rdx,[rip+0x29cb0]        # 0x444338
  41a688:	mov    rcx,rbx
  41a68b:	call   0x427dc8
  41a690:	lea    rdx,[rip+0x29e8d]        # 0x444524
  41a697:	mov    rcx,rbx
  41a69a:	call   0x427dc8
  41a69f:	lea    rax,[rip+0x29e92]        # 0x444538
  41a6a6:	mov    DWORD PTR [rsp+0x20],0x0
  41a6ae:	mov    r9d,0x1
  41a6b4:	mov    r8,r13
  41a6b7:	mov    rdx,rbx
  41a6ba:	mov    QWORD PTR [rsp+0x40],rax
  41a6bf:	lea    rax,[rip+0x29e9a]        # 0x444560
  41a6c6:	mov    QWORD PTR [rsp+0x38],rax
  41a6cb:	lea    rax,[rip+0x29eb3]        # 0x444585
  41a6d2:	mov    QWORD PTR [rsp+0x30],rax
  41a6d7:	lea    rax,[rip+0x29eb2]        # 0x444590
  41a6de:	mov    QWORD PTR [rsp+0x28],rax
  41a6e3:	mov    rcx,QWORD PTR [rbp+0x0]
  41a6e7:	call   0x41e8f0
  41a6ec:	lea    rdx,[rip+0x29ea8]        # 0x44459b
  41a6f3:	mov    rcx,rbx
  41a6f6:	call   0x427dc8
  41a6fb:	lea    rax,[rip+0x29ea6]        # 0x4445a8
  41a702:	mov    DWORD PTR [rsp+0x20],0x0
  41a70a:	mov    r9d,0x1
  41a710:	mov    r8,r13
  41a713:	mov    rdx,rbx
  41a716:	mov    QWORD PTR [rsp+0x40],rax
  41a71b:	lea    rax,[rip+0x29eae]        # 0x4445d0
  41a722:	mov    QWORD PTR [rsp+0x38],rax
  41a727:	lea    rax,[rip+0x29ec7]        # 0x4445f5
  41a72e:	mov    QWORD PTR [rsp+0x30],rax
  41a733:	lea    rax,[rip+0x29ec6]        # 0x444600
  41a73a:	mov    QWORD PTR [rsp+0x28],rax
  41a73f:	mov    rcx,QWORD PTR [rbp+0x0]
  41a743:	call   0x41e8f0
  41a748:	lea    rdx,[rip+0x29ebc]        # 0x44460b
  41a74f:	mov    rcx,rbx
  41a752:	call   0x427dc8
  41a757:	mov    rcx,QWORD PTR [rsp+0x50]
  41a75c:	xor    edx,edx
  41a75e:	call   0x4062b0
  41a763:	mov    rcx,rbx
  41a766:	mov    rsi,rax
  41a769:	call   0x427d60
  41a76e:	xor    eax,eax
  41a770:	test   rsi,rsi
  41a773:	je     0x41a7d5
  41a775:	lea    rax,[rip+0x29ea2]        # 0x44461e
  41a77c:	mov    r9,QWORD PTR [rbp+0x108]
  41a783:	mov    r8,QWORD PTR [rbp+0x10]
  41a787:	mov    rdx,r12
  41a78a:	mov    rcx,rsi
  41a78d:	mov    QWORD PTR [rsp+0xd0],0x0
  41a799:	mov    QWORD PTR [rsp+0xe0],rax
  41a7a1:	lea    rax,[rip+0x2bef6]        # 0x44669e
  41a7a8:	mov    BYTE PTR [rsp+0xf0],0x1
  41a7b0:	mov    DWORD PTR [rsp+0x100],0x5
  41a7bb:	mov    QWORD PTR [rsp+0xf8],rax
  41a7c3:	call   0x4141a0
  41a7c8:	mov    rcx,rsi
  41a7cb:	call   0x427f68
  41a7d0:	mov    eax,0x1
  41a7d5:	add    rsp,0x110
  41a7dc:	pop    rbx
  41a7dd:	pop    rsi
  41a7de:	pop    rdi
  41a7df:	pop    rbp
  41a7e0:	pop    r12
  41a7e2:	pop    r13
  41a7e4:	pop    r14
  41a7e6:	ret    
  41a7e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a7f0:	lea    r8,[rip+0x24653]        # 0x43ee4a
  41a7f7:	lea    rdx,[rip+0x29b1a]        # 0x444318
  41a7fe:	mov    rcx,rbx
  41a801:	call   0x427dd8
  41a806:	lea    rdx,[rip+0x29b2b]        # 0x444338
  41a80d:	mov    rcx,rbx
  41a810:	call   0x427dc8
  41a815:	lea    rdx,[rip+0x29c94]        # 0x4444b0
  41a81c:	mov    rcx,rbx
  41a81f:	call   0x427dc8
  41a824:	jmp    0x41a690
  41a829:	nop    DWORD PTR [rax+0x0]
  41a830:	push   r15
  41a832:	push   r14
  41a834:	push   r13
  41a836:	push   r12
  41a838:	push   rbp
  41a839:	push   rdi
  41a83a:	push   rsi
  41a83b:	push   rbx
  41a83c:	sub    rsp,0x118
  41a843:	mov    rbp,QWORD PTR [rip+0x3a096]        # 0x4548e0
  41a84a:	lea    r12,[rsp+0x70]
  41a84f:	mov    r13,rcx
  41a852:	mov    r15d,edx
  41a855:	mov    ecx,0x13
  41a85a:	mov    r14d,r8d
  41a85d:	mov    r9d,DWORD PTR [rbp+0xe4]
  41a864:	lea    rsi,[rbp+0x28]
  41a868:	mov    rdi,r12
  41a86b:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a86e:	cmp    r9d,0x15ff3
  41a875:	jle    0x41a9e0
  41a87b:	lea    rbx,[rsp+0x50]
  41a880:	mov    rcx,rbx
  41a883:	call   0x427da8
  41a888:	lea    rax,[rip+0x2749d]        # 0x441d2c
  41a88f:	lea    r9,[rip+0x25b9e]        # 0x440434
  41a896:	lea    r8,[rip+0x25b9c]        # 0x440439
  41a89d:	lea    rdx,[rip+0x29dcc]        # 0x444670
  41a8a4:	mov    rcx,rbx
  41a8a7:	mov    QWORD PTR [rsp+0x28],rax
  41a8ac:	lea    rax,[rip+0x2747f]        # 0x441d32
  41a8b3:	mov    QWORD PTR [rsp+0x20],rax
  41a8b8:	call   0x427d70
  41a8bd:	test   r15b,r15b
  41a8c0:	jne    0x41aa50
  41a8c6:	lea    rdx,[rip+0x29e5b]        # 0x444728
  41a8cd:	mov    rcx,rbx
  41a8d0:	call   0x427dc8
  41a8d5:	test   r14b,r14b
  41a8d8:	jne    0x41a8e3
  41a8da:	test   r13,r13
  41a8dd:	je     0x41aa35
  41a8e3:	lea    rdx,[rip+0x29e9e]        # 0x444788
  41a8ea:	mov    rcx,rbx
  41a8ed:	call   0x427dc8
  41a8f2:	lea    rax,[rip+0x29ef7]        # 0x4447f0
  41a8f9:	mov    QWORD PTR [rsp+0x38],0x0
  41a902:	mov    DWORD PTR [rsp+0x20],0x0
  41a90a:	mov    r9d,0x1
  41a910:	mov    r8,r13
  41a913:	mov    rdx,rbx
  41a916:	mov    QWORD PTR [rsp+0x40],rax
  41a91b:	lea    rax,[rip+0x29ef8]        # 0x44481a
  41a922:	mov    QWORD PTR [rsp+0x30],rax
  41a927:	lea    rax,[rip+0x25ed5]        # 0x440803
  41a92e:	mov    QWORD PTR [rsp+0x28],rax
  41a933:	mov    rcx,QWORD PTR [rbp+0x0]
  41a937:	call   0x41e8f0
  41a93c:	lea    rdx,[rip+0x2702b]        # 0x44196e
  41a943:	mov    rcx,rbx
  41a946:	call   0x427dc8
  41a94b:	mov    rcx,QWORD PTR [rsp+0x50]
  41a950:	xor    edx,edx
  41a952:	call   0x4062b0
  41a957:	mov    rcx,rbx
  41a95a:	mov    rsi,rax
  41a95d:	call   0x427d60
  41a962:	xor    eax,eax
  41a964:	test   rsi,rsi
  41a967:	je     0x41a9c9
  41a969:	lea    rax,[rip+0x29eb5]        # 0x444825
  41a970:	mov    r9,QWORD PTR [rbp+0x108]
  41a977:	mov    r8,QWORD PTR [rbp+0x10]
  41a97b:	mov    rdx,r12
  41a97e:	mov    rcx,rsi
  41a981:	mov    QWORD PTR [rsp+0xd0],0x0
  41a98d:	mov    QWORD PTR [rsp+0xe0],rax
  41a995:	lea    rax,[rip+0x2bcfd]        # 0x446699
  41a99c:	mov    BYTE PTR [rsp+0xf0],0x1
  41a9a4:	mov    DWORD PTR [rsp+0x100],0x5
  41a9af:	mov    QWORD PTR [rsp+0xf8],rax
  41a9b7:	call   0x4141a0
  41a9bc:	mov    rcx,rsi
  41a9bf:	call   0x427f68
  41a9c4:	mov    eax,0x1
  41a9c9:	add    rsp,0x118
  41a9d0:	pop    rbx
  41a9d1:	pop    rsi
  41a9d2:	pop    rdi
  41a9d3:	pop    rbp
  41a9d4:	pop    r12
  41a9d6:	pop    r13
  41a9d8:	pop    r14
  41a9da:	pop    r15
  41a9dc:	ret    
  41a9dd:	nop    DWORD PTR [rax]
  41a9e0:	mov    ecx,0x51eb851f
  41a9e5:	mov    eax,r9d
  41a9e8:	mov    r10d,r9d
  41a9eb:	imul   ecx
  41a9ed:	sar    r10d,0x1f
  41a9f1:	sar    edx,0x5
  41a9f4:	mov    r8d,edx
  41a9f7:	sub    r8d,r10d
  41a9fa:	mov    eax,r8d
  41a9fd:	imul   ecx
  41a9ff:	mov    eax,r8d
  41aa02:	sar    eax,0x1f
  41aa05:	sar    edx,0x5
  41aa08:	mov    ecx,edx
  41aa0a:	mov    edx,0x68db8bad
  41aa0f:	sub    ecx,eax
  41aa11:	mov    eax,r9d
  41aa14:	imul   edx
  41aa16:	imul   ecx,ecx,0x64
  41aa19:	sar    edx,0xc
  41aa1c:	sub    r8d,ecx
  41aa1f:	lea    rcx,[rip+0x29c0a]        # 0x444630
  41aa26:	sub    edx,r10d
  41aa29:	call   0x405d90
  41aa2e:	mov    eax,0x1
  41aa33:	jmp    0x41a9c9
  41aa35:	lea    rdx,[rip+0x25d3c]        # 0x440778
  41aa3c:	mov    rcx,rbx
  41aa3f:	call   0x427dc8
  41aa44:	jmp    0x41a8e3
  41aa49:	nop    DWORD PTR [rax+0x0]
  41aa50:	lea    r8,[rip+0x243f3]        # 0x43ee4a
  41aa57:	lea    rdx,[rip+0x29c82]        # 0x4446e0
  41aa5e:	mov    rcx,rbx
  41aa61:	call   0x427dd8
  41aa66:	jmp    0x41a8c6
  41aa6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa70:	push   r15
  41aa72:	push   r14
  41aa74:	push   r13
  41aa76:	push   r12
  41aa78:	push   rbp
  41aa79:	push   rdi
  41aa7a:	push   rsi
  41aa7b:	push   rbx
  41aa7c:	sub    rsp,0x118
  41aa83:	mov    rbp,QWORD PTR [rip+0x39e56]        # 0x4548e0
  41aa8a:	lea    rbx,[rsp+0x50]
  41aa8f:	lea    r12,[rsp+0x70]
  41aa94:	mov    r13,rcx
  41aa97:	mov    ecx,0x13
  41aa9c:	mov    r15d,edx
  41aa9f:	mov    r14d,r8d
  41aaa2:	lea    rsi,[rbp+0x28]
  41aaa6:	mov    rdi,r12
  41aaa9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41aaac:	mov    rcx,rbx
  41aaaf:	call   0x427da8
  41aab4:	lea    r9,[rip+0x25dbf]        # 0x44087a
  41aabb:	lea    r8,[rip+0x25972]        # 0x440434
  41aac2:	lea    rdx,[rip+0x29d6f]        # 0x444838
  41aac9:	mov    rcx,rbx
  41aacc:	call   0x427d70
  41aad1:	test   r15b,r15b
  41aad4:	jne    0x41abd0
  41aada:	lea    rdx,[rip+0x29def]        # 0x4448d0
  41aae1:	mov    rcx,rbx
  41aae4:	call   0x427dd8
  41aae9:	test   r14b,r14b
  41aaec:	sete   r9b
  41aaf0:	test   r13,r13
  41aaf3:	sete   al
  41aaf6:	mov    esi,r9d
  41aaf9:	and    sil,al
  41aafc:	jne    0x41ac10
  41ab02:	lea    rax,[rip+0x25cfa]        # 0x440803
  41ab09:	mov    QWORD PTR [rsp+0x40],0x0
  41ab12:	mov    QWORD PTR [rsp+0x38],0x0
  41ab1b:	mov    QWORD PTR [rsp+0x28],0x0
  41ab24:	mov    DWORD PTR [rsp+0x20],0x0
  41ab2c:	mov    r9d,esi
  41ab2f:	mov    QWORD PTR [rsp+0x30],rax
  41ab34:	mov    rcx,QWORD PTR [rbp+0x0]
  41ab38:	and    r9d,0x1
  41ab3c:	mov    r8,r13
  41ab3f:	mov    rdx,rbx
  41ab42:	call   0x41e8f0
  41ab47:	lea    rdx,[rip+0x25eaa]        # 0x4409f8
  41ab4e:	mov    rcx,rbx
  41ab51:	call   0x427dc8
  41ab56:	mov    rcx,QWORD PTR [rsp+0x50]
  41ab5b:	xor    edx,edx
  41ab5d:	call   0x4062b0
  41ab62:	mov    rcx,rbx
  41ab65:	mov    rsi,rax
  41ab68:	call   0x427d60
  41ab6d:	xor    eax,eax
  41ab6f:	test   rsi,rsi
  41ab72:	je     0x41abba
  41ab74:	mov    r9,QWORD PTR [rbp+0x108]
  41ab7b:	mov    r8,QWORD PTR [rbp+0x10]
  41ab7f:	lea    rax,[rip+0x29db3]        # 0x444939
  41ab86:	mov    rdx,r12
  41ab89:	mov    rcx,rsi
  41ab8c:	mov    QWORD PTR [rsp+0xd0],0x0
  41ab98:	mov    QWORD PTR [rsp+0xe0],rax
  41aba0:	mov    BYTE PTR [rsp+0xf0],0x1
  41aba8:	call   0x4141a0
  41abad:	mov    rcx,rsi
  41abb0:	call   0x427f68
  41abb5:	mov    eax,0x1
  41abba:	add    rsp,0x118
  41abc1:	pop    rbx
  41abc2:	pop    rsi
  41abc3:	pop    rdi
  41abc4:	pop    rbp
  41abc5:	pop    r12
  41abc7:	pop    r13
  41abc9:	pop    r14
  41abcb:	pop    r15
  41abcd:	ret    
  41abce:	xchg   ax,ax
  41abd0:	lea    rdx,[rip+0x25d8f]        # 0x440966
  41abd7:	mov    rcx,rbx
  41abda:	call   0x427dc8
  41abdf:	lea    rdx,[rip+0x29c9d]        # 0x444883
  41abe6:	mov    rcx,rbx
  41abe9:	call   0x414870
  41abee:	lea    r8,[rip+0x24255]        # 0x43ee4a
  41abf5:	lea    rdx,[rip+0x29c94]        # 0x444890
  41abfc:	mov    rcx,rbx
  41abff:	call   0x427dd8
  41ac04:	jmp    0x41aada
  41ac09:	nop    DWORD PTR [rax+0x0]
  41ac10:	lea    rdx,[rip+0x29ce1]        # 0x4448f8
  41ac17:	mov    rcx,rbx
  41ac1a:	call   0x427dc8
  41ac1f:	jmp    0x41ab02
  41ac24:	xchg   ax,ax
  41ac26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac30:	push   r15
  41ac32:	push   r14
  41ac34:	push   r13
  41ac36:	push   r12
  41ac38:	push   rbp
  41ac39:	push   rdi
  41ac3a:	push   rsi
  41ac3b:	push   rbx
  41ac3c:	sub    rsp,0x628
  41ac43:	mov    rbx,QWORD PTR [rip+0x39c96]        # 0x4548e0
  41ac4a:	lea    rbp,[rsp+0xe0]
  41ac52:	mov    r12,rcx
  41ac55:	mov    ecx,0x13
  41ac5a:	lea    rsi,[rbx+0x28]
  41ac5e:	mov    rdi,rbp
  41ac61:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41ac64:	mov    ecx,DWORD PTR [rbx+0xe4]
  41ac6a:	cmp    ecx,0x139ab
  41ac70:	jle    0x41afb5
  41ac76:	test   dl,dl
  41ac78:	jne    0x41ad90
  41ac7e:	lea    rsi,[rsp+0x220]
  41ac86:	mov    rcx,rsi
  41ac89:	call   0x427da8
  41ac8e:	lea    rax,[rip+0x241b5]        # 0x43ee4a
  41ac95:	lea    r9,[rip+0x25798]        # 0x440434
  41ac9c:	lea    r8,[rip+0x25796]        # 0x440439
  41aca3:	lea    rdx,[rip+0x2a286]        # 0x444f30
  41acaa:	mov    rcx,rsi
  41acad:	mov    QWORD PTR [rsp+0x20],rax
  41acb2:	call   0x427d70
  41acb7:	lea    rax,[rip+0x29d5a]        # 0x444a18
  41acbe:	mov    QWORD PTR [rsp+0x38],0x0
  41acc7:	mov    DWORD PTR [rsp+0x20],0x0
  41accf:	xor    r9d,r9d
  41acd2:	mov    r8,r12
  41acd5:	mov    rdx,rsi
  41acd8:	mov    QWORD PTR [rsp+0x40],rax
  41acdd:	lea    rax,[rip+0x29d5e]        # 0x444a42
  41ace4:	mov    QWORD PTR [rsp+0x30],rax
  41ace9:	lea    rax,[rip+0x25b13]        # 0x440803
  41acf0:	mov    QWORD PTR [rsp+0x28],rax
  41acf5:	mov    rcx,QWORD PTR [rbx]
  41acf8:	call   0x41e8f0
  41acfd:	lea    rdx,[rip+0x26c6a]        # 0x44196e
  41ad04:	mov    rcx,rsi
  41ad07:	call   0x427dc8
  41ad0c:	mov    rcx,QWORD PTR [rsp+0x220]
  41ad14:	xor    edx,edx
  41ad16:	call   0x4062b0
  41ad1b:	mov    rcx,rsi
  41ad1e:	mov    r12,rax
  41ad21:	call   0x427d60
  41ad26:	xor    eax,eax
  41ad28:	test   r12,r12
  41ad2b:	je     0x41ad73
  41ad2d:	mov    r9,QWORD PTR [rbx+0x108]
  41ad34:	mov    r8,QWORD PTR [rbx+0x10]
  41ad38:	lea    rax,[rip+0x2a2be]        # 0x444ffd
  41ad3f:	mov    rdx,rbp
  41ad42:	mov    rcx,r12
  41ad45:	mov    QWORD PTR [rsp+0x140],0x0
  41ad51:	mov    QWORD PTR [rsp+0x150],rax
  41ad59:	mov    BYTE PTR [rsp+0x160],0x1
  41ad61:	call   0x4141a0
  41ad66:	mov    rcx,r12
  41ad69:	call   0x427f68
  41ad6e:	mov    eax,0x1
  41ad73:	add    rsp,0x628
  41ad7a:	pop    rbx
  41ad7b:	pop    rsi
  41ad7c:	pop    rdi
  41ad7d:	pop    rbp
  41ad7e:	pop    r12
  41ad80:	pop    r13
  41ad82:	pop    r14
  41ad84:	pop    r15
  41ad86:	ret    
  41ad87:	nop    WORD PTR [rax+rax*1+0x0]
  41ad90:	lea    rsi,[rsp+0xa0]
  41ad98:	mov    rcx,rsi
  41ad9b:	call   0x427da8
  41ada0:	lea    rdx,[rip+0x29be9]        # 0x444990
  41ada7:	mov    rcx,rsi
  41adaa:	call   0x427d70
  41adaf:	lea    rax,[rip+0x29c62]        # 0x444a18
  41adb6:	mov    QWORD PTR [rsp+0x38],0x0
  41adbf:	mov    DWORD PTR [rsp+0x20],0x0
  41adc7:	xor    r9d,r9d
  41adca:	mov    r8,r12
  41adcd:	mov    rdx,rsi
  41add0:	mov    QWORD PTR [rsp+0x40],rax
  41add5:	lea    rax,[rip+0x29c66]        # 0x444a42
  41addc:	mov    QWORD PTR [rsp+0x30],rax
  41ade1:	lea    rax,[rip+0x25a1b]        # 0x440803
  41ade8:	mov    QWORD PTR [rsp+0x28],rax
  41aded:	mov    rcx,QWORD PTR [rbx]
  41adf0:	call   0x41e8f0
  41adf5:	lea    rdx,[rip+0x26b72]        # 0x44196e
  41adfc:	mov    rcx,rsi
  41adff:	call   0x427dc8
  41ae04:	mov    rcx,QWORD PTR [rsp+0xa0]
  41ae0c:	xor    edx,edx
  41ae0e:	call   0x4062b0
  41ae13:	mov    rcx,rsi
  41ae16:	mov    r15,rax
  41ae19:	call   0x427d60
  41ae1e:	xor    eax,eax
  41ae20:	test   r15,r15
  41ae23:	je     0x41ad73
  41ae29:	mov    rcx,r15
  41ae2c:	call   0x427e70
  41ae31:	test   eax,eax
  41ae33:	je     0x41b011
  41ae39:	lea    rax,[rsp+0x180]
  41ae41:	lea    r13,[rsp+0xc0]
  41ae49:	xor    r12d,r12d
  41ae4c:	mov    QWORD PTR [rsp+0x88],rax
  41ae54:	lea    rax,[rbx+0x28]
  41ae58:	mov    QWORD PTR [rsp+0x98],rax
  41ae60:	lea    rax,[rsp+0x220]
  41ae68:	mov    QWORD PTR [rsp+0x80],rax
  41ae70:	mov    rcx,r15
  41ae73:	call   0x427e70
  41ae78:	cmp    r12d,eax
  41ae7b:	jge    0x41b2f1
  41ae81:	xor    r8d,r8d
  41ae84:	mov    edx,r12d
  41ae87:	mov    rcx,r15
  41ae8a:	call   0x427e98
  41ae8f:	mov    r8d,0x1
  41ae95:	mov    edx,r12d
  41ae98:	mov    rcx,r15
  41ae9b:	mov    rbp,rax
  41ae9e:	call   0x427ea8
  41aea3:	test   eax,eax
  41aea5:	je     0x41b040
  41aeab:	mov    r8d,0x2
  41aeb1:	mov    edx,r12d
  41aeb4:	mov    rcx,r15
  41aeb7:	call   0x427e98
  41aebc:	mov    rdi,QWORD PTR [rsp+0x88]
  41aec4:	mov    rsi,QWORD PTR [rsp+0x98]
  41aecc:	mov    ecx,0x13
  41aed1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41aed4:	mov    rcx,r13
  41aed7:	mov    QWORD PTR [rsp+0x90],rax
  41aedf:	call   0x427da8
  41aee4:	lea    rax,[rip+0x29f0d]        # 0x444df8
  41aeeb:	lea    r9,[rip+0x29b8f]        # 0x444a81
  41aef2:	lea    r8,[rip+0x29b8f]        # 0x444a88
  41aef9:	lea    rdx,[rip+0x29b98]        # 0x444a98
  41af00:	mov    rcx,r13
  41af03:	mov    QWORD PTR [rsp+0x70],rbp
  41af08:	mov    QWORD PTR [rsp+0x68],rax
  41af0d:	lea    rax,[rip+0x29ef4]        # 0x444e08
  41af14:	mov    QWORD PTR [rsp+0x60],rbp
  41af19:	mov    QWORD PTR [rsp+0x50],rbp
  41af1e:	mov    QWORD PTR [rsp+0x40],rbp
  41af23:	mov    QWORD PTR [rsp+0x58],rax
  41af28:	lea    rax,[rip+0x29ee6]        # 0x444e15
  41af2f:	mov    QWORD PTR [rsp+0x30],rbp
  41af34:	mov    QWORD PTR [rsp+0x48],rax
  41af39:	lea    rax,[rip+0x29edf]        # 0x444e1f
  41af40:	mov    QWORD PTR [rsp+0x38],rax
  41af45:	lea    rax,[rip+0x23efe]        # 0x43ee4a
  41af4c:	mov    QWORD PTR [rsp+0x28],rax
  41af51:	lea    rax,[rip+0x26b83]        # 0x441adb
  41af58:	mov    QWORD PTR [rsp+0x20],rax
  41af5d:	call   0x427d70
  41af62:	mov    rcx,QWORD PTR [rsp+0xc0]
  41af6a:	xor    edx,edx
  41af6c:	call   0x4062b0
  41af71:	mov    rcx,r13
  41af74:	mov    rsi,rax
  41af77:	call   0x427d60
  41af7c:	test   rsi,rsi
  41af7f:	je     0x41b030
  41af85:	mov    QWORD PTR [rsp+0x1e0],0x0
  41af91:	mov    r8,QWORD PTR [rsp+0x90]
  41af99:	mov    rcx,QWORD PTR [rsp+0x80]
  41afa1:	lea    rdx,[rip+0x29ea1]        # 0x444e49
  41afa8:	xor    r14d,r14d
  41afab:	call   0x426260
  41afb0:	jmp    0x41b162
  41afb5:	mov    r9d,0x51eb851f
  41afbb:	mov    eax,ecx
  41afbd:	mov    r10d,ecx
  41afc0:	imul   r9d
  41afc3:	sar    r10d,0x1f
  41afc7:	sar    edx,0x5
  41afca:	mov    r8d,edx
  41afcd:	sub    r8d,r10d
  41afd0:	mov    eax,r8d
  41afd3:	imul   r9d
  41afd6:	mov    eax,r8d
  41afd9:	sar    eax,0x1f
  41afdc:	sar    edx,0x5
  41afdf:	mov    r9d,edx
  41afe2:	mov    edx,0x68db8bad
  41afe7:	sub    r9d,eax
  41afea:	mov    eax,ecx
  41afec:	lea    rcx,[rip+0x2995d]        # 0x444950
  41aff3:	imul   edx
  41aff5:	imul   r9d,r9d,0x64
  41aff9:	sar    edx,0xc
  41affc:	sub    edx,r10d
  41afff:	sub    r8d,r9d
  41b002:	call   0x405d90
  41b007:	mov    eax,0x1
  41b00c:	jmp    0x41ad73
  41b011:	cmp    BYTE PTR [rbx+0x11a],0x0
  41b018:	jne    0x41b030
  41b01a:	lea    rcx,[rip+0x29a2f]        # 0x444a50
  41b021:	mov    rdx,r12
  41b024:	call   0x405d90
  41b029:	nop    DWORD PTR [rax+0x0]
  41b030:	mov    rcx,r15
  41b033:	call   0x427f68
  41b038:	xor    eax,eax
  41b03a:	jmp    0x41ad73
  41b03f:	nop
  41b040:	mov    r8d,0x1
  41b046:	mov    edx,r12d
  41b049:	mov    rcx,r15
  41b04c:	call   0x427e98
  41b051:	mov    r8d,0x2
  41b057:	mov    edx,r12d
  41b05a:	mov    rcx,r15
  41b05d:	mov    r14,rax
  41b060:	call   0x427e98
  41b065:	mov    rdi,QWORD PTR [rsp+0x88]
  41b06d:	mov    rsi,QWORD PTR [rsp+0x98]
  41b075:	mov    ecx,0x13
  41b07a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b07d:	lea    rdi,[rip+0x29d74]        # 0x444df8
  41b084:	mov    rcx,r13
  41b087:	mov    QWORD PTR [rsp+0x90],rax
  41b08f:	call   0x427da8
  41b094:	mov    QWORD PTR [rsp+0x68],rdi
  41b099:	lea    rdi,[rip+0x29d68]        # 0x444e08
  41b0a0:	lea    r9,[rip+0x299da]        # 0x444a81
  41b0a7:	lea    r8,[rip+0x299da]        # 0x444a88
  41b0ae:	lea    rdx,[rip+0x299e3]        # 0x444a98
  41b0b5:	mov    rcx,r13
  41b0b8:	mov    QWORD PTR [rsp+0x58],rdi
  41b0bd:	lea    rdi,[rip+0x29d51]        # 0x444e15
  41b0c4:	mov    QWORD PTR [rsp+0x70],rbp
  41b0c9:	mov    QWORD PTR [rsp+0x60],rbp
  41b0ce:	mov    QWORD PTR [rsp+0x50],rbp
  41b0d3:	mov    QWORD PTR [rsp+0x48],rdi
  41b0d8:	lea    rdi,[rip+0x29d40]        # 0x444e1f
  41b0df:	mov    QWORD PTR [rsp+0x40],rbp
  41b0e4:	mov    QWORD PTR [rsp+0x30],rbp
  41b0e9:	mov    QWORD PTR [rsp+0x38],rdi
  41b0ee:	lea    rdi,[rip+0x23d55]        # 0x43ee4a
  41b0f5:	mov    QWORD PTR [rsp+0x28],rdi
  41b0fa:	lea    rdi,[rip+0x269da]        # 0x441adb
  41b101:	mov    QWORD PTR [rsp+0x20],rdi
  41b106:	call   0x427d70
  41b10b:	mov    rcx,QWORD PTR [rsp+0xc0]
  41b113:	xor    edx,edx
  41b115:	call   0x4062b0
  41b11a:	mov    rcx,r13
  41b11d:	mov    rsi,rax
  41b120:	call   0x427d60
  41b125:	test   rsi,rsi
  41b128:	je     0x41b030
  41b12e:	test   r14,r14
  41b131:	mov    QWORD PTR [rsp+0x1e0],0x0
  41b13d:	je     0x41af91
  41b143:	mov    r9,QWORD PTR [rsp+0x90]
  41b14b:	mov    rcx,QWORD PTR [rsp+0x80]
  41b153:	lea    rdx,[rip+0x29cd4]        # 0x444e2e
  41b15a:	mov    r8,r14
  41b15d:	call   0x426260
  41b162:	mov    r9,QWORD PTR [rbx+0x108]
  41b169:	mov    r8,QWORD PTR [rbx+0x10]
  41b16d:	lea    rax,[rip+0x2b522]        # 0x446696
  41b174:	mov    rdx,QWORD PTR [rsp+0x88]
  41b17c:	mov    rdi,QWORD PTR [rsp+0x80]
  41b184:	mov    rcx,rsi
  41b187:	mov    QWORD PTR [rsp+0x208],rax
  41b18f:	mov    QWORD PTR [rsp+0x1f8],0x0
  41b19b:	mov    BYTE PTR [rsp+0x18d],0x0
  41b1a3:	mov    BYTE PTR [rsp+0x200],0x1
  41b1ab:	mov    QWORD PTR [rsp+0x1f0],rdi
  41b1b3:	mov    DWORD PTR [rsp+0x210],0x3
  41b1be:	call   0x4141a0
  41b1c3:	mov    rcx,rsi
  41b1c6:	call   0x427f68
  41b1cb:	mov    rcx,r13
  41b1ce:	call   0x427da8
  41b1d3:	lea    r9,[rip+0x23c70]        # 0x43ee4a
  41b1da:	lea    r8,[rip+0x29c80]        # 0x444e61
  41b1e1:	lea    rdx,[rip+0x29c88]        # 0x444e70
  41b1e8:	mov    rcx,r13
  41b1eb:	mov    QWORD PTR [rsp+0x20],rbp
  41b1f0:	call   0x427d70
  41b1f5:	mov    rcx,QWORD PTR [rsp+0xc0]
  41b1fd:	xor    edx,edx
  41b1ff:	call   0x4062b0
  41b204:	mov    rcx,r13
  41b207:	mov    rsi,rax
  41b20a:	call   0x427d60
  41b20f:	test   rsi,rsi
  41b212:	je     0x41b030
  41b218:	test   r14,r14
  41b21b:	mov    QWORD PTR [rsp+0x1e0],0x0
  41b227:	je     0x41b2d0
  41b22d:	mov    r9,QWORD PTR [rsp+0x90]
  41b235:	lea    rdx,[rip+0x29cb4]        # 0x444ef0
  41b23c:	mov    r8,r14
  41b23f:	mov    rcx,rdi
  41b242:	call   0x426260
  41b247:	mov    rax,QWORD PTR [rsp+0x80]
  41b24f:	mov    r9,QWORD PTR [rbx+0x108]
  41b256:	mov    rcx,rsi
  41b259:	mov    r8,QWORD PTR [rbx+0x10]
  41b25d:	mov    rdx,QWORD PTR [rsp+0x88]
  41b265:	mov    QWORD PTR [rsp+0x1f8],0x0
  41b271:	mov    BYTE PTR [rsp+0x18d],0x1
  41b279:	mov    QWORD PTR [rsp+0x1f0],rax
  41b281:	mov    BYTE PTR [rsp+0x200],0x1
  41b289:	mov    QWORD PTR [rsp+0x208],0x0
  41b295:	mov    DWORD PTR [rsp+0x210],0x0
  41b2a0:	call   0x4141a0
  41b2a5:	mov    rcx,rsi
  41b2a8:	call   0x427f68
  41b2ad:	mov    rax,QWORD PTR [rip+0x3955c]        # 0x454810
  41b2b4:	movzx  eax,BYTE PTR [rax]
  41b2b7:	test   al,al
  41b2b9:	jne    0x41b030
  41b2bf:	add    r12d,0x1
  41b2c3:	jmp    0x41ae70
  41b2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2d0:	mov    r8,QWORD PTR [rsp+0x90]
  41b2d8:	mov    rcx,QWORD PTR [rsp+0x80]
  41b2e0:	lea    rdx,[rip+0x29c28]        # 0x444f0f
  41b2e7:	call   0x426260
  41b2ec:	jmp    0x41b247
  41b2f1:	mov    rcx,r15
  41b2f4:	call   0x427f68
  41b2f9:	mov    eax,0x1
  41b2fe:	jmp    0x41ad73
  41b303:	nop    DWORD PTR [rax]
  41b306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b310:	push   r14
  41b312:	push   r13
  41b314:	push   r12
  41b316:	push   rbp
  41b317:	push   rdi
  41b318:	push   rsi
  41b319:	push   rbx
  41b31a:	sub    rsp,0x110
  41b321:	mov    rbp,QWORD PTR [rip+0x395b8]        # 0x4548e0
  41b328:	lea    r12,[rsp+0x70]
  41b32d:	mov    r13,rcx
  41b330:	mov    r14d,edx
  41b333:	mov    ecx,0x13
  41b338:	mov    r9d,DWORD PTR [rbp+0xe4]
  41b33f:	lea    rsi,[rbp+0x28]
  41b343:	mov    rdi,r12
  41b346:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b349:	cmp    r9d,0x139ab
  41b350:	jle    0x41b480
  41b356:	lea    rbx,[rsp+0x50]
  41b35b:	mov    rcx,rbx
  41b35e:	call   0x427da8
  41b363:	lea    r9,[rip+0x250ca]        # 0x440434
  41b36a:	lea    r8,[rip+0x250c8]        # 0x440439
  41b371:	lea    rdx,[rip+0x29ca8]        # 0x445020
  41b378:	mov    rcx,rbx
  41b37b:	call   0x427d70
  41b380:	test   r14b,r14b
  41b383:	jne    0x41b4d5
  41b389:	lea    r8,[rip+0x23aba]        # 0x43ee4a
  41b390:	lea    rdx,[rip+0x29de9]        # 0x445180
  41b397:	mov    rcx,rbx
  41b39a:	call   0x427dd8
  41b39f:	lea    rdx,[rip+0x29e1a]        # 0x4451c0
  41b3a6:	mov    rcx,rbx
  41b3a9:	call   0x427dc8
  41b3ae:	lea    rax,[rip+0x29e6b]        # 0x445220
  41b3b5:	mov    QWORD PTR [rsp+0x38],0x0
  41b3be:	mov    DWORD PTR [rsp+0x20],0x0
  41b3c6:	xor    r9d,r9d
  41b3c9:	mov    r8,r13
  41b3cc:	mov    rdx,rbx
  41b3cf:	mov    QWORD PTR [rsp+0x40],rax
  41b3d4:	lea    rax,[rip+0x29e6d]        # 0x445248
  41b3db:	mov    QWORD PTR [rsp+0x30],rax
  41b3e0:	lea    rax,[rip+0x2541c]        # 0x440803
  41b3e7:	mov    QWORD PTR [rsp+0x28],rax
  41b3ec:	mov    rcx,QWORD PTR [rbp+0x0]
  41b3f0:	call   0x41e8f0
  41b3f5:	lea    rdx,[rip+0x26572]        # 0x44196e
  41b3fc:	mov    rcx,rbx
  41b3ff:	call   0x427dc8
  41b404:	mov    rcx,QWORD PTR [rsp+0x50]
  41b409:	xor    edx,edx
  41b40b:	call   0x4062b0
  41b410:	mov    rcx,rbx
  41b413:	mov    rsi,rax
  41b416:	call   0x427d60
  41b41b:	xor    eax,eax
  41b41d:	test   rsi,rsi
  41b420:	je     0x41b468
  41b422:	mov    r9,QWORD PTR [rbp+0x108]
  41b429:	mov    r8,QWORD PTR [rbp+0x10]
  41b42d:	lea    rax,[rip+0x29e24]        # 0x445258
  41b434:	mov    rdx,r12
  41b437:	mov    rcx,rsi
  41b43a:	mov    QWORD PTR [rsp+0xd0],0x0
  41b446:	mov    QWORD PTR [rsp+0xe0],rax
  41b44e:	mov    BYTE PTR [rsp+0xf0],0x1
  41b456:	call   0x4141a0
  41b45b:	mov    rcx,rsi
  41b45e:	call   0x427f68
  41b463:	mov    eax,0x1
  41b468:	add    rsp,0x110
  41b46f:	pop    rbx
  41b470:	pop    rsi
  41b471:	pop    rdi
  41b472:	pop    rbp
  41b473:	pop    r12
  41b475:	pop    r13
  41b477:	pop    r14
  41b479:	ret    
  41b47a:	nop    WORD PTR [rax+rax*1+0x0]
  41b480:	mov    ecx,0x51eb851f
  41b485:	mov    eax,r9d
  41b488:	mov    r10d,r9d
  41b48b:	imul   ecx
  41b48d:	sar    r10d,0x1f
  41b491:	sar    edx,0x5
  41b494:	mov    r8d,edx
  41b497:	sub    r8d,r10d
  41b49a:	mov    eax,r8d
  41b49d:	imul   ecx
  41b49f:	mov    eax,r8d
  41b4a2:	sar    eax,0x1f
  41b4a5:	sar    edx,0x5
  41b4a8:	mov    ecx,edx
  41b4aa:	mov    edx,0x68db8bad
  41b4af:	sub    ecx,eax
  41b4b1:	mov    eax,r9d
  41b4b4:	imul   edx
  41b4b6:	imul   ecx,ecx,0x64
  41b4b9:	sar    edx,0xc
  41b4bc:	sub    r8d,ecx
  41b4bf:	lea    rcx,[rip+0x2948a]        # 0x444950
  41b4c6:	sub    edx,r10d
  41b4c9:	call   0x405d90
  41b4ce:	mov    eax,0x1
  41b4d3:	jmp    0x41b468
  41b4d5:	lea    r9,[rip+0x29b78]        # 0x445054
  41b4dc:	lea    r8,[rip+0x29b7e]        # 0x445061
  41b4e3:	lea    rdx,[rip+0x29b86]        # 0x445070
  41b4ea:	mov    rcx,rbx
  41b4ed:	call   0x427dd8
  41b4f2:	jmp    0x41b389
  41b4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b500:	push   r13
  41b502:	push   r12
  41b504:	push   rbp
  41b505:	push   rdi
  41b506:	push   rsi
  41b507:	push   rbx
  41b508:	sub    rsp,0x118
  41b50f:	mov    rbx,QWORD PTR [rip+0x393ca]        # 0x4548e0
  41b516:	lea    rbp,[rsp+0x70]
  41b51b:	mov    r12,rcx
  41b51e:	mov    r13d,edx
  41b521:	mov    ecx,0x13
  41b526:	mov    r9d,DWORD PTR [rbx+0xe4]
  41b52d:	lea    rsi,[rbx+0x28]
  41b531:	mov    rdi,rbp
  41b534:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b537:	cmp    r9d,0x139ab
  41b53e:	jle    0x41b6a0
  41b544:	lea    rsi,[rsp+0x50]
  41b549:	mov    rcx,rsi
  41b54c:	call   0x427da8
  41b551:	test   r13b,r13b
  41b554:	lea    rax,[rip+0x238ef]        # 0x43ee4a
  41b55b:	jne    0x41b660
  41b561:	lea    r9,[rip+0x24ecc]        # 0x440434
  41b568:	lea    r8,[rip+0x24eca]        # 0x440439
  41b56f:	lea    rdx,[rip+0x29de2]        # 0x445358
  41b576:	mov    QWORD PTR [rsp+0x20],rax
  41b57b:	mov    rcx,rsi
  41b57e:	call   0x427d70
  41b583:	lea    rdx,[rip+0x29e46]        # 0x4453d0
  41b58a:	mov    rcx,rsi
  41b58d:	call   0x427dc8
  41b592:	lea    rax,[rip+0x29e9f]        # 0x445438
  41b599:	mov    QWORD PTR [rsp+0x38],0x0
  41b5a2:	mov    DWORD PTR [rsp+0x20],0x0
  41b5aa:	xor    r9d,r9d
  41b5ad:	mov    r8,r12
  41b5b0:	mov    rdx,rsi
  41b5b3:	mov    QWORD PTR [rsp+0x40],rax
  41b5b8:	lea    rax,[rip+0x29ea5]        # 0x445464
  41b5bf:	mov    QWORD PTR [rsp+0x30],rax
  41b5c4:	lea    rax,[rip+0x25238]        # 0x440803
  41b5cb:	mov    QWORD PTR [rsp+0x28],rax
  41b5d0:	mov    rcx,QWORD PTR [rbx]
  41b5d3:	call   0x41e8f0
  41b5d8:	lea    rdx,[rip+0x2638f]        # 0x44196e
  41b5df:	mov    rcx,rsi
  41b5e2:	call   0x427dc8
  41b5e7:	mov    rcx,QWORD PTR [rsp+0x50]
  41b5ec:	xor    edx,edx
  41b5ee:	call   0x4062b0
  41b5f3:	mov    rcx,rsi
  41b5f6:	mov    r12,rax
  41b5f9:	call   0x427d60
  41b5fe:	xor    eax,eax
  41b600:	test   r12,r12
  41b603:	je     0x41b64b
  41b605:	mov    r9,QWORD PTR [rbx+0x108]
  41b60c:	mov    r8,QWORD PTR [rbx+0x10]
  41b610:	lea    rax,[rip+0x29e58]        # 0x44546f
  41b617:	mov    rdx,rbp
  41b61a:	mov    rcx,r12
  41b61d:	mov    QWORD PTR [rsp+0xd0],0x0
  41b629:	mov    QWORD PTR [rsp+0xe0],rax
  41b631:	mov    BYTE PTR [rsp+0xf0],0x1
  41b639:	call   0x4141a0
  41b63e:	mov    rcx,r12
  41b641:	call   0x427f68
  41b646:	mov    eax,0x1
  41b64b:	add    rsp,0x118
  41b652:	pop    rbx
  41b653:	pop    rsi
  41b654:	pop    rdi
  41b655:	pop    rbp
  41b656:	pop    r12
  41b658:	pop    r13
  41b65a:	ret    
  41b65b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b660:	mov    QWORD PTR [rsp+0x30],rax
  41b665:	lea    rax,[rip+0x29cdc]        # 0x445348
  41b66c:	lea    r9,[rip+0x24dc1]        # 0x440434
  41b673:	lea    r8,[rip+0x24dbf]        # 0x440439
  41b67a:	lea    rdx,[rip+0x29bff]        # 0x445280
  41b681:	mov    rcx,rsi
  41b684:	mov    QWORD PTR [rsp+0x28],rax
  41b689:	lea    rax,[rip+0x29cbf]        # 0x44534f
  41b690:	mov    QWORD PTR [rsp+0x20],rax
  41b695:	call   0x427d70
  41b69a:	jmp    0x41b583
  41b69f:	nop
  41b6a0:	mov    eax,r9d
  41b6a3:	mov    ecx,0x51eb851f
  41b6a8:	mov    r10d,r9d
  41b6ab:	imul   ecx
  41b6ad:	sar    r10d,0x1f
  41b6b1:	sar    edx,0x5
  41b6b4:	mov    r8d,edx
  41b6b7:	sub    r8d,r10d
  41b6ba:	mov    eax,r8d
  41b6bd:	imul   ecx
  41b6bf:	mov    eax,r8d
  41b6c2:	sar    eax,0x1f
  41b6c5:	sar    edx,0x5
  41b6c8:	mov    ecx,edx
  41b6ca:	mov    edx,0x68db8bad
  41b6cf:	sub    ecx,eax
  41b6d1:	mov    eax,r9d
  41b6d4:	imul   edx
  41b6d6:	imul   ecx,ecx,0x64
  41b6d9:	sar    edx,0xc
  41b6dc:	sub    r8d,ecx
  41b6df:	lea    rcx,[rip+0x2926a]        # 0x444950
  41b6e6:	sub    edx,r10d
  41b6e9:	call   0x405d90
  41b6ee:	mov    eax,0x1
  41b6f3:	add    rsp,0x118
  41b6fa:	pop    rbx
  41b6fb:	pop    rsi
  41b6fc:	pop    rdi
  41b6fd:	pop    rbp
  41b6fe:	pop    r12
  41b700:	pop    r13
  41b702:	ret    
  41b703:	nop    DWORD PTR [rax]
  41b706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b710:	push   r15
  41b712:	push   r14
  41b714:	push   r13
  41b716:	push   r12
  41b718:	push   rbp
  41b719:	push   rdi
  41b71a:	push   rsi
  41b71b:	push   rbx
  41b71c:	sub    rsp,0x228
  41b723:	mov    r15,QWORD PTR [rip+0x391b6]        # 0x4548e0
  41b72a:	lea    rbx,[rsp+0xe0]
  41b732:	mov    rbp,rcx
  41b735:	mov    ecx,0x13
  41b73a:	lea    rsi,[r15+0x28]
  41b73e:	mov    rdi,rbx
  41b741:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b744:	mov    ecx,DWORD PTR [r15+0xe4]
  41b74b:	cmp    ecx,0x139ab
  41b751:	jle    0x41bb10
  41b757:	test   dl,dl
  41b759:	jne    0x41b870
  41b75f:	lea    rsi,[rsp+0x180]
  41b767:	mov    rcx,rsi
  41b76a:	call   0x427da8
  41b76f:	lea    rax,[rip+0x236d4]        # 0x43ee4a
  41b776:	lea    r9,[rip+0x24cb7]        # 0x440434
  41b77d:	lea    r8,[rip+0x24cb5]        # 0x440439
  41b784:	lea    rdx,[rip+0x2a195]        # 0x445920
  41b78b:	mov    rcx,rsi
  41b78e:	mov    QWORD PTR [rsp+0x20],rax
  41b793:	call   0x427d70
  41b798:	lea    rax,[rip+0x29e29]        # 0x4455c8
  41b79f:	mov    QWORD PTR [rsp+0x38],0x0
  41b7a8:	mov    DWORD PTR [rsp+0x20],0x0
  41b7b0:	xor    r9d,r9d
  41b7b3:	mov    r8,rbp
  41b7b6:	mov    rdx,rsi
  41b7b9:	mov    QWORD PTR [rsp+0x40],rax
  41b7be:	lea    rax,[rip+0x29e2d]        # 0x4455f2
  41b7c5:	mov    QWORD PTR [rsp+0x30],rax
  41b7ca:	lea    rax,[rip+0x25032]        # 0x440803
  41b7d1:	mov    QWORD PTR [rsp+0x28],rax
  41b7d6:	mov    rcx,QWORD PTR [r15]
  41b7d9:	call   0x41e8f0
  41b7de:	lea    rdx,[rip+0x26189]        # 0x44196e
  41b7e5:	mov    rcx,rsi
  41b7e8:	call   0x427dc8
  41b7ed:	mov    rcx,QWORD PTR [rsp+0x180]
  41b7f5:	xor    edx,edx
  41b7f7:	call   0x4062b0
  41b7fc:	mov    rcx,rsi
  41b7ff:	mov    rbp,rax
  41b802:	call   0x427d60
  41b807:	xor    eax,eax
  41b809:	test   rbp,rbp
  41b80c:	je     0x41b854
  41b80e:	mov    r9,QWORD PTR [r15+0x108]
  41b815:	mov    r8,QWORD PTR [r15+0x10]
  41b819:	lea    rax,[rip+0x2a1d0]        # 0x4459f0
  41b820:	mov    rdx,rbx
  41b823:	mov    rcx,rbp
  41b826:	mov    QWORD PTR [rsp+0x140],0x0
  41b832:	mov    QWORD PTR [rsp+0x150],rax
  41b83a:	mov    BYTE PTR [rsp+0x160],0x1
  41b842:	call   0x4141a0
  41b847:	mov    rcx,rbp
  41b84a:	call   0x427f68
  41b84f:	mov    eax,0x1
  41b854:	add    rsp,0x228
  41b85b:	pop    rbx
  41b85c:	pop    rsi
  41b85d:	pop    rdi
  41b85e:	pop    rbp
  41b85f:	pop    r12
  41b861:	pop    r13
  41b863:	pop    r14
  41b865:	pop    r15
  41b867:	ret    
  41b868:	nop    DWORD PTR [rax+rax*1+0x0]
  41b870:	lea    rbx,[rsp+0x80]
  41b878:	mov    rcx,rbx
  41b87b:	call   0x427da8
  41b880:	lea    rdx,[rip+0x29c09]        # 0x445490
  41b887:	mov    rcx,rbx
  41b88a:	call   0x427d70
  41b88f:	lea    rax,[rip+0x29d32]        # 0x4455c8
  41b896:	mov    QWORD PTR [rsp+0x38],0x0
  41b89f:	mov    DWORD PTR [rsp+0x20],0x0
  41b8a7:	mov    r9d,0x1
  41b8ad:	mov    r8,rbp
  41b8b0:	mov    rdx,rbx
  41b8b3:	mov    QWORD PTR [rsp+0x40],rax
  41b8b8:	lea    rax,[rip+0x29d33]        # 0x4455f2
  41b8bf:	mov    QWORD PTR [rsp+0x30],rax
  41b8c4:	lea    rax,[rip+0x24f38]        # 0x440803
  41b8cb:	mov    QWORD PTR [rsp+0x28],rax
  41b8d0:	mov    rcx,QWORD PTR [r15]
  41b8d3:	call   0x41e8f0
  41b8d8:	lea    rdx,[rip+0x29d1d]        # 0x4455fc
  41b8df:	mov    rcx,rbx
  41b8e2:	call   0x427dc8
  41b8e7:	mov    rcx,QWORD PTR [rsp+0x80]
  41b8ef:	xor    edx,edx
  41b8f1:	call   0x4062b0
  41b8f6:	mov    rcx,rbx
  41b8f9:	mov    r14,rax
  41b8fc:	call   0x427d60
  41b901:	xor    eax,eax
  41b903:	test   r14,r14
  41b906:	je     0x41b854
  41b90c:	mov    rcx,r14
  41b90f:	call   0x427e70
  41b914:	test   eax,eax
  41b916:	je     0x41bb70
  41b91c:	lea    rax,[rsp+0x180]
  41b924:	xor    ebx,ebx
  41b926:	mov    QWORD PTR [rsp+0x58],rax
  41b92b:	lea    rax,[r15+0x28]
  41b92f:	mov    QWORD PTR [rsp+0x70],rax
  41b934:	lea    rax,[rsp+0xa0]
  41b93c:	mov    QWORD PTR [rsp+0x78],rax
  41b941:	lea    rax,[rsp+0xc0]
  41b949:	mov    r13,rax
  41b94c:	jmp    0x41baa6
  41b951:	mov    r8d,0x3
  41b957:	mov    edx,ebx
  41b959:	mov    rcx,r14
  41b95c:	call   0x427e98
  41b961:	mov    r8d,0x4
  41b967:	mov    edx,ebx
  41b969:	mov    rcx,r14
  41b96c:	mov    QWORD PTR [rsp+0x68],rax
  41b971:	xor    ebp,ebp
  41b973:	call   0x427ea8
  41b978:	test   eax,eax
  41b97a:	je     0x41bba0
  41b980:	mov    rdi,QWORD PTR [rsp+0x58]
  41b985:	mov    rsi,QWORD PTR [rsp+0x70]
  41b98a:	mov    ecx,0x13
  41b98f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41b992:	mov    rdi,QWORD PTR [rsp+0x78]
  41b997:	mov    rcx,rdi
  41b99a:	call   0x427da8
  41b99f:	mov    rax,QWORD PTR [rsp+0x50]
  41b9a4:	lea    r9,[rip+0x29c9d]        # 0x445648
  41b9ab:	lea    r8,[rip+0x29ca3]        # 0x445655
  41b9b2:	lea    rdx,[rip+0x29ca7]        # 0x445660
  41b9b9:	mov    rcx,rdi
  41b9bc:	mov    QWORD PTR [rsp+0x20],rax
  41b9c1:	call   0x427d70
  41b9c6:	mov    rcx,QWORD PTR [rsp+0xa0]
  41b9ce:	xor    edx,edx
  41b9d0:	call   0x4062b0
  41b9d5:	mov    rcx,rdi
  41b9d8:	mov    rsi,rax
  41b9db:	call   0x427d60
  41b9e0:	test   rsi,rsi
  41b9e3:	je     0x41bb90
  41b9e9:	mov    rcx,r13
  41b9ec:	call   0x427da8
  41b9f1:	test   r12,r12
  41b9f4:	je     0x41bbe0
  41b9fa:	mov    r9,QWORD PTR [rsp+0x60]
  41b9ff:	lea    rdx,[rip+0x29eb2]        # 0x4458b8
  41ba06:	mov    r8,r12
  41ba09:	mov    rcx,r13
  41ba0c:	call   0x427dd8
  41ba11:	test   rbp,rbp
  41ba14:	je     0x41bbc0
  41ba1a:	mov    r9,QWORD PTR [rsp+0x68]
  41ba1f:	lea    rdx,[rip+0x29ed9]        # 0x4458ff
  41ba26:	mov    r8,rbp
  41ba29:	mov    rcx,r13
  41ba2c:	call   0x427dd8
  41ba31:	mov    rax,QWORD PTR [rsp+0xc0]
  41ba39:	mov    r9,QWORD PTR [r15+0x108]
  41ba40:	mov    rcx,rsi
  41ba43:	mov    r8,QWORD PTR [r15+0x10]
  41ba47:	mov    rdx,QWORD PTR [rsp+0x58]
  41ba4c:	mov    QWORD PTR [rsp+0x1e0],0x0
  41ba58:	mov    QWORD PTR [rsp+0x1f8],0x0
  41ba64:	mov    QWORD PTR [rsp+0x1f0],rax
  41ba6c:	mov    BYTE PTR [rsp+0x18d],0x0
  41ba74:	mov    BYTE PTR [rsp+0x200],0x1
  41ba7c:	call   0x4141a0
  41ba81:	mov    rcx,r13
  41ba84:	call   0x427d60
  41ba89:	mov    rcx,rsi
  41ba8c:	call   0x427f68
  41ba91:	mov    rax,QWORD PTR [rip+0x38d78]        # 0x454810
  41ba98:	movzx  eax,BYTE PTR [rax]
  41ba9b:	test   al,al
  41ba9d:	jne    0x41bb90
  41baa3:	add    ebx,0x1
  41baa6:	mov    rcx,r14
  41baa9:	call   0x427e70
  41baae:	cmp    ebx,eax
  41bab0:	jge    0x41bc00
  41bab6:	xor    r8d,r8d
  41bab9:	mov    edx,ebx
  41babb:	mov    rcx,r14
  41babe:	call   0x427e98
  41bac3:	mov    r8d,0x1
  41bac9:	mov    edx,ebx
  41bacb:	mov    rcx,r14
  41bace:	mov    QWORD PTR [rsp+0x50],rax
  41bad3:	xor    r12d,r12d
  41bad6:	call   0x427e98
  41badb:	mov    r8d,0x2
  41bae1:	mov    edx,ebx
  41bae3:	mov    rcx,r14
  41bae6:	mov    QWORD PTR [rsp+0x60],rax
  41baeb:	call   0x427ea8
  41baf0:	test   eax,eax
  41baf2:	jne    0x41b951
  41baf8:	mov    r8d,0x2
  41bafe:	mov    edx,ebx
  41bb00:	mov    rcx,r14
  41bb03:	call   0x427e98
  41bb08:	mov    r12,rax
  41bb0b:	jmp    0x41b951
  41bb10:	mov    r9d,0x51eb851f
  41bb16:	mov    eax,ecx
  41bb18:	mov    r10d,ecx
  41bb1b:	imul   r9d
  41bb1e:	sar    r10d,0x1f
  41bb22:	sar    edx,0x5
  41bb25:	mov    r8d,edx
  41bb28:	sub    r8d,r10d
  41bb2b:	mov    eax,r8d
  41bb2e:	imul   r9d
  41bb31:	mov    eax,r8d
  41bb34:	sar    eax,0x1f
  41bb37:	sar    edx,0x5
  41bb3a:	mov    r9d,edx
  41bb3d:	mov    edx,0x68db8bad
  41bb42:	sub    r9d,eax
  41bb45:	mov    eax,ecx
  41bb47:	lea    rcx,[rip+0x28e02]        # 0x444950
  41bb4e:	imul   edx
  41bb50:	imul   r9d,r9d,0x64
  41bb54:	sar    edx,0xc
  41bb57:	sub    edx,r10d
  41bb5a:	sub    r8d,r9d
  41bb5d:	call   0x405d90
  41bb62:	mov    eax,0x1
  41bb67:	jmp    0x41b854
  41bb6c:	nop    DWORD PTR [rax+0x0]
  41bb70:	cmp    BYTE PTR [r15+0x11a],0x0
  41bb78:	jne    0x41bb90
  41bb7a:	lea    rcx,[rip+0x29a8f]        # 0x445610
  41bb81:	mov    rdx,rbp
  41bb84:	call   0x405d90
  41bb89:	nop    DWORD PTR [rax+0x0]
  41bb90:	mov    rcx,r14
  41bb93:	call   0x427f68
  41bb98:	xor    eax,eax
  41bb9a:	jmp    0x41b854
  41bb9f:	nop
  41bba0:	mov    r8d,0x4
  41bba6:	mov    edx,ebx
  41bba8:	mov    rcx,r14
  41bbab:	call   0x427e98
  41bbb0:	mov    rbp,rax
  41bbb3:	jmp    0x41b980
  41bbb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbc0:	mov    r8,QWORD PTR [rsp+0x68]
  41bbc5:	lea    rdx,[rip+0x29d44]        # 0x445910
  41bbcc:	mov    rcx,r13
  41bbcf:	call   0x427dd8
  41bbd4:	jmp    0x41ba31
  41bbd9:	nop    DWORD PTR [rax+0x0]
  41bbe0:	mov    r8,QWORD PTR [rsp+0x60]
  41bbe5:	lea    rdx,[rip+0x29cf4]        # 0x4458e0
  41bbec:	mov    rcx,r13
  41bbef:	call   0x427dd8
  41bbf4:	jmp    0x41ba11
  41bbf9:	nop    DWORD PTR [rax+0x0]
  41bc00:	mov    rcx,r14
  41bc03:	call   0x427f68
  41bc08:	mov    eax,0x1
  41bc0d:	jmp    0x41b854
  41bc12:	nop    DWORD PTR [rax+0x0]
  41bc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc20:	push   r14
  41bc22:	push   r13
  41bc24:	push   r12
  41bc26:	push   rbp
  41bc27:	push   rdi
  41bc28:	push   rsi
  41bc29:	push   rbx
  41bc2a:	sub    rsp,0x110
  41bc31:	mov    rbp,QWORD PTR [rip+0x38ca8]        # 0x4548e0
  41bc38:	lea    r12,[rsp+0x70]
  41bc3d:	mov    r13,rcx
  41bc40:	mov    r14d,edx
  41bc43:	mov    ecx,0x13
  41bc48:	mov    r9d,DWORD PTR [rbp+0xe4]
  41bc4f:	lea    rsi,[rbp+0x28]
  41bc53:	mov    rdi,r12
  41bc56:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41bc59:	cmp    r9d,0x13a0f
  41bc60:	jle    0x41bd94
  41bc66:	lea    rbx,[rsp+0x50]
  41bc6b:	mov    rcx,rbx
  41bc6e:	call   0x427da8
  41bc73:	lea    r9,[rip+0x24c00]        # 0x44087a
  41bc7a:	lea    r8,[rip+0x247b3]        # 0x440434
  41bc81:	lea    rdx,[rip+0x29dd8]        # 0x445a60
  41bc88:	mov    rcx,rbx
  41bc8b:	call   0x427d70
  41bc90:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41bc9a:	jg     0x41be63
  41bca0:	lea    r8,[rip+0x27abc]        # 0x443763
  41bca7:	lea    rdx,[rip+0x29e42]        # 0x445af0
  41bcae:	mov    rcx,rbx
  41bcb1:	call   0x427dd8
  41bcb6:	test   r14b,r14b
  41bcb9:	jne    0x41bdf0
  41bcbf:	lea    rdx,[rip+0x29ffa]        # 0x445cc0
  41bcc6:	mov    rcx,rbx
  41bcc9:	call   0x427dc8
  41bcce:	lea    rax,[rip+0x29fc0]        # 0x445c95
  41bcd5:	mov    QWORD PTR [rsp+0x40],0x0
  41bcde:	mov    QWORD PTR [rsp+0x38],0x0
  41bce7:	mov    QWORD PTR [rsp+0x28],0x0
  41bcf0:	mov    DWORD PTR [rsp+0x20],0x0
  41bcf8:	xor    r9d,r9d
  41bcfb:	mov    QWORD PTR [rsp+0x30],rax
  41bd00:	mov    rcx,QWORD PTR [rbp+0x0]
  41bd04:	mov    r8,r13
  41bd07:	mov    rdx,rbx
  41bd0a:	call   0x41e8f0
  41bd0f:	lea    rdx,[rip+0x24ce2]        # 0x4409f8
  41bd16:	mov    rcx,rbx
  41bd19:	call   0x427dc8
  41bd1e:	mov    rcx,QWORD PTR [rsp+0x50]
  41bd23:	xor    edx,edx
  41bd25:	call   0x4062b0
  41bd2a:	mov    rcx,rbx
  41bd2d:	mov    rsi,rax
  41bd30:	call   0x427d60
  41bd35:	xor    eax,eax
  41bd37:	test   rsi,rsi
  41bd3a:	je     0x41bd82
  41bd3c:	mov    r9,QWORD PTR [rbp+0x108]
  41bd43:	mov    r8,QWORD PTR [rbp+0x10]
  41bd47:	lea    rax,[rip+0x29f4f]        # 0x445c9d
  41bd4e:	mov    rdx,r12
  41bd51:	mov    rcx,rsi
  41bd54:	mov    QWORD PTR [rsp+0xd0],0x0
  41bd60:	mov    QWORD PTR [rsp+0xe0],rax
  41bd68:	mov    BYTE PTR [rsp+0xf0],0x1
  41bd70:	call   0x4141a0
  41bd75:	mov    rcx,rsi
  41bd78:	call   0x427f68
  41bd7d:	mov    eax,0x1
  41bd82:	add    rsp,0x110
  41bd89:	pop    rbx
  41bd8a:	pop    rsi
  41bd8b:	pop    rdi
  41bd8c:	pop    rbp
  41bd8d:	pop    r12
  41bd8f:	pop    r13
  41bd91:	pop    r14
  41bd93:	ret    
  41bd94:	mov    ecx,0x51eb851f
  41bd99:	mov    eax,r9d
  41bd9c:	mov    r10d,r9d
  41bd9f:	imul   ecx
  41bda1:	sar    r10d,0x1f
  41bda5:	sar    edx,0x5
  41bda8:	mov    r8d,edx
  41bdab:	sub    r8d,r10d
  41bdae:	mov    eax,r8d
  41bdb1:	imul   ecx
  41bdb3:	mov    eax,r8d
  41bdb6:	sar    eax,0x1f
  41bdb9:	sar    edx,0x5
  41bdbc:	mov    ecx,edx
  41bdbe:	mov    edx,0x68db8bad
  41bdc3:	sub    ecx,eax
  41bdc5:	mov    eax,r9d
  41bdc8:	imul   edx
  41bdca:	imul   ecx,ecx,0x64
  41bdcd:	sar    edx,0xc
  41bdd0:	sub    r8d,ecx
  41bdd3:	lea    rcx,[rip+0x29c3e]        # 0x445a18
  41bdda:	sub    edx,r10d
  41bddd:	call   0x405d90
  41bde2:	mov    eax,0x1
  41bde7:	jmp    0x41bd82
  41bde9:	nop    DWORD PTR [rax+0x0]
  41bdf0:	lea    rdx,[rip+0x24b6f]        # 0x440966
  41bdf7:	mov    rcx,rbx
  41bdfa:	call   0x427dc8
  41bdff:	lea    rdx,[rip+0x29d19]        # 0x445b1f
  41be06:	mov    rcx,rbx
  41be09:	call   0x414870
  41be0e:	lea    r8,[rip+0x23014]        # 0x43ee29
  41be15:	lea    rdx,[rip+0x29d0c]        # 0x445b28
  41be1c:	mov    rcx,rbx
  41be1f:	call   0x427dd8
  41be24:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41be2e:	jg     0x41be80
  41be30:	lea    rdx,[rip+0x29e89]        # 0x445cc0
  41be37:	mov    rcx,rbx
  41be3a:	call   0x427dc8
  41be3f:	cmp    DWORD PTR [rbp+0xe4],0x15ff3
  41be49:	jle    0x41bcce
  41be4f:	lea    rdx,[rip+0x29dca]        # 0x445c20
  41be56:	mov    rcx,rbx
  41be59:	call   0x427dc8
  41be5e:	jmp    0x41bcce
  41be63:	lea    r8,[rip+0x29c47]        # 0x445ab1
  41be6a:	lea    rdx,[rip+0x29c4f]        # 0x445ac0
  41be71:	mov    rcx,rbx
  41be74:	call   0x427dd8
  41be79:	jmp    0x41bca0
  41be7e:	xchg   ax,ax
  41be80:	lea    r8,[rip+0x22fc3]        # 0x43ee4a
  41be87:	lea    rdx,[rip+0x29d77]        # 0x445c05
  41be8e:	mov    rcx,rbx
  41be91:	call   0x427dd8
  41be96:	jmp    0x41be30
  41be98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bea0:	push   r14
  41bea2:	push   r13
  41bea4:	push   r12
  41bea6:	push   rbp
  41bea7:	push   rdi
  41bea8:	push   rsi
  41bea9:	push   rbx
  41beaa:	sub    rsp,0x110
  41beb1:	mov    rbp,QWORD PTR [rip+0x38a28]        # 0x4548e0
  41beb8:	lea    r12,[rsp+0x70]
  41bebd:	mov    r13,rcx
  41bec0:	mov    r14d,edx
  41bec3:	mov    ecx,0x13
  41bec8:	mov    r9d,DWORD PTR [rbp+0xe4]
  41becf:	lea    rsi,[rbp+0x28]
  41bed3:	mov    rdi,r12
  41bed6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41bed9:	cmp    r9d,0x13a0f
  41bee0:	jle    0x41c000
  41bee6:	lea    rbx,[rsp+0x50]
  41beeb:	mov    rcx,rbx
  41beee:	call   0x427da8
  41bef3:	lea    rax,[rip+0x29e96]        # 0x445d90
  41befa:	lea    r9,[rip+0x24979]        # 0x44087a
  41bf01:	lea    r8,[rip+0x2452c]        # 0x440434
  41bf08:	lea    rdx,[rip+0x29e21]        # 0x445d30
  41bf0f:	mov    rcx,rbx
  41bf12:	mov    QWORD PTR [rsp+0x20],rax
  41bf17:	call   0x427d70
  41bf1c:	test   r14b,r14b
  41bf1f:	jne    0x41c055
  41bf25:	lea    rdx,[rip+0x29fb4]        # 0x445ee0
  41bf2c:	mov    rcx,rbx
  41bf2f:	call   0x427dc8
  41bf34:	lea    rax,[rip+0x2a073]        # 0x445fae
  41bf3b:	mov    QWORD PTR [rsp+0x40],0x0
  41bf44:	mov    QWORD PTR [rsp+0x38],0x0
  41bf4d:	mov    QWORD PTR [rsp+0x28],0x0
  41bf56:	mov    DWORD PTR [rsp+0x20],0x0
  41bf5e:	xor    r9d,r9d
  41bf61:	mov    QWORD PTR [rsp+0x30],rax
  41bf66:	mov    rcx,QWORD PTR [rbp+0x0]
  41bf6a:	mov    r8,r13
  41bf6d:	mov    rdx,rbx
  41bf70:	call   0x41e8f0
  41bf75:	lea    rdx,[rip+0x24a7c]        # 0x4409f8
  41bf7c:	mov    rcx,rbx
  41bf7f:	call   0x427dc8
  41bf84:	mov    rcx,QWORD PTR [rsp+0x50]
  41bf89:	xor    edx,edx
  41bf8b:	call   0x4062b0
  41bf90:	mov    rcx,rbx
  41bf93:	mov    rsi,rax
  41bf96:	call   0x427d60
  41bf9b:	xor    eax,eax
  41bf9d:	test   rsi,rsi
  41bfa0:	je     0x41bfe8
  41bfa2:	mov    r9,QWORD PTR [rbp+0x108]
  41bfa9:	mov    r8,QWORD PTR [rbp+0x10]
  41bfad:	lea    rax,[rip+0x2a004]        # 0x445fb8
  41bfb4:	mov    rdx,r12
  41bfb7:	mov    rcx,rsi
  41bfba:	mov    QWORD PTR [rsp+0xd0],0x0
  41bfc6:	mov    QWORD PTR [rsp+0xe0],rax
  41bfce:	mov    BYTE PTR [rsp+0xf0],0x1
  41bfd6:	call   0x4141a0
  41bfdb:	mov    rcx,rsi
  41bfde:	call   0x427f68
  41bfe3:	mov    eax,0x1
  41bfe8:	add    rsp,0x110
  41bfef:	pop    rbx
  41bff0:	pop    rsi
  41bff1:	pop    rdi
  41bff2:	pop    rbp
  41bff3:	pop    r12
  41bff5:	pop    r13
  41bff7:	pop    r14
  41bff9:	ret    
  41bffa:	nop    WORD PTR [rax+rax*1+0x0]
  41c000:	mov    ecx,0x51eb851f
  41c005:	mov    eax,r9d
  41c008:	mov    r10d,r9d
  41c00b:	imul   ecx
  41c00d:	sar    r10d,0x1f
  41c011:	sar    edx,0x5
  41c014:	mov    r8d,edx
  41c017:	sub    r8d,r10d
  41c01a:	mov    eax,r8d
  41c01d:	imul   ecx
  41c01f:	mov    eax,r8d
  41c022:	sar    eax,0x1f
  41c025:	sar    edx,0x5
  41c028:	mov    ecx,edx
  41c02a:	mov    edx,0x68db8bad
  41c02f:	sub    ecx,eax
  41c031:	mov    eax,r9d
  41c034:	imul   edx
  41c036:	imul   ecx,ecx,0x64
  41c039:	sar    edx,0xc
  41c03c:	sub    r8d,ecx
  41c03f:	lea    rcx,[rip+0x29caa]        # 0x445cf0
  41c046:	sub    edx,r10d
  41c049:	call   0x405d90
  41c04e:	mov    eax,0x1
  41c053:	jmp    0x41bfe8
  41c055:	lea    rdx,[rip+0x2490a]        # 0x440966
  41c05c:	mov    rcx,rbx
  41c05f:	call   0x427dc8
  41c064:	lea    rdx,[rip+0x29d3a]        # 0x445da5
  41c06b:	mov    rcx,rbx
  41c06e:	call   0x414870
  41c073:	lea    rax,[rip+0x22dd0]        # 0x43ee4a
  41c07a:	lea    r9,[rip+0x29d2d]        # 0x445dae
  41c081:	lea    r8,[rip+0x22d81]        # 0x43ee09
  41c088:	lea    rdx,[rip+0x29d29]        # 0x445db8
  41c08f:	mov    rcx,rbx
  41c092:	mov    QWORD PTR [rsp+0x28],rax
  41c097:	lea    rax,[rip+0x22d8b]        # 0x43ee29
  41c09e:	mov    QWORD PTR [rsp+0x20],rax
  41c0a3:	call   0x427dd8
  41c0a8:	lea    rdx,[rip+0x29e31]        # 0x445ee0
  41c0af:	mov    rcx,rbx
  41c0b2:	call   0x427dc8
  41c0b7:	lea    rdx,[rip+0x29e8a]        # 0x445f48
  41c0be:	mov    rcx,rbx
  41c0c1:	call   0x427dc8
  41c0c6:	jmp    0x41bf34
  41c0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0d0:	push   r13
  41c0d2:	push   r12
  41c0d4:	push   rbp
  41c0d5:	push   rdi
  41c0d6:	push   rsi
  41c0d7:	push   rbx
  41c0d8:	sub    rsp,0x118
  41c0df:	mov    rbx,QWORD PTR [rip+0x387fa]        # 0x4548e0
  41c0e6:	lea    rbp,[rsp+0x70]
  41c0eb:	mov    r12,rcx
  41c0ee:	mov    r13d,edx
  41c0f1:	mov    ecx,0x13
  41c0f6:	mov    r9d,DWORD PTR [rbx+0xe4]
  41c0fd:	lea    rsi,[rbx+0x28]
  41c101:	mov    rdi,rbp
  41c104:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c107:	cmp    r9d,0x13a0f
  41c10e:	jle    0x41c220
  41c114:	lea    rsi,[rsp+0x50]
  41c119:	mov    rcx,rsi
  41c11c:	call   0x427da8
  41c121:	lea    r9,[rip+0x29ee4]        # 0x44600c
  41c128:	lea    r8,[rip+0x29ee7]        # 0x446016
  41c12f:	lea    rdx,[rip+0x29eea]        # 0x446020
  41c136:	mov    rcx,rsi
  41c139:	call   0x427d70
  41c13e:	test   r13b,r13b
  41c141:	jne    0x41c283
  41c147:	lea    rdx,[rip+0x29fe2]        # 0x446130
  41c14e:	mov    rcx,rsi
  41c151:	call   0x427dc8
  41c156:	lea    rax,[rip+0x29ff9]        # 0x446156
  41c15d:	mov    QWORD PTR [rsp+0x40],0x0
  41c166:	mov    QWORD PTR [rsp+0x28],0x0
  41c16f:	mov    DWORD PTR [rsp+0x20],0x0
  41c177:	xor    r9d,r9d
  41c17a:	mov    r8,r12
  41c17d:	mov    QWORD PTR [rsp+0x38],rax
  41c182:	lea    rax,[rip+0x29fd8]        # 0x446161
  41c189:	mov    rdx,rsi
  41c18c:	mov    QWORD PTR [rsp+0x30],rax
  41c191:	mov    rcx,QWORD PTR [rbx]
  41c194:	call   0x41e8f0
  41c199:	lea    rdx,[rip+0x257ce]        # 0x44196e
  41c1a0:	mov    rcx,rsi
  41c1a3:	call   0x427dc8
  41c1a8:	mov    rcx,QWORD PTR [rsp+0x50]
  41c1ad:	xor    edx,edx
  41c1af:	call   0x4062b0
  41c1b4:	mov    rcx,rsi
  41c1b7:	mov    r12,rax
  41c1ba:	call   0x427d60
  41c1bf:	xor    eax,eax
  41c1c1:	test   r12,r12
  41c1c4:	je     0x41c20c
  41c1c6:	mov    r9,QWORD PTR [rbx+0x108]
  41c1cd:	mov    r8,QWORD PTR [rbx+0x10]
  41c1d1:	lea    rax,[rip+0x29f94]        # 0x44616c
  41c1d8:	mov    rdx,rbp
  41c1db:	mov    rcx,r12
  41c1de:	mov    QWORD PTR [rsp+0xd0],0x0
  41c1ea:	mov    QWORD PTR [rsp+0xe0],rax
  41c1f2:	mov    BYTE PTR [rsp+0xf0],0x1
  41c1fa:	call   0x4141a0
  41c1ff:	mov    rcx,r12
  41c202:	call   0x427f68
  41c207:	mov    eax,0x1
  41c20c:	add    rsp,0x118
  41c213:	pop    rbx
  41c214:	pop    rsi
  41c215:	pop    rdi
  41c216:	pop    rbp
  41c217:	pop    r12
  41c219:	pop    r13
  41c21b:	ret    
  41c21c:	nop    DWORD PTR [rax+0x0]
  41c220:	mov    eax,r9d
  41c223:	mov    ecx,0x51eb851f
  41c228:	mov    r10d,r9d
  41c22b:	imul   ecx
  41c22d:	sar    r10d,0x1f
  41c231:	sar    edx,0x5
  41c234:	mov    r8d,edx
  41c237:	sub    r8d,r10d
  41c23a:	mov    eax,r8d
  41c23d:	imul   ecx
  41c23f:	mov    eax,r8d
  41c242:	sar    eax,0x1f
  41c245:	sar    edx,0x5
  41c248:	mov    ecx,edx
  41c24a:	mov    edx,0x68db8bad
  41c24f:	sub    ecx,eax
  41c251:	mov    eax,r9d
  41c254:	imul   edx
  41c256:	imul   ecx,ecx,0x64
  41c259:	sar    edx,0xc
  41c25c:	sub    r8d,ecx
  41c25f:	lea    rcx,[rip+0x29d6a]        # 0x445fd0
  41c266:	sub    edx,r10d
  41c269:	call   0x405d90
  41c26e:	mov    eax,0x1
  41c273:	add    rsp,0x118
  41c27a:	pop    rbx
  41c27b:	pop    rsi
  41c27c:	pop    rdi
  41c27d:	pop    rbp
  41c27e:	pop    r12
  41c280:	pop    r13
  41c282:	ret    
  41c283:	lea    r8,[rip+0x22b9f]        # 0x43ee29
  41c28a:	lea    rdx,[rip+0x29dbf]        # 0x446050
  41c291:	mov    rcx,rsi
  41c294:	call   0x427dd8
  41c299:	jmp    0x41c147
  41c29e:	xchg   ax,ax
  41c2a0:	push   r14
  41c2a2:	push   r13
  41c2a4:	push   r12
  41c2a6:	push   rbp
  41c2a7:	push   rdi
  41c2a8:	push   rsi
  41c2a9:	push   rbx
  41c2aa:	sub    rsp,0x110
  41c2b1:	mov    rbp,QWORD PTR [rip+0x38628]        # 0x4548e0
  41c2b8:	lea    r12,[rsp+0x70]
  41c2bd:	mov    r13,rcx
  41c2c0:	mov    r14d,edx
  41c2c3:	mov    ecx,0x13
  41c2c8:	mov    r9d,DWORD PTR [rbp+0xe4]
  41c2cf:	lea    rsi,[rbp+0x28]
  41c2d3:	mov    rdi,r12
  41c2d6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c2d9:	cmp    r9d,0x15ff3
  41c2e0:	jle    0x41c400
  41c2e6:	lea    rbx,[rsp+0x50]
  41c2eb:	mov    rcx,rbx
  41c2ee:	call   0x427da8
  41c2f3:	lea    rax,[rip+0x29d1c]        # 0x446016
  41c2fa:	lea    r9,[rip+0x270b8]        # 0x4433b9
  41c301:	lea    r8,[rip+0x24131]        # 0x440439
  41c308:	lea    rdx,[rip+0x29eb9]        # 0x4461c8
  41c30f:	mov    rcx,rbx
  41c312:	mov    QWORD PTR [rsp+0x20],rax
  41c317:	call   0x427d70
  41c31c:	test   r14b,r14b
  41c31f:	jne    0x41c455
  41c325:	lea    rdx,[rip+0x29fdc]        # 0x446308
  41c32c:	mov    rcx,rbx
  41c32f:	call   0x427dc8
  41c334:	lea    rax,[rip+0x25ee3]        # 0x44221e
  41c33b:	mov    QWORD PTR [rsp+0x40],0x0
  41c344:	mov    QWORD PTR [rsp+0x28],0x0
  41c34d:	mov    DWORD PTR [rsp+0x20],0x0
  41c355:	xor    r9d,r9d
  41c358:	mov    r8,r13
  41c35b:	mov    QWORD PTR [rsp+0x38],rax
  41c360:	lea    rax,[rip+0x2449c]        # 0x440803
  41c367:	mov    rdx,rbx
  41c36a:	mov    QWORD PTR [rsp+0x30],rax
  41c36f:	mov    rcx,QWORD PTR [rbp+0x0]
  41c373:	call   0x41e8f0
  41c378:	lea    rdx,[rip+0x255ef]        # 0x44196e
  41c37f:	mov    rcx,rbx
  41c382:	call   0x427dc8
  41c387:	mov    rcx,QWORD PTR [rsp+0x50]
  41c38c:	xor    edx,edx
  41c38e:	call   0x4062b0
  41c393:	mov    rcx,rbx
  41c396:	mov    rsi,rax
  41c399:	call   0x427d60
  41c39e:	xor    eax,eax
  41c3a0:	test   rsi,rsi
  41c3a3:	je     0x41c3eb
  41c3a5:	mov    r9,QWORD PTR [rbp+0x108]
  41c3ac:	mov    r8,QWORD PTR [rbp+0x10]
  41c3b0:	lea    rax,[rip+0x2a0b0]        # 0x446467
  41c3b7:	mov    rdx,r12
  41c3ba:	mov    rcx,rsi
  41c3bd:	mov    QWORD PTR [rsp+0xd0],0x0
  41c3c9:	mov    QWORD PTR [rsp+0xe0],rax
  41c3d1:	mov    BYTE PTR [rsp+0xf0],0x1
  41c3d9:	call   0x4141a0
  41c3de:	mov    rcx,rsi
  41c3e1:	call   0x427f68
  41c3e6:	mov    eax,0x1
  41c3eb:	add    rsp,0x110
  41c3f2:	pop    rbx
  41c3f3:	pop    rsi
  41c3f4:	pop    rdi
  41c3f5:	pop    rbp
  41c3f6:	pop    r12
  41c3f8:	pop    r13
  41c3fa:	pop    r14
  41c3fc:	ret    
  41c3fd:	nop    DWORD PTR [rax]
  41c400:	mov    ecx,0x51eb851f
  41c405:	mov    eax,r9d
  41c408:	mov    r10d,r9d
  41c40b:	imul   ecx
  41c40d:	sar    r10d,0x1f
  41c411:	sar    edx,0x5
  41c414:	mov    r8d,edx
  41c417:	sub    r8d,r10d
  41c41a:	mov    eax,r8d
  41c41d:	imul   ecx
  41c41f:	mov    eax,r8d
  41c422:	sar    eax,0x1f
  41c425:	sar    edx,0x5
  41c428:	mov    ecx,edx
  41c42a:	mov    edx,0x68db8bad
  41c42f:	sub    ecx,eax
  41c431:	mov    eax,r9d
  41c434:	imul   edx
  41c436:	imul   ecx,ecx,0x64
  41c439:	sar    edx,0xc
  41c43c:	sub    r8d,ecx
  41c43f:	lea    rcx,[rip+0x29d42]        # 0x446188
  41c446:	sub    edx,r10d
  41c449:	call   0x405d90
  41c44e:	mov    eax,0x1
  41c453:	jmp    0x41c3eb
  41c455:	lea    r9,[rip+0x229ee]        # 0x43ee4a
  41c45c:	lea    r8,[rip+0x229c6]        # 0x43ee29
  41c463:	lea    rdx,[rip+0x29da6]        # 0x446210
  41c46a:	mov    rcx,rbx
  41c46d:	call   0x427dd8
  41c472:	lea    rdx,[rip+0x29e8f]        # 0x446308
  41c479:	mov    rcx,rbx
  41c47c:	call   0x427dc8
  41c481:	lea    rdx,[rip+0x29f68]        # 0x4463f0
  41c488:	mov    rcx,rbx
  41c48b:	call   0x427dc8
  41c490:	jmp    0x41c334
  41c495:	nop
  41c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4a0:	push   r12
  41c4a2:	push   rbp
  41c4a3:	push   rdi
  41c4a4:	push   rsi
  41c4a5:	push   rbx
  41c4a6:	sub    rsp,0x110
  41c4ad:	mov    rbx,QWORD PTR [rip+0x3842c]        # 0x4548e0
  41c4b4:	lea    rbp,[rsp+0x70]
  41c4b9:	mov    r12,rcx
  41c4bc:	mov    ecx,0x13
  41c4c1:	mov    r9d,DWORD PTR [rbx+0xe4]
  41c4c8:	lea    rsi,[rbx+0x28]
  41c4cc:	mov    rdi,rbp
  41c4cf:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41c4d2:	cmp    r9d,0x15ff3
  41c4d9:	jle    0x41c5e2
  41c4df:	lea    rsi,[rsp+0x50]
  41c4e4:	mov    rcx,rsi
  41c4e7:	call   0x427da8
  41c4ec:	lea    rax,[rip+0x22957]        # 0x43ee4a
  41c4f3:	lea    r9,[rip+0x298b4]        # 0x445dae
  41c4fa:	lea    r8,[rip+0x23f33]        # 0x440434
  41c501:	lea    rdx,[rip+0x29fb8]        # 0x4464c0
  41c508:	mov    rcx,rsi
  41c50b:	mov    QWORD PTR [rsp+0x28],rax
  41c510:	lea    rax,[rip+0x23f22]        # 0x440439
  41c517:	mov    QWORD PTR [rsp+0x20],rax
  41c51c:	call   0x427d70
  41c521:	lea    rax,[rip+0x2a0c9]        # 0x4465f1
  41c528:	mov    QWORD PTR [rsp+0x40],0x0
  41c531:	mov    QWORD PTR [rsp+0x38],0x0
  41c53a:	mov    QWORD PTR [rsp+0x28],0x0
  41c543:	mov    DWORD PTR [rsp+0x20],0x0
  41c54b:	xor    r9d,r9d
  41c54e:	mov    QWORD PTR [rsp+0x30],rax
  41c553:	mov    rcx,QWORD PTR [rbx]
  41c556:	mov    r8,r12
  41c559:	mov    rdx,rsi
  41c55c:	call   0x41e8f0
  41c561:	lea    rdx,[rip+0x24490]        # 0x4409f8
  41c568:	mov    rcx,rsi
  41c56b:	call   0x427dc8
  41c570:	mov    rcx,QWORD PTR [rsp+0x50]
  41c575:	xor    edx,edx
  41c577:	call   0x4062b0
  41c57c:	mov    rcx,rsi
  41c57f:	mov    rdi,rax
  41c582:	call   0x427d60
  41c587:	xor    eax,eax
  41c589:	test   rdi,rdi
  41c58c:	je     0x41c5d4
  41c58e:	mov    r9,QWORD PTR [rbx+0x108]
  41c595:	mov    r8,QWORD PTR [rbx+0x10]
  41c599:	lea    rax,[rip+0x2a05b]        # 0x4465fb
  41c5a0:	mov    rdx,rbp
  41c5a3:	mov    rcx,rdi
  41c5a6:	mov    QWORD PTR [rsp+0xd0],0x0
  41c5b2:	mov    QWORD PTR [rsp+0xe0],rax
  41c5ba:	mov    BYTE PTR [rsp+0xf0],0x1
  41c5c2:	call   0x4141a0
  41c5c7:	mov    rcx,rdi
  41c5ca:	call   0x427f68
  41c5cf:	mov    eax,0x1
  41c5d4:	add    rsp,0x110
  41c5db:	pop    rbx
  41c5dc:	pop    rsi
  41c5dd:	pop    rdi
  41c5de:	pop    rbp
  41c5df:	pop    r12
  41c5e1:	ret    
  41c5e2:	mov    eax,r9d
  41c5e5:	mov    ecx,0x51eb851f
  41c5ea:	mov    r10d,r9d
  41c5ed:	imul   ecx
  41c5ef:	sar    r10d,0x1f
  41c5f3:	sar    edx,0x5
  41c5f6:	mov    r8d,edx
  41c5f9:	sub    r8d,r10d
  41c5fc:	mov    eax,r8d
  41c5ff:	imul   ecx
  41c601:	mov    eax,r8d
  41c604:	sar    eax,0x1f
  41c607:	sar    edx,0x5
  41c60a:	mov    ecx,edx
  41c60c:	mov    edx,0x68db8bad
  41c611:	sub    ecx,eax
  41c613:	mov    eax,r9d
  41c616:	imul   edx
  41c618:	imul   ecx,ecx,0x64
  41c61b:	sar    edx,0xc
  41c61e:	sub    r8d,ecx
  41c621:	lea    rcx,[rip+0x29e58]        # 0x446480
  41c628:	sub    edx,r10d
  41c62b:	call   0x405d90
  41c630:	mov    eax,0x1
  41c635:	add    rsp,0x110
  41c63c:	pop    rbx
  41c63d:	pop    rsi
  41c63e:	pop    rdi
  41c63f:	pop    rbp
  41c640:	pop    r12
  41c642:	ret    
  41c643:	nop    DWORD PTR [rax]
  41c646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c650:	push   rbp
  41c651:	push   rdi
  41c652:	push   rsi
  41c653:	push   rbx
  41c654:	sub    rsp,0x88
  41c65b:	mov    rdi,QWORD PTR [rip+0x3827e]        # 0x4548e0
  41c662:	mov    rbp,rcx
  41c665:	mov    r9d,DWORD PTR [rdi+0xe4]
  41c66c:	cmp    r9d,0x15ff3
  41c673:	jle    0x41c750
  41c679:	lea    rbx,[rsp+0x60]
  41c67e:	mov    rcx,rbx
  41c681:	call   0x427da8
  41c686:	lea    rdx,[rip+0x29f8b]        # 0x446618
  41c68d:	mov    rcx,rbx
  41c690:	call   0x427d70
  41c695:	lea    rax,[rip+0x29f55]        # 0x4465f1
  41c69c:	mov    QWORD PTR [rsp+0x40],0x0
  41c6a5:	mov    QWORD PTR [rsp+0x38],0x0
  41c6ae:	mov    QWORD PTR [rsp+0x28],0x0
  41c6b7:	mov    DWORD PTR [rsp+0x20],0x0
  41c6bf:	xor    r9d,r9d
  41c6c2:	mov    QWORD PTR [rsp+0x30],rax
  41c6c7:	mov    rcx,QWORD PTR [rdi]
  41c6ca:	mov    r8,rbp
  41c6cd:	mov    rdx,rbx
  41c6d0:	call   0x41e8f0
  41c6d5:	lea    rdx,[rip+0x2431c]        # 0x4409f8
  41c6dc:	mov    rcx,rbx
  41c6df:	call   0x427dc8
  41c6e4:	mov    rcx,QWORD PTR [rsp+0x60]
  41c6e9:	xor    edx,edx
  41c6eb:	call   0x4062b0
  41c6f0:	mov    rcx,rbx
  41c6f3:	mov    rsi,rax
  41c6f6:	call   0x427d60
  41c6fb:	xor    eax,eax
  41c6fd:	test   rsi,rsi
  41c700:	je     0x41c73d
  41c702:	mov    rcx,rsi
  41c705:	call   0x427e70
  41c70a:	test   eax,eax
  41c70c:	jne    0x41c7b0
  41c712:	cmp    BYTE PTR [rdi+0x11a],0x0
  41c719:	jne    0x41c733
  41c71b:	test   rbp,rbp
  41c71e:	je     0x41c836
  41c724:	lea    rcx,[rip+0x29f25]        # 0x446650
  41c72b:	mov    rdx,rbp
  41c72e:	call   0x405d90
  41c733:	mov    rcx,rsi
  41c736:	call   0x427f68
  41c73b:	xor    eax,eax
  41c73d:	add    rsp,0x88
  41c744:	pop    rbx
  41c745:	pop    rsi
  41c746:	pop    rdi
  41c747:	pop    rbp
  41c748:	ret    
  41c749:	nop    DWORD PTR [rax+0x0]
  41c750:	mov    eax,r9d
  41c753:	mov    ecx,0x51eb851f
  41c758:	mov    r10d,r9d
  41c75b:	imul   ecx
  41c75d:	sar    r10d,0x1f
  41c761:	sar    edx,0x5
  41c764:	mov    r8d,edx
  41c767:	sub    r8d,r10d
  41c76a:	mov    eax,r8d
  41c76d:	imul   ecx
  41c76f:	mov    eax,r8d
  41c772:	sar    eax,0x1f
  41c775:	sar    edx,0x5
  41c778:	mov    ecx,edx
  41c77a:	mov    edx,0x68db8bad
  41c77f:	sub    ecx,eax
  41c781:	mov    eax,r9d
  41c784:	imul   edx
  41c786:	imul   ecx,ecx,0x64
  41c789:	sar    edx,0xc
  41c78c:	sub    r8d,ecx
  41c78f:	lea    rcx,[rip+0x29cea]        # 0x446480
  41c796:	sub    edx,r10d
  41c799:	call   0x405d90
  41c79e:	mov    eax,0x1
  41c7a3:	add    rsp,0x88
  41c7aa:	pop    rbx
  41c7ab:	pop    rsi
  41c7ac:	pop    rdi
  41c7ad:	pop    rbp
  41c7ae:	ret    
  41c7af:	nop
  41c7b0:	xor    ebx,ebx
  41c7b2:	mov    rbp,QWORD PTR [rip+0x38057]        # 0x454810
  41c7b9:	jmp    0x41c7fe
  41c7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7c0:	xor    r8d,r8d
  41c7c3:	mov    edx,ebx
  41c7c5:	mov    rcx,rsi
  41c7c8:	call   0x427e98
  41c7cd:	mov    r8d,0x1
  41c7d3:	mov    rdi,rax
  41c7d6:	mov    edx,ebx
  41c7d8:	mov    rcx,rsi
  41c7db:	call   0x427e98
  41c7e0:	mov    rcx,rdi
  41c7e3:	mov    rdx,rax
  41c7e6:	call   0x414780
  41c7eb:	test   al,al
  41c7ed:	je     0x41c820
  41c7ef:	movzx  eax,BYTE PTR [rbp+0x0]
  41c7f3:	test   al,al
  41c7f5:	jne    0x41c733
  41c7fb:	add    ebx,0x1
  41c7fe:	mov    rcx,rsi
  41c801:	call   0x427e70
  41c806:	cmp    ebx,eax
  41c808:	jl     0x41c7c0
  41c80a:	mov    rcx,rsi
  41c80d:	call   0x427f68
  41c812:	mov    eax,0x1
  41c817:	jmp    0x41c73d
  41c81c:	nop    DWORD PTR [rax+0x0]
  41c820:	mov    rcx,rsi
  41c823:	mov    BYTE PTR [rsp+0x5f],al
  41c827:	call   0x427f68
  41c82c:	movzx  eax,BYTE PTR [rsp+0x5f]
  41c831:	jmp    0x41c73d
  41c836:	lea    rcx,[rip+0x29e3b]        # 0x446678
  41c83d:	call   0x405d90
  41c842:	jmp    0x41c733
  41c847:	nop
  41c848:	nop
  41c849:	nop
  41c84a:	nop
  41c84b:	nop
  41c84c:	nop
  41c84d:	nop
  41c84e:	nop
  41c84f:	nop
  41c850:	sub    rsp,0x28
  41c854:	mov    eax,DWORD PTR [rip+0xfc76]        # 0x42c4d0
  41c85a:	test   eax,eax
  41c85c:	js     0x41c863
  41c85e:	add    rsp,0x28
  41c862:	ret    
  41c863:	lea    rcx,[rip+0x29e66]        # 0x4466d0
  41c86a:	call   0x427d88
  41c86f:	mov    DWORD PTR [rip+0xfc5b],eax        # 0x42c4d0
  41c875:	add    rsp,0x28
  41c879:	ret    
  41c87a:	nop    WORD PTR [rax+rax*1+0x0]
  41c880:	push   r12
  41c882:	push   rbp
  41c883:	push   rdi
  41c884:	push   rsi
  41c885:	push   rbx
  41c886:	sub    rsp,0x20
  41c88a:	xor    ebp,ebp
  41c88c:	test   rdx,rdx
  41c88f:	mov    rdi,rcx
  41c892:	mov    rsi,rdx
  41c895:	mov    r12d,r8d
  41c898:	jne    0x41c8bc
  41c89a:	jmp    0x41c8cf
  41c89c:	nop    DWORD PTR [rax+0x0]
  41c8a0:	mov    edx,r12d
  41c8a3:	mov    rcx,rdi
  41c8a6:	call   0x427f28
  41c8ab:	lea    edx,[rbp+rax*1+0x0]
  41c8af:	test   eax,eax
  41c8b1:	cmovg  ebp,edx
  41c8b4:	add    rdi,rbx
  41c8b7:	sub    rsi,rbx
  41c8ba:	je     0x41c8cf
  41c8bc:	mov    edx,r12d
  41c8bf:	mov    rcx,rdi
  41c8c2:	call   0x427e88
  41c8c7:	movsxd rbx,eax
  41c8ca:	cmp    rbx,rsi
  41c8cd:	jbe    0x41c8a0
  41c8cf:	mov    eax,ebp
  41c8d1:	add    rsp,0x20
  41c8d5:	pop    rbx
  41c8d6:	pop    rsi
  41c8d7:	pop    rdi
  41c8d8:	pop    rbp
  41c8d9:	pop    r12
  41c8db:	ret    
  41c8dc:	nop    DWORD PTR [rax+0x0]
  41c8e0:	push   r15
  41c8e2:	push   r14
  41c8e4:	push   r13
  41c8e6:	push   r12
  41c8e8:	push   rbp
  41c8e9:	push   rdi
  41c8ea:	push   rsi
  41c8eb:	push   rbx
  41c8ec:	sub    rsp,0x38
  41c8f0:	cmp    BYTE PTR [rcx],0x0
  41c8f3:	mov    r14,rcx
  41c8f6:	mov    rbx,rdx
  41c8f9:	mov    ebp,r8d
  41c8fc:	mov    QWORD PTR [rsp+0x98],r9
  41c904:	je     0x41ca6b
  41c90a:	test   rdx,rdx
  41c90d:	je     0x41ca6b
  41c913:	xor    edi,edi
  41c915:	mov    DWORD PTR [rsp+0x2c],0x1
  41c91d:	xor    r12d,r12d
  41c920:	xor    esi,esi
  41c922:	jmp    0x41c942
  41c924:	test   eax,eax
  41c926:	js     0x41ca00
  41c92c:	add    esi,eax
  41c92e:	add    edi,r13d
  41c931:	add    r14,r13
  41c934:	sub    rbx,r13
  41c937:	cmp    BYTE PTR [r14],0x0
  41c93b:	je     0x41c9a0
  41c93d:	test   rbx,rbx
  41c940:	je     0x41c9a0
  41c942:	mov    edx,ebp
  41c944:	mov    rcx,r14
  41c947:	call   0x427e88
  41c94c:	movsxd r13,eax
  41c94f:	cmp    r13,rbx
  41c952:	ja     0x41c9a0
  41c954:	mov    edx,ebp
  41c956:	mov    rcx,r14
  41c959:	call   0x427f28
  41c95e:	cmp    r13d,0x1
  41c962:	jne    0x41c924
  41c964:	movzx  edx,BYTE PTR [r14]
  41c968:	cmp    dl,0xa
  41c96b:	je     0x41ca10
  41c971:	cmp    dl,0xd
  41c974:	je     0x41ca30
  41c97a:	cmp    dl,0x9
  41c97d:	je     0x41ca40
  41c983:	test   eax,eax
  41c985:	js     0x41ca60
  41c98b:	add    r14,r13
  41c98e:	add    esi,eax
  41c990:	add    edi,0x1
  41c993:	sub    rbx,r13
  41c996:	cmp    BYTE PTR [r14],0x0
  41c99a:	jne    0x41c93d
  41c99c:	nop    DWORD PTR [rax+0x0]
  41c9a0:	cmp    r12d,esi
  41c9a3:	cmovge esi,r12d
  41c9a7:	add    edi,0x1
  41c9aa:	cmp    QWORD PTR [rsp+0x98],0x0
  41c9b3:	je     0x41c9bf
  41c9b5:	mov    rax,QWORD PTR [rsp+0x98]
  41c9bd:	mov    DWORD PTR [rax],esi
  41c9bf:	cmp    QWORD PTR [rsp+0xa0],0x0
  41c9c8:	je     0x41c9d8
  41c9ca:	mov    rax,QWORD PTR [rsp+0xa0]
  41c9d2:	mov    esi,DWORD PTR [rsp+0x2c]
  41c9d6:	mov    DWORD PTR [rax],esi
  41c9d8:	cmp    QWORD PTR [rsp+0xa8],0x0
  41c9e1:	je     0x41c9ed
  41c9e3:	mov    rax,QWORD PTR [rsp+0xa8]
  41c9eb:	mov    DWORD PTR [rax],edi
  41c9ed:	add    rsp,0x38
  41c9f1:	pop    rbx
  41c9f2:	pop    rsi
  41c9f3:	pop    rdi
  41c9f4:	pop    rbp
  41c9f5:	pop    r12
  41c9f7:	pop    r13
  41c9f9:	pop    r14
  41c9fb:	pop    r15
  41c9fd:	ret    
  41c9fe:	xchg   ax,ax
  41ca00:	add    esi,0x6
  41ca03:	add    edi,0x6
  41ca06:	jmp    0x41c931
  41ca0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca10:	cmp    r12d,esi
  41ca13:	cmovl  r12d,esi
  41ca17:	add    DWORD PTR [rsp+0x2c],0x1
  41ca1c:	add    edi,0x1
  41ca1f:	xor    esi,esi
  41ca21:	jmp    0x41c931
  41ca26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca30:	add    esi,0x2
  41ca33:	add    edi,0x2
  41ca36:	jmp    0x41c931
  41ca3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca40:	mov    eax,esi
  41ca42:	add    eax,0x1
  41ca45:	lea    edx,[rdi+rax*1]
  41ca48:	sub    edx,esi
  41ca4a:	test   al,0x7
  41ca4c:	jne    0x41ca42
  41ca4e:	mov    edi,edx
  41ca50:	mov    esi,eax
  41ca52:	jmp    0x41c931
  41ca57:	nop    WORD PTR [rax+rax*1+0x0]
  41ca60:	add    esi,0x4
  41ca63:	add    edi,0x4
  41ca66:	jmp    0x41c931
  41ca6b:	mov    edi,0x1
  41ca70:	mov    DWORD PTR [rsp+0x2c],0x1
  41ca78:	xor    esi,esi
  41ca7a:	jmp    0x41c9aa
  41ca7f:	nop
  41ca80:	push   r15
  41ca82:	push   r14
  41ca84:	push   r13
  41ca86:	push   r12
  41ca88:	push   rbp
  41ca89:	push   rdi
  41ca8a:	push   rsi
  41ca8b:	push   rbx
  41ca8c:	sub    rsp,0x28
  41ca90:	xor    edi,edi
  41ca92:	cmp    BYTE PTR [rcx],0x0
  41ca95:	mov    r15,QWORD PTR [r9]
  41ca98:	mov    rbx,rcx
  41ca9b:	mov    rsi,rdx
  41ca9e:	mov    ebp,r8d
  41caa1:	mov    r12,r9
  41caa4:	je     0x41cb18
  41caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cab0:	test   rsi,rsi
  41cab3:	je     0x41cb18
  41cab5:	mov    edx,ebp
  41cab7:	mov    rcx,rbx
  41caba:	call   0x427e88
  41cabf:	movsxd r13,eax
  41cac2:	cmp    r13,rsi
  41cac5:	mov    r14,r13
  41cac8:	ja     0x41cb18
  41caca:	mov    edx,ebp
  41cacc:	mov    rcx,rbx
  41cacf:	call   0x427f28
  41cad4:	cmp    r13d,0x1
  41cad8:	je     0x41cb50
  41cada:	test   eax,eax
  41cadc:	js     0x41cba0
  41cae2:	xor    r10d,r10d
  41cae5:	test   r13d,r13d
  41cae8:	jle    0x41cb0b
  41caea:	nop    WORD PTR [rax+rax*1+0x0]
  41caf0:	movzx  r11d,BYTE PTR [rbx+r10*1]
  41caf5:	mov    BYTE PTR [r15+r10*1],r11b
  41caf9:	add    r10,0x1
  41cafd:	cmp    r14d,r10d
  41cb00:	jg     0x41caf0
  41cb02:	lea    edx,[r14-0x1]
  41cb06:	lea    r15,[r15+rdx*1+0x1]
  41cb0b:	add    edi,eax
  41cb0d:	add    rbx,r13
  41cb10:	sub    rsi,r13
  41cb13:	cmp    BYTE PTR [rbx],0x0
  41cb16:	jne    0x41cab0
  41cb18:	mov    eax,DWORD PTR [rsp+0x90]
  41cb1f:	mov    DWORD PTR [r12+0x8],edi
  41cb24:	mov    BYTE PTR [r15],0x0
  41cb28:	test   eax,eax
  41cb2a:	jle    0x41cce1
  41cb30:	mov    QWORD PTR [r12+0x10],0x0
  41cb39:	add    rsp,0x28
  41cb3d:	pop    rbx
  41cb3e:	pop    rsi
  41cb3f:	pop    rdi
  41cb40:	pop    rbp
  41cb41:	pop    r12
  41cb43:	pop    r13
  41cb45:	pop    r14
  41cb47:	pop    r15
  41cb49:	ret    
  41cb4a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb50:	movzx  r8d,BYTE PTR [rbx]
  41cb54:	cmp    r8b,0xa
  41cb58:	je     0x41cbc4
  41cb5a:	cmp    r8b,0xd
  41cb5e:	je     0x41cbff
  41cb64:	cmp    r8b,0x9
  41cb68:	je     0x41cb80
  41cb6a:	test   eax,eax
  41cb6c:	js     0x41cc35
  41cb72:	mov    BYTE PTR [r15],r8b
  41cb75:	add    edi,eax
  41cb77:	add    r15,0x1
  41cb7b:	jmp    0x41cb0d
  41cb7d:	nop    DWORD PTR [rax]
  41cb80:	add    edi,0x1
  41cb83:	add    r15,0x1
  41cb87:	mov    BYTE PTR [r15-0x1],0x20
  41cb8c:	test   dil,0x7
  41cb90:	jne    0x41cb80
  41cb92:	jmp    0x41cb0d
  41cb97:	nop    WORD PTR [rax+rax*1+0x0]
  41cba0:	call   0x41c850
  41cba5:	cmp    eax,ebp
  41cba7:	je     0x41cc19
  41cba9:	lea    rdx,[rip+0x29b33]        # 0x4466e3
  41cbb0:	mov    rcx,r15
  41cbb3:	call   0x426260
  41cbb8:	add    r15,0x6
  41cbbc:	add    edi,0x6
  41cbbf:	jmp    0x41cb0d
  41cbc4:	sub    DWORD PTR [rsp+0x90],0x1
  41cbcc:	mov    BYTE PTR [r15],0x0
  41cbd0:	lea    rax,[r15+0x1]
  41cbd4:	mov    ecx,DWORD PTR [rsp+0x90]
  41cbdb:	mov    DWORD PTR [r12+0x8],edi
  41cbe0:	lea    rdx,[r12+0x10]
  41cbe5:	test   ecx,ecx
  41cbe7:	jle    0x41cce1
  41cbed:	mov    QWORD PTR [r12+0x10],rax
  41cbf2:	mov    r15,rax
  41cbf5:	mov    r12,rdx
  41cbf8:	xor    edi,edi
  41cbfa:	jmp    0x41cb0d
  41cbff:	mov    edx,0x725c
  41cc04:	mov    BYTE PTR [r15+0x2],0x0
  41cc09:	add    edi,0x2
  41cc0c:	mov    WORD PTR [r15],dx
  41cc10:	add    r15,0x2
  41cc14:	jmp    0x41cb0d
  41cc19:	movzx  eax,BYTE PTR [rbx]
  41cc1c:	test   al,al
  41cc1e:	movzx  r8d,al
  41cc22:	js     0x41cc50
  41cc24:	lea    rdx,[rip+0x29ab1]        # 0x4466dc
  41cc2b:	mov    rcx,r15
  41cc2e:	call   0x426260
  41cc33:	jmp    0x41cbb8
  41cc35:	lea    rdx,[rip+0x29a99]        # 0x4466d5
  41cc3c:	mov    rcx,r15
  41cc3f:	add    edi,0x4
  41cc42:	add    r15,0x4
  41cc46:	call   0x426260
  41cc4b:	jmp    0x41cb0d
  41cc50:	mov    edx,eax
  41cc52:	and    edx,0xffffffe0
  41cc55:	cmp    dl,0xc0
  41cc58:	je     0x41cca1
  41cc5a:	mov    edx,eax
  41cc5c:	and    edx,0xfffffff0
  41cc5f:	cmp    dl,0xe0
  41cc62:	je     0x41ccb8
  41cc64:	mov    edx,eax
  41cc66:	mov    r8d,0xffffffff
  41cc6c:	and    edx,0xfffffff8
  41cc6f:	cmp    dl,0xf0
  41cc72:	jne    0x41cc24
  41cc74:	movzx  edx,BYTE PTR [rbx+0x1]
  41cc78:	movzx  r8d,BYTE PTR [rbx+0x3]
  41cc7d:	and    eax,0x7
  41cc80:	shl    eax,0x12
  41cc83:	and    edx,0x3f
  41cc86:	and    r8d,0x3f
  41cc8a:	shl    edx,0xc
  41cc8d:	or     eax,edx
  41cc8f:	or     r8d,eax
  41cc92:	movzx  eax,BYTE PTR [rbx+0x2]
  41cc96:	and    eax,0x3f
  41cc99:	shl    eax,0x6
  41cc9c:	or     r8d,eax
  41cc9f:	jmp    0x41cc24
  41cca1:	movzx  r8d,BYTE PTR [rbx+0x1]
  41cca6:	and    eax,0x1f
  41cca9:	shl    eax,0x6
  41ccac:	and    r8d,0x3f
  41ccb0:	or     r8d,eax
  41ccb3:	jmp    0x41cc24
  41ccb8:	movzx  r8d,BYTE PTR [rbx+0x1]
  41ccbd:	movzx  edx,BYTE PTR [rbx+0x2]
  41ccc1:	shl    eax,0xc
  41ccc4:	and    eax,0xf000
  41ccc9:	and    r8d,0x3f
  41cccd:	and    edx,0x3f
  41ccd0:	shl    r8d,0x6
  41ccd4:	or     eax,r8d
  41ccd7:	or     eax,edx
  41ccd9:	mov    r8d,eax
  41ccdc:	jmp    0x41cc24
  41cce1:	mov    ecx,0x1
  41cce6:	call   0x42a540
  41cceb:	nop
  41ccec:	nop    DWORD PTR [rax+0x0]
  41ccf0:	push   rsi
  41ccf1:	push   rbx
  41ccf2:	sub    rsp,0x28
  41ccf6:	mov    ebx,edx
  41ccf8:	mov    rsi,rcx
  41ccfb:	call   0x41c850
  41cd00:	cmp    eax,ebx
  41cd02:	je     0x41cd10
  41cd04:	mov    rax,rsi
  41cd07:	add    rsp,0x28
  41cd0b:	pop    rbx
  41cd0c:	pop    rsi
  41cd0d:	ret    
  41cd0e:	xchg   ax,ax
  41cd10:	movzx  r9d,BYTE PTR [rsi]
  41cd14:	mov    r10,rsi
  41cd17:	mov    rdx,rsi
  41cd1a:	test   r9b,r9b
  41cd1d:	je     0x41cd6b
  41cd1f:	mov    r11d,0x1
  41cd25:	js     0x41cd80
  41cd27:	cmp    rdx,r10
  41cd2a:	je     0x41ce40
  41cd30:	mov    r8,r10
  41cd33:	mov    rbx,rdx
  41cd36:	jmp    0x41cd47
  41cd38:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd40:	movzx  r9d,BYTE PTR [rdx]
  41cd44:	mov    rbx,rdx
  41cd47:	add    r8,0x1
  41cd4b:	mov    BYTE PTR [r8-0x1],r9b
  41cd4f:	add    rdx,0x1
  41cd53:	mov    r9d,r8d
  41cd56:	sub    r9d,r10d
  41cd59:	cmp    r9d,r11d
  41cd5c:	jl     0x41cd40
  41cd5e:	movzx  r9d,BYTE PTR [rbx+0x1]
  41cd63:	mov    r10,r8
  41cd66:	test   r9b,r9b
  41cd69:	jne    0x41cd1f
  41cd6b:	cmp    r10,rdx
  41cd6e:	je     0x41cd04
  41cd70:	mov    rax,rsi
  41cd73:	mov    BYTE PTR [r10],0x0
  41cd77:	add    rsp,0x28
  41cd7b:	pop    rbx
  41cd7c:	pop    rsi
  41cd7d:	ret    
  41cd7e:	xchg   ax,ax
  41cd80:	mov    eax,r9d
  41cd83:	and    eax,0xffffffe0
  41cd86:	cmp    al,0xc0
  41cd88:	je     0x41ce50
  41cd8e:	mov    eax,r9d
  41cd91:	and    eax,0xfffffff0
  41cd94:	cmp    al,0xe0
  41cd96:	je     0x41ce74
  41cd9c:	mov    eax,r9d
  41cd9f:	and    eax,0xfffffff8
  41cda2:	cmp    al,0xf0
  41cda4:	jne    0x41cf00
  41cdaa:	movzx  r8d,BYTE PTR [rdx+0x1]
  41cdaf:	mov    ecx,r9d
  41cdb2:	and    ecx,0x7
  41cdb5:	mov    eax,r8d
  41cdb8:	and    eax,0x30
  41cdbb:	sar    eax,0x4
  41cdbe:	mov    r11d,eax
  41cdc1:	lea    eax,[rcx*4+0x0]
  41cdc8:	mov    ecx,r8d
  41cdcb:	and    ecx,0xffffffc0
  41cdce:	or     eax,r11d
  41cdd1:	cmp    cl,0x80
  41cdd4:	jne    0x41ce30
  41cdd6:	sub    eax,0x1
  41cdd9:	cmp    eax,0xf
  41cddc:	ja     0x41ce30
  41cdde:	movzx  eax,BYTE PTR [rdx+0x2]
  41cde2:	mov    ecx,eax
  41cde4:	and    ecx,0xffffffc0
  41cde7:	cmp    cl,0x80
  41cdea:	jne    0x41ce30
  41cdec:	movzx  ecx,BYTE PTR [rdx+0x3]
  41cdf0:	mov    r11d,ecx
  41cdf3:	and    r11d,0xffffffc0
  41cdf7:	cmp    r11b,0x80
  41cdfb:	jne    0x41ce30
  41cdfd:	mov    ebx,r8d
  41ce00:	mov    r11d,0x4
  41ce06:	and    ebx,0xf
  41ce09:	cmp    bl,0xf
  41ce0c:	jne    0x41cd27
  41ce12:	and    eax,0x3f
  41ce15:	cmp    al,0x3f
  41ce17:	jne    0x41cd27
  41ce1d:	and    ecx,0x3e
  41ce20:	cmp    cl,0x3e
  41ce23:	jne    0x41cd27
  41ce29:	nop    DWORD PTR [rax+0x0]
  41ce30:	mov    r9d,r8d
  41ce33:	add    rdx,0x1
  41ce37:	jmp    0x41cd1a
  41ce3c:	nop    DWORD PTR [rax+0x0]
  41ce40:	add    rdx,r11
  41ce43:	add    r10,r11
  41ce46:	movzx  r9d,BYTE PTR [rdx]
  41ce4a:	jmp    0x41cd1a
  41ce4f:	nop
  41ce50:	movzx  r8d,BYTE PTR [rdx+0x1]
  41ce55:	mov    eax,r8d
  41ce58:	and    eax,0xffffffc0
  41ce5b:	cmp    al,0x80
  41ce5d:	jne    0x41ce30
  41ce5f:	mov    eax,r9d
  41ce62:	and    eax,0x1f
  41ce65:	cmp    al,0x1
  41ce67:	jbe    0x41ce30
  41ce69:	mov    r11d,0x2
  41ce6f:	jmp    0x41cd27
  41ce74:	movzx  r8d,BYTE PTR [rdx+0x1]
  41ce79:	mov    eax,r8d
  41ce7c:	and    eax,0xffffffc0
  41ce7f:	cmp    al,0x80
  41ce81:	jne    0x41ce30
  41ce83:	mov    ebx,r9d
  41ce86:	and    ebx,0xf
  41ce89:	jne    0x41ceb0
  41ce8b:	test   r8b,0x20
  41ce8f:	je     0x41ce30
  41ce91:	movzx  eax,BYTE PTR [rdx+0x2]
  41ce95:	mov    r11d,0x3
  41ce9b:	and    eax,0xffffffc0
  41ce9e:	cmp    al,0x80
  41cea0:	je     0x41cd27
  41cea6:	jmp    0x41ce30
  41cea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ceb0:	movzx  eax,BYTE PTR [rdx+0x2]
  41ceb4:	and    eax,0xffffffc0
  41ceb7:	cmp    al,0x80
  41ceb9:	jne    0x41ce30
  41cebf:	mov    eax,r8d
  41cec2:	and    eax,0x3f
  41cec5:	shl    eax,0x6
  41cec8:	mov    ecx,eax
  41ceca:	mov    eax,r9d
  41cecd:	and    eax,0x3f
  41ced0:	or     eax,ecx
  41ced2:	cmp    bl,0xf
  41ced5:	je     0x41cf0a
  41ced7:	cmp    bl,0xd
  41ceda:	mov    r11d,0x3
  41cee0:	jne    0x41cd27
  41cee6:	and    eax,0xb00
  41ceeb:	cmp    eax,0x800
  41cef0:	jne    0x41cd27
  41cef6:	jmp    0x41ce30
  41cefb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf00:	movzx  r9d,BYTE PTR [rdx+0x1]
  41cf05:	jmp    0x41ce33
  41cf0a:	mov    ecx,eax
  41cf0c:	mov    r11d,0x3
  41cf12:	and    ecx,0xf80
  41cf18:	cmp    ecx,0xd80
  41cf1e:	jne    0x41cd27
  41cf24:	and    eax,0x7f
  41cf27:	sub    eax,0x30
  41cf2a:	cmp    eax,0x1f
  41cf2d:	ja     0x41cd27
  41cf33:	jmp    0x41ce30
  41cf38:	nop
  41cf39:	nop
  41cf3a:	nop
  41cf3b:	nop
  41cf3c:	nop
  41cf3d:	nop
  41cf3e:	nop
  41cf3f:	nop
  41cf40:	sub    rsp,0x28
  41cf44:	mov    rcx,QWORD PTR [rip+0x3d3fd]        # 0x45a348
  41cf4b:	test   rcx,rcx
  41cf4e:	je     0x41cf61
  41cf50:	call   0x427d68
  41cf55:	mov    rax,QWORD PTR [rip+0x3d3ec]        # 0x45a348
  41cf5c:	add    rsp,0x28
  41cf60:	ret    
  41cf61:	call   0x427dc0
  41cf66:	mov    QWORD PTR [rip+0x3d3db],rax        # 0x45a348
  41cf6d:	add    rsp,0x28
  41cf71:	ret    
  41cf72:	nop    DWORD PTR [rax+0x0]
  41cf76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf80:	push   rdi
  41cf81:	push   rsi
  41cf82:	push   rbx
  41cf83:	sub    rsp,0x20
  41cf87:	mov    rbx,rdx
  41cf8a:	mov    rsi,rcx
  41cf8d:	call   0x427d68
  41cf92:	movzx  r8d,BYTE PTR [rbx]
  41cf96:	cmp    r8b,0x3d
  41cf9a:	je     0x41cfc5
  41cf9c:	test   r8b,r8b
  41cf9f:	je     0x41cfc5
  41cfa1:	cmp    r8b,0x22
  41cfa5:	je     0x41cfd0
  41cfa7:	movsx  edx,r8b
  41cfab:	mov    rcx,rsi
  41cfae:	lea    rdi,[rbx+0x1]
  41cfb2:	call   0x427dd0
  41cfb7:	movzx  r8d,BYTE PTR [rbx+0x1]
  41cfbc:	mov    rbx,rdi
  41cfbf:	cmp    r8b,0x3d
  41cfc3:	jne    0x41cf9c
  41cfc5:	mov    rax,rbx
  41cfc8:	add    rsp,0x20
  41cfcc:	pop    rbx
  41cfcd:	pop    rsi
  41cfce:	pop    rdi
  41cfcf:	ret    
  41cfd0:	add    rbx,0x1
  41cfd4:	jmp    0x41cff5
  41cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfe0:	test   r8b,r8b
  41cfe3:	je     0x41cfc5
  41cfe5:	movsx  edx,r8b
  41cfe9:	mov    rcx,rsi
  41cfec:	add    rbx,0x1
  41cff0:	call   0x427dd0
  41cff5:	movzx  r8d,BYTE PTR [rbx]
  41cff9:	cmp    r8b,0x22
  41cffd:	jne    0x41cfe0
  41cfff:	movzx  r8d,BYTE PTR [rbx+0x1]
  41d004:	add    rbx,0x1
  41d008:	cmp    r8b,0x22
  41d00c:	je     0x41cfe5
  41d00e:	jmp    0x41cf96
  41d010:	push   rdi
  41d011:	push   rsi
  41d012:	push   rbx
  41d013:	sub    rsp,0x20
  41d017:	cmp    QWORD PTR [rcx+0x8],0x0
  41d01c:	mov    rbx,rcx
  41d01f:	mov    rdi,rdx
  41d022:	mov    rsi,r8
  41d025:	jne    0x41d050
  41d027:	mov    rdx,rdi
  41d02a:	mov    rcx,rbx
  41d02d:	call   0x427dc8
  41d032:	test   rsi,rsi
  41d035:	je     0x41d06a
  41d037:	lea    rdx,[rip+0x296b2]        # 0x4466f0
  41d03e:	mov    r8,rsi
  41d041:	mov    rcx,rbx
  41d044:	add    rsp,0x20
  41d048:	pop    rbx
  41d049:	pop    rsi
  41d04a:	pop    rdi
  41d04b:	jmp    0x427dd8
  41d050:	mov    edx,0x2c
  41d055:	call   0x427dd0
  41d05a:	mov    rdx,rdi
  41d05d:	mov    rcx,rbx
  41d060:	call   0x427dc8
  41d065:	test   rsi,rsi
  41d068:	jne    0x41d037
  41d06a:	add    rsp,0x20
  41d06e:	pop    rbx
  41d06f:	pop    rsi
  41d070:	pop    rdi
  41d071:	ret    
  41d072:	nop    DWORD PTR [rax+0x0]
  41d076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d080:	push   rsi
  41d081:	push   rbx
  41d082:	sub    rsp,0x28
  41d086:	mov    rbx,rcx
  41d089:	call   QWORD PTR [rip+0xf451]        # 0x42c4e0
  41d08f:	mov    rsi,rax
  41d092:	mov    eax,DWORD PTR [rip+0x3d2a8]        # 0x45a340
  41d098:	test   eax,eax
  41d09a:	jne    0x41d0ab
  41d09c:	movzx  edx,BYTE PTR [rbx]
  41d09f:	lea    eax,[rdx-0x61]
  41d0a2:	cmp    al,0x19
  41d0a4:	jbe    0x41d110
  41d0a6:	cmp    dl,0x5f
  41d0a9:	je     0x41d110
  41d0ab:	mov    edx,0x22
  41d0b0:	mov    rcx,rsi
  41d0b3:	call   0x427dd0
  41d0b8:	movzx  edx,BYTE PTR [rbx]
  41d0bb:	test   dl,dl
  41d0bd:	jne    0x41d0d7
  41d0bf:	jmp    0x41d0f0
  41d0c1:	movsx  edx,BYTE PTR [rbx]
  41d0c4:	mov    rcx,rsi
  41d0c7:	add    rbx,0x1
  41d0cb:	call   0x427dd0
  41d0d0:	movzx  edx,BYTE PTR [rbx]
  41d0d3:	test   dl,dl
  41d0d5:	je     0x41d0f0
  41d0d7:	cmp    dl,0x22
  41d0da:	jne    0x41d0c1
  41d0dc:	mov    edx,0x22
  41d0e1:	mov    rcx,rsi
  41d0e4:	call   0x427dd0
  41d0e9:	jmp    0x41d0c1
  41d0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0f0:	mov    edx,0x22
  41d0f5:	mov    rcx,rsi
  41d0f8:	call   0x427dd0
  41d0fd:	mov    rax,QWORD PTR [rsi]
  41d100:	add    rsp,0x28
  41d104:	pop    rbx
  41d105:	pop    rsi
  41d106:	ret    
  41d107:	nop    WORD PTR [rax+rax*1+0x0]
  41d110:	test   dl,dl
  41d112:	je     0x41d146
  41d114:	mov    r8,rbx
  41d117:	nop    WORD PTR [rax+rax*1+0x0]
  41d120:	lea    r9d,[rdx-0x61]
  41d124:	cmp    r9b,0x19
  41d128:	jbe    0x41d13a
  41d12a:	lea    eax,[rdx-0x30]
  41d12d:	cmp    al,0x9
  41d12f:	jbe    0x41d13a
  41d131:	cmp    dl,0x5f
  41d134:	jne    0x41d0ab
  41d13a:	add    r8,0x1
  41d13e:	movzx  edx,BYTE PTR [r8]
  41d142:	test   dl,dl
  41d144:	jne    0x41d120
  41d146:	mov    rax,QWORD PTR [rip+0x37513]        # 0x454660
  41d14d:	mov    rdx,QWORD PTR [rip+0x374ec]        # 0x454640
  41d154:	mov    rcx,rbx
  41d157:	mov    r8d,DWORD PTR [rax]
  41d15a:	call   0x41ef60
  41d15f:	test   rax,rax
  41d162:	je     0x41d16f
  41d164:	cmp    WORD PTR [rax+0xa],0x0
  41d169:	jne    0x41d0ab
  41d16f:	mov    rdx,rbx
  41d172:	mov    rcx,rsi
  41d175:	call   0x427dc8
  41d17a:	mov    rax,QWORD PTR [rsi]
  41d17d:	add    rsp,0x28
  41d181:	pop    rbx
  41d182:	pop    rsi
  41d183:	ret    
  41d184:	xchg   ax,ax
  41d186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d190:	push   rbp
  41d191:	push   rdi
  41d192:	push   rsi
  41d193:	push   rbx
  41d194:	sub    rsp,0x28
  41d198:	mov    ebp,ecx
  41d19a:	mov    rsi,rdx
  41d19d:	mov    rdi,r8
  41d1a0:	call   0x427dc0
  41d1a5:	cmp    ebp,0x1129b
  41d1ab:	mov    rbx,rax
  41d1ae:	jle    0x41d1ba
  41d1b0:	test   rsi,rsi
  41d1b3:	je     0x41d1ba
  41d1b5:	cmp    BYTE PTR [rsi],0x0
  41d1b8:	jne    0x41d1f5
  41d1ba:	mov    rcx,rdi
  41d1bd:	call   0x41d080
  41d1c2:	mov    rcx,rbx
  41d1c5:	mov    rdx,rax
  41d1c8:	call   0x427dc8
  41d1cd:	call   QWORD PTR [rip+0xf30d]        # 0x42c4e0
  41d1d3:	mov    rdx,QWORD PTR [rbx]
  41d1d6:	mov    rcx,rax
  41d1d9:	mov    rsi,rax
  41d1dc:	call   0x427dc8
  41d1e1:	mov    rcx,rbx
  41d1e4:	call   0x427db8
  41d1e9:	mov    rax,QWORD PTR [rsi]
  41d1ec:	add    rsp,0x28
  41d1f0:	pop    rbx
  41d1f1:	pop    rsi
  41d1f2:	pop    rdi
  41d1f3:	pop    rbp
  41d1f4:	ret    
  41d1f5:	mov    rcx,rsi
  41d1f8:	call   0x41d080
  41d1fd:	lea    rdx,[rip+0x294f1]        # 0x4466f5
  41d204:	mov    r8,rax
  41d207:	mov    rcx,rbx
  41d20a:	call   0x427dd8
  41d20f:	jmp    0x41d1ba
  41d211:	nop    DWORD PTR [rax+rax*1+0x0]
  41d216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d220:	push   r12
  41d222:	push   rbp
  41d223:	push   rdi
  41d224:	push   rsi
  41d225:	push   rbx
  41d226:	sub    rsp,0x20
  41d22a:	mov    rbp,rcx
  41d22d:	mov    rcx,rdx
  41d230:	mov    rbx,rdx
  41d233:	mov    edi,r8d
  41d236:	mov    r12d,r9d
  41d239:	call   0x42a400
  41d23e:	lea    rdx,[rax+rax*1+0x2]
  41d243:	mov    rcx,rbp
  41d246:	call   0x427db0
  41d24b:	test   eax,eax
  41d24d:	je     0x41d313
  41d253:	mov    rax,QWORD PTR [rbp+0x8]
  41d257:	add    rax,QWORD PTR [rbp+0x0]
  41d25b:	lea    rsi,[rax+0x1]
  41d25f:	mov    BYTE PTR [rax],0x27
  41d262:	jmp    0x41d27a
  41d264:	test   r12b,r12b
  41d267:	jne    0x41d28b
  41d269:	lea    r10,[rsi+0x1]
  41d26d:	mov    BYTE PTR [rsi],al
  41d26f:	lea    rsi,[r10+0x1]
  41d273:	mov    BYTE PTR [r10],al
  41d276:	add    rbx,0x1
  41d27a:	movzx  eax,BYTE PTR [rbx]
  41d27d:	test   al,al
  41d27f:	je     0x41d300
  41d281:	js     0x41d290
  41d283:	cmp    al,0x27
  41d285:	je     0x41d269
  41d287:	cmp    al,0x5c
  41d289:	je     0x41d264
  41d28b:	mov    r10,rsi
  41d28e:	jmp    0x41d26f
  41d290:	mov    edx,edi
  41d292:	mov    rcx,rbx
  41d295:	call   0x427e88
  41d29a:	test   eax,eax
  41d29c:	jle    0x41d27a
  41d29e:	movzx  r11d,BYTE PTR [rbx]
  41d2a2:	test   r11b,r11b
  41d2a5:	je     0x41d31e
  41d2a7:	xor    r10d,r10d
  41d2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41d2b0:	add    r10d,0x1
  41d2b4:	add    rsi,0x1
  41d2b8:	add    rbx,0x1
  41d2bc:	cmp    r10d,eax
  41d2bf:	mov    BYTE PTR [rsi-0x1],r11b
  41d2c3:	je     0x41d27a
  41d2c5:	movzx  r11d,BYTE PTR [rbx]
  41d2c9:	test   r11b,r11b
  41d2cc:	jne    0x41d2b0
  41d2ce:	mov    rdx,QWORD PTR [rbp+0x10]
  41d2d2:	mov    rcx,QWORD PTR [rbp+0x0]
  41d2d6:	cmp    eax,r10d
  41d2d9:	lea    rdx,[rcx+rdx*1-0x2]
  41d2de:	jle    0x41d300
  41d2e0:	cmp    rdx,rsi
  41d2e3:	jbe    0x41d300
  41d2e5:	add    r10d,0x1
  41d2e9:	add    rsi,0x1
  41d2ed:	mov    BYTE PTR [rsi-0x1],0x20
  41d2f1:	cmp    eax,r10d
  41d2f4:	jg     0x41d2e0
  41d2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d300:	mov    BYTE PTR [rsi],0x27
  41d303:	mov    BYTE PTR [rsi+0x1],0x0
  41d307:	add    rsi,0x1
  41d30b:	sub    rsi,QWORD PTR [rbp+0x0]
  41d30f:	mov    QWORD PTR [rbp+0x8],rsi
  41d313:	add    rsp,0x20
  41d317:	pop    rbx
  41d318:	pop    rsi
  41d319:	pop    rdi
  41d31a:	pop    rbp
  41d31b:	pop    r12
  41d31d:	ret    
  41d31e:	xor    r10d,r10d
  41d321:	jmp    0x41d2ce
  41d323:	nop    DWORD PTR [rax]
  41d326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d330:	push   rbp
  41d331:	push   rdi
  41d332:	push   rsi
  41d333:	push   rbx
  41d334:	sub    rsp,0x38
  41d338:	mov    rsi,rdx
  41d33b:	mov    rbx,rcx
  41d33e:	mov    rcx,rdx
  41d341:	mov    rdi,r8
  41d344:	call   0x42a400
  41d349:	mov    edx,0x5c
  41d34e:	mov    rcx,rsi
  41d351:	mov    rbp,rax
  41d354:	call   0x42a428
  41d359:	test   rax,rax
  41d35c:	je     0x41d3c0
  41d35e:	mov    rcx,rdi
  41d361:	call   0x427e18
  41d366:	cmp    eax,0x138e3
  41d36b:	jle    0x41d3c0
  41d36d:	mov    rax,QWORD PTR [rbx+0x8]
  41d371:	test   rax,rax
  41d374:	je     0x41d38d
  41d376:	mov    rdx,QWORD PTR [rbx]
  41d379:	cmp    BYTE PTR [rdx+rax*1-0x1],0x20
  41d37e:	je     0x41d38d
  41d380:	mov    edx,0x20
  41d385:	mov    rcx,rbx
  41d388:	call   0x427dd0
  41d38d:	mov    edx,0x45
  41d392:	mov    rcx,rbx
  41d395:	call   0x427dd0
  41d39a:	mov    rcx,rdi
  41d39d:	call   0x427f60
  41d3a2:	xor    r9d,r9d
  41d3a5:	mov    r8d,eax
  41d3a8:	mov    rdx,rsi
  41d3ab:	mov    rcx,rbx
  41d3ae:	add    rsp,0x38
  41d3b2:	pop    rbx
  41d3b3:	pop    rsi
  41d3b4:	pop    rdi
  41d3b5:	pop    rbp
  41d3b6:	jmp    0x41d220
  41d3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3c0:	lea    rdx,[rbp+rbp*1+0x2]
  41d3c5:	mov    rcx,rbx
  41d3c8:	call   0x427db0
  41d3cd:	test   eax,eax
  41d3cf:	jne    0x41d3e0
  41d3d1:	add    rsp,0x38
  41d3d5:	pop    rbx
  41d3d6:	pop    rsi
  41d3d7:	pop    rdi
  41d3d8:	pop    rbp
  41d3d9:	ret    
  41d3da:	nop    WORD PTR [rax+rax*1+0x0]
  41d3e0:	mov    rcx,rbx
  41d3e3:	mov    edx,0x27
  41d3e8:	call   0x427dd0
  41d3ed:	mov    rdx,QWORD PTR [rbx+0x8]
  41d3f1:	add    rdx,QWORD PTR [rbx]
  41d3f4:	mov    rcx,rdi
  41d3f7:	mov    QWORD PTR [rsp+0x20],0x0
  41d400:	mov    r9,rbp
  41d403:	mov    r8,rsi
  41d406:	call   0x427ef8
  41d40b:	add    QWORD PTR [rbx+0x8],rax
  41d40f:	mov    edx,0x27
  41d414:	mov    rcx,rbx
  41d417:	add    rsp,0x38
  41d41b:	pop    rbx
  41d41c:	pop    rsi
  41d41d:	pop    rdi
  41d41e:	pop    rbp
  41d41f:	jmp    0x427dd0
  41d424:	xchg   ax,ax
  41d426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d430:	push   r12
  41d432:	push   rbp
  41d433:	push   rdi
  41d434:	push   rsi
  41d435:	push   rbx
  41d436:	sub    rsp,0x20
  41d43a:	mov    rbx,r8
  41d43d:	mov    r12,rcx
  41d440:	mov    rbp,rdx
  41d443:	call   0x427dc0
  41d448:	mov    edx,0x24
  41d44d:	mov    rcx,rax
  41d450:	mov    rsi,rax
  41d453:	call   0x427dd0
  41d458:	test   rbx,rbx
  41d45b:	je     0x41d468
  41d45d:	mov    rdx,rbx
  41d460:	mov    rcx,rsi
  41d463:	call   0x427dc8
  41d468:	xor    ebx,ebx
  41d46a:	jmp    0x41d48c
  41d46c:	nop    DWORD PTR [rax+0x0]
  41d470:	lea    rax,[rip+0x2962a]        # 0x446aa1
  41d477:	lea    edi,[rbx+0x1]
  41d47a:	mov    rcx,rsi
  41d47d:	movsx  edx,BYTE PTR [rax+rbx*1]
  41d481:	and    edi,0x7
  41d484:	movsxd rbx,edi
  41d487:	call   0x427dd0
  41d48c:	mov    rdx,QWORD PTR [rsi]
  41d48f:	mov    rcx,rbp
  41d492:	call   0x42a3d8
  41d497:	test   rax,rax
  41d49a:	jne    0x41d470
  41d49c:	mov    rcx,rsi
  41d49f:	mov    edx,0x24
  41d4a4:	call   0x427dd0
  41d4a9:	mov    rdx,QWORD PTR [rsi]
  41d4ac:	mov    rcx,r12
  41d4af:	call   0x427dc8
  41d4b4:	mov    rdx,rbp
  41d4b7:	mov    rcx,r12
  41d4ba:	call   0x427dc8
  41d4bf:	mov    rdx,QWORD PTR [rsi]
  41d4c2:	mov    rcx,r12
  41d4c5:	call   0x427dc8
  41d4ca:	mov    rcx,rsi
  41d4cd:	add    rsp,0x20
  41d4d1:	pop    rbx
  41d4d2:	pop    rsi
  41d4d3:	pop    rdi
  41d4d4:	pop    rbp
  41d4d5:	pop    r12
  41d4d7:	jmp    0x427db8
  41d4dc:	nop    DWORD PTR [rax+0x0]
  41d4e0:	push   r12
  41d4e2:	push   rbp
  41d4e3:	push   rdi
  41d4e4:	push   rsi
  41d4e5:	push   rbx
  41d4e6:	sub    rsp,0x20
  41d4ea:	lea    rdi,[r8+r8*1]
  41d4ee:	mov    rbx,rdx
  41d4f1:	mov    rsi,rcx
  41d4f4:	mov    rbp,r8
  41d4f7:	mov    r12d,r9d
  41d4fa:	lea    rdx,[rdi+0x5]
  41d4fe:	call   0x427db0
  41d503:	test   eax,eax
  41d505:	je     0x41d585
  41d507:	mov    rax,QWORD PTR [rsi+0x8]
  41d50b:	add    rax,QWORD PTR [rsi]
  41d50e:	test   r12b,r12b
  41d511:	mov    BYTE PTR [rax],0x27
  41d514:	lea    rdx,[rax+0x1]
  41d518:	je     0x41d590
  41d51a:	test   rbp,rbp
  41d51d:	mov    BYTE PTR [rdx],0x5c
  41d520:	lea    rcx,[rdx+0x2]
  41d524:	mov    BYTE PTR [rdx+0x1],0x78
  41d528:	je     0x41d573
  41d52a:	lea    r8,[rbx+rbp*1]
  41d52e:	lea    r10,[rip+0x2955b]        # 0x446a90
  41d535:	mov    rdx,rcx
  41d538:	nop    DWORD PTR [rax+rax*1+0x0]
  41d540:	add    rbx,0x1
  41d544:	movzx  eax,BYTE PTR [rbx-0x1]
  41d548:	add    rdx,0x2
  41d54c:	mov    r9d,eax
  41d54f:	and    eax,0xf
  41d552:	shr    r9b,0x4
  41d556:	movzx  eax,BYTE PTR [r10+rax*1]
  41d55b:	and    r9d,0xf
  41d55f:	movzx  r9d,BYTE PTR [r10+r9*1]
  41d564:	mov    BYTE PTR [rdx-0x2],r9b
  41d568:	cmp    rbx,r8
  41d56b:	mov    BYTE PTR [rdx-0x1],al
  41d56e:	jne    0x41d540
  41d570:	add    rcx,rdi
  41d573:	mov    BYTE PTR [rcx],0x27
  41d576:	mov    BYTE PTR [rcx+0x1],0x0
  41d57a:	add    rcx,0x1
  41d57e:	sub    rcx,QWORD PTR [rsi]
  41d581:	mov    QWORD PTR [rsi+0x8],rcx
  41d585:	add    rsp,0x20
  41d589:	pop    rbx
  41d58a:	pop    rsi
  41d58b:	pop    rdi
  41d58c:	pop    rbp
  41d58d:	pop    r12
  41d58f:	ret    
  41d590:	lea    rdx,[rax+0x2]
  41d594:	mov    BYTE PTR [rax+0x1],0x5c
  41d598:	jmp    0x41d51a
  41d59a:	nop    WORD PTR [rax+rax*1+0x0]
  41d5a0:	push   rbp
  41d5a1:	push   rdi
  41d5a2:	push   rsi
  41d5a3:	push   rbx
  41d5a4:	sub    rsp,0x28
  41d5a8:	mov    QWORD PTR [rdx],0x0
  41d5af:	mov    DWORD PTR [r8],0x0
  41d5b6:	mov    rbx,rcx
  41d5b9:	mov    rdi,rdx
  41d5bc:	mov    rsi,r8
  41d5bf:	call   0x42a400
  41d5c4:	cmp    eax,0x1
  41d5c7:	jle    0x41d5ce
  41d5c9:	cmp    BYTE PTR [rbx],0x7b
  41d5cc:	je     0x41d5e0
  41d5ce:	xor    eax,eax
  41d5d0:	add    rsp,0x28
  41d5d4:	pop    rbx
  41d5d5:	pop    rsi
  41d5d6:	pop    rdi
  41d5d7:	pop    rbp
  41d5d8:	ret    
  41d5d9:	nop    DWORD PTR [rax+0x0]
  41d5e0:	cdqe   
  41d5e2:	cmp    BYTE PTR [rbx+rax*1-0x1],0x7d
  41d5e7:	jne    0x41d5ce
  41d5e9:	lea    rbp,[rax*8+0x0]
  41d5f1:	lea    rcx,[rbp+rax*1+0x0]
  41d5f6:	call   0x42a4a0
  41d5fb:	test   rax,rax
  41d5fe:	je     0x41d5ce
  41d600:	mov    QWORD PTR [rdi],rax
  41d603:	movzx  edx,BYTE PTR [rbx+0x1]
  41d607:	lea    r9,[rax+rbp*1]
  41d60b:	lea    r8,[rbx+0x1]
  41d60f:	cmp    dl,0x7d
  41d612:	je     0x41d6db
  41d618:	test   dl,dl
  41d61a:	je     0x41d5ce
  41d61c:	xor    r11d,r11d
  41d61f:	movsxd rcx,r11d
  41d622:	mov    QWORD PTR [rax+rcx*8],r9
  41d626:	jmp    0x41d63f
  41d628:	nop    DWORD PTR [rax+rax*1+0x0]
  41d630:	mov    BYTE PTR [r9],dl
  41d633:	add    r8,0x1
  41d637:	add    r9,0x1
  41d63b:	movzx  edx,BYTE PTR [r8]
  41d63f:	cmp    dl,0x2c
  41d642:	je     0x41d6a6
  41d644:	cmp    dl,0x7d
  41d647:	je     0x41d6a6
  41d649:	test   dl,dl
  41d64b:	je     0x41d5ce
  41d64d:	cmp    dl,0x22
  41d650:	jne    0x41d630
  41d652:	movzx  edx,BYTE PTR [r8+0x1]
  41d657:	lea    rcx,[r8+0x1]
  41d65b:	cmp    dl,0x22
  41d65e:	jne    0x41d67e
  41d660:	jmp    0x41d6a0
  41d662:	movzx  r10d,BYTE PTR [rcx]
  41d666:	mov    rdx,rcx
  41d669:	lea    rcx,[rdx+0x1]
  41d66d:	movzx  edx,BYTE PTR [rdx+0x1]
  41d671:	add    r9,0x1
  41d675:	mov    BYTE PTR [r9-0x1],r10b
  41d679:	cmp    dl,0x22
  41d67c:	je     0x41d6a0
  41d67e:	test   dl,dl
  41d680:	je     0x41d5ce
  41d686:	cmp    dl,0x5c
  41d689:	jne    0x41d662
  41d68b:	movzx  r10d,BYTE PTR [rcx+0x1]
  41d690:	lea    rdx,[rcx+0x1]
  41d694:	test   r10b,r10b
  41d697:	jne    0x41d669
  41d699:	jmp    0x41d5ce
  41d69e:	xchg   ax,ax
  41d6a0:	lea    r8,[rcx+0x1]
  41d6a4:	jmp    0x41d63b
  41d6a6:	mov    rcx,r9
  41d6a9:	add    r9,0x1
  41d6ad:	cmp    dl,0x2c
  41d6b0:	mov    r10,r8
  41d6b3:	mov    BYTE PTR [rcx],0x0
  41d6b6:	je     0x41d6d0
  41d6b8:	add    r11d,0x1
  41d6bc:	cmp    dl,0x7d
  41d6bf:	je     0x41d6de
  41d6c1:	test   dl,dl
  41d6c3:	jne    0x41d61f
  41d6c9:	jmp    0x41d5ce
  41d6ce:	xchg   ax,ax
  41d6d0:	add    r8,0x1
  41d6d4:	movzx  edx,BYTE PTR [r10+0x1]
  41d6d9:	jmp    0x41d6b8
  41d6db:	xor    r11d,r11d
  41d6de:	cmp    BYTE PTR [r8+0x1],0x0
  41d6e3:	jne    0x41d5ce
  41d6e9:	mov    DWORD PTR [rsi],r11d
  41d6ec:	mov    eax,0x1
  41d6f1:	jmp    0x41d5d0
  41d6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d700:	push   r15
  41d702:	push   r14
  41d704:	push   r13
  41d706:	push   r12
  41d708:	push   rbp
  41d709:	push   rdi
  41d70a:	push   rsi
  41d70b:	push   rbx
  41d70c:	sub    rsp,0x88
  41d713:	mov    r14,QWORD PTR [rsp+0xf0]
  41d71b:	mov    QWORD PTR [rsp+0xd0],rcx
  41d723:	mov    QWORD PTR [rsp+0xd8],rdx
  41d72b:	mov    QWORD PTR [rsp+0xe0],r8
  41d733:	test   r14,r14
  41d736:	je     0x41d745
  41d738:	cmp    BYTE PTR [r14],0x0
  41d73c:	mov    eax,0x0
  41d741:	cmove  r14,rax
  41d745:	lea    rdx,[rsp+0x78]
  41d74a:	lea    r8,[rsp+0x74]
  41d74f:	mov    rcx,r9
  41d752:	call   0x41d5a0
  41d757:	test   al,al
  41d759:	jne    0x41d790
  41d75b:	mov    rcx,QWORD PTR [rsp+0x78]
  41d760:	test   rcx,rcx
  41d763:	je     0x41d773
  41d765:	mov    BYTE PTR [rsp+0x40],al
  41d769:	call   0x42a4e8
  41d76e:	movzx  eax,BYTE PTR [rsp+0x40]
  41d773:	add    rsp,0x88
  41d77a:	pop    rbx
  41d77b:	pop    rsi
  41d77c:	pop    rdi
  41d77d:	pop    rbp
  41d77e:	pop    r12
  41d780:	pop    r13
  41d782:	pop    r14
  41d784:	pop    r15
  41d786:	ret    
  41d787:	nop    WORD PTR [rax+rax*1+0x0]
  41d790:	call   0x427dc0
  41d795:	mov    QWORD PTR [rsp+0x48],rax
  41d79a:	call   0x427dc0
  41d79f:	mov    r15,rax
  41d7a2:	call   0x427dc0
  41d7a7:	mov    r13,rax
  41d7aa:	call   0x427dc0
  41d7af:	mov    QWORD PTR [rsp+0x40],rax
  41d7b4:	call   0x427dc0
  41d7b9:	mov    rsi,rax
  41d7bc:	mov    QWORD PTR [rsp+0x60],rax
  41d7c1:	call   0x427dc0
  41d7c6:	mov    r8,QWORD PTR [rsp+0xf8]
  41d7ce:	lea    rdx,[rip+0x28f24]        # 0x4466f9
  41d7d5:	mov    rcx,rsi
  41d7d8:	mov    QWORD PTR [rsp+0x50],rax
  41d7dd:	call   0x427dd8
  41d7e2:	cmp    QWORD PTR [rsp+0xd8],0x0
  41d7eb:	je     0x41d804
  41d7ed:	mov    r8,QWORD PTR [rsp+0xd8]
  41d7f5:	lea    rdx,[rip+0x28ef4]        # 0x4466f0
  41d7fc:	mov    rcx,rsi
  41d7ff:	call   0x427dd8
  41d804:	mov    r9,QWORD PTR [rsp+0xd0]
  41d80c:	mov    r8,QWORD PTR [rsp+0xe0]
  41d814:	lea    rdx,[rip+0x28eeb]        # 0x446706
  41d81b:	mov    rcx,QWORD PTR [rsp+0x60]
  41d820:	call   0x427dd8
  41d825:	cmp    DWORD PTR [rsp+0x100],0x13947
  41d830:	jle    0x41e120
  41d836:	mov    eax,DWORD PTR [rsp+0x74]
  41d83a:	xor    ebp,ebp
  41d83c:	mov    BYTE PTR [rsp+0x6f],0x0
  41d841:	test   eax,eax
  41d843:	jle    0x41e559
  41d849:	nop    DWORD PTR [rax+0x0]
  41d850:	mov    rbx,QWORD PTR [rsp+0x78]
  41d855:	movsxd rax,ebp
  41d858:	mov    rcx,QWORD PTR [rbx+rax*8]
  41d85c:	call   0x42a390
  41d861:	test   rax,rax
  41d864:	mov    r12,rax
  41d867:	je     0x41dd2d
  41d86d:	mov    rcx,QWORD PTR [rsp+0x48]
  41d872:	mov    rdx,rax
  41d875:	call   0x41cf80
  41d87a:	cmp    BYTE PTR [rax],0x3d
  41d87d:	jne    0x41dd20
  41d883:	lea    rbx,[rax+0x1]
  41d887:	mov    edx,0x2f
  41d88c:	mov    rcx,rbx
  41d88f:	call   0x42a428
  41d894:	test   rax,rax
  41d897:	je     0x41e0b0
  41d89d:	lea    rdx,[rax+0x1]
  41d8a1:	mov    BYTE PTR [rax],0x0
  41d8a4:	mov    rcx,r15
  41d8a7:	call   0x41cf80
  41d8ac:	cmp    BYTE PTR [rax],0x0
  41d8af:	jne    0x41dd20
  41d8b5:	mov    rcx,r13
  41d8b8:	lea    rdi,[rip+0x28e8e]        # 0x44674d
  41d8bf:	call   0x427d68
  41d8c4:	mov    rcx,QWORD PTR [rsp+0x40]
  41d8c9:	call   0x427d68
  41d8ce:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d8d6:	mov    ecx,0x6
  41d8db:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8dd:	je     0x41dd40
  41d8e3:	lea    rdi,[rip+0x28e69]        # 0x446753
  41d8ea:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d8f2:	mov    ecx,0x9
  41d8f7:	mov    QWORD PTR [rsp+0x58],rdi
  41d8fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8fe:	je     0x41dd70
  41d904:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d90c:	lea    rdi,[rip+0x28e49]        # 0x44675c
  41d913:	mov    ecx,0x7
  41d918:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d91a:	je     0x41da80
  41d920:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d928:	lea    rdi,[rip+0x28e34]        # 0x446763
  41d92f:	mov    ecx,0xa
  41d934:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d936:	je     0x41dd70
  41d93c:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d944:	lea    rdi,[rip+0x28e6e]        # 0x4467b9
  41d94b:	mov    ecx,0x9
  41d950:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d952:	je     0x41e020
  41d958:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d960:	lea    rdi,[rip+0x28e5b]        # 0x4467c2
  41d967:	mov    ecx,0xa
  41d96c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d96e:	je     0x41e020
  41d974:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d97c:	lea    rdi,[rip+0x28e51]        # 0x4467d4
  41d983:	mov    ecx,0x9
  41d988:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d98a:	je     0x41e569
  41d990:	mov    rsi,QWORD PTR [rsp+0xe0]
  41d998:	lea    rdi,[rip+0x28e3e]        # 0x4467dd
  41d99f:	mov    ecx,0x7
  41d9a4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9a6:	jne    0x41e5d6
  41d9ac:	mov    edx,0x43
  41d9b1:	mov    rcx,rbx
  41d9b4:	call   0x42a428
  41d9b9:	test   rax,rax
  41d9bc:	je     0x41e739
  41d9c2:	cmp    BYTE PTR [rax+0x1],0x2a
  41d9c6:	mov    r8,QWORD PTR [rsp+0xd8]
  41d9ce:	lea    rdx,[rip+0x28e0f]        # 0x4467e4
  41d9d5:	je     0x41e720
  41d9db:	mov    rcx,r13
  41d9de:	call   0x41d010
  41d9e3:	mov    BYTE PTR [rsp+0x6e],0x1
  41d9e8:	mov    BYTE PTR [rsp+0x6d],0x0
  41d9ed:	mov    edx,0x55
  41d9f2:	mov    rcx,rbx
  41d9f5:	call   0x42a428
  41d9fa:	test   rax,rax
  41d9fd:	je     0x41dbde
  41da03:	cmp    BYTE PTR [rax+0x1],0x2a
  41da07:	mov    r8,QWORD PTR [rsp+0xd8]
  41da0f:	lea    rdx,[rip+0x28d5e]        # 0x446774
  41da16:	jne    0x41dbcb
  41da1c:	nop    DWORD PTR [rax+0x0]
  41da20:	mov    rcx,QWORD PTR [rsp+0x40]
  41da25:	call   0x41d010
  41da2a:	cmp    BYTE PTR [rsp+0x6d],0x0
  41da2f:	je     0x41dbde
  41da35:	mov    rcx,r13
  41da38:	call   0x427d68
  41da3d:	mov    rbx,QWORD PTR [rsp+0x40]
  41da42:	lea    rdx,[rip+0x28e09]        # 0x446852
  41da49:	mov    rcx,rbx
  41da4c:	call   0x427d70
  41da51:	cmp    QWORD PTR [rsp+0xd8],0x0
  41da5a:	je     0x41dbde
  41da60:	mov    r8,QWORD PTR [rsp+0xd8]
  41da68:	lea    rdx,[rip+0x28c81]        # 0x4466f0
  41da6f:	mov    rcx,rbx
  41da72:	call   0x427dd8
  41da77:	jmp    0x41dbde
  41da7c:	nop    DWORD PTR [rax+0x0]
  41da80:	mov    edx,0x72
  41da85:	mov    rcx,rbx
  41da88:	call   0x42a428
  41da8d:	test   rax,rax
  41da90:	je     0x41e2d0
  41da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41daa0:	cmp    BYTE PTR [rax+0x1],0x2a
  41daa4:	mov    r8,QWORD PTR [rsp+0xd8]
  41daac:	lea    rdx,[rip+0x28cba]        # 0x44676d
  41dab3:	je     0x41e000
  41dab9:	mov    rcx,r13
  41dabc:	call   0x41d010
  41dac1:	mov    BYTE PTR [rsp+0x6e],0x1
  41dac6:	mov    BYTE PTR [rsp+0x6d],0x0
  41dacb:	mov    rsi,QWORD PTR [rsp+0xe0]
  41dad3:	mov    rdi,QWORD PTR [rsp+0x58]
  41dad8:	mov    ecx,0x9
  41dadd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dadf:	je     0x41dd90
  41dae5:	mov    rsi,QWORD PTR [rsp+0xe0]
  41daed:	lea    rdi,[rip+0x28c6f]        # 0x446763
  41daf4:	mov    ecx,0xa
  41daf9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dafb:	je     0x41dd90
  41db01:	mov    edx,0x61
  41db06:	mov    rcx,rbx
  41db09:	call   0x42a428
  41db0e:	test   rax,rax
  41db11:	je     0x41e411
  41db17:	cmp    BYTE PTR [rax+0x1],0x2a
  41db1b:	mov    r8,QWORD PTR [rsp+0xd8]
  41db23:	lea    rdx,[rip+0x28c50]        # 0x44677a
  41db2a:	je     0x41e170
  41db30:	mov    rcx,r13
  41db33:	call   0x41d010
  41db38:	mov    BYTE PTR [rsp+0x6d],0x0
  41db3d:	cmp    DWORD PTR [rsp+0x100],0x11237
  41db48:	jle    0x41dddd
  41db4e:	mov    edx,0x78
  41db53:	mov    rcx,rbx
  41db56:	call   0x42a428
  41db5b:	test   rax,rax
  41db5e:	je     0x41e484
  41db64:	cmp    BYTE PTR [rax+0x1],0x2a
  41db68:	mov    r8,QWORD PTR [rsp+0xd8]
  41db70:	lea    rdx,[rip+0x28c0a]        # 0x446781
  41db77:	je     0x41e470
  41db7d:	mov    rcx,r13
  41db80:	call   0x41d010
  41db85:	mov    BYTE PTR [rsp+0x6d],0x0
  41db8a:	cmp    QWORD PTR [rsp+0xd8],0x0
  41db93:	je     0x41e2df
  41db99:	nop    DWORD PTR [rax+0x0]
  41dba0:	mov    edx,0x77
  41dba5:	mov    rcx,rbx
  41dba8:	call   0x42a428
  41dbad:	test   rax,rax
  41dbb0:	je     0x41dbde
  41dbb2:	cmp    BYTE PTR [rax+0x1],0x2a
  41dbb6:	mov    r8,QWORD PTR [rsp+0xd8]
  41dbbe:	lea    rdx,[rip+0x28bdf]        # 0x4467a4
  41dbc5:	je     0x41da20
  41dbcb:	mov    rcx,r13
  41dbce:	call   0x41d010
  41dbd3:	cmp    BYTE PTR [rsp+0x6e],0x0
  41dbd8:	jne    0x41e060
  41dbde:	mov    rcx,r12
  41dbe1:	call   0x42a4e8
  41dbe6:	test   r14,r14
  41dbe9:	setne  bl
  41dbec:	je     0x41dc07
  41dbee:	cmp    QWORD PTR [r15+0x8],0x0
  41dbf3:	jne    0x41dc07
  41dbf5:	lea    rdx,[rip+0x28c5a]        # 0x446856
  41dbfc:	mov    r8,r14
  41dbff:	mov    rcx,r15
  41dc02:	call   0x427d70
  41dc07:	mov    rsi,QWORD PTR [r13+0x8]
  41dc0b:	test   rsi,rsi
  41dc0e:	jne    0x41dc1c
  41dc10:	mov    rax,QWORD PTR [rsp+0x40]
  41dc15:	cmp    QWORD PTR [rax+0x8],0x0
  41dc1a:	je     0x41dc90
  41dc1c:	test   bl,bl
  41dc1e:	je     0x41de50
  41dc24:	mov    rax,QWORD PTR [rsp+0x48]
  41dc29:	mov    rdx,r14
  41dc2c:	mov    rcx,QWORD PTR [rax]
  41dc2f:	call   0x42a420
  41dc34:	test   eax,eax
  41dc36:	jne    0x41de50
  41dc3c:	mov    rcx,QWORD PTR [r15]
  41dc3f:	mov    rdx,r14
  41dc42:	call   0x42a420
  41dc47:	test   eax,eax
  41dc49:	jne    0x41de50
  41dc4f:	cmp    DWORD PTR [rsp+0x100],0x112ff
  41dc5a:	jle    0x41e0a4
  41dc60:	mov    rax,QWORD PTR [rsp+0x40]
  41dc65:	mov    rsi,QWORD PTR [rax]
  41dc68:	lea    rdi,[rip+0x28be3]        # 0x446852
  41dc6f:	mov    ecx,0x4
  41dc74:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dc76:	setne  al
  41dc79:	test   al,al
  41dc7b:	jne    0x41e1e0
  41dc81:	mov    BYTE PTR [rsp+0x6f],0x1
  41dc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc90:	add    ebp,0x1
  41dc93:	cmp    ebp,DWORD PTR [rsp+0x74]
  41dc97:	jl     0x41d850
  41dc9d:	movzx  eax,BYTE PTR [rsp+0x6f]
  41dca2:	xor    eax,0x1
  41dca5:	test   bl,bl
  41dca7:	je     0x41dcb1
  41dca9:	test   al,al
  41dcab:	jne    0x41e3a0
  41dcb1:	mov    rcx,QWORD PTR [rsp+0x48]
  41dcb6:	call   0x427db8
  41dcbb:	mov    rcx,r15
  41dcbe:	call   0x427db8
  41dcc3:	mov    rcx,r13
  41dcc6:	call   0x427db8
  41dccb:	mov    rcx,QWORD PTR [rsp+0x40]
  41dcd0:	call   0x427db8
  41dcd5:	mov    rbx,QWORD PTR [rsp+0x50]
  41dcda:	mov    rsi,QWORD PTR [rsp+0x60]
  41dcdf:	lea    rdx,[rip+0x28c74]        # 0x44695a
  41dce6:	mov    rcx,QWORD PTR [rsp+0x108]
  41dcee:	mov    r9,QWORD PTR [rbx]
  41dcf1:	mov    r8,QWORD PTR [rsi]
  41dcf4:	call   0x427dd8
  41dcf9:	mov    rcx,rsi
  41dcfc:	call   0x427db8
  41dd01:	mov    rcx,rbx
  41dd04:	call   0x427db8
  41dd09:	mov    rcx,QWORD PTR [rsp+0x78]
  41dd0e:	call   0x42a4e8
  41dd13:	mov    eax,0x1
  41dd18:	jmp    0x41d773
  41dd1d:	nop    DWORD PTR [rax]
  41dd20:	mov    rcx,r12
  41dd23:	call   0x42a4e8
  41dd28:	mov    rbx,QWORD PTR [rsp+0x78]
  41dd2d:	mov    rcx,rbx
  41dd30:	call   0x42a4e8
  41dd35:	xor    eax,eax
  41dd37:	jmp    0x41d773
  41dd3c:	nop    DWORD PTR [rax+0x0]
  41dd40:	mov    edx,0x72
  41dd45:	mov    rcx,rbx
  41dd48:	call   0x42a428
  41dd4d:	test   rax,rax
  41dd50:	je     0x41e184
  41dd56:	lea    rdi,[rip+0x289f6]        # 0x446753
  41dd5d:	mov    QWORD PTR [rsp+0x58],rdi
  41dd62:	jmp    0x41daa0
  41dd67:	nop    WORD PTR [rax+rax*1+0x0]
  41dd70:	mov    edx,0x72
  41dd75:	mov    rcx,rbx
  41dd78:	call   0x42a428
  41dd7d:	test   rax,rax
  41dd80:	jne    0x41daa0
  41dd86:	mov    BYTE PTR [rsp+0x6e],0x0
  41dd8b:	mov    BYTE PTR [rsp+0x6d],0x0
  41dd90:	mov    edx,0x55
  41dd95:	mov    rcx,rbx
  41dd98:	call   0x42a428
  41dd9d:	test   rax,rax
  41dda0:	je     0x41e2c0
  41dda6:	cmp    BYTE PTR [rax+0x1],0x2a
  41ddaa:	mov    r8,QWORD PTR [rsp+0xd8]
  41ddb2:	lea    rdx,[rip+0x289bb]        # 0x446774
  41ddb9:	je     0x41e0c0
  41ddbf:	mov    rcx,r13
  41ddc2:	call   0x41d010
  41ddc7:	mov    BYTE PTR [rsp+0x6d],0x0
  41ddcc:	cmp    DWORD PTR [rsp+0x100],0x11237
  41ddd7:	jg     0x41dba0
  41dddd:	mov    rsi,QWORD PTR [rsp+0xe0]
  41dde5:	mov    rdi,QWORD PTR [rsp+0x58]
  41ddea:	mov    ecx,0x9
  41ddef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ddf1:	je     0x41dba0
  41ddf7:	mov    rsi,QWORD PTR [rsp+0xe0]
  41ddff:	lea    rdi,[rip+0x2895d]        # 0x446763
  41de06:	mov    ecx,0xa
  41de0b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41de0d:	je     0x41dba0
  41de13:	mov    edx,0x77
  41de18:	mov    rcx,rbx
  41de1b:	call   0x42a428
  41de20:	test   rax,rax
  41de23:	je     0x41dbde
  41de29:	cmp    BYTE PTR [rax+0x1],0x2a
  41de2d:	mov    r8,QWORD PTR [rsp+0xd8]
  41de35:	lea    rdx,[rip+0x2896f]        # 0x4467ab
  41de3c:	jne    0x41dbcb
  41de42:	jmp    0x41da20
  41de47:	nop    WORD PTR [rax+rax*1+0x0]
  41de50:	cmp    QWORD PTR [r15+0x8],0x0
  41de55:	je     0x41de8e
  41de57:	test   r14,r14
  41de5a:	mov    rdi,QWORD PTR [r15]
  41de5d:	je     0x41de6e
  41de5f:	mov    rdx,rdi
  41de62:	mov    rcx,r14
  41de65:	call   0x42a420
  41de6a:	test   eax,eax
  41de6c:	je     0x41de8e
  41de6e:	mov    rcx,rdi
  41de71:	call   0x41d080
  41de76:	mov    rcx,QWORD PTR [rsp+0x50]
  41de7b:	lea    rdx,[rip+0x28a3e]        # 0x4468c0
  41de82:	mov    r8,rax
  41de85:	call   0x427dd8
  41de8a:	mov    rsi,QWORD PTR [r13+0x8]
  41de8e:	test   rsi,rsi
  41de91:	jne    0x41df75
  41de97:	mov    rax,QWORD PTR [rsp+0x40]
  41de9c:	cmp    QWORD PTR [rax+0x8],0x0
  41dea1:	jne    0x41dee0
  41dea3:	cmp    QWORD PTR [r15+0x8],0x0
  41dea8:	je     0x41dc90
  41deae:	test   r14,r14
  41deb1:	je     0x41dec6
  41deb3:	mov    rdx,QWORD PTR [r15]
  41deb6:	mov    rcx,r14
  41deb9:	call   0x42a420
  41debe:	test   eax,eax
  41dec0:	je     0x41dc90
  41dec6:	mov    rcx,QWORD PTR [rsp+0x50]
  41decb:	lea    rdx,[rip+0x28a6a]        # 0x44693c
  41ded2:	call   0x427dc8
  41ded7:	jmp    0x41dc90
  41dedc:	nop    DWORD PTR [rax+0x0]
  41dee0:	mov    rax,QWORD PTR [rsp+0xd0]
  41dee8:	mov    r8,QWORD PTR [rsp+0xf8]
  41def0:	lea    rdx,[rip+0x289e8]        # 0x4468df
  41def7:	mov    rcx,QWORD PTR [rsp+0x50]
  41defc:	mov    QWORD PTR [rsp+0x28],rax
  41df01:	mov    rax,QWORD PTR [rsp+0xe0]
  41df09:	mov    QWORD PTR [rsp+0x20],rax
  41df0e:	mov    rax,QWORD PTR [rsp+0x40]
  41df13:	mov    r9,QWORD PTR [rax]
  41df16:	call   0x427dd8
  41df1b:	mov    rax,QWORD PTR [rsp+0x48]
  41df20:	cmp    QWORD PTR [rax+0x8],0x0
  41df25:	je     0x41e1c0
  41df2b:	mov    rax,QWORD PTR [rsp+0x48]
  41df30:	lea    rdi,[rip+0x289c9]        # 0x446900
  41df37:	mov    ecx,0x6
  41df3c:	mov    rax,QWORD PTR [rax]
  41df3f:	mov    rsi,rax
  41df42:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41df44:	je     0x41e0f5
  41df4a:	mov    rcx,rax
  41df4d:	call   0x41d080
  41df52:	mov    rcx,QWORD PTR [rsp+0x50]
  41df57:	mov    rdx,rax
  41df5a:	call   0x427dc8
  41df5f:	mov    rcx,QWORD PTR [rsp+0x50]
  41df64:	lea    rdx,[rip+0x289bc]        # 0x446927
  41df6b:	call   0x427dc8
  41df70:	jmp    0x41dea3
  41df75:	mov    rax,QWORD PTR [rsp+0xd0]
  41df7d:	mov    r8,QWORD PTR [rsp+0xf8]
  41df85:	lea    rdx,[rip+0x28953]        # 0x4468df
  41df8c:	mov    rcx,QWORD PTR [rsp+0x50]
  41df91:	mov    QWORD PTR [rsp+0x28],rax
  41df96:	mov    rax,QWORD PTR [rsp+0xe0]
  41df9e:	mov    QWORD PTR [rsp+0x20],rax
  41dfa3:	mov    r9,QWORD PTR [r13+0x0]
  41dfa7:	call   0x427dd8
  41dfac:	mov    rax,QWORD PTR [rsp+0x48]
  41dfb1:	cmp    QWORD PTR [rax+0x8],0x0
  41dfb6:	je     0x41e1a0
  41dfbc:	mov    rax,QWORD PTR [rsp+0x48]
  41dfc1:	lea    rdi,[rip+0x28938]        # 0x446900
  41dfc8:	mov    ecx,0x6
  41dfcd:	mov    rax,QWORD PTR [rax]
  41dfd0:	mov    rsi,rax
  41dfd3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41dfd5:	jne    0x41e0d4
  41dfdb:	lea    rcx,[rax+0x6]
  41dfdf:	call   0x41d080
  41dfe4:	mov    rcx,QWORD PTR [rsp+0x50]
  41dfe9:	lea    rdx,[rip+0x28917]        # 0x446907
  41dff0:	mov    r8,rax
  41dff3:	call   0x427dd8
  41dff8:	jmp    0x41de97
  41dffd:	nop    DWORD PTR [rax]
  41e000:	mov    rcx,QWORD PTR [rsp+0x40]
  41e005:	call   0x41d010
  41e00a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e00f:	mov    BYTE PTR [rsp+0x6d],0x1
  41e014:	jmp    0x41dacb
  41e019:	nop    DWORD PTR [rax+0x0]
  41e020:	mov    edx,0x58
  41e025:	mov    rcx,rbx
  41e028:	call   0x42a428
  41e02d:	test   rax,rax
  41e030:	je     0x41dbde
  41e036:	cmp    BYTE PTR [rax+0x1],0x2a
  41e03a:	mov    r8,QWORD PTR [rsp+0xd8]
  41e042:	lea    rdx,[rip+0x28783]        # 0x4467cc
  41e049:	je     0x41e54a
  41e04f:	mov    rcx,r13
  41e052:	call   0x41d010
  41e057:	nop    WORD PTR [rax+rax*1+0x0]
  41e060:	mov    rcx,QWORD PTR [rsp+0x40]
  41e065:	call   0x427d68
  41e06a:	lea    rdx,[rip+0x287e1]        # 0x446852
  41e071:	mov    rcx,r13
  41e074:	call   0x427d70
  41e079:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e082:	je     0x41dbde
  41e088:	mov    r8,QWORD PTR [rsp+0xd8]
  41e090:	lea    rdx,[rip+0x28659]        # 0x4466f0
  41e097:	mov    rcx,r13
  41e09a:	call   0x427dd8
  41e09f:	jmp    0x41dbde
  41e0a4:	mov    rsi,QWORD PTR [r13+0x0]
  41e0a8:	jmp    0x41dc68
  41e0ad:	nop    DWORD PTR [rax]
  41e0b0:	mov    rcx,r15
  41e0b3:	call   0x427d68
  41e0b8:	jmp    0x41d8b5
  41e0bd:	nop    DWORD PTR [rax]
  41e0c0:	mov    rcx,QWORD PTR [rsp+0x40]
  41e0c5:	call   0x41d010
  41e0ca:	mov    BYTE PTR [rsp+0x6e],0x0
  41e0cf:	jmp    0x41ddcc
  41e0d4:	mov    rcx,rax
  41e0d7:	call   0x41d080
  41e0dc:	mov    rcx,QWORD PTR [rsp+0x50]
  41e0e1:	lea    rdx,[rip+0x2882a]        # 0x446912
  41e0e8:	mov    r8,rax
  41e0eb:	call   0x427dd8
  41e0f0:	jmp    0x41de97
  41e0f5:	lea    rcx,[rax+0x6]
  41e0f9:	call   0x41d080
  41e0fe:	mov    rcx,QWORD PTR [rsp+0x50]
  41e103:	lea    rdx,[rip+0x28814]        # 0x44691e
  41e10a:	mov    r8,rax
  41e10d:	call   0x427dd8
  41e112:	jmp    0x41df5f
  41e117:	nop    WORD PTR [rax+rax*1+0x0]
  41e120:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e128:	lea    rdi,[rip+0x285ef]        # 0x44671e
  41e12f:	mov    ecx,0x9
  41e134:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e136:	jne    0x41d836
  41e13c:	mov    rax,QWORD PTR [rsp+0xd0]
  41e144:	mov    r9,QWORD PTR [rsp+0xe0]
  41e14c:	lea    rdx,[rip+0x285d5]        # 0x446728
  41e153:	mov    r8,QWORD PTR [rsp+0xf8]
  41e15b:	mov    rcx,QWORD PTR [rsp+0x60]
  41e160:	mov    QWORD PTR [rsp+0x20],rax
  41e165:	call   0x427dd8
  41e16a:	jmp    0x41d836
  41e16f:	nop
  41e170:	mov    rcx,QWORD PTR [rsp+0x40]
  41e175:	call   0x41d010
  41e17a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e17f:	jmp    0x41db3d
  41e184:	lea    rax,[rip+0x285c8]        # 0x446753
  41e18b:	mov    BYTE PTR [rsp+0x6e],0x0
  41e190:	mov    BYTE PTR [rsp+0x6d],0x0
  41e195:	mov    QWORD PTR [rsp+0x58],rax
  41e19a:	jmp    0x41dacb
  41e19f:	nop
  41e1a0:	mov    rcx,QWORD PTR [rsp+0x50]
  41e1a5:	lea    rdx,[rip+0x2874b]        # 0x4468f7
  41e1ac:	call   0x427dc8
  41e1b1:	jmp    0x41de97
  41e1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1c0:	mov    rcx,QWORD PTR [rsp+0x50]
  41e1c5:	lea    rdx,[rip+0x2874b]        # 0x446917
  41e1cc:	call   0x427dc8
  41e1d1:	jmp    0x41df5f
  41e1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1e0:	mov    rsi,QWORD PTR [rsp+0x60]
  41e1e5:	mov    r8,QWORD PTR [rsp+0xf8]
  41e1ed:	lea    rdx,[rip+0x28505]        # 0x4466f9
  41e1f4:	mov    rcx,rsi
  41e1f7:	call   0x427dd8
  41e1fc:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e205:	je     0x41e21e
  41e207:	mov    r8,QWORD PTR [rsp+0xd8]
  41e20f:	lea    rdx,[rip+0x284da]        # 0x4466f0
  41e216:	mov    rcx,rsi
  41e219:	call   0x427dd8
  41e21e:	mov    rax,QWORD PTR [rsp+0x48]
  41e223:	mov    rcx,QWORD PTR [rax]
  41e226:	call   0x41d080
  41e22b:	mov    r9,QWORD PTR [rsp+0xd0]
  41e233:	mov    r8,QWORD PTR [rsp+0xe0]
  41e23b:	lea    rdx,[rip+0x28617]        # 0x446859
  41e242:	mov    rcx,QWORD PTR [rsp+0x60]
  41e247:	mov    QWORD PTR [rsp+0x20],rax
  41e24c:	call   0x427dd8
  41e251:	cmp    QWORD PTR [r13+0x8],0x0
  41e256:	jne    0x41e420
  41e25c:	mov    rax,QWORD PTR [rsp+0x40]
  41e261:	cmp    QWORD PTR [rax+0x8],0x0
  41e266:	je     0x41dc81
  41e26c:	mov    rax,QWORD PTR [rsp+0x48]
  41e271:	mov    rcx,QWORD PTR [rax]
  41e274:	call   0x41d080
  41e279:	mov    QWORD PTR [rsp+0x30],rax
  41e27e:	mov    rax,QWORD PTR [rsp+0xd0]
  41e286:	lea    rdx,[rip+0x28603]        # 0x446890
  41e28d:	mov    r8,QWORD PTR [rsp+0xf8]
  41e295:	mov    rcx,QWORD PTR [rsp+0x60]
  41e29a:	mov    QWORD PTR [rsp+0x28],rax
  41e29f:	mov    rax,QWORD PTR [rsp+0xe0]
  41e2a7:	mov    QWORD PTR [rsp+0x20],rax
  41e2ac:	mov    rax,QWORD PTR [rsp+0x40]
  41e2b1:	mov    r9,QWORD PTR [rax]
  41e2b4:	call   0x427dd8
  41e2b9:	jmp    0x41dc81
  41e2be:	xchg   ax,ax
  41e2c0:	mov    BYTE PTR [rsp+0x6e],0x0
  41e2c5:	mov    BYTE PTR [rsp+0x6d],0x0
  41e2ca:	jmp    0x41ddcc
  41e2cf:	nop
  41e2d0:	mov    BYTE PTR [rsp+0x6e],0x0
  41e2d5:	mov    BYTE PTR [rsp+0x6d],0x0
  41e2da:	jmp    0x41dae5
  41e2df:	mov    edx,0x64
  41e2e4:	mov    rcx,rbx
  41e2e7:	call   0x42a428
  41e2ec:	test   rax,rax
  41e2ef:	je     0x41e6c1
  41e2f5:	xor    r8d,r8d
  41e2f8:	cmp    BYTE PTR [rax+0x1],0x2a
  41e2fc:	lea    rdx,[rip+0x28489]        # 0x44678c
  41e303:	je     0x41e5c2
  41e309:	mov    rcx,r13
  41e30c:	call   0x41d010
  41e311:	mov    BYTE PTR [rsp+0x6d],0x0
  41e316:	mov    edx,0x74
  41e31b:	mov    rcx,rbx
  41e31e:	call   0x42a428
  41e323:	test   rax,rax
  41e326:	je     0x41e6b2
  41e32c:	xor    r8d,r8d
  41e32f:	cmp    BYTE PTR [rax+0x1],0x2a
  41e333:	lea    rdx,[rip+0x28459]        # 0x446793
  41e33a:	je     0x41e5ae
  41e340:	mov    rcx,r13
  41e343:	call   0x41d010
  41e348:	mov    BYTE PTR [rsp+0x6d],0x0
  41e34d:	cmp    DWORD PTR [rsp+0x100],0x13a0f
  41e358:	jle    0x41dba0
  41e35e:	mov    edx,0x44
  41e363:	mov    rcx,rbx
  41e366:	call   0x42a428
  41e36b:	test   rax,rax
  41e36e:	je     0x41e6a3
  41e374:	xor    r8d,r8d
  41e377:	cmp    BYTE PTR [rax+0x1],0x2a
  41e37b:	lea    rdx,[rip+0x28419]        # 0x44679b
  41e382:	je     0x41e59a
  41e388:	mov    rcx,r13
  41e38b:	call   0x41d010
  41e390:	mov    BYTE PTR [rsp+0x6d],0x0
  41e395:	jmp    0x41dba0
  41e39a:	nop    WORD PTR [rax+rax*1+0x0]
  41e3a0:	mov    rbx,QWORD PTR [rsp+0x60]
  41e3a5:	mov    r8,QWORD PTR [rsp+0xf8]
  41e3ad:	lea    rdx,[rip+0x28345]        # 0x4466f9
  41e3b4:	mov    rcx,rbx
  41e3b7:	call   0x427dd8
  41e3bc:	cmp    QWORD PTR [rsp+0xd8],0x0
  41e3c5:	je     0x41e3de
  41e3c7:	mov    r8,QWORD PTR [rsp+0xd8]
  41e3cf:	lea    rdx,[rip+0x2831a]        # 0x4466f0
  41e3d6:	mov    rcx,rbx
  41e3d9:	call   0x427dd8
  41e3de:	mov    rcx,r14
  41e3e1:	call   0x41d080
  41e3e6:	mov    r9,QWORD PTR [rsp+0xd0]
  41e3ee:	mov    r8,QWORD PTR [rsp+0xe0]
  41e3f6:	lea    rdx,[rip+0x2845c]        # 0x446859
  41e3fd:	mov    rcx,QWORD PTR [rsp+0x60]
  41e402:	mov    QWORD PTR [rsp+0x20],rax
  41e407:	call   0x427dd8
  41e40c:	jmp    0x41dcb1
  41e411:	mov    BYTE PTR [rsp+0x6e],0x0
  41e416:	mov    BYTE PTR [rsp+0x6d],0x0
  41e41b:	jmp    0x41db3d
  41e420:	mov    rax,QWORD PTR [rsp+0x48]
  41e425:	mov    rcx,QWORD PTR [rax]
  41e428:	call   0x41d080
  41e42d:	mov    QWORD PTR [rsp+0x30],rax
  41e432:	mov    rax,QWORD PTR [rsp+0xd0]
  41e43a:	lea    rdx,[rip+0x2842c]        # 0x44686d
  41e441:	mov    r8,QWORD PTR [rsp+0xf8]
  41e449:	mov    rcx,QWORD PTR [rsp+0x60]
  41e44e:	mov    QWORD PTR [rsp+0x28],rax
  41e453:	mov    rax,QWORD PTR [rsp+0xe0]
  41e45b:	mov    QWORD PTR [rsp+0x20],rax
  41e460:	mov    r9,QWORD PTR [r13+0x0]
  41e464:	call   0x427dd8
  41e469:	jmp    0x41e25c
  41e46e:	xchg   ax,ax
  41e470:	mov    rcx,QWORD PTR [rsp+0x40]
  41e475:	call   0x41d010
  41e47a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e47f:	jmp    0x41db8a
  41e484:	mov    BYTE PTR [rsp+0x6e],0x0
  41e489:	mov    BYTE PTR [rsp+0x6d],0x0
  41e48e:	jmp    0x41db8a
  41e493:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e49b:	lea    rdi,[rip+0x28366]        # 0x446808
  41e4a2:	mov    ecx,0x5
  41e4a7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e4a9:	je     0x41e569
  41e4af:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4b7:	lea    rdx,[rip+0x2834f]        # 0x44680d
  41e4be:	call   0x42a420
  41e4c3:	test   eax,eax
  41e4c5:	je     0x41e569
  41e4cb:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4d3:	lea    rdx,[rip+0x28339]        # 0x446813
  41e4da:	call   0x42a420
  41e4df:	test   eax,eax
  41e4e1:	je     0x41e569
  41e4e7:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e4ef:	lea    rdx,[rip+0x28332]        # 0x446828
  41e4f6:	call   0x42a420
  41e4fb:	test   eax,eax
  41e4fd:	je     0x41e569
  41e4ff:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e507:	lea    rdx,[rip+0x28329]        # 0x446837
  41e50e:	call   0x42a420
  41e513:	test   eax,eax
  41e515:	jne    0x41e793
  41e51b:	mov    edx,0x72
  41e520:	mov    rcx,rbx
  41e523:	call   0x42a428
  41e528:	test   rax,rax
  41e52b:	je     0x41dbde
  41e531:	cmp    BYTE PTR [rax+0x1],0x2a
  41e535:	mov    r8,QWORD PTR [rsp+0xd8]
  41e53d:	lea    rdx,[rip+0x28229]        # 0x44676d
  41e544:	jne    0x41e04f
  41e54a:	mov    rcx,QWORD PTR [rsp+0x40]
  41e54f:	call   0x41d010
  41e554:	jmp    0x41da35
  41e559:	test   r14,r14
  41e55c:	mov    eax,0x1
  41e561:	setne  bl
  41e564:	jmp    0x41dca5
  41e569:	mov    edx,0x55
  41e56e:	mov    rcx,rbx
  41e571:	call   0x42a428
  41e576:	test   rax,rax
  41e579:	je     0x41dbde
  41e57f:	cmp    BYTE PTR [rax+0x1],0x2a
  41e583:	mov    r8,QWORD PTR [rsp+0xd8]
  41e58b:	lea    rdx,[rip+0x281e2]        # 0x446774
  41e592:	jne    0x41e04f
  41e598:	jmp    0x41e54a
  41e59a:	mov    rcx,QWORD PTR [rsp+0x40]
  41e59f:	call   0x41d010
  41e5a4:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5a9:	jmp    0x41dba0
  41e5ae:	mov    rcx,QWORD PTR [rsp+0x40]
  41e5b3:	call   0x41d010
  41e5b8:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5bd:	jmp    0x41e34d
  41e5c2:	mov    rcx,QWORD PTR [rsp+0x40]
  41e5c7:	call   0x41d010
  41e5cc:	mov    BYTE PTR [rsp+0x6e],0x0
  41e5d1:	jmp    0x41e316
  41e5d6:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e5de:	lea    rdi,[rip+0x28139]        # 0x44671e
  41e5e5:	mov    ecx,0x9
  41e5ea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e5ec:	jne    0x41e6d0
  41e5f2:	mov    edx,0x43
  41e5f7:	mov    rcx,rbx
  41e5fa:	call   0x42a428
  41e5ff:	test   rax,rax
  41e602:	je     0x41e784
  41e608:	cmp    BYTE PTR [rax+0x1],0x2a
  41e60c:	mov    r8,QWORD PTR [rsp+0xd8]
  41e614:	lea    rdx,[rip+0x281c9]        # 0x4467e4
  41e61b:	je     0x41e75c
  41e621:	mov    rcx,r13
  41e624:	call   0x41d010
  41e629:	mov    BYTE PTR [rsp+0x6e],0x1
  41e62e:	mov    BYTE PTR [rsp+0x6d],0x0
  41e633:	mov    edx,0x63
  41e638:	mov    rcx,rbx
  41e63b:	call   0x42a428
  41e640:	test   rax,rax
  41e643:	je     0x41e775
  41e649:	cmp    BYTE PTR [rax+0x1],0x2a
  41e64d:	mov    r8,QWORD PTR [rsp+0xd8]
  41e655:	lea    rdx,[rip+0x2818f]        # 0x4467eb
  41e65c:	je     0x41e748
  41e662:	mov    rcx,r13
  41e665:	call   0x41d010
  41e66a:	mov    BYTE PTR [rsp+0x6d],0x0
  41e66f:	mov    edx,0x54
  41e674:	mov    rcx,rbx
  41e677:	call   0x42a428
  41e67c:	test   rax,rax
  41e67f:	je     0x41dbde
  41e685:	cmp    BYTE PTR [rax+0x1],0x2a
  41e689:	mov    r8,QWORD PTR [rsp+0xd8]
  41e691:	lea    rdx,[rip+0x2815b]        # 0x4467f3
  41e698:	jne    0x41dbcb
  41e69e:	jmp    0x41da20
  41e6a3:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6a8:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6ad:	jmp    0x41dba0
  41e6b2:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6b7:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6bc:	jmp    0x41e34d
  41e6c1:	mov    BYTE PTR [rsp+0x6e],0x0
  41e6c6:	mov    BYTE PTR [rsp+0x6d],0x0
  41e6cb:	jmp    0x41e316
  41e6d0:	mov    rsi,QWORD PTR [rsp+0xe0]
  41e6d8:	lea    rdi,[rip+0x2811e]        # 0x4467fd
  41e6df:	mov    ecx,0xb
  41e6e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e6e6:	jne    0x41e493
  41e6ec:	mov    edx,0x43
  41e6f1:	mov    rcx,rbx
  41e6f4:	call   0x42a428
  41e6f9:	test   rax,rax
  41e6fc:	je     0x41dbde
  41e702:	cmp    BYTE PTR [rax+0x1],0x2a
  41e706:	mov    r8,QWORD PTR [rsp+0xd8]
  41e70e:	lea    rdx,[rip+0x280cf]        # 0x4467e4
  41e715:	jne    0x41e04f
  41e71b:	jmp    0x41e54a
  41e720:	mov    rcx,QWORD PTR [rsp+0x40]
  41e725:	call   0x41d010
  41e72a:	mov    BYTE PTR [rsp+0x6e],0x0
  41e72f:	mov    BYTE PTR [rsp+0x6d],0x1
  41e734:	jmp    0x41d9ed
  41e739:	mov    BYTE PTR [rsp+0x6e],0x0
  41e73e:	mov    BYTE PTR [rsp+0x6d],0x0
  41e743:	jmp    0x41d9ed
  41e748:	mov    rcx,QWORD PTR [rsp+0x40]
  41e74d:	call   0x41d010
  41e752:	mov    BYTE PTR [rsp+0x6e],0x0
  41e757:	jmp    0x41e66f
  41e75c:	mov    rcx,QWORD PTR [rsp+0x40]
  41e761:	call   0x41d010
  41e766:	mov    BYTE PTR [rsp+0x6e],0x0
  41e76b:	mov    BYTE PTR [rsp+0x6d],0x1
  41e770:	jmp    0x41e633
  41e775:	mov    BYTE PTR [rsp+0x6e],0x0
  41e77a:	mov    BYTE PTR [rsp+0x6d],0x0
  41e77f:	jmp    0x41e66f
  41e784:	mov    BYTE PTR [rsp+0x6e],0x0
  41e789:	mov    BYTE PTR [rsp+0x6d],0x0
  41e78e:	jmp    0x41e633
  41e793:	mov    rcx,QWORD PTR [rsp+0xe0]
  41e79b:	lea    rdx,[rip+0x280a3]        # 0x446845
  41e7a2:	call   0x42a420
  41e7a7:	test   eax,eax
  41e7a9:	jne    0x41e7ed
  41e7ab:	mov    edx,0x72
  41e7b0:	mov    rcx,rbx
  41e7b3:	call   0x42a428
  41e7b8:	test   rax,rax
  41e7bb:	je     0x41e6a3
  41e7c1:	cmp    BYTE PTR [rax+0x1],0x2a
  41e7c5:	mov    r8,QWORD PTR [rsp+0xd8]
  41e7cd:	lea    rdx,[rip+0x27f99]        # 0x44676d
  41e7d4:	je     0x41e7f2
  41e7d6:	mov    rcx,r13
  41e7d9:	call   0x41d010
  41e7de:	mov    BYTE PTR [rsp+0x6e],0x1
  41e7e3:	mov    BYTE PTR [rsp+0x6d],0x0
  41e7e8:	jmp    0x41dba0
  41e7ed:	call   0x42a568
  41e7f2:	mov    rcx,QWORD PTR [rsp+0x40]
  41e7f7:	call   0x41d010
  41e7fc:	mov    BYTE PTR [rsp+0x6e],0x0
  41e801:	mov    BYTE PTR [rsp+0x6d],0x1
  41e806:	jmp    0x41dba0
  41e80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e810:	push   rbx
  41e811:	cmp    BYTE PTR [r9],0x0
  41e815:	je     0x41e820
  41e817:	pop    rbx
  41e818:	jmp    0x41d700
  41e81d:	nop    DWORD PTR [rax]
  41e820:	mov    eax,0x1
  41e825:	pop    rbx
  41e826:	ret    
  41e827:	nop    WORD PTR [rax+rax*1+0x0]
  41e830:	push   r12
  41e832:	push   rbp
  41e833:	push   rdi
  41e834:	push   rsi
  41e835:	push   rbx
  41e836:	sub    rsp,0x40
  41e83a:	mov    rbp,r9
  41e83d:	mov    rsi,rdx
  41e840:	mov    rdi,r8
  41e843:	mov    r12,rcx
  41e846:	call   0x427dc0
  41e84b:	mov    rcx,rbp
  41e84e:	mov    rbx,rax
  41e851:	call   0x41d080
  41e856:	lea    rdx,[rip+0x28103]        # 0x446960
  41e85d:	mov    r8,rax
  41e860:	mov    rcx,rbx
  41e863:	call   0x427dd8
  41e868:	test   rsi,rsi
  41e86b:	je     0x41e887
  41e86d:	mov    rcx,rsi
  41e870:	call   0x41d080
  41e875:	lea    rdx,[rip+0x2810a]        # 0x446986
  41e87c:	mov    r8,rax
  41e87f:	mov    rcx,rbx
  41e882:	call   0x427dd8
  41e887:	cmp    BYTE PTR [rdi],0x0
  41e88a:	mov    rax,QWORD PTR [rbx]
  41e88d:	mov    esi,0x1
  41e892:	je     0x41e8cc
  41e894:	mov    rdx,QWORD PTR [rsp+0x98]
  41e89c:	lea    rcx,[rip+0x280f1]        # 0x446994
  41e8a3:	mov    QWORD PTR [rsp+0x28],rax
  41e8a8:	mov    QWORD PTR [rsp+0x20],rbp
  41e8ad:	mov    r9,rdi
  41e8b0:	mov    r8,r12
  41e8b3:	mov    QWORD PTR [rsp+0x38],rdx
  41e8b8:	mov    edx,DWORD PTR [rsp+0x90]
  41e8bf:	mov    DWORD PTR [rsp+0x30],edx
  41e8c3:	xor    edx,edx
  41e8c5:	call   0x41d700
  41e8ca:	mov    esi,eax
  41e8cc:	mov    rcx,rbx
  41e8cf:	call   0x427db8
  41e8d4:	mov    eax,esi
  41e8d6:	add    rsp,0x40
  41e8da:	pop    rbx
  41e8db:	pop    rsi
  41e8dc:	pop    rdi
  41e8dd:	pop    rbp
  41e8de:	pop    r12
  41e8e0:	ret    
  41e8e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8f0:	push   r15
  41e8f2:	push   r14
  41e8f4:	push   r13
  41e8f6:	push   r12
  41e8f8:	push   rbp
  41e8f9:	push   rdi
  41e8fa:	push   rsi
  41e8fb:	push   rbx
  41e8fc:	sub    rsp,0x78
  41e900:	movzx  eax,BYTE PTR [rsp+0xe0]
  41e908:	mov    r15,r8
  41e90b:	mov    QWORD PTR [rsp+0xc0],rcx
  41e913:	mov    r12,rdx
  41e916:	mov    r13d,r9d
  41e919:	mov    BYTE PTR [rsp+0x2f],r9b
  41e91e:	mov    BYTE PTR [rsp+0x2e],al
  41e922:	call   0x427f60
  41e927:	test   r15,r15
  41e92a:	mov    DWORD PTR [rsp+0x28],eax
  41e92e:	je     0x41eca0
  41e934:	lea    rbp,[rsp+0x30]
  41e939:	lea    rbx,[rsp+0x50]
  41e93e:	xor    edi,edi
  41e940:	mov    rcx,rbp
  41e943:	call   0x427da8
  41e948:	mov    rcx,rbx
  41e94b:	call   0x427da8
  41e950:	lea    rdx,[rip+0x28050]        # 0x4469a7
  41e957:	mov    rcx,rbx
  41e95a:	call   0x427dc8
  41e95f:	movzx  r14d,BYTE PTR [r15]
  41e963:	test   r14b,r14b
  41e966:	je     0x41ea10
  41e96c:	cmp    r14b,0x22
  41e970:	je     0x41ead2
  41e976:	test   dil,dil
  41e979:	je     0x41eaa0
  41e97f:	cmp    r14b,0x24
  41e983:	je     0x41ecf0
  41e989:	movzx  eax,BYTE PTR [rsp+0x2e]
  41e98e:	or     al,dil
  41e991:	je     0x41e9b5
  41e993:	lea    rcx,[rip+0x28016]        # 0x4469b0
  41e99a:	movsx  edx,r14b
  41e99e:	call   0x42a428
  41e9a3:	test   rax,rax
  41e9a6:	je     0x41e9b5
  41e9a8:	mov    edx,0x5c
  41e9ad:	mov    rcx,rbx
  41e9b0:	call   0x427dd0
  41e9b5:	mov    edx,DWORD PTR [rsp+0x28]
  41e9b9:	mov    rcx,r15
  41e9bc:	call   0x427e88
  41e9c1:	test   eax,eax
  41e9c3:	je     0x41ed27
  41e9c9:	movsx  edx,BYTE PTR [r15]
  41e9cd:	test   dl,dl
  41e9cf:	je     0x41ea10
  41e9d1:	sub    eax,0x1
  41e9d4:	lea    rsi,[r15+rax*1+0x1]
  41e9d9:	jmp    0x41e9ec
  41e9db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9e0:	movsx  edx,BYTE PTR [r15+0x1]
  41e9e5:	mov    r15,rax
  41e9e8:	test   dl,dl
  41e9ea:	je     0x41ea10
  41e9ec:	mov    rcx,rbx
  41e9ef:	call   0x427dd0
  41e9f4:	lea    rax,[r15+0x1]
  41e9f8:	cmp    rax,rsi
  41e9fb:	jne    0x41e9e0
  41e9fd:	movzx  r14d,BYTE PTR [r15+0x1]
  41ea02:	mov    r15,rsi
  41ea05:	test   r14b,r14b
  41ea08:	jne    0x41e96c
  41ea0e:	xchg   ax,ax
  41ea10:	cmp    QWORD PTR [rsp+0x58],0x2
  41ea16:	ja     0x41ebd0
  41ea1c:	xor    r13d,r13d
  41ea1f:	cmp    QWORD PTR [rsp+0x38],0x2
  41ea25:	ja     0x41eb35
  41ea2b:	cmp    QWORD PTR [rsp+0x100],0x0
  41ea34:	je     0x41ea72
  41ea36:	cmp    BYTE PTR [rsp+0x2f],0x0
  41ea3b:	lea    rax,[rip+0x27f53]        # 0x446995
  41ea42:	lea    rdx,[rip+0x27f53]        # 0x44699c
  41ea49:	mov    rcx,r12
  41ea4c:	mov    r13d,0x1
  41ea52:	cmovne rdx,rax
  41ea56:	call   0x427dc8
  41ea5b:	mov    r8,QWORD PTR [rsp+0x100]
  41ea63:	lea    rdx,[rip+0x27f39]        # 0x4469a3
  41ea6a:	mov    rcx,r12
  41ea6d:	call   0x427dd8
  41ea72:	mov    rcx,rbp
  41ea75:	call   0x427d60
  41ea7a:	mov    rcx,rbx
  41ea7d:	call   0x427d60
  41ea82:	mov    eax,r13d
  41ea85:	add    rsp,0x78
  41ea89:	pop    rbx
  41ea8a:	pop    rsi
  41ea8b:	pop    rdi
  41ea8c:	pop    rbp
  41ea8d:	pop    r12
  41ea8f:	pop    r13
  41ea91:	pop    r14
  41ea93:	pop    r15
  41ea95:	ret    
  41ea96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eaa0:	movzx  esi,r14b
  41eaa4:	mov    ecx,esi
  41eaa6:	call   QWORD PTR [rip+0x3e268]        # 0x45cd14
  41eaac:	test   eax,eax
  41eaae:	jne    0x41eaf2
  41eab0:	cmp    r14b,0x2a
  41eab4:	jne    0x41eb11
  41eab6:	lea    rdx,[rip+0x27eed]        # 0x4469aa
  41eabd:	mov    rcx,rbx
  41eac0:	add    r15,0x1
  41eac4:	call   0x427dc8
  41eac9:	movzx  r14d,BYTE PTR [r15]
  41eacd:	jmp    0x41e963
  41ead2:	test   dil,dil
  41ead5:	movzx  r14d,BYTE PTR [r15+0x1]
  41eada:	je     0x41eae6
  41eadc:	cmp    r14b,0x22
  41eae0:	je     0x41ed0c
  41eae6:	xor    edi,0x1
  41eae9:	add    r15,0x1
  41eaed:	jmp    0x41e963
  41eaf2:	mov    ecx,esi
  41eaf4:	add    r15,0x1
  41eaf8:	call   0x4279a0
  41eafd:	mov    rcx,rbx
  41eb00:	movsx  edx,al
  41eb03:	call   0x427dd0
  41eb08:	movzx  r14d,BYTE PTR [r15]
  41eb0c:	jmp    0x41e963
  41eb11:	cmp    r14b,0x3f
  41eb15:	jne    0x41ed79
  41eb1b:	mov    edx,0x2e
  41eb20:	mov    rcx,rbx
  41eb23:	add    r15,0x1
  41eb27:	call   0x427dd0
  41eb2c:	movzx  r14d,BYTE PTR [r15]
  41eb30:	jmp    0x41e963
  41eb35:	lea    rdx,[rip+0x27e83]        # 0x4469bf
  41eb3c:	mov    rcx,rbp
  41eb3f:	lea    rdi,[rip+0x27e7c]        # 0x4469c2
  41eb46:	call   0x427dc8
  41eb4b:	mov    rsi,QWORD PTR [rsp+0x30]
  41eb50:	mov    ecx,0x7
  41eb55:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41eb57:	je     0x41ea72
  41eb5d:	cmp    QWORD PTR [rsp+0xe8],0x0
  41eb66:	je     0x41ea72
  41eb6c:	cmp    BYTE PTR [rsp+0x2f],0x0
  41eb71:	lea    rax,[rip+0x27e1d]        # 0x446995
  41eb78:	lea    rdx,[rip+0x27e1d]        # 0x44699c
  41eb7f:	mov    rcx,r12
  41eb82:	mov    r13d,0x1
  41eb88:	cmovne rdx,rax
  41eb8c:	call   0x427dc8
  41eb91:	mov    r8,QWORD PTR [rsp+0xe8]
  41eb99:	lea    rdx,[rip+0x27e45]        # 0x4469e5
  41eba0:	mov    rcx,r12
  41eba3:	call   0x427dd8
  41eba8:	mov    r8,QWORD PTR [rsp+0xc0]
  41ebb0:	mov    rdx,QWORD PTR [rsp+0x30]
  41ebb5:	mov    rcx,r12
  41ebb8:	call   0x41d330
  41ebbd:	mov    edx,0xa
  41ebc2:	mov    rcx,r12
  41ebc5:	call   0x427dd0
  41ebca:	jmp    0x41ea72
  41ebcf:	nop
  41ebd0:	lea    rdx,[rip+0x27de8]        # 0x4469bf
  41ebd7:	mov    rcx,rbx
  41ebda:	lea    rdi,[rip+0x27de1]        # 0x4469c2
  41ebe1:	call   0x427dc8
  41ebe6:	mov    rsi,QWORD PTR [rsp+0x50]
  41ebeb:	mov    ecx,0x7
  41ebf0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ebf2:	je     0x41ea1c
  41ebf8:	lea    rax,[rip+0x27d96]        # 0x446995
  41ebff:	lea    rdx,[rip+0x27d96]        # 0x44699c
  41ec06:	test   r13b,r13b
  41ec09:	mov    rcx,r12
  41ec0c:	cmovne rdx,rax
  41ec10:	call   0x427dc8
  41ec15:	cmp    QWORD PTR [rsp+0xf8],0x0
  41ec1e:	mov    r8,QWORD PTR [rsp+0xf0]
  41ec26:	je     0x41ed38
  41ec2c:	lea    rdx,[rip+0x27d96]        # 0x4469c9
  41ec33:	mov    rcx,r12
  41ec36:	mov    r13d,0x1
  41ec3c:	call   0x427dd8
  41ec41:	mov    r8,QWORD PTR [rsp+0xc0]
  41ec49:	mov    rdx,QWORD PTR [rsp+0x50]
  41ec4e:	mov    rcx,r12
  41ec51:	call   0x41d330
  41ec56:	mov    r8,QWORD PTR [rsp+0xf8]
  41ec5e:	lea    rdx,[rip+0x27d6b]        # 0x4469d0
  41ec65:	mov    rcx,r12
  41ec68:	call   0x427dd8
  41ec6d:	mov    r8,QWORD PTR [rsp+0xc0]
  41ec75:	mov    rdx,QWORD PTR [rsp+0x50]
  41ec7a:	mov    rcx,r12
  41ec7d:	call   0x41d330
  41ec82:	lea    rdx,[rip+0x27d59]        # 0x4469e2
  41ec89:	mov    rcx,r12
  41ec8c:	call   0x427dc8
  41ec91:	mov    BYTE PTR [rsp+0x2f],0x1
  41ec96:	jmp    0x41ea1f
  41ec9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eca0:	cmp    QWORD PTR [rsp+0x100],0x0
  41eca9:	je     0x41ed30
  41ecaf:	lea    rax,[rip+0x27cdf]        # 0x446995
  41ecb6:	lea    rdx,[rip+0x27cdf]        # 0x44699c
  41ecbd:	test   r13b,r13b
  41ecc0:	mov    rcx,r12
  41ecc3:	mov    r13d,0x1
  41ecc9:	cmovne rdx,rax
  41eccd:	call   0x427dc8
  41ecd2:	mov    r8,QWORD PTR [rsp+0x100]
  41ecda:	lea    rdx,[rip+0x27cc2]        # 0x4469a3
  41ece1:	mov    rcx,r12
  41ece4:	call   0x427dd8
  41ece9:	jmp    0x41ea82
  41ecee:	xchg   ax,ax
  41ecf0:	lea    rdx,[rip+0x27cb6]        # 0x4469ad
  41ecf7:	mov    rcx,rbx
  41ecfa:	add    r15,0x1
  41ecfe:	call   0x427dc8
  41ed03:	movzx  r14d,BYTE PTR [r15]
  41ed07:	jmp    0x41e963
  41ed0c:	mov    edx,0x22
  41ed11:	mov    rcx,rbx
  41ed14:	add    r15,0x1
  41ed18:	call   0x427dd0
  41ed1d:	movzx  r14d,BYTE PTR [r15+0x1]
  41ed22:	jmp    0x41eae9
  41ed27:	movzx  r14d,BYTE PTR [r15]
  41ed2b:	jmp    0x41e963
  41ed30:	xor    r13d,r13d
  41ed33:	jmp    0x41ea82
  41ed38:	lea    rdx,[rip+0x27ca6]        # 0x4469e5
  41ed3f:	mov    rcx,r12
  41ed42:	mov    r13d,0x1
  41ed48:	call   0x427dd8
  41ed4d:	mov    r8,QWORD PTR [rsp+0xc0]
  41ed55:	mov    rdx,QWORD PTR [rsp+0x50]
  41ed5a:	mov    rcx,r12
  41ed5d:	call   0x41d330
  41ed62:	mov    edx,0xa
  41ed67:	mov    rcx,r12
  41ed6a:	call   0x427dd0
  41ed6f:	mov    BYTE PTR [rsp+0x2f],0x1
  41ed74:	jmp    0x41ea1f
  41ed79:	cmp    r14b,0x2e
  41ed7d:	jne    0x41e97f
  41ed83:	mov    rcx,rbp
  41ed86:	add    r15,0x1
  41ed8a:	call   0x427d68
  41ed8f:	mov    rdx,QWORD PTR [rsp+0x50]
  41ed94:	mov    rcx,rbp
  41ed97:	call   0x427dc8
  41ed9c:	mov    rcx,rbx
  41ed9f:	call   0x427d68
  41eda4:	lea    rdx,[rip+0x27bfc]        # 0x4469a7
  41edab:	mov    rcx,rbx
  41edae:	call   0x427dc8
  41edb3:	movzx  r14d,BYTE PTR [r15]
  41edb7:	jmp    0x41e963
  41edbc:	nop    DWORD PTR [rax+0x0]
  41edc0:	mov    rcx,r9
  41edc3:	mov    r9d,r8d
  41edc6:	mov    r8,rdx
  41edc9:	lea    rdx,[rip+0x27c20]        # 0x4469f0
  41edd0:	jmp    0x427dd8
  41edd5:	nop
  41edd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ede0:	push   r15
  41ede2:	push   r14
  41ede4:	push   r13
  41ede6:	push   r12
  41ede8:	push   rbp
  41ede9:	push   rdi
  41edea:	push   rsi
  41edeb:	push   rbx
  41edec:	sub    rsp,0x28
  41edf0:	xor    ebx,ebx
  41edf2:	mov    r12,QWORD PTR [rsp+0x90]
  41edfa:	mov    r14,rcx
  41edfd:	mov    rdi,rdx
  41ee00:	mov    rsi,r8
  41ee03:	mov    r13,r9
  41ee06:	jmp    0x41ee8a
  41ee0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee10:	mov    edx,ebx
  41ee12:	xor    r8d,r8d
  41ee15:	mov    rcx,rdi
  41ee18:	call   0x427e98
  41ee1d:	mov    edx,ebx
  41ee1f:	mov    r8d,0x1
  41ee25:	mov    r15,rax
  41ee28:	mov    rcx,rdi
  41ee2b:	add    ebx,0x1
  41ee2e:	call   0x427e98
  41ee33:	mov    rcx,r15
  41ee36:	mov    rbp,rax
  41ee39:	call   0x41d080
  41ee3e:	lea    rdx,[rip+0x27c1b]        # 0x446a60
  41ee45:	mov    r9,r13
  41ee48:	mov    r8,rax
  41ee4b:	mov    rcx,rsi
  41ee4e:	call   0x427dd8
  41ee53:	mov    rcx,r12
  41ee56:	call   0x41d080
  41ee5b:	lea    rdx,[rip+0x27c1a]        # 0x446a7c
  41ee62:	mov    r8,rax
  41ee65:	mov    rcx,rsi
  41ee68:	call   0x427dd8
  41ee6d:	mov    r8,r14
  41ee70:	mov    rdx,rbp
  41ee73:	mov    rcx,rsi
  41ee76:	call   0x41d330
  41ee7b:	lea    rdx,[rip+0x27c02]        # 0x446a84
  41ee82:	mov    rcx,rsi
  41ee85:	call   0x427dc8
  41ee8a:	mov    rcx,rdi
  41ee8d:	call   0x427e70
  41ee92:	cmp    ebx,eax
  41ee94:	jl     0x41ee10
  41ee9a:	add    rsp,0x28
  41ee9e:	pop    rbx
  41ee9f:	pop    rsi
  41eea0:	pop    rdi
  41eea1:	pop    rbp
  41eea2:	pop    r12
  41eea4:	pop    r13
  41eea6:	pop    r14
  41eea8:	pop    r15
  41eeaa:	ret    
  41eeab:	nop    DWORD PTR [rax+rax*1+0x0]
  41eeb0:	push   rdi
  41eeb1:	push   rsi
  41eeb2:	push   rbx
  41eeb3:	sub    rsp,0x20
  41eeb7:	mov    rsi,rcx
  41eeba:	mov    rcx,rdx
  41eebd:	mov    rdi,rdx
  41eec0:	call   0x42a400
  41eec5:	lea    rcx,[rax+0x10]
  41eec9:	call   0x424800
  41eece:	lea    rcx,[rax+0x8]
  41eed2:	mov    QWORD PTR [rax],0x0
  41eed9:	mov    rdx,rdi
  41eedc:	mov    rbx,rax
  41eedf:	call   0x42a418
  41eee4:	mov    rax,QWORD PTR [rsi+0x8]
  41eee8:	test   rax,rax
  41eeeb:	je     0x41ef00
  41eeed:	mov    QWORD PTR [rax],rbx
  41eef0:	mov    QWORD PTR [rsi+0x8],rbx
  41eef4:	add    rsp,0x20
  41eef8:	pop    rbx
  41eef9:	pop    rsi
  41eefa:	pop    rdi
  41eefb:	ret    
  41eefc:	nop    DWORD PTR [rax+0x0]
  41ef00:	mov    QWORD PTR [rsi],rbx
  41ef03:	mov    QWORD PTR [rsi+0x8],rbx
  41ef07:	add    rsp,0x20
  41ef0b:	pop    rbx
  41ef0c:	pop    rsi
  41ef0d:	pop    rdi
  41ef0e:	ret    
  41ef0f:	nop
  41ef10:	push   rsi
  41ef11:	push   rbx
  41ef12:	sub    rsp,0x28
  41ef16:	mov    rbx,QWORD PTR [rcx]
  41ef19:	mov    rsi,rdx
  41ef1c:	test   rbx,rbx
  41ef1f:	jne    0x41ef2b
  41ef21:	jmp    0x41ef50
  41ef23:	mov    rbx,QWORD PTR [rbx]
  41ef26:	test   rbx,rbx
  41ef29:	je     0x41ef50
  41ef2b:	lea    rcx,[rbx+0x8]
  41ef2f:	mov    rdx,rsi
  41ef32:	call   0x42a420
  41ef37:	test   eax,eax
  41ef39:	jne    0x41ef23
  41ef3b:	mov    eax,0x1
  41ef40:	add    rsp,0x28
  41ef44:	pop    rbx
  41ef45:	pop    rsi
  41ef46:	ret    
  41ef47:	nop    WORD PTR [rax+rax*1+0x0]
  41ef50:	xor    eax,eax
  41ef52:	add    rsp,0x28
  41ef56:	pop    rbx
  41ef57:	pop    rsi
  41ef58:	ret    
  41ef59:	nop
  41ef5a:	nop
  41ef5b:	nop
  41ef5c:	nop
  41ef5d:	nop
  41ef5e:	nop
  41ef5f:	nop
  41ef60:	push   r12
  41ef62:	push   rbp
  41ef63:	push   rdi
  41ef64:	push   rsi
  41ef65:	push   rbx
  41ef66:	sub    rsp,0x60
  41ef6a:	mov    r12,rcx
  41ef6d:	mov    rsi,rdx
  41ef70:	movsxd rbp,r8d
  41ef73:	call   0x42a400
  41ef78:	cmp    eax,0x3f
  41ef7b:	jg     0x41f012
  41ef81:	test   eax,eax
  41ef83:	jle    0x41efb5
  41ef85:	lea    edx,[rax-0x1]
  41ef88:	lea    rdi,[rsp+0x20]
  41ef8d:	xor    r10d,r10d
  41ef90:	add    rdx,0x1
  41ef94:	movzx  r9d,BYTE PTR [r12+r10*1]
  41ef99:	lea    ebx,[r9-0x41]
  41ef9d:	lea    r11d,[r9+0x20]
  41efa1:	cmp    bl,0x19
  41efa4:	cmovbe r9d,r11d
  41efa8:	mov    BYTE PTR [rdi+r10*1],r9b
  41efac:	add    r10,0x1
  41efb0:	cmp    r10,rdx
  41efb3:	jne    0x41ef94
  41efb5:	shl    rbp,0x4
  41efb9:	cdqe   
  41efbb:	lea    rdi,[rsp+0x20]
  41efc0:	lea    rbp,[rsi+rbp*1-0x10]
  41efc5:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41efca:	cmp    rsi,rbp
  41efcd:	jbe    0x41efda
  41efcf:	jmp    0x41f012
  41efd1:	lea    rbp,[rbx-0x10]
  41efd5:	cmp    rsi,rbp
  41efd8:	ja     0x41f012
  41efda:	mov    rax,rbp
  41efdd:	mov    rdx,rdi
  41efe0:	sub    rax,rsi
  41efe3:	sar    rax,0x4
  41efe7:	mov    rbx,rax
  41efea:	shr    rbx,0x3f
  41efee:	add    rbx,rax
  41eff1:	sar    rbx,1
  41eff4:	shl    rbx,0x4
  41eff8:	add    rbx,rsi
  41effb:	mov    rcx,QWORD PTR [rbx]
  41effe:	call   0x42a420
  41f003:	test   eax,eax
  41f005:	je     0x41f01f
  41f007:	jns    0x41efd1
  41f009:	lea    rsi,[rbx+0x10]
  41f00d:	cmp    rsi,rbp
  41f010:	jbe    0x41efda
  41f012:	xor    eax,eax
  41f014:	add    rsp,0x60
  41f018:	pop    rbx
  41f019:	pop    rsi
  41f01a:	pop    rdi
  41f01b:	pop    rbp
  41f01c:	pop    r12
  41f01e:	ret    
  41f01f:	mov    rax,rbx
  41f022:	add    rsp,0x60
  41f026:	pop    rbx
  41f027:	pop    rsi
  41f028:	pop    rdi
  41f029:	pop    rbp
  41f02a:	pop    r12
  41f02c:	ret    
  41f02d:	nop
  41f02e:	nop
  41f02f:	nop
  41f030:	lea    rdx,[rip+0x2a009]        # 0x449040
  41f037:	jmp    0x427dd8
  41f03c:	nop    DWORD PTR [rax+0x0]
  41f040:	sub    rsp,0xb8
  41f047:	lea    rax,[rip+0x2a118]        # 0x449166
  41f04e:	lea    r8,[rip+0x2a101]        # 0x449156
  41f055:	lea    rdx,[rip+0x2a102]        # 0x44915e
  41f05c:	lea    r9,[rip+0x29ffa]        # 0x44905d
  41f063:	mov    QWORD PTR [rsp+0x90],rax
  41f06b:	mov    QWORD PTR [rsp+0x78],rax
  41f070:	mov    QWORD PTR [rsp+0x60],rax
  41f075:	lea    rax,[rip+0x2a0f2]        # 0x44916e
  41f07c:	mov    QWORD PTR [rsp+0xa0],r8
  41f084:	mov    QWORD PTR [rsp+0x88],r8
  41f08c:	mov    QWORD PTR [rsp+0x70],r8
  41f091:	lea    r8,[rip+0x29fd9]        # 0x449071
  41f098:	mov    QWORD PTR [rsp+0x58],rax
  41f09d:	lea    rax,[rip+0x2a0e8]        # 0x44918c
  41f0a4:	mov    QWORD PTR [rsp+0x98],rdx
  41f0ac:	mov    QWORD PTR [rsp+0x80],rdx
  41f0b4:	mov    QWORD PTR [rsp+0x68],rdx
  41f0b9:	lea    rdx,[rip+0x29fb8]        # 0x449078
  41f0c0:	mov    QWORD PTR [rsp+0x50],rax
  41f0c5:	lea    rax,[rip+0x2a0cb]        # 0x449197
  41f0cc:	mov    QWORD PTR [rsp+0x48],r9
  41f0d1:	mov    QWORD PTR [rsp+0x40],r8
  41f0d6:	mov    QWORD PTR [rsp+0x30],r9
  41f0db:	mov    QWORD PTR [rsp+0x38],rax
  41f0e0:	lea    rax,[rip+0x2a0ba]        # 0x4491a1
  41f0e7:	mov    QWORD PTR [rsp+0x28],r8
  41f0ec:	mov    QWORD PTR [rsp+0x20],rax
  41f0f1:	call   0x427dd8
  41f0f6:	nop
  41f0f7:	add    rsp,0xb8
  41f0fe:	ret    
  41f0ff:	nop
  41f100:	sub    rsp,0x48
  41f104:	lea    rax,[rip+0x2a081]        # 0x44918c
  41f10b:	lea    r8,[rip+0x29f5f]        # 0x449071
  41f112:	lea    r9,[rip+0x2a088]        # 0x4491a1
  41f119:	lea    rdx,[rip+0x2a090]        # 0x4491b0
  41f120:	mov    QWORD PTR [rsp+0x38],rax
  41f125:	lea    rax,[rip+0x2a06b]        # 0x449197
  41f12c:	mov    QWORD PTR [rsp+0x30],r8
  41f131:	mov    QWORD PTR [rsp+0x20],r8
  41f136:	mov    QWORD PTR [rsp+0x28],rax
  41f13b:	call   0x427dd8
  41f140:	nop
  41f141:	add    rsp,0x48
  41f145:	ret    
  41f146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f150:	sub    rsp,0x48
  41f154:	lea    rax,[rip+0x2a031]        # 0x44918c
  41f15b:	lea    r8,[rip+0x29f0f]        # 0x449071
  41f162:	lea    r9,[rip+0x2a038]        # 0x4491a1
  41f169:	lea    rdx,[rip+0x2a0a0]        # 0x449210
  41f170:	mov    QWORD PTR [rsp+0x38],rax
  41f175:	lea    rax,[rip+0x2a01b]        # 0x449197
  41f17c:	mov    QWORD PTR [rsp+0x30],r8
  41f181:	mov    QWORD PTR [rsp+0x20],r8
  41f186:	mov    QWORD PTR [rsp+0x28],rax
  41f18b:	call   0x427dd8
  41f190:	nop
  41f191:	add    rsp,0x48
  41f195:	ret    
  41f196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1a0:	sub    rsp,0xa8
  41f1a7:	lea    rax,[rip+0x2a210]        # 0x4493be
  41f1ae:	lea    rdx,[rip+0x2a221]        # 0x4493d6
  41f1b5:	lea    r8,[rip+0x29eb5]        # 0x449071
  41f1bc:	lea    r9,[rip+0x2a0b0]        # 0x449273
  41f1c3:	mov    QWORD PTR [rsp+0x90],rax
  41f1cb:	mov    QWORD PTR [rsp+0x80],rax
  41f1d3:	mov    QWORD PTR [rsp+0x68],rax
  41f1d8:	lea    rax,[rip+0x2a1fd]        # 0x4493dc
  41f1df:	mov    QWORD PTR [rsp+0x70],rdx
  41f1e4:	lea    rdx,[rip+0x2a095]        # 0x449280
  41f1eb:	mov    QWORD PTR [rsp+0x98],r8
  41f1f3:	mov    QWORD PTR [rsp+0x88],r8
  41f1fb:	mov    QWORD PTR [rsp+0x58],rax
  41f200:	lea    rax,[rip+0x29f90]        # 0x449197
  41f207:	mov    QWORD PTR [rsp+0x78],r8
  41f20c:	mov    QWORD PTR [rsp+0x60],r8
  41f211:	mov    QWORD PTR [rsp+0x50],r8
  41f216:	mov    QWORD PTR [rsp+0x48],rax
  41f21b:	lea    rax,[rip+0x29f7f]        # 0x4491a1
  41f222:	mov    QWORD PTR [rsp+0x40],r8
  41f227:	mov    QWORD PTR [rsp+0x30],r8
  41f22c:	mov    QWORD PTR [rsp+0x38],rax
  41f231:	lea    rax,[rip+0x2a1b3]        # 0x4493eb
  41f238:	mov    QWORD PTR [rsp+0x28],rax
  41f23d:	lea    rax,[rip+0x2a1b1]        # 0x4493f5
  41f244:	mov    QWORD PTR [rsp+0x20],rax
  41f249:	call   0x427dd8
  41f24e:	nop
  41f24f:	add    rsp,0xa8
  41f256:	ret    
  41f257:	nop    WORD PTR [rax+rax*1+0x0]
  41f260:	sub    rsp,0x78
  41f264:	lea    rax,[rip+0x2a72f]        # 0x44999a
  41f26b:	lea    r9,[rip+0x2a198]        # 0x44940a
  41f272:	lea    r8,[rip+0x2a19d]        # 0x449416
  41f279:	lea    rdx,[rip+0x2a1a8]        # 0x449428
  41f280:	mov    QWORD PTR [rsp+0x68],rax
  41f285:	mov    QWORD PTR [rsp+0x60],rax
  41f28a:	mov    QWORD PTR [rsp+0x58],rax
  41f28f:	mov    QWORD PTR [rsp+0x50],rax
  41f294:	mov    QWORD PTR [rsp+0x48],rax
  41f299:	mov    QWORD PTR [rsp+0x40],rax
  41f29e:	mov    QWORD PTR [rsp+0x38],rax
  41f2a3:	mov    QWORD PTR [rsp+0x30],rax
  41f2a8:	lea    rax,[rip+0x2a6f9]        # 0x4499a8
  41f2af:	mov    QWORD PTR [rsp+0x28],rax
  41f2b4:	lea    rax,[rip+0x2a71a]        # 0x4499d5
  41f2bb:	mov    QWORD PTR [rsp+0x20],rax
  41f2c0:	call   0x427dd8
  41f2c5:	nop
  41f2c6:	add    rsp,0x78
  41f2ca:	ret    
  41f2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	sub    rsp,0xa8
  41f2d7:	lea    rax,[rip+0x29eae]        # 0x44918c
  41f2de:	lea    rdx,[rip+0x2a8c0]        # 0x449ba5
  41f2e5:	lea    r8,[rip+0x29d85]        # 0x449071
  41f2ec:	lea    r9,[rip+0x2a6fe]        # 0x4499f1
  41f2f3:	mov    QWORD PTR [rsp+0x98],rax
  41f2fb:	lea    rax,[rip+0x29e9f]        # 0x4491a1
  41f302:	mov    QWORD PTR [rsp+0x58],rdx
  41f307:	lea    rdx,[rip+0x2a6f2]        # 0x449a00
  41f30e:	mov    QWORD PTR [rsp+0x90],r8
  41f316:	mov    QWORD PTR [rsp+0x80],r8
  41f31e:	mov    QWORD PTR [rsp+0x88],rax
  41f326:	lea    rax,[rip+0x29e6a]        # 0x449197
  41f32d:	mov    QWORD PTR [rsp+0x70],r8
  41f332:	mov    QWORD PTR [rsp+0x60],r8
  41f337:	mov    QWORD PTR [rsp+0x48],r8
  41f33c:	mov    QWORD PTR [rsp+0x78],rax
  41f341:	lea    rax,[rip+0x2a84d]        # 0x449b95
  41f348:	mov    QWORD PTR [rsp+0x38],r8
  41f34d:	mov    QWORD PTR [rsp+0x28],r8
  41f352:	mov    QWORD PTR [rsp+0x20],r8
  41f357:	mov    QWORD PTR [rsp+0x68],rax
  41f35c:	mov    QWORD PTR [rsp+0x50],rax
  41f361:	mov    QWORD PTR [rsp+0x40],rax
  41f366:	lea    rax,[rip+0x2a84c]        # 0x449bb9
  41f36d:	mov    QWORD PTR [rsp+0x30],rax
  41f372:	call   0x427dd8
  41f377:	nop
  41f378:	add    rsp,0xa8
  41f37f:	ret    
  41f380:	sub    rsp,0x48
  41f384:	lea    rax,[rip+0x29e16]        # 0x4491a1
  41f38b:	lea    r8,[rip+0x29cdf]        # 0x449071
  41f392:	lea    rdx,[rip+0x2a837]        # 0x449bd0
  41f399:	mov    QWORD PTR [rsp+0x38],rax
  41f39e:	lea    rax,[rip+0x29df2]        # 0x449197
  41f3a5:	mov    QWORD PTR [rsp+0x30],r8
  41f3aa:	mov    QWORD PTR [rsp+0x20],r8
  41f3af:	mov    r9,r8
  41f3b2:	mov    QWORD PTR [rsp+0x28],rax
  41f3b7:	call   0x427dd8
  41f3bc:	nop
  41f3bd:	add    rsp,0x48
  41f3c1:	ret    
  41f3c2:	nop    DWORD PTR [rax+0x0]
  41f3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3d0:	sub    rsp,0x1b8
  41f3d7:	lea    rdx,[rip+0x29d88]        # 0x449166
  41f3de:	lea    r10,[rip+0x2abcb]        # 0x449fb0
  41f3e5:	lea    rax,[rip+0x2ab9c]        # 0x449f88
  41f3ec:	lea    r11,[rip+0x2abca]        # 0x449fbd
  41f3f3:	lea    r9,[rip+0x29d5c]        # 0x449156
  41f3fa:	lea    r8,[rip+0x29d5d]        # 0x44915e
  41f401:	mov    QWORD PTR [rsp+0x198],rdx
  41f409:	mov    QWORD PTR [rsp+0x180],rdx
  41f411:	mov    QWORD PTR [rsp+0x168],rdx
  41f419:	mov    QWORD PTR [rsp+0x160],rax
  41f421:	lea    rax,[rip+0x2ab7c]        # 0x449fa4
  41f428:	mov    QWORD PTR [rsp+0x100],r10
  41f430:	mov    QWORD PTR [rsp+0xf0],r10
  41f438:	lea    r10,[rip+0x2ab93]        # 0x449fd2
  41f43f:	mov    QWORD PTR [rsp+0xe0],r11
  41f447:	mov    QWORD PTR [rsp+0xb0],rdx
  41f44f:	lea    r11,[rip+0x2ab72]        # 0x449fc8
  41f456:	lea    rdx,[rip+0x2ab83]        # 0x449fe0
  41f45d:	mov    QWORD PTR [rsp+0x1a8],r9
  41f465:	mov    QWORD PTR [rsp+0x1a0],r8
  41f46d:	mov    QWORD PTR [rsp+0x190],r9
  41f475:	mov    QWORD PTR [rsp+0x188],r8
  41f47d:	mov    QWORD PTR [rsp+0x178],r9
  41f485:	mov    QWORD PTR [rsp+0x170],r8
  41f48d:	mov    QWORD PTR [rsp+0x158],rax
  41f495:	mov    QWORD PTR [rsp+0x150],rax
  41f49d:	mov    QWORD PTR [rsp+0x148],rax
  41f4a5:	mov    QWORD PTR [rsp+0x140],rax
  41f4ad:	mov    QWORD PTR [rsp+0x138],rax
  41f4b5:	mov    QWORD PTR [rsp+0x130],rax
  41f4bd:	mov    QWORD PTR [rsp+0x128],rax
  41f4c5:	mov    QWORD PTR [rsp+0x120],rax
  41f4cd:	mov    QWORD PTR [rsp+0x118],rax
  41f4d5:	mov    QWORD PTR [rsp+0x110],rax
  41f4dd:	mov    QWORD PTR [rsp+0x108],rax
  41f4e5:	mov    QWORD PTR [rsp+0xf8],rax
  41f4ed:	mov    QWORD PTR [rsp+0xe8],rax
  41f4f5:	mov    QWORD PTR [rsp+0xd8],r11
  41f4fd:	mov    QWORD PTR [rsp+0xd0],r10
  41f505:	mov    QWORD PTR [rsp+0xc8],rax
  41f50d:	mov    QWORD PTR [rsp+0xc0],r9
  41f515:	mov    QWORD PTR [rsp+0xb8],r8
  41f51d:	lea    r8,[rip+0x29b4d]        # 0x449071
  41f524:	mov    QWORD PTR [rsp+0xa8],rdx
  41f52c:	mov    QWORD PTR [rsp+0xa0],rax
  41f534:	lea    r9,[rip+0x2a72e]        # 0x449c69
  41f53b:	mov    QWORD PTR [rsp+0x98],rax
  41f543:	mov    QWORD PTR [rsp+0x90],rax
  41f54b:	lea    rdx,[rip+0x2a726]        # 0x449c78
  41f552:	mov    QWORD PTR [rsp+0x88],rax
  41f55a:	mov    QWORD PTR [rsp+0x80],rax
  41f562:	mov    QWORD PTR [rsp+0x78],rax
  41f567:	lea    rax,[rip+0x2aa80]        # 0x449fee
  41f56e:	mov    QWORD PTR [rsp+0x40],r8
  41f573:	mov    QWORD PTR [rsp+0x30],r8
  41f578:	mov    QWORD PTR [rsp+0x20],r8
  41f57d:	mov    QWORD PTR [rsp+0x70],rax
  41f582:	lea    rax,[rip+0x2aa71]        # 0x449ffa
  41f589:	mov    QWORD PTR [rsp+0x68],rax
  41f58e:	lea    rax,[rip+0x29ac8]        # 0x44905d
  41f595:	mov    QWORD PTR [rsp+0x60],rax
  41f59a:	lea    rax,[rip+0x2aa65]        # 0x44a006
  41f5a1:	mov    QWORD PTR [rsp+0x58],rax
  41f5a6:	lea    rax,[rip+0x2aa68]        # 0x44a015
  41f5ad:	mov    QWORD PTR [rsp+0x50],rax
  41f5b2:	lea    rax,[rip+0x2aa74]        # 0x44a02d
  41f5b9:	mov    QWORD PTR [rsp+0x48],rax
  41f5be:	mov    QWORD PTR [rsp+0x38],rax
  41f5c3:	lea    rax,[rip+0x29bc2]        # 0x44918c
  41f5ca:	mov    QWORD PTR [rsp+0x28],rax
  41f5cf:	call   0x427dd8
  41f5d4:	nop
  41f5d5:	add    rsp,0x1b8
  41f5dc:	ret    
  41f5dd:	nop    DWORD PTR [rax]
  41f5e0:	sub    rsp,0x68
  41f5e4:	lea    rax,[rip+0x29bb6]        # 0x4491a1
  41f5eb:	lea    r8,[rip+0x29a7f]        # 0x449071
  41f5f2:	lea    r9,[rip+0x2aa42]        # 0x44a03b
  41f5f9:	lea    rdx,[rip+0x2aa50]        # 0x44a050
  41f600:	mov    QWORD PTR [rsp+0x50],rax
  41f605:	lea    rax,[rip+0x29b8b]        # 0x449197
  41f60c:	mov    QWORD PTR [rsp+0x48],r8
  41f611:	mov    QWORD PTR [rsp+0x38],r8
  41f616:	mov    QWORD PTR [rsp+0x40],rax
  41f61b:	lea    rax,[rip+0x29db4]        # 0x4493d6
  41f622:	mov    QWORD PTR [rsp+0x30],rax
  41f627:	lea    rax,[rip+0x29c45]        # 0x449273
  41f62e:	mov    QWORD PTR [rsp+0x28],rax
  41f633:	lea    rax,[rip+0x2ab08]        # 0x44a142
  41f63a:	mov    QWORD PTR [rsp+0x20],rax
  41f63f:	call   0x427dd8
  41f644:	nop
  41f645:	add    rsp,0x68
  41f649:	ret    
  41f64a:	nop    WORD PTR [rax+rax*1+0x0]
  41f650:	sub    rsp,0x148
  41f657:	lea    rdx,[rip+0x29d78]        # 0x4493d6
  41f65e:	lea    r8,[rip+0x29c0e]        # 0x449273
  41f665:	lea    rax,[rip+0x29b2b]        # 0x449197
  41f66c:	lea    r10,[rip+0x2aed5]        # 0x44a548
  41f673:	lea    r11,[rip+0x2aee0]        # 0x44a55a
  41f67a:	lea    r9,[rip+0x2aad4]        # 0x44a155
  41f681:	mov    QWORD PTR [rsp+0x138],rdx
  41f689:	mov    QWORD PTR [rsp+0x100],rdx
  41f691:	mov    QWORD PTR [rsp+0xd8],rdx
  41f699:	lea    rdx,[rip+0x2ae96]        # 0x44a536
  41f6a0:	mov    QWORD PTR [rsp+0x130],r8
  41f6a8:	mov    QWORD PTR [rsp+0x128],rax
  41f6b0:	mov    QWORD PTR [rsp+0xf8],r8
  41f6b8:	lea    rax,[rip+0x2ae4d]        # 0x44a50c
  41f6bf:	mov    QWORD PTR [rsp+0xc0],rdx
  41f6c7:	lea    rdx,[rip+0x2a323]        # 0x4499f1
  41f6ce:	lea    r8,[rip+0x2ae50]        # 0x44a525
  41f6d5:	mov    QWORD PTR [rsp+0x120],rax
  41f6dd:	mov    QWORD PTR [rsp+0x118],rax
  41f6e5:	mov    QWORD PTR [rsp+0xa0],rdx
  41f6ed:	lea    rdx,[rip+0x2ae4a]        # 0x44a53e
  41f6f4:	mov    QWORD PTR [rsp+0x110],rax
  41f6fc:	mov    QWORD PTR [rsp+0x108],rax
  41f704:	mov    QWORD PTR [rsp+0xe8],r8
  41f70c:	lea    rax,[rip+0x2ae06]        # 0x44a519
  41f713:	mov    QWORD PTR [rsp+0x90],rdx
  41f71b:	mov    QWORD PTR [rsp+0x68],rdx
  41f720:	lea    rdx,[rip+0x2ae3d]        # 0x44a564
  41f727:	mov    QWORD PTR [rsp+0xd0],r8
  41f72f:	lea    r8,[rip+0x2993b]        # 0x449071
  41f736:	mov    QWORD PTR [rsp+0xf0],rax
  41f73e:	mov    QWORD PTR [rsp+0x58],rdx
  41f743:	lea    rdx,[rip+0x29a42]        # 0x44918c
  41f74a:	mov    QWORD PTR [rsp+0xe0],rax
  41f752:	mov    QWORD PTR [rsp+0xc8],rax
  41f75a:	mov    QWORD PTR [rsp+0xb8],rax
  41f762:	mov    QWORD PTR [rsp+0x50],rdx
  41f767:	lea    rdx,[rip+0x29a33]        # 0x4491a1
  41f76e:	mov    QWORD PTR [rsp+0xb0],rax
  41f776:	mov    QWORD PTR [rsp+0xa8],rax
  41f77e:	mov    QWORD PTR [rsp+0x98],rax
  41f786:	mov    QWORD PTR [rsp+0x40],rdx
  41f78b:	lea    rdx,[rip+0x2adea]        # 0x44a57c
  41f792:	mov    QWORD PTR [rsp+0x88],rax
  41f79a:	mov    QWORD PTR [rsp+0x80],rax
  41f7a2:	mov    QWORD PTR [rsp+0x78],r10
  41f7a7:	mov    QWORD PTR [rsp+0x70],r11
  41f7ac:	mov    QWORD PTR [rsp+0x60],rax
  41f7b1:	mov    QWORD PTR [rsp+0x48],r8
  41f7b6:	mov    QWORD PTR [rsp+0x38],r8
  41f7bb:	mov    QWORD PTR [rsp+0x30],rdx
  41f7c0:	lea    rdx,[rip+0x2a999]        # 0x44a160
  41f7c7:	mov    QWORD PTR [rsp+0x28],rax
  41f7cc:	mov    QWORD PTR [rsp+0x20],r8
  41f7d1:	call   0x427dd8
  41f7d6:	nop
  41f7d7:	add    rsp,0x148
  41f7de:	ret    
  41f7df:	nop
  41f7e0:	sub    rsp,0xf8
  41f7e7:	lea    rax,[rip+0x29bd0]        # 0x4493be
  41f7ee:	lea    rdx,[rip+0x29be1]        # 0x4493d6
  41f7f5:	lea    r10,[rip+0x2999b]        # 0x449197
  41f7fc:	lea    r9,[rip+0x29963]        # 0x449166
  41f803:	lea    r8,[rip+0x29867]        # 0x449071
  41f80a:	lea    r11,[rip+0x29990]        # 0x4491a1
  41f811:	mov    QWORD PTR [rsp+0xe0],rax
  41f819:	mov    QWORD PTR [rsp+0xd8],rax
  41f821:	mov    QWORD PTR [rsp+0xc8],rax
  41f829:	lea    rax,[rip+0x2afa9]        # 0x44a7d9
  41f830:	mov    QWORD PTR [rsp+0xd0],rdx
  41f838:	lea    rdx,[rip+0x29917]        # 0x449156
  41f83f:	mov    QWORD PTR [rsp+0x80],r10
  41f847:	lea    r10,[rip+0x2a907]        # 0x44a155
  41f84e:	mov    QWORD PTR [rsp+0xc0],rax
  41f856:	lea    rax,[rip+0x2af88]        # 0x44a7e5
  41f85d:	mov    QWORD PTR [rsp+0x58],r11
  41f862:	mov    QWORD PTR [rsp+0xa0],rdx
  41f86a:	mov    QWORD PTR [rsp+0x78],rdx
  41f86f:	mov    QWORD PTR [rsp+0xb8],rax
  41f877:	lea    rax,[rip+0x2ace6]        # 0x44a564
  41f87e:	mov    QWORD PTR [rsp+0x50],rdx
  41f883:	mov    QWORD PTR [rsp+0x28],rdx
  41f888:	lea    rdx,[rip+0x2ad01]        # 0x44a590
  41f88f:	mov    QWORD PTR [rsp+0x40],r9
  41f894:	mov    QWORD PTR [rsp+0xb0],rax
  41f89c:	lea    rax,[rip+0x298e9]        # 0x44918c
  41f8a3:	mov    QWORD PTR [rsp+0x38],r8
  41f8a8:	mov    QWORD PTR [rsp+0x30],r10
  41f8ad:	mov    QWORD PTR [rsp+0x90],r9
  41f8b5:	mov    QWORD PTR [rsp+0xa8],rax
  41f8bd:	lea    rax,[rip+0x2989a]        # 0x44915e
  41f8c4:	mov    QWORD PTR [rsp+0x88],r8
  41f8cc:	mov    QWORD PTR [rsp+0x68],r9
  41f8d1:	mov    QWORD PTR [rsp+0x60],r8
  41f8d6:	mov    QWORD PTR [rsp+0x48],rax
  41f8db:	mov    QWORD PTR [rsp+0x20],rax
  41f8e0:	mov    QWORD PTR [rsp+0x98],rax
  41f8e8:	mov    QWORD PTR [rsp+0x70],rax
  41f8ed:	call   0x427dd8
  41f8f2:	nop
  41f8f3:	add    rsp,0xf8
  41f8fa:	ret    
  41f8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f900:	sub    rsp,0x48
  41f904:	lea    r8,[rip+0x2aef3]        # 0x44a7fe
  41f90b:	lea    rax,[rip+0x2988f]        # 0x4491a1
  41f912:	lea    r9,[rip+0x2aedb]        # 0x44a7f4
  41f919:	lea    rdx,[rip+0x2aef0]        # 0x44a810
  41f920:	mov    QWORD PTR [rsp+0x38],rax
  41f925:	mov    QWORD PTR [rsp+0x30],r8
  41f92a:	mov    QWORD PTR [rsp+0x28],r9
  41f92f:	mov    QWORD PTR [rsp+0x20],r8
  41f934:	call   0x427dd8
  41f939:	nop
  41f93a:	add    rsp,0x48
  41f93e:	ret    
  41f93f:	nop
  41f940:	sub    rsp,0x78
  41f944:	lea    rax,[rip+0x29a91]        # 0x4493dc
  41f94b:	lea    rdx,[rip+0x29a84]        # 0x4493d6
  41f952:	lea    r8,[rip+0x29718]        # 0x449071
  41f959:	lea    r9,[rip+0x29841]        # 0x4491a1
  41f960:	mov    QWORD PTR [rsp+0x68],rax
  41f965:	lea    rax,[rip+0x2a02e]        # 0x44999a
  41f96c:	mov    QWORD PTR [rsp+0x40],rdx
  41f971:	lea    rdx,[rip+0x2af00]        # 0x44a878
  41f978:	mov    QWORD PTR [rsp+0x58],r8
  41f97d:	mov    QWORD PTR [rsp+0x48],r8
  41f982:	mov    QWORD PTR [rsp+0x60],rax
  41f987:	lea    rax,[rip+0x2b007]        # 0x44a995
  41f98e:	mov    QWORD PTR [rsp+0x30],r8
  41f993:	mov    QWORD PTR [rsp+0x20],r8
  41f998:	mov    QWORD PTR [rsp+0x50],rax
  41f99d:	mov    QWORD PTR [rsp+0x38],rax
  41f9a2:	lea    rax,[rip+0x2affe]        # 0x44a9a7
  41f9a9:	mov    QWORD PTR [rsp+0x28],rax
  41f9ae:	call   0x427dd8
  41f9b3:	nop
  41f9b4:	add    rsp,0x78
  41f9b8:	ret    
  41f9b9:	nop    DWORD PTR [rax+0x0]
  41f9c0:	sub    rsp,0x38
  41f9c4:	lea    rax,[rip+0x297cc]        # 0x449197
  41f9cb:	lea    r8,[rip+0x2969f]        # 0x449071
  41f9d2:	lea    r9,[rip+0x297c8]        # 0x4491a1
  41f9d9:	lea    rdx,[rip+0x2afd8]        # 0x44a9b8
  41f9e0:	mov    QWORD PTR [rsp+0x28],rax
  41f9e5:	mov    QWORD PTR [rsp+0x20],r8
  41f9ea:	call   0x427dd8
  41f9ef:	nop
  41f9f0:	add    rsp,0x38
  41f9f4:	ret    
  41f9f5:	nop
  41f9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa00:	lea    r9,[rip+0x29790]        # 0x449197
  41fa07:	lea    r8,[rip+0x2b005]        # 0x44aa13
  41fa0e:	lea    rdx,[rip+0x2b013]        # 0x44aa28
  41fa15:	jmp    0x427dd8
  41fa1a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa20:	sub    rsp,0xf8
  41fa27:	lea    rdx,[rip+0x299ae]        # 0x4493dc
  41fa2e:	lea    rax,[rip+0x29762]        # 0x449197
  41fa35:	lea    r8,[rip+0x2aae9]        # 0x44a525
  41fa3c:	lea    r9,[rip+0x29993]        # 0x4493d6
  41fa43:	lea    r10,[rip+0x2aaec]        # 0x44a536
  41fa4a:	lea    r11,[rip+0x2ab13]        # 0x44a564
  41fa51:	mov    QWORD PTR [rsp+0xe0],rdx
  41fa59:	mov    QWORD PTR [rsp+0x68],rdx
  41fa5e:	lea    rdx,[rip+0x29f35]        # 0x44999a
  41fa65:	mov    QWORD PTR [rsp+0xd8],rax
  41fa6d:	lea    rax,[rip+0x2af21]        # 0x44a995
  41fa74:	mov    QWORD PTR [rsp+0xa8],r8
  41fa7c:	mov    QWORD PTR [rsp+0x60],rdx
  41fa81:	lea    rdx,[rip+0x29704]        # 0x44918c
  41fa88:	mov    QWORD PTR [rsp+0x90],r8
  41fa90:	mov    QWORD PTR [rsp+0xd0],rax
  41fa98:	mov    QWORD PTR [rsp+0xc0],rax
  41faa0:	lea    rax,[rip+0x2b266]        # 0x44ad0d
  41faa7:	mov    QWORD PTR [rsp+0x50],rdx
  41faac:	lea    rdx,[rip+0x296ee]        # 0x4491a1
  41fab3:	lea    r8,[rip+0x295b7]        # 0x449071
  41faba:	mov    QWORD PTR [rsp+0xb8],rax
  41fac2:	lea    rax,[rip+0x2aa50]        # 0x44a519
  41fac9:	mov    QWORD PTR [rsp+0xc8],r9
  41fad1:	mov    QWORD PTR [rsp+0x40],rdx
  41fad6:	lea    rdx,[rip+0x2aa9f]        # 0x44a57c
  41fadd:	mov    QWORD PTR [rsp+0x98],r9
  41fae5:	lea    r9,[rip+0x2a669]        # 0x44a155
  41faec:	mov    QWORD PTR [rsp+0x58],r8
  41faf1:	mov    QWORD PTR [rsp+0x48],r8
  41faf6:	mov    QWORD PTR [rsp+0x30],rdx
  41fafb:	lea    rdx,[rip+0x2af4e]        # 0x44aa50
  41fb02:	mov    QWORD PTR [rsp+0x38],r8
  41fb07:	mov    QWORD PTR [rsp+0x28],rax
  41fb0c:	mov    QWORD PTR [rsp+0x20],r8
  41fb11:	mov    QWORD PTR [rsp+0xb0],rax
  41fb19:	mov    QWORD PTR [rsp+0xa0],rax
  41fb21:	mov    QWORD PTR [rsp+0x88],rax
  41fb29:	mov    QWORD PTR [rsp+0x80],r10
  41fb31:	mov    QWORD PTR [rsp+0x78],rax
  41fb36:	mov    QWORD PTR [rsp+0x70],r11
  41fb3b:	call   0x427dd8
  41fb40:	nop
  41fb41:	add    rsp,0xf8
  41fb48:	ret    
  41fb49:	nop    DWORD PTR [rax+0x0]
  41fb50:	sub    rsp,0x58
  41fb54:	lea    rax,[rip+0x29631]        # 0x44918c
  41fb5b:	lea    rdx,[rip+0x29635]        # 0x449197
  41fb62:	lea    r9,[rip+0x2a45f]        # 0x449fc8
  41fb69:	lea    r8,[rip+0x29501]        # 0x449071
  41fb70:	mov    QWORD PTR [rsp+0x48],rax
  41fb75:	lea    rax,[rip+0x2a441]        # 0x449fbd
  41fb7c:	mov    QWORD PTR [rsp+0x28],rdx
  41fb81:	lea    rdx,[rip+0x2b190]        # 0x44ad18
  41fb88:	mov    QWORD PTR [rsp+0x38],r9
  41fb8d:	mov    QWORD PTR [rsp+0x30],r8
  41fb92:	mov    QWORD PTR [rsp+0x40],rax
  41fb97:	mov    QWORD PTR [rsp+0x20],rax
  41fb9c:	call   0x427dd8
  41fba1:	nop
  41fba2:	add    rsp,0x58
  41fba6:	ret    
  41fba7:	nop    WORD PTR [rax+rax*1+0x0]
  41fbb0:	sub    rsp,0x68
  41fbb4:	lea    rax,[rip+0x295d1]        # 0x44918c
  41fbbb:	lea    r9,[rip+0x2a3ee]        # 0x449fb0
  41fbc2:	lea    r8,[rip+0x294a8]        # 0x449071
  41fbc9:	lea    rdx,[rip+0x2b1d0]        # 0x44ada0
  41fbd0:	mov    QWORD PTR [rsp+0x50],rax
  41fbd5:	lea    rax,[rip+0x295bb]        # 0x449197
  41fbdc:	mov    QWORD PTR [rsp+0x48],r9
  41fbe1:	mov    QWORD PTR [rsp+0x40],r8
  41fbe6:	mov    QWORD PTR [rsp+0x30],r9
  41fbeb:	mov    QWORD PTR [rsp+0x38],rax
  41fbf0:	lea    rax,[rip+0x295aa]        # 0x4491a1
  41fbf7:	mov    QWORD PTR [rsp+0x28],r8
  41fbfc:	mov    QWORD PTR [rsp+0x20],rax
  41fc01:	call   0x427dd8
  41fc06:	nop
  41fc07:	add    rsp,0x68
  41fc0b:	ret    
  41fc0c:	nop    DWORD PTR [rax+0x0]
  41fc10:	sub    rsp,0x108
  41fc17:	lea    rax,[rip+0x2956e]        # 0x44918c
  41fc1e:	lea    r10,[rip+0x2b3c0]        # 0x44afe5
  41fc25:	lea    rdx,[rip+0x2b3c8]        # 0x44aff4
  41fc2c:	lea    r11,[rip+0x2b3d1]        # 0x44b004
  41fc33:	lea    r9,[rip+0x2a376]        # 0x449fb0
  41fc3a:	lea    r8,[rip+0x29430]        # 0x449071
  41fc41:	mov    QWORD PTR [rsp+0xf0],rax
  41fc49:	lea    rax,[rip+0x29547]        # 0x449197
  41fc50:	mov    QWORD PTR [rsp+0x98],r10
  41fc58:	mov    QWORD PTR [rsp+0x48],r10
  41fc5d:	lea    r10,[rip+0x2b3ae]        # 0x44b012
  41fc64:	mov    QWORD PTR [rsp+0x80],rdx
  41fc6c:	mov    QWORD PTR [rsp+0xd8],rax
  41fc74:	lea    rax,[rip+0x29526]        # 0x4491a1
  41fc7b:	mov    QWORD PTR [rsp+0x68],r11
  41fc80:	mov    QWORD PTR [rsp+0x20],rdx
  41fc85:	lea    r11,[rip+0x2a354]        # 0x449fe0
  41fc8c:	lea    rdx,[rip+0x2b19d]        # 0x44ae30
  41fc93:	mov    QWORD PTR [rsp+0xc0],rax
  41fc9b:	lea    rax,[rip+0x2b33b]        # 0x44afdd
  41fca2:	mov    QWORD PTR [rsp+0x40],r10
  41fca7:	mov    QWORD PTR [rsp+0xe8],r9
  41fcaf:	mov    QWORD PTR [rsp+0xe0],r8
  41fcb7:	mov    QWORD PTR [rsp+0xa8],rax
  41fcbf:	mov    QWORD PTR [rsp+0xa0],rax
  41fcc7:	mov    QWORD PTR [rsp+0x90],rax
  41fccf:	mov    QWORD PTR [rsp+0x88],rax
  41fcd7:	mov    QWORD PTR [rsp+0x58],rax
  41fcdc:	mov    QWORD PTR [rsp+0x50],rax
  41fce1:	mov    QWORD PTR [rsp+0x38],rax
  41fce6:	mov    QWORD PTR [rsp+0x30],rax
  41fceb:	lea    rax,[rip+0x2a2e0]        # 0x449fd2
  41fcf2:	mov    QWORD PTR [rsp+0xd0],r9
  41fcfa:	mov    QWORD PTR [rsp+0xc8],r8
  41fd02:	mov    QWORD PTR [rsp+0x28],rax
  41fd07:	mov    QWORD PTR [rsp+0xb8],r9
  41fd0f:	mov    QWORD PTR [rsp+0xb0],r8
  41fd17:	mov    QWORD PTR [rsp+0x78],r9
  41fd1c:	mov    QWORD PTR [rsp+0x70],r8
  41fd21:	mov    QWORD PTR [rsp+0x60],r11
  41fd26:	call   0x427dd8
  41fd2b:	nop
  41fd2c:	add    rsp,0x108
  41fd33:	ret    
  41fd34:	xchg   ax,ax
  41fd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd40:	sub    rsp,0xb8
  41fd47:	lea    rax,[rip+0x2b53b]        # 0x44b289
  41fd4e:	lea    rdx,[rip+0x29669]        # 0x4493be
  41fd55:	lea    r8,[rip+0x29315]        # 0x449071
  41fd5c:	lea    r10,[rip+0x29673]        # 0x4493d6
  41fd63:	lea    r9,[rip+0x29509]        # 0x449273
  41fd6a:	mov    QWORD PTR [rsp+0xa8],rax
  41fd72:	mov    QWORD PTR [rsp+0x90],rax
  41fd7a:	mov    QWORD PTR [rsp+0x78],rax
  41fd7f:	mov    QWORD PTR [rsp+0x58],rax
  41fd84:	lea    rax,[rip+0x29416]        # 0x4491a1
  41fd8b:	mov    QWORD PTR [rsp+0x98],rdx
  41fd93:	mov    QWORD PTR [rsp+0x80],rdx
  41fd9b:	mov    QWORD PTR [rsp+0x48],rax
  41fda0:	lea    rax,[rip+0x2b4f0]        # 0x44b297
  41fda7:	mov    QWORD PTR [rsp+0x60],rdx
  41fdac:	lea    rdx,[rip+0x2b275]        # 0x44b028
  41fdb3:	mov    QWORD PTR [rsp+0x88],r8
  41fdbb:	mov    QWORD PTR [rsp+0x70],r8
  41fdc0:	mov    QWORD PTR [rsp+0x38],rax
  41fdc5:	lea    rax,[rip+0x2b4d5]        # 0x44b2a1
  41fdcc:	mov    QWORD PTR [rsp+0x68],r10
  41fdd1:	mov    QWORD PTR [rsp+0x50],r8
  41fdd6:	mov    QWORD PTR [rsp+0x40],r8
  41fddb:	mov    QWORD PTR [rsp+0x30],rax
  41fde0:	lea    rax,[rip+0x29604]        # 0x4493eb
  41fde7:	mov    QWORD PTR [rsp+0xa0],r8
  41fdef:	mov    QWORD PTR [rsp+0x28],rax
  41fdf4:	lea    rax,[rip+0x295fa]        # 0x4493f5
  41fdfb:	mov    QWORD PTR [rsp+0x20],rax
  41fe00:	call   0x427dd8
  41fe05:	nop
  41fe06:	add    rsp,0xb8
  41fe0d:	ret    
  41fe0e:	xchg   ax,ax
  41fe10:	sub    rsp,0x38
  41fe14:	lea    rax,[rip+0x29386]        # 0x4491a1
  41fe1b:	lea    r9,[rip+0x2b488]        # 0x44b2aa
  41fe22:	lea    r8,[rip+0x29248]        # 0x449071
  41fe29:	lea    rdx,[rip+0x2b488]        # 0x44b2b8
  41fe30:	mov    QWORD PTR [rsp+0x20],rax
  41fe35:	call   0x427dd8
  41fe3a:	nop
  41fe3b:	add    rsp,0x38
  41fe3f:	ret    
  41fe40:	sub    rsp,0x38
  41fe44:	lea    rax,[rip+0x2934c]        # 0x449197
  41fe4b:	lea    r8,[rip+0x2921f]        # 0x449071
  41fe52:	lea    r9,[rip+0x29348]        # 0x4491a1
  41fe59:	lea    rdx,[rip+0x2b480]        # 0x44b2e0
  41fe60:	mov    QWORD PTR [rsp+0x28],rax
  41fe65:	mov    QWORD PTR [rsp+0x20],r8
  41fe6a:	call   0x427dd8
  41fe6f:	nop
  41fe70:	add    rsp,0x38
  41fe74:	ret    
  41fe75:	nop
  41fe76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe80:	sub    rsp,0x98
  41fe87:	lea    rax,[rip+0x292fe]        # 0x44918c
  41fe8e:	lea    r8,[rip+0x291dc]        # 0x449071
  41fe95:	lea    r9,[rip+0x2b47d]        # 0x44b319
  41fe9c:	lea    rdx,[rip+0x2b485]        # 0x44b328
  41fea3:	mov    QWORD PTR [rsp+0x80],rax
  41feab:	lea    rax,[rip+0x292ef]        # 0x4491a1
  41feb2:	mov    QWORD PTR [rsp+0x78],r8
  41feb7:	mov    QWORD PTR [rsp+0x68],r8
  41febc:	mov    QWORD PTR [rsp+0x58],r8
  41fec1:	mov    QWORD PTR [rsp+0x70],rax
  41fec6:	lea    rax,[rip+0x292ca]        # 0x449197
  41fecd:	mov    QWORD PTR [rsp+0x60],rax
  41fed2:	lea    rax,[rip+0x2a640]        # 0x44a519
  41fed9:	mov    QWORD PTR [rsp+0x50],rax
  41fede:	lea    rax,[rip+0x2b3c5]        # 0x44b2aa
  41fee5:	mov    QWORD PTR [rsp+0x48],rax
  41feea:	lea    rax,[rip+0x2b5b4]        # 0x44b4a5
  41fef1:	mov    QWORD PTR [rsp+0x40],rax
  41fef6:	lea    rax,[rip+0x2b5ae]        # 0x44b4ab
  41fefd:	mov    QWORD PTR [rsp+0x38],rax
  41ff02:	lea    rax,[rip+0x2b5aa]        # 0x44b4b3
  41ff09:	mov    QWORD PTR [rsp+0x30],rax
  41ff0e:	lea    rax,[rip+0x2b5a4]        # 0x44b4b9
  41ff15:	mov    QWORD PTR [rsp+0x28],rax
  41ff1a:	lea    rax,[rip+0x2b5a1]        # 0x44b4c2
  41ff21:	mov    QWORD PTR [rsp+0x20],rax
  41ff26:	call   0x427dd8
  41ff2b:	nop
  41ff2c:	add    rsp,0x98
  41ff33:	ret    
  41ff34:	xchg   ax,ax
  41ff36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff40:	sub    rsp,0x58
  41ff44:	lea    rax,[rip+0x29256]        # 0x4491a1
  41ff4b:	lea    r8,[rip+0x2911f]        # 0x449071
  41ff52:	lea    r9,[rip+0x29d10]        # 0x449c69
  41ff59:	lea    rdx,[rip+0x2b570]        # 0x44b4d0
  41ff60:	mov    QWORD PTR [rsp+0x48],rax
  41ff65:	lea    rax,[rip+0x2922b]        # 0x449197
  41ff6c:	mov    QWORD PTR [rsp+0x40],r8
  41ff71:	mov    QWORD PTR [rsp+0x30],r8
  41ff76:	mov    QWORD PTR [rsp+0x38],rax
  41ff7b:	lea    rax,[rip+0x29454]        # 0x4493d6
  41ff82:	mov    QWORD PTR [rsp+0x28],rax
  41ff87:	lea    rax,[rip+0x292e5]        # 0x449273
  41ff8e:	mov    QWORD PTR [rsp+0x20],rax
  41ff93:	call   0x427dd8
  41ff98:	nop
  41ff99:	add    rsp,0x58
  41ff9d:	ret    
  41ff9e:	xchg   ax,ax
  41ffa0:	sub    rsp,0x38
  41ffa4:	lea    r8,[rip+0x29413]        # 0x4493be
  41ffab:	lea    r9,[rip+0x29424]        # 0x4493d6
  41ffb2:	lea    rdx,[rip+0x2b5af]        # 0x44b568
  41ffb9:	mov    QWORD PTR [rsp+0x28],r8
  41ffbe:	mov    QWORD PTR [rsp+0x20],r9
  41ffc3:	call   0x427dd8
  41ffc8:	nop
  41ffc9:	add    rsp,0x38
  41ffcd:	ret    
  41ffce:	xchg   ax,ax
  41ffd0:	sub    rsp,0x218
  41ffd7:	lea    rax,[rip+0x2ad2f]        # 0x44ad0d
  41ffde:	lea    r9,[rip+0x2bd3a]        # 0x44bd1f
  41ffe5:	lea    r10,[rip+0x293ea]        # 0x4493d6
  41ffec:	lea    r11,[rip+0x2bcfd]        # 0x44bcf0
  41fff3:	lea    rdx,[rip+0x29b9b]        # 0x449b95
  41fffa:	lea    r8,[rip+0x293db]        # 0x4493dc
  420001:	mov    QWORD PTR [rsp+0x200],rax
  420009:	mov    QWORD PTR [rsp+0x1e8],rax
  420011:	mov    QWORD PTR [rsp+0x1a0],rax
  420019:	lea    rax,[rip+0x2bd0c]        # 0x44bd2c
  420020:	mov    QWORD PTR [rsp+0x1f0],r11
  420028:	mov    QWORD PTR [rsp+0x1c8],r9
  420030:	mov    QWORD PTR [rsp+0x1c0],r9
  420038:	lea    r11,[rip+0x29158]        # 0x449197
  42003f:	mov    QWORD PTR [rsp+0x198],rax
  420047:	mov    QWORD PTR [rsp+0x190],rax
  42004f:	lea    r9,[rip+0x2a93f]        # 0x44a995
  420056:	mov    QWORD PTR [rsp+0x188],rax
  42005e:	mov    QWORD PTR [rsp+0x180],rax
  420066:	lea    rax,[rip+0x2a49f]        # 0x44a50c
  42006d:	mov    QWORD PTR [rsp+0x1b0],r10
  420075:	mov    QWORD PTR [rsp+0x118],r10
  42007d:	lea    r10,[rip+0x2a4b2]        # 0x44a536
  420084:	mov    QWORD PTR [rsp+0x178],rax
  42008c:	mov    QWORD PTR [rsp+0x170],rax
  420094:	mov    QWORD PTR [rsp+0x168],rax
  42009c:	mov    QWORD PTR [rsp+0x160],rax
  4200a4:	lea    rax,[rip+0x2bc93]        # 0x44bd3e
  4200ab:	mov    QWORD PTR [rsp+0x1d8],r11
  4200b3:	mov    QWORD PTR [rsp+0x1b8],r9
  4200bb:	lea    r11,[rip+0x2bc53]        # 0x44bd15
  4200c2:	mov    QWORD PTR [rsp+0x140],rax
  4200ca:	lea    rax,[rip+0x2bc8a]        # 0x44bd5b
  4200d1:	mov    QWORD PTR [rsp+0x1a8],r9
  4200d9:	mov    QWORD PTR [rsp+0x100],r10
  4200e1:	lea    r9,[rip+0x2a43d]        # 0x44a525
  4200e8:	lea    r10,[rip+0x2a46b]        # 0x44a55a
  4200ef:	mov    QWORD PTR [rsp+0x138],rax
  4200f7:	lea    rax,[rip+0x2a41b]        # 0x44a519
  4200fe:	mov    QWORD PTR [rsp+0x1f8],rdx
  420106:	mov    QWORD PTR [rsp+0x1e0],r8
  42010e:	mov    QWORD PTR [rsp+0x1d0],r11
  420116:	lea    r11,[rip+0x2a42b]        # 0x44a548
  42011d:	mov    QWORD PTR [rsp+0x158],rdx
  420125:	mov    QWORD PTR [rsp+0x150],rdx
  42012d:	mov    QWORD PTR [rsp+0x148],rdx
  420135:	mov    QWORD PTR [rsp+0x130],rax
  42013d:	mov    QWORD PTR [rsp+0x128],r9
  420145:	mov    QWORD PTR [rsp+0x120],rax
  42014d:	mov    QWORD PTR [rsp+0x110],r9
  420155:	mov    QWORD PTR [rsp+0x108],rax
  42015d:	lea    r9,[rip+0x2988d]        # 0x4499f1
  420164:	mov    QWORD PTR [rsp+0xf8],rax
  42016c:	mov    QWORD PTR [rsp+0xc8],r10
  420174:	mov    QWORD PTR [rsp+0xa0],r10
  42017c:	lea    r10,[rip+0x2a3e1]        # 0x44a564
  420183:	mov    QWORD PTR [rsp+0xe0],r9
  42018b:	mov    QWORD PTR [rsp+0xd0],r9
  420193:	mov    QWORD PTR [rsp+0xa8],r11
  42019b:	lea    r9,[rip+0x2a39c]        # 0x44a53e
  4201a2:	mov    QWORD PTR [rsp+0x88],r10
  4201aa:	lea    r10,[rip+0x28fdb]        # 0x44918c
  4201b1:	mov    QWORD PTR [rsp+0x40],rdx
  4201b6:	lea    r11,[rip+0x297dd]        # 0x44999a
  4201bd:	lea    rdx,[rip+0x2a3b8]        # 0x44a57c
  4201c4:	mov    QWORD PTR [rsp+0x80],r8
  4201cc:	mov    QWORD PTR [rsp+0x68],r10
  4201d1:	lea    r8,[rip+0x28e99]        # 0x449071
  4201d8:	lea    r10,[rip+0x299c6]        # 0x449ba5
  4201df:	mov    QWORD PTR [rsp+0xc0],r9
  4201e7:	mov    QWORD PTR [rsp+0x98],r9
  4201ef:	lea    r9,[rip+0x29f5f]        # 0x44a155
  4201f6:	mov    QWORD PTR [rsp+0x78],r11
  4201fb:	mov    QWORD PTR [rsp+0x30],rdx
  420200:	lea    r11,[rip+0x28f9a]        # 0x4491a1
  420207:	lea    rdx,[rip+0x2b3c2]        # 0x44b5d0
  42020e:	mov    QWORD PTR [rsp+0x48],r10
  420213:	mov    QWORD PTR [rsp+0x38],r8
  420218:	mov    QWORD PTR [rsp+0x28],rax
  42021d:	mov    QWORD PTR [rsp+0x20],r8
  420222:	mov    QWORD PTR [rsp+0xf0],rax
  42022a:	mov    QWORD PTR [rsp+0xe8],rax
  420232:	mov    QWORD PTR [rsp+0xd8],rax
  42023a:	mov    QWORD PTR [rsp+0xb8],rax
  420242:	mov    QWORD PTR [rsp+0xb0],rax
  42024a:	mov    QWORD PTR [rsp+0x90],rax
  420252:	mov    QWORD PTR [rsp+0x70],r8
  420257:	mov    QWORD PTR [rsp+0x60],r8
  42025c:	mov    QWORD PTR [rsp+0x58],r11
  420261:	mov    QWORD PTR [rsp+0x50],r8
  420266:	call   0x427dd8
  42026b:	nop
  42026c:	add    rsp,0x218
  420273:	ret    
  420274:	xchg   ax,ax
  420276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420280:	sub    rsp,0x68
  420284:	lea    rax,[rip+0x2bb7d]        # 0x44be08
  42028b:	lea    rdx,[rip+0x29144]        # 0x4493d6
  420292:	lea    r8,[rip+0x28dd8]        # 0x449071
  420299:	lea    r9,[rip+0x28f01]        # 0x4491a1
  4202a0:	mov    QWORD PTR [rsp+0x50],rax
  4202a5:	mov    QWORD PTR [rsp+0x38],rax
  4202aa:	lea    rax,[rip+0x28ee6]        # 0x449197
  4202b1:	mov    QWORD PTR [rsp+0x40],rdx
  4202b6:	lea    rdx,[rip+0x2bab3]        # 0x44bd70
  4202bd:	mov    QWORD PTR [rsp+0x48],r8
  4202c2:	mov    QWORD PTR [rsp+0x30],r8
  4202c7:	mov    QWORD PTR [rsp+0x28],rax
  4202cc:	mov    QWORD PTR [rsp+0x20],r8
  4202d1:	call   0x427dd8
  4202d6:	nop
  4202d7:	add    rsp,0x68
  4202db:	ret    
  4202dc:	nop    DWORD PTR [rax+0x0]
  4202e0:	sub    rsp,0xc8
  4202e7:	lea    rax,[rip+0x28e9e]        # 0x44918c
  4202ee:	lea    rdx,[rip+0x2bd5f]        # 0x44c054
  4202f5:	lea    r8,[rip+0x28d75]        # 0x449071
  4202fc:	lea    r9,[rip+0x2bb17]        # 0x44be1a
  420303:	mov    QWORD PTR [rsp+0xb0],rax
  42030b:	lea    rax,[rip+0x28e85]        # 0x449197
  420312:	mov    QWORD PTR [rsp+0x70],rdx
  420317:	mov    QWORD PTR [rsp+0x50],rdx
  42031c:	lea    rdx,[rip+0x2bb05]        # 0x44be28
  420323:	mov    QWORD PTR [rsp+0x88],r8
  42032b:	mov    QWORD PTR [rsp+0xa0],rax
  420333:	lea    rax,[rip+0x28e67]        # 0x4491a1
  42033a:	mov    QWORD PTR [rsp+0x80],r9
  420342:	mov    QWORD PTR [rsp+0x78],r8
  420347:	mov    QWORD PTR [rsp+0x60],r9
  42034c:	mov    QWORD PTR [rsp+0x90],rax
  420354:	lea    rax,[rip+0x2bd08]        # 0x44c063
  42035b:	mov    QWORD PTR [rsp+0x58],r8
  420360:	mov    QWORD PTR [rsp+0x40],r8
  420365:	mov    QWORD PTR [rsp+0x30],r9
  42036a:	mov    QWORD PTR [rsp+0x68],rax
  42036f:	mov    QWORD PTR [rsp+0x48],rax
  420374:	lea    rax,[rip+0x2bcf7]        # 0x44c072
  42037b:	mov    QWORD PTR [rsp+0x28],r8
  420380:	mov    QWORD PTR [rsp+0xa8],r8
  420388:	mov    QWORD PTR [rsp+0x38],rax
  42038d:	mov    QWORD PTR [rsp+0x20],rax
  420392:	mov    QWORD PTR [rsp+0x98],r8
  42039a:	call   0x427dd8
  42039f:	nop
  4203a0:	add    rsp,0xc8
  4203a7:	ret    
  4203a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4203b0:	sub    rsp,0x68
  4203b4:	lea    rax,[rip+0x28dd1]        # 0x44918c
  4203bb:	lea    r8,[rip+0x28caf]        # 0x449071
  4203c2:	lea    r9,[rip+0x28eaa]        # 0x449273
  4203c9:	lea    rdx,[rip+0x2bcb8]        # 0x44c088
  4203d0:	mov    QWORD PTR [rsp+0x50],rax
  4203d5:	lea    rax,[rip+0x28dbb]        # 0x449197
  4203dc:	mov    QWORD PTR [rsp+0x48],r8
  4203e1:	mov    QWORD PTR [rsp+0x38],r8
  4203e6:	mov    QWORD PTR [rsp+0x28],r8
  4203eb:	mov    QWORD PTR [rsp+0x40],rax
  4203f0:	lea    rax,[rip+0x28daa]        # 0x4491a1
  4203f7:	mov    QWORD PTR [rsp+0x30],rax
  4203fc:	lea    rax,[rip+0x28fd3]        # 0x4493d6
  420403:	mov    QWORD PTR [rsp+0x20],rax
  420408:	call   0x427dd8
  42040d:	nop
  42040e:	add    rsp,0x68
  420412:	ret    
  420413:	nop    DWORD PTR [rax]
  420416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420420:	sub    rsp,0x38
  420424:	lea    rax,[rip+0x28d61]        # 0x44918c
  42042b:	lea    r8,[rip+0x28c3f]        # 0x449071
  420432:	lea    r9,[rip+0x28d68]        # 0x4491a1
  420439:	lea    rdx,[rip+0x2bd10]        # 0x44c150
  420440:	mov    QWORD PTR [rsp+0x28],rax
  420445:	mov    QWORD PTR [rsp+0x20],r8
  42044a:	call   0x427dd8
  42044f:	nop
  420450:	add    rsp,0x38
  420454:	ret    
  420455:	nop
  420456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420460:	sub    rsp,0x38
  420464:	lea    rax,[rip+0x28d21]        # 0x44918c
  42046b:	lea    r8,[rip+0x28bff]        # 0x449071
  420472:	lea    r9,[rip+0x28d28]        # 0x4491a1
  420479:	lea    rdx,[rip+0x2bd28]        # 0x44c1a8
  420480:	mov    QWORD PTR [rsp+0x28],rax
  420485:	mov    QWORD PTR [rsp+0x20],r8
  42048a:	call   0x427dd8
  42048f:	nop
  420490:	add    rsp,0x38
  420494:	ret    
  420495:	nop
  420496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204a0:	sub    rsp,0x38
  4204a4:	lea    rax,[rip+0x28cf6]        # 0x4491a1
  4204ab:	lea    r9,[rip+0x2adf8]        # 0x44b2aa
  4204b2:	lea    r8,[rip+0x28bb8]        # 0x449071
  4204b9:	lea    rdx,[rip+0x2bd40]        # 0x44c200
  4204c0:	mov    QWORD PTR [rsp+0x20],rax
  4204c5:	call   0x427dd8
  4204ca:	nop
  4204cb:	add    rsp,0x38
  4204cf:	ret    
  4204d0:	sub    rsp,0xc8
  4204d7:	lea    rdx,[rip+0x2a060]        # 0x44a53e
  4204de:	lea    rax,[rip+0x2bf04]        # 0x44c3e9
  4204e5:	lea    r8,[rip+0x2a06e]        # 0x44a55a
  4204ec:	lea    r9,[rip+0x29c62]        # 0x44a155
  4204f3:	mov    QWORD PTR [rsp+0xb0],rdx
  4204fb:	mov    QWORD PTR [rsp+0x90],rdx
  420503:	lea    rdx,[rip+0x2a05a]        # 0x44a564
  42050a:	mov    QWORD PTR [rsp+0xb8],r8
  420512:	mov    QWORD PTR [rsp+0xa8],rax
  42051a:	mov    QWORD PTR [rsp+0x80],rdx
  420522:	lea    rdx,[rip+0x2becf]        # 0x44c3f8
  420529:	mov    QWORD PTR [rsp+0xa0],rax
  420531:	mov    QWORD PTR [rsp+0x98],r8
  420539:	mov    QWORD PTR [rsp+0x88],rax
  420541:	lea    r8,[rip+0x28b29]        # 0x449071
  420548:	mov    QWORD PTR [rsp+0x78],rdx
  42054d:	lea    rdx,[rip+0x2beb8]        # 0x44c40c
  420554:	mov    QWORD PTR [rsp+0x38],rax
  420559:	lea    rax,[rip+0x28c37]        # 0x449197
  420560:	mov    QWORD PTR [rsp+0x68],r8
  420565:	mov    QWORD PTR [rsp+0x58],r8
  42056a:	mov    QWORD PTR [rsp+0x70],rdx
  42056f:	lea    rdx,[rip+0x28c16]        # 0x44918c
  420576:	mov    QWORD PTR [rsp+0x48],r8
  42057b:	mov    QWORD PTR [rsp+0x30],r8
  420580:	mov    QWORD PTR [rsp+0x28],rax
  420585:	mov    QWORD PTR [rsp+0x60],rdx
  42058a:	lea    rdx,[rip+0x28c10]        # 0x4491a1
  420591:	mov    QWORD PTR [rsp+0x20],r8
  420596:	mov    QWORD PTR [rsp+0x50],rdx
  42059b:	lea    rdx,[rip+0x2be79]        # 0x44c41b
  4205a2:	mov    QWORD PTR [rsp+0x40],rdx
  4205a7:	lea    rdx,[rip+0x2bc7a]        # 0x44c228
  4205ae:	call   0x427dd8
  4205b3:	nop
  4205b4:	add    rsp,0xc8
  4205bb:	ret    
  4205bc:	nop    DWORD PTR [rax+0x0]
  4205c0:	sub    rsp,0x98
  4205c7:	lea    rax,[rip+0x28df0]        # 0x4493be
  4205ce:	lea    rdx,[rip+0x28e01]        # 0x4493d6
  4205d5:	lea    r8,[rip+0x28a95]        # 0x449071
  4205dc:	lea    r9,[rip+0x28c90]        # 0x449273
  4205e3:	mov    QWORD PTR [rsp+0x80],rax
  4205eb:	mov    QWORD PTR [rsp+0x70],rax
  4205f0:	mov    QWORD PTR [rsp+0x58],rax
  4205f5:	lea    rax,[rip+0x28ba5]        # 0x4491a1
  4205fc:	mov    QWORD PTR [rsp+0x60],rdx
  420601:	lea    rdx,[rip+0x2be28]        # 0x44c430
  420608:	mov    QWORD PTR [rsp+0x88],r8
  420610:	mov    QWORD PTR [rsp+0x78],r8
  420615:	mov    QWORD PTR [rsp+0x48],rax
  42061a:	lea    rax,[rip+0x2ac76]        # 0x44b297
  420621:	mov    QWORD PTR [rsp+0x68],r8
  420626:	mov    QWORD PTR [rsp+0x50],r8
  42062b:	mov    QWORD PTR [rsp+0x40],r8
  420630:	mov    QWORD PTR [rsp+0x38],rax
  420635:	lea    rax,[rip+0x2ac65]        # 0x44b2a1
  42063c:	mov    QWORD PTR [rsp+0x30],rax
  420641:	lea    rax,[rip+0x28da3]        # 0x4493eb
  420648:	mov    QWORD PTR [rsp+0x28],rax
  42064d:	lea    rax,[rip+0x28da1]        # 0x4493f5
  420654:	mov    QWORD PTR [rsp+0x20],rax
  420659:	call   0x427dd8
  42065e:	nop
  42065f:	add    rsp,0x98
  420666:	ret    
  420667:	nop    WORD PTR [rax+rax*1+0x0]
  420670:	sub    rsp,0x38
  420674:	lea    rax,[rip+0x28d5b]        # 0x4493d6
  42067b:	lea    r9,[rip+0x2bfa5]        # 0x44c627
  420682:	lea    r8,[rip+0x2a16b]        # 0x44a7f4
  420689:	lea    rdx,[rip+0x2bfa8]        # 0x44c638
  420690:	mov    QWORD PTR [rsp+0x28],rax
  420695:	lea    rax,[rip+0x28bd7]        # 0x449273
  42069c:	mov    QWORD PTR [rsp+0x20],rax
  4206a1:	call   0x427dd8
  4206a6:	nop
  4206a7:	add    rsp,0x38
  4206ab:	ret    
  4206ac:	nop    DWORD PTR [rax+0x0]
  4206b0:	sub    rsp,0x98
  4206b7:	lea    rax,[rip+0x2c162]        # 0x44c820
  4206be:	lea    rdx,[rip+0x2c16c]        # 0x44c831
  4206c5:	lea    r8,[rip+0x289a5]        # 0x449071
  4206cc:	lea    r9,[rip+0x29e46]        # 0x44a519
  4206d3:	mov    QWORD PTR [rsp+0x88],rax
  4206db:	mov    QWORD PTR [rsp+0x70],rax
  4206e0:	lea    rax,[rip+0x28aa5]        # 0x44918c
  4206e7:	mov    QWORD PTR [rsp+0x78],rdx
  4206ec:	lea    rdx,[rip+0x2bfcd]        # 0x44c6c0
  4206f3:	mov    QWORD PTR [rsp+0x80],r8
  4206fb:	mov    QWORD PTR [rsp+0x60],rax
  420700:	lea    rax,[rip+0x28a9a]        # 0x4491a1
  420707:	mov    QWORD PTR [rsp+0x68],r8
  42070c:	mov    QWORD PTR [rsp+0x58],r8
  420711:	mov    QWORD PTR [rsp+0x48],r8
  420716:	mov    QWORD PTR [rsp+0x50],rax
  42071b:	lea    rax,[rip+0x28a75]        # 0x449197
  420722:	mov    QWORD PTR [rsp+0x38],r8
  420727:	mov    QWORD PTR [rsp+0x30],r9
  42072c:	mov    QWORD PTR [rsp+0x28],r8
  420731:	mov    QWORD PTR [rsp+0x40],rax
  420736:	lea    rax,[rip+0x292b4]        # 0x4499f1
  42073d:	mov    QWORD PTR [rsp+0x20],rax
  420742:	call   0x427dd8
  420747:	nop
  420748:	add    rsp,0x98
  42074f:	ret    
  420750:	lea    r9,[rip+0x29dc2]        # 0x44a519
  420757:	lea    r8,[rip+0x2ab4c]        # 0x44b2aa
  42075e:	lea    rdx,[rip+0x2c0e3]        # 0x44c848
  420765:	jmp    0x427dd8
  42076a:	nop    WORD PTR [rax+rax*1+0x0]
  420770:	lea    r9,[rip+0x2c101]        # 0x44c878
  420777:	lea    r8,[rip+0x2c11c]        # 0x44c89a
  42077e:	lea    rdx,[rip+0x2c12b]        # 0x44c8b0
  420785:	jmp    0x427dd8
  42078a:	nop    WORD PTR [rax+rax*1+0x0]
  420790:	lea    rdx,[rip+0x2c1d7]        # 0x44c96e
  420797:	jmp    0x427dd8
  42079c:	nop    DWORD PTR [rax+0x0]
  4207a0:	lea    r8,[rip+0x288ca]        # 0x449071
  4207a7:	lea    rdx,[rip+0x2c1cb]        # 0x44c979
  4207ae:	jmp    0x427dd8
  4207b3:	nop    DWORD PTR [rax]
  4207b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4207c0:	lea    r9,[rip+0x2a546]        # 0x44ad0d
  4207c7:	lea    r8,[rip+0x2aadc]        # 0x44b2aa
  4207ce:	lea    rdx,[rip+0x2c1bb]        # 0x44c990
  4207d5:	jmp    0x427dd8
  4207da:	nop    WORD PTR [rax+rax*1+0x0]
  4207e0:	sub    rsp,0x1e8
  4207e7:	lea    r11,[rip+0x29d1e]        # 0x44a50c
  4207ee:	lea    rax,[rip+0x28979]        # 0x44916e
  4207f5:	lea    r9,[rip+0x2895a]        # 0x449156
  4207fc:	lea    r8,[rip+0x2895b]        # 0x44915e
  420803:	lea    rdx,[rip+0x2895c]        # 0x449166
  42080a:	lea    r10,[rip+0x2aa99]        # 0x44b2aa
  420811:	mov    QWORD PTR [rsp+0x168],r11
  420819:	lea    r11,[rip+0x2c505]        # 0x44cd25
  420820:	mov    QWORD PTR [rsp+0x190],rax
  420828:	lea    rax,[rip+0x2c4f1]        # 0x44cd20
  42082f:	mov    QWORD PTR [rsp+0x1d8],r9
  420837:	mov    QWORD PTR [rsp+0x1d0],r8
  42083f:	mov    QWORD PTR [rsp+0x110],r11
  420847:	lea    r11,[rip+0x29762]        # 0x449fb0
  42084e:	mov    QWORD PTR [rsp+0x1c8],rdx
  420856:	mov    QWORD PTR [rsp+0x188],rax
  42085e:	lea    rax,[rip+0x2973f]        # 0x449fa4
  420865:	mov    QWORD PTR [rsp+0x1c0],r9
  42086d:	mov    QWORD PTR [rsp+0xf8],r11
  420875:	mov    QWORD PTR [rsp+0xe8],r11
  42087d:	lea    r11,[rip+0x29739]        # 0x449fbd
  420884:	mov    QWORD PTR [rsp+0x1b8],r8
  42088c:	mov    QWORD PTR [rsp+0x1b0],rdx
  420894:	mov    QWORD PTR [rsp+0xd8],r11
  42089c:	lea    r11,[rip+0x29725]        # 0x449fc8
  4208a3:	mov    QWORD PTR [rsp+0x1a8],r9
  4208ab:	mov    QWORD PTR [rsp+0x1a0],r8
  4208b3:	mov    QWORD PTR [rsp+0x198],rdx
  4208bb:	mov    QWORD PTR [rsp+0x180],rax
  4208c3:	mov    QWORD PTR [rsp+0x178],rax
  4208cb:	mov    QWORD PTR [rsp+0x170],r10
  4208d3:	mov    QWORD PTR [rsp+0x160],rax
  4208db:	mov    QWORD PTR [rsp+0x158],rax
  4208e3:	mov    QWORD PTR [rsp+0x150],rax
  4208eb:	mov    QWORD PTR [rsp+0x148],rax
  4208f3:	mov    QWORD PTR [rsp+0x140],rax
  4208fb:	mov    QWORD PTR [rsp+0x138],rax
  420903:	mov    QWORD PTR [rsp+0x130],rax
  42090b:	mov    QWORD PTR [rsp+0x128],rax
  420913:	mov    QWORD PTR [rsp+0x120],rax
  42091b:	mov    QWORD PTR [rsp+0x118],r10
  420923:	mov    QWORD PTR [rsp+0x108],rax
  42092b:	mov    QWORD PTR [rsp+0x100],rax
  420933:	mov    QWORD PTR [rsp+0xf0],rax
  42093b:	mov    QWORD PTR [rsp+0xe0],rax
  420943:	mov    QWORD PTR [rsp+0xd0],r11
  42094b:	lea    r11,[rip+0x29680]        # 0x449fd2
  420952:	mov    QWORD PTR [rsp+0x98],rdx
  42095a:	lea    rdx,[rip+0x2967f]        # 0x449fe0
  420961:	mov    QWORD PTR [rsp+0xc0],rax
  420969:	mov    QWORD PTR [rsp+0xb0],rax
  420971:	mov    QWORD PTR [rsp+0x88],rax
  420979:	mov    QWORD PTR [rsp+0x90],rdx
  420981:	lea    rdx,[rip+0x2920d]        # 0x449b95
  420988:	mov    QWORD PTR [rsp+0x80],rax
  420990:	mov    QWORD PTR [rsp+0x78],rax
  420995:	mov    QWORD PTR [rsp+0x70],rax
  42099a:	mov    QWORD PTR [rsp+0x48],rdx
  42099f:	lea    rdx,[rip+0x29b73]        # 0x44a519
  4209a6:	mov    QWORD PTR [rsp+0x68],rax
  4209ab:	mov    QWORD PTR [rsp+0x60],rax
  4209b0:	mov    QWORD PTR [rsp+0x58],rax
  4209b5:	mov    QWORD PTR [rsp+0x30],rax
  4209ba:	lea    rax,[rip+0x2962d]        # 0x449fee
  4209c1:	mov    QWORD PTR [rsp+0x40],rdx
  4209c6:	lea    rdx,[rip+0x2c362]        # 0x44cd2f
  4209cd:	mov    QWORD PTR [rsp+0xc8],r11
  4209d5:	mov    QWORD PTR [rsp+0xa8],r9
  4209dd:	mov    QWORD PTR [rsp+0x28],rax
  4209e2:	lea    rax,[rip+0x29611]        # 0x449ffa
  4209e9:	lea    r11,[rip+0x2a023]        # 0x44aa13
  4209f0:	mov    QWORD PTR [rsp+0xa0],r8
  4209f8:	mov    QWORD PTR [rsp+0x38],rdx
  4209fd:	lea    r9,[rip+0x28659]        # 0x44905d
  420a04:	lea    r8,[rip+0x295fb]        # 0x44a006
  420a0b:	lea    rdx,[rip+0x2bfb6]        # 0x44c9c8
  420a12:	mov    QWORD PTR [rsp+0x50],r10
  420a17:	mov    QWORD PTR [rsp+0x20],rax
  420a1c:	mov    QWORD PTR [rsp+0xb8],r11
  420a24:	call   0x427dd8
  420a29:	nop
  420a2a:	add    rsp,0x1e8
  420a31:	ret    
  420a32:	nop    DWORD PTR [rax+0x0]
  420a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a40:	lea    rdx,[rip+0x2c2f6]        # 0x44cd3d
  420a47:	jmp    0x427dd8
  420a4c:	nop    DWORD PTR [rax+0x0]
  420a50:	lea    r8,[rip+0x2c304]        # 0x44cd5b
  420a57:	lea    rdx,[rip+0x2c30c]        # 0x44cd6a
  420a5e:	jmp    0x427dd8
  420a63:	nop    DWORD PTR [rax]
  420a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a70:	sub    rsp,0xd8
  420a77:	lea    rax,[rip+0x2c4d7]        # 0x44cf55
  420a7e:	lea    rdx,[rip+0x2c507]        # 0x44cf8c
  420a85:	lea    r9,[rip+0x29a8d]        # 0x44a519
  420a8c:	lea    r10,[rip+0x287e0]        # 0x449273
  420a93:	lea    r11,[rip+0x2c54b]        # 0x44cfe5
  420a9a:	lea    r8,[rip+0x2a809]        # 0x44b2aa
  420aa1:	mov    QWORD PTR [rsp+0xc8],rax
  420aa9:	lea    rax,[rip+0x2c4b3]        # 0x44cf63
  420ab0:	mov    QWORD PTR [rsp+0x90],rdx
  420ab8:	lea    rdx,[rip+0x2c4d9]        # 0x44cf98
  420abf:	mov    QWORD PTR [rsp+0x60],r10
  420ac4:	mov    QWORD PTR [rsp+0x48],r11
  420ac9:	mov    QWORD PTR [rsp+0xa8],rax
  420ad1:	lea    rax,[rip+0x2c49c]        # 0x44cf74
  420ad8:	mov    QWORD PTR [rsp+0x40],r9
  420add:	mov    QWORD PTR [rsp+0x88],rdx
  420ae5:	lea    rdx,[rip+0x2c4e8]        # 0x44cfd4
  420aec:	mov    QWORD PTR [rsp+0x38],r8
  420af1:	mov    QWORD PTR [rsp+0xa0],rax
  420af9:	lea    rax,[rip+0x2c484]        # 0x44cf84
  420b00:	mov    QWORD PTR [rsp+0x30],r10
  420b05:	mov    QWORD PTR [rsp+0x58],rdx
  420b0a:	mov    QWORD PTR [rsp+0x28],rdx
  420b0f:	lea    rdx,[rip+0x2c26a]        # 0x44cd80
  420b16:	mov    QWORD PTR [rsp+0x98],rax
  420b1e:	mov    QWORD PTR [rsp+0x80],rax
  420b26:	mov    QWORD PTR [rsp+0x78],rax
  420b2b:	lea    rax,[rip+0x2c47a]        # 0x44cfac
  420b32:	mov    QWORD PTR [rsp+0xc0],r9
  420b3a:	mov    QWORD PTR [rsp+0xb8],r9
  420b42:	mov    QWORD PTR [rsp+0xb0],r9
  420b4a:	mov    QWORD PTR [rsp+0x70],rax
  420b4f:	lea    rax,[rip+0x2c462]        # 0x44cfb8
  420b56:	mov    QWORD PTR [rsp+0x68],rax
  420b5b:	lea    rax,[rip+0x2c47a]        # 0x44cfdc
  420b62:	mov    QWORD PTR [rsp+0x50],rax
  420b67:	mov    QWORD PTR [rsp+0x20],rax
  420b6c:	call   0x427dd8
  420b71:	nop
  420b72:	add    rsp,0xd8
  420b79:	ret    
  420b7a:	nop    WORD PTR [rax+rax*1+0x0]
  420b80:	push   r15
  420b82:	push   r14
  420b84:	push   r13
  420b86:	push   r12
  420b88:	push   rbp
  420b89:	push   rdi
  420b8a:	push   rsi
  420b8b:	push   rbx
  420b8c:	sub    rsp,0x178
  420b93:	lea    rax,[rip+0x2c894]        # 0x44d42e
  420b9a:	lea    r15,[rip+0x2c843]        # 0x44d3e4
  420ba1:	lea    r14,[rip+0x2c84a]        # 0x44d3f2
  420ba8:	lea    r11,[rip+0x2c8b7]        # 0x44d466
  420baf:	lea    r10,[rip+0x2c8c0]        # 0x44d476
  420bb6:	lea    rdi,[rip+0x2c881]        # 0x44d43e
  420bbd:	mov    QWORD PTR [rsp+0x138],rax
  420bc5:	lea    rax,[rip+0x2c86b]        # 0x44d437
  420bcc:	lea    rsi,[rip+0x2c87d]        # 0x44d450
  420bd3:	lea    rbx,[rip+0x2c87c]        # 0x44d456
  420bda:	lea    r8,[rip+0x28490]        # 0x449071
  420be1:	lea    rdx,[rip+0x2c8b0]        # 0x44d498
  420be8:	mov    QWORD PTR [rsp+0x130],rax
  420bf0:	lea    rax,[rip+0x2c885]        # 0x44d47c
  420bf7:	lea    r9,[rip+0x28568]        # 0x449166
  420bfe:	mov    QWORD PTR [rsp+0x160],r15
  420c06:	mov    QWORD PTR [rsp+0x158],r14
  420c0e:	lea    r13,[rip+0x2c7f0]        # 0x44d405
  420c15:	mov    QWORD PTR [rsp+0x100],rax
  420c1d:	lea    rax,[rip+0x2c862]        # 0x44d486
  420c24:	lea    r12,[rip+0x2c7e1]        # 0x44d40c
  420c2b:	lea    rbp,[rip+0x2c7eb]        # 0x44d41d
  420c32:	mov    QWORD PTR [rsp+0x88],r15
  420c3a:	mov    QWORD PTR [rsp+0x80],r14
  420c42:	mov    QWORD PTR [rsp+0xf0],rax
  420c4a:	lea    r14,[rip+0x2c7dd]        # 0x44d42e
  420c51:	lea    rax,[rip+0x28506]        # 0x44915e
  420c58:	lea    r15,[rip+0x2c7d8]        # 0x44d437
  420c5f:	mov    QWORD PTR [rsp+0x110],r11
  420c67:	mov    QWORD PTR [rsp+0x108],r10
  420c6f:	mov    QWORD PTR [rsp+0xf8],r8
  420c77:	mov    QWORD PTR [rsp+0xd0],r11
  420c7f:	mov    QWORD PTR [rsp+0xc8],r10
  420c87:	mov    QWORD PTR [rsp+0xc0],rdx
  420c8f:	mov    QWORD PTR [rsp+0xb8],rax
  420c97:	mov    QWORD PTR [rsp+0xb0],r9
  420c9f:	mov    QWORD PTR [rsp+0xa8],rdx
  420ca7:	mov    QWORD PTR [rsp+0xa0],rax
  420caf:	mov    QWORD PTR [rsp+0x98],r9
  420cb7:	mov    QWORD PTR [rsp+0x90],r8
  420cbf:	mov    QWORD PTR [rsp+0x150],r13
  420cc7:	mov    QWORD PTR [rsp+0x148],r12
  420ccf:	mov    QWORD PTR [rsp+0x140],rbp
  420cd7:	mov    QWORD PTR [rsp+0x128],rdi
  420cdf:	mov    QWORD PTR [rsp+0x120],rsi
  420ce7:	mov    QWORD PTR [rsp+0x118],rbx
  420cef:	mov    QWORD PTR [rsp+0xe8],rdi
  420cf7:	mov    QWORD PTR [rsp+0xe0],rsi
  420cff:	mov    QWORD PTR [rsp+0xd8],rbx
  420d07:	mov    QWORD PTR [rsp+0x78],r13
  420d0c:	mov    QWORD PTR [rsp+0x70],r12
  420d11:	mov    QWORD PTR [rsp+0x68],rbp
  420d16:	mov    QWORD PTR [rsp+0x60],r14
  420d1b:	mov    QWORD PTR [rsp+0x58],r15
  420d20:	mov    QWORD PTR [rsp+0x28],rdx
  420d25:	lea    rdx,[rip+0x2c2c4]        # 0x44cff0
  420d2c:	mov    QWORD PTR [rsp+0x50],rdi
  420d31:	mov    QWORD PTR [rsp+0x48],rsi
  420d36:	mov    QWORD PTR [rsp+0x40],rbx
  420d3b:	mov    QWORD PTR [rsp+0x38],r11
  420d40:	mov    QWORD PTR [rsp+0x30],r10
  420d45:	mov    QWORD PTR [rsp+0x20],rax
  420d4a:	call   0x427dd8
  420d4f:	nop
  420d50:	add    rsp,0x178
  420d57:	pop    rbx
  420d58:	pop    rsi
  420d59:	pop    rdi
  420d5a:	pop    rbp
  420d5b:	pop    r12
  420d5d:	pop    r13
  420d5f:	pop    r14
  420d61:	pop    r15
  420d63:	ret    
  420d64:	xchg   ax,ax
  420d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d70:	sub    rsp,0x58
  420d74:	lea    rax,[rip+0x2a289]        # 0x44b004
  420d7b:	lea    r9,[rip+0x2926c]        # 0x449fee
  420d82:	lea    r8,[rip+0x29271]        # 0x449ffa
  420d89:	lea    rdx,[rip+0x2c718]        # 0x44d4a8
  420d90:	mov    QWORD PTR [rsp+0x28],rax
  420d95:	lea    rax,[rip+0x29244]        # 0x449fe0
  420d9c:	mov    QWORD PTR [rsp+0x48],r9
  420da1:	mov    QWORD PTR [rsp+0x40],r8
  420da6:	mov    QWORD PTR [rsp+0x38],r9
  420dab:	mov    QWORD PTR [rsp+0x30],r8
  420db0:	mov    QWORD PTR [rsp+0x20],rax
  420db5:	call   0x427dd8
  420dba:	nop
  420dbb:	add    rsp,0x58
  420dbf:	ret    
  420dc0:	sub    rsp,0x48
  420dc4:	lea    rax,[rip+0x2c855]        # 0x44d620
  420dcb:	lea    r8,[rip+0x2829f]        # 0x449071
  420dd2:	lea    r9,[rip+0x2c7c8]        # 0x44d5a1
  420dd9:	lea    rdx,[rip+0x2c7c8]        # 0x44d5a8
  420de0:	mov    QWORD PTR [rsp+0x38],rax
  420de5:	lea    rax,[rip+0x2c847]        # 0x44d633
  420dec:	mov    QWORD PTR [rsp+0x30],r8
  420df1:	mov    QWORD PTR [rsp+0x28],rax
  420df6:	lea    rax,[rip+0x2c83f]        # 0x44d63c
  420dfd:	mov    QWORD PTR [rsp+0x20],rax
  420e02:	call   0x427dd8
  420e07:	nop
  420e08:	add    rsp,0x48
  420e0c:	ret    
  420e0d:	nop    DWORD PTR [rax]
  420e10:	sub    rsp,0x38
  420e14:	lea    rax,[rip+0x291c5]        # 0x449fe0
  420e1b:	lea    r9,[rip+0x2c825]        # 0x44d647
  420e22:	lea    r8,[rip+0x28248]        # 0x449071
  420e29:	lea    rdx,[rip+0x2c828]        # 0x44d658
  420e30:	mov    QWORD PTR [rsp+0x28],rax
  420e35:	lea    rax,[rip+0x2c856]        # 0x44d692
  420e3c:	mov    QWORD PTR [rsp+0x20],rax
  420e41:	call   0x427dd8
  420e46:	nop
  420e47:	add    rsp,0x38
  420e4b:	ret    
  420e4c:	nop    DWORD PTR [rax+0x0]
  420e50:	sub    rsp,0x58
  420e54:	lea    rax,[rip+0x28590]        # 0x4493eb
  420e5b:	lea    r9,[rip+0x29992]        # 0x44a7f4
  420e62:	lea    r8,[rip+0x28208]        # 0x449071
  420e69:	lea    rdx,[rip+0x2c830]        # 0x44d6a0
  420e70:	mov    QWORD PTR [rsp+0x48],rax
  420e75:	lea    rax,[rip+0x29b2b]        # 0x44a9a7
  420e7c:	mov    QWORD PTR [rsp+0x40],rax
  420e81:	lea    rax,[rip+0x2c7ab]        # 0x44d633
  420e88:	mov    QWORD PTR [rsp+0x38],rax
  420e8d:	lea    rax,[rip+0x2c7a8]        # 0x44d63c
  420e94:	mov    QWORD PTR [rsp+0x30],rax
  420e99:	lea    rax,[rip+0x2c8fb]        # 0x44d79b
  420ea0:	mov    QWORD PTR [rsp+0x28],rax
  420ea5:	lea    rax,[rip+0x2c8f8]        # 0x44d7a4
  420eac:	mov    QWORD PTR [rsp+0x20],rax
  420eb1:	call   0x427dd8
  420eb6:	nop
  420eb7:	add    rsp,0x58
  420ebb:	ret    
  420ebc:	nop    DWORD PTR [rax+0x0]
  420ec0:	sub    rsp,0x58
  420ec4:	lea    rdx,[rip+0x28cca]        # 0x449b95
  420ecb:	lea    rax,[rip+0x28b1f]        # 0x4499f1
  420ed2:	lea    r9,[rip+0x29665]        # 0x44a53e
  420ed9:	lea    r8,[rip+0x28191]        # 0x449071
  420ee0:	mov    QWORD PTR [rsp+0x40],rdx
  420ee5:	lea    rdx,[rip+0x2c950]        # 0x44d83c
  420eec:	mov    QWORD PTR [rsp+0x48],rax
  420ef1:	mov    QWORD PTR [rsp+0x28],rax
  420ef6:	lea    rax,[rip+0x2965d]        # 0x44a55a
  420efd:	mov    QWORD PTR [rsp+0x38],rdx
  420f02:	lea    rdx,[rip+0x2c948]        # 0x44d851
  420f09:	mov    QWORD PTR [rsp+0x20],rax
  420f0e:	mov    QWORD PTR [rsp+0x30],rdx
  420f13:	lea    rdx,[rip+0x2c896]        # 0x44d7b0
  420f1a:	call   0x427dd8
  420f1f:	nop
  420f20:	add    rsp,0x58
  420f24:	ret    
  420f25:	nop
  420f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f30:	sub    rsp,0x38
  420f34:	lea    rax,[rip+0x290a5]        # 0x449fe0
  420f3b:	lea    r9,[rip+0x2c91a]        # 0x44d85c
  420f42:	lea    r8,[rip+0x28128]        # 0x449071
  420f49:	lea    rdx,[rip+0x2c918]        # 0x44d868
  420f50:	mov    QWORD PTR [rsp+0x28],rax
  420f55:	lea    rax,[rip+0x2c97a]        # 0x44d8d6
  420f5c:	mov    QWORD PTR [rsp+0x20],rax
  420f61:	call   0x427dd8
  420f66:	nop
  420f67:	add    rsp,0x38
  420f6b:	ret    
  420f6c:	nop    DWORD PTR [rax+0x0]
  420f70:	sub    rsp,0x38
  420f74:	lea    rax,[rip+0x2c9f3]        # 0x44d96e
  420f7b:	lea    r9,[rip+0x28488]        # 0x44940a
  420f82:	lea    r8,[rip+0x2c95d]        # 0x44d8e6
  420f89:	lea    rdx,[rip+0x2c968]        # 0x44d8f8
  420f90:	mov    QWORD PTR [rsp+0x28],rax
  420f95:	lea    rax,[rip+0x2c9de]        # 0x44d97a
  420f9c:	mov    QWORD PTR [rsp+0x20],rax
  420fa1:	call   0x427dd8
  420fa6:	nop
  420fa7:	add    rsp,0x38
  420fab:	ret    
  420fac:	nop    DWORD PTR [rax+0x0]
  420fb0:	sub    rsp,0x48
  420fb4:	lea    rax,[rip+0x2841b]        # 0x4493d6
  420fbb:	lea    r9,[rip+0x29079]        # 0x44a03b
  420fc2:	lea    r8,[rip+0x280a8]        # 0x449071
  420fc9:	lea    rdx,[rip+0x2c9b8]        # 0x44d988
  420fd0:	mov    QWORD PTR [rsp+0x30],rax
  420fd5:	lea    rax,[rip+0x28297]        # 0x449273
  420fdc:	mov    QWORD PTR [rsp+0x28],rax
  420fe1:	lea    rax,[rip+0x2915a]        # 0x44a142
  420fe8:	mov    QWORD PTR [rsp+0x20],rax
  420fed:	call   0x427dd8
  420ff2:	nop
  420ff3:	add    rsp,0x48
  420ff7:	ret    
  420ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  421000:	sub    rsp,0x88
  421007:	lea    rax,[rip+0x2caf3]        # 0x44db01
  42100e:	lea    rdx,[rip+0x283c1]        # 0x4493d6
  421015:	lea    r8,[rip+0x2953e]        # 0x44a55a
  42101c:	lea    r10,[rip+0x2b604]        # 0x44c627
  421023:	lea    r11,[rip+0x2951e]        # 0x44a548
  42102a:	lea    r9,[rip+0x294e8]        # 0x44a519
  421031:	mov    QWORD PTR [rsp+0x70],rax
  421036:	lea    rax,[rip+0x28b58]        # 0x449b95
  42103d:	mov    QWORD PTR [rsp+0x58],rdx
  421042:	mov    QWORD PTR [rsp+0x38],r8
  421047:	mov    QWORD PTR [rsp+0x30],rdx
  42104c:	lea    r8,[rip+0x2a257]        # 0x44b2aa
  421053:	mov    QWORD PTR [rsp+0x68],rax
  421058:	lea    rax,[rip+0x2caaf]        # 0x44db0e
  42105f:	lea    rdx,[rip+0x2c9aa]        # 0x44da10
  421066:	mov    QWORD PTR [rsp+0x48],r10
  42106b:	mov    QWORD PTR [rsp+0x40],r11
  421070:	mov    QWORD PTR [rsp+0x60],rax
  421075:	lea    rax,[rip+0x281f7]        # 0x449273
  42107c:	mov    QWORD PTR [rsp+0x50],rax
  421081:	mov    QWORD PTR [rsp+0x28],rax
  421086:	lea    rax,[rip+0x294b1]        # 0x44a53e
  42108d:	mov    QWORD PTR [rsp+0x20],rax
  421092:	call   0x427dd8
  421097:	nop
  421098:	add    rsp,0x88
  42109f:	ret    
  4210a0:	sub    rsp,0xa8
  4210a7:	lea    rax,[rip+0x2cc84]        # 0x44dd32
  4210ae:	lea    r9,[rip+0x280b1]        # 0x449166
  4210b5:	lea    r8,[rip+0x27fb5]        # 0x449071
  4210bc:	lea    rdx,[rip+0x2ca6d]        # 0x44db30
  4210c3:	mov    QWORD PTR [rsp+0x98],rax
  4210cb:	lea    rax,[rip+0x2cc6a]        # 0x44dd3c
  4210d2:	mov    QWORD PTR [rsp+0x90],rax
  4210da:	lea    rax,[rip+0x2cc67]        # 0x44dd48
  4210e1:	mov    QWORD PTR [rsp+0x88],rax
  4210e9:	lea    rax,[rip+0x2cc61]        # 0x44dd51
  4210f0:	mov    QWORD PTR [rsp+0x80],rax
  4210f8:	lea    rax,[rip+0x282d7]        # 0x4493d6
  4210ff:	mov    QWORD PTR [rsp+0x78],rax
  421104:	mov    QWORD PTR [rsp+0x70],rax
  421109:	lea    rax,[rip+0x282ae]        # 0x4493be
  421110:	mov    QWORD PTR [rsp+0x68],rax
  421115:	lea    rax,[rip+0x296bd]        # 0x44a7d9
  42111c:	mov    QWORD PTR [rsp+0x60],rax
  421121:	lea    rax,[rip+0x296bd]        # 0x44a7e5
  421128:	mov    QWORD PTR [rsp+0x58],rax
  42112d:	lea    rax,[rip+0x2cc28]        # 0x44dd5c
  421134:	mov    QWORD PTR [rsp+0x50],rax
  421139:	lea    rax,[rip+0x2cc26]        # 0x44dd66
  421140:	mov    QWORD PTR [rsp+0x48],rax
  421145:	lea    rax,[rip+0x293cd]        # 0x44a519
  42114c:	mov    QWORD PTR [rsp+0x40],rax
  421151:	lea    rax,[rip+0x2cc1a]        # 0x44dd72
  421158:	mov    QWORD PTR [rsp+0x38],rax
  42115d:	lea    rax,[rip+0x2c99d]        # 0x44db01
  421164:	mov    QWORD PTR [rsp+0x30],rax
  421169:	lea    rax,[rip+0x27fe6]        # 0x449156
  421170:	mov    QWORD PTR [rsp+0x28],rax
  421175:	lea    rax,[rip+0x27fe2]        # 0x44915e
  42117c:	mov    QWORD PTR [rsp+0x20],rax
  421181:	call   0x427dd8
  421186:	nop
  421187:	add    rsp,0xa8
  42118e:	ret    
  42118f:	nop
  421190:	sub    rsp,0x78
  421194:	lea    rax,[rip+0x2cd88]        # 0x44df23
  42119b:	lea    r9,[rip+0x280d1]        # 0x449273
  4211a2:	lea    r8,[rip+0x27ec8]        # 0x449071
  4211a9:	lea    rdx,[rip+0x2cbd0]        # 0x44dd80
  4211b0:	mov    QWORD PTR [rsp+0x60],rax
  4211b5:	lea    rax,[rip+0x287de]        # 0x44999a
  4211bc:	mov    QWORD PTR [rsp+0x58],rax
  4211c1:	mov    QWORD PTR [rsp+0x50],rax
  4211c6:	mov    QWORD PTR [rsp+0x48],rax
  4211cb:	mov    QWORD PTR [rsp+0x40],rax
  4211d0:	mov    QWORD PTR [rsp+0x38],rax
  4211d5:	lea    rax,[rip+0x2a0bb]        # 0x44b297
  4211dc:	mov    QWORD PTR [rsp+0x30],rax
  4211e1:	lea    rax,[rip+0x2a0b9]        # 0x44b2a1
  4211e8:	mov    QWORD PTR [rsp+0x28],rax
  4211ed:	lea    rax,[rip+0x28201]        # 0x4493f5
  4211f4:	mov    QWORD PTR [rsp+0x20],rax
  4211f9:	call   0x427dd8
  4211fe:	nop
  4211ff:	add    rsp,0x78
  421203:	ret    
  421204:	xchg   ax,ax
  421206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421210:	sub    rsp,0x78
  421214:	lea    rax,[rip+0x2cdf9]        # 0x44e014
  42121b:	lea    r9,[rip+0x2a088]        # 0x44b2aa
  421222:	lea    r8,[rip+0x27e48]        # 0x449071
  421229:	lea    rdx,[rip+0x2ccf8]        # 0x44df28
  421230:	mov    QWORD PTR [rsp+0x60],rax
  421235:	lea    rax,[rip+0x2976b]        # 0x44a9a7
  42123c:	mov    QWORD PTR [rsp+0x58],rax
  421241:	lea    rax,[rip+0x2818e]        # 0x4493d6
  421248:	mov    QWORD PTR [rsp+0x50],rax
  42124d:	lea    rax,[rip+0x29741]        # 0x44a995
  421254:	mov    QWORD PTR [rsp+0x48],rax
  421259:	lea    rax,[rip+0x2cdbe]        # 0x44e01e
  421260:	mov    QWORD PTR [rsp+0x40],rax
  421265:	lea    rax,[rip+0x292ee]        # 0x44a55a
  42126c:	mov    QWORD PTR [rsp+0x38],rax
  421271:	lea    rax,[rip+0x28779]        # 0x4499f1
  421278:	mov    QWORD PTR [rsp+0x30],rax
  42127d:	lea    rax,[rip+0x29295]        # 0x44a519
  421284:	mov    QWORD PTR [rsp+0x28],rax
  421289:	lea    rax,[rip+0x2cd96]        # 0x44e026
  421290:	mov    QWORD PTR [rsp+0x20],rax
  421295:	call   0x427dd8
  42129a:	nop
  42129b:	add    rsp,0x78
  42129f:	ret    
  4212a0:	sub    rsp,0x48
  4212a4:	lea    rax,[rip+0x2ce21]        # 0x44e0cc
  4212ab:	lea    r9,[rip+0x27dbf]        # 0x449071
  4212b2:	lea    rdx,[rip+0x2cd77]        # 0x44e030
  4212b9:	mov    QWORD PTR [rsp+0x30],rax
  4212be:	lea    rax,[rip+0x2ce13]        # 0x44e0d8
  4212c5:	mov    r8,r9
  4212c8:	mov    QWORD PTR [rsp+0x28],rax
  4212cd:	lea    rax,[rip+0x2ce13]        # 0x44e0e7
  4212d4:	mov    QWORD PTR [rsp+0x20],rax
  4212d9:	call   0x427dd8
  4212de:	nop
  4212df:	add    rsp,0x48
  4212e3:	ret    
  4212e4:	xchg   ax,ax
  4212e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212f0:	sub    rsp,0x48
  4212f4:	lea    rax,[rip+0x2bcea]        # 0x44cfe5
  4212fb:	lea    r9,[rip+0x29217]        # 0x44a519
  421302:	lea    r8,[rip+0x29fa1]        # 0x44b2aa
  421309:	lea    rdx,[rip+0x2cde8]        # 0x44e0f8
  421310:	mov    QWORD PTR [rsp+0x38],rax
  421315:	lea    rax,[rip+0x2968b]        # 0x44a9a7
  42131c:	mov    QWORD PTR [rsp+0x30],rax
  421321:	lea    rax,[rip+0x280ae]        # 0x4493d6
  421328:	mov    QWORD PTR [rsp+0x28],rax
  42132d:	lea    rax,[rip+0x29661]        # 0x44a995
  421334:	mov    QWORD PTR [rsp+0x20],rax
  421339:	call   0x427dd8
  42133e:	nop
  42133f:	add    rsp,0x48
  421343:	ret    
  421344:	xchg   ax,ax
  421346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421350:	sub    rsp,0x58
  421354:	lea    rax,[rip+0x2ceed]        # 0x44e248
  42135b:	lea    r9,[rip+0x28c7e]        # 0x449fe0
  421362:	lea    r8,[rip+0x27d08]        # 0x449071
  421369:	lea    rdx,[rip+0x2ce18]        # 0x44e188
  421370:	mov    QWORD PTR [rsp+0x48],rax
  421375:	lea    rax,[rip+0x2ced6]        # 0x44e252
  42137c:	mov    QWORD PTR [rsp+0x40],rax
  421381:	lea    rax,[rip+0x2ced3]        # 0x44e25b
  421388:	mov    QWORD PTR [rsp+0x38],rax
  42138d:	lea    rax,[rip+0x2cece]        # 0x44e262
  421394:	mov    QWORD PTR [rsp+0x30],rax
  421399:	lea    rax,[rip+0x28c1d]        # 0x449fbd
  4213a0:	mov    QWORD PTR [rsp+0x28],rax
  4213a5:	lea    rax,[rip+0x28c1c]        # 0x449fc8
  4213ac:	mov    QWORD PTR [rsp+0x20],rax
  4213b1:	call   0x427dd8
  4213b6:	nop
  4213b7:	add    rsp,0x58
  4213bb:	ret    
  4213bc:	nop    DWORD PTR [rax+0x0]
  4213c0:	sub    rsp,0x98
  4213c7:	lea    rax,[rip+0x2cf87]        # 0x44e355
  4213ce:	lea    rdx,[rip+0x29c10]        # 0x44afe5
  4213d5:	lea    r9,[rip+0x29162]        # 0x44a53e
  4213dc:	lea    r8,[rip+0x27c8e]        # 0x449071
  4213e3:	mov    QWORD PTR [rsp+0x80],rax
  4213eb:	lea    rax,[rip+0x29c12]        # 0x44b004
  4213f2:	mov    QWORD PTR [rsp+0x58],rdx
  4213f7:	lea    rdx,[rip+0x29c14]        # 0x44b012
  4213fe:	mov    QWORD PTR [rsp+0x78],rax
  421403:	lea    rax,[rip+0x28bd6]        # 0x449fe0
  42140a:	mov    QWORD PTR [rsp+0x50],rdx
  42140f:	lea    rdx,[rip+0x2ce5a]        # 0x44e270
  421416:	mov    QWORD PTR [rsp+0x70],rax
  42141b:	lea    rax,[rip+0x29bbb]        # 0x44afdd
  421422:	mov    QWORD PTR [rsp+0x68],rax
  421427:	mov    QWORD PTR [rsp+0x60],rax
  42142c:	mov    QWORD PTR [rsp+0x48],rax
  421431:	mov    QWORD PTR [rsp+0x40],rax
  421436:	lea    rax,[rip+0x28b95]        # 0x449fd2
  42143d:	mov    QWORD PTR [rsp+0x38],rax
  421442:	lea    rax,[rip+0x29bab]        # 0x44aff4
  421449:	mov    QWORD PTR [rsp+0x30],rax
  42144e:	lea    rax,[rip+0x2cf0d]        # 0x44e362
  421455:	mov    QWORD PTR [rsp+0x28],rax
  42145a:	lea    rax,[rip+0x28b4f]        # 0x449fb0
  421461:	mov    QWORD PTR [rsp+0x20],rax
  421466:	call   0x427dd8
  42146b:	nop
  42146c:	add    rsp,0x98
  421473:	ret    
  421474:	xchg   ax,ax
  421476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421480:	lea    r9,[rip+0x28b29]        # 0x449fb0
  421487:	lea    r8,[rip+0x27be3]        # 0x449071
  42148e:	lea    rdx,[rip+0x2cedb]        # 0x44e370
  421495:	jmp    0x427dd8
  42149a:	nop    WORD PTR [rax+rax*1+0x0]
  4214a0:	sub    rsp,0x78
  4214a4:	lea    rax,[rip+0x2ca78]        # 0x44df23
  4214ab:	lea    r9,[rip+0x27dc1]        # 0x449273
  4214b2:	lea    r8,[rip+0x27bb8]        # 0x449071
  4214b9:	lea    rdx,[rip+0x2ced8]        # 0x44e398
  4214c0:	mov    QWORD PTR [rsp+0x68],rax
  4214c5:	lea    rax,[rip+0x284ce]        # 0x44999a
  4214cc:	mov    QWORD PTR [rsp+0x60],rax
  4214d1:	mov    QWORD PTR [rsp+0x58],rax
  4214d6:	mov    QWORD PTR [rsp+0x50],rax
  4214db:	mov    QWORD PTR [rsp+0x48],rax
  4214e0:	mov    QWORD PTR [rsp+0x40],rax
  4214e5:	lea    rax,[rip+0x29dab]        # 0x44b297
  4214ec:	mov    QWORD PTR [rsp+0x38],rax
  4214f1:	lea    rax,[rip+0x29da9]        # 0x44b2a1
  4214f8:	mov    QWORD PTR [rsp+0x30],rax
  4214fd:	lea    rax,[rip+0x27ee7]        # 0x4493eb
  421504:	mov    QWORD PTR [rsp+0x28],rax
  421509:	lea    rax,[rip+0x27ee5]        # 0x4493f5
  421510:	mov    QWORD PTR [rsp+0x20],rax
  421515:	call   0x427dd8
  42151a:	nop
  42151b:	add    rsp,0x78
  42151f:	ret    
  421520:	sub    rsp,0x58
  421524:	lea    rax,[rip+0x2d0f3]        # 0x44e61e
  42152b:	lea    r9,[rip+0x2c32a]        # 0x44d85c
  421532:	lea    r8,[rip+0x27b38]        # 0x449071
  421539:	lea    rdx,[rip+0x2d038]        # 0x44e578
  421540:	mov    QWORD PTR [rsp+0x48],rax
  421545:	lea    rax,[rip+0x2ba88]        # 0x44cfd4
  42154c:	mov    QWORD PTR [rsp+0x40],rax
  421551:	mov    QWORD PTR [rsp+0x38],rax
  421556:	mov    QWORD PTR [rsp+0x30],rax
  42155b:	lea    rax,[rip+0x2d0d7]        # 0x44e639
  421562:	mov    QWORD PTR [rsp+0x28],rax
  421567:	lea    rax,[rip+0x29d3c]        # 0x44b2aa
  42156e:	mov    QWORD PTR [rsp+0x20],rax
  421573:	call   0x427dd8
  421578:	nop
  421579:	add    rsp,0x58
  42157d:	ret    
  42157e:	xchg   ax,ax
  421580:	sub    rsp,0x58
  421584:	lea    r9,[rip+0x29269]        # 0x44a7f4
  42158b:	lea    rax,[rip+0x2d17a]        # 0x44e70c
  421592:	lea    r8,[rip+0x27e71]        # 0x44940a
  421599:	lea    rdx,[rip+0x2d0a8]        # 0x44e648
  4215a0:	mov    QWORD PTR [rsp+0x48],r9
  4215a5:	mov    QWORD PTR [rsp+0x40],r9
  4215aa:	mov    QWORD PTR [rsp+0x38],r8
  4215af:	mov    QWORD PTR [rsp+0x30],rax
  4215b4:	mov    QWORD PTR [rsp+0x28],r9
  4215b9:	mov    QWORD PTR [rsp+0x20],rax
  4215be:	call   0x427dd8
  4215c3:	nop
  4215c4:	add    rsp,0x58
  4215c8:	ret    
  4215c9:	nop    DWORD PTR [rax+0x0]
  4215d0:	sub    rsp,0x58
  4215d4:	lea    rax,[rip+0x28f3e]        # 0x44a519
  4215db:	lea    r9,[rip+0x29d37]        # 0x44b319
  4215e2:	lea    r8,[rip+0x27a88]        # 0x449071
  4215e9:	lea    rdx,[rip+0x2d130]        # 0x44e720
  4215f0:	mov    QWORD PTR [rsp+0x48],rax
  4215f5:	lea    rax,[rip+0x29cae]        # 0x44b2aa
  4215fc:	mov    QWORD PTR [rsp+0x40],rax
  421601:	lea    rax,[rip+0x29e9d]        # 0x44b4a5
  421608:	mov    QWORD PTR [rsp+0x38],rax
  42160d:	lea    rax,[rip+0x29e9f]        # 0x44b4b3
  421614:	mov    QWORD PTR [rsp+0x30],rax
  421619:	lea    rax,[rip+0x29e99]        # 0x44b4b9
  421620:	mov    QWORD PTR [rsp+0x28],rax
  421625:	lea    rax,[rip+0x29e96]        # 0x44b4c2
  42162c:	mov    QWORD PTR [rsp+0x20],rax
  421631:	call   0x427dd8
  421636:	nop
  421637:	add    rsp,0x58
  42163b:	ret    
  42163c:	nop    DWORD PTR [rax+0x0]
  421640:	sub    rsp,0x48
  421644:	lea    rax,[rip+0x27d8b]        # 0x4493d6
  42164b:	lea    r9,[rip+0x2d1a8]        # 0x44e7fa
  421652:	lea    r8,[rip+0x2afce]        # 0x44c627
  421659:	lea    rdx,[rip+0x2d1a8]        # 0x44e808
  421660:	mov    QWORD PTR [rsp+0x38],rax
  421665:	lea    rax,[rip+0x27c07]        # 0x449273
  42166c:	mov    QWORD PTR [rsp+0x30],rax
  421671:	lea    rax,[rip+0x2d201]        # 0x44e879
  421678:	mov    QWORD PTR [rsp+0x28],rax
  42167d:	lea    rax,[rip+0x2d1fe]        # 0x44e882
  421684:	mov    QWORD PTR [rsp+0x20],rax
  421689:	call   0x427dd8
  42168e:	nop
  42168f:	add    rsp,0x48
  421693:	ret    
  421694:	xchg   ax,ax
  421696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216a0:	push   r14
  4216a2:	push   rbp
  4216a3:	push   rdi
  4216a4:	push   rsi
  4216a5:	push   rbx
  4216a6:	sub    rsp,0x1d0
  4216ad:	lea    rax,[rip+0x2c96a]        # 0x44e01e
  4216b4:	lea    rsi,[rip+0x2d8d3]        # 0x44ef8e
  4216bb:	lea    r9,[rip+0x28e57]        # 0x44a519
  4216c2:	lea    r11,[rip+0x27d0d]        # 0x4493d6
  4216c9:	lea    r10,[rip+0x292c5]        # 0x44a995
  4216d0:	lea    rdx,[rip+0x28a7e]        # 0x44a155
  4216d7:	mov    QWORD PTR [rsp+0x1c8],rax
  4216df:	lea    rax,[rip+0x2d7fa]        # 0x44eee0
  4216e6:	mov    QWORD PTR [rsp+0x148],rsi
  4216ee:	lea    rsi,[rip+0x2d8a2]        # 0x44ef97
  4216f5:	lea    r8,[rip+0x282f5]        # 0x4499f1
  4216fc:	lea    rbx,[rip+0x292a4]        # 0x44a9a7
  421703:	mov    QWORD PTR [rsp+0x1b0],rax
  42170b:	lea    rax,[rip+0x2d7fe]        # 0x44ef10
  421712:	lea    rbp,[rip+0x2d851]        # 0x44ef6a
  421719:	mov    QWORD PTR [rsp+0x140],rsi
  421721:	lea    rsi,[rip+0x28888]        # 0x449fb0
  421728:	lea    rdi,[rip+0x2d845]        # 0x44ef74
  42172f:	mov    QWORD PTR [rsp+0x190],rax
  421737:	lea    rax,[rip+0x2d818]        # 0x44ef56
  42173e:	lea    r14,[rip+0x2d862]        # 0x44efa7
  421745:	mov    QWORD PTR [rsp+0x138],rsi
  42174d:	lea    rsi,[rip+0x28441]        # 0x449b95
  421754:	mov    QWORD PTR [rsp+0x1c0],r8
  42175c:	mov    QWORD PTR [rsp+0x188],rax
  421764:	lea    rax,[rip+0x2c8a9]        # 0x44e014
  42176b:	mov    QWORD PTR [rsp+0x1b8],r9
  421773:	mov    QWORD PTR [rsp+0x1a8],rbx
  42177b:	mov    QWORD PTR [rsp+0x1a0],r11
  421783:	mov    QWORD PTR [rsp+0x158],rax
  42178b:	lea    rax,[rip+0x2d7eb]        # 0x44ef7d
  421792:	mov    QWORD PTR [rsp+0x198],r10
  42179a:	mov    QWORD PTR [rsp+0x180],rdx
  4217a2:	mov    QWORD PTR [rsp+0x178],rdx
  4217aa:	mov    QWORD PTR [rsp+0x150],rax
  4217b2:	mov    QWORD PTR [rsp+0x130],rax
  4217ba:	mov    QWORD PTR [rsp+0x120],rax
  4217c2:	mov    QWORD PTR [rsp+0xd8],rax
  4217ca:	mov    QWORD PTR [rsp+0xd0],rax
  4217d2:	lea    rax,[rip+0x2c328]        # 0x44db01
  4217d9:	mov    QWORD PTR [rsp+0x168],rdi
  4217e1:	mov    QWORD PTR [rsp+0x160],r9
  4217e9:	mov    QWORD PTR [rsp+0x128],r9
  4217f1:	mov    QWORD PTR [rsp+0xc8],rax
  4217f9:	lea    rax,[rip+0x2c30e]        # 0x44db0e
  421800:	mov    QWORD PTR [rsp+0x118],r9
  421808:	mov    QWORD PTR [rsp+0x110],r8
  421810:	mov    QWORD PTR [rsp+0xf8],rdx
  421818:	mov    QWORD PTR [rsp+0xf0],rdx
  421820:	mov    QWORD PTR [rsp+0xe0],rdi
  421828:	lea    rdi,[rip+0x2a4e6]        # 0x44bd15
  42182f:	mov    QWORD PTR [rsp+0x170],rbp
  421837:	mov    QWORD PTR [rsp+0x108],rsi
  42183f:	lea    rdx,[rip+0x2a515]        # 0x44bd5b
  421846:	mov    QWORD PTR [rsp+0x100],r14
  42184e:	mov    QWORD PTR [rsp+0xe8],rbp
  421856:	mov    QWORD PTR [rsp+0xc0],r8
  42185e:	mov    QWORD PTR [rsp+0xb0],rax
  421866:	lea    rax,[rip+0x28cdb]        # 0x44a548
  42186d:	mov    QWORD PTR [rsp+0xa8],rbx
  421875:	mov    QWORD PTR [rsp+0x68],rbx
  42187a:	lea    rbx,[rip+0x2a49e]        # 0x44bd1f
  421881:	mov    QWORD PTR [rsp+0x88],rax
  421889:	mov    QWORD PTR [rsp+0x30],rax
  42188e:	lea    rax,[rip+0x28cc5]        # 0x44a55a
  421895:	mov    QWORD PTR [rsp+0x78],rdi
  42189a:	lea    r8,[rip+0x29a09]        # 0x44b2aa
  4218a1:	mov    QWORD PTR [rsp+0x50],rbx
  4218a6:	mov    QWORD PTR [rsp+0x28],rax
  4218ab:	lea    rdi,[rip+0x2d70e]        # 0x44efc0
  4218b2:	lea    rax,[rip+0x28c85]        # 0x44a53e
  4218b9:	lea    rbx,[rip+0x2d70c]        # 0x44efcc
  4218c0:	mov    QWORD PTR [rsp+0x90],rdx
  4218c8:	mov    QWORD PTR [rsp+0x38],rdx
  4218cd:	lea    rdx,[rip+0x2cfc4]        # 0x44e898
  4218d4:	mov    QWORD PTR [rsp+0x80],r9
  4218dc:	mov    QWORD PTR [rsp+0x70],r8
  4218e1:	mov    QWORD PTR [rsp+0x60],r11
  4218e6:	mov    QWORD PTR [rsp+0x58],r10
  4218eb:	mov    QWORD PTR [rsp+0x48],rdi
  4218f0:	mov    QWORD PTR [rsp+0x40],rbx
  4218f5:	mov    QWORD PTR [rsp+0x20],rax
  4218fa:	mov    QWORD PTR [rsp+0xb8],rsi
  421902:	mov    QWORD PTR [rsp+0xa0],r11
  42190a:	mov    QWORD PTR [rsp+0x98],r10
  421912:	call   0x427dd8
  421917:	nop
  421918:	add    rsp,0x1d0
  42191f:	pop    rbx
  421920:	pop    rsi
  421921:	pop    rdi
  421922:	pop    rbp
  421923:	pop    r14
  421925:	ret    
  421926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421930:	sub    rsp,0x48
  421934:	lea    rax,[rip+0x2b6aa]        # 0x44cfe5
  42193b:	lea    r9,[rip+0x28bd7]        # 0x44a519
  421942:	lea    r8,[rip+0x29961]        # 0x44b2aa
  421949:	lea    rdx,[rip+0x2d690]        # 0x44efe0
  421950:	mov    QWORD PTR [rsp+0x38],rax
  421955:	lea    rax,[rip+0x2904b]        # 0x44a9a7
  42195c:	mov    QWORD PTR [rsp+0x30],rax
  421961:	lea    rax,[rip+0x27a6e]        # 0x4493d6
  421968:	mov    QWORD PTR [rsp+0x28],rax
  42196d:	lea    rax,[rip+0x29021]        # 0x44a995
  421974:	mov    QWORD PTR [rsp+0x20],rax
  421979:	call   0x427dd8
  42197e:	nop
  42197f:	add    rsp,0x48
  421983:	ret    
  421984:	xchg   ax,ax
  421986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421990:	sub    rsp,0x48
  421994:	lea    rax,[rip+0x27a3b]        # 0x4493d6
  42199b:	lea    r9,[rip+0x28e52]        # 0x44a7f4
  4219a2:	lea    r8,[rip+0x28ffe]        # 0x44a9a7
  4219a9:	lea    rdx,[rip+0x2d740]        # 0x44f0f0
  4219b0:	mov    QWORD PTR [rsp+0x30],rax
  4219b5:	lea    rax,[rip+0x2a44c]        # 0x44be08
  4219bc:	mov    QWORD PTR [rsp+0x28],rax
  4219c1:	lea    rax,[rip+0x2d782]        # 0x44f14a
  4219c8:	mov    QWORD PTR [rsp+0x20],rax
  4219cd:	call   0x427dd8
  4219d2:	nop
  4219d3:	add    rsp,0x48
  4219d7:	ret    
  4219d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4219e0:	sub    rsp,0x38
  4219e4:	lea    rax,[rip+0x2d7bd]        # 0x44f1a8
  4219eb:	lea    r9,[rip+0x2d762]        # 0x44f154
  4219f2:	lea    r8,[rip+0x27678]        # 0x449071
  4219f9:	lea    rdx,[rip+0x2d760]        # 0x44f160
  421a00:	mov    QWORD PTR [rsp+0x20],rax
  421a05:	call   0x427dd8
  421a0a:	nop
  421a0b:	add    rsp,0x38
  421a0f:	ret    
  421a10:	sub    rsp,0x38
  421a14:	lea    rax,[rip+0x279bb]        # 0x4493d6
  421a1b:	lea    r9,[rip+0x2bd82]        # 0x44d7a4
  421a22:	lea    r8,[rip+0x27648]        # 0x449071
  421a29:	lea    rdx,[rip+0x2d788]        # 0x44f1b8
  421a30:	mov    QWORD PTR [rsp+0x28],rax
  421a35:	lea    rax,[rip+0x27837]        # 0x449273
  421a3c:	mov    QWORD PTR [rsp+0x20],rax
  421a41:	call   0x427dd8
  421a46:	nop
  421a47:	add    rsp,0x38
  421a4b:	ret    
  421a4c:	nop    DWORD PTR [rax+0x0]
  421a50:	sub    rsp,0x48
  421a54:	lea    rax,[rip+0x2d83b]        # 0x44f296
  421a5b:	lea    r9,[rip+0x2d7a6]        # 0x44f208
  421a62:	lea    r8,[rip+0x27608]        # 0x449071
  421a69:	lea    rdx,[rip+0x2d7a8]        # 0x44f218
  421a70:	mov    QWORD PTR [rsp+0x38],rax
  421a75:	lea    rax,[rip+0x2d82c]        # 0x44f2a8
  421a7c:	mov    QWORD PTR [rsp+0x30],rax
  421a81:	lea    rax,[rip+0x2d832]        # 0x44f2ba
  421a88:	mov    QWORD PTR [rsp+0x28],rax
  421a8d:	lea    rax,[rip+0x2d833]        # 0x44f2c7
  421a94:	mov    QWORD PTR [rsp+0x20],rax
  421a99:	call   0x427dd8
  421a9e:	nop
  421a9f:	add    rsp,0x48
  421aa3:	ret    
  421aa4:	xchg   ax,ax
  421aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ab0:	sub    rsp,0x38
  421ab4:	lea    rax,[rip+0x2d874]        # 0x44f32f
  421abb:	lea    r9,[rip+0x2d817]        # 0x44f2d9
  421ac2:	lea    r8,[rip+0x275a8]        # 0x449071
  421ac9:	lea    rdx,[rip+0x2d818]        # 0x44f2e8
  421ad0:	mov    QWORD PTR [rsp+0x20],rax
  421ad5:	call   0x427dd8
  421ada:	nop
  421adb:	add    rsp,0x38
  421adf:	ret    
  421ae0:	sub    rsp,0x68
  421ae4:	lea    rax,[rip+0x28a2e]        # 0x44a519
  421aeb:	lea    r9,[rip+0x2bd6a]        # 0x44d85c
  421af2:	lea    r8,[rip+0x27578]        # 0x449071
  421af9:	lea    rdx,[rip+0x2d840]        # 0x44f340
  421b00:	mov    QWORD PTR [rsp+0x50],rax
  421b05:	lea    rax,[rip+0x2cb12]        # 0x44e61e
  421b0c:	mov    QWORD PTR [rsp+0x48],rax
  421b11:	lea    rax,[rip+0x2d98d]        # 0x44f4a5
  421b18:	mov    QWORD PTR [rsp+0x40],rax
  421b1d:	lea    rax,[rip+0x284bc]        # 0x449fe0
  421b24:	mov    QWORD PTR [rsp+0x38],rax
  421b29:	lea    rax,[rip+0x2cb09]        # 0x44e639
  421b30:	mov    QWORD PTR [rsp+0x30],rax
  421b35:	lea    rax,[rip+0x2d973]        # 0x44f4af
  421b3c:	mov    QWORD PTR [rsp+0x28],rax
  421b41:	lea    rax,[rip+0x29762]        # 0x44b2aa
  421b48:	mov    QWORD PTR [rsp+0x20],rax
  421b4d:	call   0x427dd8
  421b52:	nop
  421b53:	add    rsp,0x68
  421b57:	ret    
  421b58:	nop    DWORD PTR [rax+rax*1+0x0]
  421b60:	sub    rsp,0x118
  421b67:	lea    rax,[rip+0x2dc37]        # 0x44f7a5
  421b6e:	lea    rdx,[rip+0x2dd46]        # 0x44f8bb
  421b75:	lea    r8,[rip+0x274f5]        # 0x449071
  421b7c:	lea    r9,[rip+0x2a866]        # 0x44c3e9
  421b83:	mov    QWORD PTR [rsp+0xf8],rax
  421b8b:	lea    rax,[rip+0x2dc1e]        # 0x44f7b0
  421b92:	mov    QWORD PTR [rsp+0x50],rdx
  421b97:	lea    rdx,[rip+0x2dd34]        # 0x44f8d2
  421b9e:	mov    QWORD PTR [rsp+0x30],r8
  421ba3:	mov    QWORD PTR [rsp+0x100],r8
  421bab:	mov    QWORD PTR [rsp+0xf0],rax
  421bb3:	lea    rax,[rip+0x2dc00]        # 0x44f7ba
  421bba:	mov    QWORD PTR [rsp+0x70],r8
  421bbf:	mov    QWORD PTR [rsp+0x48],rdx
  421bc4:	lea    rdx,[rip+0x2dd0f]        # 0x44f8da
  421bcb:	mov    QWORD PTR [rsp+0x40],r8
  421bd0:	mov    QWORD PTR [rsp+0xe8],rax
  421bd8:	lea    rax,[rip+0x2dbe3]        # 0x44f7c2
  421bdf:	mov    QWORD PTR [rsp+0x38],rdx
  421be4:	lea    rdx,[rip+0x2d8dd]        # 0x44f4c8
  421beb:	mov    QWORD PTR [rsp+0xe0],rax
  421bf3:	lea    rax,[rip+0x2dbd0]        # 0x44f7ca
  421bfa:	mov    QWORD PTR [rsp+0xd8],rax
  421c02:	lea    rax,[rip+0x2dbcb]        # 0x44f7d4
  421c09:	mov    QWORD PTR [rsp+0xd0],rax
  421c11:	lea    rax,[rip+0x2dbc5]        # 0x44f7dd
  421c18:	mov    QWORD PTR [rsp+0xc8],rax
  421c20:	lea    rax,[rip+0x2dbc0]        # 0x44f7e7
  421c27:	mov    QWORD PTR [rsp+0xc0],rax
  421c2f:	lea    rax,[rip+0x2dbb9]        # 0x44f7ef
  421c36:	mov    QWORD PTR [rsp+0xb8],rax
  421c3e:	lea    rax,[rip+0x2dbb4]        # 0x44f7f9
  421c45:	mov    QWORD PTR [rsp+0xb0],rax
  421c4d:	lea    rax,[rip+0x2dbb4]        # 0x44f808
  421c54:	mov    QWORD PTR [rsp+0xa8],rax
  421c5c:	lea    rax,[rip+0x2dbb6]        # 0x44f819
  421c63:	mov    QWORD PTR [rsp+0xa0],rax
  421c6b:	lea    rax,[rip+0x2dbc5]        # 0x44f837
  421c72:	mov    QWORD PTR [rsp+0x98],rax
  421c7a:	lea    rax,[rip+0x2dbd3]        # 0x44f854
  421c81:	mov    QWORD PTR [rsp+0x90],rax
  421c89:	lea    rax,[rip+0x2dbd2]        # 0x44f862
  421c90:	mov    QWORD PTR [rsp+0x88],rax
  421c98:	lea    rax,[rip+0x2dbd4]        # 0x44f873
  421c9f:	mov    QWORD PTR [rsp+0x80],rax
  421ca7:	lea    rax,[rip+0x2dbd5]        # 0x44f883
  421cae:	mov    QWORD PTR [rsp+0x78],rax
  421cb3:	lea    rax,[rip+0x2dbd8]        # 0x44f892
  421cba:	mov    QWORD PTR [rsp+0x68],rax
  421cbf:	lea    rax,[rip+0x2dbe2]        # 0x44f8a8
  421cc6:	mov    QWORD PTR [rsp+0x60],rax
  421ccb:	lea    rax,[rip+0x28888]        # 0x44a55a
  421cd2:	mov    QWORD PTR [rsp+0x58],rax
  421cd7:	mov    QWORD PTR [rsp+0x28],rax
  421cdc:	lea    rax,[rip+0x2885b]        # 0x44a53e
  421ce3:	mov    QWORD PTR [rsp+0x20],rax
  421ce8:	call   0x427dd8
  421ced:	nop
  421cee:	add    rsp,0x118
  421cf5:	ret    
  421cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d00:	sub    rsp,0x78
  421d04:	lea    rax,[rip+0x2c218]        # 0x44df23
  421d0b:	lea    r9,[rip+0x27561]        # 0x449273
  421d12:	lea    r8,[rip+0x27358]        # 0x449071
  421d19:	lea    rdx,[rip+0x2dbc0]        # 0x44f8e0
  421d20:	mov    QWORD PTR [rsp+0x68],rax
  421d25:	lea    rax,[rip+0x27c6e]        # 0x44999a
  421d2c:	mov    QWORD PTR [rsp+0x60],rax
  421d31:	mov    QWORD PTR [rsp+0x58],rax
  421d36:	mov    QWORD PTR [rsp+0x50],rax
  421d3b:	mov    QWORD PTR [rsp+0x48],rax
  421d40:	mov    QWORD PTR [rsp+0x40],rax
  421d45:	lea    rax,[rip+0x2954b]        # 0x44b297
  421d4c:	mov    QWORD PTR [rsp+0x38],rax
  421d51:	lea    rax,[rip+0x29549]        # 0x44b2a1
  421d58:	mov    QWORD PTR [rsp+0x30],rax
  421d5d:	lea    rax,[rip+0x27687]        # 0x4493eb
  421d64:	mov    QWORD PTR [rsp+0x28],rax
  421d69:	lea    rax,[rip+0x27685]        # 0x4493f5
  421d70:	mov    QWORD PTR [rsp+0x20],rax
  421d75:	call   0x427dd8
  421d7a:	nop
  421d7b:	add    rsp,0x78
  421d7f:	ret    
  421d80:	sub    rsp,0x38
  421d84:	lea    rax,[rip+0x2764b]        # 0x4493d6
  421d8b:	lea    r9,[rip+0x2a895]        # 0x44c627
  421d92:	lea    r8,[rip+0x28a5b]        # 0x44a7f4
  421d99:	lea    rdx,[rip+0x2dd20]        # 0x44fac0
  421da0:	mov    QWORD PTR [rsp+0x28],rax
  421da5:	lea    rax,[rip+0x274c7]        # 0x449273
  421dac:	mov    QWORD PTR [rsp+0x20],rax
  421db1:	call   0x427dd8
  421db6:	nop
  421db7:	add    rsp,0x38
  421dbb:	ret    
  421dbc:	nop    DWORD PTR [rax+0x0]
  421dc0:	sub    rsp,0x48
  421dc4:	lea    rax,[rip+0x2b21a]        # 0x44cfe5
  421dcb:	lea    r9,[rip+0x28747]        # 0x44a519
  421dd2:	lea    r8,[rip+0x27298]        # 0x449071
  421dd9:	lea    rdx,[rip+0x2dd58]        # 0x44fb38
  421de0:	mov    QWORD PTR [rsp+0x30],rax
  421de5:	lea    rax,[rip+0x2aa45]        # 0x44c831
  421dec:	mov    QWORD PTR [rsp+0x28],rax
  421df1:	lea    rax,[rip+0x2aa28]        # 0x44c820
  421df8:	mov    QWORD PTR [rsp+0x20],rax
  421dfd:	call   0x427dd8
  421e02:	nop
  421e03:	add    rsp,0x48
  421e07:	ret    
  421e08:	nop    DWORD PTR [rax+rax*1+0x0]
  421e10:	lea    r8,[rip+0x2725a]        # 0x449071
  421e17:	lea    rdx,[rip+0x2ddd2]        # 0x44fbf0
  421e1e:	jmp    0x427dd8
  421e23:	nop    DWORD PTR [rax]
  421e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e30:	lea    r9,[rip+0x2b1ae]        # 0x44cfe5
  421e37:	lea    r8,[rip+0x27233]        # 0x449071
  421e3e:	lea    rdx,[rip+0x2ddd3]        # 0x44fc18
  421e45:	jmp    0x427dd8
  421e4a:	nop    WORD PTR [rax+rax*1+0x0]
  421e50:	sub    rsp,0x58
  421e54:	lea    rax,[rip+0x2deea]        # 0x44fd45
  421e5b:	lea    r9,[rip+0x29448]        # 0x44b2aa
  421e62:	lea    r8,[rip+0x2de15]        # 0x44fc7e
  421e69:	lea    rdx,[rip+0x2de20]        # 0x44fc90
  421e70:	mov    QWORD PTR [rsp+0x48],rax
  421e75:	lea    rax,[rip+0x2ded5]        # 0x44fd51
  421e7c:	mov    QWORD PTR [rsp+0x40],rax
  421e81:	lea    rax,[rip+0x2dedb]        # 0x44fd63
  421e88:	mov    QWORD PTR [rsp+0x38],rax
  421e8d:	lea    rax,[rip+0x2c7a5]        # 0x44e639
  421e94:	mov    QWORD PTR [rsp+0x30],rax
  421e99:	lea    rax,[rip+0x2decf]        # 0x44fd6f
  421ea0:	mov    QWORD PTR [rsp+0x28],rax
  421ea5:	lea    rax,[rip+0x2dece]        # 0x44fd7a
  421eac:	mov    QWORD PTR [rsp+0x20],rax
  421eb1:	call   0x427dd8
  421eb6:	nop
  421eb7:	add    rsp,0x58
  421ebb:	ret    
  421ebc:	nop    DWORD PTR [rax+0x0]
  421ec0:	lea    rdx,[rip+0x2deb9]        # 0x44fd80
  421ec7:	jmp    0x427dd8
  421ecc:	nop    DWORD PTR [rax+0x0]
  421ed0:	lea    r9,[rip+0x2dee0]        # 0x44fdb7
  421ed7:	lea    r8,[rip+0x2be7e]        # 0x44dd5c
  421ede:	lea    rdx,[rip+0x2ded7]        # 0x44fdbc
  421ee5:	jmp    0x427dd8
  421eea:	nop    WORD PTR [rax+rax*1+0x0]
  421ef0:	sub    rsp,0x78
  421ef4:	lea    rax,[rip+0x2726b]        # 0x449166
  421efb:	lea    r8,[rip+0x27254]        # 0x449156
  421f02:	lea    rdx,[rip+0x27255]        # 0x44915e
  421f09:	lea    r9,[rip+0x2714d]        # 0x44905d
  421f10:	mov    QWORD PTR [rsp+0x58],rax
  421f15:	mov    QWORD PTR [rsp+0x40],rax
  421f1a:	mov    QWORD PTR [rsp+0x28],rax
  421f1f:	lea    rax,[rip+0x27248]        # 0x44916e
  421f26:	mov    QWORD PTR [rsp+0x68],r8
  421f2b:	mov    QWORD PTR [rsp+0x60],rdx
  421f30:	mov    QWORD PTR [rsp+0x50],r8
  421f35:	mov    QWORD PTR [rsp+0x48],rdx
  421f3a:	mov    QWORD PTR [rsp+0x38],r8
  421f3f:	lea    r8,[rip+0x2712b]        # 0x449071
  421f46:	mov    QWORD PTR [rsp+0x30],rdx
  421f4b:	lea    rdx,[rip+0x2de86]        # 0x44fdd8
  421f52:	mov    QWORD PTR [rsp+0x20],rax
  421f57:	call   0x427dd8
  421f5c:	nop
  421f5d:	add    rsp,0x78
  421f61:	ret    
  421f62:	nop    DWORD PTR [rax+0x0]
  421f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f70:	lea    r9,[rip+0x28077]        # 0x449fee
  421f77:	lea    r8,[rip+0x2807c]        # 0x449ffa
  421f7e:	lea    rdx,[rip+0x2defb]        # 0x44fe80
  421f85:	jmp    0x427dd8
  421f8a:	nop    WORD PTR [rax+rax*1+0x0]
  421f90:	lea    r8,[rip+0x270da]        # 0x449071
  421f97:	lea    rdx,[rip+0x2df22]        # 0x44fec0
  421f9e:	jmp    0x427dd8
  421fa3:	nop    DWORD PTR [rax]
  421fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fb0:	lea    r8,[rip+0x270ba]        # 0x449071
  421fb7:	lea    rdx,[rip+0x2df3a]        # 0x44fef8
  421fbe:	jmp    0x427dd8
  421fc3:	nop    DWORD PTR [rax]
  421fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fd0:	lea    r8,[rip+0x2709a]        # 0x449071
  421fd7:	lea    rdx,[rip+0x2df52]        # 0x44ff30
  421fde:	jmp    0x427dd8
  421fe3:	nop    DWORD PTR [rax]
  421fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ff0:	lea    r8,[rip+0x2707a]        # 0x449071
  421ff7:	lea    rdx,[rip+0x2df52]        # 0x44ff50
  421ffe:	jmp    0x427dd8
  422003:	nop    DWORD PTR [rax]
  422006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422010:	lea    r8,[rip+0x2705a]        # 0x449071
  422017:	lea    rdx,[rip+0x2df72]        # 0x44ff90
  42201e:	jmp    0x427dd8
  422023:	nop    DWORD PTR [rax]
  422026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422030:	lea    r8,[rip+0x2703a]        # 0x449071
  422037:	lea    rdx,[rip+0x2df92]        # 0x44ffd0
  42203e:	jmp    0x427dd8
  422043:	nop    DWORD PTR [rax]
  422046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422050:	lea    r8,[rip+0x2701a]        # 0x449071
  422057:	lea    rdx,[rip+0x2dfb2]        # 0x450010
  42205e:	jmp    0x427dd8
  422063:	nop    DWORD PTR [rax]
  422066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422070:	lea    r8,[rip+0x26ffa]        # 0x449071
  422077:	lea    rdx,[rip+0x2dfda]        # 0x450058
  42207e:	jmp    0x427dd8
  422083:	nop    DWORD PTR [rax]
  422086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422090:	sub    rsp,0x38
  422094:	lea    rax,[rip+0x270bb]        # 0x449156
  42209b:	lea    r9,[rip+0x270c4]        # 0x449166
  4220a2:	lea    r8,[rip+0x26fc8]        # 0x449071
  4220a9:	lea    rdx,[rip+0x2dff0]        # 0x4500a0
  4220b0:	mov    QWORD PTR [rsp+0x28],rax
  4220b5:	lea    rax,[rip+0x270a2]        # 0x44915e
  4220bc:	mov    QWORD PTR [rsp+0x20],rax
  4220c1:	call   0x427dd8
  4220c6:	nop
  4220c7:	add    rsp,0x38
  4220cb:	ret    
  4220cc:	nop    DWORD PTR [rax+0x0]
  4220d0:	lea    r8,[rip+0x26f9a]        # 0x449071
  4220d7:	lea    rdx,[rip+0x2e022]        # 0x450100
  4220de:	jmp    0x427dd8
  4220e3:	nop    DWORD PTR [rax]
  4220e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4220f0:	lea    r8,[rip+0x26f7a]        # 0x449071
  4220f7:	lea    rdx,[rip+0x2e02a]        # 0x450128
  4220fe:	jmp    0x427dd8
  422103:	nop    DWORD PTR [rax]
  422106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422110:	lea    r8,[rip+0x26f5a]        # 0x449071
  422117:	lea    rdx,[rip+0x2e05a]        # 0x450178
  42211e:	jmp    0x427dd8
  422123:	nop    DWORD PTR [rax]
  422126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422130:	lea    r8,[rip+0x26f3a]        # 0x449071
  422137:	lea    rdx,[rip+0x2e082]        # 0x4501c0
  42213e:	jmp    0x427dd8
  422143:	nop    DWORD PTR [rax]
  422146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422150:	sub    rsp,0x38
  422154:	lea    rax,[rip+0x27e62]        # 0x449fbd
  42215b:	lea    r9,[rip+0x27e66]        # 0x449fc8
  422162:	lea    r8,[rip+0x26f08]        # 0x449071
  422169:	lea    rdx,[rip+0x2e098]        # 0x450208
  422170:	mov    QWORD PTR [rsp+0x20],rax
  422175:	call   0x427dd8
  42217a:	nop
  42217b:	add    rsp,0x38
  42217f:	ret    
  422180:	lea    r9,[rip+0x27e29]        # 0x449fb0
  422187:	lea    r8,[rip+0x26ee3]        # 0x449071
  42218e:	lea    rdx,[rip+0x2e0cb]        # 0x450260
  422195:	jmp    0x427dd8
  42219a:	nop    WORD PTR [rax+rax*1+0x0]
  4221a0:	lea    r9,[rip+0x27e09]        # 0x449fb0
  4221a7:	lea    r8,[rip+0x26ec3]        # 0x449071
  4221ae:	lea    rdx,[rip+0x2e0f3]        # 0x4502a8
  4221b5:	jmp    0x427dd8
  4221ba:	nop    WORD PTR [rax+rax*1+0x0]
  4221c0:	lea    r8,[rip+0x26eaa]        # 0x449071
  4221c7:	lea    rdx,[rip+0x2e122]        # 0x4502f0
  4221ce:	jmp    0x427dd8
  4221d3:	nop    DWORD PTR [rax]
  4221d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4221e0:	lea    r8,[rip+0x26e8a]        # 0x449071
  4221e7:	lea    rdx,[rip+0x2e132]        # 0x450320
  4221ee:	jmp    0x427dd8
  4221f3:	nop    DWORD PTR [rax]
  4221f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422200:	lea    r9,[rip+0x290a3]        # 0x44b2aa
  422207:	lea    r8,[rip+0x26e63]        # 0x449071
  42220e:	lea    rdx,[rip+0x2e133]        # 0x450348
  422215:	jmp    0x427dd8
  42221a:	nop    WORD PTR [rax+rax*1+0x0]
  422220:	lea    r8,[rip+0x26e4a]        # 0x449071
  422227:	lea    rdx,[rip+0x2e152]        # 0x450380
  42222e:	jmp    0x427dd8
  422233:	nop    DWORD PTR [rax]
  422236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422240:	lea    r8,[rip+0x26e2a]        # 0x449071
  422247:	lea    rdx,[rip+0x2e172]        # 0x4503c0
  42224e:	jmp    0x427dd8
  422253:	nop    DWORD PTR [rax]
  422256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422260:	lea    r8,[rip+0x26e0a]        # 0x449071
  422267:	lea    rdx,[rip+0x2e192]        # 0x450400
  42226e:	jmp    0x427dd8
  422273:	nop    DWORD PTR [rax]
  422276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422280:	lea    r8,[rip+0x26dea]        # 0x449071
  422287:	lea    rdx,[rip+0x2e1aa]        # 0x450438
  42228e:	jmp    0x427dd8
  422293:	nop    DWORD PTR [rax]
  422296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222a0:	lea    r8,[rip+0x26dca]        # 0x449071
  4222a7:	lea    rdx,[rip+0x2e1ca]        # 0x450478
  4222ae:	jmp    0x427dd8
  4222b3:	nop    DWORD PTR [rax]
  4222b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222c0:	lea    r8,[rip+0x26daa]        # 0x449071
  4222c7:	lea    rdx,[rip+0x2e1d2]        # 0x4504a0
  4222ce:	jmp    0x427dd8
  4222d3:	nop    DWORD PTR [rax]
  4222d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222e0:	lea    r8,[rip+0x26d8a]        # 0x449071
  4222e7:	lea    rdx,[rip+0x2e1fa]        # 0x4504e8
  4222ee:	jmp    0x427dd8
  4222f3:	nop    DWORD PTR [rax]
  4222f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422300:	lea    r8,[rip+0x26d6a]        # 0x449071
  422307:	lea    rdx,[rip+0x2e222]        # 0x450530
  42230e:	jmp    0x427dd8
  422313:	nop    DWORD PTR [rax]
  422316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422320:	lea    r8,[rip+0x26d4a]        # 0x449071
  422327:	lea    rdx,[rip+0x2e242]        # 0x450570
  42232e:	jmp    0x427dd8
  422333:	nop    DWORD PTR [rax]
  422336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422340:	lea    r9,[rip+0x28f63]        # 0x44b2aa
  422347:	lea    r8,[rip+0x26d23]        # 0x449071
  42234e:	lea    rdx,[rip+0x2e263]        # 0x4505b8
  422355:	jmp    0x427dd8
  42235a:	nop    WORD PTR [rax+rax*1+0x0]
  422360:	lea    r8,[rip+0x26d0a]        # 0x449071
  422367:	lea    rdx,[rip+0x2e28a]        # 0x4505f8
  42236e:	jmp    0x427dd8
  422373:	nop    DWORD PTR [rax]
  422376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422380:	lea    r8,[rip+0x26cea]        # 0x449071
  422387:	lea    rdx,[rip+0x2e2aa]        # 0x450638
  42238e:	jmp    0x427dd8
  422393:	nop    DWORD PTR [rax]
  422396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4223a0:	lea    r9,[rip+0x2a280]        # 0x44c627
  4223a7:	lea    r8,[rip+0x28446]        # 0x44a7f4
  4223ae:	lea    rdx,[rip+0x2e2ab]        # 0x450660
  4223b5:	jmp    0x427dd8
  4223ba:	nop    WORD PTR [rax+rax*1+0x0]
  4223c0:	lea    r8,[rip+0x26caa]        # 0x449071
  4223c7:	lea    rdx,[rip+0x2e2ea]        # 0x4506b8
  4223ce:	jmp    0x427dd8
  4223d3:	nop    DWORD PTR [rax]
  4223d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4223e0:	lea    rdx,[rip+0x2e30b]        # 0x4506f2
  4223e7:	jmp    0x427dd8
  4223ec:	nop    DWORD PTR [rax+0x0]
  4223f0:	lea    r9,[rip+0x2e316]        # 0x45070d
  4223f7:	lea    r8,[rip+0x26c73]        # 0x449071
  4223fe:	lea    rdx,[rip+0x2e312]        # 0x450717
  422405:	jmp    0x427dd8
  42240a:	nop    WORD PTR [rax+rax*1+0x0]
  422410:	sub    rsp,0x68
  422414:	lea    rax,[rip+0x2ab69]        # 0x44cf84
  42241b:	lea    r9,[rip+0x2e313]        # 0x450735
  422422:	lea    r8,[rip+0x26e4a]        # 0x449273
  422429:	lea    rdx,[rip+0x2e310]        # 0x450740
  422430:	mov    QWORD PTR [rsp+0x50],rax
  422435:	mov    QWORD PTR [rsp+0x48],rax
  42243a:	mov    QWORD PTR [rsp+0x40],rax
  42243f:	mov    QWORD PTR [rsp+0x38],rax
  422444:	mov    QWORD PTR [rsp+0x30],rax
  422449:	lea    rax,[rip+0x2ab68]        # 0x44cfb8
  422450:	mov    QWORD PTR [rsp+0x20],r9
  422455:	mov    QWORD PTR [rsp+0x28],rax
  42245a:	call   0x427dd8
  42245f:	nop
  422460:	add    rsp,0x68
  422464:	ret    
  422465:	nop
  422466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422470:	sub    rsp,0x58
  422474:	lea    rax,[rip+0x2e46e]        # 0x4508e9
  42247b:	lea    r9,[rip+0x2d8e1]        # 0x44fd63
  422482:	lea    r8,[rip+0x2e381]        # 0x45080a
  422489:	lea    rdx,[rip+0x2e388]        # 0x450818
  422490:	mov    QWORD PTR [rsp+0x48],rax
  422495:	mov    QWORD PTR [rsp+0x40],rax
  42249a:	mov    QWORD PTR [rsp+0x38],rax
  42249f:	mov    QWORD PTR [rsp+0x30],rax
  4224a4:	mov    QWORD PTR [rsp+0x28],rax
  4224a9:	lea    rax,[rip+0x2e440]        # 0x4508f0
  4224b0:	mov    QWORD PTR [rsp+0x20],rax
  4224b5:	call   0x427dd8
  4224ba:	nop
  4224bb:	add    rsp,0x58
  4224bf:	ret    
  4224c0:	sub    rsp,0x138
  4224c7:	lea    rdx,[rip+0x29847]        # 0x44bd15
  4224ce:	lea    rax,[rip+0x274c5]        # 0x44999a
  4224d5:	lea    r9,[rip+0x26f2e]        # 0x44940a
  4224dc:	lea    r8,[rip+0x28dc7]        # 0x44b2aa
  4224e3:	mov    QWORD PTR [rsp+0x110],rdx
  4224eb:	lea    rdx,[rip+0x284b5]        # 0x44a9a7
  4224f2:	mov    QWORD PTR [rsp+0x128],rax
  4224fa:	mov    QWORD PTR [rsp+0x120],rax
  422502:	mov    QWORD PTR [rsp+0x118],rax
  42250a:	mov    QWORD PTR [rsp+0x100],rdx
  422512:	lea    rdx,[rip+0x2ec90]        # 0x4511a9
  422519:	mov    QWORD PTR [rsp+0x108],rax
  422521:	mov    QWORD PTR [rsp+0xf8],rax
  422529:	mov    QWORD PTR [rsp+0xf0],r9
  422531:	mov    QWORD PTR [rsp+0xe0],rdx
  422539:	lea    rdx,[rip+0x2b81c]        # 0x44dd5c
  422540:	mov    QWORD PTR [rsp+0xe8],rax
  422548:	mov    QWORD PTR [rsp+0xd8],rax
  422550:	mov    QWORD PTR [rsp+0xc8],rax
  422558:	mov    QWORD PTR [rsp+0xd0],rdx
  422560:	lea    rdx,[rip+0x2ec47]        # 0x4511ae
  422567:	mov    QWORD PTR [rsp+0xc0],r9
  42256f:	mov    QWORD PTR [rsp+0x98],rax
  422577:	mov    QWORD PTR [rsp+0x88],rax
  42257f:	mov    QWORD PTR [rsp+0xb8],rdx
  422587:	lea    rdx,[rip+0x2ec29]        # 0x4511b7
  42258e:	mov    QWORD PTR [rsp+0x78],rax
  422593:	mov    QWORD PTR [rsp+0x68],rax
  422598:	mov    QWORD PTR [rsp+0x58],rax
  42259d:	mov    QWORD PTR [rsp+0xb0],rdx
  4225a5:	lea    rdx,[rip+0x26bba]        # 0x449166
  4225ac:	mov    QWORD PTR [rsp+0x50],r9
  4225b1:	mov    QWORD PTR [rsp+0x40],rax
  4225b6:	mov    QWORD PTR [rsp+0x38],r8
  4225bb:	mov    QWORD PTR [rsp+0xa8],rdx
  4225c3:	lea    rdx,[rip+0x27a16]        # 0x449fe0
  4225ca:	mov    QWORD PTR [rsp+0xa0],rdx
  4225d2:	lea    rdx,[rip+0x2a04e]        # 0x44c627
  4225d9:	mov    QWORD PTR [rsp+0x90],rdx
  4225e1:	lea    rdx,[rip+0x2c291]        # 0x44e879
  4225e8:	mov    QWORD PTR [rsp+0x80],rdx
  4225f0:	lea    rdx,[rip+0x2ebc9]        # 0x4511c0
  4225f7:	mov    QWORD PTR [rsp+0x70],rdx
  4225fc:	lea    rdx,[rip+0x28c86]        # 0x44b289
  422603:	mov    QWORD PTR [rsp+0x60],rdx
  422608:	lea    rdx,[rip+0x2ebbd]        # 0x4511cc
  42260f:	mov    QWORD PTR [rsp+0x48],rdx
  422614:	lea    rdx,[rip+0x27efe]        # 0x44a519
  42261b:	mov    QWORD PTR [rsp+0x30],rdx
  422620:	mov    QWORD PTR [rsp+0x28],rdx
  422625:	lea    rdx,[rip+0x2e2ec]        # 0x450918
  42262c:	mov    QWORD PTR [rsp+0x20],rax
  422631:	call   0x427dd8
  422636:	nop
  422637:	add    rsp,0x138
  42263e:	ret    
  42263f:	nop
  422640:	sub    rsp,0x58
  422644:	lea    rax,[rip+0x2d6fa]        # 0x44fd45
  42264b:	lea    r9,[rip+0x28c58]        # 0x44b2aa
  422652:	lea    r8,[rip+0x2d625]        # 0x44fc7e
  422659:	lea    rdx,[rip+0x2eb80]        # 0x4511e0
  422660:	mov    QWORD PTR [rsp+0x40],rax
  422665:	lea    rax,[rip+0x2d6e5]        # 0x44fd51
  42266c:	mov    QWORD PTR [rsp+0x38],rax
  422671:	lea    rax,[rip+0x2a96d]        # 0x44cfe5
  422678:	mov    QWORD PTR [rsp+0x30],rax
  42267d:	lea    rax,[rip+0x2736d]        # 0x4499f1
  422684:	mov    QWORD PTR [rsp+0x28],rax
  422689:	lea    rax,[rip+0x27e89]        # 0x44a519
  422690:	mov    QWORD PTR [rsp+0x20],rax
  422695:	call   0x427dd8
  42269a:	nop
  42269b:	add    rsp,0x58
  42269f:	ret    
  4226a0:	lea    r8,[rip+0x2ebf6]        # 0x45129d
  4226a7:	lea    rdx,[rip+0x2ebf7]        # 0x4512a5
  4226ae:	jmp    0x427dd8
  4226b3:	nop    DWORD PTR [rax]
  4226b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226c0:	lea    r8,[rip+0x2a915]        # 0x44cfdc
  4226c7:	lea    rdx,[rip+0x2ebe1]        # 0x4512af
  4226ce:	jmp    0x427dd8
  4226d3:	nop    DWORD PTR [rax]
  4226d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226e0:	sub    rsp,0x38
  4226e4:	lea    rax,[rip+0x2ecac]        # 0x451397
  4226eb:	lea    r9,[rip+0x2ebc7]        # 0x4512b9
  4226f2:	lea    r8,[rip+0x26978]        # 0x449071
  4226f9:	lea    rdx,[rip+0x2ebc8]        # 0x4512c8
  422700:	mov    QWORD PTR [rsp+0x20],rax
  422705:	call   0x427dd8
  42270a:	nop
  42270b:	add    rsp,0x38
  42270f:	ret    
  422710:	sub    rsp,0x58
  422714:	lea    rax,[rip+0x2e1ce]        # 0x4508e9
  42271b:	lea    r9,[rip+0x2d641]        # 0x44fd63
  422722:	lea    r8,[rip+0x2e0e1]        # 0x45080a
  422729:	lea    rdx,[rip+0x2ec88]        # 0x4513b8
  422730:	mov    QWORD PTR [rsp+0x48],rax
  422735:	mov    QWORD PTR [rsp+0x40],rax
  42273a:	mov    QWORD PTR [rsp+0x38],rax
  42273f:	mov    QWORD PTR [rsp+0x30],rax
  422744:	mov    QWORD PTR [rsp+0x28],rax
  422749:	lea    rax,[rip+0x2e1a0]        # 0x4508f0
  422750:	mov    QWORD PTR [rsp+0x20],rax
  422755:	call   0x427dd8
  42275a:	nop
  42275b:	add    rsp,0x58
  42275f:	ret    
  422760:	lea    r9,[rip+0x2ed21]        # 0x451488
  422767:	lea    r8,[rip+0x2eb2f]        # 0x45129d
  42276e:	lea    rdx,[rip+0x2ed1b]        # 0x451490
  422775:	jmp    0x427dd8
  42277a:	nop    WORD PTR [rax+rax*1+0x0]
  422780:	sub    rsp,0x38
  422784:	lea    rax,[rip+0x2dfaa]        # 0x450735
  42278b:	lea    r9,[rip+0x27dac]        # 0x44a53e
  422792:	lea    r8,[rip+0x268d8]        # 0x449071
  422799:	lea    rdx,[rip+0x2ed08]        # 0x4514a8
  4227a0:	mov    QWORD PTR [rsp+0x20],rax
  4227a5:	call   0x427dd8
  4227aa:	nop
  4227ab:	add    rsp,0x38
  4227af:	ret    
  4227b0:	lea    r8,[rip+0x2a5a4]        # 0x44cd5b
  4227b7:	lea    rdx,[rip+0x2ed0e]        # 0x4514cc
  4227be:	jmp    0x427dd8
  4227c3:	nop    DWORD PTR [rax]
  4227c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227d0:	lea    r9,[rip+0x2ed0c]        # 0x4514e3
  4227d7:	lea    r8,[rip+0x2ed0e]        # 0x4514ec
  4227de:	lea    rdx,[rip+0x2ed13]        # 0x4514f8
  4227e5:	jmp    0x427dd8
  4227ea:	nop    WORD PTR [rax+rax*1+0x0]
  4227f0:	lea    r8,[rip+0x2687a]        # 0x449071
  4227f7:	lea    rdx,[rip+0x2ed22]        # 0x451520
  4227fe:	jmp    0x427dd8
  422803:	nop    DWORD PTR [rax]
  422806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422810:	lea    r8,[rip+0x2685a]        # 0x449071
  422817:	lea    rdx,[rip+0x2ed4a]        # 0x451568
  42281e:	jmp    0x427dd8
  422823:	nop    DWORD PTR [rax]
  422826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422830:	lea    r8,[rip+0x2ed6c]        # 0x4515a3
  422837:	lea    rdx,[rip+0x2ed74]        # 0x4515b2
  42283e:	jmp    0x427dd8
  422843:	nop    DWORD PTR [rax]
  422846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422850:	lea    r8,[rip+0x26b67]        # 0x4493be
  422857:	lea    rdx,[rip+0x2ed6d]        # 0x4515cb
  42285e:	jmp    0x427dd8
  422863:	nop    DWORD PTR [rax]
  422866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422870:	sub    rsp,0x138
  422877:	lea    rdx,[rip+0x29497]        # 0x44bd15
  42287e:	lea    rax,[rip+0x27115]        # 0x44999a
  422885:	lea    r9,[rip+0x26b7e]        # 0x44940a
  42288c:	lea    r8,[rip+0x28a17]        # 0x44b2aa
  422893:	mov    QWORD PTR [rsp+0x110],rdx
  42289b:	lea    rdx,[rip+0x28105]        # 0x44a9a7
  4228a2:	mov    QWORD PTR [rsp+0x128],rax
  4228aa:	mov    QWORD PTR [rsp+0x120],rax
  4228b2:	mov    QWORD PTR [rsp+0x118],rax
  4228ba:	mov    QWORD PTR [rsp+0x100],rdx
  4228c2:	lea    rdx,[rip+0x2e8e0]        # 0x4511a9
  4228c9:	mov    QWORD PTR [rsp+0x108],rax
  4228d1:	mov    QWORD PTR [rsp+0xf8],rax
  4228d9:	mov    QWORD PTR [rsp+0xf0],r9
  4228e1:	mov    QWORD PTR [rsp+0xe0],rdx
  4228e9:	lea    rdx,[rip+0x2b46c]        # 0x44dd5c
  4228f0:	mov    QWORD PTR [rsp+0xe8],rax
  4228f8:	mov    QWORD PTR [rsp+0xd8],rax
  422900:	mov    QWORD PTR [rsp+0xc8],rax
  422908:	mov    QWORD PTR [rsp+0xd0],rdx
  422910:	lea    rdx,[rip+0x2e897]        # 0x4511ae
  422917:	mov    QWORD PTR [rsp+0xc0],r9
  42291f:	mov    QWORD PTR [rsp+0x98],rax
  422927:	mov    QWORD PTR [rsp+0x88],rax
  42292f:	mov    QWORD PTR [rsp+0xb8],rdx
  422937:	lea    rdx,[rip+0x2e879]        # 0x4511b7
  42293e:	mov    QWORD PTR [rsp+0x78],rax
  422943:	mov    QWORD PTR [rsp+0x68],rax
  422948:	mov    QWORD PTR [rsp+0x58],rax
  42294d:	mov    QWORD PTR [rsp+0xb0],rdx
  422955:	lea    rdx,[rip+0x2680a]        # 0x449166
  42295c:	mov    QWORD PTR [rsp+0x50],r9
  422961:	mov    QWORD PTR [rsp+0x40],rax
  422966:	mov    QWORD PTR [rsp+0x38],r8
  42296b:	mov    QWORD PTR [rsp+0xa8],rdx
  422973:	lea    rdx,[rip+0x27666]        # 0x449fe0
  42297a:	mov    QWORD PTR [rsp+0xa0],rdx
  422982:	lea    rdx,[rip+0x29c9e]        # 0x44c627
  422989:	mov    QWORD PTR [rsp+0x90],rdx
  422991:	lea    rdx,[rip+0x2bee1]        # 0x44e879
  422998:	mov    QWORD PTR [rsp+0x80],rdx
  4229a0:	lea    rdx,[rip+0x2e819]        # 0x4511c0
  4229a7:	mov    QWORD PTR [rsp+0x70],rdx
  4229ac:	lea    rdx,[rip+0x288d6]        # 0x44b289
  4229b3:	mov    QWORD PTR [rsp+0x60],rdx
  4229b8:	lea    rdx,[rip+0x2e80d]        # 0x4511cc
  4229bf:	mov    QWORD PTR [rsp+0x48],rdx
  4229c4:	lea    rdx,[rip+0x27b4e]        # 0x44a519
  4229cb:	mov    QWORD PTR [rsp+0x30],rdx
  4229d0:	mov    QWORD PTR [rsp+0x28],rdx
  4229d5:	lea    rdx,[rip+0x2ec04]        # 0x4515e0
  4229dc:	mov    QWORD PTR [rsp+0x20],rax
  4229e1:	call   0x427dd8
  4229e6:	nop
  4229e7:	add    rsp,0x138
  4229ee:	ret    
  4229ef:	nop
  4229f0:	lea    rdx,[rip+0x2f649]        # 0x452040
  4229f7:	jmp    0x427dd8
  4229fc:	nop    DWORD PTR [rax+0x0]
  422a00:	lea    r8,[rip+0x2a354]        # 0x44cd5b
  422a07:	lea    rdx,[rip+0x2f652]        # 0x452060
  422a0e:	jmp    0x427dd8
  422a13:	nop    DWORD PTR [rax]
  422a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a20:	lea    r8,[rip+0x2eb7c]        # 0x4515a3
  422a27:	lea    rdx,[rip+0x2f64a]        # 0x452078
  422a2e:	jmp    0x427dd8
  422a33:	nop    DWORD PTR [rax]
  422a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a40:	lea    r8,[rip+0x2eb5c]        # 0x4515a3
  422a47:	lea    rdx,[rip+0x2f65e]        # 0x4520ac
  422a4e:	jmp    0x427dd8
  422a53:	nop    DWORD PTR [rax]
  422a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a60:	sub    rsp,0x128
  422a67:	lea    rax,[rip+0x266f8]        # 0x449166
  422a6e:	lea    r8,[rip+0x266e1]        # 0x449156
  422a75:	lea    rdx,[rip+0x266e2]        # 0x44915e
  422a7c:	lea    r10,[rip+0x266eb]        # 0x44916e
  422a83:	lea    r9,[rip+0x2751a]        # 0x449fa4
  422a8a:	lea    r11,[rip+0x2ce49]        # 0x44f8da
  422a91:	mov    QWORD PTR [rsp+0x108],rax
  422a99:	mov    QWORD PTR [rsp+0xf0],rax
  422aa1:	mov    QWORD PTR [rsp+0xd8],rax
  422aa9:	mov    QWORD PTR [rsp+0x68],rax
  422aae:	lea    rax,[rip+0x2752b]        # 0x449fe0
  422ab5:	mov    QWORD PTR [rsp+0x118],r8
  422abd:	mov    QWORD PTR [rsp+0x110],rdx
  422ac5:	mov    QWORD PTR [rsp+0x60],rax
  422aca:	lea    rax,[rip+0x2658c]        # 0x44905d
  422ad1:	mov    QWORD PTR [rsp+0x100],r8
  422ad9:	mov    QWORD PTR [rsp+0xf8],rdx
  422ae1:	mov    QWORD PTR [rsp+0xe8],r8
  422ae9:	mov    QWORD PTR [rsp+0x38],rax
  422aee:	lea    rax,[rip+0x27511]        # 0x44a006
  422af5:	mov    QWORD PTR [rsp+0xe0],rdx
  422afd:	mov    QWORD PTR [rsp+0xd0],r10
  422b05:	mov    QWORD PTR [rsp+0x78],r8
  422b0a:	lea    r10,[rip+0x27f02]        # 0x44aa13
  422b11:	mov    QWORD PTR [rsp+0x30],rax
  422b16:	lea    rax,[rip+0x279fc]        # 0x44a519
  422b1d:	mov    QWORD PTR [rsp+0x70],rdx
  422b22:	lea    r8,[rip+0x2f590]        # 0x4520b9
  422b29:	lea    rdx,[rip+0x2f598]        # 0x4520c8
  422b30:	mov    QWORD PTR [rsp+0xc8],r11
  422b38:	mov    QWORD PTR [rsp+0x28],rax
  422b3d:	lea    rax,[rip+0x28766]        # 0x44b2aa
  422b44:	mov    QWORD PTR [rsp+0xc0],r9
  422b4c:	mov    QWORD PTR [rsp+0xb8],r9
  422b54:	mov    QWORD PTR [rsp+0xb0],r9
  422b5c:	mov    QWORD PTR [rsp+0x20],rax
  422b61:	mov    QWORD PTR [rsp+0xa8],r9
  422b69:	mov    QWORD PTR [rsp+0xa0],r9
  422b71:	mov    QWORD PTR [rsp+0x98],r9
  422b79:	mov    QWORD PTR [rsp+0x90],r9
  422b81:	mov    QWORD PTR [rsp+0x88],r9
  422b89:	mov    QWORD PTR [rsp+0x80],r10
  422b91:	mov    QWORD PTR [rsp+0x58],r9
  422b96:	mov    QWORD PTR [rsp+0x50],r9
  422b9b:	mov    QWORD PTR [rsp+0x48],r9
  422ba0:	mov    QWORD PTR [rsp+0x40],r9
  422ba5:	call   0x427dd8
  422baa:	nop
  422bab:	add    rsp,0x128
  422bb2:	ret    
  422bb3:	nop    DWORD PTR [rax]
  422bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422bc0:	push   rdi
  422bc1:	push   rsi
  422bc2:	push   rbx
  422bc3:	sub    rsp,0x1e0
  422bca:	lea    rax,[rip+0x2fbd3]        # 0x4527a4
  422bd1:	lea    rdx,[rip+0x2fc41]        # 0x452819
  422bd8:	lea    r11,[rip+0x2fbe1]        # 0x4527c0
  422bdf:	lea    r10,[rip+0x2fc1f]        # 0x452805
  422be6:	lea    r9,[rip+0x2fc4b]        # 0x452838
  422bed:	lea    r8,[rip+0x273ec]        # 0x449fe0
  422bf4:	mov    QWORD PTR [rsp+0x1c8],rax
  422bfc:	lea    rax,[rip+0x2fba8]        # 0x4527ab
  422c03:	lea    rbx,[rip+0x286a0]        # 0x44b2aa
  422c0a:	lea    rsi,[rip+0x2fc15]        # 0x452826
  422c11:	lea    rdi,[rip+0x2fbaf]        # 0x4527c7
  422c18:	mov    QWORD PTR [rsp+0x1a8],r11
  422c20:	mov    QWORD PTR [rsp+0x1c0],rax
  422c28:	lea    rax,[rip+0x2fb83]        # 0x4527b2
  422c2f:	mov    QWORD PTR [rsp+0x178],r10
  422c37:	mov    QWORD PTR [rsp+0x198],rdi
  422c3f:	mov    QWORD PTR [rsp+0x168],r10
  422c47:	mov    QWORD PTR [rsp+0x1b8],rax
  422c4f:	lea    rax,[rip+0x2fb63]        # 0x4527b9
  422c56:	mov    QWORD PTR [rsp+0x160],rdx
  422c5e:	mov    QWORD PTR [rsp+0x148],r9
  422c66:	mov    QWORD PTR [rsp+0x140],r8
  422c6e:	mov    QWORD PTR [rsp+0x1b0],rax
  422c76:	lea    rax,[rip+0x2789c]        # 0x44a519
  422c7d:	mov    QWORD PTR [rsp+0x130],r9
  422c85:	mov    QWORD PTR [rsp+0x128],r8
  422c8d:	mov    QWORD PTR [rsp+0x110],r9
  422c95:	mov    QWORD PTR [rsp+0x1a0],rax
  422c9d:	lea    rax,[rip+0x2fb33]        # 0x4527d7
  422ca4:	mov    QWORD PTR [rsp+0x108],r8
  422cac:	mov    QWORD PTR [rsp+0x100],rdx
  422cb4:	mov    QWORD PTR [rsp+0xf0],r9
  422cbc:	lea    r9,[rip+0x26d2e]        # 0x4499f1
  422cc3:	mov    QWORD PTR [rsp+0x190],rax
  422ccb:	lea    rax,[rip+0x2fb18]        # 0x4527ea
  422cd2:	mov    QWORD PTR [rsp+0xe8],r8
  422cda:	mov    QWORD PTR [rsp+0xe0],rdx
  422ce2:	mov    QWORD PTR [rsp+0xd0],rdi
  422cea:	lea    r8,[rip+0x2cf8d]        # 0x44fc7e
  422cf1:	mov    QWORD PTR [rsp+0x188],rax
  422cf9:	lea    rax,[rip+0x2faf6]        # 0x4527f6
  422d00:	mov    QWORD PTR [rsp+0x1d0],rbx
  422d08:	mov    QWORD PTR [rsp+0x150],rsi
  422d10:	mov    QWORD PTR [rsp+0x138],rsi
  422d18:	lea    rdi,[rip+0x28794]        # 0x44b4b3
  422d1f:	mov    QWORD PTR [rsp+0x180],rax
  422d27:	lea    rax,[rip+0x2fae1]        # 0x45280f
  422d2e:	mov    QWORD PTR [rsp+0x120],rsi
  422d36:	mov    QWORD PTR [rsp+0x170],rax
  422d3e:	lea    rax,[rip+0x2d035]        # 0x44fd7a
  422d45:	mov    QWORD PTR [rsp+0x158],rax
  422d4d:	mov    QWORD PTR [rsp+0x118],rax
  422d55:	mov    QWORD PTR [rsp+0xf8],rax
  422d5d:	mov    QWORD PTR [rsp+0xd8],rax
  422d65:	mov    QWORD PTR [rsp+0xc8],rdx
  422d6d:	mov    QWORD PTR [rsp+0xc0],rax
  422d75:	mov    QWORD PTR [rsp+0xa8],rax
  422d7d:	lea    rax,[rip+0x2fac4]        # 0x452848
  422d84:	mov    QWORD PTR [rsp+0xb0],rdx
  422d8c:	lea    rdx,[rip+0x2f515]        # 0x4522a8
  422d93:	mov    QWORD PTR [rsp+0x68],r9
  422d98:	mov    QWORD PTR [rsp+0x60],r11
  422d9d:	mov    QWORD PTR [rsp+0x98],rax
  422da5:	lea    rax,[rip+0x2db3d]        # 0x4508e9
  422dac:	mov    QWORD PTR [rsp+0x40],r9
  422db1:	mov    QWORD PTR [rsp+0x30],r10
  422db6:	mov    QWORD PTR [rsp+0x20],r9
  422dbb:	mov    QWORD PTR [rsp+0x88],rax
  422dc3:	mov    QWORD PTR [rsp+0x78],rax
  422dc8:	lea    rax,[rip+0x2c1bf]        # 0x44ef8e
  422dcf:	mov    QWORD PTR [rsp+0xb8],r11
  422dd7:	mov    QWORD PTR [rsp+0xa0],rbx
  422ddf:	mov    QWORD PTR [rsp+0x70],rax
  422de4:	lea    rax,[rip+0x2fa7c]        # 0x452867
  422deb:	mov    QWORD PTR [rsp+0x90],rbx
  422df3:	mov    QWORD PTR [rsp+0x80],rdi
  422dfb:	mov    QWORD PTR [rsp+0x58],rax
  422e00:	lea    rax,[rip+0x2fa72]        # 0x452879
  422e07:	mov    QWORD PTR [rsp+0x50],rax
  422e0c:	lea    rax,[rip+0x2b826]        # 0x44e639
  422e13:	mov    QWORD PTR [rsp+0x48],rax
  422e18:	mov    QWORD PTR [rsp+0x38],rax
  422e1d:	lea    rax,[rip+0x2cf21]        # 0x44fd45
  422e24:	mov    QWORD PTR [rsp+0x28],rax
  422e29:	call   0x427dd8
  422e2e:	nop
  422e2f:	add    rsp,0x1e0
  422e36:	pop    rbx
  422e37:	pop    rsi
  422e38:	pop    rdi
  422e39:	ret    
  422e3a:	nop    WORD PTR [rax+rax*1+0x0]
  422e40:	sub    rsp,0xa8
  422e47:	lea    rax,[rip+0x2845c]        # 0x44b2aa
  422e4e:	lea    rdx,[rip+0x2865e]        # 0x44b4b3
  422e55:	lea    r9,[rip+0x26b95]        # 0x4499f1
  422e5c:	lea    r8,[rip+0x2ce1b]        # 0x44fc7e
  422e63:	mov    QWORD PTR [rsp+0x98],rax
  422e6b:	lea    rax,[rip+0x2da77]        # 0x4508e9
  422e72:	mov    QWORD PTR [rsp+0x88],rdx
  422e7a:	lea    rdx,[rip+0x2fa07]        # 0x452888
  422e81:	mov    QWORD PTR [rsp+0x70],r9
  422e86:	mov    QWORD PTR [rsp+0x48],r9
  422e8b:	mov    QWORD PTR [rsp+0x90],rax
  422e93:	mov    QWORD PTR [rsp+0x80],rax
  422e9b:	lea    rax,[rip+0x2c0ec]        # 0x44ef8e
  422ea2:	mov    QWORD PTR [rsp+0x20],r9
  422ea7:	mov    QWORD PTR [rsp+0x78],rax
  422eac:	lea    rax,[rip+0x2f90d]        # 0x4527c0
  422eb3:	mov    QWORD PTR [rsp+0x68],rax
  422eb8:	lea    rax,[rip+0x2f9a8]        # 0x452867
  422ebf:	mov    QWORD PTR [rsp+0x60],rax
  422ec4:	lea    rax,[rip+0x2f9ae]        # 0x452879
  422ecb:	mov    QWORD PTR [rsp+0x58],rax
  422ed0:	lea    rax,[rip+0x2b762]        # 0x44e639
  422ed7:	mov    QWORD PTR [rsp+0x50],rax
  422edc:	mov    QWORD PTR [rsp+0x40],rax
  422ee1:	lea    rax,[rip+0x2f91d]        # 0x452805
  422ee8:	mov    QWORD PTR [rsp+0x38],rax
  422eed:	lea    rax,[rip+0x2fc06]        # 0x452afa
  422ef4:	mov    QWORD PTR [rsp+0x30],rax
  422ef9:	lea    rax,[rip+0x2ce45]        # 0x44fd45
  422f00:	mov    QWORD PTR [rsp+0x28],rax
  422f05:	call   0x427dd8
  422f0a:	nop
  422f0b:	add    rsp,0xa8
  422f12:	ret    
  422f13:	nop    DWORD PTR [rax]
  422f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f20:	sub    rsp,0x38
  422f24:	lea    rax,[rip+0x2fc56]        # 0x452b81
  422f2b:	lea    r9,[rip+0x264a4]        # 0x4493d6
  422f32:	lea    r8,[rip+0x26485]        # 0x4493be
  422f39:	lea    rdx,[rip+0x2fbc8]        # 0x452b08
  422f40:	mov    QWORD PTR [rsp+0x28],rax
  422f45:	mov    QWORD PTR [rsp+0x20],r9
  422f4a:	call   0x427dd8
  422f4f:	nop
  422f50:	add    rsp,0x38
  422f54:	ret    
  422f55:	nop
  422f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f60:	lea    r8,[rip+0x2610a]        # 0x449071
  422f67:	lea    rdx,[rip+0x2fc22]        # 0x452b90
  422f6e:	jmp    0x427dd8
  422f73:	nop    DWORD PTR [rax]
  422f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f80:	lea    r8,[rip+0x26a13]        # 0x44999a
  422f87:	lea    rdx,[rip+0x2fc42]        # 0x452bd0
  422f8e:	jmp    0x427dd8
  422f93:	nop    DWORD PTR [rax]
  422f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fa0:	lea    r8,[rip+0x2784d]        # 0x44a7f4
  422fa7:	lea    rdx,[rip+0x2fc72]        # 0x452c20
  422fae:	jmp    0x427dd8
  422fb3:	nop    DWORD PTR [rax]
  422fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fc0:	sub    rsp,0x38
  422fc4:	lea    rax,[rip+0x298ad]        # 0x44c878
  422fcb:	lea    r8,[rip+0x298c8]        # 0x44c89a
  422fd2:	lea    r9,[rip+0x2fcca]        # 0x452ca3
  422fd9:	lea    rdx,[rip+0x2fcd0]        # 0x452cb0
  422fe0:	mov    QWORD PTR [rsp+0x28],rax
  422fe5:	mov    QWORD PTR [rsp+0x20],r8
  422fea:	call   0x427dd8
  422fef:	nop
  422ff0:	add    rsp,0x38
  422ff4:	ret    
  422ff5:	nop
  422ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423000:	lea    r8,[rip+0x2606a]        # 0x449071
  423007:	lea    rdx,[rip+0x2fda1]        # 0x452daf
  42300e:	jmp    0x427dd8
  423013:	nop    DWORD PTR [rax]
  423016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423020:	lea    r9,[rip+0x29851]        # 0x44c878
  423027:	lea    r8,[rip+0x2986c]        # 0x44c89a
  42302e:	lea    rdx,[rip+0x2fd8b]        # 0x452dc0
  423035:	jmp    0x427dd8
  42303a:	nop    WORD PTR [rax+rax*1+0x0]
  423040:	push   rdi
  423041:	push   rsi
  423042:	push   rbx
  423043:	sub    rsp,0x1e0
  42304a:	lea    rax,[rip+0x2f753]        # 0x4527a4
  423051:	lea    rdx,[rip+0x2f7c1]        # 0x452819
  423058:	lea    r11,[rip+0x2f761]        # 0x4527c0
  42305f:	lea    r10,[rip+0x2f79f]        # 0x452805
  423066:	lea    r9,[rip+0x2f7cb]        # 0x452838
  42306d:	lea    r8,[rip+0x26f6c]        # 0x449fe0
  423074:	mov    QWORD PTR [rsp+0x1c8],rax
  42307c:	lea    rax,[rip+0x2f728]        # 0x4527ab
  423083:	lea    rbx,[rip+0x28220]        # 0x44b2aa
  42308a:	lea    rsi,[rip+0x2f795]        # 0x452826
  423091:	lea    rdi,[rip+0x2f72f]        # 0x4527c7
  423098:	mov    QWORD PTR [rsp+0x1a8],r11
  4230a0:	mov    QWORD PTR [rsp+0x1c0],rax
  4230a8:	lea    rax,[rip+0x2f703]        # 0x4527b2
  4230af:	mov    QWORD PTR [rsp+0x178],r10
  4230b7:	mov    QWORD PTR [rsp+0x198],rdi
  4230bf:	mov    QWORD PTR [rsp+0x168],r10
  4230c7:	mov    QWORD PTR [rsp+0x1b8],rax
  4230cf:	lea    rax,[rip+0x2f6e3]        # 0x4527b9
  4230d6:	mov    QWORD PTR [rsp+0x160],rdx
  4230de:	mov    QWORD PTR [rsp+0x148],r9
  4230e6:	mov    QWORD PTR [rsp+0x140],r8
  4230ee:	mov    QWORD PTR [rsp+0x1b0],rax
  4230f6:	lea    rax,[rip+0x2741c]        # 0x44a519
  4230fd:	mov    QWORD PTR [rsp+0x130],r9
  423105:	mov    QWORD PTR [rsp+0x128],r8
  42310d:	mov    QWORD PTR [rsp+0x110],r9
  423115:	mov    QWORD PTR [rsp+0x1a0],rax
  42311d:	lea    rax,[rip+0x2f6b3]        # 0x4527d7
  423124:	mov    QWORD PTR [rsp+0x108],r8
  42312c:	mov    QWORD PTR [rsp+0x100],rdx
  423134:	mov    QWORD PTR [rsp+0xf0],r9
  42313c:	lea    r9,[rip+0x268ae]        # 0x4499f1
  423143:	mov    QWORD PTR [rsp+0x190],rax
  42314b:	lea    rax,[rip+0x2f698]        # 0x4527ea
  423152:	mov    QWORD PTR [rsp+0xe8],r8
  42315a:	mov    QWORD PTR [rsp+0xe0],rdx
  423162:	mov    QWORD PTR [rsp+0xd0],rdi
  42316a:	lea    r8,[rip+0x2cb0d]        # 0x44fc7e
  423171:	mov    QWORD PTR [rsp+0x188],rax
  423179:	lea    rax,[rip+0x2f676]        # 0x4527f6
  423180:	mov    QWORD PTR [rsp+0x1d0],rbx
  423188:	mov    QWORD PTR [rsp+0x150],rsi
  423190:	mov    QWORD PTR [rsp+0x138],rsi
  423198:	lea    rdi,[rip+0x28314]        # 0x44b4b3
  42319f:	mov    QWORD PTR [rsp+0x180],rax
  4231a7:	lea    rax,[rip+0x2f661]        # 0x45280f
  4231ae:	mov    QWORD PTR [rsp+0x120],rsi
  4231b6:	mov    QWORD PTR [rsp+0x170],rax
  4231be:	lea    rax,[rip+0x2cbb5]        # 0x44fd7a
  4231c5:	mov    QWORD PTR [rsp+0x158],rax
  4231cd:	mov    QWORD PTR [rsp+0x118],rax
  4231d5:	mov    QWORD PTR [rsp+0xf8],rax
  4231dd:	mov    QWORD PTR [rsp+0xd8],rax
  4231e5:	mov    QWORD PTR [rsp+0xc8],rdx
  4231ed:	mov    QWORD PTR [rsp+0xc0],rax
  4231f5:	mov    QWORD PTR [rsp+0xa8],rax
  4231fd:	lea    rax,[rip+0x2f644]        # 0x452848
  423204:	mov    QWORD PTR [rsp+0xb0],rdx
  42320c:	lea    rdx,[rip+0x2f095]        # 0x4522a8
  423213:	mov    QWORD PTR [rsp+0x68],r9
  423218:	mov    QWORD PTR [rsp+0x60],r11
  42321d:	mov    QWORD PTR [rsp+0x98],rax
  423225:	lea    rax,[rip+0x2d6bd]        # 0x4508e9
  42322c:	mov    QWORD PTR [rsp+0x40],r9
  423231:	mov    QWORD PTR [rsp+0x30],r10
  423236:	mov    QWORD PTR [rsp+0x20],r9
  42323b:	mov    QWORD PTR [rsp+0x88],rax
  423243:	mov    QWORD PTR [rsp+0x78],rax
  423248:	lea    rax,[rip+0x2bd3f]        # 0x44ef8e
  42324f:	mov    QWORD PTR [rsp+0xb8],r11
  423257:	mov    QWORD PTR [rsp+0xa0],rbx
  42325f:	mov    QWORD PTR [rsp+0x70],rax
  423264:	lea    rax,[rip+0x2f5fc]        # 0x452867
  42326b:	mov    QWORD PTR [rsp+0x90],rbx
  423273:	mov    QWORD PTR [rsp+0x80],rdi
  42327b:	mov    QWORD PTR [rsp+0x58],rax
  423280:	lea    rax,[rip+0x2f5f2]        # 0x452879
  423287:	mov    QWORD PTR [rsp+0x50],rax
  42328c:	lea    rax,[rip+0x2b3a6]        # 0x44e639
  423293:	mov    QWORD PTR [rsp+0x48],rax
  423298:	mov    QWORD PTR [rsp+0x38],rax
  42329d:	lea    rax,[rip+0x2caa1]        # 0x44fd45
  4232a4:	mov    QWORD PTR [rsp+0x28],rax
  4232a9:	call   0x427dd8
  4232ae:	nop
  4232af:	add    rsp,0x1e0
  4232b6:	pop    rbx
  4232b7:	pop    rsi
  4232b8:	pop    rdi
  4232b9:	ret    
  4232ba:	nop    WORD PTR [rax+rax*1+0x0]
  4232c0:	lea    r8,[rip+0x25daa]        # 0x449071
  4232c7:	lea    rdx,[rip+0x2fbaa]        # 0x452e78
  4232ce:	jmp    0x427dd8
  4232d3:	nop    DWORD PTR [rax]
  4232d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232e0:	lea    r8,[rip+0x2dfb6]        # 0x45129d
  4232e7:	lea    rdx,[rip+0x2fbfc]        # 0x452eea
  4232ee:	jmp    0x427dd8
  4232f3:	nop    DWORD PTR [rax]
  4232f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423300:	sub    rsp,0x78
  423304:	lea    rax,[rip+0x2ca3a]        # 0x44fd45
  42330b:	lea    rdx,[rip+0x266df]        # 0x4499f1
  423312:	lea    r9,[rip+0x27f91]        # 0x44b2aa
  423319:	lea    r8,[rip+0x2c95e]        # 0x44fc7e
  423320:	mov    QWORD PTR [rsp+0x68],rax
  423325:	lea    rax,[rip+0x2ca25]        # 0x44fd51
  42332c:	mov    QWORD PTR [rsp+0x40],rdx
  423331:	mov    QWORD PTR [rsp+0x30],rdx
  423336:	lea    rdx,[rip+0x2fbc3]        # 0x452f00
  42333d:	mov    QWORD PTR [rsp+0x60],rax
  423342:	lea    rax,[rip+0x2ca1a]        # 0x44fd63
  423349:	mov    QWORD PTR [rsp+0x58],rax
  42334e:	lea    rax,[rip+0x2b2e4]        # 0x44e639
  423355:	mov    QWORD PTR [rsp+0x50],rax
  42335a:	lea    rax,[rip+0x2fcb2]        # 0x453013
  423361:	mov    QWORD PTR [rsp+0x48],rax
  423366:	lea    rax,[rip+0x271ac]        # 0x44a519
  42336d:	mov    QWORD PTR [rsp+0x38],rax
  423372:	mov    QWORD PTR [rsp+0x28],rax
  423377:	lea    rax,[rip+0x2c9fc]        # 0x44fd7a
  42337e:	mov    QWORD PTR [rsp+0x20],rax
  423383:	call   0x427dd8
  423388:	nop
  423389:	add    rsp,0x78
  42338d:	ret    
  42338e:	xchg   ax,ax
  423390:	sub    rsp,0x48
  423394:	lea    r8,[rip+0x27f0f]        # 0x44b2aa
  42339b:	lea    r9,[rip+0x27177]        # 0x44a519
  4233a2:	lea    rdx,[rip+0x2fc77]        # 0x453020
  4233a9:	mov    QWORD PTR [rsp+0x30],r9
  4233ae:	mov    QWORD PTR [rsp+0x28],r8
  4233b3:	mov    QWORD PTR [rsp+0x20],r8
  4233b8:	call   0x427dd8
  4233bd:	nop
  4233be:	add    rsp,0x48
  4233c2:	ret    
  4233c3:	nop    DWORD PTR [rax]
  4233c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233d0:	sub    rsp,0x48
  4233d4:	lea    rax,[rip+0x2d50e]        # 0x4508e9
  4233db:	lea    rdx,[rip+0x280d1]        # 0x44b4b3
  4233e2:	lea    r9,[rip+0x2fd03]        # 0x4530ec
  4233e9:	lea    r8,[rip+0x26601]        # 0x4499f1
  4233f0:	mov    QWORD PTR [rsp+0x38],rax
  4233f5:	mov    QWORD PTR [rsp+0x28],rax
  4233fa:	lea    rax,[rip+0x2bb8d]        # 0x44ef8e
  423401:	mov    QWORD PTR [rsp+0x30],rdx
  423406:	lea    rdx,[rip+0x2fcf3]        # 0x453100
  42340d:	mov    QWORD PTR [rsp+0x20],rax
  423412:	call   0x427dd8
  423417:	nop
  423418:	add    rsp,0x48
  42341c:	ret    
  42341d:	nop    DWORD PTR [rax]
  423420:	push   rdi
  423421:	push   rsi
  423422:	push   rbx
  423423:	sub    rsp,0x1e0
  42342a:	lea    rax,[rip+0x2f373]        # 0x4527a4
  423431:	lea    rdx,[rip+0x2f3e1]        # 0x452819
  423438:	lea    r11,[rip+0x2f381]        # 0x4527c0
  42343f:	lea    r10,[rip+0x2f3bf]        # 0x452805
  423446:	lea    r9,[rip+0x2f3eb]        # 0x452838
  42344d:	lea    r8,[rip+0x26b8c]        # 0x449fe0
  423454:	mov    QWORD PTR [rsp+0x1c8],rax
  42345c:	lea    rax,[rip+0x2f348]        # 0x4527ab
  423463:	lea    rbx,[rip+0x27e40]        # 0x44b2aa
  42346a:	lea    rsi,[rip+0x2f3b5]        # 0x452826
  423471:	lea    rdi,[rip+0x2f34f]        # 0x4527c7
  423478:	mov    QWORD PTR [rsp+0x1a8],r11
  423480:	mov    QWORD PTR [rsp+0x1c0],rax
  423488:	lea    rax,[rip+0x2f323]        # 0x4527b2
  42348f:	mov    QWORD PTR [rsp+0x178],r10
  423497:	mov    QWORD PTR [rsp+0x198],rdi
  42349f:	mov    QWORD PTR [rsp+0x168],r10
  4234a7:	mov    QWORD PTR [rsp+0x1b8],rax
  4234af:	lea    rax,[rip+0x2f303]        # 0x4527b9
  4234b6:	mov    QWORD PTR [rsp+0x160],rdx
  4234be:	mov    QWORD PTR [rsp+0x148],r9
  4234c6:	mov    QWORD PTR [rsp+0x140],r8
  4234ce:	mov    QWORD PTR [rsp+0x1b0],rax
  4234d6:	lea    rax,[rip+0x2703c]        # 0x44a519
  4234dd:	mov    QWORD PTR [rsp+0x130],r9
  4234e5:	mov    QWORD PTR [rsp+0x128],r8
  4234ed:	mov    QWORD PTR [rsp+0x110],r9
  4234f5:	mov    QWORD PTR [rsp+0x1a0],rax
  4234fd:	lea    rax,[rip+0x2f2d3]        # 0x4527d7
  423504:	mov    QWORD PTR [rsp+0x108],r8
  42350c:	mov    QWORD PTR [rsp+0x100],rdx
  423514:	mov    QWORD PTR [rsp+0xf0],r9
  42351c:	lea    r9,[rip+0x264ce]        # 0x4499f1
  423523:	mov    QWORD PTR [rsp+0x190],rax
  42352b:	lea    rax,[rip+0x2f2b8]        # 0x4527ea
  423532:	mov    QWORD PTR [rsp+0xe8],r8
  42353a:	mov    QWORD PTR [rsp+0xe0],rdx
  423542:	mov    QWORD PTR [rsp+0xd0],rdi
  42354a:	lea    r8,[rip+0x2c72d]        # 0x44fc7e
  423551:	mov    QWORD PTR [rsp+0x188],rax
  423559:	lea    rax,[rip+0x2f296]        # 0x4527f6
  423560:	mov    QWORD PTR [rsp+0x1d0],rbx
  423568:	mov    QWORD PTR [rsp+0x150],rsi
  423570:	mov    QWORD PTR [rsp+0x138],rsi
  423578:	lea    rdi,[rip+0x27f34]        # 0x44b4b3
  42357f:	mov    QWORD PTR [rsp+0x180],rax
  423587:	lea    rax,[rip+0x2f281]        # 0x45280f
  42358e:	mov    QWORD PTR [rsp+0x120],rsi
  423596:	mov    QWORD PTR [rsp+0x170],rax
  42359e:	lea    rax,[rip+0x2c7d5]        # 0x44fd7a
  4235a5:	mov    QWORD PTR [rsp+0x158],rax
  4235ad:	mov    QWORD PTR [rsp+0x118],rax
  4235b5:	mov    QWORD PTR [rsp+0xf8],rax
  4235bd:	mov    QWORD PTR [rsp+0xd8],rax
  4235c5:	mov    QWORD PTR [rsp+0xc8],rdx
  4235cd:	mov    QWORD PTR [rsp+0xc0],rax
  4235d5:	mov    QWORD PTR [rsp+0xa8],rax
  4235dd:	lea    rax,[rip+0x2f264]        # 0x452848
  4235e4:	mov    QWORD PTR [rsp+0xb0],rdx
  4235ec:	lea    rdx,[rip+0x2ecb5]        # 0x4522a8
  4235f3:	mov    QWORD PTR [rsp+0x68],r9
  4235f8:	mov    QWORD PTR [rsp+0x60],r11
  4235fd:	mov    QWORD PTR [rsp+0x98],rax
  423605:	lea    rax,[rip+0x2d2dd]        # 0x4508e9
  42360c:	mov    QWORD PTR [rsp+0x40],r9
  423611:	mov    QWORD PTR [rsp+0x30],r10
  423616:	mov    QWORD PTR [rsp+0x20],r9
  42361b:	mov    QWORD PTR [rsp+0x88],rax
  423623:	mov    QWORD PTR [rsp+0x78],rax
  423628:	lea    rax,[rip+0x2b95f]        # 0x44ef8e
  42362f:	mov    QWORD PTR [rsp+0xb8],r11
  423637:	mov    QWORD PTR [rsp+0xa0],rbx
  42363f:	mov    QWORD PTR [rsp+0x70],rax
  423644:	lea    rax,[rip+0x2f21c]        # 0x452867
  42364b:	mov    QWORD PTR [rsp+0x90],rbx
  423653:	mov    QWORD PTR [rsp+0x80],rdi
  42365b:	mov    QWORD PTR [rsp+0x58],rax
  423660:	lea    rax,[rip+0x2f212]        # 0x452879
  423667:	mov    QWORD PTR [rsp+0x50],rax
  42366c:	lea    rax,[rip+0x2afc6]        # 0x44e639
  423673:	mov    QWORD PTR [rsp+0x48],rax
  423678:	mov    QWORD PTR [rsp+0x38],rax
  42367d:	lea    rax,[rip+0x2c6c1]        # 0x44fd45
  423684:	mov    QWORD PTR [rsp+0x28],rax
  423689:	call   0x427dd8
  42368e:	nop
  42368f:	add    rsp,0x1e0
  423696:	pop    rbx
  423697:	pop    rsi
  423698:	pop    rdi
  423699:	ret    
  42369a:	nop
  42369b:	nop
  42369c:	nop
  42369d:	nop
  42369e:	nop
  42369f:	nop
  4236a0:	push   rsi
  4236a1:	push   rbx
  4236a2:	sub    rsp,0x468
  4236a9:	mov    rbx,rcx
  4236ac:	call   0x42a400
  4236b1:	cmp    rax,0x3
  4236b5:	ja     0x423701
  4236b7:	lea    rdx,[rsp+0x20]
  4236bc:	mov    rcx,rbx
  4236bf:	call   0x4269b0
  4236c4:	test   eax,eax
  4236c6:	js     0x423780
  4236cc:	movzx  edx,WORD PTR [rsp+0x26]
  4236d1:	mov    eax,0xffffffff
  4236d6:	mov    ecx,edx
  4236d8:	and    cx,0xf000
  4236dd:	cmp    cx,0x8000
  4236e2:	jne    0x4236f7
  4236e4:	test   dl,0x40
  4236e7:	je     0x4236f7
  4236e9:	and    dx,0x100
  4236ee:	cmp    dx,0x1
  4236f2:	sbb    eax,eax
  4236f4:	and    eax,0xfffffffe
  4236f7:	add    rsp,0x468
  4236fe:	pop    rbx
  4236ff:	pop    rsi
  423700:	ret    
  423701:	lea    rcx,[rbx+rax*1-0x4]
  423706:	lea    rdx,[rip+0x2fac3]        # 0x4531d0
  42370d:	call   0x427790
  423712:	test   eax,eax
  423714:	je     0x4236b7
  423716:	lea    rsi,[rsp+0x50]
  42371b:	mov    rdx,rbx
  42371e:	mov    r8d,0x400
  423724:	mov    rcx,rsi
  423727:	call   0x424a90
  42372c:	mov    rdx,rsi
  42372f:	mov    r8d,DWORD PTR [rdx]
  423732:	add    rdx,0x4
  423736:	lea    eax,[r8-0x1010101]
  42373d:	not    r8d
  423740:	and    eax,r8d
  423743:	and    eax,0x80808080
  423748:	je     0x42372f
  42374a:	mov    ecx,eax
  42374c:	mov    rbx,rsi
  42374f:	shr    ecx,0x10
  423752:	test   eax,0x8080
  423757:	cmove  eax,ecx
  42375a:	lea    rcx,[rdx+0x2]
  42375e:	cmove  rdx,rcx
  423762:	add    al,al
  423764:	sbb    rdx,0x3
  423768:	mov    DWORD PTR [rdx],0x6578652e
  42376e:	mov    BYTE PTR [rdx+0x4],0x0
  423772:	jmp    0x4236b7
  423777:	nop    WORD PTR [rax+rax*1+0x0]
  423780:	mov    eax,0xffffffff
  423785:	jmp    0x4236f7
  42378a:	nop    WORD PTR [rax+rax*1+0x0]
  423790:	push   r15
  423792:	push   r14
  423794:	push   r13
  423796:	push   r12
  423798:	push   rbp
  423799:	push   rdi
  42379a:	push   rsi
  42379b:	push   rbx
  42379c:	sub    rsp,0x838
  4237a3:	lea    rdi,[rsp+0x30]
  4237a8:	mov    rbx,rcx
  4237ab:	mov    rsi,rdx
  4237ae:	mov    edx,0x400
  4237b3:	mov    rcx,rdi
  4237b6:	call   0x42a370
  4237bb:	test   rax,rax
  4237be:	je     0x423a41
  4237c4:	mov    rcx,rbx
  4237c7:	call   0x426c00
  4237cc:	test   rax,rax
  4237cf:	je     0x423860
  4237d5:	movzx  ecx,BYTE PTR [rbx]
  4237d8:	cmp    cl,0x5c
  4237db:	je     0x423840
  4237dd:	cmp    cl,0x2f
  4237e0:	je     0x423840
  4237e2:	call   QWORD PTR [rip+0x39514]        # 0x45ccfc
  4237e8:	test   eax,eax
  4237ea:	je     0x4237f2
  4237ec:	cmp    BYTE PTR [rbx+0x1],0x3a
  4237f0:	je     0x423830
  4237f2:	mov    r8,rbx
  4237f5:	mov    rdx,rdi
  4237f8:	mov    rcx,rsi
  4237fb:	call   0x426ce0
  423800:	mov    rcx,rsi
  423803:	call   0x426d80
  423808:	mov    rcx,rsi
  42380b:	call   0x4236a0
  423810:	test   eax,eax
  423812:	jne    0x4239a0
  423818:	xor    eax,eax
  42381a:	add    rsp,0x838
  423821:	pop    rbx
  423822:	pop    rsi
  423823:	pop    rdi
  423824:	pop    rbp
  423825:	pop    r12
  423827:	pop    r13
  423829:	pop    r14
  42382b:	pop    r15
  42382d:	ret    
  42382e:	xchg   ax,ax
  423830:	movzx  eax,BYTE PTR [rbx+0x2]
  423834:	cmp    al,0x5c
  423836:	je     0x423840
  423838:	cmp    al,0x2f
  42383a:	jne    0x4237f2
  42383c:	nop    DWORD PTR [rax+0x0]
  423840:	mov    r8d,0x400
  423846:	mov    rdx,rbx
  423849:	mov    rcx,rsi
  42384c:	call   0x42a3f0
  423851:	mov    BYTE PTR [rsi+0x3ff],0x0
  423858:	jmp    0x423800
  42385a:	nop    WORD PTR [rax+rax*1+0x0]
  423860:	mov    r8,rbx
  423863:	mov    rdx,rdi
  423866:	mov    rcx,rsi
  423869:	call   0x426ce0
  42386e:	mov    rcx,rsi
  423871:	call   0x4236a0
  423876:	test   eax,eax
  423878:	je     0x423818
  42387a:	lea    rcx,[rip+0x2f994]        # 0x453215
  423881:	call   0x42a4d0
  423886:	test   rax,rax
  423889:	mov    r14,rax
  42388c:	je     0x423a6d
  423892:	cmp    BYTE PTR [rax],0x0
  423895:	je     0x423a6d
  42389b:	mov    r12,rax
  42389e:	lea    r13,[rsp+0x430]
  4238a6:	mov    r15d,0x1
  4238ac:	jmp    0x4238cf
  4238ae:	xchg   ax,ax
  4238b0:	test   eax,eax
  4238b2:	je     0x42381a
  4238b8:	cmp    BYTE PTR [rbp+0x0],0x0
  4238bc:	je     0x423a6d
  4238c2:	test   r12,r12
  4238c5:	je     0x423aa3
  4238cb:	lea    r12,[rbp+0x1]
  4238cf:	mov    rcx,r12
  4238d2:	call   0x426c30
  4238d7:	test   rax,rax
  4238da:	mov    rbp,rax
  4238dd:	je     0x423a30
  4238e3:	mov    r9,r15
  4238e6:	mov    eax,0x400
  4238eb:	sub    r9,r12
  4238ee:	add    r9,rbp
  4238f1:	cmp    r9,0x400
  4238f8:	cmovg  r9,rax
  4238fc:	test   r9,r9
  4238ff:	jne    0x423a03
  423905:	movzx  ecx,BYTE PTR [rsp+0x430]
  42390d:	cmp    cl,0x5c
  423910:	je     0x4239f0
  423916:	cmp    cl,0x2f
  423919:	je     0x4239f0
  42391f:	call   QWORD PTR [rip+0x393d7]        # 0x45ccfc
  423925:	test   eax,eax
  423927:	je     0x423937
  423929:	cmp    BYTE PTR [rsp+0x431],0x3a
  423931:	je     0x4239d6
  423937:	mov    r8,r13
  42393a:	mov    rdx,rdi
  42393d:	mov    rcx,rsi
  423940:	call   0x426ce0
  423945:	mov    r8,rbx
  423948:	mov    rdx,rsi
  42394b:	mov    rcx,rsi
  42394e:	call   0x426ce0
  423953:	mov    rcx,rsi
  423956:	call   0x426d80
  42395b:	mov    rcx,rsi
  42395e:	call   0x4236a0
  423963:	cmp    eax,0xfffffffe
  423966:	jne    0x4238b0
  42396c:	call   QWORD PTR [rip+0x39242]        # 0x45cbb4
  423972:	lea    rdx,[rip+0x2f8c8]        # 0x453241
  423979:	lea    rcx,[rax+0x60]
  42397d:	mov    r8,rsi
  423980:	call   0x426370
  423985:	call   QWORD PTR [rip+0x39229]        # 0x45cbb4
  42398b:	lea    rdx,[rax+0x60]
  42398f:	mov    ecx,0xa
  423994:	call   0x42a500
  423999:	jmp    0x4238b8
  42399e:	xchg   ax,ax
  4239a0:	mov    rbx,QWORD PTR [rip+0x3920d]        # 0x45cbb4
  4239a7:	call   rbx
  4239a9:	lea    rdx,[rip+0x2f851]        # 0x453201
  4239b0:	lea    rcx,[rax+0x60]
  4239b4:	mov    r8,rsi
  4239b7:	call   0x426370
  4239bc:	call   rbx
  4239be:	lea    rdx,[rax+0x60]
  4239c2:	mov    ecx,0xa
  4239c7:	call   0x42a500
  4239cc:	mov    eax,0xffffffff
  4239d1:	jmp    0x42381a
  4239d6:	movzx  eax,BYTE PTR [rsp+0x432]
  4239de:	cmp    al,0x5c
  4239e0:	je     0x4239f0
  4239e2:	cmp    al,0x2f
  4239e4:	jne    0x423937
  4239ea:	nop    WORD PTR [rax+rax*1+0x0]
  4239f0:	mov    r8,rbx
  4239f3:	mov    rdx,r13
  4239f6:	mov    rcx,rsi
  4239f9:	call   0x426ce0
  4239fe:	jmp    0x423953
  423a03:	mov    r8,r9
  423a06:	mov    rdx,r12
  423a09:	mov    rcx,r13
  423a0c:	mov    QWORD PTR [rsp+0x28],r9
  423a11:	call   0x42a3f0
  423a16:	mov    r9,QWORD PTR [rsp+0x28]
  423a1b:	mov    BYTE PTR [rsp+r9*1+0x42f],0x0
  423a24:	jmp    0x423905
  423a29:	nop    DWORD PTR [rax+0x0]
  423a30:	mov    rcx,r12
  423a33:	call   0x42a400
  423a38:	lea    rbp,[r12+rax*1]
  423a3c:	jmp    0x4238e3
  423a41:	call   QWORD PTR [rip+0x391a5]        # 0x45cbec
  423a47:	mov    ecx,DWORD PTR [rax]
  423a49:	call   0x42a408
  423a4e:	mov    rsi,rax
  423a51:	mov    rbx,QWORD PTR [rip+0x3915c]        # 0x45cbb4
  423a58:	call   rbx
  423a5a:	mov    r8,rsi
  423a5d:	lea    rcx,[rax+0x60]
  423a61:	lea    rdx,[rip+0x2f770]        # 0x4531d8
  423a68:	jmp    0x4239b7
  423a6d:	mov    rsi,QWORD PTR [rip+0x39140]        # 0x45cbb4
  423a74:	call   rsi
  423a76:	lea    rdx,[rip+0x2f7a3]        # 0x453220
  423a7d:	lea    rcx,[rax+0x60]
  423a81:	mov    r8,rbx
  423a84:	call   0x426370
  423a89:	call   rsi
  423a8b:	lea    rdx,[rax+0x60]
  423a8f:	mov    ecx,0xa
  423a94:	call   0x42a500
  423a99:	mov    eax,0xffffffff
  423a9e:	jmp    0x42381a
  423aa3:	mov    r12,r14
  423aa6:	jmp    0x4238cf
  423aab:	nop    DWORD PTR [rax+rax*1+0x0]
  423ab0:	push   r15
  423ab2:	push   r14
  423ab4:	push   r13
  423ab6:	push   r12
  423ab8:	push   rbp
  423ab9:	push   rdi
  423aba:	push   rsi
  423abb:	push   rbx
  423abc:	sub    rsp,0x598
  423ac3:	mov    rsi,rdx
  423ac6:	mov    rdx,r9
  423ac9:	mov    rbp,r8
  423acc:	mov    rbx,r9
  423acf:	call   0x423790
  423ad4:	test   eax,eax
  423ad6:	js     0x423cad
  423adc:	mov    rcx,rbx
  423adf:	call   0x426c60
  423ae4:	mov    rcx,rbx
  423ae7:	mov    BYTE PTR [rax],0x0
  423aea:	call   0x426d80
  423aef:	mov    rcx,rbx
  423af2:	call   0x42a400
  423af7:	mov    r10d,0x400
  423afd:	lea    rcx,[rbx+rax*1]
  423b01:	lea    r8,[rip+0x2f754]        # 0x45325c
  423b08:	mov    rdx,r10
  423b0b:	mov    r9,rsi
  423b0e:	sub    rdx,rax
  423b11:	lea    rax,[rip+0x2f6b8]        # 0x4531d0
  423b18:	mov    QWORD PTR [rsp+0x20],rax
  423b1d:	call   0x426220
  423b22:	mov    rcx,rbx
  423b25:	call   0x4236a0
  423b2a:	test   eax,eax
  423b2c:	jne    0x423cad
  423b32:	lea    rsi,[rsp+0x190]
  423b3a:	lea    r8,[rip+0x2f721]        # 0x453262
  423b41:	mov    r9,rbx
  423b44:	mov    edx,0x400
  423b49:	mov    rcx,rsi
  423b4c:	call   0x426220
  423b51:	xor    r9d,r9d
  423b54:	mov    DWORD PTR [rsp+0x70],0x18
  423b5c:	mov    DWORD PTR [rsp+0x80],0x1
  423b67:	mov    QWORD PTR [rsp+0x78],0x0
  423b70:	lea    rdx,[rsp+0x60]
  423b75:	lea    rcx,[rsp+0x58]
  423b7a:	lea    r8,[rsp+0x70]
  423b7f:	call   QWORD PTR [rip+0x38e7f]        # 0x45ca04
  423b85:	test   eax,eax
  423b87:	je     0x423cad
  423b8d:	mov    rbx,QWORD PTR [rip+0x38ec0]        # 0x45ca54
  423b94:	call   rbx
  423b96:	mov    rdi,QWORD PTR [rsp+0x58]
  423b9b:	mov    r12,rax
  423b9e:	call   rbx
  423ba0:	mov    DWORD PTR [rsp+0x30],0x2
  423ba8:	mov    rcx,rax
  423bab:	mov    DWORD PTR [rsp+0x28],0x0
  423bb3:	mov    DWORD PTR [rsp+0x20],0x0
  423bbb:	lea    r9,[rsp+0x68]
  423bc0:	mov    r8,r12
  423bc3:	mov    rdx,rdi
  423bc6:	call   QWORD PTR [rip+0x38e58]        # 0x45ca24
  423bcc:	test   eax,eax
  423bce:	mov    rcx,QWORD PTR [rsp+0x58]
  423bd3:	je     0x423e90
  423bd9:	mov    r12,QWORD PTR [rip+0x38e0c]        # 0x45c9ec
  423be0:	xor    ebx,ebx
  423be2:	call   r12
  423be5:	lea    r8,[rsp+0x120]
  423bed:	mov    rax,rbx
  423bf0:	mov    ecx,0xd
  423bf5:	lea    rdx,[rsp+0x90]
  423bfd:	xor    r9d,r9d
  423c00:	mov    QWORD PTR [rsp+0x90],0x0
  423c0c:	mov    rdi,r8
  423c0f:	mov    QWORD PTR [rsp+0x98],0x0
  423c1b:	mov    QWORD PTR [rsp+0xa0],0x0
  423c27:	rep stos QWORD PTR es:[rdi],rax
  423c2a:	mov    rax,QWORD PTR [rsp+0x60]
  423c2f:	mov    QWORD PTR [rsp+0x48],rdx
  423c34:	mov    rdx,rsi
  423c37:	mov    QWORD PTR [rsp+0x40],r8
  423c3c:	mov    DWORD PTR [rsp+0x120],0x68
  423c47:	xor    r8d,r8d
  423c4a:	mov    DWORD PTR [rsp+0x15c],0x100
  423c55:	mov    QWORD PTR [rsp+0x170],0xffffffffffffffff
  423c61:	mov    QWORD PTR [rsp+0x180],rax
  423c69:	mov    QWORD PTR [rsp+0x178],rax
  423c71:	mov    QWORD PTR [rsp+0x38],0x0
  423c7a:	mov    QWORD PTR [rsp+0x30],0x0
  423c83:	mov    DWORD PTR [rsp+0x28],0x0
  423c8b:	mov    DWORD PTR [rsp+0x20],0x1
  423c93:	call   QWORD PTR [rip+0x38d73]        # 0x45ca0c
  423c99:	test   eax,eax
  423c9b:	jne    0x423cd0
  423c9d:	mov    rcx,QWORD PTR [rsp+0x60]
  423ca2:	call   r12
  423ca5:	mov    rcx,QWORD PTR [rsp+0x68]
  423caa:	call   r12
  423cad:	mov    eax,0xffffffff
  423cb2:	add    rsp,0x598
  423cb9:	pop    rbx
  423cba:	pop    rsi
  423cbb:	pop    rdi
  423cbc:	pop    rbp
  423cbd:	pop    r12
  423cbf:	pop    r13
  423cc1:	pop    r14
  423cc3:	pop    r15
  423cc5:	ret    
  423cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cd0:	lea    rsi,[rsp+0xb0]
  423cd8:	mov    rax,rbx
  423cdb:	mov    ecx,0xc
  423ce0:	lea    r14,[rsp+0x54]
  423ce5:	mov    r13,QWORD PTR [rip+0x38e00]        # 0x45caec
  423cec:	mov    rdi,rsi
  423cef:	mov    rbx,rsi
  423cf2:	lea    r15,[rsi+0x63]
  423cf6:	rep stos QWORD PTR es:[rdi],rax
  423cf9:	mov    DWORD PTR [rdi],0x0
  423cff:	mov    rdi,QWORD PTR [rip+0x38e6e]        # 0x45cb74
  423d06:	jmp    0x423d5f
  423d08:	nop    DWORD PTR [rax+rax*1+0x0]
  423d10:	mov    rax,rsi
  423d13:	mov    QWORD PTR [rsp+0x20],0x0
  423d1c:	mov    r9,r14
  423d1f:	sub    rax,rbx
  423d22:	mov    rdx,rbx
  423d25:	mov    rcx,QWORD PTR [rsp+0x68]
  423d2a:	lea    r8d,[rax+0x64]
  423d2e:	call   r13
  423d31:	test   eax,eax
  423d33:	je     0x423d77
  423d35:	mov    rcx,rbx
  423d38:	call   0x42a400
  423d3d:	mov    ecx,DWORD PTR [rsp+0x54]
  423d41:	add    rbx,rax
  423d44:	test   ecx,ecx
  423d46:	je     0x423d77
  423d48:	mov    edx,0xa
  423d4d:	mov    rcx,rsi
  423d50:	call   0x42a428
  423d55:	test   rax,rax
  423d58:	jne    0x423d77
  423d5a:	cmp    rbx,r15
  423d5d:	jae    0x423d77
  423d5f:	mov    DWORD PTR [rsp+0x54],0x0
  423d67:	mov    edx,0x2710
  423d6c:	mov    rcx,QWORD PTR [rsp+0x68]
  423d71:	call   rdi
  423d73:	test   eax,eax
  423d75:	je     0x423d10
  423d77:	cmp    rbx,rsi
  423d7a:	je     0x423ef0
  423d80:	mov    edx,0xa
  423d85:	mov    rcx,rsi
  423d88:	call   0x42a428
  423d8d:	test   rax,rax
  423d90:	je     0x423d96
  423d92:	mov    BYTE PTR [rax+0x1],0x0
  423d96:	mov    rax,rsi
  423d99:	mov    ecx,DWORD PTR [rax]
  423d9b:	add    rax,0x4
  423d9f:	lea    edx,[rcx-0x1010101]
  423da5:	not    ecx
  423da7:	and    edx,ecx
  423da9:	and    edx,0x80808080
  423daf:	je     0x423d99
  423db1:	mov    ecx,edx
  423db3:	shr    ecx,0x10
  423db6:	test   edx,0x8080
  423dbc:	cmove  edx,ecx
  423dbf:	lea    rcx,[rax+0x2]
  423dc3:	cmove  rax,rcx
  423dc7:	add    dl,dl
  423dc9:	sbb    rax,0x3
  423dcd:	sub    rax,rsi
  423dd0:	cmp    eax,0x1
  423dd3:	movsxd rcx,eax
  423dd6:	jle    0x423ea5
  423ddc:	cdqe   
  423dde:	lea    rdx,[rsi+rax*1-0x2]
  423de3:	cmp    BYTE PTR [rdx],0xd
  423de6:	je     0x423ec0
  423dec:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  423df4:	cmp    al,0xa
  423df6:	mov    rbx,rsi
  423df9:	je     0x423e41
  423dfb:	mov    rax,rsi
  423dfe:	mov    ecx,DWORD PTR [rax]
  423e00:	add    rax,0x4
  423e04:	lea    edx,[rcx-0x1010101]
  423e0a:	not    ecx
  423e0c:	and    edx,ecx
  423e0e:	and    edx,0x80808080
  423e14:	je     0x423dfe
  423e16:	mov    ecx,edx
  423e18:	shr    ecx,0x10
  423e1b:	test   edx,0x8080
  423e21:	cmove  edx,ecx
  423e24:	lea    rcx,[rax+0x2]
  423e28:	cmove  rax,rcx
  423e2c:	add    dl,dl
  423e2e:	sbb    rax,0x3
  423e32:	sub    rax,rsi
  423e35:	mov    edx,0xa
  423e3a:	mov    rbx,rsi
  423e3d:	mov    WORD PTR [rsi+rax*1],dx
  423e41:	mov    rcx,QWORD PTR [rsp+0x90]
  423e49:	call   r12
  423e4c:	mov    rcx,QWORD PTR [rsp+0x98]
  423e54:	call   r12
  423e57:	mov    rcx,QWORD PTR [rsp+0x60]
  423e5c:	call   r12
  423e5f:	mov    rcx,QWORD PTR [rsp+0x68]
  423e64:	call   r12
  423e67:	test   rbx,rbx
  423e6a:	je     0x423cad
  423e70:	mov    rdx,rbp
  423e73:	mov    rcx,rsi
  423e76:	call   0x42a420
  423e7b:	mov    edx,0xfffffffe
  423e80:	test   eax,eax
  423e82:	cmovne eax,edx
  423e85:	jmp    0x423cb2
  423e8a:	nop    WORD PTR [rax+rax*1+0x0]
  423e90:	mov    rbx,QWORD PTR [rip+0x38b55]        # 0x45c9ec
  423e97:	call   rbx
  423e99:	mov    rcx,QWORD PTR [rsp+0x60]
  423e9e:	call   rbx
  423ea0:	jmp    0x423cad
  423ea5:	test   eax,eax
  423ea7:	je     0x423e35
  423ea9:	movzx  eax,BYTE PTR [rsp+rcx*1+0xaf]
  423eb1:	jmp    0x423df4
  423eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ec0:	lea    rax,[rsi+rax*1-0x1]
  423ec5:	cmp    BYTE PTR [rax],0xa
  423ec8:	jne    0x423dfb
  423ece:	mov    BYTE PTR [rdx],0xa
  423ed1:	mov    BYTE PTR [rax],0x0
  423ed4:	lea    eax,[rcx-0x1]
  423ed7:	cdqe   
  423ed9:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  423ee1:	jmp    0x423df4
  423ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ef0:	xor    ebx,ebx
  423ef2:	jmp    0x423e41
  423ef7:	nop    WORD PTR [rax+rax*1+0x0]
  423f00:	push   rdi
  423f01:	push   rsi
  423f02:	push   rbx
  423f03:	sub    rsp,0x20
  423f07:	call   QWORD PTR [rip+0x38d17]        # 0x45cc24
  423f0d:	mov    ebx,eax
  423f0f:	xor    eax,eax
  423f11:	test   ebx,ebx
  423f13:	je     0x423f5a
  423f15:	cmp    ebx,0xffffffff
  423f18:	je     0x423f62
  423f1a:	mov    ecx,ebx
  423f1c:	call   0x424760
  423f21:	mov    rdi,QWORD PTR [rip+0x38c8c]        # 0x45cbb4
  423f28:	mov    rsi,rax
  423f2b:	call   rdi
  423f2d:	lea    rdx,[rip+0x2f348]        # 0x45327c
  423f34:	lea    rcx,[rax+0x60]
  423f38:	mov    r8,rsi
  423f3b:	call   0x426370
  423f40:	call   rdi
  423f42:	lea    rdx,[rax+0x60]
  423f46:	mov    ecx,0xa
  423f4b:	call   0x42a500
  423f50:	mov    rcx,rsi
  423f53:	call   0x42a4e8
  423f58:	mov    eax,ebx
  423f5a:	add    rsp,0x20
  423f5e:	pop    rbx
  423f5f:	pop    rsi
  423f60:	pop    rdi
  423f61:	ret    
  423f62:	call   QWORD PTR [rip+0x38c84]        # 0x45cbec
  423f68:	mov    ecx,DWORD PTR [rax]
  423f6a:	call   0x42a408
  423f6f:	mov    rsi,QWORD PTR [rip+0x38c3e]        # 0x45cbb4
  423f76:	mov    rdi,rax
  423f79:	call   rsi
  423f7b:	lea    rdx,[rip+0x2f2e8]        # 0x45326a
  423f82:	lea    rcx,[rax+0x60]
  423f86:	mov    r8,rdi
  423f89:	call   0x426370
  423f8e:	call   rsi
  423f90:	lea    rdx,[rax+0x60]
  423f94:	mov    ecx,0xa
  423f99:	call   0x42a500
  423f9e:	mov    eax,ebx
  423fa0:	add    rsp,0x20
  423fa4:	pop    rbx
  423fa5:	pop    rsi
  423fa6:	pop    rdi
  423fa7:	ret    
  423fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  423fb0:	push   rdi
  423fb1:	push   rsi
  423fb2:	push   rbx
  423fb3:	sub    rsp,0xc30
  423fba:	lea    rdi,[rip+0x2f2be]        # 0x45327f
  423fc1:	mov    rbx,rcx
  423fc4:	mov    rsi,rdx
  423fc7:	mov    ecx,0xd
  423fcc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423fce:	jne    0x424003
  423fd0:	lea    rsi,[rsp+0x420]
  423fd8:	mov    rcx,rbx
  423fdb:	mov    rdx,rsi
  423fde:	call   0x423790
  423fe3:	test   eax,eax
  423fe5:	js     0x423ff8
  423fe7:	lea    rcx,[rip+0x2f29f]        # 0x45328d
  423fee:	call   0x42a4d0
  423ff3:	test   rax,rax
  423ff6:	je     0x424013
  423ff8:	add    rsp,0xc30
  423fff:	pop    rbx
  424000:	pop    rsi
  424001:	pop    rdi
  424002:	ret    
  424003:	lea    rdx,[rip+0x2f282]        # 0x45328c
  42400a:	xor    ecx,ecx
  42400c:	call   0x425290
  424011:	jmp    0x423fd0
  424013:	lea    rdi,[rsp+0x20]
  424018:	lea    rbx,[rsp+0x820]
  424020:	mov    rcx,rsi
  424023:	mov    rdx,rdi
  424026:	call   0x4275b0
  42402b:	lea    r8,[rip+0x2f268]        # 0x45329a
  424032:	mov    r9,rdi
  424035:	mov    edx,0x40e
  42403a:	mov    rcx,rbx
  42403d:	call   0x426220
  424042:	lea    rcx,[rbx+0xd]
  424046:	call   0x426d80
  42404b:	mov    rcx,rbx
  42404e:	call   0x42a390
  424053:	mov    rcx,rax
  424056:	call   0x425070
  42405b:	jmp    0x423ff8
  42405d:	nop    DWORD PTR [rax]
  424060:	push   r15
  424062:	push   r14
  424064:	push   r13
  424066:	push   r12
  424068:	push   rbp
  424069:	push   rdi
  42406a:	push   rsi
  42406b:	push   rbx
  42406c:	sub    rsp,0x78
  424070:	xor    r9d,r9d
  424073:	xor    r8d,r8d
  424076:	mov    edx,0x6
  42407b:	lea    r12,[rsp+0x4c]
  424080:	mov    rdi,rcx
  424083:	mov    DWORD PTR [rsp+0x4c],0x0
  42408b:	mov    rbx,QWORD PTR [rip+0x38932]        # 0x45c9c4
  424092:	mov    QWORD PTR [rsp+0x20],r12
  424097:	call   rbx
  424099:	test   eax,eax
  42409b:	jne    0x4240f0
  42409d:	mov    rbp,QWORD PTR [rip+0x389d8]        # 0x45ca7c
  4240a4:	call   rbp
  4240a6:	cmp    eax,0x7a
  4240a9:	je     0x424100
  4240ab:	call   rbp
  4240ad:	mov    rbx,QWORD PTR [rip+0x38b00]        # 0x45cbb4
  4240b4:	mov    esi,eax
  4240b6:	call   rbx
  4240b8:	lea    rdx,[rip+0x2f249]        # 0x453308
  4240bf:	lea    rcx,[rax+0x60]
  4240c3:	mov    r8d,esi
  4240c6:	call   0x426370
  4240cb:	call   rbx
  4240cd:	lea    rdx,[rax+0x60]
  4240d1:	mov    ecx,0xa
  4240d6:	xor    ebx,ebx
  4240d8:	call   0x42a500
  4240dd:	mov    eax,ebx
  4240df:	add    rsp,0x78
  4240e3:	pop    rbx
  4240e4:	pop    rsi
  4240e5:	pop    rdi
  4240e6:	pop    rbp
  4240e7:	pop    r12
  4240e9:	pop    r13
  4240eb:	pop    r14
  4240ed:	pop    r15
  4240ef:	ret    
  4240f0:	mov    rax,QWORD PTR ds:0x0
  4240f8:	ud2    
  4240fa:	nop    WORD PTR [rax+rax*1+0x0]
  424100:	mov    edx,DWORD PTR [rsp+0x4c]
  424104:	mov    ecx,0x40
  424109:	mov    r13,QWORD PTR [rip+0x389ac]        # 0x45cabc
  424110:	call   r13
  424113:	test   rax,rax
  424116:	mov    rsi,rax
  424119:	je     0x4244c3
  42411f:	mov    QWORD PTR [rsp+0x20],r12
  424124:	mov    r9d,DWORD PTR [rsp+0x4c]
  424129:	mov    r8,rax
  42412c:	mov    edx,0x6
  424131:	mov    rcx,rdi
  424134:	call   rbx
  424136:	test   eax,eax
  424138:	je     0x4243f0
  42413e:	lea    rdx,[rsp+0x60]
  424143:	mov    r9d,0x2
  424149:	mov    r8d,0xc
  42414f:	mov    rcx,QWORD PTR [rsi]
  424152:	call   QWORD PTR [rip+0x3885c]        # 0x45c9b4
  424158:	test   eax,eax
  42415a:	jne    0x4241a0
  42415c:	call   rbp
  42415e:	mov    rbx,QWORD PTR [rip+0x38a4f]        # 0x45cbb4
  424165:	mov    edi,eax
  424167:	call   rbx
  424169:	lea    rdx,[rip+0x2f1d8]        # 0x453348
  424170:	lea    rcx,[rax+0x60]
  424174:	mov    r8d,edi
  424177:	call   0x426370
  42417c:	call   rbx
  42417e:	lea    rdx,[rax+0x60]
  424182:	mov    ecx,0xa
  424187:	xor    ebx,ebx
  424189:	call   0x42a500
  42418e:	mov    rdi,QWORD PTR [rip+0x3892f]        # 0x45cac4
  424195:	mov    rcx,rsi
  424198:	call   rdi
  42419a:	jmp    0x4240dd
  42419f:	nop
  4241a0:	lea    r12,[rsp+0x58]
  4241a5:	xor    r9d,r9d
  4241a8:	xor    r8d,r8d
  4241ab:	mov    edx,0x1
  4241b0:	mov    rcx,rdi
  4241b3:	mov    QWORD PTR [rsp+0x20],r12
  4241b8:	call   rbx
  4241ba:	test   eax,eax
  4241bc:	jne    0x424230
  4241be:	call   rbp
  4241c0:	cmp    eax,0x7a
  4241c3:	je     0x424394
  4241c9:	call   rbp
  4241cb:	mov    rbx,QWORD PTR [rip+0x389e2]        # 0x45cbb4
  4241d2:	mov    edi,eax
  4241d4:	call   rbx
  4241d6:	lea    rdx,[rip+0x2f12b]        # 0x453308
  4241dd:	lea    rcx,[rax+0x60]
  4241e1:	mov    r8d,edi
  4241e4:	call   0x426370
  4241e9:	call   rbx
  4241eb:	lea    rdx,[rax+0x60]
  4241ef:	mov    ecx,0xa
  4241f4:	call   0x42a500
  4241f9:	mov    rdi,QWORD PTR [rip+0x388c4]        # 0x45cac4
  424200:	call   rbp
  424202:	mov    ebp,eax
  424204:	call   rbx
  424206:	lea    rdx,[rip+0x2f253]        # 0x453460
  42420d:	lea    rcx,[rax+0x60]
  424211:	mov    r8d,ebp
  424214:	call   0x426370
  424219:	call   rbx
  42421b:	lea    rdx,[rax+0x60]
  42421f:	mov    ecx,0xa
  424224:	xor    ebx,ebx
  424226:	call   0x42a500
  42422b:	jmp    0x424195
  424230:	mov    QWORD PTR [rsp+0x30],0x0
  424239:	mov    QWORD PTR [rsp+0x20],r12
  42423e:	mov    r9d,DWORD PTR [rsp+0x58]
  424243:	mov    edx,0x1
  424248:	mov    r8,QWORD PTR [rsp+0x30]
  42424d:	mov    rcx,rdi
  424250:	call   rbx
  424252:	test   eax,eax
  424254:	je     0x424350
  42425a:	mov    ebx,DWORD PTR [rsp+0x64]
  42425e:	mov    rax,QWORD PTR [rsp+0x30]
  424263:	mov    rcx,QWORD PTR [rax]
  424266:	call   QWORD PTR [rip+0x38750]        # 0x45c9bc
  42426c:	lea    edx,[rbx+rax*1+0x8]
  424270:	mov    ecx,0x40
  424275:	mov    DWORD PTR [rsp+0x3c],edx
  424279:	call   r13
  42427c:	test   rax,rax
  42427f:	mov    r13,rax
  424282:	je     0x424480
  424288:	mov    r8d,0x2
  42428e:	mov    edx,DWORD PTR [rsp+0x3c]
  424292:	mov    rcx,r13
  424295:	call   QWORD PTR [rip+0x38739]        # 0x45c9d4
  42429b:	test   eax,eax
  42429d:	je     0x4243d0
  4242a3:	mov    eax,DWORD PTR [rsp+0x60]
  4242a7:	xor    ebx,ebx
  4242a9:	mov    r14,QWORD PTR [rip+0x386fc]        # 0x45c9ac
  4242b0:	mov    r15,QWORD PTR [rip+0x386ed]        # 0x45c9a4
  4242b7:	test   eax,eax
  4242b9:	jg     0x4242f4
  4242bb:	jmp    0x424410
  4242c0:	mov    r9,QWORD PTR [rsp+0x58]
  4242c5:	mov    r8d,0xffffffff
  4242cb:	mov    edx,0x2
  4242d0:	mov    rcx,r13
  4242d3:	movzx  eax,WORD PTR [r9+0x2]
  4242d8:	mov    DWORD PTR [rsp+0x20],eax
  4242dc:	call   r15
  4242df:	test   eax,eax
  4242e1:	je     0x424460
  4242e7:	add    ebx,0x1
  4242ea:	cmp    DWORD PTR [rsp+0x60],ebx
  4242ee:	jle    0x424410
  4242f4:	mov    r8,r12
  4242f7:	mov    edx,ebx
  4242f9:	mov    rcx,QWORD PTR [rsi]
  4242fc:	call   r14
  4242ff:	test   eax,eax
  424301:	jne    0x4242c0
  424303:	call   rbp
  424305:	mov    rbx,QWORD PTR [rip+0x388a8]        # 0x45cbb4
  42430c:	mov    edi,eax
  42430e:	call   rbx
  424310:	lea    rdx,[rip+0x2f091]        # 0x4533a8
  424317:	lea    rcx,[rax+0x60]
  42431b:	mov    r8d,edi
  42431e:	call   0x426370
  424323:	call   rbx
  424325:	lea    rdx,[rax+0x60]
  424329:	mov    ecx,0xa
  42432e:	xor    ebx,ebx
  424330:	call   0x42a500
  424335:	mov    rcx,QWORD PTR [rsp+0x30]
  42433a:	mov    rdi,QWORD PTR [rip+0x38783]        # 0x45cac4
  424341:	call   rdi
  424343:	mov    rcx,r13
  424346:	call   rdi
  424348:	jmp    0x424195
  42434d:	nop    DWORD PTR [rax]
  424350:	mov    rcx,QWORD PTR [rsp+0x30]
  424355:	mov    rdi,QWORD PTR [rip+0x38768]        # 0x45cac4
  42435c:	call   rdi
  42435e:	call   rbp
  424360:	mov    rbx,QWORD PTR [rip+0x3884d]        # 0x45cbb4
  424367:	mov    r12d,eax
  42436a:	call   rbx
  42436c:	lea    rdx,[rip+0x2ef65]        # 0x4532d8
  424373:	lea    rcx,[rax+0x60]
  424377:	mov    r8d,r12d
  42437a:	call   0x426370
  42437f:	call   rbx
  424381:	lea    rdx,[rax+0x60]
  424385:	mov    ecx,0xa
  42438a:	call   0x42a500
  42438f:	jmp    0x424200
  424394:	mov    edx,DWORD PTR [rsp+0x58]
  424398:	mov    ecx,0x40
  42439d:	call   r13
  4243a0:	test   rax,rax
  4243a3:	mov    QWORD PTR [rsp+0x30],rax
  4243a8:	jne    0x424239
  4243ae:	mov    edi,DWORD PTR [rsp+0x58]
  4243b2:	mov    rbx,QWORD PTR [rip+0x387fb]        # 0x45cbb4
  4243b9:	call   rbx
  4243bb:	lea    rdx,[rip+0x2eeee]        # 0x4532b0
  4243c2:	lea    rcx,[rax+0x60]
  4243c6:	mov    r8d,edi
  4243c9:	jmp    0x4241e4
  4243ce:	xchg   ax,ax
  4243d0:	call   rbp
  4243d2:	mov    edi,eax
  4243d4:	mov    rbx,QWORD PTR [rip+0x387d9]        # 0x45cbb4
  4243db:	call   rbx
  4243dd:	mov    r8d,edi
  4243e0:	lea    rcx,[rax+0x60]
  4243e4:	lea    rdx,[rip+0x2ef8d]        # 0x453378
  4243eb:	jmp    0x42431e
  4243f0:	call   rbp
  4243f2:	mov    edi,eax
  4243f4:	mov    rbx,QWORD PTR [rip+0x387b9]        # 0x45cbb4
  4243fb:	call   rbx
  4243fd:	mov    r8d,edi
  424400:	lea    rcx,[rax+0x60]
  424404:	lea    rdx,[rip+0x2eecd]        # 0x4532d8
  42440b:	jmp    0x424177
  424410:	mov    rax,QWORD PTR [rsp+0x30]
  424415:	mov    r9d,0x10000000
  42441b:	mov    r8d,0x1
  424421:	mov    edx,0x2
  424426:	mov    rcx,r13
  424429:	mov    rax,QWORD PTR [rax]
  42442c:	mov    QWORD PTR [rsp+0x20],rax
  424431:	call   QWORD PTR [rip+0x38565]        # 0x45c99c
  424437:	test   eax,eax
  424439:	jne    0x4244e3
  42443f:	call   rbp
  424441:	mov    edi,eax
  424443:	mov    rbx,QWORD PTR [rip+0x3876a]        # 0x45cbb4
  42444a:	call   rbx
  42444c:	mov    r8d,edi
  42444f:	lea    rcx,[rax+0x60]
  424453:	lea    rdx,[rip+0x2ef9e]        # 0x4533f8
  42445a:	jmp    0x42431e
  42445f:	nop
  424460:	call   rbp
  424462:	mov    edi,eax
  424464:	mov    rbx,QWORD PTR [rip+0x38749]        # 0x45cbb4
  42446b:	call   rbx
  42446d:	mov    r8d,edi
  424470:	lea    rcx,[rax+0x60]
  424474:	lea    rdx,[rip+0x2ef55]        # 0x4533d0
  42447b:	jmp    0x42431e
  424480:	mov    rbx,QWORD PTR [rip+0x3872d]        # 0x45cbb4
  424487:	call   rbx
  424489:	mov    r8d,DWORD PTR [rsp+0x3c]
  42448e:	lea    rcx,[rax+0x60]
  424492:	lea    rdx,[rip+0x2ee17]        # 0x4532b0
  424499:	call   0x426370
  42449e:	call   rbx
  4244a0:	lea    rdx,[rax+0x60]
  4244a4:	mov    ecx,0xa
  4244a9:	xor    ebx,ebx
  4244ab:	call   0x42a500
  4244b0:	mov    rcx,QWORD PTR [rsp+0x30]
  4244b5:	mov    rdi,QWORD PTR [rip+0x38608]        # 0x45cac4
  4244bc:	call   rdi
  4244be:	jmp    0x424195
  4244c3:	mov    esi,DWORD PTR [rsp+0x4c]
  4244c7:	mov    rbx,QWORD PTR [rip+0x386e6]        # 0x45cbb4
  4244ce:	call   rbx
  4244d0:	lea    rdx,[rip+0x2edd9]        # 0x4532b0
  4244d7:	lea    rcx,[rax+0x60]
  4244db:	mov    r8d,esi
  4244de:	jmp    0x4240c6
  4244e3:	mov    QWORD PTR [rsp+0x50],r13
  4244e8:	mov    r9d,DWORD PTR [rsp+0x3c]
  4244ed:	lea    r8,[rsp+0x50]
  4244f2:	mov    edx,0x6
  4244f7:	mov    rcx,rdi
  4244fa:	mov    ebx,0x1
  4244ff:	call   QWORD PTR [rip+0x384d7]        # 0x45c9dc
  424505:	test   eax,eax
  424507:	jne    0x424335
  42450d:	call   rbp
  42450f:	mov    edi,eax
  424511:	mov    rbx,QWORD PTR [rip+0x3869c]        # 0x45cbb4
  424518:	call   rbx
  42451a:	mov    r8d,edi
  42451d:	lea    rcx,[rax+0x60]
  424521:	lea    rdx,[rip+0x2ef08]        # 0x453430
  424528:	jmp    0x42431e
  42452d:	nop
  42452e:	nop
  42452f:	nop
  424530:	push   rdi
  424531:	push   rsi
  424532:	push   rbx
  424533:	sub    rsp,0x30
  424537:	mov    rsi,QWORD PTR [rip+0x386ae]        # 0x45cbec
  42453e:	mov    rdi,rcx
  424541:	mov    rbx,rdx
  424544:	mov    QWORD PTR [rsp+0x28],r8
  424549:	mov    QWORD PTR [rsp+0x20],r9
  42454e:	call   rsi
  424550:	mov    r9,QWORD PTR [rsp+0x20]
  424555:	mov    r8,QWORD PTR [rsp+0x28]
  42455a:	mov    rdx,rbx
  42455d:	mov    DWORD PTR [rax],0x0
  424563:	mov    rcx,rdi
  424566:	call   0x426200
  42456b:	test   eax,eax
  42456d:	js     0x4245a0
  42456f:	lea    rcx,[rbx-0x1]
  424573:	movsxd rdx,eax
  424576:	cmp    rdx,rcx
  424579:	jb     0x4245c5
  42457b:	cmp    rbx,rdx
  42457e:	jae    0x4245a8
  424580:	cmp    eax,0x3ffffffd
  424585:	jg     0x4245a8
  424587:	add    eax,0x2
  42458a:	movsxd rdx,eax
  42458d:	mov    rax,rdx
  424590:	add    rsp,0x30
  424594:	pop    rbx
  424595:	pop    rsi
  424596:	pop    rdi
  424597:	ret    
  424598:	nop    DWORD PTR [rax+rax*1+0x0]
  4245a0:	call   rsi
  4245a2:	mov    eax,DWORD PTR [rax]
  4245a4:	test   eax,eax
  4245a6:	jne    0x4245d0
  4245a8:	cmp    rbx,0x3ffffffe
  4245af:	ja     0x424606
  4245b1:	lea    rax,[rbx+rbx*1]
  4245b5:	cmp    rbx,0x1ffffffe
  4245bc:	mov    edx,0x3fffffff
  4245c1:	cmovbe rdx,rax
  4245c5:	mov    rax,rdx
  4245c8:	add    rsp,0x30
  4245cc:	pop    rbx
  4245cd:	pop    rsi
  4245ce:	pop    rdi
  4245cf:	ret    
  4245d0:	call   rsi
  4245d2:	cmp    DWORD PTR [rax],0xc
  4245d5:	je     0x4245a8
  4245d7:	call   rsi
  4245d9:	mov    ecx,DWORD PTR [rax]
  4245db:	call   0x42a408
  4245e0:	mov    rbx,rax
  4245e3:	call   QWORD PTR [rip+0x385cb]        # 0x45cbb4
  4245e9:	lea    rdx,[rip+0x2eea0]        # 0x453490
  4245f0:	lea    rcx,[rax+0x60]
  4245f4:	mov    r8,rbx
  4245f7:	call   0x426370
  4245fc:	mov    ecx,0x1
  424601:	call   0x42a540
  424606:	call   QWORD PTR [rip+0x385a8]        # 0x45cbb4
  42460c:	lea    rdx,[rip+0x2ee93]        # 0x4534a6
  424613:	lea    rcx,[rax+0x60]
  424617:	call   0x426370
  42461c:	mov    ecx,0x1
  424621:	call   0x42a540
  424626:	nop
  424627:	nop    WORD PTR [rax+rax*1+0x0]
  424630:	push   r12
  424632:	push   rbp
  424633:	push   rdi
  424634:	push   rsi
  424635:	push   rbx
  424636:	sub    rsp,0x30
  42463a:	mov    ebx,0x80
  42463f:	mov    QWORD PTR [rsp+0x68],rdx
  424644:	mov    QWORD PTR [rsp+0x70],r8
  424649:	mov    r12,rcx
  42464c:	mov    QWORD PTR [rsp+0x78],r9
  424651:	lea    rbp,[rsp+0x68]
  424656:	jmp    0x42466b
  424658:	nop    DWORD PTR [rax+rax*1+0x0]
  424660:	mov    rcx,rsi
  424663:	mov    rbx,rdi
  424666:	call   0x4249a0
  42466b:	mov    rcx,rbx
  42466e:	call   0x424980
  424673:	mov    r9,rbp
  424676:	mov    r8,r12
  424679:	mov    rdx,rbx
  42467c:	mov    rcx,rax
  42467f:	mov    rsi,rax
  424682:	mov    QWORD PTR [rsp+0x28],rbp
  424687:	call   0x424530
  42468c:	cmp    rbx,rax
  42468f:	mov    rdi,rax
  424692:	jbe    0x424660
  424694:	mov    rax,rsi
  424697:	add    rsp,0x30
  42469b:	pop    rbx
  42469c:	pop    rsi
  42469d:	pop    rdi
  42469e:	pop    rbp
  42469f:	pop    r12
  4246a1:	ret    
  4246a2:	nop
  4246a3:	nop
  4246a4:	nop
  4246a5:	nop
  4246a6:	nop
  4246a7:	nop
  4246a8:	nop
  4246a9:	nop
  4246aa:	nop
  4246ab:	nop
  4246ac:	nop
  4246ad:	nop
  4246ae:	nop
  4246af:	nop
  4246b0:	push   rbx
  4246b1:	sub    rsp,0x30
  4246b5:	mov    QWORD PTR [rcx],0x0
  4246bc:	lea    rdx,[rsp+0x2c]
  4246c1:	mov    rbx,rcx
  4246c4:	mov    DWORD PTR [rsp+0x2c],0x101
  4246cc:	lea    rcx,[rip+0x35cad]        # 0x45a380
  4246d3:	call   QWORD PTR [rip+0x382f3]        # 0x45c9cc
  4246d9:	test   eax,eax
  4246db:	lea    rdx,[rip+0x35c9e]        # 0x45a380
  4246e2:	je     0x4246f0
  4246e4:	mov    rax,rdx
  4246e7:	add    rsp,0x30
  4246eb:	pop    rbx
  4246ec:	ret    
  4246ed:	nop    DWORD PTR [rax]
  4246f0:	call   QWORD PTR [rip+0x38386]        # 0x45ca7c
  4246f6:	lea    rcx,[rip+0x2edc3]        # 0x4534c0
  4246fd:	mov    edx,eax
  4246ff:	call   0x424630
  424704:	xor    edx,edx
  424706:	mov    QWORD PTR [rbx],rax
  424709:	jmp    0x4246e4
  42470b:	nop    DWORD PTR [rax+rax*1+0x0]
  424710:	push   rsi
  424711:	push   rbx
  424712:	sub    rsp,0x38
  424716:	mov    rbx,rcx
  424719:	lea    rcx,[rsp+0x28]
  42471e:	call   0x4246b0
  424723:	test   rax,rax
  424726:	je     0x42472f
  424728:	add    rsp,0x38
  42472c:	pop    rbx
  42472d:	pop    rsi
  42472e:	ret    
  42472f:	mov    rsi,QWORD PTR [rsp+0x28]
  424734:	call   QWORD PTR [rip+0x3847a]        # 0x45cbb4
  42473a:	lea    rdx,[rip+0x2eda8]        # 0x4534e9
  424741:	lea    rcx,[rax+0x60]
  424745:	mov    r8,rbx
  424748:	mov    r9,rsi
  42474b:	call   0x426370
  424750:	mov    ecx,0x1
  424755:	call   0x42a540
  42475a:	nop
  42475b:	nop
  42475c:	nop
  42475d:	nop
  42475e:	nop
  42475f:	nop
  424760:	push   rbx
  424761:	sub    rsp,0x220
  424768:	test   ecx,0xffffff00
  42476e:	je     0x4247a0
  424770:	lea    rbx,[rsp+0x20]
  424775:	lea    r8,[rip+0x2eddc]        # 0x453558
  42477c:	mov    r9d,ecx
  42477f:	mov    edx,0x200
  424784:	mov    rcx,rbx
  424787:	call   0x426220
  42478c:	mov    rcx,rbx
  42478f:	call   0x4249c0
  424794:	add    rsp,0x220
  42479b:	pop    rbx
  42479c:	ret    
  42479d:	nop    DWORD PTR [rax]
  4247a0:	cmp    ecx,0x7e
  4247a3:	je     0x4247e3
  4247a5:	cmp    ecx,0x7f
  4247a8:	jne    0x4247c5
  4247aa:	lea    rbx,[rsp+0x20]
  4247af:	lea    r8,[rip+0x2ed61]        # 0x453517
  4247b6:	mov    edx,0x200
  4247bb:	mov    rcx,rbx
  4247be:	call   0x426220
  4247c3:	jmp    0x42478c
  4247c5:	lea    rbx,[rsp+0x20]
  4247ca:	lea    r8,[rip+0x2ed5f]        # 0x453530
  4247d1:	mov    r9d,ecx
  4247d4:	mov    edx,0x200
  4247d9:	mov    rcx,rbx
  4247dc:	call   0x426220
  4247e1:	jmp    0x42478c
  4247e3:	lea    rbx,[rsp+0x20]
  4247e8:	lea    r8,[rip+0x2ed11]        # 0x453500
  4247ef:	mov    edx,0x200
  4247f4:	mov    rcx,rbx
  4247f7:	call   0x426220
  4247fc:	jmp    0x42478c
  4247fe:	nop
  4247ff:	nop
  424800:	sub    rsp,0x28
  424804:	mov    eax,0x1
  424809:	test   rcx,rcx
  42480c:	cmove  rcx,rax
  424810:	call   0x42a4a0
  424815:	test   rax,rax
  424818:	je     0x42481f
  42481a:	add    rsp,0x28
  42481e:	ret    
  42481f:	call   QWORD PTR [rip+0x3838f]        # 0x45cbb4
  424825:	lea    rdx,[rip+0x2ed64]        # 0x453590
  42482c:	lea    rcx,[rax+0x60]
  424830:	call   0x426370
  424835:	mov    ecx,0x1
  42483a:	call   0x42a540
  42483f:	nop
  424840:	push   rsi
  424841:	push   rbx
  424842:	sub    rsp,0x28
  424846:	mov    rbx,rcx
  424849:	call   0x424800
  42484e:	mov    rsi,rax
  424851:	or     rax,rbx
  424854:	test   al,0x3
  424856:	jne    0x424890
  424858:	cmp    rbx,0x400
  42485f:	ja     0x424890
  424861:	add    rbx,rsi
  424864:	mov    rdx,rsi
  424867:	cmp    rsi,rbx
  42486a:	jae    0x424880
  42486c:	nop    DWORD PTR [rax+0x0]
  424870:	add    rdx,0x4
  424874:	mov    DWORD PTR [rdx-0x4],0x0
  42487b:	cmp    rbx,rdx
  42487e:	ja     0x424870
  424880:	mov    rax,rsi
  424883:	add    rsp,0x28
  424887:	pop    rbx
  424888:	pop    rsi
  424889:	ret    
  42488a:	nop    WORD PTR [rax+rax*1+0x0]
  424890:	mov    r8,rbx
  424893:	xor    edx,edx
  424895:	mov    rcx,rsi
  424898:	call   0x42a480
  42489d:	mov    rax,rsi
  4248a0:	add    rsp,0x28
  4248a4:	pop    rbx
  4248a5:	pop    rsi
  4248a6:	ret    
  4248a7:	nop    WORD PTR [rax+rax*1+0x0]
  4248b0:	sub    rsp,0x28
  4248b4:	test   rcx,rcx
  4248b7:	jne    0x4248c5
  4248b9:	test   rdx,rdx
  4248bc:	mov    eax,0x1
  4248c1:	cmove  rdx,rax
  4248c5:	call   0x42a460
  4248ca:	test   rax,rax
  4248cd:	je     0x4248d4
  4248cf:	add    rsp,0x28
  4248d3:	ret    
  4248d4:	call   QWORD PTR [rip+0x382da]        # 0x45cbb4
  4248da:	lea    rdx,[rip+0x2ecaf]        # 0x453590
  4248e1:	lea    rcx,[rax+0x60]
  4248e5:	call   0x426370
  4248ea:	mov    ecx,0x1
  4248ef:	call   0x42a540
  4248f4:	nop
  4248f5:	nop
  4248f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424900:	sub    rsp,0x28
  424904:	test   rcx,rcx
  424907:	je     0x424918
  424909:	call   0x42a390
  42490e:	test   rax,rax
  424911:	je     0x424938
  424913:	add    rsp,0x28
  424917:	ret    
  424918:	call   QWORD PTR [rip+0x38296]        # 0x45cbb4
  42491e:	lea    rdx,[rip+0x2ec7b]        # 0x4535a0
  424925:	lea    rcx,[rax+0x60]
  424929:	call   0x426370
  42492e:	mov    ecx,0x1
  424933:	call   0x42a540
  424938:	call   QWORD PTR [rip+0x38276]        # 0x45cbb4
  42493e:	lea    rdx,[rip+0x2ec4b]        # 0x453590
  424945:	lea    rcx,[rax+0x60]
  424949:	call   0x426370
  42494e:	mov    ecx,0x1
  424953:	call   0x42a540
  424958:	nop
  424959:	nop    DWORD PTR [rax+0x0]
  424960:	test   rcx,rcx
  424963:	je     0x424970
  424965:	jmp    0x42a4e8
  42496a:	nop    WORD PTR [rax+rax*1+0x0]
  424970:	repz ret 
  424972:	nop    DWORD PTR [rax+0x0]
  424976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424980:	jmp    0x424800
  424985:	nop
  424986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424990:	jmp    0x424840
  424995:	nop
  424996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249a0:	test   rcx,rcx
  4249a3:	je     0x4249b0
  4249a5:	jmp    0x42a4e8
  4249aa:	nop    WORD PTR [rax+rax*1+0x0]
  4249b0:	repz ret 
  4249b2:	nop    DWORD PTR [rax+0x0]
  4249b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249c0:	jmp    0x424900
  4249c5:	nop
  4249c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249d0:	jmp    0x4248b0
  4249d5:	nop
  4249d6:	nop
  4249d7:	nop
  4249d8:	nop
  4249d9:	nop
  4249da:	nop
  4249db:	nop
  4249dc:	nop
  4249dd:	nop
  4249de:	nop
  4249df:	nop
  4249e0:	push   rbx
  4249e1:	sub    rsp,0x20
  4249e5:	test   r8,r8
  4249e8:	je     0x424a81
  4249ee:	cmp    BYTE PTR [rcx],0x0
  4249f1:	je     0x424a85
  4249f7:	lea    r10,[rcx+0x1]
  4249fb:	lea    rax,[rcx+r8*1]
  4249ff:	jmp    0x424a0c
  424a01:	lea    r10,[r10+0x1]
  424a05:	cmp    BYTE PTR [r10-0x1],0x0
  424a0a:	je     0x424a60
  424a0c:	cmp    r10,rax
  424a0f:	mov    r9,r10
  424a12:	jne    0x424a01
  424a14:	sub    rax,rcx
  424a17:	mov    rbx,rax
  424a1a:	sub    r8,rbx
  424a1d:	je     0x424a6b
  424a1f:	movzx  r11d,BYTE PTR [rdx]
  424a23:	mov    r10,rdx
  424a26:	test   r11b,r11b
  424a29:	je     0x424a7c
  424a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  424a30:	cmp    r8,0x1
  424a34:	je     0x424a41
  424a36:	mov    BYTE PTR [r9],r11b
  424a39:	sub    r8,0x1
  424a3d:	add    r9,0x1
  424a41:	add    r10,0x1
  424a45:	movzx  r11d,BYTE PTR [r10]
  424a49:	test   r11b,r11b
  424a4c:	jne    0x424a30
  424a4e:	sub    r10,rdx
  424a51:	lea    rax,[r10+rbx*1]
  424a55:	mov    BYTE PTR [r9],0x0
  424a59:	add    rsp,0x20
  424a5d:	pop    rbx
  424a5e:	ret    
  424a5f:	nop
  424a60:	mov    rbx,r9
  424a63:	sub    rbx,rcx
  424a66:	sub    r8,rbx
  424a69:	jne    0x424a1f
  424a6b:	mov    rcx,rdx
  424a6e:	call   0x42a400
  424a73:	add    rax,rbx
  424a76:	add    rsp,0x20
  424a7a:	pop    rbx
  424a7b:	ret    
  424a7c:	xor    r10d,r10d
  424a7f:	jmp    0x424a51
  424a81:	xor    ebx,ebx
  424a83:	jmp    0x424a6b
  424a85:	mov    r9,rcx
  424a88:	xor    ebx,ebx
  424a8a:	jmp    0x424a1f
  424a8c:	nop
  424a8d:	nop
  424a8e:	nop
  424a8f:	nop
  424a90:	test   r8,r8
  424a93:	je     0x424ae0
  424a95:	lea    rax,[rcx+r8*1-0x1]
  424a9a:	mov    r8,rdx
  424a9d:	jmp    0x424ab6
  424a9f:	nop
  424aa0:	add    r8,0x1
  424aa4:	movzx  r9d,BYTE PTR [r8-0x1]
  424aa9:	add    rcx,0x1
  424aad:	test   r9b,r9b
  424ab0:	mov    BYTE PTR [rcx-0x1],r9b
  424ab4:	je     0x424ad0
  424ab6:	cmp    rcx,rax
  424ab9:	jne    0x424aa0
  424abb:	add    r8,0x1
  424abf:	mov    BYTE PTR [rcx],0x0
  424ac2:	cmp    BYTE PTR [r8-0x1],0x0
  424ac7:	jne    0x424ae3
  424ac9:	nop    DWORD PTR [rax+0x0]
  424ad0:	not    rdx
  424ad3:	lea    rax,[r8+rdx*1]
  424ad7:	ret    
  424ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  424ae0:	mov    r8,rdx
  424ae3:	add    r8,0x1
  424ae7:	cmp    BYTE PTR [r8-0x1],0x0
  424aec:	jne    0x424ae3
  424aee:	not    rdx
  424af1:	lea    rax,[r8+rdx*1]
  424af5:	ret    
  424af6:	nop
  424af7:	nop
  424af8:	nop
  424af9:	nop
  424afa:	nop
  424afb:	nop
  424afc:	nop
  424afd:	nop
  424afe:	nop
  424aff:	nop
  424b00:	push   r15
  424b02:	push   r14
  424b04:	push   r13
  424b06:	push   r12
  424b08:	push   rbp
  424b09:	push   rdi
  424b0a:	push   rsi
  424b0b:	push   rbx
  424b0c:	sub    rsp,0x48
  424b10:	mov    rbx,QWORD PTR [rip+0x79d9]        # 0x42c4f0
  424b17:	mov    DWORD PTR [rsp+0x90],ecx
  424b1e:	mov    r15,rdx
  424b21:	mov    rbp,r8
  424b24:	mov    r14,r9
  424b27:	movzx  r10d,BYTE PTR [rbx]
  424b2b:	test   r10b,r10b
  424b2e:	jne    0x424b7a
  424b30:	mov    r12,QWORD PTR [rip+0x2fd59]        # 0x454890
  424b37:	mov    eax,DWORD PTR [r12]
  424b3b:	cmp    eax,ecx
  424b3d:	mov    DWORD PTR [rsp+0x34],eax
  424b41:	jge    0x424dc0
  424b47:	movsxd rax,DWORD PTR [rsp+0x34]
  424b4c:	mov    rdi,QWORD PTR [rdx+rax*8]
  424b50:	cmp    BYTE PTR [rdi],0x2d
  424b53:	mov    QWORD PTR [rip+0x7996],rdi        # 0x42c4f0
  424b5a:	jne    0x424dc0
  424b60:	movzx  r10d,BYTE PTR [rdi+0x1]
  424b65:	lea    rbx,[rdi+0x1]
  424b69:	mov    QWORD PTR [rip+0x7980],rbx        # 0x42c4f0
  424b70:	cmp    r10b,0x2d
  424b74:	je     0x424c20
  424b7a:	mov    rax,QWORD PTR [rip+0x2fd1f]        # 0x4548a0
  424b81:	movsx  r13d,r10b
  424b85:	lea    rsi,[rbx+0x1]
  424b89:	mov    edx,r13d
  424b8c:	mov    rcx,rbp
  424b8f:	mov    QWORD PTR [rip+0x795a],rsi        # 0x42c4f0
  424b96:	mov    DWORD PTR [rax],r13d
  424b99:	call   0x42a428
  424b9e:	test   rax,rax
  424ba1:	je     0x424de0
  424ba7:	cmp    BYTE PTR [rax+0x1],0x3a
  424bab:	je     0x424be0
  424bad:	mov    rax,QWORD PTR [rip+0x2fcbc]        # 0x454870
  424bb4:	mov    QWORD PTR [rax],0x0
  424bbb:	cmp    BYTE PTR [rbx+0x1],0x0
  424bbf:	jne    0x424bcb
  424bc1:	mov    rax,QWORD PTR [rip+0x2fcc8]        # 0x454890
  424bc8:	add    DWORD PTR [rax],0x1
  424bcb:	mov    eax,r13d
  424bce:	add    rsp,0x48
  424bd2:	pop    rbx
  424bd3:	pop    rsi
  424bd4:	pop    rdi
  424bd5:	pop    rbp
  424bd6:	pop    r12
  424bd8:	pop    r13
  424bda:	pop    r14
  424bdc:	pop    r15
  424bde:	ret    
  424bdf:	nop
  424be0:	cmp    BYTE PTR [rbx+0x1],0x0
  424be4:	je     0x424d40
  424bea:	mov    rax,QWORD PTR [rip+0x2fc7f]        # 0x454870
  424bf1:	mov    r12,QWORD PTR [rip+0x2fc98]        # 0x454890
  424bf8:	mov    QWORD PTR [rax],rsi
  424bfb:	mov    eax,DWORD PTR [r12]
  424bff:	lea    rdi,[rip+0x2e9ca]        # 0x4535d0
  424c06:	add    eax,0x1
  424c09:	mov    DWORD PTR [r12],eax
  424c0d:	mov    QWORD PTR [rip+0x78dc],rdi        # 0x42c4f0
  424c14:	jmp    0x424bcb
  424c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c20:	cmp    BYTE PTR [rdi+0x2],0x0
  424c24:	je     0x424dae
  424c2a:	lea    rax,[rdi+0x2]
  424c2e:	lea    rdx,[rip+0x2e99c]        # 0x4535d1
  424c35:	mov    rcx,rax
  424c38:	mov    QWORD PTR [rsp+0x38],rax
  424c3d:	mov    QWORD PTR [rip+0x78ac],rax        # 0x42c4f0
  424c44:	call   0x42a410
  424c49:	mov    r13,QWORD PTR [r14]
  424c4c:	mov    QWORD PTR [rsp+0x28],rax
  424c51:	test   r13,r13
  424c54:	je     0x424e40
  424c5a:	mov    rbx,r14
  424c5d:	xor    esi,esi
  424c5f:	jmp    0x424c7a
  424c61:	add    esi,0x1
  424c64:	movsxd rbx,esi
  424c67:	shl    rbx,0x5
  424c6b:	add    rbx,r14
  424c6e:	mov    r13,QWORD PTR [rbx]
  424c71:	test   r13,r13
  424c74:	je     0x424e40
  424c7a:	mov    rcx,r13
  424c7d:	call   0x42a400
  424c82:	cmp    rax,QWORD PTR [rsp+0x28]
  424c87:	jne    0x424c61
  424c89:	mov    r8,QWORD PTR [rsp+0x28]
  424c8e:	mov    rcx,QWORD PTR [rsp+0x38]
  424c93:	mov    rdx,r13
  424c96:	call   0x42a3f8
  424c9b:	test   eax,eax
  424c9d:	mov    r13d,eax
  424ca0:	jne    0x424c61
  424ca2:	mov    r9d,DWORD PTR [rbx+0x8]
  424ca6:	test   r9d,r9d
  424ca9:	je     0x424ed0
  424caf:	mov    rax,QWORD PTR [rsp+0x28]
  424cb4:	cmp    BYTE PTR [rdi+rax*1+0x2],0x3d
  424cb9:	je     0x424f2a
  424cbf:	mov    eax,DWORD PTR [rsp+0x90]
  424cc6:	lea    r14d,[rax-0x1]
  424cca:	cmp    DWORD PTR [rsp+0x34],r14d
  424ccf:	jge    0x424ee3
  424cd5:	add    DWORD PTR [rsp+0x34],0x1
  424cda:	movsxd rax,DWORD PTR [rsp+0x34]
  424cdf:	mov    DWORD PTR [r12],eax
  424ce3:	mov    rdx,QWORD PTR [r15+rax*8]
  424ce7:	mov    rax,QWORD PTR [rip+0x2fb82]        # 0x454870
  424cee:	mov    QWORD PTR [rax],rdx
  424cf1:	mov    eax,DWORD PTR [rsp+0x34]
  424cf5:	add    eax,0x1
  424cf8:	cmp    QWORD PTR [rsp+0xb0],0x0
  424d01:	mov    DWORD PTR [r12],eax
  424d05:	je     0x424d11
  424d07:	mov    rax,QWORD PTR [rsp+0xb0]
  424d0f:	mov    DWORD PTR [rax],esi
  424d11:	lea    rax,[rip+0x2e8b8]        # 0x4535d0
  424d18:	mov    QWORD PTR [rip+0x77d1],rax        # 0x42c4f0
  424d1f:	mov    rax,QWORD PTR [rbx+0x10]
  424d23:	test   rax,rax
  424d26:	je     0x424f48
  424d2c:	mov    edx,DWORD PTR [rbx+0x18]
  424d2f:	mov    DWORD PTR [rax],edx
  424d31:	jmp    0x424bcb
  424d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d40:	mov    r12,QWORD PTR [rip+0x2fb49]        # 0x454890
  424d47:	mov    eax,DWORD PTR [r12]
  424d4b:	add    eax,0x1
  424d4e:	cmp    DWORD PTR [rsp+0x90],eax
  424d55:	mov    DWORD PTR [r12],eax
  424d59:	jg     0x424e10
  424d5f:	cmp    BYTE PTR [rbp+0x0],0x3a
  424d63:	lea    rax,[rip+0x2e866]        # 0x4535d0
  424d6a:	mov    QWORD PTR [rip+0x777f],rax        # 0x42c4f0
  424d71:	je     0x424e30
  424d77:	mov    rax,QWORD PTR [rip+0x2fb02]        # 0x454880
  424d7e:	mov    eax,DWORD PTR [rax]
  424d80:	test   eax,eax
  424d82:	je     0x424e01
  424d84:	mov    rbx,QWORD PTR [r15]
  424d87:	call   QWORD PTR [rip+0x37e27]        # 0x45cbb4
  424d8d:	lea    rdx,[rip+0x2e8a4]        # 0x453638
  424d94:	lea    rcx,[rax+0x60]
  424d98:	mov    r9d,r13d
  424d9b:	mov    r8,rbx
  424d9e:	mov    r13d,0x3f
  424da4:	call   0x426370
  424da9:	jmp    0x424bcb
  424dae:	mov    r13d,DWORD PTR [rsp+0x34]
  424db3:	add    r13d,0x1
  424db7:	mov    DWORD PTR [r12],r13d
  424dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  424dc0:	lea    rax,[rip+0x2e809]        # 0x4535d0
  424dc7:	mov    r13d,0xffffffff
  424dcd:	mov    QWORD PTR [rip+0x771c],rax        # 0x42c4f0
  424dd4:	jmp    0x424bcb
  424dd9:	nop    DWORD PTR [rax+0x0]
  424de0:	cmp    BYTE PTR [rbx+0x1],0x0
  424de4:	jne    0x424df0
  424de6:	mov    rax,QWORD PTR [rip+0x2faa3]        # 0x454890
  424ded:	add    DWORD PTR [rax],0x1
  424df0:	mov    rax,QWORD PTR [rip+0x2fa89]        # 0x454880
  424df7:	mov    edx,DWORD PTR [rax]
  424df9:	test   edx,edx
  424dfb:	jne    0x424ea2
  424e01:	mov    r13d,0x3f
  424e07:	jmp    0x424bcb
  424e0c:	nop    DWORD PTR [rax+0x0]
  424e10:	movsxd rdx,eax
  424e13:	mov    rcx,QWORD PTR [r15+rdx*8]
  424e17:	mov    rdx,QWORD PTR [rip+0x2fa52]        # 0x454870
  424e1e:	mov    QWORD PTR [rdx],rcx
  424e21:	jmp    0x424bff
  424e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e30:	mov    r13d,0x3a
  424e36:	jmp    0x424bcb
  424e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  424e40:	mov    rax,QWORD PTR [rip+0x2fa39]        # 0x454880
  424e47:	mov    ecx,DWORD PTR [rax]
  424e49:	test   ecx,ecx
  424e4b:	je     0x424e7c
  424e4d:	cmp    BYTE PTR [rbp+0x0],0x3a
  424e51:	je     0x424e7c
  424e53:	mov    rbx,QWORD PTR [r15]
  424e56:	call   QWORD PTR [rip+0x37d58]        # 0x45cbb4
  424e5c:	mov    r9,QWORD PTR [rsp+0x38]
  424e61:	lea    rcx,[rax+0x60]
  424e65:	lea    rdx,[rip+0x2e793]        # 0x4535ff
  424e6c:	mov    r8,rbx
  424e6f:	call   0x426370
  424e74:	mov    eax,DWORD PTR [r12]
  424e78:	mov    DWORD PTR [rsp+0x34],eax
  424e7c:	mov    r13d,DWORD PTR [rsp+0x34]
  424e81:	lea    rax,[rip+0x2e748]        # 0x4535d0
  424e88:	mov    QWORD PTR [rip+0x7661],rax        # 0x42c4f0
  424e8f:	add    r13d,0x1
  424e93:	mov    DWORD PTR [r12],r13d
  424e97:	mov    r13d,0x3f
  424e9d:	jmp    0x424bcb
  424ea2:	cmp    BYTE PTR [rbp+0x0],0x3a
  424ea6:	je     0x424e01
  424eac:	mov    rbx,QWORD PTR [r15]
  424eaf:	call   QWORD PTR [rip+0x37cff]        # 0x45cbb4
  424eb5:	lea    rdx,[rip+0x2e75d]        # 0x453619
  424ebc:	lea    rcx,[rax+0x60]
  424ec0:	mov    r9d,r13d
  424ec3:	mov    r8,rbx
  424ec6:	call   0x426370
  424ecb:	jmp    0x424e01
  424ed0:	mov    rax,QWORD PTR [rip+0x2f999]        # 0x454870
  424ed7:	mov    QWORD PTR [rax],0x0
  424ede:	jmp    0x424cf1
  424ee3:	cmp    BYTE PTR [rbp+0x0],0x3a
  424ee7:	je     0x424e30
  424eed:	mov    rax,QWORD PTR [rip+0x2f98c]        # 0x454880
  424ef4:	mov    r8d,DWORD PTR [rax]
  424ef7:	test   r8d,r8d
  424efa:	je     0x424e7c
  424efc:	mov    rbx,QWORD PTR [r15]
  424eff:	call   QWORD PTR [rip+0x37caf]        # 0x45cbb4
  424f05:	mov    r9,QWORD PTR [rsp+0x38]
  424f0a:	lea    rcx,[rax+0x60]
  424f0e:	lea    rdx,[rip+0x2e6c3]        # 0x4535d8
  424f15:	mov    r8,rbx
  424f18:	call   0x426370
  424f1d:	mov    eax,DWORD PTR [r12]
  424f21:	mov    DWORD PTR [rsp+0x34],eax
  424f25:	jmp    0x424e7c
  424f2a:	mov    rax,QWORD PTR [rsp+0x38]
  424f2f:	mov    rdi,QWORD PTR [rsp+0x28]
  424f34:	lea    rdx,[rax+rdi*1+0x1]
  424f39:	mov    rax,QWORD PTR [rip+0x2f930]        # 0x454870
  424f40:	mov    QWORD PTR [rax],rdx
  424f43:	jmp    0x424cf1
  424f48:	mov    r13d,DWORD PTR [rbx+0x18]
  424f4c:	jmp    0x424bcb
  424f51:	nop
  424f52:	nop
  424f53:	nop
  424f54:	nop
  424f55:	nop
  424f56:	nop
  424f57:	nop
  424f58:	nop
  424f59:	nop
  424f5a:	nop
  424f5b:	nop
  424f5c:	nop
  424f5d:	nop
  424f5e:	nop
  424f5f:	nop
  424f60:	push   rbp
  424f61:	push   rdi
  424f62:	push   rsi
  424f63:	push   rbx
  424f64:	sub    rsp,0x28
  424f68:	mov    rdi,rcx
  424f6b:	call   0x42a400
  424f70:	lea    rcx,[rax+0x3]
  424f74:	mov    rsi,rax
  424f77:	call   0x42a4a0
  424f7c:	test   rax,rax
  424f7f:	mov    rbx,rax
  424f82:	je     0x424fcc
  424f84:	lea    rcx,[rax+0x1]
  424f88:	mov    r8,rsi
  424f8b:	mov    rdx,rdi
  424f8e:	mov    BYTE PTR [rax],0x22
  424f91:	call   0x42a490
  424f96:	mov    rcx,rbx
  424f99:	mov    BYTE PTR [rbx+rsi*1+0x1],0x22
  424f9e:	mov    BYTE PTR [rbx+rsi*1+0x2],0x0
  424fa3:	call   0x42a3c0
  424fa8:	mov    rdi,QWORD PTR [rip+0x37c3d]        # 0x45cbec
  424faf:	mov    esi,eax
  424fb1:	call   rdi
  424fb3:	mov    ebp,DWORD PTR [rax]
  424fb5:	mov    rcx,rbx
  424fb8:	call   0x42a4e8
  424fbd:	call   rdi
  424fbf:	mov    DWORD PTR [rax],ebp
  424fc1:	mov    eax,esi
  424fc3:	add    rsp,0x28
  424fc7:	pop    rbx
  424fc8:	pop    rsi
  424fc9:	pop    rdi
  424fca:	pop    rbp
  424fcb:	ret    
  424fcc:	call   QWORD PTR [rip+0x37c1a]        # 0x45cbec
  424fd2:	mov    DWORD PTR [rax],0xc
  424fd8:	mov    eax,0xffffffff
  424fdd:	jmp    0x424fc3
  424fdf:	nop
  424fe0:	push   rbp
  424fe1:	push   rdi
  424fe2:	push   rsi
  424fe3:	push   rbx
  424fe4:	sub    rsp,0x28
  424fe8:	mov    rdi,rcx
  424feb:	mov    rbp,rdx
  424fee:	call   0x42a400
  424ff3:	lea    rcx,[rax+0x3]
  424ff7:	mov    rsi,rax
  424ffa:	call   0x42a4a0
  424fff:	test   rax,rax
  425002:	mov    rbx,rax
  425005:	je     0x425055
  425007:	lea    rcx,[rax+0x1]
  42500b:	mov    r8,rsi
  42500e:	mov    rdx,rdi
  425011:	mov    BYTE PTR [rax],0x22
  425014:	call   0x42a490
  425019:	mov    rdx,rbp
  42501c:	mov    rcx,rbx
  42501f:	mov    BYTE PTR [rbx+rsi*1+0x1],0x22
  425024:	mov    BYTE PTR [rbx+rsi*1+0x2],0x0
  425029:	call   QWORD PTR [rip+0x37bfd]        # 0x45cc2c
  42502f:	mov    rdi,QWORD PTR [rip+0x37bb6]        # 0x45cbec
  425036:	mov    rsi,rax
  425039:	call   rdi
  42503b:	mov    ebp,DWORD PTR [rax]
  42503d:	mov    rcx,rbx
  425040:	call   0x42a4e8
  425045:	call   rdi
  425047:	mov    DWORD PTR [rax],ebp
  425049:	mov    rax,rsi
  42504c:	add    rsp,0x28
  425050:	pop    rbx
  425051:	pop    rsi
  425052:	pop    rdi
  425053:	pop    rbp
  425054:	ret    
  425055:	call   QWORD PTR [rip+0x37b91]        # 0x45cbec
  42505b:	mov    DWORD PTR [rax],0xc
  425061:	xor    eax,eax
  425063:	jmp    0x42504c
  425065:	nop
  425066:	nop
  425067:	nop
  425068:	nop
  425069:	nop
  42506a:	nop
  42506b:	nop
  42506c:	nop
  42506d:	nop
  42506e:	nop
  42506f:	nop
  425070:	push   rsi
  425071:	push   rbx
  425072:	sub    rsp,0x28
  425076:	mov    rsi,rcx
  425079:	call   0x42a390
  42507e:	test   rax,rax
  425081:	mov    rbx,rax
  425084:	je     0x4250d8
  425086:	mov    edx,0x3d
  42508b:	mov    rcx,rax
  42508e:	call   0x42a428
  425093:	test   rax,rax
  425096:	je     0x4250d0
  425098:	cmp    BYTE PTR [rax+0x1],0x0
  42509c:	mov    BYTE PTR [rax],0x0
  42509f:	je     0x4250b2
  4250a1:	lea    rdx,[rax+0x1]
  4250a5:	mov    rcx,rbx
  4250a8:	call   QWORD PTR [rip+0x37a7e]        # 0x45cb2c
  4250ae:	test   eax,eax
  4250b0:	je     0x4250d0
  4250b2:	mov    rcx,rbx
  4250b5:	call   0x42a4e8
  4250ba:	mov    rax,QWORD PTR [rip+0x37b73]        # 0x45cc34
  4250c1:	mov    rcx,rsi
  4250c4:	add    rsp,0x28
  4250c8:	pop    rbx
  4250c9:	pop    rsi
  4250ca:	rex.W jmp rax
  4250cd:	nop    DWORD PTR [rax]
  4250d0:	mov    rcx,rbx
  4250d3:	call   0x42a4e8
  4250d8:	mov    eax,0xffffffff
  4250dd:	add    rsp,0x28
  4250e1:	pop    rbx
  4250e2:	pop    rsi
  4250e3:	ret    
  4250e4:	xchg   ax,ax
  4250e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4250f0:	push   rsi
  4250f1:	push   rbx
  4250f2:	sub    rsp,0x28
  4250f6:	mov    rsi,rcx
  4250f9:	call   0x42a400
  4250fe:	lea    rcx,[rax+0x2]
  425102:	call   0x42a4a0
  425107:	test   rax,rax
  42510a:	mov    rbx,rax
  42510d:	je     0x425140
  42510f:	lea    rdx,[rip+0x2e54a]        # 0x453660
  425116:	mov    r8,rsi
  425119:	mov    rcx,rax
  42511c:	call   0x426260
  425121:	mov    rcx,rbx
  425124:	call   0x425070
  425129:	mov    rcx,rbx
  42512c:	add    rsp,0x28
  425130:	pop    rbx
  425131:	pop    rsi
  425132:	jmp    0x42a4e8
  425137:	nop    WORD PTR [rax+rax*1+0x0]
  425140:	add    rsp,0x28
  425144:	pop    rbx
  425145:	pop    rsi
  425146:	ret    
  425147:	nop
  425148:	nop
  425149:	nop
  42514a:	nop
  42514b:	nop
  42514c:	nop
  42514d:	nop
  42514e:	nop
  42514f:	nop
  425150:	push   r15
  425152:	push   r14
  425154:	push   r13
  425156:	push   r12
  425158:	push   rbp
  425159:	push   rdi
  42515a:	push   rsi
  42515b:	push   rbx
  42515c:	sub    rsp,0x28
  425160:	mov    rsi,QWORD PTR [rcx]
  425163:	test   rsi,rsi
  425166:	je     0x42527e
  42516c:	mov    r12,rdx
  42516f:	mov    r14,rcx
  425172:	mov    r8,rcx
  425175:	xor    ebp,ebp
  425177:	nop    WORD PTR [rax+rax*1+0x0]
  425180:	mov    rdx,rsi
  425183:	mov    rcx,r12
  425186:	mov    rdi,QWORD PTR [r8+0x8]
  42518a:	mov    r13,QWORD PTR [r8+0x10]
  42518e:	call   0x42a3d8
  425193:	test   rax,rax
  425196:	mov    rbx,rax
  425199:	je     0x425251
  42519f:	test   rdi,rdi
  4251a2:	mov    rcx,rsi
  4251a5:	je     0x425270
  4251ab:	call   0x42a400
  4251b0:	lea    rcx,[rbx+rax*1]
  4251b4:	mov    rdx,rdi
  4251b7:	call   0x42a3d8
  4251bc:	test   rax,rax
  4251bf:	mov    rsi,rax
  4251c2:	je     0x425251
  4251c8:	mov    rcx,rdi
  4251cb:	call   0x42a400
  4251d0:	lea    rdi,[rsi+rax*1]
  4251d4:	mov    rcx,r13
  4251d7:	sub    rbx,r12
  4251da:	call   0x42a400
  4251df:	mov    rcx,rdi
  4251e2:	mov    rbp,rax
  4251e5:	lea    r14d,[rbp+rbx*1+0x0]
  4251ea:	call   0x42a400
  4251ef:	lea    esi,[rax+0x1]
  4251f2:	xor    eax,eax
  4251f4:	lea    r9d,[r14+rsi*1]
  4251f8:	cmp    r9d,0x64
  4251fc:	jg     0x425240
  4251fe:	lea    r15,[rip+0x352bb]        # 0x45a4c0
  425205:	movsxd rbx,ebx
  425208:	mov    rdx,r12
  42520b:	mov    r8,rbx
  42520e:	mov    rcx,r15
  425211:	call   0x42a490
  425216:	lea    rcx,[rbx+r15*1]
  42521a:	movsxd r8,ebp
  42521d:	mov    rdx,r13
  425220:	call   0x42a490
  425225:	movsxd rcx,r14d
  425228:	movsxd r8,esi
  42522b:	mov    rdx,rdi
  42522e:	add    rcx,r15
  425231:	call   0x42a490
  425236:	mov    rax,r15
  425239:	nop    DWORD PTR [rax+0x0]
  425240:	add    rsp,0x28
  425244:	pop    rbx
  425245:	pop    rsi
  425246:	pop    rdi
  425247:	pop    rbp
  425248:	pop    r12
  42524a:	pop    r13
  42524c:	pop    r14
  42524e:	pop    r15
  425250:	ret    
  425251:	add    ebp,0x1
  425254:	movsxd rax,ebp
  425257:	lea    rax,[rax+rax*2]
  42525b:	lea    r8,[r14+rax*8]
  42525f:	mov    rsi,QWORD PTR [r8]
  425262:	test   rsi,rsi
  425265:	jne    0x425180
  42526b:	mov    rax,r12
  42526e:	jmp    0x425240
  425270:	call   0x42a400
  425275:	lea    rdi,[rbx+rax*1]
  425279:	jmp    0x4251d4
  42527e:	mov    rax,rdx
  425281:	jmp    0x425240
  425283:	nop    DWORD PTR [rax]
  425286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425290:	push   rbx
  425291:	sub    rsp,0x20
  425295:	xor    eax,eax
  425297:	test   rdx,rdx
  42529a:	mov    ebx,ecx
  42529c:	je     0x4252aa
  42529e:	lea    rcx,[rip+0x2e51b]        # 0x4537c0
  4252a5:	call   0x425150
  4252aa:	mov    rdx,rax
  4252ad:	mov    ecx,ebx
  4252af:	call   0x42a450
  4252b4:	test   rax,rax
  4252b7:	je     0x4252d0
  4252b9:	lea    rcx,[rip+0x2e400]        # 0x4536c0
  4252c0:	mov    rdx,rax
  4252c3:	add    rsp,0x20
  4252c7:	pop    rbx
  4252c8:	jmp    0x425150
  4252cd:	nop    DWORD PTR [rax]
  4252d0:	xor    eax,eax
  4252d2:	add    rsp,0x20
  4252d6:	pop    rbx
  4252d7:	ret    
  4252d8:	nop
  4252d9:	nop
  4252da:	nop
  4252db:	nop
  4252dc:	nop
  4252dd:	nop
  4252de:	nop
  4252df:	nop
  4252e0:	push   rbx
  4252e1:	sub    rsp,0x20
  4252e5:	mov    rbx,rcx
  4252e8:	mov    rcx,QWORD PTR [rcx+0x8]
  4252ec:	mov    r8,QWORD PTR [rbx]
  4252ef:	sub    r8,rcx
  4252f2:	je     0x425309
  4252f4:	mov    r9,QWORD PTR [rbx+0x18]
  4252f8:	mov    edx,0x1
  4252fd:	call   0x42a4e0
  425302:	add    DWORD PTR [rbx+0x20],eax
  425305:	mov    rcx,QWORD PTR [rbx+0x8]
  425309:	mov    QWORD PTR [rbx],rcx
  42530c:	add    rsp,0x20
  425310:	pop    rbx
  425311:	ret    
  425312:	nop    DWORD PTR [rax+0x0]
  425316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425320:	push   r12
  425322:	push   rbp
  425323:	push   rdi
  425324:	push   rsi
  425325:	push   rbx
  425326:	sub    rsp,0x20
  42532a:	test   edx,edx
  42532c:	mov    rbp,rcx
  42532f:	mov    edi,edx
  425331:	mov    rbx,r8
  425334:	jle    0x42538d
  425336:	mov    rax,QWORD PTR [rbx+0x10]
  42533a:	mov    rcx,QWORD PTR [rbx]
  42533d:	test   rax,rax
  425340:	je     0x425367
  425342:	sub    rax,rcx
  425345:	test   eax,eax
  425347:	mov    r8d,eax
  42534a:	jg     0x42536a
  42534c:	cmp    QWORD PTR [rbx+0x18],0x0
  425351:	je     0x42538d
  425353:	mov    rcx,rbx
  425356:	call   0x4252e0
  42535b:	mov    rax,QWORD PTR [rbx+0x10]
  42535f:	mov    rcx,QWORD PTR [rbx]
  425362:	test   rax,rax
  425365:	jne    0x425342
  425367:	mov    r8d,edi
  42536a:	cmp    r8d,edi
  42536d:	mov    esi,r8d
  425370:	mov    rdx,rbp
  425373:	cmovg  esi,edi
  425376:	movsxd r12,esi
  425379:	sub    edi,esi
  42537b:	mov    r8,r12
  42537e:	add    rbp,r12
  425381:	call   0x42a488
  425386:	add    QWORD PTR [rbx],r12
  425389:	test   edi,edi
  42538b:	jg     0x425336
  42538d:	add    rsp,0x20
  425391:	pop    rbx
  425392:	pop    rsi
  425393:	pop    rdi
  425394:	pop    rbp
  425395:	pop    r12
  425397:	ret    
  425398:	nop    DWORD PTR [rax+rax*1+0x0]
  4253a0:	push   rbx
  4253a1:	sub    rsp,0x30
  4253a5:	mov    r8,QWORD PTR [rdx+0x10]
  4253a9:	mov    rax,QWORD PTR [rdx]
  4253ac:	mov    ebx,ecx
  4253ae:	test   r8,r8
  4253b1:	je     0x4253d4
  4253b3:	cmp    r8,rax
  4253b6:	ja     0x4253d4
  4253b8:	cmp    QWORD PTR [rdx+0x18],0x0
  4253bd:	je     0x4253dd
  4253bf:	mov    rcx,rdx
  4253c2:	mov    QWORD PTR [rsp+0x28],rdx
  4253c7:	call   0x4252e0
  4253cc:	mov    rdx,QWORD PTR [rsp+0x28]
  4253d1:	mov    rax,QWORD PTR [rdx]
  4253d4:	lea    rcx,[rax+0x1]
  4253d8:	mov    QWORD PTR [rdx],rcx
  4253db:	mov    BYTE PTR [rax],bl
  4253dd:	add    rsp,0x30
  4253e1:	pop    rbx
  4253e2:	ret    
  4253e3:	nop    DWORD PTR [rax]
  4253e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253f0:	push   rbp
  4253f1:	push   rdi
  4253f2:	push   rsi
  4253f3:	push   rbx
  4253f4:	sub    rsp,0x28
  4253f8:	mov    eax,DWORD PTR [r8]
  4253fb:	mov    ebp,ecx
  4253fd:	mov    rdi,rdx
  425400:	mov    rbx,r8
  425403:	mov    rsi,r9
  425406:	mov    ecx,DWORD PTR [rdx]
  425408:	test   eax,eax
  42540a:	jle    0x425450
  42540c:	test   ebp,ebp
  42540e:	je     0x425450
  425410:	test   ecx,ecx
  425412:	jne    0x4254a5
  425418:	nop    DWORD PTR [rax+rax*1+0x0]
  425420:	mov    rdx,rsi
  425423:	mov    ecx,ebp
  425425:	call   0x4253a0
  42542a:	mov    eax,DWORD PTR [rbx]
  42542c:	sub    eax,0x1
  42542f:	test   eax,eax
  425431:	mov    DWORD PTR [rbx],eax
  425433:	jg     0x425420
  425435:	mov    ecx,DWORD PTR [rdi]
  425437:	test   ecx,ecx
  425439:	jne    0x425488
  42543b:	nop    DWORD PTR [rax+rax*1+0x0]
  425440:	add    rsp,0x28
  425444:	pop    rbx
  425445:	pop    rsi
  425446:	pop    rdi
  425447:	pop    rbp
  425448:	ret    
  425449:	nop    DWORD PTR [rax+0x0]
  425450:	xor    edx,edx
  425452:	test   ecx,ecx
  425454:	setne  dl
  425457:	cmp    eax,edx
  425459:	jle    0x425437
  42545b:	nop    DWORD PTR [rax+rax*1+0x0]
  425460:	mov    ecx,0x20
  425465:	mov    rdx,rsi
  425468:	call   0x4253a0
  42546d:	mov    eax,DWORD PTR [rbx]
  42546f:	xor    r8d,r8d
  425472:	sub    eax,0x1
  425475:	mov    DWORD PTR [rbx],eax
  425477:	mov    ecx,DWORD PTR [rdi]
  425479:	test   ecx,ecx
  42547b:	setne  r8b
  42547f:	cmp    r8d,eax
  425482:	jl     0x425460
  425484:	test   ecx,ecx
  425486:	je     0x425440
  425488:	mov    rdx,rsi
  42548b:	call   0x4253a0
  425490:	mov    eax,DWORD PTR [rbx]
  425492:	cmp    eax,0x0
  425495:	jle    0x4254c5
  425497:	sub    eax,0x1
  42549a:	mov    DWORD PTR [rbx],eax
  42549c:	add    rsp,0x28
  4254a0:	pop    rbx
  4254a1:	pop    rsi
  4254a2:	pop    rdi
  4254a3:	pop    rbp
  4254a4:	ret    
  4254a5:	mov    rdx,r9
  4254a8:	call   0x4253a0
  4254ad:	sub    DWORD PTR [rbx],0x1
  4254b0:	mov    DWORD PTR [rdi],0x0
  4254b6:	mov    eax,DWORD PTR [rbx]
  4254b8:	test   eax,eax
  4254ba:	jg     0x425420
  4254c0:	jmp    0x425435
  4254c5:	je     0x425440
  4254cb:	add    eax,0x1
  4254ce:	mov    DWORD PTR [rbx],eax
  4254d0:	jmp    0x425440
  4254d5:	nop
  4254d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4254e0:	push   rbp
  4254e1:	push   rdi
  4254e2:	push   rsi
  4254e3:	push   rbx
  4254e4:	sub    rsp,0x78
  4254e8:	mov    edi,DWORD PTR [rsp+0xd0]
  4254ef:	mov    rsi,QWORD PTR [rsp+0xe0]
  4254f7:	sub    edx,0x58
  4254fa:	mov    DWORD PTR [rsp+0x28],0x0
  425502:	mov    DWORD PTR [rsp+0x2c],0x0
  42550a:	cmp    dl,0x20
  42550d:	ja     0x425555
  42550f:	lea    rax,[rip+0x2e38e]        # 0x4538a4
  425516:	movzx  edx,dl
  425519:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42551d:	add    rax,rdx
  425520:	jmp    rax
  425522:	sub    ebx,0x1
  425525:	mov    rdx,rsi
  425528:	movsxd rax,ebx
  42552b:	movsx  ecx,BYTE PTR [rsp+rax*1+0x30]
  425530:	call   0x4253a0
  425535:	test   ebx,ebx
  425537:	jne    0x425522
  425539:	mov    eax,DWORD PTR [rsp+0x2c]
  42553d:	test   eax,eax
  42553f:	jns    0x425555
  425541:	mov    rdx,rsi
  425544:	mov    ecx,0x20
  425549:	call   0x4253a0
  42554e:	add    DWORD PTR [rsp+0x2c],0x1
  425553:	js     0x425541
  425555:	add    rsp,0x78
  425559:	pop    rbx
  42555a:	pop    rsi
  42555b:	pop    rdi
  42555c:	pop    rbp
  42555d:	ret    
  42555e:	test   rcx,rcx
  425561:	js     0x42560a
  425567:	test   r8d,r8d
  42556a:	je     0x425574
  42556c:	mov    DWORD PTR [rsp+0x28],0x2b
  425574:	lea    r11,[rip+0x2e305]        # 0x453880
  42557b:	mov    r10d,0xa
  425581:	mov    edx,DWORD PTR [rsp+0xd8]
  425588:	test   edx,edx
  42558a:	setne  dl
  42558d:	test   edi,edi
  42558f:	sete   al
  425592:	test   dl,al
  425594:	je     0x425622
  42559a:	xor    ebx,ebx
  42559c:	test   rcx,rcx
  42559f:	jne    0x425622
  4255a5:	mov    eax,DWORD PTR [rsp+0xc0]
  4255ac:	xor    edx,edx
  4255ae:	sub    edi,ebx
  4255b0:	mov    ebp,edi
  4255b2:	cmovs  ebp,edx
  4255b5:	sub    eax,ebx
  4255b7:	sub    eax,ebp
  4255b9:	cmovs  eax,edx
  4255bc:	test   r9d,r9d
  4255bf:	mov    DWORD PTR [rsp+0x2c],eax
  4255c3:	je     0x4255c9
  4255c5:	neg    DWORD PTR [rsp+0x2c]
  4255c9:	mov    ecx,DWORD PTR [rsp+0xc8]
  4255d0:	lea    rdx,[rsp+0x28]
  4255d5:	lea    r8,[rsp+0x2c]
  4255da:	mov    r9,rsi
  4255dd:	lea    edi,[rbp-0x1]
  4255e0:	call   0x4253f0
  4255e5:	test   ebp,ebp
  4255e7:	je     0x425535
  4255ed:	nop    DWORD PTR [rax]
  4255f0:	mov    rdx,rsi
  4255f3:	mov    ecx,0x30
  4255f8:	sub    edi,0x1
  4255fb:	call   0x4253a0
  425600:	cmp    edi,0xffffffff
  425603:	jne    0x4255f0
  425605:	jmp    0x425535
  42560a:	lea    r11,[rip+0x2e26f]        # 0x453880
  425611:	mov    DWORD PTR [rsp+0x28],0x2d
  425619:	neg    rcx
  42561c:	mov    r10d,0xa
  425622:	lea    r8,[rsp+0x30]
  425627:	mov    rax,rcx
  42562a:	xor    ebx,ebx
  42562c:	nop    DWORD PTR [rax+0x0]
  425630:	xor    edx,edx
  425632:	add    ebx,0x1
  425635:	add    r8,0x1
  425639:	div    r10
  42563c:	movzx  edx,BYTE PTR [r11+rdx*1]
  425641:	mov    BYTE PTR [r8-0x1],dl
  425645:	test   rax,rax
  425648:	jne    0x425630
  42564a:	jmp    0x4255a5
  42564f:	lea    r11,[rip+0x2e22a]        # 0x453880
  425656:	mov    r10d,0x10
  42565c:	jmp    0x425581
  425661:	lea    r11,[rip+0x2e218]        # 0x453880
  425668:	mov    r10d,0x8
  42566e:	jmp    0x425581
  425673:	lea    r11,[rip+0x2e217]        # 0x453891
  42567a:	mov    r10d,0x10
  425680:	jmp    0x425581
  425685:	nop
  425686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425690:	push   r15
  425692:	push   r14
  425694:	push   r13
  425696:	push   r12
  425698:	push   rbp
  425699:	push   rdi
  42569a:	push   rsi
  42569b:	push   rbx
  42569c:	sub    rsp,0x5c8
  4256a3:	movaps XMMWORD PTR [rsp+0x590],xmm6
  4256ab:	movaps XMMWORD PTR [rsp+0x5a0],xmm7
  4256b3:	movaps XMMWORD PTR [rsp+0x5b0],xmm8
  4256bc:	lea    r10,[rsp+0xb0]
  4256c4:	mov    rbp,rdx
  4256c7:	mov    r15,rcx
  4256ca:	mov    r14,r8
  4256cd:	lea    rdx,[r10+0x44]
  4256d1:	mov    rax,r10
  4256d4:	add    rax,0x4
  4256d8:	mov    DWORD PTR [rax-0x4],0x0
  4256df:	cmp    rax,rdx
  4256e2:	jb     0x4256d4
  4256e4:	lea    r8,[rip+0x2e24d]        # 0x453938
  4256eb:	mov    rax,rbp
  4256ee:	xor    edi,edi
  4256f0:	xor    ebx,ebx
  4256f2:	mov    BYTE PTR [rsp+0x54],0x0
  4256f7:	nop    WORD PTR [rax+rax*1+0x0]
  425700:	add    rax,0x1
  425704:	movsx  edx,BYTE PTR [rax-0x1]
  425708:	test   edx,edx
  42570a:	je     0x425760
  42570c:	cmp    edx,0x25
  42570f:	jne    0x425700
  425711:	xor    r9d,r9d
  425714:	xor    r13d,r13d
  425717:	xor    r12d,r12d
  42571a:	xor    r11d,r11d
  42571d:	xor    esi,esi
  42571f:	add    rax,0x1
  425723:	movsx  ecx,BYTE PTR [rax-0x1]
  425727:	test   ecx,ecx
  425729:	mov    edx,ecx
  42572b:	je     0x425760
  42572d:	sub    edx,0x24
  425730:	cmp    dl,0x56
  425733:	ja     0x425880
  425739:	movzx  edx,dl
  42573c:	movsxd rdx,DWORD PTR [r8+rdx*4]
  425740:	add    rdx,r8
  425743:	jmp    rdx
  425745:	add    rax,0x1
  425749:	movsx  ecx,BYTE PTR [rax-0x1]
  42574d:	mov    r12d,0x1
  425753:	test   ecx,ecx
  425755:	mov    edx,ecx
  425757:	jne    0x42572d
  425759:	nop    DWORD PTR [rax+0x0]
  425760:	movzx  eax,BYTE PTR [rsp+0x54]
  425765:	test   bl,bl
  425767:	mov    BYTE PTR [rsp+0x5e],al
  42576b:	je     0x425775
  42576d:	test   al,al
  42576f:	jne    0x425a40
  425775:	test   edi,edi
  425777:	je     0x42596c
  42577d:	lea    rcx,[rsp+0x108]
  425785:	lea    r8,[rip+0x2e308]        # 0x453a94
  42578c:	add    r10,0x4
  425790:	mov    edx,0x1
  425795:	cmp    DWORD PTR [r10],0x5
  425799:	ja     0x425959
  42579f:	mov    eax,DWORD PTR [r10]
  4257a2:	movsxd rax,DWORD PTR [r8+rax*4]
  4257a6:	add    rax,r8
  4257a9:	jmp    rax
  4257ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4257b0:	test   r9d,r9d
  4257b3:	je     0x425940
  4257b9:	movsxd rdx,r9d
  4257bc:	mov    ecx,DWORD PTR [rsp+rdx*4+0xb0]
  4257c3:	cmp    ecx,0x5
  4257c6:	je     0x4257d0
  4257c8:	test   ecx,ecx
  4257ca:	jne    0x425a40
  4257d0:	cmp    edi,r9d
  4257d3:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x5
  4257de:	cmovl  edi,r9d
  4257e2:	jmp    0x425880
  4257e7:	nop    WORD PTR [rax+rax*1+0x0]
  4257f0:	lea    edx,[r11-0x1]
  4257f4:	cmp    edx,0xf
  4257f7:	ja     0x425a40
  4257fd:	test   sil,sil
  425800:	je     0x425a84
  425806:	movsxd rdx,r11d
  425809:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  425811:	ja     0x425a40
  425817:	cmp    edi,r11d
  42581a:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  425825:	mov    BYTE PTR [rsp+0x54],0x1
  42582a:	cmovl  edi,r11d
  42582e:	xor    r11d,r11d
  425831:	xor    esi,esi
  425833:	jmp    0x42571f
  425838:	nop    DWORD PTR [rax+rax*1+0x0]
  425840:	test   r13d,r13d
  425843:	jne    0x425745
  425849:	mov    r13b,0x1
  42584c:	jmp    0x42571f
  425851:	test   r9d,r9d
  425854:	je     0x425940
  42585a:	movsxd rdx,r9d
  42585d:	test   DWORD PTR [rsp+rdx*4+0xb0],0xfffffffb
  425868:	jne    0x425a40
  42586e:	cmp    edi,r9d
  425871:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x4
  42587c:	cmovl  edi,r9d
  425880:	test   sil,sil
  425883:	mov    edx,0x1
  425888:	cmovne ebx,edx
  42588b:	jmp    0x425700
  425890:	xor    r11d,r11d
  425893:	jmp    0x42571f
  425898:	nop    DWORD PTR [rax+rax*1+0x0]
  4258a0:	xor    r11d,r11d
  4258a3:	test   sil,sil
  4258a6:	mov    esi,0x1
  4258ab:	je     0x42571f
  4258b1:	mov    ebx,0x1
  4258b6:	jmp    0x42571f
  4258bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4258c0:	test   r9d,r9d
  4258c3:	je     0x425940
  4258c5:	movsxd rdx,r9d
  4258c8:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  4258d0:	ja     0x425a40
  4258d6:	cmp    edi,r9d
  4258d9:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  4258e4:	cmovl  edi,r9d
  4258e8:	jmp    0x425880
  4258ea:	nop    WORD PTR [rax+rax*1+0x0]
  4258f0:	test   r9d,r9d
  4258f3:	je     0x425940
  4258f5:	test   r12d,r12d
  4258f8:	mov    ecx,0x3
  4258fd:	je     0x425a94
  425903:	movsxd rdx,r9d
  425906:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  42590e:	cmp    ecx,r11d
  425911:	je     0x42591c
  425913:	test   r11d,r11d
  425916:	jne    0x425a40
  42591c:	cmp    edi,r9d
  42591f:	mov    DWORD PTR [rsp+rdx*4+0xb0],ecx
  425926:	cmovl  edi,r9d
  42592a:	jmp    0x425880
  42592f:	nop
  425930:	lea    edx,[r11+r11*4]
  425934:	lea    r11d,[rcx+rdx*2-0x30]
  425939:	jmp    0x42571f
  42593e:	xchg   ax,ax
  425940:	mov    ebx,0x1
  425945:	jmp    0x425880
  42594a:	nop    WORD PTR [rax+rax*1+0x0]
  425950:	mov    eax,DWORD PTR [r14]
  425953:	add    r14,0x8
  425957:	mov    DWORD PTR [rcx],eax
  425959:	add    edx,0x1
  42595c:	add    r10,0x4
  425960:	add    rcx,0x8
  425964:	cmp    edi,edx
  425966:	jge    0x425795
  42596c:	lea    rax,[rsp+0x190]
  425974:	pxor   xmm8,xmm8
  425979:	movsd  xmm7,QWORD PTR [rip+0x2e28f]        # 0x453c10
  425981:	mov    QWORD PTR [rsp+0x60],rax
  425986:	lea    rax,[rsp+0x8c]
  42598e:	mov    QWORD PTR [rsp+0x70],rax
  425993:	lea    rax,[rsp+0x88]
  42599b:	mov    QWORD PTR [rsp+0x78],rax
  4259a0:	lea    rax,[rsp+0x90]
  4259a8:	mov    QWORD PTR [rsp+0x68],rax
  4259ad:	nop    DWORD PTR [rax]
  4259b0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4259b4:	lea    rbx,[rbp+0x1]
  4259b8:	test   ecx,ecx
  4259ba:	je     0x425cba
  4259c0:	cmp    ecx,0x25
  4259c3:	jne    0x425cc1
  4259c9:	lea    rcx,[rip+0x2e0dc]        # 0x453aac
  4259d0:	xor    r12d,r12d
  4259d3:	mov    DWORD PTR [rsp+0x54],0x0
  4259db:	xor    r13d,r13d
  4259de:	xor    r9d,r9d
  4259e1:	xor    esi,esi
  4259e3:	xor    edi,edi
  4259e5:	xor    r10d,r10d
  4259e8:	mov    DWORD PTR [rsp+0x58],0x0
  4259f0:	xor    ebp,ebp
  4259f2:	xor    r8d,r8d
  4259f5:	mov    BYTE PTR [rsp+0x5f],0x0
  4259fa:	xor    r11d,r11d
  4259fd:	add    rbx,0x1
  425a01:	movsx  edx,BYTE PTR [rbx-0x1]
  425a05:	test   edx,edx
  425a07:	mov    eax,edx
  425a09:	je     0x425cba
  425a0f:	sub    eax,0x24
  425a12:	cmp    al,0x56
  425a14:	ja     0x425ca7
  425a1a:	movzx  eax,al
  425a1d:	movsxd rax,DWORD PTR [rcx+rax*4]
  425a21:	add    rax,rcx
  425a24:	jmp    rax
  425a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a30:	mov    rax,QWORD PTR [r14]
  425a33:	add    r14,0x8
  425a37:	mov    QWORD PTR [rcx],rax
  425a3a:	jmp    0x425959
  425a3f:	nop
  425a40:	mov    eax,0xffffffff
  425a45:	movaps xmm6,XMMWORD PTR [rsp+0x590]
  425a4d:	movaps xmm7,XMMWORD PTR [rsp+0x5a0]
  425a55:	movaps xmm8,XMMWORD PTR [rsp+0x5b0]
  425a5e:	add    rsp,0x5c8
  425a65:	pop    rbx
  425a66:	pop    rsi
  425a67:	pop    rdi
  425a68:	pop    rbp
  425a69:	pop    r12
  425a6b:	pop    r13
  425a6d:	pop    r14
  425a6f:	pop    r15
  425a71:	ret    
  425a72:	movsd  xmm0,QWORD PTR [r14]
  425a77:	add    r14,0x8
  425a7b:	movsd  QWORD PTR [rcx],xmm0
  425a7f:	jmp    0x425959
  425a84:	mov    r9d,r11d
  425a87:	mov    BYTE PTR [rsp+0x54],0x1
  425a8c:	xor    r11d,r11d
  425a8f:	jmp    0x42571f
  425a94:	movsxd rdx,r9d
  425a97:	cmp    r13d,0x1
  425a9b:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  425aa3:	sbb    ecx,ecx
  425aa5:	add    ecx,0x2
  425aa8:	cmp    ecx,r11d
  425aab:	jne    0x425913
  425ab1:	jmp    0x42591c
  425ab6:	mov    eax,r10d
  425ab9:	or     eax,r8d
  425abc:	mov    eax,0x30
  425ac1:	cmove  r13d,eax
  425ac5:	lea    eax,[r8+r8*4]
  425ac9:	lea    r8d,[rdx+rax*2-0x30]
  425ace:	jmp    0x4259fd
  425ad3:	mov    ebp,0x1
  425ad8:	jmp    0x4259fd
  425add:	test   r11b,r11b
  425ae0:	mov    rax,r14
  425ae3:	jne    0x425af0
  425ae5:	test   r10d,r10d
  425ae8:	cmovne r9d,r8d
  425aec:	cmove  esi,r8d
  425af0:	cmp    BYTE PTR [rsp+0x5e],0x0
  425af5:	je     0x42601c
  425afb:	movsxd rax,r12d
  425afe:	movsd  xmm6,QWORD PTR [rsp+rax*8+0x100]
  425b07:	test   r10d,r10d
  425b0a:	mov    DWORD PTR [rsp+0x88],0x0
  425b15:	mov    DWORD PTR [rsp+0x8c],0x0
  425b20:	je     0x425fb2
  425b26:	test   r9d,r9d
  425b29:	mov    ebp,0x0
  425b2e:	mov    r12d,0x15e
  425b34:	cmovns ebp,r9d
  425b38:	mov    rcx,QWORD PTR [rsp+0x68]
  425b3d:	mov    r9d,edx
  425b40:	cmp    ebp,0x15e
  425b46:	lea    rdx,[rip+0x2ddde]        # 0x45392b
  425b4d:	cmovle r12d,ebp
  425b51:	mov    r8d,r12d
  425b54:	sub    ebp,r12d
  425b57:	call   0x42a438
  425b5c:	movq   rax,xmm6
  425b61:	mov    edx,eax
  425b63:	neg    edx
  425b65:	or     edx,eax
  425b67:	shr    rax,0x20
  425b6b:	shr    edx,0x1f
  425b6e:	and    eax,0x7fffffff
  425b73:	or     eax,edx
  425b75:	mov    edx,0x7ff00000
  425b7a:	cmp    edx,eax
  425b7c:	js     0x425b9c
  425b7e:	ucomisd xmm8,xmm6
  425b83:	ja     0x42608c
  425b89:	mov    edx,DWORD PTR [rsp+0x54]
  425b8d:	test   edx,edx
  425b8f:	je     0x425b9c
  425b91:	mov    DWORD PTR [rsp+0x88],0x2b
  425b9c:	mov    rdx,QWORD PTR [rsp+0x68]
  425ba1:	mov    rcx,QWORD PTR [rsp+0x60]
  425ba6:	movq   r8,xmm6
  425bab:	movapd xmm2,xmm6
  425baf:	call   0x42a438
  425bb4:	test   ebp,ebp
  425bb6:	mov    r12d,eax
  425bb9:	jle    0x425bd6
  425bbb:	lea    eax,[rax-0x1]
  425bbe:	cdqe   
  425bc0:	movzx  eax,BYTE PTR [rsp+rax*1+0x190]
  425bc8:	sub    eax,0x30
  425bcb:	cmp    eax,0xa
  425bce:	mov    eax,0x0
  425bd3:	cmovae ebp,eax
  425bd6:	sub    esi,r12d
  425bd9:	mov    eax,0x0
  425bde:	sub    esi,ebp
  425be0:	cmovns eax,esi
  425be3:	test   edi,edi
  425be5:	mov    DWORD PTR [rsp+0x8c],eax
  425bec:	je     0x425bf5
  425bee:	neg    DWORD PTR [rsp+0x8c]
  425bf5:	mov    r8,QWORD PTR [rsp+0x70]
  425bfa:	mov    rdx,QWORD PTR [rsp+0x78]
  425bff:	mov    r9,r15
  425c02:	mov    ecx,r13d
  425c05:	call   0x4253f0
  425c0a:	test   ebp,ebp
  425c0c:	jle    0x4260a0
  425c12:	mov    rcx,QWORD PTR [rsp+0x60]
  425c17:	mov    edx,0x65
  425c1c:	call   0x42a3e8
  425c21:	test   rax,rax
  425c24:	mov    rsi,rax
  425c27:	je     0x4260b5
  425c2d:	mov    rax,QWORD PTR [rsp+0x60]
  425c32:	mov    rdx,rsi
  425c35:	mov    r8,r15
  425c38:	sub    ebp,0x1
  425c3b:	sub    rdx,rax
  425c3e:	mov    rcx,rax
  425c41:	call   0x425320
  425c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c50:	mov    rdx,r15
  425c53:	mov    ecx,0x30
  425c58:	sub    ebp,0x1
  425c5b:	call   0x4253a0
  425c60:	cmp    ebp,0xffffffff
  425c63:	jne    0x425c50
  425c65:	mov    rdx,QWORD PTR [rsp+0x60]
  425c6a:	mov    r8,r15
  425c6d:	mov    rcx,rsi
  425c70:	sub    rdx,rsi
  425c73:	add    edx,r12d
  425c76:	call   0x425320
  425c7b:	mov    eax,DWORD PTR [rsp+0x8c]
  425c82:	test   eax,eax
  425c84:	jns    0x425ca7
  425c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c90:	mov    rdx,r15
  425c93:	mov    ecx,0x20
  425c98:	call   0x4253a0
  425c9d:	add    DWORD PTR [rsp+0x8c],0x1
  425ca5:	js     0x425c90
  425ca7:	mov    rbp,rbx
  425caa:	movsx  ecx,BYTE PTR [rbp+0x0]
  425cae:	lea    rbx,[rbp+0x1]
  425cb2:	test   ecx,ecx
  425cb4:	jne    0x4259c0
  425cba:	xor    eax,eax
  425cbc:	jmp    0x425a45
  425cc1:	mov    rdx,r15
  425cc4:	mov    rbp,rbx
  425cc7:	call   0x4253a0
  425ccc:	jmp    0x4259b0
  425cd1:	test   r11b,r11b
  425cd4:	mov    rbp,rbx
  425cd7:	mov    rax,r14
  425cda:	jne    0x425ce7
  425cdc:	test   r10d,r10d
  425cdf:	cmovne r9d,r8d
  425ce3:	cmove  esi,r8d
  425ce7:	cmp    BYTE PTR [rsp+0x5e],0x0
  425cec:	je     0x425fa6
  425cf2:	movsxd rax,r12d
  425cf5:	mov    rbx,QWORD PTR [rsp+rax*8+0x100]
  425cfd:	test   r10d,r10d
  425d00:	je     0x425f59
  425d06:	movsxd rdx,r9d
  425d09:	test   rdx,rdx
  425d0c:	je     0x426187
  425d12:	cmp    BYTE PTR [rbx],0x0
  425d15:	je     0x426187
  425d1b:	lea    rax,[rbx+0x1]
  425d1f:	add    rdx,rbx
  425d22:	jmp    0x425d32
  425d24:	add    rax,0x1
  425d28:	cmp    BYTE PTR [rax-0x1],0x0
  425d2c:	je     0x426084
  425d32:	cmp    rax,rdx
  425d35:	mov    r12,rax
  425d38:	jne    0x425d24
  425d3a:	mov    r12d,eax
  425d3d:	sub    r12d,ebx
  425d40:	jmp    0x425f64
  425d45:	cmp    BYTE PTR [rsp+0x5e],0x0
  425d4a:	mov    rax,r14
  425d4d:	je     0x426029
  425d53:	movsxd rax,r12d
  425d56:	mov    r8,QWORD PTR [rsp+rax*8+0x100]
  425d5e:	mov    rsi,QWORD PTR [rsp+0x60]
  425d63:	lea    rdx,[rip+0x2dbbe]        # 0x453928
  425d6a:	mov    rbp,rbx
  425d6d:	mov    rcx,rsi
  425d70:	call   0x42a438
  425d75:	mov    r8,r15
  425d78:	mov    edx,eax
  425d7a:	mov    rcx,rsi
  425d7d:	call   0x425320
  425d82:	jmp    0x4259b0
  425d87:	mov    eax,DWORD PTR [rsp+0x58]
  425d8b:	test   eax,eax
  425d8d:	jne    0x425ad3
  425d93:	mov    DWORD PTR [rsp+0x58],0x1
  425d9b:	jmp    0x4259fd
  425da0:	test   r11b,r11b
  425da3:	mov    rbp,rbx
  425da6:	mov    rax,r14
  425da9:	jne    0x425db2
  425dab:	test   r10d,r10d
  425dae:	cmove  esi,r8d
  425db2:	cmp    BYTE PTR [rsp+0x5e],0x0
  425db7:	je     0x426005
  425dbd:	movsxd rax,r12d
  425dc0:	movzx  ebx,BYTE PTR [rsp+rax*8+0x100]
  425dc8:	sub    esi,0x1
  425dcb:	mov    eax,0x0
  425dd0:	cmovns eax,esi
  425dd3:	mov    edx,eax
  425dd5:	mov    eax,edi
  425dd7:	neg    eax
  425dd9:	xor    eax,edx
  425ddb:	add    edi,eax
  425ddd:	test   edi,edi
  425ddf:	jle    0x42612a
  425de5:	mov    rdx,r15
  425de8:	mov    ecx,0x20
  425ded:	call   0x4253a0
  425df2:	sub    edi,0x1
  425df5:	jne    0x425de5
  425df7:	mov    rdx,r15
  425dfa:	mov    ecx,ebx
  425dfc:	call   0x4253a0
  425e01:	jmp    0x4259b0
  425e06:	test   r11b,r11b
  425e09:	mov    rax,r14
  425e0c:	jne    0x425e19
  425e0e:	test   r10d,r10d
  425e11:	cmovne r9d,r8d
  425e15:	cmove  esi,r8d
  425e19:	cmp    BYTE PTR [rsp+0x5e],0x0
  425e1e:	je     0x425f45
  425e24:	test   ebp,ebp
  425e26:	movsxd rax,r12d
  425e29:	je     0x426078
  425e2f:	mov    rcx,QWORD PTR [rsp+rax*8+0x100]
  425e37:	mov    r8d,DWORD PTR [rsp+0x54]
  425e3c:	mov    DWORD PTR [rsp+0x30],r9d
  425e41:	mov    r9d,edi
  425e44:	mov    QWORD PTR [rsp+0x40],r15
  425e49:	mov    DWORD PTR [rsp+0x38],r10d
  425e4e:	mov    rbp,rbx
  425e51:	mov    DWORD PTR [rsp+0x28],r13d
  425e56:	mov    DWORD PTR [rsp+0x20],esi
  425e5a:	call   0x4254e0
  425e5f:	jmp    0x4259b0
  425e64:	test   r11b,r11b
  425e67:	mov    rax,r14
  425e6a:	jne    0x425e77
  425e6c:	test   r10d,r10d
  425e6f:	cmovne r9d,r8d
  425e73:	cmove  esi,r8d
  425e77:	cmp    BYTE PTR [rsp+0x5e],0x0
  425e7c:	je     0x425fde
  425e82:	test   ebp,ebp
  425e84:	movsxd rax,r12d
  425e87:	jne    0x425e2f
  425e89:	movsxd rcx,DWORD PTR [rsp+rax*8+0x100]
  425e91:	jmp    0x425e37
  425e93:	mov    DWORD PTR [rsp+0x54],0x1
  425e9b:	jmp    0x4259fd
  425ea0:	test   r11b,r11b
  425ea3:	jne    0x425fcd
  425ea9:	mov    esi,r8d
  425eac:	mov    r10d,0x1
  425eb2:	xor    r8d,r8d
  425eb5:	jmp    0x4259fd
  425eba:	mov    edi,0x1
  425ebf:	jmp    0x4259fd
  425ec4:	mov    rdx,r15
  425ec7:	mov    ecx,0x25
  425ecc:	mov    rbp,rbx
  425ecf:	call   0x4253a0
  425ed4:	jmp    0x4259b0
  425ed9:	cmp    BYTE PTR [rsp+0x5f],0x0
  425ede:	je     0x426011
  425ee4:	movsxd r8,r8d
  425ee7:	test   r10d,r10d
  425eea:	mov    eax,DWORD PTR [rsp+r8*8+0x100]
  425ef2:	jne    0x42605c
  425ef8:	test   eax,eax
  425efa:	js     0x426171
  425f00:	mov    esi,eax
  425f02:	xor    r8d,r8d
  425f05:	mov    BYTE PTR [rsp+0x5f],0x0
  425f0a:	jmp    0x4259fd
  425f0f:	cmp    BYTE PTR [rsp+0x5e],0x0
  425f14:	jne    0x425ff2
  425f1a:	test   r10d,r10d
  425f1d:	lea    rdx,[r14+0x8]
  425f21:	mov    eax,DWORD PTR [r14]
  425f24:	jne    0x42603c
  425f2a:	test   eax,eax
  425f2c:	js     0x426157
  425f32:	mov    esi,eax
  425f34:	mov    r14,rdx
  425f37:	xor    r8d,r8d
  425f3a:	mov    r11d,0x1
  425f40:	jmp    0x4259fd
  425f45:	add    r14,0x8
  425f49:	test   ebp,ebp
  425f4b:	je     0x426035
  425f51:	mov    rcx,QWORD PTR [rax]
  425f54:	jmp    0x425e37
  425f59:	mov    rcx,rbx
  425f5c:	call   0x42a400
  425f61:	mov    r12d,eax
  425f64:	sub    esi,r12d
  425f67:	mov    eax,0x0
  425f6c:	cmovns eax,esi
  425f6f:	mov    edx,eax
  425f71:	mov    eax,edi
  425f73:	neg    eax
  425f75:	xor    eax,edx
  425f77:	add    edi,eax
  425f79:	test   edi,edi
  425f7b:	jle    0x4260fd
  425f81:	mov    rdx,r15
  425f84:	mov    ecx,0x20
  425f89:	call   0x4253a0
  425f8e:	sub    edi,0x1
  425f91:	jne    0x425f81
  425f93:	mov    r8,r15
  425f96:	mov    edx,r12d
  425f99:	mov    rcx,rbx
  425f9c:	call   0x425320
  425fa1:	jmp    0x4259b0
  425fa6:	add    r14,0x8
  425faa:	mov    rbx,QWORD PTR [rax]
  425fad:	jmp    0x425cfd
  425fb2:	mov    rcx,QWORD PTR [rsp+0x68]
  425fb7:	mov    r8d,edx
  425fba:	lea    rdx,[rip+0x2d972]        # 0x453933
  425fc1:	xor    ebp,ebp
  425fc3:	call   0x42a438
  425fc8:	jmp    0x425b5c
  425fcd:	mov    r10d,0x1
  425fd3:	xor    r8d,r8d
  425fd6:	xor    r11d,r11d
  425fd9:	jmp    0x4259fd
  425fde:	add    r14,0x8
  425fe2:	test   ebp,ebp
  425fe4:	jne    0x425f51
  425fea:	movsxd rcx,DWORD PTR [rax]
  425fed:	jmp    0x425e37
  425ff2:	xor    r8d,r8d
  425ff5:	mov    BYTE PTR [rsp+0x5f],0x1
  425ffa:	mov    r11d,0x1
  426000:	jmp    0x4259fd
  426005:	add    r14,0x8
  426009:	movzx  ebx,BYTE PTR [rax]
  42600c:	jmp    0x425dc8
  426011:	mov    r12d,r8d
  426014:	xor    r8d,r8d
  426017:	jmp    0x4259fd
  42601c:	add    r14,0x8
  426020:	movsd  xmm6,QWORD PTR [rax]
  426024:	jmp    0x425b07
  426029:	add    r14,0x8
  42602d:	mov    r8,QWORD PTR [rax]
  426030:	jmp    0x425d5e
  426035:	mov    ecx,DWORD PTR [rax]
  426037:	jmp    0x425e37
  42603c:	mov    r14,rdx
  42603f:	xor    edx,edx
  426041:	test   eax,eax
  426043:	mov    r9d,edx
  426046:	cmovs  r10d,edx
  42604a:	mov    r11d,0x1
  426050:	cmovns r9d,eax
  426054:	xor    r8d,r8d
  426057:	jmp    0x4259fd
  42605c:	xor    edx,edx
  42605e:	test   eax,eax
  426060:	mov    BYTE PTR [rsp+0x5f],0x0
  426065:	mov    r9d,edx
  426068:	cmovs  r10d,edx
  42606c:	cmovns r9d,eax
  426070:	xor    r8d,r8d
  426073:	jmp    0x4259fd
  426078:	mov    ecx,DWORD PTR [rsp+rax*8+0x100]
  42607f:	jmp    0x425e37
  426084:	sub    r12d,ebx
  426087:	jmp    0x425f64
  42608c:	mov    DWORD PTR [rsp+0x88],0x2d
  426097:	xorpd  xmm6,xmm7
  42609b:	jmp    0x425b9c
  4260a0:	mov    rcx,QWORD PTR [rsp+0x60]
  4260a5:	mov    r8,r15
  4260a8:	mov    edx,r12d
  4260ab:	call   0x425320
  4260b0:	jmp    0x425c7b
  4260b5:	mov    rcx,QWORD PTR [rsp+0x60]
  4260ba:	mov    edx,0x45
  4260bf:	call   0x42a3e8
  4260c4:	test   rax,rax
  4260c7:	mov    rsi,rax
  4260ca:	jne    0x425c2d
  4260d0:	mov    rcx,QWORD PTR [rsp+0x60]
  4260d5:	mov    r8,r15
  4260d8:	mov    edx,r12d
  4260db:	sub    ebp,0x1
  4260de:	call   0x425320
  4260e3:	mov    rdx,r15
  4260e6:	mov    ecx,0x30
  4260eb:	sub    ebp,0x1
  4260ee:	call   0x4253a0
  4260f3:	cmp    ebp,0xffffffff
  4260f6:	jne    0x4260e3
  4260f8:	jmp    0x425c7b
  4260fd:	mov    r8,r15
  426100:	mov    edx,r12d
  426103:	mov    rcx,rbx
  426106:	call   0x425320
  42610b:	test   edi,edi
  42610d:	je     0x4259b0
  426113:	mov    rdx,r15
  426116:	mov    ecx,0x20
  42611b:	call   0x4253a0
  426120:	add    edi,0x1
  426123:	jne    0x426113
  426125:	jmp    0x4259b0
  42612a:	mov    rdx,r15
  42612d:	mov    ecx,ebx
  42612f:	call   0x4253a0
  426134:	test   edi,edi
  426136:	je     0x4259b0
  42613c:	nop    DWORD PTR [rax+0x0]
  426140:	mov    rdx,r15
  426143:	mov    ecx,0x20
  426148:	call   0x4253a0
  42614d:	add    edi,0x1
  426150:	jne    0x426140
  426152:	jmp    0x4259b0
  426157:	neg    eax
  426159:	mov    r14,rdx
  42615c:	mov    edi,0x1
  426161:	mov    esi,eax
  426163:	xor    r8d,r8d
  426166:	mov    r11d,0x1
  42616c:	jmp    0x4259fd
  426171:	neg    eax
  426173:	mov    edi,0x1
  426178:	xor    r8d,r8d
  42617b:	mov    esi,eax
  42617d:	mov    BYTE PTR [rsp+0x5f],0x0
  426182:	jmp    0x4259fd
  426187:	xor    r12d,r12d
  42618a:	jmp    0x425f64
  42618f:	nop
  426190:	sub    rsp,0x58
  426194:	lea    rdx,[rcx+rdx*1-0x1]
  426199:	mov    rax,r8
  42619c:	mov    QWORD PTR [rsp+0x20],rcx
  4261a1:	mov    QWORD PTR [rsp+0x28],rcx
  4261a6:	lea    rcx,[rsp+0x20]
  4261ab:	mov    r8,r9
  4261ae:	mov    QWORD PTR [rsp+0x30],rdx
  4261b3:	mov    rdx,rax
  4261b6:	mov    QWORD PTR [rsp+0x38],0x0
  4261bf:	call   0x425690
  4261c4:	test   eax,eax
  4261c6:	mov    rax,QWORD PTR [rsp+0x20]
  4261cb:	mov    BYTE PTR [rax],0x0
  4261ce:	jne    0x4261e0
  4261d0:	mov    rax,QWORD PTR [rsp+0x20]
  4261d5:	sub    eax,DWORD PTR [rsp+0x28]
  4261d9:	add    rsp,0x58
  4261dd:	ret    
  4261de:	xchg   ax,ax
  4261e0:	call   QWORD PTR [rip+0x36a06]        # 0x45cbec
  4261e6:	mov    DWORD PTR [rax],0x16
  4261ec:	mov    eax,0xffffffff
  4261f1:	jmp    0x4261d9
  4261f3:	nop    DWORD PTR [rax]
  4261f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426200:	test   rcx,rcx
  426203:	je     0x426210
  426205:	test   rdx,rdx
  426208:	je     0x426210
  42620a:	jmp    0x426190
  42620c:	nop    DWORD PTR [rax+0x0]
  426210:	xor    eax,eax
  426212:	ret    
  426213:	nop    DWORD PTR [rax]
  426216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426220:	sub    rsp,0x38
  426224:	mov    QWORD PTR [rsp+0x58],r9
  426229:	lea    r9,[rsp+0x58]
  42622e:	test   rcx,rcx
  426231:	mov    QWORD PTR [rsp+0x28],r9
  426236:	je     0x426250
  426238:	test   rdx,rdx
  42623b:	je     0x426250
  42623d:	call   0x426190
  426242:	add    rsp,0x38
  426246:	ret    
  426247:	nop    WORD PTR [rax+rax*1+0x0]
  426250:	xor    eax,eax
  426252:	add    rsp,0x38
  426256:	ret    
  426257:	nop    WORD PTR [rax+rax*1+0x0]
  426260:	sub    rsp,0x68
  426264:	xor    eax,eax
  426266:	mov    QWORD PTR [rsp+0x80],r8
  42626e:	lea    r8,[rsp+0x80]
  426276:	test   rcx,rcx
  426279:	mov    QWORD PTR [rsp+0x88],r9
  426281:	mov    QWORD PTR [rsp+0x28],r8
  426286:	je     0x4262c3
  426288:	mov    QWORD PTR [rsp+0x30],rcx
  42628d:	mov    QWORD PTR [rsp+0x38],rcx
  426292:	lea    rcx,[rsp+0x30]
  426297:	mov    QWORD PTR [rsp+0x40],0x0
  4262a0:	mov    QWORD PTR [rsp+0x48],0x0
  4262a9:	call   0x425690
  4262ae:	test   eax,eax
  4262b0:	mov    rax,QWORD PTR [rsp+0x30]
  4262b5:	mov    BYTE PTR [rax],0x0
  4262b8:	jne    0x4262d0
  4262ba:	mov    rax,QWORD PTR [rsp+0x30]
  4262bf:	sub    eax,DWORD PTR [rsp+0x38]
  4262c3:	add    rsp,0x68
  4262c7:	ret    
  4262c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4262d0:	call   QWORD PTR [rip+0x36916]        # 0x45cbec
  4262d6:	mov    DWORD PTR [rax],0x16
  4262dc:	mov    eax,0xffffffff
  4262e1:	jmp    0x4262c3
  4262e3:	nop    DWORD PTR [rax]
  4262e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262f0:	push   rbx
  4262f1:	sub    rsp,0x450
  4262f8:	test   rcx,rcx
  4262fb:	je     0x426350
  4262fd:	lea    rax,[rsp+0x50]
  426302:	lea    rbx,[rsp+0x20]
  426307:	mov    QWORD PTR [rsp+0x38],rcx
  42630c:	mov    DWORD PTR [rsp+0x40],0x0
  426314:	mov    QWORD PTR [rsp+0x20],rax
  426319:	mov    QWORD PTR [rsp+0x28],rax
  42631e:	lea    rax,[rsp+0x44f]
  426326:	mov    rcx,rbx
  426329:	mov    QWORD PTR [rsp+0x30],rax
  42632e:	call   0x425690
  426333:	test   eax,eax
  426335:	jne    0x426350
  426337:	mov    rcx,rbx
  42633a:	call   0x4252e0
  42633f:	mov    eax,DWORD PTR [rsp+0x40]
  426343:	add    rsp,0x450
  42634a:	pop    rbx
  42634b:	ret    
  42634c:	nop    DWORD PTR [rax+0x0]
  426350:	call   QWORD PTR [rip+0x36896]        # 0x45cbec
  426356:	mov    DWORD PTR [rax],0x16
  42635c:	mov    eax,0xffffffff
  426361:	jmp    0x426343
  426363:	nop    DWORD PTR [rax]
  426366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426370:	sub    rsp,0x38
  426374:	mov    QWORD PTR [rsp+0x50],r8
  426379:	lea    r8,[rsp+0x50]
  42637e:	mov    QWORD PTR [rsp+0x58],r9
  426383:	mov    QWORD PTR [rsp+0x28],r8
  426388:	call   0x4262f0
  42638d:	add    rsp,0x38
  426391:	ret    
  426392:	nop    DWORD PTR [rax+0x0]
  426396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263a0:	push   rsi
  4263a1:	push   rbx
  4263a2:	sub    rsp,0x38
  4263a6:	lea    rbx,[rsp+0x58]
  4263ab:	mov    rsi,rcx
  4263ae:	mov    QWORD PTR [rsp+0x58],rdx
  4263b3:	mov    QWORD PTR [rsp+0x60],r8
  4263b8:	mov    QWORD PTR [rsp+0x68],r9
  4263bd:	mov    QWORD PTR [rsp+0x28],rbx
  4263c2:	call   QWORD PTR [rip+0x367ec]        # 0x45cbb4
  4263c8:	lea    rcx,[rax+0x30]
  4263cc:	mov    r8,rbx
  4263cf:	mov    rdx,rsi
  4263d2:	call   0x4262f0
  4263d7:	add    rsp,0x38
  4263db:	pop    rbx
  4263dc:	pop    rsi
  4263dd:	ret    
  4263de:	nop
  4263df:	nop
  4263e0:	push   r13
  4263e2:	push   r12
  4263e4:	push   rbp
  4263e5:	push   rdi
  4263e6:	push   rsi
  4263e7:	push   rbx
  4263e8:	sub    rsp,0x28
  4263ec:	mov    esi,0x65
  4263f1:	mov    rdi,QWORD PTR [rip+0x366d4]        # 0x45cacc
  4263f8:	mov    r13,QWORD PTR [rip+0x3667d]        # 0x45ca7c
  4263ff:	mov    r12,rcx
  426402:	mov    rbp,rdx
  426405:	jmp    0x426438
  426407:	nop    WORD PTR [rax+rax*1+0x0]
  426410:	call   r13
  426413:	mov    ebx,eax
  426415:	mov    ecx,eax
  426417:	call   0x427cc0
  42641c:	lea    eax,[rbx-0x20]
  42641f:	cmp    eax,0x1
  426422:	jbe    0x426429
  426424:	cmp    ebx,0x5
  426427:	jne    0x426460
  426429:	sub    esi,0x1
  42642c:	je     0x426460
  42642e:	mov    ecx,0x186a0
  426433:	call   0x427740
  426438:	mov    r8d,0x1
  42643e:	mov    rdx,rbp
  426441:	mov    rcx,r12
  426444:	call   rdi
  426446:	test   eax,eax
  426448:	je     0x426410
  42644a:	xor    eax,eax
  42644c:	add    rsp,0x28
  426450:	pop    rbx
  426451:	pop    rsi
  426452:	pop    rdi
  426453:	pop    rbp
  426454:	pop    r12
  426456:	pop    r13
  426458:	ret    
  426459:	nop    DWORD PTR [rax+0x0]
  426460:	mov    eax,0xffffffff
  426465:	add    rsp,0x28
  426469:	pop    rbx
  42646a:	pop    rsi
  42646b:	pop    rdi
  42646c:	pop    rbp
  42646d:	pop    r12
  42646f:	pop    r13
  426471:	ret    
  426472:	nop    DWORD PTR [rax+0x0]
  426476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426480:	push   rdi
  426481:	push   rsi
  426482:	push   rbx
  426483:	sub    rsp,0x20
  426487:	mov    ebx,0x65
  42648c:	mov    rdi,QWORD PTR [rip+0x36759]        # 0x45cbec
  426493:	mov    rsi,rcx
  426496:	jmp    0x4264b6
  426498:	nop    DWORD PTR [rax+rax*1+0x0]
  4264a0:	call   rdi
  4264a2:	cmp    DWORD PTR [rax],0xd
  4264a5:	jne    0x4264d0
  4264a7:	sub    ebx,0x1
  4264aa:	je     0x4264d0
  4264ac:	mov    ecx,0x186a0
  4264b1:	call   0x427740
  4264b6:	mov    rcx,rsi
  4264b9:	call   0x42a398
  4264be:	test   eax,eax
  4264c0:	jne    0x4264a0
  4264c2:	add    rsp,0x20
  4264c6:	pop    rbx
  4264c7:	pop    rsi
  4264c8:	pop    rdi
  4264c9:	ret    
  4264ca:	nop    WORD PTR [rax+rax*1+0x0]
  4264d0:	mov    eax,0xffffffff
  4264d5:	add    rsp,0x20
  4264d9:	pop    rbx
  4264da:	pop    rsi
  4264db:	pop    rdi
  4264dc:	ret    
  4264dd:	nop    DWORD PTR [rax]
  4264e0:	push   rbp
  4264e1:	push   rdi
  4264e2:	push   rsi
  4264e3:	push   rbx
  4264e4:	sub    rsp,0x388
  4264eb:	mov    rdi,rdx
  4264ee:	mov    rbp,rcx
  4264f1:	xor    edx,edx
  4264f3:	mov    rcx,rdi
  4264f6:	call   QWORD PTR [rip+0x364f8]        # 0x45c9f4
  4264fc:	xor    r9d,r9d
  4264ff:	xor    r8d,r8d
  426502:	mov    QWORD PTR [rsp+0x30],0x0
  42650b:	mov    DWORD PTR [rsp+0x28],0x2200000
  426513:	mov    DWORD PTR [rsp+0x20],0x3
  42651b:	mov    edx,0xc0000000
  426520:	mov    rcx,rdi
  426523:	call   QWORD PTR [rip+0x364d3]        # 0x45c9fc
  426529:	cmp    rax,0xffffffffffffffff
  42652d:	mov    rbx,rax
  426530:	je     0x426742
  426536:	lea    rcx,[rip+0x2d6e3]        # 0x453c20
  42653d:	mov    r8d,0x4
  426543:	mov    rdx,rbp
  426546:	lea    rsi,[rsp+0x50]
  42654b:	call   0x42a498
  426550:	test   eax,eax
  426552:	jne    0x4266a0
  426558:	mov    rdx,rbp
  42655b:	mov    rcx,rsi
  42655e:	call   0x42a418
  426563:	mov    rcx,rsi
  426566:	jmp    0x426577
  426568:	nop    DWORD PTR [rax+rax*1+0x0]
  426570:	lea    rcx,[rax+0x1]
  426574:	mov    BYTE PTR [rax],0x5c
  426577:	mov    edx,0x2f
  42657c:	call   0x42a428
  426581:	test   rax,rax
  426584:	jne    0x426570
  426586:	mov    r9,rsi
  426589:	mov    edx,DWORD PTR [r9]
  42658c:	add    r9,0x4
  426590:	lea    eax,[rdx-0x1010101]
  426596:	not    edx
  426598:	and    eax,edx
  42659a:	and    eax,0x80808080
  42659f:	je     0x426589
  4265a1:	mov    edx,eax
  4265a3:	mov    r8,rsi
  4265a6:	mov    DWORD PTR [rsp+0x160],0xa0000003
  4265b1:	shr    edx,0x10
  4265b4:	test   eax,0x8080
  4265b9:	mov    DWORD PTR [rsp+0x28],0x104
  4265c1:	cmove  eax,edx
  4265c4:	lea    rdx,[r9+0x2]
  4265c8:	lea    rbp,[rsp+0x160]
  4265d0:	cmove  r9,rdx
  4265d4:	add    al,al
  4265d6:	sbb    r9,0x3
  4265da:	xor    edx,edx
  4265dc:	xor    ecx,ecx
  4265de:	sub    r9,rsi
  4265e1:	mov    WORD PTR [rsp+0x168],dx
  4265e9:	mov    WORD PTR [rsp+0x16e],cx
  4265f1:	add    r9d,r9d
  4265f4:	xor    edx,edx
  4265f6:	xor    ecx,ecx
  4265f8:	lea    eax,[r9+0xc]
  4265fc:	mov    DWORD PTR [rsp+0x44],r9d
  426601:	mov    WORD PTR [rsp+0x16a],r9w
  42660a:	add    r9d,0x2
  42660e:	mov    WORD PTR [rsp+0x164],ax
  426616:	xor    eax,eax
  426618:	mov    WORD PTR [rsp+0x16c],r9w
  426621:	mov    WORD PTR [rsp+0x166],ax
  426629:	lea    rax,[rsp+0x170]
  426631:	mov    r9d,0xffffffff
  426637:	mov    QWORD PTR [rsp+0x20],rax
  42663c:	call   QWORD PTR [rip+0x36492]        # 0x45cad4
  426642:	movzx  eax,WORD PTR [rsp+0x164]
  42664a:	lea    rdx,[rsp+0x44]
  42664f:	mov    QWORD PTR [rsp+0x38],0x0
  426658:	mov    DWORD PTR [rsp+0x28],0x0
  426660:	mov    QWORD PTR [rsp+0x20],0x0
  426669:	mov    r8,rbp
  42666c:	mov    QWORD PTR [rsp+0x30],rdx
  426671:	mov    rcx,rbx
  426674:	mov    edx,0x900a4
  426679:	lea    r9d,[rax+0x8]
  42667d:	call   QWORD PTR [rip+0x36399]        # 0x45ca1c
  426683:	test   eax,eax
  426685:	je     0x4266b7
  426687:	mov    rcx,rbx
  42668a:	call   QWORD PTR [rip+0x3635c]        # 0x45c9ec
  426690:	xor    eax,eax
  426692:	add    rsp,0x388
  426699:	pop    rbx
  42669a:	pop    rsi
  42669b:	pop    rdi
  42669c:	pop    rbp
  42669d:	ret    
  42669e:	xchg   ax,ax
  4266a0:	lea    rdx,[rip+0x2d57e]        # 0x453c25
  4266a7:	mov    r8,rbp
  4266aa:	mov    rcx,rsi
  4266ad:	call   0x426260
  4266b2:	jmp    0x426563
  4266b7:	call   QWORD PTR [rip+0x3652f]        # 0x45cbec
  4266bd:	mov    DWORD PTR [rax],0x0
  4266c3:	call   QWORD PTR [rip+0x363b3]        # 0x45ca7c
  4266c9:	mov    r8d,eax
  4266cc:	lea    rax,[rsp+0x48]
  4266d1:	mov    r9d,0x409
  4266d7:	xor    edx,edx
  4266d9:	mov    ecx,0x1100
  4266de:	mov    QWORD PTR [rsp+0x30],0x0
  4266e7:	mov    DWORD PTR [rsp+0x28],0x0
  4266ef:	mov    QWORD PTR [rsp+0x20],rax
  4266f4:	call   QWORD PTR [rip+0x3633a]        # 0x45ca34
  4266fa:	mov    rbp,QWORD PTR [rsp+0x48]
  4266ff:	call   QWORD PTR [rip+0x364af]        # 0x45cbb4
  426705:	lea    rdx,[rip+0x2d524]        # 0x453c30
  42670c:	lea    rcx,[rax+0x60]
  426710:	mov    r8,rsi
  426713:	mov    r9,rbp
  426716:	call   0x426370
  42671b:	mov    rcx,QWORD PTR [rsp+0x48]
  426720:	call   QWORD PTR [rip+0x3639e]        # 0x45cac4
  426726:	mov    rcx,rbx
  426729:	call   QWORD PTR [rip+0x362bd]        # 0x45c9ec
  42672f:	mov    rcx,rdi
  426732:	call   QWORD PTR [rip+0x363bc]        # 0x45caf4
  426738:	mov    eax,0xffffffff
  42673d:	jmp    0x426692
  426742:	jmp    0x426692
  426747:	nop    WORD PTR [rax+rax*1+0x0]
  426750:	push   r12
  426752:	push   rbp
  426753:	push   rdi
  426754:	push   rsi
  426755:	push   rbx
  426756:	sub    rsp,0x270
  42675d:	mov    rdi,rcx
  426760:	mov    r12,rdx
  426763:	mov    rsi,r8
  426766:	call   QWORD PTR [rip+0x36300]        # 0x45ca6c
  42676c:	cmp    eax,0xffffffff
  42676f:	mov    ebx,eax
  426771:	je     0x426950
  426777:	and    bh,0x4
  42677a:	je     0x4268a1
  426780:	xor    r9d,r9d
  426783:	mov    QWORD PTR [rsp+0x30],0x0
  42678c:	mov    DWORD PTR [rsp+0x28],0x2200000
  426794:	mov    DWORD PTR [rsp+0x20],0x3
  42679c:	mov    r8d,0x3
  4267a2:	mov    edx,0x80000000
  4267a7:	mov    rcx,rdi
  4267aa:	call   QWORD PTR [rip+0x3624c]        # 0x45c9fc
  4267b0:	cmp    rax,0xffffffffffffffff
  4267b4:	mov    rbx,rax
  4267b7:	je     0x426950
  4267bd:	lea    rax,[rsp+0x44]
  4267c2:	lea    rbp,[rsp+0x50]
  4267c7:	xor    r9d,r9d
  4267ca:	xor    r8d,r8d
  4267cd:	mov    QWORD PTR [rsp+0x38],0x0
  4267d6:	mov    DWORD PTR [rsp+0x28],0x21c
  4267de:	mov    QWORD PTR [rsp+0x30],rax
  4267e3:	mov    QWORD PTR [rsp+0x20],rbp
  4267e8:	mov    edx,0x900a8
  4267ed:	mov    rcx,rbx
  4267f0:	call   QWORD PTR [rip+0x36226]        # 0x45ca1c
  4267f6:	test   eax,eax
  4267f8:	je     0x4268c2
  4267fe:	mov    rcx,rbx
  426801:	call   QWORD PTR [rip+0x361e5]        # 0x45c9ec
  426807:	cmp    DWORD PTR [rsp+0x50],0xa0000003
  42680f:	jne    0x4268a1
  426815:	xor    edx,edx
  426817:	xor    ecx,ecx
  426819:	mov    QWORD PTR [rsp+0x38],0x0
  426822:	mov    QWORD PTR [rsp+0x30],0x0
  42682b:	mov    DWORD PTR [rsp+0x28],esi
  42682f:	mov    r9d,0xffffffff
  426835:	mov    QWORD PTR [rsp+0x20],r12
  42683a:	lea    r8,[rbp+0x10]
  42683e:	call   QWORD PTR [rip+0x36338]        # 0x45cb7c
  426844:	test   eax,eax
  426846:	jle    0x4268a1
  426848:	cmp    eax,0x4
  42684b:	mov    ebx,eax
  42684d:	jle    0x426862
  42684f:	lea    rdi,[rip+0x2d3ca]        # 0x453c20
  426856:	mov    ecx,0x4
  42685b:	mov    rsi,r12
  42685e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426860:	je     0x426872
  426862:	mov    eax,ebx
  426864:	add    rsp,0x270
  42686b:	pop    rbx
  42686c:	pop    rsi
  42686d:	pop    rdi
  42686e:	pop    rbp
  42686f:	pop    r12
  426871:	ret    
  426872:	lea    rsi,[r12+0x4]
  426877:	sub    ebx,0x4
  42687a:	mov    rcx,rsi
  42687d:	call   0x42a400
  426882:	lea    r8,[rax+0x1]
  426886:	mov    rdx,rsi
  426889:	mov    rcx,r12
  42688c:	call   0x42a488
  426891:	mov    eax,ebx
  426893:	add    rsp,0x270
  42689a:	pop    rbx
  42689b:	pop    rsi
  42689c:	pop    rdi
  42689d:	pop    rbp
  42689e:	pop    r12
  4268a0:	ret    
  4268a1:	mov    ebx,0xffffffff
  4268a6:	call   QWORD PTR [rip+0x36340]        # 0x45cbec
  4268ac:	mov    DWORD PTR [rax],0x16
  4268b2:	mov    eax,ebx
  4268b4:	add    rsp,0x270
  4268bb:	pop    rbx
  4268bc:	pop    rsi
  4268bd:	pop    rdi
  4268be:	pop    rbp
  4268bf:	pop    r12
  4268c1:	ret    
  4268c2:	mov    rsi,QWORD PTR [rip+0x36323]        # 0x45cbec
  4268c9:	call   rsi
  4268cb:	mov    DWORD PTR [rax],0x0
  4268d1:	call   QWORD PTR [rip+0x361a5]        # 0x45ca7c
  4268d7:	mov    r8d,eax
  4268da:	lea    rax,[rsp+0x48]
  4268df:	mov    r9d,0x409
  4268e5:	xor    edx,edx
  4268e7:	mov    ecx,0x1100
  4268ec:	mov    QWORD PTR [rsp+0x30],0x0
  4268f5:	mov    DWORD PTR [rsp+0x28],0x0
  4268fd:	mov    QWORD PTR [rsp+0x20],rax
  426902:	call   QWORD PTR [rip+0x3612c]        # 0x45ca34
  426908:	mov    rbp,QWORD PTR [rsp+0x48]
  42690d:	call   QWORD PTR [rip+0x362a1]        # 0x45cbb4
  426913:	lea    rdx,[rip+0x2d33e]        # 0x453c58
  42691a:	lea    rcx,[rax+0x60]
  42691e:	mov    r8,rdi
  426921:	mov    r9,rbp
  426924:	call   0x426370
  426929:	mov    rcx,QWORD PTR [rsp+0x48]
  42692e:	call   QWORD PTR [rip+0x36190]        # 0x45cac4
  426934:	mov    rcx,rbx
  426937:	mov    ebx,0xffffffff
  42693c:	call   QWORD PTR [rip+0x360aa]        # 0x45c9ec
  426942:	call   rsi
  426944:	mov    DWORD PTR [rax],0x16
  42694a:	jmp    0x426862
  42694f:	nop
  426950:	call   QWORD PTR [rip+0x36126]        # 0x45ca7c
  426956:	mov    ecx,eax
  426958:	call   0x427cc0
  42695d:	jmp    0x426862
  426962:	nop    DWORD PTR [rax+0x0]
  426966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426970:	sub    rsp,0x28
  426974:	call   QWORD PTR [rip+0x360f2]        # 0x45ca6c
  42697a:	mov    edx,eax
  42697c:	shr    edx,0xa
  42697f:	and    edx,0x1
  426982:	cmp    eax,0xffffffff
  426985:	je     0x426990
  426987:	mov    eax,edx
  426989:	add    rsp,0x28
  42698d:	ret    
  42698e:	xchg   ax,ax
  426990:	call   QWORD PTR [rip+0x360e6]        # 0x45ca7c
  426996:	mov    ecx,eax
  426998:	call   0x427cc0
  42699d:	xor    edx,edx
  42699f:	jmp    0x426987
  4269a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4269a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269b0:	push   rsi
  4269b1:	push   rbx
  4269b2:	sub    rsp,0x58
  4269b6:	mov    rbx,rcx
  4269b9:	mov    rsi,rdx
  4269bc:	call   0x42a130
  4269c1:	test   eax,eax
  4269c3:	js     0x4269e2
  4269c5:	xor    edx,edx
  4269c7:	lea    r8,[rsp+0x20]
  4269cc:	mov    rcx,rbx
  4269cf:	call   QWORD PTR [rip+0x3609f]        # 0x45ca74
  4269d5:	test   eax,eax
  4269d7:	je     0x4269f0
  4269d9:	mov    eax,DWORD PTR [rsp+0x40]
  4269dd:	mov    DWORD PTR [rsi+0x14],eax
  4269e0:	xor    eax,eax
  4269e2:	add    rsp,0x58
  4269e6:	pop    rbx
  4269e7:	pop    rsi
  4269e8:	ret    
  4269e9:	nop    DWORD PTR [rax+0x0]
  4269f0:	call   QWORD PTR [rip+0x36086]        # 0x45ca7c
  4269f6:	mov    ecx,eax
  4269f8:	call   0x427cc0
  4269fd:	mov    eax,0xffffffff
  426a02:	jmp    0x4269e2
  426a04:	nop
  426a05:	nop
  426a06:	nop
  426a07:	nop
  426a08:	nop
  426a09:	nop
  426a0a:	nop
  426a0b:	nop
  426a0c:	nop
  426a0d:	nop
  426a0e:	nop
  426a0f:	nop
  426a10:	push   rbx
  426a11:	sub    rsp,0x20
  426a15:	mov    rbx,rcx
  426a18:	movzx  ecx,BYTE PTR [rcx]
  426a1b:	cmp    cl,0x5c
  426a1e:	je     0x426a44
  426a20:	cmp    cl,0x2f
  426a23:	je     0x426a44
  426a25:	call   QWORD PTR [rip+0x362d1]        # 0x45ccfc
  426a2b:	test   eax,eax
  426a2d:	je     0x426a3b
  426a2f:	cmp    BYTE PTR [rbx+0x1],0x3a
  426a33:	lea    rax,[rbx+0x2]
  426a37:	cmove  rbx,rax
  426a3b:	mov    rax,rbx
  426a3e:	add    rsp,0x20
  426a42:	pop    rbx
  426a43:	ret    
  426a44:	movzx  eax,BYTE PTR [rbx+0x1]
  426a48:	cmp    al,0x5c
  426a4a:	je     0x426a50
  426a4c:	cmp    al,0x2f
  426a4e:	jne    0x426a25
  426a50:	movzx  eax,BYTE PTR [rbx+0x2]
  426a54:	lea    rdx,[rbx+0x2]
  426a58:	mov    rbx,rdx
  426a5b:	test   al,al
  426a5d:	je     0x426a3b
  426a5f:	cmp    al,0x2f
  426a61:	je     0x426a3b
  426a63:	cmp    al,0x5c
  426a65:	jne    0x426a78
  426a67:	jmp    0x426a3b
  426a69:	nop    DWORD PTR [rax+0x0]
  426a70:	cmp    al,0x5c
  426a72:	je     0x426a3b
  426a74:	cmp    al,0x2f
  426a76:	je     0x426a3b
  426a78:	add    rbx,0x1
  426a7c:	movzx  eax,BYTE PTR [rbx]
  426a7f:	test   al,al
  426a81:	jne    0x426a70
  426a83:	mov    rax,rbx
  426a86:	add    rsp,0x20
  426a8a:	pop    rbx
  426a8b:	ret    
  426a8c:	nop    DWORD PTR [rax+0x0]
  426a90:	push   rbx
  426a91:	sub    rsp,0x20
  426a95:	call   0x426a10
  426a9a:	mov    rbx,rax
  426a9d:	mov    rcx,rax
  426aa0:	call   0x42a400
  426aa5:	add    rax,rbx
  426aa8:	cmp    rbx,rax
  426aab:	jae    0x426ade
  426aad:	lea    rdx,[rax-0x1]
  426ab1:	cmp    rbx,rdx
  426ab4:	jae    0x426ade
  426ab6:	movzx  eax,BYTE PTR [rax-0x1]
  426aba:	cmp    al,0x5c
  426abc:	je     0x426ac2
  426abe:	cmp    al,0x2f
  426ac0:	jne    0x426ade
  426ac2:	mov    BYTE PTR [rdx],0x0
  426ac5:	sub    rdx,0x1
  426ac9:	cmp    rdx,rbx
  426acc:	je     0x426ade
  426ace:	movzx  r8d,BYTE PTR [rdx]
  426ad2:	cmp    r8b,0x5c
  426ad6:	je     0x426ac2
  426ad8:	cmp    r8b,0x2f
  426adc:	je     0x426ac2
  426ade:	add    rsp,0x20
  426ae2:	pop    rbx
  426ae3:	ret    
  426ae4:	xchg   ax,ax
  426ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426af0:	push   rbx
  426af1:	sub    rsp,0x20
  426af5:	call   0x426a10
  426afa:	cmp    BYTE PTR [rax],0x0
  426afd:	mov    rbx,rax
  426b00:	je     0x426bb8
  426b06:	mov    rcx,rax
  426b09:	call   0x42a400
  426b0e:	lea    rdx,[rbx+rax*1-0x1]
  426b13:	movzx  eax,BYTE PTR [rdx]
  426b16:	cmp    rbx,rdx
  426b19:	setb   r9b
  426b1d:	cmp    al,0x5c
  426b1f:	sete   r8b
  426b23:	cmp    al,0x2f
  426b25:	sete   cl
  426b28:	or     r8b,cl
  426b2b:	je     0x426b54
  426b2d:	test   r9b,r9b
  426b30:	jne    0x426b44
  426b32:	jmp    0x426b54
  426b34:	cmp    al,0x5c
  426b36:	sete   r8b
  426b3a:	cmp    al,0x2f
  426b3c:	sete   cl
  426b3f:	or     r8b,cl
  426b42:	je     0x426b54
  426b44:	sub    rdx,0x1
  426b48:	movzx  eax,BYTE PTR [rdx]
  426b4b:	cmp    rbx,rdx
  426b4e:	setb   r9b
  426b52:	jb     0x426b34
  426b54:	cmp    al,0x2f
  426b56:	setne  cl
  426b59:	cmp    al,0x5c
  426b5b:	setne  al
  426b5e:	test   cl,al
  426b60:	je     0x426b8a
  426b62:	test   r9b,r9b
  426b65:	jne    0x426b75
  426b67:	jmp    0x426b8a
  426b69:	nop    DWORD PTR [rax+0x0]
  426b70:	cmp    rbx,rdx
  426b73:	jae    0x426b8a
  426b75:	sub    rdx,0x1
  426b79:	movzx  eax,BYTE PTR [rdx]
  426b7c:	cmp    al,0x5c
  426b7e:	setne  cl
  426b81:	cmp    al,0x2f
  426b83:	setne  al
  426b86:	test   cl,al
  426b88:	jne    0x426b70
  426b8a:	cmp    rbx,rdx
  426b8d:	jae    0x426bbe
  426b8f:	movzx  eax,BYTE PTR [rdx-0x1]
  426b93:	cmp    al,0x5c
  426b95:	je     0x426ba0
  426b97:	cmp    al,0x2f
  426b99:	jne    0x426bbe
  426b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  426ba0:	sub    rdx,0x1
  426ba4:	cmp    rdx,rbx
  426ba7:	je     0x426bc3
  426ba9:	movzx  eax,BYTE PTR [rdx-0x1]
  426bad:	cmp    al,0x5c
  426baf:	je     0x426ba0
  426bb1:	cmp    al,0x2f
  426bb3:	je     0x426ba0
  426bb5:	mov    BYTE PTR [rdx],0x0
  426bb8:	add    rsp,0x20
  426bbc:	pop    rbx
  426bbd:	ret    
  426bbe:	cmp    rbx,rdx
  426bc1:	jne    0x426bb5
  426bc3:	movzx  eax,BYTE PTR [rbx]
  426bc6:	cmp    al,0x5c
  426bc8:	je     0x426bd1
  426bca:	cmp    al,0x2f
  426bcc:	mov    rdx,rbx
  426bcf:	jne    0x426bb5
  426bd1:	lea    rdx,[rbx+0x1]
  426bd5:	jmp    0x426bb5
  426bd7:	nop    WORD PTR [rax+rax*1+0x0]
  426be0:	push   rbx
  426be1:	sub    rsp,0x20
  426be5:	mov    rbx,rcx
  426be8:	call   0x426a10
  426bed:	cmp    rax,rbx
  426bf0:	setne  al
  426bf3:	add    rsp,0x20
  426bf7:	pop    rbx
  426bf8:	ret    
  426bf9:	nop    DWORD PTR [rax+0x0]
  426c00:	sub    rsp,0x28
  426c04:	call   0x426a10
  426c09:	movzx  edx,BYTE PTR [rax]
  426c0c:	test   dl,dl
  426c0e:	je     0x426c25
  426c10:	cmp    dl,0x5c
  426c13:	je     0x426c27
  426c15:	cmp    dl,0x2f
  426c18:	je     0x426c27
  426c1a:	add    rax,0x1
  426c1e:	movzx  edx,BYTE PTR [rax]
  426c21:	test   dl,dl
  426c23:	jne    0x426c10
  426c25:	xor    eax,eax
  426c27:	add    rsp,0x28
  426c2b:	ret    
  426c2c:	nop    DWORD PTR [rax+0x0]
  426c30:	movzx  eax,BYTE PTR [rcx]
  426c33:	test   al,al
  426c35:	jne    0x426c4b
  426c37:	jmp    0x426c53
  426c39:	nop    DWORD PTR [rax+0x0]
  426c40:	add    rcx,0x1
  426c44:	movzx  eax,BYTE PTR [rcx]
  426c47:	test   al,al
  426c49:	je     0x426c53
  426c4b:	cmp    al,0x3b
  426c4d:	jne    0x426c40
  426c4f:	mov    rax,rcx
  426c52:	ret    
  426c53:	xor    eax,eax
  426c55:	ret    
  426c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426c60:	sub    rsp,0x28
  426c64:	call   0x426a10
  426c69:	movzx  edx,BYTE PTR [rax]
  426c6c:	mov    rcx,rax
  426c6f:	xor    eax,eax
  426c71:	test   dl,dl
  426c73:	jne    0x426c90
  426c75:	jmp    0x426ca3
  426c77:	nop    WORD PTR [rax+rax*1+0x0]
  426c80:	cmp    dl,0x2f
  426c83:	je     0x426c95
  426c85:	add    rcx,0x1
  426c89:	movzx  edx,BYTE PTR [rcx]
  426c8c:	test   dl,dl
  426c8e:	je     0x426ca3
  426c90:	cmp    dl,0x5c
  426c93:	jne    0x426c80
  426c95:	mov    rax,rcx
  426c98:	add    rcx,0x1
  426c9c:	movzx  edx,BYTE PTR [rcx]
  426c9f:	test   dl,dl
  426ca1:	jne    0x426c90
  426ca3:	add    rsp,0x28
  426ca7:	ret    
  426ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  426cb0:	movzx  eax,BYTE PTR [rcx]
  426cb3:	test   al,al
  426cb5:	jne    0x426ccb
  426cb7:	jmp    0x426cdd
  426cb9:	nop    DWORD PTR [rax+0x0]
  426cc0:	add    rcx,0x1
  426cc4:	movzx  eax,BYTE PTR [rcx]
  426cc7:	test   al,al
  426cc9:	je     0x426cdd
  426ccb:	cmp    al,0x2f
  426ccd:	jne    0x426cc0
  426ccf:	mov    BYTE PTR [rcx],0x5c
  426cd2:	add    rcx,0x1
  426cd6:	movzx  eax,BYTE PTR [rcx]
  426cd9:	test   al,al
  426cdb:	jne    0x426ccb
  426cdd:	repz ret 
  426cdf:	nop
  426ce0:	push   rdi
  426ce1:	push   rsi
  426ce2:	push   rbx
  426ce3:	sub    rsp,0x30
  426ce7:	cmp    rcx,rdx
  426cea:	mov    rsi,rcx
  426ced:	mov    rdi,rdx
  426cf0:	mov    rbx,r8
  426cf3:	je     0x426d12
  426cf5:	mov    r8d,0x400
  426cfb:	call   0x424a90
  426d00:	jmp    0x426d12
  426d02:	movzx  eax,BYTE PTR [rbx+0x1]
  426d06:	cmp    al,0x5c
  426d08:	je     0x426d0e
  426d0a:	cmp    al,0x2f
  426d0c:	jne    0x426d25
  426d0e:	add    rbx,0x2
  426d12:	movzx  eax,BYTE PTR [rbx]
  426d15:	cmp    al,0x2e
  426d17:	je     0x426d02
  426d19:	test   al,al
  426d1b:	jne    0x426d25
  426d1d:	add    rsp,0x30
  426d21:	pop    rbx
  426d22:	pop    rsi
  426d23:	pop    rdi
  426d24:	ret    
  426d25:	mov    rcx,rdi
  426d28:	lea    rdi,[rip+0x2cf53]        # 0x453c82
  426d2f:	call   0x426a10
  426d34:	cmp    BYTE PTR [rax],0x0
  426d37:	lea    rax,[rip+0x2cf42]        # 0x453c80
  426d3e:	mov    rcx,rsi
  426d41:	cmovne rdi,rax
  426d45:	call   0x42a400
  426d4a:	lea    r8,[rip+0x2cf32]        # 0x453c83
  426d51:	lea    rcx,[rsi+rax*1]
  426d55:	mov    edx,0x400
  426d5a:	sub    rdx,rax
  426d5d:	mov    QWORD PTR [rsp+0x20],rbx
  426d62:	mov    r9,rdi
  426d65:	call   0x426220
  426d6a:	nop
  426d6b:	add    rsp,0x30
  426d6f:	pop    rbx
  426d70:	pop    rsi
  426d71:	pop    rdi
  426d72:	ret    
  426d73:	nop    DWORD PTR [rax]
  426d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d80:	push   r15
  426d82:	push   r14
  426d84:	push   r13
  426d86:	push   r12
  426d88:	push   rbp
  426d89:	push   rdi
  426d8a:	push   rsi
  426d8b:	push   rbx
  426d8c:	sub    rsp,0x28
  426d90:	movzx  edx,BYTE PTR [rcx]
  426d93:	mov    r12,rcx
  426d96:	mov    rax,rcx
  426d99:	test   dl,dl
  426d9b:	jne    0x426dab
  426d9d:	jmp    0x426dcd
  426d9f:	nop
  426da0:	add    rax,0x1
  426da4:	movzx  edx,BYTE PTR [rax]
  426da7:	test   dl,dl
  426da9:	je     0x426dbe
  426dab:	cmp    dl,0x5c
  426dae:	jne    0x426da0
  426db0:	mov    BYTE PTR [rax],0x2f
  426db3:	add    rax,0x1
  426db7:	movzx  edx,BYTE PTR [rax]
  426dba:	test   dl,dl
  426dbc:	jne    0x426dab
  426dbe:	cmp    r12,rax
  426dc1:	jae    0x426dcd
  426dc3:	cmp    BYTE PTR [rax-0x1],0x22
  426dc7:	je     0x426f56
  426dcd:	mov    rcx,r12
  426dd0:	call   0x426a90
  426dd5:	cmp    BYTE PTR [r12],0x0
  426dda:	mov    rcx,r12
  426ddd:	je     0x426e2b
  426ddf:	movzx  edx,BYTE PTR [r12+0x1]
  426de5:	lea    rcx,[r12+0x1]
  426dea:	test   dl,dl
  426dec:	je     0x426e2b
  426dee:	mov    r8,rcx
  426df1:	xor    r9d,r9d
  426df4:	cmp    dl,0x2f
  426df7:	mov    rax,r8
  426dfa:	jne    0x426e0d
  426dfc:	test   r9b,r9b
  426dff:	je     0x426e0d
  426e01:	add    rax,0x1
  426e05:	movzx  edx,BYTE PTR [rax]
  426e08:	cmp    dl,0x2f
  426e0b:	je     0x426e01
  426e0d:	cmp    rcx,rax
  426e10:	je     0x426e14
  426e12:	mov    BYTE PTR [rcx],dl
  426e14:	cmp    BYTE PTR [rax],0x2f
  426e17:	movzx  edx,BYTE PTR [rax+0x1]
  426e1b:	lea    r8,[rax+0x1]
  426e1f:	sete   r9b
  426e23:	add    rcx,0x1
  426e27:	test   dl,dl
  426e29:	jne    0x426df4
  426e2b:	mov    BYTE PTR [rcx],0x0
  426e2e:	lea    r15,[rip+0x2ce56]        # 0x453c8b
  426e35:	mov    rcx,r12
  426e38:	call   0x426a10
  426e3d:	xor    ebp,ebp
  426e3f:	mov    rbx,rax
  426e42:	mov    r14d,0x2
  426e48:	mov    r13d,0x3
  426e4e:	xchg   ax,ax
  426e50:	mov    rcx,rbx
  426e53:	call   0x42a400
  426e58:	cmp    eax,0x1
  426e5b:	jle    0x426e77
  426e5d:	movsxd rdx,eax
  426e60:	lea    rdi,[rip+0x2ce21]        # 0x453c88
  426e67:	mov    rcx,r13
  426e6a:	lea    rsi,[rbx+rdx*1-0x2]
  426e6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e71:	je     0x426f40
  426e77:	mov    rsi,rbx
  426e7a:	mov    rdi,r15
  426e7d:	mov    rcx,r14
  426e80:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e82:	je     0x426f4d
  426e88:	cmp    eax,0x2
  426e8b:	jle    0x426ec0
  426e8d:	cdqe   
  426e8f:	lea    rdi,[rip+0x2cdf7]        # 0x453c8d
  426e96:	mov    ecx,0x4
  426e9b:	lea    rsi,[rbx+rax*1-0x3]
  426ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426ea2:	jne    0x426ec0
  426ea4:	mov    rcx,r12
  426ea7:	add    ebp,0x1
  426eaa:	call   0x426af0
  426eaf:	mov    rcx,rbx
  426eb2:	call   0x42a400
  426eb7:	cmp    eax,0x1
  426eba:	jg     0x426e5d
  426ebc:	jmp    0x426e77
  426ebe:	xchg   ax,ax
  426ec0:	lea    rdi,[rip+0x2cdca]        # 0x453c91
  426ec7:	mov    rsi,rbx
  426eca:	mov    rcx,r13
  426ecd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426ecf:	je     0x426ea4
  426ed1:	test   ebp,ebp
  426ed3:	jle    0x426f2d
  426ed5:	cmp    BYTE PTR [rbx],0x0
  426ed8:	je     0x426f0d
  426eda:	mov    rcx,r12
  426edd:	sub    ebp,0x1
  426ee0:	call   0x426af0
  426ee5:	cmp    BYTE PTR [rbx],0x0
  426ee8:	jne    0x426e50
  426eee:	mov    edx,0x2e
  426ef3:	mov    WORD PTR [rbx],dx
  426ef6:	jmp    0x426e50
  426efb:	nop    DWORD PTR [rax+rax*1+0x0]
  426f00:	call   0x42a400
  426f05:	mov    DWORD PTR [r12+rax*1],0x2f2e2e
  426f0d:	sub    ebp,0x1
  426f10:	mov    rcx,r12
  426f13:	jne    0x426f00
  426f15:	call   0x42a400
  426f1a:	add    r12,rax
  426f1d:	mov    eax,0x2e2e
  426f22:	mov    WORD PTR [r12],ax
  426f27:	mov    BYTE PTR [r12+0x2],0x0
  426f2d:	add    rsp,0x28
  426f31:	pop    rbx
  426f32:	pop    rsi
  426f33:	pop    rdi
  426f34:	pop    rbp
  426f35:	pop    r12
  426f37:	pop    r13
  426f39:	pop    r14
  426f3b:	pop    r15
  426f3d:	ret    
  426f3e:	xchg   ax,ax
  426f40:	mov    rcx,r12
  426f43:	call   0x426af0
  426f48:	jmp    0x426e50
  426f4d:	test   ebp,ebp
  426f4f:	jle    0x426f2d
  426f51:	mov    BYTE PTR [rbx],0x0
  426f54:	jmp    0x426f0d
  426f56:	mov    BYTE PTR [rax-0x1],0x2f
  426f5a:	jmp    0x426dcd
  426f5f:	nop
  426f60:	push   r15
  426f62:	push   r14
  426f64:	push   r13
  426f66:	push   r12
  426f68:	push   rbp
  426f69:	push   rdi
  426f6a:	push   rsi
  426f6b:	push   rbx
  426f6c:	sub    rsp,0x28
  426f70:	mov    rbx,rdx
  426f73:	mov    rsi,rcx
  426f76:	mov    rdx,r8
  426f79:	movzx  eax,BYTE PTR [rbx]
  426f7c:	test   al,al
  426f7e:	je     0x427025
  426f84:	mov    r10d,0x1
  426f8a:	xor    edi,edi
  426f8c:	mov    r9d,0x2f
  426f92:	jmp    0x426fbe
  426f94:	cmp    al,0x2f
  426f96:	je     0x426fc2
  426f98:	cmp    al,r9b
  426f9b:	jne    0x426fe0
  426f9d:	movsxd r9,r10d
  426fa0:	movzx  eax,BYTE PTR [rbx+r9*1]
  426fa5:	test   al,al
  426fa7:	je     0x426fe0
  426fa9:	lea    r11,[rip+0x2cce8]        # 0x453c98
  426fb0:	add    r10d,0x1
  426fb4:	movzx  r9d,BYTE PTR [r11+r9*1]
  426fb9:	test   r9b,r9b
  426fbc:	je     0x426fe0
  426fbe:	cmp    al,0x5c
  426fc0:	jne    0x426f94
  426fc2:	cmp    r9b,0x5c
  426fc6:	je     0x426fce
  426fc8:	cmp    r9b,0x2f
  426fcc:	jne    0x426f98
  426fce:	movsxd r9,r10d
  426fd1:	movsxd rdi,r10d
  426fd4:	movzx  eax,BYTE PTR [rbx+r9*1]
  426fd9:	test   al,al
  426fdb:	jne    0x426fa9
  426fdd:	nop    DWORD PTR [rax]
  426fe0:	test   edi,edi
  426fe2:	je     0x427025
  426fe4:	mov    r8d,0x400
  426fea:	mov    rcx,rsi
  426fed:	call   0x424a90
  426ff2:	mov    rcx,rsi
  426ff5:	call   0x426af0
  426ffa:	mov    rcx,rsi
  426ffd:	call   0x426d80
  427002:	mov    rcx,rsi
  427005:	call   0x42a400
  42700a:	lea    r13d,[rdi+rax*1-0x3f]
  42700f:	test   r13d,r13d
  427012:	jle    0x427025
  427014:	movsxd r13,r13d
  427017:	movzx  eax,BYTE PTR [rsi+r13*1-0x1]
  42701d:	cmp    al,0x5c
  42701f:	je     0x42704e
  427021:	cmp    al,0x2f
  427023:	je     0x42704e
  427025:	mov    r8d,0x400
  42702b:	mov    rdx,rbx
  42702e:	mov    rcx,rsi
  427031:	call   0x424a90
  427036:	mov    rcx,rsi
  427039:	add    rsp,0x28
  42703d:	pop    rbx
  42703e:	pop    rsi
  42703f:	pop    rdi
  427040:	pop    rbp
  427041:	pop    r12
  427043:	pop    r13
  427045:	pop    r14
  427047:	pop    r15
  427049:	jmp    0x426d80
  42704e:	add    r13,rsi
  427051:	lea    r14,[rip+0x2cc40]        # 0x453c98
  427058:	movzx  eax,BYTE PTR [r13+0x0]
  42705d:	add    r14,rdi
  427060:	test   al,al
  427062:	je     0x4270be
  427064:	movzx  ebp,BYTE PTR [r14]
  427068:	test   bpl,bpl
  42706b:	je     0x427025
  42706d:	mov    r12,r13
  427070:	jmp    0x42707b
  427072:	movzx  ebp,BYTE PTR [r14]
  427076:	test   bpl,bpl
  427079:	je     0x427025
  42707b:	movzx  ecx,al
  42707e:	call   0x4279a0
  427083:	movzx  ecx,bpl
  427087:	mov    r15d,eax
  42708a:	call   0x4279a0
  42708f:	cmp    r15b,al
  427092:	je     0x4270ad
  427094:	movzx  eax,BYTE PTR [r12]
  427099:	cmp    al,0x5c
  42709b:	je     0x4270a1
  42709d:	cmp    al,0x2f
  42709f:	jne    0x4270e9
  4270a1:	cmp    bpl,0x5c
  4270a5:	je     0x4270ad
  4270a7:	cmp    bpl,0x2f
  4270ab:	jne    0x4270e9
  4270ad:	add    r12,0x1
  4270b1:	movzx  eax,BYTE PTR [r12]
  4270b6:	add    r14,0x1
  4270ba:	test   al,al
  4270bc:	jne    0x427072
  4270be:	cmp    BYTE PTR [r14],0x0
  4270c2:	jne    0x427025
  4270c8:	mov    rcx,rsi
  4270cb:	mov    BYTE PTR [r13+0x0],0x0
  4270d0:	call   0x426a90
  4270d5:	lea    r8,[rbx+rdi*1]
  4270d9:	mov    rdx,rsi
  4270dc:	mov    rcx,rsi
  4270df:	call   0x426ce0
  4270e4:	jmp    0x427036
  4270e9:	cmp    bpl,al
  4270ec:	jne    0x427025
  4270f2:	jmp    0x4270c8
  4270f4:	xchg   ax,ax
  4270f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427100:	push   r12
  427102:	push   rbp
  427103:	push   rdi
  427104:	push   rsi
  427105:	push   rbx
  427106:	sub    rsp,0x20
  42710a:	lea    rdi,[rip+0x2cb80]        # 0x453c91
  427111:	mov    ebp,0x1
  427116:	call   0x426a10
  42711b:	mov    rbx,rax
  42711e:	mov    rcx,rax
  427121:	call   0x42a400
  427126:	mov    rsi,rbx
  427129:	mov    ecx,0x3
  42712e:	mov    r12,rax
  427131:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427133:	seta   cl
  427136:	setb   dl
  427139:	cmp    cl,dl
  42713b:	je     0x427164
  42713d:	lea    rdi,[rip+0x2cb94]        # 0x453cd8
  427144:	mov    ecx,0x3
  427149:	mov    rsi,rbx
  42714c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42714e:	je     0x427164
  427150:	lea    rdx,[rip+0x2cb85]        # 0x453cdc
  427157:	mov    rcx,rbx
  42715a:	call   0x42a3d8
  42715f:	test   rax,rax
  427162:	je     0x427171
  427164:	mov    eax,ebp
  427166:	add    rsp,0x20
  42716a:	pop    rbx
  42716b:	pop    rsi
  42716c:	pop    rdi
  42716d:	pop    rbp
  42716e:	pop    r12
  427170:	ret    
  427171:	xor    ebp,ebp
  427173:	cmp    r12d,0x2
  427177:	jle    0x427164
  427179:	movsxd r12,r12d
  42717c:	lea    rdi,[rip+0x2cb0a]        # 0x453c8d
  427183:	mov    ecx,0x4
  427188:	lea    rsi,[rbx+r12*1-0x3]
  42718d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42718f:	sete   bpl
  427193:	jmp    0x427164
  427195:	nop
  427196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4271a0:	push   rsi
  4271a1:	push   rbx
  4271a2:	sub    rsp,0x28
  4271a6:	movzx  eax,BYTE PTR [rcx]
  4271a9:	cmp    al,0x5c
  4271ab:	je     0x4271e0
  4271ad:	cmp    al,0x2f
  4271af:	je     0x4271e0
  4271b1:	mov    rbx,rcx
  4271b4:	movzx  ecx,al
  4271b7:	call   QWORD PTR [rip+0x35b3f]        # 0x45ccfc
  4271bd:	test   eax,eax
  4271bf:	je     0x4271c7
  4271c1:	cmp    BYTE PTR [rbx+0x1],0x3a
  4271c5:	je     0x4271f0
  4271c7:	mov    rcx,rbx
  4271ca:	call   0x427100
  4271cf:	test   al,al
  4271d1:	sete   al
  4271d4:	add    rsp,0x28
  4271d8:	pop    rbx
  4271d9:	pop    rsi
  4271da:	ret    
  4271db:	nop    DWORD PTR [rax+rax*1+0x0]
  4271e0:	xor    eax,eax
  4271e2:	add    rsp,0x28
  4271e6:	pop    rbx
  4271e7:	pop    rsi
  4271e8:	ret    
  4271e9:	nop    DWORD PTR [rax+0x0]
  4271f0:	movzx  esi,BYTE PTR [rbx+0x2]
  4271f4:	cmp    sil,0x5c
  4271f8:	je     0x4271e0
  4271fa:	cmp    sil,0x2f
  4271fe:	je     0x4271e0
  427200:	mov    rcx,rbx
  427203:	call   0x427100
  427208:	mov    edx,eax
  42720a:	xor    eax,eax
  42720c:	test   dl,dl
  42720e:	jne    0x4271d4
  427210:	cmp    sil,0x5c
  427214:	setne  dl
  427217:	cmp    sil,0x2f
  42721b:	setne  al
  42721e:	and    eax,edx
  427220:	xor    eax,0x1
  427223:	jmp    0x4271d4
  427225:	nop
  427226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427230:	push   rdi
  427231:	push   rsi
  427232:	push   rbx
  427233:	sub    rsp,0x20
  427237:	mov    rsi,rcx
  42723a:	mov    rdi,rdx
  42723d:	call   0x42a400
  427242:	movsxd rbx,eax
  427245:	mov    rcx,rsi
  427248:	mov    rdx,rdi
  42724b:	mov    r8,rbx
  42724e:	call   0x42a3f8
  427253:	xor    ecx,ecx
  427255:	test   eax,eax
  427257:	jne    0x427272
  427259:	movzx  edx,BYTE PTR [rdi+rbx*1]
  42725d:	cmp    dl,0x5c
  427260:	sete   cl
  427263:	cmp    dl,0x2f
  427266:	sete   al
  427269:	or     ecx,eax
  42726b:	test   dl,dl
  42726d:	sete   dl
  427270:	or     ecx,edx
  427272:	mov    eax,ecx
  427274:	add    rsp,0x20
  427278:	pop    rbx
  427279:	pop    rsi
  42727a:	pop    rdi
  42727b:	ret    
  42727c:	nop    DWORD PTR [rax+0x0]
  427280:	push   rsi
  427281:	push   rbx
  427282:	sub    rsp,0x28
  427286:	mov    rbx,rcx
  427289:	call   0x426c60
  42728e:	test   rax,rax
  427291:	je     0x427360
  427297:	lea    rsi,[rax+0x1]
  42729b:	mov    rcx,rsi
  42729e:	call   0x42a390
  4272a3:	test   rax,rax
  4272a6:	mov    rbx,rax
  4272a9:	je     0x427370
  4272af:	mov    rcx,rax
  4272b2:	mov    eax,DWORD PTR [rcx]
  4272b4:	add    rcx,0x4
  4272b8:	lea    edx,[rax-0x1010101]
  4272be:	not    eax
  4272c0:	and    edx,eax
  4272c2:	and    edx,0x80808080
  4272c8:	je     0x4272b2
  4272ca:	mov    eax,edx
  4272cc:	shr    eax,0x10
  4272cf:	test   edx,0x8080
  4272d5:	cmove  edx,eax
  4272d8:	lea    rax,[rcx+0x2]
  4272dc:	cmove  rcx,rax
  4272e0:	add    dl,dl
  4272e2:	sbb    rcx,0x3
  4272e6:	sub    rcx,rbx
  4272e9:	cmp    rcx,0x4
  4272ed:	ja     0x427300
  4272ef:	mov    rax,rbx
  4272f2:	add    rsp,0x28
  4272f6:	pop    rbx
  4272f7:	pop    rsi
  4272f8:	ret    
  4272f9:	nop    DWORD PTR [rax+0x0]
  427300:	lea    rcx,[rbx+rcx*1-0x4]
  427305:	lea    rdx,[rip+0x2c9e8]        # 0x453cf4
  42730c:	call   0x427790
  427311:	test   eax,eax
  427313:	jne    0x4272ef
  427315:	mov    rdx,rbx
  427318:	mov    ecx,DWORD PTR [rdx]
  42731a:	add    rdx,0x4
  42731e:	lea    eax,[rcx-0x1010101]
  427324:	not    ecx
  427326:	and    eax,ecx
  427328:	and    eax,0x80808080
  42732d:	je     0x427318
  42732f:	mov    ecx,eax
  427331:	shr    ecx,0x10
  427334:	test   eax,0x8080
  427339:	cmove  eax,ecx
  42733c:	lea    rcx,[rdx+0x2]
  427340:	cmove  rdx,rcx
  427344:	add    al,al
  427346:	mov    rax,rbx
  427349:	sbb    rdx,0x3
  42734d:	mov    BYTE PTR [rdx-0x4],0x0
  427351:	add    rsp,0x28
  427355:	pop    rbx
  427356:	pop    rsi
  427357:	ret    
  427358:	nop    DWORD PTR [rax+rax*1+0x0]
  427360:	mov    rcx,rbx
  427363:	call   0x426a10
  427368:	mov    rsi,rax
  42736b:	jmp    0x42729b
  427370:	call   QWORD PTR [rip+0x3583e]        # 0x45cbb4
  427376:	lea    rdx,[rip+0x2c964]        # 0x453ce1
  42737d:	lea    rcx,[rax+0x60]
  427381:	mov    r8,rsi
  427384:	call   0x426370
  427389:	call   0x42a568
  42738e:	nop
  42738f:	nop
  427390:	push   r12
  427392:	push   rbp
  427393:	push   rdi
  427394:	push   rsi
  427395:	push   rbx
  427396:	sub    rsp,0x20
  42739a:	test   rcx,rcx
  42739d:	je     0x427544
  4273a3:	movzx  eax,BYTE PTR [rcx]
  4273a6:	mov    r12,rcx
  4273a9:	cmp    al,0x5c
  4273ab:	je     0x4274a1
  4273b1:	cmp    al,0x2f
  4273b3:	je     0x4274a1
  4273b9:	movzx  ecx,al
  4273bc:	mov    esi,0x400
  4273c1:	call   QWORD PTR [rip+0x35935]        # 0x45ccfc
  4273c7:	test   eax,eax
  4273c9:	jne    0x427483
  4273cf:	mov    rcx,rsi
  4273d2:	mov    rbp,QWORD PTR [rip+0x35813]        # 0x45cbec
  4273d9:	call   0x42a4a0
  4273de:	test   rax,rax
  4273e1:	mov    rbx,rax
  4273e4:	je     0x42741e
  4273e6:	mov    edx,esi
  4273e8:	mov    rcx,rax
  4273eb:	call   0x42a370
  4273f0:	test   rax,rax
  4273f3:	mov    rdi,rax
  4273f6:	jne    0x4274d0
  4273fc:	call   rbp
  4273fe:	cmp    DWORD PTR [rax],0x22
  427401:	jne    0x427440
  427403:	mov    rcx,rbx
  427406:	add    rsi,rsi
  427409:	call   0x42a4e8
  42740e:	mov    rcx,rsi
  427411:	call   0x42a4a0
  427416:	test   rax,rax
  427419:	mov    rbx,rax
  42741c:	jne    0x4273e6
  42741e:	call   QWORD PTR [rip+0x35790]        # 0x45cbb4
  427424:	lea    rdx,[rip+0x2c8ce]        # 0x453cf9
  42742b:	lea    rcx,[rax+0x60]
  42742f:	xor    edi,edi
  427431:	call   0x426370
  427436:	jmp    0x427475
  427438:	nop    DWORD PTR [rax+rax*1+0x0]
  427440:	call   rbp
  427442:	mov    esi,DWORD PTR [rax]
  427444:	mov    rcx,rbx
  427447:	call   0x42a4e8
  42744c:	call   rbp
  42744e:	mov    DWORD PTR [rax],esi
  427450:	call   rbp
  427452:	mov    ecx,DWORD PTR [rax]
  427454:	call   0x42a408
  427459:	mov    rbx,rax
  42745c:	call   QWORD PTR [rip+0x35752]        # 0x45cbb4
  427462:	lea    rdx,[rip+0x2c89f]        # 0x453d08
  427469:	lea    rcx,[rax+0x60]
  42746d:	mov    r8,rbx
  427470:	call   0x426370
  427475:	mov    rax,rdi
  427478:	add    rsp,0x20
  42747c:	pop    rbx
  42747d:	pop    rsi
  42747e:	pop    rdi
  42747f:	pop    rbp
  427480:	pop    r12
  427482:	ret    
  427483:	cmp    BYTE PTR [r12+0x1],0x3a
  427489:	jne    0x4273cf
  42748f:	movzx  eax,BYTE PTR [r12+0x2]
  427495:	cmp    al,0x5c
  427497:	je     0x4274a1
  427499:	cmp    al,0x2f
  42749b:	jne    0x4273cf
  4274a1:	mov    rcx,r12
  4274a4:	call   0x42a390
  4274a9:	test   rax,rax
  4274ac:	mov    rdi,rax
  4274af:	je     0x42754b
  4274b5:	mov    rcx,rdi
  4274b8:	call   0x426d80
  4274bd:	mov    rax,rdi
  4274c0:	add    rsp,0x20
  4274c4:	pop    rbx
  4274c5:	pop    rsi
  4274c6:	pop    rdi
  4274c7:	pop    rbp
  4274c8:	pop    r12
  4274ca:	ret    
  4274cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4274d0:	mov    rsi,rbx
  4274d3:	mov    edx,DWORD PTR [rsi]
  4274d5:	add    rsi,0x4
  4274d9:	lea    eax,[rdx-0x1010101]
  4274df:	not    edx
  4274e1:	and    eax,edx
  4274e3:	and    eax,0x80808080
  4274e8:	je     0x4274d3
  4274ea:	mov    edx,eax
  4274ec:	mov    rcx,r12
  4274ef:	shr    edx,0x10
  4274f2:	test   eax,0x8080
  4274f7:	cmove  eax,edx
  4274fa:	lea    rdx,[rsi+0x2]
  4274fe:	cmove  rsi,rdx
  427502:	add    al,al
  427504:	sbb    rsi,0x3
  427508:	sub    rsi,rbx
  42750b:	call   0x42a400
  427510:	lea    rcx,[rsi+rax*1+0x2]
  427515:	call   0x42a4a0
  42751a:	test   rax,rax
  42751d:	mov    rdi,rax
  427520:	je     0x427566
  427522:	lea    rdx,[rip+0x2c80c]        # 0x453d35
  427529:	mov    r9,r12
  42752c:	mov    r8,rbx
  42752f:	mov    rcx,rax
  427532:	call   0x426260
  427537:	mov    rcx,rbx
  42753a:	call   0x42a4e8
  42753f:	jmp    0x4274b5
  427544:	xor    edi,edi
  427546:	jmp    0x427475
  42754b:	call   QWORD PTR [rip+0x35663]        # 0x45cbb4
  427551:	lea    rdx,[rip+0x2c7a1]        # 0x453cf9
  427558:	lea    rcx,[rax+0x60]
  42755c:	call   0x426370
  427561:	jmp    0x427475
  427566:	mov    rcx,rbx
  427569:	call   0x42a4e8
  42756e:	call   QWORD PTR [rip+0x35640]        # 0x45cbb4
  427574:	lea    rdx,[rip+0x2c77e]        # 0x453cf9
  42757b:	lea    rcx,[rax+0x60]
  42757f:	call   0x426370
  427584:	jmp    0x427475
  427589:	nop    DWORD PTR [rax+0x0]
  427590:	mov    r8,rcx
  427593:	mov    rcx,rdx
  427596:	lea    rdx,[rip+0x2c7a3]        # 0x453d40
  42759d:	jmp    0x426f60
  4275a2:	nop    DWORD PTR [rax+0x0]
  4275a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275b0:	mov    r8,rcx
  4275b3:	mov    rcx,rdx
  4275b6:	lea    rdx,[rip+0x2c7d3]        # 0x453d90
  4275bd:	jmp    0x426f60
  4275c2:	nop    DWORD PTR [rax+0x0]
  4275c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275d0:	mov    r8,rcx
  4275d3:	mov    rcx,rdx
  4275d6:	lea    rdx,[rip+0x2c803]        # 0x453de0
  4275dd:	jmp    0x426f60
  4275e2:	nop    DWORD PTR [rax+0x0]
  4275e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275f0:	mov    r8,rcx
  4275f3:	mov    rcx,rdx
  4275f6:	lea    rdx,[rip+0x2c82b]        # 0x453e28
  4275fd:	jmp    0x426f60
  427602:	nop    DWORD PTR [rax+0x0]
  427606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427610:	mov    r8,rcx
  427613:	mov    rcx,rdx
  427616:	lea    rdx,[rip+0x2c85b]        # 0x453e78
  42761d:	jmp    0x426f60
  427622:	nop    DWORD PTR [rax+0x0]
  427626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427630:	mov    r8,rcx
  427633:	mov    rcx,rdx
  427636:	lea    rdx,[rip+0x2c893]        # 0x453ed0
  42763d:	jmp    0x426f60
  427642:	nop    DWORD PTR [rax+0x0]
  427646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427650:	mov    r8,rcx
  427653:	mov    rcx,rdx
  427656:	lea    rdx,[rip+0x2c8b3]        # 0x453f10
  42765d:	jmp    0x426f60
  427662:	nop    DWORD PTR [rax+0x0]
  427666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427670:	mov    r8,rcx
  427673:	mov    rcx,rdx
  427676:	lea    rdx,[rip+0x2c8e3]        # 0x453f60
  42767d:	jmp    0x426f60
  427682:	nop    DWORD PTR [rax+0x0]
  427686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427690:	mov    r8,rcx
  427693:	mov    rcx,rdx
  427696:	lea    rdx,[rip+0x2c913]        # 0x453fb0
  42769d:	jmp    0x426f60
  4276a2:	nop    DWORD PTR [rax+0x0]
  4276a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276b0:	mov    r8,rcx
  4276b3:	mov    rcx,rdx
  4276b6:	lea    rdx,[rip+0x2c8f3]        # 0x453fb0
  4276bd:	jmp    0x426f60
  4276c2:	nop    DWORD PTR [rax+0x0]
  4276c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276d0:	mov    r8,rcx
  4276d3:	mov    rcx,rdx
  4276d6:	lea    rdx,[rip+0x2c92b]        # 0x454008
  4276dd:	jmp    0x426f60
  4276e2:	nop    DWORD PTR [rax+0x0]
  4276e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276f0:	push   rbx
  4276f1:	sub    rsp,0x20
  4276f5:	mov    rbx,rcx
  4276f8:	lea    rcx,[rip+0x2c94f]        # 0x45404e
  4276ff:	call   0x42a4d0
  427704:	mov    r9,rax
  427707:	xor    eax,eax
  427709:	test   r9,r9
  42770c:	je     0x427727
  42770e:	lea    r8,[rip+0x2c941]        # 0x454056
  427715:	mov    edx,0x400
  42771a:	mov    rcx,rbx
  42771d:	call   0x426220
  427722:	mov    eax,0x1
  427727:	add    rsp,0x20
  42772b:	pop    rbx
  42772c:	ret    
  42772d:	nop    DWORD PTR [rax]
  427730:	jmp    0x426af0
  427735:	nop
  427736:	nop
  427737:	nop
  427738:	nop
  427739:	nop
  42773a:	nop
  42773b:	nop
  42773c:	nop
  42773d:	nop
  42773e:	nop
  42773f:	nop
  427740:	test   ecx,ecx
  427742:	mov    eax,ecx
  427744:	jle    0x427780
  427746:	cmp    eax,0x1f3
  42774b:	mov    ecx,0x1
  427750:	jle    0x427770
  427752:	lea    r8d,[rax+0x1f4]
  427759:	mov    edx,0x10624dd3
  42775e:	mov    eax,r8d
  427761:	imul   edx
  427763:	mov    eax,r8d
  427766:	sar    eax,0x1f
  427769:	sar    edx,0x6
  42776c:	mov    ecx,edx
  42776e:	sub    ecx,eax
  427770:	mov    rax,QWORD PTR [rip+0x353cd]        # 0x45cb44
  427777:	xor    edx,edx
  427779:	rex.W jmp rax
  42777c:	nop    DWORD PTR [rax+0x0]
  427780:	repz ret 
  427782:	nop
  427783:	nop
  427784:	nop
  427785:	nop
  427786:	nop
  427787:	nop
  427788:	nop
  427789:	nop
  42778a:	nop
  42778b:	nop
  42778c:	nop
  42778d:	nop
  42778e:	nop
  42778f:	nop
  427790:	push   r15
  427792:	push   r14
  427794:	push   r13
  427796:	push   r12
  427798:	push   rbp
  427799:	push   rdi
  42779a:	push   rsi
  42779b:	push   rbx
  42779c:	sub    rsp,0x28
  4277a0:	mov    r13,QWORD PTR [rip+0x3556d]        # 0x45cd14
  4277a7:	mov    r14,QWORD PTR [rip+0x3565e]        # 0x45ce0c
  4277ae:	mov    r12,rcx
  4277b1:	mov    r15,rdx
  4277b4:	jmp    0x4277d7
  4277b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277c0:	add    ebx,0x20
  4277c3:	lea    eax,[rsi-0x41]
  4277c6:	cmp    al,0x19
  4277c8:	ja     0x427820
  4277ca:	lea    edi,[rsi+0x20]
  4277cd:	cmp    bl,dil
  4277d0:	jne    0x427840
  4277d2:	test   dil,dil
  4277d5:	je     0x427850
  4277d7:	add    r12,0x1
  4277db:	add    r15,0x1
  4277df:	movzx  esi,BYTE PTR [r15-0x1]
  4277e4:	movzx  ebx,BYTE PTR [r12-0x1]
  4277ea:	mov    edi,esi
  4277ec:	cmp    bl,sil
  4277ef:	je     0x4277d2
  4277f1:	lea    eax,[rbx-0x41]
  4277f4:	cmp    al,0x19
  4277f6:	jbe    0x4277c0
  4277f8:	test   bl,bl
  4277fa:	jns    0x4277c3
  4277fc:	movzx  ebp,bl
  4277ff:	mov    ecx,ebp
  427801:	call   r13
  427804:	test   eax,eax
  427806:	je     0x4277c3
  427808:	mov    ecx,ebp
  42780a:	call   r14
  42780d:	mov    ebx,eax
  42780f:	lea    eax,[rsi-0x41]
  427812:	cmp    al,0x19
  427814:	jbe    0x4277ca
  427816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427820:	test   sil,sil
  427823:	jns    0x4277cd
  427825:	mov    ecx,esi
  427827:	call   QWORD PTR [rip+0x354e7]        # 0x45cd14
  42782d:	test   eax,eax
  42782f:	je     0x4277cd
  427831:	mov    ecx,esi
  427833:	call   QWORD PTR [rip+0x355d3]        # 0x45ce0c
  427839:	mov    edi,eax
  42783b:	cmp    bl,dil
  42783e:	je     0x4277d2
  427840:	movzx  eax,bl
  427843:	movzx  edi,dil
  427847:	sub    eax,edi
  427849:	jmp    0x427852
  42784b:	nop    DWORD PTR [rax+rax*1+0x0]
  427850:	xor    eax,eax
  427852:	add    rsp,0x28
  427856:	pop    rbx
  427857:	pop    rsi
  427858:	pop    rdi
  427859:	pop    rbp
  42785a:	pop    r12
  42785c:	pop    r13
  42785e:	pop    r14
  427860:	pop    r15
  427862:	ret    
  427863:	nop    DWORD PTR [rax]
  427866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427870:	push   r15
  427872:	push   r14
  427874:	push   r13
  427876:	push   r12
  427878:	push   rbp
  427879:	push   rdi
  42787a:	push   rsi
  42787b:	push   rbx
  42787c:	sub    rsp,0x38
  427880:	mov    rax,QWORD PTR [rip+0x35585]        # 0x45ce0c
  427887:	mov    r13,QWORD PTR [rip+0x35486]        # 0x45cd14
  42788e:	mov    rbp,rcx
  427891:	mov    rdi,rdx
  427894:	lea    r12,[rdx+r8*1]
  427898:	mov    QWORD PTR [rsp+0x28],rax
  42789d:	jmp    0x4278b8
  42789f:	nop
  4278a0:	add    ebx,0x20
  4278a3:	lea    eax,[rsi-0x41]
  4278a6:	cmp    al,0x19
  4278a8:	ja     0x427901
  4278aa:	lea    r15d,[rsi+0x20]
  4278ae:	cmp    bl,r15b
  4278b1:	jne    0x427922
  4278b3:	test   r15b,r15b
  4278b6:	je     0x427930
  4278b8:	cmp    rdi,r12
  4278bb:	je     0x427930
  4278bd:	add    rbp,0x1
  4278c1:	add    rdi,0x1
  4278c5:	movzx  esi,BYTE PTR [rdi-0x1]
  4278c9:	movzx  ebx,BYTE PTR [rbp-0x1]
  4278cd:	mov    r15d,esi
  4278d0:	cmp    bl,sil
  4278d3:	je     0x4278b3
  4278d5:	lea    eax,[rbx-0x41]
  4278d8:	cmp    al,0x19
  4278da:	jbe    0x4278a0
  4278dc:	test   bl,bl
  4278de:	jns    0x4278a3
  4278e0:	movzx  r14d,bl
  4278e4:	mov    ecx,r14d
  4278e7:	call   r13
  4278ea:	test   eax,eax
  4278ec:	je     0x4278a3
  4278ee:	mov    ecx,r14d
  4278f1:	mov    rax,QWORD PTR [rsp+0x28]
  4278f6:	call   rax
  4278f8:	mov    ebx,eax
  4278fa:	lea    eax,[rsi-0x41]
  4278fd:	cmp    al,0x19
  4278ff:	jbe    0x4278aa
  427901:	test   sil,sil
  427904:	jns    0x4278ae
  427906:	mov    ecx,esi
  427908:	call   QWORD PTR [rip+0x35406]        # 0x45cd14
  42790e:	test   eax,eax
  427910:	je     0x4278ae
  427912:	mov    ecx,esi
  427914:	call   QWORD PTR [rip+0x354f2]        # 0x45ce0c
  42791a:	mov    r15d,eax
  42791d:	cmp    bl,r15b
  427920:	je     0x4278b3
  427922:	movzx  ebx,bl
  427925:	movzx  r15d,r15b
  427929:	mov    eax,ebx
  42792b:	sub    eax,r15d
  42792e:	jmp    0x427932
  427930:	xor    eax,eax
  427932:	add    rsp,0x38
  427936:	pop    rbx
  427937:	pop    rsi
  427938:	pop    rdi
  427939:	pop    rbp
  42793a:	pop    r12
  42793c:	pop    r13
  42793e:	pop    r14
  427940:	pop    r15
  427942:	ret    
  427943:	nop    DWORD PTR [rax]
  427946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427950:	push   rsi
  427951:	push   rbx
  427952:	sub    rsp,0x28
  427956:	lea    eax,[rcx-0x61]
  427959:	mov    esi,ecx
  42795b:	cmp    al,0x19
  42795d:	jbe    0x427992
  42795f:	test   cl,cl
  427961:	js     0x427970
  427963:	mov    eax,esi
  427965:	add    rsp,0x28
  427969:	pop    rbx
  42796a:	pop    rsi
  42796b:	ret    
  42796c:	nop    DWORD PTR [rax+0x0]
  427970:	movzx  ebx,cl
  427973:	mov    ecx,ebx
  427975:	call   QWORD PTR [rip+0x35389]        # 0x45cd04
  42797b:	test   eax,eax
  42797d:	je     0x427963
  42797f:	mov    ecx,ebx
  427981:	call   QWORD PTR [rip+0x3548d]        # 0x45ce14
  427987:	mov    esi,eax
  427989:	mov    eax,esi
  42798b:	add    rsp,0x28
  42798f:	pop    rbx
  427990:	pop    rsi
  427991:	ret    
  427992:	lea    esi,[rcx-0x20]
  427995:	mov    eax,esi
  427997:	add    rsp,0x28
  42799b:	pop    rbx
  42799c:	pop    rsi
  42799d:	ret    
  42799e:	xchg   ax,ax
  4279a0:	push   rsi
  4279a1:	push   rbx
  4279a2:	sub    rsp,0x28
  4279a6:	lea    eax,[rcx-0x41]
  4279a9:	mov    esi,ecx
  4279ab:	cmp    al,0x19
  4279ad:	jbe    0x4279e2
  4279af:	test   cl,cl
  4279b1:	js     0x4279c0
  4279b3:	mov    eax,esi
  4279b5:	add    rsp,0x28
  4279b9:	pop    rbx
  4279ba:	pop    rsi
  4279bb:	ret    
  4279bc:	nop    DWORD PTR [rax+0x0]
  4279c0:	movzx  ebx,cl
  4279c3:	mov    ecx,ebx
  4279c5:	call   QWORD PTR [rip+0x35349]        # 0x45cd14
  4279cb:	test   eax,eax
  4279cd:	je     0x4279b3
  4279cf:	mov    ecx,ebx
  4279d1:	call   QWORD PTR [rip+0x35435]        # 0x45ce0c
  4279d7:	mov    esi,eax
  4279d9:	mov    eax,esi
  4279db:	add    rsp,0x28
  4279df:	pop    rbx
  4279e0:	pop    rsi
  4279e1:	ret    
  4279e2:	lea    esi,[rcx+0x20]
  4279e5:	mov    eax,esi
  4279e7:	add    rsp,0x28
  4279eb:	pop    rbx
  4279ec:	pop    rsi
  4279ed:	ret    
  4279ee:	xchg   ax,ax
  4279f0:	lea    edx,[rcx-0x61]
  4279f3:	mov    eax,ecx
  4279f5:	sub    ecx,0x20
  4279f8:	cmp    dl,0x19
  4279fb:	cmovbe eax,ecx
  4279fe:	ret    
  4279ff:	nop
  427a00:	lea    edx,[rcx-0x41]
  427a03:	lea    eax,[rcx+0x20]
  427a06:	cmp    dl,0x19
  427a09:	cmova  eax,ecx
  427a0c:	ret    
  427a0d:	nop
  427a0e:	nop
  427a0f:	nop
  427a10:	push   r15
  427a12:	push   r14
  427a14:	push   r13
  427a16:	push   r12
  427a18:	push   rbp
  427a19:	push   rdi
  427a1a:	push   rsi
  427a1b:	push   rbx
  427a1c:	sub    rsp,0xb8
  427a23:	lea    r13d,[rdx+0x1]
  427a27:	mov    r15,rcx
  427a2a:	mov    r14d,r8d
  427a2d:	movsxd rcx,r13d
  427a30:	call   0x42a4a0
  427a35:	test   rax,rax
  427a38:	mov    rbp,rax
  427a3b:	je     0x427cb9
  427a41:	lea    rdx,[rip+0x2c628]        # 0x454070
  427a48:	lea    rcx,[rip+0x2c623]        # 0x454072
  427a4f:	call   0x42a510
  427a54:	lea    rdx,[rip+0x2c61e]        # 0x454079
  427a5b:	lea    rcx,[rip+0x2c61a]        # 0x45407c
  427a62:	mov    rbx,rax
  427a65:	call   0x42a510
  427a6a:	test   rax,rax
  427a6d:	mov    r12,rax
  427a70:	je     0x427a7b
  427a72:	test   rbx,rbx
  427a75:	jne    0x427be2
  427a7b:	test   rbx,rbx
  427a7e:	je     0x427a88
  427a80:	mov    rcx,rbx
  427a83:	call   0x42a538
  427a88:	test   r12,r12
  427a8b:	je     0x427a95
  427a8d:	mov    rcx,r12
  427a90:	call   0x42a538
  427a95:	mov    rsi,QWORD PTR [rip+0x35118]        # 0x45cbb4
  427a9c:	call   rsi
  427a9e:	mov    rbx,rax
  427aa1:	call   rsi
  427aa3:	lea    r12,[rax+0x60]
  427aa7:	xor    edi,edi
  427aa9:	test   r14b,r14b
  427aac:	mov    QWORD PTR [rsp+0x28],0x0
  427ab5:	je     0x427c64
  427abb:	test   r15,r15
  427abe:	je     0x427ad3
  427ac0:	mov    rcx,r15
  427ac3:	mov    rdx,r12
  427ac6:	call   0x42a4f8
  427acb:	mov    rcx,r12
  427ace:	call   0x42a520
  427ad3:	mov    r8,rbx
  427ad6:	mov    edx,r13d
  427ad9:	mov    rcx,rbp
  427adc:	call   0x42a518
  427ae1:	test   rax,rax
  427ae4:	je     0x427cb0
  427aea:	mov    rdx,rbp
  427aed:	mov    ecx,DWORD PTR [rdx]
  427aef:	add    rdx,0x4
  427af3:	lea    eax,[rcx-0x1010101]
  427af9:	not    ecx
  427afb:	and    eax,ecx
  427afd:	and    eax,0x80808080
  427b02:	je     0x427aed
  427b04:	mov    ecx,eax
  427b06:	shr    ecx,0x10
  427b09:	test   eax,0x8080
  427b0e:	cmove  eax,ecx
  427b11:	lea    rcx,[rdx+0x2]
  427b15:	cmove  rdx,rcx
  427b19:	add    al,al
  427b1b:	sbb    rdx,0x3
  427b1f:	sub    rdx,rbp
  427b22:	test   edx,edx
  427b24:	jle    0x427bab
  427b2a:	movsxd rdx,edx
  427b2d:	lea    r13,[rsp+0x30]
  427b32:	lea    r15,[rbp+rdx*1-0x1]
  427b37:	cmp    BYTE PTR [r15],0xa
  427b3b:	jne    0x427b8c
  427b3d:	jmp    0x427ca2
  427b42:	mov    rax,r13
  427b45:	mov    ecx,DWORD PTR [rax]
  427b47:	add    rax,0x4
  427b4b:	lea    edx,[rcx-0x1010101]
  427b51:	not    ecx
  427b53:	and    edx,ecx
  427b55:	and    edx,0x80808080
  427b5b:	je     0x427b45
  427b5d:	mov    ecx,edx
  427b5f:	shr    ecx,0x10
  427b62:	test   edx,0x8080
  427b68:	cmove  edx,ecx
  427b6b:	lea    rcx,[rax+0x2]
  427b6f:	cmove  rax,rcx
  427b73:	add    dl,dl
  427b75:	sbb    rax,0x3
  427b79:	sub    rax,r13
  427b7c:	test   eax,eax
  427b7e:	jle    0x427ba1
  427b80:	sub    eax,0x1
  427b83:	cdqe   
  427b85:	cmp    BYTE PTR [rsp+rax*1+0x30],0xa
  427b8a:	je     0x427ba1
  427b8c:	mov    r8,rbx
  427b8f:	mov    edx,0x80
  427b94:	mov    rcx,r13
  427b97:	call   0x42a518
  427b9c:	test   rax,rax
  427b9f:	jne    0x427b42
  427ba1:	cmp    BYTE PTR [r15],0xa
  427ba5:	je     0x427ca2
  427bab:	test   r14b,r14b
  427bae:	je     0x427c35
  427bb4:	call   rsi
  427bb6:	cmp    rax,rbx
  427bb9:	je     0x427bcb
  427bbb:	mov    rcx,rbx
  427bbe:	call   0x42a538
  427bc3:	mov    rcx,r12
  427bc6:	call   0x42a538
  427bcb:	mov    rax,rbp
  427bce:	add    rsp,0xb8
  427bd5:	pop    rbx
  427bd6:	pop    rsi
  427bd7:	pop    rdi
  427bd8:	pop    rbp
  427bd9:	pop    r12
  427bdb:	pop    r13
  427bdd:	pop    r14
  427bdf:	pop    r15
  427be1:	ret    
  427be2:	lea    rcx,[rip+0x2c49b]        # 0x454084
  427be9:	call   0x42a4d0
  427bee:	test   rax,rax
  427bf1:	mov    rsi,QWORD PTR [rip+0x34fbc]        # 0x45cbb4
  427bf8:	je     0x427aa7
  427bfe:	lea    rcx,[rip+0x2c47f]        # 0x454084
  427c05:	lea    rdi,[rip+0x2c47f]        # 0x45408b
  427c0c:	call   0x42a4d0
  427c11:	mov    ecx,0x5
  427c16:	mov    rsi,rax
  427c19:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427c1b:	mov    rsi,QWORD PTR [rip+0x34f92]        # 0x45cbb4
  427c22:	seta   dl
  427c25:	setb   al
  427c28:	cmp    dl,al
  427c2a:	jne    0x427aa7
  427c30:	jmp    0x427a80
  427c35:	mov    edx,DWORD PTR [rdi]
  427c37:	mov    rcx,QWORD PTR [rsp+0x28]
  427c3c:	call   QWORD PTR [rip+0x34ee2]        # 0x45cb24
  427c42:	mov    rdx,r12
  427c45:	mov    ecx,0xa
  427c4a:	call   0x42a500
  427c4f:	mov    rcx,r12
  427c52:	call   0x42a520
  427c57:	mov    rcx,rdi
  427c5a:	call   0x42a4e8
  427c5f:	jmp    0x427bb4
  427c64:	mov    ecx,0x4
  427c69:	call   0x42a4a0
  427c6e:	mov    rdi,rax
  427c71:	mov    ecx,0xfffffff6
  427c76:	call   QWORD PTR [rip+0x34e10]        # 0x45ca8c
  427c7c:	mov    rdx,rdi
  427c7f:	mov    QWORD PTR [rsp+0x28],rax
  427c84:	mov    rcx,rax
  427c87:	call   QWORD PTR [rip+0x34dbf]        # 0x45ca4c
  427c8d:	mov    edx,0x3
  427c92:	mov    rcx,QWORD PTR [rsp+0x28]
  427c97:	call   QWORD PTR [rip+0x34e87]        # 0x45cb24
  427c9d:	jmp    0x427abb
  427ca2:	mov    BYTE PTR [r15],0x0
  427ca6:	jmp    0x427bab
  427cab:	nop    DWORD PTR [rax+rax*1+0x0]
  427cb0:	mov    BYTE PTR [rbp+0x0],0x0
  427cb4:	jmp    0x427aea
  427cb9:	xor    ebp,ebp
  427cbb:	jmp    0x427bcb
  427cc0:	push   rbx
  427cc1:	sub    rsp,0x20
  427cc5:	test   ecx,ecx
  427cc7:	mov    ebx,ecx
  427cc9:	je     0x427d40
  427ccb:	cmp    ecx,0x1
  427cce:	lea    rdx,[rip+0x2c433]        # 0x454108
  427cd5:	mov    eax,0x1
  427cda:	jne    0x427cec
  427cdc:	jmp    0x427d52
  427cde:	xchg   ax,ax
  427ce0:	add    eax,0x1
  427ce3:	add    rdx,0x8
  427ce7:	cmp    eax,0x2e
  427cea:	je     0x427d10
  427cec:	cmp    DWORD PTR [rdx],ebx
  427cee:	jne    0x427ce0
  427cf0:	lea    rdx,[rip+0x2c409]        # 0x454100
  427cf7:	cdqe   
  427cf9:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
  427cfd:	call   QWORD PTR [rip+0x34ee9]        # 0x45cbec
  427d03:	mov    DWORD PTR [rax],ebx
  427d05:	add    rsp,0x20
  427d09:	pop    rbx
  427d0a:	ret    
  427d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d10:	call   QWORD PTR [rip+0x34e9e]        # 0x45cbb4
  427d16:	lea    rdx,[rip+0x2c3a3]        # 0x4540c0
  427d1d:	lea    rcx,[rax+0x60]
  427d21:	mov    r8d,ebx
  427d24:	call   0x426370
  427d29:	call   QWORD PTR [rip+0x34ebd]        # 0x45cbec
  427d2f:	mov    DWORD PTR [rax],0x16
  427d35:	add    rsp,0x20
  427d39:	pop    rbx
  427d3a:	ret    
  427d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d40:	call   QWORD PTR [rip+0x34ea6]        # 0x45cbec
  427d46:	mov    DWORD PTR [rax],0x0
  427d4c:	add    rsp,0x20
  427d50:	pop    rbx
  427d51:	ret    
  427d52:	xor    eax,eax
  427d54:	jmp    0x427cf0
  427d56:	nop
  427d57:	nop
  427d58:	nop
  427d59:	nop
  427d5a:	nop
  427d5b:	nop
  427d5c:	nop
  427d5d:	nop
  427d5e:	nop
  427d5f:	nop
  427d60:	jmp    QWORD PTR [rip+0x34c26]        # 0x45c98c
  427d66:	nop
  427d67:	nop
  427d68:	jmp    QWORD PTR [rip+0x34c16]        # 0x45c984
  427d6e:	nop
  427d6f:	nop
  427d70:	jmp    QWORD PTR [rip+0x34c06]        # 0x45c97c
  427d76:	nop
  427d77:	nop
  427d78:	jmp    QWORD PTR [rip+0x34bf6]        # 0x45c974
  427d7e:	nop
  427d7f:	nop
  427d80:	jmp    QWORD PTR [rip+0x34be6]        # 0x45c96c
  427d86:	nop
  427d87:	nop
  427d88:	jmp    QWORD PTR [rip+0x34bd6]        # 0x45c964
  427d8e:	nop
  427d8f:	nop
  427d90:	jmp    QWORD PTR [rip+0x34bc6]        # 0x45c95c
  427d96:	nop
  427d97:	nop
  427d98:	jmp    QWORD PTR [rip+0x34bb6]        # 0x45c954
  427d9e:	nop
  427d9f:	nop
  427da0:	jmp    QWORD PTR [rip+0x34ba6]        # 0x45c94c
  427da6:	nop
  427da7:	nop
  427da8:	jmp    QWORD PTR [rip+0x34b96]        # 0x45c944
  427dae:	nop
  427daf:	nop
  427db0:	jmp    QWORD PTR [rip+0x34b86]        # 0x45c93c
  427db6:	nop
  427db7:	nop
  427db8:	jmp    QWORD PTR [rip+0x34b76]        # 0x45c934
  427dbe:	nop
  427dbf:	nop
  427dc0:	jmp    QWORD PTR [rip+0x34b66]        # 0x45c92c
  427dc6:	nop
  427dc7:	nop
  427dc8:	jmp    QWORD PTR [rip+0x34b56]        # 0x45c924
  427dce:	nop
  427dcf:	nop
  427dd0:	jmp    QWORD PTR [rip+0x34b46]        # 0x45c91c
  427dd6:	nop
  427dd7:	nop
  427dd8:	jmp    QWORD PTR [rip+0x34b36]        # 0x45c914
  427dde:	nop
  427ddf:	nop
  427de0:	jmp    QWORD PTR [rip+0x34b26]        # 0x45c90c
  427de6:	nop
  427de7:	nop
  427de8:	jmp    QWORD PTR [rip+0x34b16]        # 0x45c904
  427dee:	nop
  427def:	nop
  427df0:	jmp    QWORD PTR [rip+0x34b06]        # 0x45c8fc
  427df6:	nop
  427df7:	nop
  427df8:	jmp    QWORD PTR [rip+0x34af6]        # 0x45c8f4
  427dfe:	nop
  427dff:	nop
  427e00:	jmp    QWORD PTR [rip+0x34ae6]        # 0x45c8ec
  427e06:	nop
  427e07:	nop
  427e08:	jmp    QWORD PTR [rip+0x34ad6]        # 0x45c8e4
  427e0e:	nop
  427e0f:	nop
  427e10:	jmp    QWORD PTR [rip+0x34ac6]        # 0x45c8dc
  427e16:	nop
  427e17:	nop
  427e18:	jmp    QWORD PTR [rip+0x34ab6]        # 0x45c8d4
  427e1e:	nop
  427e1f:	nop
  427e20:	jmp    QWORD PTR [rip+0x34aa6]        # 0x45c8cc
  427e26:	nop
  427e27:	nop
  427e28:	jmp    QWORD PTR [rip+0x34a96]        # 0x45c8c4
  427e2e:	nop
  427e2f:	nop
  427e30:	jmp    QWORD PTR [rip+0x34a86]        # 0x45c8bc
  427e36:	nop
  427e37:	nop
  427e38:	jmp    QWORD PTR [rip+0x34a76]        # 0x45c8b4
  427e3e:	nop
  427e3f:	nop
  427e40:	jmp    QWORD PTR [rip+0x34a66]        # 0x45c8ac
  427e46:	nop
  427e47:	nop
  427e48:	jmp    QWORD PTR [rip+0x34a56]        # 0x45c8a4
  427e4e:	nop
  427e4f:	nop
  427e50:	jmp    QWORD PTR [rip+0x34a46]        # 0x45c89c
  427e56:	nop
  427e57:	nop
  427e58:	jmp    QWORD PTR [rip+0x34a36]        # 0x45c894
  427e5e:	nop
  427e5f:	nop
  427e60:	jmp    QWORD PTR [rip+0x34a26]        # 0x45c88c
  427e66:	nop
  427e67:	nop
  427e68:	jmp    QWORD PTR [rip+0x34a16]        # 0x45c884
  427e6e:	nop
  427e6f:	nop
  427e70:	jmp    QWORD PTR [rip+0x34a06]        # 0x45c87c
  427e76:	nop
  427e77:	nop
  427e78:	jmp    QWORD PTR [rip+0x349f6]        # 0x45c874
  427e7e:	nop
  427e7f:	nop
  427e80:	jmp    QWORD PTR [rip+0x349e6]        # 0x45c86c
  427e86:	nop
  427e87:	nop
  427e88:	jmp    QWORD PTR [rip+0x349d6]        # 0x45c864
  427e8e:	nop
  427e8f:	nop
  427e90:	jmp    QWORD PTR [rip+0x349c6]        # 0x45c85c
  427e96:	nop
  427e97:	nop
  427e98:	jmp    QWORD PTR [rip+0x349b6]        # 0x45c854
  427e9e:	nop
  427e9f:	nop
  427ea0:	jmp    QWORD PTR [rip+0x349a6]        # 0x45c84c
  427ea6:	nop
  427ea7:	nop
  427ea8:	jmp    QWORD PTR [rip+0x34996]        # 0x45c844
  427eae:	nop
  427eaf:	nop
  427eb0:	jmp    QWORD PTR [rip+0x34986]        # 0x45c83c
  427eb6:	nop
  427eb7:	nop
  427eb8:	jmp    QWORD PTR [rip+0x34976]        # 0x45c834
  427ebe:	nop
  427ebf:	nop
  427ec0:	jmp    QWORD PTR [rip+0x34966]        # 0x45c82c
  427ec6:	nop
  427ec7:	nop
  427ec8:	jmp    QWORD PTR [rip+0x34956]        # 0x45c824
  427ece:	nop
  427ecf:	nop
  427ed0:	jmp    QWORD PTR [rip+0x34946]        # 0x45c81c
  427ed6:	nop
  427ed7:	nop
  427ed8:	jmp    QWORD PTR [rip+0x34936]        # 0x45c814
  427ede:	nop
  427edf:	nop
  427ee0:	jmp    QWORD PTR [rip+0x34926]        # 0x45c80c
  427ee6:	nop
  427ee7:	nop
  427ee8:	jmp    QWORD PTR [rip+0x34916]        # 0x45c804
  427eee:	nop
  427eef:	nop
  427ef0:	jmp    QWORD PTR [rip+0x34906]        # 0x45c7fc
  427ef6:	nop
  427ef7:	nop
  427ef8:	jmp    QWORD PTR [rip+0x348f6]        # 0x45c7f4
  427efe:	nop
  427eff:	nop
  427f00:	jmp    QWORD PTR [rip+0x348e6]        # 0x45c7ec
  427f06:	nop
  427f07:	nop
  427f08:	jmp    QWORD PTR [rip+0x348d6]        # 0x45c7e4
  427f0e:	nop
  427f0f:	nop
  427f10:	jmp    QWORD PTR [rip+0x348c6]        # 0x45c7dc
  427f16:	nop
  427f17:	nop
  427f18:	jmp    QWORD PTR [rip+0x348b6]        # 0x45c7d4
  427f1e:	nop
  427f1f:	nop
  427f20:	jmp    QWORD PTR [rip+0x348a6]        # 0x45c7cc
  427f26:	nop
  427f27:	nop
  427f28:	jmp    QWORD PTR [rip+0x34896]        # 0x45c7c4
  427f2e:	nop
  427f2f:	nop
  427f30:	jmp    QWORD PTR [rip+0x34886]        # 0x45c7bc
  427f36:	nop
  427f37:	nop
  427f38:	jmp    QWORD PTR [rip+0x34876]        # 0x45c7b4
  427f3e:	nop
  427f3f:	nop
  427f40:	jmp    QWORD PTR [rip+0x34866]        # 0x45c7ac
  427f46:	nop
  427f47:	nop
  427f48:	jmp    QWORD PTR [rip+0x34856]        # 0x45c7a4
  427f4e:	nop
  427f4f:	nop
  427f50:	jmp    QWORD PTR [rip+0x34846]        # 0x45c79c
  427f56:	nop
  427f57:	nop
  427f58:	jmp    QWORD PTR [rip+0x34836]        # 0x45c794
  427f5e:	nop
  427f5f:	nop
  427f60:	jmp    QWORD PTR [rip+0x34826]        # 0x45c78c
  427f66:	nop
  427f67:	nop
  427f68:	jmp    QWORD PTR [rip+0x34816]        # 0x45c784
  427f6e:	nop
  427f6f:	nop
  427f70:	jmp    QWORD PTR [rip+0x34806]        # 0x45c77c
  427f76:	nop
  427f77:	nop
  427f78:	jmp    QWORD PTR [rip+0x347f6]        # 0x45c774
  427f7e:	nop
  427f7f:	nop
  427f80:	push   rbx
  427f81:	sub    rsp,0x30
  427f85:	mov    rbx,rcx
  427f88:	mov    rcx,QWORD PTR [rip+0x33249]        # 0x45b1d8
  427f8f:	call   0x428530
  427f94:	cmp    rax,0xffffffffffffffff
  427f98:	mov    QWORD PTR [rsp+0x20],rax
  427f9d:	je     0x428015
  427f9f:	mov    ecx,0x8
  427fa4:	call   0x42a5b0
  427fa9:	mov    rcx,QWORD PTR [rip+0x33228]        # 0x45b1d8
  427fb0:	call   0x428530
  427fb5:	mov    rcx,QWORD PTR [rip+0x33224]        # 0x45b1e0
  427fbc:	mov    QWORD PTR [rsp+0x20],rax
  427fc1:	call   0x428530
  427fc6:	lea    rdx,[rsp+0x20]
  427fcb:	lea    r8,[rsp+0x28]
  427fd0:	mov    rcx,rbx
  427fd3:	mov    QWORD PTR [rsp+0x28],rax
  427fd8:	call   0x42a610
  427fdd:	mov    rcx,QWORD PTR [rsp+0x20]
  427fe2:	mov    rbx,rax
  427fe5:	call   0x428540
  427fea:	mov    rcx,QWORD PTR [rsp+0x28]
  427fef:	mov    QWORD PTR [rip+0x331e2],rax        # 0x45b1d8
  427ff6:	call   0x428540
  427ffb:	mov    ecx,0x8
  428000:	mov    QWORD PTR [rip+0x331d9],rax        # 0x45b1e0
  428007:	call   0x42a578
  42800c:	mov    rax,rbx
  42800f:	add    rsp,0x30
  428013:	pop    rbx
  428014:	ret    
  428015:	mov    rax,QWORD PTR [rip+0x2c704]        # 0x454720
  42801c:	mov    rcx,rbx
  42801f:	call   QWORD PTR [rax]
  428021:	add    rsp,0x30
  428025:	pop    rbx
  428026:	ret    
  428027:	nop    WORD PTR [rax+rax*1+0x0]
  428030:	sub    rsp,0x28
  428034:	call   0x427f80
  428039:	test   rax,rax
  42803c:	sete   al
  42803f:	movzx  eax,al
  428042:	neg    eax
  428044:	add    rsp,0x28
  428048:	ret    
  428049:	nop
  42804a:	nop
  42804b:	nop
  42804c:	nop
  42804d:	nop
  42804e:	nop
  42804f:	nop
  428050:	sub    rsp,0x28
  428054:	mov    rax,QWORD PTR [rip+0x44a5]        # 0x42c500
  42805b:	mov    rax,QWORD PTR [rax]
  42805e:	test   rax,rax
  428061:	je     0x428080
  428063:	call   rax
  428065:	mov    rax,QWORD PTR [rip+0x4494]        # 0x42c500
  42806c:	lea    rdx,[rax+0x8]
  428070:	mov    rax,QWORD PTR [rax+0x8]
  428074:	mov    QWORD PTR [rip+0x4485],rdx        # 0x42c500
  42807b:	test   rax,rax
  42807e:	jne    0x428063
  428080:	add    rsp,0x28
  428084:	ret    
  428085:	nop
  428086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428090:	push   rsi
  428091:	push   rbx
  428092:	sub    rsp,0x28
  428096:	mov    rsi,QWORD PTR [rip+0x2c5f3]        # 0x454690
  42809d:	mov    rax,QWORD PTR [rsi]
  4280a0:	cmp    eax,0xffffffff
  4280a3:	mov    ebx,eax
  4280a5:	je     0x4280d0
  4280a7:	test   ebx,ebx
  4280a9:	je     0x4280ba
  4280ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4280b0:	mov    eax,ebx
  4280b2:	call   QWORD PTR [rsi+rax*8]
  4280b5:	sub    ebx,0x1
  4280b8:	jne    0x4280b0
  4280ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x428050
  4280c1:	add    rsp,0x28
  4280c5:	pop    rbx
  4280c6:	pop    rsi
  4280c7:	jmp    0x428030
  4280cc:	nop    DWORD PTR [rax+0x0]
  4280d0:	xor    ebx,ebx
  4280d2:	jmp    0x4280d6
  4280d4:	mov    ebx,eax
  4280d6:	lea    edx,[rbx+0x1]
  4280d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4280de:	mov    rax,rdx
  4280e1:	jne    0x4280d4
  4280e3:	jmp    0x4280a7
  4280e5:	nop
  4280e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280f0:	mov    eax,DWORD PTR [rip+0x3244a]        # 0x45a540
  4280f6:	test   eax,eax
  4280f8:	je     0x428100
  4280fa:	repz ret 
  4280fc:	nop    DWORD PTR [rax+0x0]
  428100:	mov    DWORD PTR [rip+0x32436],0x1        # 0x45a540
  42810a:	jmp    0x428090
  42810c:	nop
  42810d:	nop
  42810e:	nop
  42810f:	nop
  428110:	mov    rax,QWORD PTR [rip+0x34aa5]        # 0x45cbbc
  428117:	rex.W jmp rax
  42811a:	nop
  42811b:	nop
  42811c:	nop
  42811d:	nop
  42811e:	nop
  42811f:	nop
  428120:	xor    eax,eax
  428122:	ret    
  428123:	nop
  428124:	nop
  428125:	nop
  428126:	nop
  428127:	nop
  428128:	nop
  428129:	nop
  42812a:	nop
  42812b:	nop
  42812c:	nop
  42812d:	nop
  42812e:	nop
  42812f:	nop
  428130:	push   r12
  428132:	push   rbp
  428133:	push   rdi
  428134:	push   rsi
  428135:	push   rbx
  428136:	sub    rsp,0x40
  42813a:	mov    rbx,QWORD PTR [rip+0x445f]        # 0x42c5a0
  428141:	movabs rax,0x2b992ddfa232
  42814b:	mov    QWORD PTR [rsp+0x20],0x0
  428154:	cmp    rbx,rax
  428157:	je     0x428170
  428159:	not    rbx
  42815c:	mov    QWORD PTR [rip+0x444d],rbx        # 0x42c5b0
  428163:	add    rsp,0x40
  428167:	pop    rbx
  428168:	pop    rsi
  428169:	pop    rdi
  42816a:	pop    rbp
  42816b:	pop    r12
  42816d:	ret    
  42816e:	xchg   ax,ax
  428170:	lea    rcx,[rsp+0x20]
  428175:	call   QWORD PTR [rip+0x34919]        # 0x45ca94
  42817b:	mov    r12,QWORD PTR [rsp+0x20]
  428180:	call   QWORD PTR [rip+0x348d6]        # 0x45ca5c
  428186:	mov    ebp,eax
  428188:	call   QWORD PTR [rip+0x348d6]        # 0x45ca64
  42818e:	mov    edi,eax
  428190:	call   QWORD PTR [rip+0x3490e]        # 0x45caa4
  428196:	lea    rcx,[rsp+0x30]
  42819b:	mov    esi,eax
  42819d:	call   QWORD PTR [rip+0x34939]        # 0x45cadc
  4281a3:	xor    r12,QWORD PTR [rsp+0x30]
  4281a8:	mov    edx,edi
  4281aa:	movabs rax,0xffffffffffff
  4281b4:	xor    rbp,r12
  4281b7:	mov    rdi,rbp
  4281ba:	xor    rdi,rdx
  4281bd:	mov    edx,esi
  4281bf:	xor    rdi,rdx
  4281c2:	mov    rsi,rdi
  4281c5:	and    rsi,rax
  4281c8:	cmp    rsi,rbx
  4281cb:	je     0x4281f0
  4281cd:	mov    rax,rsi
  4281d0:	not    rax
  4281d3:	mov    QWORD PTR [rip+0x43c6],rsi        # 0x42c5a0
  4281da:	mov    QWORD PTR [rip+0x43cf],rax        # 0x42c5b0
  4281e1:	add    rsp,0x40
  4281e5:	pop    rbx
  4281e6:	pop    rsi
  4281e7:	pop    rdi
  4281e8:	pop    rbp
  4281e9:	pop    r12
  4281eb:	ret    
  4281ec:	nop    DWORD PTR [rax+0x0]
  4281f0:	movabs rax,0xffffd466d2205dcc
  4281fa:	movabs rsi,0x2b992ddfa233
  428204:	jmp    0x4281d3
  428206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428210:	push   rbp
  428211:	push   rsi
  428212:	push   rbx
  428213:	mov    rbp,rsp
  428216:	sub    rsp,0x70
  42821a:	mov    rsi,rcx
  42821d:	lea    rcx,[rip+0x3235c]        # 0x45a580
  428224:	call   QWORD PTR [rip+0x348da]        # 0x45cb04
  42822a:	mov    rbx,QWORD PTR [rip+0x32447]        # 0x45a678
  428231:	xor    r8d,r8d
  428234:	lea    rdx,[rbp-0x28]
  428238:	mov    rcx,rbx
  42823b:	call   QWORD PTR [rip+0x348cb]        # 0x45cb0c
  428241:	test   rax,rax
  428244:	mov    r9,rax
  428247:	je     0x4282f0
  42824d:	lea    rax,[rbp-0x20]
  428251:	mov    QWORD PTR [rsp+0x38],0x0
  42825a:	mov    r8,rbx
  42825d:	mov    rdx,QWORD PTR [rbp-0x28]
  428261:	xor    ecx,ecx
  428263:	mov    QWORD PTR [rsp+0x30],rax
  428268:	lea    rax,[rbp-0x18]
  42826c:	mov    QWORD PTR [rsp+0x28],rax
  428271:	lea    rax,[rip+0x32308]        # 0x45a580
  428278:	mov    QWORD PTR [rsp+0x20],rax
  42827d:	call   QWORD PTR [rip+0x34891]        # 0x45cb14
  428283:	mov    rax,QWORD PTR [rip+0x323ee]        # 0x45a678
  42828a:	xor    ecx,ecx
  42828c:	mov    QWORD PTR [rip+0x3236d],rsi        # 0x45a600
  428293:	mov    DWORD PTR [rip+0x327e3],0xc0000409        # 0x45aa80
  42829d:	mov    DWORD PTR [rip+0x327dd],0x1        # 0x45aa84
  4282a7:	mov    QWORD PTR [rip+0x327e2],rax        # 0x45aa90
  4282ae:	mov    rax,QWORD PTR [rip+0x42eb]        # 0x42c5a0
  4282b5:	mov    QWORD PTR [rbp-0x10],rax
  4282b9:	mov    rax,QWORD PTR [rip+0x42f0]        # 0x42c5b0
  4282c0:	mov    QWORD PTR [rbp-0x8],rax
  4282c4:	call   QWORD PTR [rip+0x3486a]        # 0x45cb34
  4282ca:	lea    rcx,[rip+0x2bfaf]        # 0x454280
  4282d1:	call   QWORD PTR [rip+0x34885]        # 0x45cb5c
  4282d7:	call   QWORD PTR [rip+0x34777]        # 0x45ca54
  4282dd:	mov    edx,0xc0000409
  4282e2:	mov    rcx,rax
  4282e5:	call   QWORD PTR [rip+0x34861]        # 0x45cb4c
  4282eb:	call   0x42a568
  4282f0:	mov    rax,QWORD PTR [rbp+0x18]
  4282f4:	mov    QWORD PTR [rip+0x3237d],rax        # 0x45a678
  4282fb:	lea    rax,[rbp+0x8]
  4282ff:	mov    QWORD PTR [rip+0x32312],rax        # 0x45a618
  428306:	jmp    0x428283
  42830b:	nop
  42830c:	nop
  42830d:	nop
  42830e:	nop
  42830f:	nop
  428310:	sub    rsp,0x28
  428314:	test   edx,edx
  428316:	je     0x428330
  428318:	cmp    edx,0x3
  42831b:	je     0x428330
  42831d:	mov    eax,0x1
  428322:	add    rsp,0x28
  428326:	ret    
  428327:	nop    WORD PTR [rax+rax*1+0x0]
  428330:	call   0x429020
  428335:	mov    eax,0x1
  42833a:	add    rsp,0x28
  42833e:	ret    
  42833f:	nop
  428340:	push   rsi
  428341:	push   rbx
  428342:	sub    rsp,0x28
  428346:	mov    rax,QWORD PTR [rip+0x2c323]        # 0x454670
  42834d:	cmp    DWORD PTR [rax],0x2
  428350:	je     0x428358
  428352:	mov    DWORD PTR [rax],0x2
  428358:	cmp    edx,0x2
  42835b:	je     0x428370
  42835d:	cmp    edx,0x1
  428360:	je     0x4283a2
  428362:	mov    eax,0x1
  428367:	add    rsp,0x28
  42836b:	pop    rbx
  42836c:	pop    rsi
  42836d:	ret    
  42836e:	xchg   ax,ax
  428370:	lea    rbx,[rip+0x35ce9]        # 0x45e060
  428377:	lea    rsi,[rip+0x35ce2]        # 0x45e060
  42837e:	cmp    rbx,rsi
  428381:	je     0x428362
  428383:	mov    rax,QWORD PTR [rbx]
  428386:	test   rax,rax
  428389:	je     0x42838d
  42838b:	call   rax
  42838d:	add    rbx,0x8
  428391:	cmp    rbx,rsi
  428394:	jne    0x428383
  428396:	mov    eax,0x1
  42839b:	add    rsp,0x28
  42839f:	pop    rbx
  4283a0:	pop    rsi
  4283a1:	ret    
  4283a2:	call   0x429020
  4283a7:	jmp    0x428362
  4283a9:	nop    DWORD PTR [rax+0x0]
  4283b0:	xor    eax,eax
  4283b2:	ret    
  4283b3:	nop
  4283b4:	nop
  4283b5:	nop
  4283b6:	nop
  4283b7:	nop
  4283b8:	nop
  4283b9:	nop
  4283ba:	nop
  4283bb:	nop
  4283bc:	nop
  4283bd:	nop
  4283be:	nop
  4283bf:	nop
  4283c0:	sub    rsp,0x58
  4283c4:	mov    rax,QWORD PTR [rip+0x32795]        # 0x45ab60
  4283cb:	test   rax,rax
  4283ce:	je     0x4283fc
  4283d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4283d9:	mov    DWORD PTR [rsp+0x20],ecx
  4283dd:	lea    rcx,[rsp+0x20]
  4283e2:	mov    QWORD PTR [rsp+0x28],rdx
  4283e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4283ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4283f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4283f9:	call   rax
  4283fb:	nop
  4283fc:	add    rsp,0x58
  428400:	ret    
  428401:	nop    DWORD PTR [rax+rax*1+0x0]
  428406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428410:	mov    QWORD PTR [rip+0x32749],rcx        # 0x45ab60
  428417:	jmp    0x42a5e8
  42841c:	nop    DWORD PTR [rax+0x0]
  428420:	push   rsi
  428421:	push   rbx
  428422:	sub    rsp,0x78
  428426:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42842b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  428430:	movaps XMMWORD PTR [rsp+0x60],xmm8
  428436:	cmp    DWORD PTR [rcx],0x6
  428439:	ja     0x428510
  42843f:	mov    edx,DWORD PTR [rcx]
  428441:	lea    rax,[rip+0x2bf7c]        # 0x4543c4
  428448:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42844c:	add    rax,rdx
  42844f:	jmp    rax
  428451:	lea    rbx,[rip+0x2be48]        # 0x4542a0
  428458:	nop    DWORD PTR [rax+rax*1+0x0]
  428460:	movsd  xmm8,QWORD PTR [rcx+0x20]
  428466:	mov    rsi,QWORD PTR [rcx+0x8]
  42846a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  42846f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  428474:	call   0x42a600
  428479:	movsd  QWORD PTR [rsp+0x30],xmm8
  428480:	lea    rcx,[rax+0x60]
  428484:	lea    rdx,[rip+0x2bf0d]        # 0x454398
  42848b:	movsd  QWORD PTR [rsp+0x28],xmm7
  428491:	mov    r9,rsi
  428494:	mov    r8,rbx
  428497:	movsd  QWORD PTR [rsp+0x20],xmm6
  42849d:	call   0x42a508
  4284a2:	nop
  4284a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4284a8:	xor    eax,eax
  4284aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4284af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4284b5:	add    rsp,0x78
  4284b9:	pop    rbx
  4284ba:	pop    rsi
  4284bb:	ret    
  4284bc:	nop    DWORD PTR [rax+0x0]
  4284c0:	lea    rbx,[rip+0x2bdf8]        # 0x4542bf
  4284c7:	jmp    0x428460
  4284c9:	nop    DWORD PTR [rax+0x0]
  4284d0:	lea    rbx,[rip+0x2be09]        # 0x4542e0
  4284d7:	jmp    0x428460
  4284d9:	nop    DWORD PTR [rax+0x0]
  4284e0:	lea    rbx,[rip+0x2be69]        # 0x454350
  4284e7:	jmp    0x428460
  4284ec:	nop    DWORD PTR [rax+0x0]
  4284f0:	lea    rbx,[rip+0x2be31]        # 0x454328
  4284f7:	jmp    0x428460
  4284fc:	nop    DWORD PTR [rax+0x0]
  428500:	lea    rbx,[rip+0x2bdf9]        # 0x454300
  428507:	jmp    0x428460
  42850c:	nop    DWORD PTR [rax+0x0]
  428510:	lea    rbx,[rip+0x2be6f]        # 0x454386
  428517:	jmp    0x428460
  42851c:	nop
  42851d:	nop
  42851e:	nop
  42851f:	nop
  428520:	fninit 
  428522:	ret    
  428523:	nop
  428524:	nop
  428525:	nop
  428526:	nop
  428527:	nop
  428528:	nop
  428529:	nop
  42852a:	nop
  42852b:	nop
  42852c:	nop
  42852d:	nop
  42852e:	nop
  42852f:	nop
  428530:	mov    rax,rcx
  428533:	ret    
  428534:	xchg   ax,ax
  428536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428540:	mov    rax,rcx
  428543:	ret    
  428544:	nop
  428545:	nop
  428546:	nop
  428547:	nop
  428548:	nop
  428549:	nop
  42854a:	nop
  42854b:	nop
  42854c:	nop
  42854d:	nop
  42854e:	nop
  42854f:	nop
  428550:	push   rsi
  428551:	push   rbx
  428552:	sub    rsp,0x38
  428556:	lea    rax,[rsp+0x58]
  42855b:	mov    rbx,rcx
  42855e:	mov    QWORD PTR [rsp+0x58],rdx
  428563:	mov    QWORD PTR [rsp+0x60],r8
  428568:	mov    QWORD PTR [rsp+0x68],r9
  42856d:	mov    QWORD PTR [rsp+0x28],rax
  428572:	call   0x42a600
  428577:	lea    rcx,[rip+0x2be62]        # 0x4543e0
  42857e:	lea    r9,[rax+0x60]
  428582:	mov    r8d,0x1b
  428588:	mov    edx,0x1
  42858d:	call   0x42a4e0
  428592:	mov    rsi,QWORD PTR [rsp+0x28]
  428597:	call   0x42a600
  42859c:	lea    rcx,[rax+0x60]
  4285a0:	mov    rdx,rbx
  4285a3:	mov    r8,rsi
  4285a6:	call   0x42a3a8
  4285ab:	call   0x42a568
  4285b0:	nop
  4285b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4285b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4285c0:	push   r13
  4285c2:	push   r12
  4285c4:	push   rbp
  4285c5:	push   rdi
  4285c6:	push   rsi
  4285c7:	push   rbx
  4285c8:	sub    rsp,0x58
  4285cc:	movsxd rbp,DWORD PTR [rip+0x325b1]        # 0x45ab84
  4285d3:	mov    rbx,rcx
  4285d6:	mov    rsi,rdx
  4285d9:	mov    rdi,r8
  4285dc:	test   ebp,ebp
  4285de:	jle    0x4286da
  4285e4:	mov    rax,QWORD PTR [rip+0x3259d]        # 0x45ab88
  4285eb:	xor    r9d,r9d
  4285ee:	add    rax,0x8
  4285f2:	mov    r10,QWORD PTR [rax]
  4285f5:	cmp    rbx,r10
  4285f8:	jb     0x42860e
  4285fa:	mov    rdx,QWORD PTR [rax+0x8]
  4285fe:	mov    r11d,DWORD PTR [rdx+0x8]
  428602:	add    r10,r11
  428605:	cmp    rbx,r10
  428608:	jb     0x4286c0
  42860e:	add    r9d,0x1
  428612:	add    rax,0x18
  428616:	cmp    r9d,ebp
  428619:	jne    0x4285f2
  42861b:	mov    rcx,rbx
  42861e:	call   0x429230
  428623:	test   rax,rax
  428626:	mov    r12,rax
  428629:	je     0x428712
  42862f:	lea    rbp,[rbp+rbp*2+0x0]
  428634:	shl    rbp,0x3
  428638:	mov    r13,rbp
  42863b:	add    r13,QWORD PTR [rip+0x32546]        # 0x45ab88
  428642:	mov    QWORD PTR [r13+0x10],rax
  428646:	mov    DWORD PTR [r13+0x0],0x0
  42864e:	call   0x429350
  428653:	mov    edx,DWORD PTR [r12+0xc]
  428658:	mov    r8d,0x30
  42865e:	add    rax,rdx
  428661:	lea    rdx,[rsp+0x20]
  428666:	mov    QWORD PTR [r13+0x8],rax
  42866a:	mov    rax,QWORD PTR [rip+0x32517]        # 0x45ab88
  428671:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  428676:	call   QWORD PTR [rip+0x344f0]        # 0x45cb6c
  42867c:	test   rax,rax
  42867f:	je     0x4286f5
  428681:	mov    eax,DWORD PTR [rsp+0x44]
  428685:	lea    edx,[rax-0x4]
  428688:	and    edx,0xfffffffb
  42868b:	je     0x4286b9
  42868d:	sub    eax,0x40
  428690:	and    eax,0xffffffbf
  428693:	je     0x4286b9
  428695:	mov    r9,rbp
  428698:	add    r9,QWORD PTR [rip+0x324e9]        # 0x45ab88
  42869f:	mov    r8d,0x40
  4286a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4286aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4286af:	call   QWORD PTR [rip+0x344af]        # 0x45cb64
  4286b5:	test   eax,eax
  4286b7:	je     0x4286e1
  4286b9:	add    DWORD PTR [rip+0x324c4],0x1        # 0x45ab84
  4286c0:	mov    r8,rdi
  4286c3:	mov    rdx,rsi
  4286c6:	mov    rcx,rbx
  4286c9:	add    rsp,0x58
  4286cd:	pop    rbx
  4286ce:	pop    rsi
  4286cf:	pop    rdi
  4286d0:	pop    rbp
  4286d1:	pop    r12
  4286d3:	pop    r13
  4286d5:	jmp    0x42a490
  4286da:	xor    ebp,ebp
  4286dc:	jmp    0x42861b
  4286e1:	call   QWORD PTR [rip+0x34395]        # 0x45ca7c
  4286e7:	lea    rcx,[rip+0x2bd6a]        # 0x454458
  4286ee:	mov    edx,eax
  4286f0:	call   0x428550
  4286f5:	mov    rax,QWORD PTR [rip+0x3248c]        # 0x45ab88
  4286fc:	mov    edx,DWORD PTR [r12+0x8]
  428701:	lea    rcx,[rip+0x2bd18]        # 0x454420
  428708:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42870d:	call   0x428550
  428712:	lea    rcx,[rip+0x2bce7]        # 0x454400
  428719:	mov    rdx,rbx
  42871c:	call   0x428550
  428721:	nop
  428722:	nop    DWORD PTR [rax+0x0]
  428726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428730:	push   rbp
  428731:	push   r14
  428733:	push   r13
  428735:	push   r12
  428737:	push   rdi
  428738:	push   rsi
  428739:	push   rbx
  42873a:	mov    rbp,rsp
  42873d:	sub    rsp,0x60
  428741:	mov    ebx,DWORD PTR [rip+0x32439]        # 0x45ab80
  428747:	test   ebx,ebx
  428749:	je     0x428760
  42874b:	mov    rsp,rbp
  42874e:	pop    rbx
  42874f:	pop    rsi
  428750:	pop    rdi
  428751:	pop    r12
  428753:	pop    r13
  428755:	pop    r14
  428757:	pop    rbp
  428758:	ret    
  428759:	nop    DWORD PTR [rax+0x0]
  428760:	mov    DWORD PTR [rip+0x32416],0x1        # 0x45ab80
  42876a:	call   0x429280
  42876f:	cdqe   
  428771:	lea    rax,[rax+rax*2]
  428775:	lea    rax,[rax*8+0x1e]
  42877d:	and    rax,0xfffffffffffffff0
  428781:	call   0x4294a0
  428786:	mov    rsi,QWORD PTR [rip+0x2bf13]        # 0x4546a0
  42878d:	mov    rbx,QWORD PTR [rip+0x2bf1c]        # 0x4546b0
  428794:	sub    rsp,rax
  428797:	mov    DWORD PTR [rip+0x323e3],0x0        # 0x45ab84
  4287a1:	lea    rax,[rsp+0x20]
  4287a6:	mov    QWORD PTR [rip+0x323db],rax        # 0x45ab88
  4287ad:	mov    rax,rsi
  4287b0:	sub    rax,rbx
  4287b3:	cmp    rax,0x7
  4287b7:	jle    0x42874b
  4287b9:	cmp    rax,0xb
  4287bd:	jle    0x4287e5
  4287bf:	mov    r11d,DWORD PTR [rbx]
  4287c2:	test   r11d,r11d
  4287c5:	jne    0x428910
  4287cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4287cf:	test   r10d,r10d
  4287d2:	jne    0x428910
  4287d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4287dc:	test   r9d,r9d
  4287df:	jne    0x4287fc
  4287e1:	add    rbx,0xc
  4287e5:	mov    r8d,DWORD PTR [rbx]
  4287e8:	test   r8d,r8d
  4287eb:	jne    0x428910
  4287f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4287f4:	test   ecx,ecx
  4287f6:	jne    0x428910
  4287fc:	mov    edx,DWORD PTR [rbx+0x8]
  4287ff:	cmp    edx,0x1
  428802:	jne    0x428a1c
  428808:	add    rbx,0xc
  42880c:	cmp    rbx,rsi
  42880f:	jae    0x42874b
  428815:	mov    r12,QWORD PTR [rip+0x2beb4]        # 0x4546d0
  42881c:	lea    r13,[rbp-0x30]
  428820:	movabs r14,0xffffffff00000000
  42882a:	mov    ecx,DWORD PTR [rbx+0x4]
  42882d:	mov    eax,DWORD PTR [rbx]
  42882f:	movzx  edx,BYTE PTR [rbx+0x8]
  428833:	add    rax,r12
  428836:	add    rcx,r12
  428839:	cmp    edx,0x10
  42883c:	mov    r8,QWORD PTR [rax]
  42883f:	je     0x428986
  428845:	jbe    0x42894d
  42884b:	cmp    edx,0x20
  42884e:	je     0x4289cf
  428854:	cmp    edx,0x40
  428857:	jne    0x4289bb
  42885d:	sub    r8,rax
  428860:	mov    rdx,r13
  428863:	mov    rdi,r13
  428866:	mov    rax,r8
  428869:	add    rax,QWORD PTR [rcx]
  42886c:	mov    r8d,0x8
  428872:	mov    QWORD PTR [rbp-0x30],rax
  428876:	call   0x4285c0
  42887b:	add    rbx,0xc
  42887f:	cmp    rbx,rsi
  428882:	jb     0x42882a
  428884:	mov    eax,DWORD PTR [rip+0x322fa]        # 0x45ab84
  42888a:	xor    ebx,ebx
  42888c:	xor    esi,esi
  42888e:	test   eax,eax
  428890:	jle    0x42874b
  428896:	mov    r14,QWORD PTR [rip+0x342cf]        # 0x45cb6c
  42889d:	lea    r13,[rbp-0x34]
  4288a1:	mov    r12,QWORD PTR [rip+0x342bc]        # 0x45cb64
  4288a8:	jmp    0x4288c3
  4288aa:	nop    WORD PTR [rax+rax*1+0x0]
  4288b0:	add    esi,0x1
  4288b3:	add    rbx,0x18
  4288b7:	cmp    esi,DWORD PTR [rip+0x322c7]        # 0x45ab84
  4288bd:	jge    0x42874b
  4288c3:	mov    rax,rbx
  4288c6:	add    rax,QWORD PTR [rip+0x322bb]        # 0x45ab88
  4288cd:	mov    edx,DWORD PTR [rax]
  4288cf:	test   edx,edx
  4288d1:	je     0x4288b0
  4288d3:	mov    rcx,QWORD PTR [rax+0x8]
  4288d7:	mov    r8d,0x30
  4288dd:	mov    rdx,rdi
  4288e0:	call   r14
  4288e3:	test   rax,rax
  4288e6:	je     0x4289fe
  4288ec:	mov    rax,QWORD PTR [rip+0x32295]        # 0x45ab88
  4288f3:	mov    r9,r13
  4288f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4288fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4288fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  428902:	call   r12
  428905:	jmp    0x4288b0
  428907:	nop    WORD PTR [rax+rax*1+0x0]
  428910:	cmp    rbx,rsi
  428913:	jae    0x42874b
  428919:	mov    r12,QWORD PTR [rip+0x2bdb0]        # 0x4546d0
  428920:	lea    rdi,[rbp-0x30]
  428924:	mov    ecx,DWORD PTR [rbx+0x4]
  428927:	mov    eax,DWORD PTR [rbx]
  428929:	mov    r8d,0x4
  42892f:	mov    rdx,rdi
  428932:	add    rbx,0x8
  428936:	add    rcx,r12
  428939:	add    eax,DWORD PTR [rcx]
  42893b:	mov    DWORD PTR [rbp-0x30],eax
  42893e:	call   0x4285c0
  428943:	cmp    rbx,rsi
  428946:	jb     0x428924
  428948:	jmp    0x428884
  42894d:	cmp    edx,0x8
  428950:	jne    0x4289bb
  428952:	movzx  edx,BYTE PTR [rcx]
  428955:	mov    rdi,r13
  428958:	mov    r10,rdx
  42895b:	or     r10,0xffffffffffffff00
  428962:	test   dl,dl
  428964:	cmovs  rdx,r10
  428968:	sub    rdx,rax
  42896b:	lea    rax,[r8+rdx*1]
  42896f:	mov    r8d,0x1
  428975:	mov    rdx,r13
  428978:	mov    QWORD PTR [rbp-0x30],rax
  42897c:	call   0x4285c0
  428981:	jmp    0x42887b
  428986:	movzx  edx,WORD PTR [rcx]
  428989:	mov    rdi,r13
  42898c:	mov    r10,rdx
  42898f:	or     r10,0xffffffffffff0000
  428996:	test   dx,dx
  428999:	cmovs  rdx,r10
  42899d:	sub    rdx,rax
  4289a0:	lea    rax,[r8+rdx*1]
  4289a4:	mov    r8d,0x2
  4289aa:	mov    rdx,r13
  4289ad:	mov    QWORD PTR [rbp-0x30],rax
  4289b1:	call   0x4285c0
  4289b6:	jmp    0x42887b
  4289bb:	lea    rcx,[rip+0x2baf6]        # 0x4544b8
  4289c2:	mov    QWORD PTR [rbp-0x30],0x0
  4289ca:	call   0x428550
  4289cf:	mov    edx,DWORD PTR [rcx]
  4289d1:	mov    rdi,r13
  4289d4:	mov    r10,rdx
  4289d7:	or     r10,r14
  4289da:	test   edx,edx
  4289dc:	cmovs  rdx,r10
  4289e0:	sub    rdx,rax
  4289e3:	lea    rax,[r8+rdx*1]
  4289e7:	mov    r8d,0x4
  4289ed:	mov    rdx,r13
  4289f0:	mov    QWORD PTR [rbp-0x30],rax
  4289f4:	call   0x4285c0
  4289f9:	jmp    0x42887b
  4289fe:	add    rbx,QWORD PTR [rip+0x32183]        # 0x45ab88
  428a05:	lea    rcx,[rip+0x2ba14]        # 0x454420
  428a0c:	mov    rax,QWORD PTR [rbx+0x10]
  428a10:	mov    r8,QWORD PTR [rbx+0x8]
  428a14:	mov    edx,DWORD PTR [rax+0x8]
  428a17:	call   0x428550
  428a1c:	lea    rcx,[rip+0x2ba5d]        # 0x454480
  428a23:	call   0x428550
  428a28:	nop
  428a29:	nop
  428a2a:	nop
  428a2b:	nop
  428a2c:	nop
  428a2d:	nop
  428a2e:	nop
  428a2f:	nop
  428a30:	sub    rsp,0x28
  428a34:	mov    eax,DWORD PTR [rcx]
  428a36:	cmp    eax,0xc0000091
  428a3b:	ja     0x428aa0
  428a3d:	cmp    eax,0xc000008d
  428a42:	jae    0x428abf
  428a44:	cmp    eax,0xc0000008
  428a49:	je     0x428b60
  428a4f:	ja     0x428b30
  428a55:	cmp    eax,0x80000002
  428a5a:	je     0x428b60
  428a60:	cmp    eax,0xc0000005
  428a65:	jne    0x428b3e
  428a6b:	xor    edx,edx
  428a6d:	mov    ecx,0xb
  428a72:	call   0x42a440
  428a77:	cmp    rax,0x1
  428a7b:	je     0x428bc0
  428a81:	test   rax,rax
  428a84:	je     0x428ba0
  428a8a:	mov    ecx,0xb
  428a8f:	call   rax
  428a91:	xor    eax,eax
  428a93:	add    rsp,0x28
  428a97:	ret    
  428a98:	nop    DWORD PTR [rax+rax*1+0x0]
  428aa0:	cmp    eax,0xc0000094
  428aa5:	je     0x428b70
  428aab:	ja     0x428af0
  428aad:	cmp    eax,0xc0000092
  428ab2:	je     0x428b60
  428ab8:	cmp    eax,0xc0000093
  428abd:	jne    0x428b3e
  428abf:	xor    edx,edx
  428ac1:	mov    ecx,0x8
  428ac6:	call   0x42a440
  428acb:	cmp    rax,0x1
  428acf:	mov    rdx,rax
  428ad2:	je     0x428b48
  428ad4:	test   rdx,rdx
  428ad7:	mov    eax,0x1
  428adc:	je     0x428a93
  428ade:	mov    ecx,0x8
  428ae3:	call   rdx
  428ae5:	xor    eax,eax
  428ae7:	add    rsp,0x28
  428aeb:	ret    
  428aec:	nop    DWORD PTR [rax+0x0]
  428af0:	cmp    eax,0xc0000095
  428af5:	je     0x428b60
  428af7:	cmp    eax,0xc0000096
  428afc:	jne    0x428b3e
  428afe:	xor    edx,edx
  428b00:	mov    ecx,0x4
  428b05:	call   0x42a440
  428b0a:	cmp    rax,0x1
  428b0e:	je     0x428baa
  428b14:	test   rax,rax
  428b17:	je     0x428ba0
  428b1d:	mov    ecx,0x4
  428b22:	call   rax
  428b24:	xor    eax,eax
  428b26:	jmp    0x428a93
  428b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  428b30:	cmp    eax,0xc000001d
  428b35:	je     0x428afe
  428b37:	cmp    eax,0xc000008c
  428b3c:	je     0x428b60
  428b3e:	mov    eax,0x1
  428b43:	add    rsp,0x28
  428b47:	ret    
  428b48:	mov    edx,0x1
  428b4d:	mov    ecx,0x8
  428b52:	call   0x42a440
  428b57:	call   0x428520
  428b5c:	nop    DWORD PTR [rax+0x0]
  428b60:	xor    eax,eax
  428b62:	add    rsp,0x28
  428b66:	ret    
  428b67:	nop    WORD PTR [rax+rax*1+0x0]
  428b70:	xor    edx,edx
  428b72:	mov    ecx,0x8
  428b77:	call   0x42a440
  428b7c:	cmp    rax,0x1
  428b80:	mov    rdx,rax
  428b83:	jne    0x428ad4
  428b89:	mov    edx,0x1
  428b8e:	mov    ecx,0x8
  428b93:	call   0x42a440
  428b98:	xor    eax,eax
  428b9a:	jmp    0x428a93
  428b9f:	nop
  428ba0:	mov    eax,0x4
  428ba5:	add    rsp,0x28
  428ba9:	ret    
  428baa:	mov    edx,0x1
  428baf:	mov    ecx,0x4
  428bb4:	call   0x42a440
  428bb9:	xor    eax,eax
  428bbb:	jmp    0x428a93
  428bc0:	mov    edx,0x1
  428bc5:	mov    ecx,0xb
  428bca:	call   0x42a440
  428bcf:	xor    eax,eax
  428bd1:	jmp    0x428a93
  428bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428be0:	push   r12
  428be2:	push   rbp
  428be3:	push   rdi
  428be4:	push   rsi
  428be5:	push   rbx
  428be6:	sub    rsp,0x20
  428bea:	call   0x429350
  428bef:	mov    rbp,rax
  428bf2:	mov    eax,DWORD PTR [rip+0x31fd0]        # 0x45abc8
  428bf8:	test   eax,eax
  428bfa:	jne    0x428c21
  428bfc:	test   rbp,rbp
  428bff:	je     0x428c21
  428c01:	lea    rcx,[rip+0x2b8e8]        # 0x4544f0
  428c08:	mov    DWORD PTR [rip+0x31fb6],0x1        # 0x45abc8
  428c12:	call   0x429190
  428c17:	test   rax,rax
  428c1a:	je     0x428c30
  428c1c:	mov    eax,0x1
  428c21:	add    rsp,0x20
  428c25:	pop    rbx
  428c26:	pop    rsi
  428c27:	pop    rdi
  428c28:	pop    rbp
  428c29:	pop    r12
  428c2b:	ret    
  428c2c:	nop    DWORD PTR [rax+0x0]
  428c30:	lea    rbx,[rip+0x320c9]        # 0x45ad00
  428c37:	mov    ecx,0x30
  428c3c:	lea    rdx,[rip+0x31fbd]        # 0x45ac00
  428c43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x428a30
  428c4a:	xor    esi,esi
  428c4c:	mov    rdi,rbx
  428c4f:	rep stos QWORD PTR es:[rdi],rax
  428c52:	mov    rdi,rdx
  428c55:	sub    r12,rbp
  428c58:	mov    cl,0x20
  428c5a:	rep stos QWORD PTR es:[rdi],rax
  428c5d:	mov    rdi,rdx
  428c60:	jmp    0x428c90
  428c62:	mov    BYTE PTR [rdi],0x9
  428c65:	mov    DWORD PTR [rdi+0x4],r12d
  428c69:	add    rsi,0x1
  428c6d:	mov    edx,DWORD PTR [rax+0xc]
  428c70:	add    rbx,0xc
  428c74:	mov    DWORD PTR [rbx-0xc],edx
  428c77:	add    edx,DWORD PTR [rax+0x8]
  428c7a:	mov    rax,rdi
  428c7d:	sub    rax,rbp
  428c80:	add    rdi,0x8
  428c84:	mov    DWORD PTR [rbx-0x4],eax
  428c87:	mov    DWORD PTR [rbx-0x8],edx
  428c8a:	cmp    rsi,0x20
  428c8e:	je     0x428cc5
  428c90:	mov    rcx,rsi
  428c93:	call   0x4292c0
  428c98:	test   rax,rax
  428c9b:	jne    0x428c62
  428c9d:	test   rsi,rsi
  428ca0:	je     0x428c1c
  428ca6:	mov    edx,esi
  428ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cb0:	mov    r8,rbp
  428cb3:	lea    rcx,[rip+0x32046]        # 0x45ad00
  428cba:	call   QWORD PTR [rip+0x33e3c]        # 0x45cafc
  428cc0:	jmp    0x428c1c
  428cc5:	mov    edx,0x20
  428cca:	jmp    0x428cb0
  428ccc:	nop    DWORD PTR [rax+0x0]
  428cd0:	push   rbx
  428cd1:	sub    rsp,0x20
  428cd5:	mov    rdx,QWORD PTR [rcx]
  428cd8:	mov    eax,DWORD PTR [rdx]
  428cda:	mov    r8d,eax
  428cdd:	and    r8d,0x20ffffff
  428ce4:	cmp    r8d,0x20474343
  428ceb:	je     0x428df0
  428cf1:	cmp    eax,0xc0000091
  428cf6:	mov    rbx,rcx
  428cf9:	ja     0x428d80
  428cff:	cmp    eax,0xc000008d
  428d04:	jae    0x428d97
  428d0a:	cmp    eax,0xc0000008
  428d0f:	je     0x428d43
  428d11:	ja     0x428d50
  428d13:	cmp    eax,0x80000002
  428d18:	je     0x428d43
  428d1a:	cmp    eax,0xc0000005
  428d1f:	jne    0x428d62
  428d21:	xor    edx,edx
  428d23:	mov    ecx,0xb
  428d28:	call   0x42a440
  428d2d:	cmp    rax,0x1
  428d31:	je     0x428e60
  428d37:	test   rax,rax
  428d3a:	je     0x428d62
  428d3c:	mov    ecx,0xb
  428d41:	call   rax
  428d43:	mov    eax,0xffffffff
  428d48:	add    rsp,0x20
  428d4c:	pop    rbx
  428d4d:	ret    
  428d4e:	xchg   ax,ax
  428d50:	cmp    eax,0xc000001d
  428d55:	je     0x428e16
  428d5b:	cmp    eax,0xc000008c
  428d60:	je     0x428d43
  428d62:	mov    rax,QWORD PTR [rip+0x31e57]        # 0x45abc0
  428d69:	test   rax,rax
  428d6c:	je     0x428d48
  428d6e:	mov    rcx,rbx
  428d71:	add    rsp,0x20
  428d75:	pop    rbx
  428d76:	rex.W jmp rax
  428d79:	nop    DWORD PTR [rax+0x0]
  428d80:	cmp    eax,0xc0000094
  428d85:	je     0x428dc2
  428d87:	ja     0x428e00
  428d89:	cmp    eax,0xc0000092
  428d8e:	je     0x428d43
  428d90:	cmp    eax,0xc0000093
  428d95:	jne    0x428d62
  428d97:	xor    edx,edx
  428d99:	mov    ecx,0x8
  428d9e:	call   0x42a440
  428da3:	cmp    rax,0x1
  428da7:	jne    0x428dd4
  428da9:	mov    edx,0x1
  428dae:	mov    ecx,0x8
  428db3:	call   0x42a440
  428db8:	call   0x428520
  428dbd:	jmp    0x428d43
  428dc2:	xor    edx,edx
  428dc4:	mov    ecx,0x8
  428dc9:	call   0x42a440
  428dce:	cmp    rax,0x1
  428dd2:	je     0x428e42
  428dd4:	test   rax,rax
  428dd7:	je     0x428d62
  428dd9:	mov    ecx,0x8
  428dde:	call   rax
  428de0:	mov    eax,0xffffffff
  428de5:	jmp    0x428d48
  428dea:	nop    WORD PTR [rax+rax*1+0x0]
  428df0:	test   BYTE PTR [rdx+0x4],0x1
  428df4:	jne    0x428cf1
  428dfa:	jmp    0x428d43
  428dff:	nop
  428e00:	cmp    eax,0xc0000095
  428e05:	je     0x428d43
  428e0b:	cmp    eax,0xc0000096
  428e10:	jne    0x428d62
  428e16:	xor    edx,edx
  428e18:	mov    ecx,0x4
  428e1d:	call   0x42a440
  428e22:	cmp    rax,0x1
  428e26:	je     0x428e74
  428e28:	test   rax,rax
  428e2b:	je     0x428d62
  428e31:	mov    ecx,0x4
  428e36:	call   rax
  428e38:	mov    eax,0xffffffff
  428e3d:	jmp    0x428d48
  428e42:	mov    edx,0x1
  428e47:	mov    ecx,0x8
  428e4c:	call   0x42a440
  428e51:	jmp    0x428d43
  428e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e60:	mov    edx,0x1
  428e65:	mov    ecx,0xb
  428e6a:	call   0x42a440
  428e6f:	jmp    0x428d43
  428e74:	mov    edx,0x1
  428e79:	mov    ecx,0x4
  428e7e:	call   0x42a440
  428e83:	jmp    0x428d43
  428e88:	nop
  428e89:	nop
  428e8a:	nop
  428e8b:	nop
  428e8c:	nop
  428e8d:	nop
  428e8e:	nop
  428e8f:	nop
  428e90:	push   rbp
  428e91:	push   rdi
  428e92:	push   rsi
  428e93:	push   rbx
  428e94:	sub    rsp,0x28
  428e98:	lea    rcx,[rip+0x32001]        # 0x45aea0
  428e9f:	call   QWORD PTR [rip+0x33b87]        # 0x45ca2c
  428ea5:	mov    rbx,QWORD PTR [rip+0x31fd4]        # 0x45ae80
  428eac:	test   rbx,rbx
  428eaf:	je     0x428ee4
  428eb1:	mov    rbp,QWORD PTR [rip+0x33c9c]        # 0x45cb54
  428eb8:	mov    rdi,QWORD PTR [rip+0x33bbd]        # 0x45ca7c
  428ebf:	nop
  428ec0:	mov    ecx,DWORD PTR [rbx]
  428ec2:	call   rbp
  428ec4:	mov    rsi,rax
  428ec7:	call   rdi
  428ec9:	test   eax,eax
  428ecb:	jne    0x428edb
  428ecd:	test   rsi,rsi
  428ed0:	je     0x428edb
  428ed2:	mov    rax,QWORD PTR [rbx+0x8]
  428ed6:	mov    rcx,rsi
  428ed9:	call   rax
  428edb:	mov    rbx,QWORD PTR [rbx+0x10]
  428edf:	test   rbx,rbx
  428ee2:	jne    0x428ec0
  428ee4:	mov    rax,QWORD PTR [rip+0x33bc9]        # 0x45cab4
  428eeb:	lea    rcx,[rip+0x31fae]        # 0x45aea0
  428ef2:	add    rsp,0x28
  428ef6:	pop    rbx
  428ef7:	pop    rsi
  428ef8:	pop    rdi
  428ef9:	pop    rbp
  428efa:	rex.W jmp rax
  428efd:	nop    DWORD PTR [rax]
  428f00:	push   rdi
  428f01:	push   rsi
  428f02:	push   rbx
  428f03:	sub    rsp,0x20
  428f07:	mov    eax,DWORD PTR [rip+0x31f7b]        # 0x45ae88
  428f0d:	test   eax,eax
  428f0f:	jne    0x428f20
  428f11:	add    rsp,0x20
  428f15:	pop    rbx
  428f16:	pop    rsi
  428f17:	pop    rdi
  428f18:	ret    
  428f19:	nop    DWORD PTR [rax+0x0]
  428f20:	mov    rsi,rdx
  428f23:	mov    edi,ecx
  428f25:	mov    edx,0x18
  428f2a:	mov    ecx,0x1
  428f2f:	call   0x42a550
  428f34:	test   rax,rax
  428f37:	mov    rbx,rax
  428f3a:	je     0x428f78
  428f3c:	mov    DWORD PTR [rax],edi
  428f3e:	mov    QWORD PTR [rax+0x8],rsi
  428f42:	lea    rcx,[rip+0x31f57]        # 0x45aea0
  428f49:	call   QWORD PTR [rip+0x33add]        # 0x45ca2c
  428f4f:	mov    rax,QWORD PTR [rip+0x31f2a]        # 0x45ae80
  428f56:	lea    rcx,[rip+0x31f43]        # 0x45aea0
  428f5d:	mov    QWORD PTR [rip+0x31f1c],rbx        # 0x45ae80
  428f64:	mov    QWORD PTR [rbx+0x10],rax
  428f68:	call   QWORD PTR [rip+0x33b46]        # 0x45cab4
  428f6e:	xor    eax,eax
  428f70:	add    rsp,0x20
  428f74:	pop    rbx
  428f75:	pop    rsi
  428f76:	pop    rdi
  428f77:	ret    
  428f78:	mov    eax,0xffffffff
  428f7d:	jmp    0x428f11
  428f7f:	nop
  428f80:	push   rbx
  428f81:	sub    rsp,0x20
  428f85:	mov    eax,DWORD PTR [rip+0x31efd]        # 0x45ae88
  428f8b:	test   eax,eax
  428f8d:	jne    0x428fa0
  428f8f:	xor    eax,eax
  428f91:	add    rsp,0x20
  428f95:	pop    rbx
  428f96:	ret    
  428f97:	nop    WORD PTR [rax+rax*1+0x0]
  428fa0:	mov    ebx,ecx
  428fa2:	lea    rcx,[rip+0x31ef7]        # 0x45aea0
  428fa9:	call   QWORD PTR [rip+0x33a7d]        # 0x45ca2c
  428faf:	mov    rdx,QWORD PTR [rip+0x31eca]        # 0x45ae80
  428fb6:	test   rdx,rdx
  428fb9:	je     0x428fd7
  428fbb:	mov    eax,DWORD PTR [rdx]
  428fbd:	cmp    eax,ebx
  428fbf:	jne    0x428fce
  428fc1:	jmp    0x42900f
  428fc3:	mov    r8d,DWORD PTR [rax]
  428fc6:	cmp    r8d,ebx
  428fc9:	je     0x428ff0
  428fcb:	mov    rdx,rax
  428fce:	mov    rax,QWORD PTR [rdx+0x10]
  428fd2:	test   rax,rax
  428fd5:	jne    0x428fc3
  428fd7:	lea    rcx,[rip+0x31ec2]        # 0x45aea0
  428fde:	call   QWORD PTR [rip+0x33ad0]        # 0x45cab4
  428fe4:	xor    eax,eax
  428fe6:	add    rsp,0x20
  428fea:	pop    rbx
  428feb:	ret    
  428fec:	nop    DWORD PTR [rax+0x0]
  428ff0:	mov    rcx,rax
  428ff3:	mov    rax,QWORD PTR [rax+0x10]
  428ff7:	mov    QWORD PTR [rdx+0x10],rax
  428ffb:	call   0x42a4e8
  429000:	lea    rcx,[rip+0x31e99]        # 0x45aea0
  429007:	call   QWORD PTR [rip+0x33aa7]        # 0x45cab4
  42900d:	jmp    0x428fe4
  42900f:	mov    rax,QWORD PTR [rdx+0x10]
  429013:	mov    rcx,rdx
  429016:	mov    QWORD PTR [rip+0x31e63],rax        # 0x45ae80
  42901d:	jmp    0x428ffb
  42901f:	nop
  429020:	push   rbx
  429021:	sub    rsp,0x20
  429025:	cmp    edx,0x1
  429028:	je     0x4290c0
  42902e:	jb     0x429060
  429030:	cmp    edx,0x2
  429033:	je     0x429050
  429035:	cmp    edx,0x3
  429038:	jne    0x429055
  42903a:	mov    eax,DWORD PTR [rip+0x31e48]        # 0x45ae88
  429040:	test   eax,eax
  429042:	je     0x429055
  429044:	call   0x428e90
  429049:	jmp    0x429055
  42904b:	nop    DWORD PTR [rax+rax*1+0x0]
  429050:	call   0x428520
  429055:	mov    eax,0x1
  42905a:	add    rsp,0x20
  42905e:	pop    rbx
  42905f:	ret    
  429060:	mov    eax,DWORD PTR [rip+0x31e22]        # 0x45ae88
  429066:	test   eax,eax
  429068:	jne    0x4290f0
  42906e:	mov    eax,DWORD PTR [rip+0x31e14]        # 0x45ae88
  429074:	cmp    eax,0x1
  429077:	jne    0x429055
  429079:	mov    rcx,QWORD PTR [rip+0x31e00]        # 0x45ae80
  429080:	test   rcx,rcx
  429083:	je     0x429096
  429085:	mov    rbx,QWORD PTR [rcx+0x10]
  429089:	call   0x42a4e8
  42908e:	test   rbx,rbx
  429091:	mov    rcx,rbx
  429094:	jne    0x429085
  429096:	lea    rcx,[rip+0x31e03]        # 0x45aea0
  42909d:	mov    QWORD PTR [rip+0x31dd8],0x0        # 0x45ae80
  4290a8:	mov    DWORD PTR [rip+0x31dd6],0x0        # 0x45ae88
  4290b2:	call   QWORD PTR [rip+0x3395c]        # 0x45ca14
  4290b8:	jmp    0x429055
  4290ba:	nop    WORD PTR [rax+rax*1+0x0]
  4290c0:	mov    eax,DWORD PTR [rip+0x31dc2]        # 0x45ae88
  4290c6:	test   eax,eax
  4290c8:	je     0x4290e0
  4290ca:	mov    eax,0x1
  4290cf:	mov    DWORD PTR [rip+0x31daf],0x1        # 0x45ae88
  4290d9:	add    rsp,0x20
  4290dd:	pop    rbx
  4290de:	ret    
  4290df:	nop
  4290e0:	lea    rcx,[rip+0x31db9]        # 0x45aea0
  4290e7:	call   QWORD PTR [rip+0x339bf]        # 0x45caac
  4290ed:	jmp    0x4290ca
  4290ef:	nop
  4290f0:	call   0x428e90
  4290f5:	jmp    0x42906e
  4290fa:	nop
  4290fb:	nop
  4290fc:	nop
  4290fd:	nop
  4290fe:	nop
  4290ff:	nop
  429100:	movsxd rax,DWORD PTR [rcx+0x3c]
  429104:	add    rcx,rax
  429107:	xor    eax,eax
  429109:	cmp    DWORD PTR [rcx],0x4550
  42910f:	je     0x429113
  429111:	repz ret 
  429113:	xor    eax,eax
  429115:	cmp    WORD PTR [rcx+0x18],0x20b
  42911b:	sete   al
  42911e:	ret    
  42911f:	nop
  429120:	cmp    WORD PTR [rcx],0x5a4d
  429125:	je     0x429130
  429127:	xor    eax,eax
  429129:	ret    
  42912a:	nop    WORD PTR [rax+rax*1+0x0]
  429130:	jmp    0x429100
  429132:	nop    DWORD PTR [rax+0x0]
  429136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429140:	movsxd rax,DWORD PTR [rcx+0x3c]
  429144:	add    rcx,rax
  429147:	movzx  eax,WORD PTR [rcx+0x14]
  42914b:	lea    rax,[rcx+rax*1+0x18]
  429150:	movzx  ecx,WORD PTR [rcx+0x6]
  429154:	test   ecx,ecx
  429156:	je     0x429181
  429158:	sub    ecx,0x1
  42915b:	lea    rcx,[rcx+rcx*4]
  42915f:	lea    r9,[rax+rcx*8+0x28]
  429164:	mov    r8d,DWORD PTR [rax+0xc]
  429168:	cmp    r8,rdx
  42916b:	mov    rcx,r8
  42916e:	ja     0x429178
  429170:	add    ecx,DWORD PTR [rax+0x8]
  429173:	cmp    rdx,rcx
  429176:	jb     0x429183
  429178:	add    rax,0x28
  42917c:	cmp    rax,r9
  42917f:	jne    0x429164
  429181:	xor    eax,eax
  429183:	repz ret 
  429185:	nop
  429186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429190:	push   rdi
  429191:	push   rsi
  429192:	push   rbx
  429193:	sub    rsp,0x20
  429197:	mov    rsi,rcx
  42919a:	call   0x42a400
  42919f:	cmp    rax,0x8
  4291a3:	ja     0x4291c0
  4291a5:	mov    rbx,QWORD PTR [rip+0x2b524]        # 0x4546d0
  4291ac:	xor    edi,edi
  4291ae:	cmp    WORD PTR [rbx],0x5a4d
  4291b3:	je     0x4291d0
  4291b5:	mov    rax,rdi
  4291b8:	add    rsp,0x20
  4291bc:	pop    rbx
  4291bd:	pop    rsi
  4291be:	pop    rdi
  4291bf:	ret    
  4291c0:	xor    edi,edi
  4291c2:	mov    rax,rdi
  4291c5:	add    rsp,0x20
  4291c9:	pop    rbx
  4291ca:	pop    rsi
  4291cb:	pop    rdi
  4291cc:	ret    
  4291cd:	nop    DWORD PTR [rax]
  4291d0:	mov    rcx,rbx
  4291d3:	call   0x429100
  4291d8:	test   eax,eax
  4291da:	je     0x4291b5
  4291dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4291e0:	add    rdx,rbx
  4291e3:	movzx  eax,WORD PTR [rdx+0x14]
  4291e7:	lea    rbx,[rdx+rax*1+0x18]
  4291ec:	movzx  eax,WORD PTR [rdx+0x6]
  4291f0:	test   eax,eax
  4291f2:	je     0x4291b5
  4291f4:	sub    eax,0x1
  4291f7:	lea    rax,[rax+rax*4]
  4291fb:	lea    rdi,[rbx+rax*8+0x28]
  429200:	jmp    0x42920b
  429202:	add    rbx,0x28
  429206:	cmp    rbx,rdi
  429209:	je     0x4291c0
  42920b:	mov    r8d,0x8
  429211:	mov    rdx,rsi
  429214:	mov    rcx,rbx
  429217:	call   0x42a3f8
  42921c:	test   eax,eax
  42921e:	jne    0x429202
  429220:	mov    rdi,rbx
  429223:	mov    rax,rdi
  429226:	add    rsp,0x20
  42922a:	pop    rbx
  42922b:	pop    rsi
  42922c:	pop    rdi
  42922d:	ret    
  42922e:	xchg   ax,ax
  429230:	push   rsi
  429231:	push   rbx
  429232:	sub    rsp,0x28
  429236:	mov    rbx,QWORD PTR [rip+0x2b493]        # 0x4546d0
  42923d:	cmp    WORD PTR [rbx],0x5a4d
  429242:	je     0x429250
  429244:	xor    eax,eax
  429246:	add    rsp,0x28
  42924a:	pop    rbx
  42924b:	pop    rsi
  42924c:	ret    
  42924d:	nop    DWORD PTR [rax]
  429250:	mov    rsi,rcx
  429253:	mov    rcx,rbx
  429256:	call   0x429100
  42925b:	test   eax,eax
  42925d:	je     0x429244
  42925f:	sub    rsi,rbx
  429262:	mov    rcx,rbx
  429265:	mov    rdx,rsi
  429268:	add    rsp,0x28
  42926c:	pop    rbx
  42926d:	pop    rsi
  42926e:	jmp    0x429140
  429273:	nop    DWORD PTR [rax]
  429276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429280:	push   rbx
  429281:	sub    rsp,0x20
  429285:	mov    rbx,QWORD PTR [rip+0x2b444]        # 0x4546d0
  42928c:	xor    eax,eax
  42928e:	cmp    WORD PTR [rbx],0x5a4d
  429293:	je     0x4292a0
  429295:	add    rsp,0x20
  429299:	pop    rbx
  42929a:	ret    
  42929b:	nop    DWORD PTR [rax+rax*1+0x0]
  4292a0:	mov    rcx,rbx
  4292a3:	call   0x429100
  4292a8:	test   eax,eax
  4292aa:	je     0x429295
  4292ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4292b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4292b5:	add    rsp,0x20
  4292b9:	pop    rbx
  4292ba:	ret    
  4292bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4292c0:	push   rdi
  4292c1:	push   rsi
  4292c2:	push   rbx
  4292c3:	sub    rsp,0x20
  4292c7:	mov    rsi,QWORD PTR [rip+0x2b402]        # 0x4546d0
  4292ce:	xor    edi,edi
  4292d0:	mov    rbx,rcx
  4292d3:	cmp    WORD PTR [rsi],0x5a4d
  4292d8:	je     0x4292e5
  4292da:	mov    rax,rdi
  4292dd:	add    rsp,0x20
  4292e1:	pop    rbx
  4292e2:	pop    rsi
  4292e3:	pop    rdi
  4292e4:	ret    
  4292e5:	mov    rcx,rsi
  4292e8:	call   0x429100
  4292ed:	test   eax,eax
  4292ef:	je     0x4292da
  4292f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4292f5:	add    rsi,rax
  4292f8:	movzx  eax,WORD PTR [rsi+0x14]
  4292fc:	lea    rdx,[rsi+rax*1+0x18]
  429301:	movzx  eax,WORD PTR [rsi+0x6]
  429305:	test   eax,eax
  429307:	je     0x4292da
  429309:	sub    eax,0x1
  42930c:	lea    rax,[rax+rax*4]
  429310:	lea    rax,[rdx+rax*8+0x28]
  429315:	test   BYTE PTR [rdx+0x27],0x20
  429319:	je     0x429324
  42931b:	test   rbx,rbx
  42931e:	je     0x429340
  429320:	sub    rbx,0x1
  429324:	add    rdx,0x28
  429328:	cmp    rdx,rax
  42932b:	jne    0x429315
  42932d:	xor    edi,edi
  42932f:	mov    rax,rdi
  429332:	add    rsp,0x20
  429336:	pop    rbx
  429337:	pop    rsi
  429338:	pop    rdi
  429339:	ret    
  42933a:	nop    WORD PTR [rax+rax*1+0x0]
  429340:	mov    rdi,rdx
  429343:	mov    rax,rdi
  429346:	add    rsp,0x20
  42934a:	pop    rbx
  42934b:	pop    rsi
  42934c:	pop    rdi
  42934d:	ret    
  42934e:	xchg   ax,ax
  429350:	push   rsi
  429351:	push   rbx
  429352:	sub    rsp,0x28
  429356:	mov    rsi,QWORD PTR [rip+0x2b373]        # 0x4546d0
  42935d:	xor    ebx,ebx
  42935f:	cmp    WORD PTR [rsi],0x5a4d
  429364:	je     0x429370
  429366:	mov    rax,rbx
  429369:	add    rsp,0x28
  42936d:	pop    rbx
  42936e:	pop    rsi
  42936f:	ret    
  429370:	mov    rcx,rsi
  429373:	call   0x429100
  429378:	test   eax,eax
  42937a:	cmovne rbx,rsi
  42937e:	mov    rax,rbx
  429381:	add    rsp,0x28
  429385:	pop    rbx
  429386:	pop    rsi
  429387:	ret    
  429388:	nop    DWORD PTR [rax+rax*1+0x0]
  429390:	push   rsi
  429391:	push   rbx
  429392:	sub    rsp,0x28
  429396:	mov    rbx,QWORD PTR [rip+0x2b333]        # 0x4546d0
  42939d:	xor    eax,eax
  42939f:	cmp    WORD PTR [rbx],0x5a4d
  4293a4:	je     0x4293b0
  4293a6:	add    rsp,0x28
  4293aa:	pop    rbx
  4293ab:	pop    rsi
  4293ac:	ret    
  4293ad:	nop    DWORD PTR [rax]
  4293b0:	mov    rsi,rcx
  4293b3:	mov    rcx,rbx
  4293b6:	call   0x429100
  4293bb:	test   eax,eax
  4293bd:	je     0x4293a6
  4293bf:	sub    rsi,rbx
  4293c2:	mov    rcx,rbx
  4293c5:	mov    rdx,rsi
  4293c8:	call   0x429140
  4293cd:	test   rax,rax
  4293d0:	je     0x4293e1
  4293d2:	mov    eax,DWORD PTR [rax+0x24]
  4293d5:	not    eax
  4293d7:	shr    eax,0x1f
  4293da:	add    rsp,0x28
  4293de:	pop    rbx
  4293df:	pop    rsi
  4293e0:	ret    
  4293e1:	xor    eax,eax
  4293e3:	jmp    0x4293a6
  4293e5:	nop
  4293e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293f0:	push   rbp
  4293f1:	push   rdi
  4293f2:	push   rsi
  4293f3:	push   rbx
  4293f4:	sub    rsp,0x28
  4293f8:	mov    rdi,QWORD PTR [rip+0x2b2d1]        # 0x4546d0
  4293ff:	xor    ebp,ebp
  429401:	mov    esi,ecx
  429403:	cmp    WORD PTR [rdi],0x5a4d
  429408:	je     0x429420
  42940a:	mov    rax,rbp
  42940d:	add    rsp,0x28
  429411:	pop    rbx
  429412:	pop    rsi
  429413:	pop    rdi
  429414:	pop    rbp
  429415:	ret    
  429416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429420:	mov    rcx,rdi
  429423:	call   0x429100
  429428:	test   eax,eax
  42942a:	je     0x42940a
  42942c:	movsxd rax,DWORD PTR [rdi+0x3c]
  429430:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  429437:	test   edx,edx
  429439:	je     0x42940a
  42943b:	mov    ebx,edx
  42943d:	mov    rcx,rdi
  429440:	mov    rdx,rbx
  429443:	call   0x429140
  429448:	test   rax,rax
  42944b:	je     0x42940a
  42944d:	add    rbx,rdi
  429450:	mov    rdx,rbx
  429453:	jne    0x429467
  429455:	jmp    0x42940a
  429457:	nop    WORD PTR [rax+rax*1+0x0]
  429460:	sub    esi,0x1
  429463:	add    rdx,0x14
  429467:	mov    ecx,DWORD PTR [rdx+0x4]
  42946a:	test   ecx,ecx
  42946c:	jne    0x429475
  42946e:	mov    eax,DWORD PTR [rdx+0xc]
  429471:	test   eax,eax
  429473:	je     0x429490
  429475:	test   esi,esi
  429477:	jg     0x429460
  429479:	mov    ebp,DWORD PTR [rdx+0xc]
  42947c:	add    rbp,rdi
  42947f:	mov    rax,rbp
  429482:	add    rsp,0x28
  429486:	pop    rbx
  429487:	pop    rsi
  429488:	pop    rdi
  429489:	pop    rbp
  42948a:	ret    
  42948b:	nop    DWORD PTR [rax+rax*1+0x0]
  429490:	xor    ebp,ebp
  429492:	mov    rax,rbp
  429495:	add    rsp,0x28
  429499:	pop    rbx
  42949a:	pop    rsi
  42949b:	pop    rdi
  42949c:	pop    rbp
  42949d:	ret    
  42949e:	nop
  42949f:	nop
  4294a0:	push   rcx
  4294a1:	push   rax
  4294a2:	cmp    rax,0x1000
  4294a8:	lea    rcx,[rsp+0x18]
  4294ad:	jb     0x4294c8
  4294af:	sub    rcx,0x1000
  4294b6:	or     QWORD PTR [rcx],0x0
  4294ba:	sub    rax,0x1000
  4294c0:	cmp    rax,0x1000
  4294c6:	ja     0x4294af
  4294c8:	sub    rcx,rax
  4294cb:	or     QWORD PTR [rcx],0x0
  4294cf:	pop    rax
  4294d0:	pop    rcx
  4294d1:	ret    
  4294d2:	nop
  4294d3:	nop
  4294d4:	nop
  4294d5:	nop
  4294d6:	nop
  4294d7:	nop
  4294d8:	nop
  4294d9:	nop
  4294da:	nop
  4294db:	nop
  4294dc:	nop
  4294dd:	nop
  4294de:	nop
  4294df:	nop
  4294e0:	push   r13
  4294e2:	push   r12
  4294e4:	push   rbp
  4294e5:	push   rdi
  4294e6:	push   rsi
  4294e7:	push   rbx
  4294e8:	mov    r12d,edx
  4294eb:	mov    ebp,r8d
  4294ee:	mov    edi,edx
  4294f0:	sub    r12d,ecx
  4294f3:	sub    ebp,edx
  4294f5:	mov    eax,r12d
  4294f8:	cdq    
  4294f9:	idiv   ebp
  4294fb:	test   edx,edx
  4294fd:	mov    r13d,edx
  429500:	je     0x429585
  429506:	mov    eax,ebp
  429508:	jmp    0x429513
  42950a:	nop    WORD PTR [rax+rax*1+0x0]
  429510:	mov    r13d,edx
  429513:	cdq    
  429514:	idiv   r13d
  429517:	mov    eax,r13d
  42951a:	test   edx,edx
  42951c:	jne    0x429510
  42951e:	mov    eax,r8d
  429521:	sub    eax,ecx
  429523:	cdq    
  429524:	idiv   r13d
  429527:	test   r13d,r13d
  42952a:	jle    0x42957c
  42952c:	movsxd rdx,edi
  42952f:	xor    esi,esi
  429531:	lea    rdx,[r9+rdx*8]
  429535:	test   eax,eax
  429537:	lea    ecx,[rdi+rsi*1]
  42953a:	jle    0x429573
  42953c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  429540:	xor    r10d,r10d
  429543:	mov    r11d,ecx
  429546:	lea    r8d,[rcx+rbp*1]
  42954a:	sub    r11d,r12d
  42954d:	cmp    edi,ecx
  42954f:	mov    ecx,r11d
  429552:	cmovg  ecx,r8d
  429556:	add    r10d,0x1
  42955a:	movsxd r11,ecx
  42955d:	cmp    r10d,eax
  429560:	lea    r8,[r9+r11*8]
  429564:	mov    r11,QWORD PTR [r8]
  429567:	mov    QWORD PTR [r8],rbx
  42956a:	mov    QWORD PTR [rdx+rsi*8],r11
  42956e:	mov    rbx,r11
  429571:	jne    0x429543
  429573:	add    rsi,0x1
  429577:	cmp    r13d,esi
  42957a:	jg     0x429535
  42957c:	pop    rbx
  42957d:	pop    rsi
  42957e:	pop    rdi
  42957f:	pop    rbp
  429580:	pop    r12
  429582:	pop    r13
  429584:	ret    
  429585:	mov    r13d,ebp
  429588:	jmp    0x42951e
  42958a:	nop    WORD PTR [rax+rax*1+0x0]
  429590:	push   rdi
  429591:	push   rsi
  429592:	push   rbx
  429593:	sub    rsp,0x30
  429597:	mov    rax,QWORD PTR [rip+0x2b142]        # 0x4546e0
  42959e:	mov    QWORD PTR [rsp+0x58],rdx
  4295a3:	mov    QWORD PTR [rsp+0x60],r8
  4295a8:	lea    rsi,[rsp+0x58]
  4295ad:	mov    QWORD PTR [rsp+0x68],r9
  4295b2:	mov    rbx,rcx
  4295b5:	mov    rax,QWORD PTR [rax]
  4295b8:	mov    QWORD PTR [rsp+0x28],rsi
  4295bd:	mov    rax,QWORD PTR [rax]
  4295c0:	mov    rdi,QWORD PTR [rax]
  4295c3:	call   0x42a600
  4295c8:	lea    rdx,[rip+0x2af31]        # 0x454500
  4295cf:	lea    rcx,[rax+0x60]
  4295d3:	mov    r8,rdi
  4295d6:	call   0x42a508
  4295db:	test   rbx,rbx
  4295de:	je     0x4295f4
  4295e0:	call   0x42a600
  4295e5:	lea    rcx,[rax+0x60]
  4295e9:	mov    r8,rsi
  4295ec:	mov    rdx,rbx
  4295ef:	call   0x42a3a8
  4295f4:	call   0x42a600
  4295f9:	lea    rdx,[rax+0x60]
  4295fd:	mov    ecx,0xa
  429602:	call   0x42a500
  429607:	nop
  429608:	add    rsp,0x30
  42960c:	pop    rbx
  42960d:	pop    rsi
  42960e:	pop    rdi
  42960f:	ret    
  429610:	push   r15
  429612:	push   r14
  429614:	push   r13
  429616:	push   r12
  429618:	push   rbp
  429619:	push   rdi
  42961a:	push   rsi
  42961b:	push   rbx
  42961c:	sub    rsp,0x48
  429620:	mov    eax,DWORD PTR [rip+0x2f36]        # 0x42c55c
  429626:	mov    rbp,QWORD PTR [rip+0x2f23]        # 0x42c550
  42962d:	mov    QWORD PTR [rsp+0x90],rcx
  429635:	mov    QWORD PTR [rsp+0x98],rdx
  42963d:	mov    edx,0x3d
  429642:	mov    r14,r8
  429645:	mov    QWORD PTR [rsp+0xa8],r9
  42964d:	mov    r13d,DWORD PTR [rsp+0xb0]
  429655:	mov    DWORD PTR [rsp+0x38],eax
  429659:	mov    rcx,rbp
  42965c:	add    eax,0x1
  42965f:	mov    DWORD PTR [rsp+0x3c],eax
  429663:	mov    DWORD PTR [rip+0x2ef3],eax        # 0x42c55c
  429669:	call   0x42a428
  42966e:	test   rax,rax
  429671:	mov    QWORD PTR [rsp+0x30],rax
  429676:	je     0x429854
  42967c:	mov    rdi,rax
  42967f:	add    rax,0x1
  429683:	sub    rdi,rbp
  429686:	mov    QWORD PTR [rsp+0x30],rax
  42968b:	mov    r15,QWORD PTR [r14]
  42968e:	test   r15,r15
  429691:	je     0x42989b
  429697:	lea    rbx,[r14+0x20]
  42969b:	mov    r12d,0xffffffff
  4296a1:	mov    DWORD PTR [rsp+0x2c],0x0
  4296a9:	xor    esi,esi
  4296ab:	jmp    0x4296c5
  4296ad:	nop    DWORD PTR [rax]
  4296b0:	test   r13d,r13d
  4296b3:	je     0x4296ee
  4296b5:	add    rbx,0x20
  4296b9:	mov    r15,QWORD PTR [rbx-0x20]
  4296bd:	add    esi,0x1
  4296c0:	test   r15,r15
  4296c3:	je     0x429730
  4296c5:	mov    r8,rdi
  4296c8:	mov    rdx,r15
  4296cb:	mov    rcx,rbp
  4296ce:	call   0x42a3f8
  4296d3:	test   eax,eax
  4296d5:	jne    0x4296b5
  4296d7:	mov    rcx,r15
  4296da:	call   0x42a400
  4296df:	cmp    rax,rdi
  4296e2:	je     0x4297dd
  4296e8:	cmp    rdi,0x1
  4296ec:	je     0x4296b0
  4296ee:	cmp    r12d,0xffffffff
  4296f2:	je     0x429790
  4296f8:	movsxd rax,r12d
  4296fb:	shl    rax,0x5
  4296ff:	add    rax,r14
  429702:	mov    edx,DWORD PTR [rax+0x8]
  429705:	cmp    DWORD PTR [rbx-0x18],edx
  429708:	je     0x4297a0
  42970e:	add    rbx,0x20
  429712:	mov    r15,QWORD PTR [rbx-0x20]
  429716:	add    esi,0x1
  429719:	mov    DWORD PTR [rsp+0x2c],0x1
  429721:	test   r15,r15
  429724:	jne    0x4296c5
  429726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429730:	mov    r9d,DWORD PTR [rsp+0x2c]
  429735:	test   r9d,r9d
  429738:	je     0x4297d0
  42973e:	mov    r8d,DWORD PTR [rip+0x2e1b]        # 0x42c560
  429745:	test   r8d,r8d
  429748:	je     0x429768
  42974a:	mov    rax,QWORD PTR [rsp+0x98]
  429752:	cmp    BYTE PTR [rax],0x3a
  429755:	je     0x429768
  429757:	lea    rcx,[rip+0x2ae32]        # 0x454590
  42975e:	mov    r8,rbp
  429761:	mov    edx,edi
  429763:	call   0x429590
  429768:	mov    DWORD PTR [rip+0x2de6],0x0        # 0x42c558
  429772:	mov    eax,0x3f
  429777:	add    rsp,0x48
  42977b:	pop    rbx
  42977c:	pop    rsi
  42977d:	pop    rdi
  42977e:	pop    rbp
  42977f:	pop    r12
  429781:	pop    r13
  429783:	pop    r14
  429785:	pop    r15
  429787:	ret    
  429788:	nop    DWORD PTR [rax+rax*1+0x0]
  429790:	mov    r12d,esi
  429793:	jmp    0x4296b5
  429798:	nop    DWORD PTR [rax+rax*1+0x0]
  4297a0:	mov    rdx,QWORD PTR [rax+0x10]
  4297a4:	cmp    QWORD PTR [rbx-0x10],rdx
  4297a8:	jne    0x42970e
  4297ae:	mov    eax,DWORD PTR [rax+0x18]
  4297b1:	cmp    DWORD PTR [rbx-0x8],eax
  4297b4:	mov    eax,0x1
  4297b9:	cmove  eax,DWORD PTR [rsp+0x2c]
  4297be:	mov    DWORD PTR [rsp+0x2c],eax
  4297c2:	jmp    0x4296b5
  4297c7:	nop    WORD PTR [rax+rax*1+0x0]
  4297d0:	cmp    r12d,0xffffffff
  4297d4:	je     0x42989b
  4297da:	mov    esi,r12d
  4297dd:	movsxd rax,esi
  4297e0:	shl    rax,0x5
  4297e4:	add    r14,rax
  4297e7:	cmp    QWORD PTR [rsp+0x30],0x0
  4297ed:	mov    eax,DWORD PTR [r14+0x8]
  4297f1:	setne  cl
  4297f4:	je     0x429864
  4297f6:	test   eax,eax
  4297f8:	jne    0x429864
  4297fa:	mov    ecx,DWORD PTR [rip+0x2d60]        # 0x42c560
  429800:	test   ecx,ecx
  429802:	jne    0x429834
  429804:	cmp    QWORD PTR [r14+0x10],0x0
  429809:	je     0x429964
  42980f:	mov    DWORD PTR [rip+0x2d3f],0x0        # 0x42c558
  429819:	mov    rax,QWORD PTR [rsp+0x98]
  429821:	cmp    BYTE PTR [rax],0x3a
  429824:	je     0x429951
  42982a:	mov    eax,0x3f
  42982f:	jmp    0x429777
  429834:	mov    rax,QWORD PTR [rsp+0x98]
  42983c:	cmp    BYTE PTR [rax],0x3a
  42983f:	je     0x429804
  429841:	lea    rcx,[rip+0x2ad18]        # 0x454560
  429848:	mov    r8,rbp
  42984b:	mov    edx,edi
  42984d:	call   0x429590
  429852:	jmp    0x429804
  429854:	mov    rcx,rbp
  429857:	call   0x42a400
  42985c:	mov    rdi,rax
  42985f:	jmp    0x42968b
  429864:	lea    edx,[rax-0x1]
  429867:	cmp    edx,0x1
  42986a:	jbe    0x4298d7
  42986c:	cmp    QWORD PTR [rsp+0xa8],0x0
  429875:	je     0x429881
  429877:	mov    rax,QWORD PTR [rsp+0xa8]
  42987f:	mov    DWORD PTR [rax],esi
  429881:	mov    rax,QWORD PTR [r14+0x10]
  429885:	test   rax,rax
  429888:	je     0x42995b
  42988e:	mov    edx,DWORD PTR [r14+0x18]
  429892:	mov    DWORD PTR [rax],edx
  429894:	xor    eax,eax
  429896:	jmp    0x429777
  42989b:	test   r13d,r13d
  42989e:	jne    0x4299b2
  4298a4:	mov    eax,DWORD PTR [rip+0x2cb6]        # 0x42c560
  4298aa:	test   eax,eax
  4298ac:	je     0x429768
  4298b2:	mov    rax,QWORD PTR [rsp+0x98]
  4298ba:	cmp    BYTE PTR [rax],0x3a
  4298bd:	je     0x429768
  4298c3:	lea    rcx,[rip+0x2ac56]        # 0x454520
  4298ca:	mov    rdx,rbp
  4298cd:	call   0x429590
  4298d2:	jmp    0x429768
  4298d7:	test   cl,cl
  4298d9:	je     0x429973
  4298df:	mov    rdx,QWORD PTR [rsp+0x30]
  4298e4:	cmp    eax,0x1
  4298e7:	mov    QWORD PTR [rip+0x31932],rdx        # 0x45b220
  4298ee:	jne    0x42986c
  4298f4:	mov    r15,QWORD PTR [rsp+0x30]
  4298f9:	test   r15,r15
  4298fc:	jne    0x42986c
  429902:	mov    edx,DWORD PTR [rip+0x2c58]        # 0x42c560
  429908:	test   edx,edx
  42990a:	je     0x429928
  42990c:	mov    rax,QWORD PTR [rsp+0x98]
  429914:	cmp    BYTE PTR [rax],0x3a
  429917:	je     0x429928
  429919:	lea    rcx,[rip+0x2aca0]        # 0x4545c0
  429920:	mov    rdx,rbp
  429923:	call   0x429590
  429928:	cmp    QWORD PTR [r14+0x10],0x0
  42992d:	je     0x4299a6
  42992f:	mov    DWORD PTR [rip+0x2c1f],0x0        # 0x42c558
  429939:	mov    rax,QWORD PTR [rsp+0x98]
  429941:	sub    DWORD PTR [rip+0x2c14],0x1        # 0x42c55c
  429948:	cmp    BYTE PTR [rax],0x3a
  42994b:	jne    0x42982a
  429951:	mov    eax,0x3a
  429956:	jmp    0x429777
  42995b:	mov    eax,DWORD PTR [r14+0x18]
  42995f:	jmp    0x429777
  429964:	mov    eax,DWORD PTR [r14+0x18]
  429968:	mov    DWORD PTR [rip+0x2bea],eax        # 0x42c558
  42996e:	jmp    0x429819
  429973:	cmp    eax,0x1
  429976:	jne    0x42986c
  42997c:	mov    eax,DWORD PTR [rsp+0x38]
  429980:	mov    rdx,QWORD PTR [rsp+0x90]
  429988:	add    eax,0x2
  42998b:	mov    DWORD PTR [rip+0x2bcb],eax        # 0x42c55c
  429991:	movsxd rax,DWORD PTR [rsp+0x3c]
  429996:	mov    r15,QWORD PTR [rdx+rax*8]
  42999a:	mov    QWORD PTR [rip+0x3187f],r15        # 0x45b220
  4299a1:	jmp    0x4298f9
  4299a6:	mov    eax,DWORD PTR [r14+0x18]
  4299aa:	mov    DWORD PTR [rip+0x2ba8],eax        # 0x42c558
  4299b0:	jmp    0x429939
  4299b2:	mov    eax,DWORD PTR [rsp+0x38]
  4299b6:	mov    DWORD PTR [rip+0x2ba0],eax        # 0x42c55c
  4299bc:	mov    eax,0xffffffff
  4299c1:	jmp    0x429777
  4299c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4299d0:	push   r15
  4299d2:	push   r14
  4299d4:	push   r13
  4299d6:	push   r12
  4299d8:	push   rbp
  4299d9:	push   rdi
  4299da:	push   rsi
  4299db:	push   rbx
  4299dc:	sub    rsp,0x38
  4299e0:	test   r8,r8
  4299e3:	mov    edi,ecx
  4299e5:	mov    r15,rdx
  4299e8:	mov    QWORD PTR [rsp+0x90],r8
  4299f0:	mov    QWORD PTR [rsp+0x98],r9
  4299f8:	je     0x429cce
  4299fe:	mov    r9d,DWORD PTR [rip+0x2b57]        # 0x42c55c
  429a05:	test   r9d,r9d
  429a08:	je     0x429c60
  429a0e:	cmp    DWORD PTR [rip+0x2b2b],0xffffffff        # 0x42c540
  429a15:	je     0x429bd4
  429a1b:	mov    edx,DWORD PTR [rip+0x31807]        # 0x45b228
  429a21:	test   edx,edx
  429a23:	jne    0x429bd4
  429a29:	mov    rax,QWORD PTR [rsp+0x90]
  429a31:	movzx  eax,BYTE PTR [rax]
  429a34:	cmp    al,0x2d
  429a36:	je     0x429c08
  429a3c:	cmp    al,0x2b
  429a3e:	je     0x429ce4
  429a44:	mov    r8d,DWORD PTR [rip+0x2af5]        # 0x42c540
  429a4b:	test   r8d,r8d
  429a4e:	jne    0x429ce4
  429a54:	sub    eax,0x2b
  429a57:	test   al,0xfd
  429a59:	je     0x429c10
  429a5f:	test   edx,edx
  429a61:	mov    QWORD PTR [rip+0x317b4],0x0        # 0x45b220
  429a6c:	jne    0x429c40
  429a72:	mov    r14d,DWORD PTR [rsp+0xa8]
  429a7a:	mov    ebp,DWORD PTR [rsp+0xa8]
  429a81:	and    r14d,0x2
  429a85:	and    ebp,0x1
  429a88:	jmp    0x429b0e
  429a8d:	nop    DWORD PTR [rax]
  429a90:	lea    rax,[rip+0x2aa7e]        # 0x454515
  429a97:	test   r14d,r14d
  429a9a:	mov    edx,r14d
  429a9d:	mov    QWORD PTR [rip+0x2aac],rax        # 0x42c550
  429aa4:	jne    0x429db0
  429aaa:	test   ebp,ebp
  429aac:	je     0x429cce
  429ab2:	mov    r12d,DWORD PTR [rip+0x2a8f]        # 0x42c548
  429ab9:	cmp    r12d,0xffffffff
  429abd:	je     0x429c30
  429ac3:	mov    r13d,DWORD PTR [rip+0x2a7a]        # 0x42c544
  429aca:	cmp    r13d,0xffffffff
  429ace:	je     0x429b05
  429ad0:	mov    edx,r13d
  429ad3:	mov    r9,r15
  429ad6:	mov    r8d,ebx
  429ad9:	mov    ecx,r12d
  429adc:	call   0x4294e0
  429ae1:	mov    esi,DWORD PTR [rip+0x2a75]        # 0x42c55c
  429ae7:	mov    eax,r12d
  429aea:	mov    edx,DWORD PTR [rip+0x31738]        # 0x45b228
  429af0:	sub    eax,r13d
  429af3:	mov    DWORD PTR [rip+0x2a47],0xffffffff        # 0x42c544
  429afd:	add    eax,esi
  429aff:	mov    DWORD PTR [rip+0x2a43],eax        # 0x42c548
  429b05:	add    esi,0x1
  429b08:	mov    DWORD PTR [rip+0x2a4e],esi        # 0x42c55c
  429b0e:	test   edx,edx
  429b10:	jne    0x429b24
  429b12:	mov    rsi,QWORD PTR [rip+0x2a37]        # 0x42c550
  429b19:	movzx  eax,BYTE PTR [rsi]
  429b1c:	test   al,al
  429b1e:	jne    0x429d1e
  429b24:	movsxd rbx,DWORD PTR [rip+0x2a31]        # 0x42c55c
  429b2b:	mov    DWORD PTR [rip+0x316f3],0x0        # 0x45b228
  429b35:	cmp    ebx,edi
  429b37:	mov    esi,ebx
  429b39:	jge    0x429c80
  429b3f:	movsxd rax,ebx
  429b42:	mov    r13,QWORD PTR [r15+rax*8]
  429b46:	cmp    BYTE PTR [r13+0x0],0x2d
  429b4b:	mov    QWORD PTR [rip+0x29fe],r13        # 0x42c550
  429b52:	jne    0x429a90
  429b58:	movzx  eax,BYTE PTR [r13+0x1]
  429b5d:	test   al,al
  429b5f:	jne    0x429cf1
  429b65:	mov    rcx,QWORD PTR [rsp+0x90]
  429b6d:	mov    edx,0x2d
  429b72:	call   0x42a428
  429b77:	test   rax,rax
  429b7a:	je     0x429a90
  429b80:	cmp    DWORD PTR [rip+0x29c1],0xffffffff        # 0x42c548
  429b87:	mov    rsi,r13
  429b8a:	je     0x429ba4
  429b8c:	cmp    DWORD PTR [rip+0x29b1],0xffffffff        # 0x42c544
  429b93:	mov    eax,0x2d
  429b98:	jne    0x429d1e
  429b9e:	mov    DWORD PTR [rip+0x29a0],ebx        # 0x42c544
  429ba4:	cmp    QWORD PTR [rsp+0x98],0x0
  429bad:	je     0x429f9c
  429bb3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  429bb7:	mov    eax,0x2d
  429bbc:	je     0x429dee
  429bc2:	add    rsi,0x1
  429bc6:	xor    edx,edx
  429bc8:	mov    QWORD PTR [rip+0x2981],rsi        # 0x42c550
  429bcf:	jmp    0x429d72
  429bd4:	lea    rcx,[rip+0x2a92a]        # 0x454505
  429bdb:	call   0x42a4d0
  429be0:	test   rax,rax
  429be3:	mov    edx,DWORD PTR [rip+0x3163f]        # 0x45b228
  429be9:	setne  al
  429bec:	movzx  eax,al
  429bef:	mov    DWORD PTR [rip+0x294b],eax        # 0x42c540
  429bf5:	mov    rax,QWORD PTR [rsp+0x90]
  429bfd:	movzx  eax,BYTE PTR [rax]
  429c00:	cmp    al,0x2d
  429c02:	jne    0x429a3c
  429c08:	or     DWORD PTR [rsp+0xa8],0x2
  429c10:	add    QWORD PTR [rsp+0x90],0x1
  429c19:	test   edx,edx
  429c1b:	mov    QWORD PTR [rip+0x315fa],0x0        # 0x45b220
  429c26:	je     0x429a72
  429c2c:	jmp    0x429c40
  429c2e:	xchg   ax,ax
  429c30:	mov    DWORD PTR [rip+0x2912],ebx        # 0x42c548
  429c36:	jmp    0x429b05
  429c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  429c40:	mov    DWORD PTR [rip+0x28fa],0xffffffff        # 0x42c544
  429c4a:	mov    DWORD PTR [rip+0x28f4],0xffffffff        # 0x42c548
  429c54:	jmp    0x429a72
  429c59:	nop    DWORD PTR [rax+0x0]
  429c60:	mov    DWORD PTR [rip+0x315be],0x1        # 0x45b228
  429c6a:	mov    DWORD PTR [rip+0x28e8],0x1        # 0x42c55c
  429c74:	jmp    0x429a0e
  429c79:	nop    DWORD PTR [rax+0x0]
  429c80:	mov    esi,DWORD PTR [rip+0x28be]        # 0x42c544
  429c86:	lea    rax,[rip+0x2a888]        # 0x454515
  429c8d:	mov    QWORD PTR [rip+0x28bc],rax        # 0x42c550
  429c94:	cmp    esi,0xffffffff
  429c97:	je     0x429dca
  429c9d:	mov    edi,DWORD PTR [rip+0x28a5]        # 0x42c548
  429ca3:	mov    r9,r15
  429ca6:	mov    r8d,ebx
  429ca9:	mov    edx,esi
  429cab:	mov    ecx,edi
  429cad:	sub    edi,esi
  429caf:	call   0x4294e0
  429cb4:	add    DWORD PTR [rip+0x28a2],edi        # 0x42c55c
  429cba:	mov    DWORD PTR [rip+0x2880],0xffffffff        # 0x42c544
  429cc4:	mov    DWORD PTR [rip+0x287a],0xffffffff        # 0x42c548
  429cce:	mov    eax,0xffffffff
  429cd3:	add    rsp,0x38
  429cd7:	pop    rbx
  429cd8:	pop    rsi
  429cd9:	pop    rdi
  429cda:	pop    rbp
  429cdb:	pop    r12
  429cdd:	pop    r13
  429cdf:	pop    r14
  429ce1:	pop    r15
  429ce3:	ret    
  429ce4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  429cec:	jmp    0x429a54
  429cf1:	mov    ebp,DWORD PTR [rip+0x2851]        # 0x42c548
  429cf7:	cmp    ebp,0xffffffff
  429cfa:	je     0x429d0b
  429cfc:	cmp    DWORD PTR [rip+0x2841],0xffffffff        # 0x42c544
  429d03:	jne    0x429d0b
  429d05:	mov    DWORD PTR [rip+0x2839],ebx        # 0x42c544
  429d0b:	lea    rsi,[r13+0x1]
  429d0f:	cmp    al,0x2d
  429d11:	mov    QWORD PTR [rip+0x2838],rsi        # 0x42c550
  429d18:	je     0x429ecf
  429d1e:	cmp    QWORD PTR [rsp+0x98],0x0
  429d27:	je     0x429dee
  429d2d:	movsxd rdx,DWORD PTR [rip+0x2828]        # 0x42c55c
  429d34:	cmp    rsi,QWORD PTR [r15+rdx*8]
  429d38:	je     0x429dee
  429d3e:	cmp    al,0x2d
  429d40:	je     0x429bc2
  429d46:	test   BYTE PTR [rsp+0xa8],0x4
  429d4e:	je     0x429dee
  429d54:	xor    edx,edx
  429d56:	cmp    al,0x3a
  429d58:	je     0x429d72
  429d5a:	mov    rcx,QWORD PTR [rsp+0x90]
  429d62:	movsx  edx,al
  429d65:	call   0x42a428
  429d6a:	xor    edx,edx
  429d6c:	test   rax,rax
  429d6f:	setne  dl
  429d72:	mov    DWORD PTR [rsp+0x20],edx
  429d76:	mov    r9,QWORD PTR [rsp+0xa0]
  429d7e:	mov    rcx,r15
  429d81:	mov    r8,QWORD PTR [rsp+0x98]
  429d89:	mov    rdx,QWORD PTR [rsp+0x90]
  429d91:	call   0x429610
  429d96:	cmp    eax,0xffffffff
  429d99:	je     0x429de4
  429d9b:	lea    rcx,[rip+0x2a773]        # 0x454515
  429da2:	mov    QWORD PTR [rip+0x27a7],rcx        # 0x42c550
  429da9:	jmp    0x429cd3
  429dae:	xchg   ax,ax
  429db0:	add    ebx,0x1
  429db3:	mov    QWORD PTR [rip+0x31466],r13        # 0x45b220
  429dba:	mov    eax,0x1
  429dbf:	mov    DWORD PTR [rip+0x2797],ebx        # 0x42c55c
  429dc5:	jmp    0x429cd3
  429dca:	mov    eax,DWORD PTR [rip+0x2778]        # 0x42c548
  429dd0:	cmp    eax,0xffffffff
  429dd3:	je     0x429cba
  429dd9:	mov    DWORD PTR [rip+0x277d],eax        # 0x42c55c
  429ddf:	jmp    0x429cba
  429de4:	mov    rsi,QWORD PTR [rip+0x2765]        # 0x42c550
  429deb:	movzx  eax,BYTE PTR [rsi]
  429dee:	lea    rbp,[rsi+0x1]
  429df2:	movsx  ebx,al
  429df5:	cmp    ebx,0x3a
  429df8:	mov    QWORD PTR [rip+0x2751],rbp        # 0x42c550
  429dff:	je     0x429e64
  429e01:	cmp    ebx,0x2d
  429e04:	je     0x429fa7
  429e0a:	mov    rcx,QWORD PTR [rsp+0x90]
  429e12:	mov    edx,ebx
  429e14:	call   0x42a428
  429e19:	test   rax,rax
  429e1c:	je     0x429e64
  429e1e:	cmp    ebx,0x57
  429e21:	jne    0x429ec6
  429e27:	cmp    QWORD PTR [rsp+0x98],0x0
  429e30:	je     0x429ec6
  429e36:	movzx  edx,BYTE PTR [rax+0x1]
  429e3a:	cmp    dl,0x3b
  429e3d:	je     0x429f20
  429e43:	cmp    dl,0x3a
  429e46:	je     0x429fbb
  429e4c:	cmp    BYTE PTR [rsi+0x1],0x0
  429e50:	mov    eax,ebx
  429e52:	jne    0x429cd3
  429e58:	add    DWORD PTR [rip+0x26fd],0x1        # 0x42c55c
  429e5f:	jmp    0x429cd3
  429e64:	cmp    BYTE PTR [rsi+0x1],0x0
  429e68:	jne    0x429e71
  429e6a:	add    DWORD PTR [rip+0x26eb],0x1        # 0x42c55c
  429e71:	mov    ecx,DWORD PTR [rip+0x26e9]        # 0x42c560
  429e77:	test   ecx,ecx
  429e79:	je     0x429e96
  429e7b:	mov    rax,QWORD PTR [rsp+0x90]
  429e83:	cmp    BYTE PTR [rax],0x3a
  429e86:	je     0x429e96
  429e88:	lea    rcx,[rip+0x2a6b1]        # 0x454540
  429e8f:	mov    edx,ebx
  429e91:	call   0x429590
  429e96:	mov    DWORD PTR [rip+0x26bc],ebx        # 0x42c558
  429e9c:	mov    eax,0x3f
  429ea1:	jmp    0x429cd3
  429ea6:	mov    rcx,QWORD PTR [rsp+0x90]
  429eae:	mov    edx,0x2d
  429eb3:	call   0x42a428
  429eb8:	test   rax,rax
  429ebb:	je     0x429cce
  429ec1:	mov    ebx,0x2d
  429ec6:	movzx  edx,BYTE PTR [rax+0x1]
  429eca:	jmp    0x429e43
  429ecf:	cmp    BYTE PTR [r13+0x2],0x0
  429ed4:	jne    0x429ba4
  429eda:	mov    esi,DWORD PTR [rip+0x2664]        # 0x42c544
  429ee0:	lea    r8d,[rbx+0x1]
  429ee4:	lea    rax,[rip+0x2a62a]        # 0x454515
  429eeb:	mov    DWORD PTR [rip+0x266a],r8d        # 0x42c55c
  429ef2:	mov    QWORD PTR [rip+0x2657],rax        # 0x42c550
  429ef9:	cmp    esi,0xffffffff
  429efc:	je     0x429cba
  429f02:	mov    ecx,ebp
  429f04:	mov    r9,r15
  429f07:	mov    edx,esi
  429f09:	call   0x4294e0
  429f0e:	sub    ebp,esi
  429f10:	add    DWORD PTR [rip+0x2646],ebp        # 0x42c55c
  429f16:	jmp    0x429cba
  429f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  429f20:	cmp    BYTE PTR [rsi+0x1],0x0
  429f24:	jne    0x42a075
  429f2a:	mov    eax,DWORD PTR [rip+0x262c]        # 0x42c55c
  429f30:	add    eax,0x1
  429f33:	cmp    edi,eax
  429f35:	mov    DWORD PTR [rip+0x2621],eax        # 0x42c55c
  429f3b:	jg     0x42a068
  429f41:	mov    edx,DWORD PTR [rip+0x2619]        # 0x42c560
  429f47:	lea    rax,[rip+0x2a5c7]        # 0x454515
  429f4e:	mov    QWORD PTR [rip+0x25fb],rax        # 0x42c550
  429f55:	test   edx,edx
  429f57:	je     0x429f77
  429f59:	mov    rax,QWORD PTR [rsp+0x90]
  429f61:	cmp    BYTE PTR [rax],0x3a
  429f64:	je     0x429f77
  429f66:	lea    rcx,[rip+0x2a693]        # 0x454600
  429f6d:	mov    edx,0x57
  429f72:	call   0x429590
  429f77:	mov    rax,QWORD PTR [rsp+0x90]
  429f7f:	mov    DWORD PTR [rip+0x25cf],0x57        # 0x42c558
  429f89:	cmp    BYTE PTR [rax],0x3a
  429f8c:	je     0x42a05e
  429f92:	mov    eax,0x3f
  429f97:	jmp    0x429cd3
  429f9c:	lea    rbp,[rsi+0x1]
  429fa0:	mov    QWORD PTR [rip+0x25a9],rbp        # 0x42c550
  429fa7:	cmp    BYTE PTR [rsi+0x1],0x0
  429fab:	je     0x429ea6
  429fb1:	mov    ebx,0x2d
  429fb6:	jmp    0x429e71
  429fbb:	mov    QWORD PTR [rip+0x3125a],0x0        # 0x45b220
  429fc6:	cmp    BYTE PTR [rsi+0x1],0x0
  429fca:	je     0x429ff7
  429fcc:	mov    eax,DWORD PTR [rip+0x258a]        # 0x42c55c
  429fd2:	mov    QWORD PTR [rip+0x31247],rbp        # 0x45b220
  429fd9:	lea    rcx,[rip+0x2a535]        # 0x454515
  429fe0:	add    eax,0x1
  429fe3:	mov    DWORD PTR [rip+0x2573],eax        # 0x42c55c
  429fe9:	mov    eax,ebx
  429feb:	mov    QWORD PTR [rip+0x255e],rcx        # 0x42c550
  429ff2:	jmp    0x429cd3
  429ff7:	cmp    BYTE PTR [rax+0x2],0x3a
  429ffb:	mov    eax,DWORD PTR [rip+0x255b]        # 0x42c55c
  42a001:	je     0x429fd9
  42a003:	add    eax,0x1
  42a006:	cmp    edi,eax
  42a008:	mov    DWORD PTR [rip+0x254e],eax        # 0x42c55c
  42a00e:	jg     0x42a0a2
  42a014:	lea    rax,[rip+0x2a4fa]        # 0x454515
  42a01b:	mov    QWORD PTR [rip+0x252e],rax        # 0x42c550
  42a022:	mov    eax,DWORD PTR [rip+0x2538]        # 0x42c560
  42a028:	test   eax,eax
  42a02a:	je     0x42a047
  42a02c:	mov    rax,QWORD PTR [rsp+0x90]
  42a034:	cmp    BYTE PTR [rax],0x3a
  42a037:	je     0x42a047
  42a039:	lea    rcx,[rip+0x2a5c0]        # 0x454600
  42a040:	mov    edx,ebx
  42a042:	call   0x429590
  42a047:	mov    rax,QWORD PTR [rsp+0x90]
  42a04f:	mov    DWORD PTR [rip+0x2503],ebx        # 0x42c558
  42a055:	cmp    BYTE PTR [rax],0x3a
  42a058:	jne    0x429f92
  42a05e:	mov    eax,0x3a
  42a063:	jmp    0x429cd3
  42a068:	cdqe   
  42a06a:	mov    rax,QWORD PTR [r15+rax*8]
  42a06e:	mov    QWORD PTR [rip+0x24db],rax        # 0x42c550
  42a075:	mov    r9,QWORD PTR [rsp+0xa0]
  42a07d:	mov    r8,QWORD PTR [rsp+0x98]
  42a085:	mov    rcx,r15
  42a088:	mov    rdx,QWORD PTR [rsp+0x90]
  42a090:	mov    DWORD PTR [rsp+0x20],0x0
  42a098:	call   0x429610
  42a09d:	jmp    0x429d9b
  42a0a2:	movsxd rdx,eax
  42a0a5:	mov    rdx,QWORD PTR [r15+rdx*8]
  42a0a9:	mov    QWORD PTR [rip+0x31170],rdx        # 0x45b220
  42a0b0:	jmp    0x429fd9
  42a0b5:	nop
  42a0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0c0:	sub    rsp,0x38
  42a0c4:	xor    r9d,r9d
  42a0c7:	mov    DWORD PTR [rsp+0x28],0x0
  42a0cf:	mov    QWORD PTR [rsp+0x20],0x0
  42a0d8:	call   0x4299d0
  42a0dd:	add    rsp,0x38
  42a0e1:	ret    
  42a0e2:	nop    DWORD PTR [rax+0x0]
  42a0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0f0:	sub    rsp,0x38
  42a0f4:	mov    rax,QWORD PTR [rsp+0x60]
  42a0f9:	mov    DWORD PTR [rsp+0x28],0x1
  42a101:	mov    QWORD PTR [rsp+0x20],rax
  42a106:	call   0x4299d0
  42a10b:	add    rsp,0x38
  42a10f:	ret    
  42a110:	sub    rsp,0x38
  42a114:	mov    rax,QWORD PTR [rsp+0x60]
  42a119:	mov    DWORD PTR [rsp+0x28],0x5
  42a121:	mov    QWORD PTR [rsp+0x20],rax
  42a126:	call   0x4299d0
  42a12b:	add    rsp,0x38
  42a12f:	ret    
  42a130:	push   r12
  42a132:	push   rbp
  42a133:	push   rdi
  42a134:	push   rsi
  42a135:	push   rbx
  42a136:	sub    rsp,0x60
  42a13a:	test   rcx,rcx
  42a13d:	mov    rsi,rcx
  42a140:	mov    rbx,rdx
  42a143:	je     0x42a192
  42a145:	movzx  ebp,BYTE PTR [rcx]
  42a148:	test   bpl,bpl
  42a14b:	je     0x42a192
  42a14d:	call   0x42a400
  42a152:	cmp    eax,0x1
  42a155:	mov    rdi,rax
  42a158:	jle    0x42a192
  42a15a:	lea    eax,[rax-0x2]
  42a15d:	cmp    eax,0x1
  42a160:	jbe    0x42a2f0
  42a166:	cmp    bpl,0x2f
  42a16a:	je     0x42a214
  42a170:	cmp    bpl,0x5c
  42a174:	je     0x42a214
  42a17a:	movsxd rbp,edi
  42a17d:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  42a182:	cmp    al,0x5c
  42a184:	je     0x42a2a0
  42a18a:	cmp    al,0x2f
  42a18c:	je     0x42a2a0
  42a192:	lea    rdx,[rsp+0x20]
  42a197:	mov    rcx,rsi
  42a19a:	call   0x42a3a0
  42a19f:	mov    ebp,eax
  42a1a1:	cmp    ebp,0xffffffff
  42a1a4:	je     0x42a320
  42a1aa:	mov    eax,DWORD PTR [rsp+0x20]
  42a1ae:	mov    DWORD PTR [rbx],eax
  42a1b0:	movzx  eax,WORD PTR [rsp+0x24]
  42a1b5:	mov    WORD PTR [rbx+0x4],ax
  42a1b9:	movzx  eax,WORD PTR [rsp+0x26]
  42a1be:	mov    WORD PTR [rbx+0x6],ax
  42a1c2:	movzx  eax,WORD PTR [rsp+0x28]
  42a1c7:	mov    WORD PTR [rbx+0x8],ax
  42a1cb:	movzx  eax,WORD PTR [rsp+0x2a]
  42a1d0:	mov    WORD PTR [rbx+0xa],ax
  42a1d4:	movzx  eax,WORD PTR [rsp+0x2c]
  42a1d9:	mov    WORD PTR [rbx+0xc],ax
  42a1dd:	mov    eax,DWORD PTR [rsp+0x30]
  42a1e1:	mov    DWORD PTR [rbx+0x10],eax
  42a1e4:	mov    rax,QWORD PTR [rsp+0x38]
  42a1e9:	mov    DWORD PTR [rbx+0x14],eax
  42a1ec:	mov    rax,QWORD PTR [rsp+0x40]
  42a1f1:	mov    QWORD PTR [rbx+0x18],rax
  42a1f5:	mov    rax,QWORD PTR [rsp+0x48]
  42a1fa:	mov    QWORD PTR [rbx+0x20],rax
  42a1fe:	mov    rax,QWORD PTR [rsp+0x50]
  42a203:	mov    QWORD PTR [rbx+0x28],rax
  42a207:	mov    eax,ebp
  42a209:	add    rsp,0x60
  42a20d:	pop    rbx
  42a20e:	pop    rsi
  42a20f:	pop    rdi
  42a210:	pop    rbp
  42a211:	pop    r12
  42a213:	ret    
  42a214:	movzx  eax,BYTE PTR [rsi+0x1]
  42a218:	cmp    al,0x2f
  42a21a:	je     0x42a224
  42a21c:	cmp    al,0x5c
  42a21e:	jne    0x42a17a
  42a224:	movzx  ecx,BYTE PTR [rsi+0x2]
  42a228:	lea    rdx,[rsi+0x2]
  42a22c:	cmp    cl,0x5c
  42a22f:	jne    0x42a250
  42a231:	jmp    0x42a300
  42a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a240:	add    rdx,0x1
  42a244:	movzx  ecx,BYTE PTR [rdx]
  42a247:	cmp    cl,0x5c
  42a24a:	je     0x42a300
  42a250:	test   cl,cl
  42a252:	je     0x42a300
  42a258:	cmp    cl,0x2f
  42a25b:	jne    0x42a240
  42a25d:	add    rdx,0x1
  42a261:	movzx  eax,BYTE PTR [rdx]
  42a264:	test   al,al
  42a266:	je     0x42a192
  42a26c:	cmp    al,0x5c
  42a26e:	je     0x42a291
  42a270:	cmp    al,0x2f
  42a272:	je     0x42a291
  42a274:	add    rdx,0x1
  42a278:	movzx  ecx,BYTE PTR [rdx]
  42a27b:	cmp    cl,0x5c
  42a27e:	je     0x42a310
  42a284:	test   cl,cl
  42a286:	je     0x42a310
  42a28c:	cmp    cl,0x2f
  42a28f:	jne    0x42a274
  42a291:	cmp    BYTE PTR [rdx+0x1],0x0
  42a295:	jne    0x42a17a
  42a29b:	jmp    0x42a192
  42a2a0:	mov    rcx,rbp
  42a2a3:	call   0x42a4a0
  42a2a8:	lea    r8d,[rdi-0x1]
  42a2ac:	mov    rdx,rsi
  42a2af:	mov    rcx,rax
  42a2b2:	mov    r12,rax
  42a2b5:	movsxd r8,r8d
  42a2b8:	call   0x42a490
  42a2bd:	lea    rdx,[rsp+0x20]
  42a2c2:	mov    rcx,r12
  42a2c5:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  42a2cb:	call   0x42a3a0
  42a2d0:	cmp    rsi,r12
  42a2d3:	mov    ebp,eax
  42a2d5:	je     0x42a1a1
  42a2db:	mov    rcx,r12
  42a2de:	call   0x42a4e8
  42a2e3:	jmp    0x42a1a1
  42a2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2f0:	cmp    BYTE PTR [rsi+0x1],0x3a
  42a2f4:	jne    0x42a166
  42a2fa:	jmp    0x42a192
  42a2ff:	nop
  42a300:	test   cl,cl
  42a302:	je     0x42a261
  42a308:	jmp    0x42a25d
  42a30d:	nop    DWORD PTR [rax]
  42a310:	test   cl,cl
  42a312:	je     0x42a192
  42a318:	jmp    0x42a291
  42a31d:	nop    DWORD PTR [rax]
  42a320:	lea    rdi,[rbx+0x8]
  42a324:	mov    QWORD PTR [rbx],0x0
  42a32b:	mov    QWORD PTR [rbx+0x28],0x0
  42a333:	xor    eax,eax
  42a335:	and    rdi,0xfffffffffffffff8
  42a339:	sub    rbx,rdi
  42a33c:	lea    ecx,[rbx+0x30]
  42a33f:	shr    ecx,0x3
  42a342:	rep stos QWORD PTR es:[rdi],rax
  42a345:	jmp    0x42a207
  42a34a:	nop
  42a34b:	nop
  42a34c:	nop
  42a34d:	nop
  42a34e:	nop
  42a34f:	nop
  42a350:	jmp    QWORD PTR [rip+0x32b1e]        # 0x45ce74
  42a356:	nop
  42a357:	nop
  42a358:	jmp    QWORD PTR [rip+0x32b0e]        # 0x45ce6c
  42a35e:	nop
  42a35f:	nop
  42a360:	jmp    QWORD PTR [rip+0x32afe]        # 0x45ce64
  42a366:	nop
  42a367:	nop
  42a368:	jmp    QWORD PTR [rip+0x32aee]        # 0x45ce5c
  42a36e:	nop
  42a36f:	nop
  42a370:	jmp    QWORD PTR [rip+0x32ade]        # 0x45ce54
  42a376:	nop
  42a377:	nop
  42a378:	jmp    QWORD PTR [rip+0x32ace]        # 0x45ce4c
  42a37e:	nop
  42a37f:	nop
  42a380:	jmp    QWORD PTR [rip+0x32abe]        # 0x45ce44
  42a386:	nop
  42a387:	nop
  42a388:	jmp    QWORD PTR [rip+0x32aae]        # 0x45ce3c
  42a38e:	nop
  42a38f:	nop
  42a390:	jmp    QWORD PTR [rip+0x32a9e]        # 0x45ce34
  42a396:	nop
  42a397:	nop
  42a398:	jmp    QWORD PTR [rip+0x32a8e]        # 0x45ce2c
  42a39e:	nop
  42a39f:	nop
  42a3a0:	jmp    QWORD PTR [rip+0x32a7e]        # 0x45ce24
  42a3a6:	nop
  42a3a7:	nop
  42a3a8:	jmp    QWORD PTR [rip+0x32a6e]        # 0x45ce1c
  42a3ae:	nop
  42a3af:	nop
  42a3b0:	jmp    QWORD PTR [rip+0x32a5e]        # 0x45ce14
  42a3b6:	nop
  42a3b7:	nop
  42a3b8:	jmp    QWORD PTR [rip+0x32a4e]        # 0x45ce0c
  42a3be:	nop
  42a3bf:	nop
  42a3c0:	jmp    QWORD PTR [rip+0x32a3e]        # 0x45ce04
  42a3c6:	nop
  42a3c7:	nop
  42a3c8:	jmp    QWORD PTR [rip+0x32a2e]        # 0x45cdfc
  42a3ce:	nop
  42a3cf:	nop
  42a3d0:	jmp    QWORD PTR [rip+0x32a1e]        # 0x45cdf4
  42a3d6:	nop
  42a3d7:	nop
  42a3d8:	jmp    QWORD PTR [rip+0x32a0e]        # 0x45cdec
  42a3de:	nop
  42a3df:	nop
  42a3e0:	jmp    QWORD PTR [rip+0x329fe]        # 0x45cde4
  42a3e6:	nop
  42a3e7:	nop
  42a3e8:	jmp    QWORD PTR [rip+0x329ee]        # 0x45cddc
  42a3ee:	nop
  42a3ef:	nop
  42a3f0:	jmp    QWORD PTR [rip+0x329de]        # 0x45cdd4
  42a3f6:	nop
  42a3f7:	nop
  42a3f8:	jmp    QWORD PTR [rip+0x329ce]        # 0x45cdcc
  42a3fe:	nop
  42a3ff:	nop
  42a400:	jmp    QWORD PTR [rip+0x329be]        # 0x45cdc4
  42a406:	nop
  42a407:	nop
  42a408:	jmp    QWORD PTR [rip+0x329ae]        # 0x45cdbc
  42a40e:	nop
  42a40f:	nop
  42a410:	jmp    QWORD PTR [rip+0x3299e]        # 0x45cdb4
  42a416:	nop
  42a417:	nop
  42a418:	jmp    QWORD PTR [rip+0x3298e]        # 0x45cdac
  42a41e:	nop
  42a41f:	nop
  42a420:	jmp    QWORD PTR [rip+0x3297e]        # 0x45cda4
  42a426:	nop
  42a427:	nop
  42a428:	jmp    QWORD PTR [rip+0x3296e]        # 0x45cd9c
  42a42e:	nop
  42a42f:	nop
  42a430:	jmp    QWORD PTR [rip+0x3295e]        # 0x45cd94
  42a436:	nop
  42a437:	nop
  42a438:	jmp    QWORD PTR [rip+0x3294e]        # 0x45cd8c
  42a43e:	nop
  42a43f:	nop
  42a440:	jmp    QWORD PTR [rip+0x3293e]        # 0x45cd84
  42a446:	nop
  42a447:	nop
  42a448:	jmp    QWORD PTR [rip+0x3292e]        # 0x45cd7c
  42a44e:	nop
  42a44f:	nop
  42a450:	jmp    QWORD PTR [rip+0x3291e]        # 0x45cd74
  42a456:	nop
  42a457:	nop
  42a458:	jmp    QWORD PTR [rip+0x3290e]        # 0x45cd6c
  42a45e:	nop
  42a45f:	nop
  42a460:	jmp    QWORD PTR [rip+0x328fe]        # 0x45cd64
  42a466:	nop
  42a467:	nop
  42a468:	jmp    QWORD PTR [rip+0x328ee]        # 0x45cd5c
  42a46e:	nop
  42a46f:	nop
  42a470:	jmp    QWORD PTR [rip+0x328de]        # 0x45cd54
  42a476:	nop
  42a477:	nop
  42a478:	jmp    QWORD PTR [rip+0x328ce]        # 0x45cd4c
  42a47e:	nop
  42a47f:	nop
  42a480:	jmp    QWORD PTR [rip+0x328be]        # 0x45cd44
  42a486:	nop
  42a487:	nop
  42a488:	jmp    QWORD PTR [rip+0x328ae]        # 0x45cd3c
  42a48e:	nop
  42a48f:	nop
  42a490:	jmp    QWORD PTR [rip+0x3289e]        # 0x45cd34
  42a496:	nop
  42a497:	nop
  42a498:	jmp    QWORD PTR [rip+0x3288e]        # 0x45cd2c
  42a49e:	nop
  42a49f:	nop
  42a4a0:	jmp    QWORD PTR [rip+0x3287e]        # 0x45cd24
  42a4a6:	nop
  42a4a7:	nop
  42a4a8:	jmp    QWORD PTR [rip+0x3286e]        # 0x45cd1c
  42a4ae:	nop
  42a4af:	nop
  42a4b0:	jmp    QWORD PTR [rip+0x3285e]        # 0x45cd14
  42a4b6:	nop
  42a4b7:	nop
  42a4b8:	jmp    QWORD PTR [rip+0x3284e]        # 0x45cd0c
  42a4be:	nop
  42a4bf:	nop
  42a4c0:	jmp    QWORD PTR [rip+0x3283e]        # 0x45cd04
  42a4c6:	nop
  42a4c7:	nop
  42a4c8:	jmp    QWORD PTR [rip+0x3282e]        # 0x45ccfc
  42a4ce:	nop
  42a4cf:	nop
  42a4d0:	jmp    QWORD PTR [rip+0x3281e]        # 0x45ccf4
  42a4d6:	nop
  42a4d7:	nop
  42a4d8:	jmp    QWORD PTR [rip+0x3280e]        # 0x45ccec
  42a4de:	nop
  42a4df:	nop
  42a4e0:	jmp    QWORD PTR [rip+0x327fe]        # 0x45cce4
  42a4e6:	nop
  42a4e7:	nop
  42a4e8:	jmp    QWORD PTR [rip+0x327ee]        # 0x45ccdc
  42a4ee:	nop
  42a4ef:	nop
  42a4f0:	jmp    QWORD PTR [rip+0x327de]        # 0x45ccd4
  42a4f6:	nop
  42a4f7:	nop
  42a4f8:	jmp    QWORD PTR [rip+0x327ce]        # 0x45cccc
  42a4fe:	nop
  42a4ff:	nop
  42a500:	jmp    QWORD PTR [rip+0x327be]        # 0x45ccc4
  42a506:	nop
  42a507:	nop
  42a508:	jmp    QWORD PTR [rip+0x327ae]        # 0x45ccbc
  42a50e:	nop
  42a50f:	nop
  42a510:	jmp    QWORD PTR [rip+0x3279e]        # 0x45ccb4
  42a516:	nop
  42a517:	nop
  42a518:	jmp    QWORD PTR [rip+0x3278e]        # 0x45ccac
  42a51e:	nop
  42a51f:	nop
  42a520:	jmp    QWORD PTR [rip+0x3277e]        # 0x45cca4
  42a526:	nop
  42a527:	nop
  42a528:	jmp    QWORD PTR [rip+0x3276e]        # 0x45cc9c
  42a52e:	nop
  42a52f:	nop
  42a530:	jmp    QWORD PTR [rip+0x3275e]        # 0x45cc94
  42a536:	nop
  42a537:	nop
  42a538:	jmp    QWORD PTR [rip+0x3274e]        # 0x45cc8c
  42a53e:	nop
  42a53f:	nop
  42a540:	jmp    QWORD PTR [rip+0x3273e]        # 0x45cc84
  42a546:	nop
  42a547:	nop
  42a548:	jmp    QWORD PTR [rip+0x3272e]        # 0x45cc7c
  42a54e:	nop
  42a54f:	nop
  42a550:	jmp    QWORD PTR [rip+0x3271e]        # 0x45cc74
  42a556:	nop
  42a557:	nop
  42a558:	jmp    QWORD PTR [rip+0x3270e]        # 0x45cc6c
  42a55e:	nop
  42a55f:	nop
  42a560:	jmp    QWORD PTR [rip+0x326fe]        # 0x45cc64
  42a566:	nop
  42a567:	nop
  42a568:	jmp    QWORD PTR [rip+0x326ee]        # 0x45cc5c
  42a56e:	nop
  42a56f:	nop
  42a570:	jmp    QWORD PTR [rip+0x326de]        # 0x45cc54
  42a576:	nop
  42a577:	nop
  42a578:	jmp    QWORD PTR [rip+0x326ce]        # 0x45cc4c
  42a57e:	nop
  42a57f:	nop
  42a580:	jmp    QWORD PTR [rip+0x326be]        # 0x45cc44
  42a586:	nop
  42a587:	nop
  42a588:	jmp    QWORD PTR [rip+0x326ae]        # 0x45cc3c
  42a58e:	nop
  42a58f:	nop
  42a590:	jmp    QWORD PTR [rip+0x3269e]        # 0x45cc34
  42a596:	nop
  42a597:	nop
  42a598:	jmp    QWORD PTR [rip+0x3268e]        # 0x45cc2c
  42a59e:	nop
  42a59f:	nop
  42a5a0:	jmp    QWORD PTR [rip+0x3267e]        # 0x45cc24
  42a5a6:	nop
  42a5a7:	nop
  42a5a8:	jmp    QWORD PTR [rip+0x3266e]        # 0x45cc1c
  42a5ae:	nop
  42a5af:	nop
  42a5b0:	jmp    QWORD PTR [rip+0x3265e]        # 0x45cc14
  42a5b6:	nop
  42a5b7:	nop
  42a5b8:	jmp    QWORD PTR [rip+0x3264e]        # 0x45cc0c
  42a5be:	nop
  42a5bf:	nop
  42a5c0:	jmp    QWORD PTR [rip+0x3263e]        # 0x45cc04
  42a5c6:	nop
  42a5c7:	nop
  42a5c8:	jmp    QWORD PTR [rip+0x3262e]        # 0x45cbfc
  42a5ce:	nop
  42a5cf:	nop
  42a5d0:	jmp    QWORD PTR [rip+0x32616]        # 0x45cbec
  42a5d6:	nop
  42a5d7:	nop
  42a5d8:	jmp    QWORD PTR [rip+0x32606]        # 0x45cbe4
  42a5de:	nop
  42a5df:	nop
  42a5e0:	jmp    QWORD PTR [rip+0x325f6]        # 0x45cbdc
  42a5e6:	nop
  42a5e7:	nop
  42a5e8:	jmp    QWORD PTR [rip+0x325de]        # 0x45cbcc
  42a5ee:	nop
  42a5ef:	nop
  42a5f0:	jmp    QWORD PTR [rip+0x325ce]        # 0x45cbc4
  42a5f6:	nop
  42a5f7:	nop
  42a5f8:	jmp    QWORD PTR [rip+0x325be]        # 0x45cbbc
  42a5fe:	nop
  42a5ff:	nop
  42a600:	jmp    QWORD PTR [rip+0x325ae]        # 0x45cbb4
  42a606:	nop
  42a607:	nop
  42a608:	jmp    QWORD PTR [rip+0x32596]        # 0x45cba4
  42a60e:	nop
  42a60f:	nop
  42a610:	jmp    QWORD PTR [rip+0x32586]        # 0x45cb9c
  42a616:	nop
  42a617:	nop
  42a618:	jmp    QWORD PTR [rip+0x3256e]        # 0x45cb8c
  42a61e:	nop
  42a61f:	nop
  42a620:	mov    rax,QWORD PTR [rip+0x308c9]        # 0x45aef0
  42a627:	ret    
  42a628:	nop    DWORD PTR [rax+rax*1+0x0]
  42a630:	mov    rax,rcx
  42a633:	xchg   QWORD PTR [rip+0x308b6],rax        # 0x45aef0
  42a63a:	ret    
  42a63b:	nop
  42a63c:	nop
  42a63d:	nop
  42a63e:	nop
  42a63f:	nop
  42a640:	jmp    QWORD PTR [rip+0x32396]        # 0x45c9dc
  42a646:	nop
  42a647:	nop
  42a648:	jmp    QWORD PTR [rip+0x32386]        # 0x45c9d4
  42a64e:	nop
  42a64f:	nop
  42a650:	jmp    QWORD PTR [rip+0x32376]        # 0x45c9cc
  42a656:	nop
  42a657:	nop
  42a658:	jmp    QWORD PTR [rip+0x32366]        # 0x45c9c4
  42a65e:	nop
  42a65f:	nop
  42a660:	jmp    QWORD PTR [rip+0x32356]        # 0x45c9bc
  42a666:	nop
  42a667:	nop
  42a668:	jmp    QWORD PTR [rip+0x32346]        # 0x45c9b4
  42a66e:	nop
  42a66f:	nop
  42a670:	jmp    QWORD PTR [rip+0x32336]        # 0x45c9ac
  42a676:	nop
  42a677:	nop
  42a678:	jmp    QWORD PTR [rip+0x32326]        # 0x45c9a4
  42a67e:	nop
  42a67f:	nop
  42a680:	jmp    QWORD PTR [rip+0x32316]        # 0x45c99c
  42a686:	nop
  42a687:	nop
  42a688:	nop    DWORD PTR [rax+rax*1+0x0]
  42a690:	jmp    QWORD PTR [rip+0x324e6]        # 0x45cb7c
  42a696:	nop
  42a697:	nop
  42a698:	jmp    QWORD PTR [rip+0x324d6]        # 0x45cb74
  42a69e:	nop
  42a69f:	nop
  42a6a0:	jmp    QWORD PTR [rip+0x324c6]        # 0x45cb6c
  42a6a6:	nop
  42a6a7:	nop
  42a6a8:	jmp    QWORD PTR [rip+0x324b6]        # 0x45cb64
  42a6ae:	nop
  42a6af:	nop
  42a6b0:	jmp    QWORD PTR [rip+0x324a6]        # 0x45cb5c
  42a6b6:	nop
  42a6b7:	nop
  42a6b8:	jmp    QWORD PTR [rip+0x32496]        # 0x45cb54
  42a6be:	nop
  42a6bf:	nop
  42a6c0:	jmp    QWORD PTR [rip+0x32486]        # 0x45cb4c
  42a6c6:	nop
  42a6c7:	nop
  42a6c8:	jmp    QWORD PTR [rip+0x32476]        # 0x45cb44
  42a6ce:	nop
  42a6cf:	nop
  42a6d0:	jmp    QWORD PTR [rip+0x32466]        # 0x45cb3c
  42a6d6:	nop
  42a6d7:	nop
  42a6d8:	jmp    QWORD PTR [rip+0x32456]        # 0x45cb34
  42a6de:	nop
  42a6df:	nop
  42a6e0:	jmp    QWORD PTR [rip+0x32446]        # 0x45cb2c
  42a6e6:	nop
  42a6e7:	nop
  42a6e8:	jmp    QWORD PTR [rip+0x32436]        # 0x45cb24
  42a6ee:	nop
  42a6ef:	nop
  42a6f0:	jmp    QWORD PTR [rip+0x32426]        # 0x45cb1c
  42a6f6:	nop
  42a6f7:	nop
  42a6f8:	jmp    QWORD PTR [rip+0x32416]        # 0x45cb14
  42a6fe:	nop
  42a6ff:	nop
  42a700:	jmp    QWORD PTR [rip+0x32406]        # 0x45cb0c
  42a706:	nop
  42a707:	nop
  42a708:	jmp    QWORD PTR [rip+0x323f6]        # 0x45cb04
  42a70e:	nop
  42a70f:	nop
  42a710:	jmp    QWORD PTR [rip+0x323e6]        # 0x45cafc
  42a716:	nop
  42a717:	nop
  42a718:	jmp    QWORD PTR [rip+0x323d6]        # 0x45caf4
  42a71e:	nop
  42a71f:	nop
  42a720:	jmp    QWORD PTR [rip+0x323c6]        # 0x45caec
  42a726:	nop
  42a727:	nop
  42a728:	jmp    QWORD PTR [rip+0x323b6]        # 0x45cae4
  42a72e:	nop
  42a72f:	nop
  42a730:	jmp    QWORD PTR [rip+0x323a6]        # 0x45cadc
  42a736:	nop
  42a737:	nop
  42a738:	jmp    QWORD PTR [rip+0x32396]        # 0x45cad4
  42a73e:	nop
  42a73f:	nop
  42a740:	jmp    QWORD PTR [rip+0x32386]        # 0x45cacc
  42a746:	nop
  42a747:	nop
  42a748:	jmp    QWORD PTR [rip+0x32376]        # 0x45cac4
  42a74e:	nop
  42a74f:	nop
  42a750:	jmp    QWORD PTR [rip+0x32366]        # 0x45cabc
  42a756:	nop
  42a757:	nop
  42a758:	jmp    QWORD PTR [rip+0x32356]        # 0x45cab4
  42a75e:	nop
  42a75f:	nop
  42a760:	jmp    QWORD PTR [rip+0x32346]        # 0x45caac
  42a766:	nop
  42a767:	nop
  42a768:	jmp    QWORD PTR [rip+0x32336]        # 0x45caa4
  42a76e:	nop
  42a76f:	nop
  42a770:	jmp    QWORD PTR [rip+0x32326]        # 0x45ca9c
  42a776:	nop
  42a777:	nop
  42a778:	jmp    QWORD PTR [rip+0x32316]        # 0x45ca94
  42a77e:	nop
  42a77f:	nop
  42a780:	jmp    QWORD PTR [rip+0x32306]        # 0x45ca8c
  42a786:	nop
  42a787:	nop
  42a788:	jmp    QWORD PTR [rip+0x322f6]        # 0x45ca84
  42a78e:	nop
  42a78f:	nop
  42a790:	jmp    QWORD PTR [rip+0x322e6]        # 0x45ca7c
  42a796:	nop
  42a797:	nop
  42a798:	jmp    QWORD PTR [rip+0x322d6]        # 0x45ca74
  42a79e:	nop
  42a79f:	nop
  42a7a0:	jmp    QWORD PTR [rip+0x322c6]        # 0x45ca6c
  42a7a6:	nop
  42a7a7:	nop
  42a7a8:	jmp    QWORD PTR [rip+0x322b6]        # 0x45ca64
  42a7ae:	nop
  42a7af:	nop
  42a7b0:	jmp    QWORD PTR [rip+0x322a6]        # 0x45ca5c
  42a7b6:	nop
  42a7b7:	nop
  42a7b8:	jmp    QWORD PTR [rip+0x32296]        # 0x45ca54
  42a7be:	nop
  42a7bf:	nop
  42a7c0:	jmp    QWORD PTR [rip+0x32286]        # 0x45ca4c
  42a7c6:	nop
  42a7c7:	nop
  42a7c8:	jmp    QWORD PTR [rip+0x32276]        # 0x45ca44
  42a7ce:	nop
  42a7cf:	nop
  42a7d0:	jmp    QWORD PTR [rip+0x32266]        # 0x45ca3c
  42a7d6:	nop
  42a7d7:	nop
  42a7d8:	jmp    QWORD PTR [rip+0x32256]        # 0x45ca34
  42a7de:	nop
  42a7df:	nop
  42a7e0:	jmp    QWORD PTR [rip+0x32246]        # 0x45ca2c
  42a7e6:	nop
  42a7e7:	nop
  42a7e8:	jmp    QWORD PTR [rip+0x32236]        # 0x45ca24
  42a7ee:	nop
  42a7ef:	nop
  42a7f0:	jmp    QWORD PTR [rip+0x32226]        # 0x45ca1c
  42a7f6:	nop
  42a7f7:	nop
  42a7f8:	jmp    QWORD PTR [rip+0x32216]        # 0x45ca14
  42a7fe:	nop
  42a7ff:	nop
  42a800:	jmp    QWORD PTR [rip+0x32206]        # 0x45ca0c
  42a806:	nop
  42a807:	nop
  42a808:	jmp    QWORD PTR [rip+0x321f6]        # 0x45ca04
  42a80e:	nop
  42a80f:	nop
  42a810:	jmp    QWORD PTR [rip+0x321e6]        # 0x45c9fc
  42a816:	nop
  42a817:	nop
  42a818:	jmp    QWORD PTR [rip+0x321d6]        # 0x45c9f4
  42a81e:	nop
  42a81f:	nop
  42a820:	jmp    QWORD PTR [rip+0x321c6]        # 0x45c9ec
  42a826:	nop
  42a827:	nop
  42a828:	nop    DWORD PTR [rax+rax*1+0x0]
  42a830:	push   rdi
  42a831:	push   rbx
  42a832:	sub    rsp,0x28
  42a836:	xor    eax,eax
  42a838:	mov    rdi,rcx
  42a83b:	mov    rbx,rcx
  42a83e:	or     rcx,0xffffffffffffffff
  42a842:	repnz scas al,BYTE PTR es:[rdi]
  42a844:	not    rcx
  42a847:	lea    rcx,[rcx+rcx*1+0x1]
  42a84c:	call   0x424800
  42a851:	lea    r8,[rax+0x1]
  42a855:	mov    BYTE PTR [rax],0x27
  42a858:	mov    dl,BYTE PTR [rbx]
  42a85a:	test   dl,dl
  42a85c:	je     0x42a891
  42a85e:	cmp    dl,0xa
  42a861:	jne    0x42a872
  42a863:	mov    BYTE PTR [r8],0x5c
  42a867:	mov    BYTE PTR [r8+0x1],0x6e
  42a86c:	add    r8,0x2
  42a870:	jmp    0x42a88c
  42a872:	cmp    dl,0x27
  42a875:	jne    0x42a886
  42a877:	mov    BYTE PTR [r8],0x5c
  42a87b:	mov    BYTE PTR [r8+0x1],0x27
  42a880:	add    r8,0x2
  42a884:	jmp    0x42a88c
  42a886:	mov    BYTE PTR [r8],dl
  42a889:	inc    r8
  42a88c:	inc    rbx
  42a88f:	jmp    0x42a858
  42a891:	mov    BYTE PTR [r8],0x27
  42a895:	mov    BYTE PTR [r8+0x1],0x0
  42a89a:	add    rsp,0x28
  42a89e:	pop    rbx
  42a89f:	pop    rdi
  42a8a0:	ret    
  42a8a1:	push   rsi
  42a8a2:	push   rbx
  42a8a3:	sub    rsp,0x28
  42a8a7:	mov    rsi,rcx
  42a8aa:	call   0x427dc0
  42a8af:	mov    edx,0x53
  42a8b4:	mov    rcx,rsi
  42a8b7:	mov    rbx,rax
  42a8ba:	call   0x427e28
  42a8bf:	test   rax,rax
  42a8c2:	mov    r8,rax
  42a8c5:	je     0x42a8d8
  42a8c7:	lea    rdx,[rip+0x292e]        # 0x42d1fc
  42a8ce:	mov    rcx,rbx
  42a8d1:	call   0x427d70
  42a8d6:	jmp    0x42a8e7
  42a8d8:	lea    rdx,[rip+0x2923]        # 0x42d202
  42a8df:	mov    rcx,rbx
  42a8e2:	call   0x427d70
  42a8e7:	mov    edx,0x4d
  42a8ec:	mov    rcx,rsi
  42a8ef:	call   0x427e28
  42a8f4:	test   rax,rax
  42a8f7:	je     0x42a906
  42a8f9:	mov    rdx,rax
  42a8fc:	mov    rcx,rbx
  42a8ff:	call   0x427dc8
  42a904:	jmp    0x42a915
  42a906:	lea    rdx,[rip+0x28fe]        # 0x42d20b
  42a90d:	mov    rcx,rbx
  42a910:	call   0x427dc8
  42a915:	lea    rdx,[rip+0x28ff]        # 0x42d21b
  42a91c:	mov    rcx,rbx
  42a91f:	call   0x427dc8
  42a924:	mov    rdx,QWORD PTR [rbx]
  42a927:	lea    rcx,[rip+0x28ef]        # 0x42d21d
  42a92e:	call   0x405d90
  42a933:	mov    rcx,rbx
  42a936:	add    rsp,0x28
  42a93a:	pop    rbx
  42a93b:	pop    rsi
  42a93c:	jmp    0x427db8
  42a941:	push   rbp
  42a942:	push   rdi
  42a943:	push   rsi
  42a944:	push   rbx
  42a945:	sub    rsp,0x28
  42a949:	mov    rsi,rcx
  42a94c:	mov    rdi,rdx
  42a94f:	mov    rbp,r8
  42a952:	call   0x427dc0
  42a957:	lea    rdx,[rip+0x28d7]        # 0x42d235
  42a95e:	mov    rbx,rax
  42a961:	mov    rcx,rax
  42a964:	call   0x427dc8
  42a969:	mov    r8,rsi
  42a96c:	mov    rdx,rdi
  42a96f:	mov    rcx,rbx
  42a972:	call   0x41d330
  42a977:	mov    edx,0x28
  42a97c:	mov    rcx,rdi
  42a97f:	call   0x42a428
  42a984:	lea    rdx,[rip+0x2895]        # 0x42d220
  42a98b:	lea    r8,[rip+0x289b]        # 0x42d22d
  42a992:	test   rax,rax
  42a995:	mov    rcx,rbx
  42a998:	cmovne r8,rdx
  42a99c:	lea    rdx,[rip+0x289d]        # 0x42d240
  42a9a3:	call   0x427dd8
  42a9a8:	mov    rdx,QWORD PTR [rbx]
  42a9ab:	mov    rcx,rsi
  42a9ae:	call   0x427ef0
  42a9b3:	mov    rcx,rax
  42a9b6:	mov    rsi,rax
  42a9b9:	call   0x427e20
  42a9be:	cmp    eax,0x2
  42a9c1:	jne    0x42a9f4
  42a9c3:	mov    rcx,rsi
  42a9c6:	call   0x427e70
  42a9cb:	dec    eax
  42a9cd:	jne    0x42a9f4
  42a9cf:	xor    r8d,r8d
  42a9d2:	xor    edx,edx
  42a9d4:	mov    rcx,rsi
  42a9d7:	call   0x427e98
  42a9dc:	mov    r8d,0xa
  42a9e2:	xor    edx,edx
  42a9e4:	mov    rcx,rax
  42a9e7:	call   0x42a3c8
  42a9ec:	mov    dil,0x1
  42a9ef:	mov    DWORD PTR [rbp+0x0],eax
  42a9f2:	jmp    0x42a9fe
  42a9f4:	mov    rcx,rsi
  42a9f7:	xor    edi,edi
  42a9f9:	call   0x42a8a1
  42a9fe:	mov    rcx,rsi
  42aa01:	call   0x427f68
  42aa06:	mov    rcx,rbx
  42aa09:	call   0x427db8
  42aa0e:	mov    al,dil
  42aa11:	add    rsp,0x28
  42aa15:	pop    rbx
  42aa16:	pop    rsi
  42aa17:	pop    rdi
  42aa18:	pop    rbp
  42aa19:	ret    
  42aa1a:	push   rbp
  42aa1b:	push   rdi
  42aa1c:	push   rsi
  42aa1d:	push   rbx
  42aa1e:	sub    rsp,0x28
  42aa22:	mov    rbx,rcx
  42aa25:	mov    edi,edx
  42aa27:	mov    rbp,r8
  42aa2a:	call   0x427dc0
  42aa2f:	lea    rdx,[rip+0x282a]        # 0x42d260
  42aa36:	mov    rsi,rax
  42aa39:	mov    r8d,edi
  42aa3c:	mov    rcx,rax
  42aa3f:	call   0x427d70
  42aa44:	mov    rdx,QWORD PTR [rsi]
  42aa47:	mov    rcx,rbx
  42aa4a:	call   0x427ef0
  42aa4f:	mov    rcx,rax
  42aa52:	mov    rbx,rax
  42aa55:	call   0x427e20
  42aa5a:	cmp    eax,0x2
  42aa5d:	jne    0x42aa90
  42aa5f:	mov    rcx,rbx
  42aa62:	call   0x427e70
  42aa67:	dec    eax
  42aa69:	jne    0x42aa90
  42aa6b:	mov    rcx,rbp
  42aa6e:	mov    dil,0x1
  42aa71:	call   0x427d68
  42aa76:	xor    r8d,r8d
  42aa79:	xor    edx,edx
  42aa7b:	mov    rcx,rbx
  42aa7e:	call   0x427e98
  42aa83:	mov    rcx,rbp
  42aa86:	mov    rdx,rax
  42aa89:	call   0x427dc8
  42aa8e:	jmp    0x42aa9a
  42aa90:	mov    rcx,rbx
  42aa93:	xor    edi,edi
  42aa95:	call   0x42a8a1
  42aa9a:	mov    rcx,rbx
  42aa9d:	call   0x427f68
  42aaa2:	mov    rcx,rsi
  42aaa5:	call   0x427db8
  42aaaa:	mov    al,dil
  42aaad:	add    rsp,0x28
  42aab1:	pop    rbx
  42aab2:	pop    rsi
  42aab3:	pop    rdi
  42aab4:	pop    rbp
  42aab5:	ret    
  42aab6:	push   rbp
  42aab7:	push   rdi
  42aab8:	push   rsi
  42aab9:	mov    rbp,rsp
  42aabc:	sub    rsp,0x150
  42aac3:	mov    rax,QWORD PTR [rip+0x29e16]        # 0x4548e0
  42aaca:	mov    QWORD PTR [rbp+0x20],rcx
  42aace:	cmp    QWORD PTR [rbp+0x20],0x0
  42aad3:	lea    rdi,[rbp-0xa0]
  42aada:	mov    ecx,0x26
  42aadf:	mov    DWORD PTR [rbp+0x28],edx
  42aae2:	lea    rsi,[rax+0x28]
  42aae6:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42aae8:	je     0x42aaf5
  42aaea:	mov    rdx,QWORD PTR [rbp+0x20]
  42aaee:	cmp    QWORD PTR [rdx+0x8],0x0
  42aaf3:	jne    0x42ab08
  42aaf5:	lea    rcx,[rip+0x2794]        # 0x42d290
  42aafc:	xor    esi,esi
  42aafe:	call   0x405d90
  42ab03:	jmp    0x42ace6
  42ab08:	mov    rdi,QWORD PTR [rip+0x32135]        # 0x45cc44
  42ab0f:	mov    WORD PTR [rbp-0x98],0x0
  42ab18:	mov    QWORD PTR [rbp-0xf8],rax
  42ab1f:	mov    QWORD PTR [rbp-0x118],rax
  42ab26:	mov    QWORD PTR [rbp-0x110],rax
  42ab2d:	mov    QWORD PTR [rbp-0x100],rdi
  42ab34:	mov    rdi,QWORD PTR [rip+0x320d1]        # 0x45cc0c
  42ab3b:	mov    QWORD PTR [rbp-0x108],rdi
  42ab42:	xor    ecx,ecx
  42ab44:	mov    rax,QWORD PTR [rbp-0x100]
  42ab4b:	lea    rsi,[rbp-0xe0]
  42ab52:	call   rax
  42ab54:	lea    rcx,[rbp-0xe8]
  42ab5b:	mov    QWORD PTR [rbp-0xe8],rax
  42ab62:	mov    rax,QWORD PTR [rbp-0x108]
  42ab69:	call   rax
  42ab6b:	mov    rcx,rax
  42ab6e:	call   0x42a560
  42ab73:	mov    r9d,DWORD PTR [rbp+0x28]
  42ab77:	lea    r8,[rip+0x273d]        # 0x42d2bb
  42ab7e:	mov    edx,0x32
  42ab83:	mov    rcx,rsi
  42ab86:	mov    QWORD PTR [rsp+0x20],rax
  42ab8b:	call   0x426220
  42ab90:	mov    rax,QWORD PTR [rbp+0x20]
  42ab94:	xor    edx,edx
  42ab96:	mov    QWORD PTR [rbp-0x30],rsi
  42ab9a:	mov    rcx,QWORD PTR [rax]
  42ab9d:	call   0x4062b0
  42aba2:	test   rax,rax
  42aba5:	mov    rdi,rax
  42aba8:	je     0x42ace3
  42abae:	mov    rax,QWORD PTR [rip+0x29c5b]        # 0x454810
  42abb5:	mov    rcx,rdi
  42abb8:	mov    sil,BYTE PTR [rax]
  42abbb:	test   sil,sil
  42abbe:	je     0x42abca
  42abc0:	call   0x427f68
  42abc5:	jmp    0x42ace3
  42abca:	call   0x427e20
  42abcf:	cmp    eax,0x8
  42abd2:	ja     0x42ac67
  42abd8:	lea    rdx,[rip+0x2749]        # 0x42d328
  42abdf:	mov    eax,eax
  42abe1:	movsxd rax,DWORD PTR [rdx+rax*4]
  42abe5:	add    rdx,rax
  42abe8:	jmp    rdx
  42abea:	mov    rax,QWORD PTR [rbp-0x118]
  42abf1:	lea    rdx,[rbp-0xa0]
  42abf8:	mov    rcx,rdi
  42abfb:	mov    r9,QWORD PTR [rax+0x108]
  42ac02:	mov    r8,QWORD PTR [rax+0x10]
  42ac06:	call   0x4141a0
  42ac0b:	jmp    0x42ac7d
  42ac0d:	mov    rcx,rdi
  42ac10:	call   0x427f58
  42ac15:	mov    r9,rax
  42ac18:	mov    rax,QWORD PTR [rbp-0xf8]
  42ac1f:	lea    r8,[rbp-0xe0]
  42ac26:	lea    rdx,[rip+0x26a2]        # 0x42d2cf
  42ac2d:	mov    rcx,QWORD PTR [rax+0x10]
  42ac31:	call   0x426370
  42ac36:	jmp    0x42ac7d
  42ac38:	lea    rcx,[rip+0x2651]        # 0x42d290
  42ac3f:	call   0x405d90
  42ac44:	mov    rcx,rdi
  42ac47:	call   0x427f68
  42ac4c:	jmp    0x42ace6
  42ac51:	lea    rcx,[rip+0x2680]        # 0x42d2d8
  42ac58:	call   0x405d90
  42ac5d:	mov    rcx,rdi
  42ac60:	call   0x427f68
  42ac65:	jmp    0x42ace6
  42ac67:	lea    rcx,[rip+0x2692]        # 0x42d300
  42ac6e:	call   0x405d90
  42ac73:	mov    rcx,rdi
  42ac76:	call   0x427f68
  42ac7b:	jmp    0x42ace6
  42ac7d:	mov    rcx,rdi
  42ac80:	call   0x427f68
  42ac85:	mov    rax,QWORD PTR [rbp-0x110]
  42ac8c:	mov    rcx,QWORD PTR [rax+0x10]
  42ac90:	call   0x42a520
  42ac95:	mov    rcx,QWORD PTR [rip+0x29c64]        # 0x454900
  42ac9c:	mov    rdx,rbp
  42ac9f:	call   0x42a588
  42aca4:	test   eax,eax
  42aca6:	jne    0x42ace3
  42aca8:	mov    rax,QWORD PTR [rip+0x29c41]        # 0x4548f0
  42acaf:	mov    rdi,QWORD PTR [rip+0x29b5a]        # 0x454810
  42acb6:	xor    esi,esi
  42acb8:	mov    BYTE PTR [rax],0x1
  42acbb:	cmp    esi,DWORD PTR [rbp+0x28]
  42acbe:	jge    0x42acd0
  42acc0:	mov    ecx,0xf4240
  42acc5:	call   0x427740
  42acca:	mov    al,BYTE PTR [rdi]
  42accc:	test   al,al
  42acce:	je     0x42acdf
  42acd0:	mov    rax,QWORD PTR [rip+0x29c19]        # 0x4548f0
  42acd7:	mov    BYTE PTR [rax],0x0
  42acda:	jmp    0x42ab42
  42acdf:	inc    esi
  42ace1:	jmp    0x42acbb
  42ace3:	mov    sil,0x1
  42ace6:	mov    al,sil
  42ace9:	add    rsp,0x150
  42acf0:	pop    rsi
  42acf1:	pop    rdi
  42acf2:	pop    rbp
  42acf3:	ret    
  42acf4:	nop
  42acf5:	nop
  42acf6:	nop
  42acf7:	nop
  42acf8:	nop
  42acf9:	nop
  42acfa:	nop
  42acfb:	nop
  42acfc:	nop
  42acfd:	nop
  42acfe:	nop
  42acff:	nop
  42ad00:	push   r15
  42ad02:	push   r14
  42ad04:	push   r13
  42ad06:	push   r12
  42ad08:	push   rbp
  42ad09:	push   rdi
  42ad0a:	push   rsi
  42ad0b:	push   rbx
  42ad0c:	sub    rsp,0xa8
  42ad13:	mov    rbx,rdx
  42ad16:	mov    ebp,ecx
  42ad18:	call   0x4280f0
  42ad1d:	mov    rcx,QWORD PTR [rbx]
  42ad20:	lea    rdx,[rip+0x11d54]        # 0x43ca7b
  42ad27:	call   0x423fb0
  42ad2c:	cmp    ebp,0x1
  42ad2f:	jle    0x42ad91
  42ad31:	mov    rax,QWORD PTR [rbx+0x8]
  42ad35:	lea    rdi,[rip+0x11d48]        # 0x43ca84
  42ad3c:	mov    ecx,0x7
  42ad41:	mov    rsi,rax
  42ad44:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad46:	je     0x42b4a8
  42ad4c:	lea    rdi,[rip+0x11d38]        # 0x43ca8b
  42ad53:	mov    ecx,0x3
  42ad58:	mov    rsi,rax
  42ad5b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad5d:	je     0x42b4a8
  42ad63:	lea    rdi,[rip+0x11d24]        # 0x43ca8e
  42ad6a:	mov    ecx,0xa
  42ad6f:	mov    rsi,rax
  42ad72:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad74:	je     0x42b137
  42ad7a:	lea    rdi,[rip+0x11d17]        # 0x43ca98
  42ad81:	mov    ecx,0x3
  42ad86:	mov    rsi,rax
  42ad89:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ad8b:	je     0x42b137
  42ad91:	mov    r13,QWORD PTR [rip+0x31e1c]        # 0x45cbb4
  42ad98:	call   r13
  42ad9b:	lea    rcx,[rax+0x60]
  42ad9f:	xor    r9d,r9d
  42ada2:	xor    edx,edx
  42ada4:	mov    r8d,0x4
  42adaa:	call   0x42a448
  42adaf:	mov    rcx,QWORD PTR [rbx]
  42adb2:	call   0x427280
  42adb7:	mov    QWORD PTR [rip+0x302be],0x0        # 0x45b080
  42adc2:	mov    QWORD PTR [rip+0x3039f],rax        # 0x45b168
  42adc9:	call   0x414650
  42adce:	call   0x427f18
  42add3:	mov    DWORD PTR [rip+0x302af],eax        # 0x45b088
  42add9:	call   r13
  42addc:	add    rax,0x30
  42ade0:	mov    BYTE PTR [rip+0x302b1],0x0        # 0x45b098
  42ade7:	mov    QWORD PTR [rip+0x302ae],0x0        # 0x45b0a0
  42adf2:	mov    QWORD PTR [rip+0x30297],rax        # 0x45b090
  42adf9:	call   r13
  42adfc:	lea    rcx,[rip+0x11cb0]        # 0x43cab3
  42ae03:	mov    edx,0x1
  42ae08:	mov    QWORD PTR [rip+0x30349],rax        # 0x45b158
  42ae0f:	mov    eax,0x1
  42ae14:	mov    WORD PTR [rip+0x30295],dx        # 0x45b0b0
  42ae1b:	mov    BYTE PTR [rip+0x3033e],0x0        # 0x45b160
  42ae22:	mov    DWORD PTR [rip+0x3027c],0x2        # 0x45b0a8
  42ae2c:	mov    WORD PTR [rip+0x3027b],ax        # 0x45b0ae
  42ae33:	mov    BYTE PTR [rip+0x30279],0x1        # 0x45b0b3
  42ae3a:	mov    BYTE PTR [rip+0x30273],0x1        # 0x45b0b4
  42ae41:	mov    BYTE PTR [rip+0x3026d],0x1        # 0x45b0b5
  42ae48:	call   0x42a4d0
  42ae4d:	xor    edx,edx
  42ae4f:	test   rax,rax
  42ae52:	je     0x42ae6a
  42ae54:	lea    rcx,[rip+0x11c58]        # 0x43cab3
  42ae5b:	call   0x42a4d0
  42ae60:	mov    rcx,rax
  42ae63:	call   0x42a558
  42ae68:	mov    edx,eax
  42ae6a:	mov    DWORD PTR [rip+0x3028c],edx        # 0x45b0fc
  42ae70:	call   r13
  42ae73:	mov    rcx,rax
  42ae76:	call   0x42a368
  42ae7b:	mov    ecx,eax
  42ae7d:	call   0x42a380
  42ae82:	test   eax,eax
  42ae84:	mov    edx,0x1
  42ae89:	jne    0x42b4f4
  42ae8f:	mov    BYTE PTR [rip+0x302bb],dl        # 0x45b150
  42ae95:	mov    DWORD PTR [rip+0x302b5],0x0        # 0x45b154
  42ae9f:	call   0x40eae0
  42aea4:	lea    r8,[rip+0xfffffffffffe3105]        # 0x40dfb0
  42aeab:	lea    rdx,[rip+0x11aa1]        # 0x43c953
  42aeb2:	mov    rcx,rax
  42aeb5:	mov    QWORD PTR [rip+0x302d4],rax        # 0x45b190
  42aebc:	call   0x40ed90
  42aec1:	mov    rcx,QWORD PTR [rip+0x302c8]        # 0x45b190
  42aec8:	lea    r8,[rip+0xfffffffffffe30c1]        # 0x40df90
  42aecf:	lea    rdx,[rip+0x11a6f]        # 0x43c945
  42aed6:	call   0x40ed90
  42aedb:	mov    rcx,QWORD PTR [rip+0x302ae]        # 0x45b190
  42aee2:	lea    r8,[rip+0xfffffffffffe3087]        # 0x40df70
  42aee9:	lea    rdx,[rip+0x11a4f]        # 0x43c93f
  42aef0:	call   0x40ed90
  42aef5:	mov    rcx,QWORD PTR [rip+0x30294]        # 0x45b190
  42aefc:	lea    r8,[rip+0xfffffffffffe304d]        # 0x40df50
  42af03:	lea    rdx,[rip+0x11a2a]        # 0x43c934
  42af0a:	call   0x40ed90
  42af0f:	mov    rcx,QWORD PTR [rip+0x3027a]        # 0x45b190
  42af16:	lea    r8,[rip+0xfffffffffffe3013]        # 0x40df30
  42af1d:	lea    rdx,[rip+0x11a05]        # 0x43c929
  42af24:	call   0x40ed90
  42af29:	mov    rcx,QWORD PTR [rip+0x30260]        # 0x45b190
  42af30:	lea    r8,[rip+0xfffffffffffe3099]        # 0x40dfd0
  42af37:	lea    rdx,[rip+0x11b7d]        # 0x43cabb
  42af3e:	call   0x40ed90
  42af43:	mov    rcx,QWORD PTR [rip+0x30246]        # 0x45b190
  42af4a:	lea    r8,[rip+0xfffffffffffe33ff]        # 0x40e350
  42af51:	lea    rdx,[rip+0x11adf]        # 0x43ca37
  42af58:	call   0x40ed90
  42af5d:	mov    rcx,QWORD PTR [rip+0x3022c]        # 0x45b190
  42af64:	lea    r8,[rip+0xfffffffffffe34f5]        # 0x40e460
  42af6b:	lea    rdx,[rip+0x11aef]        # 0x43ca61
  42af72:	call   0x40ed90
  42af77:	mov    rcx,QWORD PTR [rip+0x30212]        # 0x45b190
  42af7e:	lea    r8,[rip+0xfffffffffffe346b]        # 0x40e3f0
  42af85:	lea    rdx,[rip+0x11abc]        # 0x43ca48
  42af8c:	call   0x40ed90
  42af91:	mov    rcx,QWORD PTR [rip+0x301f8]        # 0x45b190
  42af98:	lea    r8,[rip+0xfffffffffffe32f1]        # 0x40e290
  42af9f:	lea    rdx,[rip+0x11a73]        # 0x43ca19
  42afa6:	call   0x40ed90
  42afab:	mov    rcx,QWORD PTR [rip+0x301de]        # 0x45b190
  42afb2:	lea    r8,[rip+0xfffffffffffe3217]        # 0x40e1d0
  42afb9:	lea    rdx,[rip+0x11a23]        # 0x43c9e3
  42afc0:	call   0x40ed90
  42afc5:	mov    rcx,QWORD PTR [rip+0x301c4]        # 0x45b190
  42afcc:	lea    r8,[rip+0xfffffffffffe2e2d]        # 0x40de00
  42afd3:	lea    rdx,[rip+0x11aed]        # 0x43cac7
  42afda:	call   0x40ed90
  42afdf:	mov    rcx,QWORD PTR [rip+0x301aa]        # 0x45b190
  42afe6:	lea    r8,[rip+0xfffffffffffe2e33]        # 0x40de20
  42afed:	lea    rdx,[rip+0x11adb]        # 0x43cacf
  42aff4:	call   0x40ed90
  42aff9:	mov    rcx,QWORD PTR [rip+0x30190]        # 0x45b190
  42b000:	lea    r8,[rip+0xfffffffffffe2e39]        # 0x40de40
  42b007:	lea    rdx,[rip+0x11ac9]        # 0x43cad7
  42b00e:	call   0x40ed90
  42b013:	mov    rcx,QWORD PTR [rip+0x30176]        # 0x45b190
  42b01a:	lea    r8,[rip+0xfffffffffffe2e3f]        # 0x40de60
  42b021:	lea    rdx,[rip+0x118bf]        # 0x43c8e7
  42b028:	call   0x40ed90
  42b02d:	mov    rcx,QWORD PTR [rip+0x3015c]        # 0x45b190
  42b034:	lea    r8,[rip+0x11aa5]        # 0x43cae0
  42b03b:	lea    rdx,[rip+0x11afd]        # 0x43cb3f
  42b042:	call   0x40ef10
  42b047:	mov    rcx,QWORD PTR [rip+0x30142]        # 0x45b190
  42b04e:	lea    rdx,[rip+0x118fe]        # 0x43c953
  42b055:	call   0x40f020
  42b05a:	mov    rcx,QWORD PTR [rip+0x3012f]        # 0x45b190
  42b061:	lea    r8,[rip+0x11869]        # 0x43c8d1
  42b068:	lea    rdx,[rip+0x11878]        # 0x43c8e7
  42b06f:	call   0x40ef10
  42b074:	mov    rcx,QWORD PTR [rip+0x30115]        # 0x45b190
  42b07b:	lea    r8,[rip+0x11ac5]        # 0x43cb47
  42b082:	lea    rdx,[rip+0x11a3e]        # 0x43cac7
  42b089:	call   0x40ef10
  42b08e:	mov    rcx,QWORD PTR [rip+0x300fb]        # 0x45b190
  42b095:	lea    r8,[rip+0x11aab]        # 0x43cb47
  42b09c:	lea    rdx,[rip+0x11a2c]        # 0x43cacf
  42b0a3:	call   0x40ef10
  42b0a8:	mov    rcx,QWORD PTR [rip+0x300e1]        # 0x45b190
  42b0af:	lea    rdx,[rip+0x11a21]        # 0x43cad7
  42b0b6:	lea    r8,[rip+0x11a92]        # 0x43cb4f
  42b0bd:	call   0x40ef10
  42b0c2:	lea    rdx,[rsp+0x60]
  42b0c7:	mov    r12,QWORD PTR [rip+0x297a2]        # 0x454870
  42b0ce:	mov    ecx,0x8
  42b0d3:	xor    eax,eax
  42b0d5:	mov    rdi,rdx
  42b0d8:	rep stos QWORD PTR es:[rdi],rax
  42b0db:	lea    rdi,[rsp+0x5c]
  42b0e0:	mov    r15,r12
  42b0e3:	mov    r14,r12
  42b0e6:	mov    QWORD PTR [rsp+0x30],r12
  42b0eb:	mov    QWORD PTR [rsp+0x38],r12
  42b0f0:	mov    QWORD PTR [rsp+0x40],r12
  42b0f5:	lea    r9,[rip+0xf44]        # 0x42c040
  42b0fc:	lea    r8,[rip+0x11afd]        # 0x43cc00
  42b103:	mov    QWORD PTR [rsp+0x20],rdi
  42b108:	mov    rdx,rbx
  42b10b:	mov    ecx,ebp
  42b10d:	call   0x424b00
  42b112:	cmp    eax,0xffffffff
  42b115:	je     0x42b52d
  42b11b:	sub    eax,0x30
  42b11e:	cmp    eax,0x4a
  42b121:	ja     0x42b4cd
  42b127:	lea    rdx,[rip+0x11c3a]        # 0x43cd68
  42b12e:	movsxd rax,DWORD PTR [rdx+rax*4]
  42b132:	add    rdx,rax
  42b135:	jmp    rdx
  42b137:	lea    rcx,[rip+0x1195d]        # 0x43ca9b
  42b13e:	call   0x42a468
  42b143:	xor    ecx,ecx
  42b145:	call   0x42a540
  42b14a:	mov    BYTE PTR [rip+0x2ff7f],0x1        # 0x45b0d0
  42b151:	jmp    0x42b0f5
  42b153:	mov    WORD PTR [rip+0x2ff50],0x1        # 0x45b0ac
  42b15c:	jmp    0x42b0f5
  42b15e:	mov    DWORD PTR [rip+0x2ffec],0x1        # 0x45b154
  42b168:	jmp    0x42b0f5
  42b16a:	mov    rcx,QWORD PTR [r12]
  42b16e:	call   0x424900
  42b173:	mov    edx,0x3d
  42b178:	mov    rcx,rax
  42b17b:	mov    rsi,rax
  42b17e:	call   0x42a428
  42b183:	test   rax,rax
  42b186:	je     0x42b990
  42b18c:	lea    rcx,[rip+0x2feed]        # 0x45b080
  42b193:	mov    BYTE PTR [rax],0x0
  42b196:	lea    r8,[rax+0x1]
  42b19a:	mov    rdx,rsi
  42b19d:	mov    QWORD PTR [rsp+0x48],rcx
  42b1a2:	mov    rcx,QWORD PTR [rip+0x2ffe7]        # 0x45b190
  42b1a9:	call   0x40ef10
  42b1ae:	test   al,al
  42b1b0:	je     0x42bbe2
  42b1b6:	mov    rcx,rsi
  42b1b9:	call   0x42a4e8
  42b1be:	jmp    0x42b0f5
  42b1c3:	mov    BYTE PTR [rip+0x2fee8],0x1        # 0x45b0b2
  42b1ca:	jmp    0x42b0f5
  42b1cf:	mov    rcx,QWORD PTR [rip+0x2ffba]        # 0x45b190
  42b1d6:	lea    rdx,[rip+0x1174c]        # 0x43c929
  42b1dd:	call   0x40f020
  42b1e2:	jmp    0x42b0f5
  42b1e7:	mov    rcx,QWORD PTR [rip+0x2ffa2]        # 0x45b190
  42b1ee:	lea    rdx,[rip+0x1174a]        # 0x43c93f
  42b1f5:	call   0x40f020
  42b1fa:	jmp    0x42b0f5
  42b1ff:	mov    rax,QWORD PTR [rsp+0x40]
  42b204:	mov    rcx,QWORD PTR [rax]
  42b207:	call   0x424900
  42b20c:	mov    QWORD PTR [rsp+0x70],rax
  42b211:	jmp    0x42b0f5
  42b216:	mov    rax,QWORD PTR [rip+0x29653]        # 0x454870
  42b21d:	mov    rcx,QWORD PTR [rax]
  42b220:	call   0x405e50
  42b225:	jmp    0x42b0f5
  42b22a:	mov    BYTE PTR [rsp+0x98],0x1
  42b232:	jmp    0x42b0f5
  42b237:	mov    DWORD PTR [rsp+0x88],0x2
  42b242:	jmp    0x42b0f5
  42b247:	mov    rax,QWORD PTR [rip+0x29622]        # 0x454870
  42b24e:	mov    rcx,QWORD PTR [rax]
  42b251:	call   0x424900
  42b256:	mov    QWORD PTR [rsp+0x68],rax
  42b25b:	jmp    0x42b0f5
  42b260:	mov    rax,QWORD PTR [rip+0x29609]        # 0x454870
  42b267:	mov    DWORD PTR [rsp+0x88],0x4
  42b272:	mov    rcx,QWORD PTR [rax]
  42b275:	call   0x424900
  42b27a:	mov    QWORD PTR [rsp+0x90],rax
  42b282:	jmp    0x42b0f5
  42b287:	mov    rcx,QWORD PTR [rip+0x2ff02]        # 0x45b190
  42b28e:	lea    r8,[rip+0x11796]        # 0x43ca2b
  42b295:	lea    rdx,[rip+0x1179b]        # 0x43ca37
  42b29c:	call   0x40ef10
  42b2a1:	jmp    0x42b0f5
  42b2a6:	mov    rax,QWORD PTR [rip+0x295c3]        # 0x454870
  42b2ad:	mov    rcx,QWORD PTR [rax]
  42b2b0:	call   0x424900
  42b2b5:	mov    QWORD PTR [rsp+0x60],rax
  42b2ba:	jmp    0x42b0f5
  42b2bf:	mov    rsi,QWORD PTR [rip+0x295aa]        # 0x454870
  42b2c6:	mov    rcx,QWORD PTR [rsi]
  42b2c9:	call   0x424900
  42b2ce:	mov    rdx,QWORD PTR [rsi]
  42b2d1:	mov    QWORD PTR [rsp+0x90],rax
  42b2d9:	cmp    BYTE PTR [rdx],0x5c
  42b2dc:	je     0x42b511
  42b2e2:	mov    DWORD PTR [rsp+0x88],0x3
  42b2ed:	jmp    0x42b0f5
  42b2f2:	mov    rcx,QWORD PTR [rip+0x2fe97]        # 0x45b190
  42b2f9:	lea    r8,[rip+0x11733]        # 0x43ca33
  42b300:	lea    rdx,[rip+0x11730]        # 0x43ca37
  42b307:	call   0x40ef10
  42b30c:	jmp    0x42b0f5
  42b311:	mov    BYTE PTR [rsp+0x99],0x1
  42b319:	jmp    0x42b0f5
  42b31e:	mov    DWORD PTR [rip+0x2fe2c],0x2        # 0x45b154
  42b328:	jmp    0x42b0f5
  42b32d:	mov    rcx,QWORD PTR [r15]
  42b330:	call   0x424900
  42b335:	mov    QWORD PTR [rsp+0x78],rax
  42b33a:	jmp    0x42b0f5
  42b33f:	mov    rcx,QWORD PTR [r14]
  42b342:	call   0x424900
  42b347:	mov    QWORD PTR [rip+0x2fda2],rax        # 0x45b0f0
  42b34e:	jmp    0x42b0f5
  42b353:	mov    rcx,QWORD PTR [rip+0x2fe36]        # 0x45b190
  42b35a:	lea    rdx,[rip+0x115d3]        # 0x43c934
  42b361:	call   0x40f020
  42b366:	jmp    0x42b0f5
  42b36b:	mov    rax,QWORD PTR [rsp+0x30]
  42b370:	mov    rcx,QWORD PTR [rax]
  42b373:	call   0x424900
  42b378:	mov    BYTE PTR [rip+0x2fd61],0x0        # 0x45b0e0
  42b37f:	mov    QWORD PTR [rip+0x2fd52],rax        # 0x45b0d8
  42b386:	jmp    0x42b0f5
  42b38b:	mov    rax,QWORD PTR [rsp+0x38]
  42b390:	mov    rcx,QWORD PTR [rax]
  42b393:	call   0x424900
  42b398:	mov    edx,0x3d
  42b39d:	mov    rcx,rax
  42b3a0:	mov    rsi,rax
  42b3a3:	call   0x42a428
  42b3a8:	test   rax,rax
  42b3ab:	je     0x42b974
  42b3b1:	lea    rdx,[rax+0x1]
  42b3b5:	lea    r8,[rip+0x2fcec]        # 0x45b0a8
  42b3bc:	mov    BYTE PTR [rax],0x0
  42b3bf:	mov    r9d,0x1
  42b3c5:	mov    rcx,rsi
  42b3c8:	call   0x402120
  42b3cd:	test   al,al
  42b3cf:	jne    0x42b1b6
  42b3d5:	mov    rbx,QWORD PTR [rip+0x2fd8c]        # 0x45b168
  42b3dc:	call   r13
  42b3df:	lea    rdx,[rip+0x11772]        # 0x43cb58
  42b3e6:	lea    rcx,[rax+0x60]
  42b3ea:	mov    r9,rsi
  42b3ed:	mov    r8,rbx
  42b3f0:	call   0x426370
  42b3f5:	mov    ecx,0x1
  42b3fa:	call   0x42a540
  42b3ff:	mov    rax,QWORD PTR [rip+0x2946a]        # 0x454870
  42b406:	mov    rcx,QWORD PTR [rax]
  42b409:	call   0x424900
  42b40e:	mov    QWORD PTR [rsp+0x80],rax
  42b416:	jmp    0x42b0f5
  42b41b:	mov    DWORD PTR [rip+0x2fc83],0x4        # 0x45b0a8
  42b425:	jmp    0x42b0f5
  42b42a:	mov    rax,QWORD PTR [rip+0x2943f]        # 0x454870
  42b431:	mov    rcx,QWORD PTR [rax]
  42b434:	call   0x424900
  42b439:	mov    BYTE PTR [rip+0x2fc90],0x0        # 0x45b0d0
  42b440:	mov    QWORD PTR [rip+0x2fc81],rax        # 0x45b0c8
  42b447:	jmp    0x42b0f5
  42b44c:	mov    rcx,QWORD PTR [rip+0x2fd3d]        # 0x45b190
  42b453:	lea    rdx,[rip+0x11607]        # 0x43ca61
  42b45a:	call   0x40f020
  42b45f:	jmp    0x42b0f5
  42b464:	mov    DWORD PTR [rip+0x2fc3a],0x1        # 0x45b0a8
  42b46e:	jmp    0x42b0f5
  42b473:	mov    rax,QWORD PTR [rip+0x29416]        # 0x454890
  42b47a:	lea    rdx,[rip+0x11603]        # 0x43ca84
  42b481:	movsxd rax,DWORD PTR [rax]
  42b484:	mov    rbx,QWORD PTR [rbx+rax*8-0x8]
  42b489:	mov    rcx,rbx
  42b48c:	call   0x42a420
  42b491:	test   eax,eax
  42b493:	je     0x42b4a8
  42b495:	lea    rdx,[rip+0x115ef]        # 0x43ca8b
  42b49c:	mov    rcx,rbx
  42b49f:	call   0x42a420
  42b4a4:	test   eax,eax
  42b4a6:	jne    0x42b4cd
  42b4a8:	call   0x407990
  42b4ad:	xor    ecx,ecx
  42b4af:	call   0x42a540
  42b4b4:	mov    BYTE PTR [rsp+0x9a],0x1
  42b4bc:	jmp    0x42b0f5
  42b4c1:	mov    BYTE PTR [rip+0x2fc18],0x1        # 0x45b0e0
  42b4c8:	jmp    0x42b0f5
  42b4cd:	mov    rbx,QWORD PTR [rip+0x2fc94]        # 0x45b168
  42b4d4:	call   r13
  42b4d7:	lea    rdx,[rip+0x116fa]        # 0x43cbd8
  42b4de:	lea    rcx,[rax+0x60]
  42b4e2:	mov    r8,rbx
  42b4e5:	call   0x426370
  42b4ea:	mov    ecx,0x1
  42b4ef:	call   0x42a540
  42b4f4:	call   r13
  42b4f7:	lea    rcx,[rax+0x30]
  42b4fb:	call   0x42a368
  42b500:	mov    ecx,eax
  42b502:	call   0x42a380
  42b507:	test   eax,eax
  42b509:	sete   dl
  42b50c:	jmp    0x42ae8f
  42b511:	add    rax,0x1
  42b515:	mov    DWORD PTR [rsp+0x88],0x1
  42b520:	mov    QWORD PTR [rsp+0x90],rax
  42b528:	jmp    0x42b0f5
  42b52d:	mov    rsi,QWORD PTR [rip+0x2935c]        # 0x454890
  42b534:	mov    edx,ebp
  42b536:	mov    eax,DWORD PTR [rsi]
  42b538:	sub    edx,eax
  42b53a:	test   edx,edx
  42b53c:	jg     0x42b54f
  42b53e:	jmp    0x42b5aa
  42b540:	mov    eax,DWORD PTR [rsi]
  42b542:	mov    edx,ebp
  42b544:	add    eax,0x1
  42b547:	sub    edx,eax
  42b549:	mov    DWORD PTR [rsi],eax
  42b54b:	test   edx,edx
  42b54d:	jle    0x42b5aa
  42b54f:	cmp    QWORD PTR [rsp+0x60],0x0
  42b555:	je     0x42b590
  42b557:	cmp    QWORD PTR [rsp+0x78],0x0
  42b55d:	je     0x42b59d
  42b55f:	cmp    BYTE PTR [rip+0x2fc34],0x0        # 0x45b19a
  42b566:	jne    0x42b540
  42b568:	cdqe   
  42b56a:	mov    rdi,QWORD PTR [rip+0x2fbf7]        # 0x45b168
  42b571:	mov    r12,QWORD PTR [rbx+rax*8]
  42b575:	call   r13
  42b578:	lea    rdx,[rip+0x116b1]        # 0x43cc30
  42b57f:	lea    rcx,[rax+0x60]
  42b583:	mov    r8,rdi
  42b586:	mov    r9,r12
  42b589:	call   0x426370
  42b58e:	jmp    0x42b540
  42b590:	cdqe   
  42b592:	mov    rax,QWORD PTR [rbx+rax*8]
  42b596:	mov    QWORD PTR [rsp+0x60],rax
  42b59b:	jmp    0x42b540
  42b59d:	cdqe   
  42b59f:	mov    rax,QWORD PTR [rbx+rax*8]
  42b5a3:	mov    QWORD PTR [rsp+0x78],rax
  42b5a8:	jmp    0x42b540
  42b5aa:	cmp    DWORD PTR [rsp+0x88],0x0
  42b5b2:	jne    0x42b5f8
  42b5b4:	cmp    BYTE PTR [rip+0x2fb95],0x0        # 0x45b150
  42b5bb:	jne    0x42b942
  42b5c1:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b5c9:	test   al,al
  42b5cb:	mov    BYTE PTR [rsp+0x48],al
  42b5cf:	je     0x42b604
  42b5d1:	mov    rbx,QWORD PTR [rip+0x2fb90]        # 0x45b168
  42b5d8:	call   r13
  42b5db:	lea    rdx,[rip+0x11686]        # 0x43cc68
  42b5e2:	lea    rcx,[rax+0x60]
  42b5e6:	mov    r8,rbx
  42b5e9:	call   0x426370
  42b5ee:	mov    ecx,0x1
  42b5f3:	call   0x42a540
  42b5f8:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b600:	mov    BYTE PTR [rsp+0x48],al
  42b604:	cmp    QWORD PTR [rip+0x2fabc],0x0        # 0x45b0c8
  42b60c:	je     0x42ba80
  42b612:	cmp    QWORD PTR [rip+0x2fabe],0x0        # 0x45b0d8
  42b61a:	je     0x42ba54
  42b620:	mov    r12,QWORD PTR [rsp+0x78]
  42b625:	test   r12,r12
  42b628:	je     0x42ba3e
  42b62e:	lea    rcx,[rip+0x11673]        # 0x43cca8
  42b635:	mov    rdx,r12
  42b638:	call   0x424630
  42b63d:	mov    QWORD PTR [rsp+0x38],rax
  42b642:	xor    edi,edi
  42b644:	cmp    DWORD PTR [rip+0x2fb09],0x2        # 0x45b154
  42b64b:	je     0x42bad2
  42b651:	mov    esi,DWORD PTR [rsp+0x88]
  42b658:	mov    rax,QWORD PTR [rsp+0x70]
  42b65d:	mov    r15,QWORD PTR [rsp+0x68]
  42b662:	mov    QWORD PTR [rsp+0xf8],rbx
  42b66a:	mov    QWORD PTR [rsp+0x40],r13
  42b66f:	mov    DWORD PTR [rsp+0x30],esi
  42b673:	lea    rsi,[rip+0x2fa06]        # 0x45b080
  42b67a:	mov    rbp,rax
  42b67d:	nop    DWORD PTR [rax]
  42b680:	mov    ecx,0x40
  42b685:	call   0x424800
  42b68a:	mov    ecx,0x40
  42b68f:	mov    r13,rax
  42b692:	call   0x424800
  42b697:	mov    rbx,rax
  42b69a:	lea    rax,[rip+0x1161e]        # 0x43ccbf
  42b6a1:	cmp    DWORD PTR [rsp+0x30],0x2
  42b6a6:	mov    QWORD PTR [r13+0x0],rax
  42b6aa:	lea    rax,[rip+0x11613]        # 0x43ccc4
  42b6b1:	mov    QWORD PTR [rbx],r15
  42b6b4:	mov    QWORD PTR [r13+0x8],rax
  42b6b8:	lea    rax,[rip+0x1160a]        # 0x43ccc9
  42b6bf:	mov    QWORD PTR [rbx+0x8],rbp
  42b6c3:	mov    QWORD PTR [r13+0x10],rax
  42b6c7:	lea    rax,[rip+0x11600]        # 0x43ccce
  42b6ce:	mov    QWORD PTR [rbx+0x10],r12
  42b6d2:	mov    QWORD PTR [r13+0x18],rax
  42b6d6:	lea    rax,[rip+0x115fa]        # 0x43ccd7
  42b6dd:	mov    QWORD PTR [rbx+0x18],rdi
  42b6e1:	mov    QWORD PTR [r13+0x20],rax
  42b6e5:	je     0x42b7c9
  42b6eb:	mov    rax,QWORD PTR [rsp+0x60]
  42b6f0:	mov    QWORD PTR [rbx+0x20],rax
  42b6f4:	lea    rax,[rip+0x115e3]        # 0x43ccde
  42b6fb:	xor    r14d,r14d
  42b6fe:	mov    QWORD PTR [r13+0x28],rax
  42b702:	mov    rax,QWORD PTR [rsi+0xe8]
  42b709:	mov    QWORD PTR [rbx+0x28],rax
  42b70d:	lea    rax,[rip+0x115e4]        # 0x43ccf8
  42b714:	mov    QWORD PTR [r13+0x30],rax
  42b718:	cmp    BYTE PTR [rsi+0xd0],0x0
  42b71f:	je     0x42b7aa
  42b725:	mov    r8d,0x1
  42b72b:	mov    rdx,rbx
  42b72e:	mov    QWORD PTR [rbx+0x30],r14
  42b732:	mov    rcx,r13
  42b735:	mov    QWORD PTR [r13+0x38],0x0
  42b73d:	mov    QWORD PTR [rbx+0x38],0x0
  42b745:	call   0x427f50
  42b74a:	mov    rcx,r13
  42b74d:	mov    QWORD PTR [rsi],rax
  42b750:	call   0x42a4e8
  42b755:	mov    rcx,rbx
  42b758:	call   0x42a4e8
  42b75d:	mov    rcx,QWORD PTR [rsi]
  42b760:	call   0x427df8
  42b765:	cmp    eax,0x1
  42b768:	jne    0x42b7e1
  42b76a:	mov    rcx,QWORD PTR [rsi]
  42b76d:	call   0x427f48
  42b772:	test   eax,eax
  42b774:	je     0x42b7e1
  42b776:	test   rdi,rdi
  42b779:	jne    0x42b7e1
  42b77b:	cmp    DWORD PTR [rsi+0xd4],0x1
  42b782:	je     0x42b90b
  42b788:	mov    rcx,QWORD PTR [rsi]
  42b78b:	call   0x427ee8
  42b790:	mov    rcx,QWORD PTR [rsp+0x38]
  42b795:	xor    r8d,r8d
  42b798:	mov    edx,0x64
  42b79d:	call   0x427a10
  42b7a2:	mov    rdi,rax
  42b7a5:	jmp    0x42b680
  42b7aa:	lea    rcx,[rip+0x11557]        # 0x43cd08
  42b7b1:	call   0x42a4d0
  42b7b6:	test   rax,rax
  42b7b9:	lea    rax,[rip+0x112b6]        # 0x43ca76
  42b7c0:	cmove  r14,rax
  42b7c4:	jmp    0x42b725
  42b7c9:	cmp    QWORD PTR [rsp+0x60],0x0
  42b7cf:	jne    0x42b6eb
  42b7d5:	lea    rax,[rip+0x11291]        # 0x43ca6d
  42b7dc:	jmp    0x42b6f0
  42b7e1:	mov    rbx,QWORD PTR [rsp+0xf8]
  42b7e9:	mov    r13,QWORD PTR [rsp+0x40]
  42b7ee:	mov    rcx,rdi
  42b7f1:	call   0x42a4e8
  42b7f6:	mov    rcx,QWORD PTR [rsp+0x38]
  42b7fb:	call   0x42a4e8
  42b800:	mov    rcx,QWORD PTR [rip+0x2f879]        # 0x45b080
  42b807:	call   0x427df8
  42b80c:	sub    eax,0x1
  42b80f:	je     0x42bb9d
  42b815:	call   0x406090
  42b81a:	mov    rcx,QWORD PTR [rip+0x2f85f]        # 0x45b080
  42b821:	lea    rdx,[rip+0xfffffffffffda858]        # 0x406080
  42b828:	xor    r8d,r8d
  42b82b:	call   0x427e00
  42b830:	call   0x401d70
  42b835:	cmp    DWORD PTR [rsp+0x30],0x2
  42b83a:	je     0x42bb68
  42b840:	mov    rsi,QWORD PTR [rsp+0x80]
  42b848:	test   rsi,rsi
  42b84b:	je     0x42b86c
  42b84d:	lea    rdx,[rip+0x114cc]        # 0x43cd20
  42b854:	mov    rcx,rsi
  42b857:	call   0x42a510
  42b85c:	test   rax,rax
  42b85f:	mov    QWORD PTR [rip+0x2f922],rax        # 0x45b188
  42b866:	je     0x42bb0a
  42b86c:	cmp    DWORD PTR [rsp+0x30],0x4
  42b871:	je     0x42b91f
  42b877:	cmp    DWORD PTR [rsp+0x30],0x1
  42b87c:	je     0x42b9e5
  42b882:	cmp    DWORD PTR [rsp+0x30],0x3
  42b887:	je     0x42baac
  42b88d:	cmp    BYTE PTR [rsp+0x99],0x0
  42b895:	je     0x42baec
  42b89b:	mov    ecx,0x1
  42b8a0:	call   0x401ba0
  42b8a5:	cmp    BYTE PTR [rip+0x2f8ee],0x0        # 0x45b19a
  42b8ac:	je     0x42baf9
  42b8b2:	xor    ecx,ecx
  42b8b4:	cmp    BYTE PTR [rsp+0x98],0x0
  42b8bc:	sete   cl
  42b8bf:	call   0x4087c0
  42b8c4:	call   r13
  42b8c7:	mov    rcx,rax
  42b8ca:	call   0x40c0f0
  42b8cf:	mov    ebx,eax
  42b8d1:	mov    rcx,QWORD PTR [rip+0x2f8b0]        # 0x45b188
  42b8d8:	test   rcx,rcx
  42b8db:	je     0x42b8e2
  42b8dd:	call   0x42a538
  42b8e2:	mov    rcx,QWORD PTR [rip+0x2f797]        # 0x45b080
  42b8e9:	call   0x427ee8
  42b8ee:	xor    ecx,ecx
  42b8f0:	call   0x405e50
  42b8f5:	mov    eax,ebx
  42b8f7:	add    rsp,0xa8
  42b8fe:	pop    rbx
  42b8ff:	pop    rsi
  42b900:	pop    rdi
  42b901:	pop    rbp
  42b902:	pop    r12
  42b904:	pop    r13
  42b906:	pop    r14
  42b908:	pop    r15
  42b90a:	ret    
  42b90b:	mov    rbx,QWORD PTR [rsp+0xf8]
  42b913:	mov    r13,QWORD PTR [rsp+0x40]
  42b918:	xor    edi,edi
  42b91a:	jmp    0x42b7ee
  42b91f:	cmp    BYTE PTR [rsp+0x99],0x0
  42b927:	je     0x42b96a
  42b929:	movsx  edx,BYTE PTR [rsp+0x48]
  42b92e:	mov    rcx,QWORD PTR [rsp+0x90]
  42b936:	xor    r8d,r8d
  42b939:	call   0x401ed0
  42b93e:	mov    ebx,eax
  42b940:	jmp    0x42b8d1
  42b942:	movzx  eax,BYTE PTR [rsp+0x9a]
  42b94a:	mov    DWORD PTR [rsp+0x88],0x4
  42b955:	mov    QWORD PTR [rsp+0x90],0x0
  42b961:	mov    BYTE PTR [rsp+0x48],al
  42b965:	jmp    0x42b604
  42b96a:	mov    rcx,QWORD PTR [rbx]
  42b96d:	call   0x40e0b0
  42b972:	jmp    0x42b929
  42b974:	lea    r8,[rip+0x2f72d]        # 0x45b0a8
  42b97b:	mov    r9d,0x1
  42b981:	xor    edx,edx
  42b983:	mov    rcx,rsi
  42b986:	call   0x402120
  42b98b:	jmp    0x42b3cd
  42b990:	mov    rcx,QWORD PTR [rip+0x2f7f9]        # 0x45b190
  42b997:	lea    rax,[rip+0x2f6e2]        # 0x45b080
  42b99e:	mov    rdx,rsi
  42b9a1:	mov    QWORD PTR [rsp+0x48],rax
  42b9a6:	call   0x40ee60
  42b9ab:	test   al,al
  42b9ad:	jne    0x42b1b6
  42b9b3:	mov    rdi,rsi
  42b9b6:	mov    rsi,QWORD PTR [rsp+0x48]
  42b9bb:	mov    rbx,QWORD PTR [rsi+0xe8]
  42b9c2:	call   r13
  42b9c5:	lea    rdx,[rip+0x111bc]        # 0x43cb88
  42b9cc:	lea    rcx,[rax+0x60]
  42b9d0:	mov    r9,rdi
  42b9d3:	mov    r8,rbx
  42b9d6:	call   0x426370
  42b9db:	mov    ecx,0x1
  42b9e0:	call   0x42a540
  42b9e5:	cmp    DWORD PTR [rip+0x2f7b8],0x2        # 0x45b1a4
  42b9ec:	je     0x42bb44
  42b9f2:	call   0x40be10
  42b9f7:	mov    rdx,QWORD PTR [rsp+0x90]
  42b9ff:	mov    rsi,rax
  42ba02:	or     rcx,0xffffffffffffffff
  42ba06:	xor    eax,eax
  42ba08:	xor    ebx,ebx
  42ba0a:	mov    rdi,rdx
  42ba0d:	repnz scas al,BYTE PTR es:[rdi]
  42ba0f:	not    rcx
  42ba12:	mov    r8,rcx
  42ba15:	mov    rcx,rsi
  42ba18:	sub    r8d,0x1
  42ba1c:	call   0x40be60
  42ba21:	xor    edx,edx
  42ba23:	mov    rcx,rsi
  42ba26:	call   0x402d60
  42ba2b:	mov    rcx,rsi
  42ba2e:	cmp    eax,0x5
  42ba31:	sete   bl
  42ba34:	call   0x40c0b0
  42ba39:	jmp    0x42b8d1
  42ba3e:	lea    rcx,[rip+0x11258]        # 0x43cc9d
  42ba45:	call   0x424900
  42ba4a:	mov    QWORD PTR [rsp+0x38],rax
  42ba4f:	jmp    0x42b642
  42ba54:	cmp    BYTE PTR [rip+0x2f685],0x0        # 0x45b0e0
  42ba5b:	jne    0x42b620
  42ba61:	lea    rcx,[rip+0x11233]        # 0x43cc9b
  42ba68:	call   0x424900
  42ba6d:	mov    BYTE PTR [rip+0x2f66c],0x0        # 0x45b0e0
  42ba74:	mov    QWORD PTR [rip+0x2f65d],rax        # 0x45b0d8
  42ba7b:	jmp    0x42b620
  42ba80:	cmp    BYTE PTR [rip+0x2f649],0x0        # 0x45b0d0
  42ba87:	jne    0x42b612
  42ba8d:	lea    rcx,[rip+0x11205]        # 0x43cc99
  42ba94:	call   0x424900
  42ba99:	mov    BYTE PTR [rip+0x2f630],0x0        # 0x45b0d0
  42baa0:	mov    QWORD PTR [rip+0x2f621],rax        # 0x45b0c8
  42baa7:	jmp    0x42b612
  42baac:	cmp    DWORD PTR [rip+0x2f6f1],0x2        # 0x45b1a4
  42bab3:	je     0x42bb56
  42bab9:	mov    rcx,QWORD PTR [rsp+0x90]
  42bac1:	xor    ebx,ebx
  42bac3:	call   0x406410
  42bac8:	test   al,al
  42baca:	sete   bl
  42bacd:	jmp    0x42b8d1
  42bad2:	mov    rcx,QWORD PTR [rsp+0x38]
  42bad7:	xor    r8d,r8d
  42bada:	mov    edx,0x64
  42badf:	call   0x427a10
  42bae4:	mov    rdi,rax
  42bae7:	jmp    0x42b651
  42baec:	mov    rcx,QWORD PTR [rbx]
  42baef:	call   0x40e0b0
  42baf4:	jmp    0x42b89b
  42baf9:	lea    rcx,[rip+0x1124e]        # 0x43cd4e
  42bb00:	call   0x4263a0
  42bb05:	jmp    0x42b8b2
  42bb0a:	call   QWORD PTR [rip+0x310dc]        # 0x45cbec
  42bb10:	mov    ecx,DWORD PTR [rax]
  42bb12:	call   0x42a408
  42bb17:	mov    rdi,QWORD PTR [rip+0x2f64a]        # 0x45b168
  42bb1e:	mov    r12,rax
  42bb21:	call   r13
  42bb24:	lea    rdx,[rip+0x111fd]        # 0x43cd28
  42bb2b:	lea    rcx,[rax+0x60]
  42bb2f:	mov    QWORD PTR [rsp+0x20],r12
  42bb34:	mov    r9,rsi
  42bb37:	mov    r8,rdi
  42bb3a:	call   0x426370
  42bb3f:	jmp    0x42b86c
  42bb44:	mov    rcx,QWORD PTR [rsp+0x90]
  42bb4c:	call   0x42a468
  42bb51:	jmp    0x42b9f2
  42bb56:	mov    rcx,QWORD PTR [rsp+0x90]
  42bb5e:	call   0x42a468
  42bb63:	jmp    0x42bab9
  42bb68:	cmp    BYTE PTR [rsp+0x99],0x0
  42bb70:	jne    0x42bb7a
  42bb72:	mov    rcx,QWORD PTR [rbx]
  42bb75:	call   0x40e0b0
  42bb7a:	xor    edx,edx
  42bb7c:	xor    ecx,ecx
  42bb7e:	call   0x418220
  42bb83:	mov    rcx,QWORD PTR [rip+0x2f4f6]        # 0x45b080
  42bb8a:	mov    ebx,eax
  42bb8c:	call   0x427ee8
  42bb91:	xor    ecx,ecx
  42bb93:	test   bl,bl
  42bb95:	sete   cl
  42bb98:	call   0x42a540
  42bb9d:	mov    rcx,QWORD PTR [rip+0x2f4dc]        # 0x45b080
  42bba4:	call   0x427f10
  42bba9:	mov    rbx,QWORD PTR [rip+0x2f5b8]        # 0x45b168
  42bbb0:	mov    rsi,rax
  42bbb3:	call   r13
  42bbb6:	lea    rdx,[rip+0x1115c]        # 0x43cd19
  42bbbd:	lea    rcx,[rax+0x60]
  42bbc1:	mov    r9,rsi
  42bbc4:	mov    r8,rbx
  42bbc7:	call   0x426370
  42bbcc:	mov    rcx,QWORD PTR [rip+0x2f4ad]        # 0x45b080
  42bbd3:	call   0x427ee8
  42bbd8:	mov    ecx,0x2
  42bbdd:	call   0x42a540
  42bbe2:	mov    rdi,rsi
  42bbe5:	mov    rsi,QWORD PTR [rsp+0x48]
  42bbea:	mov    rbx,QWORD PTR [rsi+0xe8]
  42bbf1:	call   r13
  42bbf4:	lea    rdx,[rip+0x10fb5]        # 0x43cbb0
  42bbfb:	lea    rcx,[rax+0x60]
  42bbff:	mov    r9,rdi
  42bc02:	mov    r8,rbx
  42bc05:	call   0x426370
  42bc0a:	mov    ecx,0x1
  42bc0f:	call   0x42a540
  42bc14:	nop
  42bc15:	nop
  42bc16:	nop
  42bc17:	nop
  42bc18:	nop
  42bc19:	nop
  42bc1a:	nop
  42bc1b:	nop
  42bc1c:	nop
  42bc1d:	nop
  42bc1e:	nop
  42bc1f:	nop
  42bc20:	push   r15
  42bc22:	push   r14
  42bc24:	push   r13
  42bc26:	push   r12
  42bc28:	push   rbp
  42bc29:	push   rdi
  42bc2a:	push   rsi
  42bc2b:	push   rbx
  42bc2c:	sub    rsp,0x48
  42bc30:	mov    rax,QWORD PTR [rsp+0xb0]
  42bc38:	mov    rdi,QWORD PTR [rsp+0xb8]
  42bc40:	mov    DWORD PTR [rsp+0x30],r8d
  42bc45:	mov    r13d,DWORD PTR [rsp+0x30]
  42bc4a:	mov    ebp,ecx
  42bc4c:	mov    rsi,rdx
  42bc4f:	mov    DWORD PTR [rsp+0x34],r9d
  42bc54:	mov    QWORD PTR [rsp+0x38],rax
  42bc59:	cmp    r13w,0x1
  42bc5e:	jne    0x42bc94
  42bc60:	mov    rdx,QWORD PTR [rsp+0x38]
  42bc65:	mov    eax,r9d
  42bc68:	shl    rax,0x5
  42bc6c:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  42bc71:	mov    rdx,rdi
  42bc74:	call   0x42a4f8
  42bc79:	mov    r10d,DWORD PTR [rsp+0x34]
  42bc7e:	mov    rax,QWORD PTR [rsp+0x38]
  42bc83:	mov    r12d,ebp
  42bc86:	xor    ebx,ebx
  42bc88:	dec    ebp
  42bc8a:	shl    r10,0x5
  42bc8e:	lea    r15,[rax+r10*1]
  42bc92:	jmp    0x42bcc9
  42bc94:	cmp    WORD PTR [rsp+0x30],0x2
  42bc9a:	jne    0x42bc79
  42bc9c:	mov    eax,DWORD PTR [rsp+0x34]
  42bca0:	lea    rdx,[rip+0x1190a]        # 0x43d5b1
  42bca7:	mov    rcx,rdi
  42bcaa:	shl    rax,0x5
  42bcae:	add    rax,QWORD PTR [rsp+0x38]
  42bcb3:	mov    r9,QWORD PTR [rax+0x8]
  42bcb7:	mov    r8,QWORD PTR [rax+0x10]
  42bcbb:	call   0x426370
  42bcc0:	jmp    0x42bc79
  42bcc2:	cmp    ebp,ebx
  42bcc4:	ja     0x42bce8
  42bcc6:	inc    rbx
  42bcc9:	cmp    rbx,r12
  42bccc:	je     0x42bd1b
  42bcce:	xor    r14d,r14d
  42bcd1:	cmp    DWORD PTR [rsi+rbx*4],r14d
  42bcd5:	jbe    0x42bcc2
  42bcd7:	mov    rcx,QWORD PTR [r15+0x8]
  42bcdb:	mov    rdx,rdi
  42bcde:	inc    r14d
  42bce1:	call   0x42a4f8
  42bce6:	jmp    0x42bcd1
  42bce8:	test   r13w,r13w
  42bcec:	jne    0x42bcfd
  42bcee:	mov    rdx,rdi
  42bcf1:	mov    ecx,0x20
  42bcf6:	call   0x42a500
  42bcfb:	jmp    0x42bcc6
  42bcfd:	mov    r8,QWORD PTR [r15+0x8]
  42bd01:	lea    rdx,[rip+0x118ca]        # 0x43d5d2
  42bd08:	mov    rcx,rdi
  42bd0b:	mov    QWORD PTR [rsp+0x20],r8
  42bd10:	mov    r9,QWORD PTR [r15+0x18]
  42bd14:	call   0x426370
  42bd19:	jmp    0x42bcc6
  42bd1b:	cmp    WORD PTR [rsp+0x30],0x2
  42bd21:	jne    0x42bd49
  42bd23:	mov    eax,DWORD PTR [rsp+0x34]
  42bd27:	lea    rdx,[rip+0x11883]        # 0x43d5b1
  42bd2e:	mov    rcx,rdi
  42bd31:	shl    rax,0x5
  42bd35:	add    rax,QWORD PTR [rsp+0x38]
  42bd3a:	mov    r9,QWORD PTR [rax+0x20]
  42bd3e:	mov    r8,QWORD PTR [rax+0x8]
  42bd42:	call   0x426370
  42bd47:	jmp    0x42bd6b
  42bd49:	cmp    WORD PTR [rsp+0x30],0x1
  42bd4f:	jne    0x42bd6b
  42bd51:	mov    eax,DWORD PTR [rsp+0x34]
  42bd55:	mov    rdx,QWORD PTR [rsp+0x38]
  42bd5a:	shl    rax,0x5
  42bd5e:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  42bd63:	mov    rdx,rdi
  42bd66:	call   0x42a4f8
  42bd6b:	mov    rdx,rdi
  42bd6e:	mov    ecx,0xa
  42bd73:	add    rsp,0x48
  42bd77:	pop    rbx
  42bd78:	pop    rsi
  42bd79:	pop    rdi
  42bd7a:	pop    rbp
  42bd7b:	pop    r12
  42bd7d:	pop    r13
  42bd7f:	pop    r14
  42bd81:	pop    r15
  42bd83:	jmp    0x42a500
  42bd88:	nop
  42bd89:	nop
  42bd8a:	nop
  42bd8b:	nop
  42bd8c:	nop
  42bd8d:	nop
  42bd8e:	nop
  42bd8f:	nop
  42bd90:	(bad)  
  42bd91:	(bad)  
  42bd92:	(bad)  
  42bd93:	(bad)  
  42bd94:	(bad)  
  42bd95:	(bad)  
  42bd96:	(bad)  
  42bd97:	inc    DWORD PTR [rax]
  42bd99:	add    BYTE PTR [rax],al
  42bd9b:	add    BYTE PTR [rax],al
  42bd9d:	add    BYTE PTR [rax],al
  42bd9f:	add    bh,bh
  42bda1:	(bad)  
  42bda2:	(bad)  
  42bda3:	(bad)  
  42bda4:	(bad)  
  42bda5:	(bad)  
  42bda6:	(bad)  
  42bda7:	inc    DWORD PTR [rax]
  42bda9:	add    BYTE PTR [rax],al
  42bdab:	add    BYTE PTR [rax],al
  42bdad:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000042c000 <.data>:
  42c000:	or     al,BYTE PTR [rax]
	...
  42c00e:	add    BYTE PTR [rax],al
  42c010:	add    DWORD PTR [rax],eax
	...
  42c03e:	add    BYTE PTR [rax],al
  42c040:	xchg   esp,eax
  42c041:	(bad)  
  42c042:	rex.XB add BYTE PTR [r8],al
	...
  42c055:	add    BYTE PTR [rax],al
  42c057:	add    BYTE PTR [rcx+0x0],ah
  42c05a:	add    BYTE PTR [rax],al
  42c05c:	add    BYTE PTR [rax],al
  42c05e:	add    BYTE PTR [rax],al
  42c060:	popf   
  42c061:	(bad)  
  42c062:	rex.XB add BYTE PTR [r8],al
	...
  42c075:	add    BYTE PTR [rax],al
  42c077:	add    BYTE PTR [rcx+0x0],al
  42c07a:	add    BYTE PTR [rax],al
  42c07c:	add    BYTE PTR [rax],al
  42c07e:	add    BYTE PTR [rax],al
  42c080:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c081:	(bad)  
  42c082:	rex.XB add BYTE PTR [r8],al
  42c085:	add    BYTE PTR [rax],al
  42c087:	add    BYTE PTR [rcx],al
	...
  42c095:	add    BYTE PTR [rax],al
  42c097:	add    BYTE PTR [rbx+0x0],ah
  42c09a:	add    BYTE PTR [rax],al
  42c09c:	add    BYTE PTR [rax],al
  42c09e:	add    BYTE PTR [rax],al
  42c0a0:	xlat   BYTE PTR ds:[rbx]
  42c0a1:	int3   
  42c0a2:	rex.XB add BYTE PTR [r8],al
  42c0a5:	add    BYTE PTR [rax],al
  42c0a7:	add    BYTE PTR [rcx],al
	...
  42c0b5:	add    BYTE PTR [rax],al
  42c0b7:	add    BYTE PTR [rax+rax*1+0x0],ah
  42c0bb:	add    BYTE PTR [rax],al
  42c0bd:	add    BYTE PTR [rax],al
  42c0bf:	add    BYTE PTR [rsi+0x43ce],ch
	...
  42c0d5:	add    BYTE PTR [rax],al
  42c0d7:	add    BYTE PTR [rbp+0x0],ah
  42c0da:	add    BYTE PTR [rax],al
  42c0dc:	add    BYTE PTR [rax],al
  42c0de:	add    BYTE PTR [rax],al
  42c0e0:	mov    ebx,0x43ce
	...
  42c0f5:	add    BYTE PTR [rax],al
  42c0f7:	add    BYTE PTR [rbp+0x0],al
  42c0fa:	add    BYTE PTR [rax],al
  42c0fc:	add    BYTE PTR [rax],al
  42c0fe:	add    BYTE PTR [rax],al
  42c100:	(bad)  
  42c101:	(bad)  
  42c102:	rex.XB add BYTE PTR [r8],al
  42c105:	add    BYTE PTR [rax],al
  42c107:	add    BYTE PTR [rcx],al
	...
  42c115:	add    BYTE PTR [rax],al
  42c117:	add    BYTE PTR [rsi+0x0],ah
  42c11a:	add    BYTE PTR [rax],al
  42c11c:	add    BYTE PTR [rax],al
  42c11e:	add    BYTE PTR [rax],al
  42c120:	int3   
  42c121:	(bad)  
  42c122:	rex.XB add BYTE PTR [r8],al
  42c125:	add    BYTE PTR [rax],al
  42c127:	add    BYTE PTR [rcx],al
	...
  42c135:	add    BYTE PTR [rax],al
  42c137:	add    BYTE PTR [rsi+0x0],al
  42c13a:	add    BYTE PTR [rax],al
  42c13c:	add    BYTE PTR [rax],al
  42c13e:	add    BYTE PTR [rax],al
  42c140:	fmul   st(6),st
  42c142:	rex.XB add BYTE PTR [r8],al
	...
  42c155:	add    BYTE PTR [rax],al
  42c157:	add    BYTE PTR [rdx+0x0],bh
  42c15a:	add    BYTE PTR [rax],al
  42c15c:	add    BYTE PTR [rax],al
  42c15e:	add    BYTE PTR [rax],al
  42c160:	mov    edi,0x43cc
  42c165:	add    BYTE PTR [rax],al
  42c167:	add    BYTE PTR [rcx],al
	...
  42c175:	add    BYTE PTR [rax],al
  42c177:	add    BYTE PTR [rax+0x0],ch
  42c17a:	add    BYTE PTR [rax],al
  42c17c:	add    BYTE PTR [rax],al
  42c17e:	add    BYTE PTR [rax],al
  42c180:	icebp  
  42c181:	(bad)  
  42c182:	rex.XB add BYTE PTR [r8],al
	...
  42c195:	add    BYTE PTR [rax],al
  42c197:	add    BYTE PTR [rax+0x0],cl
  42c19a:	add    BYTE PTR [rax],al
  42c19c:	add    BYTE PTR [rax],al
  42c19e:	add    BYTE PTR [rax],al
  42c1a0:	test   dh,0x43
	...
  42c1b7:	add    BYTE PTR [rax+rax*1+0x0],ch
  42c1bb:	add    BYTE PTR [rax],al
  42c1bd:	add    BYTE PTR [rax],al
  42c1bf:	add    bl,bh
  42c1c1:	(bad)  
  42c1c2:	rex.XB add BYTE PTR [r8],al
  42c1c5:	add    BYTE PTR [rax],al
  42c1c7:	add    BYTE PTR [rcx],al
	...
  42c1d5:	add    BYTE PTR [rax],al
  42c1d7:	add    BYTE PTR [rax+rax*1+0x0],cl
  42c1db:	add    BYTE PTR [rax],al
  42c1dd:	add    BYTE PTR [rax],al
  42c1df:	add    BYTE PTR [rdi+rcx*8],al
  42c1e2:	rex.XB add BYTE PTR [r8],al
	...
  42c1f5:	add    BYTE PTR [rax],al
  42c1f7:	add    BYTE PTR [rsi+0x0],ch
  42c1fa:	add    BYTE PTR [rax],al
  42c1fc:	add    BYTE PTR [rax],al
  42c1fe:	add    BYTE PTR [rax],al
  42c200:	adc    bh,cl
  42c202:	rex.XB add BYTE PTR [r8],al
	...
  42c215:	add    BYTE PTR [rax],al
  42c217:	add    BYTE PTR [rcx],dh
  42c219:	add    BYTE PTR [rax],al
  42c21b:	add    BYTE PTR [rax],al
  42c21d:	add    BYTE PTR [rax],al
  42c21f:	add    BYTE PTR [rbx],ah
  42c221:	iret   
  42c222:	rex.XB add BYTE PTR [r8],al
  42c225:	add    BYTE PTR [rax],al
  42c227:	add    BYTE PTR [rcx],al
	...
  42c235:	add    BYTE PTR [rax],al
  42c237:	add    BYTE PTR [rdi+0x0],ch
  42c23a:	add    BYTE PTR [rax],al
  42c23c:	add    BYTE PTR [rax],al
  42c23e:	add    BYTE PTR [rax],al
  42c240:	(bad)  
  42c241:	int3   
  42c242:	rex.XB add BYTE PTR [r8],al
  42c245:	add    BYTE PTR [rax],al
  42c247:	add    BYTE PTR [rcx],al
	...
  42c255:	add    BYTE PTR [rax],al
  42c257:	add    BYTE PTR [rax+0x0],dh
  42c25a:	add    BYTE PTR [rax],al
  42c25c:	add    BYTE PTR [rax],al
  42c25e:	add    BYTE PTR [rax],al
  42c260:	sub    cl,bh
  42c262:	rex.XB add BYTE PTR [r8],al
  42c265:	add    BYTE PTR [rax],al
  42c267:	add    BYTE PTR [rcx],al
	...
  42c275:	add    BYTE PTR [rax],al
  42c277:	add    BYTE PTR [rax+0x0],dl
  42c27a:	add    BYTE PTR [rax],al
  42c27c:	add    BYTE PTR [rax],al
  42c27e:	add    BYTE PTR [rax],al
  42c280:	(bad)  
  42c281:	iret   
  42c282:	rex.XB add BYTE PTR [r8],al
	...
  42c295:	add    BYTE PTR [rax],al
  42c297:	add    BYTE PTR [rcx+0x0],dh
  42c29a:	add    BYTE PTR [rax],al
  42c29c:	add    BYTE PTR [rax],al
  42c29e:	add    BYTE PTR [rax],al
  42c2a0:	xor    eax,0x43cf
  42c2a5:	add    BYTE PTR [rax],al
  42c2a7:	add    BYTE PTR [rcx],al
	...
  42c2b5:	add    BYTE PTR [rax],al
  42c2b7:	add    BYTE PTR [rdx+0x0],dl
  42c2ba:	add    BYTE PTR [rax],al
  42c2bc:	add    BYTE PTR [rax],al
  42c2be:	add    BYTE PTR [rax],al
  42c2c0:	rex.RX iret 
  42c2c2:	rex.XB add BYTE PTR [r8],al
	...
  42c2d5:	add    BYTE PTR [rax],al
  42c2d7:	add    BYTE PTR [rax],dh
  42c2d9:	add    BYTE PTR [rax],al
  42c2db:	add    BYTE PTR [rax],al
  42c2dd:	add    BYTE PTR [rax],al
  42c2df:	add    BYTE PTR [rdi+rcx*8+0x43],bl
	...
  42c2f7:	add    BYTE PTR [rbx+0x0],dh
  42c2fa:	add    BYTE PTR [rax],al
  42c2fc:	add    BYTE PTR [rax],al
  42c2fe:	add    BYTE PTR [rax],al
  42c300:	push   0x43cf
	...
  42c315:	add    BYTE PTR [rax],al
  42c317:	add    BYTE PTR [rbx+0x0],dl
  42c31a:	add    BYTE PTR [rax],al
  42c31c:	add    BYTE PTR [rax],al
  42c31e:	add    BYTE PTR [rax],al
  42c320:	je     0x42c2f1
  42c322:	rex.XB add BYTE PTR [r8],al
	...
  42c335:	add    BYTE PTR [rax],al
  42c337:	add    BYTE PTR [rax+rax*1+0x0],dh
  42c33b:	add    BYTE PTR [rax],al
  42c33d:	add    BYTE PTR [rax],al
  42c33f:	add    BYTE PTR [rax+0x43cf],al
  42c345:	add    BYTE PTR [rax],al
  42c347:	add    BYTE PTR [rcx],al
	...
  42c355:	add    BYTE PTR [rax],al
  42c357:	add    BYTE PTR [rax+rax*1+0x0],dl
  42c35b:	add    BYTE PTR [rax],al
  42c35d:	add    BYTE PTR [rax],al
  42c35f:	add    BYTE PTR [rbx+0x43cf],cl
  42c365:	add    BYTE PTR [rax],al
  42c367:	add    BYTE PTR [rcx],al
	...
  42c375:	add    BYTE PTR [rax],al
  42c377:	add    BYTE PTR [rbp+0x0],dl
  42c37a:	add    BYTE PTR [rax],al
  42c37c:	add    BYTE PTR [rax],al
  42c37e:	add    BYTE PTR [rax],al
  42c380:	xchg   esp,eax
  42c381:	iret   
  42c382:	rex.XB add BYTE PTR [r8],al
  42c385:	add    BYTE PTR [rax],al
  42c387:	add    BYTE PTR [rcx],al
	...
  42c395:	add    BYTE PTR [rax],al
  42c397:	add    BYTE PTR [rsi+0x0],dh
  42c39a:	add    BYTE PTR [rax],al
  42c39c:	add    BYTE PTR [rax],al
  42c39e:	add    BYTE PTR [rax],al
  42c3a0:	cwde   
  42c3a1:	iret   
  42c3a2:	rex.XB add BYTE PTR [r8],al
  42c3a5:	add    BYTE PTR [rax],al
  42c3a7:	add    BYTE PTR [rcx],al
	...
  42c3b5:	add    BYTE PTR [rax],al
  42c3b7:	add    BYTE PTR [rsi+0x0],dh
  42c3ba:	add    BYTE PTR [rax],al
  42c3bc:	add    BYTE PTR [rax],al
  42c3be:	add    BYTE PTR [rax],al
  42c3c0:	movabs eax,ds:0x43cf
	...
  42c3d5:	add    BYTE PTR [rax],al
  42c3d7:	add    BYTE PTR [rsi+0x0],dl
  42c3da:	add    BYTE PTR [rax],al
  42c3dc:	add    BYTE PTR [rax],al
  42c3de:	add    BYTE PTR [rax],al
  42c3e0:	test   eax,0x43cf
	...
  42c3f5:	add    BYTE PTR [rax],al
  42c3f7:	add    BYTE PTR [rdi+0x0],dh
  42c3fa:	add    BYTE PTR [rax],al
  42c3fc:	add    BYTE PTR [rax],al
  42c3fe:	add    BYTE PTR [rax],al
  42c400:	(bad)  
  42c401:	int3   
  42c402:	rex.XB add BYTE PTR [r8],al
	...
  42c415:	add    BYTE PTR [rax],al
  42c417:	add    BYTE PTR [rdi+0x0],dl
  42c41a:	add    BYTE PTR [rax],al
  42c41c:	add    BYTE PTR [rax],al
  42c41e:	add    BYTE PTR [rax],al
  42c420:	mov    ch,0xcf
  42c422:	rex.XB add BYTE PTR [r8],al
	...
  42c435:	add    BYTE PTR [rax],al
  42c437:	add    BYTE PTR [rax+0x0],bh
  42c43a:	add    BYTE PTR [rax],al
  42c43c:	add    BYTE PTR [rax],al
  42c43e:	add    BYTE PTR [rax],al
  42c440:	mov    esi,0x43cf
	...
  42c455:	add    BYTE PTR [rax],al
  42c457:	add    BYTE PTR [rax+0x0],bl
  42c45a:	add    BYTE PTR [rax],al
  42c45c:	add    BYTE PTR [rax],al
  42c45e:	add    BYTE PTR [rax],al
  42c460:	enter  0x43cf,0x0
	...
  42c478:	(bad)  
	...
  42c4bd:	add    BYTE PTR [rax],al
  42c4bf:	add    al,al
  42c4c1:	movabs ds:0x45,al
  42c4ca:	add    BYTE PTR [rax],al
  42c4cc:	add    BYTE PTR [rax],al
  42c4ce:	add    BYTE PTR [rax],al
  42c4d0:	(bad)  
  42c4d1:	(bad)  
  42c4d2:	(bad)  
  42c4d3:	inc    DWORD PTR [rax]
	...
  42c4dd:	add    BYTE PTR [rax],al
  42c4df:	add    BYTE PTR [rax-0x31],al
  42c4e2:	add    BYTE PTR [r8],al
	...
  42c4ed:	add    BYTE PTR [rax],al
  42c4ef:	add    al,dl
  42c4f1:	xor    eax,0x45
	...
  42c4fe:	add    BYTE PTR [rax],al
  42c500:	test   al,0xbd
  42c502:	rex.X add BYTE PTR [rax],al
	...
  42c50d:	add    BYTE PTR [rax],al
  42c50f:	add    bh,bh
  42c511:	(bad)  
  42c512:	(bad)  
  42c513:	(bad)  
  42c514:	(bad)  
  42c515:	(bad)  
  42c516:	(bad)  
  42c517:	inc    DWORD PTR [rax]
  42c519:	add    BYTE PTR [rax],al
  42c51b:	add    BYTE PTR [rax],al
  42c51d:	add    BYTE PTR [rax],al
  42c51f:	add    bh,bh
	...
  42c52d:	add    BYTE PTR [rax],al
  42c52f:	add    BYTE PTR [rdx],al
	...
  42c53d:	add    BYTE PTR [rax],al
  42c53f:	add    bh,bh
  42c541:	(bad)  
  42c542:	(bad)  
  42c543:	(bad)  
  42c544:	(bad)  
  42c545:	(bad)  
  42c546:	(bad)  
  42c547:	(bad)  
  42c548:	(bad)  
  42c549:	(bad)  
  42c54a:	(bad)  
  42c54b:	inc    DWORD PTR [rax]
  42c54d:	add    BYTE PTR [rax],al
  42c54f:	add    BYTE PTR [rip+0x4545],dl        # 0x430a9a
  42c555:	add    BYTE PTR [rax],al
  42c557:	add    BYTE PTR [rdi],bh
  42c559:	add    BYTE PTR [rax],al
  42c55b:	add    BYTE PTR [rcx],al
  42c55d:	add    BYTE PTR [rax],al
  42c55f:	add    BYTE PTR [rcx],al
	...
  42c56d:	add    BYTE PTR [rax],al
  42c56f:	add    bh,bh
  42c571:	(bad)  
  42c572:	(bad)  
  42c573:	inc    DWORD PTR [rax]
	...
  42c57d:	add    BYTE PTR [rax],al
  42c57f:	add    BYTE PTR [rax],dh
  42c581:	movabs eax,ds:0x42
  42c58a:	add    BYTE PTR [rax],al
  42c58c:	add    BYTE PTR [rax],al
  42c58e:	add    BYTE PTR [rax],al
  42c590:	and    BYTE PTR [rsi+0x42],ah
  42c596:	add    BYTE PTR [rax],al
  42c598:	xor    BYTE PTR [rsi+0x42],ah
  42c59e:	add    BYTE PTR [rax],al
  42c5a0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  42c5ae:	add    BYTE PTR [rax],al
  42c5b0:	int    0x5d
  42c5b2:	and    dl,dl
  42c5b4:	data16 (bad) 
  42c5b6:	(bad)  
  42c5b7:	inc    DWORD PTR [rax]
  42c5b9:	add    BYTE PTR [rax],al
  42c5bb:	add    BYTE PTR [rax],al
  42c5bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000042d000 <.rdata>:
  42d000:	outs   dx,BYTE PTR ds:[rsi]
  42d001:	outs   dx,DWORD PTR ds:[rsi]
  42d002:	je     0x42d06c
  42d004:	imul   ebp,DWORD PTR [rsi+0x67],0x616e7500
  42d00b:	ins    BYTE PTR es:[rdi],dx
  42d00c:	imul   esp,DWORD PTR [rdi+0x6e],0x61006465
  42d013:	ins    BYTE PTR es:[rdi],dx
  42d014:	imul   esp,DWORD PTR [rdi+0x6e],0x77006465
  42d01b:	jb     0x42d07e
  42d01d:	jo     0x42d08f
  42d01f:	gs add BYTE PTR fs:[rax+0x74],ch
  42d024:	ins    DWORD PTR es:[rdi],dx
  42d025:	ins    BYTE PTR es:[rdi],dx
  42d026:	add    BYTE PTR [rcx+riz*2+0x74],ch
  42d02a:	gs js  0x42d02d
  42d02d:	ins    BYTE PTR es:[rdi],dx
  42d02e:	(bad)  
  42d02f:	je     0x42d096
  42d031:	js     0x42d060
  42d033:	ins    BYTE PTR es:[rdi],dx
  42d034:	outs   dx,DWORD PTR ds:[rsi]
  42d035:	outs   dx,BYTE PTR ds:[rsi]
  42d036:	addr32 je 0x42d09a
  42d039:	(bad)  
  42d03a:	ins    BYTE PTR es:[rdi],dx
  42d03b:	add    BYTE PTR gs:[rdx+rsi*2+0x6f],dh
  42d040:	data16 sub ax,0x736d
  42d045:	add    BYTE PTR [rbp+0x6e],dh
  42d048:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d04c:	outs   dx,BYTE PTR ds:[rsi]
  42d04d:	add    BYTE PTR [rax],al
  42d04f:	add    BYTE PTR [rax],al
  42d051:	rex.RB std 
  42d053:	call   QWORD PTR [rax]
  42d055:	rex.RB std 
  42d057:	jmp    QWORD PTR [rax]
  42d059:	rex.RB std 
  42d05b:	push   QWORD PTR [rax]
  42d05d:	rex.RB std 
  42d05f:	inc    DWORD PTR [rax+0x45]
  42d062:	std    
  42d063:	call   QWORD PTR [rax+0x45]
  42d066:	std    
  42d067:	jmp    QWORD PTR [rax+0x45]
  42d06a:	std    
  42d06b:	push   QWORD PTR [rax+0x45]
  42d06e:	std    
  42d06f:	jmp    FWORD PTR [rip+0x0]        # 0x42d075
  42d075:	add    BYTE PTR [rax],al
  42d077:	add    BYTE PTR [rbx+0x53],dl
  42d07a:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  42d07e:	outs   dx,BYTE PTR ds:[rsi]
  42d07f:	outs   dx,BYTE PTR ds:[rsi]
  42d080:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42d085:	outs   dx,BYTE PTR ds:[rsi]
  42d086:	and    BYTE PTR [rax],ch
  42d088:	jne    0x42d0f8
  42d08a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d08e:	outs   dx,BYTE PTR ds:[rsi]
  42d08f:	and    BYTE PTR [rbx+0x69],ah
  42d092:	jo     0x42d0fc
  42d094:	gs jb  0x42d0c0
  42d097:	or     al,BYTE PTR [rax]
  42d099:	add    BYTE PTR [rsi+0x6f],ch
  42d09c:	je     0x42d103
  42d09e:	jo     0x42d101
  42d0a0:	fs cs gs js 0x42d10a
  42d0a5:	add    BYTE PTR [rax],al
  42d0a7:	add    BYTE PTR [rbx+0x6f],ah
  42d0aa:	jne    0x42d118
  42d0ac:	and    BYTE PTR fs:[rsi+0x6f],ch
  42d0b0:	je     0x42d0d2
  42d0b2:	ins    BYTE PTR es:[rdi],dx
  42d0b3:	outs   dx,DWORD PTR ds:[rsi]
  42d0b4:	movsxd esp,DWORD PTR [rcx+0x74]
  42d0b7:	and    BYTE PTR gs:[rbp+riz*2+0x6d],dh
  42d0bc:	jo     0x42d12d
  42d0be:	jb     0x42d121
  42d0c0:	jb     0x42d13b
  42d0c2:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  42d0c6:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  42d0cb:	jns    0x42d107
  42d0cd:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2542db46
  42d0d3:	jae    0x42d0fa
  42d0d5:	jae    0x42d147
  42d0d7:	jae    0x42d14a
  42d0d9:	ins    BYTE PTR es:[rdi],dx
  42d0da:	cs gs imul esi,DWORD PTR fs:[rsi+rbp*1+0x25],0x71732e64
  42d0e5:	ins    BYTE PTR es:[rdi],dx
  42d0e6:	add    BYTE PTR [rax],al
  42d0e8:	movsxd ebp,DWORD PTR [rdi+0x75]
  42d0eb:	ins    BYTE PTR es:[rdi],dx
  42d0ec:	and    BYTE PTR fs:[rsi+0x6f],ch
  42d0f0:	je     0x42d112
  42d0f2:	outs   dx,DWORD PTR ds:[rsi]
  42d0f3:	jo     0x42d15a
  42d0f5:	outs   dx,BYTE PTR ds:[rsi]
  42d0f6:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  42d0fa:	jo     0x42d16b
  42d0fc:	jb     0x42d15f
  42d0fe:	jb     0x42d179
  42d100:	and    BYTE PTR [rsi+0x69],ah
  42d103:	ins    BYTE PTR es:[rdi],dx
  42d104:	and    BYTE PTR gs:[rdx],ah
  42d107:	and    eax,0x203a2273
  42d10c:	and    eax,0x77000a73
  42d111:	add    BYTE PTR [rip+0x25203a73],ah        # 0x25630b8a
  42d117:	jae    0x42d123
  42d119:	add    BYTE PTR [rbp+0x44],al
  42d11c:	rex.WB push r12
  42d11e:	rex.WRXB push r10
  42d120:	add    BYTE PTR [rsi+0x49],dl
  42d123:	push   rbx
  42d124:	push   rbp
  42d125:	rex.B
  42d126:	rex.WR add BYTE PTR [rax+0x53],r10b
  42d12a:	push   rcx
  42d12b:	rex.WR pop rdi
  42d12d:	rex.RB
  42d12e:	rex.R
  42d12f:	rex.WB push r12
  42d131:	rex.WRXB push r10
  42d133:	pop    rdi
  42d134:	rex.WR
  42d135:	rex.WB
  42d136:	rex.WRX
  42d137:	rex.RB
  42d138:	rex.WRX push rbp
  42d13a:	rex.WRB
  42d13b:	rex.X
  42d13c:	rex.RB push r10
  42d13e:	pop    rdi
  42d13f:	push   r10
  42d141:	rex.RXB add BYTE PTR [r8],r8b
  42d144:	add    BYTE PTR [rax],al
  42d146:	add    BYTE PTR [rax],al
  42d148:	outs   dx,BYTE PTR gs:[rsi]
  42d14a:	jbe    0x42d1b5
  42d14c:	jb     0x42d1bd
  42d14e:	outs   dx,BYTE PTR ds:[rsi]
  42d14f:	ins    DWORD PTR es:[rdi],dx
  42d150:	outs   dx,BYTE PTR gs:[rsi]
  42d152:	je     0x42d174
  42d154:	jbe    0x42d1b7
  42d156:	jb     0x42d1c1
  42d158:	(bad)  
  42d159:	(bad)  
  42d15a:	ins    BYTE PTR es:[rdi],dx
  42d15b:	and    BYTE PTR gs:[rax+0x53],dl
  42d15f:	push   rcx
  42d160:	rex.WR pop rdi
  42d162:	rex.RB
  42d163:	rex.R
  42d164:	rex.WB push r12
  42d166:	rex.WRXB push r10
  42d168:	pop    rdi
  42d169:	rex.WR
  42d16a:	rex.WB
  42d16b:	rex.WRX
  42d16c:	rex.RB
  42d16d:	rex.WRX push rbp
  42d16f:	rex.WRB
  42d170:	rex.X
  42d171:	rex.RB push r10
  42d173:	pop    rdi
  42d174:	push   r10
  42d176:	rex.RXB and BYTE PTR [r13+0x75],r13b
  42d17a:	jae    0x42d1f0
  42d17c:	and    BYTE PTR [rdx+0x65],ah
  42d17f:	and    BYTE PTR [rbx+0x65],dh
  42d182:	je     0x42d1a4
  42d184:	je     0x42d1f5
  42d186:	and    BYTE PTR [rbx+0x70],dh
  42d189:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42d18d:	jns    0x42d1af
  42d18f:	(bad)  
  42d190:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  42d194:	and    BYTE PTR gs:[rsi+0x75],ch
  42d198:	ins    DWORD PTR es:[rdi],dx
  42d199:	(bad)  
  42d19a:	gs jb  0x42d1a7
  42d19d:	add    BYTE PTR [rbx+0x6f],ah
  42d1a0:	jne    0x42d20e
  42d1a2:	and    BYTE PTR fs:[rsi+0x6f],ch
  42d1a6:	je     0x42d1c8
  42d1a8:	jae    0x42d21e
  42d1aa:	(bad)  
  42d1ab:	jb     0x42d221
  42d1ad:	and    BYTE PTR [rbp+0x64],ah
  42d1b0:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x73252220
  42d1b8:	and    cl,BYTE PTR [rdx]
  42d1ba:	add    BYTE PTR [rbx+0x6f],ah
  42d1bd:	jne    0x42d22b
  42d1bf:	and    BYTE PTR fs:[rsi+0x6f],ch
  42d1c3:	je     0x42d1e5
  42d1c5:	jae    0x42d23b
  42d1c7:	(bad)  
  42d1c8:	jb     0x42d23e
  42d1ca:	and    BYTE PTR [rdi],ch
  42d1cc:	(bad)  
  42d1cd:	imul   ebp,DWORD PTR [rsi+0x2f],0xa6873
  42d1d4:	jb     0x42d238
  42d1d6:	add    BYTE PTR [rax+0x53],dl
  42d1d9:	push   rcx
  42d1da:	rex.WR pop rdi
  42d1dc:	rex.RB
  42d1dd:	rex.R
  42d1de:	rex.WB push r12
  42d1e0:	rex.WRXB push r10
  42d1e2:	add    BYTE PTR [rdx],ah
  42d1e4:	and    eax,0x25202273
  42d1e9:	jae    0x42d210
  42d1eb:	and    BYTE PTR fs:[rdx],ah
  42d1ee:	and    eax,0x22002273
  42d1f3:	and    eax,0x22202273
  42d1f8:	and    eax,0x25002273
  42d1fd:	jae    0x42d239
  42d1ff:	and    BYTE PTR [rax],ah
  42d201:	add    BYTE PTR [rbp+0x52],al
  42d204:	push   rdx
  42d205:	rex.WRXB push r10
  42d207:	cmp    ah,BYTE PTR [rax]
  42d209:	and    BYTE PTR [rax],al
  42d20b:	sub    BYTE PTR [rsi+0x6f],ch
  42d20e:	je     0x42d230
  42d210:	(bad)  
  42d211:	jbe    0x42d274
  42d213:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x29656c
  42d21b:	or     al,BYTE PTR [rax]
  42d21d:	and    eax,0x65720073
  42d222:	addr32 jo 0x42d297
  42d225:	outs   dx,DWORD PTR ds:[rsi]
  42d226:	movsxd esp,DWORD PTR [rbp+0x64]
  42d229:	jne    0x42d29d
  42d22b:	add    BYTE PTR gs:[rdx+0x65],dh
  42d22f:	addr32 jo 0x42d2a4
  42d232:	outs   dx,DWORD PTR ds:[rsi]
  42d233:	movsxd eax,DWORD PTR [rax]
  42d235:	push   rbx
  42d236:	rex.RB
  42d237:	rex.WR
  42d238:	rex.RB
  42d239:	rex.XB push r12
  42d23b:	and    BYTE PTR [rax],al
  42d23d:	add    BYTE PTR [rax],al
  42d23f:	add    BYTE PTR [rdx],bh
  42d241:	cmp    dh,BYTE PTR [rax+0x67]
  42d244:	pop    rdi
  42d245:	movsxd esp,DWORD PTR [rcx+0x74]
  42d248:	(bad)  
  42d249:	ins    BYTE PTR es:[rdi],dx
  42d24a:	outs   dx,DWORD PTR ds:[rsi]
  42d24b:	addr32 cs and eax,0x703a3a73
  42d252:	addr32 pop rdi
  42d254:	movsxd esp,DWORD PTR [rcx+0x74]
  42d257:	(bad)  
  42d258:	ins    BYTE PTR es:[rdi],dx
  42d259:	outs   dx,DWORD PTR ds:[rsi]
  42d25a:	outs   dx,DWORD PTR cs:[esi]
  42d25d:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x43454c45
  42d265:	push   rsp
  42d266:	and    BYTE PTR [rax+0x67],dh
  42d269:	pop    rdi
  42d26a:	movsxd esp,DWORD PTR [rcx+0x74]
  42d26d:	(bad)  
  42d26e:	ins    BYTE PTR es:[rdi],dx
  42d26f:	outs   dx,DWORD PTR ds:[rsi]
  42d270:	addr32 cs jo 0x42d2db
  42d274:	pop    rdi
  42d275:	addr32 gs je 0x42d2d8
  42d279:	data16 jne 0x42d2ea
  42d27c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42d280:	outs   dx,BYTE PTR ds:[rsi]
  42d281:	fs data16 sub BYTE PTR gs:[rip+0x2975],ah        # 0x42fbff
  42d28a:	add    BYTE PTR [rax],al
  42d28c:	add    BYTE PTR [rax],al
  42d28e:	add    BYTE PTR [rax],al
  42d290:	pop    rsp
  42d291:	ja     0x42d2f4
  42d293:	je     0x42d2f8
  42d295:	push   0x6e616320
  42d29a:	outs   dx,BYTE PTR ds:[rsi]
  42d29b:	outs   dx,DWORD PTR ds:[rsi]
  42d29c:	je     0x42d2be
  42d29e:	(bad)  
  42d29f:	and    BYTE PTR gs:[rbp+0x73],dh
  42d2a3:	gs and BYTE PTR fs:[rdi+0x69],dh
  42d2a8:	je     0x42d312
  42d2aa:	and    BYTE PTR [rcx+0x6e],ah
  42d2ad:	and    BYTE PTR [rbp+0x6d],ah
  42d2b0:	jo     0x42d326
  42d2b2:	jns    0x42d2d4
  42d2b4:	jno    0x42d32b
  42d2b6:	gs jb  0x42d332
  42d2b9:	or     al,BYTE PTR [rax]
  42d2bb:	push   rdi
  42d2bc:	(bad)  
  42d2bd:	je     0x42d322
  42d2bf:	push   0x65766520
  42d2c4:	jb     0x42d33f
  42d2c6:	and    BYTE PTR [rip+0x973646c],ah        # 0x9b63738
  42d2cc:	and    eax,0x73250073
  42d2d1:	or     ah,BYTE PTR [rip+0xa0a73]        # 0x4cdd4a
  42d2d7:	add    BYTE PTR [rdi+rsi*2+0x61],bl
  42d2db:	je     0x42d340
  42d2dd:	push   0x6e616320
  42d2e2:	outs   dx,BYTE PTR ds:[rsi]
  42d2e3:	outs   dx,DWORD PTR ds:[rsi]
  42d2e4:	je     0x42d306
  42d2e6:	(bad)  
  42d2e7:	and    BYTE PTR gs:[rbp+0x73],dh
  42d2eb:	gs and BYTE PTR fs:[rdi+0x69],dh
  42d2f0:	je     0x42d35a
  42d2f2:	and    BYTE PTR [rbx+0x4f],al
  42d2f5:	push   rax
  42d2f6:	pop    rcx
  42d2f7:	or     al,BYTE PTR [rax]
  42d2f9:	add    BYTE PTR [rax],al
  42d2fb:	add    BYTE PTR [rax],al
  42d2fd:	add    BYTE PTR [rax],al
  42d2ff:	add    BYTE PTR [rbp+0x6e],dh
  42d302:	gs js  0x42d375
  42d305:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42d30a:	and    BYTE PTR [rdx+0x65],dh
  42d30d:	jae    0x42d384
  42d30f:	ins    BYTE PTR es:[rdi],dx
  42d310:	je     0x42d332
  42d312:	jae    0x42d388
  42d314:	(bad)  
  42d315:	je     0x42d38c
  42d317:	jae    0x42d339
  42d319:	outs   dx,WORD PTR ds:[rsi]
  42d31b:	jb     0x42d33d
  42d31d:	pop    rsp
  42d31e:	ja     0x42d381
  42d320:	je     0x42d385
  42d322:	push   0xa
  42d327:	add    BYTE PTR [rax],dl
  42d329:	fcos   
  42d32b:	jmp    rbp
  42d32d:	fdivr  st,st(7)
  42d32f:	inc    edx
  42d331:	fdivr  st,st(7)
  42d333:	jmp    FWORD PTR [rcx]
  42d335:	fcos   
  42d337:	jmp    FWORD PTR [rcx]
  42d339:	fcos   
  42d33b:	(bad)  
  42d33c:	(bad)  
  42d33d:	fcos   
  42d33f:	(bad)  
  42d340:	(bad)  
  42d341:	fcos   
  42d343:	(bad)  
  42d344:	(bad)  
  42d345:	fcos   
  42d347:	jmp    FWORD PTR [rcx]
  42d349:	fcos   
  42d34b:	call   QWORD PTR [rax+0x61]
  42d34e:	jae    0x42d3c3
  42d350:	ja     0x42d3c1
  42d352:	jb     0x42d3b8
  42d354:	cmp    ah,BYTE PTR [rax]
  42d356:	add    BYTE PTR [rax+0x61],dl
  42d359:	jae    0x42d3ce
  42d35b:	ja     0x42d3cc
  42d35d:	jb     0x42d3c3
  42d35f:	and    BYTE PTR [rsi+0x6f],ah
  42d362:	jb     0x42d384
  42d364:	jne    0x42d3d9
  42d366:	gs jb  0x42d389
  42d369:	and    eax,0x203a73
  42d36e:	jae    0x42d3d5
  42d370:	jb     0x42d3e8
  42d372:	gs jb  0x42d3d4
  42d375:	jbe    0x42d3dc
  42d377:	jb     0x42d3ec
  42d379:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642500
  42d380:	and    eax,0x64252e64
  42d385:	add    BYTE PTR [rcx],bh
  42d387:	cs xor al,0x2e
  42d38a:	xor    DWORD PTR [rax],eax
  42d38c:	and    eax,0x25282073
  42d391:	jae    0x42d3bf
  42d393:	and    BYTE PTR [rbx+0x65],dh
  42d396:	jb     0x42d40e
  42d398:	gs jb  0x42d3bb
  42d39b:	and    eax,0xa2973
  42d3a0:	and    eax,0x25282073
  42d3a5:	jae    0x42d3d0
  42d3a7:	or     al,BYTE PTR [rax]
  42d3a9:	add    BYTE PTR [rax],al
  42d3ab:	add    BYTE PTR [rax],al
  42d3ad:	add    BYTE PTR [rax],al
  42d3af:	add    BYTE PTR [rdi+0x41],dl
  42d3b2:	push   rdx
  42d3b3:	rex.WRX
  42d3b4:	rex.WB
  42d3b5:	rex.WRX
  42d3b6:	rex.RXB cmp r12b,BYTE PTR [r8]
  42d3b9:	and    eax,0x616d2073
  42d3be:	push   0x6f
  42d3c0:	jb     0x42d3e2
  42d3c2:	jbe    0x42d429
  42d3c4:	jb     0x42d439
  42d3c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42d3cd:	and    eax,0x73202c64
  42d3d2:	gs jb  0x42d44b
  42d3d5:	gs jb  0x42d3f8
  42d3d8:	ins    DWORD PTR es:[rdi],dx
  42d3d9:	(bad)  
  42d3da:	push   0x6f
  42d3dc:	jb     0x42d3fe
  42d3de:	jbe    0x42d445
  42d3e0:	jb     0x42d455
  42d3e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42d3e9:	and    eax,0x200a2e64
  42d3ee:	and    BYTE PTR [rax],ah
  42d3f0:	and    BYTE PTR [rax],ah
  42d3f2:	and    BYTE PTR [rax],ah
  42d3f4:	and    BYTE PTR [rax],ah
  42d3f6:	push   rbx
  42d3f7:	outs   dx,DWORD PTR ds:[rsi]
  42d3f8:	ins    DWORD PTR es:[rdi],dx
  42d3f9:	and    BYTE PTR gs:[rax+0x73],dh
  42d3fd:	jno    0x42d46b
  42d3ff:	and    BYTE PTR [rsi+0x65],ah
  42d402:	(bad)  
  42d403:	je     0x42d47a
  42d405:	jb     0x42d46c
  42d407:	jae    0x42d429
  42d409:	ins    DWORD PTR es:[rdi],dx
  42d40a:	imul   esp,DWORD PTR [rdi+0x68],0x6f6e2074
  42d411:	je     0x42d433
  42d413:	ja     0x42d484
  42d415:	jb     0x42d482
  42d417:	or     al,BYTE PTR cs:[rax]
  42d41a:	add    BYTE PTR [rax],al
  42d41c:	add    BYTE PTR [rax],al
  42d41e:	add    BYTE PTR [rax],al
  42d420:	push   rdi
  42d421:	push   r10
  42d423:	rex.WRX
  42d424:	rex.WB
  42d425:	rex.WRX
  42d426:	rex.RXB cmp r12b,BYTE PTR [r8]
  42d429:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42d42b:	outs   dx,BYTE PTR ds:[rsi]
  42d42c:	jae    0x42d49d
  42d42e:	ins    BYTE PTR es:[rdi],dx
  42d42f:	and    BYTE PTR gs:[rbx+0x6f],ah
  42d433:	fs and BYTE PTR gs:[rax+0x61],dh
  42d438:	and    BYTE PTR gs:[eax],ch
  42d43c:	and    eax,0x64202975
  42d441:	imul   esp,DWORD PTR [rsi+0x66],0x20737265
  42d448:	data16 jb 0x42d4ba
  42d44b:	ins    DWORD PTR es:[rdi],dx
  42d44c:	and    BYTE PTR [rdi+0x69],dl
  42d44f:	outs   dx,BYTE PTR ds:[rsi]
  42d450:	outs   dx,DWORD PTR fs:[rsi]
  42d452:	ja     0x42d4c7
  42d454:	and    BYTE PTR [rbx+0x6f],ah
  42d457:	fs and BYTE PTR gs:[rax+0x61],dh
  42d45c:	and    BYTE PTR gs:[eax],ch
  42d460:	and    eax,0x200a2975
  42d465:	and    BYTE PTR [rax],ah
  42d467:	and    BYTE PTR [rax],ah
  42d469:	and    BYTE PTR [rax],ah
  42d46b:	and    BYTE PTR [rax],ah
  42d46d:	cmp    BYTE PTR [rip+0x20746962],ch        # 0x20b73dd5
  42d473:	movsxd ebp,DWORD PTR [rax+0x61]
  42d476:	jb     0x42d4d9
  42d478:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42d47c:	jae    0x42d49e
  42d47e:	ins    DWORD PTR es:[rdi],dx
  42d47f:	imul   esp,DWORD PTR [rdi+0x68],0x6f6e2074
  42d486:	je     0x42d4a8
  42d488:	ja     0x42d4f9
  42d48a:	jb     0x42d4f7
  42d48c:	and    BYTE PTR [rbx+0x6f],ah
  42d48f:	jb     0x42d503
  42d491:	movsxd esi,DWORD PTR gs:[rsp+rbp*2+0x79]
  42d496:	and    BYTE PTR cs:[rbx+0x65],dl
  42d49a:	and    BYTE PTR gs:[rax+0x73],dh
  42d49e:	jno    0x42d50c
  42d4a0:	and    BYTE PTR [rdx+0x65],dh
  42d4a3:	data16 gs jb 0x42d50c
  42d4a7:	outs   dx,BYTE PTR ds:[rsi]
  42d4a8:	movsxd esp,DWORD PTR [rbp+0xa]
  42d4ab:	and    BYTE PTR [rax],ah
  42d4ad:	and    BYTE PTR [rax],ah
  42d4af:	and    BYTE PTR [rax],ah
  42d4b1:	and    BYTE PTR [rax],ah
  42d4b3:	and    BYTE PTR [rax+0x61],dh
  42d4b6:	and    BYTE PTR gs:[edx],ah
  42d4ba:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42d4bc:	je     0x42d523
  42d4be:	jae    0x42d4e0
  42d4c0:	outs   dx,WORD PTR ds:[rsi]
  42d4c2:	jb     0x42d4e4
  42d4c4:	push   rdi
  42d4c5:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
  42d4cc:	jne    0x42d541
  42d4ce:	gs jb  0x42d544
  42d4d1:	and    ah,BYTE PTR [rax]
  42d4d3:	outs   dx,WORD PTR ds:[rsi]
  42d4d5:	jb     0x42d4f7
  42d4d7:	fs gs je 0x42d53c
  42d4db:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x4244000a
  42d4e3:	rex.WRX
  42d4e4:	rex.B
  42d4e5:	rex.WRB
  42d4e6:	add    BYTE PTR [r13+0x53],r10b
  42d4ea:	rex.RB push r10
  42d4ec:	add    BYTE PTR [rax+0x4f],cl
  42d4ef:	push   rbx
  42d4f0:	push   rsp
  42d4f1:	add    BYTE PTR [rax+0x4f],dl
  42d4f4:	push   rdx
  42d4f5:	push   rsp
  42d4f6:	add    BYTE PTR [rbp+0x4e],al
  42d4f9:	rex.XB
  42d4fa:	rex.WRXB
  42d4fb:	rex.R
  42d4fc:	rex.WB
  42d4fd:	rex.WRX
  42d4fe:	add    BYTE PTR [r11+r14*2],r15b
  42d502:	je     0x42d568
  42d504:	imul   ebp,DWORD PTR [rsi+0x3e],0x47454200
  42d50b:	rex.WB
  42d50c:	rex.WRX add BYTE PTR [rbx+0x4f],r8b
  42d510:	rex.WRB
  42d511:	rex.WRB
  42d512:	rex.WB push r12
  42d514:	add    BYTE PTR [rsi+0x6f],ah
  42d517:	jb     0x42d586
  42d519:	(bad)  
  42d51a:	je     0x42d51c
  42d51c:	add    BYTE PTR [rax],al
  42d51e:	add    BYTE PTR [rax],al
  42d520:	pop    rsp
  42d521:	jo     0x42d596
  42d523:	gs je  0x42d560
  42d526:	and    BYTE PTR [rcx+0x6c],ah
  42d529:	ins    BYTE PTR es:[rdi],dx
  42d52a:	outs   dx,DWORD PTR ds:[rsi]
  42d52b:	ja     0x42d592
  42d52d:	and    BYTE PTR fs:[rsi+0x6f],ah
  42d531:	jb     0x42d5a0
  42d533:	(bad)  
  42d534:	je     0x42d5a9
  42d536:	and    BYTE PTR [rcx+0x72],ah
  42d539:	and    BYTE PTR gs:[rbp+0x6e],dh
  42d53d:	(bad)  
  42d53e:	ins    BYTE PTR es:[rdi],dx
  42d53f:	imul   esp,DWORD PTR [rdi+0x6e],0x202c6465
  42d546:	(bad)  
  42d547:	ins    BYTE PTR es:[rdi],dx
  42d548:	imul   esp,DWORD PTR [rdi+0x6e],0x202c6465
  42d54f:	ja     0x42d5c3
  42d551:	(bad)  
  42d552:	jo     0x42d5c4
  42d554:	gs fs sub al,0x20
  42d558:	push   0x2c6c6d74
  42d55d:	and    BYTE PTR [rcx+riz*2+0x74],ch
  42d561:	gs js  0x42d590
  42d564:	and    BYTE PTR [rdx+rsi*2+0x6f],dh
  42d568:	data16 sub ax,0x736d
  42d56d:	or     al,BYTE PTR [rax]
  42d56f:	(bad)  
  42d570:	jae    0x42d5d5
  42d572:	imul   ebp,DWORD PTR [rcx+0x0],0x2d646c6f
  42d579:	(bad)  
  42d57a:	jae    0x42d5df
  42d57c:	imul   ebp,DWORD PTR [rcx+0x0],0x63696e75
  42d583:	outs   dx,DWORD PTR ds:[rsi]
  42d584:	fs add BYTE PTR gs:[rax],al
  42d588:	pop    rsp
  42d589:	jo     0x42d5fe
  42d58b:	gs je  0x42d5c8
  42d58e:	and    BYTE PTR [rcx+0x6c],ah
  42d591:	ins    BYTE PTR es:[rdi],dx
  42d592:	outs   dx,DWORD PTR ds:[rsi]
  42d593:	ja     0x42d5fa
  42d595:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42d59a:	and    BYTE PTR gs:[rbx+0x74],dh
  42d59e:	jns    0x42d60c
  42d5a0:	gs jae 0x42d5c3
  42d5a3:	(bad)  
  42d5a4:	jb     0x42d60b
  42d5a6:	and    BYTE PTR [rcx+0x73],ah
  42d5a9:	movsxd ebp,DWORD PTR [rcx+0x69]
  42d5ac:	sub    al,0x20
  42d5ae:	outs   dx,DWORD PTR ds:[rsi]
  42d5af:	ins    BYTE PTR es:[rdi],dx
  42d5b0:	fs sub eax,0x69637361
  42d5b6:	imul   ebp,DWORD PTR [rax+riz*1],0x63696e75
  42d5bd:	outs   dx,DWORD PTR ds:[rsi]
  42d5be:	fs or  al,BYTE PTR gs:[rax]
  42d5c2:	(bad)  
  42d5c3:	outs   dx,DWORD PTR ds:[rsi]
  42d5c4:	jb     0x42d62a
  42d5c6:	gs jb  0x42d5c9
  42d5c9:	js     0x42d5cb
  42d5cb:	gs js  0x42d63e
  42d5ce:	(bad)  
  42d5cf:	outs   dx,BYTE PTR ds:[rsi]
  42d5d0:	fs gs add BYTE PTR fs:[rsi+0x65],dh
  42d5d6:	jb     0x42d64c
  42d5d8:	imul   esp,DWORD PTR [rbx+0x61],0x7561006c
  42d5df:	je     0x42d650
  42d5e1:	add    BYTE PTR [rsi+0x75],ch
  42d5e4:	ins    DWORD PTR es:[rdi],dx
  42d5e5:	gs jb  0x42d651
  42d5e8:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
  42d5ec:	(bad)  
  42d5ed:	ins    BYTE PTR es:[rdi],dx
  42d5ee:	add    BYTE PTR gs:[rsi+0x75],ch
  42d5f2:	ins    BYTE PTR es:[rdi],dx
  42d5f3:	ins    BYTE PTR es:[rdi],dx
  42d5f4:	add    BYTE PTR [rsi+0x69],ah
  42d5f7:	gs ins BYTE PTR es:[rdi],dx
  42d5f9:	fs jae 0x42d661
  42d5fc:	jo     0x42d5fe
  42d5fe:	imul   sp,WORD PTR [rbp+0x6c],0x7364
  42d604:	gs jo  0x42d666
  42d607:	jp     0x42d66e
  42d609:	jb     0x42d67a
  42d60b:	add    BYTE PTR [rdx+0x65],dh
  42d60e:	movsxd ebp,DWORD PTR [rdi+0x72]
  42d611:	fs jae 0x42d679
  42d614:	jo     0x42d616
  42d616:	jb     0x42d67d
  42d618:	movsxd ebp,DWORD PTR [rdi+0x72]
  42d61b:	fs jae 0x42d683
  42d61e:	jo     0x42d67f
  42d620:	jp     0x42d687
  42d622:	jb     0x42d693
  42d624:	add    BYTE PTR [rax+rax*1+0x74],dh
  42d628:	jne    0x42d69a
  42d62a:	ins    BYTE PTR es:[rdi],dx
  42d62b:	gs jae 0x42d68d
  42d62e:	outs   dx,DWORD PTR ds:[rsi]
  42d62f:	outs   dx,BYTE PTR ds:[rsi]
  42d630:	ins    BYTE PTR es:[rdi],dx
  42d631:	jns    0x42d633
  42d633:	je     0x42d69e
  42d635:	je     0x42d6a3
  42d637:	add    BYTE PTR gs:[rax+rax*1+0x74],dl
  42d63c:	(bad)  
  42d63d:	(bad)  
  42d63e:	ins    BYTE PTR es:[rdi],dx
  42d63f:	gs (bad) 
  42d641:	je     0x42d6b7
  42d643:	jb     0x42d645
  42d645:	jo     0x42d6a8
  42d647:	addr32 gs jb 0x42d64b
  42d64b:	(bad)  
  42d64c:	ins    BYTE PTR es:[rdi],dx
  42d64d:	ja     0x42d6b0
  42d64f:	jns    0x42d6c4
  42d651:	add    BYTE PTR [rsi+0x6f],ah
  42d654:	outs   dx,DWORD PTR ds:[rsi]
  42d655:	je     0x42d6bc
  42d657:	jb     0x42d659
  42d659:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d65c:	jne    0x42d6cb
  42d65e:	outs   dx,BYTE PTR ds:[rsi]
  42d65f:	jae    0x42d661
  42d661:	pop    rsp
  42d662:	jo     0x42d6d7
  42d664:	gs je  0x42d6a1
  42d667:	and    BYTE PTR [rbp+0x6e],dh
  42d66a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d66e:	outs   dx,BYTE PTR ds:[rsi]
  42d66f:	and    BYTE PTR [rdi+0x70],ch
  42d672:	je     0x42d6dd
  42d674:	outs   dx,DWORD PTR ds:[rsi]
  42d675:	outs   dx,BYTE PTR ds:[rsi]
  42d676:	cmp    ah,BYTE PTR [rax]
  42d678:	and    eax,0x42000a73
  42d67d:	outs   dx,DWORD PTR ds:[rsi]
  42d67e:	jb     0x42d6e4
  42d680:	gs jb  0x42d6a3
  42d683:	jae    0x42d6f9
  42d685:	jns    0x42d6f3
  42d687:	and    BYTE PTR gs:[rcx+0x73],ch
  42d68b:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d04f5
  42d691:	push   rsp
  42d692:	(bad)  
  42d693:	jb     0x42d6fc
  42d695:	gs je  0x42d6b8
  42d698:	ja     0x42d703
  42d69a:	fs je  0x42d705
  42d69d:	and    BYTE PTR [rcx+0x73],ch
  42d6a0:	and    BYTE PTR [rbp+0x6e],dh
  42d6a3:	jae    0x42d70a
  42d6a5:	je     0x42d6d5
  42d6a7:	or     al,BYTE PTR [rax]
  42d6a9:	push   rsp
  42d6aa:	(bad)  
  42d6ab:	jb     0x42d714
  42d6ad:	gs je  0x42d6d0
  42d6b0:	ja     0x42d71b
  42d6b2:	fs je  0x42d71d
  42d6b5:	and    BYTE PTR [rcx+0x73],ch
  42d6b8:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d0522
  42d6be:	rex.RB js 0x42d731
  42d6c1:	(bad)  
  42d6c2:	outs   dx,BYTE PTR ds:[rsi]
  42d6c3:	fs gs and BYTE PTR fs:[rcx+rbp*2+0x73],ah
  42d6ca:	jo     0x42d738
  42d6cc:	(bad)  
  42d6cd:	jns    0x42d6ef
  42d6cf:	imul   esi,DWORD PTR [rbx+0x20],0xa2e6e6f
  42d6d6:	add    BYTE PTR [rax],al
  42d6d8:	rex.RB js 0x42d74b
  42d6db:	(bad)  
  42d6dc:	outs   dx,BYTE PTR ds:[rsi]
  42d6dd:	fs gs and BYTE PTR fs:[rcx+rbp*2+0x73],ah
  42d6e4:	jo     0x42d752
  42d6e6:	(bad)  
  42d6e7:	jns    0x42d709
  42d6e9:	imul   esi,DWORD PTR [rbx+0x20],0x64657375
  42d6f0:	and    BYTE PTR [rcx+0x75],ah
  42d6f3:	je     0x42d764
  42d6f5:	ins    DWORD PTR es:[rdi],dx
  42d6f6:	(bad)  
  42d6f7:	je     0x42d762
  42d6f9:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d6fc:	ins    BYTE PTR es:[rdi],dx
  42d6fd:	jns    0x42d72d
  42d6ff:	or     al,BYTE PTR [rax]
  42d701:	rex.RB js 0x42d774
  42d704:	(bad)  
  42d705:	outs   dx,BYTE PTR ds:[rsi]
  42d706:	fs gs and BYTE PTR fs:[rcx+rbp*2+0x73],ah
  42d70d:	jo     0x42d77b
  42d70f:	(bad)  
  42d710:	jns    0x42d732
  42d712:	imul   esi,DWORD PTR [rbx+0x20],0x2e66666f
  42d719:	or     al,BYTE PTR [rax]
  42d71b:	add    BYTE PTR [rax],al
  42d71d:	add    BYTE PTR [rax],al
  42d71f:	add    BYTE PTR [rsi+0x69],al
  42d722:	gs ins BYTE PTR es:[rdi],dx
  42d724:	and    BYTE PTR fs:[rbx+0x65],dh
  42d728:	jo     0x42d78b
  42d72a:	jb     0x42d78d
  42d72c:	je     0x42d79d
  42d72e:	jb     0x42d750
  42d730:	imul   esi,DWORD PTR [rbx+0x20],0x6f72657a
  42d737:	and    BYTE PTR [rdx+0x79],ah
  42d73a:	je     0x42d7a1
  42d73c:	or     al,BYTE PTR cs:[rax]
  42d73f:	rex.RX imul r12d,DWORD PTR [rbp+0x6c],0x65732064
  42d747:	jo     0x42d7aa
  42d749:	jb     0x42d7ac
  42d74b:	je     0x42d7bc
  42d74d:	jb     0x42d76f
  42d74f:	imul   esi,DWORD PTR [rbx+0x20],0x22732522
  42d756:	or     al,BYTE PTR cs:[rax]
  42d759:	rex.R
  42d75a:	gs data16 (bad) 
  42d75d:	jne    0x42d7cb
  42d75f:	je     0x42d781
  42d761:	outs   dx,WORD PTR ds:[rsi]
  42d763:	outs   dx,DWORD PTR ds:[rsi]
  42d764:	je     0x42d7cb
  42d766:	jb     0x42d788
  42d768:	imul   esi,DWORD PTR [rbx+0x20],0xa2e6e6f
  42d76f:	add    BYTE PTR [rbp+riz*2+0x66],al
  42d773:	(bad)  
  42d774:	jne    0x42d7e2
  42d776:	je     0x42d798
  42d778:	outs   dx,WORD PTR ds:[rsi]
  42d77a:	outs   dx,DWORD PTR ds:[rsi]
  42d77b:	je     0x42d7e2
  42d77d:	jb     0x42d79f
  42d77f:	imul   esi,DWORD PTR [rbx+0x20],0x2e66666f
  42d786:	or     al,BYTE PTR [rax]
  42d788:	rex.WRXB jne 0x42d7ff
  42d78b:	jo     0x42d802
  42d78d:	je     0x42d7af
  42d78f:	outs   dx,WORD PTR ds:[rsi]
  42d791:	jb     0x42d800
  42d793:	(bad)  
  42d794:	je     0x42d7b6
  42d796:	imul   esi,DWORD PTR [rbx+0x20],0xa2e7325
  42d79d:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
  42d7a1:	gs jae 0x42d818
  42d7a4:	jns    0x42d812
  42d7a6:	add    BYTE PTR gs:[rcx+rbp*2+0x6e],cl
  42d7ab:	and    BYTE PTR gs:[rbx+0x74],dh
  42d7af:	jns    0x42d81d
  42d7b1:	and    BYTE PTR gs:[rcx+0x73],ch
  42d7b5:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d062e
  42d7bb:	rex.WRX jne 0x42d82a
  42d7be:	ins    BYTE PTR es:[rdi],dx
  42d7bf:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  42d7c3:	jo     0x42d831
  42d7c5:	(bad)  
  42d7c6:	jns    0x42d7e8
  42d7c8:	imul   esi,DWORD PTR [rbx+0x20],0x22732522
  42d7cf:	or     al,BYTE PTR cs:[rax]
  42d7d2:	add    BYTE PTR [rax],al
  42d7d4:	add    BYTE PTR [rax],al
  42d7d6:	add    BYTE PTR [rax],al
  42d7d8:	rex.WR outs dx,DWORD PTR ds:[rsi]
  42d7da:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d7dd:	gs sub eax,0x756a6461
  42d7e3:	jae    0x42d859
  42d7e5:	gs and BYTE PTR fs:[rsi+0x75],ch
  42d7ea:	ins    DWORD PTR es:[rdi],dx
  42d7eb:	gs jb  0x42d857
  42d7ee:	movsxd esp,DWORD PTR [rax]
  42d7f0:	outs   dx,DWORD PTR ds:[rsi]
  42d7f1:	jne    0x42d867
  42d7f3:	jo     0x42d86a
  42d7f5:	je     0x42d817
  42d7f7:	imul   esi,DWORD PTR [rbx+0x20],0xa2e6e6f
  42d7fe:	add    BYTE PTR [rax],al
  42d800:	rex.WR outs dx,DWORD PTR ds:[rsi]
  42d802:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d805:	gs sub eax,0x756a6461
  42d80b:	jae    0x42d881
  42d80d:	gs and BYTE PTR fs:[rsi+0x75],ch
  42d812:	ins    DWORD PTR es:[rdi],dx
  42d813:	gs jb  0x42d87f
  42d816:	movsxd esp,DWORD PTR [rax]
  42d818:	outs   dx,DWORD PTR ds:[rsi]
  42d819:	jne    0x42d88f
  42d81b:	jo     0x42d892
  42d81d:	je     0x42d83f
  42d81f:	imul   esi,DWORD PTR [rbx+0x20],0x2e66666f
  42d826:	or     al,BYTE PTR [rax]
  42d828:	push   rax
  42d829:	(bad)  
  42d82a:	addr32 gs jb 0x42d84e
  42d82e:	imul   esi,DWORD PTR [rbx+0x20],0x64657375
  42d835:	and    BYTE PTR [rsi+0x6f],ah
  42d838:	jb     0x42d85a
  42d83a:	ins    BYTE PTR es:[rdi],dx
  42d83b:	outs   dx,DWORD PTR ds:[rsi]
  42d83c:	outs   dx,BYTE PTR ds:[rsi]
  42d83d:	and    BYTE PTR [edi+0x75],ch
  42d841:	je     0x42d8b3
  42d843:	jne    0x42d8b9
  42d845:	or     al,BYTE PTR cs:[rax]
  42d848:	push   rax
  42d849:	(bad)  
  42d84a:	addr32 gs jb 0x42d86e
  42d84e:	imul   esi,DWORD PTR [rbx+0x20],0x61776c61
  42d855:	jns    0x42d8ca
  42d857:	and    BYTE PTR [rbp+0x73],dh
  42d85a:	gs fs or al,BYTE PTR cs:[rax]
  42d85f:	push   rax
  42d860:	(bad)  
  42d861:	addr32 gs jb 0x42d885
  42d865:	jne    0x42d8da
  42d867:	(bad)  
  42d868:	and    BYTE PTR gs:[ecx+0x73],ch
  42d86d:	and    BYTE PTR [rdi+0x66],ch
  42d870:	data16 or al,BYTE PTR cs:[rax]
  42d874:	add    BYTE PTR [rax],al
  42d876:	add    BYTE PTR [rax],al
  42d878:	push   rdx
  42d879:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  42d87d:	and    BYTE PTR fs:[rbx+0x65],dh
  42d881:	jo     0x42d8e4
  42d883:	jb     0x42d8e6
  42d885:	je     0x42d8f6
  42d887:	jb     0x42d8a9
  42d889:	imul   esi,DWORD PTR [rbx+0x20],0x6f72657a
  42d890:	and    BYTE PTR [rdx+0x79],ah
  42d893:	je     0x42d8fa
  42d895:	or     al,BYTE PTR cs:[rax]
  42d898:	push   rdx
  42d899:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  42d89d:	and    BYTE PTR fs:[rbx+0x65],dh
  42d8a1:	jo     0x42d904
  42d8a3:	jb     0x42d906
  42d8a5:	je     0x42d916
  42d8a7:	jb     0x42d8c9
  42d8a9:	imul   esi,DWORD PTR [rbx+0x20],0x77656e3c
  42d8b0:	ins    BYTE PTR es:[rdi],dx
  42d8b1:	imul   ebp,DWORD PTR [rsi+0x65],0xa2e3e
  42d8b8:	push   rdx
  42d8b9:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  42d8bd:	and    BYTE PTR fs:[rbx+0x65],dh
  42d8c1:	jo     0x42d924
  42d8c3:	jb     0x42d926
  42d8c5:	je     0x42d936
  42d8c7:	jb     0x42d8e9
  42d8c9:	imul   esi,DWORD PTR [rbx+0x20],0x22732522
  42d8d0:	or     al,BYTE PTR cs:[rax]
  42d8d3:	push   rsp
  42d8d4:	(bad)  
  42d8d5:	(bad)  
  42d8d6:	ins    BYTE PTR es:[rdi],dx
  42d8d7:	and    BYTE PTR gs:[rcx+0x74],ah
  42d8db:	je     0x42d94f
  42d8dd:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  42d8e4:	(bad)  
  42d8e5:	jb     0x42d94c
  42d8e7:	and    BYTE PTR [rdx],ah
  42d8e9:	and    eax,0xa2e2273
  42d8ee:	add    BYTE PTR [rcx+riz*2+0x62],dl
  42d8f2:	ins    BYTE PTR es:[rdi],dx
  42d8f3:	and    BYTE PTR gs:[rcx+0x74],ah
  42d8f7:	je     0x42d96b
  42d8f9:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  42d900:	jne    0x42d970
  42d902:	jae    0x42d969
  42d904:	je     0x42d934
  42d906:	or     al,BYTE PTR [rax]
  42d908:	push   rsp
  42d909:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x20736920
  42d911:	and    ah,BYTE PTR [rip+0xa2e2273]        # 0xa70fb8a
  42d917:	add    BYTE PTR [rcx+rbp*2+0x74],dl
  42d91b:	ins    BYTE PTR es:[rdi],dx
  42d91c:	and    BYTE PTR gs:[rcx+0x73],ch
  42d920:	and    BYTE PTR [rbp+0x6e],dh
  42d923:	jae    0x42d98a
  42d925:	je     0x42d955
  42d927:	or     al,BYTE PTR [rax]
  42d929:	push   rsp
  42d92a:	jne    0x42d99c
  42d92c:	ins    BYTE PTR es:[rdi],dx
  42d92d:	gs jae 0x42d950
  42d930:	outs   dx,DWORD PTR ds:[rsi]
  42d931:	outs   dx,BYTE PTR ds:[rsi]
  42d932:	ins    BYTE PTR es:[rdi],dx
  42d933:	jns    0x42d955
  42d935:	imul   esi,DWORD PTR [rbx+0x20],0xa2e6e6f
  42d93c:	add    BYTE PTR [rbp+rsi*2+0x70],dl
  42d940:	ins    BYTE PTR es:[rdi],dx
  42d941:	gs jae 0x42d964
  42d944:	outs   dx,DWORD PTR ds:[rsi]
  42d945:	outs   dx,BYTE PTR ds:[rsi]
  42d946:	ins    BYTE PTR es:[rdi],dx
  42d947:	jns    0x42d969
  42d949:	imul   esi,DWORD PTR [rbx+0x20],0x2e66666f
  42d950:	or     al,BYTE PTR [rax]
  42d952:	(bad)  
  42d953:	je     0x42d9c2
  42d955:	jo     0x42d957
  42d957:	outs   dx,DWORD PTR ds:[rsi]
  42d958:	data16 data16 add BYTE PTR [rdi+0x6e],ch
  42d95d:	add    BYTE PTR [rbx+0x6d],ah
  42d960:	fs cs gs js 0x42d9ca
  42d965:	add    BYTE PTR [rcx+0x0],ah
  42d968:	rex.XB add BYTE PTR [r11+0x0],spl
  42d96c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42d96f:	outs   dx,BYTE PTR ds:[rsi]
  42d970:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  42d975:	add    BYTE PTR [rax],al
  42d977:	add    BYTE PTR [rcx+0x6c],al
  42d97a:	ins    BYTE PTR es:[rdi],dx
  42d97b:	and    BYTE PTR [rbx+0x6f],ah
  42d97e:	outs   dx,BYTE PTR ds:[rsi]
  42d97f:	outs   dx,BYTE PTR ds:[rsi]
  42d980:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42d985:	outs   dx,BYTE PTR ds:[rsi]
  42d986:	and    BYTE PTR [rax+0x61],dh
  42d989:	jb     0x42d9ec
  42d98b:	ins    DWORD PTR es:[rdi],dx
  42d98c:	gs je  0x42d9f4
  42d98f:	jb     0x42da04
  42d991:	and    BYTE PTR [rbp+0x75],ch
  42d994:	jae    0x42da0a
  42d996:	and    BYTE PTR [rdx+0x65],ah
  42d999:	and    BYTE PTR [rbx+0x75],dh
  42d99c:	jo     0x42da0e
  42d99e:	ins    BYTE PTR es:[rdi],dx
  42d99f:	imul   esp,DWORD PTR [rbp+0x64],0x63656220
  42d9a6:	(bad)  
  42d9a7:	jne    0x42da1c
  42d9a9:	and    BYTE PTR gs:[rsi+0x6f],ch
  42d9ad:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42d9b1:	(bad)  
  42d9b2:	(bad)  
  42d9b4:	jae    0x42da1b
  42d9b6:	and    BYTE PTR [rbx+0x6f],ah
  42d9b9:	outs   dx,BYTE PTR ds:[rsi]
  42d9ba:	outs   dx,BYTE PTR ds:[rsi]
  42d9bb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42d9c0:	outs   dx,BYTE PTR ds:[rsi]
  42d9c1:	and    BYTE PTR [rbp+0x78],ah
  42d9c4:	imul   esi,DWORD PTR [rbx+0x74],0x68000a73
  42d9cb:	outs   dx,DWORD PTR ds:[rsi]
  42d9cc:	jae    0x42da42
  42d9ce:	add    BYTE PTR [rax+0x6f],dh
  42d9d1:	jb     0x42da47
  42d9d3:	add    BYTE PTR [rbp+0x73],dh
  42d9d6:	gs jb  0x42d9d9
  42d9d9:	jo     0x42da3c
  42d9db:	jae    0x42da50
  42d9dd:	ja     0x42da4e
  42d9df:	jb     0x42da45
  42d9e1:	add    BYTE PTR [rdx+riz*2+0x6e],ah
  42d9e5:	(bad)  
  42d9e6:	ins    DWORD PTR es:[rdi],dx
  42d9e7:	add    BYTE PTR gs:[rsi+0x61],ah
  42d9eb:	ins    BYTE PTR es:[rdi],dx
  42d9ec:	ins    BYTE PTR es:[rdi],dx
  42d9ed:	(bad)  
  42d9ef:	movsxd ebp,DWORD PTR [rbx+0x5f]
  42d9f2:	(bad)  
  42d9f3:	jo     0x42da65
  42d9f5:	ins    BYTE PTR es:[rdi],dx
  42d9f6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  42d9fd:	pop    rdi
  42d9fe:	outs   dx,BYTE PTR ds:[rsi]
  42d9ff:	(bad)  
  42da00:	ins    DWORD PTR es:[rdi],dx
  42da01:	add    BYTE PTR gs:[rbx+0x6c],ah
  42da05:	imul   esp,DWORD PTR [rbp+0x6e],0x6e655f74
  42da0c:	movsxd ebp,DWORD PTR [rdi+0x64]
  42da0f:	imul   ebp,DWORD PTR [rsi+0x67],0x43475000
  42da16:	rex.WR
  42da17:	rex.WB
  42da18:	rex.RB
  42da19:	rex.WRX push rsp
  42da1b:	rex.RB
  42da1c:	rex.WRX
  42da1d:	rex.XB
  42da1e:	rex.WRXB
  42da1f:	rex.R
  42da20:	rex.WB
  42da21:	rex.WRX
  42da22:	rex.RXB add BYTE PTR [r8+0x72],r10b
  42da26:	gs jbe 0x42da92
  42da29:	outs   dx,DWORD PTR ds:[rsi]
  42da2a:	jne    0x42da9f
  42da2c:	and    BYTE PTR [rbx+0x6f],ah
  42da2f:	outs   dx,BYTE PTR ds:[rsi]
  42da30:	outs   dx,BYTE PTR ds:[rsi]
  42da31:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42da36:	outs   dx,BYTE PTR ds:[rsi]
  42da37:	and    BYTE PTR [rbx+0x65],ch
  42da3a:	jo     0x42dab0
  42da3c:	or     al,BYTE PTR [rax]
  42da3e:	pop    rsp
  42da3f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42da42:	outs   dx,BYTE PTR ds:[rsi]
  42da43:	movsxd esi,DWORD PTR gs:[rdx+rdi*1+0x20]
  42da48:	and    eax,0x73
  42da4d:	add    BYTE PTR [rax],al
  42da4f:	add    BYTE PTR [rcx+0x6f],bl
  42da52:	jne    0x42da74
  42da54:	(bad)  
  42da55:	jb     0x42dabc
  42da57:	and    BYTE PTR [rsi+0x6f],ch
  42da5a:	ja     0x42da7c
  42da5c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42da5f:	outs   dx,BYTE PTR ds:[rsi]
  42da60:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42da65:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42da69:	fs (bad) 
  42da6b:	je     0x42dace
  42da6d:	(bad)  
  42da6f:	jae    0x42dad6
  42da71:	and    BYTE PTR [rdx],ah
  42da73:	and    eax,0x61202273
  42da78:	jae    0x42da9a
  42da7a:	jne    0x42daef
  42da7c:	gs jb  0x42da9f
  42da7f:	and    ah,BYTE PTR [rip+0x76202273]        # 0x7662fcf8
  42da85:	imul   esp,DWORD PTR [rcx+0x20],0x6b636f73
  42da8c:	gs je  0x42daaf
  42da8f:	imul   ebp,DWORD PTR [rsi+0x20],0x22732522
  42da96:	and    BYTE PTR [rcx+0x74],ah
  42da99:	and    BYTE PTR [rax+0x6f],dh
  42da9c:	jb     0x42db12
  42da9e:	and    BYTE PTR [rdx],ah
  42daa0:	and    eax,0xa2e2273
  42daa5:	add    BYTE PTR [rax],al
  42daa7:	add    BYTE PTR [rcx+0x6f],bl
  42daaa:	jne    0x42dacc
  42daac:	(bad)  
  42daad:	jb     0x42db14
  42daaf:	and    BYTE PTR [rsi+0x6f],ch
  42dab2:	ja     0x42dad4
  42dab4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42dab7:	outs   dx,BYTE PTR ds:[rsi]
  42dab8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42dabd:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42dac1:	fs (bad) 
  42dac3:	je     0x42db26
  42dac5:	(bad)  
  42dac7:	jae    0x42db2e
  42dac9:	and    BYTE PTR [rdx],ah
  42dacb:	and    eax,0x61202273
  42dad0:	jae    0x42daf2
  42dad2:	jne    0x42db47
  42dad4:	gs jb  0x42daf7
  42dad7:	and    ah,BYTE PTR [rip+0x6f202273]        # 0x6f62fd50
  42dadd:	outs   dx,BYTE PTR ds:[rsi]
  42dade:	and    BYTE PTR [rax+0x6f],ch
  42dae1:	jae    0x42db57
  42dae3:	and    BYTE PTR [rdx],ah
  42dae5:	and    eax,0x61202273
  42daea:	je     0x42db0c
  42daec:	jo     0x42db5d
  42daee:	jb     0x42db64
  42daf0:	and    BYTE PTR [rdx],ah
  42daf2:	and    eax,0xa2e2273
  42daf7:	add    BYTE PTR [rbx+0x64],ah
  42dafa:	add    BYTE PTR [rdi],ch
  42dafc:	add    BYTE PTR [rax],al
  42dafe:	add    BYTE PTR [rax],al
  42db00:	pop    rsp
  42db01:	and    eax,0x63203a73
  42db06:	outs   dx,DWORD PTR ds:[rsi]
  42db07:	jne    0x42db75
  42db09:	and    BYTE PTR fs:[rsi+0x6f],ch
  42db0d:	je     0x42db2f
  42db0f:	movsxd ebp,DWORD PTR [rax+0x61]
  42db12:	outs   dx,BYTE PTR ds:[rsi]
  42db13:	and    BYTE PTR gs:[ecx+ebp*2+0x72],ah
  42db19:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  42db1e:	jns    0x42db40
  42db20:	je     0x42db91
  42db22:	and    BYTE PTR [rdx],ah
  42db24:	and    eax,0x203a2273
  42db29:	and    eax,0x63000a73
  42db2e:	outs   dx,DWORD PTR ds:[rsi]
  42db2f:	outs   dx,BYTE PTR ds:[rsi]
  42db30:	outs   dx,BYTE PTR ds:[rsi]
  42db31:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
  42db38:	pop    rcx
  42db39:	outs   dx,DWORD PTR ds:[rsi]
  42db3a:	jne    0x42db5c
  42db3c:	(bad)  
  42db3d:	jb     0x42dba4
  42db3f:	and    BYTE PTR [rbx+0x75],ah
  42db42:	jb     0x42dbb6
  42db44:	outs   dx,BYTE PTR gs:[rsi]
  42db46:	je     0x42dbb4
  42db48:	jns    0x42db6a
  42db4a:	outs   dx,BYTE PTR ds:[rsi]
  42db4b:	outs   dx,DWORD PTR ds:[rsi]
  42db4c:	je     0x42db6e
  42db4e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42db51:	outs   dx,BYTE PTR ds:[rsi]
  42db52:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42db57:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42db5b:	(bad)  
  42db5c:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42db60:	(bad)  
  42db61:	(bad)  
  42db63:	jae    0x42dbca
  42db65:	or     al,BYTE PTR cs:[rax]
  42db68:	outs   dx,DWORD PTR ds:[rsi]
  42db69:	jne    0x42dbdf
  42db6b:	and    BYTE PTR [rdi+0x66],ch
  42db6e:	and    BYTE PTR [rbp+0x65],ch
  42db71:	ins    DWORD PTR es:[rdi],dx
  42db72:	outs   dx,DWORD PTR ds:[rsi]
  42db73:	jb     0x42dbee
  42db75:	or     al,BYTE PTR [rax]
  42db77:	push   0x6174736f
  42db7c:	fs fs jb 0x42db80
  42db80:	pop    rcx
  42db81:	outs   dx,DWORD PTR ds:[rsi]
  42db82:	jne    0x42dba4
  42db84:	(bad)  
  42db85:	jb     0x42dbec
  42db87:	and    BYTE PTR [rbx+0x6f],ah
  42db8a:	outs   dx,BYTE PTR ds:[rsi]
  42db8b:	outs   dx,BYTE PTR ds:[rsi]
  42db8c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42db91:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42db95:	fs (bad) 
  42db97:	je     0x42dbfa
  42db99:	(bad)  
  42db9b:	jae    0x42dc02
  42db9d:	and    BYTE PTR [rdx],ah
  42db9f:	and    eax,0x61202273
  42dba4:	jae    0x42dbc6
  42dba6:	jne    0x42dc1b
  42dba8:	gs jb  0x42dbcb
  42dbab:	and    ah,BYTE PTR [rip+0x76202273]        # 0x7662fe24
  42dbb1:	imul   esp,DWORD PTR [rcx+0x20],0x6b636f73
  42dbb8:	gs je  0x42dbdb
  42dbbb:	imul   ebp,DWORD PTR [rsi+0x20],0x22732522
  42dbc2:	and    BYTE PTR [rcx+0x74],ah
  42dbc5:	and    BYTE PTR [rax+0x6f],dh
  42dbc8:	jb     0x42dc3e
  42dbca:	and    BYTE PTR [rdx],ah
  42dbcc:	and    eax,0xa2e2273
  42dbd1:	add    BYTE PTR [rax],al
  42dbd3:	add    BYTE PTR [rax],al
  42dbd5:	add    BYTE PTR [rax],al
  42dbd7:	add    BYTE PTR [rcx+0x6f],bl
  42dbda:	jne    0x42dbfc
  42dbdc:	(bad)  
  42dbdd:	jb     0x42dc44
  42dbdf:	and    BYTE PTR [rbx+0x6f],ah
  42dbe2:	outs   dx,BYTE PTR ds:[rsi]
  42dbe3:	outs   dx,BYTE PTR ds:[rsi]
  42dbe4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42dbe9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42dbed:	fs (bad) 
  42dbef:	je     0x42dc52
  42dbf1:	(bad)  
  42dbf3:	jae    0x42dc5a
  42dbf5:	and    BYTE PTR [rdx],ah
  42dbf7:	and    eax,0x61202273
  42dbfc:	jae    0x42dc1e
  42dbfe:	jne    0x42dc73
  42dc00:	gs jb  0x42dc23
  42dc03:	and    ah,BYTE PTR [rip+0x6f202273]        # 0x6f62fe7c
  42dc09:	outs   dx,BYTE PTR ds:[rsi]
  42dc0a:	and    BYTE PTR [rax+0x6f],ch
  42dc0d:	jae    0x42dc83
  42dc0f:	and    BYTE PTR [rdx],ah
  42dc11:	and    eax,0x61202273
  42dc16:	je     0x42dc38
  42dc18:	jo     0x42dc89
  42dc1a:	jb     0x42dc90
  42dc1c:	and    BYTE PTR [rdx],ah
  42dc1e:	and    eax,0xa2e2273
  42dc23:	add    BYTE PTR [rbx+0x6f],ah
  42dc26:	jo     0x42dca1
  42dc28:	add    BYTE PTR [rbx+0x6f],ah
  42dc2b:	jo     0x42dca6
  42dc2d:	jb     0x42dc98
  42dc2f:	addr32 push 0x76740074
  42dc35:	ins    DWORD PTR es:[rdi],dx
  42dc36:	jae    0x42dc7d
  42dc38:	add    BYTE PTR [rsp+riz*2+0x70],ah
  42dc3c:	add    BYTE PTR [rbp+0x0],ah
  42dc3f:	gs imul esi,DWORD PTR fs:[rax+rax*1+0x6e],0x7571206f
  42dc49:	gs jb  0x42dcc5
  42dc4c:	and    BYTE PTR [rdx+0x75],ah
  42dc4f:	data16 data16 gs jb 0x42dc5e
  42dc54:	add    BYTE PTR [rax],dh
  42dc56:	xor    DWORD PTR [rdx],esi
  42dc58:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  42dc5f:	add    BYTE PTR [rcx+0x6e],ch
  42dc62:	jbe    0x42dcc5
  42dc64:	ins    BYTE PTR es:[rdi],dx
  42dc65:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x20656e69
  42dc6d:	outs   dx,BYTE PTR ds:[rsi]
  42dc6e:	jne    0x42dcdd
  42dc70:	(bad)  
  42dc71:	gs jb  0x42dcae
  42dc74:	and    BYTE PTR [rip+0x65000a73],ah        # 0x6542e6ed
  42dc7a:	data16 add BYTE PTR [rax],al
  42dc7d:	add    BYTE PTR [rax],al
  42dc7f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42dc83:	and    BYTE PTR [rbx+0x65],dh
  42dc86:	jb     0x42dcfe
  42dc88:	gs jb  0x42dcab
  42dc8b:	sub    BYTE PTR [rsi+0x65],dh
  42dc8e:	jb     0x42dd03
  42dc90:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42dc97:	and    eax,0x64202964
  42dc9c:	outs   dx,DWORD PTR ds:[rsi]
  42dc9d:	gs jae 0x42dcc0
  42dca0:	outs   dx,BYTE PTR ds:[rsi]
  42dca1:	outs   dx,DWORD PTR ds:[rsi]
  42dca2:	je     0x42dcc4
  42dca4:	jae    0x42dd1b
  42dca6:	jo     0x42dd18
  42dca8:	outs   dx,DWORD PTR ds:[rsi]
  42dca9:	jb     0x42dd1f
  42dcab:	and    BYTE PTR [rbp+0x64],ah
  42dcae:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x75662067
  42dcb6:	outs   dx,BYTE PTR ds:[rsi]
  42dcb7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42dcbb:	outs   dx,BYTE PTR ds:[rsi]
  42dcbc:	and    BYTE PTR [rbx+0x6f],dh
  42dcbf:	jne    0x42dd33
  42dcc1:	movsxd esp,DWORD PTR [rbp+0x2e]
  42dcc4:	or     al,BYTE PTR [rax]
  42dcc6:	push   r11
  42dcc8:	and    BYTE PTR [rax],al
  42dcca:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42dccc:	and    BYTE PTR [rbx+0x68],ah
  42dccf:	(bad)  
  42dcd0:	outs   dx,BYTE PTR ds:[rsi]
  42dcd1:	addr32 gs jae 0x42dcd5
  42dcd5:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42dcd9:	add    BYTE PTR [rcx+0x65],dh
  42dcdc:	movsxd ebp,DWORD PTR [rax+0x6f]
  42dcdf:	add    BYTE PTR [rip+0x6e65006e],ch        # 0x6ea7dd53
  42dce5:	movsxd ebp,DWORD PTR [rdi+0x64]
  42dce8:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  42dcef:	add    BYTE PTR [rip+0x69203a73],ah        # 0x69631768
  42dcf5:	outs   dx,BYTE PTR ds:[rsi]
  42dcf6:	jbe    0x42dd59
  42dcf8:	ins    BYTE PTR es:[rdi],dx
  42dcf9:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x646f636e
  42dd01:	imul   ebp,DWORD PTR [rsi+0x67],0x6d616e20
  42dd08:	and    BYTE PTR gs:[rdi+0x72],ch
  42dd0c:	and    BYTE PTR [rbx+0x6f],ah
  42dd0f:	outs   dx,BYTE PTR ds:[rsi]
  42dd10:	jbe    0x42dd77
  42dd12:	jb     0x42dd87
  42dd14:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42dd1b:	movsxd esp,DWORD PTR [rbp+0x64]
  42dd1e:	jne    0x42dd92
  42dd20:	and    BYTE PTR gs:[rsi+0x6f],ch
  42dd24:	je     0x42dd46
  42dd26:	outs   dx,WORD PTR ds:[rsi]
  42dd28:	jne    0x42dd98
  42dd2a:	or     al,BYTE PTR fs:[rax]
  42dd2d:	data16 add BYTE PTR [rdi+0x0],ah
  42dd31:	addr32 jae 0x42dd99
  42dd34:	je     0x42dd36
  42dd36:	push   0x6c656800
  42dd3b:	jo     0x42dd3d
  42dd3d:	rex.W add BYTE PTR [rcx+0x0],bpl
  42dd41:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42dd48:	add    BYTE PTR [rcx+0x72],ch
  42dd4b:	add    BYTE PTR [rcx+0x6e],ch
  42dd4e:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  42dd52:	gs pop rdi
  42dd54:	jb     0x42ddbb
  42dd56:	ins    BYTE PTR es:[rdi],dx
  42dd57:	(bad)  
  42dd58:	je     0x42ddc3
  42dd5a:	jbe    0x42ddc1
  42dd5c:	add    BYTE PTR [rax],al
  42dd5e:	add    BYTE PTR [rax],al
  42dd60:	pop    rsp
  42dd61:	and    eax,0x6d203a73
  42dd66:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  42dd6d:	jb     0x42ddd4
  42dd6f:	jno    0x42dde6
  42dd71:	imul   esi,DWORD PTR [rdx+0x65],0x72612064
  42dd78:	addr32 jne 0x42dde8
  42dd7b:	outs   dx,BYTE PTR gs:[rsi]
  42dd7d:	je     0x42dd89
  42dd7f:	add    BYTE PTR [rax+rax*1+0x6c],ch
  42dd83:	imul   esi,DWORD PTR [rbx+0x74],0x2b6c00
  42dd8a:	ins    BYTE PTR es:[rdi],dx
  42dd8b:	imul   esi,DWORD PTR [rbx+0x74],0x6f6c002b
  42dd92:	pop    rdi
  42dd93:	add    BYTE PTR [rbp+0x78],ah
  42dd96:	jo     0x42de07
  42dd98:	jb     0x42de0e
  42dd9a:	add    BYTE PTR [rcx+0x6d],ch
  42dd9d:	jo     0x42de0e
  42dd9f:	jb     0x42de15
  42dda1:	add    BYTE PTR [rbp+0x6e],dh
  42dda4:	ins    BYTE PTR es:[rdi],dx
  42dda5:	imul   ebp,DWORD PTR [rsi+0x6b],0x6f006f00
  42ddac:	jne    0x42de22
  42ddae:	add    BYTE PTR [rax+0x0],dh
  42ddb1:	jo     0x42de25
  42ddb3:	imul   ebp,DWORD PTR [rsi+0x74],0x65755100
  42ddba:	jb     0x42de35
  42ddbc:	and    BYTE PTR [rdx+0x75],ah
  42ddbf:	data16 data16 gs jb 0x42dde4
  42ddc4:	imul   esi,DWORD PTR [rbx+0x20],0x74706d65
  42ddcb:	jns    0x42ddfb
  42ddcd:	add    BYTE PTR [rbp+0x6e],al
  42ddd0:	je     0x42de37
  42ddd2:	jb     0x42ddf4
  42ddd4:	outs   dx,BYTE PTR ds:[rsi]
  42ddd5:	gs ja  0x42ddf8
  42ddd8:	jo     0x42de3b
  42ddda:	jae    0x42de4f
  42dddc:	ja     0x42de4d
  42ddde:	jb     0x42de44
  42dde0:	cmp    ah,BYTE PTR [rax]
  42dde2:	add    BYTE PTR [rbp+0x6e],al
  42dde5:	je     0x42de4c
  42dde7:	jb     0x42de09
  42dde9:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x6e696167
  42ddf1:	cmp    ah,BYTE PTR [rax]
  42ddf3:	add    BYTE PTR [rax+0x61],dl
  42ddf6:	jae    0x42de6b
  42ddf8:	ja     0x42de69
  42ddfa:	jb     0x42de60
  42ddfc:	jae    0x42de1e
  42ddfe:	imul   esp,DWORD PTR fs:[rsi+rbp*2+0x27],0x616d2074
  42de07:	je     0x42de6c
  42de09:	push   0x50000a2e
  42de0e:	(bad)  
  42de0f:	jae    0x42de84
  42de11:	ja     0x42de82
  42de13:	jb     0x42de79
  42de15:	and    BYTE PTR [rbp+0x6e],ah
  42de18:	movsxd esi,DWORD PTR [rdx+0x79]
  42de1b:	jo     0x42de91
  42de1d:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42de24:	ins    BYTE PTR es:[rdi],dx
  42de25:	gs fs or al,BYTE PTR cs:[rax]
  42de2a:	rex.B
  42de2b:	rex.WR push rsp
  42de2d:	rex.RB push r10
  42de2f:	and    BYTE PTR [rbp+0x53],dl
  42de32:	rex.RB push r10
  42de34:	and    BYTE PTR [rip+0x41502073],ah        # 0x4192fead
  42de3a:	push   rbx
  42de3b:	push   rbx
  42de3c:	push   rdi
  42de3d:	rex.WRXB push r10
  42de3f:	and    BYTE PTR [rax],r8b
  42de42:	jo     0x42deb6
  42de44:	outs   dx,DWORD PTR ds:[rsi]
  42de45:	ins    DWORD PTR es:[rdi],dx
  42de46:	jo     0x42debc
	...
  42de50:	pop    rsp
  42de51:	and    eax,0x65203a73
  42de56:	jb     0x42deca
  42de58:	outs   dx,DWORD PTR ds:[rsi]
  42de59:	jb     0x42de7b
  42de5b:	ja     0x42dec5
  42de5d:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x74746573
  42de65:	imul   ebp,DWORD PTR [rsi+0x67],0x72617620
  42de6c:	imul   esp,DWORD PTR [rcx+0x62],0xa656c
  42de73:	jo     0x42dee8
  42de75:	gs je  0x42de78
  42de78:	and    eax,0x52450064
  42de7d:	push   rdx
  42de7e:	rex.WRXB push r10
  42de80:	add    BYTE PTR [rip+0x7334312d],ah        # 0x73770fb3
  42de86:	and    BYTE PTR [rip+0x71000a73],ah        # 0x7142e8ff
  42de8c:	add    BYTE PTR [rcx+0x75],dh
  42de8f:	imul   esi,DWORD PTR [rax+rax*1+0x72],0x73657200
  42de97:	gs je  0x42de9a
  42de9a:	push   rcx
  42de9b:	jne    0x42df02
  42de9d:	jb     0x42df18
  42de9f:	and    BYTE PTR [rdx+0x75],ah
  42dea2:	data16 data16 gs jb 0x42dec7
  42dea7:	jb     0x42df0e
  42dea9:	jae    0x42df10
  42deab:	je     0x42decd
  42dead:	sub    BYTE PTR [rbx+0x6c],ah
  42deb0:	gs (bad) 
  42deb2:	jb     0x42df19
  42deb4:	sub    DWORD PTR fs:[rsi],ebp
  42deb7:	add    BYTE PTR [rbx+0x0],dh
  42deba:	push   rdi
  42debb:	jb     0x42df2c
  42debd:	je     0x42df24
  42debf:	and    BYTE PTR [rax+0x69],ch
  42dec2:	jae    0x42df38
  42dec4:	outs   dx,DWORD PTR ds:[rsi]
  42dec5:	jb     0x42df40
  42dec7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42decb:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2522
  42ded2:	jae    0x42def6
  42ded4:	or     al,BYTE PTR cs:[rax]
  42ded7:	jae    0x42df3e
  42ded9:	je     0x42dedb
  42dedb:	jae    0x42df42
  42dedd:	je     0x42df44
  42dedf:	outs   dx,BYTE PTR ds:[rsi]
  42dee0:	jbe    0x42dee2
  42dee2:	add    BYTE PTR [rax],al
  42dee4:	add    BYTE PTR [rax],al
  42dee6:	add    BYTE PTR [rax],al
  42dee8:	pop    rsp
  42dee9:	and    eax,0x65203a73
  42deee:	outs   dx,BYTE PTR ds:[rsi]
  42deef:	jbe    0x42df5a
  42def1:	jb     0x42df62
  42def3:	outs   dx,BYTE PTR ds:[rsi]
  42def4:	ins    DWORD PTR es:[rdi],dx
  42def5:	outs   dx,BYTE PTR gs:[rsi]
  42def7:	je     0x42df19
  42def9:	jbe    0x42df5c
  42defb:	jb     0x42df66
  42defd:	(bad)  
  42defe:	(bad)  
  42deff:	ins    BYTE PTR es:[rdi],dx
  42df00:	and    BYTE PTR gs:[rsi+0x61],ch
  42df04:	ins    DWORD PTR es:[rdi],dx
  42df05:	and    BYTE PTR gs:[rbp+0x75],ch
  42df09:	jae    0x42df7f
  42df0b:	and    BYTE PTR [rsi+0x6f],ch
  42df0e:	je     0x42df30
  42df10:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42df13:	je     0x42df76
  42df15:	imul   ebp,DWORD PTR [rsi+0x20],0xa223d22
  42df1c:	add    BYTE PTR [rip+0x73253d73],ah        # 0x73681c95
  42df22:	add    BYTE PTR [rbx+0x66],dh
  42df25:	add    BYTE PTR [rbx+0x66],dh
  42df28:	sub    eax,DWORD PTR [rax]
  42df2a:	add    BYTE PTR [rax],al
  42df2c:	add    BYTE PTR [rax],al
  42df2e:	add    BYTE PTR [rax],al
  42df30:	push   rsp
  42df31:	push   0x65732065
  42df36:	jb     0x42dfae
  42df38:	gs jb  0x42df5b
  42df3b:	sub    BYTE PTR [rsi+0x65],dh
  42df3e:	jb     0x42dfb3
  42df40:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42df47:	and    eax,0x64202964
  42df4c:	outs   dx,DWORD PTR ds:[rsi]
  42df4d:	gs jae 0x42df70
  42df50:	outs   dx,BYTE PTR ds:[rsi]
  42df51:	outs   dx,DWORD PTR ds:[rsi]
  42df52:	je     0x42df74
  42df54:	jae    0x42dfcb
  42df56:	jo     0x42dfc8
  42df58:	outs   dx,DWORD PTR ds:[rsi]
  42df59:	jb     0x42dfcf
  42df5b:	and    BYTE PTR [rbx+0x68],dh
  42df5e:	outs   dx,DWORD PTR ds:[rsi]
  42df5f:	ja     0x42dfca
  42df61:	outs   dx,BYTE PTR ds:[rsi]
  42df62:	and    BYTE PTR [esi+0x75],ah
  42df66:	outs   dx,BYTE PTR ds:[rsi]
  42df67:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42df6b:	outs   dx,BYTE PTR ds:[rsi]
  42df6c:	and    BYTE PTR [rbx+0x6f],dh
  42df6f:	jne    0x42dfe3
  42df71:	movsxd esp,DWORD PTR [rbp+0x2e]
  42df74:	or     al,BYTE PTR [rax]
  42df76:	data16 jne 0x42dfe7
  42df79:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42df7d:	outs   dx,BYTE PTR ds:[rsi]
  42df7e:	and    BYTE PTR [rsi+0x61],ch
  42df81:	ins    DWORD PTR es:[rdi],dx
  42df82:	and    BYTE PTR gs:[rcx+0x73],ch
  42df86:	and    BYTE PTR [rdx+0x65],dh
  42df89:	jno    0x42e000
  42df8b:	imul   esi,DWORD PTR [rdx+0x65],0x20000a64
  42df92:	and    BYTE PTR [rax],ah
  42df94:	and    BYTE PTR [rax],ah
  42df96:	and    BYTE PTR [rax],ah
  42df98:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2542ea11
  42df9e:	sub    eax,0x25206437
  42dfa3:	jae    0x42dfaf
  42dfa5:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  42dfa9:	imul   ebp,DWORD PTR [rsi+0x67],0x69745c00
  42dfb0:	ins    DWORD PTR es:[rdi],dx
  42dfb1:	imul   ebp,DWORD PTR [rsi+0x67],0x6d695400
  42dfb8:	imul   ebp,DWORD PTR [rsi+0x67],0x20736920
  42dfbf:	outs   dx,DWORD PTR ds:[rsi]
  42dfc0:	outs   dx,BYTE PTR ds:[rsi]
  42dfc1:	add    BYTE PTR cs:[rcx+rbp*2+0x6d],dl
  42dfc6:	imul   ebp,DWORD PTR [rsi+0x67],0x20736920
  42dfcd:	outs   dx,DWORD PTR ds:[rsi]
  42dfce:	data16 data16 add BYTE PTR cs:[rbp+0x6e],dh
  42dfd4:	jae    0x42e03b
  42dfd6:	je     0x42dfd8
  42dfd8:	ja     0x42e04c
  42dfda:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0xa7325
  42dfe2:	ja     0x42e045
  42dfe4:	je     0x42e049
  42dfe6:	push   0x21007a00
  42dfeb:	add    BYTE PTR [rbx+0x48],dl
  42dfee:	rex.RB
  42dfef:	rex.WR
  42dff0:	rex.WR add BYTE PTR [rbx+0x4f],r8b
  42dff4:	rex.WRB push r11
  42dff6:	push   rax
  42dff7:	rex.RB
  42dff8:	rex.XB add BYTE PTR [r10],spl
  42dffb:	and    eax,0x5c002273
  42e000:	and    DWORD PTR [rdx],edi
  42e002:	and    BYTE PTR [rsi+0x61],ah
  42e005:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x3f000a
  42e00d:	add    BYTE PTR [rax],al
  42e00f:	add    BYTE PTR [rcx+0x6e],cl
  42e012:	jbe    0x42e075
  42e014:	ins    BYTE PTR es:[rdi],dx
  42e015:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x616d6d6f
  42e01d:	outs   dx,BYTE PTR ds:[rsi]
  42e01e:	and    BYTE PTR fs:[rbp+riz*1+0x73],bl
  42e023:	and    BYTE PTR cs:[rdx+rsi*2+0x79],dl
  42e028:	and    BYTE PTR [rdi+rdi*1+0x20],bl
  42e02c:	outs   dx,WORD PTR ds:[rsi]
  42e02e:	jb     0x42e050
  42e030:	push   0x2e706c65
  42e035:	or     al,BYTE PTR [rax]
  42e037:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42e03e:	and    BYTE PTR [rbx+0x6f],ah
  42e041:	ins    DWORD PTR es:[rdi],dx
  42e042:	ins    DWORD PTR es:[rdi],dx
  42e043:	(bad)  
  42e044:	outs   dx,BYTE PTR ds:[rsi]
  42e045:	and    BYTE PTR fs:[rbp+riz*1+0x73],bl
  42e04a:	or     al,BYTE PTR [rax]
  42e04c:	add    BYTE PTR [rax],al
  42e04e:	add    BYTE PTR [rax],al
  42e050:	pop    rsp
  42e051:	and    eax,0x65203a73
  42e056:	js     0x42e0cc
  42e058:	jb     0x42e0bb
  42e05a:	and    BYTE PTR [rcx+0x72],ah
  42e05d:	addr32 jne 0x42e0cd
  42e060:	outs   dx,BYTE PTR gs:[rsi]
  42e062:	je     0x42e084
  42e064:	and    ah,BYTE PTR [rip+0x69202273]        # 0x696302dd
  42e06a:	outs   dx,BYTE PTR ds:[esi]
  42e06c:	outs   dx,DWORD PTR ds:[rsi]
  42e06d:	jb     0x42e0d4
  42e06f:	or     al,BYTE PTR fs:[rax]
  42e072:	add    BYTE PTR [rax],al
  42e074:	add    BYTE PTR [rax],al
  42e076:	add    BYTE PTR [rax],al
  42e078:	pop    rcx
  42e079:	outs   dx,DWORD PTR ds:[rsi]
  42e07a:	jne    0x42e09c
  42e07c:	(bad)  
  42e07d:	jb     0x42e0e4
  42e07f:	and    BYTE PTR [rsi+0x6f],ch
  42e082:	ja     0x42e0a4
  42e084:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42e087:	outs   dx,BYTE PTR ds:[rsi]
  42e088:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42e08d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e091:	fs (bad) 
  42e093:	je     0x42e0f6
  42e095:	(bad)  
  42e097:	jae    0x42e0fe
  42e099:	and    BYTE PTR [rdx],ah
  42e09b:	and    eax,0x61202273
  42e0a0:	jae    0x42e0c2
  42e0a2:	jne    0x42e117
  42e0a4:	gs jb  0x42e0c7
  42e0a7:	and    ah,BYTE PTR [rip+0xa2e2273]        # 0xa710320
  42e0ad:	add    BYTE PTR [rax],al
  42e0af:	add    BYTE PTR [rbx+0x52],al
  42e0b2:	rex.RB
  42e0b3:	push   r12
  42e0b5:	and    BYTE PTR [r14+0x55],r8b
  42e0b9:	rex.WRX
  42e0ba:	rex.XB push r12
  42e0bc:	rex.WB
  42e0bd:	rex.WRXB
  42e0be:	rex.WRX and BYTE PTR [rax],r13b
  42e0c1:	and    BYTE PTR [rcx],ch
  42e0c3:	or     ah,BYTE PTR [rax]
  42e0c5:	push   rdx
  42e0c6:	rex.RB push r12
  42e0c8:	push   rbp
  42e0c9:	push   rdx
  42e0ca:	rex.WRX push rbx
  42e0cc:	and    BYTE PTR [rdx],cl
  42e0ce:	and    BYTE PTR [rcx+rax*2+0x4e],cl
  42e0d2:	rex.RXB push r13
  42e0d4:	rex.B
  42e0d5:	rex.RXB
  42e0d6:	and    BYTE PTR [r10],r9b
  42e0d9:	and    BYTE PTR [rip+0x6f63202d],ch        # 0x6fa6010c
  42e0df:	ins    DWORD PTR es:[rdi],dx
  42e0e0:	ins    DWORD PTR es:[rdi],dx
  42e0e1:	outs   dx,DWORD PTR ds:[rsi]
  42e0e2:	outs   dx,BYTE PTR ds:[rsi]
  42e0e3:	and    BYTE PTR [rdi+0x70],ch
  42e0e6:	je     0x42e151
  42e0e8:	outs   dx,DWORD PTR ds:[rsi]
  42e0e9:	outs   dx,BYTE PTR ds:[rsi]
  42e0ea:	jae    0x42e126
  42e0ec:	and    BYTE PTR [rax],ah
  42e0ee:	rex.WB
  42e0ef:	rex.WRB
  42e0f0:	rex.WRB push r13
  42e0f2:	push   rsp
  42e0f3:	rex.B
  42e0f4:	rex.X
  42e0f5:	rex.WR
  42e0f6:	and    BYTE PTR [r8],r12b
  42e0f9:	push   rbx
  42e0fa:	push   rsp
  42e0fb:	rex.B
  42e0fc:	rex.X
  42e0fd:	rex.WR
  42e0fe:	and    BYTE PTR [r8],r12b
  42e101:	push   rbx
  42e102:	push   rsp
  42e103:	push   rdx
  42e104:	rex.WB
  42e105:	rex.XB push r12
  42e107:	and    BYTE PTR [rax],ah
  42e109:	push   rbx
  42e10a:	rex.RB
  42e10b:	rex.XB push r13
  42e10d:	push   rdx
  42e10e:	rex.WB push r12
  42e110:	pop    rcx
  42e111:	and    BYTE PTR [rbp+rax*2+0x46],al
  42e115:	rex.WB
  42e116:	rex.WRX
  42e117:	rex.RB push r10
  42e119:	or     al,BYTE PTR [rcx+0x53]
  42e11c:	and    BYTE PTR [rsi+riz*2],ah
  42e11f:	jne    0x42e18f
  42e121:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42e125:	outs   dx,BYTE PTR ds:[rsi]
  42e126:	and    al,0xa
  42e128:	or     ah,BYTE PTR [rsi+riz*2]
  42e12b:	jne    0x42e19b
  42e12d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42e131:	outs   dx,BYTE PTR ds:[rsi]
  42e132:	and    al,0xa
  42e134:	add    BYTE PTR [rax],al
  42e136:	add    BYTE PTR [rax],al
  42e138:	jns    0x42e1b1
  42e13a:	std    
  42e13b:	push   QWORD PTR [rdi-0x48000289]
  42e141:	ja     0x42e140
  42e143:	push   QWORD PTR [rdi-0x48000289]
  42e149:	ja     0x42e148
  42e14b:	push   QWORD PTR [rdi-0x48000289]
  42e151:	ja     0x42e150
  42e153:	push   QWORD PTR [rdi-0x48000289]
  42e159:	ja     0x42e158
  42e15b:	push   QWORD PTR [rdi-0x48000289]
  42e161:	ja     0x42e160
  42e163:	push   QWORD PTR [rdi-0x48000289]
  42e169:	ja     0x42e168
  42e16b:	push   QWORD PTR [rdi-0x48000289]
  42e171:	ja     0x42e170
  42e173:	push   QWORD PTR [rdi-0x48000289]
  42e179:	ja     0x42e178
  42e17b:	push   QWORD PTR [rdi-0x48000289]
  42e181:	ja     0x42e180
  42e183:	push   QWORD PTR [rdi-0x48000289]
  42e189:	ja     0x42e188
  42e18b:	push   QWORD PTR [rdi-0x48000289]
  42e191:	ja     0x42e190
  42e193:	push   QWORD PTR [rdi-0x48000289]
  42e199:	ja     0x42e198
  42e19b:	push   QWORD PTR [rdi-0x48000289]
  42e1a1:	ja     0x42e1a0
  42e1a3:	push   QWORD PTR [rdi-0x48000289]
  42e1a9:	ja     0x42e1a8
  42e1ab:	push   QWORD PTR [rdi-0x48000289]
  42e1b1:	ja     0x42e1b0
  42e1b3:	push   QWORD PTR [rdi-0x48000289]
  42e1b9:	ja     0x42e1b8
  42e1bb:	push   QWORD PTR [rdi-0x48000289]
  42e1c1:	ja     0x42e1c0
  42e1c3:	push   QWORD PTR [rdi-0x48000289]
  42e1c9:	ja     0x42e1c8
  42e1cb:	push   QWORD PTR [rdi-0x48000289]
  42e1d1:	ja     0x42e1d0
  42e1d3:	push   QWORD PTR [rdi-0x48000289]
  42e1d9:	ja     0x42e1d8
  42e1db:	push   QWORD PTR [rdi-0x48000289]
  42e1e1:	ja     0x42e1e0
  42e1e3:	(bad)  
  42e1e4:	jns    0x42e25d
  42e1e6:	std    
  42e1e7:	push   QWORD PTR [rdi-0x48000289]
  42e1ed:	ja     0x42e1ec
  42e1ef:	push   QWORD PTR [rdi-0x48000289]
  42e1f5:	ja     0x42e1f4
  42e1f7:	push   QWORD PTR [rdi-0x48000289]
  42e1fd:	ja     0x42e1fc
  42e1ff:	push   QWORD PTR [rdi-0x48000289]
  42e205:	ja     0x42e204
  42e207:	push   QWORD PTR [rdi-0x48000289]
  42e20d:	ja     0x42e20c
  42e20f:	push   QWORD PTR [rdi-0x48000289]
  42e215:	ja     0x42e214
  42e217:	push   QWORD PTR [rdi-0x48000289]
  42e21d:	ja     0x42e21c
  42e21f:	push   QWORD PTR [rdi-0x48000289]
  42e225:	ja     0x42e224
  42e227:	push   QWORD PTR [rdi-0x48000289]
  42e22d:	ja     0x42e22c
  42e22f:	push   QWORD PTR [rdi-0x48000289]
  42e235:	ja     0x42e234
  42e237:	push   QWORD PTR [rdi-0x48000289]
  42e23d:	ja     0x42e23c
  42e23f:	push   QWORD PTR [rdi+0x68fffd77]
  42e245:	ja     0x42e244
  42e247:	call   QWORD PTR [rax+0x77]
  42e24a:	std    
  42e24b:	push   rdx
  42e24d:	jbe    0x42e24c
  42e24f:	dec    ebx
  42e251:	jbe    0x42e250
  42e253:	push   QWORD PTR [rdi-0x48000289]
  42e259:	ja     0x42e258
  42e25b:	push   QWORD PTR [rdi-0x48000289]
  42e261:	ja     0x42e260
  42e263:	push   QWORD PTR [rdi-0x4c000289]
  42e269:	jbe    0x42e268
  42e26b:	push   QWORD PTR [rdi-0x48000289]
  42e271:	ja     0x42e270
  42e273:	call   FWORD PTR [rbx-0x4800028a]
  42e279:	ja     0x42e278
  42e27b:	push   QWORD PTR [rdi-0x48000289]
  42e281:	ja     0x42e280
  42e283:	(bad)  
  42e284:	jns    0x42e2fd
  42e286:	std    
  42e287:	call   QWORD PTR [rip+0xffffffffb7fffd78]        # 0xffffffffb842e005
  42e28d:	ja     0x42e28c
  42e28f:	push   QWORD PTR [rdi-0x48000289]
  42e295:	ja     0x42e294
  42e297:	push   QWORD PTR [rdi-0x48000289]
  42e29d:	ja     0x42e29c
  42e29f:	push   QWORD PTR [rdi-0x48000289]
  42e2a5:	ja     0x42e2a4
  42e2a7:	push   QWORD PTR [rdi-0x48000289]
  42e2ad:	ja     0x42e2ac
  42e2af:	push   QWORD PTR [rdi-0x48000289]
  42e2b5:	ja     0x42e2b4
  42e2b7:	push   QWORD PTR [rdi-0x2000289]
  42e2bd:	ja     0x42e2bc
  42e2bf:	(bad)  
  42e2c0:	in     al,dx
  42e2c1:	ja     0x42e2c0
  42e2c3:	call   rsp
  42e2c5:	ja     0x42e2c4
  42e2c7:	call   FWORD PTR [rax+0x78]
  42e2ca:	std    
  42e2cb:	jmp    FWORD PTR [rip+0xffffffffcafffd78]        # 0xffffffffcb42e049
  42e2d1:	js     0x42e2d0
  42e2d3:	(bad)  
  42e2d4:	jmp    0x42e34b
  42e2d6:	std    
  42e2d7:	push   QWORD PTR [rdi-0xd000289]
  42e2dd:	jbe    0x42e2dc
  42e2df:	push   QWORD PTR [rdi-0x48000289]
  42e2e5:	ja     0x42e2e4
  42e2e7:	push   QWORD PTR [rsi]
  42e2e9:	jbe    0x42e2e8
  42e2eb:	push   rdx
  42e2ed:	jbe    0x42e2ec
  42e2ef:	call   FWORD PTR [rsi]
  42e2f1:	jbe    0x42e2f0
  42e2f3:	inc    DWORD PTR [rax+0x76]
  42e2f6:	std    
  42e2f7:	call   QWORD PTR [rcx]
  42e2f9:	jbe    0x42e2f8
  42e2fb:	push   QWORD PTR [rdi-0x6000289]
  42e301:	jne    0x42e300
  42e303:	push   rdx
  42e305:	jbe    0x42e304
  42e307:	push   rdx
  42e309:	jbe    0x42e308
  42e30b:	(bad)  
  42e30c:	jmp    0x42e383
  42e30e:	std    
  42e30f:	push   rdx
  42e311:	jbe    0x42e310
  42e313:	push   QWORD PTR [rdi-0x78000289]
  42e319:	jne    0x42e318
  42e31b:	dec    DWORD PTR [rdx+0xfffd76]
	...
  42e33d:	add    BYTE PTR [rax],al
  42e33f:	add    dl,al
  42e341:	(bad)  
  42e342:	rex.X add BYTE PTR [rax],al
  42e345:	add    BYTE PTR [rax],al
  42e347:	add    BYTE PTR [rcx-0x2a],bl
  42e34a:	rex.X add BYTE PTR [rax],al
  42e34d:	add    BYTE PTR [rax],al
  42e34f:	add    bl,cl
  42e351:	(bad)  
  42e352:	rex.X add BYTE PTR [rax],al
  42e355:	add    BYTE PTR [rax],al
  42e357:	add    ch,dh
  42e359:	(bad)  
  42e35a:	rex.X add BYTE PTR [rax],al
  42e35d:	add    BYTE PTR [rax],al
  42e35f:	add    dh,bh
  42e361:	(bad)  
  42e362:	rex.X add BYTE PTR [rax],al
  42e365:	add    BYTE PTR [rax],al
  42e367:	add    BYTE PTR [rdx-0x2a],dl
  42e36a:	rex.X add BYTE PTR [rax],al
  42e36d:	add    BYTE PTR [rax],al
  42e36f:	add    BYTE PTR [rip+0x42d5],dl        # 0x43264a
  42e375:	add    BYTE PTR [rax],al
  42e377:	add    BYTE PTR [rsi+0x42d7],bl
  42e37d:	add    BYTE PTR [rax],al
  42e37f:	add    al,dh
  42e381:	(bad)  
  42e382:	rex.X add BYTE PTR [rax],al
  42e385:	add    BYTE PTR [rax],al
  42e387:	add    dl,ah
  42e389:	(bad)  
  42e38a:	rex.X add BYTE PTR [rax],al
  42e38d:	add    BYTE PTR [rax],al
  42e38f:	add    BYTE PTR [rbp-0x2a],al
  42e392:	rex.X add BYTE PTR [rax],al
  42e395:	add    BYTE PTR [rax],al
  42e397:	add    BYTE PTR [rsi+rdx*8],cl
  42e39a:	rex.X add BYTE PTR [rax],al
  42e39d:	add    BYTE PTR [rax],al
  42e39f:	add    BYTE PTR [rsi],dl
  42e3a1:	(bad)  
  42e3a2:	rex.X add BYTE PTR [rax],al
  42e3a5:	add    BYTE PTR [rax],al
  42e3a7:	add    BYTE PTR [rbx],bh
  42e3a9:	(bad)  
  42e3aa:	rex.X add BYTE PTR [rax],al
  42e3ad:	add    BYTE PTR [rax],al
  42e3af:	add    BYTE PTR [rbx],dh
  42e3b1:	(bad)  
  42e3b2:	rex.X add BYTE PTR [rax],al
  42e3b5:	add    BYTE PTR [rax],al
  42e3b7:	add    BYTE PTR [rdi],ah
  42e3b9:	(bad)  
  42e3ba:	rex.X add BYTE PTR [rax],al
	...
  42e3fd:	add    BYTE PTR [rax],al
  42e3ff:	add    BYTE PTR [rax+rsi*2],bh
  42e402:	add    BYTE PTR ds:[rdi+rbp*1],bh
  42e406:	jo     0x42e446
  42e408:	or     al,BYTE PTR [rax]
  42e40a:	and    eax,0x25000a73
  42e40f:	jne    0x42e411
  42e411:	rex.WR
  42e412:	push   r11
  42e414:	push   rsp
  42e415:	rex.WRXB
  42e416:	rex.WB
  42e417:	add    BYTE PTR [rbx+0x61],r8b
  42e41b:	outs   dx,BYTE PTR ds:[rsi]
  42e41c:	movsxd esp,DWORD PTR [rbp+0x6c]
  42e41f:	and    BYTE PTR [rdx+0x65],dh
  42e422:	jno    0x42e499
  42e424:	gs jae 0x42e49b
  42e427:	and    BYTE PTR [rbx+0x65],dh
  42e42a:	outs   dx,BYTE PTR ds:[rsi]
  42e42b:	je     0x42e437
  42e42d:	add    BYTE PTR [rax],al
  42e42f:	add    BYTE PTR [rbx+0x6f],al
  42e432:	jne    0x42e4a0
  42e434:	and    BYTE PTR fs:[rsi+0x6f],ch
  42e438:	je     0x42e45a
  42e43a:	jae    0x42e4a1
  42e43c:	outs   dx,BYTE PTR ds:[rsi]
  42e43d:	and    BYTE PTR fs:[rbx+0x61],ah
  42e441:	outs   dx,BYTE PTR ds:[rsi]
  42e442:	movsxd esp,DWORD PTR [rbp+0x6c]
  42e445:	and    BYTE PTR [rdx+0x65],dh
  42e448:	jno    0x42e4bf
  42e44a:	gs jae 0x42e4c1
  42e44d:	cmp    ah,BYTE PTR [rax]
  42e44f:	add    BYTE PTR [rip+0x73253a73],ah        # 0x73681ec8
  42e455:	cmp    ah,BYTE PTR [rip+0x3a756c6c]        # 0x3ab850c7
  42e45b:	and    BYTE PTR [rax],al
  42e45d:	ja     0x42e45f
  42e45f:	and    eax,0x25203a73
  42e464:	jae    0x42e470
  42e466:	add    BYTE PTR [rsi+0x6f],ch
  42e469:	and    BYTE PTR [rdx+0x6f],dh
  42e46c:	ja     0x42e4e1
  42e46e:	and    BYTE PTR [rdx+0x65],dh
  42e471:	je     0x42e4e8
  42e473:	jb     0x42e4e3
  42e475:	gs and BYTE PTR fs:[rsi+0x6f],ah
  42e47a:	jb     0x42e49c
  42e47c:	pop    rsp
  42e47d:	addr32 jae 0x42e4e5
  42e480:	je     0x42e48c
  42e482:	add    BYTE PTR [rip+0x732573],ah        # 0xb609fb
  42e488:	movsxd ebp,DWORD PTR [rdi+0x75]
  42e48b:	ins    BYTE PTR es:[rdi],dx
  42e48c:	and    BYTE PTR fs:[rsi+0x6f],ch
  42e490:	je     0x42e4b2
  42e492:	jae    0x42e4f9
  42e494:	je     0x42e4b6
  42e496:	jbe    0x42e4f9
  42e498:	jb     0x42e503
  42e49a:	(bad)  
  42e49b:	(bad)  
  42e49c:	ins    BYTE PTR es:[rdi],dx
  42e49d:	and    BYTE PTR gs:[rdx],ah
  42e4a0:	and    eax,0xa2273
  42e4a5:	add    BYTE PTR [rax],al
  42e4a7:	add    BYTE PTR [rbp+0x6f],ch
  42e4aa:	jb     0x42e511
  42e4ac:	and    BYTE PTR [rax+rbp*2+0x61],dh
  42e4b0:	outs   dx,BYTE PTR ds:[rsi]
  42e4b1:	and    BYTE PTR [rdi+0x6e],ch
  42e4b4:	and    BYTE PTR gs:[rdx+0x6f],dh
  42e4b8:	ja     0x42e4da
  42e4ba:	jb     0x42e521
  42e4bc:	je     0x42e533
  42e4be:	jb     0x42e52e
  42e4c0:	gs and BYTE PTR fs:[rsi+0x6f],ah
  42e4c5:	jb     0x42e4e7
  42e4c7:	pop    rsp
  42e4c8:	addr32 jae 0x42e530
  42e4cb:	je     0x42e4d7
  42e4cd:	add    BYTE PTR [rip+0x73],ah        # 0x42e546
  42e4d3:	add    BYTE PTR [rax],al
  42e4d5:	add    BYTE PTR [rax],al
  42e4d7:	add    BYTE PTR [rbx+0x6f],ah
  42e4da:	outs   dx,BYTE PTR ds:[rsi]
  42e4db:	outs   dx,BYTE PTR ds:[rsi]
  42e4dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42e4e1:	outs   dx,BYTE PTR ds:[rsi]
  42e4e2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e4e6:	jae    0x42e54d
  42e4e8:	jb     0x42e560
  42e4ea:	gs jb  0x42e50d
  42e4ed:	ja     0x42e550
  42e4ef:	jae    0x42e511
  42e4f1:	ins    BYTE PTR es:[rdi],dx
  42e4f2:	outs   dx,DWORD PTR ds:[rsi]
  42e4f3:	jae    0x42e569
  42e4f5:	or     al,BYTE PTR [rax]
  42e4f7:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42e4fb:	and    BYTE PTR [rbx+0x6f],ah
  42e4fe:	outs   dx,BYTE PTR ds:[rsi]
  42e4ff:	outs   dx,BYTE PTR ds:[rsi]
  42e500:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42e505:	outs   dx,BYTE PTR ds:[rsi]
  42e506:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e50a:	je     0x42e574
  42e50c:	and    BYTE PTR gs:[rbx+0x65],dh
  42e510:	jb     0x42e588
  42e512:	gs jb  0x42e535
  42e515:	ja     0x42e578
  42e517:	jae    0x42e539
  42e519:	ins    BYTE PTR es:[rdi],dx
  42e51a:	outs   dx,DWORD PTR ds:[rsi]
  42e51b:	jae    0x42e591
  42e51d:	and    BYTE PTR cs:[rcx+0x74],al
  42e521:	je     0x42e588
  42e523:	ins    DWORD PTR es:[rdi],dx
  42e524:	jo     0x42e59a
  42e526:	imul   ebp,DWORD PTR [rsi+0x67],0x73657220
  42e52d:	gs je  0x42e56a
  42e530:	and    BYTE PTR [rax],al
  42e532:	rex.RX (bad) 
  42e534:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x53000a2e
  42e53c:	jne    0x42e5a1
  42e53e:	movsxd esp,DWORD PTR [rbp+0x65]
  42e541:	fs gs fs or al,BYTE PTR cs:[rax]
  42e547:	add    BYTE PTR [rbp+0x6e],dh
  42e54a:	gs js  0x42e5bd
  42e54d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42e552:	and    BYTE PTR [rax+0x51],dl
  42e555:	jb     0x42e5bc
  42e557:	jae    0x42e5ce
  42e559:	ins    BYTE PTR es:[rdi],dx
  42e55a:	je     0x42e5af
  42e55c:	je     0x42e5bf
  42e55e:	je     0x42e5d5
  42e560:	jae    0x42e59c
  42e562:	and    BYTE PTR [rip+0xa64],ah        # 0x42efcc
  42e568:	pop    rcx
  42e569:	outs   dx,DWORD PTR ds:[rsi]
  42e56a:	jne    0x42e58c
  42e56c:	(bad)  
  42e56d:	jb     0x42e5d4
  42e56f:	and    BYTE PTR [rbx+0x75],ah
  42e572:	jb     0x42e5e6
  42e574:	outs   dx,BYTE PTR gs:[rsi]
  42e576:	je     0x42e5e4
  42e578:	jns    0x42e59a
  42e57a:	outs   dx,BYTE PTR ds:[rsi]
  42e57b:	outs   dx,DWORD PTR ds:[rsi]
  42e57c:	je     0x42e59e
  42e57e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42e581:	outs   dx,BYTE PTR ds:[rsi]
  42e582:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42e587:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e58b:	(bad)  
  42e58c:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42e590:	(bad)  
  42e591:	(bad)  
  42e593:	jae    0x42e5fa
  42e595:	or     al,BYTE PTR cs:[rax]
  42e598:	sub    ch,BYTE PTR [rdx]
  42e59a:	sub    ch,BYTE PTR [rdx]
  42e59c:	sub    ch,BYTE PTR [rdx]
  42e59e:	sub    ch,BYTE PTR [rdx]
  42e5a0:	sub    ah,BYTE PTR [rax]
  42e5a2:	push   rcx
  42e5a3:	push   rbp
  42e5a4:	rex.RB push r10
  42e5a6:	pop    rcx
  42e5a7:	and    BYTE PTR [rdx],ch
  42e5a9:	sub    ch,BYTE PTR [rdx]
  42e5ab:	sub    ch,BYTE PTR [rdx]
  42e5ad:	sub    ch,BYTE PTR [rdx]
  42e5af:	sub    ch,BYTE PTR [rdx]
  42e5b1:	sub    cl,BYTE PTR [rdx]
  42e5b3:	and    eax,0x2a2a0a73
  42e5b8:	sub    ch,BYTE PTR [rdx]
  42e5ba:	sub    ch,BYTE PTR [rdx]
  42e5bc:	sub    ch,BYTE PTR [rdx]
  42e5be:	sub    ch,BYTE PTR [rdx]
  42e5c0:	sub    ch,BYTE PTR [rdx]
  42e5c2:	sub    ch,BYTE PTR [rdx]
  42e5c4:	sub    ch,BYTE PTR [rdx]
  42e5c6:	sub    ch,BYTE PTR [rdx]
  42e5c8:	sub    ch,BYTE PTR [rdx]
  42e5ca:	sub    ch,BYTE PTR [rdx]
  42e5cc:	sub    ch,BYTE PTR [rdx]
  42e5ce:	sub    ch,BYTE PTR [rdx]
  42e5d0:	or     cl,BYTE PTR [rdx]
  42e5d2:	add    BYTE PTR [rdx+0x45],al
  42e5d5:	rex.RXB
  42e5d6:	rex.WB
  42e5d7:	rex.WRX add BYTE PTR [rbx+0x4f],r8b
  42e5db:	rex.WRB
  42e5dc:	rex.WRB
  42e5dd:	rex.WB push r12
  42e5df:	add    BYTE PTR [rdx+0x4f],dl
  42e5e2:	rex.WR
  42e5e3:	rex.WR
  42e5e4:	rex.X
  42e5e5:	rex.B
  42e5e6:	rex.XB
  42e5e7:	rex.WXB add BYTE PTR [r8],al
  42e5ea:	add    BYTE PTR [rax],al
  42e5ec:	add    BYTE PTR [rax],al
  42e5ee:	add    BYTE PTR [rax],al
  42e5f0:	push   rdx
  42e5f1:	rex.RB
  42e5f2:	rex.WR
  42e5f3:	rex.RB
  42e5f4:	push   r11
  42e5f6:	and    BYTE PTR [r8+0x67],r14b
  42e5fa:	pop    rdi
  42e5fb:	jo     0x42e670
  42e5fd:	jno    0x42e66b
  42e5ff:	pop    rdi
  42e600:	je     0x42e667
  42e602:	ins    DWORD PTR es:[rdi],dx
  42e603:	jo     0x42e674
  42e605:	jb     0x42e668
  42e607:	jb     0x42e682
  42e609:	pop    rdi
  42e60a:	jae    0x42e66d
  42e60c:	jbe    0x42e673
  42e60e:	jo     0x42e67f
  42e610:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  42e617:	add    BYTE PTR [rdx+0x4f],dl
  42e61a:	rex.WR
  42e61b:	rex.WR
  42e61c:	rex.X
  42e61d:	rex.B
  42e61e:	rex.XB
  42e61f:	rex.WXB and BYTE PTR [r15+r9*2+0x20],dl
  42e624:	jo     0x42e68d
  42e626:	pop    rdi
  42e627:	jo     0x42e69c
  42e629:	jno    0x42e697
  42e62b:	pop    rdi
  42e62c:	je     0x42e693
  42e62e:	ins    DWORD PTR es:[rdi],dx
  42e62f:	jo     0x42e6a0
  42e631:	jb     0x42e694
  42e633:	jb     0x42e6ae
  42e635:	pop    rdi
  42e636:	jae    0x42e699
  42e638:	jbe    0x42e69f
  42e63a:	jo     0x42e6ab
  42e63c:	imul   ebp,DWORD PTR [rsi+0x74],0x2a2a2a00
  42e643:	sub    BYTE PTR [rbx+0x69],dl
  42e646:	outs   dx,BYTE PTR ds:[rsi]
  42e647:	ins    BYTE PTR es:[edi],dx
  42e649:	and    BYTE PTR gs:[rbx+0x74],dh
  42e64d:	gs jo  0x42e670
  42e650:	ins    DWORD PTR es:[rdi],dx
  42e651:	outs   dx,DWORD PTR ds:[rsi]
  42e652:	fs cmp ah,BYTE PTR gs:[rax]
  42e656:	jbe    0x42e6bd
  42e658:	jb     0x42e6c3
  42e65a:	data16 jns 0x42e67d
  42e65d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42e660:	ins    DWORD PTR es:[rdi],dx
  42e661:	(bad)  
  42e662:	outs   dx,BYTE PTR ds:[rsi]
  42e663:	sub    DWORD PTR fs:[rdx],ebp
  42e666:	sub    ch,BYTE PTR [rdx]
  42e668:	sub    ch,BYTE PTR [rdx]
  42e66a:	sub    ch,BYTE PTR [rdx]
  42e66c:	sub    ch,BYTE PTR [rdx]
  42e66e:	sub    ch,BYTE PTR [rdx]
  42e670:	sub    ch,BYTE PTR [rdx]
  42e672:	sub    ch,BYTE PTR [rdx]
  42e674:	sub    ch,BYTE PTR [rdx]
  42e676:	sub    ch,BYTE PTR [rdx]
  42e678:	sub    ch,BYTE PTR [rdx]
  42e67a:	sub    ch,BYTE PTR [rdx]
  42e67c:	sub    ch,BYTE PTR [rdx]
  42e67e:	sub    ch,BYTE PTR [rdx]
  42e680:	sub    ch,BYTE PTR [rdx]
  42e682:	sub    ch,BYTE PTR [rdx]
  42e684:	sub    ch,BYTE PTR [rdx]
  42e686:	sub    ch,BYTE PTR [rdx]
  42e688:	sub    ch,BYTE PTR [rdx]
  42e68a:	sub    ch,BYTE PTR [rdx]
  42e68c:	sub    ch,BYTE PTR [rdx]
  42e68e:	sub    ch,BYTE PTR [rdx]
  42e690:	or     ah,BYTE PTR [rip+0x2a2a0a73]        # 0x2a6cf109
  42e696:	sub    ch,BYTE PTR [rax]
  42e698:	jo     0x42e70c
  42e69a:	gs jae 0x42e710
  42e69d:	and    BYTE PTR [rdx+0x65],dh
  42e6a0:	je     0x42e717
  42e6a2:	jb     0x42e712
  42e6a4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e6a8:	jo     0x42e71c
  42e6aa:	outs   dx,DWORD PTR ds:[rsi]
  42e6ab:	movsxd esp,DWORD PTR [rbp+0x65]
  42e6ae:	and    BYTE PTR fs:[rdi+0x72],ch
  42e6b2:	and    BYTE PTR [rbp+0x6e],ah
  42e6b5:	je     0x42e71c
  42e6b7:	jb     0x42e6d9
  42e6b9:	js     0x42e6db
  42e6bb:	(bad)  
  42e6bc:	outs   dx,BYTE PTR ds:[rsi]
  42e6bd:	and    BYTE PTR fs:[rdx+0x65],dh
  42e6c1:	je     0x42e738
  42e6c3:	jb     0x42e733
  42e6c5:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42e6c9:	movsxd esp,DWORD PTR [rcx+0x6e]
  42e6cc:	movsxd esp,DWORD PTR [rbp+0x6c]
  42e6cf:	sub    DWORD PTR [rdx],ebp
  42e6d1:	sub    ch,BYTE PTR [rdx]
  42e6d3:	sub    ch,BYTE PTR [rdx]
  42e6d5:	sub    ch,BYTE PTR [rdx]
  42e6d7:	sub    ch,BYTE PTR [rdx]
  42e6d9:	sub    ch,BYTE PTR [rdx]
  42e6db:	sub    ch,BYTE PTR [rdx]
  42e6dd:	sub    ch,BYTE PTR [rdx]
  42e6df:	sub    ch,BYTE PTR [rdx]
  42e6e1:	sub    ch,BYTE PTR [rdx]
  42e6e3:	sub    cl,BYTE PTR [rdx]
  42e6e5:	add    BYTE PTR [rcx+0x62],ah
  42e6e8:	outs   dx,DWORD PTR ds:[rsi]
  42e6e9:	jb     0x42e75f
  42e6eb:	add    BYTE PTR [rbx+0x6f],ah
  42e6ee:	ins    DWORD PTR es:[rdi],dx
  42e6ef:	ins    DWORD PTR es:[rdi],dx
  42e6f0:	imul   esi,DWORD PTR [rax+rax*1+0x65],0x7200646e
  42e6f8:	outs   dx,DWORD PTR ds:[rsi]
  42e6f9:	ins    BYTE PTR es:[rdi],dx
  42e6fa:	ins    BYTE PTR es:[rdi],dx
  42e6fb:	(bad)  
  42e6fd:	movsxd ebp,DWORD PTR [rbx+0x0]
  42e700:	jo     0x42e774
  42e702:	gs jo  0x42e766
  42e705:	jb     0x42e76c
  42e707:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  42e70b:	outs   dx,BYTE PTR ds:[rsi]
  42e70c:	jae    0x42e76f
  42e70e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42e712:	outs   dx,BYTE PTR ds:[rsi]
  42e713:	add    BYTE PTR [rsi+0x61],dh
  42e716:	movsxd esi,DWORD PTR [rbp+0x75]
  42e719:	ins    DWORD PTR es:[rdi],dx
  42e71a:	add    BYTE PTR [rcx+riz*2+0x74],ah
  42e71e:	(bad)  
  42e71f:	(bad)  
  42e721:	jae    0x42e788
  42e723:	add    BYTE PTR [rcx+riz*2+0x62],dh
  42e727:	ins    BYTE PTR es:[rdi],dx
  42e728:	gs jae 0x42e79b
  42e72b:	(bad)  
  42e72c:	movsxd esp,DWORD PTR [rbp+0x0]
  42e72f:	jne    0x42e79f
  42e731:	imul   esi,DWORD PTR [rcx+0x75],0x6e690065
  42e738:	fs gs js 0x42e73c
  42e73c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42e73f:	movsxd esi,DWORD PTR [rbp+0x72]
  42e742:	jb     0x42e7a9
  42e744:	outs   dx,BYTE PTR ds:[rsi]
  42e745:	je     0x42e7b3
  42e747:	jns    0x42e749
  42e749:	(bad)  
  42e74a:	ins    BYTE PTR es:[rdi],dx
  42e74b:	je     0x42e7b2
  42e74d:	jb     0x42e74f
  42e74f:	jae    0x42e7ca
  42e751:	jae    0x42e7c7
  42e753:	gs ins DWORD PTR es:[rdi],dx
  42e755:	add    BYTE PTR [rdx+rsi*2+0x6f],ah
  42e759:	jo     0x42e75b
  42e75b:	jb     0x42e7c2
  42e75d:	imul   ebp,DWORD PTR [rsi+0x64],0x61007865
  42e764:	ins    BYTE PTR es:[rdi],dx
  42e765:	ins    BYTE PTR es:[rdi],dx
  42e766:	add    BYTE PTR [rax],al
  42e768:	push   rsp
  42e769:	push   0x65732065
  42e76e:	jb     0x42e7e6
  42e770:	gs jb  0x42e793
  42e773:	sub    BYTE PTR [rsi+0x65],dh
  42e776:	jb     0x42e7eb
  42e778:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42e77f:	and    eax,0x64202964
  42e784:	outs   dx,DWORD PTR ds:[rsi]
  42e785:	gs jae 0x42e7a8
  42e788:	outs   dx,BYTE PTR ds:[rsi]
  42e789:	outs   dx,DWORD PTR ds:[rsi]
  42e78a:	je     0x42e7ac
  42e78c:	jae    0x42e803
  42e78e:	jo     0x42e800
  42e790:	outs   dx,DWORD PTR ds:[rsi]
  42e791:	jb     0x42e807
  42e793:	and    BYTE PTR [rbx+0x61],dh
  42e796:	jbe    0x42e7fd
  42e798:	jo     0x42e809
  42e79a:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  42e7a1:	jb     0x42e7c3
  42e7a3:	rex.WRXB
  42e7a4:	rex.WRX pop rdi
  42e7a6:	rex.RB push r10
  42e7a8:	push   rdx
  42e7a9:	rex.WRXB push r10
  42e7ab:	pop    rdi
  42e7ac:	push   rdx
  42e7ad:	rex.WRXB
  42e7ae:	rex.WR
  42e7af:	rex.WR
  42e7b0:	rex.X
  42e7b1:	rex.B
  42e7b2:	rex.XB
  42e7b3:	rex.WXB
  42e7b4:	or     al,BYTE PTR cs:[rax]
  42e7b7:	add    BYTE PTR [rbx+0x41],dl
  42e7ba:	push   rsi
  42e7bb:	rex.RB push r8
  42e7bd:	rex.WRXB
  42e7be:	rex.WB
  42e7bf:	rex.WRX push rsp
  42e7c1:	and    BYTE PTR [rax+0x67],dh
  42e7c4:	pop    rdi
  42e7c5:	jo     0x42e83a
  42e7c7:	jno    0x42e835
  42e7c9:	pop    rdi
  42e7ca:	je     0x42e831
  42e7cc:	ins    DWORD PTR es:[rdi],dx
  42e7cd:	jo     0x42e83e
  42e7cf:	jb     0x42e832
  42e7d1:	jb     0x42e84c
  42e7d3:	pop    rdi
  42e7d4:	jae    0x42e837
  42e7d6:	jbe    0x42e83d
  42e7d8:	jo     0x42e849
  42e7da:	imul   ebp,DWORD PTR [rsi+0x74],0x6c657300
  42e7e1:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x49]
  42e7e6:	rex.WRX push rbx
  42e7e8:	rex.RB push r10
  42e7ea:	push   rsp
  42e7eb:	add    BYTE PTR [rbp+0x50],dl
  42e7ee:	rex.R
  42e7ef:	push   r12
  42e7f1:	add    BYTE PTR [r13+rax*2+0x4c],r8b
  42e7f6:	rex.RB push r12
  42e7f8:	add    BYTE PTR [r8],r8b
  42e7fb:	add    BYTE PTR [rax],al
  42e7fd:	add    BYTE PTR [rax],al
  42e7ff:	add    BYTE PTR [rbp+rax*2+0x43],al
  42e803:	rex.WR
  42e804:	push   r10
  42e806:	and    BYTE PTR [r15+0x70],r11b
  42e80a:	jae    0x42e87d
  42e80c:	ins    BYTE PTR es:[rdi],dx
  42e80d:	pop    rdi
  42e80e:	movsxd esi,DWORD PTR [rbp+0x72]
  42e811:	jae    0x42e882
  42e813:	jb     0x42e835
  42e815:	rex.WRX
  42e816:	rex.WRXB and BYTE PTR [r11+0x43],r10b
  42e81a:	push   rdx
  42e81b:	rex.WRXB
  42e81c:	rex.WR
  42e81d:	rex.WR and BYTE PTR [rbx+0x55],r8b
  42e821:	push   rdx
  42e822:	push   rbx
  42e823:	rex.WRXB push r10
  42e825:	and    BYTE PTR [rsi+0x4f],al
  42e828:	push   rdx
  42e829:	or     ah,BYTE PTR [rip+0x73]        # 0x42e8a2
  42e82f:	add    BYTE PTR [rsi+0x45],al
  42e832:	push   rsp
  42e833:	rex.XB
  42e834:	rex.W and BYTE PTR [rsi+0x4f],al
  42e838:	push   rdx
  42e839:	push   rdi
  42e83a:	push   r10
  42e83c:	and    BYTE PTR [rip+0x52462064],r12b        # 0x528908a7
  42e843:	rex.WRXB
  42e844:	rex.WRB and BYTE PTR [r15+0x70],r11b
  42e848:	jae    0x42e8bb
  42e84a:	ins    BYTE PTR es:[rdi],dx
  42e84b:	pop    rdi
  42e84c:	movsxd esi,DWORD PTR [rbp+0x72]
  42e84f:	jae    0x42e8c0
  42e851:	jb     0x42e853
  42e853:	rex.XB
  42e854:	rex.WR
  42e855:	rex.WRXB push r11
  42e857:	and    BYTE PTR [r15+0x70],r11b
  42e85b:	jae    0x42e8ce
  42e85d:	ins    BYTE PTR es:[rdi],dx
  42e85e:	pop    rdi
  42e85f:	movsxd esi,DWORD PTR [rbp+0x72]
  42e862:	jae    0x42e8d3
  42e864:	jb     0x42e866
  42e866:	push   rbx
  42e867:	push   r14
  42e869:	rex.RB push r8
  42e86b:	rex.WRXB
  42e86c:	rex.WB
  42e86d:	rex.WRX push rsp
  42e86f:	add    BYTE PTR [rdx+0x45],dl
  42e872:	rex.WR
  42e873:	rex.RB
  42e874:	push   r11
  42e876:	add    BYTE PTR [r13+0x6e],r14b
  42e87a:	gs js  0x42e8ed
  42e87d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42e882:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  42e886:	outs   dx,BYTE PTR ds:[rsi]
  42e887:	jae    0x42e8ea
  42e889:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42e88d:	outs   dx,BYTE PTR ds:[rsi]
  42e88e:	and    BYTE PTR [rbx+0x74],dh
  42e891:	(bad)  
  42e892:	je     0x42e909
  42e894:	jae    0x42e8b6
  42e896:	sub    BYTE PTR [rip+0xa2964],ah        # 0x4d1200
  42e89c:	push   rsp
  42e89d:	imul   ebp,DWORD PTR [rbp+0x65],0x2e25203a
  42e8a4:	xor    esp,DWORD PTR [rsi+0x20]
  42e8a7:	ins    DWORD PTR es:[rdi],dx
  42e8a8:	jae    0x42e8b4
  42e8aa:	add    BYTE PTR [rbp+0x4e],al
  42e8ad:	rex.XB
  42e8ae:	rex.WRXB
  42e8af:	rex.R
  42e8b0:	rex.WB
  42e8b1:	rex.WRX
  42e8b2:	rex.RXB add BYTE PTR [r8],r8b
  42e8b5:	add    BYTE PTR [rax],al
  42e8b7:	add    BYTE PTR [rcx+0x73],al
  42e8ba:	jns    0x42e92a
  42e8bc:	movsxd ebp,DWORD PTR [rax+0x72]
  42e8bf:	outs   dx,DWORD PTR ds:[rsi]
  42e8c0:	outs   dx,BYTE PTR ds:[rsi]
  42e8c1:	outs   dx,DWORD PTR ds:[rsi]
  42e8c2:	jne    0x42e937
  42e8c4:	and    BYTE PTR [rsi+0x6f],ch
  42e8c7:	je     0x42e932
  42e8c9:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42e8cf:	outs   dx,DWORD PTR ds:[rsi]
  42e8d0:	outs   dx,BYTE PTR ds:[rsi]
  42e8d1:	and    BYTE PTR [rdx],ah
  42e8d3:	and    eax,0x77202273
  42e8d8:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x6c796170
  42e8e0:	outs   dx,DWORD PTR ds:[rsi]
  42e8e1:	(bad)  
  42e8e2:	and    BYTE PTR fs:[rdx],ah
  42e8e5:	and    eax,0x72202273
  42e8ea:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  42e8ee:	jbe    0x42e955
  42e8f0:	and    BYTE PTR fs:[rsi+0x72],ah
  42e8f4:	outs   dx,DWORD PTR ds:[rsi]
  42e8f5:	ins    DWORD PTR es:[rdi],dx
  42e8f6:	and    BYTE PTR [rbx+0x65],dh
  42e8f9:	jb     0x42e971
  42e8fb:	gs jb  0x42e91e
  42e8fe:	jo     0x42e972
  42e900:	outs   dx,DWORD PTR ds:[rsi]
  42e901:	movsxd esp,DWORD PTR [rbp+0x73]
  42e904:	jae    0x42e926
  42e906:	ja     0x42e971
  42e908:	je     0x42e972
  42e90a:	and    BYTE PTR [rax+0x49],dl
  42e90d:	and    BYTE PTR [rip+0xa2e64],r12b        # 0x4d1778
  42e914:	add    BYTE PTR [rax],al
  42e916:	add    BYTE PTR [rax],al
  42e918:	rex.B jae 0x42e994
  42e91b:	outs   dx,BYTE PTR ds:[rsi]
  42e91c:	movsxd ebp,DWORD PTR [rax+0x72]
  42e91f:	outs   dx,DWORD PTR ds:[rsi]
  42e920:	outs   dx,BYTE PTR ds:[rsi]
  42e921:	outs   dx,DWORD PTR ds:[rsi]
  42e922:	jne    0x42e997
  42e924:	and    BYTE PTR [rsi+0x6f],ch
  42e927:	je     0x42e992
  42e929:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42e92f:	outs   dx,DWORD PTR ds:[rsi]
  42e930:	outs   dx,BYTE PTR ds:[rsi]
  42e931:	and    BYTE PTR [rdx],ah
  42e933:	and    eax,0x72202273
  42e938:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  42e93c:	jbe    0x42e9a3
  42e93e:	and    BYTE PTR fs:[rsi+0x72],ah
  42e942:	outs   dx,DWORD PTR ds:[rsi]
  42e943:	ins    DWORD PTR es:[rdi],dx
  42e944:	and    BYTE PTR [rbx+0x65],dh
  42e947:	jb     0x42e9bf
  42e949:	gs jb  0x42e96c
  42e94c:	jo     0x42e9c0
  42e94e:	outs   dx,DWORD PTR ds:[rsi]
  42e94f:	movsxd esp,DWORD PTR [rbp+0x73]
  42e952:	jae    0x42e974
  42e954:	ja     0x42e9bf
  42e956:	je     0x42e9c0
  42e958:	and    BYTE PTR [rax+0x49],dl
  42e95b:	and    BYTE PTR [rip+0xa2e64],r12b        # 0x4d17c6
  42e962:	(bad)  
  42e963:	imul   ebp,DWORD PTR gs:[esi+0x0],0x72617473
  42e96c:	je     0x42e96e
  42e96e:	imul   esi,DWORD PTR fs:[rbx+0x63],0x647261
  42e976:	jbe    0x42e9d9
  42e978:	ins    BYTE PTR es:[rdi],dx
  42e979:	jne    0x42e9e0
  42e97b:	jae    0x42e97d
  42e97d:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x73]
  42e981:	je     0x42e9e8
  42e983:	jb     0x42e985
  42e985:	movsxd esi,DWORD PTR [rdx+0x65]
  42e988:	(bad)  
  42e989:	je     0x42e9f0
  42e98b:	add    BYTE PTR [rsi],bl
  42e98d:	cmp    ebp,0xffffffff
  42e990:	sub    DWORD PTR [rbx-0x7cc30003],eax
  42e996:	std    
  42e997:	call   FWORD PTR [rsi]
  42e999:	cmp    ebp,0xffffffff
  42e99c:	(bad)  
  42e99d:	cmp    ebp,0xffffffff
  42e9a0:	mov    bl,0x81
  42e9a2:	std    
  42e9a3:	push   QWORD PTR [rbx-0x4c00027f]
  42e9a9:	cmp    ebp,0x5f7369ff
  42e9af:	jae    0x42ea26
  42e9b1:	jo     0x42ea18
  42e9b3:	jb     0x42ea2a
  42e9b5:	jae    0x42ea1c
  42e9b7:	jb     0x42e9b9
  42e9b9:	outs   dx,DWORD PTR ds:[rsi]
  42e9ba:	outs   dx,BYTE PTR ds:[rsi]
  42e9bb:	add    BYTE PTR [rbx+0x74],dh
  42e9be:	(bad)  
  42e9bf:	outs   dx,BYTE PTR ds:[rsi]
  42e9c0:	fs (bad) 
  42e9c2:	jb     0x42ea28
  42e9c4:	pop    rdi
  42e9c5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42e9c8:	outs   dx,WORD PTR ds:[rsi]
  42e9ca:	jb     0x42ea39
  42e9cc:	imul   ebp,DWORD PTR [rsi+0x67],0x7274735f
  42e9d3:	imul   ebp,DWORD PTR [rsi+0x67],0x65730073
  42e9da:	jae    0x42ea4f
  42e9dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x7475615f
  42e9e3:	push   0x7a69726f
  42e9e8:	(bad)  
  42e9e9:	je     0x42ea54
  42e9eb:	outs   dx,DWORD PTR ds:[rsi]
  42e9ec:	outs   dx,BYTE PTR ds:[rsi]
	...
  42e9fd:	rex pop QWORD PTR [rax+0x6c]
  42ea01:	outs   dx,DWORD PTR ds:[rsi]
  42ea02:	movsxd esp,DWORD PTR [rcx+0x6c]
  42ea05:	and    BYTE PTR [rbx+0x6f],dh
  42ea08:	movsxd ebp,DWORD PTR [rbx+0x65]
  42ea0b:	je     0x42ea0d
  42ea0d:	xor    eax,0x323334
  42ea12:	push   rax
  42ea13:	rex.RXB push r13
  42ea15:	push   rbx
  42ea16:	rex.RB push r10
  42ea18:	add    BYTE PTR [rip+0xa73],ah        # 0x42f491
  42ea1e:	add    BYTE PTR [rax],al
  42ea20:	jo     0x42ea95
  42ea22:	jno    0x42ea90
  42ea24:	and    BYTE PTR [rcx+0x73],ch
  42ea27:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42ea2b:	and    BYTE PTR [rax+0x6f],dl
  42ea2e:	jae    0x42eaa4
  42ea30:	addr32 jb 0x42ea98
  42ea33:	push   rbx
  42ea34:	push   rcx
  42ea35:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  42ea39:	je     0x42eaa0
  42ea3b:	jb     0x42ea9e
  42ea3d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  42ea41:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  42ea46:	ins    DWORD PTR es:[rdi],dx
  42ea47:	imul   ebp,DWORD PTR [rsi+0x61],0xa0a2e6c
  42ea4e:	add    BYTE PTR [rbp+0x73],dl
  42ea51:	(bad)  
  42ea52:	cmp    cl,BYTE PTR gs:[edx]
  42ea56:	add    BYTE PTR [rax],al
  42ea58:	and    BYTE PTR [rax],ah
  42ea5a:	jo     0x42eacf
  42ea5c:	jno    0x42eaca
  42ea5e:	and    BYTE PTR [rbx+0x4f],bl
  42ea61:	push   rax
  42ea62:	push   rsp
  42ea63:	rex.WB
  42ea64:	rex.WRXB
  42ea65:	rex.WRX pop rbp
  42ea67:	cs cs and BYTE PTR cs:[rbx+0x44],bl
  42ea6d:	rex.X
  42ea6e:	rex.WRX
  42ea6f:	rex.B
  42ea70:	rex.WRB
  42ea71:	and    BYTE PTR [r11+0x55],r11b
  42ea75:	push   rbx
  42ea76:	rex.RB push r10
  42ea78:	rex.WRX
  42ea79:	rex.B
  42ea7a:	rex.WRB
  42ea7b:	rex.RB pop r13
  42ea7d:	pop    rbp
  42ea7e:	or     cl,BYTE PTR [rdx]
  42ea80:	add    BYTE PTR [rdi+0x65],al
  42ea83:	outs   dx,BYTE PTR ds:[rsi]
  42ea84:	gs jb  0x42eae8
  42ea87:	ins    BYTE PTR es:[rdi],dx
  42ea88:	and    BYTE PTR [rdi+0x70],ch
  42ea8b:	je     0x42eaf6
  42ea8d:	outs   dx,DWORD PTR ds:[rsi]
  42ea8e:	outs   dx,BYTE PTR ds:[rsi]
  42ea8f:	jae    0x42eacb
  42ea91:	or     al,BYTE PTR [rax]
  42ea93:	push   rax
  42ea94:	rex.RXB
  42ea95:	rex.R
  42ea96:	push   r12
  42ea98:	rex.B
  42ea99:	rex.X
  42ea9a:	push   r11
  42ea9c:	add    BYTE PTR [r8],r8b
  42ea9f:	add    BYTE PTR [rax],ah
  42eaa1:	and    BYTE PTR [rip+0x2d202c63],ch        # 0x2d63170a
  42eaa7:	sub    eax,0x6d6d6f63
  42eaac:	(bad)  
  42eaad:	outs   dx,BYTE PTR ds:[rsi]
  42eaae:	fs cmp eax,0x4d4d4f43
  42eab4:	rex.B
  42eab5:	rex.WRX
  42eab6:	and    BYTE PTR [rax],r12b
  42eab9:	and    BYTE PTR [rax],ah
  42eabb:	jb     0x42eb32
  42eabd:	outs   dx,BYTE PTR ds:[rsi]
  42eabe:	and    BYTE PTR [rdi+0x6e],ch
  42eac1:	ins    BYTE PTR es:[rdi],dx
  42eac2:	jns    0x42eae4
  42eac4:	jae    0x42eb2f
  42eac6:	outs   dx,BYTE PTR ds:[rsi]
  42eac7:	ins    BYTE PTR es:[edi],dx
  42eac9:	and    BYTE PTR gs:[rbx+0x6f],ah
  42eacd:	ins    DWORD PTR es:[rdi],dx
  42eace:	ins    DWORD PTR es:[rdi],dx
  42eacf:	(bad)  
  42ead0:	outs   dx,BYTE PTR ds:[rsi]
  42ead1:	and    BYTE PTR fs:[rax],ch
  42ead4:	push   rbx
  42ead5:	push   rcx
  42ead6:	rex.WR and BYTE PTR [rdi+0x72],r13b
  42eada:	and    BYTE PTR [rcx+0x6e],ch
  42eadd:	je     0x42eb44
  42eadf:	jb     0x42eb4f
  42eae1:	(bad)  
  42eae2:	ins    BYTE PTR es:[rdi],dx
  42eae3:	sub    DWORD PTR [rax],esp
  42eae5:	(bad)  
  42eae6:	outs   dx,BYTE PTR ds:[rsi]
  42eae7:	and    BYTE PTR fs:[rbp+0x78],ah
  42eaeb:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x2d202000
  42eaf3:	fs sub al,0x20
  42eaf6:	sub    eax,0x6e62642d
  42eafb:	(bad)  
  42eafc:	ins    DWORD PTR es:[rdi],dx
  42eafd:	gs cmp eax,0x414e4244
  42eb03:	rex.WRB
  42eb04:	and    BYTE PTR [r8],r12b
  42eb07:	and    BYTE PTR [rax],ah
  42eb09:	and    BYTE PTR [rax],ah
  42eb0b:	fs (bad) 
  42eb0d:	je     0x42eb70
  42eb0f:	(bad)  
  42eb11:	jae    0x42eb78
  42eb13:	and    BYTE PTR [rsi+0x61],ch
  42eb16:	ins    DWORD PTR es:[rdi],dx
  42eb17:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42eb1c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42eb1f:	outs   dx,BYTE PTR ds:[rsi]
  42eb20:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  42eb25:	outs   dx,DWORD PTR ds:[rsi]
  42eb26:	and    BYTE PTR [rax],ch
  42eb28:	fs gs data16 (bad) 
  42eb2c:	jne    0x42eb9a
  42eb2e:	je     0x42eb6a
  42eb30:	and    BYTE PTR [rdx],ah
  42eb32:	and    eax,0xa292273
  42eb37:	add    BYTE PTR [rax],ah
  42eb39:	and    BYTE PTR [rip+0x2d202c66],ch        # 0x2d6317a5
  42eb3f:	sub    eax,0x656c6966
  42eb44:	cmp    eax,0x454c4946
  42eb49:	rex.WRX
  42eb4a:	rex.B
  42eb4b:	rex.WRB
  42eb4c:	and    BYTE PTR [r8],r12b
  42eb4f:	and    BYTE PTR [rax],ah
  42eb51:	and    BYTE PTR [rax],ah
  42eb53:	gs js  0x42ebbb
  42eb56:	movsxd esi,DWORD PTR [rbp+0x74]
  42eb59:	and    BYTE PTR gs:[rbx+0x6f],ah
  42eb5d:	ins    DWORD PTR es:[rdi],dx
  42eb5e:	ins    DWORD PTR es:[rdi],dx
  42eb5f:	(bad)  
  42eb60:	outs   dx,BYTE PTR ds:[rsi]
  42eb61:	fs jae 0x42eb84
  42eb64:	data16 jb 0x42ebd6
  42eb67:	ins    DWORD PTR es:[rdi],dx
  42eb68:	and    BYTE PTR [rsi+0x69],ah
  42eb6b:	ins    BYTE PTR es:[rdi],dx
  42eb6c:	gs sub al,0x20
  42eb6f:	je     0x42ebd9
  42eb71:	outs   dx,BYTE PTR gs:[rsi]
  42eb73:	and    BYTE PTR [rbp+0x78],ah
  42eb76:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  42eb7e:	add    BYTE PTR [rax],al
  42eb80:	and    BYTE PTR [rax],ah
  42eb82:	sub    eax,0x2d202c6c
  42eb87:	sub    eax,0x7473696c
  42eb8c:	and    BYTE PTR [rax],ah
  42eb8e:	and    BYTE PTR [rax],ah
  42eb90:	and    BYTE PTR [rax],ah
  42eb92:	and    BYTE PTR [rax],ah
  42eb94:	and    BYTE PTR [rax],ah
  42eb96:	and    BYTE PTR [rax],ah
  42eb98:	and    BYTE PTR [rax],ah
  42eb9a:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  42eb9e:	je     0x42ebc0
  42eba0:	(bad)  
  42eba1:	jbe    0x42ec04
  42eba3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  42ebab:	(bad)  
  42ebac:	je     0x42ec0f
  42ebae:	(bad)  
  42ebb0:	jae    0x42ec17
  42ebb2:	jae    0x42ebe0
  42ebb4:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42ebb8:	outs   dx,BYTE PTR ds:[rsi]
  42ebb9:	and    BYTE PTR [rbp+0x78],ah
  42ebbc:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x762d2020
  42ebc4:	sub    al,0x20
  42ebc6:	sub    eax,0x7465732d
  42ebcb:	cmp    eax,0x2d2d202c
  42ebd0:	jbe    0x42ec33
  42ebd2:	jb     0x42ec3d
  42ebd4:	(bad)  
  42ebd5:	(bad)  
  42ebd6:	ins    BYTE PTR es:[rdi],dx
  42ebd7:	gs cmp eax,0x454d414e
  42ebdd:	cmp    eax,0x554c4156
  42ebe2:	or     r12b,BYTE PTR [r8]
  42ebe5:	and    BYTE PTR [rax],ah
  42ebe7:	and    BYTE PTR [rax],ah
  42ebe9:	and    BYTE PTR [rax],ah
  42ebeb:	and    BYTE PTR [rax],ah
  42ebed:	and    BYTE PTR [rax],ah
  42ebef:	and    BYTE PTR [rax],ah
  42ebf1:	and    BYTE PTR [rax],ah
  42ebf3:	and    BYTE PTR [rax],ah
  42ebf5:	and    BYTE PTR [rax],ah
  42ebf7:	and    BYTE PTR [rax],ah
  42ebf9:	and    BYTE PTR [rax],ah
  42ebfb:	and    BYTE PTR [rax],ah
  42ebfd:	and    BYTE PTR [rax],ah
  42ebff:	jae    0x42ec66
  42ec01:	je     0x42ec23
  42ec03:	jo     0x42ec78
  42ec05:	jno    0x42ec73
  42ec07:	and    BYTE PTR [rsi+0x61],dh
  42ec0a:	jb     0x42ec75
  42ec0c:	(bad)  
  42ec0d:	(bad)  
  42ec0e:	ins    BYTE PTR es:[rdi],dx
  42ec0f:	and    BYTE PTR gs:[rsi+0x41],cl
  42ec13:	rex.WRB
  42ec14:	and    BYTE PTR [r15+rbp*2+0x20],r14b
  42ec19:	push   rsi
  42ec1a:	rex.B
  42ec1b:	rex.WR push rbp
  42ec1d:	or     r8b,BYTE PTR [r8]
  42ec20:	and    BYTE PTR [rax],ah
  42ec22:	sub    eax,0x2d202c56
  42ec27:	sub    eax,0x73726576
  42ec2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  42ec33:	and    BYTE PTR [rax],ah
  42ec35:	and    BYTE PTR [rax],ah
  42ec37:	and    BYTE PTR [rax],ah
  42ec39:	and    BYTE PTR [rax],ah
  42ec3b:	outs   dx,DWORD PTR ds:[rsi]
  42ec3c:	jne    0x42ecb2
  42ec3e:	jo     0x42ecb5
  42ec40:	je     0x42ec62
  42ec42:	jbe    0x42eca9
  42ec44:	jb     0x42ecb9
  42ec46:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  42ec4d:	outs   dx,DWORD PTR ds:[rsi]
  42ec4e:	jb     0x42ecbd
  42ec50:	(bad)  
  42ec51:	je     0x42ecbc
  42ec53:	outs   dx,DWORD PTR ds:[rsi]
  42ec54:	outs   dx,BYTE PTR ds:[rsi]
  42ec55:	sub    al,0x20
  42ec57:	je     0x42ecc1
  42ec59:	outs   dx,BYTE PTR gs:[rsi]
  42ec5b:	and    BYTE PTR [rbp+0x78],ah
  42ec5e:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  42ec66:	add    BYTE PTR [rax],al
  42ec68:	and    BYTE PTR [rax],ah
  42ec6a:	sub    eax,0x2d202c58
  42ec6f:	sub    eax,0x702d6f6e
  42ec74:	jae    0x42ece7
  42ec76:	ins    BYTE PTR es:[rdi],dx
  42ec77:	jb     0x42ecdc
  42ec79:	and    BYTE PTR [rax],ah
  42ec7b:	and    BYTE PTR [rax],ah
  42ec7d:	and    BYTE PTR [rax],ah
  42ec7f:	and    BYTE PTR [rax],ah
  42ec81:	and    BYTE PTR [rax],ah
  42ec83:	outs   dx,DWORD PTR fs:[rsi]
  42ec85:	and    BYTE PTR [rsi+0x6f],ch
  42ec88:	je     0x42ecaa
  42ec8a:	jb     0x42ecf1
  42ec8c:	(bad)  
  42ec8d:	and    BYTE PTR fs:[rbx+0x74],dh
  42ec91:	(bad)  
  42ec92:	jb     0x42ed08
  42ec94:	jne    0x42ed06
  42ec96:	and    BYTE PTR [rsi+0x69],ah
  42ec99:	ins    BYTE PTR es:[rdi],dx
  42ec9a:	and    BYTE PTR gs:[rax],ch
  42ec9d:	jle    0x42ecce
  42ec9f:	cs jo  0x42ed15
  42eca2:	jno    0x42ed10
  42eca4:	jb     0x42ed09
  42eca6:	sub    DWORD PTR [rdx],ecx
	...
  42ecb0:	and    BYTE PTR [rax],ah
  42ecb2:	sub    eax,0x22282031
  42ecb7:	outs   dx,DWORD PTR ds:[rsi]
  42ecb8:	outs   dx,BYTE PTR ds:[rsi]
  42ecb9:	and    ch,BYTE PTR gs:[rcx]
  42ecbc:	sub    al,0x20
  42ecbe:	sub    eax,0x6e69732d
  42ecc3:	ins    BYTE PTR es:[edi],dx
  42ecc5:	gs sub eax,0x6e617274
  42eccb:	jae    0x42ed2e
  42eccd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42ecd1:	outs   dx,BYTE PTR ds:[rsi]
  42ecd2:	or     ah,BYTE PTR [rax]
  42ecd4:	and    BYTE PTR [rax],ah
  42ecd6:	and    BYTE PTR [rax],ah
  42ecd8:	and    BYTE PTR [rax],ah
  42ecda:	and    BYTE PTR [rax],ah
  42ecdc:	and    BYTE PTR [rax],ah
  42ecde:	and    BYTE PTR [rax],ah
  42ece0:	and    BYTE PTR [rax],ah
  42ece2:	and    BYTE PTR [rax],ah
  42ece4:	and    BYTE PTR [rax],ah
  42ece6:	and    BYTE PTR [rax],ah
  42ece8:	and    BYTE PTR [rax],ah
  42ecea:	and    BYTE PTR [rax],ah
  42ecec:	and    BYTE PTR [rax],ah
  42ecee:	gs js  0x42ed56
  42ecf1:	movsxd esi,DWORD PTR [rbp+0x74]
  42ecf4:	and    BYTE PTR gs:[rcx+0x73],ah
  42ecf8:	and    BYTE PTR [rcx+0x20],ah
  42ecfb:	jae    0x42ed66
  42ecfd:	outs   dx,BYTE PTR ds:[rsi]
  42ecfe:	ins    BYTE PTR es:[edi],dx
  42ed00:	and    BYTE PTR gs:[rdx+rsi*2+0x61],dh
  42ed05:	outs   dx,BYTE PTR ds:[rsi]
  42ed06:	jae    0x42ed69
  42ed08:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42ed0c:	outs   dx,BYTE PTR ds:[rsi]
  42ed0d:	and    BYTE PTR [rax],ch
  42ed0f:	imul   esp,DWORD PTR [rsi+0x20],0x2d6e6f6e
  42ed16:	imul   ebp,DWORD PTR [rsi+0x74],0x63617265
  42ed1d:	je     0x42ed88
  42ed1f:	jbe    0x42ed86
  42ed21:	sub    DWORD PTR [rdx],ecx
  42ed23:	add    BYTE PTR [rax],al
  42ed25:	add    BYTE PTR [rax],al
  42ed27:	add    BYTE PTR [rax],ah
  42ed29:	and    BYTE PTR [rip+0x2d202c3f],ch        # 0x2d63196e
  42ed2f:	sub    eax,0x706c6568
  42ed34:	and    BYTE PTR [rax],ah
  42ed36:	and    BYTE PTR [rax],ah
  42ed38:	and    BYTE PTR [rax],ah
  42ed3a:	and    BYTE PTR [rax],ah
  42ed3c:	and    BYTE PTR [rax],ah
  42ed3e:	and    BYTE PTR [rax],ah
  42ed40:	and    BYTE PTR [rax],ah
  42ed42:	and    BYTE PTR [rbx+0x68],dh
  42ed45:	outs   dx,DWORD PTR ds:[rsi]
  42ed46:	ja     0x42ed68
  42ed48:	je     0x42edb2
  42ed4a:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  42ed51:	sub    al,0x20
  42ed53:	je     0x42edbd
  42ed55:	outs   dx,BYTE PTR gs:[rsi]
  42ed57:	and    BYTE PTR [rbp+0x78],ah
  42ed5a:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x706e490a
  42ed62:	jne    0x42edd8
  42ed64:	and    BYTE PTR [rcx+0x6e],ah
  42ed67:	and    BYTE PTR fs:[rdi+0x75],ch
  42ed6b:	je     0x42eddd
  42ed6d:	jne    0x42ede3
  42ed6f:	and    BYTE PTR [rdi+0x70],ch
  42ed72:	je     0x42eddd
  42ed74:	outs   dx,DWORD PTR ds:[rsi]
  42ed75:	outs   dx,BYTE PTR ds:[rsi]
  42ed76:	jae    0x42edb2
  42ed78:	or     al,BYTE PTR [rax]
  42ed7a:	add    BYTE PTR [rax],al
  42ed7c:	add    BYTE PTR [rax],al
  42ed7e:	add    BYTE PTR [rax],al
  42ed80:	and    BYTE PTR [rax],ah
  42ed82:	sub    eax,0x2d202c61
  42ed87:	sub    eax,0x6f686365
  42ed8c:	sub    eax,0x206c6c61
  42ed91:	and    BYTE PTR [rax],ah
  42ed93:	and    BYTE PTR [rax],ah
  42ed95:	and    BYTE PTR [rax],ah
  42ed97:	and    BYTE PTR [rax],ah
  42ed99:	and    BYTE PTR [rax],ah
  42ed9b:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42ed9f:	and    BYTE PTR [rcx+0x6c],ah
  42eda2:	ins    BYTE PTR es:[rdi],dx
  42eda3:	and    BYTE PTR [rcx+0x6e],ch
  42eda6:	jo     0x42ee1d
  42eda8:	je     0x42edca
  42edaa:	data16 jb 0x42ee1c
  42edad:	ins    DWORD PTR es:[rdi],dx
  42edae:	and    BYTE PTR [rbx+0x63],dh
  42edb1:	jb     0x42ee1c
  42edb3:	jo     0x42ee29
  42edb5:	or     al,BYTE PTR [rax]
  42edb7:	add    BYTE PTR [rax],ah
  42edb9:	and    BYTE PTR [rip+0x2d202c65],ch        # 0x2d631a24
  42edbf:	sub    eax,0x6f686365
  42edc4:	sub    eax,0x72657571
  42edc9:	imul   esp,DWORD PTR [rbp+0x73],0x20202020
  42edd0:	and    BYTE PTR [rax],ah
  42edd2:	and    BYTE PTR [rbp+0x63],ah
  42edd5:	push   0x6f63206f
  42edda:	ins    DWORD PTR es:[rdi],dx
  42eddb:	ins    DWORD PTR es:[rdi],dx
  42eddc:	(bad)  
  42eddd:	outs   dx,BYTE PTR ds:[rsi]
  42edde:	fs jae 0x42ee01
  42ede1:	jae    0x42ee48
  42ede3:	outs   dx,BYTE PTR ds:[rsi]
  42ede4:	je     0x42ee06
  42ede6:	je     0x42ee57
  42ede8:	and    BYTE PTR [rbx+0x65],dh
  42edeb:	jb     0x42ee63
  42eded:	gs jb  0x42edfa
	...
  42edf8:	and    BYTE PTR [rax],ah
  42edfa:	sub    eax,0x2d202c45
  42edff:	sub    eax,0x6f686365
  42ee04:	sub    eax,0x64646968
  42ee09:	outs   dx,BYTE PTR gs:[rsi]
  42ee0b:	and    BYTE PTR [rax],ah
  42ee0d:	and    BYTE PTR [rax],ah
  42ee0f:	and    BYTE PTR [rax],ah
  42ee11:	and    BYTE PTR [rax],ah
  42ee13:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  42ee1b:	jno    0x42ee92
  42ee1d:	gs jb  0x42ee89
  42ee20:	gs jae 0x42ee43
  42ee23:	je     0x42ee8d
  42ee25:	(bad)  
  42ee26:	je     0x42ee48
  42ee28:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  42ee2f:	ins    BYTE PTR es:[rdi],dx
  42ee30:	and    BYTE PTR [rbx+0x6f],ah
  42ee33:	ins    DWORD PTR es:[rdi],dx
  42ee34:	ins    DWORD PTR es:[rdi],dx
  42ee35:	(bad)  
  42ee36:	outs   dx,BYTE PTR ds:[rsi]
  42ee37:	fs jae 0x42ee5a
  42ee3a:	outs   dx,BYTE PTR gs:[esi]
  42ee3d:	gs jb  0x42eea1
  42ee40:	je     0x42eea7
  42ee42:	or     al,BYTE PTR [rax]
  42ee44:	add    BYTE PTR [rax],al
  42ee46:	add    BYTE PTR [rax],al
  42ee48:	and    BYTE PTR [rax],ah
  42ee4a:	sub    eax,0x2d202c4c
  42ee4f:	sub    eax,0x2d676f6c
  42ee54:	imul   bp,WORD PTR [rbp+riz*2+0x3d],0x4946
  42ee5b:	rex.WR
  42ee5c:	rex.RB
  42ee5d:	rex.WRX
  42ee5e:	rex.B
  42ee5f:	rex.WRB
  42ee60:	and    BYTE PTR [r8],r12b
  42ee63:	jae    0x42eeca
  42ee65:	outs   dx,BYTE PTR ds:[rsi]
  42ee66:	and    BYTE PTR fs:[rbx+0x65],dh
  42ee6a:	jae    0x42eedf
  42ee6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x676f6c20
  42ee73:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42ee77:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x0
  42ee7e:	add    BYTE PTR [rax],al
  42ee80:	and    BYTE PTR [rax],ah
  42ee82:	sub    eax,0x2d202c6e
  42ee87:	sub    eax,0x722d6f6e
  42ee8c:	gs (bad) 
  42ee8e:	fs ins BYTE PTR es:[rdi],dx
  42ee90:	imul   ebp,DWORD PTR [rsi+0x65],0x20202020
  42ee97:	and    BYTE PTR [rax],ah
  42ee99:	and    BYTE PTR [rax],ah
  42ee9b:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  42eea3:	outs   dx,BYTE PTR gs:[rsi]
  42eea5:	push   0x65636e61
  42eeaa:	and    BYTE PTR fs:[rbx+0x6f],ah
  42eeae:	ins    DWORD PTR es:[rdi],dx
  42eeaf:	ins    DWORD PTR es:[rdi],dx
  42eeb0:	(bad)  
  42eeb1:	outs   dx,BYTE PTR ds:[rsi]
  42eeb2:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42eeb7:	and    BYTE PTR gs:[rbp+0x64],ah
  42eebb:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x72282067
  42eec3:	gs (bad) 
  42eec5:	fs ins BYTE PTR es:[rdi],dx
  42eec7:	imul   ebp,DWORD PTR [rsi+0x65],0xa29
  42eece:	add    BYTE PTR [rax],al
  42eed0:	and    BYTE PTR [rax],ah
  42eed2:	sub    eax,0x2d202c6f
  42eed7:	sub    eax,0x7074756f
  42eedc:	jne    0x42ef52
  42eede:	cmp    eax,0x454c4946
  42eee3:	rex.WRX
  42eee4:	rex.B
  42eee5:	rex.WRB
  42eee6:	and    BYTE PTR [r8],r12b
  42eee9:	and    BYTE PTR [rax],ah
  42eeeb:	jae    0x42ef52
  42eeed:	outs   dx,BYTE PTR ds:[rsi]
  42eeee:	and    BYTE PTR fs:[rcx+0x75],dh
  42eef2:	gs jb  0x42ef6e
  42eef5:	and    BYTE PTR [rdx+0x65],dh
  42eef8:	jae    0x42ef6f
  42eefa:	ins    BYTE PTR es:[rdi],dx
  42eefb:	je     0x42ef70
  42eefd:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42ef01:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f28
  42ef08:	jb     0x42ef2a
  42ef0a:	jl     0x42ef7c
  42ef0c:	imul   esi,DWORD PTR [rax+0x65],0xa29
  42ef13:	add    BYTE PTR [rax],al
  42ef15:	add    BYTE PTR [rax],al
  42ef17:	add    BYTE PTR [rax],ah
  42ef19:	and    BYTE PTR [rip+0x2d202c71],ch        # 0x2d631b90
  42ef1f:	sub    eax,0x65697571
  42ef24:	je     0x42ef46
  42ef26:	and    BYTE PTR [rax],ah
  42ef28:	and    BYTE PTR [rax],ah
  42ef2a:	and    BYTE PTR [rax],ah
  42ef2c:	and    BYTE PTR [rax],ah
  42ef2e:	and    BYTE PTR [rax],ah
  42ef30:	and    BYTE PTR [rax],ah
  42ef32:	and    BYTE PTR [rdx+0x75],dh
  42ef35:	outs   dx,BYTE PTR ds:[rsi]
  42ef36:	and    BYTE PTR [rcx+0x75],dh
  42ef39:	imul   esp,DWORD PTR [rbp+0x74],0x2820796c
  42ef40:	outs   dx,BYTE PTR ds:[rsi]
  42ef41:	outs   dx,DWORD PTR ds:[rsi]
  42ef42:	and    BYTE PTR [rbp+0x65],ch
  42ef45:	jae    0x42efba
  42ef47:	(bad)  
  42ef48:	addr32 gs jae 0x42ef78
  42ef4c:	and    BYTE PTR [rdi+0x6e],ch
  42ef4f:	ins    BYTE PTR es:[rdi],dx
  42ef50:	jns    0x42ef72
  42ef52:	jno    0x42efc9
  42ef54:	gs jb  0x42efd0
  42ef57:	and    BYTE PTR [rdi+0x75],ch
  42ef5a:	je     0x42efcc
  42ef5c:	jne    0x42efd2
  42ef5e:	sub    DWORD PTR [rdx],ecx
	...
  42ef68:	and    BYTE PTR [rax],ah
  42ef6a:	sub    eax,0x2d202c73
  42ef6f:	sub    eax,0x676e6973
  42ef74:	ins    BYTE PTR es:[rdi],dx
  42ef75:	gs sub eax,0x70657473
  42ef7b:	and    BYTE PTR [rax],ah
  42ef7d:	and    BYTE PTR [rax],ah
  42ef7f:	and    BYTE PTR [rax],ah
  42ef81:	and    BYTE PTR [rax],ah
  42ef83:	jae    0x42efee
  42ef85:	outs   dx,BYTE PTR ds:[rsi]
  42ef86:	ins    BYTE PTR es:[edi],dx
  42ef88:	gs sub eax,0x70657473
  42ef8e:	and    BYTE PTR [rbp+0x6f],ch
  42ef91:	fs and BYTE PTR gs:[rax],ch
  42ef95:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42ef98:	imul   si,WORD PTR [rdx+0x6d],0x6520
  42ef9e:	(bad)  
  42ef9f:	movsxd ebp,DWORD PTR [rax+0x20]
  42efa2:	jno    0x42f019
  42efa4:	gs jb  0x42f020
  42efa7:	sub    DWORD PTR [rdx],ecx
  42efa9:	add    BYTE PTR [rax],al
  42efab:	add    BYTE PTR [rax],al
  42efad:	add    BYTE PTR [rax],al
  42efaf:	add    BYTE PTR [rax],ah
  42efb1:	and    BYTE PTR [rip+0x2d202c53],ch        # 0x2d631c0a
  42efb7:	sub    eax,0x676e6973
  42efbc:	ins    BYTE PTR es:[rdi],dx
  42efbd:	gs sub eax,0x656e696c
  42efc3:	and    BYTE PTR [rax],ah
  42efc5:	and    BYTE PTR [rax],ah
  42efc7:	and    BYTE PTR [rax],ah
  42efc9:	and    BYTE PTR [rax],ah
  42efcb:	jae    0x42f036
  42efcd:	outs   dx,BYTE PTR ds:[rsi]
  42efce:	ins    BYTE PTR es:[edi],dx
  42efd0:	gs sub eax,0x656e696c
  42efd6:	and    BYTE PTR [rbp+0x6f],ch
  42efd9:	fs and BYTE PTR gs:[rax],ch
  42efdd:	outs   dx,BYTE PTR gs:[rsi]
  42efdf:	and    BYTE PTR fs:[rdi+0x66],ch
  42efe3:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  42efe7:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  42efec:	ins    DWORD PTR es:[rdi],dx
  42efed:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  42eff4:	push   rbx
  42eff5:	push   rcx
  42eff6:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  42effa:	ins    DWORD PTR es:[rdi],dx
  42effb:	ins    DWORD PTR es:[rdi],dx
  42effc:	(bad)  
  42effd:	outs   dx,BYTE PTR ds:[rsi]
  42effe:	sub    DWORD PTR fs:[rdx],ecx
  42f001:	add    BYTE PTR [rdx],cl
  42f003:	rex.WRXB jne 0x42f07a
  42f006:	jo     0x42f07d
  42f008:	je     0x42f02a
  42f00a:	outs   dx,WORD PTR ds:[rsi]
  42f00c:	jb     0x42f07b
  42f00e:	(bad)  
  42f00f:	je     0x42f031
  42f011:	outs   dx,DWORD PTR ds:[rsi]
  42f012:	jo     0x42f088
  42f014:	imul   ebp,DWORD PTR [rdi+0x6e],0xa3a73
  42f01b:	add    BYTE PTR [rax],al
  42f01d:	add    BYTE PTR [rax],al
  42f01f:	add    BYTE PTR [rax],ah
  42f021:	and    BYTE PTR [rip+0x2d202c41],ch        # 0x2d631c68
  42f027:	sub    eax,0x612d6f6e
  42f02c:	ins    BYTE PTR es:[rdi],dx
  42f02d:	imul   esp,DWORD PTR [rdi+0x6e],0x20202020
  42f034:	and    BYTE PTR [rax],ah
  42f036:	and    BYTE PTR [rax],ah
  42f038:	and    BYTE PTR [rax],ah
  42f03a:	and    BYTE PTR [rbp+0x6e],dh
  42f03d:	(bad)  
  42f03e:	ins    BYTE PTR es:[rdi],dx
  42f03f:	imul   esp,DWORD PTR [rdi+0x6e],0x74206465
  42f046:	(bad)  
  42f047:	(bad)  
  42f048:	ins    BYTE PTR es:[rdi],dx
  42f049:	and    BYTE PTR gs:[rdi+0x75],ch
  42f04d:	je     0x42f0bf
  42f04f:	jne    0x42f0c5
  42f051:	and    BYTE PTR [rbp+0x6f],ch
  42f054:	fs or  al,BYTE PTR gs:[rax]
  42f058:	jl     0x42f05a
  42f05a:	add    BYTE PTR [rax],al
  42f05c:	add    BYTE PTR [rax],al
  42f05e:	add    BYTE PTR [rax],al
  42f060:	and    BYTE PTR [rax],ah
  42f062:	sub    eax,0x2d202c46
  42f067:	sub    eax,0x6c656966
  42f06c:	fs sub eax,0x61706573
  42f072:	jb     0x42f0d5
  42f074:	je     0x42f0e5
  42f076:	jb     0x42f0b5
  42f078:	push   rbx
  42f079:	push   rsp
  42f07a:	push   rdx
  42f07b:	rex.WB
  42f07c:	rex.WRX
  42f07d:	rex.RXB or r12b,BYTE PTR [r8]
  42f080:	and    BYTE PTR [rax],ah
  42f082:	and    BYTE PTR [rax],ah
  42f084:	and    BYTE PTR [rax],ah
  42f086:	and    BYTE PTR [rax],ah
  42f088:	and    BYTE PTR [rax],ah
  42f08a:	and    BYTE PTR [rax],ah
  42f08c:	and    BYTE PTR [rax],ah
  42f08e:	and    BYTE PTR [rax],ah
  42f090:	and    BYTE PTR [rax],ah
  42f092:	and    BYTE PTR [rax],ah
  42f094:	and    BYTE PTR [rax],ah
  42f096:	and    BYTE PTR [rax],ah
  42f098:	and    BYTE PTR [rax],ah
  42f09a:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  42f0a0:	jae    0x42f107
  42f0a2:	jo     0x42f105
  42f0a4:	jb     0x42f107
  42f0a6:	je     0x42f117
  42f0a8:	jb     0x42f0ca
  42f0aa:	outs   dx,WORD PTR ds:[rsi]
  42f0ac:	jb     0x42f0ce
  42f0ae:	jne    0x42f11e
  42f0b0:	(bad)  
  42f0b1:	ins    BYTE PTR es:[rdi],dx
  42f0b2:	imul   esp,DWORD PTR [rdi+0x6e],0x6f206465
  42f0b9:	jne    0x42f12f
  42f0bb:	jo     0x42f132
  42f0bd:	je     0x42f0df
  42f0bf:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  42f0c3:	(bad)  
  42f0c4:	jne    0x42f132
  42f0c6:	je     0x42f102
  42f0c8:	and    BYTE PTR [rdx],ah
  42f0ca:	and    eax,0xa292273
  42f0cf:	add    BYTE PTR [rax],ah
  42f0d1:	and    BYTE PTR [rip+0x2d202c48],ch        # 0x2d631d1f
  42f0d7:	sub    eax,0x6c6d7468
  42f0dc:	and    BYTE PTR [rax],ah
  42f0de:	and    BYTE PTR [rax],ah
  42f0e0:	and    BYTE PTR [rax],ah
  42f0e2:	and    BYTE PTR [rax],ah
  42f0e4:	and    BYTE PTR [rax],ah
  42f0e6:	and    BYTE PTR [rax],ah
  42f0e8:	and    BYTE PTR [rax],ah
  42f0ea:	and    BYTE PTR [rax+0x54],cl
  42f0ed:	rex.WRB
  42f0ee:	rex.WR and BYTE PTR [rcx+riz*2+0x62],r14b
  42f0f3:	ins    BYTE PTR es:[rdi],dx
  42f0f4:	and    BYTE PTR gs:[rdi+0x75],ch
  42f0f8:	je     0x42f16a
  42f0fa:	jne    0x42f170
  42f0fc:	and    BYTE PTR [rbp+0x6f],ch
  42f0ff:	fs or  al,BYTE PTR gs:[rax]
  42f103:	add    BYTE PTR [rax],al
  42f105:	add    BYTE PTR [rax],al
  42f107:	add    BYTE PTR [rax],ah
  42f109:	and    BYTE PTR [rip+0x2d202c50],ch        # 0x2d631d5f
  42f10f:	sub    eax,0x74657370
  42f114:	cmp    eax,0x5b524156
  42f119:	cmp    eax,0x5d475241
  42f11e:	and    BYTE PTR [rax],ah
  42f120:	and    BYTE PTR [rax],ah
  42f122:	and    BYTE PTR [rbx+0x65],dh
  42f125:	je     0x42f147
  42f127:	jo     0x42f19b
  42f129:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  42f130:	outs   dx,DWORD PTR ds:[rsi]
  42f131:	jo     0x42f1a7
  42f133:	imul   ebp,DWORD PTR [rdi+0x6e],0x52415620
  42f13a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f13e:	push   r10
  42f140:	rex.RXB and BYTE PTR [r8],r13b
  42f143:	jae    0x42f1aa
  42f145:	and    BYTE PTR gs:[rax+rsi*2+0x73],bl
  42f14a:	gs je  0x42f16d
  42f14d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42f150:	ins    DWORD PTR es:[rdi],dx
  42f151:	(bad)  
  42f152:	outs   dx,BYTE PTR ds:[rsi]
  42f153:	sub    DWORD PTR fs:[rdx],ecx
  42f156:	add    BYTE PTR [rax],al
  42f158:	and    BYTE PTR [rax],ah
  42f15a:	sub    eax,0x2d202c52
  42f15f:	sub    eax,0x6f636572
  42f164:	jb     0x42f1ca
  42f166:	sub    eax,0x61706573
  42f16b:	jb     0x42f1ce
  42f16d:	je     0x42f1de
  42f16f:	jb     0x42f1ae
  42f171:	push   rbx
  42f172:	push   rsp
  42f173:	push   rdx
  42f174:	rex.WB
  42f175:	rex.WRX
  42f176:	rex.RXB or r12b,BYTE PTR [r8]
  42f179:	and    BYTE PTR [rax],ah
  42f17b:	and    BYTE PTR [rax],ah
  42f17d:	and    BYTE PTR [rax],ah
  42f17f:	and    BYTE PTR [rax],ah
  42f181:	and    BYTE PTR [rax],ah
  42f183:	and    BYTE PTR [rax],ah
  42f185:	and    BYTE PTR [rax],ah
  42f187:	and    BYTE PTR [rax],ah
  42f189:	and    BYTE PTR [rax],ah
  42f18b:	and    BYTE PTR [rax],ah
  42f18d:	and    BYTE PTR [rax],ah
  42f18f:	and    BYTE PTR [rax],ah
  42f191:	and    BYTE PTR [rax],ah
  42f193:	jb     0x42f1fa
  42f195:	movsxd ebp,DWORD PTR [rdi+0x72]
  42f198:	and    BYTE PTR fs:[rbx+0x65],dh
  42f19c:	jo     0x42f1ff
  42f19e:	jb     0x42f201
  42f1a0:	je     0x42f211
  42f1a2:	jb     0x42f1c4
  42f1a4:	outs   dx,WORD PTR ds:[rsi]
  42f1a6:	jb     0x42f1c8
  42f1a8:	jne    0x42f218
  42f1aa:	(bad)  
  42f1ab:	ins    BYTE PTR es:[rdi],dx
  42f1ac:	imul   esp,DWORD PTR [rdi+0x6e],0x6f206465
  42f1b3:	jne    0x42f229
  42f1b5:	jo     0x42f22c
  42f1b7:	je     0x42f1d9
  42f1b9:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  42f1bd:	(bad)  
  42f1be:	jne    0x42f22c
  42f1c0:	je     0x42f1fc
  42f1c2:	and    BYTE PTR [rsi+0x65],ch
  42f1c5:	ja     0x42f233
  42f1c7:	imul   ebp,DWORD PTR [rsi+0x65],0xa29
  42f1ce:	add    BYTE PTR [rax],al
  42f1d0:	and    BYTE PTR [rax],ah
  42f1d2:	sub    eax,0x2d202c74
  42f1d7:	sub    eax,0x6c707574
  42f1dc:	gs jae 0x42f20c
  42f1df:	outs   dx,DWORD PTR ds:[rsi]
  42f1e0:	outs   dx,BYTE PTR ds:[rsi]
  42f1e1:	ins    BYTE PTR es:[rdi],dx
  42f1e2:	jns    0x42f204
  42f1e4:	and    BYTE PTR [rax],ah
  42f1e6:	and    BYTE PTR [rax],ah
  42f1e8:	and    BYTE PTR [rax],ah
  42f1ea:	and    BYTE PTR [rax+0x72],dh
  42f1ed:	imul   ebp,DWORD PTR [rsi+0x74],0x776f7220
  42f1f4:	jae    0x42f216
  42f1f6:	outs   dx,DWORD PTR ds:[rsi]
  42f1f7:	outs   dx,BYTE PTR ds:[rsi]
  42f1f8:	ins    BYTE PTR es:[rdi],dx
  42f1f9:	jns    0x42f205
  42f1fb:	add    BYTE PTR [rax],al
  42f1fd:	add    BYTE PTR [rax],al
  42f1ff:	add    BYTE PTR [rax],ah
  42f201:	and    BYTE PTR [rip+0x2d202c54],ch        # 0x2d631e5b
  42f207:	sub    eax,0x6c626174
  42f20c:	gs sub eax,0x72747461
  42f212:	cmp    eax,0x54584554
  42f217:	and    BYTE PTR [rax],ah
  42f219:	and    BYTE PTR [rax],ah
  42f21b:	jae    0x42f282
  42f21d:	je     0x42f23f
  42f21f:	rex.W push rsp
  42f221:	rex.WRB
  42f222:	rex.WR and BYTE PTR [rcx+riz*2+0x62],r14b
  42f227:	ins    BYTE PTR es:[rdi],dx
  42f228:	and    BYTE PTR gs:[rcx+riz*2+0x67],dh
  42f22d:	and    BYTE PTR [rcx+0x74],ah
  42f230:	je     0x42f2a4
  42f232:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  42f239:	sub    BYTE PTR [rbp+0x2e],ah
  42f23c:	addr32 cs sub al,0x20
  42f240:	ja     0x42f2ab
  42f242:	fs je  0x42f2ad
  42f245:	sub    al,0x20
  42f247:	(bad)  
  42f248:	outs   dx,DWORD PTR ds:[rsi]
  42f249:	jb     0x42f2af
  42f24b:	gs jb  0x42f277
  42f24e:	or     al,BYTE PTR [rax]
  42f250:	and    BYTE PTR [rax],ah
  42f252:	sub    eax,0x2d202c78
  42f257:	sub    eax,0x61707865
  42f25c:	outs   dx,BYTE PTR ds:[rsi]
  42f25d:	fs gs and BYTE PTR fs:[rax],ah
  42f262:	and    BYTE PTR [rax],ah
  42f264:	and    BYTE PTR [rax],ah
  42f266:	and    BYTE PTR [rax],ah
  42f268:	and    BYTE PTR [rax],ah
  42f26a:	and    BYTE PTR [rbp+rsi*2+0x72],dh
  42f26e:	outs   dx,BYTE PTR ds:[rsi]
  42f26f:	and    BYTE PTR [rdi+0x6e],ch
  42f272:	and    BYTE PTR [rbp+0x78],ah
  42f275:	jo     0x42f2d8
  42f277:	outs   dx,BYTE PTR ds:[rsi]
  42f278:	fs gs and BYTE PTR fs:[rcx+riz*2+0x62],dh
  42f27f:	ins    BYTE PTR es:[rdi],dx
  42f280:	and    BYTE PTR gs:[rdi+0x75],ch
  42f284:	je     0x42f2f6
  42f286:	jne    0x42f2fc
  42f288:	or     al,BYTE PTR [rax]
  42f28a:	add    BYTE PTR [rax],al
  42f28c:	add    BYTE PTR [rax],al
  42f28e:	add    BYTE PTR [rax],al
  42f290:	and    BYTE PTR [rax],ah
  42f292:	sub    eax,0x2d202c7a
  42f297:	sub    eax,0x6c656966
  42f29c:	fs sub eax,0x61706573
  42f2a2:	jb     0x42f305
  42f2a4:	je     0x42f315
  42f2a6:	jb     0x42f2d5
  42f2a8:	jp     0x42f30f
  42f2aa:	jb     0x42f31b
  42f2ac:	or     ah,BYTE PTR [rax]
  42f2ae:	and    BYTE PTR [rax],ah
  42f2b0:	and    BYTE PTR [rax],ah
  42f2b2:	and    BYTE PTR [rax],ah
  42f2b4:	and    BYTE PTR [rax],ah
  42f2b6:	and    BYTE PTR [rax],ah
  42f2b8:	and    BYTE PTR [rax],ah
  42f2ba:	and    BYTE PTR [rax],ah
  42f2bc:	and    BYTE PTR [rax],ah
  42f2be:	and    BYTE PTR [rax],ah
  42f2c0:	and    BYTE PTR [rax],ah
  42f2c2:	and    BYTE PTR [rax],ah
  42f2c4:	and    BYTE PTR [rax],ah
  42f2c6:	and    BYTE PTR [rax],ah
  42f2c8:	jae    0x42f32f
  42f2ca:	je     0x42f2ec
  42f2cc:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  42f2d2:	jae    0x42f339
  42f2d4:	jo     0x42f337
  42f2d6:	jb     0x42f339
  42f2d8:	je     0x42f349
  42f2da:	jb     0x42f2fc
  42f2dc:	outs   dx,WORD PTR ds:[rsi]
  42f2de:	jb     0x42f300
  42f2e0:	jne    0x42f350
  42f2e2:	(bad)  
  42f2e3:	ins    BYTE PTR es:[rdi],dx
  42f2e4:	imul   esp,DWORD PTR [rdi+0x6e],0x6f206465
  42f2eb:	jne    0x42f361
  42f2ed:	jo     0x42f364
  42f2ef:	je     0x42f311
  42f2f1:	je     0x42f362
  42f2f3:	and    BYTE PTR [rdx+0x65],bh
  42f2f6:	jb     0x42f367
  42f2f8:	and    BYTE PTR [rdx+0x79],ah
  42f2fb:	je     0x42f362
  42f2fd:	or     al,BYTE PTR [rax]
  42f2ff:	add    BYTE PTR [rax],ah
  42f301:	and    BYTE PTR [rip+0x2d202c30],ch        # 0x2d631f37
  42f307:	sub    eax,0x6f636572
  42f30c:	jb     0x42f372
  42f30e:	sub    eax,0x61706573
  42f313:	jb     0x42f376
  42f315:	je     0x42f386
  42f317:	jb     0x42f346
  42f319:	jp     0x42f380
  42f31b:	jb     0x42f38c
  42f31d:	or     ah,BYTE PTR [rax]
  42f31f:	and    BYTE PTR [rax],ah
  42f321:	and    BYTE PTR [rax],ah
  42f323:	and    BYTE PTR [rax],ah
  42f325:	and    BYTE PTR [rax],ah
  42f327:	and    BYTE PTR [rax],ah
  42f329:	and    BYTE PTR [rax],ah
  42f32b:	and    BYTE PTR [rax],ah
  42f32d:	and    BYTE PTR [rax],ah
  42f32f:	and    BYTE PTR [rax],ah
  42f331:	and    BYTE PTR [rax],ah
  42f333:	and    BYTE PTR [rax],ah
  42f335:	and    BYTE PTR [rax],ah
  42f337:	and    BYTE PTR [rax],ah
  42f339:	jae    0x42f3a0
  42f33b:	je     0x42f35d
  42f33d:	jb     0x42f3a4
  42f33f:	movsxd ebp,DWORD PTR [rdi+0x72]
  42f342:	and    BYTE PTR fs:[rbx+0x65],dh
  42f346:	jo     0x42f3a9
  42f348:	jb     0x42f3ab
  42f34a:	je     0x42f3bb
  42f34c:	jb     0x42f36e
  42f34e:	outs   dx,WORD PTR ds:[rsi]
  42f350:	jb     0x42f372
  42f352:	jne    0x42f3c2
  42f354:	(bad)  
  42f355:	ins    BYTE PTR es:[rdi],dx
  42f356:	imul   esp,DWORD PTR [rdi+0x6e],0x6f206465
  42f35d:	jne    0x42f3d3
  42f35f:	jo     0x42f3d6
  42f361:	je     0x42f383
  42f363:	je     0x42f3d4
  42f365:	and    BYTE PTR [rdx+0x65],bh
  42f368:	jb     0x42f3d9
  42f36a:	and    BYTE PTR [rdx+0x79],ah
  42f36d:	je     0x42f3d4
  42f36f:	or     al,BYTE PTR [rax]
  42f371:	or     al,BYTE PTR [rbx+0x6f]
  42f374:	outs   dx,BYTE PTR ds:[rsi]
  42f375:	outs   dx,BYTE PTR ds:[rsi]
  42f376:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42f37b:	outs   dx,BYTE PTR ds:[rsi]
  42f37c:	and    BYTE PTR [rdi+0x70],ch
  42f37f:	je     0x42f3ea
  42f381:	outs   dx,DWORD PTR ds:[rsi]
  42f382:	outs   dx,BYTE PTR ds:[rsi]
  42f383:	jae    0x42f3bf
  42f385:	or     al,BYTE PTR [rax]
  42f387:	push   rax
  42f388:	rex.RXB
  42f389:	rex.W
  42f38a:	rex.WRXB push r11
  42f38c:	push   rsp
  42f38d:	add    BYTE PTR [rax],al
  42f38f:	add    BYTE PTR [rax],ah
  42f391:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d631fff
  42f397:	sub    eax,0x74736f68
  42f39c:	cmp    eax,0x54534f48
  42f3a1:	rex.WRX
  42f3a2:	rex.B
  42f3a3:	rex.WRB
  42f3a4:	and    BYTE PTR [r8],r12b
  42f3a7:	and    BYTE PTR [rax],ah
  42f3a9:	and    BYTE PTR [rax],ah
  42f3ab:	fs (bad) 
  42f3ad:	je     0x42f410
  42f3af:	(bad)  
  42f3b1:	jae    0x42f418
  42f3b3:	and    BYTE PTR [rbx+0x65],dh
  42f3b6:	jb     0x42f42e
  42f3b8:	gs jb  0x42f3db
  42f3bb:	push   0x2074736f
  42f3c0:	outs   dx,DWORD PTR ds:[rsi]
  42f3c1:	jb     0x42f3e3
  42f3c3:	jae    0x42f434
  42f3c5:	movsxd ebp,DWORD PTR [rbx+0x65]
  42f3c8:	je     0x42f3ea
  42f3ca:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  42f3d2:	jns    0x42f3f4
  42f3d4:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  42f3d8:	(bad)  
  42f3d9:	jne    0x42f447
  42f3db:	je     0x42f417
  42f3dd:	and    BYTE PTR [rdx],ah
  42f3df:	and    eax,0xa292273
  42f3e4:	add    BYTE PTR [rax+0x47],dl
  42f3e7:	push   rax
  42f3e8:	rex.WRXB push r10
  42f3ea:	push   rsp
  42f3eb:	add    BYTE PTR [rax],al
  42f3ed:	add    BYTE PTR [rax],al
  42f3ef:	add    BYTE PTR [rax],ah
  42f3f1:	and    BYTE PTR [rip+0x2d202c70],ch        # 0x2d632067
  42f3f7:	sub    eax,0x74726f70
  42f3fc:	cmp    eax,0x54524f50
  42f401:	and    BYTE PTR [rax],ah
  42f403:	and    BYTE PTR [rax],ah
  42f405:	and    BYTE PTR [rax],ah
  42f407:	and    BYTE PTR [rax],ah
  42f409:	and    BYTE PTR [rax],ah
  42f40b:	fs (bad) 
  42f40d:	je     0x42f470
  42f40f:	(bad)  
  42f411:	jae    0x42f478
  42f413:	and    BYTE PTR [rbx+0x65],dh
  42f416:	jb     0x42f48e
  42f418:	gs jb  0x42f43b
  42f41b:	jo     0x42f48c
  42f41d:	jb     0x42f493
  42f41f:	and    BYTE PTR [rax],ch
  42f421:	fs gs data16 (bad) 
  42f425:	jne    0x42f493
  42f427:	je     0x42f463
  42f429:	and    BYTE PTR [rdx],ah
  42f42b:	and    eax,0xa292273
	...
  42f438:	and    BYTE PTR [rax],ah
  42f43a:	sub    eax,0x2d202c55
  42f43f:	sub    eax,0x72657375
  42f444:	outs   dx,BYTE PTR ds:[rsi]
  42f445:	(bad)  
  42f446:	ins    DWORD PTR es:[rdi],dx
  42f447:	gs cmp eax,0x52455355
  42f44d:	rex.WRX
  42f44e:	rex.B
  42f44f:	rex.WRB
  42f450:	and    BYTE PTR [r8],r12b
  42f453:	fs (bad) 
  42f455:	je     0x42f4b8
  42f457:	(bad)  
  42f459:	jae    0x42f4c0
  42f45b:	and    BYTE PTR [rbp+0x73],dh
  42f45e:	gs jb  0x42f481
  42f461:	outs   dx,BYTE PTR ds:[rsi]
  42f462:	(bad)  
  42f463:	ins    DWORD PTR es:[rdi],dx
  42f464:	and    BYTE PTR gs:[rax],ch
  42f467:	fs gs data16 (bad) 
  42f46b:	jne    0x42f4d9
  42f46d:	je     0x42f4a9
  42f46f:	and    BYTE PTR [rdx],ah
  42f471:	and    eax,0xa292273
  42f476:	add    BYTE PTR [rax],al
  42f478:	and    BYTE PTR [rax],ah
  42f47a:	sub    eax,0x2d202c77
  42f47f:	sub    eax,0x702d6f6e
  42f484:	(bad)  
  42f485:	jae    0x42f4fa
  42f487:	ja     0x42f4f8
  42f489:	jb     0x42f4ef
  42f48b:	and    BYTE PTR [rax],ah
  42f48d:	and    BYTE PTR [rax],ah
  42f48f:	and    BYTE PTR [rax],ah
  42f491:	and    BYTE PTR [rax],ah
  42f493:	outs   dx,BYTE PTR ds:[rsi]
  42f494:	gs jbe 0x42f4fc
  42f497:	jb     0x42f4b9
  42f499:	jo     0x42f50d
  42f49b:	outs   dx,DWORD PTR ds:[rsi]
  42f49c:	ins    DWORD PTR es:[rdi],dx
  42f49d:	jo     0x42f513
  42f49f:	and    BYTE PTR [rsi+0x6f],ah
  42f4a2:	jb     0x42f4c4
  42f4a4:	jo     0x42f507
  42f4a6:	jae    0x42f51b
  42f4a8:	ja     0x42f519
  42f4aa:	jb     0x42f510
  42f4ac:	or     al,BYTE PTR [rax]
  42f4ae:	add    BYTE PTR [rax],al
  42f4b0:	and    BYTE PTR [rax],ah
  42f4b2:	sub    eax,0x2d202c57
  42f4b7:	sub    eax,0x73736170
  42f4bc:	ja     0x42f52d
  42f4be:	jb     0x42f524
  42f4c0:	and    BYTE PTR [rax],ah
  42f4c2:	and    BYTE PTR [rax],ah
  42f4c4:	and    BYTE PTR [rax],ah
  42f4c6:	and    BYTE PTR [rax],ah
  42f4c8:	and    BYTE PTR [rax],ah
  42f4ca:	and    BYTE PTR [rsi+0x6f],ah
  42f4cd:	jb     0x42f532
  42f4cf:	and    BYTE PTR gs:[rax+0x61],dh
  42f4d3:	jae    0x42f548
  42f4d5:	ja     0x42f546
  42f4d7:	jb     0x42f53d
  42f4d9:	and    BYTE PTR [rax+0x72],dh
  42f4dc:	outs   dx,DWORD PTR ds:[rsi]
  42f4dd:	ins    DWORD PTR es:[rdi],dx
  42f4de:	jo     0x42f554
  42f4e0:	and    BYTE PTR [rax],ch
  42f4e2:	jae    0x42f54c
  42f4e4:	outs   dx,DWORD PTR ds:[rsi]
  42f4e5:	jne    0x42f553
  42f4e7:	and    BYTE PTR fs:[rax+0x61],ch
  42f4eb:	jo     0x42f55d
  42f4ed:	outs   dx,BYTE PTR gs:[rsi]
  42f4ef:	and    BYTE PTR [rcx+0x75],ah
  42f4f2:	je     0x42f563
  42f4f4:	ins    DWORD PTR es:[rdi],dx
  42f4f5:	(bad)  
  42f4f6:	je     0x42f561
  42f4f8:	movsxd esp,DWORD PTR [rcx+0x6c]
  42f4fb:	ins    BYTE PTR es:[rdi],dx
  42f4fc:	jns    0x42f527
  42f4fe:	or     al,BYTE PTR [rax]
  42f500:	or     al,BYTE PTR [rsi+0x6f]
  42f503:	jb     0x42f525
  42f505:	ins    DWORD PTR es:[rdi],dx
  42f506:	outs   dx,DWORD PTR ds:[rsi]
  42f507:	jb     0x42f56e
  42f509:	and    BYTE PTR [rcx+0x6e],ch
  42f50c:	outs   dx,WORD PTR ds:[rsi]
  42f50e:	jb     0x42f57d
  42f510:	(bad)  
  42f511:	je     0x42f57c
  42f513:	outs   dx,DWORD PTR ds:[rsi]
  42f514:	outs   dx,BYTE PTR ds:[rsi]
  42f515:	sub    al,0x20
  42f517:	je     0x42f592
  42f519:	jo     0x42f580
  42f51b:	and    BYTE PTR [rdx],ah
  42f51d:	pop    rsp
  42f51e:	(bad)  
  42f51f:	and    ah,BYTE PTR [rax]
  42f521:	sub    BYTE PTR [rsi+0x6f],ah
  42f524:	jb     0x42f546
  42f526:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  42f52d:	ins    BYTE PTR es:[rdi],dx
  42f52e:	and    BYTE PTR [rbx+0x6f],ah
  42f531:	ins    DWORD PTR es:[rdi],dx
  42f532:	ins    DWORD PTR es:[rdi],dx
  42f533:	(bad)  
  42f534:	outs   dx,BYTE PTR ds:[rsi]
  42f535:	fs jae 0x42f561
  42f538:	and    BYTE PTR [rdi+0x72],ch
  42f53b:	and    BYTE PTR [rdx],ah
  42f53d:	pop    rsp
  42f53e:	push   0x22706c65
  42f543:	and    BYTE PTR [rax],ch
  42f545:	outs   dx,WORD PTR ds:[rsi]
  42f547:	jb     0x42f569
  42f549:	push   rbx
  42f54a:	push   rcx
  42f54b:	rex.WR or r12b,BYTE PTR [rbx+0x6f]
  42f54f:	ins    DWORD PTR es:[rdi],dx
  42f550:	ins    DWORD PTR es:[rdi],dx
  42f551:	(bad)  
  42f552:	outs   dx,BYTE PTR ds:[rsi]
  42f553:	fs jae 0x42f57f
  42f556:	and    BYTE PTR [rsi+0x72],ah
  42f559:	outs   dx,DWORD PTR ds:[rsi]
  42f55a:	ins    DWORD PTR es:[rdi],dx
  42f55b:	and    BYTE PTR [rdi+0x69],dh
  42f55e:	je     0x42f5c8
  42f560:	imul   ebp,DWORD PTR [rsi+0x20],0x6c717370
  42f567:	sub    al,0x20
  42f569:	outs   dx,DWORD PTR ds:[rsi]
  42f56a:	jb     0x42f58c
  42f56c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f56f:	jae    0x42f5e6
  42f571:	ins    BYTE PTR es:[rdi],dx
  42f572:	je     0x42f594
  42f574:	je     0x42f5de
  42f576:	and    BYTE PTR gs:[rax+0x73],dh
  42f57a:	jno    0x42f5e8
  42f57c:	and    BYTE PTR [rbx+0x65],dh
  42f57f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42f583:	outs   dx,BYTE PTR ds:[rsi]
  42f584:	and    BYTE PTR [rcx+0x6e],ch
  42f587:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f58b:	and    BYTE PTR [rax+0x6f],dl
  42f58e:	jae    0x42f604
  42f590:	addr32 jb 0x42f5f8
  42f593:	push   rbx
  42f594:	push   rcx
  42f595:	rex.WR or r12b,BYTE PTR [rdi+rbp*2+0x63]
  42f59a:	jne    0x42f609
  42f59c:	outs   dx,BYTE PTR gs:[rsi]
  42f59e:	je     0x42f601
  42f5a0:	je     0x42f60b
  42f5a2:	outs   dx,DWORD PTR ds:[rsi]
  42f5a3:	outs   dx,BYTE PTR ds:[rsi]
  42f5a4:	or     cl,BYTE PTR cs:[rdx]
  42f5a7:	add    BYTE PTR [rdx+0x65],dl
  42f5aa:	jo     0x42f61b
  42f5ac:	jb     0x42f622
  42f5ae:	and    BYTE PTR [rdx+0x75],ah
  42f5b1:	addr32 jae 0x42f5d4
  42f5b4:	je     0x42f625
  42f5b6:	and    BYTE PTR [rax+rsi*2],bh
  42f5b9:	addr32 jae 0x42f62d
  42f5bc:	ins    BYTE PTR es:[rdi],dx
  42f5bd:	sub    eax,0x73677562
  42f5c2:	rex jo 0x42f634
  42f5c5:	jae    0x42f63b
  42f5c7:	addr32 jb 0x42f62f
  42f5ca:	jae    0x42f63d
  42f5cc:	ins    BYTE PTR es:[rdi],dx
  42f5cd:	outs   dx,DWORD PTR cs:[rsi]
  42f5cf:	jb     0x42f638
  42f5d1:	ds or  al,BYTE PTR cs:[rax]
  42f5d5:	outs   dx,DWORD PTR ds:[rsi]
  42f5d6:	outs   dx,BYTE PTR ds:[rsi]
  42f5d7:	add    BYTE PTR [rdi+0x66],ch
  42f5da:	data16 add BYTE PTR [rcx+0x75],ah
  42f5de:	je     0x42f64f
  42f5e0:	add    BYTE PTR [rdi+0x65],al
  42f5e3:	outs   dx,BYTE PTR ds:[rsi]
  42f5e4:	gs jb  0x42f648
  42f5e7:	ins    BYTE PTR es:[rdi],dx
  42f5e8:	or     al,BYTE PTR [rax]
  42f5ea:	add    BYTE PTR [rax],al
  42f5ec:	add    BYTE PTR [rax],al
  42f5ee:	add    BYTE PTR [rax],al
  42f5f0:	and    BYTE PTR [rax],ah
  42f5f2:	pop    rsp
  42f5f3:	movsxd ebp,DWORD PTR [rdi+0x70]
  42f5f6:	jns    0x42f66a
  42f5f8:	imul   esp,DWORD PTR [rdi+0x68],0x20202074
  42f5ff:	and    BYTE PTR [rax],ah
  42f601:	and    BYTE PTR [rax],ah
  42f603:	and    BYTE PTR [rax],ah
  42f605:	and    BYTE PTR [rax],ah
  42f607:	and    BYTE PTR [rax],ah
  42f609:	jae    0x42f673
  42f60b:	outs   dx,DWORD PTR ds:[rsi]
  42f60c:	ja     0x42f62e
  42f60e:	push   rax
  42f60f:	outs   dx,DWORD PTR ds:[rsi]
  42f610:	jae    0x42f686
  42f612:	addr32 jb 0x42f67a
  42f615:	push   rbx
  42f616:	push   rcx
  42f617:	rex.WR and BYTE PTR [rbp+0x73],r14b
  42f61b:	(bad)  
  42f61c:	and    BYTE PTR gs:[ecx+0x6e],ah
  42f621:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  42f626:	je     0x42f69a
  42f628:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  42f62f:	and    BYTE PTR [rbp+riz*2+0x72],dh
  42f633:	ins    DWORD PTR es:[rdi],dx
  42f634:	jae    0x42f640
  42f636:	add    BYTE PTR [rax],al
  42f638:	and    BYTE PTR [rax],ah
  42f63a:	pop    rsp
  42f63b:	and    BYTE PTR [ebx+0x46],bl
  42f63f:	rex.WB
  42f640:	rex.WR
  42f641:	rex.RB pop r13
  42f643:	and    BYTE PTR [rdi+0x72],ch
  42f646:	and    BYTE PTR [rbx],bh
  42f648:	and    BYTE PTR [rax],ah
  42f64a:	and    BYTE PTR [rax],ah
  42f64c:	and    BYTE PTR [rax],ah
  42f64e:	and    BYTE PTR [rax],ah
  42f650:	and    BYTE PTR [rbp+0x78],ah
  42f653:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  42f657:	and    BYTE PTR gs:[rcx+0x75],dh
  42f65b:	gs jb  0x42f6d7
  42f65e:	and    BYTE PTR [rax],ch
  42f660:	(bad)  
  42f661:	outs   dx,BYTE PTR ds:[rsi]
  42f662:	and    BYTE PTR fs:[rbx+0x65],dh
  42f666:	outs   dx,BYTE PTR ds:[rsi]
  42f667:	and    BYTE PTR fs:[rdx+0x65],dh
  42f66b:	jae    0x42f6e2
  42f66d:	ins    BYTE PTR es:[rdi],dx
  42f66e:	je     0x42f6e3
  42f670:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f674:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
  42f67b:	and    BYTE PTR [rax+rsi*2+0x69],bh
  42f67f:	jo     0x42f6e6
  42f681:	sub    DWORD PTR [rdx],ecx
  42f683:	add    BYTE PTR [rax],al
  42f685:	add    BYTE PTR [rax],al
  42f687:	add    BYTE PTR [rax],ah
  42f689:	and    BYTE PTR [rdi+riz*2+0x73],bl
  42f68d:	gs je  0x42f6b0
  42f690:	pop    rbx
  42f691:	push   rax
  42f692:	push   rdx
  42f693:	rex.RB
  42f694:	rex.RX
  42f695:	rex.WB pop r8
  42f697:	pop    rbp
  42f698:	and    BYTE PTR [rax],ah
  42f69a:	and    BYTE PTR [rax],ah
  42f69c:	and    BYTE PTR [rax],ah
  42f69e:	and    BYTE PTR [rax],ah
  42f6a0:	and    BYTE PTR [rbp+0x78],ah
  42f6a3:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  42f6a7:	and    BYTE PTR gs:[rcx+0x75],dh
  42f6ab:	gs jb  0x42f727
  42f6ae:	and    BYTE PTR [rcx+0x6e],ah
  42f6b1:	and    BYTE PTR fs:[rbx+0x74],dh
  42f6b5:	outs   dx,DWORD PTR ds:[rsi]
  42f6b6:	jb     0x42f71d
  42f6b8:	and    BYTE PTR [rdx+0x65],dh
  42f6bb:	jae    0x42f732
  42f6bd:	ins    BYTE PTR es:[rdi],dx
  42f6be:	je     0x42f733
  42f6c0:	and    BYTE PTR [rcx+0x6e],ch
  42f6c3:	and    BYTE PTR [rax+0x73],dh
  42f6c6:	jno    0x42f734
  42f6c8:	and    BYTE PTR [rsi+0x61],dh
  42f6cb:	jb     0x42f736
  42f6cd:	(bad)  
  42f6ce:	(bad)  
  42f6cf:	ins    BYTE PTR es:[rdi],dx
  42f6d0:	gs jae 0x42f6dd
  42f6d3:	add    BYTE PTR [rax],al
  42f6d5:	add    BYTE PTR [rax],al
  42f6d7:	add    BYTE PTR [rax],ah
  42f6d9:	and    BYTE PTR [rax+rbp*2+0x20],bl
  42f6dd:	pop    rbx
  42f6de:	rex.WRX
  42f6df:	rex.B
  42f6e0:	rex.WRB
  42f6e1:	rex.RB pop r13
  42f6e3:	and    BYTE PTR [rax],ah
  42f6e5:	and    BYTE PTR [rax],ah
  42f6e7:	and    BYTE PTR [rax],ah
  42f6e9:	and    BYTE PTR [rax],ah
  42f6eb:	and    BYTE PTR [rax],ah
  42f6ed:	and    BYTE PTR [rax],ah
  42f6ef:	and    BYTE PTR [rax],ah
  42f6f1:	push   0x20706c65
  42f6f6:	outs   dx,DWORD PTR ds:[rsi]
  42f6f7:	outs   dx,BYTE PTR ds:[rsi]
  42f6f8:	and    BYTE PTR [rbx+0x79],dh
  42f6fb:	outs   dx,BYTE PTR ds:[rsi]
  42f6fc:	je     0x42f75f
  42f6fe:	js     0x42f720
  42f700:	outs   dx,DWORD PTR ds:[rsi]
  42f701:	data16 and BYTE PTR [rbx+0x51],dl
  42f705:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  42f709:	ins    DWORD PTR es:[rdi],dx
  42f70a:	ins    DWORD PTR es:[rdi],dx
  42f70b:	(bad)  
  42f70c:	outs   dx,BYTE PTR ds:[rsi]
  42f70d:	fs jae 0x42f73c
  42f710:	and    BYTE PTR [rdx],ch
  42f712:	and    BYTE PTR [rsi+0x6f],ah
  42f715:	jb     0x42f737
  42f717:	(bad)  
  42f718:	ins    BYTE PTR es:[rdi],dx
  42f719:	ins    BYTE PTR es:[rdi],dx
  42f71a:	and    BYTE PTR [rbx+0x6f],ah
  42f71d:	ins    DWORD PTR es:[rdi],dx
  42f71e:	ins    DWORD PTR es:[rdi],dx
  42f71f:	(bad)  
  42f720:	outs   dx,BYTE PTR ds:[rsi]
  42f721:	fs jae 0x42f72e
  42f724:	add    BYTE PTR [rax],al
  42f726:	add    BYTE PTR [rax],al
  42f728:	and    BYTE PTR [rax],ah
  42f72a:	pop    rsp
  42f72b:	jno    0x42f74d
  42f72d:	and    BYTE PTR [rax],ah
  42f72f:	and    BYTE PTR [rax],ah
  42f731:	and    BYTE PTR [rax],ah
  42f733:	and    BYTE PTR [rax],ah
  42f735:	and    BYTE PTR [rax],ah
  42f737:	and    BYTE PTR [rax],ah
  42f739:	and    BYTE PTR [rax],ah
  42f73b:	and    BYTE PTR [rax],ah
  42f73d:	and    BYTE PTR [rax],ah
  42f73f:	and    BYTE PTR [rax],ah
  42f741:	jno    0x42f7b8
  42f743:	imul   esi,DWORD PTR [rax+riz*1+0x70],0xa6c7173
  42f74b:	add    BYTE PTR [rax],al
  42f74d:	add    BYTE PTR [rax],al
  42f74f:	add    BYTE PTR [rax],ah
  42f751:	and    BYTE PTR [rdi+rsi*2+0x61],bl
  42f755:	je     0x42f7ba
  42f757:	push   0x45535b20
  42f75c:	rex.XB pop r13
  42f75e:	and    BYTE PTR [rax],ah
  42f760:	and    BYTE PTR [rax],ah
  42f762:	and    BYTE PTR [rax],ah
  42f764:	and    BYTE PTR [rax],ah
  42f766:	and    BYTE PTR [rax],ah
  42f768:	and    BYTE PTR [rbp+0x78],ah
  42f76b:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  42f76f:	and    BYTE PTR gs:[rcx+0x75],dh
  42f773:	gs jb  0x42f7ef
  42f776:	and    BYTE PTR [rbp+0x76],ah
  42f779:	gs jb  0x42f7f5
  42f77c:	and    BYTE PTR [rbx+0x45],dl
  42f77f:	rex.XB and BYTE PTR [r11+0x65],sil
  42f783:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f786:	fs jae 0x42f793
  42f789:	add    BYTE PTR [rdx],cl
  42f78b:	add    BYTE PTR [rcx+0x75],dl
  42f78e:	gs jb  0x42f80a
  42f791:	and    BYTE PTR [rdx+0x75],al
  42f794:	data16 data16 gs jb 0x42f7a3
  42f799:	add    BYTE PTR [rax],al
  42f79b:	add    BYTE PTR [rax],al
  42f79d:	add    BYTE PTR [rax],al
  42f79f:	add    BYTE PTR [rax],ah
  42f7a1:	and    BYTE PTR [rbp+riz*2+0x20],bl
  42f7a5:	pop    rbx
  42f7a6:	rex.RX
  42f7a7:	rex.WB
  42f7a8:	rex.WR
  42f7a9:	rex.RB pop r13
  42f7ab:	and    BYTE PTR [rbx+0x4c],bl
  42f7ae:	rex.WB
  42f7af:	rex.WRX
  42f7b0:	rex.RB pop r13
  42f7b2:	and    BYTE PTR [rax],ah
  42f7b4:	and    BYTE PTR [rax],ah
  42f7b6:	and    BYTE PTR [rax],ah
  42f7b8:	and    BYTE PTR [rbp+0x64],ah
  42f7bb:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x71206568
  42f7c3:	jne    0x42f82a
  42f7c5:	jb     0x42f840
  42f7c7:	and    BYTE PTR [rdx+0x75],ah
  42f7ca:	data16 data16 gs jb 0x42f7ef
  42f7cf:	sub    BYTE PTR [rdi+0x72],ch
  42f7d2:	and    BYTE PTR [rsi+0x69],ah
  42f7d5:	ins    BYTE PTR es:[rdi],dx
  42f7d6:	sub    DWORD PTR gs:[rax],esp
  42f7d9:	ja     0x42f844
  42f7db:	je     0x42f845
  42f7dd:	and    BYTE PTR [rbp+0x78],ah
  42f7e0:	je     0x42f847
  42f7e2:	jb     0x42f852
  42f7e4:	(bad)  
  42f7e5:	ins    BYTE PTR es:[rdi],dx
  42f7e6:	and    BYTE PTR [rbp+0x64],ah
  42f7e9:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x2000000a
  42f7f1:	and    BYTE PTR [rbp+riz*2+0x66],bl
  42f7f5:	and    BYTE PTR [rbx+0x46],bl
  42f7f8:	push   rbp
  42f7f9:	rex.WRX
  42f7fa:	rex.XB
  42f7fb:	rex.WRX
  42f7fc:	rex.B
  42f7fd:	rex.WRB
  42f7fe:	and    BYTE PTR [r11+0x4c],r11b
  42f802:	rex.WB
  42f803:	rex.WRX
  42f804:	rex.RB pop r13
  42f806:	pop    rbp
  42f807:	and    BYTE PTR [rax],ah
  42f809:	gs imul esi,DWORD PTR fs:[rax+riz*1+0x66],0x74636e75
  42f813:	imul   ebp,DWORD PTR [rdi+0x6e],0x66656420
  42f81a:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  42f821:	and    BYTE PTR [rdi+0x69],dh
  42f824:	je     0x42f88e
  42f826:	and    BYTE PTR [rbp+0x78],ah
  42f829:	je     0x42f890
  42f82b:	jb     0x42f89b
  42f82d:	(bad)  
  42f82e:	ins    BYTE PTR es:[rdi],dx
  42f82f:	and    BYTE PTR [rbp+0x64],ah
  42f832:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x2020000a
  42f83a:	pop    rsp
  42f83b:	jo     0x42f85d
  42f83d:	and    BYTE PTR [rax],ah
  42f83f:	and    BYTE PTR [rax],ah
  42f841:	and    BYTE PTR [rax],ah
  42f843:	and    BYTE PTR [rax],ah
  42f845:	and    BYTE PTR [rax],ah
  42f847:	and    BYTE PTR [rax],ah
  42f849:	and    BYTE PTR [rax],ah
  42f84b:	and    BYTE PTR [rax],ah
  42f84d:	and    BYTE PTR [rax],ah
  42f84f:	and    BYTE PTR [rax],ah
  42f851:	jae    0x42f8bb
  42f853:	outs   dx,DWORD PTR ds:[rsi]
  42f854:	ja     0x42f876
  42f856:	je     0x42f8c0
  42f858:	and    BYTE PTR gs:[rbx+0x6f],ah
  42f85c:	outs   dx,BYTE PTR ds:[rsi]
  42f85d:	je     0x42f8c4
  42f85f:	outs   dx,BYTE PTR ds:[rsi]
  42f860:	je     0x42f8d5
  42f862:	and    BYTE PTR [rdi+0x66],ch
  42f865:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f869:	and    BYTE PTR [rcx+0x75],dh
  42f86c:	gs jb  0x42f8e8
  42f86f:	and    BYTE PTR [rdx+0x75],ah
  42f872:	data16 data16 gs jb 0x42f881
  42f877:	add    BYTE PTR [rax],ah
  42f879:	and    BYTE PTR [rdx+rsi*2+0x20],bl
  42f87d:	and    BYTE PTR [rax],ah
  42f87f:	and    BYTE PTR [rax],ah
  42f881:	and    BYTE PTR [rax],ah
  42f883:	and    BYTE PTR [rax],ah
  42f885:	and    BYTE PTR [rax],ah
  42f887:	and    BYTE PTR [rax],ah
  42f889:	and    BYTE PTR [rax],ah
  42f88b:	and    BYTE PTR [rax],ah
  42f88d:	and    BYTE PTR [rax],ah
  42f88f:	and    BYTE PTR [rax],ah
  42f891:	jb     0x42f8f8
  42f893:	jae    0x42f8fa
  42f895:	je     0x42f8b7
  42f897:	sub    BYTE PTR [rbx+0x6c],ah
  42f89a:	gs (bad) 
  42f89c:	jb     0x42f8c7
  42f89e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f8a2:	and    BYTE PTR [rcx+0x75],dh
  42f8a5:	gs jb  0x42f921
  42f8a8:	and    BYTE PTR [rdx+0x75],ah
  42f8ab:	data16 data16 gs jb 0x42f8ba
	...
  42f8b8:	and    BYTE PTR [rax],ah
  42f8ba:	pop    rsp
  42f8bb:	ja     0x42f8dd
  42f8bd:	rex.RX
  42f8be:	rex.WB
  42f8bf:	rex.WR
  42f8c0:	and    BYTE PTR [r8],r12b
  42f8c3:	and    BYTE PTR [rax],ah
  42f8c5:	and    BYTE PTR [rax],ah
  42f8c7:	and    BYTE PTR [rax],ah
  42f8c9:	and    BYTE PTR [rax],ah
  42f8cb:	and    BYTE PTR [rax],ah
  42f8cd:	and    BYTE PTR [rax],ah
  42f8cf:	and    BYTE PTR [rax],ah
  42f8d1:	ja     0x42f945
  42f8d3:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x72657571
  42f8db:	jns    0x42f8fd
  42f8dd:	(bad)  
  42f8de:	jne    0x42f946
  42f8e0:	data16 gs jb 0x42f904
  42f8e4:	je     0x42f955
  42f8e6:	and    BYTE PTR [rsi+0x69],ah
  42f8e9:	ins    BYTE PTR es:[rdi],dx
  42f8ea:	or     al,BYTE PTR gs:[rax]
  42f8ed:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42f8ef:	jo     0x42f966
  42f8f1:	je     0x42f922
  42f8f3:	rex.WRXB jne 0x42f96a
  42f8f6:	jo     0x42f96d
  42f8f8:	je     0x42f904
  42f8fa:	add    BYTE PTR [rax],al
  42f8fc:	add    BYTE PTR [rax],al
  42f8fe:	add    BYTE PTR [rax],al
  42f900:	and    BYTE PTR [rax],ah
  42f902:	pop    rsp
  42f903:	movsxd ebp,DWORD PTR [rdi+0x70]
  42f906:	jns    0x42f928
  42f908:	cs cs and BYTE PTR cs:[rax],ah
  42f90d:	and    BYTE PTR [rax],ah
  42f90f:	and    BYTE PTR [rax],ah
  42f911:	and    BYTE PTR [rax],ah
  42f913:	and    BYTE PTR [rax],ah
  42f915:	and    BYTE PTR [rax],ah
  42f917:	and    BYTE PTR [rax],ah
  42f919:	jo     0x42f980
  42f91b:	jb     0x42f983
  42f91d:	outs   dx,DWORD PTR ds:[rsi]
  42f91e:	jb     0x42f98d
  42f920:	and    BYTE PTR [rbx+0x51],dl
  42f923:	rex.WR and BYTE PTR [rbx+0x4f],r8b
  42f927:	push   rax
  42f928:	pop    rcx
  42f929:	and    BYTE PTR [rdi+0x69],dh
  42f92c:	je     0x42f996
  42f92e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42f932:	(bad)  
  42f933:	and    BYTE PTR [rbx+0x74],dh
  42f936:	jb     0x42f99d
  42f938:	(bad)  
  42f939:	ins    DWORD PTR es:[rdi],dx
  42f93a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f93e:	je     0x42f9a8
  42f940:	and    BYTE PTR gs:[rbx+0x6c],ah
  42f944:	imul   esp,DWORD PTR [rbp+0x6e],0x6f682074
  42f94b:	jae    0x42f9c1
  42f94d:	or     al,BYTE PTR [rax]
  42f94f:	add    BYTE PTR [rax],ah
  42f951:	and    BYTE PTR [rbp+riz*2+0x63],bl
  42f955:	push   0x535b206f
  42f95a:	push   rsp
  42f95b:	push   rdx
  42f95c:	rex.WB
  42f95d:	rex.WRX
  42f95e:	rex.RXB pop r13
  42f960:	and    BYTE PTR [rax],ah
  42f962:	and    BYTE PTR [rax],ah
  42f964:	and    BYTE PTR [rax],ah
  42f966:	and    BYTE PTR [rax],ah
  42f968:	and    BYTE PTR [rdi+0x72],dh
  42f96b:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x69727473
  42f973:	outs   dx,BYTE PTR ds:[rsi]
  42f974:	and    BYTE PTR [edi+ebp*2+0x20],dh
  42f979:	jae    0x42f9ef
  42f97b:	(bad)  
  42f97c:	outs   dx,BYTE PTR ds:[rsi]
  42f97d:	fs (bad) 
  42f97f:	jb     0x42f9e5
  42f981:	and    BYTE PTR [rdi+0x75],ch
  42f984:	je     0x42f9f6
  42f986:	jne    0x42f9fc
  42f988:	or     al,BYTE PTR [rax]
  42f98a:	add    BYTE PTR [rax],al
  42f98c:	add    BYTE PTR [rax],al
  42f98e:	add    BYTE PTR [rax],al
  42f990:	and    BYTE PTR [rax],ah
  42f992:	pop    rsp
  42f993:	imul   esp,DWORD PTR [rax],0x454c4946
  42f999:	and    BYTE PTR [rax],ah
  42f99b:	and    BYTE PTR [rax],ah
  42f99d:	and    BYTE PTR [rax],ah
  42f99f:	and    BYTE PTR [rax],ah
  42f9a1:	and    BYTE PTR [rax],ah
  42f9a3:	and    BYTE PTR [rax],ah
  42f9a5:	and    BYTE PTR [rax],ah
  42f9a7:	and    BYTE PTR [rax],ah
  42f9a9:	gs js  0x42fa11
  42f9ac:	movsxd esi,DWORD PTR [rbp+0x74]
  42f9af:	and    BYTE PTR gs:[rbx+0x6f],ah
  42f9b3:	ins    DWORD PTR es:[rdi],dx
  42f9b4:	ins    DWORD PTR es:[rdi],dx
  42f9b5:	(bad)  
  42f9b6:	outs   dx,BYTE PTR ds:[rsi]
  42f9b7:	fs jae 0x42f9da
  42f9ba:	data16 jb 0x42fa2c
  42f9bd:	ins    DWORD PTR es:[rdi],dx
  42f9be:	and    BYTE PTR [rsi+0x69],ah
  42f9c1:	ins    BYTE PTR es:[rdi],dx
  42f9c2:	or     al,BYTE PTR gs:[rax]
  42f9c5:	add    BYTE PTR [rax],al
  42f9c7:	add    BYTE PTR [rax],ah
  42f9c9:	and    BYTE PTR [rcx+rbp*2+0x72],bl
  42f9cd:	and    BYTE PTR [rsi+0x49],al
  42f9d0:	rex.WR
  42f9d1:	and    BYTE PTR [r8],r12b
  42f9d4:	and    BYTE PTR [rax],ah
  42f9d6:	and    BYTE PTR [rax],ah
  42f9d8:	and    BYTE PTR [rax],ah
  42f9da:	and    BYTE PTR [rax],ah
  42f9dc:	and    BYTE PTR [rax],ah
  42f9de:	and    BYTE PTR [rax],ah
  42f9e0:	and    BYTE PTR [rcx+0x73],ah
  42f9e3:	and    BYTE PTR [rcx+rbp*2+0x2c],bl
  42f9e7:	and    BYTE PTR [rdx+0x75],ah
  42f9ea:	je     0x42fa0c
  42f9ec:	jb     0x42fa53
  42f9ee:	ins    BYTE PTR es:[rdi],dx
  42f9ef:	(bad)  
  42f9f0:	je     0x42fa5b
  42f9f2:	jbe    0x42fa59
  42f9f4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f9f8:	ins    BYTE PTR es:[rdi],dx
  42f9f9:	outs   dx,DWORD PTR ds:[rsi]
  42f9fa:	movsxd esp,DWORD PTR [rcx+0x74]
  42f9fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  42fa04:	movsxd esi,DWORD PTR [rbp+0x72]
  42fa07:	jb     0x42fa6e
  42fa09:	outs   dx,BYTE PTR ds:[rsi]
  42fa0a:	je     0x42fa2c
  42fa0c:	jae    0x42fa71
  42fa0e:	jb     0x42fa79
  42fa10:	jo     0x42fa86
  42fa12:	or     al,BYTE PTR [rax]
  42fa14:	add    BYTE PTR [rax],al
  42fa16:	add    BYTE PTR [rax],al
  42fa18:	and    BYTE PTR [rax],ah
  42fa1a:	pop    rsp
  42fa1b:	outs   dx,DWORD PTR ds:[rsi]
  42fa1c:	and    BYTE PTR [rbx+0x46],bl
  42fa1f:	rex.WB
  42fa20:	rex.WR
  42fa21:	rex.RB pop r13
  42fa23:	and    BYTE PTR [rax],ah
  42fa25:	and    BYTE PTR [rax],ah
  42fa27:	and    BYTE PTR [rax],ah
  42fa29:	and    BYTE PTR [rax],ah
  42fa2b:	and    BYTE PTR [rax],ah
  42fa2d:	and    BYTE PTR [rax],ah
  42fa2f:	and    BYTE PTR [rax],ah
  42fa31:	jae    0x42fa98
  42fa33:	outs   dx,BYTE PTR ds:[rsi]
  42fa34:	and    BYTE PTR fs:[rcx+0x6c],ah
  42fa38:	ins    BYTE PTR es:[rdi],dx
  42fa39:	and    BYTE PTR [rcx+0x75],dh
  42fa3c:	gs jb  0x42fab8
  42fa3f:	and    BYTE PTR [rdx+0x65],dh
  42fa42:	jae    0x42fab9
  42fa44:	ins    BYTE PTR es:[rdi],dx
  42fa45:	je     0x42faba
  42fa47:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42fa4b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
  42fa52:	and    BYTE PTR [rax+rsi*2+0x69],bh
  42fa56:	jo     0x42fabd
  42fa58:	or     al,BYTE PTR [rax]
  42fa5a:	add    BYTE PTR [rax],al
  42fa5c:	add    BYTE PTR [rax],al
  42fa5e:	add    BYTE PTR [rax],al
  42fa60:	and    BYTE PTR [rax],ah
  42fa62:	pop    rsp
  42fa63:	jno    0x42faca
  42fa65:	movsxd ebp,DWORD PTR [rax+0x6f]
  42fa68:	and    BYTE PTR [rbx+0x53],bl
  42fa6b:	push   rsp
  42fa6c:	push   rdx
  42fa6d:	rex.WB
  42fa6e:	rex.WRX
  42fa6f:	rex.RXB pop r13
  42fa71:	and    BYTE PTR [rax],ah
  42fa73:	and    BYTE PTR [rax],ah
  42fa75:	and    BYTE PTR [rax],ah
  42fa77:	and    BYTE PTR [rax],ah
  42fa79:	ja     0x42faed
  42fa7b:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x69727473
  42fa83:	outs   dx,BYTE PTR ds:[rsi]
  42fa84:	and    BYTE PTR [edi+ebp*2+0x20],dh
  42fa89:	jno    0x42fb00
  42fa8b:	gs jb  0x42fb07
  42fa8e:	and    BYTE PTR [rdi+0x75],ch
  42fa91:	je     0x42fb03
  42fa93:	jne    0x42fb09
  42fa95:	and    BYTE PTR [rbx+0x74],dh
  42fa98:	jb     0x42faff
  42fa9a:	(bad)  
  42fa9b:	ins    DWORD PTR es:[rdi],dx
  42fa9c:	and    BYTE PTR [rax],ch
  42fa9e:	jae    0x42fb05
  42faa0:	and    BYTE PTR gs:[rdi+rbp*2+0x29],bl
  42faa5:	or     al,BYTE PTR [rax]
  42faa7:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42faa9:	outs   dx,WORD PTR ds:[rsi]
  42faab:	jb     0x42fb1a
  42faad:	(bad)  
  42faae:	je     0x42fb19
  42fab0:	outs   dx,DWORD PTR ds:[rsi]
  42fab1:	outs   dx,BYTE PTR ds:[rsi]
  42fab2:	(bad)  
  42fab3:	ins    BYTE PTR es:[rdi],dx
  42fab4:	or     al,BYTE PTR [rax]
  42fab6:	add    BYTE PTR [rax],al
  42fab8:	and    BYTE PTR [rax],ah
  42faba:	sub    BYTE PTR [rdi+0x70],ch
  42fabd:	je     0x42fb28
  42fabf:	outs   dx,DWORD PTR ds:[rsi]
  42fac0:	outs   dx,BYTE PTR ds:[rsi]
  42fac1:	jae    0x42fafd
  42fac3:	and    BYTE PTR [rbx+0x20],dl
  42fac6:	cmp    eax,0x6f687320
  42facb:	ja     0x42faed
  42facd:	jae    0x42fb48
  42facf:	jae    0x42fb45
  42fad1:	gs ins DWORD PTR es:[rdi],dx
  42fad3:	and    BYTE PTR [rdi+0x62],ch
  42fad6:	push   0x65
  42fad8:	movsxd esi,DWORD PTR [rbx+rsi*2+0x2c]
  42fadc:	and    BYTE PTR [rbx],ch
  42fade:	and    BYTE PTR [rip+0x64646120],bh        # 0x64a75c04
  42fae4:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x206c616e
  42faec:	fs gs je 0x42fb51
  42faf0:	imul   ebp,DWORD PTR [rcx+rbp*1+0xa],0x0
  42faf8:	and    BYTE PTR [rax],ah
  42fafa:	pop    rsp
  42fafb:	fs pop rbx
  42fafd:	push   rbx
  42fafe:	sub    ebx,DWORD PTR [rbp+0x20]
  42fb01:	and    BYTE PTR [rax],ah
  42fb03:	and    BYTE PTR [rax],ah
  42fb05:	and    BYTE PTR [rax],ah
  42fb07:	and    BYTE PTR [rax],ah
  42fb09:	and    BYTE PTR [rax],ah
  42fb0b:	and    BYTE PTR [rax],ah
  42fb0d:	and    BYTE PTR [rax],ah
  42fb0f:	and    BYTE PTR [rax],ah
  42fb11:	ins    BYTE PTR es:[rdi],dx
  42fb12:	imul   esi,DWORD PTR [rbx+0x74],0x62617420
  42fb19:	ins    BYTE PTR es:[rdi],dx
  42fb1a:	gs jae 0x42fb49
  42fb1d:	and    BYTE PTR [rsi+0x69],dh
  42fb20:	gs ja  0x42fb96
  42fb23:	sub    al,0x20
  42fb25:	(bad)  
  42fb26:	outs   dx,BYTE PTR ds:[rsi]
  42fb27:	and    BYTE PTR fs:[rbx+0x65],dh
  42fb2b:	jno    0x42fba2
  42fb2d:	outs   dx,BYTE PTR gs:[rsi]
  42fb2f:	movsxd esp,DWORD PTR [rbp+0x73]
  42fb32:	or     al,BYTE PTR [rax]
  42fb34:	add    BYTE PTR [rax],al
  42fb36:	add    BYTE PTR [rax],al
  42fb38:	and    BYTE PTR [rax],ah
  42fb3a:	pop    rsp
  42fb3b:	fs pop rbx
  42fb3d:	push   rbx
  42fb3e:	sub    ebx,DWORD PTR [rbp+0x20]
  42fb41:	and    BYTE PTR [rsi+0x41],cl
  42fb44:	rex.WRB
  42fb45:	and    BYTE PTR [r8],r12b
  42fb48:	and    BYTE PTR [rax],ah
  42fb4a:	and    BYTE PTR [rax],ah
  42fb4c:	and    BYTE PTR [rax],ah
  42fb4e:	and    BYTE PTR [rax],ah
  42fb50:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42fb54:	movsxd esi,DWORD PTR [rdx+0x69]
  42fb57:	(bad)  
  42fb58:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  42fb5d:	ins    BYTE PTR es:[rdi],dx
  42fb5e:	gs sub al,0x20
  42fb61:	jbe    0x42fbcc
  42fb63:	gs ja  0x42fb92
  42fb66:	and    BYTE PTR [rbx+0x65],dh
  42fb69:	jno    0x42fbe0
  42fb6b:	outs   dx,BYTE PTR gs:[rsi]
  42fb6d:	movsxd esp,DWORD PTR [rbp+0x2c]
  42fb70:	and    BYTE PTR [rdi+0x72],ch
  42fb73:	and    BYTE PTR [rcx+0x6e],ch
  42fb76:	fs gs js 0x42fb84
  42fb7a:	add    BYTE PTR [rax],al
  42fb7c:	add    BYTE PTR [rax],al
  42fb7e:	add    BYTE PTR [rax],al
  42fb80:	and    BYTE PTR [rax],ah
  42fb82:	pop    rsp
  42fb83:	fs (bad) 
  42fb85:	pop    rbx
  42fb86:	push   rbx
  42fb87:	pop    rbp
  42fb88:	and    BYTE PTR [rax],ah
  42fb8a:	pop    rbx
  42fb8b:	push   rax
  42fb8c:	push   r12
  42fb8e:	push   rsp
  42fb8f:	rex.RB push r10
  42fb91:	rex.WRX pop rbp
  42fb93:	and    BYTE PTR [rax],ah
  42fb95:	and    BYTE PTR [rax],ah
  42fb97:	and    BYTE PTR [rax],ah
  42fb99:	ins    BYTE PTR es:[rdi],dx
  42fb9a:	imul   esi,DWORD PTR [rbx+0x74],0x67676120
  42fba1:	jb     0x42fc08
  42fba3:	addr32 (bad) 
  42fba5:	je     0x42fc0c
  42fba7:	jae    0x42fbb3
  42fba9:	add    BYTE PTR [rax],al
  42fbab:	add    BYTE PTR [rax],al
  42fbad:	add    BYTE PTR [rax],al
  42fbaf:	add    BYTE PTR [rax],ah
  42fbb1:	and    BYTE PTR [rsp+riz*2+0x62],bl
  42fbb5:	pop    rbx
  42fbb6:	sub    ebx,DWORD PTR [rbp+0x20]
  42fbb9:	and    BYTE PTR [rbx+0x50],bl
  42fbbc:	push   r12
  42fbbe:	push   rsp
  42fbbf:	rex.RB push r10
  42fbc1:	rex.WRX pop rbp
  42fbc3:	and    BYTE PTR [rax],ah
  42fbc5:	and    BYTE PTR [rax],ah
  42fbc7:	and    BYTE PTR [rax],ah
  42fbc9:	ins    BYTE PTR es:[rdi],dx
  42fbca:	imul   esi,DWORD PTR [rbx+0x74],0x62617420
  42fbd1:	ins    BYTE PTR es:[rdi],dx
  42fbd2:	gs jae 0x42fc45
  42fbd5:	(bad)  
  42fbd6:	movsxd esp,DWORD PTR [rbp+0x73]
  42fbd9:	or     al,BYTE PTR [rax]
  42fbdb:	add    BYTE PTR [rax],al
  42fbdd:	add    BYTE PTR [rax],al
  42fbdf:	add    BYTE PTR [rax],ah
  42fbe1:	and    BYTE PTR [rsp+riz*2+0x63],bl
  42fbe5:	pop    rbx
  42fbe6:	push   rbx
  42fbe7:	sub    ebx,DWORD PTR [rbp+0x20]
  42fbea:	pop    rbx
  42fbeb:	push   rax
  42fbec:	push   r12
  42fbee:	push   rsp
  42fbef:	rex.RB push r10
  42fbf1:	rex.WRX pop rbp
  42fbf3:	and    BYTE PTR [rax],ah
  42fbf5:	and    BYTE PTR [rax],ah
  42fbf7:	and    BYTE PTR [rax],ah
  42fbf9:	ins    BYTE PTR es:[rdi],dx
  42fbfa:	imul   esi,DWORD PTR [rbx+0x74],0x6e6f6320
  42fc01:	jbe    0x42fc68
  42fc03:	jb     0x42fc78
  42fc05:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73
  42fc0c:	add    BYTE PTR [rax],al
  42fc0e:	add    BYTE PTR [rax],al
  42fc10:	and    BYTE PTR [rax],ah
  42fc12:	pop    rsp
  42fc13:	fs rex.XB pop r11
  42fc16:	sub    ebx,DWORD PTR [rbp+0x20]
  42fc19:	and    BYTE PTR [rbx+0x50],bl
  42fc1c:	push   r12
  42fc1e:	push   rsp
  42fc1f:	rex.RB push r10
  42fc21:	rex.WRX pop rbp
  42fc23:	and    BYTE PTR [rax],ah
  42fc25:	and    BYTE PTR [rax],ah
  42fc27:	and    BYTE PTR [rax],ah
  42fc29:	ins    BYTE PTR es:[rdi],dx
  42fc2a:	imul   esi,DWORD PTR [rbx+0x74],0x73616320
  42fc31:	je     0x42fca6
  42fc33:	or     al,BYTE PTR [rax]
  42fc35:	add    BYTE PTR [rax],al
  42fc37:	add    BYTE PTR [rax],ah
  42fc39:	and    BYTE PTR [rsp+riz*2+0x64],bl
  42fc3d:	pop    rbx
  42fc3e:	push   rbx
  42fc3f:	pop    rbp
  42fc40:	and    BYTE PTR [rax],ah
  42fc42:	pop    rbx
  42fc43:	push   rax
  42fc44:	push   r12
  42fc46:	push   rsp
  42fc47:	rex.RB push r10
  42fc49:	rex.WRX pop rbp
  42fc4b:	and    BYTE PTR [rax],ah
  42fc4d:	and    BYTE PTR [rax],ah
  42fc4f:	and    BYTE PTR [rax],ah
  42fc51:	jae    0x42fcbb
  42fc53:	outs   dx,DWORD PTR ds:[rsi]
  42fc54:	ja     0x42fc76
  42fc56:	outs   dx,DWORD PTR ds:[rsi]
  42fc57:	(bad)  
  42fc58:	push   0x65
  42fc5a:	movsxd esi,DWORD PTR [rax+riz*1+0x64]
  42fc5e:	gs jae 0x42fcc4
  42fc61:	jb     0x42fccc
  42fc63:	jo     0x42fcd9
  42fc65:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6e2073
  42fc6c:	je     0x42fc8e
  42fc6e:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6579616c
  42fc76:	and    BYTE PTR fs:[rbp+0x6c],ah
  42fc7a:	jae    0x42fce1
  42fc7c:	ja     0x42fce6
  42fc7e:	gs jb  0x42fce6
  42fc81:	or     al,BYTE PTR [rax]
  42fc83:	add    BYTE PTR [rax],al
  42fc85:	add    BYTE PTR [rax],al
  42fc87:	add    BYTE PTR [rax],ah
  42fc89:	and    BYTE PTR [rsp+riz*2+0x64],bl
  42fc8d:	jo     0x42fcaf
  42fc8f:	and    BYTE PTR [rax],ah
  42fc91:	and    BYTE PTR [rbx+0x50],bl
  42fc94:	push   r12
  42fc96:	push   rsp
  42fc97:	rex.RB push r10
  42fc99:	rex.WRX pop rbp
  42fc9b:	and    BYTE PTR [rax],ah
  42fc9d:	and    BYTE PTR [rax],ah
  42fc9f:	and    BYTE PTR [rax],ah
  42fca1:	ins    BYTE PTR es:[rdi],dx
  42fca2:	imul   esi,DWORD PTR [rbx+0x74],0x66656420
  42fca9:	(bad)  
  42fcaa:	jne    0x42fd18
  42fcac:	je     0x42fcce
  42fcae:	jo     0x42fd22
  42fcb0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  42fcb7:	jae    0x42fcc3
  42fcb9:	add    BYTE PTR [rax],al
  42fcbb:	add    BYTE PTR [rax],al
  42fcbd:	add    BYTE PTR [rax],al
  42fcbf:	add    BYTE PTR [rax],ah
  42fcc1:	and    BYTE PTR [rsp+riz*2+0x44],bl
  42fcc5:	pop    rbx
  42fcc6:	push   rbx
  42fcc7:	sub    ebx,DWORD PTR [rbp+0x20]
  42fcca:	pop    rbx
  42fccb:	push   rax
  42fccc:	push   r12
  42fcce:	push   rsp
  42fccf:	rex.RB push r10
  42fcd1:	rex.WRX pop rbp
  42fcd3:	and    BYTE PTR [rax],ah
  42fcd5:	and    BYTE PTR [rax],ah
  42fcd7:	and    BYTE PTR [rax],ah
  42fcd9:	ins    BYTE PTR es:[rdi],dx
  42fcda:	imul   esi,DWORD PTR [rbx+0x74],0x6d6f6420
  42fce1:	(bad)  
  42fce2:	imul   ebp,DWORD PTR [rsi+0x73],0x2000000a
  42fce9:	and    BYTE PTR [rsp+riz*2+0x65],bl
  42fced:	je     0x42fd4a
  42fcef:	sub    ebx,DWORD PTR [rbp+0x20]
  42fcf2:	pop    rbx
  42fcf3:	push   rax
  42fcf4:	push   r12
  42fcf6:	push   rsp
  42fcf7:	rex.RB push r10
  42fcf9:	rex.WRX pop rbp
  42fcfb:	and    BYTE PTR [rax],ah
  42fcfd:	and    BYTE PTR [rax],ah
  42fcff:	and    BYTE PTR [rax],ah
  42fd01:	ins    BYTE PTR es:[rdi],dx
  42fd02:	imul   esi,DWORD PTR [rbx+0x74],0x726f6620
  42fd09:	imul   esp,DWORD PTR gs:[rdi+0x6e],0x62617420
  42fd11:	ins    BYTE PTR es:[rdi],dx
  42fd12:	gs jae 0x42fd1f
  42fd15:	add    BYTE PTR [rax],al
  42fd17:	add    BYTE PTR [rax],ah
  42fd19:	and    BYTE PTR [rsp+riz*2+0x65],bl
  42fd1d:	jae    0x42fd7a
  42fd1f:	sub    ebx,DWORD PTR [rbp+0x20]
  42fd22:	pop    rbx
  42fd23:	push   rax
  42fd24:	push   r12
  42fd26:	push   rsp
  42fd27:	rex.RB push r10
  42fd29:	rex.WRX pop rbp
  42fd2b:	and    BYTE PTR [rax],ah
  42fd2d:	and    BYTE PTR [rax],ah
  42fd2f:	and    BYTE PTR [rax],ah
  42fd31:	ins    BYTE PTR es:[rdi],dx
  42fd32:	imul   esi,DWORD PTR [rbx+0x74],0x726f6620
  42fd39:	imul   esp,DWORD PTR gs:[rdi+0x6e],0x72657320
  42fd41:	jbe    0x42fda8
  42fd43:	jb     0x42fdb8
  42fd45:	or     al,BYTE PTR [rax]
  42fd47:	add    BYTE PTR [rax],ah
  42fd49:	and    BYTE PTR [rsp+riz*2+0x65],bl
  42fd4d:	jne    0x42fdaa
  42fd4f:	sub    ebx,DWORD PTR [rbp+0x20]
  42fd52:	pop    rbx
  42fd53:	push   rax
  42fd54:	push   r12
  42fd56:	push   rsp
  42fd57:	rex.RB push r10
  42fd59:	rex.WRX pop rbp
  42fd5b:	and    BYTE PTR [rax],ah
  42fd5d:	and    BYTE PTR [rax],ah
  42fd5f:	and    BYTE PTR [rax],ah
  42fd61:	ins    BYTE PTR es:[rdi],dx
  42fd62:	imul   esi,DWORD PTR [rbx+0x74],0x65737520
  42fd69:	jb     0x42fd8b
  42fd6b:	ins    DWORD PTR es:[rdi],dx
  42fd6c:	(bad)  
  42fd6d:	jo     0x42fddf
  42fd6f:	imul   ebp,DWORD PTR [rsi+0x67],0xa73
  42fd76:	add    BYTE PTR [rax],al
  42fd78:	and    BYTE PTR [rax],ah
  42fd7a:	pop    rsp
  42fd7b:	fs gs ja 0x42fdda
  42fd7f:	sub    ebx,DWORD PTR [rbp+0x20]
  42fd82:	pop    rbx
  42fd83:	push   rax
  42fd84:	push   r12
  42fd86:	push   rsp
  42fd87:	rex.RB push r10
  42fd89:	rex.WRX pop rbp
  42fd8b:	and    BYTE PTR [rax],ah
  42fd8d:	and    BYTE PTR [rax],ah
  42fd8f:	and    BYTE PTR [rax],ah
  42fd91:	ins    BYTE PTR es:[rdi],dx
  42fd92:	imul   esi,DWORD PTR [rbx+0x74],0x726f6620
  42fd99:	imul   esp,DWORD PTR gs:[rdi+0x6e],0x7461642d
  42fda1:	(bad)  
  42fda2:	and    BYTE PTR [rdi+0x72],dh
  42fda5:	(bad)  
  42fda6:	jo     0x42fe18
  42fda8:	gs jb  0x42fe1e
  42fdab:	or     al,BYTE PTR [rax]
  42fdad:	add    BYTE PTR [rax],al
  42fdaf:	add    BYTE PTR [rax],ah
  42fdb1:	and    BYTE PTR [rsp+riz*2+0x66],bl
  42fdb5:	pop    rbx
  42fdb6:	(bad)  
  42fdb7:	outs   dx,BYTE PTR ds:[rsi]
  42fdb8:	je     0x42fe31
  42fdba:	pop    rbp
  42fdbb:	pop    rbx
  42fdbc:	push   rbx
  42fdbd:	sub    ebx,DWORD PTR [rbp+0x20]
  42fdc0:	pop    rbx
  42fdc1:	push   rax
  42fdc2:	push   r12
  42fdc4:	push   rdx
  42fdc5:	rex.WRX pop rbp
  42fdc7:	and    BYTE PTR [rax],ah
  42fdc9:	ins    BYTE PTR es:[rdi],dx
  42fdca:	imul   esi,DWORD PTR [rbx+0x74],0x6e6f5b20
  42fdd1:	ins    BYTE PTR es:[rdi],dx
  42fdd2:	jns    0x42fdf4
  42fdd4:	(bad)  
  42fdd5:	addr32 addr32 (bad) 
  42fdd8:	outs   dx,BYTE PTR ds:[rsi]
  42fdd9:	outs   dx,DWORD PTR ds:[rsi]
  42fdda:	jb     0x42fe49
  42fddc:	(bad)  
  42fddd:	ins    BYTE PTR es:[rdi],dx
  42fdde:	(bad)  
  42fddf:	je     0x42fe53
  42fde1:	imul   esp,DWORD PTR [rdi+0x67],0x772f7265
  42fde8:	imul   ebp,DWORD PTR [rsi+0x64],0x205d776f
  42fdef:	data16 jne 0x42fe60
  42fdf2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42fdf6:	outs   dx,BYTE PTR ds:[rsi]
  42fdf7:	jae    0x42fe03
  42fdf9:	add    BYTE PTR [rax],al
  42fdfb:	add    BYTE PTR [rax],al
  42fdfd:	add    BYTE PTR [rax],al
  42fdff:	add    BYTE PTR [rax],ah
  42fe01:	and    BYTE PTR [rsp+riz*2+0x46],bl
  42fe05:	pop    rbx
  42fe06:	sub    ebx,DWORD PTR [rbp+0x20]
  42fe09:	and    BYTE PTR [rbx+0x50],bl
  42fe0c:	push   r12
  42fe0e:	push   rsp
  42fe0f:	rex.RB push r10
  42fe11:	rex.WRX pop rbp
  42fe13:	and    BYTE PTR [rax],ah
  42fe15:	and    BYTE PTR [rax],ah
  42fe17:	and    BYTE PTR [rax],ah
  42fe19:	ins    BYTE PTR es:[rdi],dx
  42fe1a:	imul   esi,DWORD PTR [rbx+0x74],0x78657420
  42fe21:	je     0x42fe43
  42fe23:	jae    0x42fe8a
  42fe25:	(bad)  
  42fe26:	jb     0x42fe8b
  42fe28:	push   0x6e6f6320
  42fe2d:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42fe33:	je     0x42fe9e
  42fe35:	outs   dx,DWORD PTR ds:[rsi]
  42fe36:	outs   dx,BYTE PTR ds:[rsi]
  42fe37:	jae    0x42fe43
  42fe39:	add    BYTE PTR [rax],al
  42fe3b:	add    BYTE PTR [rax],al
  42fe3d:	add    BYTE PTR [rax],al
  42fe3f:	add    BYTE PTR [rax],ah
  42fe41:	and    BYTE PTR [rsp+riz*2+0x46],bl
  42fe45:	fs pop rbx
  42fe47:	sub    ebx,DWORD PTR [rbp+0x20]
  42fe4a:	pop    rbx
  42fe4b:	push   rax
  42fe4c:	push   r12
  42fe4e:	push   rsp
  42fe4f:	rex.RB push r10
  42fe51:	rex.WRX pop rbp
  42fe53:	and    BYTE PTR [rax],ah
  42fe55:	and    BYTE PTR [rax],ah
  42fe57:	and    BYTE PTR [rax],ah
  42fe59:	ins    BYTE PTR es:[rdi],dx
  42fe5a:	imul   esi,DWORD PTR [rbx+0x74],0x78657420
  42fe61:	je     0x42fe83
  42fe63:	jae    0x42feca
  42fe65:	(bad)  
  42fe66:	jb     0x42fecb
  42fe68:	push   0x63696420
  42fe6d:	je     0x42fed8
  42fe6f:	outs   dx,DWORD PTR ds:[rsi]
  42fe70:	outs   dx,BYTE PTR ds:[rsi]
  42fe71:	(bad)  
  42fe72:	jb     0x42fedd
  42fe74:	gs jae 0x42fe81
  42fe77:	add    BYTE PTR [rax],ah
  42fe79:	and    BYTE PTR [rsp+riz*2+0x46],bl
  42fe7d:	jo     0x42feda
  42fe7f:	sub    ebx,DWORD PTR [rbp+0x20]
  42fe82:	pop    rbx
  42fe83:	push   rax
  42fe84:	push   r12
  42fe86:	push   rsp
  42fe87:	rex.RB push r10
  42fe89:	rex.WRX pop rbp
  42fe8b:	and    BYTE PTR [rax],ah
  42fe8d:	and    BYTE PTR [rax],ah
  42fe8f:	and    BYTE PTR [rax],ah
  42fe91:	ins    BYTE PTR es:[rdi],dx
  42fe92:	imul   esi,DWORD PTR [rbx+0x74],0x78657420
  42fe99:	je     0x42febb
  42fe9b:	jae    0x42ff02
  42fe9d:	(bad)  
  42fe9e:	jb     0x42ff03
  42fea0:	push   0x72617020
  42fea5:	jae    0x42ff0c
  42fea7:	jb     0x42ff1c
  42fea9:	or     al,BYTE PTR [rax]
  42feab:	add    BYTE PTR [rax],al
  42fead:	add    BYTE PTR [rax],al
  42feaf:	add    BYTE PTR [rax],ah
  42feb1:	and    BYTE PTR [rsp+riz*2+0x46],bl
  42feb5:	je     0x42ff12
  42feb7:	sub    ebx,DWORD PTR [rbp+0x20]
  42feba:	pop    rbx
  42febb:	push   rax
  42febc:	push   r12
  42febe:	push   rsp
  42febf:	rex.RB push r10
  42fec1:	rex.WRX pop rbp
  42fec3:	and    BYTE PTR [rax],ah
  42fec5:	and    BYTE PTR [rax],ah
  42fec7:	and    BYTE PTR [rax],ah
  42fec9:	ins    BYTE PTR es:[rdi],dx
  42feca:	imul   esi,DWORD PTR [rbx+0x74],0x78657420
  42fed1:	je     0x42fef3
  42fed3:	jae    0x42ff3a
  42fed5:	(bad)  
  42fed6:	jb     0x42ff3b
  42fed8:	push   0x6d657420
  42fedd:	jo     0x42ff4b
  42fedf:	(bad)  
  42fee0:	je     0x42ff47
  42fee2:	jae    0x42feee
  42fee4:	add    BYTE PTR [rax],al
  42fee6:	add    BYTE PTR [rax],al
  42fee8:	and    BYTE PTR [rax],ah
  42feea:	pop    rsp
  42feeb:	fs addr32 pop rbx
  42feee:	sub    ebx,DWORD PTR [rbp+0x20]
  42fef1:	and    BYTE PTR [rbx+0x50],bl
  42fef4:	push   r12
  42fef6:	push   rsp
  42fef7:	rex.RB push r10
  42fef9:	rex.WRX pop rbp
  42fefb:	and    BYTE PTR [rax],ah
  42fefd:	and    BYTE PTR [rax],ah
  42feff:	and    BYTE PTR [rax],ah
  42ff01:	ins    BYTE PTR es:[rdi],dx
  42ff02:	imul   esi,DWORD PTR [rbx+0x74],0x6c6f7220
  42ff09:	gs jae 0x42ff16
  42ff0c:	add    BYTE PTR [rax],al
  42ff0e:	add    BYTE PTR [rax],al
  42ff10:	and    BYTE PTR [rax],ah
  42ff12:	pop    rsp
  42ff13:	imul   ebx,DWORD PTR fs:[rbx+0x53],0x5b205d2b
  42ff1b:	push   rax
  42ff1c:	push   r12
  42ff1e:	push   rsp
  42ff1f:	rex.RB push r10
  42ff21:	rex.WRX pop rbp
  42ff23:	and    BYTE PTR [rax],ah
  42ff25:	and    BYTE PTR [rax],ah
  42ff27:	and    BYTE PTR [rax],ah
  42ff29:	ins    BYTE PTR es:[rdi],dx
  42ff2a:	imul   esi,DWORD PTR [rbx+0x74],0x646e6920
  42ff31:	gs js  0x42ff99
  42ff34:	jae    0x42ff40
  42ff36:	add    BYTE PTR [rax],al
  42ff38:	and    BYTE PTR [rax],ah
  42ff3a:	pop    rsp
  42ff3b:	fs ins BYTE PTR es:[rdi],dx
  42ff3d:	and    BYTE PTR [rax],ah
  42ff3f:	and    BYTE PTR [rax],ah
  42ff41:	and    BYTE PTR [rax],ah
  42ff43:	and    BYTE PTR [rax],ah
  42ff45:	and    BYTE PTR [rax],ah
  42ff47:	and    BYTE PTR [rax],ah
  42ff49:	and    BYTE PTR [rax],ah
  42ff4b:	and    BYTE PTR [rax],ah
  42ff4d:	and    BYTE PTR [rax],ah
  42ff4f:	and    BYTE PTR [rax],ah
  42ff51:	ins    BYTE PTR es:[rdi],dx
  42ff52:	imul   esi,DWORD PTR [rbx+0x74],0x72616c20
  42ff59:	and    BYTE PTR gs:[edi+0x62],ch
  42ff5e:	push   0x65
  42ff60:	movsxd esi,DWORD PTR [rbx+rsi*2+0x2c]
  42ff64:	and    BYTE PTR [rbx+0x61],dh
  42ff67:	ins    DWORD PTR es:[rdi],dx
  42ff68:	and    BYTE PTR gs:[rcx+0x73],ah
  42ff6c:	and    BYTE PTR [rsp+rbp*2+0x6f],bl
  42ff70:	pop    rdi
  42ff71:	ins    BYTE PTR es:[rdi],dx
  42ff72:	imul   esi,DWORD PTR [rbx+0x74],0x2000000a
  42ff79:	and    BYTE PTR [rsp+riz*2+0x4c],bl
  42ff7d:	pop    rbx
  42ff7e:	push   rbx
  42ff7f:	sub    ebx,DWORD PTR [rbp+0x20]
  42ff82:	pop    rbx
  42ff83:	push   rax
  42ff84:	push   r12
  42ff86:	push   rsp
  42ff87:	rex.RB push r10
  42ff89:	rex.WRX pop rbp
  42ff8b:	and    BYTE PTR [rax],ah
  42ff8d:	and    BYTE PTR [rax],ah
  42ff8f:	and    BYTE PTR [rax],ah
  42ff91:	ins    BYTE PTR es:[rdi],dx
  42ff92:	imul   esi,DWORD PTR [rbx+0x74],0x6f727020
  42ff99:	movsxd esp,DWORD PTR [rbp+0x64]
  42ff9c:	jne    0x430010
  42ff9e:	(bad)  
  42ff9f:	ins    BYTE PTR es:[rdi],dx
  42ffa0:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  42ffa4:	addr32 jne 0x430008
  42ffa7:	addr32 gs jae 0x42ffb5
  42ffab:	add    BYTE PTR [rax],al
  42ffad:	add    BYTE PTR [rax],al
  42ffaf:	add    BYTE PTR [rax],ah
  42ffb1:	and    BYTE PTR [rsp+riz*2+0x6d],bl
  42ffb5:	pop    rbx
  42ffb6:	push   rbx
  42ffb7:	sub    ebx,DWORD PTR [rbp+0x20]
  42ffba:	pop    rbx
  42ffbb:	push   rax
  42ffbc:	push   r12
  42ffbe:	push   rsp
  42ffbf:	rex.RB push r10
  42ffc1:	rex.WRX pop rbp
  42ffc3:	and    BYTE PTR [rax],ah
  42ffc5:	and    BYTE PTR [rax],ah
  42ffc7:	and    BYTE PTR [rax],ah
  42ffc9:	ins    BYTE PTR es:[rdi],dx
  42ffca:	imul   esi,DWORD PTR [rbx+0x74],0x74616d20
  42ffd1:	gs jb  0x43003d
  42ffd4:	(bad)  
  42ffd5:	ins    BYTE PTR es:[rdi],dx
  42ffd6:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  42ffdd:	gs ja  0x430053
  42ffe0:	or     al,BYTE PTR [rax]
  42ffe2:	add    BYTE PTR [rax],al
  42ffe4:	add    BYTE PTR [rax],al
  42ffe6:	add    BYTE PTR [rax],al
  42ffe8:	and    BYTE PTR [rax],ah
  42ffea:	pop    rsp
  42ffeb:	outs   dx,BYTE PTR fs:[rsi]
  42ffed:	pop    rbx
  42ffee:	push   rbx
  42ffef:	sub    ebx,DWORD PTR [rbp+0x20]
  42fff2:	pop    rbx
  42fff3:	push   rax
  42fff4:	push   r12
  42fff6:	push   rsp
  42fff7:	rex.RB push r10
  42fff9:	rex.WRX pop rbp
  42fffb:	and    BYTE PTR [rax],ah
  42fffd:	and    BYTE PTR [rax],ah
  42ffff:	and    BYTE PTR [rax],ah
  430001:	ins    BYTE PTR es:[rdi],dx
  430002:	imul   esi,DWORD PTR [rbx+0x74],0x68637320
  430009:	gs ins DWORD PTR es:[rdi],dx
  43000b:	(bad)  
  43000c:	jae    0x430018
  43000e:	add    BYTE PTR [rax],al
  430010:	and    BYTE PTR [rax],ah
  430012:	pop    rsp
  430013:	outs   dx,DWORD PTR fs:[rsi]
  430015:	pop    rbx
  430016:	push   rbx
  430017:	pop    rbp
  430018:	and    BYTE PTR [rax],ah
  43001a:	pop    rbx
  43001b:	push   rax
  43001c:	push   r12
  43001e:	push   rsp
  43001f:	rex.RB push r10
  430021:	rex.WRX pop rbp
  430023:	and    BYTE PTR [rax],ah
  430025:	and    BYTE PTR [rax],ah
  430027:	and    BYTE PTR [rax],ah
  430029:	ins    BYTE PTR es:[rdi],dx
  43002a:	imul   esi,DWORD PTR [rbx+0x74],0x65706f20
  430031:	jb     0x430094
  430033:	je     0x4300a4
  430035:	jb     0x4300aa
  430037:	or     al,BYTE PTR [rax]
  430039:	add    BYTE PTR [rax],al
  43003b:	add    BYTE PTR [rax],al
  43003d:	add    BYTE PTR [rax],al
  43003f:	add    BYTE PTR [rax],ah
  430041:	and    BYTE PTR [rsp+riz*2+0x4f],bl
  430045:	pop    rbx
  430046:	push   rbx
  430047:	sub    ebx,DWORD PTR [rbp+0x20]
  43004a:	pop    rbx
  43004b:	push   rax
  43004c:	push   r12
  43004e:	push   rsp
  43004f:	rex.RB push r10
  430051:	rex.WRX pop rbp
  430053:	and    BYTE PTR [rax],ah
  430055:	and    BYTE PTR [rax],ah
  430057:	and    BYTE PTR [rax],ah
  430059:	ins    BYTE PTR es:[rdi],dx
  43005a:	imul   esi,DWORD PTR [rbx+0x74],0x6c6f6320
  430061:	ins    BYTE PTR es:[rdi],dx
  430062:	(bad)  
  430063:	je     0x4300ce
  430065:	outs   dx,DWORD PTR ds:[rsi]
  430066:	outs   dx,BYTE PTR ds:[rsi]
  430067:	jae    0x430073
  430069:	add    BYTE PTR [rax],al
  43006b:	add    BYTE PTR [rax],al
  43006d:	add    BYTE PTR [rax],al
  43006f:	add    BYTE PTR [rax],ah
  430071:	and    BYTE PTR [rsp+riz*2+0x70],bl
  430075:	and    BYTE PTR [rax],ah
  430077:	and    BYTE PTR [rax],ah
  430079:	and    BYTE PTR [rbx+0x50],bl
  43007c:	push   r12
  43007e:	push   rsp
  43007f:	rex.RB push r10
  430081:	rex.WRX pop rbp
  430083:	and    BYTE PTR [rax],ah
  430085:	and    BYTE PTR [rax],ah
  430087:	and    BYTE PTR [rax],ah
  430089:	ins    BYTE PTR es:[rdi],dx
  43008a:	imul   esi,DWORD PTR [rbx+0x74],0x62617420
  430091:	ins    BYTE PTR es:[rdi],dx
  430092:	gs sub al,0x20
  430095:	jbe    0x430100
  430097:	gs ja  0x4300c6
  43009a:	and    BYTE PTR [rcx+0x6e],ah
  43009d:	and    BYTE PTR fs:[rbx+0x65],dh
  4300a1:	jno    0x430118
  4300a3:	outs   dx,BYTE PTR gs:[rsi]
  4300a5:	movsxd esp,DWORD PTR [rbp+0x20]
  4300a8:	(bad)  
  4300a9:	movsxd esp,DWORD PTR [rbx+0x65]
  4300ac:	jae    0x430121
  4300ae:	and    BYTE PTR [rax+0x72],dh
  4300b1:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  4300b8:	jae    0x4300c4
  4300ba:	add    BYTE PTR [rax],al
  4300bc:	add    BYTE PTR [rax],al
  4300be:	add    BYTE PTR [rax],al
  4300c0:	and    BYTE PTR [rax],ah
  4300c2:	pop    rsp
  4300c3:	fs jb  0x43012a
  4300c6:	jae    0x4300e8
  4300c8:	pop    rbx
  4300c9:	push   rax
  4300ca:	push   r12
  4300cc:	push   rdx
  4300cd:	rex.WRX xor QWORD PTR [rax],r12
  4300d0:	pop    rbx
  4300d1:	push   rax
  4300d2:	push   r12
  4300d4:	push   rdx
  4300d5:	rex.WRX xor r11b,BYTE PTR [rbp+0x5d]
  4300d9:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4300dd:	je     0x4300ff
  4300df:	jo     0x430146
  4300e1:	jb     0x430110
  4300e3:	fs (bad) 
  4300e5:	je     0x430148
  4300e7:	(bad)  
  4300e9:	jae    0x430150
  4300eb:	and    BYTE PTR [rdx+0x6f],dh
  4300ee:	ins    BYTE PTR es:[rdi],dx
  4300ef:	and    BYTE PTR gs:[rbx+0x65],dh
  4300f3:	je     0x430169
  4300f5:	imul   ebp,DWORD PTR [rsi+0x67],0xa73
  4300fc:	add    BYTE PTR [rax],al
  4300fe:	add    BYTE PTR [rax],al
  430100:	and    BYTE PTR [rax],ah
  430102:	pop    rsp
  430103:	fs jae 0x430161
  430106:	push   rbx
  430107:	sub    ebx,DWORD PTR [rbp+0x20]
  43010a:	pop    rbx
  43010b:	push   rax
  43010c:	push   r12
  43010e:	push   rsp
  43010f:	rex.RB push r10
  430111:	rex.WRX pop rbp
  430113:	and    BYTE PTR [rax],ah
  430115:	and    BYTE PTR [rax],ah
  430117:	and    BYTE PTR [rax],ah
  430119:	ins    BYTE PTR es:[rdi],dx
  43011a:	imul   esi,DWORD PTR [rbx+0x74],0x71657320
  430121:	jne    0x430188
  430123:	outs   dx,BYTE PTR ds:[rsi]
  430124:	movsxd esp,DWORD PTR [rbp+0x73]
  430127:	or     al,BYTE PTR [rax]
  430129:	add    BYTE PTR [rax],al
  43012b:	add    BYTE PTR [rax],al
  43012d:	add    BYTE PTR [rax],al
  43012f:	add    BYTE PTR [rax],ah
  430131:	and    BYTE PTR [rsp+riz*2+0x74],bl
  430135:	pop    rbx
  430136:	push   rbx
  430137:	sub    ebx,DWORD PTR [rbp+0x20]
  43013a:	pop    rbx
  43013b:	push   rax
  43013c:	push   r12
  43013e:	push   rsp
  43013f:	rex.RB push r10
  430141:	rex.WRX pop rbp
  430143:	and    BYTE PTR [rax],ah
  430145:	and    BYTE PTR [rax],ah
  430147:	and    BYTE PTR [rax],ah
  430149:	ins    BYTE PTR es:[rdi],dx
  43014a:	imul   esi,DWORD PTR [rbx+0x74],0x62617420
  430151:	ins    BYTE PTR es:[rdi],dx
  430152:	gs jae 0x43015f
  430155:	add    BYTE PTR [rax],al
  430157:	add    BYTE PTR [rax],ah
  430159:	and    BYTE PTR [rsp+riz*2+0x54],bl
  43015d:	pop    rbx
  43015e:	push   rbx
  43015f:	sub    ebx,DWORD PTR [rbp+0x20]
  430162:	pop    rbx
  430163:	push   rax
  430164:	push   r12
  430166:	push   rsp
  430167:	rex.RB push r10
  430169:	rex.WRX pop rbp
  43016b:	and    BYTE PTR [rax],ah
  43016d:	and    BYTE PTR [rax],ah
  43016f:	and    BYTE PTR [rax],ah
  430171:	ins    BYTE PTR es:[rdi],dx
  430172:	imul   esi,DWORD PTR [rbx+0x74],0x74616420
  430179:	(bad)  
  43017a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43017e:	gs jae 0x43018b
  430181:	add    BYTE PTR [rax],al
  430183:	add    BYTE PTR [rax],al
  430185:	add    BYTE PTR [rax],al
  430187:	add    BYTE PTR [rax],ah
  430189:	and    BYTE PTR [rsp+riz*2+0x75],bl
  43018d:	pop    rbx
  43018e:	sub    ebx,DWORD PTR [rbp+0x20]
  430191:	and    BYTE PTR [rbx+0x50],bl
  430194:	push   r12
  430196:	push   rsp
  430197:	rex.RB push r10
  430199:	rex.WRX pop rbp
  43019b:	and    BYTE PTR [rax],ah
  43019d:	and    BYTE PTR [rax],ah
  43019f:	and    BYTE PTR [rax],ah
  4301a1:	ins    BYTE PTR es:[rdi],dx
  4301a2:	imul   esi,DWORD PTR [rbx+0x74],0x6c6f7220
  4301a9:	gs jae 0x4301b6
  4301ac:	add    BYTE PTR [rax],al
  4301ae:	add    BYTE PTR [rax],al
  4301b0:	and    BYTE PTR [rax],ah
  4301b2:	pop    rsp
  4301b3:	fs jbe 0x430211
  4301b6:	push   rbx
  4301b7:	sub    ebx,DWORD PTR [rbp+0x20]
  4301ba:	pop    rbx
  4301bb:	push   rax
  4301bc:	push   r12
  4301be:	push   rsp
  4301bf:	rex.RB push r10
  4301c1:	rex.WRX pop rbp
  4301c3:	and    BYTE PTR [rax],ah
  4301c5:	and    BYTE PTR [rax],ah
  4301c7:	and    BYTE PTR [rax],ah
  4301c9:	ins    BYTE PTR es:[rdi],dx
  4301ca:	imul   esi,DWORD PTR [rbx+0x74],0x65697620
  4301d1:	ja     0x430246
  4301d3:	or     al,BYTE PTR [rax]
  4301d5:	add    BYTE PTR [rax],al
  4301d7:	add    BYTE PTR [rax],ah
  4301d9:	and    BYTE PTR [rsp+riz*2+0x45],bl
  4301dd:	pop    rbx
  4301de:	push   rbx
  4301df:	sub    ebx,DWORD PTR [rbp+0x20]
  4301e2:	pop    rbx
  4301e3:	push   rax
  4301e4:	push   r12
  4301e6:	push   rsp
  4301e7:	rex.RB push r10
  4301e9:	rex.WRX pop rbp
  4301eb:	and    BYTE PTR [rax],ah
  4301ed:	and    BYTE PTR [rax],ah
  4301ef:	and    BYTE PTR [rax],ah
  4301f1:	ins    BYTE PTR es:[rdi],dx
  4301f2:	imul   esi,DWORD PTR [rbx+0x74],0x726f6620
  4301f9:	imul   esp,DWORD PTR gs:[rdi+0x6e],0x62617420
  430201:	ins    BYTE PTR es:[rdi],dx
  430202:	gs jae 0x43020f
  430205:	add    BYTE PTR [rax],al
  430207:	add    BYTE PTR [rax],ah
  430209:	and    BYTE PTR [rsp+riz*2+0x78],bl
  43020d:	pop    rbx
  43020e:	sub    ebx,DWORD PTR [rbp+0x20]
  430211:	and    BYTE PTR [rbx+0x50],bl
  430214:	push   r12
  430216:	push   rsp
  430217:	rex.RB push r10
  430219:	rex.WRX pop rbp
  43021b:	and    BYTE PTR [rax],ah
  43021d:	and    BYTE PTR [rax],ah
  43021f:	and    BYTE PTR [rax],ah
  430221:	ins    BYTE PTR es:[rdi],dx
  430222:	imul   esi,DWORD PTR [rbx+0x74],0x74786520
  430229:	outs   dx,BYTE PTR gs:[rsi]
  43022b:	jae    0x430296
  43022d:	outs   dx,DWORD PTR ds:[rsi]
  43022e:	outs   dx,BYTE PTR ds:[rsi]
  43022f:	jae    0x43023b
  430231:	add    BYTE PTR [rax],al
  430233:	add    BYTE PTR [rax],al
  430235:	add    BYTE PTR [rax],al
  430237:	add    BYTE PTR [rax],ah
  430239:	and    BYTE PTR [rsp+riz*2+0x79],bl
  43023d:	and    BYTE PTR [rax],ah
  43023f:	and    BYTE PTR [rax],ah
  430241:	and    BYTE PTR [rbx+0x50],bl
  430244:	push   r12
  430246:	push   rsp
  430247:	rex.RB push r10
  430249:	rex.WRX pop rbp
  43024b:	and    BYTE PTR [rax],ah
  43024d:	and    BYTE PTR [rax],ah
  43024f:	and    BYTE PTR [rax],ah
  430251:	ins    BYTE PTR es:[rdi],dx
  430252:	imul   esi,DWORD PTR [rbx+0x74],0x65766520
  430259:	outs   dx,BYTE PTR ds:[rsi]
  43025a:	je     0x43027c
  43025c:	je     0x4302d0
  43025e:	imul   esp,DWORD PTR [rdi+0x67],0xa737265
  430265:	add    BYTE PTR [rax],al
  430267:	add    BYTE PTR [rax],ah
  430269:	and    BYTE PTR [rsp+rbp*2+0x5b],bl
  43026d:	sub    ebx,DWORD PTR [rbp+0x20]
  430270:	and    BYTE PTR [rax],ah
  430272:	pop    rbx
  430273:	push   rax
  430274:	push   r12
  430276:	push   rsp
  430277:	rex.RB push r10
  430279:	rex.WRX pop rbp
  43027b:	and    BYTE PTR [rax],ah
  43027d:	and    BYTE PTR [rax],ah
  43027f:	and    BYTE PTR [rax],ah
  430281:	ins    BYTE PTR es:[rdi],dx
  430282:	imul   esi,DWORD PTR [rbx+0x74],0x74616420
  430289:	(bad)  
  43028a:	(bad)  
  43028c:	jae    0x4302f3
  43028e:	jae    0x43029a
	...
  430298:	and    BYTE PTR [rax],ah
  43029a:	pop    rsp
  43029b:	jae    0x430303
  43029d:	pop    rbx
  43029e:	sub    ebx,DWORD PTR [rbp+0x20]
  4302a1:	rex.RX push rbp
  4302a3:	rex.WRX
  4302a4:	rex.XB
  4302a5:	rex.WRX
  4302a6:	rex.B
  4302a7:	rex.WRB
  4302a8:	and    BYTE PTR [r8],r12b
  4302ab:	and    BYTE PTR [rax],ah
  4302ad:	and    BYTE PTR [rax],ah
  4302af:	and    BYTE PTR [rax],ah
  4302b1:	jae    0x43031b
  4302b3:	outs   dx,DWORD PTR ds:[rsi]
  4302b4:	ja     0x4302d6
  4302b6:	(bad)  
  4302b7:	and    BYTE PTR [rsi+0x75],ah
  4302ba:	outs   dx,BYTE PTR ds:[rsi]
  4302bb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4302bf:	outs   dx,BYTE PTR ds:[rsi]
  4302c0:	(bad)  
  4302c1:	jae    0x4302e3
  4302c3:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  4302cb:	outs   dx,DWORD PTR ds:[rsi]
  4302cc:	outs   dx,BYTE PTR ds:[rsi]
  4302cd:	or     al,BYTE PTR [rax]
  4302cf:	add    BYTE PTR [rax],ah
  4302d1:	and    BYTE PTR [rdx+rdi*2+0x20],bl
  4302d5:	and    BYTE PTR [rax],ah
  4302d7:	and    BYTE PTR [rax],ah
  4302d9:	and    BYTE PTR [rbx+0x50],bl
  4302dc:	push   r12
  4302de:	push   rsp
  4302df:	rex.RB push r10
  4302e1:	rex.WRX pop rbp
  4302e3:	and    BYTE PTR [rax],ah
  4302e5:	and    BYTE PTR [rax],ah
  4302e7:	and    BYTE PTR [rax],ah
  4302e9:	jae    0x43034c
  4302eb:	ins    DWORD PTR es:[rdi],dx
  4302ec:	and    BYTE PTR gs:[rcx+0x73],ah
  4302f0:	and    BYTE PTR [rsp+riz*2+0x70],bl
  4302f4:	or     al,BYTE PTR [rax]
  4302f6:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4302f8:	jb     0x430367
  4302fa:	(bad)  
  4302fb:	je     0x430371
  4302fd:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  430304:	add    BYTE PTR [rax],al
  430306:	add    BYTE PTR [rax],al
  430308:	and    BYTE PTR [rax],ah
  43030a:	pop    rsp
  43030b:	(bad)  
  43030c:	and    BYTE PTR [rax],ah
  43030e:	and    BYTE PTR [rax],ah
  430310:	and    BYTE PTR [rax],ah
  430312:	and    BYTE PTR [rax],ah
  430314:	and    BYTE PTR [rax],ah
  430316:	and    BYTE PTR [rax],ah
  430318:	and    BYTE PTR [rax],ah
  43031a:	and    BYTE PTR [rax],ah
  43031c:	and    BYTE PTR [rax],ah
  43031e:	and    BYTE PTR [rax],ah
  430320:	and    BYTE PTR [rdi+rbp*2+0x67],dh
  430324:	ins    BYTE PTR es:[edi],dx
  430326:	and    BYTE PTR gs:[rdx+0x65],ah
  43032a:	je     0x4303a3
  43032c:	gs outs dx,BYTE PTR gs:[rsi]
  43032f:	and    BYTE PTR [rbp+0x6e],dh
  430332:	(bad)  
  430333:	ins    BYTE PTR es:[rdi],dx
  430334:	imul   esp,DWORD PTR [rdi+0x6e],0x61206465
  43033b:	outs   dx,BYTE PTR ds:[rsi]
  43033c:	and    BYTE PTR fs:[rcx+0x6c],ah
  430340:	imul   esp,DWORD PTR [rdi+0x6e],0x6f206465
  430347:	jne    0x4303bd
  430349:	jo     0x4303c0
  43034b:	je     0x43036d
  43034d:	ins    DWORD PTR es:[rdi],dx
  43034e:	outs   dx,DWORD PTR ds:[rsi]
  43034f:	fs or  al,BYTE PTR gs:[rax]
  430353:	add    BYTE PTR [rax],al
  430355:	add    BYTE PTR [rax],al
  430357:	add    BYTE PTR [rax],ah
  430359:	and    BYTE PTR [rbx+rax*2+0x20],bl
  43035d:	pop    rbx
  43035e:	push   rbx
  43035f:	push   rsp
  430360:	push   rdx
  430361:	rex.WB
  430362:	rex.WRX
  430363:	rex.RXB pop r13
  430365:	and    BYTE PTR [rax],ah
  430367:	and    BYTE PTR [rax],ah
  430369:	and    BYTE PTR [rax],ah
  43036b:	and    BYTE PTR [rax],ah
  43036d:	and    BYTE PTR [rax],ah
  43036f:	and    BYTE PTR [rax],ah
  430371:	jae    0x4303d8
  430373:	je     0x430395
  430375:	je     0x4303d8
  430377:	(bad)  
  430378:	ins    BYTE PTR es:[rdi],dx
  430379:	and    BYTE PTR gs:[rcx+rbp*2+0x74],dh
  43037e:	ins    BYTE PTR es:[rdi],dx
  43037f:	gs sub al,0x20
  430382:	outs   dx,DWORD PTR ds:[rsi]
  430383:	jb     0x4303a5
  430385:	jne    0x4303f5
  430387:	jae    0x4303ee
  430389:	je     0x4303ab
  43038b:	imul   esp,DWORD PTR [rsi+0x20],0x656e6f6e
  430392:	or     al,BYTE PTR [rax]
  430394:	add    BYTE PTR [rax],al
  430396:	add    BYTE PTR [rax],al
  430398:	and    BYTE PTR [rax],ah
  43039a:	pop    rsp
  43039b:	data16 and BYTE PTR [rbx+0x53],bl
  43039f:	push   rsp
  4303a0:	push   rdx
  4303a1:	rex.WB
  4303a2:	rex.WRX
  4303a3:	rex.RXB pop r13
  4303a5:	and    BYTE PTR [rax],ah
  4303a7:	and    BYTE PTR [rax],ah
  4303a9:	and    BYTE PTR [rax],ah
  4303ab:	and    BYTE PTR [rax],ah
  4303ad:	and    BYTE PTR [rax],ah
  4303af:	and    BYTE PTR [rax],ah
  4303b1:	jae    0x43041b
  4303b3:	outs   dx,DWORD PTR ds:[rsi]
  4303b4:	ja     0x4303d6
  4303b6:	outs   dx,DWORD PTR ds:[rsi]
  4303b7:	jb     0x4303d9
  4303b9:	jae    0x430420
  4303bb:	je     0x4303dd
  4303bd:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  4303c3:	jae    0x43042a
  4303c5:	jo     0x430428
  4303c7:	jb     0x43042a
  4303c9:	je     0x43043a
  4303cb:	jb     0x4303ed
  4303cd:	outs   dx,WORD PTR ds:[rsi]
  4303cf:	jb     0x4303f1
  4303d1:	jne    0x430441
  4303d3:	(bad)  
  4303d4:	ins    BYTE PTR es:[rdi],dx
  4303d5:	imul   esp,DWORD PTR [rdi+0x6e],0x71206465
  4303dc:	jne    0x430443
  4303de:	jb     0x430459
  4303e0:	and    BYTE PTR [rdi+0x75],ch
  4303e3:	je     0x430455
  4303e5:	jne    0x43045b
  4303e7:	or     al,BYTE PTR [rax]
  4303e9:	add    BYTE PTR [rax],al
  4303eb:	add    BYTE PTR [rax],al
  4303ed:	add    BYTE PTR [rax],al
  4303ef:	add    BYTE PTR [rax],ah
  4303f1:	and    BYTE PTR [rax+rcx*2+0x20],bl
  4303f5:	and    BYTE PTR [rax],ah
  4303f7:	and    BYTE PTR [rax],ah
  4303f9:	and    BYTE PTR [rax],ah
  4303fb:	and    BYTE PTR [rax],ah
  4303fd:	and    BYTE PTR [rax],ah
  4303ff:	and    BYTE PTR [rax],ah
  430401:	and    BYTE PTR [rax],ah
  430403:	and    BYTE PTR [rax],ah
  430405:	and    BYTE PTR [rax],ah
  430407:	and    BYTE PTR [rax],ah
  430409:	je     0x43047a
  43040b:	addr32 ins BYTE PTR es:[edi],dx
  43040e:	and    BYTE PTR gs:[rax+0x54],cl
  430412:	rex.WRB
  430413:	rex.WR and BYTE PTR [rdi+0x75],r13b
  430417:	je     0x430489
  430419:	jne    0x43048f
  43041b:	and    BYTE PTR [rbp+0x6f],ch
  43041e:	fs and BYTE PTR gs:[rax],ch
  430422:	movsxd esi,DWORD PTR [rbp+0x72]
  430425:	jb     0x43048c
  430427:	outs   dx,BYTE PTR ds:[rsi]
  430428:	je     0x430496
  43042a:	jns    0x43044c
  43042c:	and    eax,0xa2973
  430431:	add    BYTE PTR [rax],al
  430433:	add    BYTE PTR [rax],al
  430435:	add    BYTE PTR [rax],al
  430437:	add    BYTE PTR [rax],ah
  430439:	and    BYTE PTR [rax+rsi*2+0x73],bl
  43043d:	gs je  0x430460
  430440:	pop    rbx
  430441:	rex.WRX
  430442:	rex.B
  430443:	rex.WRB
  430444:	and    BYTE PTR [r11+0x56],r11b
  430448:	rex.B
  430449:	rex.WR push rbp
  43044b:	rex.RB pop r13
  43044d:	pop    rbp
  43044e:	and    BYTE PTR [rax],ah
  430450:	and    BYTE PTR [rbx+0x65],dh
  430453:	je     0x430475
  430455:	je     0x4304b8
  430457:	(bad)  
  430458:	ins    BYTE PTR es:[rdi],dx
  430459:	and    BYTE PTR gs:[rdi+0x75],ch
  43045d:	je     0x4304cf
  43045f:	jne    0x4304d5
  430461:	and    BYTE PTR [rdi+0x70],ch
  430464:	je     0x4304cf
  430466:	outs   dx,DWORD PTR ds:[rsi]
  430467:	outs   dx,BYTE PTR ds:[rsi]
  430468:	or     ah,BYTE PTR [rax]
  43046a:	and    BYTE PTR [rax],ah
  43046c:	and    BYTE PTR [rax],ah
  43046e:	and    BYTE PTR [rax],ah
  430470:	and    BYTE PTR [rax],ah
  430472:	and    BYTE PTR [rax],ah
  430474:	and    BYTE PTR [rax],ah
  430476:	and    BYTE PTR [rax],ah
  430478:	and    BYTE PTR [rax],ah
  43047a:	and    BYTE PTR [rax],ah
  43047c:	and    BYTE PTR [rax],ah
  43047e:	and    BYTE PTR [rax],ah
  430480:	and    BYTE PTR [rax],ah
  430482:	sub    BYTE PTR [rsi+0x41],cl
  430485:	rex.WRB
  430486:	and    BYTE PTR [r10],r15b
  430489:	cmp    eax,0x6f667b20
  43048e:	jb     0x4304fd
  430490:	(bad)  
  430491:	je     0x43050f
  430493:	(bad)  
  430494:	outs   dx,DWORD PTR ds:[rsi]
  430495:	jb     0x4304fb
  430497:	gs jb  0x430516
  43049a:	gs js  0x43050d
  43049d:	(bad)  
  43049e:	outs   dx,BYTE PTR ds:[rsi]
  43049f:	fs gs fs jl 0x43050a
  4304a4:	imul   esp,DWORD PTR [rbp+0x6c],0x70657364
  4304ab:	jl     0x430513
  4304ad:	imul   esp,DWORD PTR [rbp+0x6c],0x70657364
  4304b4:	pop    rdi
  4304b5:	jp     0x43051c
  4304b7:	jb     0x430528
  4304b9:	jl     0x430521
  4304bb:	outs   dx,DWORD PTR ds:[rsi]
  4304bc:	outs   dx,DWORD PTR ds:[rsi]
  4304bd:	je     0x430524
  4304bf:	jb     0x43053d
  4304c1:	outs   dx,BYTE PTR ds:[rsi]
  4304c2:	jne    0x430530
  4304c4:	ins    BYTE PTR es:[rdi],dx
  4304c5:	jl     0x4304d1
  4304c7:	and    BYTE PTR [rax],ah
  4304c9:	and    BYTE PTR [rax],ah
  4304cb:	and    BYTE PTR [rax],ah
  4304cd:	and    BYTE PTR [rax],ah
  4304cf:	and    BYTE PTR [rax],ah
  4304d1:	and    BYTE PTR [rax],ah
  4304d3:	and    BYTE PTR [rax],ah
  4304d5:	and    BYTE PTR [rax],ah
  4304d7:	and    BYTE PTR [rax],ah
  4304d9:	and    BYTE PTR [rax],ah
  4304db:	and    BYTE PTR [rax],ah
  4304dd:	and    BYTE PTR [rax],ah
  4304df:	and    BYTE PTR [rsi+0x75],ch
  4304e2:	ins    DWORD PTR es:[rdi],dx
  4304e3:	gs jb  0x43054f
  4304e6:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
  4304ea:	(bad)  
  4304eb:	ins    BYTE PTR es:[rdi],dx
  4304ec:	gs jl  0x430561
  4304ef:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  4304f3:	fs jae 0x43055b
  4304f6:	jo     0x430574
  4304f8:	jb     0x43055f
  4304fa:	movsxd ebp,DWORD PTR [rdi+0x72]
  4304fd:	fs jae 0x430565
  430500:	jo     0x430561
  430502:	jp     0x430569
  430504:	jb     0x430575
  430506:	jl     0x43057c
  430508:	jne    0x43057a
  43050a:	ins    BYTE PTR es:[rdi],dx
  43050b:	gs jae 0x43056d
  43050e:	outs   dx,DWORD PTR ds:[rsi]
  43050f:	outs   dx,BYTE PTR ds:[rsi]
  430510:	ins    BYTE PTR es:[rdi],dx
  430511:	jns    0x43058f
  430513:	je     0x43057e
  430515:	je     0x430583
  430517:	gs jl  0x43058e
  43051a:	(bad)  
  43051b:	(bad)  
  43051c:	ins    BYTE PTR es:[rdi],dx
  43051d:	gs (bad) 
  43051f:	je     0x430595
  430521:	jb     0x43059f
  430523:	jo     0x430586
  430525:	addr32 gs jb 0x4305a6
  430529:	sub    DWORD PTR [rdx],ecx
  43052b:	add    BYTE PTR [rax],al
  43052d:	add    BYTE PTR [rax],al
  43052f:	add    BYTE PTR [rax],ah
  430531:	and    BYTE PTR [rsp+rsi*2+0x20],bl
  430535:	pop    rbx
  430536:	outs   dx,DWORD PTR ds:[rsi]
  430537:	outs   dx,BYTE PTR ds:[rsi]
  430538:	jl     0x4305a9
  43053a:	data16 pop bp
  43053d:	and    BYTE PTR [rax],ah
  43053f:	and    BYTE PTR [rax],ah
  430541:	and    BYTE PTR [rax],ah
  430543:	and    BYTE PTR [rax],ah
  430545:	and    BYTE PTR [rax],ah
  430547:	and    BYTE PTR [rax],ah
  430549:	jae    0x4305b3
  43054b:	outs   dx,DWORD PTR ds:[rsi]
  43054c:	ja     0x43056e
  43054e:	outs   dx,DWORD PTR ds:[rsi]
  43054f:	outs   dx,BYTE PTR ds:[rsi]
  430550:	ins    BYTE PTR es:[rdi],dx
  430551:	jns    0x430573
  430553:	jb     0x4305c4
  430555:	ja     0x4305ca
  430557:	and    BYTE PTR [rax],ch
  430559:	movsxd esi,DWORD PTR [rbp+0x72]
  43055c:	jb     0x4305c3
  43055e:	outs   dx,BYTE PTR ds:[rsi]
  43055f:	je     0x4305cd
  430561:	jns    0x430583
  430563:	and    eax,0xa2973
  430568:	and    BYTE PTR [rax],ah
  43056a:	pop    rsp
  43056b:	push   rsp
  43056c:	and    BYTE PTR [rbx+0x53],bl
  43056f:	push   rsp
  430570:	push   rdx
  430571:	rex.WB
  430572:	rex.WRX
  430573:	rex.RXB pop r13
  430575:	and    BYTE PTR [rax],ah
  430577:	and    BYTE PTR [rax],ah
  430579:	and    BYTE PTR [rax],ah
  43057b:	and    BYTE PTR [rax],ah
  43057d:	and    BYTE PTR [rax],ah
  43057f:	and    BYTE PTR [rax],ah
  430581:	jae    0x4305e8
  430583:	je     0x4305a5
  430585:	rex.W push rsp
  430587:	rex.WRB
  430588:	rex.WR and BYTE PTR [rsp+rsi*2],r15b
  43058c:	(bad)  
  43058d:	(bad)  
  43058e:	ins    BYTE PTR es:[rdi],dx
  43058f:	gs and BYTE PTR ds:[rcx+riz*2+0x67],dh
  430595:	and    BYTE PTR [rcx+0x74],ah
  430598:	je     0x43060c
  43059a:	imul   esp,DWORD PTR [rdx+0x75],0x2c736574
  4305a1:	and    BYTE PTR [rdi+0x72],ch
  4305a4:	and    BYTE PTR [rbp+0x6e],dh
  4305a7:	jae    0x43060e
  4305a9:	je     0x4305cb
  4305ab:	imul   esp,DWORD PTR [rsi+0x20],0x656e6f6e
  4305b2:	or     al,BYTE PTR [rax]
  4305b4:	add    BYTE PTR [rax],al
  4305b6:	add    BYTE PTR [rax],al
  4305b8:	and    BYTE PTR [rax],ah
  4305ba:	pop    rsp
  4305bb:	js     0x4305dd
  4305bd:	pop    rbx
  4305be:	outs   dx,DWORD PTR ds:[rsi]
  4305bf:	outs   dx,BYTE PTR ds:[rsi]
  4305c0:	jl     0x430631
  4305c2:	data16 data16 jl 0x430627
  4305c6:	jne    0x43063c
  4305c8:	outs   dx,DWORD PTR ds:[rsi]
  4305c9:	pop    rbp
  4305ca:	and    BYTE PTR [rax],ah
  4305cc:	and    BYTE PTR [rax],ah
  4305ce:	and    BYTE PTR [rax],ah
  4305d0:	and    BYTE PTR [rdi+rbp*2+0x67],dh
  4305d4:	ins    BYTE PTR es:[edi],dx
  4305d6:	and    BYTE PTR gs:[rbp+0x78],ah
  4305da:	jo     0x43063d
  4305dc:	outs   dx,BYTE PTR ds:[rsi]
  4305dd:	fs gs and BYTE PTR fs:[rdi+0x75],ch
  4305e3:	je     0x430655
  4305e5:	jne    0x43065b
  4305e7:	and    BYTE PTR [rax],ch
  4305e9:	movsxd esi,DWORD PTR [rbp+0x72]
  4305ec:	jb     0x430653
  4305ee:	outs   dx,BYTE PTR ds:[rsi]
  4305ef:	je     0x43065d
  4305f1:	jns    0x430613
  4305f3:	and    eax,0xa2973
  4305f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4305fa:	outs   dx,BYTE PTR ds:[rsi]
  4305fb:	outs   dx,BYTE PTR ds:[rsi]
  4305fc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  430601:	outs   dx,BYTE PTR ds:[rsi]
  430602:	or     al,BYTE PTR [rax]
  430604:	add    BYTE PTR [rax],al
  430606:	add    BYTE PTR [rax],al
  430608:	and    BYTE PTR [rax],ah
  43060a:	pop    rsp
  43060b:	movsxd ebx,DWORD PTR [rbx+0x6f]
  43060e:	outs   dx,BYTE PTR ds:[rsi]
  43060f:	outs   dx,BYTE PTR ds:[rsi]
  430610:	movsxd esi,DWORD PTR gs:[rbp+rbx*2+0x20]
  430615:	pop    rbx
  430616:	rex.R
  430617:	rex.X
  430618:	rex.WRX
  430619:	rex.B
  43061a:	rex.WRB
  43061b:	rex.RB jl 0x43064b
  43061e:	and    BYTE PTR [rbp+0x53],dl
  430621:	rex.RB push r10
  430623:	jl     0x430652
  430625:	and    BYTE PTR [rax+0x4f],cl
  430628:	push   rbx
  430629:	push   rsp
  43062a:	jl     0x430659
  43062c:	and    BYTE PTR [rax+0x4f],dl
  43062f:	push   rdx
  430630:	push   rsp
  430631:	jl     0x430660
  430633:	pop    rbp
  430634:	or     ah,BYTE PTR [rax]
  430636:	and    BYTE PTR [rax],ah
  430638:	and    BYTE PTR [rax],ah
  43063a:	and    BYTE PTR [rax],ah
  43063c:	and    BYTE PTR [rax],ah
  43063e:	and    BYTE PTR [rax],ah
  430640:	and    BYTE PTR [rax],ah
  430642:	and    BYTE PTR [rax],ah
  430644:	and    BYTE PTR [rax],ah
  430646:	and    BYTE PTR [rax],ah
  430648:	and    BYTE PTR [rax],ah
  43064a:	and    BYTE PTR [rax],ah
  43064c:	and    BYTE PTR [rax],ah
  43064e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  430651:	outs   dx,BYTE PTR ds:[rsi]
  430652:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  430657:	outs   dx,DWORD PTR ds:[rsi]
  430658:	and    BYTE PTR [rsi+0x65],ch
  43065b:	ja     0x43067d
  43065d:	fs (bad) 
  43065f:	je     0x4306c2
  430661:	(bad)  
  430663:	jae    0x4306ca
  430665:	and    BYTE PTR [rax],ch
  430667:	movsxd esi,DWORD PTR [rbp+0x72]
  43066a:	jb     0x4306d1
  43066c:	outs   dx,BYTE PTR ds:[rsi]
  43066d:	je     0x4306db
  43066f:	jns    0x430691
  430671:	and    ah,BYTE PTR [rip+0xa292273]        # 0xa6c28ea
  430677:	add    BYTE PTR [rax],ah
  430679:	and    BYTE PTR [rbx+riz*2+0x5b],bl
  43067d:	outs   dx,DWORD PTR ds:[rsi]
  43067e:	outs   dx,BYTE PTR ds:[rsi]
  43067f:	outs   dx,BYTE PTR ds:[rsi]
  430680:	movsxd esi,DWORD PTR gs:[rbp+rbx*2+0x20]
  430685:	pop    rbx
  430686:	rex.R
  430687:	rex.X
  430688:	rex.WRX
  430689:	rex.B
  43068a:	rex.WRB
  43068b:	rex.RB jl 0x4306bb
  43068e:	and    BYTE PTR [rbp+0x53],dl
  430691:	rex.RB push r10
  430693:	jl     0x4306c2
  430695:	and    BYTE PTR [rax+0x4f],cl
  430698:	push   rbx
  430699:	push   rsp
  43069a:	jl     0x4306c9
  43069c:	and    BYTE PTR [rax+0x4f],dl
  43069f:	push   rdx
  4306a0:	push   rsp
  4306a1:	jl     0x4306d0
  4306a3:	pop    rbp
  4306a4:	or     ah,BYTE PTR [rax]
  4306a6:	and    BYTE PTR [rax],ah
  4306a8:	and    BYTE PTR [rax],ah
  4306aa:	and    BYTE PTR [rax],ah
  4306ac:	and    BYTE PTR [rax],ah
  4306ae:	and    BYTE PTR [rax],ah
  4306b0:	and    BYTE PTR [rax],ah
  4306b2:	and    BYTE PTR [rax],ah
  4306b4:	and    BYTE PTR [rax],ah
  4306b6:	and    BYTE PTR [rax],ah
  4306b8:	and    BYTE PTR [rax],ah
  4306ba:	and    BYTE PTR [rax],ah
  4306bc:	and    BYTE PTR [rax],ah
  4306be:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4306c1:	outs   dx,BYTE PTR ds:[rsi]
  4306c2:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4306c7:	outs   dx,DWORD PTR ds:[rsi]
  4306c8:	and    BYTE PTR [rsi+0x65],ch
  4306cb:	ja     0x4306ed
  4306cd:	fs (bad) 
  4306cf:	je     0x430732
  4306d1:	(bad)  
  4306d3:	jae    0x43073a
  4306d5:	and    BYTE PTR [rax],ch
  4306d7:	movsxd esi,DWORD PTR [rbp+0x72]
  4306da:	jb     0x430741
  4306dc:	outs   dx,BYTE PTR ds:[rsi]
  4306dd:	je     0x43074b
  4306df:	jns    0x430701
  4306e1:	outs   dx,BYTE PTR ds:[rsi]
  4306e2:	outs   dx,DWORD PTR ds:[rsi]
  4306e3:	and    BYTE PTR [rbx+0x6f],ah
  4306e6:	outs   dx,BYTE PTR ds:[rsi]
  4306e7:	outs   dx,BYTE PTR ds:[rsi]
  4306e8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4306ed:	outs   dx,BYTE PTR ds:[rsi]
  4306ee:	sub    DWORD PTR [rdx],ecx
	...
  4306f8:	and    BYTE PTR [rax],ah
  4306fa:	pop    rsp
  4306fb:	outs   dx,BYTE PTR gs:[rsi]
  4306fd:	movsxd ebp,DWORD PTR [rdi+0x64]
  430700:	imul   ebp,DWORD PTR [rsi+0x67],0x4e455b20
  430707:	rex.XB
  430708:	rex.WRXB
  430709:	rex.R
  43070a:	rex.WB
  43070b:	rex.WRX
  43070c:	rex.RXB pop r13
  43070e:	and    BYTE PTR [rax],ah
  430710:	and    BYTE PTR [rbx+0x68],dh
  430713:	outs   dx,DWORD PTR ds:[rsi]
  430714:	ja     0x430736
  430716:	outs   dx,DWORD PTR ds:[rsi]
  430717:	jb     0x430739
  430719:	jae    0x430780
  43071b:	je     0x43073d
  43071d:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  430721:	outs   dx,BYTE PTR ds:[rsi]
  430722:	je     0x430744
  430724:	outs   dx,BYTE PTR gs:[rsi]
  430726:	movsxd ebp,DWORD PTR [rdi+0x64]
  430729:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  430730:	and    BYTE PTR [rax],ah
  430732:	pop    rsp
  430733:	jo     0x430796
  430735:	jae    0x4307aa
  430737:	ja     0x4307a8
  430739:	jb     0x43079f
  43073b:	and    BYTE PTR [rbx+0x55],bl
  43073e:	push   rbx
  43073f:	rex.RB push r10
  430741:	rex.WRX
  430742:	rex.B
  430743:	rex.WRB
  430744:	rex.RB pop r13
  430746:	and    BYTE PTR [rax],ah
  430748:	and    BYTE PTR [rbx+0x65],dh
  43074b:	movsxd esi,DWORD PTR [rbp+0x72]
  43074e:	gs ins BYTE PTR es:[rdi],dx
  430750:	jns    0x430772
  430752:	movsxd ebp,DWORD PTR [rax+0x61]
  430755:	outs   dx,BYTE PTR ds:[rsi]
  430756:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43075c:	and    BYTE PTR [rax+0x61],dh
  43075f:	jae    0x4307d4
  430761:	ja     0x4307d2
  430763:	jb     0x4307c9
  430765:	and    BYTE PTR [rsi+0x6f],ah
  430768:	jb     0x43078a
  43076a:	(bad)  
  43076b:	and    BYTE PTR [rbp+0x73],dh
  43076e:	gs jb  0x43077b
  430771:	add    BYTE PTR [rax],al
  430773:	add    BYTE PTR [rax],al
  430775:	add    BYTE PTR [rax],al
  430777:	add    BYTE PTR [rax],ah
  430779:	and    BYTE PTR [rbx+riz*2+0x6f],bl
  43077d:	outs   dx,BYTE PTR ds:[rsi]
  43077e:	outs   dx,BYTE PTR ds:[rsi]
  43077f:	imul   ebp,DWORD PTR [rsi+0x66],0x2020206f
  430786:	and    BYTE PTR [rax],ah
  430788:	and    BYTE PTR [rax],ah
  43078a:	and    BYTE PTR [rax],ah
  43078c:	and    BYTE PTR [rax],ah
  43078e:	and    BYTE PTR [rax],ah
  430790:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  430794:	jo     0x430802
  430796:	(bad)  
  430797:	jns    0x4307b9
  430799:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  4307a0:	je     0x43080b
  4307a2:	outs   dx,DWORD PTR ds:[rsi]
  4307a3:	outs   dx,BYTE PTR ds:[rsi]
  4307a4:	and    BYTE PTR [rcx+0x62],ah
  4307a7:	outs   dx,DWORD PTR ds:[rsi]
  4307a8:	jne    0x43081e
  4307aa:	and    BYTE PTR [rbx+0x75],ah
  4307ad:	jb     0x430821
  4307af:	outs   dx,BYTE PTR gs:[rsi]
  4307b1:	je     0x4307d3
  4307b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4307b6:	outs   dx,BYTE PTR ds:[rsi]
  4307b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4307bc:	outs   dx,BYTE PTR ds:[rsi]
  4307bd:	or     al,BYTE PTR [rax]
  4307bf:	rex.WRXB jo 0x430827
  4307c2:	jb     0x430825
  4307c4:	je     0x43082f
  4307c6:	outs   dx,BYTE PTR ds:[rsi]
  4307c7:	and    BYTE PTR [ebx+0x79],dl
  4307cb:	jae    0x430841
  4307cd:	gs ins DWORD PTR es:[rdi],dx
  4307cf:	or     al,BYTE PTR [rax]
  4307d1:	add    BYTE PTR [rax],al
  4307d3:	add    BYTE PTR [rax],al
  4307d5:	add    BYTE PTR [rax],al
  4307d7:	add    BYTE PTR [rax],ah
  4307d9:	and    BYTE PTR [rbx+riz*2+0x64],bl
  4307dd:	and    BYTE PTR [rbx+0x44],bl
  4307e0:	rex.WB push r10
  4307e2:	pop    rbp
  4307e3:	and    BYTE PTR [rax],ah
  4307e5:	and    BYTE PTR [rax],ah
  4307e7:	and    BYTE PTR [rax],ah
  4307e9:	and    BYTE PTR [rax],ah
  4307eb:	and    BYTE PTR [rax],ah
  4307ed:	and    BYTE PTR [rax],ah
  4307ef:	and    BYTE PTR [rax],ah
  4307f1:	movsxd ebp,DWORD PTR [rax+0x61]
  4307f4:	outs   dx,BYTE PTR ds:[rsi]
  4307f5:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4307fb:	and    BYTE PTR [rbx+0x75],ah
  4307fe:	jb     0x430872
  430800:	outs   dx,BYTE PTR gs:[rsi]
  430802:	je     0x430824
  430804:	ja     0x430875
  430806:	jb     0x430873
  430808:	imul   ebp,DWORD PTR [rsi+0x67],0x72696420
  43080f:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  430814:	jns    0x430820
  430816:	add    BYTE PTR [rax],al
  430818:	and    BYTE PTR [rax],ah
  43081a:	pop    rsp
  43081b:	jae    0x430882
  43081d:	je     0x430884
  43081f:	outs   dx,BYTE PTR ds:[rsi]
  430820:	jbe    0x430842
  430822:	rex.WRX
  430823:	rex.B
  430824:	rex.WRB
  430825:	and    BYTE PTR [r11+0x56],r11b
  430829:	rex.B
  43082a:	rex.WR push rbp
  43082c:	rex.RB pop r13
  43082e:	and    BYTE PTR [rax],ah
  430830:	and    BYTE PTR [rbx+0x65],dh
  430833:	je     0x430855
  430835:	outs   dx,DWORD PTR ds:[rsi]
  430836:	jb     0x430858
  430838:	jne    0x4308a8
  43083a:	jae    0x4308a1
  43083c:	je     0x43085e
  43083e:	outs   dx,BYTE PTR gs:[rsi]
  430840:	jbe    0x4308ab
  430842:	jb     0x4308b3
  430844:	outs   dx,BYTE PTR ds:[rsi]
  430845:	ins    DWORD PTR es:[rdi],dx
  430846:	outs   dx,BYTE PTR gs:[rsi]
  430848:	je     0x43086a
  43084a:	jbe    0x4308ad
  43084c:	jb     0x4308b7
  43084e:	(bad)  
  43084f:	(bad)  
  430850:	ins    BYTE PTR es:[rdi],dx
  430851:	or     al,BYTE PTR gs:[rax]
  430854:	add    BYTE PTR [rax],al
  430856:	add    BYTE PTR [rax],al
  430858:	and    BYTE PTR [rax],ah
  43085a:	pop    rsp
  43085b:	je     0x4308c6
  43085d:	ins    DWORD PTR es:[rdi],dx
  43085e:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f5b20
  430865:	jl     0x4308d6
  430867:	data16 pop bp
  43086a:	and    BYTE PTR [rax],ah
  43086c:	and    BYTE PTR [rax],ah
  43086e:	and    BYTE PTR [rax],ah
  430870:	and    BYTE PTR [rdi+rbp*2+0x67],dh
  430874:	ins    BYTE PTR es:[edi],dx
  430876:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  43087b:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  430882:	movsxd ebp,DWORD PTR [rdi+0x6d]
  430885:	ins    DWORD PTR es:[rdi],dx
  430886:	(bad)  
  430887:	outs   dx,BYTE PTR ds:[rsi]
  430888:	fs jae 0x4308ab
  43088b:	sub    BYTE PTR [rbx+0x75],ah
  43088e:	jb     0x430902
  430890:	outs   dx,BYTE PTR gs:[rsi]
  430892:	je     0x430900
  430894:	jns    0x4308b6
  430896:	and    eax,0xa2973
  43089b:	add    BYTE PTR [rax],al
  43089d:	add    BYTE PTR [rax],al
  43089f:	add    BYTE PTR [rax],ah
  4308a1:	and    BYTE PTR [rcx+riz*1+0x20],bl
  4308a5:	pop    rbx
  4308a6:	rex.XB
  4308a7:	rex.WRXB
  4308a8:	rex.WRB
  4308a9:	rex.WRB
  4308aa:	rex.B
  4308ab:	rex.WRX
  4308ac:	rex.R pop rbp
  4308ae:	and    BYTE PTR [rax],ah
  4308b0:	and    BYTE PTR [rax],ah
  4308b2:	and    BYTE PTR [rax],ah
  4308b4:	and    BYTE PTR [rax],ah
  4308b6:	and    BYTE PTR [rax],ah
  4308b8:	and    BYTE PTR [rbp+0x78],ah
  4308bb:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  4308bf:	and    BYTE PTR gs:[rbx+0x6f],ah
  4308c3:	ins    DWORD PTR es:[rdi],dx
  4308c4:	ins    DWORD PTR es:[rdi],dx
  4308c5:	(bad)  
  4308c6:	outs   dx,BYTE PTR ds:[rsi]
  4308c7:	and    BYTE PTR fs:[rcx+0x6e],ch
  4308cb:	and    BYTE PTR [rbx+0x68],dh
  4308ce:	gs ins BYTE PTR es:[rdi],dx
  4308d0:	ins    BYTE PTR es:[rdi],dx
  4308d1:	and    BYTE PTR [rdi+0x72],ch
  4308d4:	and    BYTE PTR [rbx+0x74],dh
  4308d7:	(bad)  
  4308d8:	jb     0x43094e
  4308da:	and    BYTE PTR [rcx+0x6e],ch
  4308dd:	je     0x430944
  4308df:	jb     0x430942
  4308e1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  4308e5:	and    BYTE PTR gs:[rbx+0x68],dh
  4308e9:	gs ins BYTE PTR es:[rdi],dx
  4308eb:	ins    BYTE PTR es:[rdi],dx
  4308ec:	or     al,BYTE PTR [rax]
  4308ee:	push   rsi
  4308ef:	(bad)  
  4308f0:	jb     0x43095b
  4308f2:	(bad)  
  4308f3:	(bad)  
  4308f4:	ins    BYTE PTR es:[rdi],dx
  4308f5:	gs jae 0x430902
	...
  430900:	and    BYTE PTR [rax],ah
  430902:	pop    rsp
  430903:	jo     0x430977
  430905:	outs   dx,DWORD PTR ds:[rsi]
  430906:	ins    DWORD PTR es:[rdi],dx
  430907:	jo     0x43097d
  430909:	and    BYTE PTR [rbx+0x54],bl
  43090c:	rex.RB pop r8
  43090e:	push   rsp
  43090f:	pop    rbp
  430910:	and    BYTE PTR [rsi+0x41],cl
  430913:	rex.WRB
  430914:	and    BYTE PTR [r8],r12b
  430917:	and    BYTE PTR [rax],ah
  430919:	jo     0x43098d
  43091b:	outs   dx,DWORD PTR ds:[rsi]
  43091c:	ins    DWORD PTR es:[rdi],dx
  43091d:	jo     0x430993
  43091f:	and    BYTE PTR [rbp+0x73],dh
  430922:	gs jb  0x430945
  430925:	je     0x430996
  430927:	and    BYTE PTR [rbx+0x65],dh
  43092a:	je     0x43094c
  43092c:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  430933:	ins    BYTE PTR es:[rdi],dx
  430934:	and    BYTE PTR [rsi+0x61],dh
  430937:	jb     0x4309a2
  430939:	(bad)  
  43093a:	(bad)  
  43093b:	ins    BYTE PTR es:[rdi],dx
  43093c:	or     al,BYTE PTR gs:[rax]
  43093f:	add    BYTE PTR [rax],ah
  430941:	and    BYTE PTR [rbx+rsi*2+0x65],bl
  430945:	je     0x430967
  430947:	pop    rbx
  430948:	rex.WRX
  430949:	rex.B
  43094a:	rex.WRB
  43094b:	and    BYTE PTR [r11+0x56],r11b
  43094f:	rex.B
  430950:	rex.WR push rbp
  430952:	rex.RB pop r13
  430954:	pop    rbp
  430955:	and    BYTE PTR [rax],ah
  430957:	and    BYTE PTR [rax],ah
  430959:	jae    0x4309c0
  43095b:	je     0x43097d
  43095d:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  430964:	ins    BYTE PTR es:[rdi],dx
  430965:	and    BYTE PTR [rsi+0x61],dh
  430968:	jb     0x4309d3
  43096a:	(bad)  
  43096b:	(bad)  
  43096c:	ins    BYTE PTR es:[rdi],dx
  43096d:	gs sub al,0x20
  430970:	outs   dx,DWORD PTR ds:[rsi]
  430971:	jb     0x430993
  430973:	ins    BYTE PTR es:[rdi],dx
  430974:	imul   esi,DWORD PTR [rbx+0x74],0x6c6c6120
  43097b:	and    BYTE PTR [rcx+0x66],ch
  43097e:	and    BYTE PTR [rsi+0x6f],ch
  430981:	and    BYTE PTR [rax+0x61],dh
  430984:	jb     0x4309e7
  430986:	ins    DWORD PTR es:[rdi],dx
  430987:	gs je  0x4309ef
  43098a:	jb     0x4309ff
  43098c:	or     al,BYTE PTR [rax]
  43098e:	add    BYTE PTR [rax],al
  430990:	and    BYTE PTR [rax],ah
  430992:	pop    rsp
  430993:	jne    0x430a03
  430995:	jae    0x4309fc
  430997:	je     0x4309b9
  430999:	rex.WRX
  43099a:	rex.B
  43099b:	rex.WRB
  43099c:	and    BYTE PTR [r8],r12b
  43099f:	and    BYTE PTR [rax],ah
  4309a1:	and    BYTE PTR [rax],ah
  4309a3:	and    BYTE PTR [rax],ah
  4309a5:	and    BYTE PTR [rax],ah
  4309a7:	and    BYTE PTR [rax],ah
  4309a9:	jne    0x430a19
  4309ab:	jae    0x430a12
  4309ad:	je     0x4309cf
  4309af:	sub    BYTE PTR [rbp+riz*2+0x6c],ah
  4309b3:	gs je  0x430a1b
  4309b6:	sub    DWORD PTR [rax],esp
  4309b8:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  4309bf:	ins    BYTE PTR es:[rdi],dx
  4309c0:	and    BYTE PTR [rsi+0x61],dh
  4309c3:	jb     0x430a2e
  4309c5:	(bad)  
  4309c6:	(bad)  
  4309c7:	ins    BYTE PTR es:[rdi],dx
  4309c8:	or     al,BYTE PTR gs:[rax]
  4309cb:	rex.WR (bad) 
  4309cd:	jb     0x430a36
  4309cf:	and    BYTE PTR gs:[rdi+0x62],cl
  4309d3:	push   0x65
  4309d5:	movsxd esi,DWORD PTR [rbx+rsi*2+0xa]
  4309d9:	add    BYTE PTR [rax],al
  4309db:	add    BYTE PTR [rax],al
  4309dd:	add    BYTE PTR [rax],al
  4309df:	add    BYTE PTR [rax],ah
  4309e1:	and    BYTE PTR [rsp+rbp*2+0x6f],bl
  4309e5:	pop    rdi
  4309e6:	gs js  0x430a59
  4309e9:	outs   dx,DWORD PTR ds:[rsi]
  4309ea:	jb     0x430a60
  4309ec:	and    BYTE PTR [rdi+rcx*2+0x42],cl
  4309f0:	rex.WRXB
  4309f1:	rex.WB
  4309f2:	and    BYTE PTR [rsi+0x49],r8b
  4309f6:	rex.WR
  4309f7:	or     r12b,BYTE PTR [r8]
  4309fa:	and    BYTE PTR [rsp+rbp*2+0x6f],bl
  4309fe:	pop    rdi
  4309ff:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
  430a06:	rex.RX
  430a07:	rex.WB
  430a08:	rex.WR
  430a09:	and    BYTE PTR [r11+0x43],r11b
  430a0d:	rex.WRXB
  430a0e:	rex.WRB
  430a0f:	rex.WRB
  430a10:	rex.RB
  430a11:	rex.WRX push rsp
  430a13:	pop    rbp
  430a14:	or     ah,BYTE PTR [rax]
  430a16:	and    BYTE PTR [rsp+rbp*2+0x6f],bl
  430a1a:	pop    rdi
  430a1b:	ins    BYTE PTR es:[rdi],dx
  430a1c:	imul   esi,DWORD PTR [rbx+0x74],0x5c20200a
  430a23:	ins    BYTE PTR es:[rdi],dx
  430a24:	outs   dx,DWORD PTR ds:[rsi]
  430a25:	pop    rdi
  430a26:	jne    0x430a96
  430a28:	ins    BYTE PTR es:[rdi],dx
  430a29:	imul   ebp,DWORD PTR [rsi+0x6b],0x424f4c20
  430a30:	rex.WRXB
  430a31:	rex.WB
  430a32:	and    BYTE PTR [rax],r12b
  430a35:	and    BYTE PTR [rax],ah
  430a37:	and    BYTE PTR [rax],ah
  430a39:	ins    BYTE PTR es:[rdi],dx
  430a3a:	(bad)  
  430a3b:	jb     0x430aa4
  430a3d:	and    BYTE PTR gs:[rdi+0x62],ch
  430a41:	push   0x65
  430a43:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  430a47:	jo     0x430aae
  430a49:	jb     0x430aac
  430a4b:	je     0x430ab6
  430a4d:	outs   dx,DWORD PTR ds:[rsi]
  430a4e:	outs   dx,BYTE PTR ds:[rsi]
  430a4f:	jae    0x430a5b
  430a51:	add    BYTE PTR [rax],al
  430a53:	rex.B
  430a54:	rex.X
  430a55:	rex.WRXB push r10
  430a57:	push   rsp
  430a58:	add    BYTE PTR [rcx+0x76],al
  430a5b:	(bad)  
  430a5c:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6820656c
  430a64:	gs ins BYTE PTR es:[rdi],dx
  430a66:	jo     0x430aa2
  430a68:	or     al,BYTE PTR [rax]
  430a6a:	and    BYTE PTR [rax],ah
  430a6c:	add    BYTE PTR [rip+0x732a2d],ah        # 0xb6349f
  430a72:	and    eax,0x2a0073
  430a77:	add    BYTE PTR [rbx+0x6f],al
  430a7a:	ins    DWORD PTR es:[rdi],dx
  430a7b:	ins    DWORD PTR es:[rdi],dx
  430a7c:	(bad)  
  430a7d:	outs   dx,BYTE PTR ds:[rsi]
  430a7e:	cmp    ah,BYTE PTR fs:[rax]
  430a81:	and    BYTE PTR [rax],ah
  430a83:	and    BYTE PTR [rax],ah
  430a85:	and    eax,0x65440a73
  430a8a:	jae    0x430aef
  430a8c:	jb     0x430af7
  430a8e:	jo     0x430b04
  430a90:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  430a97:	or     dl,BYTE PTR [rbx+0x79]
  430a9a:	outs   dx,BYTE PTR ds:[rsi]
  430a9b:	je     0x430afe
  430a9d:	js     0x430ad9
  430a9f:	or     ah,BYTE PTR [rip+0xa0a73]        # 0x4d1518
  430aa5:	add    BYTE PTR [rax],al
  430aa7:	add    BYTE PTR [rsi+0x6f],cl
  430aaa:	and    BYTE PTR [rax+0x65],ch
  430aad:	ins    BYTE PTR es:[rdi],dx
  430aae:	jo     0x430ad0
  430ab0:	(bad)  
  430ab1:	jbe    0x430b14
  430ab3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  430abb:	outs   dx,DWORD PTR ds:[rsi]
  430abc:	jb     0x430ade
  430abe:	and    ah,BYTE PTR [rip+0xa2e2273]        # 0xa712d37
  430ac4:	push   rsp
  430ac5:	jb     0x430b40
  430ac7:	and    BYTE PTR [rax+rbp*2+0x20],bl
  430acb:	ja     0x430b36
  430acd:	je     0x430b37
  430acf:	and    BYTE PTR [rsi+0x6f],ch
  430ad2:	and    BYTE PTR [rcx+0x72],ah
  430ad5:	addr32 jne 0x430b45
  430ad8:	outs   dx,BYTE PTR gs:[rsi]
  430ada:	je     0x430b4f
  430adc:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  430ae0:	jae    0x430b47
  430ae2:	and    BYTE PTR gs:[rcx+0x76],ah
  430ae6:	(bad)  
  430ae7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6820656c
  430aef:	gs ins BYTE PTR es:[rdi],dx
  430af1:	jo     0x430b21
  430af3:	or     al,BYTE PTR [rax]
  430af5:	add    BYTE PTR [rax],al
  430af7:	add    BYTE PTR [rax+0x6f],dl
  430afa:	jae    0x430b70
  430afc:	addr32 jb 0x430b64
  430aff:	push   rbx
  430b00:	push   rcx
  430b01:	rex.WR and BYTE PTR [rcx+riz*2+0x74],r8b
  430b06:	(bad)  
  430b07:	(bad)  
  430b09:	jae    0x430b70
  430b0b:	and    BYTE PTR [rbp+0x61],cl
  430b0e:	outs   dx,BYTE PTR ds:[rsi]
  430b0f:	(bad)  
  430b10:	gs ins DWORD PTR es:[edi],dx
  430b13:	outs   dx,BYTE PTR gs:[rsi]
  430b15:	je     0x430b37
  430b17:	push   rbx
  430b18:	jns    0x430b8d
  430b1a:	je     0x430b81
  430b1c:	ins    DWORD PTR es:[rdi],dx
  430b1d:	or     ch,BYTE PTR [rax]
  430b1f:	outs   dx,WORD PTR ds:[rsi]
  430b21:	jb     0x430b90
  430b23:	gs jb  0x430b92
  430b26:	jns    0x430b48
  430b28:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  430b2c:	outs   dx,BYTE PTR ds:[rsi]
  430b2d:	and    BYTE PTR [rcx+0x73],ah
  430b30:	and    BYTE PTR [rax+0x6f],dl
  430b33:	jae    0x430ba9
  430b35:	addr32 jb 0x430b9d
  430b38:	jae    0x430b66
  430b3a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  430b3e:	outs   dx,BYTE PTR ds:[rsi]
  430b3f:	and    BYTE PTR [rcx+0x73],ah
  430b42:	and    BYTE PTR [rax+0x6f],dl
  430b45:	jae    0x430bbb
  430b47:	addr32 jb 0x430baf
  430b4a:	jae    0x430b85
  430b4c:	xor    eax,0x500a0a29
  430b51:	outs   dx,DWORD PTR ds:[rsi]
  430b52:	jb     0x430bc8
  430b54:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f432073
  430b5b:	jo     0x430bd6
  430b5d:	jb     0x430bc8
  430b5f:	addr32 push 0x63282074
  430b65:	sub    DWORD PTR [rax],esp
  430b67:	xor    DWORD PTR [rcx],edi
  430b69:	cmp    DWORD PTR [rsi],esi
  430b6b:	sub    eax,0x34313032
  430b70:	sub    al,0x20
  430b72:	push   rax
  430b73:	outs   dx,DWORD PTR ds:[rsi]
  430b74:	jae    0x430bea
  430b76:	addr32 jb 0x430bde
  430b79:	push   rbx
  430b7a:	push   rcx
  430b7b:	rex.WR and BYTE PTR [rdi+0x6c],r8b
  430b7f:	outs   dx,DWORD PTR ds:[rsi]
  430b80:	(bad)
  430b85:	gs jbe 0x430bed
  430b88:	ins    BYTE PTR es:[rdi],dx
  430b89:	outs   dx,DWORD PTR ds:[rsi]
  430b8a:	jo     0x430bf9
  430b8c:	outs   dx,BYTE PTR gs:[rsi]
  430b8e:	je     0x430bb0
  430b90:	rex.RXB jb 0x430c02
  430b93:	jne    0x430c05
  430b95:	or     cl,BYTE PTR [rdx]
  430b97:	push   rax
  430b98:	outs   dx,DWORD PTR ds:[rsi]
  430b99:	jb     0x430c0f
  430b9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f432073
  430ba2:	jo     0x430c1d
  430ba4:	jb     0x430c0f
  430ba6:	addr32 push 0x63282074
  430bac:	sub    DWORD PTR [rax],esp
  430bae:	xor    DWORD PTR [rcx],edi
  430bb0:	cmp    DWORD PTR [rsp+rbp*1],esi
  430bb3:	and    BYTE PTR [rax+rbp*2+0x65],dl
  430bb7:	and    BYTE PTR [rdx+0x65],dl
  430bba:	outs   dx,BYTE PTR gs:[esi]
  430bbd:	je     0x430c32
  430bbf:	and    BYTE PTR [rdi+0x66],ch
  430bc2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  430bc6:	and    BYTE PTR [rbp+0x6e],dl
  430bc9:	imul   esi,DWORD PTR [rsi+0x65],0x74697372
  430bd0:	jns    0x430bf2
  430bd2:	outs   dx,DWORD PTR ds:[rsi]
  430bd3:	data16 and BYTE PTR [rbx+0x61],al
  430bd7:	ins    BYTE PTR es:[rdi],dx
  430bd8:	imul   esp,DWORD PTR [rsi+0x6f],0x61696e72
  430bdf:	or     cl,BYTE PTR [rdx]
  430be1:	push   rax
  430be2:	gs jb  0x430c52
  430be5:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
  430bec:	je     0x430c5d
  430bee:	and    BYTE PTR [rbp+0x73],dh
  430bf1:	gs sub al,0x20
  430bf4:	movsxd ebp,DWORD PTR [rdi+0x70]
  430bf7:	jns    0x430c25
  430bf9:	and    BYTE PTR [rbp+0x6f],ch
  430bfc:	imul   esp,DWORD PTR fs:[rsi+0x79],0x6e61202c
  430c04:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  430c09:	je     0x430c7d
  430c0b:	imul   esp,DWORD PTR [rdx+0x75],0x74206574
  430c12:	push   0x73207369
  430c17:	outs   dx,DWORD PTR ds:[rsi]
  430c18:	data16 je 0x430c92
  430c1b:	(bad)  
  430c1c:	jb     0x430c83
  430c1e:	and    BYTE PTR [rcx+0x6e],ah
  430c21:	and    BYTE PTR fs:[rcx+0x74],ch
  430c25:	jae    0x430c31
  430c27:	outs   dx,DWORD PTR fs:[rsi]
  430c29:	movsxd esi,DWORD PTR [rbp+0x6d]
  430c2c:	outs   dx,BYTE PTR gs:[rsi]
  430c2e:	je     0x430c91
  430c30:	je     0x430c9b
  430c32:	outs   dx,DWORD PTR ds:[rsi]
  430c33:	outs   dx,BYTE PTR ds:[rsi]
  430c34:	and    BYTE PTR [rsi+0x6f],ah
  430c37:	jb     0x430c59
  430c39:	(bad)  
  430c3a:	outs   dx,BYTE PTR ds:[rsi]
  430c3b:	jns    0x430c5d
  430c3d:	jo     0x430cb4
  430c3f:	jb     0x430cb1
  430c41:	outs   dx,DWORD PTR ds:[rsi]
  430c42:	jae    0x430ca9
  430c44:	sub    al,0x20
  430c46:	ja     0x430cb1
  430c48:	je     0x430cb2
  430c4a:	outs   dx,DWORD PTR ds:[rsi]
  430c4b:	jne    0x430cc1
  430c4d:	and    BYTE PTR [rsi+0x65],ah
  430c50:	gs sub al,0x20
  430c53:	(bad)  
  430c54:	outs   dx,BYTE PTR ds:[rsi]
  430c55:	and    BYTE PTR fs:[rdi+0x69],dh
  430c59:	je     0x430cc3
  430c5b:	outs   dx,DWORD PTR ds:[rsi]
  430c5c:	jne    0x430cd2
  430c5e:	and    BYTE PTR [rcx+0x20],ah
  430c61:	ja     0x430cd5
  430c63:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6761206e
  430c6b:	jb     0x430cd2
  430c6d:	gs ins DWORD PTR es:[rdi],dx
  430c6f:	outs   dx,BYTE PTR gs:[rsi]
  430c71:	je     0x430c7d
  430c73:	imul   esi,DWORD PTR [rbx+0x20],0x65726568
  430c7a:	(bad)  
  430c7b:	jns    0x430c9d
  430c7d:	addr32 jb 0x430ce1
  430c80:	outs   dx,BYTE PTR ds:[rsi]
  430c81:	je     0x430ce8
  430c83:	fs sub al,0x20
  430c86:	jo     0x430cfa
  430c88:	outs   dx,DWORD PTR ds:[rsi]
  430c89:	jbe    0x430cf4
  430c8b:	fs gs and BYTE PTR fs:[rax+rbp*2+0x61],dh
  430c92:	je     0x430cb4
  430c94:	je     0x430cfe
  430c96:	and    BYTE PTR gs:[rcx+0x62],ah
  430c9a:	outs   dx,DWORD PTR ds:[rsi]
  430c9b:	jbe    0x430d02
  430c9d:	and    BYTE PTR [rbx+0x6f],ah
  430ca0:	jo     0x430d1b
  430ca2:	jb     0x430d0d
  430ca4:	addr32 push 0x6f6e2074
  430caa:	je     0x430d15
  430cac:	movsxd esp,DWORD PTR [rbp+0x20]
  430caf:	(bad)  
  430cb0:	outs   dx,BYTE PTR ds:[rsi]
  430cb1:	and    BYTE PTR fs:[rax+rbp*2+0x69],dh
  430cb6:	jae    0x430cc2
  430cb8:	jo     0x430d1b
  430cba:	jb     0x430d1d
  430cbc:	addr32 jb 0x430d20
  430cbf:	jo     0x430d29
  430cc1:	and    BYTE PTR [rcx+0x6e],ah
  430cc4:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  430cc9:	and    BYTE PTR [rsi+0x6f],ah
  430ccc:	ins    BYTE PTR es:[rdi],dx
  430ccd:	ins    BYTE PTR es:[rdi],dx
  430cce:	outs   dx,DWORD PTR ds:[rsi]
  430ccf:	ja     0x430d3a
  430cd1:	outs   dx,BYTE PTR ds:[rsi]
  430cd2:	and    BYTE PTR [edi+esi*2+0x6f],dh
  430cd7:	and    BYTE PTR [rax+0x61],dh
  430cda:	jb     0x430d3d
  430cdc:	addr32 jb 0x430d40
  430cdf:	jo     0x430d49
  430ce1:	jae    0x430d03
  430ce3:	(bad)  
  430ce4:	jo     0x430d56
  430ce6:	gs (bad) 
  430ce8:	jb     0x430d0a
  430cea:	imul   ebp,DWORD PTR [rsi+0x20],0x206c6c61
  430cf1:	movsxd ebp,DWORD PTR [rdi+0x70]
  430cf4:	imul   esp,DWORD PTR [rbp+0x73],0x490a0a2e
  430cfb:	rex.WRX and BYTE PTR [rsi+0x4f],r9b
  430cff:	and    BYTE PTR [rbp+0x56],al
  430d02:	rex.RB
  430d03:	rex.WRX push rsp
  430d05:	and    BYTE PTR [rbx+0x48],dl
  430d08:	rex.B
  430d09:	rex.WR
  430d0a:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  430d0f:	and    BYTE PTR [rbp+0x4e],dl
  430d12:	rex.WB push r14
  430d14:	rex.RB push r10
  430d16:	push   rbx
  430d17:	rex.WB push r12
  430d19:	pop    rcx
  430d1a:	and    BYTE PTR [rdi+0x46],cl
  430d1d:	and    BYTE PTR [rbx+0x41],al
  430d20:	rex.WR
  430d21:	rex.WB
  430d22:	rex.RX
  430d23:	rex.WRXB push r10
  430d25:	rex.WRX
  430d26:	rex.WB
  430d27:	and    BYTE PTR [r10+0x45],al
  430d2b:	and    BYTE PTR [rcx+rcx*2+0x41],cl
  430d2f:	rex.X
  430d30:	rex.WR
  430d31:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  430d36:	rex.B
  430d37:	rex.WRX pop rcx
  430d39:	and    BYTE PTR [rax+0x41],dl
  430d3c:	push   rdx
  430d3d:	push   rsp
  430d3e:	pop    rcx
  430d3f:	and    BYTE PTR [rsi+0x4f],al
  430d42:	push   rdx
  430d43:	or     al,BYTE PTR [rcx+rcx*2+0x52]
  430d47:	rex.RB
  430d48:	rex.XB push r12
  430d4a:	sub    al,0x20
  430d4c:	rex.WB
  430d4d:	rex.WRX
  430d4e:	rex.R
  430d4f:	rex.WB push r10
  430d51:	rex.RB
  430d52:	rex.XB push r12
  430d54:	sub    al,0x20
  430d56:	push   rbx
  430d57:	push   rax
  430d58:	rex.RB
  430d59:	rex.XB
  430d5a:	rex.WB
  430d5b:	rex.B
  430d5c:	rex.WR sub al,0x20
  430d5f:	rex.WB
  430d60:	rex.WRX
  430d61:	rex.XB
  430d62:	rex.WB
  430d63:	rex.R
  430d64:	rex.RB
  430d65:	rex.WRX push rsp
  430d67:	rex.B
  430d68:	rex.WR sub al,0x20
  430d6b:	rex.WRXB push r10
  430d6d:	and    BYTE PTR [rbx+0x4f],al
  430d70:	rex.WRX push rbx
  430d72:	rex.RB push r9
  430d74:	push   rbp
  430d75:	rex.RB
  430d76:	rex.WRX push rsp
  430d78:	rex.WB
  430d79:	rex.B
  430d7a:	rex.WR and BYTE PTR [rcx+rax*2+0x4d],r8b
  430d7f:	rex.B
  430d80:	rex.RXB
  430d81:	rex.RB push r11
  430d83:	sub    al,0x20
  430d85:	rex.WB
  430d86:	rex.WRX
  430d87:	rex.XB
  430d88:	rex.WR push rbp
  430d8a:	rex.R
  430d8b:	rex.WB
  430d8c:	rex.WRX
  430d8d:	or     r9b,BYTE PTR [r15+r9*2+0x53]
  430d92:	push   rsp
  430d93:	and    BYTE PTR [rax+0x52],dl
  430d96:	rex.WRXB
  430d97:	rex.RX
  430d98:	rex.WB push r12
  430d9a:	push   rbx
  430d9b:	sub    al,0x20
  430d9d:	push   r10
  430d9f:	rex.WB push r11
  430da1:	rex.WB
  430da2:	rex.WRX
  430da3:	rex.RXB and BYTE PTR [r15+0x55],r9b
  430da7:	push   rsp
  430da8:	and    BYTE PTR [rdi+0x46],cl
  430dab:	and    BYTE PTR [rax+rcx*2+0x45],dl
  430daf:	and    BYTE PTR [rbp+0x53],dl
  430db2:	and    BYTE PTR [r15+0x46],r9b
  430db6:	and    BYTE PTR [rax+rcx*2+0x49],dl
  430dba:	push   rbx
  430dbb:	and    BYTE PTR [rbx+0x4f],dl
  430dbe:	rex.RX push rsp
  430dc0:	push   rdi
  430dc1:	push   r10
  430dc3:	and    BYTE PTR [r9+0x4e],r8b
  430dc7:	and    BYTE PTR [rcx+0x54],r9b
  430dcb:	push   rbx
  430dcc:	or     al,BYTE PTR [rdi+rcx*2+0x43]
  430dd0:	push   rbp
  430dd1:	rex.WRB
  430dd2:	rex.RB
  430dd3:	rex.WRX push rsp
  430dd5:	push   r12
  430dd7:	rex.WB
  430dd8:	rex.WRXB
  430dd9:	rex.WRX sub al,0x20
  430ddc:	rex.RB push r14
  430dde:	rex.RB
  430ddf:	rex.WRX and BYTE PTR [rcx+0x46],r9b
  430de3:	and    BYTE PTR [rax+rcx*2+0x45],dl
  430de7:	and    BYTE PTR [rbp+0x4e],dl
  430dea:	rex.WB push r14
  430dec:	rex.RB push r10
  430dee:	push   rbx
  430def:	rex.WB push r12
  430df1:	pop    rcx
  430df2:	and    BYTE PTR [rdi+0x46],cl
  430df5:	and    BYTE PTR [rbx+0x41],al
  430df8:	rex.WR
  430df9:	rex.WB
  430dfa:	rex.RX
  430dfb:	rex.WRXB push r10
  430dfd:	rex.WRX
  430dfe:	rex.WB
  430dff:	and    BYTE PTR [r8+0x41],cl
  430e03:	push   rbx
  430e04:	and    BYTE PTR [rdx+0x45],al
  430e07:	rex.RB
  430e08:	rex.WRX and BYTE PTR [rcx+0x44],r8b
  430e0c:	push   rsi
  430e0d:	rex.WB push r11
  430e0f:	rex.RB
  430e10:	and    BYTE PTR [rdi+0x46],r9b
  430e14:	and    BYTE PTR [rax+rcx*2+0x45],dl
  430e18:	or     dl,BYTE PTR [rax+0x4f]
  430e1b:	push   rbx
  430e1c:	push   rbx
  430e1d:	rex.WB
  430e1e:	rex.X
  430e1f:	rex.WB
  430e20:	rex.WR
  430e21:	rex.WB push r12
  430e23:	pop    rcx
  430e24:	and    BYTE PTR [rdi+0x46],cl
  430e27:	and    BYTE PTR [rbx+0x55],dl
  430e2a:	rex.XB
  430e2b:	rex.W and BYTE PTR [rcx+rax*2+0x4d],al
  430e30:	rex.B
  430e31:	rex.RXB
  430e32:	rex.RB
  430e33:	or     cl,BYTE PTR cs:[rdx]
  430e36:	push   rsp
  430e37:	rex.W
  430e38:	and    BYTE PTR [r13+0x4e],r10b
  430e3c:	rex.WB push r14
  430e3e:	rex.RB push r10
  430e40:	push   rbx
  430e41:	rex.WB push r12
  430e43:	pop    rcx
  430e44:	and    BYTE PTR [rdi+0x46],cl
  430e47:	and    BYTE PTR [rbx+0x41],al
  430e4a:	rex.WR
  430e4b:	rex.WB
  430e4c:	rex.RX
  430e4d:	rex.WRXB push r10
  430e4f:	rex.WRX
  430e50:	rex.WB
  430e51:	and    BYTE PTR [r11+0x50],dl
  430e55:	rex.RB
  430e56:	rex.XB
  430e57:	rex.WB
  430e58:	rex.RX
  430e59:	rex.WB
  430e5a:	rex.XB
  430e5b:	rex.B
  430e5c:	rex.WR
  430e5d:	rex.WR pop rcx
  430e5f:	and    BYTE PTR [rcx+rcx*2+0x53],al
  430e63:	rex.XB
  430e64:	rex.WR
  430e65:	rex.B
  430e66:	rex.WB
  430e67:	rex.WRB push r11
  430e69:	and    BYTE PTR [rcx+0x4e],al
  430e6c:	pop    rcx
  430e6d:	and    BYTE PTR [rdi+0x41],dl
  430e70:	push   rdx
  430e71:	push   rdx
  430e72:	rex.B
  430e73:	rex.WRX push rsp
  430e75:	rex.WB
  430e76:	rex.RB push r11
  430e78:	sub    al,0xa
  430e7a:	rex.WB
  430e7b:	rex.WRX
  430e7c:	rex.XB
  430e7d:	rex.WR push rbp
  430e7f:	rex.R
  430e80:	rex.WB
  430e81:	rex.WRX
  430e82:	rex.RXB sub al,0x20
  430e85:	rex.X push rbp
  430e87:	push   rsp
  430e88:	and    BYTE PTR [rsi+0x4f],cl
  430e8b:	push   rsp
  430e8c:	and    BYTE PTR [rcx+rcx*2+0x4d],cl
  430e90:	rex.WB push r12
  430e92:	rex.RB
  430e93:	and    BYTE PTR [rdi+rcx*2+0x2c],r10b
  430e98:	and    BYTE PTR [rax+rcx*2+0x45],dl
  430e9c:	and    BYTE PTR [rcx+0x4d],cl
  430e9f:	push   rax
  430ea0:	rex.WR
  430ea1:	rex.WB
  430ea2:	rex.RB
  430ea3:	and    BYTE PTR [rdi+0x41],r10b
  430ea7:	push   rdx
  430ea8:	push   rdx
  430ea9:	rex.B
  430eaa:	rex.WRX push rsp
  430eac:	rex.WB
  430ead:	rex.RB push r11
  430eaf:	and    BYTE PTR [rdi+0x46],cl
  430eb2:	and    BYTE PTR [rbp+0x45],cl
  430eb5:	push   rdx
  430eb6:	rex.XB
  430eb7:	rex.W
  430eb8:	rex.B
  430eb9:	rex.WRX push rsp
  430ebb:	rex.B
  430ebc:	rex.X
  430ebd:	rex.WB
  430ebe:	rex.WR
  430ebf:	rex.WB push r12
  430ec1:	pop    rcx
  430ec2:	or     al,BYTE PTR [rcx+0x4e]
  430ec5:	and    BYTE PTR [rsi+0x49],r8b
  430ec9:	push   rsp
  430eca:	rex.WRX
  430ecb:	rex.RB push r11
  430ecd:	push   rbx
  430ece:	and    BYTE PTR [rsi+0x4f],al
  430ed1:	push   rdx
  430ed2:	and    BYTE PTR [rcx+0x20],al
  430ed5:	push   rax
  430ed6:	push   r10
  430ed8:	push   rsp
  430ed9:	rex.WB
  430eda:	rex.XB push r13
  430edc:	rex.WR
  430edd:	push   r10
  430edf:	and    BYTE PTR [rax+0x55],dl
  430ee2:	push   rdx
  430ee3:	push   rax
  430ee4:	rex.WRXB push r11
  430ee6:	rex.RB
  430ee7:	and    BYTE PTR cs:[rax],ah
  430eea:	push   rsp
  430eeb:	rex.W
  430eec:	and    BYTE PTR [r11+0x4f],r10b
  430ef0:	rex.RX push rsp
  430ef2:	push   rdi
  430ef3:	push   r10
  430ef5:	and    BYTE PTR [r8+0x52],r10b
  430ef9:	rex.WRXB push r14
  430efb:	rex.WB
  430efc:	rex.R
  430efd:	rex.RB
  430efe:	and    BYTE PTR [rax+0x45],r9b
  430f02:	push   rdx
  430f03:	rex.RB push r13
  430f05:	rex.WRX
  430f06:	rex.R
  430f07:	rex.RB push r10
  430f09:	and    BYTE PTR [rcx+0x53],cl
  430f0c:	or     cl,BYTE PTR [rdi+0x4e]
  430f0f:	and    BYTE PTR [rcx+0x4e],al
  430f12:	and    BYTE PTR [rdx],ah
  430f14:	push   r11
  430f16:	and    BYTE PTR [rcx+0x53],cl
  430f19:	and    ah,BYTE PTR [rax]
  430f1b:	rex.X
  430f1c:	push   r11
  430f1e:	rex.WB push r11
  430f20:	sub    al,0x20
  430f22:	rex.B
  430f23:	rex.WRX
  430f24:	and    BYTE PTR [rax+rcx*2+0x45],r10b
  430f29:	and    BYTE PTR [rbp+0x4e],dl
  430f2c:	rex.WB push r14
  430f2e:	rex.RB push r10
  430f30:	push   rbx
  430f31:	rex.WB push r12
  430f33:	pop    rcx
  430f34:	and    BYTE PTR [rdi+0x46],cl
  430f37:	and    BYTE PTR [rbx+0x41],al
  430f3a:	rex.WR
  430f3b:	rex.WB
  430f3c:	rex.RX
  430f3d:	rex.WRXB push r10
  430f3f:	rex.WRX
  430f40:	rex.WB
  430f41:	and    BYTE PTR [r8+0x41],cl
  430f45:	push   rbx
  430f46:	and    BYTE PTR [rsi+0x4f],cl
  430f49:	and    BYTE PTR [rdi+0x42],cl
  430f4c:	rex.WR
  430f4d:	rex.WB
  430f4e:	rex.RXB
  430f4f:	push   r12
  430f51:	rex.WB
  430f52:	rex.WRXB
  430f53:	rex.WRX push rbx
  430f55:	and    BYTE PTR [rdi+rcx*2+0xa],dl
  430f59:	push   rax
  430f5a:	push   rdx
  430f5b:	rex.WRXB push r14
  430f5d:	rex.WB
  430f5e:	rex.R
  430f5f:	and    BYTE PTR [r13+0x41],r9b
  430f63:	rex.WB
  430f64:	rex.WRX push rsp
  430f66:	rex.RB
  430f67:	rex.WRX
  430f68:	rex.B
  430f69:	rex.WRX
  430f6a:	rex.XB
  430f6b:	rex.RB sub al,0x20
  430f6e:	push   rbx
  430f6f:	push   rbp
  430f70:	push   rax
  430f71:	push   rax
  430f72:	rex.WRXB push r10
  430f74:	push   rsp
  430f75:	sub    al,0x20
  430f77:	push   rbp
  430f78:	push   rax
  430f79:	rex.R
  430f7a:	push   r12
  430f7c:	rex.RB push r11
  430f7e:	sub    al,0x20
  430f80:	rex.RB
  430f81:	rex.WRX
  430f82:	rex.W
  430f83:	rex.B
  430f84:	rex.WRX
  430f85:	rex.XB
  430f86:	rex.RB
  430f87:	rex.WRB
  430f88:	rex.RB
  430f89:	rex.WRX push rsp
  430f8b:	push   rbx
  430f8c:	sub    al,0x20
  430f8e:	rex.WRXB push r10
  430f90:	and    BYTE PTR [rbp+0x4f],cl
  430f93:	rex.R
  430f94:	rex.WB
  430f95:	rex.RX
  430f96:	rex.WB
  430f97:	rex.XB
  430f98:	push   r12
  430f9a:	rex.WB
  430f9b:	rex.WRXB
  430f9c:	rex.WRX push rbx
  430f9e:	or     al,BYTE PTR cs:[rax]
  430fa1:	(bad)  
  430fa2:	(bad)  
  430fa3:	outs   dx,DWORD PTR ds:[rsi]
  430fa4:	jb     0x43101a
  430fa6:	and    BYTE PTR [rax+rbp*2+0x65],dh
  430faa:	and    BYTE PTR [rbx+0x75],ah
  430fad:	jb     0x431021
  430faf:	outs   dx,BYTE PTR gs:[rsi]
  430fb1:	je     0x430fd3
  430fb3:	je     0x431027
  430fb5:	(bad)  
  430fb6:	outs   dx,BYTE PTR ds:[rsi]
  430fb7:	jae    0x43101a
  430fb9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  430fbd:	outs   dx,BYTE PTR ds:[rsi]
  430fbe:	add    BYTE PTR [rcx+0x4c],al
  430fc1:	push   rsp
  430fc2:	rex.RB push r10
  430fc4:	and    BYTE PTR [rcx+0x47],al
  430fc7:	rex.RXB push r10
  430fc9:	rex.RB
  430fca:	rex.RXB
  430fcb:	push   r12
  430fcd:	add    BYTE PTR [r8],r8b
  430fd0:	movsxd ebp,DWORD PTR [rax+0x61]
  430fd3:	outs   dx,BYTE PTR ds:[rsi]
  430fd4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  430fda:	and    BYTE PTR [rbp+riz*2+0x66],ah
  430fde:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  430fe5:	and    BYTE PTR [rdi+0x66],ch
  430fe8:	and    BYTE PTR [rcx+0x6e],ah
  430feb:	and    BYTE PTR [rcx+0x67],ah
  430fee:	addr32 jb 0x431056
  430ff1:	addr32 (bad) 
  430ff3:	je     0x43105a
  430ff5:	and    BYTE PTR [rsi+0x75],ah
  430ff8:	outs   dx,BYTE PTR ds:[rsi]
  430ff9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  430ffd:	outs   dx,BYTE PTR ds:[rsi]
  430ffe:	add    BYTE PTR [rcx+0x4c],al
  431001:	push   rsp
  431002:	rex.RB push r10
  431004:	and    BYTE PTR [rbx+0x4f],al
  431007:	rex.WR
  431008:	rex.WR
  431009:	push   r12
  43100b:	rex.WB
  43100c:	rex.WRXB
  43100d:	rex.WRX add BYTE PTR [rax],r8b
  431010:	movsxd ebp,DWORD PTR [rax+0x61]
  431013:	outs   dx,BYTE PTR ds:[rsi]
  431014:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43101a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43101e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431025:	and    BYTE PTR [rdi+0x66],ch
  431028:	and    BYTE PTR [rcx+0x20],ah
  43102b:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43102e:	ins    BYTE PTR es:[rdi],dx
  43102f:	(bad)  
  431030:	je     0x43109b
  431032:	outs   dx,DWORD PTR ds:[rsi]
  431033:	outs   dx,BYTE PTR ds:[rsi]
  431034:	add    BYTE PTR [rcx+0x4c],al
  431037:	push   rsp
  431038:	rex.RB push r10
  43103a:	and    BYTE PTR [rbx+0x4f],al
  43103d:	rex.WRX push rsi
  43103f:	rex.RB push r10
  431041:	push   rbx
  431042:	rex.WB
  431043:	rex.WRXB
  431044:	rex.WRX add BYTE PTR [rax],r8b
  431047:	add    BYTE PTR [rbx+0x68],ah
  43104a:	(bad)  
  43104b:	outs   dx,BYTE PTR ds:[rsi]
  43104c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431052:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431056:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43105d:	and    BYTE PTR [rdi+0x66],ch
  431060:	and    BYTE PTR [rcx+0x20],ah
  431063:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431066:	jbe    0x4310cd
  431068:	jb     0x4310dd
  43106a:	imul   ebp,DWORD PTR [rdi+0x6e],0x544c4100
  431071:	rex.RB push r10
  431073:	and    BYTE PTR [rcx+rax*2+0x54],al
  431077:	rex.B
  431078:	rex.X
  431079:	push   r11
  43107b:	add    BYTE PTR [r11+0x68],r12b
  43107f:	(bad)  
  431080:	outs   dx,BYTE PTR ds:[rsi]
  431081:	and    BYTE PTR gs:[ecx+0x20],ah
  431086:	fs (bad) 
  431088:	je     0x4310eb
  43108a:	(bad)  
  43108c:	jae    0x4310f3
  43108e:	add    BYTE PTR [rcx+0x4c],al
  431091:	push   rsp
  431092:	rex.RB push r10
  431094:	and    BYTE PTR [rbp+rax*2+0x46],al
  431098:	push   r13
  43109a:	rex.WR push rsp
  43109c:	and    BYTE PTR [rax+0x52],dl
  43109f:	rex.WB push r14
  4310a1:	rex.WB
  4310a2:	rex.WR
  4310a3:	rex.RB
  4310a4:	rex.RXB
  4310a5:	rex.RB push r11
  4310a7:	add    BYTE PTR [rbp+riz*2+0x66],ah
  4310ab:	imul   ebp,DWORD PTR [rsi+0x65],0x66656420
  4310b2:	(bad)  
  4310b3:	jne    0x431121
  4310b5:	je     0x4310d7
  4310b7:	(bad)  
  4310b8:	movsxd esp,DWORD PTR [rbx+0x65]
  4310bb:	jae    0x431130
  4310bd:	and    BYTE PTR [rax+0x72],dh
  4310c0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  4310c7:	jae    0x4310c9
  4310c9:	rex.B
  4310ca:	rex.WR push rsp
  4310cc:	rex.RB push r10
  4310ce:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  4310d2:	rex.B
  4310d3:	rex.WB
  4310d4:	rex.WRX add BYTE PTR [rax],r8b
  4310d7:	add    BYTE PTR [rbx+0x68],ah
  4310da:	(bad)  
  4310db:	outs   dx,BYTE PTR ds:[rsi]
  4310dc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4310e2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4310e6:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4310ed:	and    BYTE PTR [rdi+0x66],ch
  4310f0:	and    BYTE PTR [rcx+0x20],ah
  4310f3:	outs   dx,DWORD PTR fs:[rsi]
  4310f5:	ins    DWORD PTR es:[rdi],dx
  4310f6:	(bad)  
  4310f7:	imul   ebp,DWORD PTR [rsi+0x0],0x45544c41
  4310fe:	push   rdx
  4310ff:	and    BYTE PTR [rbp+0x56],al
  431102:	rex.RB
  431103:	rex.WRX push rsp
  431105:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  431109:	rex.RXB
  43110a:	rex.RXB
  43110b:	rex.RB push r10
  43110d:	add    BYTE PTR [rax],al
  43110f:	add    BYTE PTR [rbx+0x68],ah
  431112:	(bad)  
  431113:	outs   dx,BYTE PTR ds:[rsi]
  431114:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43111a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43111e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431125:	and    BYTE PTR [rdi+0x66],ch
  431128:	and    BYTE PTR [rcx+0x6e],ah
  43112b:	and    BYTE PTR [rbp+0x76],ah
  43112e:	outs   dx,BYTE PTR gs:[rsi]
  431130:	je     0x431152
  431132:	je     0x4311a6
  431134:	imul   esp,DWORD PTR [rdi+0x67],0x41007265
  43113b:	rex.WR push rsp
  43113d:	rex.RB push r10
  43113f:	and    BYTE PTR [rbp+0x58],al
  431142:	push   rsp
  431143:	rex.RB
  431144:	rex.WRX push rbx
  431146:	rex.WB
  431147:	rex.WRXB
  431148:	rex.WRX add BYTE PTR [rax],r8b
  43114b:	add    BYTE PTR [rax],al
  43114d:	add    BYTE PTR [rax],al
  43114f:	add    BYTE PTR [rbx+0x68],ah
  431152:	(bad)  
  431153:	outs   dx,BYTE PTR ds:[rsi]
  431154:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43115a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43115e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431165:	and    BYTE PTR [rdi+0x66],ch
  431168:	and    BYTE PTR [rcx+0x6e],ah
  43116b:	and    BYTE PTR [rbp+0x78],ah
  43116e:	je     0x4311d5
  431170:	outs   dx,BYTE PTR ds:[rsi]
  431171:	jae    0x4311dc
  431173:	outs   dx,DWORD PTR ds:[rsi]
  431174:	outs   dx,BYTE PTR ds:[rsi]
  431175:	add    BYTE PTR [rcx+0x4c],al
  431178:	push   rsp
  431179:	rex.RB push r10
  43117b:	and    BYTE PTR [rsi+0x4f],al
  43117e:	push   rdx
  43117f:	rex.RB
  431180:	rex.WB
  431181:	rex.RXB
  431182:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  431187:	and    BYTE PTR [r15+0x52],dl
  43118b:	push   r8
  43118d:	push   rax
  43118e:	rex.RB push r10
	...
  431198:	movsxd ebp,DWORD PTR [rax+0x61]
  43119b:	outs   dx,BYTE PTR ds:[rsi]
  43119c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4311a2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4311a6:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4311ad:	and    BYTE PTR [rdi+0x66],ch
  4311b0:	and    BYTE PTR [rcx+0x20],ah
  4311b3:	outs   dx,WORD PTR ds:[rsi]
  4311b5:	jb     0x43121c
  4311b7:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  4311be:	(bad)  
  4311bf:	and    BYTE PTR [rdi+0x72],dh
  4311c2:	(bad)  
  4311c3:	jo     0x431235
  4311c5:	gs jb  0x4311c8
  4311c8:	rex.B
  4311c9:	rex.WR push rsp
  4311cb:	rex.RB push r10
  4311cd:	and    BYTE PTR [rsi+0x4f],al
  4311d0:	push   rdx
  4311d1:	rex.RB
  4311d2:	rex.WB
  4311d3:	rex.RXB
  4311d4:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  4311d9:	rex.WR
  4311da:	add    BYTE PTR [r8],r8b
  4311dd:	add    BYTE PTR [rax],al
  4311df:	add    BYTE PTR [rbx+0x68],ah
  4311e2:	(bad)  
  4311e3:	outs   dx,BYTE PTR ds:[rsi]
  4311e4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4311ea:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4311ee:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4311f5:	and    BYTE PTR [rdi+0x66],ch
  4311f8:	and    BYTE PTR [rcx+0x20],ah
  4311fb:	outs   dx,WORD PTR ds:[rsi]
  4311fd:	jb     0x431264
  4311ff:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  431206:	ins    BYTE PTR es:[rdi],dx
  431207:	add    BYTE PTR gs:[rcx+0x4c],al
  43120b:	push   rsp
  43120c:	rex.RB push r10
  43120e:	and    BYTE PTR [rsi+0x55],al
  431211:	rex.WRX
  431212:	rex.XB push r12
  431214:	rex.WB
  431215:	rex.WRXB
  431216:	rex.WRX add BYTE PTR [rbx+0x68],r12b
  43121a:	(bad)  
  43121b:	outs   dx,BYTE PTR ds:[rsi]
  43121c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431222:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431226:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43122d:	and    BYTE PTR [rdi+0x66],ch
  431230:	and    BYTE PTR [rcx+0x20],ah
  431233:	data16 jne 0x4312a4
  431236:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43123a:	outs   dx,BYTE PTR ds:[rsi]
  43123b:	add    BYTE PTR [rcx+0x4c],al
  43123e:	push   rsp
  43123f:	rex.RB push r10
  431241:	and    BYTE PTR [rdi+0x52],al
  431244:	rex.WRXB push r13
  431246:	push   rax
  431247:	add    BYTE PTR [rbx+0x68],ah
  43124a:	(bad)  
  43124b:	outs   dx,BYTE PTR ds:[rsi]
  43124c:	and    BYTE PTR gs:[edx+0x6f],dh
  431251:	ins    BYTE PTR es:[rdi],dx
  431252:	and    BYTE PTR gs:[rsi+0x61],ch
  431256:	ins    DWORD PTR es:[rdi],dx
  431257:	and    BYTE PTR gs:[rdi+0x72],ch
  43125b:	and    BYTE PTR [rbp+0x65],ch
  43125e:	ins    DWORD PTR es:[rdi],dx
  43125f:	(bad)  
  431260:	gs jb  0x4312d6
  431263:	push   0x41007069
  431268:	rex.WR push rsp
  43126a:	rex.RB push r10
  43126c:	and    BYTE PTR [rcx+0x4e],cl
  43126f:	rex.R
  431270:	rex.RB pop r8
  431272:	add    BYTE PTR [rax],al
  431274:	add    BYTE PTR [rax],al
  431276:	add    BYTE PTR [rax],al
  431278:	movsxd ebp,DWORD PTR [rax+0x61]
  43127b:	outs   dx,BYTE PTR ds:[rsi]
  43127c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431282:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431286:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43128d:	and    BYTE PTR [rdi+0x66],ch
  431290:	and    BYTE PTR [rcx+0x6e],ah
  431293:	and    BYTE PTR [rcx+0x6e],ch
  431296:	fs gs js 0x43129a
  43129a:	rex.B
  43129b:	rex.WR push rsp
  43129d:	rex.RB push r10
  43129f:	and    BYTE PTR [rcx+rax*2+0x4e],cl
  4312a3:	rex.RXB push r13
  4312a5:	rex.B
  4312a6:	rex.RXB
  4312a7:	add    BYTE PTR [r8],r8b
  4312aa:	add    BYTE PTR [rax],al
  4312ac:	add    BYTE PTR [rax],al
  4312ae:	add    BYTE PTR [rax],al
  4312b0:	movsxd ebp,DWORD PTR [rax+0x61]
  4312b3:	outs   dx,BYTE PTR ds:[rsi]
  4312b4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4312ba:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4312be:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4312c5:	and    BYTE PTR [rdi+0x66],ch
  4312c8:	and    BYTE PTR [rcx+0x20],ah
  4312cb:	jo     0x43133f
  4312cd:	outs   dx,DWORD PTR ds:[rsi]
  4312ce:	movsxd esp,DWORD PTR [rbp+0x64]
  4312d1:	jne    0x431345
  4312d3:	(bad)  
  4312d4:	ins    BYTE PTR es:[rdi],dx
  4312d5:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  4312d9:	addr32 jne 0x43133d
  4312dc:	add    BYTE PTR gs:[ecx+0x4c],al
  4312e1:	push   rsp
  4312e2:	rex.RB push r10
  4312e4:	and    BYTE PTR [rcx+rax*2+0x52],cl
  4312e8:	rex.RXB
  4312e9:	and    BYTE PTR [r15+0x42],r9b
  4312ed:	rex.WX
  4312ee:	rex.RB
  4312ef:	rex.XB push r12
  4312f1:	add    BYTE PTR [rax],al
  4312f3:	add    BYTE PTR [rax],al
  4312f5:	add    BYTE PTR [rax],al
  4312f7:	add    BYTE PTR [rbx+0x68],ah
  4312fa:	(bad)  
  4312fb:	outs   dx,BYTE PTR ds:[rsi]
  4312fc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431302:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431306:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43130d:	and    BYTE PTR [rdi+0x66],ch
  431310:	and    BYTE PTR [rcx+0x20],ah
  431313:	ins    BYTE PTR es:[rdi],dx
  431314:	(bad)  
  431315:	jb     0x43137e
  431317:	and    BYTE PTR gs:[rdi+0x62],ch
  43131b:	push   0x65
  43131d:	movsxd esi,DWORD PTR [rax+rax*1+0x41]
  431321:	rex.WR push rsp
  431323:	rex.RB push r10
  431325:	and    BYTE PTR [rbp+0x41],cl
  431328:	push   rsp
  431329:	rex.RB push r10
  43132b:	rex.WB
  43132c:	rex.B
  43132d:	rex.WR
  43132e:	rex.WB pop r10
  431330:	rex.RB
  431331:	and    BYTE PTR [rsi+0x49],r10b
  431335:	rex.RB push r15
  431337:	add    BYTE PTR [rbx+0x68],ah
  43133a:	(bad)  
  43133b:	outs   dx,BYTE PTR ds:[rsi]
  43133c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431342:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431346:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43134d:	and    BYTE PTR [rdi+0x66],ch
  431350:	and    BYTE PTR [rcx+0x20],ah
  431353:	ins    DWORD PTR es:[rdi],dx
  431354:	(bad)  
  431355:	je     0x4313bc
  431357:	jb     0x4313c2
  431359:	(bad)  
  43135a:	ins    BYTE PTR es:[rdi],dx
  43135b:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  431362:	gs ja  0x431365
  431365:	rex.B
  431366:	rex.WR push rsp
  431368:	rex.RB push r10
  43136a:	and    BYTE PTR [rdi+0x50],cl
  43136d:	rex.RB push r10
  43136f:	push   r12
  431371:	rex.WRXB push r10
  431373:	add    BYTE PTR [rax],al
  431375:	add    BYTE PTR [rax],al
  431377:	add    BYTE PTR [rbx+0x68],ah
  43137a:	(bad)  
  43137b:	outs   dx,BYTE PTR ds:[rsi]
  43137c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431382:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431386:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43138d:	and    BYTE PTR [rdi+0x66],ch
  431390:	and    BYTE PTR [rcx+0x6e],ah
  431393:	and    BYTE PTR [rdi+0x70],ch
  431396:	gs jb  0x4313fa
  431399:	je     0x43140a
  43139b:	jb     0x43139d
  43139d:	rex.B
  43139e:	rex.WR push rsp
  4313a0:	rex.RB push r10
  4313a2:	and    BYTE PTR [rdi+0x50],cl
  4313a5:	rex.RB push r10
  4313a7:	push   r12
  4313a9:	rex.WRXB push r10
  4313ab:	and    BYTE PTR [rbx+0x4c],al
  4313ae:	push   r11
  4313b0:	push   rbx
  4313b1:	add    BYTE PTR [rax],al
  4313b3:	add    BYTE PTR [rax],al
  4313b5:	add    BYTE PTR [rax],al
  4313b7:	add    BYTE PTR [rbx+0x68],ah
  4313ba:	(bad)  
  4313bb:	outs   dx,BYTE PTR ds:[rsi]
  4313bc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4313c2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4313c6:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4313cd:	and    BYTE PTR [rdi+0x66],ch
  4313d0:	and    BYTE PTR [rcx+0x6e],ah
  4313d3:	and    BYTE PTR [rdi+0x70],ch
  4313d6:	gs jb  0x43143a
  4313d9:	je     0x43144a
  4313db:	jb     0x4313fd
  4313dd:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4313e1:	jae    0x4313e3
  4313e3:	rex.B
  4313e4:	rex.WR push rsp
  4313e6:	rex.RB push r10
  4313e8:	and    BYTE PTR [rdi+0x50],cl
  4313eb:	rex.RB push r10
  4313ed:	push   r12
  4313ef:	rex.WRXB push r10
  4313f1:	and    BYTE PTR [rsi+0x41],al
  4313f4:	rex.WRB
  4313f5:	rex.WB
  4313f6:	rex.WR pop rcx
	...
  431400:	movsxd ebp,DWORD PTR [rax+0x61]
  431403:	outs   dx,BYTE PTR ds:[rsi]
  431404:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43140a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43140e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431415:	and    BYTE PTR [rdi+0x66],ch
  431418:	and    BYTE PTR [rcx+0x6e],ah
  43141b:	and    BYTE PTR [rdi+0x70],ch
  43141e:	gs jb  0x431482
  431421:	je     0x431492
  431423:	jb     0x431445
  431425:	data16 (bad) 
  431427:	ins    DWORD PTR es:[rdi],dx
  431428:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x45544c41
  431430:	push   rdx
  431431:	and    BYTE PTR [rdx+0x4f],dl
  431434:	rex.WR
  431435:	add    BYTE PTR [r11+0x68],r12b
  431439:	(bad)  
  43143a:	outs   dx,BYTE PTR ds:[rsi]
  43143b:	and    BYTE PTR gs:[ecx+0x20],ah
  431440:	fs (bad) 
  431442:	je     0x4314a5
  431444:	(bad)  
  431446:	jae    0x4314ad
  431448:	and    BYTE PTR [rdx+0x6f],dh
  43144b:	ins    BYTE PTR es:[rdi],dx
  43144c:	add    BYTE PTR gs:[rcx+0x4c],al
  431450:	push   rsp
  431451:	rex.RB push r10
  431453:	and    BYTE PTR [rdx+0x55],dl
  431456:	rex.WR
  431457:	add    BYTE PTR [r8],r8b
  43145a:	add    BYTE PTR [rax],al
  43145c:	add    BYTE PTR [rax],al
  43145e:	add    BYTE PTR [rax],al
  431460:	movsxd ebp,DWORD PTR [rax+0x61]
  431463:	outs   dx,BYTE PTR ds:[rsi]
  431464:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43146a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43146e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431475:	and    BYTE PTR [rdi+0x66],ch
  431478:	and    BYTE PTR [rcx+0x20],ah
  43147b:	jb     0x4314f2
  43147d:	ins    BYTE PTR es:[rdi],dx
  43147e:	add    BYTE PTR gs:[rcx+0x4c],al
  431482:	push   rsp
  431483:	rex.RB push r10
  431485:	and    BYTE PTR [rbx+0x43],dl
  431488:	rex.W
  431489:	rex.RB
  43148a:	rex.WRB
  43148b:	add    BYTE PTR [r8],al
  43148e:	add    BYTE PTR [rax],al
  431490:	movsxd ebp,DWORD PTR [rax+0x61]
  431493:	outs   dx,BYTE PTR ds:[rsi]
  431494:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43149a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43149e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4314a5:	and    BYTE PTR [rdi+0x66],ch
  4314a8:	and    BYTE PTR [rcx+0x20],ah
  4314ab:	jae    0x431510
  4314ad:	push   0x616d65
  4314b2:	rex.B
  4314b3:	rex.WR push rsp
  4314b5:	rex.RB push r10
  4314b7:	and    BYTE PTR [rbx+0x45],dl
  4314ba:	push   rcx
  4314bb:	push   rbp
  4314bc:	rex.RB
  4314bd:	rex.WRX
  4314be:	rex.XB
  4314bf:	add    BYTE PTR [r8],r8b
  4314c2:	add    BYTE PTR [rax],al
  4314c4:	add    BYTE PTR [rax],al
  4314c6:	add    BYTE PTR [rax],al
  4314c8:	movsxd ebp,DWORD PTR [rax+0x61]
  4314cb:	outs   dx,BYTE PTR ds:[rsi]
  4314cc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4314d2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4314d6:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4314dd:	and    BYTE PTR [rdi+0x66],ch
  4314e0:	and    BYTE PTR [rcx+0x20],ah
  4314e3:	jae    0x43154a
  4314e5:	jno    0x43155c
  4314e7:	outs   dx,BYTE PTR gs:[rsi]
  4314e9:	movsxd esp,DWORD PTR [rbp+0x20]
  4314ec:	outs   dx,BYTE PTR gs:[esi]
  4314ef:	gs jb  0x431553
  4314f2:	je     0x431563
  4314f4:	jb     0x4314f6
  4314f6:	rex.B
  4314f7:	rex.WR push rsp
  4314f9:	rex.RB push r10
  4314fb:	and    BYTE PTR [rbx+0x45],dl
  4314fe:	push   rdx
  4314ff:	push   rsi
  431500:	rex.RB push r10
  431502:	add    BYTE PTR [rax],al
  431504:	add    BYTE PTR [rax],al
  431506:	add    BYTE PTR [rax],al
  431508:	movsxd ebp,DWORD PTR [rax+0x61]
  43150b:	outs   dx,BYTE PTR ds:[rsi]
  43150c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431512:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431516:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43151d:	and    BYTE PTR [rdi+0x66],ch
  431520:	and    BYTE PTR [rcx+0x20],ah
  431523:	outs   dx,WORD PTR ds:[rsi]
  431525:	jb     0x43158c
  431527:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  43152e:	jbe    0x431595
  431530:	jb     0x431532
  431532:	rex.B
  431533:	rex.WR push rsp
  431535:	rex.RB push r10
  431537:	and    BYTE PTR [rbx+0x59],dl
  43153a:	push   rbx
  43153b:	push   rsp
  43153c:	rex.RB
  43153d:	rex.WRB add BYTE PTR [r8],r8b
  431540:	movsxd ebp,DWORD PTR [rax+0x61]
  431543:	outs   dx,BYTE PTR ds:[rsi]
  431544:	and    BYTE PTR gs:[ecx+0x20],ah
  431549:	jae    0x4315b0
  43154b:	jb     0x4315c3
  43154d:	gs jb  0x431570
  431550:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431553:	imul   sp,WORD PTR [rdi+0x75],0x6172
  431559:	je     0x4315c4
  43155b:	outs   dx,DWORD PTR ds:[rsi]
  43155c:	outs   dx,BYTE PTR ds:[rsi]
  43155d:	and    BYTE PTR [rax+0x61],dh
  431560:	jb     0x4315c3
  431562:	ins    DWORD PTR es:[rdi],dx
  431563:	gs je  0x4315cb
  431566:	jb     0x431568
  431568:	rex.B
  431569:	rex.WR push rsp
  43156b:	rex.RB push r10
  43156d:	and    BYTE PTR [rcx+rax*2+0x42],dl
  431571:	rex.WR
  431572:	add    BYTE PTR [r8],r8b
  431575:	add    BYTE PTR [rax],al
  431577:	add    BYTE PTR [rbx+0x68],ah
  43157a:	(bad)  
  43157b:	outs   dx,BYTE PTR ds:[rsi]
  43157c:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431582:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431586:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43158d:	and    BYTE PTR [rdi+0x66],ch
  431590:	and    BYTE PTR [rcx+0x20],ah
  431593:	je     0x4315f6
  431595:	(bad)  
  431596:	ins    BYTE PTR es:[rdi],dx
  431597:	add    BYTE PTR gs:[rcx+0x4c],al
  43159b:	push   rsp
  43159c:	rex.RB push r10
  43159e:	and    BYTE PTR [rcx+rax*2+0x42],dl
  4315a2:	rex.WR
  4315a3:	rex.RB push r11
  4315a5:	push   rax
  4315a6:	rex.B
  4315a7:	rex.XB
  4315a8:	add    BYTE PTR [r8],r8b
  4315ab:	add    BYTE PTR [rax],al
  4315ad:	add    BYTE PTR [rax],al
  4315af:	add    BYTE PTR [rbx+0x68],ah
  4315b2:	(bad)  
  4315b3:	outs   dx,BYTE PTR ds:[rsi]
  4315b4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4315ba:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4315be:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4315c5:	and    BYTE PTR [rdi+0x66],ch
  4315c8:	and    BYTE PTR [rcx+0x20],ah
  4315cb:	je     0x43162e
  4315cd:	(bad)  
  4315ce:	ins    BYTE PTR es:[rdi],dx
  4315cf:	gs jae 0x431642
  4315d2:	(bad)  
  4315d3:	movsxd esp,DWORD PTR [rbp+0x0]
  4315d6:	add    BYTE PTR [rax],al
  4315d8:	rex.B
  4315d9:	rex.WR push rsp
  4315db:	rex.RB push r10
  4315dd:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4315e1:	push   rsp
  4315e2:	and    BYTE PTR [rbx+0x45],dl
  4315e5:	push   r10
  4315e7:	rex.XB
  4315e8:	rex.W and BYTE PTR [rbx+0x4f],al
  4315ec:	rex.WRX
  4315ed:	rex.RX
  4315ee:	rex.WB
  4315ef:	rex.RXB push r13
  4315f1:	push   rdx
  4315f2:	push   r12
  4315f4:	rex.WB
  4315f5:	rex.WRXB
  4315f6:	rex.WRX add BYTE PTR [rbx+0x68],r12b
  4315fa:	(bad)  
  4315fb:	outs   dx,BYTE PTR ds:[rsi]
  4315fc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  431602:	and    BYTE PTR [rbp+riz*2+0x66],ah
  431606:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43160d:	and    BYTE PTR [rdi+0x66],ch
  431610:	and    BYTE PTR [rcx+0x20],ah
  431613:	je     0x43167a
  431615:	js     0x43168b
  431617:	and    BYTE PTR [rbx+0x65],dh
  43161a:	(bad)  
  43161b:	jb     0x431680
  43161d:	push   0x6e6f6320
  431622:	imul   sp,WORD PTR [rdi+0x75],0x6172
  431628:	je     0x431693
  43162a:	outs   dx,DWORD PTR ds:[rsi]
  43162b:	outs   dx,BYTE PTR ds:[rsi]
  43162c:	add    BYTE PTR [rcx+0x4c],al
  43162f:	push   rsp
  431630:	rex.RB push r10
  431632:	and    BYTE PTR [rbp+rax*2+0x58],dl
  431636:	push   rsp
  431637:	and    BYTE PTR [rbx+0x45],dl
  43163a:	push   r10
  43163c:	rex.XB
  43163d:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  431642:	push   rsp
  431643:	rex.WB
  431644:	rex.WRXB
  431645:	rex.WRX
  431646:	push   r10
  431648:	pop    rcx
  431649:	add    BYTE PTR [rax],al
  43164b:	add    BYTE PTR [rax],al
  43164d:	add    BYTE PTR [rax],al
  43164f:	add    BYTE PTR [rbx+0x68],ah
  431652:	(bad)  
  431653:	outs   dx,BYTE PTR ds:[rsi]
  431654:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43165a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43165e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431665:	and    BYTE PTR [rdi+0x66],ch
  431668:	and    BYTE PTR [rcx+0x20],ah
  43166b:	je     0x4316d2
  43166d:	js     0x4316e3
  43166f:	and    BYTE PTR [rbx+0x65],dh
  431672:	(bad)  
  431673:	jb     0x4316d8
  431675:	push   0x63696420
  43167a:	je     0x4316e5
  43167c:	outs   dx,DWORD PTR ds:[rsi]
  43167d:	outs   dx,BYTE PTR ds:[rsi]
  43167e:	(bad)  
  43167f:	jb     0x4316fa
  431681:	add    BYTE PTR [rcx+0x4c],al
  431684:	push   rsp
  431685:	rex.RB push r10
  431687:	and    BYTE PTR [rbp+rax*2+0x58],dl
  43168b:	push   rsp
  43168c:	and    BYTE PTR [rbx+0x45],dl
  43168f:	push   r10
  431691:	rex.XB
  431692:	rex.W and BYTE PTR [rax+0x41],dl
  431696:	push   rdx
  431697:	push   rbx
  431698:	rex.RB push r10
  43169a:	add    BYTE PTR [rax],al
  43169c:	add    BYTE PTR [rax],al
  43169e:	add    BYTE PTR [rax],al
  4316a0:	movsxd ebp,DWORD PTR [rax+0x61]
  4316a3:	outs   dx,BYTE PTR ds:[rsi]
  4316a4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4316aa:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4316ae:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4316b5:	and    BYTE PTR [rdi+0x66],ch
  4316b8:	and    BYTE PTR [rcx+0x20],ah
  4316bb:	je     0x431722
  4316bd:	js     0x431733
  4316bf:	and    BYTE PTR [rbx+0x65],dh
  4316c2:	(bad)  
  4316c3:	jb     0x431728
  4316c5:	push   0x72617020
  4316ca:	jae    0x431731
  4316cc:	jb     0x4316ce
  4316ce:	rex.B
  4316cf:	rex.WR push rsp
  4316d1:	rex.RB push r10
  4316d3:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4316d7:	push   rsp
  4316d8:	and    BYTE PTR [rbx+0x45],dl
  4316db:	push   r10
  4316dd:	rex.XB
  4316de:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  4316e3:	push   rax
  4316e4:	rex.WR
  4316e5:	push   r12
  4316e7:	add    BYTE PTR [r8],r8b
  4316ea:	add    BYTE PTR [rax],al
  4316ec:	add    BYTE PTR [rax],al
  4316ee:	add    BYTE PTR [rax],al
  4316f0:	movsxd ebp,DWORD PTR [rax+0x61]
  4316f3:	outs   dx,BYTE PTR ds:[rsi]
  4316f4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4316fa:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4316fe:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431705:	and    BYTE PTR [rdi+0x66],ch
  431708:	and    BYTE PTR [rcx+0x20],ah
  43170b:	je     0x431772
  43170d:	js     0x431783
  43170f:	and    BYTE PTR [rbx+0x65],dh
  431712:	(bad)  
  431713:	jb     0x431778
  431715:	push   0x6d657420
  43171a:	jo     0x431788
  43171c:	(bad)  
  43171d:	je     0x431784
  43171f:	add    BYTE PTR [rcx+0x4c],al
  431722:	push   rsp
  431723:	rex.RB push r10
  431725:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  431729:	rex.RXB
  43172a:	rex.RXB
  43172b:	rex.RB push r10
  43172d:	add    BYTE PTR [rax],al
  43172f:	add    BYTE PTR [rbx+0x68],ah
  431732:	(bad)  
  431733:	outs   dx,BYTE PTR ds:[rsi]
  431734:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43173a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43173e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431745:	and    BYTE PTR [rdi+0x66],ch
  431748:	and    BYTE PTR [rcx+0x20],ah
  43174b:	je     0x4317bf
  43174d:	imul   esp,DWORD PTR [rdi+0x67],0x41007265
  431754:	rex.WR push rsp
  431756:	rex.RB push r10
  431758:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  43175c:	add    BYTE PTR [r8],r8b
  43175f:	add    BYTE PTR [rbx+0x68],ah
  431762:	(bad)  
  431763:	outs   dx,BYTE PTR ds:[rsi]
  431764:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  43176a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  43176e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  431775:	and    BYTE PTR [rdi+0x66],ch
  431778:	and    BYTE PTR [rcx+0x20],ah
  43177b:	je     0x4317f6
  43177d:	jo     0x4317e4
  43177f:	add    BYTE PTR [rcx+0x4c],al
  431782:	push   rsp
  431783:	rex.RB push r10
  431785:	and    BYTE PTR [rbp+0x53],dl
  431788:	rex.RB push r10
  43178a:	add    BYTE PTR [rcx+0x4c],al
  43178d:	push   rsp
  43178e:	rex.RB push r10
  431790:	and    BYTE PTR [rbp+0x53],dl
  431793:	rex.RB push r10
  431795:	and    BYTE PTR [rbp+0x41],cl
  431798:	push   rax
  431799:	push   rax
  43179a:	rex.WB
  43179b:	rex.WRX
  43179c:	rex.RXB add BYTE PTR [r8],r8b
  43179f:	add    BYTE PTR [rbx+0x68],ah
  4317a2:	(bad)  
  4317a3:	outs   dx,BYTE PTR ds:[rsi]
  4317a4:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4317aa:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4317ae:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4317b5:	and    BYTE PTR [rdi+0x66],ch
  4317b8:	and    BYTE PTR [rcx+0x20],ah
  4317bb:	jne    0x431830
  4317bd:	gs jb  0x4317e0
  4317c0:	ins    DWORD PTR es:[rdi],dx
  4317c1:	(bad)  
  4317c2:	jo     0x431834
  4317c4:	imul   ebp,DWORD PTR [rsi+0x67],0x544c4100
  4317cb:	rex.RB push r10
  4317cd:	and    BYTE PTR [rsi+0x49],dl
  4317d0:	rex.RB push r15
  4317d2:	add    BYTE PTR [rax],al
  4317d4:	add    BYTE PTR [rax],al
  4317d6:	add    BYTE PTR [rax],al
  4317d8:	movsxd ebp,DWORD PTR [rax+0x61]
  4317db:	outs   dx,BYTE PTR ds:[rsi]
  4317dc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4317e2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4317e6:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4317ed:	and    BYTE PTR [rdi+0x66],ch
  4317f0:	and    BYTE PTR [rcx+0x20],ah
  4317f3:	jbe    0x43185e
  4317f5:	gs ja  0x4317f8
  4317f8:	rex.B
  4317f9:	rex.WRX
  4317fa:	rex.B
  4317fb:	rex.WR pop rcx
  4317fd:	pop    rdx
  4317fe:	add    BYTE PTR [r11+0x6f],r12b
  431802:	ins    BYTE PTR es:[rdi],dx
  431803:	ins    BYTE PTR es:[rdi],dx
  431804:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x73]
  431809:	je     0x43186c
  43180b:	je     0x431876
  43180d:	jae    0x431883
  43180f:	imul   esp,DWORD PTR [rbx+0x73],0x6f626120
  431816:	jne    0x43188c
  431818:	and    BYTE PTR [rcx+0x20],ah
  43181b:	fs (bad) 
  43181d:	je     0x431880
  43181f:	(bad)  
  431821:	jae    0x431888
  431823:	add    BYTE PTR [rdx+0x45],al
  431826:	rex.RXB
  431827:	rex.WB
  431828:	rex.WRX add BYTE PTR [rbx+0x74],r14b
  43182c:	(bad)  
  43182d:	jb     0x4318a3
  43182f:	and    BYTE PTR [rcx+0x20],ah
  431832:	je     0x4318a6
  431834:	(bad)  
  431835:	outs   dx,BYTE PTR ds:[rsi]
  431836:	jae    0x431899
  431838:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43183c:	outs   dx,BYTE PTR ds:[rsi]
  43183d:	and    BYTE PTR [rdx+0x6c],ah
  431840:	outs   dx,DWORD PTR ds:[rsi]
  431841:	movsxd ebp,DWORD PTR [rbx+0x0]
  431844:	rex.XB
  431845:	rex.W
  431846:	rex.RB
  431847:	rex.XB
  431848:	rex.WXB push r8
  43184a:	rex.WRXB
  43184b:	rex.WB
  43184c:	rex.WRX push rsp
  43184e:	add    BYTE PTR [rax],al
  431850:	outs   dx,WORD PTR ds:[rsi]
  431852:	jb     0x4318b7
  431854:	and    BYTE PTR gs:[rcx+0x20],ah
  431858:	je     0x4318cc
  43185a:	(bad)  
  43185b:	outs   dx,BYTE PTR ds:[rsi]
  43185c:	jae    0x4318bf
  43185e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  431862:	outs   dx,BYTE PTR ds:[rsi]
  431863:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  431867:	and    BYTE PTR [rbx+0x68],ah
  43186a:	movsxd ebp,DWORD PTR gs:[rbx+0x70]
  43186e:	outs   dx,DWORD PTR ds:[rsi]
  43186f:	imul   ebp,DWORD PTR [rsi+0x74],0x4f4c4300
  431876:	push   rbx
  431877:	add    BYTE PTR [r11+0x6c],r12b
  43187b:	outs   dx,DWORD PTR ds:[rsi]
  43187c:	jae    0x4318e3
  43187e:	and    BYTE PTR [rcx+0x20],ah
  431881:	movsxd esi,DWORD PTR [rbp+0x72]
  431884:	jae    0x4318f5
  431886:	jb     0x431888
  431888:	rex.XB
  431889:	rex.WR push rbp
  43188b:	push   rbx
  43188c:	push   rsp
  43188d:	rex.RB push r10
  43188f:	add    BYTE PTR [rbx+0x6c],ah
  431892:	jne    0x431907
  431894:	je     0x4318fb
  431896:	jb     0x4318b8
  431898:	(bad)  
  431899:	and    BYTE PTR [rcx+riz*2+0x62],dh
  43189d:	ins    BYTE PTR es:[rdi],dx
  43189e:	and    BYTE PTR gs:[rcx+0x63],ah
  4318a2:	movsxd ebp,DWORD PTR [rdi+0x72]
  4318a5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  4318ad:	(bad)  
  4318ae:	outs   dx,BYTE PTR ds:[rsi]
  4318af:	and    BYTE PTR [rcx+0x6e],ch
  4318b2:	fs gs js 0x4318b6
  4318b6:	rex.XB
  4318b7:	rex.WRXB
  4318b8:	rex.WRB
  4318b9:	rex.WRB
  4318ba:	rex.RB
  4318bb:	rex.WRX push rsp
  4318bd:	add    BYTE PTR [rax],al
  4318bf:	add    BYTE PTR [rbp+riz*2+0x66],ah
  4318c3:	imul   ebp,DWORD PTR [rsi+0x65],0x20726f20
  4318ca:	movsxd ebp,DWORD PTR [rax+0x61]
  4318cd:	outs   dx,BYTE PTR ds:[rsi]
  4318ce:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4318d4:	and    BYTE PTR [rbx+0x6f],ah
  4318d7:	ins    DWORD PTR es:[rdi],dx
  4318d8:	ins    DWORD PTR es:[rdi],dx
  4318d9:	outs   dx,BYTE PTR gs:[rsi]
  4318db:	je     0x4318fd
  4318dd:	outs   dx,DWORD PTR ds:[rsi]
  4318de:	data16 and BYTE PTR [rcx+0x6e],ah
  4318e2:	and    BYTE PTR [rdi+0x62],ch
  4318e5:	push   0x65
  4318e7:	movsxd esi,DWORD PTR [rax+rax*1+0x43]
  4318eb:	rex.WRXB
  4318ec:	rex.WRB
  4318ed:	rex.WRB
  4318ee:	rex.WB push r12
	...
  4318f8:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4318fb:	ins    DWORD PTR es:[rdi],dx
  4318fc:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x63206568
  431904:	jne    0x431978
  431906:	jb     0x43196d
  431908:	outs   dx,BYTE PTR ds:[rsi]
  431909:	je     0x43192b
  43190b:	je     0x43197f
  43190d:	(bad)  
  43190e:	outs   dx,BYTE PTR ds:[rsi]
  43190f:	jae    0x431972
  431911:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  431915:	outs   dx,BYTE PTR ds:[rsi]
  431916:	add    BYTE PTR [rbx+0x4f],al
  431919:	rex.WRB
  43191a:	rex.WRB
  43191b:	rex.WB push r12
  43191d:	and    BYTE PTR [rax+0x52],dl
  431920:	rex.RB push r8
  431922:	push   r10
  431924:	rex.RB
  431925:	add    BYTE PTR [rax],r8b
  431928:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43192b:	ins    DWORD PTR es:[rdi],dx
  43192c:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x61727420
  431934:	outs   dx,BYTE PTR ds:[rsi]
  431935:	jae    0x431998
  431937:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43193b:	outs   dx,BYTE PTR ds:[rsi]
  43193c:	and    BYTE PTR [rax+rbp*2+0x61],dh
  431940:	je     0x431962
  431942:	ja     0x4319a5
  431944:	jae    0x431966
  431946:	gs (bad) 
  431948:	jb     0x4319b6
  43194a:	imul   esp,DWORD PTR [rbp+0x72],0x65727020
  431951:	jo     0x4319b4
  431953:	jb     0x4319ba
  431955:	and    BYTE PTR fs:[rsi+0x6f],ah
  431959:	jb     0x43197b
  43195b:	je     0x4319d4
  43195d:	outs   dx,DWORD PTR ds:[rsi]
  43195e:	sub    eax,0x73616870
  431963:	and    BYTE PTR gs:[rbx+0x6f],ah
  431967:	ins    DWORD PTR es:[rdi],dx
  431968:	ins    DWORD PTR es:[rdi],dx
  431969:	imul   esi,DWORD PTR [rax+rax*1+0x43],0x59504f
  431971:	add    BYTE PTR [rax],al
  431973:	add    BYTE PTR [rax],al
  431975:	add    BYTE PTR [rax],al
  431977:	add    BYTE PTR [rbx+0x6f],ah
  43197a:	jo     0x4319f5
  43197c:	and    BYTE PTR [rcx+riz*2+0x74],ah
  431980:	(bad)  
  431981:	and    BYTE PTR [rdx+0x65],ah
  431984:	je     0x4319fd
  431986:	gs outs dx,BYTE PTR gs:[rsi]
  431989:	and    BYTE PTR [rcx+0x20],ah
  43198c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e61
  431993:	and    BYTE PTR fs:[rcx+0x20],ah
  431997:	je     0x4319fa
  431999:	(bad)  
  43199a:	ins    BYTE PTR es:[rdi],dx
  43199b:	add    BYTE PTR gs:[rbx+0x52],al
  43199f:	rex.RB
  4319a0:	push   r12
  4319a2:	and    BYTE PTR [r9+0x47],r8b
  4319a6:	rex.RXB push r10
  4319a8:	rex.RB
  4319a9:	rex.RXB
  4319aa:	push   r12
  4319ac:	add    BYTE PTR [r8],r8b
  4319af:	add    BYTE PTR [rbp+riz*2+0x66],ah
  4319b3:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  4319ba:	gs ja  0x4319dd
  4319bd:	(bad)  
  4319be:	addr32 addr32 jb 0x431a27
  4319c2:	addr32 (bad) 
  4319c4:	je     0x431a2b
  4319c6:	and    BYTE PTR [rsi+0x75],ah
  4319c9:	outs   dx,BYTE PTR ds:[rsi]
  4319ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4319ce:	outs   dx,BYTE PTR ds:[rsi]
  4319cf:	add    BYTE PTR [rbx+0x52],al
  4319d2:	rex.RB
  4319d3:	push   r12
  4319d5:	and    BYTE PTR [r11+0x41],r8b
  4319d9:	push   rbx
  4319da:	push   rsp
  4319db:	add    BYTE PTR [rbp+riz*2+0x66],ah
  4319df:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  4319e6:	gs ja  0x431a09
  4319e9:	movsxd esp,DWORD PTR [rcx+0x73]
  4319ec:	je     0x4319ee
  4319ee:	rex.XB push r10
  4319f0:	rex.RB
  4319f1:	push   r12
  4319f3:	and    BYTE PTR [r11+0x4f],r8b
  4319f7:	rex.WR
  4319f8:	rex.WR
  4319f9:	push   r12
  4319fb:	rex.WB
  4319fc:	rex.WRXB
  4319fd:	rex.WRX add BYTE PTR [rbp+r12*2+0x66],r12b
  431a02:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431a09:	gs ja  0x431a2c
  431a0c:	movsxd ebp,DWORD PTR [rdi+0x6c]
  431a0f:	ins    BYTE PTR es:[rdi],dx
  431a10:	(bad)  
  431a11:	je     0x431a7c
  431a13:	outs   dx,DWORD PTR ds:[rsi]
  431a14:	outs   dx,BYTE PTR ds:[rsi]
  431a15:	add    BYTE PTR [rbx+0x52],al
  431a18:	rex.RB
  431a19:	push   r12
  431a1b:	and    BYTE PTR [r11+0x4f],r8b
  431a1f:	rex.WRX push rsi
  431a21:	rex.RB push r10
  431a23:	push   rbx
  431a24:	rex.WB
  431a25:	rex.WRXB
  431a26:	rex.WRX add BYTE PTR [rbp+r12*2+0x66],r12b
  431a2b:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431a32:	gs ja  0x431a55
  431a35:	outs   dx,BYTE PTR gs:[rsi]
  431a37:	movsxd ebp,DWORD PTR [rdi+0x64]
  431a3a:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  431a41:	jbe    0x431aa8
  431a43:	jb     0x431ab8
  431a45:	imul   ebp,DWORD PTR [rdi+0x6e],0x45524300
  431a4c:	push   r12
  431a4e:	and    BYTE PTR [r9+rax*2+0x54],r8b
  431a53:	rex.B
  431a54:	rex.X
  431a55:	push   r11
  431a57:	add    BYTE PTR [r11+0x72],r12b
  431a5b:	gs (bad) 
  431a5d:	je     0x431ac4
  431a5f:	and    BYTE PTR [rcx+0x20],ah
  431a62:	outs   dx,BYTE PTR ds:[rsi]
  431a63:	gs ja  0x431a86
  431a66:	fs (bad) 
  431a68:	je     0x431acb
  431a6a:	(bad)  
  431a6c:	jae    0x431ad3
  431a6e:	add    BYTE PTR [rbx+0x52],al
  431a71:	rex.RB
  431a72:	push   r12
  431a74:	and    BYTE PTR [r15+rcx*2+0x4d],r8b
  431a79:	rex.B
  431a7a:	rex.WB
  431a7b:	rex.WRX add BYTE PTR [rbp+r12*2+0x66],r12b
  431a80:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431a87:	gs ja  0x431aaa
  431a8a:	outs   dx,DWORD PTR fs:[rsi]
  431a8c:	ins    DWORD PTR es:[rdi],dx
  431a8d:	(bad)  
  431a8e:	imul   ebp,DWORD PTR [rsi+0x0],0x41455243
  431a95:	push   rsp
  431a96:	and    BYTE PTR [r13+0x56],r8b
  431a9a:	rex.RB
  431a9b:	rex.WRX push rsp
  431a9d:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  431aa1:	rex.RXB
  431aa2:	rex.RXB
  431aa3:	rex.RB push r10
  431aa5:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431aa9:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431ab0:	gs ja  0x431ad3
  431ab3:	gs jbe 0x431b1b
  431ab6:	outs   dx,BYTE PTR ds:[rsi]
  431ab7:	je     0x431ad9
  431ab9:	je     0x431b2d
  431abb:	imul   esp,DWORD PTR [rdi+0x67],0x43007265
  431ac2:	push   rdx
  431ac3:	rex.RB
  431ac4:	push   r12
  431ac6:	and    BYTE PTR [r13+0x58],r8b
  431aca:	push   rsp
  431acb:	rex.RB
  431acc:	rex.WRX push rbx
  431ace:	rex.WB
  431acf:	rex.WRXB
  431ad0:	rex.WRX add BYTE PTR [rcx+0x6e],r13b
  431ad4:	jae    0x431b4a
  431ad6:	(bad)  
  431ad7:	ins    BYTE PTR es:[rdi],dx
  431ad8:	ins    BYTE PTR es:[rdi],dx
  431ad9:	and    BYTE PTR [rcx+0x6e],ah
  431adc:	and    BYTE PTR [rbp+0x78],ah
  431adf:	je     0x431b46
  431ae1:	outs   dx,BYTE PTR ds:[rsi]
  431ae2:	jae    0x431b4d
  431ae4:	outs   dx,DWORD PTR ds:[rsi]
  431ae5:	outs   dx,BYTE PTR ds:[rsi]
  431ae6:	add    BYTE PTR [rbx+0x52],al
  431ae9:	rex.RB
  431aea:	push   r12
  431aec:	and    BYTE PTR [r14+0x4f],r8b
  431af0:	push   rdx
  431af1:	rex.RB
  431af2:	rex.WB
  431af3:	rex.RXB
  431af4:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  431af9:	and    BYTE PTR [r15+0x52],dl
  431afd:	push   r8
  431aff:	push   rax
  431b00:	rex.RB push r10
  431b02:	add    BYTE PTR [rax],al
  431b04:	add    BYTE PTR [rax],al
  431b06:	add    BYTE PTR [rax],al
  431b08:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  431b10:	and    BYTE PTR [rsi+0x65],ch
  431b13:	ja     0x431b35
  431b15:	outs   dx,WORD PTR ds:[rsi]
  431b17:	jb     0x431b7e
  431b19:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  431b20:	(bad)  
  431b21:	and    BYTE PTR [rdi+0x72],dh
  431b24:	(bad)  
  431b25:	jo     0x431b97
  431b27:	gs jb  0x431b2a
  431b2a:	rex.XB push r10
  431b2c:	rex.RB
  431b2d:	push   r12
  431b2f:	and    BYTE PTR [r14+0x4f],r8b
  431b33:	push   rdx
  431b34:	rex.RB
  431b35:	rex.WB
  431b36:	rex.RXB
  431b37:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  431b3c:	rex.WR
  431b3d:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431b42:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431b49:	gs ja  0x431b6c
  431b4c:	outs   dx,WORD PTR ds:[rsi]
  431b4e:	jb     0x431bb5
  431b50:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  431b57:	ins    BYTE PTR es:[rdi],dx
  431b58:	add    BYTE PTR gs:[rbx+0x52],al
  431b5c:	rex.RB
  431b5d:	push   r12
  431b5f:	and    BYTE PTR [r14+0x55],r8b
  431b63:	rex.WRX
  431b64:	rex.XB push r12
  431b66:	rex.WB
  431b67:	rex.WRXB
  431b68:	rex.WRX add BYTE PTR [rbp+r12*2+0x66],r12b
  431b6d:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431b74:	gs ja  0x431b97
  431b77:	data16 jne 0x431be8
  431b7a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  431b7e:	outs   dx,BYTE PTR ds:[rsi]
  431b7f:	add    BYTE PTR [rbx+0x52],al
  431b82:	rex.RB
  431b83:	push   r12
  431b85:	and    BYTE PTR [r15+0x52],r8b
  431b89:	rex.WRXB push r13
  431b8b:	push   rax
  431b8c:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431b90:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431b97:	gs ja  0x431bba
  431b9a:	fs (bad) 
  431b9c:	je     0x431bff
  431b9e:	(bad)  
  431ba0:	jae    0x431c07
  431ba2:	and    BYTE PTR [rdx+0x6f],dh
  431ba5:	ins    BYTE PTR es:[rdi],dx
  431ba6:	add    BYTE PTR gs:[rbx+0x52],al
  431baa:	rex.RB
  431bab:	push   r12
  431bad:	and    BYTE PTR [r9+0x4e],r9b
  431bb1:	rex.R
  431bb2:	rex.RB pop r8
  431bb4:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431bb8:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431bbf:	gs ja  0x431be2
  431bc2:	imul   ebp,DWORD PTR [rsi+0x64],0x43007865
  431bc9:	push   rdx
  431bca:	rex.RB
  431bcb:	push   r12
  431bcd:	and    BYTE PTR [r9+rax*2+0x4e],r9b
  431bd2:	rex.RXB push r13
  431bd4:	rex.B
  431bd5:	rex.RXB
  431bd6:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431bdb:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431be2:	gs ja  0x431c05
  431be5:	jo     0x431c59
  431be7:	outs   dx,DWORD PTR ds:[rsi]
  431be8:	movsxd esp,DWORD PTR [rbp+0x64]
  431beb:	jne    0x431c5f
  431bed:	(bad)  
  431bee:	ins    BYTE PTR es:[rdi],dx
  431bef:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  431bf3:	addr32 jne 0x431c57
  431bf6:	add    BYTE PTR gs:[ebx+0x52],al
  431bfb:	rex.RB
  431bfc:	push   r12
  431bfe:	and    BYTE PTR [r13+0x41],r9b
  431c02:	push   rsp
  431c03:	rex.RB push r10
  431c05:	rex.WB
  431c06:	rex.B
  431c07:	rex.WR
  431c08:	rex.WB pop r10
  431c0a:	rex.RB
  431c0b:	and    BYTE PTR [rsi+0x49],r10b
  431c0f:	rex.RB push r15
  431c11:	add    BYTE PTR [rax],al
  431c13:	add    BYTE PTR [rax],al
  431c15:	add    BYTE PTR [rax],al
  431c17:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431c1b:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431c22:	gs ja  0x431c45
  431c25:	ins    DWORD PTR es:[rdi],dx
  431c26:	(bad)  
  431c27:	je     0x431c8e
  431c29:	jb     0x431c94
  431c2b:	(bad)  
  431c2c:	ins    BYTE PTR es:[rdi],dx
  431c2d:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  431c34:	gs ja  0x431c37
  431c37:	rex.XB push r10
  431c39:	rex.RB
  431c3a:	push   r12
  431c3c:	and    BYTE PTR [r15+0x50],r9b
  431c40:	rex.RB push r10
  431c42:	push   r12
  431c44:	rex.WRXB push r10
  431c46:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431c4a:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431c51:	gs ja  0x431c74
  431c54:	outs   dx,DWORD PTR ds:[rsi]
  431c55:	jo     0x431cbc
  431c57:	jb     0x431cba
  431c59:	je     0x431cca
  431c5b:	jb     0x431c5d
  431c5d:	rex.XB push r10
  431c5f:	rex.RB
  431c60:	push   r12
  431c62:	and    BYTE PTR [r15+0x50],r9b
  431c66:	rex.RB push r10
  431c68:	push   r12
  431c6a:	rex.WRXB push r10
  431c6c:	and    BYTE PTR [rbx+0x4c],al
  431c6f:	push   r11
  431c71:	push   rbx
  431c72:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431c76:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431c7d:	gs ja  0x431ca0
  431c80:	outs   dx,DWORD PTR ds:[rsi]
  431c81:	jo     0x431ce8
  431c83:	jb     0x431ce6
  431c85:	je     0x431cf6
  431c87:	jb     0x431ca9
  431c89:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  431c8d:	jae    0x431c8f
  431c8f:	rex.XB push r10
  431c91:	rex.RB
  431c92:	push   r12
  431c94:	and    BYTE PTR [r15+0x50],r9b
  431c98:	rex.RB push r10
  431c9a:	push   r12
  431c9c:	rex.WRXB push r10
  431c9e:	and    BYTE PTR [rsi+0x41],al
  431ca1:	rex.WRB
  431ca2:	rex.WB
  431ca3:	rex.WR pop rcx
  431ca5:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431ca9:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431cb0:	gs ja  0x431cd3
  431cb3:	outs   dx,DWORD PTR ds:[rsi]
  431cb4:	jo     0x431d1b
  431cb6:	jb     0x431d19
  431cb8:	je     0x431d29
  431cba:	jb     0x431cdc
  431cbc:	data16 (bad) 
  431cbe:	ins    DWORD PTR es:[rdi],dx
  431cbf:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x41455243
  431cc7:	push   rsp
  431cc8:	and    BYTE PTR [r10+0x4f],r10b
  431ccc:	rex.WR
  431ccd:	add    BYTE PTR [r11+0x52],r8b
  431cd1:	rex.RB
  431cd2:	push   r12
  431cd4:	and    BYTE PTR [r10+0x55],r10b
  431cd8:	rex.WR
  431cd9:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431cde:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431ce5:	gs ja  0x431d08
  431ce8:	jb     0x431d4f
  431cea:	ja     0x431d5e
  431cec:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x656c7572
  431cf4:	add    BYTE PTR [rbx+0x52],al
  431cf7:	rex.RB
  431cf8:	push   r12
  431cfa:	and    BYTE PTR [r11+0x43],r10b
  431cfe:	rex.W
  431cff:	rex.RB
  431d00:	rex.WRB
  431d01:	add    BYTE PTR [r13+riz*2+0x66],spl
  431d06:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431d0d:	gs ja  0x431d30
  431d10:	jae    0x431d75
  431d12:	push   0x616d65
  431d17:	rex.XB push r10
  431d19:	rex.RB
  431d1a:	push   r12
  431d1c:	and    BYTE PTR [r11+0x45],r10b
  431d20:	push   rcx
  431d21:	push   rbp
  431d22:	rex.RB
  431d23:	rex.WRX
  431d24:	rex.XB
  431d25:	add    BYTE PTR [r8],r8b
  431d28:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  431d30:	and    BYTE PTR [rsi+0x65],ch
  431d33:	ja     0x431d55
  431d35:	jae    0x431d9c
  431d37:	jno    0x431dae
  431d39:	outs   dx,BYTE PTR gs:[rsi]
  431d3b:	movsxd esp,DWORD PTR [rbp+0x20]
  431d3e:	outs   dx,BYTE PTR gs:[esi]
  431d41:	gs jb  0x431da5
  431d44:	je     0x431db5
  431d46:	jb     0x431d48
  431d48:	rex.XB push r10
  431d4a:	rex.RB
  431d4b:	push   r12
  431d4d:	and    BYTE PTR [r11+0x45],r10b
  431d51:	push   rdx
  431d52:	push   rsi
  431d53:	rex.RB push r10
  431d55:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431d59:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431d60:	gs ja  0x431d83
  431d63:	outs   dx,WORD PTR ds:[rsi]
  431d65:	jb     0x431dcc
  431d67:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  431d6e:	jbe    0x431dd5
  431d70:	jb     0x431d72
  431d72:	rex.XB push r10
  431d74:	rex.RB
  431d75:	push   r12
  431d77:	and    BYTE PTR [r9+rax*2+0x42],r10b
  431d7c:	rex.WR
  431d7d:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431d82:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431d89:	gs ja  0x431dac
  431d8c:	je     0x431def
  431d8e:	(bad)  
  431d8f:	ins    BYTE PTR es:[rdi],dx
  431d90:	add    BYTE PTR gs:[rbx+0x52],al
  431d94:	rex.RB
  431d95:	push   r12
  431d97:	and    BYTE PTR [r9+rax*2+0x42],r10b
  431d9c:	rex.WR
  431d9d:	and    BYTE PTR [r9+0x53],r8b
  431da1:	add    BYTE PTR [rax],al
  431da3:	add    BYTE PTR [rax],al
  431da5:	add    BYTE PTR [rax],al
  431da7:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431dab:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431db2:	gs ja  0x431dd5
  431db5:	je     0x431e18
  431db7:	(bad)  
  431db8:	ins    BYTE PTR es:[rdi],dx
  431db9:	and    BYTE PTR gs:[rsi+0x72],ah
  431dbd:	outs   dx,DWORD PTR ds:[rsi]
  431dbe:	ins    DWORD PTR es:[rdi],dx
  431dbf:	and    BYTE PTR [rax+rbp*2+0x65],dh
  431dc3:	and    BYTE PTR [rdx+0x65],dh
  431dc6:	jae    0x431e3d
  431dc8:	ins    BYTE PTR es:[rdi],dx
  431dc9:	je     0x431e3e
  431dcb:	and    BYTE PTR [rdi+0x66],ch
  431dce:	and    BYTE PTR [rcx+0x20],ah
  431dd1:	jno    0x431e48
  431dd3:	gs jb  0x431e4f
  431dd6:	add    BYTE PTR [rbx+0x52],al
  431dd9:	rex.RB
  431dda:	push   r12
  431ddc:	and    BYTE PTR [r9+rax*2+0x42],r10b
  431de1:	rex.WR
  431de2:	rex.RB push r11
  431de4:	push   rax
  431de5:	rex.B
  431de6:	rex.XB
  431de7:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431dec:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431df3:	gs ja  0x431e16
  431df6:	je     0x431e59
  431df8:	(bad)  
  431df9:	ins    BYTE PTR es:[rdi],dx
  431dfa:	gs jae 0x431e6d
  431dfd:	(bad)  
  431dfe:	movsxd esp,DWORD PTR [rbp+0x0]
  431e01:	add    BYTE PTR [rax],al
  431e03:	add    BYTE PTR [rax],al
  431e05:	add    BYTE PTR [rax],al
  431e07:	add    BYTE PTR [rbx+0x52],al
  431e0a:	rex.RB
  431e0b:	push   r12
  431e0d:	and    BYTE PTR [r13+rax*2+0x58],r10b
  431e12:	push   rsp
  431e13:	and    BYTE PTR [rbx+0x45],dl
  431e16:	push   r10
  431e18:	rex.XB
  431e19:	rex.W and BYTE PTR [rbx+0x4f],al
  431e1d:	rex.WRX
  431e1e:	rex.RX
  431e1f:	rex.WB
  431e20:	rex.RXB push r13
  431e22:	push   rdx
  431e23:	push   r12
  431e25:	rex.WB
  431e26:	rex.WRXB
  431e27:	rex.WRX add BYTE PTR [rax],r8b
  431e2a:	add    BYTE PTR [rax],al
  431e2c:	add    BYTE PTR [rax],al
  431e2e:	add    BYTE PTR [rax],al
  431e30:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  431e38:	and    BYTE PTR [rsi+0x65],ch
  431e3b:	ja     0x431e5d
  431e3d:	je     0x431ea4
  431e3f:	js     0x431eb5
  431e41:	and    BYTE PTR [rbx+0x65],dh
  431e44:	(bad)  
  431e45:	jb     0x431eaa
  431e47:	push   0x6e6f6320
  431e4c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  431e52:	je     0x431ebd
  431e54:	outs   dx,DWORD PTR ds:[rsi]
  431e55:	outs   dx,BYTE PTR ds:[rsi]
  431e56:	add    BYTE PTR [rbx+0x52],al
  431e59:	rex.RB
  431e5a:	push   r12
  431e5c:	and    BYTE PTR [r13+rax*2+0x58],r10b
  431e61:	push   rsp
  431e62:	and    BYTE PTR [rbx+0x45],dl
  431e65:	push   r10
  431e67:	rex.XB
  431e68:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  431e6d:	push   rsp
  431e6e:	rex.WB
  431e6f:	rex.WRXB
  431e70:	rex.WRX
  431e71:	push   r10
  431e73:	pop    rcx
  431e74:	add    BYTE PTR [rax],al
  431e76:	add    BYTE PTR [rax],al
  431e78:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  431e80:	and    BYTE PTR [rsi+0x65],ch
  431e83:	ja     0x431ea5
  431e85:	je     0x431eec
  431e87:	js     0x431efd
  431e89:	and    BYTE PTR [rbx+0x65],dh
  431e8c:	(bad)  
  431e8d:	jb     0x431ef2
  431e8f:	push   0x63696420
  431e94:	je     0x431eff
  431e96:	outs   dx,DWORD PTR ds:[rsi]
  431e97:	outs   dx,BYTE PTR ds:[rsi]
  431e98:	(bad)  
  431e99:	jb     0x431f14
  431e9b:	add    BYTE PTR [rbx+0x52],al
  431e9e:	rex.RB
  431e9f:	push   r12
  431ea1:	and    BYTE PTR [r13+rax*2+0x58],r10b
  431ea6:	push   rsp
  431ea7:	and    BYTE PTR [rbx+0x45],dl
  431eaa:	push   r10
  431eac:	rex.XB
  431ead:	rex.W and BYTE PTR [rax+0x41],dl
  431eb1:	push   rdx
  431eb2:	push   rbx
  431eb3:	rex.RB push r10
  431eb5:	add    BYTE PTR [rax],al
  431eb7:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431ebb:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431ec2:	gs ja  0x431ee5
  431ec5:	je     0x431f2c
  431ec7:	js     0x431f3d
  431ec9:	and    BYTE PTR [rbx+0x65],dh
  431ecc:	(bad)  
  431ecd:	jb     0x431f32
  431ecf:	push   0x72617020
  431ed4:	jae    0x431f3b
  431ed6:	jb     0x431ed8
  431ed8:	rex.XB push r10
  431eda:	rex.RB
  431edb:	push   r12
  431edd:	and    BYTE PTR [r13+rax*2+0x58],r10b
  431ee2:	push   rsp
  431ee3:	and    BYTE PTR [rbx+0x45],dl
  431ee6:	push   r10
  431ee8:	rex.XB
  431ee9:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  431eee:	push   rax
  431eef:	rex.WR
  431ef0:	push   r12
  431ef2:	add    BYTE PTR [r8],r8b
  431ef5:	add    BYTE PTR [rax],al
  431ef7:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431efb:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431f02:	gs ja  0x431f25
  431f05:	je     0x431f6c
  431f07:	js     0x431f7d
  431f09:	and    BYTE PTR [rbx+0x65],dh
  431f0c:	(bad)  
  431f0d:	jb     0x431f72
  431f0f:	push   0x6d657420
  431f14:	jo     0x431f82
  431f16:	(bad)  
  431f17:	je     0x431f7e
  431f19:	add    BYTE PTR [rbx+0x52],al
  431f1c:	rex.RB
  431f1d:	push   r12
  431f1f:	and    BYTE PTR [r10+rdx*2+0x49],r10b
  431f24:	rex.RXB
  431f25:	rex.RXB
  431f26:	rex.RB push r10
  431f28:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431f2c:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431f33:	gs ja  0x431f56
  431f36:	je     0x431faa
  431f38:	imul   esp,DWORD PTR [rdi+0x67],0x43007265
  431f3f:	push   rdx
  431f40:	rex.RB
  431f41:	push   r12
  431f43:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  431f48:	add    BYTE PTR [r13+riz*2+0x66],r12b
  431f4d:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431f54:	gs ja  0x431f77
  431f57:	fs (bad) 
  431f59:	je     0x431fbc
  431f5b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  431f5f:	add    BYTE PTR gs:[rbx+0x52],al
  431f63:	rex.RB
  431f64:	push   r12
  431f66:	and    BYTE PTR [r13+0x53],r10b
  431f6a:	rex.RB push r10
  431f6c:	add    BYTE PTR [rbx+0x52],al
  431f6f:	rex.RB
  431f70:	push   r12
  431f72:	and    BYTE PTR [r13+0x53],r10b
  431f76:	rex.RB push r10
  431f78:	and    BYTE PTR [rbp+0x41],cl
  431f7b:	push   rax
  431f7c:	push   rax
  431f7d:	rex.WB
  431f7e:	rex.WRX
  431f7f:	rex.RXB add BYTE PTR [r8],r8b
  431f82:	add    BYTE PTR [rax],al
  431f84:	add    BYTE PTR [rax],al
  431f86:	add    BYTE PTR [rax],al
  431f88:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  431f90:	and    BYTE PTR [rsi+0x65],ch
  431f93:	ja     0x431fb5
  431f95:	ins    DWORD PTR es:[rdi],dx
  431f96:	(bad)  
  431f97:	jo     0x432009
  431f99:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  431fa0:	(bad)  
  431fa1:	and    BYTE PTR [rbp+0x73],dh
  431fa4:	gs jb  0x431fc7
  431fa7:	je     0x432018
  431fa9:	and    BYTE PTR [rcx+0x20],ah
  431fac:	outs   dx,WORD PTR ds:[rsi]
  431fae:	jb     0x432015
  431fb0:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  431fb7:	jbe    0x43201e
  431fb9:	jb     0x431fbb
  431fbb:	rex.XB push r10
  431fbd:	rex.RB
  431fbe:	push   r12
  431fc0:	and    BYTE PTR [r14+0x49],r10b
  431fc4:	rex.RB push r15
  431fc6:	add    BYTE PTR [rbp+riz*2+0x66],ah
  431fca:	imul   ebp,DWORD PTR [rsi+0x65],0x6e206120
  431fd1:	gs ja  0x431ff4
  431fd4:	jbe    0x43203f
  431fd6:	gs ja  0x431fd9
  431fd9:	rex.R
  431fda:	rex.RB
  431fdb:	rex.B
  431fdc:	rex.WR
  431fdd:	rex.WR
  431fde:	rex.WRXB
  431fdf:	rex.XB
  431fe0:	push   r12
  431fe2:	add    BYTE PTR [r8],r8b
  431fe5:	add    BYTE PTR [rax],al
  431fe7:	add    BYTE PTR [rbp+riz*2+0x61],ah
  431feb:	ins    BYTE PTR es:[rdi],dx
  431fec:	ins    BYTE PTR es:[rdi],dx
  431fed:	outs   dx,DWORD PTR ds:[rsi]
  431fee:	movsxd esp,DWORD PTR [rcx+0x74]
  431ff1:	and    BYTE PTR gs:[rcx+0x20],ah
  431ff5:	jo     0x432069
  431ff7:	gs jo  0x43205b
  431ffa:	jb     0x432061
  431ffc:	and    BYTE PTR fs:[rbx+0x74],dh
  432000:	(bad)  
  432001:	je     0x432068
  432003:	ins    DWORD PTR es:[rdi],dx
  432004:	outs   dx,BYTE PTR gs:[rsi]
  432006:	je     0x432008
  432008:	rex.R
  432009:	rex.RB
  43200a:	rex.XB
  43200b:	rex.WR
  43200c:	push   r10
  43200e:	add    BYTE PTR [r13+riz*2+0x66],r12b
  432013:	imul   ebp,DWORD PTR [rsi+0x65],0x63206120
  43201a:	jne    0x43208e
  43201c:	jae    0x43208d
  43201e:	jb     0x432020
  432020:	rex.R
  432021:	rex.RB
  432022:	rex.WR
  432023:	rex.RB push r12
  432025:	add    BYTE PTR [r13+riz*2+0x6c],r12b
  43202a:	gs je  0x432092
  43202d:	and    BYTE PTR [rdx+0x6f],dh
  432030:	ja     0x4320a5
  432032:	and    BYTE PTR [rdi+0x66],ch
  432035:	and    BYTE PTR [rcx+0x20],ah
  432038:	je     0x43209b
  43203a:	(bad)  
  43203b:	ins    BYTE PTR es:[rdi],dx
  43203c:	add    BYTE PTR gs:[rcx+rcx*2+0x53],al
  432041:	rex.XB
  432042:	push   r10
  432044:	add    BYTE PTR [rcx+rbp*2+0x73],r12b
  432049:	movsxd esp,DWORD PTR [rcx+0x72]
  43204c:	and    BYTE PTR fs:[rbx+0x65],dh
  432050:	jae    0x4320c5
  432052:	imul   ebp,DWORD PTR [rdi+0x6e],0x61747320
  432059:	je     0x4320c0
  43205b:	add    BYTE PTR [rdi+rcx*2+0x0],al
  43205f:	add    BYTE PTR [rbp+0x78],ah
  432062:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  432066:	and    BYTE PTR gs:[rcx+0x6e],ah
  43206a:	and    BYTE PTR [rcx+0x6e],ah
  43206d:	outs   dx,DWORD PTR ds:[rsi]
  43206e:	outs   dx,BYTE PTR ds:[rsi]
  43206f:	jns    0x4320de
  432071:	outs   dx,DWORD PTR ds:[rsi]
  432072:	jne    0x4320e7
  432074:	and    BYTE PTR [rbx+0x6f],ah
  432077:	fs and BYTE PTR gs:[rdx+0x6c],ah
  43207c:	outs   dx,DWORD PTR ds:[rsi]
  43207d:	movsxd ebp,DWORD PTR [rbx+0x0]
  432080:	rex.R push rdx
  432082:	rex.WRXB push r8
  432084:	and    BYTE PTR [rcx+0x47],al
  432087:	rex.RXB push r10
  432089:	rex.RB
  43208a:	rex.RXB
  43208b:	push   r12
  43208d:	add    BYTE PTR [r10+0x65],r14b
  432091:	ins    DWORD PTR es:[rdi],dx
  432092:	outs   dx,DWORD PTR ds:[rsi]
  432093:	jbe    0x4320fa
  432095:	and    BYTE PTR [rcx+0x6e],ah
  432098:	and    BYTE PTR [rcx+0x67],ah
  43209b:	addr32 jb 0x432103
  43209e:	addr32 (bad) 
  4320a0:	je     0x432107
  4320a2:	and    BYTE PTR [rsi+0x75],ah
  4320a5:	outs   dx,BYTE PTR ds:[rsi]
  4320a6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4320aa:	outs   dx,BYTE PTR ds:[rsi]
  4320ab:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4320af:	push   rax
  4320b0:	and    BYTE PTR [rbx+0x41],al
  4320b3:	push   rbx
  4320b4:	push   rsp
  4320b5:	add    BYTE PTR [rdx+0x65],dh
  4320b8:	ins    DWORD PTR es:[rdi],dx
  4320b9:	outs   dx,DWORD PTR ds:[rsi]
  4320ba:	jbe    0x432121
  4320bc:	and    BYTE PTR [rcx+0x20],ah
  4320bf:	movsxd esp,DWORD PTR [rcx+0x73]
  4320c2:	je     0x4320c4
  4320c4:	rex.R push rdx
  4320c6:	rex.WRXB push r8
  4320c8:	and    BYTE PTR [rbx+0x4f],al
  4320cb:	rex.WR
  4320cc:	rex.WR
  4320cd:	push   r12
  4320cf:	rex.WB
  4320d0:	rex.WRXB
  4320d1:	rex.WRX add BYTE PTR [rdx+0x65],r14b
  4320d5:	ins    DWORD PTR es:[rdi],dx
  4320d6:	outs   dx,DWORD PTR ds:[rsi]
  4320d7:	jbe    0x43213e
  4320d9:	and    BYTE PTR [rcx+0x20],ah
  4320dc:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4320df:	ins    BYTE PTR es:[rdi],dx
  4320e0:	(bad)  
  4320e1:	je     0x43214c
  4320e3:	outs   dx,DWORD PTR ds:[rsi]
  4320e4:	outs   dx,BYTE PTR ds:[rsi]
  4320e5:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4320e9:	push   rax
  4320ea:	and    BYTE PTR [rbx+0x4f],al
  4320ed:	rex.WRX push rsi
  4320ef:	rex.RB push r10
  4320f1:	push   rbx
  4320f2:	rex.WB
  4320f3:	rex.WRXB
  4320f4:	rex.WRX add BYTE PTR [rdx+0x65],r14b
  4320f8:	ins    DWORD PTR es:[rdi],dx
  4320f9:	outs   dx,DWORD PTR ds:[rsi]
  4320fa:	jbe    0x432161
  4320fc:	and    BYTE PTR [rcx+0x20],ah
  4320ff:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432102:	jbe    0x432169
  432104:	jb     0x432179
  432106:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f524400
  43210d:	push   rax
  43210e:	and    BYTE PTR [rcx+rax*2+0x54],al
  432112:	rex.B
  432113:	rex.X
  432114:	push   r11
  432116:	add    BYTE PTR [r10+0x65],r14b
  43211a:	ins    DWORD PTR es:[rdi],dx
  43211b:	outs   dx,DWORD PTR ds:[rsi]
  43211c:	jbe    0x432183
  43211e:	and    BYTE PTR [rcx+0x20],ah
  432121:	fs (bad) 
  432123:	je     0x432186
  432125:	(bad)  
  432127:	jae    0x43218e
  432129:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  43212d:	push   rax
  43212e:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  432132:	rex.B
  432133:	rex.WB
  432134:	rex.WRX add BYTE PTR [rdx+0x65],r14b
  432138:	ins    DWORD PTR es:[rdi],dx
  432139:	outs   dx,DWORD PTR ds:[rsi]
  43213a:	jbe    0x4321a1
  43213c:	and    BYTE PTR [rcx+0x20],ah
  43213f:	outs   dx,DWORD PTR fs:[rsi]
  432141:	ins    DWORD PTR es:[rdi],dx
  432142:	(bad)  
  432143:	imul   ebp,DWORD PTR [rsi+0x0],0x504f5244
  43214a:	and    BYTE PTR [rbp+0x56],al
  43214d:	rex.RB
  43214e:	rex.WRX push rsp
  432150:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  432154:	rex.RXB
  432155:	rex.RXB
  432156:	rex.RB push r10
  432158:	add    BYTE PTR [rdx+0x65],dh
  43215b:	ins    DWORD PTR es:[rdi],dx
  43215c:	outs   dx,DWORD PTR ds:[rsi]
  43215d:	jbe    0x4321c4
  43215f:	and    BYTE PTR [rcx+0x6e],ah
  432162:	and    BYTE PTR [rbp+0x76],ah
  432165:	outs   dx,BYTE PTR gs:[rsi]
  432167:	je     0x432189
  432169:	je     0x4321dd
  43216b:	imul   esp,DWORD PTR [rdi+0x67],0x44007265
  432172:	push   rdx
  432173:	rex.WRXB push r8
  432175:	and    BYTE PTR [rbp+0x58],al
  432178:	push   rsp
  432179:	rex.RB
  43217a:	rex.WRX push rbx
  43217c:	rex.WB
  43217d:	rex.WRXB
  43217e:	rex.WRX add BYTE PTR [rdx+0x65],r14b
  432182:	ins    DWORD PTR es:[rdi],dx
  432183:	outs   dx,DWORD PTR ds:[rsi]
  432184:	jbe    0x4321eb
  432186:	and    BYTE PTR [rcx+0x6e],ah
  432189:	and    BYTE PTR [rbp+0x78],ah
  43218c:	je     0x4321f3
  43218e:	outs   dx,BYTE PTR ds:[rsi]
  43218f:	jae    0x4321fa
  432191:	outs   dx,DWORD PTR ds:[rsi]
  432192:	outs   dx,BYTE PTR ds:[rsi]
  432193:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  432197:	push   rax
  432198:	and    BYTE PTR [rsi+0x4f],al
  43219b:	push   rdx
  43219c:	rex.RB
  43219d:	rex.WB
  43219e:	rex.RXB
  43219f:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  4321a4:	and    BYTE PTR [r15+0x52],dl
  4321a8:	push   r8
  4321aa:	push   rax
  4321ab:	rex.RB push r10
  4321ad:	add    BYTE PTR [rdx+0x65],dh
  4321b0:	ins    DWORD PTR es:[rdi],dx
  4321b1:	outs   dx,DWORD PTR ds:[rsi]
  4321b2:	jbe    0x432219
  4321b4:	and    BYTE PTR [rcx+0x20],ah
  4321b7:	outs   dx,WORD PTR ds:[rsi]
  4321b9:	jb     0x432220
  4321bb:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  4321c2:	(bad)  
  4321c3:	and    BYTE PTR [rdi+0x72],dh
  4321c6:	(bad)  
  4321c7:	jo     0x432239
  4321c9:	gs jb  0x4321cc
  4321cc:	rex.R push rdx
  4321ce:	rex.WRXB push r8
  4321d0:	and    BYTE PTR [rsi+0x4f],al
  4321d3:	push   rdx
  4321d4:	rex.RB
  4321d5:	rex.WB
  4321d6:	rex.RXB
  4321d7:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  4321dc:	rex.WR
  4321dd:	add    BYTE PTR [r10+0x65],r14b
  4321e1:	ins    DWORD PTR es:[rdi],dx
  4321e2:	outs   dx,DWORD PTR ds:[rsi]
  4321e3:	jbe    0x43224a
  4321e5:	and    BYTE PTR [rcx+0x20],ah
  4321e8:	outs   dx,WORD PTR ds:[rsi]
  4321ea:	jb     0x432251
  4321ec:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  4321f3:	ins    BYTE PTR es:[rdi],dx
  4321f4:	add    BYTE PTR gs:[rdx+rdx*2+0x4f],al
  4321f9:	push   rax
  4321fa:	and    BYTE PTR [rsi+0x55],al
  4321fd:	rex.WRX
  4321fe:	rex.XB push r12
  432200:	rex.WB
  432201:	rex.WRXB
  432202:	rex.WRX add BYTE PTR [rdx+0x65],r14b
  432206:	ins    DWORD PTR es:[rdi],dx
  432207:	outs   dx,DWORD PTR ds:[rsi]
  432208:	jbe    0x43226f
  43220a:	and    BYTE PTR [rcx+0x20],ah
  43220d:	data16 jne 0x43227e
  432210:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  432214:	outs   dx,BYTE PTR ds:[rsi]
  432215:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  432219:	push   rax
  43221a:	and    BYTE PTR [rdi+0x52],al
  43221d:	rex.WRXB push r13
  43221f:	push   rax
  432220:	add    BYTE PTR [rdx+0x65],dh
  432223:	ins    DWORD PTR es:[rdi],dx
  432224:	outs   dx,DWORD PTR ds:[rsi]
  432225:	jbe    0x43228c
  432227:	and    BYTE PTR [rcx+0x20],ah
  43222a:	fs (bad) 
  43222c:	je     0x43228f
  43222e:	(bad)  
  432230:	jae    0x432297
  432232:	and    BYTE PTR [rdx+0x6f],dh
  432235:	ins    BYTE PTR es:[rdi],dx
  432236:	add    BYTE PTR gs:[rdx+rdx*2+0x4f],al
  43223b:	push   rax
  43223c:	and    BYTE PTR [rcx+0x4e],cl
  43223f:	rex.R
  432240:	rex.RB pop r8
  432242:	add    BYTE PTR [rdx+0x65],dh
  432245:	ins    DWORD PTR es:[rdi],dx
  432246:	outs   dx,DWORD PTR ds:[rsi]
  432247:	jbe    0x4322ae
  432249:	and    BYTE PTR [rcx+0x6e],ah
  43224c:	and    BYTE PTR [rcx+0x6e],ch
  43224f:	fs gs js 0x432253
  432253:	rex.R push rdx
  432255:	rex.WRXB push r8
  432257:	and    BYTE PTR [rcx+rax*2+0x4e],cl
  43225b:	rex.RXB push r13
  43225d:	rex.B
  43225e:	rex.RXB
  43225f:	add    BYTE PTR [r10+0x65],r14b
  432263:	ins    DWORD PTR es:[rdi],dx
  432264:	outs   dx,DWORD PTR ds:[rsi]
  432265:	jbe    0x4322cc
  432267:	and    BYTE PTR [rcx+0x20],ah
  43226a:	jo     0x4322de
  43226c:	outs   dx,DWORD PTR ds:[rsi]
  43226d:	movsxd esp,DWORD PTR [rbp+0x64]
  432270:	jne    0x4322e4
  432272:	(bad)  
  432273:	ins    BYTE PTR es:[rdi],dx
  432274:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  432278:	addr32 jne 0x4322dc
  43227b:	add    BYTE PTR gs:[edx+edx*2+0x4f],al
  432281:	push   rax
  432282:	and    BYTE PTR [rbp+0x41],cl
  432285:	push   rsp
  432286:	rex.RB push r10
  432288:	rex.WB
  432289:	rex.B
  43228a:	rex.WR
  43228b:	rex.WB pop r10
  43228d:	rex.RB
  43228e:	and    BYTE PTR [rsi+0x49],r10b
  432292:	rex.RB push r15
  432294:	add    BYTE PTR [rdx+0x65],dh
  432297:	ins    DWORD PTR es:[rdi],dx
  432298:	outs   dx,DWORD PTR ds:[rsi]
  432299:	jbe    0x432300
  43229b:	and    BYTE PTR [rcx+0x20],ah
  43229e:	ins    DWORD PTR es:[rdi],dx
  43229f:	(bad)  
  4322a0:	je     0x432307
  4322a2:	jb     0x43230d
  4322a4:	(bad)  
  4322a5:	ins    BYTE PTR es:[rdi],dx
  4322a6:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  4322ad:	gs ja  0x4322b0
  4322b0:	rex.R push rdx
  4322b2:	rex.WRXB push r8
  4322b4:	and    BYTE PTR [rdi+0x50],cl
  4322b7:	rex.RB push r10
  4322b9:	push   r12
  4322bb:	rex.WRXB push r10
  4322bd:	add    BYTE PTR [rdx+0x65],dh
  4322c0:	ins    DWORD PTR es:[rdi],dx
  4322c1:	outs   dx,DWORD PTR ds:[rsi]
  4322c2:	jbe    0x432329
  4322c4:	and    BYTE PTR [rcx+0x6e],ah
  4322c7:	and    BYTE PTR [rdi+0x70],ch
  4322ca:	gs jb  0x43232e
  4322cd:	je     0x43233e
  4322cf:	jb     0x4322d1
  4322d1:	rex.R push rdx
  4322d3:	rex.WRXB push r8
  4322d5:	and    BYTE PTR [rdi+0x50],cl
  4322d8:	rex.RB push r10
  4322da:	push   r12
  4322dc:	rex.WRXB push r10
  4322de:	and    BYTE PTR [rbx+0x4c],al
  4322e1:	push   r11
  4322e3:	push   rbx
  4322e4:	add    BYTE PTR [rdx+0x65],dh
  4322e7:	ins    DWORD PTR es:[rdi],dx
  4322e8:	outs   dx,DWORD PTR ds:[rsi]
  4322e9:	jbe    0x432350
  4322eb:	and    BYTE PTR [rcx+0x6e],ah
  4322ee:	and    BYTE PTR [rdi+0x70],ch
  4322f1:	gs jb  0x432355
  4322f4:	je     0x432365
  4322f6:	jb     0x432318
  4322f8:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4322fc:	jae    0x4322fe
  4322fe:	rex.R push rdx
  432300:	rex.WRXB push r8
  432302:	and    BYTE PTR [rdi+0x50],cl
  432305:	rex.RB push r10
  432307:	push   r12
  432309:	rex.WRXB push r10
  43230b:	and    BYTE PTR [rsi+0x41],al
  43230e:	rex.WRB
  43230f:	rex.WB
  432310:	rex.WR pop rcx
  432312:	add    BYTE PTR [rdx+0x65],dh
  432315:	ins    DWORD PTR es:[rdi],dx
  432316:	outs   dx,DWORD PTR ds:[rsi]
  432317:	jbe    0x43237e
  432319:	and    BYTE PTR [rcx+0x6e],ah
  43231c:	and    BYTE PTR [rdi+0x70],ch
  43231f:	gs jb  0x432383
  432322:	je     0x432393
  432324:	jb     0x432346
  432326:	data16 (bad) 
  432328:	ins    DWORD PTR es:[rdi],dx
  432329:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x504f5244
  432331:	and    BYTE PTR [rdi+0x57],cl
  432334:	rex.WRX
  432335:	rex.RB
  432336:	add    BYTE PTR [rdx+0x65],r14b
  43233a:	ins    DWORD PTR es:[rdi],dx
  43233b:	outs   dx,DWORD PTR ds:[rsi]
  43233c:	jbe    0x4323a3
  43233e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  432342:	(bad)  
  432343:	(bad)  
  432345:	jae    0x4323ac
  432347:	and    BYTE PTR [rdi+0x62],ch
  43234a:	push   0x65
  43234c:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  432350:	outs   dx,DWORD PTR ds:[rsi]
  432351:	ja     0x4323c1
  432353:	gs and BYTE PTR fs:[rdx+0x79],ah
  432358:	and    BYTE PTR [rcx+0x20],ah
  43235b:	fs (bad) 
  43235d:	je     0x4323c0
  43235f:	(bad)  
  432361:	jae    0x4323c8
  432363:	and    BYTE PTR [rdx+0x6f],dh
  432366:	ins    BYTE PTR es:[rdi],dx
  432367:	add    BYTE PTR gs:[rdx+rdx*2+0x4f],al
  43236c:	push   rax
  43236d:	and    BYTE PTR [rdx+0x4f],dl
  432370:	rex.WR
  432371:	add    BYTE PTR [r10+rdx*2+0x4f],r8b
  432376:	push   rax
  432377:	and    BYTE PTR [rdx+0x55],dl
  43237a:	rex.WR
  43237b:	add    BYTE PTR [r10+0x65],r14b
  43237f:	ins    DWORD PTR es:[rdi],dx
  432380:	outs   dx,DWORD PTR ds:[rsi]
  432381:	jbe    0x4323e8
  432383:	and    BYTE PTR [rcx+0x20],ah
  432386:	jb     0x4323ed
  432388:	ja     0x4323fc
  43238a:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x656c7572
  432392:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  432396:	push   rax
  432397:	and    BYTE PTR [rbx+0x43],dl
  43239a:	rex.W
  43239b:	rex.RB
  43239c:	rex.WRB
  43239d:	add    BYTE PTR [r10+0x65],sil
  4323a1:	ins    DWORD PTR es:[rdi],dx
  4323a2:	outs   dx,DWORD PTR ds:[rsi]
  4323a3:	jbe    0x43240a
  4323a5:	and    BYTE PTR [rcx+0x20],ah
  4323a8:	jae    0x43240d
  4323aa:	push   0x616d65
  4323af:	rex.R push rdx
  4323b1:	rex.WRXB push r8
  4323b3:	and    BYTE PTR [rbx+0x45],dl
  4323b6:	push   rcx
  4323b7:	push   rbp
  4323b8:	rex.RB
  4323b9:	rex.WRX
  4323ba:	rex.XB
  4323bb:	add    BYTE PTR [r10+0x65],r14b
  4323bf:	ins    DWORD PTR es:[rdi],dx
  4323c0:	outs   dx,DWORD PTR ds:[rsi]
  4323c1:	jbe    0x432428
  4323c3:	and    BYTE PTR [rcx+0x20],ah
  4323c6:	jae    0x43242d
  4323c8:	jno    0x43243f
  4323ca:	outs   dx,BYTE PTR gs:[rsi]
  4323cc:	movsxd esp,DWORD PTR [rbp+0x0]
  4323cf:	rex.R push rdx
  4323d1:	rex.WRXB push r8
  4323d3:	and    BYTE PTR [rbx+0x45],dl
  4323d6:	push   rdx
  4323d7:	push   rsi
  4323d8:	rex.RB push r10
  4323da:	add    BYTE PTR [rax],al
  4323dc:	add    BYTE PTR [rax],al
  4323de:	add    BYTE PTR [rax],al
  4323e0:	jb     0x432447
  4323e2:	ins    DWORD PTR es:[rdi],dx
  4323e3:	outs   dx,DWORD PTR ds:[rsi]
  4323e4:	jbe    0x43244b
  4323e6:	and    BYTE PTR [rcx+0x20],ah
  4323e9:	outs   dx,WORD PTR ds:[rsi]
  4323eb:	jb     0x432452
  4323ed:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  4323f4:	jbe    0x43245b
  4323f6:	jb     0x432418
  4323f8:	fs gs jae 0x43245f
  4323fc:	jb     0x432467
  4323fe:	jo     0x432474
  432400:	outs   dx,DWORD PTR ds:[rsi]
  432401:	jb     0x432403
  432403:	rex.R push rdx
  432405:	rex.WRXB push r8
  432407:	and    BYTE PTR [rcx+rax*2+0x42],dl
  43240b:	rex.WR
  43240c:	add    BYTE PTR [r10+0x65],r14b
  432410:	ins    DWORD PTR es:[rdi],dx
  432411:	outs   dx,DWORD PTR ds:[rsi]
  432412:	jbe    0x432479
  432414:	and    BYTE PTR [rcx+0x20],ah
  432417:	je     0x43247a
  432419:	(bad)  
  43241a:	ins    BYTE PTR es:[rdi],dx
  43241b:	add    BYTE PTR gs:[rdx+rdx*2+0x4f],al
  432420:	push   rax
  432421:	and    BYTE PTR [rcx+rax*2+0x42],dl
  432425:	rex.WR
  432426:	rex.RB push r11
  432428:	push   rax
  432429:	rex.B
  43242a:	rex.XB
  43242b:	add    BYTE PTR [r10+0x65],r14b
  43242f:	ins    DWORD PTR es:[rdi],dx
  432430:	outs   dx,DWORD PTR ds:[rsi]
  432431:	jbe    0x432498
  432433:	and    BYTE PTR [rcx+0x20],ah
  432436:	je     0x432499
  432438:	(bad)  
  432439:	ins    BYTE PTR es:[rdi],dx
  43243a:	gs jae 0x4324ad
  43243d:	(bad)  
  43243e:	movsxd esp,DWORD PTR [rbp+0x0]
  432441:	add    BYTE PTR [rax],al
  432443:	add    BYTE PTR [rax],al
  432445:	add    BYTE PTR [rax],al
  432447:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  43244b:	push   rax
  43244c:	and    BYTE PTR [rbp+rax*2+0x58],dl
  432450:	push   rsp
  432451:	and    BYTE PTR [rbx+0x45],dl
  432454:	push   r10
  432456:	rex.XB
  432457:	rex.W and BYTE PTR [rbx+0x4f],al
  43245b:	rex.WRX
  43245c:	rex.RX
  43245d:	rex.WB
  43245e:	rex.RXB push r13
  432460:	push   rdx
  432461:	push   r12
  432463:	rex.WB
  432464:	rex.WRXB
  432465:	rex.WRX add BYTE PTR [rax],r8b
  432468:	jb     0x4324cf
  43246a:	ins    DWORD PTR es:[rdi],dx
  43246b:	outs   dx,DWORD PTR ds:[rsi]
  43246c:	jbe    0x4324d3
  43246e:	and    BYTE PTR [rcx+0x20],ah
  432471:	je     0x4324d8
  432473:	js     0x4324e9
  432475:	and    BYTE PTR [rbx+0x65],dh
  432478:	(bad)  
  432479:	jb     0x4324de
  43247b:	push   0x6e6f6320
  432480:	imul   sp,WORD PTR [rdi+0x75],0x6172
  432486:	je     0x4324f1
  432488:	outs   dx,DWORD PTR ds:[rsi]
  432489:	outs   dx,BYTE PTR ds:[rsi]
  43248a:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  43248e:	push   rax
  43248f:	and    BYTE PTR [rbp+rax*2+0x58],dl
  432493:	push   rsp
  432494:	and    BYTE PTR [rbx+0x45],dl
  432497:	push   r10
  432499:	rex.XB
  43249a:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  43249f:	push   rsp
  4324a0:	rex.WB
  4324a1:	rex.WRXB
  4324a2:	rex.WRX
  4324a3:	push   r10
  4324a5:	pop    rcx
  4324a6:	add    BYTE PTR [rax],al
  4324a8:	jb     0x43250f
  4324aa:	ins    DWORD PTR es:[rdi],dx
  4324ab:	outs   dx,DWORD PTR ds:[rsi]
  4324ac:	jbe    0x432513
  4324ae:	and    BYTE PTR [rcx+0x20],ah
  4324b1:	je     0x432518
  4324b3:	js     0x432529
  4324b5:	and    BYTE PTR [rbx+0x65],dh
  4324b8:	(bad)  
  4324b9:	jb     0x43251e
  4324bb:	push   0x63696420
  4324c0:	je     0x43252b
  4324c2:	outs   dx,DWORD PTR ds:[rsi]
  4324c3:	outs   dx,BYTE PTR ds:[rsi]
  4324c4:	(bad)  
  4324c5:	jb     0x432540
  4324c7:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4324cb:	push   rax
  4324cc:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4324d0:	push   rsp
  4324d1:	and    BYTE PTR [rbx+0x45],dl
  4324d4:	push   r10
  4324d6:	rex.XB
  4324d7:	rex.W and BYTE PTR [rax+0x41],dl
  4324db:	push   rdx
  4324dc:	push   rbx
  4324dd:	rex.RB push r10
  4324df:	add    BYTE PTR [rdx+0x65],dh
  4324e2:	ins    DWORD PTR es:[rdi],dx
  4324e3:	outs   dx,DWORD PTR ds:[rsi]
  4324e4:	jbe    0x43254b
  4324e6:	and    BYTE PTR [rcx+0x20],ah
  4324e9:	je     0x432550
  4324eb:	js     0x432561
  4324ed:	and    BYTE PTR [rbx+0x65],dh
  4324f0:	(bad)  
  4324f1:	jb     0x432556
  4324f3:	push   0x72617020
  4324f8:	jae    0x43255f
  4324fa:	jb     0x4324fc
  4324fc:	rex.R push rdx
  4324fe:	rex.WRXB push r8
  432500:	and    BYTE PTR [rbp+rax*2+0x58],dl
  432504:	push   rsp
  432505:	and    BYTE PTR [rbx+0x45],dl
  432508:	push   r10
  43250a:	rex.XB
  43250b:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  432510:	push   rax
  432511:	rex.WR
  432512:	push   r12
  432514:	add    BYTE PTR [r10+0x65],r14b
  432518:	ins    DWORD PTR es:[rdi],dx
  432519:	outs   dx,DWORD PTR ds:[rsi]
  43251a:	jbe    0x432581
  43251c:	and    BYTE PTR [rcx+0x20],ah
  43251f:	je     0x432586
  432521:	js     0x432597
  432523:	and    BYTE PTR [rbx+0x65],dh
  432526:	(bad)  
  432527:	jb     0x43258c
  432529:	push   0x6d657420
  43252e:	jo     0x43259c
  432530:	(bad)  
  432531:	je     0x432598
  432533:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  432537:	push   rax
  432538:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  43253c:	rex.RXB
  43253d:	rex.RXB
  43253e:	rex.RB push r10
  432540:	add    BYTE PTR [rdx+0x65],dh
  432543:	ins    DWORD PTR es:[rdi],dx
  432544:	outs   dx,DWORD PTR ds:[rsi]
  432545:	jbe    0x4325ac
  432547:	and    BYTE PTR [rcx+0x20],ah
  43254a:	je     0x4325be
  43254c:	imul   esp,DWORD PTR [rdi+0x67],0x44007265
  432553:	push   rdx
  432554:	rex.WRXB push r8
  432556:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  43255a:	add    BYTE PTR [r10+0x65],r14b
  43255e:	ins    DWORD PTR es:[rdi],dx
  43255f:	outs   dx,DWORD PTR ds:[rsi]
  432560:	jbe    0x4325c7
  432562:	and    BYTE PTR [rcx+0x20],ah
  432565:	fs (bad) 
  432567:	je     0x4325ca
  432569:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43256d:	add    BYTE PTR gs:[rdx+rdx*2+0x4f],al
  432572:	push   rax
  432573:	and    BYTE PTR [rbp+0x53],dl
  432576:	rex.RB push r10
  432578:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  43257c:	push   rax
  43257d:	and    BYTE PTR [rbp+0x53],dl
  432580:	rex.RB push r10
  432582:	and    BYTE PTR [rbp+0x41],cl
  432585:	push   rax
  432586:	push   rax
  432587:	rex.WB
  432588:	rex.WRX
  432589:	rex.RXB add BYTE PTR [r8],r8b
  43258c:	add    BYTE PTR [rax],al
  43258e:	add    BYTE PTR [rax],al
  432590:	jb     0x4325f7
  432592:	ins    DWORD PTR es:[rdi],dx
  432593:	outs   dx,DWORD PTR ds:[rsi]
  432594:	jbe    0x4325fb
  432596:	and    BYTE PTR [rcx+0x20],ah
  432599:	jne    0x43260e
  43259b:	gs jb  0x4325be
  43259e:	ins    DWORD PTR es:[rdi],dx
  43259f:	(bad)  
  4325a0:	jo     0x432612
  4325a2:	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
  4325a9:	and    BYTE PTR [rcx+0x20],ah
  4325ac:	outs   dx,WORD PTR ds:[rsi]
  4325ae:	jb     0x432615
  4325b0:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  4325b7:	jbe    0x43261e
  4325b9:	jb     0x4325bb
  4325bb:	rex.R push rdx
  4325bd:	rex.WRXB push r8
  4325bf:	and    BYTE PTR [rsi+0x49],dl
  4325c2:	rex.RB push r15
  4325c4:	add    BYTE PTR [rdx+0x65],dh
  4325c7:	ins    DWORD PTR es:[rdi],dx
  4325c8:	outs   dx,DWORD PTR ds:[rsi]
  4325c9:	jbe    0x432630
  4325cb:	and    BYTE PTR [rcx+0x20],ah
  4325ce:	jbe    0x432639
  4325d0:	gs ja  0x4325d3
  4325d3:	rex.RB
  4325d4:	rex.WRX
  4325d5:	add    BYTE PTR [rbp+0x58],r8b
  4325d9:	rex.RB
  4325da:	rex.XB push r13
  4325dc:	push   rsp
  4325dd:	add    BYTE PTR [r13+0x78],r12b
  4325e1:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  4325e5:	and    BYTE PTR gs:[rcx+0x20],ah
  4325e9:	jo     0x43265d
  4325eb:	gs jo  0x43264f
  4325ee:	jb     0x432655
  4325f0:	and    BYTE PTR fs:[rbx+0x74],dh
  4325f4:	(bad)  
  4325f5:	je     0x43265c
  4325f7:	ins    DWORD PTR es:[rdi],dx
  4325f8:	outs   dx,BYTE PTR gs:[rsi]
  4325fa:	je     0x4325fc
  4325fc:	rex.RB pop r8
  4325fe:	push   rax
  4325ff:	rex.WR
  432600:	rex.B
  432601:	rex.WB
  432602:	rex.WRX add BYTE PTR [rax],r8b
  432605:	add    BYTE PTR [rax],al
  432607:	add    BYTE PTR [rbx+0x68],dh
  43260a:	outs   dx,DWORD PTR ds:[rsi]
  43260b:	ja     0x43262d
  43260d:	je     0x432677
  43260f:	and    BYTE PTR gs:[rbp+0x78],ah
  432613:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  432617:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c7020
  43261e:	outs   dx,BYTE PTR ds:[rsi]
  43261f:	and    BYTE PTR [rdi+0x66],ch
  432622:	and    BYTE PTR [rcx+0x20],ah
  432625:	jae    0x43269b
  432627:	(bad)  
  432628:	je     0x43268f
  43262a:	ins    DWORD PTR es:[rdi],dx
  43262b:	outs   dx,BYTE PTR gs:[rsi]
  43262d:	je     0x43262f
  43262f:	rex.RX
  432630:	rex.RB push r12
  432632:	rex.XB
  432633:	rex.W add BYTE PTR [rax],al
  432636:	add    BYTE PTR [rax],al
  432638:	jb     0x43269f
  43263a:	je     0x4326ae
  43263c:	imul   esp,DWORD PTR [rbp+0x76],0x6f722065
  432643:	ja     0x4326b8
  432645:	and    BYTE PTR [rsi+0x72],ah
  432648:	outs   dx,DWORD PTR ds:[rsi]
  432649:	ins    DWORD PTR es:[rdi],dx
  43264a:	and    BYTE PTR [rcx+0x20],ah
  43264d:	jno    0x4326c4
  43264f:	gs jb  0x4326cb
  432652:	and    BYTE PTR [rbp+0x73],dh
  432655:	imul   ebp,DWORD PTR [rsi+0x67],0x63206120
  43265c:	jne    0x4326d0
  43265e:	jae    0x4326cf
  432660:	jb     0x432662
  432662:	rex.RXB push r10
  432664:	rex.B
  432665:	rex.WRX push rsp
  432667:	add    BYTE PTR [rbp+riz*2+0x66],ah
  43266b:	imul   ebp,DWORD PTR [rsi+0x65],0x63636120
  432672:	gs jae 0x4326e8
  432675:	and    BYTE PTR [rax+0x72],dh
  432678:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  43267f:	jae    0x432681
  432681:	rex.WB
  432682:	rex.WRX push rbx
  432684:	rex.RB push r10
  432686:	push   rsp
  432687:	add    BYTE PTR [rbx+0x72],ah
  43268a:	gs (bad) 
  43268c:	je     0x4326f3
  43268e:	and    BYTE PTR [rsi+0x65],ch
  432691:	ja     0x4326b3
  432693:	jb     0x432704
  432695:	ja     0x43270a
  432697:	and    BYTE PTR [rcx+0x6e],ch
  43269a:	and    BYTE PTR [rcx+0x20],ah
  43269d:	je     0x432700
  43269f:	(bad)  
  4326a0:	ins    BYTE PTR es:[rdi],dx
  4326a1:	add    BYTE PTR gs:[rcx+rcx*2+0x53],cl
  4326a6:	push   rsp
  4326a7:	rex.RB
  4326a8:	rex.WRX add BYTE PTR [rcx+r13*2+0x73],r13b
  4326ad:	je     0x432714
  4326af:	outs   dx,BYTE PTR ds:[rsi]
  4326b0:	and    BYTE PTR [rsi+0x6f],ah
  4326b3:	jb     0x4326d5
  4326b5:	(bad)  
  4326b6:	and    BYTE PTR [rsi+0x6f],ch
  4326b9:	je     0x432724
  4326bb:	imul   sp,WORD PTR [rbx+0x61],0x6974
  4326c1:	outs   dx,DWORD PTR ds:[rsi]
  4326c2:	outs   dx,BYTE PTR ds:[rsi]
  4326c3:	add    BYTE PTR [rdi+rcx*2+0x41],cl
  4326c7:	add    BYTE PTR [rdi+rbp*2+0x61],r13b
  4326cc:	and    BYTE PTR fs:[rcx+0x20],ah
  4326d0:	jae    0x43273a
  4326d2:	(bad)  
  4326d3:	jb     0x43273a
  4326d5:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  4326da:	jb     0x43273d
  4326dc:	jb     0x432757
  4326de:	and    BYTE PTR [rsi+0x69],ah
  4326e1:	ins    BYTE PTR es:[rdi],dx
  4326e2:	add    BYTE PTR gs:[rdi+rcx*2+0x43],cl
  4326e7:	rex.WXB add BYTE PTR [r15+r13*2+0x63],bpl
  4326ec:	imul   esp,DWORD PTR [rax],0x61
  4326ef:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4326f3:	ins    BYTE PTR es:[rdi],dx
  4326f4:	add    BYTE PTR gs:[rbp+0x4f],cl
  4326f8:	push   rsi
  4326f9:	add    BYTE PTR [r8+0x6f],r14b
  4326fd:	jae    0x432768
  4326ff:	je     0x43276a
  432701:	outs   dx,DWORD PTR ds:[rsi]
  432702:	outs   dx,BYTE PTR ds:[rsi]
  432703:	and    BYTE PTR [rcx+0x20],ah
  432706:	movsxd esi,DWORD PTR [rbp+0x72]
  432709:	jae    0x43277a
  43270b:	jb     0x43270d
  43270d:	rex.WRX
  43270e:	rex.WRXB push r12
  432710:	rex.WB
  432711:	rex.RX pop rcx
  432713:	add    BYTE PTR [rdi+0x65],ah
  432716:	outs   dx,BYTE PTR ds:[rsi]
  432717:	gs jb  0x43277b
  43271a:	je     0x432781
  43271c:	and    BYTE PTR [rcx+0x20],ah
  43271f:	outs   dx,BYTE PTR ds:[rsi]
  432720:	outs   dx,DWORD PTR ds:[rsi]
  432721:	je     0x43278c
  432723:	imul   sp,WORD PTR [rbx+0x61],0x6974
  432729:	outs   dx,DWORD PTR ds:[rsi]
  43272a:	outs   dx,BYTE PTR ds:[rsi]
  43272b:	add    BYTE PTR [rax+0x52],dl
  43272e:	rex.RB push r8
  432730:	push   r10
  432732:	add    BYTE PTR [r8],r8b
  432735:	add    BYTE PTR [rax],al
  432737:	add    BYTE PTR [rax+0x72],dh
  43273a:	gs jo  0x43279e
  43273d:	jb     0x4327a4
  43273f:	and    BYTE PTR [rcx+0x20],ah
  432742:	jae    0x4327b8
  432744:	(bad)  
  432745:	je     0x4327ac
  432747:	ins    DWORD PTR es:[rdi],dx
  432748:	outs   dx,BYTE PTR gs:[rsi]
  43274a:	je     0x43276c
  43274c:	outs   dx,WORD PTR ds:[rsi]
  43274e:	jb     0x432770
  432750:	gs js  0x4327b8
  432753:	movsxd esi,DWORD PTR [rbp+0x74]
  432756:	imul   ebp,DWORD PTR [rdi+0x6e],0x45525000
  43275d:	push   rax
  43275e:	push   r10
  432760:	and    BYTE PTR [r10+rdx*2+0x41],r10b
  432765:	rex.WRX push rbx
  432767:	rex.B
  432768:	rex.XB push r12
  43276a:	rex.WB
  43276b:	rex.WRXB
  43276c:	rex.WRX add BYTE PTR [rax],r8b
  43276f:	add    BYTE PTR [rax+0x72],dh
  432772:	gs jo  0x4327d6
  432775:	jb     0x4327dc
  432777:	and    BYTE PTR [rax+rbp*2+0x65],dh
  43277b:	and    BYTE PTR [rbx+0x75],ah
  43277e:	jb     0x4327f2
  432780:	outs   dx,BYTE PTR gs:[rsi]
  432782:	je     0x4327a4
  432784:	je     0x4327f8
  432786:	(bad)  
  432787:	outs   dx,BYTE PTR ds:[rsi]
  432788:	jae    0x4327eb
  43278a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43278e:	outs   dx,BYTE PTR ds:[rsi]
  43278f:	and    BYTE PTR [rsi+0x6f],ah
  432792:	jb     0x4327b4
  432794:	je     0x43280d
  432796:	outs   dx,DWORD PTR ds:[rsi]
  432797:	sub    eax,0x73616870
  43279c:	and    BYTE PTR gs:[rbx+0x6f],ah
  4327a0:	ins    DWORD PTR es:[rdi],dx
  4327a1:	ins    DWORD PTR es:[rdi],dx
  4327a2:	imul   esi,DWORD PTR [rax+rax*1+0x52],0x53534145
  4327aa:	rex.WB
  4327ab:	rex.RXB
  4327ac:	rex.WRX and BYTE PTR [rdi+0x57],r9b
  4327b0:	rex.WRX
  4327b1:	rex.RB
  4327b2:	add    BYTE PTR [rax],r8b
  4327b5:	add    BYTE PTR [rax],al
  4327b7:	add    BYTE PTR [rbx+0x68],ah
  4327ba:	(bad)  
  4327bb:	outs   dx,BYTE PTR ds:[rsi]
  4327bc:	and    BYTE PTR gs:[eax+ebp*2+0x65],dh
  4327c2:	and    BYTE PTR [rdi+0x77],ch
  4327c5:	outs   dx,BYTE PTR ds:[rsi]
  4327c6:	gs jb  0x43283c
  4327c9:	push   0x6f207069
  4327ce:	data16 and BYTE PTR [rcx+riz*2+0x74],ah
  4327d3:	(bad)  
  4327d4:	(bad)  
  4327d6:	jae    0x43283d
  4327d8:	and    BYTE PTR [rdi+0x62],ch
  4327db:	push   0x65
  4327dd:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  4327e1:	outs   dx,DWORD PTR ds:[rsi]
  4327e2:	ja     0x432852
  4327e4:	gs and BYTE PTR fs:[rdx+0x79],ah
  4327e9:	and    BYTE PTR [rcx+0x20],ah
  4327ec:	fs (bad) 
  4327ee:	je     0x432851
  4327f0:	(bad)  
  4327f2:	jae    0x432859
  4327f4:	and    BYTE PTR [rdx+0x6f],dh
  4327f7:	ins    BYTE PTR es:[rdi],dx
  4327f8:	add    BYTE PTR gs:[rdx+0x45],dl
  4327fc:	rex.RX push rdx
  4327fe:	rex.RB push r11
  432800:	rex.W and BYTE PTR [rbp+0x41],cl
  432804:	push   rsp
  432805:	rex.RB push r10
  432807:	rex.WB
  432808:	rex.B
  432809:	rex.WR
  43280a:	rex.WB pop r10
  43280c:	rex.RB
  43280d:	and    BYTE PTR [rsi+0x49],r10b
  432811:	rex.RB push r15
  432813:	add    BYTE PTR [rax],al
  432815:	add    BYTE PTR [rax],al
  432817:	add    BYTE PTR [rdx+0x65],dh
  43281a:	jo     0x432888
  43281c:	(bad)  
  43281d:	movsxd esp,DWORD PTR [rbp+0x20]
  432820:	je     0x43288a
  432822:	and    BYTE PTR gs:[rbx+0x6f],ah
  432826:	outs   dx,BYTE PTR ds:[rsi]
  432827:	je     0x43288e
  432829:	outs   dx,BYTE PTR ds:[rsi]
  43282a:	je     0x43289f
  43282c:	and    BYTE PTR [rdi+0x66],ch
  43282f:	and    BYTE PTR [rcx+0x20],ah
  432832:	ins    DWORD PTR es:[rdi],dx
  432833:	(bad)  
  432834:	je     0x43289b
  432836:	jb     0x4328a1
  432838:	(bad)  
  432839:	ins    BYTE PTR es:[rdi],dx
  43283a:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  432841:	gs ja  0x432844
  432844:	push   rdx
  432845:	rex.RB
  432846:	rex.WB
  432847:	rex.WRX
  432848:	rex.R
  432849:	rex.RB pop r8
  43284b:	add    BYTE PTR [rdx+0x65],dh
  43284e:	(bad)  
  43284f:	jne    0x4328ba
  432851:	ins    BYTE PTR es:[rdi],dx
  432852:	and    BYTE PTR fs:[rcx+0x6e],ch
  432856:	fs gs js 0x4328bf
  43285a:	jae    0x43285c
  43285c:	push   rdx
  43285d:	rex.RB
  43285e:	rex.WR
  43285f:	rex.RB
  432860:	push   r11
  432862:	and    BYTE PTR [r11+0x41],r10b
  432866:	push   rsi
  432867:	rex.RB push r8
  432869:	rex.WRXB
  43286a:	rex.WB
  43286b:	rex.WRX push rsp
  43286d:	add    BYTE PTR [rax],al
  43286f:	add    BYTE PTR [rbp+riz*2+0x73],ah
  432873:	je     0x4328e7
  432875:	outs   dx,DWORD PTR ds:[rsi]
  432876:	jns    0x432898
  432878:	(bad)  
  432879:	and    BYTE PTR [rax+0x72],dh
  43287c:	gs jbe 0x4328e8
  43287f:	outs   dx,DWORD PTR ds:[rsi]
  432880:	jne    0x4328f5
  432882:	ins    BYTE PTR es:[rdi],dx
  432883:	jns    0x4328a5
  432885:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  43288d:	jae    0x4328f0
  43288f:	jbe    0x4328f6
  432891:	jo     0x432902
  432893:	imul   ebp,DWORD PTR [rsi+0x74],0x53455200
  43289a:	rex.RB push r12
  43289c:	add    BYTE PTR [rax],al
  43289e:	add    BYTE PTR [rax],al
  4328a0:	jb     0x432907
  4328a2:	jae    0x432918
  4328a4:	outs   dx,DWORD PTR ds:[rsi]
  4328a5:	jb     0x43290c
  4328a7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4328ab:	and    BYTE PTR [rsi+0x61],dh
  4328ae:	ins    BYTE PTR es:[rdi],dx
  4328af:	jne    0x432916
  4328b1:	and    BYTE PTR [rdi+0x66],ch
  4328b4:	and    BYTE PTR [rcx+0x20],ah
  4328b7:	jb     0x43292e
  4328b9:	outs   dx,BYTE PTR ds:[rsi]
  4328ba:	sub    eax,0x656d6974
  4328bf:	and    BYTE PTR [rax+0x61],dh
  4328c2:	jb     0x432925
  4328c4:	ins    DWORD PTR es:[rdi],dx
  4328c5:	gs je  0x43292d
  4328c8:	jb     0x4328ea
  4328ca:	je     0x43293b
  4328cc:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4328d0:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4328d4:	(bad)  
  4328d5:	jne    0x432943
  4328d7:	je     0x4328f9
  4328d9:	jbe    0x43293c
  4328db:	ins    BYTE PTR es:[rdi],dx
  4328dc:	jne    0x432943
  4328de:	add    BYTE PTR [rdx+0x45],dl
  4328e1:	push   rsi
  4328e2:	rex.WRXB
  4328e3:	rex.WXB
  4328e4:	add    BYTE PTR [r10+0x65],r14b
  4328e8:	ins    DWORD PTR es:[rdi],dx
  4328e9:	outs   dx,DWORD PTR ds:[rsi]
  4328ea:	jbe    0x432951
  4328ec:	and    BYTE PTR [rcx+0x63],ah
  4328ef:	movsxd esp,DWORD PTR [rbp+0x73]
  4328f2:	jae    0x432914
  4328f4:	jo     0x432968
  4328f6:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  4328fd:	jae    0x4328ff
  4328ff:	push   rdx
  432900:	rex.WRXB
  432901:	rex.WR
  432902:	rex.WR
  432903:	rex.X
  432904:	rex.B
  432905:	rex.XB
  432906:	rex.WXB add BYTE PTR [r10+0x4f],dl
  43290a:	rex.WR
  43290b:	rex.WR
  43290c:	rex.X
  43290d:	rex.B
  43290e:	rex.XB
  43290f:	rex.WXB and BYTE PTR [r8+0x52],dl
  432913:	rex.RB push r8
  432915:	push   r10
  432917:	rex.RB
  432918:	add    BYTE PTR [rax],r8b
  43291b:	add    BYTE PTR [rax],al
  43291d:	add    BYTE PTR [rax],al
  43291f:	add    BYTE PTR [rbx+0x61],ah
  432922:	outs   dx,BYTE PTR ds:[rsi]
  432923:	movsxd esp,DWORD PTR [rbp+0x6c]
  432926:	and    BYTE PTR [rcx+0x20],ah
  432929:	je     0x43299d
  43292b:	(bad)  
  43292c:	outs   dx,BYTE PTR ds:[rsi]
  43292d:	jae    0x432990
  43292f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  432933:	outs   dx,BYTE PTR ds:[rsi]
  432934:	and    BYTE PTR [rax+rbp*2+0x61],dh
  432938:	je     0x43295a
  43293a:	ja     0x43299d
  43293c:	jae    0x43295e
  43293e:	gs (bad) 
  432940:	jb     0x4329ae
  432942:	imul   esp,DWORD PTR [rbp+0x72],0x65727020
  432949:	jo     0x4329ac
  43294b:	jb     0x4329b2
  43294d:	and    BYTE PTR fs:[rsi+0x6f],ah
  432951:	jb     0x432973
  432953:	je     0x4329cc
  432955:	outs   dx,DWORD PTR ds:[rsi]
  432956:	sub    eax,0x73616870
  43295b:	and    BYTE PTR gs:[rbx+0x6f],ah
  43295f:	ins    DWORD PTR es:[rdi],dx
  432960:	ins    DWORD PTR es:[rdi],dx
  432961:	imul   esi,DWORD PTR [rax+rax*1+0x52],0x424c4c4f
  432969:	rex.B
  43296a:	rex.XB
  43296b:	rex.WXB and BYTE PTR [r15+r9*2+0x20],dl
  432970:	push   rbx
  432971:	push   r14
  432973:	rex.RB push r8
  432975:	rex.WRXB
  432976:	rex.WB
  432977:	rex.WRX push rsp
  432979:	add    BYTE PTR [rdx+0x6f],dh
  43297c:	ins    BYTE PTR es:[rdi],dx
  43297d:	ins    BYTE PTR es:[rdi],dx
  43297e:	and    BYTE PTR [rdx+0x61],ah
  432981:	movsxd ebp,DWORD PTR [rbx+0x20]
  432984:	je     0x4329f5
  432986:	and    BYTE PTR [rcx+0x20],ah
  432989:	jae    0x4329ec
  43298b:	jbe    0x4329f2
  43298d:	jo     0x4329fe
  43298f:	imul   ebp,DWORD PTR [rsi+0x74],0x56415300
  432996:	rex.RB push r8
  432998:	rex.WRXB
  432999:	rex.WB
  43299a:	rex.WRX push rsp
  43299c:	add    BYTE PTR [rax],al
  43299e:	add    BYTE PTR [rax],al
  4329a0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  4329a8:	and    BYTE PTR [rsi+0x65],ch
  4329ab:	ja     0x4329cd
  4329ad:	jae    0x432a10
  4329af:	jbe    0x432a16
  4329b1:	jo     0x432a22
  4329b3:	imul   ebp,DWORD PTR [rsi+0x74],0x74697720
  4329ba:	push   0x74206e69
  4329bf:	push   0x75632065
  4329c4:	jb     0x432a38
  4329c6:	outs   dx,BYTE PTR gs:[rsi]
  4329c8:	je     0x4329ea
  4329ca:	je     0x432a3e
  4329cc:	(bad)  
  4329cd:	outs   dx,BYTE PTR ds:[rsi]
  4329ce:	jae    0x432a31
  4329d0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4329d4:	outs   dx,BYTE PTR ds:[rsi]
  4329d5:	add    BYTE PTR [rbx+0x45],dl
  4329d8:	rex.XB push r13
  4329da:	push   rdx
  4329db:	rex.WB push r12
  4329dd:	pop    rcx
  4329de:	and    BYTE PTR [rcx+rax*2+0x42],cl
  4329e2:	rex.RB
  4329e3:	rex.WR add BYTE PTR [rax],r8b
  4329e6:	add    BYTE PTR [rax],al
  4329e8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6f20
  4329f0:	jb     0x432a12
  4329f2:	movsxd ebp,DWORD PTR [rax+0x61]
  4329f5:	outs   dx,BYTE PTR ds:[rsi]
  4329f6:	and    BYTE PTR gs:[ecx+0x20],ah
  4329fb:	jae    0x432a62
  4329fd:	movsxd esi,DWORD PTR [rbp+0x72]
  432a00:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6562616c
  432a08:	ins    BYTE PTR es:[rdi],dx
  432a09:	and    BYTE PTR [rcx+0x70],ah
  432a0c:	jo     0x432a7a
  432a0e:	imul   esp,DWORD PTR [rbp+0x64],0x206f7420
  432a15:	(bad)  
  432a16:	outs   dx,BYTE PTR ds:[rsi]
  432a17:	and    BYTE PTR [rdi+0x62],ch
  432a1a:	push   0x65
  432a1c:	movsxd esi,DWORD PTR [rax+rax*1+0x53]
  432a20:	rex.RB
  432a21:	rex.WR
  432a22:	rex.RB
  432a23:	rex.XB push r12
  432a25:	add    BYTE PTR [rax],al
  432a27:	add    BYTE PTR [rdx+0x65],dh
  432a2a:	je     0x432a9e
  432a2c:	imul   esp,DWORD PTR [rbp+0x76],0x6f722065
  432a33:	ja     0x432aa8
  432a35:	and    BYTE PTR [rsi+0x72],ah
  432a38:	outs   dx,DWORD PTR ds:[rsi]
  432a39:	ins    DWORD PTR es:[rdi],dx
  432a3a:	and    BYTE PTR [rcx+0x20],ah
  432a3d:	je     0x432aa0
  432a3f:	(bad)  
  432a40:	ins    BYTE PTR es:[rdi],dx
  432a41:	and    BYTE PTR gs:[rdi+0x72],ch
  432a45:	and    BYTE PTR [rsi+0x69],dh
  432a48:	gs ja  0x432a4b
  432a4b:	push   rbx
  432a4c:	rex.RB
  432a4d:	rex.WR
  432a4e:	rex.RB
  432a4f:	rex.XB push r12
  432a51:	and    BYTE PTR [rcx+0x4e],cl
  432a54:	push   rsp
  432a55:	rex.WRXB add BYTE PTR [r11+0x45],r10b
  432a59:	push   rsp
  432a5a:	add    BYTE PTR [rbx+0x68],ah
  432a5d:	(bad)  
  432a5e:	outs   dx,BYTE PTR ds:[rsi]
  432a5f:	and    BYTE PTR gs:[ecx+0x20],ah
  432a64:	jb     0x432adb
  432a66:	outs   dx,BYTE PTR ds:[rsi]
  432a67:	sub    eax,0x656d6974
  432a6c:	and    BYTE PTR [rax+0x61],dh
  432a6f:	jb     0x432ad2
  432a71:	ins    DWORD PTR es:[rdi],dx
  432a72:	gs je  0x432ada
  432a75:	jb     0x432a77
  432a77:	push   rbx
  432a78:	rex.RB push r12
  432a7a:	and    BYTE PTR [rbx+0x4f],al
  432a7d:	rex.WRX push rbx
  432a7f:	push   rsp
  432a80:	push   rdx
  432a81:	rex.B
  432a82:	rex.WB
  432a83:	rex.WRX push rsp
  432a85:	push   rbx
  432a86:	add    BYTE PTR [rax],al
  432a88:	jae    0x432aef
  432a8a:	je     0x432aac
  432a8c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432a8f:	jae    0x432b05
  432a91:	jb     0x432af4
  432a93:	imul   ebp,DWORD PTR [rsi+0x74],0x65686320
  432a9a:	movsxd ebp,DWORD PTR [rbx+0x20]
  432a9d:	je     0x432b08
  432a9f:	ins    DWORD PTR es:[rdi],dx
  432aa0:	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
  432aa7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  432aab:	and    BYTE PTR [rbx+0x75],ah
  432aae:	jb     0x432b22
  432ab0:	outs   dx,BYTE PTR gs:[rsi]
  432ab2:	je     0x432ad4
  432ab4:	je     0x432b28
  432ab6:	(bad)  
  432ab7:	outs   dx,BYTE PTR ds:[rsi]
  432ab8:	jae    0x432b1b
  432aba:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  432abe:	outs   dx,BYTE PTR ds:[rsi]
  432abf:	add    BYTE PTR [rbx+0x45],dl
  432ac2:	push   rsp
  432ac3:	and    BYTE PTR [rdx+0x4f],dl
  432ac6:	rex.WR
  432ac7:	add    BYTE PTR [r8],r8b
  432aca:	add    BYTE PTR [rax],al
  432acc:	add    BYTE PTR [rax],al
  432ace:	add    BYTE PTR [rax],al
  432ad0:	jae    0x432b37
  432ad2:	je     0x432af4
  432ad4:	je     0x432b3e
  432ad6:	and    BYTE PTR gs:[rbx+0x75],ah
  432ada:	jb     0x432b4e
  432adc:	outs   dx,BYTE PTR gs:[rsi]
  432ade:	je     0x432b00
  432ae0:	jne    0x432b55
  432ae2:	gs jb  0x432b05
  432ae5:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
  432aed:	gs jb  0x432b10
  432af0:	outs   dx,DWORD PTR ds:[rsi]
  432af1:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  432af6:	and    BYTE PTR [rbx+0x75],ah
  432af9:	jb     0x432b6d
  432afb:	outs   dx,BYTE PTR gs:[rsi]
  432afd:	je     0x432b1f
  432aff:	jae    0x432b66
  432b01:	jae    0x432b76
  432b03:	imul   ebp,DWORD PTR [rdi+0x6e],0x54455300
  432b0a:	and    BYTE PTR [rbx+0x45],dl
  432b0d:	push   rbx
  432b0e:	push   rbx
  432b0f:	rex.WB
  432b10:	rex.WRXB
  432b11:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  432b15:	push   rsp
  432b16:	rex.W
  432b17:	rex.WRXB push r10
  432b19:	rex.WB pop r10
  432b1b:	push   r12
  432b1d:	rex.WB
  432b1e:	rex.WRXB
  432b1f:	rex.WRX add BYTE PTR [rax],r8b
  432b22:	add    BYTE PTR [rax],al
  432b24:	add    BYTE PTR [rax],al
  432b26:	add    BYTE PTR [rax],al
  432b28:	jae    0x432b8f
  432b2a:	je     0x432b4c
  432b2c:	je     0x432b96
  432b2e:	and    BYTE PTR gs:[rbx+0x65],dh
  432b32:	jae    0x432ba7
  432b34:	imul   ebp,DWORD PTR [rdi+0x6e],0x65737520
  432b3b:	jb     0x432b5d
  432b3d:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
  432b45:	gs jb  0x432b68
  432b48:	(bad)  
  432b49:	outs   dx,BYTE PTR ds:[rsi]
  432b4a:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  432b4f:	and    BYTE PTR [rbx+0x75],ah
  432b52:	jb     0x432bc6
  432b54:	outs   dx,BYTE PTR gs:[rsi]
  432b56:	je     0x432b78
  432b58:	jne    0x432bcd
  432b5a:	gs jb  0x432b7d
  432b5d:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
  432b65:	gs jb  0x432b88
  432b68:	outs   dx,DWORD PTR ds:[rsi]
  432b69:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  432b6e:	and    BYTE PTR [rbx+0x75],ah
  432b71:	jb     0x432be5
  432b73:	outs   dx,BYTE PTR gs:[rsi]
  432b75:	je     0x432b97
  432b77:	jae    0x432bde
  432b79:	jae    0x432bee
  432b7b:	imul   ebp,DWORD PTR [rdi+0x6e],0x54455300
  432b82:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  432b86:	rex.WRX push rbx
  432b88:	rex.B
  432b89:	rex.XB push r12
  432b8b:	rex.WB
  432b8c:	rex.WRXB
  432b8d:	rex.WRX add BYTE PTR [rax],r8b
  432b90:	jae    0x432bf7
  432b92:	je     0x432bb4
  432b94:	je     0x432bfe
  432b96:	and    BYTE PTR gs:[rbx+0x68],ah
  432b9a:	(bad)  
  432b9b:	jb     0x432bfe
  432b9d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  432ba1:	imul   esi,DWORD PTR [rbx+0x74],0x20736369
  432ba8:	outs   dx,DWORD PTR ds:[rsi]
  432ba9:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  432bae:	and    BYTE PTR [rbx+0x75],ah
  432bb1:	jb     0x432c25
  432bb3:	outs   dx,BYTE PTR gs:[rsi]
  432bb5:	je     0x432bd7
  432bb7:	je     0x432c2b
  432bb9:	(bad)  
  432bba:	outs   dx,BYTE PTR ds:[rsi]
  432bbb:	jae    0x432c1e
  432bbd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  432bc1:	outs   dx,BYTE PTR ds:[rsi]
  432bc2:	add    BYTE PTR [rbx+0x48],dl
  432bc5:	rex.WRXB push r15
  432bc7:	add    BYTE PTR [rbx+0x68],dh
  432bca:	outs   dx,DWORD PTR ds:[rsi]
  432bcb:	ja     0x432bed
  432bcd:	je     0x432c37
  432bcf:	and    BYTE PTR gs:[rsi+0x61],dh
  432bd3:	ins    BYTE PTR es:[rdi],dx
  432bd4:	jne    0x432c3b
  432bd6:	and    BYTE PTR [rdi+0x66],ch
  432bd9:	and    BYTE PTR [rcx+0x20],ah
  432bdc:	jb     0x432c53
  432bde:	outs   dx,BYTE PTR ds:[rsi]
  432bdf:	sub    eax,0x656d6974
  432be4:	and    BYTE PTR [rax+0x61],dh
  432be7:	jb     0x432c4a
  432be9:	ins    DWORD PTR es:[rdi],dx
  432bea:	gs je  0x432c52
  432bed:	jb     0x432bef
  432bef:	push   rbx
  432bf0:	push   rsp
  432bf1:	push   r10
  432bf3:	push   rsp
  432bf4:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  432bf8:	rex.WRX push rbx
  432bfa:	rex.B
  432bfb:	rex.XB push r12
  432bfd:	rex.WB
  432bfe:	rex.WRXB
  432bff:	rex.WRX add BYTE PTR [rcx+r8*2+0x42],r10b
  432c04:	rex.WR
  432c05:	add    BYTE PTR [r10+rdx*2+0x55],r10b
  432c0a:	rex.WRX
  432c0b:	rex.XB
  432c0c:	push   r12
  432c0e:	add    BYTE PTR [r13+0x6d],r12b
  432c12:	jo     0x432c88
  432c14:	jns    0x432c36
  432c16:	(bad)  
  432c17:	and    BYTE PTR [rcx+riz*2+0x62],dh
  432c1b:	ins    BYTE PTR es:[rdi],dx
  432c1c:	and    BYTE PTR gs:[rdi+0x72],ch
  432c20:	and    BYTE PTR [rbx+0x65],dh
  432c23:	je     0x432c45
  432c25:	outs   dx,DWORD PTR ds:[rsi]
  432c26:	data16 and BYTE PTR [rcx+riz*2+0x62],dh
  432c2b:	ins    BYTE PTR es:[rdi],dx
  432c2c:	gs jae 0x432c2f
  432c2f:	push   rbp
  432c30:	rex.WRX
  432c31:	rex.WR
  432c32:	rex.WB push r11
  432c34:	push   rsp
  432c35:	rex.RB
  432c36:	rex.WRX add BYTE PTR [rbx+0x74],r14b
  432c3a:	outs   dx,DWORD PTR ds:[rsi]
  432c3b:	jo     0x432c5d
  432c3d:	ins    BYTE PTR es:[rdi],dx
  432c3e:	imul   esi,DWORD PTR [rbx+0x74],0x6e696e65
  432c45:	and    BYTE PTR [esi+0x6f],ah
  432c49:	jb     0x432c6b
  432c4b:	(bad)  
  432c4c:	and    BYTE PTR [rsi+0x6f],ch
  432c4f:	je     0x432cba
  432c51:	imul   sp,WORD PTR [rbx+0x61],0x6974
  432c57:	outs   dx,DWORD PTR ds:[rsi]
  432c58:	outs   dx,BYTE PTR ds:[rsi]
  432c59:	add    BYTE PTR [rbp+0x50],dl
  432c5c:	rex.R
  432c5d:	push   r12
  432c5f:	add    BYTE PTR [r13+0x70],r14b
  432c63:	fs (bad) 
  432c65:	je     0x432ccc
  432c67:	and    BYTE PTR [rdx+0x6f],dh
  432c6a:	ja     0x432cdf
  432c6c:	and    BYTE PTR [rdi+0x66],ch
  432c6f:	and    BYTE PTR [rcx+0x20],ah
  432c72:	je     0x432cd5
  432c74:	(bad)  
  432c75:	ins    BYTE PTR es:[rdi],dx
  432c76:	add    BYTE PTR gs:[rsi+0x41],dl
  432c7a:	rex.XB push r13
  432c7c:	push   rbp
  432c7d:	rex.WRB add BYTE PTR [r8],r8b
  432c80:	addr32 (bad) 
  432c82:	jb     0x432ce6
  432c84:	(bad)  
  432c85:	addr32 gs sub eax,0x6c6c6f63
  432c8c:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x61]
  432c91:	outs   dx,BYTE PTR ds:[rsi]
  432c92:	and    BYTE PTR fs:[rdi+0x70],ch
  432c96:	je     0x432d01
  432c98:	outs   dx,DWORD PTR ds:[rsi]
  432c99:	outs   dx,BYTE PTR ds:[rsi]
  432c9a:	(bad)  
  432c9b:	ins    BYTE PTR es:[rdi],dx
  432c9c:	ins    BYTE PTR es:[rdi],dx
  432c9d:	jns    0x432cbf
  432c9f:	(bad)  
  432ca0:	outs   dx,BYTE PTR ds:[rsi]
  432ca1:	(bad)  
  432ca2:	ins    BYTE PTR es:[rdi],dx
  432ca3:	jns    0x432d1f
  432ca5:	and    BYTE PTR gs:[rcx+0x20],ah
  432ca9:	fs (bad) 
  432cab:	je     0x432d0e
  432cad:	(bad)  
  432caf:	jae    0x432d16
  432cb1:	add    BYTE PTR [rsi+0x41],dl
  432cb4:	rex.WR push rbp
  432cb6:	rex.RB push r11
  432cb8:	add    BYTE PTR [rbx+0x6f],ah
  432cbb:	ins    DWORD PTR es:[rdi],dx
  432cbc:	jo     0x432d33
  432cbe:	je     0x432d25
  432cc0:	and    BYTE PTR [rcx+0x20],ah
  432cc3:	jae    0x432d2a
  432cc5:	je     0x432ce7
  432cc7:	outs   dx,DWORD PTR ds:[rsi]
  432cc8:	data16 and BYTE PTR [rdx+0x6f],dh
  432ccc:	ja     0x432d41
  432cce:	add    BYTE PTR [rdi+0x49],dl
  432cd1:	push   rsp
  432cd2:	rex.W add BYTE PTR [rax],al
	...
  432cfd:	add    BYTE PTR [rax],al
  432cff:	add    BYTE PTR [rbx+0xa],dl
  432d02:	rex.XB add BYTE PTR [r8],al
  432d05:	add    BYTE PTR [rax],al
  432d07:	add    BYTE PTR [rcx+0x430f],ah
  432d0d:	add    BYTE PTR [rax],al
  432d0f:	add    BYTE PTR [rax],dh
  432d11:	lock add BYTE PTR [r8],al
	...
  432d1d:	add    BYTE PTR [rax],al
  432d1f:	add    BYTE PTR [rdi+0x430f],bh
  432d25:	add    BYTE PTR [rax],al
  432d27:	add    al,dl
  432d29:	cmovae eax,DWORD PTR [rax]
  432d2c:	add    BYTE PTR [rax],al
  432d2e:	add    BYTE PTR [rax],al
  432d30:	rex
  432d31:	lock add BYTE PTR [r8],al
  432d35:	add    BYTE PTR [rax],al
  432d37:	add    BYTE PTR [rax],cl
  432d39:	add    BYTE PTR [rax],al
  432d3b:	add    BYTE PTR [rax],al
  432d3d:	add    BYTE PTR [rax],al
  432d3f:	add    bh,bh
  432d41:	cmovae eax,DWORD PTR [rax]
  432d44:	add    BYTE PTR [rax],al
  432d46:	add    BYTE PTR [rax],al
  432d48:	adc    BYTE PTR [rax],dl
  432d4a:	rex.XB add BYTE PTR [r8],al
  432d4d:	add    BYTE PTR [rax],al
  432d4f:	add    BYTE PTR [rax],al
  432d51:	icebp  
  432d52:	add    BYTE PTR [r8],al
  432d55:	add    BYTE PTR [rax],al
  432d57:	add    BYTE PTR [rdx],al
  432d59:	add    BYTE PTR [rax],al
  432d5b:	add    BYTE PTR [rax],al
  432d5d:	add    BYTE PTR [rax],al
  432d5f:	add    BYTE PTR [rip+0x4310],dh        # 0x437075
  432d65:	add    BYTE PTR [rax],al
  432d67:	add    BYTE PTR [rax+0x10],cl
  432d6a:	rex.XB add BYTE PTR [r8],al
  432d6d:	add    BYTE PTR [rax],al
  432d6f:	add    BYTE PTR [rax-0xf],dl
  432d72:	add    BYTE PTR [r8],al
  432d75:	add    BYTE PTR [rax],al
  432d77:	add    BYTE PTR [rdx],al
  432d79:	add    BYTE PTR [rax],al
  432d7b:	add    BYTE PTR [rax],al
  432d7d:	add    BYTE PTR [rax],al
  432d7f:	add    BYTE PTR [rsi+0x10],ch
  432d82:	rex.XB add BYTE PTR [r8],al
  432d85:	add    BYTE PTR [rax],al
  432d87:	add    BYTE PTR [rbp+0x10],bh
  432d8a:	rex.XB add BYTE PTR [r8],al
  432d8d:	add    BYTE PTR [rax],al
  432d8f:	add    BYTE PTR [rax+0x41f1],ah
  432d95:	add    BYTE PTR [rax],al
  432d97:	add    BYTE PTR [rdi],cl
  432d99:	add    BYTE PTR [rax],al
  432d9b:	add    BYTE PTR [rax],al
  432d9d:	add    BYTE PTR [rax],al
  432d9f:	add    BYTE PTR [rdi+0x4310],cl
  432da5:	add    BYTE PTR [rax],al
  432da7:	add    BYTE PTR [rax+0x4310],ch
  432dad:	add    BYTE PTR [rax],al
  432daf:	add    BYTE PTR [rax-0xe],ah
  432db2:	add    BYTE PTR [r8],al
  432db5:	add    BYTE PTR [rax],al
  432db7:	add    BYTE PTR [rcx],dh
  432db9:	add    BYTE PTR [rax],al
  432dbb:	add    BYTE PTR [rax],al
  432dbd:	add    BYTE PTR [rax],al
  432dbf:	add    cl,cl
  432dc1:	adc    BYTE PTR [rbx+0x0],al
  432dc4:	add    BYTE PTR [rax],al
  432dc6:	add    BYTE PTR [rax],al
  432dc8:	fcom   DWORD PTR [rax]
  432dca:	rex.XB add BYTE PTR [r8],al
  432dcd:	add    BYTE PTR [rax],al
  432dcf:	add    al,dl
  432dd1:	repnz add BYTE PTR [r8],al
  432dd5:	add    BYTE PTR [rax],al
  432dd7:	add    BYTE PTR [rcx],dl
  432dd9:	add    BYTE PTR [rax],al
  432ddb:	add    BYTE PTR [rax],al
  432ddd:	add    BYTE PTR [rax],al
  432ddf:	add    dl,bh
  432de1:	adc    BYTE PTR [rbx+0x0],al
  432de4:	add    BYTE PTR [rax],al
  432de6:	add    BYTE PTR [rax],al
  432de8:	adc    BYTE PTR [rcx],dl
  432dea:	rex.XB add BYTE PTR [r8],al
  432ded:	add    BYTE PTR [rax],al
  432def:	add    BYTE PTR [rax+0x41f3],al
  432df5:	add    BYTE PTR [rax],al
  432df7:	add    BYTE PTR [rbx],al
  432df9:	add    BYTE PTR [rax],al
  432dfb:	add    BYTE PTR [rax],al
  432dfd:	add    BYTE PTR [rax],al
  432dff:	add    BYTE PTR [rdx],bh
  432e01:	adc    DWORD PTR [rbx+0x0],eax
  432e04:	add    BYTE PTR [rax],al
  432e06:	add    BYTE PTR [rax],al
  432e08:	push   rax
  432e09:	adc    DWORD PTR [rbx+0x0],eax
  432e0c:	add    BYTE PTR [rax],al
  432e0e:	add    BYTE PTR [rax],al
  432e10:	shl    bl,1
  432e12:	add    BYTE PTR [r8],al
  432e15:	add    BYTE PTR [rax],al
  432e17:	add    BYTE PTR [rax+rax*1],ah
  432e1a:	add    BYTE PTR [rax],al
  432e1c:	add    BYTE PTR [rax],al
  432e1e:	add    BYTE PTR [rax],al
  432e20:	jbe    0x432e33
  432e22:	rex.XB add BYTE PTR [r8],al
  432e25:	add    BYTE PTR [rax],al
  432e27:	add    BYTE PTR [rax+0x4311],bl
  432e2d:	add    BYTE PTR [rax],al
  432e2f:	add    al,ah
  432e31:	cmc    
  432e32:	add    BYTE PTR [r8],al
  432e35:	add    BYTE PTR [rax],al
  432e37:	add    BYTE PTR [rip+0x0],al        # 0x432e3d
  432e3d:	add    BYTE PTR [rax],al
  432e3f:	add    al,cl
  432e41:	adc    DWORD PTR [rbx+0x0],eax
  432e44:	add    BYTE PTR [rax],al
  432e46:	add    BYTE PTR [rax],al
  432e48:	loopne 0x432e5b
  432e4a:	rex.XB add BYTE PTR [r8],al
  432e4d:	add    BYTE PTR [rax],al
  432e4f:	add    BYTE PTR [rax-0xa],dl
  432e52:	add    BYTE PTR [r8],al
  432e55:	add    BYTE PTR [rax],al
  432e57:	add    BYTE PTR [rdx],bl
  432e59:	add    BYTE PTR [rax],al
  432e5b:	add    BYTE PTR [rax],al
  432e5d:	add    BYTE PTR [rax],al
  432e5f:	add    BYTE PTR [rcx],cl
  432e61:	adc    al,BYTE PTR [rbx+0x0]
  432e64:	add    BYTE PTR [rax],al
  432e66:	add    BYTE PTR [rax],al
  432e68:	sbb    BYTE PTR [rdx],dl
  432e6a:	rex.XB add BYTE PTR [r8],al
  432e6d:	add    BYTE PTR [rax],al
  432e6f:	add    al,ah
  432e71:	test   DWORD PTR [rcx+0x0],0x0
  432e78:	adc    eax,DWORD PTR [rax]
  432e7a:	add    BYTE PTR [rax],al
  432e7c:	add    BYTE PTR [rax],al
  432e7e:	add    BYTE PTR [rax],al
  432e80:	cmp    al,0x12
  432e82:	rex.XB add BYTE PTR [r8],al
  432e85:	add    BYTE PTR [rax],al
  432e87:	add    BYTE PTR [rax+0x12],cl
  432e8a:	rex.XB add BYTE PTR [r8],al
  432e8d:	add    BYTE PTR [rax],al
  432e8f:	add    BYTE PTR [rax],al
  432e91:	stc    
  432e92:	add    BYTE PTR [r8],al
  432e95:	add    BYTE PTR [rax],al
  432e97:	add    BYTE PTR [rbx],al
  432e99:	add    BYTE PTR [rax],al
  432e9b:	add    BYTE PTR [rax],al
  432e9d:	add    BYTE PTR [rax],al
  432e9f:	add    BYTE PTR [rdi+0x12],ah
  432ea2:	rex.XB add BYTE PTR [r8],al
  432ea5:	add    BYTE PTR [rax],al
  432ea7:	add    BYTE PTR [rax+0x12],bh
  432eaa:	rex.XB add BYTE PTR [r8],al
  432ead:	add    BYTE PTR [rax],al
  432eaf:	add    BYTE PTR [rax-0x7],al
  432eb2:	add    BYTE PTR [r8],al
  432eb5:	add    BYTE PTR [rax],al
  432eb7:	add    BYTE PTR [rip+0x0],al        # 0x432ebd
  432ebd:	add    BYTE PTR [rax],al
  432ebf:	add    BYTE PTR [rdx+0x4312],bl
  432ec5:	add    BYTE PTR [rax],al
  432ec7:	add    BYTE PTR [rax+0x4312],dh
  432ecd:	add    BYTE PTR [rax],al
  432ecf:	add    al,al
  432ed1:	stc    
  432ed2:	add    BYTE PTR [r8],al
  432ed5:	add    BYTE PTR [rax],al
  432ed7:	add    BYTE PTR [rcx],al
  432ed9:	add    BYTE PTR [rax],al
  432edb:	add    BYTE PTR [rax],al
  432edd:	add    BYTE PTR [rax],al
  432edf:	add    bh,bl
  432ee1:	adc    al,BYTE PTR [rbx+0x0]
  432ee4:	add    BYTE PTR [rax],al
  432ee6:	add    BYTE PTR [rax],al
  432ee8:	clc    
  432ee9:	adc    al,BYTE PTR [rbx+0x0]
  432eec:	add    BYTE PTR [rax],al
  432eee:	add    BYTE PTR [rax],al
  432ef0:	add    dl,bh
  432ef2:	add    BYTE PTR [r8],al
	...
  432efd:	add    BYTE PTR [rax],al
  432eff:	add    BYTE PTR [rax],ah
  432f01:	adc    eax,DWORD PTR [rbx+0x0]
  432f04:	add    BYTE PTR [rax],al
  432f06:	add    BYTE PTR [rax],al
  432f08:	cmp    BYTE PTR [rbx],dl
  432f0a:	rex.XB add BYTE PTR [r8],al
  432f0d:	add    BYTE PTR [rax],al
  432f0f:	add    BYTE PTR [rax],ah
  432f11:	cli    
  432f12:	add    BYTE PTR [r8],al
  432f15:	add    BYTE PTR [rax],al
  432f17:	add    BYTE PTR [rsi],dl
  432f19:	add    BYTE PTR [rax],al
  432f1b:	add    BYTE PTR [rax],al
  432f1d:	add    BYTE PTR [rax],al
  432f1f:	add    BYTE PTR [rbp+0x13],ah
  432f22:	rex.XB add BYTE PTR [r8],al
  432f25:	add    BYTE PTR [rax],al
  432f27:	add    BYTE PTR [rax+0x13],bh
  432f2a:	rex.XB add BYTE PTR [r8],al
  432f2d:	add    BYTE PTR [rax],al
  432f2f:	add    BYTE PTR [rax-0x5],dl
  432f32:	add    BYTE PTR [r8],al
  432f35:	add    BYTE PTR [rax],al
  432f37:	add    BYTE PTR [rcx],al
  432f39:	add    BYTE PTR [rax],al
  432f3b:	add    BYTE PTR [rax],al
  432f3d:	add    BYTE PTR [rax],al
  432f3f:	add    BYTE PTR [rbp+0x4313],bl
  432f45:	add    BYTE PTR [rax],al
  432f47:	add    BYTE PTR [rax+0x4313],bh
  432f4d:	add    BYTE PTR [rax],al
  432f4f:	add    BYTE PTR [rax+0x41fb],dh
  432f55:	add    BYTE PTR [rax],al
  432f57:	add    BYTE PTR [rdx],al
  432f59:	add    BYTE PTR [rax],al
  432f5b:	add    BYTE PTR [rax],al
  432f5d:	add    BYTE PTR [rax],al
  432f5f:	add    bl,ah
  432f61:	adc    eax,DWORD PTR [rbx+0x0]
  432f64:	add    BYTE PTR [rax],al
  432f66:	add    BYTE PTR [rax],al
  432f68:	add    BYTE PTR [rbx+rax*2],dl
  432f6b:	add    BYTE PTR [rax],al
  432f6d:	add    BYTE PTR [rax],al
  432f6f:	add    BYTE PTR [rax],dl
  432f71:	cld    
  432f72:	add    BYTE PTR [r8],al
  432f75:	add    BYTE PTR [rax],al
  432f77:	add    BYTE PTR [rdx],cl
  432f79:	add    BYTE PTR [rax],al
  432f7b:	add    BYTE PTR [rax],al
  432f7d:	add    BYTE PTR [rax],al
  432f7f:	add    BYTE PTR [rsp+rdx*1],ch
  432f82:	rex.XB add BYTE PTR [r8],al
  432f85:	add    BYTE PTR [rax],al
  432f87:	add    BYTE PTR [rdi],dh
  432f89:	adc    al,0x43
  432f8b:	add    BYTE PTR [rax],al
  432f8d:	add    BYTE PTR [rax],al
  432f8f:	add    BYTE PTR [rax-0x3],al
  432f92:	add    BYTE PTR [r8],al
  432f95:	add    BYTE PTR [rax],al
  432f97:	add    BYTE PTR [rax+rax*1],dl
  432f9a:	add    BYTE PTR [rax],al
  432f9c:	add    BYTE PTR [rax],al
  432f9e:	add    BYTE PTR [rax],al
  432fa0:	rex.WRX adc al,0x43
  432fa3:	add    BYTE PTR [rax],al
  432fa5:	add    BYTE PTR [rax],al
  432fa7:	add    BYTE PTR [rax+0x14],ah
  432faa:	rex.XB add BYTE PTR [r8],al
  432fad:	add    BYTE PTR [rax],al
  432faf:	add    BYTE PTR [rax],dl
  432fb1:	inc    BYTE PTR [rcx+0x0]
	...
  432fc0:	adc    BYTE PTR [rbx+rax*2],0x0
  432fc4:	add    BYTE PTR [rax],al
  432fc6:	add    BYTE PTR [rax],al
  432fc8:	nop
  432fc9:	adc    al,0x43
  432fcb:	add    BYTE PTR [rax],al
  432fcd:	add    BYTE PTR [rax],al
  432fcf:	add    BYTE PTR [rax-0x2],al
  432fd2:	add    BYTE PTR [r8],al
  432fd5:	add    BYTE PTR [rax],al
  432fd7:	add    BYTE PTR [rcx],al
  432fd9:	add    BYTE PTR [rax],al
  432fdb:	add    BYTE PTR [rax],al
  432fdd:	add    BYTE PTR [rax],al
  432fdf:	add    BYTE PTR [rdx+0x4314],dh
  432fe5:	add    BYTE PTR [rax],al
  432fe7:	add    al,cl
  432fe9:	adc    al,0x43
  432feb:	add    BYTE PTR [rax],al
  432fed:	add    BYTE PTR [rax],al
  432fef:	add    BYTE PTR [rax+0x41fe],al
  432ff5:	add    BYTE PTR [rax],al
  432ff7:	add    BYTE PTR [rax],cl
  432ff9:	add    BYTE PTR [rax],al
  432ffb:	add    BYTE PTR [rax],al
  432ffd:	add    BYTE PTR [rax],al
  432fff:	add    dh,dh
  433001:	adc    al,0x43
  433003:	add    BYTE PTR [rax],al
  433005:	add    BYTE PTR [rax],al
  433007:	add    BYTE PTR [rax],cl
  433009:	adc    eax,0x43
  43300e:	add    BYTE PTR [rax],al
  433010:	rex inc DWORD PTR [rcx+0x0]
  433014:	add    BYTE PTR [rax],al
  433016:	add    BYTE PTR [rax],al
  433018:	add    eax,DWORD PTR [rax]
  43301a:	add    BYTE PTR [rax],al
  43301c:	add    BYTE PTR [rax],al
  43301e:	add    BYTE PTR [rax],al
  433020:	xor    dl,BYTE PTR [rip+0x43]        # 0x433069
  433026:	add    BYTE PTR [rax],al
  433028:	rex adc eax,0x43
  43302e:	add    BYTE PTR [rax],al
  433030:	movabs al,ds:0x3000000000041ff
  433039:	add    BYTE PTR [rax],al
  43303b:	add    BYTE PTR [rax],al
  43303d:	add    BYTE PTR [rax],al
  43303f:	add    BYTE PTR [rax+0x15],ch
  433042:	rex.XB add BYTE PTR [r8],al
  433045:	add    BYTE PTR [rax],al
  433047:	add    BYTE PTR [rax+0x15],bh
  43304a:	rex.XB add BYTE PTR [r8],al
  43304d:	add    BYTE PTR [rax],al
  43304f:	add    al,dl
  433051:	inc    DWORD PTR [rcx+0x0]
  433054:	add    BYTE PTR [rax],al
  433056:	add    BYTE PTR [rax],al
  433058:	cmp    BYTE PTR [rax],al
  43305a:	add    BYTE PTR [rax],al
  43305c:	add    BYTE PTR [rax],al
  43305e:	add    BYTE PTR [rax],al
  433060:	cdq    
  433061:	adc    eax,0x43
  433066:	add    BYTE PTR [rax],al
  433068:	mov    al,0x15
  43306a:	rex.XB add BYTE PTR [r8],al
  43306d:	add    BYTE PTR [rax],al
  43306f:	add    BYTE PTR [rax+0x4202],al
  433075:	add    BYTE PTR [rax],al
  433077:	add    BYTE PTR [rbx],al
  433079:	add    BYTE PTR [rax],al
  43307b:	add    BYTE PTR [rax],al
  43307d:	add    BYTE PTR [rax],al
  43307f:	add    al,bl
  433081:	adc    eax,0x43
  433086:	add    BYTE PTR [rax],al
  433088:	clc    
  433089:	adc    eax,0x43
  43308e:	add    BYTE PTR [rax],al
  433090:	loopne 0x433094
  433092:	rex.X add BYTE PTR [rax],al
  433095:	add    BYTE PTR [rax],al
  433097:	add    BYTE PTR [rax+rax*1],cl
  43309a:	add    BYTE PTR [rax],al
  43309c:	add    BYTE PTR [rax],al
  43309e:	add    BYTE PTR [rax],al
  4330a0:	sub    eax,0x4316
  4330a5:	add    BYTE PTR [rax],al
  4330a7:	add    BYTE PTR [rax+0x16],dl
  4330aa:	rex.XB add BYTE PTR [r8],al
  4330ad:	add    BYTE PTR [rax],al
  4330af:	add    BYTE PTR [rax+0x4203],dh
  4330b5:	add    BYTE PTR [rax],al
  4330b7:	add    BYTE PTR [rip+0x0],al        # 0x4330bd
  4330bd:	add    BYTE PTR [rax],al
  4330bf:	add    BYTE PTR [rdx+0x4316],al
  4330c5:	add    BYTE PTR [rax],al
  4330c7:	add    BYTE PTR [rax+0x4316],ah
  4330cd:	add    BYTE PTR [rax],al
  4330cf:	add    BYTE PTR [rax],ah
  4330d1:	add    al,0x42
  4330d3:	add    BYTE PTR [rax],al
  4330d5:	add    BYTE PTR [rax],al
  4330d7:	add    BYTE PTR [rcx],al
  4330d9:	add    BYTE PTR [rax],al
  4330db:	add    BYTE PTR [rax],al
  4330dd:	add    BYTE PTR [rax],al
  4330df:	add    dh,cl
  4330e1:	(bad)  
  4330e2:	rex.XB add BYTE PTR [r8],al
  4330e5:	add    BYTE PTR [rax],al
  4330e7:	add    al,dh
  4330e9:	(bad)  
  4330ea:	rex.XB add BYTE PTR [r8],al
  4330ed:	add    BYTE PTR [rax],al
  4330ef:	add    BYTE PTR [rax+0x4],ah
  4330f2:	rex.X add BYTE PTR [rax],al
  4330f5:	add    BYTE PTR [rax],al
  4330f7:	add    BYTE PTR [rcx],al
  4330f9:	add    BYTE PTR [rax],al
  4330fb:	add    BYTE PTR [rax],al
  4330fd:	add    BYTE PTR [rax],al
  4330ff:	add    BYTE PTR [rax],ah
  433101:	(bad)  
  433102:	rex.XB add BYTE PTR [r8],al
  433105:	add    BYTE PTR [rax],al
  433107:	add    BYTE PTR [rax],dh
  433109:	(bad)  
  43310a:	rex.XB add BYTE PTR [r8],al
  43310d:	add    BYTE PTR [rax],al
  43310f:	add    BYTE PTR [rax+0x4204],ah
	...
  43311d:	add    BYTE PTR [rax],al
  43311f:	add    BYTE PTR [rbx+0x17],dl
  433122:	rex.XB add BYTE PTR [r8],al
  433125:	add    BYTE PTR [rax],al
  433127:	add    BYTE PTR [rax+0x17],ah
  43312a:	rex.XB add BYTE PTR [r8],al
  43312d:	add    BYTE PTR [rax],al
  43312f:	add    al,dl
  433131:	add    al,0x42
  433133:	add    BYTE PTR [rax],al
  433135:	add    BYTE PTR [rax],al
  433137:	add    BYTE PTR [rbx],cl
  433139:	add    BYTE PTR [rax],al
  43313b:	add    BYTE PTR [rax],al
  43313d:	add    BYTE PTR [rax],al
  43313f:	add    BYTE PTR [rax+0x4317],al
  433145:	add    BYTE PTR [rax],al
  433147:	add    BYTE PTR [rdi],dh
  433149:	adc    al,0x43
  43314b:	add    BYTE PTR [rax],al
  43314d:	add    BYTE PTR [rax],al
  43314f:	add    al,al
  433151:	add    eax,0x42
  433156:	add    BYTE PTR [rax],al
  433158:	adc    al,0x0
  43315a:	add    BYTE PTR [rax],al
  43315c:	add    BYTE PTR [rax],al
  43315e:	add    BYTE PTR [rax],al
  433160:	mov    edx,DWORD PTR [rdi]
  433162:	rex.XB add BYTE PTR [r8],al
  433165:	add    BYTE PTR [rax],al
  433167:	add    BYTE PTR [rax+0x4317],ah
  43316d:	add    BYTE PTR [rax],al
  43316f:	add    BYTE PTR [rax+0x6],dh
  433172:	rex.X add BYTE PTR [rax],al
  433175:	add    BYTE PTR [rax],al
  433177:	add    BYTE PTR [rdx],al
  433179:	add    BYTE PTR [rax],al
  43317b:	add    BYTE PTR [rax],al
  43317d:	add    BYTE PTR [rax],al
  43317f:	add    al,cl
  433181:	(bad)  
  433182:	rex.XB add BYTE PTR [r8],al
  433185:	add    BYTE PTR [rax],al
  433187:	add    al,bl
  433189:	(bad)  
  43318a:	rex.XB add BYTE PTR [r8],al
  43318d:	add    BYTE PTR [rax],al
  43318f:	add    BYTE PTR [rax+0x4206],dh
  433195:	add    BYTE PTR [rax],al
  433197:	add    BYTE PTR [rsi],al
  433199:	add    BYTE PTR [rax],al
  43319b:	add    BYTE PTR [rax],al
  43319d:	add    BYTE PTR [rax],al
  43319f:	add    al,bh
  4331a1:	(bad)  
  4331a2:	rex.XB add BYTE PTR [r8],al
  4331a5:	add    BYTE PTR [rax],al
  4331a7:	add    BYTE PTR [rax],al
  4331a9:	sbb    BYTE PTR [rbx+0x0],al
  4331ac:	add    BYTE PTR [rax],al
  4331ae:	add    BYTE PTR [rax],al
  4331b0:	push   rax
  4331b1:	(bad)  
  4331b2:	rex.X add BYTE PTR [rax],al
	...
  4331bd:	add    BYTE PTR [rax],al
  4331bf:	add    BYTE PTR [rax+rbx*1],ah
  4331c2:	rex.XB add BYTE PTR [r8],al
  4331c5:	add    BYTE PTR [rax],al
  4331c7:	add    BYTE PTR [rdx],ch
  4331c9:	sbb    BYTE PTR [rbx+0x0],al
  4331cc:	add    BYTE PTR [rax],al
  4331ce:	add    BYTE PTR [rax],al
  4331d0:	jo     0x4331d9
  4331d2:	rex.X add BYTE PTR [rax],al
  4331d5:	add    BYTE PTR [rax],al
  4331d7:	add    BYTE PTR [rsi],al
  4331d9:	add    BYTE PTR [rax],al
  4331db:	add    BYTE PTR [rax],al
  4331dd:	add    BYTE PTR [rax],al
  4331df:	add    BYTE PTR [rax+rbx*1+0x43],al
  4331e3:	add    BYTE PTR [rax],al
  4331e5:	add    BYTE PTR [rax],al
  4331e7:	add    BYTE PTR [rax+0x18],dl
  4331ea:	rex.XB add BYTE PTR [r8],al
  4331ed:	add    BYTE PTR [rax],al
  4331ef:	add    BYTE PTR [rax+0x4207],dl
	...
  4331fd:	add    BYTE PTR [rax],al
  4331ff:	add    BYTE PTR [rbx+0x18],dh
  433202:	rex.XB add BYTE PTR [r8],al
  433205:	add    BYTE PTR [rax],al
  433207:	add    BYTE PTR [rcx+0x18],bh
  43320a:	rex.XB add BYTE PTR [r8],al
  43320d:	add    BYTE PTR [rax],al
  43320f:	add    BYTE PTR [rax+0x4207],ah
	...
  43321d:	add    BYTE PTR [rax],al
  43321f:	add    BYTE PTR [rax+0x4318],cl
  433225:	add    BYTE PTR [rax],al
  433227:	add    BYTE PTR [rax+0x4318],dl
  43322d:	add    BYTE PTR [rax],al
  43322f:	add    al,al
  433231:	(bad)  
  433232:	rex.X add BYTE PTR [rax],al
  433235:	add    BYTE PTR [rax],al
  433237:	add    BYTE PTR [rcx],al
  433239:	add    BYTE PTR [rax],al
  43323b:	add    BYTE PTR [rax],al
  43323d:	add    BYTE PTR [rax],al
  43323f:	add    BYTE PTR [rsi+0x4318],dh
  433245:	add    BYTE PTR [rax],al
  433247:	add    al,al
  433249:	sbb    BYTE PTR [rbx+0x0],al
  43324c:	add    BYTE PTR [rax],al
  43324e:	add    BYTE PTR [rax],al
  433250:	loopne 0x433259
  433252:	rex.X add BYTE PTR [rax],al
  433255:	add    BYTE PTR [rax],al
  433257:	add    BYTE PTR [rdx],ch
  433259:	add    BYTE PTR [rax],al
  43325b:	add    BYTE PTR [rax],al
  43325d:	add    BYTE PTR [rax],al
  43325f:	add    dl,ch
  433261:	sbb    BYTE PTR [rbx+0x0],al
  433264:	add    BYTE PTR [rax],al
  433266:	add    BYTE PTR [rax],al
  433268:	clc    
  433269:	sbb    BYTE PTR [rbx+0x0],al
  43326c:	add    BYTE PTR [rax],al
  43326e:	add    BYTE PTR [rax],al
  433270:	or     al,BYTE PTR [rdx+0x0]
	...
  433280:	(bad)  
  433281:	sbb    DWORD PTR [rbx+0x0],eax
  433284:	add    BYTE PTR [rax],al
  433286:	add    BYTE PTR [rax],al
  433288:	sub    BYTE PTR [rcx],bl
  43328a:	rex.XB add BYTE PTR [r8],al
  43328d:	add    BYTE PTR [rax],al
  43328f:	add    BYTE PTR [rax+0xa],dl
  433292:	rex.X add BYTE PTR [rax],al
	...
  43329d:	add    BYTE PTR [rax],al
  43329f:	add    BYTE PTR [rcx+rbx*1+0x43],ch
  4332a3:	add    BYTE PTR [rax],al
  4332a5:	add    BYTE PTR [rax],al
  4332a7:	add    BYTE PTR [rax+0x19],bh
  4332aa:	rex.XB add BYTE PTR [r8],al
  4332ad:	add    BYTE PTR [rax],al
  4332af:	add    BYTE PTR [rax+0xa],dh
  4332b2:	rex.X add BYTE PTR [rax],al
  4332b5:	add    BYTE PTR [rax],al
  4332b7:	add    BYTE PTR [rip+0x0],dl        # 0x4332bd
  4332bd:	add    BYTE PTR [rax],al
  4332bf:	add    BYTE PTR [rbp+0x4319],bl
  4332c5:	add    BYTE PTR [rax],al
  4332c7:	add    BYTE PTR [rax+0x4319],dh
  4332cd:	add    BYTE PTR [rax],al
  4332cf:	add    BYTE PTR [rax+0x420b],al
  4332d5:	add    BYTE PTR [rax],al
  4332d7:	add    BYTE PTR [rsi],ch
  4332d9:	add    BYTE PTR [rax],al
  4332db:	add    BYTE PTR [rax],al
  4332dd:	add    BYTE PTR [rax],al
  4332df:	add    al,dl
  4332e1:	sbb    DWORD PTR [rbx+0x0],eax
  4332e4:	add    BYTE PTR [rax],al
  4332e6:	add    BYTE PTR [rax],al
  4332e8:	fcomp  QWORD PTR [rcx]
  4332ea:	rex.XB add BYTE PTR [r8],al
  4332ed:	add    BYTE PTR [rax],al
  4332ef:	add    BYTE PTR [rax+0xd],dh
  4332f2:	rex.X add BYTE PTR [rax],al
  4332f5:	add    BYTE PTR [rax],al
  4332f7:	add    BYTE PTR [rdx],cl
  4332f9:	add    BYTE PTR [rax],al
  4332fb:	add    BYTE PTR [rax],al
  4332fd:	add    BYTE PTR [rax],al
  4332ff:	add    dh,ch
  433301:	sbb    DWORD PTR [rbx+0x0],eax
  433304:	add    BYTE PTR [rax],al
  433306:	add    BYTE PTR [rax],al
  433308:	call   FWORD PTR [rcx]
  43330a:	rex.XB add BYTE PTR [r8],al
  43330d:	add    BYTE PTR [rax],al
  43330f:	add    al,al
  433311:	or     eax,0x42
  433316:	add    BYTE PTR [rax],al
  433318:	add    eax,0x0
  43331d:	add    BYTE PTR [rax],al
  43331f:	add    BYTE PTR [rsi],dl
  433321:	sbb    al,BYTE PTR [rbx+0x0]
  433324:	add    BYTE PTR [rax],al
  433326:	add    BYTE PTR [rax],al
  433328:	sub    BYTE PTR [rdx],bl
  43332a:	rex.XB add BYTE PTR [r8],al
  43332d:	add    BYTE PTR [rax],al
  43332f:	add    BYTE PTR [rax],dl
  433331:	(bad)  
  433332:	rex.X add BYTE PTR [rax],al
  433335:	add    BYTE PTR [rax],al
  433337:	add    BYTE PTR [rcx],al
  433339:	add    BYTE PTR [rax],al
  43333b:	add    BYTE PTR [rax],al
  43333d:	add    BYTE PTR [rax],al
  43333f:	add    BYTE PTR [rcx+0x1a],cl
  433342:	rex.XB add BYTE PTR [r8],al
  433345:	add    BYTE PTR [rax],al
  433347:	add    BYTE PTR [rcx+0x1a],bl
  43334a:	rex.XB add BYTE PTR [r8],al
  43334d:	add    BYTE PTR [rax],al
  43334f:	add    BYTE PTR [rax+0xe],dl
  433352:	rex.X add BYTE PTR [rax],al
  433355:	add    BYTE PTR [rax],al
  433357:	add    BYTE PTR [rdi],al
  433359:	add    BYTE PTR [rax],al
  43335b:	add    BYTE PTR [rax],al
  43335d:	add    BYTE PTR [rax],al
  43335f:	add    BYTE PTR [rdi+0x1a],ch
  433362:	rex.XB add BYTE PTR [r8],al
  433365:	add    BYTE PTR [rax],al
  433367:	add    BYTE PTR [rbp+0x1a],bh
  43336a:	rex.XB add BYTE PTR [r8],al
  43336d:	add    BYTE PTR [rax],al
  43336f:	add    al,al
  433371:	(bad)  
  433372:	rex.X add BYTE PTR [rax],al
  433375:	add    BYTE PTR [rax],al
  433377:	add    BYTE PTR [rax],cl
  433379:	add    BYTE PTR [rax],al
  43337b:	add    BYTE PTR [rax],al
  43337d:	add    BYTE PTR [rax],al
  43337f:	add    BYTE PTR [rcx+0x431a],dl
  433385:	add    BYTE PTR [rax],al
  433387:	add    BYTE PTR [rsi+0x431a],ah
  43338d:	add    BYTE PTR [rax],al
  43338f:	add    BYTE PTR [rax],dh
  433391:	cmovb  eax,DWORD PTR [rax]
  433394:	add    BYTE PTR [rax],al
  433396:	add    BYTE PTR [rax],al
  433398:	add    eax,DWORD PTR [rax]
  43339a:	add    BYTE PTR [rax],al
  43339c:	add    BYTE PTR [rax],al
  43339e:	add    BYTE PTR [rax],al
  4333a0:	rcr    DWORD PTR [rdx],0x43
  4333a3:	add    BYTE PTR [rax],al
  4333a5:	add    BYTE PTR [rax],al
  4333a7:	add    dl,dl
  4333a9:	sbb    al,BYTE PTR [rbx+0x0]
  4333ac:	add    BYTE PTR [rax],al
  4333ae:	add    BYTE PTR [rax],al
  4333b0:	jo     0x4333c1
  4333b2:	rex.X add BYTE PTR [rax],al
  4333b5:	add    BYTE PTR [rax],al
  4333b7:	add    BYTE PTR [rbx],al
  4333b9:	add    BYTE PTR [rax],al
  4333bb:	add    BYTE PTR [rax],al
  4333bd:	add    BYTE PTR [rax],al
  4333bf:	add    bh,ah
  4333c1:	sbb    al,BYTE PTR [rbx+0x0]
  4333c4:	add    BYTE PTR [rax],al
  4333c6:	add    BYTE PTR [rax],al
  4333c8:	or     BYTE PTR [rbx],bl
  4333ca:	rex.XB add BYTE PTR [r8],al
  4333cd:	add    BYTE PTR [rax],al
  4333cf:	add    BYTE PTR [rax+0x420f],dh
  4333d5:	add    BYTE PTR [rax],al
  4333d7:	add    BYTE PTR [rbx],al
  4333d9:	add    BYTE PTR [rax],al
  4333db:	add    BYTE PTR [rax],al
  4333dd:	add    BYTE PTR [rax],al
  4333df:	add    BYTE PTR [rdx],ch
  4333e1:	sbb    eax,DWORD PTR [rbx+0x0]
  4333e4:	add    BYTE PTR [rax],al
  4333e6:	add    BYTE PTR [rax],al
  4333e8:	(bad)  
  4333e9:	sbb    eax,DWORD PTR [rbx+0x0]
  4333ec:	add    BYTE PTR [rax],al
  4333ee:	add    BYTE PTR [rax],al
  4333f0:	add    BYTE PTR [rax],dl
  4333f2:	rex.X add BYTE PTR [rax],al
  4333f5:	add    BYTE PTR [rax],al
  4333f7:	add    BYTE PTR [rax+rax*1],cl
  4333fa:	add    BYTE PTR [rax],al
  4333fc:	add    BYTE PTR [rax],al
  4333fe:	add    BYTE PTR [rax],al
  433400:	pop    rdx
  433401:	sbb    eax,DWORD PTR [rbx+0x0]
  433404:	add    BYTE PTR [rax],al
  433406:	add    BYTE PTR [rax],al
  433408:	push   0x1b
  43340a:	rex.XB add BYTE PTR [r8],al
  43340d:	add    BYTE PTR [rax],al
  43340f:	add    BYTE PTR [rax+0x4210],ah
  433415:	add    BYTE PTR [rax],al
  433417:	add    BYTE PTR [rdi],cl
  433419:	add    BYTE PTR [rax],al
  43341b:	add    BYTE PTR [rax],al
  43341d:	add    BYTE PTR [rax],al
  43341f:	add    BYTE PTR [rax+0x431b],al
  433425:	add    BYTE PTR [rax],al
  433427:	add    BYTE PTR [rbp+0x431b],cl
  43342d:	add    BYTE PTR [rax],al
  43342f:	add    BYTE PTR [rax+0x4211],dl
  433435:	add    BYTE PTR [rax],al
  433437:	add    BYTE PTR [rcx],dl
  433439:	add    BYTE PTR [rax],al
  43343b:	add    BYTE PTR [rax],al
  43343d:	add    BYTE PTR [rax],al
  43343f:	add    BYTE PTR [rax+0x431b],ch
  433445:	add    BYTE PTR [rax],al
  433447:	add    BYTE PTR [rbp+0x431b],dh
  43344d:	add    BYTE PTR [rax],al
  43344f:	add    BYTE PTR [rax],dl
  433451:	adc    al,BYTE PTR [rdx+0x0]
  433454:	add    BYTE PTR [rax],al
  433456:	add    BYTE PTR [rax],al
  433458:	add    al,0x0
  43345a:	add    BYTE PTR [rax],al
  43345c:	add    BYTE PTR [rax],al
  43345e:	add    BYTE PTR [rax],al
  433460:	enter  0x431b,0x0
  433464:	add    BYTE PTR [rax],al
  433466:	add    BYTE PTR [rax],al
  433468:	fcomp  DWORD PTR [rbx]
  43346a:	rex.XB add BYTE PTR [r8],al
  43346d:	add    BYTE PTR [rax],al
  43346f:	add    BYTE PTR [rax+0x4212],ah
  433475:	add    BYTE PTR [rax],al
  433477:	add    BYTE PTR [rdx],al
  433479:	add    BYTE PTR [rax],al
  43347b:	add    BYTE PTR [rax],al
  43347d:	add    BYTE PTR [rax],al
  43347f:	add    cl,bh
  433481:	sbb    eax,DWORD PTR [rbx+0x0]
  433484:	add    BYTE PTR [rax],al
  433486:	add    BYTE PTR [rax],al
  433488:	sbb    BYTE PTR [rbx+rax*2],bl
  43348b:	add    BYTE PTR [rax],al
  43348d:	add    BYTE PTR [rax],al
  43348f:	add    al,dh
  433491:	adc    al,BYTE PTR [rdx+0x0]
  433494:	add    BYTE PTR [rax],al
  433496:	add    BYTE PTR [rax],al
  433498:	add    eax,0x0
  43349d:	add    BYTE PTR [rax],al
  43349f:	add    BYTE PTR [rdi],dh
  4334a1:	sbb    al,0x43
  4334a3:	add    BYTE PTR [rax],al
  4334a5:	add    BYTE PTR [rax],al
  4334a7:	add    BYTE PTR [rdi+0x1c],al
  4334aa:	rex.XB add BYTE PTR [r8],al
  4334ad:	add    BYTE PTR [rax],al
  4334af:	add    BYTE PTR [rax+0x13],dl
  4334b2:	rex.X add BYTE PTR [rax],al
  4334b5:	add    BYTE PTR [rax],al
  4334b7:	add    BYTE PTR [rsi],al
  4334b9:	add    BYTE PTR [rax],al
  4334bb:	add    BYTE PTR [rax],al
  4334bd:	add    BYTE PTR [rax],al
  4334bf:	add    BYTE PTR [rbp+0x1c],bl
  4334c2:	rex.XB add BYTE PTR [r8],al
  4334c5:	add    BYTE PTR [rax],al
  4334c7:	add    BYTE PTR [rbx+0x1c],dh
  4334ca:	rex.XB add BYTE PTR [r8],al
  4334cd:	add    BYTE PTR [rax],al
  4334cf:	add    al,al
  4334d1:	adc    eax,DWORD PTR [rdx+0x0]
  4334d4:	add    BYTE PTR [rax],al
  4334d6:	add    BYTE PTR [rax],al
  4334d8:	add    eax,0x0
  4334dd:	add    BYTE PTR [rax],al
  4334df:	add    BYTE PTR [rdi+0x431c],cl
  4334e5:	add    BYTE PTR [rax],al
  4334e7:	add    BYTE PTR [rsi+0x431c],ah
  4334ed:	add    BYTE PTR [rax],al
  4334ef:	add    BYTE PTR [rax+0x4214],al
	...
  4334fd:	add    BYTE PTR [rax],al
  4334ff:	add    bl,al
  433501:	sbb    al,0x43
  433503:	add    BYTE PTR [rax],al
  433505:	add    BYTE PTR [rax],al
  433507:	add    BYTE PTR [rbp+0x431b],cl
  43350d:	add    BYTE PTR [rax],al
  43350f:	add    BYTE PTR [rax+0x4214],ah
  433515:	add    BYTE PTR [rax],al
  433517:	add    BYTE PTR [rbx],dl
  433519:	add    BYTE PTR [rax],al
  43351b:	add    BYTE PTR [rax],al
  43351d:	add    BYTE PTR [rax],al
  43351f:	add    bh,cl
  433521:	sbb    al,0x43
  433523:	add    BYTE PTR [rax],al
  433525:	add    BYTE PTR [rax],al
  433527:	add    bl,bl
  433529:	sbb    al,0x43
  43352b:	add    BYTE PTR [rax],al
  43352d:	add    BYTE PTR [rax],al
  43352f:	add    BYTE PTR [rax],ah
  433531:	adc    eax,0x42
  433536:	add    BYTE PTR [rax],al
  433538:	(bad)  
  433539:	add    BYTE PTR [rax],al
  43353b:	add    BYTE PTR [rax],al
  43353d:	add    BYTE PTR [rax],al
  43353f:	add    ch,dh
  433541:	sbb    al,0x43
  433543:	add    BYTE PTR [rax],al
  433545:	add    BYTE PTR [rax],al
  433547:	add    BYTE PTR [rbx],al
  433549:	sbb    eax,0x43
  43354e:	add    BYTE PTR [rax],al
  433550:	adc    BYTE PTR [rip+0x42],0x0        # 0x433599
  433557:	add    BYTE PTR [rbx],al
  433559:	add    BYTE PTR [rax],al
  43355b:	add    BYTE PTR [rax],al
  43355d:	add    BYTE PTR [rax],al
  43355f:	add    BYTE PTR [rdi],dl
  433561:	sbb    eax,0x43
  433566:	add    BYTE PTR [rax],al
  433568:	sub    BYTE PTR [rip+0x43],bl        # 0x4335b1
  43356e:	add    BYTE PTR [rax],al
  433570:	rcl    BYTE PTR [rip+0x42],1        # 0x4335b8
  433576:	add    BYTE PTR [rax],al
  433578:	add    eax,DWORD PTR [rax]
  43357a:	add    BYTE PTR [rax],al
  43357c:	add    BYTE PTR [rax],al
  43357e:	add    BYTE PTR [rax],al
  433580:	sbb    rax,0x43
  433586:	add    BYTE PTR [rax],al
  433588:	push   rsi
  433589:	sbb    eax,0x43
  43358e:	add    BYTE PTR [rax],al
  433590:	rex (bad) 
  433592:	rex.X add BYTE PTR [rax],al
  433595:	add    BYTE PTR [rax],al
  433597:	add    BYTE PTR [rdx],al
  433599:	add    BYTE PTR [rax],al
  43359b:	add    BYTE PTR [rax],al
  43359d:	add    BYTE PTR [rax],al
  43359f:	add    BYTE PTR [rdx+0x1d],dh
  4335a2:	rex.XB add BYTE PTR [r8],al
  4335a5:	add    BYTE PTR [rax],al
  4335a7:	add    BYTE PTR [rdi+0x1d],bh
  4335aa:	rex.XB add BYTE PTR [r8],al
  4335ad:	add    BYTE PTR [rax],al
  4335af:	add    BYTE PTR [rax+0x4216],ah
  4335b5:	add    BYTE PTR [rax],al
  4335b7:	add    BYTE PTR [rax],bh
  4335b9:	add    BYTE PTR [rax],al
  4335bb:	add    BYTE PTR [rax],al
  4335bd:	add    BYTE PTR [rax],al
  4335bf:	add    BYTE PTR [rdx+0x431d],dl
  4335c5:	add    BYTE PTR [rax],al
  4335c7:	add    BYTE PTR [rax+0x431d],ch
  4335cd:	add    BYTE PTR [rax],al
  4335cf:	add    BYTE PTR [rax],dh
  4335d1:	sbb    DWORD PTR [rdx+0x0],eax
  4335d4:	add    BYTE PTR [rax],al
  4335d6:	add    BYTE PTR [rax],al
  4335d8:	(bad)  
  4335d9:	add    BYTE PTR [rax],al
  4335db:	add    BYTE PTR [rax],al
  4335dd:	add    BYTE PTR [rax],al
  4335df:	add    bh,dl
  4335e1:	sbb    eax,0x43
  4335e6:	add    BYTE PTR [rax],al
  4335e8:	jmp    0x43790a
  4335ed:	add    BYTE PTR [rax],al
  4335ef:	add    BYTE PTR [rax+0x4219],dl
  4335f5:	add    BYTE PTR [rax],al
  4335f7:	add    BYTE PTR [rbx],al
  4335f9:	add    BYTE PTR [rax],al
  4335fb:	add    BYTE PTR [rax],al
  4335fd:	add    BYTE PTR [rax],al
  4335ff:	add    BYTE PTR [rax],cl
  433601:	(bad)  
  433602:	rex.XB add BYTE PTR [r8],al
  433605:	add    BYTE PTR [rax],al
  433607:	add    BYTE PTR [rax],dh
  433609:	(bad)  
  43360a:	rex.XB add BYTE PTR [r8],al
  43360d:	add    BYTE PTR [rax],al
  43360f:	add    al,ah
  433611:	sbb    DWORD PTR [rdx+0x0],eax
  433614:	add    BYTE PTR [rax],al
  433616:	add    BYTE PTR [rax],al
  433618:	add    eax,DWORD PTR [rax]
  43361a:	add    BYTE PTR [rax],al
  43361c:	add    BYTE PTR [rax],al
  43361e:	add    BYTE PTR [rax],al
  433620:	push   rdi
  433621:	(bad)  
  433622:	rex.XB add BYTE PTR [r8],al
  433625:	add    BYTE PTR [rax],al
  433627:	add    BYTE PTR [rax+0x1e],bh
  43362a:	rex.XB add BYTE PTR [r8],al
  43362d:	add    BYTE PTR [rax],al
  43362f:	add    BYTE PTR [rax],dl
  433631:	sbb    al,BYTE PTR [rdx+0x0]
  433634:	add    BYTE PTR [rax],al
  433636:	add    BYTE PTR [rax],al
  433638:	add    eax,DWORD PTR [rax]
  43363a:	add    BYTE PTR [rax],al
  43363c:	add    BYTE PTR [rax],al
  43363e:	add    BYTE PTR [rax],al
  433640:	pushf  
  433641:	(bad)  
  433642:	rex.XB add BYTE PTR [r8],al
  433645:	add    BYTE PTR [rax],al
  433647:	add    BYTE PTR [rax+0x431e],bh
  43364d:	add    BYTE PTR [rax],al
  43364f:	add    BYTE PTR [rax+0x1a],dl
  433652:	rex.X add BYTE PTR [rax],al
  433655:	add    BYTE PTR [rax],al
  433657:	add    BYTE PTR [rsi],al
  433659:	add    BYTE PTR [rax],al
  43365b:	add    BYTE PTR [rax],al
  43365d:	add    BYTE PTR [rax],al
  43365f:	add    al,bl
  433661:	(bad)  
  433662:	rex.XB add BYTE PTR [r8],al
  433665:	add    BYTE PTR [rax],al
  433667:	add    al,bh
  433669:	(bad)  
  43366a:	rex.XB add BYTE PTR [r8],al
  43366d:	add    BYTE PTR [rax],al
  43366f:	add    BYTE PTR [rax+0x421a],dh
  433675:	add    BYTE PTR [rax],al
  433677:	add    BYTE PTR [rbx],al
  433679:	add    BYTE PTR [rax],al
  43367b:	add    BYTE PTR [rax],al
  43367d:	add    BYTE PTR [rax],al
  43367f:	add    BYTE PTR [rdx],bl
  433681:	(bad)  
  433682:	rex.XB add BYTE PTR [r8],al
  433685:	add    BYTE PTR [rax],al
  433687:	add    BYTE PTR [rcx],ch
  433689:	(bad)  
  43368a:	rex.XB add BYTE PTR [r8],al
  43368d:	add    BYTE PTR [rax],al
  43368f:	add    al,ah
  433691:	sbb    al,BYTE PTR [rdx+0x0]
  433694:	add    BYTE PTR [rax],al
  433696:	add    BYTE PTR [rax],al
  433698:	or     eax,0x0
  43369d:	add    BYTE PTR [rax],al
  43369f:	add    BYTE PTR [rsi],bh
  4336a1:	(bad)  
  4336a2:	rex.XB add BYTE PTR [r8],al
  4336a5:	add    BYTE PTR [rax],al
  4336a7:	add    BYTE PTR [rdx+0x1f],cl
  4336aa:	rex.XB add BYTE PTR [r8],al
  4336ad:	add    BYTE PTR [rax],al
  4336af:	add    BYTE PTR [rax+0x1b],ah
  4336b2:	rex.X add BYTE PTR [rax],al
  4336b5:	add    BYTE PTR [rax],al
  4336b7:	add    BYTE PTR [rbx],ah
  4336b9:	add    BYTE PTR [rax],al
  4336bb:	add    BYTE PTR [rax],al
  4336bd:	add    BYTE PTR [rax],al
  4336bf:	add    BYTE PTR [rcx+0x1f],ah
  4336c2:	rex.XB add BYTE PTR [r8],al
  4336c5:	add    BYTE PTR [rax],al
  4336c7:	add    BYTE PTR [rbp+0x431b],cl
  4336cd:	add    BYTE PTR [rax],al
  4336cf:	add    BYTE PTR [rax],al
  4336d1:	sbb    eax,0x42
  4336d6:	add    BYTE PTR [rax],al
  4336d8:	adc    eax,DWORD PTR [rax]
  4336da:	add    BYTE PTR [rax],al
  4336dc:	add    BYTE PTR [rax],al
  4336de:	add    BYTE PTR [rax],al
  4336e0:	ins    DWORD PTR es:[rdi],dx
  4336e1:	(bad)  
  4336e2:	rex.XB add BYTE PTR [r8],al
  4336e5:	add    BYTE PTR [rax],al
  4336e7:	add    BYTE PTR [rax+0x431f],cl
  4336ed:	add    BYTE PTR [rax],al
  4336ef:	add    BYTE PTR [rax+0x421d],al
  4336f5:	add    BYTE PTR [rax],al
  4336f7:	add    BYTE PTR [rdx],al
  4336f9:	add    BYTE PTR [rax],al
  4336fb:	add    BYTE PTR [rax],al
  4336fd:	add    BYTE PTR [rax],al
  4336ff:	add    BYTE PTR [rbx+0x431f],bh
  433705:	add    BYTE PTR [rax],al
  433707:	add    bh,al
  433709:	(bad)  
  43370a:	rex.XB add BYTE PTR [r8],al
  43370d:	add    BYTE PTR [rax],al
  43370f:	add    al,al
  433711:	sbb    eax,0x42
  433716:	add    BYTE PTR [rax],al
  433718:	add    eax,DWORD PTR [rax]
  43371a:	add    BYTE PTR [rax],al
  43371c:	add    BYTE PTR [rax],al
  43371e:	add    BYTE PTR [rax],al
  433720:	fstp   DWORD PTR [rdi]
  433722:	rex.XB add BYTE PTR [r8],al
  433725:	add    BYTE PTR [rax],al
  433727:	add    al,ch
  433729:	(bad)  
  43372a:	rex.XB add BYTE PTR [r8],al
  43372d:	add    BYTE PTR [rax],al
  43372f:	add    BYTE PTR [rax],dl
  433731:	(bad)  
  433732:	rex.X add BYTE PTR [rax],al
	...
  43373d:	add    BYTE PTR [rax],al
  43373f:	add    BYTE PTR [rax],cl
  433741:	and    BYTE PTR [rbx+0x0],al
  433744:	add    BYTE PTR [rax],al
  433746:	add    BYTE PTR [rax],al
  433748:	adc    BYTE PTR [rax],ah
  43374a:	rex.XB add BYTE PTR [r8],al
  43374d:	add    BYTE PTR [rax],al
  43374f:	add    BYTE PTR [rax],dh
  433751:	(bad)  
  433752:	rex.X add BYTE PTR [rax],al
  433755:	add    BYTE PTR [rax],al
  433757:	add    BYTE PTR [rcx],al
  433759:	add    BYTE PTR [rax],al
  43375b:	add    BYTE PTR [rax],al
  43375d:	add    BYTE PTR [rax],al
  43375f:	add    BYTE PTR [rax],ah
  433761:	and    BYTE PTR [rbx+0x0],al
  433764:	add    BYTE PTR [rax],al
  433766:	add    BYTE PTR [rax],al
  433768:	(bad)  
  433769:	and    BYTE PTR [rbx+0x0],al
  43376c:	add    BYTE PTR [rax],al
  43376e:	add    BYTE PTR [rax],al
  433770:	push   rax
  433771:	(bad)  
  433772:	rex.X add BYTE PTR [rax],al
  433775:	add    BYTE PTR [rax],al
  433777:	add    BYTE PTR [rax+rax*1],al
  43377a:	add    BYTE PTR [rax],al
  43377c:	add    BYTE PTR [rax],al
  43377e:	add    BYTE PTR [rax],al
  433780:	and    BYTE PTR ds:[rbx+0x0],al
  433784:	add    BYTE PTR [rax],al
  433786:	add    BYTE PTR [rax],al
  433788:	rex.RX and BYTE PTR [rbx+0x0],r8b
  43378c:	add    BYTE PTR [rax],al
  43378e:	add    BYTE PTR [rax],al
  433790:	rcr    BYTE PTR [rsi],0x42
	...
  43379f:	add    BYTE PTR [rax+riz*1+0x43],bl
  4337a3:	add    BYTE PTR [rax],al
  4337a5:	add    BYTE PTR [rax],al
  4337a7:	add    BYTE PTR [rax+0x20],ah
  4337aa:	rex.XB add BYTE PTR [r8],al
  4337ad:	add    BYTE PTR [rax],al
  4337af:	add    al,dl
  4337b1:	(bad)  
  4337b2:	rex.X add BYTE PTR [rax],al
	...
  4337bd:	add    BYTE PTR [rax],al
  4337bf:	add    BYTE PTR [rax+0x4320],al
  4337c5:	add    BYTE PTR [rax],al
  4337c7:	add    BYTE PTR [rdi+0x4320],cl
  4337cd:	add    BYTE PTR [rax],al
  4337cf:	add    al,dh
  4337d1:	(bad)  
  4337d2:	rex.X add BYTE PTR [rax],al
  4337d5:	add    BYTE PTR [rax],al
  4337d7:	add    BYTE PTR [rsi],al
  4337d9:	add    BYTE PTR [rax],al
  4337db:	add    BYTE PTR [rax],al
  4337dd:	add    BYTE PTR [rax],al
  4337df:	add    BYTE PTR [rax+riz*1+0x43],ch
  4337e6:	add    BYTE PTR [rax],al
  4337e8:	mov    dh,0x20
  4337ea:	rex.XB add BYTE PTR [r8],al
  4337ed:	add    BYTE PTR [rax],al
  4337ef:	add    BYTE PTR [rax+0x1f],dh
  4337f2:	rex.X add BYTE PTR [rax],al
	...
  4337fd:	add    BYTE PTR [rax],al
  4337ff:	add    ah,al
  433801:	and    BYTE PTR [rbx+0x0],al
  433804:	add    BYTE PTR [rax],al
  433806:	add    BYTE PTR [rax],al
  433808:	shl    DWORD PTR [rax],cl
  43380a:	rex.XB add BYTE PTR [r8],al
  43380d:	add    BYTE PTR [rax],al
  43380f:	add    BYTE PTR [rax+0x421f],dl
	...
  43381d:	add    BYTE PTR [rax],al
  43381f:	add    dh,ah
  433821:	and    BYTE PTR [rbx+0x0],al
  433824:	add    BYTE PTR [rax],al
  433826:	add    BYTE PTR [rax],al
  433828:	mul    BYTE PTR [rax]
  43382a:	rex.XB add BYTE PTR [r8],al
  43382d:	add    BYTE PTR [rax],al
  43382f:	add    BYTE PTR [rax+0x421f],dh
	...
  43383d:	add    BYTE PTR [rax],al
  43383f:	add    BYTE PTR [rdx],cl
  433841:	and    DWORD PTR [rbx+0x0],eax
  433844:	add    BYTE PTR [rax],al
  433846:	add    BYTE PTR [rax],al
  433848:	sbb    BYTE PTR [rcx],ah
  43384a:	rex.XB add BYTE PTR [r8],al
  43384d:	add    BYTE PTR [rax],al
  43384f:	add    al,dl
  433851:	(bad)  
  433852:	rex.X add BYTE PTR [rax],al
	...
  43385d:	add    BYTE PTR [rax],al
  43385f:	add    BYTE PTR [rdx],ch
  433861:	and    DWORD PTR [rbx+0x0],eax
  433864:	add    BYTE PTR [rax],al
  433866:	add    BYTE PTR [rax],al
  433868:	and    DWORD PTR ss:[rbx+0x0],eax
  43386c:	add    BYTE PTR [rax],al
  43386e:	add    BYTE PTR [rax],al
  433870:	lock (bad) 
  433872:	rex.X add BYTE PTR [rax],al
	...
  43387d:	add    BYTE PTR [rax],al
  43387f:	add    BYTE PTR [rsi+0x21],al
  433882:	rex.XB add BYTE PTR [r8],al
  433885:	add    BYTE PTR [rax],al
  433887:	add    BYTE PTR [rcx+0x21],bl
  43388a:	rex.XB add BYTE PTR [r8],al
  43388d:	add    BYTE PTR [rax],al
  43388f:	add    BYTE PTR [rax],dl
  433891:	and    BYTE PTR [rdx+0x0],al
	...
  4338a0:	jno    0x4338c3
  4338a2:	rex.XB add BYTE PTR [r8],al
  4338a5:	add    BYTE PTR [rax],al
  4338a7:	add    BYTE PTR [rax+0x4321],al
  4338ad:	add    BYTE PTR [rax],al
  4338af:	add    BYTE PTR [rax],dh
  4338b1:	and    BYTE PTR [rdx+0x0],al
	...
  4338c0:	xchg   esp,eax
  4338c1:	and    DWORD PTR [rbx+0x0],eax
  4338c4:	add    BYTE PTR [rax],al
  4338c6:	add    BYTE PTR [rax],al
  4338c8:	scas   al,BYTE PTR es:[rdi]
  4338c9:	and    DWORD PTR [rbx+0x0],eax
  4338cc:	add    BYTE PTR [rax],al
  4338ce:	add    BYTE PTR [rax],al
  4338d0:	push   rax
  4338d1:	and    BYTE PTR [rdx+0x0],al
	...
  4338e0:	int3   
  4338e1:	and    DWORD PTR [rbx+0x0],eax
  4338e4:	add    BYTE PTR [rax],al
  4338e6:	add    BYTE PTR [rax],al
  4338e8:	fbld   TBYTE PTR [rcx]
  4338ea:	rex.XB add BYTE PTR [r8],al
  4338ed:	add    BYTE PTR [rax],al
  4338ef:	add    BYTE PTR [rax+0x20],dh
  4338f2:	rex.X add BYTE PTR [rax],al
	...
  4338fd:	add    BYTE PTR [rax],al
  4338ff:	add    dh,dh
  433901:	and    DWORD PTR [rbx+0x0],eax
  433904:	add    BYTE PTR [rax],al
  433906:	add    BYTE PTR [rax],al
  433908:	add    al,0x22
  43390a:	rex.XB add BYTE PTR [r8],al
  43390d:	add    BYTE PTR [rax],al
  43390f:	add    BYTE PTR [rax+0x4220],dl
  433915:	add    BYTE PTR [rax],al
  433917:	add    BYTE PTR [rcx],al
  433919:	add    BYTE PTR [rax],al
  43391b:	add    BYTE PTR [rax],al
  43391d:	add    BYTE PTR [rax],al
  43391f:	add    BYTE PTR [rsi],dl
  433921:	and    al,BYTE PTR [rbx+0x0]
  433924:	add    BYTE PTR [rax],al
  433926:	add    BYTE PTR [rax],al
  433928:	and    DWORD PTR [rdx],esp
  43392a:	rex.XB add BYTE PTR [r8],al
  43392d:	add    BYTE PTR [rax],al
  43392f:	add    al,dl
  433931:	and    BYTE PTR [rdx+0x0],al
	...
  433940:	cmp    BYTE PTR [rdx],ah
  433942:	rex.XB add BYTE PTR [r8],al
  433945:	add    BYTE PTR [rax],al
  433947:	add    BYTE PTR [rbx+0x22],al
  43394a:	rex.XB add BYTE PTR [r8],al
  43394d:	add    BYTE PTR [rax],al
  43394f:	add    al,dh
  433951:	and    BYTE PTR [rdx+0x0],al
	...
  433960:	push   rbx
  433961:	and    al,BYTE PTR [rbx+0x0]
  433964:	add    BYTE PTR [rax],al
  433966:	add    BYTE PTR [rax],al
  433968:	(bad)  
  433969:	and    al,BYTE PTR [rbx+0x0]
  43396c:	add    BYTE PTR [rax],al
  43396e:	add    BYTE PTR [rax],al
  433970:	adc    BYTE PTR [rcx],ah
  433972:	rex.X add BYTE PTR [rax],al
	...
  43397d:	add    BYTE PTR [rax],al
  43397f:	add    BYTE PTR [rsi+0x22],bh
  433982:	rex.XB add BYTE PTR [r8],al
  433985:	add    BYTE PTR [rax],al
  433987:	add    BYTE PTR [rbp+0x4322],dl
  43398d:	add    BYTE PTR [rax],al
  43398f:	add    BYTE PTR [rax],dh
  433991:	and    DWORD PTR [rdx+0x0],eax
	...
  4339a0:	mov    al,0x22
  4339a2:	rex.XB add BYTE PTR [r8],al
  4339a5:	add    BYTE PTR [rax],al
  4339a7:	add    BYTE PTR [rsi+0x4322],bh
  4339ad:	add    BYTE PTR [rax],al
  4339af:	add    BYTE PTR [rax+0x21],dl
  4339b2:	rex.X add BYTE PTR [rax],al
	...
  4339bd:	add    BYTE PTR [rax],al
  4339bf:	add    cl,dl
  4339c1:	and    al,BYTE PTR [rbx+0x0]
  4339c4:	add    BYTE PTR [rax],al
  4339c6:	add    BYTE PTR [rax],al
  4339c8:	in     eax,0x22
  4339ca:	rex.XB add BYTE PTR [r8],al
  4339cd:	add    BYTE PTR [rax],al
  4339cf:	add    BYTE PTR [rax+0x4221],al
	...
  4339dd:	add    BYTE PTR [rax],al
  4339df:	add    dh,bh
  4339e1:	and    al,BYTE PTR [rbx+0x0]
  4339e4:	add    BYTE PTR [rax],al
  4339e6:	add    BYTE PTR [rax],al
  4339e8:	adc    esp,DWORD PTR [rbx]
  4339ea:	rex.XB add BYTE PTR [r8],al
  4339ed:	add    BYTE PTR [rax],al
  4339ef:	add    BYTE PTR [rax+0x4221],ah
	...
  4339fd:	add    BYTE PTR [rax],al
  4339ff:	add    BYTE PTR [rip+0x4323],ch        # 0x437d28
  433a05:	add    BYTE PTR [rax],al
  433a07:	add    BYTE PTR [rax],bh
  433a09:	and    eax,DWORD PTR [rbx+0x0]
  433a0c:	add    BYTE PTR [rax],al
  433a0e:	add    BYTE PTR [rax],al
  433a10:	shl    BYTE PTR [rcx],0x42
	...
  433a1f:	add    BYTE PTR [rcx+0x23],ch
  433a22:	rex.XB add BYTE PTR [r8],al
  433a25:	add    BYTE PTR [rax],al
  433a27:	add    BYTE PTR [rcx],ah
  433a29:	and    al,BYTE PTR [rbx+0x0]
  433a2c:	add    BYTE PTR [rax],al
  433a2e:	add    BYTE PTR [rax],al
  433a30:	loopne 0x433a53
  433a32:	rex.X add BYTE PTR [rax],al
	...
  433a3d:	add    BYTE PTR [rax],al
  433a3f:	add    BYTE PTR [rbx+0x23],dh
  433a42:	rex.XB add BYTE PTR [r8],al
  433a45:	add    BYTE PTR [rax],al
  433a47:	add    BYTE PTR [rbp+0x23],bh
  433a4a:	rex.XB add BYTE PTR [r8],al
  433a4d:	add    BYTE PTR [rax],al
  433a4f:	add    BYTE PTR [rax],al
  433a51:	and    al,BYTE PTR [rdx+0x0]
	...
  433a60:	xchg   ebx,eax
  433a61:	and    eax,DWORD PTR [rbx+0x0]
  433a64:	add    BYTE PTR [rax],al
  433a66:	add    BYTE PTR [rax],al
  433a68:	lahf   
  433a69:	and    eax,DWORD PTR [rbx+0x0]
  433a6c:	add    BYTE PTR [rax],al
  433a6e:	add    BYTE PTR [rax],al
  433a70:	and    BYTE PTR [rdx],ah
  433a72:	rex.X add BYTE PTR [rax],al
	...
  433a7d:	add    BYTE PTR [rax],al
  433a7f:	add    BYTE PTR [rdi+0x4323],ch
  433a85:	add    BYTE PTR [rax],al
  433a87:	add    BYTE PTR [rbp+0x4323],bh
  433a8d:	add    BYTE PTR [rax],al
  433a8f:	add    BYTE PTR [rax+0x22],al
  433a92:	rex.X add BYTE PTR [rax],al
	...
  433a9d:	add    BYTE PTR [rax],al
  433a9f:	add    bh,cl
  433aa1:	and    eax,DWORD PTR [rbx+0x0]
  433aa4:	add    BYTE PTR [rax],al
  433aa6:	add    BYTE PTR [rax],al
  433aa8:	loopne 0x433acd
  433aaa:	rex.XB add BYTE PTR [r8],al
  433aad:	add    BYTE PTR [rax],al
  433aaf:	add    BYTE PTR [rax+0x22],ah
  433ab2:	rex.X add BYTE PTR [rax],al
	...
  433abd:	add    BYTE PTR [rax],al
  433abf:	add    BYTE PTR [rbx],al
  433ac1:	and    al,0x43
  433ac3:	add    BYTE PTR [rax],al
  433ac5:	add    BYTE PTR [rax],al
  433ac7:	add    BYTE PTR [rsi],cl
  433ac9:	and    al,0x43
  433acb:	add    BYTE PTR [rax],al
  433acd:	add    BYTE PTR [rax],al
  433acf:	add    BYTE PTR [rax+0x4222],al
	...
  433add:	add    BYTE PTR [rax],al
  433adf:	add    BYTE PTR [rip+0x4324],bl        # 0x437e09
  433ae5:	add    BYTE PTR [rax],al
  433ae7:	add    BYTE PTR [rip+0x4324],ch        # 0x437e11
  433aed:	add    BYTE PTR [rax],al
  433aef:	add    BYTE PTR [rax+0x4222],ah
	...
  433afd:	add    BYTE PTR [rax],al
  433aff:	add    BYTE PTR [rax+0x24],cl
  433b02:	rex.XB add BYTE PTR [r8],al
  433b05:	add    BYTE PTR [rax],al
  433b07:	add    BYTE PTR [rax+0x24],ch
  433b0a:	rex.XB add BYTE PTR [r8],al
  433b0d:	add    BYTE PTR [rax],al
  433b0f:	add    al,al
  433b11:	and    al,BYTE PTR [rdx+0x0]
	...
  433b20:	mov    esp,DWORD PTR [rbx+rax*2]
  433b23:	add    BYTE PTR [rax],al
  433b25:	add    BYTE PTR [rax],al
  433b27:	add    BYTE PTR [rax+0x4324],ch
  433b2d:	add    BYTE PTR [rax],al
  433b2f:	add    al,ah
  433b31:	and    al,BYTE PTR [rdx+0x0]
	...
  433b40:	enter  0x4324,0x0
  433b44:	add    BYTE PTR [rax],al
  433b46:	add    BYTE PTR [rax],al
  433b48:	loopne 0x433b6e
  433b4a:	rex.XB add BYTE PTR [r8],al
  433b4d:	add    BYTE PTR [rax],al
  433b4f:	add    BYTE PTR [rax],al
  433b51:	and    eax,DWORD PTR [rdx+0x0]
	...
  433b60:	cld    
  433b61:	and    al,0x43
  433b63:	add    BYTE PTR [rax],al
  433b65:	add    BYTE PTR [rax],al
  433b67:	add    BYTE PTR [rsi],dl
  433b69:	and    eax,0x43
  433b6e:	add    BYTE PTR [rax],al
  433b70:	and    BYTE PTR [rbx],ah
  433b72:	rex.X add BYTE PTR [rax],al
	...
  433b7d:	add    BYTE PTR [rax],al
  433b7f:	add    BYTE PTR ds:0x43,dh
  433b86:	add    BYTE PTR [rax],al
  433b88:	rex.B and eax,0x43
  433b8e:	add    BYTE PTR [rax],al
  433b90:	rex and eax,DWORD PTR [rdx+0x0]
	...
  433ba0:	push   rdx
  433ba1:	and    eax,0x43
  433ba6:	add    BYTE PTR [rax],al
  433ba8:	pop    rsp
  433ba9:	and    eax,0x43
  433bae:	add    BYTE PTR [rax],al
  433bb0:	(bad)  
  433bb1:	and    eax,DWORD PTR [rdx+0x0]
	...
  433bc0:	outs   dx,DWORD PTR ds:[rsi]
  433bc1:	and    eax,0x43
  433bc6:	add    BYTE PTR [rax],al
  433bc8:	and    DWORD PTR [rdx],esp
  433bca:	rex.XB add BYTE PTR [r8],al
  433bcd:	add    BYTE PTR [rax],al
  433bcf:	add    BYTE PTR [rax+0x4223],al
	...
  433bdd:	add    BYTE PTR [rax],al
  433bdf:	add    BYTE PTR [rcx+0x25],bh
  433be2:	rex.XB add BYTE PTR [r8],al
  433be5:	add    BYTE PTR [rax],al
  433be7:	add    BYTE PTR [rax+0x4325],dl
  433bed:	add    BYTE PTR [rax],al
  433bef:	add    BYTE PTR [rax+0x4223],ah
	...
  433bfd:	add    BYTE PTR [rax],al
  433bff:	add    BYTE PTR [rbx+0x4325],bh
  433c05:	add    BYTE PTR [rax],al
  433c07:	add    ch,al
  433c09:	and    eax,0x43
  433c0e:	add    BYTE PTR [rax],al
  433c10:	shl    BYTE PTR [rbx],0x42
	...
  433c1f:	add    bl,dl
  433c21:	and    eax,0x43
  433c26:	add    BYTE PTR [rax],al
  433c28:	clc    
  433c29:	sbb    BYTE PTR [rbx+0x0],al
  433c2c:	add    BYTE PTR [rax],al
  433c2e:	add    BYTE PTR [rax],al
  433c30:	loopne 0x433c55
  433c32:	rex.X add BYTE PTR [rax],al
	...
  433c3d:	add    BYTE PTR [rax],al
  433c3f:	add    bh,dl
  433c41:	and    eax,0x43
  433c46:	add    BYTE PTR [rax],al
  433c48:	fbld   TBYTE PTR [rip+0x43]        # 0x433c91
  433c4e:	add    BYTE PTR [rax],al
  433c50:	lock and eax,DWORD PTR [rdx+0x0]
	...
  433c60:	cld    
  433c61:	and    eax,0x43
  433c66:	add    BYTE PTR [rax],al
  433c68:	or     BYTE PTR [rsi],ah
  433c6a:	rex.XB add BYTE PTR [r8],al
  433c6d:	add    BYTE PTR [rax],al
  433c6f:	add    BYTE PTR [rax],dl
  433c71:	and    al,0x42
  433c73:	add    BYTE PTR [rax],al
  433c75:	add    BYTE PTR [rax],al
  433c77:	add    BYTE PTR [rdx],cl
  433c79:	add    BYTE PTR [rax],al
  433c7b:	add    BYTE PTR [rax],al
  433c7d:	add    BYTE PTR [rax],al
  433c7f:	add    BYTE PTR [rdi],ch
  433c81:	rex.XB add BYTE PTR es:[r8],al
  433c85:	add    BYTE PTR [rax],al
  433c87:	add    BYTE PTR [rax],bh
  433c89:	rex.XB add BYTE PTR es:[r8],al
  433c8d:	add    BYTE PTR [rax],al
  433c8f:	add    BYTE PTR [rax+0x24],dh
  433c92:	rex.X add BYTE PTR [rax],al
  433c95:	add    BYTE PTR [rax],al
  433c97:	add    BYTE PTR [rcx],dl
  433c99:	add    BYTE PTR [rax],al
  433c9b:	add    BYTE PTR [rax],al
  433c9d:	add    BYTE PTR [rax],al
  433c9f:	add    BYTE PTR [rdx+0x26],ah
  433ca2:	rex.XB add BYTE PTR [r8],al
  433ca5:	add    BYTE PTR [rax],al
  433ca7:	add    BYTE PTR [rax+0x26],ch
  433caa:	rex.XB add BYTE PTR [r8],al
  433cad:	add    BYTE PTR [rax],al
  433caf:	add    al,al
  433cb1:	and    al,0x42
  433cb3:	add    BYTE PTR [rax],al
  433cb5:	add    BYTE PTR [rax],al
  433cb7:	add    BYTE PTR [rdx],bh
  433cb9:	add    BYTE PTR [rax],al
  433cbb:	add    BYTE PTR [rax],al
  433cbd:	add    BYTE PTR [rax],al
  433cbf:	add    BYTE PTR [rcx+0x4326],al
  433cc5:	add    BYTE PTR [rax],al
  433cc7:	add    BYTE PTR [rax+0x4326],cl
  433ccd:	add    BYTE PTR [rax],al
  433ccf:	add    BYTE PTR [rax+0x26],al
  433cd2:	rex.X add BYTE PTR [rax],al
  433cd5:	add    BYTE PTR [rax],al
  433cd7:	add    BYTE PTR [rbx],al
  433cd9:	add    BYTE PTR [rax],al
  433cdb:	add    BYTE PTR [rax],al
  433cdd:	add    BYTE PTR [rax],al
  433cdf:	add    BYTE PTR [rbx+0x4326],ah
  433ce5:	add    BYTE PTR [rax],al
  433ce7:	add    BYTE PTR [rdx+0x4326],ch
  433ced:	add    BYTE PTR [rax],al
  433cef:	add    BYTE PTR [rax+0x4226],ah
	...
  433cfd:	add    BYTE PTR [rax],al
  433cff:	add    ah,al
  433d01:	rex.XB add BYTE PTR es:[r8],al
  433d05:	add    BYTE PTR [rax],al
  433d07:	add    cl,cl
  433d09:	rex.XB add BYTE PTR es:[r8],al
  433d0d:	add    BYTE PTR [rax],al
  433d0f:	add    al,al
  433d11:	rex.X add BYTE PTR es:[rax],al
	...
  433d1d:	add    BYTE PTR [rax],al
  433d1f:	add    ah,ah
  433d21:	rex.XB add BYTE PTR es:[r8],al
  433d25:	add    BYTE PTR [rax],al
  433d27:	add    cl,ch
  433d29:	rex.XB add BYTE PTR es:[r8],al
  433d2d:	add    BYTE PTR [rax],al
  433d2f:	add    al,ah
  433d31:	rex.X add BYTE PTR es:[rax],al
  433d35:	add    BYTE PTR [rax],al
  433d37:	add    BYTE PTR [rip+0x0],al        # 0x433d3d
  433d3d:	add    BYTE PTR [rax],al
  433d3f:	add    dh,dh
  433d41:	rex.XB add BYTE PTR es:[r8],al
  433d45:	add    BYTE PTR [rax],al
  433d47:	add    bl,bh
  433d49:	rex.XB add BYTE PTR es:[r8],al
  433d4d:	add    BYTE PTR [rax],al
  433d4f:	add    BYTE PTR [rax],dl
  433d51:	(bad)  
  433d52:	rex.X add BYTE PTR [rax],al
  433d55:	add    BYTE PTR [rax],al
  433d57:	add    BYTE PTR [rcx],dl
  433d59:	add    BYTE PTR [rax],al
  433d5b:	add    BYTE PTR [rax],al
  433d5d:	add    BYTE PTR [rax],al
  433d5f:	add    BYTE PTR [rip+0x4327],cl        # 0x43808c
  433d65:	add    BYTE PTR [rax],al
  433d67:	add    BYTE PTR [rdi+riz*1],dl
  433d6a:	rex.XB add BYTE PTR [r8],al
  433d6d:	add    BYTE PTR [rax],al
  433d6f:	add    BYTE PTR [rax+0x27],ah
  433d72:	rex.X add BYTE PTR [rax],al
	...
  433d7d:	add    BYTE PTR [rax],al
  433d7f:	add    BYTE PTR [rdi+riz*1],ch
  433d82:	rex.XB add BYTE PTR [r8],al
  433d85:	add    BYTE PTR [rax],al
  433d87:	add    BYTE PTR [rax],bh
  433d89:	(bad)  
  433d8a:	rex.XB add BYTE PTR [r8],al
  433d8d:	add    BYTE PTR [rax],al
  433d8f:	add    BYTE PTR [rax+0x4227],al
	...
  433d9d:	add    BYTE PTR [rax],al
  433d9f:	add    BYTE PTR [rdx+0x27],bl
  433da2:	rex.XB add BYTE PTR [r8],al
  433da5:	add    BYTE PTR [rax],al
  433da7:	add    BYTE PTR [rax+0x27],dh
  433daa:	rex.XB add BYTE PTR [r8],al
  433dad:	add    BYTE PTR [rax],al
  433daf:	add    BYTE PTR [rax+0x4227],dh
	...
  433dbd:	add    BYTE PTR [rax],al
  433dbf:	add    BYTE PTR [rbp+0x4327],ah
  433dc5:	add    BYTE PTR [rax],al
  433dc7:	add    BYTE PTR [rax+0x4327],bh
  433dcd:	add    BYTE PTR [rax],al
  433dcf:	add    al,dl
  433dd1:	(bad)  
  433dd2:	rex.X add BYTE PTR [rax],al
	...
  433ddd:	add    BYTE PTR [rax],al
  433ddf:	add    dl,bh
  433de1:	(bad)  
  433de2:	rex.XB add BYTE PTR [r8],al
  433de5:	add    BYTE PTR [rax],al
  433de7:	add    BYTE PTR [rax],bl
  433de9:	sub    BYTE PTR [rbx+0x0],al
  433dec:	add    BYTE PTR [rax],al
  433dee:	add    BYTE PTR [rax],al
  433df0:	lock (bad) 
  433df2:	rex.X add BYTE PTR [rax],al
  433df5:	add    BYTE PTR [rax],al
  433df7:	add    BYTE PTR [rcx],al
  433df9:	add    BYTE PTR [rax],al
  433dfb:	add    BYTE PTR [rax],al
  433dfd:	add    BYTE PTR [rax],al
  433dff:	add    BYTE PTR [rax+rbp*1+0x43],al
  433e03:	add    BYTE PTR [rax],al
  433e05:	add    BYTE PTR [rax],al
  433e07:	add    BYTE PTR [rax+rbp*1+0x43],cl
  433e0b:	add    BYTE PTR [rax],al
  433e0d:	add    BYTE PTR [rax],al
  433e0f:	add    BYTE PTR [rax],dl
  433e11:	sub    BYTE PTR [rdx+0x0],al
	...
  433e20:	pop    rsp
  433e21:	sub    BYTE PTR [rbx+0x0],al
  433e24:	add    BYTE PTR [rax],al
  433e26:	add    BYTE PTR [rax],al
  433e28:	jo     0x433e52
  433e2a:	rex.XB add BYTE PTR [r8],al
  433e2d:	add    BYTE PTR [rax],al
  433e2f:	add    BYTE PTR [rax],dh
  433e31:	sub    BYTE PTR [rdx+0x0],al
	...
  433e40:	xchg   edi,eax
  433e41:	sub    BYTE PTR [rbx+0x0],al
  433e44:	add    BYTE PTR [rax],al
  433e46:	add    BYTE PTR [rax],al
  433e48:	movabs al,ds:0x5000000000004328
  433e51:	sub    BYTE PTR [rdx+0x0],al
  433e54:	add    BYTE PTR [rax],al
  433e56:	add    BYTE PTR [rax],al
  433e58:	add    DWORD PTR [rax],eax
  433e5a:	add    BYTE PTR [rax],al
  433e5c:	add    BYTE PTR [rax],al
  433e5e:	add    BYTE PTR [rax],al
  433e60:	fild   QWORD PTR [rax]
  433e62:	rex.XB add BYTE PTR [r8],al
  433e65:	add    BYTE PTR [rax],al
  433e67:	add    dh,ah
  433e69:	sub    BYTE PTR [rbx+0x0],al
  433e6c:	add    BYTE PTR [rax],al
  433e6e:	add    BYTE PTR [rax],al
  433e70:	jo     0x433e9a
  433e72:	rex.X add BYTE PTR [rax],al
  433e75:	add    BYTE PTR [rax],al
  433e77:	add    BYTE PTR [rsi+0x0],dl
  433e7a:	add    BYTE PTR [rax],al
  433e7c:	add    BYTE PTR [rax],al
  433e7e:	add    BYTE PTR [rax],al
  433e80:	jmp    FWORD PTR [rax]
  433e82:	rex.XB add BYTE PTR [r8],al
  433e85:	add    BYTE PTR [rax],al
  433e87:	add    BYTE PTR [rcx+0x430f],ah
  433e8d:	add    BYTE PTR [rax],al
  433e8f:	add    al,dh
  433e91:	sub    DWORD PTR [rdx+0x0],eax
	...
  433ea0:	or     BYTE PTR [rcx],ch
  433ea2:	rex.XB add BYTE PTR [r8],al
  433ea5:	add    BYTE PTR [rax],al
  433ea7:	add    BYTE PTR [rax],ah
  433ea9:	sub    DWORD PTR [rbx+0x0],eax
  433eac:	add    BYTE PTR [rax],al
  433eae:	add    BYTE PTR [rax],al
  433eb0:	add    BYTE PTR [rdx],ch
  433eb2:	rex.X add BYTE PTR [rax],al
	...
  433ebd:	add    BYTE PTR [rax],al
  433ebf:	add    BYTE PTR [rcx+rbp*1+0x43],ah
  433ec3:	add    BYTE PTR [rax],al
  433ec5:	add    BYTE PTR [rax],al
  433ec7:	add    BYTE PTR [rdx+0x29],bh
  433eca:	rex.XB add BYTE PTR [r8],al
  433ecd:	add    BYTE PTR [rax],al
  433ecf:	add    BYTE PTR [rax],ah
  433ed1:	sub    al,BYTE PTR [rdx+0x0]
	...
  433ee0:	xchg   ebx,eax
  433ee1:	sub    DWORD PTR [rbx+0x0],eax
  433ee4:	add    BYTE PTR [rax],al
  433ee6:	add    BYTE PTR [rax],al
  433ee8:	movabs al,ds:0x4000000000004329
  433ef1:	sub    al,BYTE PTR [rdx+0x0]
	...
  433f00:	(bad)  
  433f01:	sub    DWORD PTR [rbx+0x0],eax
  433f04:	add    BYTE PTR [rax],al
  433f06:	add    BYTE PTR [rax],al
  433f08:	call   0x438236
  433f0d:	add    BYTE PTR [rax],al
  433f0f:	add    BYTE PTR [rax+0x2a],ah
  433f12:	rex.X add BYTE PTR [rax],al
  433f15:	add    BYTE PTR [rax],al
  433f17:	add    BYTE PTR [rcx],bl
  433f19:	add    BYTE PTR [rax],al
  433f1b:	add    BYTE PTR [rax],al
  433f1d:	add    BYTE PTR [rax],al
  433f1f:	add    BYTE PTR [rdi],bl
  433f21:	sub    al,BYTE PTR [rbx+0x0]
  433f24:	add    BYTE PTR [rax],al
  433f26:	add    BYTE PTR [rax],al
  433f28:	sub    BYTE PTR [rdx],ch
  433f2a:	rex.XB add BYTE PTR [r8],al
  433f2d:	add    BYTE PTR [rax],al
  433f2f:	add    al,al
  433f31:	sub    eax,DWORD PTR [rdx+0x0]
  433f34:	add    BYTE PTR [rax],al
  433f36:	add    BYTE PTR [rax],al
  433f38:	and    BYTE PTR [rax],al
  433f3a:	add    BYTE PTR [rax],al
  433f3c:	add    BYTE PTR [rax],al
  433f3e:	add    BYTE PTR [rax],al
  433f40:	rex.WXB sub al,BYTE PTR [r11+0x0]
  433f44:	add    BYTE PTR [rax],al
  433f46:	add    BYTE PTR [rax],al
  433f48:	test   al,0x1d
  433f4a:	rex.XB add BYTE PTR [r8],al
  433f4d:	add    BYTE PTR [rax],al
  433f4f:	add    BYTE PTR [rax+0x2e],al
  433f52:	rex.X add BYTE PTR [rax],al
  433f55:	add    BYTE PTR [rax],al
  433f57:	add    BYTE PTR [rsi],cl
  433f59:	add    BYTE PTR [rax],al
  433f5b:	add    BYTE PTR [rax],al
  433f5d:	add    BYTE PTR [rax],al
  433f5f:	add    BYTE PTR [rdi+0x2a],dl
  433f62:	rex.XB add BYTE PTR [r8],al
  433f65:	add    BYTE PTR [rax],al
  433f67:	add    BYTE PTR [rbx+0x2a],bl
  433f6a:	rex.XB add BYTE PTR [r8],al
  433f6d:	add    BYTE PTR [rax],al
  433f6f:	add    BYTE PTR [rax],ah
  433f71:	(bad)  
  433f72:	rex.X add BYTE PTR [rax],al
  433f75:	add    BYTE PTR [rax],al
  433f77:	add    BYTE PTR [rcx],al
  433f79:	add    BYTE PTR [rax],al
  433f7b:	add    BYTE PTR [rax],al
  433f7d:	add    BYTE PTR [rax],al
  433f7f:	add    BYTE PTR [rdi+0x2a],dh
  433f82:	rex.XB add BYTE PTR [r8],al
  433f85:	add    BYTE PTR [rax],al
  433f87:	add    BYTE PTR [rax+0x432a],cl
  433f8d:	add    BYTE PTR [rax],al
  433f8f:	add    BYTE PTR [rax+0x2f],ah
  433f92:	rex.X add BYTE PTR [rax],al
	...
  433f9d:	add    BYTE PTR [rax],al
  433f9f:	add    al,al
  433fa1:	sub    al,BYTE PTR [rbx+0x0]
  433fa4:	add    BYTE PTR [rax],al
  433fa6:	add    BYTE PTR [rax],al
  433fa8:	shr    BYTE PTR [rdx],1
  433faa:	rex.XB add BYTE PTR [r8],al
  433fad:	add    BYTE PTR [rax],al
  433faf:	add    BYTE PTR [rax+0x422f],al
  433fb5:	add    BYTE PTR [rax],al
  433fb7:	add    BYTE PTR [rdx],al
  433fb9:	add    BYTE PTR [rax],al
  433fbb:	add    BYTE PTR [rax],al
  433fbd:	add    BYTE PTR [rax],al
  433fbf:	add    BYTE PTR [rdi],al
  433fc1:	sub    eax,DWORD PTR [rbx+0x0]
  433fc4:	add    BYTE PTR [rax],al
  433fc6:	add    BYTE PTR [rax],al
  433fc8:	sub    BYTE PTR [rbx],ch
  433fca:	rex.XB add BYTE PTR [r8],al
  433fcd:	add    BYTE PTR [rax],al
  433fcf:	add    BYTE PTR [rax+0x422f],ah
  433fd5:	add    BYTE PTR [rax],al
  433fd7:	add    BYTE PTR [rdx],al
  433fd9:	add    BYTE PTR [rax],al
  433fdb:	add    BYTE PTR [rax],al
  433fdd:	add    BYTE PTR [rax],al
  433fdf:	add    BYTE PTR [rdi+0x2b],bh
  433fe2:	rex.XB add BYTE PTR [r8],al
  433fe5:	add    BYTE PTR [rax],al
  433fe7:	add    BYTE PTR [rax+0x432b],dl
  433fed:	add    BYTE PTR [rax],al
  433fef:	add    al,al
  433ff1:	(bad)  
  433ff2:	rex.X add BYTE PTR [rax],al
  433ff5:	add    BYTE PTR [rax],al
  433ff7:	add    BYTE PTR [rax],cl
  433ff9:	add    BYTE PTR [rax],al
  433ffb:	add    BYTE PTR [rax],al
  433ffd:	add    BYTE PTR [rax],al
  433fff:	add    bl,al
  434001:	sub    eax,DWORD PTR [rbx+0x0]
  434004:	add    BYTE PTR [rax],al
  434006:	add    BYTE PTR [rax],al
  434008:	enter  0x432b,0x0
  43400c:	add    BYTE PTR [rax],al
  43400e:	add    BYTE PTR [rax],al
  434010:	add    BYTE PTR [rax],dh
  434012:	rex.X add BYTE PTR [rax],al
  434015:	add    BYTE PTR [rax],al
  434017:	add    BYTE PTR [rcx],al
  434019:	add    BYTE PTR [rax],al
  43401b:	add    BYTE PTR [rax],al
  43401d:	add    BYTE PTR [rax],al
  43401f:	add    bh,ch
  434021:	sub    eax,DWORD PTR [rbx+0x0]
  434024:	add    BYTE PTR [rax],al
  434026:	add    BYTE PTR [rax],al
  434028:	sub    bl,BYTE PTR [rax]
  43402a:	rex.XB add BYTE PTR [r8],al
  43402d:	add    BYTE PTR [rax],al
  43402f:	add    BYTE PTR [rax],ah
  434031:	xor    BYTE PTR [rdx+0x0],al
  434034:	add    BYTE PTR [rax],al
  434036:	add    BYTE PTR [rax],al
  434038:	(bad)  
  434039:	add    BYTE PTR [rax],al
  43403b:	add    BYTE PTR [rax],al
  43403d:	add    BYTE PTR [rax],al
  43403f:	add    BYTE PTR [rcx],al
  434041:	sub    al,0x43
  434043:	add    BYTE PTR [rax],al
  434045:	add    BYTE PTR [rax],al
  434047:	add    BYTE PTR [rax],ch
  434049:	sub    al,BYTE PTR [rbx+0x0]
  43404c:	add    BYTE PTR [rax],al
  43404e:	add    BYTE PTR [rax],al
  434050:	xor    BYTE PTR [rdx+0x0],al
  434054:	add    BYTE PTR [rax],al
  434056:	add    BYTE PTR [rax],al
  434058:	and    BYTE PTR [rax],al
  43405a:	add    BYTE PTR [rax],al
  43405c:	add    BYTE PTR [rax],al
  43405e:	add    BYTE PTR [rax],al
  434060:	(bad)  
  434061:	sub    al,0x43
  434063:	add    BYTE PTR [rax],al
  434065:	add    BYTE PTR [rax],al
  434067:	add    BYTE PTR [rax],dl
  434069:	sub    al,0x43
  43406b:	add    BYTE PTR [rax],al
  43406d:	add    BYTE PTR [rax],al
  43406f:	add    al,al
  434071:	xor    al,BYTE PTR [rdx+0x0]
  434074:	add    BYTE PTR [rax],al
  434076:	add    BYTE PTR [rax],al
  434078:	add    DWORD PTR [rax],eax
  43407a:	add    BYTE PTR [rax],al
  43407c:	add    BYTE PTR [rax],al
  43407e:	add    BYTE PTR [rax],al
  434080:	(bad)  
  434081:	sub    al,0x43
  434083:	add    BYTE PTR [rax],al
  434085:	add    BYTE PTR [rax],al
  434087:	add    BYTE PTR [rax],bh
  434089:	sub    al,0x43
  43408b:	add    BYTE PTR [rax],al
  43408d:	add    BYTE PTR [rax],al
  43408f:	add    al,ah
  434091:	xor    al,BYTE PTR [rdx+0x0]
	...
  4340a0:	pop    rdx
  4340a1:	sub    al,0x43
  4340a3:	add    BYTE PTR [rax],al
  4340a5:	add    BYTE PTR [rax],al
  4340a7:	add    BYTE PTR [rcx+0x2c],ah
  4340aa:	rex.XB add BYTE PTR [r8],al
  4340ad:	add    BYTE PTR [rax],al
  4340af:	add    BYTE PTR [rax],al
  4340b1:	xor    eax,DWORD PTR [rdx+0x0]
  4340b4:	add    BYTE PTR [rax],al
  4340b6:	add    BYTE PTR [rax],al
  4340b8:	(bad)  
  4340b9:	add    BYTE PTR [rax],al
  4340bb:	add    BYTE PTR [rax],al
  4340bd:	add    BYTE PTR [rax],al
  4340bf:	add    BYTE PTR [rax+0x2c],bh
  4340c2:	rex.XB add BYTE PTR [r8],al
  4340c5:	add    BYTE PTR [rax],al
  4340c7:	add    BYTE PTR [rax+0x432c],al
  4340cd:	add    BYTE PTR [rax],al
  4340cf:	add    BYTE PTR [rax+0x4233],dl
  4340d5:	add    BYTE PTR [rax],al
  4340d7:	add    BYTE PTR [rdx],al
  4340d9:	add    BYTE PTR [rax],al
  4340db:	add    BYTE PTR [rax],al
  4340dd:	add    BYTE PTR [rax],al
  4340df:	add    BYTE PTR [rdx+0x432c],dh
  4340e5:	add    BYTE PTR [rax],al
  4340e7:	add    BYTE PTR [rcx+0x432c],bh
  4340ed:	add    BYTE PTR [rax],al
  4340ef:	add    al,dl
  4340f1:	xor    eax,DWORD PTR [rdx+0x0]
  4340f4:	add    BYTE PTR [rax],al
  4340f6:	add    BYTE PTR [rax],al
  4340f8:	add    al,0x0
  4340fa:	add    BYTE PTR [rax],al
  4340fc:	add    BYTE PTR [rax],al
  4340fe:	add    BYTE PTR [rax],al
  434100:	iret   
  434101:	sub    al,0x43
  434103:	add    BYTE PTR [rax],al
  434105:	add    BYTE PTR [rax],al
  434107:	add    BYTE PTR [rax],ch
  434109:	sub    al,BYTE PTR [rbx+0x0]
  43410c:	add    BYTE PTR [rax],al
  43410e:	add    BYTE PTR [rax],al
  434110:	and    BYTE PTR [rdx+rax*2],dh
  434113:	add    BYTE PTR [rax],al
  434115:	add    BYTE PTR [rax],al
  434117:	add    BYTE PTR [rax],ah
	...
  43413d:	add    BYTE PTR [rax],al
  43413f:	add    BYTE PTR [rbx+0x6f],ah
  434142:	jne    0x4341b0
  434144:	and    BYTE PTR fs:[rsi+0x6f],ch
  434148:	je     0x43416a
  43414a:	jb     0x4341b1
  43414c:	(bad)  
  43414d:	and    BYTE PTR fs:[rsi+0x72],ah
  434151:	outs   dx,DWORD PTR ds:[rsi]
  434152:	ins    DWORD PTR es:[rdi],dx
  434153:	and    BYTE PTR [rcx+0x6e],ch
  434156:	jo     0x4341cd
  434158:	je     0x43417a
  43415a:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
  434161:	jae    0x43416d
  434163:	add    BYTE PTR [rdi+0x75],ch
  434166:	je     0x434188
  434168:	outs   dx,DWORD PTR ds:[rsi]
  434169:	data16 and BYTE PTR [rbp+0x65],ch
  43416d:	ins    DWORD PTR es:[rdi],dx
  43416e:	outs   dx,DWORD PTR ds:[rsi]
  43416f:	jb     0x4341ea
  434171:	or     al,BYTE PTR [rax]
  434173:	add    BYTE PTR [rax],al
  434175:	add    BYTE PTR [rax],al
  434177:	add    BYTE PTR [rax+0x69],ch
  43417a:	jae    0x4341f0
  43417c:	outs   dx,DWORD PTR ds:[rsi]
  43417d:	jb     0x4341f8
  43417f:	and    BYTE PTR [rcx+0x73],ch
  434182:	and    BYTE PTR [rsi+0x6f],ch
  434185:	je     0x4341a7
  434187:	jae    0x4341fe
  434189:	jo     0x4341fb
  43418b:	outs   dx,DWORD PTR ds:[rsi]
  43418c:	jb     0x434202
  43418e:	gs and BYTE PTR fs:[rdx+0x79],ah
  434193:	and    BYTE PTR [rax+rbp*2+0x69],dh
  434197:	jae    0x4341b9
  434199:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  4341a0:	(bad)  
  4341a1:	je     0x43420c
  4341a3:	outs   dx,DWORD PTR ds:[rsi]
  4341a4:	outs   dx,BYTE PTR ds:[rsi]
  4341a5:	or     al,BYTE PTR [rax]
	...
  4341af:	add    BYTE PTR [rdi],ah
	...
  4341bd:	add    BYTE PTR [rax],al
  4341bf:	add    BYTE PTR [rdx+0x62],dh
  4341c2:	add    BYTE PTR [rip+0x25203a73],ah        # 0x25637c3b
  4341c8:	jae    0x4341d4
  4341ca:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f637c43
  4341d0:	jne    0x434246
  4341d2:	and    BYTE PTR [rdi+0x66],ch
  4341d5:	and    BYTE PTR [rbp+0x65],ch
  4341d8:	ins    DWORD PTR es:[rdi],dx
  4341d9:	outs   dx,DWORD PTR ds:[rsi]
  4341da:	jb     0x434255
  4341dc:	or     al,BYTE PTR [rax]
  4341de:	and    eax,0xa73
  4341e3:	add    BYTE PTR [rax],al
  4341e5:	add    BYTE PTR [rax],al
  4341e7:	add    BYTE PTR [rbx+0x61],ah
  4341ea:	outs   dx,BYTE PTR ds:[rsi]
  4341eb:	(bad)  
  4341ec:	je     0x43420e
  4341ee:	gs jae 0x434254
  4341f1:	(bad)  
  4341f2:	jo     0x434259
  4341f4:	and    BYTE PTR [rdi+0x69],dh
  4341f7:	je     0x434261
  4341f9:	outs   dx,DWORD PTR ds:[rsi]
  4341fa:	jne    0x434270
  4341fc:	and    BYTE PTR [rcx+0x63],ah
  4341ff:	je     0x43426a
  434201:	jbe    0x434268
  434203:	and    BYTE PTR [rbx+0x6f],ah
  434206:	outs   dx,BYTE PTR ds:[rsi]
  434207:	outs   dx,BYTE PTR ds:[rsi]
  434208:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43420d:	outs   dx,BYTE PTR ds:[rsi]
  43420e:	or     al,BYTE PTR [rax]
  434210:	and    eax,0x73
  434215:	add    BYTE PTR [rax],al
  434217:	add    BYTE PTR [rdi+0x75],ch
  43421a:	je     0x43423c
  43421c:	outs   dx,DWORD PTR ds:[rsi]
  43421d:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  434222:	(bad)  
  434223:	ins    DWORD PTR es:[rdi],dx
  434224:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  43422b:	jb     0x4342a6
  43422d:	and    BYTE PTR [rcx+0x6e],ch
  434230:	and    BYTE PTR [rcx+0x79],bh
  434233:	outs   dx,BYTE PTR gs:[rsi]
  434235:	jae    0x4342ac
  434237:	jb     0x43429e
  434239:	pop    rdi
  43423a:	(bad)  
  43423b:	jne    0x4342a3
  43423d:	data16 gs jb 0x4342a0
  434241:	jae    0x4342b7
  434243:	(bad)  
  434244:	movsxd ebp,DWORD PTR [rbx+0x28]
  434247:	sub    DWORD PTR [rax],eax
  434249:	add    BYTE PTR [rax],al
  43424b:	add    BYTE PTR [rax],al
  43424d:	add    BYTE PTR [rax],al
  43424f:	add    BYTE PTR [rdi+0x75],ch
  434252:	je     0x434274
  434254:	outs   dx,DWORD PTR ds:[rsi]
  434255:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  43425a:	(bad)  
  43425b:	ins    DWORD PTR es:[rdi],dx
  43425c:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  434263:	jb     0x4342de
  434265:	and    BYTE PTR [rcx+0x6e],ch
  434268:	and    BYTE PTR [rcx+0x79],bh
  43426b:	pop    rdi
  43426c:	movsxd esi,DWORD PTR [rdx+0x65]
  43426f:	(bad)  
  434270:	je     0x4342d7
  434272:	pop    rdi
  434273:	(bad)  
  434274:	jne    0x4342dc
  434276:	data16 gs jb 0x4342a2
  43427a:	sub    DWORD PTR [rax],eax
  43427c:	add    BYTE PTR [rax],al
  43427e:	add    BYTE PTR [rax],al
  434280:	outs   dx,DWORD PTR ds:[rsi]
  434281:	jne    0x4342f7
  434283:	and    BYTE PTR [rdi+0x66],ch
  434286:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  43428a:	(bad)  
  43428b:	ins    DWORD PTR es:[rdi],dx
  43428c:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  434293:	jb     0x43430e
  434295:	and    BYTE PTR [rcx+0x6e],ch
  434298:	and    BYTE PTR [rcx+0x79],bh
  43429b:	pop    rdi
  43429c:	jae    0x434301
  43429e:	(bad)  
  43429f:	outs   dx,BYTE PTR ds:[rsi]
  4342a0:	pop    rdi
  4342a1:	(bad)  
  4342a2:	jne    0x43430a
  4342a4:	data16 gs jb 0x4342d0
  4342a8:	sub    DWORD PTR [rax],eax
  4342aa:	(bad)  
  4342ab:	sub    al,BYTE PTR [rax]
  4342ad:	sub    eax,0x217e002d
  4342b2:	rex and ebx,DWORD PTR [rsi+0x26]
  4342b6:	jl     0x434318
  4342b8:	(bad)  
  4342b9:	and    eax,0x656c6600
  4342be:	js     0x4342e0
  4342c0:	jae    0x434325
  4342c2:	(bad)  
  4342c3:	outs   dx,BYTE PTR ds:[rsi]
  4342c4:	outs   dx,BYTE PTR ds:[rsi]
  4342c5:	gs jb  0x4342e8
  4342c8:	push   0x61
  4342ca:	ins    DWORD PTR es:[rdi],dx
  4342cb:	ins    DWORD PTR es:[rdi],dx
  4342cc:	gs add BYTE PTR fs:[rax],al
  4342d0:	data16 (bad) 
  4342d2:	je     0x434335
  4342d4:	ins    BYTE PTR es:[rdi],dx
  4342d5:	and    BYTE PTR [rsi+0x6c],ah
  4342d8:	gs js  0x4342fb
  4342db:	jae    0x434340
  4342dd:	(bad)  
  4342de:	outs   dx,BYTE PTR ds:[rsi]
  4342df:	outs   dx,BYTE PTR ds:[rsi]
  4342e0:	gs jb  0x434303
  4342e3:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  4342ea:	ins    BYTE PTR es:[rdi],dx
  4342eb:	and    BYTE PTR [rbp+0x72],ah
  4342ee:	jb     0x43435f
  4342f0:	jb     0x43431f
  4342f2:	sub    eax,0x20646e65
  4342f7:	outs   dx,DWORD PTR ds:[rsi]
  4342f8:	data16 and BYTE PTR [rdx+0x75],ah
  4342fc:	data16 data16 gs jb 0x434321
  434301:	ins    DWORD PTR es:[rdi],dx
  434302:	imul   esi,DWORD PTR [rbx+0x73],0x66006465
  434309:	(bad)  
  43430a:	je     0x43436d
  43430c:	ins    BYTE PTR es:[rdi],dx
  43430d:	and    BYTE PTR [rbp+0x72],ah
  434310:	jb     0x434381
  434312:	jb     0x434334
  434314:	sub    eax,0x61637320
  434319:	outs   dx,BYTE PTR ds:[rsi]
  43431a:	outs   dx,BYTE PTR ds:[rsi]
  43431b:	gs jb  0x43433e
  43431e:	imul   ebp,DWORD PTR [rsi+0x70],0x62207475
  434325:	jne    0x43438d
  434327:	data16 gs jb 0x43434b
  43432b:	outs   dx,DWORD PTR ds:[rsi]
  43432c:	jbe    0x434393
  43432e:	jb     0x434396
  434330:	ins    BYTE PTR es:[rdi],dx
  434331:	outs   dx,DWORD PTR ds:[rsi]
  434332:	ja     0x434334
  434334:	imul   ebp,DWORD PTR [rsi+0x70],0x69207475
  43433b:	outs   dx,BYTE PTR ds:[rsi]
  43433c:	and    BYTE PTR [rsi+0x6c],ah
  43433f:	gs js  0x434362
  434342:	jae    0x4343a7
  434344:	(bad)  
  434345:	outs   dx,BYTE PTR ds:[rsi]
  434346:	outs   dx,BYTE PTR ds:[rsi]
  434347:	gs jb  0x43436a
  43434a:	data16 (bad) 
  43434c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
  434354:	add    BYTE PTR [rax],al
  434356:	add    BYTE PTR [rax],al
  434358:	outs   dx,DWORD PTR ds:[rsi]
  434359:	jne    0x4343cf
  43435b:	and    BYTE PTR [rdi+0x66],ch
  43435e:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  434362:	(bad)  
  434363:	ins    DWORD PTR es:[rdi],dx
  434364:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  43436b:	jb     0x4343e6
  43436d:	and    BYTE PTR [rcx+0x6e],ch
  434370:	and    BYTE PTR [rcx+0x79],bh
  434373:	pop    rdi
  434374:	addr32 gs je 0x4343d7
  434378:	outs   dx,BYTE PTR ds:[rsi]
  434379:	gs js  0x4343f0
  43437c:	pop    rdi
  43437d:	(bad)  
  43437e:	jne    0x4343e6
  434380:	data16 gs jb 0x4343ac
  434384:	sub    DWORD PTR [rax],eax
  434386:	add    BYTE PTR [rax],al
  434388:	data16 (bad) 
  43438a:	je     0x4343ed
  43438c:	ins    BYTE PTR es:[rdi],dx
  43438d:	and    BYTE PTR [rsi+0x6c],ah
  434390:	gs js  0x4343b3
  434393:	jae    0x4343f8
  434395:	(bad)  
  434396:	outs   dx,BYTE PTR ds:[rsi]
  434397:	outs   dx,BYTE PTR ds:[rsi]
  434398:	gs jb  0x4343bb
  43439b:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  4343a2:	ins    BYTE PTR es:[rdi],dx
  4343a3:	and    BYTE PTR [rbp+0x72],ah
  4343a6:	jb     0x434417
  4343a8:	jb     0x4343d7
  4343aa:	sub    eax,0x61206f6e
  4343af:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4343b3:	outs   dx,BYTE PTR ds:[rsi]
  4343b4:	and    BYTE PTR [rsi+0x6f],ah
  4343b7:	jne    0x434427
  4343b9:	add    BYTE PTR fs:[rax],al
  4343bc:	add    BYTE PTR [rax],al
  4343be:	add    BYTE PTR [rax],al
  4343c0:	jae    0x43442d
  4343c2:	imul   esi,DWORD PTR [rax+0x70],0x20676e69
  4343c9:	jb     0x434430
  4343cb:	movsxd esi,DWORD PTR [rbp+0x72]
  4343ce:	jae    0x434439
  4343d0:	jbe    0x434437
  4343d2:	and    BYTE PTR [rbp+0x78],ah
  4343d5:	jo     0x434438
  4343d7:	outs   dx,BYTE PTR ds:[rsi]
  4343d8:	jae    0x434443
  4343da:	outs   dx,DWORD PTR ds:[rsi]
  4343db:	outs   dx,BYTE PTR ds:[rsi]
  4343dc:	and    BYTE PTR [rdi+0x66],ch
  4343df:	and    BYTE PTR [rsi+0x61],dh
  4343e2:	jb     0x43444d
  4343e4:	(bad)  
  4343e5:	(bad)  
  4343e6:	ins    BYTE PTR es:[rdi],dx
  4343e7:	and    BYTE PTR gs:[rdx],ah
  4343ea:	and    eax,0xa2273
  4343ef:	add    bh,ah
  4343f1:	outs   dx,DWORD PTR ds:[rsi]
  4343f2:	std    
  4343f3:	jmp    rsi
  4343f5:	push   rbp
  4343f6:	std    
  4343f7:	jmp    FWORD PTR [rbx]
  4343f9:	push   rsi
  4343fa:	std    
  4343fb:	call   FWORD PTR [rcx-0x50002aa]
  434401:	push   rsi
  434402:	std    
  434403:	(bad)  
  434404:	cmp    edx,DWORD PTR [rdi-0x3]
  434407:	jmp    QWORD PTR [rbp+0x57]
  43440a:	std    
  43440b:	dec    DWORD PTR [rdi-0x460002a9]
  434411:	push   rdi
  434412:	std    
  434413:	(bad)  
  434414:	in     eax,dx
  434415:	push   rdi
  434416:	std    
  434417:	(bad)  
  434418:	in     eax,dx
  434419:	push   rdi
  43441a:	std    
  43441b:	dec    DWORD PTR [rbp+0x58]
  43441e:	std    
  43441f:	dec    DWORD PTR [rbp+0x58]
  434422:	std    
  434423:	push   QWORD PTR [rdi+0x58]
  434426:	std    
  434427:	push   QWORD PTR [rdi+0x58]
  43442a:	std    
  43442b:	jmp    QWORD PTR [rcx-0x2a0002a8]
  434431:	pop    rax
  434432:	std    
  434433:	call   rbp
  434435:	pop    rax
  434436:	std    
  434437:	push   QWORD PTR [rip+0xffffffff8bfffd59]        # 0xffffffff8c434196
  43443d:	pop    rcx
  43443e:	std    
  43443f:	dec    edx
  434441:	pop    rcx
  434442:	std    
  434443:	(bad)  
  434444:	(bad)  
  434445:	pop    rcx
  434446:	std    
  434447:	push   QWORD PTR [rdx]
  434449:	pop    rdx
  43444a:	std    
  43444b:	push   QWORD PTR [rdx]
  43444d:	pop    rdx
  43444e:	std    
  43444f:	call   QWORD PTR [rdx-0x6d0002a6]
  434455:	pop    rdx
  434456:	std    
  434457:	push   rdx
  434459:	pop    rdx
  43445a:	std    
  43445b:	call   FWORD PTR [rbx+rbx*2]
  43445e:	std    
  43445f:	call   FWORD PTR [rbx+rbx*2]
  434462:	std    
  434463:	(bad)  
  434464:	js     0x4344c1
  434466:	std    
  434467:	jmp    FWORD PTR [rbx+rbx*2+0x5bd6fffd]
  43446e:	std    
  43446f:	inc    DWORD PTR [rax]
  434471:	pop    rsp
  434472:	std    
  434473:	jmp    FWORD PTR [rdx]
  434475:	pop    rsp
  434476:	std    
  434477:	call   QWORD PTR [rsp+rbx*2-0x3]
  43447b:	(bad)  
  43447c:	jle    0x4344da
  43447e:	std    
  43447f:	jmp    FWORD PTR [rax-0x2d0002a4]
  434485:	pop    rsp
  434486:	std    
  434487:	(bad)  
  434488:	cld    
  434489:	pop    rsp
  43448a:	std    
  43448b:	jmp    QWORD PTR [rsi]
  43448d:	pop    rbp
  43448e:	std    
  43448f:	call   QWORD PTR [rax+0x5d]
  434492:	std    
  434493:	call   FWORD PTR [rax-0x110002a3]
  434499:	pop    rbp
  43449a:	std    
  43449b:	jmp    FWORD PTR [rax+0x5e]
  43449e:	std    
  43449f:	call   QWORD PTR [rdx-0x430002a2]
  4344a5:	pop    rsi
  4344a6:	std    
  4344a7:	jmp    rsi
  4344a9:	pop    rsi
  4344aa:	std    
  4344ab:	call   FWORD PTR [rdx]
  4344ad:	pop    rdi
  4344ae:	std    
  4344af:	dec    DWORD PTR [rsi+0x5f]
  4344b2:	std    
  4344b3:	inc    DWORD PTR [rdx-0x1d0002a1]
  4344b9:	pop    rdi
  4344ba:	std    
  4344bb:	dec    DWORD PTR [rax+riz*2]
  4344be:	std    
  4344bf:	dec    DWORD PTR [rax+riz*2]
  4344c2:	std    
  4344c3:	jmp    FWORD PTR [rax+0x60]
  4344c6:	std    
  4344c7:	call   FWORD PTR [rax+riz*2+0x60c6fffd]
  4344ce:	std    
  4344cf:	push   rax
  4344d1:	(bad)  
  4344d2:	std    
  4344d3:	inc    DWORD PTR [rsi+0x61]
  4344d6:	std    
  4344d7:	push   QWORD PTR [rax+0x61]
  4344da:	std    
  4344db:	call   FWORD PTR [rdx-0x3b00029f]
  4344e1:	(bad)  
  4344e2:	std    
  4344e3:	(bad)  
  4344e4:	stc    
  4344e5:	(bad)  
  4344e6:	std    
  4344e7:	push   QWORD PTR [rsi]
  4344e9:	(bad)  
  4344ea:	std    
  4344eb:	push   QWORD PTR [rdx+0x62]
  4344ee:	std    
  4344ef:	jmp    QWORD PTR [rcx-0x5400029e]
  4344f5:	(bad)  
  4344f6:	std    
  4344f7:	inc    DWORD PTR [rdi-0x5400029d]
  4344fd:	movsxd edi,ebp
  4344ff:	call   rdx
  434501:	movsxd edi,ebp
  434503:	jmp    FWORD PTR [rax]
  434505:	fs std 
  434507:	(bad)  
  434508:	jle    0x43456e
  43450a:	std    
  43450b:	jmp    FWORD PTR [rax-0x2d00029c]
  434511:	imul   edi,ebp,0xfd69fcff
  434517:	jmp    QWORD PTR [rsi]
  434519:	push   0xfffffffffffffffd
  43451b:	call   QWORD PTR [rax+0x6a]
  43451e:	std    
  43451f:	jmp    FWORD PTR [rax-0x2d000296]
  434525:	push   0xfffffffffffffffd
  434527:	jmp    FWORD PTR [rdx]
  434529:	imul   edi,ebp,0xffffffff
  43452c:	(bad)  
  43452d:	imul   edi,ebp,0xffffffff
  434530:	sub    ch,BYTE PTR [rbp-0x3]
  434533:	call   QWORD PTR [rbp-0x1c0002ab]
  434539:	ins    BYTE PTR es:[rdi],dx
  43453a:	std    
  43453b:	dec    DWORD PTR [rip+0xffffffffacfffd6d]        # 0xffffffffad4342ae
  434541:	imul   edi,ebp,0xffffffff
  434544:	cld    
  434545:	imul   edi,ebp,0xffffffff
  434548:	xchg   ebp,eax
  434549:	push   rbp
  43454a:	std    
  43454b:	jmp    FWORD PTR [rdx-0x3d000294]
  434551:	gs std 
  434553:	dec    DWORD PTR [rsi+riz*2]
  434556:	std    
  434557:	call   QWORD PTR [rdx+0x66]
  43455a:	std    
  43455b:	jmp    rax
  43455d:	data16 std 
  43455f:	jmp    QWORD PTR [rip+0x6dfffd67]        # 0x6e4342cc
  434565:	addr32 std 
  434567:	dec    edx
  434569:	addr32 std 
  43456b:	jmp    QWORD PTR [rdi]
  43456d:	push   0x6858fffd
  434572:	std    
  434573:	(bad)  
  434574:	jge    0x4345de
  434576:	std    
  434577:	jmp    FWORD PTR [rbx-0x26000298]
  43457d:	push   0x6907fffd
  434582:	std    
  434583:	push   QWORD PTR [rip+0x63fffd69]        # 0x644342f2
  434589:	imul   edi,ebp,0xfd6991ff
  43458f:	call   QWORD PTR [rbp+rbp*2-0x3]
  434593:	call   QWORD PTR [rbp-0x3b000293]
  434599:	ins    DWORD PTR es:[rdi],dx
  43459a:	std    
  43459b:	(bad)  
  43459c:	out    dx,al
  43459d:	ins    DWORD PTR es:[rdi],dx
  43459e:	std    
  43459f:	jmp    QWORD PTR [rcx]
  4345a1:	outs   dx,BYTE PTR ds:[rsi]
  4345a2:	std    
  4345a3:	dec    DWORD PTR [rbx+0x6e]
  4345a6:	std    
  4345a7:	(bad)  
  4345a8:	jge    0x434618
  4345aa:	std    
  4345ab:	jmp    QWORD PTR [rdi-0x29000292]
  4345b1:	outs   dx,BYTE PTR ds:[rsi]
  4345b2:	std    
  4345b3:	inc    esp
  4345b5:	push   rbp
  4345b6:	std    
  4345b7:	call   QWORD PTR [rbp-0x250002ab]
  4345bd:	push   rbp
  4345be:	std    
  4345bf:	inc    DWORD PTR [rax]
  4345c1:	outs   dx,DWORD PTR ds:[rsi]
  4345c2:	std    
  4345c3:	(bad)  
  4345c4:	(bad)  
  4345c5:	ins    BYTE PTR es:[rdi],dx
  4345c6:	std    
  4345c7:	(bad)  
  4345c8:	(bad)  
  4345c9:	ins    BYTE PTR es:[rdi],dx
  4345ca:	std    
  4345cb:	(bad)  
  4345cc:	(bad)  
  4345cd:	ins    BYTE PTR es:[rdi],dx
  4345ce:	std    
  4345cf:	(bad)  
  4345d0:	(bad)  
  4345d1:	ins    BYTE PTR es:[rdi],dx
  4345d2:	std    
  4345d3:	(bad)  
  4345d4:	(bad)  
  4345d5:	ins    BYTE PTR es:[rdi],dx
  4345d6:	std    
  4345d7:	(bad)  
  4345d8:	(bad)  
  4345d9:	ins    BYTE PTR es:[rdi],dx
  4345da:	std    
  4345db:	(bad)  
  4345dc:	(bad)  
  4345dd:	ins    BYTE PTR es:[rdi],dx
  4345de:	std    
  4345df:	(bad)  
  4345e0:	(bad)  
  4345e1:	ins    BYTE PTR es:[rdi],dx
  4345e2:	std    
  4345e3:	(bad)  
  4345e4:	(bad)  
  4345e5:	ins    BYTE PTR es:[rdi],dx
  4345e6:	std    
  4345e7:	(bad)  
  4345e8:	(bad)  
  4345e9:	ins    BYTE PTR es:[rdi],dx
  4345ea:	std    
  4345eb:	(bad)  
  4345ec:	(bad)  
  4345ed:	ins    BYTE PTR es:[rdi],dx
  4345ee:	std    
  4345ef:	(bad)  
  4345f0:	(bad)  
  4345f1:	ins    BYTE PTR es:[rdi],dx
  4345f2:	std    
  4345f3:	(bad)  
  4345f4:	(bad)  
  4345f5:	ins    BYTE PTR es:[rdi],dx
  4345f6:	std    
  4345f7:	(bad)  
  4345f8:	(bad)  
  4345f9:	ins    BYTE PTR es:[rdi],dx
  4345fa:	std    
  4345fb:	(bad)  
  4345fc:	(bad)  
  4345fd:	ins    BYTE PTR es:[rdi],dx
  4345fe:	std    
  4345ff:	(bad)  
  434600:	(bad)  
  434601:	ins    BYTE PTR es:[rdi],dx
  434602:	std    
  434603:	(bad)  
  434604:	(bad)  
  434605:	ins    BYTE PTR es:[rdi],dx
  434606:	std    
  434607:	(bad)  
  434608:	(bad)  
  434609:	ins    BYTE PTR es:[rdi],dx
  43460a:	std    
  43460b:	(bad)  
  43460c:	(bad)  
  43460d:	ins    BYTE PTR es:[rdi],dx
  43460e:	std    
  43460f:	(bad)  
  434610:	(bad)  
  434611:	ins    BYTE PTR es:[rdi],dx
  434612:	std    
  434613:	inc    DWORD PTR [rax]
  434615:	add    BYTE PTR [rax],al
  434617:	add    BYTE PTR [rdi+0x75],ch
  43461a:	je     0x43463c
  43461c:	outs   dx,DWORD PTR ds:[rsi]
  43461d:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  434622:	(bad)  
  434623:	ins    DWORD PTR es:[rdi],dx
  434624:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  43462b:	jb     0x4346a6
  43462d:	and    BYTE PTR [rcx+0x6e],ch
  434630:	and    BYTE PTR [rcx+0x79],bh
  434633:	pop    rdi
  434634:	jae    0x434699
  434636:	(bad)  
  434637:	outs   dx,BYTE PTR ds:[rsi]
  434638:	pop    rdi
  434639:	(bad)  
  43463a:	jns    0x4346b0
  43463c:	gs jae 0x434667
  43463f:	sub    DWORD PTR [rax],eax
  434641:	(bad)
  434646:	jne    0x4346ae
  434648:	data16 gs jb 0x43466c
  43464c:	imul   ebp,DWORD PTR [rsi+0x20],0x735f7979
  434653:	movsxd esp,DWORD PTR [rcx+0x6e]
  434656:	pop    rdi
  434657:	(bad)  
  434658:	jns    0x4346ce
  43465a:	gs jae 0x434685
  43465d:	sub    DWORD PTR [rax],eax
  43465f:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  434666:	and    BYTE PTR [rcx+0x59],bl
  434669:	pop    rdi
  43466a:	push   rbx
  43466b:	push   rsp
  43466c:	push   r10
  43466e:	push   rsp
  43466f:	or     al,BYTE PTR [rax]
  434671:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  434678:	and    BYTE PTR [rcx+0x79],bh
  43467b:	ins    BYTE PTR es:[rdi],dx
  43467c:	gs js  0x43469f
  43467f:	jb     0x4346e6
  434681:	jae    0x4346f8
  434683:	ins    BYTE PTR es:[rdi],dx
  434684:	je     0x434690
  434686:	add    BYTE PTR [rax],al
  434688:	push   0xbfffd79
  43468d:	jns    0x43468c
  43468f:	dec    DWORD PTR [rax+0x79]
  434692:	std    
  434693:	(bad)  
  434694:	cmp    BYTE PTR [rcx-0x3],bh
  434697:	dec    DWORD PTR [rbx]
  434699:	jns    0x434698
  43469b:	dec    DWORD PTR [rbx]
  43469d:	jns    0x43469c
  43469f:	dec    DWORD PTR [rbx]
  4346a1:	jns    0x4346a0
  4346a3:	call   FWORD PTR [rax+0x79]
  4346a6:	std    
  4346a7:	(bad)  
  4346a8:	cmp    BYTE PTR [rcx-0x3],bh
  4346ab:	jmp    FWORD PTR [rax+0x79]
  4346ae:	std    
  4346af:	dec    DWORD PTR [rbx]
  4346b1:	jns    0x4346b0
  4346b3:	jmp    FWORD PTR [rax+0x79]
  4346b6:	std    
  4346b7:	inc    DWORD PTR [rax]
  4346b9:	pop    rsp
  4346ba:	jno    0x4346bc
  4346bc:	outs   dx,DWORD PTR ds:[rsi]
  4346bd:	jne    0x434733
  4346bf:	and    BYTE PTR [rdi+0x66],ch
  4346c2:	and    BYTE PTR [rbp+0x65],ch
  4346c5:	ins    DWORD PTR es:[rdi],dx
  4346c6:	outs   dx,DWORD PTR ds:[rsi]
  4346c7:	jb     0x434742
  4346c9:	or     al,BYTE PTR [rax]
  4346cb:	rex.WB
  4346cc:	rex.RXB
  4346cd:	rex.WRX
  4346ce:	rex.WRXB push r10
  4346d0:	rex.RB
  4346d1:	rex.RB
  4346d2:	rex.WRXB
  4346d3:	rex.RX add BYTE PTR [rbp+0x73],r10b
  4346d7:	and    BYTE PTR gs:[rdx],ah
  4346da:	pop    rsp
  4346db:	jno    0x4346ff
  4346dd:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4346e1:	ins    BYTE PTR es:[rdi],dx
  4346e2:	gs (bad) 
  4346e4:	jbe    0x43474b
  4346e6:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d755f
  4346ec:	out    dx,eax
  4346ed:	mov    ebx,0x656800bf
  4346f2:	ins    BYTE PTR es:[rdi],dx
  4346f3:	jo     0x4346f5
  4346f5:	add    BYTE PTR [rax],al
  4346f7:	add    BYTE PTR [rcx+0x6f],bl
  4346fa:	jne    0x43471c
  4346fc:	(bad)  
  4346fd:	jb     0x434764
  4346ff:	and    BYTE PTR [rbp+0x73],dh
  434702:	imul   ebp,DWORD PTR [rsi+0x67],0x71737020
  434709:	ins    BYTE PTR es:[rdi],dx
  43470a:	sub    al,0x20
  43470c:	je     0x434776
  43470e:	and    BYTE PTR gs:[rbx+0x6f],ah
  434712:	ins    DWORD PTR es:[rdi],dx
  434713:	ins    DWORD PTR es:[rdi],dx
  434714:	(bad)  
  434715:	outs   dx,BYTE PTR ds:[rsi]
  434716:	fs sub eax,0x656e696c
  43471c:	and    BYTE PTR [rcx+0x6e],ch
  43471f:	je     0x434786
  434721:	jb     0x434789
  434723:	(bad)  
  434724:	movsxd esp,DWORD PTR [rbp+0x20]
  434727:	je     0x434798
  434729:	and    BYTE PTR [rax+0x6f],dl
  43472c:	jae    0x4347a2
  43472e:	addr32 jb 0x434796
  434731:	push   rbx
  434732:	push   rcx
  434733:	rex.WR
  434734:	add    BYTE PTR cs:[rax],al
  434737:	add    BYTE PTR [rcx+rdi*2+0x70],dl
  43473b:	cmp    ah,BYTE PTR gs:[rax]
  43473e:	and    BYTE PTR [rbx+riz*2+0x6f],bl
  434742:	jo     0x4347bd
  434744:	jb     0x4347af
  434746:	addr32 push 0x6f662074
  43474c:	jb     0x43476e
  43474e:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  434756:	je     0x4347c1
  434758:	outs   dx,DWORD PTR ds:[rsi]
  434759:	outs   dx,BYTE PTR ds:[rsi]
  43475a:	and    BYTE PTR [rbp+riz*2+0x72],dh
  43475e:	ins    DWORD PTR es:[rdi],dx
  43475f:	jae    0x43476b
  434761:	and    BYTE PTR [rax],ah
  434763:	and    BYTE PTR [rax],ah
  434765:	and    BYTE PTR [rax],ah
  434767:	and    BYTE PTR [rax+rbp*2+0x20],bl
  43476b:	outs   dx,WORD PTR ds:[rsi]
  43476d:	jb     0x43478f
  43476f:	push   0x20706c65
  434774:	ja     0x4347df
  434776:	je     0x4347e0
  434778:	and    BYTE PTR [rbx+0x51],dl
  43477b:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  43477f:	ins    DWORD PTR es:[rdi],dx
  434780:	ins    DWORD PTR es:[rdi],dx
  434781:	(bad)  
  434782:	outs   dx,BYTE PTR ds:[rsi]
  434783:	fs jae 0x434790
  434786:	and    BYTE PTR [rax],ah
  434788:	and    BYTE PTR [rax],ah
  43478a:	and    BYTE PTR [rax],ah
  43478c:	and    BYTE PTR [rdi+rdi*1+0x20],bl
  434790:	outs   dx,WORD PTR ds:[rsi]
  434792:	jb     0x4347b4
  434794:	push   0x20706c65
  434799:	ja     0x434804
  43479b:	je     0x434805
  43479d:	and    BYTE PTR [rax+0x73],dh
  4347a0:	jno    0x43480e
  4347a2:	and    BYTE PTR [rbx+0x6f],ah
  4347a5:	ins    DWORD PTR es:[rdi],dx
  4347a6:	ins    DWORD PTR es:[rdi],dx
  4347a7:	(bad)  
  4347a8:	outs   dx,BYTE PTR ds:[rsi]
  4347a9:	fs jae 0x4347b6
  4347ac:	and    BYTE PTR [rax],ah
  4347ae:	and    BYTE PTR [rax],ah
  4347b0:	and    BYTE PTR [rax],ah
  4347b2:	and    BYTE PTR [rdi+riz*2+0x20],bl
  4347b6:	outs   dx,DWORD PTR ds:[rsi]
  4347b7:	jb     0x4347d9
  4347b9:	je     0x434820
  4347bb:	jb     0x43482a
  4347bd:	imul   ebp,DWORD PTR [rsi+0x61],0x77206574
  4347c4:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x696d6573
  4347cc:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4347cf:	outs   dx,DWORD PTR ds:[rsi]
  4347d0:	outs   dx,BYTE PTR ds:[rsi]
  4347d1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4347d5:	gs js  0x43483d
  4347d8:	movsxd esi,DWORD PTR [rbp+0x74]
  4347db:	and    BYTE PTR gs:[rcx+0x75],dh
  4347df:	gs jb  0x43485b
  4347e2:	or     ah,BYTE PTR [rax]
  4347e4:	and    BYTE PTR [rax],ah
  4347e6:	and    BYTE PTR [rax],ah
  4347e8:	and    BYTE PTR [rax],ah
  4347ea:	pop    rsp
  4347eb:	jno    0x43480d
  4347ed:	je     0x43485e
  4347ef:	and    BYTE PTR [rcx+0x75],dh
  4347f2:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x65746e75
  4347fa:	jb     0x434869
  4347fc:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  434803:	jno    0x43487a
  434805:	outs   dx,DWORD PTR ds:[rsi]
  434806:	je     0x43486d
  434808:	and    BYTE PTR fs:[rbx+0x74],dh
  43480c:	jb     0x434877
  43480e:	outs   dx,BYTE PTR ds:[rsi]
  43480f:	or     al,BYTE PTR [eax]
  434812:	add    BYTE PTR [rax],al
  434814:	test   bpl,dil
  434817:	(bad)  
  434818:	mov    esp,0x7dfffd83
  43481d:	test   ch,bh
  43481f:	(bad)  
  434820:	jge    0x4347a6
  434822:	std    
  434823:	(bad)  
  434824:	jge    0x4347aa
  434826:	std    
  434827:	inc    DWORD PTR [rax-0x7c]
  43482a:	std    
  43482b:	inc    DWORD PTR [rax]
	...
  434841:	add    BYTE PTR [rax],al
  434843:	add    BYTE PTR [rcx],al
  434845:	add    BYTE PTR [rax],al
  434847:	add    BYTE PTR [rcx],al
  434849:	add    BYTE PTR [rax],al
  43484b:	add    BYTE PTR [rcx],al
  43484d:	add    BYTE PTR [rax],al
  43484f:	add    BYTE PTR [rcx],al
  434851:	add    BYTE PTR [rax],al
  434853:	add    BYTE PTR [rcx],al
  434855:	add    BYTE PTR [rax],al
  434857:	add    BYTE PTR [rcx],al
  434859:	add    BYTE PTR [rax],al
  43485b:	add    BYTE PTR [rcx],al
  43485d:	add    BYTE PTR [rax],al
  43485f:	add    BYTE PTR [rcx],al
  434861:	add    BYTE PTR [rax],al
  434863:	add    BYTE PTR [rdx],al
  434865:	add    BYTE PTR [rax],al
  434867:	add    BYTE PTR [rbx],al
  434869:	add    BYTE PTR [rax],al
  43486b:	add    BYTE PTR [rcx],al
  43486d:	add    BYTE PTR [rax],al
  43486f:	add    BYTE PTR [rdx],al
  434871:	add    BYTE PTR [rax],al
  434873:	add    BYTE PTR [rax+rax*1],al
  434876:	add    BYTE PTR [rax],al
  434878:	add    DWORD PTR [rax],eax
  43487a:	add    BYTE PTR [rax],al
  43487c:	add    DWORD PTR [rax],eax
  43487e:	add    BYTE PTR [rax],al
  434880:	add    DWORD PTR [rax],eax
  434882:	add    BYTE PTR [rax],al
  434884:	add    DWORD PTR [rax],eax
  434886:	add    BYTE PTR [rax],al
  434888:	add    DWORD PTR [rax],eax
  43488a:	add    BYTE PTR [rax],al
  43488c:	add    DWORD PTR [rax],eax
  43488e:	add    BYTE PTR [rax],al
  434890:	add    DWORD PTR [rax],eax
  434892:	add    BYTE PTR [rax],al
  434894:	add    DWORD PTR [rax],eax
  434896:	add    BYTE PTR [rax],al
  434898:	add    DWORD PTR [rax],eax
  43489a:	add    BYTE PTR [rax],al
  43489c:	add    DWORD PTR [rax],eax
  43489e:	add    BYTE PTR [rax],al
  4348a0:	add    DWORD PTR [rax],eax
  4348a2:	add    BYTE PTR [rax],al
  4348a4:	add    DWORD PTR [rax],eax
  4348a6:	add    BYTE PTR [rax],al
  4348a8:	add    DWORD PTR [rax],eax
  4348aa:	add    BYTE PTR [rax],al
  4348ac:	add    DWORD PTR [rax],eax
  4348ae:	add    BYTE PTR [rax],al
  4348b0:	add    DWORD PTR [rax],eax
  4348b2:	add    BYTE PTR [rax],al
  4348b4:	add    DWORD PTR [rax],eax
  4348b6:	add    BYTE PTR [rax],al
  4348b8:	add    DWORD PTR [rax],eax
  4348ba:	add    BYTE PTR [rax],al
  4348bc:	add    DWORD PTR [rax],eax
  4348be:	add    BYTE PTR [rax],al
  4348c0:	add    al,BYTE PTR [rax]
  4348c2:	add    BYTE PTR [rax],al
  4348c4:	add    eax,0x6000000
  4348c9:	add    BYTE PTR [rax],al
  4348cb:	add    BYTE PTR [rip+0x7000000],al        # 0x74348d1
  4348d1:	add    BYTE PTR [rax],al
  4348d3:	add    BYTE PTR [rax],cl
  4348d5:	add    BYTE PTR [rax],al
  4348d7:	add    BYTE PTR [rcx],cl
  4348d9:	add    BYTE PTR [rax],al
  4348db:	add    BYTE PTR [rdx],cl
  4348dd:	add    BYTE PTR [rax],al
  4348df:	add    BYTE PTR [rbx],cl
  4348e1:	add    BYTE PTR [rax],al
  4348e3:	add    BYTE PTR [rax+rax*1],cl
  4348e6:	add    BYTE PTR [rax],al
  4348e8:	or     eax,0xe000000
  4348ed:	add    BYTE PTR [rax],al
  4348ef:	add    BYTE PTR [rdi],cl
  4348f1:	add    BYTE PTR [rax],al
  4348f3:	add    BYTE PTR [rax],dl
  4348f5:	add    BYTE PTR [rax],al
  4348f7:	add    BYTE PTR [rcx],dl
  4348f9:	add    BYTE PTR [rax],al
  4348fb:	add    BYTE PTR [rdx],dl
  4348fd:	add    BYTE PTR [rax],al
  4348ff:	add    BYTE PTR [rbx],dl
  434901:	add    BYTE PTR [rax],al
  434903:	add    BYTE PTR [rbx],dl
  434905:	add    BYTE PTR [rax],al
  434907:	add    BYTE PTR [rbx],dl
  434909:	add    BYTE PTR [rax],al
  43490b:	add    BYTE PTR [rbx],dl
  43490d:	add    BYTE PTR [rax],al
  43490f:	add    BYTE PTR [rbx],dl
  434911:	add    BYTE PTR [rax],al
  434913:	add    BYTE PTR [rbx],dl
  434915:	add    BYTE PTR [rax],al
  434917:	add    BYTE PTR [rbx],dl
  434919:	add    BYTE PTR [rax],al
  43491b:	add    BYTE PTR [rbx],dl
  43491d:	add    BYTE PTR [rax],al
  43491f:	add    BYTE PTR [rax+rax*1],dl
  434922:	add    BYTE PTR [rax],al
  434924:	adc    al,0x0
  434926:	add    BYTE PTR [rax],al
  434928:	adc    eax,0x16000000
  43492d:	add    BYTE PTR [rax],al
  43492f:	add    BYTE PTR [rax],cl
  434931:	add    BYTE PTR [rax],al
  434933:	add    BYTE PTR [rdi],dl
  434935:	add    BYTE PTR [rax],al
  434937:	add    BYTE PTR [rax],cl
  434939:	add    BYTE PTR [rax],al
  43493b:	add    BYTE PTR [rip+0x5000000],al        # 0x5434941
  434941:	add    BYTE PTR [rax],al
  434943:	add    BYTE PTR [rax],bl
  434945:	add    BYTE PTR [rax],al
  434947:	add    BYTE PTR [rcx],bl
  434949:	add    BYTE PTR [rax],al
  43494b:	add    BYTE PTR [rdx],bl
  43494d:	add    BYTE PTR [rax],al
  43494f:	add    BYTE PTR [rbx],bl
  434951:	add    BYTE PTR [rax],al
  434953:	add    BYTE PTR [rax+rax*1],bl
  434956:	add    BYTE PTR [rax],al
  434958:	sbb    eax,DWORD PTR [rax]
  43495a:	add    BYTE PTR [rax],al
  43495c:	sbb    eax,0x1d000000
  434961:	add    BYTE PTR [rax],al
  434963:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434969
  434969:	add    BYTE PTR [rax],al
  43496b:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434971
  434971:	add    BYTE PTR [rax],al
  434973:	add    BYTE PTR [rip+0x1e000000],bl        # 0x1e434979
  434979:	add    BYTE PTR [rax],al
  43497b:	add    BYTE PTR [rip+0x1f000000],bl        # 0x1f434981
  434981:	add    BYTE PTR [rax],al
  434983:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434989
  434989:	add    BYTE PTR [rax],al
  43498b:	add    BYTE PTR [rax],ah
  43498d:	add    BYTE PTR [rax],al
  43498f:	add    BYTE PTR [rip+0x21000000],bl        # 0x21434995
  434995:	add    BYTE PTR [rax],al
  434997:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d43499d
  43499d:	add    BYTE PTR [rax],al
  43499f:	add    BYTE PTR [rdx],ah
  4349a1:	add    BYTE PTR [rax],al
  4349a3:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d4349a9
  4349a9:	add    BYTE PTR [rax],al
  4349ab:	add    BYTE PTR [rdi],cl
  4349ad:	add    BYTE PTR [rax],al
  4349af:	add    BYTE PTR [rbx],ah
  4349b1:	add    BYTE PTR [rax],al
  4349b3:	add    BYTE PTR [rdi],cl
  4349b5:	add    BYTE PTR [rax],al
  4349b7:	add    BYTE PTR [rax],cl
  4349b9:	add    BYTE PTR [rax],al
  4349bb:	add    BYTE PTR [rip+0x24000000],bl        # 0x244349c1
  4349c1:	add    BYTE PTR [rax],al
  4349c3:	add    BYTE PTR [rax],bl
  4349c5:	add    BYTE PTR [rax],al
  4349c7:	add    BYTE PTR [rip+0x1a000000],ah        # 0x1a4349cd
  4349cd:	add    BYTE PTR [rax],al
  4349cf:	add    BYTE PTR [rbx],bl
  4349d1:	add    BYTE PTR [rax],al
  4349d3:	add    BYTE PTR [rax+rax*1],bl
  4349d6:	add    BYTE PTR [rax],al
  4349d8:	add    BYTE PTR es:[rax],al
  4349db:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d4349e1
  4349e1:	add    BYTE PTR [rax],al
  4349e3:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d4349e9
  4349e9:	add    BYTE PTR [rax],al
  4349eb:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d4349f1
  4349f1:	add    BYTE PTR [rax],al
  4349f3:	add    BYTE PTR [rip+0x27000000],bl        # 0x274349f9
  4349f9:	add    BYTE PTR [rax],al
  4349fb:	add    BYTE PTR [rip+0x1f000000],bl        # 0x1f434a01
  434a01:	add    BYTE PTR [rax],al
  434a03:	add    BYTE PTR [rip+0x28000000],bl        # 0x28434a09
  434a09:	add    BYTE PTR [rax],al
  434a0b:	add    BYTE PTR [rax],ah
  434a0d:	add    BYTE PTR [rax],al
  434a0f:	add    BYTE PTR [rcx],ch
  434a11:	add    BYTE PTR [rax],al
  434a13:	add    BYTE PTR [rdx],ch
  434a15:	add    BYTE PTR [rax],al
  434a17:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a1d
  434a1d:	add    BYTE PTR [rax],al
  434a1f:	add    BYTE PTR [rbx],ch
  434a21:	add    BYTE PTR [rax],al
  434a23:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a29
  434a29:	add    BYTE PTR [rax],al
  434a2b:	add    BYTE PTR [rcx],al
  434a2d:	add    BYTE PTR [rax],al
  434a2f:	add    BYTE PTR [rax+rax*1],ch
  434a32:	add    BYTE PTR [rax],al
  434a34:	add    DWORD PTR [rax],eax
  434a36:	add    BYTE PTR [rax],al
  434a38:	add    eax,0x1000000
  434a3d:	add    BYTE PTR [rax],al
  434a3f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a45
  434a45:	add    BYTE PTR [rax],al
  434a47:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a4d
  434a4d:	add    BYTE PTR [rax],al
  434a4f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a55
  434a55:	add    BYTE PTR [rax],al
  434a57:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a5d
  434a5d:	add    BYTE PTR [rax],al
  434a5f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a65
  434a65:	add    BYTE PTR [rax],al
  434a67:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a6d
  434a6d:	add    BYTE PTR [rax],al
  434a6f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a75
  434a75:	add    BYTE PTR [rax],al
  434a77:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a7d
  434a7d:	add    BYTE PTR [rax],al
  434a7f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a85
  434a85:	add    BYTE PTR [rax],al
  434a87:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a8d
  434a8d:	add    BYTE PTR [rax],al
  434a8f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a95
  434a95:	add    BYTE PTR [rax],al
  434a97:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434a9d
  434a9d:	add    BYTE PTR [rax],al
  434a9f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434aa5
  434aa5:	add    BYTE PTR [rax],al
  434aa7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434aad
  434aad:	add    BYTE PTR [rax],al
  434aaf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434ab5
  434ab5:	add    BYTE PTR [rax],al
  434ab7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434abd
  434abd:	add    BYTE PTR [rax],al
  434abf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434ac5
  434ac5:	add    BYTE PTR [rax],al
  434ac7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434acd
  434acd:	add    BYTE PTR [rax],al
  434acf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434ad5
  434ad5:	add    BYTE PTR [rax],al
  434ad7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434add
  434add:	add    BYTE PTR [rax],al
  434adf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434ae5
  434ae5:	add    BYTE PTR [rax],al
  434ae7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434aed
  434aed:	add    BYTE PTR [rax],al
  434aef:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434af5
  434af5:	add    BYTE PTR [rax],al
  434af7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434afd
  434afd:	add    BYTE PTR [rax],al
  434aff:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b05
  434b05:	add    BYTE PTR [rax],al
  434b07:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b0d
  434b0d:	add    BYTE PTR [rax],al
  434b0f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b15
  434b15:	add    BYTE PTR [rax],al
  434b17:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b1d
  434b1d:	add    BYTE PTR [rax],al
  434b1f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b25
  434b25:	add    BYTE PTR [rax],al
  434b27:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b2d
  434b2d:	add    BYTE PTR [rax],al
  434b2f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b35
  434b35:	add    BYTE PTR [rax],al
  434b37:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b3d
  434b3d:	add    BYTE PTR [rax],al
  434b3f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b45
  434b45:	add    BYTE PTR [rax],al
  434b47:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b4d
  434b4d:	add    BYTE PTR [rax],al
  434b4f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b55
  434b55:	add    BYTE PTR [rax],al
  434b57:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b5d
  434b5d:	add    BYTE PTR [rax],al
  434b5f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b65
  434b65:	add    BYTE PTR [rax],al
  434b67:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b6d
  434b6d:	add    BYTE PTR [rax],al
  434b6f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b75
  434b75:	add    BYTE PTR [rax],al
  434b77:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b7d
  434b7d:	add    BYTE PTR [rax],al
  434b7f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b85
  434b85:	add    BYTE PTR [rax],al
  434b87:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b8d
  434b8d:	add    BYTE PTR [rax],al
  434b8f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b95
  434b95:	add    BYTE PTR [rax],al
  434b97:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434b9d
  434b9d:	add    BYTE PTR [rax],al
  434b9f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434ba5
  434ba5:	add    BYTE PTR [rax],al
  434ba7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bad
  434bad:	add    BYTE PTR [rax],al
  434baf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bb5
  434bb5:	add    BYTE PTR [rax],al
  434bb7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bbd
  434bbd:	add    BYTE PTR [rax],al
  434bbf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bc5
  434bc5:	add    BYTE PTR [rax],al
  434bc7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bcd
  434bcd:	add    BYTE PTR [rax],al
  434bcf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bd5
  434bd5:	add    BYTE PTR [rax],al
  434bd7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bdd
  434bdd:	add    BYTE PTR [rax],al
  434bdf:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434be5
  434be5:	add    BYTE PTR [rax],al
  434be7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bed
  434bed:	add    BYTE PTR [rax],al
  434bef:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bf5
  434bf5:	add    BYTE PTR [rax],al
  434bf7:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434bfd
  434bfd:	add    BYTE PTR [rax],al
  434bff:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c05
  434c05:	add    BYTE PTR [rax],al
  434c07:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c0d
  434c0d:	add    BYTE PTR [rax],al
  434c0f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c15
  434c15:	add    BYTE PTR [rax],al
  434c17:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c1d
  434c1d:	add    BYTE PTR [rax],al
  434c1f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c25
  434c25:	add    BYTE PTR [rax],al
  434c27:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c2d
  434c2d:	add    BYTE PTR [rax],al
  434c2f:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c35
  434c35:	add    BYTE PTR [rax],al
  434c37:	add    BYTE PTR [rip+0x1d000000],bl        # 0x1d434c3d
	...
  434c45:	add    BYTE PTR [rax+rax*1],cl
  434c48:	or     al,0x0
	...
  434c52:	or     eax,DWORD PTR [rax]
  434c54:	or     eax,DWORD PTR [rax]
	...
  434c66:	xor    al,0x0
  434c68:	xor    al,0x0
  434c6a:	add    BYTE PTR [rax],al
  434c6c:	add    BYTE PTR [rax],al
  434c6e:	sbb    al,0x0
  434c70:	sbb    al,0x0
	...
  434c92:	je     0x434c94
  434c94:	push   rax
  434c95:	add    BYTE PTR [rcx],al
  434c97:	add    BYTE PTR [rcx],al
  434c99:	add    BYTE PTR [rdi+0x0],al
  434c9c:	add    BYTE PTR cs:[rax+0x0],dl
  434ca0:	rex.RX add BYTE PTR [rbx],r10b
  434ca3:	add    BYTE PTR [rax+rax*1],bh
  434ca6:	cmp    eax,0x46004600
  434cab:	add    BYTE PTR [rsi+0x0],al
  434cae:	rex.RX add BYTE PTR [rcx+0x0],r9b
  434cb2:	rex.RX add BYTE PTR [rsi],r15b
  434cb5:	add    BYTE PTR [rdi+0x0],cl
  434cb8:	rex.WRXB add BYTE PTR [r15+0x0],r9b
  434cbc:	rex.WRXB add BYTE PTR [r15+0x0],r9b
  434cc0:	rex.WRXB add BYTE PTR [r8+0x0],r8b
  434cc4:	or     al,0x0
  434cc6:	or     DWORD PTR [rax],eax
  434cc8:	add    eax,0x6000500
  434ccd:	add    BYTE PTR [rsi],al
  434ccf:	add    BYTE PTR [rdi],dh
  434cd1:	add    BYTE PTR [rax],dh
  434cd3:	add    BYTE PTR [rbx],cl
  434cd5:	add    BYTE PTR [rax],dl
  434cd7:	add    BYTE PTR [rax],ah
  434cd9:	add    BYTE PTR [rax],ah
  434cdb:	add    BYTE PTR [rsi],dl
  434cdd:	add    BYTE PTR [rdi],ah
  434cdf:	add    BYTE PTR [rdi],bl
  434ce1:	add    BYTE PTR [rsi],dl
  434ce3:	add    BYTE PTR [rbx],ch
  434ce5:	add    BYTE PTR [rbx],ch
  434ce7:	add    BYTE PTR [rip+0x33003100],ch        # 0x33437ded
  434ced:	add    BYTE PTR [rdx],dh
  434cef:	add    BYTE PTR [rdx],dh
  434cf1:	add    BYTE PTR [rbx],dh
  434cf3:	add    BYTE PTR [rbx],dh
  434cf5:	add    BYTE PTR [rax],bl
  434cf7:	add    BYTE PTR [rbx],bl
  434cf9:	add    BYTE PTR [rdx],bl
  434cfb:	add    BYTE PTR [rdx],bl
  434cfd:	add    BYTE PTR [rbx],bl
  434cff:	add    BYTE PTR [rbx],bl
  434d01:	add    BYTE PTR [rdx+0x0],dl
  434d04:	push   rcx
  434d05:	add    BYTE PTR [rcx+0x0],dl
  434d08:	push   rbp
  434d09:	add    BYTE PTR [rbx+0x0],dl
  434d0c:	push   rbx
  434d0d:	add    BYTE PTR [rax+rax*1+0x5f],dl
  434d11:	add    BYTE PTR [rsi+0x0],dl
  434d14:	push   rsi
  434d15:	add    BYTE PTR [rcx+0x0],bl
  434d18:	push   rdi
  434d19:	add    BYTE PTR [rdi+0x0],bl
  434d1c:	pop    rax
  434d1d:	add    BYTE PTR [rdx+0x0],ch
  434d20:	(bad)  
  434d21:	add    BYTE PTR [rdx+0x0],ch
  434d24:	ins    BYTE PTR es:[rdi],dx
  434d25:	add    BYTE PTR [rbx+0x0],ch
  434d28:	outs   dx,BYTE PTR ds:[rsi]
  434d29:	add    BYTE PTR [rbp+0x0],ch
  434d2c:	jo     0x434d2e
  434d2e:	outs   dx,DWORD PTR ds:[rsi]
  434d2f:	add    BYTE PTR [rdi+0x0],ch
  434d32:	jb     0x434d34
  434d34:	jb     0x434d36
  434d36:	add    DWORD PTR [rax],eax
  434d38:	rex.RXB add BYTE PTR [r8],r13b
  434d3b:	add    BYTE PTR [rax+0x0],cl
  434d3e:	sub    DWORD PTR [rax],eax
  434d40:	add    DWORD PTR [rax],eax
  434d42:	cmp    al,BYTE PTR [rax]
  434d44:	rex.WX add BYTE PTR [rdx],al
  434d47:	add    BYTE PTR [rdx+0x0],cl
  434d4a:	rex.WB add BYTE PTR [r13+0x0],cl
  434d4e:	add    BYTE PTR [r8+rax*1+0x41],r8b
  434d53:	add    BYTE PTR [rcx],bh
  434d55:	add    BYTE PTR [rbx],bh
  434d57:	add    BYTE PTR [rdi+0x0],cl
  434d5a:	or     BYTE PTR [rax],al
  434d5c:	adc    al,0x0
  434d5e:	adc    al,BYTE PTR [rax]
  434d60:	cmp    BYTE PTR [rax],al
  434d62:	(bad)  
  434d64:	(bad)  
  434d65:	add    BYTE PTR [rax+rax*1],cl
  434d68:	or     DWORD PTR [rax],eax
  434d6a:	or     DWORD PTR [rax],eax
  434d6c:	or     al,BYTE PTR [rax]
  434d6e:	add    eax,0x4000700
  434d73:	add    BYTE PTR [rbx],al
  434d75:	add    BYTE PTR [rdi],dh
  434d77:	add    BYTE PTR [rsi],dh
  434d79:	add    BYTE PTR [rbx],cl
  434d7b:	add    BYTE PTR [rax],dl
  434d7d:	add    BYTE PTR [rax],dl
  434d7f:	add    BYTE PTR [rcx],dl
  434d81:	add    BYTE PTR [rax],ah
  434d83:	add    BYTE PTR [rsi],dl
  434d85:	add    BYTE PTR [rsi],dl
  434d87:	add    BYTE PTR [rsi],bl
  434d89:	add    BYTE PTR [rdi],dl
  434d8b:	add    BYTE PTR [rbx],ah
  434d8d:	add    BYTE PTR [rax+rax*1],ah
  434d90:	and    al,BYTE PTR [rax]
  434d92:	and    al,BYTE PTR [rax]
  434d94:	and    eax,DWORD PTR [rax]
  434d96:	(bad)  
  434d97:	add    BYTE PTR [rbx],ch
  434d99:	add    BYTE PTR [rdx],ch
  434d9b:	add    BYTE PTR [rax+rax*1],ch
  434d9e:	xor    al,BYTE PTR [rax]
  434da0:	xor    al,BYTE PTR [rax]
  434da2:	xor    al,0x0
  434da4:	sbb    BYTE PTR [rax],al
  434da6:	sbb    BYTE PTR [rax],al
  434da8:	sbb    DWORD PTR [rax],eax
  434daa:	sbb    al,BYTE PTR [rax]
  434dac:	sbb    al,BYTE PTR [rax]
  434dae:	sbb    al,0x0
  434db0:	push   rbx
  434db1:	add    BYTE PTR [rsi+0x0],bl
  434db4:	pop    rbp
  434db5:	add    BYTE PTR [rdx+0x0],bl
  434db8:	(bad)  
  434db9:	add    BYTE PTR [rcx+0x0],ch
  434dbc:	add    BYTE PTR [eax+eax*1+0x66],ah
  434dc1:	add    BYTE PTR [rdx+0x0],ah
  434dc4:	add    BYTE PTR gs:[rbx+0x0],ah
  434dc8:	imul   eax,DWORD PTR [rax],0x71006f
  434dce:	sub    DWORD PTR [rax],eax
  434dd0:	add    DWORD PTR [rax],eax
  434dd2:	add    DWORD PTR [rax],eax
  434dd4:	add    al,BYTE PTR [rax]
  434dd6:	rex.WXB add BYTE PTR [r10+0x0],cl
  434dda:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r9b
  434ddf:	add    BYTE PTR [rax+rax*1+0x2f],al
  434de3:	add    BYTE PTR [rip+0xe000900],dl        # 0xe4356e9
  434de9:	add    BYTE PTR [rdx],cl
  434deb:	add    BYTE PTR [rcx],cl
  434ded:	add    BYTE PTR [rbx],al
  434def:	add    BYTE PTR [rax],dl
  434df1:	add    BYTE PTR [rip+0x10001100],cl        # 0x10435ef7
  434df7:	add    BYTE PTR [rsi],dl
  434df9:	add    BYTE PTR [rsi],ah
  434dfb:	add    BYTE PTR [rdi],dl
  434dfd:	add    BYTE PTR [rsi],dl
  434dff:	add    BYTE PTR [rax+rax*1],ah
  434e02:	and    al,BYTE PTR [rax]
  434e04:	and    al,BYTE PTR [rax]
  434e06:	and    eax,0x32002c00
  434e0b:	add    BYTE PTR [rax+rax*1],dh
  434e0e:	sbb    BYTE PTR [rax],al
  434e10:	sbb    DWORD PTR [rax],eax
  434e12:	sbb    BYTE PTR [rax],al
  434e14:	sbb    al,BYTE PTR [rax]
  434e16:	sbb    al,0x0
  434e18:	pop    rsi
  434e19:	add    BYTE PTR [rbp+0x0],bl
  434e1c:	add    BYTE PTR [eax+0x0],ch
  434e20:	rex.XB add BYTE PTR [r10+0x0],al
  434e24:	or     DWORD PTR [rax],eax
  434e26:	or     DWORD PTR [rax],eax
  434e28:	or     DWORD PTR [rax],eax
  434e2a:	or     DWORD PTR [rax],eax
  434e2c:	adc    BYTE PTR [rax],al
  434e2e:	adc    BYTE PTR [rax],al
  434e30:	adc    BYTE PTR [rax],al
  434e32:	adc    BYTE PTR [rax],al
  434e34:	(bad)  
  434e35:	add    BYTE PTR [rsi],dl
  434e37:	add    BYTE PTR [rsi],dl
  434e39:	add    BYTE PTR [rsi],dl
  434e3b:	add    BYTE PTR [rax+rax*1],ah
  434e3e:	and    al,BYTE PTR [rax]
  434e40:	and    al,BYTE PTR [rax]
  434e42:	and    eax,0x18003400
  434e47:	add    BYTE PTR [rax],bl
  434e49:	add    BYTE PTR [rax],bl
  434e4b:	add    BYTE PTR [rax],bl
  434e4d:	add    BYTE PTR [rax+rax*1],bl
  434e50:	pop    rsp
  434e51:	add    BYTE PTR [rbx+0x0],bl
  434e54:	add    BYTE PTR [eax+0x0],ch
  434e58:	or     DWORD PTR [rax],eax
  434e5a:	or     DWORD PTR [rax],eax
  434e5c:	or     DWORD PTR [rax],eax
  434e5e:	or     DWORD PTR [rax],eax
  434e60:	or     DWORD PTR [rax],eax
  434e62:	adc    BYTE PTR [rax],al
  434e64:	adc    BYTE PTR [rax],al
  434e66:	adc    BYTE PTR [rax],al
  434e68:	adc    BYTE PTR [rax],al
  434e6a:	adc    BYTE PTR [rax],al
  434e6c:	(bad)  
  434e6d:	add    BYTE PTR [rsi],dl
  434e6f:	add    BYTE PTR [rsi],dl
  434e71:	add    BYTE PTR [rsi],dl
  434e73:	add    BYTE PTR [rsi],dl
  434e75:	add    BYTE PTR [rdx],ah
  434e77:	add    BYTE PTR [rdx],ah
  434e79:	add    BYTE PTR [rax+rax*1],dh
  434e7c:	sbb    BYTE PTR [rax],al
  434e7e:	sbb    BYTE PTR [rax],al
  434e80:	sbb    BYTE PTR [rax],al
  434e82:	sbb    BYTE PTR [rax],al
  434e84:	sbb    BYTE PTR [rax],al
  434e86:	sbb    al,0x0
  434e88:	or     DWORD PTR [rax],eax
  434e8a:	adc    BYTE PTR [rax],al
  434e8c:	(bad)  
  434e8d:	add    BYTE PTR [rdx],ah
  434e8f:	add    BYTE PTR [rcx],ah
  434e91:	add    BYTE PTR [rax+rax*1],dh
  434e94:	sbb    BYTE PTR [rax],al
  434e96:	sbb    al,0x0
  434e98:	and    al,BYTE PTR [rax]
  434e9a:	xor    al,0x0
  434e9c:	sbb    al,0x0
  434e9e:	and    al,BYTE PTR [rax]
  434ea0:	xor    al,0x0
  434ea2:	xor    al,0x0
  434ea4:	xor    al,0x0
  434ea6:	sbb    al,0x0
  434ea8:	sbb    al,0x0
  434eaa:	sbb    al,0x0
  434eac:	and    al,BYTE PTR [rax]
  434eae:	xor    al,0x0
  434eb0:	xor    al,0x0
  434eb2:	sbb    al,0x0
  434eb4:	sbb    al,0x0
  434eb6:	xor    eax,0x34003400
  434ebb:	add    BYTE PTR [rax+rax*1],dh
  434ebe:	xor    al,0x0
  434ec0:	sbb    eax,0x1c001c00
  434ec5:	add    BYTE PTR [rax+rax*1],bl
  434ec8:	sbb    al,0x0
  434eca:	xor    al,0x0
  434ecc:	xor    al,0x0
  434ece:	xor    al,0x0
  434ed0:	xor    al,0x0
  434ed2:	xor    al,0x0
  434ed4:	sbb    al,0x0
  434ed6:	sbb    al,0x0
  434ed8:	sbb    al,0x0
  434eda:	sbb    al,0x0
  434edc:	sbb    al,0x0
  434ede:	xor    al,0x0
  434ee0:	xor    al,0x0
  434ee2:	sbb    al,0x0
  434ee4:	sbb    al,0x0
	...
  434f5a:	sub    DWORD PTR [rax],eax
  434f5c:	sub    al,BYTE PTR [rax]
  434f5e:	sub    eax,DWORD PTR [rax]
  434f60:	sub    al,0x0
  434f62:	sub    eax,DWORD PTR [rax]
  434f64:	sub    eax,0x2f002e00
  434f69:	add    BYTE PTR [rax],dh
  434f6b:	add    BYTE PTR [rip+0x32003100],ch        # 0x32438071
  434f71:	add    BYTE PTR [rbx],dh
  434f73:	add    BYTE PTR [rax],dh
  434f75:	add    BYTE PTR [rax],dh
  434f77:	add    BYTE PTR [rax+rax*1],dh
  434f7a:	xor    eax,0x37003600
  434f7f:	add    BYTE PTR [rax],bh
  434f81:	add    BYTE PTR [rax],bh
  434f83:	add    BYTE PTR [rcx],bh
  434f85:	add    BYTE PTR [rdx],bh
  434f87:	add    BYTE PTR [rax],dh
  434f89:	add    BYTE PTR [rbx],bh
  434f8b:	add    BYTE PTR [rax+rax*1],bh
  434f8e:	cmp    eax,DWORD PTR [rax]
  434f90:	cmp    eax,DWORD PTR [rax]
  434f92:	cmp    eax,0x3e003b00
  434f97:	add    BYTE PTR [rbx],bh
  434f99:	add    BYTE PTR [rbx],bh
  434f9b:	add    BYTE PTR [rdi],bh
  434f9d:	add    BYTE PTR [rax+0x0],al
  434fa0:	add    BYTE PTR [rip+0x3b003c00],bpl        # 0x3b438ba7
  434fa7:	add    BYTE PTR [rsi],bh
  434fa9:	add    BYTE PTR [rbx],bh
  434fab:	add    BYTE PTR [rbx],bh
  434fad:	add    BYTE PTR [rdi],bh
  434faf:	add    BYTE PTR [rax+0x0],al
  434fb2:	sub    eax,0x2a002900
  434fb7:	add    BYTE PTR [rbx],ch
  434fb9:	add    BYTE PTR [rax+rax*1],ch
  434fbc:	sub    eax,DWORD PTR [rax]
  434fbe:	sub    eax,0x2f002e00
  434fc3:	add    BYTE PTR [rax],dh
  434fc5:	add    BYTE PTR [rip+0x32003100],ch        # 0x324380cb
  434fcb:	add    BYTE PTR [rbx],dh
  434fcd:	add    BYTE PTR [rax],dh
  434fcf:	add    BYTE PTR [rax],dh
  434fd1:	add    BYTE PTR [rax+rax*1],dh
  434fd4:	xor    eax,0x37003600
  434fd9:	add    BYTE PTR [rax],bh
  434fdb:	add    BYTE PTR [rax],bh
  434fdd:	add    BYTE PTR [rcx],bh
  434fdf:	add    BYTE PTR [rdx],bh
  434fe1:	add    BYTE PTR [rax],dh
  434fe3:	add    BYTE PTR [rbx],bh
  434fe5:	add    BYTE PTR [rax+rax*1],bh
  434fe8:	cmp    eax,DWORD PTR [rax]
  434fea:	cmp    eax,DWORD PTR [rax]
  434fec:	cmp    eax,0x3e003b00
  434ff1:	add    BYTE PTR [rbx],bh
  434ff3:	add    BYTE PTR [rbx],bh
  434ff5:	add    BYTE PTR [rdi],bh
  434ff7:	add    BYTE PTR [rax+0x0],al
  434ffa:	add    BYTE PTR [rip+0x3b003c00],bpl        # 0x3b438c01
  435001:	add    BYTE PTR [rsi],bh
  435003:	add    BYTE PTR [rbx],bh
  435005:	add    BYTE PTR [rbx],bh
  435007:	add    BYTE PTR [rdi],bh
  435009:	add    BYTE PTR [rax+0x0],al
  43500c:	sub    eax,0x42002900
  435011:	add    BYTE PTR [rdx+0x0],al
  435014:	rex.X add BYTE PTR [rdx+0x0],al
  435018:	rex.X add BYTE PTR [rdx+0x0],al
  43501c:	rex.X add BYTE PTR [rdx+0x0],al
  435020:	rex.X add BYTE PTR [rbx+0x0],al
  435024:	rex.X add BYTE PTR [rdx+0x0],al
  435028:	rex.X add BYTE PTR [rdx+0x0],al
  43502c:	rex.X add BYTE PTR [rdx+0x0],al
  435030:	rex.X add BYTE PTR [rdx+0x0],al
  435034:	rex.X add BYTE PTR [rdx+0x0],al
  435038:	rex.X add BYTE PTR [rdx+0x0],al
  43503c:	rex.X add BYTE PTR [rdx+0x0],al
  435040:	rex.X add BYTE PTR [rdx+0x0],al
  435044:	rex.X add BYTE PTR [rdx+0x0],al
  435048:	rex.X add BYTE PTR [rdx+0x0],al
  43504c:	rex.X add BYTE PTR [rdx+0x0],al
  435050:	rex.X add BYTE PTR [rdx+0x0],al
  435054:	rex.X add BYTE PTR [rdx+0x0],al
  435058:	rex.X add BYTE PTR [rdx+0x0],al
  43505c:	rex.X add BYTE PTR [rdx+0x0],al
  435060:	rex.X add BYTE PTR [rdx+0x0],al
  435064:	rex.X add BYTE PTR [rdx+0x0],al
  435068:	sub    DWORD PTR [rax],eax
  43506a:	rex.X add BYTE PTR [rdx+0x0],al
  43506e:	rex.X add BYTE PTR [rdx+0x0],al
  435072:	rex.X add BYTE PTR [rdx+0x0],al
  435076:	rex.X add BYTE PTR [rdx+0x0],al
  43507a:	rex.X add BYTE PTR [rbx+0x0],al
  43507e:	rex.X add BYTE PTR [rdx+0x0],al
  435082:	rex.X add BYTE PTR [rdx+0x0],al
  435086:	rex.X add BYTE PTR [rdx+0x0],al
  43508a:	rex.X add BYTE PTR [rdx+0x0],al
  43508e:	rex.X add BYTE PTR [rdx+0x0],al
  435092:	rex.X add BYTE PTR [rdx+0x0],al
  435096:	rex.X add BYTE PTR [rdx+0x0],al
  43509a:	rex.X add BYTE PTR [rdx+0x0],al
  43509e:	rex.X add BYTE PTR [rdx+0x0],al
  4350a2:	rex.X add BYTE PTR [rdx+0x0],al
  4350a6:	rex.X add BYTE PTR [rdx+0x0],al
  4350aa:	rex.X add BYTE PTR [rdx+0x0],al
  4350ae:	rex.X add BYTE PTR [rdx+0x0],al
  4350b2:	rex.X add BYTE PTR [rdx+0x0],al
  4350b6:	rex.X add BYTE PTR [rdx+0x0],al
  4350ba:	rex.X add BYTE PTR [rdx+0x0],al
  4350be:	rex.X add BYTE PTR [rdx+0x0],al
  4350c2:	sub    DWORD PTR [rax],eax
  4350c4:	add    BYTE PTR [rax+rax*1+0x44],r8b
  4350c9:	add    BYTE PTR [rax+rax*1+0x45],al
  4350cd:	add    BYTE PTR [rax+rax*1+0x44],al
  4350d1:	add    BYTE PTR [rbp+0x0],al
  4350d4:	add    BYTE PTR [r8+rax*1+0x44],r8b
  4350d9:	add    BYTE PTR [rax+rax*1+0x46],al
  4350dd:	add    BYTE PTR [rbp+0x0],al
  4350e0:	add    BYTE PTR [rbp+0x0],r8b
  4350e4:	add    BYTE PTR [rdi+0x0],r8b
  4350e8:	add    BYTE PTR [rax+rax*1+0x44],r8b
  4350ed:	add    BYTE PTR [rax+rax*1+0x45],al
  4350f1:	add    BYTE PTR [rax+rax*1+0x44],al
  4350f5:	add    BYTE PTR [rax+rax*1+0x44],al
  4350f9:	add    BYTE PTR [rax+rax*1+0x44],al
  4350fd:	add    BYTE PTR [rax+rax*1+0x44],al
  435101:	add    BYTE PTR [rax+rax*1+0x44],al
  435105:	add    BYTE PTR [rax+rax*1+0x44],al
  435109:	add    BYTE PTR [rbp+0x0],al
  43510c:	add    BYTE PTR [rax+rax*1+0x44],r8b
  435111:	add    BYTE PTR [rax+rax*1+0x44],al
  435115:	add    BYTE PTR [rax+rax*1+0x44],al
  435119:	add    BYTE PTR [rbp+0x0],al
  43511c:	sub    DWORD PTR [rax],eax
  43511e:	add    BYTE PTR [rax+rax*1+0x44],r8b
  435123:	add    BYTE PTR [rax+rax*1+0x45],al
  435127:	add    BYTE PTR [rax+rax*1+0x44],al
  43512b:	add    BYTE PTR [rbp+0x0],al
  43512e:	add    BYTE PTR [r8+rax*1+0x44],r8b
  435133:	add    BYTE PTR [rax+rax*1+0x46],al
  435137:	add    BYTE PTR [rbp+0x0],al
  43513a:	add    BYTE PTR [rbp+0x0],r8b
  43513e:	add    BYTE PTR [rdi+0x0],r8b
  435142:	add    BYTE PTR [rax+rax*1+0x44],r8b
  435147:	add    BYTE PTR [rax+rax*1+0x45],al
  43514b:	add    BYTE PTR [rax+rax*1+0x44],al
  43514f:	add    BYTE PTR [rax+rax*1+0x44],al
  435153:	add    BYTE PTR [rax+rax*1+0x44],al
  435157:	add    BYTE PTR [rax+rax*1+0x44],al
  43515b:	add    BYTE PTR [rax+rax*1+0x44],al
  43515f:	add    BYTE PTR [rax+rax*1+0x44],al
  435163:	add    BYTE PTR [rbp+0x0],al
  435166:	add    BYTE PTR [rax+rax*1+0x44],r8b
  43516b:	add    BYTE PTR [rax+rax*1+0x44],al
  43516f:	add    BYTE PTR [rax+rax*1+0x44],al
  435173:	add    BYTE PTR [rbp+0x0],al
  435176:	sub    DWORD PTR [rax],eax
  435178:	rex.W add BYTE PTR [rax+0x0],cl
  43517c:	rex.W add BYTE PTR [rax+0x0],cl
  435180:	rex.W add BYTE PTR [rcx+0x0],cl
  435184:	rex.W add BYTE PTR [rax+0x0],cl
  435188:	rex.W add BYTE PTR [rax+0x0],cl
  43518c:	rex.W add BYTE PTR [rax+0x0],cl
  435190:	rex.W add BYTE PTR [rax+0x0],cl
  435194:	rex.W add BYTE PTR [rax+0x0],cl
  435198:	rex.W add BYTE PTR [rax+0x0],cl
  43519c:	rex.W add BYTE PTR [rax+0x0],cl
  4351a0:	rex.W add BYTE PTR [rax+0x0],cl
  4351a4:	rex.W add BYTE PTR [rax+0x0],cl
  4351a8:	rex.W add BYTE PTR [rax+0x0],cl
  4351ac:	rex.W add BYTE PTR [rax+0x0],cl
  4351b0:	rex.W add BYTE PTR [rax+0x0],cl
  4351b4:	rex.W add BYTE PTR [rax+0x0],cl
  4351b8:	rex.W add BYTE PTR [rax+0x0],cl
  4351bc:	rex.W add BYTE PTR [rax+0x0],cl
  4351c0:	rex.W add BYTE PTR [rax+0x0],cl
  4351c4:	rex.W add BYTE PTR [rax+0x0],cl
  4351c8:	rex.W add BYTE PTR [rax+0x0],cl
  4351cc:	rex.W add BYTE PTR [rax+0x0],cl
  4351d0:	sub    DWORD PTR [rax],eax
  4351d2:	rex.W add BYTE PTR [rax+0x0],cl
  4351d6:	rex.W add BYTE PTR [rax+0x0],cl
  4351da:	rex.W add BYTE PTR [rcx+0x0],cl
  4351de:	rex.W add BYTE PTR [rax+0x0],cl
  4351e2:	rex.W add BYTE PTR [rax+0x0],cl
  4351e6:	rex.W add BYTE PTR [rax+0x0],cl
  4351ea:	rex.W add BYTE PTR [rax+0x0],cl
  4351ee:	rex.W add BYTE PTR [rax+0x0],cl
  4351f2:	rex.W add BYTE PTR [rax+0x0],cl
  4351f6:	rex.W add BYTE PTR [rax+0x0],cl
  4351fa:	rex.W add BYTE PTR [rax+0x0],cl
  4351fe:	rex.W add BYTE PTR [rax+0x0],cl
  435202:	rex.W add BYTE PTR [rax+0x0],cl
  435206:	rex.W add BYTE PTR [rax+0x0],cl
  43520a:	rex.W add BYTE PTR [rax+0x0],cl
  43520e:	rex.W add BYTE PTR [rax+0x0],cl
  435212:	rex.W add BYTE PTR [rax+0x0],cl
  435216:	rex.W add BYTE PTR [rax+0x0],cl
  43521a:	rex.W add BYTE PTR [rax+0x0],cl
  43521e:	rex.W add BYTE PTR [rax+0x0],cl
  435222:	rex.W add BYTE PTR [rax+0x0],cl
  435226:	rex.W add BYTE PTR [rax+0x0],cl
  43522a:	sub    DWORD PTR [rax],eax
  43522c:	rex.WX add BYTE PTR [rdx+0x0],cl
  435230:	rex.WX add BYTE PTR [rdx+0x0],cl
  435234:	rex.WX add BYTE PTR [rdx+0x0],cl
  435238:	rex.WX add BYTE PTR [rdx+0x0],cl
  43523c:	rex.WX add BYTE PTR [rbx+0x0],cl
  435240:	rex.WX add BYTE PTR [rdx+0x0],cl
  435244:	rex.WX add BYTE PTR [rdx+0x0],cl
  435248:	rex.WX add BYTE PTR [rdx+0x0],cl
  43524c:	rex.WX add BYTE PTR [rdx+0x0],cl
  435250:	rex.WX add BYTE PTR [rdx+0x0],cl
  435254:	rex.WX add BYTE PTR [rdx+0x0],cl
  435258:	rex.WX add BYTE PTR [rdx+0x0],cl
  43525c:	rex.WX add BYTE PTR [rdx+0x0],cl
  435260:	rex.WX add BYTE PTR [rdx+0x0],cl
  435264:	rex.WX add BYTE PTR [rdx+0x0],cl
  435268:	rex.WX add BYTE PTR [rdx+0x0],cl
  43526c:	rex.WX add BYTE PTR [rdx+0x0],cl
  435270:	rex.WX add BYTE PTR [rdx+0x0],cl
  435274:	rex.WX add BYTE PTR [rdx+0x0],cl
  435278:	rex.WX add BYTE PTR [rdx+0x0],cl
  43527c:	rex.WX add BYTE PTR [rdx+0x0],cl
  435280:	rex.WX add BYTE PTR [rdx+0x0],cl
  435284:	sub    DWORD PTR [rax],eax
  435286:	rex.WX add BYTE PTR [rdx+0x0],cl
  43528a:	rex.WX add BYTE PTR [rdx+0x0],cl
  43528e:	rex.WX add BYTE PTR [rdx+0x0],cl
  435292:	rex.WX add BYTE PTR [rdx+0x0],cl
  435296:	rex.WX add BYTE PTR [rbx+0x0],cl
  43529a:	rex.WX add BYTE PTR [rdx+0x0],cl
  43529e:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352a2:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352a6:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352aa:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352ae:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352b2:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352b6:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352ba:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352be:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352c2:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352c6:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352ca:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352ce:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352d2:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352d6:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352da:	rex.WX add BYTE PTR [rdx+0x0],cl
  4352de:	sub    DWORD PTR [rax],eax
  4352e0:	rex.WR add BYTE PTR [rax+rax*1+0x4d],r9b
  4352e5:	add    BYTE PTR [rax+rax*1+0x4c],cl
  4352e9:	add    BYTE PTR [rax+rax*1+0x4c],cl
  4352ed:	add    BYTE PTR [rax+rax*1+0x4c],cl
  4352f1:	add    BYTE PTR [rsi+0x0],cl
  4352f4:	rex.WR add BYTE PTR [rax+rax*1+0x4c],r9b
  4352f9:	add    BYTE PTR [rax+rax*1+0x4c],cl
  4352fd:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435301:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435305:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435309:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43530d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435311:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435315:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435319:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43531d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435321:	add    BYTE PTR [rax+rax*1+0x4f],cl
  435325:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435329:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43532d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435331:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435335:	add    BYTE PTR [rax+rax*1+0x29],cl
  435339:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43533d:	add    BYTE PTR [rbp+0x0],cl
  435340:	rex.WR add BYTE PTR [rax+rax*1+0x4c],r9b
  435345:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435349:	add    BYTE PTR [rax+rax*1+0x4e],cl
  43534d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435351:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435355:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435359:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43535d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435361:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435365:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435369:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43536d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435371:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435375:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435379:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43537d:	add    BYTE PTR [rdi+0x0],cl
  435380:	rex.WR add BYTE PTR [rax+rax*1+0x4c],r9b
  435385:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435389:	add    BYTE PTR [rax+rax*1+0x4c],cl
  43538d:	add    BYTE PTR [rax+rax*1+0x4c],cl
  435391:	add    BYTE PTR [rcx],ch
  435393:	add    BYTE PTR [rax+0x0],dl
  435396:	push   rax
  435397:	add    BYTE PTR [rax+0x0],dl
  43539a:	push   rax
  43539b:	add    BYTE PTR [rax+0x0],dl
  43539e:	push   rax
  43539f:	add    BYTE PTR [rax+0x0],dl
  4353a2:	push   rax
  4353a3:	add    BYTE PTR [rax+0x0],dl
  4353a6:	push   rcx
  4353a7:	add    BYTE PTR [rax+0x0],dl
  4353aa:	push   rax
  4353ab:	add    BYTE PTR [rax+0x0],dl
  4353ae:	push   rax
  4353af:	add    BYTE PTR [rax+0x0],dl
  4353b2:	push   rax
  4353b3:	add    BYTE PTR [rax+0x0],dl
  4353b6:	push   rax
  4353b7:	add    BYTE PTR [rax+0x0],dl
  4353ba:	push   rax
  4353bb:	add    BYTE PTR [rax+0x0],dl
  4353be:	push   rax
  4353bf:	add    BYTE PTR [rax+0x0],dl
  4353c2:	push   rax
  4353c3:	add    BYTE PTR [rax+0x0],dl
  4353c6:	push   rax
  4353c7:	add    BYTE PTR [rax+0x0],dl
  4353ca:	push   rax
  4353cb:	add    BYTE PTR [rax+0x0],dl
  4353ce:	push   rax
  4353cf:	add    BYTE PTR [rax+0x0],dl
  4353d2:	push   rax
  4353d3:	add    BYTE PTR [rax+0x0],dl
  4353d6:	push   rax
  4353d7:	add    BYTE PTR [rax+0x0],dl
  4353da:	push   rax
  4353db:	add    BYTE PTR [rax+0x0],dl
  4353de:	push   rax
  4353df:	add    BYTE PTR [rax+0x0],dl
  4353e2:	push   rax
  4353e3:	add    BYTE PTR [rax+0x0],dl
  4353e6:	push   rax
  4353e7:	add    BYTE PTR [rax+0x0],dl
  4353ea:	push   rax
  4353eb:	add    BYTE PTR [rcx],ch
  4353ed:	add    BYTE PTR [rax+0x0],dl
  4353f0:	push   rax
  4353f1:	add    BYTE PTR [rax+0x0],dl
  4353f4:	push   rax
  4353f5:	add    BYTE PTR [rax+0x0],dl
  4353f8:	push   rax
  4353f9:	add    BYTE PTR [rax+0x0],dl
  4353fc:	push   rax
  4353fd:	add    BYTE PTR [rax+0x0],dl
  435400:	push   rcx
  435401:	add    BYTE PTR [rax+0x0],dl
  435404:	push   rax
  435405:	add    BYTE PTR [rax+0x0],dl
  435408:	push   rax
  435409:	add    BYTE PTR [rax+0x0],dl
  43540c:	push   rax
  43540d:	add    BYTE PTR [rax+0x0],dl
  435410:	push   rax
  435411:	add    BYTE PTR [rax+0x0],dl
  435414:	push   rax
  435415:	add    BYTE PTR [rax+0x0],dl
  435418:	push   rax
  435419:	add    BYTE PTR [rax+0x0],dl
  43541c:	push   rax
  43541d:	add    BYTE PTR [rax+0x0],dl
  435420:	push   rax
  435421:	add    BYTE PTR [rax+0x0],dl
  435424:	push   rax
  435425:	add    BYTE PTR [rax+0x0],dl
  435428:	push   rax
  435429:	add    BYTE PTR [rax+0x0],dl
  43542c:	push   rax
  43542d:	add    BYTE PTR [rax+0x0],dl
  435430:	push   rax
  435431:	add    BYTE PTR [rax+0x0],dl
  435434:	push   rax
  435435:	add    BYTE PTR [rax+0x0],dl
  435438:	push   rax
  435439:	add    BYTE PTR [rax+0x0],dl
  43543c:	push   rax
  43543d:	add    BYTE PTR [rax+0x0],dl
  435440:	push   rax
  435441:	add    BYTE PTR [rax+0x0],dl
  435444:	push   rax
  435445:	add    BYTE PTR [rcx],ch
  435447:	add    BYTE PTR [rdx+0x0],dl
  43544a:	push   rdx
  43544b:	add    BYTE PTR [rbx+0x0],dl
  43544e:	push   rdx
  43544f:	add    BYTE PTR [rdx+0x0],dl
  435452:	push   rdx
  435453:	add    BYTE PTR [rax+rax*1+0x52],dl
  435457:	add    BYTE PTR [rdx+0x0],dl
  43545a:	push   rdx
  43545b:	add    BYTE PTR [rdx+0x0],dl
  43545e:	push   rdx
  43545f:	add    BYTE PTR [rdx+0x0],dl
  435462:	push   rdx
  435463:	add    BYTE PTR [rdx+0x0],dl
  435466:	push   rdx
  435467:	add    BYTE PTR [rdx+0x0],dl
  43546a:	push   rdx
  43546b:	add    BYTE PTR [rdx+0x0],dl
  43546e:	push   rdx
  43546f:	add    BYTE PTR [rdx+0x0],dl
  435472:	push   rdx
  435473:	add    BYTE PTR [rdx+0x0],dl
  435476:	push   rdx
  435477:	add    BYTE PTR [rdx+0x0],dl
  43547a:	push   rdx
  43547b:	add    BYTE PTR [rdx+0x0],dl
  43547e:	push   rdx
  43547f:	add    BYTE PTR [rdx+0x0],dl
  435482:	push   rdx
  435483:	add    BYTE PTR [rdx+0x0],dl
  435486:	push   rdx
  435487:	add    BYTE PTR [rdx+0x0],dl
  43548a:	push   rdx
  43548b:	add    BYTE PTR [rdx+0x0],dl
  43548e:	push   rdx
  43548f:	add    BYTE PTR [rdx+0x0],dl
  435492:	push   rdx
  435493:	add    BYTE PTR [rdx+0x0],dl
  435496:	push   rdx
  435497:	add    BYTE PTR [rdx+0x0],dl
  43549a:	push   rdx
  43549b:	add    BYTE PTR [rdx+0x0],dl
  43549e:	push   rdx
  43549f:	add    BYTE PTR [rcx],ch
  4354a1:	add    BYTE PTR [rdx+0x0],dl
  4354a4:	push   rdx
  4354a5:	add    BYTE PTR [rbx+0x0],dl
  4354a8:	push   rdx
  4354a9:	add    BYTE PTR [rdx+0x0],dl
  4354ac:	push   rdx
  4354ad:	add    BYTE PTR [rax+rax*1+0x52],dl
  4354b1:	add    BYTE PTR [rdx+0x0],dl
  4354b4:	push   rdx
  4354b5:	add    BYTE PTR [rdx+0x0],dl
  4354b8:	push   rdx
  4354b9:	add    BYTE PTR [rdx+0x0],dl
  4354bc:	push   rdx
  4354bd:	add    BYTE PTR [rdx+0x0],dl
  4354c0:	push   rdx
  4354c1:	add    BYTE PTR [rdx+0x0],dl
  4354c4:	push   rdx
  4354c5:	add    BYTE PTR [rdx+0x0],dl
  4354c8:	push   rdx
  4354c9:	add    BYTE PTR [rdx+0x0],dl
  4354cc:	push   rdx
  4354cd:	add    BYTE PTR [rdx+0x0],dl
  4354d0:	push   rdx
  4354d1:	add    BYTE PTR [rdx+0x0],dl
  4354d4:	push   rdx
  4354d5:	add    BYTE PTR [rdx+0x0],dl
  4354d8:	push   rdx
  4354d9:	add    BYTE PTR [rdx+0x0],dl
  4354dc:	push   rdx
  4354dd:	add    BYTE PTR [rdx+0x0],dl
  4354e0:	push   rdx
  4354e1:	add    BYTE PTR [rdx+0x0],dl
  4354e4:	push   rdx
  4354e5:	add    BYTE PTR [rdx+0x0],dl
  4354e8:	push   rdx
  4354e9:	add    BYTE PTR [rdx+0x0],dl
  4354ec:	push   rdx
  4354ed:	add    BYTE PTR [rdx+0x0],dl
  4354f0:	push   rdx
  4354f1:	add    BYTE PTR [rdx+0x0],dl
  4354f4:	push   rdx
  4354f5:	add    BYTE PTR [rdx+0x0],dl
  4354f8:	push   rdx
  4354f9:	add    BYTE PTR [rcx],ch
  4354fb:	add    BYTE PTR [rax+0x0],cl
  4354fe:	rex.W add BYTE PTR [rax+0x0],cl
  435502:	rex.W add BYTE PTR [rax+0x0],cl
  435506:	push   rbp
  435507:	add    BYTE PTR [rax+0x0],cl
  43550a:	rex.W add BYTE PTR [rax+0x0],cl
  43550e:	rex.W add BYTE PTR [rax+0x0],cl
  435512:	rex.W add BYTE PTR [rax+0x0],cl
  435516:	rex.W add BYTE PTR [rax+0x0],cl
  43551a:	rex.W add BYTE PTR [rax+0x0],cl
  43551e:	rex.W add BYTE PTR [rax+0x0],cl
  435522:	rex.W add BYTE PTR [rax+0x0],cl
  435526:	rex.W add BYTE PTR [rax+0x0],cl
  43552a:	rex.W add BYTE PTR [rax+0x0],cl
  43552e:	rex.W add BYTE PTR [rax+0x0],cl
  435532:	rex.W add BYTE PTR [rax+0x0],cl
  435536:	rex.W add BYTE PTR [rax+0x0],cl
  43553a:	rex.W add BYTE PTR [rax+0x0],cl
  43553e:	rex.W add BYTE PTR [rax+0x0],cl
  435542:	rex.W add BYTE PTR [rax+0x0],cl
  435546:	rex.W add BYTE PTR [rax+0x0],cl
  43554a:	rex.W add BYTE PTR [rax+0x0],cl
  43554e:	rex.W add BYTE PTR [rax+0x0],cl
  435552:	rex.W add BYTE PTR [rcx],bpl
  435555:	add    BYTE PTR [rax+0x0],cl
  435558:	rex.W add BYTE PTR [rax+0x0],cl
  43555c:	rex.W add BYTE PTR [rax+0x0],cl
  435560:	push   rbp
  435561:	add    BYTE PTR [rax+0x0],cl
  435564:	rex.W add BYTE PTR [rax+0x0],cl
  435568:	rex.W add BYTE PTR [rax+0x0],cl
  43556c:	rex.W add BYTE PTR [rax+0x0],cl
  435570:	rex.W add BYTE PTR [rax+0x0],cl
  435574:	rex.W add BYTE PTR [rax+0x0],cl
  435578:	rex.W add BYTE PTR [rax+0x0],cl
  43557c:	rex.W add BYTE PTR [rax+0x0],cl
  435580:	rex.W add BYTE PTR [rax+0x0],cl
  435584:	rex.W add BYTE PTR [rax+0x0],cl
  435588:	rex.W add BYTE PTR [rax+0x0],cl
  43558c:	rex.W add BYTE PTR [rax+0x0],cl
  435590:	rex.W add BYTE PTR [rax+0x0],cl
  435594:	rex.W add BYTE PTR [rax+0x0],cl
  435598:	rex.W add BYTE PTR [rax+0x0],cl
  43559c:	rex.W add BYTE PTR [rax+0x0],cl
  4355a0:	rex.W add BYTE PTR [rax+0x0],cl
  4355a4:	rex.W add BYTE PTR [rax+0x0],cl
  4355a8:	rex.W add BYTE PTR [rax+0x0],cl
  4355ac:	rex.W add BYTE PTR [rcx],bpl
  4355af:	add    BYTE PTR [rsi+0x0],dl
  4355b2:	push   rdi
  4355b3:	add    BYTE PTR [rax+0x0],bl
  4355b6:	push   rdi
  4355b7:	add    BYTE PTR [rsi+0x0],dl
  4355ba:	push   rsi
  4355bb:	add    BYTE PTR [rsi+0x0],dl
  4355be:	push   rsi
  4355bf:	add    BYTE PTR [rsi+0x0],dl
  4355c2:	push   rsi
  4355c3:	add    BYTE PTR [rsi+0x0],dl
  4355c6:	push   rsi
  4355c7:	add    BYTE PTR [rsi+0x0],dl
  4355ca:	push   rsi
  4355cb:	add    BYTE PTR [rsi+0x0],dl
  4355ce:	pop    rcx
  4355cf:	add    BYTE PTR [rsi+0x0],dl
  4355d2:	push   rsi
  4355d3:	add    BYTE PTR [rsi+0x0],dl
  4355d6:	push   rsi
  4355d7:	add    BYTE PTR [rsi+0x0],dl
  4355da:	push   rsi
  4355db:	add    BYTE PTR [rsi+0x0],dl
  4355de:	push   rsi
  4355df:	add    BYTE PTR [rsi+0x0],dl
  4355e2:	push   rsi
  4355e3:	add    BYTE PTR [rsi+0x0],dl
  4355e6:	push   rsi
  4355e7:	add    BYTE PTR [rsi+0x0],dl
  4355ea:	push   rsi
  4355eb:	add    BYTE PTR [rsi+0x0],dl
  4355ee:	push   rsi
  4355ef:	add    BYTE PTR [rdx+0x0],bl
  4355f2:	push   rsi
  4355f3:	add    BYTE PTR [rsi+0x0],dl
  4355f6:	push   rsi
  4355f7:	add    BYTE PTR [rsi+0x0],dl
  4355fa:	push   rsi
  4355fb:	add    BYTE PTR [rsi+0x0],dl
  4355fe:	push   rsi
  4355ff:	add    BYTE PTR [rsi+0x0],dl
  435602:	pop    rdx
  435603:	add    BYTE PTR [rsi+0x0],dl
  435606:	push   rsi
  435607:	add    BYTE PTR [rcx],ch
  435609:	add    BYTE PTR [rsi+0x0],dl
  43560c:	push   rdi
  43560d:	add    BYTE PTR [rax+0x0],bl
  435610:	push   rdi
  435611:	add    BYTE PTR [rsi+0x0],dl
  435614:	push   rsi
  435615:	add    BYTE PTR [rsi+0x0],dl
  435618:	push   rsi
  435619:	add    BYTE PTR [rsi+0x0],dl
  43561c:	push   rsi
  43561d:	add    BYTE PTR [rsi+0x0],dl
  435620:	push   rsi
  435621:	add    BYTE PTR [rsi+0x0],dl
  435624:	push   rsi
  435625:	add    BYTE PTR [rsi+0x0],dl
  435628:	pop    rcx
  435629:	add    BYTE PTR [rsi+0x0],dl
  43562c:	push   rsi
  43562d:	add    BYTE PTR [rsi+0x0],dl
  435630:	push   rsi
  435631:	add    BYTE PTR [rsi+0x0],dl
  435634:	push   rsi
  435635:	add    BYTE PTR [rsi+0x0],dl
  435638:	push   rsi
  435639:	add    BYTE PTR [rsi+0x0],dl
  43563c:	push   rsi
  43563d:	add    BYTE PTR [rsi+0x0],dl
  435640:	push   rsi
  435641:	add    BYTE PTR [rsi+0x0],dl
  435644:	push   rsi
  435645:	add    BYTE PTR [rsi+0x0],dl
  435648:	push   rsi
  435649:	add    BYTE PTR [rdx+0x0],bl
  43564c:	push   rsi
  43564d:	add    BYTE PTR [rsi+0x0],dl
  435650:	push   rsi
  435651:	add    BYTE PTR [rsi+0x0],dl
  435654:	push   rsi
  435655:	add    BYTE PTR [rsi+0x0],dl
  435658:	push   rsi
  435659:	add    BYTE PTR [rsi+0x0],dl
  43565c:	pop    rdx
  43565d:	add    BYTE PTR [rsi+0x0],dl
  435660:	push   rsi
  435661:	add    BYTE PTR [rcx],ch
  435663:	add    BYTE PTR [rax+0x0],dl
  435666:	push   rax
  435667:	add    BYTE PTR [rax+0x0],dl
  43566a:	push   rax
  43566b:	add    BYTE PTR [rax+0x0],dl
  43566e:	push   rax
  43566f:	add    BYTE PTR [rax+0x0],dl
  435672:	push   rax
  435673:	add    BYTE PTR [rax+0x0],dl
  435676:	pop    rbx
  435677:	add    BYTE PTR [rax+0x0],dl
  43567a:	push   rax
  43567b:	add    BYTE PTR [rax+0x0],dl
  43567e:	push   rax
  43567f:	add    BYTE PTR [rax+0x0],dl
  435682:	push   rax
  435683:	add    BYTE PTR [rax+0x0],dl
  435686:	push   rax
  435687:	add    BYTE PTR [rax+0x0],dl
  43568a:	push   rax
  43568b:	add    BYTE PTR [rax+0x0],dl
  43568e:	push   rax
  43568f:	add    BYTE PTR [rax+0x0],dl
  435692:	push   rax
  435693:	add    BYTE PTR [rax+0x0],dl
  435696:	push   rax
  435697:	add    BYTE PTR [rax+0x0],dl
  43569a:	push   rax
  43569b:	add    BYTE PTR [rax+0x0],dl
  43569e:	push   rax
  43569f:	add    BYTE PTR [rax+0x0],dl
  4356a2:	push   rax
  4356a3:	add    BYTE PTR [rax+0x0],dl
  4356a6:	push   rax
  4356a7:	add    BYTE PTR [rax+0x0],dl
  4356aa:	push   rax
  4356ab:	add    BYTE PTR [rax+0x0],dl
  4356ae:	push   rax
  4356af:	add    BYTE PTR [rax+0x0],dl
  4356b2:	push   rax
  4356b3:	add    BYTE PTR [rax+0x0],dl
  4356b6:	push   rax
  4356b7:	add    BYTE PTR [rax+0x0],dl
  4356ba:	push   rax
  4356bb:	add    BYTE PTR [rcx],ch
  4356bd:	add    BYTE PTR [rax+0x0],dl
  4356c0:	push   rax
  4356c1:	add    BYTE PTR [rax+0x0],dl
  4356c4:	push   rax
  4356c5:	add    BYTE PTR [rax+0x0],dl
  4356c8:	push   rax
  4356c9:	add    BYTE PTR [rax+0x0],dl
  4356cc:	push   rax
  4356cd:	add    BYTE PTR [rax+0x0],dl
  4356d0:	pop    rbx
  4356d1:	add    BYTE PTR [rax+0x0],dl
  4356d4:	push   rax
  4356d5:	add    BYTE PTR [rax+0x0],dl
  4356d8:	push   rax
  4356d9:	add    BYTE PTR [rax+0x0],dl
  4356dc:	push   rax
  4356dd:	add    BYTE PTR [rax+0x0],dl
  4356e0:	push   rax
  4356e1:	add    BYTE PTR [rax+0x0],dl
  4356e4:	push   rax
  4356e5:	add    BYTE PTR [rax+0x0],dl
  4356e8:	push   rax
  4356e9:	add    BYTE PTR [rax+0x0],dl
  4356ec:	push   rax
  4356ed:	add    BYTE PTR [rax+0x0],dl
  4356f0:	push   rax
  4356f1:	add    BYTE PTR [rax+0x0],dl
  4356f4:	push   rax
  4356f5:	add    BYTE PTR [rax+0x0],dl
  4356f8:	push   rax
  4356f9:	add    BYTE PTR [rax+0x0],dl
  4356fc:	push   rax
  4356fd:	add    BYTE PTR [rax+0x0],dl
  435700:	push   rax
  435701:	add    BYTE PTR [rax+0x0],dl
  435704:	push   rax
  435705:	add    BYTE PTR [rax+0x0],dl
  435708:	push   rax
  435709:	add    BYTE PTR [rax+0x0],dl
  43570c:	push   rax
  43570d:	add    BYTE PTR [rax+0x0],dl
  435710:	push   rax
  435711:	add    BYTE PTR [rax+0x0],dl
  435714:	push   rax
  435715:	add    BYTE PTR [rcx],ch
  435717:	add    BYTE PTR [rax+rax*1+0x5d],bl
  43571b:	add    BYTE PTR [rsi+0x0],bl
  43571e:	pop    rbp
  43571f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435723:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435727:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43572b:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43572f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435733:	add    BYTE PTR [rax+rax*1+0x5f],bl
  435737:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43573b:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43573f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435743:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435747:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43574b:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43574f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435753:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435757:	add    BYTE PTR [rax+0x0],ah
  43575a:	pop    rsp
  43575b:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43575f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435763:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435767:	add    BYTE PTR [rax+rax*1+0x60],bl
  43576b:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43576f:	add    BYTE PTR [rcx],ch
  435771:	add    BYTE PTR [rax+rax*1+0x5d],bl
  435775:	add    BYTE PTR [rsi+0x0],bl
  435778:	pop    rbp
  435779:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43577d:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435781:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435785:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435789:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43578d:	add    BYTE PTR [rax+rax*1+0x5f],bl
  435791:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435795:	add    BYTE PTR [rax+rax*1+0x5c],bl
  435799:	add    BYTE PTR [rax+rax*1+0x5c],bl
  43579d:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357a1:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357a5:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357a9:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357ad:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357b1:	add    BYTE PTR [rax+0x0],ah
  4357b4:	pop    rsp
  4357b5:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357b9:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357bd:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357c1:	add    BYTE PTR [rax+rax*1+0x60],bl
  4357c5:	add    BYTE PTR [rax+rax*1+0x5c],bl
  4357c9:	add    BYTE PTR [rcx],ch
  4357cb:	add    BYTE PTR [rcx+0x0],ah
  4357ce:	(bad)  
  4357cf:	add    BYTE PTR [rbx+0x0],ah
  4357d2:	(bad)  
  4357d3:	add    BYTE PTR [rcx+0x0],ah
  4357d6:	(bad)  
  4357d7:	add    BYTE PTR [rcx+0x0],ah
  4357da:	(bad)  
  4357db:	add    BYTE PTR [rcx+0x0],ah
  4357de:	(bad)  
  4357df:	add    BYTE PTR [rcx+0x0],ah
  4357e2:	(bad)  
  4357e3:	add    BYTE PTR [rcx+0x0],ah
  4357e6:	(bad)  
  4357e7:	add    BYTE PTR [rcx+0x0],ah
  4357ea:	(bad)  
  4357eb:	add    BYTE PTR [rcx+0x0],ah
  4357ee:	(bad)  
  4357ef:	add    BYTE PTR [rcx+0x0],ah
  4357f2:	(bad)  
  4357f3:	add    BYTE PTR [rcx+0x0],ah
  4357f6:	(bad)  
  4357f7:	add    BYTE PTR [rcx+0x0],ah
  4357fa:	(bad)  
  4357fb:	add    BYTE PTR [rcx+0x0],ah
  4357fe:	(bad)  
  4357ff:	add    BYTE PTR [rcx+0x0],ah
  435802:	(bad)  
  435803:	add    BYTE PTR [rcx+0x0],ah
  435806:	(bad)  
  435807:	add    BYTE PTR [rcx+0x0],ah
  43580a:	(bad)  
  43580b:	add    BYTE PTR [rcx+0x0],ah
  43580e:	(bad)  
  43580f:	add    BYTE PTR [rdx+0x0],ah
  435812:	(bad)  
  435813:	add    BYTE PTR [rcx+0x0],ah
  435816:	(bad)  
  435817:	add    BYTE PTR [rcx+0x0],ah
  43581a:	(bad)  
  43581b:	add    BYTE PTR [rcx+0x0],ah
  43581e:	(bad)  
  43581f:	add    BYTE PTR [rcx+0x0],ah
  435822:	(bad)  
  435823:	add    BYTE PTR [rcx],ch
  435825:	add    BYTE PTR [rcx+0x0],ah
  435828:	(bad)  
  435829:	add    BYTE PTR [rbx+0x0],ah
  43582c:	(bad)  
  43582d:	add    BYTE PTR [rcx+0x0],ah
  435830:	(bad)  
  435831:	add    BYTE PTR [rcx+0x0],ah
  435834:	(bad)  
  435835:	add    BYTE PTR [rcx+0x0],ah
  435838:	(bad)  
  435839:	add    BYTE PTR [rcx+0x0],ah
  43583c:	(bad)  
  43583d:	add    BYTE PTR [rcx+0x0],ah
  435840:	(bad)  
  435841:	add    BYTE PTR [rcx+0x0],ah
  435844:	(bad)  
  435845:	add    BYTE PTR [rcx+0x0],ah
  435848:	(bad)  
  435849:	add    BYTE PTR [rcx+0x0],ah
  43584c:	(bad)  
  43584d:	add    BYTE PTR [rcx+0x0],ah
  435850:	(bad)  
  435851:	add    BYTE PTR [rcx+0x0],ah
  435854:	(bad)  
  435855:	add    BYTE PTR [rcx+0x0],ah
  435858:	(bad)  
  435859:	add    BYTE PTR [rcx+0x0],ah
  43585c:	(bad)  
  43585d:	add    BYTE PTR [rcx+0x0],ah
  435860:	(bad)  
  435861:	add    BYTE PTR [rcx+0x0],ah
  435864:	(bad)  
  435865:	add    BYTE PTR [rcx+0x0],ah
  435868:	(bad)  
  435869:	add    BYTE PTR [rdx+0x0],ah
  43586c:	(bad)  
  43586d:	add    BYTE PTR [rcx+0x0],ah
  435870:	(bad)  
  435871:	add    BYTE PTR [rcx+0x0],ah
  435874:	(bad)  
  435875:	add    BYTE PTR [rcx+0x0],ah
  435878:	(bad)  
  435879:	add    BYTE PTR [rcx+0x0],ah
  43587c:	(bad)  
  43587d:	add    BYTE PTR [rcx],ch
  43587f:	add    BYTE PTR [rax+rax*1+0x65],ah
  435883:	add    BYTE PTR [rsi+0x0],ah
  435886:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
  43588b:	add    BYTE PTR [rax+rax*1+0x64],ah
  43588f:	add    BYTE PTR [rax+rax*1+0x64],ah
  435893:	add    BYTE PTR [rax+rax*1+0x64],ah
  435897:	add    BYTE PTR [rax+rax*1+0x64],ah
  43589b:	add    BYTE PTR [rax+rax*1+0x64],ah
  43589f:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358a3:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358a7:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358ab:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358af:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358b3:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358b7:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358bb:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358bf:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358c3:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358c7:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358cb:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358cf:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358d3:	add    BYTE PTR [rax+rax*1+0x67],ah
  4358d7:	add    BYTE PTR [rcx],ch
  4358d9:	add    BYTE PTR [rax+rax*1+0x65],ah
  4358dd:	add    BYTE PTR [rsi+0x0],ah
  4358e0:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
  4358e5:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358e9:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358ed:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358f1:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358f5:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358f9:	add    BYTE PTR [rax+rax*1+0x64],ah
  4358fd:	add    BYTE PTR [rax+rax*1+0x64],ah
  435901:	add    BYTE PTR [rax+rax*1+0x64],ah
  435905:	add    BYTE PTR [rax+rax*1+0x64],ah
  435909:	add    BYTE PTR [rax+rax*1+0x64],ah
  43590d:	add    BYTE PTR [rax+rax*1+0x64],ah
  435911:	add    BYTE PTR [rax+rax*1+0x64],ah
  435915:	add    BYTE PTR [rax+rax*1+0x64],ah
  435919:	add    BYTE PTR [rax+rax*1+0x64],ah
  43591d:	add    BYTE PTR [rax+rax*1+0x64],ah
  435921:	add    BYTE PTR [rax+rax*1+0x64],ah
  435925:	add    BYTE PTR [rax+rax*1+0x64],ah
  435929:	add    BYTE PTR [rax+rax*1+0x64],ah
  43592d:	add    BYTE PTR [rax+rax*1+0x67],ah
  435931:	add    BYTE PTR [rcx],ch
  435933:	add    BYTE PTR [rax+0x0],ch
  435936:	imul   eax,DWORD PTR [rax],0x69006a
  43593c:	push   0x68006b00
  435941:	add    BYTE PTR [rax+0x0],ch
  435944:	push   0x68006c00
  435949:	add    BYTE PTR [rax+0x0],ch
  43594c:	push   0x68006800
  435951:	add    BYTE PTR [rax+0x0],ch
  435954:	push   0x68006800
  435959:	add    BYTE PTR [rax+0x0],ch
  43595c:	ins    DWORD PTR es:[rdi],dx
  43595d:	add    BYTE PTR [rax+0x0],ch
  435960:	push   0x68006800
  435965:	add    BYTE PTR [rax+0x0],ch
  435968:	push   0x68006800
  43596d:	add    BYTE PTR [rax+0x0],ch
  435970:	push   0x68006800
  435975:	add    BYTE PTR [rax+0x0],ch
  435978:	imul   eax,DWORD PTR [rax],0x68006e
  43597e:	push   0x68006800
  435983:	add    BYTE PTR [rax+0x0],ch
  435986:	push   0x68006800
  43598b:	add    BYTE PTR [rcx],ch
  43598d:	add    BYTE PTR [rax+0x0],ch
  435990:	imul   eax,DWORD PTR [rax],0x69006a
  435996:	push   0x68006b00
  43599b:	add    BYTE PTR [rax+0x0],ch
  43599e:	push   0x68006c00
  4359a3:	add    BYTE PTR [rax+0x0],ch
  4359a6:	push   0x68006800
  4359ab:	add    BYTE PTR [rax+0x0],ch
  4359ae:	push   0x68006800
  4359b3:	add    BYTE PTR [rax+0x0],ch
  4359b6:	ins    DWORD PTR es:[rdi],dx
  4359b7:	add    BYTE PTR [rax+0x0],ch
  4359ba:	push   0x68006800
  4359bf:	add    BYTE PTR [rax+0x0],ch
  4359c2:	push   0x68006800
  4359c7:	add    BYTE PTR [rax+0x0],ch
  4359ca:	push   0x68006800
  4359cf:	add    BYTE PTR [rax+0x0],ch
  4359d2:	imul   eax,DWORD PTR [rax],0x68006e
  4359d8:	push   0x68006800
  4359dd:	add    BYTE PTR [rax+0x0],ch
  4359e0:	push   0x68006800
  4359e5:	add    BYTE PTR [rcx],ch
  4359e7:	add    BYTE PTR [rdi+0x0],ch
  4359ea:	outs   dx,DWORD PTR ds:[rsi]
  4359eb:	add    BYTE PTR [rdi+0x0],ch
  4359ee:	outs   dx,DWORD PTR ds:[rsi]
  4359ef:	add    BYTE PTR [rdi+0x0],ch
  4359f2:	outs   dx,DWORD PTR ds:[rsi]
  4359f3:	add    BYTE PTR [rdi+0x0],ch
  4359f6:	outs   dx,DWORD PTR ds:[rsi]
  4359f7:	add    BYTE PTR [rdi+0x0],ch
  4359fa:	jo     0x4359fc
  4359fc:	outs   dx,DWORD PTR ds:[rsi]
  4359fd:	add    BYTE PTR [rdi+0x0],ch
  435a00:	outs   dx,DWORD PTR ds:[rsi]
  435a01:	add    BYTE PTR [rdi+0x0],ch
  435a04:	outs   dx,DWORD PTR ds:[rsi]
  435a05:	add    BYTE PTR [rdi+0x0],ch
  435a08:	outs   dx,DWORD PTR ds:[rsi]
  435a09:	add    BYTE PTR [rdi+0x0],ch
  435a0c:	outs   dx,DWORD PTR ds:[rsi]
  435a0d:	add    BYTE PTR [rdi+0x0],ch
  435a10:	outs   dx,DWORD PTR ds:[rsi]
  435a11:	add    BYTE PTR [rdi+0x0],ch
  435a14:	outs   dx,DWORD PTR ds:[rsi]
  435a15:	add    BYTE PTR [rdi+0x0],ch
  435a18:	outs   dx,DWORD PTR ds:[rsi]
  435a19:	add    BYTE PTR [rdi+0x0],ch
  435a1c:	outs   dx,DWORD PTR ds:[rsi]
  435a1d:	add    BYTE PTR [rdi+0x0],ch
  435a20:	outs   dx,DWORD PTR ds:[rsi]
  435a21:	add    BYTE PTR [rdi+0x0],ch
  435a24:	outs   dx,DWORD PTR ds:[rsi]
  435a25:	add    BYTE PTR [rdi+0x0],ch
  435a28:	outs   dx,DWORD PTR ds:[rsi]
  435a29:	add    BYTE PTR [rdi+0x0],ch
  435a2c:	jno    0x435a2e
  435a2e:	outs   dx,DWORD PTR ds:[rsi]
  435a2f:	add    BYTE PTR [rdi+0x0],ch
  435a32:	outs   dx,DWORD PTR ds:[rsi]
  435a33:	add    BYTE PTR [rdi+0x0],ch
  435a36:	outs   dx,DWORD PTR ds:[rsi]
  435a37:	add    BYTE PTR [rdi+0x0],ch
  435a3a:	outs   dx,DWORD PTR ds:[rsi]
  435a3b:	add    BYTE PTR [rdi+0x0],ch
  435a3e:	outs   dx,DWORD PTR ds:[rsi]
  435a3f:	add    BYTE PTR [rcx],ch
  435a41:	add    BYTE PTR [rdi+0x0],ch
  435a44:	outs   dx,DWORD PTR ds:[rsi]
  435a45:	add    BYTE PTR [rdi+0x0],ch
  435a48:	outs   dx,DWORD PTR ds:[rsi]
  435a49:	add    BYTE PTR [rdi+0x0],ch
  435a4c:	outs   dx,DWORD PTR ds:[rsi]
  435a4d:	add    BYTE PTR [rdi+0x0],ch
  435a50:	outs   dx,DWORD PTR ds:[rsi]
  435a51:	add    BYTE PTR [rdi+0x0],ch
  435a54:	jo     0x435a56
  435a56:	outs   dx,DWORD PTR ds:[rsi]
  435a57:	add    BYTE PTR [rdi+0x0],ch
  435a5a:	outs   dx,DWORD PTR ds:[rsi]
  435a5b:	add    BYTE PTR [rdi+0x0],ch
  435a5e:	outs   dx,DWORD PTR ds:[rsi]
  435a5f:	add    BYTE PTR [rdi+0x0],ch
  435a62:	outs   dx,DWORD PTR ds:[rsi]
  435a63:	add    BYTE PTR [rdi+0x0],ch
  435a66:	outs   dx,DWORD PTR ds:[rsi]
  435a67:	add    BYTE PTR [rdi+0x0],ch
  435a6a:	outs   dx,DWORD PTR ds:[rsi]
  435a6b:	add    BYTE PTR [rdi+0x0],ch
  435a6e:	outs   dx,DWORD PTR ds:[rsi]
  435a6f:	add    BYTE PTR [rdi+0x0],ch
  435a72:	outs   dx,DWORD PTR ds:[rsi]
  435a73:	add    BYTE PTR [rdi+0x0],ch
  435a76:	outs   dx,DWORD PTR ds:[rsi]
  435a77:	add    BYTE PTR [rdi+0x0],ch
  435a7a:	outs   dx,DWORD PTR ds:[rsi]
  435a7b:	add    BYTE PTR [rdi+0x0],ch
  435a7e:	outs   dx,DWORD PTR ds:[rsi]
  435a7f:	add    BYTE PTR [rdi+0x0],ch
  435a82:	outs   dx,DWORD PTR ds:[rsi]
  435a83:	add    BYTE PTR [rdi+0x0],ch
  435a86:	jno    0x435a88
  435a88:	outs   dx,DWORD PTR ds:[rsi]
  435a89:	add    BYTE PTR [rdi+0x0],ch
  435a8c:	outs   dx,DWORD PTR ds:[rsi]
  435a8d:	add    BYTE PTR [rdi+0x0],ch
  435a90:	outs   dx,DWORD PTR ds:[rsi]
  435a91:	add    BYTE PTR [rdi+0x0],ch
  435a94:	outs   dx,DWORD PTR ds:[rsi]
  435a95:	add    BYTE PTR [rdi+0x0],ch
  435a98:	outs   dx,DWORD PTR ds:[rsi]
  435a99:	add    BYTE PTR [rcx],ch
  435a9b:	add    BYTE PTR [rdx+0x0],dh
  435a9e:	jb     0x435aa0
  435aa0:	jb     0x435aa2
  435aa2:	jb     0x435aa4
  435aa4:	jb     0x435aa6
  435aa6:	jb     0x435aa8
  435aa8:	jb     0x435aaa
  435aaa:	jb     0x435aac
  435aac:	jb     0x435aae
  435aae:	jb     0x435ab0
  435ab0:	jb     0x435ab2
  435ab2:	jb     0x435ab4
  435ab4:	jb     0x435ab6
  435ab6:	jb     0x435ab8
  435ab8:	jb     0x435aba
  435aba:	jb     0x435abc
  435abc:	jb     0x435abe
  435abe:	jb     0x435ac0
  435ac0:	jb     0x435ac2
  435ac2:	jb     0x435ac4
  435ac4:	jb     0x435ac6
  435ac6:	jb     0x435ac8
  435ac8:	jb     0x435aca
  435aca:	jb     0x435acc
  435acc:	jb     0x435ace
  435ace:	jb     0x435ad0
  435ad0:	jb     0x435ad2
  435ad2:	jb     0x435ad4
  435ad4:	jb     0x435ad6
  435ad6:	jb     0x435ad8
  435ad8:	jb     0x435ada
  435ada:	jb     0x435adc
  435adc:	jb     0x435ade
  435ade:	jb     0x435ae0
  435ae0:	jb     0x435ae2
  435ae2:	jae    0x435ae4
  435ae4:	jb     0x435ae6
  435ae6:	jb     0x435ae8
  435ae8:	jb     0x435aea
  435aea:	jb     0x435aec
  435aec:	jb     0x435aee
  435aee:	jb     0x435af0
  435af0:	jb     0x435af2
  435af2:	jb     0x435af4
  435af4:	sub    DWORD PTR [rax],eax
  435af6:	jb     0x435af8
  435af8:	jb     0x435afa
  435afa:	jb     0x435afc
  435afc:	jb     0x435afe
  435afe:	jb     0x435b00
  435b00:	jb     0x435b02
  435b02:	jb     0x435b04
  435b04:	jb     0x435b06
  435b06:	jb     0x435b08
  435b08:	jb     0x435b0a
  435b0a:	jb     0x435b0c
  435b0c:	jb     0x435b0e
  435b0e:	jb     0x435b10
  435b10:	jb     0x435b12
  435b12:	jb     0x435b14
  435b14:	jb     0x435b16
  435b16:	jb     0x435b18
  435b18:	jb     0x435b1a
  435b1a:	jb     0x435b1c
  435b1c:	jb     0x435b1e
  435b1e:	jb     0x435b20
  435b20:	jb     0x435b22
  435b22:	jb     0x435b24
  435b24:	jb     0x435b26
  435b26:	jb     0x435b28
  435b28:	jb     0x435b2a
  435b2a:	jb     0x435b2c
  435b2c:	jb     0x435b2e
  435b2e:	jb     0x435b30
  435b30:	jb     0x435b32
  435b32:	jb     0x435b34
  435b34:	jb     0x435b36
  435b36:	jb     0x435b38
  435b38:	jb     0x435b3a
  435b3a:	jb     0x435b3c
  435b3c:	jae    0x435b3e
  435b3e:	jb     0x435b40
  435b40:	jb     0x435b42
  435b42:	jb     0x435b44
  435b44:	jb     0x435b46
  435b46:	jb     0x435b48
  435b48:	jb     0x435b4a
  435b4a:	jb     0x435b4c
  435b4c:	jb     0x435b4e
  435b4e:	sub    DWORD PTR [rax],eax
  435b50:	je     0x435b52
  435b52:	je     0x435b54
  435b54:	je     0x435b56
  435b56:	je     0x435b58
  435b58:	je     0x435b5a
  435b5a:	jne    0x435b5c
  435b5c:	je     0x435b5e
  435b5e:	je     0x435b60
  435b60:	je     0x435b62
  435b62:	je     0x435b64
  435b64:	je     0x435b66
  435b66:	je     0x435b68
  435b68:	je     0x435b6a
  435b6a:	je     0x435b6c
  435b6c:	je     0x435b6e
  435b6e:	je     0x435b70
  435b70:	je     0x435b72
  435b72:	je     0x435b74
  435b74:	je     0x435b76
  435b76:	je     0x435b78
  435b78:	je     0x435b7a
  435b7a:	je     0x435b7c
  435b7c:	je     0x435b7e
  435b7e:	je     0x435b80
  435b80:	je     0x435b82
  435b82:	je     0x435b84
  435b84:	je     0x435b86
  435b86:	je     0x435b88
  435b88:	je     0x435b8a
  435b8a:	je     0x435b8c
  435b8c:	je     0x435b8e
  435b8e:	je     0x435b90
  435b90:	je     0x435b92
  435b92:	je     0x435b94
  435b94:	je     0x435b96
  435b96:	je     0x435b98
  435b98:	je     0x435b9a
  435b9a:	je     0x435b9c
  435b9c:	je     0x435b9e
  435b9e:	je     0x435ba0
  435ba0:	je     0x435ba2
  435ba2:	je     0x435ba4
  435ba4:	je     0x435ba6
  435ba6:	je     0x435ba8
  435ba8:	sub    DWORD PTR [rax],eax
  435baa:	je     0x435bac
  435bac:	je     0x435bae
  435bae:	je     0x435bb0
  435bb0:	je     0x435bb2
  435bb2:	je     0x435bb4
  435bb4:	jne    0x435bb6
  435bb6:	je     0x435bb8
  435bb8:	je     0x435bba
  435bba:	je     0x435bbc
  435bbc:	je     0x435bbe
  435bbe:	je     0x435bc0
  435bc0:	je     0x435bc2
  435bc2:	je     0x435bc4
  435bc4:	je     0x435bc6
  435bc6:	je     0x435bc8
  435bc8:	je     0x435bca
  435bca:	je     0x435bcc
  435bcc:	je     0x435bce
  435bce:	je     0x435bd0
  435bd0:	je     0x435bd2
  435bd2:	je     0x435bd4
  435bd4:	je     0x435bd6
  435bd6:	je     0x435bd8
  435bd8:	je     0x435bda
  435bda:	je     0x435bdc
  435bdc:	je     0x435bde
  435bde:	je     0x435be0
  435be0:	je     0x435be2
  435be2:	je     0x435be4
  435be4:	je     0x435be6
  435be6:	je     0x435be8
  435be8:	je     0x435bea
  435bea:	je     0x435bec
  435bec:	je     0x435bee
  435bee:	je     0x435bf0
  435bf0:	je     0x435bf2
  435bf2:	je     0x435bf4
  435bf4:	je     0x435bf6
  435bf6:	je     0x435bf8
  435bf8:	je     0x435bfa
  435bfa:	je     0x435bfc
  435bfc:	je     0x435bfe
  435bfe:	je     0x435c00
  435c00:	je     0x435c02
  435c02:	sub    DWORD PTR [rax],eax
  435c04:	jbe    0x435c06
  435c06:	ja     0x435c08
  435c08:	js     0x435c0a
  435c0a:	ja     0x435c0c
  435c0c:	jbe    0x435c0e
  435c0e:	jbe    0x435c10
  435c10:	jbe    0x435c12
  435c12:	jbe    0x435c14
  435c14:	jbe    0x435c16
  435c16:	jbe    0x435c18
  435c18:	jbe    0x435c1a
  435c1a:	jbe    0x435c1c
  435c1c:	jbe    0x435c1e
  435c1e:	jbe    0x435c20
  435c20:	jbe    0x435c22
  435c22:	jbe    0x435c24
  435c24:	jbe    0x435c26
  435c26:	jbe    0x435c28
  435c28:	jbe    0x435c2a
  435c2a:	jbe    0x435c2c
  435c2c:	jbe    0x435c2e
  435c2e:	jbe    0x435c30
  435c30:	jbe    0x435c32
  435c32:	jbe    0x435c34
  435c34:	jbe    0x435c36
  435c36:	jbe    0x435c38
  435c38:	jbe    0x435c3a
  435c3a:	jbe    0x435c3c
  435c3c:	jbe    0x435c3e
  435c3e:	jbe    0x435c40
  435c40:	jbe    0x435c42
  435c42:	jbe    0x435c44
  435c44:	jbe    0x435c46
  435c46:	jbe    0x435c48
  435c48:	jbe    0x435c4a
  435c4a:	jbe    0x435c4c
  435c4c:	jbe    0x435c4e
  435c4e:	jbe    0x435c50
  435c50:	jbe    0x435c52
  435c52:	jbe    0x435c54
  435c54:	jbe    0x435c56
  435c56:	jbe    0x435c58
  435c58:	jbe    0x435c5a
  435c5a:	jbe    0x435c5c
  435c5c:	sub    DWORD PTR [rax],eax
  435c5e:	jbe    0x435c60
  435c60:	ja     0x435c62
  435c62:	js     0x435c64
  435c64:	ja     0x435c66
  435c66:	jbe    0x435c68
  435c68:	jbe    0x435c6a
  435c6a:	jbe    0x435c6c
  435c6c:	jbe    0x435c6e
  435c6e:	jbe    0x435c70
  435c70:	jbe    0x435c72
  435c72:	jbe    0x435c74
  435c74:	jbe    0x435c76
  435c76:	jbe    0x435c78
  435c78:	jbe    0x435c7a
  435c7a:	jbe    0x435c7c
  435c7c:	jbe    0x435c7e
  435c7e:	jbe    0x435c80
  435c80:	jbe    0x435c82
  435c82:	jbe    0x435c84
  435c84:	jbe    0x435c86
  435c86:	jbe    0x435c88
  435c88:	jbe    0x435c8a
  435c8a:	jbe    0x435c8c
  435c8c:	jbe    0x435c8e
  435c8e:	jbe    0x435c90
  435c90:	jbe    0x435c92
  435c92:	jbe    0x435c94
  435c94:	jbe    0x435c96
  435c96:	jbe    0x435c98
  435c98:	jbe    0x435c9a
  435c9a:	jbe    0x435c9c
  435c9c:	jbe    0x435c9e
  435c9e:	jbe    0x435ca0
  435ca0:	jbe    0x435ca2
  435ca2:	jbe    0x435ca4
  435ca4:	jbe    0x435ca6
  435ca6:	jbe    0x435ca8
  435ca8:	jbe    0x435caa
  435caa:	jbe    0x435cac
  435cac:	jbe    0x435cae
  435cae:	jbe    0x435cb0
  435cb0:	jbe    0x435cb2
  435cb2:	jbe    0x435cb4
  435cb4:	jbe    0x435cb6
  435cb6:	sub    DWORD PTR [rax],eax
  435cb8:	jns    0x435cba
  435cba:	jns    0x435cbc
  435cbc:	jns    0x435cbe
  435cbe:	jns    0x435cc0
  435cc0:	jns    0x435cc2
  435cc2:	jns    0x435cc4
  435cc4:	jns    0x435cc6
  435cc6:	jns    0x435cc8
  435cc8:	jns    0x435cca
  435cca:	jns    0x435ccc
  435ccc:	jns    0x435cce
  435cce:	jns    0x435cd0
  435cd0:	jns    0x435cd2
  435cd2:	jns    0x435cd4
  435cd4:	jns    0x435cd6
  435cd6:	jns    0x435cd8
  435cd8:	jns    0x435cda
  435cda:	jns    0x435cdc
  435cdc:	jns    0x435cde
  435cde:	jns    0x435ce0
  435ce0:	jns    0x435ce2
  435ce2:	jns    0x435ce4
  435ce4:	jns    0x435ce6
  435ce6:	jns    0x435ce8
  435ce8:	jns    0x435cea
  435cea:	jns    0x435cec
  435cec:	jns    0x435cee
  435cee:	jns    0x435cf0
  435cf0:	jns    0x435cf2
  435cf2:	jns    0x435cf4
  435cf4:	jns    0x435cf6
  435cf6:	jns    0x435cf8
  435cf8:	jns    0x435cfa
  435cfa:	jns    0x435cfc
  435cfc:	jp     0x435cfe
  435cfe:	jns    0x435d00
  435d00:	jns    0x435d02
  435d02:	jns    0x435d04
  435d04:	jns    0x435d06
  435d06:	jns    0x435d08
  435d08:	jns    0x435d0a
  435d0a:	jns    0x435d0c
  435d0c:	jns    0x435d0e
  435d0e:	jns    0x435d10
  435d10:	sub    DWORD PTR [rax],eax
  435d12:	jns    0x435d14
  435d14:	jns    0x435d16
  435d16:	jns    0x435d18
  435d18:	jns    0x435d1a
  435d1a:	jns    0x435d1c
  435d1c:	jns    0x435d1e
  435d1e:	jns    0x435d20
  435d20:	jns    0x435d22
  435d22:	jns    0x435d24
  435d24:	jns    0x435d26
  435d26:	jns    0x435d28
  435d28:	jns    0x435d2a
  435d2a:	jns    0x435d2c
  435d2c:	jns    0x435d2e
  435d2e:	jns    0x435d30
  435d30:	jns    0x435d32
  435d32:	jns    0x435d34
  435d34:	jns    0x435d36
  435d36:	jns    0x435d38
  435d38:	jns    0x435d3a
  435d3a:	jns    0x435d3c
  435d3c:	jns    0x435d3e
  435d3e:	jns    0x435d40
  435d40:	jns    0x435d42
  435d42:	jns    0x435d44
  435d44:	jns    0x435d46
  435d46:	jns    0x435d48
  435d48:	jns    0x435d4a
  435d4a:	jns    0x435d4c
  435d4c:	jns    0x435d4e
  435d4e:	jns    0x435d50
  435d50:	jns    0x435d52
  435d52:	jns    0x435d54
  435d54:	jns    0x435d56
  435d56:	jp     0x435d58
  435d58:	jns    0x435d5a
  435d5a:	jns    0x435d5c
  435d5c:	jns    0x435d5e
  435d5e:	jns    0x435d60
  435d60:	jns    0x435d62
  435d62:	jns    0x435d64
  435d64:	jns    0x435d66
  435d66:	jns    0x435d68
  435d68:	jns    0x435d6a
  435d6a:	xlat   BYTE PTR ds:[rbx]
  435d6b:	call   rdi
  435d6d:	call   rdi
  435d6f:	call   rdi
  435d71:	call   rdi
  435d73:	call   rdi
  435d75:	call   rdi
  435d77:	call   rdi
  435d79:	call   rdi
  435d7b:	call   rdi
  435d7d:	call   rdi
  435d7f:	call   rdi
  435d81:	call   rdi
  435d83:	call   rdi
  435d85:	call   rdi
  435d87:	call   rdi
  435d89:	call   rdi
  435d8b:	call   rdi
  435d8d:	call   rdi
  435d8f:	call   rdi
  435d91:	call   rdi
  435d93:	call   rdi
  435d95:	call   rdi
  435d97:	call   rdi
  435d99:	call   rdi
  435d9b:	call   rdi
  435d9d:	call   rdi
  435d9f:	call   rdi
  435da1:	call   rdi
  435da3:	call   rdi
  435da5:	call   rdi
  435da7:	call   rdi
  435da9:	call   rdi
  435dab:	call   rdi
  435dad:	call   rdi
  435daf:	call   rdi
  435db1:	call   rdi
  435db3:	call   rdi
  435db5:	call   rdi
  435db7:	call   rdi
  435db9:	call   rdi
  435dbb:	call   rdi
  435dbd:	call   rdi
  435dbf:	call   rdi
  435dc1:	call   rdi
  435dc3:	jmp    FWORD PTR [rcx]
  435dc5:	add    dh,dl
  435dc7:	call   rsi
  435dc9:	call   rsi
  435dcb:	call   rsi
  435dcd:	call   rsi
  435dcf:	call   rsi
  435dd1:	call   rsi
  435dd3:	call   rsi
  435dd5:	call   rsi
  435dd7:	call   rsi
  435dd9:	call   rsi
  435ddb:	call   rsi
  435ddd:	call   rsi
  435ddf:	call   rsi
  435de1:	call   rsi
  435de3:	call   rsi
  435de5:	call   rsi
  435de7:	call   rsi
  435de9:	call   rsi
  435deb:	call   rsi
  435ded:	call   rsi
  435def:	call   rsi
  435df1:	call   rsi
  435df3:	call   rsi
  435df5:	call   rsi
  435df7:	call   rsi
  435df9:	call   rsi
  435dfb:	call   rsi
  435dfd:	call   rsi
  435dff:	call   rsi
  435e01:	call   rsi
  435e03:	call   rsi
  435e05:	call   rsi
  435e07:	call   rsi
  435e09:	call   rsi
  435e0b:	call   rsi
  435e0d:	call   rsi
  435e0f:	call   rsi
  435e11:	call   rsi
  435e13:	call   rsi
  435e15:	call   rsi
  435e17:	call   rsi
  435e19:	call   rsi
  435e1b:	call   rsi
  435e1d:	jmp    FWORD PTR [rcx]
  435e1f:	add    ch,dl
  435e21:	(bad)  
  435e22:	jnp    0x435e24
  435e24:	jnp    0x435e26
  435e26:	jnp    0x435e28
  435e28:	(bad)  
  435e29:	call   rbp
  435e2b:	call   rbp
  435e2d:	call   rbp
  435e2f:	call   rbp
  435e31:	call   rbp
  435e33:	call   rbp
  435e35:	call   rbp
  435e37:	call   rbp
  435e39:	call   rbp
  435e3b:	call   rbp
  435e3d:	call   rbp
  435e3f:	call   rbp
  435e41:	call   rbp
  435e43:	call   rbp
  435e45:	call   rbp
  435e47:	call   rbp
  435e49:	call   rbp
  435e4b:	call   rbp
  435e4d:	call   rbp
  435e4f:	call   rbp
  435e51:	call   rbp
  435e53:	call   rbp
  435e55:	call   rbp
  435e57:	call   rbp
  435e59:	call   rbp
  435e5b:	call   rbp
  435e5d:	call   rbp
  435e5f:	call   rbp
  435e61:	call   rbp
  435e63:	call   rbp
  435e65:	call   rbp
  435e67:	call   rbp
  435e69:	call   rbp
  435e6b:	call   rbp
  435e6d:	call   rbp
  435e6f:	call   rbp
  435e71:	call   rbp
  435e73:	call   rbp
  435e75:	call   rbp
  435e77:	jmp    FWORD PTR [rcx]
  435e79:	add    ah,dl
  435e7b:	(bad)  
  435e7c:	jnp    0x435e7e
  435e7e:	jnp    0x435e80
  435e80:	jnp    0x435e82
  435e82:	(bad)  
  435e83:	call   rsp
  435e85:	call   rsp
  435e87:	call   rsp
  435e89:	call   rsp
  435e8b:	call   rsp
  435e8d:	call   rsp
  435e8f:	call   rsp
  435e91:	call   rsp
  435e93:	call   rsp
  435e95:	call   rsp
  435e97:	call   rsp
  435e99:	call   rsp
  435e9b:	call   rsp
  435e9d:	call   rsp
  435e9f:	call   rsp
  435ea1:	call   rsp
  435ea3:	call   rsp
  435ea5:	call   rsp
  435ea7:	call   rsp
  435ea9:	call   rsp
  435eab:	call   rsp
  435ead:	call   rsp
  435eaf:	call   rsp
  435eb1:	call   rsp
  435eb3:	call   rsp
  435eb5:	call   rsp
  435eb7:	call   rsp
  435eb9:	call   rsp
  435ebb:	call   rsp
  435ebd:	call   rsp
  435ebf:	call   rsp
  435ec1:	call   rsp
  435ec3:	call   rsp
  435ec5:	call   rsp
  435ec7:	call   rsp
  435ec9:	call   rsp
  435ecb:	call   rsp
  435ecd:	call   rsp
  435ecf:	call   rsp
  435ed1:	jmp    FWORD PTR [rcx]
  435ed3:	add    bl,dl
  435ed5:	call   rbx
  435ed7:	call   rbx
  435ed9:	call   rbx
  435edb:	(bad)  
  435edc:	jl     0x435ede
  435ede:	sar    edi,cl
  435ee0:	sar    edi,cl
  435ee2:	jl     0x435ee4
  435ee4:	jl     0x435ee6
  435ee6:	sar    edi,cl
  435ee8:	sar    edi,cl
  435eea:	sar    edi,cl
  435eec:	jl     0x435eee
  435eee:	jl     0x435ef0
  435ef0:	sar    edi,cl
  435ef2:	jl     0x435ef4
  435ef4:	sar    edi,cl
  435ef6:	jl     0x435ef8
  435ef8:	sar    edi,cl
  435efa:	sar    edi,cl
  435efc:	sar    edi,cl
  435efe:	sar    edi,cl
  435f00:	jl     0x435f02
  435f02:	sar    edi,cl
  435f04:	sar    edi,cl
  435f06:	sar    edi,cl
  435f08:	sar    edi,cl
  435f0a:	sar    edi,cl
  435f0c:	sar    edi,cl
  435f0e:	sar    edi,cl
  435f10:	sar    edi,cl
  435f12:	sar    edi,cl
  435f14:	sar    edi,cl
  435f16:	sar    edi,cl
  435f18:	sar    edi,cl
  435f1a:	jl     0x435f1c
  435f1c:	sar    edi,cl
  435f1e:	sar    edi,cl
  435f20:	sar    edi,cl
  435f22:	sar    edi,cl
  435f24:	sar    edi,cl
  435f26:	sar    edi,cl
  435f28:	sar    edi,cl
  435f2a:	jl     0x435f2c
  435f2c:	sub    DWORD PTR [rax],eax
  435f2e:	sar    bh,cl
  435f30:	sar    bh,cl
  435f32:	sar    bh,cl
  435f34:	sar    bh,cl
  435f36:	sar    bh,cl
  435f38:	sar    bh,cl
  435f3a:	sar    bh,cl
  435f3c:	sar    bh,cl
  435f3e:	sar    bh,cl
  435f40:	sar    bh,cl
  435f42:	sar    bh,cl
  435f44:	sar    bh,cl
  435f46:	sar    bh,cl
  435f48:	sar    bh,cl
  435f4a:	sar    bh,cl
  435f4c:	sar    bh,cl
  435f4e:	sar    bh,cl
  435f50:	sar    bh,cl
  435f52:	sar    bh,cl
  435f54:	sar    bh,cl
  435f56:	sar    bh,cl
  435f58:	sar    bh,cl
  435f5a:	sar    bh,cl
  435f5c:	sar    bh,cl
  435f5e:	sar    bh,cl
  435f60:	sar    bh,cl
  435f62:	sar    bh,cl
  435f64:	sar    bh,cl
  435f66:	sar    bh,cl
  435f68:	sar    bh,cl
  435f6a:	sar    bh,cl
  435f6c:	sar    bh,cl
  435f6e:	sar    bh,cl
  435f70:	sar    bh,cl
  435f72:	sar    bh,cl
  435f74:	sar    bh,cl
  435f76:	sar    bh,cl
  435f78:	sar    bh,cl
  435f7a:	sar    bh,cl
  435f7c:	sar    bh,cl
  435f7e:	sar    bh,cl
  435f80:	sar    bh,cl
  435f82:	sar    bh,cl
  435f84:	sar    bh,cl
  435f86:	sub    DWORD PTR [rax],eax
  435f88:	sar    edi,1
  435f8a:	sar    edi,1
  435f8c:	sar    edi,1
  435f8e:	sar    edi,1
  435f90:	sar    edi,1
  435f92:	sar    edi,1
  435f94:	jge    0x435f96
  435f96:	sar    edi,1
  435f98:	sar    edi,1
  435f9a:	sar    edi,1
  435f9c:	sar    edi,1
  435f9e:	sar    edi,1
  435fa0:	sar    edi,1
  435fa2:	sar    edi,1
  435fa4:	sar    edi,1
  435fa6:	sar    edi,1
  435fa8:	sar    edi,1
  435faa:	sar    edi,1
  435fac:	jle    0x435fae
  435fae:	jle    0x435fb0
  435fb0:	sar    edi,1
  435fb2:	sar    edi,1
  435fb4:	sar    edi,1
  435fb6:	jg     0x435fb8
  435fb8:	jg     0x435fba
  435fba:	jg     0x435fbc
  435fbc:	jg     0x435fbe
  435fbe:	jg     0x435fc0
  435fc0:	jg     0x435fc2
  435fc2:	jg     0x435fc4
  435fc4:	jg     0x435fc6
  435fc6:	jg     0x435fc8
  435fc8:	jg     0x435fca
  435fca:	jg     0x435fcc
  435fcc:	sar    edi,1
  435fce:	sar    edi,1
  435fd0:	jg     0x435fd2
  435fd2:	jg     0x435fd4
  435fd4:	jg     0x435fd6
  435fd6:	jg     0x435fd8
  435fd8:	jg     0x435fda
  435fda:	jg     0x435fdc
  435fdc:	jg     0x435fde
  435fde:	sar    edi,1
  435fe0:	sub    DWORD PTR [rax],eax
  435fe2:	sar    bh,1
  435fe4:	sar    bh,1
  435fe6:	sar    bh,1
  435fe8:	sar    bh,1
  435fea:	jl     0x435fec
  435fec:	sar    bh,1
  435fee:	sar    bh,1
  435ff0:	jl     0x435ff2
  435ff2:	jl     0x435ff4
  435ff4:	sar    bh,1
  435ff6:	sar    bh,1
  435ff8:	sar    bh,1
  435ffa:	jl     0x435ffc
  435ffc:	jl     0x435ffe
  435ffe:	sar    bh,1
  436000:	jl     0x436002
  436002:	sar    bh,1
  436004:	jl     0x436006
  436006:	sar    bh,1
  436008:	sar    bh,1
  43600a:	sar    bh,1
  43600c:	sar    bh,1
  43600e:	jl     0x436010
  436010:	sar    bh,1
  436012:	sar    bh,1
  436014:	sar    bh,1
  436016:	sar    bh,1
  436018:	sar    bh,1
  43601a:	sar    bh,1
  43601c:	sar    bh,1
  43601e:	sar    bh,1
  436020:	sar    bh,1
  436022:	sar    bh,1
  436024:	sar    bh,1
  436026:	sar    bh,1
  436028:	jl     0x43602a
  43602a:	sar    bh,1
  43602c:	sar    bh,1
  43602e:	sar    bh,1
  436030:	sar    bh,1
  436032:	sar    bh,1
  436034:	sar    bh,1
  436036:	sar    bh,1
  436038:	jl     0x43603a
  43603a:	sub    DWORD PTR [rax],eax
  43603c:	iret   
  43603d:	dec    edi
  43603f:	dec    edi
  436041:	dec    edi
  436043:	dec    edi
  436045:	dec    edi
  436047:	dec    edi
  436049:	dec    edi
  43604b:	dec    edi
  43604d:	dec    edi
  43604f:	dec    edi
  436051:	dec    edi
  436053:	dec    edi
  436055:	dec    edi
  436057:	dec    edi
  436059:	dec    edi
  43605b:	dec    edi
  43605d:	dec    edi
  43605f:	dec    edi
  436061:	dec    edi
  436063:	dec    edi
  436065:	dec    edi
  436067:	dec    edi
  436069:	dec    edi
  43606b:	dec    edi
  43606d:	dec    edi
  43606f:	dec    edi
  436071:	dec    edi
  436073:	dec    edi
  436075:	dec    edi
  436077:	dec    edi
  436079:	dec    edi
  43607b:	dec    edi
  43607d:	dec    edi
  43607f:	dec    edi
  436081:	dec    edi
  436083:	dec    edi
  436085:	dec    edi
  436087:	dec    edi
  436089:	dec    edi
  43608b:	dec    edi
  43608d:	dec    edi
  43608f:	dec    edi
  436091:	dec    edi
  436093:	jmp    FWORD PTR [rcx]
  436095:	add    dh,cl
  436097:	dec    esi
  436099:	dec    esi
  43609b:	dec    esi
  43609d:	dec    esi
  43609f:	dec    esi
  4360a1:	dec    esi
  4360a3:	dec    esi
  4360a5:	dec    esi
  4360a7:	dec    esi
  4360a9:	dec    esi
  4360ab:	dec    esi
  4360ad:	dec    esi
  4360af:	dec    esi
  4360b1:	dec    esi
  4360b3:	dec    esi
  4360b5:	dec    esi
  4360b7:	dec    esi
  4360b9:	dec    esi
  4360bb:	dec    esi
  4360bd:	dec    esi
  4360bf:	dec    esi
  4360c1:	dec    esi
  4360c3:	dec    esi
  4360c5:	dec    esi
  4360c7:	dec    esi
  4360c9:	dec    esi
  4360cb:	dec    esi
  4360cd:	dec    esi
  4360cf:	dec    esi
  4360d1:	dec    esi
  4360d3:	dec    esi
  4360d5:	dec    esi
  4360d7:	dec    esi
  4360d9:	dec    esi
  4360db:	dec    esi
  4360dd:	dec    esi
  4360df:	dec    esi
  4360e1:	dec    esi
  4360e3:	dec    esi
  4360e5:	dec    esi
  4360e7:	dec    esi
  4360e9:	dec    esi
  4360eb:	dec    esi
  4360ed:	jmp    FWORD PTR [rcx]
  4360ef:	add    ch,cl
  4360f1:	dec    ebp
  4360f3:	dec    ebp
  4360f5:	dec    ebp
  4360f7:	dec    ebp
  4360f9:	dec    ebp
  4360fb:	dec    ebp
  4360fd:	dec    ebp
  4360ff:	dec    ebp
  436101:	dec    ebp
  436103:	dec    ebp
  436105:	dec    ebp
  436107:	dec    ebp
  436109:	dec    ebp
  43610b:	dec    ebp
  43610d:	dec    ebp
  43610f:	dec    ebp
  436111:	dec    ebp
  436113:	dec    ebp
  436115:	dec    ebp
  436117:	dec    ebp
  436119:	dec    ebp
  43611b:	dec    ebp
  43611d:	dec    ebp
  43611f:	dec    ebp
  436121:	dec    ebp
  436123:	dec    ebp
  436125:	dec    ebp
  436127:	dec    ebp
  436129:	dec    ebp
  43612b:	dec    ebp
  43612d:	dec    ebp
  43612f:	dec    ebp
  436131:	dec    ebp
  436133:	dec    ebp
  436135:	dec    ebp
  436137:	dec    ebp
  436139:	dec    ebp
  43613b:	dec    ebp
  43613d:	dec    ebp
  43613f:	dec    ebp
  436141:	dec    ebp
  436143:	dec    ebp
  436145:	dec    ebp
  436147:	jmp    FWORD PTR [rcx]
  436149:	add    ah,cl
  43614b:	dec    esp
  43614d:	dec    esp
  43614f:	dec    esp
  436151:	dec    esp
  436153:	dec    esp
  436155:	dec    esp
  436157:	dec    esp
  436159:	dec    esp
  43615b:	dec    esp
  43615d:	dec    esp
  43615f:	dec    esp
  436161:	dec    esp
  436163:	dec    esp
  436165:	dec    esp
  436167:	dec    esp
  436169:	dec    esp
  43616b:	dec    esp
  43616d:	dec    esp
  43616f:	dec    esp
  436171:	dec    esp
  436173:	dec    esp
  436175:	dec    esp
  436177:	dec    esp
  436179:	dec    esp
  43617b:	dec    esp
  43617d:	dec    esp
  43617f:	dec    esp
  436181:	dec    esp
  436183:	dec    esp
  436185:	dec    esp
  436187:	dec    esp
  436189:	dec    esp
  43618b:	dec    esp
  43618d:	dec    esp
  43618f:	dec    esp
  436191:	dec    esp
  436193:	dec    esp
  436195:	dec    esp
  436197:	dec    esp
  436199:	dec    esp
  43619b:	dec    esp
  43619d:	dec    esp
  43619f:	dec    esp
  4361a1:	jmp    FWORD PTR [rcx]
  4361a3:	add    bl,cl
  4361a5:	dec    ebx
  4361a7:	dec    ebx
  4361a9:	dec    ebx
  4361ab:	(bad)  
  4361ac:	jl     0x4361ae
  4361ae:	retf   
  4361af:	dec    ebx
  4361b1:	(bad)  
  4361b2:	jl     0x4361b4
  4361b4:	jl     0x4361b6
  4361b6:	retf   
  4361b7:	dec    ebx
  4361b9:	dec    ebx
  4361bb:	(bad)  
  4361bc:	jl     0x4361be
  4361be:	jl     0x4361c0
  4361c0:	retf   
  4361c1:	inc    DWORD PTR [rax+0x7cffcb00]
  4361c7:	add    bl,cl
  4361c9:	dec    ebx
  4361cb:	dec    ebx
  4361cd:	dec    ebx
  4361cf:	(bad)  
  4361d0:	jl     0x4361d2
  4361d2:	retf   
  4361d3:	dec    ebx
  4361d5:	dec    ebx
  4361d7:	dec    ebx
  4361d9:	dec    ebx
  4361db:	dec    ebx
  4361dd:	dec    ebx
  4361df:	dec    ebx
  4361e1:	dec    ebx
  4361e3:	dec    ebx
  4361e5:	dec    ebx
  4361e7:	dec    ebx
  4361e9:	(bad)  
  4361ea:	jl     0x4361ec
  4361ec:	retf   
  4361ed:	dec    ebx
  4361ef:	dec    ebx
  4361f1:	dec    ebx
  4361f3:	dec    ebx
  4361f5:	dec    ebx
  4361f7:	dec    ebx
  4361f9:	(bad)  
  4361fa:	jl     0x4361fc
  4361fc:	sub    DWORD PTR [rax],eax
  4361fe:	retf   0xcaff
  436201:	dec    edx
  436203:	dec    edx
  436205:	dec    edx
  436207:	dec    edx
  436209:	dec    edx
  43620b:	dec    edx
  43620d:	dec    edx
  43620f:	dec    edx
  436211:	dec    edx
  436213:	dec    edx
  436215:	dec    edx
  436217:	dec    edx
  436219:	dec    edx
  43621b:	dec    edx
  43621d:	inc    DWORD PTR [rcx-0x7d003600]
  436223:	add    BYTE PTR [rdx-0x35003600],al
  436229:	dec    edx
  43622b:	dec    edx
  43622d:	dec    edx
  43622f:	dec    edx
  436231:	dec    edx
  436233:	dec    edx
  436235:	dec    edx
  436237:	dec    edx
  436239:	dec    edx
  43623b:	dec    edx
  43623d:	dec    edx
  43623f:	dec    edx
  436241:	dec    edx
  436243:	dec    edx
  436245:	dec    edx
  436247:	dec    edx
  436249:	dec    edx
  43624b:	dec    edx
  43624d:	dec    edx
  43624f:	dec    edx
  436251:	dec    edx
  436253:	dec    edx
  436255:	jmp    FWORD PTR [rcx]
  436257:	add    cl,cl
  436259:	dec    ecx
  43625b:	dec    ecx
  43625d:	dec    ecx
  43625f:	(bad)  
  436260:	jl     0x436262
  436262:	leave  
  436263:	dec    ecx
  436265:	(bad)  
  436266:	jl     0x436268
  436268:	jl     0x43626a
  43626a:	leave  
  43626b:	dec    ecx
  43626d:	dec    ecx
  43626f:	inc    DWORD PTR [rbx-0x36ff8400]
  436275:	(bad)  
  436276:	jl     0x436278
  436278:	leave  
  436279:	(bad)  
  43627a:	jl     0x43627c
  43627c:	leave  
  43627d:	dec    ecx
  43627f:	dec    ecx
  436281:	dec    ecx
  436283:	(bad)  
  436284:	jl     0x436286
  436286:	leave  
  436287:	dec    ecx
  436289:	dec    ecx
  43628b:	dec    ecx
  43628d:	dec    ecx
  43628f:	dec    ecx
  436291:	dec    ecx
  436293:	dec    ecx
  436295:	dec    ecx
  436297:	dec    ecx
  436299:	dec    ecx
  43629b:	dec    ecx
  43629d:	(bad)  
  43629e:	jl     0x4362a0
  4362a0:	leave  
  4362a1:	dec    ecx
  4362a3:	dec    ecx
  4362a5:	dec    ecx
  4362a7:	dec    ecx
  4362a9:	dec    ecx
  4362ab:	dec    ecx
  4362ad:	(bad)  
  4362ae:	jl     0x4362b0
  4362b0:	sub    DWORD PTR [rax],eax
  4362b2:	enter  0xc8ff,0xff
  4362b6:	enter  0xc8ff,0xff
  4362ba:	enter  0xc8ff,0xff
  4362be:	enter  0xc8ff,0xff
  4362c2:	enter  0xc8ff,0xff
  4362c6:	enter  0xc8ff,0xff
  4362ca:	enter  0xc8ff,0xff
  4362ce:	enter  0xc8ff,0xff
  4362d2:	test   BYTE PTR [rax],al
  4362d4:	enter  0x85ff,0x0
  4362d8:	test   DWORD PTR [rax],eax
  4362da:	enter  0xc8ff,0xff
  4362de:	enter  0xc8ff,0xff
  4362e2:	enter  0xc8ff,0xff
  4362e6:	enter  0x86ff,0x0
  4362ea:	enter  0xc8ff,0xff
  4362ee:	enter  0xc8ff,0xff
  4362f2:	enter  0xc8ff,0xff
  4362f6:	enter  0xc8ff,0xff
  4362fa:	enter  0xc8ff,0xff
  4362fe:	enter  0xc8ff,0xff
  436302:	enter  0xc8ff,0xff
  436306:	enter  0xc8ff,0xff
  43630a:	sub    DWORD PTR [rax],eax
  43630c:	(bad)  
  43630d:	inc    edi
  43630f:	inc    edi
  436311:	inc    edi
  436313:	inc    edi
  436315:	inc    DWORD PTR [rdi-0x38003900]
  43631b:	inc    edi
  43631d:	dec    DWORD PTR [rax-0x38003900]
  436323:	inc    edi
  436325:	inc    edi
  436327:	inc    edi
  436329:	inc    edi
  43632b:	inc    edi
  43632d:	inc    edi
  43632f:	dec    DWORD PTR [rcx-0x75ff7700]
  436335:	add    bh,al
  436337:	dec    DWORD PTR [rbx-0x76ff7700]
  43633d:	add    BYTE PTR [rcx-0x76ff7700],cl
  436343:	add    BYTE PTR [rcx-0x76ff7700],cl
  436349:	add    BYTE PTR [rcx-0x76ff7700],cl
  43634f:	add    bh,al
  436351:	inc    edi
  436353:	dec    DWORD PTR [rcx-0x76ff7700]
  436359:	add    BYTE PTR [rcx-0x76ff7700],cl
  43635f:	add    BYTE PTR [rcx+0x29ffc700],cl
  436365:	add    dh,al
  436367:	inc    esi
  436369:	inc    esi
  43636b:	inc    esi
  43636d:	inc    esi
  43636f:	inc    esi
  436371:	inc    esi
  436373:	inc    esi
  436375:	inc    esi
  436377:	inc    esi
  436379:	inc    esi
  43637b:	inc    esi
  43637d:	inc    esi
  43637f:	inc    esi
  436381:	inc    esi
  436383:	inc    esi
  436385:	inc    esi
  436387:	inc    esi
  436389:	inc    esi
  43638b:	inc    esi
  43638d:	inc    esi
  43638f:	inc    esi
  436391:	inc    esi
  436393:	inc    esi
  436395:	inc    esi
  436397:	inc    esi
  436399:	inc    esi
  43639b:	inc    esi
  43639d:	inc    esi
  43639f:	inc    esi
  4363a1:	inc    esi
  4363a3:	inc    esi
  4363a5:	inc    esi
  4363a7:	inc    esi
  4363a9:	inc    esi
  4363ab:	inc    esi
  4363ad:	inc    esi
  4363af:	inc    esi
  4363b1:	inc    esi
  4363b3:	inc    esi
  4363b5:	inc    esi
  4363b7:	inc    esi
  4363b9:	inc    esi
  4363bb:	inc    esi
  4363bd:	jmp    FWORD PTR [rcx]
  4363bf:	add    ch,al
  4363c1:	inc    ebp
  4363c3:	inc    ebp
  4363c5:	inc    ebp
  4363c7:	inc    ebp
  4363c9:	inc    ebp
  4363cb:	dec    DWORD PTR [rax+rax*1-0x3a003b]
  4363d2:	(bad)  
  4363d5:	inc    ebp
  4363d7:	inc    ebp
  4363d9:	inc    ebp
  4363db:	inc    ebp
  4363dd:	inc    ebp
  4363df:	inc    ebp
  4363e1:	inc    ebp
  4363e3:	dec    DWORD PTR [rax+rax*1-0x3aff74]
  4363ea:	(bad)  
  4363ed:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  4363f4:	mov    WORD PTR [rax],es
  4363f6:	mov    WORD PTR [rax],es
  4363f8:	mov    WORD PTR [rax],es
  4363fa:	mov    WORD PTR [rax],es
  4363fc:	mov    WORD PTR [rax],es
  4363fe:	mov    WORD PTR [rax],es
  436400:	mov    WORD PTR [rax],es
  436402:	mov    WORD PTR [rax],es
  436404:	(bad)  
  436407:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  43640e:	mov    WORD PTR [rax],es
  436410:	mov    WORD PTR [rax],es
  436412:	mov    WORD PTR [rax],es
  436414:	mov    WORD PTR [rax],es
  436416:	vmovaps YMMWORD PTR [rax],ymm0
  43641a:	(bad)  
  43641b:	inc    esp
  43641d:	inc    esp
  43641f:	inc    esp
  436421:	inc    esp
  436423:	inc    esp
  436425:	dec    DWORD PTR [rax+rax*1-0x3b003c]
  43642c:	lea    eax,[rax]
  43642e:	(bad)  
  43642f:	inc    esp
  436431:	inc    esp
  436433:	inc    esp
  436435:	inc    esp
  436437:	inc    esp
  436439:	inc    esp
  43643b:	inc    esp
  43643d:	dec    DWORD PTR [rax+rax*1-0x3bff74]
  436444:	(bad)  
  436445:	inc    esp
  436447:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  43644e:	mov    WORD PTR [rax],es
  436450:	mov    WORD PTR [rax],es
  436452:	mov    WORD PTR [rax],es
  436454:	mov    WORD PTR [rax],es
  436456:	mov    WORD PTR [rax],es
  436458:	mov    WORD PTR [rax],es
  43645a:	mov    WORD PTR [rax],es
  43645c:	mov    WORD PTR [rax],es
  43645e:	(bad)  
  43645f:	inc    esp
  436461:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  436468:	mov    WORD PTR [rax],es
  43646a:	mov    WORD PTR [rax],es
  43646c:	mov    WORD PTR [rax],es
  43646e:	mov    WORD PTR [rax],es
  436470:	(bad)  
  436471:	jmp    FWORD PTR [rcx]
  436473:	add    bl,al
  436475:	inc    ebx
  436477:	inc    ebx
  436479:	inc    ebx
  43647b:	inc    ebx
  43647d:	inc    ebx
  43647f:	dec    DWORD PTR [rax+rax*1-0x3c003d]
  436486:	mov    es,WORD PTR [rax]
  436488:	ret    
  436489:	inc    ebx
  43648b:	inc    ebx
  43648d:	inc    ebx
  43648f:	inc    ebx
  436491:	inc    ebx
  436493:	inc    ebx
  436495:	inc    ebx
  436497:	dec    DWORD PTR [rax+rax*1-0x3cff74]
  43649e:	ret    
  43649f:	inc    ebx
  4364a1:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  4364a8:	mov    WORD PTR [rax],es
  4364aa:	mov    WORD PTR [rax],es
  4364ac:	mov    WORD PTR [rax],es
  4364ae:	mov    WORD PTR [rax],es
  4364b0:	mov    WORD PTR [rax],es
  4364b2:	mov    WORD PTR [rax],es
  4364b4:	mov    WORD PTR [rax],es
  4364b6:	mov    WORD PTR [rax],es
  4364b8:	ret    
  4364b9:	inc    ebx
  4364bb:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  4364c2:	mov    WORD PTR [rax],es
  4364c4:	mov    WORD PTR [rax],es
  4364c6:	mov    WORD PTR [rax],es
  4364c8:	mov    WORD PTR [rax],es
  4364ca:	ret    
  4364cb:	jmp    FWORD PTR [rcx]
  4364cd:	add    dl,al
  4364cf:	inc    edx
  4364d1:	inc    edx
  4364d3:	inc    edx
  4364d5:	inc    edx
  4364d7:	inc    edx
  4364d9:	dec    DWORD PTR [rax+rax*1-0x3d003e]
  4364e0:	pop    QWORD PTR [rax]
  4364e2:	ret    0xc2ff
  4364e5:	inc    edx
  4364e7:	inc    edx
  4364e9:	inc    edx
  4364eb:	inc    edx
  4364ed:	inc    edx
  4364ef:	inc    edx
  4364f1:	dec    DWORD PTR [rax+rax*1-0x3dff74]
  4364f8:	ret    0xc2ff
  4364fb:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  436502:	mov    WORD PTR [rax],es
  436504:	mov    WORD PTR [rax],es
  436506:	mov    WORD PTR [rax],es
  436508:	mov    WORD PTR [rax],es
  43650a:	mov    WORD PTR [rax],es
  43650c:	mov    WORD PTR [rax],es
  43650e:	mov    WORD PTR [rax],es
  436510:	mov    WORD PTR [rax],es
  436512:	ret    0xc2ff
  436515:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  43651c:	mov    WORD PTR [rax],es
  43651e:	mov    WORD PTR [rax],es
  436520:	mov    WORD PTR [rax],es
  436522:	mov    WORD PTR [rax],es
  436524:	ret    0x29ff
  436527:	add    cl,al
  436529:	inc    ecx
  43652b:	inc    ecx
  43652d:	inc    ecx
  43652f:	inc    ecx
  436531:	inc    ecx
  436533:	dec    DWORD PTR [rax+rax*1+0x90ffc1]
  43653a:	sar    edi,0xc1
  43653d:	inc    ecx
  43653f:	inc    ecx
  436541:	inc    ecx
  436543:	inc    ecx
  436545:	inc    ecx
  436547:	inc    ecx
  436549:	inc    ecx
  43654b:	dec    DWORD PTR [rax+rax*1-0x3eff74]
  436552:	sar    edi,0xc1
  436555:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  43655c:	mov    WORD PTR [rax],es
  43655e:	mov    WORD PTR [rax],es
  436560:	mov    WORD PTR [rax],es
  436562:	mov    WORD PTR [rax],es
  436564:	mov    WORD PTR [rax],es
  436566:	mov    WORD PTR [rax],es
  436568:	mov    WORD PTR [rax],es
  43656a:	mov    WORD PTR [rax],es
  43656c:	sar    edi,0xc1
  43656f:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  436576:	mov    WORD PTR [rax],es
  436578:	mov    WORD PTR [rax],es
  43657a:	mov    WORD PTR [rax],es
  43657c:	mov    WORD PTR [rax],es
  43657e:	sar    edi,0x29
  436581:	add    al,al
  436583:	inc    eax
  436585:	inc    eax
  436587:	inc    eax
  436589:	inc    eax
  43658b:	inc    eax
  43658d:	dec    DWORD PTR [rax+rax*1-0x3f0040]
  436594:	xchg   ecx,eax
  436595:	add    al,al
  436597:	inc    eax
  436599:	inc    eax
  43659b:	inc    eax
  43659d:	inc    eax
  43659f:	inc    eax
  4365a1:	inc    eax
  4365a3:	inc    eax
  4365a5:	dec    DWORD PTR [rax+rax*1-0x3fff74]
  4365ac:	sar    bh,0xc0
  4365af:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  4365b6:	mov    WORD PTR [rax],es
  4365b8:	mov    WORD PTR [rax],es
  4365ba:	mov    WORD PTR [rax],es
  4365bc:	mov    WORD PTR [rax],es
  4365be:	mov    WORD PTR [rax],es
  4365c0:	mov    WORD PTR [rax],es
  4365c2:	mov    WORD PTR [rax],es
  4365c4:	mov    WORD PTR [rax],es
  4365c6:	sar    bh,0xc0
  4365c9:	dec    DWORD PTR [rax+rax*1+0x8c008c]
  4365d0:	mov    WORD PTR [rax],es
  4365d2:	mov    WORD PTR [rax],es
  4365d4:	mov    WORD PTR [rax],es
  4365d6:	mov    WORD PTR [rax],es
  4365d8:	sar    bh,0x29
  4365db:	add    BYTE PTR [rdi-0x40004001],bh
  4365e1:	(bad)  
  4365e2:	mov    edi,0xbfffbfff
  4365e7:	(bad)  
  4365e8:	mov    edi,0xbfffbfff
  4365ed:	(bad)  
  4365ee:	mov    edi,0xbfffbfff
  4365f3:	(bad)  
  4365f4:	mov    edi,0xbfffbfff
  4365f9:	(bad)  
  4365fa:	mov    edi,0xbfffbfff
  4365ff:	(bad)  
  436600:	mov    edi,0x92ffbfff
  436605:	add    BYTE PTR [rdx-0x40004100],dl
  43660b:	(bad)  
  43660c:	mov    edi,0xbfffbfff
  436611:	(bad)  
  436612:	mov    edi,0xbfffbfff
  436617:	(bad)  
  436618:	mov    edi,0xbfffbfff
  43661d:	(bad)  
  43661e:	mov    edi,0xbfffbfff
  436623:	(bad)  
  436624:	mov    edi,0xbfffbfff
  436629:	(bad)  
  43662a:	mov    edi,0xbfffbfff
  43662f:	(bad)  
  436630:	mov    edi,0x29ffbfff
  436635:	add    BYTE PTR [rbx-0x6cff6d00],dl
  43663b:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436641:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436647:	add    BYTE PTR [rsi-0x6cff6c01],bh
  43664d:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436653:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436659:	add    BYTE PTR [rbx-0x6cff6d00],dl
  43665f:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436665:	add    BYTE PTR [rbx-0x6cff6d00],dl
  43666b:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436671:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436677:	add    BYTE PTR [rbx-0x6cff6d00],dl
  43667d:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436683:	add    BYTE PTR [rbx-0x6cff6d00],dl
  436689:	add    BYTE PTR [rbx+0x29009300],dl
  43668f:	add    BYTE PTR [rbp-0x6aff6b01],bh
  436695:	add    BYTE PTR [rbp-0x42004300],dl
  43669b:	(bad)  
  43669c:	mov    ebp,0xbdffbdff
  4366a1:	(bad)  
  4366a2:	mov    ebp,0xbdffbdff
  4366a7:	(bad)  
  4366a8:	mov    ebp,0xbdffbdff
  4366ad:	call   QWORD PTR [rsi-0x42004300]
  4366b3:	(bad)  
  4366b4:	mov    ebp,0xbdffbdff
  4366b9:	(bad)  
  4366ba:	mov    ebp,0xbdffbdff
  4366bf:	(bad)  
  4366c0:	mov    ebp,0xbdffbdff
  4366c5:	(bad)  
  4366c6:	mov    ebp,0xbdffbdff
  4366cb:	(bad)  
  4366cc:	mov    ebp,0xbdffbdff
  4366d1:	(bad)  
  4366d2:	mov    ebp,0xbdffbdff
  4366d7:	(bad)  
  4366d8:	mov    ebp,0xbdffbdff
  4366dd:	(bad)  
  4366de:	mov    ebp,0xbdffbdff
  4366e3:	(bad)  
  4366e4:	mov    ebp,0x29ffbdff
  4366e9:	add    BYTE PTR [rdi-0x68ff6900],dl
  4366ef:	add    BYTE PTR [rdi-0x68ff6900],dl
  4366f5:	add    BYTE PTR [rdi-0x68ff6900],dl
  4366fb:	add    BYTE PTR [rdi-0x68ff6900],dl
  436701:	add    BYTE PTR [rdi+rdi*8+0x970097],bh
  436708:	xchg   edi,eax
  436709:	add    BYTE PTR [rdi-0x68004400],dl
  43670f:	add    BYTE PTR [rdi-0x68ff6900],dl
  436715:	add    BYTE PTR [rdi-0x68ff6900],dl
  43671b:	add    BYTE PTR [rdi-0x68ff6900],dl
  436721:	add    BYTE PTR [rdi-0x68ff6900],dl
  436727:	add    BYTE PTR [rdi-0x68ff6900],dl
  43672d:	add    BYTE PTR [rdi-0x68ff6900],dl
  436733:	add    BYTE PTR [rdi-0x68ff6900],dl
  436739:	add    BYTE PTR [rdi-0x68ff6900],dl
  43673f:	add    BYTE PTR [rdi-0x68ffd700],dl
  436745:	add    BYTE PTR [rdi-0x68ff6900],dl
  43674b:	add    BYTE PTR [rdi-0x68ff6900],dl
  436751:	add    BYTE PTR [rdi-0x68ff6900],dl
  436757:	add    BYTE PTR [rdi-0x44ff6900],dl
  43675d:	call   QWORD PTR [rdi-0x68ff6900]
  436763:	add    BYTE PTR [rdi-0x68004500],dl
  436769:	add    BYTE PTR [rdi-0x68ff6900],dl
  43676f:	add    BYTE PTR [rdi-0x68ff6900],dl
  436775:	add    BYTE PTR [rdi-0x68ff6900],dl
  43677b:	add    BYTE PTR [rdi-0x68ff6900],dl
  436781:	add    BYTE PTR [rdi-0x68ff6900],dl
  436787:	add    BYTE PTR [rdi-0x68ff6900],dl
  43678d:	add    BYTE PTR [rdi-0x68ff6900],dl
  436793:	add    BYTE PTR [rdi-0x68ff6900],dl
  436799:	add    BYTE PTR [rdi-0x45ffd700],dl
  43679f:	(bad)  
  4367a0:	mov    edx,0xbaffbaff
  4367a5:	(bad)  
  4367a6:	mov    edx,0xbaffbaff
  4367ab:	(bad)  
  4367ac:	mov    edx,0xbaffbaff
  4367b1:	(bad)  
  4367b2:	mov    edx,0x98ffbaff
  4367b7:	add    BYTE PTR [rdx-0x45004501],bh
  4367bd:	(bad)  
  4367be:	mov    edx,0xba0099ff
  4367c3:	(bad)  
  4367c4:	mov    edx,0xbaffbaff
  4367c9:	(bad)  
  4367ca:	mov    edx,0xbaffbaff
  4367cf:	(bad)  
  4367d0:	mov    edx,0xbaffbaff
  4367d5:	(bad)  
  4367d6:	mov    edx,0xbaffbaff
  4367db:	(bad)  
  4367dc:	mov    edx,0xbaffbaff
  4367e1:	(bad)  
  4367e2:	mov    edx,0xbaffbaff
  4367e7:	(bad)  
  4367e8:	mov    edx,0xbaffbaff
  4367ed:	(bad)  
  4367ee:	mov    edx,0xbaffbaff
  4367f3:	(bad)  
  4367f4:	mov    edx,0xb90029ff
  4367f9:	(bad)  
  4367fa:	mov    ecx,0xb9ffb9ff
  4367ff:	(bad)  
  436800:	mov    ecx,0xb9ffb9ff
  436805:	(bad)  
  436806:	mov    ecx,0xb9ffb9ff
  43680b:	(bad)  
  43680c:	mov    ecx,0x9affb9ff
  436811:	add    BYTE PTR [rcx-0x46004601],bh
  436817:	(bad)  
  436818:	mov    ecx,0xb9ffb9ff
  43681d:	(bad)  
  43681e:	mov    ecx,0xb9ffb9ff
  436823:	(bad)  
  436824:	mov    ecx,0xb9ffb9ff
  436829:	(bad)  
  43682a:	mov    ecx,0xb9ffb9ff
  43682f:	(bad)  
  436830:	mov    ecx,0xb9ffb9ff
  436835:	(bad)  
  436836:	mov    ecx,0xb9ffb9ff
  43683b:	(bad)  
  43683c:	mov    ecx,0xb9ffb9ff
  436841:	(bad)  
  436842:	mov    ecx,0xb9ffb9ff
  436847:	(bad)  
  436848:	mov    ecx,0xb9ffb9ff
  43684d:	(bad)  
  43684e:	mov    ecx,0x9b0029ff
  436853:	add    BYTE PTR [rbx-0x64ff6500],bl
  436859:	add    BYTE PTR [rbx-0x64004800],bl
  43685f:	add    BYTE PTR [rbx-0x64ff6500],bl
  436865:	add    BYTE PTR [rbx-0x64ff6500],bl
  43686b:	add    BYTE PTR [rbx-0x64ff6500],bl
  436871:	add    BYTE PTR [rbx-0x64ff6500],bl
  436877:	add    BYTE PTR [rbx-0x64ff6500],bl
  43687d:	add    BYTE PTR [rbx-0x64ff6500],bl
  436883:	add    BYTE PTR [rbx-0x64ff6500],bl
  436889:	add    BYTE PTR [rbx-0x64ff6500],bl
  43688f:	add    BYTE PTR [rbx-0x64ff6500],bl
  436895:	add    BYTE PTR [rbx-0x64ff6500],bl
  43689b:	add    BYTE PTR [rbx-0x64ff6500],bl
  4368a1:	add    BYTE PTR [rbx-0x64ff6500],bl
  4368a7:	add    BYTE PTR [rbx-0x48ffd700],bl
  4368ad:	push   QWORD PTR [rdi-0x48004801]
  4368b3:	push   QWORD PTR [rdi-0x48ff6301]
  4368b9:	push   QWORD PTR [rdi-0x48004801]
  4368bf:	push   QWORD PTR [rdi-0x48004801]
  4368c5:	push   QWORD PTR [rdi-0x48004801]
  4368cb:	push   QWORD PTR [rdi-0x48004801]
  4368d1:	push   QWORD PTR [rdi-0x48004801]
  4368d7:	push   QWORD PTR [rdi-0x48004801]
  4368dd:	push   QWORD PTR [rdi-0x48004801]
  4368e3:	push   QWORD PTR [rdi-0x48004801]
  4368e9:	push   QWORD PTR [rdi-0x48004801]
  4368ef:	push   QWORD PTR [rdi-0x48004801]
  4368f5:	push   QWORD PTR [rdi-0x48004801]
  4368fb:	push   QWORD PTR [rdi-0x48004801]
  436901:	push   QWORD PTR [rdi-0x62ffd601]
  436907:	add    BYTE PTR [rbp-0x62ff6300],bl
  43690d:	add    BYTE PTR [rbp-0x62ff6300],bl
  436913:	add    BYTE PTR [rbp-0x49ff6300],bl
  436919:	call   FWORD PTR [rbp-0x62ff6300]
  43691f:	add    BYTE PTR [rbp-0x62ff6300],bl
  436925:	add    BYTE PTR [rbp-0x62ff6300],bl
  43692b:	add    BYTE PTR [rbp-0x62ff6300],bl
  436931:	add    BYTE PTR [rbp-0x62ff6300],bl
  436937:	add    BYTE PTR [rbp-0x62ff6300],bl
  43693d:	add    BYTE PTR [rbp-0x62ff6300],bl
  436943:	add    BYTE PTR [rbp-0x62ff6300],bl
  436949:	add    BYTE PTR [rbp-0x62ff6300],bl
  43694f:	add    BYTE PTR [rbp-0x62ff6300],bl
  436955:	add    BYTE PTR [rbp-0x62ff6300],bl
  43695b:	add    BYTE PTR [rbp-0x4affd700],bl
  436961:	call   FWORD PTR [rsi-0x60ff6100]
  436967:	add    BYTE PTR [rbp-0x4a004a01],dh
  43696d:	push   QWORD PTR [rbp-0x4a004a01]
  436973:	push   QWORD PTR [rbp-0x4a004a01]
  436979:	push   QWORD PTR [rbp-0x5f004a01]
  43697f:	add    BYTE PTR [rbp-0x4a004a01],dh
  436985:	push   QWORD PTR [rbp-0x4a004a01]
  43698b:	push   QWORD PTR [rbp-0x4a004a01]
  436991:	push   QWORD PTR [rbp-0x4a004a01]
  436997:	push   QWORD PTR [rbp-0x4a004a01]
  43699d:	push   QWORD PTR [rbp-0x4a004a01]
  4369a3:	push   QWORD PTR [rbp-0x4a004a01]
  4369a9:	push   QWORD PTR [rbp-0x4a004a01]
  4369af:	push   QWORD PTR [rbp-0x4a004a01]
  4369b5:	push   QWORD PTR [rbp-0x5effd601]
  4369bb:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369c1:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369c7:	add    BYTE PTR [rcx-0x4bff5f00],ah
  4369cd:	jmp    QWORD PTR [rcx-0x5eff5f00]
  4369d3:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369d9:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369df:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369e5:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369eb:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369f1:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369f7:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4369fd:	add    BYTE PTR [rdi+rdi*8+0xa100a1],dh
  436a04:	movabs eax,ds:0xa100a100a100a100
  436a0d:	add    BYTE PTR [rcx+0x2900a100],ah
  436a13:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a19:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a1f:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a25:	add    BYTE PTR [rbx-0x5eff5e01],dh
  436a2b:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a31:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a37:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a3d:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a43:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a49:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a4f:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a55:	add    BYTE PTR [rcx-0x5e004d00],ah
  436a5b:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a61:	add    BYTE PTR [rcx-0x5eff5f00],ah
  436a67:	add    BYTE PTR [rcx+0x2900a100],ah
  436a6d:	add    BYTE PTR [rdx-0x5cff5d01],dh
  436a73:	add    BYTE PTR [rbx-0x4d004e00],ah
  436a79:	push   QWORD PTR [rdx-0x4d004d01]
  436a7f:	jmp    QWORD PTR [rax+rax*1-0x4d004e]
  436a86:	mov    dl,0xff
  436a88:	mov    dl,0xff
  436a8a:	mov    dl,0xff
  436a8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  436a8d:	add    BYTE PTR [rdx-0x4d004d01],dh
  436a93:	push   QWORD PTR [rdx-0x4d004d01]
  436a99:	push   QWORD PTR [rdx-0x4d004d01]
  436a9f:	push   QWORD PTR [rdx-0x4d004d01]
  436aa5:	push   QWORD PTR [rdx-0x4d004d01]
  436aab:	push   QWORD PTR [rdx-0x4d004d01]
  436ab1:	push   QWORD PTR [rdx-0x4d004d01]
  436ab7:	push   QWORD PTR [rdx-0x4d004d01]
  436abd:	push   QWORD PTR [rdx-0x4d004d01]
  436ac3:	push   QWORD PTR [rdx-0x59ffd601]
  436ac9:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436acf:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436ad5:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436adb:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436ae1:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436ae7:	add    BYTE PTR [rsi-0x58ff5a00],ah
  436aed:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436af3:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436af9:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436aff:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436b05:	add    BYTE PTR [rsi-0x59ff5800],ah
  436b0b:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436b11:	add    BYTE PTR [rsi-0x59ff5a00],ah
  436b17:	add    BYTE PTR [rsi-0x55ff5700],ah
  436b1d:	add    BYTE PTR [rsi-0x54ffd700],ah
  436b23:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b29:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b2f:	add    BYTE PTR [rbx-0x4fff5500],ch
  436b35:	jmp    FWORD PTR [rbx-0x54ff5500]
  436b3b:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b41:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b47:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b4d:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b53:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b59:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b5f:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b65:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b6b:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b71:	add    BYTE PTR [rbx-0x54ff5500],ch
  436b77:	add    BYTE PTR [rbx-0x50ffd700],ch
  436b7d:	jmp    QWORD PTR [rdx-0x5cff5d00]
  436b83:	add    BYTE PTR [rdi-0x50005001],ch
  436b89:	jmp    FWORD PTR [rdi-0x5b005001]
  436b8f:	add    BYTE PTR [rdi-0x50005001],ch
  436b95:	jmp    FWORD PTR [rdi-0x5a005001]
  436b9b:	add    BYTE PTR [rdi-0x50005001],ch
  436ba1:	jmp    FWORD PTR [rdi-0x50005001]
  436ba7:	jmp    FWORD PTR [rdi-0x50005001]
  436bad:	jmp    FWORD PTR [rdi-0x50005001]
  436bb3:	jmp    FWORD PTR [rdi-0x50005001]
  436bb9:	jmp    FWORD PTR [rdi-0x50005001]
  436bbf:	jmp    FWORD PTR [rdi-0x50005001]
  436bc5:	jmp    FWORD PTR [rdi-0x50005001]
  436bcb:	jmp    FWORD PTR [rdi-0x50005001]
  436bd1:	jmp    FWORD PTR [rdi-0x53ffd601]
  436bd7:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436bde:	lods   al,BYTE PTR ds:[rsi]
  436bdf:	add    BYTE PTR [rax+rax*1+0xacffae],ch
  436be6:	lods   al,BYTE PTR ds:[rsi]
  436be7:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436bee:	lods   al,BYTE PTR ds:[rsi]
  436bef:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436bf6:	lods   al,BYTE PTR ds:[rsi]
  436bf7:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436bfe:	lods   al,BYTE PTR ds:[rsi]
  436bff:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c06:	lods   al,BYTE PTR ds:[rsi]
  436c07:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c0e:	lods   al,BYTE PTR ds:[rsi]
  436c0f:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c16:	lods   al,BYTE PTR ds:[rsi]
  436c17:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c1e:	lods   al,BYTE PTR ds:[rsi]
  436c1f:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c26:	lods   al,BYTE PTR ds:[rsi]
  436c27:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c2e:	sub    DWORD PTR [rax],eax
  436c30:	lods   al,BYTE PTR ds:[rsi]
  436c31:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c38:	lods   al,BYTE PTR ds:[rsi]
  436c39:	add    BYTE PTR [rax+rax*1+0xacffad],ch
  436c40:	lods   al,BYTE PTR ds:[rsi]
  436c41:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c48:	lods   al,BYTE PTR ds:[rsi]
  436c49:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c50:	lods   al,BYTE PTR ds:[rsi]
  436c51:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c58:	lods   al,BYTE PTR ds:[rsi]
  436c59:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c60:	lods   al,BYTE PTR ds:[rsi]
  436c61:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c68:	lods   al,BYTE PTR ds:[rsi]
  436c69:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c70:	lods   al,BYTE PTR ds:[rsi]
  436c71:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c78:	lods   al,BYTE PTR ds:[rsi]
  436c79:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c80:	lods   al,BYTE PTR ds:[rsi]
  436c81:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  436c88:	sub    DWORD PTR [rax],eax
  436c8a:	lods   al,BYTE PTR ds:[rsi]
  436c8b:	jmp    FWORD PTR [rdi+rdi*8-0x530054]
  436c92:	lods   al,BYTE PTR ds:[rsi]
  436c93:	jmp    FWORD PTR [rdi+rdi*8-0x53ff53]
  436c9a:	lods   al,BYTE PTR ds:[rsi]
  436c9b:	jmp    FWORD PTR [rdi+rdi*8-0x530054]
  436ca2:	lods   al,BYTE PTR ds:[rsi]
  436ca3:	jmp    FWORD PTR [rdi+rdi*8-0x530054]
  436caa:	lods   al,BYTE PTR ds:[rsi]
  436cab:	jmp    FWORD PTR [rdi+rdi*8-0x530054]
  436cb2:	lods   al,BYTE PTR ds:[rsi]
  436cb3:	jmp    FWORD PTR [rdi+rdi*8+0xaeffac]
  436cba:	scas   al,BYTE PTR es:[rdi]
  436cbb:	add    BYTE PTR [rsi-0x51ff5200],ch
  436cc1:	add    BYTE PTR [rsi-0x51ff5200],ch
  436cc7:	add    BYTE PTR [rsi-0x51ff5200],ch
  436ccd:	add    BYTE PTR [rdi+rdi*8+0xaeffac],ch
  436cd4:	scas   al,BYTE PTR es:[rdi]
  436cd5:	add    BYTE PTR [rsi-0x51ff5200],ch
  436cdb:	add    BYTE PTR [rsi-0x53ff5200],ch
  436ce1:	jmp    FWORD PTR [rcx]
  436ce3:	add    BYTE PTR [rbx-0x54005401],ch
  436ce9:	jmp    FWORD PTR [rbx-0x63005401]
  436cef:	add    BYTE PTR [rbx-0x54005401],ch
  436cf5:	jmp    FWORD PTR [rbx-0x54005401]
  436cfb:	jmp    FWORD PTR [rbx-0x54005401]
  436d01:	jmp    FWORD PTR [rbx-0x54005401]
  436d07:	jmp    FWORD PTR [rbx-0x54005401]
  436d0d:	jmp    FWORD PTR [rbx-0x54005401]
  436d13:	jmp    FWORD PTR [rbx-0x54005401]
  436d19:	jmp    FWORD PTR [rbx-0x54005401]
  436d1f:	jmp    FWORD PTR [rbx-0x54005401]
  436d25:	jmp    FWORD PTR [rbx-0x54005401]
  436d2b:	jmp    FWORD PTR [rbx-0x54005401]
  436d31:	jmp    FWORD PTR [rbx-0x54005401]
  436d37:	jmp    FWORD PTR [rbx+0x29ffabff]
  436d3d:	add    BYTE PTR [rdx-0x55005501],ch
  436d43:	jmp    FWORD PTR [rdx-0x55005501]
  436d49:	jmp    FWORD PTR [rdx-0x55005501]
  436d4f:	jmp    FWORD PTR [rdx-0x55005501]
  436d55:	jmp    FWORD PTR [rdx-0x55005501]
  436d5b:	jmp    FWORD PTR [rdx-0x55005501]
  436d61:	jmp    FWORD PTR [rdx-0x55005501]
  436d67:	jmp    FWORD PTR [rdx-0x55005501]
  436d6d:	jmp    FWORD PTR [rdx-0x55005501]
  436d73:	jmp    FWORD PTR [rdx-0x55005501]
  436d79:	jmp    FWORD PTR [rdx-0x55005501]
  436d7f:	jmp    FWORD PTR [rdx-0x55005501]
  436d85:	jmp    FWORD PTR [rdx-0x55005501]
  436d8b:	jmp    FWORD PTR [rdx-0x55005501]
  436d91:	jmp    FWORD PTR [rdx+0x29ffaaff]
  436d97:	add    BYTE PTR [rcx-0x50ff5001],ch
  436d9d:	add    BYTE PTR [rdi-0x56005700],ch
  436da3:	jmp    FWORD PTR [rcx-0x56005601]
  436da9:	jmp    FWORD PTR [rcx-0x56005601]
  436daf:	jmp    FWORD PTR [rcx-0x56005601]
  436db5:	jmp    FWORD PTR [rcx-0x56005601]
  436dbb:	jmp    FWORD PTR [rcx-0x56005601]
  436dc1:	jmp    FWORD PTR [rcx-0x56005601]
  436dc7:	jmp    FWORD PTR [rcx-0x56005601]
  436dcd:	jmp    FWORD PTR [rcx-0x56005601]
  436dd3:	jmp    FWORD PTR [rcx-0x56005601]
  436dd9:	jmp    FWORD PTR [rcx-0x56005601]
  436ddf:	jmp    FWORD PTR [rcx-0x56005601]
  436de5:	jmp    FWORD PTR [rcx-0x56005601]
  436deb:	jmp    FWORD PTR [rcx+0x29ffa9ff]
  436df1:	add    BYTE PTR [rax-0x50ff5001],ch
  436df7:	add    BYTE PTR [rdi-0x57005800],ch
  436dfd:	jmp    FWORD PTR [rax-0x57005701]
  436e03:	jmp    FWORD PTR [rax-0x57005701]
  436e09:	jmp    FWORD PTR [rax-0x57005701]
  436e0f:	jmp    FWORD PTR [rax-0x57005701]
  436e15:	jmp    FWORD PTR [rax-0x57005701]
  436e1b:	jmp    FWORD PTR [rax-0x57005701]
  436e21:	jmp    FWORD PTR [rax-0x57005701]
  436e27:	jmp    FWORD PTR [rax-0x57005701]
  436e2d:	jmp    FWORD PTR [rax-0x57005701]
  436e33:	jmp    FWORD PTR [rax-0x57005701]
  436e39:	jmp    FWORD PTR [rax-0x57005701]
  436e3f:	jmp    FWORD PTR [rax-0x57005701]
  436e45:	jmp    FWORD PTR [rax+0x29ffa8ff]
  436e4b:	add    BYTE PTR [rdi-0x58005801],ah
  436e51:	jmp    QWORD PTR [rdi-0x58005801]
  436e57:	jmp    QWORD PTR [rdi-0x58005801]
  436e5d:	jmp    QWORD PTR [rdi-0x58005801]
  436e63:	jmp    QWORD PTR [rdi-0x58005801]
  436e69:	push   QWORD PTR [rax-0x58005900]
  436e6f:	jmp    QWORD PTR [rdi-0x58005801]
  436e75:	jmp    QWORD PTR [rdi-0x58005801]
  436e7b:	jmp    QWORD PTR [rdi-0x58005801]
  436e81:	jmp    QWORD PTR [rdi-0x58005801]
  436e87:	jmp    QWORD PTR [rdi-0x58005801]
  436e8d:	jmp    QWORD PTR [rdi-0x58005801]
  436e93:	jmp    QWORD PTR [rdi-0x58005801]
  436e99:	jmp    QWORD PTR [rdi-0x58005801]
  436e9f:	jmp    QWORD PTR [rdi+0x29ffa7ff]
  436ea5:	add    BYTE PTR [rsi-0x59005901],ah
  436eab:	jmp    QWORD PTR [rsi-0x59005901]
  436eb1:	jmp    QWORD PTR [rsi-0x59005901]
  436eb7:	jmp    QWORD PTR [rsi-0x59005901]
  436ebd:	jmp    QWORD PTR [rsi-0x59005901]
  436ec3:	jmp    QWORD PTR [rsi-0x59005901]
  436ec9:	jmp    QWORD PTR [rsi-0x59005901]
  436ecf:	jmp    QWORD PTR [rsi-0x59005901]
  436ed5:	jmp    QWORD PTR [rsi-0x59005901]
  436edb:	push   QWORD PTR [rcx-0x59005a00]
  436ee1:	jmp    QWORD PTR [rsi-0x59005901]
  436ee7:	jmp    QWORD PTR [rsi-0x59005901]
  436eed:	jmp    QWORD PTR [rsi-0x59005901]
  436ef3:	jmp    QWORD PTR [rsi-0x59005901]
  436ef9:	jmp    QWORD PTR [rsi+0x29ffa6ff]
  436eff:	add    BYTE PTR [rbp-0x4cff4d01],ah
  436f05:	add    BYTE PTR [rbx-0x5a005b00],dh
  436f0b:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f11:	jmp    QWORD PTR [rax+rax*1-0x5a005b]
  436f18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  436f19:	jmp    QWORD PTR [rbp-0x4b005a01]
  436f1f:	add    BYTE PTR [rbp-0x5a005a01],ah
  436f25:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f2b:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f31:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f37:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f3d:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f43:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f49:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f4f:	jmp    QWORD PTR [rbp-0x5a005a01]
  436f55:	jmp    QWORD PTR [rbp-0x5bffd601]
  436f5b:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f63:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f6a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f6b:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f73:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f7b:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f83:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f8b:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f93:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436f9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436f9b:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436fa2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436fa3:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436faa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436fab:	jmp    QWORD PTR [rdi+rdi*8-0x5b005c]
  436fb2:	sub    DWORD PTR [rax],eax
  436fb4:	movabs ds:0xa300b500b500b5ff,eax
  436fbd:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fc3:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fc9:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fcf:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fd5:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fdb:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fe1:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fe7:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fed:	jmp    QWORD PTR [rbx-0x5c005c01]
  436ff3:	jmp    QWORD PTR [rbx-0x5c005c01]
  436ff9:	jmp    QWORD PTR [rbx-0x5c005c01]
  436fff:	jmp    QWORD PTR [rbx-0x5c005c01]
  437005:	jmp    QWORD PTR [rbx-0x5c005c01]
  43700b:	jmp    FWORD PTR [rcx]
  43700d:	add    BYTE PTR [rdx-0x4aff4a01],ah
  437013:	add    BYTE PTR [rbp-0x5d005e00],dh
  437019:	jmp    QWORD PTR [rdx-0x5d005d01]
  43701f:	jmp    QWORD PTR [rdx-0x5d005d01]
  437025:	jmp    QWORD PTR [rdx-0x5d005d01]
  43702b:	jmp    QWORD PTR [rdx-0x5d005d01]
  437031:	jmp    QWORD PTR [rdx-0x5d005d01]
  437037:	jmp    QWORD PTR [rdx-0x5d005d01]
  43703d:	jmp    QWORD PTR [rdx-0x5d005d01]
  437043:	jmp    QWORD PTR [rdx-0x5d005d01]
  437049:	jmp    QWORD PTR [rdx-0x5d005d01]
  43704f:	jmp    QWORD PTR [rdx-0x5d005d01]
  437055:	jmp    QWORD PTR [rdx-0x5d005d01]
  43705b:	jmp    QWORD PTR [rdx-0x5d005d01]
  437061:	jmp    QWORD PTR [rdx+0x29ffa2ff]
  437067:	add    BYTE PTR [rcx-0x5e005e01],ah
  43706d:	jmp    QWORD PTR [rcx-0x5e005e01]
  437073:	jmp    QWORD PTR [rcx-0x5e005e01]
  437079:	jmp    QWORD PTR [rcx-0x5e005e01]
  43707f:	jmp    QWORD PTR [rcx-0x5e005e01]
  437085:	push   QWORD PTR [rsi-0x5e005f00]
  43708b:	jmp    QWORD PTR [rcx-0x5e005e01]
  437091:	jmp    QWORD PTR [rcx-0x5e005e01]
  437097:	jmp    QWORD PTR [rcx-0x5e005e01]
  43709d:	jmp    QWORD PTR [rcx-0x5e005e01]
  4370a3:	jmp    QWORD PTR [rcx-0x5e005e01]
  4370a9:	jmp    QWORD PTR [rcx-0x5e005e01]
  4370af:	jmp    QWORD PTR [rcx-0x5e005e01]
  4370b5:	jmp    QWORD PTR [rcx-0x5e005e01]
  4370bb:	jmp    QWORD PTR [rcx+0x29ffa1ff]
  4370c1:	add    BYTE PTR [rax-0x5f005f01],ah
  4370c7:	jmp    QWORD PTR [rax-0x5f005f01]
  4370cd:	jmp    QWORD PTR [rax-0x5f005f01]
  4370d3:	jmp    QWORD PTR [rax-0x5f005f01]
  4370d9:	jmp    QWORD PTR [rax-0x5f005f01]
  4370df:	jmp    QWORD PTR [rax-0x5f005f01]
  4370e5:	jmp    QWORD PTR [rax-0x5f005f01]
  4370eb:	jmp    QWORD PTR [rax-0x5f005f01]
  4370f1:	jmp    QWORD PTR [rax-0x5f005f01]
  4370f7:	push   QWORD PTR [rdi-0x5f006000]
  4370fd:	jmp    QWORD PTR [rax-0x5f005f01]
  437103:	jmp    QWORD PTR [rax-0x5f005f01]
  437109:	jmp    QWORD PTR [rax-0x5f005f01]
  43710f:	jmp    QWORD PTR [rax-0x5f005f01]
  437115:	jmp    QWORD PTR [rax+0x29ffa0ff]
  43711b:	add    BYTE PTR [rdi-0x60006001],bl
  437121:	call   FWORD PTR [rdi-0x60006001]
  437127:	call   FWORD PTR [rdi-0x60006001]
  43712d:	call   FWORD PTR [rdi-0x60006001]
  437133:	call   FWORD PTR [rdi-0x60006001]
  437139:	call   FWORD PTR [rdi-0x60006001]
  43713f:	call   FWORD PTR [rdi-0x60006001]
  437145:	call   FWORD PTR [rdi-0x60006001]
  43714b:	call   FWORD PTR [rdi-0x60006001]
  437151:	call   FWORD PTR [rdi-0x60006001]
  437157:	call   FWORD PTR [rdi-0x60006001]
  43715d:	call   FWORD PTR [rdi-0x60006001]
  437163:	call   FWORD PTR [rdi-0x60006001]
  437169:	call   FWORD PTR [rdi-0x60006001]
  43716f:	call   FWORD PTR [rdi+0x29ff9fff]
  437175:	add    BYTE PTR [rsi-0x61006101],bl
  43717b:	call   FWORD PTR [rsi-0x61006101]
  437181:	call   FWORD PTR [rsi-0x61006101]
  437187:	call   FWORD PTR [rsi-0x61006101]
  43718d:	call   FWORD PTR [rsi-0x61006101]
  437193:	call   FWORD PTR [rsi-0x61006101]
  437199:	call   FWORD PTR [rsi-0x61006101]
  43719f:	call   FWORD PTR [rsi-0x61006101]
  4371a5:	call   FWORD PTR [rsi-0x61006101]
  4371ab:	call   FWORD PTR [rsi-0x61006101]
  4371b1:	call   FWORD PTR [rsi-0x61006101]
  4371b7:	call   FWORD PTR [rsi-0x61006101]
  4371bd:	call   FWORD PTR [rsi-0x61006101]
  4371c3:	call   FWORD PTR [rsi-0x61006101]
  4371c9:	call   FWORD PTR [rsi+0x29ff9eff]
  4371cf:	add    BYTE PTR [rbp-0x62006201],bl
  4371d5:	call   FWORD PTR [rbp-0x62006201]
  4371db:	call   FWORD PTR [rbp-0x62006201]
  4371e1:	call   FWORD PTR [rbp-0x62006201]
  4371e7:	call   FWORD PTR [rbp-0x62006201]
  4371ed:	call   FWORD PTR [rbp-0x62006201]
  4371f3:	call   FWORD PTR [rbp-0x62006201]
  4371f9:	call   FWORD PTR [rbp-0x62006201]
  4371ff:	call   FWORD PTR [rbp-0x62006201]
  437205:	call   FWORD PTR [rbp-0x62006201]
  43720b:	call   FWORD PTR [rbp-0x62006201]
  437211:	call   FWORD PTR [rbp-0x62006201]
  437217:	call   FWORD PTR [rbp-0x62006201]
  43721d:	call   FWORD PTR [rbp-0x62006201]
  437223:	call   FWORD PTR [rbp+0x29ff9dff]
  437229:	add    BYTE PTR [rdi+rdi*8-0x630064],bl
  437230:	pushf  
  437231:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437238:	pushf  
  437239:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437240:	pushf  
  437241:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437248:	pushf  
  437249:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437250:	pushf  
  437251:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437258:	pushf  
  437259:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437260:	pushf  
  437261:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437268:	pushf  
  437269:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437270:	pushf  
  437271:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437278:	pushf  
  437279:	call   FWORD PTR [rdi+rdi*8-0x630064]
  437280:	pushf  
  437281:	jmp    FWORD PTR [rcx]
  437283:	add    BYTE PTR [rbx-0x47ff4701],bl
  437289:	add    BYTE PTR [rax-0x64006500],bh
  43728f:	call   FWORD PTR [rbx-0x64006401]
  437295:	call   FWORD PTR [rbx-0x64006401]
  43729b:	call   FWORD PTR [rbx-0x64006401]
  4372a1:	call   FWORD PTR [rbx-0x64006401]
  4372a7:	call   FWORD PTR [rbx-0x64006401]
  4372ad:	call   FWORD PTR [rbx-0x64006401]
  4372b3:	call   FWORD PTR [rbx-0x64006401]
  4372b9:	call   FWORD PTR [rbx-0x64006401]
  4372bf:	call   FWORD PTR [rbx-0x64006401]
  4372c5:	call   FWORD PTR [rbx-0x64006401]
  4372cb:	call   FWORD PTR [rbx-0x64006401]
  4372d1:	call   FWORD PTR [rbx-0x64006401]
  4372d7:	call   FWORD PTR [rbx+0x29ff9bff]
  4372dd:	add    BYTE PTR [rdx-0x47ff4701],bl
  4372e3:	add    BYTE PTR [rax-0x65006600],bh
  4372e9:	call   FWORD PTR [rdx-0x65006501]
  4372ef:	call   FWORD PTR [rdx-0x65006501]
  4372f5:	call   FWORD PTR [rdx-0x65006501]
  4372fb:	call   FWORD PTR [rdx-0x65006501]
  437301:	call   FWORD PTR [rdx-0x65006501]
  437307:	call   FWORD PTR [rdx-0x65006501]
  43730d:	call   FWORD PTR [rdx-0x65006501]
  437313:	call   FWORD PTR [rdx-0x65006501]
  437319:	call   FWORD PTR [rdx-0x65006501]
  43731f:	call   FWORD PTR [rdx-0x65006501]
  437325:	call   FWORD PTR [rdx-0x65006501]
  43732b:	call   FWORD PTR [rdx-0x65006501]
  437331:	call   FWORD PTR [rdx+0x29ff9aff]
  437337:	add    BYTE PTR [rcx-0x66006601],bl
  43733d:	call   FWORD PTR [rcx-0x66006601]
  437343:	call   FWORD PTR [rcx-0x66006601]
  437349:	call   FWORD PTR [rcx-0x66006601]
  43734f:	call   FWORD PTR [rcx-0x66006601]
  437355:	call   FWORD PTR [rcx-0x66006601]
  43735b:	call   FWORD PTR [rcx-0x66006601]
  437361:	call   FWORD PTR [rcx-0x66006601]
  437367:	call   FWORD PTR [rcx-0x66006601]
  43736d:	call   FWORD PTR [rcx-0x66006601]
  437373:	call   FWORD PTR [rcx-0x66006601]
  437379:	call   FWORD PTR [rcx-0x66006601]
  43737f:	call   FWORD PTR [rcx-0x66006601]
  437385:	call   FWORD PTR [rcx-0x66006601]
  43738b:	call   FWORD PTR [rcx+0x29ff99ff]
  437391:	add    BYTE PTR [rax-0x67006701],bl
  437397:	call   FWORD PTR [rax-0x67006701]
  43739d:	call   FWORD PTR [rax-0x67006701]
  4373a3:	call   FWORD PTR [rax-0x67006701]
  4373a9:	call   FWORD PTR [rax-0x67006701]
  4373af:	call   FWORD PTR [rax-0x67006701]
  4373b5:	call   FWORD PTR [rax-0x67006701]
  4373bb:	call   FWORD PTR [rax-0x67006701]
  4373c1:	call   FWORD PTR [rax-0x67006701]
  4373c7:	call   FWORD PTR [rax-0x67006701]
  4373cd:	call   FWORD PTR [rax-0x67006701]
  4373d3:	call   FWORD PTR [rax-0x67006701]
  4373d9:	call   FWORD PTR [rax-0x67006701]
  4373df:	call   FWORD PTR [rax-0x67006701]
  4373e5:	call   FWORD PTR [rax+0x29ff98ff]
  4373eb:	add    BYTE PTR [rdi-0x68006801],dl
  4373f1:	call   QWORD PTR [rdi-0x68006801]
  4373f7:	call   QWORD PTR [rdi-0x68006801]
  4373fd:	call   QWORD PTR [rdi-0x68006801]
  437403:	call   QWORD PTR [rdi-0x68006801]
  437409:	call   QWORD PTR [rdi-0x68006801]
  43740f:	call   QWORD PTR [rdi-0x68006801]
  437415:	call   QWORD PTR [rdi-0x68006801]
  43741b:	call   QWORD PTR [rdi-0x68006801]
  437421:	call   QWORD PTR [rdi-0x68006801]
  437427:	call   QWORD PTR [rdi-0x68006801]
  43742d:	call   QWORD PTR [rdi-0x68006801]
  437433:	call   QWORD PTR [rdi-0x68006801]
  437439:	call   QWORD PTR [rdi-0x68006801]
  43743f:	call   QWORD PTR [rdi+0x29ff97ff]
  437445:	add    BYTE PTR [rsi-0x69006901],dl
  43744b:	call   QWORD PTR [rsi-0x69006901]
  437451:	call   QWORD PTR [rsi-0x69006901]
  437457:	call   QWORD PTR [rsi-0x69006901]
  43745d:	call   QWORD PTR [rsi-0x69006901]
  437463:	call   QWORD PTR [rsi-0x69006901]
  437469:	call   QWORD PTR [rsi-0x69006901]
  43746f:	call   QWORD PTR [rsi-0x69006901]
  437475:	call   QWORD PTR [rsi-0x69006901]
  43747b:	call   QWORD PTR [rsi-0x69006901]
  437481:	call   QWORD PTR [rsi-0x69006901]
  437487:	call   QWORD PTR [rsi-0x69006901]
  43748d:	call   QWORD PTR [rsi-0x69006901]
  437493:	call   QWORD PTR [rsi-0x69006901]
  437499:	call   QWORD PTR [rsi+0x29ff96ff]
  43749f:	add    BYTE PTR [rbp-0x6a006a01],dl
  4374a5:	call   QWORD PTR [rbp-0x6a006a01]
  4374ab:	call   QWORD PTR [rbp-0x6a006a01]
  4374b1:	call   QWORD PTR [rbp-0x6a006a01]
  4374b7:	call   QWORD PTR [rbp-0x6a006a01]
  4374bd:	call   QWORD PTR [rbp-0x6a006a01]
  4374c3:	call   QWORD PTR [rbp-0x6a006a01]
  4374c9:	call   QWORD PTR [rbp-0x6a006a01]
  4374cf:	call   QWORD PTR [rbp-0x6a006a01]
  4374d5:	call   QWORD PTR [rbp-0x6a006a01]
  4374db:	call   QWORD PTR [rbp-0x6a006a01]
  4374e1:	call   QWORD PTR [rbp-0x6a006a01]
  4374e7:	call   QWORD PTR [rbp-0x6a006a01]
  4374ed:	call   QWORD PTR [rbp-0x6a006a01]
  4374f3:	call   QWORD PTR [rbp+0x29ff95ff]
  4374f9:	add    BYTE PTR [rdi+rdi*8-0x6b006c],dl
  437500:	xchg   esp,eax
  437501:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437508:	xchg   esp,eax
  437509:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437510:	xchg   esp,eax
  437511:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437518:	xchg   esp,eax
  437519:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437520:	xchg   esp,eax
  437521:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437528:	xchg   esp,eax
  437529:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437530:	xchg   esp,eax
  437531:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437538:	xchg   esp,eax
  437539:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437540:	xchg   esp,eax
  437541:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437548:	xchg   esp,eax
  437549:	call   QWORD PTR [rdi+rdi*8-0x6b006c]
  437550:	xchg   esp,eax
  437551:	jmp    FWORD PTR [rcx]
  437553:	add    BYTE PTR [rbx-0x6c006c01],dl
  437559:	call   QWORD PTR [rbx-0x46006c01]
  43755f:	add    BYTE PTR [rbx-0x6c006c01],dl
  437565:	(bad)  
  437566:	mov    edx,0x93ff9300
  43756b:	call   QWORD PTR [rbx-0x6c006c01]
  437571:	call   QWORD PTR [rbx-0x6c006c01]
  437577:	(bad)  
  437578:	mov    ebx,0x9300bb00
  43757d:	call   QWORD PTR [rbx-0x44006c01]
  437583:	add    BYTE PTR [rbx-0x44ff4500],bh
  437589:	add    BYTE PTR [rbx-0x44ff4500],bh
  43758f:	add    BYTE PTR [rbx-0x44ff4500],bh
  437595:	add    BYTE PTR [rbx-0x6c006d00],bh
  43759b:	(bad)  
  43759c:	mov    ebx,0xbb00bb00
  4375a1:	add    BYTE PTR [rbx-0x44ff4500],bh
  4375a7:	add    BYTE PTR [rbx+0x29ff9300],bh
  4375ad:	add    BYTE PTR [rdx-0x6d006d01],dl
  4375b3:	call   QWORD PTR [rdx-0x6d006d01]
  4375b9:	call   QWORD PTR [rdx-0x6d006d01]
  4375bf:	call   QWORD PTR [rdx-0x6d006d01]
  4375c5:	call   QWORD PTR [rdx-0x6d006d01]
  4375cb:	call   QWORD PTR [rdx-0x6d006d01]
  4375d1:	call   QWORD PTR [rdx-0x6d006d01]
  4375d7:	call   QWORD PTR [rdx-0x6d006d01]
  4375dd:	call   QWORD PTR [rdx-0x6d006d01]
  4375e3:	call   QWORD PTR [rdx-0x6d006d01]
  4375e9:	call   QWORD PTR [rdx-0x6d006d01]
  4375ef:	call   QWORD PTR [rdx-0x6d006d01]
  4375f5:	call   QWORD PTR [rdx-0x6d006d01]
  4375fb:	call   QWORD PTR [rdx-0x6d006d01]
  437601:	call   QWORD PTR [rdx+0x29ff92ff]
  437607:	add    BYTE PTR [rcx-0x6e006e01],dl
  43760d:	call   QWORD PTR [rcx-0x6e006e01]
  437613:	call   QWORD PTR [rcx-0x6e006e01]
  437619:	call   QWORD PTR [rcx-0x6e006e01]
  43761f:	call   QWORD PTR [rcx-0x6e006e01]
  437625:	call   QWORD PTR [rcx-0x6e006e01]
  43762b:	call   QWORD PTR [rcx-0x6e006e01]
  437631:	call   QWORD PTR [rcx-0x6e006e01]
  437637:	call   QWORD PTR [rcx-0x6e006e01]
  43763d:	call   QWORD PTR [rcx-0x6e006e01]
  437643:	call   QWORD PTR [rcx-0x6e006e01]
  437649:	call   QWORD PTR [rcx-0x6e006e01]
  43764f:	call   QWORD PTR [rcx-0x6e006e01]
  437655:	call   QWORD PTR [rcx-0x6e006e01]
  43765b:	call   QWORD PTR [rcx+0x29ff91ff]
  437661:	add    BYTE PTR [rax-0x6f006f01],dl
  437667:	call   QWORD PTR [rax-0x6f006f01]
  43766d:	call   QWORD PTR [rax-0x6f006f01]
  437673:	(bad)  
  437674:	mov    esp,0x90ff9000
  437679:	call   QWORD PTR [rax-0x6f006f01]
  43767f:	call   QWORD PTR [rax-0x6f006f01]
  437685:	call   QWORD PTR [rax-0x6f006f01]
  43768b:	call   QWORD PTR [rax-0x6f006f01]
  437691:	call   QWORD PTR [rax-0x6f006f01]
  437697:	call   QWORD PTR [rax-0x6f006f01]
  43769d:	call   QWORD PTR [rax-0x6f006f01]
  4376a3:	call   QWORD PTR [rax-0x6f006f01]
  4376a9:	call   QWORD PTR [rax-0x6f006f01]
  4376af:	call   QWORD PTR [rax-0x6f006f01]
  4376b5:	call   QWORD PTR [rax+0x29ff90ff]
  4376bb:	add    BYTE PTR [rbp-0x70ff4300],bh
  4376c1:	(bad)  
  4376c2:	mov    ebp,0xbd00bd00
  4376c7:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376cd:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376d3:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376d9:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376df:	add    BYTE PTR [rsi-0x42ff4300],bh
  4376e5:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376eb:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376f1:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376f7:	add    BYTE PTR [rbp-0x42ff4300],bh
  4376fd:	add    BYTE PTR [rbp-0x42ff4300],bh
  437703:	add    BYTE PTR [rdi-0x3eff4000],bh
  437709:	add    dl,al
  43770b:	add    bl,al
  43770d:	add    BYTE PTR [rbp-0x42ff3c00],bh
  437713:	add    BYTE PTR [rcx],ch
  437715:	add    BYTE PTR [rsi-0x71007101],cl
  43771b:	dec    DWORD PTR [rsi-0x71007101]
  437721:	dec    DWORD PTR [rsi-0x71007101]
  437727:	dec    DWORD PTR [rsi-0x71007101]
  43772d:	dec    DWORD PTR [rsi-0x71007101]
  437733:	dec    DWORD PTR [rsi-0x71007101]
  437739:	dec    DWORD PTR [rsi-0x71007101]
  43773f:	dec    DWORD PTR [rsi-0x71007101]
  437745:	dec    DWORD PTR [rsi-0x71007101]
  43774b:	dec    DWORD PTR [rsi-0x71007101]
  437751:	dec    DWORD PTR [rsi-0x71007101]
  437757:	dec    DWORD PTR [rsi-0x71007101]
  43775d:	dec    DWORD PTR [rsi-0x71007101]
  437763:	dec    DWORD PTR [rsi-0x71007101]
  437769:	dec    DWORD PTR [rsi+0x29ff8eff]
  43776f:	add    BYTE PTR [rbp-0x72007201],cl
  437775:	dec    DWORD PTR [rbp-0x72007201]
  43777b:	dec    DWORD PTR [rbp-0x72007201]
  437781:	dec    DWORD PTR [rbp-0x72007201]
  437787:	dec    DWORD PTR [rbp-0x72007201]
  43778d:	dec    DWORD PTR [rbp-0x72007201]
  437793:	dec    DWORD PTR [rbp-0x72007201]
  437799:	dec    DWORD PTR [rbp-0x72007201]
  43779f:	dec    DWORD PTR [rbp-0x72007201]
  4377a5:	dec    DWORD PTR [rbp-0x72007201]
  4377ab:	dec    DWORD PTR [rbp-0x72007201]
  4377b1:	dec    DWORD PTR [rbp-0x72007201]
  4377b7:	dec    DWORD PTR [rbp-0x72007201]
  4377bd:	dec    DWORD PTR [rbp-0x72007201]
  4377c3:	dec    DWORD PTR [rbp+0x29ff8dff]
  4377c9:	add    BYTE PTR [rdi+rdi*8-0x730074],cl
  4377d0:	mov    edi,?
  4377d2:	mov    edi,?
  4377d4:	mov    edi,?
  4377d6:	mov    edi,?
  4377d8:	mov    edi,?
  4377da:	mov    edi,?
  4377dc:	mov    edi,?
  4377de:	mov    edi,?
  4377e0:	mov    edi,?
  4377e2:	mov    edi,?
  4377e4:	mov    edi,?
  4377e6:	mov    edi,?
  4377e8:	mov    edi,?
  4377ea:	mov    edi,?
  4377ec:	mov    edi,?
  4377ee:	mov    edi,?
  4377f0:	mov    edi,?
  4377f2:	mov    edi,?
  4377f4:	mov    edi,?
  4377f6:	mov    edi,?
  4377f8:	mov    edi,?
  4377fa:	mov    edi,?
  4377fc:	mov    edi,?
  4377fe:	mov    edi,?
  437800:	mov    edi,?
  437802:	mov    edi,?
  437804:	mov    edi,?
  437806:	mov    edi,?
  437808:	mov    edi,?
  43780a:	mov    edi,?
  43780c:	mov    edi,?
  43780e:	mov    edi,?
  437810:	mov    edi,?
  437812:	mov    edi,?
  437814:	mov    edi,?
  437816:	mov    edi,?
  437818:	mov    edi,?
  43781a:	mov    edi,?
  43781c:	mov    edi,?
  43781e:	mov    edi,?
  437820:	mov    edi,?
  437822:	sub    DWORD PTR [rax],eax
  437824:	mov    edi,edi
  437826:	mov    edi,edi
  437828:	mov    edi,edi
  43782a:	mov    edi,edi
  43782c:	mov    edi,edi
  43782e:	mov    edi,edi
  437830:	mov    edi,edi
  437832:	mov    edi,edi
  437834:	mov    edi,edi
  437836:	mov    edi,edi
  437838:	mov    edi,edi
  43783a:	mov    edi,edi
  43783c:	mov    edi,edi
  43783e:	mov    edi,edi
  437840:	mov    edi,edi
  437842:	mov    edi,edi
  437844:	mov    edi,edi
  437846:	mov    edi,edi
  437848:	mov    edi,edi
  43784a:	mov    edi,edi
  43784c:	mov    edi,edi
  43784e:	mov    edi,edi
  437850:	mov    edi,edi
  437852:	mov    edi,edi
  437854:	mov    edi,edi
  437856:	mov    edi,edi
  437858:	mov    edi,edi
  43785a:	mov    edi,edi
  43785c:	mov    edi,edi
  43785e:	mov    edi,edi
  437860:	mov    edi,edi
  437862:	mov    edi,edi
  437864:	mov    edi,edi
  437866:	mov    edi,edi
  437868:	mov    edi,edi
  43786a:	mov    edi,edi
  43786c:	mov    edi,edi
  43786e:	mov    edi,edi
  437870:	mov    edi,edi
  437872:	mov    edi,edi
  437874:	mov    edi,edi
  437876:	mov    edi,edi
  437878:	mov    edi,edi
  43787a:	mov    edi,edi
  43787c:	sub    DWORD PTR [rax],eax
  43787e:	mov    bh,bh
  437880:	mov    bh,bh
  437882:	mov    bh,bh
  437884:	mov    bh,bh
  437886:	mov    bh,bh
  437888:	mov    bh,bh
  43788a:	mov    bh,bh
  43788c:	mov    bh,bh
  43788e:	mov    bh,bh
  437890:	mov    bh,bh
  437892:	mov    bh,bh
  437894:	mov    bh,bh
  437896:	mov    bh,bh
  437898:	mov    bh,bh
  43789a:	mov    bh,bh
  43789c:	mov    bh,bh
  43789e:	mov    bh,bh
  4378a0:	mov    bh,bh
  4378a2:	mov    bh,bh
  4378a4:	mov    bh,bh
  4378a6:	mov    bh,bh
  4378a8:	mov    bh,bh
  4378aa:	mov    bh,bh
  4378ac:	mov    bh,bh
  4378ae:	mov    bh,bh
  4378b0:	mov    bh,bh
  4378b2:	mov    bh,bh
  4378b4:	mov    bh,bh
  4378b6:	mov    bh,bh
  4378b8:	mov    bh,bh
  4378ba:	mov    bh,bh
  4378bc:	mov    bh,bh
  4378be:	mov    bh,bh
  4378c0:	mov    bh,bh
  4378c2:	mov    bh,bh
  4378c4:	mov    bh,bh
  4378c6:	mov    bh,bh
  4378c8:	mov    bh,bh
  4378ca:	mov    bh,bh
  4378cc:	mov    bh,bh
  4378ce:	mov    bh,bh
  4378d0:	mov    bh,bh
  4378d2:	mov    bh,bh
  4378d4:	mov    bh,bh
  4378d6:	sub    DWORD PTR [rax],eax
  4378d8:	mov    edi,edi
  4378da:	(bad)
  4378dd:	add    ch,al
  4378df:	add    BYTE PTR [rcx-0x76007601],cl
  4378e5:	dec    DWORD PTR [rcx-0x76007601]
  4378eb:	dec    DWORD PTR [rcx-0x76007601]
  4378f1:	dec    DWORD PTR [rcx-0x76007601]
  4378f7:	dec    DWORD PTR [rcx-0x76007601]
  4378fd:	dec    DWORD PTR [rcx-0x76007601]
  437903:	dec    DWORD PTR [rcx-0x76007601]
  437909:	dec    DWORD PTR [rcx-0x76007601]
  43790f:	dec    DWORD PTR [rcx-0x76007601]
  437915:	dec    DWORD PTR [rcx-0x76007601]
  43791b:	dec    DWORD PTR [rcx-0x76007601]
  437921:	dec    DWORD PTR [rcx-0x76007601]
  437927:	dec    DWORD PTR [rcx-0x76007601]
  43792d:	dec    DWORD PTR [rcx-0x77ffd601]
  437933:	inc    ebp
  437935:	add    ch,al
  437937:	add    ch,al
  437939:	add    BYTE PTR [rax-0x77007701],cl
  43793f:	dec    DWORD PTR [rax-0x77007701]
  437945:	dec    DWORD PTR [rax-0x77007701]
  43794b:	dec    DWORD PTR [rax-0x77007701]
  437951:	dec    DWORD PTR [rax-0x77007701]
  437957:	dec    DWORD PTR [rax-0x77007701]
  43795d:	dec    DWORD PTR [rax-0x77007701]
  437963:	dec    DWORD PTR [rax-0x77007701]
  437969:	dec    DWORD PTR [rax-0x77007701]
  43796f:	dec    DWORD PTR [rax-0x77007701]
  437975:	dec    DWORD PTR [rax-0x77007701]
  43797b:	dec    DWORD PTR [rax-0x77007701]
  437981:	dec    DWORD PTR [rax-0x77007701]
  437987:	dec    DWORD PTR [rax-0x78ffd601]
  43798d:	inc    DWORD PTR [rdi-0x78007801]
  437993:	inc    DWORD PTR [rdi-0x78007801]
  437999:	inc    DWORD PTR [rdi-0x78007801]
  43799f:	inc    DWORD PTR [rdi-0x78007801]
  4379a5:	inc    DWORD PTR [rdi-0x78007801]
  4379ab:	inc    DWORD PTR [rdi-0x78007801]
  4379b1:	inc    DWORD PTR [rdi-0x78007801]
  4379b7:	inc    DWORD PTR [rdi-0x78007801]
  4379bd:	inc    DWORD PTR [rdi-0x78007801]
  4379c3:	inc    DWORD PTR [rdi-0x78007801]
  4379c9:	inc    DWORD PTR [rdi-0x78007801]
  4379cf:	inc    DWORD PTR [rdi-0x78007801]
  4379d5:	inc    DWORD PTR [rdi-0x78007801]
  4379db:	inc    DWORD PTR [rdi-0x78007801]
  4379e1:	inc    DWORD PTR [rdi-0x79ffd601]
  4379e7:	inc    DWORD PTR [rsi-0x79007901]
  4379ed:	inc    DWORD PTR [rsi-0x79007901]
  4379f3:	inc    DWORD PTR [rsi-0x79007901]
  4379f9:	inc    DWORD PTR [rsi-0x79007901]
  4379ff:	inc    DWORD PTR [rsi-0x79007901]
  437a05:	inc    DWORD PTR [rsi-0x79007901]
  437a0b:	inc    DWORD PTR [rsi-0x79007901]
  437a11:	inc    DWORD PTR [rsi-0x79007901]
  437a17:	inc    DWORD PTR [rsi-0x79007901]
  437a1d:	inc    DWORD PTR [rsi-0x79007901]
  437a23:	inc    DWORD PTR [rsi-0x79007901]
  437a29:	inc    esi
  437a2b:	add    BYTE PTR [rsi-0x79007901],al
  437a31:	inc    DWORD PTR [rsi-0x79007901]
  437a37:	inc    DWORD PTR [rsi-0x79007901]
  437a3d:	jmp    FWORD PTR [rcx]
  437a3f:	add    BYTE PTR [rbp+0x7b007bff],al
  437a45:	add    BYTE PTR [rbx+0x0],bh
  437a48:	test   edi,edi
  437a4a:	test   edi,edi
  437a4c:	test   edi,edi
  437a4e:	test   edi,edi
  437a50:	test   edi,edi
  437a52:	test   edi,edi
  437a54:	test   edi,edi
  437a56:	test   edi,edi
  437a58:	test   edi,edi
  437a5a:	test   edi,edi
  437a5c:	test   edi,edi
  437a5e:	test   edi,edi
  437a60:	test   edi,edi
  437a62:	test   edi,edi
  437a64:	test   edi,edi
  437a66:	test   edi,edi
  437a68:	test   edi,edi
  437a6a:	test   edi,edi
  437a6c:	test   edi,edi
  437a6e:	test   edi,edi
  437a70:	test   edi,edi
  437a72:	test   edi,edi
  437a74:	test   edi,edi
  437a76:	test   edi,edi
  437a78:	test   edi,edi
  437a7a:	test   edi,edi
  437a7c:	test   edi,edi
  437a7e:	test   edi,edi
  437a80:	test   edi,edi
  437a82:	test   edi,edi
  437a84:	test   edi,edi
  437a86:	test   edi,edi
  437a88:	test   edi,edi
  437a8a:	test   edi,edi
  437a8c:	test   edi,edi
  437a8e:	test   edi,edi
  437a90:	test   edi,edi
  437a92:	test   edi,edi
  437a94:	test   edi,edi
  437a96:	test   edi,edi
  437a98:	sub    DWORD PTR [rax],eax
  437a9a:	test   bh,bh
  437a9c:	test   bh,bh
  437a9e:	test   bh,bh
  437aa0:	test   bh,bh
  437aa2:	jl     0x437aa4
  437aa4:	test   bh,bh
  437aa6:	test   bh,bh
  437aa8:	jl     0x437aaa
  437aaa:	jl     0x437aac
  437aac:	test   bh,bh
  437aae:	test   bh,bh
  437ab0:	test   bh,bh
  437ab2:	jl     0x437ab4
  437ab4:	jl     0x437ab6
  437ab6:	test   bh,bh
  437ab8:	jl     0x437aba
  437aba:	test   bh,bh
  437abc:	jl     0x437abe
  437abe:	test   bh,bh
  437ac0:	test   bh,bh
  437ac2:	test   bh,bh
  437ac4:	test   bh,bh
  437ac6:	jl     0x437ac8
  437ac8:	test   bh,bh
  437aca:	test   bh,bh
  437acc:	test   bh,bh
  437ace:	test   bh,bh
  437ad0:	test   bh,bh
  437ad2:	test   bh,bh
  437ad4:	test   bh,bh
  437ad6:	test   bh,bh
  437ad8:	test   bh,bh
  437ada:	test   bh,bh
  437adc:	test   bh,bh
  437ade:	test   bh,bh
  437ae0:	jl     0x437ae2
  437ae2:	test   bh,bh
  437ae4:	test   bh,bh
  437ae6:	test   bh,bh
  437ae8:	test   bh,bh
  437aea:	test   bh,bh
  437aec:	test   bh,bh
  437aee:	test   bh,bh
  437af0:	jl     0x437af2
  437af2:	sub    DWORD PTR [rax],eax
  437af4:	cmp    edi,0xffffff83
  437af7:	inc    DWORD PTR [rbx-0x7c007c01]
  437afd:	inc    DWORD PTR [rbx-0x7c007c01]
  437b03:	inc    DWORD PTR [rbx-0x7c007c01]
  437b09:	inc    DWORD PTR [rbx-0x7c007c01]
  437b0f:	inc    DWORD PTR [rbx-0x7c007c01]
  437b15:	inc    DWORD PTR [rbx-0x7c007c01]
  437b1b:	inc    DWORD PTR [rbx-0x7c007c01]
  437b21:	inc    DWORD PTR [rbx-0x7c007c01]
  437b27:	inc    DWORD PTR [rbx-0x7c007c01]
  437b2d:	inc    DWORD PTR [rbx-0x7c007c01]
  437b33:	inc    DWORD PTR [rbx-0x7c007c01]
  437b39:	inc    DWORD PTR [rbx-0x7c007c01]
  437b3f:	inc    DWORD PTR [rbx-0x7c007c01]
  437b45:	inc    DWORD PTR [rbx-0x7c007c01]
  437b4b:	jmp    FWORD PTR [rcx]
  437b4d:	add    BYTE PTR [rdx-0x7d007d01],al
  437b53:	inc    DWORD PTR [rdx-0x7d007d01]
  437b59:	inc    DWORD PTR [rdx-0x7d007d01]
  437b5f:	inc    DWORD PTR [rdx-0x7d007d01]
  437b65:	inc    DWORD PTR [rdx-0x7d007d01]
  437b6b:	inc    DWORD PTR [rdx-0x7d007d01]
  437b71:	(bad)  
  437b72:	jle    0x437b74
  437b74:	jle    0x437b76
  437b76:	(bad)  
  437b77:	inc    DWORD PTR [rdx-0x7d007d01]
  437b7d:	inc    DWORD PTR [rdx-0x7d007d01]
  437b83:	inc    DWORD PTR [rdx-0x7d007d01]
  437b89:	inc    DWORD PTR [rdx-0x7d007d01]
  437b8f:	inc    DWORD PTR [rdx-0x7d007d01]
  437b95:	inc    DWORD PTR [rdx-0x7d007d01]
  437b9b:	inc    DWORD PTR [rdx-0x7d007d01]
  437ba1:	inc    DWORD PTR [rdx+0x29ff82ff]
  437ba7:	add    BYTE PTR [rcx-0x7e007e01],al
  437bad:	inc    DWORD PTR [rcx-0x7e007e01]
  437bb3:	(bad)  
  437bb4:	jge    0x437bb6
  437bb6:	cmp    edi,0xff81ff81
  437bbc:	cmp    edi,0xff81ff81
  437bc2:	cmp    edi,0xff81ff81
  437bc8:	cmp    edi,0xc7ff81
  437bce:	mov    DWORD PTR [rax],0xff81ff81
  437bd4:	cmp    edi,0xc700c7
  437bda:	mov    DWORD PTR [rax],0xc700c7
  437be0:	mov    DWORD PTR [rax],0xc700c7
  437be6:	mov    DWORD PTR [rax],0xc700c7
  437bec:	cmp    edi,0xc7ff81
  437bf2:	mov    DWORD PTR [rax],0xc700c7
  437bf8:	mov    DWORD PTR [rax],0xc700c7
  437bfe:	cmp    edi,0xc80029
  437c04:	enter  0x8000,0xff
  437c08:	cmp    bh,0xc9
  437c0b:	add    al,cl
  437c0d:	add    al,cl
  437c0f:	add    cl,cl
  437c11:	add    cl,cl
  437c13:	add    al,cl
  437c15:	add    al,cl
  437c17:	add    al,cl
  437c19:	add    cl,cl
  437c1b:	add    cl,cl
  437c1d:	add    al,cl
  437c1f:	add    cl,cl
  437c21:	add    al,cl
  437c23:	add    cl,cl
  437c25:	add    al,cl
  437c27:	add    al,cl
  437c29:	add    al,cl
  437c2b:	add    al,cl
  437c2d:	add    cl,cl
  437c2f:	add    al,cl
  437c31:	add    al,cl
  437c33:	add    al,cl
  437c35:	add    al,cl
  437c37:	add    al,cl
  437c39:	add    al,cl
  437c3b:	add    al,cl
  437c3d:	add    al,cl
  437c3f:	add    al,cl
  437c41:	add    al,cl
  437c43:	add    al,cl
  437c45:	add    al,cl
  437c47:	add    cl,cl
  437c49:	add    al,cl
  437c4b:	add    al,cl
  437c4d:	add    al,cl
  437c4f:	add    al,cl
  437c51:	add    al,cl
  437c53:	add    al,cl
  437c55:	add    al,cl
  437c57:	add    cl,cl
  437c59:	add    BYTE PTR [rcx],ch
  437c5b:	add    BYTE PTR [rdi-0x1],bh
  437c5e:	jg     0x437c5f
  437c60:	jg     0x437c61
  437c62:	jg     0x437c63
  437c64:	jg     0x437c65
  437c66:	jg     0x437c67
  437c68:	jg     0x437c69
  437c6a:	jg     0x437c6b
  437c6c:	jg     0x437c6d
  437c6e:	jg     0x437c6f
  437c70:	jg     0x437c71
  437c72:	jg     0x437c73
  437c74:	jg     0x437c75
  437c76:	jg     0x437c77
  437c78:	jg     0x437c79
  437c7a:	jg     0x437c7b
  437c7c:	jg     0x437c7d
  437c7e:	jg     0x437c7f
  437c80:	jg     0x437c81
  437c82:	jg     0x437c83
  437c84:	jg     0x437c85
  437c86:	jg     0x437c87
  437c88:	jg     0x437c89
  437c8a:	jg     0x437c8b
  437c8c:	jg     0x437c8d
  437c8e:	jg     0x437c8f
  437c90:	jg     0x437c91
  437c92:	jg     0x437c93
  437c94:	jg     0x437c95
  437c96:	jg     0x437c97
  437c98:	jg     0x437c99
  437c9a:	jg     0x437c9b
  437c9c:	jg     0x437c9d
  437c9e:	jg     0x437c9f
  437ca0:	jg     0x437ca1
  437ca2:	jg     0x437ca3
  437ca4:	jg     0x437ca5
  437ca6:	jg     0x437ca7
  437ca8:	jg     0x437ca9
  437caa:	jg     0x437cab
  437cac:	jg     0x437cad
  437cae:	jg     0x437caf
  437cb0:	jg     0x437cb1
  437cb2:	jg     0x437cb3
  437cb4:	sub    DWORD PTR [rax],eax
  437cb6:	jle    0x437cb7
  437cb8:	jle    0x437cb9
  437cba:	jle    0x437cbb
  437cbc:	jle    0x437cbd
  437cbe:	jle    0x437cbf
  437cc0:	jle    0x437cc1
  437cc2:	jle    0x437cc3
  437cc4:	jle    0x437cc5
  437cc6:	jle    0x437cc7
  437cc8:	jle    0x437cc9
  437cca:	jle    0x437ccb
  437ccc:	jle    0x437ccd
  437cce:	jle    0x437ccf
  437cd0:	jle    0x437cd1
  437cd2:	jle    0x437cd3
  437cd4:	jle    0x437cd5
  437cd6:	jle    0x437cd7
  437cd8:	jle    0x437cd9
  437cda:	(bad)  
  437cdb:	add    BYTE PTR [rdx+0x7eff7e00],al
  437ce1:	(bad)  
  437ce2:	jle    0x437ce3
  437ce4:	jle    0x437ce5
  437ce6:	jle    0x437ce7
  437ce8:	jle    0x437ce9
  437cea:	jle    0x437ceb
  437cec:	xchg   BYTE PTR [rax],al
  437cee:	jle    0x437cef
  437cf0:	jle    0x437cf1
  437cf2:	jle    0x437cf3
  437cf4:	jle    0x437cf5
  437cf6:	jle    0x437cf7
  437cf8:	jle    0x437cf9
  437cfa:	jle    0x437cfb
  437cfc:	jle    0x437cfd
  437cfe:	jle    0x437cff
  437d00:	jle    0x437d01
  437d02:	jle    0x437d03
  437d04:	jle    0x437d05
  437d06:	jle    0x437d07
  437d08:	jle    0x437d09
  437d0a:	jle    0x437d0b
  437d0c:	jle    0x437d0d
  437d0e:	sub    DWORD PTR [rax],eax
  437d10:	jge    0x437d11
  437d12:	jge    0x437d13
  437d14:	jge    0x437d15
  437d16:	jge    0x437d17
  437d18:	retf   0x7d00
  437d1b:	(bad)  
  437d1c:	jge    0x437d1d
  437d1e:	retf   0xca00
  437d21:	add    BYTE PTR [rbp-0x1],bh
  437d24:	jge    0x437d25
  437d26:	jge    0x437d27
  437d28:	retf   0xca00
  437d2b:	add    BYTE PTR [rbp-0x1],bh
  437d2e:	retf   0x7d00
  437d31:	dec    edx
  437d33:	add    BYTE PTR [rbp-0x1],bh
  437d36:	jge    0x437d37
  437d38:	jge    0x437d39
  437d3a:	jge    0x437d3b
  437d3c:	retf   0x7d00
  437d3f:	(bad)  
  437d40:	jge    0x437d41
  437d42:	jge    0x437d43
  437d44:	jge    0x437d45
  437d46:	jge    0x437d47
  437d48:	jge    0x437d49
  437d4a:	jge    0x437d4b
  437d4c:	jge    0x437d4d
  437d4e:	jge    0x437d4f
  437d50:	jge    0x437d51
  437d52:	jge    0x437d53
  437d54:	jge    0x437d55
  437d56:	retf   0x7d00
  437d59:	(bad)  
  437d5a:	jge    0x437d5b
  437d5c:	jge    0x437d5d
  437d5e:	jge    0x437d5f
  437d60:	jge    0x437d61
  437d62:	jge    0x437d63
  437d64:	jge    0x437d65
  437d66:	retf   0x2900
  437d69:	add    BYTE PTR [rdi+rdi*8+0x7c],bh
  437d6d:	(bad)  
  437d6e:	jl     0x437d6f
  437d70:	jl     0x437d71
  437d72:	jl     0x437d73
  437d74:	jl     0x437d75
  437d76:	jl     0x437d77
  437d78:	jl     0x437d79
  437d7a:	jl     0x437d7b
  437d7c:	jl     0x437d7d
  437d7e:	jl     0x437d7f
  437d80:	jl     0x437d81
  437d82:	jl     0x437d83
  437d84:	jl     0x437d85
  437d86:	jl     0x437d87
  437d88:	jl     0x437d89
  437d8a:	retf   
  437d8b:	add    BYTE PTR [rdi+rdi*8-0x34],bh
  437d8f:	add    ah,cl
  437d91:	add    BYTE PTR [rdi+rdi*8+0x7c],bh
  437d95:	(bad)  
  437d96:	jl     0x437d97
  437d98:	jl     0x437d99
  437d9a:	jl     0x437d9b
  437d9c:	jl     0x437d9d
  437d9e:	jl     0x437d9f
  437da0:	xchg   BYTE PTR [rax],al
  437da2:	jl     0x437da3
  437da4:	jl     0x437da5
  437da6:	jl     0x437da7
  437da8:	jl     0x437da9
  437daa:	jl     0x437dab
  437dac:	jl     0x437dad
  437dae:	jl     0x437daf
  437db0:	jl     0x437db1
  437db2:	jl     0x437db3
  437db4:	jl     0x437db5
  437db6:	jl     0x437db7
  437db8:	jl     0x437db9
  437dba:	jl     0x437dbb
  437dbc:	jl     0x437dbd
  437dbe:	jl     0x437dbf
  437dc0:	jl     0x437dc1
  437dc2:	sub    DWORD PTR [rax],eax
  437dc4:	jnp    0x437dc5
  437dc6:	jnp    0x437dc7
  437dc8:	jnp    0x437dc9
  437dca:	jnp    0x437dcb
  437dcc:	jnp    0x437dcd
  437dce:	jnp    0x437dcf
  437dd0:	jnp    0x437dd1
  437dd2:	jnp    0x437dd3
  437dd4:	jnp    0x437dd5
  437dd6:	jnp    0x437dd7
  437dd8:	jnp    0x437dd9
  437dda:	jnp    0x437ddb
  437ddc:	jnp    0x437ddd
  437dde:	jnp    0x437ddf
  437de0:	jnp    0x437de1
  437de2:	jnp    0x437de3
  437de4:	test   BYTE PTR [rax],al
  437de6:	jnp    0x437de7
  437de8:	test   DWORD PTR [rax],eax
  437dea:	test   DWORD PTR [rax],eax
  437dec:	jnp    0x437ded
  437dee:	jnp    0x437def
  437df0:	jnp    0x437df1
  437df2:	jnp    0x437df3
  437df4:	jnp    0x437df5
  437df6:	jnp    0x437df7
  437df8:	jnp    0x437df9
  437dfa:	xchg   BYTE PTR [rax],al
  437dfc:	jnp    0x437dfd
  437dfe:	jnp    0x437dff
  437e00:	jnp    0x437e01
  437e02:	jnp    0x437e03
  437e04:	jnp    0x437e05
  437e06:	jnp    0x437e07
  437e08:	jnp    0x437e09
  437e0a:	jnp    0x437e0b
  437e0c:	jnp    0x437e0d
  437e0e:	jnp    0x437e0f
  437e10:	jnp    0x437e11
  437e12:	jnp    0x437e13
  437e14:	jnp    0x437e15
  437e16:	jnp    0x437e17
  437e18:	jnp    0x437e19
  437e1a:	jnp    0x437e1b
  437e1c:	sub    DWORD PTR [rax],eax
  437e1e:	jp     0x437e1f
  437e20:	jp     0x437e21
  437e22:	jp     0x437e23
  437e24:	jp     0x437e25
  437e26:	jp     0x437e27
  437e28:	jp     0x437e29
  437e2a:	jp     0x437e2b
  437e2c:	jp     0x437e2d
  437e2e:	jp     0x437e2f
  437e30:	jp     0x437e31
  437e32:	jp     0x437e33
  437e34:	jp     0x437e35
  437e36:	jp     0x437e37
  437e38:	int    0x0
  437e3a:	jp     0x437e3b
  437e3c:	int    0x0
  437e3e:	jp     0x437e3f
  437e40:	jp     0x437e41
  437e42:	(bad)  
  437e43:	add    dh,cl
  437e45:	add    BYTE PTR [rdx-0x1],bh
  437e48:	jp     0x437e49
  437e4a:	jp     0x437e4b
  437e4c:	jp     0x437e4d
  437e4e:	jp     0x437e4f
  437e50:	jp     0x437e51
  437e52:	jp     0x437e53
  437e54:	jp     0x437e55
  437e56:	jp     0x437e57
  437e58:	jp     0x437e59
  437e5a:	jp     0x437e5b
  437e5c:	jp     0x437e5d
  437e5e:	jp     0x437e5f
  437e60:	jp     0x437e61
  437e62:	jp     0x437e63
  437e64:	jp     0x437e65
  437e66:	jp     0x437e67
  437e68:	jp     0x437e69
  437e6a:	jp     0x437e6b
  437e6c:	jp     0x437e6d
  437e6e:	jp     0x437e6f
  437e70:	jp     0x437e71
  437e72:	jp     0x437e73
  437e74:	jp     0x437e75
  437e76:	sub    DWORD PTR [rax],eax
  437e78:	jns    0x437e79
  437e7a:	jns    0x437e7b
  437e7c:	jns    0x437e7d
  437e7e:	jns    0x437e7f
  437e80:	jns    0x437e81
  437e82:	jns    0x437e83
  437e84:	jns    0x437e85
  437e86:	jns    0x437e87
  437e88:	jns    0x437e89
  437e8a:	jns    0x437e8b
  437e8c:	jns    0x437e8d
  437e8e:	jns    0x437e8f
  437e90:	jns    0x437e91
  437e92:	jns    0x437e93
  437e94:	jns    0x437e95
  437e96:	jns    0x437e97
  437e98:	jns    0x437e99
  437e9a:	jns    0x437e9b
  437e9c:	iret   
  437e9d:	add    bh,cl
  437e9f:	add    BYTE PTR [rcx-0x1],bh
  437ea2:	jns    0x437ea3
  437ea4:	jns    0x437ea5
  437ea6:	iret   
  437ea7:	add    bh,cl
  437ea9:	add    bh,cl
  437eab:	add    bh,cl
  437ead:	add    bh,cl
  437eaf:	add    bh,cl
  437eb1:	add    bh,cl
  437eb3:	add    bh,cl
  437eb5:	add    bh,cl
  437eb7:	add    bh,cl
  437eb9:	add    bh,cl
  437ebb:	add    BYTE PTR [rcx-0x1],bh
  437ebe:	jns    0x437ebf
  437ec0:	iret   
  437ec1:	add    bh,cl
  437ec3:	add    bh,cl
  437ec5:	add    bh,cl
  437ec7:	add    bh,cl
  437ec9:	add    bh,cl
  437ecb:	add    bh,cl
  437ecd:	add    BYTE PTR [rcx-0x1],bh
  437ed0:	sub    DWORD PTR [rax],eax
  437ed2:	js     0x437ed3
  437ed4:	js     0x437ed5
  437ed6:	js     0x437ed7
  437ed8:	js     0x437ed9
  437eda:	js     0x437edb
  437edc:	js     0x437edd
  437ede:	js     0x437edf
  437ee0:	js     0x437ee1
  437ee2:	js     0x437ee3
  437ee4:	js     0x437ee5
  437ee6:	js     0x437ee7
  437ee8:	js     0x437ee9
  437eea:	js     0x437eeb
  437eec:	js     0x437eed
  437eee:	js     0x437eef
  437ef0:	js     0x437ef1
  437ef2:	js     0x437ef3
  437ef4:	js     0x437ef5
  437ef6:	rol    BYTE PTR [rax],1
  437ef8:	rol    BYTE PTR [rax],1
  437efa:	js     0x437efb
  437efc:	js     0x437efd
  437efe:	js     0x437eff
  437f00:	rol    BYTE PTR [rax],1
  437f02:	rol    BYTE PTR [rax],1
  437f04:	rol    BYTE PTR [rax],1
  437f06:	rol    BYTE PTR [rax],1
  437f08:	rol    BYTE PTR [rax],1
  437f0a:	rol    BYTE PTR [rax],1
  437f0c:	rol    BYTE PTR [rax],1
  437f0e:	rol    BYTE PTR [rax],1
  437f10:	rol    BYTE PTR [rax],1
  437f12:	rol    BYTE PTR [rax],1
  437f14:	rol    BYTE PTR [rax],1
  437f16:	js     0x437f17
  437f18:	js     0x437f19
  437f1a:	rol    BYTE PTR [rax],1
  437f1c:	rol    BYTE PTR [rax],1
  437f1e:	rol    BYTE PTR [rax],1
  437f20:	rol    BYTE PTR [rax],1
  437f22:	rol    BYTE PTR [rax],1
  437f24:	rol    BYTE PTR [rax],1
  437f26:	rol    BYTE PTR [rax],1
  437f28:	js     0x437f29
  437f2a:	sub    DWORD PTR [rax],eax
  437f2c:	ja     0x437f2d
  437f2e:	ja     0x437f2f
  437f30:	ja     0x437f31
  437f32:	ja     0x437f33
  437f34:	ja     0x437f35
  437f36:	ja     0x437f37
  437f38:	ja     0x437f39
  437f3a:	ja     0x437f3b
  437f3c:	ja     0x437f3d
  437f3e:	ja     0x437f3f
  437f40:	ja     0x437f41
  437f42:	ja     0x437f43
  437f44:	ja     0x437f45
  437f46:	ja     0x437f47
  437f48:	ja     0x437f49
  437f4a:	ja     0x437f4b
  437f4c:	ja     0x437f4d
  437f4e:	ja     0x437f4f
  437f50:	mov    DWORD PTR [rax],eax
  437f52:	mov    DWORD PTR [rax],eax
  437f54:	ja     0x437f55
  437f56:	ja     0x437f57
  437f58:	ja     0x437f59
  437f5a:	mov    DWORD PTR [rax],eax
  437f5c:	mov    DWORD PTR [rax],eax
  437f5e:	mov    DWORD PTR [rax],eax
  437f60:	mov    DWORD PTR [rax],eax
  437f62:	mov    DWORD PTR [rax],eax
  437f64:	mov    DWORD PTR [rax],eax
  437f66:	mov    DWORD PTR [rax],eax
  437f68:	mov    DWORD PTR [rax],eax
  437f6a:	mov    DWORD PTR [rax],eax
  437f6c:	mov    DWORD PTR [rax],eax
  437f6e:	mov    DWORD PTR [rax],eax
  437f70:	ja     0x437f71
  437f72:	ja     0x437f73
  437f74:	mov    DWORD PTR [rax],eax
  437f76:	mov    DWORD PTR [rax],eax
  437f78:	mov    DWORD PTR [rax],eax
  437f7a:	mov    DWORD PTR [rax],eax
  437f7c:	mov    DWORD PTR [rax],eax
  437f7e:	mov    DWORD PTR [rax],eax
  437f80:	mov    DWORD PTR [rax],eax
  437f82:	ja     0x437f83
  437f84:	sub    DWORD PTR [rax],eax
  437f86:	jbe    0x437f87
  437f88:	jbe    0x437f89
  437f8a:	jbe    0x437f8b
  437f8c:	jbe    0x437f8d
  437f8e:	jbe    0x437f8f
  437f90:	jbe    0x437f91
  437f92:	jbe    0x437f93
  437f94:	jbe    0x437f95
  437f96:	jbe    0x437f97
  437f98:	jbe    0x437f99
  437f9a:	jbe    0x437f9b
  437f9c:	jbe    0x437f9d
  437f9e:	jbe    0x437f9f
  437fa0:	jbe    0x437fa1
  437fa2:	jbe    0x437fa3
  437fa4:	jbe    0x437fa5
  437fa6:	jbe    0x437fa7
  437fa8:	jbe    0x437fa9
  437faa:	jbe    0x437fab
  437fac:	jbe    0x437fad
  437fae:	jbe    0x437faf
  437fb0:	jbe    0x437fb1
  437fb2:	jbe    0x437fb3
  437fb4:	jbe    0x437fb5
  437fb6:	jbe    0x437fb7
  437fb8:	jbe    0x437fb9
  437fba:	jbe    0x437fbb
  437fbc:	jbe    0x437fbd
  437fbe:	jbe    0x437fbf
  437fc0:	jbe    0x437fc1
  437fc2:	jbe    0x437fc3
  437fc4:	jbe    0x437fc5
  437fc6:	jbe    0x437fc7
  437fc8:	jbe    0x437fc9
  437fca:	jbe    0x437fcb
  437fcc:	jbe    0x437fcd
  437fce:	jbe    0x437fcf
  437fd0:	jbe    0x437fd1
  437fd2:	jbe    0x437fd3
  437fd4:	jbe    0x437fd5
  437fd6:	jbe    0x437fd7
  437fd8:	jbe    0x437fd9
  437fda:	jbe    0x437fdb
  437fdc:	jbe    0x437fdd
  437fde:	sub    DWORD PTR [rax],eax
  437fe0:	jne    0x437fe1
  437fe2:	jne    0x437fe3
  437fe4:	jne    0x437fe5
  437fe6:	jne    0x437fe7
  437fe8:	jne    0x437fe9
  437fea:	jne    0x437feb
  437fec:	jne    0x437fed
  437fee:	jne    0x437fef
  437ff0:	jne    0x437ff1
  437ff2:	jne    0x437ff3
  437ff4:	jne    0x437ff5
  437ff6:	jne    0x437ff7
  437ff8:	jne    0x437ff9
  437ffa:	jne    0x437ffb
  437ffc:	jne    0x437ffd
  437ffe:	jne    0x437fff
  438000:	jne    0x438001
  438002:	jne    0x438003
  438004:	jne    0x438005
  438006:	jne    0x438007
  438008:	jne    0x438009
  43800a:	jne    0x43800b
  43800c:	jne    0x43800d
  43800e:	jne    0x43800f
  438010:	jne    0x438011
  438012:	jne    0x438013
  438014:	jne    0x438015
  438016:	jne    0x438017
  438018:	jne    0x438019
  43801a:	jne    0x43801b
  43801c:	jne    0x43801d
  43801e:	jne    0x43801f
  438020:	jne    0x438021
  438022:	jne    0x438023
  438024:	jne    0x438025
  438026:	jne    0x438027
  438028:	jne    0x438029
  43802a:	jne    0x43802b
  43802c:	jne    0x43802d
  43802e:	jne    0x43802f
  438030:	jne    0x438031
  438032:	jne    0x438033
  438034:	jne    0x438035
  438036:	jne    0x438037
  438038:	sub    DWORD PTR [rax],eax
  43803a:	je     0x43803b
  43803c:	je     0x43803d
  43803e:	je     0x43803f
  438040:	je     0x438041
  438042:	je     0x438043
  438044:	je     0x438045
  438046:	mov    WORD PTR [rax],es
  438048:	je     0x438049
  43804a:	je     0x43804b
  43804c:	je     0x43804d
  43804e:	je     0x43804f
  438050:	je     0x438051
  438052:	je     0x438053
  438054:	je     0x438055
  438056:	je     0x438057
  438058:	je     0x438059
  43805a:	je     0x43805b
  43805c:	je     0x43805d
  43805e:	mov    WORD PTR [rax],es
  438060:	mov    WORD PTR [rax],es
  438062:	je     0x438063
  438064:	je     0x438065
  438066:	je     0x438067
  438068:	mov    WORD PTR [rax],es
  43806a:	mov    WORD PTR [rax],es
  43806c:	mov    WORD PTR [rax],es
  43806e:	mov    WORD PTR [rax],es
  438070:	mov    WORD PTR [rax],es
  438072:	mov    WORD PTR [rax],es
  438074:	mov    WORD PTR [rax],es
  438076:	mov    WORD PTR [rax],es
  438078:	mov    WORD PTR [rax],es
  43807a:	mov    WORD PTR [rax],es
  43807c:	mov    WORD PTR [rax],es
  43807e:	je     0x43807f
  438080:	je     0x438081
  438082:	mov    WORD PTR [rax],es
  438084:	mov    WORD PTR [rax],es
  438086:	mov    WORD PTR [rax],es
  438088:	mov    WORD PTR [rax],es
  43808a:	mov    WORD PTR [rax],es
  43808c:	mov    WORD PTR [rax],es
  43808e:	mov    WORD PTR [rax],es
  438090:	je     0x438091
  438092:	sub    DWORD PTR [rax],eax
  438094:	jae    0x438095
  438096:	jae    0x438097
  438098:	jae    0x438099
  43809a:	jae    0x43809b
  43809c:	jae    0x43809d
  43809e:	jae    0x43809f
  4380a0:	jae    0x4380a1
  4380a2:	jae    0x4380a3
  4380a4:	jae    0x4380a5
  4380a6:	jae    0x4380a7
  4380a8:	jae    0x4380a9
  4380aa:	jae    0x4380ab
  4380ac:	jae    0x4380ad
  4380ae:	jae    0x4380af
  4380b0:	jae    0x4380b1
  4380b2:	jae    0x4380b3
  4380b4:	jae    0x4380b5
  4380b6:	jae    0x4380b7
  4380b8:	jae    0x4380b9
  4380ba:	jae    0x4380bb
  4380bc:	jae    0x4380bd
  4380be:	jae    0x4380bf
  4380c0:	jae    0x4380c1
  4380c2:	jae    0x4380c3
  4380c4:	jae    0x4380c5
  4380c6:	jae    0x4380c7
  4380c8:	jae    0x4380c9
  4380ca:	jae    0x4380cb
  4380cc:	jae    0x4380cd
  4380ce:	jae    0x4380cf
  4380d0:	jae    0x4380d1
  4380d2:	jae    0x4380d3
  4380d4:	jae    0x4380d5
  4380d6:	jae    0x4380d7
  4380d8:	jae    0x4380d9
  4380da:	jae    0x4380db
  4380dc:	jae    0x4380dd
  4380de:	jae    0x4380df
  4380e0:	jae    0x4380e1
  4380e2:	jae    0x4380e3
  4380e4:	jae    0x4380e5
  4380e6:	jae    0x4380e7
  4380e8:	jae    0x4380e9
  4380ea:	jae    0x4380eb
  4380ec:	sub    DWORD PTR [rax],eax
  4380ee:	jb     0x4380ef
  4380f0:	jb     0x4380f1
  4380f2:	jb     0x4380f3
  4380f4:	jb     0x4380f5
  4380f6:	jb     0x4380f7
  4380f8:	jb     0x4380f9
  4380fa:	jb     0x4380fb
  4380fc:	jb     0x4380fd
  4380fe:	jb     0x4380ff
  438100:	jb     0x438101
  438102:	jb     0x438103
  438104:	jb     0x438105
  438106:	jb     0x438107
  438108:	jb     0x438109
  43810a:	jb     0x43810b
  43810c:	jb     0x43810d
  43810e:	jb     0x43810f
  438110:	jb     0x438111
  438112:	jb     0x438113
  438114:	jb     0x438115
  438116:	jb     0x438117
  438118:	jb     0x438119
  43811a:	jb     0x43811b
  43811c:	jb     0x43811d
  43811e:	jb     0x43811f
  438120:	jb     0x438121
  438122:	jb     0x438123
  438124:	jb     0x438125
  438126:	jb     0x438127
  438128:	jb     0x438129
  43812a:	jb     0x43812b
  43812c:	jb     0x43812d
  43812e:	jb     0x43812f
  438130:	jb     0x438131
  438132:	jb     0x438133
  438134:	jb     0x438135
  438136:	jb     0x438137
  438138:	jb     0x438139
  43813a:	jb     0x43813b
  43813c:	jb     0x43813d
  43813e:	jb     0x43813f
  438140:	jb     0x438141
  438142:	jb     0x438143
  438144:	jb     0x438145
  438146:	sub    DWORD PTR [rax],eax
  438148:	jno    0x438149
  43814a:	jno    0x43814b
  43814c:	jno    0x43814d
  43814e:	jno    0x43814f
  438150:	jno    0x438151
  438152:	jno    0x438153
  438154:	jno    0x438155
  438156:	jno    0x438157
  438158:	jno    0x438159
  43815a:	jno    0x43815b
  43815c:	jno    0x43815d
  43815e:	jno    0x43815f
  438160:	jno    0x438161
  438162:	jno    0x438163
  438164:	jno    0x438165
  438166:	jno    0x438167
  438168:	jno    0x438169
  43816a:	jno    0x43816b
  43816c:	jno    0x43816d
  43816e:	jno    0x43816f
  438170:	jno    0x438171
  438172:	jno    0x438173
  438174:	jno    0x438175
  438176:	jno    0x438177
  438178:	jno    0x438179
  43817a:	jno    0x43817b
  43817c:	jno    0x43817d
  43817e:	jno    0x43817f
  438180:	jno    0x438181
  438182:	jno    0x438183
  438184:	jno    0x438185
  438186:	jno    0x438187
  438188:	jno    0x438189
  43818a:	jno    0x43818b
  43818c:	jno    0x43818d
  43818e:	jno    0x43818f
  438190:	jno    0x438191
  438192:	jno    0x438193
  438194:	jno    0x438195
  438196:	jno    0x438197
  438198:	jno    0x438199
  43819a:	jno    0x43819b
  43819c:	jno    0x43819d
  43819e:	jno    0x43819f
  4381a0:	sub    DWORD PTR [rax],eax
  4381a2:	jo     0x4381a3
  4381a4:	jo     0x4381a5
  4381a6:	jo     0x4381a7
  4381a8:	jo     0x4381a9
  4381aa:	jo     0x4381ab
  4381ac:	rol    DWORD PTR [rax],1
  4381ae:	jo     0x4381af
  4381b0:	jo     0x4381b1
  4381b2:	jo     0x4381b3
  4381b4:	rol    BYTE PTR [rax],cl
  4381b6:	jo     0x4381b7
  4381b8:	jo     0x4381b9
  4381ba:	jo     0x4381bb
  4381bc:	jo     0x4381bd
  4381be:	jo     0x4381bf
  4381c0:	jo     0x4381c1
  4381c2:	jo     0x4381c3
  4381c4:	jo     0x4381c5
  4381c6:	jo     0x4381c7
  4381c8:	jo     0x4381c9
  4381ca:	jo     0x4381cb
  4381cc:	jo     0x4381cd
  4381ce:	jo     0x4381cf
  4381d0:	jo     0x4381d1
  4381d2:	jo     0x4381d3
  4381d4:	jo     0x4381d5
  4381d6:	jo     0x4381d7
  4381d8:	jo     0x4381d9
  4381da:	jo     0x4381db
  4381dc:	jo     0x4381dd
  4381de:	jo     0x4381df
  4381e0:	jo     0x4381e1
  4381e2:	jo     0x4381e3
  4381e4:	jo     0x4381e5
  4381e6:	jo     0x4381e7
  4381e8:	jo     0x4381e9
  4381ea:	jo     0x4381eb
  4381ec:	jo     0x4381ed
  4381ee:	jo     0x4381ef
  4381f0:	jo     0x4381f1
  4381f2:	jo     0x4381f3
  4381f4:	jo     0x4381f5
  4381f6:	jo     0x4381f7
  4381f8:	jo     0x4381f9
  4381fa:	sub    DWORD PTR [rax],eax
  4381fc:	outs   dx,DWORD PTR ds:[rsi]
  4381fd:	jmp    FWORD PTR [rdi-0x1]
  438200:	outs   dx,DWORD PTR ds:[rsi]
  438201:	jmp    FWORD PTR [rdi-0x1]
  438204:	outs   dx,DWORD PTR ds:[rsi]
  438205:	jmp    FWORD PTR [rdi-0x1]
  438208:	outs   dx,DWORD PTR ds:[rsi]
  438209:	jmp    FWORD PTR [rdi-0x1]
  43820c:	outs   dx,DWORD PTR ds:[rsi]
  43820d:	jmp    FWORD PTR [rdi-0x1]
  438210:	outs   dx,DWORD PTR ds:[rsi]
  438211:	jmp    FWORD PTR [rdi-0x1]
  438214:	outs   dx,DWORD PTR ds:[rsi]
  438215:	jmp    FWORD PTR [rdi-0x1]
  438218:	outs   dx,DWORD PTR ds:[rsi]
  438219:	jmp    FWORD PTR [rdi-0x1]
  43821c:	outs   dx,DWORD PTR ds:[rsi]
  43821d:	jmp    FWORD PTR [rdi-0x1]
  438220:	outs   dx,DWORD PTR ds:[rsi]
  438221:	jmp    FWORD PTR [rdi-0x1]
  438224:	outs   dx,DWORD PTR ds:[rsi]
  438225:	jmp    FWORD PTR [rdi-0x1]
  438228:	outs   dx,DWORD PTR ds:[rsi]
  438229:	jmp    FWORD PTR [rdi-0x1]
  43822c:	outs   dx,DWORD PTR ds:[rsi]
  43822d:	jmp    FWORD PTR [rdi-0x1]
  438230:	outs   dx,DWORD PTR ds:[rsi]
  438231:	jmp    FWORD PTR [rdi-0x1]
  438234:	outs   dx,DWORD PTR ds:[rsi]
  438235:	jmp    FWORD PTR [rdi-0x1]
  438238:	outs   dx,DWORD PTR ds:[rsi]
  438239:	jmp    FWORD PTR [rdi-0x1]
  43823c:	outs   dx,DWORD PTR ds:[rsi]
  43823d:	jmp    FWORD PTR [rdi-0x1]
  438240:	outs   dx,DWORD PTR ds:[rsi]
  438241:	jmp    FWORD PTR [rdi-0x1]
  438244:	outs   dx,DWORD PTR ds:[rsi]
  438245:	jmp    FWORD PTR [rdi-0x1]
  438248:	outs   dx,DWORD PTR ds:[rsi]
  438249:	jmp    FWORD PTR [rdi-0x1]
  43824c:	outs   dx,DWORD PTR ds:[rsi]
  43824d:	jmp    FWORD PTR [rdi-0x1]
  438250:	outs   dx,DWORD PTR ds:[rsi]
  438251:	jmp    FWORD PTR [rdi-0x1]
  438254:	sub    DWORD PTR [rax],eax
  438256:	outs   dx,BYTE PTR ds:[rsi]
  438257:	jmp    FWORD PTR [rsi-0x1]
  43825a:	outs   dx,BYTE PTR ds:[rsi]
  43825b:	jmp    FWORD PTR [rsi-0x1]
  43825e:	outs   dx,BYTE PTR ds:[rsi]
  43825f:	jmp    FWORD PTR [rsi-0x1]
  438262:	outs   dx,BYTE PTR ds:[rsi]
  438263:	jmp    FWORD PTR [rsi-0x1]
  438266:	outs   dx,BYTE PTR ds:[rsi]
  438267:	jmp    FWORD PTR [rsi-0x1]
  43826a:	outs   dx,BYTE PTR ds:[rsi]
  43826b:	jmp    FWORD PTR [rsi-0x1]
  43826e:	outs   dx,BYTE PTR ds:[rsi]
  43826f:	jmp    FWORD PTR [rsi-0x1]
  438272:	outs   dx,BYTE PTR ds:[rsi]
  438273:	jmp    FWORD PTR [rsi-0x1]
  438276:	outs   dx,BYTE PTR ds:[rsi]
  438277:	jmp    FWORD PTR [rsi-0x1]
  43827a:	outs   dx,BYTE PTR ds:[rsi]
  43827b:	jmp    FWORD PTR [rsi-0x1]
  43827e:	outs   dx,BYTE PTR ds:[rsi]
  43827f:	jmp    FWORD PTR [rsi-0x1]
  438282:	outs   dx,BYTE PTR ds:[rsi]
  438283:	jmp    FWORD PTR [rsi-0x1]
  438286:	outs   dx,BYTE PTR ds:[rsi]
  438287:	jmp    FWORD PTR [rsi-0x1]
  43828a:	outs   dx,BYTE PTR ds:[rsi]
  43828b:	jmp    FWORD PTR [rsi-0x1]
  43828e:	outs   dx,BYTE PTR ds:[rsi]
  43828f:	jmp    FWORD PTR [rsi-0x1]
  438292:	outs   dx,BYTE PTR ds:[rsi]
  438293:	jmp    FWORD PTR [rsi-0x1]
  438296:	outs   dx,BYTE PTR ds:[rsi]
  438297:	jmp    FWORD PTR [rsi-0x1]
  43829a:	outs   dx,BYTE PTR ds:[rsi]
  43829b:	jmp    FWORD PTR [rsi-0x1]
  43829e:	outs   dx,BYTE PTR ds:[rsi]
  43829f:	jmp    FWORD PTR [rsi-0x1]
  4382a2:	outs   dx,BYTE PTR ds:[rsi]
  4382a3:	jmp    FWORD PTR [rsi-0x1]
  4382a6:	outs   dx,BYTE PTR ds:[rsi]
  4382a7:	jmp    FWORD PTR [rsi-0x1]
  4382aa:	outs   dx,BYTE PTR ds:[rsi]
  4382ab:	jmp    FWORD PTR [rsi-0x1]
  4382ae:	sub    DWORD PTR [rax],eax
  4382b0:	xchg   ebx,eax
  4382b1:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382b7:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382bd:	add    BYTE PTR [rbx+0x6d009300],dl
  4382c3:	call   QWORD PTR [rbx-0x6cff6d00]
  4382c9:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382cf:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382d5:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382db:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382e1:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382e7:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382ed:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382f3:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382f9:	add    BYTE PTR [rbx-0x6cff6d00],dl
  4382ff:	add    BYTE PTR [rbx-0x6cff6d00],dl
  438305:	add    BYTE PTR [rbx+0x6c002900],dl
  43830b:	call   QWORD PTR [rax+rax*1+0x950095]
  438312:	ins    BYTE PTR es:[rdi],dx
  438313:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438317:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  43831b:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  43831f:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438323:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438327:	call   QWORD PTR [rsi+0x6cff6c00]
  43832d:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438331:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438335:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438339:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  43833d:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438341:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438345:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438349:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  43834d:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438351:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438355:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438359:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  43835d:	jmp    FWORD PTR [rdi+rdi*8+0x6c]
  438361:	jmp    FWORD PTR [rcx]
  438363:	add    BYTE PTR [rbx-0x1],ch
  438366:	rol    DWORD PTR [rax],cl
  438368:	rol    DWORD PTR [rax],cl
  43836a:	rol    DWORD PTR [rax],cl
  43836c:	imul   edi,edi,0x6b
  43836f:	jmp    FWORD PTR [rbx-0x1]
  438372:	imul   edi,edi,0x6b
  438375:	call   rsp
  438377:	add    BYTE PTR [rbx-0x1],ch
  43837a:	imul   edi,edi,0x6b
  43837d:	jmp    FWORD PTR [rbx-0x1]
  438380:	imul   edi,edi,0xffffffd5
  438383:	add    BYTE PTR [rbx-0x1],ch
  438386:	imul   edi,edi,0x6b
  438389:	jmp    FWORD PTR [rbx-0x1]
  43838c:	imul   edi,edi,0x6b
  43838f:	jmp    FWORD PTR [rbx-0x1]
  438392:	imul   edi,edi,0x6b
  438395:	jmp    FWORD PTR [rbx-0x1]
  438398:	imul   edi,edi,0x6b
  43839b:	jmp    FWORD PTR [rbx-0x1]
  43839e:	imul   edi,edi,0x6b
  4383a1:	jmp    FWORD PTR [rbx-0x1]
  4383a4:	imul   edi,edi,0x6b
  4383a7:	jmp    FWORD PTR [rbx-0x1]
  4383aa:	imul   edi,edi,0x6b
  4383ad:	jmp    FWORD PTR [rbx-0x1]
  4383b0:	imul   edi,edi,0x6b
  4383b3:	jmp    FWORD PTR [rbx-0x1]
  4383b6:	imul   edi,edi,0x6b
  4383b9:	jmp    FWORD PTR [rbx-0x1]
  4383bc:	sub    DWORD PTR [rax],eax
  4383be:	push   0xffffffffffffffff
  4383c0:	push   0xffffffffffffffff
  4383c2:	push   0xffffffffffffffff
  4383c4:	push   0xffffffffffffffff
  4383c6:	push   0xffffffffffffffff
  4383c8:	push   0xffffffffffffffff
  4383ca:	push   0xffffffffffffffff
  4383cc:	push   0xffffffffffffffff
  4383ce:	push   0xffffffffffffffff
  4383d0:	push   0xffffffffffffffff
  4383d2:	push   0xffffffffffffffff
  4383d4:	push   0xffffffffffffffff
  4383d6:	push   0xffffffffffffffff
  4383d8:	push   0xffffffffffffffff
  4383da:	push   0xffffffffffffffff
  4383dc:	(bad)  
  4383dd:	add    BYTE PTR [rdx-0x1],ch
  4383e0:	push   0xffffffffffffffff
  4383e2:	push   0xffffffffffffffff
  4383e4:	push   0xffffffffffffffff
  4383e6:	push   0xffffffffffffffff
  4383e8:	push   0xffffffffffffffff
  4383ea:	push   0xffffffffffffffff
  4383ec:	push   0xffffffffffffffff
  4383ee:	push   0xffffffffffffffff
  4383f0:	push   0xffffffffffffffff
  4383f2:	push   0xffffffffffffffff
  4383f4:	push   0xffffffffffffffff
  4383f6:	push   0xffffffffffffffff
  4383f8:	push   0xffffffffffffffff
  4383fa:	push   0xffffffffffffffff
  4383fc:	push   0xffffffffffffffff
  4383fe:	push   0xffffffffffffffff
  438400:	push   0xffffffffffffffff
  438402:	push   0xffffffffffffffff
  438404:	push   0xffffffffffffffff
  438406:	push   0xffffffffffffffff
  438408:	push   0xffffffffffffffff
  43840a:	push   0xffffffffffffffff
  43840c:	push   0xffffffffffffffff
  43840e:	push   0xffffffffffffffff
  438410:	push   0xffffffffffffffff
  438412:	push   0xffffffffffffffff
  438414:	push   0xffffffffffffffff
  438416:	sub    DWORD PTR [rax],eax
  438418:	xchg   edi,eax
  438419:	add    BYTE PTR [rdi-0x68ff6900],dl
  43841f:	add    BYTE PTR [rdi-0x68ff6900],dl
  438425:	add    BYTE PTR [rdi-0x68ff6900],dl
  43842b:	add    BYTE PTR [rdi+0x69009700],dl
  438431:	call   QWORD PTR [rdi-0x68ff6900]
  438437:	add    BYTE PTR [rdi-0x68009700],dl
  43843d:	add    BYTE PTR [rdi-0x68ff6900],dl
  438443:	add    BYTE PTR [rdi-0x68ff6900],dl
  438449:	add    BYTE PTR [rdi-0x68ff6900],dl
  43844f:	add    BYTE PTR [rdi-0x68ff6900],dl
  438455:	add    BYTE PTR [rdi-0x68ff6900],dl
  43845b:	add    BYTE PTR [rdi-0x68ff6900],dl
  438461:	add    BYTE PTR [rdi-0x68ff6900],dl
  438467:	add    BYTE PTR [rdi-0x68ff6900],dl
  43846d:	add    BYTE PTR [rdi+0x68002900],dl
  438473:	jmp    FWORD PTR [rax-0x1]
  438476:	push   0x68ff68ff
  43847b:	jmp    FWORD PTR [rax-0x1]
  43847e:	push   0x68ff68ff
  438483:	jmp    FWORD PTR [rax-0x1]
  438486:	push   0xffffffff98ff68ff
  43848b:	add    BYTE PTR [rax-0x1],ch
  43848e:	push   0x68ff68ff
  438493:	call   FWORD PTR [rcx+0x68ff6800]
  438499:	jmp    FWORD PTR [rax-0x1]
  43849c:	push   0x68ff68ff
  4384a1:	jmp    FWORD PTR [rax-0x1]
  4384a4:	push   0x68ff68ff
  4384a9:	jmp    FWORD PTR [rax-0x1]
  4384ac:	push   0x68ff68ff
  4384b1:	jmp    FWORD PTR [rax-0x1]
  4384b4:	push   0x68ff68ff
  4384b9:	jmp    FWORD PTR [rax-0x1]
  4384bc:	push   0x68ff68ff
  4384c1:	jmp    FWORD PTR [rax-0x1]
  4384c4:	push   0x68ff68ff
  4384c9:	jmp    FWORD PTR [rcx]
  4384cb:	add    BYTE PTR [rdi-0x1],ah
  4384ce:	jmp    QWORD PTR [edi-0x1]
  4384d2:	jmp    QWORD PTR [edi-0x1]
  4384d6:	jmp    QWORD PTR [edi-0x1]
  4384da:	jmp    QWORD PTR [edi-0x1]
  4384de:	jmp    QWORD PTR [edi-0x1]
  4384e2:	jmp    QWORD PTR [edi-0x1]
  4384e6:	jmp    QWORD PTR [edi-0x1]
  4384ea:	jmp    QWORD PTR [edi-0x1]
  4384ee:	jmp    QWORD PTR [edi-0x1]
  4384f2:	jmp    QWORD PTR [edi-0x1]
  4384f6:	jmp    QWORD PTR [edi-0x1]
  4384fa:	jmp    QWORD PTR [edi-0x1]
  4384fe:	jmp    QWORD PTR [edi-0x1]
  438502:	jmp    QWORD PTR [edi-0x1]
  438506:	jmp    QWORD PTR [edi-0x1]
  43850a:	jmp    QWORD PTR [edi-0x1]
  43850e:	jmp    QWORD PTR [edi-0x1]
  438512:	jmp    QWORD PTR [edi-0x1]
  438516:	jmp    QWORD PTR [edi-0x1]
  43851a:	jmp    QWORD PTR [edi-0x1]
  43851e:	jmp    QWORD PTR [edi-0x1]
  438522:	jmp    FWORD PTR [ecx]
  438525:	add    BYTE PTR [rsi-0x1],ah
  438528:	jmp    WORD PTR [rsi-0x1]
  43852c:	call   di
  43852f:	add    BYTE PTR [rsi-0x1],ah
  438532:	call   di
  438535:	add    bh,dl
  438537:	add    BYTE PTR [rsi-0x1],ah
  43853a:	jmp    WORD PTR [rsi-0x1]
  43853e:	xlat   BYTE PTR ds:[rbx]
  43853f:	add    bh,dl
  438541:	add    BYTE PTR [rsi-0x1],ah
  438544:	xlat   BYTE PTR ds:[rbx]
  438545:	add    BYTE PTR [rsi-0x1],ah
  438548:	xlat   BYTE PTR ds:[rbx]
  438549:	add    BYTE PTR [rsi-0x1],ah
  43854c:	jmp    WORD PTR [rsi-0x1]
  438550:	call   di
  438553:	add    BYTE PTR [rsi-0x1],ah
  438556:	jmp    WORD PTR [rsi-0x1]
  43855a:	jmp    WORD PTR [rsi-0x1]
  43855e:	jmp    WORD PTR [rsi-0x1]
  438562:	jmp    WORD PTR [rsi-0x1]
  438566:	jmp    WORD PTR [rsi-0x1]
  43856a:	call   di
  43856d:	add    BYTE PTR [rsi-0x1],ah
  438570:	jmp    WORD PTR [rsi-0x1]
  438574:	jmp    WORD PTR [rsi-0x1]
  438578:	jmp    WORD PTR [rsi-0x1]
  43857c:	xlat   BYTE PTR ds:[rbx]
  43857d:	add    BYTE PTR [rcx],ch
  43857f:	add    BYTE PTR [rbx-0x64ff6500],bl
  438585:	add    BYTE PTR [rbx+0x65009b00],bl
  43858b:	call   FWORD PTR [rbx-0x64ff6500]
  438591:	add    BYTE PTR [rbx-0x64ff6500],bl
  438597:	add    BYTE PTR [rbx-0x64ff6500],bl
  43859d:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385a3:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385a9:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385af:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385b5:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385bb:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385c1:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385c7:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385cd:	add    BYTE PTR [rbx-0x64ff6500],bl
  4385d3:	add    BYTE PTR [rbx+0x29009b00],bl
  4385d9:	add    BYTE PTR [rdi+rdi*8+0x64],ah
  4385dd:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385e1:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385e5:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385e9:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385ed:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385f1:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385f5:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385f9:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  4385fd:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438601:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438605:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438609:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  43860d:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438611:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438615:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438619:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  43861d:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438621:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438625:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438629:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  43862d:	jmp    QWORD PTR [rdi+rdi*8+0x64]
  438631:	jmp    FWORD PTR [rcx]
  438633:	add    BYTE PTR [rbp-0x62ff6300],bl
  438639:	add    BYTE PTR [rbp-0x62ff6300],bl
  43863f:	add    BYTE PTR [rbp-0x62ff6300],bl
  438645:	add    BYTE PTR [rbx-0x1],ah
  438648:	popf   
  438649:	add    BYTE PTR [rbp-0x62ff6300],bl
  43864f:	add    BYTE PTR [rbp-0x62ff6300],bl
  438655:	add    BYTE PTR [rbp-0x62ff6300],bl
  43865b:	add    BYTE PTR [rbp-0x62ff6300],bl
  438661:	add    BYTE PTR [rbp-0x62ff6300],bl
  438667:	add    BYTE PTR [rbp-0x62ff6300],bl
  43866d:	add    BYTE PTR [rbp-0x62ff6300],bl
  438673:	add    BYTE PTR [rbp-0x62ff6300],bl
  438679:	add    BYTE PTR [rbp-0x62ff6300],bl
  43867f:	add    BYTE PTR [rbp-0x62ff6300],bl
  438685:	add    BYTE PTR [rbp-0x62ff6300],bl
  43868b:	add    BYTE PTR [rcx],ch
  43868d:	add    BYTE PTR [rdx-0x1],ah
  438690:	sahf   
  438691:	add    BYTE PTR [rdi+0x62009f00],bl
  438697:	jmp    QWORD PTR [rdx-0x1]
  43869a:	(bad)  
  43869b:	jmp    QWORD PTR [rdx-0x1]
  43869e:	(bad)  
  43869f:	jmp    QWORD PTR [rdx-0x1]
  4386a2:	(bad)  
  4386a3:	jmp    QWORD PTR [rdx-0x1]
  4386a6:	(bad)  
  4386a7:	jmp    QWORD PTR [rdx-0x1]
  4386aa:	(bad)  
  4386ab:	jmp    QWORD PTR [rax+0x62ff6200]
  4386b1:	jmp    QWORD PTR [rdx-0x1]
  4386b4:	(bad)  
  4386b5:	jmp    QWORD PTR [rdx-0x1]
  4386b8:	(bad)  
  4386b9:	jmp    QWORD PTR [rdx-0x1]
  4386bc:	(bad)  
  4386bd:	jmp    QWORD PTR [rdx-0x1]
  4386c0:	(bad)  
  4386c1:	jmp    QWORD PTR [rdx-0x1]
  4386c4:	(bad)  
  4386c5:	jmp    QWORD PTR [rdx-0x1]
  4386c8:	(bad)  
  4386c9:	jmp    QWORD PTR [rdx-0x1]
  4386cc:	(bad)  
  4386cd:	jmp    QWORD PTR [rdx-0x1]
  4386d0:	(bad)  
  4386d1:	jmp    QWORD PTR [rdx-0x1]
  4386d4:	(bad)  
  4386d5:	jmp    QWORD PTR [rdx-0x1]
  4386d8:	(bad)  
  4386d9:	jmp    QWORD PTR [rdx-0x1]
  4386dc:	(bad)  
  4386dd:	jmp    QWORD PTR [rdx-0x1]
  4386e0:	(bad)  
  4386e1:	jmp    QWORD PTR [rdx-0x1]
  4386e4:	(bad)  
  4386e5:	jmp    FWORD PTR [rcx]
  4386e7:	add    BYTE PTR [rcx-0x1],ah
  4386ea:	fadd   DWORD PTR [rax]
  4386ec:	fadd   DWORD PTR [rax]
  4386ee:	fadd   DWORD PTR [rax]
  4386f0:	(bad)  
  4386f1:	jmp    QWORD PTR [rcx-0x1]
  4386f4:	(bad)  
  4386f5:	jmp    QWORD PTR [rcx-0x1]
  4386f8:	(bad)  
  4386f9:	(bad)  
  4386fa:	fld    DWORD PTR [rax]
  4386fc:	(bad)  
  4386fd:	jmp    QWORD PTR [rcx-0x1]
  438700:	(bad)  
  438701:	jmp    QWORD PTR [rcx-0x1]
  438704:	(bad)  
  438705:	(bad)  
  438706:	fiadd  DWORD PTR [rax]
  438708:	(bad)  
  438709:	jmp    QWORD PTR [rcx-0x1]
  43870c:	(bad)  
  43870d:	jmp    QWORD PTR [rcx-0x1]
  438710:	(bad)  
  438711:	jmp    QWORD PTR [rcx-0x1]
  438714:	(bad)  
  438715:	jmp    QWORD PTR [rcx-0x1]
  438718:	(bad)  
  438719:	jmp    QWORD PTR [rcx-0x1]
  43871c:	(bad)  
  43871d:	jmp    QWORD PTR [rcx-0x1]
  438720:	(bad)  
  438721:	jmp    QWORD PTR [rcx-0x1]
  438724:	(bad)  
  438725:	jmp    QWORD PTR [rcx-0x1]
  438728:	(bad)  
  438729:	jmp    QWORD PTR [rcx-0x1]
  43872c:	(bad)  
  43872d:	jmp    QWORD PTR [rcx-0x1]
  438730:	(bad)  
  438731:	jmp    QWORD PTR [rcx-0x1]
  438734:	(bad)  
  438735:	jmp    QWORD PTR [rcx-0x1]
  438738:	(bad)  
  438739:	jmp    QWORD PTR [rcx-0x1]
  43873c:	(bad)  
  43873d:	jmp    QWORD PTR [rcx-0x1]
  438740:	sub    DWORD PTR [rax],eax
  438742:	(bad)  
  438743:	jmp    QWORD PTR [rax-0x1]
  438746:	(bad)  
  438747:	jmp    QWORD PTR [rax-0x1]
  43874a:	(bad)  
  43874b:	jmp    QWORD PTR [rax-0x1]
  43874e:	(bad)  
  43874f:	jmp    QWORD PTR [rax-0x1]
  438752:	(bad)  
  438753:	jmp    QWORD PTR [rax-0x1]
  438756:	(bad)  
  438757:	jmp    QWORD PTR [rax-0x1]
  43875a:	(bad)  
  43875b:	jmp    QWORD PTR [rax-0x1]
  43875e:	(bad)  
  43875f:	(bad)  
  438760:	fild   DWORD PTR [rax]
  438762:	(bad)  
  438763:	jmp    QWORD PTR [rax-0x1]
  438766:	(bad)  
  438767:	jmp    QWORD PTR [rax-0x1]
  43876a:	(bad)  
  43876b:	jmp    QWORD PTR [rax-0x1]
  43876e:	(bad)  
  43876f:	jmp    QWORD PTR [rax-0x1]
  438772:	(bad)  
  438773:	jmp    QWORD PTR [rax-0x1]
  438776:	(bad)  
  438777:	jmp    QWORD PTR [rax-0x1]
  43877a:	(bad)  
  43877b:	jmp    QWORD PTR [rax-0x1]
  43877e:	(bad)  
  43877f:	jmp    QWORD PTR [rax-0x1]
  438782:	(bad)  
  438783:	jmp    QWORD PTR [rax-0x1]
  438786:	(bad)  
  438787:	jmp    QWORD PTR [rax-0x1]
  43878a:	(bad)  
  43878b:	jmp    QWORD PTR [rax-0x1]
  43878e:	(bad)  
  43878f:	jmp    QWORD PTR [rax-0x1]
  438792:	(bad)  
  438793:	jmp    QWORD PTR [rax-0x1]
  438796:	(bad)  
  438797:	jmp    QWORD PTR [rax-0x1]
  43879a:	sub    DWORD PTR [rax],eax
  43879c:	movabs eax,ds:0xa100a100a100a100
  4387a5:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387ab:	add    BYTE PTR [rcx-0x5e00a100],ah
  4387b1:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387b7:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387bd:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387c3:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387c9:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387cf:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387d5:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387db:	add    BYTE PTR [rcx+0x5f00a100],ah
  4387e1:	jmp    QWORD PTR [rcx-0x5eff5f00]
  4387e7:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387ed:	add    BYTE PTR [rcx-0x5eff5f00],ah
  4387f3:	add    BYTE PTR [rcx],ch
  4387f5:	add    BYTE PTR [rsi-0x1],bl
  4387f8:	movabs ds:0x5eff5e00a300a300,al
  438801:	call   FWORD PTR [rsi-0x1]
  438804:	pop    rsi
  438805:	call   FWORD PTR [rsi-0x1]
  438808:	pop    rsi
  438809:	call   FWORD PTR [rsi-0x1]
  43880c:	pop    rsi
  43880d:	call   FWORD PTR [rsi-0x1]
  438810:	pop    rsi
  438811:	call   FWORD PTR [rsi-0x1]
  438814:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438815:	add    BYTE PTR [rsi-0x1],bl
  438818:	pop    rsi
  438819:	call   FWORD PTR [rsi-0x1]
  43881c:	pop    rsi
  43881d:	call   FWORD PTR [rsi-0x1]
  438820:	pop    rsi
  438821:	call   FWORD PTR [rsi-0x1]
  438824:	pop    rsi
  438825:	call   FWORD PTR [rsi-0x1]
  438828:	pop    rsi
  438829:	call   FWORD PTR [rsi-0x1]
  43882c:	pop    rsi
  43882d:	call   FWORD PTR [rsi-0x1]
  438830:	pop    rsi
  438831:	call   FWORD PTR [rsi-0x1]
  438834:	pop    rsi
  438835:	call   FWORD PTR [rsi-0x1]
  438838:	pop    rsi
  438839:	call   FWORD PTR [rsi-0x1]
  43883c:	pop    rsi
  43883d:	call   FWORD PTR [rsi-0x1]
  438840:	pop    rsi
  438841:	call   FWORD PTR [rsi-0x1]
  438844:	pop    rsi
  438845:	call   FWORD PTR [rsi-0x1]
  438848:	pop    rsi
  438849:	call   FWORD PTR [rsi-0x1]
  43884c:	pop    rsi
  43884d:	jmp    FWORD PTR [rcx]
  43884f:	add    BYTE PTR [rbp-0x1],bl
  438852:	fadd   QWORD PTR [rax]
  438854:	fadd   QWORD PTR [rax]
  438856:	fadd   QWORD PTR [rax]
  438858:	pop    rbp
  438859:	call   FWORD PTR [rbp-0x1]
  43885c:	pop    rbp
  43885d:	call   FWORD PTR [rbp-0x1]
  438860:	pop    rbp
  438861:	(bad)  
  438862:	fld    QWORD PTR [rax]
  438864:	pop    rbp
  438865:	call   FWORD PTR [rbp-0x1]
  438868:	pop    rbp
  438869:	call   FWORD PTR [rbp-0x1]
  43886c:	pop    rbp
  43886d:	(bad)  
  43886e:	fiadd  WORD PTR [rax]
  438870:	pop    rbp
  438871:	call   FWORD PTR [rbp-0x1]
  438874:	pop    rbp
  438875:	call   FWORD PTR [rbp-0x1]
  438878:	pop    rbp
  438879:	call   FWORD PTR [rbp-0x1]
  43887c:	pop    rbp
  43887d:	call   FWORD PTR [rbp-0x1]
  438880:	pop    rbp
  438881:	call   FWORD PTR [rbp-0x1]
  438884:	pop    rbp
  438885:	call   FWORD PTR [rbp-0x1]
  438888:	pop    rbp
  438889:	call   FWORD PTR [rbp-0x1]
  43888c:	pop    rbp
  43888d:	call   FWORD PTR [rbp-0x1]
  438890:	pop    rbp
  438891:	call   FWORD PTR [rbp-0x1]
  438894:	pop    rbp
  438895:	call   FWORD PTR [rbp-0x1]
  438898:	pop    rbp
  438899:	call   FWORD PTR [rbp-0x1]
  43889c:	pop    rbp
  43889d:	call   FWORD PTR [rbp-0x1]
  4388a0:	pop    rbp
  4388a1:	call   FWORD PTR [rbp-0x1]
  4388a4:	pop    rbp
  4388a5:	call   FWORD PTR [rbp-0x1]
  4388a8:	sub    DWORD PTR [rax],eax
  4388aa:	pop    rsp
  4388ab:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388af:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388b3:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388b7:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388bb:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388bf:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388c3:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388c7:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388cb:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388cf:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388d3:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388d7:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388db:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388df:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388e3:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388e7:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388eb:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388ef:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388f3:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388f7:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388fb:	call   FWORD PTR [rdi+rdi*8+0x5c]
  4388ff:	call   FWORD PTR [rdi+rdi*8+0x29]
  438903:	add    BYTE PTR [rbx-0x1],bl
  438906:	pop    rbx
  438907:	call   FWORD PTR [rbx-0x1]
  43890a:	pop    rbx
  43890b:	call   FWORD PTR [rbx-0x1]
  43890e:	pop    rbx
  43890f:	call   FWORD PTR [rbx-0x1]
  438912:	pop    rbx
  438913:	call   FWORD PTR [rbx-0x1]
  438916:	pop    rbx
  438917:	call   FWORD PTR [rbx-0x1]
  43891a:	pop    rbx
  43891b:	call   FWORD PTR [rbx-0x1]
  43891e:	pop    rbx
  43891f:	call   FWORD PTR [rbx-0x1]
  438922:	fild   WORD PTR [rax]
  438924:	pop    rbx
  438925:	call   FWORD PTR [rbx-0x1]
  438928:	pop    rbx
  438929:	call   FWORD PTR [rbx-0x1]
  43892c:	pop    rbx
  43892d:	call   FWORD PTR [rbx-0x1]
  438930:	pop    rbx
  438931:	call   FWORD PTR [rbx-0x1]
  438934:	pop    rbx
  438935:	call   FWORD PTR [rbx-0x1]
  438938:	pop    rbx
  438939:	call   FWORD PTR [rbx-0x1]
  43893c:	pop    rbx
  43893d:	call   FWORD PTR [rbx-0x1]
  438940:	pop    rbx
  438941:	call   FWORD PTR [rbx-0x1]
  438944:	pop    rbx
  438945:	call   FWORD PTR [rbx-0x1]
  438948:	pop    rbx
  438949:	call   FWORD PTR [rbx-0x1]
  43894c:	pop    rbx
  43894d:	call   FWORD PTR [rbx-0x1]
  438950:	pop    rbx
  438951:	call   FWORD PTR [rbx-0x1]
  438954:	pop    rbx
  438955:	call   FWORD PTR [rbx-0x1]
  438958:	pop    rbx
  438959:	call   FWORD PTR [rbx-0x1]
  43895c:	sub    DWORD PTR [rax],eax
  43895e:	pop    rdx
  43895f:	call   FWORD PTR [rdx-0x1]
  438962:	pop    rdx
  438963:	call   FWORD PTR [rdx-0x1]
  438966:	pop    rdx
  438967:	call   FWORD PTR [rdx-0x1]
  43896a:	pop    rdx
  43896b:	call   FWORD PTR [rdx-0x1]
  43896e:	pop    rdx
  43896f:	call   FWORD PTR [rdx-0x1]
  438972:	pop    rdx
  438973:	call   FWORD PTR [rdx-0x1]
  438976:	pop    rdx
  438977:	call   FWORD PTR [rdx-0x1]
  43897a:	pop    rdx
  43897b:	call   FWORD PTR [rdx-0x1]
  43897e:	pop    rdx
  43897f:	call   FWORD PTR [rdx-0x1]
  438982:	pop    rdx
  438983:	call   FWORD PTR [rdx-0x1]
  438986:	pop    rdx
  438987:	call   FWORD PTR [rdx-0x1]
  43898a:	pop    rdx
  43898b:	call   FWORD PTR [rdx-0x1]
  43898e:	pop    rdx
  43898f:	call   FWORD PTR [rdx-0x1]
  438992:	pop    rdx
  438993:	call   FWORD PTR [rdx-0x1]
  438996:	pop    rdx
  438997:	call   FWORD PTR [rdx-0x1]
  43899a:	pop    rdx
  43899b:	call   FWORD PTR [rdx-0x1]
  43899e:	pop    rdx
  43899f:	call   FWORD PTR [rdx-0x1]
  4389a2:	pop    rdx
  4389a3:	call   FWORD PTR [rdx-0x1]
  4389a6:	pop    rdx
  4389a7:	call   FWORD PTR [rdx-0x1]
  4389aa:	pop    rdx
  4389ab:	call   FWORD PTR [rdx-0x1]
  4389ae:	pop    rdx
  4389af:	call   FWORD PTR [rdx-0x1]
  4389b2:	pop    rdx
  4389b3:	call   FWORD PTR [rdx-0x1]
  4389b6:	sub    DWORD PTR [rax],eax
  4389b8:	pop    rcx
  4389b9:	call   FWORD PTR [rcx-0x1]
  4389bc:	pop    rcx
  4389bd:	call   FWORD PTR [rcx-0x1]
  4389c0:	pop    rcx
  4389c1:	call   FWORD PTR [rcx-0x1]
  4389c4:	pop    rcx
  4389c5:	call   FWORD PTR [rcx-0x1]
  4389c8:	pop    rcx
  4389c9:	call   FWORD PTR [rcx-0x1]
  4389cc:	pop    rcx
  4389cd:	call   FWORD PTR [rcx-0x1]
  4389d0:	pop    rcx
  4389d1:	call   FWORD PTR [rcx-0x1]
  4389d4:	pop    rcx
  4389d5:	call   FWORD PTR [rcx-0x1]
  4389d8:	pop    rcx
  4389d9:	call   FWORD PTR [rcx-0x1]
  4389dc:	loopne 0x4389de
  4389de:	pop    rcx
  4389df:	call   FWORD PTR [rcx-0x1]
  4389e2:	pop    rcx
  4389e3:	call   FWORD PTR [rcx-0x1]
  4389e6:	pop    rcx
  4389e7:	call   FWORD PTR [rcx-0x1]
  4389ea:	pop    rcx
  4389eb:	call   FWORD PTR [rcx-0x1]
  4389ee:	pop    rcx
  4389ef:	call   FWORD PTR [rcx-0x1]
  4389f2:	pop    rcx
  4389f3:	call   FWORD PTR [rcx-0x1]
  4389f6:	pop    rcx
  4389f7:	call   FWORD PTR [rcx-0x1]
  4389fa:	pop    rcx
  4389fb:	call   FWORD PTR [rcx-0x1]
  4389fe:	pop    rcx
  4389ff:	call   FWORD PTR [rcx-0x1]
  438a02:	pop    rcx
  438a03:	call   FWORD PTR [rcx-0x1]
  438a06:	pop    rcx
  438a07:	call   FWORD PTR [rcx-0x1]
  438a0a:	pop    rcx
  438a0b:	call   FWORD PTR [rcx-0x1]
  438a0e:	pop    rcx
  438a0f:	jmp    FWORD PTR [rcx]
  438a11:	add    BYTE PTR [rax-0x1],bl
  438a14:	pop    rax
  438a15:	call   FWORD PTR [rax-0x1]
  438a18:	pop    rax
  438a19:	call   FWORD PTR [rax-0x1]
  438a1c:	pop    rax
  438a1d:	call   FWORD PTR [rax-0x1]
  438a20:	pop    rax
  438a21:	call   FWORD PTR [rax-0x1]
  438a24:	pop    rax
  438a25:	call   FWORD PTR [rax-0x1]
  438a28:	pop    rax
  438a29:	call   FWORD PTR [rax-0x1]
  438a2c:	pop    rax
  438a2d:	call   FWORD PTR [rax-0x1]
  438a30:	pop    rax
  438a31:	call   FWORD PTR [rax-0x1]
  438a34:	pop    rax
  438a35:	jmp    rcx
  438a37:	add    cl,ah
  438a39:	add    BYTE PTR [rax-0x1],bl
  438a3c:	pop    rax
  438a3d:	call   FWORD PTR [rax-0x1]
  438a40:	loope  0x438a42
  438a42:	loope  0x438a44
  438a44:	loope  0x438a46
  438a46:	loope  0x438a48
  438a48:	loope  0x438a4a
  438a4a:	pop    rax
  438a4b:	call   FWORD PTR [rax-0x1]
  438a4e:	pop    rax
  438a4f:	call   FWORD PTR [rax-0x1]
  438a52:	pop    rax
  438a53:	call   FWORD PTR [rax-0x1]
  438a56:	pop    rax
  438a57:	call   FWORD PTR [rax-0x1]
  438a5a:	loope  0x438a5c
  438a5c:	loope  0x438a5e
  438a5e:	pop    rax
  438a5f:	call   FWORD PTR [rax-0x1]
  438a62:	pop    rax
  438a63:	call   FWORD PTR [rax-0x1]
  438a66:	pop    rax
  438a67:	call   FWORD PTR [rax-0x1]
  438a6a:	sub    DWORD PTR [rax],eax
  438a6c:	push   rdi
  438a6d:	call   QWORD PTR [rdi-0x1]
  438a70:	push   rdi
  438a71:	call   QWORD PTR [rdi-0x1]
  438a74:	push   rdi
  438a75:	call   QWORD PTR [rdi-0x1]
  438a78:	push   rdi
  438a79:	call   QWORD PTR [rdi-0x1]
  438a7c:	push   rdi
  438a7d:	call   QWORD PTR [rdi-0x1]
  438a80:	push   rdi
  438a81:	call   QWORD PTR [rdi-0x1]
  438a84:	push   rdi
  438a85:	call   QWORD PTR [rdi-0x1]
  438a88:	push   rdi
  438a89:	call   QWORD PTR [rdi-0x1]
  438a8c:	push   rdi
  438a8d:	call   QWORD PTR [rdi-0x1]
  438a90:	loop   0x438a92
  438a92:	loop   0x438a94
  438a94:	push   rdi
  438a95:	call   QWORD PTR [rdi-0x1]
  438a98:	push   rdi
  438a99:	jmp    rdx
  438a9b:	add    dl,ah
  438a9d:	add    dl,ah
  438a9f:	add    dl,ah
  438aa1:	add    dl,ah
  438aa3:	add    BYTE PTR [rdi-0x1],dl
  438aa6:	push   rdi
  438aa7:	call   QWORD PTR [rdi-0x1]
  438aaa:	push   rdi
  438aab:	call   QWORD PTR [rdi-0x1]
  438aae:	push   rdi
  438aaf:	call   QWORD PTR [rdi-0x1]
  438ab2:	push   rdi
  438ab3:	jmp    rdx
  438ab5:	add    dl,ah
  438ab7:	add    BYTE PTR [rdi-0x1],dl
  438aba:	push   rdi
  438abb:	call   QWORD PTR [rdi-0x1]
  438abe:	push   rdi
  438abf:	call   QWORD PTR [rdi-0x1]
  438ac2:	push   rdi
  438ac3:	jmp    FWORD PTR [rcx]
  438ac5:	add    BYTE PTR [rsi-0x1],dl
  438ac8:	push   rsi
  438ac9:	call   QWORD PTR [rsi-0x1]
  438acc:	push   rsi
  438acd:	call   QWORD PTR [rsi-0x1]
  438ad0:	push   rsi
  438ad1:	call   QWORD PTR [rsi-0x1]
  438ad4:	push   rsi
  438ad5:	call   QWORD PTR [rsi-0x1]
  438ad8:	push   rsi
  438ad9:	call   QWORD PTR [rsi-0x1]
  438adc:	push   rsi
  438add:	call   QWORD PTR [rsi-0x1]
  438ae0:	push   rsi
  438ae1:	call   QWORD PTR [rsi-0x1]
  438ae4:	push   rsi
  438ae5:	call   QWORD PTR [rsi-0x1]
  438ae8:	push   rsi
  438ae9:	jmp    rbx
  438aeb:	add    bl,ah
  438aed:	add    BYTE PTR [rsi-0x1],dl
  438af0:	push   rsi
  438af1:	call   QWORD PTR [rsi-0x1]
  438af4:	jrcxz  0x438af6
  438af6:	jrcxz  0x438af8
  438af8:	jrcxz  0x438afa
  438afa:	jrcxz  0x438afc
  438afc:	jrcxz  0x438afe
  438afe:	push   rsi
  438aff:	call   QWORD PTR [rsi-0x1]
  438b02:	push   rsi
  438b03:	call   QWORD PTR [rsi-0x1]
  438b06:	push   rsi
  438b07:	call   QWORD PTR [rsi-0x1]
  438b0a:	push   rsi
  438b0b:	call   QWORD PTR [rsi-0x1]
  438b0e:	jrcxz  0x438b10
  438b10:	jrcxz  0x438b12
  438b12:	push   rsi
  438b13:	call   QWORD PTR [rsi-0x1]
  438b16:	push   rsi
  438b17:	call   QWORD PTR [rsi-0x1]
  438b1a:	push   rsi
  438b1b:	call   QWORD PTR [rsi-0x1]
  438b1e:	sub    DWORD PTR [rax],eax
  438b20:	stos   DWORD PTR es:[rdi],eax
  438b21:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b27:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b2d:	add    BYTE PTR [rbx+0x5500ab00],ch
  438b33:	jmp    FWORD PTR [rbx-0x54ff5500]
  438b39:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b3f:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b45:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b4b:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b51:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b57:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b5d:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b63:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b69:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b6f:	add    BYTE PTR [rbx-0x54ff5500],ch
  438b75:	add    BYTE PTR [rbx-0x53ffd700],ch
  438b7b:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438b82:	lods   al,BYTE PTR ds:[rsi]
  438b83:	add    BYTE PTR [rax+rax*1+0xacff54],ch
  438b8a:	lods   al,BYTE PTR ds:[rsi]
  438b8b:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438b92:	lods   al,BYTE PTR ds:[rsi]
  438b93:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438b9a:	lods   al,BYTE PTR ds:[rsi]
  438b9b:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438ba2:	lods   al,BYTE PTR ds:[rsi]
  438ba3:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438baa:	lods   al,BYTE PTR ds:[rsi]
  438bab:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438bb2:	lods   al,BYTE PTR ds:[rsi]
  438bb3:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438bba:	lods   al,BYTE PTR ds:[rsi]
  438bbb:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438bc2:	lods   al,BYTE PTR ds:[rsi]
  438bc3:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438bca:	lods   al,BYTE PTR ds:[rsi]
  438bcb:	add    BYTE PTR [rax+rax*1+0xac00ac],ch
  438bd2:	sub    DWORD PTR [rax],eax
  438bd4:	push   rbx
  438bd5:	call   QWORD PTR [rbx-0x1]
  438bd8:	push   rbx
  438bd9:	call   QWORD PTR [rbx-0x1]
  438bdc:	push   rbx
  438bdd:	call   QWORD PTR [rbx-0x1]
  438be0:	push   rbx
  438be1:	call   QWORD PTR [rbx-0x1]
  438be4:	push   rbx
  438be5:	call   QWORD PTR [rbx-0x1]
  438be8:	push   rbx
  438be9:	call   QWORD PTR [rbx-0x1]
  438bec:	push   rbx
  438bed:	call   QWORD PTR [rbx-0x1]
  438bf0:	push   rbx
  438bf1:	call   QWORD PTR [rbx-0x1]
  438bf4:	push   rbx
  438bf5:	call   QWORD PTR [rbx-0x1]
  438bf8:	push   rbx
  438bf9:	call   QWORD PTR [rbx-0x1]
  438bfc:	push   rbx
  438bfd:	call   QWORD PTR [rbx-0x1]
  438c00:	push   rbx
  438c01:	call   QWORD PTR [rbx-0x1]
  438c04:	push   rbx
  438c05:	call   QWORD PTR [rbx-0x1]
  438c08:	push   rbx
  438c09:	call   QWORD PTR [rbx-0x1]
  438c0c:	push   rbx
  438c0d:	call   QWORD PTR [rbx-0x1]
  438c10:	push   rbx
  438c11:	call   QWORD PTR [rbx-0x1]
  438c14:	push   rbx
  438c15:	call   QWORD PTR [rbx-0x1]
  438c18:	push   rbx
  438c19:	call   QWORD PTR [rbx-0x1]
  438c1c:	push   rbx
  438c1d:	call   QWORD PTR [rbx-0x1]
  438c20:	push   rbx
  438c21:	call   QWORD PTR [rbx-0x1]
  438c24:	push   rbx
  438c25:	call   QWORD PTR [rbx-0x1]
  438c28:	push   rbx
  438c29:	call   QWORD PTR [rbx-0x1]
  438c2c:	sub    DWORD PTR [rax],eax
  438c2e:	push   rdx
  438c2f:	call   QWORD PTR [rdx-0x1]
  438c32:	push   rdx
  438c33:	call   QWORD PTR [rdx-0x1]
  438c36:	push   rdx
  438c37:	call   QWORD PTR [rdx-0x1]
  438c3a:	lods   eax,DWORD PTR ds:[rsi]
  438c3b:	add    BYTE PTR [rdx-0x1],dl
  438c3e:	push   rdx
  438c3f:	call   QWORD PTR [rdx-0x1]
  438c42:	push   rdx
  438c43:	call   QWORD PTR [rdx-0x1]
  438c46:	push   rdx
  438c47:	call   QWORD PTR [rdx-0x1]
  438c4a:	push   rdx
  438c4b:	call   QWORD PTR [rdx-0x1]
  438c4e:	push   rdx
  438c4f:	call   QWORD PTR [rdx-0x1]
  438c52:	in     al,0x0
  438c54:	in     al,0x0
  438c56:	push   rdx
  438c57:	call   QWORD PTR [rdx-0x1]
  438c5a:	push   rdx
  438c5b:	jmp    rsp
  438c5d:	add    ah,ah
  438c5f:	add    ah,ah
  438c61:	add    ah,ah
  438c63:	add    ah,ah
  438c65:	add    ah,ah
  438c67:	add    ah,ah
  438c69:	add    ah,ah
  438c6b:	add    ah,ah
  438c6d:	add    ah,ah
  438c6f:	add    ah,ah
  438c71:	add    BYTE PTR [rdx-0x1],dl
  438c74:	push   rdx
  438c75:	jmp    rsp
  438c77:	add    ah,ah
  438c79:	add    ah,ah
  438c7b:	add    ah,ah
  438c7d:	add    ah,ah
  438c7f:	add    ah,ah
  438c81:	add    ah,ah
  438c83:	add    BYTE PTR [rdx-0x1],dl
  438c86:	sub    DWORD PTR [rax],eax
  438c88:	push   rcx
  438c89:	jmp    FWORD PTR [rdi-0x50ff5100]
  438c8f:	add    BYTE PTR [rcx-0x1],dl
  438c92:	push   rcx
  438c93:	call   QWORD PTR [rcx-0x1]
  438c96:	push   rcx
  438c97:	call   QWORD PTR [rcx-0x1]
  438c9a:	push   rcx
  438c9b:	call   QWORD PTR [rcx-0x1]
  438c9e:	push   rcx
  438c9f:	call   QWORD PTR [rcx-0x1]
  438ca2:	push   rcx
  438ca3:	call   QWORD PTR [rcx-0x1]
  438ca6:	push   rcx
  438ca7:	call   QWORD PTR [rcx-0x1]
  438caa:	push   rcx
  438cab:	call   QWORD PTR [rcx-0x1]
  438cae:	push   rcx
  438caf:	call   QWORD PTR [rcx-0x1]
  438cb2:	push   rcx
  438cb3:	call   QWORD PTR [rcx-0x1]
  438cb6:	push   rcx
  438cb7:	call   QWORD PTR [rcx-0x1]
  438cba:	push   rcx
  438cbb:	call   QWORD PTR [rcx-0x1]
  438cbe:	push   rcx
  438cbf:	call   QWORD PTR [rcx-0x1]
  438cc2:	push   rcx
  438cc3:	call   QWORD PTR [rcx-0x1]
  438cc6:	push   rcx
  438cc7:	call   QWORD PTR [rcx-0x1]
  438cca:	push   rcx
  438ccb:	call   QWORD PTR [rcx-0x1]
  438cce:	push   rcx
  438ccf:	call   QWORD PTR [rcx-0x1]
  438cd2:	push   rcx
  438cd3:	call   QWORD PTR [rcx-0x1]
  438cd6:	push   rcx
  438cd7:	call   QWORD PTR [rcx-0x1]
  438cda:	push   rcx
  438cdb:	call   QWORD PTR [rcx-0x1]
  438cde:	push   rcx
  438cdf:	jmp    FWORD PTR [rcx]
  438ce1:	add    ch,ah
  438ce3:	add    ch,ah
  438ce5:	add    BYTE PTR [rax-0x1],dl
  438ce8:	push   rax
  438ce9:	jmp    rbp
  438ceb:	add    ch,ah
  438ced:	add    ch,ah
  438cef:	add    ch,ah
  438cf1:	add    ch,ah
  438cf3:	add    ch,ah
  438cf5:	add    ch,ah
  438cf7:	add    ch,ah
  438cf9:	add    ch,ah
  438cfb:	add    ch,ah
  438cfd:	add    ch,ah
  438cff:	add    ch,ah
  438d01:	add    ch,ah
  438d03:	add    ch,ah
  438d05:	add    ch,ah
  438d07:	add    ch,ah
  438d09:	add    ch,ah
  438d0b:	add    ch,ah
  438d0d:	add    ch,ah
  438d0f:	add    ch,ah
  438d11:	add    ch,ah
  438d13:	add    ch,ah
  438d15:	add    ch,ah
  438d17:	add    ch,ah
  438d19:	add    ch,ah
  438d1b:	add    ch,ah
  438d1d:	add    ch,ah
  438d1f:	add    ch,ah
  438d21:	add    ch,ah
  438d23:	add    ch,ah
  438d25:	add    ch,ah
  438d27:	add    ch,ah
  438d29:	add    ch,ah
  438d2b:	add    ch,ah
  438d2d:	add    ch,ah
  438d2f:	add    ch,ah
  438d31:	add    ch,ah
  438d33:	add    ch,ah
  438d35:	add    ch,ah
  438d37:	add    ch,ah
  438d39:	add    BYTE PTR [rcx],ch
  438d3b:	add    BYTE PTR [rdi-0x1],cl
  438d3e:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d42:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d46:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d4a:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d4e:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d52:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d56:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d5a:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d5e:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d62:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d66:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d6a:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d6e:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d72:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d76:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d7a:	out    0x0,al
  438d7c:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d80:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d84:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d88:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d8c:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d90:	rex.WRXB dec QWORD PTR [r15-0x1]
  438d94:	sub    DWORD PTR [rax],eax
  438d96:	rex.WRX push QWORD PTR [rdx-0x4cff4d00]
  438d9d:	add    BYTE PTR [rsi-0x1],cl
  438da0:	rex.WRX dec QWORD PTR [rsi-0x1]
  438da4:	rex.WRX dec QWORD PTR [rsi-0x1]
  438da8:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dac:	rex.WRX dec QWORD PTR [rsi-0x1]
  438db0:	rex.WRX dec QWORD PTR [rsi-0x1]
  438db4:	mov    ah,0x0
  438db6:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dba:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dbe:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dc2:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dc6:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dca:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dce:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dd2:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dd6:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dda:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dde:	rex.WRX dec QWORD PTR [rsi-0x1]
  438de2:	rex.WRX dec QWORD PTR [rsi-0x1]
  438de6:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dea:	rex.WRX dec QWORD PTR [rsi-0x1]
  438dee:	sub    DWORD PTR [rax],eax
  438df0:	rex.WRB jmp r15
  438df3:	add    bh,ah
  438df5:	add    bh,ah
  438df7:	add    BYTE PTR [rbp-0x1],cl
  438dfa:	rex.WRB dec QWORD PTR [r13-0x1]
  438dfe:	rex.WRB dec QWORD PTR [r13-0x1]
  438e02:	fld    QWORD PTR [rax]
  438e04:	rex.WRB dec QWORD PTR [r13-0x1]
  438e08:	rex.WRB dec QWORD PTR [r13-0x1]
  438e0c:	rex.WRB (bad) 
  438e0e:	call   0x4e42db13
  438e13:	dec    DWORD PTR [rbp-0x1]
  438e16:	rex.WRB dec QWORD PTR [r13-0x1]
  438e1a:	rex.WRB dec QWORD PTR [r13-0x1]
  438e1e:	rex.WRB dec QWORD PTR [r13-0x1]
  438e22:	rex.WRB dec QWORD PTR [r13-0x1]
  438e26:	rex.WRB dec QWORD PTR [r13-0x1]
  438e2a:	rex.WRB dec QWORD PTR [r13-0x1]
  438e2e:	rex.WRB dec QWORD PTR [r13-0x1]
  438e32:	rex.WRB dec QWORD PTR [r13-0x1]
  438e36:	rex.WRB dec QWORD PTR [r13-0x1]
  438e3a:	rex.WRB dec QWORD PTR [r13-0x1]
  438e3e:	rex.WRB dec QWORD PTR [r13-0x1]
  438e42:	rex.WRB dec QWORD PTR [r13-0x1]
  438e46:	rex.WRB jmp FWORD PTR [r9]
  438e49:	add    BYTE PTR [rdi+rdi*8+0x4c],cl
  438e4d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e51:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e55:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e59:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e5d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e61:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e65:	dec    DWORD PTR [rdi+rdi*8-0x17]
  438e69:	add    BYTE PTR [rdi+rdi*8+0x4c],cl
  438e6d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e71:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e75:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e79:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e7d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e81:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e85:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e89:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e8d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e91:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e95:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e99:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438e9d:	dec    DWORD PTR [rdi+rdi*8+0x4c]
  438ea1:	jmp    FWORD PTR [rcx]
  438ea3:	add    BYTE PTR [rbx-0x1],cl
  438ea6:	mov    ch,0x0
  438ea8:	mov    ch,0x0
  438eaa:	mov    ch,0x0
  438eac:	rex.WXB dec QWORD PTR [r11-0x1]
  438eb0:	rex.WXB dec QWORD PTR [r11-0x1]
  438eb4:	rex.WXB dec QWORD PTR [r11-0x1]
  438eb8:	rex.WXB dec QWORD PTR [r11-0x1]
  438ebc:	rex.WXB dec QWORD PTR [r11-0x1]
  438ec0:	rex.WXB dec QWORD PTR [r11-0x1]
  438ec4:	rex.WXB dec QWORD PTR [r11-0x1]
  438ec8:	rex.WXB dec QWORD PTR [r11-0x1]
  438ecc:	rex.WXB dec QWORD PTR [r11-0x1]
  438ed0:	rex.WXB dec QWORD PTR [r11-0x1]
  438ed4:	rex.WXB dec QWORD PTR [r11-0x1]
  438ed8:	rex.WXB dec QWORD PTR [r11-0x1]
  438edc:	rex.WXB dec QWORD PTR [r11-0x1]
  438ee0:	rex.WXB dec QWORD PTR [r11-0x1]
  438ee4:	rex.WXB dec QWORD PTR [r11-0x1]
  438ee8:	rex.WXB dec QWORD PTR [r11-0x1]
  438eec:	rex.WXB dec QWORD PTR [r11-0x1]
  438ef0:	rex.WXB dec QWORD PTR [r11-0x1]
  438ef4:	rex.WXB dec QWORD PTR [r11-0x1]
  438ef8:	rex.WXB dec QWORD PTR [r11-0x1]
  438efc:	sub    DWORD PTR [rax],eax
  438efe:	(bad)  
  438eff:	add    dl,ch
  438f01:	add    BYTE PTR [rdx-0x1],cl
  438f04:	rex.WX (bad) 
  438f06:	(bad)  
  438f07:	add    dl,ch
  438f09:	add    dl,ch
  438f0b:	add    dl,ch
  438f0d:	add    dl,ch
  438f0f:	add    dl,ch
  438f11:	add    dl,ch
  438f13:	add    dl,ch
  438f15:	add    dl,ch
  438f17:	add    dl,ch
  438f19:	add    dl,ch
  438f1b:	add    dl,ch
  438f1d:	add    dl,ch
  438f1f:	add    dl,ch
  438f21:	add    dl,ch
  438f23:	add    dl,ch
  438f25:	add    dl,ch
  438f27:	add    dl,ch
  438f29:	add    dl,ch
  438f2b:	add    dl,ch
  438f2d:	add    dl,ch
  438f2f:	add    dl,ch
  438f31:	add    dl,ch
  438f33:	add    dl,ch
  438f35:	add    dl,ch
  438f37:	add    dl,ch
  438f39:	add    dl,ch
  438f3b:	add    dl,ch
  438f3d:	add    dl,ch
  438f3f:	add    dl,ch
  438f41:	add    dl,ch
  438f43:	add    dl,ch
  438f45:	add    dl,ch
  438f47:	add    dl,ch
  438f49:	add    dl,ch
  438f4b:	add    dl,ch
  438f4d:	add    dl,ch
  438f4f:	add    dl,ch
  438f51:	add    dl,ch
  438f53:	add    dl,ch
  438f55:	add    BYTE PTR [rcx],ch
  438f57:	add    BYTE PTR [rcx-0x1],cl
  438f5a:	dec    QWORD PTR [r9-0x1]
  438f5e:	dec    QWORD PTR [r9-0x1]
  438f62:	dec    QWORD PTR [r9-0x1]
  438f66:	dec    QWORD PTR [r9-0x1]
  438f6a:	dec    QWORD PTR [r9-0x1]
  438f6e:	dec    QWORD PTR [r9-0x1]
  438f72:	dec    QWORD PTR [r9-0x1]
  438f76:	dec    QWORD PTR [r9-0x1]
  438f7a:	dec    QWORD PTR [r9-0x1]
  438f7e:	dec    QWORD PTR [r9-0x1]
  438f82:	dec    QWORD PTR [r9-0x1]
  438f86:	dec    QWORD PTR [r9-0x1]
  438f8a:	dec    QWORD PTR [r9-0x1]
  438f8e:	dec    QWORD PTR [r9-0x1]
  438f92:	dec    QWORD PTR [r9-0x1]
  438f96:	jmp    0x438f98
  438f98:	dec    QWORD PTR [r9-0x1]
  438f9c:	dec    QWORD PTR [r9-0x1]
  438fa0:	dec    QWORD PTR [r9-0x1]
  438fa4:	dec    QWORD PTR [r9-0x1]
  438fa8:	dec    QWORD PTR [r9-0x1]
  438fac:	dec    QWORD PTR [r9-0x1]
  438fb0:	sub    DWORD PTR [rax],eax
  438fb2:	rex.W (bad) 
  438fb4:	mov    eax,0xb800b800
  438fb9:	add    BYTE PTR [rax-0x1],cl
  438fbc:	dec    QWORD PTR [rax-0x1]
  438fc0:	dec    QWORD PTR [rax-0x1]
  438fc4:	dec    QWORD PTR [rax-0x1]
  438fc8:	dec    QWORD PTR [rax-0x1]
  438fcc:	dec    QWORD PTR [rax-0x1]
  438fd0:	dec    QWORD PTR [rax-0x1]
  438fd4:	dec    QWORD PTR [rax-0x1]
  438fd8:	dec    QWORD PTR [rax-0x1]
  438fdc:	dec    QWORD PTR [rax-0x1]
  438fe0:	dec    QWORD PTR [rax-0x1]
  438fe4:	dec    QWORD PTR [rax-0x1]
  438fe8:	dec    QWORD PTR [rax-0x1]
  438fec:	dec    QWORD PTR [rax-0x1]
  438ff0:	dec    QWORD PTR [rax-0x1]
  438ff4:	dec    QWORD PTR [rax-0x1]
  438ff8:	dec    QWORD PTR [rax-0x1]
  438ffc:	dec    QWORD PTR [rax-0x1]
  439000:	dec    QWORD PTR [rax-0x1]
  439004:	dec    QWORD PTR [rax-0x1]
  439008:	rex.W jmp FWORD PTR [rcx]
  43900b:	add    BYTE PTR [rdi-0x1],al
  43900e:	rex.RXB inc DWORD PTR [r15-0x1]
  439012:	rex.RXB inc DWORD PTR [r15-0x1]
  439016:	rex.RXB inc DWORD PTR [r15-0x1]
  43901a:	rex.RXB inc DWORD PTR [r15-0x1]
  43901e:	rex.RXB inc DWORD PTR [r15-0x1]
  439022:	rex.RXB inc DWORD PTR [r15-0x1]
  439026:	rex.RXB inc DWORD PTR [r15-0x1]
  43902a:	rex.RXB inc DWORD PTR [r15-0x1]
  43902e:	rex.RXB (bad) 
  439030:	in     al,dx
  439031:	add    ah,ch
  439033:	add    BYTE PTR [rdi-0x1],al
  439036:	rex.RXB inc DWORD PTR [r15-0x1]
  43903a:	in     al,dx
  43903b:	add    ah,ch
  43903d:	add    ah,ch
  43903f:	add    ah,ch
  439041:	add    ah,ch
  439043:	add    ah,ch
  439045:	add    ah,ch
  439047:	add    ah,ch
  439049:	add    ah,ch
  43904b:	add    ah,ch
  43904d:	add    ah,ch
  43904f:	add    BYTE PTR [rdi-0x1],al
  439052:	rex.RXB (bad) 
  439054:	in     al,dx
  439055:	add    ah,ch
  439057:	add    ah,ch
  439059:	add    ah,ch
  43905b:	add    ah,ch
  43905d:	add    ah,ch
  43905f:	add    ah,ch
  439061:	add    BYTE PTR [rdi-0x1],al
  439064:	sub    DWORD PTR [rax],eax
  439066:	rex.RX inc DWORD PTR [rsi-0x1]
  43906a:	rex.RX inc DWORD PTR [rsi-0x1]
  43906e:	rex.RX inc DWORD PTR [rsi-0x1]
  439072:	rex.RX inc DWORD PTR [rsi-0x1]
  439076:	rex.RX inc DWORD PTR [rsi-0x1]
  43907a:	rex.RX inc DWORD PTR [rsi-0x1]
  43907e:	rex.RX inc DWORD PTR [rsi-0x1]
  439082:	rex.RX inc DWORD PTR [rsi-0x1]
  439086:	rex.RX inc DWORD PTR [rsi-0x1]
  43908a:	in     eax,dx
  43908b:	add    ch,ch
  43908d:	add    BYTE PTR [rsi-0x1],al
  439090:	rex.RX inc DWORD PTR [rsi-0x1]
  439094:	in     eax,dx
  439095:	add    ch,ch
  439097:	add    ch,ch
  439099:	add    ch,ch
  43909b:	add    ch,ch
  43909d:	add    ch,ch
  43909f:	add    ch,ch
  4390a1:	add    ch,ch
  4390a3:	add    ch,ch
  4390a5:	add    ch,ch
  4390a7:	add    ch,ch
  4390a9:	add    BYTE PTR [rsi-0x1],al
  4390ac:	rex.RX (bad) 
  4390ae:	in     eax,dx
  4390af:	add    ch,ch
  4390b1:	add    ch,ch
  4390b3:	add    ch,ch
  4390b5:	add    ch,ch
  4390b7:	add    ch,ch
  4390b9:	add    ch,ch
  4390bb:	add    BYTE PTR [rsi-0x1],al
  4390be:	sub    DWORD PTR [rax],eax
  4390c0:	rex.RB inc DWORD PTR [r13-0x1]
  4390c4:	rex.RB inc DWORD PTR [r13-0x1]
  4390c8:	rex.RB inc DWORD PTR [r13-0x1]
  4390cc:	rex.RB inc DWORD PTR [r13-0x1]
  4390d0:	rex.RB inc DWORD PTR [r13-0x1]
  4390d4:	rex.RB inc DWORD PTR [r13-0x1]
  4390d8:	rex.RB inc DWORD PTR [r13-0x1]
  4390dc:	rex.RB inc DWORD PTR [r13-0x1]
  4390e0:	rex.RB inc DWORD PTR [r13-0x1]
  4390e4:	mov    ebx,0x4500bb00
  4390e9:	inc    DWORD PTR [rbp-0x1]
  4390ec:	rex.RB (bad) 
  4390ee:	mov    ebx,0xbb00bb00
  4390f3:	add    BYTE PTR [rbx-0x44ff4500],bh
  4390f9:	add    BYTE PTR [rbx-0x44ff4500],bh
  4390ff:	add    BYTE PTR [rbx+0x4500bb00],bh
  439105:	inc    DWORD PTR [rbp-0x1]
  439108:	mov    ebx,0xbb00bb00
  43910d:	add    BYTE PTR [rbx-0x44ff4500],bh
  439113:	add    BYTE PTR [rbx+0x29ff4500],bh
  439119:	add    BYTE PTR [rdi+rdi*8+0x44],al
  43911d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439121:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439125:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439129:	inc    DWORD PTR [rdi+rdi*8+0x44]
  43912d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439131:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439135:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439139:	inc    DWORD PTR [rdi+rdi*8+0x44]
  43913d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439141:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439145:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439149:	inc    DWORD PTR [rdi+rdi*8+0x44]
  43914d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439151:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439155:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439159:	inc    DWORD PTR [rdi+rdi*8+0x44]
  43915d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439161:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439165:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439169:	inc    DWORD PTR [rdi+rdi*8+0x44]
  43916d:	inc    DWORD PTR [rdi+rdi*8+0x44]
  439171:	jmp    FWORD PTR [rcx]
  439173:	add    BYTE PTR [rbx-0x1],al
  439176:	rex.XB inc DWORD PTR [r11-0x1]
  43917a:	rex.XB inc DWORD PTR [r11-0x1]
  43917e:	rex.XB inc DWORD PTR [r11-0x1]
  439182:	rex.XB inc DWORD PTR [r11-0x1]
  439186:	rex.XB inc DWORD PTR [r11-0x1]
  43918a:	rex.XB inc DWORD PTR [r11-0x1]
  43918e:	rex.XB inc DWORD PTR [r11-0x1]
  439192:	rex.XB inc DWORD PTR [r11-0x1]
  439196:	rex.XB inc DWORD PTR [r11-0x1]
  43919a:	rex.XB inc DWORD PTR [r11-0x1]
  43919e:	rex.XB inc DWORD PTR [r11-0x1]
  4391a2:	rex.XB inc DWORD PTR [r11-0x1]
  4391a6:	rex.XB inc DWORD PTR [r11-0x1]
  4391aa:	rex.XB inc DWORD PTR [r11-0x1]
  4391ae:	rex.XB inc DWORD PTR [r11-0x1]
  4391b2:	rex.XB inc DWORD PTR [r11-0x1]
  4391b6:	rex.XB inc DWORD PTR [r11-0x1]
  4391ba:	rex.XB inc DWORD PTR [r11-0x1]
  4391be:	rex.XB inc DWORD PTR [r11-0x1]
  4391c2:	rex.XB inc DWORD PTR [r11-0x1]
  4391c6:	rex.XB inc DWORD PTR [r11-0x1]
  4391ca:	rex.XB jmp FWORD PTR [r9]
  4391cd:	add    BYTE PTR [rdx-0x1],al
  4391d0:	rex.X inc DWORD PTR [rdx-0x1]
  4391d4:	rex.X inc DWORD PTR [rdx-0x1]
  4391d8:	rex.X inc DWORD PTR [rdx-0x1]
  4391dc:	rex.X inc DWORD PTR [rdx-0x1]
  4391e0:	rex.X inc DWORD PTR [rdx-0x1]
  4391e4:	rex.X inc DWORD PTR [rdx-0x1]
  4391e8:	rex.X inc DWORD PTR [rdx-0x1]
  4391ec:	rex.X inc DWORD PTR [rdx-0x1]
  4391f0:	rex.X (bad) 
  4391f2:	out    dx,al
  4391f3:	add    BYTE PTR [rdx-0x1],al
  4391f6:	rex.X inc DWORD PTR [rdx-0x1]
  4391fa:	rex.X inc DWORD PTR [rdx-0x1]
  4391fe:	rex.X inc DWORD PTR [rdx-0x1]
  439202:	rex.X inc DWORD PTR [rdx-0x1]
  439206:	rex.X inc DWORD PTR [rdx-0x1]
  43920a:	rex.X inc DWORD PTR [rdx-0x1]
  43920e:	rex.X inc DWORD PTR [rdx-0x1]
  439212:	rex.X inc DWORD PTR [rdx-0x1]
  439216:	rex.X inc DWORD PTR [rdx-0x1]
  43921a:	rex.X inc DWORD PTR [rdx-0x1]
  43921e:	rex.X inc DWORD PTR [rdx-0x1]
  439222:	rex.X inc DWORD PTR [rdx-0x1]
  439226:	sub    DWORD PTR [rax],eax
  439228:	inc    DWORD PTR [r9-0x1]
  43922c:	inc    DWORD PTR [r9-0x1]
  439230:	inc    DWORD PTR [r9-0x1]
  439234:	inc    DWORD PTR [r9-0x1]
  439238:	inc    DWORD PTR [r9-0x1]
  43923c:	inc    DWORD PTR [r9-0x1]
  439240:	inc    DWORD PTR [r9-0x1]
  439244:	inc    DWORD PTR [r9-0x1]
  439248:	inc    DWORD PTR [r9-0x1]
  43924c:	inc    DWORD PTR [r9-0x1]
  439250:	inc    DWORD PTR [r9-0x1]
  439254:	inc    DWORD PTR [r9-0x1]
  439258:	inc    DWORD PTR [r9-0x1]
  43925c:	inc    DWORD PTR [r9-0x1]
  439260:	inc    DWORD PTR [r9-0x1]
  439264:	inc    DWORD PTR [r9-0x1]
  439268:	inc    DWORD PTR [r9-0x1]
  43926c:	inc    DWORD PTR [r9-0x1]
  439270:	inc    DWORD PTR [r9-0x1]
  439274:	inc    DWORD PTR [r9-0x1]
  439278:	inc    DWORD PTR [r9-0x1]
  43927c:	inc    DWORD PTR [r9-0x1]
  439280:	sub    DWORD PTR [rax],eax
  439282:	rex inc DWORD PTR [rax-0x1]
  439286:	rex inc DWORD PTR [rax-0x1]
  43928a:	rex inc DWORD PTR [rax-0x1]
  43928e:	rex inc DWORD PTR [rax-0x1]
  439292:	rex inc DWORD PTR [rax-0x1]
  439296:	rex inc DWORD PTR [rax-0x1]
  43929a:	rex inc DWORD PTR [rax-0x1]
  43929e:	rex inc DWORD PTR [rax-0x1]
  4392a2:	rex inc DWORD PTR [rax-0x1]
  4392a6:	rex inc DWORD PTR [rax-0x1]
  4392aa:	rex inc DWORD PTR [rax-0x1]
  4392ae:	rex inc DWORD PTR [rax-0x1]
  4392b2:	rex inc DWORD PTR [rax-0x1]
  4392b6:	rex inc DWORD PTR [rax-0x1]
  4392ba:	rex inc DWORD PTR [rax-0x1]
  4392be:	rex inc DWORD PTR [rax-0x1]
  4392c2:	rex inc DWORD PTR [rax-0x1]
  4392c6:	rex inc DWORD PTR [rax-0x1]
  4392ca:	rex inc DWORD PTR [rax-0x1]
  4392ce:	rex inc DWORD PTR [rax-0x1]
  4392d2:	rex inc DWORD PTR [rax-0x1]
  4392d6:	rex inc DWORD PTR [rax-0x1]
  4392da:	sub    DWORD PTR [rax],eax
  4392dc:	(bad)  
  4392dd:	(bad)  
  4392de:	(bad)  
  4392df:	(bad)  
  4392e0:	(bad)  
  4392e1:	(bad)  
  4392e2:	(bad)  
  4392e3:	(bad)  
  4392e4:	(bad)  
  4392e5:	(bad)  
  4392e6:	(bad)  
  4392e7:	(bad)  
  4392e8:	(bad)  
  4392e9:	(bad)  
  4392ea:	(bad)  
  4392eb:	(bad)  
  4392ec:	(bad)  
  4392ed:	(bad)  
  4392ee:	(bad)  
  4392ef:	(bad)  
  4392f0:	(bad)  
  4392f1:	(bad)  
  4392f2:	(bad)  
  4392f3:	(bad)  
  4392f4:	(bad)  
  4392f5:	(bad)  
  4392f6:	(bad)  
  4392f7:	(bad)  
  4392f8:	(bad)  
  4392f9:	(bad)  
  4392fa:	(bad)  
  4392fb:	(bad)  
  4392fc:	(bad)  
  4392fd:	(bad)  
  4392fe:	(bad)  
  4392ff:	(bad)  
  439300:	(bad)  
  439301:	(bad)  
  439302:	(bad)  
  439303:	(bad)  
  439304:	(bad)  
  439305:	(bad)  
  439306:	(bad)  
  439307:	(bad)  
  439308:	(bad)  
  439309:	(bad)  
  43930a:	(bad)  
  43930b:	(bad)  
  43930c:	(bad)  
  43930d:	(bad)  
  43930e:	(bad)  
  43930f:	(bad)  
  439310:	(bad)  
  439311:	(bad)  
  439312:	(bad)  
  439313:	(bad)  
  439314:	(bad)  
  439315:	(bad)  
  439316:	(bad)  
  439317:	(bad)  
  439318:	(bad)  
  439319:	(bad)  
  43931a:	(bad)  
  43931b:	(bad)  
  43931c:	(bad)  
  43931d:	(bad)  
  43931e:	(bad)  
  43931f:	(bad)  
  439320:	(bad)  
  439321:	(bad)  
  439322:	(bad)  
  439323:	(bad)  
  439324:	(bad)  
  439325:	(bad)  
  439326:	(bad)  
  439327:	(bad)  
  439328:	(bad)  
  439329:	(bad)  
  43932a:	(bad)  
  43932b:	(bad)  
  43932c:	(bad)  
  43932d:	(bad)  
  43932e:	(bad)  
  43932f:	(bad)  
  439330:	(bad)  
  439331:	(bad)  
  439332:	(bad)  
  439333:	jmp    FWORD PTR [rcx]
  439335:	add    BYTE PTR [rsi],bh
  439337:	(bad)  
  439338:	ds (bad) 
  43933a:	ds (bad) 
  43933c:	ds (bad) 
  43933e:	ds (bad) 
  439340:	ds (bad) 
  439342:	ds (bad) 
  439344:	ds (bad) 
  439346:	ds (bad) 
  439348:	ds (bad) 
  43934a:	ds (bad) 
  43934c:	ds (bad) 
  43934e:	ds (bad) 
  439350:	ds (bad) 
  439352:	ds (bad) 
  439354:	ds (bad) 
  439356:	ds (bad) 
  439358:	ds (bad) 
  43935a:	ds (bad) 
  43935c:	ds (bad) 
  43935e:	ds (bad) 
  439360:	ds (bad) 
  439362:	ds (bad) 
  439364:	ds (bad) 
  439366:	ds (bad) 
  439368:	ds (bad) 
  43936a:	ds (bad) 
  43936c:	ds (bad) 
  43936e:	ds (bad) 
  439370:	ds (bad) 
  439372:	ds (bad) 
  439374:	ds (bad) 
  439376:	ds (bad) 
  439378:	ds (bad) 
  43937a:	ds (bad) 
  43937c:	ds (bad) 
  43937e:	ds (bad) 
  439380:	ds (bad) 
  439382:	ds (bad) 
  439384:	ds (bad) 
  439386:	ds (bad) 
  439388:	ds (bad) 
  43938a:	ds (bad) 
  43938c:	jmp    FWORD PTR ds:[rcx]
  43938f:	add    BYTE PTR [rip+0x3dff3dff],bh        # 0x3e42d194
  439395:	(bad)  
  439396:	cmp    eax,0x3dff3dff
  43939b:	(bad)  
  43939c:	cmp    eax,0x3dff3dff
  4393a1:	(bad)  
  4393a2:	cmp    eax,0x3dff3dff
  4393a7:	(bad)  
  4393a8:	cmp    eax,0x3dff3dff
  4393ad:	(bad)  
  4393ae:	cmp    eax,0x3dff3dff
  4393b3:	(bad)  
  4393b4:	cmp    eax,0x3dff3dff
  4393b9:	(bad)  
  4393ba:	cmp    eax,0x3dff3dff
  4393bf:	(bad)  
  4393c0:	cmp    eax,0x3dff3dff
  4393c5:	(bad)  
  4393c6:	cmp    eax,0x3dff3dff
  4393cb:	(bad)  
  4393cc:	cmp    eax,0x3dff3dff
  4393d1:	(bad)  
  4393d2:	cmp    eax,0x3dff3dff
  4393d7:	(bad)  
  4393d8:	cmp    eax,0x3dff3dff
  4393dd:	(bad)  
  4393de:	cmp    eax,0x3dff3dff
  4393e3:	(bad)  
  4393e4:	cmp    eax,0x29ff3dff
  4393e9:	add    BYTE PTR [rdi+rdi*8],bh
  4393ec:	cmp    al,0xff
  4393ee:	cmp    al,0xff
  4393f0:	cmp    al,0xff
  4393f2:	cmp    al,0xff
  4393f4:	cmp    al,0xff
  4393f6:	cmp    al,0xff
  4393f8:	cmp    al,0xff
  4393fa:	cmp    al,0xff
  4393fc:	cmp    al,0xff
  4393fe:	cmp    al,0xff
  439400:	cmp    al,0xff
  439402:	cmp    al,0xff
  439404:	cmp    al,0xff
  439406:	cmp    al,0xff
  439408:	cmp    al,0xff
  43940a:	cmp    al,0xff
  43940c:	cmp    al,0xff
  43940e:	out    dx,eax
  43940f:	add    bh,ch
  439411:	add    BYTE PTR [rdi+rdi*8],bh
  439414:	cmp    al,0xff
  439416:	cmp    al,0xff
  439418:	out    dx,eax
  439419:	add    bh,ch
  43941b:	add    bh,ch
  43941d:	add    bh,ch
  43941f:	add    bh,ch
  439421:	add    BYTE PTR [rdi+rdi*8],bh
  439424:	cmp    al,0xff
  439426:	cmp    al,0xff
  439428:	cmp    al,0xff
  43942a:	cmp    al,0xff
  43942c:	cmp    al,0xff
  43942e:	cmp    al,0xff
  439430:	cmp    al,0xff
  439432:	out    dx,eax
  439433:	add    bh,ch
  439435:	add    BYTE PTR [rdi+rdi*8],bh
  439438:	cmp    al,0xff
  43943a:	cmp    al,0xff
  43943c:	cmp    al,0xff
  43943e:	cmp    al,0xff
  439440:	cmp    al,0xff
  439442:	sub    DWORD PTR [rax],eax
  439444:	cmp    edi,edi
  439446:	(bad)
  439449:	add    ch,al
  43944b:	add    BYTE PTR [rbx],bh
  43944d:	(bad)  
  43944e:	cmp    edi,edi
  439450:	cmp    edi,edi
  439452:	cmp    edi,edi
  439454:	cmp    edi,edi
  439456:	cmp    edi,edi
  439458:	cmp    edi,edi
  43945a:	cmp    edi,edi
  43945c:	cmp    edi,edi
  43945e:	cmp    edi,edi
  439460:	cmp    edi,edi
  439462:	cmp    edi,edi
  439464:	cmp    edi,edi
  439466:	cmp    edi,edi
  439468:	cmp    edi,edi
  43946a:	cmp    edi,edi
  43946c:	cmp    edi,edi
  43946e:	cmp    edi,edi
  439470:	cmp    edi,edi
  439472:	cmp    edi,edi
  439474:	cmp    edi,edi
  439476:	cmp    edi,edi
  439478:	cmp    edi,edi
  43947a:	cmp    edi,edi
  43947c:	cmp    edi,edi
  43947e:	cmp    edi,edi
  439480:	cmp    edi,edi
  439482:	cmp    edi,edi
  439484:	cmp    edi,edi
  439486:	cmp    edi,edi
  439488:	cmp    edi,edi
  43948a:	cmp    edi,edi
  43948c:	cmp    edi,edi
  43948e:	cmp    edi,edi
  439490:	cmp    edi,edi
  439492:	cmp    edi,edi
  439494:	cmp    edi,edi
  439496:	cmp    edi,edi
  439498:	cmp    edi,edi
  43949a:	cmp    edi,edi
  43949c:	sub    DWORD PTR [rax],eax
  43949e:	cmp    bh,bh
  4394a0:	cmp    bh,bh
  4394a2:	cmp    bh,bh
  4394a4:	cmp    bh,bh
  4394a6:	cmp    bh,bh
  4394a8:	cmp    bh,bh
  4394aa:	cmp    bh,bh
  4394ac:	cmp    bh,bh
  4394ae:	cmp    bh,bh
  4394b0:	cmp    bh,bh
  4394b2:	cmp    bh,bh
  4394b4:	cmp    bh,bh
  4394b6:	cmp    bh,bh
  4394b8:	cmp    bh,bh
  4394ba:	cmp    bh,bh
  4394bc:	cmp    bh,bh
  4394be:	cmp    bh,bh
  4394c0:	cmp    bh,bh
  4394c2:	cmp    bh,bh
  4394c4:	cmp    bh,bh
  4394c6:	cmp    bh,bh
  4394c8:	cmp    bh,bh
  4394ca:	cmp    bh,bh
  4394cc:	cmp    bh,bh
  4394ce:	cmp    bh,bh
  4394d0:	cmp    bh,bh
  4394d2:	cmp    bh,bh
  4394d4:	cmp    bh,bh
  4394d6:	cmp    bh,bh
  4394d8:	cmp    bh,bh
  4394da:	cmp    bh,bh
  4394dc:	cmp    bh,bh
  4394de:	cmp    bh,bh
  4394e0:	cmp    bh,bh
  4394e2:	cmp    bh,bh
  4394e4:	cmp    bh,bh
  4394e6:	cmp    bh,bh
  4394e8:	cmp    bh,bh
  4394ea:	cmp    bh,bh
  4394ec:	cmp    bh,bh
  4394ee:	cmp    bh,bh
  4394f0:	cmp    bh,bh
  4394f2:	cmp    bh,bh
  4394f4:	cmp    bh,bh
  4394f6:	sub    DWORD PTR [rax],eax
  4394f8:	cmp    edi,edi
  4394fa:	cmp    edi,edi
  4394fc:	cmp    edi,edi
  4394fe:	cmp    edi,edi
  439500:	cmp    edi,edi
  439502:	cmp    edi,edi
  439504:	jge    0x439506
  439506:	cmp    edi,edi
  439508:	cmp    edi,edi
  43950a:	cmp    edi,edi
  43950c:	cmp    edi,edi
  43950e:	cmp    edi,edi
  439510:	cmp    edi,edi
  439512:	cmp    edi,edi
  439514:	cmp    edi,edi
  439516:	cmp    edi,edi
  439518:	cmp    edi,edi
  43951a:	cmp    edi,edi
  43951c:	mov    DWORD PTR [rax],0xff3900c7
  439522:	cmp    edi,edi
  439524:	cmp    edi,edi
  439526:	mov    DWORD PTR [rax],0xc700c7
  43952c:	mov    DWORD PTR [rax],0xc700c7
  439532:	mov    DWORD PTR [rax],0xc700c7
  439538:	mov    DWORD PTR [rax],0xff3900c7
  43953e:	cmp    edi,edi
  439540:	mov    DWORD PTR [rax],0xc700c7
  439546:	mov    DWORD PTR [rax],0xc700c7
  43954c:	mov    DWORD PTR [rax],0x29ff39
  439552:	enter  0xc800,0x0
  439556:	cmp    bh,bh
  439558:	cmp    bh,bh
  43955a:	enter  0xc800,0x0
  43955e:	enter  0xc800,0x0
  439562:	enter  0xc800,0x0
  439566:	enter  0xc800,0x0
  43956a:	enter  0xc800,0x0
  43956e:	enter  0xc800,0x0
  439572:	enter  0xc800,0x0
  439576:	enter  0xc800,0x0
  43957a:	enter  0xc800,0x0
  43957e:	enter  0xc800,0x0
  439582:	enter  0xc800,0x0
  439586:	enter  0xc800,0x0
  43958a:	enter  0xc800,0x0
  43958e:	enter  0xc800,0x0
  439592:	enter  0xc800,0x0
  439596:	enter  0xc800,0x0
  43959a:	enter  0xc800,0x0
  43959e:	enter  0xc800,0x0
  4395a2:	enter  0xc800,0x0
  4395a6:	enter  0xc800,0x0
  4395aa:	sub    DWORD PTR [rax],eax
  4395ac:	enter  0xc800,0x0
  4395b0:	(bad)  
  4395b1:	push   QWORD PTR [rdi]
  4395b3:	dec    ecx
  4395b5:	add    al,cl
  4395b7:	add    al,cl
  4395b9:	add    cl,cl
  4395bb:	add    cl,cl
  4395bd:	add    al,cl
  4395bf:	add    al,cl
  4395c1:	add    al,cl
  4395c3:	add    cl,cl
  4395c5:	add    cl,cl
  4395c7:	add    al,cl
  4395c9:	add    cl,cl
  4395cb:	add    al,cl
  4395cd:	add    cl,cl
  4395cf:	add    al,cl
  4395d1:	add    al,cl
  4395d3:	add    al,cl
  4395d5:	add    al,cl
  4395d7:	add    cl,cl
  4395d9:	add    al,cl
  4395db:	add    al,cl
  4395dd:	add    al,cl
  4395df:	add    al,cl
  4395e1:	add    al,cl
  4395e3:	add    al,cl
  4395e5:	add    al,cl
  4395e7:	add    al,cl
  4395e9:	add    al,cl
  4395eb:	add    al,cl
  4395ed:	add    al,cl
  4395ef:	add    al,cl
  4395f1:	add    cl,cl
  4395f3:	add    al,cl
  4395f5:	add    al,cl
  4395f7:	add    al,cl
  4395f9:	add    al,cl
  4395fb:	add    al,cl
  4395fd:	add    al,cl
  4395ff:	add    al,cl
  439601:	add    cl,cl
  439603:	add    BYTE PTR [rcx],ch
  439605:	add    BYTE PTR [rsi],dh
  439607:	push   QWORD PTR [rsi]
  439609:	push   QWORD PTR [rsi]
  43960b:	push   QWORD PTR [rsi]
  43960d:	dec    edx
  43960f:	add    BYTE PTR [rsi],dh
  439611:	push   QWORD PTR [rsi]
  439613:	dec    edx
  439615:	add    dl,cl
  439617:	add    BYTE PTR [rsi],dh
  439619:	push   QWORD PTR [rsi]
  43961b:	push   QWORD PTR [rsi]
  43961d:	dec    edx
  43961f:	add    dl,cl
  439621:	add    BYTE PTR [rsi],dh
  439623:	dec    edx
  439625:	add    BYTE PTR [rsi],dh
  439627:	dec    edx
  439629:	add    BYTE PTR [rsi],dh
  43962b:	push   QWORD PTR [rsi]
  43962d:	push   QWORD PTR [rsi]
  43962f:	push   QWORD PTR [rsi]
  439631:	dec    edx
  439633:	add    BYTE PTR [rsi],dh
  439635:	push   QWORD PTR [rsi]
  439637:	push   QWORD PTR [rsi]
  439639:	push   QWORD PTR [rsi]
  43963b:	push   QWORD PTR [rsi]
  43963d:	push   QWORD PTR [rsi]
  43963f:	push   QWORD PTR [rsi]
  439641:	push   QWORD PTR [rsi]
  439643:	push   QWORD PTR [rsi]
  439645:	push   QWORD PTR [rsi]
  439647:	push   QWORD PTR [rsi]
  439649:	push   QWORD PTR [rsi]
  43964b:	dec    edx
  43964d:	add    BYTE PTR [rsi],dh
  43964f:	push   QWORD PTR [rsi]
  439651:	push   QWORD PTR [rsi]
  439653:	push   QWORD PTR [rsi]
  439655:	push   QWORD PTR [rsi]
  439657:	push   QWORD PTR [rsi]
  439659:	push   QWORD PTR [rsi]
  43965b:	dec    edx
  43965d:	add    BYTE PTR [rcx],ch
  43965f:	add    BYTE PTR [rip+0x35ff35ff],dh        # 0x3642cc64
  439665:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc6a
  43966b:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc70
  439671:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc76
  439677:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc7c
  43967d:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc82
  439683:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc88
  439689:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc8e
  43968f:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc94
  439695:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cc9a
  43969b:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cca0
  4396a1:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642cca6
  4396a7:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642ccac
  4396ad:	push   QWORD PTR [rip+0x35ff35ff]        # 0x3642ccb2
  4396b3:	push   QWORD PTR [rip+0x29ff35ff]        # 0x2a42ccb8
  4396b9:	add    BYTE PTR [rdi+rdi*8],dh
  4396bc:	xor    al,0xff
  4396be:	xor    al,0xff
  4396c0:	xor    al,0xff
  4396c2:	xor    al,0xff
  4396c4:	xor    al,0xff
  4396c6:	xor    al,0xff
  4396c8:	xor    al,0xff
  4396ca:	xor    al,0xff
  4396cc:	xor    al,0xff
  4396ce:	xor    al,0xff
  4396d0:	xor    al,0xff
  4396d2:	xor    al,0xff
  4396d4:	xor    al,0xff
  4396d6:	xor    al,0xff
  4396d8:	xor    al,0xff
  4396da:	xor    al,0xff
  4396dc:	xor    al,0xff
  4396de:	int3   
  4396df:	add    ah,cl
  4396e1:	add    BYTE PTR [rdi+rdi*8],dh
  4396e4:	xor    al,0xff
  4396e6:	xor    al,0xff
  4396e8:	xor    al,0xff
  4396ea:	xor    al,0xff
  4396ec:	xor    al,0xff
  4396ee:	xor    al,0xff
  4396f0:	xchg   BYTE PTR [rax],al
  4396f2:	xor    al,0xff
  4396f4:	xor    al,0xff
  4396f6:	xor    al,0xff
  4396f8:	xor    al,0xff
  4396fa:	xor    al,0xff
  4396fc:	xor    al,0xff
  4396fe:	xor    al,0xff
  439700:	xor    al,0xff
  439702:	xor    al,0xff
  439704:	xor    al,0xff
  439706:	xor    al,0xff
  439708:	xor    al,0xff
  43970a:	xor    al,0xff
  43970c:	xor    al,0xff
  43970e:	xor    al,0xff
  439710:	xor    al,0xff
  439712:	sub    DWORD PTR [rax],eax
  439714:	xor    edi,edi
  439716:	xor    edi,edi
  439718:	xor    edi,edi
  43971a:	xor    edi,edi
  43971c:	xor    edi,edi
  43971e:	xor    edi,edi
  439720:	xor    edi,edi
  439722:	xor    edi,edi
  439724:	xor    edi,edi
  439726:	xor    edi,edi
  439728:	xor    edi,edi
  43972a:	xor    edi,edi
  43972c:	xor    edi,edi
  43972e:	xor    edi,edi
  439730:	xor    edi,edi
  439732:	xor    edi,edi
  439734:	xor    edi,edi
  439736:	xor    edi,edi
  439738:	(bad)  
  439739:	add    dh,cl
  43973b:	add    BYTE PTR [rbx],dh
  43973d:	push   QWORD PTR [rbx]
  43973f:	push   QWORD PTR [rbx]
  439741:	push   QWORD PTR [rbx]
  439743:	push   QWORD PTR [rbx]
  439745:	push   QWORD PTR [rbx]
  439747:	push   QWORD PTR [rbx]
  439749:	push   QWORD PTR [rbx]
  43974b:	push   QWORD PTR [rbx]
  43974d:	push   QWORD PTR [rbx]
  43974f:	push   QWORD PTR [rbx]
  439751:	push   QWORD PTR [rbx]
  439753:	push   QWORD PTR [rbx]
  439755:	push   QWORD PTR [rbx]
  439757:	push   QWORD PTR [rbx]
  439759:	push   QWORD PTR [rbx]
  43975b:	push   QWORD PTR [rbx]
  43975d:	push   QWORD PTR [rbx]
  43975f:	push   QWORD PTR [rbx]
  439761:	push   QWORD PTR [rbx]
  439763:	push   QWORD PTR [rbx]
  439765:	push   QWORD PTR [rbx]
  439767:	push   QWORD PTR [rbx]
  439769:	push   QWORD PTR [rbx]
  43976b:	jmp    FWORD PTR [rcx]
  43976d:	add    BYTE PTR [rdx],dh
  43976f:	push   QWORD PTR [rdx]
  439771:	push   QWORD PTR [rdx]
  439773:	push   QWORD PTR [rdx]
  439775:	push   QWORD PTR [rdx]
  439777:	push   QWORD PTR [rdx]
  439779:	push   QWORD PTR [rdx]
  43977b:	push   QWORD PTR [rdx]
  43977d:	push   QWORD PTR [rdx]
  43977f:	push   QWORD PTR [rdx]
  439781:	push   QWORD PTR [rdx]
  439783:	push   QWORD PTR [rdx]
  439785:	push   QWORD PTR [rdx]
  439787:	push   QWORD PTR [rdx]
  439789:	push   QWORD PTR [rdx]
  43978b:	push   QWORD PTR [rdx]
  43978d:	push   QWORD PTR [rdx]
  43978f:	push   QWORD PTR [rdx]
  439791:	dec    esi
  439793:	add    dh,cl
  439795:	add    BYTE PTR [rdx],dh
  439797:	push   QWORD PTR [rdx]
  439799:	push   QWORD PTR [rdx]
  43979b:	push   QWORD PTR [rdx]
  43979d:	push   QWORD PTR [rdx]
  43979f:	push   QWORD PTR [rdx]
  4397a1:	push   QWORD PTR [rdx]
  4397a3:	push   QWORD PTR [rdx]
  4397a5:	push   QWORD PTR [rdx]
  4397a7:	push   QWORD PTR [rdx]
  4397a9:	push   QWORD PTR [rdx]
  4397ab:	push   QWORD PTR [rdx]
  4397ad:	push   QWORD PTR [rdx]
  4397af:	push   QWORD PTR [rdx]
  4397b1:	push   QWORD PTR [rdx]
  4397b3:	push   QWORD PTR [rdx]
  4397b5:	push   QWORD PTR [rdx]
  4397b7:	push   QWORD PTR [rdx]
  4397b9:	push   QWORD PTR [rdx]
  4397bb:	push   QWORD PTR [rdx]
  4397bd:	push   QWORD PTR [rdx]
  4397bf:	push   QWORD PTR [rdx]
  4397c1:	push   QWORD PTR [rdx]
  4397c3:	push   QWORD PTR [rdx]
  4397c5:	jmp    FWORD PTR [rcx]
  4397c7:	add    BYTE PTR [rcx],dh
  4397c9:	push   QWORD PTR [rcx]
  4397cb:	push   QWORD PTR [rcx]
  4397cd:	push   QWORD PTR [rcx]
  4397cf:	push   QWORD PTR [rcx]
  4397d1:	push   rax
  4397d3:	add    BYTE PTR [rcx],dh
  4397d5:	push   QWORD PTR [rcx]
  4397d7:	push   QWORD PTR [rcx]
  4397d9:	push   QWORD PTR [rcx]
  4397db:	push   QWORD PTR [rcx]
  4397dd:	push   QWORD PTR [rcx]
  4397df:	push   QWORD PTR [rcx]
  4397e1:	push   QWORD PTR [rcx]
  4397e3:	push   QWORD PTR [rcx]
  4397e5:	push   QWORD PTR [rcx]
  4397e7:	push   QWORD PTR [rcx]
  4397e9:	push   QWORD PTR [rcx]
  4397eb:	dec    edi
  4397ed:	add    bh,cl
  4397ef:	add    BYTE PTR [rcx],dh
  4397f1:	push   QWORD PTR [rcx]
  4397f3:	push   QWORD PTR [rcx]
  4397f5:	dec    edi
  4397f7:	add    bh,cl
  4397f9:	add    bh,cl
  4397fb:	add    bh,cl
  4397fd:	add    bh,cl
  4397ff:	add    bh,cl
  439801:	add    bh,cl
  439803:	add    bh,cl
  439805:	add    bh,cl
  439807:	add    bh,cl
  439809:	add    bh,cl
  43980b:	add    BYTE PTR [rcx],dh
  43980d:	push   QWORD PTR [rcx]
  43980f:	dec    edi
  439811:	add    bh,cl
  439813:	add    bh,cl
  439815:	add    bh,cl
  439817:	add    bh,cl
  439819:	add    bh,cl
  43981b:	add    bh,cl
  43981d:	add    BYTE PTR [rcx],dh
  43981f:	jmp    FWORD PTR [rcx]
  439821:	add    BYTE PTR [rax],dh
  439823:	push   QWORD PTR [rax]
  439825:	push   QWORD PTR [rax]
  439827:	push   QWORD PTR [rax]
  439829:	push   QWORD PTR [rax]
  43982b:	push   QWORD PTR [rax]
  43982d:	push   QWORD PTR [rax]
  43982f:	push   QWORD PTR [rax]
  439831:	push   QWORD PTR [rax]
  439833:	push   rcx
  439835:	add    BYTE PTR [rax],dh
  439837:	push   QWORD PTR [rax]
  439839:	push   QWORD PTR [rax]
  43983b:	push   QWORD PTR [rax]
  43983d:	push   QWORD PTR [rax]
  43983f:	push   QWORD PTR [rax]
  439841:	push   QWORD PTR [rax]
  439843:	push   QWORD PTR [rax]
  439845:	call   rax
  439847:	add    al,dl
  439849:	add    BYTE PTR [rax],dh
  43984b:	push   QWORD PTR [rax]
  43984d:	push   QWORD PTR [rax]
  43984f:	call   rax
  439851:	add    al,dl
  439853:	add    al,dl
  439855:	add    al,dl
  439857:	add    al,dl
  439859:	add    al,dl
  43985b:	add    al,dl
  43985d:	add    al,dl
  43985f:	add    al,dl
  439861:	add    al,dl
  439863:	add    al,dl
  439865:	add    BYTE PTR [rax],dh
  439867:	push   QWORD PTR [rax]
  439869:	call   rax
  43986b:	add    al,dl
  43986d:	add    al,dl
  43986f:	add    al,dl
  439871:	add    al,dl
  439873:	add    al,dl
  439875:	add    al,dl
  439877:	add    BYTE PTR [rax],dh
  439879:	jmp    FWORD PTR [rcx]
  43987b:	add    BYTE PTR [rdi],ch
  43987d:	jmp    FWORD PTR [rdi]
  43987f:	jmp    FWORD PTR [rdi]
  439881:	jmp    FWORD PTR [rdi]
  439883:	jmp    FWORD PTR [rdi]
  439885:	jmp    FWORD PTR [rdi]
  439887:	jmp    FWORD PTR [rdi]
  439889:	jmp    FWORD PTR [rdi]
  43988b:	jmp    FWORD PTR [rdi]
  43988d:	jmp    FWORD PTR [rdi]
  43988f:	jmp    FWORD PTR [rdi]
  439891:	jmp    FWORD PTR [rdi]
  439893:	jmp    FWORD PTR [rdi]
  439895:	jmp    FWORD PTR [rdi]
  439897:	jmp    FWORD PTR [rdi]
  439899:	jmp    FWORD PTR [rdi]
  43989b:	jmp    FWORD PTR [rdi]
  43989d:	jmp    FWORD PTR [rdi]
  43989f:	jmp    FWORD PTR [rdi]
  4398a1:	jmp    FWORD PTR [rdi]
  4398a3:	jmp    FWORD PTR [rdi]
  4398a5:	jmp    FWORD PTR [rdi]
  4398a7:	jmp    FWORD PTR [rdi]
  4398a9:	jmp    FWORD PTR [rdi]
  4398ab:	jmp    FWORD PTR [rdi]
  4398ad:	jmp    FWORD PTR [rdi]
  4398af:	jmp    FWORD PTR [rdi]
  4398b1:	jmp    FWORD PTR [rdi]
  4398b3:	jmp    FWORD PTR [rdi]
  4398b5:	jmp    FWORD PTR [rdi]
  4398b7:	jmp    FWORD PTR [rdi]
  4398b9:	jmp    FWORD PTR [rdi]
  4398bb:	jmp    FWORD PTR [rdi]
  4398bd:	jmp    FWORD PTR [rdi]
  4398bf:	jmp    FWORD PTR [rdi]
  4398c1:	jmp    FWORD PTR [rdi]
  4398c3:	jmp    FWORD PTR [rdi]
  4398c5:	jmp    FWORD PTR [rdi]
  4398c7:	jmp    FWORD PTR [rdi]
  4398c9:	jmp    FWORD PTR [rdi]
  4398cb:	jmp    FWORD PTR [rdi]
  4398cd:	jmp    FWORD PTR [rdi]
  4398cf:	jmp    FWORD PTR [rdi]
  4398d1:	jmp    FWORD PTR [rdi]
  4398d3:	jmp    FWORD PTR [rcx]
  4398d5:	add    BYTE PTR [rsi],ch
  4398d7:	jmp    FWORD PTR [rsi]
  4398d9:	jmp    FWORD PTR [rsi]
  4398db:	jmp    FWORD PTR [rsi]
  4398dd:	jmp    FWORD PTR [rsi]
  4398df:	jmp    FWORD PTR [rsi]
  4398e1:	jmp    FWORD PTR [rsi]
  4398e3:	jmp    FWORD PTR [rsi]
  4398e5:	jmp    FWORD PTR [rsi]
  4398e7:	jmp    FWORD PTR [rsi]
  4398e9:	jmp    FWORD PTR [rsi]
  4398eb:	jmp    FWORD PTR [rsi]
  4398ed:	jmp    FWORD PTR [rsi]
  4398ef:	jmp    FWORD PTR [rsi]
  4398f1:	jmp    FWORD PTR [rsi]
  4398f3:	jmp    FWORD PTR [rsi]
  4398f5:	jmp    FWORD PTR [rsi]
  4398f7:	jmp    FWORD PTR [rsi]
  4398f9:	jmp    FWORD PTR [rsi]
  4398fb:	jmp    FWORD PTR [rsi]
  4398fd:	jmp    FWORD PTR [rsi]
  4398ff:	jmp    FWORD PTR [rsi]
  439901:	jmp    FWORD PTR [rsi]
  439903:	jmp    FWORD PTR [rsi]
  439905:	jmp    FWORD PTR [rsi]
  439907:	jmp    FWORD PTR [rsi]
  439909:	jmp    FWORD PTR [rsi]
  43990b:	jmp    FWORD PTR [rsi]
  43990d:	jmp    FWORD PTR [rsi]
  43990f:	jmp    FWORD PTR [rsi]
  439911:	jmp    FWORD PTR [rsi]
  439913:	jmp    FWORD PTR [rsi]
  439915:	jmp    FWORD PTR [rsi]
  439917:	jmp    FWORD PTR [rsi]
  439919:	jmp    FWORD PTR [rsi]
  43991b:	jmp    FWORD PTR [rsi]
  43991d:	jmp    FWORD PTR [rsi]
  43991f:	jmp    FWORD PTR [rsi]
  439921:	jmp    FWORD PTR [rsi]
  439923:	jmp    FWORD PTR [rsi]
  439925:	jmp    FWORD PTR [rsi]
  439927:	jmp    FWORD PTR [rsi]
  439929:	jmp    FWORD PTR [rsi]
  43992b:	jmp    FWORD PTR [rsi]
  43992d:	jmp    FWORD PTR [rcx]
  43992f:	add    BYTE PTR [rip+0xffffffffd300d3ff],ch        # 0xffffffffd3446d34
  439935:	add    bl,dl
  439937:	add    BYTE PTR [rip+0x2dff2dff],ch        # 0x2e42c73c
  43993d:	jmp    FWORD PTR [rip+0xffffffffd4ff2dff]        # 0xffffffffd542c742
  439943:	add    BYTE PTR [rip+0x2dff2dff],ch        # 0x2e42c748
  439949:	jmp    FWORD PTR [rip+0xffffffffd5ff2dff]        # 0xffffffffd642c74e
  43994f:	add    BYTE PTR [rip+0x2dff2dff],ch        # 0x2e42c754
  439955:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c75a
  43995b:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c760
  439961:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c766
  439967:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c76c
  43996d:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c772
  439973:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c778
  439979:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c77e
  43997f:	jmp    FWORD PTR [rip+0x2dff2dff]        # 0x2e42c784
  439985:	jmp    FWORD PTR [rip+0x2c0029ff]        # 0x2c43c38a
  43998b:	jmp    FWORD PTR [rdi+rdi*8]
  43998e:	sub    al,0xff
  439990:	sub    al,0xff
  439992:	sub    al,0xff
  439994:	sub    al,0xff
  439996:	sub    al,0xff
  439998:	sub    al,0xff
  43999a:	sub    al,0xff
  43999c:	sub    al,0xff
  43999e:	sub    al,0xff
  4399a0:	sub    al,0xff
  4399a2:	sub    al,0xff
  4399a4:	sub    al,0xff
  4399a6:	sub    al,0xff
  4399a8:	sub    al,0xff
  4399aa:	sub    al,0xff
  4399ac:	sub    al,0xff
  4399ae:	sub    al,0xff
  4399b0:	sub    al,0xff
  4399b2:	sub    al,0xff
  4399b4:	sub    al,0xff
  4399b6:	sub    al,0xff
  4399b8:	sub    al,0xff
  4399ba:	sub    al,0xff
  4399bc:	sub    al,0xff
  4399be:	sub    al,0xff
  4399c0:	sub    al,0xff
  4399c2:	sub    al,0xff
  4399c4:	sub    al,0xff
  4399c6:	sub    al,0xff
  4399c8:	sub    al,0xff
  4399ca:	sub    al,0xff
  4399cc:	sub    al,0xff
  4399ce:	sub    al,0xff
  4399d0:	sub    al,0xff
  4399d2:	sub    al,0xff
  4399d4:	sub    al,0xff
  4399d6:	sub    al,0xff
  4399d8:	sub    al,0xff
  4399da:	sub    al,0xff
  4399dc:	sub    al,0xff
  4399de:	sub    al,0xff
  4399e0:	sub    al,0xff
  4399e2:	sub    DWORD PTR [rax],eax
  4399e4:	sub    edi,edi
  4399e6:	sub    edi,edi
  4399e8:	sub    edi,edi
  4399ea:	sub    edi,edi
  4399ec:	sub    edi,edi
  4399ee:	sub    edi,edi
  4399f0:	sub    edi,edi
  4399f2:	sub    edi,edi
  4399f4:	sub    edi,edi
  4399f6:	sub    edi,edi
  4399f8:	sub    edi,edi
  4399fa:	sub    edi,edi
  4399fc:	sub    edi,edi
  4399fe:	sub    edi,edi
  439a00:	sub    edi,edi
  439a02:	repnz add BYTE PTR [rbx],ch
  439a05:	jmp    FWORD PTR [rbx]
  439a07:	jmp    FWORD PTR [rbx]
  439a09:	jmp    FWORD PTR [rbx]
  439a0b:	jmp    FWORD PTR [rbx]
  439a0d:	jmp    FWORD PTR [rbx]
  439a0f:	jmp    FWORD PTR [rbx]
  439a11:	jmp    FWORD PTR [rbx]
  439a13:	jmp    FWORD PTR [rbx]
  439a15:	jmp    FWORD PTR [rbx]
  439a17:	jmp    FWORD PTR [rbx]
  439a19:	jmp    FWORD PTR [rbx]
  439a1b:	jmp    FWORD PTR [rbx]
  439a1d:	jmp    FWORD PTR [rbx]
  439a1f:	jmp    FWORD PTR [rbx]
  439a21:	jmp    FWORD PTR [rbx]
  439a23:	jmp    FWORD PTR [rbx]
  439a25:	jmp    FWORD PTR [rbx]
  439a27:	jmp    FWORD PTR [rbx]
  439a29:	jmp    FWORD PTR [rbx]
  439a2b:	jmp    FWORD PTR [rbx]
  439a2d:	jmp    FWORD PTR [rbx]
  439a2f:	jmp    FWORD PTR [rbx]
  439a31:	jmp    FWORD PTR [rbx]
  439a33:	jmp    FWORD PTR [rbx]
  439a35:	jmp    FWORD PTR [rbx]
  439a37:	jmp    FWORD PTR [rbx]
  439a39:	jmp    FWORD PTR [rbx]
  439a3b:	jmp    FWORD PTR [rcx]
  439a3d:	add    bl,dh
  439a3f:	add    ah,dh
  439a41:	add    BYTE PTR [rbp-0xcff6b00],dl
  439a47:	add    bl,dh
  439a49:	add    bl,dh
  439a4b:	add    bl,dh
  439a4d:	add    bl,dh
  439a4f:	add    bl,dh
  439a51:	add    bl,dh
  439a53:	add    bl,dh
  439a55:	add    bl,dh
  439a57:	add    bl,dh
  439a59:	add    bl,dh
  439a5b:	add    ch,dh
  439a5d:	add    bl,dh
  439a5f:	add    bl,dh
  439a61:	add    bl,dh
  439a63:	add    bl,dh
  439a65:	add    bl,dh
  439a67:	add    bl,dh
  439a69:	add    bl,dh
  439a6b:	add    bl,dh
  439a6d:	add    bl,dh
  439a6f:	add    bl,dh
  439a71:	add    bl,dh
  439a73:	add    bl,dh
  439a75:	add    bl,dh
  439a77:	add    bl,dh
  439a79:	add    bl,dh
  439a7b:	add    bl,dh
  439a7d:	add    bl,dh
  439a7f:	add    bl,dh
  439a81:	add    bl,dh
  439a83:	add    bl,dh
  439a85:	add    bl,dh
  439a87:	add    bl,dh
  439a89:	add    bl,dh
  439a8b:	add    bl,dh
  439a8d:	add    bl,dh
  439a8f:	add    bl,dh
  439a91:	add    bl,dh
  439a93:	add    bl,dh
  439a95:	add    BYTE PTR [rcx],ch
  439a97:	add    BYTE PTR [rcx],ch
  439a99:	jmp    FWORD PTR [rcx]
  439a9b:	jmp    FWORD PTR [rcx]
  439a9d:	jmp    FWORD PTR [rcx]
  439a9f:	call   rdi
  439aa1:	add    BYTE PTR [rcx],ch
  439aa3:	jmp    FWORD PTR [rcx]
  439aa5:	call   rdi
  439aa7:	add    bh,dl
  439aa9:	add    BYTE PTR [rcx],ch
  439aab:	jmp    FWORD PTR [rcx]
  439aad:	jmp    FWORD PTR [rcx]
  439aaf:	call   rdi
  439ab1:	add    bh,dl
  439ab3:	add    BYTE PTR [rcx],ch
  439ab5:	call   rdi
  439ab7:	add    BYTE PTR [rcx],ch
  439ab9:	call   rdi
  439abb:	add    BYTE PTR [rcx],ch
  439abd:	jmp    FWORD PTR [rcx]
  439abf:	jmp    FWORD PTR [rcx]
  439ac1:	jmp    FWORD PTR [rcx]
  439ac3:	call   rdi
  439ac5:	add    BYTE PTR [rcx],ch
  439ac7:	jmp    FWORD PTR [rcx]
  439ac9:	jmp    FWORD PTR [rcx]
  439acb:	jmp    FWORD PTR [rcx]
  439acd:	jmp    FWORD PTR [rcx]
  439acf:	jmp    FWORD PTR [rcx]
  439ad1:	jmp    FWORD PTR [rcx]
  439ad3:	jmp    FWORD PTR [rcx]
  439ad5:	jmp    FWORD PTR [rcx]
  439ad7:	jmp    FWORD PTR [rcx]
  439ad9:	jmp    FWORD PTR [rcx]
  439adb:	jmp    FWORD PTR [rcx]
  439add:	call   rdi
  439adf:	add    BYTE PTR [rcx],ch
  439ae1:	jmp    FWORD PTR [rcx]
  439ae3:	jmp    FWORD PTR [rcx]
  439ae5:	jmp    FWORD PTR [rcx]
  439ae7:	jmp    FWORD PTR [rcx]
  439ae9:	jmp    FWORD PTR [rcx]
  439aeb:	jmp    FWORD PTR [rcx]
  439aed:	call   rdi
  439aef:	add    BYTE PTR [rcx],ch
  439af1:	add    BYTE PTR [rax],ch
  439af3:	(bad)  
  439af4:	fadd   DWORD PTR [rax]
  439af6:	fadd   DWORD PTR [rax]
  439af8:	fadd   DWORD PTR [rax]
  439afa:	sub    bh,bh
  439afc:	sub    bh,bh
  439afe:	sub    bh,bh
  439b00:	sub    bh,bh
  439b02:	sub    bh,bh
  439b04:	fld    DWORD PTR [rax]
  439b06:	sub    bh,bh
  439b08:	sub    bh,bh
  439b0a:	sub    bh,bh
  439b0c:	sub    bh,bh
  439b0e:	sub    bh,bh
  439b10:	fiadd  DWORD PTR [rax]
  439b12:	sub    bh,bh
  439b14:	sub    bh,bh
  439b16:	sub    bh,bh
  439b18:	sub    bh,bh
  439b1a:	sub    bh,bh
  439b1c:	sub    bh,bh
  439b1e:	sub    bh,bh
  439b20:	sub    bh,bh
  439b22:	sub    bh,bh
  439b24:	sub    bh,bh
  439b26:	sub    bh,bh
  439b28:	sub    bh,bh
  439b2a:	sub    bh,bh
  439b2c:	sub    bh,bh
  439b2e:	sub    bh,bh
  439b30:	sub    bh,bh
  439b32:	sub    bh,bh
  439b34:	sub    bh,bh
  439b36:	sub    bh,bh
  439b38:	sub    bh,bh
  439b3a:	sub    bh,bh
  439b3c:	sub    bh,bh
  439b3e:	sub    bh,bh
  439b40:	sub    bh,bh
  439b42:	sub    bh,bh
  439b44:	sub    bh,bh
  439b46:	sub    bh,bh
  439b48:	sub    bh,bh
  439b4a:	sub    DWORD PTR [rax],eax
  439b4c:	(bad)  
  439b4d:	jmp    QWORD PTR [rdi]
  439b4f:	jmp    QWORD PTR [rdi]
  439b51:	jmp    QWORD PTR [rdi]
  439b53:	jmp    QWORD PTR [rdi]
  439b55:	jmp    QWORD PTR [rdi]
  439b57:	jmp    QWORD PTR [rdi]
  439b59:	jmp    QWORD PTR [rdi]
  439b5b:	jmp    QWORD PTR [rdi]
  439b5d:	jmp    QWORD PTR [rdi]
  439b5f:	jmp    QWORD PTR [rdi]
  439b61:	jmp    QWORD PTR [rdi]
  439b63:	jmp    QWORD PTR [rdi]
  439b65:	jmp    QWORD PTR [rdi]
  439b67:	jmp    QWORD PTR [rdi]
  439b69:	jmp    QWORD PTR [rdi]
  439b6b:	jmp    QWORD PTR [rdi]
  439b6d:	jmp    QWORD PTR [rdi]
  439b6f:	jmp    QWORD PTR [rdi]
  439b71:	jmp    QWORD PTR [rdi]
  439b73:	jmp    QWORD PTR [rdi]
  439b75:	jmp    QWORD PTR [rdi]
  439b77:	jmp    QWORD PTR [rdi]
  439b79:	jmp    QWORD PTR [rdi]
  439b7b:	jmp    QWORD PTR [rdi]
  439b7d:	jmp    QWORD PTR [rdi]
  439b7f:	jmp    QWORD PTR [rdi]
  439b81:	jmp    QWORD PTR [rdi]
  439b83:	jmp    QWORD PTR [rdi]
  439b85:	jmp    QWORD PTR [rdi]
  439b87:	jmp    QWORD PTR [rdi]
  439b89:	jmp    QWORD PTR [rdi]
  439b8b:	jmp    QWORD PTR [rdi]
  439b8d:	jmp    QWORD PTR [rdi]
  439b8f:	jmp    QWORD PTR [rdi]
  439b91:	jmp    QWORD PTR [rdi]
  439b93:	jmp    QWORD PTR [rdi]
  439b95:	jmp    QWORD PTR [rdi]
  439b97:	jmp    QWORD PTR [rdi]
  439b99:	jmp    QWORD PTR [rdi]
  439b9b:	jmp    QWORD PTR [rdi]
  439b9d:	jmp    QWORD PTR [rdi]
  439b9f:	jmp    QWORD PTR [rdi]
  439ba1:	jmp    QWORD PTR [rdi]
  439ba3:	jmp    FWORD PTR [rcx]
  439ba5:	add    BYTE PTR [rsi],ah
  439ba7:	jmp    QWORD PTR [rsi]
  439ba9:	jmp    QWORD PTR [rsi]
  439bab:	jmp    QWORD PTR [rsi]
  439bad:	jmp    QWORD PTR [rsi]
  439baf:	jmp    QWORD PTR [rsi]
  439bb1:	jmp    QWORD PTR [rsi]
  439bb3:	jmp    QWORD PTR [rsi]
  439bb5:	jmp    QWORD PTR [rsi]
  439bb7:	jmp    QWORD PTR [rsi]
  439bb9:	jmp    QWORD PTR [rsi]
  439bbb:	jmp    QWORD PTR [rsi]
  439bbd:	jmp    QWORD PTR [rsi]
  439bbf:	jmp    QWORD PTR [rsi]
  439bc1:	jmp    QWORD PTR [rsi]
  439bc3:	push   rsi
  439bc5:	add    BYTE PTR [rsi],ah
  439bc7:	jmp    QWORD PTR [rsi]
  439bc9:	jmp    QWORD PTR [rsi]
  439bcb:	jmp    QWORD PTR [rsi]
  439bcd:	jmp    QWORD PTR [rsi]
  439bcf:	jmp    QWORD PTR [rsi]
  439bd1:	jmp    QWORD PTR [rsi]
  439bd3:	jmp    QWORD PTR [rsi]
  439bd5:	jmp    QWORD PTR [rsi]
  439bd7:	jmp    QWORD PTR [rsi]
  439bd9:	jmp    QWORD PTR [rsi]
  439bdb:	jmp    QWORD PTR [rsi]
  439bdd:	jmp    QWORD PTR [rsi]
  439bdf:	jmp    QWORD PTR [rsi]
  439be1:	jmp    QWORD PTR [rsi]
  439be3:	jmp    QWORD PTR [rsi]
  439be5:	jmp    QWORD PTR [rsi]
  439be7:	jmp    QWORD PTR [rsi]
  439be9:	jmp    QWORD PTR [rsi]
  439beb:	jmp    QWORD PTR [rsi]
  439bed:	jmp    QWORD PTR [rsi]
  439bef:	jmp    QWORD PTR [rsi]
  439bf1:	jmp    QWORD PTR [rsi]
  439bf3:	jmp    QWORD PTR [rsi]
  439bf5:	jmp    QWORD PTR [rsi]
  439bf7:	jmp    QWORD PTR [rsi]
  439bf9:	jmp    QWORD PTR [rsi]
  439bfb:	jmp    QWORD PTR [rsi]
  439bfd:	jmp    FWORD PTR [rcx]
  439bff:	add    bh,dh
  439c01:	add    al,bh
  439c03:	add    BYTE PTR [rdi-0x8ff6100],bl
  439c09:	add    bh,dh
  439c0b:	add    bh,dh
  439c0d:	add    bh,dh
  439c0f:	add    bh,dh
  439c11:	add    bh,dh
  439c13:	add    bh,dh
  439c15:	add    bh,dh
  439c17:	add    bh,dh
  439c19:	add    bh,dh
  439c1b:	add    bh,dh
  439c1d:	add    cl,bh
  439c1f:	add    bh,dh
  439c21:	add    bh,dh
  439c23:	add    bh,dh
  439c25:	add    bh,dh
  439c27:	add    bh,dh
  439c29:	add    bh,dh
  439c2b:	add    bh,dh
  439c2d:	add    bh,dh
  439c2f:	add    bh,dh
  439c31:	add    bh,dh
  439c33:	add    bh,dh
  439c35:	add    bh,dh
  439c37:	add    bh,dh
  439c39:	add    bh,dh
  439c3b:	add    bh,dh
  439c3d:	add    bh,dh
  439c3f:	add    bh,dh
  439c41:	add    bh,dh
  439c43:	add    bh,dh
  439c45:	add    bh,dh
  439c47:	add    bh,dh
  439c49:	add    bh,dh
  439c4b:	add    bh,dh
  439c4d:	add    bh,dh
  439c4f:	add    bh,dh
  439c51:	add    bh,dh
  439c53:	add    bh,dh
  439c55:	add    bh,dh
  439c57:	add    BYTE PTR [rcx],ch
  439c59:	add    BYTE PTR [rdi+rdi*8],ah
  439c5c:	fadd   QWORD PTR [rax]
  439c5e:	fadd   QWORD PTR [rax]
  439c60:	fadd   QWORD PTR [rax]
  439c62:	and    al,0xff
  439c64:	and    al,0xff
  439c66:	and    al,0xff
  439c68:	and    al,0xff
  439c6a:	and    al,0xff
  439c6c:	fld    QWORD PTR [rax]
  439c6e:	and    al,0xff
  439c70:	and    al,0xff
  439c72:	and    al,0xff
  439c74:	and    al,0xff
  439c76:	and    al,0xff
  439c78:	fiadd  WORD PTR [rax]
  439c7a:	and    al,0xff
  439c7c:	and    al,0xff
  439c7e:	and    al,0xff
  439c80:	and    al,0xff
  439c82:	and    al,0xff
  439c84:	and    al,0xff
  439c86:	and    al,0xff
  439c88:	and    al,0xff
  439c8a:	and    al,0xff
  439c8c:	and    al,0xff
  439c8e:	and    al,0xff
  439c90:	and    al,0xff
  439c92:	and    al,0xff
  439c94:	and    al,0xff
  439c96:	and    al,0xff
  439c98:	and    al,0xff
  439c9a:	and    al,0xff
  439c9c:	and    al,0xff
  439c9e:	and    al,0xff
  439ca0:	and    al,0xff
  439ca2:	and    al,0xff
  439ca4:	and    al,0xff
  439ca6:	and    al,0xff
  439ca8:	and    al,0xff
  439caa:	and    al,0xff
  439cac:	and    al,0xff
  439cae:	and    al,0xff
  439cb0:	and    al,0xff
  439cb2:	sub    DWORD PTR [rax],eax
  439cb4:	and    edi,edi
  439cb6:	and    edi,edi
  439cb8:	and    edi,edi
  439cba:	and    edi,edi
  439cbc:	and    edi,edi
  439cbe:	and    edi,edi
  439cc0:	and    edi,edi
  439cc2:	and    edi,edi
  439cc4:	and    edi,edi
  439cc6:	and    edi,edi
  439cc8:	and    edi,edi
  439cca:	and    edi,edi
  439ccc:	and    edi,edi
  439cce:	and    edi,edi
  439cd0:	and    edi,edi
  439cd2:	and    edi,edi
  439cd4:	and    edi,edi
  439cd6:	and    edi,edi
  439cd8:	and    edi,edi
  439cda:	and    edi,edi
  439cdc:	and    edi,edi
  439cde:	and    edi,edi
  439ce0:	and    edi,edi
  439ce2:	and    edi,edi
  439ce4:	and    edi,edi
  439ce6:	and    edi,edi
  439ce8:	and    edi,edi
  439cea:	and    edi,edi
  439cec:	and    edi,edi
  439cee:	and    edi,edi
  439cf0:	and    edi,edi
  439cf2:	and    edi,edi
  439cf4:	and    edi,edi
  439cf6:	and    edi,edi
  439cf8:	and    edi,edi
  439cfa:	and    edi,edi
  439cfc:	and    edi,edi
  439cfe:	and    edi,edi
  439d00:	and    edi,edi
  439d02:	and    edi,edi
  439d04:	and    edi,edi
  439d06:	and    edi,edi
  439d08:	and    edi,edi
  439d0a:	and    edi,edi
  439d0c:	sub    DWORD PTR [rax],eax
  439d0e:	and    bh,bh
  439d10:	and    bh,bh
  439d12:	and    bh,bh
  439d14:	and    bh,bh
  439d16:	and    bh,bh
  439d18:	and    bh,bh
  439d1a:	and    bh,bh
  439d1c:	and    bh,bh
  439d1e:	and    bh,bh
  439d20:	and    bh,bh
  439d22:	and    bh,bh
  439d24:	and    bh,bh
  439d26:	and    bh,bh
  439d28:	and    bh,bh
  439d2a:	and    bh,bh
  439d2c:	cli    
  439d2d:	add    BYTE PTR [rdx],ah
  439d2f:	jmp    QWORD PTR [rdx]
  439d31:	jmp    QWORD PTR [rdx]
  439d33:	jmp    QWORD PTR [rdx]
  439d35:	jmp    QWORD PTR [rdx]
  439d37:	jmp    QWORD PTR [rdx]
  439d39:	jmp    QWORD PTR [rdx]
  439d3b:	jmp    QWORD PTR [rdx]
  439d3d:	jmp    QWORD PTR [rdx]
  439d3f:	jmp    QWORD PTR [rdx]
  439d41:	jmp    QWORD PTR [rdx]
  439d43:	jmp    QWORD PTR [rdx]
  439d45:	jmp    QWORD PTR [rdx]
  439d47:	jmp    QWORD PTR [rdx]
  439d49:	jmp    QWORD PTR [rdx]
  439d4b:	jmp    QWORD PTR [rdx]
  439d4d:	jmp    QWORD PTR [rdx]
  439d4f:	jmp    QWORD PTR [rdx]
  439d51:	jmp    QWORD PTR [rdx]
  439d53:	jmp    QWORD PTR [rdx]
  439d55:	jmp    QWORD PTR [rdx]
  439d57:	jmp    QWORD PTR [rdx]
  439d59:	jmp    QWORD PTR [rdx]
  439d5b:	jmp    QWORD PTR [rdx]
  439d5d:	jmp    QWORD PTR [rdx]
  439d5f:	jmp    QWORD PTR [rdx]
  439d61:	jmp    QWORD PTR [rdx]
  439d63:	jmp    QWORD PTR [rdx]
  439d65:	jmp    FWORD PTR [rcx]
  439d67:	add    bl,bh
  439d69:	add    ah,bh
  439d6b:	add    BYTE PTR [rbx-0x4ff5d00],ah
  439d71:	add    bl,bh
  439d73:	add    bl,bh
  439d75:	add    bl,bh
  439d77:	add    bl,bh
  439d79:	add    bl,bh
  439d7b:	add    bl,bh
  439d7d:	add    bl,bh
  439d7f:	add    bl,bh
  439d81:	add    bl,bh
  439d83:	add    bl,bh
  439d85:	add    ch,bh
  439d87:	add    bl,bh
  439d89:	add    bl,bh
  439d8b:	add    bl,bh
  439d8d:	add    bl,bh
  439d8f:	add    bl,bh
  439d91:	add    bl,bh
  439d93:	add    bl,bh
  439d95:	add    bl,bh
  439d97:	add    bl,bh
  439d99:	add    bl,bh
  439d9b:	add    bl,bh
  439d9d:	add    bl,bh
  439d9f:	add    bl,bh
  439da1:	add    bl,bh
  439da3:	add    bl,bh
  439da5:	add    bl,bh
  439da7:	add    bl,bh
  439da9:	add    bl,bh
  439dab:	add    bl,bh
  439dad:	add    bl,bh
  439daf:	add    bl,bh
  439db1:	add    bl,bh
  439db3:	add    bl,bh
  439db5:	add    bl,bh
  439db7:	add    bl,bh
  439db9:	add    bl,bh
  439dbb:	add    bl,bh
  439dbd:	add    bl,bh
  439dbf:	add    BYTE PTR [rcx],ch
  439dc1:	add    BYTE PTR [rax],ah
  439dc3:	jmp    QWORD PTR [rax]
  439dc5:	jmp    QWORD PTR [rax]
  439dc7:	jmp    QWORD PTR [rax]
  439dc9:	jmp    QWORD PTR [rax]
  439dcb:	jmp    QWORD PTR [rax]
  439dcd:	jmp    QWORD PTR [rax]
  439dcf:	jmp    QWORD PTR [rax]
  439dd1:	jmp    QWORD PTR [rax]
  439dd3:	jmp    QWORD PTR [rax]
  439dd5:	jmp    QWORD PTR [rax]
  439dd7:	jmp    QWORD PTR [rax]
  439dd9:	jmp    QWORD PTR [rax]
  439ddb:	jmp    QWORD PTR [rax]
  439ddd:	jmp    QWORD PTR [rax]
  439ddf:	jmp    QWORD PTR [rax]
  439de1:	jmp    QWORD PTR [rax]
  439de3:	jmp    QWORD PTR [rax]
  439de5:	(bad)  
  439de6:	inc    BYTE PTR [rax]
  439de8:	and    bh,bh
  439dea:	and    bh,bh
  439dec:	and    bh,bh
  439dee:	and    bh,bh
  439df0:	and    bh,bh
  439df2:	and    bh,bh
  439df4:	and    bh,bh
  439df6:	and    bh,bh
  439df8:	and    bh,bh
  439dfa:	and    bh,bh
  439dfc:	and    bh,bh
  439dfe:	and    bh,bh
  439e00:	and    bh,bh
  439e02:	and    bh,bh
  439e04:	and    bh,bh
  439e06:	and    bh,bh
  439e08:	and    bh,bh
  439e0a:	and    bh,bh
  439e0c:	and    bh,bh
  439e0e:	and    bh,bh
  439e10:	and    bh,bh
  439e12:	and    bh,bh
  439e14:	and    bh,bh
  439e16:	and    bh,bh
  439e18:	and    bh,bh
  439e1a:	sub    DWORD PTR [rax],eax
  439e1c:	(bad)  
  439e1d:	call   FWORD PTR [rdi]
  439e1f:	call   FWORD PTR [rdi]
  439e21:	call   FWORD PTR [rdi]
  439e23:	call   FWORD PTR [rdi]
  439e25:	call   FWORD PTR [rdi]
  439e27:	call   FWORD PTR [rdi]
  439e29:	call   FWORD PTR [rdi]
  439e2b:	call   FWORD PTR [rdi]
  439e2d:	call   FWORD PTR [rdi]
  439e2f:	call   FWORD PTR [rdi]
  439e31:	call   FWORD PTR [rdi]
  439e33:	call   FWORD PTR [rdi]
  439e35:	call   FWORD PTR [rdi]
  439e37:	call   FWORD PTR [rdi]
  439e39:	call   FWORD PTR [rdi]
  439e3b:	call   FWORD PTR [rdi]
  439e3d:	call   FWORD PTR [rdi]
  439e3f:	(bad)  
  439e40:	inc    DWORD PTR [rax]
  439e42:	inc    DWORD PTR [rax]
  439e44:	(bad)  
  439e45:	call   FWORD PTR [rdi]
  439e47:	call   FWORD PTR [rdi]
  439e49:	(bad)  
  439e4a:	inc    DWORD PTR [rax]
  439e4c:	inc    DWORD PTR [rax]
  439e4e:	inc    DWORD PTR [rax]
  439e50:	inc    DWORD PTR [rax]
  439e52:	inc    DWORD PTR [rax]
  439e54:	(bad)  
  439e55:	call   FWORD PTR [rdi]
  439e57:	call   FWORD PTR [rdi]
  439e59:	call   FWORD PTR [rdi]
  439e5b:	call   FWORD PTR [rdi]
  439e5d:	call   FWORD PTR [rdi]
  439e5f:	call   FWORD PTR [rdi]
  439e61:	call   FWORD PTR [rdi]
  439e63:	(bad)  
  439e64:	inc    DWORD PTR [rax]
  439e66:	inc    DWORD PTR [rax]
  439e68:	(bad)  
  439e69:	call   FWORD PTR [rdi]
  439e6b:	call   FWORD PTR [rdi]
  439e6d:	call   FWORD PTR [rdi]
  439e6f:	call   FWORD PTR [rdi]
  439e71:	call   FWORD PTR [rdi]
  439e73:	jmp    FWORD PTR [rcx]
  439e75:	add    BYTE PTR [rsi],bl
  439e77:	call   FWORD PTR [rsi]
  439e79:	call   FWORD PTR [rsi]
  439e7b:	call   FWORD PTR [rsi]
  439e7d:	call   FWORD PTR [rsi]
  439e7f:	call   FWORD PTR [rsi]
  439e81:	call   FWORD PTR [rsi]
  439e83:	call   FWORD PTR [rsi]
  439e85:	call   FWORD PTR [rsi]
  439e87:	call   FWORD PTR [rsi]
  439e89:	call   FWORD PTR [rsi]
  439e8b:	call   FWORD PTR [rsi]
  439e8d:	call   FWORD PTR [rsi]
  439e8f:	call   FWORD PTR [rsi]
  439e91:	call   FWORD PTR [rsi]
  439e93:	call   FWORD PTR [rsi]
  439e95:	call   FWORD PTR [rsi]
  439e97:	call   FWORD PTR [rsi]
  439e99:	inc    DWORD PTR [rax]
  439e9b:	add    DWORD PTR [rax],eax
  439e9d:	add    DWORD PTR [rsi],ebx
  439e9f:	call   FWORD PTR [rsi]
  439ea1:	call   FWORD PTR [rsi]
  439ea3:	inc    DWORD PTR [rax]
  439ea5:	add    DWORD PTR [rax],eax
  439ea7:	add    DWORD PTR [rax],eax
  439ea9:	add    DWORD PTR [rax],eax
  439eab:	add    DWORD PTR [rax],eax
  439ead:	add    DWORD PTR [rsi],ebx
  439eaf:	call   FWORD PTR [rsi]
  439eb1:	call   FWORD PTR [rsi]
  439eb3:	call   FWORD PTR [rsi]
  439eb5:	call   FWORD PTR [rsi]
  439eb7:	call   FWORD PTR [rsi]
  439eb9:	call   FWORD PTR [rsi]
  439ebb:	call   FWORD PTR [rsi]
  439ebd:	inc    DWORD PTR [rax]
  439ebf:	add    DWORD PTR [rax],eax
  439ec1:	add    DWORD PTR [rsi],ebx
  439ec3:	call   FWORD PTR [rsi]
  439ec5:	call   FWORD PTR [rsi]
  439ec7:	call   FWORD PTR [rsi]
  439ec9:	call   FWORD PTR [rsi]
  439ecb:	call   FWORD PTR [rsi]
  439ecd:	jmp    FWORD PTR [rcx]
  439ecf:	add    BYTE PTR [rip+0x1dff1dff],bl        # 0x1e42bcd4
  439ed5:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bcda
  439edb:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bce0
  439ee1:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bce6
  439ee7:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bcec
  439eed:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bcf2
  439ef3:	inc    DWORD PTR [rcx]
  439ef5:	add    DWORD PTR [rcx],eax
  439ef7:	add    DWORD PTR [rip+0x1dff1dff],ebx        # 0x1e42bcfc
  439efd:	inc    DWORD PTR [rcx]
  439eff:	add    DWORD PTR [rcx],eax
  439f01:	add    DWORD PTR [rcx],eax
  439f03:	add    DWORD PTR [rcx],eax
  439f05:	add    DWORD PTR [rcx],eax
  439f07:	add    DWORD PTR [rip+0x1dff1dff],ebx        # 0x1e42bd0c
  439f0d:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bd12
  439f13:	call   FWORD PTR [rip+0x1ff1dff]        # 0x242bd18
  439f19:	add    DWORD PTR [rcx],eax
  439f1b:	add    DWORD PTR [rip+0x1dff1dff],ebx        # 0x1e42bd20
  439f21:	call   FWORD PTR [rip+0x1dff1dff]        # 0x1e42bd26
  439f27:	jmp    FWORD PTR [rcx]
  439f29:	add    BYTE PTR [rdi+rdi*8],bl
  439f2c:	sbb    al,0xff
  439f2e:	sbb    al,0xff
  439f30:	sbb    al,0xff
  439f32:	sbb    al,0xff
  439f34:	sbb    al,0xff
  439f36:	lods   eax,DWORD PTR ds:[rsi]
  439f37:	add    BYTE PTR [rdi+rdi*8],bl
  439f3a:	sbb    al,0xff
  439f3c:	sbb    al,0xff
  439f3e:	sbb    al,0xff
  439f40:	sbb    al,0xff
  439f42:	sbb    al,0xff
  439f44:	sbb    al,0xff
  439f46:	sbb    al,0xff
  439f48:	sbb    al,0xff
  439f4a:	sbb    al,0xff
  439f4c:	sbb    al,0xff
  439f4e:	in     al,0x0
  439f50:	in     al,0x0
  439f52:	sbb    al,0xff
  439f54:	sbb    al,0xff
  439f56:	sbb    al,0xff
  439f58:	in     al,0x0
  439f5a:	in     al,0x0
  439f5c:	in     al,0x0
  439f5e:	in     al,0x0
  439f60:	in     al,0x0
  439f62:	in     al,0x0
  439f64:	in     al,0x0
  439f66:	in     al,0x0
  439f68:	in     al,0x0
  439f6a:	in     al,0x0
  439f6c:	in     al,0x0
  439f6e:	sbb    al,0xff
  439f70:	sbb    al,0xff
  439f72:	in     al,0x0
  439f74:	in     al,0x0
  439f76:	in     al,0x0
  439f78:	in     al,0x0
  439f7a:	in     al,0x0
  439f7c:	in     al,0x0
  439f7e:	in     al,0x0
  439f80:	sbb    al,0xff
  439f82:	sub    DWORD PTR [rax],eax
  439f84:	in     eax,0x0
  439f86:	in     eax,0x0
  439f88:	sbb    edi,edi
  439f8a:	sbb    edi,edi
  439f8c:	in     eax,0x0
  439f8e:	in     eax,0x0
  439f90:	in     eax,0x0
  439f92:	in     eax,0x0
  439f94:	in     eax,0x0
  439f96:	in     eax,0x0
  439f98:	in     eax,0x0
  439f9a:	in     eax,0x0
  439f9c:	in     eax,0x0
  439f9e:	in     eax,0x0
  439fa0:	in     eax,0x0
  439fa2:	in     eax,0x0
  439fa4:	in     eax,0x0
  439fa6:	in     eax,0x0
  439fa8:	in     eax,0x0
  439faa:	in     eax,0x0
  439fac:	in     eax,0x0
  439fae:	in     eax,0x0
  439fb0:	in     eax,0x0
  439fb2:	in     eax,0x0
  439fb4:	in     eax,0x0
  439fb6:	in     eax,0x0
  439fb8:	in     eax,0x0
  439fba:	in     eax,0x0
  439fbc:	in     eax,0x0
  439fbe:	in     eax,0x0
  439fc0:	in     eax,0x0
  439fc2:	in     eax,0x0
  439fc4:	in     eax,0x0
  439fc6:	in     eax,0x0
  439fc8:	in     eax,0x0
  439fca:	in     eax,0x0
  439fcc:	in     eax,0x0
  439fce:	in     eax,0x0
  439fd0:	in     eax,0x0
  439fd2:	in     eax,0x0
  439fd4:	in     eax,0x0
  439fd6:	in     eax,0x0
  439fd8:	in     eax,0x0
  439fda:	in     eax,0x0
  439fdc:	sub    DWORD PTR [rax],eax
  439fde:	sbb    bh,bh
  439fe0:	sbb    bh,bh
  439fe2:	sbb    bh,bh
  439fe4:	sbb    bh,bh
  439fe6:	sbb    bh,bh
  439fe8:	sbb    bh,bh
  439fea:	sbb    bh,bh
  439fec:	sbb    bh,bh
  439fee:	sbb    bh,bh
  439ff0:	sbb    bh,bh
  439ff2:	sbb    bh,bh
  439ff4:	sbb    bh,bh
  439ff6:	sbb    bh,bh
  439ff8:	sbb    bh,bh
  439ffa:	sbb    bh,bh
  439ffc:	sbb    bh,bh
  439ffe:	sbb    bh,bh
  43a000:	sbb    bh,bh
  43a002:	sbb    bh,bh
  43a004:	sbb    bh,bh
  43a006:	sbb    bh,bh
  43a008:	sbb    bh,bh
  43a00a:	sbb    bh,bh
  43a00c:	sbb    bh,bh
  43a00e:	sbb    bh,bh
  43a010:	add    al,BYTE PTR [rcx]
  43a012:	sbb    bh,bh
  43a014:	sbb    bh,bh
  43a016:	sbb    bh,bh
  43a018:	sbb    bh,bh
  43a01a:	sbb    bh,bh
  43a01c:	sbb    bh,bh
  43a01e:	sbb    bh,bh
  43a020:	sbb    bh,bh
  43a022:	sbb    bh,bh
  43a024:	sbb    bh,bh
  43a026:	sbb    bh,bh
  43a028:	sbb    bh,bh
  43a02a:	sbb    bh,bh
  43a02c:	sbb    bh,bh
  43a02e:	sbb    bh,bh
  43a030:	sbb    bh,bh
  43a032:	sbb    bh,bh
  43a034:	sbb    bh,bh
  43a036:	sub    DWORD PTR [rax],eax
  43a038:	sbb    edi,edi
  43a03a:	out    0x0,eax
  43a03c:	out    0x0,eax
  43a03e:	out    0x0,eax
  43a040:	sbb    edi,edi
  43a042:	sbb    edi,edi
  43a044:	sbb    edi,edi
  43a046:	sbb    edi,edi
  43a048:	sbb    edi,edi
  43a04a:	fld    QWORD PTR [rax]
  43a04c:	sbb    edi,edi
  43a04e:	sbb    edi,edi
  43a050:	sbb    edi,edi
  43a052:	sbb    edi,edi
  43a054:	sbb    edi,edi
  43a056:	call   0x1a42b95b
  43a05b:	call   FWORD PTR [rcx]
  43a05d:	call   FWORD PTR [rcx]
  43a05f:	call   FWORD PTR [rcx]
  43a061:	call   FWORD PTR [rcx]
  43a063:	call   FWORD PTR [rcx]
  43a065:	call   FWORD PTR [rcx]
  43a067:	call   FWORD PTR [rcx]
  43a069:	call   FWORD PTR [rcx]
  43a06b:	call   FWORD PTR [rcx]
  43a06d:	call   FWORD PTR [rcx]
  43a06f:	call   FWORD PTR [rcx]
  43a071:	call   FWORD PTR [rcx]
  43a073:	call   FWORD PTR [rcx]
  43a075:	call   FWORD PTR [rcx]
  43a077:	call   FWORD PTR [rcx]
  43a079:	call   FWORD PTR [rcx]
  43a07b:	call   FWORD PTR [rcx]
  43a07d:	call   FWORD PTR [rcx]
  43a07f:	call   FWORD PTR [rcx]
  43a081:	call   FWORD PTR [rcx]
  43a083:	call   FWORD PTR [rcx]
  43a085:	call   FWORD PTR [rcx]
  43a087:	call   FWORD PTR [rcx]
  43a089:	call   FWORD PTR [rcx]
  43a08b:	call   FWORD PTR [rcx]
  43a08d:	call   FWORD PTR [rcx]
  43a08f:	jmp    FWORD PTR [rcx]
  43a091:	add    BYTE PTR [rax],bl
  43a093:	call   FWORD PTR [rax]
  43a095:	call   FWORD PTR [rax]
  43a097:	call   FWORD PTR [rax]
  43a099:	call   FWORD PTR [rax]
  43a09b:	call   FWORD PTR [rax]
  43a09d:	call   FWORD PTR [rax]
  43a09f:	call   FWORD PTR [rax]
  43a0a1:	call   FWORD PTR [rax]
  43a0a3:	call   FWORD PTR [rax]
  43a0a5:	call   FWORD PTR [rax]
  43a0a7:	call   FWORD PTR [rax]
  43a0a9:	call   FWORD PTR [rax]
  43a0ab:	call   FWORD PTR [rax]
  43a0ad:	call   FWORD PTR [rax]
  43a0af:	inc    DWORD PTR [rbx]
  43a0b1:	add    DWORD PTR [rax],ebx
  43a0b3:	call   FWORD PTR [rax]
  43a0b5:	call   FWORD PTR [rax]
  43a0b7:	call   FWORD PTR [rax]
  43a0b9:	call   FWORD PTR [rax]
  43a0bb:	call   FWORD PTR [rax]
  43a0bd:	call   FWORD PTR [rax]
  43a0bf:	call   FWORD PTR [rax]
  43a0c1:	call   FWORD PTR [rax]
  43a0c3:	call   FWORD PTR [rax]
  43a0c5:	call   FWORD PTR [rax]
  43a0c7:	call   FWORD PTR [rax]
  43a0c9:	call   FWORD PTR [rax]
  43a0cb:	call   FWORD PTR [rax]
  43a0cd:	call   FWORD PTR [rax]
  43a0cf:	call   FWORD PTR [rax]
  43a0d1:	call   FWORD PTR [rax]
  43a0d3:	call   FWORD PTR [rax]
  43a0d5:	call   FWORD PTR [rax]
  43a0d7:	call   FWORD PTR [rax]
  43a0d9:	call   FWORD PTR [rax]
  43a0db:	call   FWORD PTR [rax]
  43a0dd:	call   FWORD PTR [rax]
  43a0df:	call   FWORD PTR [rax]
  43a0e1:	call   FWORD PTR [rax]
  43a0e3:	call   FWORD PTR [rax]
  43a0e5:	call   FWORD PTR [rax]
  43a0e7:	call   FWORD PTR [rax]
  43a0e9:	jmp    FWORD PTR [rcx]
  43a0eb:	add    BYTE PTR [rcx+rax*1],al
  43a0ee:	add    eax,0xb300b301
  43a0f3:	add    BYTE PTR [rcx+rax*1],al
  43a0f6:	add    al,0x1
  43a0f8:	add    al,0x1
  43a0fa:	add    al,0x1
  43a0fc:	add    al,0x1
  43a0fe:	add    al,0x1
  43a100:	add    al,0x1
  43a102:	add    al,0x1
  43a104:	add    al,0x1
  43a106:	add    al,0x1
  43a108:	add    al,0x1
  43a10a:	(bad)  
  43a10b:	add    DWORD PTR [rcx+rax*1],eax
  43a10e:	add    al,0x1
  43a110:	add    al,0x1
  43a112:	add    al,0x1
  43a114:	add    al,0x1
  43a116:	add    al,0x1
  43a118:	add    al,0x1
  43a11a:	add    al,0x1
  43a11c:	add    al,0x1
  43a11e:	add    al,0x1
  43a120:	add    al,0x1
  43a122:	add    al,0x1
  43a124:	add    al,0x1
  43a126:	add    al,0x1
  43a128:	add    al,0x1
  43a12a:	add    al,0x1
  43a12c:	add    al,0x1
  43a12e:	add    al,0x1
  43a130:	add    al,0x1
  43a132:	add    al,0x1
  43a134:	add    al,0x1
  43a136:	add    al,0x1
  43a138:	add    al,0x1
  43a13a:	add    al,0x1
  43a13c:	add    al,0x1
  43a13e:	add    al,0x1
  43a140:	add    al,0x1
  43a142:	add    al,0x1
  43a144:	sub    DWORD PTR [rax],eax
  43a146:	(bad)  
  43a147:	add    dl,ch
  43a149:	add    BYTE PTR [rsi],dl
  43a14b:	call   QWORD PTR [rsi]
  43a14d:	(bad)  
  43a14e:	(bad)  
  43a14f:	add    dl,ch
  43a151:	add    dl,ch
  43a153:	add    dl,ch
  43a155:	add    dl,ch
  43a157:	add    dl,ch
  43a159:	add    dl,ch
  43a15b:	add    dl,ch
  43a15d:	add    dl,ch
  43a15f:	add    dl,ch
  43a161:	add    dl,ch
  43a163:	add    dl,ch
  43a165:	add    dl,ch
  43a167:	add    dl,ch
  43a169:	add    dl,ch
  43a16b:	add    dl,ch
  43a16d:	add    dl,ch
  43a16f:	add    dl,ch
  43a171:	add    dl,ch
  43a173:	add    dl,ch
  43a175:	add    dl,ch
  43a177:	add    dl,ch
  43a179:	add    dl,ch
  43a17b:	add    dl,ch
  43a17d:	add    dl,ch
  43a17f:	add    dl,ch
  43a181:	add    dl,ch
  43a183:	add    dl,ch
  43a185:	add    dl,ch
  43a187:	add    dl,ch
  43a189:	add    dl,ch
  43a18b:	add    dl,ch
  43a18d:	add    dl,ch
  43a18f:	add    dl,ch
  43a191:	add    dl,ch
  43a193:	add    dl,ch
  43a195:	add    dl,ch
  43a197:	add    dl,ch
  43a199:	add    dl,ch
  43a19b:	add    dl,ch
  43a19d:	add    BYTE PTR [rcx],ch
  43a19f:	add    BYTE PTR [rip+0x15ff15ff],dl        # 0x1642b7a4
  43a1a5:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7aa
  43a1ab:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7b0
  43a1b1:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7b6
  43a1b7:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7bc
  43a1bd:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7c2
  43a1c3:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7c8
  43a1c9:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7ce
  43a1cf:	call   QWORD PTR [rip+0x150107ff]        # 0x1544a9d4
  43a1d5:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7da
  43a1db:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7e0
  43a1e1:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7e6
  43a1e7:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7ec
  43a1ed:	call   QWORD PTR [rip+0x15ff15ff]        # 0x1642b7f2
  43a1f3:	call   QWORD PTR [rip+0x29ff15ff]        # 0x2a42b7f8
  43a1f9:	add    BYTE PTR [rdi+rdi*8],dl
  43a1fc:	adc    al,0xff
  43a1fe:	adc    al,0xff
  43a200:	adc    al,0xff
  43a202:	adc    al,0xff
  43a204:	or     BYTE PTR [rcx],al
  43a206:	adc    al,0xff
  43a208:	adc    al,0xff
  43a20a:	adc    al,0xff
  43a20c:	adc    al,0xff
  43a20e:	adc    al,0xff
  43a210:	adc    al,0xff
  43a212:	adc    al,0xff
  43a214:	adc    al,0xff
  43a216:	adc    al,0xff
  43a218:	adc    al,0xff
  43a21a:	adc    al,0xff
  43a21c:	adc    al,0xff
  43a21e:	in     al,dx
  43a21f:	add    ah,ch
  43a221:	add    BYTE PTR [rdi+rdi*8],dl
  43a224:	adc    al,0xff
  43a226:	adc    al,0xff
  43a228:	in     al,dx
  43a229:	add    ah,ch
  43a22b:	add    ah,ch
  43a22d:	add    ah,ch
  43a22f:	add    ah,ch
  43a231:	add    ah,ch
  43a233:	add    ah,ch
  43a235:	add    ah,ch
  43a237:	add    ah,ch
  43a239:	add    ah,ch
  43a23b:	add    ah,ch
  43a23d:	add    BYTE PTR [rdi+rdi*8],dl
  43a240:	adc    al,0xff
  43a242:	in     al,dx
  43a243:	add    ah,ch
  43a245:	add    ah,ch
  43a247:	add    ah,ch
  43a249:	add    ah,ch
  43a24b:	add    ah,ch
  43a24d:	add    ah,ch
  43a24f:	add    BYTE PTR [rdi+rdi*8],dl
  43a252:	sub    DWORD PTR [rax],eax
  43a254:	adc    edi,edi
  43a256:	adc    edi,edi
  43a258:	adc    edi,edi
  43a25a:	adc    edi,edi
  43a25c:	adc    edi,edi
  43a25e:	adc    edi,edi
  43a260:	adc    edi,edi
  43a262:	adc    edi,edi
  43a264:	adc    edi,edi
  43a266:	or     DWORD PTR [rcx],eax
  43a268:	adc    edi,edi
  43a26a:	adc    edi,edi
  43a26c:	adc    edi,edi
  43a26e:	adc    edi,edi
  43a270:	adc    edi,edi
  43a272:	adc    edi,edi
  43a274:	adc    edi,edi
  43a276:	adc    edi,edi
  43a278:	in     eax,dx
  43a279:	add    ch,ch
  43a27b:	add    BYTE PTR [rbx],dl
  43a27d:	call   QWORD PTR [rbx]
  43a27f:	call   QWORD PTR [rbx]
  43a281:	(bad)  
  43a282:	in     eax,dx
  43a283:	add    ch,ch
  43a285:	add    ch,ch
  43a287:	add    ch,ch
  43a289:	add    ch,ch
  43a28b:	add    ch,ch
  43a28d:	add    ch,ch
  43a28f:	add    ch,ch
  43a291:	add    ch,ch
  43a293:	add    ch,ch
  43a295:	add    ch,ch
  43a297:	add    BYTE PTR [rbx],dl
  43a299:	call   QWORD PTR [rbx]
  43a29b:	(bad)  
  43a29c:	in     eax,dx
  43a29d:	add    ch,ch
  43a29f:	add    ch,ch
  43a2a1:	add    ch,ch
  43a2a3:	add    ch,ch
  43a2a5:	add    ch,ch
  43a2a7:	add    ch,ch
  43a2a9:	add    BYTE PTR [rbx],dl
  43a2ab:	jmp    FWORD PTR [rcx]
  43a2ad:	add    BYTE PTR [rdx],dl
  43a2af:	call   QWORD PTR [rdx]
  43a2b1:	call   QWORD PTR [rdx]
  43a2b3:	call   QWORD PTR [rdx]
  43a2b5:	call   QWORD PTR [rdx]
  43a2b7:	call   QWORD PTR [rdx]
  43a2b9:	call   QWORD PTR [rdx]
  43a2bb:	call   QWORD PTR [rdx]
  43a2bd:	call   QWORD PTR [rdx]
  43a2bf:	call   QWORD PTR [rdx]
  43a2c1:	call   QWORD PTR [rdx]
  43a2c3:	call   QWORD PTR [rdx]
  43a2c5:	call   QWORD PTR [rdx]
  43a2c7:	call   QWORD PTR [rdx]
  43a2c9:	call   QWORD PTR [rdx]
  43a2cb:	call   QWORD PTR [rdx]
  43a2cd:	call   QWORD PTR [rdx]
  43a2cf:	call   QWORD PTR [rdx]
  43a2d1:	dec    DWORD PTR [rdx]
  43a2d3:	add    DWORD PTR [rdx],edx
  43a2d5:	call   QWORD PTR [rdx]
  43a2d7:	call   QWORD PTR [rdx]
  43a2d9:	call   QWORD PTR [rdx]
  43a2db:	call   QWORD PTR [rdx]
  43a2dd:	call   QWORD PTR [rdx]
  43a2df:	call   QWORD PTR [rdx]
  43a2e1:	call   QWORD PTR [rdx]
  43a2e3:	call   QWORD PTR [rdx]
  43a2e5:	call   QWORD PTR [rdx]
  43a2e7:	call   QWORD PTR [rdx]
  43a2e9:	call   QWORD PTR [rdx]
  43a2eb:	call   QWORD PTR [rdx]
  43a2ed:	call   QWORD PTR [rdx]
  43a2ef:	call   QWORD PTR [rdx]
  43a2f1:	call   QWORD PTR [rdx]
  43a2f3:	call   QWORD PTR [rdx]
  43a2f5:	call   QWORD PTR [rdx]
  43a2f7:	call   QWORD PTR [rdx]
  43a2f9:	call   QWORD PTR [rdx]
  43a2fb:	call   QWORD PTR [rdx]
  43a2fd:	call   QWORD PTR [rdx]
  43a2ff:	call   QWORD PTR [rdx]
  43a301:	call   QWORD PTR [rdx]
  43a303:	call   QWORD PTR [rdx]
  43a305:	jmp    FWORD PTR [rcx]
  43a307:	add    BYTE PTR [rcx],dl
  43a309:	call   QWORD PTR [rcx]
  43a30b:	call   QWORD PTR [rcx]
  43a30d:	call   QWORD PTR [rcx]
  43a30f:	call   QWORD PTR [rcx]
  43a311:	call   QWORD PTR [rcx]
  43a313:	call   QWORD PTR [rcx]
  43a315:	call   QWORD PTR [rcx]
  43a317:	call   QWORD PTR [rcx]
  43a319:	call   QWORD PTR [rcx]
  43a31b:	call   QWORD PTR [rcx]
  43a31d:	call   QWORD PTR [rcx]
  43a31f:	call   QWORD PTR [rcx]
  43a321:	call   QWORD PTR [rcx]
  43a323:	call   QWORD PTR [rcx]
  43a325:	call   QWORD PTR [rcx]
  43a327:	call   QWORD PTR [rcx]
  43a329:	call   QWORD PTR [rcx]
  43a32b:	dec    DWORD PTR [rbx]
  43a32d:	add    DWORD PTR [rbx],ecx
  43a32f:	add    DWORD PTR [rcx],edx
  43a331:	call   QWORD PTR [rcx]
  43a333:	call   QWORD PTR [rcx]
  43a335:	dec    DWORD PTR [rbx]
  43a337:	add    DWORD PTR [rbx],ecx
  43a339:	add    DWORD PTR [rbx],ecx
  43a33b:	add    DWORD PTR [rbx],ecx
  43a33d:	add    DWORD PTR [rbx],ecx
  43a33f:	add    DWORD PTR [rcx],edx
  43a341:	call   QWORD PTR [rcx]
  43a343:	call   QWORD PTR [rcx]
  43a345:	call   QWORD PTR [rcx]
  43a347:	call   QWORD PTR [rcx]
  43a349:	call   QWORD PTR [rcx]
  43a34b:	call   QWORD PTR [rcx]
  43a34d:	call   QWORD PTR [rcx]
  43a34f:	dec    DWORD PTR [rbx]
  43a351:	add    DWORD PTR [rbx],ecx
  43a353:	add    DWORD PTR [rcx],edx
  43a355:	call   QWORD PTR [rcx]
  43a357:	call   QWORD PTR [rcx]
  43a359:	call   QWORD PTR [rcx]
  43a35b:	call   QWORD PTR [rcx]
  43a35d:	call   QWORD PTR [rcx]
  43a35f:	jmp    FWORD PTR [rcx]
  43a361:	add    BYTE PTR [rax],dl
  43a363:	call   QWORD PTR [rax]
  43a365:	call   QWORD PTR [rax]
  43a367:	call   QWORD PTR [rax]
  43a369:	call   QWORD PTR [rax]
  43a36b:	call   QWORD PTR [rax]
  43a36d:	call   QWORD PTR [rax]
  43a36f:	call   QWORD PTR [rax]
  43a371:	call   QWORD PTR [rax]
  43a373:	call   QWORD PTR [rax]
  43a375:	call   QWORD PTR [rax]
  43a377:	call   QWORD PTR [rax]
  43a379:	call   QWORD PTR [rax]
  43a37b:	call   QWORD PTR [rax]
  43a37d:	call   QWORD PTR [rax]
  43a37f:	call   QWORD PTR [rax]
  43a381:	call   QWORD PTR [rax]
  43a383:	call   QWORD PTR [rax]
  43a385:	call   QWORD PTR [rax]
  43a387:	call   QWORD PTR [rax]
  43a389:	call   QWORD PTR [rax]
  43a38b:	call   QWORD PTR [rax]
  43a38d:	call   QWORD PTR [rax]
  43a38f:	call   QWORD PTR [rax]
  43a391:	call   QWORD PTR [rax]
  43a393:	call   QWORD PTR [rax]
  43a395:	call   QWORD PTR [rax]
  43a397:	call   QWORD PTR [rax]
  43a399:	call   QWORD PTR [rax]
  43a39b:	call   QWORD PTR [rax]
  43a39d:	call   QWORD PTR [rax]
  43a39f:	call   QWORD PTR [rax]
  43a3a1:	call   QWORD PTR [rax]
  43a3a3:	call   QWORD PTR [rax]
  43a3a5:	call   QWORD PTR [rax]
  43a3a7:	call   QWORD PTR [rax]
  43a3a9:	call   QWORD PTR [rax]
  43a3ab:	call   QWORD PTR [rax]
  43a3ad:	call   QWORD PTR [rax]
  43a3af:	call   QWORD PTR [rax]
  43a3b1:	call   QWORD PTR [rax]
  43a3b3:	call   QWORD PTR [rax]
  43a3b5:	call   QWORD PTR [rax]
  43a3b7:	call   QWORD PTR [rax]
  43a3b9:	jmp    FWORD PTR [rcx]
  43a3bb:	add    BYTE PTR [rdi],cl
  43a3bd:	dec    DWORD PTR [rdi]
  43a3bf:	dec    DWORD PTR [rdi]
  43a3c1:	dec    DWORD PTR [rdi]
  43a3c3:	dec    DWORD PTR [rdi]
  43a3c5:	dec    DWORD PTR [rdi]
  43a3c7:	dec    DWORD PTR [rdi]
  43a3c9:	dec    DWORD PTR [rdi]
  43a3cb:	dec    DWORD PTR [rdi]
  43a3cd:	dec    DWORD PTR [rdi]
  43a3cf:	dec    DWORD PTR [rdi]
  43a3d1:	dec    DWORD PTR [rdi]
  43a3d3:	dec    DWORD PTR [rdi]
  43a3d5:	dec    DWORD PTR [rdi]
  43a3d7:	dec    DWORD PTR [rdi]
  43a3d9:	dec    DWORD PTR [rdi]
  43a3db:	dec    DWORD PTR [rdi]
  43a3dd:	dec    DWORD PTR [rdi]
  43a3df:	dec    DWORD PTR [rdi]
  43a3e1:	dec    DWORD PTR [rdi]
  43a3e3:	dec    DWORD PTR [rdi]
  43a3e5:	dec    DWORD PTR [rdi]
  43a3e7:	dec    DWORD PTR [rdi]
  43a3e9:	dec    DWORD PTR [rdi]
  43a3eb:	dec    DWORD PTR [rdi]
  43a3ed:	dec    DWORD PTR [rdi]
  43a3ef:	dec    DWORD PTR [rdi]
  43a3f1:	dec    DWORD PTR [rdi]
  43a3f3:	dec    DWORD PTR [rdi]
  43a3f5:	dec    DWORD PTR [rdi]
  43a3f7:	dec    DWORD PTR [rdi]
  43a3f9:	dec    DWORD PTR [rdi]
  43a3fb:	dec    DWORD PTR [rdi]
  43a3fd:	dec    DWORD PTR [rdi]
  43a3ff:	dec    DWORD PTR [rdi]
  43a401:	dec    DWORD PTR [rdi]
  43a403:	dec    DWORD PTR [rdi]
  43a405:	dec    DWORD PTR [rdi]
  43a407:	dec    DWORD PTR [rdi]
  43a409:	dec    DWORD PTR [rdi]
  43a40b:	dec    DWORD PTR [rdi]
  43a40d:	dec    DWORD PTR [rdi]
  43a40f:	dec    DWORD PTR [rdi]
  43a411:	dec    DWORD PTR [rdi]
  43a413:	jmp    FWORD PTR [rcx]
  43a415:	add    BYTE PTR [rcx+rax*1],cl
  43a418:	or     eax,0xe010e01
  43a41d:	add    DWORD PTR [rcx+rax*1],ecx
  43a420:	or     al,0x1
  43a422:	or     al,0x1
  43a424:	or     al,0x1
  43a426:	or     al,0x1
  43a428:	or     al,0x1
  43a42a:	or     al,0x1
  43a42c:	or     al,0x1
  43a42e:	or     al,0x1
  43a430:	or     al,0x1
  43a432:	or     al,0x1
  43a434:	sidt   [rcx+rax*1]
  43a438:	or     al,0x1
  43a43a:	or     al,0x1
  43a43c:	or     al,0x1
  43a43e:	or     al,0x1
  43a440:	or     al,0x1
  43a442:	or     al,0x1
  43a444:	or     al,0x1
  43a446:	or     al,0x1
  43a448:	or     al,0x1
  43a44a:	or     al,0x1
  43a44c:	or     al,0x1
  43a44e:	or     al,0x1
  43a450:	or     al,0x1
  43a452:	or     al,0x1
  43a454:	or     al,0x1
  43a456:	or     al,0x1
  43a458:	or     al,0x1
  43a45a:	or     al,0x1
  43a45c:	or     al,0x1
  43a45e:	or     al,0x1
  43a460:	or     al,0x1
  43a462:	or     al,0x1
  43a464:	or     al,0x1
  43a466:	or     al,0x1
  43a468:	or     al,0x1
  43a46a:	or     al,0x1
  43a46c:	or     al,0x1
  43a46e:	sub    DWORD PTR [rax],eax
  43a470:	repz add ah,dh
  43a473:	add    BYTE PTR [rbp-0xcff6b00],dl
  43a479:	add    bl,dh
  43a47b:	add    bl,dh
  43a47d:	add    bl,dh
  43a47f:	add    bl,dh
  43a481:	add    bl,dh
  43a483:	add    bl,dh
  43a485:	add    bl,dh
  43a487:	add    bl,dh
  43a489:	add    bl,dh
  43a48b:	add    bl,dh
  43a48d:	add    ch,dh
  43a48f:	add    bl,dh
  43a491:	add    bl,dh
  43a493:	add    bl,dh
  43a495:	add    bl,dh
  43a497:	add    bl,dh
  43a499:	add    bl,dh
  43a49b:	add    bl,dh
  43a49d:	add    bl,dh
  43a49f:	add    bl,dh
  43a4a1:	add    bl,dh
  43a4a3:	add    bl,dh
  43a4a5:	add    bl,dh
  43a4a7:	add    bl,dh
  43a4a9:	add    bl,dh
  43a4ab:	add    bl,dh
  43a4ad:	add    bl,dh
  43a4af:	add    bl,dh
  43a4b1:	add    bl,dh
  43a4b3:	add    bl,dh
  43a4b5:	add    bl,dh
  43a4b7:	add    bl,dh
  43a4b9:	add    bl,dh
  43a4bb:	add    bl,dh
  43a4bd:	add    bl,dh
  43a4bf:	add    bl,dh
  43a4c1:	add    bl,dh
  43a4c3:	add    bl,dh
  43a4c5:	add    bl,dh
  43a4c7:	add    BYTE PTR [rcx],ch
  43a4c9:	add    bl,dh
  43a4cb:	add    ah,dh
  43a4cd:	add    BYTE PTR [rbp-0xcff6b00],dl
  43a4d3:	add    bl,dh
  43a4d5:	add    bl,dh
  43a4d7:	add    bl,dh
  43a4d9:	add    bl,dh
  43a4db:	add    bl,dh
  43a4dd:	add    bl,dh
  43a4df:	add    bl,dh
  43a4e1:	add    bl,dh
  43a4e3:	add    bl,dh
  43a4e5:	add    bl,dh
  43a4e7:	add    ch,dh
  43a4e9:	add    bl,dh
  43a4eb:	add    bl,dh
  43a4ed:	add    bl,dh
  43a4ef:	add    bl,dh
  43a4f1:	add    bl,dh
  43a4f3:	add    bl,dh
  43a4f5:	add    bl,dh
  43a4f7:	add    bl,dh
  43a4f9:	add    bl,dh
  43a4fb:	add    bl,dh
  43a4fd:	add    bl,dh
  43a4ff:	add    bl,dh
  43a501:	add    bl,dh
  43a503:	add    bl,dh
  43a505:	add    bl,dh
  43a507:	add    bl,dh
  43a509:	add    bl,dh
  43a50b:	add    bl,dh
  43a50d:	add    bl,dh
  43a50f:	add    bl,dh
  43a511:	add    bl,dh
  43a513:	add    bl,dh
  43a515:	add    bl,dh
  43a517:	add    bl,dh
  43a519:	add    bl,dh
  43a51b:	add    bl,dh
  43a51d:	add    bl,dh
  43a51f:	add    bl,dh
  43a521:	add    BYTE PTR [rcx],ch
  43a523:	add    bl,dh
  43a525:	add    ah,dh
  43a527:	add    BYTE PTR [rbp-0xcff6b00],dl
  43a52d:	add    bl,dh
  43a52f:	add    bl,dh
  43a531:	add    bl,dh
  43a533:	add    bl,dh
  43a535:	add    bl,dh
  43a537:	add    bl,dh
  43a539:	add    bl,dh
  43a53b:	add    bl,dh
  43a53d:	add    bl,dh
  43a53f:	add    bl,dh
  43a541:	add    BYTE PTR [rax],dl
  43a543:	add    ebx,esi
  43a545:	add    bl,dh
  43a547:	add    bl,dh
  43a549:	add    bl,dh
  43a54b:	add    bl,dh
  43a54d:	add    bl,dh
  43a54f:	add    bl,dh
  43a551:	add    bl,dh
  43a553:	add    bl,dh
  43a555:	add    bl,dh
  43a557:	add    bl,dh
  43a559:	add    bl,dh
  43a55b:	add    bl,dh
  43a55d:	add    bl,dh
  43a55f:	add    bl,dh
  43a561:	add    bl,dh
  43a563:	add    bl,dh
  43a565:	add    bl,dh
  43a567:	add    bl,dh
  43a569:	add    bl,dh
  43a56b:	add    bl,dh
  43a56d:	add    bl,dh
  43a56f:	add    bl,dh
  43a571:	add    bl,dh
  43a573:	add    bl,dh
  43a575:	add    bl,dh
  43a577:	add    bl,dh
  43a579:	add    bl,dh
  43a57b:	add    BYTE PTR [rcx],ch
  43a57d:	add    BYTE PTR [rcx],dl
  43a57f:	add    DWORD PTR [rdx],edx
  43a581:	add    DWORD PTR [rbx],edx
  43a583:	add    DWORD PTR [rbx],edx
  43a585:	add    DWORD PTR [rcx],edx
  43a587:	add    DWORD PTR [rcx],edx
  43a589:	add    DWORD PTR [rcx],edx
  43a58b:	add    DWORD PTR [rcx],edx
  43a58d:	add    DWORD PTR [rcx],edx
  43a58f:	add    DWORD PTR [rcx],edx
  43a591:	add    DWORD PTR [rcx],edx
  43a593:	add    DWORD PTR [rcx],edx
  43a595:	add    DWORD PTR [rcx],edx
  43a597:	add    DWORD PTR [rcx],edx
  43a599:	add    DWORD PTR [rcx],edx
  43a59b:	add    DWORD PTR [rcx+rax*1],edx
  43a59e:	adc    DWORD PTR [rcx],eax
  43a5a0:	adc    DWORD PTR [rcx],eax
  43a5a2:	adc    DWORD PTR [rcx],eax
  43a5a4:	adc    DWORD PTR [rcx],eax
  43a5a6:	adc    DWORD PTR [rcx],eax
  43a5a8:	adc    DWORD PTR [rcx],eax
  43a5aa:	adc    DWORD PTR [rcx],eax
  43a5ac:	adc    DWORD PTR [rcx],eax
  43a5ae:	adc    DWORD PTR [rcx],eax
  43a5b0:	adc    DWORD PTR [rcx],eax
  43a5b2:	adc    DWORD PTR [rcx],eax
  43a5b4:	adc    DWORD PTR [rcx],eax
  43a5b6:	adc    DWORD PTR [rcx],eax
  43a5b8:	adc    DWORD PTR [rcx],eax
  43a5ba:	adc    DWORD PTR [rcx],eax
  43a5bc:	adc    DWORD PTR [rcx],eax
  43a5be:	adc    DWORD PTR [rcx],eax
  43a5c0:	adc    DWORD PTR [rcx],eax
  43a5c2:	adc    DWORD PTR [rcx],eax
  43a5c4:	adc    DWORD PTR [rcx],eax
  43a5c6:	adc    DWORD PTR [rcx],eax
  43a5c8:	adc    DWORD PTR [rcx],eax
  43a5ca:	adc    DWORD PTR [rcx],eax
  43a5cc:	adc    DWORD PTR [rcx],eax
  43a5ce:	adc    DWORD PTR [rcx],eax
  43a5d0:	adc    DWORD PTR [rcx],eax
  43a5d2:	adc    DWORD PTR [rcx],eax
  43a5d4:	adc    DWORD PTR [rcx],eax
  43a5d6:	sub    DWORD PTR [rax],eax
  43a5d8:	test   DWORD PTR [rax],0x9f00f8
  43a5de:	lahf   
  43a5df:	add    bh,dh
  43a5e1:	add    bh,dh
  43a5e3:	add    bh,dh
  43a5e5:	add    bh,dh
  43a5e7:	add    bh,dh
  43a5e9:	add    bh,dh
  43a5eb:	add    bh,dh
  43a5ed:	add    bh,dh
  43a5ef:	add    bh,dh
  43a5f1:	add    bh,dh
  43a5f3:	add    bh,dh
  43a5f5:	add    cl,bh
  43a5f7:	add    bh,dh
  43a5f9:	add    bh,dh
  43a5fb:	add    bh,dh
  43a5fd:	add    bh,dh
  43a5ff:	add    bh,dh
  43a601:	add    bh,dh
  43a603:	add    bh,dh
  43a605:	add    bh,dh
  43a607:	add    bh,dh
  43a609:	add    bh,dh
  43a60b:	add    bh,dh
  43a60d:	add    bh,dh
  43a60f:	add    bh,dh
  43a611:	add    bh,dh
  43a613:	add    bh,dh
  43a615:	add    bh,dh
  43a617:	add    bh,dh
  43a619:	add    bh,dh
  43a61b:	add    bh,dh
  43a61d:	add    bh,dh
  43a61f:	add    bh,dh
  43a621:	add    bh,dh
  43a623:	add    bh,dh
  43a625:	add    bh,dh
  43a627:	add    bh,dh
  43a629:	add    bh,dh
  43a62b:	add    bh,dh
  43a62d:	add    bh,dh
  43a62f:	add    BYTE PTR [rcx],ch
  43a631:	add    bh,dh
  43a633:	add    al,bh
  43a635:	add    BYTE PTR [rdi-0x8ff6100],bl
  43a63b:	add    bh,dh
  43a63d:	add    bh,dh
  43a63f:	add    bh,dh
  43a641:	add    bh,dh
  43a643:	add    bh,dh
  43a645:	add    bh,dh
  43a647:	add    bh,dh
  43a649:	add    bh,dh
  43a64b:	add    bh,dh
  43a64d:	add    bh,dh
  43a64f:	add    cl,bh
  43a651:	add    bh,dh
  43a653:	add    bh,dh
  43a655:	add    bh,dh
  43a657:	add    bh,dh
  43a659:	add    bh,dh
  43a65b:	add    bh,dh
  43a65d:	add    bh,dh
  43a65f:	add    bh,dh
  43a661:	add    bh,dh
  43a663:	add    bh,dh
  43a665:	add    bh,dh
  43a667:	add    bh,dh
  43a669:	add    bh,dh
  43a66b:	add    bh,dh
  43a66d:	add    bh,dh
  43a66f:	add    bh,dh
  43a671:	add    bh,dh
  43a673:	add    bh,dh
  43a675:	add    bh,dh
  43a677:	add    bh,dh
  43a679:	add    bh,dh
  43a67b:	add    bh,dh
  43a67d:	add    bh,dh
  43a67f:	add    bh,dh
  43a681:	add    bh,dh
  43a683:	add    bh,dh
  43a685:	add    bh,dh
  43a687:	add    bh,dh
  43a689:	add    BYTE PTR [rcx],ch
  43a68b:	add    bh,dh
  43a68d:	add    al,bh
  43a68f:	add    BYTE PTR [rdi-0x8ff6100],bl
  43a695:	add    bh,dh
  43a697:	add    bh,dh
  43a699:	add    bh,dh
  43a69b:	add    bh,dh
  43a69d:	add    bh,dh
  43a69f:	add    bh,dh
  43a6a1:	add    bh,dh
  43a6a3:	add    bh,dh
  43a6a5:	add    bh,dh
  43a6a7:	add    bh,dh
  43a6a9:	add    BYTE PTR [rip+0xfffffffff700f701],dl        # 0xfffffffff7449db0
  43a6af:	add    bh,dh
  43a6b1:	add    bh,dh
  43a6b3:	add    bh,dh
  43a6b5:	add    bh,dh
  43a6b7:	add    bh,dh
  43a6b9:	add    bh,dh
  43a6bb:	add    bh,dh
  43a6bd:	add    bh,dh
  43a6bf:	add    bh,dh
  43a6c1:	add    bh,dh
  43a6c3:	add    bh,dh
  43a6c5:	add    bh,dh
  43a6c7:	add    bh,dh
  43a6c9:	add    bh,dh
  43a6cb:	add    bh,dh
  43a6cd:	add    bh,dh
  43a6cf:	add    bh,dh
  43a6d1:	add    bh,dh
  43a6d3:	add    bh,dh
  43a6d5:	add    bh,dh
  43a6d7:	add    bh,dh
  43a6d9:	add    bh,dh
  43a6db:	add    bh,dh
  43a6dd:	add    bh,dh
  43a6df:	add    bh,dh
  43a6e1:	add    bh,dh
  43a6e3:	add    BYTE PTR [rcx],ch
  43a6e5:	add    BYTE PTR [rsi],dl
  43a6e7:	add    DWORD PTR [rdi],edx
  43a6e9:	add    DWORD PTR [rax],ebx
  43a6eb:	add    DWORD PTR [rax],ebx
  43a6ed:	add    DWORD PTR [rsi],edx
  43a6ef:	add    DWORD PTR [rsi],edx
  43a6f1:	add    DWORD PTR [rsi],edx
  43a6f3:	add    DWORD PTR [rsi],edx
  43a6f5:	add    DWORD PTR [rsi],edx
  43a6f7:	add    DWORD PTR [rsi],edx
  43a6f9:	add    DWORD PTR [rsi],edx
  43a6fb:	add    DWORD PTR [rsi],edx
  43a6fd:	add    DWORD PTR [rsi],edx
  43a6ff:	add    DWORD PTR [rsi],edx
  43a701:	add    DWORD PTR [rsi],edx
  43a703:	add    DWORD PTR [rcx],ebx
  43a705:	add    DWORD PTR [rsi],edx
  43a707:	add    DWORD PTR [rsi],edx
  43a709:	add    DWORD PTR [rsi],edx
  43a70b:	add    DWORD PTR [rsi],edx
  43a70d:	add    DWORD PTR [rsi],edx
  43a70f:	add    DWORD PTR [rsi],edx
  43a711:	add    DWORD PTR [rsi],edx
  43a713:	add    DWORD PTR [rsi],edx
  43a715:	add    DWORD PTR [rsi],edx
  43a717:	add    DWORD PTR [rsi],edx
  43a719:	add    DWORD PTR [rsi],edx
  43a71b:	add    DWORD PTR [rsi],edx
  43a71d:	add    DWORD PTR [rsi],edx
  43a71f:	add    DWORD PTR [rsi],edx
  43a721:	add    DWORD PTR [rsi],edx
  43a723:	add    DWORD PTR [rsi],edx
  43a725:	add    DWORD PTR [rsi],edx
  43a727:	add    DWORD PTR [rsi],edx
  43a729:	add    DWORD PTR [rsi],edx
  43a72b:	add    DWORD PTR [rsi],edx
  43a72d:	add    DWORD PTR [rsi],edx
  43a72f:	add    DWORD PTR [rsi],edx
  43a731:	add    DWORD PTR [rsi],edx
  43a733:	add    DWORD PTR [rsi],edx
  43a735:	add    DWORD PTR [rsi],edx
  43a737:	add    DWORD PTR [rsi],edx
  43a739:	add    DWORD PTR [rsi],edx
  43a73b:	add    DWORD PTR [rsi],edx
  43a73d:	add    DWORD PTR [rcx],ebp
  43a73f:	add    bl,bh
  43a741:	add    ah,bh
  43a743:	add    BYTE PTR [rbx-0x4ff5d00],ah
  43a749:	add    bl,bh
  43a74b:	add    bl,bh
  43a74d:	add    bl,bh
  43a74f:	add    bl,bh
  43a751:	add    bl,bh
  43a753:	add    bl,bh
  43a755:	add    bl,bh
  43a757:	add    bl,bh
  43a759:	add    bl,bh
  43a75b:	add    bl,bh
  43a75d:	add    ch,bh
  43a75f:	add    bl,bh
  43a761:	add    bl,bh
  43a763:	add    bl,bh
  43a765:	add    bl,bh
  43a767:	add    bl,bh
  43a769:	add    bl,bh
  43a76b:	add    bl,bh
  43a76d:	add    bl,bh
  43a76f:	add    bl,bh
  43a771:	add    bl,bh
  43a773:	add    bl,bh
  43a775:	add    bl,bh
  43a777:	add    bl,bh
  43a779:	add    bl,bh
  43a77b:	add    bl,bh
  43a77d:	add    bl,bh
  43a77f:	add    bl,bh
  43a781:	add    bl,bh
  43a783:	add    bl,bh
  43a785:	add    bl,bh
  43a787:	add    bl,bh
  43a789:	add    bl,bh
  43a78b:	add    bl,bh
  43a78d:	add    bl,bh
  43a78f:	add    bl,bh
  43a791:	add    bl,bh
  43a793:	add    bl,bh
  43a795:	add    bl,bh
  43a797:	add    BYTE PTR [rcx],ch
  43a799:	add    bl,bh
  43a79b:	add    ah,bh
  43a79d:	add    BYTE PTR [rbx-0x4ff5d00],ah
  43a7a3:	add    bl,bh
  43a7a5:	add    bl,bh
  43a7a7:	add    bl,bh
  43a7a9:	add    bl,bh
  43a7ab:	add    bl,bh
  43a7ad:	add    bl,bh
  43a7af:	add    bl,bh
  43a7b1:	add    bl,bh
  43a7b3:	add    bl,bh
  43a7b5:	add    bl,bh
  43a7b7:	add    ch,bh
  43a7b9:	add    bl,bh
  43a7bb:	add    bl,bh
  43a7bd:	add    bl,bh
  43a7bf:	add    bl,bh
  43a7c1:	add    bl,bh
  43a7c3:	add    bl,bh
  43a7c5:	add    bl,bh
  43a7c7:	add    bl,bh
  43a7c9:	add    bl,bh
  43a7cb:	add    bl,bh
  43a7cd:	add    bl,bh
  43a7cf:	add    bl,bh
  43a7d1:	add    bl,bh
  43a7d3:	add    bl,bh
  43a7d5:	add    bl,bh
  43a7d7:	add    bl,bh
  43a7d9:	add    bl,bh
  43a7db:	add    bl,bh
  43a7dd:	add    bl,bh
  43a7df:	add    bl,bh
  43a7e1:	add    bl,bh
  43a7e3:	add    bl,bh
  43a7e5:	add    bl,bh
  43a7e7:	add    bl,bh
  43a7e9:	add    bl,bh
  43a7eb:	add    bl,bh
  43a7ed:	add    bl,bh
  43a7ef:	add    bl,bh
  43a7f1:	add    BYTE PTR [rcx],ch
  43a7f3:	add    bl,bh
  43a7f5:	add    ah,bh
  43a7f7:	add    BYTE PTR [rbx-0x4ff5d00],ah
  43a7fd:	add    bl,bh
  43a7ff:	add    bl,bh
  43a801:	add    bl,bh
  43a803:	add    bl,bh
  43a805:	add    bl,bh
  43a807:	add    bl,bh
  43a809:	add    bl,bh
  43a80b:	add    bl,bh
  43a80d:	add    bl,bh
  43a80f:	add    bl,bh
  43a811:	add    BYTE PTR [rdx],bl
  43a813:	add    ebx,edi
  43a815:	add    bl,bh
  43a817:	add    bl,bh
  43a819:	add    bl,bh
  43a81b:	add    bl,bh
  43a81d:	add    bl,bh
  43a81f:	add    bl,bh
  43a821:	add    bl,bh
  43a823:	add    bl,bh
  43a825:	add    bl,bh
  43a827:	add    bl,bh
  43a829:	add    bl,bh
  43a82b:	add    bl,bh
  43a82d:	add    bl,bh
  43a82f:	add    bl,bh
  43a831:	add    bl,bh
  43a833:	add    bl,bh
  43a835:	add    bl,bh
  43a837:	add    bl,bh
  43a839:	add    bl,bh
  43a83b:	add    bl,bh
  43a83d:	add    bl,bh
  43a83f:	add    bl,bh
  43a841:	add    bl,bh
  43a843:	add    bl,bh
  43a845:	add    bl,bh
  43a847:	add    bl,bh
  43a849:	add    bl,bh
  43a84b:	add    BYTE PTR [rcx],ch
  43a84d:	add    BYTE PTR [rdx],al
  43a84f:	inc    DWORD PTR [rdx]
  43a851:	inc    DWORD PTR [rdx]
  43a853:	inc    DWORD PTR [rdx]
  43a855:	inc    DWORD PTR [rdx]
  43a857:	inc    DWORD PTR [rdx]
  43a859:	inc    DWORD PTR [rdx]
  43a85b:	inc    DWORD PTR [rdx]
  43a85d:	inc    DWORD PTR [rdx]
  43a85f:	inc    DWORD PTR [rdx]
  43a861:	inc    DWORD PTR [rdx]
  43a863:	inc    DWORD PTR [rdx]
  43a865:	inc    DWORD PTR [rdx]
  43a867:	inc    DWORD PTR [rdx]
  43a869:	inc    DWORD PTR [rdx]
  43a86b:	inc    DWORD PTR [rdx]
  43a86d:	inc    DWORD PTR [rdx]
  43a86f:	inc    DWORD PTR [rdx]
  43a871:	inc    DWORD PTR [rdx]
  43a873:	inc    DWORD PTR [rdx]
  43a875:	inc    DWORD PTR [rdx]
  43a877:	inc    DWORD PTR [rdx]
  43a879:	inc    DWORD PTR [rdx]
  43a87b:	inc    DWORD PTR [rdx]
  43a87d:	inc    DWORD PTR [rdx]
  43a87f:	inc    DWORD PTR [rdx]
  43a881:	inc    DWORD PTR [rdx]
  43a883:	inc    DWORD PTR [rdx]
  43a885:	inc    DWORD PTR [rdx]
  43a887:	inc    DWORD PTR [rdx]
  43a889:	inc    DWORD PTR [rdx]
  43a88b:	inc    DWORD PTR [rdx]
  43a88d:	inc    DWORD PTR [rdx]
  43a88f:	inc    DWORD PTR [rdx]
  43a891:	inc    DWORD PTR [rdx]
  43a893:	inc    DWORD PTR [rdx]
  43a895:	inc    DWORD PTR [rdx]
  43a897:	inc    DWORD PTR [rdx]
  43a899:	inc    DWORD PTR [rdx]
  43a89b:	inc    DWORD PTR [rdx]
  43a89d:	inc    DWORD PTR [rdx]
  43a89f:	inc    DWORD PTR [rdx]
  43a8a1:	inc    DWORD PTR [rdx]
  43a8a3:	inc    DWORD PTR [rdx]
  43a8a5:	jmp    FWORD PTR [rcx]
  43a8a7:	add    BYTE PTR [rcx],al
  43a8a9:	inc    DWORD PTR [rcx]
  43a8ab:	inc    DWORD PTR [rcx]
  43a8ad:	inc    DWORD PTR [rcx]
  43a8af:	inc    DWORD PTR [rcx]
  43a8b1:	inc    DWORD PTR [rcx]
  43a8b3:	inc    DWORD PTR [rcx]
  43a8b5:	inc    DWORD PTR [rcx]
  43a8b7:	inc    DWORD PTR [rcx]
  43a8b9:	inc    DWORD PTR [rcx]
  43a8bb:	inc    DWORD PTR [rcx]
  43a8bd:	inc    DWORD PTR [rcx]
  43a8bf:	inc    DWORD PTR [rcx]
  43a8c1:	inc    DWORD PTR [rcx]
  43a8c3:	inc    DWORD PTR [rcx]
  43a8c5:	inc    DWORD PTR [rcx]
  43a8c7:	inc    DWORD PTR [rcx]
  43a8c9:	inc    DWORD PTR [rcx]
  43a8cb:	call   FWORD PTR [rbx]
  43a8cd:	add    DWORD PTR [rbx],ebx
  43a8cf:	add    DWORD PTR [rcx],eax
  43a8d1:	inc    DWORD PTR [rcx]
  43a8d3:	inc    DWORD PTR [rcx]
  43a8d5:	call   FWORD PTR [rbx]
  43a8d7:	add    DWORD PTR [rbx],ebx
  43a8d9:	add    DWORD PTR [rbx],ebx
  43a8db:	add    DWORD PTR [rbx],ebx
  43a8dd:	add    DWORD PTR [rbx],ebx
  43a8df:	add    DWORD PTR [rcx],eax
  43a8e1:	inc    DWORD PTR [rcx]
  43a8e3:	inc    DWORD PTR [rcx]
  43a8e5:	inc    DWORD PTR [rcx]
  43a8e7:	inc    DWORD PTR [rcx]
  43a8e9:	inc    DWORD PTR [rcx]
  43a8eb:	inc    DWORD PTR [rcx]
  43a8ed:	inc    DWORD PTR [rcx]
  43a8ef:	call   FWORD PTR [rbx]
  43a8f1:	add    DWORD PTR [rbx],ebx
  43a8f3:	add    DWORD PTR [rcx],eax
  43a8f5:	inc    DWORD PTR [rcx]
  43a8f7:	inc    DWORD PTR [rcx]
  43a8f9:	inc    DWORD PTR [rcx]
  43a8fb:	inc    DWORD PTR [rcx]
  43a8fd:	inc    DWORD PTR [rcx]
  43a8ff:	jmp    FWORD PTR [rcx]
  43a901:	add    BYTE PTR [rax],al
  43a903:	inc    DWORD PTR [rax]
  43a905:	inc    DWORD PTR [rax]
  43a907:	inc    DWORD PTR [rax]
  43a909:	inc    DWORD PTR [rax]
  43a90b:	inc    DWORD PTR [rax]
  43a90d:	inc    DWORD PTR [rax]
  43a90f:	inc    DWORD PTR [rax]
  43a911:	inc    DWORD PTR [rax]
  43a913:	inc    DWORD PTR [rax]
  43a915:	inc    DWORD PTR [rax]
  43a917:	inc    DWORD PTR [rax]
  43a919:	inc    DWORD PTR [rax]
  43a91b:	inc    DWORD PTR [rax]
  43a91d:	inc    DWORD PTR [rax]
  43a91f:	inc    DWORD PTR [rax]
  43a921:	inc    DWORD PTR [rax]
  43a923:	inc    DWORD PTR [rax]
  43a925:	call   FWORD PTR [rcx+rax*1]
  43a928:	sbb    al,0x1
  43a92a:	add    bh,bh
  43a92c:	add    bh,bh
  43a92e:	add    bh,bh
  43a930:	sbb    al,0x1
  43a932:	sbb    al,0x1
  43a934:	sbb    al,0x1
  43a936:	sbb    al,0x1
  43a938:	sbb    al,0x1
  43a93a:	add    bh,bh
  43a93c:	add    bh,bh
  43a93e:	add    bh,bh
  43a940:	add    bh,bh
  43a942:	add    bh,bh
  43a944:	add    bh,bh
  43a946:	add    bh,bh
  43a948:	add    bh,bh
  43a94a:	sbb    al,0x1
  43a94c:	sbb    al,0x1
  43a94e:	add    bh,bh
  43a950:	add    bh,bh
  43a952:	add    bh,bh
  43a954:	add    bh,bh
  43a956:	add    bh,bh
  43a958:	add    bh,bh
  43a95a:	sub    DWORD PTR [rax],eax
  43a95c:	(bad)  
  43a95d:	(bad)  
  43a95e:	(bad)  
  43a95f:	(bad)  
  43a960:	(bad)  
  43a961:	(bad)  
  43a962:	(bad)  
  43a963:	(bad)  
  43a964:	(bad)  
  43a965:	(bad)  
  43a966:	(bad)  
  43a967:	(bad)  
  43a968:	(bad)  
  43a969:	(bad)  
  43a96a:	(bad)  
  43a96b:	(bad)  
  43a96c:	(bad)  
  43a96d:	(bad)  
  43a96e:	(bad)  
  43a96f:	(bad)  
  43a970:	(bad)  
  43a971:	(bad)  
  43a972:	(bad)  
  43a973:	(bad)  
  43a974:	(bad)  
  43a975:	(bad)  
  43a976:	(bad)  
  43a977:	(bad)  
  43a978:	(bad)  
  43a979:	(bad)  
  43a97a:	(bad)  
  43a97b:	(bad)  
  43a97c:	(bad)  
  43a97d:	(bad)  
  43a97e:	(bad)  
  43a97f:	(bad)  
  43a980:	(bad)  
  43a981:	(bad)  
  43a982:	(bad)  
  43a983:	(bad)  
  43a984:	(bad)  
  43a985:	(bad)  
  43a986:	(bad)  
  43a987:	(bad)  
  43a988:	(bad)  
  43a989:	(bad)  
  43a98a:	(bad)  
  43a98b:	(bad)  
  43a98c:	(bad)  
  43a98d:	(bad)  
  43a98e:	(bad)  
  43a98f:	(bad)  
  43a990:	(bad)  
  43a991:	(bad)  
  43a992:	(bad)  
  43a993:	(bad)  
  43a994:	(bad)  
  43a995:	(bad)  
  43a996:	(bad)  
  43a997:	(bad)  
  43a998:	(bad)  
  43a999:	(bad)  
  43a99a:	(bad)  
  43a99b:	(bad)  
  43a99c:	(bad)  
  43a99d:	(bad)  
  43a99e:	(bad)  
  43a99f:	(bad)  
  43a9a0:	(bad)  
  43a9a1:	(bad)  
  43a9a2:	(bad)  
  43a9a3:	(bad)  
  43a9a4:	(bad)  
  43a9a5:	(bad)  
  43a9a6:	(bad)  
  43a9a7:	(bad)  
  43a9a8:	(bad)  
  43a9a9:	(bad)  
  43a9aa:	(bad)  
  43a9ab:	(bad)  
  43a9ac:	(bad)  
  43a9ad:	(bad)  
  43a9ae:	(bad)  
  43a9af:	(bad)  
  43a9b0:	(bad)  
  43a9b1:	(bad)  
  43a9b2:	(bad)  
  43a9b3:	(bad)  
  43a9b4:	sub    DWORD PTR [rax],eax
  43a9b6:	(bad)  
  43a9b7:	(bad)  
  43a9b8:	(bad)  
  43a9b9:	(bad)  
  43a9ba:	(bad)  
  43a9bb:	(bad)  
  43a9bc:	(bad)  
  43a9bd:	(bad)  
  43a9be:	(bad)  
  43a9bf:	(bad)  
  43a9c0:	(bad)  
  43a9c1:	(bad)  
  43a9c2:	(bad)  
  43a9c3:	(bad)  
  43a9c4:	(bad)  
  43a9c5:	(bad)  
  43a9c6:	(bad)  
  43a9c7:	(bad)  
  43a9c8:	(bad)  
  43a9c9:	(bad)  
  43a9ca:	(bad)  
  43a9cb:	(bad)  
  43a9cc:	(bad)  
  43a9cd:	(bad)  
  43a9ce:	(bad)  
  43a9cf:	(bad)  
  43a9d0:	(bad)  
  43a9d1:	(bad)  
  43a9d2:	(bad)  
  43a9d3:	(bad)  
  43a9d4:	(bad)  
  43a9d5:	(bad)  
  43a9d6:	(bad)  
  43a9d7:	(bad)  
  43a9d8:	(bad)  
  43a9d9:	(bad)  
  43a9da:	(bad)  
  43a9db:	(bad)  
  43a9dc:	(bad)  
  43a9dd:	(bad)  
  43a9de:	(bad)  
  43a9df:	(bad)  
  43a9e0:	(bad)  
  43a9e1:	(bad)  
  43a9e2:	(bad)  
  43a9e3:	(bad)  
  43a9e4:	sbb    eax,0xfefefe01
  43a9e9:	(bad)  
  43a9ea:	(bad)  
  43a9eb:	(bad)  
  43a9ec:	(bad)  
  43a9ed:	(bad)  
  43a9ee:	(bad)  
  43a9ef:	(bad)  
  43a9f0:	(bad)  
  43a9f1:	(bad)  
  43a9f2:	(bad)  
  43a9f3:	(bad)  
  43a9f4:	(bad)  
  43a9f5:	(bad)  
  43a9f6:	(bad)  
  43a9f7:	(bad)  
  43a9f8:	(bad)  
  43a9f9:	(bad)  
  43a9fa:	(bad)  
  43a9fb:	(bad)  
  43a9fc:	(bad)  
  43a9fd:	(bad)  
  43a9fe:	(bad)  
  43a9ff:	(bad)  
  43aa00:	(bad)  
  43aa01:	(bad)  
  43aa02:	(bad)  
  43aa03:	(bad)  
  43aa04:	(bad)  
  43aa05:	(bad)  
  43aa06:	(bad)  
  43aa07:	(bad)  
  43aa08:	(bad)  
  43aa09:	(bad)  
  43aa0a:	(bad)  
  43aa0b:	(bad)  
  43aa0c:	(bad)  
  43aa0d:	(bad)  
  43aa0e:	sub    DWORD PTR [rax],eax
  43aa10:	(bad)  
  43aa11:	add    DWORD PTR [rdi],ebx
  43aa13:	add    DWORD PTR [rax],esp
  43aa15:	add    DWORD PTR [rax],esp
  43aa17:	add    DWORD PTR [rsi],ebx
  43aa19:	add    DWORD PTR [rsi],ebx
  43aa1b:	add    DWORD PTR [rsi],ebx
  43aa1d:	add    DWORD PTR [rsi],ebx
  43aa1f:	add    DWORD PTR [rsi],ebx
  43aa21:	add    DWORD PTR [rsi],ebx
  43aa23:	add    DWORD PTR [rsi],ebx
  43aa25:	add    DWORD PTR [rsi],ebx
  43aa27:	add    DWORD PTR [rsi],ebx
  43aa29:	add    DWORD PTR [rsi],ebx
  43aa2b:	add    DWORD PTR [rsi],ebx
  43aa2d:	add    DWORD PTR [rcx],esp
  43aa2f:	add    DWORD PTR [rsi],ebx
  43aa31:	add    DWORD PTR [rsi],ebx
  43aa33:	add    DWORD PTR [rsi],ebx
  43aa35:	add    DWORD PTR [rsi],ebx
  43aa37:	add    DWORD PTR [rsi],ebx
  43aa39:	add    DWORD PTR [rsi],ebx
  43aa3b:	add    DWORD PTR [rsi],ebx
  43aa3d:	add    DWORD PTR [rsi],ebx
  43aa3f:	add    DWORD PTR [rsi],ebx
  43aa41:	add    DWORD PTR [rsi],ebx
  43aa43:	add    DWORD PTR [rsi],ebx
  43aa45:	add    DWORD PTR [rsi],ebx
  43aa47:	add    DWORD PTR [rsi],ebx
  43aa49:	add    DWORD PTR [rsi],ebx
  43aa4b:	add    DWORD PTR [rsi],ebx
  43aa4d:	add    DWORD PTR [rsi],ebx
  43aa4f:	add    DWORD PTR [rsi],ebx
  43aa51:	add    DWORD PTR [rsi],ebx
  43aa53:	add    DWORD PTR [rsi],ebx
  43aa55:	add    DWORD PTR [rsi],ebx
  43aa57:	add    DWORD PTR [rsi],ebx
  43aa59:	add    DWORD PTR [rsi],ebx
  43aa5b:	add    DWORD PTR [rsi],ebx
  43aa5d:	add    DWORD PTR [rsi],ebx
  43aa5f:	add    DWORD PTR [rsi],ebx
  43aa61:	add    DWORD PTR [rsi],ebx
  43aa63:	add    DWORD PTR [rsi],ebx
  43aa65:	add    DWORD PTR [rsi],ebx
  43aa67:	add    DWORD PTR [rcx],ebp
  43aa69:	add    BYTE PTR [rcx+rax*1],al
  43aa6c:	add    eax,0xb300b301
  43aa71:	add    BYTE PTR [rcx+rax*1],al
  43aa74:	add    al,0x1
  43aa76:	add    al,0x1
  43aa78:	add    al,0x1
  43aa7a:	add    al,0x1
  43aa7c:	add    al,0x1
  43aa7e:	add    al,0x1
  43aa80:	add    al,0x1
  43aa82:	add    al,0x1
  43aa84:	add    al,0x1
  43aa86:	add    al,0x1
  43aa88:	(bad)  
  43aa89:	add    DWORD PTR [rcx+rax*1],eax
  43aa8c:	add    al,0x1
  43aa8e:	add    al,0x1
  43aa90:	add    al,0x1
  43aa92:	add    al,0x1
  43aa94:	add    al,0x1
  43aa96:	add    al,0x1
  43aa98:	add    al,0x1
  43aa9a:	add    al,0x1
  43aa9c:	add    al,0x1
  43aa9e:	add    al,0x1
  43aaa0:	add    al,0x1
  43aaa2:	add    al,0x1
  43aaa4:	add    al,0x1
  43aaa6:	add    al,0x1
  43aaa8:	add    al,0x1
  43aaaa:	add    al,0x1
  43aaac:	add    al,0x1
  43aaae:	add    al,0x1
  43aab0:	add    al,0x1
  43aab2:	add    al,0x1
  43aab4:	add    al,0x1
  43aab6:	add    al,0x1
  43aab8:	add    al,0x1
  43aaba:	add    al,0x1
  43aabc:	add    al,0x1
  43aabe:	add    al,0x1
  43aac0:	add    al,0x1
  43aac2:	sub    DWORD PTR [rax],eax
  43aac4:	add    al,0x1
  43aac6:	add    eax,0xb300b301
  43aacb:	add    BYTE PTR [rcx+rax*1],al
  43aace:	add    al,0x1
  43aad0:	add    al,0x1
  43aad2:	add    al,0x1
  43aad4:	add    al,0x1
  43aad6:	add    al,0x1
  43aad8:	add    al,0x1
  43aada:	add    al,0x1
  43aadc:	add    al,0x1
  43aade:	add    al,0x1
  43aae0:	add    al,0x1
  43aae2:	(bad)  
  43aae3:	add    DWORD PTR [rcx+rax*1],eax
  43aae6:	add    al,0x1
  43aae8:	add    al,0x1
  43aaea:	add    al,0x1
  43aaec:	add    al,0x1
  43aaee:	add    al,0x1
  43aaf0:	add    al,0x1
  43aaf2:	add    al,0x1
  43aaf4:	add    al,0x1
  43aaf6:	add    al,0x1
  43aaf8:	add    al,0x1
  43aafa:	add    al,0x1
  43aafc:	add    al,0x1
  43aafe:	add    al,0x1
  43ab00:	add    al,0x1
  43ab02:	add    al,0x1
  43ab04:	add    al,0x1
  43ab06:	add    al,0x1
  43ab08:	add    al,0x1
  43ab0a:	add    al,0x1
  43ab0c:	add    al,0x1
  43ab0e:	add    al,0x1
  43ab10:	add    al,0x1
  43ab12:	add    al,0x1
  43ab14:	add    al,0x1
  43ab16:	add    al,0x1
  43ab18:	add    al,0x1
  43ab1a:	add    al,0x1
  43ab1c:	sub    DWORD PTR [rax],eax
  43ab1e:	add    al,0x1
  43ab20:	add    eax,0xb300b301
  43ab25:	add    BYTE PTR [rcx+rax*1],al
  43ab28:	add    al,0x1
  43ab2a:	add    al,0x1
  43ab2c:	add    al,0x1
  43ab2e:	add    al,0x1
  43ab30:	add    al,0x1
  43ab32:	add    al,0x1
  43ab34:	add    al,0x1
  43ab36:	add    al,0x1
  43ab38:	add    al,0x1
  43ab3a:	add    al,0x1
  43ab3c:	and    al,BYTE PTR [rcx]
  43ab3e:	add    al,0x1
  43ab40:	add    al,0x1
  43ab42:	add    al,0x1
  43ab44:	add    al,0x1
  43ab46:	add    al,0x1
  43ab48:	add    al,0x1
  43ab4a:	add    al,0x1
  43ab4c:	add    al,0x1
  43ab4e:	add    al,0x1
  43ab50:	add    al,0x1
  43ab52:	add    al,0x1
  43ab54:	add    al,0x1
  43ab56:	add    al,0x1
  43ab58:	add    al,0x1
  43ab5a:	add    al,0x1
  43ab5c:	add    al,0x1
  43ab5e:	add    al,0x1
  43ab60:	add    al,0x1
  43ab62:	add    al,0x1
  43ab64:	add    al,0x1
  43ab66:	add    al,0x1
  43ab68:	add    al,0x1
  43ab6a:	add    al,0x1
  43ab6c:	add    al,0x1
  43ab6e:	add    al,0x1
  43ab70:	add    al,0x1
  43ab72:	add    al,0x1
  43ab74:	add    al,0x1
  43ab76:	sub    DWORD PTR [rax],eax
  43ab78:	stc    
  43ab79:	(bad)  
  43ab7a:	stc    
  43ab7b:	(bad)  
  43ab7c:	stc    
  43ab7d:	(bad)  
  43ab7e:	stc    
  43ab7f:	(bad)  
  43ab80:	stc    
  43ab81:	(bad)  
  43ab82:	stc    
  43ab83:	(bad)  
  43ab84:	stc    
  43ab85:	(bad)  
  43ab86:	stc    
  43ab87:	(bad)  
  43ab88:	stc    
  43ab89:	(bad)  
  43ab8a:	stc    
  43ab8b:	(bad)  
  43ab8c:	stc    
  43ab8d:	(bad)  
  43ab8e:	stc    
  43ab8f:	(bad)  
  43ab90:	stc    
  43ab91:	(bad)  
  43ab92:	stc    
  43ab93:	(bad)  
  43ab94:	stc    
  43ab95:	(bad)  
  43ab96:	stc    
  43ab97:	(bad)  
  43ab98:	stc    
  43ab99:	(bad)  
  43ab9a:	stc    
  43ab9b:	(bad)  
  43ab9c:	stc    
  43ab9d:	(bad)  
  43ab9e:	stc    
  43ab9f:	(bad)  
  43aba0:	stc    
  43aba1:	(bad)  
  43aba2:	stc    
  43aba3:	(bad)  
  43aba4:	stc    
  43aba5:	(bad)  
  43aba6:	and    eax,DWORD PTR [rcx]
  43aba8:	stc    
  43aba9:	(bad)  
  43abaa:	stc    
  43abab:	(bad)  
  43abac:	stc    
  43abad:	(bad)  
  43abae:	stc    
  43abaf:	(bad)  
  43abb0:	stc    
  43abb1:	(bad)  
  43abb2:	stc    
  43abb3:	(bad)  
  43abb4:	stc    
  43abb5:	(bad)  
  43abb6:	stc    
  43abb7:	(bad)  
  43abb8:	stc    
  43abb9:	(bad)  
  43abba:	stc    
  43abbb:	(bad)  
  43abbc:	stc    
  43abbd:	(bad)  
  43abbe:	stc    
  43abbf:	(bad)  
  43abc0:	stc    
  43abc1:	(bad)  
  43abc2:	stc    
  43abc3:	(bad)  
  43abc4:	stc    
  43abc5:	(bad)  
  43abc6:	stc    
  43abc7:	(bad)  
  43abc8:	stc    
  43abc9:	(bad)  
  43abca:	stc    
  43abcb:	(bad)  
  43abcc:	stc    
  43abcd:	(bad)  
  43abce:	stc    
  43abcf:	(bad)  
  43abd0:	sub    DWORD PTR [rax],eax
  43abd2:	clc    
  43abd3:	(bad)  
  43abd4:	clc    
  43abd5:	(bad)  
  43abd6:	clc    
  43abd7:	(bad)  
  43abd8:	clc    
  43abd9:	(bad)  
  43abda:	clc    
  43abdb:	(bad)  
  43abdc:	clc    
  43abdd:	(bad)  
  43abde:	clc    
  43abdf:	(bad)  
  43abe0:	clc    
  43abe1:	(bad)  
  43abe2:	clc    
  43abe3:	(bad)  
  43abe4:	clc    
  43abe5:	(bad)  
  43abe6:	clc    
  43abe7:	(bad)  
  43abe8:	clc    
  43abe9:	(bad)  
  43abea:	clc    
  43abeb:	(bad)  
  43abec:	clc    
  43abed:	(bad)  
  43abee:	clc    
  43abef:	(bad)  
  43abf0:	clc    
  43abf1:	(bad)  
  43abf2:	clc    
  43abf3:	(bad)  
  43abf4:	clc    
  43abf5:	(bad)  
  43abf6:	clc    
  43abf7:	(bad)  
  43abf8:	clc    
  43abf9:	(bad)  
  43abfa:	clc    
  43abfb:	(bad)  
  43abfc:	clc    
  43abfd:	(bad)  
  43abfe:	clc    
  43abff:	(bad)  
  43ac00:	clc    
  43ac01:	(bad)  
  43ac02:	clc    
  43ac03:	(bad)  
  43ac04:	clc    
  43ac05:	(bad)  
  43ac06:	clc    
  43ac07:	(bad)  
  43ac08:	clc    
  43ac09:	(bad)  
  43ac0a:	clc    
  43ac0b:	(bad)  
  43ac0c:	clc    
  43ac0d:	(bad)  
  43ac0e:	clc    
  43ac0f:	(bad)  
  43ac10:	clc    
  43ac11:	(bad)  
  43ac12:	clc    
  43ac13:	(bad)  
  43ac14:	clc    
  43ac15:	(bad)  
  43ac16:	clc    
  43ac17:	(bad)  
  43ac18:	clc    
  43ac19:	(bad)  
  43ac1a:	clc    
  43ac1b:	(bad)  
  43ac1c:	clc    
  43ac1d:	(bad)  
  43ac1e:	clc    
  43ac1f:	(bad)  
  43ac20:	clc    
  43ac21:	(bad)  
  43ac22:	clc    
  43ac23:	(bad)  
  43ac24:	clc    
  43ac25:	(bad)  
  43ac26:	clc    
  43ac27:	(bad)  
  43ac28:	clc    
  43ac29:	(bad)  
  43ac2a:	sub    DWORD PTR [rax],eax
  43ac2c:	idiv   esi
  43ac2e:	idiv   esi
  43ac30:	idiv   esi
  43ac32:	idiv   esi
  43ac34:	idiv   esi
  43ac36:	idiv   esi
  43ac38:	idiv   esi
  43ac3a:	idiv   esi
  43ac3c:	idiv   esi
  43ac3e:	idiv   esi
  43ac40:	idiv   esi
  43ac42:	idiv   esi
  43ac44:	idiv   esi
  43ac46:	idiv   esi
  43ac48:	idiv   esi
  43ac4a:	idiv   esi
  43ac4c:	idiv   esi
  43ac4e:	idiv   esi
  43ac50:	idiv   esi
  43ac52:	idiv   esi
  43ac54:	idiv   esi
  43ac56:	idiv   esi
  43ac58:	idiv   esi
  43ac5a:	idiv   esi
  43ac5c:	idiv   esi
  43ac5e:	idiv   esi
  43ac60:	idiv   esi
  43ac62:	idiv   esi
  43ac64:	idiv   esi
  43ac66:	idiv   esi
  43ac68:	idiv   esi
  43ac6a:	idiv   esi
  43ac6c:	idiv   esi
  43ac6e:	idiv   esi
  43ac70:	idiv   esi
  43ac72:	idiv   esi
  43ac74:	idiv   esi
  43ac76:	idiv   esi
  43ac78:	idiv   esi
  43ac7a:	idiv   esi
  43ac7c:	idiv   esi
  43ac7e:	idiv   esi
  43ac80:	idiv   esi
  43ac82:	idiv   esi
  43ac84:	sub    DWORD PTR [rax],eax
  43ac86:	idiv   dh
  43ac88:	idiv   dh
  43ac8a:	idiv   dh
  43ac8c:	idiv   dh
  43ac8e:	idiv   dh
  43ac90:	idiv   dh
  43ac92:	idiv   dh
  43ac94:	idiv   dh
  43ac96:	idiv   dh
  43ac98:	idiv   dh
  43ac9a:	idiv   dh
  43ac9c:	idiv   dh
  43ac9e:	idiv   dh
  43aca0:	idiv   dh
  43aca2:	idiv   dh
  43aca4:	idiv   dh
  43aca6:	idiv   dh
  43aca8:	idiv   dh
  43acaa:	idiv   dh
  43acac:	idiv   dh
  43acae:	idiv   dh
  43acb0:	idiv   dh
  43acb2:	idiv   dh
  43acb4:	idiv   dh
  43acb6:	idiv   dh
  43acb8:	idiv   dh
  43acba:	idiv   dh
  43acbc:	idiv   dh
  43acbe:	idiv   dh
  43acc0:	idiv   dh
  43acc2:	idiv   dh
  43acc4:	idiv   dh
  43acc6:	idiv   dh
  43acc8:	idiv   dh
  43acca:	idiv   dh
  43accc:	idiv   dh
  43acce:	idiv   dh
  43acd0:	idiv   dh
  43acd2:	idiv   dh
  43acd4:	idiv   dh
  43acd6:	idiv   dh
  43acd8:	idiv   dh
  43acda:	idiv   dh
  43acdc:	idiv   dh
  43acde:	sub    DWORD PTR [rax],eax
  43ace0:	cmc    
  43ace1:	(bad)  
  43ace2:	cmc    
  43ace3:	(bad)  
  43ace4:	cmc    
  43ace5:	(bad)  
  43ace6:	cmc    
  43ace7:	(bad)  
  43ace8:	cmc    
  43ace9:	(bad)  
  43acea:	cmc    
  43aceb:	(bad)  
  43acec:	cmc    
  43aced:	(bad)  
  43acee:	cmc    
  43acef:	(bad)  
  43acf0:	cmc    
  43acf1:	(bad)  
  43acf2:	cmc    
  43acf3:	(bad)  
  43acf4:	cmc    
  43acf5:	(bad)  
  43acf6:	cmc    
  43acf7:	(bad)  
  43acf8:	cmc    
  43acf9:	(bad)  
  43acfa:	cmc    
  43acfb:	(bad)  
  43acfc:	cmc    
  43acfd:	(bad)  
  43acfe:	cmc    
  43acff:	(bad)  
  43ad00:	cmc    
  43ad01:	(bad)  
  43ad02:	cmc    
  43ad03:	(bad)  
  43ad04:	cmc    
  43ad05:	(bad)  
  43ad06:	cmc    
  43ad07:	(bad)  
  43ad08:	cmc    
  43ad09:	(bad)  
  43ad0a:	cmc    
  43ad0b:	(bad)  
  43ad0c:	cmc    
  43ad0d:	(bad)  
  43ad0e:	cmc    
  43ad0f:	(bad)  
  43ad10:	cmc    
  43ad11:	(bad)  
  43ad12:	cmc    
  43ad13:	(bad)  
  43ad14:	cmc    
  43ad15:	(bad)  
  43ad16:	cmc    
  43ad17:	(bad)  
  43ad18:	cmc    
  43ad19:	(bad)  
  43ad1a:	cmc    
  43ad1b:	(bad)  
  43ad1c:	cmc    
  43ad1d:	(bad)  
  43ad1e:	cmc    
  43ad1f:	(bad)  
  43ad20:	cmc    
  43ad21:	(bad)  
  43ad22:	cmc    
  43ad23:	(bad)  
  43ad24:	cmc    
  43ad25:	(bad)  
  43ad26:	cmc    
  43ad27:	(bad)  
  43ad28:	cmc    
  43ad29:	(bad)  
  43ad2a:	cmc    
  43ad2b:	(bad)  
  43ad2c:	cmc    
  43ad2d:	(bad)  
  43ad2e:	cmc    
  43ad2f:	(bad)  
  43ad30:	cmc    
  43ad31:	(bad)  
  43ad32:	cmc    
  43ad33:	(bad)  
  43ad34:	cmc    
  43ad35:	(bad)  
  43ad36:	cmc    
  43ad37:	(bad)  
  43ad38:	sub    DWORD PTR [rax],eax
  43ad3a:	or     al,0x1
  43ad3c:	or     eax,0xe010e01
  43ad41:	add    DWORD PTR [rcx+rax*1],ecx
  43ad44:	or     al,0x1
  43ad46:	or     al,0x1
  43ad48:	or     al,0x1
  43ad4a:	or     al,0x1
  43ad4c:	or     al,0x1
  43ad4e:	or     al,0x1
  43ad50:	or     al,0x1
  43ad52:	or     al,0x1
  43ad54:	or     al,0x1
  43ad56:	or     al,0x1
  43ad58:	sidt   [rcx+rax*1]
  43ad5c:	or     al,0x1
  43ad5e:	or     al,0x1
  43ad60:	or     al,0x1
  43ad62:	or     al,0x1
  43ad64:	or     al,0x1
  43ad66:	or     al,0x1
  43ad68:	or     al,0x1
  43ad6a:	or     al,0x1
  43ad6c:	or     al,0x1
  43ad6e:	or     al,0x1
  43ad70:	or     al,0x1
  43ad72:	or     al,0x1
  43ad74:	or     al,0x1
  43ad76:	or     al,0x1
  43ad78:	or     al,0x1
  43ad7a:	or     al,0x1
  43ad7c:	or     al,0x1
  43ad7e:	or     al,0x1
  43ad80:	or     al,0x1
  43ad82:	or     al,0x1
  43ad84:	or     al,0x1
  43ad86:	or     al,0x1
  43ad88:	or     al,0x1
  43ad8a:	or     al,0x1
  43ad8c:	or     al,0x1
  43ad8e:	or     al,0x1
  43ad90:	or     al,0x1
  43ad92:	sub    DWORD PTR [rax],eax
  43ad94:	or     al,0x1
  43ad96:	or     eax,0xe010e01
  43ad9b:	add    DWORD PTR [rcx+rax*1],ecx
  43ad9e:	or     al,0x1
  43ada0:	or     al,0x1
  43ada2:	or     al,0x1
  43ada4:	or     al,0x1
  43ada6:	or     al,0x1
  43ada8:	or     al,0x1
  43adaa:	or     al,0x1
  43adac:	or     al,0x1
  43adae:	or     al,0x1
  43adb0:	or     al,0x1
  43adb2:	sidt   [rcx+rax*1]
  43adb6:	or     al,0x1
  43adb8:	or     al,0x1
  43adba:	or     al,0x1
  43adbc:	or     al,0x1
  43adbe:	or     al,0x1
  43adc0:	or     al,0x1
  43adc2:	or     al,0x1
  43adc4:	or     al,0x1
  43adc6:	or     al,0x1
  43adc8:	or     al,0x1
  43adca:	or     al,0x1
  43adcc:	or     al,0x1
  43adce:	or     al,0x1
  43add0:	or     al,0x1
  43add2:	or     al,0x1
  43add4:	or     al,0x1
  43add6:	or     al,0x1
  43add8:	or     al,0x1
  43adda:	or     al,0x1
  43addc:	or     al,0x1
  43adde:	or     al,0x1
  43ade0:	or     al,0x1
  43ade2:	or     al,0x1
  43ade4:	or     al,0x1
  43ade6:	or     al,0x1
  43ade8:	or     al,0x1
  43adea:	or     al,0x1
  43adec:	sub    DWORD PTR [rax],eax
  43adee:	repnz (bad) 
  43adf0:	rol    DWORD PTR [rax],cl
  43adf2:	rol    DWORD PTR [rax],cl
  43adf4:	rol    DWORD PTR [rax],cl
  43adf6:	repnz (bad) 
  43adf8:	repnz (bad) 
  43adfa:	repnz (bad) 
  43adfc:	repnz (bad) 
  43adfe:	repnz (bad) 
  43ae00:	(bad)  
  43ae01:	add    dl,dh
  43ae03:	(bad)  
  43ae04:	repnz (bad) 
  43ae06:	repnz (bad) 
  43ae08:	repnz (bad) 
  43ae0a:	repnz (bad) 
  43ae0c:	(bad)  
  43ae0d:	add    dl,dh
  43ae0f:	(bad)  
  43ae10:	repnz (bad) 
  43ae12:	repnz (bad) 
  43ae14:	repnz (bad) 
  43ae16:	repnz (bad) 
  43ae18:	repnz (bad) 
  43ae1a:	repnz (bad) 
  43ae1c:	repnz (bad) 
  43ae1e:	repnz (bad) 
  43ae20:	repnz (bad) 
  43ae22:	repnz (bad) 
  43ae24:	repnz (bad) 
  43ae26:	repnz (bad) 
  43ae28:	repnz (bad) 
  43ae2a:	repnz (bad) 
  43ae2c:	repnz (bad) 
  43ae2e:	repnz (bad) 
  43ae30:	repnz (bad) 
  43ae32:	repnz (bad) 
  43ae34:	repnz (bad) 
  43ae36:	repnz (bad) 
  43ae38:	repnz (bad) 
  43ae3a:	repnz (bad) 
  43ae3c:	repnz (bad) 
  43ae3e:	repnz (bad) 
  43ae40:	repnz (bad) 
  43ae42:	repnz (bad) 
  43ae44:	repnz (bad) 
  43ae46:	sub    DWORD PTR [rax],eax
  43ae48:	or     al,0x1
  43ae4a:	or     eax,0xe010e01
  43ae4f:	add    DWORD PTR [rcx+rax*1],ecx
  43ae52:	or     al,0x1
  43ae54:	or     al,0x1
  43ae56:	or     al,0x1
  43ae58:	or     al,0x1
  43ae5a:	or     al,0x1
  43ae5c:	or     al,0x1
  43ae5e:	or     al,0x1
  43ae60:	or     al,0x1
  43ae62:	or     al,0x1
  43ae64:	or     al,0x1
  43ae66:	and    al,0x1
  43ae68:	or     al,0x1
  43ae6a:	or     al,0x1
  43ae6c:	or     al,0x1
  43ae6e:	or     al,0x1
  43ae70:	or     al,0x1
  43ae72:	or     al,0x1
  43ae74:	or     al,0x1
  43ae76:	or     al,0x1
  43ae78:	or     al,0x1
  43ae7a:	or     al,0x1
  43ae7c:	or     al,0x1
  43ae7e:	or     al,0x1
  43ae80:	or     al,0x1
  43ae82:	or     al,0x1
  43ae84:	or     al,0x1
  43ae86:	or     al,0x1
  43ae88:	or     al,0x1
  43ae8a:	or     al,0x1
  43ae8c:	or     al,0x1
  43ae8e:	or     al,0x1
  43ae90:	or     al,0x1
  43ae92:	or     al,0x1
  43ae94:	or     al,0x1
  43ae96:	or     al,0x1
  43ae98:	or     al,0x1
  43ae9a:	or     al,0x1
  43ae9c:	or     al,0x1
  43ae9e:	or     al,0x1
  43aea0:	sub    DWORD PTR [rax],eax
  43aea2:	repz add ah,dh
  43aea5:	add    BYTE PTR [rbp-0xcff6b00],dl
  43aeab:	add    bl,dh
  43aead:	add    bl,dh
  43aeaf:	add    bl,dh
  43aeb1:	add    bl,dh
  43aeb3:	add    bl,dh
  43aeb5:	add    bl,dh
  43aeb7:	add    bl,dh
  43aeb9:	add    bl,dh
  43aebb:	add    bl,dh
  43aebd:	add    bl,dh
  43aebf:	add    BYTE PTR [rax],dl
  43aec1:	add    ebx,esi
  43aec3:	add    bl,dh
  43aec5:	add    bl,dh
  43aec7:	add    bl,dh
  43aec9:	add    bl,dh
  43aecb:	add    bl,dh
  43aecd:	add    bl,dh
  43aecf:	add    bl,dh
  43aed1:	add    bl,dh
  43aed3:	add    bl,dh
  43aed5:	add    bl,dh
  43aed7:	add    bl,dh
  43aed9:	add    bl,dh
  43aedb:	add    bl,dh
  43aedd:	add    bl,dh
  43aedf:	add    bl,dh
  43aee1:	add    bl,dh
  43aee3:	add    bl,dh
  43aee5:	add    bl,dh
  43aee7:	add    bl,dh
  43aee9:	add    bl,dh
  43aeeb:	add    bl,dh
  43aeed:	add    bl,dh
  43aeef:	add    bl,dh
  43aef1:	add    bl,dh
  43aef3:	add    bl,dh
  43aef5:	add    bl,dh
  43aef7:	add    bl,dh
  43aef9:	add    BYTE PTR [rcx],ch
  43aefb:	add    BYTE PTR [rcx],dl
  43aefd:	add    DWORD PTR [rdx],edx
  43aeff:	add    DWORD PTR [rbx],edx
  43af01:	add    DWORD PTR [rbx],edx
  43af03:	add    DWORD PTR [rcx],edx
  43af05:	add    DWORD PTR [rcx],edx
  43af07:	add    DWORD PTR [rcx],edx
  43af09:	add    DWORD PTR [rcx],edx
  43af0b:	add    DWORD PTR [rcx],edx
  43af0d:	add    DWORD PTR [rcx],edx
  43af0f:	add    DWORD PTR [rcx],edx
  43af11:	add    DWORD PTR [rcx],edx
  43af13:	add    DWORD PTR [rcx],edx
  43af15:	add    DWORD PTR [rcx],edx
  43af17:	add    DWORD PTR [rcx],edx
  43af19:	add    DWORD PTR [rcx+rax*1],edx
  43af1c:	adc    DWORD PTR [rcx],eax
  43af1e:	adc    DWORD PTR [rcx],eax
  43af20:	adc    DWORD PTR [rcx],eax
  43af22:	adc    DWORD PTR [rcx],eax
  43af24:	adc    DWORD PTR [rcx],eax
  43af26:	adc    DWORD PTR [rcx],eax
  43af28:	adc    DWORD PTR [rcx],eax
  43af2a:	adc    DWORD PTR [rcx],eax
  43af2c:	adc    DWORD PTR [rcx],eax
  43af2e:	adc    DWORD PTR [rcx],eax
  43af30:	adc    DWORD PTR [rcx],eax
  43af32:	adc    DWORD PTR [rcx],eax
  43af34:	adc    DWORD PTR [rcx],eax
  43af36:	adc    DWORD PTR [rcx],eax
  43af38:	adc    DWORD PTR [rcx],eax
  43af3a:	adc    DWORD PTR [rcx],eax
  43af3c:	adc    DWORD PTR [rcx],eax
  43af3e:	adc    DWORD PTR [rcx],eax
  43af40:	adc    DWORD PTR [rcx],eax
  43af42:	adc    DWORD PTR [rcx],eax
  43af44:	adc    DWORD PTR [rcx],eax
  43af46:	adc    DWORD PTR [rcx],eax
  43af48:	adc    DWORD PTR [rcx],eax
  43af4a:	adc    DWORD PTR [rcx],eax
  43af4c:	adc    DWORD PTR [rcx],eax
  43af4e:	adc    DWORD PTR [rcx],eax
  43af50:	adc    DWORD PTR [rcx],eax
  43af52:	adc    DWORD PTR [rcx],eax
  43af54:	sub    DWORD PTR [rax],eax
  43af56:	adc    DWORD PTR [rcx],eax
  43af58:	adc    al,BYTE PTR [rcx]
  43af5a:	adc    eax,DWORD PTR [rcx]
  43af5c:	adc    eax,DWORD PTR [rcx]
  43af5e:	adc    DWORD PTR [rcx],eax
  43af60:	adc    DWORD PTR [rcx],eax
  43af62:	adc    DWORD PTR [rcx],eax
  43af64:	adc    DWORD PTR [rcx],eax
  43af66:	adc    DWORD PTR [rcx],eax
  43af68:	adc    DWORD PTR [rcx],eax
  43af6a:	adc    DWORD PTR [rcx],eax
  43af6c:	adc    DWORD PTR [rcx],eax
  43af6e:	adc    DWORD PTR [rcx],eax
  43af70:	adc    DWORD PTR [rcx],eax
  43af72:	adc    DWORD PTR [rcx],eax
  43af74:	adc    al,0x1
  43af76:	adc    DWORD PTR [rcx],eax
  43af78:	adc    DWORD PTR [rcx],eax
  43af7a:	adc    DWORD PTR [rcx],eax
  43af7c:	adc    DWORD PTR [rcx],eax
  43af7e:	adc    DWORD PTR [rcx],eax
  43af80:	adc    DWORD PTR [rcx],eax
  43af82:	adc    DWORD PTR [rcx],eax
  43af84:	adc    DWORD PTR [rcx],eax
  43af86:	adc    DWORD PTR [rcx],eax
  43af88:	adc    DWORD PTR [rcx],eax
  43af8a:	adc    DWORD PTR [rcx],eax
  43af8c:	adc    DWORD PTR [rcx],eax
  43af8e:	adc    DWORD PTR [rcx],eax
  43af90:	adc    DWORD PTR [rcx],eax
  43af92:	adc    DWORD PTR [rcx],eax
  43af94:	adc    DWORD PTR [rcx],eax
  43af96:	adc    DWORD PTR [rcx],eax
  43af98:	adc    DWORD PTR [rcx],eax
  43af9a:	adc    DWORD PTR [rcx],eax
  43af9c:	adc    DWORD PTR [rcx],eax
  43af9e:	adc    DWORD PTR [rcx],eax
  43afa0:	adc    DWORD PTR [rcx],eax
  43afa2:	adc    DWORD PTR [rcx],eax
  43afa4:	adc    DWORD PTR [rcx],eax
  43afa6:	adc    DWORD PTR [rcx],eax
  43afa8:	adc    DWORD PTR [rcx],eax
  43afaa:	adc    DWORD PTR [rcx],eax
  43afac:	adc    DWORD PTR [rcx],eax
  43afae:	sub    DWORD PTR [rax],eax
  43afb0:	in     eax,dx
  43afb1:	(bad)  
  43afb2:	fadd   DWORD PTR [rax]
  43afb4:	fadd   DWORD PTR [rax]
  43afb6:	fadd   DWORD PTR [rax]
  43afb8:	in     eax,dx
  43afb9:	(bad)  
  43afba:	in     eax,dx
  43afbb:	(bad)  
  43afbc:	in     eax,dx
  43afbd:	(bad)  
  43afbe:	in     eax,dx
  43afbf:	(bad)  
  43afc0:	in     eax,dx
  43afc1:	(bad)  
  43afc2:	fld    DWORD PTR [rax]
  43afc4:	in     eax,dx
  43afc5:	(bad)  
  43afc6:	in     eax,dx
  43afc7:	(bad)  
  43afc8:	in     eax,dx
  43afc9:	(bad)  
  43afca:	in     eax,dx
  43afcb:	(bad)  
  43afcc:	in     eax,dx
  43afcd:	(bad)  
  43afce:	fiadd  DWORD PTR [rax]
  43afd0:	in     eax,dx
  43afd1:	(bad)  
  43afd2:	in     eax,dx
  43afd3:	(bad)  
  43afd4:	in     eax,dx
  43afd5:	(bad)  
  43afd6:	in     eax,dx
  43afd7:	(bad)  
  43afd8:	in     eax,dx
  43afd9:	(bad)  
  43afda:	in     eax,dx
  43afdb:	(bad)  
  43afdc:	in     eax,dx
  43afdd:	(bad)  
  43afde:	in     eax,dx
  43afdf:	(bad)  
  43afe0:	in     eax,dx
  43afe1:	(bad)  
  43afe2:	in     eax,dx
  43afe3:	(bad)  
  43afe4:	in     eax,dx
  43afe5:	(bad)  
  43afe6:	in     eax,dx
  43afe7:	(bad)  
  43afe8:	in     eax,dx
  43afe9:	(bad)  
  43afea:	in     eax,dx
  43afeb:	(bad)  
  43afec:	in     eax,dx
  43afed:	(bad)  
  43afee:	in     eax,dx
  43afef:	(bad)  
  43aff0:	in     eax,dx
  43aff1:	(bad)  
  43aff2:	in     eax,dx
  43aff3:	(bad)  
  43aff4:	in     eax,dx
  43aff5:	(bad)  
  43aff6:	in     eax,dx
  43aff7:	(bad)  
  43aff8:	in     eax,dx
  43aff9:	(bad)  
  43affa:	in     eax,dx
  43affb:	(bad)  
  43affc:	in     eax,dx
  43affd:	(bad)  
  43affe:	in     eax,dx
  43afff:	(bad)  
  43b000:	in     eax,dx
  43b001:	(bad)  
  43b002:	in     eax,dx
  43b003:	(bad)  
  43b004:	in     eax,dx
  43b005:	(bad)  
  43b006:	in     eax,dx
  43b007:	(bad)  
  43b008:	sub    DWORD PTR [rax],eax
  43b00a:	adc    DWORD PTR [rcx],eax
  43b00c:	adc    al,BYTE PTR [rcx]
  43b00e:	adc    eax,DWORD PTR [rcx]
  43b010:	adc    eax,DWORD PTR [rcx]
  43b012:	adc    DWORD PTR [rcx],eax
  43b014:	adc    DWORD PTR [rcx],eax
  43b016:	adc    DWORD PTR [rcx],eax
  43b018:	adc    DWORD PTR [rcx],eax
  43b01a:	adc    DWORD PTR [rcx],eax
  43b01c:	adc    DWORD PTR [rcx],eax
  43b01e:	adc    DWORD PTR [rcx],eax
  43b020:	adc    DWORD PTR [rcx],eax
  43b022:	adc    DWORD PTR [rcx],eax
  43b024:	adc    DWORD PTR [rcx],eax
  43b026:	adc    DWORD PTR [rcx],eax
  43b028:	and    eax,0x11011101
  43b02d:	add    DWORD PTR [rcx],edx
  43b02f:	add    DWORD PTR [rcx],edx
  43b031:	add    DWORD PTR [rcx],edx
  43b033:	add    DWORD PTR [rcx],edx
  43b035:	add    DWORD PTR [rcx],edx
  43b037:	add    DWORD PTR [rcx],edx
  43b039:	add    DWORD PTR [rcx],edx
  43b03b:	add    DWORD PTR [rcx],edx
  43b03d:	add    DWORD PTR [rcx],edx
  43b03f:	add    DWORD PTR [rcx],edx
  43b041:	add    DWORD PTR [rcx],edx
  43b043:	add    DWORD PTR [rcx],edx
  43b045:	add    DWORD PTR [rcx],edx
  43b047:	add    DWORD PTR [rcx],edx
  43b049:	add    DWORD PTR [rcx],edx
  43b04b:	add    DWORD PTR [rcx],edx
  43b04d:	add    DWORD PTR [rcx],edx
  43b04f:	add    DWORD PTR [rcx],edx
  43b051:	add    DWORD PTR [rcx],edx
  43b053:	add    DWORD PTR [rcx],edx
  43b055:	add    DWORD PTR [rcx],edx
  43b057:	add    DWORD PTR [rcx],edx
  43b059:	add    DWORD PTR [rcx],edx
  43b05b:	add    DWORD PTR [rcx],edx
  43b05d:	add    DWORD PTR [rcx],edx
  43b05f:	add    DWORD PTR [rcx],edx
  43b061:	add    DWORD PTR [rcx],ebp
  43b063:	add    bh,dh
  43b065:	add    al,bh
  43b067:	add    BYTE PTR [rdi-0x8ff6100],bl
  43b06d:	add    bh,dh
  43b06f:	add    bh,dh
  43b071:	add    bh,dh
  43b073:	add    bh,dh
  43b075:	add    bh,dh
  43b077:	add    bh,dh
  43b079:	add    bh,dh
  43b07b:	add    bh,dh
  43b07d:	add    bh,dh
  43b07f:	add    bh,dh
  43b081:	add    BYTE PTR [rip+0xfffffffff700f701],dl        # 0xfffffffff744a788
  43b087:	add    bh,dh
  43b089:	add    bh,dh
  43b08b:	add    bh,dh
  43b08d:	add    bh,dh
  43b08f:	add    bh,dh
  43b091:	add    bh,dh
  43b093:	add    bh,dh
  43b095:	add    bh,dh
  43b097:	add    bh,dh
  43b099:	add    bh,dh
  43b09b:	add    bh,dh
  43b09d:	add    bh,dh
  43b09f:	add    bh,dh
  43b0a1:	add    bh,dh
  43b0a3:	add    bh,dh
  43b0a5:	add    bh,dh
  43b0a7:	add    bh,dh
  43b0a9:	add    bh,dh
  43b0ab:	add    bh,dh
  43b0ad:	add    bh,dh
  43b0af:	add    bh,dh
  43b0b1:	add    bh,dh
  43b0b3:	add    bh,dh
  43b0b5:	add    bh,dh
  43b0b7:	add    bh,dh
  43b0b9:	add    bh,dh
  43b0bb:	add    BYTE PTR [rcx],ch
  43b0bd:	add    BYTE PTR [rsi],dl
  43b0bf:	add    DWORD PTR [rdi],edx
  43b0c1:	add    DWORD PTR [rax],ebx
  43b0c3:	add    DWORD PTR [rax],ebx
  43b0c5:	add    DWORD PTR [rsi],edx
  43b0c7:	add    DWORD PTR [rsi],edx
  43b0c9:	add    DWORD PTR [rsi],edx
  43b0cb:	add    DWORD PTR [rsi],edx
  43b0cd:	add    DWORD PTR [rsi],edx
  43b0cf:	add    DWORD PTR [rsi],edx
  43b0d1:	add    DWORD PTR [rsi],edx
  43b0d3:	add    DWORD PTR [rsi],edx
  43b0d5:	add    DWORD PTR [rsi],edx
  43b0d7:	add    DWORD PTR [rsi],edx
  43b0d9:	add    DWORD PTR [rsi],edx
  43b0db:	add    DWORD PTR [rcx],ebx
  43b0dd:	add    DWORD PTR [rsi],edx
  43b0df:	add    DWORD PTR [rsi],edx
  43b0e1:	add    DWORD PTR [rsi],edx
  43b0e3:	add    DWORD PTR [rsi],edx
  43b0e5:	add    DWORD PTR [rsi],edx
  43b0e7:	add    DWORD PTR [rsi],edx
  43b0e9:	add    DWORD PTR [rsi],edx
  43b0eb:	add    DWORD PTR [rsi],edx
  43b0ed:	add    DWORD PTR [rsi],edx
  43b0ef:	add    DWORD PTR [rsi],edx
  43b0f1:	add    DWORD PTR [rsi],edx
  43b0f3:	add    DWORD PTR [rsi],edx
  43b0f5:	add    DWORD PTR [rsi],edx
  43b0f7:	add    DWORD PTR [rsi],edx
  43b0f9:	add    DWORD PTR [rsi],edx
  43b0fb:	add    DWORD PTR [rsi],edx
  43b0fd:	add    DWORD PTR [rsi],edx
  43b0ff:	add    DWORD PTR [rsi],edx
  43b101:	add    DWORD PTR [rsi],edx
  43b103:	add    DWORD PTR [rsi],edx
  43b105:	add    DWORD PTR [rsi],edx
  43b107:	add    DWORD PTR [rsi],edx
  43b109:	add    DWORD PTR [rsi],edx
  43b10b:	add    DWORD PTR [rsi],edx
  43b10d:	add    DWORD PTR [rsi],edx
  43b10f:	add    DWORD PTR [rsi],edx
  43b111:	add    DWORD PTR [rsi],edx
  43b113:	add    DWORD PTR [rsi],edx
  43b115:	add    DWORD PTR [rcx],ebp
  43b117:	add    BYTE PTR [rsi],dl
  43b119:	add    DWORD PTR [rdi],edx
  43b11b:	add    DWORD PTR [rax],ebx
  43b11d:	add    DWORD PTR [rax],ebx
  43b11f:	add    DWORD PTR [rsi],edx
  43b121:	add    DWORD PTR [rsi],edx
  43b123:	add    DWORD PTR [rsi],edx
  43b125:	add    DWORD PTR [rsi],edx
  43b127:	add    DWORD PTR [rsi],edx
  43b129:	add    DWORD PTR [rsi],edx
  43b12b:	add    DWORD PTR [rsi],edx
  43b12d:	add    DWORD PTR [rsi],edx
  43b12f:	add    DWORD PTR [rsi],edx
  43b131:	add    DWORD PTR [rsi],edx
  43b133:	add    DWORD PTR [rsi],edx
  43b135:	add    DWORD PTR [rcx],ebx
  43b137:	add    DWORD PTR [rsi],edx
  43b139:	add    DWORD PTR [rsi],edx
  43b13b:	add    DWORD PTR [rsi],edx
  43b13d:	add    DWORD PTR [rsi],edx
  43b13f:	add    DWORD PTR [rsi],edx
  43b141:	add    DWORD PTR [rsi],edx
  43b143:	add    DWORD PTR [rsi],edx
  43b145:	add    DWORD PTR [rsi],edx
  43b147:	add    DWORD PTR [rsi],edx
  43b149:	add    DWORD PTR [rsi],edx
  43b14b:	add    DWORD PTR [rsi],edx
  43b14d:	add    DWORD PTR [rsi],edx
  43b14f:	add    DWORD PTR [rsi],edx
  43b151:	add    DWORD PTR [rsi],edx
  43b153:	add    DWORD PTR [rsi],edx
  43b155:	add    DWORD PTR [rsi],edx
  43b157:	add    DWORD PTR [rsi],edx
  43b159:	add    DWORD PTR [rsi],edx
  43b15b:	add    DWORD PTR [rsi],edx
  43b15d:	add    DWORD PTR [rsi],edx
  43b15f:	add    DWORD PTR [rsi],edx
  43b161:	add    DWORD PTR [rsi],edx
  43b163:	add    DWORD PTR [rsi],edx
  43b165:	add    DWORD PTR [rsi],edx
  43b167:	add    DWORD PTR [rsi],edx
  43b169:	add    DWORD PTR [rsi],edx
  43b16b:	add    DWORD PTR [rsi],edx
  43b16d:	add    DWORD PTR [rsi],edx
  43b16f:	add    DWORD PTR [rcx],ebp
  43b171:	add    al,ch
  43b173:	(bad)  
  43b174:	fadd   QWORD PTR [rax]
  43b176:	fadd   QWORD PTR [rax]
  43b178:	fadd   QWORD PTR [rax]
  43b17a:	call   0xffffffffe9429a7d
  43b17f:	(bad)  
  43b180:	call   0xffffffffde429a83
  43b185:	add    al,ch
  43b187:	(bad)  
  43b188:	call   0xffffffffe9429a8b
  43b18d:	(bad)  
  43b18e:	call   0xffffffffe8449091
  43b193:	(bad)  
  43b194:	call   0xffffffffe9429a97
  43b199:	(bad)  
  43b19a:	call   0xffffffffe9429a9d
  43b19f:	(bad)  
  43b1a0:	call   0xffffffffe9429aa3
  43b1a5:	(bad)  
  43b1a6:	call   0xffffffffe9429aa9
  43b1ab:	(bad)  
  43b1ac:	call   0xffffffffe9429aaf
  43b1b1:	(bad)  
  43b1b2:	call   0xffffffffe9429ab5
  43b1b7:	(bad)  
  43b1b8:	call   0xffffffffe9429abb
  43b1bd:	(bad)  
  43b1be:	call   0xffffffffe9429ac1
  43b1c3:	(bad)  
  43b1c4:	call   0xffffffffe9429ac7
  43b1c9:	(bad)  
  43b1ca:	sub    DWORD PTR [rax],eax
  43b1cc:	(bad)  
  43b1cd:	add    DWORD PTR [rdi],edx
  43b1cf:	add    DWORD PTR [rax],ebx
  43b1d1:	add    DWORD PTR [rax],ebx
  43b1d3:	add    DWORD PTR [rsi],edx
  43b1d5:	add    DWORD PTR [rsi],edx
  43b1d7:	add    DWORD PTR [rsi],edx
  43b1d9:	add    DWORD PTR [rsi],edx
  43b1db:	add    DWORD PTR [rsi],edx
  43b1dd:	add    DWORD PTR [rsi],edx
  43b1df:	add    DWORD PTR [rsi],edx
  43b1e1:	add    DWORD PTR [rsi],edx
  43b1e3:	add    DWORD PTR [rsi],edx
  43b1e5:	add    DWORD PTR [rsi],edx
  43b1e7:	add    DWORD PTR [rsi],edx
  43b1e9:	add    DWORD PTR [rsi],esp
  43b1eb:	add    DWORD PTR [rsi],edx
  43b1ed:	add    DWORD PTR [rsi],edx
  43b1ef:	add    DWORD PTR [rsi],edx
  43b1f1:	add    DWORD PTR [rsi],edx
  43b1f3:	add    DWORD PTR [rsi],edx
  43b1f5:	add    DWORD PTR [rsi],edx
  43b1f7:	add    DWORD PTR [rsi],edx
  43b1f9:	add    DWORD PTR [rsi],edx
  43b1fb:	add    DWORD PTR [rsi],edx
  43b1fd:	add    DWORD PTR [rsi],edx
  43b1ff:	add    DWORD PTR [rsi],edx
  43b201:	add    DWORD PTR [rsi],edx
  43b203:	add    DWORD PTR [rsi],edx
  43b205:	add    DWORD PTR [rsi],edx
  43b207:	add    DWORD PTR [rsi],edx
  43b209:	add    DWORD PTR [rsi],edx
  43b20b:	add    DWORD PTR [rsi],edx
  43b20d:	add    DWORD PTR [rsi],edx
  43b20f:	add    DWORD PTR [rsi],edx
  43b211:	add    DWORD PTR [rsi],edx
  43b213:	add    DWORD PTR [rsi],edx
  43b215:	add    DWORD PTR [rsi],edx
  43b217:	add    DWORD PTR [rsi],edx
  43b219:	add    DWORD PTR [rsi],edx
  43b21b:	add    DWORD PTR [rsi],edx
  43b21d:	add    DWORD PTR [rsi],edx
  43b21f:	add    DWORD PTR [rsi],edx
  43b221:	add    DWORD PTR [rsi],edx
  43b223:	add    DWORD PTR [rcx],ebp
  43b225:	add    bl,bh
  43b227:	add    ah,bh
  43b229:	add    BYTE PTR [rbx-0x4ff5d00],ah
  43b22f:	add    bl,bh
  43b231:	add    bl,bh
  43b233:	add    bl,bh
  43b235:	add    bl,bh
  43b237:	add    bl,bh
  43b239:	add    bl,bh
  43b23b:	add    bl,bh
  43b23d:	add    bl,bh
  43b23f:	add    bl,bh
  43b241:	add    bl,bh
  43b243:	add    BYTE PTR [rdx],bl
  43b245:	add    ebx,edi
  43b247:	add    bl,bh
  43b249:	add    bl,bh
  43b24b:	add    bl,bh
  43b24d:	add    bl,bh
  43b24f:	add    bl,bh
  43b251:	add    bl,bh
  43b253:	add    bl,bh
  43b255:	add    bl,bh
  43b257:	add    bl,bh
  43b259:	add    bl,bh
  43b25b:	add    bl,bh
  43b25d:	add    bl,bh
  43b25f:	add    bl,bh
  43b261:	add    bl,bh
  43b263:	add    bl,bh
  43b265:	add    bl,bh
  43b267:	add    bl,bh
  43b269:	add    bl,bh
  43b26b:	add    bl,bh
  43b26d:	add    bl,bh
  43b26f:	add    bl,bh
  43b271:	add    bl,bh
  43b273:	add    bl,bh
  43b275:	add    bl,bh
  43b277:	add    bl,bh
  43b279:	add    bl,bh
  43b27b:	add    bl,bh
  43b27d:	add    BYTE PTR [rcx],ch
  43b27f:	add    ch,ah
  43b281:	(bad)  
  43b282:	in     eax,0xfe
  43b284:	in     eax,0xfe
  43b286:	in     eax,0xfe
  43b288:	in     eax,0xfe
  43b28a:	in     eax,0xfe
  43b28c:	in     eax,0xfe
  43b28e:	in     eax,0xfe
  43b290:	in     eax,0xfe
  43b292:	in     eax,0xfe
  43b294:	in     eax,0xfe
  43b296:	in     eax,0xfe
  43b298:	in     eax,0xfe
  43b29a:	in     eax,0xfe
  43b29c:	in     eax,0xfe
  43b29e:	in     eax,0xfe
  43b2a0:	in     eax,0xfe
  43b2a2:	in     eax,0xfe
  43b2a4:	(bad)  
  43b2a5:	add    DWORD PTR [rdi],esp
  43b2a7:	add    ebp,esp
  43b2a9:	(bad)  
  43b2aa:	in     eax,0xfe
  43b2ac:	in     eax,0xfe
  43b2ae:	(bad)  
  43b2af:	add    DWORD PTR [rdi],esp
  43b2b1:	add    DWORD PTR [rdi],esp
  43b2b3:	add    DWORD PTR [rdi],esp
  43b2b5:	add    DWORD PTR [rdi],esp
  43b2b7:	add    ebp,esp
  43b2b9:	(bad)  
  43b2ba:	in     eax,0xfe
  43b2bc:	in     eax,0xfe
  43b2be:	in     eax,0xfe
  43b2c0:	in     eax,0xfe
  43b2c2:	in     eax,0xfe
  43b2c4:	in     eax,0xfe
  43b2c6:	in     eax,0xfe
  43b2c8:	(bad)  
  43b2c9:	add    DWORD PTR [rdi],esp
  43b2cb:	add    ebp,esp
  43b2cd:	(bad)  
  43b2ce:	in     eax,0xfe
  43b2d0:	in     eax,0xfe
  43b2d2:	in     eax,0xfe
  43b2d4:	in     eax,0xfe
  43b2d6:	in     eax,0xfe
  43b2d8:	sub    DWORD PTR [rax],eax
  43b2da:	in     al,0xfe
  43b2dc:	in     al,0xfe
  43b2de:	in     al,0xfe
  43b2e0:	in     al,0xfe
  43b2e2:	in     al,0xfe
  43b2e4:	in     al,0xfe
  43b2e6:	in     al,0xfe
  43b2e8:	in     al,0xfe
  43b2ea:	in     al,0xfe
  43b2ec:	in     al,0xfe
  43b2ee:	in     al,0xfe
  43b2f0:	in     al,0xfe
  43b2f2:	in     al,0xfe
  43b2f4:	in     al,0xfe
  43b2f6:	in     al,0xfe
  43b2f8:	in     al,0xfe
  43b2fa:	in     al,0xfe
  43b2fc:	in     al,0xfe
  43b2fe:	sub    BYTE PTR [rcx],al
  43b300:	sub    BYTE PTR [rcx],al
  43b302:	in     al,0xfe
  43b304:	in     al,0xfe
  43b306:	in     al,0xfe
  43b308:	sub    BYTE PTR [rcx],al
  43b30a:	sub    BYTE PTR [rcx],al
  43b30c:	sub    BYTE PTR [rcx],al
  43b30e:	sub    BYTE PTR [rcx],al
  43b310:	sub    BYTE PTR [rcx],al
  43b312:	in     al,0xfe
  43b314:	in     al,0xfe
  43b316:	in     al,0xfe
  43b318:	in     al,0xfe
  43b31a:	in     al,0xfe
  43b31c:	in     al,0xfe
  43b31e:	in     al,0xfe
  43b320:	in     al,0xfe
  43b322:	sub    BYTE PTR [rcx],al
  43b324:	sub    BYTE PTR [rcx],al
  43b326:	in     al,0xfe
  43b328:	in     al,0xfe
  43b32a:	in     al,0xfe
  43b32c:	in     al,0xfe
  43b32e:	in     al,0xfe
  43b330:	in     al,0xfe
  43b332:	sub    DWORD PTR [rax],eax
  43b334:	jrcxz  0x43b334
  43b336:	jrcxz  0x43b336
  43b338:	jrcxz  0x43b338
  43b33a:	jrcxz  0x43b33a
  43b33c:	jrcxz  0x43b33c
  43b33e:	jrcxz  0x43b33e
  43b340:	jrcxz  0x43b340
  43b342:	jrcxz  0x43b342
  43b344:	jrcxz  0x43b344
  43b346:	jrcxz  0x43b346
  43b348:	jrcxz  0x43b348
  43b34a:	jrcxz  0x43b34a
  43b34c:	jrcxz  0x43b34c
  43b34e:	jrcxz  0x43b34e
  43b350:	jrcxz  0x43b350
  43b352:	jrcxz  0x43b352
  43b354:	jrcxz  0x43b354
  43b356:	jrcxz  0x43b356
  43b358:	jrcxz  0x43b358
  43b35a:	jrcxz  0x43b35a
  43b35c:	jrcxz  0x43b35c
  43b35e:	jrcxz  0x43b35e
  43b360:	jrcxz  0x43b360
  43b362:	jrcxz  0x43b362
  43b364:	jrcxz  0x43b364
  43b366:	jrcxz  0x43b366
  43b368:	jrcxz  0x43b368
  43b36a:	jrcxz  0x43b36a
  43b36c:	jrcxz  0x43b36c
  43b36e:	jrcxz  0x43b36e
  43b370:	sub    DWORD PTR [rcx],eax
  43b372:	jrcxz  0x43b372
  43b374:	jrcxz  0x43b374
  43b376:	jrcxz  0x43b376
  43b378:	jrcxz  0x43b378
  43b37a:	jrcxz  0x43b37a
  43b37c:	jrcxz  0x43b37c
  43b37e:	jrcxz  0x43b37e
  43b380:	jrcxz  0x43b380
  43b382:	jrcxz  0x43b382
  43b384:	jrcxz  0x43b384
  43b386:	jrcxz  0x43b386
  43b388:	jrcxz  0x43b388
  43b38a:	jrcxz  0x43b38a
  43b38c:	sub    DWORD PTR [rax],eax
  43b38e:	(bad)  
  43b38f:	add    DWORD PTR [rdi],ebx
  43b391:	add    DWORD PTR [rax],esp
  43b393:	add    DWORD PTR [rax],esp
  43b395:	add    DWORD PTR [rsi],ebx
  43b397:	add    DWORD PTR [rsi],ebx
  43b399:	add    DWORD PTR [rsi],ebx
  43b39b:	add    DWORD PTR [rsi],ebx
  43b39d:	add    DWORD PTR [rsi],ebx
  43b39f:	add    DWORD PTR [rsi],ebx
  43b3a1:	add    DWORD PTR [rsi],ebx
  43b3a3:	add    DWORD PTR [rsi],ebx
  43b3a5:	add    DWORD PTR [rsi],ebx
  43b3a7:	add    DWORD PTR [rsi],ebx
  43b3a9:	add    DWORD PTR [rsi],ebx
  43b3ab:	add    DWORD PTR [rcx],esp
  43b3ad:	add    DWORD PTR [rsi],ebx
  43b3af:	add    DWORD PTR [rsi],ebx
  43b3b1:	add    DWORD PTR [rsi],ebx
  43b3b3:	add    DWORD PTR [rsi],ebx
  43b3b5:	add    DWORD PTR [rsi],ebx
  43b3b7:	add    DWORD PTR [rsi],ebx
  43b3b9:	add    DWORD PTR [rsi],ebx
  43b3bb:	add    DWORD PTR [rsi],ebx
  43b3bd:	add    DWORD PTR [rsi],ebx
  43b3bf:	add    DWORD PTR [rsi],ebx
  43b3c1:	add    DWORD PTR [rsi],ebx
  43b3c3:	add    DWORD PTR [rsi],ebx
  43b3c5:	add    DWORD PTR [rsi],ebx
  43b3c7:	add    DWORD PTR [rsi],ebx
  43b3c9:	add    DWORD PTR [rsi],ebx
  43b3cb:	add    DWORD PTR [rsi],ebx
  43b3cd:	add    DWORD PTR [rsi],ebx
  43b3cf:	add    DWORD PTR [rsi],ebx
  43b3d1:	add    DWORD PTR [rsi],ebx
  43b3d3:	add    DWORD PTR [rsi],ebx
  43b3d5:	add    DWORD PTR [rsi],ebx
  43b3d7:	add    DWORD PTR [rsi],ebx
  43b3d9:	add    DWORD PTR [rsi],ebx
  43b3db:	add    DWORD PTR [rsi],ebx
  43b3dd:	add    DWORD PTR [rsi],ebx
  43b3df:	add    DWORD PTR [rsi],ebx
  43b3e1:	add    DWORD PTR [rsi],ebx
  43b3e3:	add    DWORD PTR [rsi],ebx
  43b3e5:	add    DWORD PTR [rcx],ebp
  43b3e7:	add    BYTE PTR [rsi],bl
  43b3e9:	add    DWORD PTR [rdi],ebx
  43b3eb:	add    DWORD PTR [rax],esp
  43b3ed:	add    DWORD PTR [rax],esp
  43b3ef:	add    DWORD PTR [rsi],ebx
  43b3f1:	add    DWORD PTR [rsi],ebx
  43b3f3:	add    DWORD PTR [rsi],ebx
  43b3f5:	add    DWORD PTR [rsi],ebx
  43b3f7:	add    DWORD PTR [rsi],ebx
  43b3f9:	add    DWORD PTR [rsi],ebx
  43b3fb:	add    DWORD PTR [rsi],ebx
  43b3fd:	add    DWORD PTR [rsi],ebx
  43b3ff:	add    DWORD PTR [rsi],ebx
  43b401:	add    DWORD PTR [rsi],ebx
  43b403:	add    DWORD PTR [rsi],ebx
  43b405:	add    DWORD PTR [rcx],esp
  43b407:	add    DWORD PTR [rsi],ebx
  43b409:	add    DWORD PTR [rsi],ebx
  43b40b:	add    DWORD PTR [rsi],ebx
  43b40d:	add    DWORD PTR [rsi],ebx
  43b40f:	add    DWORD PTR [rsi],ebx
  43b411:	add    DWORD PTR [rsi],ebx
  43b413:	add    DWORD PTR [rsi],ebx
  43b415:	add    DWORD PTR [rsi],ebx
  43b417:	add    DWORD PTR [rsi],ebx
  43b419:	add    DWORD PTR [rsi],ebx
  43b41b:	add    DWORD PTR [rsi],ebx
  43b41d:	add    DWORD PTR [rsi],ebx
  43b41f:	add    DWORD PTR [rsi],ebx
  43b421:	add    DWORD PTR [rsi],ebx
  43b423:	add    DWORD PTR [rsi],ebx
  43b425:	add    DWORD PTR [rsi],ebx
  43b427:	add    DWORD PTR [rsi],ebx
  43b429:	add    DWORD PTR [rsi],ebx
  43b42b:	add    DWORD PTR [rsi],ebx
  43b42d:	add    DWORD PTR [rsi],ebx
  43b42f:	add    DWORD PTR [rsi],ebx
  43b431:	add    DWORD PTR [rsi],ebx
  43b433:	add    DWORD PTR [rsi],ebx
  43b435:	add    DWORD PTR [rsi],ebx
  43b437:	add    DWORD PTR [rsi],ebx
  43b439:	add    DWORD PTR [rsi],ebx
  43b43b:	add    DWORD PTR [rsi],ebx
  43b43d:	add    DWORD PTR [rsi],ebx
  43b43f:	add    DWORD PTR [rcx],ebp
  43b441:	add    al,ah
  43b443:	(bad)  
  43b444:	out    0x0,eax
  43b446:	out    0x0,eax
  43b448:	out    0x0,eax
  43b44a:	loopne 0x43b44a
  43b44c:	loopne 0x43b44c
  43b44e:	loopne 0x43b44e
  43b450:	loopne 0x43b450
  43b452:	loopne 0x43b452
  43b454:	fld    QWORD PTR [rax]
  43b456:	loopne 0x43b456
  43b458:	loopne 0x43b458
  43b45a:	loopne 0x43b45a
  43b45c:	loopne 0x43b45c
  43b45e:	loopne 0x43b45e
  43b460:	call   0xffffffffe1429465
  43b465:	(bad)  
  43b466:	loopne 0x43b466
  43b468:	loopne 0x43b468
  43b46a:	loopne 0x43b46a
  43b46c:	loopne 0x43b46c
  43b46e:	loopne 0x43b46e
  43b470:	loopne 0x43b470
  43b472:	loopne 0x43b472
  43b474:	loopne 0x43b474
  43b476:	loopne 0x43b476
  43b478:	loopne 0x43b478
  43b47a:	loopne 0x43b47a
  43b47c:	loopne 0x43b47c
  43b47e:	loopne 0x43b47e
  43b480:	loopne 0x43b480
  43b482:	loopne 0x43b482
  43b484:	loopne 0x43b484
  43b486:	loopne 0x43b486
  43b488:	loopne 0x43b488
  43b48a:	loopne 0x43b48a
  43b48c:	loopne 0x43b48c
  43b48e:	loopne 0x43b48e
  43b490:	loopne 0x43b490
  43b492:	loopne 0x43b492
  43b494:	loopne 0x43b494
  43b496:	loopne 0x43b496
  43b498:	loopne 0x43b498
  43b49a:	sub    DWORD PTR [rax],eax
  43b49c:	(bad)  
  43b49d:	add    DWORD PTR [rdi],ebx
  43b49f:	add    DWORD PTR [rax],esp
  43b4a1:	add    DWORD PTR [rax],esp
  43b4a3:	add    DWORD PTR [rsi],ebx
  43b4a5:	add    DWORD PTR [rsi],ebx
  43b4a7:	add    DWORD PTR [rsi],ebx
  43b4a9:	add    DWORD PTR [rsi],ebx
  43b4ab:	add    DWORD PTR [rsi],ebx
  43b4ad:	add    DWORD PTR [rsi],ebx
  43b4af:	add    DWORD PTR [rsi],ebx
  43b4b1:	add    DWORD PTR [rsi],ebx
  43b4b3:	add    DWORD PTR [rsi],ebx
  43b4b5:	add    DWORD PTR [rsi],ebx
  43b4b7:	add    DWORD PTR [rsi],ebx
  43b4b9:	add    DWORD PTR [rdx],ebp
  43b4bb:	add    DWORD PTR [rsi],ebx
  43b4bd:	add    DWORD PTR [rsi],ebx
  43b4bf:	add    DWORD PTR [rsi],ebx
  43b4c1:	add    DWORD PTR [rsi],ebx
  43b4c3:	add    DWORD PTR [rsi],ebx
  43b4c5:	add    DWORD PTR [rsi],ebx
  43b4c7:	add    DWORD PTR [rsi],ebx
  43b4c9:	add    DWORD PTR [rsi],ebx
  43b4cb:	add    DWORD PTR [rsi],ebx
  43b4cd:	add    DWORD PTR [rsi],ebx
  43b4cf:	add    DWORD PTR [rsi],ebx
  43b4d1:	add    DWORD PTR [rsi],ebx
  43b4d3:	add    DWORD PTR [rsi],ebx
  43b4d5:	add    DWORD PTR [rsi],ebx
  43b4d7:	add    DWORD PTR [rsi],ebx
  43b4d9:	add    DWORD PTR [rsi],ebx
  43b4db:	add    DWORD PTR [rsi],ebx
  43b4dd:	add    DWORD PTR [rsi],ebx
  43b4df:	add    DWORD PTR [rsi],ebx
  43b4e1:	add    DWORD PTR [rsi],ebx
  43b4e3:	add    DWORD PTR [rsi],ebx
  43b4e5:	add    DWORD PTR [rsi],ebx
  43b4e7:	add    DWORD PTR [rsi],ebx
  43b4e9:	add    DWORD PTR [rsi],ebx
  43b4eb:	add    DWORD PTR [rsi],ebx
  43b4ed:	add    DWORD PTR [rsi],ebx
  43b4ef:	add    DWORD PTR [rsi],ebx
  43b4f1:	add    DWORD PTR [rsi],ebx
  43b4f3:	add    DWORD PTR [rcx],ebp
  43b4f5:	add    BYTE PTR [rcx+rax*1],al
  43b4f8:	add    eax,0xb300b301
  43b4fd:	add    BYTE PTR [rcx+rax*1],al
  43b500:	add    al,0x1
  43b502:	add    al,0x1
  43b504:	add    al,0x1
  43b506:	add    al,0x1
  43b508:	add    al,0x1
  43b50a:	add    al,0x1
  43b50c:	add    al,0x1
  43b50e:	add    al,0x1
  43b510:	add    al,0x1
  43b512:	add    al,0x1
  43b514:	and    al,BYTE PTR [rcx]
  43b516:	add    al,0x1
  43b518:	add    al,0x1
  43b51a:	add    al,0x1
  43b51c:	add    al,0x1
  43b51e:	add    al,0x1
  43b520:	add    al,0x1
  43b522:	add    al,0x1
  43b524:	add    al,0x1
  43b526:	add    al,0x1
  43b528:	add    al,0x1
  43b52a:	add    al,0x1
  43b52c:	add    al,0x1
  43b52e:	add    al,0x1
  43b530:	add    al,0x1
  43b532:	add    al,0x1
  43b534:	add    al,0x1
  43b536:	add    al,0x1
  43b538:	add    al,0x1
  43b53a:	add    al,0x1
  43b53c:	add    al,0x1
  43b53e:	add    al,0x1
  43b540:	add    al,0x1
  43b542:	add    al,0x1
  43b544:	add    al,0x1
  43b546:	add    al,0x1
  43b548:	add    al,0x1
  43b54a:	add    al,0x1
  43b54c:	add    al,0x1
  43b54e:	sub    DWORD PTR [rax],eax
  43b550:	(bad)  
  43b552:	(bad)  
  43b554:	(bad)  
  43b556:	(bad)  
  43b558:	(bad)  
  43b55a:	(bad)  
  43b55c:	(bad)  
  43b55e:	(bad)  
  43b560:	(bad)  
  43b562:	(bad)  
  43b564:	(bad)  
  43b566:	(bad)  
  43b568:	(bad)  
  43b56a:	(bad)  
  43b56c:	(bad)  
  43b56e:	(bad)  
  43b570:	(bad)  
  43b572:	(bad)  
  43b574:	(bad)  
  43b576:	(bad)  
  43b578:	(bad)  
  43b57a:	(bad)  
  43b57c:	(bad)  
  43b57e:	(bad)  
  43b580:	(bad)  
  43b582:	(bad)  
  43b584:	(bad)  
  43b586:	(bad)  
  43b588:	(bad)  
  43b58a:	(bad)  
  43b58c:	sub    eax,DWORD PTR [rcx]
  43b58e:	(bad)  
  43b590:	(bad)  
  43b592:	(bad)  
  43b594:	(bad)  
  43b596:	(bad)  
  43b598:	(bad)  
  43b59a:	(bad)  
  43b59c:	(bad)  
  43b59e:	(bad)  
  43b5a0:	(bad)  
  43b5a2:	(bad)  
  43b5a4:	(bad)  
  43b5a6:	(bad)  
  43b5a8:	sub    DWORD PTR [rax],eax
  43b5aa:	or     al,0x1
  43b5ac:	or     eax,0xe010e01
  43b5b1:	add    DWORD PTR [rcx+rax*1],ecx
  43b5b4:	or     al,0x1
  43b5b6:	or     al,0x1
  43b5b8:	or     al,0x1
  43b5ba:	or     al,0x1
  43b5bc:	or     al,0x1
  43b5be:	or     al,0x1
  43b5c0:	or     al,0x1
  43b5c2:	or     al,0x1
  43b5c4:	or     al,0x1
  43b5c6:	or     al,0x1
  43b5c8:	and    al,0x1
  43b5ca:	or     al,0x1
  43b5cc:	or     al,0x1
  43b5ce:	or     al,0x1
  43b5d0:	or     al,0x1
  43b5d2:	or     al,0x1
  43b5d4:	or     al,0x1
  43b5d6:	or     al,0x1
  43b5d8:	or     al,0x1
  43b5da:	or     al,0x1
  43b5dc:	or     al,0x1
  43b5de:	or     al,0x1
  43b5e0:	or     al,0x1
  43b5e2:	or     al,0x1
  43b5e4:	or     al,0x1
  43b5e6:	or     al,0x1
  43b5e8:	or     al,0x1
  43b5ea:	or     al,0x1
  43b5ec:	or     al,0x1
  43b5ee:	or     al,0x1
  43b5f0:	or     al,0x1
  43b5f2:	or     al,0x1
  43b5f4:	or     al,0x1
  43b5f6:	or     al,0x1
  43b5f8:	or     al,0x1
  43b5fa:	or     al,0x1
  43b5fc:	or     al,0x1
  43b5fe:	or     al,0x1
  43b600:	or     al,0x1
  43b602:	sub    DWORD PTR [rax],eax
  43b604:	adc    DWORD PTR [rcx],eax
  43b606:	adc    al,BYTE PTR [rcx]
  43b608:	adc    eax,DWORD PTR [rcx]
  43b60a:	adc    eax,DWORD PTR [rcx]
  43b60c:	adc    DWORD PTR [rcx],eax
  43b60e:	adc    DWORD PTR [rcx],eax
  43b610:	adc    DWORD PTR [rcx],eax
  43b612:	adc    DWORD PTR [rcx],eax
  43b614:	adc    DWORD PTR [rcx],eax
  43b616:	adc    DWORD PTR [rcx],eax
  43b618:	adc    DWORD PTR [rcx],eax
  43b61a:	adc    DWORD PTR [rcx],eax
  43b61c:	adc    DWORD PTR [rcx],eax
  43b61e:	adc    DWORD PTR [rcx],eax
  43b620:	adc    DWORD PTR [rcx],eax
  43b622:	and    eax,0x11011101
  43b627:	add    DWORD PTR [rcx],edx
  43b629:	add    DWORD PTR [rcx],edx
  43b62b:	add    DWORD PTR [rcx],edx
  43b62d:	add    DWORD PTR [rcx],edx
  43b62f:	add    DWORD PTR [rcx],edx
  43b631:	add    DWORD PTR [rcx],edx
  43b633:	add    DWORD PTR [rcx],edx
  43b635:	add    DWORD PTR [rcx],edx
  43b637:	add    DWORD PTR [rcx],edx
  43b639:	add    DWORD PTR [rcx],edx
  43b63b:	add    DWORD PTR [rcx],edx
  43b63d:	add    DWORD PTR [rcx],edx
  43b63f:	add    DWORD PTR [rcx],edx
  43b641:	add    DWORD PTR [rcx],edx
  43b643:	add    DWORD PTR [rcx],edx
  43b645:	add    DWORD PTR [rcx],edx
  43b647:	add    DWORD PTR [rcx],edx
  43b649:	add    DWORD PTR [rcx],edx
  43b64b:	add    DWORD PTR [rcx],edx
  43b64d:	add    DWORD PTR [rcx],edx
  43b64f:	add    DWORD PTR [rcx],edx
  43b651:	add    DWORD PTR [rcx],edx
  43b653:	add    DWORD PTR [rcx],edx
  43b655:	add    DWORD PTR [rcx],edx
  43b657:	add    DWORD PTR [rcx],edx
  43b659:	add    DWORD PTR [rcx],edx
  43b65b:	add    DWORD PTR [rcx],ebp
  43b65d:	add    BYTE PTR [rsi],dl
  43b65f:	add    DWORD PTR [rdi],edx
  43b661:	add    DWORD PTR [rax],ebx
  43b663:	add    DWORD PTR [rax],ebx
  43b665:	add    DWORD PTR [rsi],edx
  43b667:	add    DWORD PTR [rsi],edx
  43b669:	add    DWORD PTR [rsi],edx
  43b66b:	add    DWORD PTR [rsi],edx
  43b66d:	add    DWORD PTR [rsi],edx
  43b66f:	add    DWORD PTR [rsi],edx
  43b671:	add    DWORD PTR [rsi],edx
  43b673:	add    DWORD PTR [rsi],edx
  43b675:	add    DWORD PTR [rsi],edx
  43b677:	add    DWORD PTR [rsi],edx
  43b679:	add    DWORD PTR [rsi],edx
  43b67b:	add    DWORD PTR [rsi],esp
  43b67d:	add    DWORD PTR [rsi],edx
  43b67f:	add    DWORD PTR [rsi],edx
  43b681:	add    DWORD PTR [rsi],edx
  43b683:	add    DWORD PTR [rsi],edx
  43b685:	add    DWORD PTR [rsi],edx
  43b687:	add    DWORD PTR [rsi],edx
  43b689:	add    DWORD PTR [rsi],edx
  43b68b:	add    DWORD PTR [rsi],edx
  43b68d:	add    DWORD PTR [rsi],edx
  43b68f:	add    DWORD PTR [rsi],edx
  43b691:	add    DWORD PTR [rsi],edx
  43b693:	add    DWORD PTR [rsi],edx
  43b695:	add    DWORD PTR [rsi],edx
  43b697:	add    DWORD PTR [rsi],edx
  43b699:	add    DWORD PTR [rsi],edx
  43b69b:	add    DWORD PTR [rsi],edx
  43b69d:	add    DWORD PTR [rsi],edx
  43b69f:	add    DWORD PTR [rsi],edx
  43b6a1:	add    DWORD PTR [rsi],edx
  43b6a3:	add    DWORD PTR [rsi],edx
  43b6a5:	add    DWORD PTR [rsi],edx
  43b6a7:	add    DWORD PTR [rsi],edx
  43b6a9:	add    DWORD PTR [rsi],edx
  43b6ab:	add    DWORD PTR [rsi],edx
  43b6ad:	add    DWORD PTR [rsi],edx
  43b6af:	add    DWORD PTR [rsi],edx
  43b6b1:	add    DWORD PTR [rsi],edx
  43b6b3:	add    DWORD PTR [rsi],edx
  43b6b5:	add    DWORD PTR [rcx],ebp
  43b6b7:	add    cl,bl
  43b6b9:	(bad)  
  43b6ba:	fsin   
  43b6bc:	fsin   
  43b6be:	fsin   
  43b6c0:	fsin   
  43b6c2:	fsin   
  43b6c4:	fsin   
  43b6c6:	fsin   
  43b6c8:	fsin   
  43b6ca:	fsin   
  43b6cc:	fsin   
  43b6ce:	fsin   
  43b6d0:	fsin   
  43b6d2:	fsin   
  43b6d4:	fsin   
  43b6d6:	fsin   
  43b6d8:	fsin   
  43b6da:	fsin   
  43b6dc:	sub    al,0x1
  43b6de:	sub    al,0x1
  43b6e0:	fsin   
  43b6e2:	fsin   
  43b6e4:	fsin   
  43b6e6:	sub    al,0x1
  43b6e8:	sub    al,0x1
  43b6ea:	sub    al,0x1
  43b6ec:	sub    al,0x1
  43b6ee:	sub    al,0x1
  43b6f0:	fsin   
  43b6f2:	fsin   
  43b6f4:	fsin   
  43b6f6:	fsin   
  43b6f8:	fsin   
  43b6fa:	fsin   
  43b6fc:	fsin   
  43b6fe:	fsin   
  43b700:	sub    al,0x1
  43b702:	sub    al,0x1
  43b704:	fsin   
  43b706:	fsin   
  43b708:	fsin   
  43b70a:	fsin   
  43b70c:	fsin   
  43b70e:	fsin   
  43b710:	sub    DWORD PTR [rax],eax
  43b712:	fdivr  st,st(6)
  43b714:	fdivr  st,st(6)
  43b716:	fdivr  st,st(6)
  43b718:	fdivr  st,st(6)
  43b71a:	fdivr  st,st(6)
  43b71c:	fdivr  st,st(6)
  43b71e:	fdivr  st,st(6)
  43b720:	fdivr  st,st(6)
  43b722:	fdivr  st,st(6)
  43b724:	fdivr  st,st(6)
  43b726:	fdivr  st,st(6)
  43b728:	fdivr  st,st(6)
  43b72a:	fdivr  st,st(6)
  43b72c:	fdivr  st,st(6)
  43b72e:	fdivr  st,st(6)
  43b730:	fdivr  st,st(6)
  43b732:	fdivr  st,st(6)
  43b734:	fdivr  st,st(6)
  43b736:	fdivr  st,st(6)
  43b738:	fdivr  st,st(6)
  43b73a:	fdivr  st,st(6)
  43b73c:	fdivr  st,st(6)
  43b73e:	fdivr  st,st(6)
  43b740:	fdivr  st,st(6)
  43b742:	fdivr  st,st(6)
  43b744:	fdivr  st,st(6)
  43b746:	fdivr  st,st(6)
  43b748:	fdivr  st,st(6)
  43b74a:	fdivr  st,st(6)
  43b74c:	fdivr  st,st(6)
  43b74e:	fdivr  st,st(6)
  43b750:	fdivr  st,st(6)
  43b752:	fdivr  st,st(6)
  43b754:	fdivr  st,st(6)
  43b756:	fdivr  st,st(6)
  43b758:	fdivr  st,st(6)
  43b75a:	fdivr  st,st(6)
  43b75c:	fdivr  st,st(6)
  43b75e:	fdivr  st,st(6)
  43b760:	fdivr  st,st(6)
  43b762:	fdivr  st,st(6)
  43b764:	fdivr  st,st(6)
  43b766:	fdivr  st,st(6)
  43b768:	fdivr  st,st(6)
  43b76a:	sub    DWORD PTR [rax],eax
  43b76c:	xlat   BYTE PTR ds:[rbx]
  43b76d:	(bad)  
  43b76e:	xlat   BYTE PTR ds:[rbx]
  43b76f:	(bad)  
  43b770:	xlat   BYTE PTR ds:[rbx]
  43b771:	(bad)  
  43b772:	xlat   BYTE PTR ds:[rbx]
  43b773:	(bad)  
  43b774:	xlat   BYTE PTR ds:[rbx]
  43b775:	(bad)  
  43b776:	xlat   BYTE PTR ds:[rbx]
  43b777:	(bad)  
  43b778:	xlat   BYTE PTR ds:[rbx]
  43b779:	(bad)  
  43b77a:	xlat   BYTE PTR ds:[rbx]
  43b77b:	(bad)  
  43b77c:	xlat   BYTE PTR ds:[rbx]
  43b77d:	(bad)  
  43b77e:	xlat   BYTE PTR ds:[rbx]
  43b77f:	(bad)  
  43b780:	xlat   BYTE PTR ds:[rbx]
  43b781:	(bad)  
  43b782:	xlat   BYTE PTR ds:[rbx]
  43b783:	(bad)  
  43b784:	xlat   BYTE PTR ds:[rbx]
  43b785:	(bad)  
  43b786:	xlat   BYTE PTR ds:[rbx]
  43b787:	(bad)  
  43b788:	xlat   BYTE PTR ds:[rbx]
  43b789:	(bad)  
  43b78a:	xlat   BYTE PTR ds:[rbx]
  43b78b:	(bad)  
  43b78c:	xlat   BYTE PTR ds:[rbx]
  43b78d:	(bad)  
  43b78e:	xlat   BYTE PTR ds:[rbx]
  43b78f:	(bad)  
  43b790:	xlat   BYTE PTR ds:[rbx]
  43b791:	(bad)  
  43b792:	xlat   BYTE PTR ds:[rbx]
  43b793:	(bad)  
  43b794:	xlat   BYTE PTR ds:[rbx]
  43b795:	(bad)  
  43b796:	xlat   BYTE PTR ds:[rbx]
  43b797:	(bad)  
  43b798:	xlat   BYTE PTR ds:[rbx]
  43b799:	(bad)  
  43b79a:	xlat   BYTE PTR ds:[rbx]
  43b79b:	(bad)  
  43b79c:	xlat   BYTE PTR ds:[rbx]
  43b79d:	(bad)  
  43b79e:	xlat   BYTE PTR ds:[rbx]
  43b79f:	(bad)  
  43b7a0:	xlat   BYTE PTR ds:[rbx]
  43b7a1:	(bad)  
  43b7a2:	sub    eax,0xd7fed701
  43b7a7:	(bad)  
  43b7a8:	xlat   BYTE PTR ds:[rbx]
  43b7a9:	(bad)  
  43b7aa:	xlat   BYTE PTR ds:[rbx]
  43b7ab:	(bad)  
  43b7ac:	xlat   BYTE PTR ds:[rbx]
  43b7ad:	(bad)  
  43b7ae:	xlat   BYTE PTR ds:[rbx]
  43b7af:	(bad)  
  43b7b0:	xlat   BYTE PTR ds:[rbx]
  43b7b1:	(bad)  
  43b7b2:	xlat   BYTE PTR ds:[rbx]
  43b7b3:	(bad)  
  43b7b4:	xlat   BYTE PTR ds:[rbx]
  43b7b5:	(bad)  
  43b7b6:	xlat   BYTE PTR ds:[rbx]
  43b7b7:	(bad)  
  43b7b8:	xlat   BYTE PTR ds:[rbx]
  43b7b9:	(bad)  
  43b7ba:	xlat   BYTE PTR ds:[rbx]
  43b7bb:	(bad)  
  43b7bc:	xlat   BYTE PTR ds:[rbx]
  43b7bd:	(bad)  
  43b7be:	xlat   BYTE PTR ds:[rbx]
  43b7bf:	(bad)  
  43b7c0:	xlat   BYTE PTR ds:[rbx]
  43b7c1:	(bad)  
  43b7c2:	xlat   BYTE PTR ds:[rbx]
  43b7c3:	(bad)  
  43b7c4:	sub    DWORD PTR [rax],eax
  43b7c6:	(bad)  
  43b7c7:	add    DWORD PTR [rdi],ebx
  43b7c9:	add    DWORD PTR [rax],esp
  43b7cb:	add    DWORD PTR [rax],esp
  43b7cd:	add    DWORD PTR [rsi],ebx
  43b7cf:	add    DWORD PTR [rsi],ebx
  43b7d1:	add    DWORD PTR [rsi],ebx
  43b7d3:	add    DWORD PTR [rsi],ebx
  43b7d5:	add    DWORD PTR [rsi],ebx
  43b7d7:	add    DWORD PTR [rsi],ebx
  43b7d9:	add    DWORD PTR [rsi],ebx
  43b7db:	add    DWORD PTR [rsi],ebx
  43b7dd:	add    DWORD PTR [rsi],ebx
  43b7df:	add    DWORD PTR [rsi],ebx
  43b7e1:	add    DWORD PTR [rsi],ebx
  43b7e3:	add    DWORD PTR [rdx],ebp
  43b7e5:	add    DWORD PTR [rsi],ebx
  43b7e7:	add    DWORD PTR [rsi],ebx
  43b7e9:	add    DWORD PTR [rsi],ebx
  43b7eb:	add    DWORD PTR [rsi],ebx
  43b7ed:	add    DWORD PTR [rsi],ebx
  43b7ef:	add    DWORD PTR [rsi],ebx
  43b7f1:	add    DWORD PTR [rsi],ebx
  43b7f3:	add    DWORD PTR [rsi],ebx
  43b7f5:	add    DWORD PTR [rsi],ebx
  43b7f7:	add    DWORD PTR [rsi],ebx
  43b7f9:	add    DWORD PTR [rsi],ebx
  43b7fb:	add    DWORD PTR [rsi],ebx
  43b7fd:	add    DWORD PTR [rsi],ebx
  43b7ff:	add    DWORD PTR [rsi],ebx
  43b801:	add    DWORD PTR [rsi],ebx
  43b803:	add    DWORD PTR [rsi],ebx
  43b805:	add    DWORD PTR [rsi],ebx
  43b807:	add    DWORD PTR [rsi],ebx
  43b809:	add    DWORD PTR [rsi],ebx
  43b80b:	add    DWORD PTR [rsi],ebx
  43b80d:	add    DWORD PTR [rsi],ebx
  43b80f:	add    DWORD PTR [rsi],ebx
  43b811:	add    DWORD PTR [rsi],ebx
  43b813:	add    DWORD PTR [rsi],ebx
  43b815:	add    DWORD PTR [rsi],ebx
  43b817:	add    DWORD PTR [rsi],ebx
  43b819:	add    DWORD PTR [rsi],ebx
  43b81b:	add    DWORD PTR [rsi],ebx
  43b81d:	add    DWORD PTR [rcx],ebp
  43b81f:	add    ch,dl
  43b821:	(bad)  
  43b822:	(bad)  
  43b823:	(bad)  
  43b824:	(bad)  
  43b825:	(bad)  
  43b826:	(bad)  
  43b827:	(bad)  
  43b828:	(bad)  
  43b829:	(bad)  
  43b82a:	(bad)  
  43b82b:	(bad)  
  43b82c:	(bad)  
  43b82d:	(bad)  
  43b82e:	(bad)  
  43b82f:	(bad)  
  43b830:	(bad)  
  43b831:	(bad)  
  43b832:	(bad)  
  43b833:	(bad)  
  43b834:	(bad)  
  43b835:	(bad)  
  43b836:	(bad)  
  43b837:	(bad)  
  43b838:	(bad)  
  43b839:	(bad)  
  43b83a:	(bad)  
  43b83b:	(bad)  
  43b83c:	(bad)  
  43b83d:	(bad)  
  43b83e:	(bad)  
  43b83f:	(bad)  
  43b840:	(bad)  
  43b841:	(bad)  
  43b842:	(bad)  
  43b843:	(bad)  
  43b844:	(bad)  
  43b845:	(bad)  
  43b846:	(bad)  
  43b847:	(bad)  
  43b848:	(bad)  
  43b849:	(bad)  
  43b84a:	(bad)  
  43b84b:	(bad)  
  43b84c:	(bad)  
  43b84d:	(bad)  
  43b84e:	(bad)  
  43b84f:	(bad)  
  43b850:	(bad)  
  43b851:	(bad)  
  43b852:	(bad)  
  43b853:	(bad)  
  43b854:	(bad)  
  43b855:	(bad)  
  43b856:	cs add ebp,edx
  43b859:	(bad)  
  43b85a:	(bad)  
  43b85b:	(bad)  
  43b85c:	(bad)  
  43b85d:	(bad)  
  43b85e:	(bad)  
  43b85f:	(bad)  
  43b860:	(bad)  
  43b861:	(bad)  
  43b862:	(bad)  
  43b863:	(bad)  
  43b864:	(bad)  
  43b865:	(bad)  
  43b866:	(bad)  
  43b867:	(bad)  
  43b868:	(bad)  
  43b869:	(bad)  
  43b86a:	(bad)  
  43b86b:	(bad)  
  43b86c:	(bad)  
  43b86d:	(bad)  
  43b86e:	(bad)  
  43b86f:	(bad)  
  43b870:	(bad)  
  43b871:	(bad)  
  43b872:	(bad)  
  43b873:	(bad)  
  43b874:	(bad)  
  43b875:	(bad)  
  43b876:	(bad)  
  43b877:	(bad)  
  43b878:	sub    DWORD PTR [rax],eax
  43b87a:	(bad)  
  43b87b:	(bad)  
  43b87c:	(bad)  
  43b87d:	(bad)  
  43b87e:	(bad)  
  43b87f:	(bad)  
  43b880:	(bad)  
  43b881:	(bad)  
  43b882:	(bad)  
  43b883:	(bad)  
  43b884:	(bad)  
  43b885:	(bad)  
  43b886:	(bad)  
  43b887:	(bad)  
  43b888:	(bad)  
  43b889:	(bad)  
  43b88a:	(bad)  
  43b88b:	(bad)  
  43b88c:	(bad)  
  43b88d:	(bad)  
  43b88e:	(bad)  
  43b88f:	(bad)  
  43b890:	(bad)  
  43b891:	(bad)  
  43b892:	(bad)  
  43b893:	(bad)  
  43b894:	(bad)  
  43b895:	(bad)  
  43b896:	(bad)  
  43b897:	(bad)  
  43b898:	(bad)  
  43b899:	(bad)  
  43b89a:	(bad)  
  43b89b:	(bad)  
  43b89c:	(bad)  
  43b89d:	(bad)  
  43b89e:	(bad)  
  43b89f:	add    DWORD PTR [rdi],ebp
  43b8a1:	add    esp,edx
  43b8a3:	(bad)  
  43b8a4:	(bad)  
  43b8a5:	(bad)  
  43b8a6:	(bad)  
  43b8a7:	(bad)  
  43b8a8:	(bad)  
  43b8a9:	add    DWORD PTR [rdi],ebp
  43b8ab:	add    DWORD PTR [rdi],ebp
  43b8ad:	add    DWORD PTR [rdi],ebp
  43b8af:	add    DWORD PTR [rdi],ebp
  43b8b1:	add    esp,edx
  43b8b3:	(bad)  
  43b8b4:	(bad)  
  43b8b5:	(bad)  
  43b8b6:	(bad)  
  43b8b7:	(bad)  
  43b8b8:	(bad)  
  43b8b9:	(bad)  
  43b8ba:	(bad)  
  43b8bb:	(bad)  
  43b8bc:	(bad)  
  43b8bd:	(bad)  
  43b8be:	(bad)  
  43b8bf:	(bad)  
  43b8c0:	(bad)  
  43b8c1:	(bad)  
  43b8c2:	(bad)  
  43b8c3:	add    DWORD PTR [rdi],ebp
  43b8c5:	add    esp,edx
  43b8c7:	(bad)  
  43b8c8:	(bad)  
  43b8c9:	(bad)  
  43b8ca:	(bad)  
  43b8cb:	(bad)  
  43b8cc:	(bad)  
  43b8cd:	(bad)  
  43b8ce:	(bad)  
  43b8cf:	(bad)  
  43b8d0:	(bad)  
  43b8d1:	(bad)  
  43b8d2:	sub    DWORD PTR [rax],eax
  43b8d4:	sar    esi,cl
  43b8d6:	xor    BYTE PTR [rcx],al
  43b8d8:	xor    BYTE PTR [rcx],al
  43b8da:	xor    BYTE PTR [rcx],al
  43b8dc:	sar    esi,cl
  43b8de:	sar    esi,cl
  43b8e0:	sar    esi,cl
  43b8e2:	sar    esi,cl
  43b8e4:	sar    esi,cl
  43b8e6:	xor    DWORD PTR [rcx],eax
  43b8e8:	sar    esi,cl
  43b8ea:	sar    esi,cl
  43b8ec:	sar    esi,cl
  43b8ee:	sar    esi,cl
  43b8f0:	sar    esi,cl
  43b8f2:	xor    al,BYTE PTR [rcx]
  43b8f4:	sar    esi,cl
  43b8f6:	sar    esi,cl
  43b8f8:	sar    esi,cl
  43b8fa:	sar    esi,cl
  43b8fc:	sar    esi,cl
  43b8fe:	sar    esi,cl
  43b900:	sar    esi,cl
  43b902:	sar    esi,cl
  43b904:	sar    esi,cl
  43b906:	sar    esi,cl
  43b908:	sar    esi,cl
  43b90a:	sar    esi,cl
  43b90c:	sar    esi,cl
  43b90e:	sar    esi,cl
  43b910:	sar    esi,cl
  43b912:	sar    esi,cl
  43b914:	sar    esi,cl
  43b916:	sar    esi,cl
  43b918:	sar    esi,cl
  43b91a:	sar    esi,cl
  43b91c:	sar    esi,cl
  43b91e:	sar    esi,cl
  43b920:	sar    esi,cl
  43b922:	sar    esi,cl
  43b924:	sar    esi,cl
  43b926:	sar    esi,cl
  43b928:	sar    esi,cl
  43b92a:	sar    esi,cl
  43b92c:	sub    DWORD PTR [rax],eax
  43b92e:	sar    dh,cl
  43b930:	xor    eax,DWORD PTR [rcx]
  43b932:	xor    eax,DWORD PTR [rcx]
  43b934:	xor    eax,DWORD PTR [rcx]
  43b936:	sar    dh,cl
  43b938:	sar    dh,cl
  43b93a:	sar    dh,cl
  43b93c:	sar    dh,cl
  43b93e:	sar    dh,cl
  43b940:	xor    al,0x1
  43b942:	sar    dh,cl
  43b944:	sar    dh,cl
  43b946:	sar    dh,cl
  43b948:	sar    dh,cl
  43b94a:	sar    dh,cl
  43b94c:	xor    eax,0xd2fed201
  43b951:	(bad)  
  43b952:	sar    dh,cl
  43b954:	sar    dh,cl
  43b956:	sar    dh,cl
  43b958:	sar    dh,cl
  43b95a:	sar    dh,cl
  43b95c:	sar    dh,cl
  43b95e:	sar    dh,cl
  43b960:	sar    dh,cl
  43b962:	sar    dh,cl
  43b964:	sar    dh,cl
  43b966:	sar    dh,cl
  43b968:	sar    dh,cl
  43b96a:	sar    dh,cl
  43b96c:	sar    dh,cl
  43b96e:	sar    dh,cl
  43b970:	sar    dh,cl
  43b972:	sar    dh,cl
  43b974:	sar    dh,cl
  43b976:	sar    dh,cl
  43b978:	sar    dh,cl
  43b97a:	sar    dh,cl
  43b97c:	sar    dh,cl
  43b97e:	sar    dh,cl
  43b980:	sar    dh,cl
  43b982:	sar    dh,cl
  43b984:	sar    dh,cl
  43b986:	sub    DWORD PTR [rax],eax
  43b988:	sar    esi,1
  43b98a:	sar    esi,1
  43b98c:	sar    esi,1
  43b98e:	sar    esi,1
  43b990:	sar    esi,1
  43b992:	sar    esi,1
  43b994:	sar    esi,1
  43b996:	sar    esi,1
  43b998:	sar    esi,1
  43b99a:	sar    esi,1
  43b99c:	sar    esi,1
  43b99e:	sar    esi,1
  43b9a0:	sar    esi,1
  43b9a2:	sar    esi,1
  43b9a4:	sar    esi,1
  43b9a6:	sar    esi,1
  43b9a8:	sar    esi,1
  43b9aa:	sar    esi,1
  43b9ac:	add    DWORD PTR ss:[rsi],esi
  43b9af:	add    ecx,edx
  43b9b1:	(bad)  
  43b9b2:	sar    esi,1
  43b9b4:	sar    esi,1
  43b9b6:	add    DWORD PTR ss:[rsi],esi
  43b9b9:	add    DWORD PTR [rsi],esi
  43b9bb:	add    DWORD PTR [rsi],esi
  43b9bd:	add    DWORD PTR [rsi],esi
  43b9bf:	add    ecx,edx
  43b9c1:	(bad)  
  43b9c2:	sar    esi,1
  43b9c4:	sar    esi,1
  43b9c6:	sar    esi,1
  43b9c8:	sar    esi,1
  43b9ca:	sar    esi,1
  43b9cc:	sar    esi,1
  43b9ce:	sar    esi,1
  43b9d0:	add    DWORD PTR ss:[rsi],esi
  43b9d3:	add    ecx,edx
  43b9d5:	(bad)  
  43b9d6:	sar    esi,1
  43b9d8:	sar    esi,1
  43b9da:	sar    esi,1
  43b9dc:	sar    esi,1
  43b9de:	sar    esi,1
  43b9e0:	sub    DWORD PTR [rax],eax
  43b9e2:	sar    dh,1
  43b9e4:	xor    BYTE PTR [rcx],al
  43b9e6:	xor    BYTE PTR [rcx],al
  43b9e8:	xor    BYTE PTR [rcx],al
  43b9ea:	sar    dh,1
  43b9ec:	sar    dh,1
  43b9ee:	sar    dh,1
  43b9f0:	sar    dh,1
  43b9f2:	sar    dh,1
  43b9f4:	xor    DWORD PTR [rcx],eax
  43b9f6:	sar    dh,1
  43b9f8:	sar    dh,1
  43b9fa:	sar    dh,1
  43b9fc:	sar    dh,1
  43b9fe:	sar    dh,1
  43ba00:	xor    al,BYTE PTR [rcx]
  43ba02:	sar    dh,1
  43ba04:	sar    dh,1
  43ba06:	sar    dh,1
  43ba08:	sar    dh,1
  43ba0a:	sar    dh,1
  43ba0c:	sar    dh,1
  43ba0e:	sar    dh,1
  43ba10:	sar    dh,1
  43ba12:	sar    dh,1
  43ba14:	sar    dh,1
  43ba16:	sar    dh,1
  43ba18:	sar    dh,1
  43ba1a:	sar    dh,1
  43ba1c:	sar    dh,1
  43ba1e:	sar    dh,1
  43ba20:	sar    dh,1
  43ba22:	sar    dh,1
  43ba24:	sar    dh,1
  43ba26:	sar    dh,1
  43ba28:	sar    dh,1
  43ba2a:	sar    dh,1
  43ba2c:	sar    dh,1
  43ba2e:	sar    dh,1
  43ba30:	sar    dh,1
  43ba32:	sar    dh,1
  43ba34:	sar    dh,1
  43ba36:	sar    dh,1
  43ba38:	sar    dh,1
  43ba3a:	sub    DWORD PTR [rax],eax
  43ba3c:	(bad)  
  43ba3d:	add    DWORD PTR [rdi],esi
  43ba3f:	add    DWORD PTR [rdi],esi
  43ba41:	add    DWORD PTR [rdi],esi
  43ba43:	add    DWORD PTR [rdi],esi
  43ba45:	add    DWORD PTR [rdi],esi
  43ba47:	add    DWORD PTR [rdi],esi
  43ba49:	add    DWORD PTR [rdi],esi
  43ba4b:	add    DWORD PTR [rdi],esi
  43ba4d:	add    edi,ecx
  43ba4f:	(bad)  
  43ba50:	(bad)  
  43ba51:	add    DWORD PTR [rdi],esi
  43ba53:	add    DWORD PTR [rdi],esi
  43ba55:	add    DWORD PTR [rdi],esi
  43ba57:	add    DWORD PTR [rdi],esi
  43ba59:	add    DWORD PTR [rdi],esi
  43ba5b:	add    DWORD PTR [rdi],esi
  43ba5d:	add    DWORD PTR [rdi],esi
  43ba5f:	add    DWORD PTR [rdi],esi
  43ba61:	add    DWORD PTR [rdi],esi
  43ba63:	add    DWORD PTR [rdi],esi
  43ba65:	add    DWORD PTR [rdi],esi
  43ba67:	add    DWORD PTR [rdi],esi
  43ba69:	add    DWORD PTR [rdi],esi
  43ba6b:	add    DWORD PTR [rdi],esi
  43ba6d:	add    DWORD PTR [rdi],esi
  43ba6f:	add    DWORD PTR [rdi],esi
  43ba71:	add    DWORD PTR [rdi],esi
  43ba73:	add    DWORD PTR [rdi],esi
  43ba75:	add    DWORD PTR [rdi],esi
  43ba77:	add    DWORD PTR [rdi],esi
  43ba79:	add    DWORD PTR [rdi],esi
  43ba7b:	add    DWORD PTR [rdi],esi
  43ba7d:	add    DWORD PTR [rdi],esi
  43ba7f:	add    DWORD PTR [rdi],esi
  43ba81:	add    DWORD PTR [rdi],esi
  43ba83:	add    DWORD PTR [rdi],esi
  43ba85:	add    DWORD PTR [rdi],esi
  43ba87:	add    DWORD PTR [rdi],esi
  43ba89:	add    DWORD PTR [rdi],esi
  43ba8b:	add    DWORD PTR [rdi],esi
  43ba8d:	add    DWORD PTR [rdi],esi
  43ba8f:	add    DWORD PTR [rdi],esi
  43ba91:	add    DWORD PTR [rdi],esi
  43ba93:	add    DWORD PTR [rcx],ebp
  43ba95:	add    dh,cl
  43ba97:	dec    dh
  43ba99:	dec    dh
  43ba9b:	dec    dh
  43ba9d:	dec    dh
  43ba9f:	dec    dh
  43baa1:	dec    dh
  43baa3:	dec    dh
  43baa5:	dec    dh
  43baa7:	dec    dh
  43baa9:	dec    dh
  43baab:	dec    dh
  43baad:	dec    dh
  43baaf:	dec    dh
  43bab1:	dec    dh
  43bab3:	(bad)  
  43bab4:	cmp    BYTE PTR [rcx],al
  43bab6:	(bad)  
  43bab7:	dec    dh
  43bab9:	dec    dh
  43babb:	dec    dh
  43babd:	dec    dh
  43babf:	dec    dh
  43bac1:	dec    dh
  43bac3:	dec    dh
  43bac5:	dec    dh
  43bac7:	dec    dh
  43bac9:	dec    dh
  43bacb:	dec    dh
  43bacd:	dec    dh
  43bacf:	dec    dh
  43bad1:	dec    dh
  43bad3:	dec    dh
  43bad5:	dec    dh
  43bad7:	dec    dh
  43bad9:	dec    dh
  43badb:	dec    dh
  43badd:	dec    dh
  43badf:	dec    dh
  43bae1:	dec    dh
  43bae3:	dec    dh
  43bae5:	dec    dh
  43bae7:	dec    dh
  43bae9:	dec    dh
  43baeb:	dec    dh
  43baed:	(bad)  
  43baee:	sub    DWORD PTR [rax],eax
  43baf0:	int    0xfe
  43baf2:	xor    eax,DWORD PTR [rcx]
  43baf4:	xor    eax,DWORD PTR [rcx]
  43baf6:	xor    eax,DWORD PTR [rcx]
  43baf8:	int    0xfe
  43bafa:	int    0xfe
  43bafc:	int    0xfe
  43bafe:	int    0xfe
  43bb00:	int    0xfe
  43bb02:	xor    al,0x1
  43bb04:	int    0xfe
  43bb06:	int    0xfe
  43bb08:	int    0xfe
  43bb0a:	int    0xfe
  43bb0c:	int    0xfe
  43bb0e:	xor    eax,0xcdfecd01
  43bb13:	dec    ch
  43bb15:	dec    ch
  43bb17:	dec    ch
  43bb19:	dec    ch
  43bb1b:	dec    ch
  43bb1d:	dec    ch
  43bb1f:	dec    ch
  43bb21:	dec    ch
  43bb23:	dec    ch
  43bb25:	dec    ch
  43bb27:	dec    ch
  43bb29:	dec    ch
  43bb2b:	dec    ch
  43bb2d:	dec    ch
  43bb2f:	dec    ch
  43bb31:	dec    ch
  43bb33:	dec    ch
  43bb35:	dec    ch
  43bb37:	dec    ch
  43bb39:	dec    ch
  43bb3b:	dec    ch
  43bb3d:	dec    ch
  43bb3f:	dec    ch
  43bb41:	dec    ch
  43bb43:	dec    ch
  43bb45:	dec    ch
  43bb47:	(bad)  
  43bb48:	sub    DWORD PTR [rax],eax
  43bb4a:	cmp    DWORD PTR [rcx],eax
  43bb4c:	cmp    DWORD PTR [rcx],eax
  43bb4e:	cmp    DWORD PTR [rcx],eax
  43bb50:	cmp    DWORD PTR [rcx],eax
  43bb52:	cmp    DWORD PTR [rcx],eax
  43bb54:	cmp    DWORD PTR [rcx],eax
  43bb56:	cmp    DWORD PTR [rcx],eax
  43bb58:	cmp    DWORD PTR [rcx],eax
  43bb5a:	cmp    DWORD PTR [rcx],eax
  43bb5c:	int3   
  43bb5d:	(bad)  
  43bb5e:	cmp    DWORD PTR [rcx],eax
  43bb60:	cmp    DWORD PTR [rcx],eax
  43bb62:	cmp    DWORD PTR [rcx],eax
  43bb64:	cmp    DWORD PTR [rcx],eax
  43bb66:	cmp    DWORD PTR [rcx],eax
  43bb68:	cmp    DWORD PTR [rcx],eax
  43bb6a:	cmp    DWORD PTR [rcx],eax
  43bb6c:	cmp    DWORD PTR [rcx],eax
  43bb6e:	cmp    DWORD PTR [rcx],eax
  43bb70:	cmp    DWORD PTR [rcx],eax
  43bb72:	cmp    DWORD PTR [rcx],eax
  43bb74:	cmp    DWORD PTR [rcx],eax
  43bb76:	cmp    DWORD PTR [rcx],eax
  43bb78:	cmp    DWORD PTR [rcx],eax
  43bb7a:	cmp    DWORD PTR [rcx],eax
  43bb7c:	cmp    DWORD PTR [rcx],eax
  43bb7e:	cmp    DWORD PTR [rcx],eax
  43bb80:	cmp    DWORD PTR [rcx],eax
  43bb82:	cmp    DWORD PTR [rcx],eax
  43bb84:	cmp    DWORD PTR [rcx],eax
  43bb86:	cmp    DWORD PTR [rcx],eax
  43bb88:	cmp    DWORD PTR [rcx],eax
  43bb8a:	cmp    DWORD PTR [rcx],eax
  43bb8c:	cmp    DWORD PTR [rcx],eax
  43bb8e:	cmp    DWORD PTR [rcx],eax
  43bb90:	cmp    DWORD PTR [rcx],eax
  43bb92:	cmp    DWORD PTR [rcx],eax
  43bb94:	cmp    DWORD PTR [rcx],eax
  43bb96:	cmp    DWORD PTR [rcx],eax
  43bb98:	cmp    DWORD PTR [rcx],eax
  43bb9a:	cmp    DWORD PTR [rcx],eax
  43bb9c:	cmp    DWORD PTR [rcx],eax
  43bb9e:	cmp    DWORD PTR [rcx],eax
  43bba0:	cmp    DWORD PTR [rcx],eax
  43bba2:	sub    DWORD PTR [rax],eax
  43bba4:	retf   
  43bba5:	dec    bl
  43bba7:	dec    bl
  43bba9:	dec    bl
  43bbab:	dec    bl
  43bbad:	dec    bl
  43bbaf:	dec    bl
  43bbb1:	dec    bl
  43bbb3:	dec    bl
  43bbb5:	dec    bl
  43bbb7:	dec    bl
  43bbb9:	dec    bl
  43bbbb:	dec    bl
  43bbbd:	dec    bl
  43bbbf:	dec    bl
  43bbc1:	(bad)  
  43bbc2:	cmp    al,BYTE PTR [rcx]
  43bbc4:	retf   
  43bbc5:	dec    bl
  43bbc7:	dec    bl
  43bbc9:	dec    bl
  43bbcb:	dec    bl
  43bbcd:	dec    bl
  43bbcf:	dec    bl
  43bbd1:	dec    bl
  43bbd3:	dec    bl
  43bbd5:	dec    bl
  43bbd7:	dec    bl
  43bbd9:	dec    bl
  43bbdb:	dec    bl
  43bbdd:	dec    bl
  43bbdf:	dec    bl
  43bbe1:	dec    bl
  43bbe3:	dec    bl
  43bbe5:	dec    bl
  43bbe7:	dec    bl
  43bbe9:	dec    bl
  43bbeb:	dec    bl
  43bbed:	dec    bl
  43bbef:	dec    bl
  43bbf1:	dec    bl
  43bbf3:	dec    bl
  43bbf5:	dec    bl
  43bbf7:	dec    bl
  43bbf9:	dec    bl
  43bbfb:	(bad)  
  43bbfc:	sub    DWORD PTR [rax],eax
  43bbfe:	retf   0xcafe
  43bc01:	dec    dl
  43bc03:	dec    dl
  43bc05:	dec    dl
  43bc07:	dec    dl
  43bc09:	dec    dl
  43bc0b:	dec    dl
  43bc0d:	dec    dl
  43bc0f:	dec    dl
  43bc11:	dec    dl
  43bc13:	dec    dl
  43bc15:	dec    dl
  43bc17:	dec    dl
  43bc19:	dec    dl
  43bc1b:	dec    dl
  43bc1d:	dec    dl
  43bc1f:	dec    dl
  43bc21:	(bad)  
  43bc22:	sub    BYTE PTR [rcx],al
  43bc24:	sub    BYTE PTR [rcx],al
  43bc26:	retf   0xcafe
  43bc29:	dec    dl
  43bc2b:	(bad)  
  43bc2c:	sub    BYTE PTR [rcx],al
  43bc2e:	sub    BYTE PTR [rcx],al
  43bc30:	sub    BYTE PTR [rcx],al
  43bc32:	sub    BYTE PTR [rcx],al
  43bc34:	sub    BYTE PTR [rcx],al
  43bc36:	retf   0xcafe
  43bc39:	dec    dl
  43bc3b:	dec    dl
  43bc3d:	dec    dl
  43bc3f:	dec    dl
  43bc41:	dec    dl
  43bc43:	dec    dl
  43bc45:	(bad)  
  43bc46:	sub    BYTE PTR [rcx],al
  43bc48:	sub    BYTE PTR [rcx],al
  43bc4a:	retf   0xcafe
  43bc4d:	dec    dl
  43bc4f:	dec    dl
  43bc51:	dec    dl
  43bc53:	dec    dl
  43bc55:	(bad)  
  43bc56:	sub    DWORD PTR [rax],eax
  43bc58:	leave  
  43bc59:	dec    cl
  43bc5b:	dec    cl
  43bc5d:	dec    cl
  43bc5f:	dec    cl
  43bc61:	dec    cl
  43bc63:	dec    cl
  43bc65:	dec    cl
  43bc67:	dec    cl
  43bc69:	(bad)  
  43bc6a:	cmp    eax,DWORD PTR [rcx]
  43bc6c:	leave  
  43bc6d:	dec    cl
  43bc6f:	dec    cl
  43bc71:	dec    cl
  43bc73:	dec    cl
  43bc75:	dec    cl
  43bc77:	dec    cl
  43bc79:	dec    cl
  43bc7b:	dec    cl
  43bc7d:	dec    cl
  43bc7f:	dec    cl
  43bc81:	dec    cl
  43bc83:	dec    cl
  43bc85:	dec    cl
  43bc87:	dec    cl
  43bc89:	dec    cl
  43bc8b:	dec    cl
  43bc8d:	dec    cl
  43bc8f:	dec    cl
  43bc91:	dec    cl
  43bc93:	dec    cl
  43bc95:	dec    cl
  43bc97:	dec    cl
  43bc99:	dec    cl
  43bc9b:	dec    cl
  43bc9d:	dec    cl
  43bc9f:	dec    cl
  43bca1:	dec    cl
  43bca3:	dec    cl
  43bca5:	dec    cl
  43bca7:	dec    cl
  43bca9:	dec    cl
  43bcab:	dec    cl
  43bcad:	dec    cl
  43bcaf:	(bad)  
  43bcb0:	sub    DWORD PTR [rax],eax
  43bcb2:	cmp    al,0x1
  43bcb4:	cmp    eax,0x30013001
  43bcb9:	add    DWORD PTR [rcx+rax*1],edi
  43bcbc:	cmp    al,0x1
  43bcbe:	cmp    al,0x1
  43bcc0:	cmp    al,0x1
  43bcc2:	cmp    al,0x1
  43bcc4:	add    DWORD PTR ds:[rcx+rax*1],edi
  43bcc8:	cmp    al,0x1
  43bcca:	cmp    al,0x1
  43bccc:	cmp    al,0x1
  43bcce:	cmp    al,0x1
  43bcd0:	(bad)  
  43bcd1:	add    DWORD PTR [rcx+rax*1],edi
  43bcd4:	cmp    al,0x1
  43bcd6:	cmp    al,0x1
  43bcd8:	cmp    al,0x1
  43bcda:	cmp    al,0x1
  43bcdc:	cmp    al,0x1
  43bcde:	cmp    al,0x1
  43bce0:	cmp    al,0x1
  43bce2:	cmp    al,0x1
  43bce4:	cmp    al,0x1
  43bce6:	cmp    al,0x1
  43bce8:	cmp    al,0x1
  43bcea:	cmp    al,0x1
  43bcec:	cmp    al,0x1
  43bcee:	cmp    al,0x1
  43bcf0:	cmp    al,0x1
  43bcf2:	cmp    al,0x1
  43bcf4:	cmp    al,0x1
  43bcf6:	cmp    al,0x1
  43bcf8:	cmp    al,0x1
  43bcfa:	cmp    al,0x1
  43bcfc:	cmp    al,0x1
  43bcfe:	cmp    al,0x1
  43bd00:	cmp    al,0x1
  43bd02:	cmp    al,0x1
  43bd04:	cmp    al,0x1
  43bd06:	cmp    al,0x1
  43bd08:	cmp    al,0x1
  43bd0a:	sub    DWORD PTR [rax],eax
  43bd0c:	(bad)  
  43bd0d:	inc    bh
  43bd0f:	inc    bh
  43bd11:	inc    bh
  43bd13:	inc    bh
  43bd15:	inc    bh
  43bd17:	inc    bh
  43bd19:	inc    bh
  43bd1b:	inc    bh
  43bd1d:	inc    BYTE PTR [rax+0x1]
  43bd20:	(bad)  
  43bd21:	inc    bh
  43bd23:	inc    bh
  43bd25:	inc    bh
  43bd27:	inc    bh
  43bd29:	inc    bh
  43bd2b:	inc    bh
  43bd2d:	inc    bh
  43bd2f:	inc    bh
  43bd31:	inc    bh
  43bd33:	inc    bh
  43bd35:	inc    bh
  43bd37:	inc    bh
  43bd39:	inc    bh
  43bd3b:	inc    bh
  43bd3d:	inc    bh
  43bd3f:	inc    bh
  43bd41:	inc    bh
  43bd43:	inc    bh
  43bd45:	inc    bh
  43bd47:	inc    bh
  43bd49:	inc    bh
  43bd4b:	inc    bh
  43bd4d:	inc    bh
  43bd4f:	inc    bh
  43bd51:	inc    bh
  43bd53:	inc    bh
  43bd55:	inc    bh
  43bd57:	inc    bh
  43bd59:	inc    bh
  43bd5b:	inc    bh
  43bd5d:	inc    bh
  43bd5f:	inc    bh
  43bd61:	inc    bh
  43bd63:	(bad)  
  43bd64:	sub    DWORD PTR [rax],eax
  43bd66:	add    DWORD PTR [r10+0x1],eax
  43bd6a:	xor    eax,DWORD PTR [rcx]
  43bd6c:	xor    eax,DWORD PTR [rcx]
  43bd6e:	add    DWORD PTR [r9+0x1],eax
  43bd72:	add    DWORD PTR [r9+0x1],eax
  43bd76:	add    DWORD PTR [r11+0x1],eax
  43bd7a:	add    DWORD PTR [r9+0x1],eax
  43bd7e:	add    DWORD PTR [r9+0x1],eax
  43bd82:	add    DWORD PTR [r9+rax*1+0x41],eax
  43bd87:	add    DWORD PTR [rcx+0x1],eax
  43bd8a:	add    DWORD PTR [r9+0x1],eax
  43bd8e:	add    DWORD PTR [r9+0x1],eax
  43bd92:	add    DWORD PTR [r9+0x1],eax
  43bd96:	add    DWORD PTR [r9+0x1],eax
  43bd9a:	add    DWORD PTR [r9+0x1],eax
  43bd9e:	add    DWORD PTR [r9+0x1],eax
  43bda2:	add    DWORD PTR [r9+0x1],eax
  43bda6:	add    DWORD PTR [r9+0x1],eax
  43bdaa:	add    DWORD PTR [r9+0x1],eax
  43bdae:	add    DWORD PTR [r9+0x1],eax
  43bdb2:	add    DWORD PTR [r9+0x1],eax
  43bdb6:	add    DWORD PTR [r9+0x1],eax
  43bdba:	add    DWORD PTR [r9+0x1],eax
  43bdbe:	sub    DWORD PTR [rax],eax
  43bdc0:	(bad)  
  43bdc3:	inc    ch
  43bdc5:	inc    ch
  43bdc7:	inc    ch
  43bdc9:	inc    ch
  43bdcb:	inc    ch
  43bdcd:	inc    ch
  43bdcf:	inc    ch
  43bdd1:	inc    ch
  43bdd3:	inc    ch
  43bdd5:	inc    ch
  43bdd7:	inc    ch
  43bdd9:	inc    ch
  43bddb:	inc    ch
  43bddd:	inc    ch
  43bddf:	inc    ch
  43bde1:	inc    ch
  43bde3:	inc    ch
  43bde5:	inc    ch
  43bde7:	inc    ch
  43bde9:	inc    ch
  43bdeb:	inc    ch
  43bded:	inc    ch
  43bdef:	inc    ch
  43bdf1:	inc    ch
  43bdf3:	inc    ch
  43bdf5:	inc    ch
  43bdf7:	inc    ch
  43bdf9:	inc    ch
  43bdfb:	inc    ch
  43bdfd:	inc    ch
  43bdff:	inc    ch
  43be01:	inc    ch
  43be03:	inc    ch
  43be05:	inc    ch
  43be07:	inc    ch
  43be09:	inc    ch
  43be0b:	inc    ch
  43be0d:	inc    ch
  43be0f:	inc    ch
  43be11:	inc    ch
  43be13:	inc    ch
  43be15:	inc    ch
  43be17:	(bad)  
  43be18:	sub    DWORD PTR [rax],eax
  43be1a:	cmp    al,0x1
  43be1c:	cmp    eax,0x30013001
  43be21:	add    DWORD PTR [rcx+rax*1],edi
  43be24:	cmp    al,0x1
  43be26:	cmp    al,0x1
  43be28:	cmp    al,0x1
  43be2a:	cmp    al,0x1
  43be2c:	add    DWORD PTR ds:[rcx+rax*1],edi
  43be30:	cmp    al,0x1
  43be32:	cmp    al,0x1
  43be34:	cmp    al,0x1
  43be36:	cmp    al,0x1
  43be38:	(bad)  
  43be39:	add    DWORD PTR [rcx+rax*1],edi
  43be3c:	cmp    al,0x1
  43be3e:	cmp    al,0x1
  43be40:	cmp    al,0x1
  43be42:	cmp    al,0x1
  43be44:	cmp    al,0x1
  43be46:	cmp    al,0x1
  43be48:	cmp    al,0x1
  43be4a:	cmp    al,0x1
  43be4c:	cmp    al,0x1
  43be4e:	cmp    al,0x1
  43be50:	cmp    al,0x1
  43be52:	cmp    al,0x1
  43be54:	cmp    al,0x1
  43be56:	cmp    al,0x1
  43be58:	cmp    al,0x1
  43be5a:	cmp    al,0x1
  43be5c:	cmp    al,0x1
  43be5e:	cmp    al,0x1
  43be60:	cmp    al,0x1
  43be62:	cmp    al,0x1
  43be64:	cmp    al,0x1
  43be66:	cmp    al,0x1
  43be68:	cmp    al,0x1
  43be6a:	cmp    al,0x1
  43be6c:	cmp    al,0x1
  43be6e:	cmp    al,0x1
  43be70:	cmp    al,0x1
  43be72:	sub    DWORD PTR [rax],eax
  43be74:	cmp    al,0x1
  43be76:	cmp    eax,0x30013001
  43be7b:	add    DWORD PTR [rcx+rax*1],edi
  43be7e:	cmp    al,0x1
  43be80:	cmp    al,0x1
  43be82:	cmp    al,0x1
  43be84:	cmp    al,0x1
  43be86:	add    DWORD PTR ds:[rcx+rax*1],edi
  43be8a:	cmp    al,0x1
  43be8c:	cmp    al,0x1
  43be8e:	cmp    al,0x1
  43be90:	cmp    al,0x1
  43be92:	(bad)  
  43be93:	add    DWORD PTR [rcx+rax*1],edi
  43be96:	cmp    al,0x1
  43be98:	cmp    al,0x1
  43be9a:	cmp    al,0x1
  43be9c:	cmp    al,0x1
  43be9e:	cmp    al,0x1
  43bea0:	cmp    al,0x1
  43bea2:	cmp    al,0x1
  43bea4:	cmp    al,0x1
  43bea6:	cmp    al,0x1
  43bea8:	cmp    al,0x1
  43beaa:	cmp    al,0x1
  43beac:	cmp    al,0x1
  43beae:	cmp    al,0x1
  43beb0:	cmp    al,0x1
  43beb2:	cmp    al,0x1
  43beb4:	cmp    al,0x1
  43beb6:	cmp    al,0x1
  43beb8:	cmp    al,0x1
  43beba:	cmp    al,0x1
  43bebc:	cmp    al,0x1
  43bebe:	cmp    al,0x1
  43bec0:	cmp    al,0x1
  43bec2:	cmp    al,0x1
  43bec4:	cmp    al,0x1
  43bec6:	cmp    al,0x1
  43bec8:	cmp    al,0x1
  43beca:	cmp    al,0x1
  43becc:	sub    DWORD PTR [rax],eax
  43bece:	add    DWORD PTR [r14+0x1],r8d
  43bed2:	rex.RXB add DWORD PTR [r15+0x1],r8d
  43bed6:	add    DWORD PTR [r13+0x1],r8d
  43beda:	add    DWORD PTR [r13+0x1],r8d
  43bede:	add    DWORD PTR [r14],r15d
  43bee1:	add    DWORD PTR [rbp+0x1],eax
  43bee4:	add    DWORD PTR [r13+0x1],r8d
  43bee8:	add    DWORD PTR [r13+0x1],r8d
  43beec:	add    QWORD PTR [rbp+0x1],rax
  43bef0:	add    DWORD PTR [r13+0x1],r8d
  43bef4:	add    DWORD PTR [r13+0x1],r8d
  43bef8:	add    DWORD PTR [r13+0x1],r8d
  43befc:	add    DWORD PTR [r13+0x1],r8d
  43bf00:	add    DWORD PTR [r13+0x1],r8d
  43bf04:	add    DWORD PTR [r13+0x1],r8d
  43bf08:	add    DWORD PTR [r13+0x1],r8d
  43bf0c:	add    DWORD PTR [r13+0x1],r8d
  43bf10:	add    DWORD PTR [r13+0x1],r8d
  43bf14:	add    DWORD PTR [r13+0x1],r8d
  43bf18:	add    DWORD PTR [r13+0x1],r8d
  43bf1c:	add    DWORD PTR [r13+0x1],r8d
  43bf20:	add    DWORD PTR [r13+0x1],r8d
  43bf24:	add    DWORD PTR [r9],r13d
  43bf27:	add    BYTE PTR [rcx+rax*1],bh
  43bf2a:	cmp    eax,0x30013001
  43bf2f:	add    DWORD PTR [rcx+rax*1],edi
  43bf32:	cmp    al,0x1
  43bf34:	cmp    al,0x1
  43bf36:	cmp    al,0x1
  43bf38:	cmp    al,0x1
  43bf3a:	add    DWORD PTR ds:[rcx+rax*1],edi
  43bf3e:	cmp    al,0x1
  43bf40:	cmp    al,0x1
  43bf42:	cmp    al,0x1
  43bf44:	cmp    al,0x1
  43bf46:	add    QWORD PTR [r9+rax*1],rdi
  43bf4a:	cmp    al,0x1
  43bf4c:	cmp    al,0x1
  43bf4e:	cmp    al,0x1
  43bf50:	cmp    al,0x1
  43bf52:	cmp    al,0x1
  43bf54:	cmp    al,0x1
  43bf56:	cmp    al,0x1
  43bf58:	cmp    al,0x1
  43bf5a:	cmp    al,0x1
  43bf5c:	cmp    al,0x1
  43bf5e:	cmp    al,0x1
  43bf60:	cmp    al,0x1
  43bf62:	cmp    al,0x1
  43bf64:	cmp    al,0x1
  43bf66:	cmp    al,0x1
  43bf68:	cmp    al,0x1
  43bf6a:	cmp    al,0x1
  43bf6c:	cmp    al,0x1
  43bf6e:	cmp    al,0x1
  43bf70:	cmp    al,0x1
  43bf72:	cmp    al,0x1
  43bf74:	cmp    al,0x1
  43bf76:	cmp    al,0x1
  43bf78:	cmp    al,0x1
  43bf7a:	cmp    al,0x1
  43bf7c:	cmp    al,0x1
  43bf7e:	cmp    al,0x1
  43bf80:	sub    DWORD PTR [rax],eax
  43bf82:	sar    dh,0xc0
  43bf85:	inc    al
  43bf87:	inc    al
  43bf89:	inc    al
  43bf8b:	inc    al
  43bf8d:	inc    al
  43bf8f:	inc    al
  43bf91:	inc    al
  43bf93:	inc    al
  43bf95:	inc    al
  43bf97:	inc    al
  43bf99:	inc    al
  43bf9b:	inc    al
  43bf9d:	inc    al
  43bf9f:	inc    al
  43bfa1:	inc    al
  43bfa3:	inc    al
  43bfa5:	inc    al
  43bfa7:	inc    al
  43bfa9:	inc    al
  43bfab:	inc    al
  43bfad:	inc    al
  43bfaf:	inc    al
  43bfb1:	inc    al
  43bfb3:	inc    al
  43bfb5:	inc    al
  43bfb7:	inc    al
  43bfb9:	inc    al
  43bfbb:	inc    al
  43bfbd:	inc    al
  43bfbf:	inc    al
  43bfc1:	inc    al
  43bfc3:	inc    al
  43bfc5:	inc    al
  43bfc7:	inc    al
  43bfc9:	inc    al
  43bfcb:	inc    al
  43bfcd:	inc    al
  43bfcf:	inc    al
  43bfd1:	inc    al
  43bfd3:	inc    al
  43bfd5:	inc    al
  43bfd7:	inc    al
  43bfd9:	(bad)  
  43bfda:	sub    DWORD PTR [rax],eax
  43bfdc:	add    DWORD PTR [r10+0x1],eax
  43bfe0:	xor    eax,DWORD PTR [rcx]
  43bfe2:	xor    eax,DWORD PTR [rcx]
  43bfe4:	add    DWORD PTR [r9+0x1],eax
  43bfe8:	add    DWORD PTR [r9+0x1],eax
  43bfec:	add    DWORD PTR [r11+0x1],eax
  43bff0:	add    DWORD PTR [r9+0x1],eax
  43bff4:	add    DWORD PTR [r9+0x1],eax
  43bff8:	add    DWORD PTR [r9+rax*1+0x41],eax
  43bffd:	add    DWORD PTR [rcx+0x1],eax
  43c000:	add    DWORD PTR [r9+0x1],eax
  43c004:	add    DWORD PTR [r9+0x1],eax
  43c008:	add    DWORD PTR [r9+0x1],eax
  43c00c:	add    DWORD PTR [r9+0x1],eax
  43c010:	add    DWORD PTR [r9+0x1],eax
  43c014:	add    DWORD PTR [r9+0x1],eax
  43c018:	add    DWORD PTR [r9+0x1],eax
  43c01c:	add    DWORD PTR [r9+0x1],eax
  43c020:	add    DWORD PTR [r9+0x1],eax
  43c024:	add    DWORD PTR [r9+0x1],eax
  43c028:	add    DWORD PTR [r9+0x1],eax
  43c02c:	add    DWORD PTR [r9+0x1],eax
  43c030:	add    DWORD PTR [r9+0x1],eax
  43c034:	sub    DWORD PTR [rax],eax
  43c036:	add    DWORD PTR [r10+0x1],eax
  43c03a:	xor    eax,DWORD PTR [rcx]
  43c03c:	xor    eax,DWORD PTR [rcx]
  43c03e:	add    DWORD PTR [r9+0x1],eax
  43c042:	add    DWORD PTR [r9+0x1],eax
  43c046:	add    DWORD PTR [r11+0x1],eax
  43c04a:	add    DWORD PTR [r9+0x1],eax
  43c04e:	add    DWORD PTR [r9+0x1],eax
  43c052:	add    DWORD PTR [r9+rax*1+0x41],eax
  43c057:	add    DWORD PTR [rcx+0x1],eax
  43c05a:	add    DWORD PTR [r9+0x1],eax
  43c05e:	add    DWORD PTR [r9+0x1],eax
  43c062:	add    DWORD PTR [r9+0x1],eax
  43c066:	add    DWORD PTR [r9+0x1],eax
  43c06a:	add    DWORD PTR [r9+0x1],eax
  43c06e:	add    DWORD PTR [r9+0x1],eax
  43c072:	add    DWORD PTR [r9+0x1],eax
  43c076:	add    DWORD PTR [r9+0x1],eax
  43c07a:	add    DWORD PTR [r9+0x1],eax
  43c07e:	add    DWORD PTR [r9+0x1],eax
  43c082:	add    DWORD PTR [r9+0x1],eax
  43c086:	add    DWORD PTR [r9+0x1],eax
  43c08a:	add    DWORD PTR [r9+0x1],eax
  43c08e:	sub    DWORD PTR [rax],eax
  43c090:	rex.WX add QWORD PTR [rbx+0x1],rcx
  43c094:	add    QWORD PTR [rcx+rax*1+0x4a],r9
  43c099:	add    DWORD PTR [rdx+0x1],ecx
  43c09c:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0a0:	rex.WX add QWORD PTR [rbx+0x1],rax
  43c0a4:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0a8:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0ac:	rex.WX add QWORD PTR [rbp+0x1],rcx
  43c0b0:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0b4:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0b8:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0bc:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0c0:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0c4:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0c8:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0cc:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0d0:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0d4:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0d8:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0dc:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0e0:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0e4:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c0e8:	sub    DWORD PTR [rax],eax
  43c0ea:	add    DWORD PTR [r10+0x1],eax
  43c0ee:	xor    eax,DWORD PTR [rcx]
  43c0f0:	xor    eax,DWORD PTR [rcx]
  43c0f2:	add    DWORD PTR [r9+0x1],eax
  43c0f6:	add    DWORD PTR [r9+0x1],eax
  43c0fa:	add    DWORD PTR [r11+0x1],eax
  43c0fe:	add    DWORD PTR [r9+0x1],eax
  43c102:	add    DWORD PTR [r9+0x1],eax
  43c106:	add    DWORD PTR [r14+0x1],ecx
  43c10a:	add    DWORD PTR [r9+0x1],eax
  43c10e:	add    DWORD PTR [r9+0x1],eax
  43c112:	add    DWORD PTR [r9+0x1],eax
  43c116:	add    DWORD PTR [r9+0x1],eax
  43c11a:	add    DWORD PTR [r9+0x1],eax
  43c11e:	add    DWORD PTR [r9+0x1],eax
  43c122:	add    DWORD PTR [r9+0x1],eax
  43c126:	add    DWORD PTR [r9+0x1],eax
  43c12a:	add    DWORD PTR [r9+0x1],eax
  43c12e:	add    DWORD PTR [r9+0x1],eax
  43c132:	add    DWORD PTR [r9+0x1],eax
  43c136:	add    DWORD PTR [r9+0x1],eax
  43c13a:	add    DWORD PTR [r9+0x1],eax
  43c13e:	add    DWORD PTR [r9+0x1],eax
  43c142:	sub    DWORD PTR [rax],eax
  43c144:	cmp    al,0x1
  43c146:	cmp    eax,0x30013001
  43c14b:	add    DWORD PTR [rcx+rax*1],edi
  43c14e:	cmp    al,0x1
  43c150:	cmp    al,0x1
  43c152:	cmp    al,0x1
  43c154:	cmp    al,0x1
  43c156:	add    QWORD PTR [r9+r8*1],r15
  43c15a:	cmp    al,0x1
  43c15c:	cmp    al,0x1
  43c15e:	cmp    al,0x1
  43c160:	cmp    al,0x1
  43c162:	(bad)  
  43c163:	add    DWORD PTR [rcx+rax*1],edi
  43c166:	cmp    al,0x1
  43c168:	cmp    al,0x1
  43c16a:	cmp    al,0x1
  43c16c:	cmp    al,0x1
  43c16e:	cmp    al,0x1
  43c170:	cmp    al,0x1
  43c172:	cmp    al,0x1
  43c174:	cmp    al,0x1
  43c176:	cmp    al,0x1
  43c178:	cmp    al,0x1
  43c17a:	cmp    al,0x1
  43c17c:	cmp    al,0x1
  43c17e:	cmp    al,0x1
  43c180:	cmp    al,0x1
  43c182:	cmp    al,0x1
  43c184:	cmp    al,0x1
  43c186:	cmp    al,0x1
  43c188:	cmp    al,0x1
  43c18a:	cmp    al,0x1
  43c18c:	cmp    al,0x1
  43c18e:	cmp    al,0x1
  43c190:	cmp    al,0x1
  43c192:	cmp    al,0x1
  43c194:	cmp    al,0x1
  43c196:	cmp    al,0x1
  43c198:	cmp    al,0x1
  43c19a:	cmp    al,0x1
  43c19c:	sub    DWORD PTR [rax],eax
  43c19e:	cmp    al,0x1
  43c1a0:	cmp    eax,0x30013001
  43c1a5:	add    DWORD PTR [rcx+rax*1],edi
  43c1a8:	cmp    al,0x1
  43c1aa:	cmp    al,0x1
  43c1ac:	cmp    al,0x1
  43c1ae:	cmp    al,0x1
  43c1b0:	add    QWORD PTR [r9+r8*1],r15
  43c1b4:	cmp    al,0x1
  43c1b6:	cmp    al,0x1
  43c1b8:	cmp    al,0x1
  43c1ba:	cmp    al,0x1
  43c1bc:	(bad)  
  43c1bd:	add    DWORD PTR [rcx+rax*1],edi
  43c1c0:	cmp    al,0x1
  43c1c2:	cmp    al,0x1
  43c1c4:	cmp    al,0x1
  43c1c6:	cmp    al,0x1
  43c1c8:	cmp    al,0x1
  43c1ca:	cmp    al,0x1
  43c1cc:	cmp    al,0x1
  43c1ce:	cmp    al,0x1
  43c1d0:	cmp    al,0x1
  43c1d2:	cmp    al,0x1
  43c1d4:	cmp    al,0x1
  43c1d6:	cmp    al,0x1
  43c1d8:	cmp    al,0x1
  43c1da:	cmp    al,0x1
  43c1dc:	cmp    al,0x1
  43c1de:	cmp    al,0x1
  43c1e0:	cmp    al,0x1
  43c1e2:	cmp    al,0x1
  43c1e4:	cmp    al,0x1
  43c1e6:	cmp    al,0x1
  43c1e8:	cmp    al,0x1
  43c1ea:	cmp    al,0x1
  43c1ec:	cmp    al,0x1
  43c1ee:	cmp    al,0x1
  43c1f0:	cmp    al,0x1
  43c1f2:	cmp    al,0x1
  43c1f4:	cmp    al,0x1
  43c1f6:	sub    DWORD PTR [rax],eax
  43c1f8:	mov    ecx,0x300130fe
  43c1fd:	add    DWORD PTR [rax],esi
  43c1ff:	add    DWORD PTR [rcx-0x46014602],edi
  43c205:	(bad)  
  43c206:	mov    ecx,0x50feb9fe
  43c20b:	add    DWORD PTR [rcx-0x46014602],edi
  43c211:	(bad)  
  43c212:	mov    ecx,0x32feb9fe
  43c217:	add    DWORD PTR [rcx-0x46014602],edi
  43c21d:	(bad)  
  43c21e:	mov    ecx,0xb9feb9fe
  43c223:	(bad)  
  43c224:	mov    ecx,0xb9feb9fe
  43c229:	(bad)  
  43c22a:	mov    ecx,0xb9feb9fe
  43c22f:	(bad)  
  43c230:	mov    ecx,0xb9feb9fe
  43c235:	(bad)  
  43c236:	mov    ecx,0xb9feb9fe
  43c23b:	(bad)  
  43c23c:	mov    ecx,0xb9feb9fe
  43c241:	(bad)  
  43c242:	mov    ecx,0xb9feb9fe
  43c247:	(bad)  
  43c248:	mov    ecx,0xb9feb9fe
  43c24d:	(bad)  
  43c24e:	mov    ecx,0x3c0029fe
  43c253:	add    DWORD PTR [rip+0x30013001],edi        # 0x3044f25a
  43c259:	add    DWORD PTR [rcx+rax*1],edi
  43c25c:	cmp    al,0x1
  43c25e:	cmp    al,0x1
  43c260:	cmp    al,0x1
  43c262:	cmp    al,0x1
  43c264:	add    QWORD PTR [r9+r8*1],r15
  43c268:	cmp    al,0x1
  43c26a:	cmp    al,0x1
  43c26c:	cmp    al,0x1
  43c26e:	cmp    al,0x1
  43c270:	add    QWORD PTR [r9+rax*1],rdi
  43c274:	cmp    al,0x1
  43c276:	cmp    al,0x1
  43c278:	cmp    al,0x1
  43c27a:	cmp    al,0x1
  43c27c:	cmp    al,0x1
  43c27e:	cmp    al,0x1
  43c280:	cmp    al,0x1
  43c282:	cmp    al,0x1
  43c284:	cmp    al,0x1
  43c286:	cmp    al,0x1
  43c288:	cmp    al,0x1
  43c28a:	cmp    al,0x1
  43c28c:	cmp    al,0x1
  43c28e:	cmp    al,0x1
  43c290:	cmp    al,0x1
  43c292:	cmp    al,0x1
  43c294:	cmp    al,0x1
  43c296:	cmp    al,0x1
  43c298:	cmp    al,0x1
  43c29a:	cmp    al,0x1
  43c29c:	cmp    al,0x1
  43c29e:	cmp    al,0x1
  43c2a0:	cmp    al,0x1
  43c2a2:	cmp    al,0x1
  43c2a4:	cmp    al,0x1
  43c2a6:	cmp    al,0x1
  43c2a8:	cmp    al,0x1
  43c2aa:	sub    DWORD PTR [rax],eax
  43c2ac:	cmp    al,0x1
  43c2ae:	cmp    eax,0x30013001
  43c2b3:	add    DWORD PTR [rcx+rax*1],edi
  43c2b6:	cmp    al,0x1
  43c2b8:	cmp    al,0x1
  43c2ba:	cmp    al,0x1
  43c2bc:	cmp    al,0x1
  43c2be:	add    DWORD PTR ds:[rcx+rax*1],edi
  43c2c2:	cmp    al,0x1
  43c2c4:	cmp    al,0x1
  43c2c6:	cmp    al,0x1
  43c2c8:	cmp    al,0x1
  43c2ca:	add    QWORD PTR [r9+rax*1],rdi
  43c2ce:	cmp    al,0x1
  43c2d0:	cmp    al,0x1
  43c2d2:	cmp    al,0x1
  43c2d4:	cmp    al,0x1
  43c2d6:	cmp    al,0x1
  43c2d8:	cmp    al,0x1
  43c2da:	cmp    al,0x1
  43c2dc:	cmp    al,0x1
  43c2de:	cmp    al,0x1
  43c2e0:	cmp    al,0x1
  43c2e2:	cmp    al,0x1
  43c2e4:	cmp    al,0x1
  43c2e6:	cmp    al,0x1
  43c2e8:	cmp    al,0x1
  43c2ea:	cmp    al,0x1
  43c2ec:	cmp    al,0x1
  43c2ee:	cmp    al,0x1
  43c2f0:	cmp    al,0x1
  43c2f2:	cmp    al,0x1
  43c2f4:	cmp    al,0x1
  43c2f6:	cmp    al,0x1
  43c2f8:	cmp    al,0x1
  43c2fa:	cmp    al,0x1
  43c2fc:	cmp    al,0x1
  43c2fe:	cmp    al,0x1
  43c300:	cmp    al,0x1
  43c302:	cmp    al,0x1
  43c304:	sub    DWORD PTR [rax],eax
  43c306:	add    DWORD PTR [r10+0x1],eax
  43c30a:	xor    eax,DWORD PTR [rcx]
  43c30c:	xor    eax,DWORD PTR [rcx]
  43c30e:	add    DWORD PTR [r9+0x1],eax
  43c312:	add    DWORD PTR [r9+0x1],eax
  43c316:	add    DWORD PTR [r9+0x1],edx
  43c31a:	add    DWORD PTR [r9+0x1],eax
  43c31e:	add    DWORD PTR [r9+0x1],eax
  43c322:	add    DWORD PTR [r9+rax*1+0x41],eax
  43c327:	add    DWORD PTR [rcx+0x1],eax
  43c32a:	add    DWORD PTR [r9+0x1],eax
  43c32e:	add    DWORD PTR [r9+0x1],eax
  43c332:	add    DWORD PTR [r9+0x1],eax
  43c336:	add    DWORD PTR [r9+0x1],eax
  43c33a:	add    DWORD PTR [r9+0x1],eax
  43c33e:	add    DWORD PTR [r9+0x1],eax
  43c342:	add    DWORD PTR [r9+0x1],eax
  43c346:	add    DWORD PTR [r9+0x1],eax
  43c34a:	add    DWORD PTR [r9+0x1],eax
  43c34e:	add    DWORD PTR [r9+0x1],eax
  43c352:	add    DWORD PTR [r9+0x1],eax
  43c356:	add    DWORD PTR [r9+0x1],eax
  43c35a:	add    DWORD PTR [r9+0x1],eax
  43c35e:	sub    DWORD PTR [rax],eax
  43c360:	add    DWORD PTR [r10+0x1],eax
  43c364:	xor    eax,DWORD PTR [rcx]
  43c366:	xor    eax,DWORD PTR [rcx]
  43c368:	add    DWORD PTR [r9+0x1],eax
  43c36c:	add    DWORD PTR [r9+0x1],eax
  43c370:	add    DWORD PTR [r9+0x1],edx
  43c374:	add    DWORD PTR [r9+0x1],eax
  43c378:	add    DWORD PTR [r9+0x1],eax
  43c37c:	add    DWORD PTR [r9+rax*1+0x41],eax
  43c381:	add    DWORD PTR [rcx+0x1],eax
  43c384:	add    DWORD PTR [r9+0x1],eax
  43c388:	add    DWORD PTR [r9+0x1],eax
  43c38c:	add    DWORD PTR [r9+0x1],eax
  43c390:	add    DWORD PTR [r9+0x1],eax
  43c394:	add    DWORD PTR [r9+0x1],eax
  43c398:	add    DWORD PTR [r9+0x1],eax
  43c39c:	add    DWORD PTR [r9+0x1],eax
  43c3a0:	add    DWORD PTR [r9+0x1],eax
  43c3a4:	add    DWORD PTR [r9+0x1],eax
  43c3a8:	add    DWORD PTR [r9+0x1],eax
  43c3ac:	add    DWORD PTR [r9+0x1],eax
  43c3b0:	add    DWORD PTR [r9+0x1],eax
  43c3b4:	add    DWORD PTR [r9+0x1],eax
  43c3b8:	sub    DWORD PTR [rax],eax
  43c3ba:	mov    ah,0xfe
  43c3bc:	xor    eax,DWORD PTR [rcx]
  43c3be:	xor    eax,DWORD PTR [rcx]
  43c3c0:	xor    eax,DWORD PTR [rcx]
  43c3c2:	mov    ah,0xfe
  43c3c4:	mov    ah,0xfe
  43c3c6:	mov    ah,0xfe
  43c3c8:	mov    ah,0xfe
  43c3ca:	mov    ah,0xfe
  43c3cc:	push   rdx
  43c3cd:	add    DWORD PTR [rsi+rdi*8-0x14b014c],esi
  43c3d4:	mov    ah,0xfe
  43c3d6:	mov    ah,0xfe
  43c3d8:	xor    eax,0xb4feb401
  43c3dd:	(bad)  
  43c3de:	mov    ah,0xfe
  43c3e0:	mov    ah,0xfe
  43c3e2:	mov    ah,0xfe
  43c3e4:	mov    ah,0xfe
  43c3e6:	mov    ah,0xfe
  43c3e8:	mov    ah,0xfe
  43c3ea:	mov    ah,0xfe
  43c3ec:	mov    ah,0xfe
  43c3ee:	mov    ah,0xfe
  43c3f0:	mov    ah,0xfe
  43c3f2:	mov    ah,0xfe
  43c3f4:	mov    ah,0xfe
  43c3f6:	mov    ah,0xfe
  43c3f8:	mov    ah,0xfe
  43c3fa:	mov    ah,0xfe
  43c3fc:	mov    ah,0xfe
  43c3fe:	mov    ah,0xfe
  43c400:	mov    ah,0xfe
  43c402:	mov    ah,0xfe
  43c404:	mov    ah,0xfe
  43c406:	mov    ah,0xfe
  43c408:	mov    ah,0xfe
  43c40a:	mov    ah,0xfe
  43c40c:	mov    ah,0xfe
  43c40e:	mov    ah,0xfe
  43c410:	mov    ah,0xfe
  43c412:	sub    DWORD PTR [rax],eax
  43c414:	add    DWORD PTR [r10+0x1],eax
  43c418:	xor    eax,DWORD PTR [rcx]
  43c41a:	xor    eax,DWORD PTR [rcx]
  43c41c:	add    DWORD PTR [r9+0x1],eax
  43c420:	add    DWORD PTR [r9+0x1],eax
  43c424:	add    DWORD PTR [r9+0x1],edx
  43c428:	add    DWORD PTR [r9+0x1],eax
  43c42c:	add    DWORD PTR [r9+0x1],eax
  43c430:	add    DWORD PTR [r14+0x1],ecx
  43c434:	add    DWORD PTR [r9+0x1],eax
  43c438:	add    DWORD PTR [r9+0x1],eax
  43c43c:	add    DWORD PTR [r9+0x1],eax
  43c440:	add    DWORD PTR [r9+0x1],eax
  43c444:	add    DWORD PTR [r9+0x1],eax
  43c448:	add    DWORD PTR [r9+0x1],eax
  43c44c:	add    DWORD PTR [r9+0x1],eax
  43c450:	add    DWORD PTR [r9+0x1],eax
  43c454:	add    DWORD PTR [r9+0x1],eax
  43c458:	add    DWORD PTR [r9+0x1],eax
  43c45c:	add    DWORD PTR [r9+0x1],eax
  43c460:	add    DWORD PTR [r9+0x1],eax
  43c464:	add    DWORD PTR [r9+0x1],eax
  43c468:	add    DWORD PTR [r9+0x1],eax
  43c46c:	sub    DWORD PTR [rax],eax
  43c46e:	add    DWORD PTR [r10+0x1],eax
  43c472:	xor    eax,DWORD PTR [rcx]
  43c474:	xor    eax,DWORD PTR [rcx]
  43c476:	add    DWORD PTR [r9+0x1],eax
  43c47a:	add    DWORD PTR [r9+0x1],eax
  43c47e:	add    DWORD PTR [r11+0x1],eax
  43c482:	add    DWORD PTR [r9+0x1],eax
  43c486:	add    DWORD PTR [r9+0x1],eax
  43c48a:	add    DWORD PTR [r14+0x1],ecx
  43c48e:	add    DWORD PTR [r9+0x1],eax
  43c492:	add    DWORD PTR [r9+0x1],eax
  43c496:	add    DWORD PTR [r9+0x1],eax
  43c49a:	add    DWORD PTR [r9+0x1],eax
  43c49e:	add    DWORD PTR [r9+0x1],eax
  43c4a2:	add    DWORD PTR [r9+0x1],eax
  43c4a6:	add    DWORD PTR [r9+0x1],eax
  43c4aa:	add    DWORD PTR [r9+0x1],eax
  43c4ae:	add    DWORD PTR [r9+0x1],eax
  43c4b2:	add    DWORD PTR [r9+0x1],eax
  43c4b6:	add    DWORD PTR [r9+0x1],eax
  43c4ba:	add    DWORD PTR [r9+0x1],eax
  43c4be:	add    DWORD PTR [r9+0x1],eax
  43c4c2:	add    DWORD PTR [r9+0x1],eax
  43c4c6:	sub    DWORD PTR [rax],eax
  43c4c8:	add    DWORD PTR [r14+0x1],r8d
  43c4cc:	rex.RXB add DWORD PTR [r15+0x1],r8d
  43c4d0:	add    DWORD PTR [r13+0x1],r8d
  43c4d4:	add    DWORD PTR [r13+0x1],r8d
  43c4d8:	add    DWORD PTR [r14],r15d
  43c4db:	add    DWORD PTR [rbp+0x1],eax
  43c4de:	add    DWORD PTR [r13+0x1],r8d
  43c4e2:	add    DWORD PTR [r13+0x1],r8d
  43c4e6:	add    QWORD PTR [rbp+0x1],rax
  43c4ea:	add    DWORD PTR [r13+0x1],r8d
  43c4ee:	add    DWORD PTR [r13+0x1],r8d
  43c4f2:	add    DWORD PTR [r13+0x1],r8d
  43c4f6:	add    DWORD PTR [r13+0x1],r8d
  43c4fa:	add    DWORD PTR [r13+0x1],r8d
  43c4fe:	add    DWORD PTR [r13+0x1],r8d
  43c502:	add    DWORD PTR [r13+0x1],r8d
  43c506:	add    DWORD PTR [r13+0x1],r8d
  43c50a:	add    DWORD PTR [r13+0x1],r8d
  43c50e:	add    DWORD PTR [r13+0x1],r8d
  43c512:	add    DWORD PTR [r13+0x1],r8d
  43c516:	add    DWORD PTR [r13+0x1],r8d
  43c51a:	add    DWORD PTR [r13+0x1],r8d
  43c51e:	add    DWORD PTR [r9],r13d
  43c521:	add    BYTE PTR [rdi],dh
  43c523:	add    DWORD PTR [rdi],esi
  43c525:	add    DWORD PTR [rdi],esi
  43c527:	add    DWORD PTR [rdi],esi
  43c529:	add    DWORD PTR [rdi],esi
  43c52b:	add    DWORD PTR [rdi],esi
  43c52d:	add    DWORD PTR [rdi],esi
  43c52f:	add    DWORD PTR [rdi],esi
  43c531:	add    DWORD PTR [rdi],esi
  43c533:	add    DWORD PTR [rax+0x370137fe],esi
  43c539:	add    DWORD PTR [rdi],esi
  43c53b:	add    DWORD PTR [rdi],esi
  43c53d:	add    DWORD PTR [rdi],esi
  43c53f:	add    DWORD PTR [rdi],esi
  43c541:	add    DWORD PTR [rdi],esi
  43c543:	add    DWORD PTR [rdi],esi
  43c545:	add    DWORD PTR [rdi],esi
  43c547:	add    DWORD PTR [rdi],esi
  43c549:	add    DWORD PTR [rdi],esi
  43c54b:	add    DWORD PTR [rdi],esi
  43c54d:	add    DWORD PTR [rdi],esi
  43c54f:	add    DWORD PTR [rdi],esi
  43c551:	add    DWORD PTR [rdi],esi
  43c553:	add    DWORD PTR [rdi],esi
  43c555:	add    DWORD PTR [rdi],esi
  43c557:	add    DWORD PTR [rdi],esi
  43c559:	add    DWORD PTR [rdi],esi
  43c55b:	add    DWORD PTR [rdi],esi
  43c55d:	add    DWORD PTR [rdi],esi
  43c55f:	add    DWORD PTR [rdi],esi
  43c561:	add    DWORD PTR [rdi],esi
  43c563:	add    DWORD PTR [rdi],esi
  43c565:	add    DWORD PTR [rdi],esi
  43c567:	add    DWORD PTR [rdi],esi
  43c569:	add    DWORD PTR [rdi],esi
  43c56b:	add    DWORD PTR [rdi],esi
  43c56d:	add    DWORD PTR [rdi],esi
  43c56f:	add    DWORD PTR [rdi],esi
  43c571:	add    DWORD PTR [rdi],esi
  43c573:	add    DWORD PTR [rdi],esi
  43c575:	add    DWORD PTR [rdi],esi
  43c577:	add    DWORD PTR [rdi],esi
  43c579:	add    DWORD PTR [rcx],ebp
  43c57b:	add    BYTE PTR [rdx+0x1],cl
  43c57e:	add    QWORD PTR [r9+r8*1+0x4c],rcx
  43c583:	add    DWORD PTR [rdx+0x1],ecx
  43c586:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c58a:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c58e:	rex.XB add DWORD PTR [r10+0x1],ecx
  43c592:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c596:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c59a:	add    QWORD PTR [r10+0x1],r9
  43c59e:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5a2:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5a6:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5aa:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5ae:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5b2:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5b6:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5ba:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5be:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5c2:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5c6:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5ca:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5ce:	rex.WX add QWORD PTR [rdx+0x1],rcx
  43c5d2:	rex.WX add QWORD PTR [rcx],rbp
  43c5d5:	add    BYTE PTR [rcx],bh
  43c5d7:	add    DWORD PTR [rcx],edi
  43c5d9:	add    DWORD PTR [rcx],edi
  43c5db:	add    DWORD PTR [rcx],edi
  43c5dd:	add    DWORD PTR [rcx],edi
  43c5df:	add    DWORD PTR [rcx],edi
  43c5e1:	add    DWORD PTR [rcx],edi
  43c5e3:	add    DWORD PTR [rcx],edi
  43c5e5:	add    DWORD PTR [rcx],edi
  43c5e7:	add    DWORD PTR [rsi+0x390139fe],ebp
  43c5ed:	add    DWORD PTR [rcx],edi
  43c5ef:	add    DWORD PTR [rcx],edi
  43c5f1:	add    DWORD PTR [rcx],edi
  43c5f3:	add    DWORD PTR [rcx],edi
  43c5f5:	add    DWORD PTR [rcx],edi
  43c5f7:	add    DWORD PTR [rcx],edi
  43c5f9:	add    DWORD PTR [rcx],edi
  43c5fb:	add    DWORD PTR [rcx],edi
  43c5fd:	add    DWORD PTR [rcx],edi
  43c5ff:	add    DWORD PTR [rcx],edi
  43c601:	add    DWORD PTR [rcx],edi
  43c603:	add    DWORD PTR [rcx],edi
  43c605:	add    DWORD PTR [rcx],edi
  43c607:	add    DWORD PTR [rcx],edi
  43c609:	add    DWORD PTR [rcx],edi
  43c60b:	add    DWORD PTR [rcx],edi
  43c60d:	add    DWORD PTR [rcx],edi
  43c60f:	add    DWORD PTR [rcx],edi
  43c611:	add    DWORD PTR [rcx],edi
  43c613:	add    DWORD PTR [rcx],edi
  43c615:	add    DWORD PTR [rcx],edi
  43c617:	add    DWORD PTR [rcx],edi
  43c619:	add    DWORD PTR [rcx],edi
  43c61b:	add    DWORD PTR [rcx],edi
  43c61d:	add    DWORD PTR [rcx],edi
  43c61f:	add    DWORD PTR [rcx],edi
  43c621:	add    DWORD PTR [rcx],edi
  43c623:	add    DWORD PTR [rcx],edi
  43c625:	add    DWORD PTR [rcx],edi
  43c627:	add    DWORD PTR [rcx],edi
  43c629:	add    DWORD PTR [rcx],edi
  43c62b:	add    DWORD PTR [rcx],edi
  43c62d:	add    DWORD PTR [rax],eax
	...
  43c63f:	add    BYTE PTR [rip+0x732573],ah        # 0xb6ebb8
  43c645:	pop    rsp
  43c646:	movsxd ebp,DWORD PTR [rdi+0x70]
  43c649:	jns    0x43c685
  43c64b:	and    BYTE PTR [rcx+0x72],ah
  43c64e:	addr32 jne 0x43c6be
  43c651:	outs   dx,BYTE PTR gs:[rsi]
  43c653:	je     0x43c6c8
  43c655:	and    BYTE PTR [rdx+0x65],dh
  43c658:	jno    0x43c6cf
  43c65a:	imul   esi,DWORD PTR [rdx+0x65],0xa64
  43c661:	and    al,BYTE PTR [rax]
  43c663:	cs sub al,0x28
  43c666:	sub    DWORD PTR [rax],eax
  43c668:	and    BYTE PTR [rcx],cl
  43c66a:	or     cl,BYTE PTR [rip+0x6e696200]        # 0x6ead2870
  43c670:	(bad)  
  43c671:	jb     0x43c6ec
  43c673:	add    BYTE PTR [rax],ah
  43c675:	add    BYTE PTR [rdx],ah
  43c677:	(bad)  
  43c678:	add    BYTE PTR [rax],ch
  43c67a:	sub    DWORD PTR [rax],eax
  43c67c:	data16 jb 0x43c6ee
  43c67f:	ins    DWORD PTR es:[rdi],dx
  43c680:	add    BYTE PTR [rdi+rbp*2+0x0],dh
  43c684:	(bad)  
  43c685:	add    BYTE PTR [rbx],bh
  43c687:	add    BYTE PTR [rax+0x72],dh
  43c68a:	outs   dx,DWORD PTR ds:[rsi]
  43c68b:	addr32 jb 0x43c6ef
  43c68e:	ins    DWORD PTR es:[rdi],dx
  43c68f:	add    BYTE PTR [rbx+0x74],dh
  43c692:	imul   ebp,DWORD PTR fs:[rsi+0x0],0x6f647473
  43c69a:	jne    0x43c710
  43c69c:	add    BYTE PTR [rax+0x73],dh
  43c69f:	je     0x43c705
  43c6a1:	imul   ebp,DWORD PTR [rsi+0x0],0x64747370
  43c6a8:	outs   dx,DWORD PTR ds:[rsi]
  43c6a9:	jne    0x43c71f
  43c6ab:	add    BYTE PTR [rdx+0x62],dh
  43c6ae:	add    BYTE PTR [rdi+0x62],dh
  43c6b1:	add    BYTE PTR [rax],al
  43c6b3:	add    BYTE PTR [rax],al
  43c6b5:	add    BYTE PTR [rax],al
  43c6b7:	add    BYTE PTR [rbx+0x6f],ah
  43c6ba:	jne    0x43c728
  43c6bc:	and    BYTE PTR fs:[rsi+0x6f],ch
  43c6c0:	je     0x43c6e2
  43c6c2:	gs js  0x43c72a
  43c6c5:	movsxd esi,DWORD PTR [rbp+0x74]
  43c6c8:	and    BYTE PTR gs:[rbx+0x6f],ah
  43c6cc:	ins    DWORD PTR es:[rdi],dx
  43c6cd:	ins    DWORD PTR es:[rdi],dx
  43c6ce:	(bad)  
  43c6cf:	outs   dx,BYTE PTR ds:[rsi]
  43c6d0:	and    BYTE PTR fs:[rdx],ah
  43c6d3:	and    eax,0x203a2273
  43c6d8:	and    eax,0x25000a73
  43c6dd:	jae    0x43c719
  43c6df:	and    BYTE PTR [rip+0xa73],ah        # 0x43d158
  43c6e5:	add    BYTE PTR [rax],al
  43c6e7:	add    BYTE PTR [rip+0x63203a73],ah        # 0x63640160
  43c6ed:	(bad)  
  43c6ee:	outs   dx,BYTE PTR ds:[rsi]
  43c6ef:	outs   dx,BYTE PTR ds:[rsi]
  43c6f0:	outs   dx,DWORD PTR ds:[rsi]
  43c6f1:	je     0x43c713
  43c6f3:	movsxd ebp,DWORD PTR [rdi+0x70]
  43c6f6:	jns    0x43c718
  43c6f8:	data16 jb 0x43c76a
  43c6fb:	ins    DWORD PTR es:[rdi],dx
  43c6fc:	(bad)  
  43c6fd:	je     0x43c76e
  43c6ff:	and    BYTE PTR [rcx+0x20],ah
  43c702:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  43c70a:	jns    0x43c716
  43c70c:	add    BYTE PTR [rbx+0x4f],al
  43c70f:	push   rax
  43c710:	pop    rcx
  43c711:	and    BYTE PTR [rax],al
  43c713:	and    BYTE PTR [rsi+0x52],al
  43c716:	rex.WRXB
  43c717:	rex.WRB and BYTE PTR [r11+0x54],r10b
  43c71b:	rex.R
  43c71c:	rex.WB
  43c71d:	rex.WRX and BYTE PTR [rax],r8b
  43c720:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  43c724:	push   rbx
  43c725:	push   rsp
  43c726:	rex.R
  43c727:	rex.WRXB push r13
  43c729:	push   rsp
  43c72a:	and    BYTE PTR [rax],al
  43c72c:	add    BYTE PTR [rax],al
  43c72e:	add    BYTE PTR [rax],al
  43c730:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c733:	ins    BYTE PTR es:[rdi],dx
  43c734:	and    BYTE PTR fs:[rsi+0x6f],ch
  43c738:	je     0x43c75a
  43c73a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  43c73e:	and    BYTE PTR gs:[rax+0x69],dh
  43c742:	jo     0x43c7a9
  43c744:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43c748:	gs js  0x43c7bf
  43c74b:	gs jb  0x43c7bc
  43c74e:	(bad)  
  43c74f:	ins    BYTE PTR es:[rdi],dx
  43c750:	and    BYTE PTR [rbx+0x6f],ah
  43c753:	ins    DWORD PTR es:[rdi],dx
  43c754:	ins    DWORD PTR es:[rdi],dx
  43c755:	(bad)  
  43c756:	outs   dx,BYTE PTR ds:[rsi]
  43c757:	cmp    ah,BYTE PTR fs:[rax]
  43c75a:	and    eax,0x5c000a73
  43c75f:	movsxd ebp,DWORD PTR [rdi+0x70]
  43c762:	jns    0x43c79e
  43c764:	and    BYTE PTR [rax+0x61],dh
  43c767:	jb     0x43c7dc
  43c769:	and    BYTE PTR gs:[rbp+0x72],ah
  43c76d:	jb     0x43c7de
  43c76f:	jb     0x43c791
  43c771:	(bad)  
  43c772:	je     0x43c794
  43c774:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4de9ed
  43c77a:	add    BYTE PTR [rax],al
  43c77c:	add    BYTE PTR [rax],al
  43c77e:	add    BYTE PTR [rax],al
  43c780:	pop    rsp
  43c781:	movsxd ebp,DWORD PTR [rdi+0x70]
  43c784:	jns    0x43c7c0
  43c786:	and    BYTE PTR [rax+0x61],dh
  43c789:	jb     0x43c7fe
  43c78b:	and    BYTE PTR gs:[rbp+0x72],ah
  43c78f:	jb     0x43c800
  43c791:	jb     0x43c7b3
  43c793:	(bad)  
  43c794:	je     0x43c7b6
  43c796:	outs   dx,BYTE PTR gs:[rsi]
  43c798:	and    BYTE PTR fs:[rdi+0x66],ch
  43c79c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  43c7a0:	or     al,BYTE PTR gs:[rax]
  43c7a3:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c7a6:	ins    BYTE PTR es:[rdi],dx
  43c7a7:	and    BYTE PTR fs:[rsi+0x6f],ch
  43c7ab:	je     0x43c7cd
  43c7ad:	jae    0x43c823
  43c7af:	(bad)  
  43c7b0:	je     0x43c7d2
  43c7b2:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2522
  43c7b9:	jae    0x43c7dd
  43c7bb:	cmp    ah,BYTE PTR [rax]
  43c7bd:	and    eax,0xa73
  43c7c2:	add    BYTE PTR [rax],al
  43c7c4:	add    BYTE PTR [rax],al
  43c7c6:	add    BYTE PTR [rax],al
  43c7c8:	movsxd ebp,DWORD PTR [rdi+0x75]
  43c7cb:	ins    BYTE PTR es:[rdi],dx
  43c7cc:	and    BYTE PTR fs:[rsi+0x6f],ch
  43c7d0:	je     0x43c7f2
  43c7d2:	ja     0x43c846
  43c7d4:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x59504f43
  43c7dc:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43c7e0:	(bad)  
  43c7e1:	cmp    ah,BYTE PTR [rax]
  43c7e3:	and    eax,0x43000a73
  43c7e8:	rex.WRXB push r8
  43c7ea:	pop    rcx
  43c7eb:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43c7ef:	(bad)  
  43c7f0:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43c7f4:	outs   dx,BYTE PTR ds:[rsi]
  43c7f5:	jae    0x43c85d
  43c7f7:	gs jb  0x43c81a
  43c7fa:	data16 (bad) 
  43c7fc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  43c804:	add    BYTE PTR [rip+0x61630073],ah        # 0x61a6c87d
  43c80a:	outs   dx,BYTE PTR ds:[rsi]
  43c80b:	movsxd esp,DWORD PTR [rbp+0x6c]
  43c80e:	gs and BYTE PTR fs:[rdx+0x79],ah
  43c813:	and    BYTE PTR [rbp+0x73],dh
  43c816:	gs jb  0x43c819
  43c819:	add    BYTE PTR [rax],al
  43c81b:	add    BYTE PTR [rax],al
  43c81d:	add    BYTE PTR [rax],al
  43c81f:	add    BYTE PTR [rcx+0x62],ah
  43c822:	outs   dx,DWORD PTR ds:[rsi]
  43c823:	jb     0x43c899
  43c825:	gs and BYTE PTR fs:[rdx+0x65],ah
  43c82a:	movsxd esp,DWORD PTR [rcx+0x75]
  43c82d:	jae    0x43c894
  43c82f:	and    BYTE PTR [rdi+0x66],ch
  43c832:	and    BYTE PTR [rdx+0x65],dh
  43c835:	(bad)  
  43c836:	and    BYTE PTR fs:[rsi+0x61],ah
  43c83a:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x72740065
  43c842:	jns    0x43c8ad
  43c844:	outs   dx,BYTE PTR ds:[rsi]
  43c845:	and    BYTE PTR [edi+ebp*2+0x20],dh
  43c84a:	gs js  0x43c8b6
  43c84d:	je     0x43c86f
  43c84f:	movsxd ebp,DWORD PTR [rdi+0x70]
  43c852:	jns    0x43c874
  43c854:	ins    DWORD PTR es:[rdi],dx
  43c855:	outs   dx,DWORD PTR ds:[rsi]
  43c856:	fs add BYTE PTR gs:[rax],al
  43c85a:	add    BYTE PTR [rax],al
  43c85c:	add    BYTE PTR [rax],al
  43c85e:	add    BYTE PTR [rax],al
  43c860:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43c862:	je     0x43c8c9
  43c864:	jb     0x43c886
  43c866:	fs (bad) 
  43c868:	je     0x43c8cb
  43c86a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43c86e:	(bad)  
  43c86f:	and    BYTE PTR gs:[rbx+0x6f],ah
  43c873:	jo     0x43c8de
  43c875:	gs and BYTE PTR fs:[rsi+0x6f],ah
  43c87a:	ins    BYTE PTR es:[rdi],dx
  43c87b:	ins    BYTE PTR es:[rdi],dx
  43c87c:	outs   dx,DWORD PTR ds:[rsi]
  43c87d:	ja     0x43c8e4
  43c87f:	and    BYTE PTR fs:[rdx+0x79],ah
  43c883:	and    BYTE PTR [rcx+0x20],ah
  43c886:	outs   dx,BYTE PTR ds:[rsi]
  43c887:	gs ja  0x43c8f6
  43c88a:	imul   ebp,DWORD PTR [rsi+0x65],0x6e450a2e
  43c891:	and    BYTE PTR fs:[rdi+0x69],dh
  43c895:	je     0x43c8ff
  43c897:	and    BYTE PTR [rcx+0x20],ah
  43c89a:	(bad)  
  43c89c:	movsxd ebp,DWORD PTR [rbx+0x73]
  43c89f:	ins    BYTE PTR es:[rdi],dx
  43c8a0:	(bad)  
  43c8a1:	jae    0x43c90b
  43c8a3:	and    BYTE PTR [rcx+0x6e],ah
  43c8a6:	and    BYTE PTR fs:[rcx+0x20],ah
  43c8aa:	jo     0x43c911
  43c8ac:	jb     0x43c917
  43c8ae:	outs   dx,DWORD PTR ds:[rsi]
  43c8af:	and    BYTE PTR fs:[rdi+0x6e],ch
  43c8b3:	and    BYTE PTR [rcx+0x20],ah
  43c8b6:	ins    BYTE PTR es:[rdi],dx
  43c8b7:	imul   ebp,DWORD PTR [rsi+0x65],0x20796220
  43c8be:	imul   esi,DWORD PTR [rbx+rsi*2+0x65],0x2e666c
  43c8c6:	pop    rsp
  43c8c7:	or     al,BYTE PTR cs:[rax]
  43c8ca:	pop    rsp
  43c8cb:	cs or  eax,0xa
  43c8d1:	fs gs data16 (bad) 
  43c8d5:	jne    0x43c943
  43c8d7:	je     0x43c8d9
  43c8d9:	je     0x43c940
  43c8db:	jb     0x43c950
  43c8dd:	add    BYTE PTR gs:[rsi+0x65],dh
  43c8e1:	jb     0x43c945
  43c8e3:	outs   dx,DWORD PTR ds:[rsi]
  43c8e4:	jae    0x43c94b
  43c8e6:	add    BYTE PTR [rsi+0x45],dl
  43c8e9:	push   rdx
  43c8ea:	rex.X
  43c8eb:	rex.WRXB push r11
  43c8ed:	rex.WB push r12
  43c8ef:	pop    rcx
	...
  43c8f8:	jne    0x43c968
  43c8fa:	jb     0x43c961
  43c8fc:	movsxd ebp,DWORD PTR [rdi+0x67]
  43c8ff:	outs   dx,BYTE PTR ds:[rsi]
  43c900:	imul   edi,DWORD PTR [rdx+0x65],0x61762064
  43c907:	ins    BYTE PTR es:[rdi],dx
  43c908:	jne    0x43c96f
  43c90a:	and    BYTE PTR [rdx],ah
  43c90c:	and    eax,0x66202273
  43c911:	outs   dx,DWORD PTR ds:[rsi]
  43c912:	jb     0x43c934
  43c914:	and    ah,BYTE PTR [rip+0x203b2273]        # 0x207eeb8d
  43c91a:	(bad)  
  43c91b:	jae    0x43c990
  43c91d:	jne    0x43c98c
  43c91f:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
  43c926:	and    cl,BYTE PTR [rdx]
  43c928:	add    BYTE PTR [rbx+0x49],dl
  43c92b:	rex.WRX
  43c92c:	rex.RXB
  43c92d:	rex.WR
  43c92e:	rex.RB push r11
  43c930:	push   rsp
  43c931:	rex.RB push r8
  43c933:	add    BYTE PTR [rbx+0x49],dl
  43c936:	rex.WRX
  43c937:	rex.RXB
  43c938:	rex.WR
  43c939:	rex.RB
  43c93a:	rex.WR
  43c93b:	rex.WB
  43c93c:	rex.WRX
  43c93d:	add    BYTE PTR [r9+0x55],r10b
  43c941:	rex.WB
  43c942:	rex.RB push r12
  43c944:	add    BYTE PTR [rdi+0x4e],cl
  43c947:	pop    rdi
  43c948:	rex.RB push r10
  43c94a:	push   rdx
  43c94b:	rex.WRXB push r10
  43c94d:	pop    rdi
  43c94e:	push   rbx
  43c94f:	push   rsp
  43c950:	rex.WRXB push r8
  43c952:	add    BYTE PTR [rcx+0x55],al
  43c955:	push   rsp
  43c956:	rex.WRXB
  43c957:	rex.XB
  43c958:	rex.WRXB
  43c959:	rex.WRB
  43c95a:	rex.WRB
  43c95b:	rex.WB push r12
  43c95d:	add    BYTE PTR [rcx],bh
  43c95f:	cs xor al,0x2e
  43c962:	xor    DWORD PTR [rax],eax
  43c964:	and    eax,0x73252d73
  43c969:	add    BYTE PTR [rcx],bh
  43c96b:	cs xor al,0x0
  43c96e:	push   rax
  43c96f:	push   rbx
  43c970:	push   rcx
  43c971:	rex.WR push rdx
  43c973:	rex.XB add BYTE PTR [r8],al
  43c976:	add    BYTE PTR [rax],al
  43c978:	and    eax,0x63203a73
  43c97d:	outs   dx,DWORD PTR ds:[rsi]
  43c97e:	jne    0x43c9ec
  43c980:	and    BYTE PTR fs:[rsi+0x6f],ch
  43c984:	je     0x43c9a6
  43c986:	imul   bp,WORD PTR [rsi+0x64],0x6f20
  43c98c:	ja     0x43c9fc
  43c98e:	and    BYTE PTR [rax+0x72],dh
  43c991:	outs   dx,DWORD PTR ds:[rsi]
  43c992:	addr32 jb 0x43c9f6
  43c995:	ins    DWORD PTR es:[rdi],dx
  43c996:	and    BYTE PTR [rbp+0x78],ah
  43c999:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  43c99d:	(bad)  
  43c99e:	(bad)  
  43c99f:	ins    BYTE PTR es:[rdi],dx
  43c9a0:	or     al,BYTE PTR gs:[rax]
  43c9a3:	and    eax,0x73252f73
  43c9a8:	add    BYTE PTR [rax+0x73],dh
  43c9ab:	jno    0x43ca19
  43c9ad:	jb     0x43ca12
  43c9af:	add    BYTE PTR [rax+0x73],dh
  43c9b2:	jno    0x43ca20
  43c9b4:	jb     0x43ca19
  43c9b6:	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
  43c9ba:	data16 add BYTE PTR [rcx+0x67],ch
  43c9be:	outs   dx,BYTE PTR ds:[rsi]
  43c9bf:	outs   dx,DWORD PTR ds:[rsi]
  43c9c0:	jb     0x43ca27
  43c9c2:	jae    0x43ca34
  43c9c4:	(bad)  
  43c9c5:	movsxd esp,DWORD PTR [rbp+0x0]
  43c9c8:	imul   esp,DWORD PTR [rdi+0x6e],0x6465726f
  43c9cf:	jne    0x43ca41
  43c9d1:	jae    0x43c9d3
  43c9d3:	imul   esp,DWORD PTR [rdi+0x6e],0x6265726f
  43c9da:	outs   dx,DWORD PTR ds:[rsi]
  43c9db:	je     0x43ca45
  43c9dd:	add    BYTE PTR [rsi+0x6f],ch
  43c9e0:	outs   dx,BYTE PTR ds:[rsi]
  43c9e1:	add    BYTE PTR gs:[rax+0x49],cl
  43c9e5:	push   rbx
  43c9e6:	push   rsp
  43c9e7:	rex.XB
  43c9e8:	rex.WRXB
  43c9e9:	rex.WRX push rsp
  43c9eb:	push   rdx
  43c9ec:	rex.WRXB
  43c9ed:	rex.WR add BYTE PTR [rax+0x72],r14b
  43c9f1:	gs jae 0x43ca59
  43c9f4:	jb     0x43ca6c
  43c9f6:	gs sub eax,0x65707075
  43c9fc:	jb     0x43c9fe
  43c9fe:	jo     0x43ca72
  43ca00:	gs jae 0x43ca68
  43ca03:	jb     0x43ca7b
  43ca05:	gs sub eax,0x65776f6c
  43ca0b:	jb     0x43ca0d
  43ca0d:	jne    0x43ca7f
  43ca0f:	jo     0x43ca76
  43ca11:	jb     0x43ca13
  43ca13:	ins    BYTE PTR es:[rdi],dx
  43ca14:	outs   dx,DWORD PTR ds:[rsi]
  43ca15:	ja     0x43ca7c
  43ca17:	jb     0x43ca19
  43ca19:	rex.XB
  43ca1a:	rex.WRXB
  43ca1b:	rex.WRB push r8
  43ca1d:	pop    rdi
  43ca1e:	rex.WXB
  43ca1f:	rex.RB pop r9
  43ca21:	push   rdi
  43ca22:	rex.WRXB push r10
  43ca24:	rex.R pop rdi
  43ca26:	rex.XB
  43ca27:	push   r11
  43ca29:	add    BYTE PTR [r9+0x75],r14b
  43ca2d:	gs jb  0x43ca99
  43ca30:	gs jae 0x43ca33
  43ca33:	(bad)  
  43ca34:	ins    BYTE PTR es:[rdi],dx
  43ca35:	ins    BYTE PTR es:[rdi],dx
  43ca36:	add    BYTE PTR [rbp+0x43],al
  43ca39:	rex.W
  43ca3a:	rex.WRXB add BYTE PTR [r9+0x6e],r13b
  43ca3e:	je     0x43caa5
  43ca40:	jb     0x43caa3
  43ca42:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  43ca46:	add    BYTE PTR gs:[rdi+0x4e],cl
  43ca4a:	pop    rdi
  43ca4b:	rex.RB push r10
  43ca4d:	push   rdx
  43ca4e:	rex.WRXB push r10
  43ca50:	pop    rdi
  43ca51:	push   rdx
  43ca52:	rex.WRXB
  43ca53:	rex.WR
  43ca54:	rex.WR
  43ca55:	rex.X
  43ca56:	rex.B
  43ca57:	rex.XB
  43ca58:	rex.WXB add BYTE PTR [r14+0x6f],bpl
  43ca5c:	gs js  0x43cac4
  43ca5f:	movsxd eax,DWORD PTR [rax]
  43ca61:	rex.RB
  43ca62:	rex.XB
  43ca63:	rex.W
  43ca64:	rex.WRXB pop r15
  43ca66:	rex.W
  43ca67:	rex.WB
  43ca68:	rex.R
  43ca69:	rex.R
  43ca6a:	rex.RB
  43ca6b:	rex.WRX add BYTE PTR [rax+0x6f],r14b
  43ca6f:	jae    0x43cae5
  43ca71:	addr32 jb 0x43cad9
  43ca74:	jae    0x43ca76
  43ca76:	(bad)  
  43ca77:	jne    0x43caed
  43ca79:	outs   dx,DWORD PTR ds:[rsi]
  43ca7a:	add    BYTE PTR [rax+0x73],dh
  43ca7d:	jno    0x43caeb
  43ca7f:	sub    eax,0x342e39
  43ca84:	sub    eax,0x6c65682d
  43ca89:	jo     0x43ca8b
  43ca8b:	sub    eax,0x2d2d003f
  43ca90:	jbe    0x43caf7
  43ca92:	jb     0x43cb07
  43ca94:	imul   ebp,DWORD PTR [rdi+0x6e],0x562d00
  43ca9b:	jo     0x43cb10
  43ca9d:	jno    0x43cb0b
  43ca9f:	and    BYTE PTR [rax],ch
  43caa1:	push   rax
  43caa2:	outs   dx,DWORD PTR ds:[rsi]
  43caa3:	jae    0x43cb19
  43caa5:	addr32 jb 0x43cb0d
  43caa8:	push   rbx
  43caa9:	push   rcx
  43caaa:	sub    QWORD PTR [rax],r12
  43caad:	cmp    DWORD PTR [rsi],ebp
  43caaf:	xor    al,0x2e
  43cab1:	xor    DWORD PTR [rax],eax
  43cab3:	rex.XB
  43cab4:	rex.WRXB
  43cab5:	rex.WR push rbp
  43cab7:	rex.WRB
  43cab8:	rex.WRX push rbx
  43caba:	add    BYTE PTR [rsi+0x45],al
  43cabd:	push   rsp
  43cabe:	rex.XB
  43cabf:	rex.W pop rdi
  43cac1:	rex.XB
  43cac2:	rex.WRXB push r13
  43cac4:	rex.WRX push rsp
  43cac6:	add    BYTE PTR [rax+0x52],dl
  43cac9:	rex.WRXB
  43caca:	rex.WRB push r8
  43cacc:	push   rsp
  43cacd:	xor    DWORD PTR [rax],eax
  43cacf:	push   rax
  43cad0:	push   rdx
  43cad1:	rex.WRXB
  43cad2:	rex.WRB push r8
  43cad4:	push   rsp
  43cad5:	xor    al,BYTE PTR [rax]
  43cad7:	push   rax
  43cad8:	push   rdx
  43cad9:	rex.WRXB
  43cada:	rex.WRB push r8
  43cadc:	push   rsp
  43cadd:	xor    eax,DWORD PTR [rax]
  43cadf:	add    BYTE PTR [rax+0x6f],dl
  43cae2:	jae    0x43cb58
  43cae4:	addr32 jb 0x43cb4c
  43cae7:	push   rbx
  43cae8:	push   rcx
  43cae9:	rex.WR and BYTE PTR [rcx],r15b
  43caec:	cs xor al,0x2e
  43caef:	xor    DWORD PTR [rax],esp
  43caf1:	outs   dx,DWORD PTR ds:[rsi]
  43caf2:	outs   dx,BYTE PTR ds:[rsi]
  43caf3:	and    BYTE PTR [rax+0x38],bh
  43caf6:	ss pop rdi
  43caf8:	ss xor al,0x2d
  43cafb:	ja     0x43cb33
  43cafd:	xor    al,0x2d
  43caff:	ins    DWORD PTR es:[rdi],dx
  43cb00:	imul   ebp,DWORD PTR [rsi+0x67],0x2c323377
  43cb07:	and    BYTE PTR [rbx+0x6f],ah
  43cb0a:	ins    DWORD PTR es:[rdi],dx
  43cb0b:	jo     0x43cb76
  43cb0d:	ins    BYTE PTR es:[rdi],dx
  43cb0e:	gs and BYTE PTR fs:[rdx+0x79],ah
  43cb13:	and    BYTE PTR [rax+0x38],bh
  43cb16:	ss pop rdi
  43cb18:	ss xor al,0x2d
  43cb1b:	ja     0x43cb53
  43cb1d:	xor    al,0x2d
  43cb1f:	ins    DWORD PTR es:[rdi],dx
  43cb20:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  43cb27:	movsxd esp,DWORD PTR [ebx+0x20]
  43cb2b:	sub    BYTE PTR [rdi+0x43],al
  43cb2e:	rex.XB sub DWORD PTR [r8],esp
  43cb31:	xor    al,0x2e
  43cb33:	cmp    DWORD PTR [rsi],ebp
  43cb35:	xor    al,0x2c
  43cb37:	and    BYTE PTR [rsi],dh
  43cb39:	xor    al,0x2d
  43cb3b:	(bad)  
  43cb3c:	imul   esi,DWORD PTR [rax+rax*1+0x56],0x49535245
  43cb44:	rex.WRXB
  43cb45:	rex.WRX add BYTE PTR [rip+0x2552252f],r12b        # 0x2595f07b
  43cb4c:	and    esp,DWORD PTR [rax]
  43cb4e:	add    BYTE PTR [rsi],bh
  43cb50:	and    BYTE PTR ds:[rax],al
  43cb53:	add    BYTE PTR [rax],al
  43cb55:	add    BYTE PTR [rax],al
  43cb57:	add    BYTE PTR [rip+0x63203a73],ah        # 0x636405d0
  43cb5d:	outs   dx,DWORD PTR ds:[rsi]
  43cb5e:	jne    0x43cbcc
  43cb60:	and    BYTE PTR fs:[rsi+0x6f],ch
  43cb64:	je     0x43cb86
  43cb66:	jae    0x43cbcd
  43cb68:	je     0x43cb8a
  43cb6a:	jo     0x43cbde
  43cb6c:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  43cb73:	jo     0x43cbd6
  43cb75:	jb     0x43cbd8
  43cb77:	ins    DWORD PTR es:[rdi],dx
  43cb78:	gs je  0x43cbe0
  43cb7b:	jb     0x43cb9d
  43cb7d:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4dedf6
  43cb83:	add    BYTE PTR [rax],al
  43cb85:	add    BYTE PTR [rax],al
  43cb87:	add    BYTE PTR [rip+0x63203a73],ah        # 0x63640600
  43cb8d:	outs   dx,DWORD PTR ds:[rsi]
  43cb8e:	jne    0x43cbfc
  43cb90:	and    BYTE PTR fs:[rsi+0x6f],ch
  43cb94:	je     0x43cbb6
  43cb96:	fs gs ins BYTE PTR es:[rdi],dx
  43cb99:	gs je  0x43cc01
  43cb9c:	and    BYTE PTR [rsi+0x61],dh
  43cb9f:	jb     0x43cc0a
  43cba1:	(bad)  
  43cba2:	(bad)  
  43cba3:	ins    BYTE PTR es:[rdi],dx
  43cba4:	and    BYTE PTR gs:[rdx],ah
  43cba7:	and    eax,0xa2273
  43cbac:	add    BYTE PTR [rax],al
  43cbae:	add    BYTE PTR [rax],al
  43cbb0:	and    eax,0x63203a73
  43cbb5:	outs   dx,DWORD PTR ds:[rsi]
  43cbb6:	jne    0x43cc24
  43cbb8:	and    BYTE PTR fs:[rsi+0x6f],ch
  43cbbc:	je     0x43cbde
  43cbbe:	jae    0x43cc25
  43cbc0:	je     0x43cbe2
  43cbc2:	jbe    0x43cc25
  43cbc4:	jb     0x43cc2f
  43cbc6:	(bad)  
  43cbc7:	(bad)  
  43cbc8:	ins    BYTE PTR es:[rdi],dx
  43cbc9:	and    BYTE PTR gs:[rdx],ah
  43cbcc:	and    eax,0xa2273
  43cbd1:	add    BYTE PTR [rax],al
  43cbd3:	add    BYTE PTR [rax],al
  43cbd5:	add    BYTE PTR [rax],al
  43cbd7:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  43cbdb:	and    BYTE PTR [rdx],ah
  43cbdd:	and    eax,0x2d2d2073
  43cbe2:	push   0x22706c65
  43cbe7:	and    BYTE PTR [rsi+0x6f],ah
  43cbea:	jb     0x43cc0c
  43cbec:	ins    DWORD PTR es:[rdi],dx
  43cbed:	outs   dx,DWORD PTR ds:[rsi]
  43cbee:	jb     0x43cc55
  43cbf0:	and    BYTE PTR [rcx+0x6e],ch
  43cbf3:	outs   dx,WORD PTR ds:[rsi]
  43cbf5:	jb     0x43cc64
  43cbf7:	(bad)  
  43cbf8:	je     0x43cc63
  43cbfa:	outs   dx,DWORD PTR ds:[rsi]
  43cbfb:	outs   dx,BYTE PTR ds:[rsi]
  43cbfc:	or     al,BYTE PTR cs:[rax]
  43cbff:	add    BYTE PTR [rcx+0x41],ah
  43cc02:	movsxd edi,DWORD PTR [rdx]
  43cc04:	cmp    ah,BYTE PTR fs:[rbp+0x45]
  43cc08:	data16 cmp al,BYTE PTR [rsi+0x3a]
  43cc0c:	push   0x4c6c483a
  43cc11:	cmp    ch,BYTE PTR [rsi+0x6f]
  43cc14:	cmp    dh,BYTE PTR [rax+0x3a]
  43cc17:	push   rax
  43cc18:	cmp    dh,BYTE PTR [rcx+0x52]
  43cc1b:	cmp    dh,BYTE PTR [rbx+0x53]
  43cc1e:	je     0x43cc74
  43cc20:	cmp    dl,BYTE PTR [rbp+0x3a]
  43cc23:	jbe    0x43cc5f
  43cc25:	push   rsi
  43cc26:	ja     0x43cc7f
  43cc28:	js     0x43cc82
  43cc2a:	jp     0x43cc6b
  43cc2c:	xor    BYTE PTR [rcx],dh
  43cc2e:	add    BYTE PTR [rax],al
  43cc30:	and    eax,0x77203a73
  43cc35:	(bad)  
  43cc36:	jb     0x43cca6
  43cc38:	imul   ebp,DWORD PTR [rsi+0x67],0x7865203a
  43cc3f:	je     0x43ccb3
  43cc41:	(bad)  
  43cc42:	and    BYTE PTR [rbx+0x6f],ah
  43cc45:	ins    DWORD PTR es:[rdi],dx
  43cc46:	ins    DWORD PTR es:[rdi],dx
  43cc47:	(bad)  
  43cc48:	outs   dx,BYTE PTR ds:[rsi]
  43cc49:	fs sub eax,0x656e696c
  43cc4f:	and    BYTE PTR [rcx+0x72],ah
  43cc52:	addr32 jne 0x43ccc2
  43cc55:	outs   dx,BYTE PTR gs:[rsi]
  43cc57:	je     0x43cc79
  43cc59:	and    ah,BYTE PTR [rip+0x69202273]        # 0x6963eed2
  43cc5f:	outs   dx,BYTE PTR ds:[esi]
  43cc61:	outs   dx,DWORD PTR ds:[rsi]
  43cc62:	jb     0x43ccc9
  43cc64:	or     al,BYTE PTR fs:[rax]
  43cc67:	add    BYTE PTR [rip+0x2d203a73],ah        # 0x2d6406e0
  43cc6d:	xor    DWORD PTR [rax],esp
  43cc6f:	movsxd esp,DWORD PTR [rcx+0x6e]
  43cc72:	and    BYTE PTR [rdi+0x6e],ch
  43cc75:	ins    BYTE PTR es:[rdi],dx
  43cc76:	jns    0x43cc98
  43cc78:	(bad)  
  43cc79:	and    BYTE PTR gs:[rbp+0x73],dh
  43cc7d:	gs and BYTE PTR fs:[rcx+0x6e],ch
  43cc82:	and    BYTE PTR [rsi+0x6f],ch
  43cc85:	outs   dx,BYTE PTR ds:[rsi]
  43cc86:	sub    eax,0x65746e69
  43cc8b:	jb     0x43ccee
  43cc8d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  43cc91:	and    BYTE PTR gs:[rbp+0x6f],ch
  43cc95:	fs or  al,BYTE PTR gs:[rax]
  43cc99:	jl     0x43cc9b
  43cc9b:	or     al,BYTE PTR [rax]
  43cc9d:	push   rax
  43cc9e:	(bad)  
  43cc9f:	jae    0x43cd14
  43cca1:	ja     0x43cd12
  43cca3:	jb     0x43cd09
  43cca5:	cmp    ah,BYTE PTR [rax]
  43cca7:	add    BYTE PTR [rax+0x61],dl
  43ccaa:	jae    0x43cd1f
  43ccac:	ja     0x43cd1d
  43ccae:	jb     0x43cd14
  43ccb0:	and    BYTE PTR [rsi+0x6f],ah
  43ccb3:	jb     0x43ccd5
  43ccb5:	jne    0x43cd2a
  43ccb7:	gs jb  0x43ccda
  43ccba:	and    eax,0x203a73
  43ccbf:	push   0x74736f
  43ccc4:	jo     0x43cd35
  43ccc6:	jb     0x43cd3c
  43ccc8:	add    BYTE PTR [rbp+0x73],dh
  43cccb:	gs jb  0x43ccce
  43ccce:	jo     0x43cd31
  43ccd0:	jae    0x43cd45
  43ccd2:	ja     0x43cd43
  43ccd4:	jb     0x43cd3a
  43ccd6:	add    BYTE PTR [rdx+riz*2+0x6e],ah
  43ccda:	(bad)  
  43ccdb:	ins    DWORD PTR es:[rdi],dx
  43ccdc:	add    BYTE PTR gs:[rsi+0x61],ah
  43cce0:	ins    BYTE PTR es:[rdi],dx
  43cce1:	ins    BYTE PTR es:[rdi],dx
  43cce2:	(bad)  
  43cce4:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43cce7:	(bad)  
  43cce8:	jo     0x43cd5a
  43ccea:	ins    BYTE PTR es:[rdi],dx
  43cceb:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  43ccf2:	pop    rdi
  43ccf3:	outs   dx,BYTE PTR ds:[rsi]
  43ccf4:	(bad)  
  43ccf5:	ins    DWORD PTR es:[rdi],dx
  43ccf6:	add    BYTE PTR gs:[rbx+0x6c],ah
  43ccfa:	imul   esp,DWORD PTR [rbp+0x6e],0x6e655f74
  43cd01:	movsxd ebp,DWORD PTR [rdi+0x64]
  43cd04:	imul   ebp,DWORD PTR [rsi+0x67],0x43475000
  43cd0b:	rex.WR
  43cd0c:	rex.WB
  43cd0d:	rex.RB
  43cd0e:	rex.WRX push rsp
  43cd10:	rex.RB
  43cd11:	rex.WRX
  43cd12:	rex.XB
  43cd13:	rex.WRXB
  43cd14:	rex.R
  43cd15:	rex.WB
  43cd16:	rex.WRX
  43cd17:	rex.RXB add BYTE PTR [rip+0x25203a73],r12b        # 0x25640791
  43cd1e:	jae    0x43cd20
  43cd20:	(bad)  
  43cd21:	add    BYTE PTR [rax],al
  43cd23:	add    BYTE PTR [rax],al
  43cd25:	add    BYTE PTR [rax],al
  43cd27:	add    BYTE PTR [rip+0x63203a73],ah        # 0x636407a0
  43cd2d:	outs   dx,DWORD PTR ds:[rsi]
  43cd2e:	jne    0x43cd9c
  43cd30:	and    BYTE PTR fs:[rsi+0x6f],ch
  43cd34:	je     0x43cd56
  43cd36:	outs   dx,DWORD PTR ds:[rsi]
  43cd37:	jo     0x43cd9e
  43cd39:	outs   dx,BYTE PTR ds:[rsi]
  43cd3a:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  43cd3e:	and    BYTE PTR [rsi+0x69],ah
  43cd41:	ins    BYTE PTR es:[rdi],dx
  43cd42:	and    BYTE PTR gs:[rdx],ah
  43cd45:	and    eax,0x203a2273
  43cd4a:	and    eax,0x54000a73
  43cd4f:	jns    0x43cdc1
  43cd51:	and    BYTE PTR gs:[rdx],ah
  43cd54:	push   0x22706c65
  43cd59:	and    BYTE PTR [rsi+0x6f],ah
  43cd5c:	jb     0x43cd7e
  43cd5e:	push   0x2e706c65
  43cd63:	or     cl,BYTE PTR [rdx]
  43cd65:	add    BYTE PTR [rax],al
  43cd67:	add    BYTE PTR [rcx-0x19],bl
  43cd6a:	(bad)  
  43cd6b:	dec    DWORD PTR [rdi+riz*8-0x2]
  43cd6f:	jmp    QWORD PTR [rbp-0x19]
  43cd72:	(bad)  
  43cd73:	jmp    QWORD PTR [rbp-0x19]
  43cd76:	(bad)  
  43cd77:	jmp    QWORD PTR [rbp-0x19]
  43cd7a:	(bad)  
  43cd7b:	jmp    QWORD PTR [rbp-0x19]
  43cd7e:	(bad)  
  43cd7f:	jmp    QWORD PTR [rbp-0x19]
  43cd82:	(bad)  
  43cd83:	jmp    QWORD PTR [rbp-0x19]
  43cd86:	(bad)  
  43cd87:	jmp    QWORD PTR [rbp-0x19]
  43cd8a:	(bad)  
  43cd8b:	jmp    QWORD PTR [rbp-0x19]
  43cd8e:	(bad)  
  43cd8f:	jmp    QWORD PTR [rbp-0x19]
  43cd92:	(bad)  
  43cd93:	jmp    QWORD PTR [rbp-0x19]
  43cd96:	(bad)  
  43cd97:	jmp    QWORD PTR [rbp-0x19]
  43cd9a:	(bad)  
  43cd9b:	jmp    QWORD PTR [rbp-0x19]
  43cd9e:	(bad)  
  43cd9f:	jmp    QWORD PTR [rbp-0x19]
  43cda2:	(bad)  
  43cda3:	dec    DWORD PTR [rbx]
  43cda5:	out    0xfe,eax
  43cda7:	jmp    QWORD PTR [rbp-0x19]
  43cdaa:	(bad)  
  43cdab:	(bad)  
  43cdac:	cld    
  43cdad:	out    0xfe,al
  43cdaf:	jmp    QWORD PTR [rbp-0x19]
  43cdb2:	(bad)  
  43cdb3:	jmp    QWORD PTR [rbp-0x19]
  43cdb6:	(bad)  
  43cdb7:	jmp    QWORD PTR [rbp-0x19]
  43cdba:	(bad)  
  43cdbb:	jmp    rsp
  43cdbd:	out    0xfe,al
  43cdbf:	inc    edx
  43cdc1:	out    0xfe,al
  43cdc3:	jmp    QWORD PTR [rbp-0x19]
  43cdc6:	(bad)  
  43cdc7:	push   QWORD PTR [rbx+0x65fffee6]
  43cdcd:	out    0xfe,eax
  43cdcf:	jmp    QWORD PTR [rbp-0x19]
  43cdd2:	(bad)  
  43cdd3:	jmp    QWORD PTR [rbp-0x19]
  43cdd6:	(bad)  
  43cdd7:	call   QWORD PTR [rdi+0x65fffee6]
  43cddd:	out    0xfe,eax
  43cddf:	jmp    QWORD PTR [rbp-0x19]
  43cde2:	(bad)  
  43cde3:	jmp    QWORD PTR [rbp-0x19]
  43cde6:	(bad)  
  43cde7:	jmp    QWORD PTR [rbx]
  43cde9:	out    0xfe,al
  43cdeb:	jmp    QWORD PTR [rbp-0x19]
  43cdee:	(bad)  
  43cdef:	inc    DWORD PTR [rbx]
  43cdf1:	out    0xfe,al
  43cdf3:	(bad)  
  43cdf4:	jmp    0x43cddb
  43cdf6:	(bad)  
  43cdf7:	call   rdi
  43cdf9:	in     eax,0xfe
  43cdfb:	inc    ebp
  43cdfd:	in     eax,0xfe
  43cdff:	dec    edi
  43ce01:	jrcxz  0x43ce01
  43ce03:	push   QWORD PTR [rsi-0x5600011b]
  43ce09:	in     eax,0xfe
  43ce0b:	jmp    QWORD PTR [rbp-0x19]
  43ce0e:	(bad)  
  43ce0f:	jmp    QWORD PTR [rbp-0x19]
  43ce12:	(bad)  
  43ce13:	jmp    QWORD PTR [rbp-0x19]
  43ce16:	(bad)  
  43ce17:	jmp    QWORD PTR [rbp-0x19]
  43ce1a:	(bad)  
  43ce1b:	jmp    QWORD PTR [rbp-0x19]
  43ce1e:	(bad)  
  43ce1f:	jmp    QWORD PTR [rbp-0x19]
  43ce22:	(bad)  
  43ce23:	jmp    QWORD PTR [rbp-0x19]
  43ce26:	(bad)  
  43ce27:	jmp    QWORD PTR [rbp-0x19]
  43ce2a:	(bad)  
  43ce2b:	dec    DWORD PTR [rdx+0x65fffee5]
  43ce31:	out    0xfe,eax
  43ce33:	call   QWORD PTR [rdi-0x1b]
  43ce36:	(bad)  
  43ce37:	(bad)  
  43ce38:	ds in  eax,0xfe
  43ce3b:	call   FWORD PTR [rdi]
  43ce3d:	in     eax,0xfe
  43ce3f:	(bad)  
  43ce40:	clc    
  43ce41:	in     al,0xfe
  43ce43:	jmp    QWORD PTR [rbp-0x19]
  43ce46:	(bad)  
  43ce47:	(bad)  
  43ce48:	(bad)  
  43ce4a:	(bad)  
  43ce4b:	jmp    QWORD PTR [rbp-0x19]
  43ce4e:	(bad)  
  43ce4f:	jmp    QWORD PTR [rbp-0x19]
  43ce52:	(bad)  
  43ce53:	jmp    QWORD PTR [rbp-0x19]
  43ce56:	(bad)  
  43ce57:	dec    edi
  43ce59:	in     al,0xfe
  43ce5b:	jmp    QWORD PTR [rbp-0x19]
  43ce5e:	(bad)  
  43ce5f:	inc    edx
  43ce61:	in     al,0xfe
  43ce63:	jmp    FWORD PTR [rsi-0x6800011c]
  43ce69:	in     al,0xfe
  43ce6b:	(bad)  
  43ce6c:	jg     0x43ce52
  43ce6e:	(bad)  
  43ce6f:	jmp    QWORD PTR [rbp-0x19]
  43ce72:	(bad)  
  43ce73:	jmp    QWORD PTR [rdi-0x1c]
  43ce76:	(bad)  
  43ce77:	call   FWORD PTR [rbx-0x1c]
  43ce7a:	(bad)  
  43ce7b:	jmp    QWORD PTR [rbp-0x19]
  43ce7e:	(bad)  
  43ce7f:	inc    DWORD PTR [rdx]
  43ce81:	in     al,0xfe
  43ce83:	push   rsi
  43ce85:	jrcxz  0x43ce85
  43ce87:	(bad)  
  43ce88:	jmp    0x43ce6d
  43ce8a:	(bad)  
  43ce8b:	jmp    QWORD PTR [rbp-0x19]
  43ce8e:	(bad)  
  43ce8f:	jmp    rdx
  43ce91:	jrcxz  0x43ce91
  43ce93:	jmp    QWORD PTR [rbp+0x63]
  43ce96:	push   0x6c612d6f
  43ce9b:	ins    BYTE PTR es:[rdi],dx
  43ce9c:	add    BYTE PTR [rsi+0x6f],ch
  43ce9f:	sub    eax,0x67696c61
  43cea4:	outs   dx,BYTE PTR ds:[rsi]
  43cea5:	add    BYTE PTR [rbx+0x6f],ah
  43cea8:	ins    DWORD PTR es:[rdi],dx
  43cea9:	ins    DWORD PTR es:[rdi],dx
  43ceaa:	(bad)  
  43ceab:	outs   dx,BYTE PTR ds:[rsi]
  43ceac:	add    BYTE PTR fs:[rbp+0x63],ah
  43ceb0:	push   0x75712d6f
  43ceb5:	gs jb  0x43cf21
  43ceb8:	gs jae 0x43cebb
  43cebb:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  43cebf:	sub    eax,0x64646968
  43cec4:	outs   dx,BYTE PTR gs:[rsi]
  43cec6:	add    BYTE PTR [rsi+0x69],ah
  43cec9:	ins    BYTE PTR es:[rdi],dx
  43ceca:	add    BYTE PTR gs:[rsi+0x69],ah
  43cece:	gs ins BYTE PTR es:[rdi],dx
  43ced0:	fs sub eax,0x61706573
  43ced6:	jb     0x43cf39
  43ced8:	je     0x43cf49
  43ceda:	jb     0x43cedc
  43cedc:	imul   sp,WORD PTR [rbp+0x6c],0x2d64
  43cee2:	jae    0x43cf49
  43cee4:	jo     0x43cf47
  43cee6:	jb     0x43cf49
  43cee8:	je     0x43cf59
  43ceea:	jb     0x43cf19
  43ceec:	jp     0x43cf53
  43ceee:	jb     0x43cf5f
  43cef0:	add    BYTE PTR [rax+0x74],ch
  43cef3:	ins    DWORD PTR es:[rdi],dx
  43cef4:	ins    BYTE PTR es:[rdi],dx
  43cef5:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  43cef9:	je     0x43cefb
  43cefb:	ins    BYTE PTR es:[rdi],dx
  43cefc:	outs   dx,DWORD PTR ds:[rsi]
  43cefd:	addr32 sub eax,0x656c6966
  43cf03:	add    BYTE PTR [rsi+0x6f],ch
  43cf06:	sub    eax,0x64616572
  43cf0b:	ins    BYTE PTR es:[rdi],dx
  43cf0c:	imul   ebp,DWORD PTR [rsi+0x65],0x6e697300
  43cf13:	ins    BYTE PTR es:[edi],dx
  43cf15:	gs sub eax,0x6e617274
  43cf1b:	jae    0x43cf7e
  43cf1d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43cf21:	outs   dx,BYTE PTR ds:[rsi]
  43cf22:	add    BYTE PTR [rdi+0x75],ch
  43cf25:	je     0x43cf97
  43cf27:	jne    0x43cf9d
  43cf29:	add    BYTE PTR [rax+0x73],dh
  43cf2c:	gs je  0x43cf2f
  43cf2f:	jno    0x43cfa6
  43cf31:	imul   esp,DWORD PTR [rbp+0x74],0x63657200
  43cf38:	outs   dx,DWORD PTR ds:[rsi]
  43cf39:	jb     0x43cf9f
  43cf3b:	sub    eax,0x61706573
  43cf40:	jb     0x43cfa3
  43cf42:	je     0x43cfb3
  43cf44:	jb     0x43cf46
  43cf46:	jb     0x43cfad
  43cf48:	movsxd ebp,DWORD PTR [rdi+0x72]
  43cf4b:	fs sub eax,0x61706573
  43cf51:	jb     0x43cfb4
  43cf53:	je     0x43cfc4
  43cf55:	jb     0x43cf84
  43cf57:	jp     0x43cfbe
  43cf59:	jb     0x43cfca
  43cf5b:	add    BYTE PTR [rbx+0x69],dh
  43cf5e:	outs   dx,BYTE PTR ds:[rsi]
  43cf5f:	ins    BYTE PTR es:[edi],dx
  43cf61:	gs sub eax,0x70657473
  43cf67:	add    BYTE PTR [rbx+0x69],dh
  43cf6a:	outs   dx,BYTE PTR ds:[rsi]
  43cf6b:	ins    BYTE PTR es:[edi],dx
  43cf6d:	gs sub eax,0x656e696c
  43cf73:	add    BYTE PTR [rbp+rsi*2+0x70],dh
  43cf77:	ins    BYTE PTR es:[rdi],dx
  43cf78:	gs jae 0x43cfa8
  43cf7b:	outs   dx,DWORD PTR ds:[rsi]
  43cf7c:	outs   dx,BYTE PTR ds:[rsi]
  43cf7d:	ins    BYTE PTR es:[rdi],dx
  43cf7e:	jns    0x43cf80
  43cf80:	je     0x43cfe3
  43cf82:	(bad)  
  43cf83:	ins    BYTE PTR es:[rdi],dx
  43cf84:	gs sub eax,0x72747461
  43cf8a:	add    BYTE PTR [rbp+0x73],dh
  43cf8d:	gs jb  0x43cffe
  43cf90:	(bad)  
  43cf91:	ins    DWORD PTR es:[rdi],dx
  43cf92:	add    BYTE PTR gs:[rbx+0x65],dh
  43cf96:	je     0x43cf98
  43cf98:	jbe    0x43cffb
  43cf9a:	jb     0x43d005
  43cf9c:	(bad)  
  43cf9d:	(bad)  
  43cf9e:	ins    BYTE PTR es:[rdi],dx
  43cf9f:	add    BYTE PTR gs:[rsi+0x65],dh
  43cfa3:	jb     0x43d018
  43cfa5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d6f6e00
  43cfac:	jo     0x43d00f
  43cfae:	jae    0x43d023
  43cfb0:	ja     0x43d021
  43cfb2:	jb     0x43d018
  43cfb4:	add    BYTE PTR [rbp+0x78],ah
  43cfb7:	jo     0x43d01a
  43cfb9:	outs   dx,BYTE PTR ds:[rsi]
  43cfba:	fs gs add BYTE PTR fs:[rsi+0x6f],ch
  43cfc0:	sub    eax,0x6c717370
  43cfc5:	jb     0x43d02a
  43cfc7:	add    BYTE PTR [rax+0x65],ch
  43cfca:	ins    BYTE PTR es:[rdi],dx
  43cfcb:	jo     0x43cfcd
  43cfcd:	add    BYTE PTR [rax],al
  43cfcf:	add    BYTE PTR [rdi],bh
  43cfd1:	and    BYTE PTR [rax],al
  43cfd3:	jle    0x43cfd5
  43cfd5:	push   rax
  43cfd6:	rex.RXB
  43cfd7:	rex.R
  43cfd8:	push   r12
  43cfda:	rex.B
  43cfdb:	rex.X
  43cfdc:	push   r11
  43cfde:	add    BYTE PTR [r14],r13b
  43cfe1:	add    BYTE PTR [rax+0x0],ah
  43cfe4:	jb     0x43cfe6
  43cfe6:	cmp    al,BYTE PTR [rax]
  43cfe8:	or     BYTE PTR [rdi],dl
  43cfea:	std    
  43cfeb:	(bad)  
  43cfec:	js     0x43d007
  43cfee:	std    
  43cfef:	(bad)  
  43cff0:	js     0x43d00b
  43cff2:	std    
  43cff3:	(bad)  
  43cff4:	js     0x43d00f
  43cff6:	std    
  43cff7:	(bad)  
  43cff8:	js     0x43d013
  43cffa:	std    
  43cffb:	(bad)  
  43cffc:	js     0x43d017
  43cffe:	std    
  43cfff:	(bad)  
  43d000:	js     0x43d01b
  43d002:	std    
  43d003:	(bad)  
  43d004:	js     0x43d01f
  43d006:	std    
  43d007:	(bad)  
  43d008:	js     0x43d023
  43d00a:	std    
  43d00b:	(bad)  
  43d00c:	js     0x43d027
  43d00e:	std    
  43d00f:	(bad)  
  43d010:	js     0x43d02b
  43d012:	std    
  43d013:	(bad)  
  43d014:	js     0x43d02f
  43d016:	std    
  43d017:	(bad)  
  43d018:	ficom  DWORD PTR [rsi]
  43d01a:	std    
  43d01b:	(bad)  
  43d01c:	mov    eax,0xb8fffd16
  43d021:	(bad)  
  43d022:	std    
  43d023:	(bad)  
  43d024:	mov    eax,0xb8fffd16
  43d029:	(bad)  
  43d02a:	std    
  43d02b:	(bad)  
  43d02c:	mov    eax,0xb8fffd16
  43d031:	(bad)  
  43d032:	std    
  43d033:	(bad)  
  43d034:	mov    eax,0xb8fffd16
  43d039:	(bad)  
  43d03a:	std    
  43d03b:	(bad)  
  43d03c:	js     0x43d057
  43d03e:	std    
  43d03f:	(bad)  
  43d040:	js     0x43d05b
  43d042:	std    
  43d043:	(bad)  
  43d044:	fcom   DWORD PTR [rip+0x1978fffd]        # 0x19bcd047
  43d04a:	std    
  43d04b:	(bad)  
  43d04c:	js     0x43d067
  43d04e:	std    
  43d04f:	(bad)  
  43d050:	js     0x43d06b
  43d052:	std    
  43d053:	dec    DWORD PTR [rax+0x38fffd16]
  43d059:	(bad)  
  43d05a:	std    
  43d05b:	(bad)  
  43d05c:	js     0x43d077
  43d05e:	std    
  43d05f:	(bad)  
  43d060:	js     0x43d07b
  43d062:	std    
  43d063:	(bad)  
  43d064:	js     0x43d07f
  43d066:	std    
  43d067:	(bad)  
  43d068:	js     0x43d083
  43d06a:	std    
  43d06b:	(bad)  
  43d06c:	js     0x43d087
  43d06e:	std    
  43d06f:	(bad)  
  43d070:	js     0x43d08b
  43d072:	std    
  43d073:	(bad)  
  43d074:	js     0x43d08f
  43d076:	std    
  43d077:	(bad)  
  43d078:	js     0x43d093
  43d07a:	std    
  43d07b:	(bad)  
  43d07c:	js     0x43d097
  43d07e:	std    
  43d07f:	(bad)  
  43d080:	js     0x43d09b
  43d082:	std    
  43d083:	(bad)  
  43d084:	js     0x43d09f
  43d086:	std    
  43d087:	(bad)  
  43d088:	js     0x43d0a3
  43d08a:	std    
  43d08b:	(bad)  
  43d08c:	js     0x43d0a7
  43d08e:	std    
  43d08f:	(bad)  
  43d090:	fcomp  DWORD PTR [rax]
  43d092:	std    
  43d093:	(bad)  
  43d094:	js     0x43d0af
  43d096:	std    
  43d097:	(bad)  
  43d098:	js     0x43d0b3
  43d09a:	std    
  43d09b:	(bad)  
  43d09c:	js     0x43d0b7
  43d09e:	std    
  43d09f:	(bad)  
  43d0a0:	js     0x43d0bb
  43d0a2:	std    
  43d0a3:	(bad)  
  43d0a4:	mov    eax,0x78fffd18
  43d0a9:	sbb    ebp,edi
  43d0ab:	(bad)  
  43d0ac:	js     0x43d0c7
  43d0ae:	std    
  43d0af:	(bad)  
  43d0b0:	js     0x43d0cb
  43d0b2:	std    
  43d0b3:	(bad)  
  43d0b4:	js     0x43d0cf
  43d0b6:	std    
  43d0b7:	(bad)  
  43d0b8:	js     0x43d0d3
  43d0ba:	std    
  43d0bb:	(bad)  
  43d0bc:	js     0x43d0d7
  43d0be:	std    
  43d0bf:	(bad)  
  43d0c0:	js     0x43d0db
  43d0c2:	std    
  43d0c3:	(bad)  
  43d0c4:	js     0x43d0df
  43d0c6:	std    
  43d0c7:	(bad)  
  43d0c8:	cmp    BYTE PTR [rsi],dl
  43d0ca:	std    
  43d0cb:	(bad)  
  43d0cc:	js     0x43d0e7
  43d0ce:	std    
  43d0cf:	(bad)  
  43d0d0:	cmp    BYTE PTR [rsi],dl
  43d0d2:	std    
  43d0d3:	(bad)  
  43d0d4:	js     0x43d0ef
  43d0d6:	std    
  43d0d7:	(bad)  
  43d0d8:	js     0x43d0f3
  43d0da:	std    
  43d0db:	dec    DWORD PTR [rax+0x78fffd17]
  43d0e1:	sbb    ebp,edi
  43d0e3:	(bad)  
  43d0e4:	js     0x43d0ff
  43d0e6:	std    
  43d0e7:	(bad)  
  43d0e8:	js     0x43d103
  43d0ea:	std    
  43d0eb:	(bad)  
  43d0ec:	js     0x43d107
  43d0ee:	std    
  43d0ef:	(bad)  
  43d0f0:	js     0x43d10b
  43d0f2:	std    
  43d0f3:	(bad)  
  43d0f4:	js     0x43d10f
  43d0f6:	std    
  43d0f7:	(bad)  
  43d0f8:	js     0x43d113
  43d0fa:	std    
  43d0fb:	(bad)  
  43d0fc:	js     0x43d117
  43d0fe:	std    
  43d0ff:	(bad)  
  43d100:	js     0x43d11b
  43d102:	std    
  43d103:	(bad)  
  43d104:	js     0x43d11f
  43d106:	std    
  43d107:	(bad)  
  43d108:	js     0x43d123
  43d10a:	std    
  43d10b:	(bad)  
  43d10c:	js     0x43d127
  43d10e:	std    
  43d10f:	(bad)  
  43d110:	fcomp  DWORD PTR [rax]
  43d112:	std    
  43d113:	call   FWORD PTR [rax+0x17]
  43d116:	std    
  43d117:	(bad)  
  43d118:	js     0x43d133
  43d11a:	std    
  43d11b:	(bad)  
  43d11c:	js     0x43d137
  43d11e:	std    
  43d11f:	(bad)  
  43d120:	js     0x43d13b
  43d122:	std    
  43d123:	(bad)  
  43d124:	js     0x43d13f
  43d126:	std    
  43d127:	(bad)  
  43d128:	js     0x43d143
  43d12a:	std    
  43d12b:	(bad)  
  43d12c:	js     0x43d147
  43d12e:	std    
  43d12f:	(bad)  
  43d130:	js     0x43d14b
  43d132:	std    
  43d133:	(bad)  
  43d134:	js     0x43d14f
  43d136:	std    
  43d137:	(bad)  
  43d138:	js     0x43d153
  43d13a:	std    
  43d13b:	jmp    FWORD PTR [rax]
  43d13d:	(bad)  
  43d13e:	std    
  43d13f:	(bad)  
  43d140:	js     0x43d15b
  43d142:	std    
  43d143:	(bad)  
  43d144:	js     0x43d15f
  43d146:	std    
  43d147:	(bad)  
  43d148:	js     0x43d163
  43d14a:	std    
  43d14b:	(bad)  
  43d14c:	js     0x43d167
  43d14e:	std    
  43d14f:	(bad)  
  43d150:	js     0x43d16b
  43d152:	std    
  43d153:	dec    DWORD PTR [rax+0x18]
  43d156:	std    
  43d157:	(bad)  
  43d158:	fstp   QWORD PTR [rax]
  43d15a:	std    
  43d15b:	call   rbx
  43d15d:	sbb    ch,bh
  43d15f:	dec    ecx
  43d161:	sbb    ch,bh
  43d163:	(bad)  
  43d164:	mov    edi,0xb5fffd18
  43d169:	sbb    ch,bh
  43d16b:	jmp    FWORD PTR [rbx+0x5fffd18]
  43d171:	sbb    ebp,edi
  43d173:	inc    DWORD PTR [rax]
	...
  43d17d:	add    BYTE PTR [rax],al
  43d17f:	add    BYTE PTR [rcx+0x42],al
  43d182:	rex.XB
  43d183:	rex.R
  43d184:	rex.RB
  43d185:	rex.RX
  43d186:	rex.RXB
  43d187:	rex.W
  43d188:	rex.WB
  43d189:	rex.WX
  43d18a:	rex.WXB
  43d18b:	rex.WR
  43d18c:	rex.WRB
  43d18d:	rex.WRX
  43d18e:	rex.WRXB push r8
  43d190:	push   rcx
  43d191:	push   rdx
  43d192:	push   rbx
  43d193:	push   rsp
  43d194:	push   rbp
  43d195:	push   rsi
  43d196:	push   rdi
  43d197:	pop    rax
  43d198:	pop    rcx
  43d199:	pop    rdx
  43d19a:	(bad)  
  43d19b:	(bad)
  43d1a0:	addr32 push 0x6c6b6a69
  43d1a6:	ins    DWORD PTR es:[rdi],dx
  43d1a7:	outs   dx,BYTE PTR ds:[rsi]
  43d1a8:	outs   dx,DWORD PTR ds:[rsi]
  43d1a9:	jo     0x43d21c
  43d1ab:	jb     0x43d220
  43d1ad:	je     0x43d224
  43d1af:	jbe    0x43d228
  43d1b1:	js     0x43d22c
  43d1b3:	jp     0x43d214
  43d1b5:	xor    BYTE PTR [rcx],dh
  43d1b7:	xor    dh,BYTE PTR [rbx]
  43d1b9:	xor    al,0x35
  43d1bb:	ss (bad) 
  43d1bd:	cmp    BYTE PTR [rcx],bh
  43d1bf:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  43d1c3:	add    BYTE PTR gs:[rsi+0x61],ah
  43d1c7:	ins    BYTE PTR es:[rdi],dx
  43d1c8:	jae    0x43d22f
  43d1ca:	add    BYTE PTR [rcx+0x65],bh
  43d1cd:	jae    0x43d1cf
  43d1cf:	outs   dx,BYTE PTR ds:[rsi]
  43d1d0:	outs   dx,DWORD PTR ds:[rsi]
  43d1d1:	add    BYTE PTR [rdi+0x6e],ch
  43d1d4:	add    BYTE PTR [rdi+0x66],ch
  43d1d7:	data16 add BYTE PTR [rcx],dh
  43d1da:	add    BYTE PTR [rax],dh
  43d1dc:	add    BYTE PTR [rax],al
  43d1de:	add    BYTE PTR [rax],al
  43d1e0:	jne    0x43d250
  43d1e2:	jb     0x43d249
  43d1e4:	movsxd ebp,DWORD PTR [rdi+0x67]
  43d1e7:	outs   dx,BYTE PTR ds:[rsi]
  43d1e8:	imul   edi,DWORD PTR [rdx+0x65],0x61762064
  43d1ef:	ins    BYTE PTR es:[rdi],dx
  43d1f0:	jne    0x43d257
  43d1f2:	and    BYTE PTR [rdx],ah
  43d1f4:	and    eax,0x66202273
  43d1f9:	outs   dx,DWORD PTR ds:[rsi]
  43d1fa:	jb     0x43d21c
  43d1fc:	and    ah,BYTE PTR [rip+0x203b2273]        # 0x207ef475
  43d202:	(bad)  
  43d203:	jae    0x43d278
  43d205:	jne    0x43d274
  43d207:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
  43d20e:	and    cl,BYTE PTR [rdx]
  43d210:	add    BYTE PTR [rip+0x203d2073],ah        # 0x2080f289
  43d216:	(bad)  
  43d217:	and    eax,0xa2773
  43d21c:	add    BYTE PTR [rax],al
  43d21e:	add    BYTE PTR [rax],al
  43d220:	cmp    al,0x70
  43d222:	add    BYTE PTR ds:[rdi+rbp*1],bh
  43d226:	jo     0x43d266
  43d228:	or     al,BYTE PTR [rax]
  43d22a:	add    BYTE PTR [rax],al
  43d22c:	add    BYTE PTR [rax],al
  43d22e:	add    BYTE PTR [rax],al
  43d230:	and    eax,0x6e203a73
  43d235:	outs   dx,DWORD PTR ds:[rsi]
  43d236:	je     0x43d258
  43d238:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43d23b:	outs   dx,BYTE PTR ds:[rsi]
  43d23c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43d241:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43d245:	(bad)  
  43d246:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43d24a:	(bad)  
  43d24b:	(bad)  
  43d24d:	jae    0x43d2b4
  43d24f:	or     al,BYTE PTR [rax]
  43d251:	rex.X
  43d252:	rex.RB
  43d253:	rex.RXB
  43d254:	rex.WB
  43d255:	rex.WRX add BYTE PTR [rax],r8b
  43d258:	and    eax,0x63203a73
  43d25d:	jne    0x43d2d1
  43d25f:	jb     0x43d2c6
  43d261:	outs   dx,BYTE PTR ds:[rsi]
  43d262:	je     0x43d284
  43d264:	je     0x43d2d8
  43d266:	(bad)  
  43d267:	outs   dx,BYTE PTR ds:[rsi]
  43d268:	jae    0x43d2cb
  43d26a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43d26e:	outs   dx,BYTE PTR ds:[rsi]
  43d26f:	and    BYTE PTR [rcx+0x73],ch
  43d272:	and    BYTE PTR [rcx+0x62],ah
  43d275:	outs   dx,DWORD PTR ds:[rsi]
  43d276:	jb     0x43d2ec
  43d278:	gs or  al,BYTE PTR fs:[rax]
  43d27c:	add    BYTE PTR [rax],al
  43d27e:	add    BYTE PTR [rax],al
  43d280:	and    eax,0x75203a73
  43d285:	outs   dx,BYTE PTR ds:[rsi]
  43d286:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43d28a:	outs   dx,BYTE PTR ds:[rsi]
  43d28b:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  43d28f:	outs   dx,BYTE PTR ds:[rsi]
  43d290:	jae    0x43d2f3
  43d292:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43d296:	outs   dx,BYTE PTR ds:[rsi]
  43d297:	and    BYTE PTR [rbx+0x74],dh
  43d29a:	(bad)  
  43d29b:	je     0x43d312
  43d29d:	jae    0x43d2a9
  43d29f:	add    BYTE PTR [rdx+0x4f],dl
  43d2a2:	rex.WR
  43d2a3:	rex.WR
  43d2a4:	rex.X
  43d2a5:	rex.B
  43d2a6:	rex.XB
  43d2a7:	rex.WXB add BYTE PTR [r11+0x4f],al
  43d2ab:	rex.WRB
  43d2ac:	rex.WRB
  43d2ad:	rex.WB push r12
  43d2af:	add    BYTE PTR [rsp+rbp*2+0x6f],bl
  43d2b3:	pop    rdi
  43d2b4:	gs js  0x43d327
  43d2b7:	outs   dx,DWORD PTR ds:[rsi]
  43d2b8:	jb     0x43d32e
  43d2ba:	add    BYTE PTR [rip+0x6f6c0073],ah        # 0x6fafd333
  43d2c0:	pop    rdi
  43d2c1:	gs js  0x43d334
  43d2c4:	outs   dx,DWORD PTR ds:[rsi]
  43d2c5:	jb     0x43d33b
  43d2c7:	add    BYTE PTR [rsp+rbp*2+0x6f],bl
  43d2cb:	pop    rdi
  43d2cc:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  43d2d3:	add    BYTE PTR [rax],al
  43d2d5:	add    BYTE PTR [rax],al
  43d2d7:	add    BYTE PTR [rbx+0x4f],al
  43d2da:	rex.WRB
  43d2db:	rex.WRB
  43d2dc:	rex.RB
  43d2dd:	rex.WRX push rsp
  43d2df:	and    BYTE PTR [rdi+0x4e],cl
  43d2e2:	and    BYTE PTR [rcx+rax*2+0x52],cl
  43d2e6:	rex.RXB
  43d2e7:	and    BYTE PTR [r15+0x42],r9b
  43d2eb:	rex.WX
  43d2ec:	rex.RB
  43d2ed:	rex.XB push r12
  43d2ef:	and    BYTE PTR [rip+0x53492075],ah        # 0x538cf36a
  43d2f5:	and    BYTE PTR [rdi],ah
  43d2f7:	add    BYTE PTR [rdi+rbp*2+0x5f],ch
  43d2fb:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
  43d302:	and    eax,0x75250075
  43d307:	add    BYTE PTR [rcx+rax*2+0x53],cl
  43d30b:	push   rsp
  43d30c:	rex.WRXB
  43d30d:	rex.WB
  43d30e:	add    BYTE PTR [rsp+rbp*2+0x6f],r11b
  43d313:	pop    rdi
  43d314:	jne    0x43d384
  43d316:	ins    BYTE PTR es:[rdi],dx
  43d317:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f6f6c00
  43d31e:	jne    0x43d38e
  43d320:	ins    BYTE PTR es:[rdi],dx
  43d321:	imul   ebp,DWORD PTR [rsi+0x6b],0x752520
  43d328:	rex.WB
  43d329:	add    BYTE PTR [rax],r8b
  43d32c:	add    BYTE PTR [rax],al
  43d32e:	add    BYTE PTR [rax],al
  43d330:	push   rbx
  43d331:	rex.RB
  43d332:	rex.WR
  43d333:	rex.RB
  43d334:	rex.XB push r12
  43d336:	and    BYTE PTR [rdi+0x69],ch
  43d339:	and    BYTE PTR fs:[rcx+0x73],ah
  43d33d:	and    BYTE PTR [rdx],ah
  43d33f:	and    eax,0xa2c2273
  43d344:	and    BYTE PTR [rax],ah
  43d346:	jo     0x43d3af
  43d348:	pop    rdi
  43d349:	movsxd esp,DWORD PTR [rcx+0x74]
  43d34c:	(bad)  
  43d34d:	ins    BYTE PTR es:[rdi],dx
  43d34e:	outs   dx,DWORD PTR ds:[rsi]
  43d34f:	addr32 cs jo 0x43d3ba
  43d353:	pop    rdi
  43d354:	addr32 gs je 0x43d3b7
  43d358:	jne    0x43d3cd
  43d35a:	gs jb  0x43d3bf
  43d35d:	jns    0x43d3c8
  43d35f:	sub    BYTE PTR fs:[rdi+rbp*2+0x6d],ch
  43d364:	outs   dx,DWORD PTR ds:[rsi]
  43d365:	ja     0x43d3d5
  43d367:	gs jb  0x43d393
  43d36a:	and    BYTE PTR [rcx+0x73],ah
  43d36d:	and    BYTE PTR [rdx],ah
  43d36f:	and    eax,0xa2c2273
  43d374:	and    BYTE PTR [rax],ah
  43d376:	jo     0x43d3df
  43d378:	pop    rdi
  43d379:	movsxd esp,DWORD PTR [rcx+0x74]
  43d37c:	(bad)  
  43d37d:	ins    BYTE PTR es:[rdi],dx
  43d37e:	outs   dx,DWORD PTR ds:[rsi]
  43d37f:	outs   dx,DWORD PTR cs:[esi]
  43d382:	(bad)  
  43d383:	push   0x5f
  43d385:	fs gs jae 0x43d3ec
  43d389:	jb     0x43d3f4
  43d38b:	jo     0x43d401
  43d38d:	imul   ebp,DWORD PTR [rdi+0x6e],0x64696f28
  43d394:	sub    al,0x20
  43d396:	(bad)  
  43d397:	jo     0x43d400
  43d399:	pop    rdi
  43d39a:	ins    BYTE PTR es:[rdi],dx
  43d39b:	(bad)  
  43d39c:	jb     0x43d405
  43d39e:	outs   dx,DWORD PTR gs:[rsi]
  43d3a0:	(bad)  
  43d3a1:	push   0x65
  43d3a3:	movsxd esi,DWORD PTR [rdi+riz*1+0x29]
  43d3a7:	and    BYTE PTR [rcx+0x73],ah
  43d3aa:	and    BYTE PTR [rdx],ah
  43d3ac:	and    eax,0x200a2273
  43d3b1:	and    BYTE PTR [rsi+0x52],al
  43d3b4:	rex.WRXB
  43d3b5:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43d3b9:	pop    rdi
  43d3ba:	movsxd esp,DWORD PTR [rcx+0x74]
  43d3bd:	(bad)  
  43d3be:	ins    BYTE PTR es:[rdi],dx
  43d3bf:	outs   dx,DWORD PTR ds:[rsi]
  43d3c0:	addr32 cs jo 0x43d42b
  43d3c4:	pop    rdi
  43d3c5:	ins    BYTE PTR es:[rdi],dx
  43d3c6:	(bad)  
  43d3c7:	jb     0x43d430
  43d3c9:	outs   dx,DWORD PTR gs:[rsi]
  43d3cb:	(bad)  
  43d3cc:	push   0x65
  43d3ce:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6d]
  43d3d2:	gs je  0x43d436
  43d3d5:	fs (bad) 
  43d3d7:	je     0x43d43a
  43d3d9:	and    BYTE PTR [rax],ah
  43d3db:	and    BYTE PTR [rdi+0x52],cl
  43d3de:	rex.R
  43d3df:	rex.RB push r10
  43d3e1:	and    BYTE PTR [rdx+0x59],al
  43d3e4:	and    BYTE PTR [rdi+0x69],ch
  43d3e7:	add    BYTE PTR fs:[rbp+riz*2+0x73],al
  43d3ec:	movsxd esi,DWORD PTR [rdx+0x69]
  43d3ef:	jo     0x43d465
  43d3f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e774f00
  43d3f8:	gs jb  0x43d3fb
  43d3fb:	add    BYTE PTR [rax],al
  43d3fd:	add    BYTE PTR [rax],al
  43d3ff:	add    BYTE PTR [rbx+0x45],dl
  43d402:	rex.WR
  43d403:	rex.RB
  43d404:	rex.XB push r12
  43d406:	and    BYTE PTR [rdi+rbp*2+0x69],ch
  43d40a:	and    BYTE PTR fs:[rcx+0x73],ah
  43d40e:	and    BYTE PTR [rdx],ah
  43d410:	and    eax,0xa2c2273
  43d415:	and    BYTE PTR [rax],ah
  43d417:	jo     0x43d480
  43d419:	pop    rdi
  43d41a:	movsxd esp,DWORD PTR [rcx+0x74]
  43d41d:	(bad)  
  43d41e:	ins    BYTE PTR es:[rdi],dx
  43d41f:	outs   dx,DWORD PTR ds:[rsi]
  43d420:	outs   dx,DWORD PTR cs:[esi]
  43d423:	(bad)  
  43d424:	push   0x5f
  43d426:	fs gs jae 0x43d48d
  43d42a:	jb     0x43d495
  43d42c:	jo     0x43d4a2
  43d42e:	imul   ebp,DWORD PTR [rdi+0x6e],0x696f6c28
  43d435:	fs sub al,0x20
  43d438:	(bad)  
  43d439:	jo     0x43d4a2
  43d43b:	pop    rdi
  43d43c:	ins    BYTE PTR es:[rdi],dx
  43d43d:	(bad)  
  43d43e:	jb     0x43d4a7
  43d440:	outs   dx,DWORD PTR gs:[rsi]
  43d442:	(bad)  
  43d443:	push   0x65
  43d445:	movsxd esi,DWORD PTR [rdi+riz*1+0x29]
  43d449:	and    BYTE PTR [rcx+0x73],ah
  43d44c:	and    BYTE PTR [rdx],ah
  43d44e:	and    eax,0x460a2273
  43d453:	push   rdx
  43d454:	rex.WRXB
  43d455:	rex.WRB and BYTE PTR [r8],r13b
  43d458:	push   rbx
  43d459:	rex.RB
  43d45a:	rex.WR
  43d45b:	rex.RB
  43d45c:	rex.XB push r12
  43d45e:	and    BYTE PTR [rcx+rcx*2+0x53],al
  43d462:	push   rsp
  43d463:	rex.WB
  43d464:	rex.WRX
  43d465:	rex.XB push r12
  43d467:	and    BYTE PTR [rdi+rbp*2+0x69],ch
  43d46b:	and    BYTE PTR fs:[rsi+0x52],al
  43d46f:	rex.WRXB
  43d470:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43d474:	pop    rdi
  43d475:	movsxd esp,DWORD PTR [rcx+0x74]
  43d478:	(bad)  
  43d479:	ins    BYTE PTR es:[rdi],dx
  43d47a:	outs   dx,DWORD PTR ds:[rsi]
  43d47b:	addr32 cs jo 0x43d4e6
  43d47f:	pop    rdi
  43d480:	ins    BYTE PTR es:[rdi],dx
  43d481:	(bad)  
  43d482:	jb     0x43d4eb
  43d484:	outs   dx,DWORD PTR gs:[rsi]
  43d486:	(bad)  
  43d487:	push   0x65
  43d489:	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
  43d48d:	js     0x43d499
  43d48f:	rex.WRXB push r10
  43d491:	rex.R
  43d492:	rex.RB push r10
  43d494:	and    BYTE PTR [rdx+0x59],al
  43d497:	and    BYTE PTR [rcx],dh
  43d499:	add    BYTE PTR [rcx+riz*2+0x72],cl
  43d49d:	and    BYTE PTR gs:[edi+0x62],ch
  43d4a2:	push   0x65
  43d4a4:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
	...
  43d4c0:	pop    rsp
  43d4c1:	add    BYTE PTR es:[rbp+riz*1+0x0],bl
  43d4c6:	pop    rsp
  43d4c7:	and    al,0x0
  43d4c9:	pop    rsp
  43d4ca:	pop    rdi
  43d4cb:	add    BYTE PTR [rbx+rdi*2+0x0],bl
  43d4cf:	pop    rsp
  43d4d0:	jge    0x43d4d2
  43d4d2:	pop    rsp
  43d4d3:	(bad)  
  43d4d5:	movsxd ebp,DWORD PTR [rbx+0x73]
  43d4d8:	ins    BYTE PTR es:[rdi],dx
  43d4d9:	(bad)  
  43d4da:	jae    0x43d544
  43d4dc:	add    BYTE PTR [rsp+rbx*2+0x0],bl
  43d4e0:	pop    rsp
  43d4e1:	sub    BYTE PTR [rdx+0x73],dh
  43d4e4:	add    BYTE PTR [rdx+riz*2+0x65],bl
  43d4e8:	imul   ebp,DWORD PTR [esi+0x7b],0x746e6563
  43d4f0:	gs jb  0x43d570
  43d4f3:	or     al,BYTE PTR [rax]
  43d4f5:	or     bl,BYTE PTR [rbp+riz*2+0x6e]
  43d4f9:	fs jnp 0x43d55f
  43d4fc:	outs   dx,BYTE PTR gs:[rsi]
  43d4fe:	je     0x43d565
  43d500:	jb     0x43d57f
  43d502:	or     cl,BYTE PTR [rdx]
  43d504:	add    BYTE PTR [rdx+riz*2+0x65],bl
  43d508:	imul   ebp,DWORD PTR [esi+0x7b],0x75626174
  43d510:	ins    BYTE PTR es:[rdi],dx
  43d511:	(bad)  
  43d512:	jb     0x43d591
  43d514:	jnp    0x43d516
  43d516:	movsxd ebp,DWORD PTR [rax+rax*1+0x63]
  43d51a:	jl     0x43d588
  43d51c:	add    BYTE PTR [rbx+riz*2+0x7c],bh
  43d520:	ins    BYTE PTR es:[rdi],dx
  43d521:	jl     0x43d523
  43d523:	jge    0x43d52f
  43d525:	add    BYTE PTR [rax+rbp*2+0x6c],bl
  43d529:	imul   ebp,DWORD PTR [rsi+0x65],0xa
  43d530:	pop    rsp
  43d531:	ins    DWORD PTR es:[rdi],dx
  43d532:	jne    0x43d5a0
  43d534:	je     0x43d59f
  43d536:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43d539:	jne    0x43d5a8
  43d53b:	outs   dx,BYTE PTR ds:[rsi]
  43d53c:	jnp    0x43d570
  43d53e:	jge    0x43d5bb
  43d540:	jl     0x43d5a5
  43d542:	jl     0x43d5c1
  43d544:	jnp    0x43d5a2
  43d546:	je     0x43d5ad
  43d548:	js     0x43d5be
  43d54a:	imul   esi,DWORD PTR [rbx+rdi*2+0x52],0x726f6365
  43d552:	and    BYTE PTR fs:[rip+0x7d7d756c],ah        # 0x7dc14ac5
  43d559:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  43d55d:	add    BYTE PTR [rax],al
  43d55f:	add    BYTE PTR [rbp+rbp*2+0x75],bl
  43d563:	ins    BYTE PTR es:[rdi],dx
  43d564:	je     0x43d5cf
  43d566:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43d569:	jne    0x43d5d8
  43d56b:	outs   dx,BYTE PTR ds:[rsi]
  43d56c:	jnp    0x43d5a0
  43d56e:	jge    0x43d5eb
  43d570:	movsxd edi,DWORD PTR [rbp+0x7b]
  43d573:	pop    rsp
  43d574:	je     0x43d5db
  43d576:	js     0x43d5ec
  43d578:	imul   esi,DWORD PTR [rbx+rdi*2+0x52],0x726f6365
  43d580:	and    BYTE PTR fs:[rip+0x7d7d756c],ah        # 0x7dc14af3
  43d587:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  43d58b:	add    BYTE PTR [rax],ah
  43d58d:	and    BYTE PTR es:[rax],al
  43d590:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  43d594:	add    BYTE PTR [rbp+riz*2+0x6e],bl
  43d598:	fs jnp 0x43d60f
  43d59b:	(bad)  
  43d59c:	(bad)  
  43d59d:	jne    0x43d60b
  43d59f:	(bad)  
  43d5a0:	jb     0x43d61f
  43d5a2:	or     cl,BYTE PTR [rdx]
  43d5a4:	pop    rsp
  43d5a5:	outs   dx,BYTE PTR ds:[rsi]
  43d5a6:	outs   dx,DWORD PTR ds:[rsi]
  43d5a7:	imul   ebp,DWORD PTR [rsi+0x64],0x20746e65
  43d5ae:	add    BYTE PTR [rax],ah
  43d5b0:	add    BYTE PTR [rip+0x732573],ah        # 0xb6fb29
  43d5b6:	sub    ah,BYTE PTR [rax]
  43d5b8:	push   rdx
  43d5b9:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  43d5bd:	and    BYTE PTR fs:[rip+0x5b00756c],ah        # 0x5b444b30
  43d5c4:	and    BYTE PTR [rdx+0x45],dl
  43d5c7:	rex.XB
  43d5c8:	rex.WRXB push r10
  43d5ca:	and    BYTE PTR [rip+0x5d20756c],r12b        # 0x5d644b3d
  43d5d1:	add    BYTE PTR [rip+0x25732573],ah        # 0x25b6fb4a
  43d5d7:	jae    0x43d5d9
  43d5d9:	sub    BYTE PTR [rip+0x7220756c],ah        # 0x72644b4b
  43d5df:	outs   dx,DWORD PTR ds:[rsi]
  43d5e0:	ja     0x43d60b
  43d5e2:	add    BYTE PTR [rax],ch
  43d5e4:	and    eax,0x7220756c
  43d5e9:	outs   dx,DWORD PTR ds:[rsi]
  43d5ea:	ja     0x43d65f
  43d5ec:	sub    DWORD PTR [rax],eax
  43d5ee:	es (bad) 
  43d5f0:	ins    DWORD PTR es:[rdi],dx
  43d5f1:	jo     0x43d62e
  43d5f3:	add    BYTE PTR [rsi],ah
  43d5f5:	ins    BYTE PTR es:[rdi],dx
  43d5f6:	je     0x43d633
  43d5f8:	add    BYTE PTR [rsi],ah
  43d5fa:	addr32 je 0x43d638
  43d5fd:	add    BYTE PTR [rdx+riz*2],bh
  43d600:	jb     0x43d622
  43d602:	(bad)  
  43d603:	or     al,BYTE PTR ds:[rax]
  43d606:	es jno 0x43d67e
  43d609:	outs   dx,DWORD PTR ds:[rsi]
  43d60a:	je     0x43d647
  43d60c:	add    BYTE PTR [rsi],ah
  43d60e:	outs   dx,BYTE PTR ds:[rsi]
  43d60f:	(bad)  
  43d611:	jo     0x43d64e
  43d613:	add    al,dh
  43d615:	sub    bh,ch
  43d617:	dec    DWORD PTR [rdi]
  43d619:	sub    edi,ebp
  43d61b:	dec    DWORD PTR [rdi]
  43d61d:	sub    edi,ebp
  43d61f:	dec    DWORD PTR [rdi]
  43d621:	sub    edi,ebp
  43d623:	dec    DWORD PTR [rdi]
  43d625:	sub    edi,ebp
  43d627:	dec    DWORD PTR [rdi]
  43d629:	sub    edi,ebp
  43d62b:	dec    DWORD PTR [rdi]
  43d62d:	sub    edi,ebp
  43d62f:	dec    DWORD PTR [rdi]
  43d631:	sub    edi,ebp
  43d633:	dec    DWORD PTR [rdi]
  43d635:	sub    edi,ebp
  43d637:	dec    DWORD PTR [rdi]
  43d639:	sub    edi,ebp
  43d63b:	dec    DWORD PTR [rdi]
  43d63d:	sub    edi,ebp
  43d63f:	dec    DWORD PTR [rdi]
  43d641:	sub    edi,ebp
  43d643:	dec    DWORD PTR [rdi]
  43d645:	sub    edi,ebp
  43d647:	dec    DWORD PTR [rdi]
  43d649:	sub    edi,ebp
  43d64b:	dec    DWORD PTR [rdi]
  43d64d:	sub    edi,ebp
  43d64f:	dec    DWORD PTR [rdi]
  43d651:	sub    edi,ebp
  43d653:	dec    DWORD PTR [rdi]
  43d655:	sub    edi,ebp
  43d657:	dec    DWORD PTR [rdi]
  43d659:	sub    edi,ebp
  43d65b:	dec    DWORD PTR [rdi]
  43d65d:	sub    edi,ebp
  43d65f:	dec    DWORD PTR [rdi]
  43d661:	sub    edi,ebp
  43d663:	dec    DWORD PTR [rdi]
  43d665:	sub    edi,ebp
  43d667:	dec    DWORD PTR [rdi]
  43d669:	sub    edi,ebp
  43d66b:	dec    esp
  43d66d:	sub    bh,ch
  43d66f:	dec    DWORD PTR [rdi]
  43d671:	sub    edi,ebp
  43d673:	jmp    FWORD PTR [rdx+rbp*1+0x2b0ffffd]
  43d67a:	std    
  43d67b:	dec    DWORD PTR [rdi]
  43d67d:	sub    edi,ebp
  43d67f:	dec    DWORD PTR [rdi]
  43d681:	sub    edi,ebp
  43d683:	dec    DWORD PTR [rdx+rbp*1+0x2b0ffffd]
  43d68a:	std    
  43d68b:	dec    DWORD PTR [rdi]
  43d68d:	sub    edi,ebp
  43d68f:	dec    DWORD PTR [rdi]
  43d691:	sub    edi,ebp
  43d693:	dec    DWORD PTR [rdi]
  43d695:	sub    edi,ebp
  43d697:	dec    DWORD PTR [rdi]
  43d699:	sub    edi,ebp
  43d69b:	dec    DWORD PTR [rdi]
  43d69d:	sub    edi,ebp
  43d69f:	dec    DWORD PTR [rdi]
  43d6a1:	sub    edi,ebp
  43d6a3:	dec    DWORD PTR [rdi]
  43d6a5:	sub    edi,ebp
  43d6a7:	dec    DWORD PTR [rdi]
  43d6a9:	sub    edi,ebp
  43d6ab:	dec    DWORD PTR [rdi]
  43d6ad:	sub    edi,ebp
  43d6af:	dec    DWORD PTR [rdi]
  43d6b1:	sub    edi,ebp
  43d6b3:	dec    DWORD PTR [rdi]
  43d6b5:	sub    edi,ebp
  43d6b7:	dec    DWORD PTR [rdi]
  43d6b9:	sub    edi,ebp
  43d6bb:	dec    DWORD PTR [rdi]
  43d6bd:	sub    edi,ebp
  43d6bf:	dec    DWORD PTR [rdi]
  43d6c1:	sub    edi,ebp
  43d6c3:	dec    DWORD PTR [rdi]
  43d6c5:	sub    edi,ebp
  43d6c7:	dec    DWORD PTR [rdi]
  43d6c9:	sub    edi,ebp
  43d6cb:	dec    DWORD PTR [rdi]
  43d6cd:	sub    edi,ebp
  43d6cf:	dec    DWORD PTR [rdi]
  43d6d1:	sub    edi,ebp
  43d6d3:	dec    DWORD PTR [rdi]
  43d6d5:	sub    edi,ebp
  43d6d7:	dec    DWORD PTR [rdi]
  43d6d9:	sub    edi,ebp
  43d6db:	jmp    FWORD PTR [rdx+rbp*1-0x3]
  43d6df:	dec    DWORD PTR [rdi]
  43d6e1:	sub    edi,ebp
  43d6e3:	jmp    FWORD PTR [rdx+rbp*1]
  43d6e6:	std    
  43d6e7:	jmp    FWORD PTR [rbp+0x6f]
  43d6ea:	jb     0x43d751
  43d6ec:	add    BYTE PTR [rax+0x41],dl
  43d6ef:	rex.RXB
  43d6f0:	rex.RB push r10
  43d6f2:	add    BYTE PTR [rdi+0x0],dh
  43d6f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43d6f7:	je     0x43d75e
  43d6f9:	jb     0x43d76d
  43d6fb:	jne    0x43d76d
  43d6fd:	je     0x43d764
  43d6ff:	or     al,BYTE PTR fs:[rax]
  43d702:	sub    BYTE PTR [rsi+0x6f],cl
  43d705:	and    BYTE PTR [rdx+0x6f],dh
  43d708:	ja     0x43d77d
  43d70a:	sub    DWORD PTR [rdx],ecx
  43d70c:	add    BYTE PTR [rip+0x25000a73],ah        # 0x2543e185
  43d712:	jae    0x43d734
  43d714:	add    BYTE PTR [rip+0x2a25732d],ah        # 0x2a694a47
  43d71a:	jae    0x43d71c
  43d71c:	add    BYTE PTR [rip+0x2000732a],ah        # 0x20444a4c
  43d722:	and    eax,0x25002073
  43d727:	sub    eax,0x732a2573
  43d72c:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2543e1a5
  43d732:	sub    dh,BYTE PTR [rbx+0x20]
  43d735:	and    eax,0x25000a73
  43d73a:	sub    eax,0x7325732a
  43d73f:	or     al,BYTE PTR [rax]
  43d741:	and    eax,0x25732a2d
  43d746:	jae    0x43d76d
  43d748:	sub    eax,0x732a
  43d74d:	add    BYTE PTR [rax],al
  43d74f:	add    BYTE PTR [rbx+0x61],al
  43d752:	outs   dx,BYTE PTR ds:[rsi]
  43d753:	outs   dx,BYTE PTR ds:[rsi]
  43d754:	outs   dx,DWORD PTR ds:[rsi]
  43d755:	je     0x43d777
  43d757:	(bad)  
  43d758:	fs and BYTE PTR fs:[rax+0x65],ch
  43d75d:	(bad)  
  43d75e:	fs gs jb 0x43d782
  43d762:	je     0x43d7d3
  43d764:	and    BYTE PTR [rcx+riz*2+0x62],dh
  43d768:	ins    BYTE PTR es:[rdi],dx
  43d769:	and    BYTE PTR gs:[rbx+0x6f],ah
  43d76d:	outs   dx,BYTE PTR ds:[rsi]
  43d76e:	je     0x43d7d5
  43d770:	outs   dx,BYTE PTR ds:[rsi]
  43d771:	je     0x43d7ad
  43d773:	and    BYTE PTR [rbx+0x6f],ah
  43d776:	ins    BYTE PTR es:[rdi],dx
  43d777:	jne    0x43d7e6
  43d779:	outs   dx,BYTE PTR ds:[rsi]
  43d77a:	and    BYTE PTR [rbx+0x6f],ah
  43d77d:	jne    0x43d7ed
  43d77f:	je     0x43d7a1
  43d781:	outs   dx,DWORD PTR ds:[rsi]
  43d782:	data16 and BYTE PTR [rip+0x78652064],ah        # 0x78a8f7ed
  43d789:	movsxd esp,DWORD PTR [rbp+0x65]
  43d78c:	fs gs fs or al,BYTE PTR cs:[rax]
  43d792:	add    BYTE PTR [rax],al
  43d794:	add    BYTE PTR [rax],al
  43d796:	add    BYTE PTR [rax],al
  43d798:	rex.XB (bad) 
  43d79a:	outs   dx,BYTE PTR ds:[rsi]
  43d79b:	outs   dx,BYTE PTR ds:[rsi]
  43d79c:	outs   dx,DWORD PTR ds:[rsi]
  43d79d:	je     0x43d7bf
  43d79f:	(bad)  
  43d7a0:	fs and BYTE PTR fs:[rbx+0x65],ah
  43d7a5:	ins    BYTE PTR es:[rdi],dx
  43d7a6:	ins    BYTE PTR es:[rdi],dx
  43d7a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43d7ab:	je     0x43d80e
  43d7ad:	(bad)  
  43d7ae:	ins    BYTE PTR es:[rdi],dx
  43d7af:	and    BYTE PTR gs:[rbx+0x6f],ah
  43d7b3:	outs   dx,BYTE PTR ds:[rsi]
  43d7b4:	je     0x43d81b
  43d7b6:	outs   dx,BYTE PTR ds:[rsi]
  43d7b7:	je     0x43d7f3
  43d7b9:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  43d7bd:	(bad)  
  43d7be:	ins    BYTE PTR es:[rdi],dx
  43d7bf:	and    BYTE PTR [rbx+0x65],ah
  43d7c2:	ins    BYTE PTR es:[rdi],dx
  43d7c3:	ins    BYTE PTR es:[rdi],dx
  43d7c4:	and    BYTE PTR [rbx+0x6f],ah
  43d7c7:	jne    0x43d837
  43d7c9:	je     0x43d7eb
  43d7cb:	outs   dx,DWORD PTR ds:[rsi]
  43d7cc:	data16 and BYTE PTR [rip+0x78652064],ah        # 0x78a8f837
  43d7d3:	movsxd esp,DWORD PTR [rbp+0x65]
  43d7d6:	fs gs fs or al,BYTE PTR cs:[rax]
  43d7dc:	jb     0x43d847
  43d7de:	addr32 push 0x656c0074
  43d7e4:	data16 je 0x43d7e7
  43d7e7:	cmp    al,0x74
  43d7e9:	(bad)  
  43d7ea:	(bad)  
  43d7eb:	ins    BYTE PTR es:[rdi],dx
  43d7ec:	and    BYTE PTR gs:[rdx+0x6f],ah
  43d7f0:	jb     0x43d856
  43d7f2:	gs jb  0x43d832
  43d7f5:	and    ah,BYTE PTR [rip+0x20002264]        # 0x2043fa5f
  43d7fb:	and    eax,0xa3e0073
  43d800:	add    BYTE PTR [rax],ah
  43d802:	and    BYTE PTR [rbx+riz*2],bh
  43d805:	(bad)  
  43d806:	jo     0x43d87c
  43d808:	imul   ebp,DWORD PTR [rdi+0x6e],0x2f3c003e
  43d80f:	movsxd esp,DWORD PTR [rcx+0x70]
  43d812:	je     0x43d87d
  43d814:	outs   dx,DWORD PTR ds:[rsi]
  43d815:	outs   dx,BYTE PTR ds:[rsi]
  43d816:	or     al,BYTE PTR ds:[rax]
  43d819:	add    BYTE PTR [rax],al
  43d81b:	add    BYTE PTR [rax],al
  43d81d:	add    BYTE PTR [rax],al
  43d81f:	add    BYTE PTR [rdx],cl
  43d821:	and    BYTE PTR [rax],ah
  43d823:	cmp    al,0x74
  43d825:	jb     0x43d865
  43d827:	cmp    al,0x74
  43d829:	and    BYTE PTR fs:[rbx+0x6f],ah
  43d82d:	ins    BYTE PTR es:[rdi],dx
  43d82e:	jae    0x43d8a0
  43d830:	(bad)  
  43d831:	outs   dx,BYTE PTR ds:[rsi]
  43d832:	cmp    eax,0x20223222
  43d837:	(bad)  
  43d838:	ins    BYTE PTR es:[rdi],dx
  43d839:	imul   esp,DWORD PTR [rdi+0x6e],0x6563223d
  43d840:	outs   dx,BYTE PTR ds:[rsi]
  43d841:	je     0x43d8a8
  43d843:	jb     0x43d867
  43d845:	ds push rdx
  43d847:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  43d84b:	and    BYTE PTR fs:[rip+0x2f3c756c],ah        # 0x2f804dbe
  43d852:	je     0x43d8b8
  43d854:	ds cmp al,0x2f
  43d857:	je     0x43d8cb
  43d859:	or     al,BYTE PTR ds:[rax]
  43d85c:	add    BYTE PTR [rax],al
  43d85e:	add    BYTE PTR [rax],al
  43d860:	or     ah,BYTE PTR [rax]
  43d862:	and    BYTE PTR [rsp+rsi*2],bh
  43d865:	jb     0x43d8a5
  43d867:	cmp    al,0x74
  43d869:	and    BYTE PTR fs:[rbx+0x6f],ah
  43d86d:	ins    BYTE PTR es:[rdi],dx
  43d86e:	jae    0x43d8e0
  43d870:	(bad)  
  43d871:	outs   dx,BYTE PTR ds:[rsi]
  43d872:	cmp    eax,0x3e223222
  43d877:	outs   dx,BYTE PTR es:[rsi]
  43d879:	(bad)  
  43d87b:	jo     0x43d8b8
  43d87d:	cmp    al,0x2f
  43d87f:	je     0x43d8e5
  43d881:	ds cmp al,0x2f
  43d884:	je     0x43d8f8
  43d886:	or     al,BYTE PTR ds:[rax]
  43d889:	and    BYTE PTR [rax],ah
  43d88b:	cmp    al,0x74
  43d88d:	jb     0x43d8af
  43d88f:	jbe    0x43d8f2
  43d891:	ins    BYTE PTR es:[rdi],dx
  43d892:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
  43d899:	jo     0x43d8bd
  43d89b:	or     ah,BYTE PTR ds:[rax]
  43d89e:	and    BYTE PTR [rax],ah
  43d8a0:	and    BYTE PTR [rsp+rsi*2],bh
  43d8a3:	push   0x2f3c003e
  43d8a8:	je     0x43d912
  43d8aa:	or     al,BYTE PTR ds:[rax]
  43d8ad:	and    BYTE PTR [rax],ah
  43d8af:	and    BYTE PTR [rax],ah
  43d8b1:	cmp    al,0x74
  43d8b3:	and    BYTE PTR fs:[rcx+0x6c],ah
  43d8b7:	imul   esp,DWORD PTR [rdi+0x6e],0x7325223d
  43d8be:	and    bh,BYTE PTR [rsi]
  43d8c0:	add    BYTE PTR [rax],ah
  43d8c2:	or     DWORD PTR [rax],eax
  43d8c4:	outs   dx,BYTE PTR es:[rsi]
  43d8c6:	(bad)  
  43d8c8:	jo     0x43d905
  43d8ca:	and    BYTE PTR [rax],al
  43d8cc:	cmp    al,0x2f
  43d8ce:	je     0x43d934
  43d8d0:	or     ah,BYTE PTR ds:[rax]
  43d8d3:	and    BYTE PTR [rdi+rbp*1],bh
  43d8d6:	je     0x43d94a
  43d8d8:	or     al,BYTE PTR ds:[rax]
  43d8db:	cmp    al,0x2f
  43d8dd:	je     0x43d940
  43d8df:	(bad)  
  43d8e0:	ins    BYTE PTR es:[rdi],dx
  43d8e1:	gs or  al,BYTE PTR ds:[rax]
  43d8e5:	cmp    al,0x70
  43d8e7:	add    BYTE PTR ds:[rdi+rbp*1],bh
  43d8eb:	jo     0x43d92b
  43d8ed:	add    BYTE PTR [rax],ah
  43d8ef:	and    BYTE PTR [rax],ah
  43d8f1:	and    BYTE PTR [rsp+rsi*2],bh
  43d8f4:	push   0x696c6120
  43d8f9:	outs   dx,BYTE PTR ds:[esi]
  43d8fb:	cmp    eax,0x6e656322
  43d900:	je     0x43d967
  43d902:	jb     0x43d926
  43d904:	add    BYTE PTR ds:[rax],ah
  43d907:	and    BYTE PTR [rdi+rbp*1],bh
  43d90a:	je     0x43d97e
  43d90c:	or     al,BYTE PTR ds:[rax]
  43d90f:	and    BYTE PTR [rax],ah
  43d911:	cmp    al,0x74
  43d913:	jb     0x43d935
  43d915:	jbe    0x43d978
  43d917:	ins    BYTE PTR es:[rdi],dx
  43d918:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
  43d91f:	jo     0x43d943
  43d921:	or     al,BYTE PTR ds:[rax]
  43d924:	cmp    al,0x2f
  43d926:	je     0x43d98c
  43d928:	or     al,BYTE PTR ds:[rax]
  43d92b:	jl     0x43d94d
  43d92d:	add    BYTE PTR [rax],ah
  43d92f:	jl     0x43d931
  43d931:	and    BYTE PTR [rax+riz*1+0x0],bh
  43d935:	pop    rsp
  43d936:	je     0x43d99d
  43d938:	js     0x43d9ae
  43d93a:	imul   esi,DWORD PTR [rbx+rdi*2+0x0],0x6765625c
  43d942:	imul   ebp,DWORD PTR [rsi+0x7b],0x676e6f6c
  43d949:	je     0x43d9ac
  43d94b:	(bad)  
  43d94c:	ins    BYTE PTR es:[rdi],dx
  43d94d:	gs jge 0x43d9cb
  43d950:	add    BYTE PTR [rax],ah
  43d952:	or     DWORD PTR [rdx],ecx
  43d954:	add    BYTE PTR [rax+0x7b],dh
  43d957:	add    BYTE PTR [rsp+rsi*2+0x65],bl
  43d95b:	js     0x43d9d1
  43d95d:	ja     0x43d9c8
  43d95f:	fs je  0x43d9ca
  43d962:	jge    0x43d964
  43d964:	pop    rsp
  43d965:	je     0x43d9d6
  43d967:	jo     0x43d9db
  43d969:	jne    0x43d9d7
  43d96b:	or     al,BYTE PTR gs:[rax]
  43d96e:	pop    rsp
  43d96f:	jae    0x43d9de
  43d971:	(bad)  
  43d972:	ins    BYTE PTR es:[rdi],dx
  43d973:	ins    BYTE PTR es:[rdi],dx
  43d974:	pop    rsp
  43d975:	je     0x43d9dc
  43d977:	js     0x43d9ed
  43d979:	(bad)  
  43d97a:	data16 jnp 0x43d9d9
  43d97d:	je     0x43d9e4
  43d97f:	js     0x43d9f5
  43d981:	imul   esi,DWORD PTR [rbx+rdi*2+0x0],0x5c007d7d
  43d989:	ins    DWORD PTR es:[rdi],dx
  43d98a:	imul   esp,DWORD PTR [rdx+rsi*2+0x75],0x5c0a656c
  43d992:	outs   dx,BYTE PTR gs:[rsi]
  43d994:	imul   si,WORD PTR fs:[rdx+0x73],0x6874
  43d99b:	gs (bad) 
  43d99d:	or     al,BYTE PTR fs:[rax]
  43d9a0:	pop    rsp
  43d9a1:	ins    DWORD PTR es:[rdi],dx
  43d9a2:	imul   esp,DWORD PTR [rdx+rsi*2+0x75],0xa656c
  43d9aa:	pop    rsp
  43d9ab:	outs   dx,BYTE PTR gs:[rsi]
  43d9ad:	fs push 0xa646165
  43d9b3:	add    BYTE PTR [rdx+riz*2+0x6f],bl
  43d9b7:	je     0x43da2d
  43d9b9:	outs   dx,DWORD PTR ds:[rsi]
  43d9ba:	ins    DWORD PTR es:[rdi],dx
  43d9bb:	jb     0x43da32
  43d9bd:	ins    BYTE PTR es:[rdi],dx
  43d9be:	or     al,BYTE PTR gs:[rax]
  43d9c1:	pop    rsp
  43d9c2:	movsxd esp,DWORD PTR [rcx+0x70]
  43d9c5:	je     0x43da30
  43d9c7:	outs   dx,DWORD PTR ds:[rsi]
  43d9c8:	outs   dx,BYTE PTR ds:[rsi]
  43d9c9:	pop    rbx
  43d9ca:	add    BYTE PTR [rax],ah
  43d9cc:	sub    BYTE PTR [rbx+0x6f],al
  43d9cf:	outs   dx,BYTE PTR ds:[rsi]
  43d9d0:	je     0x43da3b
  43d9d2:	outs   dx,BYTE PTR ds:[rsi]
  43d9d3:	jne    0x43da3a
  43d9d5:	sub    DWORD PTR fs:[rbp+0x7b],ebx
  43d9d9:	add    BYTE PTR [rbp+0xa],bh
  43d9dc:	pop    rsp
  43d9dd:	outs   dx,BYTE PTR gs:[rsi]
  43d9df:	outs   dx,WORD PTR fs:[rsi]
  43d9e2:	outs   dx,DWORD PTR ds:[rsi]
  43d9e3:	je     0x43d9ef
  43d9e5:	add    BYTE PTR [rbp+0x7b],bl
  43d9e8:	add    BYTE PTR [rbp+0xa],bh
  43d9eb:	pop    rsp
  43d9ec:	outs   dx,BYTE PTR gs:[rsi]
  43d9ee:	fs ins BYTE PTR es:[rdi],dx
  43d9f0:	(bad)  
  43d9f1:	jae    0x43da67
  43d9f3:	outs   dx,WORD PTR ds:[rsi]
  43d9f5:	outs   dx,DWORD PTR ds:[rsi]
  43d9f6:	je     0x43da02
  43d9f8:	add    BYTE PTR [rdx+riz*2+0x6f],bl
  43d9fc:	je     0x43da72
  43d9fe:	outs   dx,DWORD PTR ds:[rsi]
  43d9ff:	ins    DWORD PTR es:[rdi],dx
  43da00:	jb     0x43da77
  43da02:	ins    BYTE PTR es:[rdi],dx
  43da03:	or     bl,BYTE PTR gs:[rbp+riz*2+0x6e]
  43da08:	outs   dx,WORD PTR fs:[rsi]
  43da0b:	outs   dx,DWORD PTR ds:[rsi]
  43da0c:	je     0x43da18
  43da0e:	add    BYTE PTR [rdx+riz*2+0x6f],bl
  43da12:	je     0x43da88
  43da14:	outs   dx,DWORD PTR ds:[rsi]
  43da15:	ins    DWORD PTR es:[rdi],dx
  43da16:	jb     0x43da8d
  43da18:	ins    BYTE PTR es:[rdi],dx
  43da19:	or     bl,BYTE PTR gs:[rbp+riz*2+0x6e]
  43da1e:	fs ins BYTE PTR es:[rdi],dx
  43da20:	(bad)  
  43da21:	jae    0x43da97
  43da23:	outs   dx,WORD PTR ds:[rsi]
  43da25:	outs   dx,DWORD PTR ds:[rsi]
  43da26:	je     0x43da32
  43da28:	add    BYTE PTR [rdx],cl
  43da2a:	or     al,BYTE PTR es:[rax]
  43da2d:	pop    rsp
  43da2e:	jb     0x43da91
  43da30:	addr32 addr32 gs fs jb 0x43da9f
  43da36:	addr32 push 0x20007b74
  43da3c:	pop    rsp
  43da3d:	je     0x43daa0
  43da3f:	(bad)  
  43da40:	jne    0x43daae
  43da42:	(bad)  
  43da43:	jb     0x43dab3
  43da45:	gs ja  0x43dab4
  43da48:	imul   ebp,DWORD PTR [rsi+0x65],0x5c20000a
  43da4f:	push   0x656e696c
  43da54:	or     al,BYTE PTR [rax]
  43da56:	pop    rsp
  43da57:	outs   dx,BYTE PTR gs:[rsi]
  43da59:	fs jnp 0x43dac8
  43da5c:	outs   dx,DWORD PTR ds:[rsi]
  43da5d:	outs   dx,BYTE PTR ds:[rsi]
  43da5e:	addr32 je 0x43dac2
  43da61:	(bad)  
  43da62:	ins    BYTE PTR es:[rdi],dx
  43da63:	gs jge 0x43da70
  43da66:	add    BYTE PTR [rsi],ch
  43da68:	rex.WR push rax
  43da6a:	or     ch,BYTE PTR [rsi]
  43da6c:	rex.R push rbx
  43da6e:	and    BYTE PTR [rbx+0xa],al
  43da71:	add    BYTE PTR [rdx],cl
  43da73:	cs rex.R
  43da75:	or     r8b,BYTE PTR [r8]
  43da78:	cs rex.WR push rax
  43da7b:	or     ch,BYTE PTR [rsi]
  43da7d:	push   rsp
  43da7e:	push   rbx
  43da7f:	or     al,BYTE PTR [rax]
  43da81:	movsxd esp,DWORD PTR [rbp+0x6e]
  43da84:	je     0x43daeb
  43da86:	jb     0x43daa8
  43da88:	(bad)  
  43da89:	outs   dx,DWORD PTR ds:[rsi]
  43da8a:	js     0x43dac7
  43da8c:	or     al,BYTE PTR [rax]
  43da8e:	movsxd esp,DWORD PTR [rbp+0x6e]
  43da91:	je     0x43daf8
  43da93:	jb     0x43dad0
  43da95:	or     al,BYTE PTR [rax]
  43da97:	movsxd esp,DWORD PTR [rax]
  43da99:	ins    BYTE PTR es:[rdi],dx
  43da9a:	cmp    ecx,DWORD PTR [rdx]
  43da9c:	add    BYTE PTR [rdi+0xa],bl
  43da9f:	add    BYTE PTR [rsi],ch
  43daa1:	push   rsp
  43daa2:	or     al,BYTE PTR es:[rax]
  43daa5:	movsxd esp,DWORD PTR [rax]
  43daa7:	jae    0x43dad7
  43daa9:	or     al,BYTE PTR [rax]
  43daab:	pop    rsp
  43daac:	data16 rex.WB push r10
  43daaf:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
  43dab3:	and    BYTE PTR fs:[rip+0x665c756c],ah        # 0x66a05026
  43daba:	push   rax
  43dabb:	or     al,BYTE PTR [rax]
  43dabd:	movsxd esp,DWORD PTR [rax]
  43dabf:	ins    BYTE PTR es:[rdi],dx
  43dac0:	or     al,BYTE PTR cs:[rax]
  43dac3:	movsxd esp,DWORD PTR [rax]
  43dac5:	jl     0x43dae7
  43dac7:	ins    BYTE PTR es:[rdi],dx
  43dac8:	or     al,BYTE PTR cs:[rax]
  43dacb:	cs push rsp
  43dacd:	or     r13b,BYTE PTR [r14]
  43dad0:	rex.R push rbx
  43dad2:	and    BYTE PTR [rdx+rcx*1+0x0],cl
  43dad6:	cs rex.R
  43dad8:	or     r8b,BYTE PTR [r8]
  43dadb:	or     al,BYTE PTR cs:[rax]
  43dade:	or     bl,BYTE PTR [rdi+0xa]
  43dae1:	add    BYTE PTR [rsi+riz*2+0x49],bl
  43dae5:	add    BYTE PTR [rsi+riz*2+0x50],bl
  43dae9:	add    BYTE PTR [rax],al
  43daeb:	add    BYTE PTR [rax],al
  43daed:	add    BYTE PTR [rax],al
  43daef:	add    BYTE PTR [rcx+0x6e],ch
  43daf2:	jbe    0x43db55
  43daf4:	ins    BYTE PTR es:[rdi],dx
  43daf5:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x75707475
  43dafd:	je     0x43db1f
  43daff:	outs   dx,WORD PTR ds:[rsi]
  43db01:	jb     0x43db70
  43db03:	(bad)  
  43db04:	je     0x43db26
  43db06:	sub    BYTE PTR [rcx+0x6e],ch
  43db09:	je     0x43db70
  43db0b:	jb     0x43db7b
  43db0d:	(bad)  
  43db0e:	ins    BYTE PTR es:[rdi],dx
  43db0f:	and    BYTE PTR [rbp+0x72],ah
  43db12:	jb     0x43db83
  43db14:	jb     0x43db3f
  43db16:	cmp    ah,BYTE PTR [rax]
  43db18:	and    eax,0x20200064
  43db1d:	cmp    al,0x74
  43db1f:	jb     0x43db5f
  43db21:	or     al,BYTE PTR [rax]
  43db23:	add    BYTE PTR [rbp+0x4f],cl
  43db26:	std    
  43db27:	dec    DWORD PTR [rbx+rcx*2]
  43db2a:	std    
  43db2b:	push   QWORD PTR [rax-0x4f0002b5]
  43db31:	rex.WXB std 
  43db33:	(bad)  
  43db34:	in     al,dx
  43db35:	rex.WXB std 
  43db37:	jmp    FWORD PTR [rcx*2+0x4e5cfffd]
  43db3e:	std    
  43db3f:	jmp    rcx
  43db41:	rex.WB std 
  43db43:	jmp    FWORD PTR [rsi]
  43db45:	add    BYTE PTR [rbx],dh
  43db47:	add    BYTE PTR [rax+rax*1],ch
  43db4a:	jne    0x43dbba
  43db4c:	imul   esp,DWORD PTR [rbx+0x6f],0xe2006564
  43db53:	xchg   esp,eax
  43db54:	add    BYTE PTR [rax],0xe2
  43db57:	xchg   esp,eax
  43db58:	mov    WORD PTR [rax],es
  43db5a:	loop   0x43daf0
  43db5c:	lods   al,BYTE PTR ds:[rsi]
  43db5d:	add    dl,ah
  43db5f:	xchg   esp,eax
  43db60:	nop
  43db61:	add    dl,ah
  43db63:	xchg   esp,eax
  43db64:	pushf  
  43db65:	add    dl,ah
  43db67:	xchg   esp,eax
  43db68:	mov    esp,0xa494e200
  43db6d:	add    dl,ah
  43db6f:	xchg   esp,eax
  43db70:	xchg   esp,eax
  43db71:	add    dl,ah
  43db73:	xchg   esp,eax
  43db74:	mov    ah,0x0
  43db76:	loop   0x43db0c
  43db78:	cwde   
  43db79:	add    dl,ah
  43db7b:	xchg   esp,eax
  43db7c:	(bad)  
  43db7d:	add    dl,ah
  43db7f:	xchg   BYTE PTR [rbp-0x597f1e00],dh
	...
  43dbbd:	add    BYTE PTR [rax],al
  43dbbf:	add    BYTE PTR [rdx-0x25],cl
  43dbc2:	rex.XB add BYTE PTR [r8],al
  43dbc5:	add    BYTE PTR [rax],al
  43dbc7:	add    BYTE PTR [rdx-0x25],dl
  43dbca:	rex.XB add BYTE PTR [r8],al
  43dbcd:	add    BYTE PTR [rax],al
  43dbcf:	add    BYTE PTR [rsi-0x25],dl
  43dbd2:	rex.XB add BYTE PTR [r8],al
  43dbd5:	add    BYTE PTR [rax],al
  43dbd7:	add    BYTE PTR [rdx-0x25],bl
  43dbda:	rex.XB add BYTE PTR [r8],al
  43dbdd:	add    BYTE PTR [rax],al
  43dbdf:	add    BYTE PTR [rsi-0x25],bl
  43dbe2:	rex.XB add BYTE PTR [r8],al
  43dbe5:	add    BYTE PTR [rax],al
  43dbe7:	add    BYTE PTR [rdx-0x25],dl
  43dbea:	rex.XB add BYTE PTR [r8],al
  43dbed:	add    BYTE PTR [rax],al
  43dbef:	add    BYTE PTR [rdx-0x25],ah
  43dbf2:	rex.XB add BYTE PTR [r8],al
  43dbf5:	add    BYTE PTR [rax],al
  43dbf7:	add    BYTE PTR [rsi-0x25],ah
  43dbfa:	rex.XB add BYTE PTR [r8],al
  43dbfd:	add    BYTE PTR [rax],al
  43dbff:	add    BYTE PTR [rdx-0x25],ch
  43dc02:	rex.XB add BYTE PTR [r8],al
  43dc05:	add    BYTE PTR [rax],al
  43dc07:	add    BYTE PTR [rdx-0x25],dl
  43dc0a:	rex.XB add BYTE PTR [r8],al
  43dc0d:	add    BYTE PTR [rax],al
  43dc0f:	add    BYTE PTR [rsi-0x25],ch
  43dc12:	rex.XB add BYTE PTR [r8],al
  43dc15:	add    BYTE PTR [rax],al
  43dc17:	add    BYTE PTR [rdx-0x25],dh
  43dc1a:	rex.XB add BYTE PTR [r8],al
  43dc1d:	add    BYTE PTR [rax],al
  43dc1f:	add    BYTE PTR [rsi-0x25],dh
  43dc22:	rex.XB add BYTE PTR [r8],al
  43dc25:	add    BYTE PTR [rax],al
  43dc27:	add    BYTE PTR [rdi+rdx*8],bl
  43dc2a:	rex.XB add BYTE PTR [r8],al
  43dc2d:	add    BYTE PTR [rax],al
  43dc2f:	add    BYTE PTR [rdx-0x25],bh
  43dc32:	rex.XB add BYTE PTR [r8],al
  43dc35:	add    BYTE PTR [rax],al
  43dc37:	add    BYTE PTR [rdx-0x25],bh
  43dc3a:	rex.XB add BYTE PTR [r8],al
  43dc3d:	add    BYTE PTR [rax],al
  43dc3f:	add    BYTE PTR [rdx-0x25],bh
  43dc42:	rex.XB add BYTE PTR [r8],al
  43dc45:	add    BYTE PTR [rax],al
  43dc47:	add    BYTE PTR [rdx-0x25],bh
  43dc4a:	rex.XB add BYTE PTR [r8],al
  43dc4d:	add    BYTE PTR [rax],al
  43dc4f:	add    BYTE PTR [rdx-0x25],bh
  43dc52:	rex.XB add BYTE PTR [r8],al
  43dc55:	add    BYTE PTR [rax],al
  43dc57:	add    BYTE PTR [rdx-0x25],bh
  43dc5a:	rex.XB add BYTE PTR [r8],al
  43dc5d:	add    BYTE PTR [rax],al
  43dc5f:	add    BYTE PTR [rdi+0x43d5],ch
  43dc65:	add    BYTE PTR [rax],al
  43dc67:	add    BYTE PTR [rsi-0x25],bh
  43dc6a:	rex.XB add BYTE PTR [r8],al
  43dc6d:	add    BYTE PTR [rax],al
  43dc6f:	add    BYTE PTR [rdi+0x43d5],ch
  43dc75:	add    BYTE PTR [rax],al
  43dc77:	add    BYTE PTR [rsi-0x25],bh
  43dc7a:	rex.XB add BYTE PTR [r8],al
  43dc7d:	add    BYTE PTR [rax],al
  43dc7f:	add    BYTE PTR [rdx+0x43db],al
  43dc85:	add    BYTE PTR [rax],al
  43dc87:	add    BYTE PTR [rdx+0x43db],al
  43dc8d:	add    BYTE PTR [rax],al
  43dc8f:	add    BYTE PTR [rcx],al
  43dc91:	add    BYTE PTR [rax],al
  43dc93:	add    BYTE PTR [rax],al
  43dc95:	add    BYTE PTR [rax],al
  43dc97:	add    BYTE PTR [rdi+0x6c],ch
  43dc9a:	fs sub eax,0x69637361
  43dca0:	imul   eax,DWORD PTR [rax],0x2b002d
  43dca6:	jl     0x43dca8
  43dca8:	cmp    al,BYTE PTR [rax]
  43dcaa:	cmp    eax,DWORD PTR [rax]
	...
  43dcc0:	cwde   
  43dcc1:	fadd   QWORD PTR [rbx+0x0]
  43dcc4:	add    BYTE PTR [rax],al
  43dcc6:	add    BYTE PTR [rax],al
  43dcc8:	movabs ds:0xa4000000000043dc,al
  43dcd1:	fadd   QWORD PTR [rbx+0x0]
  43dcd4:	add    BYTE PTR [rax],al
  43dcd6:	add    BYTE PTR [rax],al
  43dcd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dcd9:	fadd   QWORD PTR [rbx+0x0]
  43dcdc:	add    BYTE PTR [rax],al
  43dcde:	add    BYTE PTR [rax],al
  43dce0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dce1:	fadd   QWORD PTR [rbx+0x0]
  43dce4:	add    BYTE PTR [rax],al
  43dce6:	add    BYTE PTR [rax],al
  43dce8:	movabs ds:0xa4000000000043dc,al
  43dcf1:	fadd   QWORD PTR [rbx+0x0]
  43dcf4:	add    BYTE PTR [rax],al
  43dcf6:	add    BYTE PTR [rax],al
  43dcf8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dcf9:	fadd   QWORD PTR [rbx+0x0]
  43dcfc:	add    BYTE PTR [rax],al
  43dcfe:	add    BYTE PTR [rax],al
  43dd00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dd01:	fadd   QWORD PTR [rbx+0x0]
  43dd04:	add    BYTE PTR [rax],al
  43dd06:	add    BYTE PTR [rax],al
  43dd08:	movabs ds:0xa4000000000043dc,al
  43dd11:	fadd   QWORD PTR [rbx+0x0]
  43dd14:	add    BYTE PTR [rax],al
  43dd16:	add    BYTE PTR [rax],al
  43dd18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dd19:	fadd   QWORD PTR [rbx+0x0]
  43dd1c:	add    BYTE PTR [rax],al
  43dd1e:	add    BYTE PTR [rax],al
  43dd20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dd21:	fadd   QWORD PTR [rbx+0x0]
  43dd24:	add    BYTE PTR [rax],al
  43dd26:	add    BYTE PTR [rax],al
  43dd28:	sbb    al,0xd7
  43dd2a:	rex.XB add BYTE PTR [r8],al
  43dd2d:	add    BYTE PTR [rax],al
  43dd2f:	add    BYTE PTR [rsi+0x43dc],ah
  43dd35:	add    BYTE PTR [rax],al
  43dd37:	add    BYTE PTR [rsi+0x43dc],ah
  43dd3d:	add    BYTE PTR [rax],al
  43dd3f:	add    BYTE PTR [rsi+0x43dc],ah
  43dd45:	add    BYTE PTR [rax],al
  43dd47:	add    BYTE PTR [rax+0x43dc],ch
  43dd4d:	add    BYTE PTR [rax],al
  43dd4f:	add    BYTE PTR [rdx+0x43dc],ch
  43dd55:	add    BYTE PTR [rax],al
  43dd57:	add    BYTE PTR [rdi+0x43d5],ch
  43dd5d:	add    BYTE PTR [rax],al
  43dd5f:	add    BYTE PTR [rsp+rbx*8+0x43],ah
  43dd66:	add    BYTE PTR [rax],al
  43dd68:	scas   eax,DWORD PTR es:[rdi]
  43dd69:	(bad)  
  43dd6a:	rex.XB add BYTE PTR [r8],al
  43dd6d:	add    BYTE PTR [rax],al
  43dd6f:	add    BYTE PTR [rdi+0x43d5],ch
  43dd75:	add    BYTE PTR [rax],al
  43dd77:	add    BYTE PTR [rdi+0x43d5],ch
  43dd7d:	add    BYTE PTR [rax],al
  43dd7f:	add    BYTE PTR [rdi+0x43d5],ch
  43dd85:	add    BYTE PTR [rax],al
  43dd87:	add    BYTE PTR [rdi+0x43d5],ch
	...
  43dd95:	add    BYTE PTR [rax],al
  43dd97:	add    BYTE PTR [rcx+0x73],ah
  43dd9a:	movsxd ebp,DWORD PTR [rcx+0x69]
	...
  43ddbd:	add    BYTE PTR [rax],al
  43ddbf:	add    BYTE PTR [rax+0x43dd],bl
  43ddc5:	add    BYTE PTR [rax],al
  43ddc7:	add    BYTE PTR [rdx+0x43dc],ah
  43ddcd:	add    BYTE PTR [rax],al
  43ddcf:	add    BYTE PTR [rsp+rbx*8+0x43],ah
  43ddd6:	add    BYTE PTR [rax],al
  43ddd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43ddd9:	fadd   QWORD PTR [rbx+0x0]
  43dddc:	add    BYTE PTR [rax],al
  43ddde:	add    BYTE PTR [rax],al
  43dde0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dde1:	fadd   QWORD PTR [rbx+0x0]
  43dde4:	add    BYTE PTR [rax],al
  43dde6:	add    BYTE PTR [rax],al
  43dde8:	movabs ds:0xa4000000000043dc,al
  43ddf1:	fadd   QWORD PTR [rbx+0x0]
  43ddf4:	add    BYTE PTR [rax],al
  43ddf6:	add    BYTE PTR [rax],al
  43ddf8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43ddf9:	fadd   QWORD PTR [rbx+0x0]
  43ddfc:	add    BYTE PTR [rax],al
  43ddfe:	add    BYTE PTR [rax],al
  43de00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43de01:	fadd   QWORD PTR [rbx+0x0]
  43de04:	add    BYTE PTR [rax],al
  43de06:	add    BYTE PTR [rax],al
  43de08:	movabs ds:0xa4000000000043dc,al
  43de11:	fadd   QWORD PTR [rbx+0x0]
  43de14:	add    BYTE PTR [rax],al
  43de16:	add    BYTE PTR [rax],al
  43de18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43de19:	fadd   QWORD PTR [rbx+0x0]
  43de1c:	add    BYTE PTR [rax],al
  43de1e:	add    BYTE PTR [rax],al
  43de20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43de21:	fadd   QWORD PTR [rbx+0x0]
  43de24:	add    BYTE PTR [rax],al
  43de26:	add    BYTE PTR [rax],al
  43de28:	sbb    al,0xd7
  43de2a:	rex.XB add BYTE PTR [r8],al
  43de2d:	add    BYTE PTR [rax],al
  43de2f:	add    BYTE PTR [rsi+0x43dc],ah
  43de35:	add    BYTE PTR [rax],al
  43de37:	add    BYTE PTR [rsi+0x43dc],ah
  43de3d:	add    BYTE PTR [rax],al
  43de3f:	add    BYTE PTR [rsi+0x43dc],ah
  43de45:	add    BYTE PTR [rax],al
  43de47:	add    BYTE PTR [rsi+0x43dc],ah
  43de4d:	add    BYTE PTR [rax],al
  43de4f:	add    BYTE PTR [rsi+0x43dc],ah
  43de55:	add    BYTE PTR [rax],al
  43de57:	add    BYTE PTR [rsi+0x43dc],ah
  43de5d:	add    BYTE PTR [rax],al
  43de5f:	add    BYTE PTR [rdi+0x43d5],ch
  43de65:	add    BYTE PTR [rax],al
  43de67:	add    BYTE PTR [rsp+rbx*8+0x43],ah
  43de6e:	add    BYTE PTR [rax],al
  43de70:	scas   eax,DWORD PTR es:[rdi]
  43de71:	(bad)  
  43de72:	rex.XB add BYTE PTR [r8],al
  43de75:	add    BYTE PTR [rax],al
  43de77:	add    BYTE PTR [rsp+rbx*8+0x43],ah
  43de7e:	add    BYTE PTR [rax],al
  43de80:	rex.R fild DWORD PTR [rbx+0x0]
  43de84:	add    BYTE PTR [rax],al
  43de86:	add    BYTE PTR [rax],al
  43de88:	rex.R fild DWORD PTR [rbx+0x0]
  43de8c:	add    BYTE PTR [rax],al
  43de8e:	add    BYTE PTR [rax],al
  43de90:	add    DWORD PTR [rax],eax
  43de92:	add    BYTE PTR [rax],al
  43de94:	add    BYTE PTR [rax],al
  43de96:	add    BYTE PTR [rax],al
  43de98:	jnp    0x43deae
  43de9a:	scas   al,BYTE PTR es:[rdi]
  43de9b:	rex.RXB loope 0x43df18
  43de9e:	test   BYTE PTR [rdi],bh
	...
  43dec0:	sub    al,0x20
  43dec2:	add    BYTE PTR [rdi+0x62],cl
  43dec5:	push   0x65
  43dec7:	movsxd esi,DWORD PTR [rax+riz*1+0x44]
  43decb:	gs jae 0x43df31
  43dece:	jb     0x43df39
  43ded0:	jo     0x43df46
  43ded2:	imul   ebp,DWORD PTR [rdi+0x6e],0x53000000
  43ded9:	rex.RB
  43deda:	rex.WR
  43dedb:	rex.RB
  43dedc:	rex.XB push r12
  43dede:	and    BYTE PTR [rax+0x67],dh
  43dee1:	pop    rdi
  43dee2:	movsxd esp,DWORD PTR [rcx+0x74]
  43dee5:	(bad)  
  43dee6:	ins    BYTE PTR es:[rdi],dx
  43dee7:	outs   dx,DWORD PTR ds:[rsi]
  43dee8:	addr32 cs jo 0x43df53
  43deec:	pop    rdi
  43deed:	fs gs jae 0x43df54
  43def1:	jb     0x43df5c
  43def3:	(bad)  
  43def4:	gs pop rdi
  43def6:	outs   dx,DWORD PTR ds:[rsi]
  43def7:	(bad)  
  43def8:	push   0x65
  43defa:	movsxd esi,DWORD PTR [rax+rbp*1+0x63]
  43defe:	ins    BYTE PTR es:[rdi],dx
  43deff:	(bad)  
  43df00:	jae    0x43df75
  43df02:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x696a626f
  43df0a:	fs sub al,0x20
  43df0d:	xor    BYTE PTR [rcx],ch
  43df0f:	and    BYTE PTR [rcx+0x53],al
  43df12:	and    BYTE PTR [rdx],ah
  43df14:	and    eax,0x460a2273
  43df19:	push   rdx
  43df1a:	rex.WRXB
  43df1b:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43df1f:	pop    rdi
  43df20:	movsxd esp,DWORD PTR [rcx+0x74]
  43df23:	(bad)  
  43df24:	ins    BYTE PTR es:[rdi],dx
  43df25:	outs   dx,DWORD PTR ds:[rsi]
  43df26:	addr32 cs jo 0x43df91
  43df2a:	pop    rdi
  43df2b:	fs gs jo 0x43df94
  43df2f:	outs   dx,BYTE PTR ds:[rsi]
  43df30:	or     dl,BYTE PTR fs:[rdi+0x48]
  43df34:	rex.RB push r10
  43df36:	and    BYTE PTR [r10+0x65],r14b
  43df3a:	movsxd bp,DWORD PTR [rcx+riz*2+0x73]
  43df3f:	jae    0x43dfaa
  43df41:	and    BYTE PTR fs:[rip+0x67702720],bh        # 0x67b40668
  43df48:	pop    rdi
  43df49:	movsxd esp,DWORD PTR [rcx+0x74]
  43df4c:	(bad)  
  43df4d:	ins    BYTE PTR es:[rdi],dx
  43df4e:	outs   dx,DWORD PTR ds:[rsi]
  43df4f:	addr32 cs jo 0x43dfba
  43df53:	pop    rdi
  43df54:	gs js  0x43dfcb
  43df57:	outs   dx,BYTE PTR gs:[rsi]
  43df59:	jae    0x43dfc4
  43df5b:	outs   dx,DWORD PTR ds:[rsi]
  43df5c:	outs   dx,BYTE PTR ds:[rsi]
  43df5d:	(bad)  
  43df5e:	cmp    bh,BYTE PTR [rdx]
  43df60:	jo     0x43dfc9
  43df62:	pop    rdi
  43df63:	movsxd esp,DWORD PTR [rcx+0x74]
  43df66:	(bad)  
  43df67:	ins    BYTE PTR es:[rdi],dx
  43df68:	outs   dx,DWORD PTR ds:[rsi]
  43df69:	addr32 cs jb 0x43dfd2
  43df6d:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  43df72:	jae    0x43df94
  43df74:	rex.B
  43df75:	rex.WRX
  43df76:	and    BYTE PTR [rdx+0x65],r14b
  43df7a:	outs   dx,WORD PTR ds:[rsi]
  43df7c:	(bad)  
  43df7d:	push   0x69
  43df7f:	and    BYTE PTR fs:[rip+0x73252720],bh        # 0x736906a6
  43df86:	(bad)  
  43df87:	and    BYTE PTR [rcx+0x4e],al
  43df8a:	and    BYTE PTR [rbp+riz*2+0x70],r12b
  43df8f:	je     0x43e00a
  43df91:	jo     0x43dff8
  43df93:	and    BYTE PTR [rip+0x27652720],bh        # 0x27a906b9
  43df99:	or     cl,BYTE PTR [rdi+0x52]
  43df9c:	rex.R
  43df9d:	rex.RB push r10
  43df9f:	and    BYTE PTR [rdx+0x59],al
  43dfa2:	and    BYTE PTR [rcx],dh
  43dfa4:	cmp    eax,DWORD PTR [rax]
  43dfa6:	rex.WRXB (bad) 
  43dfa8:	push   0x65
  43dfaa:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  43dfae:	imul   ebp,DWORD PTR [rsi+0x20],0x65747865
  43dfb5:	outs   dx,BYTE PTR ds:[rsi]
  43dfb6:	jae    0x43e021
  43dfb8:	outs   dx,DWORD PTR ds:[rsi]
  43dfb9:	outs   dx,BYTE PTR ds:[rsi]
  43dfba:	and    BYTE PTR [rdx],ah
  43dfbc:	and    eax,0x41002273
  43dfc1:	movsxd esp,DWORD PTR [rbx+0x65]
  43dfc4:	jae    0x43e039
  43dfc6:	and    BYTE PTR [rax+0x72],dh
  43dfc9:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  43dfd0:	jae    0x43dfd2
  43dfd2:	add    BYTE PTR [rax],al
  43dfd4:	add    BYTE PTR [rax],al
  43dfd6:	add    BYTE PTR [rax],al
  43dfd8:	jo     0x43e041
  43dfda:	pop    rdi
  43dfdb:	movsxd esp,DWORD PTR [rcx+0x74]
  43dfde:	(bad)  
  43dfdf:	ins    BYTE PTR es:[rdi],dx
  43dfe0:	outs   dx,DWORD PTR ds:[rsi]
  43dfe1:	addr32 cs (bad) 
  43dfe4:	jb     0x43e058
  43dfe6:	(bad)  
  43dfe7:	jns    0x43e048
  43dfe9:	je     0x43e05a
  43dfeb:	pop    rdi
  43dfec:	jae    0x43e062
  43dfee:	jb     0x43e059
  43dff0:	outs   dx,BYTE PTR ds:[rsi]
  43dff1:	sub    BYTE PTR [eip+0x45202c73],ah        # 0x45640c6b
  43dff8:	(bad)  
  43dff9:	pop    rsp
  43dffa:	outs   dx,BYTE PTR ds:[rsi]
  43dffb:	(bad)  
  43dffc:	sub    DWORD PTR [rax],esp
  43dffe:	push   r11
  43e000:	and    BYTE PTR [rdx],ah
  43e002:	and    eax,0x2273
  43e007:	add    BYTE PTR [rax+0x67],dh
  43e00a:	pop    rdi
  43e00b:	movsxd esp,DWORD PTR [rcx+0x74]
  43e00e:	(bad)  
  43e00f:	ins    BYTE PTR es:[rdi],dx
  43e010:	outs   dx,DWORD PTR ds:[rsi]
  43e011:	addr32 cs (bad) 
  43e014:	jb     0x43e088
  43e016:	(bad)  
  43e017:	jns    0x43e078
  43e019:	je     0x43e08a
  43e01b:	pop    rdi
  43e01c:	jae    0x43e092
  43e01e:	jb     0x43e089
  43e020:	outs   dx,BYTE PTR ds:[rsi]
  43e021:	sub    BYTE PTR [eip+0x27202c73],ah        # 0x27640c9b
  43e028:	pop    rsp
  43e029:	outs   dx,BYTE PTR ds:[rsi]
  43e02a:	(bad)  
  43e02b:	sub    DWORD PTR [rax],esp
  43e02d:	push   r11
  43e02f:	and    BYTE PTR [rdx],ah
  43e031:	and    eax,0x2273
  43e036:	add    BYTE PTR [rax],al
  43e038:	push   rbx
  43e039:	rex.RB
  43e03a:	rex.WR
  43e03b:	rex.RB
  43e03c:	rex.XB push r12
  43e03e:	and    BYTE PTR [rbx+0x70],dh
  43e041:	movsxd ebp,DWORD PTR [rsi+0x61]
  43e044:	ins    DWORD PTR es:[rdi],dx
  43e045:	and    BYTE PTR gs:[rsi+0x52],al
  43e049:	rex.WRXB
  43e04a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e04e:	pop    rdi
  43e04f:	movsxd esp,DWORD PTR [rcx+0x74]
  43e052:	(bad)  
  43e053:	ins    BYTE PTR es:[rdi],dx
  43e054:	outs   dx,DWORD PTR ds:[rsi]
  43e055:	addr32 cs jo 0x43e0c0
  43e059:	pop    rdi
  43e05a:	je     0x43e0bd
  43e05c:	(bad)  
  43e05d:	ins    BYTE PTR es:[rdi],dx
  43e05e:	gs jae 0x43e0d1
  43e061:	(bad)  
  43e062:	movsxd esp,DWORD PTR [rbp+0xa]
  43e065:	push   rdi
  43e066:	rex.W
  43e067:	rex.RB push r10
  43e069:	and    BYTE PTR [r15+0x69],r13b
  43e06d:	and    BYTE PTR fs:[rip+0x75252720],bh        # 0x75690794
  43e074:	(bad)  
  43e075:	cmp    eax,DWORD PTR [rax]
  43e077:	push   rsp
  43e078:	(bad)  
  43e079:	(bad)  
  43e07a:	ins    BYTE PTR es:[rdi],dx
  43e07b:	gs jae 0x43e0ee
  43e07e:	(bad)  
  43e07f:	movsxd esp,DWORD PTR [rbp+0x3a]
  43e082:	and    BYTE PTR [rdx],ah
  43e084:	and    eax,0x25002273
  43e089:	jae    0x43e08b
  43e08b:	sub    al,0x20
  43e08d:	je     0x43e0f0
  43e08f:	(bad)  
  43e090:	ins    BYTE PTR es:[rdi],dx
  43e091:	gs jae 0x43e104
  43e094:	(bad)  
  43e095:	movsxd esp,DWORD PTR [rbp+0x20]
  43e098:	and    ah,BYTE PTR [rip+0x2273]        # 0x440311
  43e09e:	add    BYTE PTR [rax],al
  43e0a0:	jo     0x43e109
  43e0a2:	pop    rdi
  43e0a3:	movsxd esp,DWORD PTR [rcx+0x74]
  43e0a6:	(bad)  
  43e0a7:	ins    BYTE PTR es:[rdi],dx
  43e0a8:	outs   dx,DWORD PTR ds:[rsi]
  43e0a9:	addr32 cs (bad) 
  43e0ac:	jb     0x43e120
  43e0ae:	(bad)  
  43e0af:	jns    0x43e110
  43e0b1:	je     0x43e122
  43e0b3:	pop    rdi
  43e0b4:	jae    0x43e12a
  43e0b6:	jb     0x43e121
  43e0b8:	outs   dx,BYTE PTR ds:[rsi]
  43e0b9:	sub    BYTE PTR [ebx+0x2e],ah
  43e0bd:	jb     0x43e124
  43e0bf:	ins    BYTE PTR es:[rdi],dx
  43e0c0:	outs   dx,DWORD PTR ds:[rsi]
  43e0c1:	jo     0x43e137
  43e0c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x7c7c2073
  43e0ca:	and    BYTE PTR [rcx+0x72],ah
  43e0cd:	jb     0x43e130
  43e0cf:	jns    0x43e0f9
  43e0d1:	jae    0x43e138
  43e0d3:	ins    BYTE PTR es:[rdi],dx
  43e0d4:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x27]
  43e0d9:	je     0x43e14a
  43e0db:	(bad)  
  43e0dc:	jae    0x43e152
  43e0de:	cs (bad) 
  43e0e0:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  43e0e4:	js     0x43e106
  43e0e6:	data16 jb 0x43e158
  43e0e9:	ins    DWORD PTR es:[rdi],dx
  43e0ea:	and    BYTE PTR [rax+0x67],dh
  43e0ed:	pop    rdi
  43e0ee:	movsxd esp,DWORD PTR [rcx+0x74]
  43e0f1:	(bad)  
  43e0f2:	ins    BYTE PTR es:[rdi],dx
  43e0f3:	outs   dx,DWORD PTR ds:[rsi]
  43e0f4:	addr32 cs jne 0x43e166
  43e0f8:	outs   dx,BYTE PTR ds:[rsi]
  43e0f9:	gs jae 0x43e170
  43e0fc:	sub    BYTE PTR [rbx+riz*2+0x2e],dh
  43e100:	jb     0x43e167
  43e102:	ins    BYTE PTR es:[rdi],dx
  43e103:	outs   dx,DWORD PTR ds:[rsi]
  43e104:	jo     0x43e17a
  43e106:	imul   ebp,DWORD PTR [rdi+0x6e],0x78202973
  43e10d:	sub    DWORD PTR [rax+riz*1],ebp
  43e110:	(bad)  
  43e111:	sub    al,0x20
  43e113:	(bad)  
  43e114:	sub    DWORD PTR [rdx],ecx
  43e116:	add    BYTE PTR [rdi],ah
  43e118:	(bad)  
  43e119:	add    BYTE PTR [rax],al
  43e11b:	add    BYTE PTR [rax],al
  43e11d:	add    BYTE PTR [rax],al
  43e11f:	add    BYTE PTR [rax+0x67],dh
  43e122:	pop    rdi
  43e123:	movsxd esp,DWORD PTR [rcx+0x74]
  43e126:	(bad)  
  43e127:	ins    BYTE PTR es:[rdi],dx
  43e128:	outs   dx,DWORD PTR ds:[rsi]
  43e129:	addr32 cs (bad) 
  43e12c:	jb     0x43e1a0
  43e12e:	(bad)  
  43e12f:	jns    0x43e190
  43e131:	je     0x43e1a2
  43e133:	pop    rdi
  43e134:	jae    0x43e1aa
  43e136:	jb     0x43e1a1
  43e138:	outs   dx,BYTE PTR ds:[rsi]
  43e139:	sub    BYTE PTR [edx+0x65],dh
  43e13d:	ins    BYTE PTR es:[rdi],dx
  43e13e:	outs   dx,DWORD PTR ds:[rsi]
  43e13f:	jo     0x43e1b5
  43e141:	imul   ebp,DWORD PTR [rdi+0x6e],0x45202c73
  43e148:	(bad)  
  43e149:	sub    al,0x20
  43e14b:	(bad)  
  43e14c:	sub    DWORD PTR [rax],eax
  43e14e:	ins    DWORD PTR es:[rdi],dx
  43e14f:	(bad)  
  43e150:	imul   ebp,DWORD PTR [rsi+0x0],0x69616c70
  43e157:	outs   dx,BYTE PTR ds:[rsi]
  43e158:	add    BYTE PTR [rbp+0x78],ah
  43e15b:	je     0x43e1c2
  43e15d:	outs   dx,BYTE PTR ds:[rsi]
  43e15e:	fs gs add BYTE PTR fs:[rdi],bh
  43e163:	(bad)  
  43e164:	(bad)  
  43e165:	add    BYTE PTR [rbp+0x78],ah
  43e168:	je     0x43e1cf
  43e16a:	jb     0x43e1da
  43e16c:	(bad)  
  43e16d:	ins    BYTE PTR es:[rdi],dx
  43e16e:	add    BYTE PTR [rax],al
  43e170:	je     0x43e1a0
  43e172:	je     0x43e1db
  43e174:	imul   esi,DWORD PTR [rbx+0x69],0x7265746e
  43e17b:	outs   dx,BYTE PTR ds:[rsi]
  43e17c:	(bad)  
  43e17d:	ins    BYTE PTR es:[rdi],dx
  43e17e:	add    BYTE PTR [rax+riz*1],ch
  43e181:	je     0x43e1f5
  43e183:	jne    0x43e1ea
  43e185:	add    BYTE PTR [rsi+0x55],al
  43e188:	rex.WR
  43e189:	rex.WR add BYTE PTR [rsi+0x4f],r9b
  43e18d:	push   rsp
  43e18e:	rex.W
  43e18f:	rex.WB
  43e190:	rex.WRX
  43e191:	rex.RXB add BYTE PTR [r8],r8b
  43e194:	add    BYTE PTR [rax],al
  43e196:	add    BYTE PTR [rax],al
  43e198:	je     0x43e1c8
  43e19a:	je     0x43e203
  43e19c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43e19f:	jae    0x43e215
  43e1a1:	jb     0x43e204
  43e1a3:	imul   ebp,DWORD PTR [rsi+0x74],0x203e3c20
  43e1aa:	xor    BYTE PTR [rax],ah
  43e1ac:	push   r11
  43e1ae:	and    BYTE PTR [rdi+riz*2+0x69],dh
  43e1b2:	jae    0x43e21d
  43e1b4:	outs   dx,BYTE PTR ds:[rsi]
  43e1b5:	je     0x43e21c
  43e1b7:	jb     0x43e227
  43e1b9:	(bad)  
  43e1ba:	ins    BYTE PTR es:[rdi],dx
  43e1bb:	add    BYTE PTR [rsi+0x61],ah
  43e1be:	ins    BYTE PTR es:[rdi],dx
  43e1bf:	jae    0x43e226
  43e1c1:	and    BYTE PTR [rcx+0x53],al
  43e1c4:	and    BYTE PTR [rdi+riz*2+0x69],dh
  43e1c8:	jae    0x43e233
  43e1ca:	outs   dx,BYTE PTR ds:[rsi]
  43e1cb:	je     0x43e232
  43e1cd:	jb     0x43e23d
  43e1cf:	(bad)  
  43e1d0:	ins    BYTE PTR es:[rdi],dx
  43e1d1:	add    BYTE PTR [rax],al
  43e1d3:	add    BYTE PTR [rax],al
  43e1d5:	add    BYTE PTR [rax],al
  43e1d7:	add    BYTE PTR [rbx+0x45],dl
  43e1da:	rex.WR
  43e1db:	rex.RB
  43e1dc:	rex.XB push r12
  43e1de:	and    BYTE PTR [rbx+0x2e],ah
  43e1e1:	jb     0x43e248
  43e1e3:	ins    BYTE PTR es:[rdi],dx
  43e1e4:	movsxd ebp,DWORD PTR [rax+0x65]
  43e1e7:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e1ea:	sub    al,0x20
  43e1ec:	movsxd ebp,DWORD PTR [rsi]
  43e1ee:	jb     0x43e255
  43e1f0:	ins    BYTE PTR es:[rdi],dx
  43e1f1:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e1f5:	sub    al,0x20
  43e1f7:	movsxd ebp,DWORD PTR [rsi]
  43e1f9:	jb     0x43e260
  43e1fb:	ins    BYTE PTR es:[rdi],dx
  43e1fc:	push   0x6e697361
  43e201:	fs gs js 0x43e231
  43e205:	and    BYTE PTR [rbx+0x2e],ah
  43e208:	jb     0x43e26f
  43e20a:	ins    BYTE PTR es:[rdi],dx
  43e20b:	push   0x75727361
  43e210:	ins    BYTE PTR es:[rdi],dx
  43e211:	gs jae 0x43e240
  43e214:	and    BYTE PTR [rbx+0x2e],ah
  43e217:	jb     0x43e27e
  43e219:	ins    BYTE PTR es:[rdi],dx
  43e21a:	push   0x72747361
  43e21f:	imul   esp,DWORD PTR [rdi+0x67],0x2c737265
  43e226:	and    BYTE PTR [rbx+0x2e],ah
  43e229:	jb     0x43e290
  43e22b:	ins    BYTE PTR es:[rdi],dx
  43e22c:	push   0x696f7361
  43e231:	fs jae 0x43e260
  43e234:	and    BYTE PTR [rip+0x63202c73],ah        # 0x63640ead
  43e23a:	cs jb  0x43e2a2
  43e23d:	ins    BYTE PTR es:[rdi],dx
  43e23e:	je     0x43e2a1
  43e240:	(bad)  
  43e241:	ins    BYTE PTR es:[rdi],dx
  43e242:	gs jae 0x43e2b5
  43e245:	(bad)  
  43e246:	movsxd esp,DWORD PTR [rbp+0x2c]
  43e249:	and    BYTE PTR [rbx+0x41],al
  43e24c:	push   rbx
  43e24d:	and    BYTE PTR [r15+0x48],r10b
  43e251:	rex.RB
  43e252:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  43e256:	jb     0x43e2bd
  43e258:	ins    BYTE PTR es:[rdi],dx
  43e259:	outs   dx,DWORD PTR ds:[rsi]
  43e25a:	data16 je 0x43e2d6
  43e25d:	jo     0x43e2c4
  43e25f:	and    BYTE PTR [rip+0x54203020],bh        # 0x54641285
  43e265:	rex.W
  43e266:	rex.RB
  43e267:	rex.WRX and BYTE PTR [rdi],r12b
  43e26a:	(bad)  
  43e26b:	and    BYTE PTR [rbp+0x4c],al
  43e26e:	push   rbx
  43e26f:	and    BYTE PTR [r11+0x2e],r12b
  43e273:	jb     0x43e2da
  43e275:	ins    BYTE PTR es:[rdi],dx
  43e276:	outs   dx,DWORD PTR ds:[rsi]
  43e277:	data16 je 0x43e2f3
  43e27a:	jo     0x43e2e1
  43e27c:	cmp    bh,BYTE PTR [rdx]
  43e27e:	jo     0x43e2e7
  43e280:	pop    rdi
  43e281:	movsxd esp,DWORD PTR [rcx+0x74]
  43e284:	(bad)  
  43e285:	ins    BYTE PTR es:[rdi],dx
  43e286:	outs   dx,DWORD PTR ds:[rsi]
  43e287:	addr32 cs jb 0x43e2f0
  43e28b:	addr32 je 0x43e307
  43e28e:	jo     0x43e2f5
  43e290:	cmp    bh,BYTE PTR [rdx]
  43e292:	jo     0x43e2fb
  43e294:	pop    rdi
  43e295:	movsxd esp,DWORD PTR [rcx+0x74]
  43e298:	(bad)  
  43e299:	ins    BYTE PTR es:[rdi],dx
  43e29a:	outs   dx,DWORD PTR ds:[rsi]
  43e29b:	addr32 cs je 0x43e304
  43e29f:	js     0x43e315
  43e2a1:	and    BYTE PTR [rbp+0x4e],al
  43e2a4:	rex.R sub al,0x20
  43e2a7:	movsxd ebp,DWORD PTR [rsi]
  43e2a9:	jb     0x43e310
  43e2ab:	ins    BYTE PTR es:[rdi],dx
  43e2ac:	jo     0x43e313
  43e2ae:	jb     0x43e323
  43e2b0:	imul   esi,DWORD PTR [rbx+0x74],0x65636e65
  43e2b7:	sub    al,0x20
  43e2b9:	movsxd ebp,DWORD PTR [rsi]
  43e2bb:	jb     0x43e322
  43e2bd:	ins    BYTE PTR es:[rdi],dx
  43e2be:	jb     0x43e325
  43e2c0:	jo     0x43e32e
  43e2c2:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x52460a74
  43e2ca:	rex.WRXB
  43e2cb:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e2cf:	pop    rdi
  43e2d0:	movsxd esp,DWORD PTR [rcx+0x74]
  43e2d3:	(bad)  
  43e2d4:	ins    BYTE PTR es:[rdi],dx
  43e2d5:	outs   dx,DWORD PTR ds:[rsi]
  43e2d6:	addr32 cs jo 0x43e341
  43e2da:	pop    rdi
  43e2db:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e2df:	jae    0x43e301
  43e2e1:	movsxd ecx,DWORD PTR [rdx]
  43e2e3:	and    BYTE PTR [rbp+rax*2+0x46],cl
  43e2e7:	push   rsp
  43e2e8:	and    BYTE PTR [rdx+0x4f],cl
  43e2eb:	rex.WB
  43e2ec:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43e2f0:	pop    rdi
  43e2f1:	movsxd esp,DWORD PTR [rcx+0x74]
  43e2f4:	(bad)  
  43e2f5:	ins    BYTE PTR es:[rdi],dx
  43e2f6:	outs   dx,DWORD PTR ds:[rsi]
  43e2f7:	addr32 cs jo 0x43e362
  43e2fb:	pop    rdi
  43e2fc:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e300:	jae    0x43e322
  43e302:	je     0x43e367
  43e304:	and    BYTE PTR [rdi+0x4e],cl
  43e307:	and    BYTE PTR [rax],ch
  43e309:	movsxd ebp,DWORD PTR [rsi]
  43e30b:	jb     0x43e372
  43e30d:	ins    BYTE PTR es:[rdi],dx
  43e30e:	je     0x43e37f
  43e310:	(bad)  
  43e311:	jae    0x43e387
  43e313:	jb     0x43e37a
  43e315:	ins    BYTE PTR es:[rdi],dx
  43e316:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e637420
  43e31e:	outs   dx,DWORD PTR ds:[rsi]
  43e31f:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x52454857
  43e327:	and    BYTE PTR [r11+0x2e],r12b
  43e32b:	outs   dx,DWORD PTR ds:[rsi]
  43e32c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43e334:	(bad)  
  43e335:	cmp    eax,DWORD PTR [rax]
  43e337:	add    BYTE PTR [rbx+0x45],dl
  43e33a:	rex.WR
  43e33b:	rex.RB
  43e33c:	rex.XB push r12
  43e33e:	and    BYTE PTR [rbx+0x2e],ah
  43e341:	jb     0x43e3a8
  43e343:	ins    BYTE PTR es:[rdi],dx
  43e344:	movsxd ebp,DWORD PTR [rax+0x65]
  43e347:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e34a:	sub    al,0x20
  43e34c:	movsxd ebp,DWORD PTR [rsi]
  43e34e:	jb     0x43e3b5
  43e350:	ins    BYTE PTR es:[rdi],dx
  43e351:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e355:	sub    al,0x20
  43e357:	movsxd ebp,DWORD PTR [rsi]
  43e359:	jb     0x43e3c0
  43e35b:	ins    BYTE PTR es:[rdi],dx
  43e35c:	push   0x6e697361
  43e361:	fs gs js 0x43e391
  43e365:	and    BYTE PTR [rbx+0x2e],ah
  43e368:	jb     0x43e3cf
  43e36a:	ins    BYTE PTR es:[rdi],dx
  43e36b:	push   0x75727361
  43e370:	ins    BYTE PTR es:[rdi],dx
  43e371:	gs jae 0x43e3a0
  43e374:	and    BYTE PTR [rbx+0x2e],ah
  43e377:	jb     0x43e3de
  43e379:	ins    BYTE PTR es:[rdi],dx
  43e37a:	push   0x72747361
  43e37f:	imul   esp,DWORD PTR [rdi+0x67],0x2c737265
  43e386:	and    BYTE PTR [rbx+0x2e],ah
  43e389:	jb     0x43e3f0
  43e38b:	ins    BYTE PTR es:[rdi],dx
  43e38c:	push   0x696f7361
  43e391:	fs jae 0x43e3c0
  43e394:	and    BYTE PTR [rip+0x63202c73],ah        # 0x6364100d
  43e39a:	cs jb  0x43e402
  43e39d:	ins    BYTE PTR es:[rdi],dx
  43e39e:	je     0x43e401
  43e3a0:	(bad)  
  43e3a1:	ins    BYTE PTR es:[rdi],dx
  43e3a2:	gs jae 0x43e415
  43e3a5:	(bad)  
  43e3a6:	movsxd esp,DWORD PTR [rbp+0x2c]
  43e3a9:	and    BYTE PTR [rbx+0x41],al
  43e3ac:	push   rbx
  43e3ad:	and    BYTE PTR [r15+0x48],r10b
  43e3b1:	rex.RB
  43e3b2:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  43e3b6:	jb     0x43e41d
  43e3b8:	ins    BYTE PTR es:[rdi],dx
  43e3b9:	outs   dx,DWORD PTR ds:[rsi]
  43e3ba:	data16 je 0x43e436
  43e3bd:	jo     0x43e424
  43e3bf:	and    BYTE PTR [rip+0x54203020],bh        # 0x546413e5
  43e3c5:	rex.W
  43e3c6:	rex.RB
  43e3c7:	rex.WRX and BYTE PTR [rdi],r12b
  43e3ca:	(bad)  
  43e3cb:	and    BYTE PTR [rbp+0x4c],al
  43e3ce:	push   rbx
  43e3cf:	and    BYTE PTR [r11+0x2e],r12b
  43e3d3:	jb     0x43e43a
  43e3d5:	ins    BYTE PTR es:[rdi],dx
  43e3d6:	outs   dx,DWORD PTR ds:[rsi]
  43e3d7:	data16 je 0x43e453
  43e3da:	jo     0x43e441
  43e3dc:	cmp    bh,BYTE PTR [rdx]
  43e3de:	jo     0x43e447
  43e3e0:	pop    rdi
  43e3e1:	movsxd esp,DWORD PTR [rcx+0x74]
  43e3e4:	(bad)  
  43e3e5:	ins    BYTE PTR es:[rdi],dx
  43e3e6:	outs   dx,DWORD PTR ds:[rsi]
  43e3e7:	addr32 cs jb 0x43e450
  43e3eb:	addr32 je 0x43e467
  43e3ee:	jo     0x43e455
  43e3f0:	cmp    bh,BYTE PTR [rdx]
  43e3f2:	jo     0x43e45b
  43e3f4:	pop    rdi
  43e3f5:	movsxd esp,DWORD PTR [rcx+0x74]
  43e3f8:	(bad)  
  43e3f9:	ins    BYTE PTR es:[rdi],dx
  43e3fa:	outs   dx,DWORD PTR ds:[rsi]
  43e3fb:	addr32 cs je 0x43e464
  43e3ff:	js     0x43e475
  43e401:	and    BYTE PTR [rbp+0x4e],al
  43e404:	rex.R sub al,0x20
  43e407:	movsxd ebp,DWORD PTR [rsi]
  43e409:	jb     0x43e470
  43e40b:	ins    BYTE PTR es:[rdi],dx
  43e40c:	jo     0x43e473
  43e40e:	jb     0x43e483
  43e410:	imul   esi,DWORD PTR [rbx+0x74],0x65636e65
  43e417:	or     al,BYTE PTR [rsi+0x52]
  43e41a:	rex.WRXB
  43e41b:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e41f:	pop    rdi
  43e420:	movsxd esp,DWORD PTR [rcx+0x74]
  43e423:	(bad)  
  43e424:	ins    BYTE PTR es:[rdi],dx
  43e425:	outs   dx,DWORD PTR ds:[rsi]
  43e426:	addr32 cs jo 0x43e491
  43e42a:	pop    rdi
  43e42b:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e42f:	jae    0x43e451
  43e431:	movsxd ecx,DWORD PTR [rdx]
  43e433:	and    BYTE PTR [rbp+rax*2+0x46],cl
  43e437:	push   rsp
  43e438:	and    BYTE PTR [rdx+0x4f],cl
  43e43b:	rex.WB
  43e43c:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43e440:	pop    rdi
  43e441:	movsxd esp,DWORD PTR [rcx+0x74]
  43e444:	(bad)  
  43e445:	ins    BYTE PTR es:[rdi],dx
  43e446:	outs   dx,DWORD PTR ds:[rsi]
  43e447:	addr32 cs jo 0x43e4b2
  43e44b:	pop    rdi
  43e44c:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e450:	jae    0x43e472
  43e452:	je     0x43e4b7
  43e454:	and    BYTE PTR [rdi+0x4e],cl
  43e457:	and    BYTE PTR [rax],ch
  43e459:	movsxd ebp,DWORD PTR [rsi]
  43e45b:	jb     0x43e4c2
  43e45d:	ins    BYTE PTR es:[rdi],dx
  43e45e:	je     0x43e4cf
  43e460:	(bad)  
  43e461:	jae    0x43e4d7
  43e463:	jb     0x43e4ca
  43e465:	ins    BYTE PTR es:[rdi],dx
  43e466:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e637420
  43e46e:	outs   dx,DWORD PTR ds:[rsi]
  43e46f:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x52454857
  43e477:	and    BYTE PTR [r11+0x2e],r12b
  43e47b:	outs   dx,DWORD PTR ds:[rsi]
  43e47c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43e484:	(bad)  
  43e485:	cmp    eax,DWORD PTR [rax]
  43e487:	add    BYTE PTR [rbx+0x45],dl
  43e48a:	rex.WR
  43e48b:	rex.RB
  43e48c:	rex.XB push r12
  43e48e:	and    BYTE PTR [rbx+0x2e],ah
  43e491:	jb     0x43e4f8
  43e493:	ins    BYTE PTR es:[rdi],dx
  43e494:	movsxd ebp,DWORD PTR [rax+0x65]
  43e497:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e49a:	sub    al,0x20
  43e49c:	movsxd ebp,DWORD PTR [rsi]
  43e49e:	jb     0x43e505
  43e4a0:	ins    BYTE PTR es:[rdi],dx
  43e4a1:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e4a5:	sub    al,0x20
  43e4a7:	movsxd ebp,DWORD PTR [rsi]
  43e4a9:	jb     0x43e510
  43e4ab:	ins    BYTE PTR es:[rdi],dx
  43e4ac:	push   0x6e697361
  43e4b1:	fs gs js 0x43e4e1
  43e4b5:	and    BYTE PTR [rbx+0x2e],ah
  43e4b8:	jb     0x43e51f
  43e4ba:	ins    BYTE PTR es:[rdi],dx
  43e4bb:	push   0x75727361
  43e4c0:	ins    BYTE PTR es:[rdi],dx
  43e4c1:	gs jae 0x43e4f0
  43e4c4:	and    BYTE PTR [rbx+0x2e],ah
  43e4c7:	jb     0x43e52e
  43e4c9:	ins    BYTE PTR es:[rdi],dx
  43e4ca:	push   0x72747361
  43e4cf:	imul   esp,DWORD PTR [rdi+0x67],0x2c737265
  43e4d6:	and    BYTE PTR [rbx+0x2e],ah
  43e4d9:	jb     0x43e540
  43e4db:	ins    BYTE PTR es:[rdi],dx
  43e4dc:	push   0x696f7361
  43e4e1:	fs jae 0x43e510
  43e4e4:	and    BYTE PTR [rip+0x63202c73],ah        # 0x6364115d
  43e4ea:	cs jb  0x43e552
  43e4ed:	ins    BYTE PTR es:[rdi],dx
  43e4ee:	je     0x43e551
  43e4f0:	(bad)  
  43e4f1:	ins    BYTE PTR es:[rdi],dx
  43e4f2:	gs jae 0x43e565
  43e4f5:	(bad)  
  43e4f6:	movsxd esp,DWORD PTR [rbp+0x2c]
  43e4f9:	and    BYTE PTR [rbx+0x41],al
  43e4fc:	push   rbx
  43e4fd:	and    BYTE PTR [r15+0x48],r10b
  43e501:	rex.RB
  43e502:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  43e506:	jb     0x43e56d
  43e508:	ins    BYTE PTR es:[rdi],dx
  43e509:	outs   dx,DWORD PTR ds:[rsi]
  43e50a:	data16 je 0x43e586
  43e50d:	jo     0x43e574
  43e50f:	and    BYTE PTR [rip+0x54203020],bh        # 0x54641535
  43e515:	rex.W
  43e516:	rex.RB
  43e517:	rex.WRX and BYTE PTR [rdi],r12b
  43e51a:	(bad)  
  43e51b:	and    BYTE PTR [rbp+0x4c],al
  43e51e:	push   rbx
  43e51f:	and    BYTE PTR [r11+0x2e],r12b
  43e523:	jb     0x43e58a
  43e525:	ins    BYTE PTR es:[rdi],dx
  43e526:	outs   dx,DWORD PTR ds:[rsi]
  43e527:	data16 je 0x43e5a3
  43e52a:	jo     0x43e591
  43e52c:	cmp    bh,BYTE PTR [rdx]
  43e52e:	jo     0x43e597
  43e530:	pop    rdi
  43e531:	movsxd esp,DWORD PTR [rcx+0x74]
  43e534:	(bad)  
  43e535:	ins    BYTE PTR es:[rdi],dx
  43e536:	outs   dx,DWORD PTR ds:[rsi]
  43e537:	addr32 cs jb 0x43e5a0
  43e53b:	addr32 je 0x43e5b7
  43e53e:	jo     0x43e5a5
  43e540:	cmp    bh,BYTE PTR [rdx]
  43e542:	jo     0x43e5ab
  43e544:	pop    rdi
  43e545:	movsxd esp,DWORD PTR [rcx+0x74]
  43e548:	(bad)  
  43e549:	ins    BYTE PTR es:[rdi],dx
  43e54a:	outs   dx,DWORD PTR ds:[rsi]
  43e54b:	addr32 cs je 0x43e5b4
  43e54f:	js     0x43e5c5
  43e551:	and    BYTE PTR [rbp+0x4e],al
  43e554:	or     r8b,BYTE PTR [rsi+0x52]
  43e558:	rex.WRXB
  43e559:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e55d:	pop    rdi
  43e55e:	movsxd esp,DWORD PTR [rcx+0x74]
  43e561:	(bad)  
  43e562:	ins    BYTE PTR es:[rdi],dx
  43e563:	outs   dx,DWORD PTR ds:[rsi]
  43e564:	addr32 cs jo 0x43e5cf
  43e568:	pop    rdi
  43e569:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e56d:	jae    0x43e58f
  43e56f:	movsxd ecx,DWORD PTR [rdx]
  43e571:	and    BYTE PTR [rbp+rax*2+0x46],cl
  43e575:	push   rsp
  43e576:	and    BYTE PTR [rdx+0x4f],cl
  43e579:	rex.WB
  43e57a:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43e57e:	pop    rdi
  43e57f:	movsxd esp,DWORD PTR [rcx+0x74]
  43e582:	(bad)  
  43e583:	ins    BYTE PTR es:[rdi],dx
  43e584:	outs   dx,DWORD PTR ds:[rsi]
  43e585:	addr32 cs jo 0x43e5f0
  43e589:	pop    rdi
  43e58a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e58e:	jae    0x43e5b0
  43e590:	je     0x43e5f5
  43e592:	and    BYTE PTR [rdi+0x4e],cl
  43e595:	and    BYTE PTR [rax],ch
  43e597:	movsxd ebp,DWORD PTR [rsi]
  43e599:	jb     0x43e600
  43e59b:	ins    BYTE PTR es:[rdi],dx
  43e59c:	je     0x43e60d
  43e59e:	(bad)  
  43e59f:	jae    0x43e615
  43e5a1:	jb     0x43e608
  43e5a3:	ins    BYTE PTR es:[rdi],dx
  43e5a4:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e637420
  43e5ac:	outs   dx,DWORD PTR ds:[rsi]
  43e5ad:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x52454857
  43e5b5:	and    BYTE PTR [r11+0x2e],r12b
  43e5b9:	outs   dx,DWORD PTR ds:[rsi]
  43e5ba:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43e5c2:	(bad)  
  43e5c3:	cmp    eax,DWORD PTR [rax]
  43e5c5:	add    BYTE PTR [rax],al
  43e5c7:	add    BYTE PTR [rbx+0x45],dl
  43e5ca:	rex.WR
  43e5cb:	rex.RB
  43e5cc:	rex.XB push r12
  43e5ce:	and    BYTE PTR [rbx+0x2e],ah
  43e5d1:	jb     0x43e638
  43e5d3:	ins    BYTE PTR es:[rdi],dx
  43e5d4:	movsxd ebp,DWORD PTR [rax+0x65]
  43e5d7:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e5da:	sub    al,0x20
  43e5dc:	movsxd ebp,DWORD PTR [rsi]
  43e5de:	jb     0x43e645
  43e5e0:	ins    BYTE PTR es:[rdi],dx
  43e5e1:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e5e5:	sub    al,0x20
  43e5e7:	movsxd ebp,DWORD PTR [rsi]
  43e5e9:	jb     0x43e650
  43e5eb:	ins    BYTE PTR es:[rdi],dx
  43e5ec:	push   0x6e697361
  43e5f1:	fs gs js 0x43e621
  43e5f5:	and    BYTE PTR [rbx+0x2e],ah
  43e5f8:	jb     0x43e65f
  43e5fa:	ins    BYTE PTR es:[rdi],dx
  43e5fb:	push   0x75727361
  43e600:	ins    BYTE PTR es:[rdi],dx
  43e601:	gs jae 0x43e630
  43e604:	and    BYTE PTR [rbx+0x2e],ah
  43e607:	jb     0x43e66e
  43e609:	ins    BYTE PTR es:[rdi],dx
  43e60a:	push   0x72747361
  43e60f:	imul   esp,DWORD PTR [rdi+0x67],0x2c737265
  43e616:	and    BYTE PTR [rbx+0x2e],ah
  43e619:	jb     0x43e680
  43e61b:	ins    BYTE PTR es:[rdi],dx
  43e61c:	push   0x696f7361
  43e621:	fs jae 0x43e650
  43e624:	and    BYTE PTR [rip+0x63202c73],ah        # 0x6364129d
  43e62a:	cs jb  0x43e692
  43e62d:	ins    BYTE PTR es:[rdi],dx
  43e62e:	je     0x43e691
  43e630:	(bad)  
  43e631:	ins    BYTE PTR es:[rdi],dx
  43e632:	gs jae 0x43e6a5
  43e635:	(bad)  
  43e636:	movsxd esp,DWORD PTR [rbp+0xa]
  43e639:	rex.RX push rdx
  43e63b:	rex.WRXB
  43e63c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e640:	pop    rdi
  43e641:	movsxd esp,DWORD PTR [rcx+0x74]
  43e644:	(bad)  
  43e645:	ins    BYTE PTR es:[rdi],dx
  43e646:	outs   dx,DWORD PTR ds:[rsi]
  43e647:	addr32 cs jo 0x43e6b2
  43e64b:	pop    rdi
  43e64c:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e650:	jae    0x43e672
  43e652:	movsxd ecx,DWORD PTR [rdx]
  43e654:	and    BYTE PTR [rbp+rax*2+0x46],cl
  43e658:	push   rsp
  43e659:	and    BYTE PTR [rdx+0x4f],cl
  43e65c:	rex.WB
  43e65d:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43e661:	pop    rdi
  43e662:	movsxd esp,DWORD PTR [rcx+0x74]
  43e665:	(bad)  
  43e666:	ins    BYTE PTR es:[rdi],dx
  43e667:	outs   dx,DWORD PTR ds:[rsi]
  43e668:	addr32 cs jo 0x43e6d3
  43e66c:	pop    rdi
  43e66d:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e671:	jae    0x43e693
  43e673:	je     0x43e6d8
  43e675:	and    BYTE PTR [rdi+0x4e],cl
  43e678:	and    BYTE PTR [rax],ch
  43e67a:	movsxd ebp,DWORD PTR [rsi]
  43e67c:	jb     0x43e6e3
  43e67e:	ins    BYTE PTR es:[rdi],dx
  43e67f:	je     0x43e6f0
  43e681:	(bad)  
  43e682:	jae    0x43e6f8
  43e684:	jb     0x43e6eb
  43e686:	ins    BYTE PTR es:[rdi],dx
  43e687:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e637420
  43e68f:	outs   dx,DWORD PTR ds:[rsi]
  43e690:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x52454857
  43e698:	and    BYTE PTR [r11+0x2e],r12b
  43e69c:	outs   dx,DWORD PTR ds:[rsi]
  43e69d:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43e6a5:	(bad)  
  43e6a6:	cmp    eax,DWORD PTR [rax]
  43e6a8:	push   rbx
  43e6a9:	rex.RB
  43e6aa:	rex.WR
  43e6ab:	rex.RB
  43e6ac:	rex.XB push r12
  43e6ae:	and    BYTE PTR [rdx+0x65],dh
  43e6b1:	ins    BYTE PTR es:[rdi],dx
  43e6b2:	movsxd ebp,DWORD PTR [rax+0x65]
  43e6b5:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e6b8:	sub    al,0x20
  43e6ba:	jb     0x43e721
  43e6bc:	ins    BYTE PTR es:[rdi],dx
  43e6bd:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e6c1:	sub    al,0x20
  43e6c3:	jb     0x43e72a
  43e6c5:	ins    BYTE PTR es:[rdi],dx
  43e6c6:	push   0x6e697361
  43e6cb:	fs gs js 0x43e6fb
  43e6cf:	and    BYTE PTR [rdx+0x65],dh
  43e6d2:	ins    BYTE PTR es:[rdi],dx
  43e6d3:	push   0x75727361
  43e6d8:	ins    BYTE PTR es:[rdi],dx
  43e6d9:	gs jae 0x43e708
  43e6dc:	and    BYTE PTR [rdx+0x65],dh
  43e6df:	ins    BYTE PTR es:[rdi],dx
  43e6e0:	je     0x43e754
  43e6e2:	imul   esp,DWORD PTR [rdi+0x67],0x20737265
  43e6e9:	cmp    al,0x3e
  43e6eb:	and    BYTE PTR [rax],dh
  43e6ed:	sub    al,0x20
  43e6ef:	jb     0x43e756
  43e6f1:	ins    BYTE PTR es:[rdi],dx
  43e6f2:	push   0x696f7361
  43e6f7:	fs jae 0x43e726
  43e6fa:	and    BYTE PTR [rip+0x72202c73],ah        # 0x72641373
  43e700:	gs ins BYTE PTR es:[rdi],dx
  43e702:	je     0x43e765
  43e704:	(bad)  
  43e705:	ins    BYTE PTR es:[rdi],dx
  43e706:	gs jae 0x43e779
  43e709:	(bad)  
  43e70a:	movsxd esp,DWORD PTR [rbp+0xa]
  43e70d:	rex.RX push rdx
  43e70f:	rex.WRXB
  43e710:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e714:	pop    rdi
  43e715:	movsxd esp,DWORD PTR [rcx+0x74]
  43e718:	(bad)  
  43e719:	ins    BYTE PTR es:[rdi],dx
  43e71a:	outs   dx,DWORD PTR ds:[rsi]
  43e71b:	addr32 cs jo 0x43e786
  43e71f:	pop    rdi
  43e720:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e724:	jae    0x43e746
  43e726:	push   rdi
  43e727:	rex.W
  43e728:	rex.RB push r10
  43e72a:	and    BYTE PTR [r15+0x69],r13b
  43e72e:	and    BYTE PTR fs:[rip+0x73252720],bh        # 0x73690e55
  43e735:	(bad)  
  43e736:	cmp    eax,DWORD PTR [rax]
  43e738:	push   rbx
  43e739:	rex.RB
  43e73a:	rex.WR
  43e73b:	rex.RB
  43e73c:	rex.XB push r12
  43e73e:	and    BYTE PTR [rdx+0x65],dh
  43e741:	ins    BYTE PTR es:[rdi],dx
  43e742:	movsxd ebp,DWORD PTR [rax+0x65]
  43e745:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e748:	sub    al,0x20
  43e74a:	jb     0x43e7b1
  43e74c:	ins    BYTE PTR es:[rdi],dx
  43e74d:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e751:	sub    al,0x20
  43e753:	jb     0x43e7ba
  43e755:	ins    BYTE PTR es:[rdi],dx
  43e756:	push   0x6e697361
  43e75b:	fs gs js 0x43e78b
  43e75f:	and    BYTE PTR [rdx+0x65],dh
  43e762:	ins    BYTE PTR es:[rdi],dx
  43e763:	push   0x75727361
  43e768:	ins    BYTE PTR es:[rdi],dx
  43e769:	gs jae 0x43e798
  43e76c:	and    BYTE PTR [rdx+0x65],dh
  43e76f:	ins    BYTE PTR es:[rdi],dx
  43e770:	je     0x43e7e4
  43e772:	imul   esp,DWORD PTR [rdi+0x67],0x20737265
  43e779:	cmp    al,0x3e
  43e77b:	and    BYTE PTR [rax],dh
  43e77d:	sub    al,0x20
  43e77f:	jb     0x43e7e6
  43e781:	ins    BYTE PTR es:[rdi],dx
  43e782:	push   0x696f7361
  43e787:	fs jae 0x43e7b6
  43e78a:	and    BYTE PTR [rdi],ah
  43e78c:	(bad)  
  43e78d:	sub    al,0x20
  43e78f:	jb     0x43e7f6
  43e791:	ins    BYTE PTR es:[rdi],dx
  43e792:	je     0x43e7f5
  43e794:	(bad)  
  43e795:	ins    BYTE PTR es:[rdi],dx
  43e796:	gs jae 0x43e809
  43e799:	(bad)  
  43e79a:	movsxd esp,DWORD PTR [rbp+0xa]
  43e79d:	rex.RX push rdx
  43e79f:	rex.WRXB
  43e7a0:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e7a4:	pop    rdi
  43e7a5:	movsxd esp,DWORD PTR [rcx+0x74]
  43e7a8:	(bad)  
  43e7a9:	ins    BYTE PTR es:[rdi],dx
  43e7aa:	outs   dx,DWORD PTR ds:[rsi]
  43e7ab:	addr32 cs jo 0x43e816
  43e7af:	pop    rdi
  43e7b0:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e7b4:	jae    0x43e7d6
  43e7b6:	push   rdi
  43e7b7:	rex.W
  43e7b8:	rex.RB push r10
  43e7ba:	and    BYTE PTR [r15+0x69],r13b
  43e7be:	and    BYTE PTR fs:[rip+0x73252720],bh        # 0x73690ee5
  43e7c5:	(bad)  
  43e7c6:	cmp    eax,DWORD PTR [rax]
  43e7c8:	push   rbx
  43e7c9:	rex.RB
  43e7ca:	rex.WR
  43e7cb:	rex.RB
  43e7cc:	rex.XB push r12
  43e7ce:	and    BYTE PTR [rdx+0x65],dh
  43e7d1:	ins    BYTE PTR es:[rdi],dx
  43e7d2:	movsxd ebp,DWORD PTR [rax+0x65]
  43e7d5:	movsxd ebp,DWORD PTR [rbx+0x73]
  43e7d8:	sub    al,0x20
  43e7da:	jb     0x43e841
  43e7dc:	ins    BYTE PTR es:[rdi],dx
  43e7dd:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  43e7e1:	sub    al,0x20
  43e7e3:	jb     0x43e84a
  43e7e5:	ins    BYTE PTR es:[rdi],dx
  43e7e6:	push   0x6e697361
  43e7eb:	fs gs js 0x43e81b
  43e7ef:	and    BYTE PTR [rdx+0x65],dh
  43e7f2:	ins    BYTE PTR es:[rdi],dx
  43e7f3:	push   0x75727361
  43e7f8:	ins    BYTE PTR es:[rdi],dx
  43e7f9:	gs jae 0x43e828
  43e7fc:	and    BYTE PTR [rdx+0x65],dh
  43e7ff:	ins    BYTE PTR es:[rdi],dx
  43e800:	je     0x43e874
  43e802:	imul   esp,DWORD PTR [rdi+0x67],0x20737265
  43e809:	cmp    al,0x3e
  43e80b:	and    BYTE PTR [rax],dh
  43e80d:	sub    al,0x20
  43e80f:	jb     0x43e876
  43e811:	ins    BYTE PTR es:[rdi],dx
  43e812:	push   0x696f7361
  43e817:	fs jae 0x43e846
  43e81a:	and    BYTE PTR [rdi],ah
  43e81c:	(bad)  
  43e81d:	sub    al,0x20
  43e81f:	(bad)  
  43e820:	(bad)  
  43e821:	or     al,BYTE PTR [rsi+0x52]
  43e824:	rex.WRXB
  43e825:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e829:	pop    rdi
  43e82a:	movsxd esp,DWORD PTR [rcx+0x74]
  43e82d:	(bad)  
  43e82e:	ins    BYTE PTR es:[rdi],dx
  43e82f:	outs   dx,DWORD PTR ds:[rsi]
  43e830:	addr32 cs jo 0x43e89b
  43e834:	pop    rdi
  43e835:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43e839:	jae    0x43e85b
  43e83b:	push   rdi
  43e83c:	rex.W
  43e83d:	rex.RB push r10
  43e83f:	and    BYTE PTR [r15+0x69],r13b
  43e843:	and    BYTE PTR fs:[rip+0x73252720],bh        # 0x73690f6a
  43e84a:	(bad)  
  43e84b:	cmp    eax,DWORD PTR [rax]
  43e84d:	add    BYTE PTR [rax],al
  43e84f:	add    BYTE PTR [rcx+rbp*2+0x64],al
  43e853:	and    BYTE PTR [rsi+0x6f],ch
  43e856:	je     0x43e878
  43e858:	imul   bp,WORD PTR [rsi+0x64],0x6120
  43e85e:	outs   dx,BYTE PTR ds:[rsi]
  43e85f:	jns    0x43e881
  43e861:	jb     0x43e8c8
  43e863:	ins    BYTE PTR es:[rdi],dx
  43e864:	(bad)  
  43e865:	je     0x43e8d0
  43e867:	outs   dx,DWORD PTR ds:[rsi]
  43e868:	outs   dx,BYTE PTR ds:[rsi]
  43e869:	and    BYTE PTR [rdi+0x69],dh
  43e86c:	je     0x43e8d6
  43e86e:	and    BYTE PTR [rdi+0x49],cl
  43e871:	and    BYTE PTR [rip+0xa2e73],r12b        # 0x4e16eb
  43e878:	je     0x43e87a
  43e87a:	push   rbx
  43e87b:	rex.RB
  43e87c:	rex.WR
  43e87d:	rex.RB
  43e87e:	rex.XB push r12
  43e880:	and    BYTE PTR [rdx],ch
  43e882:	and    BYTE PTR [rsi+0x52],al
  43e885:	rex.WRXB
  43e886:	rex.WRB and BYTE PTR [rip+0x252e0073],r12b        # 0x2571e900
  43e88d:	jae    0x43e8ca
  43e88f:	add    BYTE PTR [rbx+0x45],dl
  43e892:	rex.WR
  43e893:	rex.RB
  43e894:	rex.XB push r12
  43e896:	and    BYTE PTR [rcx+0x2e],ah
  43e899:	(bad)  
  43e89a:	je     0x43e910
  43e89c:	outs   dx,BYTE PTR ds:[rsi]
  43e89d:	(bad)  
  43e89e:	ins    DWORD PTR es:[rdi],dx
  43e89f:	gs sub al,0x0
  43e8a2:	add    BYTE PTR [rax],al
  43e8a4:	add    BYTE PTR [rax],al
  43e8a6:	add    BYTE PTR [rax],al
  43e8a8:	or     ah,BYTE PTR [rax]
  43e8aa:	and    BYTE PTR [rax+0x67],dh
  43e8ad:	pop    rdi
  43e8ae:	movsxd esp,DWORD PTR [rcx+0x74]
  43e8b1:	(bad)  
  43e8b2:	ins    BYTE PTR es:[rdi],dx
  43e8b3:	outs   dx,DWORD PTR ds:[rsi]
  43e8b4:	outs   dx,WORD PTR cs:[esi]
  43e8b8:	jb     0x43e927
  43e8ba:	(bad)  
  43e8bb:	je     0x43e91c
  43e8bd:	je     0x43e938
  43e8bf:	jo     0x43e926
  43e8c1:	sub    BYTE PTR [rcx+0x2e],ah
  43e8c4:	(bad)  
  43e8c5:	je     0x43e93b
  43e8c7:	je     0x43e942
  43e8c9:	jo     0x43e934
  43e8cb:	fs sub al,0x20
  43e8ce:	(bad)  
  43e8cf:	cs (bad) 
  43e8d1:	je     0x43e947
  43e8d3:	je     0x43e94e
  43e8d5:	jo     0x43e944
  43e8d7:	outs   dx,DWORD PTR ds:[rsi]
  43e8d8:	sub    DWORD PTR fs:[rdx+rcx*1],ebp
  43e8dc:	and    BYTE PTR [rax],ah
  43e8de:	sub    BYTE PTR [rbx+0x45],dl
  43e8e1:	rex.WR
  43e8e2:	rex.RB
  43e8e3:	rex.XB push r12
  43e8e5:	and    BYTE PTR [rbx+0x75],dh
  43e8e8:	(bad)
  43e8ed:	outs   dx,BYTE PTR ds:[rsi]
  43e8ee:	sub    BYTE PTR [eax+0x67],dh
  43e8f2:	pop    rdi
  43e8f3:	movsxd esp,DWORD PTR [rcx+0x74]
  43e8f6:	(bad)  
  43e8f7:	ins    BYTE PTR es:[rdi],dx
  43e8f8:	outs   dx,DWORD PTR ds:[rsi]
  43e8f9:	addr32 cs jo 0x43e964
  43e8fd:	pop    rdi
  43e8fe:	addr32 gs je 0x43e961
  43e902:	gs js  0x43e975
  43e905:	jb     0x43e92f
  43e907:	fs cs (bad) 
  43e90a:	fs (bad) 
  43e90c:	imul   ebp,DWORD PTR [rsi+0x2c],0x612e6420
  43e913:	fs jb  0x43e97b
  43e916:	ins    BYTE PTR es:[rdi],dx
  43e917:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x20726f66
  43e91f:	xor    DWORD PTR [rdx],esi
  43e921:	cmp    BYTE PTR [rcx],ch
  43e923:	or     ah,BYTE PTR [rax]
  43e925:	and    BYTE PTR [rax],ah
  43e927:	rex.RX push rdx
  43e929:	rex.WRXB
  43e92a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e92e:	pop    rdi
  43e92f:	movsxd esp,DWORD PTR [rcx+0x74]
  43e932:	(bad)  
  43e933:	ins    BYTE PTR es:[rdi],dx
  43e934:	outs   dx,DWORD PTR ds:[rsi]
  43e935:	addr32 cs jo 0x43e9a0
  43e939:	pop    rdi
  43e93a:	(bad)  
  43e93b:	je     0x43e9b1
  43e93d:	jb     0x43e9a3
  43e93f:	data16 and BYTE PTR gs:[rdx+rcx*1+0x20],ah
  43e945:	and    BYTE PTR [rax],ah
  43e947:	push   rdi
  43e948:	rex.W
  43e949:	rex.RB push r10
  43e94b:	and    BYTE PTR [r14+rbp*1+0x61],r12b
  43e950:	fs jb  0x43e9b8
  43e953:	ins    BYTE PTR es:[rdi],dx
  43e954:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x612e6120
  43e95c:	je     0x43e9d2
  43e95e:	jb     0x43e9c5
  43e960:	ins    BYTE PTR es:[rdi],dx
  43e961:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  43e969:	cs (bad) 
  43e96b:	outs   dx,BYTE PTR fs:[rsi]
  43e96d:	jne    0x43e9dc
  43e96f:	and    BYTE PTR [rip+0x612e6120],bh        # 0x61724a95
  43e975:	je     0x43e9eb
  43e977:	outs   dx,BYTE PTR ds:[rsi]
  43e978:	jne    0x43e9e7
  43e97a:	and    BYTE PTR [rcx+0x4e],al
  43e97d:	and    BYTE PTR [rcx+0x2e],r12b
  43e981:	(bad)  
  43e982:	je     0x43e9f8
  43e984:	push   0x65647361
  43e989:	sub    WORD PTR [rdx+rcx*1],bp
  43e98d:	and    BYTE PTR [rax],ah
  43e98f:	(bad)  
  43e990:	cs (bad) 
  43e992:	je     0x43ea08
  43e994:	outs   dx,BYTE PTR ds:[rsi]
  43e995:	outs   dx,DWORD PTR ds:[rsi]
  43e996:	je     0x43ea06
  43e998:	jne    0x43ea06
  43e99a:	ins    BYTE PTR es:[rdi],dx
  43e99b:	sub    al,0x20
  43e99d:	(bad)  
  43e99e:	cs (bad) 
  43e9a0:	je     0x43ea16
  43e9a2:	outs   dx,BYTE PTR ds:[rsi]
  43e9a3:	jne    0x43ea12
  43e9a5:	sub    al,0x0
  43e9a7:	add    BYTE PTR [rdx],cl
  43e9a9:	and    BYTE PTR [rax],ah
  43e9ab:	sub    BYTE PTR [rbx+0x45],dl
  43e9ae:	rex.WR
  43e9af:	rex.RB
  43e9b0:	rex.XB push r12
  43e9b2:	and    BYTE PTR [rbx+0x2e],ah
  43e9b5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43e9b8:	ins    BYTE PTR es:[rdi],dx
  43e9b9:	outs   dx,BYTE PTR ds:[rsi]
  43e9ba:	(bad)  
  43e9bb:	ins    DWORD PTR es:[rdi],dx
  43e9bc:	and    BYTE PTR gs:[rsi+0x52],al
  43e9c0:	rex.WRXB
  43e9c1:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43e9c5:	pop    rdi
  43e9c6:	movsxd esp,DWORD PTR [rcx+0x74]
  43e9c9:	(bad)  
  43e9ca:	ins    BYTE PTR es:[rdi],dx
  43e9cb:	outs   dx,DWORD PTR ds:[rsi]
  43e9cc:	addr32 cs jo 0x43ea37
  43e9d0:	pop    rdi
  43e9d1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43e9d4:	ins    BYTE PTR es:[rdi],dx
  43e9d5:	(bad)  
  43e9d6:	je     0x43ea41
  43e9d8:	outs   dx,DWORD PTR ds:[rsi]
  43e9d9:	outs   dx,BYTE PTR ds:[rsi]
  43e9da:	and    BYTE PTR [rbx+0x2c],ah
  43e9dd:	and    BYTE PTR [rax+0x67],dh
  43e9e0:	pop    rdi
  43e9e1:	movsxd esp,DWORD PTR [rcx+0x74]
  43e9e4:	(bad)  
  43e9e5:	ins    BYTE PTR es:[rdi],dx
  43e9e6:	outs   dx,DWORD PTR ds:[rsi]
  43e9e7:	addr32 cs jo 0x43ea52
  43e9eb:	pop    rdi
  43e9ec:	je     0x43ea67
  43e9ee:	jo     0x43ea55
  43e9f0:	and    BYTE PTR [rdx+rcx*1+0x20],dh
  43e9f4:	and    BYTE PTR [rax],ah
  43e9f6:	push   rdi
  43e9f7:	rex.W
  43e9f8:	rex.RB push r10
  43e9fa:	and    BYTE PTR [r11+0x2e],r12b
  43e9fe:	outs   dx,DWORD PTR ds:[rsi]
  43e9ff:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x612e6120
  43ea07:	je     0x43ea7d
  43ea09:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43ea0c:	ins    BYTE PTR es:[rdi],dx
  43ea0d:	(bad)  
  43ea0e:	je     0x43ea79
  43ea10:	outs   dx,DWORD PTR ds:[rsi]
  43ea11:	outs   dx,BYTE PTR ds:[rsi]
  43ea12:	and    BYTE PTR [rcx+0x4e],al
  43ea15:	and    BYTE PTR [rsi+rbp*1+0x6f],r14b
  43ea1a:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x612e6120
  43ea22:	je     0x43ea98
  43ea24:	je     0x43ea9f
  43ea26:	jo     0x43ea91
  43ea28:	and    BYTE PTR fs:[rcx+0x4e],al
  43ea2c:	and    BYTE PTR [rcx+0x2e],r12b
  43ea30:	(bad)  
  43ea31:	je     0x43eaa7
  43ea33:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43ea36:	ins    BYTE PTR es:[rdi],dx
  43ea37:	(bad)  
  43ea38:	je     0x43eaa3
  43ea3a:	outs   dx,DWORD PTR ds:[rsi]
  43ea3b:	outs   dx,BYTE PTR ds:[rsi]
  43ea3c:	and    BYTE PTR [rsi+rdi*1],bh
  43ea3f:	and    BYTE PTR [rsi+rbp*1+0x74],dh
  43ea43:	jns    0x43eab5
  43ea45:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43ea48:	ins    BYTE PTR es:[rdi],dx
  43ea49:	(bad)  
  43ea4a:	je     0x43eab5
  43ea4c:	outs   dx,DWORD PTR ds:[rsi]
  43ea4d:	outs   dx,BYTE PTR ds:[rsi]
  43ea4e:	sub    DWORD PTR [rax],esp
  43ea50:	push   r11
  43ea52:	and    BYTE PTR [rcx+0x74],ah
  43ea55:	je     0x43eaba
  43ea57:	outs   dx,DWORD PTR ds:[rsi]
  43ea58:	ins    BYTE PTR es:[rdi],dx
  43ea59:	ins    BYTE PTR es:[rdi],dx
  43ea5a:	(bad)  
  43ea5b:	je     0x43eac6
  43ea5d:	outs   dx,DWORD PTR ds:[rsi]
  43ea5e:	outs   dx,BYTE PTR ds:[rsi]
  43ea5f:	add    BYTE PTR [rdx],cl
  43ea61:	and    BYTE PTR [rax],ah
  43ea63:	rex.WRX push rbp
  43ea65:	rex.WR
  43ea66:	rex.WR and BYTE PTR [rcx+0x53],r8b
  43ea6a:	and    BYTE PTR [rcx+0x74],ah
  43ea6d:	je     0x43ead2
  43ea6f:	outs   dx,DWORD PTR ds:[rsi]
  43ea70:	ins    BYTE PTR es:[rdi],dx
  43ea71:	ins    BYTE PTR es:[rdi],dx
  43ea72:	(bad)  
  43ea73:	je     0x43eade
  43ea75:	outs   dx,DWORD PTR ds:[rsi]
  43ea76:	outs   dx,BYTE PTR ds:[rsi]
  43ea77:	add    BYTE PTR [rdx+rcx*1],ch
  43ea7a:	and    BYTE PTR [rax],ah
  43ea7c:	jo     0x43eae5
  43ea7e:	pop    rdi
  43ea7f:	movsxd esp,DWORD PTR [rcx+0x74]
  43ea82:	(bad)  
  43ea83:	ins    BYTE PTR es:[rdi],dx
  43ea84:	outs   dx,DWORD PTR ds:[rsi]
  43ea85:	addr32 cs jo 0x43eaf0
  43ea89:	pop    rdi
  43ea8a:	addr32 gs je 0x43eaed
  43ea8e:	imul   ebp,DWORD PTR [rsi+0x64],0x65647865
  43ea95:	data16 sub BYTE PTR [rcx+0x2e],ah
  43ea99:	(bad)  
  43ea9a:	je     0x43eb10
  43ea9c:	jb     0x43eb03
  43ea9e:	ins    BYTE PTR es:[rdi],dx
  43ea9f:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x74612e61
  43eaa7:	je     0x43eb17
  43eaa9:	jne    0x43eb18
  43eaab:	sub    al,0x20
  43eaad:	push   rsp
  43eaae:	push   rdx
  43eaaf:	push   rbp
  43eab0:	sub    DWORD PTR [r8],r12d
  43eab3:	push   r11
  43eab5:	and    BYTE PTR [rcx+0x6e],ch
  43eab8:	fs gs js 0x43eb20
  43eabc:	data16 add BYTE PTR gs:[rdx+rcx*1],ch
  43eac1:	and    BYTE PTR [rax],ah
  43eac3:	rex.WRX push rbp
  43eac5:	rex.WR
  43eac6:	rex.WR and BYTE PTR [rcx+0x53],r8b
  43eaca:	and    BYTE PTR [rcx+0x6e],ch
  43eacd:	fs gs js 0x43eb35
  43ead1:	data16 add BYTE PTR gs:[rax],al
  43ead5:	add    BYTE PTR [rax],al
  43ead7:	add    BYTE PTR [rdx+rcx*1],ch
  43eada:	and    BYTE PTR [rax],ah
  43eadc:	rex.XB
  43eadd:	push   r11
  43eadf:	and    BYTE PTR [r15+0x48],r10b
  43eae3:	rex.RB
  43eae4:	rex.WRX and BYTE PTR [rcx+0x74],r12b
  43eae8:	je     0x43eb50
  43eaea:	fs ja  0x43eb5c
  43eaed:	jo     0x43eb63
  43eaef:	imul   ebp,DWORD PTR [rdi+0x6e],0x53492073
  43eaf6:	and    BYTE PTR [rsi+0x55],cl
  43eaf9:	rex.WR
  43eafa:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  43eaff:	rex.WRX and BYTE PTR [rdi],r12b
  43eb02:	(bad)  
  43eb03:	and    BYTE PTR [rbp+0x4c],al
  43eb06:	push   rbx
  43eb07:	and    BYTE PTR [r8],r12b
  43eb0a:	and    BYTE PTR [rdi],ah
  43eb0c:	sub    BYTE PTR [rdi],ah
  43eb0e:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  43eb12:	(bad)  
  43eb13:	jb     0x43eb87
  43eb15:	(bad)  
  43eb16:	jns    0x43eb77
  43eb18:	je     0x43eb89
  43eb1a:	pop    rdi
  43eb1b:	jae    0x43eb91
  43eb1d:	jb     0x43eb88
  43eb1f:	outs   dx,BYTE PTR ds:[rsi]
  43eb20:	sub    BYTE PTR [ecx+0x52],al
  43eb24:	push   rdx
  43eb25:	pop    r9
  43eb27:	sub    BYTE PTR [rbx+0x45],dl
  43eb2a:	rex.WR
  43eb2b:	rex.RB
  43eb2c:	rex.XB push r12
  43eb2e:	and    BYTE PTR [rcx+0x75],dh
  43eb31:	outs   dx,DWORD PTR ds:[rsi]
  43eb32:	je     0x43eb99
  43eb34:	pop    rdi
  43eb35:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  43eb3d:	je     0x43eba8
  43eb3f:	outs   dx,DWORD PTR ds:[rsi]
  43eb40:	outs   dx,BYTE PTR ds:[rsi]
  43eb41:	pop    rdi
  43eb42:	outs   dx,BYTE PTR ds:[rsi]
  43eb43:	(bad)  
  43eb44:	ins    DWORD PTR es:[rdi],dx
  43eb45:	sub    DWORD PTR gs:[rax],esp
  43eb48:	jl     0x43ebc6
  43eb4a:	and    BYTE PTR [rax],ah
  43eb4c:	(bad)  
  43eb4d:	and    BYTE PTR [rdi],ah
  43eb4f:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  43eb53:	jno    0x43ebca
  43eb55:	outs   dx,DWORD PTR ds:[rsi]
  43eb56:	je     0x43ebbd
  43eb58:	pop    rdi
  43eb59:	ins    BYTE PTR es:[rdi],dx
  43eb5a:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  43eb62:	jo     0x43ebd8
  43eb64:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  43eb6b:	jne    0x43ebd2
  43eb6d:	sub    DWORD PTR [rax],esp
  43eb6f:	and    BYTE PTR [rsi+0x52],al
  43eb72:	rex.WRXB
  43eb73:	rex.WRB and BYTE PTR [r8],r12b
  43eb76:	and    BYTE PTR [rax+0x67],dh
  43eb79:	pop    rdi
  43eb7a:	outs   dx,DWORD PTR ds:[rsi]
  43eb7b:	jo     0x43ebf1
  43eb7d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  43eb84:	pop    rdi
  43eb85:	je     0x43ebe8
  43eb87:	(bad)  
  43eb88:	ins    BYTE PTR es:[rdi],dx
  43eb89:	sub    BYTE PTR gs:[rcx+0x74],ah
  43eb8d:	je     0x43ebf5
  43eb8f:	fs ja  0x43ec01
  43eb92:	jo     0x43ec08
  43eb94:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  43eb9b:	and    BYTE PTR [rdi],ah
  43eb9d:	sub    al,0x20
  43eb9f:	(bad)  
  43eba0:	sub    DWORD PTR [rax],esp
  43eba2:	jl     0x43ec20
  43eba4:	and    BYTE PTR [rdi],ah
  43eba6:	sub    DWORD PTR [rdi],esp
  43eba8:	and    BYTE PTR [rbp+0x4e],al
  43ebab:	and    BYTE PTR [rcx+0x53],r8b
  43ebaf:	and    BYTE PTR [rcx+0x74],ah
  43ebb2:	je     0x43ec1a
  43ebb4:	fs ja  0x43ec26
  43ebb7:	jo     0x43ec2d
  43ebb9:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2c0073
  43ebc0:	and    BYTE PTR [rax],ah
  43ebc2:	rex.WRX push rbp
  43ebc4:	rex.WR
  43ebc5:	rex.WR and BYTE PTR [rcx+0x53],r8b
  43ebc9:	and    BYTE PTR [rcx+0x74],ah
  43ebcc:	je     0x43ec34
  43ebce:	fs ja  0x43ec40
  43ebd1:	jo     0x43ec47
  43ebd3:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2c0073
  43ebda:	and    BYTE PTR [rax],ah
  43ebdc:	(bad)  
  43ebdd:	cs (bad) 
  43ebdf:	je     0x43ec55
  43ebe1:	jae    0x43ec57
  43ebe3:	outs   dx,DWORD PTR ds:[rsi]
  43ebe4:	jb     0x43ec47
  43ebe6:	add    BYTE PTR gs:[eax],al
  43ebea:	add    BYTE PTR [rax],al
  43ebec:	add    BYTE PTR [rax],al
  43ebee:	add    BYTE PTR [rax],al
  43ebf0:	sub    al,0xa
  43ebf2:	and    BYTE PTR [rax],ah
  43ebf4:	rex.XB
  43ebf5:	push   r11
  43ebf7:	and    BYTE PTR [r15+0x48],r10b
  43ebfb:	rex.RB
  43ebfc:	rex.WRX and BYTE PTR [rcx+0x2e],r12b
  43ec00:	(bad)  
  43ec01:	je     0x43ec77
  43ec03:	jae    0x43ec79
  43ec05:	(bad)  
  43ec06:	je     0x43ec7c
  43ec08:	(bad)  
  43ec09:	jb     0x43ec72
  43ec0b:	gs je  0x43ec4b
  43ec0e:	sub    eax,0x48542031
  43ec13:	rex.RB
  43ec14:	rex.WRX and BYTE PTR [rsi+0x55],r9b
  43ec18:	rex.WR
  43ec19:	rex.WR and BYTE PTR [rbp+0x4c],r8b
  43ec1d:	push   rbx
  43ec1e:	and    BYTE PTR [r9+0x2e],r12b
  43ec22:	(bad)  
  43ec23:	je     0x43ec99
  43ec25:	jae    0x43ec9b
  43ec27:	(bad)  
  43ec28:	je     0x43ec9e
  43ec2a:	(bad)  
  43ec2b:	jb     0x43ec94
  43ec2d:	gs je  0x43ec50
  43ec30:	rex.RB
  43ec31:	rex.WRX
  43ec32:	and    BYTE PTR [rcx+0x53],r8b
  43ec36:	and    BYTE PTR [rcx+0x74],ah
  43ec39:	je     0x43ecae
  43ec3b:	je     0x43ec9e
  43ec3d:	je     0x43ecb3
  43ec3f:	(bad)  
  43ec40:	jb     0x43eca9
  43ec42:	gs je  0x43ec45
  43ec45:	add    BYTE PTR [rax],al
  43ec47:	add    BYTE PTR [rax+riz*1],ch
  43ec4a:	jo     0x43ecb3
  43ec4c:	pop    rdi
  43ec4d:	movsxd esp,DWORD PTR [rcx+0x74]
  43ec50:	(bad)  
  43ec51:	ins    BYTE PTR es:[rdi],dx
  43ec52:	outs   dx,DWORD PTR ds:[rsi]
  43ec53:	movsxd ebp,DWORD PTR cs:[edi+0x6c]
  43ec58:	pop    rdi
  43ec59:	fs gs jae 0x43ecc0
  43ec5d:	jb     0x43ecc8
  43ec5f:	jo     0x43ecd5
  43ec61:	imul   ebp,DWORD PTR [rdi+0x6e],0x612e6128
  43ec68:	je     0x43ecde
  43ec6a:	jb     0x43ecd1
  43ec6c:	ins    BYTE PTR es:[rdi],dx
  43ec6d:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x74612e61
  43ec75:	je     0x43ece5
  43ec77:	jne    0x43ece6
  43ec79:	sub    DWORD PTR [rax],eax
  43ec7b:	add    BYTE PTR [rax],al
  43ec7d:	add    BYTE PTR [rax],al
  43ec7f:	add    BYTE PTR [rdx],cl
  43ec81:	rex.RX push rdx
  43ec83:	rex.WRXB
  43ec84:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43ec88:	pop    rdi
  43ec89:	movsxd esp,DWORD PTR [rcx+0x74]
  43ec8c:	(bad)  
  43ec8d:	ins    BYTE PTR es:[rdi],dx
  43ec8e:	outs   dx,DWORD PTR ds:[rsi]
  43ec8f:	addr32 cs jo 0x43ecfa
  43ec93:	pop    rdi
  43ec94:	(bad)  
  43ec95:	je     0x43ed0b
  43ec97:	jb     0x43ed02
  43ec99:	(bad)  
  43ec9a:	jne    0x43ed10
  43ec9c:	and    BYTE PTR gs:[rcx+0x0],ah
  43eca0:	or     dl,BYTE PTR [rdi+0x48]
  43eca3:	rex.RB push r10
  43eca5:	and    BYTE PTR [r9+0x2e],r12b
  43eca9:	(bad)  
  43ecaa:	je     0x43ed20
  43ecac:	jb     0x43ed13
  43ecae:	ins    BYTE PTR es:[rdi],dx
  43ecaf:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43ecb7:	(bad)  
  43ecb8:	and    BYTE PTR [rcx+0x4e],al
  43ecbb:	and    BYTE PTR [rcx+0x2e],r12b
  43ecbf:	(bad)  
  43ecc0:	je     0x43ed36
  43ecc2:	outs   dx,BYTE PTR ds:[rsi]
  43ecc3:	jne    0x43ed32
  43ecc5:	and    BYTE PTR [rsi],bh
  43ecc7:	and    BYTE PTR [rax],dh
  43ecc9:	and    BYTE PTR [rcx+0x4e],al
  43eccc:	and    BYTE PTR [rsi+0x4f],r9b
  43ecd0:	push   rsp
  43ecd1:	and    BYTE PTR [rcx+0x2e],ah
  43ecd4:	(bad)  
  43ecd5:	je     0x43ed4b
  43ecd7:	imul   esi,DWORD PTR [rbx+0x64],0x70706f72
  43ecde:	gs add BYTE PTR fs:[rdx],cl
  43ece2:	rex.WRXB push r10
  43ece4:	rex.R
  43ece5:	rex.RB push r10
  43ece7:	and    BYTE PTR [rdx+0x59],al
  43ecea:	and    BYTE PTR [rcx+0x2e],ah
  43eced:	(bad)  
  43ecee:	je     0x43ed64
  43ecf0:	outs   dx,BYTE PTR ds:[rsi]
  43ecf1:	jne    0x43ed60
  43ecf3:	cmp    eax,DWORD PTR [rax]
  43ecf5:	push   rbp
  43ecf6:	outs   dx,BYTE PTR ds:[rsi]
  43ecf7:	ins    BYTE PTR es:[rdi],dx
  43ecf8:	outs   dx,DWORD PTR ds:[rsi]
  43ecf9:	addr32 gs and BYTE PTR fs:[ecx+eiz*2+0x62],dh
  43ed01:	ins    BYTE PTR es:[rdi],dx
  43ed02:	and    BYTE PTR gs:[rdx],ah
  43ed05:	and    eax,0x73252e73
  43ed0a:	and    al,BYTE PTR [rax]
  43ed0c:	push   rsp
  43ed0d:	(bad)  
  43ed0e:	(bad)  
  43ed0f:	ins    BYTE PTR es:[rdi],dx
  43ed10:	and    BYTE PTR gs:[rdx],ah
  43ed13:	and    eax,0x73252e73
  43ed18:	and    al,BYTE PTR [rax]
  43ed1a:	push   rsi
  43ed1b:	imul   esp,DWORD PTR [rbp+0x77],0x73252220
  43ed22:	cs and eax,0x2273
  43ed28:	push   rbp
  43ed29:	outs   dx,BYTE PTR ds:[rsi]
  43ed2a:	ins    BYTE PTR es:[rdi],dx
  43ed2b:	outs   dx,DWORD PTR ds:[rsi]
  43ed2c:	addr32 gs and BYTE PTR fs:[ebp+0x61],ch
  43ed33:	je     0x43ed9a
  43ed35:	jb     0x43eda0
  43ed37:	(bad)  
  43ed38:	ins    BYTE PTR es:[rdi],dx
  43ed39:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  43ed40:	gs ja  0x43ed63
  43ed43:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73691bbc
  43ed49:	and    al,BYTE PTR [rax]
  43ed4b:	rex.WRB (bad) 
  43ed4d:	je     0x43edb4
  43ed4f:	jb     0x43edba
  43ed51:	(bad)  
  43ed52:	ins    BYTE PTR es:[rdi],dx
  43ed53:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  43ed5a:	gs ja  0x43ed7d
  43ed5d:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73691bd6
  43ed63:	and    al,BYTE PTR [rax]
  43ed65:	push   rbx
  43ed66:	gs jno 0x43edde
  43ed69:	outs   dx,BYTE PTR gs:[rsi]
  43ed6b:	movsxd esp,DWORD PTR [rbp+0x20]
  43ed6e:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73691be7
  43ed74:	and    al,BYTE PTR [rax]
  43ed76:	push   rbp
  43ed77:	outs   dx,BYTE PTR ds:[rsi]
  43ed78:	ins    BYTE PTR es:[rdi],dx
  43ed79:	outs   dx,DWORD PTR ds:[rsi]
  43ed7a:	addr32 gs and BYTE PTR fs:[ecx+0x6e],ch
  43ed81:	fs gs js 0x43eda5
  43ed85:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73691bfe
  43ed8b:	and    al,BYTE PTR [rax]
  43ed8d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43ed8f:	fs gs js 0x43edb3
  43ed93:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73691c0c
  43ed99:	and    al,BYTE PTR [rax]
  43ed9b:	push   rbx
  43ed9c:	jo     0x43ee03
  43ed9e:	movsxd ebp,DWORD PTR [rcx+0x61]
  43eda1:	ins    BYTE PTR es:[rdi],dx
  43eda2:	and    BYTE PTR [rdx+0x65],dh
  43eda5:	ins    BYTE PTR es:[rdi],dx
  43eda6:	(bad)  
  43eda7:	je     0x43ee12
  43eda9:	outs   dx,DWORD PTR ds:[rsi]
  43edaa:	outs   dx,BYTE PTR ds:[rsi]
  43edab:	and    BYTE PTR [rdx],ah
  43edad:	and    eax,0x73252e73
  43edb2:	and    al,BYTE PTR [rax]
  43edb4:	push   rsp
  43edb5:	rex.WRXB
  43edb6:	push   r11
  43edb8:	push   rsp
  43edb9:	and    BYTE PTR [rcx+riz*2+0x62],dh
  43edbd:	ins    BYTE PTR es:[rdi],dx
  43edbe:	and    BYTE PTR gs:[rdx],ah
  43edc1:	and    eax,0x73252e73
  43edc6:	and    al,BYTE PTR [rax]
  43edc8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43edca:	ins    DWORD PTR es:[rdi],dx
  43edcb:	jo     0x43ee3c
  43edcd:	jae    0x43ee38
  43edcf:	je     0x43ee36
  43edd1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  43edd5:	and    BYTE PTR gs:[rdx],ah
  43edd8:	and    eax,0x73252e73
  43eddd:	and    al,BYTE PTR [rax]
  43eddf:	rex.RX outs dx,DWORD PTR ds:[rsi]
  43ede1:	jb     0x43ee48
  43ede3:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  43edea:	ins    BYTE PTR es:[rdi],dx
  43edeb:	and    BYTE PTR gs:[rdx],ah
  43edee:	and    eax,0x73252e73
  43edf3:	and    al,BYTE PTR [rax]
  43edf5:	(bad)  
  43edf6:	and    eax,0x22203f63
  43edfb:	and    eax,0x73252e73
  43ee00:	and    al,BYTE PTR [rax]
  43ee02:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43ee04:	ins    BYTE PTR es:[rdi],dx
  43ee05:	jne    0x43ee74
  43ee07:	outs   dx,BYTE PTR ds:[rsi]
  43ee08:	add    BYTE PTR [rcx+rdi*2+0x70],dl
  43ee0c:	add    BYTE PTR gs:[rbp+0x6f],cl
  43ee10:	imul   esp,DWORD PTR fs:[rsi+0x69],0x737265
  43ee18:	push   rsi
  43ee19:	(bad)  
  43ee1a:	ins    BYTE PTR es:[rdi],dx
  43ee1b:	jne    0x43ee82
  43ee1d:	add    BYTE PTR [rbp+riz*2+0x66],al
  43ee21:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  43ee28:	add    BYTE PTR [rsi+0x44],al
  43ee2b:	push   rdi
  43ee2c:	and    BYTE PTR [rdi+0x70],cl
  43ee2f:	je     0x43ee9a
  43ee31:	outs   dx,DWORD PTR ds:[rsi]
  43ee32:	outs   dx,BYTE PTR ds:[rsi]
  43ee33:	jae    0x43ee35
  43ee35:	push   rbx
  43ee36:	je     0x43eea7
  43ee38:	jb     0x43ee9b
  43ee3a:	add    BYTE PTR gs:[ebx+0x74],dl
  43ee3f:	(bad)  
  43ee40:	je     0x43eeb5
  43ee42:	and    BYTE PTR [rcx+riz*2+0x72],dh
  43ee46:	addr32 gs je 0x43ee4a
  43ee4a:	rex.R
  43ee4b:	gs jae 0x43eeb1
  43ee4e:	jb     0x43eeb9
  43ee50:	jo     0x43eec6
  43ee52:	imul   ebp,DWORD PTR [rdi+0x6e],0x53000000
  43ee59:	rex.RB
  43ee5a:	rex.WR
  43ee5b:	rex.RB
  43ee5c:	rex.XB push r12
  43ee5e:	and    BYTE PTR [rax+0x67],dh
  43ee61:	pop    rdi
  43ee62:	movsxd esp,DWORD PTR [rcx+0x74]
  43ee65:	(bad)  
  43ee66:	ins    BYTE PTR es:[rdi],dx
  43ee67:	outs   dx,DWORD PTR ds:[rsi]
  43ee68:	addr32 cs jo 0x43eed3
  43ee6c:	pop    rdi
  43ee6d:	addr32 gs je 0x43eed0
  43ee71:	jbe    0x43eedc
  43ee73:	gs ja  0x43eeda
  43ee76:	data16 sub BYTE PTR gs:[rdi],ah
  43ee7a:	and    eax,0x3a3a2773
  43ee7f:	jo     0x43eee8
  43ee81:	pop    rdi
  43ee82:	movsxd esp,DWORD PTR [rcx+0x74]
  43ee85:	(bad)  
  43ee86:	ins    BYTE PTR es:[rdi],dx
  43ee87:	outs   dx,DWORD PTR ds:[rsi]
  43ee88:	outs   dx,DWORD PTR cs:[esi]
  43ee8b:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43ee93:	sub    DWORD PTR [rbx],edi
  43ee95:	add    BYTE PTR [rax],ah
  43ee97:	add    BYTE PTR [rbx+0x6f],ah
  43ee9a:	ins    BYTE PTR es:[rdi],dx
  43ee9b:	ins    BYTE PTR es:[rdi],dx
  43ee9c:	(bad)  
  43ee9d:	je     0x43ef04
  43ee9f:	and    BYTE PTR [rip+0x6f6e0073],ah        # 0x6fb1ef18
  43eea5:	je     0x43eec7
  43eea7:	outs   dx,BYTE PTR ds:[rsi]
  43eea8:	jne    0x43ef16
  43eeaa:	ins    BYTE PTR es:[rdi],dx
  43eeab:	add    BYTE PTR [rbp+riz*2+0x66],ah
  43eeaf:	(bad)  
  43eeb0:	jne    0x43ef1e
  43eeb2:	je     0x43eed4
  43eeb4:	and    eax,0x53000073
  43eeb9:	rex.RB
  43eeba:	rex.WR
  43eebb:	rex.RB
  43eebc:	rex.XB push r12
  43eebe:	and    BYTE PTR [rcx+0x2e],ch
  43eec1:	imul   ebp,DWORD PTR [rsi+0x64],0x6e757369
  43eec8:	imul   esi,DWORD PTR [rcx+0x75],0x69202c65
  43eecf:	imul   ebp,DWORD PTR cs:[rsi+0x64],0x72707369
  43eed7:	imul   ebp,DWORD PTR [rbp+0x61],0x202c7972
  43eede:	imul   ebp,DWORD PTR [rsi],0x69646e69
  43eee4:	jae    0x43ef49
  43eee6:	ins    BYTE PTR es:[rdi],dx
  43eee7:	jne    0x43ef5c
  43eee9:	je     0x43ef50
  43eeeb:	jb     0x43ef52
  43eeed:	fs sub al,0x20
  43eef0:	add    BYTE PTR [rcx+0x2e],ch
  43eef3:	imul   ebp,DWORD PTR [rsi+0x64],0x61767369
  43eefa:	ins    BYTE PTR es:[rdi],dx
  43eefb:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x75727400
  43ef03:	and    BYTE PTR gs:[rcx+0x53],al
  43ef07:	and    BYTE PTR [rcx+0x6e],ch
  43ef0a:	imul   esi,DWORD PTR fs:[rbx+0x76],0x64696c61
  43ef12:	sub    al,0xa
  43ef14:	add    BYTE PTR [rax],al
  43ef16:	add    BYTE PTR [rax],al
  43ef18:	and    BYTE PTR [rax],ah
  43ef1a:	sub    BYTE PTR [rsi+0x4f],cl
  43ef1d:	push   rsp
  43ef1e:	and    BYTE PTR [rcx+0x2e],ch
  43ef21:	imul   ebp,DWORD PTR [rsi+0x64],0x656d6d69
  43ef28:	imul   esp,DWORD PTR fs:[rcx+0x74],0x41202965
  43ef30:	rex.WRX
  43ef31:	and    BYTE PTR [rbp+0x58],r8b
  43ef35:	rex.WB push r11
  43ef37:	push   rsp
  43ef38:	push   rbx
  43ef39:	and    BYTE PTR [rax],ch
  43ef3b:	push   rbx
  43ef3c:	rex.RB
  43ef3d:	rex.WR
  43ef3e:	rex.RB
  43ef3f:	rex.XB push r12
  43ef41:	and    BYTE PTR [rcx],dh
  43ef43:	and    BYTE PTR [rsi+0x52],al
  43ef46:	rex.WRXB
  43ef47:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43ef4b:	pop    rdi
  43ef4c:	movsxd esp,DWORD PTR [rcx+0x74]
  43ef4f:	(bad)  
  43ef50:	ins    BYTE PTR es:[rdi],dx
  43ef51:	outs   dx,DWORD PTR ds:[rsi]
  43ef52:	addr32 cs jo 0x43efbd
  43ef56:	pop    rdi
  43ef57:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43ef5a:	jae    0x43efd0
  43ef5c:	jb     0x43efbf
  43ef5e:	imul   ebp,DWORD PTR [rsi+0x74],0x45485720
  43ef65:	push   rdx
  43ef66:	and    BYTE PTR [r11+0x6f],r12b
  43ef6a:	outs   dx,BYTE PTR ds:[rsi]
  43ef6b:	jb     0x43efd2
  43ef6d:	ins    BYTE PTR es:[rdi],dx
  43ef6e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x692e6920
  43ef76:	outs   dx,BYTE PTR ds:[rsi]
  43ef77:	fs jb  0x43efdf
  43ef7a:	ins    BYTE PTR es:[rdi],dx
  43ef7b:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43ef83:	outs   dx,DWORD PTR ds:[rsi]
  43ef84:	outs   dx,BYTE PTR ds:[rsi]
  43ef85:	imul   ebp,DWORD PTR [rsi+0x64],0x3d206469
  43ef8c:	and    BYTE PTR [rcx+0x2e],ch
  43ef8f:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  43ef96:	ins    BYTE PTR es:[rdi],dx
  43ef97:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43ef9f:	outs   dx,DWORD PTR ds:[rsi]
  43efa0:	outs   dx,BYTE PTR ds:[rsi]
  43efa1:	je     0x43f01c
  43efa3:	jo     0x43f00a
  43efa5:	and    BYTE PTR [rcx+0x4e],cl
  43efa8:	and    BYTE PTR [rax],ch
  43efaa:	(bad)  
  43efab:	jo     0x43efd4
  43efad:	sub    al,0x27
  43efaf:	jne    0x43efd8
  43efb1:	sub    al,0x27
  43efb3:	js     0x43efdc
  43efb5:	sub    DWORD PTR [rax],esp
  43efb7:	rex.B
  43efb8:	rex.WRX
  43efb9:	and    BYTE PTR [rbx+0x6f],r12b
  43efbd:	outs   dx,BYTE PTR ds:[rsi]
  43efbe:	fs gs data16 gs jb 0x43f036
  43efc4:	(bad)  
  43efc5:	(bad)  
  43efc6:	ins    BYTE PTR es:[rdi],dx
  43efc7:	sub    DWORD PTR gs:[rax],esp
  43efca:	push   r11
  43efcc:	and    BYTE PTR [rbx+0x6f],ah
  43efcf:	outs   dx,BYTE PTR ds:[rsi]
  43efd0:	fs gs data16 gs jb 0x43f048
  43efd6:	(bad)  
  43efd7:	(bad)  
  43efd8:	ins    BYTE PTR es:[rdi],dx
  43efd9:	gs sub al,0xa
  43efdc:	and    BYTE PTR [rax],ah
  43efde:	sub    BYTE PTR [rsi+0x4f],cl
  43efe1:	push   rsp
  43efe2:	and    BYTE PTR [rcx+0x2e],ch
  43efe5:	imul   ebp,DWORD PTR [rsi+0x64],0x656d6d69
  43efec:	imul   esp,DWORD PTR fs:[rcx+0x74],0x41202965
  43eff4:	rex.WRX
  43eff5:	and    BYTE PTR [rbp+0x58],r8b
  43eff9:	rex.WB push r11
  43effb:	push   rsp
  43effc:	push   rbx
  43effd:	and    BYTE PTR [rax],ch
  43efff:	push   rbx
  43f000:	rex.RB
  43f001:	rex.WR
  43f002:	rex.RB
  43f003:	rex.XB push r12
  43f005:	and    BYTE PTR [rcx],dh
  43f007:	and    BYTE PTR [rsi+0x52],al
  43f00a:	rex.WRXB
  43f00b:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f00f:	pop    rdi
  43f010:	movsxd esp,DWORD PTR [rcx+0x74]
  43f013:	(bad)  
  43f014:	ins    BYTE PTR es:[rdi],dx
  43f015:	outs   dx,DWORD PTR ds:[rsi]
  43f016:	addr32 cs jo 0x43f081
  43f01a:	pop    rdi
  43f01b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f01e:	jae    0x43f094
  43f020:	jb     0x43f083
  43f022:	imul   ebp,DWORD PTR [rsi+0x74],0x45485720
  43f029:	push   rdx
  43f02a:	and    BYTE PTR [r11+0x6f],r12b
  43f02e:	outs   dx,BYTE PTR ds:[rsi]
  43f02f:	jb     0x43f096
  43f031:	ins    BYTE PTR es:[rdi],dx
  43f032:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x692e6920
  43f03a:	outs   dx,BYTE PTR ds:[rsi]
  43f03b:	fs jb  0x43f0a3
  43f03e:	ins    BYTE PTR es:[rdi],dx
  43f03f:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43f047:	outs   dx,DWORD PTR ds:[rsi]
  43f048:	outs   dx,BYTE PTR ds:[rsi]
  43f049:	imul   ebp,DWORD PTR [rsi+0x64],0x3d206469
  43f050:	and    BYTE PTR [rcx+0x2e],ch
  43f053:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  43f05a:	ins    BYTE PTR es:[rdi],dx
  43f05b:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43f063:	outs   dx,DWORD PTR ds:[rsi]
  43f064:	outs   dx,BYTE PTR ds:[rsi]
  43f065:	je     0x43f0e0
  43f067:	jo     0x43f0ce
  43f069:	and    BYTE PTR [rcx+0x4e],cl
  43f06c:	and    BYTE PTR [rax],ch
  43f06e:	(bad)  
  43f06f:	jo     0x43f098
  43f071:	sub    al,0x27
  43f073:	jne    0x43f09c
  43f075:	sub    al,0x27
  43f077:	js     0x43f0a0
  43f079:	sub    DWORD PTR [rax],esp
  43f07b:	rex.B
  43f07c:	rex.WRX
  43f07d:	and    BYTE PTR [rbx+0x6f],r12b
  43f081:	outs   dx,BYTE PTR ds:[rsi]
  43f082:	fs gs data16 gs jb 0x43f0fa
  43f088:	gs sub DWORD PTR fs:[rax],esp
  43f08c:	push   r11
  43f08e:	and    BYTE PTR [rbx+0x6f],ah
  43f091:	outs   dx,BYTE PTR ds:[rsi]
  43f092:	fs gs data16 gs jb 0x43f10a
  43f098:	gs fs sub al,0xa
  43f09c:	add    BYTE PTR [rax],al
  43f09e:	add    BYTE PTR [rax],al
  43f0a0:	and    BYTE PTR [rax],ah
  43f0a2:	data16 (bad) 
  43f0a4:	ins    BYTE PTR es:[rdi],dx
  43f0a5:	jae    0x43f10c
  43f0a7:	and    BYTE PTR [rcx+0x53],al
  43f0aa:	and    BYTE PTR [rbx+0x6f],ah
  43f0ad:	outs   dx,BYTE PTR ds:[rsi]
  43f0ae:	fs gs data16 gs jb 0x43f126
  43f0b4:	(bad)  
  43f0b5:	(bad)  
  43f0b6:	ins    BYTE PTR es:[rdi],dx
  43f0b7:	gs sub al,0x20
  43f0ba:	data16 (bad) 
  43f0bc:	ins    BYTE PTR es:[rdi],dx
  43f0bd:	jae    0x43f124
  43f0bf:	and    BYTE PTR [rcx+0x53],al
  43f0c2:	and    BYTE PTR [rbx+0x6f],ah
  43f0c5:	outs   dx,BYTE PTR ds:[rsi]
  43f0c6:	fs gs data16 gs jb 0x43f13e
  43f0cc:	gs fs sub al,0xa
  43f0d0:	add    BYTE PTR [rcx+0x2e],ch
  43f0d3:	imul   ebp,DWORD PTR [rsi+0x64],0x65727369
  43f0da:	jo     0x43f148
  43f0dc:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0xa2c74
  43f0e4:	data16 (bad) 
  43f0e6:	ins    BYTE PTR es:[rdi],dx
  43f0e7:	jae    0x43f14e
  43f0e9:	and    BYTE PTR [rcx+0x53],al
  43f0ec:	and    BYTE PTR [rcx+0x6e],ch
  43f0ef:	imul   esi,DWORD PTR fs:[rbx+0x72],0x696c7065
  43f0f7:	fs outs dx,BYTE PTR gs:[rsi]
  43f0fa:	je     0x43f128
  43f0fc:	or     al,BYTE PTR [rax]
  43f0fe:	add    BYTE PTR [rax],al
  43f100:	and    BYTE PTR [rax],ah
  43f102:	(bad)  
  43f103:	cs (bad) 
  43f105:	ins    DWORD PTR es:[rdi],dx
  43f106:	outs   dx,BYTE PTR ds:[rsi]
  43f107:	(bad)  
  43f108:	ins    DWORD PTR es:[rdi],dx
  43f109:	gs sub al,0x20
  43f10c:	movsxd esi,DWORD PTR [rdx]
  43f10e:	cs jb  0x43f176
  43f111:	ins    BYTE PTR es:[rdi],dx
  43f112:	outs   dx,BYTE PTR ds:[rsi]
  43f113:	(bad)  
  43f114:	ins    DWORD PTR es:[rdi],dx
  43f115:	gs sub al,0x20
  43f118:	jo     0x43f181
  43f11a:	pop    rdi
  43f11b:	movsxd esp,DWORD PTR [rcx+0x74]
  43f11e:	(bad)  
  43f11f:	ins    BYTE PTR es:[rdi],dx
  43f120:	outs   dx,DWORD PTR ds:[rsi]
  43f121:	addr32 cs jo 0x43f18c
  43f125:	pop    rdi
  43f126:	addr32 gs je 0x43f189
  43f12a:	gs js  0x43f19d
  43f12d:	jb     0x43f157
  43f12f:	imul   ebp,DWORD PTR [rsi],0x70646e69
  43f135:	jb     0x43f19c
  43f137:	fs sub al,0x20
  43f13a:	imul   ebp,DWORD PTR [rsi],0x72646e69
  43f140:	gs ins BYTE PTR es:[rdi],dx
  43f142:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43f14a:	sub    DWORD PTR [rdx],ecx
  43f14c:	rex.RX push rdx
  43f14e:	rex.WRXB
  43f14f:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f153:	pop    rdi
  43f154:	movsxd esp,DWORD PTR [rcx+0x74]
  43f157:	(bad)  
  43f158:	ins    BYTE PTR es:[rdi],dx
  43f159:	outs   dx,DWORD PTR ds:[rsi]
  43f15a:	addr32 cs jo 0x43f1c5
  43f15e:	pop    rdi
  43f15f:	imul   ebp,DWORD PTR [rsi+0x64],0x69207865
  43f166:	sub    al,0x20
  43f168:	jo     0x43f1d1
  43f16a:	pop    rdi
  43f16b:	movsxd esp,DWORD PTR [rcx+0x74]
  43f16e:	(bad)  
  43f16f:	ins    BYTE PTR es:[rdi],dx
  43f170:	outs   dx,DWORD PTR ds:[rsi]
  43f171:	addr32 cs jo 0x43f1dc
  43f175:	pop    rdi
  43f176:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f17a:	jae    0x43f19c
  43f17c:	movsxd ebp,DWORD PTR [rax+riz*1]
  43f17f:	jo     0x43f1e8
  43f181:	pop    rdi
  43f182:	movsxd esp,DWORD PTR [rcx+0x74]
  43f185:	(bad)  
  43f186:	ins    BYTE PTR es:[rdi],dx
  43f187:	outs   dx,DWORD PTR ds:[rsi]
  43f188:	addr32 cs jo 0x43f1f3
  43f18c:	pop    rdi
  43f18d:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f191:	jae    0x43f1b3
  43f193:	movsxd esi,DWORD PTR [rdx]
  43f195:	sub    al,0x20
  43f197:	jo     0x43f200
  43f199:	pop    rdi
  43f19a:	movsxd esp,DWORD PTR [rcx+0x74]
  43f19d:	(bad)  
  43f19e:	ins    BYTE PTR es:[rdi],dx
  43f19f:	outs   dx,DWORD PTR ds:[rsi]
  43f1a0:	addr32 cs jo 0x43f20b
  43f1a4:	pop    rdi
  43f1a5:	(bad)  
  43f1a6:	ins    DWORD PTR es:[rdi],dx
  43f1a7:	and    BYTE PTR [rcx+0xa],ah
  43f1aa:	push   rdi
  43f1ab:	rex.W
  43f1ac:	rex.RB push r10
  43f1ae:	and    BYTE PTR [r9+0x2e],r13b
  43f1b2:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  43f1b9:	ins    BYTE PTR es:[rdi],dx
  43f1ba:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  43f1c2:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43f1ca:	outs   dx,DWORD PTR cs:[rsi]
  43f1cc:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43f1d4:	(bad)  
  43f1d5:	and    BYTE PTR [rcx+0x4e],al
  43f1d8:	and    BYTE PTR [rbx+0x2e],r12b
  43f1dc:	jb     0x43f243
  43f1de:	ins    BYTE PTR es:[rdi],dx
  43f1df:	(bad)  
  43f1e0:	ins    DWORD PTR es:[rdi],dx
  43f1e1:	and    BYTE PTR [rip+0x6f2e6120],bh        # 0x6f725307
  43f1e7:	imul   esp,DWORD PTR [rdx+rcx*1+0x41],0x6920444e
  43f1ef:	imul   ebp,DWORD PTR cs:[rsi+0x64],0x696c6572
  43f1f7:	and    BYTE PTR fs:[rip+0x2e326320],bh        # 0x2e76551e
  43f1fe:	outs   dx,DWORD PTR ds:[rsi]
  43f1ff:	imul   esp,DWORD PTR [rbx+rdi*1+0x0],0x6d697270
  43f207:	(bad)  
  43f208:	jb     0x43f283
  43f20a:	and    BYTE PTR [rbx+0x65],ch
  43f20d:	jns    0x43f23b
  43f20f:	and    BYTE PTR [rax],al
  43f211:	jne    0x43f281
  43f213:	imul   esi,DWORD PTR [rcx+0x75],0x202c65
  43f21a:	and    eax,0x202c73
  43f21f:	outs   dx,WORD PTR ds:[rsi]
  43f221:	jb     0x43f243
  43f223:	je     0x43f286
  43f225:	(bad)  
  43f226:	ins    BYTE PTR es:[rdi],dx
  43f227:	and    BYTE PTR gs:[rdx],ah
  43f22a:	and    eax,0x73252e73
  43f22f:	and    al,BYTE PTR [rax]
  43f231:	sub    al,0x20
  43f233:	jo     0x43f2a7
  43f235:	gs imul esp,DWORD PTR fs:[rbx+0x61],0x28206574
  43f23e:	and    eax,0x2c002973
  43f243:	and    BYTE PTR [rbx+0x6c],ah
  43f246:	jne    0x43f2bb
  43f248:	je     0x43f2af
  43f24a:	jb     0x43f2b1
  43f24c:	add    BYTE PTR fs:[rax+riz*1],ch
  43f250:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  43f257:	add    BYTE PTR [rax+riz*1],ch
  43f25a:	fs gs data16 gs jb 0x43f2d2
  43f260:	(bad)  
  43f261:	(bad)  
  43f262:	ins    BYTE PTR es:[rdi],dx
  43f263:	add    BYTE PTR gs:[rax+riz*1],ch
  43f267:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  43f26e:	ins    BYTE PTR es:[rdi],dx
  43f26f:	jns    0x43f291
  43f271:	fs gs data16 gs jb 0x43f2e9
  43f277:	gs add BYTE PTR fs:[rax+riz*1],ch
  43f27c:	jb     0x43f2e3
  43f27e:	jo     0x43f2ec
  43f280:	imul   esp,DWORD PTR [rbx+0x61],0x65646920
  43f287:	outs   dx,BYTE PTR ds:[rsi]
  43f288:	je     0x43f2f3
  43f28a:	je     0x43f305
  43f28c:	add    BYTE PTR [rax],al
  43f28e:	add    BYTE PTR [rax],al
  43f290:	push   rbx
  43f291:	rex.RB
  43f292:	rex.WR
  43f293:	rex.RB
  43f294:	rex.XB push r12
  43f296:	and    BYTE PTR [rax+0x67],dh
  43f299:	pop    rdi
  43f29a:	movsxd esp,DWORD PTR [rcx+0x74]
  43f29d:	(bad)  
  43f29e:	ins    BYTE PTR es:[rdi],dx
  43f29f:	outs   dx,DWORD PTR ds:[rsi]
  43f2a0:	addr32 cs jno 0x43f319
  43f2a4:	outs   dx,DWORD PTR ds:[rsi]
  43f2a5:	je     0x43f30c
  43f2a7:	pop    rdi
  43f2a8:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x736e2874
  43f2b0:	jo     0x43f320
  43f2b2:	(bad)  
  43f2b3:	ins    DWORD PTR es:[rdi],dx
  43f2b4:	sub    DWORD PTR gs:[rax],esp
  43f2b7:	jl     0x43f335
  43f2b9:	and    BYTE PTR [rdi],ah
  43f2bb:	cs (bad) 
  43f2bd:	and    BYTE PTR [rsp+rdi*2+0xa],bh
  43f2c1:	and    BYTE PTR [rax],ah
  43f2c3:	and    BYTE PTR [rax+0x67],dh
  43f2c6:	pop    rdi
  43f2c7:	movsxd esp,DWORD PTR [rcx+0x74]
  43f2ca:	(bad)  
  43f2cb:	ins    BYTE PTR es:[rdi],dx
  43f2cc:	outs   dx,DWORD PTR ds:[rsi]
  43f2cd:	addr32 cs jno 0x43f346
  43f2d1:	outs   dx,DWORD PTR ds:[rsi]
  43f2d2:	je     0x43f339
  43f2d4:	pop    rdi
  43f2d5:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x65722874
  43f2dd:	ins    BYTE PTR es:[rdi],dx
  43f2de:	outs   dx,BYTE PTR ds:[rsi]
  43f2df:	(bad)  
  43f2e0:	ins    DWORD PTR es:[rdi],dx
  43f2e1:	sub    DWORD PTR gs:[rax],esp
  43f2e4:	jl     0x43f362
  43f2e6:	and    BYTE PTR [rdi],ah
  43f2e8:	cs (bad) 
  43f2ea:	and    BYTE PTR [rsp+rdi*2+0xa],bh
  43f2ee:	and    BYTE PTR [rax],ah
  43f2f0:	and    BYTE PTR [rax+0x67],dh
  43f2f3:	pop    rdi
  43f2f4:	movsxd esp,DWORD PTR [rcx+0x74]
  43f2f7:	(bad)  
  43f2f8:	ins    BYTE PTR es:[rdi],dx
  43f2f9:	outs   dx,DWORD PTR ds:[rsi]
  43f2fa:	addr32 cs jno 0x43f373
  43f2fe:	outs   dx,DWORD PTR ds:[rsi]
  43f2ff:	je     0x43f366
  43f301:	pop    rdi
  43f302:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x74612874
  43f30a:	je     0x43f37a
  43f30c:	(bad)  
  43f30d:	ins    DWORD PTR es:[rdi],dx
  43f30e:	sub    DWORD PTR gs:[rdx],ecx
  43f311:	rex.RX push rdx
  43f313:	rex.WRXB
  43f314:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f318:	pop    rdi
  43f319:	movsxd esp,DWORD PTR [rcx+0x74]
  43f31c:	(bad)  
  43f31d:	ins    BYTE PTR es:[rdi],dx
  43f31e:	outs   dx,DWORD PTR ds:[rsi]
  43f31f:	addr32 cs jo 0x43f38a
  43f323:	pop    rdi
  43f324:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f328:	jae    0x43f34a
  43f32a:	movsxd ecx,DWORD PTR [rdx]
  43f32c:	rex.WB
  43f32d:	rex.WRX
  43f32e:	rex.WRX
  43f32f:	rex.RB push r10
  43f331:	and    BYTE PTR [rdx+0x4f],cl
  43f334:	rex.WB
  43f335:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43f339:	pop    rdi
  43f33a:	movsxd esp,DWORD PTR [rcx+0x74]
  43f33d:	(bad)  
  43f33e:	ins    BYTE PTR es:[rdi],dx
  43f33f:	outs   dx,DWORD PTR ds:[rsi]
  43f340:	addr32 cs jo 0x43f3ab
  43f344:	pop    rdi
  43f345:	fs gs jo 0x43f3ae
  43f349:	outs   dx,BYTE PTR ds:[rsi]
  43f34a:	and    BYTE PTR fs:[rax+riz*1+0x4f],ah
  43f34f:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  43f353:	outs   dx,DWORD PTR ds:[rsi]
  43f354:	imul   esp,DWORD PTR [rbp+rdi*1+0x64],0x6665722e
  43f35c:	outs   dx,DWORD PTR ds:[rsi]
  43f35d:	(bad)  
  43f35e:	push   0x69
  43f360:	or     cl,BYTE PTR fs:[rcx+0x4e]
  43f364:	rex.WRX
  43f365:	rex.RB push r10
  43f367:	and    BYTE PTR [rdx+0x4f],cl
  43f36a:	rex.WB
  43f36b:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43f36f:	pop    rdi
  43f370:	movsxd esp,DWORD PTR [rcx+0x74]
  43f373:	(bad)  
  43f374:	ins    BYTE PTR es:[rdi],dx
  43f375:	outs   dx,DWORD PTR ds:[rsi]
  43f376:	addr32 cs jo 0x43f3e1
  43f37a:	pop    rdi
  43f37b:	outs   dx,BYTE PTR ds:[rsi]
  43f37c:	(bad)  
  43f37d:	ins    DWORD PTR es:[rdi],dx
  43f37e:	gs jae 0x43f3f1
  43f381:	(bad)  
  43f382:	movsxd esp,DWORD PTR [rbp+0x20]
  43f385:	outs   dx,BYTE PTR ds:[rsi]
  43f386:	and    BYTE PTR [rdi+0x4e],cl
  43f389:	and    BYTE PTR [rsi+0x2e],ch
  43f38c:	outs   dx,DWORD PTR ds:[rsi]
  43f38d:	imul   esp,DWORD PTR [rbp+rdi*1+0x63],0x6c65722e
  43f395:	outs   dx,BYTE PTR ds:[rsi]
  43f396:	(bad)  
  43f397:	ins    DWORD PTR es:[rdi],dx
  43f398:	gs jae 0x43f40b
  43f39b:	(bad)  
  43f39c:	movsxd esp,DWORD PTR [rbp+0xa]
  43f39f:	rex.WB
  43f3a0:	rex.WRX
  43f3a1:	rex.WRX
  43f3a2:	rex.RB push r10
  43f3a4:	and    BYTE PTR [rdx+0x4f],cl
  43f3a7:	rex.WB
  43f3a8:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43f3ac:	pop    rdi
  43f3ad:	movsxd esp,DWORD PTR [rcx+0x74]
  43f3b0:	(bad)  
  43f3b1:	ins    BYTE PTR es:[rdi],dx
  43f3b2:	outs   dx,DWORD PTR ds:[rsi]
  43f3b3:	addr32 cs jo 0x43f41e
  43f3b7:	pop    rdi
  43f3b8:	(bad)  
  43f3b9:	je     0x43f42f
  43f3bb:	jb     0x43f426
  43f3bd:	(bad)  
  43f3be:	jne    0x43f434
  43f3c0:	and    BYTE PTR gs:[rcx+0x20],ah
  43f3c4:	rex.WRXB
  43f3c5:	rex.WRX and BYTE PTR [rax],r13b
  43f3c8:	or     ah,BYTE PTR [rax]
  43f3ca:	(bad)  
  43f3cb:	cs (bad) 
  43f3cd:	je     0x43f443
  43f3cf:	jb     0x43f436
  43f3d1:	ins    BYTE PTR es:[rdi],dx
  43f3d2:	imul   esp,DWORD PTR [rbp+rdi*1+0x63],0x64696f2e
  43f3da:	and    BYTE PTR [rcx+0x4e],al
  43f3dd:	or     r12b,BYTE PTR [rax]
  43f3e0:	(bad)  
  43f3e1:	cs (bad) 
  43f3e3:	je     0x43f459
  43f3e5:	outs   dx,BYTE PTR ds:[rsi]
  43f3e6:	jne    0x43f455
  43f3e8:	cmp    eax,0x65722e64
  43f3ed:	outs   dx,WORD PTR ds:[rsi]
  43f3ef:	(bad)  
  43f3f0:	push   0x73
  43f3f2:	jne    0x43f456
  43f3f4:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x52454857
  43f3fc:	and    BYTE PTR [r14+rbp*1+0x63],r12b
  43f401:	ins    BYTE PTR es:[rdi],dx
  43f402:	(bad)  
  43f403:	jae    0x43f478
  43f405:	imul   esp,DWORD PTR [rbp+rdi*1+0x27],0x635f6770
  43f40d:	(bad)  
  43f40e:	je     0x43f471
  43f410:	ins    BYTE PTR es:[rdi],dx
  43f411:	outs   dx,DWORD PTR ds:[rsi]
  43f412:	addr32 cs jo 0x43f47d
  43f416:	pop    rdi
  43f417:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f41b:	jae    0x43f444
  43f41d:	cmp    bh,BYTE PTR [rdx]
  43f41f:	jo     0x43f488
  43f421:	pop    rdi
  43f422:	movsxd esp,DWORD PTR [rcx+0x74]
  43f425:	(bad)  
  43f426:	ins    BYTE PTR es:[rdi],dx
  43f427:	outs   dx,DWORD PTR ds:[rsi]
  43f428:	addr32 cs jb 0x43f491
  43f42c:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  43f431:	jae    0x43f43d
  43f433:	and    BYTE PTR [rcx+0x4e],al
  43f436:	and    BYTE PTR [rsi+rbp*1+0x72],r12b
  43f43b:	movsxd bp,DWORD PTR gs:[rcx+riz*2+0x73]
  43f441:	jae    0x43f4ac
  43f443:	fs cmp eax,0x5f677027
  43f449:	movsxd esp,DWORD PTR [rcx+0x74]
  43f44c:	(bad)  
  43f44d:	ins    BYTE PTR es:[rdi],dx
  43f44e:	outs   dx,DWORD PTR ds:[rsi]
  43f44f:	addr32 cs jo 0x43f4ba
  43f453:	pop    rdi
  43f454:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f458:	jae    0x43f481
  43f45a:	cmp    bh,BYTE PTR [rdx]
  43f45c:	jo     0x43f4c5
  43f45e:	pop    rdi
  43f45f:	movsxd esp,DWORD PTR [rcx+0x74]
  43f462:	(bad)  
  43f463:	ins    BYTE PTR es:[rdi],dx
  43f464:	outs   dx,DWORD PTR ds:[rsi]
  43f465:	addr32 cs jb 0x43f4ce
  43f469:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  43f46e:	jae    0x43f47a
  43f470:	and    BYTE PTR [rcx+0x4e],al
  43f473:	and    BYTE PTR [rsi+rbp*1+0x6f],r12b
  43f478:	(bad)  
  43f479:	push   0x69
  43f47b:	fs cmp eax,0x200a7325
  43f481:	rex.B
  43f482:	rex.WRX
  43f483:	and    BYTE PTR [rsi+rbp*1+0x64],r12b
  43f488:	gs jo  0x43f4ff
  43f48b:	jns    0x43f4fd
  43f48d:	gs cmp eax,0x276127
  43f493:	rex.WRXB ja 0x43f504
  43f496:	gs and BYTE PTR fs:[rdx+0x79],ah
  43f49b:	cmp    ah,BYTE PTR [rax]
  43f49d:	and    eax,0x45530073
  43f4a2:	rex.WR
  43f4a3:	rex.RB
  43f4a4:	rex.XB push r12
  43f4a6:	and    BYTE PTR [rbx+0x32],ah
  43f4a9:	cs jb  0x43f511
  43f4ac:	ins    BYTE PTR es:[rdi],dx
  43f4ad:	outs   dx,BYTE PTR ds:[rsi]
  43f4ae:	(bad)  
  43f4af:	ins    DWORD PTR es:[rdi],dx
  43f4b0:	gs sub al,0x20
  43f4b3:	imul   ebp,DWORD PTR [rsi],0x69646e69
  43f4b9:	jae    0x43f52b
  43f4bb:	jb     0x43f526
  43f4bd:	ins    DWORD PTR es:[rdi],dx
  43f4be:	(bad)  
  43f4bf:	jb     0x43f53a
  43f4c1:	sub    al,0x20
  43f4c3:	imul   ebp,DWORD PTR [rsi],0x69646e69
  43f4c9:	jae    0x43f540
  43f4cb:	outs   dx,BYTE PTR ds:[rsi]
  43f4cc:	imul   esi,DWORD PTR [rcx+0x75],0x69202c65
  43f4d3:	imul   ebp,DWORD PTR cs:[rsi+0x64],0x6c637369
  43f4db:	jne    0x43f550
  43f4dd:	je     0x43f544
  43f4df:	jb     0x43f546
  43f4e1:	fs sub al,0x20
  43f4e4:	add    BYTE PTR [rcx+0x2e],ch
  43f4e7:	imul   ebp,DWORD PTR [rsi+0x64],0x61767369
  43f4ee:	ins    BYTE PTR es:[rdi],dx
  43f4ef:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x75727400
  43f4f7:	and    BYTE PTR gs:[rcx+0x73],ah
  43f4fb:	and    BYTE PTR [rcx+0x6e],ch
  43f4fe:	imul   esi,DWORD PTR fs:[rbx+0x76],0x64696c61
  43f506:	sub    al,0x20
	...
  43f510:	jo     0x43f579
  43f512:	pop    rdi
  43f513:	movsxd esp,DWORD PTR [rcx+0x74]
  43f516:	(bad)  
  43f517:	ins    BYTE PTR es:[rdi],dx
  43f518:	outs   dx,DWORD PTR ds:[rsi]
  43f519:	addr32 cs jo 0x43f584
  43f51d:	pop    rdi
  43f51e:	addr32 gs je 0x43f581
  43f522:	imul   ebp,DWORD PTR [rsi+0x64],0x65647865
  43f529:	data16 sub BYTE PTR [rcx+0x2e],ch
  43f52d:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  43f534:	ins    BYTE PTR es:[rdi],dx
  43f535:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x74202c30
  43f53d:	jb     0x43f5b4
  43f53f:	sub    DWORD PTR gs:[rdx+rcx*1],ebp
  43f543:	and    BYTE PTR [rax],ah
  43f545:	add    BYTE PTR [rax],al
  43f547:	add    BYTE PTR [rax+0x67],dh
  43f54a:	pop    rdi
  43f54b:	movsxd esp,DWORD PTR [rcx+0x74]
  43f54e:	(bad)  
  43f54f:	ins    BYTE PTR es:[rdi],dx
  43f550:	outs   dx,DWORD PTR ds:[rsi]
  43f551:	addr32 cs jo 0x43f5bc
  43f555:	pop    rdi
  43f556:	addr32 gs je 0x43f5b9
  43f55a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f55d:	jae    0x43f5d3
  43f55f:	jb     0x43f5c2
  43f561:	imul   ebp,DWORD PTR [rsi+0x74],0x28666564
  43f568:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f56b:	outs   dx,DWORD PTR cs:[rsi]
  43f56d:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43f575:	sub    DWORD PTR [rax+riz*1],ebp
  43f578:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f57b:	je     0x43f5f6
  43f57d:	jo     0x43f5e4
  43f57f:	sub    al,0x20
  43f581:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f584:	fs gs data16 gs jb 0x43f5fc
  43f58a:	(bad)  
  43f58b:	(bad)  
  43f58c:	ins    BYTE PTR es:[rdi],dx
  43f58d:	gs sub al,0x20
  43f590:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f593:	fs gs data16 gs jb 0x43f60b
  43f599:	gs add BYTE PTR fs:[rax],al
  43f59d:	add    BYTE PTR [rax],al
  43f59f:	add    BYTE PTR [rsi+0x75],ch
  43f5a2:	ins    BYTE PTR es:[rdi],dx
  43f5a3:	ins    BYTE PTR es:[rdi],dx
  43f5a4:	and    BYTE PTR [rcx+0x53],al
  43f5a7:	and    BYTE PTR [rbx+0x6f],ah
  43f5aa:	outs   dx,BYTE PTR ds:[rsi]
  43f5ab:	jae    0x43f621
  43f5ad:	jb     0x43f610
  43f5af:	imul   ebp,DWORD PTR [rsi+0x74],0x2c666564
  43f5b6:	and    BYTE PTR [rsi+0x75],ch
  43f5b9:	ins    BYTE PTR es:[rdi],dx
  43f5ba:	ins    BYTE PTR es:[rdi],dx
  43f5bb:	and    BYTE PTR [rcx+0x53],al
  43f5be:	and    BYTE PTR [rbx+0x6f],ah
  43f5c1:	outs   dx,BYTE PTR ds:[rsi]
  43f5c2:	je     0x43f63d
  43f5c4:	jo     0x43f62b
  43f5c6:	sub    al,0x20
  43f5c8:	data16 (bad) 
  43f5ca:	ins    BYTE PTR es:[rdi],dx
  43f5cb:	jae    0x43f632
  43f5cd:	and    BYTE PTR [rcx+0x53],al
  43f5d0:	and    BYTE PTR [rbx+0x6f],ah
  43f5d3:	outs   dx,BYTE PTR ds:[rsi]
  43f5d4:	fs gs data16 gs jb 0x43f64c
  43f5da:	(bad)  
  43f5db:	(bad)  
  43f5dc:	ins    BYTE PTR es:[rdi],dx
  43f5dd:	gs sub al,0x20
  43f5e0:	data16 (bad) 
  43f5e2:	ins    BYTE PTR es:[rdi],dx
  43f5e3:	jae    0x43f64a
  43f5e5:	and    BYTE PTR [rcx+0x53],al
  43f5e8:	and    BYTE PTR [rbx+0x6f],ah
  43f5eb:	outs   dx,BYTE PTR ds:[rsi]
  43f5ec:	fs gs data16 gs jb 0x43f664
  43f5f2:	gs add BYTE PTR fs:[rax+riz*1],ch
  43f5f7:	imul   ebp,DWORD PTR [rsi],0x69646e69
  43f5fd:	jae    0x43f671
  43f5ff:	gs jo  0x43f66e
  43f602:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x202c0074
  43f60a:	data16 (bad) 
  43f60c:	ins    BYTE PTR es:[rdi],dx
  43f60d:	jae    0x43f674
  43f60f:	and    BYTE PTR [rcx+0x53],al
  43f612:	and    BYTE PTR [rcx+0x6e],ch
  43f615:	imul   esi,DWORD PTR fs:[rbx+0x72],0x696c7065
  43f61d:	fs outs dx,BYTE PTR gs:[rsi]
  43f620:	je     0x43f622
  43f622:	sub    al,0x20
  43f624:	movsxd esi,DWORD PTR [rdx]
  43f626:	cs jb  0x43f68e
  43f629:	ins    BYTE PTR es:[rdi],dx
  43f62a:	je     0x43f68d
  43f62c:	(bad)  
  43f62d:	ins    BYTE PTR es:[rdi],dx
  43f62e:	gs jae 0x43f6a1
  43f631:	(bad)  
  43f632:	movsxd esp,DWORD PTR [rbp+0x0]
  43f635:	add    BYTE PTR [rax],al
  43f637:	add    BYTE PTR [rdx],cl
  43f639:	rex.RX push rdx
  43f63b:	rex.WRXB
  43f63c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f640:	pop    rdi
  43f641:	movsxd esp,DWORD PTR [rcx+0x74]
  43f644:	(bad)  
  43f645:	ins    BYTE PTR es:[rdi],dx
  43f646:	outs   dx,DWORD PTR ds:[rsi]
  43f647:	addr32 cs jo 0x43f6b2
  43f64b:	pop    rdi
  43f64c:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f650:	jae    0x43f672
  43f652:	movsxd ebp,DWORD PTR [rax+riz*1]
  43f655:	jo     0x43f6be
  43f657:	pop    rdi
  43f658:	movsxd esp,DWORD PTR [rcx+0x74]
  43f65b:	(bad)  
  43f65c:	ins    BYTE PTR es:[rdi],dx
  43f65d:	outs   dx,DWORD PTR ds:[rsi]
  43f65e:	addr32 cs jo 0x43f6c9
  43f662:	pop    rdi
  43f663:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43f667:	jae    0x43f689
  43f669:	movsxd esi,DWORD PTR [rdx]
  43f66b:	sub    al,0x20
  43f66d:	jo     0x43f6d6
  43f66f:	pop    rdi
  43f670:	movsxd esp,DWORD PTR [rcx+0x74]
  43f673:	(bad)  
  43f674:	ins    BYTE PTR es:[rdi],dx
  43f675:	outs   dx,DWORD PTR ds:[rsi]
  43f676:	addr32 cs jo 0x43f6e1
  43f67a:	pop    rdi
  43f67b:	imul   ebp,DWORD PTR [rsi+0x64],0x69207865
  43f682:	or     al,BYTE PTR [rax]
  43f684:	add    BYTE PTR [rax],al
  43f686:	add    BYTE PTR [rax],al
  43f688:	and    BYTE PTR [rax],ah
  43f68a:	rex.WR
  43f68b:	rex.RB
  43f68c:	rex.RX push rsp
  43f68e:	and    BYTE PTR [rdx+0x4f],cl
  43f691:	rex.WB
  43f692:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43f696:	pop    rdi
  43f697:	movsxd esp,DWORD PTR [rcx+0x74]
  43f69a:	(bad)  
  43f69b:	ins    BYTE PTR es:[rdi],dx
  43f69c:	outs   dx,DWORD PTR ds:[rsi]
  43f69d:	addr32 cs jo 0x43f708
  43f6a1:	pop    rdi
  43f6a2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f6a5:	jae    0x43f71b
  43f6a7:	jb     0x43f70a
  43f6a9:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6320
  43f6b0:	and    BYTE PTR [rdi+0x4e],cl
  43f6b3:	and    BYTE PTR [rax],ch
  43f6b5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f6b8:	jb     0x43f71f
  43f6ba:	ins    BYTE PTR es:[rdi],dx
  43f6bb:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x692e6920
  43f6c3:	outs   dx,BYTE PTR ds:[rsi]
  43f6c4:	fs jb  0x43f72c
  43f6c7:	ins    BYTE PTR es:[rdi],dx
  43f6c8:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43f6d0:	outs   dx,DWORD PTR ds:[rsi]
  43f6d1:	outs   dx,BYTE PTR ds:[rsi]
  43f6d2:	imul   ebp,DWORD PTR [rsi+0x64],0x3d206469
  43f6d9:	and    BYTE PTR [rcx+0x2e],ch
  43f6dc:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  43f6e3:	ins    BYTE PTR es:[rdi],dx
  43f6e4:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  43f6ec:	outs   dx,DWORD PTR ds:[rsi]
  43f6ed:	outs   dx,BYTE PTR ds:[rsi]
  43f6ee:	je     0x43f769
  43f6f0:	jo     0x43f757
  43f6f2:	and    BYTE PTR [rcx+0x4e],cl
  43f6f5:	and    BYTE PTR [rax],ch
  43f6f7:	(bad)  
  43f6f8:	jo     0x43f721
  43f6fa:	sub    al,0x27
  43f6fc:	jne    0x43f725
  43f6fe:	sub    al,0x27
  43f700:	js     0x43f729
  43f702:	sub    DWORD PTR [rcx],ebp
  43f704:	or     al,BYTE PTR [rax]
  43f706:	add    BYTE PTR [rax],al
  43f708:	push   rdi
  43f709:	rex.W
  43f70a:	rex.RB push r10
  43f70c:	and    BYTE PTR [r11+0x2e],r12b
  43f710:	outs   dx,DWORD PTR ds:[rsi]
  43f711:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43f719:	(bad)  
  43f71a:	and    BYTE PTR [rcx+0x4e],al
  43f71d:	and    BYTE PTR [rbx+0x2e],r12b
  43f721:	outs   dx,DWORD PTR ds:[rsi]
  43f722:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x692e6920
  43f72a:	outs   dx,BYTE PTR ds:[rsi]
  43f72b:	fs jb  0x43f793
  43f72e:	ins    BYTE PTR es:[rdi],dx
  43f72f:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6920444e
  43f737:	imul   ebp,DWORD PTR cs:[rsi+0x64],0x65727865
  43f73f:	ins    BYTE PTR es:[rdi],dx
  43f740:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e326320
  43f748:	outs   dx,DWORD PTR ds:[rsi]
  43f749:	imul   esp,DWORD PTR [rdx+rcx*1+0x4f],0x52454452
  43f751:	and    BYTE PTR [rdx+0x59],al
  43f754:	and    BYTE PTR [rcx+0x2e],ch
  43f757:	imul   ebp,DWORD PTR [rsi+0x64],0x72707369
  43f75e:	imul   ebp,DWORD PTR [rbp+0x61],0x44207972
  43f765:	rex.RB push r11
  43f767:	rex.XB sub al,0x20
  43f76a:	imul   ebp,DWORD PTR [rsi],0x69646e69
  43f770:	jae    0x43f7e7
  43f772:	outs   dx,BYTE PTR ds:[rsi]
  43f773:	imul   esi,DWORD PTR [rcx+0x75],0x45442065
  43f77a:	push   rbx
  43f77b:	rex.XB sub al,0x20
  43f77e:	movsxd esi,DWORD PTR [rdx]
  43f780:	cs jb  0x43f7e8
  43f783:	ins    BYTE PTR es:[rdi],dx
  43f784:	outs   dx,BYTE PTR ds:[rsi]
  43f785:	(bad)  
  43f786:	ins    DWORD PTR es:[rdi],dx
  43f787:	cmp    eax,DWORD PTR gs:[rax]
  43f78a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43f78c:	fs gs js 0x43f7f5
  43f790:	jae    0x43f7cc
  43f792:	add    BYTE PTR [rax],ah
  43f794:	and    BYTE PTR [rax],ah
  43f796:	and    BYTE PTR [rdx],ah
  43f798:	and    eax,0x78002273
  43f79d:	add    BYTE PTR [rax],ah
  43f79f:	and    eax,0x50200073
  43f7a4:	push   rdx
  43f7a5:	rex.WB
  43f7a6:	rex.WRB
  43f7a7:	push   r10
  43f7a9:	pop    rcx
  43f7aa:	and    BYTE PTR [rbx+0x45],cl
  43f7ad:	pop    rcx
  43f7ae:	sub    al,0x0
  43f7b0:	jne    0x43f7b2
  43f7b2:	and    BYTE PTR [rbp+0x4e],dl
  43f7b5:	rex.WB push r9
  43f7b7:	push   rbp
  43f7b8:	and    BYTE PTR [r11+0x4f],r8b
  43f7bc:	rex.WRX push rbx
  43f7be:	push   rsp
  43f7bf:	push   rdx
  43f7c0:	rex.B
  43f7c1:	rex.WB
  43f7c2:	rex.WRX push rsp
  43f7c4:	sub    al,0x0
  43f7c6:	and    BYTE PTR [rbp+0x4e],dl
  43f7c9:	rex.WB push r9
  43f7cb:	push   rbp
  43f7cc:	rex.RB sub al,0x0
  43f7cf:	and    BYTE PTR [rbp+0x53],dl
  43f7d2:	rex.WB
  43f7d3:	rex.WRX
  43f7d4:	rex.RXB and BYTE PTR [r8],r8b
  43f7d7:	and    BYTE PTR [rbp+rax*2+0x46],al
  43f7db:	rex.RB push r10
  43f7dd:	push   rdx
  43f7de:	rex.B
  43f7df:	rex.X
  43f7e0:	rex.WR
  43f7e1:	add    BYTE PTR [r8],r12b
  43f7e4:	rex.WB
  43f7e5:	rex.WRX
  43f7e6:	rex.WB push r12
  43f7e8:	rex.WB
  43f7e9:	rex.B
  43f7ea:	rex.WR
  43f7eb:	rex.WR pop rcx
  43f7ed:	and    BYTE PTR [rbp+rax*2+0x46],al
  43f7f1:	rex.RB push r10
  43f7f3:	push   rdx
  43f7f4:	rex.RB
  43f7f5:	add    BYTE PTR [rax],r12b
  43f7f8:	rex.XB
  43f7f9:	rex.WR push rbp
  43f7fb:	push   rbx
  43f7fc:	push   rsp
  43f7fd:	rex.RB push r10
  43f7ff:	add    BYTE PTR [rax],ah
  43f801:	rex.WB
  43f802:	rex.WRX push rsi
  43f804:	rex.B
  43f805:	rex.WR
  43f806:	rex.WB
  43f807:	add    BYTE PTR [rax],r12b
  43f80a:	push   rdx
  43f80b:	rex.RB push r8
  43f80d:	rex.WR
  43f80e:	rex.WB
  43f80f:	rex.XB
  43f810:	and    BYTE PTR [r9+0x44],cl
  43f814:	rex.RB
  43f815:	rex.WRX push rsp
  43f817:	rex.WB push r12
  43f819:	pop    rcx
  43f81a:	add    BYTE PTR [rax],al
  43f81c:	add    BYTE PTR [rax],al
  43f81e:	add    BYTE PTR [rax],al
  43f820:	push   rbx
  43f821:	rex.RB
  43f822:	rex.WR
  43f823:	rex.RB
  43f824:	rex.XB push r12
  43f826:	and    BYTE PTR [rdx+0x2e],dh
  43f829:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f82c:	outs   dx,BYTE PTR ds:[rsi]
  43f82d:	(bad)  
  43f82e:	ins    DWORD PTR es:[rdi],dx
  43f82f:	gs sub al,0x20
  43f832:	jo     0x43f89b
  43f834:	pop    rdi
  43f835:	movsxd esp,DWORD PTR [rcx+0x74]
  43f838:	(bad)  
  43f839:	ins    BYTE PTR es:[rdi],dx
  43f83a:	outs   dx,DWORD PTR ds:[rsi]
  43f83b:	addr32 cs jo 0x43f8a6
  43f83f:	pop    rdi
  43f840:	addr32 gs je 0x43f8a3
  43f844:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f847:	jae    0x43f8bd
  43f849:	jb     0x43f8ac
  43f84b:	imul   ebp,DWORD PTR [rsi+0x74],0x28666564
  43f852:	jb     0x43f882
  43f854:	outs   dx,DWORD PTR ds:[rsi]
  43f855:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43f85d:	sub    DWORD PTR [rdx],ecx
  43f85f:	rex.RX push rdx
  43f861:	rex.WRXB
  43f862:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f866:	pop    rdi
  43f867:	movsxd esp,DWORD PTR [rcx+0x74]
  43f86a:	(bad)  
  43f86b:	ins    BYTE PTR es:[rdi],dx
  43f86c:	outs   dx,DWORD PTR ds:[rsi]
  43f86d:	addr32 cs jo 0x43f8d8
  43f871:	pop    rdi
  43f872:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f875:	jae    0x43f8eb
  43f877:	jb     0x43f8da
  43f879:	imul   ebp,DWORD PTR [rsi+0x74],0x570a7220
  43f880:	rex.W
  43f881:	rex.RB push r10
  43f883:	and    BYTE PTR [r10+0x2e],r14b
  43f887:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f88a:	jb     0x43f8f1
  43f88c:	ins    BYTE PTR es:[rdi],dx
  43f88d:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43f895:	(bad)  
  43f896:	and    BYTE PTR [rcx+0x4e],al
  43f899:	and    BYTE PTR [rdx+0x2e],r14b
  43f89d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f8a0:	je     0x43f91b
  43f8a2:	jo     0x43f909
  43f8a4:	and    BYTE PTR [rip+0x27632720],bh        # 0x27a71fca
  43f8aa:	or     cl,BYTE PTR [rdi+0x52]
  43f8ad:	rex.R
  43f8ae:	rex.RB push r10
  43f8b0:	and    BYTE PTR [rdx+0x59],al
  43f8b3:	and    BYTE PTR [rcx],dh
  43f8b5:	cmp    eax,DWORD PTR [rax]
  43f8b7:	rex.XB push 0x206b6365
  43f8bd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f8c0:	jae    0x43f936
  43f8c2:	jb     0x43f925
  43f8c4:	imul   ebp,DWORD PTR [rsi+0x74],0x20003a73
  43f8cb:	and    BYTE PTR [rax],ah
  43f8cd:	and    BYTE PTR [rdx],ah
  43f8cf:	and    eax,0x25202273
  43f8d4:	jae    0x43f8d6
  43f8d6:	add    BYTE PTR [rax],al
  43f8d8:	push   rbx
  43f8d9:	rex.RB
  43f8da:	rex.WR
  43f8db:	rex.RB
  43f8dc:	rex.XB push r12
  43f8de:	and    BYTE PTR [rbx+0x6f],ah
  43f8e1:	outs   dx,BYTE PTR ds:[rsi]
  43f8e2:	outs   dx,BYTE PTR ds:[rsi]
  43f8e3:	(bad)  
  43f8e4:	ins    DWORD PTR es:[rdi],dx
  43f8e5:	gs sub al,0xa
  43f8e8:	and    BYTE PTR [rax],ah
  43f8ea:	jo     0x43f953
  43f8ec:	pop    rdi
  43f8ed:	movsxd esp,DWORD PTR [rcx+0x74]
  43f8f0:	(bad)  
  43f8f1:	ins    BYTE PTR es:[rdi],dx
  43f8f2:	outs   dx,DWORD PTR ds:[rsi]
  43f8f3:	addr32 cs jo 0x43f95e
  43f8f7:	pop    rdi
  43f8f8:	addr32 gs je 0x43f95b
  43f8fc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f8ff:	jae    0x43f975
  43f901:	jb     0x43f964
  43f903:	imul   ebp,DWORD PTR [rsi+0x74],0x28666564
  43f90a:	jb     0x43f93a
  43f90c:	outs   dx,DWORD PTR ds:[rsi]
  43f90d:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43f915:	sub    DWORD PTR [rax],esp
  43f917:	(bad)  
  43f918:	jae    0x43f93a
  43f91a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f91d:	fs data16 or al,BYTE PTR gs:[rsi+0x52]
  43f923:	rex.WRXB
  43f924:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f928:	pop    rdi
  43f929:	movsxd esp,DWORD PTR [rcx+0x74]
  43f92c:	(bad)  
  43f92d:	ins    BYTE PTR es:[rdi],dx
  43f92e:	outs   dx,DWORD PTR ds:[rsi]
  43f92f:	addr32 cs jo 0x43f99a
  43f933:	pop    rdi
  43f934:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f937:	jae    0x43f9ad
  43f939:	jb     0x43f99c
  43f93b:	imul   ebp,DWORD PTR [rsi+0x74],0x570a7220
  43f942:	rex.W
  43f943:	rex.RB push r10
  43f945:	and    BYTE PTR [r10+0x2e],r14b
  43f949:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f94c:	jb     0x43f9b3
  43f94e:	ins    BYTE PTR es:[rdi],dx
  43f94f:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43f957:	(bad)  
  43f958:	and    BYTE PTR [rcx+0x4e],al
  43f95b:	and    BYTE PTR [rdx+0x2e],r14b
  43f95f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f962:	je     0x43f9dd
  43f964:	jo     0x43f9cb
  43f966:	and    BYTE PTR [rip+0x27662720],bh        # 0x27aa208c
  43f96c:	and    BYTE PTR [rdi+0x52],cl
  43f96f:	rex.R
  43f970:	rex.RB push r10
  43f972:	and    BYTE PTR [rdx+0x59],al
  43f975:	and    BYTE PTR [rcx],dh
  43f977:	cmp    eax,DWORD PTR [rax]
  43f979:	add    BYTE PTR [rax],al
  43f97b:	add    BYTE PTR [rax],al
  43f97d:	add    BYTE PTR [rax],al
  43f97f:	add    BYTE PTR [rbx+0x45],dl
  43f982:	rex.WR
  43f983:	rex.RB
  43f984:	rex.XB push r12
  43f986:	and    BYTE PTR [rbx+0x6f],ah
  43f989:	outs   dx,BYTE PTR ds:[rsi]
  43f98a:	outs   dx,BYTE PTR ds:[rsi]
  43f98b:	(bad)  
  43f98c:	ins    DWORD PTR es:[rdi],dx
  43f98d:	gs sub al,0x20
  43f990:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f993:	jb     0x43f9fa
  43f995:	ins    BYTE PTR es:[rdi],dx
  43f996:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  43f99e:	(bad)  
  43f99f:	je     0x43fa02
  43f9a1:	ins    BYTE PTR es:[rdi],dx
  43f9a2:	outs   dx,DWORD PTR ds:[rsi]
  43f9a3:	addr32 cs jb 0x43fa0c
  43f9a7:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  43f9ac:	jae    0x43f9da
  43f9ae:	or     ah,BYTE PTR [rax]
  43f9b0:	and    BYTE PTR [rax+0x67],dh
  43f9b3:	pop    rdi
  43f9b4:	movsxd esp,DWORD PTR [rcx+0x74]
  43f9b7:	(bad)  
  43f9b8:	ins    BYTE PTR es:[rdi],dx
  43f9b9:	outs   dx,DWORD PTR ds:[rsi]
  43f9ba:	addr32 cs jo 0x43fa25
  43f9be:	pop    rdi
  43f9bf:	addr32 gs je 0x43fa22
  43f9c3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f9c6:	jae    0x43fa3c
  43f9c8:	jb     0x43fa2b
  43f9ca:	imul   ebp,DWORD PTR [rsi+0x74],0x28666564
  43f9d1:	movsxd ebp,DWORD PTR [rsi]
  43f9d3:	outs   dx,DWORD PTR ds:[rsi]
  43f9d4:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43f9dc:	sub    DWORD PTR [rax],esp
  43f9de:	(bad)  
  43f9df:	jae    0x43fa01
  43f9e1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f9e4:	fs data16 or al,BYTE PTR gs:[rsi+0x52]
  43f9ea:	rex.WRXB
  43f9eb:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43f9ef:	pop    rdi
  43f9f0:	movsxd esp,DWORD PTR [rcx+0x74]
  43f9f3:	(bad)  
  43f9f4:	ins    BYTE PTR es:[rdi],dx
  43f9f5:	outs   dx,DWORD PTR ds:[rsi]
  43f9f6:	addr32 cs jo 0x43fa61
  43f9fa:	pop    rdi
  43f9fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43f9fe:	jae    0x43fa74
  43fa00:	jb     0x43fa63
  43fa02:	imul   ebp,DWORD PTR [rsi+0x74],0x570a6320
  43fa09:	rex.W
  43fa0a:	rex.RB push r10
  43fa0c:	and    BYTE PTR [r11+0x2e],r12b
  43fa10:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43fa13:	data16 jb 0x43fa7b
  43fa16:	ins    BYTE PTR es:[rdi],dx
  43fa17:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43fa1f:	(bad)  
  43fa20:	and    BYTE PTR [rcx+0x4e],al
  43fa23:	and    BYTE PTR [rbx+0x2e],r12b
  43fa27:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43fa2a:	je     0x43faa5
  43fa2c:	jo     0x43fa93
  43fa2e:	and    BYTE PTR [rip+0x27662720],bh        # 0x27aa2154
  43fa34:	and    BYTE PTR [rdi+0x52],cl
  43fa37:	rex.R
  43fa38:	rex.RB push r10
  43fa3a:	and    BYTE PTR [rdx+0x59],al
  43fa3d:	and    BYTE PTR [rcx],dh
  43fa3f:	cmp    eax,DWORD PTR [rax]
  43fa41:	rex.RX outs dx,DWORD PTR ds:[rsi]
  43fa43:	jb     0x43faaa
  43fa45:	imul   esp,DWORD PTR [rdi+0x6e],0x79656b2d
  43fa4c:	and    BYTE PTR [rbx+0x6f],ah
  43fa4f:	outs   dx,BYTE PTR ds:[rsi]
  43fa50:	jae    0x43fac6
  43fa52:	jb     0x43fab5
  43fa54:	imul   ebp,DWORD PTR [rsi+0x74],0x52003a73
  43fa5b:	gs data16 gs jb 0x43fac5
  43fa60:	outs   dx,BYTE PTR ds:[rsi]
  43fa61:	movsxd esp,DWORD PTR [rbp+0x64]
  43fa64:	and    BYTE PTR [rdx+0x79],ah
  43fa67:	cmp    al,BYTE PTR [rax]
  43fa69:	add    BYTE PTR [rax],al
  43fa6b:	add    BYTE PTR [rax],al
  43fa6d:	add    BYTE PTR [rax],al
  43fa6f:	add    BYTE PTR [rax],ah
  43fa71:	and    BYTE PTR [rax],ah
  43fa73:	and    BYTE PTR [rcx+rax*2+0x42],dl
  43fa77:	rex.WR
  43fa78:	and    BYTE PTR [r10],r12b
  43fa7b:	and    eax,0x43202273
  43fa80:	rex.WRXB
  43fa81:	rex.WRX push rbx
  43fa83:	push   rsp
  43fa84:	push   rdx
  43fa85:	rex.B
  43fa86:	rex.WB
  43fa87:	rex.WRX push rsp
  43fa89:	and    BYTE PTR [rdx],ah
  43fa8b:	and    eax,0x25202273
  43fa90:	jae    0x43fa92
  43fa92:	add    BYTE PTR [rax],al
  43fa94:	add    BYTE PTR [rax],al
  43fa96:	add    BYTE PTR [rax],al
  43fa98:	push   rbx
  43fa99:	rex.RB
  43fa9a:	rex.WR
  43fa9b:	rex.RB
  43fa9c:	rex.XB push r12
  43fa9e:	and    BYTE PTR [rdx+0x2e],dh
  43faa1:	jb     0x43fb18
  43faa3:	ins    BYTE PTR es:[rdi],dx
  43faa4:	outs   dx,BYTE PTR gs:[rsi]
  43faa6:	(bad)  
  43faa7:	ins    DWORD PTR es:[rdi],dx
  43faa8:	gs sub al,0x20
  43faab:	je     0x43fb1f
  43faad:	imul   ebp,DWORD PTR [rbp+0x28],0x69617274
  43fab4:	ins    BYTE PTR es:[rdi],dx
  43fab5:	imul   ebp,DWORD PTR [rsi+0x67],0x273b2720
  43fabc:	and    BYTE PTR [rsi+0x72],ah
  43fabf:	outs   dx,DWORD PTR ds:[rsi]
  43fac0:	ins    DWORD PTR es:[rdi],dx
  43fac1:	and    BYTE PTR [rax+0x67],dh
  43fac4:	pop    rdi
  43fac5:	movsxd esp,DWORD PTR [rcx+0x74]
  43fac8:	(bad)  
  43fac9:	ins    BYTE PTR es:[rdi],dx
  43faca:	outs   dx,DWORD PTR ds:[rsi]
  43facb:	addr32 cs jo 0x43fb36
  43facf:	pop    rdi
  43fad0:	addr32 gs je 0x43fb33
  43fad4:	jb     0x43fb4b
  43fad6:	ins    BYTE PTR es:[rdi],dx
  43fad7:	gs fs data16 sub BYTE PTR gs:[rdx+0x2e],dh
  43fade:	outs   dx,DWORD PTR ds:[rsi]
  43fadf:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43fae7:	sub    DWORD PTR [rcx],ebp
  43fae9:	sub    al,0x20
  43faeb:	gs jbe 0x43fb4d
  43faee:	outs   dx,BYTE PTR gs:[rsi]
  43faf0:	(bad)  
  43faf1:	(bad)  
  43faf2:	ins    BYTE PTR es:[rdi],dx
  43faf3:	gs or  al,BYTE PTR fs:[rsi+0x52]
  43faf8:	rex.WRXB
  43faf9:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43fafd:	pop    rdi
  43fafe:	movsxd esp,DWORD PTR [rcx+0x74]
  43fb01:	(bad)  
  43fb02:	ins    BYTE PTR es:[rdi],dx
  43fb03:	outs   dx,DWORD PTR ds:[rsi]
  43fb04:	addr32 cs jo 0x43fb6f
  43fb08:	pop    rdi
  43fb09:	jb     0x43fb70
  43fb0b:	ja     0x43fb7f
  43fb0d:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x48570a72
  43fb15:	rex.RB push r10
  43fb17:	and    BYTE PTR [r10+0x2e],r14b
  43fb1b:	gs jbe 0x43fb7d
  43fb1e:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43fb22:	jae    0x43fb44
  43fb24:	cmp    eax,0x73252720
  43fb29:	(bad)  
  43fb2a:	and    BYTE PTR [rdi+0x52],cl
  43fb2d:	rex.R
  43fb2e:	rex.RB push r10
  43fb30:	and    BYTE PTR [rdx+0x59],al
  43fb33:	and    BYTE PTR [rcx],dh
  43fb35:	cmp    eax,DWORD PTR [rax]
  43fb37:	add    BYTE PTR [rbx+0x45],dl
  43fb3a:	rex.WR
  43fb3b:	rex.RB
  43fb3c:	rex.XB push r12
  43fb3e:	and    BYTE PTR [rdx+0x2e],dh
  43fb41:	jb     0x43fbb8
  43fb43:	ins    BYTE PTR es:[rdi],dx
  43fb44:	outs   dx,BYTE PTR gs:[rsi]
  43fb46:	(bad)  
  43fb47:	ins    DWORD PTR es:[rdi],dx
  43fb48:	gs sub al,0x20
  43fb4b:	je     0x43fbbf
  43fb4d:	imul   ebp,DWORD PTR [rbp+0x28],0x69617274
  43fb54:	ins    BYTE PTR es:[rdi],dx
  43fb55:	imul   ebp,DWORD PTR [rsi+0x67],0x273b2720
  43fb5c:	and    BYTE PTR [rsi+0x72],ah
  43fb5f:	outs   dx,DWORD PTR ds:[rsi]
  43fb60:	ins    DWORD PTR es:[rdi],dx
  43fb61:	and    BYTE PTR [rax+0x67],dh
  43fb64:	pop    rdi
  43fb65:	movsxd esp,DWORD PTR [rcx+0x74]
  43fb68:	(bad)  
  43fb69:	ins    BYTE PTR es:[rdi],dx
  43fb6a:	outs   dx,DWORD PTR ds:[rsi]
  43fb6b:	addr32 cs jo 0x43fbd6
  43fb6f:	pop    rdi
  43fb70:	addr32 gs je 0x43fbd3
  43fb74:	jb     0x43fbeb
  43fb76:	ins    BYTE PTR es:[rdi],dx
  43fb77:	gs fs data16 sub BYTE PTR gs:[rdx+0x2e],dh
  43fb7e:	outs   dx,DWORD PTR ds:[rsi]
  43fb7f:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43fb87:	sub    DWORD PTR [rcx],ebp
  43fb89:	sub    al,0x20
  43fb8b:	(bad)  
  43fb8c:	rex.WRXB (bad) 
  43fb8e:	cmp    bh,BYTE PTR [rdx]
  43fb90:	movsxd ebp,DWORD PTR [rax+0x61]
  43fb93:	jb     0x43fbb5
  43fb95:	push   r11
  43fb97:	and    BYTE PTR [rbp+0x76],ah
  43fb9a:	pop    rdi
  43fb9b:	outs   dx,BYTE PTR gs:[rsi]
  43fb9d:	(bad)  
  43fb9e:	(bad)  
  43fb9f:	ins    BYTE PTR es:[rdi],dx
  43fba0:	gs or  al,BYTE PTR fs:[rsi+0x52]
  43fba5:	rex.WRXB
  43fba6:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43fbaa:	pop    rdi
  43fbab:	movsxd esp,DWORD PTR [rcx+0x74]
  43fbae:	(bad)  
  43fbaf:	ins    BYTE PTR es:[rdi],dx
  43fbb0:	outs   dx,DWORD PTR ds:[rsi]
  43fbb1:	addr32 cs jo 0x43fc1c
  43fbb5:	pop    rdi
  43fbb6:	jb     0x43fc1d
  43fbb8:	ja     0x43fc2c
  43fbba:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x48570a72
  43fbc2:	rex.RB push r10
  43fbc4:	and    BYTE PTR [r10+0x2e],r14b
  43fbc8:	gs jbe 0x43fc2a
  43fbcb:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43fbcf:	jae    0x43fbf1
  43fbd1:	cmp    eax,0x73252720
  43fbd6:	(bad)  
  43fbd7:	and    BYTE PTR [rdi+0x52],cl
  43fbda:	rex.R
  43fbdb:	rex.RB push r10
  43fbdd:	and    BYTE PTR [rdx+0x59],al
  43fbe0:	and    BYTE PTR [rcx],dh
  43fbe2:	cmp    eax,DWORD PTR [rax]
  43fbe4:	push   rdx
  43fbe5:	jne    0x43fc53
  43fbe7:	gs jae 0x43fc24
  43fbea:	add    BYTE PTR [rcx+rbp*2+0x73],al
  43fbee:	(bad)  
  43fbef:	(bad)  
  43fbf0:	ins    BYTE PTR es:[rdi],dx
  43fbf1:	gs and BYTE PTR fs:[rdx+0x75],dh
  43fbf6:	ins    BYTE PTR es:[rdi],dx
  43fbf7:	gs jae 0x43fc34
  43fbfa:	add    BYTE PTR [rdx+0x75],dl
  43fbfd:	ins    BYTE PTR es:[rdi],dx
  43fbfe:	gs jae 0x43fc21
  43fc01:	imul   si,WORD PTR [rdx+0x69],0x676e
  43fc07:	and    BYTE PTR [rcx+0x6c],ah
  43fc0a:	ja     0x43fc6d
  43fc0c:	jns    0x43fc81
  43fc0e:	cmp    al,BYTE PTR [rax]
  43fc10:	push   rdx
  43fc11:	jne    0x43fc7f
  43fc13:	gs jae 0x43fc36
  43fc16:	imul   si,WORD PTR [rdx+0x69],0x676e
  43fc1c:	and    BYTE PTR [rdi+0x6e],ch
  43fc1f:	and    BYTE PTR [rdx+0x65],dh
  43fc22:	jo     0x43fc90
  43fc24:	imul   esp,DWORD PTR [rbx+0x61],0x6c6e6f20
  43fc2b:	jns    0x43fc67
  43fc2d:	add    BYTE PTR [rax],ah
  43fc2f:	and    BYTE PTR [rax],ah
  43fc31:	and    BYTE PTR [rip+0x69560073],ah        # 0x6999fcaa
  43fc37:	gs ja  0x43fc5a
  43fc3a:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  43fc42:	outs   dx,DWORD PTR ds:[rsi]
  43fc43:	outs   dx,BYTE PTR ds:[rsi]
  43fc44:	cmp    al,BYTE PTR [rax]
  43fc46:	add    BYTE PTR [rax],al
  43fc48:	push   rbx
  43fc49:	rex.RB
  43fc4a:	rex.WR
  43fc4b:	rex.RB
  43fc4c:	rex.XB push r12
  43fc4e:	and    BYTE PTR [rdx+0x2e],dh
  43fc51:	jb     0x43fcc8
  43fc53:	ins    BYTE PTR es:[rdi],dx
  43fc54:	outs   dx,BYTE PTR gs:[rsi]
  43fc56:	(bad)  
  43fc57:	ins    DWORD PTR es:[rdi],dx
  43fc58:	gs sub al,0x20
  43fc5b:	je     0x43fccf
  43fc5d:	imul   ebp,DWORD PTR [rbp+0x28],0x69617274
  43fc64:	ins    BYTE PTR es:[rdi],dx
  43fc65:	imul   ebp,DWORD PTR [rsi+0x67],0x273b2720
  43fc6c:	and    BYTE PTR [rsi+0x72],ah
  43fc6f:	outs   dx,DWORD PTR ds:[rsi]
  43fc70:	ins    DWORD PTR es:[rdi],dx
  43fc71:	and    BYTE PTR [rax+0x67],dh
  43fc74:	pop    rdi
  43fc75:	movsxd esp,DWORD PTR [rcx+0x74]
  43fc78:	(bad)  
  43fc79:	ins    BYTE PTR es:[rdi],dx
  43fc7a:	outs   dx,DWORD PTR ds:[rsi]
  43fc7b:	addr32 cs jo 0x43fce6
  43fc7f:	pop    rdi
  43fc80:	addr32 gs je 0x43fce3
  43fc84:	jb     0x43fcfb
  43fc86:	ins    BYTE PTR es:[rdi],dx
  43fc87:	gs fs data16 sub BYTE PTR gs:[rdx+0x2e],dh
  43fc8e:	outs   dx,DWORD PTR ds:[rsi]
  43fc8f:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  43fc97:	sub    DWORD PTR [rcx],ebp
  43fc99:	or     al,BYTE PTR [rsi+0x52]
  43fc9c:	rex.WRXB
  43fc9d:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43fca1:	pop    rdi
  43fca2:	movsxd esp,DWORD PTR [rcx+0x74]
  43fca5:	(bad)  
  43fca6:	ins    BYTE PTR es:[rdi],dx
  43fca7:	outs   dx,DWORD PTR ds:[rsi]
  43fca8:	addr32 cs jo 0x43fd13
  43fcac:	pop    rdi
  43fcad:	jb     0x43fd14
  43fcaf:	ja     0x43fd23
  43fcb1:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x48570a72
  43fcb9:	rex.RB push r10
  43fcbb:	and    BYTE PTR [r10+0x2e],r14b
  43fcbf:	gs jbe 0x43fd21
  43fcc2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  43fcc6:	jae    0x43fce8
  43fcc8:	cmp    eax,0x73252720
  43fccd:	(bad)  
  43fcce:	and    BYTE PTR [rcx+0x4e],al
  43fcd1:	and    BYTE PTR [rdx+0x2e],r14b
  43fcd5:	jb     0x43fd4c
  43fcd7:	ins    BYTE PTR es:[rdi],dx
  43fcd8:	outs   dx,BYTE PTR gs:[rsi]
  43fcda:	(bad)  
  43fcdb:	ins    DWORD PTR es:[rdi],dx
  43fcdc:	and    BYTE PTR gs:[rcx],ah
  43fcdf:	cmp    eax,0x525f2720
  43fce4:	rex.RB push r12
  43fce6:	push   rbp
  43fce7:	push   rdx
  43fce8:	rex.WRX (bad) 
  43fcea:	and    BYTE PTR [rdi+0x52],cl
  43fced:	rex.R
  43fcee:	rex.RB push r10
  43fcf0:	and    BYTE PTR [rdx+0x59],al
  43fcf3:	and    BYTE PTR [rcx],dh
  43fcf5:	cmp    eax,DWORD PTR [rax]
  43fcf7:	add    BYTE PTR [rbx+0x45],dl
  43fcfa:	rex.WR
  43fcfb:	rex.RB
  43fcfc:	rex.XB push r12
  43fcfe:	and    BYTE PTR [rsi+rbp*1+0x74],dh
  43fd02:	outs   dx,BYTE PTR ds:[esi]
  43fd04:	(bad)  
  43fd05:	ins    DWORD PTR es:[rdi],dx
  43fd06:	gs sub al,0x20
  43fd09:	jo     0x43fd72
  43fd0b:	pop    rdi
  43fd0c:	movsxd esp,DWORD PTR [rcx+0x74]
  43fd0f:	(bad)  
  43fd10:	ins    BYTE PTR es:[rdi],dx
  43fd11:	outs   dx,DWORD PTR ds:[rsi]
  43fd12:	addr32 cs jo 0x43fd7d
  43fd16:	pop    rdi
  43fd17:	addr32 gs je 0x43fd7a
  43fd1b:	je     0x43fd8f
  43fd1d:	imul   esp,DWORD PTR [rdi+0x67],0x65647265
  43fd24:	data16 sub BYTE PTR [rsi+rbp*1+0x6f],dh
  43fd29:	imul   esp,DWORD PTR [rbp+riz*1+0x73],0x74202c29
  43fd31:	cs je  0x43fd9b
  43fd34:	outs   dx,BYTE PTR gs:[rsi]
  43fd36:	(bad)  
  43fd37:	(bad)  
  43fd38:	ins    BYTE PTR es:[rdi],dx
  43fd39:	gs fs sub al,0x20
  43fd3d:	and    eax,0x52460a73
  43fd42:	rex.WRXB
  43fd43:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43fd47:	pop    rdi
  43fd48:	movsxd esp,DWORD PTR [rcx+0x74]
  43fd4b:	(bad)  
  43fd4c:	ins    BYTE PTR es:[rdi],dx
  43fd4d:	outs   dx,DWORD PTR ds:[rsi]
  43fd4e:	addr32 cs jo 0x43fdb9
  43fd52:	pop    rdi
  43fd53:	je     0x43fdc7
  43fd55:	imul   esp,DWORD PTR [rdi+0x67],0x74207265
  43fd5c:	or     dl,BYTE PTR [rdi+0x48]
  43fd5f:	rex.RB push r10
  43fd61:	and    BYTE PTR [r14+rbp*1+0x74],r14b
  43fd66:	addr32 jb 0x43fdce
  43fd69:	ins    BYTE PTR es:[rdi],dx
  43fd6a:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  43fd72:	(bad)  
  43fd73:	and    BYTE PTR [rcx+0x4e],al
  43fd76:	and    BYTE PTR [rax],r8b
  43fd79:	add    BYTE PTR [rax],al
  43fd7b:	add    BYTE PTR [rax],al
  43fd7d:	add    BYTE PTR [rax],al
  43fd7f:	add    BYTE PTR [rax],ch
  43fd81:	rex.WRX
  43fd82:	rex.WRXB push r12
  43fd84:	and    BYTE PTR [rsi+rbp*1+0x74],dh
  43fd88:	imul   esi,DWORD PTR [ebx+0x69],0x7265746e
  43fd90:	outs   dx,BYTE PTR ds:[rsi]
  43fd91:	(bad)  
  43fd92:	ins    BYTE PTR es:[rdi],dx
  43fd93:	and    BYTE PTR [rdi+0x52],cl
  43fd96:	and    BYTE PTR [rax],ch
  43fd98:	je     0x43fdc8
  43fd9a:	je     0x43fe03
  43fd9c:	imul   esi,DWORD PTR [rbx+0x69],0x7265746e
  43fda3:	outs   dx,BYTE PTR ds:[rsi]
  43fda4:	(bad)  
  43fda5:	ins    BYTE PTR es:[rdi],dx
  43fda6:	and    BYTE PTR [rcx+0x4e],al
  43fda9:	and    BYTE PTR [rsi+rbp*1+0x74],r14b
  43fdae:	outs   dx,BYTE PTR gs:[esi]
  43fdb1:	(bad)  
  43fdb2:	(bad)  
  43fdb3:	ins    BYTE PTR es:[rdi],dx
  43fdb4:	gs and BYTE PTR fs:[rip+0x27442720],bh        # 0x278824dc
  43fdbc:	sub    DWORD PTR [rcx],ebp
  43fdbe:	add    BYTE PTR [rax],al
  43fdc0:	sub    BYTE PTR [rsi+rbp*1+0x74],dh
  43fdc4:	movsxd ebp,DWORD PTR [edi+0x6e]
  43fdc8:	jae    0x43fe3e
  43fdca:	jb     0x43fe2d
  43fdcc:	imul   ebp,DWORD PTR [rsi+0x74],0x30203d20
  43fdd3:	and    BYTE PTR [rdi+0x52],cl
  43fdd6:	and    BYTE PTR [rax],ch
  43fdd8:	je     0x43fe08
  43fdda:	je     0x43fe43
  43fddc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43fddf:	jae    0x43fe55
  43fde1:	jb     0x43fe44
  43fde3:	imul   ebp,DWORD PTR [rsi+0x74],0x203e3c20
  43fdea:	xor    BYTE PTR [rax],ah
  43fdec:	rex.B
  43fded:	rex.WRX
  43fdee:	and    BYTE PTR [rsi+rbp*1+0x74],r14b
  43fdf3:	outs   dx,BYTE PTR gs:[esi]
  43fdf6:	(bad)  
  43fdf7:	(bad)  
  43fdf8:	ins    BYTE PTR es:[rdi],dx
  43fdf9:	gs and BYTE PTR fs:[rip+0x27442720],bh        # 0x27882521
  43fe01:	sub    DWORD PTR [rcx],ebp
  43fe03:	add    BYTE PTR [rax],al
  43fe05:	add    BYTE PTR [rax],al
  43fe07:	add    BYTE PTR [rax],ch
  43fe09:	rex.WRX
  43fe0a:	rex.WRXB push r12
  43fe0c:	and    BYTE PTR [rdi+riz*2+0x69],dh
  43fe10:	jae    0x43fe75
  43fe12:	outs   dx,DWORD PTR ds:[rsi]
  43fe13:	outs   dx,BYTE PTR ds:[rsi]
  43fe14:	jae    0x43fe8a
  43fe16:	jb     0x43fe79
  43fe18:	imul   ebp,DWORD PTR [rsi+0x74],0x524f2020
  43fe1f:	and    BYTE PTR [rsi+0x4f],cl
  43fe22:	push   rsp
  43fe23:	and    BYTE PTR [rbp+0x58],al
  43fe26:	rex.WB push r11
  43fe28:	push   rsp
  43fe29:	push   rbx
  43fe2a:	and    BYTE PTR [rax],ah
  43fe2c:	sub    BYTE PTR [rbx+0x45],dl
  43fe2f:	rex.WR
  43fe30:	rex.RB
  43fe31:	rex.XB push r12
  43fe33:	and    BYTE PTR [rcx],dh
  43fe35:	and    BYTE PTR [rsi+0x52],al
  43fe38:	rex.WRXB
  43fe39:	rex.WRB and BYTE PTR [r8+0x67],r14b
  43fe3d:	pop    rdi
  43fe3e:	movsxd esp,DWORD PTR [rcx+0x74]
  43fe41:	(bad)  
  43fe42:	ins    BYTE PTR es:[rdi],dx
  43fe43:	outs   dx,DWORD PTR ds:[rsi]
  43fe44:	addr32 cs jo 0x43feaf
  43fe48:	pop    rdi
  43fe49:	fs gs jo 0x43feb2
  43fe4d:	outs   dx,BYTE PTR ds:[rsi]
  43fe4e:	and    BYTE PTR fs:[rax+riz*1+0x20],ah
  43fe53:	and    BYTE PTR [rax],ah
  43fe55:	rex.WX
  43fe56:	rex.WRXB
  43fe57:	rex.WB
  43fe58:	rex.WRX and BYTE PTR [rax+0x67],r14b
  43fe5c:	pop    rdi
  43fe5d:	movsxd esp,DWORD PTR [rcx+0x74]
  43fe60:	(bad)  
  43fe61:	ins    BYTE PTR es:[rdi],dx
  43fe62:	outs   dx,DWORD PTR ds:[rsi]
  43fe63:	addr32 cs jo 0x43fece
  43fe67:	pop    rdi
  43fe68:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43fe6b:	jae    0x43fee1
  43fe6d:	jb     0x43fed0
  43fe6f:	imul   ebp,DWORD PTR [rsi+0x74],0x4f206320
  43fe76:	rex.WRX and BYTE PTR [rax],r13b
  43fe79:	fs cs jb 0x43fee2
  43fe7d:	movsxd bp,DWORD PTR [rcx+riz*2+0x73]
  43fe82:	jae    0x43feed
  43fe84:	and    BYTE PTR fs:[rip+0x742e6320],bh        # 0x747261ab
  43fe8b:	(bad)  
  43fe8c:	(bad)  
  43fe8d:	ins    BYTE PTR es:[rdi],dx
  43fe8e:	outs   dx,DWORD PTR gs:[rsi]
  43fe90:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  43fe98:	cs jb  0x43ff00
  43fe9b:	outs   dx,WORD PTR ds:[rsi]
  43fe9d:	(bad)  
  43fe9e:	push   0x69
  43fea0:	and    BYTE PTR fs:[rip+0x6f2e6320],bh        # 0x6f7261c7
  43fea7:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x57202020
  43feaf:	rex.W
  43feb0:	rex.RB push r10
  43feb2:	and    BYTE PTR [r14+rbp*1+0x63],r12b
  43feb7:	ins    BYTE PTR es:[rdi],dx
  43feb8:	(bad)  
  43feb9:	jae    0x43ff2e
  43febb:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  43fec3:	(bad)  
  43fec4:	(bad)  
  43fec5:	ins    BYTE PTR es:[rdi],dx
  43fec6:	outs   dx,DWORD PTR gs:[rsi]
  43fec8:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  43fed0:	outs   dx,DWORD PTR cs:[rsi]
  43fed2:	(bad)  
  43fed3:	push   0x69
  43fed5:	and    BYTE PTR fs:[rip+0x6f2e7420],bh        # 0x6f7272fc
  43fedc:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  43fee4:	cs fs gs jo 0x43ff5d
  43fee9:	jns    0x43ff5b
  43feeb:	and    BYTE PTR gs:[rip+0x27692720],bh        # 0x27ad2612
  43fef2:	and    BYTE PTR [rcx+0x4e],al
  43fef5:	and    BYTE PTR [rbx+0x2e],r12b
  43fef9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43fefc:	je     0x43ff77
  43fefe:	jo     0x43ff65
  43ff00:	and    BYTE PTR [rip+0x27662720],bh        # 0x27aa2626
  43ff06:	sub    DWORD PTR [rcx],ebp
  43ff08:	add    BYTE PTR [rdx],cl
  43ff0a:	rex.WRXB push r10
  43ff0c:	rex.R
  43ff0d:	rex.RB push r10
  43ff0f:	and    BYTE PTR [rdx+0x59],al
  43ff12:	and    BYTE PTR [rcx],dh
  43ff14:	cmp    eax,DWORD PTR [rax]
  43ff16:	push   rsp
  43ff17:	jb     0x43ff82
  43ff19:	addr32 addr32 gs jb 0x43ff91
  43ff1e:	cmp    al,BYTE PTR [rax]
  43ff20:	imul   r14d,DWORD PTR [rbx+0x61],0x64656c62
  43ff28:	and    BYTE PTR [rbp+0x73],dh
  43ff2b:	gs jb  0x43ff4e
  43ff2e:	je     0x43ffa2
  43ff30:	imul   esp,DWORD PTR [rdi+0x67],0x3a737265
  43ff37:	add    BYTE PTR [rcx+rbp*2+0x73],al
  43ff3b:	(bad)  
  43ff3c:	(bad)  
  43ff3d:	ins    BYTE PTR es:[rdi],dx
  43ff3e:	gs and BYTE PTR fs:[rdx+rsi*2+0x69],dh
  43ff44:	addr32 addr32 gs jb 0x43ffbc
  43ff49:	cmp    al,BYTE PTR [rax]
  43ff4b:	imul   r14d,DWORD PTR [rbx+0x61],0x64656c62
  43ff53:	and    BYTE PTR [rcx+0x6e],ch
  43ff56:	je     0x43ffbd
  43ff58:	jb     0x43ffc8
  43ff5a:	(bad)  
  43ff5b:	ins    BYTE PTR es:[rdi],dx
  43ff5c:	and    BYTE PTR [rdx+rsi*2+0x69],dh
  43ff60:	addr32 addr32 gs jb 0x43ffd8
  43ff65:	cmp    al,BYTE PTR [rax]
  43ff67:	push   rsp
  43ff68:	jb     0x43ffd3
  43ff6a:	addr32 addr32 gs jb 0x43ffe2
  43ff6f:	and    BYTE PTR [rsi+0x69],ah
  43ff72:	jb     0x43ffdd
  43ff74:	outs   dx,BYTE PTR ds:[rsi]
  43ff75:	and    BYTE PTR [ecx+0x6c],ah
  43ff79:	ja     0x43ffdc
  43ff7b:	jns    0x43fff0
  43ff7d:	cmp    al,BYTE PTR [rax]
  43ff7f:	add    BYTE PTR [rdx+rsi*2+0x69],dl
  43ff83:	addr32 addr32 gs jb 0x43fffb
  43ff88:	and    BYTE PTR [rsi+0x69],ah
  43ff8b:	jb     0x43fff6
  43ff8d:	outs   dx,BYTE PTR ds:[rsi]
  43ff8e:	and    BYTE PTR [edi+0x6e],ch
  43ff92:	and    BYTE PTR [rdx+0x65],dh
  43ff95:	jo     0x440003
  43ff97:	imul   esp,DWORD PTR [rbx+0x61],0x6c6e6f20
  43ff9e:	jns    0x43ffda
  43ffa0:	add    BYTE PTR [rax],ah
  43ffa2:	push   rsp
  43ffa3:	push   rdx
  43ffa4:	rex.WB
  43ffa5:	rex.RXB
  43ffa6:	rex.RXB
  43ffa7:	rex.RB push r10
  43ffa9:	and    BYTE PTR [rax],al
  43ffab:	add    BYTE PTR [rax],al
  43ffad:	add    BYTE PTR [rax],al
  43ffaf:	add    BYTE PTR [rbx+0x45],dl
  43ffb2:	rex.WR
  43ffb3:	rex.RB
  43ffb4:	rex.XB push r12
  43ffb6:	and    BYTE PTR [rbx+0x2e],dh
  43ffb9:	jae    0x44002d
  43ffbb:	jbe    0x44002b
  43ffbd:	(bad)  
  43ffbe:	ins    DWORD PTR es:[rdi],dx
  43ffbf:	gs sub al,0xa
  43ffc2:	and    BYTE PTR [rax],ah
  43ffc4:	and    BYTE PTR [rax],ah
  43ffc6:	and    BYTE PTR [rax],ah
  43ffc8:	and    BYTE PTR [rcx+0x72],ah
  43ffcb:	jb     0x44002e
  43ffcd:	jns    0x44002e
  43ffcf:	je     0x440040
  43ffd1:	pop    rdi
  43ffd2:	jae    0x440048
  43ffd4:	jb     0x44003f
  43ffd6:	outs   dx,BYTE PTR ds:[rsi]
  43ffd7:	sub    BYTE PTR [ecx+0x52],al
  43ffdb:	push   rdx
  43ffdc:	pop    r9
  43ffde:	sub    BYTE PTR [rbx+0x45],dl
  43ffe1:	rex.WR
  43ffe2:	rex.RB
  43ffe3:	rex.XB push r12
  43ffe5:	and    BYTE PTR [rax],ah
  43ffe7:	and    BYTE PTR [rax],ah
  43ffe9:	and    BYTE PTR [rax],ah
  43ffeb:	and    BYTE PTR [rax],ah
  43ffed:	jno    0x440064
  43ffef:	outs   dx,DWORD PTR ds:[rsi]
  43fff0:	je     0x440057
  43fff2:	pop    rdi
  43fff3:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  43fffb:	je     0x440066
  43fffd:	outs   dx,DWORD PTR ds:[rsi]
  43fffe:	outs   dx,BYTE PTR ds:[rsi]
  43ffff:	pop    rdi
  440000:	outs   dx,BYTE PTR ds:[rsi]
  440001:	(bad)  
  440002:	ins    DWORD PTR es:[rdi],dx
  440003:	sub    DWORD PTR gs:[rax],esp
  440006:	jl     0x440084
  440008:	and    BYTE PTR [rax],ah
  44000a:	(bad)  
  44000b:	and    BYTE PTR [rdi],ah
  44000d:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  440011:	and    BYTE PTR [rax],ah
  440013:	and    BYTE PTR [rax],ah
  440015:	and    BYTE PTR [rax],ah
  440017:	and    BYTE PTR [rcx+0x75],dh
  44001a:	outs   dx,DWORD PTR ds:[rsi]
  44001b:	je     0x440082
  44001d:	pop    rdi
  44001e:	ins    BYTE PTR es:[rdi],dx
  44001f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  440027:	jo     0x44009d
  440029:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  440030:	jne    0x440097
  440032:	sub    DWORD PTR [rax],esp
  440034:	and    BYTE PTR [rsi+0x52],al
  440037:	rex.WRXB
  440038:	rex.WRB and BYTE PTR [r8],r12b
  44003b:	and    BYTE PTR [rax],ah
  44003d:	and    BYTE PTR [rax],ah
  44003f:	and    BYTE PTR [rax],ah
  440041:	jo     0x4400aa
  440043:	pop    rdi
  440044:	outs   dx,DWORD PTR ds:[rsi]
  440045:	jo     0x4400bb
  440047:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  44004e:	pop    rdi
  44004f:	je     0x4400b2
  440051:	(bad)  
  440052:	ins    BYTE PTR es:[rdi],dx
  440053:	sub    BYTE PTR gs:[rsi+0x74],ah
  440057:	outs   dx,DWORD PTR ds:[rsi]
  440058:	jo     0x4400ce
  44005a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  440061:	and    BYTE PTR [rax],ah
  440063:	(bad)  
  440064:	sub    al,0x20
  440066:	(bad)  
  440067:	sub    DWORD PTR [rax],esp
  440069:	rex.RX push rdx
  44006b:	rex.WRXB
  44006c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  440070:	pop    rdi
  440071:	movsxd esp,DWORD PTR [rcx+0x74]
  440074:	(bad)  
  440075:	ins    BYTE PTR es:[rdi],dx
  440076:	outs   dx,DWORD PTR ds:[rsi]
  440077:	addr32 cs jo 0x4400e2
  44007b:	pop    rdi
  44007c:	outs   dx,WORD PTR ds:[rsi]
  44007e:	jb     0x4400e5
  440080:	imul   esp,DWORD PTR [rdi+0x6e],0x6261745f
  440087:	ins    BYTE PTR es:[rdi],dx
  440088:	and    BYTE PTR gs:[rsi+0x2c],ah
  44008c:	or     ah,BYTE PTR [rax]
  44008e:	and    BYTE PTR [rax],ah
  440090:	and    BYTE PTR [rax],ah
  440092:	jo     0x4400fb
  440094:	pop    rdi
  440095:	movsxd esp,DWORD PTR [rcx+0x74]
  440098:	(bad)  
  440099:	ins    BYTE PTR es:[rdi],dx
  44009a:	outs   dx,DWORD PTR ds:[rsi]
  44009b:	addr32 cs jo 0x440106
  44009f:	pop    rdi
  4400a0:	outs   dx,WORD PTR ds:[rsi]
  4400a2:	jb     0x440109
  4400a4:	imul   esp,DWORD PTR [rdi+0x6e],0x7265735f
  4400ab:	jbe    0x440112
  4400ad:	jb     0x4400cf
  4400af:	jae    0x4400bb
  4400b1:	push   rdi
  4400b2:	rex.W
  4400b3:	rex.RB push r10
  4400b5:	and    BYTE PTR [r14+0x2e],r12b
  4400b9:	data16 je 0x44012e
  4400bc:	gs ins BYTE PTR es:[rdi],dx
  4400be:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x20732520
  4400c6:	rex.B
  4400c7:	rex.WRX
  4400c8:	and    BYTE PTR [rbx+0x2e],r14b
  4400cc:	outs   dx,DWORD PTR ds:[rsi]
  4400cd:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x662e6620
  4400d5:	je     0x44014a
  4400d7:	gs jb  0x440150
  4400da:	gs jb  0x440118
  4400dd:	add    BYTE PTR [rbx+0x65],dl
  4400e0:	jb     0x440158
  4400e2:	gs jb  0x44011f
  4400e5:	and    BYTE PTR [rip+0x44460073],ah        # 0x448a015e
  4400eb:	push   rdi
  4400ec:	and    BYTE PTR [rdi+0x70],cl
  4400ef:	je     0x44015a
  4400f1:	outs   dx,DWORD PTR ds:[rsi]
  4400f2:	outs   dx,BYTE PTR ds:[rsi]
  4400f3:	jae    0x44012f
  4400f5:	and    BYTE PTR [rax],ch
  4400f7:	and    eax,0x2973
  4400fc:	add    BYTE PTR [rax],al
  4400fe:	add    BYTE PTR [rax],al
  440100:	push   rbx
  440101:	rex.RB
  440102:	rex.WR
  440103:	rex.RB
  440104:	rex.XB push r12
  440106:	and    BYTE PTR [rbx+0x2e],ah
  440109:	outs   dx,DWORD PTR ds:[rsi]
  44010a:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  440112:	(bad)  
  440113:	je     0x440176
  440115:	ins    BYTE PTR es:[rdi],dx
  440116:	outs   dx,DWORD PTR ds:[rsi]
  440117:	addr32 cs jb 0x440180
  44011b:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  440120:	jae    0x440142
  440122:	rex.RX push rdx
  440124:	rex.WRXB
  440125:	rex.WRB and BYTE PTR [r8+0x67],r14b
  440129:	pop    rdi
  44012a:	movsxd esp,DWORD PTR [rcx+0x74]
  44012d:	(bad)  
  44012e:	ins    BYTE PTR es:[rdi],dx
  44012f:	outs   dx,DWORD PTR ds:[rsi]
  440130:	addr32 cs jo 0x44019b
  440134:	pop    rdi
  440135:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  440139:	jae    0x44015b
  44013b:	movsxd ebp,DWORD PTR [rax+riz*1]
  44013e:	jo     0x4401a7
  440140:	pop    rdi
  440141:	movsxd esp,DWORD PTR [rcx+0x74]
  440144:	(bad)  
  440145:	ins    BYTE PTR es:[rdi],dx
  440146:	outs   dx,DWORD PTR ds:[rsi]
  440147:	addr32 cs jo 0x4401b2
  44014b:	pop    rdi
  44014c:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  440153:	jae    0x440175
  440155:	imul   esp,DWORD PTR [rax],0x52454857
  44015b:	and    BYTE PTR [r11+0x2e],r12b
  44015f:	outs   dx,DWORD PTR ds:[rsi]
  440160:	imul   esp,DWORD PTR [rbp+rdi*1+0x69],0x686e692e
  440168:	jo     0x4401cb
  44016a:	jb     0x4401d1
  44016c:	outs   dx,BYTE PTR ds:[rsi]
  44016d:	je     0x44018f
  44016f:	rex.B
  440170:	rex.WRX
  440171:	and    BYTE PTR [rcx+0x2e],r13b
  440175:	imul   ebp,DWORD PTR [rsi+0x68],0x696c6572
  44017c:	and    BYTE PTR fs:[rip+0x73252720],bh        # 0x736928a3
  440183:	(bad)  
  440184:	and    BYTE PTR [rdi+0x52],cl
  440187:	rex.R
  440188:	rex.RB push r10
  44018a:	and    BYTE PTR [rdx+0x59],al
  44018d:	and    BYTE PTR [rcx+0x6e],ch
  440190:	push   0x6e716573
  440195:	outs   dx,DWORD PTR ds:[rsi]
  440196:	cmp    eax,DWORD PTR [rax]
  440198:	rex.WB outs dx,BYTE PTR ds:[rsi]
  44019a:	push   0x74697265
  44019f:	jae    0x4401a1
  4401a1:	and    eax,0x25203a73
  4401a6:	jae    0x4401a8
  4401a8:	and    eax,0x2020732a
  4401ad:	and    eax,0x2c0073
  4401b2:	add    BYTE PTR [rax],al
  4401b4:	add    BYTE PTR [rax],al
  4401b6:	add    BYTE PTR [rax],al
  4401b8:	push   rbx
  4401b9:	rex.RB
  4401ba:	rex.WR
  4401bb:	rex.RB
  4401bc:	rex.XB push r12
  4401be:	and    BYTE PTR [rbx+0x2e],ah
  4401c1:	outs   dx,DWORD PTR ds:[rsi]
  4401c2:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  4401ca:	(bad)  
  4401cb:	je     0x44022e
  4401cd:	ins    BYTE PTR es:[rdi],dx
  4401ce:	outs   dx,DWORD PTR ds:[rsi]
  4401cf:	addr32 cs jb 0x440238
  4401d3:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  4401d8:	jae    0x4401fa
  4401da:	rex.RX push rdx
  4401dc:	rex.WRXB
  4401dd:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4401e1:	pop    rdi
  4401e2:	movsxd esp,DWORD PTR [rcx+0x74]
  4401e5:	(bad)  
  4401e6:	ins    BYTE PTR es:[rdi],dx
  4401e7:	outs   dx,DWORD PTR ds:[rsi]
  4401e8:	addr32 cs jo 0x440253
  4401ec:	pop    rdi
  4401ed:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4401f1:	jae    0x440213
  4401f3:	movsxd ebp,DWORD PTR [rax+riz*1]
  4401f6:	jo     0x44025f
  4401f8:	pop    rdi
  4401f9:	movsxd esp,DWORD PTR [rcx+0x74]
  4401fc:	(bad)  
  4401fd:	ins    BYTE PTR es:[rdi],dx
  4401fe:	outs   dx,DWORD PTR ds:[rsi]
  4401ff:	addr32 cs jo 0x44026a
  440203:	pop    rdi
  440204:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  44020b:	jae    0x44022d
  44020d:	imul   esp,DWORD PTR [rax],0x52454857
  440213:	and    BYTE PTR [r11+0x2e],r12b
  440217:	outs   dx,DWORD PTR ds:[rsi]
  440218:	imul   esp,DWORD PTR [rbp+rdi*1+0x69],0x686e692e
  440220:	jb     0x440287
  440222:	ins    BYTE PTR es:[rdi],dx
  440223:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6920444e
  44022b:	imul   ebp,DWORD PTR cs:[rsi+0x68],0x65726170
  440233:	outs   dx,BYTE PTR ds:[rsi]
  440234:	je     0x440256
  440236:	cmp    eax,0x73252720
  44023b:	(bad)  
  44023c:	and    BYTE PTR [rdi+0x52],cl
  44023f:	rex.R
  440240:	rex.RB push r10
  440242:	and    BYTE PTR [rdx+0x59],al
  440245:	and    BYTE PTR [rbx+0x2e],ah
  440248:	outs   dx,DWORD PTR ds:[rsi]
  440249:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  440251:	(bad)  
  440252:	je     0x4402b5
  440254:	ins    BYTE PTR es:[rdi],dx
  440255:	outs   dx,DWORD PTR ds:[rsi]
  440256:	addr32 cs jb 0x4402bf
  44025a:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  44025f:	jae    0x44029b
  440261:	cmp    dh,BYTE PTR [rax+0x67]
  440264:	pop    rdi
  440265:	movsxd esp,DWORD PTR [rcx+0x74]
  440268:	(bad)  
  440269:	ins    BYTE PTR es:[rdi],dx
  44026a:	outs   dx,DWORD PTR ds:[rsi]
  44026b:	addr32 cs je 0x4402d4
  44026f:	js     0x4402e5
  440271:	cmp    eax,DWORD PTR [rax]
  440273:	add    BYTE PTR [rax],al
  440275:	add    BYTE PTR [rax],al
  440277:	add    BYTE PTR [rbx+0x45],dl
  44027a:	rex.WR
  44027b:	rex.RB
  44027c:	rex.XB push r12
  44027e:	and    BYTE PTR [rbx+0x2e],ah
  440281:	outs   dx,DWORD PTR ds:[rsi]
  440282:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  44028a:	(bad)  
  44028b:	je     0x4402ee
  44028d:	ins    BYTE PTR es:[rdi],dx
  44028e:	outs   dx,DWORD PTR ds:[rsi]
  44028f:	addr32 cs jb 0x4402f8
  440293:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  440298:	jae    0x4402ba
  44029a:	rex.RX push rdx
  44029c:	rex.WRXB
  44029d:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4402a1:	pop    rdi
  4402a2:	movsxd esp,DWORD PTR [rcx+0x74]
  4402a5:	(bad)  
  4402a6:	ins    BYTE PTR es:[rdi],dx
  4402a7:	outs   dx,DWORD PTR ds:[rsi]
  4402a8:	addr32 cs jo 0x440313
  4402ac:	pop    rdi
  4402ad:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4402b1:	jae    0x4402d3
  4402b3:	movsxd ebp,DWORD PTR [rax+riz*1]
  4402b6:	jo     0x44031f
  4402b8:	pop    rdi
  4402b9:	movsxd esp,DWORD PTR [rcx+0x74]
  4402bc:	(bad)  
  4402bd:	ins    BYTE PTR es:[rdi],dx
  4402be:	outs   dx,DWORD PTR ds:[rsi]
  4402bf:	addr32 cs jo 0x44032a
  4402c3:	pop    rdi
  4402c4:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  4402cb:	jae    0x4402ed
  4402cd:	imul   esp,DWORD PTR [rax],0x52454857
  4402d3:	and    BYTE PTR [r11+0x2e],r12b
  4402d7:	outs   dx,DWORD PTR ds:[rsi]
  4402d8:	imul   esp,DWORD PTR [rbp+rdi*1+0x69],0x686e692e
  4402e0:	jb     0x440347
  4402e2:	ins    BYTE PTR es:[rdi],dx
  4402e3:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6920444e
  4402eb:	imul   ebp,DWORD PTR cs:[rsi+0x68],0x65726170
  4402f3:	outs   dx,BYTE PTR ds:[rsi]
  4402f4:	je     0x440316
  4402f6:	cmp    eax,0x73252720
  4402fb:	(bad)  
  4402fc:	and    BYTE PTR [rdi+0x52],cl
  4402ff:	rex.R
  440300:	rex.RB push r10
  440302:	and    BYTE PTR [rdx+0x59],al
  440305:	and    BYTE PTR [rbx+0x2e],ah
  440308:	jb     0x44036f
  44030a:	ins    BYTE PTR es:[rdi],dx
  44030b:	outs   dx,BYTE PTR ds:[rsi]
  44030c:	(bad)  
  44030d:	ins    DWORD PTR es:[rdi],dx
  44030e:	cmp    eax,DWORD PTR gs:[rax]
  440311:	add    BYTE PTR [rax],al
  440313:	add    BYTE PTR [rax],al
  440315:	add    BYTE PTR [rax],al
  440317:	add    BYTE PTR [rsi+0x75],cl
  44031a:	ins    DWORD PTR es:[rdi],dx
  44031b:	(bad)  
  44031c:	gs jb  0x44033f
  44031f:	outs   dx,DWORD PTR ds:[rsi]
  440320:	data16 and BYTE PTR [rbx+0x68],ah
  440324:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x6c626174
  44032c:	gs jae 0x440369
  44032f:	and    BYTE PTR [rip+0x55282064],ah        # 0x556c2399
  440335:	jae    0x44039c
  440337:	and    BYTE PTR [rsp+riz*2+0x2b],bl
  44033b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  44033f:	ins    BYTE PTR es:[rdi],dx
  440340:	imul   esi,DWORD PTR [rbx+0x74],0x65687420
  440347:	ins    DWORD PTR es:[rdi],dx
  440348:	sub    DWORD PTR cs:[rax],eax
  44034b:	rex.XB push 0x20646c69
  440351:	je     0x4403b4
  440353:	(bad)  
  440354:	ins    BYTE PTR es:[rdi],dx
  440355:	gs jae 0x440358
  440358:	push   rsp
  440359:	jns    0x4403cb
  44035b:	gs and BYTE PTR fs:[rcx+riz*2+0x62],dh
  440361:	ins    BYTE PTR es:[rdi],dx
  440362:	and    BYTE PTR gs:[rdi+0x66],ch
  440366:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44036a:	cmp    ah,BYTE PTR gs:[rax]
  44036d:	and    eax,0x67700073
  440372:	pop    rdi
  440373:	movsxd esp,DWORD PTR [rcx+0x74]
  440376:	(bad)  
  440377:	ins    BYTE PTR es:[rdi],dx
  440378:	outs   dx,DWORD PTR ds:[rsi]
  440379:	add    BYTE PTR [edx+0x65],dl
  44037d:	jo     0x4403eb
  44037f:	imul   esp,DWORD PTR [rbx+0x61],0x65644920
  440386:	outs   dx,BYTE PTR ds:[rsi]
  440387:	je     0x4403f2
  440389:	je     0x440404
  44038b:	add    BYTE PTR [rax+0x61],cl
  44038e:	jae    0x4403b0
  440390:	rex.WRXB
  440391:	rex.WB
  440392:	rex.R jae 0x4403cf
  440395:	and    BYTE PTR [rcx+0x65],bh
  440398:	jae    0x44039a
  44039a:	rex.WRXB jo 0x440411
  44039d:	imul   ebp,DWORD PTR [rdi+0x6e],0x73
  4403a4:	and    DWORD PTR [rdi-0x3],ecx
  4403a7:	(bad)  
  4403a8:	std    
  4403a9:	push   rdi
  4403aa:	std    
  4403ab:	(bad)  
  4403ac:	std    
  4403ad:	push   rdi
  4403ae:	std    
  4403af:	(bad)  
  4403b0:	std    
  4403b1:	push   rdi
  4403b2:	std    
  4403b3:	(bad)  
  4403b4:	std    
  4403b5:	push   rdi
  4403b6:	std    
  4403b7:	(bad)  
  4403b8:	std    
  4403b9:	push   rdi
  4403ba:	std    
  4403bb:	(bad)  
  4403bc:	std    
  4403bd:	push   rdi
  4403be:	std    
  4403bf:	(bad)  
  4403c0:	std    
  4403c1:	push   rdi
  4403c2:	std    
  4403c3:	(bad)  
  4403c4:	std    
  4403c5:	push   rdi
  4403c6:	std    
  4403c7:	(bad)  
  4403c8:	std    
  4403c9:	push   rdi
  4403ca:	std    
  4403cb:	(bad)  
  4403cc:	std    
  4403cd:	push   rdi
  4403ce:	std    
  4403cf:	(bad)  
  4403d0:	std    
  4403d1:	push   rdi
  4403d2:	std    
  4403d3:	(bad)  
  4403d4:	std    
  4403d5:	push   rdi
  4403d6:	std    
  4403d7:	(bad)  
  4403d8:	std    
  4403d9:	push   rdi
  4403da:	std    
  4403db:	(bad)  
  4403dc:	std    
  4403dd:	push   rdi
  4403de:	std    
  4403df:	(bad)  
  4403e0:	std    
  4403e1:	push   rdi
  4403e2:	std    
  4403e3:	(bad)  
  4403e4:	fcom   QWORD PTR [rdi-0x3]
  4403e7:	(bad)  
  4403e8:	std    
  4403e9:	push   rdi
  4403ea:	std    
  4403eb:	(bad)  
  4403ec:	std    
  4403ed:	push   rdi
  4403ee:	std    
  4403ef:	call   QWORD PTR [rax-0x20002a9]
  4403f5:	push   rdi
  4403f6:	std    
  4403f7:	(bad)  
  4403f8:	std    
  4403f9:	push   rdi
  4403fa:	std    
  4403fb:	push   QWORD PTR [rcx-0x20002a9]
  440401:	push   rdi
  440402:	std    
  440403:	(bad)  
  440404:	std    
  440405:	push   rdi
  440406:	std    
  440407:	(bad)  
  440408:	std    
  440409:	push   rdi
  44040a:	std    
  44040b:	jmp    QWORD PTR [rbp+0x57]
  44040e:	std    
  44040f:	(bad)  
  440410:	std    
  440411:	push   rdi
  440412:	std    
  440413:	(bad)  
  440414:	std    
  440415:	push   rdi
  440416:	std    
  440417:	(bad)  
  440418:	std    
  440419:	push   rdi
  44041a:	std    
  44041b:	(bad)  
  44041c:	std    
  44041d:	push   rdi
  44041e:	std    
  44041f:	(bad)  
  440420:	cmp    dl,BYTE PTR [rdi-0x3]
  440423:	call   FWORD PTR [rcx]
  440425:	push   rdi
  440426:	std    
  440427:	(bad)  
  440428:	clc    
  440429:	push   rsi
  44042a:	std    
  44042b:	(bad)  
  44042c:	std    
  44042d:	push   rdi
  44042e:	std    
  44042f:	push   QWORD PTR [rdx]
  440431:	push   rsi
  440432:	std    
  440433:	dec    DWORD PTR [rsi+0x61]
  440436:	ins    DWORD PTR es:[rdi],dx
  440437:	add    BYTE PTR gs:[rbx+0x63],dl
  44043b:	push   0x616d65
  440440:	push   rbx
  440441:	rex.RB
  440442:	rex.WR
  440443:	rex.RB
  440444:	rex.XB push r12
  440446:	and    BYTE PTR [rsi+0x2e],ch
  440449:	outs   dx,BYTE PTR ds:[rsi]
  44044a:	jae    0x4404bc
  44044c:	outs   dx,BYTE PTR ds:[rsi]
  44044d:	(bad)  
  44044e:	ins    DWORD PTR es:[rdi],dx
  44044f:	and    BYTE PTR gs:[rcx+0x73],ah
  440453:	and    BYTE PTR [rdx],ah
  440455:	and    eax,0xa2c2273
  44045a:	and    BYTE PTR [rax],ah
  44045c:	jo     0x44048c
  44045e:	jo     0x4404d2
  440460:	outs   dx,DWORD PTR ds:[rsi]
  440461:	outs   dx,BYTE PTR ds:[rsi]
  440462:	(bad)  
  440463:	ins    DWORD PTR es:[rdi],dx
  440464:	and    BYTE PTR gs:[rcx+0x53],al
  440468:	and    BYTE PTR [rdx],ah
  44046a:	and    eax,0xa2c2273
  44046f:	and    BYTE PTR [rax],ah
  440471:	jo     0x4404da
  440473:	pop    rdi
  440474:	movsxd esp,DWORD PTR [rcx+0x74]
  440477:	(bad)  
  440478:	ins    BYTE PTR es:[rdi],dx
  440479:	outs   dx,DWORD PTR ds:[rsi]
  44047a:	outs   dx,WORD PTR cs:[esi]
  44047e:	jb     0x4404ed
  440480:	(bad)  
  440481:	je     0x4404e2
  440483:	je     0x4404fe
  440485:	jo     0x4404ec
  440487:	sub    BYTE PTR [rax+0x2e],dh
  44048a:	jo     0x4404fe
  44048c:	outs   dx,DWORD PTR ds:[rsi]
  44048d:	jb     0x4404f4
  44048f:	je     0x440505
  440491:	jns    0x440503
  440493:	gs sub al,0x20
  440496:	rex.WRX push rbp
  440498:	rex.WR
  440499:	sub    QWORD PTR [rax],r12
  44049c:	push   r11
  44049e:	and    BYTE PTR [rdx],ah
  4404a0:	and    eax,0xa2c2273
  4404a5:	add    BYTE PTR [rdx+0x65],dl
  4404a8:	jae    0x44051f
  4404aa:	ins    BYTE PTR es:[rdi],dx
  4404ab:	je     0x4404cd
  4404ad:	fs (bad) 
  4404af:	je     0x440512
  4404b1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4404b5:	add    BYTE PTR gs:[rcx+0x72],al
  4404b9:	addr32 jne 0x440529
  4404bc:	outs   dx,BYTE PTR gs:[rsi]
  4404be:	je     0x4404e0
  4404c0:	fs (bad) 
  4404c2:	je     0x440525
  4404c4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4404c8:	gs jae 0x4404cb
  4404cb:	add    BYTE PTR [rax],al
  4404cd:	add    BYTE PTR [rax],al
  4404cf:	add    BYTE PTR [rax],ah
  4404d1:	and    BYTE PTR [rbx+0x41],al
  4404d4:	push   rbx
  4404d5:	and    BYTE PTR [r15+0x48],r10b
  4404d9:	rex.RB
  4404da:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  4404de:	jo     0x440552
  4404e0:	outs   dx,DWORD PTR ds:[rsi]
  4404e1:	outs   dx,BYTE PTR ds:[rsi]
  4404e2:	(bad)  
  4404e3:	jb     0x44054c
  4404e5:	jae    0x440507
  4404e7:	cmp    eax,0x200a3020
  4404ec:	and    BYTE PTR [rax],ah
  4404ee:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4404f2:	rex.WRX and BYTE PTR [rbx+0x41],r8b
  4404f6:	push   rbx
  4404f7:	push   rsp
  4404f8:	sub    BYTE PTR [rdi],ah
  4404fa:	sub    ah,BYTE PTR [rdi]
  4404fc:	and    BYTE PTR [rcx+0x53],al
  4404ff:	and    BYTE PTR [rax+0x67],dh
  440502:	pop    rdi
  440503:	movsxd esp,DWORD PTR [rcx+0x74]
  440506:	(bad)  
  440507:	ins    BYTE PTR es:[rdi],dx
  440508:	outs   dx,DWORD PTR ds:[rsi]
  440509:	addr32 cs je 0x440572
  44050d:	js     0x440583
  44050f:	sub    DWORD PTR [rdx],ecx
  440511:	and    BYTE PTR [rax],ah
  440513:	and    BYTE PTR [rax],ah
  440515:	rex.RB
  440516:	rex.WR push rbx
  440518:	and    BYTE PTR [r8+0x67],r14b
  44051c:	pop    rdi
  44051d:	movsxd esp,DWORD PTR [rcx+0x74]
  440520:	(bad)  
  440521:	ins    BYTE PTR es:[rdi],dx
  440522:	outs   dx,DWORD PTR ds:[rsi]
  440523:	addr32 cs jo 0x44058e
  440527:	pop    rdi
  440528:	addr32 gs je 0x44058b
  44052c:	data16 jne 0x44059d
  44052f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440533:	outs   dx,BYTE PTR ds:[rsi]
  440534:	pop    rdi
  440535:	(bad)  
  440536:	jb     0x44059f
  440538:	jne    0x4405a7
  44053a:	outs   dx,BYTE PTR gs:[rsi]
  44053c:	je     0x4405b1
  44053e:	sub    BYTE PTR [rax+0x2e],dh
  440541:	outs   dx,DWORD PTR ds:[rsi]
  440542:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x4e452020
  44054a:	and    BYTE PTR [rcx+0x53],r8b
  44054e:	and    BYTE PTR [rdx],ah
  440550:	and    eax,0xa2c2273
  440555:	add    BYTE PTR [rax],al
  440557:	add    BYTE PTR [rax],ah
  440559:	and    BYTE PTR [rbx+0x41],al
  44055c:	push   rbx
  44055d:	and    BYTE PTR [r15+0x48],r10b
  440561:	rex.RB
  440562:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440566:	jo     0x4405da
  440568:	outs   dx,DWORD PTR ds:[rsi]
  440569:	outs   dx,BYTE PTR ds:[rsi]
  44056a:	(bad)  
  44056b:	jb     0x4405d4
  44056d:	jae    0x44058f
  44056f:	cmp    eax,0x200a3020
  440574:	and    BYTE PTR [rax],ah
  440576:	and    BYTE PTR [rax+rcx*2+0x45],dl
  44057a:	rex.WRX and BYTE PTR [rbx+0x41],r8b
  44057e:	push   rbx
  44057f:	push   rsp
  440580:	sub    BYTE PTR [rdi],ah
  440582:	sub    ah,BYTE PTR [rdi]
  440584:	and    BYTE PTR [rcx+0x53],al
  440587:	and    BYTE PTR [rax+0x67],dh
  44058a:	pop    rdi
  44058b:	movsxd esp,DWORD PTR [rcx+0x74]
  44058e:	(bad)  
  44058f:	ins    BYTE PTR es:[rdi],dx
  440590:	outs   dx,DWORD PTR ds:[rsi]
  440591:	addr32 cs je 0x4405fa
  440595:	js     0x44060b
  440597:	sub    DWORD PTR [rdx],ecx
  440599:	and    BYTE PTR [rax],ah
  44059b:	and    BYTE PTR [rax],ah
  44059d:	rex.RB
  44059e:	rex.WR push rbx
  4405a0:	or     r12b,BYTE PTR [r8]
  4405a3:	and    BYTE PTR [rax],ah
  4405a5:	and    BYTE PTR [rax+0x67],dh
  4405a8:	pop    rdi
  4405a9:	movsxd esp,DWORD PTR [rcx+0x74]
  4405ac:	(bad)  
  4405ad:	ins    BYTE PTR es:[rdi],dx
  4405ae:	outs   dx,DWORD PTR ds:[rsi]
  4405af:	addr32 cs (bad) 
  4405b2:	jb     0x440626
  4405b4:	(bad)  
  4405b5:	jns    0x440616
  4405b7:	je     0x440628
  4405b9:	pop    rdi
  4405ba:	jae    0x440630
  4405bc:	jb     0x440627
  4405be:	outs   dx,BYTE PTR ds:[rsi]
  4405bf:	sub    BYTE PTR [ecx+0x52],al
  4405c3:	push   rdx
  4405c4:	pop    r9
  4405c6:	sub    BYTE PTR [rdx],cl
  4405c8:	and    BYTE PTR [rax],ah
  4405ca:	and    BYTE PTR [rax],ah
  4405cc:	and    BYTE PTR [rax],ah
  4405ce:	push   rbx
  4405cf:	rex.RB
  4405d0:	rex.WR
  4405d1:	rex.RB
  4405d2:	rex.XB push r12
  4405d4:	or     ah,BYTE PTR [rax]
  4405d6:	and    BYTE PTR [rax],ah
  4405d8:	and    BYTE PTR [rax],ah
  4405da:	and    BYTE PTR [rax],ah
  4405dc:	and    BYTE PTR [rax+0x67],dh
  4405df:	pop    rdi
  4405e0:	movsxd esp,DWORD PTR [rcx+0x74]
  4405e3:	(bad)  
  4405e4:	ins    BYTE PTR es:[rdi],dx
  4405e5:	outs   dx,DWORD PTR ds:[rsi]
  4405e6:	outs   dx,WORD PTR cs:[esi]
  4405ea:	jb     0x440659
  4405ec:	(bad)  
  4405ed:	je     0x44064e
  4405ef:	je     0x44066a
  4405f1:	jo     0x440658
  4405f3:	sub    BYTE PTR [rax+0x2e],dh
  4405f6:	jo     0x44066a
  4405f8:	outs   dx,DWORD PTR ds:[rsi]
  4405f9:	(bad)  
  4405fa:	jb     0x440663
  4405fc:	je     0x440677
  4405fe:	jo     0x440665
  440600:	jae    0x44065d
  440602:	jae    0x440632
  440604:	imul   ebx,DWORD PTR [rbp+0x2c],0x4c554e20
  44060b:	sub    QWORD PTR [rdx],r9
  44060e:	and    BYTE PTR [rax],ah
  440610:	and    BYTE PTR [rax],ah
  440612:	and    BYTE PTR [rax],ah
  440614:	rex.RX push rdx
  440616:	rex.WRXB
  440617:	rex.WRB or r12b,BYTE PTR [r8]
  44061a:	and    BYTE PTR [rax],ah
  44061c:	and    BYTE PTR [rax],ah
  44061e:	and    BYTE PTR [rax],ah
  440620:	and    BYTE PTR [rax+0x67],dh
  440623:	pop    rdi
  440624:	movsxd esp,DWORD PTR [rcx+0x74]
  440627:	(bad)  
  440628:	ins    BYTE PTR es:[rdi],dx
  440629:	outs   dx,DWORD PTR ds:[rsi]
  44062a:	addr32 cs outs dx,BYTE PTR gs:[esi]
  44062f:	gs jb  0x440693
  440632:	je     0x440699
  440634:	pop    rdi
  440635:	jae    0x44069c
  440637:	jb     0x4406a2
  440639:	gs jae 0x440664
  44063c:	xor    BYTE PTR [rax+riz*1],ch
  44063f:	jo     0x4406a8
  440641:	pop    rdi
  440642:	movsxd esp,DWORD PTR [rcx+0x74]
  440645:	(bad)  
  440646:	ins    BYTE PTR es:[rdi],dx
  440647:	outs   dx,DWORD PTR ds:[rsi]
  440648:	addr32 cs (bad) 
  44064b:	jb     0x4406bf
  44064d:	(bad)  
  44064e:	jns    0x4406af
  440650:	jne    0x4406c2
  440652:	jo     0x4406b9
  440654:	jb     0x44067e
  440656:	jo     0x440686
  440658:	jo     0x4406cc
  44065a:	outs   dx,DWORD PTR ds:[rsi]
  44065b:	(bad)  
  44065c:	jb     0x4406c5
  44065e:	je     0x4406d9
  440660:	jo     0x4406c7
  440662:	jae    0x440690
  440664:	and    BYTE PTR [rcx],dh
  440666:	sub    DWORD PTR [rcx],ebp
  440668:	and    BYTE PTR [rcx+0x53],al
  44066b:	and    BYTE PTR [rbx+0x28],dh
  44066e:	imul   ebp,DWORD PTR [rcx],0x2020200a
  440674:	and    BYTE PTR [rcx],ch
  440676:	sub    al,0x20
  440678:	(bad)  
  440679:	sub    al,0x20
  44067b:	(bad)  
  44067c:	sub    DWORD PTR [rdx],ecx
  44067e:	and    BYTE PTR [rax],ah
  440680:	rex.RB
  440681:	rex.WRX
  440682:	and    BYTE PTR [rcx+0x53],r8b
  440686:	and    BYTE PTR [rdx],ah
  440688:	and    eax,0xa2c2273
  44068d:	add    BYTE PTR [rax],al
  44068f:	add    BYTE PTR [rax],ah
  440691:	and    BYTE PTR [rax+0x67],dh
  440694:	pop    rdi
  440695:	movsxd esp,DWORD PTR [rcx+0x74]
  440698:	(bad)  
  440699:	ins    BYTE PTR es:[rdi],dx
  44069a:	outs   dx,DWORD PTR ds:[rsi]
  44069b:	outs   dx,WORD PTR cs:[esi]
  44069f:	jb     0x44070e
  4406a1:	(bad)  
  4406a2:	je     0x440703
  4406a4:	je     0x44071f
  4406a6:	jo     0x44070d
  4406a8:	sub    BYTE PTR [rax+0x2e],dh
  4406ab:	jo     0x44071f
  4406ad:	outs   dx,DWORD PTR ds:[rsi]
  4406ae:	(bad)  
  4406af:	jb     0x440718
  4406b1:	je     0x44072c
  4406b3:	jo     0x44071a
  4406b5:	jae    0x440712
  4406b7:	xor    BYTE PTR [rbp+0x2c],bl
  4406ba:	and    BYTE PTR [rsi+0x55],cl
  4406bd:	rex.WR
  4406be:	sub    QWORD PTR [rax],r12
  4406c1:	push   r11
  4406c3:	and    BYTE PTR [rdx],ah
  4406c5:	and    eax,0xa2c2273
  4406ca:	add    BYTE PTR [rax],al
  4406cc:	add    BYTE PTR [rax],al
  4406ce:	add    BYTE PTR [rax],al
  4406d0:	and    BYTE PTR [rax],ah
  4406d2:	jo     0x44073b
  4406d4:	pop    rdi
  4406d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4406d8:	(bad)  
  4406d9:	ins    BYTE PTR es:[rdi],dx
  4406da:	outs   dx,DWORD PTR ds:[rsi]
  4406db:	outs   dx,DWORD PTR cs:[esi]
  4406de:	(bad)  
  4406df:	push   0x5f
  4406e1:	fs gs jae 0x440748
  4406e5:	jb     0x440750
  4406e7:	jo     0x44075d
  4406e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7028
  4406f0:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  4406f8:	jo     0x44076c
  4406fa:	outs   dx,DWORD PTR ds:[rsi]
  4406fb:	movsxd esp,DWORD PTR [rdi]
  4406fd:	sub    DWORD PTR [rax],esp
  4406ff:	(bad)  
  440700:	jae    0x440722
  440702:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e297b
  440708:	push   rdx
  440709:	rex.WRXB
  44070a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44070e:	pop    rdi
  44070f:	movsxd esp,DWORD PTR [rcx+0x74]
  440712:	(bad)  
  440713:	ins    BYTE PTR es:[rdi],dx
  440714:	outs   dx,DWORD PTR ds:[rsi]
  440715:	addr32 cs jo 0x440780
  440719:	pop    rdi
  44071a:	jo     0x44078e
  44071c:	outs   dx,DWORD PTR ds:[rsi]
  44071d:	movsxd esp,DWORD PTR [rax]
  44071f:	jo     0x44072b
  440721:	and    BYTE PTR [rax],ah
  440723:	and    BYTE PTR [rax],ah
  440725:	and    BYTE PTR [rbp+rax*2+0x46],cl
  440729:	push   rsp
  44072a:	and    BYTE PTR [rdx+0x4f],cl
  44072d:	rex.WB
  44072e:	rex.WRX and BYTE PTR [rax+0x67],r14b
  440732:	pop    rdi
  440733:	movsxd esp,DWORD PTR [rcx+0x74]
  440736:	(bad)  
  440737:	ins    BYTE PTR es:[rdi],dx
  440738:	outs   dx,DWORD PTR ds:[rsi]
  440739:	addr32 cs jo 0x4407a4
  44073d:	pop    rdi
  44073e:	outs   dx,BYTE PTR ds:[rsi]
  44073f:	(bad)  
  440740:	ins    DWORD PTR es:[rdi],dx
  440741:	gs jae 0x4407b4
  440744:	(bad)  
  440745:	movsxd esp,DWORD PTR [rbp+0x20]
  440748:	outs   dx,BYTE PTR ds:[rsi]
  440749:	and    BYTE PTR [rdi+0x4e],cl
  44074c:	and    BYTE PTR [rsi+0x2e],ch
  44074f:	outs   dx,DWORD PTR ds:[rsi]
  440750:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  440758:	jb     0x4407c9
  44075a:	outs   dx,BYTE PTR ds:[rsi]
  44075b:	(bad)  
  44075c:	ins    DWORD PTR es:[rdi],dx
  44075d:	gs jae 0x4407d0
  440760:	(bad)  
  440761:	movsxd esp,DWORD PTR [rbp+0xa]
  440764:	push   rdi
  440765:	rex.W
  440766:	rex.RB push r10
  440768:	and    BYTE PTR [r8+0x2e],r14b
  44076c:	jo     0x4407e0
  44076e:	outs   dx,DWORD PTR ds:[rsi]
  44076f:	imul   esi,DWORD PTR [rbx+0x61],0xa6767
  440776:	add    BYTE PTR [rax],al
  440778:	and    BYTE PTR [rax],ah
  44077a:	and    BYTE PTR [rax],ah
  44077c:	and    BYTE PTR [rax],ah
  44077e:	rex.B
  44077f:	rex.WRX
  440780:	and    BYTE PTR [rsi+0x2e],r13b
  440784:	outs   dx,BYTE PTR ds:[rsi]
  440785:	jae    0x4407f7
  440787:	outs   dx,BYTE PTR ds:[rsi]
  440788:	(bad)  
  440789:	ins    DWORD PTR es:[rdi],dx
  44078a:	and    BYTE PTR gs:[rsi+rdi*1],bh
  44078e:	and    BYTE PTR [rdi],ah
  440790:	jo     0x4407f9
  440792:	pop    rdi
  440793:	movsxd esp,DWORD PTR [rcx+0x74]
  440796:	(bad)  
  440797:	ins    BYTE PTR es:[rdi],dx
  440798:	outs   dx,DWORD PTR ds:[rsi]
  440799:	addr32 (bad) 
  44079b:	or     ah,BYTE PTR [rax]
  44079d:	and    BYTE PTR [rax],ah
  44079f:	and    BYTE PTR [rax],ah
  4407a1:	and    BYTE PTR [rcx+0x4e],al
  4407a4:	and    BYTE PTR [rsi+0x2e],r13b
  4407a8:	outs   dx,BYTE PTR ds:[rsi]
  4407a9:	jae    0x44081b
  4407ab:	outs   dx,BYTE PTR ds:[rsi]
  4407ac:	(bad)  
  4407ad:	ins    DWORD PTR es:[rdi],dx
  4407ae:	and    BYTE PTR gs:[rsi+rdi*1],bh
  4407b2:	and    BYTE PTR [rdi],ah
  4407b4:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  4407bb:	je     0x440826
  4407bd:	outs   dx,DWORD PTR ds:[rsi]
  4407be:	outs   dx,BYTE PTR ds:[rsi]
  4407bf:	pop    rdi
  4407c0:	jae    0x440825
  4407c2:	push   0x27616d65
  4407c7:	or     al,BYTE PTR [rax]
  4407c9:	add    BYTE PTR [rax],al
  4407cb:	add    BYTE PTR [rax],al
  4407cd:	add    BYTE PTR [rax],al
  4407cf:	add    BYTE PTR [rax+0x67],dh
  4407d2:	pop    rdi
  4407d3:	movsxd esp,DWORD PTR [rcx+0x74]
  4407d6:	(bad)  
  4407d7:	ins    BYTE PTR es:[rdi],dx
  4407d8:	outs   dx,DWORD PTR ds:[rsi]
  4407d9:	addr32 cs jo 0x440844
  4407dd:	pop    rdi
  4407de:	data16 jne 0x44084f
  4407e1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4407e5:	outs   dx,BYTE PTR ds:[rsi]
  4407e6:	pop    rdi
  4407e7:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  4407ee:	(bad)  
  4407ef:	ins    BYTE PTR es:[rdi],dx
  4407f0:	sub    BYTE PTR gs:[rax+0x2e],dh
  4407f4:	outs   dx,DWORD PTR ds:[rsi]
  4407f5:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x72702e70
  4407fd:	outs   dx,DWORD PTR ds:[rsi]
  4407fe:	outs   dx,BYTE PTR ds:[rsi]
  4407ff:	(bad)  
  440800:	ins    DWORD PTR es:[rdi],dx
  440801:	add    BYTE PTR gs:[rsi+0x2e],ch
  440805:	outs   dx,BYTE PTR ds:[rsi]
  440806:	jae    0x440878
  440808:	outs   dx,BYTE PTR ds:[rsi]
  440809:	(bad)  
  44080a:	ins    DWORD PTR es:[rdi],dx
  44080b:	add    BYTE PTR gs:[rdi+0x52],cl
  44080f:	rex.R
  440810:	rex.RB push r10
  440812:	and    BYTE PTR [rdx+0x59],al
  440815:	and    BYTE PTR [rcx],dh
  440817:	sub    al,0x20
  440819:	xor    ch,BYTE PTR [rax+riz*1]
  44081c:	xor    al,0x3b
  44081e:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  440822:	je     0x440844
  440824:	outs   dx,DWORD PTR ds:[rsi]
  440825:	data16 and BYTE PTR [rcx+0x67],ah
  440829:	addr32 jb 0x440891
  44082c:	addr32 (bad) 
  44082e:	je     0x440895
  440830:	and    BYTE PTR [rsi+0x75],ah
  440833:	outs   dx,BYTE PTR ds:[rsi]
  440834:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440838:	outs   dx,BYTE PTR ds:[rsi]
  440839:	jae    0x44083b
  44083b:	add    BYTE PTR [rax],al
  44083d:	add    BYTE PTR [rax],al
  44083f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  440843:	and    BYTE PTR [rbx+0x65],dh
  440846:	jb     0x4408be
  440848:	gs jb  0x44086b
  44084b:	sub    BYTE PTR [rsi+0x65],dh
  44084e:	jb     0x4408c3
  440850:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  440857:	and    eax,0x64202964
  44085c:	outs   dx,DWORD PTR ds:[rsi]
  44085d:	gs jae 0x440880
  440860:	outs   dx,BYTE PTR ds:[rsi]
  440861:	outs   dx,DWORD PTR ds:[rsi]
  440862:	je     0x440884
  440864:	jae    0x4408db
  440866:	jo     0x4408d8
  440868:	outs   dx,DWORD PTR ds:[rsi]
  440869:	jb     0x4408df
  44086b:	and    BYTE PTR [rcx+riz*2+0x62],dh
  44086f:	ins    BYTE PTR es:[rdi],dx
  440870:	gs jae 0x4408e3
  440873:	(bad)  
  440874:	movsxd esp,DWORD PTR [rbp+0x73]
  440877:	or     al,BYTE PTR cs:[rax]
  44087a:	rex.WRXB ja 0x4408eb
  44087d:	gs jb  0x440880
  440880:	push   rbx
  440881:	rex.RB
  440882:	rex.WR
  440883:	rex.RB
  440884:	rex.XB push r12
  440886:	and    BYTE PTR [rbx+0x70],dh
  440889:	movsxd ebp,DWORD PTR [rsi+0x61]
  44088c:	ins    DWORD PTR es:[rdi],dx
  44088d:	and    BYTE PTR gs:[rcx+0x53],al
  440891:	and    BYTE PTR [rdx],ah
  440893:	and    eax,0xa2c2273
  440898:	and    BYTE PTR [rax],ah
  44089a:	jo     0x440903
  44089c:	pop    rdi
  44089d:	movsxd esp,DWORD PTR [rcx+0x74]
  4408a0:	(bad)  
  4408a1:	ins    BYTE PTR es:[rdi],dx
  4408a2:	outs   dx,DWORD PTR ds:[rsi]
  4408a3:	addr32 cs jo 0x44090e
  4408a7:	pop    rdi
  4408a8:	addr32 gs je 0x44090b
  4408ac:	jne    0x440921
  4408ae:	gs jb  0x440913
  4408b1:	jns    0x44091c
  4408b3:	sub    BYTE PTR fs:[rbx+0x70],dh
  4408b7:	movsxd ebp,DWORD PTR [rdi+0x77]
  4408ba:	outs   dx,BYTE PTR ds:[rsi]
  4408bb:	gs jb  0x4408e7
  4408be:	and    BYTE PTR [rcx+0x53],al
  4408c1:	and    BYTE PTR [rdx],ah
  4408c3:	and    eax,0xa2c2273
  4408c8:	and    BYTE PTR [rax],ah
  4408ca:	jo     0x440933
  4408cc:	pop    rdi
  4408cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4408d0:	(bad)  
  4408d1:	ins    BYTE PTR es:[rdi],dx
  4408d2:	outs   dx,DWORD PTR ds:[rsi]
  4408d3:	addr32 cs jo 0x44093e
  4408d7:	pop    rdi
  4408d8:	je     0x44093b
  4408da:	(bad)  
  4408db:	ins    BYTE PTR es:[rdi],dx
  4408dc:	gs jae 0x44094f
  4408df:	(bad)  
  4408e0:	movsxd esp,DWORD PTR [rbp+0x5f]
  4408e3:	ins    BYTE PTR es:[rdi],dx
  4408e4:	outs   dx,DWORD PTR ds:[rsi]
  4408e5:	movsxd esp,DWORD PTR [rcx+0x74]
  4408e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x64696f28
  4408ef:	sub    DWORD PTR [rax],esp
  4408f1:	push   r11
  4408f3:	and    BYTE PTR [rdx],ah
  4408f5:	and    eax,0x4c002273
  4408fa:	outs   dx,DWORD PTR ds:[rsi]
  4408fb:	movsxd esp,DWORD PTR [rcx+0x74]
  4408fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  440905:	add    BYTE PTR [rax],al
  440907:	add    BYTE PTR [rbx+0x45],dl
  44090a:	rex.WR
  44090b:	rex.RB
  44090c:	rex.XB push r12
  44090e:	and    BYTE PTR [rbx+0x70],dh
  440911:	movsxd ebp,DWORD PTR [rsi+0x61]
  440914:	ins    DWORD PTR es:[rdi],dx
  440915:	and    BYTE PTR gs:[rcx+0x53],al
  440919:	and    BYTE PTR [rdx],ah
  44091b:	and    eax,0xa2c2273
  440920:	and    BYTE PTR [rax],ah
  440922:	jo     0x44098b
  440924:	pop    rdi
  440925:	movsxd esp,DWORD PTR [rcx+0x74]
  440928:	(bad)  
  440929:	ins    BYTE PTR es:[rdi],dx
  44092a:	outs   dx,DWORD PTR ds:[rsi]
  44092b:	addr32 cs jo 0x440996
  44092f:	pop    rdi
  440930:	addr32 gs je 0x440993
  440934:	jne    0x4409a9
  440936:	gs jb  0x44099b
  440939:	jns    0x4409a4
  44093b:	sub    BYTE PTR fs:[rbx+0x70],dh
  44093f:	movsxd ebp,DWORD PTR [rdi+0x77]
  440942:	outs   dx,BYTE PTR ds:[rsi]
  440943:	gs jb  0x44096f
  440946:	and    BYTE PTR [rcx+0x53],al
  440949:	and    BYTE PTR [rdx],ah
  44094b:	and    eax,0xa2c2273
  440950:	and    BYTE PTR [rax],ah
  440952:	jae    0x4409c4
  440954:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
  440958:	(bad)  
  440959:	je     0x4409c4
  44095b:	outs   dx,DWORD PTR ds:[rsi]
  44095c:	outs   dx,BYTE PTR ds:[rsi]
  44095d:	and    BYTE PTR [rcx+0x53],al
  440960:	and    BYTE PTR [rdx],ah
  440962:	and    eax,0x2c002273
  440967:	or     ah,BYTE PTR [rax]
  440969:	and    BYTE PTR [rax],al
  44096b:	jae    0x4409dd
  44096d:	movsxd esp,DWORD PTR [rcx+0x63]
  440970:	ins    BYTE PTR es:[rdi],dx
  440971:	add    BYTE PTR [rdx+rcx*1],ch
  440974:	and    BYTE PTR [rax],ah
  440976:	jae    0x4409e8
  440978:	movsxd ebp,DWORD PTR [rdi+0x70]
  44097b:	je     0x4409e6
  44097d:	outs   dx,DWORD PTR ds:[rsi]
  44097e:	outs   dx,BYTE PTR ds:[rsi]
  44097f:	jae    0x4409a1
  440981:	push   r11
  440983:	and    BYTE PTR [rdx],ah
  440985:	and    eax,0x2273
  44098a:	add    BYTE PTR [rax],al
  44098c:	add    BYTE PTR [rax],al
  44098e:	add    BYTE PTR [rax],al
  440990:	sub    al,0xa
  440992:	and    BYTE PTR [rax],ah
  440994:	jo     0x4409fd
  440996:	pop    rdi
  440997:	movsxd esp,DWORD PTR [rcx+0x74]
  44099a:	(bad)  
  44099b:	ins    BYTE PTR es:[rdi],dx
  44099c:	outs   dx,DWORD PTR ds:[rsi]
  44099d:	addr32 cs jae 0x440a09
  4409a1:	outs   dx,DWORD PTR ds:[rsi]
  4409a2:	(bad)  
  4409a3:	push   0x5f
  4409a5:	fs gs jae 0x440a0c
  4409a9:	jb     0x440a14
  4409ab:	jo     0x440a21
  4409ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x64696f28
  4409b4:	sub    al,0x20
  4409b6:	(bad)  
  4409b7:	jo     0x440a20
  4409b9:	pop    rdi
  4409ba:	je     0x440a1d
  4409bc:	(bad)  
  4409bd:	ins    BYTE PTR es:[rdi],dx
  4409be:	gs jae 0x440a31
  4409c1:	(bad)  
  4409c2:	movsxd esp,DWORD PTR [rbp+0x27]
  4409c5:	sub    DWORD PTR [rax],esp
  4409c7:	push   r11
  4409c9:	and    BYTE PTR [rdx],ah
  4409cb:	and    eax,0x2273
  4409d0:	or     al,BYTE PTR [rsi+0x52]
  4409d3:	rex.WRXB
  4409d4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4409d8:	pop    rdi
  4409d9:	movsxd esp,DWORD PTR [rcx+0x74]
  4409dc:	(bad)  
  4409dd:	ins    BYTE PTR es:[rdi],dx
  4409de:	outs   dx,DWORD PTR ds:[rsi]
  4409df:	addr32 cs jo 0x440a4a
  4409e3:	pop    rdi
  4409e4:	je     0x440a47
  4409e6:	(bad)  
  4409e7:	ins    BYTE PTR es:[rdi],dx
  4409e8:	gs jae 0x440a5b
  4409eb:	(bad)  
  4409ec:	movsxd esp,DWORD PTR [rbp+0xa]
  4409ef:	add    BYTE PTR [rbx+0x70],dh
  4409f2:	movsxd ebp,DWORD PTR [rsi+0x61]
  4409f5:	ins    DWORD PTR es:[rdi],dx
  4409f6:	add    BYTE PTR gs:[rdi+0x52],cl
  4409fa:	rex.R
  4409fb:	rex.RB push r10
  4409fd:	and    BYTE PTR [rdx+0x59],al
  440a00:	and    BYTE PTR [rcx],dh
  440a02:	cmp    eax,DWORD PTR [rax]
  440a04:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  440a0c:	je     0x440a6f
  440a0e:	(bad)  
  440a0f:	ins    BYTE PTR es:[rdi],dx
  440a10:	gs jae 0x440a83
  440a13:	(bad)  
  440a14:	movsxd esp,DWORD PTR [rbp+0x73]
  440a17:	add    BYTE PTR [rcx+0x6e],ah
  440a1a:	je     0x440a93
  440a1c:	push   rbx
  440a1d:	sub    eax,DWORD PTR [rax]
  440a1f:	add    BYTE PTR [rsp+riz*2+0x66],bl
  440a23:	and    BYTE PTR [rdi+0x6e],ch
  440a26:	ins    BYTE PTR es:[rdi],dx
  440a27:	jns    0x440a49
  440a29:	je     0x440a8c
  440a2b:	imul   esp,DWORD PTR [rbp+0x73],0x20
  440a2f:	pop    rbx
  440a30:	(bad)  
  440a31:	outs   dx,BYTE PTR ds:[rsi]
  440a32:	je     0x440aab
  440a34:	push   rbx
  440a35:	sub    ebx,DWORD PTR [rbp+0x20]
  440a38:	(bad)  
  440a39:	jae    0x440a5b
  440a3b:	outs   dx,DWORD PTR ds:[rsi]
  440a3c:	jo     0x440ab2
  440a3e:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73
  440a45:	add    BYTE PTR [rax],al
  440a47:	add    BYTE PTR [rsp+riz*2+0x66],bl
  440a4b:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  440a4f:	jae    0x440a71
  440a51:	outs   dx,BYTE PTR ds:[rsi]
  440a52:	outs   dx,DWORD PTR ds:[rsi]
  440a53:	je     0x440a75
  440a55:	je     0x440ab8
  440a57:	imul   esp,DWORD PTR [rbp+0x20],0x61
  440a5b:	and    BYTE PTR [rdx],ah
  440a5d:	ja     0x440a81
  440a5f:	and    BYTE PTR [rdi+0x70],ch
  440a62:	je     0x440acd
  440a64:	outs   dx,DWORD PTR ds:[rsi]
  440a65:	outs   dx,BYTE PTR ds:[rsi]
  440a66:	and    BYTE PTR [rdi+0x69],dh
  440a69:	je     0x440ad3
  440a6b:	and    BYTE PTR [rbx+0x65],dh
  440a6e:	jb     0x440ae6
  440a70:	gs jb  0x440a93
  440a73:	jbe    0x440ada
  440a75:	jb     0x440aea
  440a77:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  440a7e:	and    eax,0xa64
  440a83:	add    BYTE PTR [rax],al
  440a85:	add    BYTE PTR [rax],al
  440a87:	add    BYTE PTR [rbx+0x45],dl
  440a8a:	rex.WR
  440a8b:	rex.RB
  440a8c:	rex.XB push r12
  440a8e:	and    BYTE PTR [rsi+0x2e],ch
  440a91:	outs   dx,BYTE PTR ds:[rsi]
  440a92:	jae    0x440b04
  440a94:	outs   dx,BYTE PTR ds:[rsi]
  440a95:	(bad)  
  440a96:	ins    DWORD PTR es:[rdi],dx
  440a97:	and    BYTE PTR gs:[rcx+0x73],ah
  440a9b:	and    BYTE PTR [rdx],ah
  440a9d:	and    eax,0xa2c2273
  440aa2:	and    BYTE PTR [rax],ah
  440aa4:	jo     0x440ad4
  440aa6:	jo     0x440b1a
  440aa8:	outs   dx,DWORD PTR ds:[rsi]
  440aa9:	outs   dx,BYTE PTR ds:[rsi]
  440aaa:	(bad)  
  440aab:	ins    DWORD PTR es:[rdi],dx
  440aac:	and    BYTE PTR gs:[rcx+0x73],ah
  440ab0:	and    BYTE PTR [rdx],ah
  440ab2:	and    eax,0xa2c2273
  440ab7:	add    BYTE PTR [rax],ah
  440ab9:	and    BYTE PTR [rax+0x67],dh
  440abc:	pop    rdi
  440abd:	movsxd esp,DWORD PTR [rcx+0x74]
  440ac0:	(bad)  
  440ac1:	ins    BYTE PTR es:[rdi],dx
  440ac2:	outs   dx,DWORD PTR ds:[rsi]
  440ac3:	addr32 cs jo 0x440b2e
  440ac7:	pop    rdi
  440ac8:	addr32 gs je 0x440b2b
  440acc:	data16 jne 0x440b3d
  440acf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440ad3:	outs   dx,BYTE PTR ds:[rsi]
  440ad4:	pop    rdi
  440ad5:	jb     0x440b3c
  440ad7:	jae    0x440b4e
  440ad9:	ins    BYTE PTR es:[rdi],dx
  440ada:	je     0x440b04
  440adc:	jo     0x440b0c
  440ade:	outs   dx,DWORD PTR ds:[rsi]
  440adf:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x22207361
  440ae7:	and    eax,0xa2c2273
  440aec:	and    BYTE PTR [rax],ah
  440aee:	jo     0x440b57
  440af0:	pop    rdi
  440af1:	movsxd esp,DWORD PTR [rcx+0x74]
  440af4:	(bad)  
  440af5:	ins    BYTE PTR es:[rdi],dx
  440af6:	outs   dx,DWORD PTR ds:[rsi]
  440af7:	addr32 cs jo 0x440b62
  440afb:	pop    rdi
  440afc:	addr32 gs je 0x440b5f
  440b00:	data16 jne 0x440b71
  440b03:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440b07:	outs   dx,BYTE PTR ds:[rsi]
  440b08:	pop    rdi
  440b09:	(bad)  
  440b0a:	jb     0x440b73
  440b0c:	jne    0x440b7b
  440b0e:	outs   dx,BYTE PTR gs:[rsi]
  440b10:	je     0x440b85
  440b12:	sub    BYTE PTR [rax+0x2e],dh
  440b15:	outs   dx,DWORD PTR ds:[rsi]
  440b16:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x22207361
  440b1e:	and    eax,0xa2c2273
  440b23:	and    BYTE PTR [rbx+0x41],al
  440b26:	push   rbx
  440b27:	or     r12b,BYTE PTR [r8]
  440b2a:	and    BYTE PTR [rdi+0x48],dl
  440b2d:	rex.RB
  440b2e:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440b32:	jo     0x440ba6
  440b34:	outs   dx,DWORD PTR ds:[rsi]
  440b35:	imul   esi,DWORD PTR [rbx+0x61],0x54206767
  440b3c:	rex.W
  440b3d:	rex.RB
  440b3e:	rex.WRX and BYTE PTR [rdi],r12b
  440b41:	and    eax,0x200a2773
  440b46:	and    BYTE PTR [rdi+0x48],dl
  440b49:	rex.RB
  440b4a:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440b4e:	jo     0x440bc2
  440b50:	outs   dx,DWORD PTR ds:[rsi]
  440b51:	imul   esi,DWORD PTR [rbx+0x77],0x6f646e69
  440b58:	ja     0x440b7a
  440b5a:	push   rsp
  440b5b:	rex.W
  440b5c:	rex.RB
  440b5d:	rex.WRX and BYTE PTR [rdi],r12b
  440b60:	and    eax,0x200a2773
  440b65:	and    BYTE PTR [rdi+0x48],dl
  440b68:	rex.RB
  440b69:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440b6d:	jo     0x440be1
  440b6f:	outs   dx,DWORD PTR ds:[rsi]
  440b70:	jb     0x440bd7
  440b72:	je     0x440be8
  440b74:	jns    0x440be6
  440b76:	and    BYTE PTR gs:[rip+0x67702720],bh        # 0x67b4329d
  440b7d:	pop    rdi
  440b7e:	movsxd esp,DWORD PTR [rcx+0x74]
  440b81:	(bad)  
  440b82:	ins    BYTE PTR es:[rdi],dx
  440b83:	outs   dx,DWORD PTR ds:[rsi]
  440b84:	addr32 cs je 0x440bfa
  440b88:	imul   esp,DWORD PTR [rdi+0x67],0x3a277265
  440b8f:	cmp    dh,BYTE PTR [rax+0x67]
  440b92:	pop    rdi
  440b93:	movsxd esp,DWORD PTR [rcx+0x74]
  440b96:	(bad)  
  440b97:	ins    BYTE PTR es:[rdi],dx
  440b98:	outs   dx,DWORD PTR ds:[rsi]
  440b99:	addr32 cs jb 0x440c02
  440b9d:	addr32 je 0x440c19
  440ba0:	jo     0x440c07
  440ba2:	and    BYTE PTR [rax+rcx*2+0x45],dl
  440ba6:	rex.WRX and BYTE PTR [rdi],r12b
  440ba9:	and    eax,0x200a2773
  440bae:	and    BYTE PTR [rbp+0x4c],al
  440bb1:	push   rbx
  440bb2:	and    BYTE PTR [r15],r12b
  440bb5:	and    eax,0x200a2773
  440bba:	rex.RB
  440bbb:	rex.WRX
  440bbc:	and    BYTE PTR [rcx+0x73],r12b
  440bc0:	and    BYTE PTR [rdx],ah
  440bc2:	and    eax,0x6e002273
  440bc7:	outs   dx,DWORD PTR ds:[rsi]
  440bc8:	jb     0x440c37
  440bca:	(bad)  
  440bcb:	ins    BYTE PTR es:[rdi],dx
  440bcc:	add    BYTE PTR [rdx+rsi*2+0x69],dh
  440bd0:	addr32 addr32 gs jb 0x440bd5
  440bd5:	ja     0x440c40
  440bd7:	outs   dx,BYTE PTR ds:[rsi]
  440bd8:	outs   dx,DWORD PTR fs:[rsi]
  440bda:	ja     0x440bdc
  440bdc:	(bad)  
  440bdd:	addr32 add BYTE PTR [eax],ah
  440be1:	and    BYTE PTR [rbx+0x41],al
  440be4:	push   rbx
  440be5:	and    BYTE PTR [r15+0x48],r10b
  440be9:	rex.RB
  440bea:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440bee:	jo     0x440c62
  440bf0:	outs   dx,DWORD PTR ds:[rsi]
  440bf1:	jb     0x440c58
  440bf3:	je     0x440c68
  440bf5:	gs je  0x440c18
  440bf8:	push   rsp
  440bf9:	rex.W
  440bfa:	rex.RB
  440bfb:	rex.WRX and BYTE PTR [rdi],r12b
  440bfe:	push   rbx
  440bff:	rex.RB push r12
  440c01:	rex.WRXB
  440c02:	rex.RX and BYTE PTR [rdi],r12b
  440c05:	and    BYTE PTR [rbp+0x4c],al
  440c08:	push   rbx
  440c09:	and    BYTE PTR [r15],r12b
  440c0c:	(bad)  
  440c0d:	and    BYTE PTR [rbp+0x4e],al
  440c10:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  440c15:	and    BYTE PTR [rax],ah
  440c17:	jo     0x440c80
  440c19:	pop    rdi
  440c1a:	movsxd esp,DWORD PTR [rcx+0x74]
  440c1d:	(bad)  
  440c1e:	ins    BYTE PTR es:[rdi],dx
  440c1f:	outs   dx,DWORD PTR ds:[rsi]
  440c20:	outs   dx,WORD PTR cs:[esi]
  440c24:	jb     0x440c93
  440c26:	(bad)  
  440c27:	je     0x440c88
  440c29:	je     0x440ca4
  440c2b:	jo     0x440c92
  440c2d:	sub    BYTE PTR [rax+0x2e],dh
  440c30:	jo     0x440ca4
  440c32:	outs   dx,DWORD PTR ds:[rsi]
  440c33:	jb     0x440c9a
  440c35:	je     0x440cab
  440c37:	jns    0x440ca9
  440c39:	gs sub al,0x20
  440c3c:	rex.WRX push rbp
  440c3e:	rex.WR
  440c3f:	sub    QWORD PTR [rax],r12
  440c42:	(bad)  
  440c43:	jae    0x440c65
  440c45:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa702ebe
  440c4b:	and    BYTE PTR [rax],ah
  440c4d:	rex.XB
  440c4e:	push   r11
  440c50:	and    BYTE PTR [r15+0x48],r10b
  440c54:	rex.RB
  440c55:	rex.WRX and BYTE PTR [rax+0x72],r14b
  440c59:	outs   dx,DWORD PTR ds:[rsi]
  440c5a:	(bad)  
  440c5b:	ins    BYTE PTR es:[rdi],dx
  440c5c:	ins    BYTE PTR es:[rdi],dx
  440c5d:	(bad)  
  440c5e:	jb     0x440cc7
  440c60:	je     0x440cdb
  440c62:	jo     0x440cc9
  440c64:	jae    0x440c86
  440c66:	rex.WB push r11
  440c68:	and    BYTE PTR [rsi+0x4f],cl
  440c6b:	push   rsp
  440c6c:	and    BYTE PTR [rsi+0x55],cl
  440c6f:	rex.WR
  440c70:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  440c75:	rex.WRX or r12b,BYTE PTR [rax]
  440c78:	and    BYTE PTR [rax],ah
  440c7a:	and    BYTE PTR [rax+0x67],dh
  440c7d:	pop    rdi
  440c7e:	movsxd esp,DWORD PTR [rcx+0x74]
  440c81:	(bad)  
  440c82:	ins    BYTE PTR es:[rdi],dx
  440c83:	outs   dx,DWORD PTR ds:[rsi]
  440c84:	addr32 cs (bad) 
  440c87:	jb     0x440cfb
  440c89:	(bad)  
  440c8a:	jns    0x440ceb
  440c8c:	je     0x440cfd
  440c8e:	pop    rdi
  440c8f:	jae    0x440d05
  440c91:	jb     0x440cfc
  440c93:	outs   dx,BYTE PTR ds:[rsi]
  440c94:	sub    BYTE PTR [ecx+0x52],al
  440c98:	push   rdx
  440c99:	pop    r9
  440c9b:	sub    BYTE PTR [rdx],cl
  440c9d:	and    BYTE PTR [rax],ah
  440c9f:	and    BYTE PTR [rax],ah
  440ca1:	and    BYTE PTR [rax],ah
  440ca3:	push   rbx
  440ca4:	rex.RB
  440ca5:	rex.WR
  440ca6:	rex.RB
  440ca7:	rex.XB push r12
  440ca9:	or     ah,BYTE PTR [rax]
  440cab:	and    BYTE PTR [rax],ah
  440cad:	and    BYTE PTR [rax],ah
  440caf:	and    BYTE PTR [rax],ah
  440cb1:	and    BYTE PTR [rbx+0x41],al
  440cb4:	push   rbx
  440cb5:	or     r12b,BYTE PTR [r8]
  440cb8:	and    BYTE PTR [rax],ah
  440cba:	and    BYTE PTR [rax],ah
  440cbc:	and    BYTE PTR [rax],ah
  440cbe:	and    BYTE PTR [rax],ah
  440cc0:	and    BYTE PTR [rdi+0x48],dl
  440cc3:	rex.RB
  440cc4:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440cc8:	jo     0x440d3c
  440cca:	outs   dx,DWORD PTR ds:[rsi]
  440ccb:	(bad)  
  440ccc:	jb     0x440d35
  440cce:	ins    DWORD PTR es:[rdi],dx
  440ccf:	outs   dx,DWORD PTR ds:[rsi]
  440cd0:	fs gs jae 0x440d2f
  440cd4:	jae    0x440d04
  440cd6:	imul   ebx,DWORD PTR [rbp+0x20],0x6927203d
  440cdd:	(bad)  
  440cde:	and    BYTE PTR [rax+rcx*2+0x45],dl
  440ce2:	rex.WRX and BYTE PTR [rdi],r12b
  440ce5:	(bad)  
  440ce6:	or     ah,BYTE PTR [rax]
  440ce8:	and    BYTE PTR [rax],ah
  440cea:	and    BYTE PTR [rax],ah
  440cec:	and    BYTE PTR [rax],ah
  440cee:	and    BYTE PTR [rax],ah
  440cf0:	and    BYTE PTR [rdi+0x48],dl
  440cf3:	rex.RB
  440cf4:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440cf8:	jo     0x440d6c
  440cfa:	outs   dx,DWORD PTR ds:[rsi]
  440cfb:	(bad)  
  440cfc:	jb     0x440d65
  440cfe:	ins    DWORD PTR es:[rdi],dx
  440cff:	outs   dx,DWORD PTR ds:[rsi]
  440d00:	fs gs jae 0x440d5f
  440d04:	jae    0x440d34
  440d06:	imul   ebx,DWORD PTR [rbp+0x20],0x6f27203d
  440d0d:	(bad)  
  440d0e:	and    BYTE PTR [rax+rcx*2+0x45],dl
  440d12:	rex.WRX and BYTE PTR [rdi],r12b
  440d15:	rex.WRXB push r13
  440d17:	push   rsp
  440d18:	and    BYTE PTR [rdi],ah
  440d1a:	or     ah,BYTE PTR [rax]
  440d1c:	and    BYTE PTR [rax],ah
  440d1e:	and    BYTE PTR [rax],ah
  440d20:	and    BYTE PTR [rax],ah
  440d22:	and    BYTE PTR [rax],ah
  440d24:	and    BYTE PTR [rdi+0x48],dl
  440d27:	rex.RB
  440d28:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440d2c:	jo     0x440da0
  440d2e:	outs   dx,DWORD PTR ds:[rsi]
  440d2f:	(bad)  
  440d30:	jb     0x440d99
  440d32:	ins    DWORD PTR es:[rdi],dx
  440d33:	outs   dx,DWORD PTR ds:[rsi]
  440d34:	fs gs jae 0x440d93
  440d38:	jae    0x440d68
  440d3a:	imul   ebx,DWORD PTR [rbp+0x20],0x6227203d
  440d41:	(bad)  
  440d42:	and    BYTE PTR [rax+rcx*2+0x45],dl
  440d46:	rex.WRX and BYTE PTR [rdi],r12b
  440d49:	rex.WB
  440d4a:	rex.WRX
  440d4b:	rex.WRXB push r13
  440d4d:	push   rsp
  440d4e:	and    BYTE PTR [rdi],ah
  440d50:	or     ah,BYTE PTR [rax]
  440d52:	and    BYTE PTR [rax],ah
  440d54:	and    BYTE PTR [rax],ah
  440d56:	and    BYTE PTR [rax],ah
  440d58:	and    BYTE PTR [rax],ah
  440d5a:	and    BYTE PTR [rdi+0x48],dl
  440d5d:	rex.RB
  440d5e:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  440d62:	jo     0x440dd6
  440d64:	outs   dx,DWORD PTR ds:[rsi]
  440d65:	(bad)  
  440d66:	jb     0x440dcf
  440d68:	ins    DWORD PTR es:[rdi],dx
  440d69:	outs   dx,DWORD PTR ds:[rsi]
  440d6a:	fs gs jae 0x440dc9
  440d6e:	jae    0x440d9e
  440d70:	imul   ebx,DWORD PTR [rbp+0x20],0x7627203d
  440d77:	(bad)  
  440d78:	and    BYTE PTR [rax+rcx*2+0x45],dl
  440d7c:	rex.WRX and BYTE PTR [rdi],r12b
  440d7f:	push   rsi
  440d80:	push   r10
  440d82:	rex.WB
  440d83:	rex.B
  440d84:	rex.R
  440d85:	rex.WB
  440d86:	rex.XB and BYTE PTR [r15],spl
  440d89:	or     ah,BYTE PTR [rax]
  440d8b:	and    BYTE PTR [rax],ah
  440d8d:	and    BYTE PTR [rax],ah
  440d8f:	and    BYTE PTR [rax],ah
  440d91:	and    BYTE PTR [rbp+0x4e],al
  440d94:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  440d99:	and    BYTE PTR [rax],ah
  440d9b:	and    BYTE PTR [rax],ah
  440d9d:	and    BYTE PTR [rax],ah
  440d9f:	and    BYTE PTR [rax],ah
  440da1:	rex.XB
  440da2:	push   r11
  440da4:	or     r12b,BYTE PTR [r8]
  440da7:	and    BYTE PTR [rax],ah
  440da9:	and    BYTE PTR [rax],ah
  440dab:	and    BYTE PTR [rax],ah
  440dad:	and    BYTE PTR [rax],ah
  440daf:	and    BYTE PTR [rdi+0x48],dl
  440db2:	rex.RB
  440db3:	rex.WRX and BYTE PTR [rbx+0x4f],r8b
  440db7:	rex.B
  440db8:	rex.WR
  440db9:	rex.RB push r11
  440dbb:	rex.XB
  440dbc:	sub    BYTE PTR [r8+0x2e],r14b
  440dc0:	jo     0x440e34
  440dc2:	outs   dx,DWORD PTR ds:[rsi]
  440dc3:	(bad)  
  440dc4:	jb     0x440e2d
  440dc6:	outs   dx,BYTE PTR ds:[rsi]
  440dc7:	(bad)  
  440dc8:	ins    DWORD PTR es:[rdi],dx
  440dc9:	gs jae 0x440e27
  440dcc:	jae    0x440dfc
  440dce:	imul   ebx,DWORD PTR [rbp+0x2c],0x29272720
  440dd5:	and    BYTE PTR [rip+0x20272720],bh        # 0x206b34fb
  440ddb:	push   rsp
  440ddc:	rex.W
  440ddd:	rex.RB
  440dde:	rex.WRX and BYTE PTR [rdi],r12b
  440de1:	(bad)  
  440de2:	or     ah,BYTE PTR [rax]
  440de4:	and    BYTE PTR [rax],ah
  440de6:	and    BYTE PTR [rax],ah
  440de8:	and    BYTE PTR [rax],ah
  440dea:	and    BYTE PTR [rax],ah
  440dec:	and    BYTE PTR [rbp+0x4c],al
  440def:	push   rbx
  440df0:	and    BYTE PTR [r8+0x2e],r14b
  440df4:	jo     0x440e68
  440df6:	outs   dx,DWORD PTR ds:[rsi]
  440df7:	(bad)  
  440df8:	jb     0x440e61
  440dfa:	outs   dx,BYTE PTR ds:[rsi]
  440dfb:	(bad)  
  440dfc:	ins    DWORD PTR es:[rdi],dx
  440dfd:	gs jae 0x440e5b
  440e00:	jae    0x440e30
  440e02:	imul   ebx,DWORD PTR [rbp+0x20],0x27207c7c
  440e09:	and    BYTE PTR [rdi],ah
  440e0b:	and    BYTE PTR [rdx],cl
  440e0d:	and    BYTE PTR [rax],ah
  440e0f:	and    BYTE PTR [rax],ah
  440e11:	and    BYTE PTR [rax],ah
  440e13:	and    BYTE PTR [rax],ah
  440e15:	rex.RB
  440e16:	rex.WRX
  440e17:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  440e1c:	and    BYTE PTR [rax],ah
  440e1e:	and    BYTE PTR [rax],ah
  440e20:	and    BYTE PTR [rax],ah
  440e22:	and    BYTE PTR [rax],ah
  440e24:	jo     0x440e8d
  440e26:	pop    rdi
  440e27:	movsxd esp,DWORD PTR [rcx+0x74]
  440e2a:	(bad)  
  440e2b:	ins    BYTE PTR es:[rdi],dx
  440e2c:	outs   dx,DWORD PTR ds:[rsi]
  440e2d:	outs   dx,WORD PTR cs:[esi]
  440e31:	jb     0x440ea0
  440e33:	(bad)  
  440e34:	je     0x440e95
  440e36:	je     0x440eb1
  440e38:	jo     0x440e9f
  440e3a:	sub    BYTE PTR [rax+0x2e],dh
  440e3d:	jo     0x440eb1
  440e3f:	outs   dx,DWORD PTR ds:[rsi]
  440e40:	(bad)  
  440e41:	ins    BYTE PTR es:[rdi],dx
  440e42:	ins    BYTE PTR es:[rdi],dx
  440e43:	(bad)  
  440e44:	jb     0x440ead
  440e46:	je     0x440ec1
  440e48:	jo     0x440eaf
  440e4a:	jae    0x440ea7
  440e4c:	jae    0x440e7c
  440e4e:	imul   ebx,DWORD PTR [rbp+0x2c],0x4c554e20
  440e55:	sub    QWORD PTR [rdx],r9
  440e58:	and    BYTE PTR [rax],ah
  440e5a:	and    BYTE PTR [rax],ah
  440e5c:	and    BYTE PTR [rax],ah
  440e5e:	rex.RX push rdx
  440e60:	rex.WRXB
  440e61:	rex.WRB or r12b,BYTE PTR [r8]
  440e64:	and    BYTE PTR [rax],ah
  440e66:	and    BYTE PTR [rax],ah
  440e68:	and    BYTE PTR [rax],ah
  440e6a:	and    BYTE PTR [rax+0x67],dh
  440e6d:	pop    rdi
  440e6e:	movsxd esp,DWORD PTR [rcx+0x74]
  440e71:	(bad)  
  440e72:	ins    BYTE PTR es:[rdi],dx
  440e73:	outs   dx,DWORD PTR ds:[rsi]
  440e74:	addr32 cs outs dx,BYTE PTR gs:[esi]
  440e79:	gs jb  0x440edd
  440e7c:	je     0x440ee3
  440e7e:	pop    rdi
  440e7f:	jae    0x440ee6
  440e81:	jb     0x440eec
  440e83:	gs jae 0x440eae
  440e86:	xor    DWORD PTR [rax+riz*1],ebp
  440e89:	jo     0x440ef2
  440e8b:	pop    rdi
  440e8c:	movsxd esp,DWORD PTR [rcx+0x74]
  440e8f:	(bad)  
  440e90:	ins    BYTE PTR es:[rdi],dx
  440e91:	outs   dx,DWORD PTR ds:[rsi]
  440e92:	addr32 cs (bad) 
  440e95:	jb     0x440f09
  440e97:	(bad)  
  440e98:	jns    0x440ef9
  440e9a:	jne    0x440f0c
  440e9c:	jo     0x440f03
  440e9e:	jb     0x440ec8
  440ea0:	jo     0x440ed0
  440ea2:	jo     0x440f16
  440ea4:	outs   dx,DWORD PTR ds:[rsi]
  440ea5:	(bad)  
  440ea6:	ins    BYTE PTR es:[rdi],dx
  440ea7:	ins    BYTE PTR es:[rdi],dx
  440ea8:	(bad)  
  440ea9:	jb     0x440f12
  440eab:	je     0x440f26
  440ead:	jo     0x440f14
  440eaf:	jae    0x440edd
  440eb1:	and    BYTE PTR [rcx],dh
  440eb3:	sub    DWORD PTR [rcx],ebp
  440eb5:	and    BYTE PTR [rcx+0x53],al
  440eb8:	and    BYTE PTR [rbx+0x28],dh
  440ebb:	imul   ebp,DWORD PTR [rcx],0x2020200a
  440ec1:	and    BYTE PTR [rcx],ch
  440ec3:	sub    al,0x20
  440ec5:	(bad)  
  440ec6:	sub    al,0x20
  440ec8:	(bad)  
  440ec9:	sub    DWORD PTR [rdx],ecx
  440ecb:	and    BYTE PTR [rax],ah
  440ecd:	rex.RB
  440ece:	rex.WR push rbx
  440ed0:	or     r12b,BYTE PTR [r8]
  440ed3:	and    BYTE PTR [rax],ah
  440ed5:	and    BYTE PTR [rax+0x67],dh
  440ed8:	pop    rdi
  440ed9:	movsxd esp,DWORD PTR [rcx+0x74]
  440edc:	(bad)  
  440edd:	ins    BYTE PTR es:[rdi],dx
  440ede:	outs   dx,DWORD PTR ds:[rsi]
  440edf:	addr32 cs (bad) 
  440ee2:	jb     0x440f56
  440ee4:	(bad)  
  440ee5:	jns    0x440f46
  440ee7:	je     0x440f58
  440ee9:	pop    rdi
  440eea:	jae    0x440f60
  440eec:	jb     0x440f57
  440eee:	outs   dx,BYTE PTR ds:[rsi]
  440eef:	sub    BYTE PTR [ecx+0x52],al
  440ef3:	push   rdx
  440ef4:	pop    r9
  440ef6:	sub    BYTE PTR [rdx],cl
  440ef8:	and    BYTE PTR [rax],ah
  440efa:	and    BYTE PTR [rax],ah
  440efc:	and    BYTE PTR [rax],ah
  440efe:	push   rbx
  440eff:	rex.RB
  440f00:	rex.WR
  440f01:	rex.RB
  440f02:	rex.XB push r12
  440f04:	or     ah,BYTE PTR [rax]
  440f06:	and    BYTE PTR [rax],ah
  440f08:	and    BYTE PTR [rax],ah
  440f0a:	and    BYTE PTR [rax],ah
  440f0c:	and    BYTE PTR [rbx+0x41],al
  440f0f:	push   rbx
  440f10:	or     r12b,BYTE PTR [r8]
  440f13:	and    BYTE PTR [rax],ah
  440f15:	and    BYTE PTR [rax],ah
  440f17:	and    BYTE PTR [rax],ah
  440f19:	and    BYTE PTR [rax],ah
  440f1b:	and    BYTE PTR [rdi+0x48],dl
  440f1e:	rex.RB
  440f1f:	rex.WRX and BYTE PTR [rbx+0x4f],r8b
  440f23:	rex.B
  440f24:	rex.WR
  440f25:	rex.RB push r11
  440f27:	rex.XB
  440f28:	sub    BYTE PTR [r8+0x2e],r14b
  440f2c:	jo     0x440fa0
  440f2e:	outs   dx,DWORD PTR ds:[rsi]
  440f2f:	(bad)  
  440f30:	jb     0x440f99
  440f32:	outs   dx,BYTE PTR ds:[rsi]
  440f33:	(bad)  
  440f34:	ins    DWORD PTR es:[rdi],dx
  440f35:	gs jae 0x440f93
  440f38:	jae    0x440f68
  440f3a:	imul   ebp,DWORD PTR [rbx],0x202c5d31
  440f40:	(bad)  
  440f41:	(bad)  
  440f42:	sub    DWORD PTR [rax],esp
  440f44:	cmp    eax,0x20272720
  440f49:	push   rsp
  440f4a:	rex.W
  440f4b:	rex.RB
  440f4c:	rex.WRX and BYTE PTR [rdi],r12b
  440f4f:	(bad)  
  440f50:	or     ah,BYTE PTR [rax]
  440f52:	and    BYTE PTR [rax],ah
  440f54:	and    BYTE PTR [rax],ah
  440f56:	and    BYTE PTR [rax],ah
  440f58:	and    BYTE PTR [rax],ah
  440f5a:	and    BYTE PTR [rbp+0x4c],al
  440f5d:	push   rbx
  440f5e:	and    BYTE PTR [r8+0x2e],r14b
  440f62:	jo     0x440fd6
  440f64:	outs   dx,DWORD PTR ds:[rsi]
  440f65:	(bad)  
  440f66:	jb     0x440fcf
  440f68:	outs   dx,BYTE PTR ds:[rsi]
  440f69:	(bad)  
  440f6a:	ins    DWORD PTR es:[rdi],dx
  440f6b:	gs jae 0x440fc9
  440f6e:	jae    0x440f9e
  440f70:	imul   ebp,DWORD PTR [rbx],0x7c205d31
  440f76:	jl     0x440f98
  440f78:	(bad)  
  440f79:	and    BYTE PTR [rdi],ah
  440f7b:	or     ah,BYTE PTR [rax]
  440f7d:	and    BYTE PTR [rax],ah
  440f7f:	and    BYTE PTR [rax],ah
  440f81:	and    BYTE PTR [rax],ah
  440f83:	and    BYTE PTR [rax],ah
  440f85:	and    BYTE PTR [rbp+0x4e],al
  440f88:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  440f8d:	and    BYTE PTR [rax],ah
  440f8f:	and    BYTE PTR [rax],ah
  440f91:	and    BYTE PTR [rax],ah
  440f93:	and    BYTE PTR [rax],ah
  440f95:	jo     0x440ffe
  440f97:	pop    rdi
  440f98:	movsxd esp,DWORD PTR [rcx+0x74]
  440f9b:	(bad)  
  440f9c:	ins    BYTE PTR es:[rdi],dx
  440f9d:	outs   dx,DWORD PTR ds:[rsi]
  440f9e:	outs   dx,WORD PTR cs:[esi]
  440fa2:	jb     0x441011
  440fa4:	(bad)  
  440fa5:	je     0x441006
  440fa7:	je     0x441022
  440fa9:	jo     0x441010
  440fab:	sub    BYTE PTR [rax+0x2e],dh
  440fae:	jo     0x441022
  440fb0:	outs   dx,DWORD PTR ds:[rsi]
  440fb1:	(bad)  
  440fb2:	jb     0x44101b
  440fb4:	je     0x44102f
  440fb6:	jo     0x44101d
  440fb8:	jae    0x441015
  440fba:	jae    0x440fea
  440fbc:	imul   ebx,DWORD PTR [rbp+0x2c],0x4c554e20
  440fc3:	sub    QWORD PTR [rdx],r9
  440fc6:	and    BYTE PTR [rax],ah
  440fc8:	and    BYTE PTR [rax],ah
  440fca:	and    BYTE PTR [rax],ah
  440fcc:	rex.RX push rdx
  440fce:	rex.WRXB
  440fcf:	rex.WRB or r12b,BYTE PTR [r8]
  440fd2:	and    BYTE PTR [rax],ah
  440fd4:	and    BYTE PTR [rax],ah
  440fd6:	and    BYTE PTR [rax],ah
  440fd8:	and    BYTE PTR [rax+0x67],dh
  440fdb:	pop    rdi
  440fdc:	movsxd esp,DWORD PTR [rcx+0x74]
  440fdf:	(bad)  
  440fe0:	ins    BYTE PTR es:[rdi],dx
  440fe1:	outs   dx,DWORD PTR ds:[rsi]
  440fe2:	addr32 cs outs dx,BYTE PTR gs:[esi]
  440fe7:	gs jb  0x44104b
  440fea:	je     0x441051
  440fec:	pop    rdi
  440fed:	jae    0x441054
  440fef:	jb     0x44105a
  440ff1:	gs jae 0x44101c
  440ff4:	xor    BYTE PTR [rax+riz*1],ch
  440ff7:	jo     0x441060
  440ff9:	pop    rdi
  440ffa:	movsxd esp,DWORD PTR [rcx+0x74]
  440ffd:	(bad)  
  440ffe:	ins    BYTE PTR es:[rdi],dx
  440fff:	outs   dx,DWORD PTR ds:[rsi]
  441000:	addr32 cs (bad) 
  441003:	jb     0x441077
  441005:	(bad)  
  441006:	jns    0x441067
  441008:	jne    0x44107a
  44100a:	jo     0x441071
  44100c:	jb     0x441036
  44100e:	jo     0x44103e
  441010:	jo     0x441084
  441012:	outs   dx,DWORD PTR ds:[rsi]
  441013:	(bad)  
  441014:	jb     0x44107d
  441016:	je     0x441091
  441018:	jo     0x44107f
  44101a:	jae    0x441048
  44101c:	and    BYTE PTR [rcx],dh
  44101e:	sub    DWORD PTR [rcx],ebp
  441020:	and    BYTE PTR [rcx+0x53],al
  441023:	and    BYTE PTR [rbx+0x28],dh
  441026:	imul   ebp,DWORD PTR [rcx],0x2020200a
  44102c:	and    BYTE PTR [rcx],ch
  44102e:	sub    al,0x20
  441030:	(bad)  
  441031:	sub    al,0x20
  441033:	(bad)  
  441034:	sub    DWORD PTR [rdx],ecx
  441036:	and    BYTE PTR [rax],ah
  441038:	rex.RB
  441039:	rex.WRX
  44103a:	and    BYTE PTR [rcx+0x53],r8b
  44103e:	and    BYTE PTR [rdx],ah
  441040:	and    eax,0xa2c2273
  441045:	and    BYTE PTR [rax],ah
  441047:	rex.XB
  441048:	push   r11
  44104a:	or     r12b,BYTE PTR [r8]
  44104d:	and    BYTE PTR [rax],ah
  44104f:	and    BYTE PTR [rdi+0x48],dl
  441052:	rex.RB
  441053:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  441057:	jo     0x4410cb
  441059:	outs   dx,DWORD PTR ds:[rsi]
  44105a:	imul   esi,DWORD PTR [rbx+0x61],0x54206767
  441061:	rex.W
  441062:	rex.RB
  441063:	rex.WRX and BYTE PTR [rdi],r12b
  441066:	and    eax,0x200a2773
  44106b:	and    BYTE PTR [rax],ah
  44106d:	and    BYTE PTR [rdi+0x48],dl
  441070:	rex.RB
  441071:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  441075:	jo     0x4410e9
  441077:	outs   dx,DWORD PTR ds:[rsi]
  441078:	jb     0x4410df
  44107a:	je     0x4410f0
  44107c:	jns    0x4410ee
  44107e:	and    BYTE PTR gs:[rip+0x67702720],bh        # 0x67b437a5
  441085:	pop    rdi
  441086:	movsxd esp,DWORD PTR [rcx+0x74]
  441089:	(bad)  
  44108a:	ins    BYTE PTR es:[rdi],dx
  44108b:	outs   dx,DWORD PTR ds:[rsi]
  44108c:	addr32 cs je 0x441102
  441090:	imul   esp,DWORD PTR [rdi+0x67],0x3a277265
  441097:	cmp    dh,BYTE PTR [rax+0x67]
  44109a:	pop    rdi
  44109b:	movsxd esp,DWORD PTR [rcx+0x74]
  44109e:	(bad)  
  44109f:	ins    BYTE PTR es:[rdi],dx
  4410a0:	outs   dx,DWORD PTR ds:[rsi]
  4410a1:	addr32 cs jb 0x44110a
  4410a5:	addr32 je 0x441121
  4410a8:	jo     0x44110f
  4410aa:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4410ae:	rex.WRX and BYTE PTR [rdi],r12b
  4410b1:	and    eax,0x200a2773
  4410b6:	and    BYTE PTR [rax],ah
  4410b8:	and    BYTE PTR [rbp+0x4c],al
  4410bb:	push   rbx
  4410bc:	and    BYTE PTR [r15],r12b
  4410bf:	and    eax,0x200a2773
  4410c4:	and    BYTE PTR [rbp+0x4e],al
  4410c7:	and    BYTE PTR [rcx+0x53],r8b
  4410cb:	and    BYTE PTR [rdx],ah
  4410cd:	and    eax,0x2273
  4410d2:	add    BYTE PTR [rax],al
  4410d4:	add    BYTE PTR [rax],al
  4410d6:	add    BYTE PTR [rax],al
  4410d8:	and    BYTE PTR [rax],ah
  4410da:	rex.XB
  4410db:	push   r11
  4410dd:	and    BYTE PTR [r15+0x48],r10b
  4410e1:	rex.RB
  4410e2:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  4410e6:	jo     0x44115a
  4410e8:	outs   dx,DWORD PTR ds:[rsi]
  4410e9:	jb     0x441150
  4410eb:	je     0x441160
  4410ed:	gs je  0x441110
  4410f0:	push   rsp
  4410f1:	rex.W
  4410f2:	rex.RB
  4410f3:	rex.WRX and BYTE PTR [rdi],r12b
  4410f6:	push   rbx
  4410f7:	rex.RB push r12
  4410f9:	rex.WRXB
  4410fa:	rex.RX and BYTE PTR [rdi],r12b
  4410fd:	and    BYTE PTR [rbp+0x4c],al
  441100:	push   rbx
  441101:	and    BYTE PTR [r15],r12b
  441104:	(bad)  
  441105:	and    BYTE PTR [rbp+0x4e],al
  441108:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  44110d:	and    BYTE PTR [rax],ah
  44110f:	jo     0x441178
  441111:	pop    rdi
  441112:	movsxd esp,DWORD PTR [rcx+0x74]
  441115:	(bad)  
  441116:	ins    BYTE PTR es:[rdi],dx
  441117:	outs   dx,DWORD PTR ds:[rsi]
  441118:	outs   dx,WORD PTR cs:[esi]
  44111c:	jb     0x44118b
  44111e:	(bad)  
  44111f:	je     0x441180
  441121:	je     0x44119c
  441123:	jo     0x44118a
  441125:	sub    BYTE PTR [rax+0x2e],dh
  441128:	jo     0x44119c
  44112a:	outs   dx,DWORD PTR ds:[rsi]
  44112b:	jb     0x441192
  44112d:	je     0x4411a3
  44112f:	jns    0x4411a1
  441131:	gs sub al,0x20
  441134:	rex.WRX push rbp
  441136:	rex.WR
  441137:	sub    QWORD PTR [rax],r12
  44113a:	(bad)  
  44113b:	jae    0x44115d
  44113d:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa7033b6
  441143:	and    BYTE PTR [rax],ah
  441145:	jo     0x4411ae
  441147:	pop    rdi
  441148:	movsxd esp,DWORD PTR [rcx+0x74]
  44114b:	(bad)  
  44114c:	ins    BYTE PTR es:[rdi],dx
  44114d:	outs   dx,DWORD PTR ds:[rsi]
  44114e:	outs   dx,DWORD PTR cs:[esi]
  441151:	imul   esp,DWORD PTR [rsi+rsi*2+0x65],0x726f7463
  441159:	je     0x4411d4
  44115b:	jo     0x4411c2
  44115d:	jae    0x441187
  44115f:	jo     0x44118f
  441161:	jo     0x4411d5
  441163:	outs   dx,DWORD PTR ds:[rsi]
  441164:	(bad)  
  441165:	jb     0x4411ce
  441167:	je     0x4411e2
  441169:	jo     0x4411d0
  44116b:	jae    0x441196
  44116d:	and    BYTE PTR [rcx+0x73],ah
  441170:	and    BYTE PTR [rdx],ah
  441172:	and    eax,0xa2c2273
  441177:	and    BYTE PTR [rax],ah
  441179:	rex.XB
  44117a:	push   r11
  44117c:	or     r12b,BYTE PTR [r8]
  44117f:	and    BYTE PTR [rax],ah
  441181:	and    BYTE PTR [rdi+0x48],dl
  441184:	rex.RB
  441185:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  441189:	jo     0x4411fd
  44118b:	outs   dx,DWORD PTR ds:[rsi]
  44118c:	imul   esi,DWORD PTR [rbx+0x61],0x54206767
  441193:	rex.W
  441194:	rex.RB
  441195:	rex.WRX and BYTE PTR [rdi],r12b
  441198:	and    eax,0x200a2773
  44119d:	and    BYTE PTR [rax],ah
  44119f:	and    BYTE PTR [rdi+0x48],dl
  4411a2:	rex.RB
  4411a3:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  4411a7:	jo     0x44121b
  4411a9:	outs   dx,DWORD PTR ds:[rsi]
  4411aa:	jb     0x441211
  4411ac:	je     0x441222
  4411ae:	jns    0x441220
  4411b0:	and    BYTE PTR gs:[rip+0x67702720],bh        # 0x67b438d7
  4411b7:	pop    rdi
  4411b8:	movsxd esp,DWORD PTR [rcx+0x74]
  4411bb:	(bad)  
  4411bc:	ins    BYTE PTR es:[rdi],dx
  4411bd:	outs   dx,DWORD PTR ds:[rsi]
  4411be:	addr32 cs je 0x441234
  4411c2:	imul   esp,DWORD PTR [rdi+0x67],0x3a277265
  4411c9:	cmp    dh,BYTE PTR [rax+0x67]
  4411cc:	pop    rdi
  4411cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4411d0:	(bad)  
  4411d1:	ins    BYTE PTR es:[rdi],dx
  4411d2:	outs   dx,DWORD PTR ds:[rsi]
  4411d3:	addr32 cs jb 0x44123c
  4411d7:	addr32 je 0x441253
  4411da:	jo     0x441241
  4411dc:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4411e0:	rex.WRX and BYTE PTR [rdi],r12b
  4411e3:	and    eax,0x200a2773
  4411e8:	and    BYTE PTR [rax],ah
  4411ea:	and    BYTE PTR [rbp+0x4c],al
  4411ed:	push   rbx
  4411ee:	and    BYTE PTR [r15],r12b
  4411f1:	and    eax,0x200a2773
  4411f6:	and    BYTE PTR [rbp+0x4e],al
  4411f9:	and    BYTE PTR [rcx+0x53],r8b
  4411fd:	and    BYTE PTR [rdx],ah
  4411ff:	and    eax,0x69002273
  441204:	outs   dx,BYTE PTR ds:[rsi]
  441205:	jbe    0x441276
  441207:	imul   esp,DWORD PTR [rbp+0x72],0x0
  44120b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x72
  441213:	add    BYTE PTR [rax],al
  441215:	add    BYTE PTR [rax],al
  441217:	add    BYTE PTR [rdx+rcx*1],ch
  44121a:	and    BYTE PTR [rbx+0x41],al
  44121d:	push   rbx
  44121e:	and    BYTE PTR [r15+0x48],r10b
  441222:	rex.RB
  441223:	rex.WRX and BYTE PTR [rax+0x72],r14b
  441227:	outs   dx,DWORD PTR ds:[rsi]
  441228:	jae    0x44128f
  44122a:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  44122e:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441232:	rex.WRX and BYTE PTR [rdi],r12b
  441235:	and    eax,0x45202773
  44123a:	rex.WR push rbx
  44123c:	and    BYTE PTR [r15],r12b
  44123f:	and    eax,0x45202773
  441244:	rex.WRX
  441245:	and    BYTE PTR [rcx+0x53],r8b
  441249:	and    BYTE PTR [rdx],ah
  44124b:	and    eax,0xa2c2273
  441250:	and    BYTE PTR [rbx+0x41],al
  441253:	push   rbx
  441254:	or     r12b,BYTE PTR [r8]
  441257:	and    BYTE PTR [rdi+0x48],dl
  44125a:	rex.RB
  44125b:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  44125f:	jo     0x4412d3
  441261:	outs   dx,DWORD PTR ds:[rsi]
  441262:	jbe    0x4412d3
  441264:	ins    BYTE PTR es:[rdi],dx
  441265:	(bad)  
  441266:	je     0x4412d1
  441268:	ins    BYTE PTR es:[rdi],dx
  441269:	and    BYTE PTR gs:[rip+0x27692720],bh        # 0x27ad3990
  441270:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441274:	rex.WRX and BYTE PTR [rdi],r12b
  441277:	and    eax,0x200a2773
  44127c:	and    BYTE PTR [rdi+0x48],dl
  44127f:	rex.RB
  441280:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  441284:	jo     0x4412f8
  441286:	outs   dx,DWORD PTR ds:[rsi]
  441287:	jbe    0x4412f8
  441289:	ins    BYTE PTR es:[rdi],dx
  44128a:	(bad)  
  44128b:	je     0x4412f6
  44128d:	ins    BYTE PTR es:[rdi],dx
  44128e:	and    BYTE PTR gs:[rip+0x27732720],bh        # 0x27b739b5
  441295:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441299:	rex.WRX and BYTE PTR [rdi],r12b
  44129c:	and    eax,0x200a2773
  4412a1:	and    BYTE PTR [rdi+0x48],dl
  4412a4:	rex.RB
  4412a5:	rex.WRX and BYTE PTR [rax+0x2e],r14b
  4412a9:	jo     0x44131d
  4412ab:	outs   dx,DWORD PTR ds:[rsi]
  4412ac:	jbe    0x44131d
  4412ae:	ins    BYTE PTR es:[rdi],dx
  4412af:	(bad)  
  4412b0:	je     0x44131b
  4412b2:	ins    BYTE PTR es:[rdi],dx
  4412b3:	and    BYTE PTR gs:[rip+0x27762720],bh        # 0x27ba39da
  4412ba:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4412be:	rex.WRX and BYTE PTR [rdi],r12b
  4412c1:	and    eax,0x200a2773
  4412c6:	rex.RB
  4412c7:	rex.WRX
  4412c8:	and    BYTE PTR [rcx+0x73],r12b
  4412cc:	and    BYTE PTR [rdx],ah
  4412ce:	and    eax,0xa2c2273
  4412d3:	and    BYTE PTR [rax],ah
  4412d5:	jo     0x44133e
  4412d7:	pop    rdi
  4412d8:	movsxd esp,DWORD PTR [rcx+0x74]
  4412db:	(bad)  
  4412dc:	ins    BYTE PTR es:[rdi],dx
  4412dd:	outs   dx,DWORD PTR ds:[rsi]
  4412de:	addr32 cs jo 0x441349
  4412e2:	pop    rdi
  4412e3:	addr32 gs je 0x441346
  4412e7:	jne    0x44135c
  4412e9:	gs jb  0x44134e
  4412ec:	jns    0x441357
  4412ee:	sub    BYTE PTR fs:[rax+0x2e],dh
  4412f2:	jo     0x441366
  4412f4:	outs   dx,DWORD PTR ds:[rsi]
  4412f5:	outs   dx,DWORD PTR ds:[rsi]
  4412f6:	ja     0x441366
  4412f8:	gs jb  0x441324
  4412fb:	and    BYTE PTR [rcx+0x73],ah
  4412fe:	and    BYTE PTR [rdx],ah
  441300:	and    eax,0xa2c2273
  441305:	and    BYTE PTR [rax],ah
  441307:	ins    BYTE PTR es:[rdi],dx
  441308:	cs ins BYTE PTR es:[rdi],dx
  44130a:	(bad)  
  44130b:	outs   dx,BYTE PTR ds:[rsi]
  44130c:	outs   dx,BYTE PTR ds:[rsi]
  44130d:	(bad)  
  44130e:	ins    DWORD PTR es:[rdi],dx
  44130f:	and    BYTE PTR gs:[rcx+0x73],ah
  441313:	and    BYTE PTR [rdx],ah
  441315:	and    eax,0xa2c2273
  44131a:	and    BYTE PTR [rax],ah
  44131c:	jo     0x44134c
  44131e:	jo     0x441392
  441320:	outs   dx,DWORD PTR ds:[rsi]
  441321:	jae    0x441395
  441323:	movsxd esp,DWORD PTR [rax]
  441325:	(bad)  
  441326:	jae    0x441348
  441328:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa7035a1
  44132e:	and    BYTE PTR [rax],ah
  441330:	jo     0x441399
  441332:	pop    rdi
  441333:	movsxd esp,DWORD PTR [rcx+0x74]
  441336:	(bad)  
  441337:	ins    BYTE PTR es:[rdi],dx
  441338:	outs   dx,DWORD PTR ds:[rsi]
  441339:	outs   dx,DWORD PTR cs:[esi]
  44133c:	(bad)  
  44133d:	push   0x5f
  44133f:	fs gs jae 0x4413a6
  441343:	jb     0x4413ae
  441345:	jo     0x4413bb
  441347:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7028
  44134e:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  441356:	jo     0x4413ca
  441358:	outs   dx,DWORD PTR ds:[rsi]
  441359:	movsxd esp,DWORD PTR [rdi]
  44135b:	sub    DWORD PTR [rax],esp
  44135d:	(bad)  
  44135e:	jae    0x441380
  441360:	and    ah,BYTE PTR [rip+0x53002273]        # 0x534435d9
  441366:	outs   dx,DWORD PTR ds:[rsi]
  441367:	jne    0x4413db
  441369:	movsxd esp,DWORD PTR [rbp+0x20]
  44136c:	movsxd ebp,DWORD PTR [rdi+0x64]
  44136f:	add    BYTE PTR gs:[rcx+riz*2+0x6e],cl
  441374:	addr32 jne 0x4413d8
  441377:	add    BYTE PTR gs:[esi+0x6f],dl
  44137c:	ins    BYTE PTR es:[rdi],dx
  44137d:	(bad)  
  44137e:	je     0x4413e9
  441380:	ins    BYTE PTR es:[rdi],dx
  441381:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x616c6f76
  441389:	je     0x4413f4
  44138b:	ins    BYTE PTR es:[rdi],dx
  44138c:	add    BYTE PTR gs:[rbx+0x74],dh
  441390:	(bad)  
  441391:	(bad)  
  441392:	ins    BYTE PTR es:[rdi],dx
  441393:	add    BYTE PTR gs:[rcx+0x6d],ch
  441397:	ins    DWORD PTR es:[rdi],dx
  441398:	jne    0x44140e
  44139a:	(bad)  
  44139b:	(bad)  
  44139c:	ins    BYTE PTR es:[rdi],dx
  44139d:	add    BYTE PTR gs:[rbx+0x65],dl
  4413a1:	movsxd esi,DWORD PTR [rbp+0x72]
  4413a4:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x4f52460a
  4413ac:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4413b0:	pop    rdi
  4413b1:	movsxd esp,DWORD PTR [rcx+0x74]
  4413b4:	(bad)  
  4413b5:	ins    BYTE PTR es:[rdi],dx
  4413b6:	outs   dx,DWORD PTR ds:[rsi]
  4413b7:	addr32 cs jo 0x441422
  4413bb:	pop    rdi
  4413bc:	jo     0x441430
  4413be:	outs   dx,DWORD PTR ds:[rsi]
  4413bf:	movsxd esp,DWORD PTR [rax]
  4413c1:	jo     0x4413cd
  4413c3:	and    BYTE PTR [rax],ah
  4413c5:	and    BYTE PTR [rax],ah
  4413c7:	and    BYTE PTR [rbp+rax*2+0x46],cl
  4413cb:	push   rsp
  4413cc:	and    BYTE PTR [rdx+0x4f],cl
  4413cf:	rex.WB
  4413d0:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4413d4:	pop    rdi
  4413d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4413d8:	(bad)  
  4413d9:	ins    BYTE PTR es:[rdi],dx
  4413da:	outs   dx,DWORD PTR ds:[rsi]
  4413db:	addr32 cs jo 0x441446
  4413df:	pop    rdi
  4413e0:	outs   dx,BYTE PTR ds:[rsi]
  4413e1:	(bad)  
  4413e2:	ins    DWORD PTR es:[rdi],dx
  4413e3:	gs jae 0x441456
  4413e6:	(bad)  
  4413e7:	movsxd esp,DWORD PTR [rbp+0x20]
  4413ea:	outs   dx,BYTE PTR ds:[rsi]
  4413eb:	and    BYTE PTR [rdi+0x4e],cl
  4413ee:	and    BYTE PTR [rsi+0x2e],ch
  4413f1:	outs   dx,DWORD PTR ds:[rsi]
  4413f2:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  4413fa:	jb     0x44146b
  4413fc:	outs   dx,BYTE PTR ds:[rsi]
  4413fd:	(bad)  
  4413fe:	ins    DWORD PTR es:[rdi],dx
  4413ff:	gs jae 0x441472
  441402:	(bad)  
  441403:	movsxd esp,DWORD PTR [rbp+0xa]
  441406:	add    BYTE PTR [rax],al
  441408:	and    BYTE PTR [rax],ah
  44140a:	and    BYTE PTR [rax],ah
  44140c:	and    BYTE PTR [rbp+rax*2+0x46],cl
  441410:	push   rsp
  441411:	and    BYTE PTR [rdx+0x4f],cl
  441414:	rex.WB
  441415:	rex.WRX and BYTE PTR [rax+0x67],r14b
  441419:	pop    rdi
  44141a:	movsxd esp,DWORD PTR [rcx+0x74]
  44141d:	(bad)  
  44141e:	ins    BYTE PTR es:[rdi],dx
  44141f:	outs   dx,DWORD PTR ds:[rsi]
  441420:	addr32 cs jo 0x44148b
  441424:	pop    rdi
  441425:	ins    BYTE PTR es:[rdi],dx
  441426:	(bad)  
  441427:	outs   dx,BYTE PTR ds:[rsi]
  441428:	addr32 jne 0x44148c
  44142b:	and    BYTE PTR gs:[eax+eiz*1+0x4f],ch
  441431:	rex.WRX and BYTE PTR [rsi+r13*1+0x6f],r13b
  441436:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  44143e:	jb     0x4414af
  441440:	ins    BYTE PTR es:[rdi],dx
  441441:	(bad)  
  441442:	outs   dx,BYTE PTR ds:[rsi]
  441443:	or     al,BYTE PTR [eax]
  441446:	push   rdi
  441447:	rex.W
  441448:	rex.RB push r10
  44144a:	and    BYTE PTR [r8],r8b
  44144d:	rex.WRX
  44144e:	rex.WRXB push r12
  441450:	and    BYTE PTR [rax+0x2e],dh
  441453:	jo     0x4414c7
  441455:	outs   dx,DWORD PTR ds:[rsi]
  441456:	imul   esi,DWORD PTR [rbx+0x61],0xa6767
  44145d:	and    BYTE PTR [rax],ah
  44145f:	and    BYTE PTR [rax],ah
  441461:	and    BYTE PTR [rax],ah
  441463:	rex.B
  441464:	rex.WRX
  441465:	and    BYTE PTR [rax],r8b
  441468:	jo     0x441498
  44146a:	jo     0x4414de
  44146c:	outs   dx,DWORD PTR ds:[rsi]
  44146d:	jb     0x4414d4
  44146f:	je     0x4414e5
  441471:	jns    0x4414e3
  441473:	and    BYTE PTR gs:[rsi+rdi*1],bh
  441477:	and    BYTE PTR [rdi],ah
  441479:	jo     0x4414e2
  44147b:	pop    rdi
  44147c:	movsxd esp,DWORD PTR [rcx+0x74]
  44147f:	(bad)  
  441480:	ins    BYTE PTR es:[rdi],dx
  441481:	outs   dx,DWORD PTR ds:[rsi]
  441482:	addr32 cs je 0x4414f8
  441486:	imul   esp,DWORD PTR [rdi+0x67],0x3a277265
  44148d:	cmp    dh,BYTE PTR [rax+0x67]
  441490:	pop    rdi
  441491:	movsxd esp,DWORD PTR [rcx+0x74]
  441494:	(bad)  
  441495:	ins    BYTE PTR es:[rdi],dx
  441496:	outs   dx,DWORD PTR ds:[rsi]
  441497:	addr32 cs jb 0x441500
  44149b:	addr32 je 0x441517
  44149e:	jo     0x441505
  4414a0:	or     al,BYTE PTR [rax]
  4414a2:	rex.WRX
  4414a3:	rex.WRXB push r12
  4414a5:	and    BYTE PTR [rax+0x2e],dh
  4414a8:	jo     0x44151c
  4414aa:	outs   dx,DWORD PTR ds:[rsi]
  4414ab:	imul   esi,DWORD PTR [rbx+0x77],0x6f646e69
  4414b2:	ja     0x4414be
  4414b4:	add    BYTE PTR [rdi+0x48],dl
  4414b7:	rex.RB push r10
  4414b9:	and    BYTE PTR [r8],r13b
  4414bc:	or     ah,BYTE PTR [rax]
  4414be:	and    BYTE PTR [rax],ah
  4414c0:	and    BYTE PTR [rax],ah
  4414c2:	and    BYTE PTR [rax],ah
  4414c4:	add    BYTE PTR [rax+0x2e],dh
  4414c7:	jo     0x44153b
  4414c9:	outs   dx,DWORD PTR ds:[rsi]
  4414ca:	imul   esi,DWORD PTR [rbx+0x61],0xa6767
  4414d1:	and    BYTE PTR [rax],ah
  4414d3:	and    BYTE PTR [rax],ah
  4414d5:	and    BYTE PTR [rax],ah
  4414d7:	and    BYTE PTR [rdi+0x52],cl
  4414da:	and    BYTE PTR [rax],al
  4414dc:	add    BYTE PTR [rax],al
  4414de:	add    BYTE PTR [rax],al
  4414e0:	jo     0x441510
  4414e2:	jo     0x441556
  4414e4:	outs   dx,DWORD PTR ds:[rsi]
  4414e5:	jb     0x44154c
  4414e7:	je     0x44155d
  4414e9:	jns    0x44155b
  4414eb:	and    BYTE PTR gs:[rip+0x67702720],bh        # 0x67b43c12
  4414f2:	pop    rdi
  4414f3:	movsxd esp,DWORD PTR [rcx+0x74]
  4414f6:	(bad)  
  4414f7:	ins    BYTE PTR es:[rdi],dx
  4414f8:	outs   dx,DWORD PTR ds:[rsi]
  4414f9:	addr32 cs je 0x44156f
  4414fd:	imul   esp,DWORD PTR [rdi+0x67],0x3a277265
  441504:	cmp    dh,BYTE PTR [rax+0x67]
  441507:	pop    rdi
  441508:	movsxd esp,DWORD PTR [rcx+0x74]
  44150b:	(bad)  
  44150c:	ins    BYTE PTR es:[rdi],dx
  44150d:	outs   dx,DWORD PTR ds:[rsi]
  44150e:	addr32 cs jb 0x441577
  441512:	addr32 je 0x44158e
  441515:	jo     0x44157c
  441517:	or     al,BYTE PTR [rax]
  441519:	jo     0x441549
  44151b:	jo     0x44158f
  44151d:	outs   dx,DWORD PTR ds:[rsi]
  44151e:	imul   esi,DWORD PTR [rbx+0x77],0x6f646e69
  441525:	ja     0x441531
  441527:	add    BYTE PTR [rax],ah
  441529:	and    BYTE PTR [rax],ah
  44152b:	and    BYTE PTR [rax],ah
  44152d:	and    BYTE PTR [rcx],ch
  44152f:	or     al,BYTE PTR [rax]
  441531:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  441539:	data16 jne 0x4415aa
  44153c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  441540:	outs   dx,BYTE PTR ds:[rsi]
  441541:	jae    0x441543
  441543:	add    BYTE PTR [rax],al
  441545:	add    BYTE PTR [rax],al
  441547:	add    BYTE PTR [rbx+0x45],dl
  44154a:	rex.WR
  44154b:	rex.RB
  44154c:	rex.XB push r12
  44154e:	and    BYTE PTR [rsi+0x2e],ch
  441551:	outs   dx,BYTE PTR ds:[rsi]
  441552:	jae    0x4415c4
  441554:	outs   dx,BYTE PTR ds:[rsi]
  441555:	(bad)  
  441556:	ins    DWORD PTR es:[rdi],dx
  441557:	and    BYTE PTR gs:[rcx+0x73],ah
  44155b:	and    BYTE PTR [rdx],ah
  44155d:	and    eax,0xa2c2273
  441562:	and    BYTE PTR [rax],ah
  441564:	jo     0x4415cd
  441566:	pop    rdi
  441567:	movsxd esp,DWORD PTR [rcx+0x74]
  44156a:	(bad)  
  44156b:	ins    BYTE PTR es:[rdi],dx
  44156c:	outs   dx,DWORD PTR ds:[rsi]
  44156d:	outs   dx,WORD PTR cs:[esi]
  441571:	jb     0x4415e0
  441573:	(bad)  
  441574:	je     0x4415d5
  441576:	je     0x4415f1
  441578:	jo     0x4415df
  44157a:	sub    BYTE PTR [rsi+rbp*1+0x6f],dh
  44157e:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x4c4c554e
  441586:	sub    DWORD PTR [rax],esp
  441588:	push   r11
  44158a:	and    BYTE PTR [rdx],ah
  44158c:	and    eax,0xa2c2273
  441591:	add    BYTE PTR [rbx+0x69],dl
  441594:	jp     0x4415fb
  441596:	add    BYTE PTR [rcx+0x6e],cl
  441599:	je     0x441600
  44159b:	jb     0x44160b
  44159d:	(bad)  
  44159e:	ins    BYTE PTR es:[rdi],dx
  44159f:	and    BYTE PTR [rsi+0x61],ch
  4415a2:	ins    DWORD PTR es:[rdi],dx
  4415a3:	add    BYTE PTR gs:[rax],al
  4415a6:	add    BYTE PTR [rax],al
  4415a8:	and    BYTE PTR [rax],ah
  4415aa:	je     0x4415da
  4415ac:	je     0x441627
  4415ae:	jo     0x44161e
  4415b0:	(bad)  
  4415b1:	ins    DWORD PTR es:[rdi],dx
  4415b2:	and    BYTE PTR gs:[rcx+0x53],al
  4415b6:	and    BYTE PTR [rdx],ah
  4415b8:	and    eax,0xa2c2273
  4415bd:	and    BYTE PTR [rax],ah
  4415bf:	rex.XB
  4415c0:	push   r11
  4415c2:	and    BYTE PTR [r15+0x48],r10b
  4415c6:	rex.RB
  4415c7:	rex.WRX and BYTE PTR [rsi+r13*1+0x74],r14b
  4415cc:	jns    0x44163e
  4415ce:	jb     0x441635
  4415d0:	ins    BYTE PTR es:[rdi],dx
  4415d1:	imul   esp,DWORD PTR [rax+riz*1+0x21],0xa30203d
  4415d9:	and    BYTE PTR [rax],ah
  4415db:	and    BYTE PTR [rax],ah
  4415dd:	and    BYTE PTR [rax],ah
  4415df:	push   rsp
  4415e0:	rex.W
  4415e1:	rex.RB
  4415e2:	rex.WRX and BYTE PTR [rbx+0x41],r8b
  4415e6:	push   rbx
  4415e7:	push   rsp
  4415e8:	sub    BYTE PTR [rdi],ah
  4415ea:	je     0x441661
  4415ec:	jo     0x44165a
  4415ee:	gs (bad) 
  4415f0:	and    BYTE PTR [rcx+0x53],al
  4415f3:	and    BYTE PTR [rax+0x67],dh
  4415f6:	pop    rdi
  4415f7:	movsxd esp,DWORD PTR [rcx+0x74]
  4415fa:	(bad)  
  4415fb:	ins    BYTE PTR es:[rdi],dx
  4415fc:	outs   dx,DWORD PTR ds:[rsi]
  4415fd:	addr32 cs je 0x441666
  441601:	js     0x441677
  441603:	sub    DWORD PTR [rdx],ecx
  441605:	and    BYTE PTR [rax],ah
  441607:	and    BYTE PTR [rax],ah
  441609:	push   rdi
  44160a:	rex.W
  44160b:	rex.RB
  44160c:	rex.WRX and BYTE PTR [rsi+r13*1+0x74],r14b
  441611:	jns    0x441683
  441613:	ins    BYTE PTR es:[rdi],dx
  441614:	outs   dx,BYTE PTR gs:[rsi]
  441616:	and    BYTE PTR [rax+riz*1],bh
  441619:	xor    BYTE PTR [rdx],cl
  44161b:	and    BYTE PTR [rax],ah
  44161d:	and    BYTE PTR [rax],ah
  44161f:	and    BYTE PTR [rax],ah
  441621:	push   rsp
  441622:	rex.W
  441623:	rex.RB
  441624:	rex.WRX and BYTE PTR [rbx+0x41],r8b
  441628:	push   rbx
  441629:	push   rsp
  44162a:	sub    BYTE PTR [rdi],ah
  44162c:	jbe    0x44168f
  44162e:	jb     0x441657
  441630:	and    BYTE PTR [rcx+0x53],al
  441633:	and    BYTE PTR [rax+0x67],dh
  441636:	pop    rdi
  441637:	movsxd esp,DWORD PTR [rcx+0x74]
  44163a:	(bad)  
  44163b:	ins    BYTE PTR es:[rdi],dx
  44163c:	outs   dx,DWORD PTR ds:[rsi]
  44163d:	addr32 cs je 0x4416a6
  441641:	js     0x4416b7
  441643:	sub    DWORD PTR [rdx],ecx
  441645:	and    BYTE PTR [rax],ah
  441647:	and    BYTE PTR [rax],ah
  441649:	rex.RB
  44164a:	rex.WR push rbx
  44164c:	and    BYTE PTR [r11+0x41],r8b
  441650:	push   rbx
  441651:	push   rsp
  441652:	sub    BYTE PTR [rsi+rbp*1+0x74],dh
  441656:	jns    0x4416c8
  441658:	ins    BYTE PTR es:[rdi],dx
  441659:	outs   dx,BYTE PTR gs:[rsi]
  44165b:	and    BYTE PTR [rcx+0x53],al
  44165e:	and    BYTE PTR [rax+0x67],dh
  441661:	pop    rdi
  441662:	movsxd esp,DWORD PTR [rcx+0x74]
  441665:	(bad)  
  441666:	ins    BYTE PTR es:[rdi],dx
  441667:	outs   dx,DWORD PTR ds:[rsi]
  441668:	addr32 cs je 0x4416d1
  44166c:	js     0x4416e2
  44166e:	sub    DWORD PTR [rdx],ecx
  441670:	and    BYTE PTR [rax],ah
  441672:	rex.RB
  441673:	rex.WRX
  441674:	and    BYTE PTR [rcx+0x53],r8b
  441678:	and    BYTE PTR [rdx],ah
  44167a:	and    eax,0xa2c2273
  44167f:	add    BYTE PTR [rax],ah
  441681:	and    BYTE PTR [rax+0x67],dh
  441684:	pop    rdi
  441685:	movsxd esp,DWORD PTR [rcx+0x74]
  441688:	(bad)  
  441689:	ins    BYTE PTR es:[rdi],dx
  44168a:	outs   dx,DWORD PTR ds:[rsi]
  44168b:	addr32 cs (bad) 
  44168e:	jb     0x441702
  441690:	(bad)  
  441691:	jns    0x4416f2
  441693:	je     0x441704
  441695:	pop    rdi
  441696:	jae    0x44170c
  441698:	jb     0x441703
  44169a:	outs   dx,BYTE PTR ds:[rsi]
  44169b:	sub    BYTE PTR [edx],cl
  44169e:	and    BYTE PTR [rax],ah
  4416a0:	and    BYTE PTR [rax],ah
  4416a2:	and    BYTE PTR [rax],ah
  4416a4:	push   r10
  4416a6:	push   rdx
  4416a7:	pop    r9
  4416a9:	sub    BYTE PTR [rdx],cl
  4416ab:	or     DWORD PTR [rcx],ecx
  4416ad:	and    BYTE PTR [rax],ah
  4416af:	and    BYTE PTR [rax],ah
  4416b1:	and    BYTE PTR [rbx+0x45],dl
  4416b4:	rex.WR
  4416b5:	rex.RB
  4416b6:	rex.XB push r12
  4416b8:	and    BYTE PTR [rbp+0x2e],ah
  4416bb:	outs   dx,BYTE PTR gs:[rsi]
  4416bd:	jne    0x44172c
  4416bf:	ins    BYTE PTR es:[rdi],dx
  4416c0:	(bad)  
  4416c1:	(bad)  
  4416c2:	gs ins BYTE PTR es:[rdi],dx
  4416c4:	or     ah,BYTE PTR [rax]
  4416c6:	and    BYTE PTR [rax],ah
  4416c8:	and    BYTE PTR [rax],ah
  4416ca:	and    BYTE PTR [rax],ah
  4416cc:	and    BYTE PTR [rax],ah
  4416ce:	and    BYTE PTR [rsi+0x52],al
  4416d1:	rex.WRXB
  4416d2:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4416d6:	pop    rdi
  4416d7:	movsxd esp,DWORD PTR [rcx+0x74]
  4416da:	(bad)  
  4416db:	ins    BYTE PTR es:[rdi],dx
  4416dc:	outs   dx,DWORD PTR ds:[rsi]
  4416dd:	addr32 cs jo 0x441748
  4416e1:	pop    rdi
  4416e2:	outs   dx,BYTE PTR gs:[rsi]
  4416e4:	jne    0x441753
  4416e6:	and    BYTE PTR [rbp+0xa],ah
  4416e9:	and    BYTE PTR [rax],ah
  4416eb:	and    BYTE PTR [rax],ah
  4416ed:	and    BYTE PTR [rax],ah
  4416ef:	and    BYTE PTR [rax],ah
  4416f1:	and    BYTE PTR [rax],ah
  4416f3:	push   rdi
  4416f4:	rex.W
  4416f5:	rex.RB push r10
  4416f7:	and    BYTE PTR [r13+0x2e],r12b
  4416fb:	outs   dx,BYTE PTR gs:[rsi]
  4416fd:	jne    0x44176c
  4416ff:	je     0x44177a
  441701:	jo     0x44176c
  441703:	and    BYTE PTR fs:[rip+0x6f2e7420],bh        # 0x6f728b2a
  44170a:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x20200000
  441712:	and    BYTE PTR [rax],ah
  441714:	and    BYTE PTR [rax],ah
  441716:	and    BYTE PTR [rax],ah
  441718:	and    BYTE PTR [rax],ah
  44171a:	rex.WRXB push r10
  44171c:	rex.R
  44171d:	rex.RB push r10
  44171f:	and    BYTE PTR [rdx+0x59],al
  441722:	and    BYTE PTR [rbp+0x2e],ah
  441725:	outs   dx,BYTE PTR gs:[rsi]
  441727:	jne    0x441796
  441729:	jae    0x44179a
  44172b:	jb     0x4417a1
  44172d:	outs   dx,DWORD PTR ds:[rsi]
  44172e:	jb     0x441794
  441730:	gs jb  0x44173d
  441733:	add    BYTE PTR [rax],ah
  441735:	and    BYTE PTR [rax],ah
  441737:	and    BYTE PTR [rax],ah
  441739:	and    BYTE PTR [rax],ah
  44173b:	and    BYTE PTR [rax],ah
  44173d:	and    BYTE PTR [rdi+0x52],cl
  441740:	rex.R
  441741:	rex.RB push r10
  441743:	and    BYTE PTR [rdx+0x59],al
  441746:	and    BYTE PTR [rbp+0x2e],ah
  441749:	outs   dx,DWORD PTR ds:[rsi]
  44174a:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x6d656c45
  441752:	outs   dx,BYTE PTR gs:[rsi]
  441754:	je     0x4417c9
  441756:	add    BYTE PTR [rax],al
  441758:	and    BYTE PTR [rax],ah
  44175a:	and    BYTE PTR [rax],ah
  44175c:	and    BYTE PTR [rax],ah
  44175e:	sub    DWORD PTR [rdx+rcx*1],ebp
  441761:	and    BYTE PTR [rax],ah
  441763:	and    BYTE PTR [rax],ah
  441765:	and    BYTE PTR [rax],ah
  441767:	rex.RB (bad) 
  441769:	pop    rsp
  44176a:	outs   dx,BYTE PTR ds:[rsi]
  44176b:	(bad)  
  44176c:	or     ah,BYTE PTR [rax]
  44176e:	and    BYTE PTR [rcx],ch
  441770:	and    BYTE PTR [rcx+0x53],al
  441773:	and    BYTE PTR [rdx],ah
  441775:	and    eax,0xa2c2273
  44177a:	add    BYTE PTR [rsi+rbp*1+0x74],dh
  44177e:	jns    0x4417f0
  441780:	(bad)  
  441781:	movsxd ebp,DWORD PTR [rax+rax*1+0x0]
  441785:	add    BYTE PTR [rax],al
  441787:	add    BYTE PTR [rax],ah
  441789:	and    BYTE PTR [rax+0x67],dh
  44178c:	pop    rdi
  44178d:	movsxd esp,DWORD PTR [rcx+0x74]
  441790:	(bad)  
  441791:	ins    BYTE PTR es:[rdi],dx
  441792:	outs   dx,DWORD PTR ds:[rsi]
  441793:	outs   dx,DWORD PTR cs:[esi]
  441796:	(bad)  
  441797:	push   0x5f
  441799:	fs gs jae 0x441800
  44179d:	jb     0x441808
  44179f:	jo     0x441815
  4417a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7428
  4417a8:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  4417b0:	je     0x44182b
  4417b2:	jo     0x441819
  4417b4:	(bad)  
  4417b5:	sub    DWORD PTR [rax],esp
  4417b7:	(bad)  
  4417b8:	jae    0x4417da
  4417ba:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4e3a33
  4417c0:	rex.RX push rdx
  4417c2:	rex.WRXB
  4417c3:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4417c7:	pop    rdi
  4417c8:	movsxd esp,DWORD PTR [rcx+0x74]
  4417cb:	(bad)  
  4417cc:	ins    BYTE PTR es:[rdi],dx
  4417cd:	outs   dx,DWORD PTR ds:[rsi]
  4417ce:	addr32 cs jo 0x441839
  4417d2:	pop    rdi
  4417d3:	je     0x44184e
  4417d5:	jo     0x44183c
  4417d7:	and    BYTE PTR [rdx+rcx*1+0x20],dh
  4417db:	and    BYTE PTR [rax],ah
  4417dd:	and    BYTE PTR [rax],ah
  4417df:	rex.WR
  4417e0:	rex.RB
  4417e1:	rex.RX push rsp
  4417e3:	and    BYTE PTR [rdx+0x4f],cl
  4417e6:	rex.WB
  4417e7:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4417eb:	pop    rdi
  4417ec:	movsxd esp,DWORD PTR [rcx+0x74]
  4417ef:	(bad)  
  4417f0:	ins    BYTE PTR es:[rdi],dx
  4417f1:	outs   dx,DWORD PTR ds:[rsi]
  4417f2:	addr32 cs jo 0x44185d
  4417f6:	pop    rdi
  4417f7:	outs   dx,BYTE PTR ds:[rsi]
  4417f8:	(bad)  
  4417f9:	ins    DWORD PTR es:[rdi],dx
  4417fa:	gs jae 0x44186d
  4417fd:	(bad)  
  4417fe:	movsxd esp,DWORD PTR [rbp+0x20]
  441801:	outs   dx,BYTE PTR ds:[rsi]
  441802:	and    BYTE PTR [rdi+0x4e],cl
  441805:	and    BYTE PTR [rsi+0x2e],ch
  441808:	outs   dx,DWORD PTR ds:[rsi]
  441809:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  441811:	jns    0x441883
  441813:	outs   dx,BYTE PTR ds:[rsi]
  441814:	(bad)  
  441815:	ins    DWORD PTR es:[rdi],dx
  441816:	gs jae 0x441889
  441819:	(bad)  
  44181a:	movsxd esp,DWORD PTR [rbp+0xa]
  44181d:	add    BYTE PTR [rdi+0x48],dl
  441820:	rex.RB push r10
  441822:	and    BYTE PTR [r8],r13b
  441825:	je     0x441855
  441827:	je     0x4418a2
  441829:	jo     0x44189d
  44182b:	gs ins BYTE PTR es:[rdi],dx
  44182d:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x203020
  441835:	add    BYTE PTR [rax],al
  441837:	add    BYTE PTR [rdi+0x52],cl
  44183a:	and    BYTE PTR [rax],ch
  44183c:	push   rbx
  44183d:	rex.RB
  44183e:	rex.WR
  44183f:	rex.RB
  441840:	rex.XB push r12
  441842:	and    BYTE PTR [rbx+0x2e],ah
  441845:	jb     0x4418ac
  441847:	ins    BYTE PTR es:[rdi],dx
  441848:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  44184c:	and    BYTE PTR [rip+0x27632720],bh        # 0x27a73f72
  441852:	and    BYTE PTR [rsi+0x52],al
  441855:	rex.WRXB
  441856:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44185a:	pop    rdi
  44185b:	movsxd esp,DWORD PTR [rcx+0x74]
  44185e:	(bad)  
  44185f:	ins    BYTE PTR es:[rdi],dx
  441860:	outs   dx,DWORD PTR ds:[rsi]
  441861:	addr32 cs jo 0x4418cc
  441865:	pop    rdi
  441866:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44186a:	jae    0x44188c
  44186c:	movsxd esp,DWORD PTR [rax]
  44186e:	push   rdi
  44186f:	rex.W
  441870:	rex.RB push r10
  441872:	and    BYTE PTR [r11+0x2e],r12b
  441876:	outs   dx,DWORD PTR ds:[rsi]
  441877:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  44187f:	jns    0x4418f1
  441881:	jb     0x4418e8
  441883:	ins    BYTE PTR es:[rdi],dx
  441884:	imul   esp,DWORD PTR [rcx+rbp*1+0x29],0xa
  44188c:	add    BYTE PTR [rax],al
  44188e:	add    BYTE PTR [rax],al
  441890:	and    BYTE PTR [rax],ah
  441892:	rex.B
  441893:	rex.WRX
  441894:	and    BYTE PTR [rsi+0x4f],r9b
  441898:	push   rsp
  441899:	and    BYTE PTR [rbp+0x58],al
  44189c:	rex.WB push r11
  44189e:	push   rsp
  44189f:	push   rbx
  4418a0:	sub    BYTE PTR [rbx+0x45],dl
  4418a3:	rex.WR
  4418a4:	rex.RB
  4418a5:	rex.XB push r12
  4418a7:	and    BYTE PTR [rcx],dh
  4418a9:	and    BYTE PTR [rsi+0x52],al
  4418ac:	rex.WRXB
  4418ad:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4418b1:	pop    rdi
  4418b2:	movsxd esp,DWORD PTR [rcx+0x74]
  4418b5:	(bad)  
  4418b6:	ins    BYTE PTR es:[rdi],dx
  4418b7:	outs   dx,DWORD PTR ds:[rsi]
  4418b8:	addr32 cs jo 0x441923
  4418bc:	pop    rdi
  4418bd:	je     0x441938
  4418bf:	jo     0x441926
  4418c1:	and    BYTE PTR [rbp+0x6c],ah
  4418c4:	and    BYTE PTR [rdi+0x48],dl
  4418c7:	rex.RB push r10
  4418c9:	and    BYTE PTR [r13+0x6c],r12b
  4418cd:	outs   dx,DWORD PTR cs:[rsi]
  4418cf:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  4418d7:	jns    0x441949
  4418d9:	gs ins BYTE PTR es:[rdi],dx
  4418db:	gs ins DWORD PTR es:[rdi],dx
  4418dd:	and    BYTE PTR [rcx+0x4e],al
  4418e0:	and    BYTE PTR [rbp+0x6c],r12b
  4418e4:	cs je  0x441960
  4418e7:	jo     0x44194a
  4418e9:	jb     0x44195d
  4418eb:	(bad)  
  4418ec:	jns    0x44190e
  4418ee:	cmp    eax,0x6f2e7420
  4418f3:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x41202000
  4418fb:	rex.WRX
  4418fc:	and    BYTE PTR [rsi+rbp*1+0x74],r14b
  441901:	jns    0x441973
  441903:	outs   dx,BYTE PTR ds:[rsi]
  441904:	(bad)  
  441905:	ins    DWORD PTR es:[rdi],dx
  441906:	and    BYTE PTR gs:[rcx],ah
  441909:	jle    0x44192b
  44190b:	(bad)  
  44190c:	pop    rsi
  44190d:	pop    rdi
  44190e:	(bad)  
  44190f:	or     al,BYTE PTR [rax]
  441911:	add    BYTE PTR [rax],al
  441913:	add    BYTE PTR [rax],al
  441915:	add    BYTE PTR [rax],al
  441917:	add    BYTE PTR [rax+0x67],dh
  44191a:	pop    rdi
  44191b:	movsxd esp,DWORD PTR [rcx+0x74]
  44191e:	(bad)  
  44191f:	ins    BYTE PTR es:[rdi],dx
  441920:	outs   dx,DWORD PTR ds:[rsi]
  441921:	addr32 cs jo 0x44198c
  441925:	pop    rdi
  441926:	je     0x4419a1
  441928:	jo     0x44198f
  44192a:	pop    rdi
  44192b:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  441932:	(bad)  
  441933:	ins    BYTE PTR es:[rdi],dx
  441934:	sub    BYTE PTR gs:[rsi+rbp*1+0x6f],dh
  441939:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x70000000
  441941:	addr32 pop rdi
  441943:	movsxd esp,DWORD PTR [rcx+0x74]
  441946:	(bad)  
  441947:	ins    BYTE PTR es:[rdi],dx
  441948:	outs   dx,DWORD PTR ds:[rsi]
  441949:	outs   dx,WORD PTR cs:[esi]
  44194d:	jb     0x4419bc
  44194f:	(bad)  
  441950:	je     0x4419b1
  441952:	je     0x4419cd
  441954:	jo     0x4419bb
  441956:	sub    BYTE PTR [rsi+rbp*1+0x6f],dh
  44195a:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x4c4c554e
  441962:	sub    DWORD PTR [rax],eax
  441964:	je     0x441994
  441966:	je     0x4419e1
  441968:	jo     0x4419d8
  44196a:	(bad)  
  44196b:	ins    DWORD PTR es:[rdi],dx
  44196c:	add    BYTE PTR gs:[rdi+0x52],cl
  441970:	rex.R
  441971:	rex.RB push r10
  441973:	and    BYTE PTR [rdx+0x59],al
  441976:	and    BYTE PTR [rcx],dh
  441978:	sub    al,0x20
  44197a:	xor    bh,BYTE PTR [rbx]
  44197c:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  441980:	je     0x4419a2
  441982:	outs   dx,DWORD PTR ds:[rsi]
  441983:	data16 and BYTE PTR [rcx+riz*2+0x74],ah
  441988:	(bad)  
  441989:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  44198d:	gs jae 0x441990
  441990:	push   rbx
  441991:	rex.RB
  441992:	rex.WR
  441993:	rex.RB
  441994:	rex.XB push r12
  441996:	and    BYTE PTR [rsi+0x2e],ch
  441999:	outs   dx,BYTE PTR ds:[rsi]
  44199a:	jae    0x441a0c
  44199c:	outs   dx,BYTE PTR ds:[rsi]
  44199d:	(bad)  
  44199e:	ins    DWORD PTR es:[rdi],dx
  44199f:	and    BYTE PTR gs:[rcx+0x73],ah
  4419a3:	and    BYTE PTR [rdx],ah
  4419a5:	and    eax,0xa2c2273
  4419aa:	and    BYTE PTR [rax],ah
  4419ac:	outs   dx,DWORD PTR ds:[rsi]
  4419ad:	outs   dx,DWORD PTR cs:[rsi]
  4419af:	jo     0x441a23
  4419b1:	outs   dx,BYTE PTR ds:[rsi]
  4419b2:	(bad)  
  4419b3:	ins    DWORD PTR es:[rdi],dx
  4419b4:	and    BYTE PTR gs:[rcx+0x53],al
  4419b8:	and    BYTE PTR [rdx],ah
  4419ba:	and    eax,0xa2c2273
  4419bf:	and    BYTE PTR [rax],ah
  4419c1:	rex.XB
  4419c2:	push   r11
  4419c4:	and    BYTE PTR [r15+0x48],r10b
  4419c8:	rex.RB
  4419c9:	rex.WRX and BYTE PTR [rdi+0x2e],r13b
  4419cd:	outs   dx,DWORD PTR ds:[rsi]
  4419ce:	jo     0x441a42
  4419d0:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  4419d4:	cmp    eax,0x20276c27
  4419d9:	push   rsp
  4419da:	rex.W
  4419db:	rex.RB
  4419dc:	rex.WRX and BYTE PTR [rsi+0x55],r9b
  4419e0:	rex.WR
  4419e1:	rex.WR and BYTE PTR [rbp+0x4c],r8b
  4419e5:	push   rbx
  4419e6:	and    BYTE PTR [r8+0x67],r14b
  4419ea:	pop    rdi
  4419eb:	movsxd esp,DWORD PTR [rcx+0x74]
  4419ee:	(bad)  
  4419ef:	ins    BYTE PTR es:[rdi],dx
  4419f0:	outs   dx,DWORD PTR ds:[rsi]
  4419f1:	outs   dx,WORD PTR cs:[esi]
  4419f5:	jb     0x441a64
  4419f7:	(bad)  
  4419f8:	je     0x441a59
  4419fa:	je     0x441a75
  4419fc:	jo     0x441a63
  4419fe:	sub    BYTE PTR [rdi+0x2e],ch
  441a01:	outs   dx,DWORD PTR ds:[rsi]
  441a02:	jo     0x441a76
  441a04:	ins    BYTE PTR es:[rdi],dx
  441a05:	gs data16 je 0x441a35
  441a09:	and    BYTE PTR [rsi+0x55],cl
  441a0c:	rex.WR
  441a0d:	sub    QWORD PTR [rax],r12
  441a10:	rex.RB
  441a11:	rex.WRX
  441a12:	and    BYTE PTR [rcx+0x53],r8b
  441a16:	and    BYTE PTR [rdx],ah
  441a18:	and    eax,0xa2c2273
  441a1d:	and    BYTE PTR [rax],ah
  441a1f:	rex.XB
  441a20:	push   r11
  441a22:	and    BYTE PTR [r15+0x48],r10b
  441a26:	rex.RB
  441a27:	rex.WRX and BYTE PTR [rdi+0x2e],r13b
  441a2b:	outs   dx,DWORD PTR ds:[rsi]
  441a2c:	jo     0x441aa0
  441a2e:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  441a32:	cmp    eax,0x20277227
  441a37:	push   rsp
  441a38:	rex.W
  441a39:	rex.RB
  441a3a:	rex.WRX and BYTE PTR [rsi+0x55],r9b
  441a3e:	rex.WR
  441a3f:	rex.WR and BYTE PTR [rbp+0x4c],r8b
  441a43:	push   rbx
  441a44:	and    BYTE PTR [r8+0x67],r14b
  441a48:	pop    rdi
  441a49:	movsxd esp,DWORD PTR [rcx+0x74]
  441a4c:	(bad)  
  441a4d:	ins    BYTE PTR es:[rdi],dx
  441a4e:	outs   dx,DWORD PTR ds:[rsi]
  441a4f:	outs   dx,WORD PTR cs:[esi]
  441a53:	jb     0x441ac2
  441a55:	(bad)  
  441a56:	je     0x441ab7
  441a58:	je     0x441ad3
  441a5a:	jo     0x441ac1
  441a5c:	sub    BYTE PTR [rdi+0x2e],ch
  441a5f:	outs   dx,DWORD PTR ds:[rsi]
  441a60:	jo     0x441ad4
  441a62:	jb     0x441acd
  441a64:	addr32 push 0x4e202c74
  441a6a:	push   rbp
  441a6b:	rex.WR
  441a6c:	sub    QWORD PTR [rax],r12
  441a6f:	rex.RB
  441a70:	rex.WRX
  441a71:	and    BYTE PTR [rcx+0x53],r8b
  441a75:	and    BYTE PTR [rdx],ah
  441a77:	and    eax,0xa2c2273
  441a7c:	and    BYTE PTR [rax],ah
  441a7e:	jo     0x441ae7
  441a80:	pop    rdi
  441a81:	movsxd esp,DWORD PTR [rcx+0x74]
  441a84:	(bad)  
  441a85:	ins    BYTE PTR es:[rdi],dx
  441a86:	outs   dx,DWORD PTR ds:[rsi]
  441a87:	outs   dx,WORD PTR cs:[esi]
  441a8b:	jb     0x441afa
  441a8d:	(bad)  
  441a8e:	je     0x441aef
  441a90:	je     0x441b0b
  441a92:	jo     0x441af9
  441a94:	sub    BYTE PTR [rdi+0x2e],ch
  441a97:	outs   dx,DWORD PTR ds:[rsi]
  441a98:	jo     0x441b0c
  441a9a:	jb     0x441b01
  441a9c:	jae    0x441b13
  441a9e:	ins    BYTE PTR es:[rdi],dx
  441a9f:	je     0x441acd
  441aa1:	and    BYTE PTR [rsi+0x55],cl
  441aa4:	rex.WR
  441aa5:	sub    QWORD PTR [rax],r12
  441aa8:	push   r11
  441aaa:	and    BYTE PTR [rdx],ah
  441aac:	and    eax,0xa2c2273
  441ab1:	add    BYTE PTR [rdx+0x65],dl
  441ab4:	jae    0x441b2b
  441ab6:	ins    BYTE PTR es:[rdi],dx
  441ab7:	je     0x441ad9
  441ab9:	je     0x441b34
  441abb:	jo     0x441b22
  441abd:	add    BYTE PTR [rdx+0x69],dl
  441ac0:	addr32 push 0x72612074
  441ac6:	and    BYTE PTR [ecx+edi*2+0x70],dh
  441acb:	add    BYTE PTR gs:[rbp+riz*2+0x66],cl
  441ad0:	je     0x441af2
  441ad2:	(bad)  
  441ad3:	jb     0x441b3c
  441ad5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  441ad9:	add    BYTE PTR gs:[rsi+0x75],al
  441add:	outs   dx,BYTE PTR ds:[rsi]
  441ade:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  441ae2:	outs   dx,BYTE PTR ds:[rsi]
  441ae3:	add    BYTE PTR [rax],ah
  441ae5:	and    BYTE PTR [rdi+0x2e],ch
  441ae8:	outs   dx,DWORD PTR ds:[rsi]
  441ae9:	jo     0x441b5d
  441aeb:	movsxd ebp,DWORD PTR [rdi+0x64]
  441aee:	and    BYTE PTR gs:[rcx+0x53],al
  441af2:	and    BYTE PTR [rdx],ah
  441af4:	and    eax,0xa2c2273
  441af9:	add    BYTE PTR [rax],al
  441afb:	add    BYTE PTR [rax],al
  441afd:	add    BYTE PTR [rax],al
  441aff:	add    BYTE PTR [rax],ah
  441b01:	and    BYTE PTR [rbx+0x6f],ah
  441b04:	(bad)  
  441b05:	ins    BYTE PTR es:[rdi],dx
  441b06:	gs jae 0x441b6c
  441b09:	sub    BYTE PTR gs:[rax+0x67],dh
  441b0d:	pop    rdi
  441b0e:	movsxd esp,DWORD PTR [rcx+0x74]
  441b11:	(bad)  
  441b12:	ins    BYTE PTR es:[rdi],dx
  441b13:	outs   dx,DWORD PTR ds:[rsi]
  441b14:	outs   dx,DWORD PTR cs:[esi]
  441b17:	(bad)  
  441b18:	push   0x5f
  441b1a:	fs gs jae 0x441b81
  441b1e:	jb     0x441b89
  441b20:	jo     0x441b96
  441b22:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6f28
  441b29:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  441b31:	outs   dx,DWORD PTR ds:[rsi]
  441b32:	jo     0x441b99
  441b34:	jb     0x441b97
  441b36:	je     0x441ba7
  441b38:	jb     0x441b61
  441b3a:	sub    DWORD PTR [rdx+rcx*1],ebp
  441b3d:	and    BYTE PTR [rax],ah
  441b3f:	and    BYTE PTR [rax],ah
  441b41:	and    BYTE PTR [rax],ah
  441b43:	and    BYTE PTR [rax],ah
  441b45:	and    BYTE PTR [rax],ah
  441b47:	and    BYTE PTR [rax+0x67],dh
  441b4a:	pop    rdi
  441b4b:	movsxd esp,DWORD PTR [rcx+0x74]
  441b4e:	(bad)  
  441b4f:	ins    BYTE PTR es:[rdi],dx
  441b50:	outs   dx,DWORD PTR ds:[rsi]
  441b51:	outs   dx,DWORD PTR cs:[esi]
  441b54:	(bad)  
  441b55:	push   0x5f
  441b57:	fs gs jae 0x441bbe
  441b5b:	jb     0x441bc6
  441b5d:	jo     0x441bd3
  441b5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6f28
  441b66:	jo     0x441bda
  441b68:	movsxd ebp,DWORD PTR [rdi+0x64]
  441b6b:	gs sub al,0x20
  441b6e:	(bad)  
  441b6f:	jo     0x441bd8
  441b71:	pop    rdi
  441b72:	jo     0x441be6
  441b74:	outs   dx,DWORD PTR ds:[rsi]
  441b75:	movsxd esp,DWORD PTR [rdi]
  441b77:	sub    DWORD PTR [rcx],ebp
  441b79:	and    BYTE PTR [rcx+0x53],al
  441b7c:	and    BYTE PTR [rdx],ah
  441b7e:	and    eax,0x460a2273
  441b83:	push   rdx
  441b84:	rex.WRXB
  441b85:	rex.WRB and BYTE PTR [r8+0x67],r14b
  441b89:	pop    rdi
  441b8a:	movsxd esp,DWORD PTR [rcx+0x74]
  441b8d:	(bad)  
  441b8e:	ins    BYTE PTR es:[rdi],dx
  441b8f:	outs   dx,DWORD PTR ds:[rsi]
  441b90:	addr32 cs jo 0x441bfb
  441b94:	pop    rdi
  441b95:	outs   dx,DWORD PTR ds:[rsi]
  441b96:	jo     0x441bfd
  441b98:	jb     0x441bfb
  441b9a:	je     0x441c0b
  441b9c:	jb     0x441bbe
  441b9e:	outs   dx,DWORD PTR ds:[rsi]
  441b9f:	or     ah,BYTE PTR [rax]
  441ba1:	and    BYTE PTR [rax],ah
  441ba3:	and    BYTE PTR [rax],ah
  441ba5:	rex.WR
  441ba6:	rex.RB
  441ba7:	rex.RX push rsp
  441ba9:	and    BYTE PTR [rdx+0x4f],cl
  441bac:	rex.WB
  441bad:	rex.WRX and BYTE PTR [rax+0x67],r14b
  441bb1:	pop    rdi
  441bb2:	movsxd esp,DWORD PTR [rcx+0x74]
  441bb5:	(bad)  
  441bb6:	ins    BYTE PTR es:[rdi],dx
  441bb7:	outs   dx,DWORD PTR ds:[rsi]
  441bb8:	addr32 cs jo 0x441c23
  441bbc:	pop    rdi
  441bbd:	outs   dx,BYTE PTR ds:[rsi]
  441bbe:	(bad)  
  441bbf:	ins    DWORD PTR es:[rdi],dx
  441bc0:	gs jae 0x441c33
  441bc3:	(bad)  
  441bc4:	movsxd esp,DWORD PTR [rbp+0x20]
  441bc7:	outs   dx,BYTE PTR ds:[rsi]
  441bc8:	and    BYTE PTR [rdi+0x4e],cl
  441bcb:	and    BYTE PTR [rsi+0x2e],ch
  441bce:	outs   dx,DWORD PTR ds:[rsi]
  441bcf:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6f20
  441bd7:	jo     0x441c4b
  441bd9:	outs   dx,BYTE PTR ds:[rsi]
  441bda:	(bad)  
  441bdb:	ins    DWORD PTR es:[rdi],dx
  441bdc:	gs jae 0x441c4f
  441bdf:	(bad)  
  441be0:	movsxd esp,DWORD PTR [rbp+0xa]
  441be3:	add    BYTE PTR [rax],al
  441be5:	add    BYTE PTR [rax],al
  441be7:	add    BYTE PTR [rdi+0x48],dl
  441bea:	rex.RB push r10
  441bec:	and    BYTE PTR [r14+0x2e],r13b
  441bf0:	outs   dx,BYTE PTR ds:[rsi]
  441bf1:	jae    0x441c63
  441bf3:	outs   dx,BYTE PTR ds:[rsi]
  441bf4:	(bad)  
  441bf5:	ins    DWORD PTR es:[rdi],dx
  441bf6:	and    BYTE PTR gs:[rsi+rdi*1],bh
  441bfa:	and    BYTE PTR [rdi],ah
  441bfc:	jo     0x441c65
  441bfe:	pop    rdi
  441bff:	movsxd esp,DWORD PTR [rcx+0x74]
  441c02:	(bad)  
  441c03:	ins    BYTE PTR es:[rdi],dx
  441c04:	outs   dx,DWORD PTR ds:[rsi]
  441c05:	addr32 (bad) 
  441c07:	or     ah,BYTE PTR [rax]
  441c09:	and    BYTE PTR [rax],ah
  441c0b:	and    BYTE PTR [rax],ah
  441c0d:	and    BYTE PTR [rcx+0x4e],al
  441c10:	and    BYTE PTR [rsi+0x2e],r13b
  441c14:	outs   dx,BYTE PTR ds:[rsi]
  441c15:	jae    0x441c87
  441c17:	outs   dx,BYTE PTR ds:[rsi]
  441c18:	(bad)  
  441c19:	ins    DWORD PTR es:[rdi],dx
  441c1a:	and    BYTE PTR gs:[rsi+rdi*1],bh
  441c1e:	and    BYTE PTR [rdi],ah
  441c20:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  441c27:	je     0x441c92
  441c29:	outs   dx,DWORD PTR ds:[rsi]
  441c2a:	outs   dx,BYTE PTR ds:[rsi]
  441c2b:	pop    rdi
  441c2c:	jae    0x441c91
  441c2e:	push   0x27616d65
  441c33:	or     al,BYTE PTR [rax]
  441c35:	add    BYTE PTR [rax],al
  441c37:	add    BYTE PTR [rax+0x67],dh
  441c3a:	pop    rdi
  441c3b:	movsxd esp,DWORD PTR [rcx+0x74]
  441c3e:	(bad)  
  441c3f:	ins    BYTE PTR es:[rdi],dx
  441c40:	outs   dx,DWORD PTR ds:[rsi]
  441c41:	addr32 cs jo 0x441cac
  441c45:	pop    rdi
  441c46:	outs   dx,DWORD PTR ds:[rsi]
  441c47:	jo     0x441cae
  441c49:	jb     0x441cac
  441c4b:	je     0x441cbc
  441c4d:	jb     0x441cae
  441c4f:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  441c56:	(bad)  
  441c57:	ins    BYTE PTR es:[rdi],dx
  441c58:	sub    BYTE PTR gs:[rdi+0x2e],ch
  441c5c:	outs   dx,DWORD PTR ds:[rsi]
  441c5d:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x706f2e6f
  441c65:	jb     0x441cd5
  441c67:	(bad)  
  441c68:	ins    DWORD PTR es:[rdi],dx
  441c69:	add    BYTE PTR gs:[rdi+0x52],cl
  441c6d:	rex.R
  441c6e:	rex.RB push r10
  441c70:	and    BYTE PTR [rdx+0x59],al
  441c73:	and    BYTE PTR [rcx],dh
  441c75:	sub    al,0x20
  441c77:	xor    ch,BYTE PTR [rax+riz*1]
  441c7a:	xor    ebp,DWORD PTR [rax+riz*1]
  441c7d:	xor    al,0x3b
  441c7f:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  441c83:	je     0x441ca5
  441c85:	outs   dx,DWORD PTR ds:[rsi]
  441c86:	data16 and BYTE PTR [rdi+0x70],ch
  441c8a:	gs jb  0x441cee
  441c8d:	je     0x441cfe
  441c8f:	jb     0x441d04
  441c91:	add    BYTE PTR [rax],al
  441c93:	add    BYTE PTR [rax],al
  441c95:	add    BYTE PTR [rax],al
  441c97:	add    BYTE PTR [rbx+0x45],dl
  441c9a:	rex.WR
  441c9b:	rex.RB
  441c9c:	rex.XB push r12
  441c9e:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  441ca2:	(bad)  
  441ca3:	je     0x441d13
  441ca5:	(bad)  
  441ca6:	ins    DWORD PTR es:[rdi],dx
  441ca7:	and    BYTE PTR gs:[rcx+0x73],ah
  441cab:	and    BYTE PTR [rdx],ah
  441cad:	and    eax,0xa2c2273
  441cb2:	and    BYTE PTR [rax],ah
  441cb4:	and    BYTE PTR [rax],ah
  441cb6:	and    BYTE PTR [rax],ah
  441cb8:	and    BYTE PTR [rax+0x67],dh
  441cbb:	pop    rdi
  441cbc:	movsxd esp,DWORD PTR [rcx+0x74]
  441cbf:	(bad)  
  441cc0:	ins    BYTE PTR es:[rdi],dx
  441cc1:	outs   dx,DWORD PTR ds:[rsi]
  441cc2:	addr32 cs jo 0x441d2d
  441cc6:	pop    rdi
  441cc7:	addr32 gs je 0x441d2a
  441ccb:	jne    0x441d40
  441ccd:	gs jb  0x441d32
  441cd0:	jns    0x441d3b
  441cd2:	sub    BYTE PTR fs:[rsi+rbp*1+0x64],ah
  441cd7:	(bad)  
  441cd8:	je     0x441d3e
  441cda:	(bad)  
  441cdc:	sub    DWORD PTR [rax],esp
  441cde:	(bad)  
  441cdf:	jae    0x441d01
  441ce1:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa703f5a
  441ce7:	and    BYTE PTR [rax],ah
  441ce9:	and    BYTE PTR [rax],ah
  441ceb:	and    BYTE PTR [rax],ah
  441ced:	and    BYTE PTR [rax+0x67],dh
  441cf0:	pop    rdi
  441cf1:	movsxd esp,DWORD PTR [rcx+0x74]
  441cf4:	(bad)  
  441cf5:	ins    BYTE PTR es:[rdi],dx
  441cf6:	outs   dx,DWORD PTR ds:[rsi]
  441cf7:	addr32 cs jo 0x441d62
  441cfb:	pop    rdi
  441cfc:	outs   dx,BYTE PTR gs:[rsi]
  441cfe:	movsxd ebp,DWORD PTR [rdi+0x64]
  441d01:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6f745f
  441d08:	movsxd ebp,DWORD PTR [rax+0x61]
  441d0b:	jb     0x441d35
  441d0d:	fs cs outs dx,BYTE PTR gs:[rsi]
  441d11:	movsxd ebp,DWORD PTR [rdi+0x64]
  441d14:	imul   ebp,DWORD PTR [rsi+0x67],0x73612029
  441d1b:	and    BYTE PTR [rdx],ah
  441d1d:	and    eax,0xa2c2273
  441d22:	add    BYTE PTR [rbp+0x6e],al
  441d25:	movsxd ebp,DWORD PTR [rdi+0x64]
  441d28:	imul   ebp,DWORD PTR [rsi+0x67],0x79744300
  441d2f:	jo     0x441d96
  441d31:	add    BYTE PTR [rbx+0x6f],al
  441d34:	ins    BYTE PTR es:[rdi],dx
  441d35:	ins    BYTE PTR es:[rdi],dx
  441d36:	(bad)  
  441d37:	je     0x441d9e
  441d39:	add    BYTE PTR [rax],al
  441d3b:	add    BYTE PTR [rax],al
  441d3d:	add    BYTE PTR [rax],al
  441d3f:	add    BYTE PTR [rax],ah
  441d41:	and    BYTE PTR [rax],ah
  441d43:	and    BYTE PTR [rax],ah
  441d45:	and    BYTE PTR [rax],ah
  441d47:	fs cs fs (bad) 
  441d4b:	je     0x441db0
  441d4d:	outs   dx,DWORD PTR ds:[rsi]
  441d4e:	ins    BYTE PTR es:[rdi],dx
  441d4f:	ins    BYTE PTR es:[rdi],dx
  441d50:	(bad)  
  441d51:	je     0x441db8
  441d53:	and    BYTE PTR [rcx+0x73],ah
  441d56:	and    BYTE PTR [rdx],ah
  441d58:	and    eax,0xa2c2273
  441d5d:	and    BYTE PTR [rax],ah
  441d5f:	and    BYTE PTR [rax],ah
  441d61:	and    BYTE PTR [rax],ah
  441d63:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  441d67:	(bad)  
  441d68:	je     0x441dcd
  441d6a:	je     0x441de5
  441d6c:	jo     0x441dd3
  441d6e:	and    BYTE PTR [rcx+0x73],ah
  441d71:	and    BYTE PTR [rdx],ah
  441d73:	and    eax,0xa2c2273
  441d78:	add    BYTE PTR [rax],ah
  441d7a:	and    BYTE PTR [rax],ah
  441d7c:	and    BYTE PTR [rax],ah
  441d7e:	and    BYTE PTR [rax],ah
  441d80:	add    BYTE PTR [rsi+rbp*1+0x64],ah
  441d84:	(bad)  
  441d85:	je     0x441de8
  441d87:	movsxd ebp,DWORD PTR [rax+rax*1+0x0]
  441d8b:	add    BYTE PTR [rax],al
  441d8d:	add    BYTE PTR [rax],al
  441d8f:	add    BYTE PTR [rdx+rcx*1],ch
  441d92:	and    BYTE PTR [rax],ah
  441d94:	and    BYTE PTR [rax],ah
  441d96:	and    BYTE PTR [rax],ah
  441d98:	and    BYTE PTR [rbx+0x41],al
  441d9b:	push   rbx
  441d9c:	and    BYTE PTR [r15+0x48],r10b
  441da0:	rex.RB
  441da1:	rex.WRX and BYTE PTR [rax+0x67],r14b
  441da5:	pop    rdi
  441da6:	movsxd esp,DWORD PTR [rcx+0x74]
  441da9:	(bad)  
  441daa:	ins    BYTE PTR es:[rdi],dx
  441dab:	outs   dx,DWORD PTR ds:[rsi]
  441dac:	addr32 cs push 0x645f7361
  441db3:	(bad)  
  441db4:	je     0x441e17
  441db6:	(bad)  
  441db8:	jae    0x441e1f
  441dba:	pop    rdi
  441dbb:	jo     0x441e2f
  441dbd:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  441dc4:	sub    BYTE PTR [rsi+rbp*1+0x64],ah
  441dc8:	(bad)  
  441dc9:	je     0x441e39
  441dcb:	(bad)  
  441dcc:	ins    DWORD PTR es:[rdi],dx
  441dcd:	gs sub al,0x20
  441dd0:	(bad)  
  441dd1:	rex.XB
  441dd2:	rex.WRXB
  441dd3:	rex.WRX
  441dd4:	rex.WRX
  441dd5:	rex.RB
  441dd6:	rex.XB push r12
  441dd8:	(bad)  
  441dd9:	sub    DWORD PTR [rdx],ecx
  441ddb:	and    BYTE PTR [rax],ah
  441ddd:	and    BYTE PTR [rax],ah
  441ddf:	and    BYTE PTR [rax],ah
  441de1:	and    BYTE PTR [rax],ah
  441de3:	and    BYTE PTR [rax],ah
  441de5:	and    BYTE PTR [rax],ah
  441de7:	push   rsp
  441de8:	rex.W
  441de9:	rex.RB
  441dea:	rex.WRX and BYTE PTR [rax+0x67],r14b
  441dee:	pop    rdi
  441def:	movsxd esp,DWORD PTR [rcx+0x74]
  441df2:	(bad)  
  441df3:	ins    BYTE PTR es:[rdi],dx
  441df4:	outs   dx,DWORD PTR ds:[rsi]
  441df5:	addr32 cs jo 0x441e60
  441df9:	pop    rdi
  441dfa:	jae    0x441e65
  441dfc:	jp     0x441e63
  441dfe:	pop    rdi
  441dff:	jo     0x441e73
  441e01:	gs je  0x441e78
  441e04:	jns    0x441e2e
  441e06:	jo     0x441e6f
  441e08:	pop    rdi
  441e09:	movsxd esp,DWORD PTR [rcx+0x74]
  441e0c:	(bad)  
  441e0d:	ins    BYTE PTR es:[rdi],dx
  441e0e:	outs   dx,DWORD PTR ds:[rsi]
  441e0f:	addr32 cs jo 0x441e7a
  441e13:	pop    rdi
  441e14:	fs (bad) 
  441e16:	je     0x441e79
  441e18:	(bad)  
  441e1a:	jae    0x441e81
  441e1c:	pop    rdi
  441e1d:	jae    0x441e88
  441e1f:	jp     0x441e86
  441e21:	sub    BYTE PTR [rsi+rbp*1+0x64],ah
  441e25:	(bad)  
  441e26:	je     0x441e96
  441e28:	(bad)  
  441e29:	ins    DWORD PTR es:[rdi],dx
  441e2a:	sub    DWORD PTR gs:[rcx],ebp
  441e2d:	or     ah,BYTE PTR [rax]
  441e2f:	and    BYTE PTR [rax],ah
  441e31:	and    BYTE PTR [rax],ah
  441e33:	and    BYTE PTR [rax],ah
  441e35:	and    BYTE PTR [rax],ah
  441e37:	and    BYTE PTR [rax],ah
  441e39:	and    BYTE PTR [rbp+0x4c],al
  441e3c:	push   rbx
  441e3d:	and    BYTE PTR [r15],r12b
  441e40:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  441e42:	and    BYTE PTR [rcx+0x63],al
  441e45:	movsxd esp,DWORD PTR [rbp+0x73]
  441e48:	jae    0x441e71
  441e4a:	or     ah,BYTE PTR [rax]
  441e4c:	and    BYTE PTR [rax],ah
  441e4e:	and    BYTE PTR [rax],ah
  441e50:	and    BYTE PTR [rax],ah
  441e52:	rex.RB
  441e53:	rex.WRX
  441e54:	and    BYTE PTR [rcx+0x73],r12b
  441e58:	and    BYTE PTR [rdx],ah
  441e5a:	and    eax,0x54002273
  441e5f:	(bad)  
  441e60:	(bad)  
  441e61:	ins    BYTE PTR es:[rdi],dx
  441e62:	gs jae 0x441ed5
  441e65:	(bad)  
  441e66:	movsxd esp,DWORD PTR [rbp+0x0]
  441e69:	sub    al,0xa
  441e6b:	and    BYTE PTR [rax],ah
  441e6d:	and    BYTE PTR [rax],ah
  441e6f:	and    BYTE PTR [rax],ah
  441e71:	and    BYTE PTR [rsi+rbp*1+0x73],dh
  441e75:	jo     0x441eda
  441e77:	outs   dx,BYTE PTR ds:[rsi]
  441e78:	(bad)  
  441e79:	ins    DWORD PTR es:[rdi],dx
  441e7a:	and    BYTE PTR gs:[rcx+0x73],ah
  441e7e:	and    BYTE PTR [rdx],ah
  441e80:	and    eax,0x2273
  441e85:	add    BYTE PTR [rax],al
  441e87:	add    BYTE PTR [rdx+rcx*1],ch
  441e8a:	and    BYTE PTR [rax],ah
  441e8c:	and    BYTE PTR [rax],ah
  441e8e:	and    BYTE PTR [rax],ah
  441e90:	and    BYTE PTR [rax+0x67],dh
  441e93:	pop    rdi
  441e94:	movsxd esp,DWORD PTR [rcx+0x74]
  441e97:	(bad)  
  441e98:	ins    BYTE PTR es:[rdi],dx
  441e99:	outs   dx,DWORD PTR ds:[rsi]
  441e9a:	addr32 cs jae 0x441f06
  441e9e:	outs   dx,DWORD PTR ds:[rsi]
  441e9f:	(bad)  
  441ea0:	push   0x5f
  441ea2:	fs gs jae 0x441f09
  441ea6:	jb     0x441f11
  441ea8:	jo     0x441f1e
  441eaa:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6428
  441eb1:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  441eb9:	fs (bad) 
  441ebb:	je     0x441f1e
  441ebd:	(bad)  
  441ebf:	jae    0x441f26
  441ec1:	(bad)  
  441ec2:	sub    DWORD PTR [rax],esp
  441ec4:	(bad)  
  441ec5:	jae    0x441ee7
  441ec7:	and    ah,BYTE PTR [rip+0x2273]        # 0x444140
  441ecd:	add    BYTE PTR [rax],al
  441ecf:	add    BYTE PTR [rax],ah
  441ed1:	and    BYTE PTR [rdx+0x4f],cl
  441ed4:	rex.WB
  441ed5:	rex.WRX and BYTE PTR [rax+0x67],r14b
  441ed9:	pop    rdi
  441eda:	movsxd esp,DWORD PTR [rcx+0x74]
  441edd:	(bad)  
  441ede:	ins    BYTE PTR es:[rdi],dx
  441edf:	outs   dx,DWORD PTR ds:[rsi]
  441ee0:	addr32 cs jo 0x441f4b
  441ee4:	pop    rdi
  441ee5:	je     0x441f48
  441ee7:	(bad)  
  441ee8:	ins    BYTE PTR es:[rdi],dx
  441ee9:	gs jae 0x441f5c
  441eec:	(bad)  
  441eed:	movsxd esp,DWORD PTR [rbp+0x20]
  441ef0:	je     0x441f12
  441ef2:	outs   dx,DWORD PTR ds:[rsi]
  441ef3:	outs   dx,BYTE PTR ds:[rsi]
  441ef4:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  441ef8:	(bad)  
  441ef9:	je     0x441f6f
  441efb:	(bad)  
  441efc:	(bad)  
  441efd:	ins    BYTE PTR es:[rdi],dx
  441efe:	gs jae 0x441f71
  441f01:	(bad)  
  441f02:	movsxd esp,DWORD PTR [rbp+0x20]
  441f05:	cmp    eax,0x6f2e7420
  441f0a:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x61642e64
  441f12:	je     0x441f82
  441f14:	(bad)  
  441f15:	ins    DWORD PTR es:[rdi],dx
  441f16:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  441f1b:	je     0x441f3d
  441f1d:	outs   dx,DWORD PTR ds:[rsi]
  441f1e:	data16 and BYTE PTR [rcx+riz*2+0x74],ah
  441f23:	(bad)  
  441f24:	(bad)  
  441f26:	jae    0x441f8d
  441f28:	jae    0x441f2a
  441f2a:	add    BYTE PTR [rax],al
  441f2c:	add    BYTE PTR [rax],al
  441f2e:	add    BYTE PTR [rax],al
  441f30:	or     al,BYTE PTR [rsi+0x52]
  441f33:	rex.WRXB
  441f34:	rex.WRB and BYTE PTR [r8+0x67],r14b
  441f38:	pop    rdi
  441f39:	movsxd esp,DWORD PTR [rcx+0x74]
  441f3c:	(bad)  
  441f3d:	ins    BYTE PTR es:[rdi],dx
  441f3e:	outs   dx,DWORD PTR ds:[rsi]
  441f3f:	addr32 cs jo 0x441faa
  441f43:	pop    rdi
  441f44:	fs (bad) 
  441f46:	je     0x441fa9
  441f48:	(bad)  
  441f4a:	jae    0x441fb1
  441f4c:	and    BYTE PTR [rdx+rcx*1+0x0],ah
  441f50:	push   rbx
  441f51:	rex.RB
  441f52:	rex.WR
  441f53:	rex.RB
  441f54:	rex.XB push r12
  441f56:	and    BYTE PTR [rsi+0x2e],ch
  441f59:	outs   dx,BYTE PTR ds:[rsi]
  441f5a:	jae    0x441fcc
  441f5c:	outs   dx,BYTE PTR ds:[rsi]
  441f5d:	(bad)  
  441f5e:	ins    DWORD PTR es:[rdi],dx
  441f5f:	and    BYTE PTR gs:[rcx+0x73],ah
  441f63:	and    BYTE PTR [rdx],ah
  441f65:	and    eax,0xa2c2273
  441f6a:	and    BYTE PTR [rax],ah
  441f6c:	movsxd ebp,DWORD PTR [rsi]
  441f6e:	jb     0x441fd5
  441f70:	ins    BYTE PTR es:[rdi],dx
  441f71:	outs   dx,BYTE PTR ds:[rsi]
  441f72:	(bad)  
  441f73:	ins    DWORD PTR es:[rdi],dx
  441f74:	and    BYTE PTR gs:[rcx+0x73],ah
  441f78:	and    BYTE PTR [rdx],ah
  441f7a:	and    eax,0xa2c2273
  441f7f:	and    BYTE PTR [rax],ah
  441f81:	rex.XB
  441f82:	push   r11
  441f84:	and    BYTE PTR [r11+0x2e],r12b
  441f88:	jb     0x441fef
  441f8a:	ins    BYTE PTR es:[rdi],dx
  441f8b:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  441f8f:	and    BYTE PTR [rdi+0x48],dl
  441f92:	rex.RB
  441f93:	rex.WRX and BYTE PTR [rdi],r12b
  441f96:	jb     0x441fbf
  441f98:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441f9c:	rex.WRX and BYTE PTR [rdi],r12b
  441f9f:	and    eax,0x57202773
  441fa4:	rex.W
  441fa5:	rex.RB
  441fa6:	rex.WRX and BYTE PTR [rdi],r12b
  441fa9:	jbe    0x441fd2
  441fab:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441faf:	rex.WRX and BYTE PTR [rdi],r12b
  441fb2:	and    eax,0x57202773
  441fb7:	rex.W
  441fb8:	rex.RB
  441fb9:	rex.WRX and BYTE PTR [rdi],r12b
  441fbc:	ins    DWORD PTR es:[rdi],dx
  441fbd:	(bad)  
  441fbe:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441fc2:	rex.WRX and BYTE PTR [rdi],r12b
  441fc5:	and    eax,0x57202773
  441fca:	rex.W
  441fcb:	rex.RB
  441fcc:	rex.WRX and BYTE PTR [rdi],r12b
  441fcf:	push   rbx
  441fd0:	(bad)  
  441fd1:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441fd5:	rex.WRX and BYTE PTR [rdi],r12b
  441fd8:	and    eax,0x57202773
  441fdd:	rex.W
  441fde:	rex.RB
  441fdf:	rex.WRX and BYTE PTR [rdi],r12b
  441fe2:	data16 (bad) 
  441fe4:	and    BYTE PTR [rax+rcx*2+0x45],dl
  441fe8:	rex.WRX and BYTE PTR [rdi],r12b
  441feb:	and    eax,0x45202773
  441ff0:	rex.WRX
  441ff1:	and    BYTE PTR [rcx+0x73],r12b
  441ff5:	and    BYTE PTR [rdx],ah
  441ff7:	and    eax,0xa2c2273
  441ffc:	and    BYTE PTR [rax],ah
  441ffe:	add    BYTE PTR [rsi+0x6f],ah
  442001:	jb     0x442068
  442003:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  44200a:	ins    BYTE PTR es:[rdi],dx
  44200b:	add    BYTE PTR gs:[rbx+0x65],dh
  44200f:	jno    0x442086
  442011:	outs   dx,BYTE PTR gs:[rsi]
  442013:	movsxd esp,DWORD PTR [rbp+0x0]
  442016:	ins    DWORD PTR es:[rdi],dx
  442017:	(bad)  
  442018:	je     0x44207f
  44201a:	jb     0x442085
  44201c:	(bad)  
  44201d:	ins    BYTE PTR es:[rdi],dx
  44201e:	imul   edi,DWORD PTR [rdx+0x65],0x69762064
  442025:	gs ja  0x442028
  442028:	jbe    0x442093
  44202a:	gs ja  0x44202d
  44202d:	je     0x442090
  44202f:	(bad)  
  442030:	ins    BYTE PTR es:[rdi],dx
  442031:	add    BYTE PTR gs:[rbx+0x2e],ah
  442035:	jb     0x44209c
  442037:	ins    BYTE PTR es:[rdi],dx
  442038:	(bad)  
  442039:	movsxd ebp,DWORD PTR [rax+rax*1+0x43]
  44203d:	outs   dx,DWORD PTR ds:[rsi]
  44203e:	ins    BYTE PTR es:[rdi],dx
  44203f:	jne    0x4420ae
  442041:	outs   dx,BYTE PTR ds:[rsi]
  442042:	and    BYTE PTR [rcx+0x63],ah
  442045:	movsxd esp,DWORD PTR [rbp+0x73]
  442048:	jae    0x44206a
  44204a:	jo     0x4420be
  44204c:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  442053:	jae    0x442055
  442055:	add    BYTE PTR [rax],al
  442057:	add    BYTE PTR [rdx+rcx*1],ch
  44205a:	and    BYTE PTR [rax],ah
  44205c:	jo     0x4420c5
  44205e:	pop    rdi
  44205f:	movsxd esp,DWORD PTR [rcx+0x74]
  442062:	(bad)  
  442063:	ins    BYTE PTR es:[rdi],dx
  442064:	outs   dx,DWORD PTR ds:[rsi]
  442065:	addr32 cs (bad) 
  442068:	jb     0x4420dc
  44206a:	(bad)  
  44206b:	jns    0x4420cc
  44206d:	je     0x4420de
  44206f:	pop    rdi
  442070:	jae    0x4420e6
  442072:	jb     0x4420dd
  442074:	outs   dx,BYTE PTR ds:[rsi]
  442075:	sub    BYTE PTR [ecx+0x52],al
  442079:	push   rdx
  44207a:	pop    r9
  44207c:	sub    BYTE PTR [rdx],cl
  44207e:	and    BYTE PTR [rax],ah
  442080:	and    BYTE PTR [rax],ah
  442082:	push   rbx
  442083:	rex.RB
  442084:	rex.WR
  442085:	rex.RB
  442086:	rex.XB push r12
  442088:	and    BYTE PTR [rcx+0x74],ah
  44208b:	je     0x4420fb
  44208d:	(bad)  
  44208e:	ins    DWORD PTR es:[rdi],dx
  44208f:	and    BYTE PTR gs:[rsp+rdi*2+0x20],bh
  442094:	rex.RB (bad) 
  442096:	cmp    bl,BYTE PTR [rsi+rbp*2+0x20]
  44209a:	and    BYTE PTR [rdi],ah
  44209c:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4420a0:	jo     0x442109
  4420a2:	pop    rdi
  4420a3:	movsxd esp,DWORD PTR [rcx+0x74]
  4420a6:	(bad)  
  4420a7:	ins    BYTE PTR es:[rdi],dx
  4420a8:	outs   dx,DWORD PTR ds:[rsi]
  4420a9:	addr32 cs (bad) 
  4420ac:	jb     0x442120
  4420ae:	(bad)  
  4420af:	jns    0x442110
  4420b1:	je     0x442122
  4420b3:	pop    rdi
  4420b4:	jae    0x44212a
  4420b6:	jb     0x442121
  4420b8:	outs   dx,BYTE PTR ds:[rsi]
  4420b9:	sub    BYTE PTR [ecx+0x74],ah
  4420bd:	je     0x442120
  4420bf:	movsxd ebp,DWORD PTR [rsp+rbp*1+0x20]
  4420c3:	rex.RB (bad) 
  4420c5:	pop    rsp
  4420c6:	outs   dx,BYTE PTR ds:[rsi]
  4420c7:	and    BYTE PTR [rax],ah
  4420c9:	(bad)  
  4420ca:	sub    DWORD PTR [rdx],ecx
  4420cc:	and    BYTE PTR [rax],ah
  4420ce:	and    BYTE PTR [rax],ah
  4420d0:	rex.RX push rdx
  4420d2:	rex.WRXB
  4420d3:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4420d7:	pop    rdi
  4420d8:	movsxd esp,DWORD PTR [rcx+0x74]
  4420db:	(bad)  
  4420dc:	ins    BYTE PTR es:[rdi],dx
  4420dd:	outs   dx,DWORD PTR ds:[rsi]
  4420de:	addr32 cs jo 0x442149
  4420e2:	pop    rdi
  4420e3:	(bad)  
  4420e4:	je     0x44215a
  4420e6:	jb     0x442151
  4420e8:	(bad)  
  4420e9:	jne    0x44215f
  4420eb:	and    BYTE PTR gs:[rcx+0xa],ah
  4420ef:	and    BYTE PTR [rax],ah
  4420f1:	and    BYTE PTR [rax],ah
  4420f3:	push   rdi
  4420f4:	rex.W
  4420f5:	rex.RB push r10
  4420f7:	and    BYTE PTR [r9+0x74],r12b
  4420fb:	je     0x44216f
  4420fd:	gs ins BYTE PTR es:[rdi],dx
  4420ff:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  442107:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x4e20444e
  44210f:	rex.WRXB push r12
  442111:	and    BYTE PTR [rcx+0x74],ah
  442114:	je     0x44217f
  442116:	jae    0x44217c
  442118:	jb     0x442189
  44211a:	jo     0x44218c
  44211c:	gs and BYTE PTR fs:[rcx+0x4e],al
  442121:	and    BYTE PTR [rcx+0x74],r12b
  442125:	je     0x442188
  442127:	movsxd ebp,DWORD PTR [rax+riz*1+0x49]
  44212b:	push   rbx
  44212c:	and    BYTE PTR [rsi+0x4f],cl
  44212f:	push   rsp
  442130:	and    BYTE PTR [rsi+0x55],cl
  442133:	rex.WR
  442134:	rex.WR or r12b,BYTE PTR [rax]
  442137:	and    BYTE PTR [rcx],ch
  442139:	sub    al,0x20
  44213b:	rex.RB (bad) 
  44213d:	pop    rsp
  44213e:	outs   dx,BYTE PTR ds:[rsi]
  44213f:	(bad)  
  442140:	sub    DWORD PTR [rax],esp
  442142:	push   r11
  442144:	and    BYTE PTR [rdx],ah
  442146:	and    eax,0x2273
  44214b:	add    BYTE PTR [rax],al
  44214d:	add    BYTE PTR [rax],al
  44214f:	add    BYTE PTR [rdx],cl
  442151:	rex.RX push rdx
  442153:	rex.WRXB
  442154:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442158:	pop    rdi
  442159:	movsxd esp,DWORD PTR [rcx+0x74]
  44215c:	(bad)  
  44215d:	ins    BYTE PTR es:[rdi],dx
  44215e:	outs   dx,DWORD PTR ds:[rsi]
  44215f:	addr32 cs jo 0x4421ca
  442163:	pop    rdi
  442164:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  442168:	jae    0x44218a
  44216a:	movsxd ecx,DWORD PTR [rdx]
  44216c:	and    BYTE PTR [rax],ah
  44216e:	and    BYTE PTR [rax],ah
  442170:	and    BYTE PTR [rbp+rax*2+0x46],cl
  442174:	push   rsp
  442175:	and    BYTE PTR [rdx+0x4f],cl
  442178:	rex.WB
  442179:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44217d:	pop    rdi
  44217e:	movsxd esp,DWORD PTR [rcx+0x74]
  442181:	(bad)  
  442182:	ins    BYTE PTR es:[rdi],dx
  442183:	outs   dx,DWORD PTR ds:[rsi]
  442184:	addr32 cs jo 0x4421ef
  442188:	pop    rdi
  442189:	outs   dx,BYTE PTR ds:[rsi]
  44218a:	(bad)  
  44218b:	ins    DWORD PTR es:[rdi],dx
  44218c:	gs jae 0x4421ff
  44218f:	(bad)  
  442190:	movsxd esp,DWORD PTR [rbp+0x20]
  442193:	outs   dx,BYTE PTR ds:[rsi]
  442194:	and    BYTE PTR [rdi+0x4e],cl
  442197:	and    BYTE PTR [rsi+0x2e],ch
  44219a:	outs   dx,DWORD PTR ds:[rsi]
  44219b:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  4421a3:	gs ins BYTE PTR es:[rdi],dx
  4421a5:	outs   dx,BYTE PTR ds:[rsi]
  4421a6:	(bad)  
  4421a7:	ins    DWORD PTR es:[rdi],dx
  4421a8:	gs jae 0x44221b
  4421ab:	(bad)  
  4421ac:	movsxd esp,DWORD PTR [rbp+0xa]
  4421af:	push   rdi
  4421b0:	rex.W
  4421b1:	rex.RB push r10
  4421b3:	and    BYTE PTR [r11+0x2e],r12b
  4421b7:	jb     0x44221e
  4421b9:	ins    BYTE PTR es:[rdi],dx
  4421ba:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  4421be:	and    BYTE PTR [rcx+0x4e],cl
  4421c1:	and    BYTE PTR [rax],ch
  4421c3:	(bad)  
  4421c4:	jb     0x4421ed
  4421c6:	sub    al,0x20
  4421c8:	(bad)  
  4421c9:	jbe    0x4421f2
  4421cb:	sub    al,0x20
  4421cd:	(bad)  
  4421ce:	ins    DWORD PTR es:[rdi],dx
  4421cf:	(bad)  
  4421d0:	sub    al,0x20
  4421d2:	(bad)  
  4421d3:	push   rbx
  4421d4:	(bad)  
  4421d5:	sub    al,0x20
  4421d7:	(bad)  
  4421d8:	data16 (bad) 
  4421da:	sub    DWORD PTR [rdx],ecx
  4421dc:	add    BYTE PTR [rax],al
  4421de:	add    BYTE PTR [rax],al
  4421e0:	outs   dx,BYTE PTR ds:[rsi]
  4421e1:	outs   dx,BYTE PTR cs:[rsi]
  4421e3:	jae    0x442255
  4421e5:	outs   dx,BYTE PTR ds:[rsi]
  4421e6:	(bad)  
  4421e7:	ins    DWORD PTR es:[rdi],dx
  4421e8:	and    BYTE PTR gs:[rcx],ah
  4421eb:	jle    0x44220d
  4421ed:	(bad)  
  4421ee:	pop    rsi
  4421ef:	jo     0x442258
  4421f1:	pop    rdi
  4421f2:	(bad)  
  4421f3:	and    BYTE PTR [rcx+0x4e],al
  4421f6:	and    BYTE PTR [rax+0x67],r14b
  4421fa:	pop    rdi
  4421fb:	movsxd esp,DWORD PTR [rcx+0x74]
  4421fe:	(bad)  
  4421ff:	ins    BYTE PTR es:[rdi],dx
  442200:	outs   dx,DWORD PTR ds:[rsi]
  442201:	addr32 cs jo 0x44226c
  442205:	pop    rdi
  442206:	je     0x442269
  442208:	(bad)  
  442209:	ins    BYTE PTR es:[rdi],dx
  44220a:	gs pop rdi
  44220c:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  442213:	(bad)  
  442214:	ins    BYTE PTR es:[rdi],dx
  442215:	sub    BYTE PTR gs:[rbx+0x2e],ah
  442219:	outs   dx,DWORD PTR ds:[rsi]
  44221a:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x65722e63
  442222:	ins    BYTE PTR es:[rdi],dx
  442223:	outs   dx,BYTE PTR ds:[rsi]
  442224:	(bad)  
  442225:	ins    DWORD PTR es:[rdi],dx
  442226:	add    BYTE PTR gs:[rax+rbp*2+0x65],dl
  44222b:	and    BYTE PTR [rbx+0x65],dh
  44222e:	jb     0x4422a6
  442230:	gs jb  0x442253
  442233:	sub    BYTE PTR [rsi+0x65],dh
  442236:	jb     0x4422ab
  442238:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  44223f:	and    eax,0x64202964
  442244:	outs   dx,DWORD PTR ds:[rsi]
  442245:	gs jae 0x442268
  442248:	outs   dx,BYTE PTR ds:[rsi]
  442249:	outs   dx,DWORD PTR ds:[rsi]
  44224a:	je     0x44226c
  44224c:	jae    0x4422c3
  44224e:	jo     0x4422c0
  442250:	outs   dx,DWORD PTR ds:[rsi]
  442251:	jb     0x4422c7
  442253:	and    BYTE PTR [rcx+0x6c],ah
  442256:	je     0x4422bd
  442258:	jb     0x4422c3
  44225a:	outs   dx,BYTE PTR ds:[rsi]
  44225b:	and    BYTE PTR [ebp+eiz*2+0x66],ah
  442260:	(bad)  
  442261:	jne    0x4422cf
  442263:	je     0x442285
  442265:	jo     0x4422d9
  442267:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  44226e:	jae    0x44229e
  442270:	or     al,BYTE PTR [rax]
  442272:	add    BYTE PTR [rax],al
  442274:	add    BYTE PTR [rax],al
  442276:	add    BYTE PTR [rax],al
  442278:	push   rbx
  442279:	rex.RB
  44227a:	rex.WR
  44227b:	rex.RB
  44227c:	rex.XB push r12
  44227e:	and    BYTE PTR [rax+0x67],dh
  442281:	pop    rdi
  442282:	movsxd esp,DWORD PTR [rcx+0x74]
  442285:	(bad)  
  442286:	ins    BYTE PTR es:[rdi],dx
  442287:	outs   dx,DWORD PTR ds:[rsi]
  442288:	addr32 cs jo 0x4422f3
  44228c:	pop    rdi
  44228d:	addr32 gs je 0x4422f0
  442291:	jne    0x442306
  442293:	gs jb  0x4422f8
  442296:	jns    0x442301
  442298:	sub    BYTE PTR fs:[rsi+rbp*1+0x64],ah
  44229d:	gs data16 (bad) 
  4422a0:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x6f]
  4422a4:	ins    BYTE PTR es:[rdi],dx
  4422a5:	sub    DWORD PTR gs:[rax],esp
  4422a8:	push   r11
  4422aa:	and    BYTE PTR [rdx],ah
  4422ac:	and    eax,0xa2c2273
  4422b1:	and    BYTE PTR [rax],ah
  4422b3:	outs   dx,BYTE PTR ds:[rsi]
  4422b4:	outs   dx,BYTE PTR cs:[rsi]
  4422b6:	jae    0x442328
  4422b8:	outs   dx,BYTE PTR ds:[rsi]
  4422b9:	(bad)  
  4422ba:	ins    DWORD PTR es:[rdi],dx
  4422bb:	and    BYTE PTR gs:[rcx+0x53],al
  4422bf:	and    BYTE PTR [rdx],ah
  4422c1:	and    eax,0xa2c2273
  4422c6:	and    BYTE PTR [rax],ah
  4422c8:	rex.XB
  4422c9:	push   r11
  4422cb:	and    BYTE PTR [r14+rbp*1+0x64],r12b
  4422d0:	gs data16 (bad) 
  4422d3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x62]
  4422d7:	push   0x74
  4422d9:	jns    0x44234b
  4422db:	and    BYTE PTR gs:[rdi+0x48],dl
  4422df:	rex.RB
  4422e0:	rex.WRX and BYTE PTR [rdi],r12b
  4422e3:	and    eax,0x54202763
  4422e8:	rex.W
  4422e9:	rex.RB
  4422ea:	rex.WRX and BYTE PTR [rdi],r12b
  4422ed:	and    eax,0x57202773
  4422f2:	rex.W
  4422f3:	rex.RB
  4422f4:	rex.WRX and BYTE PTR [rdi],r12b
  4422f7:	and    eax,0x54202763
  4422fc:	rex.W
  4422fd:	rex.RB
  4422fe:	rex.WRX and BYTE PTR [rdi],r12b
  442301:	and    eax,0x57202773
  442306:	rex.W
  442307:	rex.RB
  442308:	rex.WRX and BYTE PTR [rdi],r12b
  44230b:	and    eax,0x54202763
  442310:	rex.W
  442311:	rex.RB
  442312:	rex.WRX and BYTE PTR [rdi],r12b
  442315:	and    eax,0x57202773
  44231a:	rex.W
  44231b:	rex.RB
  44231c:	rex.WRX and BYTE PTR [rdi],r12b
  44231f:	and    eax,0x54202763
  442324:	rex.W
  442325:	rex.RB
  442326:	rex.WRX and BYTE PTR [rdi],r12b
  442329:	and    eax,0x45202773
  44232e:	rex.WRX
  44232f:	and    BYTE PTR [rcx+0x53],r8b
  442333:	and    BYTE PTR [rdx],ah
  442335:	and    eax,0xa2c2273
  44233a:	and    BYTE PTR [rax],ah
  44233c:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  442340:	add    BYTE PTR gs:[rsi+0x75],ah
  442344:	outs   dx,BYTE PTR ds:[rsi]
  442345:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  442349:	outs   dx,BYTE PTR ds:[rsi]
  44234a:	add    BYTE PTR [rsi+rbp*1+0x64],ah
  44234e:	gs data16 (bad) 
  442351:	movsxd ebp,DWORD PTR [rcx+riz*2+0x63]
  442355:	ins    BYTE PTR es:[rdi],dx
  442356:	add    BYTE PTR [rax],al
  442358:	or     al,BYTE PTR [rsi+0x52]
  44235b:	rex.WRXB
  44235c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442360:	pop    rdi
  442361:	movsxd esp,DWORD PTR [rcx+0x74]
  442364:	(bad)  
  442365:	ins    BYTE PTR es:[rdi],dx
  442366:	outs   dx,DWORD PTR ds:[rsi]
  442367:	addr32 cs jo 0x4423d2
  44236b:	pop    rdi
  44236c:	fs gs data16 (bad) 
  442370:	jne    0x4423de
  442372:	je     0x4423d3
  442374:	(bad)  
  442375:	movsxd ebp,DWORD PTR [rax+riz*1+0x64]
  442379:	or     ah,BYTE PTR [rax]
  44237b:	and    BYTE PTR [rax],ah
  44237d:	and    BYTE PTR [rax],ah
  44237f:	rex.WR
  442380:	rex.RB
  442381:	rex.RX push rsp
  442383:	and    BYTE PTR [rdx+0x4f],cl
  442386:	rex.WB
  442387:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44238b:	pop    rdi
  44238c:	movsxd esp,DWORD PTR [rcx+0x74]
  44238f:	(bad)  
  442390:	ins    BYTE PTR es:[rdi],dx
  442391:	outs   dx,DWORD PTR ds:[rsi]
  442392:	addr32 cs jo 0x4423fd
  442396:	pop    rdi
  442397:	outs   dx,BYTE PTR ds:[rsi]
  442398:	(bad)  
  442399:	ins    DWORD PTR es:[rdi],dx
  44239a:	gs jae 0x44240d
  44239d:	(bad)  
  44239e:	movsxd esp,DWORD PTR [rbp+0x20]
  4423a1:	outs   dx,BYTE PTR ds:[rsi]
  4423a2:	and    BYTE PTR [rdi+0x4e],cl
  4423a5:	and    BYTE PTR [rsi+0x2e],ch
  4423a8:	outs   dx,DWORD PTR ds:[rsi]
  4423a9:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x642e6420
  4423b1:	gs data16 (bad) 
  4423b4:	movsxd ebp,DWORD PTR [rsi+rbp*2+0x61]
  4423b8:	ins    DWORD PTR es:[rdi],dx
  4423b9:	gs jae 0x44242c
  4423bc:	(bad)  
  4423bd:	movsxd esp,DWORD PTR [rbp+0xa]
	...
  4423c8:	jo     0x442431
  4423ca:	pop    rdi
  4423cb:	movsxd esp,DWORD PTR [rcx+0x74]
  4423ce:	(bad)  
  4423cf:	ins    BYTE PTR es:[rdi],dx
  4423d0:	outs   dx,DWORD PTR ds:[rsi]
  4423d1:	addr32 cs jo 0x44243c
  4423d5:	pop    rdi
  4423d6:	addr32 gs je 0x442439
  4423da:	jne    0x44244f
  4423dc:	gs jb  0x442441
  4423df:	jns    0x44244a
  4423e1:	sub    BYTE PTR fs:[rsi+rbp*1+0x64],ah
  4423e6:	gs data16 (bad) 
  4423e9:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x6f]
  4423ed:	ins    BYTE PTR es:[rdi],dx
  4423ee:	sub    DWORD PTR gs:[rax],eax
  4423f1:	rex.WRXB push r10
  4423f3:	rex.R
  4423f4:	rex.RB push r10
  4423f6:	and    BYTE PTR [rdx+0x59],al
  4423f9:	and    BYTE PTR [rcx],dh
  4423fb:	sub    al,0x20
  4423fd:	xor    ch,BYTE PTR [rax+riz*1]
  442400:	xor    edi,DWORD PTR [rbx]
  442402:	add    BYTE PTR [rbp+riz*2+0x66],al
  442406:	(bad)  
  442407:	jne    0x442475
  442409:	je     0x44242b
  44240b:	(bad)  
  44240c:	movsxd esp,DWORD PTR [rbx+0x65]
  44240f:	jae    0x442484
  442411:	and    BYTE PTR [rax+0x72],dh
  442414:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  44241b:	jae    0x44241d
  44241d:	add    BYTE PTR [rax],al
  44241f:	add    BYTE PTR [rbx+0x45],dl
  442422:	rex.WR
  442423:	rex.RB
  442424:	rex.XB push r12
  442426:	and    BYTE PTR [rcx+rcx*2+0x53],al
  44242a:	push   rsp
  44242b:	rex.WB
  44242c:	rex.WRX
  44242d:	rex.XB push r12
  44242f:	and    BYTE PTR [rsp+rsi*2+0x2e],dh
  442433:	outs   dx,BYTE PTR ds:[rsi]
  442434:	jae    0x4424a6
  442436:	outs   dx,BYTE PTR ds:[rsi]
  442437:	(bad)  
  442438:	ins    DWORD PTR es:[rdi],dx
  442439:	and    BYTE PTR gs:[rcx+0x53],al
  44243d:	and    BYTE PTR [rdx],ah
  44243f:	and    eax,0x202c2273
  442444:	je     0x4424ba
  442446:	outs   dx,BYTE PTR cs:[rsi]
  442448:	(bad)  
  442449:	ins    DWORD PTR es:[rdi],dx
  44244a:	and    BYTE PTR gs:[rcx+0x53],al
  44244e:	and    BYTE PTR [rdx],ah
  442450:	and    eax,0x202c2273
  442455:	je     0x4424cb
  442457:	outs   dx,DWORD PTR cs:[rsi]
  442459:	(bad)  
  44245a:	push   0x65
  44245c:	movsxd esi,DWORD PTR [rax+riz*1+0x41]
  442460:	push   rbx
  442461:	and    BYTE PTR [rdx],ah
  442463:	and    eax,0x202c2273
  442468:	fs cs fs gs jae 0x4424d1
  44246e:	jb     0x4424d9
  442470:	jo     0x4424e6
  442472:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  442479:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e46f2
  44247f:	push   rdx
  442480:	rex.WRXB
  442481:	rex.WRB and BYTE PTR [r8],r13b
  442484:	or     al,BYTE PTR [rax]
  442486:	rex.WRXB (bad) 
  442488:	push   0x65
  44248a:	movsxd esi,DWORD PTR [rax+rax*1+0x63]
  44248e:	outs   dx,DWORD PTR ds:[rsi]
  44248f:	outs   dx,BYTE PTR ds:[rsi]
  442490:	jae    0x442506
  442492:	jb     0x4424f5
  442494:	imul   ebp,DWORD PTR [rsi+0x74],0x53202000
  44249b:	rex.RB
  44249c:	rex.WR
  44249d:	rex.RB
  44249e:	rex.XB push r12
  4424a0:	and    BYTE PTR [rax+0x67],dh
  4424a3:	movsxd ebp,DWORD PTR [rsi]
  4424a5:	outs   dx,DWORD PTR ds:[rsi]
  4424a6:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x696f2073
  4424ae:	fs sub al,0x20
  4424b1:	jo     0x44251a
  4424b3:	movsxd ebp,DWORD PTR [rsi]
  4424b5:	je     0x442518
  4424b7:	(bad)  
  4424b8:	ins    BYTE PTR es:[rdi],dx
  4424b9:	outs   dx,DWORD PTR gs:[rsi]
  4424bb:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x61742053
  4424c3:	(bad)  
  4424c4:	ins    BYTE PTR es:[rdi],dx
  4424c5:	outs   dx,DWORD PTR gs:[rsi]
  4424c7:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  4424cf:	outs   dx,BYTE PTR ds:[rsi]
  4424d0:	jae    0x442542
  4424d2:	outs   dx,BYTE PTR ds:[rsi]
  4424d3:	(bad)  
  4424d4:	ins    DWORD PTR es:[rdi],dx
  4424d5:	and    BYTE PTR gs:[rcx+0x73],ah
  4424d9:	and    BYTE PTR [rsi+0x73],ch
  4424dc:	jo     0x44254c
  4424de:	(bad)  
  4424df:	ins    DWORD PTR es:[rdi],dx
  4424e0:	gs sub al,0xa
  4424e3:	and    BYTE PTR [rax],ah
  4424e5:	rex.XB
  4424e6:	push   r11
  4424e8:	push   rsp
  4424e9:	sub    BYTE PTR [rax+0x67],dh
  4424ec:	movsxd ebp,DWORD PTR [rsi]
  4424ee:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4424f1:	outs   dx,BYTE PTR ds:[rsi]
  4424f2:	(bad)  
  4424f3:	ins    DWORD PTR es:[rdi],dx
  4424f4:	and    BYTE PTR gs:[rcx+0x53],al
  4424f8:	and    BYTE PTR [rax+0x67],dh
  4424fb:	pop    rdi
  4424fc:	movsxd esp,DWORD PTR [rcx+0x74]
  4424ff:	(bad)  
  442500:	ins    BYTE PTR es:[rdi],dx
  442501:	outs   dx,DWORD PTR ds:[rsi]
  442502:	addr32 cs je 0x44256b
  442506:	js     0x44257c
  442508:	sub    DWORD PTR [rax],esp
  44250a:	(bad)  
  44250b:	jae    0x44252d
  44250d:	outs   dx,BYTE PTR ds:[rsi]
  44250e:	(bad)  
  44250f:	ins    DWORD PTR es:[rdi],dx
  442510:	gs sub al,0x20
  442513:	and    BYTE PTR [rbx+0x41],al
  442516:	push   rbx
  442517:	push   rsp
  442518:	sub    BYTE PTR [rdi],ah
  44251a:	and    eax,0x41202773
  44251f:	push   rbx
  442520:	and    BYTE PTR [rax+0x67],dh
  442523:	pop    rdi
  442524:	movsxd esp,DWORD PTR [rcx+0x74]
  442527:	(bad)  
  442528:	ins    BYTE PTR es:[rdi],dx
  442529:	outs   dx,DWORD PTR ds:[rsi]
  44252a:	addr32 cs je 0x442593
  44252e:	js     0x4425a4
  442530:	sub    DWORD PTR [rax],esp
  442532:	(bad)  
  442533:	jae    0x442555
  442535:	outs   dx,DWORD PTR ds:[rsi]
  442536:	(bad)  
  442537:	push   0x65
  442539:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  44253d:	and    BYTE PTR [rsi+0x52],al
  442540:	rex.WRXB
  442541:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442545:	pop    rdi
  442546:	movsxd esp,DWORD PTR [rcx+0x74]
  442549:	(bad)  
  44254a:	ins    BYTE PTR es:[rdi],dx
  44254b:	outs   dx,DWORD PTR ds:[rsi]
  44254c:	addr32 cs jo 0x4425b7
  442550:	pop    rdi
  442551:	movsxd ebp,DWORD PTR [rdi+0x6e]
  442554:	jae    0x4425ca
  442556:	jb     0x4425b9
  442558:	imul   ebp,DWORD PTR [rsi+0x74],0x63677020
  44255f:	or     ah,BYTE PTR [rax]
  442561:	and    BYTE PTR [rax],ah
  442563:	and    BYTE PTR [rdx+0x4f],cl
  442566:	rex.WB
  442567:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44256b:	pop    rdi
  44256c:	movsxd esp,DWORD PTR [rcx+0x74]
  44256f:	(bad)  
  442570:	ins    BYTE PTR es:[rdi],dx
  442571:	outs   dx,DWORD PTR ds:[rsi]
  442572:	addr32 cs jo 0x4425dd
  442576:	pop    rdi
  442577:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44257b:	jae    0x44259d
  44257d:	movsxd esp,DWORD PTR [rax]
  44257f:	rex.WRXB
  442580:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  442584:	outs   dx,DWORD PTR ds:[rsi]
  442585:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x63677020
  44258d:	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
  442591:	jb     0x4425f8
  442593:	ins    BYTE PTR es:[rdi],dx
  442594:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x4c202020
  44259c:	rex.RB
  44259d:	rex.RX push rsp
  44259f:	and    BYTE PTR [rdx+0x4f],cl
  4425a2:	rex.WB
  4425a3:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4425a7:	pop    rdi
  4425a8:	movsxd esp,DWORD PTR [rcx+0x74]
  4425ab:	(bad)  
  4425ac:	ins    BYTE PTR es:[rdi],dx
  4425ad:	outs   dx,DWORD PTR ds:[rsi]
  4425ae:	addr32 cs jo 0x442619
  4425b2:	pop    rdi
  4425b3:	outs   dx,BYTE PTR ds:[rsi]
  4425b4:	(bad)  
  4425b5:	ins    DWORD PTR es:[rdi],dx
  4425b6:	gs jae 0x442629
  4425b9:	(bad)  
  4425ba:	movsxd esp,DWORD PTR [rbp+0x20]
  4425bd:	outs   dx,BYTE PTR ds:[rsi]
  4425be:	and    BYTE PTR [rax],ah
  4425c0:	and    BYTE PTR [rax],ah
  4425c2:	and    BYTE PTR [rdi+0x4e],cl
  4425c5:	and    BYTE PTR [rsi+0x2e],ch
  4425c8:	outs   dx,DWORD PTR ds:[rsi]
  4425c9:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  4425d1:	gs ins BYTE PTR es:[rdi],dx
  4425d3:	outs   dx,BYTE PTR ds:[rsi]
  4425d4:	(bad)  
  4425d5:	ins    DWORD PTR es:[rdi],dx
  4425d6:	gs jae 0x442649
  4425d9:	(bad)  
  4425da:	movsxd esp,DWORD PTR [rbp+0xa]
  4425dd:	add    BYTE PTR [rax],al
  4425df:	add    BYTE PTR [rax+0x67],dh
  4425e2:	pop    rdi
  4425e3:	movsxd esp,DWORD PTR [rcx+0x74]
  4425e6:	(bad)  
  4425e7:	ins    BYTE PTR es:[rdi],dx
  4425e8:	outs   dx,DWORD PTR ds:[rsi]
  4425e9:	addr32 cs jo 0x442654
  4425ed:	pop    rdi
  4425ee:	je     0x442651
  4425f0:	(bad)  
  4425f1:	ins    BYTE PTR es:[rdi],dx
  4425f2:	gs pop rdi
  4425f4:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  4425fb:	(bad)  
  4425fc:	ins    BYTE PTR es:[rdi],dx
  4425fd:	sub    BYTE PTR gs:[rbx+0x2e],ah
  442601:	outs   dx,DWORD PTR ds:[rsi]
  442602:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x2e636770
  44260a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44260d:	outs   dx,BYTE PTR ds:[rsi]
  44260e:	(bad)  
  44260f:	ins    DWORD PTR es:[rdi],dx
  442610:	add    BYTE PTR gs:[rax],al
  442613:	add    BYTE PTR [rax],al
  442615:	add    BYTE PTR [rax],al
  442617:	add    BYTE PTR [rax+0x67],dh
  44261a:	pop    rdi
  44261b:	movsxd esp,DWORD PTR [rcx+0x74]
  44261e:	(bad)  
  44261f:	ins    BYTE PTR es:[rdi],dx
  442620:	outs   dx,DWORD PTR ds:[rsi]
  442621:	addr32 cs jo 0x44268c
  442625:	pop    rdi
  442626:	outs   dx,DWORD PTR ds:[rsi]
  442627:	jo     0x44268c
  442629:	ins    BYTE PTR es:[rdi],dx
  44262a:	(bad)  
  44262b:	jae    0x4426a0
  44262d:	pop    rdi
  44262e:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  442635:	(bad)  
  442636:	ins    BYTE PTR es:[rdi],dx
  442637:	sub    BYTE PTR gs:[rdi+0x2e],ch
  44263b:	outs   dx,DWORD PTR ds:[rsi]
  44263c:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x706f2e6f
  442644:	movsxd ebp,DWORD PTR [rsi+0x61]
  442647:	ins    DWORD PTR es:[rdi],dx
  442648:	add    BYTE PTR gs:[rdi+0x70],ch
  44264c:	gs jb  0x4426b0
  44264f:	je     0x4426c0
  442651:	jb     0x442673
  442653:	data16 (bad) 
  442655:	ins    DWORD PTR es:[rdi],dx
  442656:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x0
  44265e:	add    BYTE PTR [rax],al
  442660:	push   rbp
  442661:	rex.WRX
  442662:	rex.WB
  442663:	rex.WRXB
  442664:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  442668:	rex.WR or r12b,BYTE PTR [rax]
  44266b:	and    BYTE PTR [rbx+0x45],dl
  44266e:	rex.WR
  44266f:	rex.RB
  442670:	rex.XB push r12
  442672:	and    BYTE PTR [rdi+0x70],ch
  442675:	outs   dx,WORD PTR cs:[rsi]
  442678:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x696f2073
  442680:	fs sub al,0x20
  442683:	outs   dx,DWORD PTR ds:[rsi]
  442684:	jo     0x4426ec
  442686:	cs je  0x4426ea
  442689:	(bad)  
  44268a:	ins    BYTE PTR es:[rdi],dx
  44268b:	outs   dx,DWORD PTR gs:[rsi]
  44268d:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x61742073
  442695:	(bad)  
  442696:	ins    BYTE PTR es:[rdi],dx
  442697:	outs   dx,DWORD PTR gs:[rsi]
  442699:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  4426a1:	outs   dx,BYTE PTR ds:[rsi]
  4426a2:	jae    0x442714
  4426a4:	outs   dx,BYTE PTR ds:[rsi]
  4426a5:	(bad)  
  4426a6:	ins    DWORD PTR es:[rdi],dx
  4426a7:	and    BYTE PTR gs:[rcx+0x73],ah
  4426ab:	and    BYTE PTR [rsi+0x73],ch
  4426ae:	jo     0x44271e
  4426b0:	(bad)  
  4426b1:	ins    DWORD PTR es:[rdi],dx
  4426b2:	gs sub al,0xa
  4426b5:	and    BYTE PTR [rax],ah
  4426b7:	rex.XB
  4426b8:	push   r11
  4426ba:	push   rsp
  4426bb:	sub    BYTE PTR [rdi+0x70],ch
  4426be:	outs   dx,WORD PTR cs:[rsi]
  4426c1:	jo     0x442729
  4426c3:	outs   dx,BYTE PTR ds:[rsi]
  4426c4:	(bad)  
  4426c5:	ins    DWORD PTR es:[rdi],dx
  4426c6:	and    BYTE PTR gs:[rcx+0x53],al
  4426ca:	and    BYTE PTR [rax+0x67],dh
  4426cd:	pop    rdi
  4426ce:	movsxd esp,DWORD PTR [rcx+0x74]
  4426d1:	(bad)  
  4426d2:	ins    BYTE PTR es:[rdi],dx
  4426d3:	outs   dx,DWORD PTR ds:[rsi]
  4426d4:	addr32 cs je 0x44273d
  4426d8:	js     0x44274e
  4426da:	sub    DWORD PTR [rax],esp
  4426dc:	push   r11
  4426de:	and    BYTE PTR [rsi+0x61],ch
  4426e1:	ins    DWORD PTR es:[rdi],dx
  4426e2:	gs sub al,0xa
  4426e5:	and    BYTE PTR [rax],ah
  4426e7:	rex.XB
  4426e8:	push   r11
  4426ea:	push   rsp
  4426eb:	sub    BYTE PTR [rdi],ah
  4426ed:	and    eax,0x41202773
  4426f2:	push   rbx
  4426f3:	and    BYTE PTR [rax+0x67],dh
  4426f6:	pop    rdi
  4426f7:	movsxd esp,DWORD PTR [rcx+0x74]
  4426fa:	(bad)  
  4426fb:	ins    BYTE PTR es:[rdi],dx
  4426fc:	outs   dx,DWORD PTR ds:[rsi]
  4426fd:	addr32 cs je 0x442766
  442701:	js     0x442777
  442703:	sub    DWORD PTR [rax],esp
  442705:	(bad)  
  442706:	jae    0x442728
  442708:	outs   dx,DWORD PTR ds:[rsi]
  442709:	(bad)  
  44270a:	push   0x65
  44270c:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  442710:	and    BYTE PTR [rsi+0x52],al
  442713:	rex.WRXB
  442714:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442718:	pop    rdi
  442719:	movsxd esp,DWORD PTR [rcx+0x74]
  44271c:	(bad)  
  44271d:	ins    BYTE PTR es:[rdi],dx
  44271e:	outs   dx,DWORD PTR ds:[rsi]
  44271f:	addr32 cs jo 0x44278a
  442723:	pop    rdi
  442724:	outs   dx,DWORD PTR ds:[rsi]
  442725:	jo     0x44278d
  442727:	(bad)  
  442728:	ins    DWORD PTR es:[rdi],dx
  442729:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0xa66706f
  442731:	and    BYTE PTR [rax],ah
  442733:	and    BYTE PTR [rax],ah
  442735:	rex.WX
  442736:	rex.WRXB
  442737:	rex.WB
  442738:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44273c:	pop    rdi
  44273d:	movsxd esp,DWORD PTR [rcx+0x74]
  442740:	(bad)  
  442741:	ins    BYTE PTR es:[rdi],dx
  442742:	outs   dx,DWORD PTR ds:[rsi]
  442743:	addr32 cs jo 0x4427ae
  442747:	pop    rdi
  442748:	(bad)  
  442749:	ins    DWORD PTR es:[rdi],dx
  44274a:	and    BYTE PTR [rcx+0x6d],ah
  44274d:	and    BYTE PTR [rdi+0x4e],cl
  442750:	and    BYTE PTR [rdi+0x70],ch
  442753:	outs   dx,WORD PTR cs:[rsi]
  442756:	jo     0x4427be
  442758:	ins    DWORD PTR es:[rdi],dx
  442759:	gs je  0x4427c4
  44275c:	outs   dx,DWORD PTR ds:[rsi]
  44275d:	and    BYTE PTR fs:[rip+0x2e6d6120],bh        # 0x2eb18884
  442764:	outs   dx,DWORD PTR ds:[rsi]
  442765:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x4a202020
  44276d:	rex.WRXB
  44276e:	rex.WB
  44276f:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442773:	pop    rdi
  442774:	movsxd esp,DWORD PTR [rcx+0x74]
  442777:	(bad)  
  442778:	ins    BYTE PTR es:[rdi],dx
  442779:	outs   dx,DWORD PTR ds:[rsi]
  44277a:	addr32 cs jo 0x4427e5
  44277e:	pop    rdi
  44277f:	outs   dx,BYTE PTR ds:[rsi]
  442780:	(bad)  
  442781:	ins    DWORD PTR es:[rdi],dx
  442782:	gs jae 0x4427f5
  442785:	(bad)  
  442786:	movsxd esp,DWORD PTR [rbp+0x20]
  442789:	outs   dx,BYTE PTR ds:[rsi]
  44278a:	and    BYTE PTR [rdi+0x4e],cl
  44278d:	and    BYTE PTR [rdi+0x70],ch
  442790:	outs   dx,WORD PTR cs:[rsi]
  442793:	jo     0x4427fb
  442795:	outs   dx,BYTE PTR ds:[rsi]
  442796:	(bad)  
  442797:	ins    DWORD PTR es:[rdi],dx
  442798:	gs jae 0x44280b
  44279b:	(bad)  
  44279c:	movsxd esp,DWORD PTR [rbp+0x20]
  44279f:	cmp    eax,0x6f2e6e20
  4427a4:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x635f6770
  4427ac:	(bad)  
  4427ad:	je     0x442810
  4427af:	ins    BYTE PTR es:[rdi],dx
  4427b0:	outs   dx,DWORD PTR ds:[rsi]
  4427b1:	addr32 cs jo 0x44281c
  4427b5:	pop    rdi
  4427b6:	outs   dx,DWORD PTR ds:[rsi]
  4427b7:	jo     0x44281f
  4427b9:	(bad)  
  4427ba:	ins    DWORD PTR es:[rdi],dx
  4427bb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x765f7369
  4427c3:	imul   esi,DWORD PTR [rbx+0x69],0x28656c62
  4427ca:	outs   dx,DWORD PTR ds:[rsi]
  4427cb:	jo     0x442833
  4427cd:	outs   dx,DWORD PTR cs:[rsi]
  4427cf:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x2e66706f
  4427d7:	outs   dx,DWORD PTR ds:[rsi]
  4427d8:	jo     0x442840
  4427da:	outs   dx,BYTE PTR ds:[rsi]
  4427db:	(bad)  
  4427dc:	ins    DWORD PTR es:[rdi],dx
  4427dd:	add    BYTE PTR gs:[rdx+0x75],dh
  4427e1:	ins    BYTE PTR es:[rdi],dx
  4427e2:	add    BYTE PTR gs:[rax],al
  4427e5:	add    BYTE PTR [rax],al
  4427e7:	add    BYTE PTR [rbp+0x4e],dl
  4427ea:	rex.WB
  4427eb:	rex.WRXB
  4427ec:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  4427f0:	rex.WR or r12b,BYTE PTR [rax]
  4427f3:	and    BYTE PTR [rbx+0x45],dl
  4427f6:	rex.WR
  4427f7:	rex.RB
  4427f8:	rex.XB push r12
  4427fa:	and    BYTE PTR [rdx+0x2e],dh
  4427fd:	outs   dx,DWORD PTR ds:[rsi]
  4427fe:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x696f2073
  442806:	fs sub al,0x20
  442809:	jb     0x442839
  44280b:	je     0x44286e
  44280d:	(bad)  
  44280e:	ins    BYTE PTR es:[rdi],dx
  44280f:	outs   dx,DWORD PTR gs:[rsi]
  442811:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x61742073
  442819:	(bad)  
  44281a:	ins    BYTE PTR es:[rdi],dx
  44281b:	outs   dx,DWORD PTR gs:[rsi]
  44281d:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  442825:	outs   dx,BYTE PTR ds:[rsi]
  442826:	jae    0x442898
  442828:	outs   dx,BYTE PTR ds:[rsi]
  442829:	(bad)  
  44282a:	ins    DWORD PTR es:[rdi],dx
  44282b:	and    BYTE PTR gs:[rcx+0x73],ah
  44282f:	and    BYTE PTR [rsi+0x73],ch
  442832:	jo     0x4428a2
  442834:	(bad)  
  442835:	ins    DWORD PTR es:[rdi],dx
  442836:	gs sub al,0xa
  442839:	and    BYTE PTR [rax],ah
  44283b:	rex.XB
  44283c:	push   r11
  44283e:	push   rsp
  44283f:	sub    BYTE PTR [rdx+0x2e],dh
  442842:	jb     0x4428b9
  442844:	ins    BYTE PTR es:[rdi],dx
  442845:	outs   dx,BYTE PTR gs:[rsi]
  442847:	(bad)  
  442848:	ins    DWORD PTR es:[rdi],dx
  442849:	and    BYTE PTR gs:[rcx+0x53],al
  44284d:	and    BYTE PTR [rax+0x67],dh
  442850:	pop    rdi
  442851:	movsxd esp,DWORD PTR [rcx+0x74]
  442854:	(bad)  
  442855:	ins    BYTE PTR es:[rdi],dx
  442856:	outs   dx,DWORD PTR ds:[rsi]
  442857:	addr32 cs je 0x4428c0
  44285b:	js     0x4428d1
  44285d:	sub    DWORD PTR [rax],esp
  44285f:	(bad)  
  442860:	jae    0x442882
  442862:	outs   dx,BYTE PTR ds:[rsi]
  442863:	(bad)  
  442864:	ins    DWORD PTR es:[rdi],dx
  442865:	gs sub al,0x20
  442868:	and    BYTE PTR [rbx+0x41],al
  44286b:	push   rbx
  44286c:	push   rsp
  44286d:	sub    BYTE PTR [rdi],ah
  44286f:	and    eax,0x41202773
  442874:	push   rbx
  442875:	and    BYTE PTR [rax+0x67],dh
  442878:	pop    rdi
  442879:	movsxd esp,DWORD PTR [rcx+0x74]
  44287c:	(bad)  
  44287d:	ins    BYTE PTR es:[rdi],dx
  44287e:	outs   dx,DWORD PTR ds:[rsi]
  44287f:	addr32 cs je 0x4428e8
  442883:	js     0x4428f9
  442885:	sub    DWORD PTR [rax],esp
  442887:	(bad)  
  442888:	jae    0x4428aa
  44288a:	outs   dx,DWORD PTR ds:[rsi]
  44288b:	(bad)  
  44288c:	push   0x65
  44288e:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  442892:	and    BYTE PTR [rsi+0x52],al
  442895:	rex.WRXB
  442896:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44289a:	pop    rdi
  44289b:	movsxd esp,DWORD PTR [rcx+0x74]
  44289e:	(bad)  
  44289f:	ins    BYTE PTR es:[rdi],dx
  4428a0:	outs   dx,DWORD PTR ds:[rsi]
  4428a1:	addr32 cs jo 0x44290c
  4428a5:	pop    rdi
  4428a6:	jb     0x44290d
  4428a8:	ja     0x44291c
  4428aa:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x20200a72
  4428b2:	and    BYTE PTR [rax],ah
  4428b4:	and    BYTE PTR [rax],ah
  4428b6:	and    BYTE PTR [rdx+0x4f],cl
  4428b9:	rex.WB
  4428ba:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4428be:	pop    rdi
  4428bf:	movsxd esp,DWORD PTR [rcx+0x74]
  4428c2:	(bad)  
  4428c3:	ins    BYTE PTR es:[rdi],dx
  4428c4:	outs   dx,DWORD PTR ds:[rsi]
  4428c5:	addr32 cs jo 0x442930
  4428c9:	pop    rdi
  4428ca:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4428ce:	jae    0x4428f0
  4428d0:	movsxd esp,DWORD PTR [rax]
  4428d2:	rex.WRXB
  4428d3:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  4428d7:	outs   dx,DWORD PTR ds:[rsi]
  4428d8:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x652e7220
  4428e0:	jbe    0x442941
  4428e2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4428e6:	jae    0x4428f2
  4428e8:	and    BYTE PTR [rax],ah
  4428ea:	and    BYTE PTR [rax],ah
  4428ec:	and    BYTE PTR [rax],ah
  4428ee:	and    BYTE PTR [rbp+rax*2+0x46],cl
  4428f2:	push   rsp
  4428f3:	and    BYTE PTR [rdx+0x4f],cl
  4428f6:	rex.WB
  4428f7:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4428fb:	pop    rdi
  4428fc:	movsxd esp,DWORD PTR [rcx+0x74]
  4428ff:	(bad)  
  442900:	ins    BYTE PTR es:[rdi],dx
  442901:	outs   dx,DWORD PTR ds:[rsi]
  442902:	addr32 cs jo 0x44296d
  442906:	pop    rdi
  442907:	outs   dx,BYTE PTR ds:[rsi]
  442908:	(bad)  
  442909:	ins    DWORD PTR es:[rdi],dx
  44290a:	gs jae 0x44297d
  44290d:	(bad)  
  44290e:	movsxd esp,DWORD PTR [rbp+0x20]
  442911:	outs   dx,BYTE PTR ds:[rsi]
  442912:	and    BYTE PTR [rdi+0x4e],cl
  442915:	and    BYTE PTR [rsi+0x2e],ch
  442918:	outs   dx,DWORD PTR ds:[rsi]
  442919:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  442921:	gs ins BYTE PTR es:[rdi],dx
  442923:	outs   dx,BYTE PTR ds:[rsi]
  442924:	(bad)  
  442925:	ins    DWORD PTR es:[rdi],dx
  442926:	gs jae 0x442999
  442929:	(bad)  
  44292a:	movsxd esp,DWORD PTR [rbp+0xa]
  44292d:	and    BYTE PTR [rax],ah
  44292f:	push   rdi
  442930:	rex.W
  442931:	rex.RB push r10
  442933:	and    BYTE PTR [r10+0x2e],r14b
  442937:	jb     0x4429ae
  442939:	ins    BYTE PTR es:[rdi],dx
  44293a:	outs   dx,BYTE PTR gs:[rsi]
  44293c:	(bad)  
  44293d:	ins    DWORD PTR es:[rdi],dx
  44293e:	and    BYTE PTR gs:[rcx],ah
  442941:	cmp    eax,0x525f2720
  442946:	rex.RB push r12
  442948:	push   rbp
  442949:	push   rdx
  44294a:	rex.WRX (bad) 
  44294c:	or     al,BYTE PTR [rax]
  44294e:	jb     0x44297e
  442950:	jb     0x4429c7
  442952:	ins    BYTE PTR es:[rdi],dx
  442953:	outs   dx,BYTE PTR gs:[rsi]
  442955:	(bad)  
  442956:	ins    DWORD PTR es:[rdi],dx
  442957:	add    BYTE PTR gs:[rax],al
  44295a:	add    BYTE PTR [rax],al
  44295c:	add    BYTE PTR [rax],al
  44295e:	add    BYTE PTR [rax],al
  442960:	push   rbp
  442961:	rex.WRX
  442962:	rex.WB
  442963:	rex.WRXB
  442964:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  442968:	rex.WR or r12b,BYTE PTR [rax]
  44296b:	and    BYTE PTR [rbx+0x45],dl
  44296e:	rex.WR
  44296f:	rex.RB
  442970:	rex.XB push r12
  442972:	and    BYTE PTR [rsi+rbp*1+0x6f],dh
  442976:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x696f2073
  44297e:	fs sub al,0x20
  442981:	je     0x4429b1
  442983:	je     0x4429e6
  442985:	(bad)  
  442986:	ins    BYTE PTR es:[rdi],dx
  442987:	outs   dx,DWORD PTR gs:[rsi]
  442989:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x61742073
  442991:	(bad)  
  442992:	ins    BYTE PTR es:[rdi],dx
  442993:	outs   dx,DWORD PTR gs:[rsi]
  442995:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  44299d:	outs   dx,BYTE PTR ds:[rsi]
  44299e:	jae    0x442a10
  4429a0:	outs   dx,BYTE PTR ds:[rsi]
  4429a1:	(bad)  
  4429a2:	ins    DWORD PTR es:[rdi],dx
  4429a3:	and    BYTE PTR gs:[rcx+0x73],ah
  4429a7:	and    BYTE PTR [rsi+0x73],ch
  4429aa:	jo     0x442a1a
  4429ac:	(bad)  
  4429ad:	ins    DWORD PTR es:[rdi],dx
  4429ae:	gs sub al,0xa
  4429b1:	and    BYTE PTR [rax],ah
  4429b3:	rex.XB
  4429b4:	push   r11
  4429b6:	push   rsp
  4429b7:	sub    BYTE PTR [rsi+rbp*1+0x74],dh
  4429bb:	outs   dx,BYTE PTR ds:[esi]
  4429bd:	(bad)  
  4429be:	ins    DWORD PTR es:[rdi],dx
  4429bf:	and    BYTE PTR gs:[rcx+0x53],al
  4429c3:	and    BYTE PTR [rax+0x67],dh
  4429c6:	pop    rdi
  4429c7:	movsxd esp,DWORD PTR [rcx+0x74]
  4429ca:	(bad)  
  4429cb:	ins    BYTE PTR es:[rdi],dx
  4429cc:	outs   dx,DWORD PTR ds:[rsi]
  4429cd:	addr32 cs je 0x442a36
  4429d1:	js     0x442a47
  4429d3:	sub    DWORD PTR [rax],esp
  4429d5:	(bad)  
  4429d6:	jae    0x4429f8
  4429d8:	outs   dx,BYTE PTR ds:[rsi]
  4429d9:	(bad)  
  4429da:	ins    DWORD PTR es:[rdi],dx
  4429db:	gs sub al,0x20
  4429de:	and    BYTE PTR [rbx+0x41],al
  4429e1:	push   rbx
  4429e2:	push   rsp
  4429e3:	sub    BYTE PTR [rdi],ah
  4429e5:	and    eax,0x41202773
  4429ea:	push   rbx
  4429eb:	and    BYTE PTR [rax+0x67],dh
  4429ee:	pop    rdi
  4429ef:	movsxd esp,DWORD PTR [rcx+0x74]
  4429f2:	(bad)  
  4429f3:	ins    BYTE PTR es:[rdi],dx
  4429f4:	outs   dx,DWORD PTR ds:[rsi]
  4429f5:	addr32 cs je 0x442a5e
  4429f9:	js     0x442a6f
  4429fb:	sub    DWORD PTR [rax],esp
  4429fd:	(bad)  
  4429fe:	jae    0x442a20
  442a00:	outs   dx,DWORD PTR ds:[rsi]
  442a01:	(bad)  
  442a02:	push   0x65
  442a04:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  442a08:	and    BYTE PTR [rsi+0x52],al
  442a0b:	rex.WRXB
  442a0c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442a10:	pop    rdi
  442a11:	movsxd esp,DWORD PTR [rcx+0x74]
  442a14:	(bad)  
  442a15:	ins    BYTE PTR es:[rdi],dx
  442a16:	outs   dx,DWORD PTR ds:[rsi]
  442a17:	addr32 cs jo 0x442a82
  442a1b:	pop    rdi
  442a1c:	je     0x442a90
  442a1e:	imul   esp,DWORD PTR [rdi+0x67],0x74207265
  442a25:	or     ah,BYTE PTR [rax]
  442a27:	and    BYTE PTR [rax],ah
  442a29:	and    BYTE PTR [rax],ah
  442a2b:	and    BYTE PTR [rax],ah
  442a2d:	rex.WX
  442a2e:	rex.WRXB
  442a2f:	rex.WB
  442a30:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442a34:	pop    rdi
  442a35:	movsxd esp,DWORD PTR [rcx+0x74]
  442a38:	(bad)  
  442a39:	ins    BYTE PTR es:[rdi],dx
  442a3a:	outs   dx,DWORD PTR ds:[rsi]
  442a3b:	addr32 cs jo 0x442aa6
  442a3f:	pop    rdi
  442a40:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  442a44:	jae    0x442a66
  442a46:	movsxd esp,DWORD PTR [rax]
  442a48:	rex.WRXB
  442a49:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  442a4d:	outs   dx,DWORD PTR ds:[rsi]
  442a4e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  442a56:	addr32 jb 0x442abe
  442a59:	ins    BYTE PTR es:[rdi],dx
  442a5a:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  442a62:	and    BYTE PTR [rax],ah
  442a64:	rex.WR
  442a65:	rex.RB
  442a66:	rex.RX push rsp
  442a68:	and    BYTE PTR [rdx+0x4f],cl
  442a6b:	rex.WB
  442a6c:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442a70:	pop    rdi
  442a71:	movsxd esp,DWORD PTR [rcx+0x74]
  442a74:	(bad)  
  442a75:	ins    BYTE PTR es:[rdi],dx
  442a76:	outs   dx,DWORD PTR ds:[rsi]
  442a77:	addr32 cs jo 0x442ae2
  442a7b:	pop    rdi
  442a7c:	outs   dx,BYTE PTR ds:[rsi]
  442a7d:	(bad)  
  442a7e:	ins    DWORD PTR es:[rdi],dx
  442a7f:	gs jae 0x442af2
  442a82:	(bad)  
  442a83:	movsxd esp,DWORD PTR [rbp+0x20]
  442a86:	outs   dx,BYTE PTR ds:[rsi]
  442a87:	and    BYTE PTR [rdi+0x4e],cl
  442a8a:	and    BYTE PTR [rsi+0x2e],ch
  442a8d:	outs   dx,DWORD PTR ds:[rsi]
  442a8e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  442a96:	gs ins BYTE PTR es:[rdi],dx
  442a98:	outs   dx,BYTE PTR ds:[rsi]
  442a99:	(bad)  
  442a9a:	ins    DWORD PTR es:[rdi],dx
  442a9b:	gs jae 0x442b0e
  442a9e:	(bad)  
  442a9f:	movsxd esp,DWORD PTR [rbp+0xa]
  442aa2:	add    BYTE PTR [rsi+rbp*1+0x74],dh
  442aa6:	outs   dx,BYTE PTR ds:[esi]
  442aa8:	(bad)  
  442aa9:	ins    DWORD PTR es:[rdi],dx
  442aaa:	add    BYTE PTR gs:[rax],al
  442aad:	add    BYTE PTR [rax],al
  442aaf:	add    BYTE PTR [rcx],ch
  442ab1:	and    BYTE PTR [rcx+0x53],al
  442ab4:	and    BYTE PTR [rsp+rsi*2+0xa],dh
  442ab8:	and    BYTE PTR [rax],ah
  442aba:	rex.WX
  442abb:	rex.WRXB
  442abc:	rex.WB
  442abd:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442ac1:	pop    rdi
  442ac2:	movsxd esp,DWORD PTR [rcx+0x74]
  442ac5:	(bad)  
  442ac6:	ins    BYTE PTR es:[rdi],dx
  442ac7:	outs   dx,DWORD PTR ds:[rsi]
  442ac8:	addr32 cs jo 0x442b33
  442acc:	pop    rdi
  442acd:	fs gs jae 0x442b34
  442ad1:	jb     0x442b3c
  442ad3:	jo     0x442b49
  442ad5:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f206420
  442adc:	rex.WRX and BYTE PTR [rax],r13b
  442adf:	je     0x442b55
  442ae1:	outs   dx,DWORD PTR cs:[rsi]
  442ae3:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6420
  442aeb:	(bad)  
  442aec:	push   0x6f
  442aee:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x7420444e
  442af6:	je     0x442b26
  442af8:	je     0x442b5b
  442afa:	(bad)  
  442afb:	ins    BYTE PTR es:[rdi],dx
  442afc:	outs   dx,DWORD PTR gs:[rsi]
  442afe:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6420
  442b06:	ins    BYTE PTR es:[rdi],dx
  442b07:	(bad)  
  442b08:	jae    0x442b7d
  442b0a:	outs   dx,DWORD PTR ds:[rsi]
  442b0b:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  442b13:	outs   dx,DWORD PTR cs:[rsi]
  442b15:	(bad)  
  442b16:	push   0x73
  442b18:	jne    0x442b7c
  442b1a:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa293020
  442b22:	add    BYTE PTR [rdi+0x62],cl
  442b25:	push   0x65
  442b27:	movsxd esi,DWORD PTR [rax+riz*1+0x64]
  442b2b:	gs jae 0x442b91
  442b2e:	jb     0x442b99
  442b30:	jo     0x442ba6
  442b32:	imul   ebp,DWORD PTR [rdi+0x6e],0x706f0073
  442b39:	gs jb  0x442b9d
  442b3c:	je     0x442bad
  442b3e:	jb     0x442b60
  442b40:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  442b44:	jae    0x442b46
  442b46:	add    BYTE PTR [rax],al
  442b48:	push   rbp
  442b49:	rex.WRX
  442b4a:	rex.WB
  442b4b:	rex.WRXB
  442b4c:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  442b50:	rex.WR or r12b,BYTE PTR [rax]
  442b53:	and    BYTE PTR [rbx+0x45],dl
  442b56:	rex.WR
  442b57:	rex.RB
  442b58:	rex.XB push r12
  442b5a:	and    BYTE PTR [rdi+0x2e],ch
  442b5d:	outs   dx,DWORD PTR ds:[rsi]
  442b5e:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x696f2073
  442b66:	fs sub al,0x20
  442b69:	outs   dx,DWORD PTR ds:[rsi]
  442b6a:	cs je  0x442bce
  442b6d:	(bad)  
  442b6e:	ins    BYTE PTR es:[rdi],dx
  442b6f:	outs   dx,DWORD PTR gs:[rsi]
  442b71:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x61742073
  442b79:	(bad)  
  442b7a:	ins    BYTE PTR es:[rdi],dx
  442b7b:	outs   dx,DWORD PTR gs:[rsi]
  442b7d:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  442b85:	outs   dx,BYTE PTR ds:[rsi]
  442b86:	jae    0x442bf8
  442b88:	outs   dx,BYTE PTR ds:[rsi]
  442b89:	(bad)  
  442b8a:	ins    DWORD PTR es:[rdi],dx
  442b8b:	and    BYTE PTR gs:[rcx+0x73],ah
  442b8f:	and    BYTE PTR [rsi+0x73],ch
  442b92:	jo     0x442c02
  442b94:	(bad)  
  442b95:	ins    DWORD PTR es:[rdi],dx
  442b96:	gs sub al,0xa
  442b99:	and    BYTE PTR [rax],ah
  442b9b:	rex.XB
  442b9c:	push   r11
  442b9e:	push   rsp
  442b9f:	sub    BYTE PTR [rdi+0x2e],ch
  442ba2:	outs   dx,DWORD PTR ds:[rsi]
  442ba3:	jo     0x442c08
  442ba5:	outs   dx,BYTE PTR ds:[rsi]
  442ba6:	(bad)  
  442ba7:	ins    DWORD PTR es:[rdi],dx
  442ba8:	and    BYTE PTR gs:[rcx+0x53],al
  442bac:	and    BYTE PTR [rax+0x67],dh
  442baf:	pop    rdi
  442bb0:	movsxd esp,DWORD PTR [rcx+0x74]
  442bb3:	(bad)  
  442bb4:	ins    BYTE PTR es:[rdi],dx
  442bb5:	outs   dx,DWORD PTR ds:[rsi]
  442bb6:	addr32 cs je 0x442c1f
  442bba:	js     0x442c30
  442bbc:	sub    DWORD PTR [rax],esp
  442bbe:	(bad)  
  442bbf:	jae    0x442be1
  442bc1:	outs   dx,BYTE PTR ds:[rsi]
  442bc2:	(bad)  
  442bc3:	ins    DWORD PTR es:[rdi],dx
  442bc4:	gs sub al,0xa
  442bc7:	and    BYTE PTR [rax],ah
  442bc9:	rex.XB
  442bca:	push   r11
  442bcc:	push   rsp
  442bcd:	sub    BYTE PTR [rdi],ah
  442bcf:	and    eax,0x41202773
  442bd4:	push   rbx
  442bd5:	and    BYTE PTR [rax+0x67],dh
  442bd8:	pop    rdi
  442bd9:	movsxd esp,DWORD PTR [rcx+0x74]
  442bdc:	(bad)  
  442bdd:	ins    BYTE PTR es:[rdi],dx
  442bde:	outs   dx,DWORD PTR ds:[rsi]
  442bdf:	addr32 cs je 0x442c48
  442be3:	js     0x442c59
  442be5:	sub    DWORD PTR [rax],esp
  442be7:	(bad)  
  442be8:	jae    0x442c0a
  442bea:	outs   dx,DWORD PTR ds:[rsi]
  442beb:	(bad)  
  442bec:	push   0x65
  442bee:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  442bf2:	and    BYTE PTR [rsi+0x52],al
  442bf5:	rex.WRXB
  442bf6:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442bfa:	pop    rdi
  442bfb:	movsxd esp,DWORD PTR [rcx+0x74]
  442bfe:	(bad)  
  442bff:	ins    BYTE PTR es:[rdi],dx
  442c00:	outs   dx,DWORD PTR ds:[rsi]
  442c01:	addr32 cs jo 0x442c6c
  442c05:	pop    rdi
  442c06:	outs   dx,DWORD PTR ds:[rsi]
  442c07:	jo     0x442c6c
  442c09:	ins    BYTE PTR es:[rdi],dx
  442c0a:	(bad)  
  442c0b:	jae    0x442c80
  442c0d:	and    BYTE PTR [rdi+0xa],ch
  442c10:	and    BYTE PTR [rax],ah
  442c12:	and    BYTE PTR [rax],ah
  442c14:	rex.WX
  442c15:	rex.WRXB
  442c16:	rex.WB
  442c17:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442c1b:	pop    rdi
  442c1c:	movsxd esp,DWORD PTR [rcx+0x74]
  442c1f:	(bad)  
  442c20:	ins    BYTE PTR es:[rdi],dx
  442c21:	outs   dx,DWORD PTR ds:[rsi]
  442c22:	addr32 cs jo 0x442c8d
  442c26:	pop    rdi
  442c27:	(bad)  
  442c28:	ins    DWORD PTR es:[rdi],dx
  442c29:	and    BYTE PTR [rcx+0x6d],ah
  442c2c:	and    BYTE PTR [rdi+0x4e],cl
  442c2f:	and    BYTE PTR [rdi+0x2e],ch
  442c32:	outs   dx,DWORD PTR ds:[rsi]
  442c33:	jo     0x442c98
  442c35:	ins    DWORD PTR es:[rdi],dx
  442c36:	gs je  0x442ca1
  442c39:	outs   dx,DWORD PTR ds:[rsi]
  442c3a:	and    BYTE PTR fs:[rip+0x2e6d6120],bh        # 0x2eb18d61
  442c41:	outs   dx,DWORD PTR ds:[rsi]
  442c42:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x4a202020
  442c4a:	rex.WRXB
  442c4b:	rex.WB
  442c4c:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442c50:	pop    rdi
  442c51:	movsxd esp,DWORD PTR [rcx+0x74]
  442c54:	(bad)  
  442c55:	ins    BYTE PTR es:[rdi],dx
  442c56:	outs   dx,DWORD PTR ds:[rsi]
  442c57:	addr32 cs jo 0x442cc2
  442c5b:	pop    rdi
  442c5c:	outs   dx,BYTE PTR ds:[rsi]
  442c5d:	(bad)  
  442c5e:	ins    DWORD PTR es:[rdi],dx
  442c5f:	gs jae 0x442cd2
  442c62:	(bad)  
  442c63:	movsxd esp,DWORD PTR [rbp+0x20]
  442c66:	outs   dx,BYTE PTR ds:[rsi]
  442c67:	and    BYTE PTR [rdi+0x4e],cl
  442c6a:	and    BYTE PTR [rsi+0x2e],ch
  442c6d:	outs   dx,DWORD PTR ds:[rsi]
  442c6e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6f20
  442c76:	jo     0x442cdb
  442c78:	outs   dx,BYTE PTR ds:[rsi]
  442c79:	(bad)  
  442c7a:	ins    DWORD PTR es:[rdi],dx
  442c7b:	gs jae 0x442cee
  442c7e:	(bad)  
  442c7f:	movsxd esp,DWORD PTR [rbp+0xa]
  442c82:	add    BYTE PTR [rax],al
  442c84:	add    BYTE PTR [rax],al
  442c86:	add    BYTE PTR [rax],al
  442c88:	push   rbx
  442c89:	rex.RB
  442c8a:	rex.WR
  442c8b:	rex.RB
  442c8c:	rex.XB push r12
  442c8e:	and    BYTE PTR [rbx+0x2e],ah
  442c91:	outs   dx,DWORD PTR ds:[rsi]
  442c92:	imul   esp,DWORD PTR [rsp+rbp*1+0xa],0x2e6e2020
  442c9a:	outs   dx,BYTE PTR ds:[rsi]
  442c9b:	jae    0x442d0d
  442c9d:	outs   dx,BYTE PTR ds:[rsi]
  442c9e:	(bad)  
  442c9f:	ins    DWORD PTR es:[rdi],dx
  442ca0:	gs sub al,0xa
  442ca3:	and    BYTE PTR [rax],ah
  442ca5:	movsxd ebp,DWORD PTR [rsi]
  442ca7:	jb     0x442d0e
  442ca9:	ins    BYTE PTR es:[rdi],dx
  442caa:	outs   dx,BYTE PTR ds:[rsi]
  442cab:	(bad)  
  442cac:	ins    DWORD PTR es:[rdi],dx
  442cad:	or     al,BYTE PTR gs:[rsi+0x52]
  442cb1:	rex.WRXB
  442cb2:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442cb6:	pop    rdi
  442cb7:	movsxd esp,DWORD PTR [rcx+0x74]
  442cba:	(bad)  
  442cbb:	ins    BYTE PTR es:[rdi],dx
  442cbc:	outs   dx,DWORD PTR ds:[rsi]
  442cbd:	addr32 cs jo 0x442d28
  442cc1:	pop    rdi
  442cc2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  442cc6:	jae    0x442ce8
  442cc8:	movsxd ecx,DWORD PTR [rdx]
  442cca:	and    BYTE PTR [rax],ah
  442ccc:	and    BYTE PTR [rax],ah
  442cce:	and    BYTE PTR [rbp+rax*2+0x46],cl
  442cd2:	push   rsp
  442cd3:	and    BYTE PTR [rdx+0x4f],cl
  442cd6:	rex.WB
  442cd7:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442cdb:	pop    rdi
  442cdc:	movsxd esp,DWORD PTR [rcx+0x74]
  442cdf:	(bad)  
  442ce0:	ins    BYTE PTR es:[rdi],dx
  442ce1:	outs   dx,DWORD PTR ds:[rsi]
  442ce2:	addr32 cs jo 0x442d4d
  442ce6:	pop    rdi
  442ce7:	outs   dx,BYTE PTR ds:[rsi]
  442ce8:	(bad)  
  442ce9:	ins    DWORD PTR es:[rdi],dx
  442cea:	gs jae 0x442d5d
  442ced:	(bad)  
  442cee:	movsxd esp,DWORD PTR [rbp+0x20]
  442cf1:	outs   dx,BYTE PTR ds:[rsi]
  442cf2:	and    BYTE PTR [rdi+0x4e],cl
  442cf5:	and    BYTE PTR [rsi+0x2e],ch
  442cf8:	outs   dx,DWORD PTR ds:[rsi]
  442cf9:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  442d01:	gs ins BYTE PTR es:[rdi],dx
  442d03:	outs   dx,BYTE PTR ds:[rsi]
  442d04:	(bad)  
  442d05:	ins    DWORD PTR es:[rdi],dx
  442d06:	gs jae 0x442d79
  442d09:	(bad)  
  442d0a:	movsxd esp,DWORD PTR [rbp+0xa]
  442d0d:	add    BYTE PTR [rdi+0x52],cl
  442d10:	rex.R
  442d11:	rex.RB push r10
  442d13:	and    BYTE PTR [rdx+0x59],al
  442d16:	and    BYTE PTR [rdx],dh
  442d18:	sub    al,0x20
  442d1a:	xor    edi,DWORD PTR [rbx]
  442d1c:	add    BYTE PTR [rax],al
  442d1e:	add    BYTE PTR [rax],al
  442d20:	imul   r12d,DWORD PTR [rax+riz*1+0x6e],0x6620746f
  442d29:	imul   ebp,DWORD PTR [rsi+0x64],0x796e6120
  442d30:	and    BYTE PTR [rdx+0x65],dh
  442d33:	ins    BYTE PTR es:[rdi],dx
  442d34:	(bad)  
  442d35:	je     0x442da0
  442d37:	outs   dx,DWORD PTR ds:[rsi]
  442d38:	outs   dx,BYTE PTR ds:[rsi]
  442d39:	and    BYTE PTR [rsi+0x61],ch
  442d3c:	ins    DWORD PTR es:[rdi],dx
  442d3d:	gs and BYTE PTR fs:[rdx],ah
  442d41:	and    eax,0xa2e2273
  442d46:	add    BYTE PTR [rip+0x6f632064],ah        # 0x6fa74db0
  442d4c:	outs   dx,BYTE PTR ds:[rsi]
  442d4d:	outs   dx,BYTE PTR ds:[rsi]
  442d4e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  442d53:	outs   dx,BYTE PTR ds:[rsi]
  442d54:	add    BYTE PTR [rip+0x6f632064],ah        # 0x6fa74dbe
  442d5a:	outs   dx,BYTE PTR ds:[rsi]
  442d5b:	outs   dx,BYTE PTR ds:[rsi]
  442d5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  442d61:	outs   dx,BYTE PTR ds:[rsi]
  442d62:	jae    0x442d64
  442d64:	add    BYTE PTR [rax],al
  442d66:	add    BYTE PTR [rax],al
  442d68:	push   rbx
  442d69:	rex.RB
  442d6a:	rex.WR
  442d6b:	rex.RB
  442d6c:	rex.XB push r12
  442d6e:	and    BYTE PTR [rdx+0x2e],dh
  442d71:	jb     0x442de2
  442d73:	ins    BYTE PTR es:[rdi],dx
  442d74:	outs   dx,BYTE PTR ds:[rsi]
  442d75:	(bad)  
  442d76:	ins    DWORD PTR es:[rdi],dx
  442d77:	gs sub al,0x20
  442d7a:	jb     0x442daa
  442d7c:	jb     0x442ded
  442d7e:	ins    BYTE PTR es:[rdi],dx
  442d7f:	jae    0x442df6
  442d81:	jo     0x442de8
  442d83:	jb     0x442db1
  442d85:	and    BYTE PTR [rdx+0x2e],dh
  442d88:	jb     0x442df9
  442d8a:	ins    BYTE PTR es:[rdi],dx
  442d8b:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  442d92:	sub    al,0xa
  442d94:	and    BYTE PTR [rax],ah
  442d96:	jb     0x442dc6
  442d98:	jb     0x442e09
  442d9a:	ins    BYTE PTR es:[rdi],dx
  442d9b:	movsxd esi,DWORD PTR [rdx+0x65]
  442d9e:	(bad)  
  442d9f:	je     0x442e06
  442da1:	jb     0x442e12
  442da3:	ins    BYTE PTR es:[rdi],dx
  442da4:	gs sub al,0x20
  442da7:	jb     0x442dd7
  442da9:	jb     0x442e1a
  442dab:	ins    BYTE PTR es:[rdi],dx
  442dac:	movsxd esi,DWORD PTR [rdx+0x65]
  442daf:	(bad)  
  442db0:	je     0x442e17
  442db2:	fs (bad) 
  442db4:	sub    al,0x20
  442db6:	jb     0x442de6
  442db8:	jb     0x442e29
  442dba:	ins    BYTE PTR es:[rdi],dx
  442dbb:	movsxd esp,DWORD PTR [rcx+0x6e]
  442dbe:	ins    BYTE PTR es:[rdi],dx
  442dbf:	outs   dx,DWORD PTR ds:[rsi]
  442dc0:	imul   ebp,DWORD PTR [esi+0x2c],0x7220200a
  442dc8:	cs jb  0x442e3a
  442dcb:	ins    BYTE PTR es:[rdi],dx
  442dcc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  442dcf:	outs   dx,BYTE PTR ds:[rsi]
  442dd0:	ins    BYTE PTR es:[rdi],dx
  442dd1:	imul   ebp,DWORD PTR [rbp+0x69],0x72202c74
  442dd8:	cs jb  0x442e4a
  442ddb:	ins    BYTE PTR es:[rdi],dx
  442ddc:	jbe    0x442e3f
  442dde:	ins    BYTE PTR es:[rdi],dx
  442ddf:	imul   esp,DWORD PTR [rbp+rsi*2+0x6e],0x2c6c6974
  442de7:	or     ah,BYTE PTR [rax]
  442de9:	and    BYTE PTR [rcx+0x52],al
  442dec:	push   rdx
  442ded:	pop    r9
  442def:	sub    BYTE PTR [rbx+0x45],dl
  442df2:	rex.WR
  442df3:	rex.RB
  442df4:	rex.XB push r12
  442df6:	and    BYTE PTR [rdx+0x2e],ah
  442df9:	jb     0x442e6a
  442dfb:	ins    BYTE PTR es:[rdi],dx
  442dfc:	outs   dx,BYTE PTR ds:[rsi]
  442dfd:	(bad)  
  442dfe:	ins    DWORD PTR es:[rdi],dx
  442dff:	or     ah,BYTE PTR gs:[rax]
  442e02:	and    BYTE PTR [rax],ah
  442e04:	and    BYTE PTR [rax],ah
  442e06:	and    BYTE PTR [rax],ah
  442e08:	and    BYTE PTR [rsi+0x52],al
  442e0b:	rex.WRXB
  442e0c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442e10:	pop    rdi
  442e11:	movsxd esp,DWORD PTR [rcx+0x74]
  442e14:	(bad)  
  442e15:	ins    BYTE PTR es:[rdi],dx
  442e16:	outs   dx,DWORD PTR ds:[rsi]
  442e17:	addr32 cs jo 0x442e82
  442e1b:	pop    rdi
  442e1c:	(bad)  
  442e1d:	jne    0x442e93
  442e1f:	push   0x6d656d5f
  442e24:	(bad)  
  442e25:	gs jb  0x442e9b
  442e28:	and    BYTE PTR [rbp+0xa],ch
  442e2b:	and    BYTE PTR [rax],ah
  442e2d:	and    BYTE PTR [rax],ah
  442e2f:	and    BYTE PTR [rax],ah
  442e31:	and    BYTE PTR [rax],ah
  442e33:	rex.WX
  442e34:	rex.WRXB
  442e35:	rex.WB
  442e36:	rex.WRX and BYTE PTR [rax+0x67],r14b
  442e3a:	pop    rdi
  442e3b:	movsxd esp,DWORD PTR [rcx+0x74]
  442e3e:	(bad)  
  442e3f:	ins    BYTE PTR es:[rdi],dx
  442e40:	outs   dx,DWORD PTR ds:[rsi]
  442e41:	addr32 cs jo 0x442eac
  442e45:	pop    rdi
  442e46:	jb     0x442eb7
  442e48:	ins    BYTE PTR es:[rdi],dx
  442e49:	gs jae 0x442e6c
  442e4c:	(bad)  
  442e4d:	and    BYTE PTR [rdi+0x4e],cl
  442e50:	and    BYTE PTR [rax],ch
  442e52:	ins    DWORD PTR es:[rdi],dx
  442e53:	cs jb  0x442ec5
  442e56:	ins    BYTE PTR es:[rdi],dx
  442e57:	imul   esp,DWORD PTR gs:[rax+riz*1+0x3d],0x6f2e6220
  442e60:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  442e68:	and    BYTE PTR [rax],ah
  442e6a:	and    BYTE PTR [rax],ah
  442e6c:	push   rdi
  442e6d:	rex.W
  442e6e:	rex.RB push r10
  442e70:	and    BYTE PTR [r13+0x2e],r13b
  442e74:	ins    DWORD PTR es:[rdi],dx
  442e75:	gs ins DWORD PTR es:[rdi],dx
  442e77:	(bad)  
  442e78:	gs jb  0x442e9b
  442e7b:	cmp    eax,0x6f2e7220
  442e80:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x6d207361
  442e88:	gs ins DWORD PTR es:[rdi],dx
  442e8a:	(bad)  
  442e8b:	gs jb  0x442efd
  442e8e:	data16 add BYTE PTR [rdx],cl
  442e91:	sub    al,0x20
  442e93:	jo     0x442efc
  442e95:	pop    rdi
  442e96:	movsxd esp,DWORD PTR [rcx+0x74]
  442e99:	(bad)  
  442e9a:	ins    BYTE PTR es:[rdi],dx
  442e9b:	outs   dx,DWORD PTR ds:[rsi]
  442e9c:	addr32 cs jae 0x442f08
  442ea0:	outs   dx,DWORD PTR ds:[rsi]
  442ea1:	(bad)  
  442ea2:	push   0x5f
  442ea4:	fs gs jae 0x442f0b
  442ea8:	jb     0x442f13
  442eaa:	jo     0x442f20
  442eac:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7228
  442eb3:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  442ebb:	(bad)  
  442ebc:	jne    0x442f32
  442ebe:	push   0x29276469
  442ec3:	and    BYTE PTR [rcx+0x53],al
  442ec6:	and    BYTE PTR [rbp+riz*2+0x73],ah
  442eca:	movsxd esi,DWORD PTR [rdx+0x69]
  442ecd:	jo     0x442f43
  442ecf:	imul   ebp,DWORD PTR [rdi+0x6e],0x202c0a00
  442ed6:	jb     0x442f06
  442ed8:	jb     0x442f49
  442eda:	ins    BYTE PTR es:[rdi],dx
  442edb:	jb     0x442f42
  442edd:	jo     0x442f4b
  442edf:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  442ee6:	add    BYTE PTR [rdx],cl
  442ee8:	rex.RX push rdx
  442eea:	rex.WRXB
  442eeb:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442eef:	pop    rdi
  442ef0:	movsxd esp,DWORD PTR [rcx+0x74]
  442ef3:	(bad)  
  442ef4:	ins    BYTE PTR es:[rdi],dx
  442ef5:	outs   dx,DWORD PTR ds:[rsi]
  442ef6:	addr32 cs jo 0x442f61
  442efa:	pop    rdi
  442efb:	jb     0x442f6c
  442efd:	ins    BYTE PTR es:[rdi],dx
  442efe:	gs jae 0x442f21
  442f01:	jb     0x442f0d
  442f03:	add    BYTE PTR [rdx+0x2e],dh
  442f06:	jb     0x442f77
  442f08:	ins    BYTE PTR es:[rdi],dx
  442f09:	outs   dx,BYTE PTR ds:[rsi]
  442f0a:	(bad)  
  442f0b:	ins    DWORD PTR es:[rdi],dx
  442f0c:	add    BYTE PTR gs:[rax],al
  442f0f:	add    BYTE PTR [rbx+0x45],dl
  442f12:	rex.WR
  442f13:	rex.RB
  442f14:	rex.XB push r12
  442f16:	and    BYTE PTR [rbp+0x2e],dh
  442f19:	jne    0x442f8e
  442f1b:	outs   dx,BYTE PTR gs:[rsi]
  442f1d:	(bad)  
  442f1e:	ins    DWORD PTR es:[rdi],dx
  442f1f:	and    BYTE PTR gs:[rcx+0x53],al
  442f23:	and    BYTE PTR [rdx+0x6f],dh
  442f26:	ins    BYTE PTR es:[rdi],dx
  442f27:	outs   dx,BYTE PTR ds:[rsi]
  442f28:	(bad)  
  442f29:	ins    DWORD PTR es:[rdi],dx
  442f2a:	gs sub al,0xa
  442f2d:	and    BYTE PTR [rax],ah
  442f2f:	jne    0x442f5f
  442f31:	jne    0x442fa6
  442f33:	gs jae 0x442fab
  442f36:	jo     0x442f9d
  442f38:	jb     0x442f5a
  442f3a:	push   r11
  442f3c:	and    BYTE PTR [rdx+0x6f],dh
  442f3f:	ins    BYTE PTR es:[rdi],dx
  442f40:	jae    0x442fb7
  442f42:	jo     0x442fa9
  442f44:	jb     0x442f72
  442f46:	or     ah,BYTE PTR [rax]
  442f48:	and    BYTE PTR [rdx+rsi*2+0x75],dh
  442f4c:	and    BYTE PTR gs:[rcx+0x53],al
  442f50:	and    BYTE PTR [rdx+0x6f],dh
  442f53:	ins    BYTE PTR es:[rdi],dx
  442f54:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  442f5b:	sub    al,0x20
  442f5d:	data16 (bad) 
  442f5f:	ins    BYTE PTR es:[rdi],dx
  442f60:	jae    0x442fc7
  442f62:	and    BYTE PTR [rcx+0x53],al
  442f65:	and    BYTE PTR [rdx+0x6f],dh
  442f68:	ins    BYTE PTR es:[rdi],dx
  442f69:	movsxd esi,DWORD PTR [rdx+0x65]
  442f6c:	(bad)  
  442f6d:	je     0x442fd4
  442f6f:	jb     0x442fe0
  442f71:	ins    BYTE PTR es:[rdi],dx
  442f72:	gs sub al,0xa
  442f75:	and    BYTE PTR [rax],ah
  442f77:	jne    0x442fa7
  442f79:	jne    0x442fee
  442f7b:	movsxd esi,DWORD PTR gs:[rdx+0x65]
  442f7f:	(bad)  
  442f80:	je     0x442fe7
  442f82:	fs (bad) 
  442f84:	and    BYTE PTR [rcx+0x53],al
  442f87:	and    BYTE PTR [rdx+0x6f],dh
  442f8a:	ins    BYTE PTR es:[rdi],dx
  442f8b:	movsxd esi,DWORD PTR [rdx+0x65]
  442f8e:	(bad)  
  442f8f:	je     0x442ff6
  442f91:	fs (bad) 
  442f93:	sub    al,0x20
  442f95:	je     0x443009
  442f97:	jne    0x442ffe
  442f99:	and    BYTE PTR [rcx+0x53],al
  442f9c:	and    BYTE PTR [rdx+0x6f],dh
  442f9f:	ins    BYTE PTR es:[rdi],dx
  442fa0:	movsxd esp,DWORD PTR [rcx+0x6e]
  442fa3:	ins    BYTE PTR es:[rdi],dx
  442fa4:	outs   dx,DWORD PTR ds:[rsi]
  442fa5:	imul   ebp,DWORD PTR [esi+0x2c],0x2d20200a
  442fad:	xor    DWORD PTR [rax],esp
  442faf:	push   r11
  442fb1:	and    BYTE PTR [rdx+0x6f],dh
  442fb4:	ins    BYTE PTR es:[rdi],dx
  442fb5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  442fb8:	outs   dx,BYTE PTR ds:[rsi]
  442fb9:	ins    BYTE PTR es:[rdi],dx
  442fba:	imul   ebp,DWORD PTR [rbp+0x69],0x20202c74
  442fc1:	jne    0x442ff1
  442fc3:	jbe    0x443026
  442fc5:	ins    BYTE PTR es:[rdi],dx
  442fc6:	jne    0x443036
  442fc8:	je     0x443033
  442fca:	ins    BYTE PTR es:[rdi],dx
  442fcb:	and    BYTE PTR [rcx+0x73],ah
  442fce:	and    BYTE PTR [rdx+0x6f],dh
  442fd1:	ins    BYTE PTR es:[rdi],dx
  442fd2:	jbe    0x443035
  442fd4:	ins    BYTE PTR es:[rdi],dx
  442fd5:	imul   esp,DWORD PTR [rbp+rsi*2+0x6e],0x2c6c6974
  442fdd:	or     ah,BYTE PTR [rax]
  442fdf:	and    BYTE PTR [rcx+0x52],al
  442fe2:	push   rdx
  442fe3:	pop    r9
  442fe5:	sub    BYTE PTR [rbx+0x45],dl
  442fe8:	rex.WR
  442fe9:	rex.RB
  442fea:	rex.XB push r12
  442fec:	and    BYTE PTR [rdi+0x2e],ah
  442fef:	addr32 jb 0x443061
  442ff2:	outs   dx,BYTE PTR ds:[rsi]
  442ff3:	(bad)  
  442ff4:	ins    DWORD PTR es:[rdi],dx
  442ff5:	and    BYTE PTR gs:[rsi+0x52],al
  442ff9:	rex.WRXB
  442ffa:	rex.WRB and BYTE PTR [r8+0x67],r14b
  442ffe:	pop    rdi
  442fff:	movsxd esp,DWORD PTR [rcx+0x74]
  443002:	(bad)  
  443003:	ins    BYTE PTR es:[rdi],dx
  443004:	outs   dx,DWORD PTR ds:[rsi]
  443005:	addr32 cs jo 0x443070
  443009:	pop    rdi
  44300a:	addr32 jb 0x44307c
  44300d:	jne    0x44307f
  44300f:	and    BYTE PTR [rdi+0x20],ah
  443012:	push   rdi
  443013:	rex.W
  443014:	rex.RB push r10
  443016:	and    BYTE PTR [r13+0x2e],r14b
  44301a:	jne    0x44308f
  44301c:	gs jae 0x443098
  44301f:	jae    0x44308a
  443021:	and    BYTE PTR fs:[rip+0x594e4120],bh        # 0x59927148
  443028:	sub    BYTE PTR [rdi+0x2e],ah
  44302b:	addr32 jb 0x44309d
  44302e:	ins    BYTE PTR es:[rdi],dx
  44302f:	imul   esi,DWORD PTR [rbx+0x74],0x61202929
  443036:	jae    0x443058
  443038:	ins    DWORD PTR es:[rdi],dx
  443039:	gs ins DWORD PTR es:[rdi],dx
  44303b:	(bad)  
  44303c:	gs jb  0x4430ae
  44303f:	data16 or al,BYTE PTR [rsi+0x52]
  443043:	rex.WRXB
  443044:	rex.WRB and BYTE PTR [r8+0x67],r14b
  443048:	pop    rdi
  443049:	movsxd esp,DWORD PTR [rcx+0x74]
  44304c:	(bad)  
  44304d:	ins    BYTE PTR es:[rdi],dx
  44304e:	outs   dx,DWORD PTR ds:[rsi]
  44304f:	addr32 cs jo 0x4430ba
  443053:	pop    rdi
  443054:	jne    0x4430c9
  443056:	gs jb  0x443079
  443059:	jne    0x443065
  44305b:	add    BYTE PTR [rbp+0x2e],dh
  44305e:	jne    0x4430d3
  443060:	outs   dx,BYTE PTR gs:[rsi]
  443062:	(bad)  
  443063:	ins    DWORD PTR es:[rdi],dx
  443064:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  443069:	je     0x44308b
  44306b:	outs   dx,DWORD PTR ds:[rsi]
  44306c:	data16 and BYTE PTR [rdx+0x6f],dh
  443070:	ins    BYTE PTR es:[rdi],dx
  443071:	gs jae 0x443074
  443074:	push   rdx
  443075:	outs   dx,DWORD PTR ds:[rsi]
  443076:	ins    BYTE PTR es:[rdi],dx
  443077:	and    BYTE PTR gs:[rsi+0x61],ch
  44307b:	ins    DWORD PTR es:[rdi],dx
  44307c:	add    BYTE PTR gs:[rcx+0x74],al
  443080:	je     0x4430f4
  443082:	imul   esp,DWORD PTR [rdx+0x75],0x736574
  443089:	rex.WRB
  44308a:	gs ins DWORD PTR es:[rdi],dx
  44308c:	(bad)  
  44308d:	gs jb  0x4430b0
  443090:	outs   dx,DWORD PTR ds:[rsi]
  443091:	data16 add BYTE PTR [rbx+0x75],dl
  443095:	jo     0x4430fc
  443097:	jb     0x44310e
  443099:	jae    0x443100
  44309b:	jb     0x44309d
  44309d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  44309f:	and    BYTE PTR [rcx+0x6e],ch
  4430a2:	push   0x74697265
  4430a7:	(bad)  
  4430a8:	outs   dx,BYTE PTR ds:[rsi]
  4430a9:	movsxd esp,DWORD PTR [rbp+0x0]
  4430ac:	rex.XB jb 0x443114
  4430af:	(bad)  
  4430b0:	je     0x443117
  4430b2:	and    BYTE PTR [rdx+0x6f],dh
  4430b5:	ins    BYTE PTR es:[rdi],dx
  4430b6:	add    BYTE PTR gs:[rbx+0x72],al
  4430ba:	gs (bad) 
  4430bc:	je     0x443123
  4430be:	and    BYTE PTR [rdx+rax*2+0x0],al
  4430c2:	rex.XB (bad) 
  4430c4:	outs   dx,BYTE PTR ds:[rsi]
  4430c5:	outs   dx,BYTE PTR ds:[rsi]
  4430c6:	outs   dx,DWORD PTR ds:[rsi]
  4430c7:	je     0x4430e9
  4430c9:	ins    BYTE PTR es:[rdi],dx
  4430ca:	outs   dx,DWORD PTR ds:[rsi]
  4430cb:	imul   ebp,DWORD PTR [esi+0x0],0x6c706552
  4430d3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4430da:	add    BYTE PTR [rsi+0x6f],cl
  4430dd:	and    BYTE PTR [rbx+0x6f],ah
  4430e0:	outs   dx,BYTE PTR ds:[rsi]
  4430e1:	outs   dx,BYTE PTR ds:[rsi]
  4430e2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4430e7:	outs   dx,BYTE PTR ds:[rsi]
  4430e8:	jae    0x4430ea
  4430ea:	or     al,BYTE PTR [rax]
  4430ec:	push   rax
  4430ed:	(bad)  
  4430ee:	jae    0x443163
  4430f0:	ja     0x443161
  4430f2:	jb     0x443158
  4430f4:	and    BYTE PTR [rsi+0x61],dh
  4430f7:	ins    BYTE PTR es:[rdi],dx
  4430f8:	imul   esp,DWORD PTR [rax+riz*1+0x75],0x6c69746e
  443100:	and    BYTE PTR [rax],al
  443102:	rex.R (bad) 
  443104:	je     0x443167
  443106:	(bad)  
  443108:	jae    0x44316f
  44310a:	add    BYTE PTR [rdx+0x6f],dl
  44310d:	ins    BYTE PTR es:[rdi],dx
  44310e:	add    BYTE PTR gs:[rbx+0x45],dl
  443112:	rex.WR
  443113:	rex.RB
  443114:	rex.XB push r12
  443116:	and    BYTE PTR [rdx+0x6f],dh
  443119:	ins    BYTE PTR es:[rdi],dx
  44311a:	outs   dx,BYTE PTR ds:[rsi]
  44311b:	(bad)  
  44311c:	ins    DWORD PTR es:[rdi],dx
  44311d:	and    BYTE PTR gs:[rcx+0x53],al
  443121:	and    BYTE PTR [rdx],ah
  443123:	and    eax,0x202c2273
  443128:	fs (bad) 
  44312a:	je     0x44319a
  44312c:	(bad)  
  44312d:	ins    DWORD PTR es:[rdi],dx
  44312e:	and    BYTE PTR gs:[rcx+0x53],al
  443132:	and    BYTE PTR [rdx],ah
  443134:	and    eax,0xa2c2273
  443139:	jo     0x4431a2
  44313b:	pop    rdi
  44313c:	movsxd esp,DWORD PTR [rcx+0x74]
  44313f:	(bad)  
  443140:	ins    BYTE PTR es:[rdi],dx
  443141:	outs   dx,DWORD PTR ds:[rsi]
  443142:	addr32 cs (bad) 
  443145:	jb     0x4431b9
  443147:	(bad)  
  443148:	jns    0x4431a9
  44314a:	je     0x4431bb
  44314c:	pop    rdi
  44314d:	jae    0x4431c3
  44314f:	jb     0x4431ba
  443151:	outs   dx,BYTE PTR ds:[rsi]
  443152:	sub    BYTE PTR [ebx+0x65],dh
  443156:	je     0x4431bb
  443158:	outs   dx,DWORD PTR ds:[rsi]
  443159:	outs   dx,BYTE PTR ds:[rsi]
  44315a:	imul   sp,WORD PTR [rdi+0x2c],0x4520
  443160:	(bad)  
  443161:	pop    rsp
  443162:	outs   dx,BYTE PTR ds:[rsi]
  443163:	(bad)  
  443164:	sub    DWORD PTR [rax],esp
  443166:	push   r11
  443168:	and    BYTE PTR [rdx],ah
  44316a:	and    eax,0x460a2273
  44316f:	push   rdx
  443170:	rex.WRXB
  443171:	rex.WRB and BYTE PTR [r8+0x67],r14b
  443175:	pop    rdi
  443176:	fs (bad) 
  443178:	pop    rdi
  443179:	jb     0x4431ea
  44317b:	ins    BYTE PTR es:[rdi],dx
  44317c:	gs pop rdi
  44317e:	jae    0x4431e5
  443180:	je     0x4431f6
  443182:	imul   ebp,DWORD PTR [rsi+0x67],0x20534120
  443189:	jae    0x443195
  44318b:	rex.WR
  44318c:	rex.RB
  44318d:	rex.RX push rsp
  44318f:	and    BYTE PTR [rdx+0x4f],cl
  443192:	rex.WB
  443193:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443197:	pop    rdi
  443198:	fs (bad) 
  44319a:	je     0x4431fd
  44319c:	(bad)  
  44319e:	jae    0x443205
  4431a0:	and    BYTE PTR [rdi+0x4e],cl
  4431a3:	and    BYTE PTR [rax+0x67],dh
  4431a6:	pop    rdi
  4431a7:	fs (bad) 
  4431a9:	je     0x44320c
  4431ab:	(bad)  
  4431ad:	jae    0x443214
  4431af:	outs   dx,DWORD PTR cs:[rsi]
  4431b1:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74657320
  4431b9:	fs (bad) 
  4431bb:	je     0x44321e
  4431bd:	(bad)  
  4431bf:	jae    0x443226
  4431c1:	or     cl,BYTE PTR [rbp+rax*2+0x46]
  4431c5:	push   rsp
  4431c6:	and    BYTE PTR [rdx+0x4f],cl
  4431c9:	rex.WB
  4431ca:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4431ce:	pop    rdi
  4431cf:	jb     0x443240
  4431d1:	ins    BYTE PTR es:[rdi],dx
  4431d2:	gs jae 0x4431f5
  4431d5:	rex.WRXB
  4431d6:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4431da:	pop    rdi
  4431db:	jb     0x44324c
  4431dd:	ins    BYTE PTR es:[rdi],dx
  4431de:	gs jae 0x44320f
  4431e1:	outs   dx,DWORD PTR ds:[rsi]
  4431e2:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74657320
  4431ea:	jb     0x44325b
  4431ec:	ins    BYTE PTR es:[rdi],dx
  4431ed:	or     al,BYTE PTR gs:[rax]
  4431f0:	push   rbx
  4431f1:	gs je  0x443268
  4431f4:	imul   ebp,DWORD PTR [rsi+0x67],0x67700073
  4431fb:	pop    rdi
  4431fc:	jb     0x44326d
  4431fe:	ins    BYTE PTR es:[rdi],dx
  4431ff:	gs jae 0x443230
  443202:	jb     0x443273
  443204:	ins    BYTE PTR es:[rdi],dx
  443205:	outs   dx,BYTE PTR ds:[rsi]
  443206:	(bad)  
  443207:	ins    DWORD PTR es:[rdi],dx
  443208:	add    BYTE PTR gs:[rax+0x67],dh
  44320c:	pop    rdi
  44320d:	fs (bad) 
  44320f:	je     0x443272
  443211:	(bad)  
  443213:	jae    0x44327a
  443215:	cs fs (bad) 
  443218:	je     0x443288
  44321a:	(bad)  
  44321b:	ins    DWORD PTR es:[rdi],dx
  44321c:	add    BYTE PTR gs:[rax],al
  44321f:	add    BYTE PTR [rsi+0x6f],cl
  443222:	and    BYTE PTR [rax+0x65],dh
  443225:	jb     0x443254
  443227:	fs (bad) 
  443229:	je     0x44328c
  44322b:	(bad)  
  44322d:	jae    0x443294
  44322f:	and    BYTE PTR [rdx+0x6f],dh
  443232:	ins    BYTE PTR es:[rdi],dx
  443233:	and    BYTE PTR gs:[rbx+0x65],dh
  443237:	je     0x4432ad
  443239:	imul   ebp,DWORD PTR [rsi+0x67],0x75732073
  443240:	jo     0x4432b2
  443242:	outs   dx,DWORD PTR ds:[rsi]
  443243:	jb     0x4432b9
  443245:	and    BYTE PTR [rcx+0x6e],ch
  443248:	and    BYTE PTR [rax+rbp*2+0x69],dh
  44324c:	jae    0x44326e
  44324e:	jae    0x4432b5
  443250:	jb     0x4432c8
  443252:	gs jb  0x443275
  443255:	jbe    0x4432bc
  443257:	jb     0x4432cc
  443259:	imul   ebp,DWORD PTR [rdi+0x6e],0x4e000a2e
  443260:	outs   dx,DWORD PTR ds:[rsi]
  443261:	and    BYTE PTR [rbp+0x61],ch
  443264:	je     0x4432c9
  443266:	push   0x20676e69
  44326b:	jae    0x4432d2
  44326d:	je     0x4432e3
  44326f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f662073
  443276:	jne    0x4432e6
  443278:	fs or  al,BYTE PTR cs:[rax]
  44327c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  44327e:	and    BYTE PTR [rbx+0x65],dh
  443281:	je     0x4432f7
  443283:	imul   ebp,DWORD PTR [rsi+0x67],0x6f662073
  44328a:	jne    0x4432fa
  44328c:	fs or  al,BYTE PTR cs:[rax]
  443290:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  443298:	jae    0x4432ff
  44329a:	je     0x443310
  44329c:	imul   ebp,DWORD PTR [rsi+0x67],0x73
  4432a3:	add    BYTE PTR [rax],al
  4432a5:	add    BYTE PTR [rax],al
  4432a7:	add    BYTE PTR [rbx+0x45],dl
  4432aa:	rex.WR
  4432ab:	rex.RB
  4432ac:	rex.XB push r12
  4432ae:	and    BYTE PTR [rsi+0x2e],ch
  4432b1:	outs   dx,BYTE PTR ds:[rsi]
  4432b2:	jae    0x443324
  4432b4:	outs   dx,BYTE PTR ds:[rsi]
  4432b5:	(bad)  
  4432b6:	ins    DWORD PTR es:[rdi],dx
  4432b7:	and    BYTE PTR gs:[rcx+0x73],ah
  4432bb:	and    BYTE PTR [rdx],ah
  4432bd:	and    eax,0xa2c2273
  4432c2:	and    BYTE PTR [rax],ah
  4432c4:	movsxd ebp,DWORD PTR [rsi]
  4432c6:	jb     0x44332d
  4432c8:	ins    BYTE PTR es:[rdi],dx
  4432c9:	outs   dx,BYTE PTR ds:[rsi]
  4432ca:	(bad)  
  4432cb:	ins    DWORD PTR es:[rdi],dx
  4432cc:	and    BYTE PTR gs:[rcx+0x73],ah
  4432d0:	and    BYTE PTR [rdx],ah
  4432d2:	and    eax,0xa2c2273
  4432d7:	and    BYTE PTR [rax],ah
  4432d9:	rex.XB
  4432da:	push   r11
  4432dc:	and    BYTE PTR [r11+0x2e],r12b
  4432e0:	jb     0x443347
  4432e2:	ins    BYTE PTR es:[rdi],dx
  4432e3:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  4432e7:	and    BYTE PTR [rdi+0x48],dl
  4432ea:	rex.RB
  4432eb:	rex.WRX and BYTE PTR [rdi],r12b
  4432ee:	jb     0x443317
  4432f0:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4432f4:	rex.WRX and BYTE PTR [rdi],r12b
  4432f7:	and    eax,0x57202773
  4432fc:	rex.W
  4432fd:	rex.RB
  4432fe:	rex.WRX and BYTE PTR [rdi],r12b
  443301:	jbe    0x44332a
  443303:	and    BYTE PTR [rax+rcx*2+0x45],dl
  443307:	rex.WRX and BYTE PTR [rdi],r12b
  44330a:	and    eax,0x57202773
  44330f:	rex.W
  443310:	rex.RB
  443311:	rex.WRX and BYTE PTR [rdi],r12b
  443314:	ins    DWORD PTR es:[rdi],dx
  443315:	(bad)  
  443316:	and    BYTE PTR [rax+rcx*2+0x45],dl
  44331a:	rex.WRX and BYTE PTR [rdi],r12b
  44331d:	and    eax,0x57202773
  443322:	rex.W
  443323:	rex.RB
  443324:	rex.WRX and BYTE PTR [rdi],r12b
  443327:	imul   esp,DWORD PTR [rdi],0x45485420
  44332d:	rex.WRX and BYTE PTR [rdi],r12b
  443330:	and    eax,0x57202773
  443335:	rex.W
  443336:	rex.RB
  443337:	rex.WRX and BYTE PTR [rdi],r12b
  44333a:	push   rbx
  44333b:	(bad)  
  44333c:	and    BYTE PTR [rax+rcx*2+0x45],dl
  443340:	rex.WRX and BYTE PTR [rdi],r12b
  443343:	and    eax,0x57202773
  443348:	rex.W
  443349:	rex.RB
  44334a:	rex.WRX and BYTE PTR [rdi],r12b
  44334d:	jae    0x443376
  44334f:	and    BYTE PTR [rax+rcx*2+0x45],dl
  443353:	rex.WRX and BYTE PTR [rdi],r12b
  443356:	and    eax,0x57202773
  44335b:	rex.W
  44335c:	rex.RB
  44335d:	rex.WRX and BYTE PTR [rdi],r12b
  443360:	data16 (bad) 
  443362:	and    BYTE PTR [rax+rcx*2+0x45],dl
  443366:	rex.WRX and BYTE PTR [rdi],r12b
  443369:	and    eax,0x45202773
  44336e:	rex.WRX
  44336f:	and    BYTE PTR [rcx+0x73],r12b
  443373:	and    BYTE PTR [rdx],ah
  443375:	and    eax,0xa2c2273
  44337a:	and    BYTE PTR [rax],ah
  44337c:	jo     0x4433e5
  44337e:	pop    rdi
  44337f:	movsxd esp,DWORD PTR [rcx+0x74]
  443382:	(bad)  
  443383:	ins    BYTE PTR es:[rdi],dx
  443384:	outs   dx,DWORD PTR ds:[rsi]
  443385:	addr32 cs jo 0x4433f0
  443389:	pop    rdi
  44338a:	addr32 gs je 0x4433ed
  44338e:	jne    0x443403
  443390:	gs jb  0x4433f5
  443393:	jns    0x4433fe
  443395:	sub    BYTE PTR fs:[rbx+0x2e],ah
  443399:	jb     0x443400
  44339b:	ins    BYTE PTR es:[rdi],dx
  44339c:	outs   dx,DWORD PTR ds:[rsi]
  44339d:	ja     0x44340d
  44339f:	gs jb  0x4433cb
  4433a2:	and    BYTE PTR [rcx+0x73],ah
  4433a5:	and    BYTE PTR [rdx],ah
  4433a7:	and    eax,0x73002273
  4433ac:	jo     0x443413
  4433ae:	movsxd ebp,DWORD PTR [rcx+0x61]
  4433b1:	ins    BYTE PTR es:[rdi],dx
  4433b2:	add    BYTE PTR [rcx+0x6e],ch
  4433b5:	fs gs js 0x4433b9
  4433b9:	push   rsp
  4433ba:	(bad)  
  4433bb:	(bad)  
  4433bc:	ins    BYTE PTR es:[rdi],dx
  4433bd:	add    BYTE PTR gs:[rdx+rcx*1],ch
  4433c1:	and    BYTE PTR [rbx+0x32],ah
  4433c4:	cs jb  0x44342c
  4433c7:	ins    BYTE PTR es:[rdi],dx
  4433c8:	outs   dx,BYTE PTR ds:[rsi]
  4433c9:	(bad)  
  4433ca:	ins    DWORD PTR es:[rdi],dx
  4433cb:	and    BYTE PTR gs:[rcx+0x73],ah
  4433cf:	and    BYTE PTR [rdx],ah
  4433d1:	and    eax,0x2273
  4433d6:	add    BYTE PTR [rax],al
  4433d8:	sub    al,0xa
  4433da:	and    BYTE PTR [rax],ah
  4433dc:	jo     0x443445
  4433de:	pop    rdi
  4433df:	movsxd esp,DWORD PTR [rcx+0x74]
  4433e2:	(bad)  
  4433e3:	ins    BYTE PTR es:[rdi],dx
  4433e4:	outs   dx,DWORD PTR ds:[rsi]
  4433e5:	addr32 cs jo 0x443450
  4433e9:	pop    rdi
  4433ea:	jae    0x443455
  4433ec:	jp     0x443453
  4433ee:	pop    rdi
  4433ef:	jo     0x443463
  4433f1:	gs je  0x443468
  4433f4:	jns    0x44341e
  4433f6:	jo     0x44345f
  4433f8:	pop    rdi
  4433f9:	movsxd esp,DWORD PTR [rcx+0x74]
  4433fc:	(bad)  
  4433fd:	ins    BYTE PTR es:[rdi],dx
  4433fe:	outs   dx,DWORD PTR ds:[rsi]
  4433ff:	addr32 cs jo 0x44346a
  443403:	pop    rdi
  443404:	je     0x443467
  443406:	(bad)  
  443407:	ins    BYTE PTR es:[rdi],dx
  443408:	gs pop rdi
  44340a:	jae    0x443475
  44340c:	jp     0x443473
  44340e:	sub    BYTE PTR [rbx+0x2e],ah
  443411:	outs   dx,DWORD PTR ds:[rsi]
  443412:	imul   esp,DWORD PTR [rcx+rbp*1+0x29],0x20736120
  44341a:	and    ah,BYTE PTR [rip+0x2273]        # 0x445693
  443420:	sub    al,0xa
  443422:	and    BYTE PTR [rax],ah
  443424:	jo     0x44348d
  443426:	pop    rdi
  443427:	movsxd esp,DWORD PTR [rcx+0x74]
  44342a:	(bad)  
  44342b:	ins    BYTE PTR es:[rdi],dx
  44342c:	outs   dx,DWORD PTR ds:[rsi]
  44342d:	addr32 cs jo 0x443498
  443431:	pop    rdi
  443432:	jae    0x44349d
  443434:	jp     0x44349b
  443436:	pop    rdi
  443437:	jo     0x4434ab
  443439:	gs je  0x4434b0
  44343c:	jns    0x443466
  44343e:	jo     0x4434a7
  443440:	pop    rdi
  443441:	movsxd esp,DWORD PTR [rcx+0x74]
  443444:	(bad)  
  443445:	ins    BYTE PTR es:[rdi],dx
  443446:	outs   dx,DWORD PTR ds:[rsi]
  443447:	addr32 cs jo 0x4434b2
  44344b:	pop    rdi
  44344c:	jb     0x4434b3
  44344e:	ins    BYTE PTR es:[rdi],dx
  44344f:	(bad)  
  443450:	je     0x4434bb
  443452:	outs   dx,DWORD PTR ds:[rsi]
  443453:	outs   dx,BYTE PTR ds:[rsi]
  443454:	pop    rdi
  443455:	jae    0x4434c0
  443457:	jp     0x4434be
  443459:	sub    BYTE PTR [rbx+0x2e],ah
  44345c:	outs   dx,DWORD PTR ds:[rsi]
  44345d:	imul   esp,DWORD PTR [rcx+rbp*1+0x29],0x20736120
  443465:	and    ah,BYTE PTR [rip+0x2273]        # 0x4456de
  44346b:	add    BYTE PTR [rax],al
  44346d:	add    BYTE PTR [rax],al
  44346f:	add    BYTE PTR [rdx+rcx*1],ch
  443472:	and    BYTE PTR [rax],ah
  443474:	jo     0x4434dd
  443476:	pop    rdi
  443477:	movsxd esp,DWORD PTR [rcx+0x74]
  44347a:	(bad)  
  44347b:	ins    BYTE PTR es:[rdi],dx
  44347c:	outs   dx,DWORD PTR ds:[rsi]
  44347d:	outs   dx,DWORD PTR cs:[esi]
  443480:	(bad)  
  443481:	push   0x5f
  443483:	fs gs jae 0x4434ea
  443487:	jb     0x4434f2
  443489:	jo     0x4434ff
  44348b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6328
  443492:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  44349a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44349e:	jae    0x4434c7
  4434a0:	sub    DWORD PTR [rax],esp
  4434a2:	(bad)  
  4434a3:	jae    0x4434c5
  4434a5:	and    ah,BYTE PTR [rip+0x2273]        # 0x44571e
  4434ab:	add    BYTE PTR [rax],al
  4434ad:	add    BYTE PTR [rax],al
  4434af:	add    BYTE PTR [rdx],cl
  4434b1:	rex.RX push rdx
  4434b3:	rex.WRXB
  4434b4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4434b8:	pop    rdi
  4434b9:	movsxd esp,DWORD PTR [rcx+0x74]
  4434bc:	(bad)  
  4434bd:	ins    BYTE PTR es:[rdi],dx
  4434be:	outs   dx,DWORD PTR ds:[rsi]
  4434bf:	addr32 cs jo 0x44352a
  4434c3:	pop    rdi
  4434c4:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4434c8:	jae    0x4434ea
  4434ca:	movsxd ecx,DWORD PTR [rdx]
  4434cc:	and    BYTE PTR [rax],ah
  4434ce:	and    BYTE PTR [rax],ah
  4434d0:	and    BYTE PTR [rbp+rax*2+0x46],cl
  4434d4:	push   rsp
  4434d5:	and    BYTE PTR [rdx+0x4f],cl
  4434d8:	rex.WB
  4434d9:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4434dd:	pop    rdi
  4434de:	movsxd esp,DWORD PTR [rcx+0x74]
  4434e1:	(bad)  
  4434e2:	ins    BYTE PTR es:[rdi],dx
  4434e3:	outs   dx,DWORD PTR ds:[rsi]
  4434e4:	addr32 cs jo 0x44354f
  4434e8:	pop    rdi
  4434e9:	outs   dx,BYTE PTR ds:[rsi]
  4434ea:	(bad)  
  4434eb:	ins    DWORD PTR es:[rdi],dx
  4434ec:	gs jae 0x44355f
  4434ef:	(bad)  
  4434f0:	movsxd esp,DWORD PTR [rbp+0x20]
  4434f3:	outs   dx,BYTE PTR ds:[rsi]
  4434f4:	and    BYTE PTR [rdi+0x4e],cl
  4434f7:	and    BYTE PTR [rsi+0x2e],ch
  4434fa:	outs   dx,DWORD PTR ds:[rsi]
  4434fb:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  443503:	gs ins BYTE PTR es:[rdi],dx
  443505:	outs   dx,BYTE PTR ds:[rsi]
  443506:	(bad)  
  443507:	ins    DWORD PTR es:[rdi],dx
  443508:	gs jae 0x44357b
  44350b:	(bad)  
  44350c:	movsxd esp,DWORD PTR [rbp+0x0]
  44350f:	add    BYTE PTR [rdx],cl
  443511:	and    BYTE PTR [rax],ah
  443513:	and    BYTE PTR [rax],ah
  443515:	and    BYTE PTR [rbp+rax*2+0x46],cl
  443519:	push   rsp
  44351a:	and    BYTE PTR [rdx+0x4f],cl
  44351d:	rex.WB
  44351e:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443522:	pop    rdi
  443523:	movsxd esp,DWORD PTR [rcx+0x74]
  443526:	(bad)  
  443527:	ins    BYTE PTR es:[rdi],dx
  443528:	outs   dx,DWORD PTR ds:[rsi]
  443529:	addr32 cs jo 0x443594
  44352d:	pop    rdi
  44352e:	imul   ebp,DWORD PTR [rsi+0x64],0x69207865
  443535:	and    BYTE PTR [rdi+0x4e],cl
  443538:	and    BYTE PTR [rcx+0x2e],ch
  44353b:	imul   ebp,DWORD PTR [rsi+0x64],0x65727865
  443542:	ins    BYTE PTR es:[rdi],dx
  443543:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  44354b:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  443553:	rex.WR
  443554:	rex.RB
  443555:	rex.RX push rsp
  443557:	and    BYTE PTR [rdx+0x4f],cl
  44355a:	rex.WB
  44355b:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44355f:	pop    rdi
  443560:	movsxd esp,DWORD PTR [rcx+0x74]
  443563:	(bad)  
  443564:	ins    BYTE PTR es:[rdi],dx
  443565:	outs   dx,DWORD PTR ds:[rsi]
  443566:	addr32 cs jo 0x4435d1
  44356a:	pop    rdi
  44356b:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44356f:	jae    0x443591
  443571:	movsxd esi,DWORD PTR [rdx]
  443573:	and    BYTE PTR [rdi+0x4e],cl
  443576:	and    BYTE PTR [rcx+0x2e],ch
  443579:	imul   ebp,DWORD PTR [rsi+0x64],0x696c6572
  443580:	and    BYTE PTR fs:[rip+0x2e326320],bh        # 0x2e7698a7
  443587:	outs   dx,DWORD PTR ds:[rsi]
  443588:	imul   esp,DWORD PTR [rax+rax*1+0xa],0x52454857
  443590:	and    BYTE PTR [r11+0x2e],r12b
  443594:	jb     0x4435fb
  443596:	ins    BYTE PTR es:[rdi],dx
  443597:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  44359b:	and    BYTE PTR [rcx+0x4e],cl
  44359e:	and    BYTE PTR [rax],ch
  4435a0:	add    BYTE PTR [rdi],ah
  4435a2:	jb     0x4435cb
  4435a4:	sub    al,0x0
  4435a6:	(bad)  
  4435a7:	jbe    0x4435d0
  4435a9:	sub    al,0x0
  4435ab:	(bad)  
  4435ac:	ins    DWORD PTR es:[rdi],dx
  4435ad:	(bad)  
  4435ae:	sub    al,0x0
  4435b0:	(bad)  
  4435b1:	imul   esp,DWORD PTR [rdi],0x5327002c
  4435b7:	(bad)  
  4435b8:	sub    al,0x0
  4435ba:	(bad)  
  4435bb:	jae    0x4435e4
  4435bd:	sub    al,0x0
  4435bf:	(bad)  
  4435c0:	data16 (bad) 
  4435c2:	sub    al,0x0
  4435c4:	sub    DWORD PTR [rdx],ecx
  4435c6:	add    BYTE PTR [rax],al
  4435c8:	and    BYTE PTR [rax],ah
  4435ca:	and    BYTE PTR [rax],ah
  4435cc:	and    BYTE PTR [rax],ah
  4435ce:	rex.B
  4435cf:	rex.WRX
  4435d0:	and    BYTE PTR [rsi+0x2e],r13b
  4435d4:	outs   dx,BYTE PTR ds:[rsi]
  4435d5:	jae    0x443647
  4435d7:	outs   dx,BYTE PTR ds:[rsi]
  4435d8:	(bad)  
  4435d9:	ins    DWORD PTR es:[rdi],dx
  4435da:	and    BYTE PTR gs:[rcx],ah
  4435dd:	jle    0x4435ff
  4435df:	(bad)  
  4435e0:	pop    rsi
  4435e1:	jo     0x44364a
  4435e3:	pop    rdi
  4435e4:	je     0x443655
  4435e6:	(bad)  
  4435e7:	jae    0x44365d
  4435e9:	(bad)  
  4435ea:	or     al,BYTE PTR [rax]
  4435ec:	rex.WRXB push r10
  4435ee:	rex.R
  4435ef:	rex.RB push r10
  4435f1:	and    BYTE PTR [rdx+0x59],al
  4435f4:	and    BYTE PTR [rcx],dh
  4435f6:	sub    al,0x32
  4435f8:	cmp    eax,DWORD PTR [rax]
  4435fa:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4435fc:	and    BYTE PTR [rbp+0x61],ch
  4435ff:	je     0x443664
  443601:	push   0x20676e69
  443606:	jb     0x44366d
  443608:	ins    BYTE PTR es:[rdi],dx
  443609:	(bad)  
  44360a:	je     0x443675
  44360c:	outs   dx,DWORD PTR ds:[rsi]
  44360d:	outs   dx,BYTE PTR ds:[rsi]
  44360e:	jae    0x443630
  443610:	outs   dx,WORD PTR ds:[rsi]
  443612:	jne    0x443682
  443614:	fs or  al,BYTE PTR cs:[rax]
  443618:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  44361a:	and    BYTE PTR [rdx+0x65],dh
  44361d:	ins    BYTE PTR es:[rdi],dx
  44361e:	(bad)  
  44361f:	je     0x44368a
  443621:	outs   dx,DWORD PTR ds:[rsi]
  443622:	outs   dx,BYTE PTR ds:[rsi]
  443623:	jae    0x443645
  443625:	outs   dx,WORD PTR ds:[rsi]
  443627:	jne    0x443697
  443629:	fs or  al,BYTE PTR cs:[rax]
  44362d:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  443635:	jb     0x44369c
  443637:	ins    BYTE PTR es:[rdi],dx
  443638:	(bad)  
  443639:	je     0x4436a4
  44363b:	outs   dx,DWORD PTR ds:[rsi]
  44363c:	outs   dx,BYTE PTR ds:[rsi]
  44363d:	jae    0x44363f
  44363f:	push   rbx
  443640:	rex.RB
  443641:	rex.WR
  443642:	rex.RB
  443643:	rex.XB push r12
  443645:	and    BYTE PTR [rsi+rbp*1+0x6c],ch
  443649:	(bad)  
  44364a:	outs   dx,BYTE PTR ds:[rsi]
  44364b:	outs   dx,BYTE PTR ds:[rsi]
  44364c:	(bad)  
  44364d:	ins    DWORD PTR es:[rdi],dx
  44364e:	and    BYTE PTR gs:[rcx+0x53],al
  443652:	and    BYTE PTR [rdx],ah
  443654:	and    eax,0xa2c2273
  443659:	add    BYTE PTR [rax],al
  44365b:	add    BYTE PTR [rax],al
  44365d:	add    BYTE PTR [rax],al
  44365f:	add    BYTE PTR [rax],ah
  443661:	and    BYTE PTR [rax],ah
  443663:	and    BYTE PTR [rax],ah
  443665:	and    BYTE PTR [rax],ah
  443667:	jo     0x4436d0
  443669:	pop    rdi
  44366a:	movsxd esp,DWORD PTR [rcx+0x74]
  44366d:	(bad)  
  44366e:	ins    BYTE PTR es:[rdi],dx
  44366f:	outs   dx,DWORD PTR ds:[rsi]
  443670:	addr32 cs jo 0x4436db
  443674:	pop    rdi
  443675:	addr32 gs je 0x4436d8
  443679:	jne    0x4436ee
  44367b:	gs jb  0x4436e0
  44367e:	jns    0x4436e9
  443680:	sub    BYTE PTR fs:[rsi+rbp*1+0x6c],ch
  443685:	(bad)  
  443686:	outs   dx,BYTE PTR ds:[rsi]
  443687:	outs   dx,DWORD PTR ds:[rsi]
  443688:	ja     0x4436f8
  44368a:	gs jb  0x4436b6
  44368d:	and    BYTE PTR [rcx+0x73],ah
  443690:	and    BYTE PTR [rdx],ah
  443692:	and    eax,0xa2c2273
  443697:	add    BYTE PTR [rdx+rsi*2+0x75],dl
  44369b:	jae    0x443711
  44369d:	gs add BYTE PTR fs:[rax],ah
  4436a1:	and    BYTE PTR [rax],ah
  4436a3:	and    BYTE PTR [rax],ah
  4436a5:	and    BYTE PTR [rax],ah
  4436a7:	ins    BYTE PTR es:[rdi],dx
  4436a8:	cs ins BYTE PTR es:[rdi],dx
  4436aa:	(bad)  
  4436ab:	outs   dx,BYTE PTR ds:[rsi]
  4436ac:	jo     0x44371a
  4436ae:	je     0x443722
  4436b0:	jne    0x443725
  4436b2:	je     0x443719
  4436b4:	and    BYTE PTR fs:[rcx+0x53],al
  4436b8:	and    BYTE PTR [rdx],ah
  4436ba:	and    eax,0x43002273
  4436bf:	(bad)  
  4436c0:	ins    BYTE PTR es:[rdi],dx
  4436c1:	ins    BYTE PTR es:[rdi],dx
  4436c2:	and    BYTE PTR [rax+0x61],cl
  4436c5:	outs   dx,BYTE PTR ds:[rsi]
  4436c6:	fs ins BYTE PTR es:[rdi],dx
  4436c8:	gs jb  0x4436cb
  4436cb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4436cd:	je     0x443734
  4436cf:	jb     0x44373f
  4436d1:	(bad)  
  4436d2:	ins    BYTE PTR es:[rdi],dx
  4436d3:	and    BYTE PTR [rcx+riz*2+0x6e],cl
  4436d7:	addr32 jne 0x44373b
  4436da:	add    BYTE PTR gs:[eax],al
  4436de:	add    BYTE PTR [rax],al
  4436e0:	sub    al,0xa
  4436e2:	and    BYTE PTR [rax],ah
  4436e4:	and    BYTE PTR [rax],ah
  4436e6:	and    BYTE PTR [rax],ah
  4436e8:	and    BYTE PTR [rsi+0x4f],cl
  4436eb:	push   rsp
  4436ec:	and    BYTE PTR [rsi+rbp*1+0x6c],ch
  4436f0:	(bad)  
  4436f1:	outs   dx,BYTE PTR ds:[rsi]
  4436f2:	imul   esi,DWORD PTR [rbx+0x70],0x5341206c
  4436f9:	and    BYTE PTR [rdx],ah
  4436fb:	and    eax,0xa2c2273
  443700:	and    BYTE PTR [rax],ah
  443702:	and    BYTE PTR [rax],ah
  443704:	and    BYTE PTR [rax],ah
  443706:	and    BYTE PTR [rsi+rbp*1+0x6c],ch
  44370a:	(bad)  
  44370b:	outs   dx,BYTE PTR ds:[rsi]
  44370c:	jo     0x44377a
  44370e:	movsxd esp,DWORD PTR [rcx+0x6c]
  443711:	ins    BYTE PTR es:[rdi],dx
  443712:	outs   dx,WORD PTR ds:[rsi]
  443714:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x70676572
  44371c:	jb     0x44378d
  44371e:	movsxd esp,DWORD PTR [rbp+0x64]
  443721:	jne    0x443795
  443723:	and    BYTE PTR gs:[rcx+0x53],al
  443727:	and    BYTE PTR [rdx],ah
  443729:	and    eax,0xa2c2273
  44372e:	and    BYTE PTR [rax],ah
  443730:	and    BYTE PTR [rax],ah
  443732:	and    BYTE PTR [rax],ah
  443734:	and    BYTE PTR [rsi+rbp*1+0x6c],ch
  443738:	(bad)  
  443739:	outs   dx,BYTE PTR ds:[rsi]
  44373a:	jbe    0x44379d
  44373c:	ins    BYTE PTR es:[rdi],dx
  44373d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x3a3a726f
  443745:	jb     0x4437ac
  443747:	addr32 jo 0x4437bc
  44374a:	outs   dx,DWORD PTR ds:[rsi]
  44374b:	movsxd esp,DWORD PTR [rbp+0x64]
  44374e:	jne    0x4437c2
  443750:	and    BYTE PTR gs:[rcx+0x53],al
  443754:	and    BYTE PTR [rdx],ah
  443756:	and    eax,0xa2c2273
  44375b:	and    BYTE PTR [rax],ah
  44375d:	and    BYTE PTR [rax],ah
  44375f:	and    BYTE PTR [rax],ah
  443761:	and    BYTE PTR [rax],al
  443763:	push   rsi
  443764:	(bad)  
  443765:	ins    BYTE PTR es:[rdi],dx
  443766:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4900726f
  44376e:	outs   dx,BYTE PTR ds:[rsi]
  44376f:	ins    BYTE PTR es:[rdi],dx
  443770:	imul   ebp,DWORD PTR [rsi+0x65],0x6e614820
  443777:	fs ins BYTE PTR es:[rdi],dx
  443779:	gs jb  0x44377c
  44377c:	add    BYTE PTR [rax],al
  44377e:	add    BYTE PTR [rax],al
  443780:	ins    BYTE PTR es:[rdi],dx
  443781:	cs ins BYTE PTR es:[rdi],dx
  443783:	(bad)  
  443784:	outs   dx,BYTE PTR ds:[rsi]
  443785:	imul   ebp,DWORD PTR [rsi+0x6c],0x3a656e69
  44378c:	cmp    dh,BYTE PTR [rdx+0x65]
  44378f:	addr32 jo 0x443804
  443792:	outs   dx,DWORD PTR ds:[rsi]
  443793:	movsxd esp,DWORD PTR [rbp+0x64]
  443796:	jne    0x44380a
  443798:	and    BYTE PTR gs:[rcx+0x53],al
  44379c:	and    BYTE PTR [rdx],ah
  44379e:	and    eax,0xa2c2273
  4437a3:	and    BYTE PTR [rax],ah
  4437a5:	and    BYTE PTR [rax],ah
  4437a7:	and    BYTE PTR [rax],ah
  4437a9:	and    BYTE PTR [rax],al
  4437ab:	ins    BYTE PTR es:[rdi],dx
  4437ac:	cs ins BYTE PTR es:[rdi],dx
  4437ae:	(bad)  
  4437af:	outs   dx,BYTE PTR ds:[rsi]
  4437b0:	(bad)  
  4437b1:	movsxd ebp,DWORD PTR [rax+rax*1+0x0]
  4437b5:	add    BYTE PTR [rax],al
  4437b7:	add    BYTE PTR [rdx+rcx*1],ch
  4437ba:	and    BYTE PTR [rax],ah
  4437bc:	and    BYTE PTR [rax],ah
  4437be:	and    BYTE PTR [rax],ah
  4437c0:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  4437c4:	gs jae 0x44382a
  4437c7:	jb     0x443832
  4437c9:	jo     0x44383f
  4437cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  4437d2:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e5a4b
  4437d8:	push   rdx
  4437d9:	rex.WRXB
  4437da:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4437de:	pop    rdi
  4437df:	movsxd esp,DWORD PTR [rcx+0x74]
  4437e2:	(bad)  
  4437e3:	ins    BYTE PTR es:[rdi],dx
  4437e4:	outs   dx,DWORD PTR ds:[rsi]
  4437e5:	addr32 cs jo 0x443850
  4437e9:	pop    rdi
  4437ea:	ins    BYTE PTR es:[rdi],dx
  4437eb:	(bad)  
  4437ec:	outs   dx,BYTE PTR ds:[rsi]
  4437ed:	addr32 jne 0x443851
  4437f0:	and    BYTE PTR gs:[edx+ecx*1+0x4c],ch
  4437f6:	rex.RB
  4437f7:	rex.RX push rsp
  4437f9:	and    BYTE PTR [rdx+0x4f],cl
  4437fc:	rex.WB
  4437fd:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443801:	pop    rdi
  443802:	movsxd esp,DWORD PTR [rcx+0x74]
  443805:	(bad)  
  443806:	ins    BYTE PTR es:[rdi],dx
  443807:	outs   dx,DWORD PTR ds:[rsi]
  443808:	addr32 cs jo 0x443873
  44380c:	pop    rdi
  44380d:	fs gs jae 0x443874
  443811:	jb     0x44387c
  443813:	jo     0x443889
  443815:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6420
  44381c:	and    BYTE PTR [rdi+0x4e],cl
  44381f:	and    BYTE PTR [rsi+rbp*1+0x63],ah
  443823:	ins    BYTE PTR es:[rdi],dx
  443824:	(bad)  
  443825:	jae    0x44389a
  443827:	outs   dx,DWORD PTR ds:[rsi]
  443828:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e6c20
  443830:	(bad)  
  443831:	(bad)  
  443832:	ins    BYTE PTR es:[rdi],dx
  443833:	outs   dx,DWORD PTR gs:[rsi]
  443835:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  44383d:	outs   dx,DWORD PTR cs:[rsi]
  44383f:	(bad)  
  443840:	push   0x6f
  443842:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6c20
  44384a:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x444e4120
  443852:	and    BYTE PTR [rsi+rbp*1+0x6f],ah
  443856:	(bad)  
  443857:	push   0x73
  443859:	jne    0x4438bd
  44385b:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  443863:	ins    BYTE PTR es:[rdi],dx
  443864:	cs ins BYTE PTR es:[rdi],dx
  443866:	(bad)  
  443867:	outs   dx,BYTE PTR ds:[rsi]
  443868:	outs   dx,BYTE PTR ds:[rsi]
  443869:	(bad)  
  44386a:	ins    DWORD PTR es:[rdi],dx
  44386b:	add    BYTE PTR gs:[rdi+0x48],dl
  44386f:	rex.RB push r10
  443871:	and    BYTE PTR [r14+rbp*1+0x6c],r13b
  443876:	(bad)  
  443877:	outs   dx,BYTE PTR ds:[rsi]
  443878:	jo     0x4438e6
  44387a:	movsxd esp,DWORD PTR [rcx+0x6c]
  44387d:	ins    BYTE PTR es:[rdi],dx
  44387e:	outs   dx,WORD PTR ds:[rsi]
  443880:	imul   esp,DWORD PTR [rax+riz*1+0x21],0xa30203d
  443888:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  44388c:	je     0x4438ae
  44388e:	outs   dx,DWORD PTR ds:[rsi]
  44388f:	data16 and BYTE PTR [rcx+riz*2+0x6e],ch
  443894:	addr32 jne 0x4438f8
  443897:	addr32 gs jae 0x44389b
  44389b:	add    BYTE PTR [rax],al
  44389d:	add    BYTE PTR [rax],al
  44389f:	add    BYTE PTR [rbx+0x45],dl
  4438a2:	rex.WR
  4438a3:	rex.RB
  4438a4:	rex.XB push r12
  4438a6:	and    BYTE PTR [rsi+0x2e],ch
  4438a9:	outs   dx,BYTE PTR ds:[rsi]
  4438aa:	jae    0x44391c
  4438ac:	outs   dx,BYTE PTR ds:[rsi]
  4438ad:	(bad)  
  4438ae:	ins    DWORD PTR es:[rdi],dx
  4438af:	and    BYTE PTR gs:[rcx+0x73],ah
  4438b3:	and    BYTE PTR [rdx],ah
  4438b5:	and    eax,0xa2c2273
  4438ba:	and    BYTE PTR [rax],ah
  4438bc:	and    BYTE PTR [rax],ah
  4438be:	and    BYTE PTR [rax],ah
  4438c0:	and    BYTE PTR [rsi+rbp*1+0x74],dh
  4438c4:	jns    0x443936
  4438c6:	outs   dx,BYTE PTR ds:[rsi]
  4438c7:	(bad)  
  4438c8:	ins    DWORD PTR es:[rdi],dx
  4438c9:	and    BYTE PTR gs:[rcx+0x73],ah
  4438cd:	and    BYTE PTR [rdx],ah
  4438cf:	and    eax,0xa2c2273
  4438d4:	and    BYTE PTR [rax],ah
  4438d6:	and    BYTE PTR [rax],ah
  4438d8:	and    BYTE PTR [rax],ah
  4438da:	and    BYTE PTR [rax+0x67],dh
  4438dd:	pop    rdi
  4438de:	movsxd esp,DWORD PTR [rcx+0x74]
  4438e1:	(bad)  
  4438e2:	ins    BYTE PTR es:[rdi],dx
  4438e3:	outs   dx,DWORD PTR ds:[rsi]
  4438e4:	outs   dx,WORD PTR cs:[esi]
  4438e8:	jb     0x443957
  4438ea:	(bad)  
  4438eb:	je     0x44394c
  4438ed:	je     0x443968
  4438ef:	jo     0x443956
  4438f1:	sub    BYTE PTR [rsi+rbp*1+0x74],dh
  4438f5:	jns    0x443967
  4438f7:	(bad)  
  4438f9:	jae    0x443960
  4438fb:	je     0x443976
  4438fd:	jo     0x443964
  4438ff:	sub    al,0x20
  443901:	je     0x443931
  443903:	je     0x44397e
  443905:	jo     0x44397b
  443907:	jns    0x443979
  443909:	ins    DWORD PTR es:[rdi],dx
  44390a:	outs   dx,DWORD PTR ds:[rsi]
  44390b:	sub    DWORD PTR fs:[rax],esp
  44390e:	(bad)  
  44390f:	jae    0x443931
  443911:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa705b8a
  443917:	and    BYTE PTR [rax],ah
  443919:	and    BYTE PTR [rax],ah
  44391b:	and    BYTE PTR [rax],ah
  44391d:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  443921:	rex.WRB sub BYTE PTR [r13+rax*2+0x41],r9b
  443926:	rex.R
  443927:	rex.WB
  443928:	rex.WRX
  443929:	rex.RXB or r8b,BYTE PTR [r8]
  44392c:	add    BYTE PTR [rax],al
  44392e:	add    BYTE PTR [rax],al
  443930:	and    BYTE PTR [rax],ah
  443932:	and    BYTE PTR [rax],ah
  443934:	and    BYTE PTR [rax],ah
  443936:	and    BYTE PTR [rax],ah
  443938:	and    BYTE PTR [rax],ah
  44393a:	and    BYTE PTR [rax],ah
  44393c:	rex.XB
  44393d:	rex.WRXB
  44393e:	rex.B
  44393f:	rex.WR
  443940:	rex.RB push r11
  443942:	rex.XB
  443943:	sub    BYTE PTR [r8],r13b
  443946:	push   rbx
  443947:	rex.RB
  443948:	rex.WR
  443949:	rex.RB
  44394a:	rex.XB push r12
  44394c:	and    BYTE PTR [rdi],ah
  44394e:	and    BYTE PTR [rbx+0x6f],ah
  443951:	ins    BYTE PTR es:[rdi],dx
  443952:	ins    BYTE PTR es:[rdi],dx
  443953:	(bad)  
  443954:	je     0x4439bb
  443956:	and    BYTE PTR [rdi],ah
  443958:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  44395c:	movsxd ebp,DWORD PTR [rsi]
  44395e:	movsxd ebp,DWORD PTR [rdi+0x6c]
  443961:	ins    BYTE PTR es:[rdi],dx
  443962:	outs   dx,BYTE PTR ds:[rsi]
  443963:	(bad)  
  443964:	ins    DWORD PTR es:[rdi],dx
  443965:	and    BYTE PTR gs:[rsi+0x52],al
  443969:	rex.WRXB
  44396a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44396e:	pop    rdi
  44396f:	movsxd esp,DWORD PTR [rcx+0x74]
  443972:	(bad)  
  443973:	ins    BYTE PTR es:[rdi],dx
  443974:	outs   dx,DWORD PTR ds:[rsi]
  443975:	addr32 cs jo 0x4439e0
  443979:	pop    rdi
  44397a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44397d:	ins    BYTE PTR es:[rdi],dx
  44397e:	(bad)  
  44397f:	je     0x4439ea
  443981:	outs   dx,DWORD PTR ds:[rsi]
  443982:	outs   dx,BYTE PTR ds:[rsi]
  443983:	and    BYTE PTR [rbx+0x2c],ah
  443986:	and    BYTE PTR [rax+0x67],dh
  443989:	pop    rdi
  44398a:	movsxd esp,DWORD PTR [rcx+0x74]
  44398d:	(bad)  
  44398e:	ins    BYTE PTR es:[rdi],dx
  44398f:	outs   dx,DWORD PTR ds:[rsi]
  443990:	addr32 cs jo 0x4439fb
  443994:	pop    rdi
  443995:	je     0x443a10
  443997:	jo     0x4439fe
  443999:	and    BYTE PTR [rdx+0x74],ah
  44399c:	or     ah,BYTE PTR [rax]
  44399e:	and    BYTE PTR [rax],ah
  4439a0:	and    BYTE PTR [rax],ah
  4439a2:	and    BYTE PTR [rax],ah
  4439a4:	and    BYTE PTR [rax],ah
  4439a6:	and    BYTE PTR [rax],ah
  4439a8:	and    BYTE PTR [rax],ah
  4439aa:	and    BYTE PTR [rax],ah
  4439ac:	and    BYTE PTR [rax],ah
  4439ae:	and    BYTE PTR [rax],ah
  4439b0:	and    BYTE PTR [rax],ah
  4439b2:	and    BYTE PTR [rdi+0x48],dl
  4439b5:	rex.RB push r10
  4439b7:	and    BYTE PTR [r11+0x2e],r12b
  4439bb:	outs   dx,DWORD PTR ds:[rsi]
  4439bc:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  4439c4:	jns    0x443a36
  4439c6:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4439c9:	ins    BYTE PTR es:[rdi],dx
  4439ca:	(bad)  
  4439cb:	je     0x443a36
  4439cd:	outs   dx,DWORD PTR ds:[rsi]
  4439ce:	outs   dx,BYTE PTR ds:[rsi]
  4439cf:	and    BYTE PTR [rcx+0x4e],al
  4439d2:	and    BYTE PTR [rdx+0x74],r12b
  4439d6:	outs   dx,DWORD PTR cs:[rsi]
  4439d8:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  4439e0:	jns    0x443a52
  4439e2:	(bad)  
  4439e4:	jae    0x443a4b
  4439e6:	je     0x443a61
  4439e8:	jo     0x443a4f
  4439ea:	and    BYTE PTR [rcx+0x4e],al
  4439ed:	and    BYTE PTR [rsi+rbp*1+0x74],r14b
  4439f2:	jns    0x443a64
  4439f4:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4439f7:	ins    BYTE PTR es:[rdi],dx
  4439f8:	(bad)  
  4439f9:	je     0x443a64
  4439fb:	outs   dx,DWORD PTR ds:[rsi]
  4439fc:	outs   dx,BYTE PTR ds:[rsi]
  4439fd:	and    BYTE PTR [rsi+rdi*1],bh
  443a00:	and    BYTE PTR [rdx+0x74],ah
  443a03:	cs je  0x443a7f
  443a06:	jo     0x443a6b
  443a08:	outs   dx,DWORD PTR ds:[rsi]
  443a09:	ins    BYTE PTR es:[rdi],dx
  443a0a:	ins    BYTE PTR es:[rdi],dx
  443a0b:	(bad)  
  443a0c:	je     0x443a77
  443a0e:	outs   dx,DWORD PTR ds:[rsi]
  443a0f:	outs   dx,BYTE PTR ds:[rsi]
  443a10:	sub    DWORD PTR [rax+riz*1],ebp
  443a13:	(bad)  
  443a14:	(bad)  
  443a15:	sub    DWORD PTR [rax],esp
  443a17:	jl     0x443a95
  443a19:	or     al,BYTE PTR [rax]
  443a1b:	rex.XB push 0x6b6365
  443a21:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  443a23:	imul   esp,DWORD PTR fs:[rsi+0x69],0x7265
  443a2b:	add    BYTE PTR [rax],al
  443a2d:	add    BYTE PTR [rax],al
  443a2f:	add    BYTE PTR [rax],ah
  443a31:	and    BYTE PTR [rax],ah
  443a33:	and    BYTE PTR [rax],ah
  443a35:	and    BYTE PTR [rax],ah
  443a37:	and    BYTE PTR [rax],ah
  443a39:	and    BYTE PTR [rax],ah
  443a3b:	and    BYTE PTR [rbx+0x41],al
  443a3e:	push   rbx
  443a3f:	and    BYTE PTR [r15+0x48],r10b
  443a43:	rex.RB
  443a44:	rex.WRX and BYTE PTR [rsi+r13*1+0x74],r14b
  443a49:	jns    0x443abb
  443a4b:	outs   dx,BYTE PTR ds:[rsi]
  443a4c:	outs   dx,DWORD PTR ds:[rsi]
  443a4d:	je     0x443abd
  443a4f:	jne    0x443abd
  443a51:	ins    BYTE PTR es:[rdi],dx
  443a52:	and    BYTE PTR [rax+rcx*2+0x45],dl
  443a56:	rex.WRX and BYTE PTR [rdi],r12b
  443a59:	and    BYTE PTR [rsi+0x6f],ch
  443a5c:	je     0x443a7e
  443a5e:	outs   dx,BYTE PTR ds:[rsi]
  443a5f:	jne    0x443acd
  443a61:	ins    BYTE PTR es:[rdi],dx
  443a62:	(bad)  
  443a63:	and    BYTE PTR [rbp+0x4c],al
  443a66:	push   rbx
  443a67:	and    BYTE PTR [r15],r12b
  443a6a:	(bad)  
  443a6b:	and    BYTE PTR [rbp+0x4e],al
  443a6e:	and    BYTE PTR [rsp+rdi*2+0xa],r15b
  443a73:	and    BYTE PTR [rax],ah
  443a75:	and    BYTE PTR [rax],ah
  443a77:	and    BYTE PTR [rax],ah
  443a79:	and    BYTE PTR [rax],ah
  443a7b:	and    BYTE PTR [rax],ah
  443a7d:	and    BYTE PTR [rax],ah
  443a7f:	rex.XB
  443a80:	push   r11
  443a82:	and    BYTE PTR [r15+0x48],r10b
  443a86:	rex.RB
  443a87:	rex.WRX and BYTE PTR [rsi+r13*1+0x74],r14b
  443a8c:	jns    0x443afe
  443a8e:	fs gs data16 (bad) 
  443a92:	jne    0x443b00
  443a94:	je     0x443ab6
  443a96:	rex.WB push r11
  443a98:	and    BYTE PTR [rsi+0x4f],cl
  443a9b:	push   rsp
  443a9c:	and    BYTE PTR [rsi+0x55],cl
  443a9f:	rex.WR
  443aa0:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  443aa5:	rex.WRX and BYTE PTR [rdi],r12b
  443aa8:	and    BYTE PTR [rbp+riz*2+0x66],ah
  443aac:	(bad)  
  443aad:	jne    0x443b1b
  443aaf:	je     0x443ad1
  443ab1:	(bad)  
  443ab2:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  443ab6:	je     0x443ae6
  443ab8:	je     0x443b33
  443aba:	jo     0x443b20
  443abc:	gs data16 (bad) 
  443abf:	jne    0x443b2d
  443ac1:	je     0x443ae3
  443ac3:	rex.RB
  443ac4:	rex.WR push rbx
  443ac6:	and    BYTE PTR [r15],r12b
  443ac9:	(bad)  
  443aca:	and    BYTE PTR [rbp+0x4e],al
  443acd:	or     r12b,BYTE PTR [rax]
  443ad0:	and    BYTE PTR [rax],ah
  443ad2:	and    BYTE PTR [rax],ah
  443ad4:	and    BYTE PTR [rax],ah
  443ad6:	sub    DWORD PTR [rax],esp
  443ad8:	(bad)  
  443ad9:	jae    0x443afb
  443adb:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa705d54
  443ae1:	and    BYTE PTR [rax],ah
  443ae3:	and    BYTE PTR [rax],ah
  443ae5:	and    BYTE PTR [rax],ah
  443ae7:	and    BYTE PTR [rax+0x67],dh
  443aea:	pop    rdi
  443aeb:	movsxd esp,DWORD PTR [rcx+0x74]
  443aee:	(bad)  
  443aef:	ins    BYTE PTR es:[rdi],dx
  443af0:	outs   dx,DWORD PTR ds:[rsi]
  443af1:	addr32 cs (bad) 
  443af4:	jb     0x443b68
  443af6:	(bad)  
  443af7:	jns    0x443b58
  443af9:	je     0x443b6a
  443afb:	pop    rdi
  443afc:	jae    0x443b72
  443afe:	jb     0x443b69
  443b00:	outs   dx,BYTE PTR ds:[rsi]
  443b01:	sub    BYTE PTR [ecx+0x52],al
  443b05:	push   rdx
  443b06:	pop    r9
  443b08:	sub    BYTE PTR [rdx],cl
  443b0a:	and    BYTE PTR [rax],ah
  443b0c:	and    BYTE PTR [rax],ah
  443b0e:	and    BYTE PTR [rax],ah
  443b10:	and    BYTE PTR [rax],ah
  443b12:	and    BYTE PTR [rbx+0x45],dl
  443b15:	rex.WR
  443b16:	rex.RB
  443b17:	rex.XB push r12
  443b19:	and    BYTE PTR [rax+0x67],dh
  443b1c:	pop    rdi
  443b1d:	movsxd esp,DWORD PTR [rcx+0x74]
  443b20:	(bad)  
  443b21:	ins    BYTE PTR es:[rdi],dx
  443b22:	outs   dx,DWORD PTR ds:[rsi]
  443b23:	addr32 cs jo 0x443b8e
  443b27:	pop    rdi
  443b28:	addr32 gs je 0x443b8b
  443b2c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443b2f:	jae    0x443ba5
  443b31:	jb     0x443b94
  443b33:	imul   ebp,DWORD PTR [rsi+0x74],0x28666564
  443b3a:	jb     0x443b6a
  443b3c:	outs   dx,DWORD PTR ds:[rsi]
  443b3d:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x65757274
  443b45:	sub    DWORD PTR [rax],esp
  443b47:	rex.RX push rdx
  443b49:	rex.WRXB
  443b4a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  443b4e:	pop    rdi
  443b4f:	movsxd esp,DWORD PTR [rcx+0x74]
  443b52:	(bad)  
  443b53:	ins    BYTE PTR es:[rdi],dx
  443b54:	outs   dx,DWORD PTR ds:[rsi]
  443b55:	addr32 cs jo 0x443bc0
  443b59:	pop    rdi
  443b5a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443b5d:	jae    0x443bd3
  443b5f:	jb     0x443bc2
  443b61:	imul   ebp,DWORD PTR [rsi+0x74],0x57207220
  443b68:	rex.W
  443b69:	rex.RB push r10
  443b6b:	and    BYTE PTR [r14+rbp*1+0x6f],r14b
  443b70:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e7220
  443b78:	outs   dx,DWORD PTR ds:[rsi]
  443b79:	outs   dx,BYTE PTR ds:[rsi]
  443b7a:	je     0x443bf5
  443b7c:	jo     0x443be7
  443b7e:	or     ah,BYTE PTR fs:[rax]
  443b81:	and    BYTE PTR [rax],ah
  443b83:	and    BYTE PTR [rax],ah
  443b85:	and    BYTE PTR [rax],ah
  443b87:	sub    DWORD PTR [rax+riz*1],ebp
  443b8a:	(bad)  
  443b8b:	and    BYTE PTR [rdi],ah
  443b8d:	sub    DWORD PTR [rax],esp
  443b8f:	(bad)  
  443b90:	jae    0x443bb2
  443b92:	and    ah,BYTE PTR [rip+0x2273]        # 0x445e0b
  443b98:	sub    al,0xa
  443b9a:	and    BYTE PTR [rax],ah
  443b9c:	and    BYTE PTR [rax],ah
  443b9e:	and    BYTE PTR [rax],ah
  443ba0:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  443ba4:	gs jae 0x443c0a
  443ba7:	jb     0x443c12
  443ba9:	jo     0x443c1f
  443bab:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736120
  443bb2:	and    ah,BYTE PTR [rip+0x2273]        # 0x445e2b
  443bb8:	or     al,BYTE PTR [rsi+0x52]
  443bbb:	rex.WRXB
  443bbc:	rex.WRB and BYTE PTR [r8+0x67],r14b
  443bc0:	pop    rdi
  443bc1:	movsxd esp,DWORD PTR [rcx+0x74]
  443bc4:	(bad)  
  443bc5:	ins    BYTE PTR es:[rdi],dx
  443bc6:	outs   dx,DWORD PTR ds:[rsi]
  443bc7:	addr32 cs jo 0x443c32
  443bcb:	pop    rdi
  443bcc:	je     0x443c47
  443bce:	jo     0x443c35
  443bd0:	and    BYTE PTR [rdx+rcx*1+0x20],dh
  443bd4:	and    BYTE PTR [rax],ah
  443bd6:	and    BYTE PTR [rax],ah
  443bd8:	rex.WR
  443bd9:	rex.RB
  443bda:	rex.RX push rsp
  443bdc:	and    BYTE PTR [rdx+0x4f],cl
  443bdf:	rex.WB
  443be0:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443be4:	pop    rdi
  443be5:	movsxd esp,DWORD PTR [rcx+0x74]
  443be8:	(bad)  
  443be9:	ins    BYTE PTR es:[rdi],dx
  443bea:	outs   dx,DWORD PTR ds:[rsi]
  443beb:	addr32 cs jo 0x443c56
  443bef:	pop    rdi
  443bf0:	outs   dx,BYTE PTR ds:[rsi]
  443bf1:	(bad)  
  443bf2:	ins    DWORD PTR es:[rdi],dx
  443bf3:	gs jae 0x443c66
  443bf6:	(bad)  
  443bf7:	movsxd esp,DWORD PTR [rbp+0x20]
  443bfa:	outs   dx,BYTE PTR ds:[rsi]
  443bfb:	and    BYTE PTR [rdi+0x4e],cl
  443bfe:	and    BYTE PTR [rsi+0x2e],ch
  443c01:	outs   dx,DWORD PTR ds:[rsi]
  443c02:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  443c0a:	jns    0x443c7c
  443c0c:	outs   dx,BYTE PTR ds:[rsi]
  443c0d:	(bad)  
  443c0e:	ins    DWORD PTR es:[rdi],dx
  443c0f:	gs jae 0x443c82
  443c12:	(bad)  
  443c13:	movsxd esp,DWORD PTR [rbp+0xa]
  443c16:	add    BYTE PTR [rax],al
  443c18:	and    BYTE PTR [rax],ah
  443c1a:	and    BYTE PTR [rax],ah
  443c1c:	and    BYTE PTR [rbp+rax*2+0x46],cl
  443c20:	push   rsp
  443c21:	and    BYTE PTR [rdx+0x4f],cl
  443c24:	rex.WB
  443c25:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443c29:	pop    rdi
  443c2a:	movsxd esp,DWORD PTR [rcx+0x74]
  443c2d:	(bad)  
  443c2e:	ins    BYTE PTR es:[rdi],dx
  443c2f:	outs   dx,DWORD PTR ds:[rsi]
  443c30:	addr32 cs jo 0x443c9b
  443c34:	pop    rdi
  443c35:	fs gs jae 0x443c9c
  443c39:	jb     0x443ca4
  443c3b:	jo     0x443cb1
  443c3d:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f206420
  443c44:	rex.WRX and BYTE PTR [rsi+r13*1+0x63],r12b
  443c49:	ins    BYTE PTR es:[rdi],dx
  443c4a:	(bad)  
  443c4b:	jae    0x443cc0
  443c4d:	outs   dx,DWORD PTR ds:[rsi]
  443c4e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  443c56:	(bad)  
  443c57:	(bad)  
  443c58:	ins    BYTE PTR es:[rdi],dx
  443c59:	outs   dx,DWORD PTR gs:[rsi]
  443c5b:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  443c63:	outs   dx,DWORD PTR cs:[rsi]
  443c65:	(bad)  
  443c66:	push   0x6f
  443c68:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e7420
  443c70:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  443c78:	outs   dx,DWORD PTR cs:[rsi]
  443c7a:	(bad)  
  443c7b:	push   0x73
  443c7d:	jne    0x443ce1
  443c7f:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  443c87:	push   rdi
  443c88:	rex.W
  443c89:	rex.RB push r10
  443c8b:	and    BYTE PTR [r14+rbp*1+0x74],r14b
  443c90:	jns    0x443d02
  443c92:	je     0x443d0d
  443c94:	jo     0x443cfb
  443c96:	and    BYTE PTR [rip+0x27642720],bh        # 0x27a863bc
  443c9c:	or     al,BYTE PTR [rax]
  443c9e:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  443ca6:	outs   dx,DWORD PTR fs:[rsi]
  443ca8:	ins    DWORD PTR es:[rdi],dx
  443ca9:	(bad)  
  443caa:	imul   ebp,DWORD PTR [rsi+0x73],0x53000000
  443cb1:	rex.RB
  443cb2:	rex.WR
  443cb3:	rex.RB
  443cb4:	rex.XB push r12
  443cb6:	and    BYTE PTR [rsi+0x2e],ch
  443cb9:	outs   dx,BYTE PTR ds:[rsi]
  443cba:	jae    0x443d2c
  443cbc:	outs   dx,BYTE PTR ds:[rsi]
  443cbd:	(bad)  
  443cbe:	ins    DWORD PTR es:[rdi],dx
  443cbf:	and    BYTE PTR gs:[rcx+0x53],al
  443cc3:	and    BYTE PTR [rdx],ah
  443cc5:	and    eax,0xa2c2273
  443cca:	and    BYTE PTR [rax],ah
  443ccc:	and    BYTE PTR [rax],ah
  443cce:	and    BYTE PTR [rax],ah
  443cd0:	and    BYTE PTR [rbx+0x2e],ah
  443cd3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443cd6:	outs   dx,BYTE PTR ds:[rsi]
  443cd7:	(bad)  
  443cd8:	ins    DWORD PTR es:[rdi],dx
  443cd9:	and    BYTE PTR gs:[rcx+0x53],al
  443cdd:	and    BYTE PTR [rdx],ah
  443cdf:	and    eax,0xa2c2273
  443ce4:	and    BYTE PTR [rax],ah
  443ce6:	and    BYTE PTR [rax],ah
  443ce8:	and    BYTE PTR [rax],ah
  443cea:	and    BYTE PTR [rax+0x67],dh
  443ced:	pop    rdi
  443cee:	movsxd esp,DWORD PTR [rcx+0x74]
  443cf1:	(bad)  
  443cf2:	ins    BYTE PTR es:[rdi],dx
  443cf3:	outs   dx,DWORD PTR ds:[rsi]
  443cf4:	addr32 cs jo 0x443d5f
  443cf8:	pop    rdi
  443cf9:	outs   dx,BYTE PTR gs:[rsi]
  443cfb:	movsxd ebp,DWORD PTR [rdi+0x64]
  443cfe:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6f745f
  443d05:	movsxd ebp,DWORD PTR [rax+0x61]
  443d08:	jb     0x443d32
  443d0a:	movsxd ebp,DWORD PTR [rsi]
  443d0c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443d0f:	outs   dx,WORD PTR ds:[rsi]
  443d11:	jb     0x443d78
  443d13:	outs   dx,BYTE PTR ds:[rsi]
  443d14:	movsxd ebp,DWORD PTR [rdi+0x64]
  443d17:	imul   ebp,DWORD PTR [rsi+0x67],0x53412029
  443d1e:	and    BYTE PTR [rdx],ah
  443d20:	and    eax,0xa2c2273
  443d25:	and    BYTE PTR [rax],ah
  443d27:	and    BYTE PTR [rax],ah
  443d29:	and    BYTE PTR [rax],ah
  443d2b:	and    BYTE PTR [rax+0x67],dh
  443d2e:	pop    rdi
  443d2f:	movsxd esp,DWORD PTR [rcx+0x74]
  443d32:	(bad)  
  443d33:	ins    BYTE PTR es:[rdi],dx
  443d34:	outs   dx,DWORD PTR ds:[rsi]
  443d35:	addr32 cs jo 0x443da0
  443d39:	pop    rdi
  443d3a:	outs   dx,BYTE PTR gs:[rsi]
  443d3c:	movsxd ebp,DWORD PTR [rdi+0x64]
  443d3f:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6f745f
  443d46:	movsxd ebp,DWORD PTR [rax+0x61]
  443d49:	jb     0x443d73
  443d4b:	movsxd ebp,DWORD PTR [rsi]
  443d4d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443d50:	je     0x443dc1
  443d52:	outs   dx,BYTE PTR gs:[rsi]
  443d54:	movsxd ebp,DWORD PTR [rdi+0x64]
  443d57:	imul   ebp,DWORD PTR [rsi+0x67],0x53412029
  443d5e:	and    BYTE PTR [rdx],ah
  443d60:	and    eax,0xa2c2273
  443d65:	and    BYTE PTR [rax],ah
  443d67:	and    BYTE PTR [rax],ah
  443d69:	and    BYTE PTR [rax],ah
  443d6b:	and    BYTE PTR [rbx+0x41],al
  443d6e:	push   rbx
  443d6f:	and    BYTE PTR [r15+0x48],r10b
  443d73:	rex.RB
  443d74:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  443d78:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443d7b:	fs gs data16 (bad) 
  443d7f:	jne    0x443ded
  443d81:	je     0x443da3
  443d83:	push   rsp
  443d84:	rex.W
  443d85:	rex.RB
  443d86:	rex.WRX and BYTE PTR [rdi],r12b
  443d89:	and    eax,0x200a2773
  443d8e:	and    BYTE PTR [rax],ah
  443d90:	and    BYTE PTR [rax],ah
  443d92:	and    BYTE PTR [rax],ah
  443d94:	rex.RB
  443d95:	rex.WR push rbx
  443d97:	and    BYTE PTR [r15],r12b
  443d9a:	and    eax,0x45202773
  443d9f:	rex.WRX
  443da0:	and    BYTE PTR [rcx+0x53],r8b
  443da4:	and    BYTE PTR [rdx],ah
  443da6:	and    eax,0x44002273
  443dab:	gs data16 (bad) 
  443dae:	jne    0x443e1c
  443db0:	je     0x443df1
  443db2:	add    BYTE PTR [rsi+0x6f],ch
  443db5:	add    BYTE PTR [rcx+0x65],bh
  443db8:	jae    0x443dba
  443dba:	rex.R
  443dbb:	gs jae 0x443e32
  443dbe:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  443dc5:	add    BYTE PTR [rbx+0x6f],dl
  443dc8:	jne    0x443e3c
  443dca:	movsxd esp,DWORD PTR [rbp+0x0]
  443dcd:	add    BYTE PTR [rax],al
  443dcf:	add    BYTE PTR [rdx+rcx*1],ch
  443dd2:	and    BYTE PTR [rax],ah
  443dd4:	and    BYTE PTR [rax],ah
  443dd6:	and    BYTE PTR [rax],ah
  443dd8:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  443ddc:	gs jae 0x443e42
  443ddf:	jb     0x443e4a
  443de1:	jo     0x443e57
  443de3:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  443dea:	and    ah,BYTE PTR [rip+0x2273]        # 0x446063
  443df0:	or     al,BYTE PTR [rsi+0x52]
  443df3:	rex.WRXB
  443df4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  443df8:	pop    rdi
  443df9:	movsxd esp,DWORD PTR [rcx+0x74]
  443dfc:	(bad)  
  443dfd:	ins    BYTE PTR es:[rdi],dx
  443dfe:	outs   dx,DWORD PTR ds:[rsi]
  443dff:	addr32 cs jo 0x443e6a
  443e03:	pop    rdi
  443e04:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443e07:	jbe    0x443e6e
  443e09:	jb     0x443e7e
  443e0b:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6320
  443e12:	and    BYTE PTR [rax],ah
  443e14:	and    BYTE PTR [rax],ah
  443e16:	rex.WX
  443e17:	rex.WRXB
  443e18:	rex.WB
  443e19:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443e1d:	pop    rdi
  443e1e:	movsxd esp,DWORD PTR [rcx+0x74]
  443e21:	(bad)  
  443e22:	ins    BYTE PTR es:[rdi],dx
  443e23:	outs   dx,DWORD PTR ds:[rsi]
  443e24:	addr32 cs jo 0x443e8f
  443e28:	pop    rdi
  443e29:	outs   dx,BYTE PTR ds:[rsi]
  443e2a:	(bad)  
  443e2b:	ins    DWORD PTR es:[rdi],dx
  443e2c:	gs jae 0x443e9f
  443e2f:	(bad)  
  443e30:	movsxd esp,DWORD PTR [rbp+0x20]
  443e33:	outs   dx,BYTE PTR ds:[rsi]
  443e34:	and    BYTE PTR [rdi+0x4e],cl
  443e37:	and    BYTE PTR [rsi+0x2e],ch
  443e3a:	outs   dx,DWORD PTR ds:[rsi]
  443e3b:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6320
  443e43:	outs   dx,DWORD PTR ds:[rsi]
  443e44:	outs   dx,BYTE PTR ds:[rsi]
  443e45:	outs   dx,BYTE PTR ds:[rsi]
  443e46:	(bad)  
  443e47:	ins    DWORD PTR es:[rdi],dx
  443e48:	gs jae 0x443ebb
  443e4b:	(bad)  
  443e4c:	movsxd esp,DWORD PTR [rbp+0xa]
  443e4f:	add    BYTE PTR [rbp+rax*2+0x46],cl
  443e53:	push   rsp
  443e54:	and    BYTE PTR [rdx+0x4f],cl
  443e57:	rex.WB
  443e58:	rex.WRX and BYTE PTR [rax+0x67],r14b
  443e5c:	pop    rdi
  443e5d:	movsxd esp,DWORD PTR [rcx+0x74]
  443e60:	(bad)  
  443e61:	ins    BYTE PTR es:[rdi],dx
  443e62:	outs   dx,DWORD PTR ds:[rsi]
  443e63:	addr32 cs jo 0x443ece
  443e67:	pop    rdi
  443e68:	fs gs jae 0x443ecf
  443e6c:	jb     0x443ed7
  443e6e:	jo     0x443ee4
  443e70:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f206420
  443e77:	rex.WRX and BYTE PTR [rsi+r13*1+0x63],r12b
  443e7c:	ins    BYTE PTR es:[rdi],dx
  443e7d:	(bad)  
  443e7e:	jae    0x443ef3
  443e80:	outs   dx,DWORD PTR ds:[rsi]
  443e81:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e6320
  443e89:	(bad)  
  443e8a:	(bad)  
  443e8b:	ins    BYTE PTR es:[rdi],dx
  443e8c:	outs   dx,DWORD PTR gs:[rsi]
  443e8e:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  443e96:	and    BYTE PTR [rax],ah
  443e98:	and    BYTE PTR [rax],ah
  443e9a:	and    BYTE PTR [rcx+0x4e],al
  443e9d:	and    BYTE PTR [rsi+rbp*1+0x6f],r12b
  443ea2:	(bad)  
  443ea3:	push   0x6f
  443ea5:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  443ead:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  443eb5:	outs   dx,DWORD PTR cs:[rsi]
  443eb7:	(bad)  
  443eb8:	push   0x73
  443eba:	jne    0x443f1e
  443ebc:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  443ec4:	push   rdi
  443ec5:	rex.W
  443ec6:	rex.RB push r10
  443ec8:	and    BYTE PTR [r10+rsi*2+0x75],r14b
  443ecd:	or     al,BYTE PTR gs:[rax]
  443ed0:	and    BYTE PTR [rax],ah
  443ed2:	rex.B
  443ed3:	rex.WRX
  443ed4:	and    BYTE PTR [rsi+0x2e],r13b
  443ed8:	outs   dx,BYTE PTR ds:[rsi]
  443ed9:	jae    0x443f4b
  443edb:	outs   dx,BYTE PTR ds:[rsi]
  443edc:	(bad)  
  443edd:	ins    DWORD PTR es:[rdi],dx
  443ede:	and    BYTE PTR gs:[rsi+rdi*1],bh
  443ee2:	and    BYTE PTR [rdi],ah
  443ee4:	jo     0x443f4d
  443ee6:	pop    rdi
  443ee7:	movsxd esp,DWORD PTR [rcx+0x74]
  443eea:	(bad)  
  443eeb:	ins    BYTE PTR es:[rdi],dx
  443eec:	outs   dx,DWORD PTR ds:[rsi]
  443eed:	addr32 (bad) 
  443eef:	or     ah,BYTE PTR [rax]
  443ef1:	and    BYTE PTR [rcx+0x4e],al
  443ef4:	and    BYTE PTR [rsi+0x2e],r13b
  443ef8:	outs   dx,BYTE PTR ds:[rsi]
  443ef9:	jae    0x443f6b
  443efb:	outs   dx,BYTE PTR ds:[rsi]
  443efc:	(bad)  
  443efd:	ins    DWORD PTR es:[rdi],dx
  443efe:	and    BYTE PTR gs:[rsi+rdi*1],bh
  443f02:	and    BYTE PTR [rdi],ah
  443f04:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  443f0b:	je     0x443f76
  443f0d:	outs   dx,DWORD PTR ds:[rsi]
  443f0e:	outs   dx,BYTE PTR ds:[rsi]
  443f0f:	pop    rdi
  443f10:	jae    0x443f75
  443f12:	push   0x27616d65
  443f17:	or     al,BYTE PTR [rax]
  443f19:	add    BYTE PTR [rax],al
  443f1b:	add    BYTE PTR [rax],al
  443f1d:	add    BYTE PTR [rax],al
  443f1f:	add    BYTE PTR [rax+0x67],dh
  443f22:	pop    rdi
  443f23:	movsxd esp,DWORD PTR [rcx+0x74]
  443f26:	(bad)  
  443f27:	ins    BYTE PTR es:[rdi],dx
  443f28:	outs   dx,DWORD PTR ds:[rsi]
  443f29:	addr32 cs jo 0x443f94
  443f2d:	pop    rdi
  443f2e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  443f31:	jbe    0x443f98
  443f33:	jb     0x443fa8
  443f35:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f73695f
  443f3c:	jbe    0x443fa7
  443f3e:	jae    0x443fa9
  443f40:	(bad)  
  443f41:	ins    BYTE PTR es:[rdi],dx
  443f42:	sub    BYTE PTR gs:[rbx+0x2e],ah
  443f46:	outs   dx,DWORD PTR ds:[rsi]
  443f47:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x6f632e63
  443f4f:	outs   dx,BYTE PTR ds:[rsi]
  443f50:	outs   dx,BYTE PTR ds:[rsi]
  443f51:	(bad)  
  443f52:	ins    DWORD PTR es:[rdi],dx
  443f53:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  443f58:	je     0x443f7a
  443f5a:	outs   dx,DWORD PTR ds:[rsi]
  443f5b:	data16 and BYTE PTR [rbx+0x6f],ah
  443f5f:	outs   dx,BYTE PTR ds:[rsi]
  443f60:	jbe    0x443fc7
  443f62:	jb     0x443fd7
  443f64:	imul   ebp,DWORD PTR [rdi+0x6e],0x76450073
  443f6b:	outs   dx,BYTE PTR gs:[rsi]
  443f6d:	je     0x443f6f
  443f6f:	add    BYTE PTR [rbx+0x45],dl
  443f72:	rex.WR
  443f73:	rex.RB
  443f74:	rex.XB push r12
  443f76:	and    BYTE PTR [rbp+0x76],ah
  443f79:	je     0x443fe9
  443f7b:	(bad)  
  443f7c:	ins    DWORD PTR es:[rdi],dx
  443f7d:	and    BYTE PTR gs:[rcx+0x73],ah
  443f81:	and    BYTE PTR [rdx],ah
  443f83:	and    eax,0x202c2273
  443f88:	gs jbe 0x443fff
  443f8b:	gs jbe 0x443ff3
  443f8e:	outs   dx,BYTE PTR ds:[rsi]
  443f8f:	je     0x443fb1
  443f91:	(bad)  
  443f92:	jae    0x443fb4
  443f94:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x2070620d
  443f9a:	jo     0x444003
  443f9c:	pop    rdi
  443f9d:	movsxd esp,DWORD PTR [rcx+0x74]
  443fa0:	(bad)  
  443fa1:	ins    BYTE PTR es:[rdi],dx
  443fa2:	outs   dx,DWORD PTR ds:[rsi]
  443fa3:	addr32 cs jo 0x44400e
  443fa7:	pop    rdi
  443fa8:	addr32 gs je 0x44400b
  443fac:	jne    0x444021
  443fae:	gs jb  0x444013
  443fb1:	jns    0x44401c
  443fb3:	sub    BYTE PTR fs:[rbp+0x2e],ah
  443fb7:	gs jbe 0x44402e
  443fba:	outs   dx,DWORD PTR ds:[rsi]
  443fbb:	ja     0x44402b
  443fbd:	gs jb  0x443fe9
  443fc0:	and    BYTE PTR [rcx+0x73],ah
  443fc3:	and    BYTE PTR [rdx],ah
  443fc5:	and    eax,0xa2c2273
  443fca:	and    BYTE PTR [rbx+0x61],ah
  443fcd:	jae    0x444034
  443fcf:	and    BYTE PTR [rbp+0x76],ah
  443fd2:	je     0x444039
  443fd4:	outs   dx,BYTE PTR ds:[rsi]
  443fd5:	(bad)  
  443fd6:	(bad)  
  443fd7:	ins    BYTE PTR es:[rdi],dx
  443fd8:	gs and BYTE PTR fs:[rdi+0x68],dh
  443fdd:	outs   dx,BYTE PTR gs:[rsi]
  443fdf:	and    BYTE PTR [rdi],ah
  443fe1:	rex.WRXB (bad) 
  443fe3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  443fe7:	outs   dx,BYTE PTR ds:[rsi]
  443fe8:	and    BYTE PTR [rdi],ah
  443fea:	and    eax,0x20202773
  443fef:	ja     0x444059
  443ff1:	outs   dx,BYTE PTR gs:[rsi]
  443ff3:	and    BYTE PTR [rdi],ah
  443ff5:	push   rdx
  443ff6:	(bad)  
  443ff7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  443ffb:	outs   dx,BYTE PTR ds:[rsi]
  443ffc:	and    BYTE PTR [rdi],ah
  443ffe:	and    eax,0x20202773
  444003:	ja     0x44406d
  444005:	outs   dx,BYTE PTR gs:[rsi]
  444007:	and    BYTE PTR [rdi],ah
  444009:	rex.B (bad) 
  44400b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  44400f:	outs   dx,BYTE PTR ds:[rsi]
  444010:	and    BYTE PTR [rdi],ah
  444012:	and    eax,0x20202773
  444017:	ja     0x444081
  444019:	outs   dx,BYTE PTR gs:[rsi]
  44401b:	and    BYTE PTR [rdi],ah
  44401d:	rex.R (bad) 
  44401f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  444023:	outs   dx,BYTE PTR ds:[rsi]
  444024:	and    BYTE PTR [rdi],ah
  444026:	and    eax,0x65202773
  44402b:	outs   dx,BYTE PTR ds:[rsi]
  44402c:	and    BYTE PTR fs:[rcx+0x73],ah
  444030:	and    BYTE PTR [rdx],ah
  444032:	and    eax,0xa2c2273
  444037:	and    BYTE PTR [rbp+0x2e],ah
  44403a:	gs jbe 0x4440b1
  44403d:	outs   dx,WORD PTR ds:[rsi]
  44403f:	imul   esp,DWORD PTR [rdx+rdi*1+0x3a],0x635f6770
  444047:	(bad)  
  444048:	je     0x4440ab
  44404a:	ins    BYTE PTR es:[rdi],dx
  44404b:	outs   dx,DWORD PTR ds:[rsi]
  44404c:	addr32 cs jb 0x4440b5
  444050:	addr32 jo 0x4440c5
  444053:	outs   dx,DWORD PTR ds:[rsi]
  444054:	movsxd esp,DWORD PTR [rax]
  444056:	(bad)  
  444057:	jae    0x444079
  444059:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x207062d2
  44405f:	jo     0x4440c8
  444061:	pop    rdi
  444062:	movsxd esp,DWORD PTR [rcx+0x74]
  444065:	(bad)  
  444066:	ins    BYTE PTR es:[rdi],dx
  444067:	outs   dx,DWORD PTR ds:[rsi]
  444068:	addr32 cs (bad) 
  44406b:	jb     0x4440df
  44406d:	(bad)  
  44406e:	jns    0x4440cf
  444070:	je     0x4440e1
  444072:	pop    rdi
  444073:	jae    0x4440e9
  444075:	jb     0x4440e0
  444077:	outs   dx,BYTE PTR ds:[rsi]
  444078:	sub    BYTE PTR [ecx+0x72],ah
  44407c:	jb     0x4440df
  44407e:	jns    0x4440a8
  444080:	jae    0x4440e7
  444082:	ins    BYTE PTR es:[rdi],dx
  444083:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x78]
  444088:	and    BYTE PTR [rsi+0x72],ah
  44408b:	outs   dx,DWORD PTR ds:[rsi]
  44408c:	ins    DWORD PTR es:[rdi],dx
  44408d:	and    BYTE PTR [rax+0x67],dh
  444090:	pop    rdi
  444091:	movsxd esp,DWORD PTR [rcx+0x74]
  444094:	(bad)  
  444095:	ins    BYTE PTR es:[rdi],dx
  444096:	outs   dx,DWORD PTR ds:[rsi]
  444097:	addr32 cs jne 0x444109
  44409b:	outs   dx,BYTE PTR ds:[rsi]
  44409c:	gs jae 0x444113
  44409f:	sub    BYTE PTR [rbp+0x76],ah
  4440a2:	je     0x444118
  4440a4:	(bad)  
  4440a5:	addr32 jae 0x4440d1
  4440a8:	and    BYTE PTR [rcx+0x73],ah
  4440ab:	and    BYTE PTR [rax+rbp*1+0x78],dh
  4440af:	sub    DWORD PTR [rcx],ebp
  4440b1:	sub    al,0x20
  4440b3:	(bad)  
  4440b4:	sub    al,0x20
  4440b6:	(bad)  
  4440b7:	sub    DWORD PTR [rax],esp
  4440b9:	(bad)  
  4440ba:	jae    0x4440dc
  4440bc:	and    ah,BYTE PTR [rip+0x54002273]        # 0x54446335
  4440c2:	(bad)  
  4440c3:	addr32 jae 0x4440c6
  4440c6:	push   rax
  4440c7:	jb     0x444138
  4440c9:	movsxd esp,DWORD PTR [rbp+0x64]
  4440cc:	jne    0x444140
  4440ce:	add    BYTE PTR gs:[rbp+0x6e],al
  4440d2:	(bad)  
  4440d3:	(bad)  
  4440d4:	ins    BYTE PTR es:[rdi],dx
  4440d5:	gs add BYTE PTR fs:[rcx+rbp*2+0x73],ah
  4440db:	(bad)  
  4440dc:	(bad)  
  4440dd:	ins    BYTE PTR es:[rdi],dx
  4440de:	gs add BYTE PTR fs:[rcx+0x6c],ah
  4440e3:	ja     0x444146
  4440e5:	jns    0x44415a
  4440e7:	add    BYTE PTR [rdx+0x65],dh
  4440ea:	jo     0x444158
  4440ec:	imul   esp,DWORD PTR [rbx+0x61],0x616e6500
  4440f3:	(bad)  
  4440f4:	ins    BYTE PTR es:[rdi],dx
  4440f5:	gs add BYTE PTR fs:[rdx+rcx*1],ch
  4440fa:	jo     0x444163
  4440fc:	pop    rdi
  4440fd:	movsxd esp,DWORD PTR [rcx+0x74]
  444100:	(bad)  
  444101:	ins    BYTE PTR es:[rdi],dx
  444102:	outs   dx,DWORD PTR ds:[rsi]
  444103:	outs   dx,DWORD PTR cs:[esi]
  444106:	(bad)  
  444107:	push   0x5f
  444109:	fs gs jae 0x444170
  44410d:	jb     0x444178
  44410f:	jo     0x444185
  444111:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6528
  444118:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  444120:	gs jbe 0x444188
  444123:	outs   dx,BYTE PTR ds:[rsi]
  444124:	je     0x444185
  444126:	je     0x44419a
  444128:	imul   esp,DWORD PTR [rdi+0x67],0x29277265
  44412f:	and    BYTE PTR [rcx+0x73],ah
  444132:	and    BYTE PTR [rdx],ah
  444134:	and    eax,0xa002273
  444139:	rex.RX push rdx
  44413b:	rex.WRXB
  44413c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444140:	pop    rdi
  444141:	movsxd esp,DWORD PTR [rcx+0x74]
  444144:	(bad)  
  444145:	ins    BYTE PTR es:[rdi],dx
  444146:	outs   dx,DWORD PTR ds:[rsi]
  444147:	addr32 cs jo 0x4441b2
  44414b:	pop    rdi
  44414c:	gs jbe 0x4441b4
  44414f:	outs   dx,BYTE PTR ds:[rsi]
  444150:	je     0x4441b1
  444152:	je     0x4441c6
  444154:	imul   esp,DWORD PTR [rdi+0x67],0x65207265
  44415b:	and    BYTE PTR [rax],al
  44415d:	gs jbe 0x4441d4
  444160:	outs   dx,BYTE PTR ds:[rsi]
  444161:	(bad)  
  444162:	ins    DWORD PTR es:[rdi],dx
  444163:	add    BYTE PTR gs:[rdi+0x52],cl
  444167:	rex.R
  444168:	rex.RB push r10
  44416a:	and    BYTE PTR [rdx+0x59],al
  44416d:	and    BYTE PTR [rcx],dh
  44416f:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  444173:	je     0x444195
  444175:	outs   dx,DWORD PTR ds:[rsi]
  444176:	data16 and BYTE PTR [rbp+0x76],ah
  44417a:	outs   dx,BYTE PTR gs:[rsi]
  44417c:	je     0x44419e
  44417e:	je     0x4441f2
  444180:	imul   esp,DWORD PTR [rdi+0x67],0x737265
  444187:	push   rsp
  444188:	(bad)  
  444189:	jb     0x4441f2
  44418b:	gs je  0x4441ae
  44418e:	je     0x444209
  444190:	jo     0x4441f7
  444192:	add    BYTE PTR [rbx+0x6f],dl
  444195:	jne    0x444209
  444197:	movsxd esp,DWORD PTR [rbp+0x20]
  44419a:	je     0x444215
  44419c:	jo     0x444203
  44419e:	add    BYTE PTR [rax],al
  4441a0:	push   rbx
  4441a1:	rex.RB
  4441a2:	rex.WR
  4441a3:	rex.RB
  4441a4:	rex.XB push r12
  4441a6:	and    BYTE PTR [rax+0x67],dh
  4441a9:	pop    rdi
  4441aa:	movsxd esp,DWORD PTR [rcx+0x74]
  4441ad:	(bad)  
  4441ae:	ins    BYTE PTR es:[rdi],dx
  4441af:	outs   dx,DWORD PTR ds:[rsi]
  4441b0:	outs   dx,WORD PTR cs:[esi]
  4441b4:	jb     0x444223
  4441b6:	(bad)  
  4441b7:	je     0x444218
  4441b9:	je     0x444234
  4441bb:	jo     0x444222
  4441bd:	sub    BYTE PTR [rbx+0x61],ah
  4441c0:	jae    0x444236
  4441c2:	jae    0x444233
  4441c4:	jne    0x444238
  4441c6:	movsxd esp,DWORD PTR [rbp+0x2c]
  4441c9:	and    BYTE PTR [rsi+0x55],cl
  4441cc:	rex.WR
  4441cd:	sub    QWORD PTR [rax],r12
  4441d0:	push   r11
  4441d2:	and    BYTE PTR [rdx],ah
  4441d4:	and    eax,0xa2c2273
  4441d9:	and    BYTE PTR [rax],ah
  4441db:	and    BYTE PTR [rax],ah
  4441dd:	and    BYTE PTR [rax],ah
  4441df:	and    BYTE PTR [rax+0x67],dh
  4441e2:	pop    rdi
  4441e3:	movsxd esp,DWORD PTR [rcx+0x74]
  4441e6:	(bad)  
  4441e7:	ins    BYTE PTR es:[rdi],dx
  4441e8:	outs   dx,DWORD PTR ds:[rsi]
  4441e9:	outs   dx,WORD PTR cs:[esi]
  4441ed:	jb     0x44425c
  4441ef:	(bad)  
  4441f0:	je     0x444251
  4441f2:	je     0x44426d
  4441f4:	jo     0x44425b
  4441f6:	sub    BYTE PTR [rbx+0x61],ah
  4441f9:	jae    0x44426f
  4441fb:	je     0x44425e
  4441fd:	jb     0x444266
  4441ff:	gs je  0x44422e
  444202:	and    BYTE PTR [rsi+0x55],cl
  444205:	rex.WR
  444206:	sub    QWORD PTR [rax],r12
  444209:	push   r11
  44420b:	and    BYTE PTR [rdx],ah
  44420d:	and    eax,0xa2c2273
  444212:	and    BYTE PTR [rax],ah
  444214:	and    BYTE PTR [rax],ah
  444216:	and    BYTE PTR [rax],ah
  444218:	and    BYTE PTR [rbx+0x41],al
  44421b:	push   rbx
  44421c:	and    BYTE PTR [r15+0x48],r10b
  444220:	rex.RB
  444221:	rex.WRX and BYTE PTR [rbx+0x61],r12b
  444225:	jae    0x44429b
  444227:	data16 jne 0x444298
  44422a:	movsxd esp,DWORD PTR [rax]
  44422c:	cmp    eax,0x54203020
  444231:	rex.W
  444232:	rex.RB
  444233:	rex.WRX and BYTE PTR [rdi],r12b
  444236:	sub    BYTE PTR [rdx+0x69],ah
  444239:	outs   dx,BYTE PTR ds:[rsi]
  44423a:	(bad)  
  44423b:	jb     0x4442b6
  44423d:	and    BYTE PTR [rbx+0x6f],ah
  444240:	gs jb  0x4442a6
  444243:	imul   esp,DWORD PTR [rdx+0x6c],0xa272965
  44424a:	and    BYTE PTR [rax],ah
  44424c:	and    BYTE PTR [rax],ah
  44424e:	and    BYTE PTR [rax],ah
  444250:	and    BYTE PTR [rax],ah
  444252:	and    BYTE PTR [rax],ah
  444254:	and    BYTE PTR [rax],ah
  444256:	rex.RB
  444257:	rex.WR push rbx
  444259:	and    BYTE PTR [r8+0x2e],r14b
  44425d:	jo     0x4442d1
  44425f:	outs   dx,DWORD PTR ds:[rsi]
  444260:	outs   dx,BYTE PTR ds:[rsi]
  444261:	(bad)  
  444262:	ins    DWORD PTR es:[rdi],dx
  444263:	or     ah,BYTE PTR gs:[rax]
  444266:	and    BYTE PTR [rax],ah
  444268:	and    BYTE PTR [rax],ah
  44426a:	and    BYTE PTR [rax],ah
  44426c:	rex.RB
  44426d:	rex.WRX
  44426e:	and    BYTE PTR [rcx+0x73],r12b
  444272:	and    BYTE PTR [rdx],ah
  444274:	and    eax,0xa2c2273
  444279:	and    BYTE PTR [rax],ah
  44427b:	and    BYTE PTR [rax],ah
  44427d:	and    BYTE PTR [rax],ah
  44427f:	and    BYTE PTR [rbx+0x41],al
  444282:	push   rbx
  444283:	and    BYTE PTR [r15+0x48],r10b
  444287:	rex.RB
  444288:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  44428c:	movsxd esp,DWORD PTR [rcx+0x73]
  44428f:	je     0x4442f4
  444291:	outs   dx,DWORD PTR ds:[rsi]
  444292:	outs   dx,BYTE PTR ds:[rsi]
  444293:	je     0x4442fa
  444295:	js     0x44430b
  444297:	and    BYTE PTR [rip+0x27652720],bh        # 0x27a969bd
  44429d:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4442a1:	rex.WRX and BYTE PTR [rdi],r12b
  4442a4:	and    eax,0x200a2773
  4442a9:	and    BYTE PTR [rax],ah
  4442ab:	and    BYTE PTR [rax],ah
  4442ad:	and    BYTE PTR [rax],ah
  4442af:	and    BYTE PTR [rax],ah
  4442b1:	and    BYTE PTR [rax],ah
  4442b3:	and    BYTE PTR [rdi+0x48],dl
  4442b6:	rex.RB
  4442b7:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  4442bb:	movsxd esp,DWORD PTR [rcx+0x73]
  4442be:	je     0x444323
  4442c0:	outs   dx,DWORD PTR ds:[rsi]
  4442c1:	outs   dx,BYTE PTR ds:[rsi]
  4442c2:	je     0x444329
  4442c4:	js     0x44433a
  4442c6:	and    BYTE PTR [rip+0x27612720],bh        # 0x27a569ec
  4442cc:	and    BYTE PTR [rax+rcx*2+0x45],dl
  4442d0:	rex.WRX and BYTE PTR [rdi],r12b
  4442d3:	and    eax,0x200a2773
  4442d8:	and    BYTE PTR [rax],ah
  4442da:	and    BYTE PTR [rax],ah
  4442dc:	and    BYTE PTR [rax],ah
  4442de:	and    BYTE PTR [rax],ah
  4442e0:	and    BYTE PTR [rax],ah
  4442e2:	and    BYTE PTR [rbp+0x4c],al
  4442e5:	push   rbx
  4442e6:	and    BYTE PTR [r15],r12b
  4442e9:	and    eax,0x200a2773
  4442ee:	and    BYTE PTR [rax],ah
  4442f0:	and    BYTE PTR [rax],ah
  4442f2:	and    BYTE PTR [rax],ah
  4442f4:	rex.RB
  4442f5:	rex.WRX
  4442f6:	and    BYTE PTR [rcx+0x73],r12b
  4442fa:	and    BYTE PTR [rdx],ah
  4442fc:	and    eax,0x49002273
  444301:	ins    DWORD PTR es:[rdi],dx
  444302:	jo     0x444370
  444304:	imul   esp,DWORD PTR [rbx+0x69],0x69003f74
  44430b:	outs   dx,BYTE PTR ds:[rsi]
  44430c:	and    BYTE PTR [rcx+0x73],ah
  44430f:	jae    0x44437a
  444311:	outs   dx,BYTE PTR ds:[esi]
  444313:	ins    DWORD PTR es:[rdi],dx
  444314:	outs   dx,BYTE PTR gs:[rsi]
  444316:	je     0x444318
  444318:	sub    al,0xa
  44431a:	and    BYTE PTR [rax],ah
  44431c:	and    BYTE PTR [rax],ah
  44431e:	and    BYTE PTR [rax],ah
  444320:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  444324:	gs jae 0x44438a
  444327:	jb     0x444392
  444329:	jo     0x44439f
  44432b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  444332:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4e65ab
  444338:	rex.RX push rdx
  44433a:	rex.WRXB
  44433b:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44433f:	pop    rdi
  444340:	movsxd esp,DWORD PTR [rcx+0x74]
  444343:	(bad)  
  444344:	ins    BYTE PTR es:[rdi],dx
  444345:	outs   dx,DWORD PTR ds:[rsi]
  444346:	addr32 cs jo 0x4443b1
  44434a:	pop    rdi
  44434b:	movsxd esp,DWORD PTR [rcx+0x73]
  44434e:	je     0x444370
  444350:	movsxd esp,DWORD PTR [rax]
  444352:	rex.WR
  444353:	rex.RB
  444354:	rex.RX push rsp
  444356:	and    BYTE PTR [rdx+0x4f],cl
  444359:	rex.WB
  44435a:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44435e:	pop    rdi
  44435f:	movsxd esp,DWORD PTR [rcx+0x74]
  444362:	(bad)  
  444363:	ins    BYTE PTR es:[rdi],dx
  444364:	outs   dx,DWORD PTR ds:[rsi]
  444365:	addr32 cs jo 0x4443d0
  444369:	pop    rdi
  44436a:	jo     0x4443de
  44436c:	outs   dx,DWORD PTR ds:[rsi]
  44436d:	movsxd esp,DWORD PTR [rax]
  44436f:	jo     0x44437b
  444371:	and    BYTE PTR [rax],ah
  444373:	and    BYTE PTR [rax],ah
  444375:	and    BYTE PTR [rdi+0x4e],cl
  444378:	and    BYTE PTR [rbx+0x2e],ah
  44437b:	movsxd esp,DWORD PTR [rcx+0x73]
  44437e:	je     0x4443e6
  444380:	jne    0x4443f0
  444382:	movsxd esp,DWORD PTR [rax]
  444384:	cmp    eax,0x6f2e7020
  444389:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  444391:	rex.WR
  444392:	rex.RB
  444393:	rex.RX push rsp
  444395:	and    BYTE PTR [rdx+0x4f],cl
  444398:	rex.WB
  444399:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44439d:	pop    rdi
  44439e:	movsxd esp,DWORD PTR [rcx+0x74]
  4443a1:	(bad)  
  4443a2:	ins    BYTE PTR es:[rdi],dx
  4443a3:	outs   dx,DWORD PTR ds:[rsi]
  4443a4:	addr32 cs jo 0x44440f
  4443a8:	pop    rdi
  4443a9:	je     0x444424
  4443ab:	jo     0x444412
  4443ad:	and    BYTE PTR [rbx+rsi*2+0xa],dh
  4443b1:	and    BYTE PTR [rax],ah
  4443b3:	and    BYTE PTR [rax],ah
  4443b5:	and    BYTE PTR [rdi+0x4e],cl
  4443b8:	and    BYTE PTR [rbx+0x2e],ah
  4443bb:	movsxd esp,DWORD PTR [rcx+0x73]
  4443be:	je     0x444433
  4443c0:	outs   dx,DWORD PTR ds:[rsi]
  4443c1:	jne    0x444435
  4443c3:	movsxd esp,DWORD PTR [rbp+0x20]
  4443c6:	cmp    eax,0x2e737420
  4443cb:	outs   dx,DWORD PTR ds:[rsi]
  4443cc:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  4443d4:	rex.WR
  4443d5:	rex.RB
  4443d6:	rex.RX push rsp
  4443d8:	and    BYTE PTR [rdx+0x4f],cl
  4443db:	rex.WB
  4443dc:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4443e0:	pop    rdi
  4443e1:	movsxd esp,DWORD PTR [rcx+0x74]
  4443e4:	(bad)  
  4443e5:	ins    BYTE PTR es:[rdi],dx
  4443e6:	outs   dx,DWORD PTR ds:[rsi]
  4443e7:	addr32 cs jo 0x444452
  4443eb:	pop    rdi
  4443ec:	outs   dx,BYTE PTR ds:[rsi]
  4443ed:	(bad)  
  4443ee:	ins    DWORD PTR es:[rdi],dx
  4443ef:	gs jae 0x444462
  4443f2:	(bad)  
  4443f3:	movsxd esp,DWORD PTR [rbp+0x20]
  4443f6:	outs   dx,BYTE PTR ds:[rsi]
  4443f7:	jae    0x444403
  4443f9:	and    BYTE PTR [rax],ah
  4443fb:	and    BYTE PTR [rax],ah
  4443fd:	and    BYTE PTR [rdi+0x4e],cl
  444400:	and    BYTE PTR [rsi+0x73],ch
  444403:	outs   dx,DWORD PTR cs:[rsi]
  444405:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e737420
  44440d:	je     0x444488
  44440f:	jo     0x44447f
  444411:	(bad)  
  444412:	ins    DWORD PTR es:[rdi],dx
  444413:	gs jae 0x444486
  444416:	(bad)  
  444417:	movsxd esp,DWORD PTR [rbp+0xa]
  44441a:	and    BYTE PTR [rax],ah
  44441c:	and    BYTE PTR [rax],ah
  44441e:	and    BYTE PTR [rbp+rax*2+0x46],cl
  444422:	push   rsp
  444423:	and    BYTE PTR [rdx+0x4f],cl
  444426:	rex.WB
  444427:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44442b:	pop    rdi
  44442c:	movsxd esp,DWORD PTR [rcx+0x74]
  44442f:	(bad)  
  444430:	ins    BYTE PTR es:[rdi],dx
  444431:	outs   dx,DWORD PTR ds:[rsi]
  444432:	addr32 cs jo 0x44449d
  444436:	pop    rdi
  444437:	je     0x4444b2
  444439:	jo     0x4444a0
  44443b:	and    BYTE PTR [rsp+rsi*2+0xa],dh
  44443f:	and    BYTE PTR [rax],ah
  444441:	and    BYTE PTR [rax],ah
  444443:	and    BYTE PTR [rdi+0x4e],cl
  444446:	and    BYTE PTR [rbx+0x2e],ah
  444449:	movsxd esp,DWORD PTR [rcx+0x73]
  44444c:	je     0x4444c2
  44444e:	(bad)  
  44444f:	jb     0x4444b8
  444451:	gs je  0x444474
  444454:	cmp    eax,0x2e747420
  444459:	outs   dx,DWORD PTR ds:[rsi]
  44445a:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  444462:	rex.WR
  444463:	rex.RB
  444464:	rex.RX push rsp
  444466:	and    BYTE PTR [rdx+0x4f],cl
  444469:	rex.WB
  44446a:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44446e:	pop    rdi
  44446f:	movsxd esp,DWORD PTR [rcx+0x74]
  444472:	(bad)  
  444473:	ins    BYTE PTR es:[rdi],dx
  444474:	outs   dx,DWORD PTR ds:[rsi]
  444475:	addr32 cs jo 0x4444e0
  444479:	pop    rdi
  44447a:	outs   dx,BYTE PTR ds:[rsi]
  44447b:	(bad)  
  44447c:	ins    DWORD PTR es:[rdi],dx
  44447d:	gs jae 0x4444f0
  444480:	(bad)  
  444481:	movsxd esp,DWORD PTR [rbp+0x20]
  444484:	outs   dx,BYTE PTR ds:[rsi]
  444485:	je     0x444491
  444487:	and    BYTE PTR [rax],ah
  444489:	and    BYTE PTR [rax],ah
  44448b:	and    BYTE PTR [rdi+0x4e],cl
  44448e:	and    BYTE PTR [rsi+0x74],ch
  444491:	outs   dx,DWORD PTR cs:[rsi]
  444493:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e747420
  44449b:	je     0x444516
  44449d:	jo     0x44450d
  44449f:	(bad)  
  4444a0:	ins    DWORD PTR es:[rdi],dx
  4444a1:	gs jae 0x444514
  4444a4:	(bad)  
  4444a5:	movsxd esp,DWORD PTR [rbp+0xa]
	...
  4444b0:	and    BYTE PTR [rax],ah
  4444b2:	and    BYTE PTR [rax],ah
  4444b4:	and    BYTE PTR [rbp+rax*2+0x46],cl
  4444b8:	push   rsp
  4444b9:	and    BYTE PTR [rdx+0x4f],cl
  4444bc:	rex.WB
  4444bd:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4444c1:	pop    rdi
  4444c2:	movsxd esp,DWORD PTR [rcx+0x74]
  4444c5:	(bad)  
  4444c6:	ins    BYTE PTR es:[rdi],dx
  4444c7:	outs   dx,DWORD PTR ds:[rsi]
  4444c8:	addr32 cs jo 0x444533
  4444cc:	pop    rdi
  4444cd:	fs gs jae 0x444534
  4444d1:	jb     0x44453c
  4444d3:	jo     0x444549
  4444d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6420
  4444dc:	and    BYTE PTR [rax],ah
  4444de:	and    BYTE PTR [rax],ah
  4444e0:	rex.WRXB
  4444e1:	rex.WRX and BYTE PTR [rsi+r13*1+0x63],r12b
  4444e6:	ins    BYTE PTR es:[rdi],dx
  4444e7:	(bad)  
  4444e8:	jae    0x44455d
  4444ea:	outs   dx,DWORD PTR ds:[rsi]
  4444eb:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e6320
  4444f3:	(bad)  
  4444f4:	(bad)  
  4444f5:	ins    BYTE PTR es:[rdi],dx
  4444f6:	outs   dx,DWORD PTR gs:[rsi]
  4444f8:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  444500:	outs   dx,DWORD PTR cs:[rsi]
  444502:	(bad)  
  444503:	push   0x6f
  444505:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  44450d:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  444515:	outs   dx,DWORD PTR cs:[rsi]
  444517:	(bad)  
  444518:	push   0x73
  44451a:	jne    0x44457e
  44451c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  444524:	push   rdi
  444525:	rex.W
  444526:	rex.RB push r10
  444528:	and    BYTE PTR [r8],r13b
  44452b:	and    BYTE PTR [rax],ch
  44452d:	je     0x4445a1
  44452f:	jne    0x444596
  444531:	add    BYTE PTR [rax],al
  444533:	add    BYTE PTR [rax],al
  444535:	add    BYTE PTR [rax],al
  444537:	add    BYTE PTR [rax+0x67],dh
  44453a:	pop    rdi
  44453b:	movsxd esp,DWORD PTR [rcx+0x74]
  44453e:	(bad)  
  44453f:	ins    BYTE PTR es:[rdi],dx
  444540:	outs   dx,DWORD PTR ds:[rsi]
  444541:	addr32 cs jo 0x4445ac
  444545:	pop    rdi
  444546:	je     0x4445c1
  444548:	jo     0x4445af
  44454a:	pop    rdi
  44454b:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  444552:	(bad)  
  444553:	ins    BYTE PTR es:[rdi],dx
  444554:	sub    BYTE PTR gs:[rbx+rsi*2+0x2e],dh
  444559:	outs   dx,DWORD PTR ds:[rsi]
  44455a:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x67700000
  444562:	pop    rdi
  444563:	movsxd esp,DWORD PTR [rcx+0x74]
  444566:	(bad)  
  444567:	ins    BYTE PTR es:[rdi],dx
  444568:	outs   dx,DWORD PTR ds:[rsi]
  444569:	outs   dx,WORD PTR cs:[esi]
  44456d:	jb     0x4445dc
  44456f:	(bad)  
  444570:	je     0x4445d1
  444572:	je     0x4445ed
  444574:	jo     0x4445db
  444576:	sub    BYTE PTR [rbx+rsi*2+0x2e],dh
  44457a:	outs   dx,DWORD PTR ds:[rsi]
  44457b:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x4c4c554e
  444583:	sub    DWORD PTR [rax],eax
  444585:	je     0x4445fa
  444587:	cs je  0x444603
  44458a:	jo     0x4445fa
  44458c:	(bad)  
  44458d:	ins    DWORD PTR es:[rdi],dx
  44458e:	add    BYTE PTR gs:[rsi+0x73],ch
  444592:	outs   dx,BYTE PTR cs:[rsi]
  444594:	jae    0x444606
  444596:	outs   dx,BYTE PTR ds:[rsi]
  444597:	(bad)  
  444598:	ins    DWORD PTR es:[rdi],dx
  444599:	add    BYTE PTR gs:[rcx],ch
  44459c:	and    BYTE PTR [rdi+0x52],cl
  44459f:	and    BYTE PTR [rax],ch
  4445a1:	je     0x444615
  4445a3:	jne    0x44460a
  4445a5:	add    BYTE PTR [rax],al
  4445a7:	add    BYTE PTR [rax+0x67],dh
  4445aa:	pop    rdi
  4445ab:	movsxd esp,DWORD PTR [rcx+0x74]
  4445ae:	(bad)  
  4445af:	ins    BYTE PTR es:[rdi],dx
  4445b0:	outs   dx,DWORD PTR ds:[rsi]
  4445b1:	addr32 cs jo 0x44461c
  4445b5:	pop    rdi
  4445b6:	je     0x444631
  4445b8:	jo     0x44461f
  4445ba:	pop    rdi
  4445bb:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  4445c2:	(bad)  
  4445c3:	ins    BYTE PTR es:[rdi],dx
  4445c4:	sub    BYTE PTR gs:[rsp+rsi*2+0x2e],dh
  4445c9:	outs   dx,DWORD PTR ds:[rsi]
  4445ca:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x67700000
  4445d2:	pop    rdi
  4445d3:	movsxd esp,DWORD PTR [rcx+0x74]
  4445d6:	(bad)  
  4445d7:	ins    BYTE PTR es:[rdi],dx
  4445d8:	outs   dx,DWORD PTR ds:[rsi]
  4445d9:	outs   dx,WORD PTR cs:[esi]
  4445dd:	jb     0x44464c
  4445df:	(bad)  
  4445e0:	je     0x444641
  4445e2:	je     0x44465d
  4445e4:	jo     0x44464b
  4445e6:	sub    BYTE PTR [rsp+rsi*2+0x2e],dh
  4445ea:	outs   dx,DWORD PTR ds:[rsi]
  4445eb:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x4c4c554e
  4445f3:	sub    DWORD PTR [rax],eax
  4445f5:	je     0x44466b
  4445f7:	cs je  0x444673
  4445fa:	jo     0x44466a
  4445fc:	(bad)  
  4445fd:	ins    DWORD PTR es:[rdi],dx
  4445fe:	add    BYTE PTR gs:[rsi+0x74],ch
  444602:	outs   dx,BYTE PTR cs:[rsi]
  444604:	jae    0x444676
  444606:	outs   dx,BYTE PTR ds:[rsi]
  444607:	(bad)  
  444608:	ins    DWORD PTR es:[rdi],dx
  444609:	add    BYTE PTR gs:[rcx],ch
  44460c:	and    BYTE PTR [rcx],ch
  44460e:	or     cl,BYTE PTR [rdi+0x52]
  444611:	rex.R
  444612:	rex.RB push r10
  444614:	and    BYTE PTR [rdx+0x59],al
  444617:	and    BYTE PTR [rcx],dh
  444619:	sub    al,0x20
  44461b:	xor    bh,BYTE PTR [rbx]
  44461d:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  444621:	je     0x444643
  444623:	outs   dx,DWORD PTR ds:[rsi]
  444624:	data16 and BYTE PTR [rbx+0x61],ah
  444628:	jae    0x44469e
  44462a:	jae    0x44462c
  44462c:	add    BYTE PTR [rax],al
  44462e:	add    BYTE PTR [rax],al
  444630:	push   rsp
  444631:	push   0x65732065
  444636:	jb     0x4446ae
  444638:	gs jb  0x44465b
  44463b:	sub    BYTE PTR [rsi+0x65],dh
  44463e:	jb     0x4446b3
  444640:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  444647:	and    eax,0x64202964
  44464c:	outs   dx,DWORD PTR ds:[rsi]
  44464d:	gs jae 0x444670
  444650:	outs   dx,BYTE PTR ds:[rsi]
  444651:	outs   dx,DWORD PTR ds:[rsi]
  444652:	je     0x444674
  444654:	jae    0x4446cb
  444656:	jo     0x4446c8
  444658:	outs   dx,DWORD PTR ds:[rsi]
  444659:	jb     0x4446cf
  44465b:	and    BYTE PTR [rbx+0x6f],ah
  44465e:	ins    BYTE PTR es:[rdi],dx
  44465f:	ins    BYTE PTR es:[rdi],dx
  444660:	(bad)  
  444661:	je     0x4446cc
  444663:	outs   dx,DWORD PTR ds:[rsi]
  444664:	outs   dx,BYTE PTR ds:[rsi]
  444665:	jae    0x444695
  444667:	or     al,BYTE PTR [rax]
  444669:	add    BYTE PTR [rax],al
  44466b:	add    BYTE PTR [rax],al
  44466d:	add    BYTE PTR [rax],al
  44466f:	add    BYTE PTR [rbx+0x45],dl
  444672:	rex.WR
  444673:	rex.RB
  444674:	rex.XB push r12
  444676:	and    BYTE PTR [rsi+0x2e],ch
  444679:	outs   dx,BYTE PTR ds:[rsi]
  44467a:	jae    0x4446ec
  44467c:	outs   dx,BYTE PTR ds:[rsi]
  44467d:	(bad)  
  44467e:	ins    DWORD PTR es:[rdi],dx
  44467f:	and    BYTE PTR gs:[rcx+0x53],al
  444683:	and    BYTE PTR [rdx],ah
  444685:	and    eax,0xa2c2273
  44468a:	and    BYTE PTR [rax],ah
  44468c:	and    BYTE PTR [rax],ah
  44468e:	and    BYTE PTR [rax],ah
  444690:	and    BYTE PTR [rbx+0x2e],ah
  444693:	movsxd ebp,DWORD PTR [rdi+0x6c]
  444696:	ins    BYTE PTR es:[rdi],dx
  444697:	outs   dx,BYTE PTR ds:[rsi]
  444698:	(bad)  
  444699:	ins    DWORD PTR es:[rdi],dx
  44469a:	and    BYTE PTR gs:[rcx+0x53],al
  44469e:	and    BYTE PTR [rdx],ah
  4446a0:	and    eax,0xa2c2273
  4446a5:	and    BYTE PTR [rax],ah
  4446a7:	and    BYTE PTR [rax],ah
  4446a9:	and    BYTE PTR [rax],ah
  4446ab:	and    BYTE PTR [rbx+0x2e],ah
  4446ae:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4446b1:	ins    BYTE PTR es:[rdi],dx
  4446b2:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4446b5:	ins    BYTE PTR es:[rdi],dx
  4446b6:	(bad)  
  4446b7:	je     0x44471e
  4446b9:	and    BYTE PTR [rcx+0x53],al
  4446bc:	and    BYTE PTR [rdx],ah
  4446be:	and    eax,0xa2c2273
  4446c3:	and    BYTE PTR [rax],ah
  4446c5:	and    BYTE PTR [rax],ah
  4446c7:	and    BYTE PTR [rax],ah
  4446c9:	and    BYTE PTR [rbx+0x2e],ah
  4446cc:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4446cf:	ins    BYTE PTR es:[rdi],dx
  4446d0:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  4446d4:	and    BYTE PTR gs:[rcx+0x53],al
  4446d8:	and    BYTE PTR [rdx],ah
  4446da:	and    eax,0x2273
  4446df:	add    BYTE PTR [rdx+rcx*1],ch
  4446e2:	and    BYTE PTR [rax],ah
  4446e4:	and    BYTE PTR [rax],ah
  4446e6:	and    BYTE PTR [rax],ah
  4446e8:	and    BYTE PTR [rax+0x67],dh
  4446eb:	pop    rdi
  4446ec:	movsxd esp,DWORD PTR [rcx+0x74]
  4446ef:	(bad)  
  4446f0:	ins    BYTE PTR es:[rdi],dx
  4446f1:	outs   dx,DWORD PTR ds:[rsi]
  4446f2:	outs   dx,DWORD PTR cs:[esi]
  4446f5:	(bad)  
  4446f6:	push   0x5f
  4446f8:	fs gs jae 0x44475f
  4446fc:	jb     0x444767
  4446fe:	jo     0x444774
  444700:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6328
  444707:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  44470f:	movsxd ebp,DWORD PTR [rdi+0x6c]
  444712:	ins    BYTE PTR es:[rdi],dx
  444713:	(bad)  
  444714:	je     0x44477f
  444716:	outs   dx,DWORD PTR ds:[rsi]
  444717:	outs   dx,BYTE PTR ds:[rsi]
  444718:	(bad)  
  444719:	sub    DWORD PTR [rax],esp
  44471b:	push   r11
  44471d:	and    BYTE PTR [rdx],ah
  44471f:	and    eax,0x2273
  444724:	add    BYTE PTR [rax],al
  444726:	add    BYTE PTR [rax],al
  444728:	or     al,BYTE PTR [rsi+0x52]
  44472b:	rex.WRXB
  44472c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444730:	pop    rdi
  444731:	movsxd esp,DWORD PTR [rcx+0x74]
  444734:	(bad)  
  444735:	ins    BYTE PTR es:[rdi],dx
  444736:	outs   dx,DWORD PTR ds:[rsi]
  444737:	addr32 cs jo 0x4447a2
  44473b:	pop    rdi
  44473c:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44473f:	ins    BYTE PTR es:[rdi],dx
  444740:	(bad)  
  444741:	je     0x4447ac
  444743:	outs   dx,DWORD PTR ds:[rsi]
  444744:	outs   dx,BYTE PTR ds:[rsi]
  444745:	and    BYTE PTR [rbx+0x2c],ah
  444748:	and    BYTE PTR [rax+0x67],dh
  44474b:	pop    rdi
  44474c:	movsxd esp,DWORD PTR [rcx+0x74]
  44474f:	(bad)  
  444750:	ins    BYTE PTR es:[rdi],dx
  444751:	outs   dx,DWORD PTR ds:[rsi]
  444752:	addr32 cs jo 0x4447bd
  444756:	pop    rdi
  444757:	outs   dx,BYTE PTR ds:[rsi]
  444758:	(bad)  
  444759:	ins    DWORD PTR es:[rdi],dx
  44475a:	gs jae 0x4447cd
  44475d:	(bad)  
  44475e:	movsxd esp,DWORD PTR [rbp+0x20]
  444761:	outs   dx,BYTE PTR ds:[rsi]
  444762:	or     dl,BYTE PTR [rdi+0x48]
  444765:	rex.RB push r10
  444767:	and    BYTE PTR [r14+0x2e],r13b
  44476b:	outs   dx,DWORD PTR ds:[rsi]
  44476c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6320
  444774:	outs   dx,DWORD PTR ds:[rsi]
  444775:	ins    BYTE PTR es:[rdi],dx
  444776:	ins    BYTE PTR es:[rdi],dx
  444777:	outs   dx,BYTE PTR ds:[rsi]
  444778:	(bad)  
  444779:	ins    DWORD PTR es:[rdi],dx
  44477a:	gs jae 0x4447ed
  44477d:	(bad)  
  44477e:	movsxd esp,DWORD PTR [rbp+0xa]
  444781:	add    BYTE PTR [rax],al
  444783:	add    BYTE PTR [rax],al
  444785:	add    BYTE PTR [rax],al
  444787:	add    BYTE PTR [rax],ah
  444789:	and    BYTE PTR [rax],ah
  44478b:	and    BYTE PTR [rax],ah
  44478d:	and    BYTE PTR [rcx+0x4e],al
  444790:	and    BYTE PTR [rbx+0x2e],r12b
  444794:	movsxd ebp,DWORD PTR [rdi+0x6c]
  444797:	ins    BYTE PTR es:[rdi],dx
  444798:	outs   dx,BYTE PTR gs:[rsi]
  44479a:	movsxd ebp,DWORD PTR [rdi+0x64]
  44479d:	imul   ebp,DWORD PTR [rsi+0x67],0x204e4920
  4447a4:	sub    BYTE PTR [rip+0x70202c31],ch        # 0x706473db
  4447aa:	addr32 pop rdi
  4447ac:	movsxd esp,DWORD PTR [rcx+0x74]
  4447af:	(bad)  
  4447b0:	ins    BYTE PTR es:[rdi],dx
  4447b1:	outs   dx,DWORD PTR ds:[rsi]
  4447b2:	addr32 cs jo 0x44481d
  4447b6:	pop    rdi
  4447b7:	movsxd ebp,DWORD PTR [rax+0x61]
  4447ba:	jb     0x44481b
  4447bc:	je     0x44482d
  4447be:	pop    rdi
  4447bf:	outs   dx,BYTE PTR gs:[rsi]
  4447c1:	movsxd ebp,DWORD PTR [rdi+0x64]
  4447c4:	imul   ebp,DWORD PTR [rsi+0x67],0x5f677028
  4447cb:	movsxd esp,DWORD PTR [rcx+0x74]
  4447ce:	(bad)  
  4447cf:	ins    BYTE PTR es:[rdi],dx
  4447d0:	outs   dx,DWORD PTR ds:[rsi]
  4447d1:	addr32 cs addr32 gs je 0x44483b
  4447d7:	(bad)  
  4447d8:	je     0x44483b
  4447da:	(bad)  
  4447dc:	jae    0x444843
  4447de:	outs   dx,BYTE PTR gs:[rsi]
  4447e0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4447e3:	imul   ebp,DWORD PTR [rsi+0x67],0x29292928
  4447ea:	or     al,BYTE PTR [rax]
  4447ec:	add    BYTE PTR [rax],al
  4447ee:	add    BYTE PTR [rax],al
  4447f0:	jo     0x444859
  4447f2:	pop    rdi
  4447f3:	movsxd esp,DWORD PTR [rcx+0x74]
  4447f6:	(bad)  
  4447f7:	ins    BYTE PTR es:[rdi],dx
  4447f8:	outs   dx,DWORD PTR ds:[rsi]
  4447f9:	addr32 cs jo 0x444864
  4447fd:	pop    rdi
  4447fe:	movsxd ebp,DWORD PTR [rdi+0x6c]
  444801:	ins    BYTE PTR es:[rdi],dx
  444802:	(bad)  
  444803:	je     0x44486e
  444805:	outs   dx,DWORD PTR ds:[rsi]
  444806:	outs   dx,BYTE PTR ds:[rsi]
  444807:	pop    rdi
  444808:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  44480f:	(bad)  
  444810:	ins    BYTE PTR es:[rdi],dx
  444811:	sub    BYTE PTR gs:[rbx+0x2e],ah
  444815:	outs   dx,DWORD PTR ds:[rsi]
  444816:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x6f632e63
  44481e:	ins    BYTE PTR es:[rdi],dx
  44481f:	ins    BYTE PTR es:[rdi],dx
  444820:	outs   dx,BYTE PTR ds:[rsi]
  444821:	(bad)  
  444822:	ins    DWORD PTR es:[rdi],dx
  444823:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  444828:	je     0x44484a
  44482a:	outs   dx,DWORD PTR ds:[rsi]
  44482b:	data16 and BYTE PTR [rbx+0x6f],ah
  44482f:	ins    BYTE PTR es:[rdi],dx
  444830:	ins    BYTE PTR es:[rdi],dx
  444831:	(bad)  
  444832:	je     0x44489d
  444834:	outs   dx,DWORD PTR ds:[rsi]
  444835:	outs   dx,BYTE PTR ds:[rsi]
  444836:	jae    0x444838
  444838:	push   rbx
  444839:	rex.RB
  44483a:	rex.WR
  44483b:	rex.RB
  44483c:	rex.XB push r12
  44483e:	and    BYTE PTR [rsi+0x2e],ch
  444841:	outs   dx,BYTE PTR ds:[rsi]
  444842:	jae    0x4448b4
  444844:	outs   dx,BYTE PTR ds:[rsi]
  444845:	(bad)  
  444846:	ins    DWORD PTR es:[rdi],dx
  444847:	and    BYTE PTR gs:[rcx+0x53],al
  44484b:	and    BYTE PTR [rdx],ah
  44484d:	and    eax,0xa2c2273
  444852:	and    BYTE PTR [rax],ah
  444854:	jo     0x4448bd
  444856:	pop    rdi
  444857:	movsxd esp,DWORD PTR [rcx+0x74]
  44485a:	(bad)  
  44485b:	ins    BYTE PTR es:[rdi],dx
  44485c:	outs   dx,DWORD PTR ds:[rsi]
  44485d:	addr32 cs jo 0x4448c8
  444861:	pop    rdi
  444862:	addr32 gs je 0x4448c5
  444866:	jne    0x4448db
  444868:	gs jb  0x4448cd
  44486b:	jns    0x4448d6
  44486d:	sub    BYTE PTR fs:[rsi+0x2e],ch
  444871:	outs   dx,BYTE PTR ds:[rsi]
  444872:	jae    0x4448e4
  444874:	outs   dx,DWORD PTR ds:[rsi]
  444875:	ja     0x4448e5
  444877:	gs jb  0x4448a3
  44487a:	and    BYTE PTR [rcx+0x53],al
  44487d:	and    BYTE PTR [rdx],ah
  44487f:	and    eax,0x6e002273
  444884:	outs   dx,BYTE PTR cs:[rsi]
  444886:	jae    0x4448f8
  444888:	(bad)  
  444889:	movsxd ebp,DWORD PTR [rax+rax*1+0x0]
  44488d:	add    BYTE PTR [rax],al
  44488f:	add    BYTE PTR [rdx+rcx*1],ch
  444892:	and    BYTE PTR [rax],ah
  444894:	jo     0x4448fd
  444896:	pop    rdi
  444897:	movsxd esp,DWORD PTR [rcx+0x74]
  44489a:	(bad)  
  44489b:	ins    BYTE PTR es:[rdi],dx
  44489c:	outs   dx,DWORD PTR ds:[rsi]
  44489d:	outs   dx,DWORD PTR cs:[esi]
  4448a0:	(bad)  
  4448a1:	push   0x5f
  4448a3:	fs gs jae 0x44490a
  4448a7:	jb     0x444912
  4448a9:	jo     0x44491f
  4448ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6e28
  4448b2:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  4448ba:	outs   dx,BYTE PTR ds:[rsi]
  4448bb:	(bad)  
  4448bc:	ins    DWORD PTR es:[rdi],dx
  4448bd:	gs jae 0x444930
  4448c0:	(bad)  
  4448c1:	movsxd esp,DWORD PTR [rbp+0x27]
  4448c4:	sub    DWORD PTR [rax],esp
  4448c6:	push   r11
  4448c8:	and    BYTE PTR [rdx],ah
  4448ca:	and    eax,0x2273
  4448cf:	add    BYTE PTR [rdx],cl
  4448d1:	rex.RX push rdx
  4448d3:	rex.WRXB
  4448d4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4448d8:	pop    rdi
  4448d9:	movsxd esp,DWORD PTR [rcx+0x74]
  4448dc:	(bad)  
  4448dd:	ins    BYTE PTR es:[rdi],dx
  4448de:	outs   dx,DWORD PTR ds:[rsi]
  4448df:	addr32 cs jo 0x44494a
  4448e3:	pop    rdi
  4448e4:	outs   dx,BYTE PTR ds:[rsi]
  4448e5:	(bad)  
  4448e6:	ins    DWORD PTR es:[rdi],dx
  4448e7:	gs jae 0x44495a
  4448ea:	(bad)  
  4448eb:	movsxd esp,DWORD PTR [rbp+0x20]
  4448ee:	outs   dx,BYTE PTR ds:[rsi]
  4448ef:	or     al,BYTE PTR [rax]
  4448f1:	add    BYTE PTR [rax],al
  4448f3:	add    BYTE PTR [rax],al
  4448f5:	add    BYTE PTR [rax],al
  4448f7:	add    BYTE PTR [rdi+0x48],dl
  4448fa:	rex.RB push r10
  4448fc:	and    BYTE PTR [r14+0x2e],r13b
  444900:	outs   dx,BYTE PTR ds:[rsi]
  444901:	jae    0x444973
  444903:	outs   dx,BYTE PTR ds:[rsi]
  444904:	(bad)  
  444905:	ins    DWORD PTR es:[rdi],dx
  444906:	and    BYTE PTR gs:[rcx],ah
  444909:	jle    0x44492b
  44490b:	(bad)  
  44490c:	pop    rsi
  44490d:	jo     0x444976
  44490f:	pop    rdi
  444910:	(bad)  
  444911:	and    BYTE PTR [rcx+0x4e],al
  444914:	and    BYTE PTR [rsi+0x2e],r13b
  444918:	outs   dx,BYTE PTR ds:[rsi]
  444919:	jae    0x44498b
  44491b:	outs   dx,BYTE PTR ds:[rsi]
  44491c:	(bad)  
  44491d:	ins    DWORD PTR es:[rdi],dx
  44491e:	and    BYTE PTR gs:[rsi+rdi*1],bh
  444922:	and    BYTE PTR [rdi],ah
  444924:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  44492b:	je     0x444996
  44492d:	outs   dx,DWORD PTR ds:[rsi]
  44492e:	outs   dx,BYTE PTR ds:[rsi]
  44492f:	pop    rdi
  444930:	jae    0x444995
  444932:	push   0x27616d65
  444937:	or     al,BYTE PTR [rax]
  444939:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  444941:	jae    0x4449a6
  444943:	push   0x73616d65
	...
  444950:	push   rsp
  444951:	push   0x65732065
  444956:	jb     0x4449ce
  444958:	gs jb  0x44497b
  44495b:	sub    BYTE PTR [rsi+0x65],dh
  44495e:	jb     0x4449d3
  444960:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  444967:	and    eax,0x64202964
  44496c:	outs   dx,DWORD PTR ds:[rsi]
  44496d:	gs jae 0x444990
  444970:	outs   dx,BYTE PTR ds:[rsi]
  444971:	outs   dx,DWORD PTR ds:[rsi]
  444972:	je     0x444994
  444974:	jae    0x4449eb
  444976:	jo     0x4449e8
  444978:	outs   dx,DWORD PTR ds:[rsi]
  444979:	jb     0x4449ef
  44497b:	and    BYTE PTR [rsi+0x75],ah
  44497e:	ins    BYTE PTR es:[rdi],dx
  44497f:	ins    BYTE PTR es:[rdi],dx
  444980:	and    BYTE PTR [rbp+riz*2+0x78],dh
  444984:	je     0x4449a6
  444986:	jae    0x4449ed
  444988:	(bad)  
  444989:	jb     0x4449ee
  44498b:	push   0xa2e
  444990:	push   rbx
  444991:	rex.RB
  444992:	rex.WR
  444993:	rex.RB
  444994:	rex.XB push r12
  444996:	and    BYTE PTR [rax+0x2e],dh
  444999:	outs   dx,DWORD PTR ds:[rsi]
  44499a:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x6e20200a
  4449a2:	outs   dx,BYTE PTR cs:[rsi]
  4449a4:	jae    0x444a16
  4449a6:	outs   dx,BYTE PTR ds:[rsi]
  4449a7:	(bad)  
  4449a8:	ins    DWORD PTR es:[rdi],dx
  4449a9:	gs sub al,0x20
  4449ac:	or     ah,BYTE PTR [rax]
  4449ae:	and    BYTE PTR [rax+0x2e],dh
  4449b1:	jo     0x444a25
  4449b3:	jae    0x444a23
  4449b5:	(bad)  
  4449b6:	ins    DWORD PTR es:[rdi],dx
  4449b7:	and    BYTE PTR gs:[rdx],cl
  4449ba:	rex.RX push rdx
  4449bc:	rex.WRXB
  4449bd:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4449c1:	pop    rdi
  4449c2:	movsxd esp,DWORD PTR [rcx+0x74]
  4449c5:	(bad)  
  4449c6:	ins    BYTE PTR es:[rdi],dx
  4449c7:	outs   dx,DWORD PTR ds:[rsi]
  4449c8:	addr32 cs jo 0x444a33
  4449cc:	pop    rdi
  4449cd:	je     0x444a42
  4449cf:	pop    rdi
  4449d0:	jo     0x444a33
  4449d2:	jb     0x444a47
  4449d4:	gs jb  0x4449f7
  4449d7:	jo     0x4449e3
  4449d9:	rex.WR
  4449da:	rex.RB
  4449db:	rex.RX push rsp
  4449dd:	and    BYTE PTR [rdx+0x4f],cl
  4449e0:	rex.WB
  4449e1:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4449e5:	pop    rdi
  4449e6:	movsxd esp,DWORD PTR [rcx+0x74]
  4449e9:	(bad)  
  4449ea:	ins    BYTE PTR es:[rdi],dx
  4449eb:	outs   dx,DWORD PTR ds:[rsi]
  4449ec:	addr32 cs jo 0x444a57
  4449f0:	pop    rdi
  4449f1:	outs   dx,BYTE PTR ds:[rsi]
  4449f2:	(bad)  
  4449f3:	ins    DWORD PTR es:[rdi],dx
  4449f4:	gs jae 0x444a67
  4449f7:	(bad)  
  4449f8:	movsxd esp,DWORD PTR [rbp+0x20]
  4449fb:	outs   dx,BYTE PTR ds:[rsi]
  4449fc:	and    BYTE PTR [rdi+0x4e],cl
  4449ff:	and    BYTE PTR [rsi+0x2e],ch
  444a02:	outs   dx,DWORD PTR ds:[rsi]
  444a03:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  444a0b:	jb     0x444a80
  444a0d:	outs   dx,BYTE PTR ds:[rsi]
  444a0e:	(bad)  
  444a0f:	ins    DWORD PTR es:[rdi],dx
  444a10:	gs jae 0x444a83
  444a13:	(bad)  
  444a14:	movsxd esp,DWORD PTR [rbp+0xa]
  444a17:	add    BYTE PTR [rax+0x67],dh
  444a1a:	pop    rdi
  444a1b:	movsxd esp,DWORD PTR [rcx+0x74]
  444a1e:	(bad)  
  444a1f:	ins    BYTE PTR es:[rdi],dx
  444a20:	outs   dx,DWORD PTR ds:[rsi]
  444a21:	addr32 cs jo 0x444a8c
  444a25:	pop    rdi
  444a26:	je     0x444a9b
  444a28:	pop    rdi
  444a29:	jo     0x444a8c
  444a2b:	jb     0x444aa0
  444a2d:	gs jb  0x444a8f
  444a30:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  444a37:	(bad)  
  444a38:	ins    BYTE PTR es:[rdi],dx
  444a39:	sub    BYTE PTR gs:[rax+0x2e],dh
  444a3d:	outs   dx,DWORD PTR ds:[rsi]
  444a3e:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x72702e70
  444a46:	jae    0x444ab6
  444a48:	(bad)  
  444a49:	ins    DWORD PTR es:[rdi],dx
  444a4a:	add    BYTE PTR gs:[rax],al
  444a4d:	add    BYTE PTR [rax],al
  444a4f:	add    BYTE PTR [rcx+rbp*2+0x64],al
  444a53:	and    BYTE PTR [rsi+0x6f],ch
  444a56:	je     0x444a78
  444a58:	imul   bp,WORD PTR [rsi+0x64],0x6120
  444a5e:	outs   dx,BYTE PTR ds:[rsi]
  444a5f:	jns    0x444a81
  444a61:	je     0x444ac8
  444a63:	js     0x444ad9
  444a65:	and    BYTE PTR [rbx+0x65],dh
  444a68:	(bad)  
  444a69:	jb     0x444ace
  444a6b:	push   0x72617020
  444a70:	jae    0x444ad7
  444a72:	jb     0x444a94
  444a74:	outs   dx,BYTE PTR ds:[rsi]
  444a75:	(bad)  
  444a76:	ins    DWORD PTR es:[rdi],dx
  444a77:	gs and BYTE PTR fs:[rdx],ah
  444a7b:	and    eax,0xa2e2273
  444a80:	add    BYTE PTR [rbp+0x65],cl
  444a83:	je     0x444aed
  444a85:	outs   dx,DWORD PTR ds:[rsi]
  444a86:	add    BYTE PTR fs:[rbx+0x74],dl
  444a8a:	(bad)  
  444a8b:	jb     0x444b01
  444a8d:	and    BYTE PTR [rax+0x61],dh
  444a90:	jb     0x444b05
  444a92:	add    BYTE PTR gs:[rax],al
  444a95:	add    BYTE PTR [rax],al
  444a97:	add    BYTE PTR [rbx+0x45],dl
  444a9a:	rex.WR
  444a9b:	rex.RB
  444a9c:	rex.XB push r12
  444a9e:	and    BYTE PTR [rdi],ah
  444aa0:	and    eax,0x41202773
  444aa5:	push   rbx
  444aa6:	and    BYTE PTR [rdx],ah
  444aa8:	and    eax,0x202c2273
  444aad:	or     ah,BYTE PTR [rax]
  444aaf:	and    BYTE PTR [rax],ah
  444ab1:	jo     0x444ae1
  444ab3:	jo     0x444b27
  444ab5:	jae    0x444b2a
  444ab7:	je     0x444b1a
  444ab9:	jb     0x444b2f
  444abb:	cmp    bh,BYTE PTR [rdx]
  444abd:	jo     0x444b26
  444abf:	pop    rdi
  444ac0:	movsxd esp,DWORD PTR [rcx+0x74]
  444ac3:	(bad)  
  444ac4:	ins    BYTE PTR es:[rdi],dx
  444ac5:	outs   dx,DWORD PTR ds:[rsi]
  444ac6:	addr32 cs jb 0x444b2f
  444aca:	addr32 jo 0x444b3f
  444acd:	outs   dx,DWORD PTR ds:[rsi]
  444ace:	movsxd esp,DWORD PTR [rax]
  444ad0:	push   r11
  444ad2:	and    BYTE PTR [rdx],ah
  444ad4:	and    eax,0x202c2273
  444ad9:	or     ah,BYTE PTR [rax]
  444adb:	and    BYTE PTR [rax],ah
  444add:	jo     0x444b46
  444adf:	pop    rdi
  444ae0:	movsxd esp,DWORD PTR [rcx+0x74]
  444ae3:	(bad)  
  444ae4:	ins    BYTE PTR es:[rdi],dx
  444ae5:	outs   dx,DWORD PTR ds:[rsi]
  444ae6:	outs   dx,DWORD PTR cs:[esi]
  444ae9:	(bad)  
  444aea:	push   0x5f
  444aec:	fs gs jae 0x444b53
  444af0:	jb     0x444b5b
  444af2:	jo     0x444b68
  444af4:	imul   ebp,DWORD PTR [rdi+0x6e],0x702e7028
  444afb:	jb     0x444b70
  444afd:	jae    0x444b73
  444aff:	(bad)  
  444b00:	jb     0x444b76
  444b02:	sub    al,0x20
  444b04:	(bad)  
  444b05:	jo     0x444b6e
  444b07:	pop    rdi
  444b08:	jo     0x444b7c
  444b0a:	outs   dx,DWORD PTR ds:[rsi]
  444b0b:	movsxd esp,DWORD PTR [rdi]
  444b0d:	sub    DWORD PTR [rax],esp
  444b0f:	(bad)  
  444b10:	jae    0x444b32
  444b12:	and    ah,BYTE PTR [rip+0xa202273]        # 0xa646d8b
  444b18:	and    BYTE PTR [rsi+0x52],al
  444b1b:	rex.WRXB
  444b1c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444b20:	pop    rdi
  444b21:	movsxd esp,DWORD PTR [rcx+0x74]
  444b24:	(bad)  
  444b25:	ins    BYTE PTR es:[rdi],dx
  444b26:	outs   dx,DWORD PTR ds:[rsi]
  444b27:	addr32 cs jo 0x444b92
  444b2b:	pop    rdi
  444b2c:	je     0x444ba1
  444b2e:	pop    rdi
  444b2f:	jo     0x444b92
  444b31:	jb     0x444ba6
  444b33:	gs jb  0x444b56
  444b36:	jo     0x444b58
  444b38:	or     ah,BYTE PTR [rax]
  444b3a:	push   rdi
  444b3b:	rex.W
  444b3c:	rex.RB push r10
  444b3e:	and    BYTE PTR [r8+0x2e],r14b
  444b42:	outs   dx,DWORD PTR ds:[rsi]
  444b43:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  444b4b:	(bad)  
  444b4c:	and    BYTE PTR [rdx],cl
  444b4e:	push   rbp
  444b4f:	rex.WRX
  444b50:	rex.WB
  444b51:	rex.WRXB
  444b52:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  444b56:	rex.WR and BYTE PTR [rdx],r9b
  444b59:	push   rbx
  444b5a:	rex.RB
  444b5b:	rex.WR
  444b5c:	rex.RB
  444b5d:	rex.XB push r12
  444b5f:	and    BYTE PTR [rdi],ah
  444b61:	and    eax,0x202c2773
  444b66:	or     ah,BYTE PTR [rax]
  444b68:	and    BYTE PTR [rax],ah
  444b6a:	jo     0x444b9a
  444b6c:	jo     0x444be0
  444b6e:	jae    0x444be4
  444b70:	outs   dx,DWORD PTR ds:[rsi]
  444b71:	imul   esp,DWORD PTR [rbp+0x6e],0x3a
  444b75:	cmp    dh,BYTE PTR [rax+0x67]
  444b78:	pop    rdi
  444b79:	movsxd esp,DWORD PTR [rcx+0x74]
  444b7c:	(bad)  
  444b7d:	ins    BYTE PTR es:[rdi],dx
  444b7e:	outs   dx,DWORD PTR ds:[rsi]
  444b7f:	addr32 cs jb 0x444be8
  444b83:	addr32 jo 0x444bf8
  444b86:	outs   dx,DWORD PTR ds:[rsi]
  444b87:	movsxd ebp,DWORD PTR [rax+riz*1]
  444b8a:	or     ah,BYTE PTR [rax]
  444b8c:	and    BYTE PTR [rax],ah
  444b8e:	jo     0x444bf7
  444b90:	pop    rdi
  444b91:	movsxd esp,DWORD PTR [rcx+0x74]
  444b94:	(bad)  
  444b95:	ins    BYTE PTR es:[rdi],dx
  444b96:	outs   dx,DWORD PTR ds:[rsi]
  444b97:	outs   dx,DWORD PTR cs:[esi]
  444b9a:	(bad)  
  444b9b:	push   0x5f
  444b9d:	fs gs jae 0x444c04
  444ba1:	jb     0x444c0c
  444ba3:	jo     0x444c19
  444ba5:	imul   ebp,DWORD PTR [rdi+0x6e],0x702e7028
  444bac:	jb     0x444c21
  444bae:	je     0x444c1f
  444bb0:	imul   esp,DWORD PTR [rbp+0x6e],0x2c
  444bb4:	and    BYTE PTR [rdi],ah
  444bb6:	jo     0x444c1f
  444bb8:	pop    rdi
  444bb9:	jo     0x444c2d
  444bbb:	outs   dx,DWORD PTR ds:[rsi]
  444bbc:	movsxd esp,DWORD PTR [rdi]
  444bbe:	sub    DWORD PTR [rax],esp
  444bc0:	or     ah,BYTE PTR [rax]
  444bc2:	rex.RX push rdx
  444bc4:	rex.WRXB
  444bc5:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444bc9:	pop    rdi
  444bca:	movsxd esp,DWORD PTR [rcx+0x74]
  444bcd:	(bad)  
  444bce:	ins    BYTE PTR es:[rdi],dx
  444bcf:	outs   dx,DWORD PTR ds:[rsi]
  444bd0:	addr32 cs jo 0x444c3b
  444bd4:	pop    rdi
  444bd5:	je     0x444c4a
  444bd7:	pop    rdi
  444bd8:	jo     0x444c3b
  444bda:	jb     0x444c4f
  444bdc:	gs jb  0x444bff
  444bdf:	jo     0x444c01
  444be1:	or     ah,BYTE PTR [rax]
  444be3:	push   rdi
  444be4:	rex.W
  444be5:	rex.RB push r10
  444be7:	and    BYTE PTR [r8+0x2e],r14b
  444beb:	outs   dx,DWORD PTR ds:[rsi]
  444bec:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  444bf4:	(bad)  
  444bf5:	and    BYTE PTR [rdx],cl
  444bf7:	push   rbp
  444bf8:	rex.WRX
  444bf9:	rex.WB
  444bfa:	rex.WRXB
  444bfb:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  444bff:	rex.WR and BYTE PTR [rdx],r9b
  444c02:	push   rbx
  444c03:	rex.RB
  444c04:	rex.WR
  444c05:	rex.RB
  444c06:	rex.XB push r12
  444c08:	and    BYTE PTR [rdi],ah
  444c0a:	and    eax,0x202c2773
  444c0f:	or     ah,BYTE PTR [rax]
  444c11:	and    BYTE PTR [rax],ah
  444c13:	jo     0x444c43
  444c15:	jo     0x444c89
  444c17:	jae    0x444c7e
  444c19:	outs   dx,BYTE PTR ds:[rsi]
  444c1a:	cmp    bh,BYTE PTR fs:[rdx]
  444c1d:	jo     0x444c86
  444c1f:	pop    rdi
  444c20:	movsxd esp,DWORD PTR [rcx+0x74]
  444c23:	(bad)  
  444c24:	ins    BYTE PTR es:[rdi],dx
  444c25:	outs   dx,DWORD PTR ds:[rsi]
  444c26:	addr32 cs jb 0x444c8f
  444c2a:	addr32 jo 0x444c9f
  444c2d:	outs   dx,DWORD PTR ds:[rsi]
  444c2e:	movsxd ebp,DWORD PTR [rax+riz*1]
  444c31:	or     ah,BYTE PTR [rax]
  444c33:	and    BYTE PTR [rax],ah
  444c35:	jo     0x444c9e
  444c37:	pop    rdi
  444c38:	movsxd esp,DWORD PTR [rcx+0x74]
  444c3b:	(bad)  
  444c3c:	ins    BYTE PTR es:[rdi],dx
  444c3d:	outs   dx,DWORD PTR ds:[rsi]
  444c3e:	outs   dx,DWORD PTR cs:[esi]
  444c41:	(bad)  
  444c42:	push   0x5f
  444c44:	fs gs jae 0x444cab
  444c48:	jb     0x444cb3
  444c4a:	jo     0x444cc0
  444c4c:	imul   ebp,DWORD PTR [rdi+0x6e],0x702e7028
  444c53:	jb     0x444cc8
  444c55:	outs   dx,BYTE PTR gs:[rsi]
  444c57:	fs sub al,0x20
  444c5a:	(bad)  
  444c5b:	jo     0x444cc4
  444c5d:	pop    rdi
  444c5e:	jo     0x444cd2
  444c60:	outs   dx,DWORD PTR ds:[rsi]
  444c61:	movsxd esp,DWORD PTR [rdi]
  444c63:	sub    DWORD PTR [rax],esp
  444c65:	or     ah,BYTE PTR [rax]
  444c67:	rex.RX push rdx
  444c69:	rex.WRXB
  444c6a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444c6e:	pop    rdi
  444c6f:	movsxd esp,DWORD PTR [rcx+0x74]
  444c72:	(bad)  
  444c73:	ins    BYTE PTR es:[rdi],dx
  444c74:	outs   dx,DWORD PTR ds:[rsi]
  444c75:	addr32 cs jo 0x444ce0
  444c79:	pop    rdi
  444c7a:	je     0x444cef
  444c7c:	pop    rdi
  444c7d:	jo     0x444ce0
  444c7f:	jb     0x444cf4
  444c81:	gs jb  0x444ca4
  444c84:	jo     0x444ca6
  444c86:	or     ah,BYTE PTR [rax]
  444c88:	push   rdi
  444c89:	rex.W
  444c8a:	rex.RB push r10
  444c8c:	and    BYTE PTR [r8+0x2e],r14b
  444c90:	outs   dx,DWORD PTR ds:[rsi]
  444c91:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  444c99:	(bad)  
  444c9a:	and    BYTE PTR [rdx],cl
  444c9c:	push   rbp
  444c9d:	rex.WRX
  444c9e:	rex.WB
  444c9f:	rex.WRXB
  444ca0:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  444ca4:	rex.WR and BYTE PTR [rdx],r9b
  444ca7:	push   rbx
  444ca8:	rex.RB
  444ca9:	rex.WR
  444caa:	rex.RB
  444cab:	rex.XB push r12
  444cad:	and    BYTE PTR [rdi],ah
  444caf:	and    eax,0x202c2773
  444cb4:	or     ah,BYTE PTR [rax]
  444cb6:	and    BYTE PTR [rax],ah
  444cb8:	jo     0x444ce8
  444cba:	jo     0x444d2e
  444cbc:	jae    0x444d26
  444cbe:	gs (bad) 
  444cc0:	fs ins BYTE PTR es:[rdi],dx
  444cc2:	imul   ebp,DWORD PTR [rsi+0x65],0x67703a3a
  444cc9:	pop    rdi
  444cca:	movsxd esp,DWORD PTR [rcx+0x74]
  444ccd:	(bad)  
  444cce:	ins    BYTE PTR es:[rdi],dx
  444ccf:	outs   dx,DWORD PTR ds:[rsi]
  444cd0:	addr32 cs jb 0x444d39
  444cd4:	addr32 jo 0x444d49
  444cd7:	outs   dx,DWORD PTR ds:[rsi]
  444cd8:	movsxd ebp,DWORD PTR [rax+riz*1]
  444cdb:	or     ah,BYTE PTR [rax]
  444cdd:	and    BYTE PTR [rax],ah
  444cdf:	jo     0x444d48
  444ce1:	pop    rdi
  444ce2:	movsxd esp,DWORD PTR [rcx+0x74]
  444ce5:	(bad)  
  444ce6:	ins    BYTE PTR es:[rdi],dx
  444ce7:	outs   dx,DWORD PTR ds:[rsi]
  444ce8:	outs   dx,DWORD PTR cs:[esi]
  444ceb:	(bad)  
  444cec:	push   0x5f
  444cee:	fs gs jae 0x444d55
  444cf2:	jb     0x444d5d
  444cf4:	jo     0x444d6a
  444cf6:	imul   ebp,DWORD PTR [rdi+0x6e],0x702e7028
  444cfd:	jb     0x444d72
  444cff:	push   0x6c646165
  444d04:	imul   ebp,DWORD PTR [rsi+0x65],0x7027202c
  444d0b:	addr32 pop rdi
  444d0d:	jo     0x444d81
  444d0f:	outs   dx,DWORD PTR ds:[rsi]
  444d10:	movsxd esp,DWORD PTR [rdi]
  444d12:	sub    DWORD PTR [rax],esp
  444d14:	or     ah,BYTE PTR [rax]
  444d16:	rex.RX push rdx
  444d18:	rex.WRXB
  444d19:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444d1d:	pop    rdi
  444d1e:	movsxd esp,DWORD PTR [rcx+0x74]
  444d21:	(bad)  
  444d22:	ins    BYTE PTR es:[rdi],dx
  444d23:	outs   dx,DWORD PTR ds:[rsi]
  444d24:	addr32 cs jo 0x444d8f
  444d28:	pop    rdi
  444d29:	je     0x444d9e
  444d2b:	pop    rdi
  444d2c:	jo     0x444d8f
  444d2e:	jb     0x444da3
  444d30:	gs jb  0x444d53
  444d33:	jo     0x444d55
  444d35:	or     ah,BYTE PTR [rax]
  444d37:	push   rdi
  444d38:	rex.W
  444d39:	rex.RB push r10
  444d3b:	and    BYTE PTR [r8+0x2e],r14b
  444d3f:	outs   dx,DWORD PTR ds:[rsi]
  444d40:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  444d48:	(bad)  
  444d49:	and    BYTE PTR [rdx],cl
  444d4b:	push   rbp
  444d4c:	rex.WRX
  444d4d:	rex.WB
  444d4e:	rex.WRXB
  444d4f:	rex.WRX and BYTE PTR [rcx+0x4c],r8b
  444d53:	rex.WR and BYTE PTR [rdx],r9b
  444d56:	push   rbx
  444d57:	rex.RB
  444d58:	rex.WR
  444d59:	rex.RB
  444d5a:	rex.XB push r12
  444d5c:	and    BYTE PTR [rdi],ah
  444d5e:	and    eax,0x202c2773
  444d63:	or     ah,BYTE PTR [rax]
  444d65:	and    BYTE PTR [rax],ah
  444d67:	jo     0x444d97
  444d69:	jo     0x444ddd
  444d6b:	jae    0x444dd9
  444d6d:	gs js  0x444de4
  444d70:	jns    0x444de2
  444d72:	cmp    bh,BYTE PTR gs:[rdx]
  444d75:	jo     0x444dde
  444d77:	pop    rdi
  444d78:	movsxd esp,DWORD PTR [rcx+0x74]
  444d7b:	(bad)  
  444d7c:	ins    BYTE PTR es:[rdi],dx
  444d7d:	outs   dx,DWORD PTR ds:[rsi]
  444d7e:	addr32 cs jb 0x444de7
  444d82:	addr32 jo 0x444df7
  444d85:	outs   dx,DWORD PTR ds:[rsi]
  444d86:	movsxd ebp,DWORD PTR [rax+riz*1]
  444d89:	or     ah,BYTE PTR [rax]
  444d8b:	and    BYTE PTR [rax],ah
  444d8d:	jo     0x444df6
  444d8f:	pop    rdi
  444d90:	movsxd esp,DWORD PTR [rcx+0x74]
  444d93:	(bad)  
  444d94:	ins    BYTE PTR es:[rdi],dx
  444d95:	outs   dx,DWORD PTR ds:[rsi]
  444d96:	outs   dx,DWORD PTR cs:[esi]
  444d99:	(bad)  
  444d9a:	push   0x5f
  444d9c:	fs gs jae 0x444e03
  444da0:	jb     0x444e0b
  444da2:	jo     0x444e18
  444da4:	imul   ebp,DWORD PTR [rdi+0x6e],0x702e7028
  444dab:	jb     0x444e20
  444dad:	ins    BYTE PTR es:[rdi],dx
  444dae:	gs js  0x444e25
  444db1:	jns    0x444e23
  444db3:	gs sub al,0x20
  444db6:	(bad)  
  444db7:	jo     0x444e20
  444db9:	pop    rdi
  444dba:	jo     0x444e2e
  444dbc:	outs   dx,DWORD PTR ds:[rsi]
  444dbd:	movsxd esp,DWORD PTR [rdi]
  444dbf:	sub    DWORD PTR [rax],esp
  444dc1:	or     ah,BYTE PTR [rax]
  444dc3:	rex.RX push rdx
  444dc5:	rex.WRXB
  444dc6:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444dca:	pop    rdi
  444dcb:	movsxd esp,DWORD PTR [rcx+0x74]
  444dce:	(bad)  
  444dcf:	ins    BYTE PTR es:[rdi],dx
  444dd0:	outs   dx,DWORD PTR ds:[rsi]
  444dd1:	addr32 cs jo 0x444e3c
  444dd5:	pop    rdi
  444dd6:	je     0x444e4b
  444dd8:	pop    rdi
  444dd9:	jo     0x444e3c
  444ddb:	jb     0x444e50
  444ddd:	gs jb  0x444e00
  444de0:	jo     0x444e02
  444de2:	or     ah,BYTE PTR [rax]
  444de4:	push   rdi
  444de5:	rex.W
  444de6:	rex.RB push r10
  444de8:	and    BYTE PTR [r8+0x2e],r14b
  444dec:	outs   dx,DWORD PTR ds:[rsi]
  444ded:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  444df5:	(bad)  
  444df6:	cmp    eax,DWORD PTR [rax]
  444df8:	rex.RXB
  444df9:	gs je  0x444e1c
  444dfc:	je     0x444e6d
  444dfe:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  444e02:	je     0x444e7d
  444e04:	jo     0x444e6b
  444e06:	jae    0x444e08
  444e08:	rex.RXB
  444e09:	gs je  0x444e2c
  444e0c:	push   0x6c646165
  444e11:	imul   ebp,DWORD PTR [rsi+0x65],0x646e4500
  444e18:	and    BYTE PTR [rax+0x61],dh
  444e1b:	jb     0x444e90
  444e1d:	add    BYTE PTR gs:[rdi+0x65],al
  444e21:	je     0x444e43
  444e23:	outs   dx,BYTE PTR ds:[rsi]
  444e24:	gs js  0x444e9b
  444e27:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
  444e2b:	outs   dx,BYTE PTR gs:[rsi]
  444e2d:	add    BYTE PTR [rbp+riz*2+0x78],dl
  444e31:	je     0x444e53
  444e33:	jae    0x444e9a
  444e35:	(bad)  
  444e36:	jb     0x444e9b
  444e38:	push   0x72617020
  444e3d:	jae    0x444ea4
  444e3f:	jb     0x444e61
  444e41:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73697cba
  444e47:	and    al,BYTE PTR [rax]
  444e49:	push   rsp
  444e4a:	gs js  0x444ec1
  444e4d:	and    BYTE PTR [rbx+0x65],dh
  444e50:	(bad)  
  444e51:	jb     0x444eb6
  444e53:	push   0x72617020
  444e58:	jae    0x444ebf
  444e5a:	jb     0x444e7c
  444e5c:	and    ah,BYTE PTR [rip+0x54002273]        # 0x544470d5
  444e62:	outs   dx,DWORD PTR ds:[rsi]
  444e63:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  444e67:	outs   dx,BYTE PTR ds:[rsi]
  444e68:	(bad)  
  444e69:	ins    DWORD PTR es:[rdi],dx
  444e6a:	add    BYTE PTR gs:[rax],al
  444e6d:	add    BYTE PTR [rax],al
  444e6f:	add    BYTE PTR [rbx+0x45],dl
  444e72:	rex.WR
  444e73:	rex.RB
  444e74:	rex.XB push r12
  444e76:	and    BYTE PTR [rsi+rbp*1+0x61],dh
  444e7a:	ins    BYTE PTR es:[rdi],dx
  444e7b:	imul   esp,DWORD PTR [rcx+0x73],0x20736120
  444e82:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x207070fb
  444e88:	or     ah,BYTE PTR [rax]
  444e8a:	and    BYTE PTR [rsi+rbp*1+0x64],dh
  444e8e:	gs jae 0x444ef4
  444e91:	jb     0x444efc
  444e93:	jo     0x444f09
  444e95:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736120
  444e9c:	and    ah,BYTE PTR [rip+0xa202273]        # 0xa647115
  444ea2:	rex.RX push rdx
  444ea4:	rex.WRXB
  444ea5:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444ea9:	pop    rdi
  444eaa:	movsxd esp,DWORD PTR [rcx+0x74]
  444ead:	(bad)  
  444eae:	ins    BYTE PTR es:[rdi],dx
  444eaf:	outs   dx,DWORD PTR ds:[rsi]
  444eb0:	addr32 cs je 0x444f27
  444eb4:	pop    rdi
  444eb5:	je     0x444f26
  444eb7:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  444ebb:	je     0x444f36
  444ebd:	jo     0x444f24
  444ebf:	sub    BYTE PTR [rax],ah
  444ec1:	(bad)  
  444ec2:	and    eax,0x3a3a2773
  444ec7:	jo     0x444f30
  444ec9:	pop    rdi
  444eca:	movsxd esp,DWORD PTR [rcx+0x74]
  444ecd:	(bad)  
  444ece:	ins    BYTE PTR es:[rdi],dx
  444ecf:	outs   dx,DWORD PTR ds:[rsi]
  444ed0:	outs   dx,DWORD PTR cs:[esi]
  444ed3:	imul   esp,DWORD PTR [rax+riz*1+0x29],0x20736120
  444edb:	je     0x444efd
  444edd:	or     cl,BYTE PTR [rdi+0x52]
  444ee0:	rex.R
  444ee1:	rex.RB push r10
  444ee3:	and    BYTE PTR [rdx+0x59],al
  444ee6:	and    BYTE PTR [rcx],dh
  444ee8:	cmp    eax,DWORD PTR [rax]
  444eea:	add    BYTE PTR [rax],al
  444eec:	add    BYTE PTR [rax],al
  444eee:	add    BYTE PTR [rax],al
  444ef0:	push   rsp
  444ef1:	outs   dx,DWORD PTR ds:[rsi]
  444ef2:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  444ef6:	je     0x444f71
  444ef8:	jo     0x444f5f
  444efa:	jae    0x444f1c
  444efc:	outs   dx,WORD PTR ds:[rsi]
  444efe:	jb     0x444f20
  444f00:	jo     0x444f63
  444f02:	jb     0x444f77
  444f04:	gs jb  0x444f27
  444f07:	and    ah,BYTE PTR [rip+0x73252e73]        # 0x73697d80
  444f0d:	and    al,BYTE PTR [rax]
  444f0f:	push   rsp
  444f10:	outs   dx,DWORD PTR ds:[rsi]
  444f11:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  444f15:	je     0x444f90
  444f17:	jo     0x444f7e
  444f19:	jae    0x444f3b
  444f1b:	outs   dx,WORD PTR ds:[rsi]
  444f1d:	jb     0x444f3f
  444f1f:	jo     0x444f82
  444f21:	jb     0x444f96
  444f23:	gs jb  0x444f46
  444f26:	and    ah,BYTE PTR [rip+0x2273]        # 0x44719f
  444f2c:	add    BYTE PTR [rax],al
  444f2e:	add    BYTE PTR [rax],al
  444f30:	push   rbx
  444f31:	rex.RB
  444f32:	rex.WR
  444f33:	rex.RB
  444f34:	rex.XB push r12
  444f36:	and    BYTE PTR [rdx],cl
  444f38:	and    BYTE PTR [rax],ah
  444f3a:	outs   dx,BYTE PTR ds:[rsi]
  444f3b:	outs   dx,BYTE PTR cs:[rsi]
  444f3d:	jae    0x444faf
  444f3f:	outs   dx,BYTE PTR ds:[rsi]
  444f40:	(bad)  
  444f41:	ins    DWORD PTR es:[rdi],dx
  444f42:	and    BYTE PTR gs:[rcx+0x73],ah
  444f46:	and    BYTE PTR [rdx],ah
  444f48:	and    eax,0xa2c2273
  444f4d:	and    BYTE PTR [rax],ah
  444f4f:	jo     0x444f7f
  444f51:	jo     0x444fc5
  444f53:	jae    0x444fc3
  444f55:	(bad)  
  444f56:	ins    DWORD PTR es:[rdi],dx
  444f57:	and    BYTE PTR gs:[rcx+0x73],ah
  444f5b:	and    BYTE PTR [rdx],ah
  444f5d:	and    eax,0xa2c2273
  444f62:	and    BYTE PTR [rax],ah
  444f64:	jo     0x444fcd
  444f66:	pop    rdi
  444f67:	movsxd esp,DWORD PTR [rcx+0x74]
  444f6a:	(bad)  
  444f6b:	ins    BYTE PTR es:[rdi],dx
  444f6c:	outs   dx,DWORD PTR ds:[rsi]
  444f6d:	outs   dx,DWORD PTR cs:[esi]
  444f70:	(bad)  
  444f71:	push   0x5f
  444f73:	fs gs jae 0x444fda
  444f77:	jb     0x444fe2
  444f79:	jo     0x444fef
  444f7b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7028
  444f82:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  444f8a:	je     0x444fff
  444f8c:	pop    rdi
  444f8d:	jo     0x444ff0
  444f8f:	jb     0x445004
  444f91:	gs jb  0x444fbb
  444f94:	sub    DWORD PTR [rax],esp
  444f96:	(bad)  
  444f97:	jae    0x444fb9
  444f99:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e7212
  444f9f:	push   rdx
  444fa0:	rex.WRXB
  444fa1:	rex.WRB and BYTE PTR [r8+0x67],r14b
  444fa5:	pop    rdi
  444fa6:	movsxd esp,DWORD PTR [rcx+0x74]
  444fa9:	(bad)  
  444faa:	ins    BYTE PTR es:[rdi],dx
  444fab:	outs   dx,DWORD PTR ds:[rsi]
  444fac:	addr32 cs jo 0x445017
  444fb0:	pop    rdi
  444fb1:	je     0x445026
  444fb3:	pop    rdi
  444fb4:	jo     0x445017
  444fb6:	jb     0x44502b
  444fb8:	gs jb  0x444fdb
  444fbb:	jo     0x444fdd
  444fbd:	or     cl,BYTE PTR [rbp+rax*2+0x46]
  444fc1:	push   rsp
  444fc2:	and    BYTE PTR [rdx+0x4f],cl
  444fc5:	rex.WB
  444fc6:	rex.WRX and BYTE PTR [rax+0x67],r14b
  444fca:	pop    rdi
  444fcb:	movsxd esp,DWORD PTR [rcx+0x74]
  444fce:	(bad)  
  444fcf:	ins    BYTE PTR es:[rdi],dx
  444fd0:	outs   dx,DWORD PTR ds:[rsi]
  444fd1:	addr32 cs jo 0x44503c
  444fd5:	pop    rdi
  444fd6:	outs   dx,BYTE PTR ds:[rsi]
  444fd7:	(bad)  
  444fd8:	ins    DWORD PTR es:[rdi],dx
  444fd9:	gs jae 0x44504c
  444fdc:	(bad)  
  444fdd:	movsxd esp,DWORD PTR [rbp+0x20]
  444fe0:	outs   dx,BYTE PTR ds:[rsi]
  444fe1:	and    BYTE PTR [rdi+0x4e],cl
  444fe4:	and    BYTE PTR [rsi+0x2e],ch
  444fe7:	outs   dx,DWORD PTR ds:[rsi]
  444fe8:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  444ff0:	jb     0x445065
  444ff2:	outs   dx,BYTE PTR ds:[rsi]
  444ff3:	(bad)  
  444ff4:	ins    DWORD PTR es:[rdi],dx
  444ff5:	gs jae 0x445068
  444ff8:	(bad)  
  444ff9:	movsxd esp,DWORD PTR [rbp+0xa]
  444ffc:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  445000:	je     0x445022
  445002:	outs   dx,DWORD PTR ds:[rsi]
  445003:	data16 and BYTE PTR [rbp+riz*2+0x78],dh
  445008:	je     0x44502a
  44500a:	jae    0x445071
  44500c:	(bad)  
  44500d:	jb     0x445072
  44500f:	push   0x72617020
  445014:	jae    0x44507b
  445016:	jb     0x44508b
	...
  445020:	push   rbx
  445021:	rex.RB
  445022:	rex.WR
  445023:	rex.RB
  445024:	rex.XB push r12
  445026:	and    BYTE PTR [rdx],cl
  445028:	and    BYTE PTR [rax],ah
  44502a:	outs   dx,BYTE PTR ds:[rsi]
  44502b:	outs   dx,BYTE PTR cs:[rsi]
  44502d:	jae    0x44509f
  44502f:	outs   dx,BYTE PTR ds:[rsi]
  445030:	(bad)  
  445031:	ins    DWORD PTR es:[rdi],dx
  445032:	and    BYTE PTR gs:[rcx+0x73],ah
  445036:	and    BYTE PTR [rdx],ah
  445038:	and    eax,0xa2c2273
  44503d:	and    BYTE PTR [rax],ah
  44503f:	fs cs imul esp,DWORD PTR fs:[rbx+0x74],0x656d616e
  445049:	and    BYTE PTR [rcx+0x73],ah
  44504c:	and    BYTE PTR [rdx],ah
  44504e:	and    eax,0xa2c2273
  445053:	add    BYTE PTR [rcx+0x6e],cl
  445056:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  44505e:	outs   dx,BYTE PTR ds:[rsi]
  44505f:	jae    0x445061
  445061:	push   rsp
  445062:	gs ins DWORD PTR es:[rdi],dx
  445064:	jo     0x4450d2
  445066:	(bad)  
  445067:	je     0x4450ce
  445069:	add    BYTE PTR [rax],al
  44506b:	add    BYTE PTR [rax],al
  44506d:	add    BYTE PTR [rax],al
  44506f:	add    BYTE PTR [rax],ah
  445071:	and    BYTE PTR [rax],ch
  445073:	and    BYTE PTR [rbx+0x45],dl
  445076:	rex.WR
  445077:	rex.RB
  445078:	rex.XB push r12
  44507a:	and    BYTE PTR [rbx+0x4f],al
  44507d:	rex.B
  44507e:	rex.WR
  44507f:	rex.RB push r11
  445081:	rex.XB
  445082:	sub    BYTE PTR [r14+0x74],r13b
  445086:	outs   dx,BYTE PTR cs:[rsi]
  445088:	jae    0x4450fa
  44508a:	outs   dx,BYTE PTR ds:[rsi]
  44508b:	(bad)  
  44508c:	ins    DWORD PTR es:[rdi],dx
  44508d:	gs sub al,0x20
  445090:	(bad)  
  445091:	sub    BYTE PTR [rsi+0x75],ch
  445094:	ins    BYTE PTR es:[rdi],dx
  445095:	ins    BYTE PTR es:[rdi],dx
  445096:	sub    DWORD PTR [rdi],esp
  445098:	sub    DWORD PTR [rdx],edi
  44509a:	cmp    dh,BYTE PTR [rax+0x67]
  44509d:	pop    rdi
  44509e:	movsxd esp,DWORD PTR [rcx+0x74]
  4450a1:	(bad)  
  4450a2:	ins    BYTE PTR es:[rdi],dx
  4450a3:	outs   dx,DWORD PTR ds:[rsi]
  4450a4:	addr32 cs je 0x44510d
  4450a8:	js     0x44511e
  4450aa:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4450ae:	(bad)  
  4450af:	cs (bad) 
  4450b1:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4450b5:	je     0x4450e5
  4450b7:	je     0x445126
  4450b9:	jo     0x445127
  4450bb:	outs   dx,BYTE PTR ds:[rsi]
  4450bc:	(bad)  
  4450bd:	ins    DWORD PTR es:[rdi],dx
  4450be:	and    BYTE PTR gs:[rsi+0x52],al
  4450c2:	rex.WRXB
  4450c3:	rex.WRB and BYTE PTR [r10],r9b
  4450c6:	and    BYTE PTR [rax],ah
  4450c8:	and    BYTE PTR [rax],ah
  4450ca:	jo     0x445133
  4450cc:	pop    rdi
  4450cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4450d0:	(bad)  
  4450d1:	ins    BYTE PTR es:[rdi],dx
  4450d2:	outs   dx,DWORD PTR ds:[rsi]
  4450d3:	addr32 cs jo 0x44513e
  4450d7:	pop    rdi
  4450d8:	je     0x44514d
  4450da:	pop    rdi
  4450db:	je     0x445142
  4450dd:	ins    DWORD PTR es:[rdi],dx
  4450de:	jo     0x44514c
  4450e0:	(bad)  
  4450e1:	je     0x445148
  4450e3:	and    BYTE PTR [rax+riz*1+0xa],dh
  4450e7:	or     DWORD PTR [rcx],ecx
  4450e9:	or     DWORD PTR [rax],esp
  4450eb:	rex.WR
  4450ec:	rex.RB
  4450ed:	rex.RX push rsp
  4450ef:	and    BYTE PTR [rdx+0x4f],cl
  4450f2:	rex.WB
  4450f3:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4450f7:	pop    rdi
  4450f8:	movsxd esp,DWORD PTR [rcx+0x74]
  4450fb:	(bad)  
  4450fc:	ins    BYTE PTR es:[rdi],dx
  4450fd:	outs   dx,DWORD PTR ds:[rsi]
  4450fe:	addr32 cs jo 0x445169
  445102:	pop    rdi
  445103:	outs   dx,BYTE PTR ds:[rsi]
  445104:	(bad)  
  445105:	ins    DWORD PTR es:[rdi],dx
  445106:	gs jae 0x445179
  445109:	(bad)  
  44510a:	movsxd esp,DWORD PTR [rbp+0x20]
  44510d:	outs   dx,BYTE PTR ds:[rsi]
  44510e:	je     0x445130
  445110:	rex.WRXB
  445111:	rex.WRX and BYTE PTR [rsi+0x74],r13b
  445115:	outs   dx,DWORD PTR cs:[rsi]
  445117:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  44511f:	ins    DWORD PTR es:[rdi],dx
  445120:	jo     0x44518e
  445122:	outs   dx,BYTE PTR ds:[rsi]
  445123:	(bad)  
  445124:	ins    DWORD PTR es:[rdi],dx
  445125:	gs jae 0x445198
  445128:	(bad)  
  445129:	movsxd esp,DWORD PTR [rbp+0x20]
  44512c:	or     cl,BYTE PTR [rcx]
  44512e:	or     DWORD PTR [rcx],ecx
  445130:	and    BYTE PTR [rdi+0x48],dl
  445133:	rex.RB push r10
  445135:	and    BYTE PTR [r14+rbp*1+0x64],r12b
  44513a:	imul   esp,DWORD PTR [rbx+0x74],0x706d6574
  445141:	ins    BYTE PTR es:[rdi],dx
  445142:	(bad)  
  445143:	je     0x4451aa
  445145:	and    BYTE PTR [rip+0x6f2e7420],bh        # 0x6f72c56b
  44514b:	imul   esp,DWORD PTR [rax+riz*1+0x29],0x20534120
  445153:	and    BYTE PTR [rdx],ah
  445155:	and    eax,0x202c2273
  44515a:	or     ah,BYTE PTR [rax]
  44515c:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  445160:	imul   esp,DWORD PTR [rbx+0x74],0x74696e69
  445167:	outs   dx,DWORD PTR ds:[rsi]
  445168:	jo     0x4451de
  44516a:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736120
  445171:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x207073ea
  445177:	or     al,BYTE PTR [rax]
  445179:	add    BYTE PTR [rax],al
  44517b:	add    BYTE PTR [rax],al
  44517d:	add    BYTE PTR [rax],al
  44517f:	add    BYTE PTR [rax],ah
  445181:	and    BYTE PTR [rax+0x67],dh
  445184:	pop    rdi
  445185:	movsxd esp,DWORD PTR [rcx+0x74]
  445188:	(bad)  
  445189:	ins    BYTE PTR es:[rdi],dx
  44518a:	outs   dx,DWORD PTR ds:[rsi]
  44518b:	outs   dx,DWORD PTR cs:[esi]
  44518e:	(bad)  
  44518f:	push   0x5f
  445191:	fs gs jae 0x4451f8
  445195:	jb     0x445200
  445197:	jo     0x44520d
  445199:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6428
  4451a0:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  4451a8:	je     0x44521d
  4451aa:	pop    rdi
  4451ab:	imul   esp,DWORD PTR fs:[rbx+0x74],0x61202927
  4451b3:	jae    0x4451d5
  4451b5:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4e742e
  4451bb:	add    BYTE PTR [rax],al
  4451bd:	add    BYTE PTR [rax],al
  4451bf:	add    BYTE PTR [rsi+0x52],al
  4451c2:	rex.WRXB
  4451c3:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4451c7:	pop    rdi
  4451c8:	movsxd esp,DWORD PTR [rcx+0x74]
  4451cb:	(bad)  
  4451cc:	ins    BYTE PTR es:[rdi],dx
  4451cd:	outs   dx,DWORD PTR ds:[rsi]
  4451ce:	addr32 cs jo 0x445239
  4451d2:	pop    rdi
  4451d3:	je     0x445248
  4451d5:	pop    rdi
  4451d6:	imul   esp,DWORD PTR fs:[rbx+0x74],0x4c0a6420
  4451de:	rex.RB
  4451df:	rex.RX push rsp
  4451e1:	and    BYTE PTR [rdx+0x4f],cl
  4451e4:	rex.WB
  4451e5:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4451e9:	pop    rdi
  4451ea:	movsxd esp,DWORD PTR [rcx+0x74]
  4451ed:	(bad)  
  4451ee:	ins    BYTE PTR es:[rdi],dx
  4451ef:	outs   dx,DWORD PTR ds:[rsi]
  4451f0:	addr32 cs jo 0x44525b
  4451f4:	pop    rdi
  4451f5:	outs   dx,BYTE PTR ds:[rsi]
  4451f6:	(bad)  
  4451f7:	ins    DWORD PTR es:[rdi],dx
  4451f8:	gs jae 0x44526b
  4451fb:	(bad)  
  4451fc:	movsxd esp,DWORD PTR [rbp+0x20]
  4451ff:	outs   dx,BYTE PTR ds:[rsi]
  445200:	and    BYTE PTR [rdi+0x4e],cl
  445203:	and    BYTE PTR [rsi+0x2e],ch
  445206:	outs   dx,DWORD PTR ds:[rsi]
  445207:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x642e6420
  44520f:	imul   esp,DWORD PTR [rbx+0x74],0x656d616e
  445216:	jae    0x445288
  445218:	(bad)  
  445219:	movsxd esp,DWORD PTR [rbp+0xa]
  44521c:	add    BYTE PTR [rax],al
  44521e:	add    BYTE PTR [rax],al
  445220:	jo     0x445289
  445222:	pop    rdi
  445223:	movsxd esp,DWORD PTR [rcx+0x74]
  445226:	(bad)  
  445227:	ins    BYTE PTR es:[rdi],dx
  445228:	outs   dx,DWORD PTR ds:[rsi]
  445229:	addr32 cs jo 0x445294
  44522d:	pop    rdi
  44522e:	je     0x4452a3
  445230:	pop    rdi
  445231:	imul   esp,DWORD PTR fs:[rbx+0x74],0x5f73695f
  445239:	jbe    0x4452a4
  44523b:	jae    0x4452a6
  44523d:	(bad)  
  44523e:	ins    BYTE PTR es:[rdi],dx
  44523f:	sub    BYTE PTR gs:[rsi+rbp*1+0x6f],ah
  445244:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x69642e64
  44524c:	movsxd esi,DWORD PTR [rsi+rbp*2+0x61]
  445250:	ins    DWORD PTR es:[rdi],dx
  445251:	add    BYTE PTR gs:[rax],al
  445254:	add    BYTE PTR [rax],al
  445256:	add    BYTE PTR [rax],al
  445258:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  445260:	je     0x4452c7
  445262:	js     0x4452d8
  445264:	and    BYTE PTR [rbx+0x65],dh
  445267:	(bad)  
  445268:	jb     0x4452cd
  44526a:	push   0x63696420
  44526f:	je     0x4452da
  445271:	outs   dx,DWORD PTR ds:[rsi]
  445272:	outs   dx,BYTE PTR ds:[rsi]
  445273:	(bad)  
  445274:	jb     0x4452df
  445276:	gs jae 0x445279
  445279:	add    BYTE PTR [rax],al
  44527b:	add    BYTE PTR [rax],al
  44527d:	add    BYTE PTR [rax],al
  44527f:	add    BYTE PTR [rbx+0x45],dl
  445282:	rex.WR
  445283:	rex.RB
  445284:	rex.XB push r12
  445286:	and    BYTE PTR [rdx],cl
  445288:	and    BYTE PTR [rax],ah
  44528a:	outs   dx,BYTE PTR ds:[rsi]
  44528b:	outs   dx,BYTE PTR cs:[rsi]
  44528d:	jae    0x4452ff
  44528f:	outs   dx,BYTE PTR ds:[rsi]
  445290:	(bad)  
  445291:	ins    DWORD PTR es:[rdi],dx
  445292:	and    BYTE PTR gs:[rcx+0x53],al
  445296:	and    BYTE PTR [rdx],ah
  445298:	and    eax,0xa2c2273
  44529d:	and    BYTE PTR [rax],ah
  44529f:	je     0x4452cf
  4452a1:	je     0x445310
  4452a3:	jo     0x445311
  4452a5:	outs   dx,BYTE PTR ds:[rsi]
  4452a6:	(bad)  
  4452a7:	ins    DWORD PTR es:[rdi],dx
  4452a8:	and    BYTE PTR gs:[rcx+0x53],al
  4452ac:	and    BYTE PTR [rdx],ah
  4452ae:	and    eax,0xa2c2273
  4452b3:	and    BYTE PTR [rax],ah
  4452b5:	je     0x4452e5
  4452b7:	je     0x445326
  4452b9:	jo     0x445327
  4452bb:	imul   ebp,DWORD PTR [rsi+0x69],0x703a3a74
  4452c2:	addr32 pop rdi
  4452c4:	movsxd esp,DWORD PTR [rcx+0x74]
  4452c7:	(bad)  
  4452c8:	ins    BYTE PTR es:[rdi],dx
  4452c9:	outs   dx,DWORD PTR ds:[rsi]
  4452ca:	addr32 cs jb 0x445333
  4452ce:	addr32 jo 0x445343
  4452d1:	outs   dx,DWORD PTR ds:[rsi]
  4452d2:	movsxd esp,DWORD PTR [rax]
  4452d4:	push   r11
  4452d6:	and    BYTE PTR [rdx],ah
  4452d8:	and    eax,0xa2c2273
  4452dd:	and    BYTE PTR [rax],ah
  4452df:	je     0x44530f
  4452e1:	je     0x445350
  4452e3:	jo     0x445351
  4452e5:	ins    BYTE PTR es:[rdi],dx
  4452e6:	gs js  0x445352
  4452e9:	jp     0x445350
  4452eb:	cmp    bh,BYTE PTR [rdx]
  4452ed:	jo     0x445356
  4452ef:	pop    rdi
  4452f0:	movsxd esp,DWORD PTR [rcx+0x74]
  4452f3:	(bad)  
  4452f4:	ins    BYTE PTR es:[rdi],dx
  4452f5:	outs   dx,DWORD PTR ds:[rsi]
  4452f6:	addr32 cs jb 0x44535f
  4452fa:	addr32 jo 0x44536f
  4452fd:	outs   dx,DWORD PTR ds:[rsi]
  4452fe:	movsxd esp,DWORD PTR [rax]
  445300:	push   r11
  445302:	and    BYTE PTR [rdx],ah
  445304:	and    eax,0xa2c2273
  445309:	and    BYTE PTR [rax],ah
  44530b:	jo     0x445374
  44530d:	pop    rdi
  44530e:	movsxd esp,DWORD PTR [rcx+0x74]
  445311:	(bad)  
  445312:	ins    BYTE PTR es:[rdi],dx
  445313:	outs   dx,DWORD PTR ds:[rsi]
  445314:	outs   dx,DWORD PTR cs:[esi]
  445317:	(bad)  
  445318:	push   0x5f
  44531a:	fs gs jae 0x445381
  44531e:	jb     0x445389
  445320:	jo     0x445396
  445322:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7428
  445329:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  445331:	je     0x4453a6
  445333:	pop    rdi
  445334:	je     0x44539b
  445336:	ins    DWORD PTR es:[rdi],dx
  445337:	jo     0x4453a5
  445339:	(bad)  
  44533a:	je     0x4453a1
  44533c:	(bad)  
  44533d:	sub    DWORD PTR [rax],esp
  44533f:	push   r11
  445341:	and    BYTE PTR [rdx],ah
  445343:	and    eax,0xa2273
  445348:	rex.WR
  445349:	gs js  0x4453b5
  44534c:	jp     0x4453b3
  44534e:	add    BYTE PTR [rcx+0x6e],cl
  445351:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x53000000
  445359:	rex.RB
  44535a:	rex.WR
  44535b:	rex.RB
  44535c:	rex.XB push r12
  44535e:	and    BYTE PTR [rdx],cl
  445360:	and    BYTE PTR [rax],ah
  445362:	outs   dx,BYTE PTR ds:[rsi]
  445363:	outs   dx,BYTE PTR cs:[rsi]
  445365:	jae    0x4453d7
  445367:	outs   dx,BYTE PTR ds:[rsi]
  445368:	(bad)  
  445369:	ins    DWORD PTR es:[rdi],dx
  44536a:	and    BYTE PTR gs:[rcx+0x53],al
  44536e:	and    BYTE PTR [rdx],ah
  445370:	and    eax,0xa2c2273
  445375:	and    BYTE PTR [rax],ah
  445377:	je     0x4453a7
  445379:	je     0x4453e8
  44537b:	jo     0x4453e9
  44537d:	outs   dx,BYTE PTR ds:[rsi]
  44537e:	(bad)  
  44537f:	ins    DWORD PTR es:[rdi],dx
  445380:	and    BYTE PTR gs:[rcx+0x53],al
  445384:	and    BYTE PTR [rdx],ah
  445386:	and    eax,0xa2c2273
  44538b:	and    BYTE PTR [rax],ah
  44538d:	jo     0x4453f6
  44538f:	pop    rdi
  445390:	movsxd esp,DWORD PTR [rcx+0x74]
  445393:	(bad)  
  445394:	ins    BYTE PTR es:[rdi],dx
  445395:	outs   dx,DWORD PTR ds:[rsi]
  445396:	outs   dx,DWORD PTR cs:[esi]
  445399:	(bad)  
  44539a:	push   0x5f
  44539c:	fs gs jae 0x445403
  4453a0:	jb     0x44540b
  4453a2:	jo     0x445418
  4453a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e7428
  4453ab:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  4453b3:	je     0x445428
  4453b5:	pop    rdi
  4453b6:	je     0x44541d
  4453b8:	ins    DWORD PTR es:[rdi],dx
  4453b9:	jo     0x445427
  4453bb:	(bad)  
  4453bc:	je     0x445423
  4453be:	(bad)  
  4453bf:	sub    DWORD PTR [rax],esp
  4453c1:	push   r11
  4453c3:	and    BYTE PTR [rdx],ah
  4453c5:	and    eax,0xa2273
  4453ca:	add    BYTE PTR [rax],al
  4453cc:	add    BYTE PTR [rax],al
  4453ce:	add    BYTE PTR [rax],al
  4453d0:	rex.RX push rdx
  4453d2:	rex.WRXB
  4453d3:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4453d7:	pop    rdi
  4453d8:	movsxd esp,DWORD PTR [rcx+0x74]
  4453db:	(bad)  
  4453dc:	ins    BYTE PTR es:[rdi],dx
  4453dd:	outs   dx,DWORD PTR ds:[rsi]
  4453de:	addr32 cs jo 0x445449
  4453e2:	pop    rdi
  4453e3:	je     0x445458
  4453e5:	pop    rdi
  4453e6:	je     0x44544d
  4453e8:	ins    DWORD PTR es:[rdi],dx
  4453e9:	jo     0x445457
  4453eb:	(bad)  
  4453ec:	je     0x445453
  4453ee:	and    BYTE PTR [rdx+rcx*1+0x4c],dh
  4453f2:	rex.RB
  4453f3:	rex.RX push rsp
  4453f5:	and    BYTE PTR [rdx+0x4f],cl
  4453f8:	rex.WB
  4453f9:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4453fd:	pop    rdi
  4453fe:	movsxd esp,DWORD PTR [rcx+0x74]
  445401:	(bad)  
  445402:	ins    BYTE PTR es:[rdi],dx
  445403:	outs   dx,DWORD PTR ds:[rsi]
  445404:	addr32 cs jo 0x44546f
  445408:	pop    rdi
  445409:	outs   dx,BYTE PTR ds:[rsi]
  44540a:	(bad)  
  44540b:	ins    DWORD PTR es:[rdi],dx
  44540c:	gs jae 0x44547f
  44540f:	(bad)  
  445410:	movsxd esp,DWORD PTR [rbp+0x20]
  445413:	outs   dx,BYTE PTR ds:[rsi]
  445414:	and    BYTE PTR [rdi+0x4e],cl
  445417:	and    BYTE PTR [rsi+0x2e],ch
  44541a:	outs   dx,DWORD PTR ds:[rsi]
  44541b:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7420
  445423:	ins    DWORD PTR es:[rdi],dx
  445424:	jo     0x445492
  445426:	outs   dx,BYTE PTR ds:[rsi]
  445427:	(bad)  
  445428:	ins    DWORD PTR es:[rdi],dx
  445429:	gs jae 0x44549c
  44542c:	(bad)  
  44542d:	movsxd esp,DWORD PTR [rbp+0xa]
	...
  445438:	jo     0x4454a1
  44543a:	pop    rdi
  44543b:	movsxd esp,DWORD PTR [rcx+0x74]
  44543e:	(bad)  
  44543f:	ins    BYTE PTR es:[rdi],dx
  445440:	outs   dx,DWORD PTR ds:[rsi]
  445441:	addr32 cs jo 0x4454ac
  445445:	pop    rdi
  445446:	je     0x4454bb
  445448:	pop    rdi
  445449:	je     0x4454b0
  44544b:	ins    DWORD PTR es:[rdi],dx
  44544c:	jo     0x4454ba
  44544e:	(bad)  
  44544f:	je     0x4454b6
  445451:	pop    rdi
  445452:	imul   esi,DWORD PTR [rbx+0x5f],0x69736976
  445459:	(bad)  
  44545a:	ins    BYTE PTR es:[rdi],dx
  44545b:	sub    BYTE PTR gs:[rsi+rbp*1+0x6f],dh
  445460:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x6d742e74
  445468:	jo     0x4454d6
  44546a:	outs   dx,BYTE PTR ds:[rsi]
  44546b:	(bad)  
  44546c:	ins    DWORD PTR es:[rdi],dx
  44546d:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  445472:	je     0x445494
  445474:	outs   dx,DWORD PTR ds:[rsi]
  445475:	data16 and BYTE PTR [rbp+riz*2+0x78],dh
  44547a:	je     0x44549c
  44547c:	jae    0x4454e3
  44547e:	(bad)  
  44547f:	jb     0x4454e4
  445481:	push   0x6d657420
  445486:	jo     0x4454f4
  445488:	(bad)  
  445489:	je     0x4454f0
  44548b:	jae    0x44548d
  44548d:	add    BYTE PTR [rax],al
  44548f:	add    BYTE PTR [rbx+0x45],dl
  445492:	rex.WR
  445493:	rex.RB
  445494:	rex.XB push r12
  445496:	and    BYTE PTR [rbx+0x2e],ah
  445499:	outs   dx,DWORD PTR ds:[rsi]
  44549a:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x66632e63
  4454a2:	outs   dx,BYTE PTR ds:[esi]
  4454a4:	(bad)  
  4454a5:	ins    DWORD PTR es:[rdi],dx
  4454a6:	gs sub al,0xa
  4454a9:	and    BYTE PTR [rax],ah
  4454ab:	and    BYTE PTR [rsi+0x2e],ch
  4454ae:	outs   dx,BYTE PTR ds:[rsi]
  4454af:	jae    0x445521
  4454b1:	outs   dx,BYTE PTR ds:[rsi]
  4454b2:	(bad)  
  4454b3:	ins    DWORD PTR es:[rdi],dx
  4454b4:	gs sub al,0x20
  4454b7:	or     ah,BYTE PTR [rax]
  4454b9:	and    BYTE PTR [rax],ah
  4454bb:	jo     0x4454eb
  4454bd:	jo     0x445531
  4454bf:	jae    0x44552f
  4454c1:	(bad)  
  4454c2:	ins    DWORD PTR es:[rdi],dx
  4454c3:	gs sub al,0x20
  4454c6:	or     ah,BYTE PTR [rax]
  4454c8:	and    BYTE PTR [rax],ah
  4454ca:	outs   dx,BYTE PTR ds:[rsi]
  4454cb:	jo     0x4454fb
  4454cd:	outs   dx,BYTE PTR ds:[rsi]
  4454ce:	jae    0x445540
  4454d0:	outs   dx,BYTE PTR ds:[rsi]
  4454d1:	(bad)  
  4454d2:	ins    DWORD PTR es:[rdi],dx
  4454d3:	and    BYTE PTR gs:[rcx+0x73],ah
  4454d7:	and    BYTE PTR [rax+0x6e],dh
  4454da:	jae    0x44554c
  4454dc:	outs   dx,BYTE PTR ds:[rsi]
  4454dd:	(bad)  
  4454de:	ins    DWORD PTR es:[rdi],dx
  4454df:	and    BYTE PTR gs:[rdx],cl
  4454e2:	rex.RX push rdx
  4454e4:	rex.WRXB
  4454e5:	rex.WRB and BYTE PTR [r8+0x67],r14b
  4454e9:	pop    rdi
  4454ea:	movsxd esp,DWORD PTR [rcx+0x74]
  4454ed:	(bad)  
  4454ee:	ins    BYTE PTR es:[rdi],dx
  4454ef:	outs   dx,DWORD PTR ds:[rsi]
  4454f0:	addr32 cs jo 0x44555b
  4454f4:	pop    rdi
  4454f5:	je     0x44556a
  4454f7:	pop    rdi
  4454f8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4454fb:	imul   sp,WORD PTR [rdi+0x20],0x2063
  445501:	or     ah,BYTE PTR [rax]
  445503:	and    BYTE PTR [rax],ah
  445505:	rex.WR
  445506:	rex.RB
  445507:	rex.RX push rsp
  445509:	and    BYTE PTR [rdx+0x4f],cl
  44550c:	rex.WB
  44550d:	rex.WRX and BYTE PTR [rax+0x67],r14b
  445511:	pop    rdi
  445512:	movsxd esp,DWORD PTR [rcx+0x74]
  445515:	(bad)  
  445516:	ins    BYTE PTR es:[rdi],dx
  445517:	outs   dx,DWORD PTR ds:[rsi]
  445518:	addr32 cs jo 0x445583
  44551c:	pop    rdi
  44551d:	outs   dx,BYTE PTR ds:[rsi]
  44551e:	(bad)  
  44551f:	ins    DWORD PTR es:[rdi],dx
  445520:	gs jae 0x445593
  445523:	(bad)  
  445524:	movsxd esp,DWORD PTR [rbp+0x20]
  445527:	outs   dx,BYTE PTR ds:[rsi]
  445528:	and    BYTE PTR [rdi+0x4e],cl
  44552b:	and    BYTE PTR [rsi+0x2e],ch
  44552e:	outs   dx,DWORD PTR ds:[rsi]
  44552f:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6320
  445537:	data16 outs dx,BYTE PTR ds:[esi]
  44553a:	(bad)  
  44553b:	ins    DWORD PTR es:[rdi],dx
  44553c:	gs jae 0x4455af
  44553f:	(bad)  
  445540:	movsxd esp,DWORD PTR [rbp+0x2c]
  445543:	and    BYTE PTR [rdx],cl
  445545:	and    BYTE PTR [rax+0x67],dh
  445548:	pop    rdi
  445549:	movsxd esp,DWORD PTR [rcx+0x74]
  44554c:	(bad)  
  44554d:	ins    BYTE PTR es:[rdi],dx
  44554e:	outs   dx,DWORD PTR ds:[rsi]
  44554f:	addr32 cs jo 0x4455ba
  445553:	pop    rdi
  445554:	je     0x4455c9
  445556:	pop    rdi
  445557:	jo     0x4455ba
  445559:	jb     0x4455ce
  44555b:	gs jb  0x44557e
  44555e:	jo     0x445580
  445560:	or     ah,BYTE PTR [rax]
  445562:	and    BYTE PTR [rax],ah
  445564:	rex.WR
  445565:	rex.RB
  445566:	rex.RX push rsp
  445568:	and    BYTE PTR [rdx+0x4f],cl
  44556b:	rex.WB
  44556c:	rex.WRX and BYTE PTR [rax+0x67],r14b
  445570:	pop    rdi
  445571:	movsxd esp,DWORD PTR [rcx+0x74]
  445574:	(bad)  
  445575:	ins    BYTE PTR es:[rdi],dx
  445576:	outs   dx,DWORD PTR ds:[rsi]
  445577:	addr32 cs jo 0x4455e2
  44557b:	pop    rdi
  44557c:	outs   dx,BYTE PTR ds:[rsi]
  44557d:	(bad)  
  44557e:	ins    DWORD PTR es:[rdi],dx
  44557f:	gs jae 0x4455f2
  445582:	(bad)  
  445583:	movsxd esp,DWORD PTR [rbp+0x20]
  445586:	outs   dx,BYTE PTR ds:[rsi]
  445587:	jo     0x4455a9
  445589:	rex.WRXB
  44558a:	rex.WRX and BYTE PTR [rsi+0x70],r13b
  44558e:	outs   dx,DWORD PTR cs:[rsi]
  445590:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x702e7020
  445598:	jb     0x44560d
  44559a:	outs   dx,BYTE PTR ds:[rsi]
  44559b:	(bad)  
  44559c:	ins    DWORD PTR es:[rdi],dx
  44559d:	gs jae 0x445610
  4455a0:	(bad)  
  4455a1:	movsxd esp,DWORD PTR [rbp+0x20]
  4455a4:	or     dl,BYTE PTR [rdi+0x48]
  4455a7:	rex.RB push r10
  4455a9:	and    BYTE PTR [r8],r12b
  4455ac:	jo     0x4455dc
  4455ae:	outs   dx,DWORD PTR ds:[rsi]
  4455af:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6320
  4455b7:	data16 addr32 jo 0x44561c
  4455bb:	jb     0x445630
  4455bd:	gs jb  0x4455ca
	...
  4455c8:	jo     0x445631
  4455ca:	pop    rdi
  4455cb:	movsxd esp,DWORD PTR [rcx+0x74]
  4455ce:	(bad)  
  4455cf:	ins    BYTE PTR es:[rdi],dx
  4455d0:	outs   dx,DWORD PTR ds:[rsi]
  4455d1:	addr32 cs jo 0x44563c
  4455d5:	pop    rdi
  4455d6:	je     0x44564b
  4455d8:	pop    rdi
  4455d9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4455dc:	imul   sp,WORD PTR [rdi+0x5f],0x7369
  4455e2:	pop    rdi
  4455e3:	jbe    0x44564e
  4455e5:	jae    0x445650
  4455e7:	(bad)  
  4455e8:	ins    BYTE PTR es:[rdi],dx
  4455e9:	sub    BYTE PTR gs:[rbx+0x2e],ah
  4455ed:	outs   dx,DWORD PTR ds:[rsi]
  4455ee:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x66632e63
  4455f6:	outs   dx,BYTE PTR ds:[esi]
  4455f8:	(bad)  
  4455f9:	ins    DWORD PTR es:[rdi],dx
  4455fa:	add    BYTE PTR gs:[rdi+0x52],cl
  4455fe:	rex.R
  4455ff:	rex.RB push r10
  445601:	and    BYTE PTR [rdx+0x59],al
  445604:	and    BYTE PTR [rbx],dh
  445606:	sub    al,0x20
  445608:	xor    bh,BYTE PTR [rbx]
  44560a:	add    BYTE PTR [rax],al
  44560c:	add    BYTE PTR [rax],al
  44560e:	add    BYTE PTR [rax],al
  445610:	imul   r12d,DWORD PTR [rax+riz*1+0x6e],0x6620746f
  445619:	imul   ebp,DWORD PTR [rsi+0x64],0x796e6120
  445620:	and    BYTE PTR [rbp+riz*2+0x78],dh
  445624:	je     0x445646
  445626:	jae    0x44568d
  445628:	(bad)  
  445629:	jb     0x44568e
  44562b:	push   0x6e6f6320
  445630:	imul   sp,WORD PTR [rdi+0x75],0x6172
  445636:	je     0x4456a1
  445638:	outs   dx,DWORD PTR ds:[rsi]
  445639:	outs   dx,BYTE PTR ds:[rsi]
  44563a:	and    BYTE PTR [rsi+0x61],ch
  44563d:	ins    DWORD PTR es:[rdi],dx
  44563e:	gs and BYTE PTR fs:[rdx],ah
  445642:	and    eax,0xa2e2273
  445647:	add    BYTE PTR [rcx+rbp*2+0x63],al
  44564b:	je     0x4456b6
  44564d:	outs   dx,DWORD PTR ds:[rsi]
  44564e:	outs   dx,BYTE PTR ds:[rsi]
  44564f:	(bad)  
  445650:	jb     0x4456bb
  445652:	gs jae 0x445655
  445655:	push   rsp
  445656:	outs   dx,DWORD PTR ds:[rsi]
  445657:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  44565b:	add    BYTE PTR [rax],al
  44565d:	add    BYTE PTR [rax],al
  44565f:	add    BYTE PTR [rbx+0x45],dl
  445662:	rex.WR
  445663:	rex.RB
  445664:	rex.XB push r12
  445666:	and    BYTE PTR [rdx],cl
  445668:	and    BYTE PTR [rax],ah
  44566a:	sub    BYTE PTR [rax],ah
  44566c:	push   rbx
  44566d:	rex.RB
  44566e:	rex.WR
  44566f:	rex.RB
  445670:	rex.XB push r12
  445672:	and    BYTE PTR [rsi+rbp*1+0x61],dh
  445676:	ins    BYTE PTR es:[rdi],dx
  445677:	imul   esp,DWORD PTR [rcx+0x73],0x4f524620
  44567e:	rex.WRB and BYTE PTR [r10],r9b
  445681:	and    BYTE PTR [rax],ah
  445683:	and    BYTE PTR [rax],ah
  445685:	jo     0x4456ee
  445687:	pop    rdi
  445688:	movsxd esp,DWORD PTR [rcx+0x74]
  44568b:	(bad)  
  44568c:	ins    BYTE PTR es:[rdi],dx
  44568d:	outs   dx,DWORD PTR ds:[rsi]
  44568e:	addr32 cs je 0x445705
  445692:	pop    rdi
  445693:	je     0x445704
  445695:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  445699:	je     0x445714
  44569b:	jo     0x445702
  44569d:	sub    BYTE PTR [rbx+0x2e],ah
  4456a0:	movsxd esp,DWORD PTR [rsi+0x67]
  4456a3:	jo     0x445706
  4456a5:	jb     0x44571a
  4456a7:	gs jb  0x4456d3
  4456aa:	and    BYTE PTR [rcx+0x53],al
  4456ad:	and    BYTE PTR [rax+riz*1+0xa],dh
  4456b1:	and    BYTE PTR [rax],ah
  4456b3:	and    BYTE PTR [rax],ah
  4456b5:	push   rdi
  4456b6:	rex.W
  4456b7:	rex.RB push r10
  4456b9:	and    BYTE PTR [r14+rbp*1+0x74],r14b
  4456be:	outs   dx,DWORD PTR ds:[rsi]
  4456bf:	imul   ebp,DWORD PTR [rcx+0x64],0x20
  4456c3:	cmp    eax,0x6d2e6d20
  4456c8:	(bad)  
  4456c9:	jo     0x44573f
  4456cb:	outs   dx,DWORD PTR ds:[rsi]
  4456cc:	imul   esp,DWORD PTR [rbp+0x6e],0x74
  4456d0:	jns    0x445742
  4456d2:	and    BYTE PTR gs:[rcx],ch
  4456d5:	and    BYTE PTR [rcx+0x53],al
  4456d8:	and    BYTE PTR [rdx],ah
  4456da:	and    eax,0x202c2273
  4456df:	or     ah,BYTE PTR [rax]
  4456e1:	and    BYTE PTR [rax+0x67],dh
  4456e4:	pop    rdi
  4456e5:	movsxd esp,DWORD PTR [rcx+0x74]
  4456e8:	(bad)  
  4456e9:	ins    BYTE PTR es:[rdi],dx
  4456ea:	outs   dx,DWORD PTR ds:[rsi]
  4456eb:	addr32 cs (bad) 
  4456ee:	je     0x445762
  4456f0:	imul   ebp,DWORD PTR [rbp+0x28],0x20200a20
  4456f7:	and    BYTE PTR [rax],ah
  4456f9:	push   r10
  4456fb:	push   rdx
  4456fc:	pop    r9
  4456fe:	sub    BYTE PTR [rax],ah
  445700:	push   rbx
  445701:	rex.RB
  445702:	rex.WR
  445703:	rex.RB
  445704:	rex.XB push r12
  445706:	and    BYTE PTR [rbp+0x6d],ch
  445709:	cs ins DWORD PTR es:[rdi],dx
  44570b:	(bad)  
  44570c:	jo     0x445772
  44570e:	imul   esp,DWORD PTR [rbx+0x74],0x67703a3a
  445715:	pop    rdi
  445716:	movsxd esp,DWORD PTR [rcx+0x74]
  445719:	(bad)  
  44571a:	ins    BYTE PTR es:[rdi],dx
  44571b:	outs   dx,DWORD PTR ds:[rsi]
  44571c:	addr32 cs jb 0x445785
  445720:	imul   esp,DWORD PTR fs:[ebx+0x74],0x616e6f69
  445729:	jb     0x4457a4
  44572b:	and    BYTE PTR [rdx],cl
  44572d:	and    BYTE PTR [rax],ah
  44572f:	and    BYTE PTR [rax],ah
  445731:	and    BYTE PTR [rax],ah
  445733:	and    BYTE PTR [rax],ah
  445735:	and    BYTE PTR [rax],ah
  445737:	and    BYTE PTR [rsi+0x52],al
  44573a:	rex.WRXB
  44573b:	rex.WRB and BYTE PTR [r8+0x67],r14b
  44573f:	pop    rdi
  445740:	movsxd esp,DWORD PTR [rcx+0x74]
  445743:	(bad)  
  445744:	ins    BYTE PTR es:[rdi],dx
  445745:	outs   dx,DWORD PTR ds:[rsi]
  445746:	addr32 cs jo 0x4457b1
  44574a:	pop    rdi
  44574b:	je     0x4457c0
  44574d:	pop    rdi
  44574e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  445751:	imul   sp,WORD PTR [rdi+0x5f],0x616d
  445757:	jo     0x445779
  445759:	push   r11
  44575b:	and    BYTE PTR [rbp+0x6d],ch
  44575e:	and    BYTE PTR [rdx],cl
  445760:	and    BYTE PTR [rax],ah
  445762:	and    BYTE PTR [rax],ah
  445764:	and    BYTE PTR [rax],ah
  445766:	and    BYTE PTR [rax],ah
  445768:	and    BYTE PTR [rax],ah
  44576a:	and    BYTE PTR [rdi+0x48],dl
  44576d:	rex.RB push r10
  44576f:	and    BYTE PTR [r13+0x6d],r13b
  445773:	cs ins DWORD PTR es:[rdi],dx
  445775:	(bad)  
  445776:	jo     0x4457db
  445778:	data16 and BYTE PTR [eip+0x6d2e6d20],bh        # 0x6d72c4a0
  445780:	(bad)  
  445781:	jo     0x4457e6
  445783:	data16 and BYTE PTR [ecx+0x4e],al
  445788:	and    BYTE PTR [rbp+0x6d],r13b
  44578c:	cs ins DWORD PTR es:[rdi],dx
  44578e:	(bad)  
  44578f:	jo     0x445805
  445791:	outs   dx,DWORD PTR ds:[rsi]
  445792:	imul   esp,DWORD PTR [rbp+0x6e],0x74
  445796:	jns    0x445808
  445798:	and    BYTE PTR gs:[rip+0x6d2e6d20],bh        # 0x6d72c4bf
  44579f:	(bad)  
  4457a0:	jo     0x445816
  4457a2:	outs   dx,DWORD PTR ds:[rsi]
  4457a3:	imul   esp,DWORD PTR [rbp+0x6e],0x74
  4457a7:	jns    0x445819
  4457a9:	and    BYTE PTR gs:[rdx],cl
  4457ac:	and    BYTE PTR [rax],ah
  4457ae:	and    BYTE PTR [rax],ah
  4457b0:	and    BYTE PTR [rax],ah
  4457b2:	and    BYTE PTR [rax],ah
  4457b4:	and    BYTE PTR [rax],ah
  4457b6:	and    BYTE PTR [rdi+0x52],cl
  4457b9:	rex.R
  4457ba:	rex.RB push r10
  4457bc:	and    BYTE PTR [rdx+0x59],al
  4457bf:	and    BYTE PTR [rbp+0x61],ch
  4457c2:	jo     0x445827
  4457c4:	data16 addr32 sub al,0x20
  4457c8:	ins    DWORD PTR es:[rdi],dx
  4457c9:	(bad)  
  4457ca:	jo     0x445840
  4457cc:	outs   dx,DWORD PTR ds:[rsi]
  4457cd:	imul   esp,DWORD PTR [rbp+0x6e],0x74
  4457d1:	jns    0x445843
  4457d3:	gs sub al,0x20
  4457d6:	ins    DWORD PTR es:[rdi],dx
  4457d7:	(bad)  
  4457d8:	jo     0x44584d
  4457da:	gs jno 0x44584b
  4457dd:	outs   dx,DWORD PTR ds:[rsi]
  4457de:	and    BYTE PTR [rdx],cl
  4457e0:	and    BYTE PTR [rax],ah
  4457e2:	and    BYTE PTR [rax],ah
  4457e4:	sub    DWORD PTR [rax],esp
  4457e6:	cmp    bh,BYTE PTR [rdx]
  4457e8:	and    BYTE PTR [rax+0x67],dh
  4457eb:	pop    rdi
  4457ec:	movsxd esp,DWORD PTR [rcx+0x74]
  4457ef:	(bad)  
  4457f0:	ins    BYTE PTR es:[rdi],dx
  4457f1:	outs   dx,DWORD PTR ds:[rsi]
  4457f2:	addr32 cs je 0x44585b
  4457f6:	js     0x44586c
  4457f8:	and    BYTE PTR [rax+riz*1],ch
  4457fb:	or     ah,BYTE PTR [rax]
  4457fd:	and    BYTE PTR [rdi],ah
  4457ff:	jnp    0x44587e
  445801:	(bad)  
  445802:	sub    DWORD PTR [rax],esp
  445804:	push   r11
  445806:	and    BYTE PTR [rdx],ah
  445808:	and    eax,0xa202273
  44580d:	rex.RX push rdx
  44580f:	rex.WRXB
  445810:	rex.WRB and BYTE PTR [r8+0x67],r14b
  445814:	pop    rdi
  445815:	movsxd esp,DWORD PTR [rcx+0x74]
  445818:	(bad)  
  445819:	ins    BYTE PTR es:[rdi],dx
  44581a:	outs   dx,DWORD PTR ds:[rsi]
  44581b:	addr32 cs jo 0x445886
  44581f:	pop    rdi
  445820:	je     0x445895
  445822:	pop    rdi
  445823:	movsxd ebp,DWORD PTR [rdi+0x6e]
  445826:	imul   sp,WORD PTR [rdi+0x20],0x5341
  44582c:	and    BYTE PTR [rbx+0x2c],ah
  44582f:	and    BYTE PTR [rax+0x67],dh
  445832:	pop    rdi
  445833:	movsxd esp,DWORD PTR [rcx+0x74]
  445836:	(bad)  
  445837:	ins    BYTE PTR es:[rdi],dx
  445838:	outs   dx,DWORD PTR ds:[rsi]
  445839:	addr32 cs jo 0x4458a4
  44583d:	pop    rdi
  44583e:	je     0x4458b3
  445840:	pop    rdi
  445841:	movsxd ebp,DWORD PTR [rdi+0x6e]
  445844:	imul   sp,WORD PTR [rdi+0x5f],0x616d
  44584a:	jo     0x44586c
  44584c:	push   r11
  44584e:	and    BYTE PTR [rbp+0x20],ch
  445851:	or     dl,BYTE PTR [rdi+0x48]
  445854:	rex.RB push r10
  445856:	and    BYTE PTR [r11+0x2e],r12b
  44585a:	outs   dx,DWORD PTR ds:[rsi]
  44585b:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  445863:	(bad)  
  445864:	and    BYTE PTR [rcx+0x4e],al
  445867:	and    BYTE PTR [rbp+0x2e],r13b
  44586b:	ins    DWORD PTR es:[rdi],dx
  44586c:	(bad)  
  44586d:	jo     0x4458d2
  44586f:	data16 and BYTE PTR [eip+0x6f2e6320],bh        # 0x6f72bb97
  445877:	imul   esp,DWORD PTR [rax+riz*1+0xa],0x554f5247
  44587f:	push   rax
  445880:	and    BYTE PTR [rdx+0x59],al
  445883:	and    BYTE PTR [rbp+0x2e],ch
  445886:	ins    DWORD PTR es:[rdi],dx
  445887:	(bad)  
  445888:	jo     0x4458ed
  44588a:	data16 addr32 sub al,0x20
  44588e:	ins    DWORD PTR es:[rdi],dx
  44588f:	cs ins DWORD PTR es:[rdi],dx
  445891:	(bad)  
  445892:	jo     0x445908
  445894:	outs   dx,DWORD PTR ds:[rsi]
  445895:	imul   esp,DWORD PTR [rbp+0x6e],0x74
  445899:	jns    0x44590b
  44589b:	gs sub al,0x20
  44589e:	movsxd ebp,DWORD PTR [rsi]
  4458a0:	movsxd esp,DWORD PTR [rsi+0x67]
  4458a3:	jo     0x445906
  4458a5:	jb     0x44591a
  4458a7:	gs jb  0x4458ca
  4458aa:	or     cl,BYTE PTR [rdi+0x52]
  4458ad:	rex.R
  4458ae:	rex.RB push r10
  4458b0:	and    BYTE PTR [rdx+0x59],al
  4458b3:	and    BYTE PTR [rcx],dh
  4458b5:	cmp    eax,DWORD PTR [rax]
  4458b7:	add    BYTE PTR [rbp+riz*2+0x78],dl
  4458bb:	je     0x4458dd
  4458bd:	jae    0x445924
  4458bf:	(bad)  
  4458c0:	jb     0x445925
  4458c2:	push   0x6e6f6320
  4458c7:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4458cd:	je     0x445938
  4458cf:	outs   dx,DWORD PTR ds:[rsi]
  4458d0:	outs   dx,BYTE PTR ds:[rsi]
  4458d1:	and    BYTE PTR [rdx],ah
  4458d3:	and    eax,0x73252e73
  4458d8:	and    al,BYTE PTR [rax]
  4458da:	add    BYTE PTR [rax],al
  4458dc:	add    BYTE PTR [rax],al
  4458de:	add    BYTE PTR [rax],al
  4458e0:	push   rsp
  4458e1:	gs js  0x445958
  4458e4:	and    BYTE PTR [rbx+0x65],dh
  4458e7:	(bad)  
  4458e8:	jb     0x44594d
  4458ea:	push   0x6e6f6320
  4458ef:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4458f5:	je     0x445960
  4458f7:	outs   dx,DWORD PTR ds:[rsi]
  4458f8:	outs   dx,BYTE PTR ds:[rsi]
  4458f9:	and    BYTE PTR [rdx],ah
  4458fb:	and    eax,0xa002273
  445900:	push   rax
  445901:	(bad)  
  445902:	jb     0x445977
  445904:	gs jb  0x445941
  445907:	and    BYTE PTR [rdx],ah
  445909:	and    eax,0x73252e73
  44590e:	and    al,BYTE PTR [rax]
  445910:	or     dl,BYTE PTR [rax+0x61]
  445913:	jb     0x445988
  445915:	gs jb  0x445952
  445918:	and    BYTE PTR [rdx],ah
  44591a:	and    eax,0x2273
  44591f:	add    BYTE PTR [rbx+0x45],dl
  445922:	rex.WR
  445923:	rex.RB
  445924:	rex.XB push r12
  445926:	and    BYTE PTR [rdx],cl
  445928:	and    BYTE PTR [rax],ah
  44592a:	and    BYTE PTR [rsi+0x2e],ch
  44592d:	outs   dx,BYTE PTR ds:[rsi]
  44592e:	jae    0x4459a0
  445930:	outs   dx,BYTE PTR ds:[rsi]
  445931:	(bad)  
  445932:	ins    DWORD PTR es:[rdi],dx
  445933:	and    BYTE PTR gs:[rcx+0x73],ah
  445937:	and    BYTE PTR [rdx],ah
  445939:	and    eax,0xa2c2273
  44593e:	and    BYTE PTR [rax],ah
  445940:	and    BYTE PTR [rbx+0x2e],ah
  445943:	movsxd esp,DWORD PTR [rsi+0x67]
  445946:	outs   dx,BYTE PTR ds:[rsi]
  445947:	(bad)  
  445948:	ins    DWORD PTR es:[rdi],dx
  445949:	and    BYTE PTR gs:[rcx+0x73],ah
  44594d:	and    BYTE PTR [rdx],ah
  44594f:	and    eax,0xa2c2273
  445954:	and    BYTE PTR [rax],ah
  445956:	and    BYTE PTR [rax+0x67],dh
  445959:	pop    rdi
  44595a:	movsxd esp,DWORD PTR [rcx+0x74]
  44595d:	(bad)  
  44595e:	ins    BYTE PTR es:[rdi],dx
  44595f:	outs   dx,DWORD PTR ds:[rsi]
  445960:	outs   dx,DWORD PTR cs:[esi]
  445963:	(bad)  
  445964:	push   0x5f
  445966:	fs gs jae 0x4459cd
  44596a:	jb     0x4459d5
  44596c:	jo     0x4459e2
  44596e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f2e6328
  445975:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x5f677027
  44597d:	je     0x4459f2
  44597f:	pop    rdi
  445980:	movsxd ebp,DWORD PTR [rdi+0x6e]
  445983:	imul   sp,WORD PTR [rdi+0x27],0x2029
  445989:	(bad)  
  44598a:	jae    0x4459ac
  44598c:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e7c05
  445992:	push   rdx
  445993:	rex.WRXB
  445994:	rex.WRB and BYTE PTR [r8+0x67],r14b
  445998:	pop    rdi
  445999:	movsxd esp,DWORD PTR [rcx+0x74]
  44599c:	(bad)  
  44599d:	ins    BYTE PTR es:[rdi],dx
  44599e:	outs   dx,DWORD PTR ds:[rsi]
  44599f:	addr32 cs jo 0x445a0a
  4459a3:	pop    rdi
  4459a4:	je     0x445a19
  4459a6:	pop    rdi
  4459a7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4459aa:	imul   sp,WORD PTR [rdi+0x20],0xa63
  4459b0:	rex.WR
  4459b1:	rex.RB
  4459b2:	rex.RX push rsp
  4459b4:	and    BYTE PTR [rdx+0x4f],cl
  4459b7:	rex.WB
  4459b8:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4459bc:	pop    rdi
  4459bd:	movsxd esp,DWORD PTR [rcx+0x74]
  4459c0:	(bad)  
  4459c1:	ins    BYTE PTR es:[rdi],dx
  4459c2:	outs   dx,DWORD PTR ds:[rsi]
  4459c3:	addr32 cs jo 0x445a2e
  4459c7:	pop    rdi
  4459c8:	outs   dx,BYTE PTR ds:[rsi]
  4459c9:	(bad)  
  4459ca:	ins    DWORD PTR es:[rdi],dx
  4459cb:	gs jae 0x445a3e
  4459ce:	(bad)  
  4459cf:	movsxd esp,DWORD PTR [rbp+0x20]
  4459d2:	outs   dx,BYTE PTR ds:[rsi]
  4459d3:	and    BYTE PTR [rdi+0x4e],cl
  4459d6:	and    BYTE PTR [rsi+0x2e],ch
  4459d9:	outs   dx,DWORD PTR ds:[rsi]
  4459da:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x632e6320
  4459e2:	data16 outs dx,BYTE PTR ds:[esi]
  4459e5:	(bad)  
  4459e6:	ins    DWORD PTR es:[rdi],dx
  4459e7:	gs jae 0x445a5a
  4459ea:	(bad)  
  4459eb:	movsxd esp,DWORD PTR [rbp+0x20]
  4459ee:	or     al,BYTE PTR [rax]
  4459f0:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  4459f8:	je     0x445a5f
  4459fa:	js     0x445a70
  4459fc:	and    BYTE PTR [rbx+0x65],dh
  4459ff:	(bad)  
  445a00:	jb     0x445a65
  445a02:	push   0x6e6f6320
  445a07:	imul   sp,WORD PTR [rdi+0x75],0x6172
  445a0d:	je     0x445a78
  445a0f:	outs   dx,DWORD PTR ds:[rsi]
  445a10:	outs   dx,BYTE PTR ds:[rsi]
  445a11:	jae    0x445a13
  445a13:	add    BYTE PTR [rax],al
  445a15:	add    BYTE PTR [rax],al
  445a17:	add    BYTE PTR [rax+rbp*2+0x65],dl
  445a1b:	and    BYTE PTR [rbx+0x65],dh
  445a1e:	jb     0x445a96
  445a20:	gs jb  0x445a43
  445a23:	sub    BYTE PTR [rsi+0x65],dh
  445a26:	jb     0x445a9b
  445a28:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  445a2f:	and    eax,0x64202964
  445a34:	outs   dx,DWORD PTR ds:[rsi]
  445a35:	gs jae 0x445a58
  445a38:	outs   dx,BYTE PTR ds:[rsi]
  445a39:	outs   dx,DWORD PTR ds:[rsi]
  445a3a:	je     0x445a5c
  445a3c:	jae    0x445ab3
  445a3e:	jo     0x445ab0
  445a40:	outs   dx,DWORD PTR ds:[rsi]
  445a41:	jb     0x445ab7
  445a43:	and    BYTE PTR [rsi+0x6f],ah
  445a46:	jb     0x445aad
  445a48:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  445a4f:	(bad)  
  445a50:	and    BYTE PTR [rdi+0x72],dh
  445a53:	(bad)  
  445a54:	jo     0x445ac6
  445a56:	gs jb  0x445acc
  445a59:	or     al,BYTE PTR cs:[rax]
  445a5c:	add    BYTE PTR [rax],al
  445a5e:	add    BYTE PTR [rax],al
  445a60:	push   rbx
  445a61:	rex.RB
  445a62:	rex.WR
  445a63:	rex.RB
  445a64:	rex.XB push r12
  445a66:	and    BYTE PTR [rsi+0x64],ah
  445a69:	ja     0x445a99
  445a6b:	data16 fs ja 0x445add
  445a6f:	(bad)  
  445a70:	ins    DWORD PTR es:[rdi],dx
  445a71:	and    BYTE PTR gs:[rcx+0x53],al
  445a75:	and    BYTE PTR [rdx],ah
  445a77:	and    eax,0xa2c2273
  445a7c:	and    BYTE PTR [rax],ah
  445a7e:	jo     0x445ae7
  445a80:	pop    rdi
  445a81:	movsxd esp,DWORD PTR [rcx+0x74]
  445a84:	(bad)  
  445a85:	ins    BYTE PTR es:[rdi],dx
  445a86:	outs   dx,DWORD PTR ds:[rsi]
  445a87:	addr32 cs jo 0x445af2
  445a8b:	pop    rdi
  445a8c:	addr32 gs je 0x445aef
  445a90:	jne    0x445b05
  445a92:	gs jb  0x445af7
  445a95:	jns    0x445b00
  445a97:	sub    BYTE PTR fs:[rsi+0x64],ah
  445a9b:	ja     0x445acb
  445a9d:	data16 fs ja 0x445b10
  445aa1:	ja     0x445b11
  445aa3:	gs jb  0x445acf
  445aa6:	and    BYTE PTR [rcx+0x53],al
  445aa9:	and    BYTE PTR [rdx],ah
  445aab:	and    eax,0xa2c2273
  445ab0:	add    BYTE PTR [rax+0x61],cl
  445ab3:	outs   dx,BYTE PTR ds:[rsi]
  445ab4:	fs ins BYTE PTR es:[rdi],dx
  445ab6:	gs jb  0x445ab9
  445ab9:	add    BYTE PTR [rax],al
  445abb:	add    BYTE PTR [rax],al
  445abd:	add    BYTE PTR [rax],al
  445abf:	add    BYTE PTR [rax],ah
  445ac1:	and    BYTE PTR [rsi+0x64],ah
  445ac4:	ja     0x445af4
  445ac6:	data16 fs ja 0x445b32
  445aca:	(bad)  
  445acb:	outs   dx,BYTE PTR ds:[rsi]
  445acc:	fs ins BYTE PTR es:[rdi],dx
  445ace:	gs jb  0x445b0b
  445ad1:	cmp    dh,BYTE PTR [rax+0x67]
  445ad4:	pop    rdi
  445ad5:	movsxd esp,DWORD PTR [rcx+0x74]
  445ad8:	(bad)  
  445ad9:	ins    BYTE PTR es:[rdi],dx
  445ada:	outs   dx,DWORD PTR ds:[rsi]
  445adb:	addr32 cs jb 0x445b44
  445adf:	addr32 jo 0x445b54
  445ae2:	outs   dx,DWORD PTR ds:[rsi]
  445ae3:	movsxd esp,DWORD PTR [rax]
  445ae5:	push   r11
  445ae7:	and    BYTE PTR [rdx],ah
  445ae9:	and    eax,0xa2c2273
  445aee:	add    BYTE PTR [rax],al
  445af0:	and    BYTE PTR [rax],ah
  445af2:	data16 fs ja 0x445b24
  445af6:	data16 fs ja 0x445b70
  445afa:	(bad)  
  445afb:	ins    BYTE PTR es:[rdi],dx
  445afc:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x3a3a726f
  445b04:	jo     0x445b6d
  445b06:	pop    rdi
  445b07:	movsxd esp,DWORD PTR [rcx+0x74]
  445b0a:	(bad)  
  445b0b:	ins    BYTE PTR es:[rdi],dx
  445b0c:	outs   dx,DWORD PTR ds:[rsi]
  445b0d:	addr32 cs jb 0x445b76
  445b11:	addr32 jo 0x445b86
  445b14:	outs   dx,DWORD PTR ds:[rsi]
  445b15:	movsxd esp,DWORD PTR [rax]
  445b17:	push   r11
  445b19:	and    BYTE PTR [rdx],ah
  445b1b:	and    eax,0x66002273
  445b20:	fs ja  0x445b84
  445b23:	movsxd ebp,DWORD PTR [rax+rax*1+0x0]
  445b27:	add    BYTE PTR [rdx+rcx*1],ch
  445b2a:	and    BYTE PTR [rbx+0x41],al
  445b2d:	push   rbx
  445b2e:	and    BYTE PTR [r15+0x48],r10b
  445b32:	rex.RB
  445b33:	rex.WRX and BYTE PTR [rsi+0x64],r12b
  445b37:	ja     0x445ba8
  445b39:	jo     0x445baf
  445b3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x53492073
  445b42:	and    BYTE PTR [rsi+0x55],cl
  445b45:	rex.WR
  445b46:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  445b4b:	rex.WRX and BYTE PTR [rdi],r12b
  445b4e:	(bad)  
  445b4f:	and    BYTE PTR [rbp+0x4c],al
  445b52:	push   rbx
  445b53:	and    BYTE PTR [r8],r12b
  445b56:	and    BYTE PTR [rdi],ah
  445b58:	sub    BYTE PTR [rdi],ah
  445b5a:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  445b5e:	(bad)  
  445b5f:	jb     0x445bd3
  445b61:	(bad)  
  445b62:	jns    0x445bc3
  445b64:	je     0x445bd5
  445b66:	pop    rdi
  445b67:	jae    0x445bdd
  445b69:	jb     0x445bd4
  445b6b:	outs   dx,BYTE PTR ds:[rsi]
  445b6c:	sub    BYTE PTR [ecx+0x52],al
  445b70:	push   rdx
  445b71:	pop    r9
  445b73:	sub    BYTE PTR [rbx+0x45],dl
  445b76:	rex.WR
  445b77:	rex.RB
  445b78:	rex.XB push r12
  445b7a:	and    BYTE PTR [rax],ah
  445b7c:	and    BYTE PTR [rcx+0x75],dh
  445b7f:	outs   dx,DWORD PTR ds:[rsi]
  445b80:	je     0x445be7
  445b82:	pop    rdi
  445b83:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  445b8b:	je     0x445bf6
  445b8d:	outs   dx,DWORD PTR ds:[rsi]
  445b8e:	outs   dx,BYTE PTR ds:[rsi]
  445b8f:	pop    rdi
  445b90:	outs   dx,BYTE PTR ds:[rsi]
  445b91:	(bad)  
  445b92:	ins    DWORD PTR es:[rdi],dx
  445b93:	sub    DWORD PTR gs:[rax],esp
  445b96:	jl     0x445c14
  445b98:	and    BYTE PTR [rax],ah
  445b9a:	(bad)  
  445b9b:	and    BYTE PTR [rdi],ah
  445b9d:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  445ba1:	and    BYTE PTR [rax],ah
  445ba3:	jno    0x445c1a
  445ba5:	outs   dx,DWORD PTR ds:[rsi]
  445ba6:	je     0x445c0d
  445ba8:	pop    rdi
  445ba9:	ins    BYTE PTR es:[rdi],dx
  445baa:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  445bb2:	jo     0x445c28
  445bb4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  445bbb:	jne    0x445c22
  445bbd:	sub    DWORD PTR [rax],esp
  445bbf:	and    BYTE PTR [rsi+0x52],al
  445bc2:	rex.WRXB
  445bc3:	rex.WRB and BYTE PTR [r8],r12b
  445bc6:	and    BYTE PTR [rax+0x67],dh
  445bc9:	pop    rdi
  445bca:	outs   dx,DWORD PTR ds:[rsi]
  445bcb:	jo     0x445c41
  445bcd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  445bd4:	pop    rdi
  445bd5:	je     0x445c38
  445bd7:	(bad)  
  445bd8:	ins    BYTE PTR es:[rdi],dx
  445bd9:	sub    BYTE PTR gs:[rsi+0x64],ah
  445bdd:	ja     0x445c4e
  445bdf:	jo     0x445c55
  445be1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  445be8:	and    BYTE PTR [rax],ah
  445bea:	(bad)  
  445beb:	sub    al,0x20
  445bed:	(bad)  
  445bee:	sub    DWORD PTR [rax],esp
  445bf0:	jl     0x445c6e
  445bf2:	and    BYTE PTR [rdi],ah
  445bf4:	sub    DWORD PTR [rdi],esp
  445bf6:	and    BYTE PTR [rax],ah
  445bf8:	and    BYTE PTR [rbp+0x4e],al
  445bfb:	and    BYTE PTR [rcx+0x53],r8b
  445bff:	and    BYTE PTR [rdx],ah
  445c01:	and    eax,0x2c002273
  445c06:	or     ah,BYTE PTR [rax]
  445c08:	and    BYTE PTR [rsi+rbp*1+0x64],ah
  445c0c:	gs jae 0x445c72
  445c0f:	jb     0x445c7a
  445c11:	jo     0x445c87
  445c13:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  445c1a:	and    ah,BYTE PTR [rip+0x202273]        # 0x647e93
  445c20:	rex.WR
  445c21:	rex.RB
  445c22:	rex.RX push rsp
  445c24:	and    BYTE PTR [rdx+0x4f],cl
  445c27:	rex.WB
  445c28:	rex.WRX and BYTE PTR [rax+0x67],r14b
  445c2c:	pop    rdi
  445c2d:	movsxd esp,DWORD PTR [rcx+0x74]
  445c30:	(bad)  
  445c31:	ins    BYTE PTR es:[rdi],dx
  445c32:	outs   dx,DWORD PTR ds:[rsi]
  445c33:	addr32 cs jo 0x445c9e
  445c37:	pop    rdi
  445c38:	fs gs jae 0x445c9f
  445c3c:	jb     0x445ca7
  445c3e:	jo     0x445cb4
  445c40:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6420
  445c47:	and    BYTE PTR [rax],ah
  445c49:	and    BYTE PTR [rax],ah
  445c4b:	and    BYTE PTR [rax],ah
  445c4d:	rex.WRXB
  445c4e:	rex.WRX and BYTE PTR [rsi+r13*1+0x63],r12b
  445c53:	ins    BYTE PTR es:[rdi],dx
  445c54:	(bad)  
  445c55:	jae    0x445cca
  445c57:	outs   dx,DWORD PTR ds:[rsi]
  445c58:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x77646620
  445c60:	cs je  0x445cc4
  445c63:	(bad)  
  445c64:	ins    BYTE PTR es:[rdi],dx
  445c65:	outs   dx,DWORD PTR gs:[rsi]
  445c67:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  445c6f:	outs   dx,DWORD PTR cs:[rsi]
  445c71:	(bad)  
  445c72:	push   0x6f
  445c74:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x77646620
  445c7c:	outs   dx,DWORD PTR cs:[rsi]
  445c7e:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  445c86:	outs   dx,DWORD PTR cs:[rsi]
  445c88:	(bad)  
  445c89:	push   0x73
  445c8b:	jne    0x445cef
  445c8d:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  445c95:	data16 fs ja 0x445d07
  445c99:	(bad)  
  445c9a:	ins    DWORD PTR es:[rdi],dx
  445c9b:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  445ca0:	je     0x445cc2
  445ca2:	outs   dx,DWORD PTR ds:[rsi]
  445ca3:	data16 and BYTE PTR [rsi+0x6f],ah
  445ca7:	jb     0x445d0e
  445ca9:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  445cb0:	(bad)  
  445cb1:	and    BYTE PTR [rdi+0x72],dh
  445cb4:	(bad)  
  445cb5:	jo     0x445d27
  445cb7:	gs jb  0x445d2d
  445cba:	add    BYTE PTR [rax],al
  445cbc:	add    BYTE PTR [rax],al
  445cbe:	add    BYTE PTR [rax],al
  445cc0:	or     al,BYTE PTR [rsi+0x52]
  445cc3:	rex.WRXB
  445cc4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  445cc8:	pop    rdi
  445cc9:	movsxd esp,DWORD PTR [rcx+0x74]
  445ccc:	(bad)  
  445ccd:	ins    BYTE PTR es:[rdi],dx
  445cce:	outs   dx,DWORD PTR ds:[rsi]
  445ccf:	addr32 cs jo 0x445d3a
  445cd3:	pop    rdi
  445cd4:	outs   dx,WORD PTR ds:[rsi]
  445cd6:	jb     0x445d3d
  445cd8:	imul   esp,DWORD PTR [rdi+0x6e],0x7461645f
  445cdf:	(bad)  
  445ce0:	pop    rdi
  445ce1:	ja     0x445d55
  445ce3:	(bad)  
  445ce4:	jo     0x445d56
  445ce6:	gs jb  0x445d09
  445ce9:	data16 fs ja 0x445cf7
  445ced:	add    BYTE PTR [rax],al
  445cef:	add    BYTE PTR [rax+rbp*2+0x65],dl
  445cf3:	and    BYTE PTR [rbx+0x65],dh
  445cf6:	jb     0x445d6e
  445cf8:	gs jb  0x445d1b
  445cfb:	sub    BYTE PTR [rsi+0x65],dh
  445cfe:	jb     0x445d73
  445d00:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  445d07:	and    eax,0x64202964
  445d0c:	outs   dx,DWORD PTR ds:[rsi]
  445d0d:	gs jae 0x445d30
  445d10:	outs   dx,BYTE PTR ds:[rsi]
  445d11:	outs   dx,DWORD PTR ds:[rsi]
  445d12:	je     0x445d34
  445d14:	jae    0x445d8b
  445d16:	jo     0x445d88
  445d18:	outs   dx,DWORD PTR ds:[rsi]
  445d19:	jb     0x445d8f
  445d1b:	and    BYTE PTR [rsi+0x6f],ah
  445d1e:	jb     0x445d85
  445d20:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  445d27:	jbe    0x445d8e
  445d29:	jb     0x445d9e
  445d2b:	or     al,BYTE PTR cs:[rax]
  445d2e:	add    BYTE PTR [rax],al
  445d30:	push   rbx
  445d31:	rex.RB
  445d32:	rex.WR
  445d33:	rex.RB
  445d34:	rex.XB push r12
  445d36:	and    BYTE PTR [rbx+0x2e],dh
  445d39:	jae    0x445dad
  445d3b:	jbe    0x445dab
  445d3d:	(bad)  
  445d3e:	ins    DWORD PTR es:[rdi],dx
  445d3f:	and    BYTE PTR gs:[rcx+0x53],al
  445d43:	and    BYTE PTR [rdx],ah
  445d45:	and    eax,0xa2c2273
  445d4a:	and    BYTE PTR [rax],ah
  445d4c:	jo     0x445db5
  445d4e:	pop    rdi
  445d4f:	movsxd esp,DWORD PTR [rcx+0x74]
  445d52:	(bad)  
  445d53:	ins    BYTE PTR es:[rdi],dx
  445d54:	outs   dx,DWORD PTR ds:[rsi]
  445d55:	addr32 cs jo 0x445dc0
  445d59:	pop    rdi
  445d5a:	addr32 gs je 0x445dbd
  445d5e:	jne    0x445dd3
  445d60:	gs jb  0x445dc5
  445d63:	jns    0x445dce
  445d65:	sub    BYTE PTR fs:[rbx+0x2e],dh
  445d69:	jae    0x445ddd
  445d6b:	jbe    0x445ddc
  445d6d:	ja     0x445ddd
  445d6f:	gs jb  0x445d9b
  445d72:	and    BYTE PTR [rcx+0x53],al
  445d75:	and    BYTE PTR [rdx],ah
  445d77:	and    eax,0xa2c2273
  445d7c:	and    BYTE PTR [rax],ah
  445d7e:	data16 cs data16 fs ja 0x445df2
  445d84:	(bad)  
  445d85:	ins    DWORD PTR es:[rdi],dx
  445d86:	and    BYTE PTR gs:[rcx+0x53],al
  445d8a:	and    BYTE PTR [rdx],ah
  445d8c:	and    eax,0x46002273
  445d91:	outs   dx,DWORD PTR ds:[rsi]
  445d92:	jb     0x445df9
  445d94:	imul   esp,DWORD PTR [rdi+0x6e],0x7461642d
  445d9b:	(bad)  
  445d9c:	and    BYTE PTR [rdi+0x72],dh
  445d9f:	(bad)  
  445da0:	jo     0x445e12
  445da2:	gs jb  0x445da5
  445da5:	jae    0x445dd5
  445da7:	jae    0x445e1b
  445da9:	jbe    0x445e0c
  445dab:	movsxd ebp,DWORD PTR [rax+rax*1+0x56]
  445daf:	gs jb  0x445e25
  445db2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c000000
  445db9:	or     ah,BYTE PTR [rax]
  445dbb:	and    BYTE PTR [rbx+0x2e],dh
  445dbe:	jae    0x445e32
  445dc0:	jbe    0x445e36
  445dc2:	jns    0x445e34
  445dc4:	and    BYTE PTR gs:[rcx+0x53],al
  445dc8:	and    BYTE PTR [rdx],ah
  445dca:	and    eax,0xa2c2273
  445dcf:	and    BYTE PTR [rax],ah
  445dd1:	jae    0x445e01
  445dd3:	jae    0x445e47
  445dd5:	jbe    0x445e4d
  445dd7:	gs jb  0x445e4d
  445dda:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  445de1:	and    ah,BYTE PTR [rip+0xa2c2273]        # 0xa70805a
  445de7:	and    BYTE PTR [rax],ah
  445de9:	rex.XB
  445dea:	push   r11
  445dec:	and    BYTE PTR [r15+0x48],r10b
  445df0:	rex.RB
  445df1:	rex.WRX and BYTE PTR [rbx+0x72],r14b
  445df5:	jbe    0x445e66
  445df7:	jo     0x445e6d
  445df9:	imul   ebp,DWORD PTR [rdi+0x6e],0x53492073
  445e00:	and    BYTE PTR [rsi+0x55],cl
  445e03:	rex.WR
  445e04:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  445e09:	rex.WRX and BYTE PTR [rdi],r12b
  445e0c:	(bad)  
  445e0d:	and    BYTE PTR [rbp+0x4c],al
  445e10:	push   rbx
  445e11:	and    BYTE PTR [r8],r12b
  445e14:	and    BYTE PTR [rdi],ah
  445e16:	sub    BYTE PTR [rdi],ah
  445e18:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  445e1c:	(bad)  
  445e1d:	jb     0x445e91
  445e1f:	(bad)  
  445e20:	jns    0x445e81
  445e22:	je     0x445e93
  445e24:	pop    rdi
  445e25:	jae    0x445e9b
  445e27:	jb     0x445e92
  445e29:	outs   dx,BYTE PTR ds:[rsi]
  445e2a:	sub    BYTE PTR [ecx+0x52],al
  445e2e:	push   rdx
  445e2f:	pop    r9
  445e31:	sub    BYTE PTR [rbx+0x45],dl
  445e34:	rex.WR
  445e35:	rex.RB
  445e36:	rex.XB push r12
  445e38:	and    BYTE PTR [rax],ah
  445e3a:	and    BYTE PTR [rcx+0x75],dh
  445e3d:	outs   dx,DWORD PTR ds:[rsi]
  445e3e:	je     0x445ea5
  445e40:	pop    rdi
  445e41:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  445e49:	je     0x445eb4
  445e4b:	outs   dx,DWORD PTR ds:[rsi]
  445e4c:	outs   dx,BYTE PTR ds:[rsi]
  445e4d:	pop    rdi
  445e4e:	outs   dx,BYTE PTR ds:[rsi]
  445e4f:	(bad)  
  445e50:	ins    DWORD PTR es:[rdi],dx
  445e51:	sub    DWORD PTR gs:[rax],esp
  445e54:	jl     0x445ed2
  445e56:	and    BYTE PTR [rax],ah
  445e58:	(bad)  
  445e59:	and    BYTE PTR [rdi],ah
  445e5b:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  445e5f:	and    BYTE PTR [rax],ah
  445e61:	jno    0x445ed8
  445e63:	outs   dx,DWORD PTR ds:[rsi]
  445e64:	je     0x445ecb
  445e66:	pop    rdi
  445e67:	ins    BYTE PTR es:[rdi],dx
  445e68:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  445e70:	jo     0x445ee6
  445e72:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  445e79:	jne    0x445ee0
  445e7b:	sub    DWORD PTR [rax],esp
  445e7d:	and    BYTE PTR [rsi+0x52],al
  445e80:	rex.WRXB
  445e81:	rex.WRB and BYTE PTR [r8],r12b
  445e84:	and    BYTE PTR [rax+0x67],dh
  445e87:	pop    rdi
  445e88:	outs   dx,DWORD PTR ds:[rsi]
  445e89:	jo     0x445eff
  445e8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  445e92:	pop    rdi
  445e93:	je     0x445ef6
  445e95:	(bad)  
  445e96:	ins    BYTE PTR es:[rdi],dx
  445e97:	sub    BYTE PTR gs:[rbx+0x72],dh
  445e9b:	jbe    0x445f0c
  445e9d:	jo     0x445f13
  445e9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  445ea6:	and    BYTE PTR [rax],ah
  445ea8:	(bad)  
  445ea9:	sub    al,0x20
  445eab:	(bad)  
  445eac:	sub    DWORD PTR [rax],esp
  445eae:	jl     0x445f2c
  445eb0:	and    BYTE PTR [rdi],ah
  445eb2:	sub    DWORD PTR [rdi],esp
  445eb4:	and    BYTE PTR [rax],ah
  445eb6:	and    BYTE PTR [rbp+0x4e],al
  445eb9:	and    BYTE PTR [rcx+0x53],r8b
  445ebd:	and    BYTE PTR [rdx],ah
  445ebf:	and    eax,0xa2c2273
  445ec4:	and    BYTE PTR [rax],ah
  445ec6:	fs cs fs gs jae 0x445f2f
  445ecc:	jb     0x445f37
  445ece:	jo     0x445f44
  445ed0:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  445ed7:	and    ah,BYTE PTR [rip+0x2273]        # 0x448150
  445edd:	add    BYTE PTR [rax],al
  445edf:	add    BYTE PTR [rdx],cl
  445ee1:	rex.RX push rdx
  445ee3:	rex.WRXB
  445ee4:	rex.WRB and BYTE PTR [r8+0x67],r14b
  445ee8:	pop    rdi
  445ee9:	movsxd esp,DWORD PTR [rcx+0x74]
  445eec:	(bad)  
  445eed:	ins    BYTE PTR es:[rdi],dx
  445eee:	outs   dx,DWORD PTR ds:[rsi]
  445eef:	addr32 cs jo 0x445f5a
  445ef3:	pop    rdi
  445ef4:	outs   dx,WORD PTR ds:[rsi]
  445ef6:	jb     0x445f5d
  445ef8:	imul   esp,DWORD PTR [rdi+0x6e],0x7265735f
  445eff:	jbe    0x445f66
  445f01:	jb     0x445f23
  445f03:	jae    0x445f0f
  445f05:	and    BYTE PTR [rax],ah
  445f07:	and    BYTE PTR [rax],ah
  445f09:	and    BYTE PTR [rdx+0x4f],cl
  445f0c:	rex.WB
  445f0d:	rex.WRX and BYTE PTR [rax+0x67],r14b
  445f11:	pop    rdi
  445f12:	movsxd esp,DWORD PTR [rcx+0x74]
  445f15:	(bad)  
  445f16:	ins    BYTE PTR es:[rdi],dx
  445f17:	outs   dx,DWORD PTR ds:[rsi]
  445f18:	addr32 cs jo 0x445f83
  445f1c:	pop    rdi
  445f1d:	outs   dx,WORD PTR ds:[rsi]
  445f1f:	jb     0x445f86
  445f21:	imul   esp,DWORD PTR [rdi+0x6e],0x7461645f
  445f28:	(bad)  
  445f29:	pop    rdi
  445f2a:	ja     0x445f9e
  445f2c:	(bad)  
  445f2d:	jo     0x445f9f
  445f2f:	gs jb  0x445f52
  445f32:	data16 and BYTE PTR [rdi+0x4e],cl
  445f36:	and    BYTE PTR [rsi+0x2e],ah
  445f39:	outs   dx,DWORD PTR ds:[rsi]
  445f3a:	imul   esp,DWORD PTR [rbp+rdi*1+0x73],0x7672732e
  445f42:	data16 fs ja 0x445f50
  445f46:	add    BYTE PTR [rax],al
  445f48:	rex.WR
  445f49:	rex.RB
  445f4a:	rex.RX push rsp
  445f4c:	and    BYTE PTR [rdx+0x4f],cl
  445f4f:	rex.WB
  445f50:	rex.WRX and BYTE PTR [rax+0x67],r14b
  445f54:	pop    rdi
  445f55:	fs gs jae 0x445fbc
  445f59:	jb     0x445fc4
  445f5b:	jo     0x445fd1
  445f5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6420
  445f64:	and    BYTE PTR [rax],ah
  445f66:	and    BYTE PTR [rax],ah
  445f68:	and    BYTE PTR [rax],ah
  445f6a:	rex.WRXB
  445f6b:	rex.WRX and BYTE PTR [rsi+r13*1+0x63],r12b
  445f70:	ins    BYTE PTR es:[rdi],dx
  445f71:	(bad)  
  445f72:	jae    0x445fe7
  445f74:	outs   dx,DWORD PTR ds:[rsi]
  445f75:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e7320
  445f7d:	(bad)  
  445f7e:	(bad)  
  445f7f:	ins    BYTE PTR es:[rdi],dx
  445f80:	outs   dx,DWORD PTR gs:[rsi]
  445f82:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  445f8a:	outs   dx,DWORD PTR cs:[rsi]
  445f8c:	(bad)  
  445f8d:	push   0x6f
  445f8f:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e7320
  445f97:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  445f9f:	outs   dx,DWORD PTR cs:[rsi]
  445fa1:	(bad)  
  445fa2:	push   0x73
  445fa4:	jne    0x446008
  445fa6:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  445fae:	jae    0x445fde
  445fb0:	jae    0x446024
  445fb2:	jbe    0x446022
  445fb4:	(bad)  
  445fb5:	ins    DWORD PTR es:[rdi],dx
  445fb6:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  445fbb:	je     0x445fdd
  445fbd:	outs   dx,DWORD PTR ds:[rsi]
  445fbe:	data16 and BYTE PTR [rsi+0x6f],ah
  445fc2:	jb     0x446029
  445fc4:	imul   esp,DWORD PTR [rdi+0x6e],0x72657320
  445fcb:	jbe    0x446032
  445fcd:	jb     0x446042
  445fcf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  445fd3:	and    BYTE PTR [rbx+0x65],dh
  445fd6:	jb     0x44604e
  445fd8:	gs jb  0x445ffb
  445fdb:	sub    BYTE PTR [rsi+0x65],dh
  445fde:	jb     0x446053
  445fe0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  445fe7:	and    eax,0x64202964
  445fec:	outs   dx,DWORD PTR ds:[rsi]
  445fed:	gs jae 0x446010
  445ff0:	outs   dx,BYTE PTR ds:[rsi]
  445ff1:	outs   dx,DWORD PTR ds:[rsi]
  445ff2:	je     0x446014
  445ff4:	jae    0x44606b
  445ff6:	jo     0x446068
  445ff8:	outs   dx,DWORD PTR ds:[rsi]
  445ff9:	jb     0x44606f
  445ffb:	and    BYTE PTR [rbp+0x73],dh
  445ffe:	gs jb  0x446021
  446001:	ins    DWORD PTR es:[rdi],dx
  446002:	(bad)  
  446003:	jo     0x446075
  446005:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e73
  44600c:	push   rbp
  44600d:	jae    0x446074
  44600f:	jb     0x446031
  446011:	outs   dx,BYTE PTR ds:[rsi]
  446012:	(bad)  
  446013:	ins    DWORD PTR es:[rdi],dx
  446014:	add    BYTE PTR gs:[rbx+0x65],dl
  446018:	jb     0x446090
  44601a:	gs jb  0x44601d
  44601d:	add    BYTE PTR [rax],al
  44601f:	add    BYTE PTR [rbx+0x45],dl
  446022:	rex.WR
  446023:	rex.RB
  446024:	rex.XB push r12
  446026:	and    BYTE PTR [rbp+0x6d],dh
  446029:	cs jae 0x44609e
  44602c:	jbe    0x44609c
  44602e:	(bad)  
  44602f:	ins    DWORD PTR es:[rdi],dx
  446030:	and    BYTE PTR gs:[rcx+0x53],al
  446034:	and    BYTE PTR [rdx],ah
  446036:	and    eax,0xa2c2273
  44603b:	and    BYTE PTR [rax],ah
  44603d:	jne    0x4460ac
  44603f:	cs jne 0x4460b5
  446042:	outs   dx,BYTE PTR gs:[rsi]
  446044:	(bad)  
  446045:	ins    DWORD PTR es:[rdi],dx
  446046:	and    BYTE PTR gs:[rcx+0x53],al
  44604a:	and    BYTE PTR [rdx],ah
  44604c:	and    eax,0x2c002273
  446051:	or     ah,BYTE PTR [rax]
  446053:	rex.XB
  446054:	push   r11
  446056:	and    BYTE PTR [r15+0x48],r10b
  44605a:	rex.RB
  44605b:	rex.WRX and BYTE PTR [rbp+0x6d],r14b
  44605f:	outs   dx,DWORD PTR ds:[rsi]
  446060:	jo     0x4460d6
  446062:	imul   ebp,DWORD PTR [rdi+0x6e],0x53492073
  446069:	and    BYTE PTR [rsi+0x55],cl
  44606c:	rex.WR
  44606d:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  446072:	rex.WRX and BYTE PTR [rdi],r12b
  446075:	(bad)  
  446076:	and    BYTE PTR [rbp+0x4c],al
  446079:	push   rbx
  44607a:	and    BYTE PTR [r8],r12b
  44607d:	and    BYTE PTR [rdi],ah
  44607f:	sub    BYTE PTR [rdi],ah
  446081:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  446085:	(bad)  
  446086:	jb     0x4460fa
  446088:	(bad)  
  446089:	jns    0x4460ea
  44608b:	je     0x4460fc
  44608d:	pop    rdi
  44608e:	jae    0x446104
  446090:	jb     0x4460fb
  446092:	outs   dx,BYTE PTR ds:[rsi]
  446093:	sub    BYTE PTR [ecx+0x52],al
  446097:	push   rdx
  446098:	pop    r9
  44609a:	sub    BYTE PTR [rbx+0x45],dl
  44609d:	rex.WR
  44609e:	rex.RB
  44609f:	rex.XB push r12
  4460a1:	and    BYTE PTR [rax],ah
  4460a3:	and    BYTE PTR [rcx+0x75],dh
  4460a6:	outs   dx,DWORD PTR ds:[rsi]
  4460a7:	je     0x44610e
  4460a9:	pop    rdi
  4460aa:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  4460b2:	je     0x44611d
  4460b4:	outs   dx,DWORD PTR ds:[rsi]
  4460b5:	outs   dx,BYTE PTR ds:[rsi]
  4460b6:	pop    rdi
  4460b7:	outs   dx,BYTE PTR ds:[rsi]
  4460b8:	(bad)  
  4460b9:	ins    DWORD PTR es:[rdi],dx
  4460ba:	sub    DWORD PTR gs:[rax],esp
  4460bd:	jl     0x44613b
  4460bf:	and    BYTE PTR [rax],ah
  4460c1:	(bad)  
  4460c2:	and    BYTE PTR [rdi],ah
  4460c4:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4460c8:	and    BYTE PTR [rax],ah
  4460ca:	jno    0x446141
  4460cc:	outs   dx,DWORD PTR ds:[rsi]
  4460cd:	je     0x446134
  4460cf:	pop    rdi
  4460d0:	ins    BYTE PTR es:[rdi],dx
  4460d1:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  4460d9:	jo     0x44614f
  4460db:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  4460e2:	jne    0x446149
  4460e4:	sub    DWORD PTR [rax],esp
  4460e6:	and    BYTE PTR [rsi+0x52],al
  4460e9:	rex.WRXB
  4460ea:	rex.WRB and BYTE PTR [r8],r12b
  4460ed:	and    BYTE PTR [rax+0x67],dh
  4460f0:	pop    rdi
  4460f1:	outs   dx,DWORD PTR ds:[rsi]
  4460f2:	jo     0x446168
  4460f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  4460fb:	pop    rdi
  4460fc:	je     0x44615f
  4460fe:	(bad)  
  4460ff:	ins    BYTE PTR es:[rdi],dx
  446100:	sub    BYTE PTR gs:[rbp+0x6d],dh
  446104:	outs   dx,DWORD PTR ds:[rsi]
  446105:	jo     0x44617b
  446107:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  44610e:	and    BYTE PTR [rax],ah
  446110:	(bad)  
  446111:	sub    al,0x20
  446113:	(bad)  
  446114:	sub    DWORD PTR [rax],esp
  446116:	jl     0x446194
  446118:	and    BYTE PTR [rdi],ah
  44611a:	sub    DWORD PTR [rdi],esp
  44611c:	and    BYTE PTR [rax],ah
  44611e:	and    BYTE PTR [rbp+0x4e],al
  446121:	and    BYTE PTR [rcx+0x53],r8b
  446125:	and    BYTE PTR [rdx],ah
  446127:	and    eax,0x2273
  44612c:	add    BYTE PTR [rax],al
  44612e:	add    BYTE PTR [rax],al
  446130:	or     al,BYTE PTR [rsi+0x52]
  446133:	rex.WRXB
  446134:	rex.WRB and BYTE PTR [r8+0x67],r14b
  446138:	pop    rdi
  446139:	movsxd esp,DWORD PTR [rcx+0x74]
  44613c:	(bad)  
  44613d:	ins    BYTE PTR es:[rdi],dx
  44613e:	outs   dx,DWORD PTR ds:[rsi]
  44613f:	addr32 cs jo 0x4461aa
  446143:	pop    rdi
  446144:	jne    0x4461b9
  446146:	gs jb  0x4461a8
  446149:	ins    DWORD PTR es:[rdi],dx
  44614a:	(bad)  
  44614b:	jo     0x4461bd
  44614d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d752073
  446154:	or     al,BYTE PTR [rax]
  446156:	jne    0x4461c5
  446158:	cs jne 0x4461ce
  44615b:	outs   dx,BYTE PTR gs:[rsi]
  44615d:	(bad)  
  44615e:	ins    DWORD PTR es:[rdi],dx
  44615f:	add    BYTE PTR gs:[rbp+0x6d],dh
  446163:	cs jae 0x4461d8
  446166:	jbe    0x4461d6
  446168:	(bad)  
  446169:	ins    DWORD PTR es:[rdi],dx
  44616a:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  44616f:	je     0x446191
  446171:	outs   dx,DWORD PTR ds:[rsi]
  446172:	data16 and BYTE PTR [rbp+0x73],dh
  446176:	gs jb  0x446199
  446179:	ins    DWORD PTR es:[rdi],dx
  44617a:	(bad)  
  44617b:	jo     0x4461ed
  44617d:	imul   ebp,DWORD PTR [rsi+0x67],0x73
  446184:	add    BYTE PTR [rax],al
  446186:	add    BYTE PTR [rax],al
  446188:	push   rsp
  446189:	push   0x65732065
  44618e:	jb     0x446206
  446190:	gs jb  0x4461b3
  446193:	sub    BYTE PTR [rsi+0x65],dh
  446196:	jb     0x44620b
  446198:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  44619f:	and    eax,0x64202964
  4461a4:	outs   dx,DWORD PTR ds:[rsi]
  4461a5:	gs jae 0x4461c8
  4461a8:	outs   dx,BYTE PTR ds:[rsi]
  4461a9:	outs   dx,DWORD PTR ds:[rsi]
  4461aa:	je     0x4461cc
  4461ac:	jae    0x446223
  4461ae:	jo     0x446220
  4461b0:	outs   dx,DWORD PTR ds:[rsi]
  4461b1:	jb     0x446227
  4461b3:	and    BYTE PTR [rsi+0x6f],ah
  4461b6:	jb     0x44621d
  4461b8:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  4461bf:	ins    BYTE PTR es:[rdi],dx
  4461c0:	gs jae 0x4461f1
  4461c3:	or     al,BYTE PTR [rax]
  4461c5:	add    BYTE PTR [rax],al
  4461c7:	add    BYTE PTR [rbx+0x45],dl
  4461ca:	rex.WR
  4461cb:	rex.RB
  4461cc:	rex.XB push r12
  4461ce:	and    BYTE PTR [rsi+0x2e],ch
  4461d1:	outs   dx,BYTE PTR ds:[rsi]
  4461d2:	jae    0x446244
  4461d4:	outs   dx,BYTE PTR ds:[rsi]
  4461d5:	(bad)  
  4461d6:	ins    DWORD PTR es:[rdi],dx
  4461d7:	and    BYTE PTR gs:[rcx+0x53],al
  4461db:	and    BYTE PTR [rdx],ah
  4461dd:	and    eax,0xa2c2273
  4461e2:	and    BYTE PTR [rax],ah
  4461e4:	movsxd ebp,DWORD PTR [rsi]
  4461e6:	jb     0x44624d
  4461e8:	ins    BYTE PTR es:[rdi],dx
  4461e9:	outs   dx,BYTE PTR ds:[rsi]
  4461ea:	(bad)  
  4461eb:	ins    DWORD PTR es:[rdi],dx
  4461ec:	and    BYTE PTR gs:[rcx+0x53],al
  4461f0:	and    BYTE PTR [rdx],ah
  4461f2:	and    eax,0xa2c2273
  4461f7:	and    BYTE PTR [rax],ah
  4461f9:	jae    0x446229
  4461fb:	jae    0x44626f
  4461fd:	jbe    0x44626d
  4461ff:	(bad)  
  446200:	ins    DWORD PTR es:[rdi],dx
  446201:	and    BYTE PTR gs:[rcx+0x53],al
  446205:	and    BYTE PTR [rdx],ah
  446207:	and    eax,0x2273
  44620c:	add    BYTE PTR [rax],al
  44620e:	add    BYTE PTR [rax],al
  446210:	sub    al,0xa
  446212:	and    BYTE PTR [rbx+0x41],al
  446215:	push   rbx
  446216:	and    BYTE PTR [r15+0x48],r10b
  44621a:	rex.RB
  44621b:	rex.WRX and BYTE PTR [rsi+0x74],r12b
  44621f:	outs   dx,DWORD PTR ds:[rsi]
  446220:	jo     0x446296
  446222:	imul   ebp,DWORD PTR [rdi+0x6e],0x53492073
  446229:	and    BYTE PTR [rsi+0x55],cl
  44622c:	rex.WR
  44622d:	rex.WR and BYTE PTR [rax+rcx*2+0x45],r10b
  446232:	rex.WRX and BYTE PTR [rdi],r12b
  446235:	(bad)  
  446236:	and    BYTE PTR [rbp+0x4c],al
  446239:	push   rbx
  44623a:	and    BYTE PTR [r8],r12b
  44623d:	and    BYTE PTR [rdi],ah
  44623f:	sub    BYTE PTR [rdi],ah
  446241:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  446245:	(bad)  
  446246:	jb     0x4462ba
  446248:	(bad)  
  446249:	jns    0x4462aa
  44624b:	je     0x4462bc
  44624d:	pop    rdi
  44624e:	jae    0x4462c4
  446250:	jb     0x4462bb
  446252:	outs   dx,BYTE PTR ds:[rsi]
  446253:	sub    BYTE PTR [ecx+0x52],al
  446257:	push   rdx
  446258:	pop    r9
  44625a:	sub    BYTE PTR [rbx+0x45],dl
  44625d:	rex.WR
  44625e:	rex.RB
  44625f:	rex.XB push r12
  446261:	and    BYTE PTR [rax],ah
  446263:	and    BYTE PTR [rcx+0x75],dh
  446266:	outs   dx,DWORD PTR ds:[rsi]
  446267:	je     0x4462ce
  446269:	pop    rdi
  44626a:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x706f2874
  446272:	je     0x4462dd
  446274:	outs   dx,DWORD PTR ds:[rsi]
  446275:	outs   dx,BYTE PTR ds:[rsi]
  446276:	pop    rdi
  446277:	outs   dx,BYTE PTR ds:[rsi]
  446278:	(bad)  
  446279:	ins    DWORD PTR es:[rdi],dx
  44627a:	sub    DWORD PTR gs:[rax],esp
  44627d:	jl     0x4462fb
  44627f:	and    BYTE PTR [rax],ah
  446281:	(bad)  
  446282:	and    BYTE PTR [rdi],ah
  446284:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  446288:	and    BYTE PTR [rax],ah
  44628a:	jno    0x446301
  44628c:	outs   dx,DWORD PTR ds:[rsi]
  44628d:	je     0x4462f4
  44628f:	pop    rdi
  446290:	ins    BYTE PTR es:[rdi],dx
  446291:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f286c61
  446299:	jo     0x44630f
  44629b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  4462a2:	jne    0x446309
  4462a4:	sub    DWORD PTR [rax],esp
  4462a6:	and    BYTE PTR [rsi+0x52],al
  4462a9:	rex.WRXB
  4462aa:	rex.WRB and BYTE PTR [r8],r12b
  4462ad:	and    BYTE PTR [rax+0x67],dh
  4462b0:	pop    rdi
  4462b1:	outs   dx,DWORD PTR ds:[rsi]
  4462b2:	jo     0x446328
  4462b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f745f73
  4462bb:	pop    rdi
  4462bc:	je     0x44631f
  4462be:	(bad)  
  4462bf:	ins    BYTE PTR es:[rdi],dx
  4462c0:	sub    BYTE PTR gs:[rsi+0x74],ah
  4462c4:	outs   dx,DWORD PTR ds:[rsi]
  4462c5:	jo     0x44633b
  4462c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c292973
  4462ce:	and    BYTE PTR [rax],ah
  4462d0:	(bad)  
  4462d1:	sub    al,0x20
  4462d3:	(bad)  
  4462d4:	sub    DWORD PTR [rax],esp
  4462d6:	jl     0x446354
  4462d8:	and    BYTE PTR [rdi],ah
  4462da:	sub    DWORD PTR [rdi],esp
  4462dc:	and    BYTE PTR [rax],ah
  4462de:	and    BYTE PTR [rbp+0x4e],al
  4462e1:	and    BYTE PTR [rcx+0x53],r8b
  4462e5:	and    BYTE PTR [rdx],ah
  4462e7:	and    eax,0xa2c2273
  4462ec:	and    BYTE PTR [rax],ah
  4462ee:	fs cs fs gs jae 0x446357
  4462f4:	jb     0x44635f
  4462f6:	jo     0x44636c
  4462f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  4462ff:	and    ah,BYTE PTR [rip+0x2273]        # 0x448578
  446305:	add    BYTE PTR [rax],al
  446307:	add    BYTE PTR [rdx],cl
  446309:	rex.RX push rdx
  44630b:	rex.WRXB
  44630c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  446310:	pop    rdi
  446311:	movsxd esp,DWORD PTR [rcx+0x74]
  446314:	(bad)  
  446315:	ins    BYTE PTR es:[rdi],dx
  446316:	outs   dx,DWORD PTR ds:[rsi]
  446317:	addr32 cs jo 0x446382
  44631b:	pop    rdi
  44631c:	outs   dx,WORD PTR ds:[rsi]
  44631e:	jb     0x446385
  446320:	imul   esp,DWORD PTR [rdi+0x6e],0x6261745f
  446327:	ins    BYTE PTR es:[rdi],dx
  446328:	and    BYTE PTR gs:[rsi+0x74],ah
  44632c:	or     ah,BYTE PTR [rax]
  44632e:	and    BYTE PTR [rcx+0x4e],cl
  446331:	rex.WRX
  446332:	rex.RB push r10
  446334:	and    BYTE PTR [rdx+0x4f],cl
  446337:	rex.WB
  446338:	rex.WRX and BYTE PTR [rax+0x67],r14b
  44633c:	pop    rdi
  44633d:	movsxd esp,DWORD PTR [rcx+0x74]
  446340:	(bad)  
  446341:	ins    BYTE PTR es:[rdi],dx
  446342:	outs   dx,DWORD PTR ds:[rsi]
  446343:	addr32 cs jo 0x4463ae
  446347:	pop    rdi
  446348:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44634c:	jae    0x44636e
  44634e:	movsxd esp,DWORD PTR [rax]
  446350:	rex.WRXB
  446351:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  446355:	outs   dx,DWORD PTR ds:[rsi]
  446356:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e746620
  44635e:	data16 je 0x4463d3
  446361:	gs ins BYTE PTR es:[rdi],dx
  446363:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x4e4e4920
  44636b:	rex.RB push r10
  44636d:	and    BYTE PTR [rdx+0x4f],cl
  446370:	rex.WB
  446371:	rex.WRX and BYTE PTR [rax+0x67],r14b
  446375:	pop    rdi
  446376:	movsxd esp,DWORD PTR [rcx+0x74]
  446379:	(bad)  
  44637a:	ins    BYTE PTR es:[rdi],dx
  44637b:	outs   dx,DWORD PTR ds:[rsi]
  44637c:	addr32 cs jo 0x4463e7
  446380:	pop    rdi
  446381:	outs   dx,BYTE PTR ds:[rsi]
  446382:	(bad)  
  446383:	ins    DWORD PTR es:[rdi],dx
  446384:	gs jae 0x4463f7
  446387:	(bad)  
  446388:	movsxd esp,DWORD PTR [rbp+0x20]
  44638b:	outs   dx,BYTE PTR ds:[rsi]
  44638c:	and    BYTE PTR [rdi+0x4e],cl
  44638f:	and    BYTE PTR [rsi+0x2e],ch
  446392:	outs   dx,DWORD PTR ds:[rsi]
  446393:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x722e6320
  44639b:	gs ins BYTE PTR es:[rdi],dx
  44639d:	outs   dx,BYTE PTR ds:[rsi]
  44639e:	(bad)  
  44639f:	ins    DWORD PTR es:[rdi],dx
  4463a0:	gs jae 0x446413
  4463a3:	(bad)  
  4463a4:	movsxd esp,DWORD PTR [rbp+0xa]
  4463a7:	and    BYTE PTR [rax],ah
  4463a9:	rex.WB
  4463aa:	rex.WRX
  4463ab:	rex.WRX
  4463ac:	rex.RB push r10
  4463ae:	and    BYTE PTR [rdx+0x4f],cl
  4463b1:	rex.WB
  4463b2:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4463b6:	pop    rdi
  4463b7:	movsxd esp,DWORD PTR [rcx+0x74]
  4463ba:	(bad)  
  4463bb:	ins    BYTE PTR es:[rdi],dx
  4463bc:	outs   dx,DWORD PTR ds:[rsi]
  4463bd:	addr32 cs jo 0x446428
  4463c1:	pop    rdi
  4463c2:	outs   dx,WORD PTR ds:[rsi]
  4463c4:	jb     0x44642b
  4463c6:	imul   esp,DWORD PTR [rdi+0x6e],0x7265735f
  4463cd:	jbe    0x446434
  4463cf:	jb     0x4463f1
  4463d1:	jae    0x4463f3
  4463d3:	rex.WRXB
  4463d4:	rex.WRX and BYTE PTR [rbx+0x2e],r14b
  4463d8:	outs   dx,DWORD PTR ds:[rsi]
  4463d9:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x2e746620
  4463e1:	data16 je 0x446457
  4463e4:	gs jb  0x44645d
  4463e7:	gs jb  0x4463f4
  4463ea:	add    BYTE PTR [rax],al
  4463ec:	add    BYTE PTR [rax],al
  4463ee:	add    BYTE PTR [rax],al
  4463f0:	and    BYTE PTR [rax],ah
  4463f2:	and    BYTE PTR [rbp+rax*2+0x46],cl
  4463f6:	push   rsp
  4463f7:	and    BYTE PTR [rdx+0x4f],cl
  4463fa:	rex.WB
  4463fb:	rex.WRX and BYTE PTR [rax+0x67],r14b
  4463ff:	pop    rdi
  446400:	movsxd esp,DWORD PTR [rcx+0x74]
  446403:	(bad)  
  446404:	ins    BYTE PTR es:[rdi],dx
  446405:	outs   dx,DWORD PTR ds:[rsi]
  446406:	addr32 cs jo 0x446471
  44640a:	pop    rdi
  44640b:	fs gs jae 0x446472
  44640f:	jb     0x44647a
  446411:	jo     0x446487
  446413:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a6420
  44641a:	and    BYTE PTR [rax],ah
  44641c:	and    BYTE PTR [rax],ah
  44641e:	and    BYTE PTR [rax],ah
  446420:	and    BYTE PTR [rax],ah
  446422:	and    BYTE PTR [rdi+0x4e],cl
  446425:	and    BYTE PTR [rsi+rbp*1+0x63],ah
  446429:	ins    BYTE PTR es:[rdi],dx
  44642a:	(bad)  
  44642b:	jae    0x4464a0
  44642d:	outs   dx,DWORD PTR ds:[rsi]
  44642e:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x742e6320
  446436:	(bad)  
  446437:	(bad)  
  446438:	ins    BYTE PTR es:[rdi],dx
  446439:	outs   dx,DWORD PTR gs:[rsi]
  44643b:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  446443:	outs   dx,DWORD PTR cs:[rsi]
  446445:	(bad)  
  446446:	push   0x6f
  446448:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6320
  446450:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6420444e
  446458:	outs   dx,DWORD PTR cs:[rsi]
  44645a:	(bad)  
  44645b:	push   0x73
  44645d:	jne    0x4464c1
  44645f:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa3020
  446467:	imul   r14,QWORD PTR [rbx+0x74],0x20666f20
  44646f:	outs   dx,WORD PTR ds:[rsi]
  446471:	jb     0x4464d8
  446473:	imul   esp,DWORD PTR [rdi+0x6e],0x62617420
  44647a:	ins    BYTE PTR es:[rdi],dx
  44647b:	gs jae 0x44647e
  44647e:	add    BYTE PTR [rax],al
  446480:	push   rsp
  446481:	push   0x65732065
  446486:	jb     0x4464fe
  446488:	gs jb  0x4464ab
  44648b:	sub    BYTE PTR [rsi+0x65],dh
  44648e:	jb     0x446503
  446490:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  446497:	and    eax,0x64202964
  44649c:	outs   dx,DWORD PTR ds:[rsi]
  44649d:	gs jae 0x4464c0
  4464a0:	outs   dx,BYTE PTR ds:[rsi]
  4464a1:	outs   dx,DWORD PTR ds:[rsi]
  4464a2:	je     0x4464c4
  4464a4:	jae    0x44651b
  4464a6:	jo     0x446518
  4464a8:	outs   dx,DWORD PTR ds:[rsi]
  4464a9:	jb     0x44651f
  4464ab:	and    BYTE PTR [rbp+0x78],ah
  4464ae:	je     0x446515
  4464b0:	outs   dx,BYTE PTR ds:[rsi]
  4464b1:	jae    0x44651c
  4464b3:	outs   dx,DWORD PTR ds:[rsi]
  4464b4:	outs   dx,BYTE PTR ds:[rsi]
  4464b5:	jae    0x4464e5
  4464b7:	or     al,BYTE PTR [rax]
  4464b9:	add    BYTE PTR [rax],al
  4464bb:	add    BYTE PTR [rax],al
  4464bd:	add    BYTE PTR [rax],al
  4464bf:	add    BYTE PTR [rbx+0x45],dl
  4464c2:	rex.WR
  4464c3:	rex.RB
  4464c4:	rex.XB push r12
  4464c6:	and    BYTE PTR [rbp+0x2e],ah
  4464c9:	gs js  0x446540
  4464cc:	outs   dx,BYTE PTR ds:[rsi]
  4464cd:	(bad)  
  4464ce:	ins    DWORD PTR es:[rdi],dx
  4464cf:	and    BYTE PTR gs:[rcx+0x53],al
  4464d3:	and    BYTE PTR [rdx],ah
  4464d5:	and    eax,0x202c2273
  4464da:	gs cs gs js 0x446553
  4464df:	jbe    0x446546
  4464e1:	jb     0x446556
  4464e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  4464ea:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x20708763
  4464f0:	outs   dx,BYTE PTR ds:[rsi]
  4464f1:	outs   dx,BYTE PTR cs:[rsi]
  4464f3:	jae    0x446565
  4464f5:	outs   dx,BYTE PTR ds:[rsi]
  4464f6:	(bad)  
  4464f7:	ins    DWORD PTR es:[rdi],dx
  4464f8:	and    BYTE PTR gs:[rcx+0x53],al
  4464fc:	and    BYTE PTR [rdx],ah
  4464fe:	and    eax,0x202c2273
  446503:	movsxd ebp,DWORD PTR [rsi]
  446505:	fs gs jae 0x44656c
  446509:	jb     0x446574
  44650b:	jo     0x446581
  44650d:	imul   ebp,DWORD PTR [rdi+0x6e],0x20534120
  446514:	and    ah,BYTE PTR [rip+0x460a2273]        # 0x464e878d
  44651a:	push   rdx
  44651b:	rex.WRXB
  44651c:	rex.WRB and BYTE PTR [r8+0x67],r14b
  446520:	pop    rdi
  446521:	movsxd esp,DWORD PTR [rcx+0x74]
  446524:	(bad)  
  446525:	ins    BYTE PTR es:[rdi],dx
  446526:	outs   dx,DWORD PTR ds:[rsi]
  446527:	addr32 cs jo 0x446592
  44652b:	pop    rdi
  44652c:	gs js  0x4465a3
  44652f:	outs   dx,BYTE PTR gs:[rsi]
  446531:	jae    0x44659c
  446533:	outs   dx,DWORD PTR ds:[rsi]
  446534:	outs   dx,BYTE PTR ds:[rsi]
  446535:	and    BYTE PTR [rbp+0x20],ah
  446538:	rex.WR
  446539:	rex.RB
  44653a:	rex.RX push rsp
  44653c:	and    BYTE PTR [rdx+0x4f],cl
  44653f:	rex.WB
  446540:	rex.WRX and BYTE PTR [rax+0x67],r14b
  446544:	pop    rdi
  446545:	movsxd esp,DWORD PTR [rcx+0x74]
  446548:	(bad)  
  446549:	ins    BYTE PTR es:[rdi],dx
  44654a:	outs   dx,DWORD PTR ds:[rsi]
  44654b:	addr32 cs jo 0x4465b6
  44654f:	pop    rdi
  446550:	outs   dx,BYTE PTR ds:[rsi]
  446551:	(bad)  
  446552:	ins    DWORD PTR es:[rdi],dx
  446553:	gs jae 0x4465c6
  446556:	(bad)  
  446557:	movsxd esp,DWORD PTR [rbp+0x20]
  44655a:	outs   dx,BYTE PTR ds:[rsi]
  44655b:	and    BYTE PTR [rdi+0x4e],cl
  44655e:	and    BYTE PTR [rsi+0x2e],ch
  446561:	outs   dx,DWORD PTR ds:[rsi]
  446562:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x652e6520
  44656a:	js     0x4465e0
  44656c:	outs   dx,BYTE PTR ds:[rsi]
  44656d:	(bad)  
  44656e:	ins    DWORD PTR es:[rdi],dx
  44656f:	gs jae 0x4465e2
  446572:	(bad)  
  446573:	movsxd esp,DWORD PTR [rbp+0x20]
  446576:	rex.WR
  446577:	rex.RB
  446578:	rex.RX push rsp
  44657a:	and    BYTE PTR [rdx+0x4f],cl
  44657d:	rex.WB
  44657e:	rex.WRX and BYTE PTR [rax+0x67],r14b
  446582:	pop    rdi
  446583:	movsxd esp,DWORD PTR [rcx+0x74]
  446586:	(bad)  
  446587:	ins    BYTE PTR es:[rdi],dx
  446588:	outs   dx,DWORD PTR ds:[rsi]
  446589:	addr32 cs jo 0x4465f4
  44658d:	pop    rdi
  44658e:	fs gs jae 0x4465f5
  446592:	jb     0x4465fd
  446594:	jo     0x44660a
  446596:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f206320
  44659d:	rex.WRX and BYTE PTR [rbx+0x2e],r12b
  4465a1:	outs   dx,DWORD PTR ds:[rsi]
  4465a2:	(bad)  
  4465a3:	push   0x6f
  4465a5:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x6f2e6520
  4465ad:	imul   esp,DWORD PTR [rax+riz*1+0x41],0x6320444e
  4465b5:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
  4465ba:	jae    0x44662b
  4465bc:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x67702720
  4465c4:	pop    rdi
  4465c5:	movsxd esp,DWORD PTR [rcx+0x74]
  4465c8:	(bad)  
  4465c9:	ins    BYTE PTR es:[rdi],dx
  4465ca:	outs   dx,DWORD PTR ds:[rsi]
  4465cb:	addr32 cs jo 0x446636
  4465cf:	pop    rdi
  4465d0:	gs js  0x446647
  4465d3:	outs   dx,BYTE PTR gs:[rsi]
  4465d5:	jae    0x446640
  4465d7:	outs   dx,DWORD PTR ds:[rsi]
  4465d8:	outs   dx,BYTE PTR ds:[rsi]
  4465d9:	(bad)  
  4465da:	cmp    bh,BYTE PTR [rdx]
  4465dc:	jo     0x446645
  4465de:	pop    rdi
  4465df:	movsxd esp,DWORD PTR [rcx+0x74]
  4465e2:	(bad)  
  4465e3:	ins    BYTE PTR es:[rdi],dx
  4465e4:	outs   dx,DWORD PTR ds:[rsi]
  4465e5:	addr32 cs jb 0x44664e
  4465e9:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  4465ee:	jae    0x4465fa
  4465f0:	add    BYTE PTR [rbp+0x2e],ah
  4465f3:	gs js  0x44666a
  4465f6:	outs   dx,BYTE PTR ds:[rsi]
  4465f7:	(bad)  
  4465f8:	ins    DWORD PTR es:[rdi],dx
  4465f9:	add    BYTE PTR gs:[rcx+rbp*2+0x73],cl
  4465fe:	je     0x446620
  446600:	outs   dx,DWORD PTR ds:[rsi]
  446601:	data16 and BYTE PTR [rcx+0x6e],ch
  446605:	jae    0x44667b
  446607:	(bad)  
  446608:	ins    BYTE PTR es:[rdi],dx
  446609:	ins    BYTE PTR es:[rdi],dx
  44660a:	gs and BYTE PTR fs:[rbp+0x78],ah
  44660f:	je     0x446676
  446611:	outs   dx,BYTE PTR ds:[rsi]
  446612:	jae    0x44667d
  446614:	outs   dx,DWORD PTR ds:[rsi]
  446615:	outs   dx,BYTE PTR ds:[rsi]
  446616:	jae    0x446618
  446618:	push   rbx
  446619:	rex.RB
  44661a:	rex.WR
  44661b:	rex.RB
  44661c:	rex.XB push r12
  44661e:	and    BYTE PTR [rbp+0x2e],ah
  446621:	gs js  0x446698
  446624:	outs   dx,BYTE PTR ds:[rsi]
  446625:	(bad)  
  446626:	ins    DWORD PTR es:[rdi],dx
  446627:	gs sub al,0x20
  44662a:	gs outs dx,DWORD PTR cs:[rsi]
  44662d:	imul   esp,DWORD PTR [rdx+rcx*1+0x46],0x204d4f52
  446635:	jo     0x44669e
  446637:	pop    rdi
  446638:	movsxd esp,DWORD PTR [rcx+0x74]
  44663b:	(bad)  
  44663c:	ins    BYTE PTR es:[rdi],dx
  44663d:	outs   dx,DWORD PTR ds:[rsi]
  44663e:	addr32 cs jo 0x4466a9
  446642:	pop    rdi
  446643:	gs js  0x4466ba
  446646:	outs   dx,BYTE PTR gs:[rsi]
  446648:	jae    0x4466b3
  44664a:	outs   dx,DWORD PTR ds:[rsi]
  44664b:	outs   dx,BYTE PTR ds:[rsi]
  44664c:	and    BYTE PTR [rbp+0xa],ah
  44664f:	add    BYTE PTR [rcx+rbp*2+0x64],al
  446653:	and    BYTE PTR [rsi+0x6f],ch
  446656:	je     0x446678
  446658:	imul   bp,WORD PTR [rsi+0x64],0x6120
  44665e:	outs   dx,BYTE PTR ds:[rsi]
  44665f:	jns    0x446681
  446661:	gs js  0x4466d8
  446664:	outs   dx,BYTE PTR gs:[rsi]
  446666:	jae    0x4466d1
  446668:	outs   dx,DWORD PTR ds:[rsi]
  446669:	outs   dx,BYTE PTR ds:[rsi]
  44666a:	and    BYTE PTR [rsi+0x61],ch
  44666d:	ins    DWORD PTR es:[rdi],dx
  44666e:	gs and BYTE PTR fs:[rdx],ah
  446672:	and    eax,0xa2e2273
  446677:	add    BYTE PTR [rcx+rbp*2+0x64],al
  44667b:	and    BYTE PTR [rsi+0x6f],ch
  44667e:	je     0x4466a0
  446680:	imul   bp,WORD PTR [rsi+0x64],0x6120
  446686:	outs   dx,BYTE PTR ds:[rsi]
  446687:	jns    0x4466a9
  446689:	gs js  0x446700
  44668c:	outs   dx,BYTE PTR gs:[rsi]
  44668e:	jae    0x4466f9
  446690:	outs   dx,DWORD PTR ds:[rsi]
  446691:	outs   dx,BYTE PTR ds:[rsi]
  446692:	jae    0x4466c2
  446694:	or     al,BYTE PTR [rax]
  446696:	add    DWORD PTR [rax],eax
	...
  4466a0:	add    BYTE PTR [rcx],al
  4466a2:	add    BYTE PTR [rax],al
  4466a4:	add    BYTE PTR [rax],al
  4466a6:	add    DWORD PTR [rax],eax
  4466a8:	add    BYTE PTR [rax],al
  4466aa:	add    BYTE PTR [rax],al
  4466ac:	add    BYTE PTR [rax],al
  4466ae:	add    DWORD PTR [rax],eax
  4466b0:	add    BYTE PTR [rax],al
  4466b2:	add    DWORD PTR [rax],eax
  4466b4:	add    BYTE PTR [rax],al
  4466b6:	add    BYTE PTR [rax],al
  4466b8:	add    BYTE PTR [rcx],al
  4466ba:	add    BYTE PTR [rax],al
  4466bc:	add    BYTE PTR [rcx],al
  4466be:	add    BYTE PTR [rax],al
  4466c0:	add    BYTE PTR [rcx],al
  4466c2:	add    BYTE PTR [rax],al
  4466c4:	add    BYTE PTR [rax],al
  4466c6:	add    BYTE PTR [rax],al
  4466c8:	add    DWORD PTR [rcx],eax
  4466ca:	add    DWORD PTR [rax],eax
  4466cc:	add    BYTE PTR [rax],al
  4466ce:	add    BYTE PTR [rax],al
  4466d0:	jne    0x446746
  4466d2:	data16 cmp BYTE PTR [rax],al
  4466d5:	pop    rsp
  4466d6:	js     0x4466fd
  4466d8:	xor    BYTE PTR [rdx],dh
  4466da:	pop    rax
  4466db:	add    BYTE PTR [rbp+rsi*2+0x25],bl
  4466df:	xor    BYTE PTR [rax+rbx*2],dh
  4466e2:	add    BYTE PTR [rbp+rsi*2+0x3f],bl
  4466e6:	(bad)  
  4466e7:	(bad)  
  4466e8:	(bad)  
  4466e9:	add    BYTE PTR [rax],al
  4466eb:	add    BYTE PTR [rax],al
  4466ed:	add    BYTE PTR [rax],al
  4466ef:	add    BYTE PTR [rax],ch
  4466f1:	and    eax,0x25002973
  4466f6:	jae    0x446726
  4466f8:	add    BYTE PTR [rip+0x56455273],ah        # 0x5689b971
  4466fe:	rex.WRXB
  4466ff:	rex.WXB
  446700:	and    BYTE PTR [r9+0x4c],r8b
  446704:	rex.WR add BYTE PTR [rax],r12b
  446707:	rex.WRXB
  446708:	rex.WRX and BYTE PTR [rip+0x73252073],r12b        # 0x73698782
  44670f:	and    BYTE PTR [rsi+0x52],al
  446712:	rex.WRXB
  446713:	rex.WRB and BYTE PTR [r8+0x55],r10b
  446717:	rex.X
  446718:	rex.WR
  446719:	rex.WB
  44671a:	rex.XB cmp ecx,DWORD PTR [r10]
  44671d:	add    BYTE PTR [rcx+rax*2+0x54],al
  446721:	rex.B
  446722:	rex.X
  446723:	push   r11
  446725:	add    BYTE PTR [r8],r8b
  446728:	and    eax,0x41524773
  44672d:	rex.WRX push rsp
  44672f:	and    BYTE PTR [rbx+0x4f],al
  446732:	rex.WRX
  446733:	rex.WRX
  446734:	rex.RB
  446735:	rex.XB push r12
  446737:	and    BYTE PTR [rdi+0x4e],cl
  44673a:	and    BYTE PTR [rip+0x73252073],ah        # 0x736987b3
  446740:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  446744:	push   rax
  446745:	push   rbp
  446746:	rex.X
  446747:	rex.WR
  446748:	rex.WB
  446749:	rex.XB cmp ecx,DWORD PTR [r10]
  44674c:	add    BYTE PTR [rcx+rax*2+0x42],dl
  446750:	rex.WR
  446751:	add    BYTE PTR [r11+0x45],r10b
  446755:	push   rcx
  446756:	push   rbp
  446757:	rex.RB
  446758:	rex.WRX
  446759:	rex.XB
  44675a:	add    BYTE PTR [r9+rax*2+0x42],r10b
  44675f:	rex.WR
  446760:	rex.RB push r11
  446762:	add    BYTE PTR [rbx+0x45],dl
  446765:	push   rcx
  446766:	push   rbp
  446767:	rex.RB
  446768:	rex.WRX
  446769:	rex.XB
  44676a:	rex.RB push r11
  44676c:	add    BYTE PTR [rbx+0x45],dl
  44676f:	rex.WR
  446770:	rex.RB
  446771:	rex.XB push r12
  446773:	add    BYTE PTR [rbp+0x53],dl
  446776:	rex.B
  446777:	rex.RXB
  446778:	add    BYTE PTR [r9+0x4e],r9b
  44677c:	push   rbx
  44677d:	rex.RB push r10
  44677f:	push   rsp
  446780:	add    BYTE PTR [rdx+0x45],dl
  446783:	rex.RX
  446784:	rex.RB push r10
  446786:	rex.RB
  446787:	rex.WRX
  446788:	rex.XB
  446789:	rex.RB push r11
  44678b:	add    BYTE PTR [rbp+rax*2+0x4c],al
  44678f:	rex.RB push r12
  446791:	add    BYTE PTR [r10+rdx*2+0x49],r10b
  446796:	rex.RXB
  446797:	rex.RXB
  446798:	rex.RB push r10
  44679a:	add    BYTE PTR [rdx+rdx*2+0x55],dl
  44679e:	rex.WRX
  44679f:	rex.XB
  4467a0:	push   r12
  4467a2:	add    BYTE PTR [r13+0x50],r10b
  4467a6:	rex.R
  4467a7:	push   r12
  4467a9:	add    BYTE PTR [r13+0x50],r10b
  4467ad:	rex.R
  4467ae:	push   r12
  4467b0:	rex.RB sub al,0x44
  4467b3:	rex.RB
  4467b4:	rex.WR
  4467b5:	rex.RB push r12
  4467b7:	add    BYTE PTR [r14+0x55],r8b
  4467bb:	rex.WRX
  4467bc:	rex.XB push r12
  4467be:	rex.WB
  4467bf:	rex.WRXB
  4467c0:	rex.WRX add BYTE PTR [rsi+0x55],r8b
  4467c4:	rex.WRX
  4467c5:	rex.XB push r12
  4467c7:	rex.WB
  4467c8:	rex.WRXB
  4467c9:	rex.WRX push rbx
  4467cb:	add    BYTE PTR [rbp+0x58],al
  4467ce:	rex.RB
  4467cf:	rex.XB push r13
  4467d1:	push   rsp
  4467d2:	add    BYTE PTR [r9+rax*2+0x4e],r9b
  4467d7:	rex.RXB push r13
  4467d9:	rex.B
  4467da:	rex.RXB
  4467db:	add    BYTE PTR [r11+0x43],r10b
  4467df:	rex.W
  4467e0:	rex.RB
  4467e1:	rex.WRB
  4467e2:	add    BYTE PTR [r11+0x52],al
  4467e6:	rex.RB
  4467e7:	push   r12
  4467e9:	add    BYTE PTR [r11+0x4f],r8b
  4467ed:	rex.WRX
  4467ee:	rex.WRX
  4467ef:	rex.RB
  4467f0:	rex.XB push r12
  4467f2:	add    BYTE PTR [rbp+rax*2+0x4d],dl
  4467f6:	push   rax
  4467f7:	rex.WRXB push r10
  4467f9:	push   r10
  4467fb:	pop    rcx
  4467fc:	add    BYTE PTR [rcx+rax*2+0x42],dl
  446800:	rex.WR
  446801:	rex.RB push r11
  446803:	push   rax
  446804:	rex.B
  446805:	rex.XB
  446806:	add    BYTE PTR [r9+rbx*2+0x50],r10b
  44680b:	add    BYTE PTR [r9+rbx*2+0x50],r10b
  446810:	rex.RB push r11
  446812:	add    BYTE PTR [rsi+0x4f],al
  446815:	push   rdx
  446816:	rex.RB
  446817:	rex.WB
  446818:	rex.RXB
  446819:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44681e:	and    BYTE PTR [r15+0x52],dl
  446822:	push   r8
  446824:	push   rax
  446825:	rex.RB push r10
  446827:	add    BYTE PTR [rsi+0x4f],al
  44682a:	push   rdx
  44682b:	rex.RB
  44682c:	rex.WB
  44682d:	rex.RXB
  44682e:	rex.WRX and BYTE PTR [rbx+0x45],r10b
  446832:	push   rdx
  446833:	push   rsi
  446834:	rex.RB push r10
  446836:	add    BYTE PTR [rsi+0x4f],al
  446839:	push   rdx
  44683a:	rex.RB
  44683b:	rex.WB
  44683c:	rex.RXB
  44683d:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  446842:	rex.WR
  446843:	add    BYTE PTR [r9+rax*2+0x52],r9b
  446848:	rex.RXB
  446849:	and    BYTE PTR [r15+0x42],r9b
  44684d:	rex.WX
  44684e:	rex.RB
  44684f:	rex.XB push r12
  446851:	add    BYTE PTR [rcx+0x4c],al
  446854:	rex.WR add BYTE PTR [rip+0x4f200073],r12b        # 0x4f6468ce
  44685b:	rex.WRX and BYTE PTR [rip+0x73252073],r12b        # 0x736988d5
  446862:	and    BYTE PTR [rsi+0x52],al
  446865:	rex.WRXB
  446866:	rex.WRB and BYTE PTR [rip+0xa3b73],r12b        # 0x4ea3e0
  44686d:	and    eax,0x41524773
  446872:	rex.WRX push rsp
  446874:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e9388ed
  44687a:	and    BYTE PTR [rip+0x73252073],ah        # 0x736988f3
  446880:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  446884:	and    eax,0xa3b73
  446889:	add    BYTE PTR [rax],al
  44688b:	add    BYTE PTR [rax],al
  44688d:	add    BYTE PTR [rax],al
  44688f:	add    BYTE PTR [rip+0x41524773],ah        # 0x4196b008
  446895:	rex.WRX push rsp
  446897:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e938910
  44689d:	and    BYTE PTR [rip+0x73252073],ah        # 0x73698916
  4468a3:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4468a7:	and    eax,0x49572073
  4468ac:	push   rsp
  4468ad:	rex.W and BYTE PTR [rdi+0x52],al
  4468b1:	rex.B
  4468b2:	rex.WRX push rsp
  4468b4:	and    BYTE PTR [rdi+0x50],cl
  4468b7:	push   rsp
  4468b8:	rex.WB
  4468b9:	rex.WRXB
  4468ba:	rex.WRX cmp r9,QWORD PTR [rdx]
  4468bd:	add    BYTE PTR [rax],al
  4468bf:	add    BYTE PTR [rbx+0x45],dl
  4468c2:	push   rsp
  4468c3:	and    BYTE PTR [rbx+0x45],dl
  4468c6:	push   rbx
  4468c7:	push   rbx
  4468c8:	rex.WB
  4468c9:	rex.WRXB
  4468ca:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  4468ce:	push   rsp
  4468cf:	rex.W
  4468d0:	rex.WRXB push r10
  4468d2:	rex.WB pop r10
  4468d4:	push   r12
  4468d6:	rex.WB
  4468d7:	rex.WRXB
  4468d8:	rex.WRX and BYTE PTR [rip+0xa3b73],r12b        # 0x4ea452
  4468df:	and    eax,0x41524773
  4468e4:	rex.WRX push rsp
  4468e6:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e93895f
  4468ec:	and    BYTE PTR [rip+0x73252073],ah        # 0x73698965
  4468f2:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4468f6:	add    BYTE PTR [rax+0x55],dl
  4468f9:	rex.X
  4468fa:	rex.WR
  4468fb:	rex.WB
  4468fc:	rex.XB cmp ecx,DWORD PTR [r10]
  4468ff:	add    BYTE PTR [rdi+0x72],ah
  446902:	outs   dx,DWORD PTR ds:[rsi]
  446903:	jne    0x446975
  446905:	and    BYTE PTR [rax],al
  446907:	rex.RXB push r10
  446909:	rex.WRXB push r13
  44690b:	push   rax
  44690c:	and    BYTE PTR [rip+0xa3b73],ah        # 0x4ea485
  446912:	and    eax,0xa3b73
  446917:	push   rax
  446918:	push   rbp
  446919:	rex.X
  44691a:	rex.WR
  44691b:	rex.WB
  44691c:	rex.XB add BYTE PTR [r15+0x52],al
  446920:	rex.WRXB push r13
  446922:	push   rax
  446923:	and    BYTE PTR [rip+0x57200073],ah        # 0x5764699c
  446929:	rex.WB push r12
  44692b:	rex.W and BYTE PTR [rdi+0x52],al
  44692f:	rex.B
  446930:	rex.WRX push rsp
  446932:	and    BYTE PTR [rdi+0x50],cl
  446935:	push   rsp
  446936:	rex.WB
  446937:	rex.WRXB
  446938:	rex.WRX cmp r9,QWORD PTR [rdx]
  44693b:	add    BYTE PTR [rdx+0x45],dl
  44693e:	push   rbx
  44693f:	rex.RB push r12
  446941:	and    BYTE PTR [rbx+0x45],dl
  446944:	push   rbx
  446945:	push   rbx
  446946:	rex.WB
  446947:	rex.WRXB
  446948:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  44694c:	push   rsp
  44694d:	rex.W
  44694e:	rex.WRXB push r10
  446950:	rex.WB pop r10
  446952:	push   r12
  446954:	rex.WB
  446955:	rex.WRXB
  446956:	rex.WRX cmp r9,QWORD PTR [rdx]
  446959:	add    BYTE PTR [rip+0x732573],ah        # 0xb78ed2
  44695f:	add    BYTE PTR [rcx+0x4c],al
  446962:	push   rsp
  446963:	rex.RB push r10
  446965:	and    BYTE PTR [rbp+rax*2+0x46],al
  446969:	push   r13
  44696b:	rex.WR push rsp
  44696d:	and    BYTE PTR [rax+0x52],dl
  446970:	rex.WB push r14
  446972:	rex.WB
  446973:	rex.WR
  446974:	rex.RB
  446975:	rex.RXB
  446976:	rex.RB push r11
  446978:	and    BYTE PTR [rsi+0x4f],al
  44697b:	push   rdx
  44697c:	and    BYTE PTR [rdx+0x4f],dl
  44697f:	rex.WR
  446980:	and    BYTE PTR [rip+0x49002073],r12b        # 0x494489fa
  446987:	rex.WRX and BYTE PTR [rbx+0x43],r10b
  44698b:	rex.W
  44698c:	rex.RB
  44698d:	rex.WRB
  44698e:	and    BYTE PTR [rip+0x2073],spl        # 0x448a08
  446995:	and    BYTE PTR [rax],ah
  446997:	rex.B
  446998:	rex.WRX
  446999:	and    BYTE PTR [rax],r8b
  44699c:	push   rdi
  44699d:	rex.W
  44699e:	rex.RB push r10
  4469a0:	and    BYTE PTR [r8],r8b
  4469a3:	and    eax,0x5e000a73
  4469a8:	sub    BYTE PTR [rax],al
  4469aa:	sub    al,BYTE PTR cs:[rax]
  4469ad:	pop    rsp
  4469ae:	and    al,0x0
  4469b0:	jl     0x4469dc
  4469b2:	sub    edi,DWORD PTR [rdi]
  4469b4:	sub    BYTE PTR [rcx],ch
  4469b6:	pop    rbx
  4469b7:	pop    rbp
  4469b8:	jnp    0x446a37
  4469ba:	cs pop rsi
  4469bc:	and    al,0x5c
  4469be:	add    BYTE PTR [rcx],ch
  4469c0:	and    al,0x0
  4469c2:	pop    rsi
  4469c3:	sub    BYTE PTR [rsi],ch
  4469c5:	sub    ch,BYTE PTR [rcx]
  4469c7:	and    al,0x0
  4469c9:	sub    BYTE PTR [rip+0x207e2073],ah        # 0x20c28a42
  4469cf:	add    BYTE PTR [rdx],cl
  4469d1:	and    BYTE PTR [rax],ah
  4469d3:	and    BYTE PTR [rax],ah
  4469d5:	and    BYTE PTR [rax],ah
  4469d7:	and    BYTE PTR [rax],ah
  4469d9:	rex.WRXB push r10
  4469db:	and    BYTE PTR [rip+0x207e2073],ah        # 0x20c28a54
  4469e1:	add    BYTE PTR [rcx],ch
  4469e3:	or     al,BYTE PTR [rax]
  4469e5:	and    eax,0x207e2073
  4469ea:	add    BYTE PTR [rax],al
  4469ec:	add    BYTE PTR [rax],al
  4469ee:	add    BYTE PTR [rax],al
  4469f0:	push   rbx
  4469f1:	rex.RB
  4469f2:	rex.WR
  4469f3:	rex.RB
  4469f4:	rex.XB push r12
  4469f6:	and    BYTE PTR [rax+0x72],dh
  4469f9:	outs   dx,DWORD PTR ds:[rsi]
  4469fa:	jbe    0x446a65
  4469fc:	fs gs jb 0x446a2c
  446a00:	and    BYTE PTR [rcx+riz*2+0x62],ch
  446a04:	gs ins BYTE PTR es:[rdi],dx
  446a06:	and    BYTE PTR [rsi+0x52],al
  446a09:	rex.WRXB
  446a0a:	rex.WRB and BYTE PTR [r8+0x67],r14b
  446a0e:	pop    rdi
  446a0f:	movsxd esp,DWORD PTR [rcx+0x74]
  446a12:	(bad)  
  446a13:	ins    BYTE PTR es:[rdi],dx
  446a14:	outs   dx,DWORD PTR ds:[rsi]
  446a15:	addr32 cs jo 0x446a80
  446a19:	pop    rdi
  446a1a:	jae    0x446a84
  446a1c:	jae    0x446a83
  446a1e:	movsxd ebp,DWORD PTR [rcx+riz*2+0x62]
  446a22:	gs ins BYTE PTR es:[rdi],dx
  446a24:	and    BYTE PTR [rdi+0x48],dl
  446a27:	rex.RB push r10
  446a29:	and    BYTE PTR [r11+0x6c],r12b
  446a2d:	(bad)  
  446a2e:	jae    0x446aa3
  446a30:	outs   dx,DWORD PTR ds:[rsi]
  446a31:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x73252720
  446a39:	(bad)  
  446a3a:	cmp    bh,BYTE PTR [rdx]
  446a3c:	jo     0x446aa5
  446a3e:	pop    rdi
  446a3f:	movsxd esp,DWORD PTR [rcx+0x74]
  446a42:	(bad)  
  446a43:	ins    BYTE PTR es:[rdi],dx
  446a44:	outs   dx,DWORD PTR ds:[rsi]
  446a45:	addr32 cs jb 0x446aae
  446a49:	movsxd ebp,DWORD PTR [ecx+eiz*2+0x73]
  446a4e:	jae    0x446a70
  446a50:	rex.B
  446a51:	rex.WRX
  446a52:	and    BYTE PTR [rdi+0x62],r13b
  446a56:	push   0x6f
  446a58:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x752520
  446a60:	push   rbx
  446a61:	rex.RB
  446a62:	rex.XB push r13
  446a64:	push   rdx
  446a65:	rex.WB push r12
  446a67:	pop    rcx
  446a68:	and    BYTE PTR [rcx+rax*2+0x42],cl
  446a6c:	rex.RB
  446a6d:	rex.WR and BYTE PTR [rsi+0x4f],r8b
  446a71:	push   rdx
  446a72:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e938aeb
  446a78:	and    BYTE PTR [rip+0x25200073],ah        # 0x25646af1
  446a7e:	jae    0x446aa0
  446a80:	rex.WB push r11
  446a82:	and    BYTE PTR [rax],al
  446a84:	cmp    ecx,DWORD PTR [rdx]
	...
  446a8e:	add    BYTE PTR [rax],al
  446a90:	xor    BYTE PTR [rcx],dh
  446a92:	xor    dh,BYTE PTR [rbx]
  446a94:	xor    al,0x35
  446a96:	ss (bad) 
  446a98:	cmp    BYTE PTR [rcx],bh
  446a9a:	(bad)  
  446a9b:	(bad)
  446aa0:	add    BYTE PTR [rdi+0x58],bl
  446aa3:	pop    rax
  446aa4:	pop    rax
  446aa5:	pop    rax
  446aa6:	pop    rax
  446aa7:	pop    rax
  446aa8:	pop    rax
	...
  446abd:	add    BYTE PTR [rax],al
  446abf:	add    BYTE PTR [rbp+0x61000001],dl
  446ac5:	(bad)  
  446ac6:	outs   dx,DWORD PTR ds:[rsi]
  446ac7:	jb     0x446b3d
  446ac9:	add    BYTE PTR [rcx+0x62],ah
  446acc:	jae    0x446b3d
  446ace:	ins    BYTE PTR es:[rdi],dx
  446acf:	jne    0x446b45
  446ad1:	add    BYTE PTR gs:[rcx+0x63],ah
  446ad5:	movsxd esp,DWORD PTR [rbp+0x73]
  446ad8:	jae    0x446ada
  446ada:	(bad)  
  446adb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  446adf:	outs   dx,BYTE PTR ds:[rsi]
  446ae0:	add    BYTE PTR [rcx+0x64],ah
  446ae3:	add    BYTE PTR fs:[rcx+0x64],ah
  446ae7:	ins    DWORD PTR es:[rdi],dx
  446ae8:	imul   ebp,DWORD PTR [rsi+0x0],0x65746661
  446aef:	jb     0x446af1
  446af1:	(bad)  
  446af2:	addr32 addr32 jb 0x446b5b
  446af6:	addr32 (bad) 
  446af8:	je     0x446b5f
  446afa:	add    BYTE PTR [rcx+0x6c],ah
  446afd:	ins    BYTE PTR es:[rdi],dx
  446afe:	add    BYTE PTR [rcx+0x6c],ah
  446b01:	jae    0x446b72
  446b03:	add    BYTE PTR [rcx+0x6c],ah
  446b06:	je     0x446b6d
  446b08:	jb     0x446b0a
  446b0a:	(bad)  
  446b0b:	ins    BYTE PTR es:[rdi],dx
  446b0c:	ja     0x446b6f
  446b0e:	jns    0x446b83
  446b10:	add    BYTE PTR [rcx+0x6e],ah
  446b13:	(bad)  
  446b14:	ins    BYTE PTR es:[rdi],dx
  446b15:	jns    0x446b8a
  446b17:	add    BYTE PTR gs:[rcx+0x6e],ah
  446b1b:	(bad)  
  446b1c:	ins    BYTE PTR es:[rdi],dx
  446b1d:	jns    0x446b99
  446b1f:	add    BYTE PTR gs:[rcx+0x6e],ah
  446b23:	add    BYTE PTR fs:[rcx+0x6e],ah
  446b27:	jns    0x446b29
  446b29:	(bad)  
  446b2a:	jb     0x446b9e
  446b2c:	(bad)  
  446b2d:	jns    0x446b2f
  446b2f:	(bad)  
  446b30:	jae    0x446b32
  446b32:	(bad)  
  446b33:	jae    0x446b98
  446b35:	add    BYTE PTR [rcx+0x73],ah
  446b38:	jae    0x446b9f
  446b3a:	jb     0x446bb0
  446b3c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73736100
  446b43:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  446b4a:	add    BYTE PTR [rcx+0x73],ah
  446b4d:	jns    0x446bbc
  446b4f:	ins    DWORD PTR es:[rdi],dx
  446b50:	gs je  0x446bc5
  446b53:	imul   esp,DWORD PTR [rbx+0x0],0x61007461
  446b5a:	je     0x446bd0
  446b5c:	jb     0x446bc7
  446b5e:	(bad)  
  446b5f:	jne    0x446bd5
  446b61:	add    BYTE PTR gs:[rcx+0x75],ah
  446b65:	je     0x446bcf
  446b67:	outs   dx,DWORD PTR ds:[rsi]
  446b68:	jb     0x446bd3
  446b6a:	jp     0x446bcd
  446b6c:	je     0x446bd7
  446b6e:	outs   dx,DWORD PTR ds:[rsi]
  446b6f:	outs   dx,BYTE PTR ds:[rsi]
  446b70:	add    BYTE PTR [rdx+0x61],ah
  446b73:	movsxd ebp,DWORD PTR [rbx+0x77]
  446b76:	(bad)  
  446b77:	jb     0x446bdd
  446b79:	add    BYTE PTR [rdx+0x65],ah
  446b7c:	outs   dx,WORD PTR ds:[rsi]
  446b7e:	jb     0x446be5
  446b80:	add    BYTE PTR [rdx+0x65],ah
  446b83:	imul   ebp,DWORD PTR [esi+0x0],0x77746562
  446b8b:	gs outs dx,BYTE PTR gs:[rsi]
  446b8e:	add    BYTE PTR [rdx+0x69],ah
  446b91:	imul   ebp,DWORD PTR [esi+0x74],0x6e696200
  446b99:	(bad)  
  446b9a:	jb     0x446c15
  446b9c:	add    BYTE PTR [rdx+0x69],ah
  446b9f:	je     0x446ba1
  446ba1:	(bad)  
  446ba2:	outs   dx,DWORD PTR ds:[rsi]
  446ba3:	outs   dx,DWORD PTR ds:[rsi]
  446ba4:	ins    BYTE PTR es:[rdi],dx
  446ba5:	gs (bad) 
  446ba7:	outs   dx,BYTE PTR ds:[rsi]
  446ba8:	add    BYTE PTR [rdx+0x6f],ah
  446bab:	je     0x446c15
  446bad:	add    BYTE PTR [rdx+0x79],ah
  446bb0:	add    BYTE PTR [rbx+0x61],ah
  446bb3:	movsxd ebp,DWORD PTR [rax+0x65]
  446bb6:	add    BYTE PTR [rbx+0x61],ah
  446bb9:	ins    BYTE PTR es:[rdi],dx
  446bba:	ins    BYTE PTR es:[rdi],dx
  446bbb:	gs add BYTE PTR fs:[rbx+0x61],ah
  446bc0:	jae    0x446c25
  446bc2:	(bad)  
  446bc3:	fs add BYTE PTR gs:[rbx+0x61],ah
  446bc8:	jae    0x446c2d
  446bca:	(bad)  
  446bcb:	fs gs add BYTE PTR fs:[rbx+0x61],ah
  446bd1:	jae    0x446c38
  446bd3:	add    BYTE PTR [rbx+0x61],ah
  446bd6:	jae    0x446c4c
  446bd8:	add    BYTE PTR [rbx+0x61],ah
  446bdb:	je     0x446c3e
  446bdd:	ins    BYTE PTR es:[rdi],dx
  446bde:	outs   dx,DWORD PTR ds:[rsi]
  446bdf:	add    BYTE PTR [ebx+0x68],ah
  446be3:	(bad)  
  446be4:	imul   ebp,DWORD PTR [rsi+0x0],0x72616863
  446beb:	add    BYTE PTR [rbx+0x68],ah
  446bee:	(bad)  
  446bef:	jb     0x446c52
  446bf1:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  446bf5:	add    BYTE PTR [rbx+0x68],ah
  446bf8:	(bad)  
  446bf9:	jb     0x446c5c
  446bfb:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  446bff:	imul   esi,DWORD PTR [rbx+0x74],0x736369
  446c06:	movsxd ebp,DWORD PTR [rax+0x65]
  446c09:	movsxd ebp,DWORD PTR [rbx+0x0]
  446c0c:	movsxd ebp,DWORD PTR [rax+0x65]
  446c0f:	movsxd ebp,DWORD PTR [rbx+0x70]
  446c12:	outs   dx,DWORD PTR ds:[rsi]
  446c13:	imul   ebp,DWORD PTR [rsi+0x74],0x616c6300
  446c1a:	jae    0x446c8f
  446c1c:	add    BYTE PTR [rbx+0x6c],ah
  446c1f:	outs   dx,DWORD PTR ds:[rsi]
  446c20:	jae    0x446c87
  446c22:	add    BYTE PTR [rbx+0x6c],ah
  446c25:	jne    0x446c9a
  446c27:	je     0x446c8e
  446c29:	jb     0x446c2b
  446c2b:	movsxd ebp,DWORD PTR [rdi+0x61]
  446c2e:	ins    BYTE PTR es:[rdi],dx
  446c2f:	gs jae 0x446c95
  446c32:	add    BYTE PTR gs:[rbx+0x6f],ah
  446c36:	ins    BYTE PTR es:[rdi],dx
  446c37:	ins    BYTE PTR es:[rdi],dx
  446c38:	(bad)  
  446c39:	je     0x446ca0
  446c3b:	add    BYTE PTR [rbx+0x6f],ah
  446c3e:	ins    BYTE PTR es:[rdi],dx
  446c3f:	ins    BYTE PTR es:[rdi],dx
  446c40:	(bad)  
  446c41:	je     0x446cac
  446c43:	outs   dx,DWORD PTR ds:[rsi]
  446c44:	outs   dx,BYTE PTR ds:[rsi]
  446c45:	add    BYTE PTR [rbx+0x6f],ah
  446c48:	ins    BYTE PTR es:[rdi],dx
  446c49:	jne    0x446cb8
  446c4b:	outs   dx,BYTE PTR ds:[rsi]
  446c4c:	add    BYTE PTR [rbx+0x6f],ah
  446c4f:	ins    DWORD PTR es:[rdi],dx
  446c50:	ins    DWORD PTR es:[rdi],dx
  446c51:	outs   dx,BYTE PTR gs:[rsi]
  446c53:	je     0x446c55
  446c55:	movsxd ebp,DWORD PTR [rdi+0x6d]
  446c58:	ins    DWORD PTR es:[rdi],dx
  446c59:	outs   dx,BYTE PTR gs:[rsi]
  446c5b:	je     0x446cd0
  446c5d:	add    BYTE PTR [rbx+0x6f],ah
  446c60:	ins    DWORD PTR es:[rdi],dx
  446c61:	ins    DWORD PTR es:[rdi],dx
  446c62:	imul   esi,DWORD PTR [rax+rax*1+0x63],0x696d6d6f
  446c6a:	je     0x446ce0
  446c6c:	gs add BYTE PTR fs:[rbx+0x6f],ah
  446c71:	outs   dx,BYTE PTR ds:[rsi]
  446c72:	movsxd esi,DWORD PTR [rbp+0x72]
  446c75:	jb     0x446cdc
  446c77:	outs   dx,BYTE PTR ds:[rsi]
  446c78:	je     0x446ce6
  446c7a:	jns    0x446c7c
  446c7c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446c7f:	imul   sp,WORD PTR [rdi+0x75],0x6172
  446c85:	je     0x446cf0
  446c87:	outs   dx,DWORD PTR ds:[rsi]
  446c88:	outs   dx,BYTE PTR ds:[rsi]
  446c89:	add    BYTE PTR [rbx+0x6f],ah
  446c8c:	outs   dx,BYTE PTR ds:[rsi]
  446c8d:	outs   dx,BYTE PTR ds:[rsi]
  446c8e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  446c93:	outs   dx,BYTE PTR ds:[rsi]
  446c94:	add    BYTE PTR [rbx+0x6f],ah
  446c97:	outs   dx,BYTE PTR ds:[rsi]
  446c98:	jae    0x446d0e
  446c9a:	jb     0x446cfd
  446c9c:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6300
  446ca3:	jae    0x446d19
  446ca5:	jb     0x446d08
  446ca7:	imul   ebp,DWORD PTR [rsi+0x74],0x6f630073
  446cae:	outs   dx,BYTE PTR ds:[rsi]
  446caf:	je     0x446d16
  446cb1:	outs   dx,BYTE PTR ds:[rsi]
  446cb2:	je     0x446cb4
  446cb4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  446cb7:	je     0x446d22
  446cb9:	outs   dx,BYTE PTR ds:[rsi]
  446cba:	jne    0x446d21
  446cbc:	add    BYTE PTR [rbx+0x6f],ah
  446cbf:	outs   dx,BYTE PTR ds:[rsi]
  446cc0:	jbe    0x446d27
  446cc2:	jb     0x446d37
  446cc4:	imul   ebp,DWORD PTR [rdi+0x6e],0x706f6300
  446ccb:	jns    0x446ccd
  446ccd:	movsxd ebp,DWORD PTR [rdi+0x73]
  446cd0:	je     0x446cd2
  446cd2:	movsxd esi,DWORD PTR [rdx+0x65]
  446cd5:	(bad)  
  446cd6:	je     0x446d3d
  446cd8:	add    BYTE PTR [rbx+0x72],ah
  446cdb:	outs   dx,DWORD PTR ds:[rsi]
  446cdc:	jae    0x446d51
  446cde:	add    BYTE PTR [rbx+0x73],ah
  446ce1:	jbe    0x446ce3
  446ce3:	movsxd esi,DWORD PTR [rbp+0x72]
  446ce6:	jb     0x446d4d
  446ce8:	outs   dx,BYTE PTR ds:[rsi]
  446ce9:	je     0x446ceb
  446ceb:	movsxd esi,DWORD PTR [rbp+0x72]
  446cee:	jb     0x446d55
  446cf0:	outs   dx,BYTE PTR ds:[rsi]
  446cf1:	je     0x446d52
  446cf3:	movsxd esp,DWORD PTR [rcx+0x74]
  446cf6:	(bad)  
  446cf7:	ins    BYTE PTR es:[rdi],dx
  446cf8:	outs   dx,DWORD PTR ds:[rsi]
  446cf9:	add    BYTE PTR [ebx+0x75],ah
  446cfd:	jb     0x446d71
  446cff:	outs   dx,BYTE PTR gs:[rsi]
  446d01:	je     0x446d62
  446d03:	fs (bad) 
  446d05:	je     0x446d6c
  446d07:	add    BYTE PTR [rbx+0x75],ah
  446d0a:	jb     0x446d7e
  446d0c:	outs   dx,BYTE PTR gs:[rsi]
  446d0e:	je     0x446d6f
  446d10:	jb     0x446d81
  446d12:	ins    BYTE PTR es:[rdi],dx
  446d13:	add    BYTE PTR gs:[rbx+0x75],ah
  446d17:	jb     0x446d8b
  446d19:	outs   dx,BYTE PTR gs:[rsi]
  446d1b:	je     0x446d7c
  446d1d:	jae    0x446d82
  446d1f:	push   0x616d65
  446d24:	movsxd esi,DWORD PTR [rbp+0x72]
  446d27:	jb     0x446d8e
  446d29:	outs   dx,BYTE PTR ds:[rsi]
  446d2a:	je     0x446d8b
  446d2c:	je     0x446d97
  446d2e:	ins    DWORD PTR es:[rdi],dx
  446d2f:	add    BYTE PTR gs:[rbx+0x75],ah
  446d33:	jb     0x446da7
  446d35:	outs   dx,BYTE PTR gs:[rsi]
  446d37:	je     0x446d98
  446d39:	je     0x446da4
  446d3b:	ins    DWORD PTR es:[rdi],dx
  446d3c:	gs jae 0x446db3
  446d3f:	(bad)  
  446d40:	ins    DWORD PTR es:[rdi],dx
  446d41:	jo     0x446d43
  446d43:	movsxd esi,DWORD PTR [rbp+0x72]
  446d46:	jb     0x446dad
  446d48:	outs   dx,BYTE PTR ds:[rsi]
  446d49:	je     0x446daa
  446d4b:	jne    0x446dc0
  446d4d:	gs jb  0x446d50
  446d50:	movsxd esi,DWORD PTR [rbp+0x72]
  446d53:	jae    0x446dc4
  446d55:	jb     0x446d57
  446d57:	movsxd edi,DWORD PTR [rcx+0x63]
  446d5a:	ins    BYTE PTR es:[rdi],dx
  446d5b:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  446d60:	(bad)  
  446d61:	add    BYTE PTR [rcx+riz*2+0x74],ah
  446d65:	(bad)  
  446d66:	(bad)  
  446d68:	jae    0x446dcf
  446d6a:	add    BYTE PTR [rcx+riz*2+0x79],ah
  446d6e:	add    BYTE PTR [rbp+riz*2+0x61],ah
  446d72:	ins    BYTE PTR es:[rdi],dx
  446d73:	ins    BYTE PTR es:[rdi],dx
  446d74:	outs   dx,DWORD PTR ds:[rsi]
  446d75:	movsxd esp,DWORD PTR [rcx+0x74]
  446d78:	add    BYTE PTR gs:[rbp+riz*2+0x63],ah
  446d7d:	add    BYTE PTR [rbp+riz*2+0x63],ah
  446d81:	imul   ebp,DWORD PTR [rbp+0x61],0x6564006c
  446d88:	movsxd ebp,DWORD PTR [rcx+riz*2+0x72]
  446d8c:	add    BYTE PTR gs:[rbp+riz*2+0x66],ah
  446d91:	(bad)  
  446d92:	jne    0x446e00
  446d94:	je     0x446d96
  446d96:	fs gs data16 (bad) 
  446d9a:	jne    0x446e08
  446d9c:	je     0x446e11
  446d9e:	add    BYTE PTR [rbp+riz*2+0x66],ah
  446da2:	gs jb  0x446e17
  446da5:	(bad)  
  446da6:	(bad)  
  446da7:	ins    BYTE PTR es:[rdi],dx
  446da8:	add    BYTE PTR gs:[rbp+riz*2+0x66],ah
  446dad:	gs jb  0x446e22
  446db0:	gs add BYTE PTR fs:[rbp+riz*2+0x66],ah
  446db6:	imul   ebp,DWORD PTR [rsi+0x65],0x65640072
  446dbd:	ins    BYTE PTR es:[rdi],dx
  446dbe:	gs je  0x446e26
  446dc1:	add    BYTE PTR [rbp+riz*2+0x6c],ah
  446dc5:	imul   ebp,DWORD PTR [rbp+0x69],0x726574
  446dcc:	fs gs ins BYTE PTR es:[rdi],dx
  446dcf:	imul   ebp,DWORD PTR [rbp+0x69],0x73726574
  446dd6:	add    BYTE PTR [rbp+riz*2+0x73],ah
  446dda:	movsxd eax,DWORD PTR [rax]
  446ddc:	imul   esp,DWORD PTR fs:[rbx+0x74],0x616e6f69
  446de4:	jb     0x446e5f
  446de6:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  446dea:	(bad)  
  446deb:	(bad)  
  446dec:	ins    BYTE PTR es:[rdi],dx
  446ded:	add    BYTE PTR gs:[rcx+rbp*2+0x73],ah
  446df2:	movsxd esp,DWORD PTR [rcx+0x72]
  446df5:	add    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  446dfa:	je     0x446e65
  446dfc:	outs   dx,BYTE PTR ds:[rsi]
  446dfd:	movsxd esi,DWORD PTR [rax+rax*1+0x64]
  446e01:	outs   dx,DWORD PTR ds:[rsi]
  446e02:	add    BYTE PTR [rdi+rbp*2+0x63],ah
  446e06:	jne    0x446e75
  446e08:	outs   dx,BYTE PTR gs:[rsi]
  446e0a:	je     0x446e0c
  446e0c:	outs   dx,DWORD PTR fs:[rsi]
  446e0e:	ins    DWORD PTR es:[rdi],dx
  446e0f:	(bad)  
  446e10:	imul   ebp,DWORD PTR [rsi+0x0],0x62756f64
  446e17:	ins    BYTE PTR es:[rdi],dx
  446e18:	add    BYTE PTR gs:[rdx+rsi*2+0x6f],ah
  446e1d:	jo     0x446e1f
  446e1f:	gs (bad) 
  446e21:	movsxd ebp,DWORD PTR [rax+0x0]
  446e24:	gs ins BYTE PTR es:[rdi],dx
  446e26:	jae    0x446e8d
  446e28:	add    BYTE PTR [rbp+0x6e],ah
  446e2b:	(bad)  
  446e2c:	(bad)  
  446e2d:	ins    BYTE PTR es:[rdi],dx
  446e2e:	add    BYTE PTR gs:[rbp+0x6e],ah
  446e32:	movsxd ebp,DWORD PTR [rdi+0x64]
  446e35:	imul   ebp,DWORD PTR [rsi+0x67],0x636e6500
  446e3c:	jb     0x446eb7
  446e3e:	jo     0x446eb4
  446e40:	gs add BYTE PTR fs:[rbp+0x6e],ah
  446e45:	add    BYTE PTR fs:[rbp+0x6e],ah
  446e49:	jne    0x446eb8
  446e4b:	add    BYTE PTR [rbp+0x73],ah
  446e4e:	movsxd esp,DWORD PTR [rcx+0x70]
  446e51:	add    BYTE PTR gs:[rbp+0x76],ah
  446e55:	outs   dx,BYTE PTR gs:[rsi]
  446e57:	je     0x446e59
  446e59:	gs js  0x446ebf
  446e5c:	gs jo  0x446ed3
  446e5f:	add    BYTE PTR [rbp+0x78],ah
  446e62:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  446e66:	add    BYTE PTR gs:[rbp+0x78],ah
  446e6a:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  446e6e:	imul   ebp,DWORD PTR [rsi+0x67],0x63786500
  446e75:	ins    BYTE PTR es:[rdi],dx
  446e76:	jne    0x446eeb
  446e78:	imul   esi,DWORD PTR [rsi+0x65],0x65786500
  446e7f:	movsxd esi,DWORD PTR [rbp+0x74]
  446e82:	add    BYTE PTR gs:[rbp+0x78],ah
  446e86:	imul   esi,DWORD PTR [rbx+0x74],0x78650073
  446e8d:	jo     0x446efb
  446e8f:	(bad)  
  446e90:	imul   ebp,DWORD PTR [rsi+0x0],0x65747865
  446e97:	outs   dx,BYTE PTR ds:[rsi]
  446e98:	jae    0x446f03
  446e9a:	outs   dx,DWORD PTR ds:[rsi]
  446e9b:	outs   dx,BYTE PTR ds:[rsi]
  446e9c:	add    BYTE PTR [rbp+0x78],ah
  446e9f:	je     0x446f06
  446ea1:	jb     0x446f11
  446ea3:	(bad)  
  446ea4:	ins    BYTE PTR es:[rdi],dx
  446ea5:	add    BYTE PTR [rbp+0x78],ah
  446ea8:	je     0x446f1c
  446eaa:	(bad)  
  446eab:	movsxd esi,DWORD PTR [rax+rax*1+0x66]
  446eaf:	(bad)  
  446eb0:	ins    BYTE PTR es:[rdi],dx
  446eb1:	jae    0x446f18
  446eb3:	add    BYTE PTR [rsi+0x61],ah
  446eb6:	ins    DWORD PTR es:[rdi],dx
  446eb7:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x63746566
  446ebf:	push   0x6c696600
  446ec4:	je     0x446f2b
  446ec6:	jb     0x446ec8
  446ec8:	imul   si,WORD PTR [rdx+0x73],0x74
  446ece:	data16 ins BYTE PTR es:[rdi],dx
  446ed0:	outs   dx,DWORD PTR ds:[rsi]
  446ed1:	(bad)  
  446ed2:	je     0x446ed4
  446ed4:	outs   dx,WORD PTR ds:[rsi]
  446ed6:	ins    BYTE PTR es:[rdi],dx
  446ed7:	ins    BYTE PTR es:[rdi],dx
  446ed8:	outs   dx,DWORD PTR ds:[rsi]
  446ed9:	ja     0x446f44
  446edb:	outs   dx,BYTE PTR ds:[rsi]
  446edc:	add    BYTE PTR [esi+0x6f],ah
  446ee0:	jb     0x446ee2
  446ee2:	outs   dx,WORD PTR ds:[rsi]
  446ee4:	jb     0x446f49
  446ee6:	add    BYTE PTR gs:[rsi+0x6f],ah
  446eea:	jb     0x446f51
  446eec:	imul   esp,DWORD PTR [rdi+0x6e],0x726f6600
  446ef3:	ja     0x446f56
  446ef5:	jb     0x446f5b
  446ef7:	add    BYTE PTR [rsi+0x72],ah
  446efa:	gs gs jp 0x446f63
  446efe:	add    BYTE PTR [rsi+0x72],ah
  446f01:	outs   dx,DWORD PTR ds:[rsi]
  446f02:	ins    DWORD PTR es:[rdi],dx
  446f03:	add    BYTE PTR [rsi+0x75],ah
  446f06:	ins    BYTE PTR es:[rdi],dx
  446f07:	ins    BYTE PTR es:[rdi],dx
  446f08:	add    BYTE PTR [rsi+0x75],ah
  446f0b:	outs   dx,BYTE PTR ds:[rsi]
  446f0c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  446f10:	outs   dx,BYTE PTR ds:[rsi]
  446f11:	add    BYTE PTR [rsi+0x75],ah
  446f14:	outs   dx,BYTE PTR ds:[rsi]
  446f15:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  446f19:	outs   dx,BYTE PTR ds:[rsi]
  446f1a:	jae    0x446f1c
  446f1c:	ins    BYTE PTR es:[edi],dx
  446f1e:	outs   dx,DWORD PTR ds:[rsi]
  446f1f:	(bad)
  446f24:	jb     0x446f87
  446f26:	outs   dx,BYTE PTR ds:[rsi]
  446f27:	je     0x446f29
  446f29:	addr32 jb 0x446f8d
  446f2c:	outs   dx,BYTE PTR ds:[rsi]
  446f2d:	je     0x446f94
  446f2f:	add    BYTE PTR fs:[rdi+0x72],ah
  446f33:	gs (bad) 
  446f35:	je     0x446f9c
  446f37:	jae    0x446fad
  446f39:	add    BYTE PTR [rdi+0x72],ah
  446f3c:	outs   dx,DWORD PTR ds:[rsi]
  446f3d:	jne    0x446faf
  446f3f:	add    BYTE PTR [rax+0x61],ch
  446f42:	outs   dx,BYTE PTR ds:[rsi]
  446f43:	fs ins BYTE PTR es:[rdi],dx
  446f45:	gs jb  0x446f48
  446f48:	push   0x6e697661
  446f4d:	add    BYTE PTR [eax+0x65],ch
  446f51:	(bad)  
  446f52:	fs gs jb 0x446f56
  446f56:	push   0x646c6f
  446f5b:	push   0x72756f
  446f60:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x79746974
  446f68:	add    BYTE PTR [rcx+0x66],ch
  446f6b:	add    BYTE PTR [rcx+0x6c],ch
  446f6e:	imul   ebp,DWORD PTR [rbx+0x65],0x6d6d6900
  446f75:	gs imul esp,DWORD PTR fs:[rcx+0x74],0x6d690065
  446f7e:	ins    DWORD PTR es:[rdi],dx
  446f7f:	jne    0x446ff5
  446f81:	(bad)  
  446f82:	(bad)  
  446f83:	ins    BYTE PTR es:[rdi],dx
  446f84:	add    BYTE PTR gs:[rcx+0x6d],ch
  446f88:	jo     0x446ff6
  446f8a:	imul   esp,DWORD PTR [rbx+0x69],0x6e690074
  446f91:	add    BYTE PTR [rcx+0x6e],ch
  446f94:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  446f98:	imul   ebp,DWORD PTR [rsi+0x67],0x636e6900
  446f9f:	jb     0x447006
  446fa1:	ins    DWORD PTR es:[rdi],dx
  446fa2:	outs   dx,BYTE PTR gs:[rsi]
  446fa4:	je     0x446fa6
  446fa6:	imul   ebp,DWORD PTR [rsi+0x64],0x69007865
  446fad:	outs   dx,BYTE PTR ds:[rsi]
  446fae:	fs gs js 0x447017
  446fb2:	jae    0x446fb4
  446fb4:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
  446fbb:	add    BYTE PTR [rcx+0x6e],ch
  446fbe:	push   0x74697265
  446fc3:	jae    0x446fc5
  446fc5:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  446fcc:	ins    BYTE PTR es:[rdi],dx
  446fcd:	jns    0x446fcf
  446fcf:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
  446fd6:	imul   ebp,DWORD PTR [rsi+0x6e],0x69007265
  446fdd:	outs   dx,BYTE PTR ds:[rsi]
  446fde:	outs   dx,DWORD PTR ds:[rsi]
  446fdf:	jne    0x447055
  446fe1:	add    BYTE PTR [rcx+0x6e],ch
  446fe4:	jo     0x44705b
  446fe6:	je     0x446fe8
  446fe8:	imul   ebp,DWORD PTR [rsi+0x73],0x69736e65
  446fef:	je     0x44705a
  446ff1:	jbe    0x447058
  446ff3:	add    BYTE PTR [rcx+0x6e],ch
  446ff6:	jae    0x44705d
  446ff8:	jb     0x44706e
  446ffa:	add    BYTE PTR [rcx+0x6e],ch
  446ffd:	jae    0x447073
  446fff:	gs (bad) 
  447001:	add    BYTE PTR fs:[rcx+0x6e],ch
  447005:	je     0x447007
  447007:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  44700e:	add    BYTE PTR [rcx+0x6e],ch
  447011:	je     0x447078
  447013:	jb     0x447088
  447015:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x69]
  44701a:	outs   dx,BYTE PTR ds:[rsi]
  44701b:	je     0x447082
  44701d:	jb     0x447095
  44701f:	(bad)  
  447020:	ins    BYTE PTR es:[rdi],dx
  447021:	add    BYTE PTR [rcx+0x6e],ch
  447024:	je     0x447095
  447026:	add    BYTE PTR [rcx+0x6e],ch
  447029:	jbe    0x44709a
  44702b:	imul   esp,DWORD PTR [rbp+0x72],0x0
  44702f:	imul   esi,DWORD PTR [rbx+0x0],0x756e7369
  447036:	ins    BYTE PTR es:[rdi],dx
  447037:	ins    BYTE PTR es:[rdi],dx
  447038:	add    BYTE PTR [rcx+0x73],ch
  44703b:	outs   dx,DWORD PTR ds:[rsi]
  44703c:	ins    BYTE PTR es:[rdi],dx
  44703d:	(bad)  
  44703e:	je     0x4470a9
  447040:	outs   dx,DWORD PTR ds:[rsi]
  447041:	outs   dx,BYTE PTR ds:[rsi]
  447042:	add    BYTE PTR [rdx+0x6f],ch
  447045:	imul   ebp,DWORD PTR [rsi+0x0],0x79656b
  44704c:	ins    BYTE PTR es:[rdi],dx
  44704d:	(bad)  
  44704e:	(bad)  
  44704f:	gs ins BYTE PTR es:[rdi],dx
  447051:	add    BYTE PTR [rcx+riz*2+0x6e],ch
  447055:	addr32 jne 0x4470b9
  447058:	add    BYTE PTR gs:[ecx+eiz*2+0x72],ch
  44705e:	add    BYTE PTR gs:[ecx+eiz*2+0x73],ch
  447064:	je     0x447066
  447066:	ins    BYTE PTR es:[rdi],dx
  447067:	(bad)  
  447068:	je     0x4470cf
  44706a:	jb     0x4470cd
  44706c:	ins    BYTE PTR es:[rdi],dx
  44706d:	add    BYTE PTR [rbx+riz*2+0x5f],ch
  447071:	movsxd ebp,DWORD PTR [rdi+0x6c]
  447074:	ins    BYTE PTR es:[rdi],dx
  447075:	(bad)  
  447076:	je     0x4470dd
  447078:	add    BYTE PTR [rbx+riz*2+0x5f],ch
  44707c:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  447080:	add    BYTE PTR gs:[rbp+riz*2+0x61],ch
  447085:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x61656c00
  44708d:	imul   esi,DWORD PTR [rax+0x72],0x6f
  447091:	outs   dx,DWORD PTR ds:[rsi]
  447092:	data16 add BYTE PTR [rbp+riz*2+0x61],ch
  447097:	jae    0x44710d
  447099:	add    BYTE PTR [rbp+riz*2+0x66],ch
  44709d:	je     0x44709f
  44709f:	ins    BYTE PTR es:[rdi],dx
  4470a0:	gs jbe 0x447108
  4470a3:	ins    BYTE PTR es:[rdi],dx
  4470a4:	add    BYTE PTR [rcx+rbp*2+0x6b],ch
  4470a8:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
  4470ad:	imul   esi,DWORD PTR [rax+rax*1+0x6c],0x65747369
  4470b5:	outs   dx,BYTE PTR ds:[rsi]
  4470b6:	add    BYTE PTR [rdi+rbp*2+0x61],ch
  4470ba:	add    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  4470bf:	(bad)  
  4470c0:	ins    BYTE PTR es:[rdi],dx
  4470c1:	add    BYTE PTR [rdi+rbp*2+0x63],ch
  4470c5:	(bad)  
  4470c6:	ins    BYTE PTR es:[rdi],dx
  4470c7:	je     0x447132
  4470c9:	ins    DWORD PTR es:[rdi],dx
  4470ca:	add    BYTE PTR gs:[rdi+rbp*2+0x63],ch
  4470cf:	(bad)  
  4470d0:	ins    BYTE PTR es:[rdi],dx
  4470d1:	je     0x44713c
  4470d3:	ins    DWORD PTR es:[rdi],dx
  4470d4:	gs jae 0x44714b
  4470d7:	(bad)  
  4470d8:	ins    DWORD PTR es:[rdi],dx
  4470d9:	jo     0x4470db
  4470db:	ins    BYTE PTR es:[rdi],dx
  4470dc:	outs   dx,DWORD PTR ds:[rsi]
  4470dd:	movsxd esp,DWORD PTR [rcx+0x74]
  4470e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x636f6c00
  4470e7:	imul   eax,DWORD PTR [rax],0x6d
  4470ea:	(bad)  
  4470eb:	jo     0x44715d
  4470ed:	imul   ebp,DWORD PTR [rsi+0x67],0x74616d00
  4470f4:	movsxd ebp,DWORD PTR [rax+0x0]
  4470f7:	ins    DWORD PTR es:[rdi],dx
  4470f8:	(bad)  
  4470f9:	je     0x447160
  4470fb:	jb     0x447166
  4470fd:	(bad)  
  4470fe:	ins    BYTE PTR es:[rdi],dx
  4470ff:	imul   edi,DWORD PTR [rdx+0x65],0x616d0064
  447106:	js     0x44717e
  447108:	(bad)  
  447109:	ins    BYTE PTR es:[rdi],dx
  44710a:	jne    0x447171
  44710c:	add    BYTE PTR [rbp+0x69],ch
  44710f:	outs   dx,BYTE PTR ds:[rsi]
  447110:	jne    0x447186
  447112:	add    BYTE PTR gs:[rbp+0x69],ch
  447116:	outs   dx,BYTE PTR ds:[rsi]
  447117:	jbe    0x44717a
  447119:	ins    BYTE PTR es:[rdi],dx
  44711a:	jne    0x447181
  44711c:	add    BYTE PTR [rbp+0x6f],ch
  44711f:	fs add BYTE PTR gs:[rbp+0x6f],ch
  447124:	outs   dx,BYTE PTR ds:[rsi]
  447125:	je     0x44718f
  447127:	add    BYTE PTR [rbp+0x6f],ch
  44712a:	jbe    0x447191
  44712c:	add    BYTE PTR [rsi+0x61],ch
  44712f:	ins    DWORD PTR es:[rdi],dx
  447130:	add    BYTE PTR gs:[rsi+0x61],ch
  447134:	ins    DWORD PTR es:[rdi],dx
  447135:	gs jae 0x447138
  447138:	outs   dx,BYTE PTR ds:[rsi]
  447139:	(bad)  
  44713a:	je     0x4471a5
  44713c:	outs   dx,DWORD PTR ds:[rsi]
  44713d:	outs   dx,BYTE PTR ds:[rsi]
  44713e:	(bad)  
  44713f:	ins    BYTE PTR es:[rdi],dx
  447140:	add    BYTE PTR [rsi+0x61],ch
  447143:	je     0x4471ba
  447145:	jb     0x4471a8
  447147:	ins    BYTE PTR es:[rdi],dx
  447148:	add    BYTE PTR [rsi+0x63],ch
  44714b:	push   0x6e007261
  447150:	gs js  0x4471c7
  447153:	add    BYTE PTR [rsi+0x6f],ch
  447156:	add    BYTE PTR [rsi+0x6f],ch
  447159:	outs   dx,BYTE PTR ds:[rsi]
  44715a:	add    BYTE PTR gs:[rsi+0x6f],ch
  44715e:	je     0x447160
  447160:	outs   dx,BYTE PTR ds:[rsi]
  447161:	outs   dx,DWORD PTR ds:[rsi]
  447162:	je     0x4471cc
  447164:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e00
  44716b:	imul   esp,DWORD PTR [rsi+0x79],0x746f6e00
  447172:	outs   dx,BYTE PTR ds:[rsi]
  447173:	jne    0x4471e1
  447175:	ins    BYTE PTR es:[rdi],dx
  447176:	add    BYTE PTR [rsi+0x6f],ch
  447179:	ja     0x4471dc
  44717b:	imul   esi,DWORD PTR [rax+rax*1+0x6e],0x6c6c75
  447183:	outs   dx,BYTE PTR ds:[rsi]
  447184:	jne    0x4471f2
  447186:	ins    BYTE PTR es:[rdi],dx
  447187:	imul   esp,DWORD PTR [rsi+0x0],0x6c6c756e
  44718e:	jae    0x447190
  447190:	outs   dx,BYTE PTR ds:[rsi]
  447191:	jne    0x447200
  447193:	gs jb  0x4471ff
  447196:	movsxd eax,DWORD PTR [rax]
  447198:	outs   dx,DWORD PTR ds:[rsi]
  447199:	(bad)  
  44719a:	push   0x65
  44719c:	movsxd esi,DWORD PTR [rax+rax*1+0x6f]
  4471a0:	data16 add BYTE PTR [rdi+0x66],ch
  4471a4:	data16 add BYTE PTR [rdi+0x66],ch
  4471a8:	data16 jae 0x447210
  4471ab:	je     0x4471ad
  4471ad:	outs   dx,DWORD PTR ds:[rsi]
  4471ae:	imul   esp,DWORD PTR [rbx+rsi*2+0x0],0x6f006e6f
  4471b6:	outs   dx,BYTE PTR ds:[rsi]
  4471b7:	ins    BYTE PTR es:[rdi],dx
  4471b8:	jns    0x4471ba
  4471ba:	outs   dx,DWORD PTR ds:[rsi]
  4471bb:	jo     0x447222
  4471bd:	jb     0x447220
  4471bf:	je     0x447230
  4471c1:	jb     0x4471c3
  4471c3:	outs   dx,DWORD PTR ds:[rsi]
  4471c4:	jo     0x44723a
  4471c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f00
  4471cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f0073
  4471d4:	add    BYTE PTR [rdi+0x72],ch
  4471d7:	fs gs jb 0x4471db
  4471db:	outs   dx,DWORD PTR ds:[rsi]
  4471dc:	jb     0x447242
  4471de:	imul   ebp,DWORD PTR [rsi+0x61],0x7974696c
  4471e5:	add    BYTE PTR [rdi+0x75],ch
  4471e8:	je     0x4471ea
  4471ea:	outs   dx,DWORD PTR ds:[rsi]
  4471eb:	jne    0x447261
  4471ed:	gs jb  0x4471f0
  4471f0:	outs   dx,DWORD PTR ds:[rsi]
  4471f1:	jbe    0x447258
  4471f3:	jb     0x4471f5
  4471f5:	outs   dx,DWORD PTR ds:[rsi]
  4471f6:	jbe    0x44725d
  4471f8:	jb     0x447266
  4471fa:	(bad)  
  4471fb:	jo     0x447270
  4471fd:	add    BYTE PTR [rdi+0x76],ch
  447200:	gs jb  0x44726f
  447203:	(bad)  
  447204:	jns    0x447206
  447206:	outs   dx,DWORD PTR ds:[rsi]
  447207:	ja     0x447277
  447209:	gs add BYTE PTR fs:[rdi+0x77],ch
  44720e:	outs   dx,BYTE PTR ds:[rsi]
  44720f:	gs jb  0x447212
  447212:	jo     0x447275
  447214:	jb     0x447289
  447216:	gs jb  0x447219
  447219:	jo     0x44727c
  44721b:	jb     0x447291
  44721d:	imul   esp,DWORD PTR [rcx+0x6c],0x72617000
  447224:	je     0x44728f
  447226:	je     0x447291
  447228:	outs   dx,DWORD PTR ds:[rsi]
  447229:	outs   dx,BYTE PTR ds:[rsi]
  44722a:	add    BYTE PTR [rax+0x61],dh
  44722d:	jae    0x4472a2
  44722f:	imul   ebp,DWORD PTR [rsi+0x67],0x73617000
  447236:	jae    0x4472af
  447238:	outs   dx,DWORD PTR ds:[rsi]
  447239:	jb     0x44729f
  44723b:	add    BYTE PTR [rax+0x6c],dh
  44723e:	(bad)  
  44723f:	movsxd ebp,DWORD PTR [rcx+0x6e]
  447242:	add    BYTE PTR [eax+0x6c],dh
  447246:	(bad)  
  447247:	outs   dx,BYTE PTR ds:[rsi]
  447248:	jae    0x44724a
  44724a:	jo     0x4472bb
  44724c:	jae    0x4472b7
  44724e:	je     0x4472b9
  447250:	outs   dx,DWORD PTR ds:[rsi]
  447251:	outs   dx,BYTE PTR ds:[rsi]
  447252:	add    BYTE PTR [rax+0x72],dh
  447255:	movsxd esp,DWORD PTR gs:[rbp+0x64]
  447259:	imul   ebp,DWORD PTR [rsi+0x67],0x65727000
  447260:	movsxd ebp,DWORD PTR [rcx+0x73]
  447263:	imul   ebp,DWORD PTR [rdi+0x6e],0x65727000
  44726a:	jo     0x4472cd
  44726c:	jb     0x4472d3
  44726e:	add    BYTE PTR [rax+0x72],dh
  447271:	gs jo  0x4472d5
  447274:	jb     0x4472db
  447276:	add    BYTE PTR fs:[rax+0x72],dh
  44727a:	gs jae 0x4472e2
  44727d:	jb     0x4472f5
  44727f:	add    BYTE PTR gs:[rax+0x72],dh
  447283:	imul   ebp,DWORD PTR [rbp+0x61],0x70007972
  44728a:	jb     0x4472f5
  44728c:	outs   dx,DWORD PTR ds:[rsi]
  44728d:	jb     0x44728f
  44728f:	jo     0x447303
  447291:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
  447298:	jae    0x44729a
  44729a:	jo     0x44730e
  44729c:	outs   dx,DWORD PTR ds:[rsi]
  44729d:	movsxd esp,DWORD PTR [rbp+0x64]
  4472a0:	jne    0x447314
  4472a2:	(bad)  
  4472a3:	ins    BYTE PTR es:[rdi],dx
  4472a4:	add    BYTE PTR [rax+0x72],dh
  4472a7:	outs   dx,DWORD PTR ds:[rsi]
  4472a8:	movsxd esp,DWORD PTR [rbp+0x64]
  4472ab:	jne    0x44731f
  4472ad:	add    BYTE PTR gs:[rax+0x72],dh
  4472b1:	outs   dx,DWORD PTR ds:[rsi]
  4472b2:	addr32 jb 0x447316
  4472b5:	ins    DWORD PTR es:[rdi],dx
  4472b6:	add    BYTE PTR [rcx+0x75],dh
  4472b9:	outs   dx,DWORD PTR ds:[rsi]
  4472ba:	je     0x447321
  4472bc:	add    BYTE PTR [rdx+0x61],dh
  4472bf:	outs   dx,BYTE PTR ds:[rsi]
  4472c0:	add    BYTE PTR gs:[edx+0x65],dh
  4472c5:	(bad)  
  4472c6:	add    BYTE PTR fs:[rdx+0x65],dh
  4472ca:	(bad)  
  4472cb:	ins    BYTE PTR es:[rdi],dx
  4472cc:	add    BYTE PTR [rdx+0x65],dh
  4472cf:	(bad)  
  4472d0:	jae    0x447345
  4472d2:	imul   esp,DWORD PTR [rdi+0x6e],0x63657200
  4472d9:	push   0x6b6365
  4472de:	jb     0x447345
  4472e0:	movsxd esi,DWORD PTR [rbp+0x72]
  4472e3:	jae    0x44734e
  4472e5:	jbe    0x44734c
  4472e7:	add    BYTE PTR [rdx+0x65],dh
  4472ea:	data16 add BYTE PTR [rdx+0x65],dh
  4472ee:	data16 gs jb 0x447357
  4472f2:	outs   dx,BYTE PTR ds:[rsi]
  4472f3:	movsxd esp,DWORD PTR [rbp+0x73]
  4472f6:	add    BYTE PTR [rdx+0x65],dh
  4472f9:	data16 jb 0x447361
  4472fc:	jae    0x447366
  4472fe:	add    BYTE PTR [rdx+0x65],dh
  447301:	imul   ebp,DWORD PTR [rsi+0x64],0x72007865
  447308:	gs ins BYTE PTR es:[rdi],dx
  44730a:	(bad)  
  44730b:	je     0x447376
  44730d:	jbe    0x447374
  44730f:	add    BYTE PTR [rdx+0x65],dh
  447312:	ins    BYTE PTR es:[rdi],dx
  447313:	gs (bad) 
  447315:	jae    0x44737c
  447317:	add    BYTE PTR [rdx+0x65],dh
  44731a:	outs   dx,BYTE PTR ds:[rsi]
  44731b:	(bad)  
  44731c:	ins    DWORD PTR es:[rdi],dx
  44731d:	add    BYTE PTR gs:[rdx+0x65],dh
  447321:	jo     0x447388
  447323:	(bad)  
  447324:	je     0x447387
  447326:	(bad)  
  447327:	ins    BYTE PTR es:[rdi],dx
  447328:	add    BYTE PTR gs:[rdx+0x65],dh
  44732c:	jo     0x44739a
  44732e:	(bad)  
  44732f:	movsxd esp,DWORD PTR [rbp+0x0]
  447332:	jb     0x447399
  447334:	jo     0x4473a2
  447336:	imul   esp,DWORD PTR [rbx+0x61],0x73657200
  44733d:	gs je  0x447340
  447340:	jb     0x4473a7
  447342:	jae    0x4473b8
  447344:	(bad)  
  447345:	jb     0x4473bb
  447347:	add    BYTE PTR [rdx+0x65],dh
  44734a:	jae    0x4473c0
  44734c:	jb     0x4473b7
  44734e:	movsxd esi,DWORD PTR [rax+rax*1+0x72]
  447352:	gs je  0x4473ca
  447355:	jb     0x4473c5
  447357:	imul   ebp,DWORD PTR [rsi+0x67],0x74657200
  44735e:	jne    0x4473d2
  447360:	outs   dx,BYTE PTR ds:[rsi]
  447361:	jae    0x447363
  447363:	jb     0x4473ca
  447365:	jbe    0x4473d6
  447367:	imul   esp,DWORD PTR [rbp+0x0],0x72
  44736b:	imul   esp,DWORD PTR [rdi+0x68],0x6f720074
  447372:	ins    BYTE PTR es:[rdi],dx
  447373:	add    BYTE PTR gs:[rdx+0x6f],dh
  447377:	ins    BYTE PTR es:[rdi],dx
  447378:	ins    BYTE PTR es:[rdi],dx
  447379:	(bad)  
  44737b:	movsxd ebp,DWORD PTR [rbx+0x0]
  44737e:	jb     0x4473ef
  447380:	ja     0x447382
  447382:	jb     0x4473f3
  447384:	ja     0x4473f9
  447386:	add    BYTE PTR [rdx+0x75],dh
  447389:	ins    BYTE PTR es:[rdi],dx
  44738a:	add    BYTE PTR gs:[rbx+0x61],dh
  44738e:	jbe    0x4473f5
  447390:	jo     0x447401
  447392:	imul   ebp,DWORD PTR [rsi+0x74],0x68637300
  447399:	gs ins DWORD PTR es:[rdi],dx
  44739b:	(bad)  
  44739c:	add    BYTE PTR [rbx+0x63],dh
  44739f:	jb     0x447410
  4473a1:	ins    BYTE PTR es:[rdi],dx
  4473a2:	ins    BYTE PTR es:[rdi],dx
  4473a3:	add    BYTE PTR [rbx+0x65],dh
  4473a6:	(bad)  
  4473a7:	jb     0x44740c
  4473a9:	push   0x63657300
  4473ae:	outs   dx,DWORD PTR ds:[rsi]
  4473af:	outs   dx,BYTE PTR ds:[rsi]
  4473b0:	add    BYTE PTR fs:[rbx+0x65],dh
  4473b4:	movsxd esi,DWORD PTR [rbp+0x72]
  4473b7:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x656c6573
  4473bf:	movsxd esi,DWORD PTR [rax+rax*1+0x73]
  4473c3:	gs jno 0x44743b
  4473c6:	outs   dx,BYTE PTR gs:[rsi]
  4473c8:	movsxd esp,DWORD PTR [rbp+0x0]
  4473cb:	jae    0x447432
  4473cd:	jno    0x447444
  4473cf:	outs   dx,BYTE PTR gs:[rsi]
  4473d1:	movsxd esp,DWORD PTR [rbp+0x73]
  4473d4:	add    BYTE PTR [rbx+0x65],dh
  4473d7:	jb     0x447442
  4473d9:	(bad)  
  4473da:	ins    BYTE PTR es:[rdi],dx
  4473db:	imul   edi,DWORD PTR [rdx+0x61],0x656c62
  4473e2:	jae    0x447449
  4473e4:	jb     0x44745c
  4473e6:	gs jb  0x4473e9
  4473e9:	jae    0x447450
  4473eb:	jae    0x447460
  4473ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x73657300
  4473f4:	jae    0x44745f
  4473f6:	outs   dx,DWORD PTR ds:[rsi]
  4473f7:	outs   dx,BYTE PTR ds:[rsi]
  4473f8:	pop    rdi
  4473f9:	jne    0x44746e
  4473fb:	gs jb  0x4473fe
  4473fe:	jae    0x447465
  447400:	je     0x447402
  447402:	jae    0x447469
  447404:	je     0x447475
  447406:	data16 add BYTE PTR [rbx+0x68],dh
  44740a:	(bad)  
  44740b:	jb     0x447472
  44740d:	add    BYTE PTR [rbx+0x68],dh
  447410:	outs   dx,DWORD PTR ds:[rsi]
  447411:	ja     0x447413
  447413:	jae    0x44747e
  447415:	ins    DWORD PTR es:[rdi],dx
  447416:	imul   ebp,DWORD PTR [rcx+riz*2+0x72],0x6d697300
  44741e:	jo     0x44748c
  447420:	add    BYTE PTR gs:[rbx+0x6d],dh
  447424:	(bad)  
  447425:	ins    BYTE PTR es:[rdi],dx
  447426:	ins    BYTE PTR es:[rdi],dx
  447427:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7300
  44742e:	jo     0x4474a3
  447430:	push   0x7300746f
  447435:	outs   dx,DWORD PTR ds:[rsi]
  447436:	ins    DWORD PTR es:[rdi],dx
  447437:	add    BYTE PTR gs:[rbx+0x74],dh
  44743b:	(bad)  
  44743c:	(bad)  
  44743d:	ins    BYTE PTR es:[rdi],dx
  44743e:	add    BYTE PTR gs:[rbx+0x74],dh
  447442:	(bad)  
  447443:	outs   dx,BYTE PTR ds:[rsi]
  447444:	fs (bad) 
  447446:	ins    BYTE PTR es:[rdi],dx
  447447:	outs   dx,DWORD PTR ds:[rsi]
  447448:	outs   dx,BYTE PTR ds:[rsi]
  447449:	add    BYTE PTR gs:[rbx+0x74],dh
  44744d:	(bad)  
  44744e:	jb     0x4474c4
  447450:	add    BYTE PTR [rbx+0x74],dh
  447453:	(bad)  
  447454:	je     0x4474bb
  447456:	ins    DWORD PTR es:[rdi],dx
  447457:	outs   dx,BYTE PTR gs:[rsi]
  447459:	je     0x44745b
  44745b:	jae    0x4474d1
  44745d:	(bad)  
  44745e:	je     0x4474c9
  447460:	jae    0x4474d6
  447462:	imul   esp,DWORD PTR [rbx+0x73],0x64747300
  447469:	imul   ebp,DWORD PTR [rsi+0x0],0x6f647473
  447470:	jne    0x4474e6
  447472:	add    BYTE PTR [rbx+0x74],dh
  447475:	outs   dx,DWORD PTR ds:[rsi]
  447476:	jb     0x4474d9
  447478:	add    BYTE PTR gs:[ebx+0x74],dh
  44747d:	jb     0x4474e8
  44747f:	movsxd esi,DWORD PTR [rax+rax*1+0x73]
  447483:	je     0x4474f7
  447485:	imul   esi,DWORD PTR [rax+0x0],0x73627573
  44748c:	je     0x447500
  44748e:	imul   ebp,DWORD PTR [rsi+0x67],0x6d797300
  447495:	ins    DWORD PTR es:[rdi],dx
  447496:	gs je  0x44750b
  447499:	imul   esp,DWORD PTR [rbx+0x0],0x69737973
  4474a0:	add    BYTE PTR fs:[rbx+0x79],dh
  4474a4:	jae    0x44751a
  4474a6:	gs ins DWORD PTR es:[rdi],dx
  4474a8:	add    BYTE PTR [rcx+riz*2+0x62],dh
  4474ac:	ins    BYTE PTR es:[rdi],dx
  4474ad:	add    BYTE PTR gs:[rcx+riz*2+0x62],dh
  4474b2:	ins    BYTE PTR es:[rdi],dx
  4474b3:	gs jae 0x4474b6
  4474b6:	je     0x447519
  4474b8:	(bad)  
  4474b9:	ins    BYTE PTR es:[rdi],dx
  4474ba:	gs jae 0x44752d
  4474bd:	(bad)  
  4474be:	movsxd esp,DWORD PTR [rbp+0x0]
  4474c1:	je     0x447528
  4474c3:	ins    DWORD PTR es:[rdi],dx
  4474c4:	jo     0x4474c6
  4474c6:	je     0x44752d
  4474c8:	ins    DWORD PTR es:[rdi],dx
  4474c9:	jo     0x447537
  4474cb:	(bad)  
  4474cc:	je     0x447533
  4474ce:	add    BYTE PTR [rbp+riz*2+0x6d],dh
  4474d2:	jo     0x447543
  4474d4:	jb     0x447537
  4474d6:	jb     0x447551
  4474d8:	add    BYTE PTR [rbp+riz*2+0x78],dh
  4474dc:	je     0x4474de
  4474de:	je     0x447548
  4474e0:	outs   dx,BYTE PTR gs:[rsi]
  4474e2:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  4474e6:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  4474eb:	gs jae 0x447562
  4474ee:	(bad)  
  4474ef:	ins    DWORD PTR es:[rdi],dx
  4474f0:	jo     0x4474f2
  4474f2:	je     0x447563
  4474f4:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  4474f8:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x72740067
  447500:	(bad)  
  447501:	outs   dx,BYTE PTR ds:[rsi]
  447502:	jae    0x447565
  447504:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  447508:	outs   dx,BYTE PTR ds:[rsi]
  447509:	add    BYTE PTR [rdx+rsi*2+0x65],dh
  44750d:	(bad)  
  44750e:	je     0x447510
  447510:	je     0x447584
  447512:	imul   esp,DWORD PTR [rdi+0x67],0x74007265
  447519:	jb     0x447584
  44751b:	ins    DWORD PTR es:[rdi],dx
  44751c:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  447520:	add    BYTE PTR gs:[rdx+rsi*2+0x75],dh
  447525:	outs   dx,BYTE PTR ds:[rsi]
  447526:	movsxd esp,DWORD PTR [rcx+0x74]
  447529:	add    BYTE PTR gs:[rdx+rsi*2+0x75],dh
  44752e:	jae    0x4475a4
  447530:	gs add BYTE PTR fs:[rcx+rdi*2+0x70],dh
  447536:	add    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  44753b:	gs jae 0x44753e
  44753e:	jne    0x4475ae
  447540:	(bad)  
  447541:	outs   dx,DWORD PTR ds:[rsi]
  447542:	jne    0x4475b2
  447544:	fs gs add BYTE PTR fs:[rbp+0x6e],dh
  44754a:	movsxd ebp,DWORD PTR [rdi+0x6d]
  44754d:	ins    DWORD PTR es:[rdi],dx
  44754e:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e750064
  447556:	outs   dx,BYTE PTR gs:[rsi]
  447558:	movsxd esi,DWORD PTR [rdx+0x79]
  44755b:	jo     0x4475d1
  44755d:	gs add BYTE PTR fs:[rbp+0x6e],dh
  447562:	imul   ebp,DWORD PTR [rdi+0x6e],0x696e7500
  447569:	jno    0x4475e0
  44756b:	add    BYTE PTR gs:[rbp+0x6e],dh
  44756f:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  447573:	outs   dx,BYTE PTR ds:[rsi]
  447574:	add    BYTE PTR [rbp+0x6e],dh
  447577:	ins    BYTE PTR es:[rdi],dx
  447578:	imul   esi,DWORD PTR [rbx+0x74],0x75006e65
  44757f:	outs   dx,BYTE PTR ds:[rsi]
  447580:	ins    BYTE PTR es:[rdi],dx
  447581:	outs   dx,DWORD PTR ds:[rsi]
  447582:	addr32 gs add BYTE PTR fs:[ebp+0x6e],dh
  447589:	je     0x4475f4
  44758b:	ins    BYTE PTR es:[rdi],dx
  44758c:	add    BYTE PTR [rbp+0x70],dh
  44758f:	fs (bad) 
  447591:	je     0x4475f8
  447593:	add    BYTE PTR [rbp+0x73],dh
  447596:	gs jb  0x447599
  447599:	jne    0x44760e
  44759b:	imul   ebp,DWORD PTR [rsi+0x67],0x63617600
  4475a2:	jne    0x447619
  4475a4:	ins    DWORD PTR es:[rdi],dx
  4475a5:	add    BYTE PTR [rsi+0x61],dh
  4475a8:	ins    BYTE PTR es:[rdi],dx
  4475a9:	imul   esp,DWORD PTR [rax+rax*1+0x76],0x64696c61
  4475b1:	(bad)  
  4475b2:	je     0x447619
  4475b4:	add    BYTE PTR [rsi+0x61],dh
  4475b7:	ins    BYTE PTR es:[rdi],dx
  4475b8:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x7600726f
  4475c0:	(bad)  
  4475c1:	ins    BYTE PTR es:[rdi],dx
  4475c2:	jne    0x447629
  4475c4:	add    BYTE PTR [rsi+0x61],dh
  4475c7:	ins    BYTE PTR es:[rdi],dx
  4475c8:	jne    0x44762f
  4475ca:	jae    0x4475cc
  4475cc:	jbe    0x44762f
  4475ce:	jb     0x447633
  4475d0:	push   0x76007261
  4475d5:	(bad)  
  4475d6:	jb     0x447641
  4475d8:	(bad)  
  4475d9:	imul   esp,DWORD PTR fs:[rbx+0x0],0x79726176
  4475e1:	imul   ebp,DWORD PTR [rsi+0x67],0x72657600
  4475e8:	(bad)  
  4475e9:	outs   dx,DWORD PTR ds:[rsi]
  4475ea:	jae    0x447651
  4475ec:	add    BYTE PTR [rsi+0x65],dh
  4475ef:	jb     0x447664
  4475f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x65697600
  4475f8:	ja     0x4475fa
  4475fa:	jbe    0x447665
  4475fc:	gs ja  0x447672
  4475ff:	add    BYTE PTR [rsi+0x6f],dh
  447602:	ins    BYTE PTR es:[rdi],dx
  447603:	(bad)  
  447604:	je     0x44766f
  447606:	ins    BYTE PTR es:[rdi],dx
  447607:	add    BYTE PTR gs:[rdi+0x68],dh
  44760b:	outs   dx,BYTE PTR gs:[rsi]
  44760d:	add    BYTE PTR [rdi+0x68],dh
  447610:	gs jb  0x447678
  447613:	add    BYTE PTR [rdi+0x68],dh
  447616:	imul   esi,DWORD PTR [rbp+riz*2+0x73],0x65636170
  44761e:	add    BYTE PTR [rdi+0x69],dh
  447621:	outs   dx,BYTE PTR ds:[rsi]
  447622:	outs   dx,DWORD PTR fs:[rsi]
  447624:	ja     0x447626
  447626:	ja     0x447691
  447628:	je     0x447692
  44762a:	add    BYTE PTR [rdi+0x69],dh
  44762d:	je     0x447697
  44762f:	imul   ebp,DWORD PTR [rsi+0x0],0x68746977
  447636:	outs   dx,DWORD PTR ds:[rsi]
  447637:	jne    0x4476ad
  447639:	add    BYTE PTR [rdi+0x6f],dh
  44763c:	jb     0x4476a9
  44763e:	add    BYTE PTR [rdi+0x72],dh
  447641:	(bad)  
  447642:	jo     0x4476b4
  447644:	gs jb  0x447647
  447647:	ja     0x4476bb
  447649:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6c6d78
  447651:	js     0x4476c0
  447653:	ins    BYTE PTR es:[rdi],dx
  447654:	(bad)  
  447655:	je     0x4476cb
  447657:	jb     0x4476c2
  447659:	(bad)  
  44765a:	jne    0x4476d0
  44765c:	gs jae 0x44765f
  44765f:	js     0x4476ce
  447661:	ins    BYTE PTR es:[rdi],dx
  447662:	movsxd ebp,DWORD PTR [rdi+0x6e]
  447665:	movsxd esp,DWORD PTR [rcx+0x74]
  447668:	add    BYTE PTR [rax+0x6d],bh
  44766b:	ins    BYTE PTR es:[rdi],dx
  44766c:	gs ins BYTE PTR es:[rdi],dx
  44766e:	gs ins DWORD PTR es:[rdi],dx
  447670:	outs   dx,BYTE PTR gs:[rsi]
  447672:	je     0x447674
  447674:	js     0x4476e3
  447676:	ins    BYTE PTR es:[rdi],dx
  447677:	gs js  0x4476e3
  44767a:	jae    0x4476f0
  44767c:	jae    0x44767e
  44767e:	js     0x4476ed
  447680:	ins    BYTE PTR es:[rdi],dx
  447681:	outs   dx,WORD PTR ds:[rsi]
  447683:	jb     0x4476ea
  447685:	jae    0x4476fb
  447687:	add    BYTE PTR [rax+0x6d],bh
  44768a:	ins    BYTE PTR es:[rdi],dx
  44768b:	jo     0x4476ee
  44768d:	jb     0x447702
  44768f:	add    BYTE PTR gs:[rax+0x6d],bh
  447693:	ins    BYTE PTR es:[rdi],dx
  447694:	jo     0x4476ff
  447696:	add    BYTE PTR [rax+0x6d],bh
  447699:	ins    BYTE PTR es:[rdi],dx
  44769a:	jb     0x44770b
  44769c:	outs   dx,DWORD PTR ds:[rsi]
  44769d:	je     0x44769f
  44769f:	js     0x44770e
  4476a1:	ins    BYTE PTR es:[rdi],dx
  4476a2:	jae    0x447709
  4476a4:	jb     0x44770f
  4476a6:	(bad)  
  4476a7:	ins    BYTE PTR es:[rdi],dx
  4476a8:	imul   edi,DWORD PTR [rdx+0x65],0x61657900
  4476af:	jb     0x4476b1
  4476b1:	jns    0x447718
  4476b3:	jae    0x4476b5
  4476b5:	jp     0x447726
  4476b7:	outs   dx,BYTE PTR ds:[rsi]
  4476b8:	add    BYTE PTR gs:[rax],al
  4476bb:	add    BYTE PTR [rax],al
  4476bd:	add    BYTE PTR [rax],al
  4476bf:	add    ah,al
  4476c1:	push   0x44
	...
  4476cf:	add    dl,cl
  4476d1:	push   0x44
	...
  4476df:	add    bl,dl
  4476e1:	push   0x44
	...
  4476ef:	add    dl,bl
  4476f1:	push   0x44
	...
  4476ff:	add    cl,ah
  447701:	push   0x44
	...
  44770f:	add    ch,ah
  447711:	push   0x44
	...
  44771f:	add    bl,ch
  447721:	push   0x44
	...
  44772f:	add    cl,dh
  447731:	push   0x44
	...
  44773f:	add    bl,bh
  447741:	push   0x44
  447743:	add    BYTE PTR [rax],al
  447745:	add    BYTE PTR [rax],al
  447747:	add    BYTE PTR [rax],al
  447749:	add    BYTE PTR [rbx],al
  44774b:	add    BYTE PTR [rax],al
  44774d:	add    BYTE PTR [rax],al
  44774f:	add    bh,bh
  447751:	push   0x44
	...
  44775f:	add    BYTE PTR [rbx+rbp*2],al
  447762:	add    BYTE PTR [rax],r8b
	...
  44776d:	add    BYTE PTR [rax],al
  44776f:	add    BYTE PTR [rdx],cl
  447771:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44777e:	add    BYTE PTR [rax],al
  447780:	adc    DWORD PTR [rbx+0x44],ebp
  447783:	add    BYTE PTR [rax],al
  447785:	add    BYTE PTR [rax],al
  447787:	add    BYTE PTR [rax],al
  447789:	add    BYTE PTR [rbx],al
  44778b:	add    BYTE PTR [rax],al
  44778d:	add    BYTE PTR [rax],al
  44778f:	add    BYTE PTR [rcx],bl
  447791:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  447796:	add    BYTE PTR [rax],al
  447798:	add    BYTE PTR [rax],al
  44779a:	add    eax,DWORD PTR [rax]
  44779c:	add    BYTE PTR [rax],al
  44779e:	add    BYTE PTR [rax],al
  4477a0:	and    DWORD PTR [rbx+0x44],ebp
  4477a3:	add    BYTE PTR [rax],al
  4477a5:	add    BYTE PTR [rax],al
  4477a7:	add    BYTE PTR [rax],al
  4477a9:	add    BYTE PTR [rbx],al
  4477ab:	add    BYTE PTR [rax],al
  4477ad:	add    BYTE PTR [rax],al
  4477af:	add    BYTE PTR [rip+0x446b],ah        # 0x44bc20
  4477b5:	add    BYTE PTR [rax],al
  4477b7:	add    BYTE PTR [rax],al
  4477b9:	add    BYTE PTR [rbx],al
  4477bb:	add    BYTE PTR [rax],al
  4477bd:	add    BYTE PTR [rax],al
  4477bf:	add    BYTE PTR [rcx],ch
  4477c1:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  4477c6:	add    BYTE PTR [rax],al
  4477c8:	add    BYTE PTR [rax],al
  4477ca:	add    eax,DWORD PTR [rax]
  4477cc:	add    BYTE PTR [rax],al
  4477ce:	add    BYTE PTR [rax],al
  4477d0:	(bad)  
  4477d1:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  4477d6:	add    BYTE PTR [rax],al
  4477d8:	add    BYTE PTR [rax],al
  4477da:	add    eax,DWORD PTR [rax]
  4477dc:	add    BYTE PTR [rax],al
  4477de:	add    BYTE PTR [rax],al
  4477e0:	xor    ch,BYTE PTR [rbx+0x44]
  4477e3:	add    BYTE PTR [rax],al
  4477e5:	add    BYTE PTR [rax],al
  4477e7:	add    BYTE PTR [rax],al
  4477e9:	add    BYTE PTR [rbx],al
  4477eb:	add    BYTE PTR [rax],al
  4477ed:	add    BYTE PTR [rax],al
  4477ef:	add    BYTE PTR [rsi],dh
  4477f1:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  4477fe:	add    BYTE PTR [rax],al
  447800:	rex imul eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44780e:	add    BYTE PTR [rax],al
  447810:	imul   rax,QWORD PTR [r8+r8*1+0x0],0x0
  447816:	add    BYTE PTR [rax],al
  447818:	add    BYTE PTR [rax],al
  44781a:	add    eax,DWORD PTR [rax]
  44781c:	add    BYTE PTR [rax],al
  44781e:	add    BYTE PTR [rax],al
  447820:	push   rsi
  447821:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44782e:	add    BYTE PTR [rax],al
  447830:	pop    rcx
  447831:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44783e:	add    BYTE PTR [rax],al
  447840:	movsxd ebp,DWORD PTR [rbx+0x44]
  447843:	add    BYTE PTR [rax],al
  447845:	add    BYTE PTR [rax],al
  447847:	add    BYTE PTR [rax],al
  447849:	add    BYTE PTR [rdx],al
  44784b:	add    BYTE PTR [rax],al
  44784d:	add    BYTE PTR [rax],al
  44784f:	add    BYTE PTR [rcx+0x6b],dh
  447852:	add    BYTE PTR [rax],r8b
	...
  44785d:	add    BYTE PTR [rax],al
  44785f:	add    BYTE PTR [rdx+0x6b],bh
  447862:	add    BYTE PTR [rax],r8b
	...
  44786d:	add    BYTE PTR [rax],al
  44786f:	add    BYTE PTR [rcx+0x446b],al
	...
  44787d:	add    BYTE PTR [rax],al
  44787f:	add    BYTE PTR [rdi+0x446b],al
  447885:	add    BYTE PTR [rax],al
  447887:	add    BYTE PTR [rax],al
  447889:	add    BYTE PTR [rcx],al
  44788b:	add    BYTE PTR [rax],al
  44788d:	add    BYTE PTR [rax],al
  44788f:	add    BYTE PTR [rdi+0x446b],cl
  447895:	add    BYTE PTR [rax],al
  447897:	add    BYTE PTR [rax],al
  447899:	add    BYTE PTR [rcx],al
  44789b:	add    BYTE PTR [rax],al
  44789d:	add    BYTE PTR [rax],al
  44789f:	add    BYTE PTR [rsi+0x446b],dl
  4478a5:	add    BYTE PTR [rax],al
  4478a7:	add    BYTE PTR [rax],al
  4478a9:	add    BYTE PTR [rdx],al
  4478ab:	add    BYTE PTR [rax],al
  4478ad:	add    BYTE PTR [rax],al
  4478af:	add    BYTE PTR [rbp+0x446b],bl
  4478b5:	add    BYTE PTR [rax],al
  4478b7:	add    BYTE PTR [rax],al
  4478b9:	add    BYTE PTR [rcx],al
  4478bb:	add    BYTE PTR [rax],al
  4478bd:	add    BYTE PTR [rax],al
  4478bf:	add    BYTE PTR [rcx+0x446b],ah
  4478c5:	add    BYTE PTR [rax],al
  4478c7:	add    BYTE PTR [rax],al
  4478c9:	add    BYTE PTR [rcx],al
  4478cb:	add    BYTE PTR [rax],al
  4478cd:	add    BYTE PTR [rax],al
  4478cf:	add    BYTE PTR [rcx+0x446b],ch
  4478d5:	add    BYTE PTR [rax],al
  4478d7:	add    BYTE PTR [rax],al
  4478d9:	add    BYTE PTR [rbx],al
  4478db:	add    BYTE PTR [rax],al
  4478dd:	add    BYTE PTR [rax],al
  4478df:	add    BYTE PTR [rsi+0x446b],ch
	...
  4478ed:	add    BYTE PTR [rax],al
  4478ef:	add    BYTE PTR [rcx+0x446b],dh
	...
  4478fd:	add    BYTE PTR [rax],al
  4478ff:	add    BYTE PTR [rdi+0x446b],dh
	...
  44790d:	add    BYTE PTR [rax],al
  44790f:	add    BYTE PTR [rsi+0x446b],bh
	...
  44791d:	add    BYTE PTR [rax],al
  44791f:	add    dh,al
  447921:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44792e:	add    BYTE PTR [rax],al
  447930:	iret   
  447931:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  447936:	add    BYTE PTR [rax],al
  447938:	add    BYTE PTR [rax],al
  44793a:	add    eax,DWORD PTR [rax]
  44793c:	add    BYTE PTR [rax],al
  44793e:	add    BYTE PTR [rax],al
  447940:	(bad)  
  447941:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  447946:	add    BYTE PTR [rax],al
  447948:	add    BYTE PTR [rax],al
  44794a:	add    eax,DWORD PTR [rax]
  44794c:	add    BYTE PTR [rax],al
  44794e:	add    BYTE PTR [rax],al
  447950:	fldcw  WORD PTR [rbx+0x44]
	...
  44795f:	add    cl,ah
  447961:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
	...
  44796e:	add    BYTE PTR [rax],al
  447970:	out    0x6b,eax
  447972:	add    BYTE PTR [rax],r8b
  447975:	add    BYTE PTR [rax],al
  447977:	add    BYTE PTR [rax],al
  447979:	add    BYTE PTR [rcx],al
  44797b:	add    BYTE PTR [rax],al
  44797d:	add    BYTE PTR [rax],al
  44797f:	add    ah,ch
  447981:	imul   eax,DWORD PTR [rax+rax*1+0x0],0x0
  447986:	add    BYTE PTR [rax],al
  447988:	add    BYTE PTR [rax],al
  44798a:	add    DWORD PTR [rax],eax
  44798c:	add    BYTE PTR [rax],al
  44798e:	add    BYTE PTR [rax],al
  447990:	imul   BYTE PTR [rbx+0x44]
	...
  44799f:	add    BYTE PTR [rsi],al
  4479a1:	ins    BYTE PTR es:[rdi],dx
  4479a2:	add    BYTE PTR [rax],r8b
  4479a5:	add    BYTE PTR [rax],al
  4479a7:	add    BYTE PTR [rax],al
  4479a9:	add    BYTE PTR [rbx],al
  4479ab:	add    BYTE PTR [rax],al
  4479ad:	add    BYTE PTR [rax],al
  4479af:	add    BYTE PTR [rsp+rbp*2],cl
  4479b2:	add    BYTE PTR [rax],r8b
	...
  4479bd:	add    BYTE PTR [rax],al
  4479bf:	add    BYTE PTR [rdi],dl
  4479c1:	ins    BYTE PTR es:[rdi],dx
  4479c2:	add    BYTE PTR [rax],r8b
	...
  4479cd:	add    BYTE PTR [rax],al
  4479cf:	add    BYTE PTR [rip+0x446c],bl        # 0x44be41
	...
  4479dd:	add    BYTE PTR [rax],al
  4479df:	add    BYTE PTR [rbx],ah
  4479e1:	ins    BYTE PTR es:[rdi],dx
  4479e2:	add    BYTE PTR [rax],r8b
	...
  4479ed:	add    BYTE PTR [rax],al
  4479ef:	add    BYTE PTR [rbx],ch
  4479f1:	ins    BYTE PTR es:[rdi],dx
  4479f2:	add    BYTE PTR [rax],r8b
  4479f5:	add    BYTE PTR [rax],al
  4479f7:	add    BYTE PTR [rax],al
  4479f9:	add    BYTE PTR [rcx],al
  4479fb:	add    BYTE PTR [rax],al
  4479fd:	add    BYTE PTR [rax],al
  4479ff:	add    BYTE PTR [rsp+rbp*2],dh
  447a02:	add    BYTE PTR [rax],r8b
  447a05:	add    BYTE PTR [rax],al
  447a07:	add    BYTE PTR [rax],al
  447a09:	add    BYTE PTR [rbx],al
  447a0b:	add    BYTE PTR [rax],al
  447a0d:	add    BYTE PTR [rax],al
  447a0f:	add    BYTE PTR [rsp+rbp*2],bh
  447a12:	add    BYTE PTR [rax],r8b
  447a15:	add    BYTE PTR [rax],al
  447a17:	add    BYTE PTR [rax],al
  447a19:	add    BYTE PTR [rdx],al
  447a1b:	add    BYTE PTR [rax],al
  447a1d:	add    BYTE PTR [rax],al
  447a1f:	add    BYTE PTR [rsi+0x6c],al
  447a22:	add    BYTE PTR [rax],r8b
  447a25:	add    BYTE PTR [rax],al
  447a27:	add    BYTE PTR [rax],al
  447a29:	add    BYTE PTR [rbx],al
  447a2b:	add    BYTE PTR [rax],al
  447a2d:	add    BYTE PTR [rax],al
  447a2f:	add    BYTE PTR [rbp+0x6c],cl
  447a32:	add    BYTE PTR [rax],r8b
	...
  447a3d:	add    BYTE PTR [rax],al
  447a3f:	add    BYTE PTR [rbp+0x6c],dl
  447a42:	add    BYTE PTR [rax],r8b
	...
  447a4d:	add    BYTE PTR [rax],al
  447a4f:	add    BYTE PTR [rsi+0x6c],bl
  447a52:	add    BYTE PTR [rax],r8b
	...
  447a5d:	add    BYTE PTR [rax],al
  447a5f:	add    BYTE PTR [rbp+0x6c],ah
  447a62:	add    BYTE PTR [rax],r8b
	...
  447a6d:	add    BYTE PTR [rax],al
  447a6f:	add    BYTE PTR [rdi+0x6c],ch
  447a72:	add    BYTE PTR [rax],r8b
  447a75:	add    BYTE PTR [rax],al
  447a77:	add    BYTE PTR [rax],al
  447a79:	add    BYTE PTR [rdx],al
  447a7b:	add    BYTE PTR [rax],al
  447a7d:	add    BYTE PTR [rax],al
  447a7f:	add    BYTE PTR [rsp+rbp*2+0x44],bh
	...
  447a8f:	add    BYTE PTR [rdx+0x446c],cl
	...
  447a9d:	add    BYTE PTR [rax],al
  447a9f:	add    BYTE PTR [rbp+0x446c],dl
  447aa5:	add    BYTE PTR [rax],al
  447aa7:	add    BYTE PTR [rax],al
  447aa9:	add    BYTE PTR [rbx],al
  447aab:	add    BYTE PTR [rax],al
  447aad:	add    BYTE PTR [rax],al
  447aaf:	add    BYTE PTR [rax+0x446c],ah
	...
  447abd:	add    BYTE PTR [rax],al
  447abf:	add    BYTE PTR [rsp+rbp*2+0x44],ch
	...
  447ace:	add    BYTE PTR [rax],al
  447ad0:	mov    ah,0x6c
  447ad2:	add    BYTE PTR [rax],r8b
	...
  447add:	add    BYTE PTR [rax],al
  447adf:	add    BYTE PTR [rbp+0x446c],bh
	...
  447aed:	add    BYTE PTR [rax],al
  447aef:	add    al,cl
  447af1:	ins    BYTE PTR es:[rdi],dx
  447af2:	add    BYTE PTR [rax],r8b
	...
  447afd:	add    BYTE PTR [rax],al
  447aff:	add    ch,cl
  447b01:	ins    BYTE PTR es:[rdi],dx
  447b02:	add    BYTE PTR [rax],r8b
	...
  447b0d:	add    BYTE PTR [rax],al
  447b0f:	add    dl,dl
  447b11:	ins    BYTE PTR es:[rdi],dx
  447b12:	add    BYTE PTR [rax],r8b
  447b15:	add    BYTE PTR [rax],al
  447b17:	add    BYTE PTR [rax],al
  447b19:	add    BYTE PTR [rbx],al
  447b1b:	add    BYTE PTR [rax],al
  447b1d:	add    BYTE PTR [rax],al
  447b1f:	add    cl,bl
  447b21:	ins    BYTE PTR es:[rdi],dx
  447b22:	add    BYTE PTR [rax],r8b
  447b25:	add    BYTE PTR [rax],al
  447b27:	add    BYTE PTR [rax],al
  447b29:	add    BYTE PTR [rdx],al
  447b2b:	add    BYTE PTR [rax],al
  447b2d:	add    BYTE PTR [rax],al
  447b2f:	add    bh,bl
  447b31:	ins    BYTE PTR es:[rdi],dx
  447b32:	add    BYTE PTR [rax],r8b
	...
  447b3d:	add    BYTE PTR [rax],al
  447b3f:	add    bl,ah
  447b41:	ins    BYTE PTR es:[rdi],dx
  447b42:	add    BYTE PTR [rax],r8b
	...
  447b4d:	add    BYTE PTR [rax],al
  447b4f:	add    bl,ch
  447b51:	ins    BYTE PTR es:[rdi],dx
  447b52:	add    BYTE PTR [rax],r8b
  447b55:	add    BYTE PTR [rax],al
  447b57:	add    BYTE PTR [rax],al
  447b59:	add    BYTE PTR [rbx],al
  447b5b:	add    BYTE PTR [rax],al
  447b5d:	add    BYTE PTR [rax],al
  447b5f:	add    bl,bh
  447b61:	ins    BYTE PTR es:[rdi],dx
  447b62:	add    BYTE PTR [rax],r8b
  447b65:	add    BYTE PTR [rax],al
  447b67:	add    BYTE PTR [rax],al
  447b69:	add    BYTE PTR [rbx],al
  447b6b:	add    BYTE PTR [rax],al
  447b6d:	add    BYTE PTR [rax],al
  447b6f:	add    BYTE PTR [rax],cl
  447b71:	ins    DWORD PTR es:[rdi],dx
  447b72:	add    BYTE PTR [rax],r8b
  447b75:	add    BYTE PTR [rax],al
  447b77:	add    BYTE PTR [rax],al
  447b79:	add    BYTE PTR [rbx],al
  447b7b:	add    BYTE PTR [rax],al
  447b7d:	add    BYTE PTR [rax],al
  447b7f:	add    BYTE PTR [rip+0x446d],dl        # 0x44bff2
  447b85:	add    BYTE PTR [rax],al
  447b87:	add    BYTE PTR [rax],al
  447b89:	add    BYTE PTR [rdx],al
  447b8b:	add    BYTE PTR [rax],al
  447b8d:	add    BYTE PTR [rax],al
  447b8f:	add    BYTE PTR [rbp*2+0x44],ah
  447b96:	add    BYTE PTR [rax],al
  447b98:	add    BYTE PTR [rax],al
  447b9a:	add    eax,DWORD PTR [rax]
  447b9c:	add    BYTE PTR [rax],al
  447b9e:	add    BYTE PTR [rax],al
  447ba0:	xor    DWORD PTR [rbp+0x44],ebp
  447ba3:	add    BYTE PTR [rax],al
  447ba5:	add    BYTE PTR [rax],al
  447ba7:	add    BYTE PTR [rax],al
  447ba9:	add    BYTE PTR [rbx],al
  447bab:	add    BYTE PTR [rax],al
  447bad:	add    BYTE PTR [rax],al
  447baf:	add    BYTE PTR [rbx+0x6d],al
  447bb2:	add    BYTE PTR [rax],r8b
  447bb5:	add    BYTE PTR [rax],al
  447bb7:	add    BYTE PTR [rax],al
  447bb9:	add    BYTE PTR [rbx],al
  447bbb:	add    BYTE PTR [rax],al
  447bbd:	add    BYTE PTR [rax],al
  447bbf:	add    BYTE PTR [rax+0x6d],dl
  447bc2:	add    BYTE PTR [rax],r8b
	...
  447bcd:	add    BYTE PTR [rax],al
  447bcf:	add    BYTE PTR [rdi+0x6d],dl
  447bd2:	add    BYTE PTR [rax],r8b
	...
  447bdd:	add    BYTE PTR [rax],al
  447bdf:	add    BYTE PTR [rbp+0x6d],bl
  447be2:	add    BYTE PTR [rax],r8b
	...
  447bed:	add    BYTE PTR [rax],al
  447bef:	add    BYTE PTR [rdx+0x6d],ah
  447bf2:	add    BYTE PTR [rax],r8b
	...
  447bfd:	add    BYTE PTR [rax],al
  447bff:	add    BYTE PTR [rbx+0x6d],ch
  447c02:	add    BYTE PTR [rax],r8b
	...
  447c0d:	add    BYTE PTR [rax],al
  447c0f:	add    BYTE PTR [rdi+0x6d],ch
  447c12:	add    BYTE PTR [rax],r8b
	...
  447c1d:	add    BYTE PTR [rax],al
  447c1f:	add    BYTE PTR [rdx+0x6d],bh
  447c22:	add    BYTE PTR [rax],r8b
  447c25:	add    BYTE PTR [rax],al
  447c27:	add    BYTE PTR [rax],al
  447c29:	add    BYTE PTR [rcx],al
  447c2b:	add    BYTE PTR [rax],al
  447c2d:	add    BYTE PTR [rax],al
  447c2f:	add    BYTE PTR [rsi+0x6d],bh
  447c32:	add    BYTE PTR [rax],r8b
  447c35:	add    BYTE PTR [rax],al
  447c37:	add    BYTE PTR [rax],al
  447c39:	add    BYTE PTR [rcx],al
  447c3b:	add    BYTE PTR [rax],al
  447c3d:	add    BYTE PTR [rax],al
  447c3f:	add    BYTE PTR [rsi+0x446d],al
	...
  447c4d:	add    BYTE PTR [rax],al
  447c4f:	add    BYTE PTR [rsi+0x446d],cl
  447c55:	add    BYTE PTR [rax],al
  447c57:	add    BYTE PTR [rax],al
  447c59:	add    BYTE PTR [rbx],al
  447c5b:	add    BYTE PTR [rax],al
  447c5d:	add    BYTE PTR [rax],al
  447c5f:	add    BYTE PTR [rsi+0x446d],dl
	...
  447c6d:	add    BYTE PTR [rax],al
  447c6f:	add    BYTE PTR [rdi+0x446d],bl
  447c75:	add    BYTE PTR [rax],al
  447c77:	add    BYTE PTR [rax],al
  447c79:	add    BYTE PTR [rbx],al
  447c7b:	add    BYTE PTR [rax],al
  447c7d:	add    BYTE PTR [rax],al
  447c7f:	add    BYTE PTR [rdx+0x446d],ch
	...
  447c8d:	add    BYTE PTR [rax],al
  447c8f:	add    BYTE PTR [rbx+0x446d],dh
	...
  447c9d:	add    BYTE PTR [rax],al
  447c9f:	add    BYTE PTR [rbx+0x446d],bh
	...
  447cad:	add    BYTE PTR [rax],al
  447caf:	add    dl,al
  447cb1:	ins    DWORD PTR es:[rdi],dx
  447cb2:	add    BYTE PTR [rax],r8b
	...
  447cbd:	add    BYTE PTR [rax],al
  447cbf:	add    ah,cl
  447cc1:	ins    DWORD PTR es:[rdi],dx
  447cc2:	add    BYTE PTR [rax],r8b
	...
  447ccd:	add    BYTE PTR [rax],al
  447ccf:	add    bh,dl
  447cd1:	ins    DWORD PTR es:[rdi],dx
  447cd2:	add    BYTE PTR [rax],r8b
  447cd5:	add    BYTE PTR [rax],al
  447cd7:	add    BYTE PTR [rax],al
  447cd9:	add    BYTE PTR [rbx],al
  447cdb:	add    BYTE PTR [rax],al
  447cdd:	add    BYTE PTR [rax],al
  447cdf:	add    ah,bl
  447ce1:	ins    DWORD PTR es:[rdi],dx
  447ce2:	add    BYTE PTR [rax],r8b
	...
  447ced:	add    BYTE PTR [rax],al
  447cef:	add    bh,ah
  447cf1:	ins    DWORD PTR es:[rdi],dx
  447cf2:	add    BYTE PTR [rax],r8b
	...
  447cfd:	add    BYTE PTR [rax],al
  447cff:	add    bh,ch
  447d01:	ins    DWORD PTR es:[rdi],dx
  447d02:	add    BYTE PTR [rax],r8b
	...
  447d0d:	add    BYTE PTR [rax],al
  447d0f:	add    bh,dh
  447d11:	ins    DWORD PTR es:[rdi],dx
  447d12:	add    BYTE PTR [rax],r8b
  447d15:	add    BYTE PTR [rax],al
  447d17:	add    BYTE PTR [rax],al
  447d19:	add    BYTE PTR [rbx],al
  447d1b:	add    BYTE PTR [rax],al
  447d1d:	add    BYTE PTR [rax],al
  447d1f:	add    BYTE PTR [rax],al
  447d21:	outs   dx,BYTE PTR ds:[rsi]
  447d22:	add    BYTE PTR [rax],r8b
  447d25:	add    BYTE PTR [rax],al
  447d27:	add    BYTE PTR [rax],al
  447d29:	add    BYTE PTR [rbx],al
  447d2b:	add    BYTE PTR [rax],al
  447d2d:	add    BYTE PTR [rax],al
  447d2f:	add    BYTE PTR [rbx],al
  447d31:	outs   dx,BYTE PTR ds:[rsi]
  447d32:	add    BYTE PTR [rax],r8b
	...
  447d3d:	add    BYTE PTR [rax],al
  447d3f:	add    BYTE PTR [rsi+rbp*2],cl
  447d42:	add    BYTE PTR [rax],r8b
	...
  447d4d:	add    BYTE PTR [rax],al
  447d4f:	add    BYTE PTR [rbx],dl
  447d51:	outs   dx,BYTE PTR ds:[rsi]
  447d52:	add    BYTE PTR [rax],r8b
	...
  447d5d:	add    BYTE PTR [rax],al
  447d5f:	add    BYTE PTR [rdx],bl
  447d61:	outs   dx,BYTE PTR ds:[rsi]
  447d62:	add    BYTE PTR [rax],r8b
	...
  447d6d:	add    BYTE PTR [rax],al
  447d6f:	add    BYTE PTR [rdi],bl
  447d71:	outs   dx,BYTE PTR ds:[rsi]
  447d72:	add    BYTE PTR [rax],r8b
	...
  447d7d:	add    BYTE PTR [rax],al
  447d7f:	add    BYTE PTR [rsi+rbp*2],ah
  447d82:	add    BYTE PTR [rax],r8b
  447d85:	add    BYTE PTR [rax],al
  447d87:	add    BYTE PTR [rax],al
  447d89:	add    BYTE PTR [rbx],al
  447d8b:	add    BYTE PTR [rax],al
  447d8d:	add    BYTE PTR [rax],al
  447d8f:	add    BYTE PTR [rcx],ch
  447d91:	outs   dx,BYTE PTR ds:[rsi]
  447d92:	add    BYTE PTR [rax],r8b
	...
  447d9d:	add    BYTE PTR [rax],al
  447d9f:	add    BYTE PTR [rax],dh
  447da1:	outs   dx,BYTE PTR ds:[rsi]
  447da2:	add    BYTE PTR [rax],r8b
	...
  447dad:	add    BYTE PTR [rax],al
  447daf:	add    BYTE PTR [rcx],bh
  447db1:	outs   dx,BYTE PTR ds:[rsi]
  447db2:	add    BYTE PTR [rax],r8b
	...
  447dbd:	add    BYTE PTR [rax],al
  447dbf:	add    BYTE PTR [rbx+0x6e],al
  447dc2:	add    BYTE PTR [rax],r8b
  447dc5:	add    BYTE PTR [rax],al
  447dc7:	add    BYTE PTR [rax],al
  447dc9:	add    BYTE PTR [rbx],al
  447dcb:	add    BYTE PTR [rax],al
  447dcd:	add    BYTE PTR [rax],al
  447dcf:	add    BYTE PTR [rdi+0x6e],al
  447dd2:	add    BYTE PTR [rax],r8b
	...
  447ddd:	add    BYTE PTR [rax],al
  447ddf:	add    BYTE PTR [rsi+rbp*2+0x44],cl
	...
  447def:	add    BYTE PTR [rbx+0x6e],dl
  447df2:	add    BYTE PTR [rax],r8b
	...
  447dfd:	add    BYTE PTR [rax],al
  447dff:	add    BYTE PTR [rcx+0x6e],bl
  447e02:	add    BYTE PTR [rax],r8b
  447e05:	add    BYTE PTR [rax],al
  447e07:	add    BYTE PTR [rax],al
  447e09:	add    BYTE PTR [rbx],al
  447e0b:	add    BYTE PTR [rax],al
  447e0d:	add    BYTE PTR [rax],al
  447e0f:	add    BYTE PTR [rax+0x6e],ah
  447e12:	add    BYTE PTR [rax],r8b
	...
  447e1d:	add    BYTE PTR [rax],al
  447e1f:	add    BYTE PTR [rax+0x6e],ch
  447e22:	add    BYTE PTR [rax],r8b
	...
  447e2d:	add    BYTE PTR [rax],al
  447e2f:	add    BYTE PTR [rdx+0x6e],dh
  447e32:	add    BYTE PTR [rax],r8b
	...
  447e3d:	add    BYTE PTR [rax],al
  447e3f:	add    BYTE PTR [rsi+rbp*2+0x44],bh
	...
  447e4f:	add    BYTE PTR [rsi+rbp*2+0x44],al
  447e56:	add    BYTE PTR [rax],al
  447e58:	add    BYTE PTR [rax],al
  447e5a:	add    DWORD PTR [rax],eax
  447e5c:	add    BYTE PTR [rax],al
  447e5e:	add    BYTE PTR [rax],al
  447e60:	mov    ebp,DWORD PTR [rsi+0x44]
	...
  447e6f:	add    BYTE PTR [rbx+0x446e],dl
	...
  447e7d:	add    BYTE PTR [rax],al
  447e7f:	add    BYTE PTR [rbp+0x446e],bl
	...
  447e8d:	add    BYTE PTR [rax],al
  447e8f:	add    BYTE PTR [rsi+0x446e],ah
  447e95:	add    BYTE PTR [rax],al
  447e97:	add    BYTE PTR [rax],al
  447e99:	add    BYTE PTR [rcx],al
  447e9b:	add    BYTE PTR [rax],al
  447e9d:	add    BYTE PTR [rax],al
  447e9f:	add    BYTE PTR [rsi+0x446e],ch
  447ea5:	add    BYTE PTR [rax],al
  447ea7:	add    BYTE PTR [rax],al
  447ea9:	add    BYTE PTR [rbx],al
  447eab:	add    BYTE PTR [rax],al
  447ead:	add    BYTE PTR [rax],al
  447eaf:	add    BYTE PTR [rsi+rbp*2+0x44],dh
	...
  447ebe:	add    BYTE PTR [rax],al
  447ec0:	mov    ebx,0x446e
  447ec5:	add    BYTE PTR [rax],al
  447ec7:	add    BYTE PTR [rax],al
  447ec9:	add    BYTE PTR [rbx],al
  447ecb:	add    BYTE PTR [rax],al
  447ecd:	add    BYTE PTR [rax],al
  447ecf:	add    cl,al
  447ed1:	outs   dx,BYTE PTR ds:[rsi]
  447ed2:	add    BYTE PTR [rax],r8b
	...
  447edd:	add    BYTE PTR [rax],al
  447edf:	add    al,cl
  447ee1:	outs   dx,BYTE PTR ds:[rsi]
  447ee2:	add    BYTE PTR [rax],r8b
	...
  447eed:	add    BYTE PTR [rax],al
  447eef:	add    dh,cl
  447ef1:	outs   dx,BYTE PTR ds:[rsi]
  447ef2:	add    BYTE PTR [rax],r8b
  447ef5:	add    BYTE PTR [rax],al
  447ef7:	add    BYTE PTR [rax],al
  447ef9:	add    BYTE PTR [rcx],al
  447efb:	add    BYTE PTR [rax],al
  447efd:	add    BYTE PTR [rax],al
  447eff:	add    ah,dl
  447f01:	outs   dx,BYTE PTR ds:[rsi]
  447f02:	add    BYTE PTR [rax],r8b
	...
  447f0d:	add    BYTE PTR [rax],al
  447f0f:	add    dh,bl
  447f11:	outs   dx,BYTE PTR ds:[rsi]
  447f12:	add    BYTE PTR [rax],r8b
  447f15:	add    BYTE PTR [rax],al
  447f17:	add    BYTE PTR [rax],al
  447f19:	add    BYTE PTR [rbx],al
  447f1b:	add    BYTE PTR [rax],al
  447f1d:	add    BYTE PTR [rax],al
  447f1f:	add    dl,ah
  447f21:	outs   dx,BYTE PTR ds:[rsi]
  447f22:	add    BYTE PTR [rax],r8b
	...
  447f2d:	add    BYTE PTR [rax],al
  447f2f:	add    al,ch
  447f31:	outs   dx,BYTE PTR ds:[rsi]
  447f32:	add    BYTE PTR [rax],r8b
  447f35:	add    BYTE PTR [rax],al
  447f37:	add    BYTE PTR [rax],al
  447f39:	add    BYTE PTR [rbx],al
  447f3b:	add    BYTE PTR [rax],al
  447f3d:	add    BYTE PTR [rax],al
  447f3f:	add    al,dh
  447f41:	outs   dx,BYTE PTR ds:[rsi]
  447f42:	add    BYTE PTR [rax],r8b
	...
  447f4d:	add    BYTE PTR [rax],al
  447f4f:	add    al,bh
  447f51:	outs   dx,BYTE PTR ds:[rsi]
  447f52:	add    BYTE PTR [rax],r8b
  447f55:	add    BYTE PTR [rax],al
  447f57:	add    BYTE PTR [rax],al
  447f59:	add    BYTE PTR [rdx],al
  447f5b:	add    BYTE PTR [rax],al
  447f5d:	add    BYTE PTR [rax],al
  447f5f:	add    bh,bh
  447f61:	outs   dx,BYTE PTR ds:[rsi]
  447f62:	add    BYTE PTR [rax],r8b
  447f65:	add    BYTE PTR [rax],al
  447f67:	add    BYTE PTR [rax],al
  447f69:	add    BYTE PTR [rbx],al
  447f6b:	add    BYTE PTR [rax],al
  447f6d:	add    BYTE PTR [rax],al
  447f6f:	add    BYTE PTR [rdi+rbp*2],al
  447f72:	add    BYTE PTR [rax],r8b
  447f75:	add    BYTE PTR [rax],al
  447f77:	add    BYTE PTR [rax],al
  447f79:	add    BYTE PTR [rdx],al
  447f7b:	add    BYTE PTR [rax],al
  447f7d:	add    BYTE PTR [rax],al
  447f7f:	add    BYTE PTR [rcx],cl
  447f81:	outs   dx,DWORD PTR ds:[rsi]
  447f82:	add    BYTE PTR [rax],r8b
	...
  447f8d:	add    BYTE PTR [rax],al
  447f8f:	add    BYTE PTR [rdx],dl
  447f91:	outs   dx,DWORD PTR ds:[rsi]
  447f92:	add    BYTE PTR [rax],r8b
	...
  447f9d:	add    BYTE PTR [rax],al
  447f9f:	add    BYTE PTR [rdi+rbp*2],bl
  447fa2:	add    BYTE PTR [rax],r8b
	...
  447fad:	add    BYTE PTR [rax],al
  447faf:	add    BYTE PTR [rbx],ah
  447fb1:	outs   dx,DWORD PTR ds:[rsi]
  447fb2:	add    BYTE PTR [rax],r8b
  447fb5:	add    BYTE PTR [rax],al
  447fb7:	add    BYTE PTR [rax],al
  447fb9:	add    BYTE PTR [rbx],al
  447fbb:	add    BYTE PTR [rax],al
  447fbd:	add    BYTE PTR [rax],al
  447fbf:	add    BYTE PTR [rcx],ch
  447fc1:	outs   dx,DWORD PTR ds:[rsi]
  447fc2:	add    BYTE PTR [rax],r8b
	...
  447fcd:	add    BYTE PTR [rax],al
  447fcf:	add    BYTE PTR [rcx],dh
  447fd1:	outs   dx,DWORD PTR ds:[rsi]
  447fd2:	add    BYTE PTR [rax],r8b
  447fd5:	add    BYTE PTR [rax],al
  447fd7:	add    BYTE PTR [rax],al
  447fd9:	add    BYTE PTR [rcx],al
  447fdb:	add    BYTE PTR [rax],al
  447fdd:	add    BYTE PTR [rax],al
  447fdf:	add    BYTE PTR [rdx],bh
  447fe1:	outs   dx,DWORD PTR ds:[rsi]
  447fe2:	add    BYTE PTR [rax],r8b
  447fe5:	add    BYTE PTR [rax],al
  447fe7:	add    BYTE PTR [rax],al
  447fe9:	add    BYTE PTR [rbx],al
  447feb:	add    BYTE PTR [rax],al
  447fed:	add    BYTE PTR [rax],al
  447fef:	add    BYTE PTR [rax+0x6f],al
  447ff2:	add    BYTE PTR [rax],r8b
	...
  447ffd:	add    BYTE PTR [rax],al
  447fff:	add    BYTE PTR [rax+0x6f],cl
  448002:	add    BYTE PTR [rax],r8b
  448005:	add    BYTE PTR [rax],al
  448007:	add    BYTE PTR [rax],al
  448009:	add    BYTE PTR [rbx],al
  44800b:	add    BYTE PTR [rax],al
  44800d:	add    BYTE PTR [rax],al
  44800f:	add    BYTE PTR [rdi+0x6f],cl
  448012:	add    BYTE PTR [rax],r8b
	...
  44801d:	add    BYTE PTR [rax],al
  44801f:	add    BYTE PTR [rsi+0x6f],dl
  448022:	add    BYTE PTR [rax],r8b
	...
  44802d:	add    BYTE PTR [rax],al
  44802f:	add    BYTE PTR [rbx+0x6f],bl
  448032:	add    BYTE PTR [rax],r8b
	...
  44803d:	add    BYTE PTR [rax],al
  44803f:	add    BYTE PTR [rax+0x6f],ah
  448042:	add    BYTE PTR [rax],r8b
	...
  44804d:	add    BYTE PTR [rax],al
  44804f:	add    BYTE PTR [rcx+0x6f],ch
  448052:	add    BYTE PTR [rax],r8b
	...
  44805d:	add    BYTE PTR [rax],al
  44805f:	add    BYTE PTR [rdi+rbp*2+0x44],ch
  448063:	add    BYTE PTR [rax],al
  448065:	add    BYTE PTR [rax],al
  448067:	add    BYTE PTR [rax],al
  448069:	add    BYTE PTR [rdx],al
  44806b:	add    BYTE PTR [rax],al
  44806d:	add    BYTE PTR [rax],al
  44806f:	add    BYTE PTR [rdx+0x6f],dh
  448072:	add    BYTE PTR [rax],r8b
	...
  44807d:	add    BYTE PTR [rax],al
  44807f:	add    BYTE PTR [rdi+rbp*2+0x44],bh
	...
  44808f:	add    BYTE PTR [rsi+0x446f],al
	...
  44809d:	add    BYTE PTR [rax],al
  44809f:	add    BYTE PTR [rdi+0x446f],cl
  4480a5:	add    BYTE PTR [rax],al
  4480a7:	add    BYTE PTR [rax],al
  4480a9:	add    BYTE PTR [rbx],al
  4480ab:	add    BYTE PTR [rax],al
  4480ad:	add    BYTE PTR [rax],al
  4480af:	add    BYTE PTR [rdx+0x446f],dl
	...
  4480bd:	add    BYTE PTR [rax],al
  4480bf:	add    BYTE PTR [rdi+rbp*2+0x44],bl
	...
  4480ce:	add    BYTE PTR [rax],al
  4480d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4480d1:	outs   dx,DWORD PTR ds:[rsi]
  4480d2:	add    BYTE PTR [rax],r8b
	...
  4480dd:	add    BYTE PTR [rax],al
  4480df:	add    BYTE PTR [rdi+rbp*2+0x44],ch
	...
  4480ee:	add    BYTE PTR [rax],al
  4480f0:	mov    ah,0x6f
  4480f2:	add    BYTE PTR [rax],r8b
	...
  4480fd:	add    BYTE PTR [rax],al
  4480ff:	add    BYTE PTR [rdi+rbp*2+0x44],bh
	...
  44810e:	add    BYTE PTR [rax],al
  448110:	(bad)
  448113:	add    BYTE PTR [rax],al
  448115:	add    BYTE PTR [rax],al
  448117:	add    BYTE PTR [rax],al
  448119:	add    BYTE PTR [rbx],al
  44811b:	add    BYTE PTR [rax],al
  44811d:	add    BYTE PTR [rax],al
  44811f:	add    bh,cl
  448121:	outs   dx,DWORD PTR ds:[rsi]
  448122:	add    BYTE PTR [rax],r8b
	...
  44812d:	add    BYTE PTR [rax],al
  44812f:	add    dh,dl
  448131:	outs   dx,DWORD PTR ds:[rsi]
  448132:	add    BYTE PTR [rax],r8b
  448135:	add    BYTE PTR [rax],al
  448137:	add    BYTE PTR [rax],al
  448139:	add    BYTE PTR [rdx],al
  44813b:	add    BYTE PTR [rax],al
  44813d:	add    BYTE PTR [rax],al
  44813f:	add    ah,bl
  448141:	outs   dx,DWORD PTR ds:[rsi]
  448142:	add    BYTE PTR [rax],r8b
  448145:	add    BYTE PTR [rax],al
  448147:	add    BYTE PTR [rax],al
  448149:	add    BYTE PTR [rcx],al
  44814b:	add    BYTE PTR [rax],al
  44814d:	add    BYTE PTR [rax],al
  44814f:	add    dl,ah
  448151:	outs   dx,DWORD PTR ds:[rsi]
  448152:	add    BYTE PTR [rax],r8b
	...
  44815d:	add    BYTE PTR [rax],al
  44815f:	add    al,ch
  448161:	outs   dx,DWORD PTR ds:[rsi]
  448162:	add    BYTE PTR [rax],r8b
	...
  44816d:	add    BYTE PTR [rax],al
  44816f:	add    ah,dh
  448171:	outs   dx,DWORD PTR ds:[rsi]
  448172:	add    BYTE PTR [rax],r8b
	...
  44817d:	add    BYTE PTR [rax],al
  44817f:	add    bl,bh
  448181:	outs   dx,DWORD PTR ds:[rsi]
  448182:	add    BYTE PTR [rax],r8b
	...
  44818d:	add    BYTE PTR [rax],al
  44818f:	add    BYTE PTR [rbx],al
  448191:	jo     0x4481d7
  448193:	add    BYTE PTR [rax],al
  448195:	add    BYTE PTR [rax],al
  448197:	add    BYTE PTR [rax],al
  448199:	add    BYTE PTR [rcx],al
  44819b:	add    BYTE PTR [rax],al
  44819d:	add    BYTE PTR [rax],al
  44819f:	add    BYTE PTR [rdi],al
  4481a1:	jo     0x4481e7
  4481a3:	add    BYTE PTR [rax],al
  4481a5:	add    BYTE PTR [rax],al
  4481a7:	add    BYTE PTR [rax],al
  4481a9:	add    BYTE PTR [rcx],al
  4481ab:	add    BYTE PTR [rax],al
  4481ad:	add    BYTE PTR [rax],al
  4481af:	add    BYTE PTR [rdi],cl
  4481b1:	jo     0x4481f7
  4481b3:	add    BYTE PTR [rax],al
  4481b5:	add    BYTE PTR [rax],al
  4481b7:	add    BYTE PTR [rax],al
  4481b9:	add    BYTE PTR [rbx],al
  4481bb:	add    BYTE PTR [rax],al
  4481bd:	add    BYTE PTR [rax],al
  4481bf:	add    BYTE PTR [rcx],bl
  4481c1:	jo     0x448207
  4481c3:	add    BYTE PTR [rax],al
  4481c5:	add    BYTE PTR [rax],al
  4481c7:	add    BYTE PTR [rax],al
  4481c9:	add    BYTE PTR [rcx],al
  4481cb:	add    BYTE PTR [rax],al
  4481cd:	add    BYTE PTR [rax],al
  4481cf:	add    BYTE PTR [rdx],ah
  4481d1:	jo     0x448217
  4481d3:	add    BYTE PTR [rax],al
  4481d5:	add    BYTE PTR [rax],al
  4481d7:	add    BYTE PTR [rax],al
  4481d9:	add    BYTE PTR [rbx],al
  4481db:	add    BYTE PTR [rax],al
  4481dd:	add    BYTE PTR [rax],al
  4481df:	add    BYTE PTR [rdi],ah
  4481e1:	jo     0x448227
	...
  4481ef:	add    BYTE PTR [rdi],ch
  4481f1:	jo     0x448237
  4481f3:	add    BYTE PTR [rax],al
  4481f5:	add    BYTE PTR [rax],al
  4481f7:	add    BYTE PTR [rax],al
  4481f9:	add    BYTE PTR [rdx],al
  4481fb:	add    BYTE PTR [rax],al
  4481fd:	add    BYTE PTR [rax],al
  4481ff:	add    BYTE PTR [rdx],dh
  448201:	jo     0x448247
  448203:	add    BYTE PTR [rax],al
  448205:	add    BYTE PTR [rax],al
  448207:	add    BYTE PTR [rax],al
  448209:	add    BYTE PTR [rdx],al
  44820b:	add    BYTE PTR [rax],al
  44820d:	add    BYTE PTR [rax],al
  44820f:	add    BYTE PTR [rcx],bh
  448211:	jo     0x448257
	...
  44821f:	add    BYTE PTR [rbx+0x70],al
  448222:	add    BYTE PTR [rax],r8b
  448225:	add    BYTE PTR [rax],al
  448227:	add    BYTE PTR [rax],al
  448229:	add    BYTE PTR [rdx],al
  44822b:	add    BYTE PTR [rax],al
  44822d:	add    BYTE PTR [rax],al
  44822f:	add    BYTE PTR [rax+0x70],cl
  448232:	add    BYTE PTR [rax],r8b
	...
  44823d:	add    BYTE PTR [rax],al
  44823f:	add    BYTE PTR [rax+rsi*2+0x44],cl
	...
  44824f:	add    BYTE PTR [rdx+0x70],dl
  448252:	add    BYTE PTR [rax],r8b
	...
  44825d:	add    BYTE PTR [rax],al
  44825f:	add    BYTE PTR [rbx+0x70],bl
  448262:	add    BYTE PTR [rax],r8b
	...
  44826d:	add    BYTE PTR [rax],al
  44826f:	add    BYTE PTR [rcx+0x70],ah
  448272:	add    BYTE PTR [rax],r8b
	...
  44827d:	add    BYTE PTR [rax],al
  44827f:	add    BYTE PTR [rsi+0x70],ah
  448282:	add    BYTE PTR [rax],r8b
  448285:	add    BYTE PTR [rax],al
  448287:	add    BYTE PTR [rax],al
  448289:	add    BYTE PTR [rbx],al
  44828b:	add    BYTE PTR [rax],al
  44828d:	add    BYTE PTR [rax],al
  44828f:	add    BYTE PTR [rsi+0x70],ch
  448292:	add    BYTE PTR [rax],r8b
	...
  44829d:	add    BYTE PTR [rax],al
  44829f:	add    BYTE PTR [rcx+0x70],bh
  4482a2:	add    BYTE PTR [rax],r8b
	...
  4482ad:	add    BYTE PTR [rax],al
  4482af:	add    BYTE PTR [rdx+0x4470],al
  4482b5:	add    BYTE PTR [rax],al
  4482b7:	add    BYTE PTR [rax],al
  4482b9:	add    BYTE PTR [rbx],al
  4482bb:	add    BYTE PTR [rax],al
  4482bd:	add    BYTE PTR [rax],al
  4482bf:	add    BYTE PTR [rdx+0x4470],cl
	...
  4482cd:	add    BYTE PTR [rax],al
  4482cf:	add    BYTE PTR [rax+rsi*2+0x44],dl
  4482d6:	add    BYTE PTR [rax],al
  4482d8:	add    BYTE PTR [rax],al
  4482da:	add    DWORD PTR [rax],eax
  4482dc:	add    BYTE PTR [rax],al
  4482de:	add    BYTE PTR [rax],al
  4482e0:	(bad)  
  4482e1:	jo     0x448327
  4482e3:	add    BYTE PTR [rax],al
  4482e5:	add    BYTE PTR [rax],al
  4482e7:	add    BYTE PTR [rax],al
  4482e9:	add    BYTE PTR [rdx],al
  4482eb:	add    BYTE PTR [rax],al
  4482ed:	add    BYTE PTR [rax],al
  4482ef:	add    BYTE PTR [rdi+0x4470],bl
	...
  4482fd:	add    BYTE PTR [rax],al
  4482ff:	add    BYTE PTR [rbp+0x4470],ah
  448305:	add    BYTE PTR [rax],al
  448307:	add    BYTE PTR [rax],al
  448309:	add    BYTE PTR [rdx],al
  44830b:	add    BYTE PTR [rax],al
  44830d:	add    BYTE PTR [rax],al
  44830f:	add    BYTE PTR [rdx+0x4470],ch
  448315:	add    BYTE PTR [rax],al
  448317:	add    BYTE PTR [rax],al
  448319:	add    BYTE PTR [rbx],al
  44831b:	add    BYTE PTR [rax],al
  44831d:	add    BYTE PTR [rax],al
  44831f:	add    BYTE PTR [rax+0x4470],dh
	...
  44832d:	add    BYTE PTR [rax],al
  44832f:	add    BYTE PTR [rdi+0x4470],dh
	...
  44833d:	add    BYTE PTR [rax],al
  44833f:	add    BYTE PTR [rax+rsi*2+0x44],bh
	...
  44834e:	add    BYTE PTR [rax],al
  448350:	ret    0x4470
  448353:	add    BYTE PTR [rax],al
  448355:	add    BYTE PTR [rax],al
  448357:	add    BYTE PTR [rax],al
  448359:	add    BYTE PTR [rbx],al
  44835b:	add    BYTE PTR [rax],al
  44835d:	add    BYTE PTR [rax],al
  44835f:	add    ah,cl
  448361:	jo     0x4483a7
  448363:	add    BYTE PTR [rax],al
  448365:	add    BYTE PTR [rax],al
  448367:	add    BYTE PTR [rax],al
  448369:	add    BYTE PTR [rbx],al
  44836b:	add    BYTE PTR [rax],al
  44836d:	add    BYTE PTR [rax],al
  44836f:	add    bl,bl
  448371:	jo     0x4483b7
	...
  44837f:	add    ah,ah
  448381:	jo     0x4483c7
	...
  44838f:	add    cl,ch
  448391:	jo     0x4483d7
	...
  44839f:	add    cl,dh
  4483a1:	jo     0x4483e7
	...
  4483af:	add    bh,dh
  4483b1:	jo     0x4483f7
	...
  4483bf:	add    BYTE PTR [rcx+rsi*2],al
  4483c2:	add    BYTE PTR [rax],r8b
	...
  4483cd:	add    BYTE PTR [rax],al
  4483cf:	add    BYTE PTR [rip+0x4471],cl        # 0x44c846
	...
  4483dd:	add    BYTE PTR [rax],al
  4483df:	add    BYTE PTR [rcx+rsi*2],dl
  4483e2:	add    BYTE PTR [rax],r8b
	...
  4483ed:	add    BYTE PTR [rax],al
  4483ef:	add    BYTE PTR [rip+0x4471],bl        # 0x44c866
	...
  4483fd:	add    BYTE PTR [rax],al
  4483ff:	add    BYTE PTR [rdx],ah
  448401:	jno    0x448447
	...
  44840f:	add    BYTE PTR [rax],ch
  448411:	jno    0x448457
	...
  44841f:	add    BYTE PTR [rip+0x4471],ch        # 0x44c896
	...
  44842d:	add    BYTE PTR [rax],al
  44842f:	add    BYTE PTR [rdx],dh
  448431:	jno    0x448477
	...
  44843f:	add    BYTE PTR [rax],bh
  448441:	jno    0x448487
  448443:	add    BYTE PTR [rax],al
  448445:	add    BYTE PTR [rax],al
  448447:	add    BYTE PTR [rax],al
  448449:	add    BYTE PTR [rcx],al
  44844b:	add    BYTE PTR [rax],al
  44844d:	add    BYTE PTR [rax],al
  44844f:	add    BYTE PTR [rcx+0x71],al
  448452:	add    BYTE PTR [rax],r8b
  448455:	add    BYTE PTR [rax],al
  448457:	add    BYTE PTR [rax],al
  448459:	add    BYTE PTR [rdx],al
  44845b:	add    BYTE PTR [rax],al
  44845d:	add    BYTE PTR [rax],al
  44845f:	add    BYTE PTR [rcx+0x71],cl
  448462:	add    BYTE PTR [rax],r8b
  448465:	add    BYTE PTR [rax],al
  448467:	add    BYTE PTR [rax],al
  448469:	add    BYTE PTR [rcx],al
  44846b:	add    BYTE PTR [rax],al
  44846d:	add    BYTE PTR [rax],al
  44846f:	add    BYTE PTR [rdi+0x71],cl
  448472:	add    BYTE PTR [rax],r8b
	...
  44847d:	add    BYTE PTR [rax],al
  44847f:	add    BYTE PTR [rcx+rsi*2+0x44],dl
	...
  44848f:	add    BYTE PTR [rdi+0x71],dl
  448492:	add    BYTE PTR [rax],r8b
  448495:	add    BYTE PTR [rax],al
  448497:	add    BYTE PTR [rax],al
  448499:	add    BYTE PTR [rcx],al
  44849b:	add    BYTE PTR [rax],al
  44849d:	add    BYTE PTR [rax],al
  44849f:	add    BYTE PTR [rcx+rsi*2+0x44],bl
  4484a3:	add    BYTE PTR [rax],al
  4484a5:	add    BYTE PTR [rax],al
  4484a7:	add    BYTE PTR [rax],al
  4484a9:	add    BYTE PTR [rbx],al
  4484ab:	add    BYTE PTR [rax],al
  4484ad:	add    BYTE PTR [rax],al
  4484af:	add    BYTE PTR [rax+0x71],ah
  4484b2:	add    BYTE PTR [rax],r8b
	...
  4484bd:	add    BYTE PTR [rax],al
  4484bf:	add    BYTE PTR [rax+0x71],ch
  4484c2:	add    BYTE PTR [rax],r8b
	...
  4484cd:	add    BYTE PTR [rax],al
  4484cf:	add    BYTE PTR [rdi+0x71],ch
  4484d2:	add    BYTE PTR [rax],r8b
  4484d5:	add    BYTE PTR [rax],al
  4484d7:	add    BYTE PTR [rax],al
  4484d9:	add    BYTE PTR [rdx],al
  4484db:	add    BYTE PTR [rax],al
  4484dd:	add    BYTE PTR [rax],al
  4484df:	add    BYTE PTR [rdi+0x71],dh
  4484e2:	add    BYTE PTR [rax],r8b
	...
  4484ed:	add    BYTE PTR [rax],al
  4484ef:	add    BYTE PTR [rsi+0x71],bh
  4484f2:	add    BYTE PTR [rax],r8b
  4484f5:	add    BYTE PTR [rax],al
  4484f7:	add    BYTE PTR [rax],al
  4484f9:	add    BYTE PTR [rbx],al
  4484fb:	add    BYTE PTR [rax],al
  4484fd:	add    BYTE PTR [rax],al
  4484ff:	add    BYTE PTR [rbx+0x4471],al
  448505:	add    BYTE PTR [rax],al
  448507:	add    BYTE PTR [rax],al
  448509:	add    BYTE PTR [rcx],al
  44850b:	add    BYTE PTR [rax],al
  44850d:	add    BYTE PTR [rax],al
  44850f:	add    BYTE PTR [rdx+0x4471],cl
	...
  44851d:	add    BYTE PTR [rax],al
  44851f:	add    BYTE PTR [rax+0x4471],dl
  448525:	add    BYTE PTR [rax],al
  448527:	add    BYTE PTR [rax],al
  448529:	add    BYTE PTR [rcx],al
  44852b:	add    BYTE PTR [rax],al
  44852d:	add    BYTE PTR [rax],al
  44852f:	add    BYTE PTR [rax+0x4471],bl
	...
  44853d:	add    BYTE PTR [rax],al
  44853f:	add    BYTE PTR [rdi+0x4471],bl
	...
  44854d:	add    BYTE PTR [rax],al
  44854f:	add    BYTE PTR [rdx+0x4471],ah
	...
  44855d:	add    BYTE PTR [rax],al
  44855f:	add    BYTE PTR [rsi+0x4471],ah
  448565:	add    BYTE PTR [rax],al
  448567:	add    BYTE PTR [rax],al
  448569:	add    BYTE PTR [rbx],al
  44856b:	add    BYTE PTR [rax],al
  44856d:	add    BYTE PTR [rax],al
  44856f:	add    BYTE PTR [rbp+0x4471],ch
	...
  44857d:	add    BYTE PTR [rax],al
  44857f:	add    BYTE PTR [rdx+0x4471],dh
  448585:	add    BYTE PTR [rax],al
  448587:	add    BYTE PTR [rax],al
  448589:	add    BYTE PTR [rbx],al
  44858b:	add    BYTE PTR [rax],al
  44858d:	add    BYTE PTR [rax],al
  44858f:	add    BYTE PTR [rbp+0x4471],dh
  448595:	add    BYTE PTR [rax],al
  448597:	add    BYTE PTR [rax],al
  448599:	add    BYTE PTR [rbx],al
  44859b:	add    BYTE PTR [rax],al
  44859d:	add    BYTE PTR [rax],al
  44859f:	add    BYTE PTR [rdx+0x4471],bh
	...
  4485ad:	add    BYTE PTR [rax],al
  4485af:	add    bl,al
  4485b1:	jno    0x4485f7
	...
  4485bf:	add    dl,cl
  4485c1:	jno    0x448607
	...
  4485cf:	add    dl,dl
  4485d1:	jno    0x448617
  4485d3:	add    BYTE PTR [rax],al
  4485d5:	add    BYTE PTR [rax],al
  4485d7:	add    BYTE PTR [rax],al
  4485d9:	add    BYTE PTR [rbx],al
  4485db:	add    BYTE PTR [rax],al
  4485dd:	add    BYTE PTR [rax],al
  4485df:	add    ch,dl
  4485e1:	jno    0x448627
  4485e3:	add    BYTE PTR [rax],al
  4485e5:	add    BYTE PTR [rax],al
  4485e7:	add    BYTE PTR [rax],al
  4485e9:	add    BYTE PTR [rbx],al
  4485eb:	add    BYTE PTR [rax],al
  4485ed:	add    BYTE PTR [rax],al
  4485ef:	add    bl,bl
  4485f1:	jno    0x448637
	...
  4485ff:	add    dh,ah
  448601:	jno    0x448647
  448603:	add    BYTE PTR [rax],al
  448605:	add    BYTE PTR [rax],al
  448607:	add    BYTE PTR [rax],al
  448609:	add    BYTE PTR [rcx],al
  44860b:	add    BYTE PTR [rax],al
  44860d:	add    BYTE PTR [rax],al
  44860f:	add    dl,ch
  448611:	jno    0x448657
  448613:	add    BYTE PTR [rax],al
  448615:	add    BYTE PTR [rax],al
  448617:	add    BYTE PTR [rax],al
  448619:	add    BYTE PTR [rdx],al
  44861b:	add    BYTE PTR [rax],al
  44861d:	add    BYTE PTR [rax],al
  44861f:	add    al,dh
  448621:	jno    0x448667
	...
  44862f:	add    ch,dh
  448631:	jno    0x448677
  448633:	add    BYTE PTR [rax],al
  448635:	add    BYTE PTR [rax],al
  448637:	add    BYTE PTR [rax],al
  448639:	add    BYTE PTR [rdx],al
  44863b:	add    BYTE PTR [rax],al
  44863d:	add    BYTE PTR [rax],al
  44863f:	add    dh,bh
  448641:	jno    0x448687
  448643:	add    BYTE PTR [rax],al
  448645:	add    BYTE PTR [rax],al
  448647:	add    BYTE PTR [rax],al
  448649:	add    BYTE PTR [rcx],al
  44864b:	add    BYTE PTR [rax],al
  44864d:	add    BYTE PTR [rax],al
  44864f:	add    BYTE PTR [rsi],al
  448651:	jb     0x448697
	...
  44865f:	add    BYTE PTR [rdx+rsi*2],cl
  448662:	add    BYTE PTR [rax],r8b
	...
  44866d:	add    BYTE PTR [rax],al
  44866f:	add    BYTE PTR [rdx],dl
  448671:	jb     0x4486b7
	...
  44867f:	add    BYTE PTR [rcx],bl
  448681:	jb     0x4486c7
	...
  44868f:	add    BYTE PTR [rcx],ah
  448691:	jb     0x4486d7
	...
  44869f:	add    BYTE PTR [rbx],ch
  4486a1:	jb     0x4486e7
	...
  4486af:	add    BYTE PTR [rbx],dh
  4486b1:	jb     0x4486f7
	...
  4486bf:	add    BYTE PTR [rdx+rsi*2],bh
  4486c2:	add    BYTE PTR [rax],r8b
  4486c5:	add    BYTE PTR [rax],al
  4486c7:	add    BYTE PTR [rax],al
  4486c9:	add    BYTE PTR [rbx],al
  4486cb:	add    BYTE PTR [rax],al
  4486cd:	add    BYTE PTR [rax],al
  4486cf:	add    BYTE PTR [rdx+rsi*2+0x44],al
	...
  4486df:	add    BYTE PTR [rdx+0x72],cl
  4486e2:	add    BYTE PTR [rax],r8b
  4486e5:	add    BYTE PTR [rax],al
  4486e7:	add    BYTE PTR [rax],al
  4486e9:	add    BYTE PTR [rcx],al
  4486eb:	add    BYTE PTR [rax],al
  4486ed:	add    BYTE PTR [rax],al
  4486ef:	add    BYTE PTR [rbx+0x72],dl
  4486f2:	add    BYTE PTR [rax],r8b
	...
  4486fd:	add    BYTE PTR [rax],al
  4486ff:	add    BYTE PTR [rbp+0x72],bl
  448702:	add    BYTE PTR [rax],r8b
  448705:	add    BYTE PTR [rax],al
  448707:	add    BYTE PTR [rax],al
  448709:	add    BYTE PTR [rcx],al
  44870b:	add    BYTE PTR [rax],al
  44870d:	add    BYTE PTR [rax],al
  44870f:	add    BYTE PTR [rdi+0x72],ah
  448712:	add    BYTE PTR [rax],r8b
	...
  44871d:	add    BYTE PTR [rax],al
  44871f:	add    BYTE PTR [rdi+0x72],ch
  448722:	add    BYTE PTR [rax],r8b
	...
  44872d:	add    BYTE PTR [rax],al
  44872f:	add    BYTE PTR [rax+0x72],bh
  448732:	add    BYTE PTR [rax],r8b
	...
  44873d:	add    BYTE PTR [rax],al
  44873f:	add    BYTE PTR [rcx+0x4472],al
  448745:	add    BYTE PTR [rax],al
  448747:	add    BYTE PTR [rax],al
  448749:	add    BYTE PTR [rbx],al
  44874b:	add    BYTE PTR [rax],al
  44874d:	add    BYTE PTR [rax],al
  44874f:	add    BYTE PTR [rcx+0x4472],cl
	...
  44875d:	add    BYTE PTR [rax],al
  44875f:	add    BYTE PTR [rdi+0x4472],cl
	...
  44876d:	add    BYTE PTR [rax],al
  44876f:	add    BYTE PTR [rdx+0x4472],bl
	...
  44877d:	add    BYTE PTR [rax],al
  44877f:	add    BYTE PTR [rbp+0x4472],ah
	...
  44878d:	add    BYTE PTR [rax],al
  44878f:	add    BYTE PTR [rdi+0x4472],ch
	...
  44879d:	add    BYTE PTR [rax],al
  44879f:	add    BYTE PTR [rdi+0x4472],dh
	...
  4487ad:	add    BYTE PTR [rax],al
  4487af:	add    BYTE PTR [rbp+0x4472],bh
	...
  4487bd:	add    BYTE PTR [rax],al
  4487bf:	add    bl,al
  4487c1:	jb     0x448807
	...
  4487cf:	add    al,cl
  4487d1:	jb     0x448817
  4487d3:	add    BYTE PTR [rax],al
  4487d5:	add    BYTE PTR [rax],al
  4487d7:	add    BYTE PTR [rax],al
  4487d9:	add    BYTE PTR [rcx],al
  4487db:	add    BYTE PTR [rax],al
  4487dd:	add    BYTE PTR [rax],al
  4487df:	add    ch,cl
  4487e1:	jb     0x448827
	...
  4487ef:	add    dh,dl
  4487f1:	jb     0x448837
	...
  4487ff:	add    dh,bl
  448801:	jb     0x448847
	...
  44880f:	add    al,ch
  448811:	jb     0x448857
	...
  44881f:	add    ah,ch
  448821:	jb     0x448867
  448823:	add    BYTE PTR [rax],al
  448825:	add    BYTE PTR [rax],al
  448827:	add    BYTE PTR [rax],al
  448829:	add    BYTE PTR [rbx],al
  44882b:	add    BYTE PTR [rax],al
  44882d:	add    BYTE PTR [rax],al
  44882f:	add    bh,dh
  448831:	jb     0x448877
	...
  44883f:	add    bh,bh
  448841:	jb     0x448887
	...
  44884f:	add    BYTE PTR [rdi],al
  448851:	jae    0x448897
	...
  44885f:	add    BYTE PTR [rax],dl
  448861:	jae    0x4488a7
	...
  44886f:	add    BYTE PTR [rax],bl
  448871:	jae    0x4488b7
	...
  44887f:	add    BYTE PTR [rdi],bl
  448881:	jae    0x4488c7
	...
  44888f:	add    BYTE PTR [rdx],ch
  448891:	jae    0x4488d7
	...
  44889f:	add    BYTE PTR [rdx],dh
  4488a1:	jae    0x4488e7
	...
  4488af:	add    BYTE PTR [rdx],bh
  4488b1:	jae    0x4488f7
	...
  4488bf:	add    BYTE PTR [rax+0x73],al
  4488c2:	add    BYTE PTR [rax],r8b
	...
  4488cd:	add    BYTE PTR [rax],al
  4488cf:	add    BYTE PTR [rax+0x73],cl
  4488d2:	add    BYTE PTR [rax],r8b
	...
  4488dd:	add    BYTE PTR [rax],al
  4488df:	add    BYTE PTR [rcx+0x73],dl
  4488e2:	add    BYTE PTR [rax],r8b
  4488e5:	add    BYTE PTR [rax],al
  4488e7:	add    BYTE PTR [rax],al
  4488e9:	add    BYTE PTR [rbx],al
  4488eb:	add    BYTE PTR [rax],al
  4488ed:	add    BYTE PTR [rax],al
  4488ef:	add    BYTE PTR [rbx+0x73],bl
  4488f2:	add    BYTE PTR [rax],r8b
	...
  4488fd:	add    BYTE PTR [rax],al
  4488ff:	add    BYTE PTR [rbx+0x73],ah
  448902:	add    BYTE PTR [rax],r8b
	...
  44890d:	add    BYTE PTR [rax],al
  44890f:	add    BYTE PTR [rdx+0x73],ch
  448912:	add    BYTE PTR [rax],r8b
  448915:	add    BYTE PTR [rax],al
  448917:	add    BYTE PTR [rax],al
  448919:	add    BYTE PTR [rdx],al
  44891b:	add    BYTE PTR [rax],al
  44891d:	add    BYTE PTR [rax],al
  44891f:	add    BYTE PTR [rax+0x73],dh
  448922:	add    BYTE PTR [rax],r8b
	...
  44892d:	add    BYTE PTR [rax],al
  44892f:	add    BYTE PTR [rbp+0x73],dh
  448932:	add    BYTE PTR [rax],r8b
	...
  44893d:	add    BYTE PTR [rax],al
  44893f:	add    BYTE PTR [rsi+0x73],bh
  448942:	add    BYTE PTR [rax],r8b
  448945:	add    BYTE PTR [rax],al
  448947:	add    BYTE PTR [rax],al
  448949:	add    BYTE PTR [rcx],al
  44894b:	add    BYTE PTR [rax],al
  44894d:	add    BYTE PTR [rax],al
  44894f:	add    BYTE PTR [rdx+0x4473],al
	...
  44895d:	add    BYTE PTR [rax],al
  44895f:	add    BYTE PTR [rdi+0x4473],al
	...
  44896d:	add    BYTE PTR [rax],al
  44896f:	add    BYTE PTR [rbx+rsi*2+0x44],cl
	...
  44897e:	add    BYTE PTR [rax],al
  448980:	xchg   esi,eax
  448981:	jae    0x4489c7
	...
  44898f:	add    BYTE PTR [rbp+0x4473],bl
	...
  44899d:	add    BYTE PTR [rax],al
  44899f:	add    BYTE PTR [rbx+rsi*2+0x44],ah
	...
  4489ae:	add    BYTE PTR [rax],al
  4489b0:	stos   DWORD PTR es:[rdi],eax
  4489b1:	jae    0x4489f7
	...
  4489bf:	add    BYTE PTR [rdx+0x4473],dh
	...
  4489cd:	add    BYTE PTR [rax],al
  4489cf:	add    BYTE PTR [rbx+0x4473],bh
  4489d5:	add    BYTE PTR [rax],al
  4489d7:	add    BYTE PTR [rax],al
  4489d9:	add    BYTE PTR [rbx],al
  4489db:	add    BYTE PTR [rax],al
  4489dd:	add    BYTE PTR [rax],al
  4489df:	add    dl,al
  4489e1:	jae    0x448a27
	...
  4489ef:	add    bl,cl
  4489f1:	jae    0x448a37
	...
  4489ff:	add    ch,dl
  448a01:	jae    0x448a47
	...
  448a0f:	add    dl,ah
  448a11:	jae    0x448a57
	...
  448a1f:	add    cl,ch
  448a21:	jae    0x448a67
	...
  448a2f:	add    cl,dh
  448a31:	jae    0x448a77
  448a33:	add    BYTE PTR [rax],al
  448a35:	add    BYTE PTR [rax],al
  448a37:	add    BYTE PTR [rax],al
  448a39:	add    BYTE PTR [rbx],al
  448a3b:	add    BYTE PTR [rax],al
  448a3d:	add    BYTE PTR [rax],al
  448a3f:	add    dh,bh
  448a41:	jae    0x448a87
	...
  448a4f:	add    BYTE PTR [rdx],al
  448a51:	je     0x448a97
  448a53:	add    BYTE PTR [rax],al
  448a55:	add    BYTE PTR [rax],al
  448a57:	add    BYTE PTR [rax],al
  448a59:	add    BYTE PTR [rcx],al
  448a5b:	add    BYTE PTR [rax],al
  448a5d:	add    BYTE PTR [rax],al
  448a5f:	add    BYTE PTR [rax],cl
  448a61:	je     0x448aa7
	...
  448a6f:	add    BYTE PTR [rsi],cl
  448a71:	je     0x448ab7
	...
  448a7f:	add    BYTE PTR [rbx],dl
  448a81:	je     0x448ac7
  448a83:	add    BYTE PTR [rax],al
  448a85:	add    BYTE PTR [rax],al
  448a87:	add    BYTE PTR [rax],al
  448a89:	add    BYTE PTR [rdx],al
  448a8b:	add    BYTE PTR [rax],al
  448a8d:	add    BYTE PTR [rax],al
  448a8f:	add    BYTE PTR [rbx],bl
  448a91:	je     0x448ad7
	...
  448a9f:	add    BYTE PTR [rdx],ah
  448aa1:	je     0x448ae7
  448aa3:	add    BYTE PTR [rax],al
  448aa5:	add    BYTE PTR [rax],al
  448aa7:	add    BYTE PTR [rax],al
  448aa9:	add    BYTE PTR [rcx],al
  448aab:	add    BYTE PTR [rax],al
  448aad:	add    BYTE PTR [rax],al
  448aaf:	add    BYTE PTR [rbx],ch
  448ab1:	je     0x448af7
	...
  448abf:	add    BYTE PTR [rsp+rsi*2],dh
  448ac2:	add    BYTE PTR [rax],r8b
  448ac5:	add    BYTE PTR [rax],al
  448ac7:	add    BYTE PTR [rax],al
  448ac9:	add    BYTE PTR [rbx],al
  448acb:	add    BYTE PTR [rax],al
  448acd:	add    BYTE PTR [rax],al
  448acf:	add    BYTE PTR [rcx],bh
  448ad1:	je     0x448b17
	...
  448adf:	add    BYTE PTR [rax+0x74],al
  448ae2:	add    BYTE PTR [rax],r8b
	...
  448aed:	add    BYTE PTR [rax],al
  448aef:	add    BYTE PTR [rbx+0x74],cl
  448af2:	add    BYTE PTR [rax],r8b
	...
  448afd:	add    BYTE PTR [rax],al
  448aff:	add    BYTE PTR [rcx+0x74],dl
  448b02:	add    BYTE PTR [rax],r8b
	...
  448b0d:	add    BYTE PTR [rax],al
  448b0f:	add    BYTE PTR [rbx+0x74],bl
  448b12:	add    BYTE PTR [rax],r8b
	...
  448b1d:	add    BYTE PTR [rax],al
  448b1f:	add    BYTE PTR [rsi+0x74],ah
  448b22:	add    BYTE PTR [rax],r8b
	...
  448b2d:	add    BYTE PTR [rax],al
  448b2f:	add    BYTE PTR [rsp+rsi*2+0x44],ch
	...
  448b3f:	add    BYTE PTR [rbx+0x74],dh
  448b42:	add    BYTE PTR [rax],r8b
	...
  448b4d:	add    BYTE PTR [rax],al
  448b4f:	add    BYTE PTR [rbx+0x74],bh
  448b52:	add    BYTE PTR [rax],r8b
	...
  448b5d:	add    BYTE PTR [rax],al
  448b5f:	add    BYTE PTR [rdx+0x4474],al
	...
  448b6d:	add    BYTE PTR [rax],al
  448b6f:	add    BYTE PTR [rax+0x4474],cl
  448b75:	add    BYTE PTR [rax],al
  448b77:	add    BYTE PTR [rax],al
  448b79:	add    BYTE PTR [rcx],al
  448b7b:	add    BYTE PTR [rax],al
  448b7d:	add    BYTE PTR [rax],al
  448b7f:	add    BYTE PTR [rdx+0x4474],dl
  448b85:	add    BYTE PTR [rax],al
  448b87:	add    BYTE PTR [rax],al
  448b89:	add    BYTE PTR [rbx],al
  448b8b:	add    BYTE PTR [rax],al
  448b8d:	add    BYTE PTR [rax],al
  448b8f:	add    BYTE PTR [rsp+rsi*2+0x44],bl
	...
  448b9e:	add    BYTE PTR [rax],al
  448ba0:	movabs ds:0x4474,al
  448ba9:	add    BYTE PTR [rax],al
  448bab:	add    BYTE PTR [rax],al
  448bad:	add    BYTE PTR [rax],al
  448baf:	add    BYTE PTR [rcx+0x4474],ch
  448bb5:	add    BYTE PTR [rax],al
  448bb7:	add    BYTE PTR [rax],al
  448bb9:	add    BYTE PTR [rbx],al
  448bbb:	add    BYTE PTR [rax],al
  448bbd:	add    BYTE PTR [rax],al
  448bbf:	add    BYTE PTR [rdi+0x4474],ch
	...
  448bcd:	add    BYTE PTR [rax],al
  448bcf:	add    BYTE PTR [rsi+0x4474],dh
	...
  448bdd:	add    BYTE PTR [rax],al
  448bdf:	add    cl,al
  448be1:	je     0x448c27
	...
  448bef:	add    dh,al
  448bf1:	je     0x448c37
	...
  448bff:	add    bh,cl
  448c01:	je     0x448c47
	...
  448c0f:	add    cl,bl
  448c11:	je     0x448c57
	...
  448c1f:	add    dh,bl
  448c21:	je     0x448c67
  448c23:	add    BYTE PTR [rax],al
  448c25:	add    BYTE PTR [rax],al
  448c27:	add    BYTE PTR [rax],al
  448c29:	add    BYTE PTR [rbx],al
  448c2b:	add    BYTE PTR [rax],al
  448c2d:	add    BYTE PTR [rax],al
  448c2f:	add    bl,ah
  448c31:	je     0x448c77
  448c33:	add    BYTE PTR [rax],al
  448c35:	add    BYTE PTR [rax],al
  448c37:	add    BYTE PTR [rax],al
  448c39:	add    BYTE PTR [rcx],al
  448c3b:	add    BYTE PTR [rax],al
  448c3d:	add    BYTE PTR [rax],al
  448c3f:	add    al,ch
  448c41:	je     0x448c87
  448c43:	add    BYTE PTR [rax],al
  448c45:	add    BYTE PTR [rax],al
  448c47:	add    BYTE PTR [rax],al
  448c49:	add    BYTE PTR [rcx],al
  448c4b:	add    BYTE PTR [rax],al
  448c4d:	add    BYTE PTR [rax],al
  448c4f:	add    dl,dh
  448c51:	je     0x448c97
  448c53:	add    BYTE PTR [rax],al
  448c55:	add    BYTE PTR [rax],al
  448c57:	add    BYTE PTR [rax],al
  448c59:	add    BYTE PTR [rbx],al
  448c5b:	add    BYTE PTR [rax],al
  448c5d:	add    BYTE PTR [rax],al
  448c5f:	add    ch,dh
  448c61:	je     0x448ca7
  448c63:	add    BYTE PTR [rax],al
  448c65:	add    BYTE PTR [rax],al
  448c67:	add    BYTE PTR [rax],al
  448c69:	add    BYTE PTR [rbx],al
  448c6b:	add    BYTE PTR [rax],al
  448c6d:	add    BYTE PTR [rax],al
  448c6f:	add    dh,bh
  448c71:	je     0x448cb7
	...
  448c7f:	add    BYTE PTR [rdx],cl
  448c81:	jne    0x448cc7
  448c83:	add    BYTE PTR [rax],al
  448c85:	add    BYTE PTR [rax],al
  448c87:	add    BYTE PTR [rax],al
  448c89:	add    BYTE PTR [rcx],al
  448c8b:	add    BYTE PTR [rax],al
  448c8d:	add    BYTE PTR [rax],al
  448c8f:	add    BYTE PTR [rax],dl
  448c91:	jne    0x448cd7
	...
  448c9f:	add    BYTE PTR [rax],bl
  448ca1:	jne    0x448ce7
  448ca3:	add    BYTE PTR [rax],al
  448ca5:	add    BYTE PTR [rax],al
  448ca7:	add    BYTE PTR [rax],al
  448ca9:	add    BYTE PTR [rcx],al
  448cab:	add    BYTE PTR [rax],al
  448cad:	add    BYTE PTR [rax],al
  448caf:	add    BYTE PTR [rip+0x4475],bl        # 0x44d12a
  448cb5:	add    BYTE PTR [rax],al
  448cb7:	add    BYTE PTR [rax],al
  448cb9:	add    BYTE PTR [rbx],al
  448cbb:	add    BYTE PTR [rax],al
  448cbd:	add    BYTE PTR [rax],al
  448cbf:	add    BYTE PTR [rdx],ah
  448cc1:	jne    0x448d07
	...
  448ccf:	add    BYTE PTR [rbx],ch
  448cd1:	jne    0x448d17
	...
  448cdf:	add    BYTE PTR [rbx],dh
  448ce1:	jne    0x448d27
	...
  448cef:	add    BYTE PTR [rax],bh
  448cf1:	jne    0x448d37
	...
  448cff:	add    BYTE PTR [rsi],bh
  448d01:	jne    0x448d47
	...
  448d0f:	add    BYTE PTR [rax+0x75],cl
  448d12:	add    BYTE PTR [rax],r8b
	...
  448d1d:	add    BYTE PTR [rax],al
  448d1f:	add    BYTE PTR [rbp+rsi*2+0x44],dl
	...
  448d2f:	add    BYTE PTR [rax+0x75],ah
  448d32:	add    BYTE PTR [rax],r8b
  448d35:	add    BYTE PTR [rax],al
  448d37:	add    BYTE PTR [rax],al
  448d39:	add    BYTE PTR [rbx],al
  448d3b:	add    BYTE PTR [rax],al
  448d3d:	add    BYTE PTR [rax],al
  448d3f:	add    BYTE PTR [rsi+0x75],ah
  448d42:	add    BYTE PTR [rax],r8b
  448d45:	add    BYTE PTR [rax],al
  448d47:	add    BYTE PTR [rax],al
  448d49:	add    BYTE PTR [rbx],al
  448d4b:	add    BYTE PTR [rax],al
  448d4d:	add    BYTE PTR [rax],al
  448d4f:	add    BYTE PTR [rbp+0x75],ch
  448d52:	add    BYTE PTR [rax],r8b
	...
  448d5d:	add    BYTE PTR [rax],al
  448d5f:	add    BYTE PTR [rbp+0x75],dh
  448d62:	add    BYTE PTR [rax],r8b
	...
  448d6d:	add    BYTE PTR [rax],al
  448d6f:	add    BYTE PTR [rsi+0x75],bh
  448d72:	add    BYTE PTR [rax],r8b
	...
  448d7d:	add    BYTE PTR [rax],al
  448d7f:	add    BYTE PTR [rdi+0x4475],al
	...
  448d8d:	add    BYTE PTR [rax],al
  448d8f:	add    BYTE PTR [rbp+0x4475],cl
	...
  448d9d:	add    BYTE PTR [rax],al
  448d9f:	add    BYTE PTR [rbp+rsi*2+0x44],dl
  448da6:	add    BYTE PTR [rax],al
  448da8:	add    BYTE PTR [rax],al
  448daa:	add    eax,DWORD PTR [rax]
  448dac:	add    BYTE PTR [rax],al
  448dae:	add    BYTE PTR [rax],al
  448db0:	cdq    
  448db1:	jne    0x448df7
  448db3:	add    BYTE PTR [rax],al
  448db5:	add    BYTE PTR [rax],al
  448db7:	add    BYTE PTR [rax],al
  448db9:	add    BYTE PTR [rbx],al
  448dbb:	add    BYTE PTR [rax],al
  448dbd:	add    BYTE PTR [rax],al
  448dbf:	add    BYTE PTR [rdi+0x4475],bl
	...
  448dcd:	add    BYTE PTR [rax],al
  448dcf:	add    BYTE PTR [rsi+0x4475],ah
	...
  448ddd:	add    BYTE PTR [rax],al
  448ddf:	add    BYTE PTR [rbp+rsi*2+0x44],ch
	...
  448dee:	add    BYTE PTR [rax],al
  448df0:	mov    ch,0x75
  448df2:	add    BYTE PTR [rax],r8b
	...
  448dfd:	add    BYTE PTR [rax],al
  448dff:	add    BYTE PTR [rdi+0x4475],bh
	...
  448e0d:	add    BYTE PTR [rax],al
  448e0f:	add    ch,al
  448e11:	jne    0x448e57
  448e13:	add    BYTE PTR [rax],al
  448e15:	add    BYTE PTR [rax],al
  448e17:	add    BYTE PTR [rax],al
  448e19:	add    BYTE PTR [rcx],al
  448e1b:	add    BYTE PTR [rax],al
  448e1d:	add    BYTE PTR [rax],al
  448e1f:	add    ah,cl
  448e21:	jne    0x448e67
  448e23:	add    BYTE PTR [rax],al
  448e25:	add    BYTE PTR [rax],al
  448e27:	add    BYTE PTR [rax],al
  448e29:	add    BYTE PTR [rcx],al
  448e2b:	add    BYTE PTR [rax],al
  448e2d:	add    BYTE PTR [rax],al
  448e2f:	add    ah,dl
  448e31:	jne    0x448e77
  448e33:	add    BYTE PTR [rax],al
  448e35:	add    BYTE PTR [rax],al
  448e37:	add    BYTE PTR [rax],al
  448e39:	add    BYTE PTR [rbx],al
  448e3b:	add    BYTE PTR [rax],al
  448e3d:	add    BYTE PTR [rax],al
  448e3f:	add    ch,bl
  448e41:	jne    0x448e87
	...
  448e4f:	add    ch,ah
  448e51:	jne    0x448e97
  448e53:	add    BYTE PTR [rax],al
  448e55:	add    BYTE PTR [rax],al
  448e57:	add    BYTE PTR [rax],al
  448e59:	add    BYTE PTR [rdx],al
  448e5b:	add    BYTE PTR [rax],al
  448e5d:	add    BYTE PTR [rax],al
  448e5f:	add    ch,ch
  448e61:	jne    0x448ea7
	...
  448e6f:	add    ch,dh
  448e71:	jne    0x448eb7
	...
  448e7f:	add    dl,bh
  448e81:	jne    0x448ec7
	...
  448e8f:	add    BYTE PTR [rax],al
  448e91:	jbe    0x448ed7
	...
  448e9f:	add    BYTE PTR [rcx],cl
  448ea1:	jbe    0x448ee7
  448ea3:	add    BYTE PTR [rax],al
  448ea5:	add    BYTE PTR [rax],al
  448ea7:	add    BYTE PTR [rax],al
  448ea9:	add    BYTE PTR [rbx],al
  448eab:	add    BYTE PTR [rax],al
  448ead:	add    BYTE PTR [rax],al
  448eaf:	add    BYTE PTR [rsi],cl
  448eb1:	jbe    0x448ef7
  448eb3:	add    BYTE PTR [rax],al
  448eb5:	add    BYTE PTR [rax],al
  448eb7:	add    BYTE PTR [rax],al
  448eb9:	add    BYTE PTR [rbx],al
  448ebb:	add    BYTE PTR [rax],al
  448ebd:	add    BYTE PTR [rax],al
  448ebf:	add    BYTE PTR [rsi+rsi*2],dl
  448ec2:	add    BYTE PTR [rax],r8b
	...
  448ecd:	add    BYTE PTR [rax],al
  448ecf:	add    BYTE PTR [rdi],bl
  448ed1:	jbe    0x448f17
  448ed3:	add    BYTE PTR [rax],al
  448ed5:	add    BYTE PTR [rax],al
  448ed7:	add    BYTE PTR [rax],al
  448ed9:	add    BYTE PTR [rbx],al
  448edb:	add    BYTE PTR [rax],al
  448edd:	add    BYTE PTR [rax],al
  448edf:	add    BYTE PTR [rsi],ah
  448ee1:	jbe    0x448f27
  448ee3:	add    BYTE PTR [rax],al
  448ee5:	add    BYTE PTR [rax],al
  448ee7:	add    BYTE PTR [rax],al
  448ee9:	add    BYTE PTR [rbx],al
  448eeb:	add    BYTE PTR [rax],al
  448eed:	add    BYTE PTR [rax],al
  448eef:	add    BYTE PTR [rbx],ch
  448ef1:	jbe    0x448f37
	...
  448eff:	add    BYTE PTR [rdx],dh
  448f01:	jbe    0x448f47
	...
  448f0f:	add    BYTE PTR [rdx],bh
  448f11:	jbe    0x448f57
	...
  448f1f:	add    BYTE PTR [rdi],bh
  448f21:	jbe    0x448f67
	...
  448f2f:	add    BYTE PTR [rdi+0x76],al
  448f32:	add    BYTE PTR [rax],r8b
	...
  448f3d:	add    BYTE PTR [rax],al
  448f3f:	add    BYTE PTR [rbp+0x76],cl
  448f42:	add    BYTE PTR [rax],r8b
	...
  448f4d:	add    BYTE PTR [rax],al
  448f4f:	add    BYTE PTR [rcx+0x76],dl
  448f52:	add    BYTE PTR [rax],r8b
  448f55:	add    BYTE PTR [rax],al
  448f57:	add    BYTE PTR [rax],al
  448f59:	add    BYTE PTR [rcx],al
  448f5b:	add    BYTE PTR [rax],al
  448f5d:	add    BYTE PTR [rax],al
  448f5f:	add    BYTE PTR [rdi+0x76],bl
  448f62:	add    BYTE PTR [rax],r8b
  448f65:	add    BYTE PTR [rax],al
  448f67:	add    BYTE PTR [rax],al
  448f69:	add    BYTE PTR [rcx],al
  448f6b:	add    BYTE PTR [rax],al
  448f6d:	add    BYTE PTR [rax],al
  448f6f:	add    BYTE PTR [rcx+0x76],ch
  448f72:	add    BYTE PTR [rax],r8b
  448f75:	add    BYTE PTR [rax],al
  448f77:	add    BYTE PTR [rax],al
  448f79:	add    BYTE PTR [rcx],al
  448f7b:	add    BYTE PTR [rax],al
  448f7d:	add    BYTE PTR [rax],al
  448f7f:	add    BYTE PTR [rsi+rsi*2+0x44],dh
  448f83:	add    BYTE PTR [rax],al
  448f85:	add    BYTE PTR [rax],al
  448f87:	add    BYTE PTR [rax],al
  448f89:	add    BYTE PTR [rcx],al
  448f8b:	add    BYTE PTR [rax],al
  448f8d:	add    BYTE PTR [rax],al
  448f8f:	add    BYTE PTR [rsi+0x76],bh
  448f92:	add    BYTE PTR [rax],r8b
  448f95:	add    BYTE PTR [rax],al
  448f97:	add    BYTE PTR [rax],al
  448f99:	add    BYTE PTR [rcx],al
  448f9b:	add    BYTE PTR [rax],al
  448f9d:	add    BYTE PTR [rax],al
  448f9f:	add    BYTE PTR [rax+0x4476],cl
  448fa5:	add    BYTE PTR [rax],al
  448fa7:	add    BYTE PTR [rax],al
  448fa9:	add    BYTE PTR [rcx],al
  448fab:	add    BYTE PTR [rax],al
  448fad:	add    BYTE PTR [rax],al
  448faf:	add    BYTE PTR [rcx+0x4476],dl
  448fb5:	add    BYTE PTR [rax],al
  448fb7:	add    BYTE PTR [rax],al
  448fb9:	add    BYTE PTR [rcx],al
  448fbb:	add    BYTE PTR [rax],al
  448fbd:	add    BYTE PTR [rax],al
  448fbf:	add    BYTE PTR [rdi+0x4476],dl
  448fc5:	add    BYTE PTR [rax],al
  448fc7:	add    BYTE PTR [rax],al
  448fc9:	add    BYTE PTR [rcx],al
  448fcb:	add    BYTE PTR [rax],al
  448fcd:	add    BYTE PTR [rax],al
  448fcf:	add    BYTE PTR [rdi+0x4476],bl
  448fd5:	add    BYTE PTR [rax],al
  448fd7:	add    BYTE PTR [rax],al
  448fd9:	add    BYTE PTR [rcx],al
  448fdb:	add    BYTE PTR [rax],al
  448fdd:	add    BYTE PTR [rax],al
  448fdf:	add    BYTE PTR [rsi+rsi*2+0x44],ch
	...
  448fee:	add    BYTE PTR [rax],al
  448ff0:	mov    cl,0x76
  448ff2:	add    BYTE PTR [rax],r8b
	...
  448ffd:	add    BYTE PTR [rax],al
  448fff:	add    BYTE PTR [rbp+0x4476],dh
	...
  44903d:	add    BYTE PTR [rax],al
  44903f:	add    BYTE PTR [rcx+0x42],al
  449042:	rex.WRXB push r10
  449044:	push   rsp
  449045:	and    BYTE PTR [rbx+0x20],bl
  449048:	push   rdi
  449049:	rex.WRXB push r10
  44904b:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  449050:	push   rdx
  449051:	rex.B
  449052:	rex.WRX push rbx
  449054:	rex.B
  449055:	rex.XB push r12
  449057:	rex.WB
  449058:	rex.WRXB
  449059:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  44905d:	(bad)  
  44905e:	addr32 addr32 jb 0x4490c7
  449062:	addr32 (bad) 
  449064:	je     0x4490cb
  449066:	pop    rdi
  449067:	jae    0x4490d2
  449069:	outs   dx,BYTE PTR ds:[esi]
  44906b:	(bad)  
  44906c:	je     0x4490e3
  44906e:	jb     0x4490d5
  449070:	add    BYTE PTR [rsi+0x61],ch
  449073:	ins    DWORD PTR es:[rdi],dx
  449074:	add    BYTE PTR gs:[rax],al
  449077:	add    BYTE PTR [rcx+0x4c],al
  44907a:	push   rsp
  44907b:	rex.RB push r10
  44907d:	and    BYTE PTR [rcx+0x47],al
  449080:	rex.RXB push r10
  449082:	rex.RB
  449083:	rex.RXB
  449084:	push   r12
  449086:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cb100
  44908d:	and    eax,0x20292073
  449092:	push   rdx
  449093:	rex.RB
  449094:	rex.WRX
  449095:	rex.B
  449096:	rex.WRB
  449097:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44909c:	and    eax,0x4c410a73
  4490a1:	push   rsp
  4490a2:	rex.RB push r10
  4490a4:	and    BYTE PTR [rcx+0x47],al
  4490a7:	rex.RXB push r10
  4490a9:	rex.RB
  4490aa:	rex.RXB
  4490ab:	push   r12
  4490ad:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cb127
  4490b4:	and    eax,0x20292073
  4490b9:	rex.WRXB push r15
  4490bb:	rex.WRX
  4490bc:	rex.RB push r10
  4490be:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4490c2:	and    eax,0x4c410a73
  4490c7:	push   rsp
  4490c8:	rex.RB push r10
  4490ca:	and    BYTE PTR [rcx+0x47],al
  4490cd:	rex.RXB push r10
  4490cf:	rex.RB
  4490d0:	rex.RXB
  4490d1:	push   r12
  4490d3:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cb14d
  4490da:	and    eax,0x20292073
  4490df:	push   rbx
  4490e0:	rex.RB push r12
  4490e2:	and    BYTE PTR [rbx+0x43],dl
  4490e5:	rex.W
  4490e6:	rex.RB
  4490e7:	rex.WRB
  4490e8:	and    BYTE PTR [rip+0x250a0a73],spl        # 0x254e9b62
  4490ef:	jae    0x4490fb
  4490f1:	or     ch,BYTE PTR [rdx]
  4490f3:	and    BYTE PTR [rdx+rcx*1+0x5b],bh
  4490f7:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1b170
  4490fd:	pop    rbx
  4490fe:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1b177
  449104:	and    eax,0x205b2073
  449109:	sub    al,0x20
  44910b:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  449111:	jl     0x44911d
  449113:	pop    rbx
  449114:	and    BYTE PTR [rbx+0x20],bl
  449117:	and    eax,0x205d2073
  44911c:	pop    rbx
  44911d:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1b196
  449123:	and    eax,0x205b2073
  449128:	sub    al,0x20
  44912a:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  449130:	pop    rbp
  449131:	and    BYTE PTR [rdi+0x52],cl
  449134:	rex.R
  449135:	rex.RB push r10
  449137:	and    BYTE PTR [rdx+0x59],al
  44913a:	and    BYTE PTR [rbx+0x20],bl
  44913d:	and    eax,0x205d2073
  449142:	pop    rbx
  449143:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1b1bc
  449149:	and    eax,0x205b2073
  44914e:	sub    al,0x20
  449150:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  449156:	(bad)  
  449157:	jb     0x4491c0
  449159:	je     0x4491d4
  44915b:	jo     0x4491c2
  44915d:	add    BYTE PTR [rcx+0x72],ah
  449160:	outs   dx,BYTE PTR ds:[esi]
  449162:	(bad)  
  449163:	ins    DWORD PTR es:[rdi],dx
  449164:	add    BYTE PTR gs:[rcx+0x72],ah
  449168:	ins    DWORD PTR es:[edi],dx
  44916a:	outs   dx,DWORD PTR ds:[rsi]
  44916b:	fs add BYTE PTR gs:[rdi+0x68],dh
  449170:	gs jb  0x4491d8
  449173:	and    BYTE PTR [rcx+0x67],ah
  449176:	addr32 jb 0x4491de
  449179:	addr32 (bad) 
  44917b:	je     0x4491e2
  44917d:	pop    rdi
  44917e:	jae    0x4491e9
  449180:	outs   dx,BYTE PTR ds:[esi]
  449182:	(bad)  
  449183:	je     0x4491fa
  449185:	jb     0x4491ec
  449187:	and    BYTE PTR [rcx+0x73],ch
  44918a:	cmp    al,BYTE PTR [rax]
  44918c:	outs   dx,BYTE PTR ds:[rsi]
  44918d:	gs ja  0x4491ef
  449190:	jae    0x4491f5
  449192:	push   0x616d65
  449197:	outs   dx,BYTE PTR ds:[rsi]
  449198:	gs ja  0x4491fa
  44919b:	outs   dx,DWORD PTR ds:[rsi]
  44919c:	ja     0x44920c
  44919e:	gs jb  0x4491a1
  4491a1:	outs   dx,BYTE PTR ds:[rsi]
  4491a2:	gs ja  0x449204
  4491a5:	outs   dx,BYTE PTR ds:[rsi]
  4491a6:	(bad)  
  4491a7:	ins    DWORD PTR es:[rdi],dx
  4491a8:	add    BYTE PTR gs:[rax],al
  4491ab:	add    BYTE PTR [rax],al
  4491ad:	add    BYTE PTR [rax],al
  4491af:	add    BYTE PTR [rcx+0x4c],al
  4491b2:	push   rsp
  4491b3:	rex.RB push r10
  4491b5:	and    BYTE PTR [rbx+0x4f],al
  4491b8:	rex.WR
  4491b9:	rex.WR
  4491ba:	push   r12
  4491bc:	rex.WB
  4491bd:	rex.WRXB
  4491be:	rex.WRX and BYTE PTR [rip+0x45522073],r12b        # 0x4596b238
  4491c5:	rex.WRX
  4491c6:	rex.B
  4491c7:	rex.WRB
  4491c8:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  4491cd:	and    eax,0x4c410a73
  4491d2:	push   rsp
  4491d3:	rex.RB push r10
  4491d5:	and    BYTE PTR [rbx+0x4f],al
  4491d8:	rex.WR
  4491d9:	rex.WR
  4491da:	push   r12
  4491dc:	rex.WB
  4491dd:	rex.WRXB
  4491de:	rex.WRX and BYTE PTR [rip+0x574f2073],r12b        # 0x5793b258
  4491e5:	rex.WRX
  4491e6:	rex.RB push r10
  4491e8:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4491ec:	and    eax,0x4c410a73
  4491f1:	push   rsp
  4491f2:	rex.RB push r10
  4491f4:	and    BYTE PTR [rbx+0x4f],al
  4491f7:	rex.WR
  4491f8:	rex.WR
  4491f9:	push   r12
  4491fb:	rex.WB
  4491fc:	rex.WRXB
  4491fd:	rex.WRX and BYTE PTR [rip+0x45532073],r12b        # 0x4597b277
  449204:	push   rsp
  449205:	and    BYTE PTR [rbx+0x43],dl
  449208:	rex.W
  449209:	rex.RB
  44920a:	rex.WRB
  44920b:	and    BYTE PTR [rip+0x4c410073],spl        # 0x4c859285
  449212:	push   rsp
  449213:	rex.RB push r10
  449215:	and    BYTE PTR [rbx+0x4f],al
  449218:	rex.WRX push rsi
  44921a:	rex.RB push r10
  44921c:	push   rbx
  44921d:	rex.WB
  44921e:	rex.WRXB
  44921f:	rex.WRX and BYTE PTR [rip+0x45522073],r12b        # 0x4596b299
  449226:	rex.WRX
  449227:	rex.B
  449228:	rex.WRB
  449229:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44922e:	and    eax,0x4c410a73
  449233:	push   rsp
  449234:	rex.RB push r10
  449236:	and    BYTE PTR [rbx+0x4f],al
  449239:	rex.WRX push rsi
  44923b:	rex.RB push r10
  44923d:	push   rbx
  44923e:	rex.WB
  44923f:	rex.WRXB
  449240:	rex.WRX and BYTE PTR [rip+0x574f2073],r12b        # 0x5793b2ba
  449247:	rex.WRX
  449248:	rex.RB push r10
  44924a:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44924e:	and    eax,0x4c410a73
  449253:	push   rsp
  449254:	rex.RB push r10
  449256:	and    BYTE PTR [rbx+0x4f],al
  449259:	rex.WRX push rsi
  44925b:	rex.RB push r10
  44925d:	push   rbx
  44925e:	rex.WB
  44925f:	rex.WRXB
  449260:	rex.WRX and BYTE PTR [rip+0x45532073],r12b        # 0x4597b2da
  449267:	push   rsp
  449268:	and    BYTE PTR [rbx+0x43],dl
  44926b:	rex.W
  44926c:	rex.RB
  44926d:	rex.WRB
  44926e:	and    BYTE PTR [rip+0x706f0073],spl        # 0x70b392e8
  449275:	je     0x4492e0
  449277:	outs   dx,DWORD PTR ds:[rsi]
  449278:	outs   dx,BYTE PTR ds:[rsi]
  449279:	add    BYTE PTR [rax],al
  44927b:	add    BYTE PTR [rax],al
  44927d:	add    BYTE PTR [rax],al
  44927f:	add    BYTE PTR [rcx+0x4c],al
  449282:	push   rsp
  449283:	rex.RB push r10
  449285:	and    BYTE PTR [rcx+rax*2+0x54],al
  449289:	rex.B
  44928a:	rex.X
  44928b:	push   r11
  44928d:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fb307
  449294:	pop    rbx
  449295:	and    BYTE PTR [rdi+0x49],dl
  449298:	push   rsp
  449299:	rex.W and BYTE PTR [rbp+0x20],bl
  44929d:	and    eax,0x205b2073
  4492a2:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  4492a8:	pop    rbp
  4492a9:	or     cl,BYTE PTR [rdx]
  4492ab:	and    eax,0x200a0a73
  4492b0:	and    BYTE PTR [rax],ah
  4492b2:	and    BYTE PTR [rbx+0x4f],al
  4492b5:	rex.WRX
  4492b6:	rex.WRX
  4492b7:	rex.RB
  4492b8:	rex.XB push r12
  4492ba:	rex.WB
  4492bb:	rex.WRXB
  4492bc:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  4492c1:	rex.WB push r12
  4492c3:	and    BYTE PTR [rip+0x410a0a73],ah        # 0x414e9d3c
  4492c9:	rex.WR push rsp
  4492cb:	rex.RB push r10
  4492cd:	and    BYTE PTR [rcx+rax*2+0x54],al
  4492d1:	rex.B
  4492d2:	rex.X
  4492d3:	push   r11
  4492d5:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596b34f
  4492dc:	rex.WRX
  4492dd:	rex.B
  4492de:	rex.WRB
  4492df:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  4492e4:	and    eax,0x410a0a73
  4492e9:	rex.WR push rsp
  4492eb:	rex.RB push r10
  4492ed:	and    BYTE PTR [rcx+rax*2+0x54],al
  4492f1:	rex.B
  4492f2:	rex.X
  4492f3:	push   r11
  4492f5:	and    BYTE PTR [rip+0x574f2073],r12b        # 0x5793b36f
  4492fc:	rex.WRX
  4492fd:	rex.RB push r10
  4492ff:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  449303:	and    eax,0x410a0a73
  449308:	rex.WR push rsp
  44930a:	rex.RB push r10
  44930c:	and    BYTE PTR [rcx+rax*2+0x54],al
  449310:	rex.B
  449311:	rex.X
  449312:	push   r11
  449314:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597b38e
  44931b:	push   rsp
  44931c:	and    BYTE PTR [rcx+rax*2+0x42],dl
  449320:	rex.WR
  449321:	rex.RB push r11
  449323:	push   rax
  449324:	rex.B
  449325:	rex.XB
  449326:	and    BYTE PTR [rip+0x410a0a73],r12b        # 0x414e9da0
  44932d:	rex.WR push rsp
  44932f:	rex.RB push r10
  449331:	and    BYTE PTR [rcx+rax*2+0x54],al
  449335:	rex.B
  449336:	rex.X
  449337:	push   r11
  449339:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597b3b3
  449340:	push   rsp
  449341:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bfb3ba
  449347:	push   rsp
  449348:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  44934d:	and    BYTE PTR [rbp+0x20],bh
  449350:	jnp    0x449372
  449352:	and    eax,0x207c2073
  449357:	rex.R
  449358:	rex.RB
  449359:	rex.RX
  44935a:	push   r13
  44935c:	rex.WR push rsp
  44935e:	and    BYTE PTR [rbp+0xa],bh
  449361:	rex.B
  449362:	rex.WR push rsp
  449364:	rex.RB push r10
  449366:	and    BYTE PTR [rcx+rax*2+0x54],al
  44936a:	rex.B
  44936b:	rex.X
  44936c:	push   r11
  44936e:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597b3e8
  449375:	push   rsp
  449376:	and    BYTE PTR [rip+0x52462073],ah        # 0x528ab3ef
  44937c:	rex.WRXB
  44937d:	rex.WRB and BYTE PTR [r11+0x55],r8b
  449381:	push   rdx
  449382:	push   rdx
  449383:	rex.RB
  449384:	rex.WRX push rsp
  449386:	or     al,BYTE PTR [rcx+0x4c]
  449389:	push   rsp
  44938a:	rex.RB push r10
  44938c:	and    BYTE PTR [rcx+rax*2+0x54],al
  449390:	rex.B
  449391:	rex.X
  449392:	push   r11
  449394:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596b40e
  44939b:	push   rbx
  44939c:	rex.RB push r12
  44939e:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c859e17
  4493a4:	push   rsp
  4493a5:	rex.RB push r10
  4493a7:	and    BYTE PTR [rcx+rax*2+0x54],al
  4493ab:	rex.B
  4493ac:	rex.X
  4493ad:	push   r11
  4493af:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596b429
  4493b6:	push   rbx
  4493b7:	rex.RB push r12
  4493b9:	and    BYTE PTR [rcx+0x4c],al
  4493bc:	rex.WR add BYTE PTR [rbx+0x6f],r12b
  4493c0:	outs   dx,BYTE PTR ds:[rsi]
  4493c1:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4493c7:	je     0x449432
  4493c9:	outs   dx,DWORD PTR ds:[rsi]
  4493ca:	outs   dx,BYTE PTR ds:[rsi]
  4493cb:	pop    rdi
  4493cc:	jo     0x44942f
  4493ce:	jb     0x449431
  4493d0:	ins    DWORD PTR es:[rdi],dx
  4493d1:	gs je  0x449439
  4493d4:	jb     0x4493d6
  4493d6:	jbe    0x449439
  4493d8:	ins    BYTE PTR es:[rdi],dx
  4493d9:	jne    0x449440
  4493db:	add    BYTE PTR [rsi+0x65],ch
  4493de:	ja     0x44943f
  4493e0:	je     0x449443
  4493e2:	(bad)  
  4493e3:	ins    BYTE PTR es:[rdi],dx
  4493e4:	gs jae 0x449457
  4493e7:	(bad)  
  4493e8:	movsxd esp,DWORD PTR [rbp+0x0]
  4493eb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4493ee:	outs   dx,BYTE PTR ds:[rsi]
  4493ef:	ins    BYTE PTR es:[rdi],dx
  4493f0:	imul   ebp,DWORD PTR [rbp+0x69],0x68770074
  4493f7:	gs jb  0x44945f
  4493fa:	and    BYTE PTR [rdi+0x70],ch
  4493fd:	je     0x449468
  4493ff:	outs   dx,DWORD PTR ds:[rsi]
  449400:	outs   dx,BYTE PTR ds:[rsi]
  449401:	and    BYTE PTR [rbx+0x61],ah
  449404:	outs   dx,BYTE PTR ds:[rsi]
  449405:	and    BYTE PTR [rdx+0x65],ah
  449408:	cmp    al,BYTE PTR [rax]
  44940a:	jae    0x44946f
  44940c:	push   0x5f616d65
  449411:	outs   dx,BYTE PTR ds:[rsi]
  449412:	(bad)  
  449413:	ins    DWORD PTR es:[rdi],dx
  449414:	add    BYTE PTR gs:[rcx+riz*2+0x72],dh
  449419:	addr32 gs je 0x44947c
  44941d:	jb     0x44948e
  44941f:	ins    BYTE PTR es:[rdi],dx
  449420:	add    BYTE PTR gs:[rax],al
  449423:	add    BYTE PTR [rax],al
  449425:	add    BYTE PTR [rax],al
  449427:	add    BYTE PTR [rcx+0x4c],al
  44942a:	push   rsp
  44942b:	rex.RB push r10
  44942d:	and    BYTE PTR [rbp+rax*2+0x46],al
  449431:	push   r13
  449433:	rex.WR push rsp
  449435:	and    BYTE PTR [rax+0x52],dl
  449438:	rex.WB push r14
  44943a:	rex.WB
  44943b:	rex.WR
  44943c:	rex.RB
  44943d:	rex.RXB
  44943e:	rex.RB push r11
  449440:	or     ah,BYTE PTR [rax]
  449442:	and    BYTE PTR [rax],ah
  449444:	and    BYTE PTR [rbx+0x20],bl
  449447:	rex.RX
  449448:	rex.WRXB push r10
  44944a:	and    BYTE PTR [rbx+0x20],bh
  44944d:	push   rdx
  44944e:	rex.WRXB
  44944f:	rex.WR
  449450:	and    BYTE PTR [r8+riz*1+0x55],r15b
  449455:	push   rbx
  449456:	rex.RB push r10
  449458:	and    BYTE PTR [rbp+0x20],bh
  44945b:	and    eax,0x2c5b2073
  449460:	and    BYTE PTR [rsi],ch
  449462:	cs cs pop rbp
  449465:	and    BYTE PTR [rbp+0xa],bl
  449468:	and    BYTE PTR [rax],ah
  44946a:	and    BYTE PTR [rax],ah
  44946c:	pop    rbx
  44946d:	and    BYTE PTR [rcx+0x4e],cl
  449470:	and    BYTE PTR [rbx+0x43],dl
  449473:	rex.W
  449474:	rex.RB
  449475:	rex.WRB
  449476:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2c9fb4f0
  44947d:	and    BYTE PTR [rsi],ch
  44947f:	cs cs pop rbp
  449482:	and    BYTE PTR [rbp+0xa],bl
  449485:	and    BYTE PTR [rax],ah
  449487:	and    BYTE PTR [rax],ah
  449489:	and    eax,0x250a0a73
  44948e:	jae    0x44949a
  449490:	or     al,BYTE PTR [rdi+0x52]
  449493:	rex.B
  449494:	rex.WRX push rsp
  449496:	and    BYTE PTR [rbx+0x20],bh
  449499:	jnp    0x4494bb
  44949b:	push   rbx
  44949c:	rex.RB
  44949d:	rex.WR
  44949e:	rex.RB
  44949f:	rex.XB push r12
  4494a1:	and    BYTE PTR [rax+riz*1+0x49],bh
  4494a5:	rex.WRX push rbx
  4494a7:	rex.RB push r10
  4494a9:	push   rsp
  4494aa:	and    BYTE PTR [rax+riz*1+0x55],bh
  4494ae:	push   rax
  4494af:	rex.R
  4494b0:	push   r12
  4494b2:	and    BYTE PTR [r8+riz*1+0x44],r15b
  4494b7:	rex.RB
  4494b8:	rex.WR
  4494b9:	rex.RB push r12
  4494bb:	and    BYTE PTR [r8+riz*1+0x54],r15b
  4494c0:	push   rdx
  4494c1:	push   rbp
  4494c2:	rex.WRX
  4494c3:	rex.XB
  4494c4:	push   r12
  4494c6:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4494cb:	rex.RB
  4494cc:	rex.RX
  4494cd:	rex.RB push r10
  4494cf:	rex.RB
  4494d0:	rex.WRX
  4494d1:	rex.XB
  4494d2:	rex.RB push r11
  4494d4:	and    BYTE PTR [rax+riz*1+0x54],bh
  4494d8:	push   rdx
  4494d9:	rex.WB
  4494da:	rex.RXB
  4494db:	rex.RXB
  4494dc:	rex.RB push r10
  4494de:	and    BYTE PTR [rbp+0xa],bh
  4494e1:	and    BYTE PTR [rax],ah
  4494e3:	and    BYTE PTR [rax],ah
  4494e5:	pop    rbx
  4494e6:	sub    al,0x20
  4494e8:	cs cs cs pop rbp
  4494ec:	and    BYTE PTR [rax+riz*1+0x41],bh
  4494f0:	rex.WR
  4494f1:	rex.WR and BYTE PTR [rbx+0x20],r11b
  4494f5:	push   rax
  4494f6:	push   rdx
  4494f7:	rex.WB push r14
  4494f9:	rex.WB
  4494fa:	rex.WR
  4494fb:	rex.RB
  4494fc:	rex.RXB
  4494fd:	rex.RB push r11
  4494ff:	and    BYTE PTR [rbp+0x20],bl
  449502:	jge    0x44950e
  449504:	and    BYTE PTR [rax],ah
  449506:	and    BYTE PTR [rax],ah
  449508:	rex.WRXB
  449509:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44950e:	rex.WR
  44950f:	rex.RB push r11
  449511:	or     ah,BYTE PTR [rax]
  449513:	and    BYTE PTR [rax],ah
  449515:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  449519:	jnp    0x44953b
  44951b:	pop    rbx
  44951c:	and    BYTE PTR [rdi+0x52],al
  44951f:	rex.WRXB push r13
  449521:	push   rax
  449522:	and    BYTE PTR [rbp+0x20],bl
  449525:	and    eax,0x207c2073
  44952a:	push   rax
  44952b:	push   rbp
  44952c:	rex.X
  44952d:	rex.WR
  44952e:	rex.WB
  44952f:	rex.XB and BYTE PTR [r13+0x20],dil
  449533:	pop    rbx
  449534:	sub    al,0x20
  449536:	cs cs cs pop rbp
  44953a:	and    BYTE PTR [rbx+0x20],bl
  44953d:	push   rdi
  44953e:	rex.WB push r12
  449540:	rex.W and BYTE PTR [rdi+0x52],al
  449544:	rex.B
  449545:	rex.WRX push rsp
  449547:	and    BYTE PTR [rdi+0x50],cl
  44954a:	push   rsp
  44954b:	rex.WB
  44954c:	rex.WRXB
  44954d:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  449551:	or     al,BYTE PTR [rdi+0x52]
  449554:	rex.B
  449555:	rex.WRX push rsp
  449557:	and    BYTE PTR [rbx+0x20],bh
  44955a:	jnp    0x44957c
  44955c:	push   rbp
  44955d:	push   rbx
  44955e:	rex.B
  44955f:	rex.RXB
  449560:	and    BYTE PTR [r8+riz*1+0x53],r15b
  449565:	rex.RB
  449566:	rex.WR
  449567:	rex.RB
  449568:	rex.XB push r12
  44956a:	and    BYTE PTR [rax+riz*1+0x55],bh
  44956e:	push   rax
  44956f:	rex.R
  449570:	push   r12
  449572:	and    BYTE PTR [r13+0xa],r15b
  449576:	and    BYTE PTR [rax],ah
  449578:	and    BYTE PTR [rax],ah
  44957a:	pop    rbx
  44957b:	sub    al,0x20
  44957d:	cs cs cs pop rbp
  449581:	and    BYTE PTR [rax+riz*1+0x41],bh
  449585:	rex.WR
  449586:	rex.WR and BYTE PTR [rbx+0x20],r11b
  44958a:	push   rax
  44958b:	push   rdx
  44958c:	rex.WB push r14
  44958e:	rex.WB
  44958f:	rex.WR
  449590:	rex.RB
  449591:	rex.RXB
  449592:	rex.RB push r11
  449594:	and    BYTE PTR [rbp+0x20],bl
  449597:	jge    0x4495a3
  449599:	and    BYTE PTR [rax],ah
  44959b:	and    BYTE PTR [rax],ah
  44959d:	rex.WRXB
  44959e:	rex.WRX and BYTE PTR [rbx+0x45],r10b
  4495a2:	push   rcx
  4495a3:	push   rbp
  4495a4:	rex.RB
  4495a5:	rex.WRX
  4495a6:	rex.XB
  4495a7:	rex.RB push r11
  4495a9:	or     ah,BYTE PTR [rax]
  4495ab:	and    BYTE PTR [rax],ah
  4495ad:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4495b1:	jnp    0x4495d3
  4495b3:	pop    rbx
  4495b4:	and    BYTE PTR [rdi+0x52],al
  4495b7:	rex.WRXB push r13
  4495b9:	push   rax
  4495ba:	and    BYTE PTR [rbp+0x20],bl
  4495bd:	and    eax,0x207c2073
  4495c2:	push   rax
  4495c3:	push   rbp
  4495c4:	rex.X
  4495c5:	rex.WR
  4495c6:	rex.WB
  4495c7:	rex.XB and BYTE PTR [r13+0x20],dil
  4495cb:	pop    rbx
  4495cc:	sub    al,0x20
  4495ce:	cs cs cs pop rbp
  4495d2:	and    BYTE PTR [rbx+0x20],bl
  4495d5:	push   rdi
  4495d6:	rex.WB push r12
  4495d8:	rex.W and BYTE PTR [rdi+0x52],al
  4495dc:	rex.B
  4495dd:	rex.WRX push rsp
  4495df:	and    BYTE PTR [rdi+0x50],cl
  4495e2:	push   rsp
  4495e3:	rex.WB
  4495e4:	rex.WRXB
  4495e5:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  4495e9:	or     al,BYTE PTR [rdi+0x52]
  4495ec:	rex.B
  4495ed:	rex.WRX push rsp
  4495ef:	and    BYTE PTR [rbx+0x20],bh
  4495f2:	rex.RB pop r8
  4495f4:	rex.RB
  4495f5:	rex.XB push r13
  4495f7:	push   rsp
  4495f8:	and    BYTE PTR [r8+riz*1+0x41],r15b
  4495fd:	rex.WR
  4495fe:	rex.WR and BYTE PTR [rbx+0x20],r11b
  449602:	push   rax
  449603:	push   rdx
  449604:	rex.WB push r14
  449606:	rex.WB
  449607:	rex.WR
  449608:	rex.RB
  449609:	rex.RXB
  44960a:	rex.RB push r11
  44960c:	and    BYTE PTR [rbp+0x20],bl
  44960f:	jge    0x44961b
  449611:	and    BYTE PTR [rax],ah
  449613:	and    BYTE PTR [rax],ah
  449615:	rex.WRXB
  449616:	rex.WRX and BYTE PTR [rsi+0x55],r8b
  44961a:	rex.WRX
  44961b:	rex.XB push r12
  44961d:	rex.WB
  44961e:	rex.WRXB
  44961f:	rex.WRX push rbx
  449621:	or     ah,BYTE PTR [rax]
  449623:	and    BYTE PTR [rax],ah
  449625:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  449629:	jnp    0x44964b
  44962b:	pop    rbx
  44962c:	and    BYTE PTR [rdi+0x52],al
  44962f:	rex.WRXB push r13
  449631:	push   rax
  449632:	and    BYTE PTR [rbp+0x20],bl
  449635:	and    eax,0x207c2073
  44963a:	push   rax
  44963b:	push   rbp
  44963c:	rex.X
  44963d:	rex.WR
  44963e:	rex.WB
  44963f:	rex.XB and BYTE PTR [r13+0x20],dil
  449643:	pop    rbx
  449644:	sub    al,0x20
  449646:	cs cs cs pop rbp
  44964a:	and    BYTE PTR [rbx+0x20],bl
  44964d:	push   rdi
  44964e:	rex.WB push r12
  449650:	rex.W and BYTE PTR [rdi+0x52],al
  449654:	rex.B
  449655:	rex.WRX push rsp
  449657:	and    BYTE PTR [rdi+0x50],cl
  44965a:	push   rsp
  44965b:	rex.WB
  44965c:	rex.WRXB
  44965d:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  449661:	or     al,BYTE PTR [rdi+0x52]
  449664:	rex.B
  449665:	rex.WRX push rsp
  449667:	and    BYTE PTR [rbx+0x20],bh
  44966a:	push   rbp
  44966b:	push   rbx
  44966c:	rex.B
  44966d:	rex.RXB
  44966e:	and    BYTE PTR [r8+riz*1+0x41],r15b
  449673:	rex.WR
  449674:	rex.WR and BYTE PTR [rbx+0x20],r11b
  449678:	push   rax
  449679:	push   rdx
  44967a:	rex.WB push r14
  44967c:	rex.WB
  44967d:	rex.WR
  44967e:	rex.RB
  44967f:	rex.RXB
  449680:	rex.RB push r11
  449682:	and    BYTE PTR [rbp+0x20],bl
  449685:	jge    0x449691
  449687:	and    BYTE PTR [rax],ah
  449689:	and    BYTE PTR [rax],ah
  44968b:	rex.WRXB
  44968c:	rex.WRX and BYTE PTR [rcx+r11*2+0x50],r10b
  449691:	rex.RB push r11
  449693:	or     ah,BYTE PTR [rax]
  449695:	and    BYTE PTR [rax],ah
  449697:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44969b:	jnp    0x4496bd
  44969d:	pop    rbx
  44969e:	and    BYTE PTR [rdi+0x52],al
  4496a1:	rex.WRXB push r13
  4496a3:	push   rax
  4496a4:	and    BYTE PTR [rbp+0x20],bl
  4496a7:	and    eax,0x207c2073
  4496ac:	push   rax
  4496ad:	push   rbp
  4496ae:	rex.X
  4496af:	rex.WR
  4496b0:	rex.WB
  4496b1:	rex.XB and BYTE PTR [r13+0x20],dil
  4496b5:	pop    rbx
  4496b6:	sub    al,0x20
  4496b8:	cs cs cs pop rbp
  4496bc:	and    BYTE PTR [rbx+0x20],bl
  4496bf:	push   rdi
  4496c0:	rex.WB push r12
  4496c2:	rex.W and BYTE PTR [rdi+0x52],al
  4496c6:	rex.B
  4496c7:	rex.WRX push rsp
  4496c9:	and    BYTE PTR [rdi+0x50],cl
  4496cc:	push   rsp
  4496cd:	rex.WB
  4496ce:	rex.WRXB
  4496cf:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  4496d3:	or     dl,BYTE PTR [rdx+0x45]
  4496d6:	push   rsi
  4496d7:	rex.WRXB
  4496d8:	rex.WXB
  4496d9:	and    BYTE PTR [r11+0x20],r11b
  4496dd:	rex.RXB push r10
  4496df:	rex.B
  4496e0:	rex.WRX push rsp
  4496e2:	and    BYTE PTR [rdi+0x50],cl
  4496e5:	push   rsp
  4496e6:	rex.WB
  4496e7:	rex.WRXB
  4496e8:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  4496ec:	push   rdx
  4496ed:	and    BYTE PTR [rbp+0xa],bl
  4496f0:	and    BYTE PTR [rax],ah
  4496f2:	and    BYTE PTR [rax],ah
  4496f4:	jnp    0x449716
  4496f6:	jnp    0x449718
  4496f8:	push   rbx
  4496f9:	rex.RB
  4496fa:	rex.WR
  4496fb:	rex.RB
  4496fc:	rex.XB push r12
  4496fe:	and    BYTE PTR [rax+riz*1+0x49],bh
  449702:	rex.WRX push rbx
  449704:	rex.RB push r10
  449706:	push   rsp
  449707:	and    BYTE PTR [rax+riz*1+0x55],bh
  44970b:	push   rax
  44970c:	rex.R
  44970d:	push   r12
  44970f:	and    BYTE PTR [r8+riz*1+0x44],r15b
  449714:	rex.RB
  449715:	rex.WR
  449716:	rex.RB push r12
  449718:	and    BYTE PTR [r8+riz*1+0x54],r15b
  44971d:	push   rdx
  44971e:	push   rbp
  44971f:	rex.WRX
  449720:	rex.XB
  449721:	push   r12
  449723:	and    BYTE PTR [r8+riz*1+0x52],r15b
  449728:	rex.RB
  449729:	rex.RX
  44972a:	rex.RB push r10
  44972c:	rex.RB
  44972d:	rex.WRX
  44972e:	rex.XB
  44972f:	rex.RB push r11
  449731:	and    BYTE PTR [rax+riz*1+0x54],bh
  449735:	push   rdx
  449736:	rex.WB
  449737:	rex.RXB
  449738:	rex.RXB
  449739:	rex.RB push r10
  44973b:	and    BYTE PTR [rbp+0xa],bh
  44973e:	and    BYTE PTR [rax],ah
  449740:	and    BYTE PTR [rax],ah
  449742:	pop    rbx
  449743:	sub    al,0x20
  449745:	cs cs cs pop rbp
  449749:	and    BYTE PTR [rax+riz*1+0x41],bh
  44974d:	rex.WR
  44974e:	rex.WR and BYTE PTR [rbx+0x20],r11b
  449752:	push   rax
  449753:	push   rdx
  449754:	rex.WB push r14
  449756:	rex.WB
  449757:	rex.WR
  449758:	rex.RB
  449759:	rex.RXB
  44975a:	rex.RB push r11
  44975c:	and    BYTE PTR [rbp+0x20],bl
  44975f:	jge    0x44976b
  449761:	and    BYTE PTR [rax],ah
  449763:	and    BYTE PTR [rax],ah
  449765:	rex.WRXB
  449766:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44976b:	rex.WR
  44976c:	rex.RB push r11
  44976e:	or     ah,BYTE PTR [rax]
  449770:	and    BYTE PTR [rax],ah
  449772:	and    BYTE PTR [rsi+0x52],al
  449775:	rex.WRXB
  449776:	rex.WRB and BYTE PTR [r11+0x20],r15b
  44977a:	pop    rbx
  44977b:	and    BYTE PTR [rdi+0x52],al
  44977e:	rex.WRXB push r13
  449780:	push   rax
  449781:	and    BYTE PTR [rbp+0x20],bl
  449784:	and    eax,0x207c2073
  449789:	push   rax
  44978a:	push   rbp
  44978b:	rex.X
  44978c:	rex.WR
  44978d:	rex.WB
  44978e:	rex.XB and BYTE PTR [r13+0x20],dil
  449792:	pop    rbx
  449793:	sub    al,0x20
  449795:	cs cs cs pop rbp
  449799:	or     ah,BYTE PTR [rax]
  44979b:	and    BYTE PTR [rax],ah
  44979d:	and    BYTE PTR [rbx+0x20],bl
  4497a0:	rex.XB
  4497a1:	push   r11
  4497a3:	rex.XB
  4497a4:	rex.B
  4497a5:	rex.R
  4497a6:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4497ab:	rex.RB push r11
  4497ad:	push   rsp
  4497ae:	push   rdx
  4497af:	rex.WB
  4497b0:	rex.XB push r12
  4497b2:	and    BYTE PTR [rbp+0xa],bl
  4497b5:	or     dl,BYTE PTR [rdx+0x45]
  4497b8:	push   rsi
  4497b9:	rex.WRXB
  4497ba:	rex.WXB
  4497bb:	and    BYTE PTR [r11+0x20],r11b
  4497bf:	rex.RXB push r10
  4497c1:	rex.B
  4497c2:	rex.WRX push rsp
  4497c4:	and    BYTE PTR [rdi+0x50],cl
  4497c7:	push   rsp
  4497c8:	rex.WB
  4497c9:	rex.WRXB
  4497ca:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  4497ce:	push   rdx
  4497cf:	and    BYTE PTR [rbp+0xa],bl
  4497d2:	and    BYTE PTR [rax],ah
  4497d4:	and    BYTE PTR [rax],ah
  4497d6:	jnp    0x4497f8
  4497d8:	jnp    0x4497fa
  4497da:	push   rbp
  4497db:	push   rbx
  4497dc:	rex.B
  4497dd:	rex.RXB
  4497de:	and    BYTE PTR [r8+riz*1+0x53],r15b
  4497e3:	rex.RB
  4497e4:	rex.WR
  4497e5:	rex.RB
  4497e6:	rex.XB push r12
  4497e8:	and    BYTE PTR [rax+riz*1+0x55],bh
  4497ec:	push   rax
  4497ed:	rex.R
  4497ee:	push   r12
  4497f0:	and    BYTE PTR [r13+0xa],r15b
  4497f4:	and    BYTE PTR [rax],ah
  4497f6:	and    BYTE PTR [rax],ah
  4497f8:	pop    rbx
  4497f9:	sub    al,0x20
  4497fb:	cs cs cs pop rbp
  4497ff:	and    BYTE PTR [rax+riz*1+0x41],bh
  449803:	rex.WR
  449804:	rex.WR and BYTE PTR [rbx+0x20],r11b
  449808:	push   rax
  449809:	push   rdx
  44980a:	rex.WB push r14
  44980c:	rex.WB
  44980d:	rex.WR
  44980e:	rex.RB
  44980f:	rex.RXB
  449810:	rex.RB push r11
  449812:	and    BYTE PTR [rbp+0x20],bl
  449815:	jge    0x449821
  449817:	and    BYTE PTR [rax],ah
  449819:	and    BYTE PTR [rax],ah
  44981b:	rex.WRXB
  44981c:	rex.WRX and BYTE PTR [rbx+0x45],r10b
  449820:	push   rcx
  449821:	push   rbp
  449822:	rex.RB
  449823:	rex.WRX
  449824:	rex.XB
  449825:	rex.RB push r11
  449827:	or     ah,BYTE PTR [rax]
  449829:	and    BYTE PTR [rax],ah
  44982b:	and    BYTE PTR [rsi+0x52],al
  44982e:	rex.WRXB
  44982f:	rex.WRB and BYTE PTR [r11+0x20],r15b
  449833:	pop    rbx
  449834:	and    BYTE PTR [rdi+0x52],al
  449837:	rex.WRXB push r13
  449839:	push   rax
  44983a:	and    BYTE PTR [rbp+0x20],bl
  44983d:	and    eax,0x207c2073
  449842:	push   rax
  449843:	push   rbp
  449844:	rex.X
  449845:	rex.WR
  449846:	rex.WB
  449847:	rex.XB and BYTE PTR [r13+0x20],dil
  44984b:	pop    rbx
  44984c:	sub    al,0x20
  44984e:	cs cs cs pop rbp
  449852:	or     ah,BYTE PTR [rax]
  449854:	and    BYTE PTR [rax],ah
  449856:	and    BYTE PTR [rbx+0x20],bl
  449859:	rex.XB
  44985a:	push   r11
  44985c:	rex.XB
  44985d:	rex.B
  44985e:	rex.R
  44985f:	and    BYTE PTR [r8+riz*1+0x52],r15b
  449864:	rex.RB push r11
  449866:	push   rsp
  449867:	push   rdx
  449868:	rex.WB
  449869:	rex.XB push r12
  44986b:	and    BYTE PTR [rbp+0xa],bl
  44986e:	or     dl,BYTE PTR [rdx+0x45]
  449871:	push   rsi
  449872:	rex.WRXB
  449873:	rex.WXB
  449874:	and    BYTE PTR [r11+0x20],r11b
  449878:	rex.RXB push r10
  44987a:	rex.B
  44987b:	rex.WRX push rsp
  44987d:	and    BYTE PTR [rdi+0x50],cl
  449880:	push   rsp
  449881:	rex.WB
  449882:	rex.WRXB
  449883:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  449887:	push   rdx
  449888:	and    BYTE PTR [rbp+0xa],bl
  44988b:	and    BYTE PTR [rax],ah
  44988d:	and    BYTE PTR [rax],ah
  44988f:	jnp    0x4498b1
  449891:	rex.RB pop r8
  449893:	rex.RB
  449894:	rex.XB push r13
  449896:	push   rsp
  449897:	and    BYTE PTR [r8+riz*1+0x41],r15b
  44989c:	rex.WR
  44989d:	rex.WR and BYTE PTR [rbx+0x20],r11b
  4498a1:	push   rax
  4498a2:	push   rdx
  4498a3:	rex.WB push r14
  4498a5:	rex.WB
  4498a6:	rex.WR
  4498a7:	rex.RB
  4498a8:	rex.RXB
  4498a9:	rex.RB push r11
  4498ab:	and    BYTE PTR [rbp+0x20],bl
  4498ae:	jge    0x4498ba
  4498b0:	and    BYTE PTR [rax],ah
  4498b2:	and    BYTE PTR [rax],ah
  4498b4:	rex.WRXB
  4498b5:	rex.WRX and BYTE PTR [rsi+0x55],r8b
  4498b9:	rex.WRX
  4498ba:	rex.XB push r12
  4498bc:	rex.WB
  4498bd:	rex.WRXB
  4498be:	rex.WRX push rbx
  4498c0:	or     ah,BYTE PTR [rax]
  4498c2:	and    BYTE PTR [rax],ah
  4498c4:	and    BYTE PTR [rsi+0x52],al
  4498c7:	rex.WRXB
  4498c8:	rex.WRB and BYTE PTR [r11+0x20],r15b
  4498cc:	pop    rbx
  4498cd:	and    BYTE PTR [rdi+0x52],al
  4498d0:	rex.WRXB push r13
  4498d2:	push   rax
  4498d3:	and    BYTE PTR [rbp+0x20],bl
  4498d6:	and    eax,0x207c2073
  4498db:	push   rax
  4498dc:	push   rbp
  4498dd:	rex.X
  4498de:	rex.WR
  4498df:	rex.WB
  4498e0:	rex.XB and BYTE PTR [r13+0x20],dil
  4498e4:	pop    rbx
  4498e5:	sub    al,0x20
  4498e7:	cs cs cs pop rbp
  4498eb:	or     ah,BYTE PTR [rax]
  4498ed:	and    BYTE PTR [rax],ah
  4498ef:	and    BYTE PTR [rbx+0x20],bl
  4498f2:	rex.XB
  4498f3:	push   r11
  4498f5:	rex.XB
  4498f6:	rex.B
  4498f7:	rex.R
  4498f8:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4498fd:	rex.RB push r11
  4498ff:	push   rsp
  449900:	push   rdx
  449901:	rex.WB
  449902:	rex.XB push r12
  449904:	and    BYTE PTR [rbp+0xa],bl
  449907:	or     dl,BYTE PTR [rdx+0x45]
  44990a:	push   rsi
  44990b:	rex.WRXB
  44990c:	rex.WXB
  44990d:	and    BYTE PTR [r11+0x20],r11b
  449911:	rex.RXB push r10
  449913:	rex.B
  449914:	rex.WRX push rsp
  449916:	and    BYTE PTR [rdi+0x50],cl
  449919:	push   rsp
  44991a:	rex.WB
  44991b:	rex.WRXB
  44991c:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  449920:	push   rdx
  449921:	and    BYTE PTR [rbp+0xa],bl
  449924:	and    BYTE PTR [rax],ah
  449926:	and    BYTE PTR [rax],ah
  449928:	jnp    0x44994a
  44992a:	push   rbp
  44992b:	push   rbx
  44992c:	rex.B
  44992d:	rex.RXB
  44992e:	and    BYTE PTR [r8+riz*1+0x41],r15b
  449933:	rex.WR
  449934:	rex.WR and BYTE PTR [rbx+0x20],r11b
  449938:	push   rax
  449939:	push   rdx
  44993a:	rex.WB push r14
  44993c:	rex.WB
  44993d:	rex.WR
  44993e:	rex.RB
  44993f:	rex.RXB
  449940:	rex.RB push r11
  449942:	and    BYTE PTR [rbp+0x20],bl
  449945:	jge    0x449951
  449947:	and    BYTE PTR [rax],ah
  449949:	and    BYTE PTR [rax],ah
  44994b:	rex.WRXB
  44994c:	rex.WRX and BYTE PTR [rcx+r11*2+0x50],r10b
  449951:	rex.RB push r11
  449953:	or     ah,BYTE PTR [rax]
  449955:	and    BYTE PTR [rax],ah
  449957:	and    BYTE PTR [rsi+0x52],al
  44995a:	rex.WRXB
  44995b:	rex.WRB and BYTE PTR [r11+0x20],r15b
  44995f:	pop    rbx
  449960:	and    BYTE PTR [rdi+0x52],al
  449963:	rex.WRXB push r13
  449965:	push   rax
  449966:	and    BYTE PTR [rbp+0x20],bl
  449969:	and    eax,0x207c2073
  44996e:	push   rax
  44996f:	push   rbp
  449970:	rex.X
  449971:	rex.WR
  449972:	rex.WB
  449973:	rex.XB and BYTE PTR [r13+0x20],dil
  449977:	pop    rbx
  449978:	sub    al,0x20
  44997a:	cs cs cs pop rbp
  44997e:	or     ah,BYTE PTR [rax]
  449980:	and    BYTE PTR [rax],ah
  449982:	and    BYTE PTR [rbx+0x20],bl
  449985:	rex.XB
  449986:	push   r11
  449988:	rex.XB
  449989:	rex.B
  44998a:	rex.R
  44998b:	and    BYTE PTR [r8+riz*1+0x52],r15b
  449990:	rex.RB push r11
  449992:	push   rsp
  449993:	push   rdx
  449994:	rex.WB
  449995:	rex.XB push r12
  449997:	and    BYTE PTR [rbp+0x0],bl
  44999a:	jb     0x449a0b
  44999c:	ins    BYTE PTR es:[rdi],dx
  44999d:	gs pop rdi
  44999f:	outs   dx,BYTE PTR ds:[rsi]
  4499a0:	(bad)  
  4499a1:	ins    DWORD PTR es:[rdi],dx
  4499a2:	add    BYTE PTR gs:[rax],al
  4499a5:	add    BYTE PTR [rax],al
  4499a7:	add    BYTE PTR [rdi+0x68],dh
  4499aa:	gs jb  0x449a12
  4499ad:	and    BYTE PTR [rcx+0x62],ah
  4499b0:	(bad)
  4499b5:	(bad)  
  4499b6:	je     0x449a1d
  4499b8:	fs pop rdi
  4499ba:	addr32 jb 0x449a1e
  4499bd:	outs   dx,BYTE PTR ds:[rsi]
  4499be:	je     0x449a1f
  4499c0:	outs   dx,DWORD PTR ds:[rsi]
  4499c1:	jb     0x449a22
  4499c3:	jb     0x449a2a
  4499c5:	jbe    0x449a36
  4499c7:	imul   esp,DWORD PTR [rbp+0x20],0x69
  4499cb:	jae    0x4499ed
  4499cd:	outs   dx,DWORD PTR ds:[rsi]
  4499ce:	outs   dx,BYTE PTR ds:[rsi]
  4499cf:	and    BYTE PTR gs:[rdi+0x66],ch
  4499d3:	cmp    al,BYTE PTR [rax]
  4499d5:	(bad)  
  4499d6:	(bad)  
  4499d8:	jb     0x449a3f
  4499da:	jbe    0x449a45
  4499dc:	(bad)  
  4499dd:	je     0x449a44
  4499df:	fs pop rdi
  4499e1:	addr32 jb 0x449a45
  4499e4:	outs   dx,BYTE PTR ds:[rsi]
  4499e5:	je     0x449a46
  4499e7:	outs   dx,DWORD PTR ds:[rsi]
  4499e8:	jb     0x449a49
  4499ea:	jb     0x449a51
  4499ec:	jbe    0x449a5d
  4499ee:	imul   esp,DWORD PTR [rbp+0x0],0x65
  4499f2:	js     0x449a64
  4499f4:	jb     0x449a5b
  4499f6:	jae    0x449a6b
  4499f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4499ff:	add    BYTE PTR [rcx+0x4c],al
  449a02:	push   rsp
  449a03:	rex.RB push r10
  449a05:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449a09:	rex.B
  449a0a:	rex.WB
  449a0b:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a485
  449a12:	and    BYTE PTR [rax],ah
  449a14:	jnp    0x449a36
  449a16:	push   rbx
  449a17:	rex.RB push r12
  449a19:	and    BYTE PTR [rbp+rax*2+0x46],al
  449a1d:	push   r13
  449a1f:	rex.WR push rsp
  449a21:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0ba9a
  449a27:	rex.R push rdx
  449a29:	rex.WRXB push r8
  449a2b:	and    BYTE PTR [rbp+rax*2+0x46],al
  449a2f:	push   r13
  449a31:	rex.WR push rsp
  449a33:	and    BYTE PTR [rbp+0xa],bh
  449a36:	rex.B
  449a37:	rex.WR push rsp
  449a39:	rex.RB push r10
  449a3b:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449a3f:	rex.B
  449a40:	rex.WB
  449a41:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a4bb
  449a48:	and    BYTE PTR [rax],ah
  449a4a:	jnp    0x449a6c
  449a4c:	push   rbx
  449a4d:	rex.RB push r12
  449a4f:	and    BYTE PTR [rax+riz*1+0x44],bh
  449a53:	push   rdx
  449a54:	rex.WRXB push r8
  449a56:	and    BYTE PTR [rbp+0x20],bh
  449a59:	rex.WRX
  449a5a:	rex.WRXB push r12
  449a5c:	and    BYTE PTR [rsi+0x55],cl
  449a5f:	rex.WR
  449a60:	rex.WR or r8b,BYTE PTR [rcx+0x4c]
  449a64:	push   rsp
  449a65:	rex.RB push r10
  449a67:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449a6b:	rex.B
  449a6c:	rex.WB
  449a6d:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a4e7
  449a74:	and    BYTE PTR [rax],ah
  449a76:	rex.B
  449a77:	rex.R
  449a78:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fbaf2
  449a7f:	rex.WRX
  449a80:	rex.WRXB push r12
  449a82:	and    BYTE PTR [rsi+0x41],dl
  449a85:	rex.WR
  449a86:	rex.WB
  449a87:	and    BYTE PTR [rbp+0xa],r11b
  449a8b:	rex.B
  449a8c:	rex.WR push rsp
  449a8e:	rex.RB push r10
  449a90:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449a94:	rex.B
  449a95:	rex.WB
  449a96:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a510
  449a9d:	and    BYTE PTR [rax],ah
  449a9f:	rex.R push rdx
  449aa1:	rex.WRXB push r8
  449aa3:	and    BYTE PTR [rbx+0x4f],al
  449aa6:	rex.WRX push rbx
  449aa8:	push   rsp
  449aa9:	push   rdx
  449aaa:	rex.B
  449aab:	rex.WB
  449aac:	rex.WRX push rsp
  449aae:	and    BYTE PTR [rbx+0x20],bl
  449ab1:	rex.WB
  449ab2:	rex.RX and BYTE PTR [rbp+0x58],r8b
  449ab6:	rex.WB push r11
  449ab8:	push   rsp
  449ab9:	push   rbx
  449aba:	and    BYTE PTR [rbp+0x20],bl
  449abd:	and    eax,0x205b2073
  449ac2:	push   rdx
  449ac3:	rex.RB push r11
  449ac5:	push   rsp
  449ac6:	push   rdx
  449ac7:	rex.WB
  449ac8:	rex.XB push r12
  449aca:	and    BYTE PTR [rax+riz*1+0x43],bh
  449ace:	push   r11
  449ad0:	rex.XB
  449ad1:	rex.B
  449ad2:	rex.R
  449ad3:	and    BYTE PTR [r13+0xa],r11b
  449ad7:	rex.B
  449ad8:	rex.WR push rsp
  449ada:	rex.RB push r10
  449adc:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449ae0:	rex.B
  449ae1:	rex.WB
  449ae2:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a55c
  449ae9:	and    BYTE PTR [rax],ah
  449aeb:	and    BYTE PTR [rdx+0x45],dl
  449aee:	rex.WRX
  449aef:	rex.B
  449af0:	rex.WRB
  449af1:	and    BYTE PTR [r11+0x4f],r8b
  449af5:	rex.WRX push rbx
  449af7:	push   rsp
  449af8:	push   rdx
  449af9:	rex.B
  449afa:	rex.WB
  449afb:	rex.WRX push rsp
  449afd:	and    BYTE PTR [rip+0x4f542073],ah        # 0x4f98bb76
  449b03:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85a57c
  449b09:	push   rsp
  449b0a:	rex.RB push r10
  449b0c:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449b10:	rex.B
  449b11:	rex.WB
  449b12:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a58c
  449b19:	and    BYTE PTR [rax],ah
  449b1b:	push   rsi
  449b1c:	rex.B
  449b1d:	rex.WR
  449b1e:	rex.WB
  449b1f:	rex.R
  449b20:	push   r12
  449b22:	and    BYTE PTR [r11+0x4f],r8b
  449b26:	rex.WRX push rbx
  449b28:	push   rsp
  449b29:	push   rdx
  449b2a:	rex.B
  449b2b:	rex.WB
  449b2c:	rex.WRX push rsp
  449b2e:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85a5a7
  449b34:	push   rsp
  449b35:	rex.RB push r10
  449b37:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449b3b:	rex.B
  449b3c:	rex.WB
  449b3d:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a5b7
  449b44:	and    BYTE PTR [rax],ah
  449b46:	rex.WRXB push r15
  449b48:	rex.WRX
  449b49:	rex.RB push r10
  449b4b:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  449b4f:	and    eax,0x4c410a73
  449b54:	push   rsp
  449b55:	rex.RB push r10
  449b57:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449b5b:	rex.B
  449b5c:	rex.WB
  449b5d:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a5d7
  449b64:	and    BYTE PTR [rax],ah
  449b66:	push   rdx
  449b67:	rex.RB
  449b68:	rex.WRX
  449b69:	rex.B
  449b6a:	rex.WRB
  449b6b:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  449b70:	and    eax,0x4c410a73
  449b75:	push   rsp
  449b76:	rex.RB push r10
  449b78:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  449b7c:	rex.B
  449b7d:	rex.WB
  449b7e:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064a5f8
  449b85:	and    BYTE PTR [rax],ah
  449b87:	push   rbx
  449b88:	rex.RB push r12
  449b8a:	and    BYTE PTR [rbx+0x43],dl
  449b8d:	rex.W
  449b8e:	rex.RB
  449b8f:	rex.WRB
  449b90:	and    BYTE PTR [rip+0x6f630073],spl        # 0x6fa79c0a
  449b97:	outs   dx,BYTE PTR ds:[rsi]
  449b98:	jae    0x449c0e
  449b9a:	jb     0x449bfd
  449b9c:	imul   ebp,DWORD PTR [rsi+0x74],0x6d616e5f
  449ba3:	add    BYTE PTR gs:[rsi+0x65],ch
  449ba7:	ja     0x449c08
  449ba9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  449bac:	jae    0x449c22
  449bae:	jb     0x449c11
  449bb0:	imul   ebp,DWORD PTR [rsi+0x74],0x6d616e5f
  449bb7:	add    BYTE PTR gs:[rdi+rbp*2+0x6d],ah
  449bbc:	(bad)  
  449bbd:	imul   ebp,DWORD PTR [rsi+0x5f],0x736e6f63
  449bc4:	je     0x449c38
  449bc6:	(bad)  
  449bc7:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  449bce:	add    BYTE PTR [rax],al
  449bd0:	rex.B
  449bd1:	rex.WR push rsp
  449bd3:	rex.RB push r10
  449bd5:	and    BYTE PTR [rbp+0x56],al
  449bd8:	rex.RB
  449bd9:	rex.WRX push rsp
  449bdb:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  449bdf:	rex.RXB
  449be0:	rex.RXB
  449be1:	rex.RB push r10
  449be3:	and    BYTE PTR [rip+0x49442073],ah        # 0x4988bc5c
  449be9:	push   rbx
  449bea:	rex.B
  449beb:	rex.X
  449bec:	rex.WR
  449bed:	or     r8b,BYTE PTR [r9+0x4c]
  449bf1:	push   rsp
  449bf2:	rex.RB push r10
  449bf4:	and    BYTE PTR [rbp+0x56],al
  449bf7:	rex.RB
  449bf8:	rex.WRX push rsp
  449bfa:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  449bfe:	rex.RXB
  449bff:	rex.RXB
  449c00:	rex.RB push r10
  449c02:	and    BYTE PTR [rip+0x4e452073],ah        # 0x4e89bc7b
  449c08:	rex.B
  449c09:	rex.X
  449c0a:	rex.WR
  449c0b:	and    BYTE PTR [r11+0x20],r11b
  449c0f:	push   rdx
  449c10:	rex.RB push r8
  449c12:	rex.WR
  449c13:	rex.WB
  449c14:	rex.XB
  449c15:	and    BYTE PTR [r8+riz*1+0x41],dil
  449c1a:	rex.WR push rdi
  449c1c:	pop    r9
  449c1e:	push   rbx
  449c1f:	and    BYTE PTR [rbp+0xa],bl
  449c22:	rex.B
  449c23:	rex.WR push rsp
  449c25:	rex.RB push r10
  449c27:	and    BYTE PTR [rbp+0x56],al
  449c2a:	rex.RB
  449c2b:	rex.WRX push rsp
  449c2d:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  449c31:	rex.RXB
  449c32:	rex.RXB
  449c33:	rex.RB push r10
  449c35:	and    BYTE PTR [rip+0x574f2073],ah        # 0x5793bcae
  449c3b:	rex.WRX
  449c3c:	rex.RB push r10
  449c3e:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  449c42:	and    eax,0x4c410a73
  449c47:	push   rsp
  449c48:	rex.RB push r10
  449c4a:	and    BYTE PTR [rbp+0x56],al
  449c4d:	rex.RB
  449c4e:	rex.WRX push rsp
  449c50:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  449c54:	rex.RXB
  449c55:	rex.RXB
  449c56:	rex.RB push r10
  449c58:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596bcd1
  449c5e:	rex.WRX
  449c5f:	rex.B
  449c60:	rex.WRB
  449c61:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  449c66:	and    eax,0x656e0073
  449c6b:	ja     0x449ccc
  449c6d:	jbe    0x449cd4
  449c6f:	jb     0x449ce4
  449c71:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  449c78:	rex.B
  449c79:	rex.WR push rsp
  449c7b:	rex.RB push r10
  449c7d:	and    BYTE PTR [rbp+0x58],al
  449c80:	push   rsp
  449c81:	rex.RB
  449c82:	rex.WRX push rbx
  449c84:	rex.WB
  449c85:	rex.WRXB
  449c86:	rex.WRX and BYTE PTR [rip+0x50552073],r12b        # 0x5099bd00
  449c8d:	rex.R
  449c8e:	push   r12
  449c90:	and    BYTE PTR [r11+0x20],r11b
  449c94:	push   rsp
  449c95:	rex.WRXB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1bd0f
  449c9c:	rex.B
  449c9d:	rex.WR push rsp
  449c9f:	rex.RB push r10
  449ca1:	and    BYTE PTR [rbp+0x58],al
  449ca4:	push   rsp
  449ca5:	rex.RB
  449ca6:	rex.WRX push rbx
  449ca8:	rex.WB
  449ca9:	rex.WRXB
  449caa:	rex.WRX and BYTE PTR [rip+0x45532073],r12b        # 0x4597bd24
  449cb1:	push   rsp
  449cb2:	and    BYTE PTR [rbx+0x43],dl
  449cb5:	rex.W
  449cb6:	rex.RB
  449cb7:	rex.WRB
  449cb8:	and    BYTE PTR [rip+0x4c410a73],spl        # 0x4c85a732
  449cbf:	push   rsp
  449cc0:	rex.RB push r10
  449cc2:	and    BYTE PTR [rbp+0x58],al
  449cc5:	push   rsp
  449cc6:	rex.RB
  449cc7:	rex.WRX push rbx
  449cc9:	rex.WB
  449cca:	rex.WRXB
  449ccb:	rex.WRX and BYTE PTR [rip+0x44412073],r12b        # 0x4485bd45
  449cd2:	and    BYTE PTR [rip+0x4c410a73],r12b        # 0x4c85a74c
  449cd9:	push   rsp
  449cda:	rex.RB push r10
  449cdc:	and    BYTE PTR [rbp+0x58],al
  449cdf:	push   rsp
  449ce0:	rex.RB
  449ce1:	rex.WRX push rbx
  449ce3:	rex.WB
  449ce4:	rex.WRXB
  449ce5:	rex.WRX and BYTE PTR [rip+0x52442073],r12b        # 0x5288bd5f
  449cec:	rex.WRXB push r8
  449cee:	and    BYTE PTR [rip+0x250a0a73],ah        # 0x254ea767
  449cf4:	jae    0x449d00
  449cf6:	or     ah,BYTE PTR [rax]
  449cf8:	and    BYTE PTR [rcx+0x47],al
  449cfb:	rex.RXB push r10
  449cfd:	rex.RB
  449cfe:	rex.RXB
  449cff:	push   r12
  449d01:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cbd7b
  449d08:	and    eax,0x20292073
  449d0d:	jl     0x449d19
  449d0f:	and    BYTE PTR [rax],ah
  449d11:	rex.XB
  449d12:	push   r11
  449d14:	push   rsp
  449d15:	and    BYTE PTR [rax],ch
  449d17:	and    eax,0x53412073
  449d1c:	and    BYTE PTR [rip+0x7c202973],ah        # 0x7c64c695
  449d22:	or     ah,BYTE PTR [rax]
  449d24:	and    BYTE PTR [rbx+0x4f],al
  449d27:	rex.WR
  449d28:	rex.WR
  449d29:	push   r12
  449d2b:	rex.WB
  449d2c:	rex.WRXB
  449d2d:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bda7
  449d34:	and    BYTE PTR [rax],ah
  449d36:	rex.XB
  449d37:	rex.WRXB
  449d38:	rex.WRX push rsi
  449d3a:	rex.RB push r10
  449d3c:	push   rbx
  449d3d:	rex.WB
  449d3e:	rex.WRXB
  449d3f:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bdb9
  449d46:	and    BYTE PTR [rax],ah
  449d48:	rex.R
  449d49:	rex.WRXB
  449d4a:	rex.WRB
  449d4b:	rex.B
  449d4c:	rex.WB
  449d4d:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bdc7
  449d54:	and    BYTE PTR [rax],ah
  449d56:	rex.RB push r14
  449d58:	rex.RB
  449d59:	rex.WRX push rsp
  449d5b:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  449d5f:	rex.RXB
  449d60:	rex.RXB
  449d61:	rex.RB push r10
  449d63:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0bddc
  449d69:	and    BYTE PTR [rax],ah
  449d6b:	rex.RX
  449d6c:	rex.WRXB push r10
  449d6e:	rex.RB
  449d6f:	rex.WB
  449d70:	rex.RXB
  449d71:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  449d76:	and    BYTE PTR [r15+0x52],dl
  449d7a:	push   r8
  449d7c:	push   rax
  449d7d:	rex.RB push r10
  449d7f:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0bdf8
  449d85:	and    BYTE PTR [rax],ah
  449d87:	rex.RX
  449d88:	rex.WRXB push r10
  449d8a:	rex.RB
  449d8b:	rex.WB
  449d8c:	rex.RXB
  449d8d:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  449d92:	rex.WR
  449d93:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0be0d
  449d9a:	and    BYTE PTR [rax],ah
  449d9c:	rex.RX push rbp
  449d9e:	rex.WRX
  449d9f:	rex.XB push r12
  449da1:	rex.WB
  449da2:	rex.WRXB
  449da3:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206cbe1d
  449daa:	pop    rbx
  449dab:	and    BYTE PTR [rbx+0x20],bl
  449dae:	and    eax,0x205d2073
  449db3:	pop    rbx
  449db4:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1be2d
  449dba:	and    eax,0x2c5b2073
  449dbf:	and    BYTE PTR [rsi],ch
  449dc1:	cs cs pop rbp
  449dc4:	and    BYTE PTR [rbp+0x20],bl
  449dc7:	sub    DWORD PTR [rax],esp
  449dc9:	jl     0x449dd5
  449dcb:	and    BYTE PTR [rax],ah
  449dcd:	rex.WRB
  449dce:	push   r12
  449dd0:	rex.RB push r10
  449dd2:	rex.WB
  449dd3:	rex.B
  449dd4:	rex.WR
  449dd5:	rex.WB pop r10
  449dd7:	rex.RB
  449dd8:	and    BYTE PTR [rsi+0x49],r10b
  449ddc:	rex.RB push r15
  449dde:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0be57
  449de4:	and    BYTE PTR [rax],ah
  449de6:	rex.WRXB push r8
  449de8:	rex.RB push r10
  449dea:	push   r12
  449dec:	rex.WRXB push r10
  449dee:	and    BYTE PTR [rip+0x25282073],ah        # 0x256cbe67
  449df4:	jae    0x449e22
  449df6:	and    BYTE PTR [rip+0x7c202973],ah        # 0x7c64c76f
  449dfc:	or     ah,BYTE PTR [rax]
  449dfe:	and    BYTE PTR [rdi+0x50],cl
  449e01:	rex.RB push r10
  449e03:	push   r12
  449e05:	rex.WRXB push r10
  449e07:	and    BYTE PTR [rbx+0x4c],al
  449e0a:	push   r11
  449e0c:	push   rbx
  449e0d:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399be86
  449e13:	rex.WB
  449e14:	rex.WRX
  449e15:	rex.RXB and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0be8f
  449e1c:	and    BYTE PTR [rax],ah
  449e1e:	rex.WRXB push r8
  449e20:	rex.RB push r10
  449e22:	push   r12
  449e24:	rex.WRXB push r10
  449e26:	and    BYTE PTR [rsi+0x41],al
  449e29:	rex.WRB
  449e2a:	rex.WB
  449e2b:	rex.WR pop rcx
  449e2d:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399bea6
  449e33:	rex.WB
  449e34:	rex.WRX
  449e35:	rex.RXB and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0beaf
  449e3c:	and    BYTE PTR [rax],ah
  449e3e:	pop    rbx
  449e3f:	and    BYTE PTR [rax+0x52],dl
  449e42:	rex.WRXB
  449e43:	rex.XB
  449e44:	rex.RB
  449e45:	rex.R push rbp
  449e47:	push   rdx
  449e48:	rex.B
  449e49:	rex.WR and BYTE PTR [rbp+0x20],r11b
  449e4d:	rex.WR
  449e4e:	rex.B
  449e4f:	rex.WRX
  449e50:	rex.RXB push r13
  449e52:	rex.B
  449e53:	rex.RXB
  449e54:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bece
  449e5b:	and    BYTE PTR [rax],ah
  449e5d:	push   rbx
  449e5e:	rex.XB
  449e5f:	rex.W
  449e60:	rex.RB
  449e61:	rex.WRB
  449e62:	and    BYTE PTR [rip+0xa7c2073],spl        # 0xac0bedc
  449e69:	and    BYTE PTR [rax],ah
  449e6b:	push   rbx
  449e6c:	rex.RB push r9
  449e6e:	push   rbp
  449e6f:	rex.RB
  449e70:	rex.WRX
  449e71:	rex.XB
  449e72:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0beec
  449e79:	and    BYTE PTR [rax],ah
  449e7b:	push   rbx
  449e7c:	rex.RB push r10
  449e7e:	push   rsi
  449e7f:	rex.RB push r10
  449e81:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0befa
  449e87:	and    BYTE PTR [rax],ah
  449e89:	push   rsp
  449e8a:	rex.B
  449e8b:	rex.X
  449e8c:	rex.WR
  449e8d:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bf07
  449e94:	and    BYTE PTR [rax],ah
  449e96:	push   rsp
  449e97:	rex.RB pop r8
  449e99:	push   rsp
  449e9a:	and    BYTE PTR [rbx+0x45],dl
  449e9d:	push   r10
  449e9f:	rex.XB
  449ea0:	rex.W and BYTE PTR [rbx+0x4f],al
  449ea4:	rex.WRX
  449ea5:	rex.RX
  449ea6:	rex.WB
  449ea7:	rex.RXB push r13
  449ea9:	push   rdx
  449eaa:	push   r12
  449eac:	rex.WB
  449ead:	rex.WRXB
  449eae:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bf28
  449eb5:	and    BYTE PTR [rax],ah
  449eb7:	push   rsp
  449eb8:	rex.RB pop r8
  449eba:	push   rsp
  449ebb:	and    BYTE PTR [rbx+0x45],dl
  449ebe:	push   r10
  449ec0:	rex.XB
  449ec1:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  449ec6:	push   rsp
  449ec7:	rex.WB
  449ec8:	rex.WRXB
  449ec9:	rex.WRX
  449eca:	push   r10
  449ecc:	pop    rcx
  449ecd:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0bf46
  449ed3:	and    BYTE PTR [rax],ah
  449ed5:	push   rsp
  449ed6:	rex.RB pop r8
  449ed8:	push   rsp
  449ed9:	and    BYTE PTR [rbx+0x45],dl
  449edc:	push   r10
  449ede:	rex.XB
  449edf:	rex.W and BYTE PTR [rax+0x41],dl
  449ee3:	push   rdx
  449ee4:	push   rbx
  449ee5:	rex.RB push r10
  449ee7:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0bf60
  449eed:	and    BYTE PTR [rax],ah
  449eef:	push   rsp
  449ef0:	rex.RB pop r8
  449ef2:	push   rsp
  449ef3:	and    BYTE PTR [rbx+0x45],dl
  449ef6:	push   r10
  449ef8:	rex.XB
  449ef9:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  449efe:	push   rax
  449eff:	rex.WR
  449f00:	push   r12
  449f02:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bf7c
  449f09:	and    BYTE PTR [rax],ah
  449f0b:	push   rsp
  449f0c:	pop    rcx
  449f0d:	push   rax
  449f0e:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0bf88
  449f15:	and    BYTE PTR [rax],ah
  449f17:	push   rsi
  449f18:	rex.WB
  449f19:	rex.RB push r15
  449f1b:	and    BYTE PTR [rip+0x250a0a73],ah        # 0x254ea994
  449f21:	jae    0x449f2d
  449f23:	or     ch,BYTE PTR [rdx]
  449f25:	and    BYTE PTR [rdx+rcx*1+0x5b],bh
  449f29:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1bfa2
  449f2f:	pop    rbx
  449f30:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1bfa9
  449f36:	and    eax,0x205b2073
  449f3b:	sub    al,0x20
  449f3d:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  449f43:	jl     0x449f4f
  449f45:	pop    rbx
  449f46:	and    BYTE PTR [rbx+0x20],bl
  449f49:	and    eax,0x205d2073
  449f4e:	pop    rbx
  449f4f:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1bfc8
  449f55:	and    eax,0x205b2073
  449f5a:	sub    al,0x20
  449f5c:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  449f62:	pop    rbp
  449f63:	and    BYTE PTR [rdi+0x52],cl
  449f66:	rex.R
  449f67:	rex.RB push r10
  449f69:	and    BYTE PTR [rdx+0x59],al
  449f6c:	and    BYTE PTR [rbx+0x20],bl
  449f6f:	and    eax,0x205d2073
  449f74:	pop    rbx
  449f75:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1bfee
  449f7b:	and    eax,0x205b2073
  449f80:	sub    al,0x20
  449f82:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  449f88:	(bad)  
  449f89:	outs   dx,BYTE PTR ds:[rsi]
  449f8a:	and    BYTE PTR fs:[rcx+0x67],ah
  449f8e:	addr32 jb 0x449ff6
  449f91:	addr32 (bad) 
  449f93:	je     0x449ffa
  449f95:	pop    rdi
  449f96:	jae    0x44a001
  449f98:	outs   dx,BYTE PTR ds:[esi]
  449f9a:	(bad)  
  449f9b:	je     0x44a012
  449f9d:	jb     0x44a004
  449f9f:	and    BYTE PTR [rcx+0x73],ch
  449fa2:	cmp    al,BYTE PTR [rax]
  449fa4:	outs   dx,DWORD PTR ds:[rsi]
  449fa5:	(bad)  
  449fa6:	push   0x65
  449fa8:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
  449fac:	(bad)  
  449fad:	ins    DWORD PTR es:[rdi],dx
  449fae:	add    BYTE PTR gs:[rcx+0x6e],ch
  449fb2:	fs gs js 0x44a015
  449fb6:	ins    DWORD PTR es:[rdi],dx
  449fb7:	gs je  0x44a022
  449fba:	outs   dx,DWORD PTR ds:[rsi]
  449fbb:	add    BYTE PTR fs:[rdx+0x69],dh
  449fbf:	addr32 push 0x79745f74
  449fc5:	jo     0x44a02c
  449fc7:	add    BYTE PTR [rbp+riz*2+0x66],ch
  449fcb:	je     0x44a02c
  449fcd:	je     0x44a048
  449fcf:	jo     0x44a036
  449fd1:	add    BYTE PTR [rdi+0x70],ch
  449fd4:	gs jb  0x44a038
  449fd7:	je     0x44a048
  449fd9:	jb     0x44a03a
  449fdb:	outs   dx,BYTE PTR ds:[rsi]
  449fdc:	(bad)  
  449fdd:	ins    DWORD PTR es:[rdi],dx
  449fde:	add    BYTE PTR gs:[rsi+0x75],ah
  449fe2:	outs   dx,BYTE PTR ds:[rsi]
  449fe3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  449fe7:	outs   dx,BYTE PTR ds:[rsi]
  449fe8:	pop    rdi
  449fe9:	outs   dx,BYTE PTR ds:[rsi]
  449fea:	(bad)  
  449feb:	ins    DWORD PTR es:[rdi],dx
  449fec:	add    BYTE PTR gs:[rcx+riz*2+0x72],dh
  449ff1:	addr32 gs je 0x44a054
  449ff5:	je     0x44a070
  449ff7:	jo     0x44a05e
  449ff9:	add    BYTE PTR [rbx+0x6f],dh
  449ffc:	jne    0x44a070
  449ffe:	movsxd esp,DWORD PTR [rbp+0x5f]
  44a001:	je     0x44a07c
  44a003:	jo     0x44a06a
  44a005:	add    BYTE PTR [rcx+0x67],ah
  44a008:	addr32 jb 0x44a070
  44a00b:	addr32 (bad) 
  44a00d:	je     0x44a074
  44a00f:	pop    rdi
  44a010:	outs   dx,BYTE PTR ds:[rsi]
  44a011:	(bad)  
  44a012:	ins    DWORD PTR es:[rdi],dx
  44a013:	add    BYTE PTR gs:[rdi+0x68],dh
  44a017:	gs jb  0x44a07f
  44a01a:	and    BYTE PTR [rbp+0x65],ch
  44a01d:	ins    DWORD PTR es:[rdi],dx
  44a01e:	(bad)  
  44a01f:	gs jb  0x44a081
  44a022:	outs   dx,DWORD PTR ds:[rsi]
  44a023:	(bad)  
  44a024:	push   0x65
  44a026:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  44a02a:	jae    0x44a066
  44a02c:	add    BYTE PTR [rbp+0x65],ch
  44a02f:	ins    DWORD PTR es:[rdi],dx
  44a030:	(bad)  
  44a031:	gs jb  0x44a093
  44a034:	outs   dx,DWORD PTR ds:[rsi]
  44a035:	(bad)  
  44a036:	push   0x65
  44a038:	movsxd esi,DWORD PTR [rax+rax*1+0x68]
  44a03c:	(bad)  
  44a03d:	outs   dx,BYTE PTR ds:[rsi]
  44a03e:	fs ins BYTE PTR es:[rdi],dx
  44a040:	gs jb  0x44a0a2
  44a043:	data16 jne 0x44a0b4
  44a046:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44a04a:	outs   dx,BYTE PTR ds:[rsi]
  44a04b:	add    BYTE PTR [rax],al
  44a04d:	add    BYTE PTR [rax],al
  44a04f:	add    BYTE PTR [rcx+0x4c],al
  44a052:	push   rsp
  44a053:	rex.RB push r10
  44a055:	and    BYTE PTR [rsi+0x4f],al
  44a058:	push   rdx
  44a059:	rex.RB
  44a05a:	rex.WB
  44a05b:	rex.RXB
  44a05c:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44a061:	and    BYTE PTR [r15+0x52],dl
  44a065:	push   r8
  44a067:	push   rax
  44a068:	rex.RB push r10
  44a06a:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064aae3
  44a070:	and    BYTE PTR [rax],ah
  44a072:	pop    rbx
  44a073:	and    BYTE PTR [rax+0x41],cl
  44a076:	rex.WRX
  44a077:	rex.R
  44a078:	rex.WR
  44a079:	rex.RB push r10
  44a07b:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0c0f4
  44a081:	rex.WRX
  44a082:	rex.WRXB and BYTE PTR [r8+0x41],r9b
  44a086:	rex.WRX
  44a087:	rex.R
  44a088:	rex.WR
  44a089:	rex.RB push r10
  44a08b:	and    BYTE PTR [rbp+0xa],bl
  44a08e:	and    BYTE PTR [rax],ah
  44a090:	and    BYTE PTR [rax],ah
  44a092:	pop    rbx
  44a093:	and    BYTE PTR [rsi+0x41],dl
  44a096:	rex.WR
  44a097:	rex.WB
  44a098:	rex.R
  44a099:	push   r12
  44a09b:	rex.WRXB push r10
  44a09d:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0c116
  44a0a3:	rex.WRX
  44a0a4:	rex.WRXB and BYTE PTR [r14+0x41],r10b
  44a0a8:	rex.WR
  44a0a9:	rex.WB
  44a0aa:	rex.R
  44a0ab:	push   r12
  44a0ad:	rex.WRXB push r10
  44a0af:	and    BYTE PTR [rbp+0xa],bl
  44a0b2:	and    BYTE PTR [rax],ah
  44a0b4:	and    BYTE PTR [rax],ah
  44a0b6:	pop    rbx
  44a0b7:	and    BYTE PTR [rdi+0x50],cl
  44a0ba:	push   rsp
  44a0bb:	rex.WB
  44a0bc:	rex.WRXB
  44a0bd:	rex.WRX push rbx
  44a0bf:	and    BYTE PTR [rax],ch
  44a0c1:	and    BYTE PTR [rbx+0x20],bl
  44a0c4:	rex.B
  44a0c5:	rex.R
  44a0c6:	and    BYTE PTR [rax+riz*1+0x53],r15b
  44a0cb:	rex.RB push r12
  44a0cd:	and    BYTE PTR [rax+riz*1+0x44],bh
  44a0d1:	push   rdx
  44a0d2:	rex.WRXB push r8
  44a0d4:	and    BYTE PTR [rbp+0x20],bl
  44a0d7:	and    eax,0x275b2073
  44a0dc:	and    eax,0x205d2773
  44a0e1:	pop    rbx
  44a0e2:	sub    al,0x20
  44a0e4:	cs cs and BYTE PTR cs:[rbp+0x29],bl
  44a0ea:	and    BYTE PTR [rbp+0xa],bl
  44a0ed:	rex.B
  44a0ee:	rex.WR push rsp
  44a0f0:	rex.RB push r10
  44a0f2:	and    BYTE PTR [rsi+0x4f],al
  44a0f5:	push   rdx
  44a0f6:	rex.RB
  44a0f7:	rex.WB
  44a0f8:	rex.RXB
  44a0f9:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44a0fe:	and    BYTE PTR [r15+0x52],dl
  44a102:	push   r8
  44a104:	push   rax
  44a105:	rex.RB push r10
  44a107:	and    BYTE PTR [rip+0x574f2073],ah        # 0x5793c180
  44a10d:	rex.WRX
  44a10e:	rex.RB push r10
  44a110:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44a114:	and    eax,0x4c410a73
  44a119:	push   rsp
  44a11a:	rex.RB push r10
  44a11c:	and    BYTE PTR [rsi+0x4f],al
  44a11f:	push   rdx
  44a120:	rex.RB
  44a121:	rex.WB
  44a122:	rex.RXB
  44a123:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44a128:	and    BYTE PTR [r15+0x52],dl
  44a12c:	push   r8
  44a12e:	push   rax
  44a12f:	rex.RB push r10
  44a131:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596c1aa
  44a137:	rex.WRX
  44a138:	rex.B
  44a139:	rex.WRB
  44a13a:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a13f:	and    eax,0x61760073
  44a144:	ins    BYTE PTR es:[rdi],dx
  44a145:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x665f726f
  44a14d:	jne    0x44a1bd
  44a14f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44a153:	outs   dx,BYTE PTR ds:[rsi]
  44a154:	add    BYTE PTR [rcx+0x63],ah
  44a157:	je     0x44a1c2
  44a159:	outs   dx,DWORD PTR ds:[rsi]
  44a15a:	outs   dx,BYTE PTR ds:[rsi]
  44a15b:	add    BYTE PTR [rax],al
  44a15d:	add    BYTE PTR [rax],al
  44a15f:	add    BYTE PTR [rcx+0x4c],al
  44a162:	push   rsp
  44a163:	rex.RB push r10
  44a165:	and    BYTE PTR [rsi+0x4f],al
  44a168:	push   rdx
  44a169:	rex.RB
  44a16a:	rex.WB
  44a16b:	rex.RXB
  44a16c:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44a171:	rex.WR
  44a172:	and    BYTE PTR [r11+0x20],r11b
  44a176:	rex.WB
  44a177:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a17b:	rex.WB push r11
  44a17d:	push   rsp
  44a17e:	push   rbx
  44a17f:	and    BYTE PTR [rbp+0x20],bl
  44a182:	and    eax,0x20200a73
  44a187:	and    BYTE PTR [rax],ah
  44a189:	and    eax,0x2c5b2073
  44a18e:	and    BYTE PTR [rsi],ch
  44a190:	cs and BYTE PTR cs:[rbp+0xa],bl
  44a195:	rex.B
  44a196:	rex.WR push rsp
  44a198:	rex.RB push r10
  44a19a:	and    BYTE PTR [rsi+0x4f],al
  44a19d:	push   rdx
  44a19e:	rex.RB
  44a19f:	rex.WB
  44a1a0:	rex.RXB
  44a1a1:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44a1a6:	rex.WR
  44a1a7:	and    BYTE PTR [r11+0x20],r11b
  44a1ab:	rex.WB
  44a1ac:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a1b0:	rex.WB push r11
  44a1b2:	push   rsp
  44a1b3:	push   rbx
  44a1b4:	and    BYTE PTR [rbp+0x20],bl
  44a1b7:	and    eax,0x20200a73
  44a1bc:	and    BYTE PTR [rax],ah
  44a1be:	push   rdx
  44a1bf:	rex.RB
  44a1c0:	rex.WRX
  44a1c1:	rex.B
  44a1c2:	rex.WRB
  44a1c3:	and    BYTE PTR [r11+0x20],r11b
  44a1c7:	rex.XB
  44a1c8:	rex.WRXB
  44a1c9:	rex.WR push rbp
  44a1cb:	rex.WRB
  44a1cc:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a1d0:	and    eax,0x4f542073
  44a1d5:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85ac4e
  44a1db:	push   rsp
  44a1dc:	rex.RB push r10
  44a1de:	and    BYTE PTR [rsi+0x4f],al
  44a1e1:	push   rdx
  44a1e2:	rex.RB
  44a1e3:	rex.WB
  44a1e4:	rex.RXB
  44a1e5:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44a1ea:	rex.WR
  44a1eb:	and    BYTE PTR [r11+0x20],r11b
  44a1ef:	rex.WB
  44a1f0:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a1f4:	rex.WB push r11
  44a1f6:	push   rsp
  44a1f7:	push   rbx
  44a1f8:	and    BYTE PTR [rbp+0x20],bl
  44a1fb:	and    eax,0x20200a73
  44a200:	and    BYTE PTR [rax],ah
  44a202:	push   rdx
  44a203:	rex.RB
  44a204:	rex.WRX
  44a205:	rex.B
  44a206:	rex.WRB
  44a207:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a20c:	and    eax,0x4c410a73
  44a211:	push   rsp
  44a212:	rex.RB push r10
  44a214:	and    BYTE PTR [rsi+0x4f],al
  44a217:	push   rdx
  44a218:	rex.RB
  44a219:	rex.WB
  44a21a:	rex.RXB
  44a21b:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44a220:	rex.WR
  44a221:	and    BYTE PTR [r11+0x20],r11b
  44a225:	rex.WB
  44a226:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a22a:	rex.WB push r11
  44a22c:	push   rsp
  44a22d:	push   rbx
  44a22e:	and    BYTE PTR [rbp+0x20],bl
  44a231:	and    eax,0x20200a73
  44a236:	and    BYTE PTR [rax],ah
  44a238:	push   rbx
  44a239:	rex.RB push r12
  44a23b:	and    BYTE PTR [rbx+0x43],dl
  44a23e:	rex.W
  44a23f:	rex.RB
  44a240:	rex.WRB
  44a241:	and    BYTE PTR [rip+0x250a0a73],spl        # 0x254eacbb
  44a248:	jae    0x44a254
  44a24a:	or     ah,BYTE PTR [rax]
  44a24c:	and    BYTE PTR [rax],ah
  44a24e:	and    BYTE PTR [rcx+0x44],al
  44a251:	and    BYTE PTR [rbx+0x20],r11b
  44a255:	rex.XB
  44a256:	rex.WRXB
  44a257:	rex.WR push rbp
  44a259:	rex.WRB
  44a25a:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a25e:	and    eax,0x73252073
  44a263:	and    BYTE PTR [rbx+0x20],bl
  44a266:	rex.XB
  44a267:	rex.WRXB
  44a268:	rex.WR
  44a269:	rex.WR
  44a26a:	push   r12
  44a26c:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1c2e6
  44a273:	pop    rbx
  44a274:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fc2ed
  44a27a:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44a280:	pop    rbp
  44a281:	or     ah,BYTE PTR [rax]
  44a283:	and    BYTE PTR [rax],ah
  44a285:	and    BYTE PTR [rdx+rdx*2+0x4f],al
  44a289:	push   rax
  44a28a:	and    BYTE PTR [rbx+0x20],bl
  44a28d:	rex.XB
  44a28e:	rex.WRXB
  44a28f:	rex.WR push rbp
  44a291:	rex.WRB
  44a292:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a296:	pop    rbx
  44a297:	and    BYTE PTR [rcx+0x46],cl
  44a29a:	and    BYTE PTR [rbp+0x58],al
  44a29d:	rex.WB push r11
  44a29f:	push   rsp
  44a2a0:	push   rbx
  44a2a1:	and    BYTE PTR [rbp+0x20],bl
  44a2a4:	and    eax,0x205b2073
  44a2a9:	push   rdx
  44a2aa:	rex.RB push r11
  44a2ac:	push   rsp
  44a2ad:	push   rdx
  44a2ae:	rex.WB
  44a2af:	rex.XB push r12
  44a2b1:	and    BYTE PTR [rax+riz*1+0x43],bh
  44a2b5:	push   r11
  44a2b7:	rex.XB
  44a2b8:	rex.B
  44a2b9:	rex.R
  44a2ba:	and    BYTE PTR [r13+0xa],r11b
  44a2be:	and    BYTE PTR [rax],ah
  44a2c0:	and    BYTE PTR [rax],ah
  44a2c2:	rex.B
  44a2c3:	rex.WR push rsp
  44a2c5:	rex.RB push r10
  44a2c7:	and    BYTE PTR [rbx+0x20],bl
  44a2ca:	rex.XB
  44a2cb:	rex.WRXB
  44a2cc:	rex.WR push rbp
  44a2ce:	rex.WRB
  44a2cf:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a2d3:	and    eax,0x205b2073
  44a2d8:	push   rbx
  44a2d9:	rex.RB push r12
  44a2db:	and    BYTE PTR [rcx+rax*2+0x54],al
  44a2df:	and    BYTE PTR [r13+0x20],bl
  44a2e3:	push   rsp
  44a2e4:	pop    rcx
  44a2e5:	push   rax
  44a2e6:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064ad60
  44a2ed:	and    BYTE PTR [rax],ah
  44a2ef:	rex.B
  44a2f0:	rex.WR push rsp
  44a2f2:	rex.RB push r10
  44a2f4:	and    BYTE PTR [rbx+0x20],bl
  44a2f7:	rex.XB
  44a2f8:	rex.WRXB
  44a2f9:	rex.WR push rbp
  44a2fb:	rex.WRB
  44a2fc:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a300:	and    eax,0x45532073
  44a305:	push   rsp
  44a306:	and    BYTE PTR [rbp+rax*2+0x46],al
  44a30a:	push   r13
  44a30c:	rex.WR push rsp
  44a30e:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064ad87
  44a314:	and    BYTE PTR [rax],ah
  44a316:	rex.B
  44a317:	rex.WR push rsp
  44a319:	rex.RB push r10
  44a31b:	and    BYTE PTR [rbx+0x20],bl
  44a31e:	rex.XB
  44a31f:	rex.WRXB
  44a320:	rex.WR push rbp
  44a322:	rex.WRB
  44a323:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a327:	and    eax,0x52442073
  44a32c:	rex.WRXB push r8
  44a32e:	and    BYTE PTR [rbp+rax*2+0x46],al
  44a332:	push   r13
  44a334:	rex.WR push rsp
  44a336:	or     ah,BYTE PTR [rax]
  44a338:	and    BYTE PTR [rax],ah
  44a33a:	and    BYTE PTR [rcx+0x4c],al
  44a33d:	push   rsp
  44a33e:	rex.RB push r10
  44a340:	and    BYTE PTR [rbx+0x20],bl
  44a343:	rex.XB
  44a344:	rex.WRXB
  44a345:	rex.WR push rbp
  44a347:	rex.WRB
  44a348:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a34c:	and    eax,0x207b2073
  44a351:	push   rbx
  44a352:	rex.RB push r12
  44a354:	and    BYTE PTR [rax+riz*1+0x44],bh
  44a358:	push   rdx
  44a359:	rex.WRXB push r8
  44a35b:	and    BYTE PTR [rbp+0x20],bh
  44a35e:	rex.WRX
  44a35f:	rex.WRXB push r12
  44a361:	and    BYTE PTR [rsi+0x55],cl
  44a364:	rex.WR
  44a365:	rex.WR or r12b,BYTE PTR [rax]
  44a368:	and    BYTE PTR [rax],ah
  44a36a:	and    BYTE PTR [rcx+0x4c],al
  44a36d:	push   rsp
  44a36e:	rex.RB push r10
  44a370:	and    BYTE PTR [rbx+0x20],bl
  44a373:	rex.XB
  44a374:	rex.WRXB
  44a375:	rex.WR push rbp
  44a377:	rex.WRB
  44a378:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a37c:	and    eax,0x45532073
  44a381:	push   rsp
  44a382:	and    BYTE PTR [rbx+0x54],dl
  44a385:	push   r12
  44a387:	rex.WB push r11
  44a389:	push   rsp
  44a38a:	rex.WB
  44a38b:	rex.XB push r11
  44a38d:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064ae06
  44a393:	and    BYTE PTR [rax],ah
  44a395:	rex.B
  44a396:	rex.WR push rsp
  44a398:	rex.RB push r10
  44a39a:	and    BYTE PTR [rbx+0x20],bl
  44a39d:	rex.XB
  44a39e:	rex.WRXB
  44a39f:	rex.WR push rbp
  44a3a1:	rex.WRB
  44a3a2:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a3a6:	and    eax,0x45532073
  44a3ab:	push   rsp
  44a3ac:	and    BYTE PTR [rax],ch
  44a3ae:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081c427
  44a3b4:	and    eax,0x2c5b2073
  44a3b9:	and    BYTE PTR [rsi],ch
  44a3bb:	cs and BYTE PTR cs:[rbp+0x20],bl
  44a3c0:	sub    DWORD PTR [rdx],ecx
  44a3c2:	and    BYTE PTR [rax],ah
  44a3c4:	and    BYTE PTR [rax],ah
  44a3c6:	rex.B
  44a3c7:	rex.WR push rsp
  44a3c9:	rex.RB push r10
  44a3cb:	and    BYTE PTR [rbx+0x20],bl
  44a3ce:	rex.XB
  44a3cf:	rex.WRXB
  44a3d0:	rex.WR push rbp
  44a3d2:	rex.WRB
  44a3d3:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a3d7:	and    eax,0x45522073
  44a3dc:	push   rbx
  44a3dd:	rex.RB push r12
  44a3df:	and    BYTE PTR [rax],ch
  44a3e1:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fc45a
  44a3e7:	and    BYTE PTR [rsi],ch
  44a3e9:	cs and BYTE PTR cs:[rbp+0x20],bl
  44a3ee:	sub    DWORD PTR [rdx],ecx
  44a3f0:	and    BYTE PTR [rax],ah
  44a3f2:	and    BYTE PTR [rax],ah
  44a3f4:	rex.B
  44a3f5:	rex.WR push rsp
  44a3f7:	rex.RB push r10
  44a3f9:	and    BYTE PTR [rbx+0x20],bl
  44a3fc:	rex.XB
  44a3fd:	rex.WRXB
  44a3fe:	rex.WR push rbp
  44a400:	rex.WRB
  44a401:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44a405:	and    eax,0x504f2073
  44a40a:	push   rsp
  44a40b:	rex.WB
  44a40c:	rex.WRXB
  44a40d:	rex.WRX push rbx
  44a40f:	and    BYTE PTR [rax],ch
  44a411:	and    BYTE PTR [rbx+0x20],bl
  44a414:	rex.B
  44a415:	rex.R
  44a416:	and    BYTE PTR [rax+riz*1+0x53],r15b
  44a41b:	rex.RB push r12
  44a41d:	and    BYTE PTR [rax+riz*1+0x44],bh
  44a421:	push   rdx
  44a422:	rex.WRXB push r8
  44a424:	and    BYTE PTR [rbp+0x20],bl
  44a427:	and    eax,0x275b2073
  44a42c:	and    eax,0x205d2773
  44a431:	pop    rbx
  44a432:	sub    al,0x20
  44a434:	cs cs and BYTE PTR cs:[rbp+0x29],bl
  44a43a:	or     ah,BYTE PTR [rax]
  44a43c:	and    BYTE PTR [rax],ah
  44a43e:	and    BYTE PTR [rcx+rcx*2+0x53],al
  44a442:	rex.B
  44a443:	rex.X
  44a444:	rex.WR
  44a445:	and    BYTE PTR [r10+rdx*2+0x49],r10b
  44a44a:	rex.RXB
  44a44b:	rex.RXB
  44a44c:	rex.RB push r10
  44a44e:	and    BYTE PTR [rbx+0x20],bl
  44a451:	and    eax,0x207c2073
  44a456:	rex.B
  44a457:	rex.WR
  44a458:	rex.WR and BYTE PTR [rax+riz*1+0x55],r15b
  44a45d:	push   rbx
  44a45e:	rex.RB push r10
  44a460:	and    BYTE PTR [rbp+0xa],bl
  44a463:	and    BYTE PTR [rax],ah
  44a465:	and    BYTE PTR [rax],ah
  44a467:	rex.RB
  44a468:	rex.WRX
  44a469:	rex.B
  44a46a:	rex.X
  44a46b:	rex.WR
  44a46c:	and    BYTE PTR [r10+rdx*2+0x49],r10b
  44a471:	rex.RXB
  44a472:	rex.RXB
  44a473:	rex.RB push r10
  44a475:	and    BYTE PTR [rbx+0x20],bl
  44a478:	and    eax,0x207c2073
  44a47d:	rex.B
  44a47e:	rex.WR
  44a47f:	rex.WR and BYTE PTR [rax+riz*1+0x55],r15b
  44a484:	push   rbx
  44a485:	rex.RB push r10
  44a487:	and    BYTE PTR [rbp+0xa],bl
  44a48a:	and    BYTE PTR [rax],ah
  44a48c:	and    BYTE PTR [rax],ah
  44a48e:	rex.RB
  44a48f:	rex.WRX
  44a490:	rex.B
  44a491:	rex.X
  44a492:	rex.WR
  44a493:	and    BYTE PTR [r10+0x45],r10b
  44a497:	push   rax
  44a498:	rex.WR
  44a499:	rex.WB
  44a49a:	rex.XB
  44a49b:	and    BYTE PTR [r10+rdx*2+0x49],dl
  44a4a0:	rex.RXB
  44a4a1:	rex.RXB
  44a4a2:	rex.RB push r10
  44a4a4:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064af1d
  44a4aa:	and    BYTE PTR [rax],ah
  44a4ac:	rex.RB
  44a4ad:	rex.WRX
  44a4ae:	rex.B
  44a4af:	rex.X
  44a4b0:	rex.WR
  44a4b1:	and    BYTE PTR [r9+0x4c],r8b
  44a4b5:	push   rdi
  44a4b6:	pop    r9
  44a4b8:	push   rbx
  44a4b9:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44a4bd:	rex.RXB
  44a4be:	rex.RXB
  44a4bf:	rex.RB push r10
  44a4c1:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064af3a
  44a4c7:	and    BYTE PTR [rax],ah
  44a4c9:	rex.WRXB push r15
  44a4cb:	rex.WRX
  44a4cc:	rex.RB push r10
  44a4ce:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44a4d2:	and    eax,0x20200a73
  44a4d7:	and    BYTE PTR [rax],ah
  44a4d9:	rex.WRXB push r8
  44a4db:	push   rsp
  44a4dc:	rex.WB
  44a4dd:	rex.WRXB
  44a4de:	rex.WRX push rbx
  44a4e0:	and    BYTE PTR [rax],ch
  44a4e2:	and    BYTE PTR [rbx+0x20],bl
  44a4e5:	rex.B
  44a4e6:	rex.R
  44a4e7:	and    BYTE PTR [rax+riz*1+0x53],r15b
  44a4ec:	rex.RB push r12
  44a4ee:	and    BYTE PTR [rax+riz*1+0x44],bh
  44a4f2:	push   rdx
  44a4f3:	rex.WRXB push r8
  44a4f5:	and    BYTE PTR [rbp+0x20],bl
  44a4f8:	and    eax,0x275b2073
  44a4fd:	and    eax,0x205d2773
  44a502:	pop    rbx
  44a503:	sub    al,0x20
  44a505:	cs cs and BYTE PTR cs:[rbp+0x29],bl
  44a50b:	add    BYTE PTR [rdx+rsi*2+0x69],dh
  44a50f:	addr32 addr32 gs jb 0x44a573
  44a514:	outs   dx,BYTE PTR ds:[rsi]
  44a515:	(bad)  
  44a516:	ins    DWORD PTR es:[rdi],dx
  44a517:	add    BYTE PTR gs:[rbx+0x6f],ah
  44a51b:	ins    BYTE PTR es:[rdi],dx
  44a51c:	jne    0x44a58b
  44a51e:	outs   dx,BYTE PTR ds:[rsi]
  44a51f:	pop    rdi
  44a520:	outs   dx,BYTE PTR ds:[rsi]
  44a521:	(bad)  
  44a522:	ins    DWORD PTR es:[rdi],dx
  44a523:	add    BYTE PTR gs:[rcx+0x74],ah
  44a527:	je     0x44a59b
  44a529:	imul   esp,DWORD PTR [rdx+0x75],0x6f5f6574
  44a530:	jo     0x44a5a6
  44a532:	imul   ebp,DWORD PTR [rdi+0x6e],0x746e6900
  44a539:	gs addr32 gs jb 0x44a53e
  44a53e:	fs (bad) 
  44a540:	je     0x44a5a3
  44a542:	pop    rdi
  44a543:	je     0x44a5be
  44a545:	jo     0x44a5ac
  44a547:	add    BYTE PTR [rbx+0x6f],ah
  44a54a:	ins    BYTE PTR es:[rdi],dx
  44a54b:	jne    0x44a5ba
  44a54d:	outs   dx,BYTE PTR ds:[rsi]
  44a54e:	pop    rdi
  44a54f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44a552:	jae    0x44a5c8
  44a554:	jb     0x44a5b7
  44a556:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f6300
  44a55d:	ins    BYTE PTR es:[rdi],dx
  44a55e:	(bad)  
  44a55f:	je     0x44a5ca
  44a561:	outs   dx,DWORD PTR ds:[rsi]
  44a562:	outs   dx,BYTE PTR ds:[rsi]
  44a563:	add    BYTE PTR [rdi+0x68],dh
  44a566:	gs jb  0x44a5ce
  44a569:	and    BYTE PTR [rcx+0x63],ah
  44a56c:	je     0x44a5d7
  44a56e:	outs   dx,DWORD PTR ds:[rsi]
  44a56f:	outs   dx,BYTE PTR ds:[rsi]
  44a570:	and    BYTE PTR [rcx+0x73],ch
  44a573:	and    BYTE PTR [rdi+0x6e],ch
  44a576:	and    BYTE PTR gs:[rdi+0x66],ch
  44a57a:	cmp    al,BYTE PTR [rax]
  44a57c:	outs   dx,BYTE PTR ds:[rsi]
  44a57d:	gs ja  0x44a5df
  44a580:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44a583:	jne    0x44a5f2
  44a585:	outs   dx,BYTE PTR ds:[rsi]
  44a586:	pop    rdi
  44a587:	outs   dx,BYTE PTR ds:[rsi]
  44a588:	(bad)  
  44a589:	ins    DWORD PTR es:[rdi],dx
  44a58a:	add    BYTE PTR gs:[rax],al
  44a58d:	add    BYTE PTR [rax],al
  44a58f:	add    BYTE PTR [rcx+0x4c],al
  44a592:	push   rsp
  44a593:	rex.RB push r10
  44a595:	and    BYTE PTR [rsi+0x55],al
  44a598:	rex.WRX
  44a599:	rex.XB push r12
  44a59b:	rex.WB
  44a59c:	rex.WRXB
  44a59d:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206cc617
  44a5a4:	pop    rbx
  44a5a5:	and    BYTE PTR [rbx+0x20],bl
  44a5a8:	and    eax,0x205d2073
  44a5ad:	pop    rbx
  44a5ae:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1c627
  44a5b4:	and    eax,0x2c5b2073
  44a5b9:	and    BYTE PTR [rsi],ch
  44a5bb:	cs cs pop rbp
  44a5be:	and    BYTE PTR [rbp+0x20],bl
  44a5c1:	sub    DWORD PTR [rdx],ecx
  44a5c3:	and    BYTE PTR [rax],ah
  44a5c5:	and    BYTE PTR [rax],ah
  44a5c7:	and    eax,0x205b2073
  44a5cc:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44a5d2:	pop    rbx
  44a5d3:	and    BYTE PTR [rdx+0x45],dl
  44a5d6:	push   rbx
  44a5d7:	push   rsp
  44a5d8:	push   rdx
  44a5d9:	rex.WB
  44a5da:	rex.XB push r12
  44a5dc:	and    BYTE PTR [rbp+0xa],bl
  44a5df:	rex.B
  44a5e0:	rex.WR push rsp
  44a5e2:	rex.RB push r10
  44a5e4:	and    BYTE PTR [rsi+0x55],al
  44a5e7:	rex.WRX
  44a5e8:	rex.XB push r12
  44a5ea:	rex.WB
  44a5eb:	rex.WRXB
  44a5ec:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206cc666
  44a5f3:	pop    rbx
  44a5f4:	and    BYTE PTR [rbx+0x20],bl
  44a5f7:	and    eax,0x205d2073
  44a5fc:	pop    rbx
  44a5fd:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1c676
  44a603:	and    eax,0x2c5b2073
  44a608:	and    BYTE PTR [rsi],ch
  44a60a:	cs cs pop rbp
  44a60d:	and    BYTE PTR [rbp+0x20],bl
  44a610:	sub    DWORD PTR [rdx],ecx
  44a612:	and    BYTE PTR [rax],ah
  44a614:	and    BYTE PTR [rax],ah
  44a616:	push   rdx
  44a617:	rex.RB
  44a618:	rex.WRX
  44a619:	rex.B
  44a61a:	rex.WRB
  44a61b:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a620:	and    eax,0x4c410a73
  44a625:	push   rsp
  44a626:	rex.RB push r10
  44a628:	and    BYTE PTR [rsi+0x55],al
  44a62b:	rex.WRX
  44a62c:	rex.XB push r12
  44a62e:	rex.WB
  44a62f:	rex.WRXB
  44a630:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206cc6aa
  44a637:	pop    rbx
  44a638:	and    BYTE PTR [rbx+0x20],bl
  44a63b:	and    eax,0x205d2073
  44a640:	pop    rbx
  44a641:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1c6ba
  44a647:	and    eax,0x2c5b2073
  44a64c:	and    BYTE PTR [rsi],ch
  44a64e:	cs cs pop rbp
  44a651:	and    BYTE PTR [rbp+0x20],bl
  44a654:	sub    DWORD PTR [rdx],ecx
  44a656:	and    BYTE PTR [rax],ah
  44a658:	and    BYTE PTR [rax],ah
  44a65a:	rex.WRXB push r15
  44a65c:	rex.WRX
  44a65d:	rex.RB push r10
  44a65f:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44a663:	and    eax,0x4c410a73
  44a668:	push   rsp
  44a669:	rex.RB push r10
  44a66b:	and    BYTE PTR [rsi+0x55],al
  44a66e:	rex.WRX
  44a66f:	rex.XB push r12
  44a671:	rex.WB
  44a672:	rex.WRXB
  44a673:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206cc6ed
  44a67a:	pop    rbx
  44a67b:	and    BYTE PTR [rbx+0x20],bl
  44a67e:	and    eax,0x205d2073
  44a683:	pop    rbx
  44a684:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1c6fd
  44a68a:	and    eax,0x2c5b2073
  44a68f:	and    BYTE PTR [rsi],ch
  44a691:	cs cs pop rbp
  44a694:	and    BYTE PTR [rbp+0x20],bl
  44a697:	sub    DWORD PTR [rdx],ecx
  44a699:	and    BYTE PTR [rax],ah
  44a69b:	and    BYTE PTR [rax],ah
  44a69d:	push   rbx
  44a69e:	rex.RB push r12
  44a6a0:	and    BYTE PTR [rbx+0x43],dl
  44a6a3:	rex.W
  44a6a4:	rex.RB
  44a6a5:	rex.WRB
  44a6a6:	and    BYTE PTR [rip+0x250a0a73],spl        # 0x254eb120
  44a6ad:	jae    0x44a6b9
  44a6af:	or     ah,BYTE PTR [rax]
  44a6b1:	and    BYTE PTR [rax],ah
  44a6b3:	and    BYTE PTR [rbx+0x41],al
  44a6b6:	rex.WR
  44a6b7:	rex.WR
  44a6b8:	rex.RB
  44a6b9:	and    BYTE PTR [rdi+0x4e],r9b
  44a6bd:	and    BYTE PTR [rsi+0x55],cl
  44a6c0:	rex.WR
  44a6c1:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44a6c5:	push   rax
  44a6c6:	push   rbp
  44a6c7:	push   rsp
  44a6c8:	and    BYTE PTR [rax+riz*1+0x52],bh
  44a6cc:	rex.RB push r12
  44a6ce:	push   rbp
  44a6cf:	push   rdx
  44a6d0:	rex.WRX push rbx
  44a6d2:	and    BYTE PTR [rsi+0x55],cl
  44a6d5:	rex.WR
  44a6d6:	rex.WR and BYTE PTR [rdi+0x4e],r9b
  44a6da:	and    BYTE PTR [rsi+0x55],cl
  44a6dd:	rex.WR
  44a6de:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44a6e2:	push   rax
  44a6e3:	push   rbp
  44a6e4:	push   rsp
  44a6e5:	and    BYTE PTR [rax+riz*1+0x53],bh
  44a6e9:	push   rsp
  44a6ea:	push   rdx
  44a6eb:	rex.WB
  44a6ec:	rex.XB push r12
  44a6ee:	or     ah,BYTE PTR [rax]
  44a6f0:	and    BYTE PTR [rax],ah
  44a6f2:	and    BYTE PTR [rcx+0x4d],cl
  44a6f5:	rex.WRB push r13
  44a6f7:	push   rsp
  44a6f8:	rex.B
  44a6f9:	rex.X
  44a6fa:	rex.WR
  44a6fb:	and    BYTE PTR [r8+riz*1+0x53],r15b
  44a700:	push   rsp
  44a701:	rex.B
  44a702:	rex.X
  44a703:	rex.WR
  44a704:	and    BYTE PTR [r8+riz*1+0x56],r15b
  44a709:	rex.WRXB
  44a70a:	rex.WR
  44a70b:	push   r12
  44a70d:	rex.WB
  44a70e:	rex.WR
  44a70f:	and    BYTE PTR [r8+riz*1+0x5b],r15b
  44a714:	and    BYTE PTR [rsi+0x4f],cl
  44a717:	push   rsp
  44a718:	and    BYTE PTR [rbp+0x20],bl
  44a71b:	rex.WR
  44a71c:	rex.RB
  44a71d:	rex.B
  44a71e:	rex.WXB push r8
  44a720:	push   rdx
  44a721:	rex.WRXB
  44a722:	rex.WRXB
  44a723:	rex.RX or r12b,BYTE PTR [rax]
  44a726:	and    BYTE PTR [rax],ah
  44a728:	and    BYTE PTR [rbx+0x20],bl
  44a72b:	rex.RB pop r8
  44a72d:	push   rsp
  44a72e:	rex.RB push r10
  44a730:	rex.WRX
  44a731:	rex.B
  44a732:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44a736:	push   rbx
  44a737:	rex.RB
  44a738:	rex.XB push r13
  44a73a:	push   rdx
  44a73b:	rex.WB push r12
  44a73d:	pop    rcx
  44a73e:	and    BYTE PTR [rcx+0x4e],cl
  44a741:	push   rsi
  44a742:	rex.WRXB
  44a743:	rex.WXB
  44a744:	rex.RB push r10
  44a746:	and    BYTE PTR [rax+riz*1+0x5b],bh
  44a74a:	and    BYTE PTR [rbp+0x58],al
  44a74d:	push   rsp
  44a74e:	rex.RB push r10
  44a750:	rex.WRX
  44a751:	rex.B
  44a752:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44a756:	push   rbx
  44a757:	rex.RB
  44a758:	rex.XB push r13
  44a75a:	push   rdx
  44a75b:	rex.WB push r12
  44a75d:	pop    rcx
  44a75e:	and    BYTE PTR [rbp+rax*2+0x46],al
  44a762:	rex.WB
  44a763:	rex.WRX
  44a764:	rex.RB push r10
  44a766:	or     ah,BYTE PTR [rax]
  44a768:	and    BYTE PTR [rax],ah
  44a76a:	and    BYTE PTR [rbx+0x4f],al
  44a76d:	push   rbx
  44a76e:	push   rsp
  44a76f:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064b1e8
  44a775:	and    BYTE PTR [rax],ah
  44a777:	push   rdx
  44a778:	rex.WRXB push r15
  44a77a:	push   rbx
  44a77b:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064b1f4
  44a781:	and    BYTE PTR [rax],ah
  44a783:	push   rbx
  44a784:	rex.RB push r12
  44a786:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bfc7ff
  44a78c:	push   rsp
  44a78d:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  44a792:	and    BYTE PTR [rbp+0x20],bh
  44a795:	jnp    0x44a7b7
  44a797:	and    eax,0x207c2073
  44a79c:	rex.R
  44a79d:	rex.RB
  44a79e:	rex.RX
  44a79f:	push   r13
  44a7a1:	rex.WR push rsp
  44a7a3:	and    BYTE PTR [rbp+0xa],bh
  44a7a6:	and    BYTE PTR [rax],ah
  44a7a8:	and    BYTE PTR [rax],ah
  44a7aa:	push   rbx
  44a7ab:	rex.RB push r12
  44a7ad:	and    BYTE PTR [rip+0x52462073],ah        # 0x528ac826
  44a7b3:	rex.WRXB
  44a7b4:	rex.WRB and BYTE PTR [r11+0x55],r8b
  44a7b8:	push   rdx
  44a7b9:	push   rdx
  44a7ba:	rex.RB
  44a7bb:	rex.WRX push rsp
  44a7bd:	or     ah,BYTE PTR [rax]
  44a7bf:	and    BYTE PTR [rax],ah
  44a7c1:	and    BYTE PTR [rdx+0x45],dl
  44a7c4:	push   rbx
  44a7c5:	rex.RB push r12
  44a7c7:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064b240
  44a7cd:	and    BYTE PTR [rax],ah
  44a7cf:	push   rdx
  44a7d0:	rex.RB push r11
  44a7d2:	rex.RB push r12
  44a7d4:	and    BYTE PTR [rcx+0x4c],al
  44a7d7:	rex.WR add BYTE PTR [rdx+0x65],r14b
  44a7db:	jae    0x44a852
  44a7dd:	ins    BYTE PTR es:[rdi],dx
  44a7de:	je     0x44a83f
  44a7e0:	jb     0x44a851
  44a7e2:	ja     0x44a857
  44a7e4:	add    BYTE PTR [rbp+0x78],ah
  44a7e7:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  44a7eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x736f635f
  44a7f2:	je     0x44a7f4
  44a7f4:	jne    0x44a869
  44a7f6:	gs jb  0x44a858
  44a7f9:	outs   dx,BYTE PTR ds:[rsi]
  44a7fa:	(bad)  
  44a7fb:	ins    DWORD PTR es:[rdi],dx
  44a7fc:	add    BYTE PTR gs:[rdi+0x72],ah
  44a800:	outs   dx,DWORD PTR ds:[rsi]
  44a801:	jne    0x44a873
  44a803:	pop    rdi
  44a804:	outs   dx,BYTE PTR ds:[rsi]
  44a805:	(bad)  
  44a806:	ins    DWORD PTR es:[rdi],dx
  44a807:	add    BYTE PTR gs:[rax],al
  44a80a:	add    BYTE PTR [rax],al
  44a80c:	add    BYTE PTR [rax],al
  44a80e:	add    BYTE PTR [rax],al
  44a810:	rex.B
  44a811:	rex.WR push rsp
  44a813:	rex.RB push r10
  44a815:	and    BYTE PTR [rdi+0x52],al
  44a818:	rex.WRXB push r13
  44a81a:	push   rax
  44a81b:	and    BYTE PTR [rip+0x44412073],ah        # 0x4485c894
  44a821:	and    BYTE PTR [rbp+0x53],r10b
  44a825:	rex.RB push r10
  44a827:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fc8a0
  44a82d:	and    BYTE PTR [rsi],ch
  44a82f:	cs and BYTE PTR cs:[rbp+0xa],bl
  44a834:	rex.B
  44a835:	rex.WR push rsp
  44a837:	rex.RB push r10
  44a839:	and    BYTE PTR [rdi+0x52],al
  44a83c:	rex.WRXB push r13
  44a83e:	push   rax
  44a83f:	and    BYTE PTR [rip+0x52442073],ah        # 0x5288c8b8
  44a845:	rex.WRXB push r8
  44a847:	and    BYTE PTR [rbp+0x53],dl
  44a84a:	rex.RB push r10
  44a84c:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fc8c5
  44a852:	and    BYTE PTR [rsi],ch
  44a854:	cs and BYTE PTR cs:[rbp+0xa],bl
  44a859:	or     al,BYTE PTR [rcx+0x4c]
  44a85c:	push   rsp
  44a85d:	rex.RB push r10
  44a85f:	and    BYTE PTR [rdi+0x52],al
  44a862:	rex.WRXB push r13
  44a864:	push   rax
  44a865:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596c8de
  44a86b:	rex.WRX
  44a86c:	rex.B
  44a86d:	rex.WRB
  44a86e:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a873:	and    eax,0x73
  44a878:	rex.B
  44a879:	rex.WR push rsp
  44a87b:	rex.RB push r10
  44a87d:	and    BYTE PTR [rcx+0x4e],cl
  44a880:	rex.R
  44a881:	rex.RB pop r8
  44a883:	and    BYTE PTR [rbx+0x20],bl
  44a886:	rex.WB
  44a887:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a88b:	rex.WB push r11
  44a88d:	push   rsp
  44a88e:	push   rbx
  44a88f:	and    BYTE PTR [rbp+0x20],bl
  44a892:	and    eax,0x45522073
  44a897:	rex.WRX
  44a898:	rex.B
  44a899:	rex.WRB
  44a89a:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a89f:	and    eax,0x4c410a73
  44a8a4:	push   rsp
  44a8a5:	rex.RB push r10
  44a8a7:	and    BYTE PTR [rcx+0x4e],cl
  44a8aa:	rex.R
  44a8ab:	rex.RB pop r8
  44a8ad:	and    BYTE PTR [rbx+0x20],bl
  44a8b0:	rex.WB
  44a8b1:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a8b5:	rex.WB push r11
  44a8b7:	push   rsp
  44a8b8:	push   rbx
  44a8b9:	and    BYTE PTR [rbp+0x20],bl
  44a8bc:	and    eax,0x45532073
  44a8c1:	push   rsp
  44a8c2:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44a8c6:	rex.WR
  44a8c7:	rex.RB push r11
  44a8c9:	push   rax
  44a8ca:	rex.B
  44a8cb:	rex.XB
  44a8cc:	and    BYTE PTR [rip+0x4c410a73],r12b        # 0x4c85b346
  44a8d3:	push   rsp
  44a8d4:	rex.RB push r10
  44a8d6:	and    BYTE PTR [rcx+0x4e],cl
  44a8d9:	rex.R
  44a8da:	rex.RB pop r8
  44a8dc:	and    BYTE PTR [rbx+0x20],bl
  44a8df:	rex.WB
  44a8e0:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a8e4:	rex.WB push r11
  44a8e6:	push   rsp
  44a8e7:	push   rbx
  44a8e8:	and    BYTE PTR [rbp+0x20],bl
  44a8eb:	and    eax,0x45532073
  44a8f0:	push   rsp
  44a8f1:	and    BYTE PTR [rax],ch
  44a8f3:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081c96c
  44a8f9:	and    eax,0x2c5b2073
  44a8fe:	and    BYTE PTR [rsi],ch
  44a900:	cs and BYTE PTR cs:[rbp+0x20],bl
  44a905:	sub    DWORD PTR [rdx],ecx
  44a907:	rex.B
  44a908:	rex.WR push rsp
  44a90a:	rex.RB push r10
  44a90c:	and    BYTE PTR [rcx+0x4e],cl
  44a90f:	rex.R
  44a910:	rex.RB pop r8
  44a912:	and    BYTE PTR [rbx+0x20],bl
  44a915:	rex.WB
  44a916:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44a91a:	rex.WB push r11
  44a91c:	push   rsp
  44a91d:	push   rbx
  44a91e:	and    BYTE PTR [rbp+0x20],bl
  44a921:	and    eax,0x45522073
  44a926:	push   rbx
  44a927:	rex.RB push r12
  44a929:	and    BYTE PTR [rax],ch
  44a92b:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fc9a4
  44a931:	and    BYTE PTR [rsi],ch
  44a933:	cs and BYTE PTR cs:[rbp+0x20],bl
  44a938:	sub    DWORD PTR [rdx],ecx
  44a93a:	rex.B
  44a93b:	rex.WR push rsp
  44a93d:	rex.RB push r10
  44a93f:	and    BYTE PTR [rcx+0x4e],cl
  44a942:	rex.R
  44a943:	rex.RB pop r8
  44a945:	and    BYTE PTR [rcx+0x4c],al
  44a948:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44a94c:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44a950:	rex.WR
  44a951:	rex.RB push r11
  44a953:	push   rax
  44a954:	rex.B
  44a955:	rex.XB
  44a956:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fc9d0
  44a95d:	rex.WRXB push r15
  44a95f:	rex.WRX
  44a960:	rex.RB
  44a961:	and    BYTE PTR [rdx+0x59],r8b
  44a965:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fc9de
  44a96b:	and    BYTE PTR [rsi],ch
  44a96d:	cs and BYTE PTR cs:[rbp+0x20],bl
  44a972:	pop    rbp
  44a973:	or     ah,BYTE PTR [rax]
  44a975:	and    BYTE PTR [rax],ah
  44a977:	and    BYTE PTR [rbx+0x45],dl
  44a97a:	push   rsp
  44a97b:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44a97f:	rex.WR
  44a980:	rex.RB push r11
  44a982:	push   rax
  44a983:	rex.B
  44a984:	rex.XB
  44a985:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fc9ff
  44a98c:	rex.WRX
  44a98d:	rex.WRXB push r15
  44a98f:	rex.B
  44a990:	rex.WB push r12
  44a992:	and    BYTE PTR [rbp+0x0],bl
  44a995:	jae    0x44aa0b
  44a997:	outs   dx,DWORD PTR ds:[rsi]
  44a998:	jb     0x44a9fb
  44a99a:	addr32 gs pop rdi
  44a99d:	jo     0x44aa00
  44a99f:	jb     0x44aa02
  44a9a1:	ins    DWORD PTR es:[rdi],dx
  44a9a2:	gs je  0x44aa0a
  44a9a5:	jb     0x44a9a7
  44a9a7:	je     0x44aa0a
  44a9a9:	(bad)  
  44a9aa:	ins    BYTE PTR es:[rdi],dx
  44a9ab:	gs jae 0x44aa1e
  44a9ae:	(bad)  
  44a9af:	movsxd esp,DWORD PTR [rbp+0x5f]
  44a9b2:	outs   dx,BYTE PTR ds:[rsi]
  44a9b3:	(bad)  
  44a9b4:	ins    DWORD PTR es:[rdi],dx
  44a9b5:	add    BYTE PTR gs:[rax],al
  44a9b8:	rex.B
  44a9b9:	rex.WR push rsp
  44a9bb:	rex.RB push r10
  44a9bd:	and    BYTE PTR [rbx+0x20],bl
  44a9c0:	push   rax
  44a9c1:	push   rdx
  44a9c2:	rex.WRXB
  44a9c3:	rex.XB
  44a9c4:	rex.RB
  44a9c5:	rex.R push rbp
  44a9c7:	push   rdx
  44a9c8:	rex.B
  44a9c9:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44a9cd:	rex.WR
  44a9ce:	rex.B
  44a9cf:	rex.WRX
  44a9d0:	rex.RXB push r13
  44a9d2:	rex.B
  44a9d3:	rex.RXB
  44a9d4:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596ca4e
  44a9db:	rex.WRX
  44a9dc:	rex.B
  44a9dd:	rex.WRB
  44a9de:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44a9e3:	and    eax,0x4c410a73
  44a9e8:	push   rsp
  44a9e9:	rex.RB push r10
  44a9eb:	and    BYTE PTR [rbx+0x20],bl
  44a9ee:	push   rax
  44a9ef:	push   rdx
  44a9f0:	rex.WRXB
  44a9f1:	rex.XB
  44a9f2:	rex.RB
  44a9f3:	rex.R push rbp
  44a9f5:	push   rdx
  44a9f6:	rex.B
  44a9f7:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44a9fb:	rex.WR
  44a9fc:	rex.B
  44a9fd:	rex.WRX
  44a9fe:	rex.RXB push r13
  44aa00:	rex.B
  44aa01:	rex.RXB
  44aa02:	and    BYTE PTR [rip+0x574f2073],r12b        # 0x5793ca7c
  44aa09:	rex.WRX
  44aa0a:	rex.RB push r10
  44aa0c:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44aa10:	and    eax,0x616c0073
  44aa15:	jb     0x44aa7e
  44aa17:	gs pop rdi
  44aa19:	outs   dx,DWORD PTR ds:[rsi]
  44aa1a:	(bad)  
  44aa1b:	push   0x65
  44aa1d:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6f]
  44aa21:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x41000000
  44aa29:	rex.WR push rsp
  44aa2b:	rex.RB push r10
  44aa2d:	and    BYTE PTR [rcx+rax*2+0x52],cl
  44aa31:	rex.RXB
  44aa32:	and    BYTE PTR [r15+0x42],r9b
  44aa36:	rex.WX
  44aa37:	rex.RB
  44aa38:	rex.XB push r12
  44aa3a:	and    BYTE PTR [rip+0x574f2073],ah        # 0x5793cab3
  44aa40:	rex.WRX
  44aa41:	rex.RB push r10
  44aa43:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44aa47:	and    eax,0x73
  44aa4c:	add    BYTE PTR [rax],al
  44aa4e:	add    BYTE PTR [rax],al
  44aa50:	rex.B
  44aa51:	rex.WR push rsp
  44aa53:	rex.RB push r10
  44aa55:	and    BYTE PTR [rbp+0x41],cl
  44aa58:	push   rsp
  44aa59:	rex.RB push r10
  44aa5b:	rex.WB
  44aa5c:	rex.B
  44aa5d:	rex.WR
  44aa5e:	rex.WB pop r10
  44aa60:	rex.RB
  44aa61:	and    BYTE PTR [rsi+0x49],r10b
  44aa65:	rex.RB push r15
  44aa67:	and    BYTE PTR [rbx+0x20],bl
  44aa6a:	rex.WB
  44aa6b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44aa6f:	rex.WB push r11
  44aa71:	push   rsp
  44aa72:	push   rbx
  44aa73:	and    BYTE PTR [rbp+0x20],bl
  44aa76:	and    eax,0x20200a73
  44aa7b:	and    BYTE PTR [rax],ah
  44aa7d:	and    eax,0x2c5b2073
  44aa82:	and    BYTE PTR [rsi],ch
  44aa84:	cs and BYTE PTR cs:[rbp+0xa],bl
  44aa89:	rex.B
  44aa8a:	rex.WR push rsp
  44aa8c:	rex.RB push r10
  44aa8e:	and    BYTE PTR [rbp+0x41],cl
  44aa91:	push   rsp
  44aa92:	rex.RB push r10
  44aa94:	rex.WB
  44aa95:	rex.B
  44aa96:	rex.WR
  44aa97:	rex.WB pop r10
  44aa99:	rex.RB
  44aa9a:	and    BYTE PTR [rsi+0x49],r10b
  44aa9e:	rex.RB push r15
  44aaa0:	and    BYTE PTR [rbx+0x20],bl
  44aaa3:	rex.WB
  44aaa4:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44aaa8:	rex.WB push r11
  44aaaa:	push   rsp
  44aaab:	push   rbx
  44aaac:	and    BYTE PTR [rbp+0x20],bl
  44aaaf:	and    eax,0x20200a73
  44aab4:	and    BYTE PTR [rax],ah
  44aab6:	push   rdx
  44aab7:	rex.RB
  44aab8:	rex.WRX
  44aab9:	rex.B
  44aaba:	rex.WRB
  44aabb:	and    BYTE PTR [r11+0x20],r11b
  44aabf:	rex.XB
  44aac0:	rex.WRXB
  44aac1:	rex.WR push rbp
  44aac3:	rex.WRB
  44aac4:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44aac8:	and    eax,0x4f542073
  44aacd:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85b546
  44aad3:	push   rsp
  44aad4:	rex.RB push r10
  44aad6:	and    BYTE PTR [rbp+0x41],cl
  44aad9:	push   rsp
  44aada:	rex.RB push r10
  44aadc:	rex.WB
  44aadd:	rex.B
  44aade:	rex.WR
  44aadf:	rex.WB pop r10
  44aae1:	rex.RB
  44aae2:	and    BYTE PTR [rsi+0x49],r10b
  44aae6:	rex.RB push r15
  44aae8:	and    BYTE PTR [rbx+0x20],bl
  44aaeb:	rex.WB
  44aaec:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44aaf0:	rex.WB push r11
  44aaf2:	push   rsp
  44aaf3:	push   rbx
  44aaf4:	and    BYTE PTR [rbp+0x20],bl
  44aaf7:	and    eax,0x20200a73
  44aafc:	and    BYTE PTR [rax],ah
  44aafe:	push   rdx
  44aaff:	rex.RB
  44ab00:	rex.WRX
  44ab01:	rex.B
  44ab02:	rex.WRB
  44ab03:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44ab08:	and    eax,0x4c410a73
  44ab0d:	push   rsp
  44ab0e:	rex.RB push r10
  44ab10:	and    BYTE PTR [rbp+0x41],cl
  44ab13:	push   rsp
  44ab14:	rex.RB push r10
  44ab16:	rex.WB
  44ab17:	rex.B
  44ab18:	rex.WR
  44ab19:	rex.WB pop r10
  44ab1b:	rex.RB
  44ab1c:	and    BYTE PTR [rsi+0x49],r10b
  44ab20:	rex.RB push r15
  44ab22:	and    BYTE PTR [rbx+0x20],bl
  44ab25:	rex.WB
  44ab26:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ab2a:	rex.WB push r11
  44ab2c:	push   rsp
  44ab2d:	push   rbx
  44ab2e:	and    BYTE PTR [rbp+0x20],bl
  44ab31:	and    eax,0x20200a73
  44ab36:	and    BYTE PTR [rax],ah
  44ab38:	push   rbx
  44ab39:	rex.RB push r12
  44ab3b:	and    BYTE PTR [rbx+0x43],dl
  44ab3e:	rex.W
  44ab3f:	rex.RB
  44ab40:	rex.WRB
  44ab41:	and    BYTE PTR [rip+0x4c410a73],spl        # 0x4c85b5bb
  44ab48:	push   rsp
  44ab49:	rex.RB push r10
  44ab4b:	and    BYTE PTR [rbp+0x41],cl
  44ab4e:	push   rsp
  44ab4f:	rex.RB push r10
  44ab51:	rex.WB
  44ab52:	rex.B
  44ab53:	rex.WR
  44ab54:	rex.WB pop r10
  44ab56:	rex.RB
  44ab57:	and    BYTE PTR [rsi+0x49],r10b
  44ab5b:	rex.RB push r15
  44ab5d:	and    BYTE PTR [rcx+0x4c],al
  44ab60:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44ab64:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44ab68:	rex.WR
  44ab69:	rex.RB push r11
  44ab6b:	push   rax
  44ab6c:	rex.B
  44ab6d:	rex.XB
  44ab6e:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fcbe8
  44ab75:	rex.WRXB push r15
  44ab77:	rex.WRX
  44ab78:	rex.RB
  44ab79:	and    BYTE PTR [rdx+0x59],r8b
  44ab7d:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fcbf6
  44ab83:	and    BYTE PTR [rsi],ch
  44ab85:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ab8a:	pop    rbp
  44ab8b:	or     ah,BYTE PTR [rax]
  44ab8d:	and    BYTE PTR [rax],ah
  44ab8f:	and    BYTE PTR [rbx+0x45],dl
  44ab92:	push   rsp
  44ab93:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44ab97:	rex.WR
  44ab98:	rex.RB push r11
  44ab9a:	push   rax
  44ab9b:	rex.B
  44ab9c:	rex.XB
  44ab9d:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fcc17
  44aba4:	rex.WRX
  44aba5:	rex.WRXB push r15
  44aba7:	rex.B
  44aba8:	rex.WB push r12
  44abaa:	and    BYTE PTR [rbp+0xa],bl
  44abad:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204eb626
  44abb3:	and    BYTE PTR [rax],ah
  44abb5:	and    BYTE PTR [rcx+0x4c],al
  44abb8:	push   rsp
  44abb9:	rex.RB push r10
  44abbb:	and    BYTE PTR [rbx+0x20],bl
  44abbe:	rex.XB
  44abbf:	rex.WRXB
  44abc0:	rex.WR push rbp
  44abc2:	rex.WRB
  44abc3:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44abc7:	and    eax,0x45532073
  44abcc:	push   rsp
  44abcd:	and    BYTE PTR [rbx+0x54],dl
  44abd0:	push   r12
  44abd2:	rex.WB push r11
  44abd4:	push   rsp
  44abd5:	rex.WB
  44abd6:	rex.XB push r11
  44abd8:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064b651
  44abde:	and    BYTE PTR [rax],ah
  44abe0:	rex.B
  44abe1:	rex.WR push rsp
  44abe3:	rex.RB push r10
  44abe5:	and    BYTE PTR [rbx+0x20],bl
  44abe8:	rex.XB
  44abe9:	rex.WRXB
  44abea:	rex.WR push rbp
  44abec:	rex.WRB
  44abed:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44abf1:	and    eax,0x45532073
  44abf6:	push   rsp
  44abf7:	and    BYTE PTR [rax],ch
  44abf9:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081cc72
  44abff:	and    eax,0x2c5b2073
  44ac04:	and    BYTE PTR [rsi],ch
  44ac06:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ac0b:	sub    DWORD PTR [rdx],ecx
  44ac0d:	and    BYTE PTR [rax],ah
  44ac0f:	and    BYTE PTR [rax],ah
  44ac11:	rex.B
  44ac12:	rex.WR push rsp
  44ac14:	rex.RB push r10
  44ac16:	and    BYTE PTR [rbx+0x20],bl
  44ac19:	rex.XB
  44ac1a:	rex.WRXB
  44ac1b:	rex.WR push rbp
  44ac1d:	rex.WRB
  44ac1e:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44ac22:	and    eax,0x45522073
  44ac27:	push   rbx
  44ac28:	rex.RB push r12
  44ac2a:	and    BYTE PTR [rax],ch
  44ac2c:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fcca5
  44ac32:	and    BYTE PTR [rsi],ch
  44ac34:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ac39:	sub    DWORD PTR [rdx],ecx
  44ac3b:	and    BYTE PTR [rax],ah
  44ac3d:	and    BYTE PTR [rax],ah
  44ac3f:	rex.B
  44ac40:	rex.WR push rsp
  44ac42:	rex.RB push r10
  44ac44:	and    BYTE PTR [rbx+0x20],bl
  44ac47:	rex.XB
  44ac48:	rex.WRXB
  44ac49:	rex.WR push rbp
  44ac4b:	rex.WRB
  44ac4c:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44ac50:	and    eax,0x45532073
  44ac55:	push   rsp
  44ac56:	and    BYTE PTR [rbx+0x54],dl
  44ac59:	rex.WRXB push r10
  44ac5b:	rex.B
  44ac5c:	rex.RXB
  44ac5d:	and    BYTE PTR [r11+0x20],r15b
  44ac61:	push   rax
  44ac62:	rex.WR
  44ac63:	rex.B
  44ac64:	rex.WB
  44ac65:	rex.WRX and BYTE PTR [rax+r12*1+0x45],r15b
  44ac6a:	pop    rax
  44ac6b:	push   rsp
  44ac6c:	rex.RB push r10
  44ac6e:	rex.WRX
  44ac6f:	rex.B
  44ac70:	rex.WR and BYTE PTR [rax+riz*1+0x45],r15b
  44ac75:	pop    rax
  44ac76:	push   rsp
  44ac77:	rex.RB
  44ac78:	rex.WRX
  44ac79:	rex.R
  44ac7a:	rex.RB
  44ac7b:	and    BYTE PTR [rax+riz*1+0x4d],r15b
  44ac80:	rex.B
  44ac81:	rex.WB
  44ac82:	rex.WRX and BYTE PTR [rbp+0xa],r15b
  44ac86:	and    BYTE PTR [rax],ah
  44ac88:	and    BYTE PTR [rax],ah
  44ac8a:	rex.XB
  44ac8b:	rex.WR push rbp
  44ac8d:	push   rbx
  44ac8e:	push   rsp
  44ac8f:	rex.RB push r10
  44ac91:	and    BYTE PTR [rdi+0x4e],cl
  44ac94:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064b70d
  44ac9a:	and    BYTE PTR [rax],ah
  44ac9c:	push   rbx
  44ac9d:	rex.RB push r12
  44ac9f:	and    BYTE PTR [rdi+0x49],dl
  44aca2:	push   rsp
  44aca3:	rex.W
  44aca4:	rex.WRXB push r13
  44aca6:	push   rsp
  44aca7:	and    BYTE PTR [rbx+0x4c],al
  44acaa:	push   rbp
  44acab:	push   rbx
  44acac:	push   rsp
  44acad:	rex.RB push r10
  44acaf:	or     ah,BYTE PTR [rax]
  44acb1:	and    BYTE PTR [rax],ah
  44acb3:	and    BYTE PTR [rbx+0x45],dl
  44acb6:	push   rsp
  44acb7:	and    BYTE PTR [rax],ch
  44acb9:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081cd32
  44acbf:	and    eax,0x2c5b2073
  44acc4:	and    BYTE PTR [rsi],ch
  44acc6:	cs and BYTE PTR cs:[rbp+0x20],bl
  44accb:	sub    DWORD PTR [rdx],ecx
  44accd:	and    BYTE PTR [rax],ah
  44accf:	and    BYTE PTR [rax],ah
  44acd1:	push   rdx
  44acd2:	rex.RB push r11
  44acd4:	rex.RB push r12
  44acd6:	and    BYTE PTR [rax],ch
  44acd8:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fcd51
  44acde:	and    BYTE PTR [rsi],ch
  44ace0:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ace5:	sub    DWORD PTR [rdx],ecx
  44ace7:	and    BYTE PTR [rax],ah
  44ace9:	and    BYTE PTR [rax],ah
  44aceb:	rex.WRXB push r15
  44aced:	rex.WRX
  44acee:	rex.RB push r10
  44acf0:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44acf4:	and    eax,0x20200a73
  44acf9:	and    BYTE PTR [rax],ah
  44acfb:	push   rbx
  44acfc:	rex.RB push r12
  44acfe:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44ad02:	rex.WR
  44ad03:	rex.RB push r11
  44ad05:	push   rax
  44ad06:	rex.B
  44ad07:	rex.XB
  44ad08:	and    BYTE PTR [rip+0x6e690073],r12b        # 0x6eadad82
  44ad0f:	fs gs js 0x44ad72
  44ad13:	outs   dx,BYTE PTR ds:[rsi]
  44ad14:	(bad)  
  44ad15:	ins    DWORD PTR es:[rdi],dx
  44ad16:	add    BYTE PTR gs:[rcx+0x4c],al
  44ad1a:	push   rsp
  44ad1b:	rex.RB push r10
  44ad1d:	and    BYTE PTR [rdi+0x50],cl
  44ad20:	rex.RB push r10
  44ad22:	push   r12
  44ad24:	rex.WRXB push r10
  44ad26:	and    BYTE PTR [rip+0x20282073],ah        # 0x206ccd9f
  44ad2c:	jnp    0x44ad4e
  44ad2e:	and    eax,0x207c2073
  44ad33:	rex.WRX
  44ad34:	rex.WRXB
  44ad35:	rex.WRX
  44ad36:	and    BYTE PTR [r13+0x20],r15b
  44ad3a:	sub    al,0x20
  44ad3c:	jnp    0x44ad5e
  44ad3e:	and    eax,0x207c2073
  44ad43:	rex.WRX
  44ad44:	rex.WRXB
  44ad45:	rex.WRX
  44ad46:	and    BYTE PTR [r13+0x20],r15b
  44ad4a:	sub    DWORD PTR [rax],esp
  44ad4c:	rex.WRXB push r15
  44ad4e:	rex.WRX
  44ad4f:	rex.RB push r10
  44ad51:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44ad55:	and    eax,0x4c410a73
  44ad5a:	push   rsp
  44ad5b:	rex.RB push r10
  44ad5d:	and    BYTE PTR [rdi+0x50],cl
  44ad60:	rex.RB push r10
  44ad62:	push   r12
  44ad64:	rex.WRXB push r10
  44ad66:	and    BYTE PTR [rip+0x20282073],ah        # 0x206ccddf
  44ad6c:	jnp    0x44ad8e
  44ad6e:	and    eax,0x207c2073
  44ad73:	rex.WRX
  44ad74:	rex.WRXB
  44ad75:	rex.WRX
  44ad76:	and    BYTE PTR [r13+0x20],r15b
  44ad7a:	sub    al,0x20
  44ad7c:	jnp    0x44ad9e
  44ad7e:	and    eax,0x207c2073
  44ad83:	rex.WRX
  44ad84:	rex.WRXB
  44ad85:	rex.WRX
  44ad86:	and    BYTE PTR [r13+0x20],r15b
  44ad8a:	sub    DWORD PTR [rax],esp
  44ad8c:	push   rbx
  44ad8d:	rex.RB push r12
  44ad8f:	and    BYTE PTR [rbx+0x43],dl
  44ad92:	rex.W
  44ad93:	rex.RB
  44ad94:	rex.WRB
  44ad95:	and    BYTE PTR [rip+0x73],spl        # 0x44ae0f
  44ad9c:	add    BYTE PTR [rax],al
  44ad9e:	add    BYTE PTR [rax],al
  44ada0:	rex.B
  44ada1:	rex.WR push rsp
  44ada3:	rex.RB push r10
  44ada5:	and    BYTE PTR [rdi+0x50],cl
  44ada8:	rex.RB push r10
  44adaa:	push   r12
  44adac:	rex.WRXB push r10
  44adae:	and    BYTE PTR [rbx+0x4c],al
  44adb1:	push   r11
  44adb3:	push   rbx
  44adb4:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399ce2d
  44adba:	rex.WB
  44adbb:	rex.WRX
  44adbc:	rex.RXB and BYTE PTR [rip+0x45522073],r12b        # 0x4596ce36
  44adc3:	rex.WRX
  44adc4:	rex.B
  44adc5:	rex.WRB
  44adc6:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44adcb:	and    eax,0x4c410a73
  44add0:	push   rsp
  44add1:	rex.RB push r10
  44add3:	and    BYTE PTR [rdi+0x50],cl
  44add6:	rex.RB push r10
  44add8:	push   r12
  44adda:	rex.WRXB push r10
  44addc:	and    BYTE PTR [rbx+0x4c],al
  44addf:	push   r11
  44ade1:	push   rbx
  44ade2:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399ce5b
  44ade8:	rex.WB
  44ade9:	rex.WRX
  44adea:	rex.RXB and BYTE PTR [rip+0x574f2073],r12b        # 0x5793ce64
  44adf1:	rex.WRX
  44adf2:	rex.RB push r10
  44adf4:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44adf8:	and    eax,0x4c410a73
  44adfd:	push   rsp
  44adfe:	rex.RB push r10
  44ae00:	and    BYTE PTR [rdi+0x50],cl
  44ae03:	rex.RB push r10
  44ae05:	push   r12
  44ae07:	rex.WRXB push r10
  44ae09:	and    BYTE PTR [rbx+0x4c],al
  44ae0c:	push   r11
  44ae0e:	push   rbx
  44ae0f:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399ce88
  44ae15:	rex.WB
  44ae16:	rex.WRX
  44ae17:	rex.RXB and BYTE PTR [rip+0x45532073],r12b        # 0x4597ce91
  44ae1e:	push   rsp
  44ae1f:	and    BYTE PTR [rbx+0x43],dl
  44ae22:	rex.W
  44ae23:	rex.RB
  44ae24:	rex.WRB
  44ae25:	and    BYTE PTR [rip+0x73],spl        # 0x44ae9f
  44ae2c:	add    BYTE PTR [rax],al
  44ae2e:	add    BYTE PTR [rax],al
  44ae30:	rex.B
  44ae31:	rex.WR push rsp
  44ae33:	rex.RB push r10
  44ae35:	and    BYTE PTR [rdi+0x50],cl
  44ae38:	rex.RB push r10
  44ae3a:	push   r12
  44ae3c:	rex.WRXB push r10
  44ae3e:	and    BYTE PTR [rsi+0x41],al
  44ae41:	rex.WRB
  44ae42:	rex.WB
  44ae43:	rex.WR pop rcx
  44ae45:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399cebe
  44ae4b:	rex.WB
  44ae4c:	rex.WRX
  44ae4d:	rex.RXB and BYTE PTR [rip+0x44412073],r12b        # 0x4485cec7
  44ae54:	or     r12b,BYTE PTR [rax]
  44ae57:	and    BYTE PTR [rbx+0x20],bh
  44ae5a:	and    BYTE PTR [rdi+0x50],cl
  44ae5d:	rex.RB push r10
  44ae5f:	push   r12
  44ae61:	rex.WRXB push r10
  44ae63:	and    BYTE PTR [rip+0x73252073],ah        # 0x7369cedc
  44ae69:	and    BYTE PTR [rax],ch
  44ae6b:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2564dae4
  44ae71:	jae    0x44ae93
  44ae73:	sub    DWORD PTR [rax],esp
  44ae75:	pop    rbx
  44ae76:	and    BYTE PTR [rsi+0x4f],al
  44ae79:	push   rdx
  44ae7a:	and    BYTE PTR [rbx+0x45],dl
  44ae7d:	push   r10
  44ae7f:	rex.XB
  44ae80:	rex.W and BYTE PTR [rax+riz*1+0x46],dil
  44ae85:	rex.WRXB push r10
  44ae87:	and    BYTE PTR [rdi+0x52],cl
  44ae8a:	rex.R
  44ae8b:	rex.RB push r10
  44ae8d:	and    BYTE PTR [rdx+0x59],al
  44ae90:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1cf09
  44ae96:	and    BYTE PTR [rax],ah
  44ae98:	and    BYTE PTR [rax+riz*1+0x46],bh
  44ae9c:	push   rbp
  44ae9d:	rex.WRX
  44ae9e:	rex.XB push r12
  44aea0:	rex.WB
  44aea1:	rex.WRXB
  44aea2:	rex.WRX and BYTE PTR [rip+0x205b2073],r12b        # 0x209fcf1c
  44aea9:	sub    BYTE PTR [rax],ah
  44aeab:	and    eax,0x205b2073
  44aeb0:	sub    al,0x20
  44aeb2:	and    eax,0x205d2073
  44aeb7:	sub    DWORD PTR [rax],esp
  44aeb9:	pop    rbp
  44aeba:	and    BYTE PTR [rip+0x20282073],ah        # 0x206ccf33
  44aec0:	and    eax,0x2c5b2073
  44aec5:	and    BYTE PTR [rsi],ch
  44aec7:	cs cs pop rbp
  44aeca:	and    BYTE PTR [rcx],ch
  44aecc:	or     ah,BYTE PTR [rax]
  44aece:	and    BYTE PTR [rbp+0x20],bh
  44aed1:	pop    rbx
  44aed2:	sub    al,0x20
  44aed4:	cs cs and BYTE PTR cs:[rbp+0xa],bl
  44aeda:	rex.B
  44aedb:	rex.WR push rsp
  44aedd:	rex.RB push r10
  44aedf:	and    BYTE PTR [rdi+0x50],cl
  44aee2:	rex.RB push r10
  44aee4:	push   r12
  44aee6:	rex.WRXB push r10
  44aee8:	and    BYTE PTR [rsi+0x41],al
  44aeeb:	rex.WRB
  44aeec:	rex.WB
  44aeed:	rex.WR pop rcx
  44aeef:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399cf68
  44aef5:	rex.WB
  44aef6:	rex.WRX
  44aef7:	rex.RXB and BYTE PTR [rip+0x52442073],r12b        # 0x5288cf71
  44aefe:	rex.WRXB push r8
  44af00:	or     ah,BYTE PTR [rax]
  44af02:	and    BYTE PTR [rbx+0x20],bh
  44af05:	and    BYTE PTR [rdi+0x50],cl
  44af08:	rex.RB push r10
  44af0a:	push   r12
  44af0c:	rex.WRXB push r10
  44af0e:	and    BYTE PTR [rip+0x20282073],ah        # 0x206ccf87
  44af14:	and    eax,0x205b2073
  44af19:	sub    al,0x20
  44af1b:	and    eax,0x205d2073
  44af20:	sub    DWORD PTR [rdx],ecx
  44af22:	and    BYTE PTR [rax],ah
  44af24:	and    BYTE PTR [rax+riz*1+0x46],bh
  44af28:	push   rbp
  44af29:	rex.WRX
  44af2a:	rex.XB push r12
  44af2c:	rex.WB
  44af2d:	rex.WRXB
  44af2e:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206ccfa8
  44af35:	and    eax,0x205b2073
  44af3a:	sub    al,0x20
  44af3c:	and    eax,0x205d2073
  44af41:	sub    DWORD PTR [rdx],ecx
  44af43:	and    BYTE PTR [rax],ah
  44af45:	jge    0x44af67
  44af47:	pop    rbx
  44af48:	sub    al,0x20
  44af4a:	cs cs and BYTE PTR cs:[rbp+0xa],bl
  44af50:	rex.B
  44af51:	rex.WR push rsp
  44af53:	rex.RB push r10
  44af55:	and    BYTE PTR [rdi+0x50],cl
  44af58:	rex.RB push r10
  44af5a:	push   r12
  44af5c:	rex.WRXB push r10
  44af5e:	and    BYTE PTR [rsi+0x41],al
  44af61:	rex.WRB
  44af62:	rex.WB
  44af63:	rex.WR pop rcx
  44af65:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399cfde
  44af6b:	rex.WB
  44af6c:	rex.WRX
  44af6d:	rex.RXB and BYTE PTR [rip+0x45522073],r12b        # 0x4596cfe7
  44af74:	rex.WRX
  44af75:	rex.B
  44af76:	rex.WRB
  44af77:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44af7c:	and    eax,0x4c410a73
  44af81:	push   rsp
  44af82:	rex.RB push r10
  44af84:	and    BYTE PTR [rdi+0x50],cl
  44af87:	rex.RB push r10
  44af89:	push   r12
  44af8b:	rex.WRXB push r10
  44af8d:	and    BYTE PTR [rsi+0x41],al
  44af90:	rex.WRB
  44af91:	rex.WB
  44af92:	rex.WR pop rcx
  44af94:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399d00d
  44af9a:	rex.WB
  44af9b:	rex.WRX
  44af9c:	rex.RXB and BYTE PTR [rip+0x574f2073],r12b        # 0x5793d016
  44afa3:	rex.WRX
  44afa4:	rex.RB push r10
  44afa6:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44afaa:	and    eax,0x4c410a73
  44afaf:	push   rsp
  44afb0:	rex.RB push r10
  44afb2:	and    BYTE PTR [rdi+0x50],cl
  44afb5:	rex.RB push r10
  44afb7:	push   r12
  44afb9:	rex.WRXB push r10
  44afbb:	and    BYTE PTR [rsi+0x41],al
  44afbe:	rex.WRB
  44afbf:	rex.WB
  44afc0:	rex.WR pop rcx
  44afc2:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399d03b
  44afc8:	rex.WB
  44afc9:	rex.WRX
  44afca:	rex.RXB and BYTE PTR [rip+0x45532073],r12b        # 0x4597d044
  44afd1:	push   rsp
  44afd2:	and    BYTE PTR [rbx+0x43],dl
  44afd5:	rex.W
  44afd6:	rex.RB
  44afd7:	rex.WRB
  44afd8:	and    BYTE PTR [rip+0x706f0073],spl        # 0x70b3b052
  44afdf:	pop    rdi
  44afe0:	je     0x44b05b
  44afe2:	jo     0x44b049
  44afe4:	add    BYTE PTR [rbx+0x75],dh
  44afe7:	jo     0x44b059
  44afe9:	outs   dx,DWORD PTR ds:[rsi]
  44afea:	jb     0x44b060
  44afec:	pop    rdi
  44afed:	outs   dx,BYTE PTR ds:[rsi]
  44afee:	jne    0x44b05d
  44aff0:	(bad)  
  44aff1:	gs jb  0x44aff4
  44aff4:	jae    0x44b06a
  44aff6:	jb     0x44b059
  44aff8:	je     0x44b05f
  44affa:	addr32 jns 0x44b05c
  44affd:	outs   dx,BYTE PTR ds:[rsi]
  44affe:	jne    0x44b06d
  44b000:	(bad)  
  44b001:	gs jb  0x44b004
  44b004:	(bad)  
  44b005:	jb     0x44b06e
  44b007:	jne    0x44b076
  44b009:	outs   dx,BYTE PTR gs:[rsi]
  44b00b:	je     0x44b06c
  44b00d:	je     0x44b088
  44b00f:	jo     0x44b076
  44b011:	add    BYTE PTR [rbx+0x6f],dh
  44b014:	jb     0x44b08a
  44b016:	pop    rdi
  44b017:	data16 (bad) 
  44b019:	ins    DWORD PTR es:[rdi],dx
  44b01a:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x656d616e
  44b022:	add    BYTE PTR [rax],al
  44b024:	add    BYTE PTR [rax],al
  44b026:	add    BYTE PTR [rax],al
  44b028:	rex.B
  44b029:	rex.WR push rsp
  44b02b:	rex.RB push r10
  44b02d:	and    BYTE PTR [rdx+0x4f],dl
  44b030:	rex.WR
  44b031:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd0ab
  44b038:	pop    rbx
  44b039:	and    BYTE PTR [rdi+0x49],dl
  44b03c:	push   rsp
  44b03d:	rex.W and BYTE PTR [rbp+0x20],bl
  44b041:	and    eax,0x205b2073
  44b046:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44b04c:	pop    rbp
  44b04d:	or     cl,BYTE PTR [rdx]
  44b04f:	and    eax,0x200a0a73
  44b054:	and    BYTE PTR [rax],ah
  44b056:	and    BYTE PTR [rax],ah
  44b058:	and    BYTE PTR [rbx+0x55],dl
  44b05b:	push   rax
  44b05c:	rex.RB push r10
  44b05e:	push   rbp
  44b05f:	push   rbx
  44b060:	rex.RB push r10
  44b062:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44b066:	rex.WRXB push r11
  44b068:	push   rbp
  44b069:	push   rax
  44b06a:	rex.RB push r10
  44b06c:	push   rbp
  44b06d:	push   rbx
  44b06e:	rex.RB push r10
  44b070:	or     ah,BYTE PTR [rax]
  44b072:	and    BYTE PTR [rax],ah
  44b074:	and    BYTE PTR [rax+riz*1+0x43],bh
  44b078:	push   rdx
  44b079:	rex.RB
  44b07a:	push   r12
  44b07c:	rex.RB
  44b07d:	rex.R
  44b07e:	and    BYTE PTR [rax+r12*1+0x4e],dil
  44b083:	rex.WRXB
  44b084:	rex.XB push r10
  44b086:	rex.RB
  44b087:	push   r12
  44b089:	rex.RB
  44b08a:	rex.R
  44b08b:	rex.X or spl,BYTE PTR [rax]
  44b08e:	and    BYTE PTR [rax],ah
  44b090:	and    BYTE PTR [rax+riz*1+0x43],bh
  44b094:	push   rdx
  44b095:	rex.RB
  44b096:	push   r12
  44b098:	rex.RB push r10
  44b09a:	rex.WRXB
  44b09b:	rex.WR
  44b09c:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44b0a1:	rex.WRXB
  44b0a2:	rex.XB push r10
  44b0a4:	rex.RB
  44b0a5:	push   r12
  44b0a7:	rex.RB push r10
  44b0a9:	rex.WRXB
  44b0aa:	rex.WR
  44b0ab:	or     r12b,BYTE PTR [r8]
  44b0ae:	and    BYTE PTR [rax],ah
  44b0b0:	and    BYTE PTR [rax+riz*1+0x43],bh
  44b0b4:	push   rdx
  44b0b5:	rex.RB
  44b0b6:	push   r12
  44b0b8:	rex.RB push r13
  44b0ba:	push   rbx
  44b0bb:	rex.RB push r10
  44b0bd:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44b0c1:	rex.WRXB
  44b0c2:	rex.XB push r10
  44b0c4:	rex.RB
  44b0c5:	push   r12
  44b0c7:	rex.RB push r13
  44b0c9:	push   rbx
  44b0ca:	rex.RB push r10
  44b0cc:	or     ah,BYTE PTR [rax]
  44b0ce:	and    BYTE PTR [rax],ah
  44b0d0:	and    BYTE PTR [rax+riz*1+0x49],bh
  44b0d4:	rex.WRX
  44b0d5:	rex.W
  44b0d6:	rex.RB push r10
  44b0d8:	rex.WB push r12
  44b0da:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44b0de:	rex.WRXB
  44b0df:	rex.WB
  44b0e0:	rex.WRX
  44b0e1:	rex.W
  44b0e2:	rex.RB push r10
  44b0e4:	rex.WB push r12
  44b0e6:	or     ah,BYTE PTR [rax]
  44b0e8:	and    BYTE PTR [rax],ah
  44b0ea:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44b0ee:	rex.WRXB
  44b0ef:	rex.RXB
  44b0f0:	rex.WB
  44b0f1:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44b0f6:	rex.WRXB
  44b0f7:	rex.WR
  44b0f8:	rex.WRXB
  44b0f9:	rex.RXB
  44b0fa:	rex.WB
  44b0fb:	rex.WRX or r12b,BYTE PTR [rax]
  44b0fe:	and    BYTE PTR [rax],ah
  44b100:	and    BYTE PTR [rax+riz*1+0x52],bh
  44b104:	rex.RB push r8
  44b106:	rex.WR
  44b107:	rex.WB
  44b108:	rex.XB
  44b109:	push   r12
  44b10b:	rex.WB
  44b10c:	rex.WRXB
  44b10d:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44b112:	rex.WRXB push r10
  44b114:	rex.RB push r8
  44b116:	rex.WR
  44b117:	rex.WB
  44b118:	rex.XB
  44b119:	push   r12
  44b11b:	rex.WB
  44b11c:	rex.WRXB
  44b11d:	rex.WRX or r12b,BYTE PTR [rax]
  44b120:	and    BYTE PTR [rax],ah
  44b122:	and    BYTE PTR [rax+riz*1+0x43],bh
  44b126:	rex.WRXB
  44b127:	rex.WRX
  44b128:	rex.WRX
  44b129:	rex.RB
  44b12a:	rex.XB push r12
  44b12c:	rex.WB
  44b12d:	rex.WRXB
  44b12e:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  44b133:	rex.WB push r12
  44b135:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064bbae
  44b13b:	and    BYTE PTR [rax],ah
  44b13d:	jl     0x44b15f
  44b13f:	pop    rbx
  44b140:	and    BYTE PTR [rbp+0x4e],al
  44b143:	rex.XB push r10
  44b145:	pop    rcx
  44b146:	push   rax
  44b147:	push   rsp
  44b148:	rex.RB
  44b149:	and    BYTE PTR [rax+riz*1+0x55],r15b
  44b14e:	rex.WRX
  44b14f:	rex.RB
  44b150:	rex.WRX
  44b151:	rex.XB push r10
  44b153:	pop    rcx
  44b154:	push   rax
  44b155:	push   rsp
  44b156:	rex.RB
  44b157:	and    BYTE PTR [rbp+0x20],r11b
  44b15b:	push   rax
  44b15c:	push   r11
  44b15e:	push   rbx
  44b15f:	push   rdi
  44b160:	rex.WRXB push r10
  44b162:	and    BYTE PTR [rdi],r12b
  44b165:	and    eax,0x200a2773
  44b16a:	and    BYTE PTR [rax],ah
  44b16c:	and    BYTE PTR [rax+riz*1+0x56],bh
  44b170:	rex.B
  44b171:	rex.WR
  44b172:	rex.WB
  44b173:	and    BYTE PTR [rbp+0x4e],r10b
  44b177:	push   rsp
  44b178:	rex.WB
  44b179:	rex.WR and BYTE PTR [rdi],r12b
  44b17c:	and    eax,0xa0a2773
  44b181:	rex.B
  44b182:	rex.WR push rsp
  44b184:	rex.RB push r10
  44b186:	and    BYTE PTR [rdx+0x4f],dl
  44b189:	rex.WR
  44b18a:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596d204
  44b191:	rex.WRX
  44b192:	rex.B
  44b193:	rex.WRB
  44b194:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b199:	and    eax,0x410a0a73
  44b19e:	rex.WR push rsp
  44b1a0:	rex.RB push r10
  44b1a2:	and    BYTE PTR [rdx+0x4f],dl
  44b1a5:	rex.WR
  44b1a6:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd220
  44b1ad:	rex.WB
  44b1ae:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44b1b3:	rex.B
  44b1b4:	rex.X
  44b1b5:	push   r11
  44b1b7:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d231
  44b1be:	push   rbx
  44b1bf:	rex.RB push r12
  44b1c1:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bfd23a
  44b1c7:	push   rsp
  44b1c8:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  44b1cd:	and    BYTE PTR [rbp+0x20],bh
  44b1d0:	jnp    0x44b1f2
  44b1d2:	and    eax,0x207c2073
  44b1d7:	rex.R
  44b1d8:	rex.RB
  44b1d9:	rex.RX
  44b1da:	push   r13
  44b1dc:	rex.WR push rsp
  44b1de:	and    BYTE PTR [rbp+0xa],bh
  44b1e1:	rex.B
  44b1e2:	rex.WR push rsp
  44b1e4:	rex.RB push r10
  44b1e6:	and    BYTE PTR [rdx+0x4f],dl
  44b1e9:	rex.WR
  44b1ea:	and    BYTE PTR [r11+0x20],r15b
  44b1ee:	and    eax,0x207c2073
  44b1f3:	rex.B
  44b1f4:	rex.WR
  44b1f5:	rex.WR and BYTE PTR [rbp+0x20],r15b
  44b1f9:	pop    rbx
  44b1fa:	and    BYTE PTR [rcx+0x4e],cl
  44b1fd:	and    BYTE PTR [rcx+rax*2+0x54],al
  44b201:	rex.B
  44b202:	rex.X
  44b203:	push   r11
  44b205:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d27f
  44b20c:	push   rbx
  44b20d:	rex.RB push r12
  44b20f:	and    BYTE PTR [rip+0x52462073],ah        # 0x528ad288
  44b215:	rex.WRXB
  44b216:	rex.WRB and BYTE PTR [r11+0x55],r8b
  44b21a:	push   rdx
  44b21b:	push   rdx
  44b21c:	rex.RB
  44b21d:	rex.WRX push rsp
  44b21f:	or     al,BYTE PTR [rcx+0x4c]
  44b222:	push   rsp
  44b223:	rex.RB push r10
  44b225:	and    BYTE PTR [rdx+0x4f],dl
  44b228:	rex.WR
  44b229:	and    BYTE PTR [r11+0x20],r15b
  44b22d:	and    eax,0x207c2073
  44b232:	rex.B
  44b233:	rex.WR
  44b234:	rex.WR and BYTE PTR [rbp+0x20],r15b
  44b238:	pop    rbx
  44b239:	and    BYTE PTR [rcx+0x4e],cl
  44b23c:	and    BYTE PTR [rcx+rax*2+0x54],al
  44b240:	rex.B
  44b241:	rex.X
  44b242:	push   r11
  44b244:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d2be
  44b24b:	push   rdx
  44b24c:	rex.RB push r11
  44b24e:	rex.RB push r12
  44b250:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85bcc9
  44b256:	push   rsp
  44b257:	rex.RB push r10
  44b259:	and    BYTE PTR [rdx+0x4f],dl
  44b25c:	rex.WR
  44b25d:	and    BYTE PTR [r11+0x20],r15b
  44b261:	and    eax,0x207c2073
  44b266:	rex.B
  44b267:	rex.WR
  44b268:	rex.WR and BYTE PTR [rbp+0x20],r15b
  44b26c:	pop    rbx
  44b26d:	and    BYTE PTR [rcx+0x4e],cl
  44b270:	and    BYTE PTR [rcx+rax*2+0x54],al
  44b274:	rex.B
  44b275:	rex.X
  44b276:	push   r11
  44b278:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d2f2
  44b27f:	push   rdx
  44b280:	rex.RB push r11
  44b282:	rex.RB push r12
  44b284:	and    BYTE PTR [rcx+0x4c],al
  44b287:	rex.WR add BYTE PTR [rcx+riz*2+0x74],r12b
  44b28c:	(bad)  
  44b28d:	(bad)  
  44b28f:	jae    0x44b2f6
  44b291:	pop    rdi
  44b292:	outs   dx,BYTE PTR ds:[rsi]
  44b293:	(bad)  
  44b294:	ins    DWORD PTR es:[rdi],dx
  44b295:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  44b29a:	gs jae 0x44b311
  44b29d:	(bad)  
  44b29e:	ins    DWORD PTR es:[rdi],dx
  44b29f:	jo     0x44b2a1
  44b2a1:	jo     0x44b304
  44b2a3:	jae    0x44b318
  44b2a5:	ja     0x44b316
  44b2a7:	jb     0x44b30d
  44b2a9:	add    BYTE PTR [rcx+riz*2+0x62],dh
  44b2ad:	ins    BYTE PTR es:[rdi],dx
  44b2ae:	gs pop rdi
  44b2b0:	outs   dx,BYTE PTR ds:[rsi]
  44b2b1:	(bad)  
  44b2b2:	ins    DWORD PTR es:[rdi],dx
  44b2b3:	add    BYTE PTR gs:[rax],al
  44b2b6:	add    BYTE PTR [rax],al
  44b2b8:	rex.B
  44b2b9:	rex.WR push rsp
  44b2bb:	rex.RB push r10
  44b2bd:	and    BYTE PTR [rdx+0x55],dl
  44b2c0:	rex.WR
  44b2c1:	and    BYTE PTR [rip+0x4e4f2073],r12b        # 0x4e93d33b
  44b2c8:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596d341
  44b2ce:	rex.WRX
  44b2cf:	rex.B
  44b2d0:	rex.WRB
  44b2d1:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b2d6:	and    eax,0x73
  44b2db:	add    BYTE PTR [rax],al
  44b2dd:	add    BYTE PTR [rax],al
  44b2df:	add    BYTE PTR [rcx+0x4c],al
  44b2e2:	push   rsp
  44b2e3:	rex.RB push r10
  44b2e5:	and    BYTE PTR [rbx+0x43],dl
  44b2e8:	rex.W
  44b2e9:	rex.RB
  44b2ea:	rex.WRB
  44b2eb:	and    BYTE PTR [rip+0x45522073],spl        # 0x4596d365
  44b2f2:	rex.WRX
  44b2f3:	rex.B
  44b2f4:	rex.WRB
  44b2f5:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b2fa:	and    eax,0x4c410a73
  44b2ff:	push   rsp
  44b300:	rex.RB push r10
  44b302:	and    BYTE PTR [rbx+0x43],dl
  44b305:	rex.W
  44b306:	rex.RB
  44b307:	rex.WRB
  44b308:	and    BYTE PTR [rip+0x574f2073],spl        # 0x5793d382
  44b30f:	rex.WRX
  44b310:	rex.RB push r10
  44b312:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44b316:	and    eax,0x6e690073
  44b31b:	movsxd esi,DWORD PTR [rdx+0x65]
  44b31e:	ins    DWORD PTR es:[rdi],dx
  44b31f:	outs   dx,BYTE PTR gs:[rsi]
  44b321:	je     0x44b323
  44b323:	add    BYTE PTR [rax],al
  44b325:	add    BYTE PTR [rax],al
  44b327:	add    BYTE PTR [rcx+0x4c],al
  44b32a:	push   rsp
  44b32b:	rex.RB push r10
  44b32d:	and    BYTE PTR [rbx+0x45],dl
  44b330:	push   rcx
  44b331:	push   rbp
  44b332:	rex.RB
  44b333:	rex.WRX
  44b334:	rex.XB
  44b335:	and    BYTE PTR [r11+0x20],r11b
  44b339:	rex.WB
  44b33a:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b33e:	rex.WB push r11
  44b340:	push   rsp
  44b341:	push   rbx
  44b342:	and    BYTE PTR [rbp+0x20],bl
  44b345:	and    eax,0x205b2073
  44b34a:	rex.WB
  44b34b:	rex.WRX
  44b34c:	rex.XB push r10
  44b34e:	rex.RB
  44b34f:	rex.WRB
  44b350:	rex.RB
  44b351:	rex.WRX push rsp
  44b353:	and    BYTE PTR [rbx+0x20],bl
  44b356:	rex.X pop rcx
  44b358:	and    BYTE PTR [rbp+0x20],bl
  44b35b:	and    eax,0xa5d2073
  44b360:	and    BYTE PTR [rax],ah
  44b362:	and    BYTE PTR [rax],ah
  44b364:	pop    rbx
  44b365:	and    BYTE PTR [rbp+0x49],cl
  44b368:	rex.WRX push rsi
  44b36a:	rex.B
  44b36b:	rex.WR push rbp
  44b36d:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c0d3e7
  44b374:	rex.WRX
  44b375:	rex.WRXB and BYTE PTR [r13+0x49],r9b
  44b379:	rex.WRX push rsi
  44b37b:	rex.B
  44b37c:	rex.WR push rbp
  44b37e:	and    BYTE PTR [r13+0x20],r11b
  44b382:	pop    rbx
  44b383:	and    BYTE PTR [rbp+0x41],cl
  44b386:	pop    rax
  44b387:	push   rsi
  44b388:	rex.B
  44b389:	rex.WR push rbp
  44b38b:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c0d405
  44b392:	rex.WRX
  44b393:	rex.WRXB and BYTE PTR [r13+0x41],r9b
  44b397:	pop    rax
  44b398:	push   rsi
  44b399:	rex.B
  44b39a:	rex.WR push rbp
  44b39c:	and    BYTE PTR [r13+0xa],r11b
  44b3a0:	and    BYTE PTR [rax],ah
  44b3a2:	and    BYTE PTR [rax],ah
  44b3a4:	pop    rbx
  44b3a5:	and    BYTE PTR [rbx+0x54],dl
  44b3a8:	push   r10
  44b3aa:	push   rsp
  44b3ab:	and    BYTE PTR [rbx+0x20],bl
  44b3ae:	push   rdi
  44b3af:	rex.WB push r12
  44b3b1:	rex.W and BYTE PTR [rbp+0x20],bl
  44b3b5:	and    eax,0xa5d2073
  44b3ba:	and    BYTE PTR [rax],ah
  44b3bc:	and    BYTE PTR [rax],ah
  44b3be:	pop    rbx
  44b3bf:	and    BYTE PTR [rdx+0x45],dl
  44b3c2:	push   rbx
  44b3c3:	push   rsp
  44b3c4:	push   r10
  44b3c6:	push   rsp
  44b3c7:	and    BYTE PTR [rbx+0x20],bl
  44b3ca:	pop    rbx
  44b3cb:	and    BYTE PTR [rdi+0x49],dl
  44b3ce:	push   rsp
  44b3cf:	rex.W and BYTE PTR [rbp+0x20],bl
  44b3d3:	and    eax,0x205d2073
  44b3d8:	pop    rbp
  44b3d9:	or     ah,BYTE PTR [rax]
  44b3db:	and    BYTE PTR [rax],ah
  44b3dd:	and    BYTE PTR [rbx+0x20],bl
  44b3e0:	rex.XB
  44b3e1:	rex.B
  44b3e2:	rex.XB
  44b3e3:	rex.W
  44b3e4:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d45e
  44b3eb:	pop    rbx
  44b3ec:	and    BYTE PTR [rbx+0x20],bl
  44b3ef:	rex.WRX
  44b3f0:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  44b3f4:	rex.XB pop r9
  44b3f6:	rex.XB
  44b3f7:	rex.WR
  44b3f8:	and    BYTE PTR [r13+0xa],r11b
  44b3fc:	and    BYTE PTR [rax],ah
  44b3fe:	and    BYTE PTR [rax],ah
  44b400:	pop    rbx
  44b401:	and    BYTE PTR [rdi+0x57],cl
  44b404:	rex.WRX
  44b405:	rex.RB
  44b406:	and    BYTE PTR [rdx+0x59],r8b
  44b40a:	and    BYTE PTR [rbx+0x20],bh
  44b40d:	and    eax,0x73252e73
  44b412:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44b416:	rex.WRXB
  44b417:	rex.WRX
  44b418:	and    BYTE PTR [r13+0x20],r15b
  44b41c:	pop    rbp
  44b41d:	or     al,BYTE PTR [rcx+0x4c]
  44b420:	push   rsp
  44b421:	rex.RB push r10
  44b423:	and    BYTE PTR [rbx+0x45],dl
  44b426:	push   rcx
  44b427:	push   rbp
  44b428:	rex.RB
  44b429:	rex.WRX
  44b42a:	rex.XB
  44b42b:	and    BYTE PTR [r11+0x20],r11b
  44b42f:	rex.WB
  44b430:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b434:	rex.WB push r11
  44b436:	push   rsp
  44b437:	push   rbx
  44b438:	and    BYTE PTR [rbp+0x20],bl
  44b43b:	and    eax,0x574f2073
  44b440:	rex.WRX
  44b441:	rex.RB push r10
  44b443:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44b447:	and    eax,0x4c410a73
  44b44c:	push   rsp
  44b44d:	rex.RB push r10
  44b44f:	and    BYTE PTR [rbx+0x45],dl
  44b452:	push   rcx
  44b453:	push   rbp
  44b454:	rex.RB
  44b455:	rex.WRX
  44b456:	rex.XB
  44b457:	and    BYTE PTR [r11+0x20],r11b
  44b45b:	rex.WB
  44b45c:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b460:	rex.WB push r11
  44b462:	push   rsp
  44b463:	push   rbx
  44b464:	and    BYTE PTR [rbp+0x20],bl
  44b467:	and    eax,0x45522073
  44b46c:	rex.WRX
  44b46d:	rex.B
  44b46e:	rex.WRB
  44b46f:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b474:	and    eax,0x4c410a73
  44b479:	push   rsp
  44b47a:	rex.RB push r10
  44b47c:	and    BYTE PTR [rbx+0x45],dl
  44b47f:	push   rcx
  44b480:	push   rbp
  44b481:	rex.RB
  44b482:	rex.WRX
  44b483:	rex.XB
  44b484:	and    BYTE PTR [r11+0x20],r11b
  44b488:	rex.WB
  44b489:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b48d:	rex.WB push r11
  44b48f:	push   rsp
  44b490:	push   rbx
  44b491:	and    BYTE PTR [rbp+0x20],bl
  44b494:	and    eax,0x45532073
  44b499:	push   rsp
  44b49a:	and    BYTE PTR [rbx+0x43],dl
  44b49d:	rex.W
  44b49e:	rex.RB
  44b49f:	rex.WRB
  44b4a0:	and    BYTE PTR [rip+0x61630073],spl        # 0x61a7b51a
  44b4a7:	movsxd ebp,DWORD PTR [rax+0x65]
  44b4aa:	add    BYTE PTR [rdx+0x65],dh
  44b4ad:	jae    0x44b523
  44b4af:	(bad)  
  44b4b0:	jb     0x44b526
  44b4b2:	add    BYTE PTR [rbx+0x74],dh
  44b4b5:	(bad)  
  44b4b6:	jb     0x44b52c
  44b4b8:	add    BYTE PTR [rbp+0x61],ch
  44b4bb:	js     0x44b533
  44b4bd:	(bad)  
  44b4be:	ins    BYTE PTR es:[rdi],dx
  44b4bf:	jne    0x44b526
  44b4c1:	add    BYTE PTR [rbp+0x69],ch
  44b4c4:	outs   dx,BYTE PTR ds:[rsi]
  44b4c5:	jbe    0x44b528
  44b4c7:	ins    BYTE PTR es:[rdi],dx
  44b4c8:	jne    0x44b52f
  44b4ca:	add    BYTE PTR [rax],al
  44b4cc:	add    BYTE PTR [rax],al
  44b4ce:	add    BYTE PTR [rax],al
  44b4d0:	rex.B
  44b4d1:	rex.WR push rsp
  44b4d3:	rex.RB push r10
  44b4d5:	and    BYTE PTR [rbx+0x45],dl
  44b4d8:	push   rdx
  44b4d9:	push   rsi
  44b4da:	rex.RB push r10
  44b4dc:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fd555
  44b4e2:	push   rsi
  44b4e3:	rex.RB push r10
  44b4e5:	push   rbx
  44b4e6:	rex.WB
  44b4e7:	rex.WRXB
  44b4e8:	rex.WRX and BYTE PTR [rdi],r12b
  44b4eb:	and    eax,0x5d202773
  44b4f0:	or     ah,BYTE PTR [rax]
  44b4f2:	and    BYTE PTR [rax],ah
  44b4f4:	and    BYTE PTR [rbx+0x20],bl
  44b4f7:	rex.WRXB push r8
  44b4f9:	push   rsp
  44b4fa:	rex.WB
  44b4fb:	rex.WRXB
  44b4fc:	rex.WRX push rbx
  44b4fe:	and    BYTE PTR [rax],ch
  44b500:	and    BYTE PTR [rbx+0x20],bl
  44b503:	rex.B
  44b504:	rex.R
  44b505:	and    BYTE PTR [rax+riz*1+0x53],r15b
  44b50a:	rex.RB push r12
  44b50c:	and    BYTE PTR [rax+riz*1+0x44],bh
  44b510:	push   rdx
  44b511:	rex.WRXB push r8
  44b513:	and    BYTE PTR [rbp+0x20],bl
  44b516:	and    eax,0x275b2073
  44b51b:	and    eax,0x205d2773
  44b520:	pop    rbx
  44b521:	sub    al,0x20
  44b523:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44b529:	sub    DWORD PTR [rax],esp
  44b52b:	pop    rbp
  44b52c:	or     al,BYTE PTR [rcx+0x4c]
  44b52f:	push   rsp
  44b530:	rex.RB push r10
  44b532:	and    BYTE PTR [rbx+0x45],dl
  44b535:	push   rdx
  44b536:	push   rsi
  44b537:	rex.RB push r10
  44b539:	and    BYTE PTR [rip+0x574f2073],ah        # 0x5793d5b2
  44b53f:	rex.WRX
  44b540:	rex.RB push r10
  44b542:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44b546:	and    eax,0x4c410a73
  44b54b:	push   rsp
  44b54c:	rex.RB push r10
  44b54e:	and    BYTE PTR [rbx+0x45],dl
  44b551:	push   rdx
  44b552:	push   rsi
  44b553:	rex.RB push r10
  44b555:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596d5ce
  44b55b:	rex.WRX
  44b55c:	rex.B
  44b55d:	rex.WRB
  44b55e:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b563:	and    eax,0x73
  44b568:	rex.B
  44b569:	rex.WR push rsp
  44b56b:	rex.RB push r10
  44b56d:	and    BYTE PTR [rbx+0x59],dl
  44b570:	push   rbx
  44b571:	push   rsp
  44b572:	rex.RB
  44b573:	rex.WRB and BYTE PTR [r11+0x45],r10b
  44b577:	push   rsp
  44b578:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bfd5f1
  44b57e:	push   rsp
  44b57f:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  44b584:	and    BYTE PTR [rbp+0x20],bh
  44b587:	jnp    0x44b5a9
  44b589:	and    eax,0x207c2073
  44b58e:	(bad)  
  44b58f:	and    eax,0x7c202773
  44b594:	and    BYTE PTR [rbp+rax*2+0x46],al
  44b598:	push   r13
  44b59a:	rex.WR push rsp
  44b59c:	and    BYTE PTR [rbp+0xa],bh
  44b59f:	or     al,BYTE PTR [rcx+0x4c]
  44b5a2:	push   rsp
  44b5a3:	rex.RB push r10
  44b5a5:	and    BYTE PTR [rbx+0x59],dl
  44b5a8:	push   rbx
  44b5a9:	push   rsp
  44b5aa:	rex.RB
  44b5ab:	rex.WRB and BYTE PTR [r10+0x45],r10b
  44b5af:	push   rbx
  44b5b0:	rex.RB push r12
  44b5b2:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85c02b
  44b5b8:	push   rsp
  44b5b9:	rex.RB push r10
  44b5bb:	and    BYTE PTR [rbx+0x59],dl
  44b5be:	push   rbx
  44b5bf:	push   rsp
  44b5c0:	rex.RB
  44b5c1:	rex.WRB and BYTE PTR [r10+0x45],r10b
  44b5c5:	push   rbx
  44b5c6:	rex.RB push r12
  44b5c8:	and    BYTE PTR [rcx+0x4c],al
  44b5cb:	rex.WR add BYTE PTR [rax],r8b
  44b5ce:	add    BYTE PTR [rax],al
  44b5d0:	rex.B
  44b5d1:	rex.WR push rsp
  44b5d3:	rex.RB push r10
  44b5d5:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b5d9:	rex.WR
  44b5da:	and    BYTE PTR [r11+0x20],r11b
  44b5de:	rex.WB
  44b5df:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b5e3:	rex.WB push r11
  44b5e5:	push   rsp
  44b5e6:	push   rbx
  44b5e7:	and    BYTE PTR [rbp+0x20],bl
  44b5ea:	pop    rbx
  44b5eb:	and    BYTE PTR [rdi+0x4e],cl
  44b5ee:	rex.WR pop rcx
  44b5f0:	and    BYTE PTR [rbp+0x20],bl
  44b5f3:	and    eax,0x205b2073
  44b5f8:	sub    ah,BYTE PTR [rax]
  44b5fa:	pop    rbp
  44b5fb:	or     ah,BYTE PTR [rax]
  44b5fd:	and    BYTE PTR [rax],ah
  44b5ff:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fd678
  44b605:	and    BYTE PTR [rsi],ch
  44b607:	cs and BYTE PTR cs:[rbp+0xa],bl
  44b60c:	rex.B
  44b60d:	rex.WR push rsp
  44b60f:	rex.RB push r10
  44b611:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b615:	rex.WR
  44b616:	and    BYTE PTR [r11+0x20],r11b
  44b61a:	rex.WB
  44b61b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b61f:	rex.WB push r11
  44b621:	push   rsp
  44b622:	push   rbx
  44b623:	and    BYTE PTR [rbp+0x20],bl
  44b626:	pop    rbx
  44b627:	and    BYTE PTR [rdi+0x4e],cl
  44b62a:	rex.WR pop rcx
  44b62c:	and    BYTE PTR [rbp+0x20],bl
  44b62f:	and    eax,0x205b2073
  44b634:	sub    ah,BYTE PTR [rax]
  44b636:	pop    rbp
  44b637:	or     ah,BYTE PTR [rax]
  44b639:	and    BYTE PTR [rax],ah
  44b63b:	and    BYTE PTR [rdx+0x45],dl
  44b63e:	rex.WRX
  44b63f:	rex.B
  44b640:	rex.WRB
  44b641:	and    BYTE PTR [r11+0x20],r11b
  44b645:	rex.XB
  44b646:	rex.WRXB
  44b647:	rex.WR push rbp
  44b649:	rex.WRB
  44b64a:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b64e:	and    eax,0x4f542073
  44b653:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85c0cc
  44b659:	push   rsp
  44b65a:	rex.RB push r10
  44b65c:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b660:	rex.WR
  44b661:	and    BYTE PTR [r11+0x20],r11b
  44b665:	rex.WB
  44b666:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b66a:	rex.WB push r11
  44b66c:	push   rsp
  44b66d:	push   rbx
  44b66e:	and    BYTE PTR [rbp+0x20],bl
  44b671:	pop    rbx
  44b672:	and    BYTE PTR [rdi+0x4e],cl
  44b675:	rex.WR pop rcx
  44b677:	and    BYTE PTR [rbp+0x20],bl
  44b67a:	and    eax,0x205b2073
  44b67f:	sub    ah,BYTE PTR [rax]
  44b681:	pop    rbp
  44b682:	or     ah,BYTE PTR [rax]
  44b684:	and    BYTE PTR [rax],ah
  44b686:	and    BYTE PTR [rdx+0x45],dl
  44b689:	rex.WRX
  44b68a:	rex.B
  44b68b:	rex.WRB
  44b68c:	and    BYTE PTR [r11+0x4f],r8b
  44b690:	rex.WRX push rbx
  44b692:	push   rsp
  44b693:	push   rdx
  44b694:	rex.B
  44b695:	rex.WB
  44b696:	rex.WRX push rsp
  44b698:	and    BYTE PTR [rip+0x4f542073],ah        # 0x4f98d711
  44b69e:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85c117
  44b6a4:	push   rsp
  44b6a5:	rex.RB push r10
  44b6a7:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b6ab:	rex.WR
  44b6ac:	and    BYTE PTR [r11+0x20],r11b
  44b6b0:	rex.WB
  44b6b1:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b6b5:	rex.WB push r11
  44b6b7:	push   rsp
  44b6b8:	push   rbx
  44b6b9:	and    BYTE PTR [rbp+0x20],bl
  44b6bc:	and    eax,0x20200a73
  44b6c1:	and    BYTE PTR [rax],ah
  44b6c3:	push   rdx
  44b6c4:	rex.RB
  44b6c5:	rex.WRX
  44b6c6:	rex.B
  44b6c7:	rex.WRB
  44b6c8:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44b6cd:	and    eax,0x4c410a73
  44b6d2:	push   rsp
  44b6d3:	rex.RB push r10
  44b6d5:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b6d9:	rex.WR
  44b6da:	and    BYTE PTR [r11+0x20],r11b
  44b6de:	rex.WB
  44b6df:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44b6e3:	rex.WB push r11
  44b6e5:	push   rsp
  44b6e6:	push   rbx
  44b6e7:	and    BYTE PTR [rbp+0x20],bl
  44b6ea:	and    eax,0x20200a73
  44b6ef:	and    BYTE PTR [rax],ah
  44b6f1:	push   rbx
  44b6f2:	rex.RB push r12
  44b6f4:	and    BYTE PTR [rbx+0x43],dl
  44b6f7:	rex.W
  44b6f8:	rex.RB
  44b6f9:	rex.WRB
  44b6fa:	and    BYTE PTR [rip+0x4c410a73],spl        # 0x4c85c174
  44b701:	push   rsp
  44b702:	rex.RB push r10
  44b704:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b708:	rex.WR
  44b709:	and    BYTE PTR [r9+0x4c],r8b
  44b70d:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44b711:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b715:	rex.WR
  44b716:	rex.RB push r11
  44b718:	push   rax
  44b719:	rex.B
  44b71a:	rex.XB
  44b71b:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd795
  44b722:	rex.WRXB push r15
  44b724:	rex.WRX
  44b725:	rex.RB
  44b726:	and    BYTE PTR [rdx+0x59],r8b
  44b72a:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fd7a3
  44b730:	and    BYTE PTR [rsi],ch
  44b732:	cs and BYTE PTR cs:[rbp+0x20],bl
  44b737:	pop    rbp
  44b738:	or     ah,BYTE PTR [rax]
  44b73a:	and    BYTE PTR [rax],ah
  44b73c:	and    BYTE PTR [rbx+0x45],dl
  44b73f:	push   rsp
  44b740:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44b744:	rex.WR
  44b745:	rex.RB push r11
  44b747:	push   rax
  44b748:	rex.B
  44b749:	rex.XB
  44b74a:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd7c4
  44b751:	rex.WRX
  44b752:	rex.WRXB push r15
  44b754:	rex.B
  44b755:	rex.WB push r12
  44b757:	and    BYTE PTR [rbp+0xa],bl
  44b75a:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ec1d3
  44b760:	and    BYTE PTR [rax],ah
  44b762:	and    BYTE PTR [rcx+0x44],al
  44b765:	and    BYTE PTR [rbx+0x20],r11b
  44b769:	rex.XB
  44b76a:	rex.WRXB
  44b76b:	rex.WR push rbp
  44b76d:	rex.WRB
  44b76e:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b772:	and    eax,0x73252073
  44b777:	and    BYTE PTR [rbx+0x20],bl
  44b77a:	rex.XB
  44b77b:	rex.WRXB
  44b77c:	rex.WR
  44b77d:	rex.WR
  44b77e:	push   r12
  44b780:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d7fa
  44b787:	pop    rbx
  44b788:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fd801
  44b78e:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44b794:	pop    rbp
  44b795:	or     ah,BYTE PTR [rax]
  44b797:	and    BYTE PTR [rax],ah
  44b799:	and    BYTE PTR [rdx+rdx*2+0x4f],al
  44b79d:	push   rax
  44b79e:	and    BYTE PTR [rbx+0x20],bl
  44b7a1:	rex.XB
  44b7a2:	rex.WRXB
  44b7a3:	rex.WR push rbp
  44b7a5:	rex.WRB
  44b7a6:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b7aa:	pop    rbx
  44b7ab:	and    BYTE PTR [rcx+0x46],cl
  44b7ae:	and    BYTE PTR [rbp+0x58],al
  44b7b1:	rex.WB push r11
  44b7b3:	push   rsp
  44b7b4:	push   rbx
  44b7b5:	and    BYTE PTR [rbp+0x20],bl
  44b7b8:	and    eax,0x205b2073
  44b7bd:	push   rdx
  44b7be:	rex.RB push r11
  44b7c0:	push   rsp
  44b7c1:	push   rdx
  44b7c2:	rex.WB
  44b7c3:	rex.XB push r12
  44b7c5:	and    BYTE PTR [rax+riz*1+0x43],bh
  44b7c9:	push   r11
  44b7cb:	rex.XB
  44b7cc:	rex.B
  44b7cd:	rex.R
  44b7ce:	and    BYTE PTR [r13+0xa],r11b
  44b7d2:	and    BYTE PTR [rax],ah
  44b7d4:	and    BYTE PTR [rax],ah
  44b7d6:	rex.B
  44b7d7:	rex.WR push rsp
  44b7d9:	rex.RB push r10
  44b7db:	and    BYTE PTR [rbx+0x20],bl
  44b7de:	rex.XB
  44b7df:	rex.WRXB
  44b7e0:	rex.WR push rbp
  44b7e2:	rex.WRB
  44b7e3:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b7e7:	and    eax,0x205b2073
  44b7ec:	push   rbx
  44b7ed:	rex.RB push r12
  44b7ef:	and    BYTE PTR [rcx+rax*2+0x54],al
  44b7f3:	and    BYTE PTR [r13+0x20],bl
  44b7f7:	push   rsp
  44b7f8:	pop    rcx
  44b7f9:	push   rax
  44b7fa:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd874
  44b801:	rex.XB
  44b802:	rex.WRXB
  44b803:	rex.WR
  44b804:	rex.WR
  44b805:	push   r12
  44b807:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1d881
  44b80e:	pop    rbx
  44b80f:	and    BYTE PTR [rbp+0x53],dl
  44b812:	rex.WB
  44b813:	rex.WRX
  44b814:	rex.RXB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1d88e
  44b81b:	and    BYTE PTR [rax],ah
  44b81d:	and    BYTE PTR [rax],ah
  44b81f:	rex.B
  44b820:	rex.WR push rsp
  44b822:	rex.RB push r10
  44b824:	and    BYTE PTR [rbx+0x20],bl
  44b827:	rex.XB
  44b828:	rex.WRXB
  44b829:	rex.WR push rbp
  44b82b:	rex.WRB
  44b82c:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b830:	and    eax,0x45532073
  44b835:	push   rsp
  44b836:	and    BYTE PTR [rbp+rax*2+0x46],al
  44b83a:	push   r13
  44b83c:	rex.WR push rsp
  44b83e:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c2b7
  44b844:	and    BYTE PTR [rax],ah
  44b846:	rex.B
  44b847:	rex.WR push rsp
  44b849:	rex.RB push r10
  44b84b:	and    BYTE PTR [rbx+0x20],bl
  44b84e:	rex.XB
  44b84f:	rex.WRXB
  44b850:	rex.WR push rbp
  44b852:	rex.WRB
  44b853:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b857:	and    eax,0x52442073
  44b85c:	rex.WRXB push r8
  44b85e:	and    BYTE PTR [rbp+rax*2+0x46],al
  44b862:	push   r13
  44b864:	rex.WR push rsp
  44b866:	or     ah,BYTE PTR [rax]
  44b868:	and    BYTE PTR [rax],ah
  44b86a:	and    BYTE PTR [rcx+0x4c],al
  44b86d:	push   rsp
  44b86e:	rex.RB push r10
  44b870:	and    BYTE PTR [rbx+0x20],bl
  44b873:	rex.XB
  44b874:	rex.WRXB
  44b875:	rex.WR push rbp
  44b877:	rex.WRB
  44b878:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b87c:	and    eax,0x207b2073
  44b881:	push   rbx
  44b882:	rex.RB push r12
  44b884:	and    BYTE PTR [rax+riz*1+0x44],bh
  44b888:	push   rdx
  44b889:	rex.WRXB push r8
  44b88b:	and    BYTE PTR [rbp+0x20],bh
  44b88e:	rex.WRX
  44b88f:	rex.WRXB push r12
  44b891:	and    BYTE PTR [rsi+0x55],cl
  44b894:	rex.WR
  44b895:	rex.WR or r12b,BYTE PTR [rax]
  44b898:	and    BYTE PTR [rax],ah
  44b89a:	and    BYTE PTR [rcx+0x4c],al
  44b89d:	push   rsp
  44b89e:	rex.RB push r10
  44b8a0:	and    BYTE PTR [rbx+0x20],bl
  44b8a3:	rex.XB
  44b8a4:	rex.WRXB
  44b8a5:	rex.WR push rbp
  44b8a7:	rex.WRB
  44b8a8:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b8ac:	and    eax,0x45532073
  44b8b1:	push   rsp
  44b8b2:	and    BYTE PTR [rbx+0x54],dl
  44b8b5:	push   r12
  44b8b7:	rex.WB push r11
  44b8b9:	push   rsp
  44b8ba:	rex.WB
  44b8bb:	rex.XB push r11
  44b8bd:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c336
  44b8c3:	and    BYTE PTR [rax],ah
  44b8c5:	rex.B
  44b8c6:	rex.WR push rsp
  44b8c8:	rex.RB push r10
  44b8ca:	and    BYTE PTR [rbx+0x20],bl
  44b8cd:	rex.XB
  44b8ce:	rex.WRXB
  44b8cf:	rex.WR push rbp
  44b8d1:	rex.WRB
  44b8d2:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b8d6:	and    eax,0x45532073
  44b8db:	push   rsp
  44b8dc:	and    BYTE PTR [rax],ch
  44b8de:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081d957
  44b8e4:	and    eax,0x2c5b2073
  44b8e9:	and    BYTE PTR [rsi],ch
  44b8eb:	cs and BYTE PTR cs:[rbp+0x20],bl
  44b8f0:	sub    DWORD PTR [rdx],ecx
  44b8f2:	and    BYTE PTR [rax],ah
  44b8f4:	and    BYTE PTR [rax],ah
  44b8f6:	rex.B
  44b8f7:	rex.WR push rsp
  44b8f9:	rex.RB push r10
  44b8fb:	and    BYTE PTR [rbx+0x20],bl
  44b8fe:	rex.XB
  44b8ff:	rex.WRXB
  44b900:	rex.WR push rbp
  44b902:	rex.WRB
  44b903:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b907:	and    eax,0x45522073
  44b90c:	push   rbx
  44b90d:	rex.RB push r12
  44b90f:	and    BYTE PTR [rax],ch
  44b911:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fd98a
  44b917:	and    BYTE PTR [rsi],ch
  44b919:	cs and BYTE PTR cs:[rbp+0x20],bl
  44b91e:	sub    DWORD PTR [rdx],ecx
  44b920:	and    BYTE PTR [rax],ah
  44b922:	and    BYTE PTR [rax],ah
  44b924:	rex.B
  44b925:	rex.WR push rsp
  44b927:	rex.RB push r10
  44b929:	and    BYTE PTR [rbx+0x20],bl
  44b92c:	rex.XB
  44b92d:	rex.WRXB
  44b92e:	rex.WR push rbp
  44b930:	rex.WRB
  44b931:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44b935:	and    eax,0x45532073
  44b93a:	push   rsp
  44b93b:	and    BYTE PTR [rbx+0x54],dl
  44b93e:	rex.WRXB push r10
  44b940:	rex.B
  44b941:	rex.RXB
  44b942:	and    BYTE PTR [r11+0x20],r15b
  44b946:	push   rax
  44b947:	rex.WR
  44b948:	rex.B
  44b949:	rex.WB
  44b94a:	rex.WRX and BYTE PTR [rax+r12*1+0x45],r15b
  44b94f:	pop    rax
  44b950:	push   rsp
  44b951:	rex.RB push r10
  44b953:	rex.WRX
  44b954:	rex.B
  44b955:	rex.WR and BYTE PTR [rax+riz*1+0x45],r15b
  44b95a:	pop    rax
  44b95b:	push   rsp
  44b95c:	rex.RB
  44b95d:	rex.WRX
  44b95e:	rex.R
  44b95f:	rex.RB
  44b960:	and    BYTE PTR [rax+riz*1+0x4d],r15b
  44b965:	rex.B
  44b966:	rex.WB
  44b967:	rex.WRX and BYTE PTR [rbp+0xa],r15b
  44b96b:	and    BYTE PTR [rax],ah
  44b96d:	and    BYTE PTR [rax],ah
  44b96f:	rex.B
  44b970:	rex.R
  44b971:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fd9eb
  44b978:	rex.WRX
  44b979:	rex.WRXB push r12
  44b97b:	and    BYTE PTR [rsi+0x41],dl
  44b97e:	rex.WR
  44b97f:	rex.WB
  44b980:	and    BYTE PTR [rbp+0xa],r11b
  44b984:	and    BYTE PTR [rax],ah
  44b986:	and    BYTE PTR [rax],ah
  44b988:	rex.B
  44b989:	rex.R
  44b98a:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c404
  44b991:	and    BYTE PTR [rax],ah
  44b993:	rex.B
  44b994:	rex.WR push rsp
  44b996:	rex.RB push r10
  44b998:	and    BYTE PTR [rbx+0x4f],al
  44b99b:	rex.WRX push rbx
  44b99d:	push   rsp
  44b99e:	push   rdx
  44b99f:	rex.B
  44b9a0:	rex.WB
  44b9a1:	rex.WRX push rsp
  44b9a3:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fda1c
  44b9a9:	rex.R
  44b9aa:	rex.RB
  44b9ab:	rex.RX
  44b9ac:	rex.RB push r10
  44b9ae:	push   rdx
  44b9af:	rex.B
  44b9b0:	rex.X
  44b9b1:	rex.WR
  44b9b2:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44b9b7:	rex.WRXB push r12
  44b9b9:	and    BYTE PTR [rbp+rax*2+0x46],al
  44b9bd:	rex.RB push r10
  44b9bf:	push   rdx
  44b9c0:	rex.B
  44b9c1:	rex.X
  44b9c2:	rex.WR
  44b9c3:	and    BYTE PTR [r13+0x20],r11b
  44b9c7:	pop    rbx
  44b9c8:	and    BYTE PTR [rcx+0x4e],cl
  44b9cb:	rex.WB push r12
  44b9cd:	rex.WB
  44b9ce:	rex.B
  44b9cf:	rex.WR
  44b9d0:	rex.WR pop rcx
  44b9d2:	and    BYTE PTR [rbp+rax*2+0x46],al
  44b9d6:	rex.RB push r10
  44b9d8:	push   rdx
  44b9d9:	rex.RB
  44b9da:	and    BYTE PTR [rax+riz*1+0x49],r15b
  44b9df:	rex.WRX
  44b9e0:	rex.WB push r12
  44b9e2:	rex.WB
  44b9e3:	rex.B
  44b9e4:	rex.WR
  44b9e5:	rex.WR pop rcx
  44b9e7:	and    BYTE PTR [rcx+0x4d],cl
  44b9ea:	rex.WRB
  44b9eb:	rex.RB
  44b9ec:	rex.R
  44b9ed:	rex.WB
  44b9ee:	push   r12
  44b9f0:	and    BYTE PTR [r13+0xa],r11b
  44b9f4:	and    BYTE PTR [rax],ah
  44b9f6:	and    BYTE PTR [rax],ah
  44b9f8:	push   rsi
  44b9f9:	rex.B
  44b9fa:	rex.WR
  44b9fb:	rex.WB
  44b9fc:	rex.R
  44b9fd:	push   r12
  44b9ff:	and    BYTE PTR [r11+0x4f],r8b
  44ba03:	rex.WRX push rbx
  44ba05:	push   rsp
  44ba06:	push   rdx
  44ba07:	rex.B
  44ba08:	rex.WB
  44ba09:	rex.WRX push rsp
  44ba0b:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c484
  44ba11:	and    BYTE PTR [rax],ah
  44ba13:	rex.R push rdx
  44ba15:	rex.WRXB push r8
  44ba17:	and    BYTE PTR [rbx+0x4f],al
  44ba1a:	rex.WRX push rbx
  44ba1c:	push   rsp
  44ba1d:	push   rdx
  44ba1e:	rex.B
  44ba1f:	rex.WB
  44ba20:	rex.WRX push rsp
  44ba22:	and    BYTE PTR [rbx+0x20],bl
  44ba25:	rex.WB
  44ba26:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ba2a:	rex.WB push r11
  44ba2c:	push   rsp
  44ba2d:	push   rbx
  44ba2e:	and    BYTE PTR [rbp+0x20],bl
  44ba31:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fdaaa
  44ba37:	push   rdx
  44ba38:	rex.RB push r11
  44ba3a:	push   rsp
  44ba3b:	push   rdx
  44ba3c:	rex.WB
  44ba3d:	rex.XB push r12
  44ba3f:	and    BYTE PTR [rax+riz*1+0x43],bh
  44ba43:	push   r11
  44ba45:	rex.XB
  44ba46:	rex.B
  44ba47:	rex.R
  44ba48:	and    BYTE PTR [r13+0xa],r11b
  44ba4c:	and    BYTE PTR [rax],ah
  44ba4e:	and    BYTE PTR [rax],ah
  44ba50:	rex.R
  44ba51:	rex.WB push r11
  44ba53:	rex.B
  44ba54:	rex.X
  44ba55:	rex.WR
  44ba56:	and    BYTE PTR [r10+rdx*2+0x49],r10b
  44ba5b:	rex.RXB
  44ba5c:	rex.RXB
  44ba5d:	rex.RB push r10
  44ba5f:	and    BYTE PTR [rbx+0x20],bl
  44ba62:	and    eax,0x207c2073
  44ba67:	rex.B
  44ba68:	rex.WR
  44ba69:	rex.WR and BYTE PTR [rax+riz*1+0x55],r15b
  44ba6e:	push   rbx
  44ba6f:	rex.RB push r10
  44ba71:	and    BYTE PTR [rbp+0xa],bl
  44ba74:	and    BYTE PTR [rax],ah
  44ba76:	and    BYTE PTR [rax],ah
  44ba78:	rex.RB
  44ba79:	rex.WRX
  44ba7a:	rex.B
  44ba7b:	rex.X
  44ba7c:	rex.WR
  44ba7d:	and    BYTE PTR [r10+rdx*2+0x49],r10b
  44ba82:	rex.RXB
  44ba83:	rex.RXB
  44ba84:	rex.RB push r10
  44ba86:	and    BYTE PTR [rbx+0x20],bl
  44ba89:	and    eax,0x207c2073
  44ba8e:	rex.B
  44ba8f:	rex.WR
  44ba90:	rex.WR and BYTE PTR [rax+riz*1+0x55],r15b
  44ba95:	push   rbx
  44ba96:	rex.RB push r10
  44ba98:	and    BYTE PTR [rbp+0xa],bl
  44ba9b:	and    BYTE PTR [rax],ah
  44ba9d:	and    BYTE PTR [rax],ah
  44ba9f:	rex.RB
  44baa0:	rex.WRX
  44baa1:	rex.B
  44baa2:	rex.X
  44baa3:	rex.WR
  44baa4:	and    BYTE PTR [r10+0x45],r10b
  44baa8:	push   rax
  44baa9:	rex.WR
  44baaa:	rex.WB
  44baab:	rex.XB
  44baac:	and    BYTE PTR [r10+rdx*2+0x49],dl
  44bab1:	rex.RXB
  44bab2:	rex.RXB
  44bab3:	rex.RB push r10
  44bab5:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c52e
  44babb:	and    BYTE PTR [rax],ah
  44babd:	rex.RB
  44babe:	rex.WRX
  44babf:	rex.B
  44bac0:	rex.X
  44bac1:	rex.WR
  44bac2:	and    BYTE PTR [r9+0x4c],r8b
  44bac6:	push   rdi
  44bac7:	pop    r9
  44bac9:	push   rbx
  44baca:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44bace:	rex.RXB
  44bacf:	rex.RXB
  44bad0:	rex.RB push r10
  44bad2:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c54b
  44bad8:	and    BYTE PTR [rax],ah
  44bada:	rex.R
  44badb:	rex.WB push r11
  44badd:	rex.B
  44bade:	rex.X
  44badf:	rex.WR
  44bae0:	and    BYTE PTR [r10+0x55],r10b
  44bae4:	rex.WR
  44bae5:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c55f
  44baec:	and    BYTE PTR [rax],ah
  44baee:	rex.RB
  44baef:	rex.WRX
  44baf0:	rex.B
  44baf1:	rex.X
  44baf2:	rex.WR
  44baf3:	and    BYTE PTR [r10+0x55],r10b
  44baf7:	rex.WR
  44baf8:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c572
  44baff:	and    BYTE PTR [rax],ah
  44bb01:	rex.RB
  44bb02:	rex.WRX
  44bb03:	rex.B
  44bb04:	rex.X
  44bb05:	rex.WR
  44bb06:	and    BYTE PTR [r10+0x45],r10b
  44bb0a:	push   rax
  44bb0b:	rex.WR
  44bb0c:	rex.WB
  44bb0d:	rex.XB
  44bb0e:	and    BYTE PTR [r10+0x55],dl
  44bb12:	rex.WR
  44bb13:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c58d
  44bb1a:	and    BYTE PTR [rax],ah
  44bb1c:	rex.RB
  44bb1d:	rex.WRX
  44bb1e:	rex.B
  44bb1f:	rex.X
  44bb20:	rex.WR
  44bb21:	and    BYTE PTR [r9+0x4c],r8b
  44bb25:	push   rdi
  44bb26:	pop    r9
  44bb28:	push   rbx
  44bb29:	and    BYTE PTR [rdx+0x55],dl
  44bb2c:	rex.WR
  44bb2d:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c5a7
  44bb34:	and    BYTE PTR [rax],ah
  44bb36:	rex.XB
  44bb37:	rex.WR push rbp
  44bb39:	push   rbx
  44bb3a:	push   rsp
  44bb3b:	rex.RB push r10
  44bb3d:	and    BYTE PTR [rdi+0x4e],cl
  44bb40:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c5b9
  44bb46:	and    BYTE PTR [rax],ah
  44bb48:	push   rbx
  44bb49:	rex.RB push r12
  44bb4b:	and    BYTE PTR [rdi+0x49],dl
  44bb4e:	push   rsp
  44bb4f:	rex.W
  44bb50:	rex.WRXB push r13
  44bb52:	push   rsp
  44bb53:	and    BYTE PTR [rbx+0x4c],al
  44bb56:	push   rbp
  44bb57:	push   rbx
  44bb58:	push   rsp
  44bb59:	rex.RB push r10
  44bb5b:	or     ah,BYTE PTR [rax]
  44bb5d:	and    BYTE PTR [rax],ah
  44bb5f:	and    BYTE PTR [rbx+0x45],dl
  44bb62:	push   rsp
  44bb63:	and    BYTE PTR [rdi+0x49],dl
  44bb66:	push   rsp
  44bb67:	rex.W and BYTE PTR [rdi+0x49],cl
  44bb6b:	rex.R push rbx
  44bb6d:	or     ah,BYTE PTR [rax]
  44bb6f:	and    BYTE PTR [rax],ah
  44bb71:	and    BYTE PTR [rbx+0x45],dl
  44bb74:	push   rsp
  44bb75:	and    BYTE PTR [rdi+0x49],dl
  44bb78:	push   rsp
  44bb79:	rex.W
  44bb7a:	rex.WRXB push r13
  44bb7c:	push   rsp
  44bb7d:	and    BYTE PTR [rdi+0x49],cl
  44bb80:	rex.R push rbx
  44bb82:	or     ah,BYTE PTR [rax]
  44bb84:	and    BYTE PTR [rax],ah
  44bb86:	and    BYTE PTR [rbx+0x45],dl
  44bb89:	push   rsp
  44bb8a:	and    BYTE PTR [rax],ch
  44bb8c:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081dc05
  44bb92:	and    eax,0x2c5b2073
  44bb97:	and    BYTE PTR [rsi],ch
  44bb99:	cs and BYTE PTR cs:[rbp+0x20],bl
  44bb9e:	sub    DWORD PTR [rdx],ecx
  44bba0:	and    BYTE PTR [rax],ah
  44bba2:	and    BYTE PTR [rax],ah
  44bba4:	push   rdx
  44bba5:	rex.RB push r11
  44bba7:	rex.RB push r12
  44bba9:	and    BYTE PTR [rax],ch
  44bbab:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fdc24
  44bbb1:	and    BYTE PTR [rsi],ch
  44bbb3:	cs and BYTE PTR cs:[rbp+0x20],bl
  44bbb8:	sub    DWORD PTR [rdx],ecx
  44bbba:	and    BYTE PTR [rax],ah
  44bbbc:	and    BYTE PTR [rax],ah
  44bbbe:	rex.WB
  44bbbf:	rex.WRX
  44bbc0:	rex.W
  44bbc1:	rex.RB push r10
  44bbc3:	rex.WB push r12
  44bbc5:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c63e
  44bbcb:	and    BYTE PTR [rax],ah
  44bbcd:	rex.WRX
  44bbce:	rex.WRXB and BYTE PTR [r9+0x4e],r9b
  44bbd2:	rex.W
  44bbd3:	rex.RB push r10
  44bbd5:	rex.WB push r12
  44bbd7:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c650
  44bbdd:	and    BYTE PTR [rax],ah
  44bbdf:	rex.WRXB
  44bbe0:	rex.RX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064c65a
  44bbe7:	and    BYTE PTR [rax],ah
  44bbe9:	rex.WRX
  44bbea:	rex.WRXB push r12
  44bbec:	and    BYTE PTR [rdi+0x46],cl
  44bbef:	or     ah,BYTE PTR [rax]
  44bbf1:	and    BYTE PTR [rax],ah
  44bbf3:	and    BYTE PTR [rdi+0x57],cl
  44bbf6:	rex.WRX
  44bbf7:	rex.RB push r10
  44bbf9:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44bbfd:	and    eax,0x20200a73
  44bc02:	and    BYTE PTR [rax],ah
  44bc04:	push   rbx
  44bc05:	rex.RB push r12
  44bc07:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44bc0b:	rex.WR
  44bc0c:	rex.RB push r11
  44bc0e:	push   rax
  44bc0f:	rex.B
  44bc10:	rex.XB
  44bc11:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064c68b
  44bc18:	and    BYTE PTR [rax],ah
  44bc1a:	push   rdx
  44bc1b:	rex.RB push r8
  44bc1d:	rex.WR
  44bc1e:	rex.WB
  44bc1f:	rex.XB
  44bc20:	and    BYTE PTR [r9+0x44],cl
  44bc24:	rex.RB
  44bc25:	rex.WRX push rsp
  44bc27:	rex.WB push r12
  44bc29:	pop    rcx
  44bc2a:	and    BYTE PTR [rbx+0x44],bh
  44bc2d:	rex.RB
  44bc2e:	rex.RX
  44bc2f:	push   r13
  44bc31:	rex.WR push rsp
  44bc33:	and    BYTE PTR [rax+riz*1+0x55],bh
  44bc37:	push   rbx
  44bc38:	rex.WB
  44bc39:	rex.WRX
  44bc3a:	rex.RXB and BYTE PTR [r9+0x4e],r9b
  44bc3e:	rex.R
  44bc3f:	rex.RB pop r8
  44bc41:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0dcba
  44bc47:	rex.RX push rbp
  44bc49:	rex.WR
  44bc4a:	rex.WR and BYTE PTR [rax+riz*1+0x4e],r15b
  44bc4f:	rex.WRXB push r12
  44bc51:	rex.W
  44bc52:	rex.WB
  44bc53:	rex.WRX
  44bc54:	rex.RXB jge 0x44bc61
  44bc57:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ec6d0
  44bc5d:	and    BYTE PTR [rax],ah
  44bc5f:	and    BYTE PTR [rbx+0x20],bl
  44bc62:	rex.XB
  44bc63:	rex.WRXB
  44bc64:	rex.WRX push rbx
  44bc66:	push   rsp
  44bc67:	push   rdx
  44bc68:	rex.B
  44bc69:	rex.WB
  44bc6a:	rex.WRX push rsp
  44bc6c:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1dce5
  44bc72:	and    BYTE PTR [rax],ah
  44bc74:	and    BYTE PTR [rax],ah
  44bc76:	jnp    0x44bc98
  44bc78:	push   rbp
  44bc79:	rex.WRX
  44bc7a:	rex.WB push r9
  44bc7c:	push   rbp
  44bc7d:	and    BYTE PTR [r8+riz*1+0x50],r15b
  44bc82:	push   rdx
  44bc83:	rex.WB
  44bc84:	rex.WRB
  44bc85:	push   r10
  44bc87:	pop    rcx
  44bc88:	and    BYTE PTR [rbx+0x45],cl
  44bc8b:	pop    rcx
  44bc8c:	and    BYTE PTR [rbp+0x20],bh
  44bc8f:	push   rbp
  44bc90:	push   rbx
  44bc91:	rex.WB
  44bc92:	rex.WRX
  44bc93:	rex.RXB and BYTE PTR [r9+0x4e],r9b
  44bc97:	rex.R
  44bc98:	rex.RB pop r8
  44bc9a:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064c713
  44bca0:	and    BYTE PTR [rax],ah
  44bca2:	pop    rbx
  44bca3:	and    BYTE PTR [rbp+rax*2+0x46],al
  44bca7:	rex.RB push r10
  44bca9:	push   rdx
  44bcaa:	rex.B
  44bcab:	rex.X
  44bcac:	rex.WR
  44bcad:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44bcb2:	rex.WRXB push r12
  44bcb4:	and    BYTE PTR [rbp+rax*2+0x46],al
  44bcb8:	rex.RB push r10
  44bcba:	push   rdx
  44bcbb:	rex.B
  44bcbc:	rex.X
  44bcbd:	rex.WR
  44bcbe:	and    BYTE PTR [r13+0x20],r11b
  44bcc2:	pop    rbx
  44bcc3:	and    BYTE PTR [rcx+0x4e],cl
  44bcc6:	rex.WB push r12
  44bcc8:	rex.WB
  44bcc9:	rex.B
  44bcca:	rex.WR
  44bccb:	rex.WR pop rcx
  44bccd:	and    BYTE PTR [rbp+rax*2+0x46],al
  44bcd1:	rex.RB push r10
  44bcd3:	push   rdx
  44bcd4:	rex.RB
  44bcd5:	and    BYTE PTR [rax+riz*1+0x49],r15b
  44bcda:	rex.WRX
  44bcdb:	rex.WB push r12
  44bcdd:	rex.WB
  44bcde:	rex.B
  44bcdf:	rex.WR
  44bce0:	rex.WR pop rcx
  44bce2:	and    BYTE PTR [rcx+0x4d],cl
  44bce5:	rex.WRB
  44bce6:	rex.RB
  44bce7:	rex.R
  44bce8:	rex.WB
  44bce9:	push   r12
  44bceb:	and    BYTE PTR [r13+0x0],r11b
  44bcef:	add    BYTE PTR [rcx+0x6e],ah
  44bcf2:	and    BYTE PTR fs:[rcx+riz*2+0x62],dh
  44bcf7:	ins    BYTE PTR es:[rdi],dx
  44bcf8:	gs pop rdi
  44bcfa:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44bcfd:	jae    0x44bd73
  44bcff:	jb     0x44bd62
  44bd01:	imul   ebp,DWORD PTR [rsi+0x74],0x6973755f
  44bd08:	outs   dx,BYTE PTR ds:[rsi]
  44bd09:	addr32 pop rdi
  44bd0b:	imul   ebp,DWORD PTR [rsi+0x64],0x69207865
  44bd12:	jae    0x44bd4e
  44bd14:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  44bd18:	gs pop rdi
  44bd1a:	outs   dx,BYTE PTR ds:[rsi]
  44bd1b:	(bad)  
  44bd1c:	ins    DWORD PTR es:[rdi],dx
  44bd1d:	add    BYTE PTR gs:[rax+0x61],dh
  44bd21:	jb     0x44bd88
  44bd23:	outs   dx,BYTE PTR ds:[rsi]
  44bd24:	je     0x44bd85
  44bd26:	je     0x44bd89
  44bd28:	(bad)  
  44bd29:	ins    BYTE PTR es:[rdi],dx
  44bd2a:	add    BYTE PTR gs:[rdx+0x65],dh
  44bd2e:	ja     0x44bda2
  44bd30:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x656c7572
  44bd38:	pop    rdi
  44bd39:	outs   dx,BYTE PTR ds:[rsi]
  44bd3a:	(bad)  
  44bd3b:	ins    DWORD PTR es:[rdi],dx
  44bd3c:	add    BYTE PTR gs:[rcx+riz*2+0x62],dh
  44bd41:	ins    BYTE PTR es:[rdi],dx
  44bd42:	gs pop rdi
  44bd44:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44bd47:	jae    0x44bdbd
  44bd49:	jb     0x44bdac
  44bd4b:	imul   ebp,DWORD PTR [rsi+0x74],0x6973755f
  44bd52:	outs   dx,BYTE PTR ds:[rsi]
  44bd53:	addr32 pop rdi
  44bd55:	imul   ebp,DWORD PTR [rsi+0x64],0x74007865
  44bd5c:	(bad)  
  44bd5d:	(bad)  
  44bd5e:	ins    BYTE PTR es:[rdi],dx
  44bd5f:	gs pop rdi
  44bd61:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44bd64:	jae    0x44bdda
  44bd66:	jb     0x44bdc9
  44bd68:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  44bd6f:	add    BYTE PTR [rcx+0x4c],al
  44bd72:	push   rsp
  44bd73:	rex.RB push r10
  44bd75:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44bd79:	rex.WR
  44bd7a:	rex.RB push r11
  44bd7c:	push   rax
  44bd7d:	rex.B
  44bd7e:	rex.XB
  44bd7f:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596ddf9
  44bd86:	rex.WRX
  44bd87:	rex.B
  44bd88:	rex.WRB
  44bd89:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44bd8e:	and    eax,0x4c410a73
  44bd93:	push   rsp
  44bd94:	rex.RB push r10
  44bd96:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44bd9a:	rex.WR
  44bd9b:	rex.RB push r11
  44bd9d:	push   rax
  44bd9e:	rex.B
  44bd9f:	rex.XB
  44bda0:	and    BYTE PTR [rip+0x574f2073],r12b        # 0x5793de1a
  44bda7:	rex.WRX
  44bda8:	rex.RB push r10
  44bdaa:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44bdae:	and    eax,0x4c410a73
  44bdb3:	push   rsp
  44bdb4:	rex.RB push r10
  44bdb6:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44bdba:	rex.WR
  44bdbb:	rex.RB push r11
  44bdbd:	push   rax
  44bdbe:	rex.B
  44bdbf:	rex.XB
  44bdc0:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597de3a
  44bdc7:	push   rsp
  44bdc8:	and    BYTE PTR [rax],ch
  44bdca:	and    BYTE PTR [rip+0x203d2073],ah        # 0x2081de43
  44bdd0:	and    eax,0x2c5b2073
  44bdd5:	and    BYTE PTR [rsi],ch
  44bdd7:	cs and BYTE PTR cs:[rbp+0x20],bl
  44bddc:	sub    DWORD PTR [rdx],ecx
  44bdde:	rex.B
  44bddf:	rex.WR push rsp
  44bde1:	rex.RB push r10
  44bde3:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44bde7:	rex.WR
  44bde8:	rex.RB push r11
  44bdea:	push   rax
  44bdeb:	rex.B
  44bdec:	rex.XB
  44bded:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596de67
  44bdf4:	push   rbx
  44bdf5:	rex.RB push r12
  44bdf7:	and    BYTE PTR [rax],ch
  44bdf9:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fde72
  44bdff:	and    BYTE PTR [rsi],ch
  44be01:	cs and BYTE PTR cs:[rbp+0x20],bl
  44be06:	sub    DWORD PTR [rax],eax
  44be08:	je     0x44be6b
  44be0a:	(bad)  
  44be0b:	ins    BYTE PTR es:[rdi],dx
  44be0c:	gs jae 0x44be7f
  44be0f:	(bad)  
  44be10:	movsxd esp,DWORD PTR [rbp+0x5f]
  44be13:	outs   dx,DWORD PTR ds:[rsi]
  44be14:	jo     0x44be8a
  44be16:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b6f7400
  44be1d:	outs   dx,BYTE PTR gs:[rsi]
  44be1f:	pop    rdi
  44be20:	je     0x44be9b
  44be22:	jo     0x44be89
  44be24:	add    BYTE PTR [rax],al
  44be26:	add    BYTE PTR [rax],al
  44be28:	rex.B
  44be29:	rex.WR push rsp
  44be2b:	rex.RB push r10
  44be2d:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44be31:	push   rsp
  44be32:	and    BYTE PTR [rbx+0x45],dl
  44be35:	push   r10
  44be37:	rex.XB
  44be38:	rex.W and BYTE PTR [rbx+0x4f],al
  44be3c:	rex.WRX
  44be3d:	rex.RX
  44be3e:	rex.WB
  44be3f:	rex.RXB push r13
  44be41:	push   rdx
  44be42:	push   r12
  44be44:	rex.WB
  44be45:	rex.WRXB
  44be46:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064c8c0
  44be4d:	and    BYTE PTR [rax],ah
  44be4f:	rex.B
  44be50:	rex.R
  44be51:	and    BYTE PTR [rbp+0x41],r9b
  44be55:	push   rax
  44be56:	push   rax
  44be57:	rex.WB
  44be58:	rex.WRX
  44be59:	rex.RXB and BYTE PTR [r14+0x4f],r8b
  44be5d:	push   rdx
  44be5e:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fded7
  44be64:	and    BYTE PTR [rsi],ch
  44be66:	cs and BYTE PTR cs:[rbp+0x20],bl
  44be6b:	push   rdi
  44be6c:	rex.WB push r12
  44be6e:	rex.W and BYTE PTR [rip+0x2c5b2073],spl        # 0x2c9fdee8
  44be75:	and    BYTE PTR [rsi],ch
  44be77:	cs and BYTE PTR cs:[rbp+0xa],bl
  44be7c:	rex.B
  44be7d:	rex.WR push rsp
  44be7f:	rex.RB push r10
  44be81:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44be85:	push   rsp
  44be86:	and    BYTE PTR [rbx+0x45],dl
  44be89:	push   r10
  44be8b:	rex.XB
  44be8c:	rex.W and BYTE PTR [rbx+0x4f],al
  44be90:	rex.WRX
  44be91:	rex.RX
  44be92:	rex.WB
  44be93:	rex.RXB push r13
  44be95:	push   rdx
  44be96:	push   r12
  44be98:	rex.WB
  44be99:	rex.WRXB
  44be9a:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064c914
  44bea1:	and    BYTE PTR [rax],ah
  44bea3:	rex.B
  44bea4:	rex.WR push rsp
  44bea6:	rex.RB push r10
  44bea8:	and    BYTE PTR [rbp+0x41],cl
  44beab:	push   rax
  44beac:	push   rax
  44bead:	rex.WB
  44beae:	rex.WRX
  44beaf:	rex.RXB and BYTE PTR [r14+0x4f],r8b
  44beb3:	push   rdx
  44beb4:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fdf2d
  44beba:	and    BYTE PTR [rsi],ch
  44bebc:	cs and BYTE PTR cs:[rbp+0x20],bl
  44bec1:	push   rdi
  44bec2:	rex.WB push r12
  44bec4:	rex.W and BYTE PTR [rip+0x2c5b2073],spl        # 0x2c9fdf3e
  44becb:	and    BYTE PTR [rsi],ch
  44becd:	cs and BYTE PTR cs:[rbp+0xa],bl
  44bed2:	rex.B
  44bed3:	rex.WR push rsp
  44bed5:	rex.RB push r10
  44bed7:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44bedb:	push   rsp
  44bedc:	and    BYTE PTR [rbx+0x45],dl
  44bedf:	push   r10
  44bee1:	rex.XB
  44bee2:	rex.W and BYTE PTR [rbx+0x4f],al
  44bee6:	rex.WRX
  44bee7:	rex.RX
  44bee8:	rex.WB
  44bee9:	rex.RXB push r13
  44beeb:	push   rdx
  44beec:	push   r12
  44beee:	rex.WB
  44beef:	rex.WRXB
  44bef0:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064c96a
  44bef7:	and    BYTE PTR [rax],ah
  44bef9:	rex.B
  44befa:	rex.WR push rsp
  44befc:	rex.RB push r10
  44befe:	and    BYTE PTR [rbp+0x41],cl
  44bf01:	push   rax
  44bf02:	push   rax
  44bf03:	rex.WB
  44bf04:	rex.WRX
  44bf05:	rex.RXB and BYTE PTR [r10+0x45],r10b
  44bf09:	push   rax
  44bf0a:	rex.WR
  44bf0b:	rex.B
  44bf0c:	rex.XB
  44bf0d:	and    BYTE PTR [rip+0x49572073],r12b        # 0x499bdf87
  44bf14:	push   rsp
  44bf15:	rex.W and BYTE PTR [rip+0x4c410a73],spl        # 0x4c85c98f
  44bf1c:	push   rsp
  44bf1d:	rex.RB push r10
  44bf1f:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44bf23:	push   rsp
  44bf24:	and    BYTE PTR [rbx+0x45],dl
  44bf27:	push   r10
  44bf29:	rex.XB
  44bf2a:	rex.W and BYTE PTR [rbx+0x4f],al
  44bf2e:	rex.WRX
  44bf2f:	rex.RX
  44bf30:	rex.WB
  44bf31:	rex.RXB push r13
  44bf33:	push   rdx
  44bf34:	push   r12
  44bf36:	rex.WB
  44bf37:	rex.WRXB
  44bf38:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064c9b2
  44bf3f:	and    BYTE PTR [rax],ah
  44bf41:	rex.B
  44bf42:	rex.WR push rsp
  44bf44:	rex.RB push r10
  44bf46:	and    BYTE PTR [rbp+0x41],cl
  44bf49:	push   rax
  44bf4a:	push   rax
  44bf4b:	rex.WB
  44bf4c:	rex.WRX
  44bf4d:	rex.RXB and BYTE PTR [r14+0x4f],r8b
  44bf51:	push   rdx
  44bf52:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fdfcb
  44bf58:	and    BYTE PTR [rsi],ch
  44bf5a:	cs and BYTE PTR cs:[rbp+0x20],bl
  44bf5f:	push   rdx
  44bf60:	rex.RB push r8
  44bf62:	rex.WR
  44bf63:	rex.B
  44bf64:	rex.XB
  44bf65:	and    BYTE PTR [rip+0x49572073],r12b        # 0x499bdfdf
  44bf6c:	push   rsp
  44bf6d:	rex.W and BYTE PTR [rip+0x4c410a73],spl        # 0x4c85c9e7
  44bf74:	push   rsp
  44bf75:	rex.RB push r10
  44bf77:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44bf7b:	push   rsp
  44bf7c:	and    BYTE PTR [rbx+0x45],dl
  44bf7f:	push   r10
  44bf81:	rex.XB
  44bf82:	rex.W and BYTE PTR [rbx+0x4f],al
  44bf86:	rex.WRX
  44bf87:	rex.RX
  44bf88:	rex.WB
  44bf89:	rex.RXB push r13
  44bf8b:	push   rdx
  44bf8c:	push   r12
  44bf8e:	rex.WB
  44bf8f:	rex.WRXB
  44bf90:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064ca0a
  44bf97:	and    BYTE PTR [rax],ah
  44bf99:	rex.R push rdx
  44bf9b:	rex.WRXB push r8
  44bf9d:	and    BYTE PTR [rbp+0x41],cl
  44bfa0:	push   rax
  44bfa1:	push   rax
  44bfa2:	rex.WB
  44bfa3:	rex.WRX
  44bfa4:	rex.RXB and BYTE PTR [r11+0x20],r11b
  44bfa8:	rex.WB
  44bfa9:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44bfad:	rex.WB push r11
  44bfaf:	push   rsp
  44bfb0:	push   rbx
  44bfb1:	and    BYTE PTR [rbp+0x20],bl
  44bfb4:	rex.RX
  44bfb5:	rex.WRXB push r10
  44bfb7:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fe030
  44bfbd:	and    BYTE PTR [rsi],ch
  44bfbf:	cs and BYTE PTR cs:[rbp+0xa],bl
  44bfc4:	rex.B
  44bfc5:	rex.WR push rsp
  44bfc7:	rex.RB push r10
  44bfc9:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44bfcd:	push   rsp
  44bfce:	and    BYTE PTR [rbx+0x45],dl
  44bfd1:	push   r10
  44bfd3:	rex.XB
  44bfd4:	rex.W and BYTE PTR [rbx+0x4f],al
  44bfd8:	rex.WRX
  44bfd9:	rex.RX
  44bfda:	rex.WB
  44bfdb:	rex.RXB push r13
  44bfdd:	push   rdx
  44bfde:	push   r12
  44bfe0:	rex.WB
  44bfe1:	rex.WRXB
  44bfe2:	rex.WRX and BYTE PTR [rip+0x45522073],r12b        # 0x4596e05c
  44bfe9:	rex.WRX
  44bfea:	rex.B
  44bfeb:	rex.WRB
  44bfec:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44bff1:	and    eax,0x4c410a73
  44bff6:	push   rsp
  44bff7:	rex.RB push r10
  44bff9:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44bffd:	push   rsp
  44bffe:	and    BYTE PTR [rbx+0x45],dl
  44c001:	push   r10
  44c003:	rex.XB
  44c004:	rex.W and BYTE PTR [rbx+0x4f],al
  44c008:	rex.WRX
  44c009:	rex.RX
  44c00a:	rex.WB
  44c00b:	rex.RXB push r13
  44c00d:	push   rdx
  44c00e:	push   r12
  44c010:	rex.WB
  44c011:	rex.WRXB
  44c012:	rex.WRX and BYTE PTR [rip+0x574f2073],r12b        # 0x5793e08c
  44c019:	rex.WRX
  44c01a:	rex.RB push r10
  44c01c:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44c020:	and    eax,0x4c410a73
  44c025:	push   rsp
  44c026:	rex.RB push r10
  44c028:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c02c:	push   rsp
  44c02d:	and    BYTE PTR [rbx+0x45],dl
  44c030:	push   r10
  44c032:	rex.XB
  44c033:	rex.W and BYTE PTR [rbx+0x4f],al
  44c037:	rex.WRX
  44c038:	rex.RX
  44c039:	rex.WB
  44c03a:	rex.RXB push r13
  44c03c:	push   rdx
  44c03d:	push   r12
  44c03f:	rex.WB
  44c040:	rex.WRXB
  44c041:	rex.WRX and BYTE PTR [rip+0x45532073],r12b        # 0x4597e0bb
  44c048:	push   rsp
  44c049:	and    BYTE PTR [rbx+0x43],dl
  44c04c:	rex.W
  44c04d:	rex.RB
  44c04e:	rex.WRB
  44c04f:	and    BYTE PTR [rip+0x656e0073],spl        # 0x65b2c0c9
  44c056:	ja     0x44c0b7
  44c058:	imul   esp,DWORD PTR fs:[rbx+0x74],0x616e6f69
  44c060:	jb     0x44c0db
  44c062:	add    BYTE PTR [rdi+0x6c],ch
  44c065:	fs pop rdi
  44c067:	imul   esp,DWORD PTR fs:[rbx+0x74],0x616e6f69
  44c06f:	jb     0x44c0ea
  44c071:	add    BYTE PTR [rcx+rbp*2+0x63],ah
  44c075:	je     0x44c0e0
  44c077:	outs   dx,DWORD PTR ds:[rsi]
  44c078:	outs   dx,BYTE PTR ds:[rsi]
  44c079:	(bad)  
  44c07a:	jb     0x44c0f5
  44c07c:	pop    rdi
  44c07d:	outs   dx,BYTE PTR ds:[rsi]
  44c07e:	(bad)  
  44c07f:	ins    DWORD PTR es:[rdi],dx
  44c080:	add    BYTE PTR gs:[rax],al
  44c083:	add    BYTE PTR [rax],al
  44c085:	add    BYTE PTR [rax],al
  44c087:	add    BYTE PTR [rcx+0x4c],al
  44c08a:	push   rsp
  44c08b:	rex.RB push r10
  44c08d:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c091:	push   rsp
  44c092:	and    BYTE PTR [rbx+0x45],dl
  44c095:	push   r10
  44c097:	rex.XB
  44c098:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44c09d:	push   rsp
  44c09e:	rex.WB
  44c09f:	rex.WRXB
  44c0a0:	rex.WRX
  44c0a1:	push   r10
  44c0a3:	pop    rcx
  44c0a4:	and    BYTE PTR [rip+0xa282073],ah        # 0xa6ce11d
  44c0aa:	and    BYTE PTR [rax],ah
  44c0ac:	and    BYTE PTR [rax],ah
  44c0ae:	and    eax,0x205b2073
  44c0b3:	cmp    eax,0x20732520
  44c0b8:	pop    rbp
  44c0b9:	and    BYTE PTR [rbx+0x2c],bl
  44c0bc:	and    BYTE PTR [rsi],ch
  44c0be:	cs and BYTE PTR cs:[rbp+0xa],bl
  44c0c3:	sub    DWORD PTR [rdx],ecx
  44c0c5:	rex.B
  44c0c6:	rex.WR push rsp
  44c0c8:	rex.RB push r10
  44c0ca:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c0ce:	push   rsp
  44c0cf:	and    BYTE PTR [rbx+0x45],dl
  44c0d2:	push   r10
  44c0d4:	rex.XB
  44c0d5:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44c0da:	push   rsp
  44c0db:	rex.WB
  44c0dc:	rex.WRXB
  44c0dd:	rex.WRX
  44c0de:	push   r10
  44c0e0:	pop    rcx
  44c0e1:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e15a
  44c0e7:	rex.WRX
  44c0e8:	rex.B
  44c0e9:	rex.WRB
  44c0ea:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c0ef:	and    eax,0x4c410a73
  44c0f4:	push   rsp
  44c0f5:	rex.RB push r10
  44c0f7:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c0fb:	push   rsp
  44c0fc:	and    BYTE PTR [rbx+0x45],dl
  44c0ff:	push   r10
  44c101:	rex.XB
  44c102:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44c107:	push   rsp
  44c108:	rex.WB
  44c109:	rex.WRXB
  44c10a:	rex.WRX
  44c10b:	push   r10
  44c10d:	pop    rcx
  44c10e:	and    BYTE PTR [rip+0x574f2073],ah        # 0x5793e187
  44c114:	rex.WRX
  44c115:	rex.RB push r10
  44c117:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44c11b:	and    eax,0x4c410a73
  44c120:	push   rsp
  44c121:	rex.RB push r10
  44c123:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c127:	push   rsp
  44c128:	and    BYTE PTR [rbx+0x45],dl
  44c12b:	push   r10
  44c12d:	rex.XB
  44c12e:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44c133:	push   rsp
  44c134:	rex.WB
  44c135:	rex.WRXB
  44c136:	rex.WRX
  44c137:	push   r10
  44c139:	pop    rcx
  44c13a:	and    BYTE PTR [rip+0x45532073],ah        # 0x4597e1b3
  44c140:	push   rsp
  44c141:	and    BYTE PTR [rbx+0x43],dl
  44c144:	rex.W
  44c145:	rex.RB
  44c146:	rex.WRB
  44c147:	and    BYTE PTR [rip+0x73],spl        # 0x44c1c1
  44c14e:	add    BYTE PTR [rax],al
  44c150:	rex.B
  44c151:	rex.WR push rsp
  44c153:	rex.RB push r10
  44c155:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c159:	push   rsp
  44c15a:	and    BYTE PTR [rbx+0x45],dl
  44c15d:	push   r10
  44c15f:	rex.XB
  44c160:	rex.W and BYTE PTR [rax+0x41],dl
  44c164:	push   rdx
  44c165:	push   rbx
  44c166:	rex.RB push r10
  44c168:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e1e1
  44c16e:	rex.WRX
  44c16f:	rex.B
  44c170:	rex.WRB
  44c171:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c176:	and    eax,0x4c410a73
  44c17b:	push   rsp
  44c17c:	rex.RB push r10
  44c17e:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c182:	push   rsp
  44c183:	and    BYTE PTR [rbx+0x45],dl
  44c186:	push   r10
  44c188:	rex.XB
  44c189:	rex.W and BYTE PTR [rax+0x41],dl
  44c18d:	push   rdx
  44c18e:	push   rbx
  44c18f:	rex.RB push r10
  44c191:	and    BYTE PTR [rip+0x45532073],ah        # 0x4597e20a
  44c197:	push   rsp
  44c198:	and    BYTE PTR [rbx+0x43],dl
  44c19b:	rex.W
  44c19c:	rex.RB
  44c19d:	rex.WRB
  44c19e:	and    BYTE PTR [rip+0x73],spl        # 0x44c218
  44c1a5:	add    BYTE PTR [rax],al
  44c1a7:	add    BYTE PTR [rcx+0x4c],al
  44c1aa:	push   rsp
  44c1ab:	rex.RB push r10
  44c1ad:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c1b1:	push   rsp
  44c1b2:	and    BYTE PTR [rbx+0x45],dl
  44c1b5:	push   r10
  44c1b7:	rex.XB
  44c1b8:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  44c1bd:	push   rax
  44c1be:	rex.WR
  44c1bf:	push   r12
  44c1c1:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596e23b
  44c1c8:	rex.WRX
  44c1c9:	rex.B
  44c1ca:	rex.WRB
  44c1cb:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c1d0:	and    eax,0x4c410a73
  44c1d5:	push   rsp
  44c1d6:	rex.RB push r10
  44c1d8:	and    BYTE PTR [rbp+rax*2+0x58],dl
  44c1dc:	push   rsp
  44c1dd:	and    BYTE PTR [rbx+0x45],dl
  44c1e0:	push   r10
  44c1e2:	rex.XB
  44c1e3:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  44c1e8:	push   rax
  44c1e9:	rex.WR
  44c1ea:	push   r12
  44c1ec:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597e266
  44c1f3:	push   rsp
  44c1f4:	and    BYTE PTR [rbx+0x43],dl
  44c1f7:	rex.W
  44c1f8:	rex.RB
  44c1f9:	rex.WRB
  44c1fa:	and    BYTE PTR [rip+0x41000073],spl        # 0x4144c274
  44c201:	rex.WR push rsp
  44c203:	rex.RB push r10
  44c205:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44c209:	rex.RXB
  44c20a:	rex.RXB
  44c20b:	rex.RB push r10
  44c20d:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e93e286
  44c213:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e28c
  44c219:	rex.WRX
  44c21a:	rex.B
  44c21b:	rex.WRB
  44c21c:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c221:	and    eax,0x73
  44c226:	add    BYTE PTR [rax],al
  44c228:	rex.B
  44c229:	rex.WR push rsp
  44c22b:	rex.RB push r10
  44c22d:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c231:	and    BYTE PTR [rip+0x73252073],r12b        # 0x7369e2ab
  44c238:	and    BYTE PTR [rbx+0x2c],bl
  44c23b:	and    BYTE PTR [rsi],ch
  44c23d:	cs and BYTE PTR cs:[rbp+0xa],bl
  44c242:	rex.B
  44c243:	rex.WR push rsp
  44c245:	rex.RB push r10
  44c247:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c24b:	and    BYTE PTR [rip+0x574f2073],r12b        # 0x5793e2c5
  44c252:	rex.WRX
  44c253:	rex.RB push r10
  44c255:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44c259:	and    eax,0x4c410a73
  44c25e:	push   rsp
  44c25f:	rex.RB push r10
  44c261:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c265:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596e2df
  44c26c:	rex.WRX
  44c26d:	rex.B
  44c26e:	rex.WRB
  44c26f:	and    BYTE PTR [r9+0x54],r8b
  44c273:	push   rsp
  44c274:	push   rdx
  44c275:	rex.WB
  44c276:	rex.X push rbp
  44c278:	push   rsp
  44c279:	and    BYTE PTR [rip+0x4f542073],r12b        # 0x4f98e2f3
  44c280:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fe2f9
  44c286:	rex.XB
  44c287:	push   r11
  44c289:	rex.XB
  44c28a:	rex.B
  44c28b:	rex.R
  44c28c:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c291:	rex.RB push r11
  44c293:	push   rsp
  44c294:	push   rdx
  44c295:	rex.WB
  44c296:	rex.XB push r12
  44c298:	and    BYTE PTR [rbp+0xa],bl
  44c29b:	rex.B
  44c29c:	rex.WR push rsp
  44c29e:	rex.RB push r10
  44c2a0:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c2a4:	and    BYTE PTR [rip+0x45522073],r12b        # 0x4596e31e
  44c2ab:	rex.WRX
  44c2ac:	rex.B
  44c2ad:	rex.WRB
  44c2ae:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c2b3:	and    eax,0x4c410a73
  44c2b8:	push   rsp
  44c2b9:	rex.RB push r10
  44c2bb:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c2bf:	and    BYTE PTR [rip+0x45532073],r12b        # 0x4597e339
  44c2c6:	push   rsp
  44c2c7:	and    BYTE PTR [rbx+0x43],dl
  44c2ca:	rex.W
  44c2cb:	rex.RB
  44c2cc:	rex.WRB
  44c2cd:	and    BYTE PTR [rip+0x4c410a73],spl        # 0x4c85cd47
  44c2d4:	push   rsp
  44c2d5:	rex.RB push r10
  44c2d7:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44c2db:	and    BYTE PTR [rip+0x44412073],r12b        # 0x4485e355
  44c2e2:	and    BYTE PTR [rsi+0x41],r10b
  44c2e6:	rex.WR push rbp
  44c2e8:	and    BYTE PTR [r11+0x20],r11b
  44c2ec:	rex.WB
  44c2ed:	rex.RX and BYTE PTR [rsi+0x4f],r9b
  44c2f1:	push   rsp
  44c2f2:	and    BYTE PTR [rbp+0x58],al
  44c2f5:	rex.WB push r11
  44c2f7:	push   rsp
  44c2f8:	push   rbx
  44c2f9:	and    BYTE PTR [rbp+0x20],bl
  44c2fc:	and    eax,0x205b2073
  44c301:	jnp    0x44c323
  44c303:	rex.X
  44c304:	rex.RB
  44c305:	rex.RX
  44c306:	rex.WRXB push r10
  44c308:	and    BYTE PTR [r8+riz*1+0x41],r15b
  44c30d:	rex.RX push rsp
  44c30f:	rex.RB push r10
  44c311:	and    BYTE PTR [rbp+0x20],bh
  44c314:	and    eax,0xa5d2073
  44c319:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ecd92
  44c31f:	and    BYTE PTR [rax],ah
  44c321:	and    BYTE PTR [rcx+0x44],al
  44c324:	and    BYTE PTR [rcx+0x54],r8b
  44c328:	push   rsp
  44c329:	push   rdx
  44c32a:	rex.WB
  44c32b:	rex.X push rbp
  44c32d:	push   rsp
  44c32e:	and    BYTE PTR [rip+0x73252073],r12b        # 0x7369e3a8
  44c335:	and    BYTE PTR [rbx+0x20],bl
  44c338:	rex.XB
  44c339:	rex.WRXB
  44c33a:	rex.WR
  44c33b:	rex.WR
  44c33c:	push   r12
  44c33e:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1e3b8
  44c345:	pop    rbx
  44c346:	and    BYTE PTR [rbx+0x41],al
  44c349:	push   rbx
  44c34a:	rex.XB
  44c34b:	rex.B
  44c34c:	rex.R
  44c34d:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c352:	rex.RB push r11
  44c354:	push   rsp
  44c355:	push   rdx
  44c356:	rex.WB
  44c357:	rex.XB push r12
  44c359:	and    BYTE PTR [rbp+0xa],bl
  44c35c:	and    BYTE PTR [rax],ah
  44c35e:	and    BYTE PTR [rax],ah
  44c360:	rex.R push rdx
  44c362:	rex.WRXB push r8
  44c364:	and    BYTE PTR [rcx+0x54],al
  44c367:	push   rsp
  44c368:	push   rdx
  44c369:	rex.WB
  44c36a:	rex.X push rbp
  44c36c:	push   rsp
  44c36d:	and    BYTE PTR [r11+0x20],r11b
  44c371:	rex.WB
  44c372:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c376:	rex.WB push r11
  44c378:	push   rsp
  44c379:	push   rbx
  44c37a:	and    BYTE PTR [rbp+0x20],bl
  44c37d:	and    eax,0x205b2073
  44c382:	rex.XB
  44c383:	push   r11
  44c385:	rex.XB
  44c386:	rex.B
  44c387:	rex.R
  44c388:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c38d:	rex.RB push r11
  44c38f:	push   rsp
  44c390:	push   rdx
  44c391:	rex.WB
  44c392:	rex.XB push r12
  44c394:	and    BYTE PTR [rbp+0xa],bl
  44c397:	and    BYTE PTR [rax],ah
  44c399:	and    BYTE PTR [rax],ah
  44c39b:	rex.B
  44c39c:	rex.WR push rsp
  44c39e:	rex.RB push r10
  44c3a0:	and    BYTE PTR [rcx+0x54],al
  44c3a3:	push   rsp
  44c3a4:	push   rdx
  44c3a5:	rex.WB
  44c3a6:	rex.X push rbp
  44c3a8:	push   rsp
  44c3a9:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fe423
  44c3b0:	push   rbx
  44c3b1:	rex.RB push r12
  44c3b3:	and    BYTE PTR [rcx+rax*2+0x54],al
  44c3b7:	and    BYTE PTR [r13+0x20],bl
  44c3bb:	push   rsp
  44c3bc:	pop    rcx
  44c3bd:	push   rax
  44c3be:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x209fe438
  44c3c5:	rex.XB
  44c3c6:	rex.WRXB
  44c3c7:	rex.WR
  44c3c8:	rex.WR
  44c3c9:	push   r12
  44c3cb:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1e445
  44c3d2:	pop    rbx
  44c3d3:	and    BYTE PTR [rbx+0x41],al
  44c3d6:	push   rbx
  44c3d7:	rex.XB
  44c3d8:	rex.B
  44c3d9:	rex.R
  44c3da:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c3df:	rex.RB push r11
  44c3e1:	push   rsp
  44c3e2:	push   rdx
  44c3e3:	rex.WB
  44c3e4:	rex.XB push r12
  44c3e6:	and    BYTE PTR [rbp+0x0],bl
  44c3e9:	(bad)  
  44c3ea:	je     0x44c460
  44c3ec:	jb     0x44c457
  44c3ee:	(bad)  
  44c3ef:	jne    0x44c465
  44c3f1:	gs pop rdi
  44c3f3:	outs   dx,BYTE PTR ds:[rsi]
  44c3f4:	(bad)  
  44c3f5:	ins    DWORD PTR es:[rdi],dx
  44c3f6:	add    BYTE PTR gs:[rbp+0x78],ah
  44c3fa:	imul   esi,DWORD PTR [rbx+0x74],0x5f676e69
  44c401:	outs   dx,BYTE PTR gs:[rsi]
  44c403:	jne    0x44c472
  44c405:	pop    rdi
  44c406:	jbe    0x44c469
  44c408:	ins    BYTE PTR es:[rdi],dx
  44c409:	jne    0x44c470
  44c40b:	add    BYTE PTR [rsi+0x65],ch
  44c40e:	ja     0x44c46f
  44c410:	outs   dx,BYTE PTR gs:[rsi]
  44c412:	jne    0x44c481
  44c414:	pop    rdi
  44c415:	jbe    0x44c478
  44c417:	ins    BYTE PTR es:[rdi],dx
  44c418:	jne    0x44c47f
  44c41a:	add    BYTE PTR [rsi+0x65],ch
  44c41d:	ja     0x44c47e
  44c41f:	(bad)  
  44c420:	je     0x44c496
  44c422:	jb     0x44c48d
  44c424:	(bad)  
  44c425:	jne    0x44c49b
  44c427:	gs pop rdi
  44c429:	outs   dx,BYTE PTR ds:[rsi]
  44c42a:	(bad)  
  44c42b:	ins    DWORD PTR es:[rdi],dx
  44c42c:	add    BYTE PTR gs:[rax],al
  44c42f:	add    BYTE PTR [rcx+0x4c],al
  44c432:	push   rsp
  44c433:	rex.RB push r10
  44c435:	and    BYTE PTR [rbp+0x53],dl
  44c438:	rex.RB push r10
  44c43a:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fe4b3
  44c440:	pop    rbx
  44c441:	and    BYTE PTR [rdi+0x49],dl
  44c444:	push   rsp
  44c445:	rex.W and BYTE PTR [rbp+0x20],bl
  44c449:	and    eax,0x205b2073
  44c44e:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44c454:	pop    rbp
  44c455:	or     cl,BYTE PTR [rdx]
  44c457:	and    eax,0x200a0a73
  44c45c:	and    BYTE PTR [rax],ah
  44c45e:	and    BYTE PTR [rax],ah
  44c460:	and    BYTE PTR [rbx+0x55],dl
  44c463:	push   rax
  44c464:	rex.RB push r10
  44c466:	push   rbp
  44c467:	push   rbx
  44c468:	rex.RB push r10
  44c46a:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44c46e:	rex.WRXB push r11
  44c470:	push   rbp
  44c471:	push   rax
  44c472:	rex.RB push r10
  44c474:	push   rbp
  44c475:	push   rbx
  44c476:	rex.RB push r10
  44c478:	or     ah,BYTE PTR [rax]
  44c47a:	and    BYTE PTR [rax],ah
  44c47c:	and    BYTE PTR [rax+riz*1+0x43],bh
  44c480:	push   rdx
  44c481:	rex.RB
  44c482:	push   r12
  44c484:	rex.RB
  44c485:	rex.R
  44c486:	and    BYTE PTR [rax+r12*1+0x4e],dil
  44c48b:	rex.WRXB
  44c48c:	rex.XB push r10
  44c48e:	rex.RB
  44c48f:	push   r12
  44c491:	rex.RB
  44c492:	rex.R
  44c493:	rex.X or spl,BYTE PTR [rax]
  44c496:	and    BYTE PTR [rax],ah
  44c498:	and    BYTE PTR [rax+riz*1+0x43],bh
  44c49c:	push   rdx
  44c49d:	rex.RB
  44c49e:	push   r12
  44c4a0:	rex.RB push r10
  44c4a2:	rex.WRXB
  44c4a3:	rex.WR
  44c4a4:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44c4a9:	rex.WRXB
  44c4aa:	rex.XB push r10
  44c4ac:	rex.RB
  44c4ad:	push   r12
  44c4af:	rex.RB push r10
  44c4b1:	rex.WRXB
  44c4b2:	rex.WR
  44c4b3:	or     r12b,BYTE PTR [r8]
  44c4b6:	and    BYTE PTR [rax],ah
  44c4b8:	and    BYTE PTR [rax+riz*1+0x43],bh
  44c4bc:	push   rdx
  44c4bd:	rex.RB
  44c4be:	push   r12
  44c4c0:	rex.RB push r13
  44c4c2:	push   rbx
  44c4c3:	rex.RB push r10
  44c4c5:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44c4c9:	rex.WRXB
  44c4ca:	rex.XB push r10
  44c4cc:	rex.RB
  44c4cd:	push   r12
  44c4cf:	rex.RB push r13
  44c4d1:	push   rbx
  44c4d2:	rex.RB push r10
  44c4d4:	or     ah,BYTE PTR [rax]
  44c4d6:	and    BYTE PTR [rax],ah
  44c4d8:	and    BYTE PTR [rax+riz*1+0x49],bh
  44c4dc:	rex.WRX
  44c4dd:	rex.W
  44c4de:	rex.RB push r10
  44c4e0:	rex.WB push r12
  44c4e2:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44c4e6:	rex.WRXB
  44c4e7:	rex.WB
  44c4e8:	rex.WRX
  44c4e9:	rex.W
  44c4ea:	rex.RB push r10
  44c4ec:	rex.WB push r12
  44c4ee:	or     ah,BYTE PTR [rax]
  44c4f0:	and    BYTE PTR [rax],ah
  44c4f2:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44c4f6:	rex.WRXB
  44c4f7:	rex.RXB
  44c4f8:	rex.WB
  44c4f9:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44c4fe:	rex.WRXB
  44c4ff:	rex.WR
  44c500:	rex.WRXB
  44c501:	rex.RXB
  44c502:	rex.WB
  44c503:	rex.WRX or r12b,BYTE PTR [rax]
  44c506:	and    BYTE PTR [rax],ah
  44c508:	and    BYTE PTR [rax+riz*1+0x52],bh
  44c50c:	rex.RB push r8
  44c50e:	rex.WR
  44c50f:	rex.WB
  44c510:	rex.XB
  44c511:	push   r12
  44c513:	rex.WB
  44c514:	rex.WRXB
  44c515:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44c51a:	rex.WRXB push r10
  44c51c:	rex.RB push r8
  44c51e:	rex.WR
  44c51f:	rex.WB
  44c520:	rex.XB
  44c521:	push   r12
  44c523:	rex.WB
  44c524:	rex.WRXB
  44c525:	rex.WRX or r12b,BYTE PTR [rax]
  44c528:	and    BYTE PTR [rax],ah
  44c52a:	and    BYTE PTR [rax+riz*1+0x43],bh
  44c52e:	rex.WRXB
  44c52f:	rex.WRX
  44c530:	rex.WRX
  44c531:	rex.RB
  44c532:	rex.XB push r12
  44c534:	rex.WB
  44c535:	rex.WRXB
  44c536:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  44c53b:	rex.WB push r12
  44c53d:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064cfb6
  44c543:	and    BYTE PTR [rax],ah
  44c545:	jl     0x44c567
  44c547:	pop    rbx
  44c548:	and    BYTE PTR [rbp+0x4e],al
  44c54b:	rex.XB push r10
  44c54d:	pop    rcx
  44c54e:	push   rax
  44c54f:	push   rsp
  44c550:	rex.RB
  44c551:	and    BYTE PTR [rax+riz*1+0x55],r15b
  44c556:	rex.WRX
  44c557:	rex.RB
  44c558:	rex.WRX
  44c559:	rex.XB push r10
  44c55b:	pop    rcx
  44c55c:	push   rax
  44c55d:	push   rsp
  44c55e:	rex.RB
  44c55f:	and    BYTE PTR [rbp+0x20],r11b
  44c563:	push   rax
  44c564:	push   r11
  44c566:	push   rbx
  44c567:	push   rdi
  44c568:	rex.WRXB push r10
  44c56a:	and    BYTE PTR [rdi],r12b
  44c56d:	and    eax,0x200a2773
  44c572:	and    BYTE PTR [rax],ah
  44c574:	and    BYTE PTR [rax+riz*1+0x56],bh
  44c578:	rex.B
  44c579:	rex.WR
  44c57a:	rex.WB
  44c57b:	and    BYTE PTR [rbp+0x4e],r10b
  44c57f:	push   rsp
  44c580:	rex.WB
  44c581:	rex.WR and BYTE PTR [rdi],r12b
  44c584:	and    eax,0xa0a2773
  44c589:	rex.B
  44c58a:	rex.WR push rsp
  44c58c:	rex.RB push r10
  44c58e:	and    BYTE PTR [rbp+0x53],dl
  44c591:	rex.RB push r10
  44c593:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e60c
  44c599:	rex.WRX
  44c59a:	rex.B
  44c59b:	rex.WRB
  44c59c:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c5a1:	and    eax,0x410a0a73
  44c5a6:	rex.WR push rsp
  44c5a8:	rex.RB push r10
  44c5aa:	and    BYTE PTR [rbp+0x53],dl
  44c5ad:	rex.RB push r10
  44c5af:	and    BYTE PTR [rip+0x45532073],ah        # 0x4597e628
  44c5b5:	push   rsp
  44c5b6:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bfe62f
  44c5bc:	push   rsp
  44c5bd:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  44c5c2:	and    BYTE PTR [rbp+0x20],bh
  44c5c5:	jnp    0x44c5e7
  44c5c7:	and    eax,0x207c2073
  44c5cc:	rex.R
  44c5cd:	rex.RB
  44c5ce:	rex.RX
  44c5cf:	push   r13
  44c5d1:	rex.WR push rsp
  44c5d3:	and    BYTE PTR [rbp+0xa],bh
  44c5d6:	rex.B
  44c5d7:	rex.WR push rsp
  44c5d9:	rex.RB push r10
  44c5db:	and    BYTE PTR [rbp+0x53],dl
  44c5de:	rex.RB push r10
  44c5e0:	and    BYTE PTR [rip+0x45532073],ah        # 0x4597e659
  44c5e6:	push   rsp
  44c5e7:	and    BYTE PTR [rip+0x52462073],ah        # 0x528ae660
  44c5ed:	rex.WRXB
  44c5ee:	rex.WRB and BYTE PTR [r11+0x55],r8b
  44c5f2:	push   rdx
  44c5f3:	push   rdx
  44c5f4:	rex.RB
  44c5f5:	rex.WRX push rsp
  44c5f7:	or     al,BYTE PTR [rcx+0x4c]
  44c5fa:	push   rsp
  44c5fb:	rex.RB push r10
  44c5fd:	and    BYTE PTR [rbp+0x53],dl
  44c600:	rex.RB push r10
  44c602:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e67b
  44c608:	push   rbx
  44c609:	rex.RB push r12
  44c60b:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85d084
  44c611:	push   rsp
  44c612:	rex.RB push r10
  44c614:	and    BYTE PTR [rbp+0x53],dl
  44c617:	rex.RB push r10
  44c619:	and    BYTE PTR [rip+0x45522073],ah        # 0x4596e692
  44c61f:	push   rbx
  44c620:	rex.RB push r12
  44c622:	and    BYTE PTR [rcx+0x4c],al
  44c625:	rex.WR add BYTE PTR [rbx+0x65],r14b
  44c629:	jb     0x44c6a1
  44c62b:	gs jb  0x44c68d
  44c62e:	outs   dx,BYTE PTR ds:[rsi]
  44c62f:	(bad)  
  44c630:	ins    DWORD PTR es:[rdi],dx
  44c631:	add    BYTE PTR gs:[rax],al
  44c634:	add    BYTE PTR [rax],al
  44c636:	add    BYTE PTR [rax],al
  44c638:	rex.B
  44c639:	rex.WR push rsp
  44c63b:	rex.RB push r10
  44c63d:	and    BYTE PTR [rbp+0x53],dl
  44c640:	rex.RB push r10
  44c642:	and    BYTE PTR [rbp+0x41],cl
  44c645:	push   rax
  44c646:	push   rax
  44c647:	rex.WB
  44c648:	rex.WRX
  44c649:	rex.RXB and BYTE PTR [r14+0x4f],r8b
  44c64d:	push   rdx
  44c64e:	and    BYTE PTR [rbx+0x20],bh
  44c651:	and    eax,0x207c2073
  44c656:	push   rbp
  44c657:	push   rbx
  44c658:	rex.RB push r10
  44c65a:	and    BYTE PTR [rax+riz*1+0x43],bh
  44c65e:	push   rbp
  44c65f:	push   rdx
  44c660:	push   rdx
  44c661:	rex.RB
  44c662:	rex.WRX push rsp
  44c664:	pop    rdi
  44c665:	push   rbp
  44c666:	push   rbx
  44c667:	rex.RB push r10
  44c669:	and    BYTE PTR [rax+riz*1+0x50],bh
  44c66d:	push   rbp
  44c66e:	rex.X
  44c66f:	rex.WR
  44c670:	rex.WB
  44c671:	rex.XB and BYTE PTR [r13+0xa],dil
  44c675:	and    BYTE PTR [rax],ah
  44c677:	and    BYTE PTR [rax],ah
  44c679:	push   rbx
  44c67a:	rex.RB push r10
  44c67c:	push   rsi
  44c67d:	rex.RB push r10
  44c67f:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064d0f8
  44c685:	and    BYTE PTR [rax],ah
  44c687:	rex.WRXB push r8
  44c689:	push   rsp
  44c68a:	rex.WB
  44c68b:	rex.WRXB
  44c68c:	rex.WRX push rbx
  44c68e:	and    BYTE PTR [rax],ch
  44c690:	and    BYTE PTR [rbx+0x20],bl
  44c693:	rex.B
  44c694:	rex.R
  44c695:	and    BYTE PTR [rax+riz*1+0x53],r15b
  44c69a:	rex.RB push r12
  44c69c:	and    BYTE PTR [rax+riz*1+0x44],bh
  44c6a0:	push   rdx
  44c6a1:	rex.WRXB push r8
  44c6a3:	and    BYTE PTR [rbp+0x20],bl
  44c6a6:	and    eax,0x275b2073
  44c6ab:	and    eax,0x205d2773
  44c6b0:	pop    rbx
  44c6b1:	sub    al,0x20
  44c6b3:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44c6b9:	sub    DWORD PTR [rax],eax
  44c6bb:	add    BYTE PTR [rax],al
  44c6bd:	add    BYTE PTR [rax],al
  44c6bf:	add    BYTE PTR [rcx+0x4c],al
  44c6c2:	push   rsp
  44c6c3:	rex.RB push r10
  44c6c5:	and    BYTE PTR [rsi+0x49],dl
  44c6c8:	rex.RB push r15
  44c6ca:	and    BYTE PTR [rbx+0x20],bl
  44c6cd:	rex.WB
  44c6ce:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c6d2:	rex.WB push r11
  44c6d4:	push   rsp
  44c6d5:	push   rbx
  44c6d6:	and    BYTE PTR [rbp+0x20],bl
  44c6d9:	and    eax,0x4c412073
  44c6de:	push   rsp
  44c6df:	rex.RB push r10
  44c6e1:	and    BYTE PTR [rbx+0x20],bl
  44c6e4:	rex.XB
  44c6e5:	rex.WRXB
  44c6e6:	rex.WR push rbp
  44c6e8:	rex.WRB
  44c6e9:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44c6ed:	and    eax,0x45532073
  44c6f2:	push   rsp
  44c6f3:	and    BYTE PTR [rbp+rax*2+0x46],al
  44c6f7:	push   r13
  44c6f9:	rex.WR push rsp
  44c6fb:	and    BYTE PTR [rip+0x4c410a73],ah        # 0x4c85d174
  44c701:	push   rsp
  44c702:	rex.RB push r10
  44c704:	and    BYTE PTR [rsi+0x49],dl
  44c707:	rex.RB push r15
  44c709:	and    BYTE PTR [rbx+0x20],bl
  44c70c:	rex.WB
  44c70d:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c711:	rex.WB push r11
  44c713:	push   rsp
  44c714:	push   rbx
  44c715:	and    BYTE PTR [rbp+0x20],bl
  44c718:	and    eax,0x4c412073
  44c71d:	push   rsp
  44c71e:	rex.RB push r10
  44c720:	and    BYTE PTR [rbx+0x20],bl
  44c723:	rex.XB
  44c724:	rex.WRXB
  44c725:	rex.WR push rbp
  44c727:	rex.WRB
  44c728:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44c72c:	and    eax,0x52442073
  44c731:	rex.WRXB push r8
  44c733:	and    BYTE PTR [rbp+rax*2+0x46],al
  44c737:	push   r13
  44c739:	rex.WR push rsp
  44c73b:	or     al,BYTE PTR [rcx+0x4c]
  44c73e:	push   rsp
  44c73f:	rex.RB push r10
  44c741:	and    BYTE PTR [rsi+0x49],dl
  44c744:	rex.RB push r15
  44c746:	and    BYTE PTR [rbx+0x20],bl
  44c749:	rex.WB
  44c74a:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c74e:	rex.WB push r11
  44c750:	push   rsp
  44c751:	push   rbx
  44c752:	and    BYTE PTR [rbp+0x20],bl
  44c755:	and    eax,0x574f2073
  44c75a:	rex.WRX
  44c75b:	rex.RB push r10
  44c75d:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  44c761:	and    eax,0x4c410a73
  44c766:	push   rsp
  44c767:	rex.RB push r10
  44c769:	and    BYTE PTR [rsi+0x49],dl
  44c76c:	rex.RB push r15
  44c76e:	and    BYTE PTR [rbx+0x20],bl
  44c771:	rex.WB
  44c772:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c776:	rex.WB push r11
  44c778:	push   rsp
  44c779:	push   rbx
  44c77a:	and    BYTE PTR [rbp+0x20],bl
  44c77d:	and    eax,0x45522073
  44c782:	rex.WRX
  44c783:	rex.B
  44c784:	rex.WRB
  44c785:	and    BYTE PTR [r15+rcx*2+0x20],r10b
  44c78a:	and    eax,0x4c410a73
  44c78f:	push   rsp
  44c790:	rex.RB push r10
  44c792:	and    BYTE PTR [rsi+0x49],dl
  44c795:	rex.RB push r15
  44c797:	and    BYTE PTR [rbx+0x20],bl
  44c79a:	rex.WB
  44c79b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c79f:	rex.WB push r11
  44c7a1:	push   rsp
  44c7a2:	push   rbx
  44c7a3:	and    BYTE PTR [rbp+0x20],bl
  44c7a6:	and    eax,0x45532073
  44c7ab:	push   rsp
  44c7ac:	and    BYTE PTR [rbx+0x43],dl
  44c7af:	rex.W
  44c7b0:	rex.RB
  44c7b1:	rex.WRB
  44c7b2:	and    BYTE PTR [rip+0x4c410a73],spl        # 0x4c85d22c
  44c7b9:	push   rsp
  44c7ba:	rex.RB push r10
  44c7bc:	and    BYTE PTR [rsi+0x49],dl
  44c7bf:	rex.RB push r15
  44c7c1:	and    BYTE PTR [rbx+0x20],bl
  44c7c4:	rex.WB
  44c7c5:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c7c9:	rex.WB push r11
  44c7cb:	push   rsp
  44c7cc:	push   rbx
  44c7cd:	and    BYTE PTR [rbp+0x20],bl
  44c7d0:	and    eax,0x45532073
  44c7d5:	push   rsp
  44c7d6:	and    BYTE PTR [rax],ch
  44c7d8:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3d9fe851
  44c7de:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b652557
  44c7e4:	sub    al,0x20
  44c7e6:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44c7ec:	sub    DWORD PTR [rdx],ecx
  44c7ee:	rex.B
  44c7ef:	rex.WR push rsp
  44c7f1:	rex.RB push r10
  44c7f3:	and    BYTE PTR [rsi+0x49],dl
  44c7f6:	rex.RB push r15
  44c7f8:	and    BYTE PTR [rbx+0x20],bl
  44c7fb:	rex.WB
  44c7fc:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44c800:	rex.WB push r11
  44c802:	push   rsp
  44c803:	push   rbx
  44c804:	and    BYTE PTR [rbp+0x20],bl
  44c807:	and    eax,0x45522073
  44c80c:	push   rbx
  44c80d:	rex.RB push r12
  44c80f:	and    BYTE PTR [rax],ch
  44c811:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fe88a
  44c817:	and    BYTE PTR [rsi],ch
  44c819:	cs and BYTE PTR cs:[rbp+0x20],bl
  44c81e:	sub    DWORD PTR [rax],eax
  44c820:	jbe    0x44c88b
  44c822:	gs ja  0x44c884
  44c825:	outs   dx,DWORD PTR ds:[rsi]
  44c826:	jo     0x44c89c
  44c828:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d616e5f
  44c82f:	add    BYTE PTR gs:[rsi+0x69],dh
  44c833:	gs ja  0x44c895
  44c836:	outs   dx,DWORD PTR ds:[rsi]
  44c837:	jo     0x44c8ad
  44c839:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c61765f
  44c840:	jne    0x44c8a7
  44c842:	add    BYTE PTR [rax],al
  44c844:	add    BYTE PTR [rax],al
  44c846:	add    BYTE PTR [rax],al
  44c848:	rex.B
  44c849:	rex.WRX
  44c84a:	rex.B
  44c84b:	rex.WR pop rcx
  44c84d:	pop    rdx
  44c84e:	and    BYTE PTR [r11+0x20],r11b
  44c852:	push   rsi
  44c853:	rex.RB push r10
  44c855:	rex.X
  44c856:	rex.WRXB push r11
  44c858:	and    BYTE PTR [r13+0x20],r11b
  44c85c:	pop    rbx
  44c85d:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fe8d6
  44c863:	sub    BYTE PTR [rax],ah
  44c865:	and    eax,0x2c5b2073
  44c86a:	and    BYTE PTR [rsi],ch
  44c86c:	cs cs pop rbp
  44c86f:	and    BYTE PTR [rcx],ch
  44c871:	and    BYTE PTR [rbp+0x20],bl
  44c874:	pop    rbp
  44c875:	add    BYTE PTR [rax],al
  44c877:	add    BYTE PTR [rdi+0x68],dh
  44c87a:	gs jb  0x44c8e2
  44c87d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  44c881:	outs   dx,BYTE PTR ds:[rsi]
  44c882:	jae    0x44c8e5
  44c884:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44c888:	outs   dx,BYTE PTR ds:[rsi]
  44c889:	pop    rdi
  44c88a:	ins    DWORD PTR es:[rdi],dx
  44c88b:	outs   dx,DWORD PTR ds:[rsi]
  44c88c:	fs and BYTE PTR gs:[rcx+0x73],ch
  44c891:	and    BYTE PTR [rdi+0x6e],ch
  44c894:	and    BYTE PTR gs:[rdi+0x66],ch
  44c898:	cmp    al,BYTE PTR [rax]
  44c89a:	je     0x44c90e
  44c89c:	(bad)  
  44c89d:	outs   dx,BYTE PTR ds:[rsi]
  44c89e:	jae    0x44c901
  44c8a0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44c8a4:	outs   dx,BYTE PTR ds:[rsi]
  44c8a5:	pop    rdi
  44c8a6:	ins    DWORD PTR es:[rdi],dx
  44c8a7:	outs   dx,DWORD PTR ds:[rsi]
  44c8a8:	fs add BYTE PTR gs:[rax],al
  44c8ac:	add    BYTE PTR [rax],al
  44c8ae:	add    BYTE PTR [rax],al
  44c8b0:	rex.X
  44c8b1:	rex.RB
  44c8b2:	rex.RXB
  44c8b3:	rex.WB
  44c8b4:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44c8b8:	push   rdi
  44c8b9:	rex.WRXB push r10
  44c8bb:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  44c8c0:	push   rdx
  44c8c1:	rex.B
  44c8c2:	rex.WRX push rbx
  44c8c4:	rex.B
  44c8c5:	rex.XB push r12
  44c8c7:	rex.WB
  44c8c8:	rex.WRXB
  44c8c9:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  44c8cd:	pop    rbx
  44c8ce:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fe947
  44c8d4:	and    BYTE PTR [rsi],ch
  44c8d6:	cs cs pop rbp
  44c8d9:	and    BYTE PTR [rbp+0xa],bl
  44c8dc:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ed355
  44c8e2:	and    BYTE PTR [rax],ah
  44c8e4:	and    BYTE PTR [rcx+0x53],cl
  44c8e7:	rex.WRXB
  44c8e8:	rex.WR
  44c8e9:	push   r12
  44c8eb:	rex.WB
  44c8ec:	rex.WRXB
  44c8ed:	rex.WRX and BYTE PTR [rbp+r8*2+0x56],r9b
  44c8f2:	rex.RB
  44c8f3:	rex.WR and BYTE PTR [rbx+0x20],r15b
  44c8f7:	push   rbx
  44c8f8:	rex.RB push r10
  44c8fa:	rex.WB
  44c8fb:	rex.B
  44c8fc:	rex.WR
  44c8fd:	rex.WB pop r10
  44c8ff:	rex.B
  44c900:	rex.X
  44c901:	rex.WR
  44c902:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c907:	rex.RB push r8
  44c909:	rex.RB
  44c90a:	push   r12
  44c90c:	rex.B
  44c90d:	rex.X
  44c90e:	rex.WR
  44c90f:	and    BYTE PTR [r10+0x45],r10b
  44c913:	rex.B
  44c914:	and    BYTE PTR [rax+riz*1+0x52],r15b
  44c919:	rex.RB
  44c91a:	rex.B
  44c91b:	and    BYTE PTR [rbx+0x4f],r8b
  44c91f:	rex.WRB
  44c920:	rex.WRB
  44c921:	rex.WB push r12
  44c923:	push   rsp
  44c924:	rex.RB
  44c925:	and    BYTE PTR [rax+riz*1+0x52],r15b
  44c92a:	rex.RB
  44c92b:	rex.B
  44c92c:	and    BYTE PTR [rbp+0x4e],r10b
  44c930:	rex.XB
  44c931:	rex.WRXB
  44c932:	rex.WRB
  44c933:	rex.WRB
  44c934:	rex.WB push r12
  44c936:	push   rsp
  44c937:	rex.RB
  44c938:	and    BYTE PTR [rbp+0xa],r15b
  44c93c:	and    BYTE PTR [rax],ah
  44c93e:	and    BYTE PTR [rax],ah
  44c940:	push   rdx
  44c941:	rex.RB
  44c942:	rex.B
  44c943:	and    BYTE PTR [rdi+0x52],r10b
  44c947:	rex.WB push r12
  44c949:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44c94e:	rex.RB
  44c94f:	rex.B
  44c950:	and    BYTE PTR [rdi+0x4e],r9b
  44c954:	rex.WR pop rcx
  44c956:	or     ah,BYTE PTR [rax]
  44c958:	and    BYTE PTR [rax],ah
  44c95a:	and    BYTE PTR [rbx+0x20],bl
  44c95d:	rex.WRX
  44c95e:	rex.WRXB push r12
  44c960:	and    BYTE PTR [rbp+0x20],bl
  44c963:	rex.R
  44c964:	rex.RB
  44c965:	rex.RX
  44c966:	rex.RB push r10
  44c968:	push   rdx
  44c969:	rex.B
  44c96a:	rex.X
  44c96b:	rex.WR
  44c96c:	add    BYTE PTR [r11+0x48],r8b
  44c970:	rex.RB
  44c971:	rex.XB
  44c972:	rex.WXB push r8
  44c974:	rex.WRXB
  44c975:	rex.WB
  44c976:	rex.WRX push rsp
  44c978:	add    BYTE PTR [rbx+0x4c],al
  44c97b:	rex.WRXB push r11
  44c97d:	and    BYTE PTR [r11+0x20],r15b
  44c981:	and    eax,0x207c2073
  44c986:	rex.B
  44c987:	rex.WR
  44c988:	rex.WR and BYTE PTR [rbp+0x0],r15b
  44c98c:	add    BYTE PTR [rax],al
  44c98e:	add    BYTE PTR [rax],al
  44c990:	rex.XB
  44c991:	rex.WR push rbp
  44c993:	push   rbx
  44c994:	push   rsp
  44c995:	rex.RB push r10
  44c997:	and    BYTE PTR [rbx+0x56],bl
  44c99a:	rex.RB push r10
  44c99c:	rex.X
  44c99d:	rex.WRXB push r11
  44c99f:	rex.RB pop r13
  44c9a1:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fea1a
  44c9a7:	push   rbp
  44c9a8:	push   rbx
  44c9a9:	rex.WB
  44c9aa:	rex.WRX
  44c9ab:	rex.RXB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1ea25
  44c9b2:	rex.XB
  44c9b3:	rex.WR push rbp
  44c9b5:	push   rbx
  44c9b6:	push   rsp
  44c9b7:	rex.RB push r10
  44c9b9:	and    BYTE PTR [rbx+0x56],bl
  44c9bc:	rex.RB push r10
  44c9be:	rex.X
  44c9bf:	rex.WRXB push r11
  44c9c1:	rex.RB pop r13
  44c9c3:	add    BYTE PTR [rax],al
  44c9c5:	add    BYTE PTR [rax],al
  44c9c7:	add    BYTE PTR [rbx+0x4f],al
  44c9ca:	rex.WRB
  44c9cb:	rex.WRB
  44c9cc:	rex.RB
  44c9cd:	rex.WRX push rsp
  44c9cf:	and    BYTE PTR [rdi+0x4e],cl
  44c9d2:	or     bh,BYTE PTR [rbx+0xa]
  44c9d5:	and    BYTE PTR [rax],ah
  44c9d7:	rex.B
  44c9d8:	rex.RXB
  44c9d9:	rex.RXB push r10
  44c9db:	rex.RB
  44c9dc:	rex.RXB
  44c9dd:	push   r12
  44c9df:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cea59
  44c9e6:	and    eax,0x20292073
  44c9eb:	jl     0x44c9f7
  44c9ed:	and    BYTE PTR [rax],ah
  44c9ef:	rex.XB
  44c9f0:	push   r11
  44c9f2:	push   rsp
  44c9f3:	and    BYTE PTR [rax],ch
  44c9f5:	and    eax,0x53412073
  44c9fa:	and    BYTE PTR [rip+0x7c202973],ah        # 0x7c64f373
  44ca00:	or     ah,BYTE PTR [rax]
  44ca02:	and    BYTE PTR [rbx+0x4f],al
  44ca05:	rex.WR
  44ca06:	rex.WR
  44ca07:	push   r12
  44ca09:	rex.WB
  44ca0a:	rex.WRXB
  44ca0b:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ea85
  44ca12:	and    BYTE PTR [rax],ah
  44ca14:	rex.XB
  44ca15:	rex.WRXB
  44ca16:	rex.WR push rbp
  44ca18:	rex.WRB
  44ca19:	rex.WRX and BYTE PTR [rip+0x73252e73],r12b        # 0x7369f893
  44ca20:	and    BYTE PTR [rdx+rcx*1+0x20],bh
  44ca24:	and    BYTE PTR [rbx+0x4f],al
  44ca27:	rex.WRX push rbx
  44ca29:	push   rsp
  44ca2a:	push   rdx
  44ca2b:	rex.B
  44ca2c:	rex.WB
  44ca2d:	rex.WRX push rsp
  44ca2f:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e93eaa8
  44ca35:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eaae
  44ca3b:	and    BYTE PTR [rax],ah
  44ca3d:	rex.XB
  44ca3e:	rex.WRXB
  44ca3f:	rex.WRX push rsi
  44ca41:	rex.RB push r10
  44ca43:	push   rbx
  44ca44:	rex.WB
  44ca45:	rex.WRXB
  44ca46:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0eac0
  44ca4d:	and    BYTE PTR [rax],ah
  44ca4f:	rex.R
  44ca50:	push   r12
  44ca52:	rex.B
  44ca53:	rex.X
  44ca54:	push   r11
  44ca56:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ead0
  44ca5d:	and    BYTE PTR [rax],ah
  44ca5f:	rex.R
  44ca60:	rex.WRXB
  44ca61:	rex.WRB
  44ca62:	rex.B
  44ca63:	rex.WB
  44ca64:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0eade
  44ca6b:	and    BYTE PTR [rax],ah
  44ca6d:	rex.RB pop r8
  44ca6f:	push   rsp
  44ca70:	rex.RB
  44ca71:	rex.WRX push rbx
  44ca73:	rex.WB
  44ca74:	rex.WRXB
  44ca75:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0eaef
  44ca7c:	and    BYTE PTR [rax],ah
  44ca7e:	rex.RB push r14
  44ca80:	rex.RB
  44ca81:	rex.WRX push rsp
  44ca83:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44ca87:	rex.RXB
  44ca88:	rex.RXB
  44ca89:	rex.RB push r10
  44ca8b:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eb04
  44ca91:	and    BYTE PTR [rax],ah
  44ca93:	rex.RX
  44ca94:	rex.WRXB push r10
  44ca96:	rex.RB
  44ca97:	rex.WB
  44ca98:	rex.RXB
  44ca99:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44ca9e:	and    BYTE PTR [r15+0x52],dl
  44caa2:	push   r8
  44caa4:	push   rax
  44caa5:	rex.RB push r10
  44caa7:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eb20
  44caad:	and    BYTE PTR [rax],ah
  44caaf:	rex.RX
  44cab0:	rex.WRXB push r10
  44cab2:	rex.RB
  44cab3:	rex.WB
  44cab4:	rex.RXB
  44cab5:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44caba:	rex.WR
  44cabb:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0eb35
  44cac2:	and    BYTE PTR [rax],ah
  44cac4:	rex.RX push rbp
  44cac6:	rex.WRX
  44cac7:	rex.XB push r12
  44cac9:	rex.WB
  44caca:	rex.WRXB
  44cacb:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206ceb45
  44cad2:	pop    rbx
  44cad3:	and    BYTE PTR [rbx+0x20],bl
  44cad6:	and    eax,0x205d2073
  44cadb:	pop    rbx
  44cadc:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1eb55
  44cae2:	and    eax,0x2c5b2073
  44cae7:	and    BYTE PTR [rsi],ch
  44cae9:	cs cs pop rbp
  44caec:	and    BYTE PTR [rbp+0x20],bl
  44caef:	sub    DWORD PTR [rax],esp
  44caf1:	jl     0x44cafd
  44caf3:	and    BYTE PTR [rax],ah
  44caf5:	rex.WB
  44caf6:	rex.WRX
  44caf7:	rex.R
  44caf8:	rex.RB pop r8
  44cafa:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eb73
  44cb00:	and    BYTE PTR [rax],ah
  44cb02:	rex.WR
  44cb03:	push   r10
  44cb05:	rex.RXB
  44cb06:	and    BYTE PTR [r15+0x42],r9b
  44cb0a:	rex.WX
  44cb0b:	rex.RB
  44cb0c:	rex.XB push r12
  44cb0e:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eb87
  44cb14:	and    BYTE PTR [rax],ah
  44cb16:	rex.WRB
  44cb17:	push   r12
  44cb19:	rex.RB push r10
  44cb1b:	rex.WB
  44cb1c:	rex.B
  44cb1d:	rex.WR
  44cb1e:	rex.WB pop r10
  44cb20:	rex.RB
  44cb21:	and    BYTE PTR [rsi+0x49],r10b
  44cb25:	rex.RB push r15
  44cb27:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0eba0
  44cb2d:	and    BYTE PTR [rax],ah
  44cb2f:	rex.WRXB push r8
  44cb31:	rex.RB push r10
  44cb33:	push   r12
  44cb35:	rex.WRXB push r10
  44cb37:	and    BYTE PTR [rip+0x25282073],ah        # 0x256cebb0
  44cb3d:	jae    0x44cb6b
  44cb3f:	and    BYTE PTR [rip+0x7c202973],ah        # 0x7c64f4b8
  44cb45:	or     ah,BYTE PTR [rax]
  44cb47:	and    BYTE PTR [rdi+0x50],cl
  44cb4a:	rex.RB push r10
  44cb4c:	push   r12
  44cb4e:	rex.WRXB push r10
  44cb50:	and    BYTE PTR [rbx+0x4c],al
  44cb53:	push   r11
  44cb55:	push   rbx
  44cb56:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399ebcf
  44cb5c:	rex.WB
  44cb5d:	rex.WRX
  44cb5e:	rex.RXB and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ebd8
  44cb65:	and    BYTE PTR [rax],ah
  44cb67:	rex.WRXB push r8
  44cb69:	rex.RB push r10
  44cb6b:	push   r12
  44cb6d:	rex.WRXB push r10
  44cb6f:	and    BYTE PTR [rsi+0x41],al
  44cb72:	rex.WRB
  44cb73:	rex.WB
  44cb74:	rex.WR pop rcx
  44cb76:	and    BYTE PTR [rip+0x53552073],ah        # 0x5399ebef
  44cb7c:	rex.WB
  44cb7d:	rex.WRX
  44cb7e:	rex.RXB and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ebf8
  44cb85:	and    BYTE PTR [rax],ah
  44cb87:	pop    rbx
  44cb88:	and    BYTE PTR [rax+0x52],dl
  44cb8b:	rex.WRXB
  44cb8c:	rex.XB
  44cb8d:	rex.RB
  44cb8e:	rex.R push rbp
  44cb90:	push   rdx
  44cb91:	rex.B
  44cb92:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44cb96:	rex.WR
  44cb97:	rex.B
  44cb98:	rex.WRX
  44cb99:	rex.RXB push r13
  44cb9b:	rex.B
  44cb9c:	rex.RXB
  44cb9d:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ec17
  44cba4:	and    BYTE PTR [rax],ah
  44cba6:	push   rdx
  44cba7:	rex.WRXB
  44cba8:	rex.WR
  44cba9:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ec23
  44cbb0:	and    BYTE PTR [rax],ah
  44cbb2:	push   rdx
  44cbb3:	push   rbp
  44cbb4:	rex.WR
  44cbb5:	and    BYTE PTR [rip+0x4e4f2073],r12b        # 0x4e93ec2f
  44cbbc:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0ec35
  44cbc2:	and    BYTE PTR [rax],ah
  44cbc4:	push   rbx
  44cbc5:	rex.XB
  44cbc6:	rex.W
  44cbc7:	rex.RB
  44cbc8:	rex.WRB
  44cbc9:	and    BYTE PTR [rip+0xa7c2073],spl        # 0xac0ec43
  44cbd0:	and    BYTE PTR [rax],ah
  44cbd2:	push   rbx
  44cbd3:	rex.RB push r9
  44cbd5:	push   rbp
  44cbd6:	rex.RB
  44cbd7:	rex.WRX
  44cbd8:	rex.XB
  44cbd9:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ec53
  44cbe0:	and    BYTE PTR [rax],ah
  44cbe2:	push   rbx
  44cbe3:	rex.RB push r10
  44cbe5:	push   rsi
  44cbe6:	rex.RB push r10
  44cbe8:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0ec61
  44cbee:	and    BYTE PTR [rax],ah
  44cbf0:	push   rsp
  44cbf1:	rex.B
  44cbf2:	rex.X
  44cbf3:	rex.WR
  44cbf4:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ec6e
  44cbfb:	and    BYTE PTR [rax],ah
  44cbfd:	push   rsp
  44cbfe:	rex.B
  44cbff:	rex.X
  44cc00:	rex.WR
  44cc01:	rex.RB push r11
  44cc03:	push   rax
  44cc04:	rex.B
  44cc05:	rex.XB
  44cc06:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ec80
  44cc0d:	and    BYTE PTR [rax],ah
  44cc0f:	push   rsp
  44cc10:	rex.RB pop r8
  44cc12:	push   rsp
  44cc13:	and    BYTE PTR [rbx+0x45],dl
  44cc16:	push   r10
  44cc18:	rex.XB
  44cc19:	rex.W and BYTE PTR [rbx+0x4f],al
  44cc1d:	rex.WRX
  44cc1e:	rex.RX
  44cc1f:	rex.WB
  44cc20:	rex.RXB push r13
  44cc22:	push   rdx
  44cc23:	push   r12
  44cc25:	rex.WB
  44cc26:	rex.WRXB
  44cc27:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac0eca1
  44cc2e:	and    BYTE PTR [rax],ah
  44cc30:	push   rsp
  44cc31:	rex.RB pop r8
  44cc33:	push   rsp
  44cc34:	and    BYTE PTR [rbx+0x45],dl
  44cc37:	push   r10
  44cc39:	rex.XB
  44cc3a:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44cc3f:	push   rsp
  44cc40:	rex.WB
  44cc41:	rex.WRXB
  44cc42:	rex.WRX
  44cc43:	push   r10
  44cc45:	pop    rcx
  44cc46:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0ecbf
  44cc4c:	and    BYTE PTR [rax],ah
  44cc4e:	push   rsp
  44cc4f:	rex.RB pop r8
  44cc51:	push   rsp
  44cc52:	and    BYTE PTR [rbx+0x45],dl
  44cc55:	push   r10
  44cc57:	rex.XB
  44cc58:	rex.W and BYTE PTR [rax+0x41],dl
  44cc5c:	push   rdx
  44cc5d:	push   rbx
  44cc5e:	rex.RB push r10
  44cc60:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0ecd9
  44cc66:	and    BYTE PTR [rax],ah
  44cc68:	push   rsp
  44cc69:	rex.RB pop r8
  44cc6b:	push   rsp
  44cc6c:	and    BYTE PTR [rbx+0x45],dl
  44cc6f:	push   r10
  44cc71:	rex.XB
  44cc72:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  44cc77:	push   rax
  44cc78:	rex.WR
  44cc79:	push   r12
  44cc7b:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ecf5
  44cc82:	and    BYTE PTR [rax],ah
  44cc84:	push   rsp
  44cc85:	push   rdx
  44cc86:	rex.WB
  44cc87:	rex.RXB
  44cc88:	rex.RXB
  44cc89:	rex.RB push r10
  44cc8b:	and    BYTE PTR [rip+0x4e4f2073],ah        # 0x4e93ed04
  44cc91:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac0ed0a
  44cc97:	and    BYTE PTR [rax],ah
  44cc99:	push   rsp
  44cc9a:	pop    rcx
  44cc9b:	push   rax
  44cc9c:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac0ed16
  44cca3:	and    BYTE PTR [rax],ah
  44cca5:	push   rsi
  44cca6:	rex.WB
  44cca7:	rex.RB push r15
  44cca9:	and    BYTE PTR [rip+0x207d0a73],ah        # 0x20c1d722
  44ccaf:	rex.WB push r11
  44ccb1:	and    BYTE PTR [rdi],ah
  44ccb3:	and    eax,0xa0a2773
  44ccb8:	and    eax,0x2a0a0a73
  44ccbd:	and    BYTE PTR [rdx+rcx*1+0x5b],bh
  44ccc1:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1ed3a
  44ccc7:	pop    rbx
  44ccc8:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1ed41
  44ccce:	and    eax,0x205b2073
  44ccd3:	sub    al,0x20
  44ccd5:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44ccdb:	jl     0x44cce7
  44ccdd:	pop    rbx
  44ccde:	and    BYTE PTR [rbx+0x20],bl
  44cce1:	and    eax,0x205d2073
  44cce6:	pop    rbx
  44cce7:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1ed60
  44cced:	and    eax,0x205b2073
  44ccf2:	sub    al,0x20
  44ccf4:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44ccfa:	pop    rbp
  44ccfb:	and    BYTE PTR [rdi+0x52],cl
  44ccfe:	rex.R
  44ccff:	rex.RB push r10
  44cd01:	and    BYTE PTR [rdx+0x59],al
  44cd04:	and    BYTE PTR [rbx+0x20],bl
  44cd07:	and    eax,0x205d2073
  44cd0c:	pop    rbx
  44cd0d:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1ed86
  44cd13:	and    eax,0x205b2073
  44cd18:	sub    al,0x20
  44cd1a:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  44cd20:	je     0x44cd87
  44cd22:	js     0x44cd98
  44cd24:	add    BYTE PTR [rdx+0x75],dh
  44cd27:	ins    BYTE PTR es:[rdi],dx
  44cd28:	gs pop rdi
  44cd2a:	outs   dx,BYTE PTR ds:[rsi]
  44cd2b:	(bad)  
  44cd2c:	ins    DWORD PTR es:[rdi],dx
  44cd2d:	add    BYTE PTR gs:[rdx+0x65],dh
  44cd31:	ins    BYTE PTR es:[rdi],dx
  44cd32:	(bad)  
  44cd33:	je     0x44cd9e
  44cd35:	outs   dx,DWORD PTR ds:[rsi]
  44cd36:	outs   dx,BYTE PTR ds:[rsi]
  44cd37:	pop    rdi
  44cd38:	outs   dx,BYTE PTR ds:[rsi]
  44cd39:	(bad)  
  44cd3a:	ins    DWORD PTR es:[rdi],dx
  44cd3b:	add    BYTE PTR gs:[rbx+0x4f],al
  44cd3f:	rex.WRB
  44cd40:	rex.WRB
  44cd41:	rex.WB push r12
  44cd43:	and    BYTE PTR [rbx+0x20],bl
  44cd46:	push   rdi
  44cd47:	rex.WRXB push r10
  44cd49:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  44cd4e:	push   rdx
  44cd4f:	rex.B
  44cd50:	rex.WRX push rbx
  44cd52:	rex.B
  44cd53:	rex.XB push r12
  44cd55:	rex.WB
  44cd56:	rex.WRXB
  44cd57:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  44cd5b:	je     0x44cdcf
  44cd5d:	(bad)  
  44cd5e:	outs   dx,BYTE PTR ds:[rsi]
  44cd5f:	jae    0x44cdc2
  44cd61:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44cd65:	outs   dx,BYTE PTR ds:[rsi]
  44cd66:	pop    rdi
  44cd67:	imul   esp,DWORD PTR [rax+rax*1+0x43],0x494d4d4f
  44cd6f:	push   rsp
  44cd70:	and    BYTE PTR [rax+0x52],dl
  44cd73:	rex.RB push r8
  44cd75:	push   r10
  44cd77:	rex.RB
  44cd78:	and    BYTE PTR [rip+0x73],r12b        # 0x44cdf2
  44cd7f:	add    BYTE PTR [rbx+0x4f],al
  44cd82:	push   rax
  44cd83:	pop    rcx
  44cd84:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209fedfd
  44cd8a:	sub    BYTE PTR [rax],ah
  44cd8c:	and    eax,0x2c5b2073
  44cd91:	and    BYTE PTR [rsi],ch
  44cd93:	cs cs pop rbp
  44cd96:	and    BYTE PTR [rcx],ch
  44cd98:	and    BYTE PTR [rbp+0xa],bl
  44cd9b:	and    BYTE PTR [rax],ah
  44cd9d:	and    BYTE PTR [rax],ah
  44cd9f:	rex.RX push rdx
  44cda1:	rex.WRXB
  44cda2:	rex.WRB and BYTE PTR [r11+0x20],r15b
  44cda6:	(bad)  
  44cda7:	and    eax,0x7c202773
  44cdac:	and    BYTE PTR [rax+0x52],dl
  44cdaf:	rex.WRXB
  44cdb0:	rex.RXB push r10
  44cdb2:	rex.B
  44cdb3:	rex.WRB and BYTE PTR [r15],r12b
  44cdb6:	and    eax,0x7c202773
  44cdbb:	and    BYTE PTR [rbx+0x54],dl
  44cdbe:	rex.R
  44cdbf:	rex.WB
  44cdc0:	rex.WRX and BYTE PTR [rbp+0xa],r15b
  44cdc4:	and    BYTE PTR [rax],ah
  44cdc6:	and    BYTE PTR [rax],ah
  44cdc8:	pop    rbx
  44cdc9:	and    BYTE PTR [rbx+0x20],bl
  44cdcc:	push   rdi
  44cdcd:	rex.WB push r12
  44cdcf:	rex.W and BYTE PTR [rbp+0x20],bl
  44cdd3:	sub    BYTE PTR [rax],ah
  44cdd5:	and    eax,0x2c5b2073
  44cdda:	and    BYTE PTR [rsi],ch
  44cddc:	cs cs pop rbp
  44cddf:	and    BYTE PTR [rcx],ch
  44cde1:	and    BYTE PTR [rbp+0xa],bl
  44cde4:	or     al,BYTE PTR [rbx+0x4f]
  44cde7:	push   rax
  44cde8:	pop    rcx
  44cde9:	and    BYTE PTR [rbx+0x20],bh
  44cdec:	and    eax,0x205b2073
  44cdf1:	sub    BYTE PTR [rax],ah
  44cdf3:	and    eax,0x2c5b2073
  44cdf8:	and    BYTE PTR [rsi],ch
  44cdfa:	cs cs pop rbp
  44cdfd:	and    BYTE PTR [rcx],ch
  44cdff:	and    BYTE PTR [rbp+0x20],bl
  44ce02:	jl     0x44ce24
  44ce04:	sub    BYTE PTR [rax],ah
  44ce06:	and    eax,0x20292073
  44ce0b:	jge    0x44ce17
  44ce0d:	and    BYTE PTR [rax],ah
  44ce0f:	and    BYTE PTR [rax],ah
  44ce11:	push   rsp
  44ce12:	rex.WRXB and BYTE PTR [r11+0x20],r15b
  44ce16:	(bad)  
  44ce17:	and    eax,0x7c202773
  44ce1c:	and    BYTE PTR [rax+0x52],dl
  44ce1f:	rex.WRXB
  44ce20:	rex.RXB push r10
  44ce22:	rex.B
  44ce23:	rex.WRB and BYTE PTR [r15],r12b
  44ce26:	and    eax,0x7c202773
  44ce2b:	and    BYTE PTR [rbx+0x54],dl
  44ce2e:	rex.R
  44ce2f:	rex.WRXB push r13
  44ce31:	push   rsp
  44ce32:	and    BYTE PTR [rbp+0xa],bh
  44ce35:	and    BYTE PTR [rax],ah
  44ce37:	and    BYTE PTR [rax],ah
  44ce39:	pop    rbx
  44ce3a:	and    BYTE PTR [rbx+0x20],bl
  44ce3d:	push   rdi
  44ce3e:	rex.WB push r12
  44ce40:	rex.W and BYTE PTR [rbp+0x20],bl
  44ce44:	sub    BYTE PTR [rax],ah
  44ce46:	and    eax,0x2c5b2073
  44ce4b:	and    BYTE PTR [rsi],ch
  44ce4d:	cs cs pop rbp
  44ce50:	and    BYTE PTR [rcx],ch
  44ce52:	and    BYTE PTR [rbp+0xa],bl
  44ce55:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ed8ce
  44ce5b:	and    BYTE PTR [rax],ah
  44ce5d:	and    BYTE PTR [rsi+0x4f],al
  44ce60:	push   rdx
  44ce61:	rex.WRB
  44ce62:	push   r12
  44ce64:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064d8dd
  44ce6a:	and    BYTE PTR [rax],ah
  44ce6c:	rex.WRXB
  44ce6d:	rex.WB
  44ce6e:	rex.R push rbx
  44ce70:	and    BYTE PTR [rbx+0x20],bl
  44ce73:	and    eax,0xa5d2073
  44ce78:	and    BYTE PTR [rax],ah
  44ce7a:	and    BYTE PTR [rax],ah
  44ce7c:	rex.RX push rdx
  44ce7e:	rex.RB
  44ce7f:	rex.RB pop r10
  44ce81:	and    BYTE PTR [r11+0x20],r11b
  44ce85:	and    eax,0xa5d2073
  44ce8a:	and    BYTE PTR [rax],ah
  44ce8c:	and    BYTE PTR [rax],ah
  44ce8e:	rex.R
  44ce8f:	rex.RB
  44ce90:	rex.WR
  44ce91:	rex.WB
  44ce92:	rex.WRB
  44ce93:	rex.WB push r12
  44ce95:	rex.RB push r10
  44ce97:	and    BYTE PTR [rdi],ah
  44ce99:	and    eax,0x200a2773
  44ce9e:	and    BYTE PTR [rax],ah
  44cea0:	and    BYTE PTR [rsi+0x55],cl
  44cea3:	rex.WR
  44cea4:	rex.WR and BYTE PTR [rdi],r12b
  44cea7:	and    eax,0x200a2773
  44ceac:	and    BYTE PTR [rax],ah
  44ceae:	and    BYTE PTR [rax+0x45],cl
  44ceb1:	rex.B
  44ceb2:	rex.R
  44ceb3:	rex.RB push r10
  44ceb5:	and    BYTE PTR [rbx+0x20],bl
  44ceb8:	and    eax,0xa5d2073
  44cebd:	and    BYTE PTR [rax],ah
  44cebf:	and    BYTE PTR [rax],ah
  44cec1:	push   rcx
  44cec2:	push   rbp
  44cec3:	rex.WRXB push r12
  44cec5:	and    BYTE PTR [r15],r12b
  44cec8:	and    eax,0x200a2773
  44cecd:	and    BYTE PTR [rax],ah
  44cecf:	and    BYTE PTR [rbp+0x53],al
  44ced2:	rex.XB
  44ced3:	push   r8
  44ced5:	and    BYTE PTR [r15],r12b
  44ced8:	and    eax,0x200a2773
  44cedd:	and    BYTE PTR [rax],ah
  44cedf:	and    BYTE PTR [rsi+0x4f],al
  44cee2:	push   rdx
  44cee3:	rex.XB
  44cee4:	rex.RB pop r15
  44cee6:	push   rcx
  44cee7:	push   rbp
  44cee8:	rex.WRXB push r12
  44ceea:	and    BYTE PTR [r11+0x20],r15b
  44ceee:	sub    BYTE PTR [rax],ah
  44cef0:	and    eax,0x2c5b2073
  44cef5:	and    BYTE PTR [rsi],ch
  44cef7:	cs cs pop rbp
  44cefa:	and    BYTE PTR [rcx],ch
  44cefc:	and    BYTE PTR [rax+riz*1+0x2a],bh
  44cf00:	and    BYTE PTR [rbp+0xa],bh
  44cf03:	and    BYTE PTR [rax],ah
  44cf05:	and    BYTE PTR [rax],ah
  44cf07:	rex.RX
  44cf08:	rex.WRXB push r10
  44cf0a:	rex.XB
  44cf0b:	rex.RB pop r15
  44cf0d:	rex.WRX
  44cf0e:	rex.WRXB push r12
  44cf10:	pop    rdi
  44cf11:	rex.WRX push rbp
  44cf13:	rex.WR
  44cf14:	rex.WR and BYTE PTR [rax],r13b
  44cf17:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fef90
  44cf1d:	and    BYTE PTR [rsi],ch
  44cf1f:	cs cs pop rbp
  44cf22:	and    BYTE PTR [rcx],ch
  44cf24:	or     ah,BYTE PTR [rax]
  44cf26:	and    BYTE PTR [rax],ah
  44cf28:	and    BYTE PTR [rsi+0x4f],al
  44cf2b:	push   rdx
  44cf2c:	rex.XB
  44cf2d:	rex.RB pop r15
  44cf2f:	rex.WRX push rbp
  44cf31:	rex.WR
  44cf32:	rex.WR and BYTE PTR [rax],r13b
  44cf35:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fefae
  44cf3b:	and    BYTE PTR [rsi],ch
  44cf3d:	cs cs pop rbp
  44cf40:	and    BYTE PTR [rcx],ch
  44cf42:	or     ah,BYTE PTR [rax]
  44cf44:	and    BYTE PTR [rax],ah
  44cf46:	and    BYTE PTR [rbp+0x4e],al
  44cf49:	rex.XB
  44cf4a:	rex.WRXB
  44cf4b:	rex.R
  44cf4c:	rex.WB
  44cf4d:	rex.WRX
  44cf4e:	rex.RXB and BYTE PTR [r15],r12b
  44cf51:	and    eax,0x65002773
  44cf56:	outs   dx,BYTE PTR ds:[rsi]
  44cf57:	movsxd ebp,DWORD PTR [rdi+0x64]
  44cf5a:	imul   ebp,DWORD PTR [rsi+0x67],0x6d616e5f
  44cf61:	add    BYTE PTR gs:[rbp+0x73],ah
  44cf65:	movsxd esp,DWORD PTR [rcx+0x70]
  44cf68:	gs pop rdi
  44cf6a:	movsxd ebp,DWORD PTR [rax+0x61]
  44cf6d:	jb     0x44cfd0
  44cf6f:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  44cf73:	add    BYTE PTR [rcx+0x75],dh
  44cf76:	outs   dx,DWORD PTR ds:[rsi]
  44cf77:	je     0x44cfde
  44cf79:	pop    rdi
  44cf7a:	movsxd ebp,DWORD PTR [rax+0x61]
  44cf7d:	jb     0x44cfe0
  44cf7f:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  44cf83:	add    BYTE PTR [rdx+0x6f],ah
  44cf86:	outs   dx,DWORD PTR ds:[rsi]
  44cf87:	ins    BYTE PTR es:[rdi],dx
  44cf88:	gs (bad) 
  44cf8a:	outs   dx,BYTE PTR ds:[rsi]
  44cf8b:	add    BYTE PTR [rsi+0x75],ch
  44cf8e:	ins    BYTE PTR es:[rdi],dx
  44cf8f:	ins    BYTE PTR es:[rdi],dx
  44cf90:	pop    rdi
  44cf91:	jae    0x44d007
  44cf93:	jb     0x44cffe
  44cf95:	outs   dx,BYTE PTR ds:[rsi]
  44cf96:	add    BYTE PTR [ebp+eiz*2+0x6c],ah
  44cf9b:	imul   ebp,DWORD PTR [rbp+0x69],0x5f726574
  44cfa2:	movsxd ebp,DWORD PTR [rax+0x61]
  44cfa5:	jb     0x44d008
  44cfa7:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  44cfab:	add    BYTE PTR [rsi+0x6f],ah
  44cfae:	jb     0x44d01d
  44cfb0:	(bad)  
  44cfb1:	je     0x44d012
  44cfb3:	outs   dx,BYTE PTR ds:[rsi]
  44cfb4:	(bad)  
  44cfb5:	ins    DWORD PTR es:[rdi],dx
  44cfb6:	add    BYTE PTR gs:[rdi+0x68],dh
  44cfba:	gs jb  0x44d022
  44cfbd:	and    BYTE PTR [rdi+0x70],ch
  44cfc0:	je     0x44d02b
  44cfc2:	outs   dx,DWORD PTR ds:[rsi]
  44cfc3:	outs   dx,BYTE PTR ds:[rsi]
  44cfc4:	and    BYTE PTR [rbx+0x61],ah
  44cfc7:	outs   dx,BYTE PTR ds:[rsi]
  44cfc8:	and    BYTE PTR [rdx+0x65],ah
  44cfcb:	and    BYTE PTR [rdi+0x6e],ch
  44cfce:	and    BYTE PTR gs:[rdi+0x66],ch
  44cfd2:	cmp    al,BYTE PTR [rax]
  44cfd4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  44cfd7:	ins    DWORD PTR es:[rdi],dx
  44cfd8:	(bad)  
  44cfd9:	outs   dx,BYTE PTR ds:[rsi]
  44cfda:	add    BYTE PTR fs:[rsi+0x69],ah
  44cfde:	ins    BYTE PTR es:[rdi],dx
  44cfdf:	outs   dx,BYTE PTR gs:[rsi]
  44cfe1:	(bad)  
  44cfe2:	ins    DWORD PTR es:[rdi],dx
  44cfe3:	add    BYTE PTR gs:[rcx+0x75],dh
  44cfe7:	gs jb  0x44d063
  44cfea:	add    BYTE PTR [rax],al
  44cfec:	add    BYTE PTR [rax],al
  44cfee:	add    BYTE PTR [rax],al
  44cff0:	rex.XB push r10
  44cff2:	rex.RB
  44cff3:	push   r12
  44cff5:	and    BYTE PTR [r9+0x47],r8b
  44cff9:	rex.RXB push r10
  44cffb:	rex.RB
  44cffc:	rex.RXB
  44cffd:	push   r12
  44cfff:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cf079
  44d006:	pop    rbx
  44d007:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1f080
  44d00d:	pop    rbx
  44d00e:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1f087
  44d014:	and    eax,0x205b2073
  44d019:	sub    al,0x20
  44d01b:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44d021:	sub    DWORD PTR [rax],esp
  44d023:	sub    BYTE PTR [rdx],cl
  44d025:	and    BYTE PTR [rax],ah
  44d027:	and    BYTE PTR [rax],ah
  44d029:	push   rbx
  44d02a:	rex.RX push rbp
  44d02c:	rex.WRX
  44d02d:	rex.XB and BYTE PTR [rip+0x2c732520],dil        # 0x2cb7f554
  44d034:	or     ah,BYTE PTR [rax]
  44d036:	and    BYTE PTR [rax],ah
  44d038:	and    BYTE PTR [rbx+0x54],dl
  44d03b:	pop    rcx
  44d03c:	push   rax
  44d03d:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab7f564
  44d044:	and    BYTE PTR [rax],ah
  44d046:	and    BYTE PTR [rax],ah
  44d048:	pop    rbx
  44d049:	and    BYTE PTR [rax+riz*1],ch
  44d04c:	push   rbx
  44d04d:	push   rbx
  44d04e:	push   rax
  44d04f:	rex.B
  44d050:	rex.XB
  44d051:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f578
  44d058:	pop    rbp
  44d059:	or     ah,BYTE PTR [rax]
  44d05b:	and    BYTE PTR [rax],ah
  44d05d:	and    BYTE PTR [rbx+0x20],bl
  44d060:	sub    al,0x20
  44d062:	rex.RX
  44d063:	rex.WB
  44d064:	rex.WRX
  44d065:	rex.B
  44d066:	rex.WR
  44d067:	rex.RX push rbp
  44d069:	rex.WRX
  44d06a:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f591
  44d071:	pop    rbp
  44d072:	or     ah,BYTE PTR [rax]
  44d074:	and    BYTE PTR [rax],ah
  44d076:	and    BYTE PTR [rbx+0x20],bl
  44d079:	sub    al,0x20
  44d07b:	rex.RX
  44d07c:	rex.WB
  44d07d:	rex.WRX
  44d07e:	rex.B
  44d07f:	rex.WR
  44d080:	rex.RX push rbp
  44d082:	rex.WRX
  44d083:	rex.XB pop r15
  44d085:	rex.RB pop r8
  44d087:	push   rsp
  44d088:	push   rdx
  44d089:	and    BYTE PTR [r13+0xa],bl
  44d08d:	and    BYTE PTR [rax],ah
  44d08f:	and    BYTE PTR [rax],ah
  44d091:	pop    rbx
  44d092:	and    BYTE PTR [rax+riz*1],ch
  44d095:	rex.WB
  44d096:	rex.WRX
  44d097:	rex.WB push r12
  44d099:	rex.XB
  44d09a:	rex.WRXB
  44d09b:	rex.WRX
  44d09c:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f5c3
  44d0a3:	pop    rbp
  44d0a4:	or     ah,BYTE PTR [rax]
  44d0a6:	and    BYTE PTR [rax],ah
  44d0a8:	and    BYTE PTR [rbx+0x20],bl
  44d0ab:	sub    al,0x20
  44d0ad:	rex.WRB push r11
  44d0af:	rex.RX push rbp
  44d0b1:	rex.WRX
  44d0b2:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f5d9
  44d0b9:	pop    rbp
  44d0ba:	or     ah,BYTE PTR [rax]
  44d0bc:	and    BYTE PTR [rax],ah
  44d0be:	and    BYTE PTR [rbx+0x20],bl
  44d0c1:	sub    al,0x20
  44d0c3:	rex.WRB
  44d0c4:	rex.WB
  44d0c5:	rex.WRX push rsi
  44d0c7:	rex.RX push rbp
  44d0c9:	rex.WRX
  44d0ca:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f5f1
  44d0d1:	pop    rbp
  44d0d2:	or     ah,BYTE PTR [rax]
  44d0d4:	and    BYTE PTR [rax],ah
  44d0d6:	and    BYTE PTR [rbx+0x20],bl
  44d0d9:	sub    al,0x20
  44d0db:	rex.WRB push r11
  44d0dd:	push   rsp
  44d0de:	pop    rcx
  44d0df:	push   rax
  44d0e0:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f607
  44d0e7:	pop    rbp
  44d0e8:	or     ah,BYTE PTR [rax]
  44d0ea:	and    BYTE PTR [rax],ah
  44d0ec:	and    BYTE PTR [rbx+0x20],bl
  44d0ef:	sub    al,0x20
  44d0f1:	rex.WRB push r11
  44d0f3:	push   rbx
  44d0f4:	push   rax
  44d0f5:	rex.B
  44d0f6:	rex.XB
  44d0f7:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f61e
  44d0fe:	pop    rbp
  44d0ff:	or     ah,BYTE PTR [rax]
  44d101:	and    BYTE PTR [rax],ah
  44d103:	and    BYTE PTR [rbx+0x20],bl
  44d106:	sub    al,0x20
  44d108:	rex.WRB
  44d109:	rex.RX
  44d10a:	rex.WB
  44d10b:	rex.WRX
  44d10c:	rex.B
  44d10d:	rex.WR
  44d10e:	rex.RX push rbp
  44d110:	rex.WRX
  44d111:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f638
  44d118:	pop    rbp
  44d119:	or     ah,BYTE PTR [rax]
  44d11b:	and    BYTE PTR [rax],ah
  44d11d:	and    BYTE PTR [rbx+0x20],bl
  44d120:	sub    al,0x20
  44d122:	rex.WRB
  44d123:	rex.RX
  44d124:	rex.WB
  44d125:	rex.WRX
  44d126:	rex.B
  44d127:	rex.WR
  44d128:	rex.RX push rbp
  44d12a:	rex.WRX
  44d12b:	rex.XB pop r15
  44d12d:	rex.RB pop r8
  44d12f:	push   rsp
  44d130:	push   rdx
  44d131:	and    BYTE PTR [r13+0xa],bl
  44d135:	and    BYTE PTR [rax],ah
  44d137:	and    BYTE PTR [rax],ah
  44d139:	pop    rbx
  44d13a:	and    BYTE PTR [rax+riz*1],ch
  44d13d:	rex.WRB
  44d13e:	rex.WB
  44d13f:	rex.WRX
  44d140:	rex.WB push r12
  44d142:	rex.XB
  44d143:	rex.WRXB
  44d144:	rex.WRX
  44d145:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f66c
  44d14c:	pop    rbp
  44d14d:	or     ah,BYTE PTR [rax]
  44d14f:	and    BYTE PTR [rax],ah
  44d151:	and    BYTE PTR [rbx+0x20],bl
  44d154:	sub    al,0x20
  44d156:	push   rbx
  44d157:	rex.WRXB push r10
  44d159:	push   rsp
  44d15a:	rex.WRXB push r8
  44d15c:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b7f682
  44d162:	pop    rbp
  44d163:	or     ch,BYTE PTR [rcx]
  44d165:	or     cl,BYTE PTR [rdx]
  44d167:	rex.XB push r10
  44d169:	rex.RB
  44d16a:	push   r12
  44d16c:	and    BYTE PTR [r9+0x47],r8b
  44d170:	rex.RXB push r10
  44d172:	rex.RB
  44d173:	rex.RXB
  44d174:	push   r12
  44d176:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206cf1f0
  44d17d:	pop    rbx
  44d17e:	and    BYTE PTR [rbx+0x20],bl
  44d181:	and    eax,0x205d2073
  44d186:	pop    rbx
  44d187:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1f200
  44d18d:	and    eax,0x205b2073
  44d192:	sub    al,0x20
  44d194:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44d19a:	pop    rbp
  44d19b:	or     ah,BYTE PTR [rax]
  44d19d:	and    BYTE PTR [rax],ah
  44d19f:	and    BYTE PTR [rax],ah
  44d1a1:	and    BYTE PTR [rax],ah
  44d1a3:	and    BYTE PTR [rax],ah
  44d1a5:	and    BYTE PTR [rax],ah
  44d1a7:	and    BYTE PTR [rax],ah
  44d1a9:	and    BYTE PTR [rax],ah
  44d1ab:	and    BYTE PTR [rax],ah
  44d1ad:	and    BYTE PTR [rax],ah
  44d1af:	and    BYTE PTR [rax],ah
  44d1b1:	and    BYTE PTR [rax],ah
  44d1b3:	and    BYTE PTR [rdi+0x52],cl
  44d1b6:	rex.R
  44d1b7:	rex.RB push r10
  44d1b9:	and    BYTE PTR [rdx+0x59],al
  44d1bc:	and    BYTE PTR [rbx+0x20],bl
  44d1bf:	and    eax,0x205d2073
  44d1c4:	pop    rbx
  44d1c5:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1f23e
  44d1cb:	and    eax,0x205b2073
  44d1d0:	sub    al,0x20
  44d1d2:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44d1d8:	sub    DWORD PTR [rax],esp
  44d1da:	sub    BYTE PTR [rdx],cl
  44d1dc:	and    BYTE PTR [rax],ah
  44d1de:	and    BYTE PTR [rax],ah
  44d1e0:	push   rbx
  44d1e1:	rex.RX push rbp
  44d1e3:	rex.WRX
  44d1e4:	rex.XB and BYTE PTR [rip+0x2c732520],dil        # 0x2cb7f70b
  44d1eb:	or     ah,BYTE PTR [rax]
  44d1ed:	and    BYTE PTR [rax],ah
  44d1ef:	and    BYTE PTR [rbx+0x54],dl
  44d1f2:	pop    rcx
  44d1f3:	push   rax
  44d1f4:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab7f71b
  44d1fb:	and    BYTE PTR [rax],ah
  44d1fd:	and    BYTE PTR [rax],ah
  44d1ff:	pop    rbx
  44d200:	and    BYTE PTR [rax+riz*1],ch
  44d203:	push   rbx
  44d204:	push   rbx
  44d205:	push   rax
  44d206:	rex.B
  44d207:	rex.XB
  44d208:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f72f
  44d20f:	pop    rbp
  44d210:	or     ah,BYTE PTR [rax]
  44d212:	and    BYTE PTR [rax],ah
  44d214:	and    BYTE PTR [rbx+0x20],bl
  44d217:	sub    al,0x20
  44d219:	rex.RX
  44d21a:	rex.WB
  44d21b:	rex.WRX
  44d21c:	rex.B
  44d21d:	rex.WR
  44d21e:	rex.RX push rbp
  44d220:	rex.WRX
  44d221:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f748
  44d228:	pop    rbp
  44d229:	or     ah,BYTE PTR [rax]
  44d22b:	and    BYTE PTR [rax],ah
  44d22d:	and    BYTE PTR [rbx+0x20],bl
  44d230:	sub    al,0x20
  44d232:	rex.RX
  44d233:	rex.WB
  44d234:	rex.WRX
  44d235:	rex.B
  44d236:	rex.WR
  44d237:	rex.RX push rbp
  44d239:	rex.WRX
  44d23a:	rex.XB pop r15
  44d23c:	rex.RB pop r8
  44d23e:	push   rsp
  44d23f:	push   rdx
  44d240:	and    BYTE PTR [r13+0xa],bl
  44d244:	and    BYTE PTR [rax],ah
  44d246:	and    BYTE PTR [rax],ah
  44d248:	pop    rbx
  44d249:	and    BYTE PTR [rax+riz*1],ch
  44d24c:	rex.WB
  44d24d:	rex.WRX
  44d24e:	rex.WB push r12
  44d250:	rex.XB
  44d251:	rex.WRXB
  44d252:	rex.WRX
  44d253:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f77a
  44d25a:	pop    rbp
  44d25b:	or     ah,BYTE PTR [rax]
  44d25d:	and    BYTE PTR [rax],ah
  44d25f:	and    BYTE PTR [rbx+0x20],bl
  44d262:	sub    al,0x20
  44d264:	rex.W pop rcx
  44d266:	push   rax
  44d267:	rex.WRXB push r12
  44d269:	rex.W
  44d26a:	rex.RB push r12
  44d26c:	rex.WB
  44d26d:	rex.XB
  44d26e:	rex.B
  44d26f:	rex.WR and BYTE PTR [rbp+0xa],r11b
  44d273:	sub    DWORD PTR [rdx],ecx
  44d275:	or     ah,BYTE PTR [rip+0x430a0a73]        # 0x434edcee
  44d27b:	push   rdx
  44d27c:	rex.RB
  44d27d:	push   r12
  44d27f:	and    BYTE PTR [r9+0x47],r8b
  44d283:	rex.RXB push r10
  44d285:	rex.RB
  44d286:	rex.RXB
  44d287:	push   r12
  44d289:	and    BYTE PTR [rip+0xa282073],r12b        # 0xa6cf303
  44d290:	and    BYTE PTR [rax],ah
  44d292:	and    BYTE PTR [rax],ah
  44d294:	rex.X
  44d295:	push   r11
  44d297:	rex.RB push r12
  44d299:	pop    rcx
  44d29a:	push   rax
  44d29b:	and    BYTE PTR [rip+0x2c732520],r15b        # 0x2cb7f7c2
  44d2a2:	or     ah,BYTE PTR [rax]
  44d2a4:	and    BYTE PTR [rax],ah
  44d2a6:	and    BYTE PTR [rbx+0x46],dl
  44d2a9:	push   rbp
  44d2aa:	rex.WRX
  44d2ab:	rex.XB and BYTE PTR [rip+0x2c732520],dil        # 0x2cb7f7d2
  44d2b2:	or     ah,BYTE PTR [rax]
  44d2b4:	and    BYTE PTR [rax],ah
  44d2b6:	and    BYTE PTR [rbx+0x54],dl
  44d2b9:	pop    rcx
  44d2ba:	push   rax
  44d2bb:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab7f7e2
  44d2c2:	and    BYTE PTR [rax],ah
  44d2c4:	and    BYTE PTR [rax],ah
  44d2c6:	pop    rbx
  44d2c7:	and    BYTE PTR [rax+riz*1],ch
  44d2ca:	push   rbx
  44d2cb:	push   rbx
  44d2cc:	push   rax
  44d2cd:	rex.B
  44d2ce:	rex.XB
  44d2cf:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f7f6
  44d2d6:	pop    rbp
  44d2d7:	or     ah,BYTE PTR [rax]
  44d2d9:	and    BYTE PTR [rax],ah
  44d2db:	and    BYTE PTR [rbx+0x20],bl
  44d2de:	sub    al,0x20
  44d2e0:	rex.RX
  44d2e1:	rex.WB
  44d2e2:	rex.WRX
  44d2e3:	rex.B
  44d2e4:	rex.WR
  44d2e5:	rex.RX push rbp
  44d2e7:	rex.WRX
  44d2e8:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f80f
  44d2ef:	pop    rbp
  44d2f0:	or     ah,BYTE PTR [rax]
  44d2f2:	and    BYTE PTR [rax],ah
  44d2f4:	and    BYTE PTR [rbx+0x20],bl
  44d2f7:	sub    al,0x20
  44d2f9:	rex.RX
  44d2fa:	rex.WB
  44d2fb:	rex.WRX
  44d2fc:	rex.B
  44d2fd:	rex.WR
  44d2fe:	rex.RX push rbp
  44d300:	rex.WRX
  44d301:	rex.XB pop r15
  44d303:	rex.RB pop r8
  44d305:	push   rsp
  44d306:	push   rdx
  44d307:	and    BYTE PTR [r13+0xa],bl
  44d30b:	and    BYTE PTR [rax],ah
  44d30d:	and    BYTE PTR [rax],ah
  44d30f:	pop    rbx
  44d310:	and    BYTE PTR [rax+riz*1],ch
  44d313:	rex.WB
  44d314:	rex.WRX
  44d315:	rex.WB push r12
  44d317:	rex.XB
  44d318:	rex.WRXB
  44d319:	rex.WRX
  44d31a:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f841
  44d321:	pop    rbp
  44d322:	or     ah,BYTE PTR [rax]
  44d324:	and    BYTE PTR [rax],ah
  44d326:	and    BYTE PTR [rbx+0x20],bl
  44d329:	sub    al,0x20
  44d32b:	rex.WRB push r11
  44d32d:	rex.RX push rbp
  44d32f:	rex.WRX
  44d330:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f857
  44d337:	pop    rbp
  44d338:	or     ah,BYTE PTR [rax]
  44d33a:	and    BYTE PTR [rax],ah
  44d33c:	and    BYTE PTR [rbx+0x20],bl
  44d33f:	sub    al,0x20
  44d341:	rex.WRB
  44d342:	rex.WB
  44d343:	rex.WRX push rsi
  44d345:	rex.RX push rbp
  44d347:	rex.WRX
  44d348:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f86f
  44d34f:	pop    rbp
  44d350:	or     ah,BYTE PTR [rax]
  44d352:	and    BYTE PTR [rax],ah
  44d354:	and    BYTE PTR [rbx+0x20],bl
  44d357:	sub    al,0x20
  44d359:	rex.WRB push r11
  44d35b:	push   rsp
  44d35c:	pop    rcx
  44d35d:	push   rax
  44d35e:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f885
  44d365:	pop    rbp
  44d366:	or     ah,BYTE PTR [rax]
  44d368:	and    BYTE PTR [rax],ah
  44d36a:	and    BYTE PTR [rbx+0x20],bl
  44d36d:	sub    al,0x20
  44d36f:	rex.WRB push r11
  44d371:	push   rbx
  44d372:	push   rax
  44d373:	rex.B
  44d374:	rex.XB
  44d375:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f89c
  44d37c:	pop    rbp
  44d37d:	or     ah,BYTE PTR [rax]
  44d37f:	and    BYTE PTR [rax],ah
  44d381:	and    BYTE PTR [rbx+0x20],bl
  44d384:	sub    al,0x20
  44d386:	rex.WRB
  44d387:	rex.RX
  44d388:	rex.WB
  44d389:	rex.WRX
  44d38a:	rex.B
  44d38b:	rex.WR
  44d38c:	rex.RX push rbp
  44d38e:	rex.WRX
  44d38f:	rex.XB and BYTE PTR [rip+0x20732520],dil        # 0x20b7f8b6
  44d396:	pop    rbp
  44d397:	or     ah,BYTE PTR [rax]
  44d399:	and    BYTE PTR [rax],ah
  44d39b:	and    BYTE PTR [rbx+0x20],bl
  44d39e:	sub    al,0x20
  44d3a0:	rex.WRB
  44d3a1:	rex.RX
  44d3a2:	rex.WB
  44d3a3:	rex.WRX
  44d3a4:	rex.B
  44d3a5:	rex.WR
  44d3a6:	rex.RX push rbp
  44d3a8:	rex.WRX
  44d3a9:	rex.XB pop r15
  44d3ab:	rex.RB pop r8
  44d3ad:	push   rsp
  44d3ae:	push   rdx
  44d3af:	and    BYTE PTR [r13+0xa],bl
  44d3b3:	and    BYTE PTR [rax],ah
  44d3b5:	and    BYTE PTR [rax],ah
  44d3b7:	pop    rbx
  44d3b8:	and    BYTE PTR [rax+riz*1],ch
  44d3bb:	rex.WRB
  44d3bc:	rex.WB
  44d3bd:	rex.WRX
  44d3be:	rex.WB push r12
  44d3c0:	rex.XB
  44d3c1:	rex.WRXB
  44d3c2:	rex.WRX
  44d3c3:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7f8ea
  44d3ca:	pop    rbp
  44d3cb:	or     ah,BYTE PTR [rax]
  44d3cd:	and    BYTE PTR [rax],ah
  44d3cf:	and    BYTE PTR [rbx+0x20],bl
  44d3d2:	sub    al,0x20
  44d3d4:	push   rbx
  44d3d5:	rex.WRXB push r10
  44d3d7:	push   rsp
  44d3d8:	rex.WRXB push r8
  44d3da:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b7f900
  44d3e0:	pop    rbp
  44d3e1:	or     ch,BYTE PTR [rcx]
  44d3e3:	add    BYTE PTR [rbx+0x6f],dh
  44d3e6:	jb     0x44d45c
  44d3e8:	pop    rdi
  44d3e9:	outs   dx,DWORD PTR ds:[rsi]
  44d3ea:	jo     0x44d451
  44d3ec:	jb     0x44d44f
  44d3ee:	je     0x44d45f
  44d3f0:	jb     0x44d3f2
  44d3f2:	ins    DWORD PTR es:[rdi],dx
  44d3f3:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  44d3fa:	pop    rdi
  44d3fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44d3fe:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x666d006e
  44d407:	data16 jne 0x44d478
  44d40a:	movsxd eax,DWORD PTR [rax]
  44d40c:	ins    DWORD PTR es:[rdi],dx
  44d40d:	jae    0x44d483
  44d40f:	(bad)  
  44d410:	je     0x44d477
  44d412:	pop    rdi
  44d413:	fs (bad) 
  44d415:	je     0x44d478
  44d417:	pop    rdi
  44d418:	jae    0x44d483
  44d41a:	jp     0x44d481
  44d41c:	add    BYTE PTR [rbp+0x73],ch
  44d41f:	je     0x44d482
  44d421:	je     0x44d488
  44d423:	pop    rdi
  44d424:	fs (bad) 
  44d426:	je     0x44d489
  44d428:	pop    rdi
  44d429:	je     0x44d4a4
  44d42b:	jo     0x44d492
  44d42d:	add    BYTE PTR [rbp+0x69],ch
  44d430:	outs   dx,BYTE PTR ds:[rsi]
  44d431:	jbe    0x44d499
  44d433:	jne    0x44d4a3
  44d435:	movsxd eax,DWORD PTR [rax]
  44d437:	ins    DWORD PTR es:[rdi],dx
  44d438:	jae    0x44d4a0
  44d43a:	jne    0x44d4aa
  44d43c:	movsxd eax,DWORD PTR [rax]
  44d43e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  44d445:	pop    rdi
  44d446:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44d449:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6666006e
  44d452:	jne    0x44d4c2
  44d454:	movsxd eax,DWORD PTR [rax]
  44d456:	jae    0x44d4cc
  44d458:	(bad)  
  44d459:	je     0x44d4c0
  44d45b:	pop    rdi
  44d45c:	fs (bad) 
  44d45e:	je     0x44d4c1
  44d460:	pop    rdi
  44d461:	jae    0x44d4cc
  44d463:	jp     0x44d4ca
  44d465:	add    BYTE PTR [rbx+0x74],dh
  44d468:	(bad)  
  44d469:	je     0x44d4d0
  44d46b:	pop    rdi
  44d46c:	fs (bad) 
  44d46e:	je     0x44d4d1
  44d470:	pop    rdi
  44d471:	je     0x44d4ec
  44d473:	jo     0x44d4da
  44d475:	add    BYTE PTR [rbx+0x66],dh
  44d478:	jne    0x44d4e8
  44d47a:	movsxd eax,DWORD PTR [rax]
  44d47c:	(bad)  
  44d47e:	jae    0x44d4e5
  44d480:	pop    rdi
  44d481:	je     0x44d4fc
  44d483:	jo     0x44d4ea
  44d485:	add    BYTE PTR [rdi+0x72],ch
  44d488:	and    BYTE PTR [rax+rbp*2+0x65],dh
  44d48c:	and    BYTE PTR [rdi+0x6c],ch
  44d48f:	and    BYTE PTR fs:[rbx+0x79],dh
  44d493:	outs   dx,BYTE PTR ds:[rsi]
  44d494:	je     0x44d4f7
  44d496:	js     0x44d498
  44d498:	(bad)  
  44d499:	jb     0x44d502
  44d49b:	pop    rdi
  44d49c:	fs (bad) 
  44d49e:	je     0x44d501
  44d4a0:	pop    rdi
  44d4a1:	je     0x44d51c
  44d4a3:	jo     0x44d50a
  44d4a5:	add    BYTE PTR [rax],al
  44d4a7:	add    BYTE PTR [rbx+0x52],al
  44d4aa:	rex.RB
  44d4ab:	push   r12
  44d4ad:	and    BYTE PTR [r11+0x41],r8b
  44d4b1:	push   rbx
  44d4b2:	push   rsp
  44d4b3:	and    BYTE PTR [rax],ch
  44d4b5:	and    eax,0x53412073
  44d4ba:	and    BYTE PTR [rip+0x200a2973],ah        # 0x204efe33
  44d4c0:	and    BYTE PTR [rax],ah
  44d4c2:	and    BYTE PTR [rdi+0x49],dl
  44d4c5:	push   rsp
  44d4c6:	rex.W and BYTE PTR [rsi+0x55],al
  44d4ca:	rex.WRX
  44d4cb:	rex.XB push r12
  44d4cd:	rex.WB
  44d4ce:	rex.WRXB
  44d4cf:	rex.WRX and BYTE PTR [rip+0x25282073],r12b        # 0x256cf549
  44d4d6:	jae    0x44d4f8
  44d4d8:	pop    rbx
  44d4d9:	sub    al,0x20
  44d4db:	cs cs cs pop rbp
  44d4df:	sub    DWORD PTR [rdx],ecx
  44d4e1:	and    BYTE PTR [rax],ah
  44d4e3:	and    BYTE PTR [rax],ah
  44d4e5:	pop    rbx
  44d4e6:	and    BYTE PTR [rcx+0x53],al
  44d4e9:	and    BYTE PTR [rcx+0x53],al
  44d4ec:	push   rbx
  44d4ed:	rex.WB
  44d4ee:	rex.RXB
  44d4ef:	rex.WRX
  44d4f0:	rex.WRB
  44d4f1:	rex.RB
  44d4f2:	rex.WRX push rsp
  44d4f4:	and    BYTE PTR [rax+riz*1+0x41],bh
  44d4f8:	push   rbx
  44d4f9:	and    BYTE PTR [rcx+0x4d],cl
  44d4fc:	push   rax
  44d4fd:	rex.WR
  44d4fe:	rex.WB
  44d4ff:	rex.XB
  44d500:	rex.WB push r12
  44d502:	and    BYTE PTR [rbp+0xa],bl
  44d505:	or     al,BYTE PTR [rbx+0x52]
  44d508:	rex.RB
  44d509:	push   r12
  44d50b:	and    BYTE PTR [r11+0x41],r8b
  44d50f:	push   rbx
  44d510:	push   rsp
  44d511:	and    BYTE PTR [rax],ch
  44d513:	and    eax,0x53412073
  44d518:	and    BYTE PTR [rip+0x200a2973],ah        # 0x204efe91
  44d51e:	and    BYTE PTR [rax],ah
  44d520:	and    BYTE PTR [rdi+0x49],dl
  44d523:	push   rsp
  44d524:	rex.W
  44d525:	rex.WRXB push r13
  44d527:	push   rsp
  44d528:	and    BYTE PTR [rsi+0x55],al
  44d52b:	rex.WRX
  44d52c:	rex.XB push r12
  44d52e:	rex.WB
  44d52f:	rex.WRXB
  44d530:	rex.WRX or r12b,BYTE PTR [rax]
  44d533:	and    BYTE PTR [rax],ah
  44d535:	and    BYTE PTR [rbx+0x20],bl
  44d538:	push   r11
  44d53a:	and    BYTE PTR [rcx+0x53],al
  44d53d:	push   rbx
  44d53e:	rex.WB
  44d53f:	rex.RXB
  44d540:	rex.WRX
  44d541:	rex.WRB
  44d542:	rex.RB
  44d543:	rex.WRX push rsp
  44d545:	and    BYTE PTR [rax+riz*1+0x41],bh
  44d549:	push   rbx
  44d54a:	and    BYTE PTR [rcx+0x4d],cl
  44d54d:	push   rax
  44d54e:	rex.WR
  44d54f:	rex.WB
  44d550:	rex.XB
  44d551:	rex.WB push r12
  44d553:	and    BYTE PTR [rbp+0xa],bl
  44d556:	or     al,BYTE PTR [rbx+0x52]
  44d559:	rex.RB
  44d55a:	push   r12
  44d55c:	and    BYTE PTR [r11+0x41],r8b
  44d560:	push   rbx
  44d561:	push   rsp
  44d562:	and    BYTE PTR [rax],ch
  44d564:	and    eax,0x53412073
  44d569:	and    BYTE PTR [rip+0x200a2973],ah        # 0x204efee2
  44d56f:	and    BYTE PTR [rax],ah
  44d571:	and    BYTE PTR [rdi+0x49],dl
  44d574:	push   rsp
  44d575:	rex.W and BYTE PTR [rcx+0x4e],cl
  44d579:	rex.WRXB push r13
  44d57b:	push   rsp
  44d57c:	or     ah,BYTE PTR [rax]
  44d57e:	and    BYTE PTR [rax],ah
  44d580:	and    BYTE PTR [rbx+0x20],bl
  44d583:	push   r11
  44d585:	and    BYTE PTR [rcx+0x53],al
  44d588:	push   rbx
  44d589:	rex.WB
  44d58a:	rex.RXB
  44d58b:	rex.WRX
  44d58c:	rex.WRB
  44d58d:	rex.RB
  44d58e:	rex.WRX push rsp
  44d590:	and    BYTE PTR [rax+riz*1+0x41],bh
  44d594:	push   rbx
  44d595:	and    BYTE PTR [rcx+0x4d],cl
  44d598:	push   rax
  44d599:	rex.WR
  44d59a:	rex.WB
  44d59b:	rex.XB
  44d59c:	rex.WB push r12
  44d59e:	and    BYTE PTR [rbp+0x0],bl
  44d5a1:	ins    BYTE PTR es:[rdi],dx
  44d5a2:	outs   dx,DWORD PTR ds:[rsi]
  44d5a3:	movsxd esp,DWORD PTR [rcx+0x6c]
  44d5a6:	add    BYTE PTR gs:[rbx+0x52],al
  44d5aa:	rex.RB
  44d5ab:	push   r12
  44d5ad:	and    BYTE PTR [r11+0x4f],r8b
  44d5b1:	rex.WR
  44d5b2:	rex.WR
  44d5b3:	push   r12
  44d5b5:	rex.WB
  44d5b6:	rex.WRXB
  44d5b7:	rex.WRX and BYTE PTR [rip+0xa282073],r12b        # 0xa6cf631
  44d5be:	and    BYTE PTR [rax],ah
  44d5c0:	and    BYTE PTR [rax],ah
  44d5c2:	pop    rbx
  44d5c3:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  44d5c7:	rex.B
  44d5c8:	rex.WR
  44d5c9:	and    BYTE PTR [rip+0x2c732520],r15b        # 0x2cb7faf0
  44d5d0:	and    BYTE PTR [rbp+0xa],bl
  44d5d3:	and    BYTE PTR [rax],ah
  44d5d5:	and    BYTE PTR [rax],ah
  44d5d7:	pop    rbx
  44d5d8:	and    BYTE PTR [rbx+rax*2+0x5f],cl
  44d5dc:	rex.XB
  44d5dd:	rex.WRXB
  44d5de:	rex.WR
  44d5df:	rex.WR
  44d5e0:	push   r12
  44d5e2:	and    BYTE PTR [rip+0x2c732520],r15b        # 0x2cb7fb09
  44d5e9:	and    BYTE PTR [rbp+0xa],bl
  44d5ec:	and    BYTE PTR [rax],ah
  44d5ee:	and    BYTE PTR [rax],ah
  44d5f0:	pop    rbx
  44d5f1:	and    BYTE PTR [rbx+rax*2+0x5f],cl
  44d5f5:	rex.XB push r12
  44d5f7:	pop    rcx
  44d5f8:	push   rax
  44d5f9:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b7fb20
  44d600:	pop    rbp
  44d601:	or     ch,BYTE PTR [rcx]
  44d603:	or     al,BYTE PTR [rbx+0x52]
  44d606:	rex.RB
  44d607:	push   r12
  44d609:	and    BYTE PTR [r11+0x4f],r8b
  44d60d:	rex.WR
  44d60e:	rex.WR
  44d60f:	push   r12
  44d611:	rex.WB
  44d612:	rex.WRXB
  44d613:	rex.WRX and BYTE PTR [rip+0x52462073],r12b        # 0x528af68d
  44d61a:	rex.WRXB
  44d61b:	rex.WRB and BYTE PTR [rip+0x78650073],r12b        # 0x78a9d695
  44d622:	imul   esi,DWORD PTR [rbx+0x74],0x5f676e69
  44d629:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44d62c:	ins    BYTE PTR es:[rdi],dx
  44d62d:	(bad)  
  44d62e:	je     0x44d699
  44d630:	outs   dx,DWORD PTR ds:[rsi]
  44d631:	outs   dx,BYTE PTR ds:[rsi]
  44d632:	add    BYTE PTR [rbx+riz*2+0x5f],ch
  44d636:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  44d63a:	add    BYTE PTR gs:[rbx+riz*2+0x5f],ch
  44d63f:	movsxd ebp,DWORD PTR [rdi+0x6c]
  44d642:	ins    BYTE PTR es:[rdi],dx
  44d643:	(bad)  
  44d644:	je     0x44d6ab
  44d646:	add    BYTE PTR [rbx+0x6f],dh
  44d649:	jne    0x44d6bd
  44d64b:	movsxd esp,DWORD PTR [rbp+0x5f]
  44d64e:	outs   dx,BYTE PTR gs:[rsi]
  44d650:	movsxd ebp,DWORD PTR [rdi+0x64]
  44d653:	imul   ebp,DWORD PTR [rsi+0x67],0x52430000
  44d65a:	rex.RB
  44d65b:	push   r12
  44d65d:	and    BYTE PTR [r11+0x20],r11b
  44d661:	rex.R
  44d662:	rex.RB
  44d663:	rex.RX
  44d664:	push   r13
  44d666:	rex.WR push rsp
  44d668:	and    BYTE PTR [rbp+0x20],bl
  44d66b:	rex.XB
  44d66c:	rex.WRXB
  44d66d:	rex.WRX push rsi
  44d66f:	rex.RB push r10
  44d671:	push   rbx
  44d672:	rex.WB
  44d673:	rex.WRXB
  44d674:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064e0ee
  44d67b:	and    BYTE PTR [rax],ah
  44d67d:	rex.RX
  44d67e:	rex.WRXB push r10
  44d680:	and    BYTE PTR [rip+0x4f542073],ah        # 0x4f98f6f9
  44d686:	and    BYTE PTR [rip+0x52462073],ah        # 0x528af6ff
  44d68c:	rex.WRXB
  44d68d:	rex.WRB and BYTE PTR [rip+0x65640073],r12b        # 0x65a8d707
  44d694:	jae    0x44d70a
  44d696:	pop    rdi
  44d697:	outs   dx,BYTE PTR gs:[rsi]
  44d699:	movsxd ebp,DWORD PTR [rdi+0x64]
  44d69c:	imul   ebp,DWORD PTR [rsi+0x67],0x45524300
  44d6a3:	push   r12
  44d6a5:	and    BYTE PTR [r9+rax*2+0x54],r8b
  44d6aa:	rex.B
  44d6ab:	rex.X
  44d6ac:	push   r11
  44d6ae:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064e128
  44d6b5:	and    BYTE PTR [rax],ah
  44d6b7:	pop    rbx
  44d6b8:	and    BYTE PTR [rbx+0x20],bl
  44d6bb:	push   rdi
  44d6bc:	rex.WB push r12
  44d6be:	rex.W and BYTE PTR [rbp+0x20],bl
  44d6c2:	pop    rbx
  44d6c3:	and    BYTE PTR [rdi+0x57],cl
  44d6c6:	rex.WRX
  44d6c7:	rex.RB push r10
  44d6c9:	and    BYTE PTR [rbx+0x3d],bl
  44d6cc:	pop    rbp
  44d6cd:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f746
  44d6d3:	and    BYTE PTR [rax],ah
  44d6d5:	and    BYTE PTR [rax],ah
  44d6d7:	and    BYTE PTR [rax],ah
  44d6d9:	and    BYTE PTR [rax],ah
  44d6db:	and    BYTE PTR [rax],ah
  44d6dd:	and    BYTE PTR [rbx+0x20],bl
  44d6e0:	push   rsp
  44d6e1:	rex.RB
  44d6e2:	rex.WRB push r8
  44d6e4:	rex.WR
  44d6e5:	push   r12
  44d6e7:	and    BYTE PTR [r11+0x3d],r11b
  44d6eb:	pop    rbp
  44d6ec:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f765
  44d6f2:	and    BYTE PTR [rax],ah
  44d6f4:	and    BYTE PTR [rax],ah
  44d6f6:	and    BYTE PTR [rax],ah
  44d6f8:	and    BYTE PTR [rax],ah
  44d6fa:	and    BYTE PTR [rax],ah
  44d6fc:	and    BYTE PTR [rbx+0x20],bl
  44d6ff:	rex.RB
  44d700:	rex.WRX
  44d701:	rex.XB
  44d702:	rex.WRXB
  44d703:	rex.R
  44d704:	rex.WB
  44d705:	rex.WRX
  44d706:	rex.RXB and BYTE PTR [r11+0x3d],r11b
  44d70a:	pop    rbp
  44d70b:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f784
  44d711:	and    BYTE PTR [rax],ah
  44d713:	and    BYTE PTR [rax],ah
  44d715:	and    BYTE PTR [rax],ah
  44d717:	and    BYTE PTR [rax],ah
  44d719:	and    BYTE PTR [rax],ah
  44d71b:	and    BYTE PTR [rbx+0x20],bl
  44d71e:	rex.WR
  44d71f:	rex.XB pop r15
  44d721:	rex.XB
  44d722:	rex.WRXB
  44d723:	rex.WR
  44d724:	rex.WR
  44d725:	push   r12
  44d727:	and    BYTE PTR [r11+0x3d],r11b
  44d72b:	pop    rbp
  44d72c:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f7a5
  44d732:	and    BYTE PTR [rax],ah
  44d734:	and    BYTE PTR [rax],ah
  44d736:	and    BYTE PTR [rax],ah
  44d738:	and    BYTE PTR [rax],ah
  44d73a:	and    BYTE PTR [rax],ah
  44d73c:	and    BYTE PTR [rbx+0x20],bl
  44d73f:	rex.WR
  44d740:	rex.XB pop r15
  44d742:	rex.XB push r12
  44d744:	pop    rcx
  44d745:	push   rax
  44d746:	and    BYTE PTR [r11+0x3d],r11b
  44d74a:	pop    rbp
  44d74b:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f7c4
  44d751:	and    BYTE PTR [rax],ah
  44d753:	and    BYTE PTR [rax],ah
  44d755:	and    BYTE PTR [rax],ah
  44d757:	and    BYTE PTR [rax],ah
  44d759:	and    BYTE PTR [rax],ah
  44d75b:	and    BYTE PTR [rbx+0x20],bl
  44d75e:	push   rsp
  44d75f:	rex.B
  44d760:	rex.X
  44d761:	rex.WR
  44d762:	rex.RB push r11
  44d764:	push   rax
  44d765:	rex.B
  44d766:	rex.XB
  44d767:	and    BYTE PTR [r11+0x3d],r11b
  44d76b:	pop    rbp
  44d76c:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f7e5
  44d772:	and    BYTE PTR [rax],ah
  44d774:	and    BYTE PTR [rax],ah
  44d776:	and    BYTE PTR [rax],ah
  44d778:	and    BYTE PTR [rax],ah
  44d77a:	and    BYTE PTR [rax],ah
  44d77c:	and    BYTE PTR [rbx+0x20],bl
  44d77f:	rex.XB
  44d780:	rex.WRXB
  44d781:	rex.WRX
  44d782:	rex.WRX
  44d783:	rex.RB
  44d784:	rex.XB push r12
  44d786:	rex.WB
  44d787:	rex.WRXB
  44d788:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  44d78d:	rex.WB push r12
  44d78f:	and    BYTE PTR [rbx+0x3d],bl
  44d792:	pop    rbp
  44d793:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1f80c
  44d799:	pop    rbp
  44d79a:	add    BYTE PTR [rbp+0x6e],ah
  44d79d:	movsxd ebp,DWORD PTR [rdi+0x64]
  44d7a0:	imul   ebp,DWORD PTR [rsi+0x67],0x6d657400
  44d7a7:	jo     0x44d815
  44d7a9:	(bad)  
  44d7aa:	je     0x44d811
  44d7ac:	add    BYTE PTR [rax],al
  44d7ae:	add    BYTE PTR [rax],al
  44d7b0:	rex.XB push r10
  44d7b2:	rex.RB
  44d7b3:	push   r12
  44d7b5:	and    BYTE PTR [r15+rcx*2+0x4d],r8b
  44d7ba:	rex.B
  44d7bb:	rex.WB
  44d7bc:	rex.WRX and BYTE PTR [rip+0x205b2073],r12b        # 0x209ff836
  44d7c3:	push   r11
  44d7c5:	and    BYTE PTR [rbp+0x20],bl
  44d7c8:	and    eax,0x20200a73
  44d7cd:	and    BYTE PTR [rax],ah
  44d7cf:	pop    rbx
  44d7d0:	and    BYTE PTR [rbx+0x4f],al
  44d7d3:	rex.WR
  44d7d4:	rex.WR
  44d7d5:	push   r12
  44d7d7:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1f851
  44d7de:	and    BYTE PTR [rax],ah
  44d7e0:	and    BYTE PTR [rax],ah
  44d7e2:	pop    rbx
  44d7e3:	and    BYTE PTR [rbp+rax*2+0x46],al
  44d7e7:	push   r13
  44d7e9:	rex.WR push rsp
  44d7eb:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f864
  44d7f1:	and    BYTE PTR [rax],ah
  44d7f3:	and    BYTE PTR [rax],ah
  44d7f5:	pop    rbx
  44d7f6:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209ff86f
  44d7fc:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44d802:	pop    rbp
  44d803:	or     cl,BYTE PTR [rdx]
  44d805:	and    eax,0x5b0a0a73
  44d80a:	and    BYTE PTR [rbx+0x4f],al
  44d80d:	rex.WRX push rbx
  44d80f:	push   rsp
  44d810:	push   rdx
  44d811:	rex.B
  44d812:	rex.WB
  44d813:	rex.WRX push rsp
  44d815:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1f88e
  44d81b:	jnp    0x44d83d
  44d81d:	rex.WRX
  44d81e:	rex.WRXB push r12
  44d820:	and    BYTE PTR [rsi+0x55],cl
  44d823:	rex.WR
  44d824:	rex.WR and BYTE PTR [rax+riz*1+0x4e],r15b
  44d829:	push   rbp
  44d82a:	rex.WR
  44d82b:	rex.WR and BYTE PTR [rax+riz*1+0x43],r15b
  44d830:	rex.W
  44d831:	rex.RB
  44d832:	rex.XB
  44d833:	rex.WXB and BYTE PTR [r8],bpl
  44d836:	and    eax,0x7d202973
  44d83b:	add    BYTE PTR [rdi+0x68],dh
  44d83e:	gs jb  0x44d8a6
  44d841:	and    BYTE PTR [rbx+0x6f],ah
  44d844:	outs   dx,BYTE PTR ds:[rsi]
  44d845:	jae    0x44d8bb
  44d847:	jb     0x44d8aa
  44d849:	imul   ebp,DWORD PTR [rsi+0x74],0x3a736920
  44d850:	add    BYTE PTR [rbx+0x6f],ah
  44d853:	outs   dx,BYTE PTR ds:[rsi]
  44d854:	jae    0x44d8ca
  44d856:	jb     0x44d8b9
  44d858:	imul   ebp,DWORD PTR [rsi+0x74],0x65766500
  44d85f:	outs   dx,BYTE PTR ds:[rsi]
  44d860:	je     0x44d862
  44d862:	add    BYTE PTR [rax],al
  44d864:	add    BYTE PTR [rax],al
  44d866:	add    BYTE PTR [rax],al
  44d868:	rex.XB push r10
  44d86a:	rex.RB
  44d86b:	push   r12
  44d86d:	and    BYTE PTR [r13+0x56],r8b
  44d871:	rex.RB
  44d872:	rex.WRX push rsp
  44d874:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44d878:	rex.RXB
  44d879:	rex.RXB
  44d87a:	rex.RB push r10
  44d87c:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064e2f5
  44d882:	rex.WRXB
  44d883:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064e2fd
  44d88a:	pop    rbx
  44d88b:	and    BYTE PTR [rdi+0x48],dl
  44d88e:	rex.RB
  44d88f:	rex.WRX and BYTE PTR [rip+0x4e492073],r12b        # 0x4e8df909
  44d896:	and    BYTE PTR [rax],ch
  44d898:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44d89f:	jbe    0x44d902
  44d8a1:	ins    BYTE PTR es:[rdi],dx
  44d8a2:	jne    0x44d909
  44d8a4:	and    BYTE PTR [rbx+0x2c],bl
  44d8a7:	and    BYTE PTR [rsi],ch
  44d8a9:	cs and BYTE PTR cs:[rbp+0x29],bl
  44d8ae:	and    BYTE PTR [rbx+0x20],bl
  44d8b1:	rex.B
  44d8b2:	rex.WRX
  44d8b3:	and    BYTE PTR [rsi],r13b
  44d8b6:	cs and BYTE PTR cs:[rbp+0x20],bl
  44d8bb:	pop    rbp
  44d8bc:	or     ah,BYTE PTR [rax]
  44d8be:	and    BYTE PTR [rbp+0x58],al
  44d8c1:	rex.RB
  44d8c2:	rex.XB push r13
  44d8c4:	push   rsp
  44d8c5:	and    BYTE PTR [r8+0x52],r10b
  44d8c9:	rex.WRXB
  44d8ca:	rex.XB
  44d8cb:	rex.RB
  44d8cc:	rex.R push rbp
  44d8ce:	push   rdx
  44d8cf:	and    BYTE PTR [rip+0x292873],r12b        # 0x6e0149
  44d8d6:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  44d8dd:	jbe    0x44d940
  44d8df:	jb     0x44d94a
  44d8e1:	(bad)  
  44d8e2:	(bad)  
  44d8e3:	ins    BYTE PTR es:[rdi],dx
  44d8e4:	add    BYTE PTR gs:[rbp+0x78],ah
  44d8e8:	je     0x44d94f
  44d8ea:	outs   dx,BYTE PTR ds:[rsi]
  44d8eb:	jae    0x44d956
  44d8ed:	outs   dx,DWORD PTR ds:[rsi]
  44d8ee:	outs   dx,BYTE PTR ds:[rsi]
  44d8ef:	pop    rdi
  44d8f0:	outs   dx,BYTE PTR ds:[rsi]
  44d8f1:	(bad)  
  44d8f2:	ins    DWORD PTR es:[rdi],dx
  44d8f3:	add    BYTE PTR gs:[rax],al
  44d8f6:	add    BYTE PTR [rax],al
  44d8f8:	rex.XB push r10
  44d8fa:	rex.RB
  44d8fb:	push   r12
  44d8fd:	and    BYTE PTR [r13+0x58],r8b
  44d901:	push   rsp
  44d902:	rex.RB
  44d903:	rex.WRX push rbx
  44d905:	rex.WB
  44d906:	rex.WRXB
  44d907:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44d90b:	rex.WB
  44d90c:	rex.RX and BYTE PTR [rsi+0x4f],r9b
  44d910:	push   rsp
  44d911:	and    BYTE PTR [rbp+0x58],al
  44d914:	rex.WB push r11
  44d916:	push   rsp
  44d917:	push   rbx
  44d918:	and    BYTE PTR [rbp+0x20],bl
  44d91b:	and    eax,0x20200a73
  44d920:	and    BYTE PTR [rax],ah
  44d922:	pop    rbx
  44d923:	and    BYTE PTR [rdi+0x49],dl
  44d926:	push   rsp
  44d927:	rex.W and BYTE PTR [rbp+0x20],bl
  44d92b:	pop    rbx
  44d92c:	and    BYTE PTR [rbx+0x43],dl
  44d92f:	rex.W
  44d930:	rex.RB
  44d931:	rex.WRB
  44d932:	and    BYTE PTR [rip+0xa5d2073],spl        # 0xaa1f9ac
  44d939:	and    BYTE PTR [rax],ah
  44d93b:	and    BYTE PTR [rax],ah
  44d93d:	and    BYTE PTR [rax],ah
  44d93f:	and    BYTE PTR [rax],ah
  44d941:	and    BYTE PTR [rax],ah
  44d943:	and    BYTE PTR [rax],ah
  44d945:	and    BYTE PTR [rbx+0x20],bl
  44d948:	push   rsi
  44d949:	rex.RB push r10
  44d94b:	push   rbx
  44d94c:	rex.WB
  44d94d:	rex.WRXB
  44d94e:	rex.WRX and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1f9c8
  44d955:	and    BYTE PTR [rax],ah
  44d957:	and    BYTE PTR [rax],ah
  44d959:	and    BYTE PTR [rax],ah
  44d95b:	and    BYTE PTR [rax],ah
  44d95d:	and    BYTE PTR [rax],ah
  44d95f:	and    BYTE PTR [rax],ah
  44d961:	and    BYTE PTR [rbx+0x20],bl
  44d964:	rex.RX push rdx
  44d966:	rex.WRXB
  44d967:	rex.WRB and BYTE PTR [rip+0x5d2073],r12b        # 0xa1f9e1
  44d96e:	outs   dx,DWORD PTR ds:[rsi]
  44d96f:	ins    BYTE PTR es:[rdi],dx
  44d970:	fs pop rdi
  44d972:	jbe    0x44d9d9
  44d974:	jb     0x44d9e9
  44d976:	imul   ebp,DWORD PTR [rdi+0x6e],0x72657600
  44d97d:	jae    0x44d9e8
  44d97f:	outs   dx,DWORD PTR ds:[rsi]
  44d980:	outs   dx,BYTE PTR ds:[rsi]
  44d981:	add    BYTE PTR [rax],al
  44d983:	add    BYTE PTR [rax],al
  44d985:	add    BYTE PTR [rax],al
  44d987:	add    BYTE PTR [rbx+0x52],al
  44d98a:	rex.RB
  44d98b:	push   r12
  44d98d:	and    BYTE PTR [r14+0x4f],r8b
  44d991:	push   rdx
  44d992:	rex.RB
  44d993:	rex.WB
  44d994:	rex.RXB
  44d995:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44d99a:	and    BYTE PTR [r15+0x52],dl
  44d99e:	push   r8
  44d9a0:	push   rax
  44d9a1:	rex.RB push r10
  44d9a3:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064e41c
  44d9a9:	and    BYTE PTR [rax],ah
  44d9ab:	pop    rbx
  44d9ac:	and    BYTE PTR [rax+0x41],cl
  44d9af:	rex.WRX
  44d9b0:	rex.R
  44d9b1:	rex.WR
  44d9b2:	rex.RB push r10
  44d9b4:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0fa2d
  44d9ba:	rex.WRX
  44d9bb:	rex.WRXB and BYTE PTR [r8+0x41],r9b
  44d9bf:	rex.WRX
  44d9c0:	rex.R
  44d9c1:	rex.WR
  44d9c2:	rex.RB push r10
  44d9c4:	and    BYTE PTR [rbp+0xa],bl
  44d9c7:	and    BYTE PTR [rax],ah
  44d9c9:	and    BYTE PTR [rax],ah
  44d9cb:	pop    rbx
  44d9cc:	and    BYTE PTR [rsi+0x41],dl
  44d9cf:	rex.WR
  44d9d0:	rex.WB
  44d9d1:	rex.R
  44d9d2:	push   r12
  44d9d4:	rex.WRXB push r10
  44d9d6:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c0fa4f
  44d9dc:	rex.WRX
  44d9dd:	rex.WRXB and BYTE PTR [r14+0x41],r10b
  44d9e1:	rex.WR
  44d9e2:	rex.WB
  44d9e3:	rex.R
  44d9e4:	push   r12
  44d9e6:	rex.WRXB push r10
  44d9e8:	and    BYTE PTR [rbp+0xa],bl
  44d9eb:	and    BYTE PTR [rax],ah
  44d9ed:	and    BYTE PTR [rax],ah
  44d9ef:	pop    rbx
  44d9f0:	and    BYTE PTR [rdi+0x50],cl
  44d9f3:	push   rsp
  44d9f4:	rex.WB
  44d9f5:	rex.WRXB
  44d9f6:	rex.WRX push rbx
  44d9f8:	and    BYTE PTR [rax],ch
  44d9fa:	and    BYTE PTR [rip+0x25272073],ah        # 0x256bfa73
  44da00:	jae    0x44da29
  44da02:	and    BYTE PTR [rbx+0x2c],bl
  44da05:	and    BYTE PTR [rsi],ch
  44da07:	cs and BYTE PTR cs:[rbp+0x20],bl
  44da0c:	sub    DWORD PTR [rax],esp
  44da0e:	pop    rbp
  44da0f:	add    BYTE PTR [rbx+0x52],al
  44da12:	rex.RB
  44da13:	push   r12
  44da15:	and    BYTE PTR [r14+0x4f],r8b
  44da19:	push   rdx
  44da1a:	rex.RB
  44da1b:	rex.WB
  44da1c:	rex.RXB
  44da1d:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  44da22:	rex.WR
  44da23:	and    BYTE PTR [r11+0x20],r11b
  44da27:	rex.WB
  44da28:	rex.RX and BYTE PTR [rsi+0x4f],r9b
  44da2c:	push   rsp
  44da2d:	and    BYTE PTR [rbp+0x58],al
  44da30:	rex.WB push r11
  44da32:	push   rsp
  44da33:	push   rbx
  44da34:	and    BYTE PTR [rbp+0x20],bl
  44da37:	and    eax,0x20282073
  44da3c:	pop    rbx
  44da3d:	or     ah,BYTE PTR [rax]
  44da3f:	and    BYTE PTR [rax],ah
  44da41:	and    BYTE PTR [rip+0x73252073],ah        # 0x7369faba
  44da47:	and    BYTE PTR [rbx+0x20],bl
  44da4a:	rex.WRXB push r8
  44da4c:	push   rsp
  44da4d:	rex.WB
  44da4e:	rex.WRXB
  44da4f:	rex.WRX push rbx
  44da51:	and    BYTE PTR [rax],ch
  44da53:	and    BYTE PTR [rip+0x25272073],ah        # 0x256bfacc
  44da59:	jae    0x44da82
  44da5b:	and    BYTE PTR [rbx+0x2c],bl
  44da5e:	and    BYTE PTR [rsi],ch
  44da60:	cs and BYTE PTR cs:[rbp+0x20],bl
  44da65:	sub    DWORD PTR [rax],esp
  44da67:	pop    rbp
  44da68:	and    BYTE PTR [rbx+0x20],bl
  44da6b:	rex.XB
  44da6c:	rex.WRXB
  44da6d:	rex.WR
  44da6e:	rex.WR
  44da6f:	push   r12
  44da71:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a1faeb
  44da78:	pop    rbx
  44da79:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209ffaf2
  44da7f:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44da85:	pop    rbp
  44da86:	or     ah,BYTE PTR [rax]
  44da88:	and    BYTE PTR [rax],ah
  44da8a:	and    BYTE PTR [rbx+0x2c],bl
  44da8d:	and    BYTE PTR [rsi],ch
  44da8f:	cs and BYTE PTR cs:[rbp+0xa],bl
  44da94:	pop    rbp
  44da95:	and    BYTE PTR [rcx],ch
  44da97:	or     ah,BYTE PTR [rax]
  44da99:	and    BYTE PTR [rbx+0x45],dl
  44da9c:	push   rdx
  44da9d:	push   rsi
  44da9e:	rex.RB push r10
  44daa0:	and    BYTE PTR [rip+0x205b0a73],ah        # 0x209fe519
  44daa6:	rex.WRXB push r8
  44daa8:	push   rsp
  44daa9:	rex.WB
  44daaa:	rex.WRXB
  44daab:	rex.WRX push rbx
  44daad:	and    BYTE PTR [rax],ch
  44daaf:	and    BYTE PTR [rip+0x25272073],ah        # 0x256bfb28
  44dab5:	jae    0x44dade
  44dab7:	and    BYTE PTR [rbx+0x2c],bl
  44daba:	and    BYTE PTR [rsi],ch
  44dabc:	cs and BYTE PTR cs:[rbp+0x20],bl
  44dac1:	sub    DWORD PTR [rax],esp
  44dac3:	pop    rbp
  44dac4:	or     cl,BYTE PTR [rdx]
  44dac6:	and    eax,0x5b0a0a73
  44dacb:	and    BYTE PTR [rbx+0x4f],al
  44dace:	rex.WRX push rbx
  44dad0:	push   rsp
  44dad1:	push   rdx
  44dad2:	rex.B
  44dad3:	rex.WB
  44dad4:	rex.WRX push rsp
  44dad6:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa1fb4f
  44dadc:	jnp    0x44dafe
  44dade:	rex.WRX
  44dadf:	rex.WRXB push r12
  44dae1:	and    BYTE PTR [rsi+0x55],cl
  44dae4:	rex.WR
  44dae5:	rex.WR and BYTE PTR [rdx+rcx*1+0x20],r15b
  44daea:	and    BYTE PTR [rsi+0x55],cl
  44daed:	rex.WR
  44daee:	rex.WR and BYTE PTR [rdx+rcx*1+0x20],r15b
  44daf3:	and    BYTE PTR [rbp+rax*2+0x46],al
  44daf7:	push   r13
  44daf9:	rex.WR push rsp
  44dafb:	and    BYTE PTR [rip+0x7d2073],ah        # 0xc1fb74
  44db01:	fs gs data16 (bad) 
  44db05:	jne    0x44db73
  44db07:	je     0x44db68
  44db09:	gs js  0x44db7c
  44db0c:	jb     0x44db0e
  44db0e:	ja     0x44db78
  44db10:	gs jb  0x44db78
  44db13:	and    BYTE PTR [rbx+0x6f],ah
  44db16:	ins    BYTE PTR es:[rdi],dx
  44db17:	jne    0x44db86
  44db19:	outs   dx,BYTE PTR ds:[rsi]
  44db1a:	pop    rdi
  44db1b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44db1e:	jae    0x44db94
  44db20:	jb     0x44db83
  44db22:	imul   ebp,DWORD PTR [rsi+0x74],0x3a736920
  44db29:	add    BYTE PTR [rax],al
  44db2b:	add    BYTE PTR [rax],al
  44db2d:	add    BYTE PTR [rax],al
  44db2f:	add    BYTE PTR [rbx+0x52],al
  44db32:	rex.RB
  44db33:	push   r12
  44db35:	and    BYTE PTR [r11+0x20],r11b
  44db39:	rex.WRXB push r10
  44db3b:	and    BYTE PTR [rdx+0x45],dl
  44db3e:	push   rax
  44db3f:	rex.WR
  44db40:	rex.B
  44db41:	rex.XB
  44db42:	and    BYTE PTR [r13+0x20],r11b
  44db46:	rex.RX push rbp
  44db48:	rex.WRX
  44db49:	rex.XB push r12
  44db4b:	rex.WB
  44db4c:	rex.WRXB
  44db4d:	rex.WRX or r12b,BYTE PTR [rax]
  44db50:	and    BYTE PTR [rax],ah
  44db52:	and    BYTE PTR [rip+0x20282073],ah        # 0x206cfbcb
  44db58:	pop    rbx
  44db59:	and    BYTE PTR [rbx+0x20],bl
  44db5c:	and    eax,0x205d2073
  44db61:	pop    rbx
  44db62:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1fbdb
  44db68:	and    eax,0x205b2073
  44db6d:	jnp    0x44db8f
  44db6f:	rex.R
  44db70:	rex.RB
  44db71:	rex.RX
  44db72:	push   r13
  44db74:	rex.WR push rsp
  44db76:	and    BYTE PTR [rax+riz*1+0x3d],bh
  44db7a:	and    BYTE PTR [rbp+0x20],bh
  44db7d:	and    eax,0x205d2073
  44db82:	pop    rbx
  44db83:	sub    al,0x20
  44db85:	cs cs cs pop rbp
  44db89:	and    BYTE PTR [rbp+0x20],bl
  44db8c:	sub    DWORD PTR [rdx],ecx
  44db8e:	and    BYTE PTR [rax],ah
  44db90:	and    BYTE PTR [rax],ah
  44db92:	pop    rbx
  44db93:	and    BYTE PTR [rdx+0x45],dl
  44db96:	push   rsp
  44db97:	push   rbp
  44db98:	push   rdx
  44db99:	rex.WRX push rbx
  44db9b:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064e614
  44dba1:	and    BYTE PTR [rax],ah
  44dba3:	and    BYTE PTR [rax],ah
  44dba5:	jl     0x44dbc7
  44dba7:	push   rdx
  44dba8:	rex.RB push r12
  44dbaa:	push   rbp
  44dbab:	push   rdx
  44dbac:	rex.WRX push rbx
  44dbae:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44dbb2:	rex.WR
  44dbb3:	and    BYTE PTR [r8],r13b
  44dbb6:	and    BYTE PTR [rip+0x73252073],ah        # 0x7369fc2f
  44dbbc:	and    BYTE PTR [rbx+0x2c],bl
  44dbbf:	and    BYTE PTR [rsi],ch
  44dbc1:	cs cs pop rbp
  44dbc4:	and    BYTE PTR [rcx],ch
  44dbc6:	and    BYTE PTR [rbp+0xa],bl
  44dbc9:	and    BYTE PTR [rax],ah
  44dbcb:	jnp    0x44dbed
  44dbcd:	rex.WR
  44dbce:	rex.B
  44dbcf:	rex.WRX
  44dbd0:	rex.RXB push r13
  44dbd2:	rex.B
  44dbd3:	rex.RXB
  44dbd4:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064e64e
  44dbdb:	and    BYTE PTR [rax],ah
  44dbdd:	jl     0x44dbff
  44dbdf:	push   rdi
  44dbe0:	rex.WB
  44dbe1:	rex.WRX
  44dbe2:	rex.R
  44dbe3:	rex.WRXB push r15
  44dbe5:	or     ah,BYTE PTR [rax]
  44dbe7:	and    BYTE PTR [rax],ah
  44dbe9:	and    BYTE PTR [rax+riz*1+0x49],bh
  44dbed:	rex.WRB
  44dbee:	rex.WRB push r13
  44dbf0:	push   rsp
  44dbf1:	rex.B
  44dbf2:	rex.X
  44dbf3:	rex.WR
  44dbf4:	and    BYTE PTR [r8+riz*1+0x53],r15b
  44dbf9:	push   rsp
  44dbfa:	rex.B
  44dbfb:	rex.X
  44dbfc:	rex.WR
  44dbfd:	and    BYTE PTR [r8+riz*1+0x56],r15b
  44dc02:	rex.WRXB
  44dc03:	rex.WR
  44dc04:	push   r12
  44dc06:	rex.WB
  44dc07:	rex.WR
  44dc08:	and    BYTE PTR [r8+riz*1+0x5b],r15b
  44dc0d:	and    BYTE PTR [rsi+0x4f],cl
  44dc10:	push   rsp
  44dc11:	and    BYTE PTR [rbp+0x20],bl
  44dc14:	rex.WR
  44dc15:	rex.RB
  44dc16:	rex.B
  44dc17:	rex.WXB push r8
  44dc19:	push   rdx
  44dc1a:	rex.WRXB
  44dc1b:	rex.WRXB
  44dc1c:	rex.RX or r12b,BYTE PTR [rax]
  44dc1f:	and    BYTE PTR [rax],ah
  44dc21:	and    BYTE PTR [rax+riz*1+0x43],bh
  44dc25:	rex.B
  44dc26:	rex.WR
  44dc27:	rex.WR
  44dc28:	rex.RB
  44dc29:	and    BYTE PTR [rdi+0x4e],r9b
  44dc2d:	and    BYTE PTR [rsi+0x55],cl
  44dc30:	rex.WR
  44dc31:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44dc35:	push   rax
  44dc36:	push   rbp
  44dc37:	push   rsp
  44dc38:	and    BYTE PTR [rax+riz*1+0x52],bh
  44dc3c:	rex.RB push r12
  44dc3e:	push   rbp
  44dc3f:	push   rdx
  44dc40:	rex.WRX push rbx
  44dc42:	and    BYTE PTR [rsi+0x55],cl
  44dc45:	rex.WR
  44dc46:	rex.WR and BYTE PTR [rdi+0x4e],r9b
  44dc4a:	and    BYTE PTR [rsi+0x55],cl
  44dc4d:	rex.WR
  44dc4e:	rex.WR and BYTE PTR [rcx+0x4e],r9b
  44dc52:	push   rax
  44dc53:	push   rbp
  44dc54:	push   rsp
  44dc55:	and    BYTE PTR [rax+riz*1+0x53],bh
  44dc59:	push   rsp
  44dc5a:	push   rdx
  44dc5b:	rex.WB
  44dc5c:	rex.XB push r12
  44dc5e:	or     ah,BYTE PTR [rax]
  44dc60:	and    BYTE PTR [rax],ah
  44dc62:	and    BYTE PTR [rax+riz*1+0x5b],bh
  44dc66:	and    BYTE PTR [rbp+0x58],al
  44dc69:	push   rsp
  44dc6a:	rex.RB push r10
  44dc6c:	rex.WRX
  44dc6d:	rex.B
  44dc6e:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44dc72:	push   rbx
  44dc73:	rex.RB
  44dc74:	rex.XB push r13
  44dc76:	push   rdx
  44dc77:	rex.WB push r12
  44dc79:	pop    rcx
  44dc7a:	and    BYTE PTR [rcx+0x4e],cl
  44dc7d:	push   rsi
  44dc7e:	rex.WRXB
  44dc7f:	rex.WXB
  44dc80:	rex.RB push r10
  44dc82:	and    BYTE PTR [rax+riz*1+0x5b],bh
  44dc86:	and    BYTE PTR [rbp+0x58],al
  44dc89:	push   rsp
  44dc8a:	rex.RB push r10
  44dc8c:	rex.WRX
  44dc8d:	rex.B
  44dc8e:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44dc92:	push   rbx
  44dc93:	rex.RB
  44dc94:	rex.XB push r13
  44dc96:	push   rdx
  44dc97:	rex.WB push r12
  44dc99:	pop    rcx
  44dc9a:	and    BYTE PTR [rbp+rax*2+0x46],al
  44dc9e:	rex.WB
  44dc9f:	rex.WRX
  44dca0:	rex.RB push r10
  44dca2:	or     ah,BYTE PTR [rax]
  44dca4:	and    BYTE PTR [rax],ah
  44dca6:	and    BYTE PTR [rax+riz*1+0x43],bh
  44dcaa:	rex.WRXB push r11
  44dcac:	push   rsp
  44dcad:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064e726
  44dcb3:	and    BYTE PTR [rax],ah
  44dcb5:	jl     0x44dcd7
  44dcb7:	push   rdx
  44dcb8:	rex.WRXB push r15
  44dcba:	push   rbx
  44dcbb:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064e734
  44dcc1:	and    BYTE PTR [rax],ah
  44dcc3:	jl     0x44dce5
  44dcc5:	push   rbx
  44dcc6:	rex.RB push r12
  44dcc8:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20bffd41
  44dcce:	push   rsp
  44dccf:	rex.WRXB and BYTE PTR [rip+0x207c2073],r12b        # 0x20c0fd49
  44dcd6:	cmp    eax,0x20732520
  44dcdb:	jl     0x44dcfd
  44dcdd:	rex.RX push rdx
  44dcdf:	rex.WRXB
  44dce0:	rex.WRB and BYTE PTR [r11+0x55],r8b
  44dce4:	push   rdx
  44dce5:	push   rdx
  44dce6:	rex.RB
  44dce7:	rex.WRX push rsp
  44dce9:	and    BYTE PTR [rbp+0xa],bh
  44dcec:	and    BYTE PTR [rax],ah
  44dcee:	and    BYTE PTR [rax],ah
  44dcf0:	jl     0x44dd12
  44dcf2:	push   r11
  44dcf4:	and    BYTE PTR [rdi],ah
  44dcf6:	and    eax,0x200a2773
  44dcfb:	and    BYTE PTR [rax],ah
  44dcfd:	and    BYTE PTR [rax+riz*1+0x41],bh
  44dd01:	push   rbx
  44dd02:	and    BYTE PTR [rdi],ah
  44dd04:	and    eax,0x202c2773
  44dd09:	(bad)  
  44dd0a:	and    eax,0x200a2773
  44dd0f:	and    BYTE PTR [rbp+0x20],bh
  44dd12:	cs cs or ah,BYTE PTR cs:[rax]
  44dd17:	and    BYTE PTR [rax],ah
  44dd19:	and    BYTE PTR [rbx+0x20],bl
  44dd1c:	push   rdi
  44dd1d:	rex.WB push r12
  44dd1f:	rex.W and BYTE PTR [rax],bpl
  44dd22:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9ffd9b
  44dd28:	and    BYTE PTR [rsi],ch
  44dd2a:	cs cs pop rbp
  44dd2d:	and    BYTE PTR [rcx],ch
  44dd2f:	and    BYTE PTR [rbp+0x0],bl
  44dd32:	(bad)  
  44dd33:	je     0x44dda9
  44dd35:	jb     0x44dda0
  44dd37:	(bad)  
  44dd38:	jne    0x44ddae
  44dd3a:	add    BYTE PTR gs:[rcx+rbp*2+0x6e],ch
  44dd3f:	imul   ebx,DWORD PTR [rdi+0x73],0x79
  44dd43:	ins    DWORD PTR es:[rdi],dx
  44dd44:	(bad)  
  44dd45:	outs   dx,DWORD PTR ds:[rsi]
  44dd46:	ins    BYTE PTR es:[rdi],dx
  44dd47:	add    BYTE PTR [rdi+0x62],ch
  44dd4a:	push   0x5f
  44dd4c:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6564
  44dd53:	imul   bp,WORD PTR [rsi+0x69],0x6974
  44dd59:	outs   dx,DWORD PTR ds:[rsi]
  44dd5a:	outs   dx,BYTE PTR ds:[rsi]
  44dd5b:	add    BYTE PTR [rcx+riz*2+0x6e],ch
  44dd5f:	addr32 pop rdi
  44dd61:	outs   dx,BYTE PTR ds:[rsi]
  44dd62:	(bad)  
  44dd63:	ins    DWORD PTR es:[rdi],dx
  44dd64:	add    BYTE PTR gs:[rbx+0x6f],ah
  44dd68:	ins    BYTE PTR es:[rdi],dx
  44dd69:	jne    0x44ddd8
  44dd6b:	outs   dx,BYTE PTR ds:[rsi]
  44dd6c:	pop    rdi
  44dd6d:	je     0x44dde8
  44dd6f:	jo     0x44ddd6
  44dd71:	add    BYTE PTR [rdx+0x65],dh
  44dd74:	je     0x44ddea
  44dd76:	jns    0x44dde8
  44dd78:	add    BYTE PTR gs:[rax],al
  44dd7b:	add    BYTE PTR [rax],al
  44dd7d:	add    BYTE PTR [rax],al
  44dd7f:	add    BYTE PTR [rbx+0x52],al
  44dd82:	rex.RB
  44dd83:	push   r12
  44dd85:	and    BYTE PTR [r15+0x52],r8b
  44dd89:	rex.WRXB push r13
  44dd8b:	push   rax
  44dd8c:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209ffe05
  44dd92:	pop    rbx
  44dd93:	and    BYTE PTR [rdi+0x49],dl
  44dd96:	push   rsp
  44dd97:	rex.W and BYTE PTR [rbp+0x20],bl
  44dd9b:	and    eax,0x205b2073
  44dda0:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44dda6:	pop    rbp
  44dda7:	or     cl,BYTE PTR [rdx]
  44dda9:	and    eax,0x200a0a73
  44ddae:	and    BYTE PTR [rax],ah
  44ddb0:	and    BYTE PTR [rax],ah
  44ddb2:	and    BYTE PTR [rbx+0x55],dl
  44ddb5:	push   rax
  44ddb6:	rex.RB push r10
  44ddb8:	push   rbp
  44ddb9:	push   rbx
  44ddba:	rex.RB push r10
  44ddbc:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44ddc0:	rex.WRXB push r11
  44ddc2:	push   rbp
  44ddc3:	push   rax
  44ddc4:	rex.RB push r10
  44ddc6:	push   rbp
  44ddc7:	push   rbx
  44ddc8:	rex.RB push r10
  44ddca:	or     ah,BYTE PTR [rax]
  44ddcc:	and    BYTE PTR [rax],ah
  44ddce:	and    BYTE PTR [rax+riz*1+0x43],bh
  44ddd2:	push   rdx
  44ddd3:	rex.RB
  44ddd4:	push   r12
  44ddd6:	rex.RB
  44ddd7:	rex.R
  44ddd8:	and    BYTE PTR [rax+r12*1+0x4e],dil
  44dddd:	rex.WRXB
  44ddde:	rex.XB push r10
  44dde0:	rex.RB
  44dde1:	push   r12
  44dde3:	rex.RB
  44dde4:	rex.R
  44dde5:	rex.X or spl,BYTE PTR [rax]
  44dde8:	and    BYTE PTR [rax],ah
  44ddea:	and    BYTE PTR [rax+riz*1+0x43],bh
  44ddee:	push   rdx
  44ddef:	rex.RB
  44ddf0:	push   r12
  44ddf2:	rex.RB push r10
  44ddf4:	rex.WRXB
  44ddf5:	rex.WR
  44ddf6:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44ddfb:	rex.WRXB
  44ddfc:	rex.XB push r10
  44ddfe:	rex.RB
  44ddff:	push   r12
  44de01:	rex.RB push r10
  44de03:	rex.WRXB
  44de04:	rex.WR
  44de05:	or     r12b,BYTE PTR [r8]
  44de08:	and    BYTE PTR [rax],ah
  44de0a:	and    BYTE PTR [rax+riz*1+0x43],bh
  44de0e:	push   rdx
  44de0f:	rex.RB
  44de10:	push   r12
  44de12:	rex.RB push r13
  44de14:	push   rbx
  44de15:	rex.RB push r10
  44de17:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44de1b:	rex.WRXB
  44de1c:	rex.XB push r10
  44de1e:	rex.RB
  44de1f:	push   r12
  44de21:	rex.RB push r13
  44de23:	push   rbx
  44de24:	rex.RB push r10
  44de26:	or     ah,BYTE PTR [rax]
  44de28:	and    BYTE PTR [rax],ah
  44de2a:	and    BYTE PTR [rax+riz*1+0x49],bh
  44de2e:	rex.WRX
  44de2f:	rex.W
  44de30:	rex.RB push r10
  44de32:	rex.WB push r12
  44de34:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44de38:	rex.WRXB
  44de39:	rex.WB
  44de3a:	rex.WRX
  44de3b:	rex.W
  44de3c:	rex.RB push r10
  44de3e:	rex.WB push r12
  44de40:	or     ah,BYTE PTR [rax]
  44de42:	and    BYTE PTR [rax],ah
  44de44:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44de48:	rex.WRXB
  44de49:	rex.RXB
  44de4a:	rex.WB
  44de4b:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44de50:	rex.WRXB
  44de51:	rex.WR
  44de52:	rex.WRXB
  44de53:	rex.RXB
  44de54:	rex.WB
  44de55:	rex.WRX or r12b,BYTE PTR [rax]
  44de58:	and    BYTE PTR [rax],ah
  44de5a:	and    BYTE PTR [rax+riz*1+0x5b],bh
  44de5e:	and    BYTE PTR [rbp+0x4e],al
  44de61:	rex.XB push r10
  44de63:	pop    rcx
  44de64:	push   rax
  44de65:	push   rsp
  44de66:	rex.RB
  44de67:	and    BYTE PTR [rax+riz*1+0x55],r15b
  44de6c:	rex.WRX
  44de6d:	rex.RB
  44de6e:	rex.WRX
  44de6f:	rex.XB push r10
  44de71:	pop    rcx
  44de72:	push   rax
  44de73:	push   rsp
  44de74:	rex.RB
  44de75:	and    BYTE PTR [rbp+0x20],r11b
  44de79:	push   rax
  44de7a:	push   r11
  44de7c:	push   rbx
  44de7d:	push   rdi
  44de7e:	rex.WRXB push r10
  44de80:	and    BYTE PTR [rdi],r12b
  44de83:	and    eax,0x200a2773
  44de88:	and    BYTE PTR [rax],ah
  44de8a:	and    BYTE PTR [rax+riz*1+0x56],bh
  44de8e:	rex.B
  44de8f:	rex.WR
  44de90:	rex.WB
  44de91:	and    BYTE PTR [rbp+0x4e],r10b
  44de95:	push   rsp
  44de96:	rex.WB
  44de97:	rex.WR and BYTE PTR [rdi],r12b
  44de9a:	and    eax,0x200a2773
  44de9f:	and    BYTE PTR [rax],ah
  44dea1:	and    BYTE PTR [rax+riz*1+0x49],bh
  44dea5:	rex.WRX and BYTE PTR [rdx+0x4f],r10b
  44dea9:	rex.WR
  44deaa:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2c9fff24
  44deb1:	and    BYTE PTR [rsi],ch
  44deb3:	cs cs pop rbp
  44deb6:	or     ah,BYTE PTR [rax]
  44deb8:	and    BYTE PTR [rax],ah
  44deba:	and    BYTE PTR [rax+riz*1+0x49],bh
  44debe:	rex.WRX and BYTE PTR [rdi+0x52],r8b
  44dec2:	rex.WRXB push r13
  44dec4:	push   rax
  44dec5:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fff3e
  44decb:	and    BYTE PTR [rsi],ch
  44decd:	cs cs pop rbp
  44ded0:	or     ah,BYTE PTR [rax]
  44ded2:	and    BYTE PTR [rax],ah
  44ded4:	and    BYTE PTR [rax+riz*1+0x52],bh
  44ded8:	rex.WRXB
  44ded9:	rex.WR
  44deda:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2c9fff54
  44dee1:	and    BYTE PTR [rsi],ch
  44dee3:	cs cs pop rbp
  44dee6:	or     ah,BYTE PTR [rax]
  44dee8:	and    BYTE PTR [rax],ah
  44deea:	and    BYTE PTR [rax+riz*1+0x41],bh
  44deee:	rex.R
  44deef:	rex.WRB
  44def0:	rex.WB
  44def1:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2c9fff6b
  44def8:	and    BYTE PTR [rsi],ch
  44defa:	cs cs pop rbp
  44defd:	or     ah,BYTE PTR [rax]
  44deff:	and    BYTE PTR [rax],ah
  44df01:	and    BYTE PTR [rax+riz*1+0x55],bh
  44df05:	push   rbx
  44df06:	rex.RB push r10
  44df08:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2c9fff81
  44df0e:	and    BYTE PTR [rsi],ch
  44df10:	cs cs pop rbp
  44df13:	or     ah,BYTE PTR [rax]
  44df15:	and    BYTE PTR [rax],ah
  44df17:	and    BYTE PTR [rax+riz*1+0x53],bh
  44df1b:	pop    rcx
  44df1c:	push   rbx
  44df1d:	rex.WB
  44df1e:	and    BYTE PTR [rip+0x69750073],r12b        # 0x69b9df98
  44df25:	add    BYTE PTR fs:[rax],al
  44df28:	rex.XB push r10
  44df2a:	rex.RB
  44df2b:	push   r12
  44df2d:	and    BYTE PTR [r11+0x20],r11b
  44df31:	push   rbp
  44df32:	rex.WRX
  44df33:	rex.WB push r9
  44df35:	push   rbp
  44df36:	and    BYTE PTR [r13+0x20],r11b
  44df3a:	rex.WB
  44df3b:	rex.WRX
  44df3c:	rex.R
  44df3d:	rex.RB pop r8
  44df3f:	and    BYTE PTR [rbx+0x20],bl
  44df42:	rex.XB
  44df43:	rex.WRXB
  44df44:	rex.WRX
  44df45:	rex.XB push r13
  44df47:	push   rdx
  44df48:	push   rdx
  44df49:	rex.RB
  44df4a:	rex.WRX push rsp
  44df4c:	rex.WR pop rcx
  44df4e:	and    BYTE PTR [rbp+0x20],bl
  44df51:	pop    rbx
  44df52:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a1ffcb
  44df58:	rex.WRXB
  44df59:	rex.WRX and BYTE PTR [rip+0x205b2073],r12b        # 0x209fffd3
  44df60:	push   rbp
  44df61:	push   rbx
  44df62:	rex.WB
  44df63:	rex.WRX
  44df64:	rex.RXB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa1ffde
  44df6b:	and    BYTE PTR [rax],ah
  44df6d:	and    BYTE PTR [rax],ah
  44df6f:	sub    BYTE PTR [rax],ah
  44df71:	jnp    0x44df93
  44df73:	and    eax,0x207c2073
  44df78:	sub    BYTE PTR [rax],ah
  44df7a:	and    eax,0x20292073
  44df7f:	jge    0x44dfa1
  44df81:	pop    rbx
  44df82:	and    BYTE PTR [rbx+0x4f],al
  44df85:	rex.WR
  44df86:	rex.WR
  44df87:	push   r12
  44df89:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20003
  44df90:	pop    rbx
  44df91:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a2000a
  44df97:	pop    rbx
  44df98:	and    BYTE PTR [rcx+0x53],al
  44df9b:	and    BYTE PTR [r8+r12*1+0x44],dil
  44dfa0:	rex.RB push r11
  44dfa2:	rex.XB and BYTE PTR [r13+0x20],bl
  44dfa6:	pop    rbx
  44dfa7:	and    BYTE PTR [rsi+0x55],cl
  44dfaa:	rex.WR
  44dfab:	rex.WR push rbx
  44dfad:	and    BYTE PTR [rbx+0x20],bh
  44dfb0:	rex.RX
  44dfb1:	rex.WB push r10
  44dfb3:	push   rbx
  44dfb4:	push   rsp
  44dfb5:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44dfb9:	push   r11
  44dfbb:	push   rsp
  44dfbc:	and    BYTE PTR [rbp+0x20],bh
  44dfbf:	pop    rbp
  44dfc0:	and    BYTE PTR [rbx+0x2c],bl
  44dfc3:	and    BYTE PTR [rsi],ch
  44dfc5:	cs cs pop rbp
  44dfc8:	and    BYTE PTR [rcx],ch
  44dfca:	or     ah,BYTE PTR [rax]
  44dfcc:	and    BYTE PTR [rax],ah
  44dfce:	and    BYTE PTR [rbx+0x20],bl
  44dfd1:	push   rdi
  44dfd2:	rex.WB push r12
  44dfd4:	rex.W and BYTE PTR [rax],bpl
  44dfd7:	and    BYTE PTR [rip+0x203d2073],ah        # 0x20820050
  44dfdd:	and    eax,0x2c5b2073
  44dfe2:	and    BYTE PTR [rsi],ch
  44dfe4:	cs and BYTE PTR cs:[rbp+0x20],bl
  44dfe9:	sub    DWORD PTR [rax],esp
  44dfeb:	pop    rbp
  44dfec:	or     ah,BYTE PTR [rax]
  44dfee:	and    BYTE PTR [rax],ah
  44dff0:	and    BYTE PTR [rbx+0x20],bl
  44dff3:	push   rsp
  44dff4:	rex.B
  44dff5:	rex.X
  44dff6:	rex.WR
  44dff7:	rex.RB push r11
  44dff9:	push   rax
  44dffa:	rex.B
  44dffb:	rex.XB
  44dffc:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20076
  44e003:	and    BYTE PTR [rax],ah
  44e005:	and    BYTE PTR [rax],ah
  44e007:	pop    rbx
  44e008:	and    BYTE PTR [rdi+0x48],dl
  44e00b:	rex.RB push r10
  44e00d:	and    BYTE PTR [rip+0x5d2073],r12b        # 0xa20087
  44e014:	jo     0x44e088
  44e016:	gs imul esp,DWORD PTR fs:[rbx+0x61],0x6f006574
  44e01f:	jo     0x44e084
  44e021:	ins    BYTE PTR es:[rdi],dx
  44e022:	(bad)  
  44e023:	jae    0x44e098
  44e025:	add    BYTE PTR [rbp+0x65],ch
  44e028:	je     0x44e092
  44e02a:	outs   dx,DWORD PTR ds:[rsi]
  44e02b:	add    BYTE PTR fs:[rax],al
  44e02e:	add    BYTE PTR [rax],al
  44e030:	rex.XB push r10
  44e032:	rex.RB
  44e033:	push   r12
  44e035:	and    BYTE PTR [r11+0x20],r11b
  44e039:	rex.WRXB push r10
  44e03b:	and    BYTE PTR [rdx+0x45],dl
  44e03e:	push   rax
  44e03f:	rex.WR
  44e040:	rex.B
  44e041:	rex.XB
  44e042:	and    BYTE PTR [r13+0x20],r11b
  44e046:	pop    rbx
  44e047:	and    BYTE PTR [rax+0x52],dl
  44e04a:	rex.WRXB
  44e04b:	rex.XB
  44e04c:	rex.RB
  44e04d:	rex.R push rbp
  44e04f:	push   rdx
  44e050:	rex.B
  44e051:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44e055:	rex.WR
  44e056:	rex.B
  44e057:	rex.WRX
  44e058:	rex.RXB push r13
  44e05a:	rex.B
  44e05b:	rex.RXB
  44e05c:	and    BYTE PTR [rip+0x52430a73],r12b        # 0x5287ead6
  44e063:	rex.RB
  44e064:	push   r12
  44e066:	and    BYTE PTR [r11+0x20],r11b
  44e06a:	rex.WRXB push r10
  44e06c:	and    BYTE PTR [rdx+0x45],dl
  44e06f:	push   rax
  44e070:	rex.WR
  44e071:	rex.B
  44e072:	rex.XB
  44e073:	and    BYTE PTR [r13+0x20],r11b
  44e077:	pop    rbx
  44e078:	and    BYTE PTR [rdx+rdx*2+0x55],dl
  44e07c:	push   rbx
  44e07d:	push   rsp
  44e07e:	rex.RB
  44e07f:	and    BYTE PTR [rbp+0x20],r11b
  44e083:	pop    rbx
  44e084:	and    BYTE PTR [rax+0x52],dl
  44e087:	rex.WRXB
  44e088:	rex.XB
  44e089:	rex.RB
  44e08a:	rex.R push rbp
  44e08c:	push   rdx
  44e08d:	rex.B
  44e08e:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44e092:	rex.WR
  44e093:	rex.B
  44e094:	rex.WRX
  44e095:	rex.RXB push r13
  44e097:	rex.B
  44e098:	rex.RXB
  44e099:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064eb13
  44e0a0:	and    BYTE PTR [rax],ah
  44e0a2:	rex.W
  44e0a3:	rex.B
  44e0a4:	rex.WRX
  44e0a5:	rex.R
  44e0a6:	rex.WR
  44e0a7:	rex.RB push r10
  44e0a9:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a00122
  44e0af:	rex.WB
  44e0b0:	rex.WRX
  44e0b1:	rex.WR
  44e0b2:	rex.WB
  44e0b3:	rex.WRX
  44e0b4:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a2012e
  44e0bb:	pop    rbx
  44e0bc:	and    BYTE PTR [rsi+0x41],dl
  44e0bf:	rex.WR
  44e0c0:	rex.WB
  44e0c1:	rex.R
  44e0c2:	push   r12
  44e0c4:	rex.WRXB push r10
  44e0c6:	and    BYTE PTR [rip+0x5d2073],ah        # 0xa2013f
  44e0cc:	jbe    0x44e12f
  44e0ce:	ins    BYTE PTR es:[rdi],dx
  44e0cf:	data16 jne 0x44e140
  44e0d2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44e0d6:	outs   dx,BYTE PTR ds:[rsi]
  44e0d7:	add    BYTE PTR [rcx+0x6e],ch
  44e0da:	ins    BYTE PTR es:[rdi],dx
  44e0db:	imul   ebp,DWORD PTR [rsi+0x65],0x6e61685f
  44e0e2:	fs ins BYTE PTR es:[rdi],dx
  44e0e4:	gs jb  0x44e0e7
  44e0e7:	movsxd esp,DWORD PTR [rcx+0x6c]
  44e0ea:	ins    BYTE PTR es:[rdi],dx
  44e0eb:	pop    rdi
  44e0ec:	push   0x6c646e61
  44e0f1:	gs jb  0x44e0f4
  44e0f4:	add    BYTE PTR [rax],al
  44e0f6:	add    BYTE PTR [rax],al
  44e0f8:	rex.XB push r10
  44e0fa:	rex.RB
  44e0fb:	push   r12
  44e0fd:	and    BYTE PTR [r13+0x41],r9b
  44e101:	push   rsp
  44e102:	rex.RB push r10
  44e104:	rex.WB
  44e105:	rex.B
  44e106:	rex.WR
  44e107:	rex.WB pop r10
  44e109:	rex.RB
  44e10a:	and    BYTE PTR [rsi+0x49],r10b
  44e10e:	rex.RB push r15
  44e110:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064eb89
  44e116:	and    BYTE PTR [rax],ah
  44e118:	pop    rbx
  44e119:	and    BYTE PTR [rax],ch
  44e11b:	and    eax,0x2c5b2073
  44e120:	and    BYTE PTR [rsi],ch
  44e122:	cs cs pop rbp
  44e125:	and    BYTE PTR [rcx],ch
  44e127:	and    BYTE PTR [rbp+0xa],bl
  44e12a:	and    BYTE PTR [rax],ah
  44e12c:	and    BYTE PTR [rax],ah
  44e12e:	pop    rbx
  44e12f:	and    BYTE PTR [rdi+0x49],dl
  44e132:	push   rsp
  44e133:	rex.W and BYTE PTR [rax],bpl
  44e136:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da001af
  44e13c:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b653eb5
  44e142:	sub    al,0x20
  44e144:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e14a:	sub    DWORD PTR [rax],esp
  44e14c:	pop    rbp
  44e14d:	or     ah,BYTE PTR [rax]
  44e14f:	and    BYTE PTR [rax],ah
  44e151:	and    BYTE PTR [rbx+0x20],bl
  44e154:	push   rsp
  44e155:	rex.B
  44e156:	rex.X
  44e157:	rex.WR
  44e158:	rex.RB push r11
  44e15a:	push   rax
  44e15b:	rex.B
  44e15c:	rex.XB
  44e15d:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa201d7
  44e164:	and    BYTE PTR [rax],ah
  44e166:	and    BYTE PTR [rax],ah
  44e168:	push   r11
  44e16a:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064ebe3
  44e170:	and    BYTE PTR [rax],ah
  44e172:	pop    rbx
  44e173:	and    BYTE PTR [rdi+0x49],dl
  44e176:	push   rsp
  44e177:	rex.W and BYTE PTR [rbx+0x20],bl
  44e17b:	rex.WRX
  44e17c:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  44e180:	rex.R
  44e181:	push   r12
  44e183:	and    BYTE PTR [r13+0x0],bl
  44e187:	add    BYTE PTR [rbx+0x52],al
  44e18a:	rex.RB
  44e18b:	push   r12
  44e18d:	and    BYTE PTR [r15+0x50],r9b
  44e191:	rex.RB push r10
  44e193:	push   r12
  44e195:	rex.WRXB push r10
  44e197:	and    BYTE PTR [rip+0xa282073],ah        # 0xa6d0210
  44e19d:	and    BYTE PTR [rax],ah
  44e19f:	and    BYTE PTR [rax],ah
  44e1a1:	push   rax
  44e1a2:	push   rdx
  44e1a3:	rex.WRXB
  44e1a4:	rex.XB
  44e1a5:	rex.RB
  44e1a6:	rex.R push rbp
  44e1a8:	push   rdx
  44e1a9:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab806d0
  44e1b0:	and    BYTE PTR [rax],ah
  44e1b2:	and    BYTE PTR [rax],ah
  44e1b4:	pop    rbx
  44e1b5:	sub    al,0x20
  44e1b7:	rex.WR
  44e1b8:	rex.RB
  44e1b9:	rex.RX push rsp
  44e1bb:	push   r10
  44e1bd:	rex.RXB and BYTE PTR [rip+0x20732520],r15b        # 0x20b806e4
  44e1c4:	pop    rbp
  44e1c5:	and    BYTE PTR [rbx+0x2c],bl
  44e1c8:	and    BYTE PTR [rdx+0x49],dl
  44e1cb:	rex.RXB
  44e1cc:	rex.W push rsp
  44e1ce:	push   r10
  44e1d0:	rex.RXB and BYTE PTR [rip+0x20732520],r15b        # 0x20b806f7
  44e1d7:	pop    rbp
  44e1d8:	or     ah,BYTE PTR [rax]
  44e1da:	and    BYTE PTR [rax],ah
  44e1dc:	and    BYTE PTR [rbx+0x2c],bl
  44e1df:	and    BYTE PTR [rbx+0x4f],al
  44e1e2:	rex.WRB
  44e1e3:	rex.WRB push r13
  44e1e5:	push   rsp
  44e1e6:	push   r12
  44e1e8:	rex.WRXB push r10
  44e1ea:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b80710
  44e1f0:	pop    rbp
  44e1f1:	and    BYTE PTR [rbx+0x2c],bl
  44e1f4:	and    BYTE PTR [rsi+0x45],cl
  44e1f7:	rex.RXB
  44e1f8:	push   r12
  44e1fa:	rex.WRXB push r10
  44e1fc:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b80722
  44e202:	pop    rbp
  44e203:	or     ah,BYTE PTR [rax]
  44e205:	and    BYTE PTR [rax],ah
  44e207:	and    BYTE PTR [rbx+0x2c],bl
  44e20a:	and    BYTE PTR [rdx+0x45],dl
  44e20d:	push   rbx
  44e20e:	push   rsp
  44e20f:	push   rdx
  44e210:	rex.WB
  44e211:	rex.XB push r12
  44e213:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b80739
  44e219:	pop    rbp
  44e21a:	and    BYTE PTR [rbx+0x2c],bl
  44e21d:	and    BYTE PTR [rdx+0x4f],cl
  44e220:	rex.WB
  44e221:	rex.WRX and BYTE PTR [rip+0x20732520],r15b        # 0x20b80748
  44e228:	pop    rbp
  44e229:	or     ah,BYTE PTR [rax]
  44e22b:	and    BYTE PTR [rax],ah
  44e22d:	and    BYTE PTR [rbx+0x2c],bl
  44e230:	and    BYTE PTR [rax+0x41],cl
  44e233:	push   rbx
  44e234:	rex.W
  44e235:	rex.RB push r11
  44e237:	and    BYTE PTR [rbp+0x20],bl
  44e23a:	pop    rbx
  44e23b:	sub    al,0x20
  44e23d:	rex.WRB
  44e23e:	rex.RB push r10
  44e240:	rex.RXB
  44e241:	rex.RB push r11
  44e243:	and    BYTE PTR [rbp+0xa],bl
  44e246:	sub    DWORD PTR [rax],eax
  44e248:	push   0x6f
  44e24a:	imul   ebp,DWORD PTR [rsi+0x5f],0x636f7270
  44e251:	add    BYTE PTR [rdx+0x65],dh
  44e254:	jae    0x44e2b5
  44e256:	jo     0x44e2ca
  44e258:	outs   dx,DWORD PTR ds:[rsi]
  44e259:	movsxd eax,DWORD PTR [rax]
  44e25b:	outs   dx,BYTE PTR ds:[rsi]
  44e25c:	gs addr32 pop rdi
  44e25f:	outs   dx,DWORD PTR ds:[rsi]
  44e260:	jo     0x44e262
  44e262:	movsxd ebp,DWORD PTR [rdi+0x6d]
  44e265:	pop    rdi
  44e266:	outs   dx,DWORD PTR ds:[rsi]
  44e267:	jo     0x44e269
  44e269:	add    BYTE PTR [rax],al
  44e26b:	add    BYTE PTR [rax],al
  44e26d:	add    BYTE PTR [rax],al
  44e26f:	add    BYTE PTR [rbx+0x52],al
  44e272:	rex.RB
  44e273:	push   r12
  44e275:	and    BYTE PTR [r15+0x50],r9b
  44e279:	rex.RB push r10
  44e27b:	push   r12
  44e27d:	rex.WRXB push r10
  44e27f:	and    BYTE PTR [rbx+0x4c],al
  44e282:	push   r11
  44e284:	push   rbx
  44e285:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a002fe
  44e28b:	rex.R
  44e28c:	rex.RB
  44e28d:	rex.RX
  44e28e:	push   r13
  44e290:	rex.WR push rsp
  44e292:	and    BYTE PTR [rbp+0x20],bl
  44e295:	rex.RX
  44e296:	rex.WRXB push r10
  44e298:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  44e29c:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064ed16
  44e2a3:	push   rbp
  44e2a4:	push   rbx
  44e2a5:	rex.WB
  44e2a6:	rex.WRX
  44e2a7:	rex.RXB and BYTE PTR [rip+0x205b2073],r12b        # 0x20a00321
  44e2ae:	rex.RX
  44e2af:	rex.B
  44e2b0:	rex.WRB
  44e2b1:	rex.WB
  44e2b2:	rex.WR pop rcx
  44e2b4:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a2032d
  44e2ba:	push   r11
  44e2bc:	or     ah,BYTE PTR [rax]
  44e2be:	and    BYTE PTR [rbx+0x20],bh
  44e2c1:	and    BYTE PTR [rdi+0x50],cl
  44e2c4:	rex.RB push r10
  44e2c6:	push   r12
  44e2c8:	rex.WRXB push r10
  44e2ca:	and    BYTE PTR [rip+0x73252073],ah        # 0x736a0343
  44e2d0:	and    BYTE PTR [rbx+0x20],bl
  44e2d3:	sub    BYTE PTR [rax],ah
  44e2d5:	and    eax,0x25202c73
  44e2da:	jae    0x44e2fc
  44e2dc:	sub    DWORD PTR [rax],esp
  44e2de:	pop    rbp
  44e2df:	and    BYTE PTR [rbx+0x20],bl
  44e2e2:	rex.RX
  44e2e3:	rex.WRXB push r10
  44e2e5:	and    BYTE PTR [rbx+0x45],dl
  44e2e8:	push   r10
  44e2ea:	rex.XB
  44e2eb:	rex.W and BYTE PTR [rax+riz*1+0x46],dil
  44e2f0:	rex.WRXB push r10
  44e2f2:	and    BYTE PTR [rdi+0x52],cl
  44e2f5:	rex.R
  44e2f6:	rex.RB push r10
  44e2f8:	and    BYTE PTR [rdx+0x59],al
  44e2fb:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa20374
  44e301:	and    BYTE PTR [rax],ah
  44e303:	and    BYTE PTR [rax+riz*1+0x46],bh
  44e307:	push   rbp
  44e308:	rex.WRX
  44e309:	rex.XB push r12
  44e30b:	rex.WB
  44e30c:	rex.WRXB
  44e30d:	rex.WRX and BYTE PTR [rip+0x205b2073],r12b        # 0x20a00387
  44e314:	sub    BYTE PTR [rax],ah
  44e316:	and    eax,0x205b2073
  44e31b:	sub    al,0x20
  44e31d:	and    eax,0x205d2073
  44e322:	sub    DWORD PTR [rax],esp
  44e324:	pop    rbp
  44e325:	and    BYTE PTR [rip+0x20282073],ah        # 0x206d039e
  44e32b:	and    eax,0x2c5b2073
  44e330:	and    BYTE PTR [rsi],ch
  44e332:	cs cs pop rbp
  44e335:	and    BYTE PTR [rcx],ch
  44e337:	or     ah,BYTE PTR [rax]
  44e339:	and    BYTE PTR [rax],ah
  44e33b:	jl     0x44e35d
  44e33d:	push   rbx
  44e33e:	push   rsp
  44e33f:	rex.WRXB push r10
  44e341:	rex.B
  44e342:	rex.RXB
  44e343:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064edbd
  44e34a:	jge    0x44e36c
  44e34c:	pop    rbx
  44e34d:	sub    al,0x20
  44e34f:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  44e355:	jae    0x44e3cb
  44e357:	outs   dx,DWORD PTR ds:[rsi]
  44e358:	jb     0x44e3bb
  44e35a:	addr32 gs pop rdi
  44e35d:	je     0x44e3d8
  44e35f:	jo     0x44e3c6
  44e361:	add    BYTE PTR [rsi+0x61],ah
  44e364:	ins    DWORD PTR es:[rdi],dx
  44e365:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x656d616e
  44e36d:	add    BYTE PTR [rax],al
  44e36f:	add    BYTE PTR [rbx+0x52],al
  44e372:	rex.RB
  44e373:	push   r12
  44e375:	and    BYTE PTR [r15+0x50],r9b
  44e379:	rex.RB push r10
  44e37b:	push   r12
  44e37d:	rex.WRXB push r10
  44e37f:	and    BYTE PTR [rsi+0x41],al
  44e382:	rex.WRB
  44e383:	rex.WB
  44e384:	rex.WR pop rcx
  44e386:	and    BYTE PTR [rip+0x53552073],ah        # 0x539a03ff
  44e38c:	rex.WB
  44e38d:	rex.WRX
  44e38e:	rex.RXB and BYTE PTR [rip+0x73],r12b        # 0x44e408
  44e395:	add    BYTE PTR [rax],al
  44e397:	add    BYTE PTR [rbx+0x52],al
  44e39a:	rex.RB
  44e39b:	push   r12
  44e39d:	and    BYTE PTR [r10+0x4f],r10b
  44e3a1:	rex.WR
  44e3a2:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a0041c
  44e3a9:	pop    rbx
  44e3aa:	and    BYTE PTR [rdi+0x49],dl
  44e3ad:	push   rsp
  44e3ae:	rex.W and BYTE PTR [rbp+0x20],bl
  44e3b2:	and    eax,0x205b2073
  44e3b7:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e3bd:	pop    rbp
  44e3be:	or     cl,BYTE PTR [rdx]
  44e3c0:	and    eax,0x200a0a73
  44e3c5:	and    BYTE PTR [rax],ah
  44e3c7:	and    BYTE PTR [rax],ah
  44e3c9:	and    BYTE PTR [rbx+0x55],dl
  44e3cc:	push   rax
  44e3cd:	rex.RB push r10
  44e3cf:	push   rbp
  44e3d0:	push   rbx
  44e3d1:	rex.RB push r10
  44e3d3:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44e3d7:	rex.WRXB push r11
  44e3d9:	push   rbp
  44e3da:	push   rax
  44e3db:	rex.RB push r10
  44e3dd:	push   rbp
  44e3de:	push   rbx
  44e3df:	rex.RB push r10
  44e3e1:	or     ah,BYTE PTR [rax]
  44e3e3:	and    BYTE PTR [rax],ah
  44e3e5:	and    BYTE PTR [rax+riz*1+0x43],bh
  44e3e9:	push   rdx
  44e3ea:	rex.RB
  44e3eb:	push   r12
  44e3ed:	rex.RB
  44e3ee:	rex.R
  44e3ef:	and    BYTE PTR [rax+r12*1+0x4e],dil
  44e3f4:	rex.WRXB
  44e3f5:	rex.XB push r10
  44e3f7:	rex.RB
  44e3f8:	push   r12
  44e3fa:	rex.RB
  44e3fb:	rex.R
  44e3fc:	rex.X or spl,BYTE PTR [rax]
  44e3ff:	and    BYTE PTR [rax],ah
  44e401:	and    BYTE PTR [rax+riz*1+0x43],bh
  44e405:	push   rdx
  44e406:	rex.RB
  44e407:	push   r12
  44e409:	rex.RB push r10
  44e40b:	rex.WRXB
  44e40c:	rex.WR
  44e40d:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44e412:	rex.WRXB
  44e413:	rex.XB push r10
  44e415:	rex.RB
  44e416:	push   r12
  44e418:	rex.RB push r10
  44e41a:	rex.WRXB
  44e41b:	rex.WR
  44e41c:	or     r12b,BYTE PTR [r8]
  44e41f:	and    BYTE PTR [rax],ah
  44e421:	and    BYTE PTR [rax+riz*1+0x43],bh
  44e425:	push   rdx
  44e426:	rex.RB
  44e427:	push   r12
  44e429:	rex.RB push r13
  44e42b:	push   rbx
  44e42c:	rex.RB push r10
  44e42e:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44e432:	rex.WRXB
  44e433:	rex.XB push r10
  44e435:	rex.RB
  44e436:	push   r12
  44e438:	rex.RB push r13
  44e43a:	push   rbx
  44e43b:	rex.RB push r10
  44e43d:	or     ah,BYTE PTR [rax]
  44e43f:	and    BYTE PTR [rax],ah
  44e441:	and    BYTE PTR [rax+riz*1+0x49],bh
  44e445:	rex.WRX
  44e446:	rex.W
  44e447:	rex.RB push r10
  44e449:	rex.WB push r12
  44e44b:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44e44f:	rex.WRXB
  44e450:	rex.WB
  44e451:	rex.WRX
  44e452:	rex.W
  44e453:	rex.RB push r10
  44e455:	rex.WB push r12
  44e457:	or     ah,BYTE PTR [rax]
  44e459:	and    BYTE PTR [rax],ah
  44e45b:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44e45f:	rex.WRXB
  44e460:	rex.RXB
  44e461:	rex.WB
  44e462:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44e467:	rex.WRXB
  44e468:	rex.WR
  44e469:	rex.WRXB
  44e46a:	rex.RXB
  44e46b:	rex.WB
  44e46c:	rex.WRX or r12b,BYTE PTR [rax]
  44e46f:	and    BYTE PTR [rax],ah
  44e471:	and    BYTE PTR [rax+riz*1+0x52],bh
  44e475:	rex.RB push r8
  44e477:	rex.WR
  44e478:	rex.WB
  44e479:	rex.XB
  44e47a:	push   r12
  44e47c:	rex.WB
  44e47d:	rex.WRXB
  44e47e:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44e483:	rex.WRXB push r10
  44e485:	rex.RB push r8
  44e487:	rex.WR
  44e488:	rex.WB
  44e489:	rex.XB
  44e48a:	push   r12
  44e48c:	rex.WB
  44e48d:	rex.WRXB
  44e48e:	rex.WRX or r12b,BYTE PTR [rax]
  44e491:	and    BYTE PTR [rax],ah
  44e493:	and    BYTE PTR [rax+riz*1+0x43],bh
  44e497:	rex.WRXB
  44e498:	rex.WRX
  44e499:	rex.WRX
  44e49a:	rex.RB
  44e49b:	rex.XB push r12
  44e49d:	rex.WB
  44e49e:	rex.WRXB
  44e49f:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  44e4a4:	rex.WB push r12
  44e4a6:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064ef1f
  44e4ac:	and    BYTE PTR [rax],ah
  44e4ae:	jl     0x44e4d0
  44e4b0:	pop    rbx
  44e4b1:	and    BYTE PTR [rbp+0x4e],al
  44e4b4:	rex.XB push r10
  44e4b6:	pop    rcx
  44e4b7:	push   rax
  44e4b8:	push   rsp
  44e4b9:	rex.RB
  44e4ba:	and    BYTE PTR [rax+riz*1+0x55],r15b
  44e4bf:	rex.WRX
  44e4c0:	rex.RB
  44e4c1:	rex.WRX
  44e4c2:	rex.XB push r10
  44e4c4:	pop    rcx
  44e4c5:	push   rax
  44e4c6:	push   rsp
  44e4c7:	rex.RB
  44e4c8:	and    BYTE PTR [rbp+0x20],r11b
  44e4cc:	push   rax
  44e4cd:	push   r11
  44e4cf:	push   rbx
  44e4d0:	push   rdi
  44e4d1:	rex.WRXB push r10
  44e4d3:	and    BYTE PTR [rdi],r12b
  44e4d6:	and    eax,0x200a2773
  44e4db:	and    BYTE PTR [rax],ah
  44e4dd:	and    BYTE PTR [rax+riz*1+0x56],bh
  44e4e1:	rex.B
  44e4e2:	rex.WR
  44e4e3:	rex.WB
  44e4e4:	and    BYTE PTR [rbp+0x4e],r10b
  44e4e8:	push   rsp
  44e4e9:	rex.WB
  44e4ea:	rex.WR and BYTE PTR [rdi],r12b
  44e4ed:	and    eax,0x200a2773
  44e4f2:	and    BYTE PTR [rax],ah
  44e4f4:	and    BYTE PTR [rax+riz*1+0x49],bh
  44e4f8:	rex.WRX and BYTE PTR [rdx+0x4f],r10b
  44e4fc:	rex.WR
  44e4fd:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca00577
  44e504:	and    BYTE PTR [rsi],ch
  44e506:	cs cs pop rbp
  44e509:	or     ah,BYTE PTR [rax]
  44e50b:	and    BYTE PTR [rax],ah
  44e50d:	and    BYTE PTR [rax+riz*1+0x49],bh
  44e511:	rex.WRX and BYTE PTR [rdi+0x52],r8b
  44e515:	rex.WRXB push r13
  44e517:	push   rax
  44e518:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca00591
  44e51e:	and    BYTE PTR [rsi],ch
  44e520:	cs cs pop rbp
  44e523:	or     ah,BYTE PTR [rax]
  44e525:	and    BYTE PTR [rax],ah
  44e527:	and    BYTE PTR [rax+riz*1+0x52],bh
  44e52b:	rex.WRXB
  44e52c:	rex.WR
  44e52d:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca005a7
  44e534:	and    BYTE PTR [rsi],ch
  44e536:	cs cs pop rbp
  44e539:	or     ah,BYTE PTR [rax]
  44e53b:	and    BYTE PTR [rax],ah
  44e53d:	and    BYTE PTR [rax+riz*1+0x41],bh
  44e541:	rex.R
  44e542:	rex.WRB
  44e543:	rex.WB
  44e544:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca005be
  44e54b:	and    BYTE PTR [rsi],ch
  44e54d:	cs cs pop rbp
  44e550:	or     ah,BYTE PTR [rax]
  44e552:	and    BYTE PTR [rax],ah
  44e554:	and    BYTE PTR [rax+riz*1+0x55],bh
  44e558:	push   rbx
  44e559:	rex.RB push r10
  44e55b:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca005d4
  44e561:	and    BYTE PTR [rsi],ch
  44e563:	cs cs pop rbp
  44e566:	or     ah,BYTE PTR [rax]
  44e568:	and    BYTE PTR [rax],ah
  44e56a:	and    BYTE PTR [rax+riz*1+0x53],bh
  44e56e:	pop    rcx
  44e56f:	push   rbx
  44e570:	rex.WB
  44e571:	and    BYTE PTR [rip+0x73],r12b        # 0x44e5eb
  44e578:	rex.XB push r10
  44e57a:	rex.RB
  44e57b:	push   r12
  44e57d:	and    BYTE PTR [r11+0x20],r11b
  44e581:	rex.WRXB push r10
  44e583:	and    BYTE PTR [rdx+0x45],dl
  44e586:	push   rax
  44e587:	rex.WR
  44e588:	rex.B
  44e589:	rex.XB
  44e58a:	and    BYTE PTR [r13+0x20],r11b
  44e58e:	push   rdx
  44e58f:	push   rbp
  44e590:	rex.WR
  44e591:	and    BYTE PTR [rip+0x53412073],r12b        # 0x5386060b
  44e598:	and    BYTE PTR [rdi+0x4e],cl
  44e59b:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064f014
  44e5a1:	and    BYTE PTR [rax],ah
  44e5a3:	push   rsp
  44e5a4:	rex.WRXB and BYTE PTR [rip+0x205b2073],r12b        # 0x20a0061e
  44e5ab:	push   rdi
  44e5ac:	rex.W
  44e5ad:	rex.RB push r10
  44e5af:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20629
  44e5b6:	and    BYTE PTR [rax],ah
  44e5b8:	and    BYTE PTR [rax],ah
  44e5ba:	rex.R
  44e5bb:	rex.WRXB and BYTE PTR [r11+0x20],r11b
  44e5bf:	rex.B
  44e5c0:	rex.WR push rbx
  44e5c2:	rex.WRXB and BYTE PTR [r8+r12*1+0x49],r15b
  44e5c7:	rex.WRX push rbx
  44e5c9:	push   rsp
  44e5ca:	rex.RB
  44e5cb:	rex.B
  44e5cc:	and    BYTE PTR [rbp+0x20],r11b
  44e5d0:	jnp    0x44e5f2
  44e5d2:	rex.WRX
  44e5d3:	rex.WRXB push r12
  44e5d5:	rex.W
  44e5d6:	rex.WB
  44e5d7:	rex.WRX
  44e5d8:	and    BYTE PTR [r8+r12*1+0x25],r15b
  44e5dd:	jae    0x44e5ff
  44e5df:	jl     0x44e601
  44e5e1:	sub    BYTE PTR [rax],ah
  44e5e3:	and    eax,0x203b2073
  44e5e8:	and    eax,0x2e2e2073
  44e5ed:	and    BYTE PTR cs:[rcx],ch
  44e5f0:	and    BYTE PTR [rbp+0xa],bh
  44e5f3:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204ef06c
  44e5f9:	and    BYTE PTR [rax],ah
  44e5fb:	and    BYTE PTR [rbx+0x45],dl
  44e5fe:	rex.WR
  44e5ff:	rex.RB
  44e600:	rex.XB push r12
  44e602:	and    BYTE PTR [rax+riz*1+0x49],bh
  44e606:	rex.WRX push rbx
  44e608:	rex.RB push r10
  44e60a:	push   rsp
  44e60b:	and    BYTE PTR [rax+riz*1+0x55],bh
  44e60f:	push   rax
  44e610:	rex.R
  44e611:	push   r12
  44e613:	and    BYTE PTR [r8+riz*1+0x44],r15b
  44e618:	rex.RB
  44e619:	rex.WR
  44e61a:	rex.RB push r12
  44e61c:	add    BYTE PTR [r15+0x68],r14b
  44e620:	gs jb  0x44e688
  44e623:	and    BYTE PTR [rbp+0x76],ah
  44e626:	outs   dx,BYTE PTR gs:[rsi]
  44e628:	je     0x44e64a
  44e62a:	movsxd esp,DWORD PTR [rcx+0x6e]
  44e62d:	and    BYTE PTR [rdx+0x65],ah
  44e630:	and    BYTE PTR [rdi+0x6e],ch
  44e633:	and    BYTE PTR gs:[rdi+0x66],ch
  44e637:	cmp    al,BYTE PTR [rax]
  44e639:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44e63c:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6e
  44e645:	add    BYTE PTR [rax],al
  44e647:	add    BYTE PTR [rbx+0x52],al
  44e64a:	rex.RB
  44e64b:	push   r12
  44e64d:	and    BYTE PTR [r11+0x43],r10b
  44e651:	rex.W
  44e652:	rex.RB
  44e653:	rex.WRB
  44e654:	and    BYTE PTR [rip+0x205b2073],spl        # 0x20a006ce
  44e65b:	push   r13
  44e65d:	push   rsp
  44e65e:	rex.W
  44e65f:	rex.WRXB push r10
  44e661:	rex.WB pop r10
  44e663:	push   r12
  44e665:	rex.WB
  44e666:	rex.WRXB
  44e667:	rex.WRX and BYTE PTR [rip+0x205d2073],r12b        # 0x20a206e1
  44e66e:	pop    rbx
  44e66f:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a006e8
  44e675:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e67b:	pop    rbp
  44e67c:	or     al,BYTE PTR [rbx+0x52]
  44e67f:	rex.RB
  44e680:	push   r12
  44e682:	and    BYTE PTR [r11+0x43],r10b
  44e686:	rex.W
  44e687:	rex.RB
  44e688:	rex.WRB
  44e689:	and    BYTE PTR [r9+0x55],al
  44e68d:	push   rsp
  44e68e:	rex.W
  44e68f:	rex.WRXB push r10
  44e691:	rex.WB pop r10
  44e693:	push   r12
  44e695:	rex.WB
  44e696:	rex.WRXB
  44e697:	rex.WRX and BYTE PTR [rip+0x205b2073],r12b        # 0x20a00711
  44e69e:	and    eax,0x205b2073
  44e6a3:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e6a9:	pop    rbp
  44e6aa:	or     al,BYTE PTR [rbx+0x52]
  44e6ad:	rex.RB
  44e6ae:	push   r12
  44e6b0:	and    BYTE PTR [r11+0x43],r10b
  44e6b4:	rex.W
  44e6b5:	rex.RB
  44e6b6:	rex.WRB
  44e6b7:	and    BYTE PTR [r9+0x46],cl
  44e6bb:	and    BYTE PTR [rsi+0x4f],cl
  44e6be:	push   rsp
  44e6bf:	and    BYTE PTR [rbp+0x58],al
  44e6c2:	rex.WB push r11
  44e6c4:	push   rsp
  44e6c5:	push   rbx
  44e6c6:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a0073f
  44e6cc:	push   r13
  44e6ce:	push   rsp
  44e6cf:	rex.W
  44e6d0:	rex.WRXB push r10
  44e6d2:	rex.WB pop r10
  44e6d4:	push   r12
  44e6d6:	rex.WB
  44e6d7:	rex.WRXB
  44e6d8:	rex.WRX and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20752
  44e6df:	rex.XB push r10
  44e6e1:	rex.RB
  44e6e2:	push   r12
  44e6e4:	and    BYTE PTR [r11+0x43],r10b
  44e6e8:	rex.W
  44e6e9:	rex.RB
  44e6ea:	rex.WRB
  44e6eb:	and    BYTE PTR [r9+0x46],cl
  44e6ef:	and    BYTE PTR [rsi+0x4f],cl
  44e6f2:	push   rsp
  44e6f3:	and    BYTE PTR [rbp+0x58],al
  44e6f6:	rex.WB push r11
  44e6f8:	push   rsp
  44e6f9:	push   rbx
  44e6fa:	and    BYTE PTR [rcx+0x55],al
  44e6fd:	push   rsp
  44e6fe:	rex.W
  44e6ff:	rex.WRXB push r10
  44e701:	rex.WB pop r10
  44e703:	push   r12
  44e705:	rex.WB
  44e706:	rex.WRXB
  44e707:	rex.WRX and BYTE PTR [rip+0x63730073],r12b        # 0x63b7e781
  44e70e:	push   0x5f616d65
  44e713:	gs ins BYTE PTR es:[rdi],dx
  44e715:	gs ins DWORD PTR es:[rdi],dx
  44e717:	outs   dx,BYTE PTR gs:[rsi]
  44e719:	je     0x44e71b
  44e71b:	add    BYTE PTR [rax],al
  44e71d:	add    BYTE PTR [rax],al
  44e71f:	add    BYTE PTR [rbx+0x52],al
  44e722:	rex.RB
  44e723:	push   r12
  44e725:	and    BYTE PTR [r11+0x20],r11b
  44e729:	push   rsp
  44e72a:	rex.RB
  44e72b:	rex.WRB push r8
  44e72d:	rex.WRXB push r10
  44e72f:	push   r10
  44e731:	pop    rcx
  44e732:	and    BYTE PTR [rax+riz*1+0x54],bh
  44e736:	rex.RB
  44e737:	rex.WRB push r8
  44e739:	and    BYTE PTR [rbp+0x20],bl
  44e73c:	push   rbx
  44e73d:	rex.RB push r9
  44e73f:	push   rbp
  44e740:	rex.RB
  44e741:	rex.WRX
  44e742:	rex.XB
  44e743:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a007bd
  44e74a:	rex.WB
  44e74b:	rex.WRX
  44e74c:	rex.XB push r10
  44e74e:	rex.RB
  44e74f:	rex.WRB
  44e750:	rex.RB
  44e751:	rex.WRX push rsp
  44e753:	and    BYTE PTR [rbx+0x20],bl
  44e756:	rex.X pop rcx
  44e758:	and    BYTE PTR [rbp+0x20],bl
  44e75b:	and    eax,0xa5d2073
  44e760:	and    BYTE PTR [rax],ah
  44e762:	and    BYTE PTR [rax],ah
  44e764:	pop    rbx
  44e765:	and    BYTE PTR [rbp+0x49],cl
  44e768:	rex.WRX push rsi
  44e76a:	rex.B
  44e76b:	rex.WR push rbp
  44e76d:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c107e7
  44e774:	rex.WRX
  44e775:	rex.WRXB and BYTE PTR [r13+0x49],r9b
  44e779:	rex.WRX push rsi
  44e77b:	rex.B
  44e77c:	rex.WR push rbp
  44e77e:	and    BYTE PTR [r13+0x20],r11b
  44e782:	pop    rbx
  44e783:	and    BYTE PTR [rbp+0x41],cl
  44e786:	pop    rax
  44e787:	push   rsi
  44e788:	rex.B
  44e789:	rex.WR push rbp
  44e78b:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c10805
  44e792:	rex.WRX
  44e793:	rex.WRXB and BYTE PTR [r13+0x41],r9b
  44e797:	pop    rax
  44e798:	push   rsi
  44e799:	rex.B
  44e79a:	rex.WR push rbp
  44e79c:	and    BYTE PTR [r13+0xa],r11b
  44e7a0:	and    BYTE PTR [rax],ah
  44e7a2:	and    BYTE PTR [rax],ah
  44e7a4:	pop    rbx
  44e7a5:	and    BYTE PTR [rbx+0x54],dl
  44e7a8:	push   r10
  44e7aa:	push   rsp
  44e7ab:	and    BYTE PTR [rbx+0x20],bl
  44e7ae:	push   rdi
  44e7af:	rex.WB push r12
  44e7b1:	rex.W and BYTE PTR [rbp+0x20],bl
  44e7b5:	and    eax,0x205d2073
  44e7ba:	pop    rbx
  44e7bb:	and    BYTE PTR [rbx+0x41],al
  44e7be:	rex.XB
  44e7bf:	rex.W
  44e7c0:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a2083a
  44e7c7:	pop    rbx
  44e7c8:	and    BYTE PTR [rbx+0x20],bl
  44e7cb:	rex.WRX
  44e7cc:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  44e7d0:	rex.XB pop r9
  44e7d2:	rex.XB
  44e7d3:	rex.WR
  44e7d4:	and    BYTE PTR [r13+0xa],r11b
  44e7d8:	and    BYTE PTR [rax],ah
  44e7da:	and    BYTE PTR [rax],ah
  44e7dc:	pop    rbx
  44e7dd:	and    BYTE PTR [rdi+0x57],cl
  44e7e0:	rex.WRX
  44e7e1:	rex.RB
  44e7e2:	and    BYTE PTR [rdx+0x59],r8b
  44e7e6:	and    BYTE PTR [rbx+0x20],bh
  44e7e9:	and    eax,0x73252e73
  44e7ee:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44e7f2:	rex.WRXB
  44e7f3:	rex.WRX
  44e7f4:	and    BYTE PTR [r13+0x20],r15b
  44e7f8:	pop    rbp
  44e7f9:	add    BYTE PTR [rbx+0x65],dh
  44e7fc:	jb     0x44e874
  44e7fe:	gs jb  0x44e860
  44e801:	je     0x44e87c
  44e803:	jo     0x44e86a
  44e805:	add    BYTE PTR [rax],al
  44e807:	add    BYTE PTR [rbx+0x52],al
  44e80a:	rex.RB
  44e80b:	push   r12
  44e80d:	and    BYTE PTR [r11+0x45],r10b
  44e811:	push   rdx
  44e812:	push   rsi
  44e813:	rex.RB push r10
  44e815:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a0088e
  44e81b:	push   rsp
  44e81c:	pop    rcx
  44e81d:	push   rax
  44e81e:	and    BYTE PTR [r15],r12b
  44e821:	and    eax,0x5d202773
  44e826:	and    BYTE PTR [rbx+0x20],bl
  44e829:	push   rsi
  44e82a:	rex.RB push r10
  44e82c:	push   rbx
  44e82d:	rex.WB
  44e82e:	rex.WRXB
  44e82f:	rex.WRX and BYTE PTR [rdi],r12b
  44e832:	and    eax,0x5d202773
  44e837:	or     ah,BYTE PTR [rax]
  44e839:	and    BYTE PTR [rax],ah
  44e83b:	and    BYTE PTR [rsi+0x4f],al
  44e83e:	push   rdx
  44e83f:	rex.RB
  44e840:	rex.WB
  44e841:	rex.RXB
  44e842:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  44e847:	and    BYTE PTR [r15+0x52],dl
  44e84b:	push   r8
  44e84d:	push   rax
  44e84e:	rex.RB push r10
  44e850:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064f2c9
  44e856:	and    BYTE PTR [rax],ah
  44e858:	pop    rbx
  44e859:	and    BYTE PTR [rdi+0x50],cl
  44e85c:	push   rsp
  44e85d:	rex.WB
  44e85e:	rex.WRXB
  44e85f:	rex.WRX push rbx
  44e861:	and    BYTE PTR [rax],ch
  44e863:	and    BYTE PTR [rip+0x25272073],ah        # 0x256c08dc
  44e869:	jae    0x44e892
  44e86b:	and    BYTE PTR [rbx+0x2c],bl
  44e86e:	and    BYTE PTR [rsi],ch
  44e870:	cs and BYTE PTR cs:[rbp+0x20],bl
  44e875:	sub    DWORD PTR [rax],esp
  44e877:	pop    rbp
  44e878:	add    BYTE PTR [rsi+0x64],ah
  44e87b:	ja     0x44e8dc
  44e87d:	outs   dx,BYTE PTR ds:[rsi]
  44e87e:	(bad)  
  44e87f:	ins    DWORD PTR es:[rdi],dx
  44e880:	add    BYTE PTR gs:[rbx+0x65],dh
  44e884:	jb     0x44e8fc
  44e886:	gs jb  0x44e8e8
  44e889:	jbe    0x44e8f0
  44e88b:	jb     0x44e900
  44e88d:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  44e894:	add    BYTE PTR [rax],al
  44e896:	add    BYTE PTR [rax],al
  44e898:	rex.XB push r10
  44e89a:	rex.RB
  44e89b:	push   r12
  44e89d:	and    BYTE PTR [r11+0x20],r11b
  44e8a1:	pop    rbx
  44e8a2:	and    BYTE PTR [rdi+0x4c],al
  44e8a5:	rex.WRXB
  44e8a6:	rex.X
  44e8a7:	rex.B
  44e8a8:	rex.WR and BYTE PTR [rax+riz*1+0x4c],r15b
  44e8ad:	rex.WRXB
  44e8ae:	rex.XB
  44e8af:	rex.B
  44e8b0:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44e8b4:	jnp    0x44e8d6
  44e8b6:	push   rsp
  44e8b7:	rex.RB
  44e8b8:	rex.WRB push r8
  44e8ba:	rex.WRXB push r10
  44e8bc:	push   r10
  44e8be:	pop    rcx
  44e8bf:	and    BYTE PTR [rax+riz*1+0x54],bh
  44e8c3:	rex.RB
  44e8c4:	rex.WRB push r8
  44e8c6:	and    BYTE PTR [rbp+0x20],bh
  44e8c9:	jl     0x44e8eb
  44e8cb:	push   rbp
  44e8cc:	rex.WRX
  44e8cd:	rex.WR
  44e8ce:	rex.WRXB
  44e8cf:	rex.RXB
  44e8d0:	rex.RXB
  44e8d1:	rex.RB
  44e8d2:	and    BYTE PTR [rbp+0x20],r11b
  44e8d6:	push   rsp
  44e8d7:	rex.B
  44e8d8:	rex.X
  44e8d9:	rex.WR
  44e8da:	and    BYTE PTR [r11+0x20],r11b
  44e8de:	rex.WB
  44e8df:	rex.RX and BYTE PTR [rsi+0x4f],r9b
  44e8e3:	push   rsp
  44e8e4:	and    BYTE PTR [rbp+0x58],al
  44e8e7:	rex.WB push r11
  44e8e9:	push   rsp
  44e8ea:	push   rbx
  44e8eb:	and    BYTE PTR [rbp+0x20],bl
  44e8ee:	and    eax,0x20282073
  44e8f3:	pop    rbx
  44e8f4:	or     ah,BYTE PTR [rax]
  44e8f6:	and    BYTE PTR [rbx+0x20],bh
  44e8f9:	and    eax,0x73252073
  44e8fe:	and    BYTE PTR [rbx+0x20],bl
  44e901:	rex.XB
  44e902:	rex.WRXB
  44e903:	rex.WR
  44e904:	rex.WR
  44e905:	push   r12
  44e907:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20981
  44e90e:	pop    rbx
  44e90f:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a00988
  44e915:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e91b:	pop    rbp
  44e91c:	or     ah,BYTE PTR [rax]
  44e91e:	and    BYTE PTR [rax],ah
  44e920:	and    BYTE PTR [rax+riz*1+0x25],bh
  44e924:	jae    0x44e930
  44e926:	and    BYTE PTR [rax],ah
  44e928:	and    BYTE PTR [rax],ah
  44e92a:	jl     0x44e94c
  44e92c:	rex.WR
  44e92d:	rex.WB
  44e92e:	rex.WXB
  44e92f:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a009a9
  44e936:	and    eax,0x2e2e2073
  44e93b:	and    BYTE PTR cs:[rbp+0x20],bl
  44e93f:	jge    0x44e94b
  44e941:	and    BYTE PTR [rax],ah
  44e943:	and    BYTE PTR [rax],ah
  44e945:	pop    rbx
  44e946:	sub    al,0x20
  44e948:	cs cs and BYTE PTR cs:[rbp+0xa],bl
  44e94e:	pop    rbp
  44e94f:	and    BYTE PTR [rcx],ch
  44e951:	or     bl,BYTE PTR [rbx+0x20]
  44e954:	rex.WB
  44e955:	rex.WRX
  44e956:	rex.W
  44e957:	rex.RB push r10
  44e959:	rex.WB push r12
  44e95b:	push   rbx
  44e95c:	and    BYTE PTR [rax],ch
  44e95e:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca009d7
  44e964:	and    BYTE PTR [rsi],ch
  44e966:	cs and BYTE PTR cs:[rbp+0x20],bl
  44e96b:	sub    DWORD PTR [rax],esp
  44e96d:	pop    rbp
  44e96e:	or     bl,BYTE PTR [rbx+0x20]
  44e971:	push   rdi
  44e972:	rex.WB push r12
  44e974:	rex.W and BYTE PTR [rax],bpl
  44e977:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da009f0
  44e97d:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b6546f6
  44e983:	sub    al,0x20
  44e985:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44e98b:	sub    DWORD PTR [rax],esp
  44e98d:	jl     0x44e9af
  44e98f:	push   rdi
  44e990:	rex.WB push r12
  44e992:	rex.W and BYTE PTR [rdi+0x49],cl
  44e996:	rex.R push rbx
  44e998:	and    BYTE PTR [rax+riz*1+0x57],bh
  44e99c:	rex.WB push r12
  44e99e:	rex.W
  44e99f:	rex.WRXB push r13
  44e9a1:	push   rsp
  44e9a2:	and    BYTE PTR [rdi+0x49],cl
  44e9a5:	rex.R push rbx
  44e9a7:	and    BYTE PTR [rbp+0xa],bl
  44e9aa:	pop    rbx
  44e9ab:	and    BYTE PTR [rdi+0x4e],cl
  44e9ae:	and    BYTE PTR [rbx+0x4f],al
  44e9b1:	rex.WRB
  44e9b2:	rex.WRB
  44e9b3:	rex.WB push r12
  44e9b5:	and    BYTE PTR [rbx+0x20],bh
  44e9b8:	push   rax
  44e9b9:	push   rdx
  44e9ba:	rex.RB push r11
  44e9bc:	rex.RB push r10
  44e9be:	push   rsi
  44e9bf:	and    BYTE PTR [r10+0x4f],r10b
  44e9c3:	push   rdi
  44e9c4:	push   rbx
  44e9c5:	and    BYTE PTR [rax+riz*1+0x44],bh
  44e9c9:	rex.RB
  44e9ca:	rex.WR
  44e9cb:	rex.RB push r12
  44e9cd:	and    BYTE PTR [r10+0x4f],r10b
  44e9d1:	push   rdi
  44e9d2:	push   rbx
  44e9d3:	and    BYTE PTR [rax+riz*1+0x44],bh
  44e9d7:	push   rdx
  44e9d8:	rex.WRXB push r8
  44e9da:	and    BYTE PTR [rbp+0x20],bh
  44e9dd:	pop    rbp
  44e9de:	or     bl,BYTE PTR [rbx+0x20]
  44e9e1:	push   rsp
  44e9e2:	rex.B
  44e9e3:	rex.X
  44e9e4:	rex.WR
  44e9e5:	rex.RB push r11
  44e9e7:	push   rax
  44e9e8:	rex.B
  44e9e9:	rex.XB
  44e9ea:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20a64
  44e9f1:	or     al,BYTE PTR [rbx+0x52]
  44e9f4:	rex.RB
  44e9f5:	push   r12
  44e9f7:	and    BYTE PTR [r11+0x20],r11b
  44e9fb:	pop    rbx
  44e9fc:	and    BYTE PTR [rdi+0x4c],al
  44e9ff:	rex.WRXB
  44ea00:	rex.X
  44ea01:	rex.B
  44ea02:	rex.WR and BYTE PTR [rax+riz*1+0x4c],r15b
  44ea07:	rex.WRXB
  44ea08:	rex.XB
  44ea09:	rex.B
  44ea0a:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44ea0e:	jnp    0x44ea30
  44ea10:	push   rsp
  44ea11:	rex.RB
  44ea12:	rex.WRB push r8
  44ea14:	rex.WRXB push r10
  44ea16:	push   r10
  44ea18:	pop    rcx
  44ea19:	and    BYTE PTR [rax+riz*1+0x54],bh
  44ea1d:	rex.RB
  44ea1e:	rex.WRB push r8
  44ea20:	and    BYTE PTR [rbp+0x20],bh
  44ea23:	jl     0x44ea45
  44ea25:	push   rbp
  44ea26:	rex.WRX
  44ea27:	rex.WR
  44ea28:	rex.WRXB
  44ea29:	rex.RXB
  44ea2a:	rex.RXB
  44ea2b:	rex.RB
  44ea2c:	and    BYTE PTR [rbp+0x20],r11b
  44ea30:	push   rsp
  44ea31:	rex.B
  44ea32:	rex.X
  44ea33:	rex.WR
  44ea34:	and    BYTE PTR [r11+0x20],r11b
  44ea38:	rex.WB
  44ea39:	rex.RX and BYTE PTR [rsi+0x4f],r9b
  44ea3d:	push   rsp
  44ea3e:	and    BYTE PTR [rbp+0x58],al
  44ea41:	rex.WB push r11
  44ea43:	push   rsp
  44ea44:	push   rbx
  44ea45:	and    BYTE PTR [rbp+0x20],bl
  44ea48:	and    eax,0x20200a73
  44ea4d:	and    BYTE PTR [rax],ah
  44ea4f:	rex.WRXB
  44ea50:	rex.RX and BYTE PTR [rip+0x205b2073],r12b        # 0x20a00aca
  44ea57:	sub    BYTE PTR [rdx],cl
  44ea59:	and    BYTE PTR [rax],ah
  44ea5b:	jnp    0x44ea7d
  44ea5d:	and    eax,0x49572073
  44ea62:	push   rsp
  44ea63:	rex.W and BYTE PTR [rdi+0x50],cl
  44ea67:	push   rsp
  44ea68:	rex.WB
  44ea69:	rex.WRXB
  44ea6a:	rex.WRX push rbx
  44ea6c:	and    BYTE PTR [rbx+0x20],bl
  44ea6f:	and    eax,0x205b2073
  44ea74:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44ea7a:	pop    rbp
  44ea7b:	or     ah,BYTE PTR [rax]
  44ea7d:	and    BYTE PTR [rax],ah
  44ea7f:	and    BYTE PTR [rax+riz*1+0x25],bh
  44ea83:	jae    0x44eaa5
  44ea85:	jge    0x44ea91
  44ea87:	and    BYTE PTR [rax],ah
  44ea89:	and    BYTE PTR [rax],ah
  44ea8b:	pop    rbx
  44ea8c:	sub    al,0x20
  44ea8e:	cs cs and BYTE PTR cs:[rbp+0xa],bl
  44ea94:	sub    DWORD PTR [rax],esp
  44ea96:	pop    rbp
  44ea97:	or     bl,BYTE PTR [rbx+0x20]
  44ea9a:	push   rdi
  44ea9b:	rex.WB push r12
  44ea9d:	rex.W and BYTE PTR [rax],bpl
  44eaa0:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da00b19
  44eaa6:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b65481f
  44eaac:	sub    al,0x20
  44eaae:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44eab4:	sub    DWORD PTR [rax],esp
  44eab6:	jl     0x44ead8
  44eab8:	push   rdi
  44eab9:	rex.WB push r12
  44eabb:	rex.W and BYTE PTR [rdi+0x49],cl
  44eabf:	rex.R push rbx
  44eac1:	and    BYTE PTR [rax+riz*1+0x57],bh
  44eac5:	rex.WB push r12
  44eac7:	rex.W
  44eac8:	rex.WRXB push r13
  44eaca:	push   rsp
  44eacb:	and    BYTE PTR [rdi+0x49],cl
  44eace:	rex.R push rbx
  44ead0:	and    BYTE PTR [rbp+0xa],bl
  44ead3:	pop    rbx
  44ead4:	and    BYTE PTR [rdi+0x4e],cl
  44ead7:	and    BYTE PTR [rbx+0x4f],al
  44eada:	rex.WRB
  44eadb:	rex.WRB
  44eadc:	rex.WB push r12
  44eade:	and    BYTE PTR [rbx+0x20],bh
  44eae1:	push   rax
  44eae2:	push   rdx
  44eae3:	rex.RB push r11
  44eae5:	rex.RB push r10
  44eae7:	push   rsi
  44eae8:	and    BYTE PTR [r10+0x4f],r10b
  44eaec:	push   rdi
  44eaed:	push   rbx
  44eaee:	and    BYTE PTR [rax+riz*1+0x44],bh
  44eaf2:	rex.RB
  44eaf3:	rex.WR
  44eaf4:	rex.RB push r12
  44eaf6:	and    BYTE PTR [r10+0x4f],r10b
  44eafa:	push   rdi
  44eafb:	push   rbx
  44eafc:	and    BYTE PTR [rax+riz*1+0x44],bh
  44eb00:	push   rdx
  44eb01:	rex.WRXB push r8
  44eb03:	and    BYTE PTR [rbp+0x20],bh
  44eb06:	pop    rbp
  44eb07:	or     bl,BYTE PTR [rbx+0x20]
  44eb0a:	push   rsp
  44eb0b:	rex.B
  44eb0c:	rex.X
  44eb0d:	rex.WR
  44eb0e:	rex.RB push r11
  44eb10:	push   rax
  44eb11:	rex.B
  44eb12:	rex.XB
  44eb13:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20b8d
  44eb1a:	or     ah,BYTE PTR [rip+0x5b0a0a73]        # 0x5b4ef593
  44eb20:	and    BYTE PTR [rbx+0x4f],al
  44eb23:	rex.WRX push rbx
  44eb25:	push   rsp
  44eb26:	push   rdx
  44eb27:	rex.B
  44eb28:	rex.WB
  44eb29:	rex.WRX push rsp
  44eb2b:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa20ba4
  44eb31:	jnp    0x44eb53
  44eb33:	rex.WRX
  44eb34:	rex.WRXB push r12
  44eb36:	and    BYTE PTR [rsi+0x55],cl
  44eb39:	rex.WR
  44eb3a:	rex.WR and BYTE PTR [rdx+rcx*1+0x20],r15b
  44eb3f:	and    BYTE PTR [rsi+0x55],cl
  44eb42:	rex.WR
  44eb43:	rex.WR and BYTE PTR [rdx+rcx*1+0x20],r15b
  44eb48:	and    BYTE PTR [rbx+0x48],al
  44eb4b:	rex.RB
  44eb4c:	rex.XB
  44eb4d:	rex.WXB and BYTE PTR [r8],bpl
  44eb50:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e0bc9
  44eb56:	pop    rbx
  44eb57:	and    BYTE PTR [rsi+0x4f],cl
  44eb5a:	and    BYTE PTR [rcx+0x4e],cl
  44eb5d:	rex.W
  44eb5e:	rex.RB push r10
  44eb60:	rex.WB push r12
  44eb62:	and    BYTE PTR [rbp+0x20],bl
  44eb65:	jl     0x44eb71
  44eb67:	and    BYTE PTR [rax],ah
  44eb69:	rex.R
  44eb6a:	rex.RB
  44eb6b:	rex.RX
  44eb6c:	push   r13
  44eb6e:	rex.WR push rsp
  44eb70:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac10be9
  44eb76:	and    BYTE PTR [rax],ah
  44eb78:	push   rbp
  44eb79:	rex.WRX
  44eb7a:	rex.WB push r9
  44eb7c:	push   rbp
  44eb7d:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac10bf7
  44eb84:	and    BYTE PTR [rax],ah
  44eb86:	push   rax
  44eb87:	push   rdx
  44eb88:	rex.WB
  44eb89:	rex.WRB
  44eb8a:	push   r10
  44eb8c:	pop    rcx
  44eb8d:	and    BYTE PTR [rbx+0x45],cl
  44eb90:	pop    rcx
  44eb91:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac10c0a
  44eb97:	and    BYTE PTR [rax],ah
  44eb99:	push   rdx
  44eb9a:	rex.RB
  44eb9b:	rex.RX
  44eb9c:	rex.RB push r10
  44eb9e:	rex.RB
  44eb9f:	rex.WRX
  44eba0:	rex.XB
  44eba1:	rex.RB push r11
  44eba3:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a00c1c
  44eba9:	sub    BYTE PTR [rax],ah
  44ebab:	and    eax,0x20292073
  44ebb0:	pop    rbp
  44ebb1:	and    BYTE PTR [rbx+0x20],bl
  44ebb4:	rex.WRB
  44ebb5:	push   r12
  44ebb7:	rex.XB
  44ebb8:	rex.W and BYTE PTR [rsi+0x55],al
  44ebbc:	rex.WR
  44ebbd:	rex.WR and BYTE PTR [rax+riz*1+0x4d],r15b
  44ebc2:	push   r12
  44ebc4:	rex.XB
  44ebc5:	rex.W and BYTE PTR [rax+0x41],dl
  44ebc9:	push   rdx
  44ebca:	push   rsp
  44ebcb:	rex.WB
  44ebcc:	rex.B
  44ebcd:	rex.WR and BYTE PTR [rax+riz*1+0x4d],r15b
  44ebd2:	push   r12
  44ebd4:	rex.XB
  44ebd5:	rex.W and BYTE PTR [rbx+0x49],dl
  44ebd9:	rex.WRB push r8
  44ebdb:	rex.WR
  44ebdc:	and    BYTE PTR [r13+0xa],r11b
  44ebe0:	and    BYTE PTR [rax],ah
  44ebe2:	and    BYTE PTR [rax],ah
  44ebe4:	pop    rbx
  44ebe5:	and    BYTE PTR [rdi+0x4e],cl
  44ebe8:	and    BYTE PTR [rbp+rax*2+0x4c],al
  44ebec:	rex.RB push r12
  44ebee:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20c68
  44ebf5:	pop    rbx
  44ebf6:	and    BYTE PTR [rdi+0x4e],cl
  44ebf9:	and    BYTE PTR [rbp+0x50],dl
  44ebfc:	rex.R
  44ebfd:	push   r12
  44ebff:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20c79
  44ec06:	jge    0x44ec12
  44ec08:	pop    rbx
  44ec09:	and    BYTE PTR [rbp+rax*2+0x46],al
  44ec0d:	rex.RB push r10
  44ec0f:	push   rdx
  44ec10:	rex.B
  44ec11:	rex.X
  44ec12:	rex.WR
  44ec13:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44ec18:	rex.WRXB push r12
  44ec1a:	and    BYTE PTR [rbp+rax*2+0x46],al
  44ec1e:	rex.RB push r10
  44ec20:	push   rdx
  44ec21:	rex.B
  44ec22:	rex.X
  44ec23:	rex.WR
  44ec24:	and    BYTE PTR [r13+0x20],r11b
  44ec28:	pop    rbx
  44ec29:	and    BYTE PTR [rcx+0x4e],cl
  44ec2c:	rex.WB push r12
  44ec2e:	rex.WB
  44ec2f:	rex.B
  44ec30:	rex.WR
  44ec31:	rex.WR pop rcx
  44ec33:	and    BYTE PTR [rbp+rax*2+0x46],al
  44ec37:	rex.RB push r10
  44ec39:	push   rdx
  44ec3a:	rex.RB
  44ec3b:	and    BYTE PTR [rax+riz*1+0x49],r15b
  44ec40:	rex.WRX
  44ec41:	rex.WB push r12
  44ec43:	rex.WB
  44ec44:	rex.B
  44ec45:	rex.WR
  44ec46:	rex.WR pop rcx
  44ec48:	and    BYTE PTR [rcx+0x4d],cl
  44ec4b:	rex.WRB
  44ec4c:	rex.RB
  44ec4d:	rex.R
  44ec4e:	rex.WB
  44ec4f:	push   r12
  44ec51:	and    BYTE PTR [r13+0xa],r11b
  44ec55:	or     ah,BYTE PTR [rip+0x5b0a0a73]        # 0x5b4ef6ce
  44ec5b:	and    BYTE PTR [rbx+0x4f],al
  44ec5e:	rex.WRX push rbx
  44ec60:	push   rsp
  44ec61:	push   rdx
  44ec62:	rex.B
  44ec63:	rex.WB
  44ec64:	rex.WRX push rsp
  44ec66:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa20cdf
  44ec6c:	jnp    0x44ec8e
  44ec6e:	rex.XB
  44ec6f:	rex.W
  44ec70:	rex.RB
  44ec71:	rex.XB
  44ec72:	rex.WXB and BYTE PTR [r8],bpl
  44ec75:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e0cee
  44ec7b:	pop    rbx
  44ec7c:	and    BYTE PTR [rsi+0x4f],cl
  44ec7f:	and    BYTE PTR [rcx+0x4e],cl
  44ec82:	rex.W
  44ec83:	rex.RB push r10
  44ec85:	rex.WB push r12
  44ec87:	and    BYTE PTR [rbp+0x20],bl
  44ec8a:	jl     0x44ec96
  44ec8c:	and    BYTE PTR [rax],ah
  44ec8e:	push   rbp
  44ec8f:	rex.WRX
  44ec90:	rex.WB push r9
  44ec92:	push   rbp
  44ec93:	and    BYTE PTR [r8],r13b
  44ec96:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca00d0f
  44ec9c:	and    BYTE PTR [rsi],ch
  44ec9e:	cs and BYTE PTR cs:[rbp+0x20],bl
  44eca3:	sub    DWORD PTR [rax],esp
  44eca5:	and    eax,0xa7c2073
  44ecaa:	and    BYTE PTR [rax],ah
  44ecac:	push   rax
  44ecad:	push   rdx
  44ecae:	rex.WB
  44ecaf:	rex.WRB
  44ecb0:	push   r10
  44ecb2:	pop    rcx
  44ecb3:	and    BYTE PTR [rbx+0x45],cl
  44ecb6:	pop    rcx
  44ecb7:	and    BYTE PTR [rax],ch
  44ecb9:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca00d32
  44ecbf:	and    BYTE PTR [rsi],ch
  44ecc1:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ecc6:	sub    DWORD PTR [rax],esp
  44ecc8:	and    eax,0xa7c2073
  44eccd:	and    BYTE PTR [rax],ah
  44eccf:	rex.RB pop r8
  44ecd1:	rex.XB
  44ecd2:	rex.WR push rbp
  44ecd4:	rex.R
  44ecd5:	and    BYTE PTR [r11+0x20],r11b
  44ecd9:	push   rbp
  44ecda:	push   rbx
  44ecdb:	rex.WB
  44ecdc:	rex.WRX
  44ecdd:	rex.RXB and BYTE PTR [rip+0x205d2073],r12b        # 0x20a20d57
  44ece4:	sub    BYTE PTR [rax],ah
  44ece6:	and    eax,0x49572073
  44eceb:	push   rsp
  44ecec:	rex.W and BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca00d66
  44ecf3:	and    BYTE PTR [rsi],ch
  44ecf5:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ecfa:	sub    DWORD PTR [rax],esp
  44ecfc:	and    eax,0x205b2073
  44ed01:	push   rdi
  44ed02:	rex.W
  44ed03:	rex.RB push r10
  44ed05:	and    BYTE PTR [r8],r13b
  44ed08:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e0d81
  44ed0e:	pop    rbp
  44ed0f:	and    BYTE PTR [rdx+rcx*1+0x20],bh
  44ed13:	and    BYTE PTR [rsi+0x4f],al
  44ed16:	push   rdx
  44ed17:	rex.RB
  44ed18:	rex.WB
  44ed19:	rex.RXB
  44ed1a:	rex.WRX and BYTE PTR [rbx+0x45],r9b
  44ed1e:	pop    rcx
  44ed1f:	and    BYTE PTR [rax],ch
  44ed21:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca00d9a
  44ed27:	and    BYTE PTR [rsi],ch
  44ed29:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ed2e:	sub    DWORD PTR [rax],esp
  44ed30:	push   rdx
  44ed31:	rex.RB
  44ed32:	rex.RX
  44ed33:	rex.RB push r10
  44ed35:	rex.RB
  44ed36:	rex.WRX
  44ed37:	rex.XB
  44ed38:	rex.RB push r11
  44ed3a:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a00db3
  44ed40:	sub    BYTE PTR [rax],ah
  44ed42:	and    eax,0x2c5b2073
  44ed47:	and    BYTE PTR [rsi],ch
  44ed49:	cs and BYTE PTR cs:[rbp+0x20],bl
  44ed4e:	sub    DWORD PTR [rax],esp
  44ed50:	pop    rbp
  44ed51:	or     ah,BYTE PTR [rax]
  44ed53:	and    BYTE PTR [rax],ah
  44ed55:	and    BYTE PTR [rbx+0x20],bl
  44ed58:	rex.WRB
  44ed59:	push   r12
  44ed5b:	rex.XB
  44ed5c:	rex.W and BYTE PTR [rsi+0x55],al
  44ed60:	rex.WR
  44ed61:	rex.WR and BYTE PTR [rax+riz*1+0x4d],r15b
  44ed66:	push   r12
  44ed68:	rex.XB
  44ed69:	rex.W and BYTE PTR [rax+0x41],dl
  44ed6d:	push   rdx
  44ed6e:	push   rsp
  44ed6f:	rex.WB
  44ed70:	rex.B
  44ed71:	rex.WR and BYTE PTR [rax+riz*1+0x4d],r15b
  44ed76:	push   r12
  44ed78:	rex.XB
  44ed79:	rex.W and BYTE PTR [rbx+0x49],dl
  44ed7d:	rex.WRB push r8
  44ed7f:	rex.WR
  44ed80:	and    BYTE PTR [r13+0x20],r11b
  44ed84:	pop    rbx
  44ed85:	and    BYTE PTR [rdi+0x4e],cl
  44ed88:	and    BYTE PTR [rbp+rax*2+0x4c],al
  44ed8c:	rex.RB push r12
  44ed8e:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20e08
  44ed95:	pop    rbx
  44ed96:	and    BYTE PTR [rdi+0x4e],cl
  44ed99:	and    BYTE PTR [rbp+0x50],dl
  44ed9c:	rex.R
  44ed9d:	push   r12
  44ed9f:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a20e19
  44eda6:	jge    0x44edb2
  44eda8:	pop    rbx
  44eda9:	and    BYTE PTR [rbp+rax*2+0x46],al
  44edad:	rex.RB push r10
  44edaf:	push   rdx
  44edb0:	rex.B
  44edb1:	rex.X
  44edb2:	rex.WR
  44edb3:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44edb8:	rex.WRXB push r12
  44edba:	and    BYTE PTR [rbp+rax*2+0x46],al
  44edbe:	rex.RB push r10
  44edc0:	push   rdx
  44edc1:	rex.B
  44edc2:	rex.X
  44edc3:	rex.WR
  44edc4:	and    BYTE PTR [r13+0x20],r11b
  44edc8:	pop    rbx
  44edc9:	and    BYTE PTR [rcx+0x4e],cl
  44edcc:	rex.WB push r12
  44edce:	rex.WB
  44edcf:	rex.B
  44edd0:	rex.WR
  44edd1:	rex.WR pop rcx
  44edd3:	and    BYTE PTR [rbp+rax*2+0x46],al
  44edd7:	rex.RB push r10
  44edd9:	push   rdx
  44edda:	rex.RB
  44eddb:	and    BYTE PTR [rax+riz*1+0x49],r15b
  44ede0:	rex.WRX
  44ede1:	rex.WB push r12
  44ede3:	rex.WB
  44ede4:	rex.B
  44ede5:	rex.WR
  44ede6:	rex.WR pop rcx
  44ede8:	and    BYTE PTR [rcx+0x4d],cl
  44edeb:	rex.WRB
  44edec:	rex.RB
  44eded:	rex.R
  44edee:	rex.WB
  44edef:	push   r12
  44edf1:	and    BYTE PTR [r13+0xa],r11b
  44edf5:	or     ah,BYTE PTR [rip+0x7b0a0a73]        # 0x7b4ef86e
  44edfb:	and    BYTE PTR [rcx+0x4e],cl
  44edfe:	rex.XB
  44edff:	rex.WR push rbp
  44ee01:	rex.R
  44ee02:	rex.WB
  44ee03:	rex.WRX
  44ee04:	and    BYTE PTR [r8+r12*1+0x45],r15b
  44ee09:	pop    rax
  44ee0a:	rex.XB
  44ee0b:	rex.WR push rbp
  44ee0d:	rex.R
  44ee0e:	rex.WB
  44ee0f:	rex.WRX
  44ee10:	rex.RXB and BYTE PTR [r13+0x20],r15b
  44ee14:	jnp    0x44ee36
  44ee16:	rex.R
  44ee17:	rex.RB
  44ee18:	rex.RX
  44ee19:	push   r13
  44ee1b:	rex.WR push rsp
  44ee1d:	push   rbx
  44ee1e:	and    BYTE PTR [rax+riz*1+0x43],bh
  44ee22:	rex.WRXB
  44ee23:	rex.WRX push rbx
  44ee25:	push   rsp
  44ee26:	push   rdx
  44ee27:	rex.B
  44ee28:	rex.WB
  44ee29:	rex.WRX push rsp
  44ee2b:	push   rbx
  44ee2c:	and    BYTE PTR [rax+riz*1+0x49],bh
  44ee30:	rex.WRX
  44ee31:	rex.R
  44ee32:	rex.RB pop r8
  44ee34:	rex.RB push r11
  44ee36:	and    BYTE PTR [rax+riz*1+0x53],bh
  44ee3a:	push   rsp
  44ee3b:	rex.WRXB push r10
  44ee3d:	rex.B
  44ee3e:	rex.RXB
  44ee3f:	and    BYTE PTR [r8+riz*1+0x43],r15b
  44ee44:	rex.WRXB
  44ee45:	rex.WRB
  44ee46:	rex.WRB
  44ee47:	rex.RB
  44ee48:	rex.WRX push rsp
  44ee4a:	push   rbx
  44ee4b:	and    BYTE PTR [rax+riz*1+0x41],bh
  44ee4f:	rex.WR
  44ee50:	rex.WR and BYTE PTR [rbp+0xa],r15b
  44ee54:	or     ah,BYTE PTR [rip+0x5b0a0a73]        # 0x5b4ef8cd
  44ee5a:	and    BYTE PTR [rdi+0x49],dl
  44ee5d:	push   rsp
  44ee5e:	rex.W and BYTE PTR [rax],bpl
  44ee61:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da00eda
  44ee67:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b654be0
  44ee6d:	sub    al,0x20
  44ee6f:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44ee75:	sub    DWORD PTR [rax],esp
  44ee77:	pop    rbp
  44ee78:	or     bl,BYTE PTR [rbx+0x20]
  44ee7b:	push   rbp
  44ee7c:	push   rbx
  44ee7d:	rex.WB
  44ee7e:	rex.WRX
  44ee7f:	rex.RXB and BYTE PTR [r9+0x4e],r9b
  44ee83:	rex.R
  44ee84:	rex.RB pop r8
  44ee86:	and    BYTE PTR [rcx+rax*2+0x42],dl
  44ee8a:	rex.WR
  44ee8b:	rex.RB push r11
  44ee8d:	push   rax
  44ee8e:	rex.B
  44ee8f:	rex.XB
  44ee90:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa20f0a
  44ee97:	or     ah,BYTE PTR [rip+0x7b0a0a73]        # 0x7b4ef910
  44ee9d:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c10f16
  44eea3:	sub    BYTE PTR [rax],ah
  44eea5:	and    eax,0x20292073
  44eeaa:	jge    0x44eecc
  44eeac:	pop    rbx
  44eead:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a20f26
  44eeb3:	pop    rbx
  44eeb4:	and    BYTE PTR [rcx+0x53],al
  44eeb7:	and    BYTE PTR [r8+r12*1+0x44],dil
  44eebc:	rex.RB push r11
  44eebe:	rex.XB and BYTE PTR [r13+0x20],bl
  44eec2:	pop    rbx
  44eec3:	and    BYTE PTR [rsi+0x55],cl
  44eec6:	rex.WR
  44eec7:	rex.WR push rbx
  44eec9:	and    BYTE PTR [rbx+0x20],bh
  44eecc:	rex.RX
  44eecd:	rex.WB push r10
  44eecf:	push   rbx
  44eed0:	push   rsp
  44eed1:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44eed5:	push   r11
  44eed7:	push   rsp
  44eed8:	and    BYTE PTR [rbp+0x20],bh
  44eedb:	pop    rbp
  44eedc:	add    BYTE PTR [rax],al
  44eede:	add    BYTE PTR [rax],al
  44eee0:	gs js  0x44ef46
  44eee3:	ins    BYTE PTR es:[rdi],dx
  44eee4:	jne    0x44ef4a
  44eee6:	gs pop rdi
  44eee8:	gs ins BYTE PTR es:[rdi],dx
  44eeea:	gs ins DWORD PTR es:[rdi],dx
  44eeec:	outs   dx,BYTE PTR gs:[rsi]
  44eeee:	je     0x44ef10
  44eef0:	imul   ebp,DWORD PTR [rsi+0x20],0x45206e61
  44eef7:	pop    rax
  44eef8:	rex.XB
  44eef9:	rex.WR push rbp
  44eefb:	rex.R
  44eefc:	and    BYTE PTR [r11+0x6f],r12b
  44ef00:	outs   dx,BYTE PTR ds:[rsi]
  44ef01:	jae    0x44ef77
  44ef03:	jb     0x44ef66
  44ef05:	imul   ebp,DWORD PTR [rsi+0x74],0x3a736920
  44ef0c:	add    BYTE PTR [rax],al
  44ef0e:	add    BYTE PTR [rax],al
  44ef10:	imul   ebp,DWORD PTR [rsi+0x64],0x705f7865
  44ef17:	(bad)  
  44ef18:	jb     0x44ef7b
  44ef1a:	ins    DWORD PTR es:[rdi],dx
  44ef1b:	gs je  0x44ef83
  44ef1e:	jb     0x44ef93
  44ef20:	and    BYTE PTR [rcx+0x6e],ch
  44ef23:	and    BYTE PTR [rbp+0x4e],dl
  44ef26:	rex.WB push r9
  44ef28:	push   rbp
  44ef29:	rex.RB sub al,0x20
  44ef2c:	push   rax
  44ef2d:	push   rdx
  44ef2e:	rex.WB
  44ef2f:	rex.WRB
  44ef30:	push   r10
  44ef32:	pop    rcx
  44ef33:	and    BYTE PTR [rbx+0x45],cl
  44ef36:	pop    rcx
  44ef37:	sub    al,0x20
  44ef39:	(bad)  
  44ef3a:	outs   dx,BYTE PTR ds:[rsi]
  44ef3b:	and    BYTE PTR fs:[rbp+0x58],al
  44ef3f:	rex.XB
  44ef40:	rex.WR push rbp
  44ef42:	rex.R
  44ef43:	and    BYTE PTR [r11+0x6f],r12b
  44ef47:	outs   dx,BYTE PTR ds:[rsi]
  44ef48:	jae    0x44efbe
  44ef4a:	jb     0x44efad
  44ef4c:	imul   ebp,DWORD PTR [rsi+0x74],0x72612073
  44ef53:	cmp    al,BYTE PTR gs:[rax]
  44ef56:	(bad)  
  44ef57:	outs   dx,BYTE PTR ds:[rsi]
  44ef58:	and    BYTE PTR fs:[rcx+rbp*2+0x6b],ch
  44ef5d:	gs pop rdi
  44ef5f:	outs   dx,DWORD PTR ds:[rsi]
  44ef60:	jo     0x44efd6
  44ef62:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a736920
  44ef69:	add    BYTE PTR [rdx+0x65],dh
  44ef6c:	movsxd bp,DWORD PTR [rdi+0x6c]
  44ef70:	jne    0x44efdf
  44ef72:	outs   dx,BYTE PTR ds:[rsi]
  44ef73:	add    BYTE PTR [rdx+0x65],dh
  44ef76:	data16 je 0x44efda
  44ef79:	(bad)  
  44ef7a:	ins    BYTE PTR es:[rdi],dx
  44ef7b:	add    BYTE PTR gs:[rcx+0x6e],ch
  44ef7f:	fs gs js 0x44efe2
  44ef83:	jo     0x44efe6
  44ef85:	jb     0x44efe8
  44ef87:	ins    DWORD PTR es:[rdi],dx
  44ef88:	gs je  0x44eff0
  44ef8b:	jb     0x44f000
  44ef8d:	add    BYTE PTR [rdi+0x70],ch
  44ef90:	gs jb  0x44eff4
  44ef93:	je     0x44f004
  44ef95:	jb     0x44ef97
  44ef97:	gs js  0x44effd
  44ef9a:	ins    BYTE PTR es:[rdi],dx
  44ef9b:	jne    0x44f001
  44ef9d:	gs pop rdi
  44ef9f:	gs ins BYTE PTR es:[rdi],dx
  44efa1:	gs ins DWORD PTR es:[rdi],dx
  44efa3:	outs   dx,BYTE PTR gs:[rsi]
  44efa5:	je     0x44efa7
  44efa7:	(bad)  
  44efa8:	outs   dx,BYTE PTR ds:[rsi]
  44efa9:	and    BYTE PTR fs:[rcx+riz*2+0x62],dh
  44efae:	ins    BYTE PTR es:[rdi],dx
  44efaf:	gs pop rdi
  44efb1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44efb4:	jae    0x44f02a
  44efb6:	jb     0x44f019
  44efb8:	imul   ebp,DWORD PTR [rsi+0x74],0x3a736920
  44efbf:	add    BYTE PTR [rcx+rbp*2+0x6b],ch
  44efc3:	gs pop rdi
  44efc5:	outs   dx,DWORD PTR ds:[rsi]
  44efc6:	jo     0x44f03c
  44efc8:	imul   ebp,DWORD PTR [rdi+0x6e],0x756f7300
  44efcf:	jb     0x44f034
  44efd1:	gs pop rdi
  44efd3:	je     0x44f036
  44efd5:	(bad)  
  44efd6:	ins    BYTE PTR es:[rdi],dx
  44efd7:	add    BYTE PTR gs:[rax],al
  44efda:	add    BYTE PTR [rax],al
  44efdc:	add    BYTE PTR [rax],al
  44efde:	add    BYTE PTR [rax],al
  44efe0:	rex.XB push r10
  44efe2:	rex.RB
  44efe3:	push   r12
  44efe5:	and    BYTE PTR [r11+0x20],r11b
  44efe9:	pop    rbx
  44efea:	and    BYTE PTR [rdi+0x4c],al
  44efed:	rex.WRXB
  44efee:	rex.X
  44efef:	rex.B
  44eff0:	rex.WR and BYTE PTR [rax+riz*1+0x4c],r15b
  44eff5:	rex.WRXB
  44eff6:	rex.XB
  44eff7:	rex.B
  44eff8:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44effc:	jnp    0x44f01e
  44effe:	push   rsp
  44efff:	rex.RB
  44f000:	rex.WRB push r8
  44f002:	rex.WRXB push r10
  44f004:	push   r10
  44f006:	pop    rcx
  44f007:	and    BYTE PTR [rax+riz*1+0x54],bh
  44f00b:	rex.RB
  44f00c:	rex.WRB push r8
  44f00e:	and    BYTE PTR [rbp+0x20],bh
  44f011:	jl     0x44f033
  44f013:	push   rbp
  44f014:	rex.WRX
  44f015:	rex.WR
  44f016:	rex.WRXB
  44f017:	rex.RXB
  44f018:	rex.RXB
  44f019:	rex.RB
  44f01a:	and    BYTE PTR [rbp+0x20],r11b
  44f01e:	push   rsp
  44f01f:	rex.B
  44f020:	rex.X
  44f021:	rex.WR
  44f022:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064fa9c
  44f029:	and    BYTE PTR [rax],ah
  44f02b:	pop    rbx
  44f02c:	and    BYTE PTR [rax],ch
  44f02e:	and    eax,0x2c5b2073
  44f033:	and    BYTE PTR [rsi],ch
  44f035:	cs cs pop rbp
  44f038:	and    BYTE PTR [rcx],ch
  44f03a:	and    BYTE PTR [rbp+0xa],bl
  44f03d:	and    BYTE PTR [rax],ah
  44f03f:	and    BYTE PTR [rax],ah
  44f041:	pop    rbx
  44f042:	and    BYTE PTR [rdi+0x49],dl
  44f045:	push   rsp
  44f046:	rex.W and BYTE PTR [rax],bpl
  44f049:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da010c2
  44f04f:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b654dc8
  44f055:	sub    al,0x20
  44f057:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44f05d:	sub    DWORD PTR [rax],esp
  44f05f:	jl     0x44f081
  44f061:	push   rdi
  44f062:	rex.WB push r12
  44f064:	rex.W and BYTE PTR [rdi+0x49],cl
  44f068:	rex.R push rbx
  44f06a:	and    BYTE PTR [rax+riz*1+0x57],bh
  44f06e:	rex.WB push r12
  44f070:	rex.W
  44f071:	rex.WRXB push r13
  44f073:	push   rsp
  44f074:	and    BYTE PTR [rdi+0x49],cl
  44f077:	rex.R push rbx
  44f079:	and    BYTE PTR [rbp+0xa],bl
  44f07c:	and    BYTE PTR [rax],ah
  44f07e:	and    BYTE PTR [rax],ah
  44f080:	pop    rbx
  44f081:	and    BYTE PTR [rdi+0x4e],cl
  44f084:	and    BYTE PTR [rbx+0x4f],al
  44f087:	rex.WRB
  44f088:	rex.WRB
  44f089:	rex.WB push r12
  44f08b:	and    BYTE PTR [rbx+0x20],bh
  44f08e:	push   rax
  44f08f:	push   rdx
  44f090:	rex.RB push r11
  44f092:	rex.RB push r10
  44f094:	push   rsi
  44f095:	and    BYTE PTR [r10+0x4f],r10b
  44f099:	push   rdi
  44f09a:	push   rbx
  44f09b:	and    BYTE PTR [rax+riz*1+0x44],bh
  44f09f:	rex.RB
  44f0a0:	rex.WR
  44f0a1:	rex.RB push r12
  44f0a3:	and    BYTE PTR [r10+0x4f],r10b
  44f0a7:	push   rdi
  44f0a8:	push   rbx
  44f0a9:	and    BYTE PTR [rax+riz*1+0x44],bh
  44f0ad:	push   rdx
  44f0ae:	rex.WRXB push r8
  44f0b0:	and    BYTE PTR [rbp+0x20],bh
  44f0b3:	pop    rbp
  44f0b4:	or     ah,BYTE PTR [rax]
  44f0b6:	and    BYTE PTR [rax],ah
  44f0b8:	and    BYTE PTR [rbx+0x20],bl
  44f0bb:	push   rsp
  44f0bc:	rex.B
  44f0bd:	rex.X
  44f0be:	rex.WR
  44f0bf:	rex.RB push r11
  44f0c1:	push   rax
  44f0c2:	rex.B
  44f0c3:	rex.XB
  44f0c4:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa2113e
  44f0cb:	and    BYTE PTR [rax],ah
  44f0cd:	and    BYTE PTR [rax],ah
  44f0cf:	push   r11
  44f0d1:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2064fb4a
  44f0d7:	and    BYTE PTR [rax],ah
  44f0d9:	pop    rbx
  44f0da:	and    BYTE PTR [rdi+0x49],dl
  44f0dd:	push   rsp
  44f0de:	rex.W and BYTE PTR [rbx+0x20],bl
  44f0e2:	rex.WRX
  44f0e3:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  44f0e7:	rex.R
  44f0e8:	push   r12
  44f0ea:	and    BYTE PTR [r13+0x0],bl
  44f0ee:	add    BYTE PTR [rax],al
  44f0f0:	rex.XB push r10
  44f0f2:	rex.RB
  44f0f3:	push   r12
  44f0f5:	and    BYTE PTR [r9+rax*2+0x42],r10b
  44f0fa:	rex.WR
  44f0fb:	rex.RB push r11
  44f0fd:	push   rax
  44f0fe:	rex.B
  44f0ff:	rex.XB
  44f100:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2064fb7a
  44f107:	and    BYTE PTR [rax],ah
  44f109:	pop    rbx
  44f10a:	and    BYTE PTR [rdi+0x57],cl
  44f10d:	rex.WRX
  44f10e:	rex.RB push r10
  44f110:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa21189
  44f116:	and    BYTE PTR [rax],ah
  44f118:	and    BYTE PTR [rax],ah
  44f11a:	rex.WR
  44f11b:	rex.WRXB
  44f11c:	rex.XB
  44f11d:	push   r12
  44f11f:	rex.WB
  44f120:	rex.WRXB
  44f121:	rex.WRX and BYTE PTR [rdi],r12b
  44f124:	and    eax,0x200a2773
  44f129:	and    BYTE PTR [rax],ah
  44f12b:	and    BYTE PTR [rbx+0x20],bl
  44f12e:	push   rdi
  44f12f:	rex.WB push r12
  44f131:	rex.W and BYTE PTR [rax],bpl
  44f134:	and    BYTE PTR [rip+0x203d2073],ah        # 0x208211ad
  44f13a:	and    eax,0x2c5b2073
  44f13f:	and    BYTE PTR [rsi],ch
  44f141:	cs and BYTE PTR cs:[rbp+0x20],bl
  44f146:	sub    DWORD PTR [rax],esp
  44f148:	pop    rbp
  44f149:	add    BYTE PTR [rcx+rbp*2+0x72],ah
  44f14d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  44f152:	jns    0x44f154
  44f154:	jo     0x44f1b7
  44f156:	jb     0x44f1cb
  44f158:	gs jb  0x44f1ba
  44f15b:	outs   dx,BYTE PTR ds:[rsi]
  44f15c:	(bad)  
  44f15d:	ins    DWORD PTR es:[rdi],dx
  44f15e:	add    BYTE PTR gs:[rbx+0x52],al
  44f162:	rex.RB
  44f163:	push   r12
  44f165:	and    BYTE PTR [r13+rax*2+0x58],r10b
  44f16a:	push   rsp
  44f16b:	and    BYTE PTR [rbx+0x45],dl
  44f16e:	push   r10
  44f170:	rex.XB
  44f171:	rex.W and BYTE PTR [rbx+0x4f],al
  44f175:	rex.WRX
  44f176:	rex.RX
  44f177:	rex.WB
  44f178:	rex.RXB push r13
  44f17a:	push   rdx
  44f17b:	push   r12
  44f17d:	rex.WB
  44f17e:	rex.WRXB
  44f17f:	rex.WRX and BYTE PTR [rip+0xa282073],r12b        # 0xa6d11f9
  44f186:	and    BYTE PTR [rax],ah
  44f188:	and    BYTE PTR [rax],ah
  44f18a:	push   rax
  44f18b:	push   r10
  44f18d:	push   rbx
  44f18e:	rex.RB push r10
  44f190:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b816b6
  44f196:	jl     0x44f1a2
  44f198:	and    BYTE PTR [rax],ah
  44f19a:	and    BYTE PTR [rax],ah
  44f19c:	rex.XB
  44f19d:	rex.WRXB push r8
  44f19f:	pop    rcx
  44f1a0:	and    BYTE PTR [rip+0xa732520],bh        # 0xab816c6
  44f1a6:	sub    DWORD PTR [rax],eax
  44f1a8:	jae    0x44f219
  44f1aa:	jne    0x44f21e
  44f1ac:	movsxd esp,DWORD PTR [rbp+0x5f]
  44f1af:	movsxd ebp,DWORD PTR [rdi+0x6e]
  44f1b2:	imul   sp,WORD PTR [rdi+0x0],0x0
  44f1b8:	rex.XB push r10
  44f1ba:	rex.RB
  44f1bb:	push   r12
  44f1bd:	and    BYTE PTR [r13+rax*2+0x58],r10b
  44f1c2:	push   rsp
  44f1c3:	and    BYTE PTR [rbx+0x45],dl
  44f1c6:	push   r10
  44f1c8:	rex.XB
  44f1c9:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  44f1ce:	push   rsp
  44f1cf:	rex.WB
  44f1d0:	rex.WRXB
  44f1d1:	rex.WRX
  44f1d2:	push   r10
  44f1d4:	pop    rcx
  44f1d5:	and    BYTE PTR [rip+0xa282073],ah        # 0xa6d124e
  44f1db:	and    BYTE PTR [rax],ah
  44f1dd:	and    BYTE PTR [rax],ah
  44f1df:	push   rsp
  44f1e0:	rex.RB
  44f1e1:	rex.WRB push r8
  44f1e3:	rex.WR
  44f1e4:	push   r12
  44f1e6:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab8170d
  44f1ed:	and    BYTE PTR [rax],ah
  44f1ef:	and    BYTE PTR [rax],ah
  44f1f1:	pop    rbx
  44f1f2:	sub    al,0x20
  44f1f4:	and    eax,0x203d2073
  44f1f9:	and    eax,0x2c5b2073
  44f1fe:	and    BYTE PTR [rsi],ch
  44f200:	cs and BYTE PTR cs:[rbp+0x5d],bl
  44f205:	or     ch,BYTE PTR [rcx]
  44f207:	add    BYTE PTR [rbx+0x74],dh
  44f20a:	(bad)  
  44f20b:	jb     0x44f281
  44f20d:	pop    rdi
  44f20e:	data16 jne 0x44f27f
  44f211:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f215:	outs   dx,BYTE PTR ds:[rsi]
  44f216:	add    BYTE PTR [rax],al
  44f218:	rex.XB push r10
  44f21a:	rex.RB
  44f21b:	push   r12
  44f21d:	and    BYTE PTR [r13+rax*2+0x58],r10b
  44f222:	push   rsp
  44f223:	and    BYTE PTR [rbx+0x45],dl
  44f226:	push   r10
  44f228:	rex.XB
  44f229:	rex.W and BYTE PTR [rax+0x41],dl
  44f22d:	push   rdx
  44f22e:	push   rbx
  44f22f:	rex.RB push r10
  44f231:	and    BYTE PTR [rip+0xa282073],ah        # 0xa6d12aa
  44f237:	and    BYTE PTR [rax],ah
  44f239:	and    BYTE PTR [rax],ah
  44f23b:	push   rbx
  44f23c:	push   rsp
  44f23d:	push   r10
  44f23f:	push   rsp
  44f240:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81766
  44f246:	sub    al,0xa
  44f248:	and    BYTE PTR [rax],ah
  44f24a:	and    BYTE PTR [rax],ah
  44f24c:	rex.RXB
  44f24d:	rex.RB push r12
  44f24f:	push   rsp
  44f250:	rex.WRXB
  44f251:	rex.WXB
  44f252:	rex.RB
  44f253:	rex.WRX and BYTE PTR [rip+0x20732520],r15b        # 0x20b8177a
  44f25a:	sub    al,0xa
  44f25c:	and    BYTE PTR [rax],ah
  44f25e:	and    BYTE PTR [rax],ah
  44f260:	rex.RB
  44f261:	rex.WRX
  44f262:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81789
  44f269:	sub    al,0xa
  44f26b:	and    BYTE PTR [rax],ah
  44f26d:	and    BYTE PTR [rax],ah
  44f26f:	rex.WR
  44f270:	rex.RB pop r8
  44f272:	push   rsp
  44f273:	pop    rcx
  44f274:	push   rax
  44f275:	rex.RB push r11
  44f277:	and    BYTE PTR [rip+0xa732520],bh        # 0xab8179d
  44f27d:	and    BYTE PTR [rax],ah
  44f27f:	and    BYTE PTR [rax],ah
  44f281:	pop    rbx
  44f282:	sub    al,0x20
  44f284:	rex.W
  44f285:	rex.RB
  44f286:	rex.B
  44f287:	rex.R
  44f288:	rex.WR
  44f289:	rex.WB
  44f28a:	rex.WRX
  44f28b:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b817b2
  44f292:	pop    rbp
  44f293:	or     ch,BYTE PTR [rcx]
  44f295:	add    BYTE PTR [rax+0x65],ch
  44f298:	(bad)  
  44f299:	fs ins BYTE PTR es:[rdi],dx
  44f29b:	imul   ebp,DWORD PTR [rsi+0x65],0x6e75665f
  44f2a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f2a6:	outs   dx,BYTE PTR ds:[rsi]
  44f2a7:	add    BYTE PTR [rbp+riz*2+0x78],ch
  44f2ab:	je     0x44f326
  44f2ad:	jo     0x44f314
  44f2af:	jae    0x44f310
  44f2b1:	data16 jne 0x44f322
  44f2b4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f2b8:	outs   dx,BYTE PTR ds:[rsi]
  44f2b9:	add    BYTE PTR [rbp+0x6e],ah
  44f2bc:	fs pop rdi
  44f2be:	data16 jne 0x44f32f
  44f2c1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f2c5:	outs   dx,BYTE PTR ds:[rsi]
  44f2c6:	add    BYTE PTR [rdi+0x65],ah
  44f2c9:	je     0x44f33f
  44f2cb:	outs   dx,DWORD PTR ds:[rsi]
  44f2cc:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  44f2d0:	data16 jne 0x44f341
  44f2d3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f2d7:	outs   dx,BYTE PTR ds:[rsi]
  44f2d8:	add    BYTE PTR [rcx+0x6e],ch
  44f2db:	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x74636e75
  44f2e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x52430000
  44f2ea:	rex.RB
  44f2eb:	push   r12
  44f2ed:	and    BYTE PTR [r13+rax*2+0x58],r10b
  44f2f2:	push   rsp
  44f2f3:	and    BYTE PTR [rbx+0x45],dl
  44f2f6:	push   r10
  44f2f8:	rex.XB
  44f2f9:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  44f2fe:	push   rax
  44f2ff:	rex.WR
  44f300:	push   r12
  44f302:	and    BYTE PTR [rip+0xa282073],r12b        # 0xa6d137c
  44f309:	and    BYTE PTR [rax],ah
  44f30b:	and    BYTE PTR [rax],ah
  44f30d:	pop    rbx
  44f30e:	and    BYTE PTR [rcx+0x4e],cl
  44f311:	rex.WB push r12
  44f313:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81839
  44f319:	sub    al,0x20
  44f31b:	pop    rbp
  44f31c:	or     ah,BYTE PTR [rax]
  44f31e:	and    BYTE PTR [rax],ah
  44f320:	and    BYTE PTR [rbp+rax*2+0x58],cl
  44f324:	rex.WB pop r10
  44f326:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab8184d
  44f32d:	sub    DWORD PTR [rax],eax
  44f32f:	ins    BYTE PTR es:[rdi],dx
  44f330:	gs js  0x44f39c
  44f333:	jp     0x44f39a
  44f335:	pop    rdi
  44f336:	data16 jne 0x44f3a7
  44f339:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f33d:	outs   dx,BYTE PTR ds:[rsi]
  44f33e:	add    BYTE PTR [rax],al
  44f340:	rex.XB push r10
  44f342:	rex.RB
  44f343:	push   r12
  44f345:	and    BYTE PTR [r11+0x20],r11b
  44f349:	rex.XB
  44f34a:	rex.WRXB
  44f34b:	rex.WRX push rbx
  44f34d:	push   rsp
  44f34e:	push   rdx
  44f34f:	rex.B
  44f350:	rex.WB
  44f351:	rex.WRX push rsp
  44f353:	and    BYTE PTR [rbp+0x20],bl
  44f356:	push   rsp
  44f357:	push   rdx
  44f358:	rex.WB
  44f359:	rex.RXB
  44f35a:	rex.RXB
  44f35b:	rex.RB push r10
  44f35d:	and    BYTE PTR [rip+0x207b2073],ah        # 0x20c013d6
  44f363:	rex.X
  44f364:	rex.RB
  44f365:	rex.RX
  44f366:	rex.WRXB push r10
  44f368:	and    BYTE PTR [r8+riz*1+0x41],r15b
  44f36d:	rex.RX push rsp
  44f36f:	rex.RB push r10
  44f371:	and    BYTE PTR [rax+riz*1+0x49],bh
  44f375:	rex.WRX push rbx
  44f377:	push   rsp
  44f378:	rex.RB
  44f379:	rex.B
  44f37a:	and    BYTE PTR [rdi+0x46],r9b
  44f37e:	and    BYTE PTR [rbp+0x20],bh
  44f381:	jnp    0x44f3a3
  44f383:	and    eax,0x205b2073
  44f388:	rex.WRXB push r10
  44f38a:	and    BYTE PTR [rsi],ch
  44f38c:	cs and BYTE PTR cs:[rbp+0x20],bl
  44f391:	jge    0x44f39d
  44f393:	and    BYTE PTR [rax],ah
  44f395:	and    BYTE PTR [rax],ah
  44f397:	rex.WRXB
  44f398:	rex.WRX and BYTE PTR [rip+0x20200a73],r12b        # 0x2064fe12
  44f39f:	and    BYTE PTR [rax],ah
  44f3a1:	pop    rbx
  44f3a2:	and    BYTE PTR [rsi+0x52],al
  44f3a5:	rex.WRXB
  44f3a6:	rex.WRB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa21420
  44f3ad:	and    BYTE PTR [rax],ah
  44f3af:	and    BYTE PTR [rax],ah
  44f3b1:	pop    rbx
  44f3b2:	and    BYTE PTR [rsi+0x4f],cl
  44f3b5:	push   rsp
  44f3b6:	and    BYTE PTR [rbp+rax*2+0x46],al
  44f3ba:	rex.RB push r10
  44f3bc:	push   rdx
  44f3bd:	rex.B
  44f3be:	rex.X
  44f3bf:	rex.WR
  44f3c0:	and    BYTE PTR [r8+riz*1+0x5b],r15b
  44f3c5:	and    BYTE PTR [rbp+rax*2+0x46],al
  44f3c9:	rex.RB push r10
  44f3cb:	push   rdx
  44f3cc:	rex.B
  44f3cd:	rex.X
  44f3ce:	rex.WR
  44f3cf:	and    BYTE PTR [r13+0x20],r11b
  44f3d3:	jnp    0x44f3f5
  44f3d5:	rex.WB
  44f3d6:	rex.WRX
  44f3d7:	rex.WB push r12
  44f3d9:	rex.WB
  44f3da:	rex.B
  44f3db:	rex.WR
  44f3dc:	rex.WR pop rcx
  44f3de:	and    BYTE PTR [rcx+0x4d],cl
  44f3e1:	rex.WRB
  44f3e2:	rex.RB
  44f3e3:	rex.R
  44f3e4:	rex.WB
  44f3e5:	push   r12
  44f3e7:	and    BYTE PTR [r8+riz*1+0x49],r15b
  44f3ec:	rex.WRX
  44f3ed:	rex.WB push r12
  44f3ef:	rex.WB
  44f3f0:	rex.B
  44f3f1:	rex.WR
  44f3f2:	rex.WR pop rcx
  44f3f4:	and    BYTE PTR [rbp+rax*2+0x46],al
  44f3f8:	rex.RB push r10
  44f3fa:	push   rdx
  44f3fb:	rex.RB
  44f3fc:	and    BYTE PTR [rbp+0x20],r15b
  44f400:	pop    rbp
  44f401:	or     ah,BYTE PTR [rax]
  44f403:	and    BYTE PTR [rax],ah
  44f405:	and    BYTE PTR [rbx+0x20],bl
  44f408:	rex.RX
  44f409:	rex.WRXB push r10
  44f40b:	and    BYTE PTR [rbx+0x20],bl
  44f40e:	rex.RB
  44f40f:	rex.B
  44f410:	rex.XB
  44f411:	rex.W and BYTE PTR [rbp+0x20],bl
  44f415:	jnp    0x44f437
  44f417:	push   rdx
  44f418:	rex.WRXB push r15
  44f41a:	and    BYTE PTR [rax+riz*1+0x53],bh
  44f41e:	push   rsp
  44f41f:	push   r12
  44f421:	rex.RB
  44f422:	rex.WRB
  44f423:	rex.RB
  44f424:	rex.WRX push rsp
  44f426:	and    BYTE PTR [rbp+0x20],bh
  44f429:	pop    rbp
  44f42a:	or     ah,BYTE PTR [rax]
  44f42c:	and    BYTE PTR [rax],ah
  44f42e:	and    BYTE PTR [rbx+0x20],bl
  44f431:	push   rdi
  44f432:	rex.W
  44f433:	rex.RB
  44f434:	rex.WRX and BYTE PTR [rax],r13b
  44f437:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e14b0
  44f43d:	pop    rbp
  44f43e:	or     ah,BYTE PTR [rax]
  44f440:	and    BYTE PTR [rax],ah
  44f442:	and    BYTE PTR [rbp+0x58],al
  44f445:	rex.RB
  44f446:	rex.XB push r13
  44f448:	push   rsp
  44f449:	and    BYTE PTR [r8+0x52],r10b
  44f44d:	rex.WRXB
  44f44e:	rex.XB
  44f44f:	rex.RB
  44f450:	rex.R push rbp
  44f452:	push   rdx
  44f453:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206d14cd
  44f45a:	and    eax,0xa292073
  44f45f:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204efed8
  44f465:	and    BYTE PTR [rax],ah
  44f467:	and    BYTE PTR [rcx+0x4e],cl
  44f46a:	push   rbx
  44f46b:	rex.RB push r10
  44f46d:	push   rsp
  44f46e:	or     ah,BYTE PTR [rax]
  44f470:	and    BYTE PTR [rax],ah
  44f472:	and    BYTE PTR [rbp+0x50],dl
  44f475:	rex.R
  44f476:	push   r12
  44f478:	and    BYTE PTR [r11+0x20],r11b
  44f47c:	rex.WRXB
  44f47d:	rex.RX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca014f7
  44f484:	and    BYTE PTR [rsi],ch
  44f486:	cs and BYTE PTR cs:[rbp+0x20],bl
  44f48b:	pop    rbp
  44f48c:	or     ah,BYTE PTR [rax]
  44f48e:	and    BYTE PTR [rax],ah
  44f490:	and    BYTE PTR [rbp+rax*2+0x4c],al
  44f494:	rex.RB push r12
  44f496:	or     r12b,BYTE PTR [r8]
  44f499:	and    BYTE PTR [rax],ah
  44f49b:	and    BYTE PTR [rdx+rdx*2+0x55],dl
  44f49f:	rex.WRX
  44f4a0:	rex.XB
  44f4a1:	push   r12
  44f4a3:	add    BYTE PTR [r9+0x72],r12b
  44f4a7:	addr32 jne 0x44f517
  44f4aa:	outs   dx,BYTE PTR gs:[rsi]
  44f4ac:	je     0x44f521
  44f4ae:	add    BYTE PTR [rdx+0x65],dh
  44f4b1:	data16 gs jb 0x44f51a
  44f4b5:	outs   dx,BYTE PTR ds:[rsi]
  44f4b6:	movsxd esp,DWORD PTR [rbp+0x64]
  44f4b9:	pop    rdi
  44f4ba:	je     0x44f51d
  44f4bc:	(bad)  
  44f4bd:	ins    BYTE PTR es:[rdi],dx
  44f4be:	gs pop rdi
  44f4c0:	outs   dx,BYTE PTR ds:[rsi]
  44f4c1:	(bad)  
  44f4c2:	ins    DWORD PTR es:[rdi],dx
  44f4c3:	add    BYTE PTR gs:[rax],al
  44f4c6:	add    BYTE PTR [rax],al
  44f4c8:	rex.XB push r10
  44f4ca:	rex.RB
  44f4cb:	push   r12
  44f4cd:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  44f4d2:	and    BYTE PTR [rip+0x53412073],r12b        # 0x5386154c
  44f4d9:	or     ah,BYTE PTR [rax]
  44f4db:	and    BYTE PTR [rax],ah
  44f4dd:	and    BYTE PTR [rax],ch
  44f4df:	and    BYTE PTR [rbx+0x20],bl
  44f4e2:	and    eax,0x73252073
  44f4e7:	and    BYTE PTR [rbx+0x20],bl
  44f4ea:	rex.XB
  44f4eb:	rex.WRXB
  44f4ec:	rex.WR
  44f4ed:	rex.WR
  44f4ee:	push   r12
  44f4f0:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a2156a
  44f4f7:	pop    rbx
  44f4f8:	sub    al,0x20
  44f4fa:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44f500:	pop    rbp
  44f501:	and    BYTE PTR [rcx],ch
  44f503:	or     cl,BYTE PTR [rdx]
  44f505:	rex.XB push r10
  44f507:	rex.RB
  44f508:	push   r12
  44f50a:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  44f50f:	and    BYTE PTR [rip+0x53412073],r12b        # 0x53861589
  44f516:	and    BYTE PTR [rbp+0x4e],al
  44f519:	push   rbp
  44f51a:	rex.WRB or r12b,BYTE PTR [r8]
  44f51d:	and    BYTE PTR [rax],ah
  44f51f:	and    BYTE PTR [rax],ch
  44f521:	and    BYTE PTR [rbx+0x20],bl
  44f524:	(bad)  
  44f525:	and    eax,0x5b202773
  44f52a:	sub    al,0x20
  44f52c:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44f532:	pop    rbp
  44f533:	and    BYTE PTR [rcx],ch
  44f535:	or     cl,BYTE PTR [rdx]
  44f537:	rex.XB push r10
  44f539:	rex.RB
  44f53a:	push   r12
  44f53c:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  44f541:	and    BYTE PTR [rip+0x53412073],r12b        # 0x538615bb
  44f548:	and    BYTE PTR [rdx+0x41],dl
  44f54b:	rex.WRX
  44f54c:	rex.RXB
  44f54d:	and    BYTE PTR [r8],r13b
  44f550:	or     ah,BYTE PTR [rax]
  44f552:	and    BYTE PTR [rax],ah
  44f554:	and    BYTE PTR [rbx+0x55],dl
  44f557:	rex.X push rsp
  44f559:	pop    rcx
  44f55a:	push   rax
  44f55b:	and    BYTE PTR [rip+0xa732520],r15b        # 0xab81a82
  44f562:	and    BYTE PTR [rax],ah
  44f564:	and    BYTE PTR [rax],ah
  44f566:	pop    rbx
  44f567:	and    BYTE PTR [rax+riz*1],ch
  44f56a:	push   rbx
  44f56b:	push   rbp
  44f56c:	rex.X push rsp
  44f56e:	pop    rcx
  44f56f:	push   rax
  44f570:	rex.RB pop r15
  44f572:	rex.WRXB push r8
  44f574:	rex.XB
  44f575:	rex.WR
  44f576:	push   r11
  44f578:	push   rbx
  44f579:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81a9f
  44f57f:	pop    rbp
  44f580:	or     ah,BYTE PTR [rax]
  44f582:	and    BYTE PTR [rax],ah
  44f584:	and    BYTE PTR [rbx+0x20],bl
  44f587:	sub    al,0x20
  44f589:	rex.XB
  44f58a:	rex.WRXB
  44f58b:	rex.WR
  44f58c:	rex.WR
  44f58d:	push   r12
  44f58f:	rex.WB
  44f590:	rex.WRXB
  44f591:	rex.WRX and BYTE PTR [rip+0x20732520],r15b        # 0x20b81ab8
  44f598:	pop    rbp
  44f599:	or     ah,BYTE PTR [rax]
  44f59b:	and    BYTE PTR [rax],ah
  44f59d:	and    BYTE PTR [rbx+0x20],bl
  44f5a0:	sub    al,0x20
  44f5a2:	rex.XB
  44f5a3:	rex.B
  44f5a4:	rex.WRX
  44f5a5:	rex.WRXB
  44f5a6:	rex.WRX
  44f5a7:	rex.WB
  44f5a8:	rex.XB
  44f5a9:	rex.B
  44f5aa:	rex.WR and BYTE PTR [rip+0x20732520],r15b        # 0x20b81ad1
  44f5b1:	pop    rbp
  44f5b2:	or     ah,BYTE PTR [rax]
  44f5b4:	and    BYTE PTR [rax],ah
  44f5b6:	and    BYTE PTR [rbx+0x20],bl
  44f5b9:	sub    al,0x20
  44f5bb:	push   rbx
  44f5bc:	push   rbp
  44f5bd:	rex.X push rsp
  44f5bf:	pop    rcx
  44f5c0:	push   rax
  44f5c1:	rex.RB pop r15
  44f5c3:	rex.R
  44f5c4:	rex.WB
  44f5c5:	rex.RX
  44f5c6:	rex.RX and BYTE PTR [rip+0x20732520],r15b        # 0x20b81aed
  44f5cd:	pop    rbp
  44f5ce:	or     ch,BYTE PTR [rcx]
  44f5d0:	or     cl,BYTE PTR [rdx]
  44f5d2:	rex.XB push r10
  44f5d4:	rex.RB
  44f5d5:	push   r12
  44f5d7:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  44f5dc:	and    BYTE PTR [rip+0xa282073],r12b        # 0xa6d1656
  44f5e3:	and    BYTE PTR [rax],ah
  44f5e5:	and    BYTE PTR [rax],ah
  44f5e7:	rex.WB
  44f5e8:	rex.WRX push rax
  44f5ea:	push   rbp
  44f5eb:	push   rsp
  44f5ec:	and    BYTE PTR [rip+0x2c732520],bh        # 0x2cb81b12
  44f5f2:	or     ah,BYTE PTR [rax]
  44f5f4:	and    BYTE PTR [rax],ah
  44f5f6:	and    BYTE PTR [rdi+0x55],cl
  44f5f9:	push   rsp
  44f5fa:	push   rax
  44f5fb:	push   rbp
  44f5fc:	push   rsp
  44f5fd:	and    BYTE PTR [rip+0xa732520],bh        # 0xab81b23
  44f603:	and    BYTE PTR [rax],ah
  44f605:	and    BYTE PTR [rax],ah
  44f607:	pop    rbx
  44f608:	and    BYTE PTR [rax+riz*1],ch
  44f60b:	push   rdx
  44f60c:	rex.RB
  44f60d:	rex.XB
  44f60e:	rex.RB
  44f60f:	rex.WB push r14
  44f611:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81b38
  44f618:	pop    rbp
  44f619:	or     ah,BYTE PTR [rax]
  44f61b:	and    BYTE PTR [rax],ah
  44f61d:	and    BYTE PTR [rbx+0x20],bl
  44f620:	sub    al,0x20
  44f622:	push   rbx
  44f623:	rex.RB
  44f624:	rex.WRX
  44f625:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81b4c
  44f62c:	pop    rbp
  44f62d:	or     ah,BYTE PTR [rax]
  44f62f:	and    BYTE PTR [rax],ah
  44f631:	and    BYTE PTR [rbx+0x20],bl
  44f634:	sub    al,0x20
  44f636:	push   rsp
  44f637:	pop    rcx
  44f638:	push   rax
  44f639:	rex.WRB
  44f63a:	rex.WRXB
  44f63b:	rex.R pop rdi
  44f63d:	rex.WB
  44f63e:	rex.WRX and BYTE PTR [rip+0x20732520],r15b        # 0x20b81b65
  44f645:	pop    rbp
  44f646:	or     ah,BYTE PTR [rax]
  44f648:	and    BYTE PTR [rax],ah
  44f64a:	and    BYTE PTR [rbx+0x20],bl
  44f64d:	sub    al,0x20
  44f64f:	push   rsp
  44f650:	pop    rcx
  44f651:	push   rax
  44f652:	rex.WRB
  44f653:	rex.WRXB
  44f654:	rex.R pop rdi
  44f656:	rex.WRXB push r13
  44f658:	push   rsp
  44f659:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81b7f
  44f65f:	pop    rbp
  44f660:	or     ah,BYTE PTR [rax]
  44f662:	and    BYTE PTR [rax],ah
  44f664:	and    BYTE PTR [rbx+0x20],bl
  44f667:	sub    al,0x20
  44f669:	rex.B
  44f66a:	rex.WRX
  44f66b:	rex.B
  44f66c:	rex.WR pop rcx
  44f66e:	pop    rdx
  44f66f:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81b96
  44f676:	pop    rbp
  44f677:	or     ah,BYTE PTR [rax]
  44f679:	and    BYTE PTR [rax],ah
  44f67b:	and    BYTE PTR [rbx+0x20],bl
  44f67e:	sub    al,0x20
  44f680:	rex.WB
  44f681:	rex.WRX push rsp
  44f683:	rex.RB push r10
  44f685:	rex.WRX
  44f686:	rex.B
  44f687:	rex.WR
  44f688:	rex.WR
  44f689:	rex.RB
  44f68a:	rex.WRX
  44f68b:	rex.RXB push r12
  44f68d:	rex.W and BYTE PTR [rip+0x25207b20],dil        # 0x256571b4
  44f694:	jae    0x44f6b6
  44f696:	jl     0x44f6b8
  44f698:	push   rsi
  44f699:	push   r10
  44f69b:	rex.WB
  44f69c:	rex.B
  44f69d:	rex.X
  44f69e:	rex.WR
  44f69f:	and    BYTE PTR [r13+0x20],r15b
  44f6a3:	pop    rbp
  44f6a4:	or     ah,BYTE PTR [rax]
  44f6a6:	and    BYTE PTR [rax],ah
  44f6a8:	and    BYTE PTR [rbx+0x20],bl
  44f6ab:	sub    al,0x20
  44f6ad:	push   rax
  44f6ae:	push   r11
  44f6b0:	push   rbx
  44f6b1:	rex.RB
  44f6b2:	rex.R
  44f6b3:	rex.X pop rcx
  44f6b5:	push   rsi
  44f6b6:	rex.B
  44f6b7:	rex.WR push rbp
  44f6b9:	and    BYTE PTR [r13+0xa],r11b
  44f6bd:	and    BYTE PTR [rax],ah
  44f6bf:	and    BYTE PTR [rax],ah
  44f6c1:	pop    rbx
  44f6c2:	and    BYTE PTR [rax+riz*1],ch
  44f6c5:	rex.B
  44f6c6:	rex.WR
  44f6c7:	rex.WB
  44f6c8:	rex.RXB
  44f6c9:	rex.WRX
  44f6ca:	rex.WRB
  44f6cb:	rex.RB
  44f6cc:	rex.WRX push rsp
  44f6ce:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81bf4
  44f6d4:	pop    rbp
  44f6d5:	or     ah,BYTE PTR [rax]
  44f6d7:	and    BYTE PTR [rax],ah
  44f6d9:	and    BYTE PTR [rbx+0x20],bl
  44f6dc:	sub    al,0x20
  44f6de:	push   rbx
  44f6df:	push   rsp
  44f6e0:	rex.WRXB push r10
  44f6e2:	rex.B
  44f6e3:	rex.RXB
  44f6e4:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81c0b
  44f6eb:	pop    rbp
  44f6ec:	or     ah,BYTE PTR [rax]
  44f6ee:	and    BYTE PTR [rax],ah
  44f6f0:	and    BYTE PTR [rbx+0x20],bl
  44f6f3:	sub    al,0x20
  44f6f5:	rex.WR
  44f6f6:	rex.WB
  44f6f7:	rex.WXB
  44f6f8:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81c1f
  44f6ff:	pop    rbp
  44f700:	or     ah,BYTE PTR [rax]
  44f702:	and    BYTE PTR [rax],ah
  44f704:	and    BYTE PTR [rbx+0x20],bl
  44f707:	sub    al,0x20
  44f709:	rex.XB
  44f70a:	push   r12
  44f70c:	rex.RB
  44f70d:	rex.RXB
  44f70e:	rex.WRXB push r10
  44f710:	pop    rcx
  44f711:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81c37
  44f717:	pop    rbp
  44f718:	or     ah,BYTE PTR [rax]
  44f71a:	and    BYTE PTR [rax],ah
  44f71c:	and    BYTE PTR [rbx+0x20],bl
  44f71f:	sub    al,0x20
  44f721:	push   rax
  44f722:	push   rdx
  44f723:	rex.RB
  44f724:	rex.RX
  44f725:	rex.RB push r10
  44f727:	push   rdx
  44f728:	rex.RB
  44f729:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81c50
  44f730:	pop    rbp
  44f731:	or     ah,BYTE PTR [rax]
  44f733:	and    BYTE PTR [rax],ah
  44f735:	and    BYTE PTR [rbx+0x20],bl
  44f738:	sub    al,0x20
  44f73a:	rex.R
  44f73b:	rex.RB
  44f73c:	rex.RX
  44f73d:	push   r13
  44f73f:	rex.WR push rsp
  44f741:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81c67
  44f747:	pop    rbp
  44f748:	or     ah,BYTE PTR [rax]
  44f74a:	and    BYTE PTR [rax],ah
  44f74c:	and    BYTE PTR [rbx+0x20],bl
  44f74f:	sub    al,0x20
  44f751:	rex.RB
  44f752:	rex.WR
  44f753:	rex.RB
  44f754:	rex.WRB
  44f755:	rex.RB
  44f756:	rex.WRX push rsp
  44f758:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81c7e
  44f75e:	pop    rbp
  44f75f:	or     ah,BYTE PTR [rax]
  44f761:	and    BYTE PTR [rax],ah
  44f763:	and    BYTE PTR [rbx+0x20],bl
  44f766:	sub    al,0x20
  44f768:	rex.R
  44f769:	rex.RB
  44f76a:	rex.WR
  44f76b:	rex.WB
  44f76c:	rex.WRB
  44f76d:	rex.WB push r12
  44f76f:	rex.RB push r10
  44f771:	and    BYTE PTR [rip+0x20732520],bh        # 0x20b81c97
  44f777:	pop    rbp
  44f778:	or     ah,BYTE PTR [rax]
  44f77a:	and    BYTE PTR [rax],ah
  44f77c:	and    BYTE PTR [rbx+0x20],bl
  44f77f:	sub    al,0x20
  44f781:	rex.XB
  44f782:	rex.WRXB
  44f783:	rex.WR
  44f784:	rex.WR
  44f785:	push   r12
  44f787:	rex.B
  44f788:	rex.X
  44f789:	rex.WR
  44f78a:	and    BYTE PTR [rip+0x20732520],r15b        # 0x20b81cb1
  44f791:	pop    rbp
  44f792:	or     ch,BYTE PTR [rcx]
  44f794:	or     cl,BYTE PTR [rdx]
  44f796:	rex.XB push r10
  44f798:	rex.RB
  44f799:	push   r12
  44f79b:	and    BYTE PTR [r9+rbx*2+0x50],r10b
  44f7a0:	and    BYTE PTR [rip+0x6f630073],r12b        # 0x6fa7f81a
  44f7a7:	ins    BYTE PTR es:[rdi],dx
  44f7a8:	ins    BYTE PTR es:[rdi],dx
  44f7a9:	(bad)  
  44f7aa:	je     0x44f80d
  44f7ac:	(bad)  
  44f7ad:	ins    BYTE PTR es:[rdi],dx
  44f7ae:	add    BYTE PTR gs:[rbp+riz*2+0x6c],ah
  44f7b3:	imul   ebp,DWORD PTR [rbp+0x69],0x726574
  44f7ba:	gs ins BYTE PTR es:[rdi],dx
  44f7bc:	gs ins DWORD PTR es:[rdi],dx
  44f7be:	outs   dx,BYTE PTR gs:[rsi]
  44f7c0:	je     0x44f7c2
  44f7c2:	fs gs data16 (bad) 
  44f7c6:	jne    0x44f834
  44f7c8:	je     0x44f7ca
  44f7ca:	jo     0x44f83e
  44f7cc:	gs data16 gs jb 0x44f843
  44f7d1:	gs add BYTE PTR fs:[rbx+0x61],ah
  44f7d6:	je     0x44f83d
  44f7d8:	outs   dx,DWORD PTR ds:[esi]
  44f7da:	jb     0x44f855
  44f7dc:	add    BYTE PTR [rcx+rbp*2+0x6b],ch
  44f7e0:	gs pop rdi
  44f7e2:	je     0x44f85d
  44f7e4:	jo     0x44f84b
  44f7e6:	add    BYTE PTR [rbx+0x74],dh
  44f7e9:	outs   dx,DWORD PTR ds:[rsi]
  44f7ea:	jb     0x44f84d
  44f7ec:	add    BYTE PTR gs:[ecx+0x6c],ah
  44f7f1:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  44f7f8:	add    BYTE PTR [rcx+0x6e],ch
  44f7fb:	je     0x44f862
  44f7fd:	jb     0x44f86d
  44f7ff:	(bad)  
  44f800:	ins    BYTE PTR es:[rdi],dx
  44f801:	ins    BYTE PTR es:[rdi],dx
  44f802:	outs   dx,BYTE PTR gs:[rsi]
  44f804:	addr32 je 0x44f86f
  44f807:	add    BYTE PTR [rcx+0x6e],ah
  44f80a:	(bad)  
  44f80b:	ins    BYTE PTR es:[rdi],dx
  44f80c:	jns    0x44f888
  44f80e:	gs pop rdi
  44f810:	data16 jne 0x44f881
  44f813:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f817:	outs   dx,BYTE PTR ds:[rsi]
  44f818:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  44f81c:	gs pop rdi
  44f81e:	ins    DWORD PTR es:[rdi],dx
  44f81f:	outs   dx,DWORD PTR ds:[rsi]
  44f820:	imul   esp,DWORD PTR fs:[rsi+0x69],0x6f5f7265
  44f828:	jne    0x44f89e
  44f82a:	jo     0x44f8a1
  44f82c:	je     0x44f88d
  44f82e:	data16 jne 0x44f89f
  44f831:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f835:	outs   dx,BYTE PTR ds:[rsi]
  44f836:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  44f83a:	gs pop rdi
  44f83c:	ins    DWORD PTR es:[rdi],dx
  44f83d:	outs   dx,DWORD PTR ds:[rsi]
  44f83e:	imul   esp,DWORD PTR fs:[rsi+0x69],0x695f7265
  44f846:	outs   dx,BYTE PTR ds:[rsi]
  44f847:	jo     0x44f8be
  44f849:	je     0x44f8aa
  44f84b:	data16 jne 0x44f8bc
  44f84e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f852:	outs   dx,BYTE PTR ds:[rsi]
  44f853:	add    BYTE PTR [rbx+0x65],dh
  44f856:	outs   dx,BYTE PTR ds:[rsi]
  44f857:	fs pop rdi
  44f859:	data16 jne 0x44f8ca
  44f85c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f860:	outs   dx,BYTE PTR ds:[rsi]
  44f861:	add    BYTE PTR [rdx+0x65],dh
  44f864:	movsxd esp,DWORD PTR [rbp+0x69]
  44f867:	jbe    0x44f8ce
  44f869:	pop    rdi
  44f86a:	data16 jne 0x44f8db
  44f86d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f871:	outs   dx,BYTE PTR ds:[rsi]
  44f872:	add    BYTE PTR [rdi+0x75],ch
  44f875:	je     0x44f8e7
  44f877:	jne    0x44f8ed
  44f879:	pop    rdi
  44f87a:	data16 jne 0x44f8eb
  44f87d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f881:	outs   dx,BYTE PTR ds:[rsi]
  44f882:	add    BYTE PTR [rcx+0x6e],ch
  44f885:	jo     0x44f8fc
  44f887:	je     0x44f8e8
  44f889:	data16 jne 0x44f8fa
  44f88c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f890:	outs   dx,BYTE PTR ds:[rsi]
  44f891:	add    BYTE PTR [rbx+0x75],dh
  44f894:	(bad)  
  44f895:	je     0x44f910
  44f897:	jo     0x44f8fe
  44f899:	pop    rdi
  44f89a:	imul   esp,DWORD PTR fs:[rsi+0x66],0x6e75665f
  44f8a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f8a6:	outs   dx,BYTE PTR ds:[rsi]
  44f8a7:	add    BYTE PTR [rbx+0x61],ah
  44f8aa:	outs   dx,BYTE PTR ds:[rsi]
  44f8ab:	outs   dx,DWORD PTR ds:[rsi]
  44f8ac:	outs   dx,BYTE PTR ds:[rsi]
  44f8ad:	imul   esp,DWORD PTR [rbx+0x61],0x75665f6c
  44f8b4:	outs   dx,BYTE PTR ds:[rsi]
  44f8b5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44f8b9:	outs   dx,BYTE PTR ds:[rsi]
  44f8ba:	add    BYTE PTR [rbx+0x75],dh
  44f8bd:	(bad)  
  44f8be:	je     0x44f939
  44f8c0:	jo     0x44f927
  44f8c2:	pop    rdi
  44f8c3:	outs   dx,DWORD PTR ds:[rsi]
  44f8c4:	jo     0x44f92b
  44f8c6:	jb     0x44f929
  44f8c8:	je     0x44f939
  44f8ca:	jb     0x44f92b
  44f8cc:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  44f8d0:	jae    0x44f8d2
  44f8d2:	jae    0x44f949
  44f8d4:	(bad)  
  44f8d5:	je     0x44f950
  44f8d7:	jo     0x44f93e
  44f8d9:	add    BYTE PTR [rcx+riz*2+0x62],ch
  44f8dd:	gs ins BYTE PTR es:[rdi],dx
  44f8df:	add    BYTE PTR [rbx+0x52],al
  44f8e2:	rex.RB
  44f8e3:	push   r12
  44f8e5:	and    BYTE PTR [r13+0x53],r10b
  44f8e9:	rex.RB push r10
  44f8eb:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a01964
  44f8f1:	pop    rbx
  44f8f2:	and    BYTE PTR [rdi+0x49],dl
  44f8f5:	push   rsp
  44f8f6:	rex.W and BYTE PTR [rbp+0x20],bl
  44f8fa:	and    eax,0x205b2073
  44f8ff:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44f905:	pop    rbp
  44f906:	or     cl,BYTE PTR [rdx]
  44f908:	and    eax,0x200a0a73
  44f90d:	and    BYTE PTR [rax],ah
  44f90f:	and    BYTE PTR [rax],ah
  44f911:	and    BYTE PTR [rbx+0x55],dl
  44f914:	push   rax
  44f915:	rex.RB push r10
  44f917:	push   rbp
  44f918:	push   rbx
  44f919:	rex.RB push r10
  44f91b:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44f91f:	rex.WRXB push r11
  44f921:	push   rbp
  44f922:	push   rax
  44f923:	rex.RB push r10
  44f925:	push   rbp
  44f926:	push   rbx
  44f927:	rex.RB push r10
  44f929:	or     ah,BYTE PTR [rax]
  44f92b:	and    BYTE PTR [rax],ah
  44f92d:	and    BYTE PTR [rax+riz*1+0x43],bh
  44f931:	push   rdx
  44f932:	rex.RB
  44f933:	push   r12
  44f935:	rex.RB
  44f936:	rex.R
  44f937:	and    BYTE PTR [rax+r12*1+0x4e],dil
  44f93c:	rex.WRXB
  44f93d:	rex.XB push r10
  44f93f:	rex.RB
  44f940:	push   r12
  44f942:	rex.RB
  44f943:	rex.R
  44f944:	rex.X or spl,BYTE PTR [rax]
  44f947:	and    BYTE PTR [rax],ah
  44f949:	and    BYTE PTR [rax+riz*1+0x43],bh
  44f94d:	push   rdx
  44f94e:	rex.RB
  44f94f:	push   r12
  44f951:	rex.RB push r10
  44f953:	rex.WRXB
  44f954:	rex.WR
  44f955:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  44f95a:	rex.WRXB
  44f95b:	rex.XB push r10
  44f95d:	rex.RB
  44f95e:	push   r12
  44f960:	rex.RB push r10
  44f962:	rex.WRXB
  44f963:	rex.WR
  44f964:	or     r12b,BYTE PTR [r8]
  44f967:	and    BYTE PTR [rax],ah
  44f969:	and    BYTE PTR [rax+riz*1+0x43],bh
  44f96d:	push   rdx
  44f96e:	rex.RB
  44f96f:	push   r12
  44f971:	rex.RB push r13
  44f973:	push   rbx
  44f974:	rex.RB push r10
  44f976:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44f97a:	rex.WRXB
  44f97b:	rex.XB push r10
  44f97d:	rex.RB
  44f97e:	push   r12
  44f980:	rex.RB push r13
  44f982:	push   rbx
  44f983:	rex.RB push r10
  44f985:	or     ah,BYTE PTR [rax]
  44f987:	and    BYTE PTR [rax],ah
  44f989:	and    BYTE PTR [rax+riz*1+0x49],bh
  44f98d:	rex.WRX
  44f98e:	rex.W
  44f98f:	rex.RB push r10
  44f991:	rex.WB push r12
  44f993:	and    BYTE PTR [rax+riz*1+0x4e],bh
  44f997:	rex.WRXB
  44f998:	rex.WB
  44f999:	rex.WRX
  44f99a:	rex.W
  44f99b:	rex.RB push r10
  44f99d:	rex.WB push r12
  44f99f:	or     ah,BYTE PTR [rax]
  44f9a1:	and    BYTE PTR [rax],ah
  44f9a3:	and    BYTE PTR [rax+riz*1+0x4c],bh
  44f9a7:	rex.WRXB
  44f9a8:	rex.RXB
  44f9a9:	rex.WB
  44f9aa:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44f9af:	rex.WRXB
  44f9b0:	rex.WR
  44f9b1:	rex.WRXB
  44f9b2:	rex.RXB
  44f9b3:	rex.WB
  44f9b4:	rex.WRX or r12b,BYTE PTR [rax]
  44f9b7:	and    BYTE PTR [rax],ah
  44f9b9:	and    BYTE PTR [rax+riz*1+0x52],bh
  44f9bd:	rex.RB push r8
  44f9bf:	rex.WR
  44f9c0:	rex.WB
  44f9c1:	rex.XB
  44f9c2:	push   r12
  44f9c4:	rex.WB
  44f9c5:	rex.WRXB
  44f9c6:	rex.WRX and BYTE PTR [rax+r12*1+0x4e],r15b
  44f9cb:	rex.WRXB push r10
  44f9cd:	rex.RB push r8
  44f9cf:	rex.WR
  44f9d0:	rex.WB
  44f9d1:	rex.XB
  44f9d2:	push   r12
  44f9d4:	rex.WB
  44f9d5:	rex.WRXB
  44f9d6:	rex.WRX or r12b,BYTE PTR [rax]
  44f9d9:	and    BYTE PTR [rax],ah
  44f9db:	and    BYTE PTR [rax+riz*1+0x43],bh
  44f9df:	rex.WRXB
  44f9e0:	rex.WRX
  44f9e1:	rex.WRX
  44f9e2:	rex.RB
  44f9e3:	rex.XB push r12
  44f9e5:	rex.WB
  44f9e6:	rex.WRXB
  44f9e7:	rex.WRX and BYTE PTR [rcx+r9*2+0x4d],r9b
  44f9ec:	rex.WB push r12
  44f9ee:	and    BYTE PTR [rip+0x20200a73],ah        # 0x20650467
  44f9f4:	and    BYTE PTR [rax],ah
  44f9f6:	jl     0x44fa18
  44f9f8:	pop    rbx
  44f9f9:	and    BYTE PTR [rbp+0x4e],al
  44f9fc:	rex.XB push r10
  44f9fe:	pop    rcx
  44f9ff:	push   rax
  44fa00:	push   rsp
  44fa01:	rex.RB
  44fa02:	and    BYTE PTR [rax+riz*1+0x55],r15b
  44fa07:	rex.WRX
  44fa08:	rex.RB
  44fa09:	rex.WRX
  44fa0a:	rex.XB push r10
  44fa0c:	pop    rcx
  44fa0d:	push   rax
  44fa0e:	push   rsp
  44fa0f:	rex.RB
  44fa10:	and    BYTE PTR [rbp+0x20],r11b
  44fa14:	push   rax
  44fa15:	push   r11
  44fa17:	push   rbx
  44fa18:	push   rdi
  44fa19:	rex.WRXB push r10
  44fa1b:	and    BYTE PTR [rdi],r12b
  44fa1e:	and    eax,0x200a2773
  44fa23:	and    BYTE PTR [rax],ah
  44fa25:	and    BYTE PTR [rax+riz*1+0x56],bh
  44fa29:	rex.B
  44fa2a:	rex.WR
  44fa2b:	rex.WB
  44fa2c:	and    BYTE PTR [rbp+0x4e],r10b
  44fa30:	push   rsp
  44fa31:	rex.WB
  44fa32:	rex.WR and BYTE PTR [rdi],r12b
  44fa35:	and    eax,0x200a2773
  44fa3a:	and    BYTE PTR [rax],ah
  44fa3c:	and    BYTE PTR [rax+riz*1+0x49],bh
  44fa40:	rex.WRX and BYTE PTR [rdx+0x4f],r10b
  44fa44:	rex.WR
  44fa45:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca01abf
  44fa4c:	and    BYTE PTR [rsi],ch
  44fa4e:	cs cs pop rbp
  44fa51:	or     ah,BYTE PTR [rax]
  44fa53:	and    BYTE PTR [rax],ah
  44fa55:	and    BYTE PTR [rax+riz*1+0x49],bh
  44fa59:	rex.WRX and BYTE PTR [rdi+0x52],r8b
  44fa5d:	rex.WRXB push r13
  44fa5f:	push   rax
  44fa60:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca01ad9
  44fa66:	and    BYTE PTR [rsi],ch
  44fa68:	cs cs pop rbp
  44fa6b:	or     ah,BYTE PTR [rax]
  44fa6d:	and    BYTE PTR [rax],ah
  44fa6f:	and    BYTE PTR [rax+riz*1+0x52],bh
  44fa73:	rex.WRXB
  44fa74:	rex.WR
  44fa75:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca01aef
  44fa7c:	and    BYTE PTR [rsi],ch
  44fa7e:	cs cs pop rbp
  44fa81:	or     ah,BYTE PTR [rax]
  44fa83:	and    BYTE PTR [rax],ah
  44fa85:	and    BYTE PTR [rax+riz*1+0x41],bh
  44fa89:	rex.R
  44fa8a:	rex.WRB
  44fa8b:	rex.WB
  44fa8c:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca01b06
  44fa93:	and    BYTE PTR [rsi],ch
  44fa95:	cs cs pop rbp
  44fa98:	or     ah,BYTE PTR [rax]
  44fa9a:	and    BYTE PTR [rax],ah
  44fa9c:	and    BYTE PTR [rax+riz*1+0x55],bh
  44faa0:	push   rbx
  44faa1:	rex.RB push r10
  44faa3:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca01b1c
  44faa9:	and    BYTE PTR [rsi],ch
  44faab:	cs cs pop rbp
  44faae:	or     ah,BYTE PTR [rax]
  44fab0:	and    BYTE PTR [rax],ah
  44fab2:	and    BYTE PTR [rax+riz*1+0x53],bh
  44fab6:	pop    rcx
  44fab7:	push   rbx
  44fab8:	rex.WB
  44fab9:	and    BYTE PTR [rip+0x73],r12b        # 0x44fb33
  44fac0:	rex.XB push r10
  44fac2:	rex.RB
  44fac3:	push   r12
  44fac5:	and    BYTE PTR [r13+0x53],r10b
  44fac9:	rex.RB push r10
  44facb:	and    BYTE PTR [rbp+0x41],cl
  44face:	push   rax
  44facf:	push   rax
  44fad0:	rex.WB
  44fad1:	rex.WRX
  44fad2:	rex.RXB and BYTE PTR [r14+0x4f],r8b
  44fad6:	push   rdx
  44fad7:	and    BYTE PTR [rbx+0x20],bh
  44fada:	and    eax,0x207c2073
  44fadf:	push   rbp
  44fae0:	push   rbx
  44fae1:	rex.RB push r10
  44fae3:	and    BYTE PTR [rax+riz*1+0x43],bh
  44fae7:	push   rbp
  44fae8:	push   rdx
  44fae9:	push   rdx
  44faea:	rex.RB
  44faeb:	rex.WRX push rsp
  44faed:	pop    rdi
  44faee:	push   rbp
  44faef:	push   rbx
  44faf0:	rex.RB push r10
  44faf2:	and    BYTE PTR [rax+riz*1+0x50],bh
  44faf6:	push   rbp
  44faf7:	rex.X
  44faf8:	rex.WR
  44faf9:	rex.WB
  44fafa:	rex.XB and BYTE PTR [r13+0xa],dil
  44fafe:	and    BYTE PTR [rax],ah
  44fb00:	and    BYTE PTR [rax],ah
  44fb02:	push   rbx
  44fb03:	rex.RB push r10
  44fb05:	push   rsi
  44fb06:	rex.RB push r10
  44fb08:	and    BYTE PTR [rip+0x20200a73],ah        # 0x20650581
  44fb0e:	and    BYTE PTR [rax],ah
  44fb10:	pop    rbx
  44fb11:	and    BYTE PTR [rdi+0x50],cl
  44fb14:	push   rsp
  44fb15:	rex.WB
  44fb16:	rex.WRXB
  44fb17:	rex.WRX push rbx
  44fb19:	and    BYTE PTR [rax],ch
  44fb1b:	and    BYTE PTR [rip+0x25272073],ah        # 0x256c1b94
  44fb21:	jae    0x44fb4a
  44fb23:	and    BYTE PTR [rbx+0x20],bl
  44fb26:	sub    al,0x20
  44fb28:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44fb2e:	sub    DWORD PTR [rax],esp
  44fb30:	pop    rbp
  44fb31:	add    BYTE PTR [rax],al
  44fb33:	add    BYTE PTR [rax],al
  44fb35:	add    BYTE PTR [rax],al
  44fb37:	add    BYTE PTR [rbx+0x52],al
  44fb3a:	rex.RB
  44fb3b:	push   r12
  44fb3d:	and    BYTE PTR [r11+0x20],r11b
  44fb41:	rex.WRXB push r10
  44fb43:	and    BYTE PTR [rdx+0x45],dl
  44fb46:	push   rax
  44fb47:	rex.WR
  44fb48:	rex.B
  44fb49:	rex.XB
  44fb4a:	and    BYTE PTR [r13+0x20],r11b
  44fb4e:	pop    rbx
  44fb4f:	and    BYTE PTR [rbp+rax*2+0x4d],dl
  44fb53:	push   rax
  44fb54:	and    BYTE PTR [rax+riz*1+0x54],bh
  44fb58:	rex.RB
  44fb59:	rex.WRB push r8
  44fb5b:	rex.WRXB push r10
  44fb5d:	push   r10
  44fb5f:	pop    rcx
  44fb60:	and    BYTE PTR [rbp+0x20],bl
  44fb63:	pop    rbx
  44fb64:	and    BYTE PTR [rdx+0x45],dl
  44fb67:	rex.XB push r13
  44fb69:	push   rdx
  44fb6a:	push   rbx
  44fb6b:	rex.WB push r14
  44fb6d:	and    BYTE PTR [r13+0x20],r11b
  44fb71:	push   rsi
  44fb72:	rex.WB
  44fb73:	rex.RB push r15
  44fb75:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a01bee
  44fb7b:	sub    BYTE PTR [rax],ah
  44fb7d:	and    eax,0x2c5b2073
  44fb82:	and    BYTE PTR [rsi],ch
  44fb84:	cs cs pop rbp
  44fb87:	and    BYTE PTR [rcx],ch
  44fb89:	and    BYTE PTR [rbp+0xa],bl
  44fb8c:	and    BYTE PTR [rax],ah
  44fb8e:	and    BYTE PTR [rax],ah
  44fb90:	pop    rbx
  44fb91:	and    BYTE PTR [rdi+0x49],dl
  44fb94:	push   rsp
  44fb95:	rex.W and BYTE PTR [rax],bpl
  44fb98:	and    BYTE PTR [rip+0x3d5b2073],ah        # 0x3da01c11
  44fb9e:	and    BYTE PTR [rip+0x5b205d73],ah        # 0x5b655917
  44fba4:	sub    al,0x20
  44fba6:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44fbac:	sub    DWORD PTR [rax],esp
  44fbae:	pop    rbp
  44fbaf:	or     ah,BYTE PTR [rax]
  44fbb1:	and    BYTE PTR [rax],ah
  44fbb3:	and    BYTE PTR [rcx+0x53],al
  44fbb6:	and    BYTE PTR [rip+0x20200a73],ah        # 0x2065062f
  44fbbc:	and    BYTE PTR [rax],ah
  44fbbe:	pop    rbx
  44fbbf:	and    BYTE PTR [rdi+0x49],dl
  44fbc2:	push   rsp
  44fbc3:	rex.W and BYTE PTR [rbx+0x20],bl
  44fbc7:	rex.XB
  44fbc8:	push   r11
  44fbca:	rex.XB
  44fbcb:	rex.B
  44fbcc:	rex.R
  44fbcd:	rex.RB
  44fbce:	and    BYTE PTR [rax+riz*1+0x4c],r15b
  44fbd3:	rex.WRXB
  44fbd4:	rex.XB
  44fbd5:	rex.B
  44fbd6:	rex.WR and BYTE PTR [rbp+0x20],r11b
  44fbda:	rex.XB
  44fbdb:	rex.W
  44fbdc:	rex.RB
  44fbdd:	rex.XB
  44fbde:	rex.WXB and BYTE PTR [r15+0x50],cl
  44fbe2:	push   rsp
  44fbe3:	rex.WB
  44fbe4:	rex.WRXB
  44fbe5:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  44fbe9:	add    BYTE PTR [rax],al
  44fbeb:	add    BYTE PTR [rax],al
  44fbed:	add    BYTE PTR [rax],al
  44fbef:	add    BYTE PTR [rbp+rax*2+0x41],al
  44fbf3:	rex.WR
  44fbf4:	rex.WR
  44fbf5:	rex.WRXB
  44fbf6:	rex.XB
  44fbf7:	push   r12
  44fbf9:	and    BYTE PTR [r11+0x20],r11b
  44fbfd:	push   rax
  44fbfe:	push   rdx
  44fbff:	rex.RB push r8
  44fc01:	push   r10
  44fc03:	and    BYTE PTR [r13+0x20],r11b
  44fc07:	jnp    0x44fc29
  44fc09:	and    eax,0x207c2073
  44fc0e:	rex.B
  44fc0f:	rex.WR
  44fc10:	rex.WR and BYTE PTR [rbp+0x0],r15b
  44fc14:	add    BYTE PTR [rax],al
  44fc16:	add    BYTE PTR [rax],al
  44fc18:	rex.R
  44fc19:	rex.RB
  44fc1a:	rex.XB
  44fc1b:	rex.WR
  44fc1c:	push   r10
  44fc1e:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a01c98
  44fc25:	rex.X
  44fc26:	rex.WB
  44fc27:	rex.WRX
  44fc28:	push   r10
  44fc2a:	pop    rcx
  44fc2b:	and    BYTE PTR [rbp+0x20],bl
  44fc2e:	pop    rbx
  44fc2f:	and    BYTE PTR [rcx+0x4e],cl
  44fc32:	push   rbx
  44fc33:	rex.RB
  44fc34:	rex.WRX push rbx
  44fc36:	rex.WB push r12
  44fc38:	rex.WB push r14
  44fc3a:	and    BYTE PTR [r13+0x20],r11b
  44fc3e:	pop    rbx
  44fc3f:	and    BYTE PTR [rbx+0x20],bl
  44fc42:	rex.WRX
  44fc43:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  44fc47:	push   rbx
  44fc48:	rex.XB push r10
  44fc4a:	rex.WRXB
  44fc4b:	rex.WR
  44fc4c:	rex.WR and BYTE PTR [rbp+0xa],r11b
  44fc50:	and    BYTE PTR [rax],ah
  44fc52:	and    BYTE PTR [rax],ah
  44fc54:	rex.XB push r13
  44fc56:	push   rdx
  44fc57:	push   rbx
  44fc58:	rex.WRXB push r10
  44fc5a:	and    BYTE PTR [rbx+0x20],bl
  44fc5d:	jnp    0x44fc7f
  44fc5f:	push   rdi
  44fc60:	rex.WB push r12
  44fc62:	rex.W and BYTE PTR [rax+riz*1+0x57],dil
  44fc67:	rex.WB push r12
  44fc69:	rex.W
  44fc6a:	rex.WRXB push r13
  44fc6c:	push   rsp
  44fc6d:	and    BYTE PTR [rbp+0x20],bh
  44fc70:	rex.W
  44fc71:	rex.WRXB
  44fc72:	rex.WR
  44fc73:	and    BYTE PTR [rbp+0x20],r11b
  44fc77:	rex.RX
  44fc78:	rex.WRXB push r10
  44fc7a:	and    BYTE PTR [rip+0x69770073],ah        # 0x69bbfcf3
  44fc80:	je     0x44fcea
  44fc82:	pop    rdi
  44fc83:	jno    0x44fcfa
  44fc85:	gs jb  0x44fd01
	...
  44fc90:	pop    rbx
  44fc91:	and    BYTE PTR [rdi+0x49],dl
  44fc94:	push   rsp
  44fc95:	rex.W and BYTE PTR [rbx+0x20],bl
  44fc99:	push   rdx
  44fc9a:	rex.RB
  44fc9b:	rex.XB push r13
  44fc9d:	push   rdx
  44fc9e:	push   rbx
  44fc9f:	rex.WB push r14
  44fca1:	and    BYTE PTR [r13+0x20],r11b
  44fca5:	and    eax,0x2c5b2073
  44fcaa:	and    BYTE PTR [rsi],ch
  44fcac:	cs cs pop rbp
  44fcaf:	and    BYTE PTR [rbp+0xa],bl
  44fcb2:	rex.R
  44fcb3:	rex.RB
  44fcb4:	rex.WR
  44fcb5:	rex.RB push r12
  44fcb7:	and    BYTE PTR [r14+0x52],r8b
  44fcbb:	rex.WRXB
  44fcbc:	rex.WRB and BYTE PTR [r11+0x20],r11b
  44fcc0:	rex.WRXB
  44fcc1:	rex.WRX
  44fcc2:	rex.WR pop rcx
  44fcc4:	and    BYTE PTR [rbp+0x20],bl
  44fcc7:	and    eax,0x205b2073
  44fccc:	sub    ah,BYTE PTR [rax]
  44fcce:	pop    rbp
  44fccf:	and    BYTE PTR [rbx+0x20],bl
  44fcd2:	pop    rbx
  44fcd3:	and    BYTE PTR [rcx+0x53],al
  44fcd6:	and    BYTE PTR [rbp+0x20],bl
  44fcd9:	and    eax,0xa5d2073
  44fcde:	and    BYTE PTR [rax],ah
  44fce0:	and    BYTE PTR [rax],ah
  44fce2:	pop    rbx
  44fce3:	and    BYTE PTR [rbp+0x53],dl
  44fce6:	rex.WB
  44fce7:	rex.WRX
  44fce8:	rex.RXB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa21d62
  44fcef:	and    BYTE PTR [rax],ah
  44fcf1:	and    BYTE PTR [rax],ah
  44fcf3:	pop    rbx
  44fcf4:	and    BYTE PTR [rdi+0x48],dl
  44fcf7:	rex.RB push r10
  44fcf9:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c11d73
  44fd00:	push   rdi
  44fd01:	rex.W
  44fd02:	rex.RB push r10
  44fd04:	and    BYTE PTR [r11+0x55],r8b
  44fd08:	push   rdx
  44fd09:	push   rdx
  44fd0a:	rex.RB
  44fd0b:	rex.WRX push rsp
  44fd0d:	and    BYTE PTR [rdi+0x46],cl
  44fd10:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa21d89
  44fd16:	and    BYTE PTR [rax],ah
  44fd18:	and    BYTE PTR [rax],ah
  44fd1a:	pop    rbx
  44fd1b:	and    BYTE PTR [rdx+0x45],dl
  44fd1e:	push   rsp
  44fd1f:	push   rbp
  44fd20:	push   rdx
  44fd21:	rex.WRX
  44fd22:	rex.WB
  44fd23:	rex.WRX
  44fd24:	rex.RXB and BYTE PTR [r10],r13b
  44fd27:	and    BYTE PTR [rax+riz*1+0x25],bh
  44fd2b:	jae    0x44fd4d
  44fd2d:	pop    rbx
  44fd2e:	and    BYTE PTR [rbx+0x20],bl
  44fd31:	push   r11
  44fd33:	and    BYTE PTR [rbp+0x20],bl
  44fd36:	and    eax,0x205d2073
  44fd3b:	pop    rbx
  44fd3c:	sub    al,0x20
  44fd3e:	cs cs cs pop rbp
  44fd42:	and    BYTE PTR [rbp+0x0],bl
  44fd45:	outs   dx,DWORD PTR ds:[rsi]
  44fd46:	jne    0x44fdbc
  44fd48:	jo     0x44fdbf
  44fd4a:	je     0x44fdab
  44fd4c:	outs   dx,BYTE PTR ds:[rsi]
  44fd4d:	(bad)  
  44fd4e:	ins    DWORD PTR es:[rdi],dx
  44fd4f:	add    BYTE PTR gs:[rdi+0x75],ch
  44fd53:	je     0x44fdc5
  44fd55:	jne    0x44fdcb
  44fd57:	pop    rdi
  44fd58:	gs js  0x44fdcb
  44fd5b:	jb     0x44fdc2
  44fd5d:	jae    0x44fdd2
  44fd5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x72756300
  44fd66:	jae    0x44fdd7
  44fd68:	jb     0x44fdc9
  44fd6a:	outs   dx,BYTE PTR ds:[rsi]
  44fd6b:	(bad)  
  44fd6c:	ins    DWORD PTR es:[rdi],dx
  44fd6d:	add    BYTE PTR gs:[rbp+0x73],dh
  44fd71:	imul   ebp,DWORD PTR [rsi+0x67],0x73696c5f
  44fd78:	je     0x44fd7a
  44fd7a:	(bad)  
  44fd7b:	ins    BYTE PTR es:[rdi],dx
  44fd7c:	imul   esp,DWORD PTR [rcx+0x73],0x53494400
  44fd83:	rex.XB
  44fd84:	push   r10
  44fd86:	and    BYTE PTR [rbx+0x20],r15b
  44fd8a:	rex.B
  44fd8b:	rex.WR
  44fd8c:	rex.WR and BYTE PTR [rax+riz*1+0x50],r15b
  44fd91:	rex.WR
  44fd92:	rex.B
  44fd93:	rex.WRX push rbx
  44fd95:	and    BYTE PTR [rax+riz*1+0x53],bh
  44fd99:	rex.RB push r9
  44fd9b:	push   rbp
  44fd9c:	rex.RB
  44fd9d:	rex.WRX
  44fd9e:	rex.XB
  44fd9f:	rex.RB push r11
  44fda1:	and    BYTE PTR [rax+riz*1+0x54],bh
  44fda5:	rex.RB
  44fda6:	rex.WRB push r8
  44fda8:	rex.WRXB push r10
  44fdaa:	push   r10
  44fdac:	pop    rcx
  44fdad:	and    BYTE PTR [rax+riz*1+0x54],bh
  44fdb1:	rex.RB
  44fdb2:	rex.WRB push r8
  44fdb4:	and    BYTE PTR [rbp+0x0],bh
  44fdb7:	movsxd ebp,DWORD PTR [rdi+0x64]
  44fdba:	add    BYTE PTR gs:[rdi+rcx*2+0x20],al
  44fdbf:	pop    rbx
  44fdc0:	and    BYTE PTR [rcx+rax*2+0x4e],cl
  44fdc4:	rex.RXB push r13
  44fdc6:	rex.B
  44fdc7:	rex.RXB
  44fdc8:	and    BYTE PTR [rip+0x205d2073],r12b        # 0x20a21e42
  44fdcf:	and    eax,0x73
  44fdd4:	add    BYTE PTR [rax],al
  44fdd6:	add    BYTE PTR [rax],al
  44fdd8:	rex.R push rdx
  44fdda:	rex.WRXB push r8
  44fddc:	and    BYTE PTR [rcx+0x47],al
  44fddf:	rex.RXB push r10
  44fde1:	rex.RB
  44fde2:	rex.RXB
  44fde3:	push   r12
  44fde5:	and    BYTE PTR [r11+0x20],r11b
  44fde9:	rex.WB
  44fdea:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44fdee:	rex.WB push r11
  44fdf0:	push   rsp
  44fdf1:	push   rbx
  44fdf2:	and    BYTE PTR [rbp+0x20],bl
  44fdf5:	and    eax,0x20282073
  44fdfa:	and    eax,0x20292073
  44fdff:	pop    rbx
  44fe00:	and    BYTE PTR [rbx+0x41],al
  44fe03:	push   rbx
  44fe04:	rex.XB
  44fe05:	rex.B
  44fe06:	rex.R
  44fe07:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44fe0c:	rex.RB push r11
  44fe0e:	push   rsp
  44fe0f:	push   rdx
  44fe10:	rex.WB
  44fe11:	rex.XB push r12
  44fe13:	and    BYTE PTR [rbp+0xa],bl
  44fe16:	or     ah,BYTE PTR [rip+0x2a0a0a73]        # 0x2a4f088f
  44fe1c:	and    BYTE PTR [rdx+rcx*1+0x5b],bh
  44fe20:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a21e99
  44fe26:	pop    rbx
  44fe27:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a21ea0
  44fe2d:	and    eax,0x205b2073
  44fe32:	sub    al,0x20
  44fe34:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44fe3a:	jl     0x44fe46
  44fe3c:	pop    rbx
  44fe3d:	and    BYTE PTR [rbx+0x20],bl
  44fe40:	and    eax,0x205d2073
  44fe45:	pop    rbx
  44fe46:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a21ebf
  44fe4c:	and    eax,0x205b2073
  44fe51:	sub    al,0x20
  44fe53:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  44fe59:	pop    rbp
  44fe5a:	and    BYTE PTR [rdi+0x52],cl
  44fe5d:	rex.R
  44fe5e:	rex.RB push r10
  44fe60:	and    BYTE PTR [rdx+0x59],al
  44fe63:	and    BYTE PTR [rbx+0x20],bl
  44fe66:	and    eax,0x205d2073
  44fe6b:	pop    rbx
  44fe6c:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a21ee5
  44fe72:	and    eax,0x205b2073
  44fe77:	sub    al,0x20
  44fe79:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  44fe7f:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  44fe83:	push   rax
  44fe84:	and    BYTE PTR [rbx+0x41],al
  44fe87:	push   rbx
  44fe88:	push   rsp
  44fe89:	and    BYTE PTR [rbx+0x20],bl
  44fe8c:	rex.WB
  44fe8d:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44fe91:	rex.WB push r11
  44fe93:	push   rsp
  44fe94:	push   rbx
  44fe95:	and    BYTE PTR [rbp+0x20],bl
  44fe98:	sub    BYTE PTR [rip+0x53412073],ah        # 0x53861f11
  44fe9e:	and    BYTE PTR [rip+0x5b202973],ah        # 0x5b652817
  44fea4:	and    BYTE PTR [rbx+0x41],al
  44fea7:	push   rbx
  44fea8:	rex.XB
  44fea9:	rex.B
  44feaa:	rex.R
  44feab:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44feb0:	rex.RB push r11
  44feb2:	push   rsp
  44feb3:	push   rdx
  44feb4:	rex.WB
  44feb5:	rex.XB push r12
  44feb7:	and    BYTE PTR [rbp+0x0],bl
  44feba:	add    BYTE PTR [rax],al
  44febc:	add    BYTE PTR [rax],al
  44febe:	add    BYTE PTR [rax],al
  44fec0:	rex.R push rdx
  44fec2:	rex.WRXB push r8
  44fec4:	and    BYTE PTR [rbx+0x4f],al
  44fec7:	rex.WR
  44fec8:	rex.WR
  44fec9:	push   r12
  44fecb:	rex.WB
  44fecc:	rex.WRXB
  44fecd:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44fed1:	rex.WB
  44fed2:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44fed6:	rex.WB push r11
  44fed8:	push   rsp
  44fed9:	push   rbx
  44feda:	and    BYTE PTR [rbp+0x20],bl
  44fedd:	and    eax,0x205b2073
  44fee2:	rex.XB
  44fee3:	push   r11
  44fee5:	rex.XB
  44fee6:	rex.B
  44fee7:	rex.R
  44fee8:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44feed:	rex.RB push r11
  44feef:	push   rsp
  44fef0:	push   rdx
  44fef1:	rex.WB
  44fef2:	rex.XB push r12
  44fef4:	and    BYTE PTR [rbp+0x0],bl
  44fef7:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  44fefb:	push   rax
  44fefc:	and    BYTE PTR [rbx+0x4f],al
  44feff:	rex.WRX push rsi
  44ff01:	rex.RB push r10
  44ff03:	push   rbx
  44ff04:	rex.WB
  44ff05:	rex.WRXB
  44ff06:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44ff0a:	rex.WB
  44ff0b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ff0f:	rex.WB push r11
  44ff11:	push   rsp
  44ff12:	push   rbx
  44ff13:	and    BYTE PTR [rbp+0x20],bl
  44ff16:	and    eax,0x205b2073
  44ff1b:	rex.XB
  44ff1c:	push   r11
  44ff1e:	rex.XB
  44ff1f:	rex.B
  44ff20:	rex.R
  44ff21:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44ff26:	rex.RB push r11
  44ff28:	push   rsp
  44ff29:	push   rdx
  44ff2a:	rex.WB
  44ff2b:	rex.XB push r12
  44ff2d:	and    BYTE PTR [rbp+0x0],bl
  44ff30:	rex.R push rdx
  44ff32:	rex.WRXB push r8
  44ff34:	and    BYTE PTR [rcx+rax*2+0x54],al
  44ff38:	rex.B
  44ff39:	rex.X
  44ff3a:	push   r11
  44ff3c:	and    BYTE PTR [r11+0x20],r11b
  44ff40:	rex.WB
  44ff41:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ff45:	rex.WB push r11
  44ff47:	push   rsp
  44ff48:	push   rbx
  44ff49:	and    BYTE PTR [rbp+0x20],bl
  44ff4c:	and    eax,0x44000073
  44ff51:	push   rdx
  44ff52:	rex.WRXB push r8
  44ff54:	and    BYTE PTR [rdi+rcx*2+0x4d],al
  44ff58:	rex.B
  44ff59:	rex.WB
  44ff5a:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44ff5e:	rex.WB
  44ff5f:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ff63:	rex.WB push r11
  44ff65:	push   rsp
  44ff66:	push   rbx
  44ff67:	and    BYTE PTR [rbp+0x20],bl
  44ff6a:	and    eax,0x2c5b2073
  44ff6f:	and    BYTE PTR [rsi],ch
  44ff71:	cs cs pop rbp
  44ff74:	and    BYTE PTR [rbx+0x20],bl
  44ff77:	rex.XB
  44ff78:	push   r11
  44ff7a:	rex.XB
  44ff7b:	rex.B
  44ff7c:	rex.R
  44ff7d:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44ff82:	rex.RB push r11
  44ff84:	push   rsp
  44ff85:	push   rdx
  44ff86:	rex.WB
  44ff87:	rex.XB push r12
  44ff89:	and    BYTE PTR [rbp+0x0],bl
  44ff8c:	add    BYTE PTR [rax],al
  44ff8e:	add    BYTE PTR [rax],al
  44ff90:	rex.R push rdx
  44ff92:	rex.WRXB push r8
  44ff94:	and    BYTE PTR [rbp+0x56],al
  44ff97:	rex.RB
  44ff98:	rex.WRX push rsp
  44ff9a:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  44ff9e:	rex.RXB
  44ff9f:	rex.RXB
  44ffa0:	rex.RB push r10
  44ffa2:	and    BYTE PTR [rbx+0x20],bl
  44ffa5:	rex.WB
  44ffa6:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ffaa:	rex.WB push r11
  44ffac:	push   rsp
  44ffad:	push   rbx
  44ffae:	and    BYTE PTR [rbp+0x20],bl
  44ffb1:	and    eax,0x205b2073
  44ffb6:	rex.XB
  44ffb7:	push   r11
  44ffb9:	rex.XB
  44ffba:	rex.B
  44ffbb:	rex.R
  44ffbc:	and    BYTE PTR [r8+riz*1+0x52],r15b
  44ffc1:	rex.RB push r11
  44ffc3:	push   rsp
  44ffc4:	push   rdx
  44ffc5:	rex.WB
  44ffc6:	rex.XB push r12
  44ffc8:	and    BYTE PTR [rbp+0x0],bl
  44ffcb:	add    BYTE PTR [rax],al
  44ffcd:	add    BYTE PTR [rax],al
  44ffcf:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  44ffd3:	push   rax
  44ffd4:	and    BYTE PTR [rbp+0x58],al
  44ffd7:	push   rsp
  44ffd8:	rex.RB
  44ffd9:	rex.WRX push rbx
  44ffdb:	rex.WB
  44ffdc:	rex.WRXB
  44ffdd:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  44ffe1:	rex.WB
  44ffe2:	rex.RX and BYTE PTR [rbp+0x58],r8b
  44ffe6:	rex.WB push r11
  44ffe8:	push   rsp
  44ffe9:	push   rbx
  44ffea:	and    BYTE PTR [rbp+0x20],bl
  44ffed:	and    eax,0x2c5b2073
  44fff2:	and    BYTE PTR [rsi],ch
  44fff4:	cs cs pop rbp
  44fff7:	and    BYTE PTR [rbx+0x20],bl
  44fffa:	rex.XB
  44fffb:	push   r11
  44fffd:	rex.XB
  44fffe:	rex.B
  44ffff:	rex.R
  450000:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450005:	rex.RB push r11
  450007:	push   rsp
  450008:	push   rdx
  450009:	rex.WB
  45000a:	rex.XB push r12
  45000c:	and    BYTE PTR [rbp+0x0],bl
  45000f:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  450013:	push   rax
  450014:	and    BYTE PTR [rsi+0x4f],al
  450017:	push   rdx
  450018:	rex.RB
  450019:	rex.WB
  45001a:	rex.RXB
  45001b:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  450020:	and    BYTE PTR [r15+0x52],dl
  450024:	push   r8
  450026:	push   rax
  450027:	rex.RB push r10
  450029:	and    BYTE PTR [rbx+0x20],bl
  45002c:	rex.WB
  45002d:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450031:	rex.WB push r11
  450033:	push   rsp
  450034:	push   rbx
  450035:	and    BYTE PTR [rbp+0x20],bl
  450038:	and    eax,0x205b2073
  45003d:	rex.XB
  45003e:	push   r11
  450040:	rex.XB
  450041:	rex.B
  450042:	rex.R
  450043:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450048:	rex.RB push r11
  45004a:	push   rsp
  45004b:	push   rdx
  45004c:	rex.WB
  45004d:	rex.XB push r12
  45004f:	and    BYTE PTR [rbp+0x0],bl
  450052:	add    BYTE PTR [rax],al
  450054:	add    BYTE PTR [rax],al
  450056:	add    BYTE PTR [rax],al
  450058:	rex.R push rdx
  45005a:	rex.WRXB push r8
  45005c:	and    BYTE PTR [rsi+0x4f],al
  45005f:	push   rdx
  450060:	rex.RB
  450061:	rex.WB
  450062:	rex.RXB
  450063:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  450068:	rex.WR
  450069:	and    BYTE PTR [r11+0x20],r11b
  45006d:	rex.WB
  45006e:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450072:	rex.WB push r11
  450074:	push   rsp
  450075:	push   rbx
  450076:	and    BYTE PTR [rbp+0x20],bl
  450079:	and    eax,0x2c5b2073
  45007e:	and    BYTE PTR [rsi],ch
  450080:	cs cs pop rbp
  450083:	and    BYTE PTR [rbx+0x20],bl
  450086:	rex.XB
  450087:	push   r11
  450089:	rex.XB
  45008a:	rex.B
  45008b:	rex.R
  45008c:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450091:	rex.RB push r11
  450093:	push   rsp
  450094:	push   rdx
  450095:	rex.WB
  450096:	rex.XB push r12
  450098:	and    BYTE PTR [rbp+0x0],bl
  45009b:	add    BYTE PTR [rax],al
  45009d:	add    BYTE PTR [rax],al
  45009f:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4500a3:	push   rax
  4500a4:	and    BYTE PTR [rsi+0x55],al
  4500a7:	rex.WRX
  4500a8:	rex.XB push r12
  4500aa:	rex.WB
  4500ab:	rex.WRXB
  4500ac:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  4500b0:	rex.WB
  4500b1:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4500b5:	rex.WB push r11
  4500b7:	push   rsp
  4500b8:	push   rbx
  4500b9:	and    BYTE PTR [rbp+0x20],bl
  4500bc:	and    eax,0x20282073
  4500c1:	pop    rbx
  4500c2:	and    BYTE PTR [rbx+0x20],bl
  4500c5:	and    eax,0x205d2073
  4500ca:	pop    rbx
  4500cb:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a22144
  4500d1:	and    eax,0x2c5b2073
  4500d6:	and    BYTE PTR [rsi],ch
  4500d8:	cs cs pop rbp
  4500db:	and    BYTE PTR [rbp+0x20],bl
  4500de:	sub    DWORD PTR [rdx],ecx
  4500e0:	and    BYTE PTR [rax],ah
  4500e2:	and    BYTE PTR [rax],ah
  4500e4:	pop    rbx
  4500e5:	and    BYTE PTR [rbx+0x41],al
  4500e8:	push   rbx
  4500e9:	rex.XB
  4500ea:	rex.B
  4500eb:	rex.R
  4500ec:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4500f1:	rex.RB push r11
  4500f3:	push   rsp
  4500f4:	push   rdx
  4500f5:	rex.WB
  4500f6:	rex.XB push r12
  4500f8:	and    BYTE PTR [rbp+0x0],bl
  4500fb:	add    BYTE PTR [rax],al
  4500fd:	add    BYTE PTR [rax],al
  4500ff:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  450103:	push   rax
  450104:	and    BYTE PTR [rdi+0x52],al
  450107:	rex.WRXB push r13
  450109:	push   rax
  45010a:	and    BYTE PTR [rbx+0x20],bl
  45010d:	rex.WB
  45010e:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450112:	rex.WB push r11
  450114:	push   rsp
  450115:	push   rbx
  450116:	and    BYTE PTR [rbp+0x20],bl
  450119:	and    eax,0x2c5b2073
  45011e:	and    BYTE PTR [rsi],ch
  450120:	cs cs pop rbp
  450123:	add    BYTE PTR [rax],al
  450125:	add    BYTE PTR [rax],al
  450127:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  45012b:	push   rax
  45012c:	and    BYTE PTR [rcx+0x4e],cl
  45012f:	rex.R
  450130:	rex.RB pop r8
  450132:	and    BYTE PTR [rbx+0x20],bl
  450135:	rex.XB
  450136:	rex.WRXB
  450137:	rex.WRX
  450138:	rex.XB push r13
  45013a:	push   rdx
  45013b:	push   rdx
  45013c:	rex.RB
  45013d:	rex.WRX push rsp
  45013f:	rex.WR pop rcx
  450141:	and    BYTE PTR [rbp+0x20],bl
  450144:	pop    rbx
  450145:	and    BYTE PTR [rcx+0x46],cl
  450148:	and    BYTE PTR [rbp+0x58],al
  45014b:	rex.WB push r11
  45014d:	push   rsp
  45014e:	push   rbx
  45014f:	and    BYTE PTR [rbp+0x20],bl
  450152:	and    eax,0x2c5b2073
  450157:	and    BYTE PTR [rsi],ch
  450159:	cs cs pop rbp
  45015c:	and    BYTE PTR [rbx+0x20],bl
  45015f:	rex.XB
  450160:	push   r11
  450162:	rex.XB
  450163:	rex.B
  450164:	rex.R
  450165:	and    BYTE PTR [r8+riz*1+0x52],r15b
  45016a:	rex.RB push r11
  45016c:	push   rsp
  45016d:	push   rdx
  45016e:	rex.WB
  45016f:	rex.XB push r12
  450171:	and    BYTE PTR [rbp+0x0],bl
  450174:	add    BYTE PTR [rax],al
  450176:	add    BYTE PTR [rax],al
  450178:	rex.R push rdx
  45017a:	rex.WRXB push r8
  45017c:	and    BYTE PTR [rbx+0x20],bl
  45017f:	push   rax
  450180:	push   rdx
  450181:	rex.WRXB
  450182:	rex.XB
  450183:	rex.RB
  450184:	rex.R push rbp
  450186:	push   rdx
  450187:	rex.B
  450188:	rex.WR and BYTE PTR [rbp+0x20],r11b
  45018c:	rex.WR
  45018d:	rex.B
  45018e:	rex.WRX
  45018f:	rex.RXB push r13
  450191:	rex.B
  450192:	rex.RXB
  450193:	and    BYTE PTR [r11+0x20],r11b
  450197:	rex.WB
  450198:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45019c:	rex.WB push r11
  45019e:	push   rsp
  45019f:	push   rbx
  4501a0:	and    BYTE PTR [rbp+0x20],bl
  4501a3:	and    eax,0x205b2073
  4501a8:	rex.XB
  4501a9:	push   r11
  4501ab:	rex.XB
  4501ac:	rex.B
  4501ad:	rex.R
  4501ae:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4501b3:	rex.RB push r11
  4501b5:	push   rsp
  4501b6:	push   rdx
  4501b7:	rex.WB
  4501b8:	rex.XB push r12
  4501ba:	and    BYTE PTR [rbp+0x0],bl
  4501bd:	add    BYTE PTR [rax],al
  4501bf:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4501c3:	push   rax
  4501c4:	and    BYTE PTR [rbp+0x41],cl
  4501c7:	push   rsp
  4501c8:	rex.RB push r10
  4501ca:	rex.WB
  4501cb:	rex.B
  4501cc:	rex.WR
  4501cd:	rex.WB pop r10
  4501cf:	rex.RB
  4501d0:	and    BYTE PTR [rsi+0x49],r10b
  4501d4:	rex.RB push r15
  4501d6:	and    BYTE PTR [rbx+0x20],bl
  4501d9:	rex.WB
  4501da:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4501de:	rex.WB push r11
  4501e0:	push   rsp
  4501e1:	push   rbx
  4501e2:	and    BYTE PTR [rbp+0x20],bl
  4501e5:	and    eax,0x2c5b2073
  4501ea:	and    BYTE PTR [rsi],ch
  4501ec:	cs cs pop rbp
  4501ef:	and    BYTE PTR [rbx+0x20],bl
  4501f2:	rex.XB
  4501f3:	push   r11
  4501f5:	rex.XB
  4501f6:	rex.B
  4501f7:	rex.R
  4501f8:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4501fd:	rex.RB push r11
  4501ff:	push   rsp
  450200:	push   rdx
  450201:	rex.WB
  450202:	rex.XB push r12
  450204:	and    BYTE PTR [rbp+0x0],bl
  450207:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  45020b:	push   rax
  45020c:	and    BYTE PTR [rdi+0x50],cl
  45020f:	rex.RB push r10
  450211:	push   r12
  450213:	rex.WRXB push r10
  450215:	and    BYTE PTR [rbx+0x20],bl
  450218:	rex.WB
  450219:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45021d:	rex.WB push r11
  45021f:	push   rsp
  450220:	push   rbx
  450221:	and    BYTE PTR [rbp+0x20],bl
  450224:	and    eax,0x20282073
  450229:	jnp    0x45024b
  45022b:	and    eax,0x207c2073
  450230:	rex.WRX
  450231:	rex.WRXB
  450232:	rex.WRX
  450233:	and    BYTE PTR [r13+0x20],r15b
  450237:	sub    al,0x20
  450239:	jnp    0x45025b
  45023b:	and    eax,0x207c2073
  450240:	rex.WRX
  450241:	rex.WRXB
  450242:	rex.WRX
  450243:	and    BYTE PTR [r13+0x20],r15b
  450247:	sub    DWORD PTR [rax],esp
  450249:	pop    rbx
  45024a:	and    BYTE PTR [rbx+0x41],al
  45024d:	push   rbx
  45024e:	rex.XB
  45024f:	rex.B
  450250:	rex.R
  450251:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450256:	rex.RB push r11
  450258:	push   rsp
  450259:	push   rdx
  45025a:	rex.WB
  45025b:	rex.XB push r12
  45025d:	and    BYTE PTR [rbp+0x0],bl
  450260:	rex.R push rdx
  450262:	rex.WRXB push r8
  450264:	and    BYTE PTR [rdi+0x50],cl
  450267:	rex.RB push r10
  450269:	push   r12
  45026b:	rex.WRXB push r10
  45026d:	and    BYTE PTR [rbx+0x4c],al
  450270:	push   r11
  450272:	push   rbx
  450273:	and    BYTE PTR [rbx+0x20],bl
  450276:	rex.WB
  450277:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45027b:	rex.WB push r11
  45027d:	push   rsp
  45027e:	push   rbx
  45027f:	and    BYTE PTR [rbp+0x20],bl
  450282:	and    eax,0x53552073
  450287:	rex.WB
  450288:	rex.WRX
  450289:	rex.RXB and BYTE PTR [rip+0x205b2073],r12b        # 0x20a02303
  450290:	rex.XB
  450291:	push   r11
  450293:	rex.XB
  450294:	rex.B
  450295:	rex.R
  450296:	and    BYTE PTR [r8+riz*1+0x52],r15b
  45029b:	rex.RB push r11
  45029d:	push   rsp
  45029e:	push   rdx
  45029f:	rex.WB
  4502a0:	rex.XB push r12
  4502a2:	and    BYTE PTR [rbp+0x0],bl
  4502a5:	add    BYTE PTR [rax],al
  4502a7:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4502ab:	push   rax
  4502ac:	and    BYTE PTR [rdi+0x50],cl
  4502af:	rex.RB push r10
  4502b1:	push   r12
  4502b3:	rex.WRXB push r10
  4502b5:	and    BYTE PTR [rsi+0x41],al
  4502b8:	rex.WRB
  4502b9:	rex.WB
  4502ba:	rex.WR pop rcx
  4502bc:	and    BYTE PTR [rbx+0x20],bl
  4502bf:	rex.WB
  4502c0:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4502c4:	rex.WB push r11
  4502c6:	push   rsp
  4502c7:	push   rbx
  4502c8:	and    BYTE PTR [rbp+0x20],bl
  4502cb:	and    eax,0x53552073
  4502d0:	rex.WB
  4502d1:	rex.WRX
  4502d2:	rex.RXB and BYTE PTR [rip+0x205b2073],r12b        # 0x20a0234c
  4502d9:	rex.XB
  4502da:	push   r11
  4502dc:	rex.XB
  4502dd:	rex.B
  4502de:	rex.R
  4502df:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4502e4:	rex.RB push r11
  4502e6:	push   rsp
  4502e7:	push   rdx
  4502e8:	rex.WB
  4502e9:	rex.XB push r12
  4502eb:	and    BYTE PTR [rbp+0x0],bl
  4502ee:	add    BYTE PTR [rax],al
  4502f0:	rex.R push rdx
  4502f2:	rex.WRXB push r8
  4502f4:	and    BYTE PTR [rdi+0x57],cl
  4502f7:	rex.WRX
  4502f8:	rex.RB
  4502f9:	and    BYTE PTR [rdx+0x59],r8b
  4502fd:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca02376
  450303:	and    BYTE PTR [rsi],ch
  450305:	cs cs pop rbp
  450308:	and    BYTE PTR [rbx+0x20],bl
  45030b:	rex.XB
  45030c:	push   r11
  45030e:	rex.XB
  45030f:	rex.B
  450310:	rex.R
  450311:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450316:	rex.RB push r11
  450318:	push   rsp
  450319:	push   rdx
  45031a:	rex.WB
  45031b:	rex.XB push r12
  45031d:	and    BYTE PTR [rbp+0x0],bl
  450320:	rex.R push rdx
  450322:	rex.WRXB push r8
  450324:	and    BYTE PTR [rdx+0x4f],dl
  450327:	rex.WR
  450328:	and    BYTE PTR [r11+0x20],r11b
  45032c:	rex.WB
  45032d:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450331:	rex.WB push r11
  450333:	push   rsp
  450334:	push   rbx
  450335:	and    BYTE PTR [rbp+0x20],bl
  450338:	and    eax,0x2c5b2073
  45033d:	and    BYTE PTR [rsi],ch
  45033f:	cs cs pop rbp
  450342:	add    BYTE PTR [rax],al
  450344:	add    BYTE PTR [rax],al
  450346:	add    BYTE PTR [rax],al
  450348:	rex.R push rdx
  45034a:	rex.WRXB push r8
  45034c:	and    BYTE PTR [rdx+0x55],dl
  45034f:	rex.WR
  450350:	and    BYTE PTR [r11+0x20],r11b
  450354:	rex.WB
  450355:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450359:	rex.WB push r11
  45035b:	push   rsp
  45035c:	push   rbx
  45035d:	and    BYTE PTR [rbp+0x20],bl
  450360:	and    eax,0x4e4f2073
  450365:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a023de
  45036b:	rex.XB
  45036c:	push   r11
  45036e:	rex.XB
  45036f:	rex.B
  450370:	rex.R
  450371:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450376:	rex.RB push r11
  450378:	push   rsp
  450379:	push   rdx
  45037a:	rex.WB
  45037b:	rex.XB push r12
  45037d:	and    BYTE PTR [rbp+0x0],bl
  450380:	rex.R push rdx
  450382:	rex.WRXB push r8
  450384:	and    BYTE PTR [rbx+0x43],dl
  450387:	rex.W
  450388:	rex.RB
  450389:	rex.WRB
  45038a:	and    BYTE PTR [r11+0x20],bl
  45038e:	rex.WB
  45038f:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450393:	rex.WB push r11
  450395:	push   rsp
  450396:	push   rbx
  450397:	and    BYTE PTR [rbp+0x20],bl
  45039a:	and    eax,0x2c5b2073
  45039f:	and    BYTE PTR [rsi],ch
  4503a1:	cs cs pop rbp
  4503a4:	and    BYTE PTR [rbx+0x20],bl
  4503a7:	rex.XB
  4503a8:	push   r11
  4503aa:	rex.XB
  4503ab:	rex.B
  4503ac:	rex.R
  4503ad:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4503b2:	rex.RB push r11
  4503b4:	push   rsp
  4503b5:	push   rdx
  4503b6:	rex.WB
  4503b7:	rex.XB push r12
  4503b9:	and    BYTE PTR [rbp+0x0],bl
  4503bc:	add    BYTE PTR [rax],al
  4503be:	add    BYTE PTR [rax],al
  4503c0:	rex.R push rdx
  4503c2:	rex.WRXB push r8
  4503c4:	and    BYTE PTR [rbx+0x45],dl
  4503c7:	push   rcx
  4503c8:	push   rbp
  4503c9:	rex.RB
  4503ca:	rex.WRX
  4503cb:	rex.XB
  4503cc:	and    BYTE PTR [r11+0x20],r11b
  4503d0:	rex.WB
  4503d1:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4503d5:	rex.WB push r11
  4503d7:	push   rsp
  4503d8:	push   rbx
  4503d9:	and    BYTE PTR [rbp+0x20],bl
  4503dc:	and    eax,0x2c5b2073
  4503e1:	and    BYTE PTR [rsi],ch
  4503e3:	cs cs pop rbp
  4503e6:	and    BYTE PTR [rbx+0x20],bl
  4503e9:	rex.XB
  4503ea:	push   r11
  4503ec:	rex.XB
  4503ed:	rex.B
  4503ee:	rex.R
  4503ef:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4503f4:	rex.RB push r11
  4503f6:	push   rsp
  4503f7:	push   rdx
  4503f8:	rex.WB
  4503f9:	rex.XB push r12
  4503fb:	and    BYTE PTR [rbp+0x0],bl
  4503fe:	add    BYTE PTR [rax],al
  450400:	rex.R push rdx
  450402:	rex.WRXB push r8
  450404:	and    BYTE PTR [rbx+0x45],dl
  450407:	push   rdx
  450408:	push   rsi
  450409:	rex.RB push r10
  45040b:	and    BYTE PTR [rbx+0x20],bl
  45040e:	rex.WB
  45040f:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450413:	rex.WB push r11
  450415:	push   rsp
  450416:	push   rbx
  450417:	and    BYTE PTR [rbp+0x20],bl
  45041a:	and    eax,0x205b2073
  45041f:	rex.XB
  450420:	push   r11
  450422:	rex.XB
  450423:	rex.B
  450424:	rex.R
  450425:	and    BYTE PTR [r8+riz*1+0x52],r15b
  45042a:	rex.RB push r11
  45042c:	push   rsp
  45042d:	push   rdx
  45042e:	rex.WB
  45042f:	rex.XB push r12
  450431:	and    BYTE PTR [rbp+0x0],bl
  450434:	add    BYTE PTR [rax],al
  450436:	add    BYTE PTR [rax],al
  450438:	rex.R push rdx
  45043a:	rex.WRXB push r8
  45043c:	and    BYTE PTR [rcx+rax*2+0x42],dl
  450440:	rex.WR
  450441:	and    BYTE PTR [r11+0x20],r11b
  450445:	rex.WB
  450446:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45044a:	rex.WB push r11
  45044c:	push   rsp
  45044d:	push   rbx
  45044e:	and    BYTE PTR [rbp+0x20],bl
  450451:	and    eax,0x2c5b2073
  450456:	and    BYTE PTR [rsi],ch
  450458:	cs cs pop rbp
  45045b:	and    BYTE PTR [rbx+0x20],bl
  45045e:	rex.XB
  45045f:	push   r11
  450461:	rex.XB
  450462:	rex.B
  450463:	rex.R
  450464:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450469:	rex.RB push r11
  45046b:	push   rsp
  45046c:	push   rdx
  45046d:	rex.WB
  45046e:	rex.XB push r12
  450470:	and    BYTE PTR [rbp+0x0],bl
  450473:	add    BYTE PTR [rax],al
  450475:	add    BYTE PTR [rax],al
  450477:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  45047b:	push   rax
  45047c:	and    BYTE PTR [rcx+rax*2+0x42],dl
  450480:	rex.WR
  450481:	rex.RB push r11
  450483:	push   rax
  450484:	rex.B
  450485:	rex.XB
  450486:	and    BYTE PTR [r11+0x20],r11b
  45048a:	rex.WB
  45048b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45048f:	rex.WB push r11
  450491:	push   rsp
  450492:	push   rbx
  450493:	and    BYTE PTR [rbp+0x20],bl
  450496:	and    eax,0x73
  45049b:	add    BYTE PTR [rax],al
  45049d:	add    BYTE PTR [rax],al
  45049f:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4504a3:	push   rax
  4504a4:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4504a8:	push   rsp
  4504a9:	and    BYTE PTR [rbx+0x45],dl
  4504ac:	push   r10
  4504ae:	rex.XB
  4504af:	rex.W and BYTE PTR [rbx+0x4f],al
  4504b3:	rex.WRX
  4504b4:	rex.RX
  4504b5:	rex.WB
  4504b6:	rex.RXB push r13
  4504b8:	push   rdx
  4504b9:	push   r12
  4504bb:	rex.WB
  4504bc:	rex.WRXB
  4504bd:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  4504c1:	rex.WB
  4504c2:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4504c6:	rex.WB push r11
  4504c8:	push   rsp
  4504c9:	push   rbx
  4504ca:	and    BYTE PTR [rbp+0x20],bl
  4504cd:	and    eax,0x205b2073
  4504d2:	rex.XB
  4504d3:	push   r11
  4504d5:	rex.XB
  4504d6:	rex.B
  4504d7:	rex.R
  4504d8:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4504dd:	rex.RB push r11
  4504df:	push   rsp
  4504e0:	push   rdx
  4504e1:	rex.WB
  4504e2:	rex.XB push r12
  4504e4:	and    BYTE PTR [rbp+0x0],bl
  4504e7:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4504eb:	push   rax
  4504ec:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4504f0:	push   rsp
  4504f1:	and    BYTE PTR [rbx+0x45],dl
  4504f4:	push   r10
  4504f6:	rex.XB
  4504f7:	rex.W and BYTE PTR [rcx+rcx*2+0x43],al
  4504fc:	push   rsp
  4504fd:	rex.WB
  4504fe:	rex.WRXB
  4504ff:	rex.WRX
  450500:	push   r10
  450502:	pop    rcx
  450503:	and    BYTE PTR [rbx+0x20],bl
  450506:	rex.WB
  450507:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45050b:	rex.WB push r11
  45050d:	push   rsp
  45050e:	push   rbx
  45050f:	and    BYTE PTR [rbp+0x20],bl
  450512:	and    eax,0x205b2073
  450517:	rex.XB
  450518:	push   r11
  45051a:	rex.XB
  45051b:	rex.B
  45051c:	rex.R
  45051d:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450522:	rex.RB push r11
  450524:	push   rsp
  450525:	push   rdx
  450526:	rex.WB
  450527:	rex.XB push r12
  450529:	and    BYTE PTR [rbp+0x0],bl
  45052c:	add    BYTE PTR [rax],al
  45052e:	add    BYTE PTR [rax],al
  450530:	rex.R push rdx
  450532:	rex.WRXB push r8
  450534:	and    BYTE PTR [rbp+rax*2+0x58],dl
  450538:	push   rsp
  450539:	and    BYTE PTR [rbx+0x45],dl
  45053c:	push   r10
  45053e:	rex.XB
  45053f:	rex.W and BYTE PTR [rax+0x41],dl
  450543:	push   rdx
  450544:	push   rbx
  450545:	rex.RB push r10
  450547:	and    BYTE PTR [rbx+0x20],bl
  45054a:	rex.WB
  45054b:	rex.RX and BYTE PTR [rbp+0x58],r8b
  45054f:	rex.WB push r11
  450551:	push   rsp
  450552:	push   rbx
  450553:	and    BYTE PTR [rbp+0x20],bl
  450556:	and    eax,0x205b2073
  45055b:	rex.XB
  45055c:	push   r11
  45055e:	rex.XB
  45055f:	rex.B
  450560:	rex.R
  450561:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450566:	rex.RB push r11
  450568:	push   rsp
  450569:	push   rdx
  45056a:	rex.WB
  45056b:	rex.XB push r12
  45056d:	and    BYTE PTR [rbp+0x0],bl
  450570:	rex.R push rdx
  450572:	rex.WRXB push r8
  450574:	and    BYTE PTR [rbp+rax*2+0x58],dl
  450578:	push   rsp
  450579:	and    BYTE PTR [rbx+0x45],dl
  45057c:	push   r10
  45057e:	rex.XB
  45057f:	rex.W and BYTE PTR [rbp+rax*2+0x4d],dl
  450584:	push   rax
  450585:	rex.WR
  450586:	push   r12
  450588:	and    BYTE PTR [r11+0x20],r11b
  45058c:	rex.WB
  45058d:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450591:	rex.WB push r11
  450593:	push   rsp
  450594:	push   rbx
  450595:	and    BYTE PTR [rbp+0x20],bl
  450598:	and    eax,0x205b2073
  45059d:	rex.XB
  45059e:	push   r11
  4505a0:	rex.XB
  4505a1:	rex.B
  4505a2:	rex.R
  4505a3:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4505a8:	rex.RB push r11
  4505aa:	push   rsp
  4505ab:	push   rdx
  4505ac:	rex.WB
  4505ad:	rex.XB push r12
  4505af:	and    BYTE PTR [rbp+0x0],bl
  4505b2:	add    BYTE PTR [rax],al
  4505b4:	add    BYTE PTR [rax],al
  4505b6:	add    BYTE PTR [rax],al
  4505b8:	rex.R push rdx
  4505ba:	rex.WRXB push r8
  4505bc:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  4505c0:	rex.RXB
  4505c1:	rex.RXB
  4505c2:	rex.RB push r10
  4505c4:	and    BYTE PTR [rbx+0x20],bl
  4505c7:	rex.WB
  4505c8:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4505cc:	rex.WB push r11
  4505ce:	push   rsp
  4505cf:	push   rbx
  4505d0:	and    BYTE PTR [rbp+0x20],bl
  4505d3:	and    eax,0x4e4f2073
  4505d8:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a02651
  4505de:	rex.XB
  4505df:	push   r11
  4505e1:	rex.XB
  4505e2:	rex.B
  4505e3:	rex.R
  4505e4:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4505e9:	rex.RB push r11
  4505eb:	push   rsp
  4505ec:	push   rdx
  4505ed:	rex.WB
  4505ee:	rex.XB push r12
  4505f0:	and    BYTE PTR [rbp+0x0],bl
  4505f3:	add    BYTE PTR [rax],al
  4505f5:	add    BYTE PTR [rax],al
  4505f7:	add    BYTE PTR [rdx+rdx*2+0x4f],al
  4505fb:	push   rax
  4505fc:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  450600:	and    BYTE PTR [r11+0x20],r11b
  450604:	rex.WB
  450605:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450609:	rex.WB push r11
  45060b:	push   rsp
  45060c:	push   rbx
  45060d:	and    BYTE PTR [rbp+0x20],bl
  450610:	and    eax,0x2c5b2073
  450615:	and    BYTE PTR [rsi],ch
  450617:	cs cs pop rbp
  45061a:	and    BYTE PTR [rbx+0x20],bl
  45061d:	rex.XB
  45061e:	push   r11
  450620:	rex.XB
  450621:	rex.B
  450622:	rex.R
  450623:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450628:	rex.RB push r11
  45062a:	push   rsp
  45062b:	push   rdx
  45062c:	rex.WB
  45062d:	rex.XB push r12
  45062f:	and    BYTE PTR [rbp+0x0],bl
  450632:	add    BYTE PTR [rax],al
  450634:	add    BYTE PTR [rax],al
  450636:	add    BYTE PTR [rax],al
  450638:	rex.R push rdx
  45063a:	rex.WRXB push r8
  45063c:	and    BYTE PTR [rbp+0x53],dl
  45063f:	rex.RB push r10
  450641:	and    BYTE PTR [rbx+0x20],bl
  450644:	rex.WB
  450645:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450649:	rex.WB push r11
  45064b:	push   rsp
  45064c:	push   rbx
  45064d:	and    BYTE PTR [rbp+0x20],bl
  450650:	and    eax,0x2c5b2073
  450655:	and    BYTE PTR [rsi],ch
  450657:	cs cs pop rbp
  45065a:	add    BYTE PTR [rax],al
  45065c:	add    BYTE PTR [rax],al
  45065e:	add    BYTE PTR [rax],al
  450660:	rex.R push rdx
  450662:	rex.WRXB push r8
  450664:	and    BYTE PTR [rbp+0x53],dl
  450667:	rex.RB push r10
  450669:	and    BYTE PTR [rbp+0x41],cl
  45066c:	push   rax
  45066d:	push   rax
  45066e:	rex.WB
  45066f:	rex.WRX
  450670:	rex.RXB and BYTE PTR [r11+0x20],r11b
  450674:	rex.WB
  450675:	rex.RX and BYTE PTR [rbp+0x58],r8b
  450679:	rex.WB push r11
  45067b:	push   rsp
  45067c:	push   rbx
  45067d:	and    BYTE PTR [rbp+0x20],bl
  450680:	rex.RX
  450681:	rex.WRXB push r10
  450683:	and    BYTE PTR [rbx+0x20],bh
  450686:	and    eax,0x207c2073
  45068b:	push   rbp
  45068c:	push   rbx
  45068d:	rex.RB push r10
  45068f:	and    BYTE PTR [rax+riz*1+0x43],bh
  450693:	push   rbp
  450694:	push   rdx
  450695:	push   rdx
  450696:	rex.RB
  450697:	rex.WRX push rsp
  450699:	pop    rdi
  45069a:	push   rbp
  45069b:	push   rbx
  45069c:	rex.RB push r10
  45069e:	and    BYTE PTR [rax+riz*1+0x50],bh
  4506a2:	push   rbp
  4506a3:	rex.X
  4506a4:	rex.WR
  4506a5:	rex.WB
  4506a6:	rex.XB and BYTE PTR [r13+0x20],dil
  4506aa:	push   rbx
  4506ab:	rex.RB push r10
  4506ad:	push   rsi
  4506ae:	rex.RB push r10
  4506b0:	and    BYTE PTR [rip+0x73],ah        # 0x450729
  4506b6:	add    BYTE PTR [rax],al
  4506b8:	rex.R push rdx
  4506ba:	rex.WRXB push r8
  4506bc:	and    BYTE PTR [rsi+0x49],dl
  4506bf:	rex.RB push r15
  4506c1:	and    BYTE PTR [rbx+0x20],bl
  4506c4:	rex.WB
  4506c5:	rex.RX and BYTE PTR [rbp+0x58],r8b
  4506c9:	rex.WB push r11
  4506cb:	push   rsp
  4506cc:	push   rbx
  4506cd:	and    BYTE PTR [rbp+0x20],bl
  4506d0:	and    eax,0x2c5b2073
  4506d5:	and    BYTE PTR [rsi],ch
  4506d7:	cs cs pop rbp
  4506da:	and    BYTE PTR [rbx+0x20],bl
  4506dd:	rex.XB
  4506de:	push   r11
  4506e0:	rex.XB
  4506e1:	rex.B
  4506e2:	rex.R
  4506e3:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4506e8:	rex.RB push r11
  4506ea:	push   rsp
  4506eb:	push   rdx
  4506ec:	rex.WB
  4506ed:	rex.XB push r12
  4506ef:	and    BYTE PTR [rbp+0x0],bl
  4506f2:	rex.RB
  4506f3:	rex.WRX
  4506f4:	and    BYTE PTR [rbx+0x20],r11b
  4506f8:	push   rdi
  4506f9:	rex.WRXB push r10
  4506fb:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  450700:	push   rdx
  450701:	rex.B
  450702:	rex.WRX push rbx
  450704:	rex.B
  450705:	rex.XB push r12
  450707:	rex.WB
  450708:	rex.WRXB
  450709:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  45070d:	jo     0x450770
  45070f:	jb     0x450772
  450711:	ins    DWORD PTR es:[rdi],dx
  450712:	gs je  0x45077a
  450715:	jb     0x450717
  450717:	rex.RB pop r8
  450719:	rex.RB
  45071a:	rex.XB push r13
  45071c:	push   rsp
  45071d:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a02797
  450724:	sub    BYTE PTR [rax],ah
  450726:	and    eax,0x2c5b2073
  45072b:	and    BYTE PTR [rsi],ch
  45072d:	cs cs pop rbp
  450730:	and    BYTE PTR [rcx],ch
  450732:	and    BYTE PTR [rbp+0x0],bl
  450735:	jae    0x4507ab
  450737:	(bad)  
  450738:	je     0x45079f
  45073a:	ins    DWORD PTR es:[rdi],dx
  45073b:	outs   dx,BYTE PTR gs:[rsi]
  45073d:	je     0x45073f
  45073f:	add    BYTE PTR [rbp+0x58],al
  450742:	push   rax
  450743:	rex.WR
  450744:	rex.B
  450745:	rex.WB
  450746:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  45074a:	sub    BYTE PTR [rax],ah
  45074c:	and    eax,0x2c5b2073
  450751:	and    BYTE PTR [rsi],ch
  450753:	cs cs pop rbp
  450756:	and    BYTE PTR [rcx],ch
  450758:	and    BYTE PTR [rbp+0x20],bl
  45075b:	and    eax,0x58450a73
  450760:	push   rax
  450761:	rex.WR
  450762:	rex.B
  450763:	rex.WB
  450764:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  450768:	rex.B
  450769:	rex.WRX
  45076a:	rex.B
  45076b:	rex.WR pop rcx
  45076d:	pop    rdx
  45076e:	and    BYTE PTR [r13+0x20],r11b
  450772:	pop    rbx
  450773:	and    BYTE PTR [rsi+0x45],dl
  450776:	push   rdx
  450777:	rex.X
  450778:	rex.WRXB push r11
  45077a:	and    BYTE PTR [r13+0x20],r11b
  45077e:	and    eax,0x250a0a73
  450783:	jae    0x45078f
  450785:	or     ah,BYTE PTR [rax]
  450787:	and    BYTE PTR [rax],ah
  450789:	and    BYTE PTR [rcx+0x4e],al
  45078c:	rex.B
  45078d:	rex.WR pop rcx
  45078f:	pop    rdx
  450790:	and    BYTE PTR [r11+0x20],r11b
  450794:	and    eax,0xa5d2073
  450799:	and    BYTE PTR [rax],ah
  45079b:	and    BYTE PTR [rax],ah
  45079d:	push   rsi
  45079e:	rex.RB push r10
  4507a0:	rex.X
  4507a1:	rex.WRXB push r11
  4507a3:	and    BYTE PTR [r11+0x20],r11b
  4507a7:	and    eax,0xa5d2073
  4507ac:	and    BYTE PTR [rax],ah
  4507ae:	and    BYTE PTR [rax],ah
  4507b0:	rex.XB
  4507b1:	rex.WRXB push r11
  4507b3:	push   rsp
  4507b4:	push   rbx
  4507b5:	and    BYTE PTR [rbx+0x20],bl
  4507b8:	and    eax,0xa5d2073
  4507bd:	and    BYTE PTR [rax],ah
  4507bf:	and    BYTE PTR [rax],ah
  4507c1:	rex.X push rbp
  4507c3:	rex.RX
  4507c4:	rex.RX
  4507c5:	rex.RB push r10
  4507c7:	push   rbx
  4507c8:	and    BYTE PTR [rbx+0x20],bl
  4507cb:	and    eax,0xa5d2073
  4507d0:	and    BYTE PTR [rax],ah
  4507d2:	and    BYTE PTR [rax],ah
  4507d4:	push   rsp
  4507d5:	rex.WB
  4507d6:	rex.WRB
  4507d7:	rex.WB
  4507d8:	rex.WRX
  4507d9:	rex.RXB and BYTE PTR [r11+0x20],r11b
  4507dd:	and    eax,0xa5d2073
  4507e2:	and    BYTE PTR [rax],ah
  4507e4:	and    BYTE PTR [rax],ah
  4507e6:	rex.RX
  4507e7:	rex.WRXB push r10
  4507e9:	rex.WRB
  4507ea:	push   r12
  4507ec:	and    BYTE PTR [rbx+0x20],bh
  4507ef:	push   rsp
  4507f0:	rex.RB pop r8
  4507f2:	push   rsp
  4507f3:	and    BYTE PTR [rax+riz*1+0x58],bh
  4507f7:	rex.WRB
  4507f8:	rex.WR and BYTE PTR [rax+riz*1+0x4a],r15b
  4507fd:	push   rbx
  4507fe:	rex.WRXB
  4507ff:	rex.WRX and BYTE PTR [rax+r12*1+0x59],r15b
  450804:	rex.B
  450805:	rex.WRB
  450806:	rex.WR and BYTE PTR [rbp+0x0],r15b
  45080a:	imul   esi,DWORD PTR fs:[rdx+0x65],0x6f697463
  450812:	outs   dx,BYTE PTR ds:[rsi]
  450813:	add    BYTE PTR [rax],al
  450815:	add    BYTE PTR [rax],al
  450817:	add    BYTE PTR [rsi+0x45],al
  45081a:	push   rsp
  45081b:	rex.XB
  45081c:	rex.W and BYTE PTR [rbx+0x20],bl
  450820:	and    eax,0x205b2073
  450825:	rex.RX push rdx
  450827:	rex.WRXB
  450828:	rex.WRB and BYTE PTR [r8+riz*1+0x49],r15b
  45082d:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  450831:	pop    rbp
  450832:	and    BYTE PTR [rip+0x250a0a73],ah        # 0x254f12ab
  450838:	jae    0x450844
  45083a:	or     ah,BYTE PTR [rax]
  45083c:	and    BYTE PTR [rax],ah
  45083e:	and    BYTE PTR [rsi+0x45],cl
  450841:	pop    rax
  450842:	push   rsp
  450843:	or     ah,BYTE PTR [rax]
  450845:	and    BYTE PTR [rax],ah
  450847:	and    BYTE PTR [rax+0x52],dl
  45084a:	rex.WB
  45084b:	rex.WRXB push r10
  45084d:	or     ah,BYTE PTR [rax]
  45084f:	and    BYTE PTR [rax],ah
  450851:	and    BYTE PTR [rsi+0x49],al
  450854:	push   rdx
  450855:	push   rbx
  450856:	push   rsp
  450857:	or     ah,BYTE PTR [rax]
  450859:	and    BYTE PTR [rax],ah
  45085b:	and    BYTE PTR [rcx+rax*2+0x53],cl
  45085f:	push   rsp
  450860:	or     ah,BYTE PTR [rax]
  450862:	and    BYTE PTR [rax],ah
  450864:	and    BYTE PTR [rcx+0x42],al
  450867:	push   rbx
  450868:	rex.WRXB
  450869:	rex.WR push rbp
  45086b:	push   rsp
  45086c:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x206512e6
  450873:	and    BYTE PTR [rax],ah
  450875:	push   rdx
  450876:	rex.RB
  450877:	rex.WR
  450878:	push   r12
  45087a:	rex.WB push r14
  45087c:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x206512f6
  450883:	and    BYTE PTR [rax],ah
  450885:	and    eax,0x20200a73
  45088a:	and    BYTE PTR [rax],ah
  45088c:	rex.B
  45088d:	rex.WR
  45088e:	rex.WR or r12b,BYTE PTR [rax]
  450891:	and    BYTE PTR [rax],ah
  450893:	and    BYTE PTR [rsi+0x4f],al
  450896:	push   rdx
  450897:	push   rdi
  450898:	push   r10
  45089a:	or     r12b,BYTE PTR [rax]
  45089d:	and    BYTE PTR [rax],ah
  45089f:	and    BYTE PTR [rsi+0x4f],al
  4508a2:	push   rdx
  4508a3:	push   rdi
  4508a4:	push   r10
  4508a6:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20651320
  4508ad:	and    BYTE PTR [rax],ah
  4508af:	rex.RX
  4508b0:	rex.WRXB push r10
  4508b2:	push   rdi
  4508b3:	push   r10
  4508b5:	and    BYTE PTR [rcx+0x4c],r8b
  4508b9:	rex.WR or r12b,BYTE PTR [rax]
  4508bc:	and    BYTE PTR [rax],ah
  4508be:	and    BYTE PTR [rdx+0x41],al
  4508c1:	rex.XB
  4508c2:	rex.WXB push r15
  4508c4:	push   r10
  4508c6:	or     r12b,BYTE PTR [rax]
  4508c9:	and    BYTE PTR [rax],ah
  4508cb:	and    BYTE PTR [rdx+0x41],al
  4508ce:	rex.XB
  4508cf:	rex.WXB push r15
  4508d1:	push   r10
  4508d3:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x2065134d
  4508da:	and    BYTE PTR [rax],ah
  4508dc:	rex.X
  4508dd:	rex.B
  4508de:	rex.XB
  4508df:	rex.WXB push r15
  4508e1:	push   r10
  4508e3:	and    BYTE PTR [rcx+0x4c],r8b
  4508e7:	rex.WR add BYTE PTR [rbx+0x6f],r12b
  4508eb:	jne    0x45095b
  4508ed:	je     0x4508ef
  4508ef:	add    BYTE PTR [rdi+0x68],dh
  4508f2:	gs jb  0x45095a
  4508f5:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  4508f9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4508fe:	outs   dx,BYTE PTR ds:[rsi]
  4508ff:	and    BYTE PTR [rbx+0x61],ah
  450902:	outs   dx,BYTE PTR ds:[rsi]
  450903:	and    BYTE PTR [rdx+0x65],ah
  450906:	and    BYTE PTR [rbp+0x6d],ah
  450909:	jo     0x45097f
  45090b:	jns    0x45092d
  45090d:	outs   dx,DWORD PTR ds:[rsi]
  45090e:	jb     0x450930
  450910:	outs   dx,DWORD PTR ds:[rsi]
  450911:	outs   dx,BYTE PTR ds:[rsi]
  450912:	and    BYTE PTR gs:[rdi+0x66],ch
  450916:	cmp    al,BYTE PTR [rax]
  450918:	rex.RXB push r10
  45091a:	rex.B
  45091b:	rex.WRX push rsp
  45091d:	and    BYTE PTR [rbx+0x20],bh
  450920:	jnp    0x450942
  450922:	push   rbx
  450923:	rex.RB
  450924:	rex.WR
  450925:	rex.RB
  450926:	rex.XB push r12
  450928:	and    BYTE PTR [rax+riz*1+0x49],bh
  45092c:	rex.WRX push rbx
  45092e:	rex.RB push r10
  450930:	push   rsp
  450931:	and    BYTE PTR [rax+riz*1+0x55],bh
  450935:	push   rax
  450936:	rex.R
  450937:	push   r12
  450939:	and    BYTE PTR [r8+riz*1+0x44],r15b
  45093e:	rex.RB
  45093f:	rex.WR
  450940:	rex.RB push r12
  450942:	and    BYTE PTR [r8+riz*1+0x54],r15b
  450947:	push   rdx
  450948:	push   rbp
  450949:	rex.WRX
  45094a:	rex.XB
  45094b:	push   r12
  45094d:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450952:	rex.RB
  450953:	rex.RX
  450954:	rex.RB push r10
  450956:	rex.RB
  450957:	rex.WRX
  450958:	rex.XB
  450959:	rex.RB push r11
  45095b:	and    BYTE PTR [rax+riz*1+0x54],bh
  45095f:	push   rdx
  450960:	rex.WB
  450961:	rex.RXB
  450962:	rex.RXB
  450963:	rex.RB push r10
  450965:	and    BYTE PTR [rbp+0xa],bh
  450968:	and    BYTE PTR [rax],ah
  45096a:	and    BYTE PTR [rax],ah
  45096c:	pop    rbx
  45096d:	sub    al,0x20
  45096f:	cs cs cs pop rbp
  450973:	and    BYTE PTR [rax+riz*1+0x41],bh
  450977:	rex.WR
  450978:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45097c:	push   rax
  45097d:	push   rdx
  45097e:	rex.WB push r14
  450980:	rex.WB
  450981:	rex.WR
  450982:	rex.RB
  450983:	rex.RXB
  450984:	rex.RB push r11
  450986:	and    BYTE PTR [rbp+0x20],bl
  450989:	jge    0x450995
  45098b:	and    BYTE PTR [rax],ah
  45098d:	and    BYTE PTR [rax],ah
  45098f:	rex.WRXB
  450990:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  450994:	pop    rbx
  450995:	and    BYTE PTR [rcx+rax*2+0x42],dl
  450999:	rex.WR
  45099a:	and    BYTE PTR [r13+0x20],r11b
  45099e:	and    eax,0x2c5b2073
  4509a3:	and    BYTE PTR [rsi],ch
  4509a5:	cs cs pop rbp
  4509a8:	or     ah,BYTE PTR [rax]
  4509aa:	and    BYTE PTR [rax],ah
  4509ac:	and    BYTE PTR [rax],ah
  4509ae:	and    BYTE PTR [rax],ah
  4509b0:	and    BYTE PTR [rax],ah
  4509b2:	jl     0x4509d4
  4509b4:	rex.B
  4509b5:	rex.WR
  4509b6:	rex.WR and BYTE PTR [rcx+rax*2+0x42],r10b
  4509bb:	rex.WR
  4509bc:	rex.RB push r11
  4509be:	and    BYTE PTR [rcx+0x4e],cl
  4509c1:	and    BYTE PTR [rbx+0x43],dl
  4509c4:	rex.W
  4509c5:	rex.RB
  4509c6:	rex.WRB
  4509c7:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca02a41
  4509ce:	and    BYTE PTR [rsi],ch
  4509d0:	cs cs pop rbp
  4509d3:	and    BYTE PTR [rbp+0xa],bh
  4509d6:	and    BYTE PTR [rax],ah
  4509d8:	and    BYTE PTR [rax],ah
  4509da:	push   rsp
  4509db:	rex.WRXB and BYTE PTR [r11+0x20],r15b
  4509df:	pop    rbx
  4509e0:	and    BYTE PTR [rdi+0x52],al
  4509e3:	rex.WRXB push r13
  4509e5:	push   rax
  4509e6:	and    BYTE PTR [rbp+0x20],bl
  4509e9:	and    eax,0x207c2073
  4509ee:	push   rax
  4509ef:	push   rbp
  4509f0:	rex.X
  4509f1:	rex.WR
  4509f2:	rex.WB
  4509f3:	rex.XB and BYTE PTR [r13+0x20],dil
  4509f7:	pop    rbx
  4509f8:	sub    al,0x20
  4509fa:	cs cs cs pop rbp
  4509fe:	and    BYTE PTR [rbx+0x20],bl
  450a01:	push   rdi
  450a02:	rex.WB push r12
  450a04:	rex.W and BYTE PTR [rdi+0x52],al
  450a08:	rex.B
  450a09:	rex.WRX push rsp
  450a0b:	and    BYTE PTR [rdi+0x50],cl
  450a0e:	push   rsp
  450a0f:	rex.WB
  450a10:	rex.WRXB
  450a11:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450a15:	or     al,BYTE PTR [rdi+0x52]
  450a18:	rex.B
  450a19:	rex.WRX push rsp
  450a1b:	and    BYTE PTR [rbx+0x20],bh
  450a1e:	jnp    0x450a40
  450a20:	push   rbx
  450a21:	rex.RB
  450a22:	rex.WR
  450a23:	rex.RB
  450a24:	rex.XB push r12
  450a26:	and    BYTE PTR [rax+riz*1+0x49],bh
  450a2a:	rex.WRX push rbx
  450a2c:	rex.RB push r10
  450a2e:	push   rsp
  450a2f:	and    BYTE PTR [rax+riz*1+0x55],bh
  450a33:	push   rax
  450a34:	rex.R
  450a35:	push   r12
  450a37:	and    BYTE PTR [r8+riz*1+0x52],r15b
  450a3c:	rex.RB
  450a3d:	rex.RX
  450a3e:	rex.RB push r10
  450a40:	rex.RB
  450a41:	rex.WRX
  450a42:	rex.XB
  450a43:	rex.RB push r11
  450a45:	and    BYTE PTR [rbp+0x20],bh
  450a48:	sub    BYTE PTR [rax],ah
  450a4a:	and    eax,0x2c5b2073
  450a4f:	and    BYTE PTR [rsi],ch
  450a51:	cs cs pop rbp
  450a54:	and    BYTE PTR [rcx],ch
  450a56:	or     ah,BYTE PTR [rax]
  450a58:	and    BYTE PTR [rax],ah
  450a5a:	and    BYTE PTR [rbx+0x2c],bl
  450a5d:	and    BYTE PTR [rsi],ch
  450a5f:	cs cs pop rbp
  450a62:	and    BYTE PTR [rax+riz*1+0x41],bh
  450a66:	rex.WR
  450a67:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450a6b:	push   rax
  450a6c:	push   rdx
  450a6d:	rex.WB push r14
  450a6f:	rex.WB
  450a70:	rex.WR
  450a71:	rex.RB
  450a72:	rex.RXB
  450a73:	rex.RB push r11
  450a75:	and    BYTE PTR [rbp+0x20],bl
  450a78:	sub    BYTE PTR [rax],ah
  450a7a:	and    eax,0x2c5b2073
  450a7f:	and    BYTE PTR [rsi],ch
  450a81:	cs cs pop rbp
  450a84:	and    BYTE PTR [rcx],ch
  450a86:	and    BYTE PTR [rbp+0xa],bh
  450a89:	and    BYTE PTR [rax],ah
  450a8b:	and    BYTE PTR [rax],ah
  450a8d:	rex.WRXB
  450a8e:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  450a92:	push   rsp
  450a93:	rex.B
  450a94:	rex.X
  450a95:	rex.WR
  450a96:	and    BYTE PTR [r13+0x20],r11b
  450a9a:	and    eax,0x2c5b2073
  450a9f:	and    BYTE PTR [rsi],ch
  450aa1:	cs cs pop rbp
  450aa4:	or     ah,BYTE PTR [rax]
  450aa6:	and    BYTE PTR [rax],ah
  450aa8:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450aac:	jnp    0x450ace
  450aae:	pop    rbx
  450aaf:	and    BYTE PTR [rdi+0x52],al
  450ab2:	rex.WRXB push r13
  450ab4:	push   rax
  450ab5:	and    BYTE PTR [rbp+0x20],bl
  450ab8:	and    eax,0x207c2073
  450abd:	push   rax
  450abe:	push   rbp
  450abf:	rex.X
  450ac0:	rex.WR
  450ac1:	rex.WB
  450ac2:	rex.XB and BYTE PTR [r13+0x20],dil
  450ac6:	pop    rbx
  450ac7:	sub    al,0x20
  450ac9:	cs cs cs pop rbp
  450acd:	and    BYTE PTR [rbx+0x20],bl
  450ad0:	push   rdi
  450ad1:	rex.WB push r12
  450ad3:	rex.W and BYTE PTR [rdi+0x52],al
  450ad7:	rex.B
  450ad8:	rex.WRX push rsp
  450ada:	and    BYTE PTR [rdi+0x50],cl
  450add:	push   rsp
  450ade:	rex.WB
  450adf:	rex.WRXB
  450ae0:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450ae4:	or     al,BYTE PTR [rdi+0x52]
  450ae7:	rex.B
  450ae8:	rex.WRX push rsp
  450aea:	and    BYTE PTR [rbx+0x20],bh
  450aed:	jnp    0x450b0f
  450aef:	push   rbp
  450af0:	push   rbx
  450af1:	rex.B
  450af2:	rex.RXB
  450af3:	and    BYTE PTR [r8+riz*1+0x53],r15b
  450af8:	rex.RB
  450af9:	rex.WR
  450afa:	rex.RB
  450afb:	rex.XB push r12
  450afd:	and    BYTE PTR [rax+riz*1+0x55],bh
  450b01:	push   rax
  450b02:	rex.R
  450b03:	push   r12
  450b05:	and    BYTE PTR [r13+0xa],r15b
  450b09:	and    BYTE PTR [rax],ah
  450b0b:	and    BYTE PTR [rax],ah
  450b0d:	pop    rbx
  450b0e:	sub    al,0x20
  450b10:	cs cs cs pop rbp
  450b14:	and    BYTE PTR [rax+riz*1+0x41],bh
  450b18:	rex.WR
  450b19:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450b1d:	push   rax
  450b1e:	push   rdx
  450b1f:	rex.WB push r14
  450b21:	rex.WB
  450b22:	rex.WR
  450b23:	rex.RB
  450b24:	rex.RXB
  450b25:	rex.RB push r11
  450b27:	and    BYTE PTR [rbp+0x20],bl
  450b2a:	jge    0x450b36
  450b2c:	and    BYTE PTR [rax],ah
  450b2e:	and    BYTE PTR [rax],ah
  450b30:	rex.WRXB
  450b31:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  450b35:	push   rbx
  450b36:	rex.RB push r9
  450b38:	push   rbp
  450b39:	rex.RB
  450b3a:	rex.WRX
  450b3b:	rex.XB
  450b3c:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca02bb6
  450b43:	and    BYTE PTR [rsi],ch
  450b45:	cs cs pop rbp
  450b48:	or     ah,BYTE PTR [rax]
  450b4a:	and    BYTE PTR [rax],ah
  450b4c:	and    BYTE PTR [rax],ah
  450b4e:	and    BYTE PTR [rax],ah
  450b50:	and    BYTE PTR [rax],ah
  450b52:	jl     0x450b74
  450b54:	rex.B
  450b55:	rex.WR
  450b56:	rex.WR and BYTE PTR [rbx+0x45],r10b
  450b5a:	push   rcx
  450b5b:	push   rbp
  450b5c:	rex.RB
  450b5d:	rex.WRX
  450b5e:	rex.XB
  450b5f:	rex.RB push r11
  450b61:	and    BYTE PTR [rcx+0x4e],cl
  450b64:	and    BYTE PTR [rbx+0x43],dl
  450b67:	rex.W
  450b68:	rex.RB
  450b69:	rex.WRB
  450b6a:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca02be4
  450b71:	and    BYTE PTR [rsi],ch
  450b73:	cs cs pop rbp
  450b76:	and    BYTE PTR [rbp+0xa],bh
  450b79:	and    BYTE PTR [rax],ah
  450b7b:	and    BYTE PTR [rax],ah
  450b7d:	push   rsp
  450b7e:	rex.WRXB and BYTE PTR [r11+0x20],r15b
  450b82:	pop    rbx
  450b83:	and    BYTE PTR [rdi+0x52],al
  450b86:	rex.WRXB push r13
  450b88:	push   rax
  450b89:	and    BYTE PTR [rbp+0x20],bl
  450b8c:	and    eax,0x207c2073
  450b91:	push   rax
  450b92:	push   rbp
  450b93:	rex.X
  450b94:	rex.WR
  450b95:	rex.WB
  450b96:	rex.XB and BYTE PTR [r13+0x20],dil
  450b9a:	pop    rbx
  450b9b:	sub    al,0x20
  450b9d:	cs cs cs pop rbp
  450ba1:	and    BYTE PTR [rbx+0x20],bl
  450ba4:	push   rdi
  450ba5:	rex.WB push r12
  450ba7:	rex.W and BYTE PTR [rdi+0x52],al
  450bab:	rex.B
  450bac:	rex.WRX push rsp
  450bae:	and    BYTE PTR [rdi+0x50],cl
  450bb1:	push   rsp
  450bb2:	rex.WB
  450bb3:	rex.WRXB
  450bb4:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450bb8:	or     al,BYTE PTR [rdi+0x52]
  450bbb:	rex.B
  450bbc:	rex.WRX push rsp
  450bbe:	and    BYTE PTR [rbx+0x20],bh
  450bc1:	jnp    0x450be3
  450bc3:	rex.XB push r10
  450bc5:	rex.RB
  450bc6:	push   r12
  450bc8:	and    BYTE PTR [r8+riz*1+0x43],r15b
  450bcd:	rex.WRXB
  450bce:	rex.WRX
  450bcf:	rex.WRX
  450bd0:	rex.RB
  450bd1:	rex.XB push r12
  450bd3:	and    BYTE PTR [rax+riz*1+0x54],bh
  450bd7:	rex.RB
  450bd8:	rex.WRB push r8
  450bda:	rex.WRXB push r10
  450bdc:	push   r10
  450bde:	pop    rcx
  450bdf:	and    BYTE PTR [rax+riz*1+0x54],bh
  450be3:	rex.RB
  450be4:	rex.WRB push r8
  450be6:	and    BYTE PTR [rbp+0x20],bh
  450be9:	pop    rbx
  450bea:	sub    al,0x20
  450bec:	cs cs cs pop rbp
  450bf0:	and    BYTE PTR [rax+riz*1+0x41],bh
  450bf4:	rex.WR
  450bf5:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450bf9:	push   rax
  450bfa:	push   rdx
  450bfb:	rex.WB push r14
  450bfd:	rex.WB
  450bfe:	rex.WR
  450bff:	rex.RB
  450c00:	rex.RXB
  450c01:	rex.RB push r11
  450c03:	and    BYTE PTR [rbp+0x20],bl
  450c06:	jge    0x450c12
  450c08:	and    BYTE PTR [rax],ah
  450c0a:	and    BYTE PTR [rax],ah
  450c0c:	rex.WRXB
  450c0d:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  450c12:	rex.B
  450c13:	rex.X
  450c14:	push   r11
  450c16:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca02c90
  450c1d:	and    BYTE PTR [rsi],ch
  450c1f:	cs cs pop rbp
  450c22:	or     ah,BYTE PTR [rax]
  450c24:	and    BYTE PTR [rax],ah
  450c26:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450c2a:	jnp    0x450c4c
  450c2c:	pop    rbx
  450c2d:	and    BYTE PTR [rdi+0x52],al
  450c30:	rex.WRXB push r13
  450c32:	push   rax
  450c33:	and    BYTE PTR [rbp+0x20],bl
  450c36:	and    eax,0x207c2073
  450c3b:	push   rax
  450c3c:	push   rbp
  450c3d:	rex.X
  450c3e:	rex.WR
  450c3f:	rex.WB
  450c40:	rex.XB and BYTE PTR [r13+0x20],dil
  450c44:	pop    rbx
  450c45:	sub    al,0x20
  450c47:	cs cs cs pop rbp
  450c4b:	and    BYTE PTR [rbx+0x20],bl
  450c4e:	push   rdi
  450c4f:	rex.WB push r12
  450c51:	rex.W and BYTE PTR [rdi+0x52],al
  450c55:	rex.B
  450c56:	rex.WRX push rsp
  450c58:	and    BYTE PTR [rdi+0x50],cl
  450c5b:	push   rsp
  450c5c:	rex.WB
  450c5d:	rex.WRXB
  450c5e:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450c62:	or     al,BYTE PTR [rdi+0x52]
  450c65:	rex.B
  450c66:	rex.WRX push rsp
  450c68:	and    BYTE PTR [rbx+0x20],bh
  450c6b:	push   rbp
  450c6c:	push   rbx
  450c6d:	rex.B
  450c6e:	rex.RXB
  450c6f:	and    BYTE PTR [r8+riz*1+0x41],r15b
  450c74:	rex.WR
  450c75:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450c79:	push   rax
  450c7a:	push   rdx
  450c7b:	rex.WB push r14
  450c7d:	rex.WB
  450c7e:	rex.WR
  450c7f:	rex.RB
  450c80:	rex.RXB
  450c81:	rex.RB push r11
  450c83:	and    BYTE PTR [rbp+0x20],bl
  450c86:	jge    0x450c92
  450c88:	and    BYTE PTR [rax],ah
  450c8a:	and    BYTE PTR [rax],ah
  450c8c:	rex.WRXB
  450c8d:	rex.WRX and BYTE PTR [rdi+r9*2+0x4d],r8b
  450c92:	rex.B
  450c93:	rex.WB
  450c94:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca02d0e
  450c9b:	and    BYTE PTR [rsi],ch
  450c9d:	cs cs pop rbp
  450ca0:	or     ah,BYTE PTR [rax]
  450ca2:	and    BYTE PTR [rax],ah
  450ca4:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450ca8:	jnp    0x450cca
  450caa:	pop    rbx
  450cab:	and    BYTE PTR [rdi+0x52],al
  450cae:	rex.WRXB push r13
  450cb0:	push   rax
  450cb1:	and    BYTE PTR [rbp+0x20],bl
  450cb4:	and    eax,0x207c2073
  450cb9:	push   rax
  450cba:	push   rbp
  450cbb:	rex.X
  450cbc:	rex.WR
  450cbd:	rex.WB
  450cbe:	rex.XB and BYTE PTR [r13+0x20],dil
  450cc2:	pop    rbx
  450cc3:	sub    al,0x20
  450cc5:	cs cs cs pop rbp
  450cc9:	and    BYTE PTR [rbx+0x20],bl
  450ccc:	push   rdi
  450ccd:	rex.WB push r12
  450ccf:	rex.W and BYTE PTR [rdi+0x52],al
  450cd3:	rex.B
  450cd4:	rex.WRX push rsp
  450cd6:	and    BYTE PTR [rdi+0x50],cl
  450cd9:	push   rsp
  450cda:	rex.WB
  450cdb:	rex.WRXB
  450cdc:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450ce0:	or     al,BYTE PTR [rdi+0x52]
  450ce3:	rex.B
  450ce4:	rex.WRX push rsp
  450ce6:	and    BYTE PTR [rbx+0x20],bh
  450ce9:	push   rbp
  450cea:	push   rbx
  450ceb:	rex.B
  450cec:	rex.RXB
  450ced:	and    BYTE PTR [r8+riz*1+0x41],r15b
  450cf2:	rex.WR
  450cf3:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450cf7:	push   rax
  450cf8:	push   rdx
  450cf9:	rex.WB push r14
  450cfb:	rex.WB
  450cfc:	rex.WR
  450cfd:	rex.RB
  450cfe:	rex.RXB
  450cff:	rex.RB push r11
  450d01:	and    BYTE PTR [rbp+0x20],bl
  450d04:	jge    0x450d10
  450d06:	and    BYTE PTR [rax],ah
  450d08:	and    BYTE PTR [rax],ah
  450d0a:	rex.WRXB
  450d0b:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  450d0f:	push   rdx
  450d10:	rex.RB
  450d11:	rex.WB
  450d12:	rex.RXB
  450d13:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  450d18:	and    BYTE PTR [r15+0x52],dl
  450d1c:	push   r8
  450d1e:	push   rax
  450d1f:	rex.RB push r10
  450d21:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca02d9a
  450d27:	and    BYTE PTR [rsi],ch
  450d29:	cs cs pop rbp
  450d2c:	or     ah,BYTE PTR [rax]
  450d2e:	and    BYTE PTR [rax],ah
  450d30:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450d34:	jnp    0x450d56
  450d36:	pop    rbx
  450d37:	and    BYTE PTR [rdi+0x52],al
  450d3a:	rex.WRXB push r13
  450d3c:	push   rax
  450d3d:	and    BYTE PTR [rbp+0x20],bl
  450d40:	and    eax,0x207c2073
  450d45:	push   rax
  450d46:	push   rbp
  450d47:	rex.X
  450d48:	rex.WR
  450d49:	rex.WB
  450d4a:	rex.XB and BYTE PTR [r13+0x20],dil
  450d4e:	pop    rbx
  450d4f:	sub    al,0x20
  450d51:	cs cs cs pop rbp
  450d55:	and    BYTE PTR [rbx+0x20],bl
  450d58:	push   rdi
  450d59:	rex.WB push r12
  450d5b:	rex.W and BYTE PTR [rdi+0x52],al
  450d5f:	rex.B
  450d60:	rex.WRX push rsp
  450d62:	and    BYTE PTR [rdi+0x50],cl
  450d65:	push   rsp
  450d66:	rex.WB
  450d67:	rex.WRXB
  450d68:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450d6c:	or     al,BYTE PTR [rdi+0x52]
  450d6f:	rex.B
  450d70:	rex.WRX push rsp
  450d72:	and    BYTE PTR [rbx+0x20],bh
  450d75:	push   rbp
  450d76:	push   rbx
  450d77:	rex.B
  450d78:	rex.RXB
  450d79:	and    BYTE PTR [r8+riz*1+0x41],r15b
  450d7e:	rex.WR
  450d7f:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450d83:	push   rax
  450d84:	push   rdx
  450d85:	rex.WB push r14
  450d87:	rex.WB
  450d88:	rex.WR
  450d89:	rex.RB
  450d8a:	rex.RXB
  450d8b:	rex.RB push r11
  450d8d:	and    BYTE PTR [rbp+0x20],bl
  450d90:	jge    0x450d9c
  450d92:	and    BYTE PTR [rax],ah
  450d94:	and    BYTE PTR [rax],ah
  450d96:	rex.WRXB
  450d97:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  450d9b:	push   rdx
  450d9c:	rex.RB
  450d9d:	rex.WB
  450d9e:	rex.RXB
  450d9f:	rex.WRX and BYTE PTR [rbx+0x45],r10b
  450da3:	push   rdx
  450da4:	push   rsi
  450da5:	rex.RB push r10
  450da7:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca02e20
  450dad:	and    BYTE PTR [rsi],ch
  450daf:	cs cs pop rbp
  450db2:	or     ah,BYTE PTR [rax]
  450db4:	and    BYTE PTR [rax],ah
  450db6:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450dba:	jnp    0x450ddc
  450dbc:	pop    rbx
  450dbd:	and    BYTE PTR [rdi+0x52],al
  450dc0:	rex.WRXB push r13
  450dc2:	push   rax
  450dc3:	and    BYTE PTR [rbp+0x20],bl
  450dc6:	and    eax,0x207c2073
  450dcb:	push   rax
  450dcc:	push   rbp
  450dcd:	rex.X
  450dce:	rex.WR
  450dcf:	rex.WB
  450dd0:	rex.XB and BYTE PTR [r13+0x20],dil
  450dd4:	pop    rbx
  450dd5:	sub    al,0x20
  450dd7:	cs cs cs pop rbp
  450ddb:	and    BYTE PTR [rbx+0x20],bl
  450dde:	push   rdi
  450ddf:	rex.WB push r12
  450de1:	rex.W and BYTE PTR [rdi+0x52],al
  450de5:	rex.B
  450de6:	rex.WRX push rsp
  450de8:	and    BYTE PTR [rdi+0x50],cl
  450deb:	push   rsp
  450dec:	rex.WB
  450ded:	rex.WRXB
  450dee:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450df2:	or     al,BYTE PTR [rdi+0x52]
  450df5:	rex.B
  450df6:	rex.WRX push rsp
  450df8:	and    BYTE PTR [rbx+0x20],bh
  450dfb:	rex.RB pop r8
  450dfd:	rex.RB
  450dfe:	rex.XB push r13
  450e00:	push   rsp
  450e01:	and    BYTE PTR [r8+riz*1+0x41],r15b
  450e06:	rex.WR
  450e07:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450e0b:	push   rax
  450e0c:	push   rdx
  450e0d:	rex.WB push r14
  450e0f:	rex.WB
  450e10:	rex.WR
  450e11:	rex.RB
  450e12:	rex.RXB
  450e13:	rex.RB push r11
  450e15:	and    BYTE PTR [rbp+0x20],bl
  450e18:	jge    0x450e24
  450e1a:	and    BYTE PTR [rax],ah
  450e1c:	and    BYTE PTR [rax],ah
  450e1e:	rex.WRXB
  450e1f:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  450e23:	rex.RX push rbp
  450e25:	rex.WRX
  450e26:	rex.XB push r12
  450e28:	rex.WB
  450e29:	rex.WRXB
  450e2a:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206d2ea4
  450e31:	pop    rbx
  450e32:	and    BYTE PTR [rbx+0x20],bl
  450e35:	and    eax,0x205d2073
  450e3a:	pop    rbx
  450e3b:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a22eb4
  450e41:	and    eax,0x2c5b2073
  450e46:	and    BYTE PTR [rsi],ch
  450e48:	cs cs pop rbp
  450e4b:	and    BYTE PTR [rbp+0x20],bl
  450e4e:	sub    DWORD PTR [rax],esp
  450e50:	pop    rbx
  450e51:	sub    al,0x20
  450e53:	cs cs cs pop rbp
  450e57:	or     ah,BYTE PTR [rax]
  450e59:	and    BYTE PTR [rax],ah
  450e5b:	and    BYTE PTR [rax],ah
  450e5d:	and    BYTE PTR [rax],ah
  450e5f:	and    BYTE PTR [rax],ah
  450e61:	jl     0x450e83
  450e63:	rex.B
  450e64:	rex.WR
  450e65:	rex.WR and BYTE PTR [rsi+0x55],r8b
  450e69:	rex.WRX
  450e6a:	rex.XB push r12
  450e6c:	rex.WB
  450e6d:	rex.WRXB
  450e6e:	rex.WRX push rbx
  450e70:	and    BYTE PTR [rcx+0x4e],cl
  450e73:	and    BYTE PTR [rbx+0x43],dl
  450e76:	rex.W
  450e77:	rex.RB
  450e78:	rex.WRB
  450e79:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca02ef3
  450e80:	and    BYTE PTR [rsi],ch
  450e82:	cs cs pop rbp
  450e85:	and    BYTE PTR [rbp+0xa],bh
  450e88:	and    BYTE PTR [rax],ah
  450e8a:	and    BYTE PTR [rax],ah
  450e8c:	push   rsp
  450e8d:	rex.WRXB and BYTE PTR [r11+0x20],r15b
  450e91:	pop    rbx
  450e92:	and    BYTE PTR [rdi+0x52],al
  450e95:	rex.WRXB push r13
  450e97:	push   rax
  450e98:	and    BYTE PTR [rbp+0x20],bl
  450e9b:	and    eax,0x207c2073
  450ea0:	push   rax
  450ea1:	push   rbp
  450ea2:	rex.X
  450ea3:	rex.WR
  450ea4:	rex.WB
  450ea5:	rex.XB and BYTE PTR [r13+0x20],dil
  450ea9:	pop    rbx
  450eaa:	sub    al,0x20
  450eac:	cs cs cs pop rbp
  450eb0:	and    BYTE PTR [rbx+0x20],bl
  450eb3:	push   rdi
  450eb4:	rex.WB push r12
  450eb6:	rex.W and BYTE PTR [rdi+0x52],al
  450eba:	rex.B
  450ebb:	rex.WRX push rsp
  450ebd:	and    BYTE PTR [rdi+0x50],cl
  450ec0:	push   rsp
  450ec1:	rex.WB
  450ec2:	rex.WRXB
  450ec3:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450ec7:	or     al,BYTE PTR [rdi+0x52]
  450eca:	rex.B
  450ecb:	rex.WRX push rsp
  450ecd:	and    BYTE PTR [rbx+0x20],bh
  450ed0:	push   rbp
  450ed1:	push   rbx
  450ed2:	rex.B
  450ed3:	rex.RXB
  450ed4:	and    BYTE PTR [r8+riz*1+0x41],r15b
  450ed9:	rex.WR
  450eda:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450ede:	push   rax
  450edf:	push   rdx
  450ee0:	rex.WB push r14
  450ee2:	rex.WB
  450ee3:	rex.WR
  450ee4:	rex.RB
  450ee5:	rex.RXB
  450ee6:	rex.RB push r11
  450ee8:	and    BYTE PTR [rbp+0x20],bl
  450eeb:	jge    0x450ef7
  450eed:	and    BYTE PTR [rax],ah
  450eef:	and    BYTE PTR [rax],ah
  450ef1:	rex.WRXB
  450ef2:	rex.WRX and BYTE PTR [rcx+r8*2+0x4e],r9b
  450ef7:	rex.RXB push r13
  450ef9:	rex.B
  450efa:	rex.RXB
  450efb:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca02f75
  450f02:	and    BYTE PTR [rsi],ch
  450f04:	cs cs pop rbp
  450f07:	or     ah,BYTE PTR [rax]
  450f09:	and    BYTE PTR [rax],ah
  450f0b:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450f0f:	jnp    0x450f31
  450f11:	pop    rbx
  450f12:	and    BYTE PTR [rdi+0x52],al
  450f15:	rex.WRXB push r13
  450f17:	push   rax
  450f18:	and    BYTE PTR [rbp+0x20],bl
  450f1b:	and    eax,0x207c2073
  450f20:	push   rax
  450f21:	push   rbp
  450f22:	rex.X
  450f23:	rex.WR
  450f24:	rex.WB
  450f25:	rex.XB and BYTE PTR [r13+0x20],dil
  450f29:	pop    rbx
  450f2a:	sub    al,0x20
  450f2c:	cs cs cs pop rbp
  450f30:	and    BYTE PTR [rbx+0x20],bl
  450f33:	push   rdi
  450f34:	rex.WB push r12
  450f36:	rex.W and BYTE PTR [rdi+0x52],al
  450f3a:	rex.B
  450f3b:	rex.WRX push rsp
  450f3d:	and    BYTE PTR [rdi+0x50],cl
  450f40:	push   rsp
  450f41:	rex.WB
  450f42:	rex.WRXB
  450f43:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450f47:	or     al,BYTE PTR [rdi+0x52]
  450f4a:	rex.B
  450f4b:	rex.WRX push rsp
  450f4d:	and    BYTE PTR [rbx+0x20],bh
  450f50:	jnp    0x450f72
  450f52:	push   rbx
  450f53:	rex.RB
  450f54:	rex.WR
  450f55:	rex.RB
  450f56:	rex.XB push r12
  450f58:	and    BYTE PTR [rax+riz*1+0x55],bh
  450f5c:	push   rax
  450f5d:	rex.R
  450f5e:	push   r12
  450f60:	and    BYTE PTR [r13+0x20],r15b
  450f64:	pop    rbx
  450f65:	sub    al,0x20
  450f67:	cs cs cs pop rbp
  450f6b:	and    BYTE PTR [rax+riz*1+0x41],bh
  450f6f:	rex.WR
  450f70:	rex.WR and BYTE PTR [rbx+0x20],r11b
  450f74:	push   rax
  450f75:	push   rdx
  450f76:	rex.WB push r14
  450f78:	rex.WB
  450f79:	rex.WR
  450f7a:	rex.RB
  450f7b:	rex.RXB
  450f7c:	rex.RB push r11
  450f7e:	and    BYTE PTR [rbp+0x20],bl
  450f81:	jge    0x450f8d
  450f83:	and    BYTE PTR [rax],ah
  450f85:	and    BYTE PTR [rax],ah
  450f87:	rex.WRXB
  450f88:	rex.WRX and BYTE PTR [rcx+r8*2+0x52],r9b
  450f8d:	rex.RXB
  450f8e:	and    BYTE PTR [r15+0x42],r9b
  450f92:	rex.WX
  450f93:	rex.RB
  450f94:	rex.XB push r12
  450f96:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca0300f
  450f9c:	and    BYTE PTR [rsi],ch
  450f9e:	cs cs pop rbp
  450fa1:	or     ah,BYTE PTR [rax]
  450fa3:	and    BYTE PTR [rax],ah
  450fa5:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  450fa9:	jnp    0x450fcb
  450fab:	pop    rbx
  450fac:	and    BYTE PTR [rdi+0x52],al
  450faf:	rex.WRXB push r13
  450fb1:	push   rax
  450fb2:	and    BYTE PTR [rbp+0x20],bl
  450fb5:	and    eax,0x207c2073
  450fba:	push   rax
  450fbb:	push   rbp
  450fbc:	rex.X
  450fbd:	rex.WR
  450fbe:	rex.WB
  450fbf:	rex.XB and BYTE PTR [r13+0x20],dil
  450fc3:	pop    rbx
  450fc4:	sub    al,0x20
  450fc6:	cs cs cs pop rbp
  450fca:	and    BYTE PTR [rbx+0x20],bl
  450fcd:	push   rdi
  450fce:	rex.WB push r12
  450fd0:	rex.W and BYTE PTR [rdi+0x52],al
  450fd4:	rex.B
  450fd5:	rex.WRX push rsp
  450fd7:	and    BYTE PTR [rdi+0x50],cl
  450fda:	push   rsp
  450fdb:	rex.WB
  450fdc:	rex.WRXB
  450fdd:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  450fe1:	or     al,BYTE PTR [rdi+0x52]
  450fe4:	rex.B
  450fe5:	rex.WRX push rsp
  450fe7:	and    BYTE PTR [rbx+0x20],bh
  450fea:	jnp    0x45100c
  450fec:	rex.XB push r10
  450fee:	rex.RB
  450fef:	push   r12
  450ff1:	and    BYTE PTR [r8+riz*1+0x55],r15b
  450ff6:	push   rbx
  450ff7:	rex.B
  450ff8:	rex.RXB
  450ff9:	and    BYTE PTR [r13+0x20],r15b
  450ffd:	pop    rbx
  450ffe:	sub    al,0x20
  451000:	cs cs cs pop rbp
  451004:	and    BYTE PTR [rax+riz*1+0x41],bh
  451008:	rex.WR
  451009:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45100d:	push   rax
  45100e:	push   rdx
  45100f:	rex.WB push r14
  451011:	rex.WB
  451012:	rex.WR
  451013:	rex.RB
  451014:	rex.RXB
  451015:	rex.RB push r11
  451017:	and    BYTE PTR [rbp+0x20],bl
  45101a:	jge    0x451026
  45101c:	and    BYTE PTR [rax],ah
  45101e:	and    BYTE PTR [rax],ah
  451020:	rex.WRXB
  451021:	rex.WRX and BYTE PTR [rbx+0x43],r10b
  451025:	rex.W
  451026:	rex.RB
  451027:	rex.WRB
  451028:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca030a2
  45102f:	and    BYTE PTR [rsi],ch
  451031:	cs cs pop rbp
  451034:	or     ah,BYTE PTR [rax]
  451036:	and    BYTE PTR [rax],ah
  451038:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  45103c:	jnp    0x45105e
  45103e:	pop    rbx
  45103f:	and    BYTE PTR [rdi+0x52],al
  451042:	rex.WRXB push r13
  451044:	push   rax
  451045:	and    BYTE PTR [rbp+0x20],bl
  451048:	and    eax,0x207c2073
  45104d:	push   rax
  45104e:	push   rbp
  45104f:	rex.X
  451050:	rex.WR
  451051:	rex.WB
  451052:	rex.XB and BYTE PTR [r13+0x20],dil
  451056:	pop    rbx
  451057:	sub    al,0x20
  451059:	cs cs cs pop rbp
  45105d:	and    BYTE PTR [rbx+0x20],bl
  451060:	push   rdi
  451061:	rex.WB push r12
  451063:	rex.W and BYTE PTR [rdi+0x52],al
  451067:	rex.B
  451068:	rex.WRX push rsp
  45106a:	and    BYTE PTR [rdi+0x50],cl
  45106d:	push   rsp
  45106e:	rex.WB
  45106f:	rex.WRXB
  451070:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  451074:	or     al,BYTE PTR [rdi+0x52]
  451077:	rex.B
  451078:	rex.WRX push rsp
  45107a:	and    BYTE PTR [rbx+0x20],bh
  45107d:	rex.XB push r10
  45107f:	rex.RB
  451080:	push   r12
  451082:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451087:	rex.WR
  451088:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45108c:	push   rax
  45108d:	push   rdx
  45108e:	rex.WB push r14
  451090:	rex.WB
  451091:	rex.WR
  451092:	rex.RB
  451093:	rex.RXB
  451094:	rex.RB push r11
  451096:	and    BYTE PTR [rbp+0x20],bl
  451099:	jge    0x4510a5
  45109b:	and    BYTE PTR [rax],ah
  45109d:	and    BYTE PTR [rax],ah
  45109f:	rex.WRXB
  4510a0:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  4510a5:	rex.WR
  4510a6:	rex.RB push r11
  4510a8:	push   rax
  4510a9:	rex.B
  4510aa:	rex.XB
  4510ab:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca03125
  4510b2:	and    BYTE PTR [rsi],ch
  4510b4:	cs cs pop rbp
  4510b7:	or     ah,BYTE PTR [rax]
  4510b9:	and    BYTE PTR [rax],ah
  4510bb:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  4510bf:	jnp    0x4510e1
  4510c1:	pop    rbx
  4510c2:	and    BYTE PTR [rdi+0x52],al
  4510c5:	rex.WRXB push r13
  4510c7:	push   rax
  4510c8:	and    BYTE PTR [rbp+0x20],bl
  4510cb:	and    eax,0x207c2073
  4510d0:	push   rax
  4510d1:	push   rbp
  4510d2:	rex.X
  4510d3:	rex.WR
  4510d4:	rex.WB
  4510d5:	rex.XB and BYTE PTR [r13+0x20],dil
  4510d9:	pop    rbx
  4510da:	sub    al,0x20
  4510dc:	cs cs cs pop rbp
  4510e0:	and    BYTE PTR [rbx+0x20],bl
  4510e3:	push   rdi
  4510e4:	rex.WB push r12
  4510e6:	rex.W and BYTE PTR [rdi+0x52],al
  4510ea:	rex.B
  4510eb:	rex.WRX push rsp
  4510ed:	and    BYTE PTR [rdi+0x50],cl
  4510f0:	push   rsp
  4510f1:	rex.WB
  4510f2:	rex.WRXB
  4510f3:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  4510f7:	or     al,BYTE PTR [rdi+0x52]
  4510fa:	rex.B
  4510fb:	rex.WRX push rsp
  4510fd:	and    BYTE PTR [rbx+0x20],bh
  451100:	push   rbp
  451101:	push   rbx
  451102:	rex.B
  451103:	rex.RXB
  451104:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451109:	rex.WR
  45110a:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45110e:	push   rax
  45110f:	push   rdx
  451110:	rex.WB push r14
  451112:	rex.WB
  451113:	rex.WR
  451114:	rex.RB
  451115:	rex.RXB
  451116:	rex.RB push r11
  451118:	and    BYTE PTR [rbp+0x20],bl
  45111b:	jge    0x451127
  45111d:	and    BYTE PTR [rax],ah
  45111f:	and    BYTE PTR [rax],ah
  451121:	rex.WRXB
  451122:	rex.WRX and BYTE PTR [rcx+r11*2+0x50],r10b
  451127:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca031a1
  45112e:	and    BYTE PTR [rsi],ch
  451130:	cs cs pop rbp
  451133:	or     ah,BYTE PTR [rax]
  451135:	and    BYTE PTR [rax],ah
  451137:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  45113b:	jnp    0x45115d
  45113d:	pop    rbx
  45113e:	and    BYTE PTR [rdi+0x52],al
  451141:	rex.WRXB push r13
  451143:	push   rax
  451144:	and    BYTE PTR [rbp+0x20],bl
  451147:	and    eax,0x207c2073
  45114c:	push   rax
  45114d:	push   rbp
  45114e:	rex.X
  45114f:	rex.WR
  451150:	rex.WB
  451151:	rex.XB and BYTE PTR [r13+0x20],dil
  451155:	pop    rbx
  451156:	sub    al,0x20
  451158:	cs cs cs pop rbp
  45115c:	and    BYTE PTR [rbx+0x20],bl
  45115f:	push   rdi
  451160:	rex.WB push r12
  451162:	rex.W and BYTE PTR [rdi+0x52],al
  451166:	rex.B
  451167:	rex.WRX push rsp
  451169:	and    BYTE PTR [rdi+0x50],cl
  45116c:	push   rsp
  45116d:	rex.WB
  45116e:	rex.WRXB
  45116f:	rex.WRX and BYTE PTR [rbp+0xa],r11b
  451173:	or     al,BYTE PTR [rdi+0x52]
  451176:	rex.B
  451177:	rex.WRX push rsp
  451179:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca031f2
  45117f:	and    BYTE PTR [rsi],ch
  451181:	cs cs pop rbp
  451184:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  451188:	and    eax,0x2c5b2073
  45118d:	and    BYTE PTR [rsi],ch
  45118f:	cs cs pop rbp
  451192:	and    BYTE PTR [rbx+0x20],bl
  451195:	push   rdi
  451196:	rex.WB push r12
  451198:	rex.W and BYTE PTR [rcx+0x44],al
  45119c:	rex.WRB
  45119d:	rex.WB
  45119e:	rex.WRX and BYTE PTR [rdi+0x50],r9b
  4511a2:	push   rsp
  4511a3:	rex.WB
  4511a4:	rex.WRXB
  4511a5:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  4511a9:	ins    BYTE PTR es:[rdi],dx
  4511aa:	outs   dx,DWORD PTR ds:[rsi]
  4511ab:	imul   esp,DWORD PTR [rax+rax*1+0x61],0x745f6772
  4511b3:	jns    0x451225
  4511b5:	add    BYTE PTR gs:[rcx+0x72],ah
  4511b9:	addr32 pop rdi
  4511bb:	outs   dx,BYTE PTR ds:[rsi]
  4511bc:	(bad)  
  4511bd:	ins    DWORD PTR es:[rdi],dx
  4511be:	add    BYTE PTR gs:[rdi+rbp*2+0x6d],ah
  4511c3:	(bad)  
  4511c4:	imul   ebp,DWORD PTR [rsi+0x5f],0x656d616e
  4511cb:	add    BYTE PTR [rbx+0x65],dh
  4511ce:	jno    0x451245
  4511d0:	outs   dx,BYTE PTR gs:[rsi]
  4511d2:	movsxd esp,DWORD PTR [rbp+0x5f]
  4511d5:	outs   dx,BYTE PTR ds:[rsi]
  4511d6:	(bad)  
  4511d7:	ins    DWORD PTR es:[rdi],dx
  4511d8:	add    BYTE PTR gs:[rax],al
  4511db:	add    BYTE PTR [rax],al
  4511dd:	add    BYTE PTR [rax],al
  4511df:	add    BYTE PTR [rbx+0x20],bl
  4511e2:	push   rdi
  4511e3:	rex.WB push r12
  4511e5:	rex.W and BYTE PTR [rbx+0x20],bl
  4511e9:	push   rdx
  4511ea:	rex.RB
  4511eb:	rex.XB push r13
  4511ed:	push   rdx
  4511ee:	push   rbx
  4511ef:	rex.WB push r14
  4511f1:	and    BYTE PTR [r13+0x20],r11b
  4511f5:	and    eax,0x2c5b2073
  4511fa:	and    BYTE PTR [rsi],ch
  4511fc:	cs cs pop rbp
  4511ff:	and    BYTE PTR [rbp+0xa],bl
  451202:	rex.WB
  451203:	rex.WRX push rbx
  451205:	rex.RB push r10
  451207:	push   rsp
  451208:	and    BYTE PTR [rcx+0x4e],cl
  45120b:	push   rsp
  45120c:	rex.WRXB and BYTE PTR [rip+0x205b2073],r12b        # 0x20a03286
  451213:	sub    BYTE PTR [rax],ah
  451215:	and    eax,0x2c5b2073
  45121a:	and    BYTE PTR [rsi],ch
  45121c:	cs cs pop rbp
  45121f:	and    BYTE PTR [rcx],ch
  451221:	and    BYTE PTR [rbp+0xa],bl
  451224:	and    BYTE PTR [rax],ah
  451226:	and    BYTE PTR [rax],ah
  451228:	jnp    0x45124a
  45122a:	rex.R
  45122b:	rex.RB
  45122c:	rex.RX
  45122d:	push   r13
  45122f:	rex.WR push rsp
  451231:	and    BYTE PTR [rsi+0x41],dl
  451234:	rex.WR push rbp
  451236:	rex.RB push r11
  451238:	and    BYTE PTR [rax+riz*1+0x56],bh
  45123c:	rex.B
  45123d:	rex.WR push rbp
  45123f:	rex.RB push r11
  451241:	and    BYTE PTR [rax],ch
  451243:	and    BYTE PTR [rbx+0x20],bh
  451246:	and    eax,0x207c2073
  45124b:	rex.R
  45124c:	rex.RB
  45124d:	rex.RX
  45124e:	push   r13
  451250:	rex.WR push rsp
  451252:	and    BYTE PTR [rbp+0x20],bh
  451255:	pop    rbx
  451256:	sub    al,0x20
  451258:	cs cs cs pop rbp
  45125c:	and    BYTE PTR [rcx],ch
  45125e:	and    BYTE PTR [rbx+0x2c],bl
  451261:	and    BYTE PTR [rsi],ch
  451263:	cs cs pop rbp
  451266:	and    BYTE PTR [rax+riz*1+0x25],bh
  45126a:	jae    0x45128c
  45126c:	jge    0x451278
  45126e:	and    BYTE PTR [rax],ah
  451270:	and    BYTE PTR [rax],ah
  451272:	pop    rbx
  451273:	and    BYTE PTR [rdx+0x45],dl
  451276:	push   rsp
  451277:	push   rbp
  451278:	push   rdx
  451279:	rex.WRX
  45127a:	rex.WB
  45127b:	rex.WRX
  45127c:	rex.RXB and BYTE PTR [r10],r13b
  45127f:	and    BYTE PTR [rax+riz*1+0x25],bh
  451283:	jae    0x4512a5
  451285:	pop    rbx
  451286:	and    BYTE PTR [rbx+0x20],bl
  451289:	push   r11
  45128b:	and    BYTE PTR [rbp+0x20],bl
  45128e:	and    eax,0x205d2073
  451293:	pop    rbx
  451294:	sub    al,0x20
  451296:	cs cs cs pop rbp
  45129a:	and    BYTE PTR [rbp+0x0],bl
  45129d:	movsxd ebp,DWORD PTR [rax+0x61]
  4512a0:	outs   dx,BYTE PTR ds:[rsi]
  4512a1:	outs   dx,BYTE PTR ds:[rsi]
  4512a2:	gs ins BYTE PTR es:[rdi],dx
  4512a4:	add    BYTE PTR [rcx+rcx*2+0x53],cl
  4512a8:	push   rsp
  4512a9:	rex.RB
  4512aa:	rex.WRX and BYTE PTR [rip+0x4f4c0073],r12b        # 0x4f911324
  4512b1:	rex.B
  4512b2:	and    BYTE PTR [rdi],r12b
  4512b5:	and    eax,0x6c002773
  4512ba:	outs   dx,DWORD PTR ds:[rsi]
  4512bb:	movsxd ebp,DWORD PTR [rbx+0x6d]
  4512be:	outs   dx,DWORD PTR ds:[rsi]
  4512bf:	fs add BYTE PTR gs:[rax],al
  4512c3:	add    BYTE PTR [rax],al
  4512c5:	add    BYTE PTR [rax],al
  4512c7:	add    BYTE PTR [rdi+rcx*2+0x43],cl
  4512cb:	rex.WXB and BYTE PTR [r11+0x20],bl
  4512cf:	push   rsp
  4512d0:	rex.B
  4512d1:	rex.X
  4512d2:	rex.WR
  4512d3:	and    BYTE PTR [r13+0x20],r11b
  4512d7:	pop    rbx
  4512d8:	and    BYTE PTR [rdi+0x4e],cl
  4512db:	rex.WR pop rcx
  4512dd:	and    BYTE PTR [rbp+0x20],bl
  4512e0:	and    eax,0x205b2073
  4512e5:	sub    ah,BYTE PTR [rax]
  4512e7:	pop    rbp
  4512e8:	and    BYTE PTR [rbx+0x2c],bl
  4512eb:	and    BYTE PTR [rsi],ch
  4512ed:	cs cs pop rbp
  4512f0:	and    BYTE PTR [rbx+0x20],bl
  4512f3:	rex.WB
  4512f4:	rex.WRX and BYTE PTR [rip+0x4f4d2073],r12b        # 0x4f92336e
  4512fb:	rex.R
  4512fc:	and    BYTE PTR [r13+0x20],r11b
  451300:	pop    rbx
  451301:	and    BYTE PTR [rsi+0x4f],cl
  451304:	push   rdi
  451305:	rex.B
  451306:	rex.WB push r12
  451308:	and    BYTE PTR [rbp+0xa],bl
  45130b:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204f1d84
  451311:	and    BYTE PTR [rax],ah
  451313:	and    BYTE PTR [rcx+0x43],al
  451316:	rex.XB
  451317:	rex.RB push r11
  451319:	push   rbx
  45131a:	and    BYTE PTR [rbx+0x48],dl
  45131d:	push   r10
  45131f:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451324:	rex.WRXB push r15
  451326:	and    BYTE PTR [rbx+0x48],dl
  451329:	push   r10
  45132b:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451330:	rex.WRXB push r15
  451332:	and    BYTE PTR [rbp+0x58],al
  451335:	rex.XB
  451336:	rex.WR push rbp
  451338:	push   rbx
  451339:	rex.WB push r14
  45133b:	and    BYTE PTR [r8+riz*1+0x53],r15b
  451340:	rex.W
  451341:	push   r10
  451343:	and    BYTE PTR [r13+0x50],r10b
  451347:	rex.R
  451348:	push   r12
  45134a:	and    BYTE PTR [r13+0x58],r8b
  45134e:	rex.XB
  45134f:	rex.WR push rbp
  451351:	push   rbx
  451352:	rex.WB push r14
  451354:	or     r12b,BYTE PTR [r8]
  451357:	and    BYTE PTR [rax],ah
  451359:	and    BYTE PTR [rax+riz*1+0x53],bh
  45135d:	rex.W
  45135e:	push   r10
  451360:	and    BYTE PTR [r8+riz*1+0x53],r15b
  451365:	rex.W
  451366:	push   r10
  451368:	and    BYTE PTR [r10+0x4f],r10b
  45136c:	push   rdi
  45136d:	and    BYTE PTR [rbp+0x58],al
  451370:	rex.XB
  451371:	rex.WR push rbp
  451373:	push   rbx
  451374:	rex.WB push r14
  451376:	and    BYTE PTR [r8+riz*1+0x45],r15b
  45137b:	pop    rax
  45137c:	rex.XB
  45137d:	rex.WR push rbp
  45137f:	push   rbx
  451380:	rex.WB push r14
  451382:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451387:	rex.XB
  451388:	rex.XB
  451389:	rex.RB push r11
  45138b:	push   rbx
  45138c:	and    BYTE PTR [rbp+0x58],al
  45138f:	rex.XB
  451390:	rex.WR push rbp
  451392:	push   rbx
  451393:	rex.WB push r14
  451395:	add    BYTE PTR [r15+0x68],r14b
  451399:	gs jb  0x451401
  45139c:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  4513a0:	imul   ebp,DWORD PTR [rbp+0x6f],0x64
  4513a4:	and    BYTE PTR gs:[rcx+0x73],ch
  4513a8:	and    BYTE PTR [rdi+0x6e],ch
  4513ab:	and    BYTE PTR gs:[rdi+0x66],ch
  4513af:	cmp    al,BYTE PTR [rax]
  4513b1:	add    BYTE PTR [rax],al
  4513b3:	add    BYTE PTR [rax],al
  4513b5:	add    BYTE PTR [rax],al
  4513b7:	add    BYTE PTR [rbp+0x4f],cl
  4513ba:	push   rsi
  4513bb:	and    BYTE PTR [r11+0x20],r11b
  4513bf:	and    eax,0x205b2073
  4513c4:	rex.RX push rdx
  4513c6:	rex.WRXB
  4513c7:	rex.WRB and BYTE PTR [r8+riz*1+0x49],r15b
  4513cc:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  4513d0:	pop    rbp
  4513d1:	and    BYTE PTR [rip+0x250a0a73],ah        # 0x254f1e4a
  4513d7:	jae    0x4513e3
  4513d9:	or     ah,BYTE PTR [rax]
  4513db:	and    BYTE PTR [rax],ah
  4513dd:	and    BYTE PTR [rsi+0x45],cl
  4513e0:	pop    rax
  4513e1:	push   rsp
  4513e2:	or     ah,BYTE PTR [rax]
  4513e4:	and    BYTE PTR [rax],ah
  4513e6:	and    BYTE PTR [rax+0x52],dl
  4513e9:	rex.WB
  4513ea:	rex.WRXB push r10
  4513ec:	or     ah,BYTE PTR [rax]
  4513ee:	and    BYTE PTR [rax],ah
  4513f0:	and    BYTE PTR [rsi+0x49],al
  4513f3:	push   rdx
  4513f4:	push   rbx
  4513f5:	push   rsp
  4513f6:	or     ah,BYTE PTR [rax]
  4513f8:	and    BYTE PTR [rax],ah
  4513fa:	and    BYTE PTR [rcx+rax*2+0x53],cl
  4513fe:	push   rsp
  4513ff:	or     ah,BYTE PTR [rax]
  451401:	and    BYTE PTR [rax],ah
  451403:	and    BYTE PTR [rcx+0x42],al
  451406:	push   rbx
  451407:	rex.WRXB
  451408:	rex.WR push rbp
  45140a:	push   rsp
  45140b:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20651e85
  451412:	and    BYTE PTR [rax],ah
  451414:	push   rdx
  451415:	rex.RB
  451416:	rex.WR
  451417:	push   r12
  451419:	rex.WB push r14
  45141b:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20651e95
  451422:	and    BYTE PTR [rax],ah
  451424:	and    eax,0x20200a73
  451429:	and    BYTE PTR [rax],ah
  45142b:	rex.B
  45142c:	rex.WR
  45142d:	rex.WR or r12b,BYTE PTR [rax]
  451430:	and    BYTE PTR [rax],ah
  451432:	and    BYTE PTR [rsi+0x4f],al
  451435:	push   rdx
  451436:	push   rdi
  451437:	push   r10
  451439:	or     r12b,BYTE PTR [rax]
  45143c:	and    BYTE PTR [rax],ah
  45143e:	and    BYTE PTR [rsi+0x4f],al
  451441:	push   rdx
  451442:	push   rdi
  451443:	push   r10
  451445:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20651ebf
  45144c:	and    BYTE PTR [rax],ah
  45144e:	rex.RX
  45144f:	rex.WRXB push r10
  451451:	push   rdi
  451452:	push   r10
  451454:	and    BYTE PTR [rcx+0x4c],r8b
  451458:	rex.WR or r12b,BYTE PTR [rax]
  45145b:	and    BYTE PTR [rax],ah
  45145d:	and    BYTE PTR [rdx+0x41],al
  451460:	rex.XB
  451461:	rex.WXB push r15
  451463:	push   r10
  451465:	or     r12b,BYTE PTR [rax]
  451468:	and    BYTE PTR [rax],ah
  45146a:	and    BYTE PTR [rdx+0x41],al
  45146d:	rex.XB
  45146e:	rex.WXB push r15
  451470:	push   r10
  451472:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20651eec
  451479:	and    BYTE PTR [rax],ah
  45147b:	rex.X
  45147c:	rex.B
  45147d:	rex.XB
  45147e:	rex.WXB push r15
  451480:	push   r10
  451482:	and    BYTE PTR [rcx+0x4c],r8b
  451486:	rex.WR add BYTE PTR [rax+0x61],r14b
  45148a:	jns    0x4514f8
  45148c:	outs   dx,DWORD PTR ds:[rsi]
  45148d:	(bad)  
  45148e:	add    BYTE PTR fs:[rsi+0x4f],cl
  451492:	push   rsp
  451493:	rex.WB
  451494:	rex.RX pop rcx
  451496:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a0350f
  45149c:	sub    al,0x20
  45149e:	and    eax,0x5d2073
  4514a3:	add    BYTE PTR [rax],al
  4514a5:	add    BYTE PTR [rax],al
  4514a7:	add    BYTE PTR [rax+0x52],dl
  4514aa:	rex.RB push r8
  4514ac:	push   r10
  4514ae:	and    BYTE PTR [rip+0x205b2073],r12b        # 0x20a03528
  4514b5:	sub    BYTE PTR [rax],ah
  4514b7:	and    eax,0x2c5b2073
  4514bc:	and    BYTE PTR [rsi],ch
  4514be:	cs cs pop rbp
  4514c1:	and    BYTE PTR [rcx],ch
  4514c3:	and    BYTE PTR [rbp+0x20],bl
  4514c6:	push   r11
  4514c8:	and    BYTE PTR [rip+0x52500073],ah        # 0x52951541
  4514ce:	rex.RB push r8
  4514d0:	push   r10
  4514d2:	and    BYTE PTR [r10+rdx*2+0x41],r10b
  4514d7:	rex.WRX push rbx
  4514d9:	rex.B
  4514da:	rex.XB push r12
  4514dc:	rex.WB
  4514dd:	rex.WRXB
  4514de:	rex.WRX and BYTE PTR [rip+0x656e0073],r12b        # 0x65b31558
  4514e5:	ja     0x451546
  4514e7:	jb     0x451558
  4514e9:	ins    BYTE PTR es:[rdi],dx
  4514ea:	add    BYTE PTR gs:[rdi+0x6c],ch
  4514ee:	fs pop rdi
  4514f0:	jb     0x451561
  4514f2:	ins    BYTE PTR es:[rdi],dx
  4514f3:	add    BYTE PTR gs:[rax],al
  4514f6:	add    BYTE PTR [rax],al
  4514f8:	push   rdx
  4514f9:	rex.RB
  4514fa:	push   r11
  4514fc:	push   rbx
  4514fd:	rex.WB
  4514fe:	rex.RXB
  4514ff:	rex.WRX and BYTE PTR [rdi+0x57],r9b
  451503:	rex.WRX
  451504:	rex.RB
  451505:	and    BYTE PTR [rdx+0x59],r8b
  451509:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca03582
  45150f:	and    BYTE PTR [rsi],ch
  451511:	cs cs pop rbp
  451514:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  451518:	and    eax,0x73
  45151d:	add    BYTE PTR [rax],al
  45151f:	add    BYTE PTR [rdx+0x45],dl
  451522:	rex.RX push rdx
  451524:	rex.RB push r11
  451526:	rex.W and BYTE PTR [rbp+0x41],cl
  45152a:	push   rsp
  45152b:	rex.RB push r10
  45152d:	rex.WB
  45152e:	rex.B
  45152f:	rex.WR
  451530:	rex.WB pop r10
  451532:	rex.RB
  451533:	and    BYTE PTR [rsi+0x49],r10b
  451537:	rex.RB push r15
  451539:	and    BYTE PTR [rbx+0x20],bl
  45153c:	rex.XB
  45153d:	rex.WRXB
  45153e:	rex.WRX
  45153f:	rex.XB push r13
  451541:	push   rdx
  451542:	push   rdx
  451543:	rex.RB
  451544:	rex.WRX push rsp
  451546:	rex.WR pop rcx
  451548:	and    BYTE PTR [rbp+0x20],bl
  45154b:	and    eax,0x20200a73
  451550:	and    BYTE PTR [rax],ah
  451552:	pop    rbx
  451553:	and    BYTE PTR [rdi+0x49],dl
  451556:	push   rsp
  451557:	rex.W and BYTE PTR [rbx+0x20],bl
  45155b:	rex.WRX
  45155c:	rex.WRXB and BYTE PTR [r13+0x20],r11b
  451560:	rex.R
  451561:	push   r12
  451563:	and    BYTE PTR [r13+0x0],bl
  451567:	add    BYTE PTR [rdx+0x45],dl
  45156a:	rex.WB
  45156b:	rex.WRX
  45156c:	rex.R
  45156d:	rex.RB pop r8
  45156f:	and    BYTE PTR [rbx+0x20],bh
  451572:	rex.WB
  451573:	rex.WRX
  451574:	rex.R
  451575:	rex.RB pop r8
  451577:	and    BYTE PTR [rax+riz*1+0x54],bh
  45157b:	rex.B
  45157c:	rex.X
  45157d:	rex.WR
  45157e:	and    BYTE PTR [r8+riz*1+0x44],r15b
  451583:	push   r12
  451585:	rex.B
  451586:	rex.X
  451587:	push   r11
  451589:	and    BYTE PTR [r8+riz*1+0x53],r15b
  45158e:	pop    rcx
  45158f:	push   rbx
  451590:	push   rsp
  451591:	rex.RB
  451592:	rex.WRB and BYTE PTR [r13+0x20],r15b
  451596:	and    eax,0x205b2073
  45159b:	rex.RX
  45159c:	rex.WRXB push r10
  45159e:	rex.XB
  45159f:	and    BYTE PTR [r13+0x0],r11b
  4515a3:	jae    0x451606
  4515a5:	jbe    0x45160c
  4515a7:	jo     0x451618
  4515a9:	imul   ebp,DWORD PTR [rsi+0x74],0x6d616e5f
  4515b0:	add    BYTE PTR gs:[rdx+0x45],dl
  4515b4:	rex.WR
  4515b5:	rex.RB
  4515b6:	push   r11
  4515b8:	and    BYTE PTR [r11+0x20],r11b
  4515bc:	push   rbx
  4515bd:	push   r14
  4515bf:	rex.RB push r8
  4515c1:	rex.WRXB
  4515c2:	rex.WB
  4515c3:	rex.WRX push rsp
  4515c5:	and    BYTE PTR [rbp+0x20],bl
  4515c8:	and    eax,0x45520073
  4515cd:	push   rbx
  4515ce:	rex.RB push r12
  4515d0:	and    BYTE PTR [rip+0x45520a73],ah        # 0x45972049
  4515d6:	push   rbx
  4515d7:	rex.RB push r12
  4515d9:	and    BYTE PTR [rcx+0x4c],al
  4515dc:	rex.WR add BYTE PTR [rax],r8b
  4515df:	add    BYTE PTR [rdx+0x45],dl
  4515e2:	push   rsi
  4515e3:	rex.WRXB
  4515e4:	rex.WXB
  4515e5:	and    BYTE PTR [r11+0x20],r11b
  4515e9:	rex.RXB push r10
  4515eb:	rex.B
  4515ec:	rex.WRX push rsp
  4515ee:	and    BYTE PTR [rdi+0x50],cl
  4515f1:	push   rsp
  4515f2:	rex.WB
  4515f3:	rex.WRXB
  4515f4:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  4515f8:	push   rdx
  4515f9:	and    BYTE PTR [rbp+0xa],bl
  4515fc:	and    BYTE PTR [rax],ah
  4515fe:	and    BYTE PTR [rax],ah
  451600:	jnp    0x451622
  451602:	jnp    0x451624
  451604:	push   rbx
  451605:	rex.RB
  451606:	rex.WR
  451607:	rex.RB
  451608:	rex.XB push r12
  45160a:	and    BYTE PTR [rax+riz*1+0x49],bh
  45160e:	rex.WRX push rbx
  451610:	rex.RB push r10
  451612:	push   rsp
  451613:	and    BYTE PTR [rax+riz*1+0x55],bh
  451617:	push   rax
  451618:	rex.R
  451619:	push   r12
  45161b:	and    BYTE PTR [r8+riz*1+0x44],r15b
  451620:	rex.RB
  451621:	rex.WR
  451622:	rex.RB push r12
  451624:	and    BYTE PTR [r8+riz*1+0x54],r15b
  451629:	push   rdx
  45162a:	push   rbp
  45162b:	rex.WRX
  45162c:	rex.XB
  45162d:	push   r12
  45162f:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451634:	rex.RB
  451635:	rex.RX
  451636:	rex.RB push r10
  451638:	rex.RB
  451639:	rex.WRX
  45163a:	rex.XB
  45163b:	rex.RB push r11
  45163d:	and    BYTE PTR [rax+riz*1+0x54],bh
  451641:	push   rdx
  451642:	rex.WB
  451643:	rex.RXB
  451644:	rex.RXB
  451645:	rex.RB push r10
  451647:	and    BYTE PTR [rbp+0xa],bh
  45164a:	and    BYTE PTR [rax],ah
  45164c:	and    BYTE PTR [rax],ah
  45164e:	pop    rbx
  45164f:	sub    al,0x20
  451651:	cs cs cs pop rbp
  451655:	and    BYTE PTR [rax+riz*1+0x41],bh
  451659:	rex.WR
  45165a:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45165e:	push   rax
  45165f:	push   rdx
  451660:	rex.WB push r14
  451662:	rex.WB
  451663:	rex.WR
  451664:	rex.RB
  451665:	rex.RXB
  451666:	rex.RB push r11
  451668:	and    BYTE PTR [rbp+0x20],bl
  45166b:	jge    0x451677
  45166d:	and    BYTE PTR [rax],ah
  45166f:	and    BYTE PTR [rax],ah
  451671:	rex.WRXB
  451672:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  451676:	pop    rbx
  451677:	and    BYTE PTR [rcx+rax*2+0x42],dl
  45167b:	rex.WR
  45167c:	and    BYTE PTR [r13+0x20],r11b
  451680:	and    eax,0x2c5b2073
  451685:	and    BYTE PTR [rsi],ch
  451687:	cs cs pop rbp
  45168a:	or     ah,BYTE PTR [rax]
  45168c:	and    BYTE PTR [rax],ah
  45168e:	and    BYTE PTR [rax],ah
  451690:	and    BYTE PTR [rax],ah
  451692:	and    BYTE PTR [rax],ah
  451694:	jl     0x4516b6
  451696:	rex.B
  451697:	rex.WR
  451698:	rex.WR and BYTE PTR [rcx+rax*2+0x42],r10b
  45169d:	rex.WR
  45169e:	rex.RB push r11
  4516a0:	and    BYTE PTR [rcx+0x4e],cl
  4516a3:	and    BYTE PTR [rbx+0x43],dl
  4516a6:	rex.W
  4516a7:	rex.RB
  4516a8:	rex.WRB
  4516a9:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca03723
  4516b0:	and    BYTE PTR [rsi],ch
  4516b2:	cs cs pop rbp
  4516b5:	and    BYTE PTR [rbp+0xa],bh
  4516b8:	and    BYTE PTR [rax],ah
  4516ba:	and    BYTE PTR [rax],ah
  4516bc:	rex.RX push rdx
  4516be:	rex.WRXB
  4516bf:	rex.WRB and BYTE PTR [r11+0x20],r15b
  4516c3:	pop    rbx
  4516c4:	and    BYTE PTR [rdi+0x52],al
  4516c7:	rex.WRXB push r13
  4516c9:	push   rax
  4516ca:	and    BYTE PTR [rbp+0x20],bl
  4516cd:	and    eax,0x207c2073
  4516d2:	push   rax
  4516d3:	push   rbp
  4516d4:	rex.X
  4516d5:	rex.WR
  4516d6:	rex.WB
  4516d7:	rex.XB and BYTE PTR [r13+0x20],dil
  4516db:	pop    rbx
  4516dc:	sub    al,0x20
  4516de:	cs cs cs pop rbp
  4516e2:	or     ah,BYTE PTR [rax]
  4516e4:	and    BYTE PTR [rax],ah
  4516e6:	and    BYTE PTR [rbx+0x20],bl
  4516e9:	rex.XB
  4516ea:	push   r11
  4516ec:	rex.XB
  4516ed:	rex.B
  4516ee:	rex.R
  4516ef:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4516f4:	rex.RB push r11
  4516f6:	push   rsp
  4516f7:	push   rdx
  4516f8:	rex.WB
  4516f9:	rex.XB push r12
  4516fb:	and    BYTE PTR [rbp+0xa],bl
  4516fe:	or     dl,BYTE PTR [rdx+0x45]
  451701:	push   rsi
  451702:	rex.WRXB
  451703:	rex.WXB
  451704:	and    BYTE PTR [r11+0x20],r11b
  451708:	rex.RXB push r10
  45170a:	rex.B
  45170b:	rex.WRX push rsp
  45170d:	and    BYTE PTR [rdi+0x50],cl
  451710:	push   rsp
  451711:	rex.WB
  451712:	rex.WRXB
  451713:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451717:	push   rdx
  451718:	and    BYTE PTR [rbp+0xa],bl
  45171b:	and    BYTE PTR [rax],ah
  45171d:	and    BYTE PTR [rax],ah
  45171f:	jnp    0x451741
  451721:	jnp    0x451743
  451723:	push   rbx
  451724:	rex.RB
  451725:	rex.WR
  451726:	rex.RB
  451727:	rex.XB push r12
  451729:	and    BYTE PTR [rax+riz*1+0x49],bh
  45172d:	rex.WRX push rbx
  45172f:	rex.RB push r10
  451731:	push   rsp
  451732:	and    BYTE PTR [rax+riz*1+0x55],bh
  451736:	push   rax
  451737:	rex.R
  451738:	push   r12
  45173a:	and    BYTE PTR [r8+riz*1+0x52],r15b
  45173f:	rex.RB
  451740:	rex.RX
  451741:	rex.RB push r10
  451743:	rex.RB
  451744:	rex.WRX
  451745:	rex.XB
  451746:	rex.RB push r11
  451748:	and    BYTE PTR [rbp+0x20],bh
  45174b:	sub    BYTE PTR [rax],ah
  45174d:	and    eax,0x2c5b2073
  451752:	and    BYTE PTR [rsi],ch
  451754:	cs cs pop rbp
  451757:	and    BYTE PTR [rcx],ch
  451759:	or     ah,BYTE PTR [rax]
  45175b:	and    BYTE PTR [rax],ah
  45175d:	and    BYTE PTR [rbx+0x2c],bl
  451760:	and    BYTE PTR [rsi],ch
  451762:	cs cs pop rbp
  451765:	and    BYTE PTR [rax+riz*1+0x41],bh
  451769:	rex.WR
  45176a:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45176e:	push   rax
  45176f:	push   rdx
  451770:	rex.WB push r14
  451772:	rex.WB
  451773:	rex.WR
  451774:	rex.RB
  451775:	rex.RXB
  451776:	rex.RB push r11
  451778:	and    BYTE PTR [rbp+0x20],bl
  45177b:	sub    BYTE PTR [rax],ah
  45177d:	and    eax,0x2c5b2073
  451782:	and    BYTE PTR [rsi],ch
  451784:	cs cs pop rbp
  451787:	and    BYTE PTR [rcx],ch
  451789:	and    BYTE PTR [rbp+0xa],bh
  45178c:	and    BYTE PTR [rax],ah
  45178e:	and    BYTE PTR [rax],ah
  451790:	rex.WRXB
  451791:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  451795:	push   rsp
  451796:	rex.B
  451797:	rex.X
  451798:	rex.WR
  451799:	and    BYTE PTR [r13+0x20],r11b
  45179d:	and    eax,0x2c5b2073
  4517a2:	and    BYTE PTR [rsi],ch
  4517a4:	cs cs pop rbp
  4517a7:	or     ah,BYTE PTR [rax]
  4517a9:	and    BYTE PTR [rax],ah
  4517ab:	and    BYTE PTR [rsi+0x52],al
  4517ae:	rex.WRXB
  4517af:	rex.WRB and BYTE PTR [r11+0x20],r15b
  4517b3:	pop    rbx
  4517b4:	and    BYTE PTR [rdi+0x52],al
  4517b7:	rex.WRXB push r13
  4517b9:	push   rax
  4517ba:	and    BYTE PTR [rbp+0x20],bl
  4517bd:	and    eax,0x207c2073
  4517c2:	push   rax
  4517c3:	push   rbp
  4517c4:	rex.X
  4517c5:	rex.WR
  4517c6:	rex.WB
  4517c7:	rex.XB and BYTE PTR [r13+0x20],dil
  4517cb:	pop    rbx
  4517cc:	sub    al,0x20
  4517ce:	cs cs cs pop rbp
  4517d2:	or     ah,BYTE PTR [rax]
  4517d4:	and    BYTE PTR [rax],ah
  4517d6:	and    BYTE PTR [rbx+0x20],bl
  4517d9:	rex.XB
  4517da:	push   r11
  4517dc:	rex.XB
  4517dd:	rex.B
  4517de:	rex.R
  4517df:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4517e4:	rex.RB push r11
  4517e6:	push   rsp
  4517e7:	push   rdx
  4517e8:	rex.WB
  4517e9:	rex.XB push r12
  4517eb:	and    BYTE PTR [rbp+0xa],bl
  4517ee:	or     dl,BYTE PTR [rdx+0x45]
  4517f1:	push   rsi
  4517f2:	rex.WRXB
  4517f3:	rex.WXB
  4517f4:	and    BYTE PTR [r11+0x20],r11b
  4517f8:	rex.RXB push r10
  4517fa:	rex.B
  4517fb:	rex.WRX push rsp
  4517fd:	and    BYTE PTR [rdi+0x50],cl
  451800:	push   rsp
  451801:	rex.WB
  451802:	rex.WRXB
  451803:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451807:	push   rdx
  451808:	and    BYTE PTR [rbp+0xa],bl
  45180b:	and    BYTE PTR [rax],ah
  45180d:	and    BYTE PTR [rax],ah
  45180f:	jnp    0x451831
  451811:	jnp    0x451833
  451813:	push   rbp
  451814:	push   rbx
  451815:	rex.B
  451816:	rex.RXB
  451817:	and    BYTE PTR [r8+riz*1+0x53],r15b
  45181c:	rex.RB
  45181d:	rex.WR
  45181e:	rex.RB
  45181f:	rex.XB push r12
  451821:	and    BYTE PTR [rax+riz*1+0x55],bh
  451825:	push   rax
  451826:	rex.R
  451827:	push   r12
  451829:	and    BYTE PTR [r13+0xa],r15b
  45182d:	and    BYTE PTR [rax],ah
  45182f:	and    BYTE PTR [rax],ah
  451831:	pop    rbx
  451832:	sub    al,0x20
  451834:	cs cs cs pop rbp
  451838:	and    BYTE PTR [rax+riz*1+0x41],bh
  45183c:	rex.WR
  45183d:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451841:	push   rax
  451842:	push   rdx
  451843:	rex.WB push r14
  451845:	rex.WB
  451846:	rex.WR
  451847:	rex.RB
  451848:	rex.RXB
  451849:	rex.RB push r11
  45184b:	and    BYTE PTR [rbp+0x20],bl
  45184e:	jge    0x45185a
  451850:	and    BYTE PTR [rax],ah
  451852:	and    BYTE PTR [rax],ah
  451854:	rex.WRXB
  451855:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  451859:	push   rbx
  45185a:	rex.RB push r9
  45185c:	push   rbp
  45185d:	rex.RB
  45185e:	rex.WRX
  45185f:	rex.XB
  451860:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca038da
  451867:	and    BYTE PTR [rsi],ch
  451869:	cs cs pop rbp
  45186c:	or     ah,BYTE PTR [rax]
  45186e:	and    BYTE PTR [rax],ah
  451870:	and    BYTE PTR [rax],ah
  451872:	and    BYTE PTR [rax],ah
  451874:	and    BYTE PTR [rax],ah
  451876:	jl     0x451898
  451878:	rex.B
  451879:	rex.WR
  45187a:	rex.WR and BYTE PTR [rbx+0x45],r10b
  45187e:	push   rcx
  45187f:	push   rbp
  451880:	rex.RB
  451881:	rex.WRX
  451882:	rex.XB
  451883:	rex.RB push r11
  451885:	and    BYTE PTR [rcx+0x4e],cl
  451888:	and    BYTE PTR [rbx+0x43],dl
  45188b:	rex.W
  45188c:	rex.RB
  45188d:	rex.WRB
  45188e:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca03908
  451895:	and    BYTE PTR [rsi],ch
  451897:	cs cs pop rbp
  45189a:	and    BYTE PTR [rbp+0xa],bh
  45189d:	and    BYTE PTR [rax],ah
  45189f:	and    BYTE PTR [rax],ah
  4518a1:	rex.RX push rdx
  4518a3:	rex.WRXB
  4518a4:	rex.WRB and BYTE PTR [r11+0x20],r15b
  4518a8:	pop    rbx
  4518a9:	and    BYTE PTR [rdi+0x52],al
  4518ac:	rex.WRXB push r13
  4518ae:	push   rax
  4518af:	and    BYTE PTR [rbp+0x20],bl
  4518b2:	and    eax,0x207c2073
  4518b7:	push   rax
  4518b8:	push   rbp
  4518b9:	rex.X
  4518ba:	rex.WR
  4518bb:	rex.WB
  4518bc:	rex.XB and BYTE PTR [r13+0x20],dil
  4518c0:	pop    rbx
  4518c1:	sub    al,0x20
  4518c3:	cs cs cs pop rbp
  4518c7:	or     ah,BYTE PTR [rax]
  4518c9:	and    BYTE PTR [rax],ah
  4518cb:	and    BYTE PTR [rbx+0x20],bl
  4518ce:	rex.XB
  4518cf:	push   r11
  4518d1:	rex.XB
  4518d2:	rex.B
  4518d3:	rex.R
  4518d4:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4518d9:	rex.RB push r11
  4518db:	push   rsp
  4518dc:	push   rdx
  4518dd:	rex.WB
  4518de:	rex.XB push r12
  4518e0:	and    BYTE PTR [rbp+0xa],bl
  4518e3:	or     dl,BYTE PTR [rdx+0x45]
  4518e6:	push   rsi
  4518e7:	rex.WRXB
  4518e8:	rex.WXB
  4518e9:	and    BYTE PTR [r11+0x20],r11b
  4518ed:	rex.RXB push r10
  4518ef:	rex.B
  4518f0:	rex.WRX push rsp
  4518f2:	and    BYTE PTR [rdi+0x50],cl
  4518f5:	push   rsp
  4518f6:	rex.WB
  4518f7:	rex.WRXB
  4518f8:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  4518fc:	push   rdx
  4518fd:	and    BYTE PTR [rbp+0xa],bl
  451900:	and    BYTE PTR [rax],ah
  451902:	and    BYTE PTR [rax],ah
  451904:	jnp    0x451926
  451906:	jnp    0x451928
  451908:	rex.XB push r10
  45190a:	rex.RB
  45190b:	push   r12
  45190d:	and    BYTE PTR [r8+riz*1+0x43],r15b
  451912:	rex.WRXB
  451913:	rex.WRX
  451914:	rex.WRX
  451915:	rex.RB
  451916:	rex.XB push r12
  451918:	and    BYTE PTR [rax+riz*1+0x54],bh
  45191c:	rex.RB
  45191d:	rex.WRB push r8
  45191f:	rex.WRXB push r10
  451921:	push   r10
  451923:	pop    rcx
  451924:	and    BYTE PTR [rax+riz*1+0x54],bh
  451928:	rex.RB
  451929:	rex.WRB push r8
  45192b:	and    BYTE PTR [rbp+0x20],bh
  45192e:	pop    rbx
  45192f:	sub    al,0x20
  451931:	cs cs cs pop rbp
  451935:	and    BYTE PTR [rax+riz*1+0x41],bh
  451939:	rex.WR
  45193a:	rex.WR and BYTE PTR [rbx+0x20],r11b
  45193e:	push   rax
  45193f:	push   rdx
  451940:	rex.WB push r14
  451942:	rex.WB
  451943:	rex.WR
  451944:	rex.RB
  451945:	rex.RXB
  451946:	rex.RB push r11
  451948:	and    BYTE PTR [rbp+0x20],bl
  45194b:	jge    0x451957
  45194d:	and    BYTE PTR [rax],ah
  45194f:	and    BYTE PTR [rax],ah
  451951:	rex.WRXB
  451952:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  451957:	rex.B
  451958:	rex.X
  451959:	push   r11
  45195b:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca039d5
  451962:	and    BYTE PTR [rsi],ch
  451964:	cs cs pop rbp
  451967:	or     ah,BYTE PTR [rax]
  451969:	and    BYTE PTR [rax],ah
  45196b:	and    BYTE PTR [rsi+0x52],al
  45196e:	rex.WRXB
  45196f:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451973:	pop    rbx
  451974:	and    BYTE PTR [rdi+0x52],al
  451977:	rex.WRXB push r13
  451979:	push   rax
  45197a:	and    BYTE PTR [rbp+0x20],bl
  45197d:	and    eax,0x207c2073
  451982:	push   rax
  451983:	push   rbp
  451984:	rex.X
  451985:	rex.WR
  451986:	rex.WB
  451987:	rex.XB and BYTE PTR [r13+0x20],dil
  45198b:	pop    rbx
  45198c:	sub    al,0x20
  45198e:	cs cs cs pop rbp
  451992:	or     ah,BYTE PTR [rax]
  451994:	and    BYTE PTR [rax],ah
  451996:	and    BYTE PTR [rbx+0x20],bl
  451999:	rex.XB
  45199a:	push   r11
  45199c:	rex.XB
  45199d:	rex.B
  45199e:	rex.R
  45199f:	and    BYTE PTR [r8+riz*1+0x52],r15b
  4519a4:	rex.RB push r11
  4519a6:	push   rsp
  4519a7:	push   rdx
  4519a8:	rex.WB
  4519a9:	rex.XB push r12
  4519ab:	and    BYTE PTR [rbp+0xa],bl
  4519ae:	or     dl,BYTE PTR [rdx+0x45]
  4519b1:	push   rsi
  4519b2:	rex.WRXB
  4519b3:	rex.WXB
  4519b4:	and    BYTE PTR [r11+0x20],r11b
  4519b8:	rex.RXB push r10
  4519ba:	rex.B
  4519bb:	rex.WRX push rsp
  4519bd:	and    BYTE PTR [rdi+0x50],cl
  4519c0:	push   rsp
  4519c1:	rex.WB
  4519c2:	rex.WRXB
  4519c3:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  4519c7:	push   rdx
  4519c8:	and    BYTE PTR [rbp+0xa],bl
  4519cb:	and    BYTE PTR [rax],ah
  4519cd:	and    BYTE PTR [rax],ah
  4519cf:	jnp    0x4519f1
  4519d1:	push   rbp
  4519d2:	push   rbx
  4519d3:	rex.B
  4519d4:	rex.RXB
  4519d5:	and    BYTE PTR [r8+riz*1+0x41],r15b
  4519da:	rex.WR
  4519db:	rex.WR and BYTE PTR [rbx+0x20],r11b
  4519df:	push   rax
  4519e0:	push   rdx
  4519e1:	rex.WB push r14
  4519e3:	rex.WB
  4519e4:	rex.WR
  4519e5:	rex.RB
  4519e6:	rex.RXB
  4519e7:	rex.RB push r11
  4519e9:	and    BYTE PTR [rbp+0x20],bl
  4519ec:	jge    0x4519f8
  4519ee:	and    BYTE PTR [rax],ah
  4519f0:	and    BYTE PTR [rax],ah
  4519f2:	rex.WRXB
  4519f3:	rex.WRX and BYTE PTR [rdi+r9*2+0x4d],r8b
  4519f8:	rex.B
  4519f9:	rex.WB
  4519fa:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca03a74
  451a01:	and    BYTE PTR [rsi],ch
  451a03:	cs cs pop rbp
  451a06:	or     ah,BYTE PTR [rax]
  451a08:	and    BYTE PTR [rax],ah
  451a0a:	and    BYTE PTR [rsi+0x52],al
  451a0d:	rex.WRXB
  451a0e:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451a12:	pop    rbx
  451a13:	and    BYTE PTR [rdi+0x52],al
  451a16:	rex.WRXB push r13
  451a18:	push   rax
  451a19:	and    BYTE PTR [rbp+0x20],bl
  451a1c:	and    eax,0x207c2073
  451a21:	push   rax
  451a22:	push   rbp
  451a23:	rex.X
  451a24:	rex.WR
  451a25:	rex.WB
  451a26:	rex.XB and BYTE PTR [r13+0x20],dil
  451a2a:	pop    rbx
  451a2b:	sub    al,0x20
  451a2d:	cs cs cs pop rbp
  451a31:	or     ah,BYTE PTR [rax]
  451a33:	and    BYTE PTR [rax],ah
  451a35:	and    BYTE PTR [rbx+0x20],bl
  451a38:	rex.XB
  451a39:	push   r11
  451a3b:	rex.XB
  451a3c:	rex.B
  451a3d:	rex.R
  451a3e:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451a43:	rex.RB push r11
  451a45:	push   rsp
  451a46:	push   rdx
  451a47:	rex.WB
  451a48:	rex.XB push r12
  451a4a:	and    BYTE PTR [rbp+0xa],bl
  451a4d:	or     dl,BYTE PTR [rdx+0x45]
  451a50:	push   rsi
  451a51:	rex.WRXB
  451a52:	rex.WXB
  451a53:	and    BYTE PTR [r11+0x20],r11b
  451a57:	rex.RXB push r10
  451a59:	rex.B
  451a5a:	rex.WRX push rsp
  451a5c:	and    BYTE PTR [rdi+0x50],cl
  451a5f:	push   rsp
  451a60:	rex.WB
  451a61:	rex.WRXB
  451a62:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451a66:	push   rdx
  451a67:	and    BYTE PTR [rbp+0xa],bl
  451a6a:	and    BYTE PTR [rax],ah
  451a6c:	and    BYTE PTR [rax],ah
  451a6e:	jnp    0x451a90
  451a70:	push   rbp
  451a71:	push   rbx
  451a72:	rex.B
  451a73:	rex.RXB
  451a74:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451a79:	rex.WR
  451a7a:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451a7e:	push   rax
  451a7f:	push   rdx
  451a80:	rex.WB push r14
  451a82:	rex.WB
  451a83:	rex.WR
  451a84:	rex.RB
  451a85:	rex.RXB
  451a86:	rex.RB push r11
  451a88:	and    BYTE PTR [rbp+0x20],bl
  451a8b:	jge    0x451a97
  451a8d:	and    BYTE PTR [rax],ah
  451a8f:	and    BYTE PTR [rax],ah
  451a91:	rex.WRXB
  451a92:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451a96:	push   rdx
  451a97:	rex.RB
  451a98:	rex.WB
  451a99:	rex.RXB
  451a9a:	rex.WRX and BYTE PTR [rcx+r8*2+0x54],r8b
  451a9f:	and    BYTE PTR [r15+0x52],dl
  451aa3:	push   r8
  451aa5:	push   rax
  451aa6:	rex.RB push r10
  451aa8:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca03b21
  451aae:	and    BYTE PTR [rsi],ch
  451ab0:	cs cs pop rbp
  451ab3:	or     ah,BYTE PTR [rax]
  451ab5:	and    BYTE PTR [rax],ah
  451ab7:	and    BYTE PTR [rsi+0x52],al
  451aba:	rex.WRXB
  451abb:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451abf:	pop    rbx
  451ac0:	and    BYTE PTR [rdi+0x52],al
  451ac3:	rex.WRXB push r13
  451ac5:	push   rax
  451ac6:	and    BYTE PTR [rbp+0x20],bl
  451ac9:	and    eax,0x207c2073
  451ace:	push   rax
  451acf:	push   rbp
  451ad0:	rex.X
  451ad1:	rex.WR
  451ad2:	rex.WB
  451ad3:	rex.XB and BYTE PTR [r13+0x20],dil
  451ad7:	pop    rbx
  451ad8:	sub    al,0x20
  451ada:	cs cs cs pop rbp
  451ade:	or     ah,BYTE PTR [rax]
  451ae0:	and    BYTE PTR [rax],ah
  451ae2:	and    BYTE PTR [rbx+0x20],bl
  451ae5:	rex.XB
  451ae6:	push   r11
  451ae8:	rex.XB
  451ae9:	rex.B
  451aea:	rex.R
  451aeb:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451af0:	rex.RB push r11
  451af2:	push   rsp
  451af3:	push   rdx
  451af4:	rex.WB
  451af5:	rex.XB push r12
  451af7:	and    BYTE PTR [rbp+0xa],bl
  451afa:	or     dl,BYTE PTR [rdx+0x45]
  451afd:	push   rsi
  451afe:	rex.WRXB
  451aff:	rex.WXB
  451b00:	and    BYTE PTR [r11+0x20],r11b
  451b04:	rex.RXB push r10
  451b06:	rex.B
  451b07:	rex.WRX push rsp
  451b09:	and    BYTE PTR [rdi+0x50],cl
  451b0c:	push   rsp
  451b0d:	rex.WB
  451b0e:	rex.WRXB
  451b0f:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451b13:	push   rdx
  451b14:	and    BYTE PTR [rbp+0xa],bl
  451b17:	and    BYTE PTR [rax],ah
  451b19:	and    BYTE PTR [rax],ah
  451b1b:	jnp    0x451b3d
  451b1d:	push   rbp
  451b1e:	push   rbx
  451b1f:	rex.B
  451b20:	rex.RXB
  451b21:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451b26:	rex.WR
  451b27:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451b2b:	push   rax
  451b2c:	push   rdx
  451b2d:	rex.WB push r14
  451b2f:	rex.WB
  451b30:	rex.WR
  451b31:	rex.RB
  451b32:	rex.RXB
  451b33:	rex.RB push r11
  451b35:	and    BYTE PTR [rbp+0x20],bl
  451b38:	jge    0x451b44
  451b3a:	and    BYTE PTR [rax],ah
  451b3c:	and    BYTE PTR [rax],ah
  451b3e:	rex.WRXB
  451b3f:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451b43:	push   rdx
  451b44:	rex.RB
  451b45:	rex.WB
  451b46:	rex.RXB
  451b47:	rex.WRX and BYTE PTR [rbx+0x45],r10b
  451b4b:	push   rdx
  451b4c:	push   rsi
  451b4d:	rex.RB push r10
  451b4f:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca03bc8
  451b55:	and    BYTE PTR [rsi],ch
  451b57:	cs cs pop rbp
  451b5a:	or     ah,BYTE PTR [rax]
  451b5c:	and    BYTE PTR [rax],ah
  451b5e:	and    BYTE PTR [rsi+0x52],al
  451b61:	rex.WRXB
  451b62:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451b66:	pop    rbx
  451b67:	and    BYTE PTR [rdi+0x52],al
  451b6a:	rex.WRXB push r13
  451b6c:	push   rax
  451b6d:	and    BYTE PTR [rbp+0x20],bl
  451b70:	and    eax,0x207c2073
  451b75:	push   rax
  451b76:	push   rbp
  451b77:	rex.X
  451b78:	rex.WR
  451b79:	rex.WB
  451b7a:	rex.XB and BYTE PTR [r13+0x20],dil
  451b7e:	pop    rbx
  451b7f:	sub    al,0x20
  451b81:	cs cs cs pop rbp
  451b85:	or     ah,BYTE PTR [rax]
  451b87:	and    BYTE PTR [rax],ah
  451b89:	and    BYTE PTR [rbx+0x20],bl
  451b8c:	rex.XB
  451b8d:	push   r11
  451b8f:	rex.XB
  451b90:	rex.B
  451b91:	rex.R
  451b92:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451b97:	rex.RB push r11
  451b99:	push   rsp
  451b9a:	push   rdx
  451b9b:	rex.WB
  451b9c:	rex.XB push r12
  451b9e:	and    BYTE PTR [rbp+0xa],bl
  451ba1:	or     dl,BYTE PTR [rdx+0x45]
  451ba4:	push   rsi
  451ba5:	rex.WRXB
  451ba6:	rex.WXB
  451ba7:	and    BYTE PTR [r11+0x20],r11b
  451bab:	rex.RXB push r10
  451bad:	rex.B
  451bae:	rex.WRX push rsp
  451bb0:	and    BYTE PTR [rdi+0x50],cl
  451bb3:	push   rsp
  451bb4:	rex.WB
  451bb5:	rex.WRXB
  451bb6:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451bba:	push   rdx
  451bbb:	and    BYTE PTR [rbp+0xa],bl
  451bbe:	and    BYTE PTR [rax],ah
  451bc0:	and    BYTE PTR [rax],ah
  451bc2:	jnp    0x451be4
  451bc4:	rex.RB pop r8
  451bc6:	rex.RB
  451bc7:	rex.XB push r13
  451bc9:	push   rsp
  451bca:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451bcf:	rex.WR
  451bd0:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451bd4:	push   rax
  451bd5:	push   rdx
  451bd6:	rex.WB push r14
  451bd8:	rex.WB
  451bd9:	rex.WR
  451bda:	rex.RB
  451bdb:	rex.RXB
  451bdc:	rex.RB push r11
  451bde:	and    BYTE PTR [rbp+0x20],bl
  451be1:	jge    0x451bed
  451be3:	and    BYTE PTR [rax],ah
  451be5:	and    BYTE PTR [rax],ah
  451be7:	rex.WRXB
  451be8:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  451bec:	rex.RX push rbp
  451bee:	rex.WRX
  451bef:	rex.XB push r12
  451bf1:	rex.WB
  451bf2:	rex.WRXB
  451bf3:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206d3c6d
  451bfa:	pop    rbx
  451bfb:	and    BYTE PTR [rbx+0x20],bl
  451bfe:	and    eax,0x205d2073
  451c03:	pop    rbx
  451c04:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a23c7d
  451c0a:	and    eax,0x2c5b2073
  451c0f:	and    BYTE PTR [rsi],ch
  451c11:	cs cs pop rbp
  451c14:	and    BYTE PTR [rbp+0x20],bl
  451c17:	sub    DWORD PTR [rax],esp
  451c19:	pop    rbx
  451c1a:	sub    al,0x20
  451c1c:	cs cs cs pop rbp
  451c20:	or     ah,BYTE PTR [rax]
  451c22:	and    BYTE PTR [rax],ah
  451c24:	and    BYTE PTR [rax],ah
  451c26:	and    BYTE PTR [rax],ah
  451c28:	and    BYTE PTR [rax],ah
  451c2a:	jl     0x451c4c
  451c2c:	rex.B
  451c2d:	rex.WR
  451c2e:	rex.WR and BYTE PTR [rsi+0x55],r8b
  451c32:	rex.WRX
  451c33:	rex.XB push r12
  451c35:	rex.WB
  451c36:	rex.WRXB
  451c37:	rex.WRX push rbx
  451c39:	and    BYTE PTR [rcx+0x4e],cl
  451c3c:	and    BYTE PTR [rbx+0x43],dl
  451c3f:	rex.W
  451c40:	rex.RB
  451c41:	rex.WRB
  451c42:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca03cbc
  451c49:	and    BYTE PTR [rsi],ch
  451c4b:	cs cs pop rbp
  451c4e:	and    BYTE PTR [rbp+0xa],bh
  451c51:	and    BYTE PTR [rax],ah
  451c53:	and    BYTE PTR [rax],ah
  451c55:	rex.RX push rdx
  451c57:	rex.WRXB
  451c58:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451c5c:	pop    rbx
  451c5d:	and    BYTE PTR [rdi+0x52],al
  451c60:	rex.WRXB push r13
  451c62:	push   rax
  451c63:	and    BYTE PTR [rbp+0x20],bl
  451c66:	and    eax,0x207c2073
  451c6b:	push   rax
  451c6c:	push   rbp
  451c6d:	rex.X
  451c6e:	rex.WR
  451c6f:	rex.WB
  451c70:	rex.XB and BYTE PTR [r13+0x20],dil
  451c74:	pop    rbx
  451c75:	sub    al,0x20
  451c77:	cs cs cs pop rbp
  451c7b:	or     ah,BYTE PTR [rax]
  451c7d:	and    BYTE PTR [rax],ah
  451c7f:	and    BYTE PTR [rbx+0x20],bl
  451c82:	rex.XB
  451c83:	push   r11
  451c85:	rex.XB
  451c86:	rex.B
  451c87:	rex.R
  451c88:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451c8d:	rex.RB push r11
  451c8f:	push   rsp
  451c90:	push   rdx
  451c91:	rex.WB
  451c92:	rex.XB push r12
  451c94:	and    BYTE PTR [rbp+0xa],bl
  451c97:	or     dl,BYTE PTR [rdx+0x45]
  451c9a:	push   rsi
  451c9b:	rex.WRXB
  451c9c:	rex.WXB
  451c9d:	and    BYTE PTR [r11+0x20],r11b
  451ca1:	rex.RXB push r10
  451ca3:	rex.B
  451ca4:	rex.WRX push rsp
  451ca6:	and    BYTE PTR [rdi+0x50],cl
  451ca9:	push   rsp
  451caa:	rex.WB
  451cab:	rex.WRXB
  451cac:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451cb0:	push   rdx
  451cb1:	and    BYTE PTR [rbp+0xa],bl
  451cb4:	and    BYTE PTR [rax],ah
  451cb6:	and    BYTE PTR [rax],ah
  451cb8:	jnp    0x451cda
  451cba:	push   rbp
  451cbb:	push   rbx
  451cbc:	rex.B
  451cbd:	rex.RXB
  451cbe:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451cc3:	rex.WR
  451cc4:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451cc8:	push   rax
  451cc9:	push   rdx
  451cca:	rex.WB push r14
  451ccc:	rex.WB
  451ccd:	rex.WR
  451cce:	rex.RB
  451ccf:	rex.RXB
  451cd0:	rex.RB push r11
  451cd2:	and    BYTE PTR [rbp+0x20],bl
  451cd5:	jge    0x451ce1
  451cd7:	and    BYTE PTR [rax],ah
  451cd9:	and    BYTE PTR [rax],ah
  451cdb:	rex.WRXB
  451cdc:	rex.WRX and BYTE PTR [rcx+r8*2+0x4e],r9b
  451ce1:	rex.RXB push r13
  451ce3:	rex.B
  451ce4:	rex.RXB
  451ce5:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca03d5f
  451cec:	and    BYTE PTR [rsi],ch
  451cee:	cs cs pop rbp
  451cf1:	or     ah,BYTE PTR [rax]
  451cf3:	and    BYTE PTR [rax],ah
  451cf5:	and    BYTE PTR [rsi+0x52],al
  451cf8:	rex.WRXB
  451cf9:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451cfd:	pop    rbx
  451cfe:	and    BYTE PTR [rdi+0x52],al
  451d01:	rex.WRXB push r13
  451d03:	push   rax
  451d04:	and    BYTE PTR [rbp+0x20],bl
  451d07:	and    eax,0x207c2073
  451d0c:	push   rax
  451d0d:	push   rbp
  451d0e:	rex.X
  451d0f:	rex.WR
  451d10:	rex.WB
  451d11:	rex.XB and BYTE PTR [r13+0x20],dil
  451d15:	pop    rbx
  451d16:	sub    al,0x20
  451d18:	cs cs cs pop rbp
  451d1c:	or     ah,BYTE PTR [rax]
  451d1e:	and    BYTE PTR [rax],ah
  451d20:	and    BYTE PTR [rbx+0x20],bl
  451d23:	rex.XB
  451d24:	push   r11
  451d26:	rex.XB
  451d27:	rex.B
  451d28:	rex.R
  451d29:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451d2e:	rex.RB push r11
  451d30:	push   rsp
  451d31:	push   rdx
  451d32:	rex.WB
  451d33:	rex.XB push r12
  451d35:	and    BYTE PTR [rbp+0xa],bl
  451d38:	or     dl,BYTE PTR [rdx+0x45]
  451d3b:	push   rsi
  451d3c:	rex.WRXB
  451d3d:	rex.WXB
  451d3e:	and    BYTE PTR [r11+0x20],r11b
  451d42:	rex.RXB push r10
  451d44:	rex.B
  451d45:	rex.WRX push rsp
  451d47:	and    BYTE PTR [rdi+0x50],cl
  451d4a:	push   rsp
  451d4b:	rex.WB
  451d4c:	rex.WRXB
  451d4d:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451d51:	push   rdx
  451d52:	and    BYTE PTR [rbp+0xa],bl
  451d55:	and    BYTE PTR [rax],ah
  451d57:	and    BYTE PTR [rax],ah
  451d59:	jnp    0x451d7b
  451d5b:	jnp    0x451d7d
  451d5d:	push   rbx
  451d5e:	rex.RB
  451d5f:	rex.WR
  451d60:	rex.RB
  451d61:	rex.XB push r12
  451d63:	and    BYTE PTR [rax+riz*1+0x55],bh
  451d67:	push   rax
  451d68:	rex.R
  451d69:	push   r12
  451d6b:	and    BYTE PTR [r13+0x20],r15b
  451d6f:	pop    rbx
  451d70:	sub    al,0x20
  451d72:	cs cs cs pop rbp
  451d76:	and    BYTE PTR [rax+riz*1+0x41],bh
  451d7a:	rex.WR
  451d7b:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451d7f:	push   rax
  451d80:	push   rdx
  451d81:	rex.WB push r14
  451d83:	rex.WB
  451d84:	rex.WR
  451d85:	rex.RB
  451d86:	rex.RXB
  451d87:	rex.RB push r11
  451d89:	and    BYTE PTR [rbp+0x20],bl
  451d8c:	jge    0x451d98
  451d8e:	and    BYTE PTR [rax],ah
  451d90:	and    BYTE PTR [rax],ah
  451d92:	rex.WRXB
  451d93:	rex.WRX and BYTE PTR [rcx+r8*2+0x52],r9b
  451d98:	rex.RXB
  451d99:	and    BYTE PTR [r15+0x42],r9b
  451d9d:	rex.WX
  451d9e:	rex.RB
  451d9f:	rex.XB push r12
  451da1:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca03e1a
  451da7:	and    BYTE PTR [rsi],ch
  451da9:	cs cs pop rbp
  451dac:	or     ah,BYTE PTR [rax]
  451dae:	and    BYTE PTR [rax],ah
  451db0:	and    BYTE PTR [rsi+0x52],al
  451db3:	rex.WRXB
  451db4:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451db8:	pop    rbx
  451db9:	and    BYTE PTR [rdi+0x52],al
  451dbc:	rex.WRXB push r13
  451dbe:	push   rax
  451dbf:	and    BYTE PTR [rbp+0x20],bl
  451dc2:	and    eax,0x207c2073
  451dc7:	push   rax
  451dc8:	push   rbp
  451dc9:	rex.X
  451dca:	rex.WR
  451dcb:	rex.WB
  451dcc:	rex.XB and BYTE PTR [r13+0x20],dil
  451dd0:	pop    rbx
  451dd1:	sub    al,0x20
  451dd3:	cs cs cs pop rbp
  451dd7:	or     ah,BYTE PTR [rax]
  451dd9:	and    BYTE PTR [rax],ah
  451ddb:	and    BYTE PTR [rbx+0x20],bl
  451dde:	rex.XB
  451ddf:	push   r11
  451de1:	rex.XB
  451de2:	rex.B
  451de3:	rex.R
  451de4:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451de9:	rex.RB push r11
  451deb:	push   rsp
  451dec:	push   rdx
  451ded:	rex.WB
  451dee:	rex.XB push r12
  451df0:	and    BYTE PTR [rbp+0xa],bl
  451df3:	or     dl,BYTE PTR [rdx+0x45]
  451df6:	push   rsi
  451df7:	rex.WRXB
  451df8:	rex.WXB
  451df9:	and    BYTE PTR [r11+0x20],r11b
  451dfd:	rex.RXB push r10
  451dff:	rex.B
  451e00:	rex.WRX push rsp
  451e02:	and    BYTE PTR [rdi+0x50],cl
  451e05:	push   rsp
  451e06:	rex.WB
  451e07:	rex.WRXB
  451e08:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451e0c:	push   rdx
  451e0d:	and    BYTE PTR [rbp+0xa],bl
  451e10:	and    BYTE PTR [rax],ah
  451e12:	and    BYTE PTR [rax],ah
  451e14:	jnp    0x451e36
  451e16:	jnp    0x451e38
  451e18:	rex.XB push r10
  451e1a:	rex.RB
  451e1b:	push   r12
  451e1d:	and    BYTE PTR [r8+riz*1+0x55],r15b
  451e22:	push   rbx
  451e23:	rex.B
  451e24:	rex.RXB
  451e25:	and    BYTE PTR [r13+0x20],r15b
  451e29:	pop    rbx
  451e2a:	sub    al,0x20
  451e2c:	cs cs cs pop rbp
  451e30:	and    BYTE PTR [rax+riz*1+0x41],bh
  451e34:	rex.WR
  451e35:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451e39:	push   rax
  451e3a:	push   rdx
  451e3b:	rex.WB push r14
  451e3d:	rex.WB
  451e3e:	rex.WR
  451e3f:	rex.RB
  451e40:	rex.RXB
  451e41:	rex.RB push r11
  451e43:	and    BYTE PTR [rbp+0x20],bl
  451e46:	jge    0x451e52
  451e48:	and    BYTE PTR [rax],ah
  451e4a:	and    BYTE PTR [rax],ah
  451e4c:	rex.WRXB
  451e4d:	rex.WRX and BYTE PTR [rbx+0x43],r10b
  451e51:	rex.W
  451e52:	rex.RB
  451e53:	rex.WRB
  451e54:	and    BYTE PTR [rip+0x2c5b2073],spl        # 0x2ca03ece
  451e5b:	and    BYTE PTR [rsi],ch
  451e5d:	cs cs pop rbp
  451e60:	or     ah,BYTE PTR [rax]
  451e62:	and    BYTE PTR [rax],ah
  451e64:	and    BYTE PTR [rsi+0x52],al
  451e67:	rex.WRXB
  451e68:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451e6c:	pop    rbx
  451e6d:	and    BYTE PTR [rdi+0x52],al
  451e70:	rex.WRXB push r13
  451e72:	push   rax
  451e73:	and    BYTE PTR [rbp+0x20],bl
  451e76:	and    eax,0x207c2073
  451e7b:	push   rax
  451e7c:	push   rbp
  451e7d:	rex.X
  451e7e:	rex.WR
  451e7f:	rex.WB
  451e80:	rex.XB and BYTE PTR [r13+0x20],dil
  451e84:	pop    rbx
  451e85:	sub    al,0x20
  451e87:	cs cs cs pop rbp
  451e8b:	or     ah,BYTE PTR [rax]
  451e8d:	and    BYTE PTR [rax],ah
  451e8f:	and    BYTE PTR [rbx+0x20],bl
  451e92:	rex.XB
  451e93:	push   r11
  451e95:	rex.XB
  451e96:	rex.B
  451e97:	rex.R
  451e98:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451e9d:	rex.RB push r11
  451e9f:	push   rsp
  451ea0:	push   rdx
  451ea1:	rex.WB
  451ea2:	rex.XB push r12
  451ea4:	and    BYTE PTR [rbp+0xa],bl
  451ea7:	or     dl,BYTE PTR [rdx+0x45]
  451eaa:	push   rsi
  451eab:	rex.WRXB
  451eac:	rex.WXB
  451ead:	and    BYTE PTR [r11+0x20],r11b
  451eb1:	rex.RXB push r10
  451eb3:	rex.B
  451eb4:	rex.WRX push rsp
  451eb6:	and    BYTE PTR [rdi+0x50],cl
  451eb9:	push   rsp
  451eba:	rex.WB
  451ebb:	rex.WRXB
  451ebc:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451ec0:	push   rdx
  451ec1:	and    BYTE PTR [rbp+0xa],bl
  451ec4:	and    BYTE PTR [rax],ah
  451ec6:	and    BYTE PTR [rax],ah
  451ec8:	jnp    0x451eea
  451eca:	rex.XB push r10
  451ecc:	rex.RB
  451ecd:	push   r12
  451ecf:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451ed4:	rex.WR
  451ed5:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451ed9:	push   rax
  451eda:	push   rdx
  451edb:	rex.WB push r14
  451edd:	rex.WB
  451ede:	rex.WR
  451edf:	rex.RB
  451ee0:	rex.RXB
  451ee1:	rex.RB push r11
  451ee3:	and    BYTE PTR [rbp+0x20],bl
  451ee6:	jge    0x451ef2
  451ee8:	and    BYTE PTR [rax],ah
  451eea:	and    BYTE PTR [rax],ah
  451eec:	rex.WRXB
  451eed:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  451ef2:	rex.WR
  451ef3:	rex.RB push r11
  451ef5:	push   rax
  451ef6:	rex.B
  451ef7:	rex.XB
  451ef8:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca03f72
  451eff:	and    BYTE PTR [rsi],ch
  451f01:	cs cs pop rbp
  451f04:	or     ah,BYTE PTR [rax]
  451f06:	and    BYTE PTR [rax],ah
  451f08:	and    BYTE PTR [rsi+0x52],al
  451f0b:	rex.WRXB
  451f0c:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451f10:	pop    rbx
  451f11:	and    BYTE PTR [rdi+0x52],al
  451f14:	rex.WRXB push r13
  451f16:	push   rax
  451f17:	and    BYTE PTR [rbp+0x20],bl
  451f1a:	and    eax,0x207c2073
  451f1f:	push   rax
  451f20:	push   rbp
  451f21:	rex.X
  451f22:	rex.WR
  451f23:	rex.WB
  451f24:	rex.XB and BYTE PTR [r13+0x20],dil
  451f28:	pop    rbx
  451f29:	sub    al,0x20
  451f2b:	cs cs cs pop rbp
  451f2f:	or     ah,BYTE PTR [rax]
  451f31:	and    BYTE PTR [rax],ah
  451f33:	and    BYTE PTR [rbx+0x20],bl
  451f36:	rex.XB
  451f37:	push   r11
  451f39:	rex.XB
  451f3a:	rex.B
  451f3b:	rex.R
  451f3c:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451f41:	rex.RB push r11
  451f43:	push   rsp
  451f44:	push   rdx
  451f45:	rex.WB
  451f46:	rex.XB push r12
  451f48:	and    BYTE PTR [rbp+0xa],bl
  451f4b:	or     dl,BYTE PTR [rdx+0x45]
  451f4e:	push   rsi
  451f4f:	rex.WRXB
  451f50:	rex.WXB
  451f51:	and    BYTE PTR [r11+0x20],r11b
  451f55:	rex.RXB push r10
  451f57:	rex.B
  451f58:	rex.WRX push rsp
  451f5a:	and    BYTE PTR [rdi+0x50],cl
  451f5d:	push   rsp
  451f5e:	rex.WB
  451f5f:	rex.WRXB
  451f60:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  451f64:	push   rdx
  451f65:	and    BYTE PTR [rbp+0xa],bl
  451f68:	and    BYTE PTR [rax],ah
  451f6a:	and    BYTE PTR [rax],ah
  451f6c:	jnp    0x451f8e
  451f6e:	push   rbp
  451f6f:	push   rbx
  451f70:	rex.B
  451f71:	rex.RXB
  451f72:	and    BYTE PTR [r8+riz*1+0x41],r15b
  451f77:	rex.WR
  451f78:	rex.WR and BYTE PTR [rbx+0x20],r11b
  451f7c:	push   rax
  451f7d:	push   rdx
  451f7e:	rex.WB push r14
  451f80:	rex.WB
  451f81:	rex.WR
  451f82:	rex.RB
  451f83:	rex.RXB
  451f84:	rex.RB push r11
  451f86:	and    BYTE PTR [rbp+0x20],bl
  451f89:	jge    0x451f95
  451f8b:	and    BYTE PTR [rax],ah
  451f8d:	and    BYTE PTR [rax],ah
  451f8f:	rex.WRXB
  451f90:	rex.WRX and BYTE PTR [rcx+r11*2+0x50],r10b
  451f95:	and    BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca0400f
  451f9c:	and    BYTE PTR [rsi],ch
  451f9e:	cs cs pop rbp
  451fa1:	or     ah,BYTE PTR [rax]
  451fa3:	and    BYTE PTR [rax],ah
  451fa5:	and    BYTE PTR [rsi+0x52],al
  451fa8:	rex.WRXB
  451fa9:	rex.WRB and BYTE PTR [r11+0x20],r15b
  451fad:	pop    rbx
  451fae:	and    BYTE PTR [rdi+0x52],al
  451fb1:	rex.WRXB push r13
  451fb3:	push   rax
  451fb4:	and    BYTE PTR [rbp+0x20],bl
  451fb7:	and    eax,0x207c2073
  451fbc:	push   rax
  451fbd:	push   rbp
  451fbe:	rex.X
  451fbf:	rex.WR
  451fc0:	rex.WB
  451fc1:	rex.XB and BYTE PTR [r13+0x20],dil
  451fc5:	pop    rbx
  451fc6:	sub    al,0x20
  451fc8:	cs cs cs pop rbp
  451fcc:	or     ah,BYTE PTR [rax]
  451fce:	and    BYTE PTR [rax],ah
  451fd0:	and    BYTE PTR [rbx+0x20],bl
  451fd3:	rex.XB
  451fd4:	push   r11
  451fd6:	rex.XB
  451fd7:	rex.B
  451fd8:	rex.R
  451fd9:	and    BYTE PTR [r8+riz*1+0x52],r15b
  451fde:	rex.RB push r11
  451fe0:	push   rsp
  451fe1:	push   rdx
  451fe2:	rex.WB
  451fe3:	rex.XB push r12
  451fe5:	and    BYTE PTR [rbp+0xa],bl
  451fe8:	or     dl,BYTE PTR [rdx+0x45]
  451feb:	push   rsi
  451fec:	rex.WRXB
  451fed:	rex.WXB
  451fee:	and    BYTE PTR [r11+0x20],r11b
  451ff2:	rex.B
  451ff3:	rex.R
  451ff4:	rex.WRB
  451ff5:	rex.WB
  451ff6:	rex.WRX and BYTE PTR [rdi+0x50],r9b
  451ffa:	push   rsp
  451ffb:	rex.WB
  451ffc:	rex.WRXB
  451ffd:	rex.WRX and BYTE PTR [rsi+0x4f],r8b
  452001:	push   rdx
  452002:	and    BYTE PTR [rbp+0xa],bl
  452005:	and    BYTE PTR [rax],ah
  452007:	and    BYTE PTR [rax],ah
  452009:	and    eax,0x2c5b2073
  45200e:	and    BYTE PTR [rsi],ch
  452010:	cs cs pop rbp
  452013:	and    BYTE PTR [rsi+0x52],al
  452016:	rex.WRXB
  452017:	rex.WRB and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca04091
  45201e:	and    BYTE PTR [rsi],ch
  452020:	cs cs pop rbp
  452023:	or     ah,BYTE PTR [rax]
  452025:	and    BYTE PTR [rax],ah
  452027:	and    BYTE PTR [rbx+0x20],bl
  45202a:	rex.XB
  45202b:	push   r11
  45202d:	rex.XB
  45202e:	rex.B
  45202f:	rex.R
  452030:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452035:	rex.RB push r11
  452037:	push   rsp
  452038:	push   rdx
  452039:	rex.WB
  45203a:	rex.XB push r12
  45203c:	and    BYTE PTR [rbp+0x0],bl
  45203f:	add    BYTE PTR [rdx+0x4f],dl
  452042:	rex.WR
  452043:	rex.WR
  452044:	rex.X
  452045:	rex.B
  452046:	rex.XB
  452047:	rex.WXB and BYTE PTR [r11+0x20],bl
  45204b:	push   rdi
  45204c:	rex.WRXB push r10
  45204e:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  452053:	push   rdx
  452054:	rex.B
  452055:	rex.WRX push rbx
  452057:	rex.B
  452058:	rex.XB push r12
  45205a:	rex.WB
  45205b:	rex.WRXB
  45205c:	rex.WRX and BYTE PTR [rbp+0x0],r11b
  452060:	push   rdx
  452061:	rex.WRXB
  452062:	rex.WR
  452063:	rex.WR
  452064:	rex.X
  452065:	rex.B
  452066:	rex.XB
  452067:	rex.WXB and BYTE PTR [r8+0x52],dl
  45206b:	rex.RB push r8
  45206d:	push   r10
  45206f:	rex.RB
  452070:	and    BYTE PTR [rip+0x73],r12b        # 0x4520ea
  452077:	add    BYTE PTR [rdx+0x4f],dl
  45207a:	rex.WR
  45207b:	rex.WR
  45207c:	rex.X
  45207d:	rex.B
  45207e:	rex.XB
  45207f:	rex.WXB and BYTE PTR [r11+0x20],bl
  452083:	push   rdi
  452084:	rex.WRXB push r10
  452086:	rex.WXB and BYTE PTR [r8+r12*1+0x54],dil
  45208b:	push   rdx
  45208c:	rex.B
  45208d:	rex.WRX push rbx
  45208f:	rex.B
  452090:	rex.XB push r12
  452092:	rex.WB
  452093:	rex.WRXB
  452094:	rex.WRX and BYTE PTR [rbp+0x20],r11b
  452098:	push   rsp
  452099:	rex.WRXB and BYTE PTR [r11+0x20],r11b
  45209d:	push   rbx
  45209e:	push   r14
  4520a0:	rex.RB push r8
  4520a2:	rex.WRXB
  4520a3:	rex.WB
  4520a4:	rex.WRX push rsp
  4520a6:	and    BYTE PTR [rbp+0x20],bl
  4520a9:	and    eax,0x41530073
  4520ae:	push   rsi
  4520af:	rex.RB push r8
  4520b1:	rex.WRXB
  4520b2:	rex.WB
  4520b3:	rex.WRX push rsp
  4520b5:	and    BYTE PTR [rip+0x72700073],ah        # 0x72b5212e
  4520bb:	outs   dx,DWORD PTR ds:[rsi]
  4520bc:	jbe    0x452127
  4520be:	fs gs jb 0x4520c2
  4520c2:	add    BYTE PTR [rax],al
  4520c4:	add    BYTE PTR [rax],al
  4520c6:	add    BYTE PTR [rax],al
  4520c8:	push   rbx
  4520c9:	rex.RB
  4520ca:	rex.XB push r13
  4520cc:	push   rdx
  4520cd:	rex.WB push r12
  4520cf:	pop    rcx
  4520d0:	and    BYTE PTR [rcx+rax*2+0x42],cl
  4520d4:	rex.RB
  4520d5:	rex.WR and BYTE PTR [rbx+0x20],r11b
  4520d9:	rex.RX
  4520da:	rex.WRXB push r10
  4520dc:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a24155
  4520e2:	rex.WRXB
  4520e3:	rex.WRX or r15b,BYTE PTR [rbx+0xa]
  4520e7:	and    BYTE PTR [rax],ah
  4520e9:	push   rsp
  4520ea:	rex.B
  4520eb:	rex.X
  4520ec:	rex.WR
  4520ed:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac14167
  4520f4:	and    BYTE PTR [rax],ah
  4520f6:	rex.XB
  4520f7:	rex.WRXB
  4520f8:	rex.WR push rbp
  4520fa:	rex.WRB
  4520fb:	rex.WRX and BYTE PTR [rip+0x73252e73],r12b        # 0x736a4f75
  452102:	and    BYTE PTR [rdx+rcx*1+0x20],bh
  452106:	and    BYTE PTR [rcx+0x47],al
  452109:	rex.RXB push r10
  45210b:	rex.RB
  45210c:	rex.RXB
  45210d:	push   r12
  45210f:	and    BYTE PTR [rip+0x20282073],r12b        # 0x206d4189
  452116:	and    eax,0x20292073
  45211b:	jl     0x452127
  45211d:	and    BYTE PTR [rax],ah
  45211f:	rex.R
  452120:	push   r12
  452122:	rex.B
  452123:	rex.X
  452124:	push   r11
  452126:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac141a0
  45212d:	and    BYTE PTR [rax],ah
  45212f:	rex.R
  452130:	rex.WRXB
  452131:	rex.WRB
  452132:	rex.B
  452133:	rex.WB
  452134:	rex.WRX and BYTE PTR [rip+0xa7c2073],r12b        # 0xac141ae
  45213b:	and    BYTE PTR [rax],ah
  45213d:	rex.RB push r14
  45213f:	rex.RB
  452140:	rex.WRX push rsp
  452142:	and    BYTE PTR [rdx+rdx*2+0x49],dl
  452146:	rex.RXB
  452147:	rex.RXB
  452148:	rex.RB push r10
  45214a:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac141c3
  452150:	and    BYTE PTR [rax],ah
  452152:	rex.RX
  452153:	rex.WRXB push r10
  452155:	rex.RB
  452156:	rex.WB
  452157:	rex.RXB
  452158:	rex.WRX and BYTE PTR [rcx+r8*2+0x42],r10b
  45215d:	rex.WR
  45215e:	and    BYTE PTR [rip+0x20200a73],r12b        # 0x20652bd8
  452165:	rex.RX push rbp
  452167:	rex.WRX
  452168:	rex.XB push r12
  45216a:	rex.WB
  45216b:	rex.WRXB
  45216c:	rex.WRX and BYTE PTR [rip+0x20282073],r12b        # 0x206d41e6
  452173:	pop    rbx
  452174:	and    BYTE PTR [rbx+0x20],bl
  452177:	and    eax,0x205d2073
  45217c:	pop    rbx
  45217d:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a241f6
  452183:	and    eax,0x2c5b2073
  452188:	and    BYTE PTR [rsi],ch
  45218a:	cs cs pop rbp
  45218d:	and    BYTE PTR [rbp+0x20],bl
  452190:	sub    DWORD PTR [rax],esp
  452192:	jl     0x45219e
  452194:	and    BYTE PTR [rax],ah
  452196:	rex.WR
  452197:	push   r10
  452199:	rex.RXB
  45219a:	and    BYTE PTR [r15+0x42],r9b
  45219e:	rex.WX
  45219f:	rex.RB
  4521a0:	rex.XB push r12
  4521a2:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac1421b
  4521a8:	and    BYTE PTR [rax],ah
  4521aa:	rex.WRB
  4521ab:	push   r12
  4521ad:	rex.RB push r10
  4521af:	rex.WB
  4521b0:	rex.B
  4521b1:	rex.WR
  4521b2:	rex.WB pop r10
  4521b4:	rex.RB
  4521b5:	and    BYTE PTR [rsi+0x49],r10b
  4521b9:	rex.RB push r15
  4521bb:	and    BYTE PTR [rip+0xa7c2073],ah        # 0xac14234
  4521c1:	and    BYTE PTR [rax],ah
  4521c3:	pop    rbx
  4521c4:	and    BYTE PTR [rax+0x52],dl
  4521c7:	rex.WRXB
  4521c8:	rex.XB
  4521c9:	rex.RB
  4521ca:	rex.R push rbp
  4521cc:	push   rdx
  4521cd:	rex.B
  4521ce:	rex.WR and BYTE PTR [rbp+0x20],r11b
  4521d2:	rex.WR
  4521d3:	rex.B
  4521d4:	rex.WRX
  4521d5:	rex.RXB push r13
  4521d7:	rex.B
  4521d8:	rex.RXB
  4521d9:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac14253
  4521e0:	and    BYTE PTR [rax],ah
  4521e2:	push   rdx
  4521e3:	rex.WRXB
  4521e4:	rex.WR
  4521e5:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac1425f
  4521ec:	and    BYTE PTR [rax],ah
  4521ee:	push   rbx
  4521ef:	rex.XB
  4521f0:	rex.W
  4521f1:	rex.RB
  4521f2:	rex.WRB
  4521f3:	and    BYTE PTR [rip+0xa7c2073],spl        # 0xac1426d
  4521fa:	and    BYTE PTR [rax],ah
  4521fc:	push   rbx
  4521fd:	rex.RB push r9
  4521ff:	push   rbp
  452200:	rex.RB
  452201:	rex.WRX
  452202:	rex.XB
  452203:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac1427d
  45220a:	and    BYTE PTR [rax],ah
  45220c:	push   rsp
  45220d:	rex.B
  45220e:	rex.X
  45220f:	rex.WR
  452210:	rex.RB push r11
  452212:	push   rax
  452213:	rex.B
  452214:	rex.XB
  452215:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac1428f
  45221c:	and    BYTE PTR [rax],ah
  45221e:	push   rsp
  45221f:	pop    rcx
  452220:	push   rax
  452221:	and    BYTE PTR [rip+0xa7c2073],r12b        # 0xac1429b
  452228:	and    BYTE PTR [rax],ah
  45222a:	push   rsi
  45222b:	rex.WB
  45222c:	rex.RB push r15
  45222e:	and    BYTE PTR [rip+0x207d0a73],ah        # 0x20c22ca7
  452234:	rex.WB push r11
  452236:	and    BYTE PTR [rdi],ah
  452238:	and    eax,0xa0a2773
  45223d:	and    eax,0x2a0a0a73
  452242:	and    BYTE PTR [rdx+rcx*1+0x5b],bh
  452246:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a242bf
  45224c:	pop    rbx
  45224d:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a242c6
  452253:	and    eax,0x205b2073
  452258:	sub    al,0x20
  45225a:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  452260:	jl     0x45226c
  452262:	pop    rbx
  452263:	and    BYTE PTR [rbx+0x20],bl
  452266:	and    eax,0x205d2073
  45226b:	pop    rbx
  45226c:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a242e5
  452272:	and    eax,0x205b2073
  452277:	sub    al,0x20
  452279:	cs cs and BYTE PTR cs:[rbp+0x20],bl
  45227f:	pop    rbp
  452280:	and    BYTE PTR [rdi+0x52],cl
  452283:	rex.R
  452284:	rex.RB push r10
  452286:	and    BYTE PTR [rdx+0x59],al
  452289:	and    BYTE PTR [rbx+0x20],bl
  45228c:	and    eax,0x205d2073
  452291:	pop    rbx
  452292:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a2430b
  452298:	and    eax,0x205b2073
  45229d:	sub    al,0x20
  45229f:	cs cs and BYTE PTR cs:[rbp+0x0],bl
  4522a5:	add    BYTE PTR [rax],al
  4522a7:	add    BYTE PTR [rbx+0x20],bl
  4522aa:	push   rdi
  4522ab:	rex.WB push r12
  4522ad:	rex.W and BYTE PTR [rbx+0x20],bl
  4522b1:	push   rdx
  4522b2:	rex.RB
  4522b3:	rex.XB push r13
  4522b5:	push   rdx
  4522b6:	push   rbx
  4522b7:	rex.WB push r14
  4522b9:	and    BYTE PTR [r13+0x20],r11b
  4522bd:	and    eax,0x2c5b2073
  4522c2:	and    BYTE PTR [rsi],ch
  4522c4:	cs cs pop rbp
  4522c7:	and    BYTE PTR [rbp+0xa],bl
  4522ca:	push   rbx
  4522cb:	rex.RB
  4522cc:	rex.WR
  4522cd:	rex.RB
  4522ce:	rex.XB push r12
  4522d0:	and    BYTE PTR [rbx+0x20],bl
  4522d3:	rex.B
  4522d4:	rex.WR
  4522d5:	rex.WR and BYTE PTR [rax+riz*1+0x44],r15b
  4522da:	rex.WB push r11
  4522dc:	push   rsp
  4522dd:	rex.WB
  4522de:	rex.WRX
  4522df:	rex.XB push r12
  4522e1:	and    BYTE PTR [rbx+0x20],bl
  4522e4:	rex.WRXB
  4522e5:	rex.WRX and BYTE PTR [rax],r13b
  4522e8:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca04361
  4522ee:	and    BYTE PTR [rsi],ch
  4522f0:	cs cs pop rbp
  4522f3:	and    BYTE PTR [rcx],ch
  4522f5:	and    BYTE PTR [rbp+0x20],bl
  4522f8:	pop    rbp
  4522f9:	or     ah,BYTE PTR [rax]
  4522fb:	and    BYTE PTR [rax],ah
  4522fd:	and    BYTE PTR [rbx+0x20],bl
  452300:	sub    ah,BYTE PTR [rax]
  452302:	jl     0x452324
  452304:	and    eax,0x205b2073
  452309:	pop    rbx
  45230a:	and    BYTE PTR [rcx+0x53],al
  45230d:	and    BYTE PTR [rbp+0x20],bl
  452310:	and    eax,0x205d2073
  452315:	pop    rbx
  452316:	sub    al,0x20
  452318:	cs cs cs pop rbp
  45231c:	and    BYTE PTR [rbp+0xa],bl
  45231f:	and    BYTE PTR [rax],ah
  452321:	and    BYTE PTR [rax],ah
  452323:	pop    rbx
  452324:	and    BYTE PTR [rsi+0x52],al
  452327:	rex.WRXB
  452328:	rex.WRB and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca043a2
  45232f:	and    BYTE PTR [rsi],ch
  452331:	cs cs pop rbp
  452334:	and    BYTE PTR [rbp+0xa],bl
  452337:	and    BYTE PTR [rax],ah
  452339:	and    BYTE PTR [rax],ah
  45233b:	pop    rbx
  45233c:	and    BYTE PTR [rdi+0x48],dl
  45233f:	rex.RB push r10
  452341:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa243bb
  452348:	and    BYTE PTR [rax],ah
  45234a:	and    BYTE PTR [rax],ah
  45234c:	pop    rbx
  45234d:	and    BYTE PTR [rdi+0x52],al
  452350:	rex.WRXB push r13
  452352:	push   rax
  452353:	and    BYTE PTR [rdx+0x59],al
  452356:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca043cf
  45235c:	and    BYTE PTR [rsi],ch
  45235e:	cs cs pop rbp
  452361:	and    BYTE PTR [rbp+0xa],bl
  452364:	and    BYTE PTR [rax],ah
  452366:	and    BYTE PTR [rax],ah
  452368:	pop    rbx
  452369:	and    BYTE PTR [rax+0x41],cl
  45236c:	push   rsi
  45236d:	rex.WB
  45236e:	rex.WRX
  45236f:	rex.RXB and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca043e9
  452376:	and    BYTE PTR [rsi],ch
  452378:	cs cs pop rbp
  45237b:	and    BYTE PTR [rbp+0xa],bl
  45237e:	and    BYTE PTR [rax],ah
  452380:	and    BYTE PTR [rax],ah
  452382:	pop    rbx
  452383:	and    BYTE PTR [rdi+0x49],dl
  452386:	rex.WRX
  452387:	rex.R
  452388:	rex.WRXB push r15
  45238a:	and    BYTE PTR [rip+0x53412073],ah        # 0x53864403
  452390:	and    BYTE PTR [rax],ch
  452392:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e440b
  452398:	pop    rbx
  452399:	sub    al,0x20
  45239b:	cs cs cs pop rbp
  45239f:	and    BYTE PTR [rbp+0xa],bl
  4523a2:	and    BYTE PTR [rax],ah
  4523a4:	and    BYTE PTR [rax],ah
  4523a6:	pop    rbx
  4523a7:	and    BYTE PTR [rbx+0x20],bh
  4523aa:	push   rbp
  4523ab:	rex.WRX
  4523ac:	rex.WB
  4523ad:	rex.WRXB
  4523ae:	rex.WRX and BYTE PTR [rax+r12*1+0x49],r15b
  4523b3:	rex.WRX push rsp
  4523b5:	rex.RB push r10
  4523b7:	push   rbx
  4523b8:	rex.RB
  4523b9:	rex.XB push r12
  4523bb:	and    BYTE PTR [rax+riz*1+0x45],bh
  4523bf:	pop    rax
  4523c0:	rex.XB
  4523c1:	rex.RB push r8
  4523c3:	push   rsp
  4523c4:	and    BYTE PTR [rbp+0x20],bh
  4523c7:	pop    rbx
  4523c8:	and    BYTE PTR [rcx+0x4c],al
  4523cb:	rex.WR and BYTE PTR [rax+riz*1+0x44],r15b
  4523d0:	rex.WB push r11
  4523d2:	push   rsp
  4523d3:	rex.WB
  4523d4:	rex.WRX
  4523d5:	rex.XB push r12
  4523d7:	and    BYTE PTR [rbp+0x20],bl
  4523da:	and    eax,0xa5d2073
  4523df:	and    BYTE PTR [rax],ah
  4523e1:	and    BYTE PTR [rax],ah
  4523e3:	pop    rbx
  4523e4:	and    BYTE PTR [rdi+0x52],cl
  4523e7:	rex.R
  4523e8:	rex.RB push r10
  4523ea:	and    BYTE PTR [rdx+0x59],al
  4523ed:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a04466
  4523f3:	push   r11
  4523f5:	and    BYTE PTR [r8+r12*1+0x44],dil
  4523fa:	rex.RB push r11
  4523fc:	and    BYTE PTR [r8+r12*1+0x55],dil
  452401:	push   rbx
  452402:	rex.WB
  452403:	rex.WRX
  452404:	rex.RXB and BYTE PTR [rip+0x205d2073],r12b        # 0x20a2447e
  45240b:	pop    rbx
  45240c:	and    BYTE PTR [rsi+0x55],cl
  45240f:	rex.WR
  452410:	rex.WR push rbx
  452412:	and    BYTE PTR [rbx+0x20],bh
  452415:	rex.RX
  452416:	rex.WB push r10
  452418:	push   rbx
  452419:	push   rsp
  45241a:	and    BYTE PTR [rax+riz*1+0x4c],bh
  45241e:	push   r11
  452420:	push   rsp
  452421:	and    BYTE PTR [rbp+0x20],bh
  452424:	pop    rbp
  452425:	and    BYTE PTR [rbx+0x2c],bl
  452428:	and    BYTE PTR [rsi],ch
  45242a:	cs cs pop rbp
  45242d:	and    BYTE PTR [rbp+0xa],bl
  452430:	and    BYTE PTR [rax],ah
  452432:	and    BYTE PTR [rax],ah
  452434:	pop    rbx
  452435:	and    BYTE PTR [rcx+rcx*2+0x4d],cl
  452439:	rex.WB push r12
  45243b:	and    BYTE PTR [rbx+0x20],bh
  45243e:	and    eax,0x207c2073
  452443:	rex.B
  452444:	rex.WR
  452445:	rex.WR and BYTE PTR [rbp+0x20],r15b
  452449:	pop    rbp
  45244a:	or     ah,BYTE PTR [rax]
  45244c:	and    BYTE PTR [rax],ah
  45244e:	and    BYTE PTR [rbx+0x20],bl
  452451:	rex.WRXB
  452452:	rex.RX
  452453:	rex.RX push rbx
  452455:	rex.RB push r12
  452457:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a044d0
  45245d:	push   rdx
  45245e:	rex.WRXB push r15
  452460:	and    BYTE PTR [rax+riz*1+0x52],bh
  452464:	rex.WRXB push r15
  452466:	push   rbx
  452467:	and    BYTE PTR [rbp+0x20],bl
  45246a:	pop    rbp
  45246b:	or     ah,BYTE PTR [rax]
  45246d:	and    BYTE PTR [rax],ah
  45246f:	and    BYTE PTR [rbx+0x20],bl
  452472:	rex.RX
  452473:	rex.RB push r12
  452475:	rex.XB
  452476:	rex.W and BYTE PTR [rbx+0x20],dil
  45247a:	rex.RX
  45247b:	rex.WB push r10
  45247d:	push   rbx
  45247e:	push   rsp
  45247f:	and    BYTE PTR [rax+riz*1+0x4e],bh
  452483:	rex.RB pop r8
  452485:	push   rsp
  452486:	and    BYTE PTR [rbp+0x20],bh
  452489:	pop    rbx
  45248a:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a24503
  452490:	jnp    0x4524b2
  452492:	push   rdx
  452493:	rex.WRXB push r15
  452495:	and    BYTE PTR [rax+riz*1+0x52],bh
  452499:	rex.WRXB push r15
  45249b:	push   rbx
  45249c:	and    BYTE PTR [rbp+0x20],bh
  45249f:	rex.WRXB
  4524a0:	rex.WRX
  4524a1:	rex.WR pop rcx
  4524a3:	and    BYTE PTR [rbp+0xa],bl
  4524a6:	and    BYTE PTR [rax],ah
  4524a8:	and    BYTE PTR [rax],ah
  4524aa:	pop    rbx
  4524ab:	and    BYTE PTR [rsi+0x4f],al
  4524ae:	push   rdx
  4524af:	and    BYTE PTR [rbx+0x20],bh
  4524b2:	push   rbp
  4524b3:	push   rax
  4524b4:	rex.R
  4524b5:	push   r12
  4524b7:	and    BYTE PTR [r8+riz*1+0x4e],r15b
  4524bc:	rex.WRXB and BYTE PTR [r11+0x45],r9b
  4524c0:	pop    rcx
  4524c1:	and    BYTE PTR [rbp+0x50],dl
  4524c4:	rex.R
  4524c5:	push   r12
  4524c7:	and    BYTE PTR [r8+riz*1+0x53],r15b
  4524cc:	rex.W
  4524cd:	push   r10
  4524cf:	and    BYTE PTR [r8+riz*1+0x4b],r15b
  4524d4:	rex.RB pop r9
  4524d6:	and    BYTE PTR [rbx+0x48],dl
  4524d9:	push   r10
  4524db:	and    BYTE PTR [r13+0x20],r15b
  4524df:	pop    rbx
  4524e0:	and    BYTE PTR [rdi+0x46],cl
  4524e3:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca0455c
  4524e9:	and    BYTE PTR [rsi],ch
  4524eb:	cs cs pop rbp
  4524ee:	and    BYTE PTR [rbp+0x20],bl
  4524f1:	pop    rbx
  4524f2:	and    BYTE PTR [rsi+0x4f],cl
  4524f5:	push   rdi
  4524f6:	rex.B
  4524f7:	rex.WB push r12
  4524f9:	and    BYTE PTR [rbp+0x20],bl
  4524fc:	pop    rbx
  4524fd:	cs cs cs pop rbp
  452501:	and    BYTE PTR [rbp+0xa],bl
  452504:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204f2f7d
  45250a:	and    BYTE PTR [rax],ah
  45250c:	and    BYTE PTR [rbx+0x20],bl
  45250f:	rex.WRXB
  452510:	rex.WRX
  452511:	rex.WR pop rcx
  452513:	and    BYTE PTR [rbp+0x20],bl
  452516:	and    eax,0x205b2073
  45251b:	sub    ah,BYTE PTR [rax]
  45251d:	pop    rbp
  45251e:	and    BYTE PTR [rbx+0x20],bl
  452521:	pop    rbx
  452522:	and    BYTE PTR [rcx+0x53],al
  452525:	and    BYTE PTR [rbp+0x20],bl
  452528:	and    eax,0x205b2073
  45252d:	sub    BYTE PTR [rax],ah
  45252f:	and    eax,0x2c5b2073
  452534:	and    BYTE PTR [rsi],ch
  452536:	cs cs pop rbp
  452539:	and    BYTE PTR [rcx],ch
  45253b:	and    BYTE PTR [rbp+0x20],bl
  45253e:	pop    rbp
  45253f:	or     ah,BYTE PTR [rax]
  452541:	and    BYTE PTR [rax],ah
  452543:	and    BYTE PTR [rbx+0x20],bl
  452546:	rex.WR
  452547:	push   r12
  452549:	rex.RB push r10
  45254b:	rex.B
  45254c:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452550:	sub    BYTE PTR [rax],ah
  452552:	and    eax,0x20292073
  452557:	pop    rbx
  452558:	and    BYTE PTR [rcx+0x53],al
  45255b:	and    BYTE PTR [rbp+0x20],bl
  45255e:	and    eax,0x205b2073
  452563:	sub    BYTE PTR [rax],ah
  452565:	and    eax,0x2c5b2073
  45256a:	and    BYTE PTR [rsi],ch
  45256c:	cs cs pop rbp
  45256f:	and    BYTE PTR [rcx],ch
  452571:	and    BYTE PTR [rbp+0xa],bl
  452574:	and    BYTE PTR [rax],ah
  452576:	and    BYTE PTR [rax],ah
  452578:	and    eax,0x205b2073
  45257d:	pop    rbx
  45257e:	and    BYTE PTR [rcx+0x53],al
  452581:	and    BYTE PTR [rbp+0x20],bl
  452584:	and    eax,0x205b2073
  452589:	sub    BYTE PTR [rax],ah
  45258b:	and    eax,0x2c5b2073
  452590:	and    BYTE PTR [rsi],ch
  452592:	cs cs pop rbp
  452595:	and    BYTE PTR [rcx],ch
  452597:	and    BYTE PTR [rbp+0x20],bl
  45259a:	pop    rbp
  45259b:	or     ah,BYTE PTR [rax]
  45259d:	and    BYTE PTR [rax],ah
  45259f:	and    BYTE PTR [rbx+0x20],bl
  4525a2:	rex.WR
  4525a3:	push   r12
  4525a5:	rex.RB push r10
  4525a7:	rex.B
  4525a8:	rex.WR and BYTE PTR [rbp+0x20],r11b
  4525ac:	and    eax,0x20282073
  4525b1:	pop    rbx
  4525b2:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca0462b
  4525b8:	and    BYTE PTR [rsi],ch
  4525ba:	cs cs pop rbp
  4525bd:	and    BYTE PTR [rbp+0x20],bl
  4525c0:	sub    DWORD PTR [rdx],ecx
  4525c2:	and    BYTE PTR [rax],ah
  4525c4:	and    BYTE PTR [rax],ah
  4525c6:	and    BYTE PTR [rax],ah
  4525c8:	and    BYTE PTR [rax],ah
  4525ca:	and    BYTE PTR [rax],ah
  4525cc:	and    BYTE PTR [rax],ah
  4525ce:	and    BYTE PTR [rax],ah
  4525d0:	and    BYTE PTR [rax],ah
  4525d2:	pop    rbx
  4525d3:	and    BYTE PTR [rdi+0x49],dl
  4525d6:	push   rsp
  4525d7:	rex.W and BYTE PTR [rdi+0x52],cl
  4525db:	rex.R
  4525dc:	rex.WB
  4525dd:	rex.WRX
  4525de:	rex.B
  4525df:	rex.WR
  4525e0:	rex.WB push r12
  4525e2:	pop    rcx
  4525e3:	and    BYTE PTR [rbp+0x20],bl
  4525e6:	pop    rbx
  4525e7:	and    BYTE PTR [rbx+0x20],bl
  4525ea:	push   r11
  4525ec:	and    BYTE PTR [rbp+0x20],bl
  4525ef:	and    eax,0x205b2073
  4525f4:	sub    BYTE PTR [rax],ah
  4525f6:	and    eax,0x2c5b2073
  4525fb:	and    BYTE PTR [rsi],ch
  4525fd:	cs cs pop rbp
  452600:	and    BYTE PTR [rcx],ch
  452602:	and    BYTE PTR [rbp+0x20],bl
  452605:	pop    rbp
  452606:	or     ah,BYTE PTR [rax]
  452608:	and    BYTE PTR [rax],ah
  45260a:	and    BYTE PTR [rbx+0x20],bl
  45260d:	rex.WR
  45260e:	push   r12
  452610:	rex.RB push r10
  452612:	rex.B
  452613:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452617:	and    eax,0x20282073
  45261c:	pop    rbx
  45261d:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca04696
  452623:	and    BYTE PTR [rsi],ch
  452625:	cs cs pop rbp
  452628:	and    BYTE PTR [rbp+0x20],bl
  45262b:	sub    DWORD PTR [rax],esp
  45262d:	pop    rbx
  45262e:	and    BYTE PTR [rcx+0x53],al
  452631:	and    BYTE PTR [rbp+0x20],bl
  452634:	and    eax,0x20282073
  452639:	and    eax,0x2c5b2073
  45263e:	and    BYTE PTR [rsi],ch
  452640:	cs cs pop rbp
  452643:	and    BYTE PTR [rcx],ch
  452645:	or     ah,BYTE PTR [rax]
  452647:	and    BYTE PTR [rax],ah
  452649:	and    BYTE PTR [rbx+0x20],bl
  45264c:	rex.WR
  45264d:	push   r12
  45264f:	rex.RB push r10
  452651:	rex.B
  452652:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452656:	and    eax,0x20282073
  45265b:	pop    rbx
  45265c:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca046d5
  452662:	and    BYTE PTR [rsi],ch
  452664:	cs cs pop rbp
  452667:	and    BYTE PTR [rbp+0x20],bl
  45266a:	sub    DWORD PTR [rax],esp
  45266c:	push   r11
  45266e:	and    BYTE PTR [rax],ch
  452670:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca046e9
  452676:	and    BYTE PTR [rsi],ch
  452678:	cs cs pop rbp
  45267b:	and    BYTE PTR [rcx],ch
  45267d:	or     ah,BYTE PTR [rax]
  45267f:	and    BYTE PTR [rax],ah
  452681:	and    BYTE PTR [rbx+0x20],bl
  452684:	rex.WR
  452685:	push   r12
  452687:	rex.RB push r10
  452689:	rex.B
  45268a:	rex.WR and BYTE PTR [rbp+0x20],r11b
  45268e:	push   rdx
  45268f:	rex.WRXB push r15
  452691:	push   rbx
  452692:	and    BYTE PTR [rsi+0x52],al
  452695:	rex.WRXB
  452696:	rex.WRB sub BYTE PTR [r8],r12b
  452699:	and    eax,0x20282073
  45269e:	pop    rbx
  45269f:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca04718
  4526a5:	and    BYTE PTR [rsi],ch
  4526a7:	cs cs pop rbp
  4526aa:	and    BYTE PTR [rbp+0x20],bl
  4526ad:	sub    DWORD PTR [rax],esp
  4526af:	pop    rbx
  4526b0:	and    BYTE PTR [rcx+0x53],al
  4526b3:	and    BYTE PTR [rax],ch
  4526b5:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca0472e
  4526bb:	and    BYTE PTR [rsi],ch
  4526bd:	cs cs pop rbp
  4526c0:	and    BYTE PTR [rcx],ch
  4526c2:	and    BYTE PTR [rbp+0x20],bl
  4526c5:	pop    rbx
  4526c6:	sub    al,0x20
  4526c8:	cs cs cs pop rbp
  4526cc:	and    BYTE PTR [rcx],ch
  4526ce:	or     ah,BYTE PTR [rax]
  4526d0:	and    BYTE PTR [rax],ah
  4526d2:	and    BYTE PTR [rax],ah
  4526d4:	and    BYTE PTR [rax],ah
  4526d6:	and    BYTE PTR [rax],ah
  4526d8:	and    BYTE PTR [rax],ah
  4526da:	and    BYTE PTR [rax],ah
  4526dc:	and    BYTE PTR [rax],ah
  4526de:	and    BYTE PTR [rbx+0x20],bl
  4526e1:	push   rdi
  4526e2:	rex.WB push r12
  4526e4:	rex.W and BYTE PTR [rdi+0x52],cl
  4526e8:	rex.R
  4526e9:	rex.WB
  4526ea:	rex.WRX
  4526eb:	rex.B
  4526ec:	rex.WR
  4526ed:	rex.WB push r12
  4526ef:	pop    rcx
  4526f0:	and    BYTE PTR [rbp+0x20],bl
  4526f3:	pop    rbx
  4526f4:	and    BYTE PTR [rbx+0x20],bl
  4526f7:	push   r11
  4526f9:	and    BYTE PTR [rbp+0x20],bl
  4526fc:	and    eax,0x205b2073
  452701:	sub    BYTE PTR [rax],ah
  452703:	and    eax,0x2c5b2073
  452708:	and    BYTE PTR [rsi],ch
  45270a:	cs cs pop rbp
  45270d:	and    BYTE PTR [rcx],ch
  45270f:	and    BYTE PTR [rbp+0x20],bl
  452712:	pop    rbp
  452713:	or     ah,BYTE PTR [rax]
  452715:	and    BYTE PTR [rax],ah
  452717:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a04790
  45271d:	rex.WRX
  45271e:	push   r12
  452720:	push   rbp
  452721:	push   rdx
  452722:	rex.B
  452723:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452727:	and    eax,0x73252073
  45272c:	and    BYTE PTR [rbx+0x20],bl
  45272f:	rex.WRXB
  452730:	rex.WRX and BYTE PTR [rip+0x207c2073],r12b        # 0x20c147aa
  452737:	push   rbp
  452738:	push   rbx
  452739:	rex.WB
  45273a:	rex.WRX
  45273b:	rex.RXB and BYTE PTR [r8],r13b
  45273e:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca047b7
  452744:	and    BYTE PTR [rsi],ch
  452746:	cs cs pop rbp
  452749:	and    BYTE PTR [rcx],ch
  45274b:	and    BYTE PTR [rbp+0xa],bl
  45274e:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204f31c7
  452754:	and    BYTE PTR [rax],ah
  452756:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a047cf
  45275c:	sub    BYTE PTR [rax],ah
  45275e:	and    eax,0x2c5b2073
  452763:	and    BYTE PTR [rsi],ch
  452765:	cs cs pop rbp
  452768:	and    BYTE PTR [rcx],ch
  45276a:	and    BYTE PTR [rbp+0x20],bl
  45276d:	push   r11
  45276f:	and    BYTE PTR [rax],ch
  452771:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c147ea
  452777:	and    eax,0x207c2073
  45277c:	and    eax,0x207c2073
  452781:	and    eax,0x207c2073
  452786:	and    eax,0xa292073
  45278b:	or     dl,BYTE PTR [rcx+rax*2+0x42]
  45278f:	rex.WR
  452790:	and    BYTE PTR [r11+0x20],r11b
  452794:	rex.WRXB
  452795:	rex.WRX
  452796:	rex.WR pop rcx
  452798:	and    BYTE PTR [rbp+0x20],bl
  45279b:	and    eax,0x205b2073
  4527a0:	sub    ah,BYTE PTR [rax]
  4527a2:	pop    rbp
  4527a3:	add    BYTE PTR [rbp+riz*2+0x6c],ah
  4527a7:	gs je  0x45280f
  4527aa:	add    BYTE PTR [rbp+0x70],dh
  4527ad:	fs (bad) 
  4527af:	je     0x452816
  4527b1:	add    BYTE PTR [rcx+0x6e],ch
  4527b4:	jae    0x45281b
  4527b6:	jb     0x45282c
  4527b8:	add    BYTE PTR [rsi+0x61],dh
  4527bb:	ins    BYTE PTR es:[rdi],dx
  4527bc:	jne    0x452823
  4527be:	jae    0x4527c0
  4527c0:	jae    0x452827
  4527c2:	ins    BYTE PTR es:[rdi],dx
  4527c3:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x77]
  4527c8:	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x72657571
  4527d0:	jns    0x452831
  4527d2:	outs   dx,BYTE PTR ds:[rsi]
  4527d3:	(bad)  
  4527d4:	ins    DWORD PTR es:[rdi],dx
  4527d5:	add    BYTE PTR gs:[rcx+0x6e],ah
  4527d9:	and    BYTE PTR fs:[rdi+0x69],dh
  4527dd:	je     0x452847
  4527df:	pop    rdi
  4527e0:	jno    0x452857
  4527e2:	gs jb  0x45285e
  4527e5:	and    BYTE PTR [rcx+0x73],ch
  4527e8:	cmp    al,BYTE PTR [rax]
  4527ea:	push   0x6f
  4527ec:	imul   ebp,DWORD PTR [rsi+0x5f],0x756c6f63
  4527f3:	ins    DWORD PTR es:[rdi],dx
  4527f4:	outs   dx,BYTE PTR ds:[rsi]
  4527f5:	add    BYTE PTR [rdx+0x6f],ch
  4527f8:	imul   ebp,DWORD PTR [rsi+0x5f],0x646e6f63
  4527ff:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x7266006e
  452807:	outs   dx,DWORD PTR ds:[rsi]
  452808:	ins    DWORD PTR es:[rdi],dx
  452809:	pop    rdi
  45280a:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x696f6a00
  452812:	outs   dx,BYTE PTR ds:[rsi]
  452813:	pop    rdi
  452814:	je     0x45288f
  452816:	jo     0x45287d
  452818:	add    BYTE PTR [rbx+0x6f],ah
  45281b:	ins    BYTE PTR es:[rdi],dx
  45281c:	jne    0x45288b
  45281e:	outs   dx,BYTE PTR ds:[rsi]
  45281f:	pop    rdi
  452820:	(bad)  
  452821:	ins    BYTE PTR es:[rdi],dx
  452822:	imul   esp,DWORD PTR [rcx+0x73],0x6c6f6300
  452829:	jne    0x452898
  45282b:	outs   dx,BYTE PTR ds:[rsi]
  45282c:	pop    rdi
  45282d:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  452835:	outs   dx,DWORD PTR ds:[rsi]
  452836:	outs   dx,BYTE PTR ds:[rsi]
  452837:	add    BYTE PTR [rcx+0x72],ah
  45283a:	addr32 jne 0x4528aa
  45283d:	outs   dx,BYTE PTR gs:[rsi]
  45283f:	je     0x452841
  452841:	add    BYTE PTR [rax],al
  452843:	add    BYTE PTR [rax],al
  452845:	add    BYTE PTR [rax],al
  452847:	add    BYTE PTR [rdi+0x68],dh
  45284a:	gs jb  0x4528b2
  45284d:	and    BYTE PTR [rsi+0x72],ah
  452850:	outs   dx,DWORD PTR ds:[rsi]
  452851:	ins    DWORD PTR es:[rdi],dx
  452852:	pop    rdi
  452853:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x6e616320
  45285b:	and    BYTE PTR [rdx+0x65],ah
  45285e:	and    BYTE PTR [rdi+0x6e],ch
  452861:	and    BYTE PTR gs:[rdi+0x66],ch
  452865:	cmp    al,BYTE PTR [rax]
  452867:	ja     0x4528d2
  452869:	outs   dx,BYTE PTR ds:[rsi]
  45286a:	outs   dx,DWORD PTR fs:[rsi]
  45286c:	ja     0x4528cd
  45286e:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  452876:	outs   dx,DWORD PTR ds:[rsi]
  452877:	outs   dx,BYTE PTR ds:[rsi]
  452878:	add    BYTE PTR [rdi+0x69],dh
  45287b:	outs   dx,BYTE PTR ds:[rsi]
  45287c:	outs   dx,DWORD PTR fs:[rsi]
  45287e:	ja     0x4528df
  452880:	outs   dx,BYTE PTR ds:[rsi]
  452881:	(bad)  
  452882:	ins    DWORD PTR es:[rdi],dx
  452883:	add    BYTE PTR gs:[rax],al
  452886:	add    BYTE PTR [rax],al
  452888:	pop    rbx
  452889:	and    BYTE PTR [rdi+0x49],dl
  45288c:	push   rsp
  45288d:	rex.W and BYTE PTR [rbx+0x20],bl
  452891:	push   rdx
  452892:	rex.RB
  452893:	rex.XB push r13
  452895:	push   rdx
  452896:	push   rbx
  452897:	rex.WB push r14
  452899:	and    BYTE PTR [r13+0x20],r11b
  45289d:	and    eax,0x2c5b2073
  4528a2:	and    BYTE PTR [rsi],ch
  4528a4:	cs cs pop rbp
  4528a7:	and    BYTE PTR [rbp+0xa],bl
  4528aa:	push   rbx
  4528ab:	rex.RB
  4528ac:	rex.WR
  4528ad:	rex.RB
  4528ae:	rex.XB push r12
  4528b0:	and    BYTE PTR [rbx+0x20],bl
  4528b3:	rex.B
  4528b4:	rex.WR
  4528b5:	rex.WR and BYTE PTR [rax+riz*1+0x44],r15b
  4528ba:	rex.WB push r11
  4528bc:	push   rsp
  4528bd:	rex.WB
  4528be:	rex.WRX
  4528bf:	rex.XB push r12
  4528c1:	and    BYTE PTR [rbx+0x20],bl
  4528c4:	rex.WRXB
  4528c5:	rex.WRX and BYTE PTR [rax],r13b
  4528c8:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca04941
  4528ce:	and    BYTE PTR [rsi],ch
  4528d0:	cs cs pop rbp
  4528d3:	and    BYTE PTR [rcx],ch
  4528d5:	and    BYTE PTR [rbp+0x20],bl
  4528d8:	pop    rbp
  4528d9:	or     ah,BYTE PTR [rax]
  4528db:	and    BYTE PTR [rax],ah
  4528dd:	and    BYTE PTR [rdx],ch
  4528df:	and    BYTE PTR [rax+riz*1+0x25],bh
  4528e3:	jae    0x452905
  4528e5:	pop    rbx
  4528e6:	and    BYTE PTR [rbx+0x20],bl
  4528e9:	push   r11
  4528eb:	and    BYTE PTR [rbp+0x20],bl
  4528ee:	and    eax,0x205d2073
  4528f3:	pop    rbx
  4528f4:	sub    al,0x20
  4528f6:	cs cs cs pop rbp
  4528fa:	or     ah,BYTE PTR [rax]
  4528fc:	and    BYTE PTR [rax],ah
  4528fe:	and    BYTE PTR [rcx+0x4e],cl
  452901:	push   rsp
  452902:	rex.WRXB and BYTE PTR [r11+0x20],r11b
  452906:	push   rsp
  452907:	rex.RB
  452908:	rex.WRB push r8
  45290a:	rex.WRXB push r10
  45290c:	push   r10
  45290e:	pop    rcx
  45290f:	and    BYTE PTR [rax+riz*1+0x54],bh
  452913:	rex.RB
  452914:	rex.WRB push r8
  452916:	and    BYTE PTR [rax+riz*1+0x55],bh
  45291a:	rex.WRX
  45291b:	rex.WR
  45291c:	rex.WRXB
  45291d:	rex.RXB
  45291e:	rex.RXB
  45291f:	rex.RB
  452920:	and    BYTE PTR [rbp+0x20],r11b
  452924:	pop    rbx
  452925:	and    BYTE PTR [rcx+rax*2+0x42],dl
  452929:	rex.WR
  45292a:	and    BYTE PTR [r13+0x20],r11b
  45292e:	and    eax,0x20200a73
  452933:	and    BYTE PTR [rax],ah
  452935:	pop    rbx
  452936:	and    BYTE PTR [rsi+0x52],al
  452939:	rex.WRXB
  45293a:	rex.WRB and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca049b4
  452941:	and    BYTE PTR [rsi],ch
  452943:	cs cs pop rbp
  452946:	and    BYTE PTR [rbp+0xa],bl
  452949:	and    BYTE PTR [rax],ah
  45294b:	and    BYTE PTR [rax],ah
  45294d:	pop    rbx
  45294e:	and    BYTE PTR [rdi+0x48],dl
  452951:	rex.RB push r10
  452953:	and    BYTE PTR [rip+0xa5d2073],r12b        # 0xaa249cd
  45295a:	and    BYTE PTR [rax],ah
  45295c:	and    BYTE PTR [rax],ah
  45295e:	pop    rbx
  45295f:	and    BYTE PTR [rdi+0x52],al
  452962:	rex.WRXB push r13
  452964:	push   rax
  452965:	and    BYTE PTR [rdx+0x59],al
  452968:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca049e1
  45296e:	and    BYTE PTR [rsi],ch
  452970:	cs cs pop rbp
  452973:	and    BYTE PTR [rbp+0xa],bl
  452976:	and    BYTE PTR [rax],ah
  452978:	and    BYTE PTR [rax],ah
  45297a:	pop    rbx
  45297b:	and    BYTE PTR [rax+0x41],cl
  45297e:	push   rsi
  45297f:	rex.WB
  452980:	rex.WRX
  452981:	rex.RXB and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca049fb
  452988:	and    BYTE PTR [rsi],ch
  45298a:	cs cs pop rbp
  45298d:	and    BYTE PTR [rbp+0xa],bl
  452990:	and    BYTE PTR [rax],ah
  452992:	and    BYTE PTR [rax],ah
  452994:	pop    rbx
  452995:	and    BYTE PTR [rdi+0x49],dl
  452998:	rex.WRX
  452999:	rex.R
  45299a:	rex.WRXB push r15
  45299c:	and    BYTE PTR [rip+0x53412073],ah        # 0x53864a15
  4529a2:	and    BYTE PTR [rax],ch
  4529a4:	and    BYTE PTR [rip+0x20292073],ah        # 0x206e4a1d
  4529aa:	pop    rbx
  4529ab:	sub    al,0x20
  4529ad:	cs cs cs pop rbp
  4529b1:	and    BYTE PTR [rbp+0xa],bl
  4529b4:	and    BYTE PTR [rax],ah
  4529b6:	and    BYTE PTR [rax],ah
  4529b8:	pop    rbx
  4529b9:	and    BYTE PTR [rbx+0x20],bh
  4529bc:	push   rbp
  4529bd:	rex.WRX
  4529be:	rex.WB
  4529bf:	rex.WRXB
  4529c0:	rex.WRX and BYTE PTR [rax+r12*1+0x49],r15b
  4529c5:	rex.WRX push rsp
  4529c7:	rex.RB push r10
  4529c9:	push   rbx
  4529ca:	rex.RB
  4529cb:	rex.XB push r12
  4529cd:	and    BYTE PTR [rax+riz*1+0x45],bh
  4529d1:	pop    rax
  4529d2:	rex.XB
  4529d3:	rex.RB push r8
  4529d5:	push   rsp
  4529d6:	and    BYTE PTR [rbp+0x20],bh
  4529d9:	pop    rbx
  4529da:	and    BYTE PTR [rcx+0x4c],al
  4529dd:	rex.WR and BYTE PTR [rax+riz*1+0x44],r15b
  4529e2:	rex.WB push r11
  4529e4:	push   rsp
  4529e5:	rex.WB
  4529e6:	rex.WRX
  4529e7:	rex.XB push r12
  4529e9:	and    BYTE PTR [rbp+0x20],bl
  4529ec:	and    eax,0xa5d2073
  4529f1:	and    BYTE PTR [rax],ah
  4529f3:	and    BYTE PTR [rax],ah
  4529f5:	pop    rbx
  4529f6:	and    BYTE PTR [rdi+0x52],cl
  4529f9:	rex.R
  4529fa:	rex.RB push r10
  4529fc:	and    BYTE PTR [rdx+0x59],al
  4529ff:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a04a78
  452a05:	push   r11
  452a07:	and    BYTE PTR [r8+r12*1+0x44],dil
  452a0c:	rex.RB push r11
  452a0e:	and    BYTE PTR [r8+r12*1+0x55],dil
  452a13:	push   rbx
  452a14:	rex.WB
  452a15:	rex.WRX
  452a16:	rex.RXB and BYTE PTR [rip+0x205d2073],r12b        # 0x20a24a90
  452a1d:	pop    rbx
  452a1e:	and    BYTE PTR [rsi+0x55],cl
  452a21:	rex.WR
  452a22:	rex.WR push rbx
  452a24:	and    BYTE PTR [rbx+0x20],bh
  452a27:	rex.RX
  452a28:	rex.WB push r10
  452a2a:	push   rbx
  452a2b:	push   rsp
  452a2c:	and    BYTE PTR [rax+riz*1+0x4c],bh
  452a30:	push   r11
  452a32:	push   rsp
  452a33:	and    BYTE PTR [rbp+0x20],bh
  452a36:	pop    rbp
  452a37:	and    BYTE PTR [rbx+0x2c],bl
  452a3a:	and    BYTE PTR [rsi],ch
  452a3c:	cs cs pop rbp
  452a3f:	and    BYTE PTR [rbp+0xa],bl
  452a42:	and    BYTE PTR [rax],ah
  452a44:	and    BYTE PTR [rax],ah
  452a46:	pop    rbx
  452a47:	and    BYTE PTR [rcx+rcx*2+0x4d],cl
  452a4b:	rex.WB push r12
  452a4d:	and    BYTE PTR [rbx+0x20],bh
  452a50:	and    eax,0x207c2073
  452a55:	rex.B
  452a56:	rex.WR
  452a57:	rex.WR and BYTE PTR [rbp+0x20],r15b
  452a5b:	pop    rbp
  452a5c:	or     ah,BYTE PTR [rax]
  452a5e:	and    BYTE PTR [rax],ah
  452a60:	and    BYTE PTR [rbx+0x20],bl
  452a63:	rex.WRXB
  452a64:	rex.RX
  452a65:	rex.RX push rbx
  452a67:	rex.RB push r12
  452a69:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a04ae2
  452a6f:	push   rdx
  452a70:	rex.WRXB push r15
  452a72:	and    BYTE PTR [rax+riz*1+0x52],bh
  452a76:	rex.WRXB push r15
  452a78:	push   rbx
  452a79:	and    BYTE PTR [rbp+0x20],bl
  452a7c:	pop    rbp
  452a7d:	or     ah,BYTE PTR [rax]
  452a7f:	and    BYTE PTR [rax],ah
  452a81:	and    BYTE PTR [rbx+0x20],bl
  452a84:	rex.RX
  452a85:	rex.RB push r12
  452a87:	rex.XB
  452a88:	rex.W and BYTE PTR [rbx+0x20],dil
  452a8c:	rex.RX
  452a8d:	rex.WB push r10
  452a8f:	push   rbx
  452a90:	push   rsp
  452a91:	and    BYTE PTR [rax+riz*1+0x4e],bh
  452a95:	rex.RB pop r8
  452a97:	push   rsp
  452a98:	and    BYTE PTR [rbp+0x20],bh
  452a9b:	pop    rbx
  452a9c:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a24b15
  452aa2:	jnp    0x452ac4
  452aa4:	push   rdx
  452aa5:	rex.WRXB push r15
  452aa7:	and    BYTE PTR [rax+riz*1+0x52],bh
  452aab:	rex.WRXB push r15
  452aad:	push   rbx
  452aae:	and    BYTE PTR [rbp+0x20],bh
  452ab1:	rex.WRXB
  452ab2:	rex.WRX
  452ab3:	rex.WR pop rcx
  452ab5:	and    BYTE PTR [rbp+0xa],bl
  452ab8:	and    BYTE PTR [rax],ah
  452aba:	and    BYTE PTR [rax],ah
  452abc:	pop    rbx
  452abd:	and    BYTE PTR [rsi+0x4f],al
  452ac0:	push   rdx
  452ac1:	and    BYTE PTR [rbx+0x20],bh
  452ac4:	push   rbp
  452ac5:	push   rax
  452ac6:	rex.R
  452ac7:	push   r12
  452ac9:	and    BYTE PTR [r8+riz*1+0x53],r15b
  452ace:	rex.W
  452acf:	push   r10
  452ad1:	and    BYTE PTR [r13+0x20],r15b
  452ad5:	pop    rbx
  452ad6:	and    BYTE PTR [rdi+0x46],cl
  452ad9:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca04b52
  452adf:	and    BYTE PTR [rsi],ch
  452ae1:	cs cs pop rbp
  452ae4:	and    BYTE PTR [rbp+0x20],bl
  452ae7:	pop    rbx
  452ae8:	and    BYTE PTR [rsi+0x4f],cl
  452aeb:	push   rdi
  452aec:	rex.B
  452aed:	rex.WB push r12
  452aef:	and    BYTE PTR [rbp+0x20],bl
  452af2:	pop    rbx
  452af3:	cs cs cs pop rbp
  452af7:	and    BYTE PTR [rbp+0x0],bl
  452afa:	outs   dx,BYTE PTR ds:[rsi]
  452afb:	gs ja  0x452b5d
  452afe:	je     0x452b61
  452b00:	(bad)  
  452b01:	ins    BYTE PTR es:[rdi],dx
  452b02:	add    BYTE PTR gs:[rax],al
  452b05:	add    BYTE PTR [rax],al
  452b07:	add    BYTE PTR [rbx+0x45],dl
  452b0a:	push   rsp
  452b0b:	and    BYTE PTR [rbx+0x20],bl
  452b0e:	push   rbx
  452b0f:	rex.RB push r11
  452b11:	push   rbx
  452b12:	rex.WB
  452b13:	rex.WRXB
  452b14:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452b19:	rex.WRXB
  452b1a:	rex.XB
  452b1b:	rex.B
  452b1c:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452b20:	and    eax,0x207b2073
  452b25:	push   rsp
  452b26:	rex.WRXB and BYTE PTR [r8+r12*1+0x3d],r15b
  452b2b:	and    BYTE PTR [rbp+0x20],bh
  452b2e:	jnp    0x452b50
  452b30:	and    eax,0x207c2073
  452b35:	(bad)  
  452b36:	and    eax,0x7c202773
  452b3b:	and    BYTE PTR [rbp+rax*2+0x46],al
  452b3f:	push   r13
  452b41:	rex.WR push rsp
  452b43:	and    BYTE PTR [rbp+0xa],bh
  452b46:	push   rbx
  452b47:	rex.RB push r12
  452b49:	and    BYTE PTR [rbx+0x20],bl
  452b4c:	push   rbx
  452b4d:	rex.RB push r11
  452b4f:	push   rbx
  452b50:	rex.WB
  452b51:	rex.WRXB
  452b52:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452b57:	rex.WRXB
  452b58:	rex.XB
  452b59:	rex.B
  452b5a:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452b5e:	push   rsp
  452b5f:	rex.WB
  452b60:	rex.WRB
  452b61:	and    BYTE PTR [r10+0x4f],r11b
  452b65:	rex.WRX
  452b66:	and    BYTE PTR [r11+0x20],r15b
  452b6a:	and    eax,0x207c2073
  452b6f:	rex.WR
  452b70:	rex.WRXB
  452b71:	rex.XB
  452b72:	rex.B
  452b73:	rex.WR and BYTE PTR [rax+riz*1+0x44],r15b
  452b78:	rex.RB
  452b79:	rex.RX
  452b7a:	push   r13
  452b7c:	rex.WR push rsp
  452b7e:	and    BYTE PTR [rbp+0x0],bh
  452b81:	je     0x452bec
  452b83:	ins    DWORD PTR es:[rdi],dx
  452b84:	gs jp  0x452bf6
  452b87:	outs   dx,BYTE PTR ds:[rsi]
  452b88:	add    BYTE PTR gs:[rax],al
  452b8b:	add    BYTE PTR [rax],al
  452b8d:	add    BYTE PTR [rax],al
  452b8f:	add    BYTE PTR [rbx+0x45],dl
  452b92:	push   rsp
  452b93:	and    BYTE PTR [rbx+0x4f],al
  452b96:	rex.WRX push rbx
  452b98:	push   rsp
  452b99:	push   rdx
  452b9a:	rex.B
  452b9b:	rex.WB
  452b9c:	rex.WRX push rsp
  452b9e:	push   rbx
  452b9f:	and    BYTE PTR [rbx+0x20],bh
  452ba2:	rex.B
  452ba3:	rex.WR
  452ba4:	rex.WR and BYTE PTR [rax+riz*1+0x25],r15b
  452ba9:	jae    0x452bcb
  452bab:	pop    rbx
  452bac:	sub    al,0x20
  452bae:	cs cs cs pop rbp
  452bb2:	and    BYTE PTR [rbp+0x20],bh
  452bb5:	jnp    0x452bd7
  452bb7:	rex.R
  452bb8:	rex.RB
  452bb9:	rex.RX
  452bba:	rex.RB push r10
  452bbc:	push   rdx
  452bbd:	rex.RB
  452bbe:	and    BYTE PTR [rax+riz*1+0x49],r15b
  452bc3:	rex.WRB
  452bc4:	rex.WRB
  452bc5:	rex.RB
  452bc6:	rex.R
  452bc7:	rex.WB
  452bc8:	push   r12
  452bca:	and    BYTE PTR [r13+0x0],r15b
  452bce:	add    BYTE PTR [rax],al
  452bd0:	push   rbx
  452bd1:	rex.RB push r12
  452bd3:	and    BYTE PTR [rbx+0x20],bl
  452bd6:	push   rbx
  452bd7:	rex.RB push r11
  452bd9:	push   rbx
  452bda:	rex.WB
  452bdb:	rex.WRXB
  452bdc:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452be1:	rex.WRXB
  452be2:	rex.XB
  452be3:	rex.B
  452be4:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452be8:	push   rdx
  452be9:	rex.WRXB
  452bea:	rex.WR
  452beb:	and    BYTE PTR [rip+0x45530a73],r12b        # 0x45983665
  452bf2:	push   rsp
  452bf3:	and    BYTE PTR [rbx+0x20],bl
  452bf6:	push   rbx
  452bf7:	rex.RB push r11
  452bf9:	push   rbx
  452bfa:	rex.WB
  452bfb:	rex.WRXB
  452bfc:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452c01:	rex.WRXB
  452c02:	rex.XB
  452c03:	rex.B
  452c04:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452c08:	push   rdx
  452c09:	rex.WRXB
  452c0a:	rex.WR
  452c0b:	and    BYTE PTR [r14+0x4f],r9b
  452c0f:	rex.WRX
  452c10:	or     r10b,BYTE PTR [r10+0x45]
  452c14:	push   rbx
  452c15:	rex.RB push r12
  452c17:	and    BYTE PTR [rdx+0x4f],dl
  452c1a:	rex.WR
  452c1b:	add    BYTE PTR [r8],r8b
  452c1e:	add    BYTE PTR [rax],al
  452c20:	push   rbx
  452c21:	rex.RB push r12
  452c23:	and    BYTE PTR [rbx+0x20],bl
  452c26:	push   rbx
  452c27:	rex.RB push r11
  452c29:	push   rbx
  452c2a:	rex.WB
  452c2b:	rex.WRXB
  452c2c:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452c31:	rex.WRXB
  452c32:	rex.XB
  452c33:	rex.B
  452c34:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452c38:	push   rbx
  452c39:	rex.RB push r11
  452c3b:	push   rbx
  452c3c:	rex.WB
  452c3d:	rex.WRXB
  452c3e:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  452c42:	push   rsp
  452c43:	rex.W
  452c44:	rex.WRXB push r10
  452c46:	rex.WB pop r10
  452c48:	push   r12
  452c4a:	rex.WB
  452c4b:	rex.WRXB
  452c4c:	rex.WRX and BYTE PTR [rip+0x45530a73],r12b        # 0x459836c6
  452c53:	push   rsp
  452c54:	and    BYTE PTR [rbx+0x20],bl
  452c57:	push   rbx
  452c58:	rex.RB push r11
  452c5a:	push   rbx
  452c5b:	rex.WB
  452c5c:	rex.WRXB
  452c5d:	rex.WRX and BYTE PTR [rax+r12*1+0x4c],r15b
  452c62:	rex.WRXB
  452c63:	rex.XB
  452c64:	rex.B
  452c65:	rex.WR and BYTE PTR [rbp+0x20],r11b
  452c69:	push   rbx
  452c6a:	rex.RB push r11
  452c6c:	push   rbx
  452c6d:	rex.WB
  452c6e:	rex.WRXB
  452c6f:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  452c73:	push   rsp
  452c74:	rex.W
  452c75:	rex.WRXB push r10
  452c77:	rex.WB pop r10
  452c79:	push   r12
  452c7b:	rex.WB
  452c7c:	rex.WRXB
  452c7d:	rex.WRX and BYTE PTR [rbp+r8*2+0x46],r8b
  452c82:	push   r13
  452c84:	rex.WR push rsp
  452c86:	or     dl,BYTE PTR [rdx+0x45]
  452c89:	push   rbx
  452c8a:	rex.RB push r12
  452c8c:	and    BYTE PTR [rbx+0x45],dl
  452c8f:	push   rbx
  452c90:	push   rbx
  452c91:	rex.WB
  452c92:	rex.WRXB
  452c93:	rex.WRX and BYTE PTR [rcx+0x55],r8b
  452c97:	push   rsp
  452c98:	rex.W
  452c99:	rex.WRXB push r10
  452c9b:	rex.WB pop r10
  452c9d:	push   r12
  452c9f:	rex.WB
  452ca0:	rex.WRXB
  452ca1:	rex.WRX add BYTE PTR [rbx+0x6e],r14b
  452ca5:	(bad)  
  452ca6:	jo     0x452d1b
  452ca8:	push   0x695f746f
  452cad:	add    BYTE PTR fs:[rax],al
  452cb0:	push   rbx
  452cb1:	rex.RB push r12
  452cb3:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  452cb7:	rex.WRX push rbx
  452cb9:	rex.B
  452cba:	rex.XB push r12
  452cbc:	rex.WB
  452cbd:	rex.WRXB
  452cbe:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca04d38
  452cc5:	and    BYTE PTR [rsi],ch
  452cc7:	cs cs pop rbp
  452cca:	or     dl,BYTE PTR [rbx+0x45]
  452ccd:	push   rsp
  452cce:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  452cd2:	rex.WRX push rbx
  452cd4:	rex.B
  452cd5:	rex.XB push r12
  452cd7:	rex.WB
  452cd8:	rex.WRXB
  452cd9:	rex.WRX and BYTE PTR [rbx+0x4e],r10b
  452cdd:	push   r8
  452cdf:	push   rbx
  452ce0:	rex.W
  452ce1:	rex.WRXB push r12
  452ce3:	and    BYTE PTR [rip+0x45530a73],ah        # 0x4598375c
  452ce9:	push   rsp
  452cea:	and    BYTE PTR [rbx+0x45],dl
  452ced:	push   rbx
  452cee:	push   rbx
  452cef:	rex.WB
  452cf0:	rex.WRXB
  452cf1:	rex.WRX and BYTE PTR [rbx+0x48],r8b
  452cf5:	push   r10
  452cf7:	rex.B
  452cf8:	rex.XB push r12
  452cfa:	rex.RB push r10
  452cfc:	rex.WB push r11
  452cfe:	push   rsp
  452cff:	rex.WB
  452d00:	rex.XB push r11
  452d02:	and    BYTE PTR [rcx+0x53],al
  452d05:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  452d09:	rex.WRX push rbx
  452d0b:	rex.B
  452d0c:	rex.XB push r12
  452d0e:	rex.WB
  452d0f:	rex.WRXB
  452d10:	rex.WRX and BYTE PTR [rip+0x2c5b2073],r12b        # 0x2ca04d8a
  452d17:	and    BYTE PTR [rsi],ch
  452d19:	cs cs pop rbp
  452d1c:	or     cl,BYTE PTR [rdx]
  452d1e:	and    eax,0x200a0a73
  452d23:	and    BYTE PTR [rax],ah
  452d25:	and    BYTE PTR [rcx+0x53],cl
  452d28:	rex.WRXB
  452d29:	rex.WR
  452d2a:	push   r12
  452d2c:	rex.WB
  452d2d:	rex.WRXB
  452d2e:	rex.WRX and BYTE PTR [rbp+r8*2+0x56],r9b
  452d33:	rex.RB
  452d34:	rex.WR and BYTE PTR [rbx+0x20],r15b
  452d38:	push   rbx
  452d39:	rex.RB push r10
  452d3b:	rex.WB
  452d3c:	rex.B
  452d3d:	rex.WR
  452d3e:	rex.WB pop r10
  452d40:	rex.B
  452d41:	rex.X
  452d42:	rex.WR
  452d43:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452d48:	rex.RB push r8
  452d4a:	rex.RB
  452d4b:	push   r12
  452d4d:	rex.B
  452d4e:	rex.X
  452d4f:	rex.WR
  452d50:	and    BYTE PTR [r10+0x45],r10b
  452d54:	rex.B
  452d55:	and    BYTE PTR [rax+riz*1+0x52],r15b
  452d5a:	rex.RB
  452d5b:	rex.B
  452d5c:	and    BYTE PTR [rbx+0x4f],r8b
  452d60:	rex.WRB
  452d61:	rex.WRB
  452d62:	rex.WB push r12
  452d64:	push   rsp
  452d65:	rex.RB
  452d66:	and    BYTE PTR [rax+riz*1+0x52],r15b
  452d6b:	rex.RB
  452d6c:	rex.B
  452d6d:	and    BYTE PTR [rbp+0x4e],r10b
  452d71:	rex.XB
  452d72:	rex.WRXB
  452d73:	rex.WRB
  452d74:	rex.WRB
  452d75:	rex.WB push r12
  452d77:	push   rsp
  452d78:	rex.RB
  452d79:	and    BYTE PTR [rbp+0xa],r15b
  452d7d:	and    BYTE PTR [rax],ah
  452d7f:	and    BYTE PTR [rax],ah
  452d81:	push   rdx
  452d82:	rex.RB
  452d83:	rex.B
  452d84:	and    BYTE PTR [rdi+0x52],r10b
  452d88:	rex.WB push r12
  452d8a:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452d8f:	rex.RB
  452d90:	rex.B
  452d91:	and    BYTE PTR [rdi+0x4e],r9b
  452d95:	rex.WR pop rcx
  452d97:	or     ah,BYTE PTR [rax]
  452d99:	and    BYTE PTR [rax],ah
  452d9b:	and    BYTE PTR [rbx+0x20],bl
  452d9e:	rex.WRX
  452d9f:	rex.WRXB push r12
  452da1:	and    BYTE PTR [rbp+0x20],bl
  452da4:	rex.R
  452da5:	rex.RB
  452da6:	rex.RX
  452da7:	rex.RB push r10
  452da9:	push   rdx
  452daa:	rex.B
  452dab:	rex.X
  452dac:	rex.WR
  452dad:	add    BYTE PTR [r11+0x48],r10b
  452db1:	rex.WRXB push r15
  452db3:	and    BYTE PTR [rip+0x48530a73],ah        # 0x4898382c
  452db9:	rex.WRXB push r15
  452dbb:	and    BYTE PTR [rcx+0x4c],al
  452dbe:	rex.WR add BYTE PTR [rbx+0x54],r10b
  452dc2:	push   r10
  452dc4:	push   rsp
  452dc5:	and    BYTE PTR [rdx+rdx*2+0x41],dl
  452dc9:	rex.WRX push rbx
  452dcb:	rex.B
  452dcc:	rex.XB push r12
  452dce:	rex.WB
  452dcf:	rex.WRXB
  452dd0:	rex.WRX and BYTE PTR [rbx+0x20],r11b
  452dd4:	and    eax,0x2c5b2073
  452dd9:	and    BYTE PTR [rsi],ch
  452ddb:	cs cs pop rbp
  452dde:	and    BYTE PTR [rbp+0xa],bl
  452de1:	or     ah,BYTE PTR [rip+0x200a0a73]        # 0x204f385a
  452de7:	and    BYTE PTR [rax],ah
  452de9:	and    BYTE PTR [rcx+0x53],cl
  452dec:	rex.WRXB
  452ded:	rex.WR
  452dee:	push   r12
  452df0:	rex.WB
  452df1:	rex.WRXB
  452df2:	rex.WRX and BYTE PTR [rbp+r8*2+0x56],r9b
  452df7:	rex.RB
  452df8:	rex.WR and BYTE PTR [rbx+0x20],r15b
  452dfc:	push   rbx
  452dfd:	rex.RB push r10
  452dff:	rex.WB
  452e00:	rex.B
  452e01:	rex.WR
  452e02:	rex.WB pop r10
  452e04:	rex.B
  452e05:	rex.X
  452e06:	rex.WR
  452e07:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452e0c:	rex.RB push r8
  452e0e:	rex.RB
  452e0f:	push   r12
  452e11:	rex.B
  452e12:	rex.X
  452e13:	rex.WR
  452e14:	and    BYTE PTR [r10+0x45],r10b
  452e18:	rex.B
  452e19:	and    BYTE PTR [rax+riz*1+0x52],r15b
  452e1e:	rex.RB
  452e1f:	rex.B
  452e20:	and    BYTE PTR [rbx+0x4f],r8b
  452e24:	rex.WRB
  452e25:	rex.WRB
  452e26:	rex.WB push r12
  452e28:	push   rsp
  452e29:	rex.RB
  452e2a:	and    BYTE PTR [rax+riz*1+0x52],r15b
  452e2f:	rex.RB
  452e30:	rex.B
  452e31:	and    BYTE PTR [rbp+0x4e],r10b
  452e35:	rex.XB
  452e36:	rex.WRXB
  452e37:	rex.WRB
  452e38:	rex.WRB
  452e39:	rex.WB push r12
  452e3b:	push   rsp
  452e3c:	rex.RB
  452e3d:	and    BYTE PTR [rbp+0xa],r15b
  452e41:	and    BYTE PTR [rax],ah
  452e43:	and    BYTE PTR [rax],ah
  452e45:	push   rdx
  452e46:	rex.RB
  452e47:	rex.B
  452e48:	and    BYTE PTR [rdi+0x52],r10b
  452e4c:	rex.WB push r12
  452e4e:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452e53:	rex.RB
  452e54:	rex.B
  452e55:	and    BYTE PTR [rdi+0x4e],r9b
  452e59:	rex.WR pop rcx
  452e5b:	or     ah,BYTE PTR [rax]
  452e5d:	and    BYTE PTR [rax],ah
  452e5f:	and    BYTE PTR [rbx+0x20],bl
  452e62:	rex.WRX
  452e63:	rex.WRXB push r12
  452e65:	and    BYTE PTR [rbp+0x20],bl
  452e68:	rex.R
  452e69:	rex.RB
  452e6a:	rex.RX
  452e6b:	rex.RB push r10
  452e6d:	push   rdx
  452e6e:	rex.B
  452e6f:	rex.X
  452e70:	rex.WR
  452e71:	add    BYTE PTR [r8],r8b
  452e74:	add    BYTE PTR [rax],al
  452e76:	add    BYTE PTR [rax],al
  452e78:	push   rsp
  452e79:	push   rdx
  452e7a:	push   rbp
  452e7b:	rex.WRX
  452e7c:	rex.XB
  452e7d:	push   r12
  452e7f:	and    BYTE PTR [r11+0x20],r11b
  452e83:	push   rsp
  452e84:	rex.B
  452e85:	rex.X
  452e86:	rex.WR
  452e87:	and    BYTE PTR [r13+0x20],r11b
  452e8b:	pop    rbx
  452e8c:	and    BYTE PTR [rdi+0x4e],cl
  452e8f:	rex.WR pop rcx
  452e91:	and    BYTE PTR [rbp+0x20],bl
  452e94:	and    eax,0x205b2073
  452e99:	sub    ah,BYTE PTR [rax]
  452e9b:	pop    rbp
  452e9c:	and    BYTE PTR [rbx+0x2c],bl
  452e9f:	and    BYTE PTR [rsi],ch
  452ea1:	cs and BYTE PTR cs:[rbp+0xa],bl
  452ea6:	and    BYTE PTR [rax],ah
  452ea8:	and    BYTE PTR [rax],ah
  452eaa:	pop    rbx
  452eab:	and    BYTE PTR [rdx+0x45],dl
  452eae:	push   rbx
  452eaf:	push   rsp
  452eb0:	push   r10
  452eb2:	push   rsp
  452eb3:	and    BYTE PTR [rcx+0x44],cl
  452eb6:	rex.RB
  452eb7:	rex.WRX push rsp
  452eb9:	rex.WB push r12
  452ebb:	pop    rcx
  452ebc:	and    BYTE PTR [rax+riz*1+0x43],bh
  452ec0:	rex.WRXB
  452ec1:	rex.WRX push rsp
  452ec3:	rex.WB
  452ec4:	rex.WRX push rbp
  452ec6:	and    BYTE PTR [r9+0x44],r9b
  452eca:	rex.RB
  452ecb:	rex.WRX push rsp
  452ecd:	rex.WB push r12
  452ecf:	pop    rcx
  452ed0:	and    BYTE PTR [rbp+0x20],bl
  452ed3:	pop    rbx
  452ed4:	and    BYTE PTR [rbx+0x41],al
  452ed7:	push   rbx
  452ed8:	rex.XB
  452ed9:	rex.B
  452eda:	rex.R
  452edb:	and    BYTE PTR [r8+riz*1+0x52],r15b
  452ee0:	rex.RB push r11
  452ee2:	push   rsp
  452ee3:	push   rdx
  452ee4:	rex.WB
  452ee5:	rex.XB push r12
  452ee7:	and    BYTE PTR [rbp+0x0],bl
  452eea:	push   rbp
  452eeb:	rex.WRX
  452eec:	rex.WR
  452eed:	rex.WB push r11
  452eef:	push   rsp
  452ef0:	rex.RB
  452ef1:	rex.WRX and BYTE PTR [rbx+0x20],r15b
  452ef5:	and    eax,0x207c2073
  452efa:	sub    ah,BYTE PTR [rax]
  452efc:	jge    0x452efe
  452efe:	add    BYTE PTR [rax],al
  452f00:	pop    rbx
  452f01:	and    BYTE PTR [rdi+0x49],dl
  452f04:	push   rsp
  452f05:	rex.W and BYTE PTR [rbx+0x20],bl
  452f09:	push   rdx
  452f0a:	rex.RB
  452f0b:	rex.XB push r13
  452f0d:	push   rdx
  452f0e:	push   rbx
  452f0f:	rex.WB push r14
  452f11:	and    BYTE PTR [r13+0x20],r11b
  452f15:	and    eax,0x2c5b2073
  452f1a:	and    BYTE PTR [rsi],ch
  452f1c:	cs cs pop rbp
  452f1f:	and    BYTE PTR [rbp+0xa],bl
  452f22:	push   rbp
  452f23:	push   rax
  452f24:	rex.R
  452f25:	push   r12
  452f27:	and    BYTE PTR [r11+0x20],r11b
  452f2b:	rex.WRXB
  452f2c:	rex.WRX
  452f2d:	rex.WR pop rcx
  452f2f:	and    BYTE PTR [rbp+0x20],bl
  452f32:	and    eax,0x205b2073
  452f37:	sub    ah,BYTE PTR [rax]
  452f39:	pop    rbp
  452f3a:	and    BYTE PTR [rbx+0x20],bl
  452f3d:	pop    rbx
  452f3e:	and    BYTE PTR [rcx+0x53],al
  452f41:	and    BYTE PTR [rbp+0x20],bl
  452f44:	and    eax,0xa5d2073
  452f49:	and    BYTE PTR [rax],ah
  452f4b:	and    BYTE PTR [rax],ah
  452f4d:	push   rbx
  452f4e:	rex.RB push r12
  452f50:	and    BYTE PTR [rbx+0x20],bh
  452f53:	and    eax,0x203d2073
  452f58:	jnp    0x452f7a
  452f5a:	and    eax,0x207c2073
  452f5f:	rex.R
  452f60:	rex.RB
  452f61:	rex.RX
  452f62:	push   r13
  452f64:	rex.WR push rsp
  452f66:	and    BYTE PTR [rbp+0x20],bh
  452f69:	jl     0x452f75
  452f6b:	and    BYTE PTR [rax],ah
  452f6d:	and    BYTE PTR [rax],ah
  452f6f:	and    BYTE PTR [rax],ah
  452f71:	and    BYTE PTR [rax],ah
  452f73:	and    BYTE PTR [rax],ah
  452f75:	sub    BYTE PTR [rax],ah
  452f77:	and    eax,0x2c5b2073
  452f7c:	and    BYTE PTR [rsi],ch
  452f7e:	cs cs pop rbp
  452f81:	and    BYTE PTR [rcx],ch
  452f83:	and    BYTE PTR [rip+0x7b202820],bh        # 0x7b6557a9
  452f89:	and    BYTE PTR [rip+0x207c2073],ah        # 0x20c15002
  452f8f:	rex.R
  452f90:	rex.RB
  452f91:	rex.RX
  452f92:	push   r13
  452f94:	rex.WR push rsp
  452f96:	and    BYTE PTR [rbp+0x20],bh
  452f99:	pop    rbx
  452f9a:	sub    al,0x20
  452f9c:	cs cs cs pop rbp
  452fa0:	and    BYTE PTR [rcx],ch
  452fa2:	and    BYTE PTR [rbp+0x20],bh
  452fa5:	pop    rbx
  452fa6:	sub    al,0x20
  452fa8:	cs cs cs pop rbp
  452fac:	or     ah,BYTE PTR [rax]
  452fae:	and    BYTE PTR [rax],ah
  452fb0:	and    BYTE PTR [rbx+0x20],bl
  452fb3:	rex.RX push rdx
  452fb5:	rex.WRXB
  452fb6:	rex.WRB and BYTE PTR [rip+0xa5d2073],r12b        # 0xaa25030
  452fbd:	and    BYTE PTR [rax],ah
  452fbf:	and    BYTE PTR [rax],ah
  452fc1:	pop    rbx
  452fc2:	and    BYTE PTR [rdi+0x48],dl
  452fc5:	rex.RB push r10
  452fc7:	and    BYTE PTR [rip+0x207c2073],r12b        # 0x20c15041
  452fce:	push   rdi
  452fcf:	rex.W
  452fd0:	rex.RB push r10
  452fd2:	and    BYTE PTR [r11+0x55],r8b
  452fd6:	push   rdx
  452fd7:	push   rdx
  452fd8:	rex.RB
  452fd9:	rex.WRX push rsp
  452fdb:	and    BYTE PTR [rdi+0x46],cl
  452fde:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa25057
  452fe4:	and    BYTE PTR [rax],ah
  452fe6:	and    BYTE PTR [rax],ah
  452fe8:	pop    rbx
  452fe9:	and    BYTE PTR [rdx+0x45],dl
  452fec:	push   rsp
  452fed:	push   rbp
  452fee:	push   rdx
  452fef:	rex.WRX
  452ff0:	rex.WB
  452ff1:	rex.WRX
  452ff2:	rex.RXB and BYTE PTR [r10],r13b
  452ff5:	and    BYTE PTR [rax+riz*1+0x25],bh
  452ff9:	jae    0x45301b
  452ffb:	pop    rbx
  452ffc:	and    BYTE PTR [rbx+0x20],bl
  452fff:	push   r11
  453001:	and    BYTE PTR [rbp+0x20],bl
  453004:	and    eax,0x205d2073
  453009:	pop    rbx
  45300a:	sub    al,0x20
  45300c:	cs cs cs pop rbp
  453010:	and    BYTE PTR [rbp+0x0],bl
  453013:	data16 jb 0x453085
  453016:	ins    DWORD PTR es:[rdi],dx
  453017:	pop    rdi
  453018:	ins    BYTE PTR es:[rdi],dx
  453019:	imul   esi,DWORD PTR [rbx+0x74],0x0
  453020:	push   rsi
  453021:	rex.B
  453022:	rex.XB push r13
  453024:	push   rbp
  453025:	rex.WRB and BYTE PTR [r11+0x20],r11b
  453029:	sub    BYTE PTR [rax],ah
  45302b:	jnp    0x45304d
  45302d:	rex.RX push rbp
  45302f:	rex.WR
  453030:	rex.WR and BYTE PTR [rax+riz*1+0x46],r15b
  453035:	push   rdx
  453036:	rex.RB
  453037:	rex.RB pop r10
  453039:	and    BYTE PTR [r8+riz*1+0x56],r15b
  45303e:	rex.RB push r10
  453040:	rex.X
  453041:	rex.WRXB push r11
  453043:	and    BYTE PTR [r8+riz*1+0x41],r15b
  453048:	rex.WRX
  453049:	rex.B
  45304a:	rex.WR pop rcx
  45304c:	pop    rdx
  45304d:	and    BYTE PTR [r13+0x20],r15b
  453051:	pop    rbx
  453052:	sub    al,0x20
  453054:	cs cs cs pop rbp
  453058:	and    BYTE PTR [rcx],ch
  45305a:	and    BYTE PTR [rbp+0x20],bl
  45305d:	pop    rbx
  45305e:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a050d7
  453064:	sub    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca050dd
  45306a:	and    BYTE PTR [rsi],ch
  45306c:	cs cs pop rbp
  45306f:	and    BYTE PTR [rcx],ch
  453071:	and    BYTE PTR [rbp+0x20],bl
  453074:	pop    rbp
  453075:	or     dl,BYTE PTR [rsi+0x41]
  453078:	rex.XB push r13
  45307a:	push   rbp
  45307b:	rex.WRB and BYTE PTR [r11+0x20],r11b
  45307f:	rex.RX push rbp
  453081:	rex.WR
  453082:	rex.WR and BYTE PTR [rbp+0x20],r11b
  453086:	pop    rbx
  453087:	and    BYTE PTR [rsi+0x52],al
  45308a:	rex.RB
  45308b:	rex.RB pop r10
  45308d:	and    BYTE PTR [r13+0x20],r11b
  453091:	pop    rbx
  453092:	and    BYTE PTR [rsi+0x45],dl
  453095:	push   rdx
  453096:	rex.X
  453097:	rex.WRXB push r11
  453099:	and    BYTE PTR [r13+0x20],r11b
  45309d:	pop    rbx
  45309e:	and    BYTE PTR [rip+0xa5d2073],ah        # 0xaa25117
  4530a4:	push   rsi
  4530a5:	rex.B
  4530a6:	rex.XB push r13
  4530a8:	push   rbp
  4530a9:	rex.WRB and BYTE PTR [r11+0x20],r11b
  4530ad:	rex.RX push rbp
  4530af:	rex.WR
  4530b0:	rex.WR and BYTE PTR [rbp+0x20],r11b
  4530b4:	pop    rbx
  4530b5:	and    BYTE PTR [rsi+0x52],al
  4530b8:	rex.RB
  4530b9:	rex.RB pop r10
  4530bb:	and    BYTE PTR [r13+0x20],r11b
  4530bf:	pop    rbx
  4530c0:	and    BYTE PTR [rsi+0x45],dl
  4530c3:	push   rdx
  4530c4:	rex.X
  4530c5:	rex.WRXB push r11
  4530c7:	and    BYTE PTR [r13+0x20],r11b
  4530cb:	rex.B
  4530cc:	rex.WRX
  4530cd:	rex.B
  4530ce:	rex.WR pop rcx
  4530d0:	pop    rdx
  4530d1:	and    BYTE PTR [r11+0x20],r11b
  4530d5:	and    eax,0x205b2073
  4530da:	sub    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca05153
  4530e0:	and    BYTE PTR [rsi],ch
  4530e2:	cs cs pop rbp
  4530e5:	and    BYTE PTR [rcx],ch
  4530e7:	and    BYTE PTR [rbp+0x20],bl
  4530ea:	pop    rbp
  4530eb:	add    BYTE PTR [rbx+0x6f],dh
  4530ee:	jb     0x453164
  4530f0:	pop    rdi
  4530f1:	gs js  0x453164
  4530f4:	jb     0x45315b
  4530f6:	jae    0x45316b
  4530f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4530ff:	add    BYTE PTR [rsi+0x41],dl
  453102:	rex.WR push rbp
  453104:	rex.RB push r11
  453106:	and    BYTE PTR [rax],ch
  453108:	and    BYTE PTR [rip+0x2c5b2073],ah        # 0x2ca05181
  45310e:	and    BYTE PTR [rsi],ch
  453110:	cs cs pop rbp
  453113:	and    BYTE PTR [rcx],ch
  453115:	and    BYTE PTR [rbx+0x2c],bl
  453118:	and    BYTE PTR [rsi],ch
  45311a:	cs cs pop rbp
  45311d:	or     ah,BYTE PTR [rax]
  45311f:	and    BYTE PTR [rax],ah
  453121:	and    BYTE PTR [rbx+0x20],bl
  453124:	rex.WRXB push r10
  453126:	rex.R
  453127:	rex.RB push r10
  453129:	and    BYTE PTR [rdx+0x59],al
  45312c:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a051a5
  453132:	push   r11
  453134:	and    BYTE PTR [r8+r12*1+0x44],dil
  453139:	rex.RB push r11
  45313b:	and    BYTE PTR [r8+r12*1+0x55],dil
  453140:	push   rbx
  453141:	rex.WB
  453142:	rex.WRX
  453143:	rex.RXB and BYTE PTR [rip+0x205d2073],r12b        # 0x20a251bd
  45314a:	pop    rbx
  45314b:	sub    al,0x20
  45314d:	cs cs cs pop rbp
  453151:	and    BYTE PTR [rbp+0xa],bl
  453154:	and    BYTE PTR [rax],ah
  453156:	and    BYTE PTR [rax],ah
  453158:	pop    rbx
  453159:	and    BYTE PTR [rcx+rcx*2+0x4d],cl
  45315d:	rex.WB push r12
  45315f:	and    BYTE PTR [rbx+0x20],bh
  453162:	and    eax,0x207c2073
  453167:	rex.B
  453168:	rex.WR
  453169:	rex.WR and BYTE PTR [rbp+0x20],r15b
  45316d:	pop    rbp
  45316e:	or     ah,BYTE PTR [rax]
  453170:	and    BYTE PTR [rax],ah
  453172:	and    BYTE PTR [rbx+0x20],bl
  453175:	rex.WRXB
  453176:	rex.RX
  453177:	rex.RX push rbx
  453179:	rex.RB push r12
  45317b:	and    BYTE PTR [rip+0x205b2073],ah        # 0x20a051f4
  453181:	push   rdx
  453182:	rex.WRXB push r15
  453184:	and    BYTE PTR [rax+riz*1+0x52],bh
  453188:	rex.WRXB push r15
  45318a:	push   rbx
  45318b:	and    BYTE PTR [rbp+0x20],bl
  45318e:	pop    rbp
  45318f:	or     ah,BYTE PTR [rax]
  453191:	and    BYTE PTR [rax],ah
  453193:	and    BYTE PTR [rbx+0x20],bl
  453196:	rex.RX
  453197:	rex.RB push r12
  453199:	rex.XB
  45319a:	rex.W and BYTE PTR [rbx+0x20],dil
  45319e:	rex.RX
  45319f:	rex.WB push r10
  4531a1:	push   rbx
  4531a2:	push   rsp
  4531a3:	and    BYTE PTR [rax+riz*1+0x4e],bh
  4531a7:	rex.RB pop r8
  4531a9:	push   rsp
  4531aa:	and    BYTE PTR [rbp+0x20],bh
  4531ad:	pop    rbx
  4531ae:	and    BYTE PTR [rip+0x205d2073],ah        # 0x20a25227
  4531b4:	jnp    0x4531d6
  4531b6:	push   rdx
  4531b7:	rex.WRXB push r15
  4531b9:	and    BYTE PTR [rax+riz*1+0x52],bh
  4531bd:	rex.WRXB push r15
  4531bf:	push   rbx
  4531c0:	and    BYTE PTR [rbp+0x20],bh
  4531c3:	rex.WRXB
  4531c4:	rex.WRX
  4531c5:	rex.WR pop rcx
  4531c7:	and    BYTE PTR [rbp+0x0],bl
  4531ca:	add    BYTE PTR [rax],al
  4531cc:	add    BYTE PTR [rax],al
  4531ce:	add    BYTE PTR [rax],al
  4531d0:	cs gs js 0x453239
  4531d4:	add    BYTE PTR [rax],al
  4531d6:	add    BYTE PTR [rax],al
  4531d8:	movsxd ebp,DWORD PTR [rdi+0x75]
  4531db:	ins    BYTE PTR es:[rdi],dx
  4531dc:	and    BYTE PTR fs:[rsi+0x6f],ch
  4531e0:	je     0x453202
  4531e2:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x79666974
  4531ea:	and    BYTE PTR [rbx+0x75],ah
  4531ed:	jb     0x453261
  4531ef:	outs   dx,BYTE PTR gs:[rsi]
  4531f1:	je     0x453213
  4531f3:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  4531fb:	jns    0x453237
  4531fd:	and    BYTE PTR [rip+0x6e690073],ah        # 0x6eae3276
  453203:	jbe    0x453266
  453205:	ins    BYTE PTR es:[rdi],dx
  453206:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x72616e69
  45320e:	jns    0x453230
  453210:	and    ah,BYTE PTR [rip+0x50002273]        # 0x50455489
  453216:	push   r12
  453218:	rex.W add BYTE PTR [rax],al
  45321b:	add    BYTE PTR [rax],al
  45321d:	add    BYTE PTR [rax],al
  45321f:	add    BYTE PTR [rbx+0x6f],ah
  453222:	jne    0x453290
  453224:	and    BYTE PTR fs:[rsi+0x6f],ch
  453228:	je     0x45324a
  45322a:	imul   bp,WORD PTR [rsi+0x64],0x6120
  453230:	and    BYTE PTR [rdx],ah
  453232:	and    eax,0x74202273
  453237:	outs   dx,DWORD PTR ds:[rsi]
  453238:	and    BYTE PTR [rbp+0x78],ah
  45323b:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  45323f:	add    BYTE PTR gs:[rbx+0x6f],ah
  453243:	jne    0x4532b1
  453245:	and    BYTE PTR fs:[rsi+0x6f],ch
  453249:	je     0x45326b
  45324b:	jb     0x4532b2
  45324d:	(bad)  
  45324e:	and    BYTE PTR fs:[rdx+0x69],ah
  453252:	outs   dx,BYTE PTR ds:[rsi]
  453253:	(bad)  
  453254:	jb     0x4532cf
  453256:	and    BYTE PTR [rdx],ah
  453258:	and    eax,0x2f002273
  45325d:	and    eax,0x732573
  453262:	and    ah,BYTE PTR [rip+0x2d202273]        # 0x2d6554db
  453268:	push   rsi
  453269:	add    BYTE PTR [rax+0x63],dh
  45326c:	ins    BYTE PTR es:[rdi],dx
  45326d:	outs   dx,DWORD PTR ds:[rsi]
  45326e:	jae    0x4532d5
  453270:	and    BYTE PTR [rsi+0x61],ah
  453273:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  45327b:	add    BYTE PTR [rip+0x6f700073],ah        # 0x6fb532f4
  453281:	jae    0x4532f7
  453283:	addr32 jb 0x4532eb
  453286:	jae    0x4532b5
  453288:	cmp    DWORD PTR [rsi],ebp
  45328a:	xor    al,0x0
  45328c:	add    BYTE PTR [rax+0x47],dl
  45328f:	push   rbx
  453290:	pop    rcx
  453291:	push   rbx
  453292:	rex.XB
  453293:	rex.WRXB
  453294:	rex.WRX
  453295:	rex.RX
  453296:	rex.R
  453297:	rex.WB push r10
  453299:	add    BYTE PTR [rax+0x47],dl
  45329c:	push   rbx
  45329d:	pop    rcx
  45329e:	push   rbx
  45329f:	rex.XB
  4532a0:	rex.WRXB
  4532a1:	rex.WRX
  4532a2:	rex.RX
  4532a3:	rex.R
  4532a4:	rex.WB push r10
  4532a6:	cmp    eax,0x7325
  4532ab:	add    BYTE PTR [rax],al
  4532ad:	add    BYTE PTR [rax],al
  4532af:	add    BYTE PTR [rbx+0x6f],ah
  4532b2:	jne    0x453320
  4532b4:	and    BYTE PTR fs:[rsi+0x6f],ch
  4532b8:	je     0x4532da
  4532ba:	(bad)  
  4532bb:	ins    BYTE PTR es:[rdi],dx
  4532bc:	ins    BYTE PTR es:[rdi],dx
  4532bd:	outs   dx,DWORD PTR ds:[rsi]
  4532be:	movsxd esp,DWORD PTR [rcx+0x74]
  4532c1:	and    BYTE PTR gs:[rip+0x6220756c],ah        # 0x6265a834
  4532c8:	jns    0x45333e
  4532ca:	gs jae 0x4532ed
  4532cd:	outs   dx,DWORD PTR ds:[rsi]
  4532ce:	data16 and BYTE PTR [rbp+0x65],ch
  4532d2:	ins    DWORD PTR es:[rdi],dx
  4532d3:	outs   dx,DWORD PTR ds:[rsi]
  4532d4:	jb     0x45334f
  4532d6:	add    BYTE PTR [rax],al
  4532d8:	movsxd ebp,DWORD PTR [rdi+0x75]
  4532db:	ins    BYTE PTR es:[rdi],dx
  4532dc:	and    BYTE PTR fs:[rsi+0x6f],ch
  4532e0:	je     0x453302
  4532e2:	addr32 gs je 0x453306
  4532e6:	je     0x453357
  4532e8:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  4532ec:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  4532f3:	je     0x45335e
  4532f5:	outs   dx,DWORD PTR ds:[rsi]
  4532f6:	outs   dx,BYTE PTR ds:[rsi]
  4532f7:	cmp    ah,BYTE PTR [rax]
  4532f9:	gs jb  0x45336e
  4532fc:	outs   dx,DWORD PTR ds:[rsi]
  4532fd:	jb     0x45331f
  4532ff:	movsxd ebp,DWORD PTR [rdi+0x64]
  453302:	and    BYTE PTR gs:[rip+0x6300756c],ah        # 0x6345a875
  453309:	outs   dx,DWORD PTR ds:[rsi]
  45330a:	jne    0x453378
  45330c:	and    BYTE PTR fs:[rsi+0x6f],ch
  453310:	je     0x453332
  453312:	addr32 gs je 0x453336
  453316:	je     0x453387
  453318:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  45331c:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  453323:	je     0x45338e
  453325:	outs   dx,DWORD PTR ds:[rsi]
  453326:	outs   dx,BYTE PTR ds:[rsi]
  453327:	and    BYTE PTR [rdx+0x75],ah
  45332a:	data16 data16 gs jb 0x45334f
  45332f:	jae    0x45339a
  453331:	jp     0x453398
  453333:	cmp    ah,BYTE PTR [rax]
  453335:	gs jb  0x4533aa
  453338:	outs   dx,DWORD PTR ds:[rsi]
  453339:	jb     0x45335b
  45333b:	movsxd ebp,DWORD PTR [rdi+0x64]
  45333e:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a8b1
  453345:	add    BYTE PTR [rax],al
  453347:	add    BYTE PTR [rbx+0x6f],ah
  45334a:	jne    0x4533b8
  45334c:	and    BYTE PTR fs:[rsi+0x6f],ch
  453350:	je     0x453372
  453352:	addr32 gs je 0x453376
  453356:	rex.B
  453357:	rex.XB
  453358:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  45335c:	outs   dx,WORD PTR ds:[rsi]
  45335e:	jb     0x4533cd
  453360:	(bad)  
  453361:	je     0x4533cc
  453363:	outs   dx,DWORD PTR ds:[rsi]
  453364:	outs   dx,BYTE PTR ds:[rsi]
  453365:	cmp    ah,BYTE PTR [rax]
  453367:	gs jb  0x4533dc
  45336a:	outs   dx,DWORD PTR ds:[rsi]
  45336b:	jb     0x45338d
  45336d:	movsxd ebp,DWORD PTR [rdi+0x64]
  453370:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a8e3
  453377:	add    BYTE PTR [rbx+0x6f],ah
  45337a:	jne    0x4533e8
  45337c:	and    BYTE PTR fs:[rsi+0x6f],ch
  453380:	je     0x4533a2
  453382:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  453389:	imul   edi,DWORD PTR [rdx+0x65],0x4c434120
  453390:	cmp    ah,BYTE PTR [rax]
  453392:	gs jb  0x453407
  453395:	outs   dx,DWORD PTR ds:[rsi]
  453396:	jb     0x4533b8
  453398:	movsxd ebp,DWORD PTR [rdi+0x64]
  45339b:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a90e
  4533a2:	add    BYTE PTR [rax],al
  4533a4:	add    BYTE PTR [rax],al
  4533a6:	add    BYTE PTR [rax],al
  4533a8:	movsxd ebp,DWORD PTR [rdi+0x75]
  4533ab:	ins    BYTE PTR es:[rdi],dx
  4533ac:	and    BYTE PTR fs:[rsi+0x6f],ch
  4533b0:	je     0x4533d2
  4533b2:	addr32 gs je 0x4533d6
  4533b6:	rex.B
  4533b7:	rex.XB
  4533b8:	cmp    r12b,BYTE PTR [r8]
  4533bb:	gs jb  0x453430
  4533be:	outs   dx,DWORD PTR ds:[rsi]
  4533bf:	jb     0x4533e1
  4533c1:	movsxd ebp,DWORD PTR [rdi+0x64]
  4533c4:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a937
  4533cb:	add    BYTE PTR [rax],al
  4533cd:	add    BYTE PTR [rax],al
  4533cf:	add    BYTE PTR [rbx+0x6f],ah
  4533d2:	jne    0x453440
  4533d4:	and    BYTE PTR fs:[rsi+0x6f],ch
  4533d8:	je     0x4533fa
  4533da:	(bad)  
  4533db:	fs and BYTE PTR fs:[rcx+0x43],al
  4533e0:	cmp    r12b,BYTE PTR [r8]
  4533e3:	gs jb  0x453458
  4533e6:	outs   dx,DWORD PTR ds:[rsi]
  4533e7:	jb     0x453409
  4533e9:	movsxd ebp,DWORD PTR [rdi+0x64]
  4533ec:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a95f
  4533f3:	add    BYTE PTR [rax],al
  4533f5:	add    BYTE PTR [rax],al
  4533f7:	add    BYTE PTR [rbx+0x6f],ah
  4533fa:	jne    0x453468
  4533fc:	and    BYTE PTR fs:[rsi+0x6f],ch
  453400:	je     0x453422
  453402:	(bad)  
  453403:	fs and BYTE PTR fs:[rcx+0x63],ah
  453408:	movsxd esp,DWORD PTR [rbp+0x73]
  45340b:	jae    0x45342d
  45340d:	(bad)  
  45340e:	ins    BYTE PTR es:[rdi],dx
  45340f:	ins    BYTE PTR es:[rdi],dx
  453410:	outs   dx,DWORD PTR ds:[rsi]
  453411:	ja     0x453478
  453413:	and    BYTE PTR fs:[rcx+0x43],al
  453417:	cmp    r12b,BYTE PTR [r8]
  45341a:	gs jb  0x45348f
  45341d:	outs   dx,DWORD PTR ds:[rsi]
  45341e:	jb     0x453440
  453420:	movsxd ebp,DWORD PTR [rdi+0x64]
  453423:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a996
  45342a:	add    BYTE PTR [rax],al
  45342c:	add    BYTE PTR [rax],al
  45342e:	add    BYTE PTR [rax],al
  453430:	movsxd ebp,DWORD PTR [rdi+0x75]
  453433:	ins    BYTE PTR es:[rdi],dx
  453434:	and    BYTE PTR fs:[rsi+0x6f],ch
  453438:	je     0x45345a
  45343a:	jae    0x4534a1
  45343c:	je     0x45345e
  45343e:	je     0x4534af
  453440:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  453444:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  45344b:	je     0x4534b6
  45344d:	outs   dx,DWORD PTR ds:[rsi]
  45344e:	outs   dx,BYTE PTR ds:[rsi]
  45344f:	cmp    ah,BYTE PTR [rax]
  453451:	gs jb  0x4534c6
  453454:	outs   dx,DWORD PTR ds:[rsi]
  453455:	jb     0x453477
  453457:	movsxd ebp,DWORD PTR [rdi+0x64]
  45345a:	and    BYTE PTR gs:[rip+0x6300756c],ah        # 0x6345a9cd
  453461:	outs   dx,DWORD PTR ds:[rsi]
  453462:	jne    0x4534d0
  453464:	and    BYTE PTR fs:[rsi+0x6f],ch
  453468:	je     0x45348a
  45346a:	addr32 gs je 0x45348e
  45346e:	jne    0x4534e3
  453470:	gs jb  0x453493
  453473:	je     0x4534e4
  453475:	imul   esp,DWORD PTR [rbp+0x6e],0x3a
  453479:	and    BYTE PTR [rbp+0x72],ah
  45347c:	jb     0x4534ed
  45347e:	jb     0x4534a0
  453480:	movsxd ebp,DWORD PTR [rdi+0x64]
  453483:	and    BYTE PTR gs:[rip+0x756c],ah        # 0x45a9f6
  45348a:	add    BYTE PTR [rax],al
  45348c:	add    BYTE PTR [rax],al
  45348e:	add    BYTE PTR [rax],al
  453490:	jbe    0x453505
  453492:	outs   dx,BYTE PTR ds:[rsi]
  453493:	jo     0x453507
  453495:	imul   ebp,DWORD PTR [rsi+0x74],0x61662066
  45349c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  4534a4:	or     al,BYTE PTR [rax]
  4534a6:	outs   dx,DWORD PTR ds:[rsi]
  4534a7:	jne    0x45351d
  4534a9:	and    BYTE PTR [rdi+0x66],ch
  4534ac:	and    BYTE PTR [rbp+0x65],ch
  4534af:	ins    DWORD PTR es:[rdi],dx
  4534b0:	outs   dx,DWORD PTR ds:[rsi]
  4534b1:	jb     0x45352c
  4534b3:	or     al,BYTE PTR [rax]
	...
  4534bd:	add    BYTE PTR [rax],al
  4534bf:	add    BYTE PTR [rbp+0x73],dh
  4534c2:	gs jb  0x4534e5
  4534c5:	outs   dx,BYTE PTR ds:[rsi]
  4534c6:	(bad)  
  4534c7:	ins    DWORD PTR es:[rdi],dx
  4534c8:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],ch
  4534cd:	imul   esi,DWORD PTR [rbp+0x70],0x20
  4534d1:	data16 (bad) 
  4534d3:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65203a65
  4534db:	jb     0x45354f
  4534dd:	outs   dx,DWORD PTR ds:[rsi]
  4534de:	jb     0x453500
  4534e0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4534e3:	and    BYTE PTR gs:[rip+0x2500756c],ah        # 0x2545aa56
  4534ea:	jae    0x453526
  4534ec:	and    BYTE PTR [rip+0xa73],ah        # 0x453f65
	...
  4534fe:	add    BYTE PTR [rax],al
  453500:	movsxd ebp,DWORD PTR [rdi+0x6d]
  453503:	ins    DWORD PTR es:[rdi],dx
  453504:	(bad)  
  453505:	outs   dx,BYTE PTR ds:[rsi]
  453506:	and    BYTE PTR fs:[rsi+0x6f],ch
  45350a:	je     0x45352c
  45350c:	gs js  0x453574
  45350f:	movsxd esi,DWORD PTR [rbp+0x74]
  453512:	(bad)  
  453513:	(bad)  
  453514:	ins    BYTE PTR es:[rdi],dx
  453515:	add    BYTE PTR gs:[rbx+0x6f],ah
  453519:	ins    DWORD PTR es:[rdi],dx
  45351a:	ins    DWORD PTR es:[rdi],dx
  45351b:	(bad)  
  45351c:	outs   dx,BYTE PTR ds:[rsi]
  45351d:	and    BYTE PTR fs:[rsi+0x6f],ch
  453521:	je     0x453543
  453523:	outs   dx,WORD PTR ds:[rsi]
  453525:	jne    0x453595
  453527:	add    BYTE PTR fs:[rax],al
  45352a:	add    BYTE PTR [rax],al
  45352c:	add    BYTE PTR [rax],al
  45352e:	add    BYTE PTR [rax],al
  453530:	movsxd ebp,DWORD PTR [rax+0x69]
  453533:	ins    BYTE PTR es:[rdi],dx
  453534:	and    BYTE PTR fs:[rax+0x72],dh
  453538:	outs   dx,DWORD PTR ds:[rsi]
  453539:	movsxd esp,DWORD PTR [rbp+0x73]
  45353c:	jae    0x45355e
  45353e:	gs js  0x4535aa
  453541:	je     0x4535a8
  453543:	and    BYTE PTR fs:[rdi+0x69],dh
  453547:	je     0x4535b1
  453549:	and    BYTE PTR [rbp+0x78],ah
  45354c:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x2065646f
  453554:	and    eax,0x63000064
  453559:	push   0x20646c69
  45355e:	jo     0x4535d2
  453560:	outs   dx,DWORD PTR ds:[rsi]
  453561:	movsxd esp,DWORD PTR [rbp+0x73]
  453564:	jae    0x453586
  453566:	ja     0x4535c9
  453568:	jae    0x45358a
  45356a:	je     0x4535d1
  45356c:	jb     0x4535db
  45356e:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  453575:	(bad)  
  453576:	jns    0x453598
  453578:	gs js  0x4535de
  45357b:	gs jo  0x4535f2
  45357e:	imul   ebp,DWORD PTR [rdi+0x6e],0x25783020
  453585:	pop    rax
	...
  45358e:	add    BYTE PTR [rax],al
  453590:	outs   dx,DWORD PTR ds:[rsi]
  453591:	jne    0x453607
  453593:	and    BYTE PTR [rdi+0x66],ch
  453596:	and    BYTE PTR [rbp+0x65],ch
  453599:	ins    DWORD PTR es:[rdi],dx
  45359a:	outs   dx,DWORD PTR ds:[rsi]
  45359b:	jb     0x453616
  45359d:	or     al,BYTE PTR [rax]
  45359f:	add    BYTE PTR [rbx+0x61],ah
  4535a2:	outs   dx,BYTE PTR ds:[rsi]
  4535a3:	outs   dx,BYTE PTR ds:[rsi]
  4535a4:	outs   dx,DWORD PTR ds:[rsi]
  4535a5:	je     0x4535c7
  4535a7:	fs jne 0x45361a
  4535aa:	ins    BYTE PTR es:[rdi],dx
  4535ab:	imul   esp,DWORD PTR [rbx+0x61],0x6e206574
  4535b2:	jne    0x453620
  4535b4:	ins    BYTE PTR es:[rdi],dx
  4535b5:	and    BYTE PTR [rax+0x6f],dh
  4535b8:	imul   ebp,DWORD PTR [rsi+0x74],0x28207265
  4535bf:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  4535c6:	ins    BYTE PTR es:[rdi],dx
  4535c7:	and    BYTE PTR [rbp+0x72],ah
  4535ca:	jb     0x45363b
  4535cc:	jb     0x4535f7
  4535ce:	or     al,BYTE PTR [rax]
  4535d0:	add    BYTE PTR [rip+0x0],bh        # 0x4535d6
  4535d6:	add    BYTE PTR [rax],al
  4535d8:	and    eax,0x6f203a73
  4535dd:	jo     0x453653
  4535df:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  4535e6:	jne    0x453651
  4535e8:	jb     0x45364f
  4535ea:	jae    0x45360c
  4535ec:	(bad)  
  4535ed:	outs   dx,BYTE PTR ds:[rsi]
  4535ee:	and    BYTE PTR [rcx+0x72],ah
  4535f1:	addr32 jne 0x453661
  4535f4:	outs   dx,BYTE PTR gs:[rsi]
  4535f6:	je     0x453618
  4535f8:	sub    eax,0x7325202d
  4535fd:	or     al,BYTE PTR [rax]
  4535ff:	and    eax,0x69203a73
  453604:	ins    BYTE PTR es:[rdi],dx
  453605:	ins    BYTE PTR es:[rdi],dx
  453606:	gs addr32 (bad) 
  453609:	ins    BYTE PTR es:[rdi],dx
  45360a:	and    BYTE PTR [rdi+0x70],ch
  45360d:	je     0x453678
  45360f:	outs   dx,DWORD PTR ds:[rsi]
  453610:	outs   dx,BYTE PTR ds:[rsi]
  453611:	and    BYTE PTR [rip+0x7325202d],ch        # 0x736a5644
  453617:	or     al,BYTE PTR [rax]
  453619:	and    eax,0x69203a73
  45361e:	ins    BYTE PTR es:[rdi],dx
  45361f:	ins    BYTE PTR es:[rdi],dx
  453620:	gs addr32 (bad) 
  453623:	ins    BYTE PTR es:[rdi],dx
  453624:	and    BYTE PTR [rdi+0x70],ch
  453627:	je     0x453692
  453629:	outs   dx,DWORD PTR ds:[rsi]
  45362a:	outs   dx,BYTE PTR ds:[rsi]
  45362b:	and    BYTE PTR [rip+0x6325202d],ch        # 0x636a565e
  453631:	or     al,BYTE PTR [rax]
  453633:	add    BYTE PTR [rax],al
  453635:	add    BYTE PTR [rax],al
  453637:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6570b0
  45363d:	jo     0x4536b3
  45363f:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  453646:	jne    0x4536b1
  453648:	jb     0x4536af
  45364a:	jae    0x45366c
  45364c:	(bad)  
  45364d:	outs   dx,BYTE PTR ds:[rsi]
  45364e:	and    BYTE PTR [rcx+0x72],ah
  453651:	addr32 jne 0x4536c1
  453654:	outs   dx,BYTE PTR gs:[rsi]
  453656:	je     0x453678
  453658:	sub    eax,0x6325202d
  45365d:	or     al,BYTE PTR [rax]
  45365f:	add    BYTE PTR [rip+0x3d73],ah        # 0x4573d8
	...
  45367d:	add    BYTE PTR [rax],al
  45367f:	add    BYTE PTR [rsi+0x6f],cl
  453682:	jb     0x4536fb
  453684:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6f422820
  45368d:	imul   ebp,DWORD PTR [rbp+0x0],0x6c
  453691:	sub    DWORD PTR [rdi+0x4e],ebx
  453694:	outs   dx,DWORD PTR ds:[rsi]
  453695:	jb     0x45370e
  453697:	(bad)  
  453698:	jns    0x45369a
  45369a:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45369c:	jb     0x453715
  45369e:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x726f4e5f
  4536a7:	ja     0x45370a
  4536a9:	jns    0x4536ab
	...
  4536bf:	add    BYTE PTR [rax+0x4536],al
  4536c5:	add    BYTE PTR [rax],al
  4536c7:	add    BYTE PTR [rax+0x4536],dl
  4536cd:	add    BYTE PTR [rax],al
  4536cf:	add    BYTE PTR [rdx+0x4536],bl
	...
  4536ed:	add    BYTE PTR [rax],al
  4536ef:	add    BYTE PTR [rax+0x6f],cl
  4536f2:	outs   dx,BYTE PTR ds:[rsi]
  4536f3:	and    BYTE PTR [ebx+0x6f],cl
  4536f7:	outs   dx,BYTE PTR ds:[rsi]
  4536f8:	and    BYTE PTR [ebx+0x2e],dl
  4536fc:	rex.B
  4536fd:	cs push rdx
  4536ff:	add    BYTE PTR cs:[rax+0x4b],cl
  453703:	rex.RXB add BYTE PTR [r13+0x2e],r10b
  453707:	rex.B
  453708:	cs rex.RB
  45370a:	add    BYTE PTR cs:[rcx+0x52],al
  45370e:	add    BYTE PTR [r11+0x68],r8b
  453712:	imul   ebp,DWORD PTR [rsi+0x65],0x28206573
  453719:	push   rsp
  45371a:	jb     0x45377d
  45371c:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x296c616e
  453725:	pop    rdi
  453726:	rex.WRB (bad) 
  453728:	movsxd esp,DWORD PTR [rcx+0x75]
  45372b:	and    BYTE PTR [rbx+0x2e],dl
  45372e:	rex.B
  45372f:	cs push rdx
  453731:	cs cmp DWORD PTR cs:[rip+0x485a0030],esi        # 0x489f3769
  453739:	rex.WRB add BYTE PTR [r11+0x68],r8b
  45373d:	imul   ebp,DWORD PTR [rsi+0x65],0x4d5f6573
  453744:	(bad)  
  453745:	movsxd esp,DWORD PTR [rcx+0x75]
  453748:	and    BYTE PTR [rbx+0x2e],dl
  45374b:	rex.B
  45374c:	cs push rdx
  45374e:	cs cmp DWORD PTR cs:[rip+0x30],esi        # 0x453786
  453756:	add    BYTE PTR [rax],al
  453758:	rex.XB push 0x73656e69
  45375e:	and    BYTE PTR gs:[rax],ch
  453761:	push   rsp
  453762:	jb     0x4537c5
  453764:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x296c616e
  45376d:	pop    rdi
  45376e:	rex.WRB (bad) 
  453770:	movsxd esp,DWORD PTR [rcx+0x6f]
  453773:	and    BYTE PTR [rbx+0x2e],dl
  453776:	rex.B
  453777:	cs push rdx
  453779:	cs cmp DWORD PTR cs:[rip+0x68430030],esi        # 0x688837b1
  453781:	imul   ebp,DWORD PTR [rsi+0x65],0x4d5f6573
  453788:	(bad)  
  453789:	movsxd esp,DWORD PTR [rcx+0x6f]
  45378c:	and    BYTE PTR [rbx+0x2e],dl
  45378f:	rex.B
  453790:	cs push rdx
  453792:	cs cmp DWORD PTR cs:[rip+0x30],esi        # 0x4537ca
	...
  4537be:	add    BYTE PTR [rax],al
  4537c0:	lock add BYTE PTR ss:[r8],r8b
	...
  4537cd:	add    BYTE PTR [rax],al
  4537cf:	add    BYTE PTR [rcx],al
  4537d1:	(bad)  
  4537d2:	add    BYTE PTR [r8],r8b
  4537d5:	add    BYTE PTR [rax],al
  4537d7:	add    BYTE PTR [rip+0x4537],al        # 0x457d14
	...
  4537e5:	add    BYTE PTR [rax],al
  4537e7:	add    BYTE PTR [rdi+rsi*1],cl
  4537ea:	add    BYTE PTR [r8],r8b
  4537ed:	add    BYTE PTR [rax],al
  4537ef:	add    BYTE PTR [rax],dl
  4537f1:	(bad)  
  4537f2:	add    BYTE PTR [r8],r8b
	...
  4537fd:	add    BYTE PTR [rax],al
  4537ff:	add    BYTE PTR [rdi],dh
  453801:	(bad)  
  453802:	add    BYTE PTR [r8],r8b
  453805:	add    BYTE PTR [rax],al
  453807:	add    BYTE PTR [rbx],bh
  453809:	(bad)  
  45380a:	add    BYTE PTR [r8],r8b
	...
  453815:	add    BYTE PTR [rax],al
  453817:	add    BYTE PTR [rdi],dh
  453819:	(bad)  
  45381a:	add    BYTE PTR [r8],r8b
  45381d:	add    BYTE PTR [rax],al
  45381f:	add    BYTE PTR [rax+0x37],bl
  453822:	add    BYTE PTR [r8],r8b
	...
  45382d:	add    BYTE PTR [rax],al
  45382f:	add    BYTE PTR [rdi],dh
  453831:	(bad)  
  453832:	add    BYTE PTR [r8],r8b
  453835:	add    BYTE PTR [rax],al
  453837:	add    BYTE PTR [rdi+0x37],bh
  45383a:	add    BYTE PTR [r8],r8b
	...
  453845:	add    BYTE PTR [rax],al
  453847:	add    BYTE PTR [rdi],dh
  453849:	(bad)  
  45384a:	add    BYTE PTR [r8],r8b
	...
  45387d:	add    BYTE PTR [rax],al
  45387f:	add    BYTE PTR [rax],dh
  453881:	xor    DWORD PTR [rdx],esi
  453883:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  45388a:	(bad)  
  45388b:	(bad)
  453890:	add    BYTE PTR [rax],dh
  453892:	xor    DWORD PTR [rdx],esi
  453894:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  45389b:	rex.B
  45389c:	rex.X
  45389d:	rex.XB
  45389e:	rex.R
  45389f:	rex.RB
  4538a0:	rex.RX add BYTE PTR [rax],r8b
  4538a3:	add    bh,cl
  4538a5:	sbb    eax,0x1cb1fffd
  4538aa:	std    
  4538ab:	push   QWORD PTR [rcx-0x4e0002e4]
  4538b1:	sbb    al,0xfd
  4538b3:	push   QWORD PTR [rcx-0x4e0002e4]
  4538b9:	sbb    al,0xfd
  4538bb:	push   QWORD PTR [rcx-0x4e0002e4]
  4538c1:	sbb    al,0xfd
  4538c3:	push   QWORD PTR [rcx-0x4e0002e4]
  4538c9:	sbb    al,0xfd
  4538cb:	push   QWORD PTR [rcx-0x4e0002e4]
  4538d1:	sbb    al,0xfd
  4538d3:	(bad)  
  4538d4:	mov    edx,0xb1fffd1c
  4538d9:	sbb    al,0xfd
  4538db:	push   QWORD PTR [rcx-0x4e0002e4]
  4538e1:	sbb    al,0xfd
  4538e3:	push   QWORD PTR [rcx-0x450002e4]
  4538e9:	sbb    al,0xfd
  4538eb:	push   QWORD PTR [rcx-0x4e0002e4]
  4538f1:	sbb    al,0xfd
  4538f3:	push   QWORD PTR [rcx-0x4e0002e4]
  4538f9:	sbb    al,0xfd
  4538fb:	push   QWORD PTR [rcx-0x420002e4]
  453901:	sbb    eax,0x1cb1fffd
  453906:	std    
  453907:	push   QWORD PTR [rcx-0x4e0002e4]
  45390d:	sbb    al,0xfd
  45390f:	push   QWORD PTR [rcx-0x4e0002e4]
  453915:	sbb    al,0xfd
  453917:	call   rax
  453919:	sbb    al,0xfd
  45391b:	push   QWORD PTR [rcx-0x4e0002e4]
  453921:	sbb    al,0xfd
  453923:	jmp    FWORD PTR [rbx+0x25fffd1d]
  453929:	jo     0x45392b
  45392b:	and    eax,0x64252e25
  453930:	and    eax,0x25250063
  453935:	and    eax,0x1eb80063
  45393a:	std    
  45393b:	dec    DWORD PTR [rax+0x1f]
  45393e:	std    
  45393f:	dec    DWORD PTR [rax+0x1f]
  453942:	std    
  453943:	jmp    rdi
  453945:	sbb    eax,0x1f48fffd
  45394a:	std    
  45394b:	dec    DWORD PTR [rax+0x1f]
  45394e:	std    
  45394f:	jmp    FWORD PTR [rax+0x1f]
  453952:	std    
  453953:	jmp    rdi
  453955:	sbb    eax,0x1f48fffd
  45395a:	std    
  45395b:	jmp    rdi
  45395d:	sbb    eax,0x1f58fffd
  453962:	std    
  453963:	dec    DWORD PTR [rax+0x1f]
  453966:	std    
  453967:	(bad)  
  453968:	clc    
  453969:	(bad)  
  45396a:	std    
  45396b:	(bad)  
  45396c:	clc    
  45396d:	(bad)  
  45396e:	std    
  45396f:	(bad)  
  453970:	clc    
  453971:	(bad)  
  453972:	std    
  453973:	(bad)  
  453974:	clc    
  453975:	(bad)  
  453976:	std    
  453977:	(bad)  
  453978:	clc    
  453979:	(bad)  
  45397a:	std    
  45397b:	(bad)  
  45397c:	clc    
  45397d:	(bad)  
  45397e:	std    
  45397f:	(bad)  
  453980:	clc    
  453981:	(bad)  
  453982:	std    
  453983:	(bad)  
  453984:	clc    
  453985:	(bad)  
  453986:	std    
  453987:	(bad)  
  453988:	clc    
  453989:	(bad)  
  45398a:	std    
  45398b:	(bad)  
  45398c:	clc    
  45398d:	(bad)  
  45398e:	std    
  45398f:	dec    DWORD PTR [rax+0x1f]
  453992:	std    
  453993:	dec    DWORD PTR [rax+0x1f]
  453996:	std    
  453997:	dec    DWORD PTR [rax+0x1f]
  45399a:	std    
  45399b:	dec    DWORD PTR [rax+0x1f]
  45399e:	std    
  45399f:	dec    DWORD PTR [rax+0x1f]
  4539a2:	std    
  4539a3:	dec    DWORD PTR [rax+0x1f]
  4539a6:	std    
  4539a7:	dec    DWORD PTR [rax+0x1f]
  4539aa:	std    
  4539ab:	dec    DWORD PTR [rax+0x1f]
  4539ae:	std    
  4539af:	dec    DWORD PTR [rax+0x1f]
  4539b2:	std    
  4539b3:	dec    DWORD PTR [rax+0x1f]
  4539b6:	std    
  4539b7:	dec    DWORD PTR [rax+0x1f]
  4539ba:	std    
  4539bb:	call   FWORD PTR [rcx]
  4539bd:	(bad)  
  4539be:	std    
  4539bf:	dec    DWORD PTR [rax+0x1f]
  4539c2:	std    
  4539c3:	call   FWORD PTR [rcx]
  4539c5:	(bad)  
  4539c6:	std    
  4539c7:	dec    DWORD PTR [rax+0x1f]
  4539ca:	std    
  4539cb:	dec    DWORD PTR [rax+0x1f]
  4539ce:	std    
  4539cf:	dec    DWORD PTR [rax+0x1f]
  4539d2:	std    
  4539d3:	dec    DWORD PTR [rax+0x1f]
  4539d6:	std    
  4539d7:	dec    DWORD PTR [rax+0x1f]
  4539da:	std    
  4539db:	dec    DWORD PTR [rax+0x1f]
  4539de:	std    
  4539df:	dec    DWORD PTR [rax+0x1f]
  4539e2:	std    
  4539e3:	dec    DWORD PTR [rax+0x1f]
  4539e6:	std    
  4539e7:	dec    DWORD PTR [rax+0x1f]
  4539ea:	std    
  4539eb:	dec    DWORD PTR [rax+0x1f]
  4539ee:	std    
  4539ef:	dec    DWORD PTR [rax+0x1f]
  4539f2:	std    
  4539f3:	dec    DWORD PTR [rax+0x1f]
  4539f6:	std    
  4539f7:	dec    DWORD PTR [rax+0x1f]
  4539fa:	std    
  4539fb:	dec    DWORD PTR [rax+0x1f]
  4539fe:	std    
  4539ff:	dec    DWORD PTR [rax+0x1f]
  453a02:	std    
  453a03:	dec    DWORD PTR [rax+0x1f]
  453a06:	std    
  453a07:	(bad)  
  453a08:	mov    eax,0x48fffd1f
  453a0d:	(bad)  
  453a0e:	std    
  453a0f:	dec    DWORD PTR [rax+0x1f]
  453a12:	std    
  453a13:	dec    DWORD PTR [rax+0x1f]
  453a16:	std    
  453a17:	dec    DWORD PTR [rax+0x1f]
  453a1a:	std    
  453a1b:	dec    DWORD PTR [rax+0x1f]
  453a1e:	std    
  453a1f:	dec    DWORD PTR [rax+0x1f]
  453a22:	std    
  453a23:	dec    DWORD PTR [rax+0x1f]
  453a26:	std    
  453a27:	dec    DWORD PTR [rax+0x1f]
  453a2a:	std    
  453a2b:	dec    DWORD PTR [rax+0x1f]
  453a2e:	std    
  453a2f:	dec    DWORD PTR [rax+0x1f]
  453a32:	std    
  453a33:	dec    DWORD PTR [rax-0x470002e1]
  453a39:	(bad)  
  453a3a:	std    
  453a3b:	call   FWORD PTR [rcx]
  453a3d:	(bad)  
  453a3e:	std    
  453a3f:	call   FWORD PTR [rcx]
  453a41:	(bad)  
  453a42:	std    
  453a43:	call   FWORD PTR [rcx]
  453a45:	(bad)  
  453a46:	std    
  453a47:	jmp    rdi
  453a49:	sbb    eax,0x1fb8fffd
  453a4e:	std    
  453a4f:	dec    DWORD PTR [rax+0x1f]
  453a52:	std    
  453a53:	dec    DWORD PTR [rax+0x1f]
  453a56:	std    
  453a57:	dec    DWORD PTR [rax]
  453a59:	(bad)  
  453a5a:	std    
  453a5b:	dec    DWORD PTR [rax+0x1f]
  453a5e:	std    
  453a5f:	dec    DWORD PTR [rax+0x1f]
  453a62:	std    
  453a63:	(bad)  
  453a64:	mov    eax,0x78fffd1f
  453a69:	(bad)  
  453a6a:	std    
  453a6b:	dec    DWORD PTR [rax+0x1f]
  453a6e:	std    
  453a6f:	dec    DWORD PTR [rax+0x1f]
  453a72:	std    
  453a73:	(bad)  
  453a74:	js     0x453a94
  453a76:	std    
  453a77:	dec    DWORD PTR [rax+0x1f]
  453a7a:	std    
  453a7b:	(bad)  
  453a7c:	mov    eax,0x48fffd1f
  453a81:	(bad)  
  453a82:	std    
  453a83:	dec    DWORD PTR [rax+0x1f]
  453a86:	std    
  453a87:	(bad)  
  453a88:	mov    eax,0x48fffd1f
  453a8d:	(bad)  
  453a8e:	std    
  453a8f:	dec    DWORD PTR [rip+0xffffffffacfffd1e]        # 0xffffffffad4537b3
  453a95:	(bad)  
  453a96:	std    
  453a97:	(bad)  
  453a98:	mov    esp,0xbcfffd1e
  453a9d:	(bad)  
  453a9e:	std    
  453a9f:	call   FWORD PTR [rdi+rbx*1+0x1fdefffd]
  453aa6:	std    
  453aa7:	call   FWORD PTR [rdi+rbx*1+0x242dfffd]
  453aae:	std    
  453aaf:	call   FWORD PTR [rax]
  453ab1:	and    al,0xfd
  453ab3:	(bad)  
  453ab4:	sti    
  453ab5:	and    ebp,edi
  453ab7:	call   QWORD PTR [rcx+0x1f]
  453aba:	std    
  453abb:	(bad)  
  453abc:	sti    
  453abd:	and    ebp,edi
  453abf:	(bad)  
  453ac0:	sti    
  453ac1:	and    ebp,edi
  453ac3:	jmp    QWORD PTR [rbx+0x24]
  453ac6:	std    
  453ac7:	jmp    rdi
  453ac9:	and    edi,ebp
  453acb:	(bad)  
  453acc:	sti    
  453acd:	and    ebp,edi
  453acf:	dec    DWORD PTR [rsi]
  453ad1:	and    al,0xfd
  453ad3:	push   rsp
  453ad5:	and    edi,ebp
  453ad7:	(bad)  
  453ad8:	sti    
  453ad9:	and    ebp,edi
  453adb:	dec    DWORD PTR [rdx]
  453add:	and    ch,bh
  453adf:	call   FWORD PTR [rcx]
  453ae1:	and    ch,bh
  453ae3:	call   FWORD PTR [rcx]
  453ae5:	and    ch,bh
  453ae7:	call   FWORD PTR [rcx]
  453ae9:	and    ch,bh
  453aeb:	call   FWORD PTR [rcx]
  453aed:	and    ch,bh
  453aef:	call   FWORD PTR [rcx]
  453af1:	and    ch,bh
  453af3:	call   FWORD PTR [rcx]
  453af5:	and    ch,bh
  453af7:	call   FWORD PTR [rcx]
  453af9:	and    ch,bh
  453afb:	call   FWORD PTR [rcx]
  453afd:	and    ch,bh
  453aff:	call   FWORD PTR [rcx]
  453b01:	and    ch,bh
  453b03:	(bad)  
  453b04:	sti    
  453b05:	and    ebp,edi
  453b07:	(bad)  
  453b08:	sti    
  453b09:	and    ebp,edi
  453b0b:	(bad)  
  453b0c:	sti    
  453b0d:	and    ebp,edi
  453b0f:	(bad)  
  453b10:	sti    
  453b11:	and    ebp,edi
  453b13:	(bad)  
  453b14:	sti    
  453b15:	and    ebp,edi
  453b17:	(bad)  
  453b18:	sti    
  453b19:	and    ebp,edi
  453b1b:	(bad)  
  453b1c:	sti    
  453b1d:	and    ebp,edi
  453b1f:	(bad)  
  453b20:	sti    
  453b21:	and    ebp,edi
  453b23:	(bad)  
  453b24:	sti    
  453b25:	and    ebp,edi
  453b27:	(bad)  
  453b28:	sti    
  453b29:	and    ebp,edi
  453b2b:	(bad)  
  453b2c:	sti    
  453b2d:	and    ebp,edi
  453b2f:	push   QWORD PTR [rcx]
  453b31:	and    ch,bh
  453b33:	(bad)  
  453b34:	sti    
  453b35:	and    ebp,edi
  453b37:	push   QWORD PTR [rcx]
  453b39:	and    ch,bh
  453b3b:	(bad)  
  453b3c:	sti    
  453b3d:	and    ebp,edi
  453b3f:	(bad)  
  453b40:	sti    
  453b41:	and    ebp,edi
  453b43:	(bad)  
  453b44:	sti    
  453b45:	and    ebp,edi
  453b47:	(bad)  
  453b48:	sti    
  453b49:	and    ebp,edi
  453b4b:	(bad)  
  453b4c:	sti    
  453b4d:	and    ebp,edi
  453b4f:	(bad)  
  453b50:	sti    
  453b51:	and    ebp,edi
  453b53:	(bad)  
  453b54:	sti    
  453b55:	and    ebp,edi
  453b57:	(bad)  
  453b58:	sti    
  453b59:	and    ebp,edi
  453b5b:	(bad)  
  453b5c:	sti    
  453b5d:	and    ebp,edi
  453b5f:	(bad)  
  453b60:	sti    
  453b61:	and    ebp,edi
  453b63:	(bad)  
  453b64:	sti    
  453b65:	and    ebp,edi
  453b67:	(bad)  
  453b68:	sti    
  453b69:	and    ebp,edi
  453b6b:	(bad)  
  453b6c:	sti    
  453b6d:	and    ebp,edi
  453b6f:	(bad)  
  453b70:	sti    
  453b71:	and    ebp,edi
  453b73:	(bad)  
  453b74:	sti    
  453b75:	and    ebp,edi
  453b77:	(bad)  
  453b78:	sti    
  453b79:	and    ebp,edi
  453b7b:	call   FWORD PTR [rdx+0x23]
  453b7e:	std    
  453b7f:	(bad)  
  453b80:	sti    
  453b81:	and    ebp,edi
  453b83:	(bad)  
  453b84:	sti    
  453b85:	and    ebp,edi
  453b87:	(bad)  
  453b88:	sti    
  453b89:	and    ebp,edi
  453b8b:	(bad)  
  453b8c:	sti    
  453b8d:	and    ebp,edi
  453b8f:	(bad)  
  453b90:	sti    
  453b91:	and    ebp,edi
  453b93:	(bad)  
  453b94:	sti    
  453b95:	and    ebp,edi
  453b97:	(bad)  
  453b98:	sti    
  453b99:	and    ebp,edi
  453b9b:	(bad)  
  453b9c:	sti    
  453b9d:	and    ebp,edi
  453b9f:	(bad)  
  453ba0:	sti    
  453ba1:	and    ebp,edi
  453ba3:	(bad)  
  453ba4:	sti    
  453ba5:	and    ebp,edi
  453ba7:	push   rsp
  453ba9:	and    bh,ch
  453bab:	(bad)  
  453bac:	mov    eax,0x31fffd23
  453bb1:	and    ch,bh
  453bb3:	push   QWORD PTR [rcx]
  453bb5:	and    ch,bh
  453bb7:	push   QWORD PTR [rcx]
  453bb9:	and    ch,bh
  453bbb:	call   QWORD PTR [rcx+0x1f]
  453bbe:	std    
  453bbf:	(bad)  
  453bc0:	mov    eax,0xfbfffd23
  453bc5:	and    ebp,edi
  453bc7:	(bad)  
  453bc8:	sti    
  453bc9:	and    ebp,edi
  453bcb:	(bad)  
  453bcc:	(bad)  [rdx]
  453bce:	std    
  453bcf:	(bad)  
  453bd0:	sti    
  453bd1:	and    ebp,edi
  453bd3:	(bad)  
  453bd4:	sti    
  453bd5:	and    ebp,edi
  453bd7:	call   FWORD PTR [rdx+0x23]
  453bda:	std    
  453bdb:	call   FWORD PTR [rcx-0x40002de]
  453be1:	and    ebp,edi
  453be3:	(bad)  
  453be4:	sti    
  453be5:	and    ebp,edi
  453be7:	jmp    QWORD PTR [rip+0xfffffffffbfffd22]        # 0xfffffffffc45390f
  453bed:	and    ebp,edi
  453bef:	call   FWORD PTR [rdx+0x23]
  453bf2:	std    
  453bf3:	(bad)  
  453bf4:	sti    
  453bf5:	and    ebp,edi
  453bf7:	(bad)  
  453bf8:	sti    
  453bf9:	and    ebp,edi
  453bfb:	call   FWORD PTR [rdx+0x23]
  453bfe:	std    
  453bff:	(bad)  
  453c00:	sti    
  453c01:	and    ebp,edi
  453c03:	jmp    QWORD PTR [rdi]
  453c05:	and    ch,bh
  453c07:	inc    DWORD PTR [rax]
	...
  453c15:	add    BYTE PTR [rax],al
  453c17:	add    BYTE PTR [rax],0x0
  453c1a:	add    BYTE PTR [rax],al
  453c1c:	add    BYTE PTR [rax],al
  453c1e:	add    BYTE PTR [rax],al
  453c20:	pop    rsp
  453c21:	(bad)  
  453c22:	(bad)  
  453c23:	pop    rsp
  453c24:	add    BYTE PTR [rdi+rdi*1+0x3f],bl
  453c28:	pop    rsp
  453c29:	and    eax,0x73
  453c2e:	add    BYTE PTR [rax],al
  453c30:	movsxd ebp,DWORD PTR [rdi+0x75]
  453c33:	ins    BYTE PTR es:[rdi],dx
  453c34:	and    BYTE PTR fs:[rsi+0x6f],ch
  453c38:	je     0x453c5a
  453c3a:	jae    0x453ca1
  453c3c:	je     0x453c5e
  453c3e:	push   0x75
  453c40:	outs   dx,BYTE PTR ds:[rsi]
  453c41:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  453c45:	outs   dx,BYTE PTR ds:[rsi]
  453c46:	and    BYTE PTR [rsi+0x6f],ah
  453c49:	jb     0x453c6b
  453c4b:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207f5ec4
  453c51:	and    eax,0xa73
  453c56:	add    BYTE PTR [rax],al
  453c58:	movsxd ebp,DWORD PTR [rdi+0x75]
  453c5b:	ins    BYTE PTR es:[rdi],dx
  453c5c:	and    BYTE PTR fs:[rsi+0x6f],ch
  453c60:	je     0x453c82
  453c62:	addr32 gs je 0x453c86
  453c66:	push   0x75
  453c68:	outs   dx,BYTE PTR ds:[rsi]
  453c69:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  453c6d:	outs   dx,BYTE PTR ds:[rsi]
  453c6e:	and    BYTE PTR [rsi+0x6f],ah
  453c71:	jb     0x453c93
  453c73:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207f5eec
  453c79:	and    eax,0xa73
  453c7e:	add    BYTE PTR [rax],al
  453c80:	(bad)  
  453c81:	add    BYTE PTR [rax],al
  453c83:	and    eax,0x732573
  453c88:	(bad)  
  453c89:	add    BYTE PTR cs:[rsi],ch
  453c8c:	add    BYTE PTR [rdi],ch
  453c8e:	cs add BYTE PTR cs:[rsi],ch
  453c92:	add    BYTE PTR cs:[rax],al
  453c95:	add    BYTE PTR [rax],al
  453c97:	add    BYTE PTR [rdi],ch
  453c99:	jae    0x453cfe
  453c9b:	jb     0x453cfe
  453c9d:	je     0x453d02
  453c9f:	push   0x65776a2f
  453ca4:	(bad)  
  453ca5:	ins    DWORD PTR es:[rdi],dx
  453ca6:	js     0x453d0d
  453ca8:	sub    eax,0x6174636f
  453cad:	jbe    0x453d14
  453caf:	(bad)  
  453cb0:	xor    al,0x2e
  453cb2:	xor    ch,BYTE PTR [rsi]
  453cb4:	xor    DWORD PTR [rdi],ebp
  453cb6:	ja     0x453cee
  453cb8:	xor    al,0x2d
  453cba:	xor    esi,DWORD PTR [rdx]
  453cbc:	(bad)  
  453cbd:	jne    0x453d32
  453cbf:	jb     0x453cf0
  453cc1:	js     0x453cfb
  453cc3:	ss pop rdi
  453cc5:	ss xor al,0x2d
  453cc8:	ja     0x453d00
  453cca:	xor    al,0x2d
  453ccc:	ins    DWORD PTR es:[rdi],dx
  453ccd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453cd4:	(bad)  
  453cd5:	imul   ebp,DWORD PTR [rsi+0x0],0x2f2e2e
  453cdc:	(bad)  
  453cdd:	cs cs (bad) 
  453ce0:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f657759
  453ce6:	jne    0x453d5c
  453ce8:	and    BYTE PTR [rdi+0x66],ch
  453ceb:	and    BYTE PTR [rbp+0x65],ch
  453cee:	ins    DWORD PTR es:[rdi],dx
  453cef:	outs   dx,DWORD PTR ds:[rsi]
  453cf0:	jb     0x453d6b
  453cf2:	or     al,BYTE PTR [rax]
  453cf4:	cs gs js 0x453d5d
  453cf8:	add    BYTE PTR [rdi+0x75],ch
  453cfb:	je     0x453d1d
  453cfd:	outs   dx,DWORD PTR ds:[rsi]
  453cfe:	data16 and BYTE PTR [rbp+0x65],ch
  453d02:	ins    DWORD PTR es:[rdi],dx
  453d03:	outs   dx,DWORD PTR ds:[rsi]
  453d04:	jb     0x453d7f
  453d06:	or     al,BYTE PTR [rax]
  453d08:	movsxd ebp,DWORD PTR [rdi+0x75]
  453d0b:	ins    BYTE PTR es:[rdi],dx
  453d0c:	and    BYTE PTR fs:[rsi+0x6f],ch
  453d10:	je     0x453d32
  453d12:	addr32 gs je 0x453d36
  453d16:	movsxd esi,DWORD PTR [rbp+0x72]
  453d19:	jb     0x453d80
  453d1b:	outs   dx,BYTE PTR ds:[rsi]
  453d1c:	je     0x453d3e
  453d1e:	ja     0x453d8f
  453d20:	jb     0x453d8d
  453d22:	imul   ebp,DWORD PTR [rsi+0x67],0x72696420
  453d29:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  453d2e:	jns    0x453d6a
  453d30:	and    BYTE PTR [rip+0x25000a73],ah        # 0x254547a9
  453d36:	jae    0x453d67
  453d38:	and    eax,0x73
  453d3d:	add    BYTE PTR [rax],al
  453d3f:	add    BYTE PTR [rdi],ch
  453d41:	jae    0x453da6
  453d43:	jb     0x453da6
  453d45:	je     0x453daa
  453d47:	push   0x65776a2f
  453d4c:	(bad)  
  453d4d:	ins    DWORD PTR es:[rdi],dx
  453d4e:	js     0x453db5
  453d50:	sub    eax,0x6174636f
  453d55:	jbe    0x453dbc
  453d57:	(bad)  
  453d58:	xor    al,0x2e
  453d5a:	xor    ch,BYTE PTR [rsi]
  453d5c:	xor    DWORD PTR [rdi],ebp
  453d5e:	ja     0x453d96
  453d60:	xor    al,0x2d
  453d62:	xor    esi,DWORD PTR [rdx]
  453d64:	(bad)  
  453d65:	jne    0x453dda
  453d67:	jb     0x453d98
  453d69:	js     0x453da3
  453d6b:	ss pop rdi
  453d6d:	ss xor al,0x2d
  453d70:	ja     0x453da8
  453d72:	xor    al,0x2d
  453d74:	ins    DWORD PTR es:[rdi],dx
  453d75:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453d7c:	jae    0x453de6
  453d7e:	(bad)  
  453d7f:	jb     0x453de6
  453d81:	(bad)  
  453d82:	jo     0x453df3
  453d84:	jae    0x453dfa
  453d86:	addr32 jb 0x453dee
  453d89:	jae    0x453dfc
  453d8b:	ins    BYTE PTR es:[rdi],dx
  453d8c:	add    BYTE PTR [rax],al
  453d8e:	add    BYTE PTR [rax],al
  453d90:	(bad)  
  453d91:	jae    0x453df6
  453d93:	jb     0x453df6
  453d95:	je     0x453dfa
  453d97:	push   0x65776a2f
  453d9c:	(bad)  
  453d9d:	ins    DWORD PTR es:[rdi],dx
  453d9e:	js     0x453e05
  453da0:	sub    eax,0x6174636f
  453da5:	jbe    0x453e0c
  453da7:	(bad)  
  453da8:	xor    al,0x2e
  453daa:	xor    ch,BYTE PTR [rsi]
  453dac:	xor    DWORD PTR [rdi],ebp
  453dae:	ja     0x453de6
  453db0:	xor    al,0x2d
  453db2:	xor    esi,DWORD PTR [rdx]
  453db4:	(bad)  
  453db5:	jne    0x453e2a
  453db7:	jb     0x453de8
  453db9:	js     0x453df3
  453dbb:	ss pop rdi
  453dbd:	ss xor al,0x2d
  453dc0:	ja     0x453df8
  453dc2:	xor    al,0x2d
  453dc4:	ins    DWORD PTR es:[rdi],dx
  453dc5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453dcc:	gs je  0x453e32
  453dcf:	(bad)  
  453dd0:	jo     0x453e41
  453dd2:	jae    0x453e48
  453dd4:	addr32 jb 0x453e3c
  453dd7:	jae    0x453e4a
  453dd9:	ins    BYTE PTR es:[rdi],dx
  453dda:	add    BYTE PTR [rax],al
  453ddc:	add    BYTE PTR [rax],al
  453dde:	add    BYTE PTR [rax],al
  453de0:	(bad)  
  453de1:	jae    0x453e46
  453de3:	jb     0x453e46
  453de5:	je     0x453e4a
  453de7:	push   0x65776a2f
  453dec:	(bad)  
  453ded:	ins    DWORD PTR es:[rdi],dx
  453dee:	js     0x453e55
  453df0:	sub    eax,0x6174636f
  453df5:	jbe    0x453e5c
  453df7:	(bad)  
  453df8:	xor    al,0x2e
  453dfa:	xor    ch,BYTE PTR [rsi]
  453dfc:	xor    DWORD PTR [rdi],ebp
  453dfe:	ja     0x453e36
  453e00:	xor    al,0x2d
  453e02:	xor    esi,DWORD PTR [rdx]
  453e04:	(bad)  
  453e05:	jne    0x453e7a
  453e07:	jb     0x453e38
  453e09:	js     0x453e43
  453e0b:	ss pop rdi
  453e0d:	ss xor al,0x2d
  453e10:	ja     0x453e48
  453e12:	xor    al,0x2d
  453e14:	ins    DWORD PTR es:[rdi],dx
  453e15:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453e1c:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  453e23:	add    BYTE PTR [rax],al
  453e25:	add    BYTE PTR [rax],al
  453e27:	add    BYTE PTR [rdi],ch
  453e29:	jae    0x453e8e
  453e2b:	jb     0x453e8e
  453e2d:	je     0x453e92
  453e2f:	push   0x65776a2f
  453e34:	(bad)  
  453e35:	ins    DWORD PTR es:[rdi],dx
  453e36:	js     0x453e9d
  453e38:	sub    eax,0x6174636f
  453e3d:	jbe    0x453ea4
  453e3f:	(bad)  
  453e40:	xor    al,0x2e
  453e42:	xor    ch,BYTE PTR [rsi]
  453e44:	xor    DWORD PTR [rdi],ebp
  453e46:	ja     0x453e7e
  453e48:	xor    al,0x2d
  453e4a:	xor    esi,DWORD PTR [rdx]
  453e4c:	(bad)  
  453e4d:	jne    0x453ec2
  453e4f:	jb     0x453e80
  453e51:	js     0x453e8b
  453e53:	ss pop rdi
  453e55:	ss xor al,0x2d
  453e58:	ja     0x453e90
  453e5a:	xor    al,0x2d
  453e5c:	ins    DWORD PTR es:[rdi],dx
  453e5d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453e64:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  453e6b:	(bad)  
  453e6c:	jo     0x453edd
  453e6e:	jae    0x453ee4
  453e70:	addr32 jb 0x453ed8
  453e73:	jae    0x453ee6
  453e75:	ins    BYTE PTR es:[rdi],dx
  453e76:	add    BYTE PTR [rax],al
  453e78:	(bad)  
  453e79:	jae    0x453ede
  453e7b:	jb     0x453ede
  453e7d:	je     0x453ee2
  453e7f:	push   0x65776a2f
  453e84:	(bad)  
  453e85:	ins    DWORD PTR es:[rdi],dx
  453e86:	js     0x453eed
  453e88:	sub    eax,0x6174636f
  453e8d:	jbe    0x453ef4
  453e8f:	(bad)  
  453e90:	xor    al,0x2e
  453e92:	xor    ch,BYTE PTR [rsi]
  453e94:	xor    DWORD PTR [rdi],ebp
  453e96:	ja     0x453ece
  453e98:	xor    al,0x2d
  453e9a:	xor    esi,DWORD PTR [rdx]
  453e9c:	(bad)  
  453e9d:	jne    0x453f12
  453e9f:	jb     0x453ed0
  453ea1:	js     0x453edb
  453ea3:	ss pop rdi
  453ea5:	ss xor al,0x2d
  453ea8:	ja     0x453ee0
  453eaa:	xor    al,0x2d
  453eac:	ins    DWORD PTR es:[rdi],dx
  453ead:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453eb4:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  453ebb:	(bad)  
  453ebc:	jo     0x453f2d
  453ebe:	jae    0x453f34
  453ec0:	addr32 jb 0x453f28
  453ec3:	jae    0x453f36
  453ec5:	ins    BYTE PTR es:[rdi],dx
  453ec6:	(bad)  
  453ec7:	jae    0x453f2e
  453ec9:	jb     0x453f41
  453ecb:	gs jb  0x453ece
  453ece:	add    BYTE PTR [rax],al
  453ed0:	(bad)  
  453ed1:	jae    0x453f36
  453ed3:	jb     0x453f36
  453ed5:	je     0x453f3a
  453ed7:	push   0x65776a2f
  453edc:	(bad)  
  453edd:	ins    DWORD PTR es:[rdi],dx
  453ede:	js     0x453f45
  453ee0:	sub    eax,0x6174636f
  453ee5:	jbe    0x453f4c
  453ee7:	(bad)  
  453ee8:	xor    al,0x2e
  453eea:	xor    ch,BYTE PTR [rsi]
  453eec:	xor    DWORD PTR [rdi],ebp
  453eee:	ja     0x453f26
  453ef0:	xor    al,0x2d
  453ef2:	xor    esi,DWORD PTR [rdx]
  453ef4:	(bad)  
  453ef5:	jne    0x453f6a
  453ef7:	jb     0x453f28
  453ef9:	js     0x453f33
  453efb:	ss pop rdi
  453efd:	ss xor al,0x2d
  453f00:	ja     0x453f38
  453f02:	xor    al,0x2d
  453f04:	ins    DWORD PTR es:[rdi],dx
  453f05:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453f0c:	ins    BYTE PTR es:[rdi],dx
  453f0d:	imul   esp,DWORD PTR [rdx+0x0],0x7263732f
  453f14:	(bad)  
  453f15:	je     0x453f7a
  453f17:	push   0x65776a2f
  453f1c:	(bad)  
  453f1d:	ins    DWORD PTR es:[rdi],dx
  453f1e:	js     0x453f85
  453f20:	sub    eax,0x6174636f
  453f25:	jbe    0x453f8c
  453f27:	(bad)  
  453f28:	xor    al,0x2e
  453f2a:	xor    ch,BYTE PTR [rsi]
  453f2c:	xor    DWORD PTR [rdi],ebp
  453f2e:	ja     0x453f66
  453f30:	xor    al,0x2d
  453f32:	xor    esi,DWORD PTR [rdx]
  453f34:	(bad)  
  453f35:	jne    0x453faa
  453f37:	jb     0x453f68
  453f39:	js     0x453f73
  453f3b:	ss pop rdi
  453f3d:	ss xor al,0x2d
  453f40:	ja     0x453f78
  453f42:	xor    al,0x2d
  453f44:	ins    DWORD PTR es:[rdi],dx
  453f45:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453f4c:	ins    BYTE PTR es:[rdi],dx
  453f4d:	imul   esp,DWORD PTR [rdx+0x2f],0x74736f70
  453f54:	addr32 jb 0x453fbc
  453f57:	jae    0x453fca
  453f59:	ins    BYTE PTR es:[rdi],dx
  453f5a:	add    BYTE PTR [rax],al
  453f5c:	add    BYTE PTR [rax],al
  453f5e:	add    BYTE PTR [rax],al
  453f60:	(bad)  
  453f61:	jae    0x453fc6
  453f63:	jb     0x453fc6
  453f65:	je     0x453fca
  453f67:	push   0x65776a2f
  453f6c:	(bad)  
  453f6d:	ins    DWORD PTR es:[rdi],dx
  453f6e:	js     0x453fd5
  453f70:	sub    eax,0x6174636f
  453f75:	jbe    0x453fdc
  453f77:	(bad)  
  453f78:	xor    al,0x2e
  453f7a:	xor    ch,BYTE PTR [rsi]
  453f7c:	xor    DWORD PTR [rdi],ebp
  453f7e:	ja     0x453fb6
  453f80:	xor    al,0x2d
  453f82:	xor    esi,DWORD PTR [rdx]
  453f84:	(bad)  
  453f85:	jne    0x453ffa
  453f87:	jb     0x453fb8
  453f89:	js     0x453fc3
  453f8b:	ss pop rdi
  453f8d:	ss xor al,0x2d
  453f90:	ja     0x453fc8
  453f92:	xor    al,0x2d
  453f94:	ins    DWORD PTR es:[rdi],dx
  453f95:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453f9c:	jae    0x454006
  453f9e:	(bad)  
  453f9f:	jb     0x454006
  453fa1:	(bad)  
  453fa2:	ins    BYTE PTR es:[rdi],dx
  453fa3:	outs   dx,DWORD PTR ds:[rsi]
  453fa4:	movsxd esp,DWORD PTR [rcx+0x6c]
  453fa7:	add    BYTE PTR gs:[rax],al
  453faa:	add    BYTE PTR [rax],al
  453fac:	add    BYTE PTR [rax],al
  453fae:	add    BYTE PTR [rax],al
  453fb0:	(bad)  
  453fb1:	jae    0x454016
  453fb3:	jb     0x454016
  453fb5:	je     0x45401a
  453fb7:	push   0x65776a2f
  453fbc:	(bad)  
  453fbd:	ins    DWORD PTR es:[rdi],dx
  453fbe:	js     0x454025
  453fc0:	sub    eax,0x6174636f
  453fc5:	jbe    0x45402c
  453fc7:	(bad)  
  453fc8:	xor    al,0x2e
  453fca:	xor    ch,BYTE PTR [rsi]
  453fcc:	xor    DWORD PTR [rdi],ebp
  453fce:	ja     0x454006
  453fd0:	xor    al,0x2d
  453fd2:	xor    esi,DWORD PTR [rdx]
  453fd4:	(bad)  
  453fd5:	jne    0x45404a
  453fd7:	jb     0x454008
  453fd9:	js     0x454013
  453fdb:	ss pop rdi
  453fdd:	ss xor al,0x2d
  453fe0:	ja     0x454018
  453fe2:	xor    al,0x2d
  453fe4:	ins    DWORD PTR es:[rdi],dx
  453fe5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  453fec:	jae    0x454056
  453fee:	(bad)  
  453fef:	jb     0x454056
  453ff1:	(bad)  
  453ff2:	outs   dx,DWORD PTR fs:[rsi]
  453ff4:	movsxd ebp,DWORD PTR [rdi]
  453ff6:	(bad)  
  453ff7:	jo     0x454068
  453ff9:	jae    0x45406f
  453ffb:	addr32 jb 0x454063
  453ffe:	jae    0x454071
  454000:	ins    BYTE PTR es:[rdi],dx
  454001:	add    BYTE PTR [rax],al
  454003:	add    BYTE PTR [rax],al
  454005:	add    BYTE PTR [rax],al
  454007:	add    BYTE PTR [rdi],ch
  454009:	jae    0x45406e
  45400b:	jb     0x45406e
  45400d:	je     0x454072
  45400f:	push   0x65776a2f
  454014:	(bad)  
  454015:	ins    DWORD PTR es:[rdi],dx
  454016:	js     0x45407d
  454018:	sub    eax,0x6174636f
  45401d:	jbe    0x454084
  45401f:	(bad)  
  454020:	xor    al,0x2e
  454022:	xor    ch,BYTE PTR [rsi]
  454024:	xor    DWORD PTR [rdi],ebp
  454026:	ja     0x45405e
  454028:	xor    al,0x2d
  45402a:	xor    esi,DWORD PTR [rdx]
  45402c:	(bad)  
  45402d:	jne    0x4540a2
  45402f:	jb     0x454060
  454031:	js     0x45406b
  454033:	ss pop rdi
  454035:	ss xor al,0x2d
  454038:	ja     0x454070
  45403a:	xor    al,0x2d
  45403c:	ins    DWORD PTR es:[rdi],dx
  45403d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  454044:	jae    0x4540ae
  454046:	(bad)  
  454047:	jb     0x4540ae
  454049:	(bad)  
  45404a:	ins    DWORD PTR es:[rdi],dx
  45404b:	(bad)  
  45404c:	outs   dx,BYTE PTR ds:[rsi]
  45404d:	add    BYTE PTR [rcx+0x50],al
  454050:	push   rax
  454051:	rex.R
  454052:	push   r12
  454054:	add    BYTE PTR [rip+0x6f702f73],spl        # 0x6fb56fce
  45405b:	jae    0x4540d1
  45405d:	addr32 jb 0x4540c5
  454060:	jae    0x4540d3
  454062:	ins    BYTE PTR es:[rdi],dx
	...
  45406f:	add    BYTE PTR [rdx+0x0],dh
  454072:	rex.XB
  454073:	rex.WRXB
  454074:	rex.WRX
  454075:	rex.WB
  454076:	rex.WRX and al,0x0
  454079:	ja     0x4540a6
  45407b:	add    BYTE PTR [rbx+0x4f],al
  45407e:	rex.WRX
  45407f:	rex.WRXB push r13
  454081:	push   rsp
  454082:	and    al,0x0
  454084:	rex.WRXB push r11
  454086:	push   rsp
  454087:	pop    rcx
  454088:	push   rax
  454089:	add    BYTE PTR [r13+0x73],r13b
  45408d:	jns    0x454102
	...
  4540bf:	add    BYTE PTR [rbp+0x6e],dh
  4540c2:	jb     0x454129
  4540c4:	movsxd ebp,DWORD PTR [rdi+0x67]
  4540c7:	outs   dx,BYTE PTR ds:[rsi]
  4540c8:	imul   edi,DWORD PTR [rdx+0x65],0x69772064
  4540cf:	outs   dx,BYTE PTR ds:[rsi]
  4540d0:	xor    esi,DWORD PTR [rdx]
  4540d2:	and    BYTE PTR [rbp+0x72],ah
  4540d5:	jb     0x454146
  4540d7:	jb     0x4540f9
  4540d9:	movsxd ebp,DWORD PTR [rdi+0x64]
  4540dc:	cmp    ah,BYTE PTR gs:[rax]
  4540df:	and    eax,0x756c
	...
  454100:	add    DWORD PTR [rax],eax
  454102:	add    BYTE PTR [rax],al
  454104:	(bad)  
  454105:	add    BYTE PTR [rax],al
  454107:	add    BYTE PTR [rdx],al
  454109:	add    BYTE PTR [rax],al
  45410b:	add    BYTE PTR [rdx],al
  45410d:	add    BYTE PTR [rax],al
  45410f:	add    BYTE PTR [rbx],al
  454111:	add    BYTE PTR [rax],al
  454113:	add    BYTE PTR [rdx],al
  454115:	add    BYTE PTR [rax],al
  454117:	add    BYTE PTR [rax+rax*1],al
  45411a:	add    BYTE PTR [rax],al
  45411c:	sbb    BYTE PTR [rax],al
  45411e:	add    BYTE PTR [rax],al
  454120:	add    eax,0xd000000
  454125:	add    BYTE PTR [rax],al
  454127:	add    BYTE PTR [rsi],al
  454129:	add    BYTE PTR [rax],al
  45412b:	add    BYTE PTR [rcx],cl
  45412d:	add    BYTE PTR [rax],al
  45412f:	add    BYTE PTR [rdi],al
  454131:	add    BYTE PTR [rax],al
  454133:	add    BYTE PTR [rax+rax*1],cl
  454136:	add    BYTE PTR [rax],al
  454138:	or     BYTE PTR [rax],al
  45413a:	add    BYTE PTR [rax],al
  45413c:	or     al,0x0
  45413e:	add    BYTE PTR [rax],al
  454140:	or     DWORD PTR [rax],eax
  454142:	add    BYTE PTR [rax],al
  454144:	or     al,0x0
  454146:	add    BYTE PTR [rax],al
  454148:	or     al,BYTE PTR [rax]
  45414a:	add    BYTE PTR [rax],al
  45414c:	(bad)  
  45414d:	add    BYTE PTR [rax],al
  45414f:	add    BYTE PTR [rbx],cl
  454151:	add    BYTE PTR [rax],al
  454153:	add    BYTE PTR [rax],cl
  454155:	add    BYTE PTR [rax],al
  454157:	add    BYTE PTR [rax+rax*1],cl
  45415a:	add    BYTE PTR [rax],al
  45415c:	(bad)  
  45415d:	add    BYTE PTR [rax],al
  45415f:	add    BYTE PTR [rip+0x16000000],cl        # 0x16454165
  454165:	add    BYTE PTR [rax],al
  454167:	add    BYTE PTR [rdi],cl
  454169:	add    BYTE PTR [rax],al
  45416b:	add    BYTE PTR [rdx],al
  45416d:	add    BYTE PTR [rax],al
  45416f:	add    BYTE PTR [rax],dl
  454171:	add    BYTE PTR [rax],al
  454173:	add    BYTE PTR [rip+0x11000000],cl        # 0x11454179
  454179:	add    BYTE PTR [rax],al
  45417b:	add    BYTE PTR [rdx],dl
  45417d:	add    BYTE PTR [rax],al
  45417f:	add    BYTE PTR [rdx],dl
  454181:	add    BYTE PTR [rax],al
  454183:	add    BYTE PTR [rdx],al
  454185:	add    BYTE PTR [rax],al
  454187:	add    BYTE PTR [rcx],ah
  454189:	add    BYTE PTR [rax],al
  45418b:	add    BYTE PTR [rip+0x20000000],cl        # 0x20454191
  454191:	add    BYTE PTR [rax],al
  454193:	add    BYTE PTR [rip+0x35000000],cl        # 0x35454199
  454199:	add    BYTE PTR [rax],al
  45419b:	add    BYTE PTR [rdx],al
  45419d:	add    BYTE PTR [rax],al
  45419f:	add    BYTE PTR [rcx+0x0],al
  4541a2:	add    BYTE PTR [rax],al
  4541a4:	or     eax,0x43000000
  4541a9:	add    BYTE PTR [rax],al
  4541ab:	add    BYTE PTR [rdx],al
  4541ad:	add    BYTE PTR [rax],al
  4541af:	add    BYTE PTR [rax+0x0],dl
  4541b2:	add    BYTE PTR [rax],al
  4541b4:	adc    DWORD PTR [rax],eax
  4541b6:	add    BYTE PTR [rax],al
  4541b8:	push   rdx
  4541b9:	add    BYTE PTR [rax],al
  4541bb:	add    BYTE PTR [rip+0x53000000],cl        # 0x534541c1
  4541c1:	add    BYTE PTR [rax],al
  4541c3:	add    BYTE PTR [rip+0x57000000],cl        # 0x574541c9
  4541c9:	add    BYTE PTR [rax],al
  4541cb:	add    BYTE PTR [rsi],dl
  4541cd:	add    BYTE PTR [rax],al
  4541cf:	add    BYTE PTR [rcx+0x0],bl
  4541d2:	add    BYTE PTR [rax],al
  4541d4:	xor    esp,DWORD PTR [rdi]
  4541d6:	add    BYTE PTR [rax],al
  4541d8:	ins    BYTE PTR es:[rdi],dx
  4541d9:	add    BYTE PTR [rax],al
  4541db:	add    BYTE PTR [rip+0x6d000000],cl        # 0x6d4541e1
  4541e1:	add    BYTE PTR [rax],al
  4541e3:	add    BYTE PTR [rax],ah
  4541e5:	add    BYTE PTR [rax],al
  4541e7:	add    BYTE PTR [rax+0x0],dh
  4541ea:	add    BYTE PTR [rax],al
  4541ec:	sbb    al,0x0
  4541ee:	add    BYTE PTR [rax],al
  4541f0:	jb     0x4541f2
  4541f2:	add    BYTE PTR [rax],al
  4541f4:	or     DWORD PTR [rax],eax
  4541f6:	add    BYTE PTR [rax],al
  4541f8:	(bad)  
  4541f9:	add    BYTE PTR [rax],al
  4541fb:	add    BYTE PTR [rsi],dl
  4541fd:	add    BYTE PTR [rax],al
  4541ff:	add    BYTE PTR [rax+0xa000000],al
  454205:	add    BYTE PTR [rax],al
  454207:	add    BYTE PTR [rcx+0xa000000],al
  45420d:	add    BYTE PTR [rax],al
  45420f:	add    BYTE PTR [rdx+0x9000000],al
  454215:	add    BYTE PTR [rax],al
  454217:	add    BYTE PTR [rbx+0x16000000],al
  45421d:	add    BYTE PTR [rax],al
  45421f:	add    BYTE PTR [rax+rax*1+0xd0000],al
  454226:	add    BYTE PTR [rax],al
  454228:	xchg   ecx,eax
  454229:	add    BYTE PTR [rax],al
  45422b:	add    BYTE PTR [rcx],ch
  45422d:	add    BYTE PTR [rax],al
  45422f:	add    BYTE PTR [rsi+0xd000000],bl
  454235:	add    BYTE PTR [rax],al
  454237:	add    BYTE PTR [rcx+0x2000000],ah
  45423d:	add    BYTE PTR [rax],al
  45423f:	add    BYTE PTR [rax+rax*1+0x27330000],ah
  454246:	add    BYTE PTR [rax],al
  454248:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  454249:	add    BYTE PTR [rax],al
  45424b:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xffffffffb7454251
  454251:	add    BYTE PTR [rax],al
  454253:	add    BYTE PTR [rcx],dl
  454255:	add    BYTE PTR [rax],al
  454257:	add    dh,cl
  454259:	add    BYTE PTR [rax],al
  45425b:	add    BYTE PTR [rdx],al
  45425d:	add    BYTE PTR [rax],al
  45425f:	add    bh,dl
  454261:	add    BYTE PTR [rax],al
  454263:	add    BYTE PTR [rbx],dh
  454265:	(bad)  
  454266:	add    BYTE PTR [rax],al
  454268:	sbb    BYTE PTR [rdi],al
  45426a:	add    BYTE PTR [rax],al
  45426c:	or     al,0x0
	...
  45427e:	add    BYTE PTR [rax],al
  454280:	sub    BYTE PTR [rdx+0x45],0x0
  454287:	add    BYTE PTR [rax+0x45a5],al
  45428d:	add    BYTE PTR [rax],al
  45428f:	add    BYTE PTR [rax-0x7d],al
  454292:	rex.X add BYTE PTR [rax],al
	...
  45429d:	add    BYTE PTR [rax],al
  45429f:	add    BYTE PTR [rcx+0x72],al
  4542a2:	addr32 jne 0x454312
  4542a5:	outs   dx,BYTE PTR gs:[rsi]
  4542a7:	je     0x4542c9
  4542a9:	outs   dx,DWORD PTR fs:[rsi]
  4542ab:	ins    DWORD PTR es:[rdi],dx
  4542ac:	(bad)  
  4542ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4542b4:	jb     0x4542d6
  4542b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4542ba:	rex.B
  4542bb:	rex.WB
  4542bc:	rex.WRX sub QWORD PTR [rax],r8
  4542bf:	rex.B jb 0x454329
  4542c2:	jne    0x454331
  4542c4:	outs   dx,BYTE PTR gs:[rsi]
  4542c6:	je     0x4542e8
  4542c8:	jae    0x454333
  4542ca:	outs   dx,BYTE PTR ds:[rsi]
  4542cb:	addr32 jne 0x45433a
  4542ce:	(bad)  
  4542cf:	jb     0x45433a
  4542d1:	je     0x45434c
  4542d3:	and    BYTE PTR [rax],ch
  4542d5:	push   rbx
  4542d6:	rex.WB
  4542d7:	rex.RXB
  4542d8:	rex.WRX sub QWORD PTR [rax],r8
  4542db:	add    BYTE PTR [rax],al
  4542dd:	add    BYTE PTR [rax],al
  4542df:	add    BYTE PTR [rdi+0x76],cl
  4542e2:	gs jb  0x45434b
  4542e5:	ins    BYTE PTR es:[rdi],dx
  4542e6:	outs   dx,DWORD PTR ds:[rsi]
  4542e7:	ja     0x454309
  4542e9:	jb     0x45434c
  4542eb:	outs   dx,BYTE PTR ds:[rsi]
  4542ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4542f1:	jb     0x454362
  4542f3:	jb     0x454315
  4542f5:	sub    BYTE PTR [rdi+0x56],cl
  4542f8:	rex.RB push r10
  4542fa:	rex.RX
  4542fb:	rex.WR
  4542fc:	rex.WRXB push r15
  4542fe:	sub    DWORD PTR [rax],eax
  454300:	push   rax
  454301:	(bad)  
  454302:	jb     0x454378
  454304:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  45430b:	jae    0x45432d
  45430d:	outs   dx,DWORD PTR ds:[rsi]
  45430e:	data16 and BYTE PTR [rbx+0x69],dh
  454312:	outs   dx,BYTE PTR ds:[esi]
  454314:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  45431b:	and    BYTE PTR gs:[rax],ch
  45431e:	push   rax
  45431f:	rex.WR
  454320:	rex.WRXB push r11
  454322:	push   rbx
  454323:	sub    DWORD PTR [rax],eax
  454325:	add    BYTE PTR [rax],al
  454327:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  45432b:	(bad)  
  45432c:	ins    BYTE PTR es:[rdi],dx
  45432d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  454331:	jae    0x454353
  454333:	outs   dx,DWORD PTR ds:[rsi]
  454334:	data16 and BYTE PTR [rbx+0x69],dh
  454338:	outs   dx,BYTE PTR ds:[esi]
  45433a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  454341:	and    BYTE PTR gs:[rax],ch
  454344:	push   rsp
  454345:	rex.WR
  454346:	rex.WRXB push r11
  454348:	push   rbx
  454349:	sub    DWORD PTR [rax],eax
  45434b:	add    BYTE PTR [rax],al
  45434d:	add    BYTE PTR [rax],al
  45434f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  454353:	and    BYTE PTR [rdx+0x65],dh
  454356:	jae    0x4543cd
  454358:	ins    BYTE PTR es:[rdi],dx
  454359:	je     0x45437b
  45435b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  454362:	jae    0x4543d1
  454364:	(bad)  
  454365:	ins    BYTE PTR es:[rdi],dx
  454366:	ins    BYTE PTR es:[rdi],dx
  454367:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  45436b:	(bad)  
  45436c:	and    BYTE PTR gs:[rdx+0x65],dh
  454370:	jo     0x4543e4
  454372:	gs jae 0x4543da
  454375:	outs   dx,BYTE PTR ds:[rsi]
  454376:	je     0x4543dd
  454378:	and    BYTE PTR fs:[rax],ch
  45437b:	push   rbp
  45437c:	rex.WRX
  45437d:	rex.R
  45437e:	rex.RB push r10
  454380:	rex.RX
  454381:	rex.WR
  454382:	rex.WRXB push r15
  454384:	sub    DWORD PTR [rax],eax
  454386:	push   rbp
  454387:	outs   dx,BYTE PTR ds:[rsi]
  454388:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  45438c:	outs   dx,BYTE PTR ds:[rsi]
  45438d:	and    BYTE PTR [rbp+0x72],ah
  454390:	jb     0x454401
  454392:	jb     0x454394
  454394:	add    BYTE PTR [rax],al
  454396:	add    BYTE PTR [rax],al
  454398:	pop    rdi
  454399:	ins    DWORD PTR es:[rdi],dx
  45439a:	(bad)  
  45439b:	je     0x454405
  45439d:	gs jb  0x454412
  4543a0:	sub    BYTE PTR [rcx],ch
  4543a2:	cmp    ah,BYTE PTR [rax]
  4543a4:	and    eax,0x6e692073
  4543a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x676a6c22
  4543af:	sub    al,0x20
  4543b1:	and    eax,0x20202967
  4543b6:	sub    BYTE PTR [rdx+0x65],dh
  4543b9:	je     0x454431
  4543bb:	(bad)  
  4543bc:	ins    BYTE PTR es:[rdi],dx
  4543bd:	cmp    eax,0xa296725
  4543c2:	add    BYTE PTR [rax],al
  4543c4:	rex.WR
  4543c5:	rex.B std 
  4543c7:	dec    DWORD PTR [rbp-0x30002c0]
  4543cd:	rex std 
  4543cf:	dec    DWORD PTR [rcx+rax*2]
  4543d2:	std    
  4543d3:	call   FWORD PTR [rcx+rax*2]
  4543d6:	std    
  4543d7:	jmp    FWORD PTR [rcx+rax*2]
  4543da:	std    
  4543db:	(bad)  
  4543dc:	cmp    al,0x41
  4543de:	std    
  4543df:	dec    DWORD PTR [rbp+0x69]
  4543e2:	outs   dx,BYTE PTR ds:[rsi]
  4543e3:	addr32 ja 0x454413
  4543e6:	ja     0x45441e
  4543e8:	xor    al,0x20
  4543ea:	jb     0x454461
  4543ec:	outs   dx,BYTE PTR ds:[rsi]
  4543ed:	je     0x454458
  4543ef:	ins    DWORD PTR es:[rdi],dx
  4543f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4543f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4543fc:	add    BYTE PTR [rax],al
  4543fe:	add    BYTE PTR [rax],al
  454400:	rex.B
  454401:	fs fs jb 0x45446a
  454405:	jae    0x45447a
  454407:	and    BYTE PTR [rip+0x61682070],ah        # 0x61ad647d
  45440d:	jae    0x45442f
  45440f:	outs   dx,BYTE PTR ds:[rsi]
  454410:	outs   dx,DWORD PTR ds:[rsi]
  454411:	and    BYTE PTR [rcx+0x6d],ch
  454414:	(bad)  
  454415:	addr32 gs sub eax,0x74636573
  45441c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  454423:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  45442a:	jne    0x454491
  45442c:	jb     0x4544a7
  45442e:	and    BYTE PTR [rsi+0x61],ah
  454431:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  454439:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a764a3
  45443f:	je     0x4544a6
  454441:	jae    0x454463
  454443:	(bad)  
  454444:	je     0x454466
  454446:	(bad)  
  454447:	fs fs jb 0x4544b0
  45444b:	jae    0x4544c0
  45444d:	and    BYTE PTR [rip+0x70],ah        # 0x4544c3
  454453:	add    BYTE PTR [rax],al
  454455:	add    BYTE PTR [rax],al
  454457:	add    BYTE PTR [rax],ah
  454459:	and    BYTE PTR [rsi+0x69],dl
  45445c:	jb     0x4544d2
  45445e:	jne    0x4544c1
  454460:	ins    BYTE PTR es:[rdi],dx
  454461:	push   rax
  454462:	jb     0x4544d3
  454464:	je     0x4544cb
  454466:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  45446a:	(bad)  
  45446b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  454473:	push   0x646f6320
  454478:	and    BYTE PTR gs:[rax],dh
  45447b:	js     0x4544a2
  45447d:	js     0x45447f
  45447f:	add    BYTE PTR [rax],ah
  454481:	and    BYTE PTR [rbp+0x6e],dl
  454484:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  454488:	outs   dx,BYTE PTR ds:[rsi]
  454489:	and    BYTE PTR [rax+0x73],dh
  45448c:	gs jne 0x4544f3
  45448f:	outs   dx,DWORD PTR ds:[rsi]
  454490:	and    BYTE PTR [rdx+0x65],dh
  454493:	ins    BYTE PTR es:[rdi],dx
  454494:	outs   dx,DWORD PTR ds:[rsi]
  454495:	movsxd esp,DWORD PTR [rcx+0x74]
  454498:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  45449f:	je     0x454510
  4544a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4544a4:	and    BYTE PTR [rsi+0x65],dh
  4544a7:	jb     0x45451c
  4544a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4544b0:	or     al,BYTE PTR [rax]
  4544b2:	add    BYTE PTR [rax],al
  4544b4:	add    BYTE PTR [rax],al
  4544b6:	add    BYTE PTR [rax],al
  4544b8:	and    BYTE PTR [rax],ah
  4544ba:	push   rbp
  4544bb:	outs   dx,BYTE PTR ds:[rsi]
  4544bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4544c0:	outs   dx,BYTE PTR ds:[rsi]
  4544c1:	and    BYTE PTR [rax+0x73],dh
  4544c4:	gs jne 0x45452b
  4544c7:	outs   dx,DWORD PTR ds:[rsi]
  4544c8:	and    BYTE PTR [rdx+0x65],dh
  4544cb:	ins    BYTE PTR es:[rdi],dx
  4544cc:	outs   dx,DWORD PTR ds:[rsi]
  4544cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4544d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4544d7:	and    BYTE PTR [rbx+0x69],dh
  4544da:	jp     0x454541
  4544dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4f7346
	...
  4544ee:	add    BYTE PTR [rax],al
  4544f0:	cs jo  0x454557
  4544f3:	(bad)  
  4544f4:	je     0x454557
	...
  4544fe:	add    BYTE PTR [rax],al
  454500:	and    eax,0x203a73
  454505:	push   rax
  454506:	rex.WRXB push r11
  454508:	rex.WB pop r8
  45450a:	rex.WR pop rcx
  45450c:	pop    rdi
  45450d:	rex.XB
  45450e:	rex.WRXB push r10
  454510:	push   rdx
  454511:	rex.RB
  454512:	rex.XB push r12
	...
  454520:	jne    0x454590
  454522:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  454526:	outs   dx,BYTE PTR ds:[rsi]
  454527:	and    BYTE PTR [rdi+0x70],ch
  45452a:	je     0x454595
  45452c:	outs   dx,DWORD PTR ds:[rsi]
  45452d:	outs   dx,BYTE PTR ds:[rsi]
  45452e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x736a6561
	...
  454540:	jne    0x4545b0
  454542:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  454546:	outs   dx,BYTE PTR ds:[rsi]
  454547:	and    BYTE PTR [rdi+0x70],ch
  45454a:	je     0x4545b5
  45454c:	outs   dx,DWORD PTR ds:[rsi]
  45454d:	outs   dx,BYTE PTR ds:[rsi]
  45454e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x636a6581
	...
  454560:	outs   dx,DWORD PTR ds:[rsi]
  454561:	jo     0x4545d7
  454563:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  45456a:	jae    0x4545da
  45456c:	(bad)  
  45456d:	je     0x45458f
  45456f:	je     0x4545d2
  454571:	imul   esp,DWORD PTR [rbp+0x20],0x61
  454575:	outs   dx,BYTE PTR ds:[rsi]
  454576:	and    BYTE PTR [rcx+0x72],ah
  454579:	addr32 jne 0x4545e9
  45457c:	outs   dx,BYTE PTR gs:[rsi]
  45457e:	je     0x4545a0
  454580:	sub    eax,0x2e25202d
  454585:	sub    dh,BYTE PTR [rbx+0x0]
	...
  454590:	(bad)  
  454591:	ins    DWORD PTR es:[rdi],dx
  454592:	(bad)  
  454593:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  45459a:	outs   dx,DWORD PTR ds:[rsi]
  45459b:	jo     0x454611
  45459d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  4545a4:	and    eax,0x732a2e
	...
  4545bd:	add    BYTE PTR [rax],al
  4545bf:	add    BYTE PTR [rdi+0x70],ch
  4545c2:	je     0x45462d
  4545c4:	outs   dx,DWORD PTR ds:[rsi]
  4545c5:	outs   dx,BYTE PTR ds:[rsi]
  4545c6:	and    BYTE PTR [rdx+0x65],dh
  4545c9:	jno    0x454640
  4545cb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4545d2:	and    BYTE PTR [rcx+0x72],ah
  4545d5:	addr32 jne 0x454645
  4545d8:	outs   dx,BYTE PTR gs:[rsi]
  4545da:	je     0x4545fc
  4545dc:	sub    eax,0x7325202d
	...
  4545fd:	add    BYTE PTR [rax],al
  4545ff:	add    BYTE PTR [rdi+0x70],ch
  454602:	je     0x45466d
  454604:	outs   dx,DWORD PTR ds:[rsi]
  454605:	outs   dx,BYTE PTR ds:[rsi]
  454606:	and    BYTE PTR [rdx+0x65],dh
  454609:	jno    0x454680
  45460b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  454612:	and    BYTE PTR [rcx+0x72],ah
  454615:	addr32 jne 0x454685
  454618:	outs   dx,BYTE PTR gs:[rsi]
  45461a:	je     0x45463c
  45461c:	sub    eax,0x6325202d
	...
  45463d:	add    BYTE PTR [rax],al
  45463f:	add    al,al
  454641:	jbe    0x454687
	...
  45464f:	add    BYTE PTR [rax+0x4060],al
	...
  45465d:	add    BYTE PTR [rax],al
  45465f:	add    al,al
  454661:	push   0x44
	...
  45466f:	add    BYTE PTR [rax],dh
  454671:	(bad)
	...
  454680:	jo     0x454647
  454682:	rex.X add BYTE PTR [rax],al
	...
  45468d:	add    BYTE PTR [rax],al
  45468f:	add    BYTE PTR [rax+0x42bd],dl
	...
  45469d:	add    BYTE PTR [rax],al
  45469f:	add    BYTE PTR [rax],dh
  4546a1:	push   rcx
  4546a2:	add    BYTE PTR [r8],r8b
	...
  4546ad:	add    BYTE PTR [rax],al
  4546af:	add    BYTE PTR [rax],dh
  4546b1:	push   rcx
  4546b2:	add    BYTE PTR [r8],r8b
	...
  4546bd:	add    BYTE PTR [rax],al
  4546bf:	add    BYTE PTR [rax+0x4542],dl
	...
  4546d1:	add    BYTE PTR [rax+0x0],al
	...
  4546e0:	xchg   esp,eax
  4546e1:	retf   
  4546e2:	add    BYTE PTR [r8],r8b
	...
  4546ed:	add    BYTE PTR [rax],al
  4546ef:	add    BYTE PTR [rbx+rcx*8+0x45],ch
	...
  4546fe:	add    BYTE PTR [rax],al
  454700:	(bad)  
  454701:	retf   
  454702:	add    BYTE PTR [r8],r8b
	...
  45470d:	add    BYTE PTR [rax],al
  45470f:	add    ah,dh
  454711:	retf   
  454712:	add    BYTE PTR [r8],r8b
	...
  45471d:	add    BYTE PTR [rax],al
  45471f:	add    BYTE PTR [rsp+rcx*8],bl
  454722:	add    BYTE PTR [r8],r8b
	...
  45472d:	add    BYTE PTR [rax],al
  45472f:	add    al,al
  454731:	stos   DWORD PTR es:[rdi],eax
  454732:	add    BYTE PTR [r8],r8b
	...
  45473d:	add    BYTE PTR [rax],al
  45473f:	add    al,dh
  454741:	mov    cl,0x45
	...
  45474f:	add    al,ch
  454751:	mov    cl,0x45
	...
  45475f:	add    al,bl
  454761:	mov    cl,0x45
	...
  45476f:	add    al,ah
  454771:	mov    cl,0x45
	...
  45477f:	add    BYTE PTR [rax],al
  454781:	loopne 0x4547c8
	...
  45478f:	add    BYTE PTR [rax],dl
  454791:	loopne 0x4547d8
	...
  45479f:	add    BYTE PTR [rax],bl
  4547a1:	loopne 0x4547e8
	...
  4547af:	add    BYTE PTR [rax],dh
  4547b1:	loopne 0x4547f8
	...
  4547bf:	add    BYTE PTR [rax-0x5b],dl
  4547c2:	add    BYTE PTR [r8],r8b
	...
  4547cd:	add    BYTE PTR [rax],al
  4547cf:	add    BYTE PTR [rax+0x45ab],dl
	...
  4547dd:	add    BYTE PTR [rax],al
  4547df:	add    al,dl
  4547e1:	mov    WORD PTR [rdx+0x0],es
	...
  4547f0:	and    BYTE PTR [rdx+rax*2+0x0],al
	...
  4547ff:	add    BYTE PTR [rax-0x55],al
  454802:	add    BYTE PTR [r8],r8b
	...
  45480d:	add    BYTE PTR [rax],al
  45480f:	add    BYTE PTR [rax+0x45a2],al
	...
  45481d:	add    BYTE PTR [rax],al
  45481f:	add    BYTE PTR [rax-0x55],dh
  454822:	add    BYTE PTR [r8],r8b
	...
  45482d:	add    BYTE PTR [rax],al
  45482f:	add    BYTE PTR [rax-0x5b],ah
  454832:	add    BYTE PTR [r8],r8b
	...
  45483d:	add    BYTE PTR [rax],al
  45483f:	add    BYTE PTR [rax-0x55],bl
  454842:	add    BYTE PTR [r8],r8b
	...
  45484d:	add    BYTE PTR [rax],al
  45484f:	add    BYTE PTR [rbx+rbp*4+0x45],dl
	...
  45485f:	add    BYTE PTR [rax-0x55],dl
  454862:	add    BYTE PTR [r8],r8b
	...
  45486d:	add    BYTE PTR [rax],al
  45486f:	add    BYTE PTR [rax],ah
  454871:	mov    dl,0x45
	...
  45487f:	add    BYTE PTR [rax-0x3b],ah
  454882:	rex.X add BYTE PTR [rax],al
	...
  45488d:	add    BYTE PTR [rax],al
  45488f:	add    BYTE PTR [rbp+rax*8+0x42],bl
	...
  45489f:	add    BYTE PTR [rax-0x3b],bl
  4548a2:	rex.X add BYTE PTR [rax],al
	...
  4548ad:	add    BYTE PTR [rax],al
  4548af:	add    al,al
  4548b1:	fld    QWORD PTR [rbx+0x0]
	...
  4548c0:	rcr    ah,0x43
	...
  4548cf:	add    al,al
  4548d1:	fild   DWORD PTR [rbx+0x0]
	...
  4548e0:	xor    BYTE PTR [rax+0x45],0x0
	...
  4548ef:	add    BYTE PTR [rax-0x60],al
  4548f2:	add    BYTE PTR [r8],r8b
	...
  4548fd:	add    BYTE PTR [rax],al
  4548ff:	add    BYTE PTR [rax-0x51],al
  454902:	add    BYTE PTR [r8],r8b
	...
  45490d:	add    BYTE PTR [rax],al
  45490f:	add    BYTE PTR [rdi+0x43],al
  454912:	rex.XB cmp spl,BYTE PTR [r8]
  454915:	sub    BYTE PTR [rdi+0x4e],al
  454918:	push   rbp
  454919:	sub    DWORD PTR [rax],esp
  45491b:	xor    al,0x2e
  45491d:	cmp    DWORD PTR [rsi],ebp
  45491f:	xor    al,0x0
	...
  45492d:	add    BYTE PTR [rax],al
  45492f:	add    BYTE PTR [rdi+0x43],al
  454932:	rex.XB cmp spl,BYTE PTR [r8]
  454935:	sub    BYTE PTR [rdi+0x4e],al
  454938:	push   rbp
  454939:	sub    DWORD PTR [rax],esp
  45493b:	xor    al,0x2e
  45493d:	cmp    DWORD PTR [rsi],ebp
  45493f:	xor    al,0x0
	...
  45494d:	add    BYTE PTR [rax],al
  45494f:	add    BYTE PTR [rdi+0x43],al
  454952:	rex.XB cmp spl,BYTE PTR [r8]
  454955:	sub    BYTE PTR [rdi+0x4e],al
  454958:	push   rbp
  454959:	sub    DWORD PTR [rax],esp
  45495b:	xor    al,0x2e
  45495d:	cmp    DWORD PTR [rsi],ebp
  45495f:	xor    al,0x0
	...
  45496d:	add    BYTE PTR [rax],al
  45496f:	add    BYTE PTR [rdi+0x43],al
  454972:	rex.XB cmp spl,BYTE PTR [r8]
  454975:	sub    BYTE PTR [rdi+0x4e],al
  454978:	push   rbp
  454979:	sub    DWORD PTR [rax],esp
  45497b:	xor    al,0x2e
  45497d:	cmp    DWORD PTR [rsi],ebp
  45497f:	xor    al,0x0
	...
  45498d:	add    BYTE PTR [rax],al
  45498f:	add    BYTE PTR [rdi+0x43],al
  454992:	rex.XB cmp spl,BYTE PTR [r8]
  454995:	sub    BYTE PTR [rdi+0x4e],al
  454998:	push   rbp
  454999:	sub    DWORD PTR [rax],esp
  45499b:	xor    al,0x2e
  45499d:	cmp    DWORD PTR [rsi],ebp
  45499f:	xor    al,0x0
	...
  4549ad:	add    BYTE PTR [rax],al
  4549af:	add    BYTE PTR [rdi+0x43],al
  4549b2:	rex.XB cmp spl,BYTE PTR [r8]
  4549b5:	sub    BYTE PTR [rdi+0x4e],al
  4549b8:	push   rbp
  4549b9:	sub    DWORD PTR [rax],esp
  4549bb:	xor    al,0x2e
  4549bd:	cmp    DWORD PTR [rsi],ebp
  4549bf:	xor    al,0x0
	...
  4549cd:	add    BYTE PTR [rax],al
  4549cf:	add    BYTE PTR [rdi+0x43],al
  4549d2:	rex.XB cmp spl,BYTE PTR [r8]
  4549d5:	sub    BYTE PTR [rdi+0x4e],al
  4549d8:	push   rbp
  4549d9:	sub    DWORD PTR [rax],esp
  4549db:	xor    al,0x2e
  4549dd:	cmp    DWORD PTR [rsi],ebp
  4549df:	xor    al,0x0
	...
  4549ed:	add    BYTE PTR [rax],al
  4549ef:	add    BYTE PTR [rdi+0x43],al
  4549f2:	rex.XB cmp spl,BYTE PTR [r8]
  4549f5:	sub    BYTE PTR [rdi+0x4e],al
  4549f8:	push   rbp
  4549f9:	sub    DWORD PTR [rax],esp
  4549fb:	xor    al,0x2e
  4549fd:	cmp    DWORD PTR [rsi],ebp
  4549ff:	xor    al,0x0
	...
  454a0d:	add    BYTE PTR [rax],al
  454a0f:	add    BYTE PTR [rdi+0x43],al
  454a12:	rex.XB cmp spl,BYTE PTR [r8]
  454a15:	sub    BYTE PTR [rdi+0x4e],al
  454a18:	push   rbp
  454a19:	sub    DWORD PTR [rax],esp
  454a1b:	xor    al,0x2e
  454a1d:	cmp    DWORD PTR [rsi],ebp
  454a1f:	xor    al,0x0
	...
  454a2d:	add    BYTE PTR [rax],al
  454a2f:	add    BYTE PTR [rdi+0x43],al
  454a32:	rex.XB cmp spl,BYTE PTR [r8]
  454a35:	sub    BYTE PTR [rdi+0x4e],al
  454a38:	push   rbp
  454a39:	sub    DWORD PTR [rax],esp
  454a3b:	xor    al,0x2e
  454a3d:	cmp    DWORD PTR [rsi],ebp
  454a3f:	xor    al,0x0
	...
  454a4d:	add    BYTE PTR [rax],al
  454a4f:	add    BYTE PTR [rdi+0x43],al
  454a52:	rex.XB cmp spl,BYTE PTR [r8]
  454a55:	sub    BYTE PTR [rdi+0x4e],al
  454a58:	push   rbp
  454a59:	sub    DWORD PTR [rax],esp
  454a5b:	xor    al,0x2e
  454a5d:	cmp    DWORD PTR [rsi],ebp
  454a5f:	xor    al,0x0
	...
  454a6d:	add    BYTE PTR [rax],al
  454a6f:	add    BYTE PTR [rdi+0x43],al
  454a72:	rex.XB cmp spl,BYTE PTR [r8]
  454a75:	sub    BYTE PTR [rdi+0x4e],al
  454a78:	push   rbp
  454a79:	sub    DWORD PTR [rax],esp
  454a7b:	xor    al,0x2e
  454a7d:	cmp    DWORD PTR [rsi],ebp
  454a7f:	xor    al,0x0
	...
  454a8d:	add    BYTE PTR [rax],al
  454a8f:	add    BYTE PTR [rdi+0x43],al
  454a92:	rex.XB cmp spl,BYTE PTR [r8]
  454a95:	sub    BYTE PTR [rdi+0x4e],al
  454a98:	push   rbp
  454a99:	sub    DWORD PTR [rax],esp
  454a9b:	xor    al,0x2e
  454a9d:	cmp    DWORD PTR [rsi],ebp
  454a9f:	xor    al,0x0
	...
  454aad:	add    BYTE PTR [rax],al
  454aaf:	add    BYTE PTR [rdi+0x43],al
  454ab2:	rex.XB cmp spl,BYTE PTR [r8]
  454ab5:	sub    BYTE PTR [rdi+0x4e],al
  454ab8:	push   rbp
  454ab9:	sub    DWORD PTR [rax],esp
  454abb:	xor    al,0x2e
  454abd:	cmp    DWORD PTR [rsi],ebp
  454abf:	xor    al,0x0
	...
  454acd:	add    BYTE PTR [rax],al
  454acf:	add    BYTE PTR [rdi+0x43],al
  454ad2:	rex.XB cmp spl,BYTE PTR [r8]
  454ad5:	sub    BYTE PTR [rdi+0x4e],al
  454ad8:	push   rbp
  454ad9:	sub    DWORD PTR [rax],esp
  454adb:	xor    al,0x2e
  454add:	cmp    DWORD PTR [rsi],ebp
  454adf:	xor    al,0x0
	...
  454aed:	add    BYTE PTR [rax],al
  454aef:	add    BYTE PTR [rdi+0x43],al
  454af2:	rex.XB cmp spl,BYTE PTR [r8]
  454af5:	sub    BYTE PTR [rdi+0x4e],al
  454af8:	push   rbp
  454af9:	sub    DWORD PTR [rax],esp
  454afb:	xor    al,0x2e
  454afd:	cmp    DWORD PTR [rsi],ebp
  454aff:	xor    al,0x0
	...
  454b0d:	add    BYTE PTR [rax],al
  454b0f:	add    BYTE PTR [rdi+0x43],al
  454b12:	rex.XB cmp spl,BYTE PTR [r8]
  454b15:	sub    BYTE PTR [rdi+0x4e],al
  454b18:	push   rbp
  454b19:	sub    DWORD PTR [rax],esp
  454b1b:	xor    al,0x2e
  454b1d:	cmp    DWORD PTR [rsi],ebp
  454b1f:	xor    al,0x0
	...
  454b2d:	add    BYTE PTR [rax],al
  454b2f:	add    BYTE PTR [rdi+0x43],al
  454b32:	rex.XB cmp spl,BYTE PTR [r8]
  454b35:	sub    BYTE PTR [rdi+0x4e],al
  454b38:	push   rbp
  454b39:	sub    DWORD PTR [rax],esp
  454b3b:	xor    al,0x2e
  454b3d:	cmp    DWORD PTR [rsi],ebp
  454b3f:	xor    al,0x0
	...
  454b4d:	add    BYTE PTR [rax],al
  454b4f:	add    BYTE PTR [rdi+0x43],al
  454b52:	rex.XB cmp spl,BYTE PTR [r8]
  454b55:	sub    BYTE PTR [rdi+0x4e],al
  454b58:	push   rbp
  454b59:	sub    DWORD PTR [rax],esp
  454b5b:	xor    al,0x2e
  454b5d:	cmp    DWORD PTR [rsi],ebp
  454b5f:	xor    al,0x0
	...
  454b6d:	add    BYTE PTR [rax],al
  454b6f:	add    BYTE PTR [rdi+0x43],al
  454b72:	rex.XB cmp spl,BYTE PTR [r8]
  454b75:	sub    BYTE PTR [rdi+0x4e],al
  454b78:	push   rbp
  454b79:	sub    DWORD PTR [rax],esp
  454b7b:	xor    al,0x2e
  454b7d:	cmp    DWORD PTR [rsi],ebp
  454b7f:	xor    al,0x0
	...
  454b8d:	add    BYTE PTR [rax],al
  454b8f:	add    BYTE PTR [rdi+0x43],al
  454b92:	rex.XB cmp spl,BYTE PTR [r8]
  454b95:	sub    BYTE PTR [rdi+0x4e],al
  454b98:	push   rbp
  454b99:	sub    DWORD PTR [rax],esp
  454b9b:	xor    al,0x2e
  454b9d:	cmp    DWORD PTR [rsi],ebp
  454b9f:	xor    al,0x0
	...
  454bad:	add    BYTE PTR [rax],al
  454baf:	add    BYTE PTR [rdi+0x43],al
  454bb2:	rex.XB cmp spl,BYTE PTR [r8]
  454bb5:	sub    BYTE PTR [rdi+0x4e],al
  454bb8:	push   rbp
  454bb9:	sub    DWORD PTR [rax],esp
  454bbb:	xor    al,0x2e
  454bbd:	cmp    DWORD PTR [rsi],ebp
  454bbf:	xor    al,0x0
	...
  454bcd:	add    BYTE PTR [rax],al
  454bcf:	add    BYTE PTR [rdi+0x43],al
  454bd2:	rex.XB cmp spl,BYTE PTR [r8]
  454bd5:	sub    BYTE PTR [rdi+0x4e],al
  454bd8:	push   rbp
  454bd9:	sub    DWORD PTR [rax],esp
  454bdb:	xor    al,0x2e
  454bdd:	cmp    DWORD PTR [rsi],ebp
  454bdf:	xor    al,0x0
	...
  454bed:	add    BYTE PTR [rax],al
  454bef:	add    BYTE PTR [rdi+0x43],al
  454bf2:	rex.XB cmp spl,BYTE PTR [r8]
  454bf5:	sub    BYTE PTR [rdi+0x4e],al
  454bf8:	push   rbp
  454bf9:	sub    DWORD PTR [rax],esp
  454bfb:	xor    al,0x2e
  454bfd:	cmp    DWORD PTR [rsi],ebp
  454bff:	xor    al,0x0
	...
  454c0d:	add    BYTE PTR [rax],al
  454c0f:	add    BYTE PTR [rdi+0x43],al
  454c12:	rex.XB cmp spl,BYTE PTR [r8]
  454c15:	sub    BYTE PTR [rdi+0x4e],al
  454c18:	push   rbp
  454c19:	sub    DWORD PTR [rax],esp
  454c1b:	xor    al,0x2e
  454c1d:	cmp    DWORD PTR [rsi],ebp
  454c1f:	xor    al,0x0
	...
  454c2d:	add    BYTE PTR [rax],al
  454c2f:	add    BYTE PTR [rdi+0x43],al
  454c32:	rex.XB cmp spl,BYTE PTR [r8]
  454c35:	sub    BYTE PTR [rdi+0x4e],al
  454c38:	push   rbp
  454c39:	sub    DWORD PTR [rax],esp
  454c3b:	xor    al,0x2e
  454c3d:	cmp    DWORD PTR [rsi],ebp
  454c3f:	xor    al,0x0
	...
  454c4d:	add    BYTE PTR [rax],al
  454c4f:	add    BYTE PTR [rdi+0x43],al
  454c52:	rex.XB cmp spl,BYTE PTR [r8]
  454c55:	sub    BYTE PTR [rdi+0x4e],al
  454c58:	push   rbp
  454c59:	sub    DWORD PTR [rax],esp
  454c5b:	xor    al,0x2e
  454c5d:	cmp    DWORD PTR [rsi],ebp
  454c5f:	xor    al,0x0
	...
  454c6d:	add    BYTE PTR [rax],al
  454c6f:	add    BYTE PTR [rdi+0x43],al
  454c72:	rex.XB cmp spl,BYTE PTR [r8]
  454c75:	sub    BYTE PTR [rdi+0x4e],al
  454c78:	push   rbp
  454c79:	sub    DWORD PTR [rax],esp
  454c7b:	xor    al,0x2e
  454c7d:	cmp    DWORD PTR [rsi],ebp
  454c7f:	xor    al,0x0
	...
  454c8d:	add    BYTE PTR [rax],al
  454c8f:	add    BYTE PTR [rdi+0x43],al
  454c92:	rex.XB cmp spl,BYTE PTR [r8]
  454c95:	sub    BYTE PTR [rdi+0x4e],al
  454c98:	push   rbp
  454c99:	sub    DWORD PTR [rax],esp
  454c9b:	xor    al,0x2e
  454c9d:	cmp    DWORD PTR [rsi],ebp
  454c9f:	xor    al,0x0
	...
  454cad:	add    BYTE PTR [rax],al
  454caf:	add    BYTE PTR [rdi+0x43],al
  454cb2:	rex.XB cmp spl,BYTE PTR [r8]
  454cb5:	sub    BYTE PTR [rdi+0x4e],al
  454cb8:	push   rbp
  454cb9:	sub    DWORD PTR [rax],esp
  454cbb:	xor    al,0x2e
  454cbd:	cmp    DWORD PTR [rsi],ebp
  454cbf:	xor    al,0x0
	...
  454ccd:	add    BYTE PTR [rax],al
  454ccf:	add    BYTE PTR [rdi+0x43],al
  454cd2:	rex.XB cmp spl,BYTE PTR [r8]
  454cd5:	sub    BYTE PTR [rdi+0x4e],al
  454cd8:	push   rbp
  454cd9:	sub    DWORD PTR [rax],esp
  454cdb:	xor    al,0x2e
  454cdd:	cmp    DWORD PTR [rsi],ebp
  454cdf:	xor    al,0x0
	...
  454ced:	add    BYTE PTR [rax],al
  454cef:	add    BYTE PTR [rdi+0x43],al
  454cf2:	rex.XB cmp spl,BYTE PTR [r8]
  454cf5:	sub    BYTE PTR [rdi+0x4e],al
  454cf8:	push   rbp
  454cf9:	sub    DWORD PTR [rax],esp
  454cfb:	xor    al,0x2e
  454cfd:	cmp    DWORD PTR [rsi],ebp
  454cff:	xor    al,0x0
	...
  454d0d:	add    BYTE PTR [rax],al
  454d0f:	add    BYTE PTR [rdi+0x43],al
  454d12:	rex.XB cmp spl,BYTE PTR [r8]
  454d15:	sub    BYTE PTR [rdi+0x4e],al
  454d18:	push   rbp
  454d19:	sub    DWORD PTR [rax],esp
  454d1b:	xor    al,0x2e
  454d1d:	cmp    DWORD PTR [rsi],ebp
  454d1f:	xor    al,0x0
	...
  454d2d:	add    BYTE PTR [rax],al
  454d2f:	add    BYTE PTR [rdi+0x43],al
  454d32:	rex.XB cmp spl,BYTE PTR [r8]
  454d35:	sub    BYTE PTR [rdi+0x4e],al
  454d38:	push   rbp
  454d39:	sub    DWORD PTR [rax],esp
  454d3b:	xor    al,0x2e
  454d3d:	cmp    DWORD PTR [rsi],ebp
  454d3f:	xor    al,0x0
	...
  454d4d:	add    BYTE PTR [rax],al
  454d4f:	add    BYTE PTR [rdi+0x43],al
  454d52:	rex.XB cmp spl,BYTE PTR [r8]
  454d55:	sub    BYTE PTR [rdi+0x4e],al
  454d58:	push   rbp
  454d59:	sub    DWORD PTR [rax],esp
  454d5b:	xor    al,0x2e
  454d5d:	cmp    DWORD PTR [rsi],ebp
  454d5f:	xor    al,0x0
	...
  454d6d:	add    BYTE PTR [rax],al
  454d6f:	add    BYTE PTR [rdi+0x43],al
  454d72:	rex.XB cmp spl,BYTE PTR [r8]
  454d75:	sub    BYTE PTR [rdi+0x4e],al
  454d78:	push   rbp
  454d79:	sub    DWORD PTR [rax],esp
  454d7b:	xor    al,0x2e
  454d7d:	cmp    DWORD PTR [rsi],ebp
  454d7f:	xor    al,0x0
	...
  454d8d:	add    BYTE PTR [rax],al
  454d8f:	add    BYTE PTR [rdi+0x43],al
  454d92:	rex.XB cmp spl,BYTE PTR [r8]
  454d95:	sub    BYTE PTR [rdi+0x4e],al
  454d98:	push   rbp
  454d99:	sub    DWORD PTR [rax],esp
  454d9b:	xor    al,0x2e
  454d9d:	cmp    DWORD PTR [rsi],ebp
  454d9f:	xor    al,0x0
	...
  454dad:	add    BYTE PTR [rax],al
  454daf:	add    BYTE PTR [rdi+0x43],al
  454db2:	rex.XB cmp spl,BYTE PTR [r8]
  454db5:	sub    BYTE PTR [rdi+0x4e],al
  454db8:	push   rbp
  454db9:	sub    DWORD PTR [rax],esp
  454dbb:	xor    al,0x2e
  454dbd:	cmp    DWORD PTR [rsi],ebp
  454dbf:	xor    al,0x0
	...
  454dcd:	add    BYTE PTR [rax],al
  454dcf:	add    BYTE PTR [rdi+0x43],al
  454dd2:	rex.XB cmp spl,BYTE PTR [r8]
  454dd5:	sub    BYTE PTR [rdi+0x4e],al
  454dd8:	push   rbp
  454dd9:	sub    DWORD PTR [rax],esp
  454ddb:	xor    al,0x2e
  454ddd:	cmp    DWORD PTR [rsi],ebp
  454ddf:	xor    al,0x0
	...
  454ded:	add    BYTE PTR [rax],al
  454def:	add    BYTE PTR [rdi+0x43],al
  454df2:	rex.XB cmp spl,BYTE PTR [r8]
  454df5:	sub    BYTE PTR [rdi+0x4e],al
  454df8:	push   rbp
  454df9:	sub    DWORD PTR [rax],esp
  454dfb:	xor    al,0x2e
  454dfd:	cmp    DWORD PTR [rsi],ebp
  454dff:	xor    al,0x0
	...
  454e0d:	add    BYTE PTR [rax],al
  454e0f:	add    BYTE PTR [rdi+0x43],al
  454e12:	rex.XB cmp spl,BYTE PTR [r8]
  454e15:	sub    BYTE PTR [rdi+0x4e],al
  454e18:	push   rbp
  454e19:	sub    DWORD PTR [rax],esp
  454e1b:	xor    al,0x2e
  454e1d:	cmp    DWORD PTR [rsi],ebp
  454e1f:	xor    al,0x0
	...
  454e2d:	add    BYTE PTR [rax],al
  454e2f:	add    BYTE PTR [rdi+0x43],al
  454e32:	rex.XB cmp spl,BYTE PTR [r8]
  454e35:	sub    BYTE PTR [rdi+0x4e],al
  454e38:	push   rbp
  454e39:	sub    DWORD PTR [rax],esp
  454e3b:	xor    al,0x2e
  454e3d:	cmp    DWORD PTR [rsi],ebp
  454e3f:	xor    al,0x0
	...
  454e4d:	add    BYTE PTR [rax],al
  454e4f:	add    BYTE PTR [rdi+0x43],al
  454e52:	rex.XB cmp spl,BYTE PTR [r8]
  454e55:	sub    BYTE PTR [rdi+0x4e],al
  454e58:	push   rbp
  454e59:	sub    DWORD PTR [rax],esp
  454e5b:	xor    al,0x2e
  454e5d:	cmp    DWORD PTR [rsi],ebp
  454e5f:	xor    al,0x0
	...
  454e6d:	add    BYTE PTR [rax],al
  454e6f:	add    BYTE PTR [rdi+0x43],al
  454e72:	rex.XB cmp spl,BYTE PTR [r8]
  454e75:	sub    BYTE PTR [rdi+0x4e],al
  454e78:	push   rbp
  454e79:	sub    DWORD PTR [rax],esp
  454e7b:	xor    al,0x2e
  454e7d:	cmp    DWORD PTR [rsi],ebp
  454e7f:	xor    al,0x0
	...
  454e8d:	add    BYTE PTR [rax],al
  454e8f:	add    BYTE PTR [rdi+0x43],al
  454e92:	rex.XB cmp spl,BYTE PTR [r8]
  454e95:	sub    BYTE PTR [rdi+0x4e],al
  454e98:	push   rbp
  454e99:	sub    DWORD PTR [rax],esp
  454e9b:	xor    al,0x2e
  454e9d:	cmp    DWORD PTR [rsi],ebp
  454e9f:	xor    al,0x0
	...
  454ead:	add    BYTE PTR [rax],al
  454eaf:	add    BYTE PTR [rdi+0x43],al
  454eb2:	rex.XB cmp spl,BYTE PTR [r8]
  454eb5:	sub    BYTE PTR [rdi+0x4e],al
  454eb8:	push   rbp
  454eb9:	sub    DWORD PTR [rax],esp
  454ebb:	xor    al,0x2e
  454ebd:	cmp    DWORD PTR [rsi],ebp
  454ebf:	xor    al,0x0
	...
  454ecd:	add    BYTE PTR [rax],al
  454ecf:	add    BYTE PTR [rdi+0x43],al
  454ed2:	rex.XB cmp spl,BYTE PTR [r8]
  454ed5:	sub    BYTE PTR [rdi+0x4e],al
  454ed8:	push   rbp
  454ed9:	sub    DWORD PTR [rax],esp
  454edb:	xor    al,0x2e
  454edd:	cmp    DWORD PTR [rsi],ebp
  454edf:	xor    al,0x0
	...
  454eed:	add    BYTE PTR [rax],al
  454eef:	add    BYTE PTR [rdi+0x43],al
  454ef2:	rex.XB cmp spl,BYTE PTR [r8]
  454ef5:	sub    BYTE PTR [rdi+0x4e],al
  454ef8:	push   rbp
  454ef9:	sub    DWORD PTR [rax],esp
  454efb:	xor    al,0x2e
  454efd:	cmp    DWORD PTR [rsi],ebp
  454eff:	xor    al,0x0
	...
  454f0d:	add    BYTE PTR [rax],al
  454f0f:	add    BYTE PTR [rdi+0x43],al
  454f12:	rex.XB cmp spl,BYTE PTR [r8]
  454f15:	sub    BYTE PTR [rdi+0x4e],al
  454f18:	push   rbp
  454f19:	sub    DWORD PTR [rax],esp
  454f1b:	xor    al,0x2e
  454f1d:	cmp    DWORD PTR [rsi],ebp
  454f1f:	xor    al,0x0
	...
  454f2d:	add    BYTE PTR [rax],al
  454f2f:	add    BYTE PTR [rdi+0x43],al
  454f32:	rex.XB cmp spl,BYTE PTR [r8]
  454f35:	sub    BYTE PTR [rdi+0x4e],al
  454f38:	push   rbp
  454f39:	sub    DWORD PTR [rax],esp
  454f3b:	xor    al,0x2e
  454f3d:	cmp    DWORD PTR [rsi],ebp
  454f3f:	xor    al,0x0
	...
  454f4d:	add    BYTE PTR [rax],al
  454f4f:	add    BYTE PTR [rdi+0x43],al
  454f52:	rex.XB cmp spl,BYTE PTR [r8]
  454f55:	sub    BYTE PTR [rdi+0x4e],al
  454f58:	push   rbp
  454f59:	sub    DWORD PTR [rax],esp
  454f5b:	xor    al,0x2e
  454f5d:	cmp    DWORD PTR [rsi],ebp
  454f5f:	xor    al,0x0
	...
  454f6d:	add    BYTE PTR [rax],al
  454f6f:	add    BYTE PTR [rdi+0x43],al
  454f72:	rex.XB cmp spl,BYTE PTR [r8]
  454f75:	sub    BYTE PTR [rdi+0x4e],al
  454f78:	push   rbp
  454f79:	sub    DWORD PTR [rax],esp
  454f7b:	xor    al,0x2e
  454f7d:	cmp    DWORD PTR [rsi],ebp
  454f7f:	xor    al,0x0
	...
  454f8d:	add    BYTE PTR [rax],al
  454f8f:	add    BYTE PTR [rdi+0x43],al
  454f92:	rex.XB cmp spl,BYTE PTR [r8]
  454f95:	sub    BYTE PTR [rdi+0x4e],al
  454f98:	push   rbp
  454f99:	sub    DWORD PTR [rax],esp
  454f9b:	xor    al,0x2e
  454f9d:	cmp    DWORD PTR [rsi],ebp
  454f9f:	xor    al,0x0
	...
  454fad:	add    BYTE PTR [rax],al
  454faf:	add    BYTE PTR [rdi+0x43],al
  454fb2:	rex.XB cmp spl,BYTE PTR [r8]
  454fb5:	sub    BYTE PTR [rdi+0x4e],al
  454fb8:	push   rbp
  454fb9:	sub    DWORD PTR [rax],esp
  454fbb:	xor    al,0x2e
  454fbd:	cmp    DWORD PTR [rsi],ebp
  454fbf:	xor    al,0x0
	...
  454fcd:	add    BYTE PTR [rax],al
  454fcf:	add    BYTE PTR [rdi+0x43],al
  454fd2:	rex.XB cmp spl,BYTE PTR [r8]
  454fd5:	sub    BYTE PTR [rdi+0x4e],al
  454fd8:	push   rbp
  454fd9:	sub    DWORD PTR [rax],esp
  454fdb:	xor    al,0x2e
  454fdd:	cmp    DWORD PTR [rsi],ebp
  454fdf:	xor    al,0x0
	...
  454fed:	add    BYTE PTR [rax],al
  454fef:	add    BYTE PTR [rdi+0x43],al
  454ff2:	rex.XB cmp spl,BYTE PTR [r8]
  454ff5:	sub    BYTE PTR [rdi+0x4e],al
  454ff8:	push   rbp
  454ff9:	sub    DWORD PTR [rax],esp
  454ffb:	xor    al,0x2e
  454ffd:	cmp    DWORD PTR [rsi],ebp
  454fff:	xor    al,0x0
	...
  45500d:	add    BYTE PTR [rax],al
  45500f:	add    BYTE PTR [rdi+0x43],al
  455012:	rex.XB cmp spl,BYTE PTR [r8]
  455015:	sub    BYTE PTR [rdi+0x4e],al
  455018:	push   rbp
  455019:	sub    DWORD PTR [rax],esp
  45501b:	xor    al,0x2e
  45501d:	cmp    DWORD PTR [rsi],ebp
  45501f:	xor    al,0x0
	...
  45502d:	add    BYTE PTR [rax],al
  45502f:	add    BYTE PTR [rdi+0x43],al
  455032:	rex.XB cmp spl,BYTE PTR [r8]
  455035:	sub    BYTE PTR [rdi+0x4e],al
  455038:	push   rbp
  455039:	sub    DWORD PTR [rax],esp
  45503b:	xor    al,0x2e
  45503d:	cmp    DWORD PTR [rsi],ebp
  45503f:	xor    al,0x0
	...
  45504d:	add    BYTE PTR [rax],al
  45504f:	add    BYTE PTR [rdi+0x43],al
  455052:	rex.XB cmp spl,BYTE PTR [r8]
  455055:	sub    BYTE PTR [rdi+0x4e],al
  455058:	push   rbp
  455059:	sub    DWORD PTR [rax],esp
  45505b:	xor    al,0x2e
  45505d:	cmp    DWORD PTR [rsi],ebp
  45505f:	xor    al,0x0
	...
  45506d:	add    BYTE PTR [rax],al
  45506f:	add    BYTE PTR [rdi+0x43],al
  455072:	rex.XB cmp spl,BYTE PTR [r8]
  455075:	sub    BYTE PTR [rdi+0x4e],al
  455078:	push   rbp
  455079:	sub    DWORD PTR [rax],esp
  45507b:	xor    al,0x2e
  45507d:	cmp    DWORD PTR [rsi],ebp
  45507f:	xor    al,0x0
	...
  45508d:	add    BYTE PTR [rax],al
  45508f:	add    BYTE PTR [rdi+0x43],al
  455092:	rex.XB cmp spl,BYTE PTR [r8]
  455095:	sub    BYTE PTR [rdi+0x4e],al
  455098:	push   rbp
  455099:	sub    DWORD PTR [rax],esp
  45509b:	xor    al,0x2e
  45509d:	cmp    DWORD PTR [rsi],ebp
  45509f:	xor    al,0x0
	...
  4550ad:	add    BYTE PTR [rax],al
  4550af:	add    BYTE PTR [rdi+0x43],al
  4550b2:	rex.XB cmp spl,BYTE PTR [r8]
  4550b5:	sub    BYTE PTR [rdi+0x4e],al
  4550b8:	push   rbp
  4550b9:	sub    DWORD PTR [rax],esp
  4550bb:	xor    al,0x2e
  4550bd:	cmp    DWORD PTR [rsi],ebp
  4550bf:	xor    al,0x0
	...
  4550cd:	add    BYTE PTR [rax],al
  4550cf:	add    BYTE PTR [rdi+0x43],al
  4550d2:	rex.XB cmp spl,BYTE PTR [r8]
  4550d5:	sub    BYTE PTR [rdi+0x4e],al
  4550d8:	push   rbp
  4550d9:	sub    DWORD PTR [rax],esp
  4550db:	xor    al,0x2e
  4550dd:	cmp    DWORD PTR [rsi],ebp
  4550df:	xor    al,0x0
	...
  4550ed:	add    BYTE PTR [rax],al
  4550ef:	add    BYTE PTR [rdi+0x43],al
  4550f2:	rex.XB cmp spl,BYTE PTR [r8]
  4550f5:	sub    BYTE PTR [rdi+0x4e],al
  4550f8:	push   rbp
  4550f9:	sub    DWORD PTR [rax],esp
  4550fb:	xor    al,0x2e
  4550fd:	cmp    DWORD PTR [rsi],ebp
  4550ff:	xor    al,0x0
	...
  45510d:	add    BYTE PTR [rax],al
  45510f:	add    BYTE PTR [rdi+0x43],al
  455112:	rex.XB cmp spl,BYTE PTR [r8]
  455115:	sub    BYTE PTR [rdi+0x4e],al
  455118:	push   rbp
  455119:	sub    DWORD PTR [rax],esp
  45511b:	xor    al,0x2e
  45511d:	cmp    DWORD PTR [rsi],ebp
  45511f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000456000 <.pdata>:
  456000:	add    BYTE PTR [rax],dl
  456002:	add    BYTE PTR [rax],al
  456004:	add    DWORD PTR [rax],edx
  456006:	add    BYTE PTR [rax],al
  456008:	add    BYTE PTR [rax+0x10100005],al
  45600e:	add    BYTE PTR [rax],al
  456010:	push   rcx
  456011:	adc    DWORD PTR [rax],eax
  456013:	add    BYTE PTR [rax+rax*4],al
  456016:	add    eax,0x116000
  45601b:	add    BYTE PTR [rsi+0xc000011],ch
  456021:	add    BYTE PTR [rip+0x11b000],0x0        # 0x571028
  456028:	(bad)  
  456029:	adc    al,0x0
  45602b:	add    BYTE PTR [rax+rax*4],dl
  45602e:	add    eax,0x14d000
  456033:	add    dl,dh
  456035:	adc    al,0x0
  456037:	add    BYTE PTR [rax],ch
  456039:	add    BYTE PTR [rip+0x150000],0x0        # 0x5a6040
  456040:	and    dl,BYTE PTR [rip+0xffffffff80480000]        # 0xffffffff808d6046
  456046:	add    eax,0x153000
  45604b:	add    al,bl
  45604d:	adc    eax,0x80680000
  456052:	add    eax,0x15e000
  456057:	add    BYTE PTR [rsi+rdx*1],dh
  45605a:	add    BYTE PTR [rax],al
  45605c:	ins    BYTE PTR es:[rdi],dx
  45605d:	add    BYTE PTR [rip+0x164000],0x0        # 0x5ba064
  456064:	jne    0x45607c
  456066:	add    BYTE PTR [rax],al
  456068:	js     0x455fea
  45606a:	add    eax,0x168000
  45606f:	add    BYTE PTR [rdx],bh
  456071:	sbb    eax,DWORD PTR [rax]
  456073:	add    BYTE PTR [rax+0x40000580],al
  456079:	sbb    eax,DWORD PTR [rax]
  45607b:	add    BYTE PTR [rbx+rbx*1-0x7f680000],bl
  456082:	add    eax,0x1ba000
  456087:	add    BYTE PTR [rcx+0x1d],ah
  45608a:	add    BYTE PTR [rax],al
  45608c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  45608d:	add    BYTE PTR [rip+0x1d7000],0x0        # 0x62d094
  456094:	rex.B (bad) 
  456096:	add    BYTE PTR [rax],al
  456098:	mov    al,0x80
  45609a:	add    eax,0x1e5000
  45609f:	add    bh,cl
  4560a1:	(bad)  
  4560a2:	add    BYTE PTR [rax],al
  4560a4:	mov    eax,0xd0000580
  4560a9:	(bad)  
  4560aa:	add    BYTE PTR [rax],al
  4560ac:	sbb    DWORD PTR [rcx],esp
  4560ae:	add    BYTE PTR [rax],al
  4560b0:	rol    BYTE PTR [rax+0x21200005],0x0
  4560b7:	add    BYTE PTR [rdi+0x2d],dl
  4560ba:	add    BYTE PTR [rax],al
  4560bc:	(bad)  
  4560bd:	add    BYTE PTR [rip+0x2d6000],0x0        # 0x72c0c4
  4560c4:	rex.RX pop rdx
  4560c6:	add    BYTE PTR [rax],al
  4560c8:	in     al,dx
  4560c9:	add    BYTE PTR [rip+0x5a5000],0x0        # 0x9fb0d0
  4560d0:	pop    rsi
  4560d1:	pop    rbx
  4560d2:	add    BYTE PTR [rax],al
  4560d4:	rex.WR add QWORD PTR [rip+0x5b6000],0x5c6200        # 0xa0c0df
  4560df:	add    BYTE PTR [rax-0x7f],ah
  4560e2:	add    eax,0x5c7000
  4560e7:	add    BYTE PTR [rdi+0x6c00005d],cl
  4560ed:	add    DWORD PTR [rip+0x5d9000],0x5e4600        # 0xa2f0f7
  4560f7:	add    BYTE PTR [rcx+rax*4+0x5],bh
  4560fb:	add    BYTE PTR [rax+0x5e],dl
  4560fe:	add    BYTE PTR [rax],al
  456100:	(bad)  
  456101:	pop    rdi
  456102:	add    BYTE PTR [rax],al
  456104:	mov    WORD PTR [rcx+0x5f600005],es
  45610a:	add    BYTE PTR [rax],al
  45610c:	jns    0x45616e
  45610e:	add    BYTE PTR [rax],al
  456110:	pushf  
  456111:	add    DWORD PTR [rip+0x608000],0x608c00        # 0xa5e11b
  45611b:	add    BYTE PTR [rcx+rax*4+0x60900005],ch
  456122:	add    BYTE PTR [rax],al
  456124:	mov    ebx,0xb0000060
  456129:	add    DWORD PTR [rip+0x60c000],0x611800        # 0xa62133
  456133:	add    BYTE PTR [rax+0x20000581],bh
  456139:	(bad)  
  45613a:	add    BYTE PTR [rax],al
  45613c:	(bad)  
  45613e:	add    BYTE PTR [rax],al
  456140:	rol    BYTE PTR [rcx+0x61700005],0x0
  456147:	add    BYTE PTR [rdx],ah
  456149:	(bad)  
  45614a:	add    BYTE PTR [rax],al
  45614c:	enter  0x581,0x0
  456150:	xor    BYTE PTR [rdx+0x0],ah
  456153:	add    BYTE PTR [rcx-0x2fffff9e],ah
  456159:	add    DWORD PTR [rip+0x62b000],0x640200        # 0xa81163
  456163:	add    al,bl
  456165:	add    DWORD PTR [rip+0x641000],0x788200        # 0xa9716f
  45616f:	add    ah,ah
  456171:	add    DWORD PTR [rip+0x789000],0x78d700        # 0xbdf17b
  45617b:	add    BYTE PTR [rdx+rax*4],al
  45617e:	add    eax,0x78e000
  456183:	add    BYTE PTR [rdi],ah
  456185:	jns    0x456187
  456187:	add    BYTE PTR [rax],dl
  456189:	(bad)  
  45618a:	add    eax,0x793000
  45618f:	add    BYTE PTR [rcx+rdi*2+0x0],dh
  456193:	add    BYTE PTR [rdx+rax*4],bl
  456196:	add    eax,0x798000
  45619b:	add    BYTE PTR [rcx+0x24000079],al
  4561a1:	(bad)  
  4561a2:	add    eax,0x799000
  4561a7:	add    BYTE PTR [rdx+0x7c],dl
  4561aa:	add    BYTE PTR [rax],al
  4561ac:	sub    BYTE PTR [rdx+0x7c600005],al
  4561b2:	add    BYTE PTR [rax],al
  4561b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4561b5:	(bad)  
  4561b6:	add    BYTE PTR [rax],al
  4561b8:	xor    al,0x82
  4561ba:	add    eax,0x82b000
  4561bf:	add    BYTE PTR [rdx],al
  4561c1:	xchg   BYTE PTR [rax],al
  4561c3:	add    BYTE PTR [rdx+rax*4+0x5],al
  4561c7:	add    BYTE PTR [rax],dl
  4561c9:	xchg   BYTE PTR [rax],al
  4561cb:	add    BYTE PTR [rsi+rax*4],bl
  4561ce:	add    BYTE PTR [rax],al
  4561d0:	pop    rsp
  4561d1:	(bad)  
  4561d2:	add    eax,0x862000
  4561d7:	add    BYTE PTR [rcx],ah
  4561d9:	xchg   BYTE PTR [rax],al
  4561db:	add    BYTE PTR [rax-0x7e],ah
  4561de:	add    eax,0x863000
  4561e3:	add    BYTE PTR [rcx],dh
  4561e5:	xchg   BYTE PTR [rax],al
  4561e7:	add    BYTE PTR [rdx+rax*4+0x5],ah
  4561eb:	add    BYTE PTR [rax-0x7a],al
  4561ee:	add    BYTE PTR [rax],al
  4561f0:	xchg   BYTE PTR [r8],al
  4561f3:	add    BYTE PTR [rax-0x7e],ch
  4561f6:	add    eax,0x865000
  4561fb:	add    BYTE PTR [rcx-0x79],dh
  4561fe:	add    BYTE PTR [rax],al
  456200:	ins    BYTE PTR es:[rdi],dx
  456201:	(bad)  
  456202:	add    eax,0x878000
  456207:	add    BYTE PTR [rcx+0x7c000087],bh
  45620d:	(bad)  
  45620e:	add    eax,0x87c000
  456213:	add    ah,cl
  456215:	xchg   DWORD PTR [rax],eax
  456217:	add    BYTE PTR [rax-0x2ffffa7e],cl
  45621d:	xchg   DWORD PTR [rax],eax
  45621f:	add    bh,ah
  456221:	xchg   DWORD PTR [rax],eax
  456223:	add    BYTE PTR [rdx+rax*4-0x780ffffb],cl
  45622a:	add    BYTE PTR [rax],al
  45622c:	test   eax,0x94000088
  456231:	(bad)  
  456232:	add    eax,0x88b000
  456237:	add    BYTE PTR [rbx],ah
  456239:	mov    WORD PTR [rax],es
  45623b:	add    BYTE PTR [rdx+rax*4-0x73cffffb],ah
  456242:	add    BYTE PTR [rax],al
  456244:	rex.RX lea r8d,[rax]
  456247:	add    BYTE PTR [rdx+rax*4-0x72affffb],bh
  45624e:	add    BYTE PTR [rax],al
  456250:	xchg   edi,eax
  456251:	lea    eax,[rax]
  456253:	add    ah,dl
  456255:	(bad)  
  456256:	add    eax,0x8da000
  45625b:	add    BYTE PTR [rax-0x72],al
  45625e:	add    BYTE PTR [rax],al
  456260:	fadd   DWORD PTR [rdx-0x71bffffb]
  456266:	add    BYTE PTR [rax],al
  456268:	sbb    DWORD PTR [rax-0x7d1c0000],edx
  45626e:	add    eax,0x902000
  456273:	add    BYTE PTR [rax+rdx*4+0x0],cl
  456277:	add    al,bh
  456279:	(bad)  
  45627a:	add    eax,0x905000
  45627f:	add    dl,bl
  456281:	nop
  456282:	add    BYTE PTR [rax],al
  456284:	add    BYTE PTR [rbx-0x6f1ffffb],al
  45628a:	add    BYTE PTR [rax],al
  45628c:	ficom  WORD PTR [rcx-0x7cf00000]
  456292:	add    eax,0x91e000
  456297:	add    BYTE PTR [rdi+0x20000092],cl
  45629d:	add    DWORD PTR [rip+0x929000],0x0        # 0xd7f2a4
  4562a4:	adc    dl,BYTE PTR [rbx-0x7cd40000]
  4562aa:	add    eax,0x932000
  4562af:	add    BYTE PTR [rsi+0x34000093],dl
  4562b5:	add    DWORD PTR [rip+0x93a000],0x0        # 0xd902bc
  4562bc:	jmp    0x3c456354
  4562c1:	add    DWORD PTR [rip+0x93f000],0x0        # 0xd952c8
  4562c8:	rex.RB xchg r12d,eax
  4562ca:	add    BYTE PTR [rax],al
  4562cc:	rex.R add DWORD PTR [rip+0x945000],0x0        # 0xd9b2d4
  4562d4:	mov    dh,0x94
  4562d6:	add    BYTE PTR [rax],al
  4562d8:	add    QWORD PTR [rip+0x94c000],0x0        # 0xda22e0
  4562e0:	and    DWORD PTR [rbp-0x7ca80000],edx
  4562e6:	add    eax,0x953000
  4562eb:	add    BYTE PTR [rsi+0x64000095],dh
  4562f1:	add    DWORD PTR [rip+0x95c000],0x0        # 0xdb22f8
  4562f8:	pop    rbx
  4562f9:	xchg   esi,eax
  4562fa:	add    BYTE PTR [rax],al
  4562fc:	jo     0x456281
  4562fe:	add    eax,0x966000
  456303:	add    al,al
  456305:	xchg   esi,eax
  456306:	add    BYTE PTR [rax],al
  456308:	js     0x45628d
  45630a:	add    eax,0x96c000
  45630f:	add    BYTE PTR [rdi-0x69],dl
  456312:	add    BYTE PTR [rax],al
  456314:	test   BYTE PTR [rbx-0x689ffffb],al
  45631a:	add    BYTE PTR [rax],al
  45631c:	xor    bl,BYTE PTR [rax-0x7c700000]
  456322:	add    eax,0x984000
  456327:	add    dl,ch
  456329:	mov    ebx,0x83a40000
  45632e:	add    eax,0xbbf000
  456333:	add    BYTE PTR [rbx-0x44],dh
  456336:	add    BYTE PTR [rax],al
  456338:	mov    esp,0x80000583
  45633d:	mov    esp,0xbc9c0000
  456342:	add    BYTE PTR [rax],al
  456344:	enter  0x583,0x0
  456348:	movabs al,ds:0xd00000bca70000bc
  456351:	add    DWORD PTR [rip+0xbcb000],0x0        # 0x1021358
  456358:	mov    eax,0xd40000bc
  45635d:	add    DWORD PTR [rip+0xbcc000],0x0        # 0x1022364
  456364:	enter  0xbc,0x0
  456368:	fadd   DWORD PTR [rbx-0x432ffffb]
  45636e:	add    BYTE PTR [rax],al
  456370:	xlat   BYTE PTR ds:[rbx]
  456371:	mov    esp,0x83dc0000
  456376:	add    eax,0xbce000
  45637b:	add    al,ch
  45637d:	mov    esp,0x83e00000
  456382:	add    eax,0xbcf000
  456387:	add    bh,dh
  456389:	mov    esp,0x83e40000
  45638e:	add    eax,0xbd0000
  456393:	add    BYTE PTR [rax],cl
  456395:	mov    ebp,0x83e80000
  45639a:	add    eax,0xbd1000
  45639f:	add    BYTE PTR [rax],bl
  4563a1:	mov    ebp,0x83ec0000
  4563a6:	add    eax,0xbd2000
  4563ab:	add    BYTE PTR [rdi],ah
  4563ad:	mov    ebp,0x83f00000
  4563b2:	add    eax,0xbd3000
  4563b7:	add    BYTE PTR [rdi],dh
  4563b9:	mov    ebp,0x83f40000
  4563be:	add    eax,0xbd4000
  4563c3:	add    bh,bl
  4563c5:	mov    ebp,0x83f80000
  4563ca:	add    eax,0xbde000
  4563cf:	add    ch,ah
  4563d1:	mov    ebp,0x84040000
  4563d6:	add    eax,0xbdf000
  4563db:	add    ch,dh
  4563dd:	mov    ebp,0x84080000
  4563e2:	add    eax,0xbe0000
  4563e7:	add    BYTE PTR [rip+0xc0000be],al        # 0xc4564ab
  4563ed:	test   BYTE PTR [rip+0xbe1000],al        # 0x10373f3
  4563f3:	add    BYTE PTR [rsi-0x42],dl
  4563f6:	add    BYTE PTR [rax],al
  4563f8:	adc    BYTE PTR [rbp+rax*1+0xbe6000],al
  4563ff:	add    BYTE PTR [rsi+0x180000be],dh
  456405:	test   BYTE PTR [rip+0xbec000],al        # 0x104240b
  45640b:	add    BYTE PTR [rdi-0x40],dl
  45640e:	add    BYTE PTR [rax],al
  456410:	and    al,0x84
  456412:	add    eax,0xc06000
  456417:	add    BYTE PTR [rax+0x300000c0],dh
  45641d:	test   BYTE PTR [rip+0xc0b000],al        # 0x1061423
  456423:	add    ch,ch
  456425:	rol    BYTE PTR [rax],0x0
  456428:	cmp    BYTE PTR [rbp+rax*1+0xc0f000],al
  45642f:	add    BYTE PTR [rax-0x36],ah
  456432:	add    BYTE PTR [rax],al
  456434:	test   BYTE PTR [rip+0xca6000],al        # 0x10fc43b
  45643b:	add    BYTE PTR [rcx+0x5c0000ca],bl
  456441:	test   BYTE PTR [rip+0xcaa000],al        # 0x1100447
  456447:	add    BYTE PTR [rcx+0x640000ca],ch
  45644d:	test   BYTE PTR [rip+0xcab000],al        # 0x1101453
  456453:	add    BYTE PTR [rbx],cl
  456455:	retf   
  456456:	add    BYTE PTR [rax],al
  456458:	push   0x10000584
  45645d:	retf   
  45645e:	add    BYTE PTR [rax],al
  456460:	mov    cl,ch
  456462:	add    BYTE PTR [rax],al
  456464:	je     0x4563ea
  456466:	add    eax,0xcd9000
  45646b:	add    bl,bl
  45646d:	int    0x0
  45646f:	add    BYTE PTR [rax-0x1ffffa7c],cl
  456475:	int    0x0
  456477:	add    BYTE PTR [rdx],bl
  456479:	(bad)  
  45647a:	add    BYTE PTR [rax],al
  45647c:	nop
  45647d:	test   BYTE PTR [rip+0xce2000],al        # 0x1138483
  456483:	add    BYTE PTR [rax-0x32],dl
  456486:	add    BYTE PTR [rax],al
  456488:	cwde   
  456489:	test   BYTE PTR [rip+0xce5000],al        # 0x113b48f
  45648f:	add    ch,ah
  456491:	fadd   DWORD PTR [rax]
  456493:	add    BYTE PTR [rsp+rax*4-0x270ffffb],ah
  45649a:	add    BYTE PTR [rax],al
  45649c:	sub    edx,ebx
  45649e:	add    BYTE PTR [rax],al
  4564a0:	mov    eax,0x30000584
  4564a5:	fiadd  DWORD PTR [rax]
  4564a7:	add    dl,dh
  4564a9:	fld    QWORD PTR [rax]
  4564ab:	add    ah,cl
  4564ad:	test   BYTE PTR [rip+0xde0000],al        # 0x12364b3
  4564b3:	add    BYTE PTR [rsi],dl
  4564b5:	fiadd  WORD PTR [rax]
  4564b7:	add    al,ch
  4564b9:	test   BYTE PTR [rip+0xde2000],al        # 0x12384bf
  4564bf:	add    BYTE PTR [rsi],dh
  4564c1:	fiadd  WORD PTR [rax]
  4564c3:	add    ah,ch
  4564c5:	test   BYTE PTR [rip+0xde4000],al        # 0x123a4cb
  4564cb:	add    BYTE PTR [rsi-0x22],dl
  4564ce:	add    BYTE PTR [rax],al
  4564d0:	lock test BYTE PTR [rip+0xde6000],al        # 0x123c4d7
  4564d7:	add    BYTE PTR [rdx],ah
  4564d9:	fild   WORD PTR [rax]
  4564db:	add    ah,dh
  4564dd:	test   BYTE PTR [rip+0xdf3000],al        # 0x12494e3
  4564e3:	add    BYTE PTR [rbx-0x21],cl
  4564e6:	add    BYTE PTR [rax],al
  4564e8:	cld    
  4564e9:	test   BYTE PTR [rip+0xdf5000],al        # 0x124b4ef
  4564ef:	add    BYTE PTR [rbx-0x21],ch
  4564f2:	add    BYTE PTR [rax],al
  4564f4:	add    al,0x85
  4564f6:	add    eax,0xdf7000
  4564fb:	add    BYTE PTR [rbx+0xc0000df],cl
  456501:	test   DWORD PTR [rip+0xdf9000],eax        # 0x124f507
  456507:	add    BYTE PTR [rbx+0x140000df],ch
  45650d:	test   DWORD PTR [rip+0xdfb000],eax        # 0x1251513
  456513:	add    bl,cl
  456515:	fild   WORD PTR [rax]
  456517:	add    BYTE PTR [rax*4-0x202ffffb],bl
  45651e:	add    BYTE PTR [rax],al
  456520:	lock fild WORD PTR [rax]
  456523:	add    BYTE PTR [rax*4-0x200ffffb],ah
  45652a:	add    BYTE PTR [rax],al
  45652c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  45652d:	loopne 0x45652f
  45652f:	add    BYTE PTR [rax*4-0x1f4ffffb],ch
  456536:	add    BYTE PTR [rax],al
  456538:	int    0xe1
  45653a:	add    BYTE PTR [rax],al
  45653c:	cmp    BYTE PTR [rbp-0x1e2ffffb],al
  456542:	add    BYTE PTR [rax],al
  456544:	test   edx,esp
  456546:	add    BYTE PTR [rax],al
  456548:	test   QWORD PTR [rip+0xe29000],rax        # 0x127f54f
  45654f:	add    BYTE PTR [rbx-0x1d],al
  456552:	add    BYTE PTR [rax],al
  456554:	push   rax
  456555:	test   DWORD PTR [rip+0xe35000],eax        # 0x128b55b
  45655b:	add    bl,ah
  45655d:	jrcxz  0x45655f
  45655f:	add    BYTE PTR [rax-0x7b],bl
  456562:	add    eax,0xe3f000
  456567:	add    BYTE PTR [rbx-0x1c],dl
  45656a:	add    BYTE PTR [rax],al
  45656c:	(bad)  
  45656d:	test   DWORD PTR [rip+0xe46000],eax        # 0x129c573
  456573:	add    bl,al
  456575:	in     al,0x0
  456577:	add    BYTE PTR [rax-0x7b],ch
  45657a:	add    eax,0xe4d000
  45657f:	add    BYTE PTR [rsi-0x77ffff16],cl
  456585:	test   DWORD PTR [rip+0xea9000],eax        # 0x12ff58b
  45658b:	add    al,bl
  45658d:	(bad)  
  45658e:	add    BYTE PTR [rax],al
  456590:	movabs al,ds:0x120000eae0000585
  456599:	jmp    0x45659b
  45659b:	add    BYTE PTR [rax+0x20000585],ch
  4565a1:	jmp    0x4565a3
  4565a3:	add    BYTE PTR [rbx+rbp*8+0x0],ch
  4565a7:	add    BYTE PTR [rax+0x70000585],dh
  4565ad:	jmp    0x4565af
  4565af:	add    BYTE PTR [rdx-0x43ffff14],cl
  4565b5:	test   DWORD PTR [rip+0xec9000],eax        # 0x131f5bb
  4565bb:	add    ch,bl
  4565bd:	in     al,dx
  4565be:	add    BYTE PTR [rax],al
  4565c0:	enter  0x585,0x0
  4565c4:	loopne 0x4565b2
  4565c6:	add    BYTE PTR [rax],al
  4565c8:	cmp    al,0xed
  4565ca:	add    BYTE PTR [rax],al
  4565cc:	rol    BYTE PTR [rbp-0x12bffffb],1
  4565d2:	add    BYTE PTR [rax],al
  4565d4:	(bad)  
  4565d5:	in     eax,dx
  4565d6:	add    BYTE PTR [rax],al
  4565d8:	fadd   QWORD PTR [rbp-0x126ffffb]
  4565de:	add    BYTE PTR [rax],al
  4565e0:	push   rdx
  4565e1:	out    dx,al
  4565e2:	add    BYTE PTR [rax],al
  4565e4:	call   0x60456b6e
  4565e9:	out    dx,al
  4565ea:	add    BYTE PTR [rax],al
  4565ec:	or     edi,ebp
  4565ee:	add    BYTE PTR [rax],al
  4565f0:	clc    
  4565f1:	test   DWORD PTR [rip+0xef1000],eax        # 0x13475f7
  4565f7:	add    BYTE PTR [rdx],bl
  4565f9:	lock add BYTE PTR [rax],al
  4565fc:	add    al,0x86
  4565fe:	add    eax,0xf02000
  456603:	add    BYTE PTR [rax+rsi*8],ch
  456606:	add    BYTE PTR [rax],al
  456608:	adc    al,0x86
  45660a:	add    eax,0xf03000
  45660f:	add    BYTE PTR [rax],dl
  456611:	icebp  
  456612:	add    BYTE PTR [rax],al
  456614:	sbb    BYTE PTR [rsi-0xeeffffb],al
  45661a:	add    BYTE PTR [rax],al
  45661c:	fdiv   st,st(1)
  45661e:	add    BYTE PTR [rax],al
  456620:	and    al,0x86
  456622:	add    eax,0xf1e000
  456627:	add    bh,bh
  456629:	icebp  
  45662a:	add    BYTE PTR [rax],al
  45662c:	xor    BYTE PTR [rsi-0xdfffffb],al
  456632:	add    BYTE PTR [rax],al
  456634:	ins    DWORD PTR es:[rdi],dx
  456635:	repnz add BYTE PTR [rax],al
  456638:	cmp    BYTE PTR [rsi-0xd8ffffb],al
  45663e:	add    BYTE PTR [rax],al
  456640:	xor    dh,bl
  456642:	add    BYTE PTR [rax],al
  456644:	xchg   BYTE PTR [rip+0xf34000],al        # 0x138a64b
  45664b:	add    BYTE PTR [rsi*8-0x79b40000],ah
  456652:	add    eax,0xf53000
  456657:	add    cl,bh
  456659:	cmc    
  45665a:	add    BYTE PTR [rax],al
  45665c:	(bad)  
  45665d:	xchg   BYTE PTR [rip+0xf60000],al        # 0x13b6663
  456663:	add    BYTE PTR [rip+0x6c0000f7],al        # 0x6c456760
  456669:	xchg   BYTE PTR [rip+0xf71000],al        # 0x13c766f
  45666f:	add    BYTE PTR [rdi+0x7c0000f8],bl
  456675:	xchg   BYTE PTR [rip+0xf8a000],al        # 0x13e067b
  45667b:	add    bl,bh
  45667d:	clc    
  45667e:	add    BYTE PTR [rax],al
  456680:	mov    BYTE PTR [rsi-0x6fffffb],al
  456686:	add    BYTE PTR [rax],al
  456688:	ds cld 
  45668a:	add    BYTE PTR [rax],al
  45668c:	xchg   esp,eax
  45668d:	xchg   BYTE PTR [rip+0xfc4000],al        # 0x141a693
  456693:	add    BYTE PTR [rax],cl
  456695:	inc    DWORD PTR [rax]
  456697:	add    BYTE PTR [rsi+rax*4-0xeffffb],ch
  45669e:	add    BYTE PTR [rax],al
  4566a0:	inc    WORD PTR [rax]
  4566a3:	add    ah,al
  4566a5:	xchg   BYTE PTR [rip+0xff7000],al        # 0x144d6ab
  4566ab:	add    BYTE PTR [rbp-0x33ffff01],dh
  4566b1:	xchg   BYTE PTR [rip+0xffc000],al        # 0x14526b7
  4566b7:	add    dl,ah
  4566b9:	inc    DWORD PTR [rax]
  4566bb:	add    al,bl
  4566bd:	xchg   BYTE PTR [rip+0xfff000],al        # 0x14556c3
  4566c3:	add    BYTE PTR [rdx+0x1],al
  4566c6:	add    DWORD PTR [rax],eax
  4566c8:	fadd   QWORD PTR [rsi+0x1500005]
  4566ce:	add    DWORD PTR [rax],eax
  4566d0:	enter  0x101,0x0
  4566d4:	in     al,dx
  4566d5:	xchg   BYTE PTR [rip+0x101d000],al        # 0x14736db
  4566db:	add    BYTE PTR [rdx-0xbfffefe],cl
  4566e1:	xchg   BYTE PTR [rip+0x1029000],al        # 0x147f6e7
  4566e7:	add    bh,ah
  4566e9:	add    al,BYTE PTR [rcx]
  4566eb:	add    BYTE PTR [rax],cl
  4566ed:	xchg   DWORD PTR [rip+0x102f000],eax        # 0x14856f3
  4566f3:	add    BYTE PTR [rcx+0xb],ch
  4566f6:	add    DWORD PTR [rax],eax
  4566f8:	adc    BYTE PTR [rdi+0xb700005],al
  4566fe:	add    DWORD PTR [rax],eax
  456700:	mul    BYTE PTR [rax]
  456702:	add    DWORD PTR [rax],eax
  456704:	sub    BYTE PTR [rdi+0x21000005],al
  45670a:	add    DWORD PTR [rax],eax
  45670c:	(bad)  
  45670d:	and    DWORD PTR [rcx],eax
  45670f:	add    BYTE PTR [rax-0x79],al
  456712:	add    eax,0x121a000
  456717:	add    BYTE PTR [rip+0x50000122],dl        # 0x5045683f
  45671d:	xchg   DWORD PTR [rip+0x1222000],eax        # 0x1678723
  456723:	add    BYTE PTR [rdx+riz*1-0x789fffff],bh
  45672a:	add    eax,0x122c000
  45672f:	add    BYTE PTR [rax],dl
  456731:	and    eax,DWORD PTR [rcx]
  456733:	add    BYTE PTR [rdi+rax*4+0x5],ch
  456737:	add    BYTE PTR [rax],dl
  456739:	and    eax,DWORD PTR [rcx]
  45673b:	add    BYTE PTR [rax+0x23],dl
  45673e:	add    DWORD PTR [rax],eax
  456740:	js     0x4566c9
  456742:	add    eax,0x1235000
  456747:	add    BYTE PTR [rax+0x24],bl
  45674a:	add    DWORD PTR [rax],eax
  45674c:	test   BYTE PTR [rdi+0x24600005],al
  456752:	add    DWORD PTR [rax],eax
  456754:	sahf   
  456755:	add    DWORD PTR [r8],eax
  456758:	nop
  456759:	xchg   DWORD PTR [rip+0x141a000],eax        # 0x187075f
  45675f:	add    BYTE PTR [rax+0x46],cl
  456762:	add    DWORD PTR [rax],eax
  456764:	test   al,0x87
  456766:	add    eax,0x1465000
  45676b:	add    BYTE PTR [rdi+rax*2],ah
  45676e:	add    DWORD PTR [rax],eax
  456770:	rol    BYTE PTR [rdi+0x47300005],0x1
  456777:	add    BYTE PTR [rbx+0x47],al
  45677a:	add    DWORD PTR [rax],eax
  45677c:	int3   
  45677d:	xchg   DWORD PTR [rip+0x1475000],eax        # 0x18cb783
  456783:	add    BYTE PTR [rax-0x17fffeb9],al
  456789:	xchg   DWORD PTR [rip+0x1478000],eax        # 0x18ce78f
  45678f:	add    BYTE PTR [rcx+0x48],ch
  456792:	add    DWORD PTR [rax],eax
  456794:	hlt    
  456795:	xchg   DWORD PTR [rip+0x1487000],eax        # 0x18dd79b
  45679b:	add    BYTE PTR [rax+rcx*2-0x77f3ffff],ch
  4567a2:	add    eax,0x148b000
  4567a7:	add    BYTE PTR [rcx+rcx*2-0x77efffff],dh
  4567ae:	add    eax,0x149c000
  4567b3:	add    BYTE PTR [rdx+0x73],cl
  4567b6:	add    DWORD PTR [rax],eax
  4567b8:	sbb    al,0x88
  4567ba:	add    eax,0x1735000
  4567bf:	add    BYTE PTR [rax],bl
  4567c1:	jne    0x4567c4
  4567c3:	add    BYTE PTR [rax+rcx*4],dh
  4567c6:	add    eax,0x1752000
  4567cb:	add    BYTE PTR [rbx+0x77],dh
  4567ce:	add    DWORD PTR [rax],eax
  4567d0:	rex.WR mov BYTE PTR [rip+0x1778000],r8b        # 0x1bce7d7
  4567d7:	add    BYTE PTR [rbx+0x6000017d],ch
  4567dd:	mov    BYTE PTR [rip+0x17db000],al        # 0x1c317e3
  4567e3:	add    BYTE PTR [rcx-0x80],al
  4567e6:	add    DWORD PTR [rax],eax
  4567e8:	js     0x456772
  4567ea:	add    eax,0x1805000
  4567ef:	add    BYTE PTR [rdx+rax*4],dl
  4567f2:	add    DWORD PTR [rax],eax
  4567f4:	nop
  4567f5:	mov    BYTE PTR [rip+0x1822000],al        # 0x1c787fb
  4567fb:	add    BYTE PTR [rcx-0x7c],ch
  4567fe:	add    DWORD PTR [rax],eax
  456800:	test   al,0x88
  456802:	add    eax,0x1847000
  456807:	add    BYTE PTR [rdx-0x7a],ch
  45680a:	add    DWORD PTR [rax],eax
  45680c:	ror    BYTE PTR [rax-0x798ffffb],0x1
  456813:	add    dl,al
  456815:	mov    BYTE PTR [rcx],al
  456817:	add    ah,dl
  456819:	mov    BYTE PTR [rip+0x188d000],al        # 0x1ce381f
  45681f:	add    BYTE PTR [rdi-0x73],bh
  456822:	add    DWORD PTR [rax],eax
  456824:	call   0xffffffff80456db1
  456829:	lea    eax,[rcx]
  45682b:	add    BYTE PTR [rcx-0x71],ah
  45682e:	add    DWORD PTR [rax],eax
  456830:	add    BYTE PTR [rcx-0x708ffffb],cl
  456836:	add    DWORD PTR [rax],eax
  456838:	pop    rsp
  456839:	xchg   esi,eax
  45683a:	add    DWORD PTR [rax],eax
  45683c:	adc    al,0x89
  45683e:	add    eax,0x1966000
  456843:	add    BYTE PTR [rax-0x68],al
  456846:	add    DWORD PTR [rax],eax
  456848:	sub    al,0x89
  45684a:	add    eax,0x1984000
  45684f:	add    BYTE PTR [rbp+rbx*4+0x1],bh
  456853:	add    BYTE PTR [rax-0x77],al
  456856:	add    eax,0x19d8000
  45685b:	add    BYTE PTR [rax+0x5800019f],bl
  456861:	mov    DWORD PTR [rip+0x19fa000],eax        # 0x1e50867
  456867:	add    bl,ah
  456869:	movabs eax,ds:0xa1f0000589700001
  456872:	add    DWORD PTR [rax],eax
  456874:	std    
  456875:	movabs ds:0xa400000589880001,eax
  45687e:	add    DWORD PTR [rax],eax
  456880:	(bad)  [rbp-0x765fffff]
  456886:	add    eax,0x1a5e000
  45688b:	add    BYTE PTR [rcx],ch
  45688d:	test   al,0x1
  45688f:	add    BYTE PTR [rax+0x30000589],bh
  456895:	test   al,0x1
  456897:	add    BYTE PTR [rbx-0x56],ch
  45689a:	add    DWORD PTR [rax],eax
  45689c:	ror    BYTE PTR [rcx-0x558ffffb],1
  4568a2:	add    DWORD PTR [rax],eax
  4568a4:	and    al,0xac
  4568a6:	add    DWORD PTR [rax],eax
  4568a8:	call   0x30456e36
  4568ad:	lods   al,BYTE PTR ds:[rsi]
  4568ae:	add    DWORD PTR [rax],eax
  4568b0:	add    esi,DWORD PTR [rbx-0x75ffffff]
  4568b6:	add    eax,0x1b31000
  4568bb:	add    bh,dh
  4568bd:	mov    ah,0x1
  4568bf:	add    BYTE PTR [rax],bl
  4568c1:	mov    al,BYTE PTR [rip+0x1b50000]        # 0x1fa68c7
  4568c7:	add    BYTE PTR [rbx],al
  4568c9:	mov    bh,0x1
  4568cb:	add    BYTE PTR [rax],dh
  4568cd:	mov    al,BYTE PTR [rip+0x1b71000]        # 0x1fc78d3
  4568d3:	add    BYTE PTR [rdx],dl
  4568d5:	mov    esp,0x8a440001
  4568da:	add    eax,0x1bc2000
  4568df:	add    BYTE PTR [rax+0x5c0001be],bl
  4568e5:	mov    al,BYTE PTR [rip+0x1bea000]        # 0x20408eb
  4568eb:	add    bl,cl
  4568ed:	rol    BYTE PTR [rcx],0x0
  4568f0:	je     0x45687c
  4568f2:	add    eax,0x1c0d000
  4568f7:	add    BYTE PTR [rsi-0x73fffe3e],bl
  4568fd:	mov    al,BYTE PTR [rip+0x1c2a000]        # 0x2080903
  456903:	add    BYTE PTR [rbp-0x5ffffe3c],dl
  456909:	mov    al,BYTE PTR [rip+0x1c4a000]        # 0x20a090f
  45690f:	add    BYTE PTR [rbx-0x3a],al
  456912:	add    DWORD PTR [rax],eax
  456914:	mov    eax,0x5000058a
  456919:	mov    BYTE PTR [rcx],0x0
  45691c:	rex.RXB enter 0x1,0xcc
  456921:	mov    al,BYTE PTR [rip+0x1c85000]        # 0x20db927
  456927:	add    BYTE PTR [rdx-0x38],bh
  45692a:	add    DWORD PTR [rax],eax
  45692c:	fmul   QWORD PTR [rdx-0x377ffffb]
  456932:	add    DWORD PTR [rax],eax
  456934:	fmul   st(0),st
  456936:	add    DWORD PTR [rax],eax
  456938:	in     al,0x8a
  45693a:	add    eax,0x1c8e000
  45693f:	add    BYTE PTR [rdi-0x36],bh
  456942:	add    DWORD PTR [rax],eax
  456944:	hlt    
  456945:	mov    al,BYTE PTR [rip+0x1ca8000]        # 0x20fe94b
  45694b:	add    ah,ch
  45694d:	int3   
  45694e:	add    DWORD PTR [rax],eax
  456950:	or     al,0x8b
  456952:	add    eax,0x1ccf000
  456957:	add    BYTE PTR [rax],bh
  456959:	iret   
  45695a:	add    DWORD PTR [rax],eax
  45695c:	and    al,0x8b
  45695e:	add    eax,0x1cf4000
  456963:	add    BYTE PTR [rdx-0x31],dh
  456966:	add    DWORD PTR [rax],eax
  456968:	xor    BYTE PTR [rbx-0x307ffffb],cl
  45696e:	add    DWORD PTR [rax],eax
  456970:	adc    al,dl
  456972:	add    DWORD PTR [rax],eax
  456974:	cmp    BYTE PTR [rbx-0x2feffffb],cl
  45697a:	add    DWORD PTR [rax],eax
  45697c:	jb     0x45694e
  45697e:	add    DWORD PTR [rax],eax
  456980:	mov    r8d,DWORD PTR [rip+0x1d08000]        # 0x215e987
  456987:	add    BYTE PTR [rcx+rdx*8-0x74afffff],al
  45698e:	add    eax,0x1d19000
  456993:	add    BYTE PTR [rcx],dl
  456995:	rol    BYTE PTR [rcx],cl
  456997:	add    BYTE PTR [rbx+rcx*4+0x5],bl
  45699b:	add    BYTE PTR [rax],ah
  45699d:	rol    BYTE PTR [rcx],cl
  45699f:	add    BYTE PTR [rbx],ah
  4569a1:	rol    DWORD PTR [rcx],cl
  4569a3:	add    BYTE PTR [rbx+rcx*4+0x5],ch
  4569a7:	add    BYTE PTR [rax],dh
  4569a9:	rol    DWORD PTR [rcx],cl
  4569ab:	add    BYTE PTR [rsp+rdx*8],ah
  4569ae:	add    DWORD PTR [rax],eax
  4569b0:	jl     0x45693d
  4569b2:	add    eax,0x1d43000
  4569b7:	add    ah,bl
  4569b9:	(bad)  
  4569ba:	add    DWORD PTR [rax],eax
  4569bc:	mov    WORD PTR [rbx-0x2b1ffffb],cs
  4569c2:	add    DWORD PTR [rax],eax
  4569c4:	(bad)  
  4569c5:	(bad)  
  4569c6:	add    DWORD PTR [rax],eax
  4569c8:	pushf  
  4569c9:	mov    eax,DWORD PTR [rip+0x1d5a000]        # 0x21b09cf
  4569cf:	add    dh,dh
  4569d1:	(bad)  
  4569d2:	add    DWORD PTR [rax],eax
  4569d4:	lods   al,BYTE PTR ds:[rsi]
  4569d5:	mov    eax,DWORD PTR [rip+0x1d70000]        # 0x21c69db
  4569db:	add    BYTE PTR [rbx],cl
  4569dd:	call   0xffffffff8c0169e3
  4569e2:	add    eax,0x1e81000
  4569e7:	add    BYTE PTR [rdi],ah
  4569e9:	call   0xffffffff8c1969ef
  4569ee:	add    eax,0x1e83000
  4569f3:	add    cl,ah
  4569f5:	call   0xffffffff8c2169fb
  4569fa:	add    eax,0x1e8f000
  4569ff:	add    BYTE PTR [rbp+rbp*8-0x7413ffff],bh
  456a06:	add    eax,0x1edc000
  456a0b:	add    ch,dl
  456a0d:	in     eax,dx
  456a0e:	add    DWORD PTR [rax],eax
  456a10:	add    al,0x8c
  456a12:	add    eax,0x1ede000
  456a17:	add    BYTE PTR [rbx+0x80001ee],ch
  456a1d:	mov    WORD PTR [rip+0x1eeb000],es        # 0x2341a23
  456a23:	add    BYTE PTR [rdi],cl
  456a25:	out    dx,eax
  456a26:	add    DWORD PTR [rax],eax
  456a28:	and    BYTE PTR [rbp+rax*1+0x1ef1000],cl
  456a2f:	add    BYTE PTR [rcx-0x11],bl
  456a32:	add    DWORD PTR [rax],eax
  456a34:	sub    al,0x8c
  456a36:	add    eax,0x1ef6000
  456a3b:	add    BYTE PTR [rip+0x380001f0],ch        # 0x38456c31
  456a41:	mov    WORD PTR [rip+0x1f03000],es        # 0x2359a47
  456a47:	add    BYTE PTR [rax+rsi*8],bh
  456a4a:	add    DWORD PTR [rax],eax
  456a4c:	rex.W mov WORD PTR [rip+0x1f04000],es        # 0x235aa53
  456a53:	add    bh,bh
  456a55:	lock add DWORD PTR [rax],eax
  456a58:	rex.WR mov WORD PTR [rip+0x1f10000],es        # 0x2366a5f
  456a5f:	add    BYTE PTR [rsi-0xf],al
  456a62:	add    DWORD PTR [rax],eax
  456a64:	push   rsp
  456a65:	mov    WORD PTR [rip+0x1f15000],es        # 0x236ba6b
  456a6b:	add    BYTE PTR [rsi+0x5c0001f1],dl
  456a71:	mov    WORD PTR [rip+0x1f1a000],es        # 0x2370a77
  456a77:	add    BYTE PTR [rdi-0xe],dl
  456a7a:	add    DWORD PTR [rax],eax
  456a7c:	mov    WORD PTR fs:[rip+0x1f26000],es        # 0x237ca83
  456a83:	add    bl,cl
  456a85:	repnz add DWORD PTR [rax],eax
  456a88:	ins    BYTE PTR es:[rdi],dx
  456a89:	mov    WORD PTR [rip+0x1f2d000],es        # 0x2383a8f
  456a8f:	add    BYTE PTR [rax+0x740001f3],al
  456a95:	mov    WORD PTR [rip+0x1f38000],es        # 0x238ea9b
  456a9b:	add    dl,al
  456a9d:	repz add DWORD PTR [rax],eax
  456aa0:	jl     0x456a2e
  456aa2:	add    eax,0x1f3d000
  456aa7:	add    ch,bl
  456aa9:	cmc    
  456aaa:	add    DWORD PTR [rax],eax
  456aac:	test   BYTE PTR [rbp+rax*1+0x1f5e000],cl
  456ab3:	add    BYTE PTR [rdx-0xa],cl
  456ab6:	add    DWORD PTR [rax],eax
  456ab8:	mov    WORD PTR [rbp+rax*1+0x1f65000],cs
  456abf:	add    bh,bl
  456ac1:	test   DWORD PTR [rcx],0x58c9400
  456ac7:	add    al,ah
  456ac9:	test   DWORD PTR [rcx],0x1f8fb00
  456acf:	add    BYTE PTR [rsp+rcx*4-0x6fffffb],bl
  456ad6:	add    DWORD PTR [rax],eax
  456ad8:	(bad)  
  456ad9:	stc    
  456ada:	add    DWORD PTR [rax],eax
  456adc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  456add:	mov    WORD PTR [rip+0x1f94000],es        # 0x23eaae3
  456ae3:	add    BYTE PTR [rcx-0x53fffe07],bh
  456ae9:	mov    WORD PTR [rip+0x1f9c000],es        # 0x23f2aef
  456aef:	add    ch,dh
  456af1:	stc    
  456af2:	add    DWORD PTR [rax],eax
  456af4:	mov    ah,0x8c
  456af6:	add    eax,0x1fa0000
  456afb:	add    BYTE PTR [rdx],bl
  456afd:	cli    
  456afe:	add    DWORD PTR [rax],eax
  456b00:	mov    esp,0x2000058c
  456b05:	cli    
  456b06:	add    DWORD PTR [rax],eax
  456b08:	rex.WB sti 
  456b0a:	add    DWORD PTR [rax],eax
  456b0c:	ror    BYTE PTR [rbp+rax*1+0x1fb5000],0x0
  456b14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  456b15:	sti    
  456b16:	add    DWORD PTR [rax],eax
  456b18:	enter  0x58c,0x0
  456b1c:	mov    al,0xfb
  456b1e:	add    DWORD PTR [rax],eax
  456b20:	or     al,0xfc
  456b22:	add    DWORD PTR [rax],eax
  456b24:	ror    BYTE PTR [rbp+rax*1+0x1fc1000],1
  456b2b:	add    BYTE PTR [rdi*8-0x7327ffff],dh
  456b32:	add    eax,0x1fd4000
  456b37:	add    BYTE PTR [rsi],cl
  456b39:	inc    BYTE PTR [rcx]
  456b3b:	add    al,ah
  456b3d:	mov    WORD PTR [rip+0x1fe1000],es        # 0x2437b43
  456b43:	add    BYTE PTR [rax-0x2],al
  456b46:	add    DWORD PTR [rax],eax
  456b48:	call   0x404570d9
  456b4d:	inc    BYTE PTR [rcx]
  456b4f:	add    BYTE PTR [rbp-0x2],dh
  456b52:	add    DWORD PTR [rax],eax
  456b54:	lock mov WORD PTR [rip+0x1fe8000],es        # 0x243eb5b
  456b5b:	add    BYTE PTR [rdi+rdi*8],dh
  456b5e:	add    DWORD PTR [rax],eax
  456b60:	clc    
  456b61:	mov    WORD PTR [rip+0x1ff4000],es        # 0x244ab67
  456b67:	add    BYTE PTR [rsi+0x1ff],bl
  456b6d:	lea    eax,[rip+0x1ffa000]        # 0x2450b73
  456b73:	add    dh,cl
  456b75:	inc    DWORD PTR [rcx]
  456b77:	add    BYTE PTR [rax],cl
  456b79:	lea    eax,[rip+0x1ffd000]        # 0x2453b7f
  456b7f:	add    BYTE PTR [rdx+rax*1+0x2],dh
  456b83:	add    BYTE PTR [rax],dl
  456b85:	lea    eax,[rip+0x2028000]        # 0x247eb8b
  456b8b:	add    ah,bl
  456b8d:	add    al,BYTE PTR [rdx]
  456b8f:	add    BYTE PTR [rax],bl
  456b91:	lea    eax,[rip+0x202e000]        # 0x2484b97
  456b97:	add    BYTE PTR [rax+0x20000203],ch
  456b9d:	lea    eax,[rip+0x203b000]        # 0x2491ba3
  456ba3:	add    BYTE PTR [rbx],dl
  456ba5:	add    al,0x2
  456ba7:	add    BYTE PTR [rax],ch
  456ba9:	lea    eax,[rip+0x2042000]        # 0x2498baf
  456baf:	add    BYTE PTR [rbp+0x4],dl
  456bb2:	add    al,BYTE PTR [rax]
  456bb4:	xor    BYTE PTR [rbp+0x4600005],cl
  456bba:	add    al,BYTE PTR [rax]
  456bbc:	xchg   ebp,eax
  456bbd:	add    al,0x2
  456bbf:	add    BYTE PTR [rax],bh
  456bc1:	lea    eax,[rip+0x204a000]        # 0x24a0bc7
  456bc7:	add    al,dl
  456bc9:	add    al,0x2
  456bcb:	add    BYTE PTR [rax-0x73],al
  456bce:	add    eax,0x204d000
  456bd3:	add    BYTE PTR [rbp+rax*1-0x72b7fffe],bh
  456bda:	add    eax,0x205c000
  456bdf:	add    BYTE PTR [rdi+0x6],ah
  456be2:	add    al,BYTE PTR [rax]
  456be4:	push   rax
  456be5:	lea    eax,[rip+0x2067000]        # 0x24bdbeb
  456beb:	add    BYTE PTR [rsi+rax*1-0x72a7fffe],ch
  456bf2:	add    eax,0x206b000
  456bf7:	add    BYTE PTR [rax+0x7],dl
  456bfa:	add    al,BYTE PTR [rax]
  456bfc:	(bad)  
  456bfd:	lea    eax,[rip+0x2075000]        # 0x24cbc03
  456c03:	add    BYTE PTR [rdx+0x7],ch
  456c06:	add    al,BYTE PTR [rax]
  456c08:	push   0x7000058d
  456c0d:	(bad)  
  456c0e:	add    al,BYTE PTR [rax]
  456c10:	mov    al,BYTE PTR [rdi]
  456c12:	add    al,BYTE PTR [rax]
  456c14:	ins    BYTE PTR es:[rdi],dx
  456c15:	lea    eax,[rip+0x2079000]        # 0x24cfc1b
  456c1b:	add    BYTE PTR [rdi+rax*1-0x728ffffe],bl
  456c22:	add    eax,0x207a000
  456c27:	add    BYTE PTR [rbx+0x74000207],dh
  456c2d:	lea    eax,[rip+0x207c000]        # 0x24d2c33
  456c33:	add    dl,bl
  456c35:	(bad)  
  456c36:	add    al,BYTE PTR [rax]
  456c38:	js     0x456bc7
  456c3a:	add    eax,0x207e000
  456c3f:	add    BYTE PTR [rdx],dh
  456c41:	or     al,BYTE PTR [rdx]
  456c43:	add    BYTE PTR [rbp+rcx*4+0x5],bh
  456c47:	add    BYTE PTR [rax+0xa],al
  456c4a:	add    al,BYTE PTR [rax]
  456c4c:	rex.WR or r8b,BYTE PTR [rdx]
  456c4f:	add    BYTE PTR [rbp+rcx*4+0xa500005],al
  456c56:	add    al,BYTE PTR [rax]
  456c58:	movsxd ecx,DWORD PTR [rdx]
  456c5a:	add    al,BYTE PTR [rax]
  456c5c:	mov    BYTE PTR [rbp+0xa700005],cl
  456c62:	add    al,BYTE PTR [rax]
  456c64:	jp     0x456c71
  456c66:	add    al,BYTE PTR [rax]
  456c68:	mov    WORD PTR [rbp+0xb800005],cs
  456c6e:	add    al,BYTE PTR [rax]
  456c70:	fs or  eax,0x8d940002
  456c76:	add    eax,0x20d7000
  456c7b:	add    al,al
  456c7d:	or     eax,0x8dac0002
  456c82:	add    eax,0x20dc000
  456c87:	add    BYTE PTR [rip+0xffffffffb400020e],cl        # 0xffffffffb4456e9b
  456c8d:	lea    eax,[rip+0x20e1000]        # 0x2537c93
  456c93:	add    BYTE PTR [rsi+rcx*1+0x2],cl
  456c97:	add    BYTE PTR [rbp+rcx*4+0xe500005],bh
  456c9e:	add    al,BYTE PTR [rax]
  456ca0:	mov    esp,0xc400020e
  456ca5:	lea    eax,[rip+0x20ec000]        # 0x2542cab
  456cab:	add    BYTE PTR [rip+0xffffffffcc00020f],ah        # 0xffffffffcc456ec0
  456cb1:	lea    eax,[rip+0x20f3000]        # 0x2549cb7
  456cb7:	add    BYTE PTR [rdi+rcx*1+0x2],ch
  456cbb:	add    ah,dl
  456cbd:	lea    eax,[rip+0x20f7000]        # 0x254dcc3
  456cc3:	add    BYTE PTR [rdi+rcx*1-0x7223fffe],ch
  456cca:	add    eax,0x20fb000
  456ccf:	add    al,bh
  456cd1:	lar    eax,WORD PTR [rax]
  456cd4:	in     al,0x8d
  456cd6:	add    eax,0x2100000
  456cdb:	add    BYTE PTR [rax-0x13fffdf0],ah
  456ce1:	lea    eax,[rip+0x210a000]        # 0x2560ce7
  456ce7:	add    BYTE PTR [rdi-0xbfffdef],cl
  456ced:	lea    eax,[rip+0x2119000]        # 0x256fcf3
  456cf3:	add    BYTE PTR [rdx+rdx*1],al
  456cf6:	add    al,BYTE PTR [rax]
  456cf8:	cld    
  456cf9:	lea    eax,[rip+0x2121000]        # 0x2577cff
  456cff:	add    BYTE PTR [rax+0x4000212],ah
  456d05:	mov    es,WORD PTR [rip+0x212a000]        # 0x2580d0b
  456d0b:	add    ah,ah
  456d0d:	adc    al,BYTE PTR [rdx]
  456d0f:	add    BYTE PTR [rsi+rcx*4],cl
  456d12:	add    eax,0x212f000
  456d17:	add    BYTE PTR [rbx+rdx*1+0x2],al
  456d1b:	add    BYTE PTR [rsi+rcx*4],dl
  456d1e:	add    eax,0x2135000
  456d23:	add    BYTE PTR [rbx+rdx*1-0x71e3fffe],bh
  456d2a:	add    eax,0x213c000
  456d2f:	add    BYTE PTR [rsp+rdx*1+0x2],dh
  456d33:	add    BYTE PTR [rsi+rcx*4],ah
  456d36:	add    eax,0x2148000
  456d3b:	add    BYTE PTR [rdx+0x2c000214],bl
  456d41:	mov    es,WORD PTR [rip+0x214a000]        # 0x25a0d47
  456d47:	add    BYTE PTR [rax],ah
  456d49:	adc    eax,0x8e300002
  456d4e:	add    eax,0x2152000
  456d53:	add    BYTE PTR [rsi+0x15],bh
  456d56:	add    al,BYTE PTR [rax]
  456d58:	cmp    BYTE PTR [rsi+0x15800005],cl
  456d5e:	add    al,BYTE PTR [rax]
  456d60:	leave  
  456d61:	adc    eax,0x8e400002
  456d66:	add    eax,0x215d000
  456d6b:	add    BYTE PTR [rsi+rdx*1],bh
  456d6e:	add    al,BYTE PTR [rax]
  456d70:	rex.W mov es,WORD PTR [rip+0x2164000]        # 0x25bad77
  456d77:	add    BYTE PTR [rsi+rdx*1-0x71affffe],dl
  456d7e:	add    eax,0x216a000
  456d83:	add    BYTE PTR [rsi],ah
  456d85:	sbb    DWORD PTR [rdx],eax
  456d87:	add    BYTE PTR [rax-0x72],bl
  456d8a:	add    eax,0x2193000
  456d8f:	add    BYTE PTR [rcx+rbx*1-0x7193fffe],al
  456d96:	add    eax,0x2199000
  456d9b:	add    al,bl
  456d9d:	sbb    DWORD PTR [rdx],eax
  456d9f:	add    BYTE PTR [rsi+rcx*4+0x5],dh
  456da3:	add    al,ah
  456da5:	sbb    DWORD PTR [rdx],eax
  456da7:	add    BYTE PTR [rax],dl
  456da9:	sbb    al,BYTE PTR [rdx]
  456dab:	add    BYTE PTR [rsi+rcx*4+0x5],bh
  456daf:	add    BYTE PTR [rax],dl
  456db1:	sbb    al,BYTE PTR [rdx]
  456db3:	add    BYTE PTR [rdx+rbx*1+0x2],cl
  456db7:	add    BYTE PTR [rsi+rcx*4+0x1a500005],al
  456dbe:	add    al,BYTE PTR [rax]
  456dc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  456dc1:	sbb    al,BYTE PTR [rdx]
  456dc3:	add    BYTE PTR [rsi+rcx*4+0x1ab00005],cl
  456dca:	add    al,BYTE PTR [rax]
  456dcc:	loopne 0x456de8
  456dce:	add    al,BYTE PTR [rax]
  456dd0:	xchg   esp,eax
  456dd1:	mov    es,WORD PTR [rip+0x21ae000]        # 0x2604dd7
  456dd7:	add    BYTE PTR [rax+0x1b],bl
  456dda:	add    al,BYTE PTR [rax]
  456ddc:	pushf  
  456ddd:	mov    es,WORD PTR [rip+0x21b6000]        # 0x260cde3
  456de3:	add    dh,dh
  456de5:	sbb    al,0x2
  456de7:	add    BYTE PTR [rsi+rcx*4+0x1d000005],ah
  456dee:	add    al,BYTE PTR [rax]
  456df0:	sbb    BYTE PTR [rip+0xffffffff8eac0002],0x5        # 0xffffffff8ef16df9
  456df7:	add    BYTE PTR [rax-0x43fffde3],al
  456dfd:	sbb    eax,0x8eb40002
  456e02:	add    eax,0x21dc000
  456e07:	add    BYTE PTR [rax],cl
  456e09:	(bad)  
  456e0a:	add    al,BYTE PTR [rax]
  456e0c:	mov    esp,0x1000058e
  456e11:	(bad)  
  456e12:	add    al,BYTE PTR [rax]
  456e14:	and    ebx,DWORD PTR [rsi]
  456e16:	add    al,BYTE PTR [rax]
  456e18:	(bad)  
  456e19:	mov    es,WORD PTR [rip+0x21e3000]        # 0x2639e1f
  456e1f:	add    BYTE PTR [rdx+0x1e],cl
  456e22:	add    al,BYTE PTR [rax]
  456e24:	enter  0x58e,0x0
  456e28:	push   rax
  456e29:	(bad)  
  456e2a:	add    al,BYTE PTR [rax]
  456e2c:	mov    esp,0xcc00021e
  456e31:	mov    es,WORD PTR [rip+0x21ec000]        # 0x2642e37
  456e37:	add    ah,cl
  456e39:	(bad)  
  456e3a:	add    al,BYTE PTR [rax]
  456e3c:	(bad)  
  456e3d:	mov    es,WORD PTR [rip+0x21ed000]        # 0x2643e43
  456e43:	add    dl,ch
  456e45:	(bad)  
  456e46:	add    al,BYTE PTR [rax]
  456e48:	fmul   DWORD PTR [rsi+0x1ef00005]
  456e4e:	add    al,BYTE PTR [rax]
  456e50:	(bad)  
  456e51:	(bad)  
  456e52:	add    al,BYTE PTR [rax]
  456e54:	fmul   QWORD PTR [rsi+0x1f700005]
  456e5a:	add    al,BYTE PTR [rax]
  456e5c:	mov    bl,BYTE PTR [rdi]
  456e5e:	add    al,BYTE PTR [rax]
  456e60:	in     al,0x8e
  456e62:	add    eax,0x21f9000
  456e67:	add    BYTE PTR [rbx-0x17fffde1],ah
  456e6d:	mov    es,WORD PTR [rip+0x21fb000]        # 0x2651e73
  456e73:	add    bl,al
  456e75:	(bad)  
  456e76:	add    al,BYTE PTR [rax]
  456e78:	in     al,dx
  456e79:	mov    es,WORD PTR [rip+0x21fd000]        # 0x2653e7f
  456e7f:	add    bl,ah
  456e81:	(bad)  
  456e82:	add    al,BYTE PTR [rax]
  456e84:	lock mov es,WORD PTR [rip+0x21ff000]        # 0x2655e8b
  456e8b:	add    BYTE PTR [rbx],al
  456e8d:	and    BYTE PTR [rdx],al
  456e8f:	add    ah,dh
  456e91:	mov    es,WORD PTR [rip+0x2201000]        # 0x2657e97
  456e97:	add    BYTE PTR [rbx],ah
  456e99:	and    BYTE PTR [rdx],al
  456e9b:	add    al,bh
  456e9d:	mov    es,WORD PTR [rip+0x2203000]        # 0x2659ea3
  456ea3:	add    BYTE PTR [rbx+0x20],al
  456ea6:	add    al,BYTE PTR [rax]
  456ea8:	cld    
  456ea9:	mov    es,WORD PTR [rip+0x2205000]        # 0x265beaf
  456eaf:	add    BYTE PTR [rbx+0x20],ah
  456eb2:	add    al,BYTE PTR [rax]
  456eb4:	add    BYTE PTR [rdi+0x20700005],cl
  456eba:	add    al,BYTE PTR [rax]
  456ebc:	and    DWORD PTR [rax],0x2
  456ebf:	add    BYTE PTR [rdi+rcx*4],al
  456ec2:	add    eax,0x2209000
  456ec7:	add    ah,cl
  456ec9:	and    BYTE PTR [rdx],al
  456ecb:	add    BYTE PTR [rax],cl
  456ecd:	pop    QWORD PTR [rip+0x220d000]        # 0x2663ed3
  456ed3:	add    bl,ah
  456ed5:	and    BYTE PTR [rdx],al
  456ed7:	add    BYTE PTR [rax],dl
  456ed9:	pop    QWORD PTR [rip+0x220f000]        # 0x2665edf
  456edf:	add    BYTE PTR [rbx],al
  456ee1:	and    DWORD PTR [rdx],eax
  456ee3:	add    BYTE PTR [rdi+rcx*4],dl
  456ee6:	add    eax,0x2211000
  456eeb:	add    BYTE PTR [rbx],ah
  456eed:	and    DWORD PTR [rdx],eax
  456eef:	add    BYTE PTR [rax],bl
  456ef1:	pop    QWORD PTR [rip+0x2213000]        # 0x2669ef7
  456ef7:	add    BYTE PTR [rbx+0x21],al
  456efa:	add    al,BYTE PTR [rax]
  456efc:	sbb    al,0x8f
  456efe:	add    eax,0x2215000
  456f03:	add    BYTE PTR [rax+0x20000221],al
  456f09:	pop    QWORD PTR [rip+0x2218000]        # 0x266ef0f
  456f0f:	add    BYTE PTR [rdx+0x28000221],bl
  456f15:	pop    QWORD PTR [rip+0x221a000]        # 0x2670f1b
  456f1b:	add    BYTE PTR [rdx+0x2c000221],bh
  456f21:	pop    QWORD PTR [rip+0x221c000]        # 0x2672f27
  456f27:	add    bl,dl
  456f29:	and    DWORD PTR [rdx],eax
  456f2b:	add    BYTE PTR [rax],dh
  456f2d:	pop    QWORD PTR [rip+0x221e000]        # 0x2674f33
  456f33:	add    bl,dh
  456f35:	and    DWORD PTR [rdx],eax
  456f37:	add    BYTE PTR [rdi+rcx*4],dh
  456f3a:	add    eax,0x2220000
  456f3f:	add    BYTE PTR [rdx],bl
  456f41:	and    al,BYTE PTR [rdx]
  456f43:	add    BYTE PTR [rax],bh
  456f45:	pop    QWORD PTR [rip+0x2222000]        # 0x2678f4b
  456f4b:	add    BYTE PTR [rbx],dh
  456f4d:	and    al,BYTE PTR [rdx]
  456f4f:	add    BYTE PTR [rdi+rcx*4],bh
  456f52:	add    eax,0x2224000
  456f57:	add    BYTE PTR [rbx+0x22],dl
  456f5a:	add    al,BYTE PTR [rax]
  456f5c:	rex pop QWORD PTR [rip+0x2226000]        # 0x267cf63
  456f63:	add    BYTE PTR [rbx+0x22],dh
  456f66:	add    al,BYTE PTR [rax]
  456f68:	rex.R pop QWORD PTR [rip+0x2228000]        # 0x267ef6f
  456f6f:	add    BYTE PTR [rbx+0x48000222],dl
  456f75:	pop    QWORD PTR [rip+0x222a000]        # 0x2680f7b
  456f7b:	add    BYTE PTR [rbx+0x4c000222],dh
  456f81:	pop    QWORD PTR [rip+0x222c000]        # 0x2682f87
  456f87:	add    bl,dl
  456f89:	and    al,BYTE PTR [rdx]
  456f8b:	add    BYTE PTR [rax-0x71],dl
  456f8e:	add    eax,0x222e000
  456f93:	add    bl,dh
  456f95:	and    al,BYTE PTR [rdx]
  456f97:	add    BYTE PTR [rdi+rcx*4+0x5],dl
  456f9b:	add    BYTE PTR [rax],al
  456f9d:	and    eax,DWORD PTR [rdx]
  456f9f:	add    BYTE PTR [rbx],dl
  456fa1:	and    eax,DWORD PTR [rdx]
  456fa3:	add    BYTE PTR [rax-0x71],bl
  456fa6:	add    eax,0x2232000
  456fab:	add    BYTE PTR [rbx],dh
  456fad:	and    eax,DWORD PTR [rdx]
  456faf:	add    BYTE PTR [rdi+rcx*4+0x5],bl
  456fb3:	add    BYTE PTR [rax+0x23],al
  456fb6:	add    al,BYTE PTR [rax]
  456fb8:	pop    rdx
  456fb9:	and    eax,DWORD PTR [rdx]
  456fbb:	add    BYTE PTR [rax-0x71],ah
  456fbe:	add    eax,0x2236000
  456fc3:	add    BYTE PTR [rbx+0x23],dh
  456fc6:	add    al,BYTE PTR [rax]
  456fc8:	pop    QWORD PTR fs:[rip+0x2238000]        # 0x268efcf
  456fcf:	add    BYTE PTR [rbx+0x68000223],dl
  456fd5:	pop    QWORD PTR [rip+0x223a000]        # 0x2690fdb
  456fdb:	add    BYTE PTR [rdx+0x6c000223],bh
  456fe1:	pop    QWORD PTR [rip+0x223c000]        # 0x2692fe7
  456fe7:	add    bl,dl
  456fe9:	and    eax,DWORD PTR [rdx]
  456feb:	add    BYTE PTR [rax-0x71],dh
  456fee:	add    eax,0x223e000
  456ff3:	add    ah,ch
  456ff5:	and    eax,DWORD PTR [rdx]
  456ff7:	add    BYTE PTR [rdi+rcx*4+0x5],dh
  456ffb:	add    al,dh
  456ffd:	and    eax,DWORD PTR [rdx]
  456fff:	add    BYTE PTR [rdx],cl
  457001:	and    al,0x2
  457003:	add    BYTE PTR [rax-0x71],bh
  457006:	add    eax,0x2241000
  45700b:	add    BYTE PTR [rbp+0x24],ah
  45700e:	add    al,BYTE PTR [rax]
  457010:	jl     0x456fa1
  457012:	add    eax,0x2247000
  457017:	add    al,al
  457019:	and    al,0x2
  45701b:	add    BYTE PTR [rdi+rcx*4+0x24c00005],al
  457022:	add    al,BYTE PTR [rax]
  457024:	(bad)  
  457025:	add    al,BYTE PTR es:[rax]
  457028:	mov    WORD PTR [rdi+0x26400005],cs
  45702e:	add    al,BYTE PTR [rax]
  457030:	movabs al,ds:0xa000058f94000226
  457039:	add    al,BYTE PTR es:[rax]
  45703c:	mov    bl,0x26
  45703e:	add    al,BYTE PTR [rax]
  457040:	pushf  
  457041:	pop    QWORD PTR [rip+0x226c000]        # 0x26c3047
  457047:	add    bl,dl
  457049:	add    al,BYTE PTR es:[rax]
  45704c:	movabs al,ds:0x10000226e000058f
  457055:	(bad)  
  457056:	add    al,BYTE PTR [rax]
  457058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  457059:	pop    QWORD PTR [rip+0x2271000]        # 0x26c805f
  45705f:	add    BYTE PTR [rax+0x27],ah
  457062:	add    al,BYTE PTR [rax]
  457064:	lods   al,BYTE PTR ds:[rsi]
  457065:	pop    QWORD PTR [rip+0x2276000]        # 0x26cd06b
  45706b:	add    BYTE PTR [rdx+0x27],bh
  45706e:	add    al,BYTE PTR [rax]
  457070:	mov    ah,0x8f
  457072:	add    eax,0x2278000
  457077:	add    BYTE PTR [rax-0x47fffdd9],dh
  45707d:	pop    QWORD PTR [rip+0x227b000]        # 0x26d2083
  457083:	add    bl,al
  457085:	(bad)  
  457086:	add    al,BYTE PTR [rax]
  457088:	ror    BYTE PTR [rdi+0x27d00005],0x2
  45708f:	add    dl,ch
  457091:	(bad)  
  457092:	add    al,BYTE PTR [rax]
  457094:	(bad)  
  457095:	pop    QWORD PTR [rip+0x227f000]        # 0x26d609b
  45709b:	add    BYTE PTR [rbx],al
  45709d:	sub    BYTE PTR [rdx],al
  45709f:	add    al,cl
  4570a1:	pop    QWORD PTR [rip+0x2281000]        # 0x26d80a7
  4570a7:	add    BYTE PTR [rbx],ah
  4570a9:	sub    BYTE PTR [rdx],al
  4570ab:	add    ah,cl
  4570ad:	pop    QWORD PTR [rip+0x2283000]        # 0x26da0b3
  4570b3:	add    BYTE PTR [rbx+0x28],al
  4570b6:	add    al,BYTE PTR [rax]
  4570b8:	ror    BYTE PTR [rdi+0x28500005],1
  4570be:	add    al,BYTE PTR [rax]
  4570c0:	movsxd ebp,DWORD PTR [rax]
  4570c2:	add    al,BYTE PTR [rax]
  4570c4:	(bad)  
  4570c5:	pop    QWORD PTR [rip+0x2287000]        # 0x26de0cb
  4570cb:	add    bh,ch
  4570cd:	sub    DWORD PTR [rdx],eax
  4570cf:	add    al,bl
  4570d1:	pop    QWORD PTR [rip+0x229f000]        # 0x26f60d7
  4570d7:	add    ah,bh
  4570d9:	sub    DWORD PTR [rdx],eax
  4570db:	add    al,ah
  4570dd:	pop    QWORD PTR [rip+0x22a0000]        # 0x26f70e3
  4570e3:	add    BYTE PTR [rbx],dl
  4570e5:	sub    al,BYTE PTR [rdx]
  4570e7:	add    ah,ah
  4570e9:	pop    QWORD PTR [rip+0x22a2000]        # 0x26f90ef
  4570ef:	add    BYTE PTR [rbx],dh
  4570f1:	sub    al,BYTE PTR [rdx]
  4570f3:	add    al,ch
  4570f5:	pop    QWORD PTR [rip+0x22a4000]        # 0x26fb0fb
  4570fb:	add    BYTE PTR [rbx+0x2a],dl
  4570fe:	add    al,BYTE PTR [rax]
  457100:	in     al,dx
  457101:	pop    QWORD PTR [rip+0x22a6000]        # 0x26fd107
  457107:	add    BYTE PTR [rbx-0xffffdd5],dh
  45710d:	pop    QWORD PTR [rip+0x22bc000]        # 0x2713113
  457113:	add    BYTE PTR [rdx],bh
  457115:	add    al,BYTE PTR cs:[rax]
  457118:	clc    
  457119:	pop    QWORD PTR [rip+0x22e4000]        # 0x273b11f
  45711f:	add    BYTE PTR [rbx],dl
  457121:	(bad)  
  457122:	add    al,BYTE PTR [rax]
  457124:	or     BYTE PTR [rax+0x2f200005],dl
  45712a:	add    al,BYTE PTR [rax]
  45712c:	push   rbp
  45712d:	(bad)  
  45712e:	add    al,BYTE PTR [rax]
  457130:	adc    BYTE PTR [rax+0x2f600005],dl
  457136:	add    al,BYTE PTR [rax]
  457138:	jae    0x457169
  45713a:	add    al,BYTE PTR [rax]
  45713c:	sbb    BYTE PTR [rax+0x2f800005],dl
  457142:	add    al,BYTE PTR [rax]
  457144:	xchg   ebx,eax
  457145:	(bad)  
  457146:	add    al,BYTE PTR [rax]
  457148:	sbb    al,0x90
  45714a:	add    eax,0x22fa000
  45714f:	add    BYTE PTR [rbx+0x2000022f],dh
  457155:	nop
  457156:	add    eax,0x22fc000
  45715b:	add    ch,dh
  45715d:	(bad)  
  45715e:	add    al,BYTE PTR [rax]
  457160:	and    al,0x90
  457162:	add    eax,0x2300000
  457167:	add    BYTE PTR [rbx],dl
  457169:	xor    BYTE PTR [rdx],al
  45716b:	add    BYTE PTR [rax+rdx*4],ch
  45716e:	add    eax,0x2302000
  457173:	add    BYTE PTR [rdx],bh
  457175:	xor    BYTE PTR [rdx],al
  457177:	add    BYTE PTR [rax],dh
  457179:	nop
  45717a:	add    eax,0x2304000
  45717f:	add    BYTE PTR [rdx+0x34000232],bh
  457185:	nop
  457186:	add    eax,0x232c000
  45718b:	add    bl,dl
  45718d:	xor    al,BYTE PTR [rdx]
  45718f:	add    BYTE PTR [rax+rdx*4+0x5],al
  457193:	add    al,ah
  457195:	xor    al,BYTE PTR [rdx]
  457197:	add    bl,dh
  457199:	xor    al,BYTE PTR [rdx]
  45719b:	add    BYTE PTR [rax-0x70],cl
  45719e:	add    eax,0x2330000
  4571a3:	add    BYTE PTR [rsi+0x4c000233],cl
  4571a9:	nop
  4571aa:	add    eax,0x2339000
  4571af:	add    bl,al
  4571b1:	xor    eax,DWORD PTR [rdx]
  4571b3:	add    BYTE PTR [rax+rdx*4+0x5],dl
  4571b7:	add    al,dl
  4571b9:	xor    eax,DWORD PTR [rdx]
  4571bb:	add    BYTE PTR [rip+0x5c000234],bl        # 0x5c4573f5
  4571c1:	nop
  4571c2:	add    eax,0x2342000
  4571c7:	add    BYTE PTR [rdx+0x64000236],bl
  4571cd:	nop
  4571ce:	add    eax,0x236a000
  4571d3:	add    BYTE PTR [rdx+0x74000237],cl
  4571d9:	nop
  4571da:	add    eax,0x2379000
  4571df:	add    BYTE PTR [rbx-0x7ffffdc6],ch
  4571e5:	nop
  4571e6:	add    eax,0x23ab000
  4571eb:	add    bh,dh
  4571ed:	add    al,BYTE PTR ds:[rax]
  4571f0:	cwde   
  4571f1:	nop
  4571f2:	add    eax,0x23f0000
  4571f7:	add    BYTE PTR [rax-0x4ffffdc1],ch
  4571fd:	nop
  4571fe:	add    eax,0x23fb000
  457203:	add    BYTE PTR [rbp+0x40],bl
  457206:	add    al,BYTE PTR [rax]
  457208:	mov    esp,0x60000590
  45720d:	add    al,BYTE PTR [rax]
  457210:	sub    eax,0xcc000245
  457215:	nop
  457216:	add    eax,0x2453000
  45721b:	add    BYTE PTR [rdi],ah
  45721d:	rex.RX add r8b,BYTE PTR [rax]
  457220:	in     al,0x90
  457222:	add    eax,0x2463000
  457227:	add    BYTE PTR [rdx-0xffffdba],ah
  45722d:	nop
  45722e:	add    eax,0x246b000
  457233:	add    BYTE PTR [rbx],cl
  457235:	rex.RXB add r8b,BYTE PTR [r8]
  457238:	add    BYTE PTR [rcx+0x47100005],dl
  45723e:	add    al,BYTE PTR [rax]
  457240:	pop    rbx
  457241:	rex.RXB add r8b,BYTE PTR [r8]
  457244:	or     BYTE PTR [rcx+0x47600005],dl
  45724a:	add    al,BYTE PTR [rax]
  45724c:	inc    BYTE PTR [rdi+0x2]
  45724f:	add    BYTE PTR [rcx+rdx*4],dl
  457252:	add    eax,0x2480000
  457257:	add    BYTE PTR [rax+0x48],al
  45725a:	add    al,BYTE PTR [rax]
  45725c:	and    BYTE PTR [rcx+0x48400005],dl
  457262:	add    al,BYTE PTR [rax]
  457264:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  457265:	rex.W add al,BYTE PTR [rax]
  457268:	sub    BYTE PTR [rcx+0x48b00005],dl
  45726e:	add    al,BYTE PTR [rax]
  457270:	cmc    
  457271:	rex.W add al,BYTE PTR [rax]
  457274:	xor    al,0x91
  457276:	add    eax,0x2490000
  45727b:	add    BYTE PTR [rcx+0x49],bl
  45727e:	add    al,BYTE PTR [rax]
  457280:	cmp    al,0x91
  457282:	add    eax,0x2496000
  457287:	add    BYTE PTR [rdx+0x49],dh
  45728a:	add    al,BYTE PTR [rax]
  45728c:	rex.R xchg ecx,eax
  45728e:	add    eax,0x2498000
  457293:	add    BYTE PTR [rbp+0x48000249],al
  457299:	xchg   ecx,eax
  45729a:	add    eax,0x2499000
  45729f:	add    BYTE PTR [rbp+0x4c000249],dl
  4572a5:	xchg   ecx,eax
  4572a6:	add    eax,0x249a000
  4572ab:	add    BYTE PTR [rdx+0x50000249],dh
  4572b1:	xchg   ecx,eax
  4572b2:	add    eax,0x249c000
  4572b7:	add    ch,al
  4572b9:	rex.WB add al,BYTE PTR [r8]
  4572bc:	push   rsp
  4572bd:	xchg   ecx,eax
  4572be:	add    eax,0x249d000
  4572c3:	add    ch,dl
  4572c5:	rex.WB add al,BYTE PTR [r8]
  4572c8:	pop    rax
  4572c9:	xchg   ecx,eax
  4572ca:	add    eax,0x249e000
  4572cf:	add    BYTE PTR [rdx+rcx*2-0x6ea3fffe],cl
  4572d6:	add    eax,0x24a9000
  4572db:	add    dh,dh
  4572dd:	rex.WX add al,BYTE PTR [rax]
  4572e0:	fs xchg ecx,eax
  4572e2:	add    eax,0x24b0000
  4572e7:	add    BYTE PTR [rcx+0x4f],dl
  4572ea:	add    al,BYTE PTR [rax]
  4572ec:	push   0x60000591
  4572f1:	rex.WRXB add r8b,BYTE PTR [r8]
  4572f4:	fisttp WORD PTR [rdi+0x2]
  4572f7:	add    BYTE PTR [rax-0x1ffffa6f],al
  4572fd:	rex.WRXB add r8b,BYTE PTR [r8]
  457300:	gs push rax
  457302:	add    al,BYTE PTR [rax]
  457304:	nop
  457305:	xchg   ecx,eax
  457306:	add    eax,0x2507000
  45730b:	add    ah,ah
  45730d:	push   rax
  45730e:	add    al,BYTE PTR [rax]
  457310:	movabs al,ds:0x47000250f0000591
  457319:	push   rcx
  45731a:	add    al,BYTE PTR [rax]
  45731c:	lods   al,BYTE PTR ds:[rsi]
  45731d:	xchg   ecx,eax
  45731e:	add    eax,0x2515000
  457323:	add    BYTE PTR [rbx-0x47fffdae],al
  457329:	xchg   ecx,eax
  45732a:	add    eax,0x2529000
  45732f:	add    al,bl
  457331:	push   rdx
  457332:	add    al,BYTE PTR [rax]
  457334:	rcl    BYTE PTR [rcx+0x52e00005],1
  45733a:	add    al,BYTE PTR [rax]
  45733c:	adc    dl,BYTE PTR [rbx+0x2]
  45733f:	add    al,bl
  457341:	xchg   ecx,eax
  457342:	add    eax,0x2532000
  457347:	add    BYTE PTR [rax-0x1ffffdad],bl
  45734d:	xchg   ecx,eax
  45734e:	add    eax,0x253a000
  457353:	add    bl,ah
  457355:	push   rbx
  457356:	add    al,BYTE PTR [rax]
  457358:	lock xchg ecx,eax
  45735a:	add    eax,0x253f000
  45735f:	add    ch,dl
  457361:	push   rsp
  457362:	add    al,BYTE PTR [rax]
  457364:	clc    
  457365:	xchg   ecx,eax
  457366:	add    eax,0x254e000
  45736b:	add    BYTE PTR [rbp+0x8000256],al
  457371:	xchg   edx,eax
  457372:	add    eax,0x2569000
  457377:	add    BYTE PTR [rdi+0x18000261],cl
  45737d:	xchg   edx,eax
  45737e:	add    eax,0x2619000
  457383:	add    bl,dh
  457385:	(bad)  
  457386:	add    al,BYTE PTR [rax]
  457388:	cmp    al,0x92
  45738a:	add    eax,0x2620000
  45738f:	add    BYTE PTR [rbx],dl
  457391:	(bad)  
  457393:	add    BYTE PTR [rdx+rdx*4+0x5],al
  457397:	add    BYTE PTR [rax],ah
  457399:	(bad)  
  45739b:	add    BYTE PTR [rdi+0x62],dl
  45739e:	add    al,BYTE PTR [rax]
  4573a0:	xchg   rdx,rax
  4573a2:	add    eax,0x2626000
  4573a7:	add    bl,ah
  4573a9:	(bad)  
  4573ab:	add    BYTE PTR [rax-0x6e],dl
  4573ae:	add    eax,0x262f000
  4573b3:	add    BYTE PTR [rbx+0x63],ah
  4573b6:	add    al,BYTE PTR [rax]
  4573b8:	pop    rax
  4573b9:	xchg   edx,eax
  4573ba:	add    eax,0x2637000
  4573bf:	add    BYTE PTR [rdx+0x64000263],dl
  4573c5:	xchg   edx,eax
  4573c6:	add    eax,0x263a000
  4573cb:	add    dh,bl
  4573cd:	movsxd eax,DWORD PTR [rdx]
  4573cf:	add    BYTE PTR [rdx+rdx*4+0x5],ch
  4573d3:	add    al,ah
  4573d5:	movsxd eax,DWORD PTR [rdx]
  4573d7:	add    BYTE PTR [rdx+0x64],dh
  4573da:	add    al,BYTE PTR [rax]
  4573dc:	js     0x457370
  4573de:	add    eax,0x2648000
  4573e3:	add    ch,bl
  4573e5:	add    al,BYTE PTR fs:[rax]
  4573e8:	mov    WORD PTR [rdx+0x64e00005],ss
  4573ee:	add    al,BYTE PTR [rax]
  4573f0:	rex.RXB
  4573f1:	add    al,BYTE PTR [eax]
  4573f4:	cwde   
  4573f5:	xchg   edx,eax
  4573f6:	add    eax,0x2675000
  4573fb:	add    BYTE PTR [rdx+0x69],ah
  4573fe:	add    al,BYTE PTR [rax]
  457400:	test   al,0x92
  457402:	add    eax,0x2697000
  457407:	add    BYTE PTR [rcx-0x43fffd97],ah
  45740d:	xchg   edx,eax
  45740e:	add    eax,0x269b000
  457413:	add    BYTE PTR [rdx+rbp*2],al
  457416:	add    al,BYTE PTR [rax]
  457418:	(bad)  
  457419:	xchg   edx,eax
  45741a:	add    eax,0x26a1000
  45741f:	add    BYTE PTR [rdx+rbp*2-0x6d2ffffe],cl
  457426:	add    eax,0x26a9000
  45742b:	add    ah,ah
  45742d:	push   0x2
  45742f:	add    al,bl
  457431:	xchg   edx,eax
  457432:	add    eax,0x26af000
  457437:	add    bh,dl
  457439:	imul   eax,DWORD PTR [rdx],0x0
  45743c:	loopne 0x4573d0
  45743e:	add    eax,0x26be000
  457443:	add    cl,bh
  457445:	imul   eax,DWORD PTR [rdx],0x0
  457448:	call   0x4579df
  45744d:	ins    BYTE PTR es:[rdi],dx
  45744e:	add    al,BYTE PTR [rax]
  457450:	sub    al,0x6c
  457452:	add    al,BYTE PTR [rax]
  457454:	lock xchg edx,eax
  457456:	add    eax,0x26c3000
  45745b:	add    BYTE PTR [rsi+0x6c],dl
  45745e:	add    al,BYTE PTR [rax]
  457460:	clc    
  457461:	xchg   edx,eax
  457462:	add    eax,0x26c6000
  457467:	add    BYTE PTR [rax-0x3fffd94],ch
  45746d:	xchg   edx,eax
  45746e:	add    eax,0x26cb000
  457473:	add    bh,bl
  457475:	ins    BYTE PTR es:[rdi],dx
  457476:	add    al,BYTE PTR [rax]
  457478:	add    al,0x93
  45747a:	add    eax,0x26ce000
  45747f:	add    BYTE PTR [rbx+0x6d],dh
  457482:	add    al,BYTE PTR [rax]
  457484:	or     BYTE PTR [rbx+0x6d800005],dl
  45748a:	add    al,BYTE PTR [rax]
  45748c:	pop    rdi
  45748d:	outs   dx,DWORD PTR ds:[rsi]
  45748e:	add    al,BYTE PTR [rax]
  457490:	adc    al,0x93
  457492:	add    eax,0x26f6000
  457497:	add    ah,dh
  457499:	jo     0x45749d
  45749b:	add    BYTE PTR [rbx+rdx*4],ch
  45749e:	add    eax,0x2710000
  4574a3:	add    BYTE PTR [rbp+0x44000271],dl
  4574a9:	xchg   ebx,eax
  4574aa:	add    eax,0x271a000
  4574af:	add    BYTE PTR [rip+0x54000272],ah        # 0x54457727
  4574b5:	xchg   ebx,eax
  4574b6:	add    eax,0x2723000
  4574bb:	add    BYTE PTR [rdx+rsi*2+0x2],bh
  4574bf:	add    BYTE PTR [rax-0x6d],ah
  4574c2:	add    eax,0x2728000
  4574c7:	add    BYTE PTR [rdi+0x6c000273],cl
  4574cd:	xchg   ebx,eax
  4574ce:	add    eax,0x2739000
  4574d3:	add    BYTE PTR [rcx+0x78000275],cl
  4574d9:	xchg   ebx,eax
  4574da:	add    eax,0x2759000
  4574df:	add    BYTE PTR [rdx-0x77fffd8b],ah
  4574e5:	xchg   ebx,eax
  4574e6:	add    eax,0x275b000
  4574eb:	add    dl,al
  4574ed:	jne    0x4574f1
  4574ef:	add    BYTE PTR [rbx+rdx*4+0x75d00005],cl
  4574f6:	add    al,BYTE PTR [rax]
  4574f8:	loop   0x45756f
  4574fa:	add    al,BYTE PTR [rax]
  4574fc:	nop
  4574fd:	xchg   ebx,eax
  4574fe:	add    eax,0x275f000
  457503:	add    BYTE PTR [rdx],al
  457505:	jbe    0x457509
  457507:	add    BYTE PTR [rbx+rdx*4+0x76100005],dl
  45750e:	add    al,BYTE PTR [rax]
  457510:	and    dh,BYTE PTR [rsi+0x2]
  457513:	add    BYTE PTR [rax+0x30000593],bl
  457519:	jbe    0x45751d
  45751b:	add    BYTE PTR [rdx+0x76],al
  45751e:	add    al,BYTE PTR [rax]
  457520:	pushf  
  457521:	xchg   ebx,eax
  457522:	add    eax,0x2765000
  457527:	add    BYTE PTR [rdx+0x76],ah
  45752a:	add    al,BYTE PTR [rax]
  45752c:	movabs al,ds:0x8200027670000593
  457535:	jbe    0x457539
  457537:	add    BYTE PTR [rbx+rdx*4+0x76900005],ah
  45753e:	add    al,BYTE PTR [rax]
  457540:	movabs ds:0xb0000593a8000276,al
  457549:	jbe    0x45754d
  45754b:	add    dl,al
  45754d:	jbe    0x457551
  45754f:	add    BYTE PTR [rbx+rdx*4+0x76d00005],ch
  457556:	add    al,BYTE PTR [rax]
  457558:	loop   0x4575d0
  45755a:	add    al,BYTE PTR [rax]
  45755c:	mov    al,0x93
  45755e:	add    eax,0x276f000
  457563:	add    BYTE PTR [rip+0xffffffffb4000277],ch        # 0xffffffffb44577e0
  457569:	xchg   ebx,eax
  45756a:	add    eax,0x2773000
  45756f:	add    BYTE PTR [rip+0xffffffffbc000277],dh        # 0xffffffffbc4577ec
  457575:	xchg   ebx,eax
  457576:	add    eax,0x2774000
  45757b:	add    BYTE PTR [rdx-0x3ffffd89],al
  457581:	xchg   ebx,eax
  457582:	add    eax,0x2779000
  457587:	add    BYTE PTR [rbx+0x78],ah
  45758a:	add    al,BYTE PTR [rax]
  45758c:	(bad)  
  45758d:	xchg   ebx,eax
  45758e:	add    eax,0x2787000
  457593:	add    BYTE PTR [rbx+0x79],al
  457596:	add    al,BYTE PTR [rax]
  457598:	fcom   QWORD PTR [rbx+0x79500005]
  45759e:	add    al,BYTE PTR [rax]
  4575a0:	sahf   
  4575a1:	jns    0x4575a5
  4575a3:	add    ah,dh
  4575a5:	xchg   ebx,eax
  4575a6:	add    eax,0x279a000
  4575ab:	add    dh,ch
  4575ad:	jns    0x4575b1
  4575af:	add    BYTE PTR [rax],al
  4575b1:	xchg   esp,eax
  4575b2:	add    eax,0x279f000
  4575b7:	add    bh,bh
  4575b9:	jns    0x4575bd
  4575bb:	add    BYTE PTR [rsp+rdx*4],cl
  4575be:	add    eax,0x27a0000
  4575c3:	add    BYTE PTR [rip+0x1000027a],cl        # 0x10457843
  4575c9:	xchg   esp,eax
  4575ca:	add    eax,0x27a1000
  4575cf:	add    al,al
  4575d1:	jl     0x4575d5
  4575d3:	add    BYTE PTR [rsp+rdx*4],dl
  4575d6:	add    eax,0x27cc000
  4575db:	add    BYTE PTR [rsi+0x7d],dl
  4575de:	add    al,BYTE PTR [rax]
  4575e0:	sub    al,0x94
  4575e2:	add    eax,0x27f8000
  4575e7:	add    BYTE PTR [rdi],ah
  4575e9:	add    BYTE PTR [rdx],0x0
  4575ec:	xor    al,0x94
  4575ee:	add    eax,0x2803000
  4575f3:	add    BYTE PTR [rcx-0x80],cl
  4575f6:	add    al,BYTE PTR [rax]
  4575f8:	cmp    al,0x94
  4575fa:	add    eax,0x2805000
  4575ff:	add    BYTE PTR [rbp+0x44000280],al
  457605:	xchg   esp,eax
  457606:	add    eax,0x2809000
  45760b:	add    ch,ah
  45760d:	add    BYTE PTR [rdx],0x0
  457610:	rex.WR xchg rsp,rax
  457612:	add    eax,0x280f000
  457617:	add    BYTE PTR [rcx+rax*4],cl
  45761a:	add    al,BYTE PTR [rax]
  45761c:	pop    rax
  45761d:	xchg   esp,eax
  45761e:	add    eax,0x2811000
  457623:	add    BYTE PTR [rdx],bl
  457625:	add    DWORD PTR [rdx],0x5945c00
  45762b:	add    BYTE PTR [rax],ah
  45762d:	add    DWORD PTR [rdx],0x2812300
  457633:	add    BYTE PTR [rax-0x6c],ah
  457636:	add    eax,0x2813000
  45763b:	add    BYTE PTR [rsi],al
  45763d:	(bad)  
  45763e:	add    al,BYTE PTR [rax]
  457640:	fs xchg esp,eax
  457642:	add    eax,0x2821000
  457647:	add    BYTE PTR [rbx],cl
  457649:	add    DWORD PTR [rdx],0x0
  45764c:	je     0x4575e2
  45764e:	add    eax,0x2831000
  457653:	add    BYTE PTR [rdi],bh
  457655:	add    DWORD PTR [rdx],0x0
  457658:	test   BYTE PTR [rbp+rax*1+0x2834000],dl
  45765f:	add    BYTE PTR [rcx-0x73fffd7d],ch
  457665:	xchg   esp,eax
  457666:	add    eax,0x283b000
  45766b:	add    BYTE PTR [rbx-0x67fffd7d],dh
  457671:	xchg   esp,eax
  457672:	add    eax,0x283c000
  457677:	add    BYTE PTR [rcx],al
  457679:	test   BYTE PTR [rdx],al
  45767b:	add    BYTE PTR [rsp+rdx*4-0x7beffffb],bl
  457682:	add    al,BYTE PTR [rax]
  457684:	sbb    al,0x84
  457686:	add    al,BYTE PTR [rax]
  457688:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  457689:	xchg   esp,eax
  45768a:	add    eax,0x2842000
  45768f:	add    BYTE PTR [rax*4-0x6b57fffe],bl
  457696:	add    eax,0x2852000
  45769b:	add    BYTE PTR [rbx],ah
  45769d:	test   DWORD PTR [rdx],eax
  45769f:	add    al,al
  4576a1:	xchg   esp,eax
  4576a2:	add    eax,0x2853000
  4576a7:	add    BYTE PTR [rax*4-0x6b3bfffe],dh
  4576ae:	add    eax,0x2854000
  4576b3:	add    BYTE PTR [rbp+rax*4+0x2],al
  4576b7:	add    al,cl
  4576b9:	xchg   esp,eax
  4576ba:	add    eax,0x2855000
  4576bf:	add    BYTE PTR [rcx-0x33fffd7b],dh
  4576c5:	xchg   esp,eax
  4576c6:	add    eax,0x285c000
  4576cb:	add    BYTE PTR [rdx],ah
  4576cd:	xchg   DWORD PTR [rdx],eax
  4576cf:	add    al,bl
  4576d1:	xchg   esp,eax
  4576d2:	add    eax,0x2873000
  4576d7:	add    BYTE PTR [rcx],ch
  4576d9:	mov    al,BYTE PTR [rdx]
  4576db:	add    ah,ch
  4576dd:	xchg   esp,eax
  4576de:	add    eax,0x28a3000
  4576e3:	add    dh,dl
  4576e5:	mov    eax,DWORD PTR [rdx]
  4576e7:	add    BYTE PTR [rdx*4-0x741ffffb],al
  4576ee:	add    al,BYTE PTR [rax]
  4576f0:	int3   
  4576f1:	mov    WORD PTR [rdx],es
  4576f3:	add    BYTE PTR [rdx*4-0x732ffffb],cl
  4576fa:	add    al,BYTE PTR [rax]
  4576fc:	mov    BYTE PTR [rsi-0x6ae3fffe],cl
  457702:	add    eax,0x28e9000
  457707:	add    ch,bh
  457709:	mov    es,WORD PTR [rdx]
  45770b:	add    BYTE PTR [rdx*4-0x70fffffb],ah
  457712:	add    al,BYTE PTR [rax]
  457714:	jg     0x4576a5
  457716:	add    al,BYTE PTR [rax]
  457718:	xor    al,0x95
  45771a:	add    eax,0x28f8000
  45771f:	add    BYTE PTR [rdi],bl
  457721:	nop
  457722:	add    al,BYTE PTR [rax]
  457724:	rex xchg ebp,eax
  457726:	add    eax,0x2902000
  45772b:	add    dl,bh
  45772d:	nop
  45772e:	add    al,BYTE PTR [rax]
  457730:	xchg   rbp,rax
  457732:	add    eax,0x2910000
  457737:	add    BYTE PTR [rdi],bl
  457739:	xchg   ecx,eax
  45773a:	add    al,BYTE PTR [rax]
  45773c:	push   rax
  45773d:	xchg   ebp,eax
  45773e:	add    eax,0x2912000
  457743:	add    BYTE PTR [rdx],dh
  457745:	xchg   ecx,eax
  457746:	add    al,BYTE PTR [rax]
  457748:	push   rsp
  457749:	xchg   ebp,eax
  45774a:	add    eax,0x2914000
  45774f:	add    BYTE PTR [rbp+0x58000291],al
  457755:	xchg   ebp,eax
  457756:	add    eax,0x2919000
  45775b:	add    BYTE PTR [rsi],ch
  45775d:	xchg   edx,eax
  45775e:	add    al,BYTE PTR [rax]
  457760:	pop    rsp
  457761:	xchg   ebp,eax
  457762:	add    eax,0x2923000
  457767:	add    BYTE PTR [rbx-0x6e],dh
  45776a:	add    al,BYTE PTR [rax]
  45776c:	push   0xffffffff80000595
  457771:	xchg   edx,eax
  457772:	add    al,BYTE PTR [rax]
  457774:	mov    ebx,0x74000292
  457779:	xchg   ebp,eax
  45777a:	add    eax,0x292c000
  45777f:	add    BYTE PTR [rsi-0x6d],cl
  457782:	add    al,BYTE PTR [rax]
  457784:	jl     0x45771b
  457786:	add    eax,0x2935000
  45778b:	add    BYTE PTR [rax-0x77fffd6d],cl
  457791:	xchg   ebp,eax
  457792:	add    eax,0x2939000
  457797:	add    ch,ah
  457799:	xchg   ebx,eax
  45779a:	add    al,BYTE PTR [rax]
  45779c:	xchg   esp,eax
  45779d:	xchg   ebp,eax
  45779e:	add    eax,0x293f000
  4577a3:	add    BYTE PTR [rsi-0x5ffffd6c],bl
  4577a9:	xchg   ebp,eax
  4577aa:	add    eax,0x294e000
  4577af:	add    BYTE PTR [rdx-0x4ffffd6b],cl
  4577b5:	xchg   ebp,eax
  4577b6:	add    eax,0x2959000
  4577bb:	add    BYTE PTR [rax],dl
  4577bd:	xchg   esi,eax
  4577be:	add    al,BYTE PTR [rax]
  4577c0:	rcl    BYTE PTR [rbp-0x69effffb],0x2
  4577c7:	add    dh,al
  4577c9:	cdq    
  4577ca:	add    al,BYTE PTR [rax]
  4577cc:	int3   
  4577cd:	xchg   ebp,eax
  4577ce:	add    eax,0x299d000
  4577d3:	add    BYTE PTR [rbp-0x1bfffd60],dh
  4577d9:	xchg   ebp,eax
  4577da:	add    eax,0x2a0c000
  4577df:	add    dl,ah
  4577e1:	movabs al,ds:0xa0f0000595fc0002
  4577ea:	add    al,BYTE PTR [rax]
  4577ec:	adc    BYTE PTR [rcx-0x69fbfffe],ah
  4577f2:	add    eax,0x2a11000
  4577f7:	add    BYTE PTR [rax],dh
  4577f9:	movabs eax,ds:0xa1300005960c0002
  457802:	add    al,BYTE PTR [rax]
  457804:	rex.WX movabs ds:0xa620000596140002,rax
  45780e:	add    al,BYTE PTR [rax]
  457810:	sub    BYTE PTR [rsi-0x69dbfffe],ah
  457816:	add    eax,0x2a63000
  45781b:	add    BYTE PTR [rbx],bh
  45781d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  45781e:	add    al,BYTE PTR [rax]
  457820:	sub    BYTE PTR [rsi-0x57cffffb],dl
  457826:	add    al,BYTE PTR [rax]
  457828:	movabs eax,ds:0xa1000581040002a8
  457831:	test   al,0x2
  457833:	add    BYTE PTR [rcx-0x57],al
  457836:	add    al,BYTE PTR [rax]
  457838:	adc    BYTE PTR [rcx-0x56befffb],al
  45783e:	add    al,BYTE PTR [rax]
  457840:	sbb    ch,BYTE PTR [rdx-0x7ee3fffe]
  457846:	add    eax,0x2aa1a00
  45784b:	add    BYTE PTR [rsi+0x2c0002aa],dh
  457851:	add    DWORD PTR [rip+0x2aab600],0x2acf400        # 0x2f02e5b
  45785b:	add    BYTE PTR [rcx+rax*4],bh
  45785e:	add    eax,0x2ad0000
  457863:	add    BYTE PTR [rip+0x700002bc],dl        # 0x70457b25
  457869:	test   DWORD PTR [rip+0x2bc2000],eax        # 0x301986f
  45786f:	add    BYTE PTR [rax-0x2ffffd43],cl
  457875:	.byte 0x87
  457876:	.byte 0x5
	...

Disassembly of section .xdata:

0000000000458000 <.xdata>:
  458000:	add    DWORD PTR [rax],eax
  458002:	add    BYTE PTR [rax],al
  458004:	add    DWORD PTR [rcx+rax*1],eax
  458007:	add    BYTE PTR [rdx+rax*2],al
  45800a:	add    BYTE PTR [rax],al
  45800c:	add    DWORD PTR [rcx+rax*1],eax
  45800f:	add    BYTE PTR [rdx+riz*2],al
  458012:	add    BYTE PTR [rax],al
  458014:	add    DWORD PTR [rdi],ecx
  458016:	or     BYTE PTR [rax],al
  458018:	lgdt   [rbx]
  45801b:	add    BYTE PTR [rax],cl
  45801d:	xor    BYTE PTR [rdi],al
  45801f:	(bad)  
  458020:	(bad)  
  458021:	jo     0x458028
  458023:	push   rax
  458024:	add    al,0xc0
  458026:	add    dl,al
  458028:	or     DWORD PTR [rcx+rax*1],eax
  45802b:	add    BYTE PTR [rdx+rax*2],al
  45802e:	add    BYTE PTR [rax],al
  458030:	sbb    BYTE PTR [rsi+0x10002],ah
  458036:	add    BYTE PTR [rax],al
  458038:	(bad)  
  458039:	adc    al,0x0
  45803b:	add    ah,ch
  45803d:	adc    al,0x0
  45803f:	add    al,dl
  458041:	mov    WORD PTR [rdx],es
  458043:	add    ah,ch
  458045:	adc    al,0x0
  458047:	add    BYTE PTR [rcx],cl
  458049:	add    al,0x1
  45804b:	add    BYTE PTR [rdx+rax*2],al
  45804e:	add    BYTE PTR [rax],al
  458050:	sbb    BYTE PTR [rsi+0x10002],ah
  458056:	add    BYTE PTR [rax],al
  458058:	add    al,0x15
  45805a:	add    BYTE PTR [rax],al
  45805c:	sbb    al,0x15
  45805e:	add    BYTE PTR [rax],al
  458060:	ror    BYTE PTR [rdx+rax*1+0x151c00],1
  458067:	add    BYTE PTR [rcx],al
  458069:	add    BYTE PTR [rax],al
  45806b:	add    BYTE PTR [rcx],al
  45806d:	(bad)  
  45806e:	add    eax,DWORD PTR [rax]
  458070:	(bad)  
  458071:	(bad)  
  458073:	(bad)  
  458074:	add    DWORD PTR [rax+0x0],esi
  458077:	add    BYTE PTR [rcx],al
  458079:	add    al,0x1
  45807b:	add    BYTE PTR [rdx+rax*2],al
  45807e:	add    BYTE PTR [rax],al
  458080:	add    DWORD PTR [rbx],edx
  458082:	or     al,BYTE PTR [rax]
  458084:	adc    eax,DWORD PTR [rcx]
  458086:	adc    eax,DWORD PTR [rcx]
  458088:	or     al,0x30
  45808a:	or     esp,DWORD PTR [rax+0xa]
  45808d:	jo     0x458098
  45808f:	push   rax
  458090:	or     al,al
  458092:	(bad)  
  458093:	rol    BYTE PTR [rax+riz*8],1
  458096:	add    dh,al
  458098:	add    DWORD PTR [rsi],eax
  45809a:	add    eax,DWORD PTR [rax]
  45809c:	(bad)  
  45809d:	rex.X add sil,BYTE PTR [rax]
  4580a0:	add    DWORD PTR [rax+0x0],esp
  4580a3:	add    BYTE PTR [rcx],al
  4580a5:	(bad)  
  4580a6:	add    eax,DWORD PTR [rax]
  4580a8:	(bad)  
  4580a9:	(bad)  
  4580aa:	add    dh,BYTE PTR [rax]
  4580ac:	add    DWORD PTR [rax+0x0],esp
  4580af:	add    BYTE PTR [rcx],al
  4580b1:	add    eax,0x32050002
  4580b6:	add    DWORD PTR [rax],esi
  4580b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a80c0
  4580be:	add    DWORD PTR [rax],esi
  4580c0:	add    DWORD PTR [rdi],ecx
  4580c2:	or     BYTE PTR [rax],al
  4580c4:	sgdt   [rdi+0x7300800]
  4580cb:	(bad)  
  4580cc:	(bad)  
  4580cd:	jo     0x4580d4
  4580cf:	push   rax
  4580d0:	add    al,0xc0
  4580d2:	add    dl,al
  4580d4:	add    DWORD PTR [rax],edx
  4580d6:	or     DWORD PTR [rax],eax
  4580d8:	adc    BYTE PTR [rdx+0xc],al
  4580db:	xor    BYTE PTR [rbx],cl
  4580dd:	(bad)  
  4580de:	or     dh,BYTE PTR [rax+0x9]
  4580e1:	push   rax
  4580e2:	or     al,al
  4580e4:	(bad)  
  4580e5:	rol    BYTE PTR [rax+riz*8],1
  4580e8:	add    dh,al
  4580ea:	add    BYTE PTR [rax],al
  4580ec:	add    DWORD PTR [rbx],edx
  4580ee:	or     al,BYTE PTR [rax]
  4580f0:	adc    eax,DWORD PTR [rcx]
  4580f2:	adc    eax,0xb300c00
  4580f7:	(bad)  
  4580f8:	or     dh,BYTE PTR [rax+0x9]
  4580fb:	push   rax
  4580fc:	or     al,al
  4580fe:	(bad)  
  4580ff:	rol    BYTE PTR [rax+riz*8],1
  458102:	add    dh,al
  458104:	add    DWORD PTR [rsi],eax
  458106:	add    eax,DWORD PTR [rax]
  458108:	(bad)  
  458109:	rex.X add sil,BYTE PTR [rax]
  45810c:	add    DWORD PTR [rax+0x0],esi
  45810f:	add    BYTE PTR [rcx],al
  458111:	(bad)  
  458112:	add    eax,DWORD PTR [rax]
  458114:	(bad)  
  458115:	rex.X add sil,BYTE PTR [rax]
  458118:	add    DWORD PTR [rax+0x0],esp
  45811b:	add    BYTE PTR [rcx],al
  45811d:	or     BYTE PTR [rip+0x4420800],al        # 0x4878923
  458123:	xor    BYTE PTR [rbx],al
  458125:	(bad)  
  458126:	add    dh,BYTE PTR [rax+0x1]
  458129:	push   rax
  45812a:	add    BYTE PTR [rax],al
  45812c:	add    DWORD PTR [rax],ecx
  45812e:	add    eax,0x4420800
  458133:	xor    BYTE PTR [rbx],al
  458135:	(bad)  
  458136:	add    dh,BYTE PTR [rax+0x1]
  458139:	push   rax
  45813a:	add    BYTE PTR [rax],al
  45813c:	add    DWORD PTR [rip+0x10d0506],ecx        # 0x1528648
  458142:	sub    al,BYTE PTR [rax]
  458144:	(bad)  
  458145:	add    eax,DWORD PTR [rbx]
  458147:	(bad)  
  458148:	add    dh,BYTE PTR [rax+0x1]
  45814b:	push   rax
  45814c:	add    DWORD PTR [rdi+rax*1],ecx
  45814f:	add    BYTE PTR [rdx+rax*2],cl
  458152:	or     BYTE PTR [rax],dh
  458154:	(bad)  
  458155:	(bad)  
  458156:	(bad)  
  458157:	jo     0x45815e
  458159:	push   rax
  45815a:	add    al,0xc0
  45815c:	add    dl,al
  45815e:	add    BYTE PTR [rax],al
  458160:	add    DWORD PTR [rdi],eax
  458162:	add    al,0x0
  458164:	(bad)  
  458165:	push   rdx
  458166:	add    esi,DWORD PTR [rax]
  458168:	add    ah,BYTE PTR [rax+0x1]
  45816b:	jo     0x45816e
  45816d:	or     eax,DWORD PTR [rsi]
  45816f:	add    BYTE PTR [rbx],cl
  458171:	add    DWORD PTR [rip+0x3300400],esp        # 0x3758577
  458177:	(bad)  
  458178:	add    dh,BYTE PTR [rax+0x1]
  45817b:	push   rax
  45817c:	add    DWORD PTR [rdx],ecx
  45817e:	(bad)  
  45817f:	add    BYTE PTR [rdx],cl
  458181:	jb     0x458189
  458183:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b585e9
  458189:	push   rax
  45818a:	add    al,al
  45818c:	add    DWORD PTR [rax],ecx
  45818e:	add    eax,0x4420800
  458193:	xor    BYTE PTR [rbx],al
  458195:	(bad)  
  458196:	add    dh,BYTE PTR [rax+0x1]
  458199:	push   rax
  45819a:	add    BYTE PTR [rax],al
  45819c:	add    DWORD PTR [rax],ecx
  45819e:	add    eax,0x4420800
  4581a3:	xor    BYTE PTR [rbx],al
  4581a5:	(bad)  
  4581a6:	add    dh,BYTE PTR [rax+0x1]
  4581a9:	push   rax
  4581aa:	add    BYTE PTR [rax],al
  4581ac:	add    DWORD PTR [rax],eax
  4581ae:	add    BYTE PTR [rax],al
  4581b0:	add    DWORD PTR [rcx+rax*1],eax
  4581b3:	add    BYTE PTR [rdx+rax*2],al
  4581b6:	add    BYTE PTR [rax],al
  4581b8:	add    DWORD PTR [rcx+rax*1],eax
  4581bb:	add    BYTE PTR [rdx+rax*2],al
  4581be:	add    BYTE PTR [rax],al
  4581c0:	add    DWORD PTR [rcx+rax*1],eax
  4581c3:	add    BYTE PTR [rdx+rax*2],al
  4581c6:	add    BYTE PTR [rax],al
  4581c8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a81d0
  4581ce:	add    DWORD PTR [rax],esi
  4581d0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a81d8
  4581d6:	add    DWORD PTR [rax],esi
  4581d8:	add    DWORD PTR [rdi],eax
  4581da:	add    al,0x0
  4581dc:	(bad)  
  4581dd:	xor    al,BYTE PTR [rbx]
  4581df:	xor    BYTE PTR [rdx],al
  4581e1:	(bad)  
  4581e2:	add    DWORD PTR [rax+0x1],esi
  4581e5:	and    ecx,DWORD PTR [rsi]
  4581e7:	add    BYTE PTR [rbx],ah
  4581e9:	js     0x458204
  4581eb:	add    BYTE PTR [rbx],bl
  4581ed:	push   0x1130018
  4581f2:	xor    eax,0xb300c00
  4581f7:	(bad)  
  4581f8:	or     dh,BYTE PTR [rax+0x9]
  4581fb:	push   rax
  4581fc:	or     al,al
  4581fe:	(bad)  
  4581ff:	rol    BYTE PTR [rax+riz*8],1
  458202:	add    dh,al
  458204:	add    DWORD PTR [rdi],eax
  458206:	add    al,0x0
  458208:	(bad)  
  458209:	xor    al,BYTE PTR [rbx]
  45820b:	xor    BYTE PTR [rdx],al
  45820d:	(bad)  
  45820e:	add    DWORD PTR [rax+0x1],esi
  458211:	(bad)  
  458212:	add    al,0x0
  458214:	(bad)  
  458215:	xor    al,BYTE PTR [rbx]
  458217:	xor    BYTE PTR [rdx],al
  458219:	(bad)  
  45821a:	add    DWORD PTR [rax+0x1],esi
  45821d:	add    eax,0x32050002
  458222:	add    DWORD PTR [rax],esi
  458224:	add    DWORD PTR [rax],eax
  458226:	add    BYTE PTR [rax],al
  458228:	add    DWORD PTR [rsi],eax
  45822a:	add    eax,DWORD PTR [rax]
  45822c:	(bad)  
  45822d:	(bad)  
  45822f:	xor    BYTE PTR [rcx],al
  458231:	(bad)  
  458232:	add    BYTE PTR [rax],al
  458234:	add    DWORD PTR [rdx],ecx
  458236:	(bad)  
  458237:	add    BYTE PTR [rdx],cl
  458239:	xor    al,BYTE PTR [rsi]
  45823b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b586a1
  458241:	push   rax
  458242:	add    al,al
  458244:	add    DWORD PTR [rax],edx
  458246:	or     DWORD PTR [rax],eax
  458248:	adc    dl,ah
  45824a:	or     al,0x30
  45824c:	or     esp,DWORD PTR [rax+0xa]
  45824f:	jo     0x45825a
  458251:	push   rax
  458252:	or     al,al
  458254:	(bad)  
  458255:	rol    BYTE PTR [rax+riz*8],1
  458258:	add    dh,al
  45825a:	add    BYTE PTR [rax],al
  45825c:	add    DWORD PTR [rax],eax
  45825e:	add    BYTE PTR [rax],al
  458260:	add    DWORD PTR [rax],eax
  458262:	add    BYTE PTR [rax],al
  458264:	add    DWORD PTR [rax],eax
  458266:	add    BYTE PTR [rax],al
  458268:	add    DWORD PTR [rax],eax
  45826a:	add    BYTE PTR [rax],al
  45826c:	add    DWORD PTR [rdx],ecx
  45826e:	add    eax,0x84010a00
  458273:	add    BYTE PTR [rbx],al
  458275:	xor    BYTE PTR [rdx],al
  458277:	(bad)  
  458278:	add    DWORD PTR [rax+0x0],esi
  45827b:	add    BYTE PTR [rcx],al
  45827d:	(bad)  
  45827e:	add    eax,DWORD PTR [rax]
  458280:	(bad)  
  458281:	rex.X add sil,BYTE PTR [rax]
  458284:	add    DWORD PTR [rax+0x0],esp
  458287:	add    BYTE PTR [rcx],al
  458289:	add    BYTE PTR [rax],al
  45828b:	add    BYTE PTR [rcx],al
  45828d:	add    al,0x1
  45828f:	add    BYTE PTR [rdx+rax*2],al
  458292:	add    BYTE PTR [rax],al
  458294:	add    DWORD PTR [rdx],ecx
  458296:	(bad)  
  458297:	add    BYTE PTR [rdx],cl
  458299:	xor    al,BYTE PTR [rsi]
  45829b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58701
  4582a1:	push   rax
  4582a2:	add    al,al
  4582a4:	add    DWORD PTR [rax],edx
  4582a6:	or     DWORD PTR [rax],eax
  4582a8:	adc    BYTE PTR [rdx+0xc],ah
  4582ab:	xor    BYTE PTR [rbx],cl
  4582ad:	(bad)  
  4582ae:	or     dh,BYTE PTR [rax+0x9]
  4582b1:	push   rax
  4582b2:	or     al,al
  4582b4:	(bad)  
  4582b5:	rol    BYTE PTR [rax+riz*8],1
  4582b8:	add    dh,al
  4582ba:	add    BYTE PTR [rax],al
  4582bc:	add    DWORD PTR [rax],edx
  4582be:	or     DWORD PTR [rax],eax
  4582c0:	adc    BYTE PTR [rdx+0xc],ah
  4582c3:	xor    BYTE PTR [rbx],cl
  4582c5:	(bad)  
  4582c6:	or     dh,BYTE PTR [rax+0x9]
  4582c9:	push   rax
  4582ca:	or     al,al
  4582cc:	(bad)  
  4582cd:	rol    BYTE PTR [rax+riz*8],1
  4582d0:	add    dh,al
  4582d2:	add    BYTE PTR [rax],al
  4582d4:	add    DWORD PTR [rax],eax
  4582d6:	add    BYTE PTR [rax],al
  4582d8:	add    DWORD PTR [rsi],eax
  4582da:	add    eax,DWORD PTR [rax]
  4582dc:	(bad)  
  4582dd:	rex.X add sil,BYTE PTR [rax]
  4582e0:	add    DWORD PTR [rax+0x0],esp
  4582e3:	add    BYTE PTR [rcx],al
  4582e5:	or     eax,0x10d0007
  4582ea:	rex.W add BYTE PTR [rsi],al
  4582ed:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58753
  4582f3:	push   rax
  4582f4:	add    al,al
  4582f6:	add    BYTE PTR [rax],al
  4582f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8300
  4582fe:	add    DWORD PTR [rax],esi
  458300:	add    DWORD PTR [rax],ecx
  458302:	add    eax,0x4420800
  458307:	xor    BYTE PTR [rbx],al
  458309:	(bad)  
  45830a:	add    dh,BYTE PTR [rax+0x1]
  45830d:	push   rax
  45830e:	add    BYTE PTR [rax],al
  458310:	add    DWORD PTR [rax],ecx
  458312:	add    eax,0x4420800
  458317:	xor    BYTE PTR [rbx],al
  458319:	(bad)  
  45831a:	add    dh,BYTE PTR [rax+0x1]
  45831d:	push   rax
  45831e:	add    BYTE PTR [rax],al
  458320:	add    DWORD PTR [rdi],eax
  458322:	add    al,0x0
  458324:	(bad)  
  458325:	xor    al,BYTE PTR [rbx]
  458327:	xor    BYTE PTR [rdx],al
  458329:	(bad)  
  45832a:	add    DWORD PTR [rax+0x1],esi
  45832d:	add    eax,0x32050002
  458332:	add    DWORD PTR [rax],esi
  458334:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a833c
  45833a:	add    DWORD PTR [rax],esi
  45833c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8344
  458342:	add    DWORD PTR [rax],esi
  458344:	add    DWORD PTR [rax],eax
  458346:	add    BYTE PTR [rax],al
  458348:	add    DWORD PTR [rax],ecx
  45834a:	add    eax,0x4420800
  45834f:	xor    BYTE PTR [rbx],al
  458351:	(bad)  
  458352:	add    dh,BYTE PTR [rax+0x1]
  458355:	push   rax
  458356:	add    BYTE PTR [rax],al
  458358:	add    DWORD PTR [rdi],eax
  45835a:	add    al,0x0
  45835c:	(bad)  
  45835d:	xor    al,BYTE PTR [rbx]
  45835f:	xor    BYTE PTR [rdx],al
  458361:	(bad)  
  458362:	add    DWORD PTR [rax+0x1],esi
  458365:	(bad)  
  458366:	add    eax,DWORD PTR [rax]
  458368:	(bad)  
  458369:	rex.X add sil,BYTE PTR [rax]
  45836c:	add    DWORD PTR [rax+0x0],esp
  45836f:	add    BYTE PTR [rcx],al
  458371:	add    eax,0x32050002
  458376:	add    DWORD PTR [rax],esi
  458378:	add    DWORD PTR [rdi],eax
  45837a:	add    al,0x0
  45837c:	(bad)  
  45837d:	xor    al,BYTE PTR [rbx]
  45837f:	xor    BYTE PTR [rdx],al
  458381:	(bad)  
  458382:	add    DWORD PTR [rax+0x1],esi
  458385:	(bad)  
  458386:	add    al,0x0
  458388:	(bad)  
  458389:	xor    al,BYTE PTR [rbx]
  45838b:	xor    BYTE PTR [rdx],al
  45838d:	(bad)  
  45838e:	add    DWORD PTR [rax+0x1],esi
  458391:	(bad)  
  458392:	or     BYTE PTR [rax],al
  458394:	(bad)  
  458395:	xor    cl,BYTE PTR [rdx]
  458397:	xor    BYTE PTR [rcx],cl
  458399:	(bad)  
  45839a:	or     BYTE PTR [rax+0x7],dh
  45839d:	push   rax
  45839e:	(bad)  
  45839f:	rol    BYTE PTR [rax+rdx*8],0x2
  4583a3:	loopne 0x4583a6
  4583a5:	adc    BYTE PTR [rcx],cl
  4583a7:	add    BYTE PTR [rax],dl
  4583a9:	movabs ds:0x5009700a600b300c,al
  4583b2:	or     al,al
  4583b4:	(bad)  
  4583b5:	rol    BYTE PTR [rax+riz*8],1
  4583b8:	add    dh,al
  4583ba:	add    BYTE PTR [rax],al
  4583bc:	add    DWORD PTR [rdi],eax
  4583be:	add    al,0x0
  4583c0:	(bad)  
  4583c1:	xor    al,BYTE PTR [rbx]
  4583c3:	xor    BYTE PTR [rdx],al
  4583c5:	(bad)  
  4583c6:	add    DWORD PTR [rax+0x1],esi
  4583c9:	add    eax,0x32050002
  4583ce:	add    DWORD PTR [rax],esi
  4583d0:	add    DWORD PTR [rax],eax
  4583d2:	add    BYTE PTR [rax],al
  4583d4:	add    DWORD PTR [rax],eax
  4583d6:	add    BYTE PTR [rax],al
  4583d8:	add    DWORD PTR [rax],eax
  4583da:	add    BYTE PTR [rax],al
  4583dc:	add    DWORD PTR [rax],eax
  4583de:	add    BYTE PTR [rax],al
  4583e0:	add    DWORD PTR [rax],eax
  4583e2:	add    BYTE PTR [rax],al
  4583e4:	add    DWORD PTR [rax],eax
  4583e6:	add    BYTE PTR [rax],al
  4583e8:	add    DWORD PTR [rax],eax
  4583ea:	add    BYTE PTR [rax],al
  4583ec:	add    DWORD PTR [rax],eax
  4583ee:	add    BYTE PTR [rax],al
  4583f0:	add    DWORD PTR [rax],eax
  4583f2:	add    BYTE PTR [rax],al
  4583f4:	add    DWORD PTR [rax],eax
  4583f6:	add    BYTE PTR [rax],al
  4583f8:	add    DWORD PTR [rsi],eax
  4583fa:	add    eax,DWORD PTR [rax]
  4583fc:	(bad)  
  4583fd:	rex.X add sil,BYTE PTR [rax]
  458400:	add    DWORD PTR [rax+0x0],esp
  458403:	add    BYTE PTR [rcx],al
  458405:	add    BYTE PTR [rax],al
  458407:	add    BYTE PTR [rcx],al
  458409:	add    BYTE PTR [rax],al
  45840b:	add    BYTE PTR [rcx],al
  45840d:	add    BYTE PTR [rax],al
  45840f:	add    BYTE PTR [rcx],al
  458411:	add    eax,0x32050002
  458416:	add    DWORD PTR [rax],esi
  458418:	add    DWORD PTR [rdi],eax
  45841a:	add    al,0x0
  45841c:	(bad)  
  45841d:	xor    al,BYTE PTR [rbx]
  45841f:	xor    BYTE PTR [rdx],al
  458421:	(bad)  
  458422:	add    DWORD PTR [rax+0x1],esi
  458425:	(bad)  
  458426:	add    al,0x0
  458428:	(bad)  
  458429:	xor    al,BYTE PTR [rbx]
  45842b:	xor    BYTE PTR [rdx],al
  45842d:	(bad)  
  45842e:	add    DWORD PTR [rax+0x1],esi
  458431:	add    eax,0x32050002
  458436:	add    DWORD PTR [rax],esi
  458438:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8440
  45843e:	add    DWORD PTR [rax],esi
  458440:	add    DWORD PTR [rsi],edx
  458442:	or     eax,DWORD PTR [rip+0x190116]        # 0x5e855e
  458448:	lsl    ecx,WORD PTR [rax+rsi*1]
  45844c:	or     esp,DWORD PTR [rax+0xa]
  45844f:	jo     0x45845a
  458451:	rol    BYTE PTR [rdi],0xd0
  458454:	add    eax,0x1f003e0
  458459:	push   rax
  45845a:	add    BYTE PTR [rax],al
  45845c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8464
  458462:	add    DWORD PTR [rax],esi
  458464:	add    DWORD PTR [rax],eax
  458466:	add    BYTE PTR [rax],al
  458468:	add    DWORD PTR [rsi],eax
  45846a:	add    eax,DWORD PTR [rax]
  45846c:	(bad)  
  45846d:	(bad)  
  45846e:	add    dh,BYTE PTR [rax]
  458470:	add    DWORD PTR [rax+0x0],esp
  458473:	add    BYTE PTR [rcx],al
  458475:	or     al,0x7
  458477:	add    BYTE PTR [rdx+riz*4],cl
  45847a:	or     BYTE PTR [rax],dh
  45847c:	(bad)  
  45847d:	(bad)  
  45847e:	(bad)  
  45847f:	jo     0x458486
  458481:	push   rax
  458482:	add    al,0xc0
  458484:	add    dl,al
  458486:	add    BYTE PTR [rax],al
  458488:	add    DWORD PTR [rcx+rax*1],eax
  45848b:	add    BYTE PTR [rdx+rax*2],al
  45848e:	add    BYTE PTR [rax],al
  458490:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8498
  458496:	add    DWORD PTR [rax],esi
  458498:	add    DWORD PTR [rsi],eax
  45849a:	add    eax,DWORD PTR [rax]
  45849c:	(bad)  
  45849d:	rex.X add sil,BYTE PTR [rax]
  4584a0:	add    DWORD PTR [rax+0x0],esp
  4584a3:	add    BYTE PTR [rcx],al
  4584a5:	or     eax,0x10d0007
  4584aa:	(bad)  
  4584ab:	add    BYTE PTR [rsi],al
  4584ad:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58913
  4584b3:	push   rax
  4584b4:	add    al,al
  4584b6:	add    BYTE PTR [rax],al
  4584b8:	add    DWORD PTR [rdi+rax*1],ecx
  4584bb:	add    BYTE PTR [rdx+riz*2],cl
  4584be:	or     BYTE PTR [rax],dh
  4584c0:	(bad)  
  4584c1:	(bad)  
  4584c2:	(bad)  
  4584c3:	jo     0x4584ca
  4584c5:	push   rax
  4584c6:	add    al,0xc0
  4584c8:	add    dl,al
  4584ca:	add    BYTE PTR [rax],al
  4584cc:	add    DWORD PTR [rbx+rcx*1],ebx
  4584cf:	add    eax,0x407011c
  4584d4:	adc    al,0x3
  4584d6:	adc    DWORD PTR [rax],esi
  4584d8:	adc    BYTE PTR [rax+0xf],ah
  4584db:	jo     0x4584eb
  4584dd:	ror    BYTE PTR [rax+rdx*8],0xa
  4584e1:	loopne 0x4584e6
  4584e3:	lock add DWORD PTR [rax+0x0],edx
  4584e7:	add    BYTE PTR [rcx],al
  4584e9:	add    BYTE PTR [rax],al
  4584eb:	add    BYTE PTR [rcx],al
  4584ed:	add    BYTE PTR [rax],al
  4584ef:	add    BYTE PTR [rcx],al
  4584f1:	add    BYTE PTR [rax],al
  4584f3:	add    BYTE PTR [rcx],al
  4584f5:	add    eax,0x32050002
  4584fa:	add    DWORD PTR [rax],esi
  4584fc:	add    DWORD PTR [rcx+rax*1],eax
  4584ff:	add    BYTE PTR [rdx+rax*2],al
  458502:	add    BYTE PTR [rax],al
  458504:	add    DWORD PTR [rcx+rax*1],eax
  458507:	add    BYTE PTR [rdx+rax*2],al
  45850a:	add    BYTE PTR [rax],al
  45850c:	add    DWORD PTR [rcx+rax*1],eax
  45850f:	add    BYTE PTR [rdx+rax*2],al
  458512:	add    BYTE PTR [rax],al
  458514:	add    DWORD PTR [rcx+rax*1],eax
  458517:	add    BYTE PTR [rdx+rax*2],al
  45851a:	add    BYTE PTR [rax],al
  45851c:	add    DWORD PTR [rcx+rax*1],eax
  45851f:	add    BYTE PTR [rdx+rax*2],al
  458522:	add    BYTE PTR [rax],al
  458524:	add    DWORD PTR [rcx+rax*1],eax
  458527:	add    BYTE PTR [rdx+rax*2],al
  45852a:	add    BYTE PTR [rax],al
  45852c:	add    DWORD PTR [rdi],eax
  45852e:	add    al,0x0
  458530:	(bad)  
  458531:	xor    al,BYTE PTR [rbx]
  458533:	xor    BYTE PTR [rdx],al
  458535:	(bad)  
  458536:	add    DWORD PTR [rax+0x1],esi
  458539:	adc    BYTE PTR [rip+0x6011000],al        # 0x646953f
  45853f:	add    cl,BYTE PTR [rax]
  458541:	xor    BYTE PTR [rdx],al
  458543:	(bad)  
  458544:	add    DWORD PTR [rax+0x0],esi
  458547:	add    BYTE PTR [rcx],al
  458549:	add    eax,0x32050002
  45854e:	add    DWORD PTR [rax],esi
  458550:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8558
  458556:	add    DWORD PTR [rax],esi
  458558:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8560
  45855e:	add    DWORD PTR [rax],esi
  458560:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8568
  458566:	add    DWORD PTR [rax],esi
  458568:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8570
  45856e:	add    DWORD PTR [rax],esi
  458570:	add    DWORD PTR [rbx],edx
  458572:	or     al,BYTE PTR [rax]
  458574:	adc    eax,DWORD PTR [rcx]
  458576:	adc    eax,0xb300c00
  45857b:	(bad)  
  45857c:	or     dh,BYTE PTR [rax+0x9]
  45857f:	push   rax
  458580:	or     al,al
  458582:	(bad)  
  458583:	rol    BYTE PTR [rax+riz*8],1
  458586:	add    dh,al
  458588:	add    DWORD PTR [rbx],edx
  45858a:	or     al,BYTE PTR [rax]
  45858c:	adc    eax,DWORD PTR [rcx]
  45858e:	sub    eax,DWORD PTR [rax]
  458590:	or     al,0x30
  458592:	or     esp,DWORD PTR [rax+0xa]
  458595:	jo     0x4585a0
  458597:	push   rax
  458598:	or     al,al
  45859a:	(bad)  
  45859b:	rol    BYTE PTR [rax+riz*8],1
  45859e:	add    dh,al
  4585a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a85a8
  4585a6:	add    DWORD PTR [rax],esi
  4585a8:	add    DWORD PTR [rcx+rax*1],eax
  4585ab:	add    BYTE PTR [rdx+rax*2],al
  4585ae:	add    BYTE PTR [rax],al
  4585b0:	add    DWORD PTR [rsi],eax
  4585b2:	add    eax,DWORD PTR [rax]
  4585b4:	(bad)  
  4585b5:	rex.X add sil,BYTE PTR [rax]
  4585b8:	add    DWORD PTR [rax+0x0],esp
  4585bb:	add    BYTE PTR [rcx],al
  4585bd:	(bad)  
  4585be:	add    al,0x0
  4585c0:	(bad)  
  4585c1:	xor    al,BYTE PTR [rbx]
  4585c3:	xor    BYTE PTR [rdx],al
  4585c5:	(bad)  
  4585c6:	add    DWORD PTR [rax+0x1],esi
  4585c9:	add    eax,0x72050002
  4585ce:	add    DWORD PTR [rax],esi
  4585d0:	add    DWORD PTR [rdi],eax
  4585d2:	add    al,0x0
  4585d4:	(bad)  
  4585d5:	push   rdx
  4585d6:	add    esi,DWORD PTR [rax]
  4585d8:	add    ah,BYTE PTR [rax+0x1]
  4585db:	jo     0x4585de
  4585dd:	(bad)  
  4585de:	add    eax,DWORD PTR [rax]
  4585e0:	(bad)  
  4585e1:	rex.X add sil,BYTE PTR [rax]
  4585e4:	add    DWORD PTR [rax+0x0],esp
  4585e7:	add    BYTE PTR [rcx],al
  4585e9:	or     BYTE PTR [rip+0x4420800],al        # 0x4878def
  4585ef:	xor    BYTE PTR [rbx],al
  4585f1:	(bad)  
  4585f2:	add    dh,BYTE PTR [rax+0x1]
  4585f5:	push   rax
  4585f6:	add    BYTE PTR [rax],al
  4585f8:	add    DWORD PTR [rdi],eax
  4585fa:	add    al,0x0
  4585fc:	(bad)  
  4585fd:	xor    al,BYTE PTR [rbx]
  4585ff:	xor    BYTE PTR [rdx],al
  458601:	(bad)  
  458602:	add    DWORD PTR [rax+0x1],esi
  458605:	or     BYTE PTR [rip+0x4620800],al        # 0x4a78e0b
  45860b:	xor    BYTE PTR [rbx],al
  45860d:	(bad)  
  45860e:	add    dh,BYTE PTR [rax+0x1]
  458611:	push   rax
  458612:	add    BYTE PTR [rax],al
  458614:	add    DWORD PTR [rax],eax
  458616:	add    BYTE PTR [rax],al
  458618:	add    DWORD PTR [rsi],eax
  45861a:	add    eax,DWORD PTR [rax]
  45861c:	(bad)  
  45861d:	(bad)  
  45861f:	xor    BYTE PTR [rcx],al
  458621:	(bad)  
  458622:	add    BYTE PTR [rax],al
  458624:	add    DWORD PTR [rsi],eax
  458626:	add    eax,DWORD PTR [rax]
  458628:	(bad)  
  458629:	rex.X add sil,BYTE PTR [rax]
  45862c:	add    DWORD PTR [rax+0x0],esp
  45862f:	add    BYTE PTR [rcx],al
  458631:	add    al,0x1
  458633:	add    BYTE PTR [rdx+rax*2],al
  458636:	add    BYTE PTR [rax],al
  458638:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8640
  45863e:	add    DWORD PTR [rax],esi
  458640:	add    DWORD PTR [rsi],eax
  458642:	add    eax,DWORD PTR [rax]
  458644:	(bad)  
  458645:	(bad)  
  458647:	xor    BYTE PTR [rcx],al
  458649:	(bad)  
  45864a:	add    BYTE PTR [rax],al
  45864c:	add    DWORD PTR [rdi+rax*1],ecx
  45864f:	add    BYTE PTR [rdx+rax*8],cl
  458652:	or     BYTE PTR [rax],dh
  458654:	(bad)  
  458655:	(bad)  
  458656:	(bad)  
  458657:	jo     0x45865e
  458659:	push   rax
  45865a:	add    al,0xc0
  45865c:	add    dl,al
  45865e:	add    BYTE PTR [rax],al
  458660:	add    DWORD PTR [rdi],eax
  458662:	add    al,0x0
  458664:	(bad)  
  458665:	push   rdx
  458666:	add    esi,DWORD PTR [rax]
  458668:	add    ah,BYTE PTR [rax+0x1]
  45866b:	jo     0x45866e
  45866d:	or     eax,DWORD PTR [rsi]
  45866f:	add    BYTE PTR [rbx],cl
  458671:	add    DWORD PTR [rbx+0x3300400],ebx
  458677:	(bad)  
  458678:	add    dh,BYTE PTR [rax+0x1]
  45867b:	push   rax
  45867c:	add    DWORD PTR [rsi],eax
  45867e:	add    eax,DWORD PTR [rax]
  458680:	(bad)  
  458681:	rex.X add sil,BYTE PTR [rax]
  458684:	add    DWORD PTR [rax+0x0],esp
  458687:	add    BYTE PTR [rcx],al
  458689:	(bad)  
  45868a:	add    eax,DWORD PTR [rax]
  45868c:	(bad)  
  45868d:	rex.X add sil,BYTE PTR [rax]
  458690:	add    DWORD PTR [rax+0x0],esp
  458693:	add    BYTE PTR [rcx],al
  458695:	adc    BYTE PTR [rcx],cl
  458697:	add    BYTE PTR [rax],dl
  458699:	(bad)  
  45869a:	or     al,0x30
  45869c:	or     esp,DWORD PTR [rax+0xa]
  45869f:	jo     0x4586aa
  4586a1:	push   rax
  4586a2:	or     al,al
  4586a4:	(bad)  
  4586a5:	rol    BYTE PTR [rax+riz*8],1
  4586a8:	add    dh,al
  4586aa:	add    BYTE PTR [rax],al
  4586ac:	add    DWORD PTR [rax],edx
  4586ae:	or     DWORD PTR [rax],eax
  4586b0:	adc    BYTE PTR [rdx+0xc],ah
  4586b3:	xor    BYTE PTR [rbx],cl
  4586b5:	(bad)  
  4586b6:	or     dh,BYTE PTR [rax+0x9]
  4586b9:	push   rax
  4586ba:	or     al,al
  4586bc:	(bad)  
  4586bd:	rol    BYTE PTR [rax+riz*8],1
  4586c0:	add    dh,al
  4586c2:	add    BYTE PTR [rax],al
  4586c4:	add    DWORD PTR [rcx+rax*1],eax
  4586c7:	add    BYTE PTR [rdx+rax*2],al
  4586ca:	add    BYTE PTR [rax],al
  4586cc:	add    DWORD PTR [rsi],eax
  4586ce:	add    eax,DWORD PTR [rax]
  4586d0:	(bad)  
  4586d1:	rex.X add sil,BYTE PTR [rax]
  4586d4:	add    DWORD PTR [rax+0x0],esp
  4586d7:	add    BYTE PTR [rcx],al
  4586d9:	add    BYTE PTR [rax],al
  4586db:	add    BYTE PTR [rcx],al
  4586dd:	or     al,BYTE PTR [rsi]
  4586df:	add    BYTE PTR [rdx],cl
  4586e1:	xor    al,BYTE PTR [rsi]
  4586e3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58b49
  4586e9:	push   rax
  4586ea:	add    al,al
  4586ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a86f4
  4586f2:	add    DWORD PTR [rax],esi
  4586f4:	add    DWORD PTR [rdi+rax*1],ecx
  4586f7:	add    BYTE PTR [rdx+rax*2],cl
  4586fa:	or     BYTE PTR [rax],dh
  4586fc:	(bad)  
  4586fd:	(bad)  
  4586fe:	(bad)  
  4586ff:	jo     0x458706
  458701:	push   rax
  458702:	add    al,0xc0
  458704:	add    dl,al
  458706:	add    BYTE PTR [rax],al
  458708:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a8710
  45870e:	add    DWORD PTR [rax],esi
  458710:	add    DWORD PTR [rbx],edx
  458712:	or     al,BYTE PTR [rax]
  458714:	adc    eax,DWORD PTR [rcx]
  458716:	adc    eax,0xb300c00
  45871b:	(bad)  
  45871c:	or     dh,BYTE PTR [rax+0x9]
  45871f:	push   rax
  458720:	or     al,al
  458722:	(bad)  
  458723:	rol    BYTE PTR [rax+riz*8],1
  458726:	add    dh,al
  458728:	add    DWORD PTR [rbx],edx
  45872a:	or     al,BYTE PTR [rax]
  45872c:	adc    eax,DWORD PTR [rcx]
  45872e:	and    eax,0xb300c00
  458733:	(bad)  
  458734:	or     dh,BYTE PTR [rax+0x9]
  458737:	push   rax
  458738:	or     al,al
  45873a:	(bad)  
  45873b:	rol    BYTE PTR [rax+riz*8],1
  45873e:	add    dh,al
  458740:	add    DWORD PTR [rax],ecx
  458742:	add    eax,0x4420800
  458747:	xor    BYTE PTR [rbx],al
  458749:	(bad)  
  45874a:	add    dh,BYTE PTR [rax+0x1]
  45874d:	push   rax
  45874e:	add    BYTE PTR [rax],al
  458750:	add    DWORD PTR [rax],ecx
  458752:	add    eax,0x4420800
  458757:	xor    BYTE PTR [rbx],al
  458759:	(bad)  
  45875a:	add    dh,BYTE PTR [rax+0x1]
  45875d:	push   rax
  45875e:	add    BYTE PTR [rax],al
  458760:	add    DWORD PTR [rdi],eax
  458762:	add    al,0x0
  458764:	(bad)  
  458765:	xor    al,BYTE PTR [rbx]
  458767:	xor    BYTE PTR [rdx],al
  458769:	(bad)  
  45876a:	add    DWORD PTR [rax+0x1],esi
  45876d:	(bad)  
  45876e:	add    al,0x0
  458770:	(bad)  
  458771:	xor    al,BYTE PTR [rbx]
  458773:	xor    BYTE PTR [rdx],al
  458775:	(bad)  
  458776:	add    DWORD PTR [rax+0x1],esi
  458779:	(bad)  
  45877a:	add    eax,DWORD PTR [rax]
  45877c:	(bad)  
  45877d:	rex.X add sil,BYTE PTR [rax]
  458780:	add    DWORD PTR [rax+0x0],esp
  458783:	add    BYTE PTR [rcx],al
  458785:	(bad)  
  458786:	add    eax,DWORD PTR [rax]
  458788:	(bad)  
  458789:	rex.X add sil,BYTE PTR [rax]
  45878c:	add    DWORD PTR [rax+0x0],esp
  45878f:	add    BYTE PTR [rcx],al
  458791:	adc    BYTE PTR [rcx],cl
  458793:	add    BYTE PTR [rax],dl
  458795:	movabs ds:0x5009700a600b300c,al
  45879e:	or     al,al
  4587a0:	(bad)  
  4587a1:	rol    BYTE PTR [rax+riz*8],1
  4587a4:	add    dh,al
  4587a6:	add    BYTE PTR [rax],al
  4587a8:	add    DWORD PTR [rbx],edx
  4587aa:	or     al,BYTE PTR [rax]
  4587ac:	adc    eax,DWORD PTR [rcx]
  4587ae:	sbb    eax,0xb300c00
  4587b3:	(bad)  
  4587b4:	or     dh,BYTE PTR [rax+0x9]
  4587b7:	push   rax
  4587b8:	or     al,al
  4587ba:	(bad)  
  4587bb:	rol    BYTE PTR [rax+riz*8],1
  4587be:	add    dh,al
  4587c0:	add    DWORD PTR [rdi],eax
  4587c2:	add    al,0x0
  4587c4:	(bad)  
  4587c5:	xor    al,BYTE PTR [rbx]
  4587c7:	xor    BYTE PTR [rdx],al
  4587c9:	(bad)  
  4587ca:	add    DWORD PTR [rax+0x1],esi
  4587cd:	add    BYTE PTR [rax],al
  4587cf:	add    BYTE PTR [rcx],al
  4587d1:	adc    BYTE PTR [rcx],cl
  4587d3:	add    BYTE PTR [rax],dl
  4587d5:	(bad)  
  4587d6:	or     al,0x30
  4587d8:	or     esp,DWORD PTR [rax+0xa]
  4587db:	jo     0x4587e6
  4587dd:	push   rax
  4587de:	or     al,al
  4587e0:	(bad)  
  4587e1:	rol    BYTE PTR [rax+riz*8],1
  4587e4:	add    dh,al
  4587e6:	add    BYTE PTR [rax],al
  4587e8:	add    DWORD PTR [rsi],eax
  4587ea:	add    eax,DWORD PTR [rax]
  4587ec:	(bad)  
  4587ed:	rex.X add sil,BYTE PTR [rax]
  4587f0:	add    DWORD PTR [rax+0x0],esp
  4587f3:	add    BYTE PTR [rcx],al
  4587f5:	adc    DWORD PTR [rcx],ecx
  4587f7:	add    BYTE PTR [rcx],dl
  4587f9:	add    DWORD PTR [rax+rax*1+0x6009300a],ebx
  458800:	or     BYTE PTR [rax+0x7],dh
  458803:	push   rax
  458804:	(bad)  
  458805:	rol    BYTE PTR [rax+rdx*8],0x2
  458809:	loopne 0x45880b
  45880b:	add    BYTE PTR [rcx],al
  45880d:	add    BYTE PTR [rax],al
  45880f:	add    BYTE PTR [rcx],al
  458811:	(bad)  
  458812:	add    al,0x0
  458814:	(bad)  
  458815:	xchg   edx,eax
  458816:	add    esi,DWORD PTR [rax]
  458818:	add    ah,BYTE PTR [rax+0x1]
  45881b:	jo     0x45881e
  45881d:	adc    ecx,DWORD PTR [rdx]
  45881f:	add    BYTE PTR [rbx],dl
  458821:	add    DWORD PTR [rbp+0x0],ecx
  458824:	or     al,0x30
  458826:	or     esp,DWORD PTR [rax+0xa]
  458829:	jo     0x458834
  45882b:	push   rax
  45882c:	or     al,al
  45882e:	(bad)  
  45882f:	rol    BYTE PTR [rax+riz*8],1
  458832:	add    dh,al
  458834:	add    DWORD PTR [rcx],edx
  458836:	or     DWORD PTR [rax],eax
  458838:	adc    DWORD PTR [rcx],eax
  45883a:	and    al,BYTE PTR [rax]
  45883c:	or     dh,BYTE PTR [rax]
  45883e:	or     DWORD PTR [rax+0x8],esp
  458841:	jo     0x45884a
  458843:	push   rax
  458844:	(bad)  
  458845:	rol    BYTE PTR [rax+rdx*8],0x2
  458849:	loopne 0x45884b
  45884b:	add    BYTE PTR [rcx],al
  45884d:	invd   
  45884f:	add    BYTE PTR [rdi],cl
  458851:	add    DWORD PTR [rbx],esp
  458853:	add    BYTE PTR [rax],cl
  458855:	xor    BYTE PTR [rdi],al
  458857:	(bad)  
  458858:	(bad)  
  458859:	jo     0x458860
  45885b:	push   rax
  45885c:	add    al,0xc0
  45885e:	add    dl,al
  458860:	add    DWORD PTR [rbx],edx
  458862:	or     al,BYTE PTR [rax]
  458864:	adc    eax,DWORD PTR [rcx]
  458866:	sub    eax,DWORD PTR [rax]
  458868:	or     al,0x30
  45886a:	or     esp,DWORD PTR [rax+0xa]
  45886d:	jo     0x458878
  45886f:	push   rax
  458870:	or     al,al
  458872:	(bad)  
  458873:	rol    BYTE PTR [rax+riz*8],1
  458876:	add    dh,al
  458878:	add    DWORD PTR [rbx],edx
  45887a:	or     al,BYTE PTR [rax]
  45887c:	adc    eax,DWORD PTR [rcx]
  45887e:	and    eax,DWORD PTR [rax]
  458880:	or     al,0x30
  458882:	or     esp,DWORD PTR [rax+0xa]
  458885:	jo     0x458890
  458887:	push   rax
  458888:	or     al,al
  45888a:	(bad)  
  45888b:	rol    BYTE PTR [rax+riz*8],1
  45888e:	add    dh,al
  458890:	add    DWORD PTR [rbx],edx
  458892:	or     al,BYTE PTR [rax]
  458894:	adc    eax,DWORD PTR [rcx]
  458896:	and    eax,DWORD PTR [rax]
  458898:	or     al,0x30
  45889a:	or     esp,DWORD PTR [rax+0xa]
  45889d:	jo     0x4588a8
  45889f:	push   rax
  4588a0:	or     al,al
  4588a2:	(bad)  
  4588a3:	rol    BYTE PTR [rax+riz*8],1
  4588a6:	add    dh,al
  4588a8:	add    DWORD PTR [rcx],edx
  4588aa:	or     DWORD PTR [rax],eax
  4588ac:	adc    DWORD PTR [rcx],eax
  4588ae:	and    al,BYTE PTR [rax]
  4588b0:	or     dh,BYTE PTR [rax]
  4588b2:	or     DWORD PTR [rax+0x8],esp
  4588b5:	jo     0x4588be
  4588b7:	push   rax
  4588b8:	(bad)  
  4588b9:	rol    BYTE PTR [rax+rdx*8],0x2
  4588bd:	loopne 0x4588bf
  4588bf:	add    BYTE PTR [rcx],al
  4588c1:	invd   
  4588c3:	add    BYTE PTR [rdi],cl
  4588c5:	add    DWORD PTR [rbx],esp
  4588c7:	add    BYTE PTR [rax],cl
  4588c9:	xor    BYTE PTR [rdi],al
  4588cb:	(bad)  
  4588cc:	(bad)  
  4588cd:	jo     0x4588d4
  4588cf:	push   rax
  4588d0:	add    al,0xc0
  4588d2:	add    dl,al
  4588d4:	add    DWORD PTR [rdi],ecx
  4588d6:	or     BYTE PTR [rax],al
  4588d8:	smsw   WORD PTR [rdi]
  4588db:	add    BYTE PTR [rax],cl
  4588dd:	xor    BYTE PTR [rdi],al
  4588df:	(bad)  
  4588e0:	(bad)  
  4588e1:	jo     0x4588e8
  4588e3:	push   rax
  4588e4:	add    al,0xc0
  4588e6:	add    dl,al
  4588e8:	add    DWORD PTR [rcx],edx
  4588ea:	or     DWORD PTR [rax],eax
  4588ec:	adc    DWORD PTR [rcx],eax
  4588ee:	and    al,BYTE PTR [rax]
  4588f0:	or     dh,BYTE PTR [rax]
  4588f2:	or     DWORD PTR [rax+0x8],esp
  4588f5:	jo     0x4588fe
  4588f7:	push   rax
  4588f8:	(bad)  
  4588f9:	rol    BYTE PTR [rax+rdx*8],0x2
  4588fd:	loopne 0x4588ff
  4588ff:	add    BYTE PTR [rcx],al
  458901:	invd   
  458903:	add    BYTE PTR [rdi],cl
  458905:	add    DWORD PTR [rcx],edx
  458907:	add    BYTE PTR [rax],cl
  458909:	xor    BYTE PTR [rdi],al
  45890b:	(bad)  
  45890c:	(bad)  
  45890d:	jo     0x458914
  45890f:	push   rax
  458910:	add    al,0xc0
  458912:	add    dl,al
  458914:	add    DWORD PTR [rbx],edx
  458916:	or     al,BYTE PTR [rax]
  458918:	adc    eax,DWORD PTR [rcx]
  45891a:	sub    eax,0xb300c00
  45891f:	(bad)  
  458920:	or     dh,BYTE PTR [rax+0x9]
  458923:	push   rax
  458924:	or     al,al
  458926:	(bad)  
  458927:	rol    BYTE PTR [rax+riz*8],1
  45892a:	add    dh,al
  45892c:	add    DWORD PTR [rdi],ecx
  45892e:	or     BYTE PTR [rax],al
  458930:	smsw   WORD PTR [rbx]
  458933:	add    BYTE PTR [rax],cl
  458935:	xor    BYTE PTR [rdi],al
  458937:	(bad)  
  458938:	(bad)  
  458939:	jo     0x458940
  45893b:	push   rax
  45893c:	add    al,0xc0
  45893e:	add    dl,al
  458940:	add    DWORD PTR [rbx],edx
  458942:	or     al,BYTE PTR [rax]
  458944:	adc    eax,DWORD PTR [rcx]
  458946:	sub    DWORD PTR [rax],eax
  458948:	or     al,0x30
  45894a:	or     esp,DWORD PTR [rax+0xa]
  45894d:	jo     0x458958
  45894f:	push   rax
  458950:	or     al,al
  458952:	(bad)  
  458953:	rol    BYTE PTR [rax+riz*8],1
  458956:	add    dh,al
  458958:	add    DWORD PTR [rbx],edx
  45895a:	or     al,BYTE PTR [rax]
  45895c:	adc    eax,DWORD PTR [rcx]
  45895e:	and    eax,DWORD PTR [rax]
  458960:	or     al,0x30
  458962:	or     esp,DWORD PTR [rax+0xa]
  458965:	jo     0x458970
  458967:	push   rax
  458968:	or     al,al
  45896a:	(bad)  
  45896b:	rol    BYTE PTR [rax+riz*8],1
  45896e:	add    dh,al
  458970:	add    DWORD PTR [rbx],edx
  458972:	or     al,BYTE PTR [rax]
  458974:	adc    eax,DWORD PTR [rcx]
  458976:	and    eax,DWORD PTR [rax]
  458978:	or     al,0x30
  45897a:	or     esp,DWORD PTR [rax+0xa]
  45897d:	jo     0x458988
  45897f:	push   rax
  458980:	or     al,al
  458982:	(bad)  
  458983:	rol    BYTE PTR [rax+riz*8],1
  458986:	add    dh,al
  458988:	add    DWORD PTR [rbx],edx
  45898a:	or     al,BYTE PTR [rax]
  45898c:	adc    eax,DWORD PTR [rcx]
  45898e:	and    eax,DWORD PTR [rax]
  458990:	or     al,0x30
  458992:	or     esp,DWORD PTR [rax+0xa]
  458995:	jo     0x4589a0
  458997:	push   rax
  458998:	or     al,al
  45899a:	(bad)  
  45899b:	rol    BYTE PTR [rax+riz*8],1
  45899e:	add    dh,al
  4589a0:	add    DWORD PTR [rcx],edx
  4589a2:	or     DWORD PTR [rax],eax
  4589a4:	adc    DWORD PTR [rcx],eax
  4589a6:	and    al,0x0
  4589a8:	or     dh,BYTE PTR [rax]
  4589aa:	or     DWORD PTR [rax+0x8],esp
  4589ad:	jo     0x4589b6
  4589af:	push   rax
  4589b0:	(bad)  
  4589b1:	rol    BYTE PTR [rax+rdx*8],0x2
  4589b5:	loopne 0x4589b7
  4589b7:	add    BYTE PTR [rcx],al
  4589b9:	adc    DWORD PTR [rcx],ecx
  4589bb:	add    BYTE PTR [rcx],dl
  4589bd:	add    DWORD PTR [rdx],esp
  4589bf:	add    BYTE PTR [rdx],cl
  4589c1:	xor    BYTE PTR [rcx],cl
  4589c3:	(bad)  
  4589c4:	or     BYTE PTR [rax+0x7],dh
  4589c7:	push   rax
  4589c8:	(bad)  
  4589c9:	rol    BYTE PTR [rax+rdx*8],0x2
  4589cd:	loopne 0x4589cf
  4589cf:	add    BYTE PTR [rcx],al
  4589d1:	adc    ecx,DWORD PTR [rdx]
  4589d3:	add    BYTE PTR [rbx],dl
  4589d5:	add    DWORD PTR [rbx],esp
  4589d7:	add    BYTE PTR [rax+rsi*1],cl
  4589da:	or     esp,DWORD PTR [rax+0xa]
  4589dd:	jo     0x4589e8
  4589df:	push   rax
  4589e0:	or     al,al
  4589e2:	(bad)  
  4589e3:	rol    BYTE PTR [rax+riz*8],1
  4589e6:	add    dh,al
  4589e8:	add    DWORD PTR [rbx],edx
  4589ea:	or     al,BYTE PTR [rax]
  4589ec:	adc    eax,DWORD PTR [rcx]
  4589ee:	and    eax,DWORD PTR [rax]
  4589f0:	or     al,0x30
  4589f2:	or     esp,DWORD PTR [rax+0xa]
  4589f5:	jo     0x458a00
  4589f7:	push   rax
  4589f8:	or     al,al
  4589fa:	(bad)  
  4589fb:	rol    BYTE PTR [rax+riz*8],1
  4589fe:	add    dh,al
  458a00:	add    DWORD PTR [rbx],edx
  458a02:	or     al,BYTE PTR [rax]
  458a04:	adc    eax,DWORD PTR [rcx]
  458a06:	(bad)
  458a09:	xor    BYTE PTR [rbx],cl
  458a0b:	(bad)  
  458a0c:	or     dh,BYTE PTR [rax+0x9]
  458a0f:	push   rax
  458a10:	or     al,al
  458a12:	(bad)  
  458a13:	rol    BYTE PTR [rax+riz*8],1
  458a16:	add    dh,al
  458a18:	add    DWORD PTR [rcx],edx
  458a1a:	or     DWORD PTR [rax],eax
  458a1c:	adc    DWORD PTR [rcx],eax
  458a1e:	and    al,BYTE PTR [rax]
  458a20:	or     dh,BYTE PTR [rax]
  458a22:	or     DWORD PTR [rax+0x8],esp
  458a25:	jo     0x458a2e
  458a27:	push   rax
  458a28:	(bad)  
  458a29:	rol    BYTE PTR [rax+rdx*8],0x2
  458a2d:	loopne 0x458a2f
  458a2f:	add    BYTE PTR [rcx],al
  458a31:	invd   
  458a33:	add    BYTE PTR [rdi],cl
  458a35:	add    DWORD PTR [rbx],esp
  458a37:	add    BYTE PTR [rax],cl
  458a39:	xor    BYTE PTR [rdi],al
  458a3b:	(bad)  
  458a3c:	(bad)  
  458a3d:	jo     0x458a44
  458a3f:	push   rax
  458a40:	add    al,0xc0
  458a42:	add    dl,al
  458a44:	add    DWORD PTR [rbx],edx
  458a46:	or     al,BYTE PTR [rax]
  458a48:	adc    eax,DWORD PTR [rcx]
  458a4a:	add    BYTE PTR [r8+rsi*1],r9b
  458a4e:	or     esp,DWORD PTR [rax+0xa]
  458a51:	jo     0x458a5c
  458a53:	push   rax
  458a54:	or     al,al
  458a56:	(bad)  
  458a57:	rol    BYTE PTR [rax+riz*8],1
  458a5a:	add    dh,al
  458a5c:	add    DWORD PTR [rcx],edx
  458a5e:	or     DWORD PTR [rax],eax
  458a60:	adc    DWORD PTR [rcx],eax
  458a62:	and    al,BYTE PTR [rax]
  458a64:	or     dh,BYTE PTR [rax]
  458a66:	or     DWORD PTR [rax+0x8],esp
  458a69:	jo     0x458a72
  458a6b:	push   rax
  458a6c:	(bad)  
  458a6d:	rol    BYTE PTR [rax+rdx*8],0x2
  458a71:	loopne 0x458a73
  458a73:	add    BYTE PTR [rcx],al
  458a75:	adc    DWORD PTR [rcx],ecx
  458a77:	add    BYTE PTR [rcx],dl
  458a79:	add    DWORD PTR [rdx],esp
  458a7b:	add    BYTE PTR [rdx],cl
  458a7d:	xor    BYTE PTR [rcx],cl
  458a7f:	(bad)  
  458a80:	or     BYTE PTR [rax+0x7],dh
  458a83:	push   rax
  458a84:	(bad)  
  458a85:	rol    BYTE PTR [rax+rdx*8],0x2
  458a89:	loopne 0x458a8b
  458a8b:	add    BYTE PTR [rcx],al
  458a8d:	invd   
  458a8f:	add    BYTE PTR [rdi],cl
  458a91:	add    DWORD PTR [rbx],esp
  458a93:	add    BYTE PTR [rax],cl
  458a95:	xor    BYTE PTR [rdi],al
  458a97:	(bad)  
  458a98:	(bad)  
  458a99:	jo     0x458aa0
  458a9b:	push   rax
  458a9c:	add    al,0xc0
  458a9e:	add    dl,al
  458aa0:	add    DWORD PTR [rcx],edx
  458aa2:	or     DWORD PTR [rax],eax
  458aa4:	adc    DWORD PTR [rcx],eax
  458aa6:	and    al,BYTE PTR [rax]
  458aa8:	or     dh,BYTE PTR [rax]
  458aaa:	or     DWORD PTR [rax+0x8],esp
  458aad:	jo     0x458ab6
  458aaf:	push   rax
  458ab0:	(bad)  
  458ab1:	rol    BYTE PTR [rax+rdx*8],0x2
  458ab5:	loopne 0x458ab7
  458ab7:	add    BYTE PTR [rcx],al
  458ab9:	or     eax,0x10d0007
  458abe:	and    al,BYTE PTR [rax]
  458ac0:	(bad)  
  458ac1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58f27
  458ac7:	push   rax
  458ac8:	add    al,al
  458aca:	add    BYTE PTR [rax],al
  458acc:	add    DWORD PTR [rbx],ecx
  458ace:	(bad)  
  458acf:	add    BYTE PTR [rbx],cl
  458ad1:	add    DWORD PTR [rcx],edx
  458ad3:	add    BYTE PTR [rax+rsi*1],al
  458ad6:	add    esp,DWORD PTR [rax+0x2]
  458ad9:	jo     0x458adc
  458adb:	push   rax
  458adc:	add    DWORD PTR [rcx+rax*1],eax
  458adf:	add    BYTE PTR [rdx+rax*2],al
  458ae2:	add    BYTE PTR [rax],al
  458ae4:	add    DWORD PTR [rdx],ecx
  458ae6:	(bad)  
  458ae7:	add    BYTE PTR [rdx],cl
  458ae9:	xor    al,BYTE PTR [rsi]
  458aeb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58f51
  458af1:	push   rax
  458af2:	add    al,al
  458af4:	add    DWORD PTR [rax],edx
  458af6:	or     DWORD PTR [rax],eax
  458af8:	adc    BYTE PTR [rdx+0xc],ah
  458afb:	xor    BYTE PTR [rbx],cl
  458afd:	(bad)  
  458afe:	or     dh,BYTE PTR [rax+0x9]
  458b01:	push   rax
  458b02:	or     al,al
  458b04:	(bad)  
  458b05:	rol    BYTE PTR [rax+riz*8],1
  458b08:	add    dh,al
  458b0a:	add    BYTE PTR [rax],al
  458b0c:	add    DWORD PTR [rax],edx
  458b0e:	or     DWORD PTR [rax],eax
  458b10:	adc    BYTE PTR [rdx+0xc],al
  458b13:	xor    BYTE PTR [rbx],cl
  458b15:	(bad)  
  458b16:	or     dh,BYTE PTR [rax+0x9]
  458b19:	push   rax
  458b1a:	or     al,al
  458b1c:	(bad)  
  458b1d:	rol    BYTE PTR [rax+riz*8],1
  458b20:	add    dh,al
  458b22:	add    BYTE PTR [rax],al
  458b24:	add    DWORD PTR [rsi],eax
  458b26:	add    eax,DWORD PTR [rax]
  458b28:	(bad)  
  458b29:	rex.X add sil,BYTE PTR [rax]
  458b2c:	add    DWORD PTR [rax+0x0],esp
  458b2f:	add    BYTE PTR [rcx],al
  458b31:	add    al,0x1
  458b33:	add    BYTE PTR [rdx+rax*2],al
  458b36:	add    BYTE PTR [rax],al
  458b38:	add    DWORD PTR [rdi],eax
  458b3a:	add    al,0x0
  458b3c:	(bad)  
  458b3d:	xor    al,BYTE PTR [rbx]
  458b3f:	xor    BYTE PTR [rdx],al
  458b41:	(bad)  
  458b42:	add    DWORD PTR [rax+0x1],esi
  458b45:	(bad)  
  458b46:	add    al,0x0
  458b48:	(bad)  
  458b49:	xor    al,BYTE PTR [rbx]
  458b4b:	xor    BYTE PTR [rdx],al
  458b4d:	(bad)  
  458b4e:	add    DWORD PTR [rax+0x1],esi
  458b51:	(bad)  
  458b52:	add    eax,DWORD PTR [rax]
  458b54:	(bad)  
  458b55:	rex.X add sil,BYTE PTR [rax]
  458b58:	add    DWORD PTR [rax+0x0],esp
  458b5b:	add    BYTE PTR [rcx],al
  458b5d:	or     BYTE PTR [rip+0x4420800],al        # 0x4879363
  458b63:	xor    BYTE PTR [rbx],al
  458b65:	(bad)  
  458b66:	add    dh,BYTE PTR [rax+0x1]
  458b69:	push   rax
  458b6a:	add    BYTE PTR [rax],al
  458b6c:	add    DWORD PTR [rdx],ecx
  458b6e:	(bad)  
  458b6f:	add    BYTE PTR [rdx],cl
  458b71:	xor    al,BYTE PTR [rsi]
  458b73:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58fd9
  458b79:	push   rax
  458b7a:	add    al,al
  458b7c:	add    DWORD PTR [rax],ecx
  458b7e:	add    eax,0x4620800
  458b83:	xor    BYTE PTR [rbx],al
  458b85:	(bad)  
  458b86:	add    dh,BYTE PTR [rax+0x1]
  458b89:	push   rax
  458b8a:	add    BYTE PTR [rax],al
  458b8c:	add    DWORD PTR [rdx],ecx
  458b8e:	(bad)  
  458b8f:	add    BYTE PTR [rdx],cl
  458b91:	xor    al,BYTE PTR [rsi]
  458b93:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b58ff9
  458b99:	push   rax
  458b9a:	add    al,al
  458b9c:	add    DWORD PTR [rdx],ecx
  458b9e:	(bad)  
  458b9f:	add    BYTE PTR [rdx],cl
  458ba1:	xor    al,BYTE PTR [rsi]
  458ba3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b59009
  458ba9:	push   rax
  458baa:	add    al,al
  458bac:	add    DWORD PTR [rax],ecx
  458bae:	add    eax,0x4420800
  458bb3:	xor    BYTE PTR [rbx],al
  458bb5:	(bad)  
  458bb6:	add    dh,BYTE PTR [rax+0x1]
  458bb9:	push   rax
  458bba:	add    BYTE PTR [rax],al
  458bbc:	add    DWORD PTR [rbx],edx
  458bbe:	or     al,BYTE PTR [rax]
  458bc0:	adc    eax,DWORD PTR [rcx]
  458bc2:	adc    DWORD PTR [rax],eax
  458bc4:	or     al,0x30
  458bc6:	or     esp,DWORD PTR [rax+0xa]
  458bc9:	jo     0x458bd4
  458bcb:	push   rax
  458bcc:	or     al,al
  458bce:	(bad)  
  458bcf:	rol    BYTE PTR [rax+riz*8],1
  458bd2:	add    dh,al
  458bd4:	add    DWORD PTR [rcx],eax
  458bd6:	add    DWORD PTR [rax],eax
  458bd8:	add    DWORD PTR [rax],esi
  458bda:	add    BYTE PTR [rax],al
  458bdc:	add    DWORD PTR [rdx],ecx
  458bde:	(bad)  
  458bdf:	add    BYTE PTR [rdx],cl
  458be1:	jb     0x458be9
  458be3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b59049
  458be9:	push   rax
  458bea:	add    al,al
  458bec:	add    DWORD PTR [rax],edx
  458bee:	or     DWORD PTR [rax],eax
  458bf0:	adc    dl,ah
  458bf2:	or     al,0x30
  458bf4:	or     esp,DWORD PTR [rax+0xa]
  458bf7:	jo     0x458c02
  458bf9:	push   rax
  458bfa:	or     al,al
  458bfc:	(bad)  
  458bfd:	rol    BYTE PTR [rax+riz*8],1
  458c00:	add    dh,al
  458c02:	add    BYTE PTR [rax],al
  458c04:	add    DWORD PTR [rax],eax
  458c06:	add    BYTE PTR [rax],al
  458c08:	add    DWORD PTR [rax],edx
  458c0a:	or     DWORD PTR [rax],eax
  458c0c:	adc    BYTE PTR [rdx+0xc],al
  458c0f:	xor    BYTE PTR [rbx],cl
  458c11:	(bad)  
  458c12:	or     dh,BYTE PTR [rax+0x9]
  458c15:	push   rax
  458c16:	or     al,al
  458c18:	(bad)  
  458c19:	rol    BYTE PTR [rax+riz*8],1
  458c1c:	add    dh,al
  458c1e:	add    BYTE PTR [rax],al
  458c20:	add    DWORD PTR [rdi],eax
  458c22:	add    al,0x0
  458c24:	(bad)  
  458c25:	xor    al,BYTE PTR [rbx]
  458c27:	xor    BYTE PTR [rdx],al
  458c29:	(bad)  
  458c2a:	add    DWORD PTR [rax+0x1],esi
  458c2d:	(bad)  
  458c2e:	add    eax,DWORD PTR [rax]
  458c30:	(bad)  
  458c31:	rex.X add sil,BYTE PTR [rax]
  458c34:	add    DWORD PTR [rax+0x0],esp
  458c37:	add    BYTE PTR [rcx],al
  458c39:	or     al,BYTE PTR [rsi]
  458c3b:	add    BYTE PTR [rdx],cl
  458c3d:	mov    dl,0x6
  458c3f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b590a5
  458c45:	push   rax
  458c46:	add    al,al
  458c48:	add    DWORD PTR [rax],eax
  458c4a:	add    BYTE PTR [rax],al
  458c4c:	add    DWORD PTR [rdi],eax
  458c4e:	add    al,BYTE PTR [rax]
  458c50:	(bad)  
  458c51:	add    DWORD PTR [rdi],edx
  458c53:	add    BYTE PTR [rcx],al
  458c55:	add    al,0x1
  458c57:	add    BYTE PTR [rdx+rax*4],al
  458c5a:	add    BYTE PTR [rax],al
  458c5c:	add    DWORD PTR [rcx+rax*1],eax
  458c5f:	add    BYTE PTR [rdx+rax*4],al
  458c62:	add    BYTE PTR [rax],al
  458c64:	add    DWORD PTR [rdi],eax
  458c66:	add    al,BYTE PTR [rax]
  458c68:	(bad)  
  458c69:	add    DWORD PTR [rip+0x1040100],edx        # 0x1498d6f
  458c6f:	add    BYTE PTR [rdx+riz*8],al
  458c72:	add    BYTE PTR [rax],al
  458c74:	add    DWORD PTR [rdi],eax
  458c76:	add    al,BYTE PTR [rax]
  458c78:	(bad)  
  458c79:	add    DWORD PTR [rip+0x1040100],edx        # 0x1498d7f
  458c7f:	add    BYTE PTR [rdx+rax*4],al
  458c82:	add    BYTE PTR [rax],al
  458c84:	add    DWORD PTR [rdi],eax
  458c86:	add    al,BYTE PTR [rax]
  458c88:	(bad)  
  458c89:	add    DWORD PTR [rdi],esi
  458c8b:	add    BYTE PTR [rcx],al
  458c8d:	add    al,0x1
  458c8f:	add    BYTE PTR [rdx+rax*8],al
  458c92:	add    BYTE PTR [rax],al
  458c94:	add    DWORD PTR [rdi],eax
  458c96:	add    al,BYTE PTR [rax]
  458c98:	(bad)  
  458c99:	add    DWORD PTR [rcx],ebp
  458c9b:	add    BYTE PTR [rcx],al
  458c9d:	(bad)  
  458c9e:	add    al,BYTE PTR [rax]
  458ca0:	(bad)  
  458ca1:	add    DWORD PTR [rdi],ebx
  458ca3:	add    BYTE PTR [rcx],al
  458ca5:	add    al,0x1
  458ca7:	add    BYTE PTR [rdx+rax*4],al
  458caa:	add    BYTE PTR [rax],al
  458cac:	add    DWORD PTR [rcx+rax*1],eax
  458caf:	add    BYTE PTR [rdx+riz*8],al
  458cb2:	add    BYTE PTR [rax],al
  458cb4:	add    DWORD PTR [rcx+rax*1],eax
  458cb7:	add    BYTE PTR [rdx+riz*2],al
  458cba:	add    BYTE PTR [rax],al
  458cbc:	add    DWORD PTR [rax],eax
  458cbe:	add    BYTE PTR [rax],al
  458cc0:	add    DWORD PTR [rdi],eax
  458cc2:	add    al,BYTE PTR [rax]
  458cc4:	(bad)  
  458cc5:	add    DWORD PTR [rdi],ebx
  458cc7:	add    BYTE PTR [rcx],al
  458cc9:	add    al,0x1
  458ccb:	add    BYTE PTR [rdx+riz*4],al
  458cce:	add    BYTE PTR [rax],al
  458cd0:	add    DWORD PTR [rcx+rax*1],eax
  458cd3:	add    BYTE PTR [rdx+rax*8],al
  458cd6:	add    BYTE PTR [rax],al
  458cd8:	add    DWORD PTR [rdi],eax
  458cda:	add    al,BYTE PTR [rax]
  458cdc:	(bad)  
  458cdd:	add    DWORD PTR [rcx],esp
  458cdf:	add    BYTE PTR [rcx],al
  458ce1:	(bad)  
  458ce2:	add    al,BYTE PTR [rax]
  458ce4:	(bad)  
  458ce5:	add    DWORD PTR [rdi],edx
  458ce7:	add    BYTE PTR [rcx],al
  458ce9:	add    al,0x1
  458ceb:	add    BYTE PTR [rdx+riz*2],al
  458cee:	add    BYTE PTR [rax],al
  458cf0:	add    DWORD PTR [rcx+rax*1],eax
  458cf3:	add    BYTE PTR [rdx+riz*2],al
  458cf6:	add    BYTE PTR [rax],al
  458cf8:	add    DWORD PTR [rdi],eax
  458cfa:	add    al,BYTE PTR [rax]
  458cfc:	(bad)  
  458cfd:	add    DWORD PTR [rbx],edx
  458cff:	add    BYTE PTR [rcx],al
  458d01:	add    al,0x1
  458d03:	add    BYTE PTR [rdx+riz*4],al
  458d06:	add    BYTE PTR [rax],al
  458d08:	add    DWORD PTR [rcx+rax*1],eax
  458d0b:	add    BYTE PTR [rdx+riz*2],al
  458d0e:	add    BYTE PTR [rax],al
  458d10:	add    DWORD PTR [rdi],eax
  458d12:	add    al,BYTE PTR [rax]
  458d14:	(bad)  
  458d15:	add    DWORD PTR [rbx+0x0],eax
  458d18:	add    DWORD PTR [rcx+rax*1],eax
  458d1b:	add    BYTE PTR [rdx+rax*8],al
  458d1e:	add    BYTE PTR [rax],al
  458d20:	add    DWORD PTR [rdi],eax
  458d22:	add    al,BYTE PTR [rax]
  458d24:	(bad)  
  458d25:	add    DWORD PTR [rcx],ebx
  458d27:	add    BYTE PTR [rcx],al
  458d29:	add    al,0x1
  458d2b:	add    BYTE PTR [rdx+rax*8],al
  458d2e:	add    BYTE PTR [rax],al
  458d30:	add    DWORD PTR [rcx+rax*1],eax
  458d33:	add    BYTE PTR [rdx+riz*2],al
  458d36:	add    BYTE PTR [rax],al
  458d38:	add    DWORD PTR [rcx+rax*1],eax
  458d3b:	add    BYTE PTR [rdx+riz*2],al
  458d3e:	add    BYTE PTR [rax],al
  458d40:	add    DWORD PTR [rcx+rax*1],eax
  458d43:	add    BYTE PTR [rdx+riz*2],al
  458d46:	add    BYTE PTR [rax],al
  458d48:	add    DWORD PTR [rdi],eax
  458d4a:	add    al,BYTE PTR [rax]
  458d4c:	(bad)  
  458d4d:	add    DWORD PTR [rcx],ebx
  458d4f:	add    BYTE PTR [rcx],al
  458d51:	(bad)  
  458d52:	add    al,BYTE PTR [rax]
  458d54:	(bad)  
  458d55:	add    DWORD PTR [rbx],edx
  458d57:	add    BYTE PTR [rcx],al
  458d59:	add    al,0x1
  458d5b:	add    BYTE PTR [rdx+riz*2],al
  458d5e:	add    BYTE PTR [rax],al
  458d60:	add    DWORD PTR [rdi],eax
  458d62:	add    al,BYTE PTR [rax]
  458d64:	(bad)  
  458d65:	add    DWORD PTR [rbx],edx
  458d67:	add    BYTE PTR [rcx],al
  458d69:	add    BYTE PTR [rax],al
  458d6b:	add    BYTE PTR [rcx],al
  458d6d:	add    BYTE PTR [rax],al
  458d6f:	add    BYTE PTR [rcx],al
  458d71:	add    BYTE PTR [rax],al
  458d73:	add    BYTE PTR [rcx],al
  458d75:	add    BYTE PTR [rax],al
  458d77:	add    BYTE PTR [rcx],al
  458d79:	add    BYTE PTR [rax],al
  458d7b:	add    BYTE PTR [rcx],al
  458d7d:	(bad)  
  458d7e:	add    al,BYTE PTR [rax]
  458d80:	(bad)  
  458d81:	add    DWORD PTR [rip+0x100],edi        # 0x458e87
  458d87:	add    BYTE PTR [rcx],al
  458d89:	add    BYTE PTR [rax],al
  458d8b:	add    BYTE PTR [rcx],al
  458d8d:	(bad)  
  458d8e:	add    al,BYTE PTR [rax]
  458d90:	(bad)  
  458d91:	add    DWORD PTR [rbx],ebx
  458d93:	add    BYTE PTR [rcx],al
  458d95:	adc    ecx,DWORD PTR [rdx]
  458d97:	add    BYTE PTR [rbx],dl
  458d99:	add    DWORD PTR [rdi],ebp
  458d9b:	add    BYTE PTR [rax+rsi*1],cl
  458d9e:	or     esp,DWORD PTR [rax+0xa]
  458da1:	jo     0x458dac
  458da3:	push   rax
  458da4:	or     al,al
  458da6:	(bad)  
  458da7:	rol    BYTE PTR [rax+riz*8],1
  458daa:	add    dh,al
  458dac:	add    DWORD PTR [rcx+rax*1],eax
  458daf:	add    BYTE PTR [rdx+riz*4],al
  458db2:	add    BYTE PTR [rax],al
  458db4:	add    DWORD PTR [rcx+rax*1],eax
  458db7:	add    BYTE PTR [rdx+rax*4],al
  458dba:	add    BYTE PTR [rax],al
  458dbc:	add    DWORD PTR [rcx+rax*1],eax
  458dbf:	add    BYTE PTR [rdx+riz*2],al
  458dc2:	add    BYTE PTR [rax],al
  458dc4:	add    DWORD PTR [rcx+rax*1],eax
  458dc7:	add    BYTE PTR [rdx+riz*4],al
  458dca:	add    BYTE PTR [rax],al
  458dcc:	add    DWORD PTR [rcx+rax*1],eax
  458dcf:	add    BYTE PTR [rdx+riz*4],al
  458dd2:	add    BYTE PTR [rax],al
  458dd4:	add    DWORD PTR [rcx+rax*1],eax
  458dd7:	add    BYTE PTR [rdx+riz*2],al
  458dda:	add    BYTE PTR [rax],al
  458ddc:	add    DWORD PTR [rcx+rax*1],eax
  458ddf:	add    BYTE PTR [rdx+riz*2],al
  458de2:	add    BYTE PTR [rax],al
  458de4:	add    DWORD PTR [rcx+rax*1],eax
  458de7:	add    BYTE PTR [rdx+rax*4],al
  458dea:	add    BYTE PTR [rax],al
  458dec:	add    DWORD PTR [rdi],eax
  458dee:	add    al,BYTE PTR [rax]
  458df0:	(bad)  
  458df1:	add    DWORD PTR [rcx],edx
  458df3:	add    BYTE PTR [rcx],al
  458df5:	(bad)  
  458df6:	add    al,BYTE PTR [rax]
  458df8:	(bad)  
  458df9:	add    DWORD PTR [rip+0x1040100],edx        # 0x1498eff
  458dff:	add    BYTE PTR [rdx+riz*8],al
  458e02:	add    BYTE PTR [rax],al
  458e04:	add    DWORD PTR [rcx+rax*1],eax
  458e07:	add    BYTE PTR [rdx+riz*8],al
  458e0a:	add    BYTE PTR [rax],al
  458e0c:	add    DWORD PTR [rcx+rax*1],eax
  458e0f:	add    BYTE PTR [rdx+rax*4],al
  458e12:	add    BYTE PTR [rax],al
  458e14:	add    DWORD PTR [rcx+rax*1],eax
  458e17:	add    BYTE PTR [rdx+rax*4],al
  458e1a:	add    BYTE PTR [rax],al
  458e1c:	add    DWORD PTR [rcx+rax*1],eax
  458e1f:	add    BYTE PTR [rdx+riz*4],al
  458e22:	add    BYTE PTR [rax],al
  458e24:	add    DWORD PTR [rdi],eax
  458e26:	add    al,BYTE PTR [rax]
  458e28:	(bad)  
  458e29:	add    DWORD PTR [rbx],edx
  458e2b:	add    BYTE PTR [rcx],al
  458e2d:	add    BYTE PTR [rax],al
  458e2f:	add    BYTE PTR [rcx],al
  458e31:	add    al,0x1
  458e33:	add    BYTE PTR [rdx+riz*8],al
  458e36:	add    BYTE PTR [rax],al
  458e38:	add    DWORD PTR [rcx+rax*1],eax
  458e3b:	add    BYTE PTR [rdx+riz*4],al
  458e3e:	add    BYTE PTR [rax],al
  458e40:	add    DWORD PTR [rcx+rax*1],eax
  458e43:	add    BYTE PTR [rdx+riz*4],al
  458e46:	add    BYTE PTR [rax],al
  458e48:	add    DWORD PTR [rcx+rax*1],eax
  458e4b:	add    BYTE PTR [rdx+riz*4],al
  458e4e:	add    BYTE PTR [rax],al
  458e50:	add    DWORD PTR [rcx+rax*1],eax
  458e53:	add    BYTE PTR [rdx+rax*4],al
  458e56:	add    BYTE PTR [rax],al
  458e58:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x1528e65
  458e5e:	cmp    al,BYTE PTR [rax]
  458e60:	(bad)  
  458e61:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b592c7
  458e67:	push   rax
  458e68:	add    ah,al
  458e6a:	add    BYTE PTR [rax],al
  458e6c:	add    DWORD PTR [rcx+rax*1],eax
  458e6f:	add    BYTE PTR [rdx+rax*4],al
  458e72:	add    BYTE PTR [rax],al
  458e74:	add    DWORD PTR [rcx+rax*1],eax
  458e77:	add    BYTE PTR [rdx+rax*4],al
  458e7a:	add    BYTE PTR [rax],al
  458e7c:	add    DWORD PTR [rcx+rax*1],eax
  458e7f:	add    BYTE PTR [rdx+riz*2],al
  458e82:	add    BYTE PTR [rax],al
  458e84:	add    DWORD PTR [rcx+rax*1],eax
  458e87:	add    BYTE PTR [rdx+riz*2],al
  458e8a:	add    BYTE PTR [rax],al
  458e8c:	add    DWORD PTR [rcx+rax*1],eax
  458e8f:	add    BYTE PTR [rdx+rax*4],al
  458e92:	add    BYTE PTR [rax],al
  458e94:	add    DWORD PTR [rcx+rax*1],eax
  458e97:	add    BYTE PTR [rdx+riz*2],al
  458e9a:	add    BYTE PTR [rax],al
  458e9c:	add    DWORD PTR [rcx+rax*1],eax
  458e9f:	add    BYTE PTR [rdx+rax*8],al
  458ea2:	add    BYTE PTR [rax],al
  458ea4:	add    DWORD PTR [rdi],eax
  458ea6:	add    al,BYTE PTR [rax]
  458ea8:	(bad)  
  458ea9:	add    DWORD PTR [rbx],esp
  458eab:	add    BYTE PTR [rcx],al
  458ead:	add    al,0x1
  458eaf:	add    BYTE PTR [rdx+riz*8],al
  458eb2:	add    BYTE PTR [rax],al
  458eb4:	add    DWORD PTR [rcx+rax*1],eax
  458eb7:	add    BYTE PTR [rdx+riz*2],al
  458eba:	add    BYTE PTR [rax],al
  458ebc:	add    DWORD PTR [rcx+rax*1],eax
  458ebf:	add    BYTE PTR [rdx+rax*4],al
  458ec2:	add    BYTE PTR [rax],al
  458ec4:	add    DWORD PTR [rax],eax
  458ec6:	add    BYTE PTR [rax],al
  458ec8:	add    DWORD PTR [rax],eax
  458eca:	add    BYTE PTR [rax],al
  458ecc:	add    DWORD PTR [rcx+rax*1],eax
  458ecf:	add    BYTE PTR [rdx+riz*4],al
  458ed2:	add    BYTE PTR [rax],al
  458ed4:	add    DWORD PTR [rax],eax
  458ed6:	add    BYTE PTR [rax],al
  458ed8:	add    DWORD PTR [rax],eax
  458eda:	add    BYTE PTR [rax],al
  458edc:	add    DWORD PTR [rcx+rax*1],eax
  458edf:	add    BYTE PTR [rdx+riz*8],al
  458ee2:	add    BYTE PTR [rax],al
  458ee4:	add    DWORD PTR [rax],eax
  458ee6:	add    BYTE PTR [rax],al
  458ee8:	add    DWORD PTR [rax],eax
  458eea:	add    BYTE PTR [rax],al
  458eec:	add    DWORD PTR [rax],eax
  458eee:	add    BYTE PTR [rax],al
  458ef0:	add    DWORD PTR [rax],eax
  458ef2:	add    BYTE PTR [rax],al
  458ef4:	add    DWORD PTR [rax],eax
  458ef6:	add    BYTE PTR [rax],al
  458ef8:	add    DWORD PTR [rax],eax
  458efa:	add    BYTE PTR [rax],al
  458efc:	add    DWORD PTR [rax],eax
  458efe:	add    BYTE PTR [rax],al
  458f00:	add    DWORD PTR [rax],eax
  458f02:	add    BYTE PTR [rax],al
  458f04:	add    DWORD PTR [rax],eax
  458f06:	add    BYTE PTR [rax],al
  458f08:	add    DWORD PTR [rcx+rax*1],eax
  458f0b:	add    BYTE PTR [rdx+riz*2],al
  458f0e:	add    BYTE PTR [rax],al
  458f10:	add    DWORD PTR [rax],eax
  458f12:	add    BYTE PTR [rax],al
  458f14:	add    DWORD PTR [rax],eax
  458f16:	add    BYTE PTR [rax],al
  458f18:	add    DWORD PTR [rax],eax
  458f1a:	add    BYTE PTR [rax],al
  458f1c:	add    DWORD PTR [rax],eax
  458f1e:	add    BYTE PTR [rax],al
  458f20:	add    DWORD PTR [rcx+rax*1],eax
  458f23:	add    BYTE PTR [rdx+riz*2],al
  458f26:	add    BYTE PTR [rax],al
  458f28:	add    DWORD PTR [rax],eax
  458f2a:	add    BYTE PTR [rax],al
  458f2c:	add    DWORD PTR [rax],eax
  458f2e:	add    BYTE PTR [rax],al
  458f30:	add    DWORD PTR [rax],eax
  458f32:	add    BYTE PTR [rax],al
  458f34:	add    DWORD PTR [rax],eax
  458f36:	add    BYTE PTR [rax],al
  458f38:	add    DWORD PTR [rax],eax
  458f3a:	add    BYTE PTR [rax],al
  458f3c:	add    DWORD PTR [rax],eax
  458f3e:	add    BYTE PTR [rax],al
  458f40:	add    DWORD PTR [rax],eax
  458f42:	add    BYTE PTR [rax],al
  458f44:	add    DWORD PTR [rax],eax
  458f46:	add    BYTE PTR [rax],al
  458f48:	add    DWORD PTR [rax],eax
  458f4a:	add    BYTE PTR [rax],al
  458f4c:	add    DWORD PTR [rax],eax
  458f4e:	add    BYTE PTR [rax],al
  458f50:	add    DWORD PTR [rax],eax
  458f52:	add    BYTE PTR [rax],al
  458f54:	add    DWORD PTR [rax],eax
  458f56:	add    BYTE PTR [rax],al
  458f58:	add    DWORD PTR [rax],eax
  458f5a:	add    BYTE PTR [rax],al
  458f5c:	add    DWORD PTR [rax],eax
  458f5e:	add    BYTE PTR [rax],al
  458f60:	add    DWORD PTR [rax],eax
  458f62:	add    BYTE PTR [rax],al
  458f64:	add    DWORD PTR [rax],eax
  458f66:	add    BYTE PTR [rax],al
  458f68:	add    DWORD PTR [rax],eax
  458f6a:	add    BYTE PTR [rax],al
  458f6c:	add    DWORD PTR [rax],eax
  458f6e:	add    BYTE PTR [rax],al
  458f70:	add    DWORD PTR [rax],eax
  458f72:	add    BYTE PTR [rax],al
  458f74:	add    DWORD PTR [rax],eax
  458f76:	add    BYTE PTR [rax],al
  458f78:	add    DWORD PTR [rax],eax
  458f7a:	add    BYTE PTR [rax],al
  458f7c:	add    DWORD PTR [rcx+rax*1],eax
  458f7f:	add    BYTE PTR [rdx+rax*8],al
  458f82:	add    BYTE PTR [rax],al
  458f84:	add    DWORD PTR [rcx+rax*1],eax
  458f87:	add    BYTE PTR [rdx+riz*4],al
  458f8a:	add    BYTE PTR [rax],al
  458f8c:	add    DWORD PTR [rdi],eax
  458f8e:	add    al,BYTE PTR [rax]
  458f90:	(bad)  
  458f91:	add    DWORD PTR [rdi],esp
  458f93:	add    BYTE PTR [rcx],al
  458f95:	add    al,0x1
  458f97:	add    BYTE PTR [rdx+riz*4],al
  458f9a:	add    BYTE PTR [rax],al
  458f9c:	add    DWORD PTR [rax],eax
  458f9e:	add    BYTE PTR [rax],al
  458fa0:	add    DWORD PTR [rax],eax
  458fa2:	add    BYTE PTR [rax],al
  458fa4:	add    DWORD PTR [rcx+rax*1],eax
  458fa7:	add    BYTE PTR [rdx+riz*2],al
  458faa:	add    BYTE PTR [rax],al
  458fac:	add    DWORD PTR [rcx+rax*1],eax
  458faf:	add    BYTE PTR [rdx+riz*4],al
  458fb2:	add    BYTE PTR [rax],al
  458fb4:	add    DWORD PTR [rax],eax
  458fb6:	add    BYTE PTR [rax],al
  458fb8:	add    DWORD PTR [rcx+rax*1],eax
  458fbb:	add    BYTE PTR [rdx+riz*2],al
  458fbe:	add    BYTE PTR [rax],al
  458fc0:	add    DWORD PTR [rax],eax
  458fc2:	add    BYTE PTR [rax],al
  458fc4:	add    DWORD PTR [rax],eax
  458fc6:	add    BYTE PTR [rax],al
  458fc8:	add    DWORD PTR [rax],eax
  458fca:	add    BYTE PTR [rax],al
  458fcc:	add    DWORD PTR [rax],eax
  458fce:	add    BYTE PTR [rax],al
  458fd0:	add    DWORD PTR [rax],eax
  458fd2:	add    BYTE PTR [rax],al
  458fd4:	add    DWORD PTR [rax],eax
  458fd6:	add    BYTE PTR [rax],al
  458fd8:	add    DWORD PTR [rdi],eax
  458fda:	add    al,BYTE PTR [rax]
  458fdc:	(bad)  
  458fdd:	add    DWORD PTR [rdi],esp
  458fdf:	add    BYTE PTR [rcx],al
  458fe1:	add    BYTE PTR [rax],al
  458fe3:	add    BYTE PTR [rcx],al
  458fe5:	add    BYTE PTR [rax],al
  458fe7:	add    BYTE PTR [rcx],al
  458fe9:	add    BYTE PTR [rax],al
  458feb:	add    BYTE PTR [rcx],al
  458fed:	add    BYTE PTR [rax],al
  458fef:	add    BYTE PTR [rcx],al
  458ff1:	(bad)  
  458ff2:	add    al,BYTE PTR [rax]
  458ff4:	(bad)  
  458ff5:	add    DWORD PTR [rip+0x50a0100],esp        # 0x54f90fb
  458ffb:	add    BYTE PTR [rdx],cl
  458ffd:	add    DWORD PTR [rax+rax*1],edi
  459000:	add    esi,DWORD PTR [rax]
  459002:	add    ah,BYTE PTR [rax+0x1]
  459005:	jo     0x459007
  459007:	add    BYTE PTR [rcx],al
  459009:	(bad)  
  45900a:	add    al,BYTE PTR [rax]
  45900c:	(bad)  
  45900d:	add    DWORD PTR [rip+0x1040100],edx        # 0x1499113
  459013:	add    BYTE PTR [rdx+riz*2],al
  459016:	add    BYTE PTR [rax],al
  459018:	add    DWORD PTR [rax],eax
  45901a:	add    BYTE PTR [rax],al
  45901c:	add    DWORD PTR [rax],eax
  45901e:	add    BYTE PTR [rax],al
  459020:	add    DWORD PTR [rax],eax
  459022:	add    BYTE PTR [rax],al
  459024:	add    DWORD PTR [rcx+rax*1],eax
  459027:	add    BYTE PTR [rdx+riz*2],al
  45902a:	add    BYTE PTR [rax],al
  45902c:	add    DWORD PTR [rax],eax
  45902e:	add    BYTE PTR [rax],al
  459030:	add    DWORD PTR [rax],eax
  459032:	add    BYTE PTR [rax],al
  459034:	add    DWORD PTR [rdx],ecx
  459036:	add    eax,0x3c010a00
  45903b:	add    BYTE PTR [rbx],al
  45903d:	xor    BYTE PTR [rdx],al
  45903f:	(bad)  
  459040:	add    DWORD PTR [rax+0x0],esi
  459043:	add    BYTE PTR [rcx],al
  459045:	add    BYTE PTR [rax],al
  459047:	add    BYTE PTR [rcx],al
  459049:	add    BYTE PTR [rax],al
  45904b:	add    BYTE PTR [rcx],al
  45904d:	add    al,0x1
  45904f:	add    BYTE PTR [rdx+riz*8],al
  459052:	add    BYTE PTR [rax],al
  459054:	add    DWORD PTR [rcx+rax*1],eax
  459057:	add    BYTE PTR [rdx+rax*4],al
  45905a:	add    BYTE PTR [rax],al
  45905c:	add    DWORD PTR [rcx+rax*1],eax
  45905f:	add    BYTE PTR [rdx+rax*4],al
  459062:	add    BYTE PTR [rax],al
  459064:	add    DWORD PTR [rdx],ecx
  459066:	add    eax,0x3c010a00
  45906b:	add    BYTE PTR [rbx],al
  45906d:	xor    BYTE PTR [rdx],al
  45906f:	(bad)  
  459070:	add    DWORD PTR [rax+0x0],esi
  459073:	add    BYTE PTR [rcx],al
  459075:	or     DWORD PTR [rax+rax*1],eax
  459078:	or     DWORD PTR [rcx],eax
  45907a:	lea    eax,[rax]
  45907c:	add    dh,BYTE PTR [rax]
  45907e:	add    DWORD PTR [rax+0x1],esp
  459081:	adc    ecx,DWORD PTR [rdx]
  459083:	add    BYTE PTR [rbx],dl
  459085:	add    DWORD PTR [rdi],eax
  459087:	add    DWORD PTR [rax+rsi*1],ecx
  45908a:	or     esp,DWORD PTR [rax+0xa]
  45908d:	jo     0x459098
  45908f:	push   rax
  459090:	or     al,al
  459092:	(bad)  
  459093:	rol    BYTE PTR [rax+riz*8],1
  459096:	add    dh,al
  459098:	add    DWORD PTR [rbx],edx
  45909a:	or     al,BYTE PTR [rax]
  45909c:	adc    eax,DWORD PTR [rcx]
  45909e:	mov    bl,0x0
  4590a0:	or     al,0x30
  4590a2:	or     esp,DWORD PTR [rax+0xa]
  4590a5:	jo     0x4590b0
  4590a7:	push   rax
  4590a8:	or     al,al
  4590aa:	(bad)  
  4590ab:	rol    BYTE PTR [rax+riz*8],1
  4590ae:	add    dh,al
  4590b0:	add    DWORD PTR [rdi],eax
  4590b2:	add    al,0x0
  4590b4:	(bad)  
  4590b5:	xor    al,BYTE PTR [rbx]
  4590b7:	xor    BYTE PTR [rdx],al
  4590b9:	(bad)  
  4590ba:	add    DWORD PTR [rax+0x1],esi
  4590bd:	or     al,BYTE PTR [rip+0xffffffff86010a00]        # 0xffffffff86469ac3
  4590c3:	add    DWORD PTR [rbx],eax
  4590c5:	xor    BYTE PTR [rdx],al
  4590c7:	(bad)  
  4590c8:	add    DWORD PTR [rax+0x0],esi
  4590cb:	add    BYTE PTR [rcx],al
  4590cd:	adc    BYTE PTR [rcx],cl
  4590cf:	add    BYTE PTR [rax],dl
  4590d1:	loop   0x4590df
  4590d3:	xor    BYTE PTR [rbx],cl
  4590d5:	(bad)  
  4590d6:	or     dh,BYTE PTR [rax+0x9]
  4590d9:	push   rax
  4590da:	or     al,al
  4590dc:	(bad)  
  4590dd:	rol    BYTE PTR [rax+riz*8],1
  4590e0:	add    dh,al
  4590e2:	add    BYTE PTR [rax],al
  4590e4:	add    DWORD PTR [rdi],eax
  4590e6:	add    al,0x0
  4590e8:	(bad)  
  4590e9:	push   rdx
  4590ea:	add    esi,DWORD PTR [rax]
  4590ec:	add    ah,BYTE PTR [rax+0x1]
  4590ef:	jo     0x4590f2
  4590f1:	or     al,BYTE PTR [rsi]
  4590f3:	add    BYTE PTR [rdx],cl
  4590f5:	push   rdx
  4590f6:	(bad)  
  4590f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b5955d
  4590fd:	push   rax
  4590fe:	add    al,al
  459100:	add    DWORD PTR [rip+0x52050002],eax        # 0x524a9108
  459106:	add    DWORD PTR [rax],esi
  459108:	add    DWORD PTR [rsi],eax
  45910a:	add    eax,DWORD PTR [rax]
  45910c:	(bad)  
  45910d:	(bad)  
  45910f:	xor    BYTE PTR [rcx],al
  459111:	(bad)  
  459112:	add    BYTE PTR [rax],al
  459114:	add    DWORD PTR [rax],ecx
  459116:	add    eax,DWORD PTR [rax]
  459118:	or     BYTE PTR [rcx],al
  45911a:	add    BYTE PTR [rcx],r8b
  45911d:	xor    BYTE PTR [rax],al
  45911f:	add    BYTE PTR [rcx],al
  459121:	add    al,0x1
  459123:	add    BYTE PTR [rdx+rax*2],al
  459126:	add    BYTE PTR [rax],al
  459128:	add    DWORD PTR [rsi],eax
  45912a:	add    eax,DWORD PTR [rax]
  45912c:	(bad)  
  45912d:	rex.X add sil,BYTE PTR [rax]
  459130:	add    DWORD PTR [rax+0x0],esp
  459133:	add    BYTE PTR [rcx],al
  459135:	add    al,0x1
  459137:	add    BYTE PTR [rdx+rax*2],al
  45913a:	add    BYTE PTR [rax],al
  45913c:	add    DWORD PTR [rcx+rax*1],eax
  45913f:	add    BYTE PTR [rdx+rax*2],al
  459142:	add    BYTE PTR [rax],al
  459144:	add    DWORD PTR [rax],eax
  459146:	add    BYTE PTR [rax],al
  459148:	add    DWORD PTR [rax],eax
  45914a:	add    BYTE PTR [rax],al
  45914c:	add    DWORD PTR [rax],eax
  45914e:	add    BYTE PTR [rax],al
  459150:	add    DWORD PTR [rax],eax
  459152:	add    BYTE PTR [rax],al
  459154:	add    DWORD PTR [rax],eax
  459156:	add    BYTE PTR [rax],al
  459158:	add    DWORD PTR [rax],eax
  45915a:	add    BYTE PTR [rax],al
  45915c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a9164
  459162:	add    DWORD PTR [rax],esi
  459164:	add    DWORD PTR [rax],eax
  459166:	add    BYTE PTR [rax],al
  459168:	add    DWORD PTR [rax],edx
  45916a:	or     DWORD PTR [rax],eax
  45916c:	adc    BYTE PTR [rdx+0x600b300c],al
  459172:	or     dh,BYTE PTR [rax+0x9]
  459175:	push   rax
  459176:	or     al,al
  459178:	(bad)  
  459179:	rol    BYTE PTR [rax+riz*8],1
  45917c:	add    dh,al
  45917e:	add    BYTE PTR [rax],al
  459180:	add    DWORD PTR [rax],ecx
  459182:	add    eax,0x4420800
  459187:	xor    BYTE PTR [rbx],al
  459189:	(bad)  
  45918a:	add    dh,BYTE PTR [rax+0x1]
  45918d:	push   rax
  45918e:	add    BYTE PTR [rax],al
  459190:	add    DWORD PTR [rax],ecx
  459192:	add    eax,0x4420800
  459197:	xor    BYTE PTR [rbx],al
  459199:	(bad)  
  45919a:	add    dh,BYTE PTR [rax+0x1]
  45919d:	push   rax
  45919e:	add    BYTE PTR [rax],al
  4591a0:	add    DWORD PTR [rsi],eax
  4591a2:	add    eax,DWORD PTR [rax]
  4591a4:	(bad)  
  4591a5:	rex.X add sil,BYTE PTR [rax]
  4591a8:	add    DWORD PTR [rax+0x0],esp
  4591ab:	add    BYTE PTR [rcx],al
  4591ad:	(bad)  
  4591ae:	add    eax,DWORD PTR [rax]
  4591b0:	(bad)  
  4591b1:	rex.X add sil,BYTE PTR [rax]
  4591b4:	add    DWORD PTR [rax+0x0],esp
  4591b7:	add    BYTE PTR [rcx],al
  4591b9:	adc    BYTE PTR [rcx],cl
  4591bb:	add    BYTE PTR [rax],dl
  4591bd:	rex.X or al,0x30
  4591c0:	or     esp,DWORD PTR [rax+0xa]
  4591c3:	jo     0x4591ce
  4591c5:	push   rax
  4591c6:	or     al,al
  4591c8:	(bad)  
  4591c9:	rol    BYTE PTR [rax+riz*8],1
  4591cc:	add    dh,al
  4591ce:	add    BYTE PTR [rax],al
  4591d0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a91d8
  4591d6:	add    DWORD PTR [rax],esi
  4591d8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a91e0
  4591de:	add    DWORD PTR [rax],esi
  4591e0:	add    DWORD PTR [rdx],ecx
  4591e2:	(bad)  
  4591e3:	add    BYTE PTR [rdx],cl
  4591e5:	xor    al,BYTE PTR [rsi]
  4591e7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b5964d
  4591ed:	push   rax
  4591ee:	add    al,al
  4591f0:	add    DWORD PTR [rip+0x52050002],eax        # 0x524a91f8
  4591f6:	add    DWORD PTR [rax],esi
  4591f8:	add    DWORD PTR [rax],ecx
  4591fa:	add    eax,0x4420800
  4591ff:	xor    BYTE PTR [rbx],al
  459201:	(bad)  
  459202:	add    dh,BYTE PTR [rax+0x1]
  459205:	push   rax
  459206:	add    BYTE PTR [rax],al
  459208:	add    DWORD PTR [rax],ecx
  45920a:	add    eax,0x4e20800
  45920f:	xor    BYTE PTR [rbx],al
  459211:	(bad)  
  459212:	add    dh,BYTE PTR [rax+0x1]
  459215:	push   rax
  459216:	add    BYTE PTR [rax],al
  459218:	add    DWORD PTR [rax+rdx*1],ebp
  45921b:	add    BYTE PTR [rax+rcx*4],ch
  45921e:	pop    rbx
  45921f:	add    BYTE PTR [rbx],ah
  459221:	js     0x45927d
  459223:	add    BYTE PTR [rbx],bl
  459225:	push   0x1130059
  45922a:	mov    ecx,0xb300c00
  45922f:	(bad)  
  459230:	or     dh,BYTE PTR [rax+0x9]
  459233:	push   rax
  459234:	or     al,al
  459236:	(bad)  
  459237:	rol    BYTE PTR [rax+riz*8],1
  45923a:	add    dh,al
  45923c:	add    DWORD PTR [rcx+rax*1],eax
  45923f:	add    BYTE PTR [rdx+riz*4],al
  459242:	add    BYTE PTR [rax],al
  459244:	add    DWORD PTR [rax],eax
  459246:	add    BYTE PTR [rax],al
  459248:	add    DWORD PTR [rcx+rax*1],eax
  45924b:	add    BYTE PTR [rdx+riz*2],al
  45924e:	add    BYTE PTR [rax],al
  459250:	add    DWORD PTR [rcx+rax*1],eax
  459253:	add    BYTE PTR [rdx+rax*8],al
  459256:	add    BYTE PTR [rax],al
  459258:	add    DWORD PTR [rax],ecx
  45925a:	add    eax,DWORD PTR [rax]
  45925c:	or     BYTE PTR [rcx],al
  45925e:	mov    al,BYTE PTR [rax]
  459260:	add    DWORD PTR [rax],esi
  459262:	add    BYTE PTR [rax],al
  459264:	add    DWORD PTR [rcx+rax*1],eax
  459267:	add    BYTE PTR [rdx+riz*2],al
  45926a:	add    BYTE PTR [rax],al
  45926c:	add    DWORD PTR [rsi],eax
  45926e:	add    eax,DWORD PTR [rax]
  459270:	(bad)  
  459271:	(bad)  
  459273:	xor    BYTE PTR [rcx],al
  459275:	(bad)  
  459276:	add    BYTE PTR [rax],al
  459278:	add    DWORD PTR [rdi+rax*1],ecx
  45927b:	add    BYTE PTR [rdx+rax*2],cl
  45927e:	or     BYTE PTR [rax],dh
  459280:	(bad)  
  459281:	(bad)  
  459282:	(bad)  
  459283:	jo     0x45928a
  459285:	push   rax
  459286:	add    al,0xc0
  459288:	add    dl,al
  45928a:	add    BYTE PTR [rax],al
  45928c:	add    DWORD PTR [rdi],eax
  45928e:	add    al,0x0
  459290:	(bad)  
  459291:	xor    al,BYTE PTR [rbx]
  459293:	xor    BYTE PTR [rdx],al
  459295:	(bad)  
  459296:	add    DWORD PTR [rax+0x1],esi
  459299:	or     eax,DWORD PTR [rsi]
  45929b:	add    BYTE PTR [rbx],cl
  45929d:	add    DWORD PTR [rcx+0x0],esi
  4592a0:	add    al,0x30
  4592a2:	add    esp,DWORD PTR [rax+0x2]
  4592a5:	jo     0x4592a8
  4592a7:	push   rax
  4592a8:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x15292b5
  4592ae:	rex.WRX add BYTE PTR [rsi],r8b
  4592b1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b59717
  4592b7:	push   rax
  4592b8:	add    al,al
  4592ba:	add    BYTE PTR [rax],al
  4592bc:	add    DWORD PTR [rcx+rax*1],eax
  4592bf:	add    BYTE PTR [rdx+rax*2],al
  4592c2:	add    BYTE PTR [rax],al
  4592c4:	add    DWORD PTR [rsi],eax
  4592c6:	add    eax,DWORD PTR [rax]
  4592c8:	(bad)  
  4592c9:	movabs ds:0x501000060013002,al
  4592d2:	add    al,BYTE PTR [rax]
  4592d4:	add    eax,0x1300132
  4592d9:	add    eax,0x32050002
  4592de:	add    DWORD PTR [rax],esi
  4592e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a92e8
  4592e6:	add    DWORD PTR [rax],esi
  4592e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a92f0
  4592ee:	add    DWORD PTR [rax],esi
  4592f0:	add    DWORD PTR [rcx+rax*1],eax
  4592f3:	add    BYTE PTR [rdx+rax*2],al
  4592f6:	add    BYTE PTR [rax],al
  4592f8:	add    DWORD PTR [rax],eax
  4592fa:	add    BYTE PTR [rax],al
  4592fc:	add    DWORD PTR [rcx+rax*1],eax
  4592ff:	add    BYTE PTR [rdx+rax*2],al
  459302:	add    BYTE PTR [rax],al
  459304:	add    DWORD PTR [rax],eax
  459306:	add    BYTE PTR [rax],al
  459308:	add    DWORD PTR [rdi],eax
  45930a:	add    al,0x0
  45930c:	(bad)  
  45930d:	push   rdx
  45930e:	add    esi,DWORD PTR [rax]
  459310:	add    ah,BYTE PTR [rax+0x1]
  459313:	jo     0x459316
  459315:	adc    BYTE PTR [rcx],cl
  459317:	add    BYTE PTR [rax],dl
  459319:	rex.X or al,0x30
  45931c:	or     esp,DWORD PTR [rax+0xa]
  45931f:	jo     0x45932a
  459321:	push   rax
  459322:	or     al,al
  459324:	(bad)  
  459325:	rol    BYTE PTR [rax+riz*8],1
  459328:	add    dh,al
  45932a:	add    BYTE PTR [rax],al
  45932c:	add    DWORD PTR [rax],edx
  45932e:	or     DWORD PTR [rax],eax
  459330:	adc    BYTE PTR [rdx+0xc],al
  459333:	xor    BYTE PTR [rbx],cl
  459335:	(bad)  
  459336:	or     dh,BYTE PTR [rax+0x9]
  459339:	push   rax
  45933a:	or     al,al
  45933c:	(bad)  
  45933d:	rol    BYTE PTR [rax+riz*8],1
  459340:	add    dh,al
  459342:	add    BYTE PTR [rax],al
  459344:	add    DWORD PTR [rdx],ecx
  459346:	(bad)  
  459347:	add    BYTE PTR [rdx],cl
  459349:	xor    al,BYTE PTR [rsi]
  45934b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b597b1
  459351:	push   rax
  459352:	add    al,al
  459354:	add    DWORD PTR [rsi],eax
  459356:	add    eax,DWORD PTR [rax]
  459358:	(bad)  
  459359:	rex.X add sil,BYTE PTR [rax]
  45935c:	add    DWORD PTR [rax+0x0],esp
  45935f:	add    BYTE PTR [rcx],al
  459361:	(bad)  
  459362:	add    al,0x0
  459364:	(bad)  
  459365:	xor    al,BYTE PTR [rbx]
  459367:	xor    BYTE PTR [rdx],al
  459369:	(bad)  
  45936a:	add    DWORD PTR [rax+0x1],esi
  45936d:	(bad)  
  45936e:	add    eax,DWORD PTR [rax]
  459370:	(bad)  
  459371:	rex.X add sil,BYTE PTR [rax]
  459374:	add    DWORD PTR [rax+0x0],esp
  459377:	add    BYTE PTR [rcx],al
  459379:	or     al,BYTE PTR [rsi]
  45937b:	add    BYTE PTR [rdx],cl
  45937d:	xor    al,BYTE PTR [rsi]
  45937f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b597e5
  459385:	push   rax
  459386:	add    al,al
  459388:	add    DWORD PTR [rax],eax
  45938a:	add    BYTE PTR [rax],al
  45938c:	add    DWORD PTR [rax],eax
  45938e:	add    BYTE PTR [rax],al
  459390:	add    DWORD PTR [rax],eax
  459392:	add    BYTE PTR [rax],al
  459394:	add    DWORD PTR [rax],eax
  459396:	add    BYTE PTR [rax],al
  459398:	add    DWORD PTR [rax],eax
  45939a:	add    BYTE PTR [rax],al
  45939c:	add    DWORD PTR [rax],eax
  45939e:	add    BYTE PTR [rax],al
  4593a0:	add    DWORD PTR [rax],eax
  4593a2:	add    BYTE PTR [rax],al
  4593a4:	add    DWORD PTR [rax],eax
  4593a6:	add    BYTE PTR [rax],al
  4593a8:	add    DWORD PTR [rax],eax
  4593aa:	add    BYTE PTR [rax],al
  4593ac:	add    DWORD PTR [rax],eax
  4593ae:	add    BYTE PTR [rax],al
  4593b0:	add    DWORD PTR [rax],eax
  4593b2:	add    BYTE PTR [rax],al
  4593b4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a93bc
  4593ba:	add    DWORD PTR [rax],esi
  4593bc:	add    DWORD PTR [rax],eax
  4593be:	add    BYTE PTR [rax],al
  4593c0:	add    DWORD PTR [rax],eax
  4593c2:	add    BYTE PTR [rax],al
  4593c4:	add    DWORD PTR [rax],edx
  4593c6:	or     DWORD PTR [rax],eax
  4593c8:	adc    BYTE PTR [rdx+0xc],al
  4593cb:	xor    BYTE PTR [rbx],cl
  4593cd:	(bad)  
  4593ce:	or     dh,BYTE PTR [rax+0x9]
  4593d1:	push   rax
  4593d2:	or     al,al
  4593d4:	(bad)  
  4593d5:	rol    BYTE PTR [rax+riz*8],1
  4593d8:	add    dh,al
  4593da:	add    BYTE PTR [rax],al
  4593dc:	add    DWORD PTR [rax],edx
  4593de:	or     DWORD PTR [rax],eax
  4593e0:	adc    BYTE PTR [rdx+0xc],ah
  4593e3:	xor    BYTE PTR [rbx],cl
  4593e5:	(bad)  
  4593e6:	or     dh,BYTE PTR [rax+0x9]
  4593e9:	push   rax
  4593ea:	or     al,al
  4593ec:	(bad)  
  4593ed:	rol    BYTE PTR [rax+riz*8],1
  4593f0:	add    dh,al
  4593f2:	add    BYTE PTR [rax],al
  4593f4:	add    DWORD PTR [rsi],eax
  4593f6:	add    eax,DWORD PTR [rax]
  4593f8:	(bad)  
  4593f9:	rex.X add sil,BYTE PTR [rax]
  4593fc:	add    DWORD PTR [rax+0x0],esp
  4593ff:	add    BYTE PTR [rcx],al
  459401:	(bad)  
  459402:	add    eax,DWORD PTR [rax]
  459404:	(bad)  
  459405:	rex.X add sil,BYTE PTR [rax]
  459408:	add    DWORD PTR [rax+0x0],esp
  45940b:	add    BYTE PTR [rcx],al
  45940d:	add    BYTE PTR [rax],al
  45940f:	add    BYTE PTR [rcx],al
  459411:	add    BYTE PTR [rax],al
  459413:	add    BYTE PTR [rcx],al
  459415:	adc    ecx,DWORD PTR [rdx]
  459417:	add    BYTE PTR [rbx],dl
  459419:	add    DWORD PTR [rdi],edx
  45941b:	add    BYTE PTR [rax+rsi*1],cl
  45941e:	or     esp,DWORD PTR [rax+0xa]
  459421:	jo     0x45942c
  459423:	push   rax
  459424:	or     al,al
  459426:	(bad)  
  459427:	rol    BYTE PTR [rax+riz*8],1
  45942a:	add    dh,al
  45942c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a9434
  459432:	add    DWORD PTR [rax],esi
  459434:	add    DWORD PTR [rip+0x52050002],eax        # 0x524a943c
  45943a:	add    DWORD PTR [rax],esi
  45943c:	add    DWORD PTR [rcx+rax*1],eax
  45943f:	add    BYTE PTR [rdx+rax*2],al
  459442:	add    BYTE PTR [rax],al
  459444:	add    DWORD PTR [rcx+rax*1],eax
  459447:	add    BYTE PTR [rdx+rax*2],al
  45944a:	add    BYTE PTR [rax],al
  45944c:	add    DWORD PTR [rsi],eax
  45944e:	add    eax,DWORD PTR [rax]
  459450:	(bad)  
  459451:	rex.X add sil,BYTE PTR [rax]
  459454:	add    DWORD PTR [rax+0x0],esp
  459457:	add    BYTE PTR [rcx],al
  459459:	add    BYTE PTR [rax],al
  45945b:	add    BYTE PTR [rcx],al
  45945d:	add    BYTE PTR [rax],al
  45945f:	add    BYTE PTR [rcx],al
  459461:	add    BYTE PTR [rax],al
  459463:	add    BYTE PTR [rcx],al
  459465:	or     al,BYTE PTR [rsi]
  459467:	add    BYTE PTR [rdx],cl
  459469:	jb     0x459471
  45946b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b598d1
  459471:	push   rax
  459472:	add    al,al
  459474:	add    DWORD PTR [rdx],ecx
  459476:	add    eax,0x6d20a05
  45947b:	add    eax,DWORD PTR [rbx]
  45947d:	xor    BYTE PTR [rdx],al
  45947f:	(bad)  
  459480:	add    DWORD PTR [rax+0x0],edx
  459483:	add    BYTE PTR [rcx],al
  459485:	add    al,0x1
  459487:	add    BYTE PTR [rdx+rax*2],al
  45948a:	add    BYTE PTR [rax],al
  45948c:	add    DWORD PTR [rsi],eax
  45948e:	add    eax,DWORD PTR [rax]
  459490:	(bad)  
  459491:	rex.X add sil,BYTE PTR [rax]
  459494:	add    DWORD PTR [rax+0x0],esp
  459497:	add    BYTE PTR [rcx],al
  459499:	add    BYTE PTR [rax],al
  45949b:	add    BYTE PTR [rcx],al
  45949d:	add    al,0x1
  45949f:	add    BYTE PTR [rdx+riz*4],al
  4594a2:	add    BYTE PTR [rax],al
  4594a4:	add    DWORD PTR [rax],eax
  4594a6:	add    BYTE PTR [rax],al
  4594a8:	add    DWORD PTR [rsi],edx
  4594aa:	or     DWORD PTR [rax],eax
  4594ac:	(bad)  
  4594ad:	mov    BYTE PTR [rsi],al
  4594af:	add    BYTE PTR [rax],dl
  4594b1:	js     0x4594b8
  4594b3:	add    BYTE PTR [rbx],cl
  4594b5:	push   0xffffffffe2060004
  4594ba:	add    dh,BYTE PTR [rax]
  4594bc:	add    DWORD PTR [rax+0x0],esp
  4594bf:	add    BYTE PTR [rcx],al
  4594c1:	add    BYTE PTR [rax],al
  4594c3:	add    BYTE PTR [rcx],al
  4594c5:	add    BYTE PTR [rax],al
  4594c7:	add    BYTE PTR [rcx],al
  4594c9:	add    BYTE PTR [rax],al
  4594cb:	add    BYTE PTR [rcx],al
  4594cd:	(bad)  
  4594ce:	add    eax,DWORD PTR [rax]
  4594d0:	(bad)  
  4594d1:	(bad)  
  4594d3:	xor    BYTE PTR [rcx],al
  4594d5:	(bad)  
  4594d6:	add    BYTE PTR [rax],al
  4594d8:	add    DWORD PTR [rdi+rax*1],ecx
  4594db:	add    BYTE PTR [rdx+riz*4],cl
  4594de:	or     BYTE PTR [rax],dh
  4594e0:	(bad)  
  4594e1:	(bad)  
  4594e2:	(bad)  
  4594e3:	jo     0x4594ea
  4594e5:	push   rax
  4594e6:	add    al,0xc0
  4594e8:	add    dl,al
  4594ea:	add    BYTE PTR [rax],al
  4594ec:	add    DWORD PTR [rcx],edx
  4594ee:	or     DWORD PTR [rip+0x30db211],eax        # 0x3534705
  4594f4:	or     dh,BYTE PTR [rax]
  4594f6:	or     DWORD PTR [rax+0x8],esp
  4594f9:	jo     0x459502
  4594fb:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22598d2
  459502:	add    BYTE PTR [rax],al
  459504:	add    DWORD PTR [rcx+rax*1],eax
  459507:	add    BYTE PTR [rdx+rax*2],al
  45950a:	add    BYTE PTR [rax],al
  45950c:	add    DWORD PTR [rdx],ecx
  45950e:	(bad)  
  45950f:	add    BYTE PTR [rdx],cl
  459511:	xor    al,BYTE PTR [rsi]
  459513:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b59979
  459519:	push   rax
  45951a:	add    al,al
  45951c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a9524
  459522:	add    DWORD PTR [rax],esi
  459524:	add    DWORD PTR [rax],ecx
  459526:	add    eax,0x4420800
  45952b:	xor    BYTE PTR [rbx],al
  45952d:	(bad)  
  45952e:	add    dh,BYTE PTR [rax+0x1]
  459531:	push   rax
  459532:	add    BYTE PTR [rax],al
  459534:	add    DWORD PTR [rdi],eax
  459536:	add    al,0x0
  459538:	(bad)  
  459539:	xor    al,BYTE PTR [rbx]
  45953b:	xor    BYTE PTR [rdx],al
  45953d:	(bad)  
  45953e:	add    DWORD PTR [rax+0x1],esi
  459541:	add    eax,0x32050002
  459546:	add    DWORD PTR [rax],esi
  459548:	add    DWORD PTR [rip+0x32050002],eax        # 0x324a9550
  45954e:	add    DWORD PTR [rax],esi
  459550:	add    DWORD PTR [rax],eax
  459552:	add    BYTE PTR [rax],al
  459554:	add    DWORD PTR [rax],eax
  459556:	add    BYTE PTR [rax],al
  459558:	add    DWORD PTR [rax],eax
  45955a:	add    BYTE PTR [rax],al
  45955c:	add    DWORD PTR [rdi],eax
  45955e:	add    al,0x0
  459560:	(bad)  
  459561:	xor    al,BYTE PTR [rbx]
  459563:	xor    BYTE PTR [rdx],al
  459565:	(bad)  
  459566:	add    DWORD PTR [rax+0x1],esi
  459569:	(bad)  
  45956a:	add    eax,DWORD PTR [rax]
  45956c:	(bad)  
  45956d:	rex.X add sil,BYTE PTR [rax]
  459570:	add    DWORD PTR [rax+0x0],esp
  459573:	add    BYTE PTR [rcx],al
  459575:	add    eax,0x32050002
  45957a:	add    DWORD PTR [rax],esi
  45957c:	add    DWORD PTR [rdi],eax
  45957e:	add    al,0x0
  459580:	(bad)  
  459581:	xor    al,BYTE PTR [rbx]
  459583:	xor    BYTE PTR [rdx],al
  459585:	(bad)  
  459586:	add    DWORD PTR [rax+0x1],esi
  459589:	(bad)  
  45958a:	add    eax,DWORD PTR [rax]
  45958c:	(bad)  
  45958d:	rex.X add sil,BYTE PTR [rax]
  459590:	add    DWORD PTR [rax+0x0],esp
  459593:	add    BYTE PTR [rcx],al
  459595:	(bad)  
  459596:	add    eax,DWORD PTR [rax]
  459598:	(bad)  
  459599:	rex.X add sil,BYTE PTR [rax]
  45959c:	add    DWORD PTR [rax+0x0],esp
  45959f:	add    BYTE PTR [rcx],al
  4595a1:	or     BYTE PTR [rip+0x4420800],al        # 0x4879da7
  4595a7:	xor    BYTE PTR [rbx],al
  4595a9:	(bad)  
  4595aa:	add    dh,BYTE PTR [rax+0x1]
  4595ad:	push   rax
  4595ae:	add    BYTE PTR [rax],al
  4595b0:	add    DWORD PTR [rax],ecx
  4595b2:	(bad)  
  4595b3:	add    BYTE PTR [rax],cl
  4595b5:	xor    BYTE PTR [rdi],al
  4595b7:	(bad)  
  4595b8:	(bad)  
  4595b9:	jo     0x4595c0
  4595bb:	push   rax
  4595bc:	add    al,0xc0
  4595be:	add    dl,al
  4595c0:	add    DWORD PTR [rdi],eax
  4595c2:	add    al,0x0
  4595c4:	(bad)  
  4595c5:	push   rdx
  4595c6:	add    esi,DWORD PTR [rax]
  4595c8:	add    ah,BYTE PTR [rax+0x1]
  4595cb:	jo     0x4595ce
  4595cd:	adc    BYTE PTR [rcx],cl
  4595cf:	add    BYTE PTR [rax],dl
  4595d1:	(bad)  
  4595d2:	or     al,0x30
  4595d4:	or     esp,DWORD PTR [rax+0xa]
  4595d7:	jo     0x4595e2
  4595d9:	push   rax
  4595da:	or     al,al
  4595dc:	(bad)  
  4595dd:	rol    BYTE PTR [rax+riz*8],1
  4595e0:	add    dh,al
  4595e2:	add    BYTE PTR [rax],al
  4595e4:	add    DWORD PTR [rax],edx
  4595e6:	or     DWORD PTR [rax],eax
  4595e8:	adc    BYTE PTR [rdx+0xc],ah
  4595eb:	xor    BYTE PTR [rbx],cl
  4595ed:	(bad)  
  4595ee:	or     dh,BYTE PTR [rax+0x9]
  4595f1:	push   rax
  4595f2:	or     al,al
  4595f4:	(bad)  
  4595f5:	rol    BYTE PTR [rax+riz*8],1
  4595f8:	add    dh,al
  4595fa:	add    BYTE PTR [rax],al
  4595fc:	add    DWORD PTR [rcx+rax*1],eax
  4595ff:	add    BYTE PTR [rdx+riz*2],al
  459602:	add    BYTE PTR [rax],al
  459604:	add    DWORD PTR [rcx+rax*1],eax
  459607:	add    BYTE PTR [rdx+riz*2],al
  45960a:	add    BYTE PTR [rax],al
  45960c:	add    DWORD PTR [rcx+rax*1],eax
  45960f:	add    BYTE PTR [rdx+riz*2],al
  459612:	add    BYTE PTR [rax],al
  459614:	add    DWORD PTR [rdx],ecx
  459616:	(bad)  
  459617:	add    BYTE PTR [rdx],cl
  459619:	mov    dl,0x6
  45961b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b59a81
  459621:	push   rax
  459622:	add    al,al
  459624:	add    DWORD PTR [rax],eax
  459626:	add    BYTE PTR [rax],al
  459628:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000045a000 <.bss>:
	...

Disassembly of section .idata:

000000000045c000 <.idata>:
  45c000:	rol    BYTE PTR fs:[rip+0x0],0x0        # 0x45c008
  45c008:	add    BYTE PTR [rax],al
  45c00a:	add    BYTE PTR [rax],al
  45c00c:	test   al,0xdc
  45c00e:	add    eax,0x5c77400
  45c013:	add    BYTE PTR [rdx+rax*8+0x5],cl
  45c01a:	add    BYTE PTR [rax],al
  45c01c:	add    BYTE PTR [rax],al
  45c01e:	add    BYTE PTR [rax],al
  45c020:	fcomp  st(4)
  45c022:	add    eax,0x5c99c00
  45c027:	add    ah,bl
  45c029:	ret    0x5
	...
  45c034:	mov    ah,0xdd
  45c036:	add    eax,0x5c9ec00
  45c03b:	add    BYTE PTR [rsp+rax*8+0x5],bh
	...
  45c047:	add    BYTE PTR [rdi+rbx*8],bh
  45c04a:	add    eax,0x5cb8c00
	...
  45c063:	add    BYTE PTR [rsi+rcx*8+0x5],al
  45c06a:	add    BYTE PTR [rax],al
  45c06c:	cwde   
  45c06d:	(bad)  
  45c06e:	add    eax,0x0
  45c073:	add    BYTE PTR [rsi+rcx*8+0x5],ah
  45c07a:	add    BYTE PTR [rax],al
  45c07c:	mov    al,0xce
  45c07e:	add    eax,0x0
  45c083:	add    ah,al
  45c085:	(bad)  
  45c086:	add    eax,0x0
  45c08b:	add    ah,dl
  45c08d:	(bad)  
  45c08e:	add    eax,0x0
  45c093:	add    al,ch
  45c095:	(bad)  
  45c096:	add    eax,0x0
  45c09b:	add    BYTE PTR [rdi+rcx*8],al
  45c09e:	add    eax,0x0
  45c0a3:	add    BYTE PTR [rdi+rcx*8],dl
  45c0a6:	add    eax,0x0
  45c0ab:	add    BYTE PTR [rax],ch
  45c0ad:	iret   
  45c0ae:	add    eax,0x0
  45c0b3:	add    BYTE PTR [rax],dh
  45c0b5:	iret   
  45c0b6:	add    eax,0x0
  45c0bb:	add    BYTE PTR [rdi+rcx*8],bh
  45c0be:	add    eax,0x0
  45c0c3:	add    BYTE PTR [rax-0x31],dl
  45c0c6:	add    eax,0x0
  45c0cb:	add    BYTE PTR [rdi+rcx*8+0x5],ah
  45c0cf:	add    BYTE PTR [rax],al
  45c0d1:	add    BYTE PTR [rax],al
  45c0d3:	add    BYTE PTR [rax-0x31],bh
  45c0d6:	add    eax,0x0
  45c0db:	add    BYTE PTR [rax+0x5cf],dl
  45c0e1:	add    BYTE PTR [rax],al
  45c0e3:	add    BYTE PTR [rdi+rcx*8+0x5],ah
  45c0ea:	add    BYTE PTR [rax],al
  45c0ec:	mov    esp,0x5cf
  45c0f1:	add    BYTE PTR [rax],al
  45c0f3:	add    al,cl
  45c0f5:	iret   
  45c0f6:	add    eax,0x0
  45c0fb:	add    ah,dl
  45c0fd:	iret   
  45c0fe:	add    eax,0x0
  45c103:	add    al,ah
  45c105:	iret   
  45c106:	add    eax,0x0
  45c10b:	add    al,dh
  45c10d:	iret   
  45c10e:	add    eax,0x0
  45c113:	add    ah,bh
  45c115:	iret   
  45c116:	add    eax,0x0
  45c11b:	add    BYTE PTR [rax],cl
  45c11d:	rol    BYTE PTR [rip+0x0],1        # 0x45c123
  45c123:	add    BYTE PTR [rax],bl
  45c125:	rol    BYTE PTR [rip+0x0],1        # 0x45c12b
  45c12b:	add    BYTE PTR [rax],ch
  45c12d:	rol    BYTE PTR [rip+0x0],1        # 0x45c133
  45c133:	add    BYTE PTR [rax],bh
  45c135:	rol    BYTE PTR [rip+0x0],1        # 0x45c13b
  45c13b:	add    BYTE PTR [rax-0x30],cl
  45c13e:	add    eax,0x0
  45c143:	add    BYTE PTR [rax+rdx*8+0x5],dl
  45c147:	add    BYTE PTR [rax],al
  45c149:	add    BYTE PTR [rax],al
  45c14b:	add    BYTE PTR [rax+rdx*8+0x5],ah
  45c14f:	add    BYTE PTR [rax],al
  45c151:	add    BYTE PTR [rax],al
  45c153:	add    BYTE PTR [rax-0x30],dh
  45c156:	add    eax,0x0
  45c15b:	add    BYTE PTR [rax+rdx*8+0x5],bh
  45c15f:	add    BYTE PTR [rax],al
  45c161:	add    BYTE PTR [rax],al
  45c163:	add    BYTE PTR [rax+0x5d0],cl
  45c169:	add    BYTE PTR [rax],al
  45c16b:	add    BYTE PTR [rax+0x5d0],bl
  45c171:	add    BYTE PTR [rax],al
  45c173:	add    BYTE PTR [rax+rdx*8+0x5],ah
  45c17a:	add    BYTE PTR [rax],al
  45c17c:	mov    ah,0xd0
  45c17e:	add    eax,0x0
  45c183:	add    al,cl
  45c185:	rol    BYTE PTR [rip+0x0],1        # 0x45c18b
  45c18b:	add    ah,dl
  45c18d:	rol    BYTE PTR [rip+0x0],1        # 0x45c193
  45c193:	add    al,ah
  45c195:	rol    BYTE PTR [rip+0x0],1        # 0x45c19b
  45c19b:	add    ah,dh
  45c19d:	rol    BYTE PTR [rip+0x0],1        # 0x45c1a3
  45c1a3:	add    BYTE PTR [rcx+rdx*8],al
  45c1a6:	add    eax,0x0
  45c1ab:	add    BYTE PTR [rcx+rdx*8],dl
  45c1ae:	add    eax,0x0
  45c1b3:	add    BYTE PTR [rax],ah
  45c1b5:	rol    DWORD PTR [rip+0x0],1        # 0x45c1bb
  45c1bb:	add    BYTE PTR [rax],bh
  45c1bd:	rol    DWORD PTR [rip+0x0],1        # 0x45c1c3
  45c1c3:	add    BYTE PTR [rcx+rdx*8+0x5],cl
  45c1c7:	add    BYTE PTR [rax],al
  45c1c9:	add    BYTE PTR [rax],al
  45c1cb:	add    BYTE PTR [rax-0x2f],ah
  45c1ce:	add    eax,0x0
  45c1d3:	add    BYTE PTR [rax-0x2f],bh
  45c1d6:	add    eax,0x0
  45c1db:	add    BYTE PTR [rax+0x5d1],dl
  45c1e1:	add    BYTE PTR [rax],al
  45c1e3:	add    BYTE PTR [rax+0x5d1],ch
  45c1e9:	add    BYTE PTR [rax],al
  45c1eb:	add    BYTE PTR [rcx+rdx*8+0x5],dh
  45c1f2:	add    BYTE PTR [rax],al
  45c1f4:	int3   
  45c1f5:	rol    DWORD PTR [rip+0x0],1        # 0x45c1fb
  45c1fb:	add    al,bl
  45c1fd:	rol    DWORD PTR [rip+0x0],1        # 0x45c203
  45c203:	add    ah,dh
  45c205:	rol    DWORD PTR [rip+0x0],1        # 0x45c20b
  45c20b:	add    BYTE PTR [rax],cl
  45c20d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c213
  45c213:	add    BYTE PTR [rax],ah
  45c215:	rol    BYTE PTR [rip+0x0],cl        # 0x45c21b
  45c21b:	add    BYTE PTR [rax],bh
  45c21d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c223
  45c223:	add    BYTE PTR [rdx+rdx*8+0x5],cl
  45c227:	add    BYTE PTR [rax],al
  45c229:	add    BYTE PTR [rax],al
  45c22b:	add    BYTE PTR [rdx+rdx*8+0x5],ah
  45c22f:	add    BYTE PTR [rax],al
  45c231:	add    BYTE PTR [rax],al
  45c233:	add    BYTE PTR [rdx+rdx*8+0x5],bh
  45c237:	add    BYTE PTR [rax],al
  45c239:	add    BYTE PTR [rax],al
  45c23b:	add    BYTE PTR [rax+0x5d2],dl
  45c241:	add    BYTE PTR [rax],al
  45c243:	add    BYTE PTR [rdx+rdx*8+0x5],bl
  45c24a:	add    BYTE PTR [rax],al
  45c24c:	test   al,0xd2
  45c24e:	add    eax,0x0
  45c253:	add    BYTE PTR [rdx+rdx*8+0x5],dh
  45c25a:	add    BYTE PTR [rax],al
  45c25c:	int3   
  45c25d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c263
  45c263:	add    ah,ah
  45c265:	rol    BYTE PTR [rip+0x0],cl        # 0x45c26b
  45c26b:	add    BYTE PTR [rbx+rdx*8],al
  45c26e:	add    eax,0x0
  45c273:	add    BYTE PTR [rax],bl
  45c275:	rol    DWORD PTR [rip+0x0],cl        # 0x45c27b
  45c27b:	add    BYTE PTR [rbx+rdx*8],ch
  45c27e:	add    eax,0x0
	...
  45c28b:	add    BYTE PTR [rax-0x2d],al
  45c28e:	add    eax,0x0
  45c293:	add    BYTE PTR [rax-0x2d],bl
  45c296:	add    eax,0x0
  45c29b:	add    BYTE PTR [rdx-0x2d],ah
  45c29e:	add    eax,0x0
  45c2a3:	add    BYTE PTR [rbx+rdx*8+0x5],ch
  45c2a7:	add    BYTE PTR [rax],al
  45c2a9:	add    BYTE PTR [rax],al
  45c2ab:	add    BYTE PTR [rax+0x5d3],al
  45c2b1:	add    BYTE PTR [rax],al
  45c2b3:	add    BYTE PTR [rax+0x5d3],dl
  45c2b9:	add    BYTE PTR [rax],al
  45c2bb:	add    BYTE PTR [rsi+0x5d3],ah
  45c2c1:	add    BYTE PTR [rax],al
  45c2c3:	add    BYTE PTR [rsi+0x5d3],dh
  45c2c9:	add    BYTE PTR [rax],al
  45c2cb:	add    dh,al
  45c2cd:	rol    DWORD PTR [rip+0x0],cl        # 0x45c2d3
	...
  45c2db:	add    ah,bl
  45c2dd:	rol    DWORD PTR [rip+0x0],cl        # 0x45c2e3
  45c2e3:	add    dl,ch
  45c2e5:	rol    DWORD PTR [rip+0x0],cl        # 0x45c2eb
  45c2eb:	add    dh,bh
  45c2ed:	rol    DWORD PTR [rip+0x0],cl        # 0x45c2f3
  45c2f3:	add    BYTE PTR [rsp+rdx*8],cl
  45c2f6:	add    eax,0x0
  45c2fb:	add    BYTE PTR [rdx],bl
  45c2fd:	(bad)  
  45c2fe:	add    eax,0x0
  45c303:	add    BYTE PTR [rsp+rdx*8],ch
  45c306:	add    eax,0x0
  45c30b:	add    BYTE PTR [rsp+rdx*8+0x5],al
  45c30f:	add    BYTE PTR [rax],al
  45c311:	add    BYTE PTR [rax],al
  45c313:	add    BYTE PTR [rsi-0x2c],dl
  45c316:	add    eax,0x0
  45c31b:	add    BYTE PTR [rax-0x2c],ch
  45c31e:	add    eax,0x0
  45c323:	add    BYTE PTR [rax+0x5d4],al
  45c329:	add    BYTE PTR [rax],al
  45c32b:	add    BYTE PTR [rdx+0x5d4],dl
  45c331:	add    BYTE PTR [rax],al
  45c333:	add    BYTE PTR [rsp+rdx*8+0x5],bl
  45c33a:	add    BYTE PTR [rax],al
  45c33c:	lods   al,BYTE PTR ds:[rsi]
  45c33d:	(bad)  
  45c33e:	add    eax,0x0
  45c343:	add    BYTE PTR [rsi+0x5d4],bh
  45c349:	add    BYTE PTR [rax],al
  45c34b:	add    dl,dl
  45c34d:	(bad)  
  45c34e:	add    eax,0x0
  45c353:	add    al,ch
  45c355:	(bad)  
  45c356:	add    eax,0x0
  45c35b:	add    dh,bh
  45c35d:	(bad)  
  45c35e:	add    eax,0x0
  45c363:	add    BYTE PTR [rdx*8+0x5],dl
  45c36a:	add    BYTE PTR [rax],al
  45c36c:	sub    al,0xd5
  45c36e:	add    eax,0x0
  45c373:	add    BYTE PTR [rdx*8+0x5],bh
  45c37a:	add    BYTE PTR [rax],al
  45c37c:	rex.WRX (bad) 
  45c37e:	add    eax,0x0
  45c383:	add    BYTE PTR [rsi-0x2b],bl
  45c386:	add    eax,0x0
  45c38b:	add    BYTE PTR [rax-0x2b],bh
  45c38e:	add    eax,0x0
  45c393:	add    BYTE PTR [rax+0x5d5],cl
  45c399:	add    BYTE PTR [rax],al
  45c39b:	add    BYTE PTR [rax+0x5d5],bl
  45c3a1:	add    BYTE PTR [rax],al
  45c3a3:	add    BYTE PTR [rbp+rdx*8+0x5],dh
  45c3aa:	add    BYTE PTR [rax],al
  45c3ac:	int3   
  45c3ad:	(bad)  
  45c3ae:	add    eax,0x0
  45c3b3:	add    dl,bl
  45c3b5:	(bad)  
  45c3b6:	add    eax,0x0
  45c3bb:	add    dh,ah
  45c3bd:	(bad)  
  45c3be:	add    eax,0x0
  45c3c3:	add    ah,dh
  45c3c5:	(bad)  
  45c3c6:	add    eax,0x0
  45c3cb:	add    BYTE PTR [rdx],cl
  45c3cd:	(bad)  
  45c3ce:	add    eax,0x0
  45c3d3:	add    BYTE PTR [rsi+rdx*8],ah
  45c3d6:	add    eax,0x0
  45c3db:	add    BYTE PTR [rax-0x2a],al
  45c3de:	add    eax,0x0
  45c3e3:	add    BYTE PTR [rsi+rdx*8+0x5],cl
  45c3e7:	add    BYTE PTR [rax],al
  45c3e9:	add    BYTE PTR [rax],al
  45c3eb:	add    BYTE PTR [rax-0x2a],ah
  45c3ee:	add    eax,0x0
  45c3f3:	add    BYTE PTR [rsi-0x2a],dh
  45c3f6:	add    eax,0x0
  45c3fb:	add    BYTE PTR [rdx+0x5d6],cl
  45c401:	add    BYTE PTR [rax],al
  45c403:	add    BYTE PTR [rsi+rdx*8+0x5],ah
  45c40a:	add    BYTE PTR [rax],al
  45c40c:	mov    eax,0x5d6
  45c411:	add    BYTE PTR [rax],al
  45c413:	add    al,dl
  45c415:	(bad)  
  45c416:	add    eax,0x0
  45c41b:	add    dl,ah
  45c41d:	(bad)  
  45c41e:	add    eax,0x0
  45c423:	add    ah,bh
  45c425:	(bad)  
  45c426:	add    eax,0x0
  45c42b:	add    BYTE PTR [rdx],bl
  45c42d:	xlat   BYTE PTR ds:[rbx]
  45c42e:	add    eax,0x0
  45c433:	add    BYTE PTR [rdx],ah
  45c435:	xlat   BYTE PTR ds:[rbx]
  45c436:	add    eax,0x0
  45c43b:	add    BYTE PTR [rdi+rdx*8],ch
  45c43e:	add    eax,0x0
  45c443:	add    BYTE PTR [rax-0x29],al
  45c446:	add    eax,0x0
  45c44b:	add    BYTE PTR [rsi-0x29],cl
  45c44e:	add    eax,0x0
  45c453:	add    BYTE PTR [rdx-0x29],ch
  45c456:	add    eax,0x0
  45c45b:	add    BYTE PTR [rdi+rdx*8+0x5],bh
  45c45f:	add    BYTE PTR [rax],al
  45c461:	add    BYTE PTR [rax],al
  45c463:	add    BYTE PTR [rdi+rdx*8+0x5],cl
  45c46a:	add    BYTE PTR [rax],al
  45c46c:	movabs ds:0x5d7,al
  45c475:	add    BYTE PTR [rax],al
  45c477:	add    BYTE PTR [rax],al
  45c479:	add    BYTE PTR [rax],al
  45c47b:	add    BYTE PTR [rax+0x5d7],bh
  45c481:	add    BYTE PTR [rax],al
  45c483:	add    al,dl
  45c485:	xlat   BYTE PTR ds:[rbx]
  45c486:	add    eax,0x0
  45c48b:	add    dl,bl
  45c48d:	xlat   BYTE PTR ds:[rbx]
  45c48e:	add    eax,0x0
  45c493:	add    al,ch
  45c495:	xlat   BYTE PTR ds:[rbx]
  45c496:	add    eax,0x0
  45c49b:	add    al,bh
  45c49d:	xlat   BYTE PTR ds:[rbx]
  45c49e:	add    eax,0x0
  45c4a3:	add    BYTE PTR [rax+rbx*8],al
  45c4a6:	add    eax,0x0
  45c4ab:	add    BYTE PTR [rdx],dl
  45c4ad:	fadd   DWORD PTR [rip+0x0]        # 0x45c4b3
  45c4b3:	add    BYTE PTR [rdx],ah
  45c4b5:	fadd   DWORD PTR [rip+0x0]        # 0x45c4bb
  45c4bb:	add    BYTE PTR [rax+rbx*8],dh
  45c4be:	add    eax,0x0
  45c4c3:	add    BYTE PTR [rax-0x28],cl
  45c4c6:	add    eax,0x0
  45c4cb:	add    BYTE PTR [rdx-0x28],dl
  45c4ce:	add    eax,0x0
  45c4d3:	add    BYTE PTR [rax-0x28],ah
  45c4d6:	add    eax,0x0
  45c4db:	add    BYTE PTR [rdx-0x28],ch
  45c4de:	add    eax,0x0
  45c4e3:	add    BYTE PTR [rax+rbx*8+0x5],dh
  45c4e7:	add    BYTE PTR [rax],al
  45c4e9:	add    BYTE PTR [rax],al
  45c4eb:	add    BYTE PTR [rsi-0x28],bh
  45c4ee:	add    eax,0x0
  45c4f3:	add    BYTE PTR [rdx+0x5d8],cl
  45c4f9:	add    BYTE PTR [rax],al
  45c4fb:	add    BYTE PTR [rsi+0x5d8],dl
  45c501:	add    BYTE PTR [rax],al
  45c503:	add    BYTE PTR [rsi+0x5d8],ah
  45c509:	add    BYTE PTR [rax],al
  45c50b:	add    BYTE PTR [rsi+0x5d8],ch
  45c511:	add    BYTE PTR [rax],al
  45c513:	add    BYTE PTR [rax+0x5d8],bh
  45c519:	add    BYTE PTR [rax],al
  45c51b:	add    dl,al
  45c51d:	fadd   DWORD PTR [rip+0x0]        # 0x45c523
  45c523:	add    ah,cl
  45c525:	fadd   DWORD PTR [rip+0x0]        # 0x45c52b
  45c52b:	add    dh,dl
  45c52d:	fadd   DWORD PTR [rip+0x0]        # 0x45c533
  45c533:	add    al,ah
  45c535:	fadd   DWORD PTR [rip+0x0]        # 0x45c53b
  45c53b:	add    dl,ch
  45c53d:	fadd   DWORD PTR [rip+0x0]        # 0x45c543
  45c543:	add    ah,dh
  45c545:	fadd   DWORD PTR [rip+0x0]        # 0x45c54b
  45c54b:	add    dh,bh
  45c54d:	fadd   DWORD PTR [rip+0x0]        # 0x45c553
  45c553:	add    BYTE PTR [rsi],al
  45c555:	fld    DWORD PTR [rip+0x0]        # 0x45c55b
  45c55b:	add    BYTE PTR [rax],dl
  45c55d:	fld    DWORD PTR [rip+0x0]        # 0x45c563
  45c563:	add    BYTE PTR [rax],bl
  45c565:	fld    DWORD PTR [rip+0x0]        # 0x45c56b
  45c56b:	add    BYTE PTR [rdx],ah
  45c56d:	fld    DWORD PTR [rip+0x0]        # 0x45c573
  45c573:	add    BYTE PTR [rsi],ch
  45c575:	fld    DWORD PTR [rip+0x0]        # 0x45c57b
  45c57b:	add    BYTE PTR [rsi],dh
  45c57d:	fld    DWORD PTR [rip+0x0]        # 0x45c583
  45c583:	add    BYTE PTR [rax-0x27],al
  45c586:	add    eax,0x0
  45c58b:	add    BYTE PTR [rax-0x27],cl
  45c58e:	add    eax,0x0
  45c593:	add    BYTE PTR [rdx-0x27],dl
  45c596:	add    eax,0x0
  45c59b:	add    BYTE PTR [rcx+rbx*8+0x5],bl
  45c59f:	add    BYTE PTR [rax],al
  45c5a1:	add    BYTE PTR [rax],al
  45c5a3:	add    BYTE PTR [rcx+rbx*8+0x5],ah
  45c5a7:	add    BYTE PTR [rax],al
  45c5a9:	add    BYTE PTR [rax],al
  45c5ab:	add    BYTE PTR [rcx+rbx*8+0x5],ch
  45c5af:	add    BYTE PTR [rax],al
  45c5b1:	add    BYTE PTR [rax],al
  45c5b3:	add    BYTE PTR [rsi-0x27],dh
  45c5b6:	add    eax,0x0
  45c5bb:	add    BYTE PTR [rsi-0x27],bh
  45c5be:	add    eax,0x0
  45c5c3:	add    BYTE PTR [rsi+0x5d9],al
  45c5c9:	add    BYTE PTR [rax],al
  45c5cb:	add    BYTE PTR [rsi+0x5d9],cl
  45c5d1:	add    BYTE PTR [rax],al
  45c5d3:	add    BYTE PTR [rsi+0x5d9],dl
  45c5d9:	add    BYTE PTR [rax],al
  45c5db:	add    BYTE PTR [rax+0x5d9],ah
  45c5e1:	add    BYTE PTR [rax],al
  45c5e3:	add    BYTE PTR [rax+0x5d9],ch
  45c5e9:	add    BYTE PTR [rax],al
  45c5eb:	add    BYTE PTR [rdx+0x5d9],dh
  45c5f1:	add    BYTE PTR [rax],al
  45c5f3:	add    BYTE PTR [rcx+rbx*8+0x5],bh
  45c5fa:	add    BYTE PTR [rax],al
  45c5fc:	(bad)  
  45c5fd:	fld    DWORD PTR [rip+0x0]        # 0x45c603
  45c603:	add    al,dl
  45c605:	fld    DWORD PTR [rip+0x0]        # 0x45c60b
  45c60b:	add    dl,bl
  45c60d:	fld    DWORD PTR [rip+0x0]        # 0x45c613
  45c613:	add    al,ch
  45c615:	fld    DWORD PTR [rip+0x0]        # 0x45c61b
  45c61b:	add    dl,dh
  45c61d:	fld    DWORD PTR [rip+0x0]        # 0x45c623
  45c623:	add    ah,bh
  45c625:	fld    DWORD PTR [rip+0x0]        # 0x45c62b
  45c62b:	add    BYTE PTR [rsi],al
  45c62d:	fiadd  DWORD PTR [rip+0x0]        # 0x45c633
  45c633:	add    BYTE PTR [rax],dl
  45c635:	fiadd  DWORD PTR [rip+0x0]        # 0x45c63b
  45c63b:	add    BYTE PTR [rdx],bl
  45c63d:	fiadd  DWORD PTR [rip+0x0]        # 0x45c643
  45c643:	add    BYTE PTR [rdx],ah
  45c645:	fiadd  DWORD PTR [rip+0x0]        # 0x45c64b
  45c64b:	add    BYTE PTR [rdx+rbx*8],ch
  45c64e:	add    eax,0x0
  45c653:	add    BYTE PTR [rdx+rbx*8],dh
  45c656:	add    eax,0x0
  45c65b:	add    BYTE PTR [rsi],bh
  45c65d:	fiadd  DWORD PTR [rip+0x0]        # 0x45c663
  45c663:	add    BYTE PTR [rax-0x26],cl
  45c666:	add    eax,0x0
  45c66b:	add    BYTE PTR [rdx+rbx*8+0x5],dl
  45c66f:	add    BYTE PTR [rax],al
  45c671:	add    BYTE PTR [rax],al
  45c673:	add    BYTE PTR [rsi-0x26],bl
  45c676:	add    eax,0x0
  45c67b:	add    BYTE PTR [rax-0x26],ch
  45c67e:	add    eax,0x0
  45c683:	add    BYTE PTR [rdx-0x26],dh
  45c686:	add    eax,0x0
  45c68b:	add    BYTE PTR [rdx+rbx*8+0x5],bh
  45c68f:	add    BYTE PTR [rax],al
  45c691:	add    BYTE PTR [rax],al
  45c693:	add    BYTE PTR [rsi+0x5da],al
  45c699:	add    BYTE PTR [rax],al
  45c69b:	add    BYTE PTR [rax+0x5da],dl
  45c6a1:	add    BYTE PTR [rax],al
  45c6a3:	add    BYTE PTR [rdx+0x5da],bl
  45c6a9:	add    BYTE PTR [rax],al
  45c6ab:	add    BYTE PTR [rdx+rbx*8+0x5],ah
  45c6b2:	add    BYTE PTR [rax],al
  45c6b4:	mov    al,0xda
  45c6b6:	add    eax,0x0
  45c6bb:	add    BYTE PTR [rdx+0x5da],bh
  45c6c1:	add    BYTE PTR [rax],al
  45c6c3:	add    ah,al
  45c6c5:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6cb
  45c6cb:	add    dh,cl
  45c6cd:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6d3
  45c6d3:	add    al,bl
  45c6d5:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6db
  45c6db:	add    dl,ah
  45c6dd:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6e3
  45c6e3:	add    ah,ch
  45c6e5:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6eb
  45c6eb:	add    dh,dh
  45c6ed:	fiadd  DWORD PTR [rip+0x0]        # 0x45c6f3
  45c6f3:	add    BYTE PTR [rax],al
  45c6f5:	fild   DWORD PTR [rip+0x0]        # 0x45c6fb
  45c6fb:	add    BYTE PTR [rdx],cl
  45c6fd:	fild   DWORD PTR [rip+0x0]        # 0x45c703
  45c703:	add    BYTE PTR [rbx+rbx*8],dl
  45c706:	add    eax,0x0
  45c70b:	add    BYTE PTR [rsi],bl
  45c70d:	fild   DWORD PTR [rip+0x0]        # 0x45c713
  45c713:	add    BYTE PTR [rdx],ch
  45c715:	fild   DWORD PTR [rip+0x0]        # 0x45c71b
  45c71b:	add    BYTE PTR [rbx+rbx*8],dh
  45c71e:	add    eax,0x0
  45c723:	add    BYTE PTR [rsi],bh
  45c725:	fild   DWORD PTR [rip+0x0]        # 0x45c72b
  45c72b:	add    BYTE PTR [rax-0x25],cl
  45c72e:	add    eax,0x0
  45c733:	add    BYTE PTR [rax-0x25],dl
  45c736:	add    eax,0x0
  45c73b:	add    BYTE PTR [rdx-0x25],bl
  45c73e:	add    eax,0x0
  45c743:	add    BYTE PTR [rbx+rbx*8+0x5],ah
  45c747:	add    BYTE PTR [rax],al
  45c749:	add    BYTE PTR [rax],al
  45c74b:	add    BYTE PTR [rsi-0x25],ch
  45c74e:	add    eax,0x0
  45c753:	add    BYTE PTR [rax-0x25],bh
  45c756:	add    eax,0x0
  45c75b:	add    BYTE PTR [rdx+0x5db],al
  45c761:	add    BYTE PTR [rax],al
  45c763:	add    BYTE PTR [rbx+rbx*8+0x5],cl
	...
  45c772:	add    BYTE PTR [rax],al
  45c774:	test   dh,cl
  45c776:	add    eax,0x0
  45c77b:	add    BYTE PTR [rax+0x5ce],bl
  45c781:	add    BYTE PTR [rax],al
  45c783:	add    BYTE PTR [rsi+rcx*8+0x5],ah
  45c78a:	add    BYTE PTR [rax],al
  45c78c:	mov    al,0xce
  45c78e:	add    eax,0x0
  45c793:	add    ah,al
  45c795:	(bad)  
  45c796:	add    eax,0x0
  45c79b:	add    ah,dl
  45c79d:	(bad)  
  45c79e:	add    eax,0x0
  45c7a3:	add    al,ch
  45c7a5:	(bad)  
  45c7a6:	add    eax,0x0
  45c7ab:	add    BYTE PTR [rdi+rcx*8],al
  45c7ae:	add    eax,0x0
  45c7b3:	add    BYTE PTR [rdi+rcx*8],dl
  45c7b6:	add    eax,0x0
  45c7bb:	add    BYTE PTR [rax],ch
  45c7bd:	iret   
  45c7be:	add    eax,0x0
  45c7c3:	add    BYTE PTR [rax],dh
  45c7c5:	iret   
  45c7c6:	add    eax,0x0
  45c7cb:	add    BYTE PTR [rdi+rcx*8],bh
  45c7ce:	add    eax,0x0
  45c7d3:	add    BYTE PTR [rax-0x31],dl
  45c7d6:	add    eax,0x0
  45c7db:	add    BYTE PTR [rdi+rcx*8+0x5],ah
  45c7df:	add    BYTE PTR [rax],al
  45c7e1:	add    BYTE PTR [rax],al
  45c7e3:	add    BYTE PTR [rax-0x31],bh
  45c7e6:	add    eax,0x0
  45c7eb:	add    BYTE PTR [rax+0x5cf],dl
  45c7f1:	add    BYTE PTR [rax],al
  45c7f3:	add    BYTE PTR [rdi+rcx*8+0x5],ah
  45c7fa:	add    BYTE PTR [rax],al
  45c7fc:	mov    esp,0x5cf
  45c801:	add    BYTE PTR [rax],al
  45c803:	add    al,cl
  45c805:	iret   
  45c806:	add    eax,0x0
  45c80b:	add    ah,dl
  45c80d:	iret   
  45c80e:	add    eax,0x0
  45c813:	add    al,ah
  45c815:	iret   
  45c816:	add    eax,0x0
  45c81b:	add    al,dh
  45c81d:	iret   
  45c81e:	add    eax,0x0
  45c823:	add    ah,bh
  45c825:	iret   
  45c826:	add    eax,0x0
  45c82b:	add    BYTE PTR [rax],cl
  45c82d:	rol    BYTE PTR [rip+0x0],1        # 0x45c833
  45c833:	add    BYTE PTR [rax],bl
  45c835:	rol    BYTE PTR [rip+0x0],1        # 0x45c83b
  45c83b:	add    BYTE PTR [rax],ch
  45c83d:	rol    BYTE PTR [rip+0x0],1        # 0x45c843
  45c843:	add    BYTE PTR [rax],bh
  45c845:	rol    BYTE PTR [rip+0x0],1        # 0x45c84b
  45c84b:	add    BYTE PTR [rax-0x30],cl
  45c84e:	add    eax,0x0
  45c853:	add    BYTE PTR [rax+rdx*8+0x5],dl
  45c857:	add    BYTE PTR [rax],al
  45c859:	add    BYTE PTR [rax],al
  45c85b:	add    BYTE PTR [rax+rdx*8+0x5],ah
  45c85f:	add    BYTE PTR [rax],al
  45c861:	add    BYTE PTR [rax],al
  45c863:	add    BYTE PTR [rax-0x30],dh
  45c866:	add    eax,0x0
  45c86b:	add    BYTE PTR [rax+rdx*8+0x5],bh
  45c86f:	add    BYTE PTR [rax],al
  45c871:	add    BYTE PTR [rax],al
  45c873:	add    BYTE PTR [rax+0x5d0],cl
  45c879:	add    BYTE PTR [rax],al
  45c87b:	add    BYTE PTR [rax+0x5d0],bl
  45c881:	add    BYTE PTR [rax],al
  45c883:	add    BYTE PTR [rax+rdx*8+0x5],ah
  45c88a:	add    BYTE PTR [rax],al
  45c88c:	mov    ah,0xd0
  45c88e:	add    eax,0x0
  45c893:	add    al,cl
  45c895:	rol    BYTE PTR [rip+0x0],1        # 0x45c89b
  45c89b:	add    ah,dl
  45c89d:	rol    BYTE PTR [rip+0x0],1        # 0x45c8a3
  45c8a3:	add    al,ah
  45c8a5:	rol    BYTE PTR [rip+0x0],1        # 0x45c8ab
  45c8ab:	add    ah,dh
  45c8ad:	rol    BYTE PTR [rip+0x0],1        # 0x45c8b3
  45c8b3:	add    BYTE PTR [rcx+rdx*8],al
  45c8b6:	add    eax,0x0
  45c8bb:	add    BYTE PTR [rcx+rdx*8],dl
  45c8be:	add    eax,0x0
  45c8c3:	add    BYTE PTR [rax],ah
  45c8c5:	rol    DWORD PTR [rip+0x0],1        # 0x45c8cb
  45c8cb:	add    BYTE PTR [rax],bh
  45c8cd:	rol    DWORD PTR [rip+0x0],1        # 0x45c8d3
  45c8d3:	add    BYTE PTR [rcx+rdx*8+0x5],cl
  45c8d7:	add    BYTE PTR [rax],al
  45c8d9:	add    BYTE PTR [rax],al
  45c8db:	add    BYTE PTR [rax-0x2f],ah
  45c8de:	add    eax,0x0
  45c8e3:	add    BYTE PTR [rax-0x2f],bh
  45c8e6:	add    eax,0x0
  45c8eb:	add    BYTE PTR [rax+0x5d1],dl
  45c8f1:	add    BYTE PTR [rax],al
  45c8f3:	add    BYTE PTR [rax+0x5d1],ch
  45c8f9:	add    BYTE PTR [rax],al
  45c8fb:	add    BYTE PTR [rcx+rdx*8+0x5],dh
  45c902:	add    BYTE PTR [rax],al
  45c904:	int3   
  45c905:	rol    DWORD PTR [rip+0x0],1        # 0x45c90b
  45c90b:	add    al,bl
  45c90d:	rol    DWORD PTR [rip+0x0],1        # 0x45c913
  45c913:	add    ah,dh
  45c915:	rol    DWORD PTR [rip+0x0],1        # 0x45c91b
  45c91b:	add    BYTE PTR [rax],cl
  45c91d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c923
  45c923:	add    BYTE PTR [rax],ah
  45c925:	rol    BYTE PTR [rip+0x0],cl        # 0x45c92b
  45c92b:	add    BYTE PTR [rax],bh
  45c92d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c933
  45c933:	add    BYTE PTR [rdx+rdx*8+0x5],cl
  45c937:	add    BYTE PTR [rax],al
  45c939:	add    BYTE PTR [rax],al
  45c93b:	add    BYTE PTR [rdx+rdx*8+0x5],ah
  45c93f:	add    BYTE PTR [rax],al
  45c941:	add    BYTE PTR [rax],al
  45c943:	add    BYTE PTR [rdx+rdx*8+0x5],bh
  45c947:	add    BYTE PTR [rax],al
  45c949:	add    BYTE PTR [rax],al
  45c94b:	add    BYTE PTR [rax+0x5d2],dl
  45c951:	add    BYTE PTR [rax],al
  45c953:	add    BYTE PTR [rdx+rdx*8+0x5],bl
  45c95a:	add    BYTE PTR [rax],al
  45c95c:	test   al,0xd2
  45c95e:	add    eax,0x0
  45c963:	add    BYTE PTR [rdx+rdx*8+0x5],dh
  45c96a:	add    BYTE PTR [rax],al
  45c96c:	int3   
  45c96d:	rol    BYTE PTR [rip+0x0],cl        # 0x45c973
  45c973:	add    ah,ah
  45c975:	rol    BYTE PTR [rip+0x0],cl        # 0x45c97b
  45c97b:	add    BYTE PTR [rbx+rdx*8],al
  45c97e:	add    eax,0x0
  45c983:	add    BYTE PTR [rax],bl
  45c985:	rol    DWORD PTR [rip+0x0],cl        # 0x45c98b
  45c98b:	add    BYTE PTR [rbx+rdx*8],ch
  45c98e:	add    eax,0x0
	...
  45c99b:	add    BYTE PTR [rax-0x2d],al
  45c99e:	add    eax,0x0
  45c9a3:	add    BYTE PTR [rax-0x2d],bl
  45c9a6:	add    eax,0x0
  45c9ab:	add    BYTE PTR [rdx-0x2d],ah
  45c9ae:	add    eax,0x0
  45c9b3:	add    BYTE PTR [rbx+rdx*8+0x5],ch
  45c9b7:	add    BYTE PTR [rax],al
  45c9b9:	add    BYTE PTR [rax],al
  45c9bb:	add    BYTE PTR [rax+0x5d3],al
  45c9c1:	add    BYTE PTR [rax],al
  45c9c3:	add    BYTE PTR [rax+0x5d3],dl
  45c9c9:	add    BYTE PTR [rax],al
  45c9cb:	add    BYTE PTR [rsi+0x5d3],ah
  45c9d1:	add    BYTE PTR [rax],al
  45c9d3:	add    BYTE PTR [rsi+0x5d3],dh
  45c9d9:	add    BYTE PTR [rax],al
  45c9db:	add    dh,al
  45c9dd:	rol    DWORD PTR [rip+0x0],cl        # 0x45c9e3
	...
  45c9eb:	add    ah,bl
  45c9ed:	rol    DWORD PTR [rip+0x0],cl        # 0x45c9f3
  45c9f3:	add    dl,ch
  45c9f5:	rol    DWORD PTR [rip+0x0],cl        # 0x45c9fb
  45c9fb:	add    dh,bh
  45c9fd:	rol    DWORD PTR [rip+0x0],cl        # 0x45ca03
  45ca03:	add    BYTE PTR [rsp+rdx*8],cl
  45ca06:	add    eax,0x0
  45ca0b:	add    BYTE PTR [rdx],bl
  45ca0d:	(bad)  
  45ca0e:	add    eax,0x0
  45ca13:	add    BYTE PTR [rsp+rdx*8],ch
  45ca16:	add    eax,0x0
  45ca1b:	add    BYTE PTR [rsp+rdx*8+0x5],al
  45ca1f:	add    BYTE PTR [rax],al
  45ca21:	add    BYTE PTR [rax],al
  45ca23:	add    BYTE PTR [rsi-0x2c],dl
  45ca26:	add    eax,0x0
  45ca2b:	add    BYTE PTR [rax-0x2c],ch
  45ca2e:	add    eax,0x0
  45ca33:	add    BYTE PTR [rax+0x5d4],al
  45ca39:	add    BYTE PTR [rax],al
  45ca3b:	add    BYTE PTR [rdx+0x5d4],dl
  45ca41:	add    BYTE PTR [rax],al
  45ca43:	add    BYTE PTR [rsp+rdx*8+0x5],bl
  45ca4a:	add    BYTE PTR [rax],al
  45ca4c:	lods   al,BYTE PTR ds:[rsi]
  45ca4d:	(bad)  
  45ca4e:	add    eax,0x0
  45ca53:	add    BYTE PTR [rsi+0x5d4],bh
  45ca59:	add    BYTE PTR [rax],al
  45ca5b:	add    dl,dl
  45ca5d:	(bad)  
  45ca5e:	add    eax,0x0
  45ca63:	add    al,ch
  45ca65:	(bad)  
  45ca66:	add    eax,0x0
  45ca6b:	add    dh,bh
  45ca6d:	(bad)  
  45ca6e:	add    eax,0x0
  45ca73:	add    BYTE PTR [rdx*8+0x5],dl
  45ca7a:	add    BYTE PTR [rax],al
  45ca7c:	sub    al,0xd5
  45ca7e:	add    eax,0x0
  45ca83:	add    BYTE PTR [rdx*8+0x5],bh
  45ca8a:	add    BYTE PTR [rax],al
  45ca8c:	rex.WRX (bad) 
  45ca8e:	add    eax,0x0
  45ca93:	add    BYTE PTR [rsi-0x2b],bl
  45ca96:	add    eax,0x0
  45ca9b:	add    BYTE PTR [rax-0x2b],bh
  45ca9e:	add    eax,0x0
  45caa3:	add    BYTE PTR [rax+0x5d5],cl
  45caa9:	add    BYTE PTR [rax],al
  45caab:	add    BYTE PTR [rax+0x5d5],bl
  45cab1:	add    BYTE PTR [rax],al
  45cab3:	add    BYTE PTR [rbp+rdx*8+0x5],dh
  45caba:	add    BYTE PTR [rax],al
  45cabc:	int3   
  45cabd:	(bad)  
  45cabe:	add    eax,0x0
  45cac3:	add    dl,bl
  45cac5:	(bad)  
  45cac6:	add    eax,0x0
  45cacb:	add    dh,ah
  45cacd:	(bad)  
  45cace:	add    eax,0x0
  45cad3:	add    ah,dh
  45cad5:	(bad)  
  45cad6:	add    eax,0x0
  45cadb:	add    BYTE PTR [rdx],cl
  45cadd:	(bad)  
  45cade:	add    eax,0x0
  45cae3:	add    BYTE PTR [rsi+rdx*8],ah
  45cae6:	add    eax,0x0
  45caeb:	add    BYTE PTR [rax-0x2a],al
  45caee:	add    eax,0x0
  45caf3:	add    BYTE PTR [rsi+rdx*8+0x5],cl
  45caf7:	add    BYTE PTR [rax],al
  45caf9:	add    BYTE PTR [rax],al
  45cafb:	add    BYTE PTR [rax-0x2a],ah
  45cafe:	add    eax,0x0
  45cb03:	add    BYTE PTR [rsi-0x2a],dh
  45cb06:	add    eax,0x0
  45cb0b:	add    BYTE PTR [rdx+0x5d6],cl
  45cb11:	add    BYTE PTR [rax],al
  45cb13:	add    BYTE PTR [rsi+rdx*8+0x5],ah
  45cb1a:	add    BYTE PTR [rax],al
  45cb1c:	mov    eax,0x5d6
  45cb21:	add    BYTE PTR [rax],al
  45cb23:	add    al,dl
  45cb25:	(bad)  
  45cb26:	add    eax,0x0
  45cb2b:	add    dl,ah
  45cb2d:	(bad)  
  45cb2e:	add    eax,0x0
  45cb33:	add    ah,bh
  45cb35:	(bad)  
  45cb36:	add    eax,0x0
  45cb3b:	add    BYTE PTR [rdx],bl
  45cb3d:	xlat   BYTE PTR ds:[rbx]
  45cb3e:	add    eax,0x0
  45cb43:	add    BYTE PTR [rdx],ah
  45cb45:	xlat   BYTE PTR ds:[rbx]
  45cb46:	add    eax,0x0
  45cb4b:	add    BYTE PTR [rdi+rdx*8],ch
  45cb4e:	add    eax,0x0
  45cb53:	add    BYTE PTR [rax-0x29],al
  45cb56:	add    eax,0x0
  45cb5b:	add    BYTE PTR [rsi-0x29],cl
  45cb5e:	add    eax,0x0
  45cb63:	add    BYTE PTR [rdx-0x29],ch
  45cb66:	add    eax,0x0
  45cb6b:	add    BYTE PTR [rdi+rdx*8+0x5],bh
  45cb6f:	add    BYTE PTR [rax],al
  45cb71:	add    BYTE PTR [rax],al
  45cb73:	add    BYTE PTR [rdi+rdx*8+0x5],cl
  45cb7a:	add    BYTE PTR [rax],al
  45cb7c:	movabs ds:0x5d7,al
  45cb85:	add    BYTE PTR [rax],al
  45cb87:	add    BYTE PTR [rax],al
  45cb89:	add    BYTE PTR [rax],al
  45cb8b:	add    BYTE PTR [rax+0x5d7],bh
  45cb91:	add    BYTE PTR [rax],al
  45cb93:	add    al,dl
  45cb95:	xlat   BYTE PTR ds:[rbx]
  45cb96:	add    eax,0x0
  45cb9b:	add    dl,bl
  45cb9d:	xlat   BYTE PTR ds:[rbx]
  45cb9e:	add    eax,0x0
  45cba3:	add    al,ch
  45cba5:	xlat   BYTE PTR ds:[rbx]
  45cba6:	add    eax,0x0
  45cbab:	add    al,bh
  45cbad:	xlat   BYTE PTR ds:[rbx]
  45cbae:	add    eax,0x0
  45cbb3:	add    BYTE PTR [rax+rbx*8],al
  45cbb6:	add    eax,0x0
  45cbbb:	add    BYTE PTR [rdx],dl
  45cbbd:	fadd   DWORD PTR [rip+0x0]        # 0x45cbc3
  45cbc3:	add    BYTE PTR [rdx],ah
  45cbc5:	fadd   DWORD PTR [rip+0x0]        # 0x45cbcb
  45cbcb:	add    BYTE PTR [rax+rbx*8],dh
  45cbce:	add    eax,0x0
  45cbd3:	add    BYTE PTR [rax-0x28],cl
  45cbd6:	add    eax,0x0
  45cbdb:	add    BYTE PTR [rdx-0x28],dl
  45cbde:	add    eax,0x0
  45cbe3:	add    BYTE PTR [rax-0x28],ah
  45cbe6:	add    eax,0x0
  45cbeb:	add    BYTE PTR [rdx-0x28],ch
  45cbee:	add    eax,0x0
  45cbf3:	add    BYTE PTR [rax+rbx*8+0x5],dh
  45cbf7:	add    BYTE PTR [rax],al
  45cbf9:	add    BYTE PTR [rax],al
  45cbfb:	add    BYTE PTR [rsi-0x28],bh
  45cbfe:	add    eax,0x0
  45cc03:	add    BYTE PTR [rdx+0x5d8],cl
  45cc09:	add    BYTE PTR [rax],al
  45cc0b:	add    BYTE PTR [rsi+0x5d8],dl
  45cc11:	add    BYTE PTR [rax],al
  45cc13:	add    BYTE PTR [rsi+0x5d8],ah
  45cc19:	add    BYTE PTR [rax],al
  45cc1b:	add    BYTE PTR [rsi+0x5d8],ch
  45cc21:	add    BYTE PTR [rax],al
  45cc23:	add    BYTE PTR [rax+0x5d8],bh
  45cc29:	add    BYTE PTR [rax],al
  45cc2b:	add    dl,al
  45cc2d:	fadd   DWORD PTR [rip+0x0]        # 0x45cc33
  45cc33:	add    ah,cl
  45cc35:	fadd   DWORD PTR [rip+0x0]        # 0x45cc3b
  45cc3b:	add    dh,dl
  45cc3d:	fadd   DWORD PTR [rip+0x0]        # 0x45cc43
  45cc43:	add    al,ah
  45cc45:	fadd   DWORD PTR [rip+0x0]        # 0x45cc4b
  45cc4b:	add    dl,ch
  45cc4d:	fadd   DWORD PTR [rip+0x0]        # 0x45cc53
  45cc53:	add    ah,dh
  45cc55:	fadd   DWORD PTR [rip+0x0]        # 0x45cc5b
  45cc5b:	add    dh,bh
  45cc5d:	fadd   DWORD PTR [rip+0x0]        # 0x45cc63
  45cc63:	add    BYTE PTR [rsi],al
  45cc65:	fld    DWORD PTR [rip+0x0]        # 0x45cc6b
  45cc6b:	add    BYTE PTR [rax],dl
  45cc6d:	fld    DWORD PTR [rip+0x0]        # 0x45cc73
  45cc73:	add    BYTE PTR [rax],bl
  45cc75:	fld    DWORD PTR [rip+0x0]        # 0x45cc7b
  45cc7b:	add    BYTE PTR [rdx],ah
  45cc7d:	fld    DWORD PTR [rip+0x0]        # 0x45cc83
  45cc83:	add    BYTE PTR [rsi],ch
  45cc85:	fld    DWORD PTR [rip+0x0]        # 0x45cc8b
  45cc8b:	add    BYTE PTR [rsi],dh
  45cc8d:	fld    DWORD PTR [rip+0x0]        # 0x45cc93
  45cc93:	add    BYTE PTR [rax-0x27],al
  45cc96:	add    eax,0x0
  45cc9b:	add    BYTE PTR [rax-0x27],cl
  45cc9e:	add    eax,0x0
  45cca3:	add    BYTE PTR [rdx-0x27],dl
  45cca6:	add    eax,0x0
  45ccab:	add    BYTE PTR [rcx+rbx*8+0x5],bl
  45ccaf:	add    BYTE PTR [rax],al
  45ccb1:	add    BYTE PTR [rax],al
  45ccb3:	add    BYTE PTR [rcx+rbx*8+0x5],ah
  45ccb7:	add    BYTE PTR [rax],al
  45ccb9:	add    BYTE PTR [rax],al
  45ccbb:	add    BYTE PTR [rcx+rbx*8+0x5],ch
  45ccbf:	add    BYTE PTR [rax],al
  45ccc1:	add    BYTE PTR [rax],al
  45ccc3:	add    BYTE PTR [rsi-0x27],dh
  45ccc6:	add    eax,0x0
  45cccb:	add    BYTE PTR [rsi-0x27],bh
  45ccce:	add    eax,0x0
  45ccd3:	add    BYTE PTR [rsi+0x5d9],al
  45ccd9:	add    BYTE PTR [rax],al
  45ccdb:	add    BYTE PTR [rsi+0x5d9],cl
  45cce1:	add    BYTE PTR [rax],al
  45cce3:	add    BYTE PTR [rsi+0x5d9],dl
  45cce9:	add    BYTE PTR [rax],al
  45cceb:	add    BYTE PTR [rax+0x5d9],ah
  45ccf1:	add    BYTE PTR [rax],al
  45ccf3:	add    BYTE PTR [rax+0x5d9],ch
  45ccf9:	add    BYTE PTR [rax],al
  45ccfb:	add    BYTE PTR [rdx+0x5d9],dh
  45cd01:	add    BYTE PTR [rax],al
  45cd03:	add    BYTE PTR [rcx+rbx*8+0x5],bh
  45cd0a:	add    BYTE PTR [rax],al
  45cd0c:	(bad)  
  45cd0d:	fld    DWORD PTR [rip+0x0]        # 0x45cd13
  45cd13:	add    al,dl
  45cd15:	fld    DWORD PTR [rip+0x0]        # 0x45cd1b
  45cd1b:	add    dl,bl
  45cd1d:	fld    DWORD PTR [rip+0x0]        # 0x45cd23
  45cd23:	add    al,ch
  45cd25:	fld    DWORD PTR [rip+0x0]        # 0x45cd2b
  45cd2b:	add    dl,dh
  45cd2d:	fld    DWORD PTR [rip+0x0]        # 0x45cd33
  45cd33:	add    ah,bh
  45cd35:	fld    DWORD PTR [rip+0x0]        # 0x45cd3b
  45cd3b:	add    BYTE PTR [rsi],al
  45cd3d:	fiadd  DWORD PTR [rip+0x0]        # 0x45cd43
  45cd43:	add    BYTE PTR [rax],dl
  45cd45:	fiadd  DWORD PTR [rip+0x0]        # 0x45cd4b
  45cd4b:	add    BYTE PTR [rdx],bl
  45cd4d:	fiadd  DWORD PTR [rip+0x0]        # 0x45cd53
  45cd53:	add    BYTE PTR [rdx],ah
  45cd55:	fiadd  DWORD PTR [rip+0x0]        # 0x45cd5b
  45cd5b:	add    BYTE PTR [rdx+rbx*8],ch
  45cd5e:	add    eax,0x0
  45cd63:	add    BYTE PTR [rdx+rbx*8],dh
  45cd66:	add    eax,0x0
  45cd6b:	add    BYTE PTR [rsi],bh
  45cd6d:	fiadd  DWORD PTR [rip+0x0]        # 0x45cd73
  45cd73:	add    BYTE PTR [rax-0x26],cl
  45cd76:	add    eax,0x0
  45cd7b:	add    BYTE PTR [rdx+rbx*8+0x5],dl
  45cd7f:	add    BYTE PTR [rax],al
  45cd81:	add    BYTE PTR [rax],al
  45cd83:	add    BYTE PTR [rsi-0x26],bl
  45cd86:	add    eax,0x0
  45cd8b:	add    BYTE PTR [rax-0x26],ch
  45cd8e:	add    eax,0x0
  45cd93:	add    BYTE PTR [rdx-0x26],dh
  45cd96:	add    eax,0x0
  45cd9b:	add    BYTE PTR [rdx+rbx*8+0x5],bh
  45cd9f:	add    BYTE PTR [rax],al
  45cda1:	add    BYTE PTR [rax],al
  45cda3:	add    BYTE PTR [rsi+0x5da],al
  45cda9:	add    BYTE PTR [rax],al
  45cdab:	add    BYTE PTR [rax+0x5da],dl
  45cdb1:	add    BYTE PTR [rax],al
  45cdb3:	add    BYTE PTR [rdx+0x5da],bl
  45cdb9:	add    BYTE PTR [rax],al
  45cdbb:	add    BYTE PTR [rdx+rbx*8+0x5],ah
  45cdc2:	add    BYTE PTR [rax],al
  45cdc4:	mov    al,0xda
  45cdc6:	add    eax,0x0
  45cdcb:	add    BYTE PTR [rdx+0x5da],bh
  45cdd1:	add    BYTE PTR [rax],al
  45cdd3:	add    ah,al
  45cdd5:	fiadd  DWORD PTR [rip+0x0]        # 0x45cddb
  45cddb:	add    dh,cl
  45cddd:	fiadd  DWORD PTR [rip+0x0]        # 0x45cde3
  45cde3:	add    al,bl
  45cde5:	fiadd  DWORD PTR [rip+0x0]        # 0x45cdeb
  45cdeb:	add    dl,ah
  45cded:	fiadd  DWORD PTR [rip+0x0]        # 0x45cdf3
  45cdf3:	add    ah,ch
  45cdf5:	fiadd  DWORD PTR [rip+0x0]        # 0x45cdfb
  45cdfb:	add    dh,dh
  45cdfd:	fiadd  DWORD PTR [rip+0x0]        # 0x45ce03
  45ce03:	add    BYTE PTR [rax],al
  45ce05:	fild   DWORD PTR [rip+0x0]        # 0x45ce0b
  45ce0b:	add    BYTE PTR [rdx],cl
  45ce0d:	fild   DWORD PTR [rip+0x0]        # 0x45ce13
  45ce13:	add    BYTE PTR [rbx+rbx*8],dl
  45ce16:	add    eax,0x0
  45ce1b:	add    BYTE PTR [rsi],bl
  45ce1d:	fild   DWORD PTR [rip+0x0]        # 0x45ce23
  45ce23:	add    BYTE PTR [rdx],ch
  45ce25:	fild   DWORD PTR [rip+0x0]        # 0x45ce2b
  45ce2b:	add    BYTE PTR [rbx+rbx*8],dh
  45ce2e:	add    eax,0x0
  45ce33:	add    BYTE PTR [rsi],bh
  45ce35:	fild   DWORD PTR [rip+0x0]        # 0x45ce3b
  45ce3b:	add    BYTE PTR [rax-0x25],cl
  45ce3e:	add    eax,0x0
  45ce43:	add    BYTE PTR [rax-0x25],dl
  45ce46:	add    eax,0x0
  45ce4b:	add    BYTE PTR [rdx-0x25],bl
  45ce4e:	add    eax,0x0
  45ce53:	add    BYTE PTR [rbx+rbx*8+0x5],ah
  45ce57:	add    BYTE PTR [rax],al
  45ce59:	add    BYTE PTR [rax],al
  45ce5b:	add    BYTE PTR [rsi-0x25],ch
  45ce5e:	add    eax,0x0
  45ce63:	add    BYTE PTR [rax-0x25],bh
  45ce66:	add    eax,0x0
  45ce6b:	add    BYTE PTR [rdx+0x5db],al
  45ce71:	add    BYTE PTR [rax],al
  45ce73:	add    BYTE PTR [rbx+rbx*8+0x5],cl
	...
  45ce82:	add    BYTE PTR [rax],al
  45ce84:	add    DWORD PTR [rax],eax
  45ce86:	push   rax
  45ce87:	push   rcx
  45ce88:	(bad)  
  45ce89:	imul   ebp,DWORD PTR [rsi+0x61],0x75547972
  45ce90:	jo     0x45cefe
  45ce92:	gs jae 0x45ce95
  45ce95:	add    BYTE PTR [rax],al
  45ce97:	add    BYTE PTR [rdx],al
  45ce99:	add    BYTE PTR [rax+0x51],dl
  45ce9c:	movsxd esp,DWORD PTR [rcx+0x6e]
  45ce9f:	movsxd esp,DWORD PTR [rbp+0x6c]
  45cea2:	add    BYTE PTR [rax],al
  45cea4:	add    eax,DWORD PTR [rax]
  45cea6:	push   rax
  45cea7:	push   rcx
  45cea8:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  45ceac:	jb     0x45ceae
  45ceae:	add    BYTE PTR [rax],al
  45ceb0:	add    al,0x0
  45ceb2:	push   rax
  45ceb3:	push   rcx
  45ceb4:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  45ceb8:	outs   dx,BYTE PTR ds:[rsi]
  45ceb9:	je     0x45cf00
  45cebb:	outs   dx,BYTE PTR ds:[rsi]
  45cebc:	movsxd ebp,DWORD PTR [rdi+0x64]
  45cebf:	imul   ebp,DWORD PTR [rsi+0x67],0x50000
  45cec6:	push   rax
  45cec7:	push   rcx
  45cec8:	movsxd ebp,DWORD PTR [rbp+0x64]
  45cecb:	push   rbx
  45cecc:	je     0x45cf2f
  45cece:	je     0x45cf45
  45ced0:	jae    0x45ced2
  45ced2:	add    BYTE PTR [rax],al
  45ced4:	or     al,0x0
  45ced6:	push   rax
  45ced7:	push   rcx
  45ced8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45cedb:	outs   dx,BYTE PTR ds:[rsi]
  45cedc:	movsxd esi,DWORD PTR gs:[rsp+riz*2+0x62]
  45cee1:	push   rax
  45cee2:	(bad)  
  45cee3:	jb     0x45cf46
  45cee5:	ins    DWORD PTR es:[rdi],dx
  45cee6:	jae    0x45cee8
  45cee8:	or     eax,0x63515000
  45ceed:	outs   dx,DWORD PTR ds:[rsi]
  45ceee:	outs   dx,BYTE PTR ds:[rsi]
  45ceef:	outs   dx,BYTE PTR ds:[rsi]
  45cef0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45cef5:	outs   dx,BYTE PTR ds:[rsi]
  45cef6:	rex.WRX
  45cef7:	gs gs fs jae 0x45cf4c
  45cefc:	(bad)  
  45cefd:	jae    0x45cf72
  45ceff:	ja     0x45cf70
  45cf01:	jb     0x45cf67
  45cf03:	add    BYTE PTR [rdi],cl
  45cf05:	add    BYTE PTR [rax+0x51],dl
  45cf08:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45cf0b:	outs   dx,BYTE PTR ds:[rsi]
  45cf0c:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
  45cf13:	add    BYTE PTR [rax],dl
  45cf15:	add    BYTE PTR [rax+0x51],dl
  45cf18:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45cf1b:	outs   dx,BYTE PTR ds:[rsi]
  45cf1c:	imul   ebp,DWORD PTR [rsi+0x66],0x6572466f
  45cf23:	add    BYTE PTR gs:[rax],al
  45cf26:	add    BYTE PTR [rax],al
  45cf28:	adc    al,0x0
  45cf2a:	push   rax
  45cf2b:	push   rcx
  45cf2c:	fs (bad) 
  45cf2e:	add    BYTE PTR [rax],al
  45cf30:	sbb    BYTE PTR [rax],al
  45cf32:	push   rax
  45cf33:	push   rcx
  45cf34:	fs jae 0x45cfa7
  45cf37:	ins    BYTE PTR es:[rdi],dx
  45cf38:	outs   dx,BYTE PTR gs:[rsi]
  45cf3a:	add    BYTE PTR [rax],al
  45cf3c:	sbb    DWORD PTR [rax],eax
  45cf3e:	push   rax
  45cf3f:	push   rcx
  45cf40:	outs   dx,BYTE PTR gs:[rsi]
  45cf42:	movsxd esi,DWORD PTR [rdx+0x79]
  45cf45:	jo     0x45cfbb
  45cf47:	push   rax
  45cf48:	(bad)  
  45cf49:	jae    0x45cfbe
  45cf4b:	ja     0x45cfbc
  45cf4d:	jb     0x45cfb3
  45cf4f:	add    BYTE PTR [rbx],bl
  45cf51:	add    BYTE PTR [rax+0x51],dl
  45cf54:	outs   dx,BYTE PTR gs:[rsi]
  45cf56:	jbe    0x45cf8a
  45cf58:	outs   dx,BYTE PTR gs:[rsi]
  45cf5a:	movsxd ebp,DWORD PTR [rdi+0x64]
  45cf5d:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  45cf64:	sbb    al,0x0
  45cf66:	push   rax
  45cf67:	push   rcx
  45cf68:	gs jb  0x45cfdd
  45cf6b:	outs   dx,DWORD PTR ds:[rsi]
  45cf6c:	jb     0x45cfbb
  45cf6e:	gs jae 0x45cfe4
  45cf71:	(bad)  
  45cf72:	add    BYTE PTR gs:[eax],al
  45cf76:	add    BYTE PTR [rax],al
  45cf78:	(bad)  
  45cf79:	add    BYTE PTR [rax+0x51],dl
  45cf7c:	gs jae 0x45cfe2
  45cf7f:	(bad)  
  45cf80:	jo     0x45cfe7
  45cf82:	rex.WB
  45cf83:	fs outs dx,BYTE PTR gs:[rsi]
  45cf86:	je     0x45cff1
  45cf88:	imul   sp,WORD PTR [rbp+0x72],0x0
  45cf8e:	add    BYTE PTR [rax],al
  45cf90:	and    BYTE PTR [rax],al
  45cf92:	push   rax
  45cf93:	push   rcx
  45cf94:	gs jae 0x45cffa
  45cf97:	(bad)  
  45cf98:	jo     0x45cfff
  45cf9a:	imul   r14,QWORD PTR [rbp+riz*2+0x72],0x6c61
  45cfa3:	add    BYTE PTR [rdx],ah
  45cfa5:	add    BYTE PTR [rax+0x51],dl
  45cfa8:	gs jae 0x45d00e
  45cfab:	(bad)  
  45cfac:	jo     0x45d013
  45cfae:	push   rbx
  45cfaf:	je     0x45d023
  45cfb1:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6e6f43
  45cfb8:	add    BYTE PTR [rax],al
  45cfba:	add    BYTE PTR [rax],al
  45cfbc:	and    eax,DWORD PTR [rax]
  45cfbe:	push   rax
  45cfbf:	push   rcx
  45cfc0:	gs js  0x45d028
  45cfc3:	movsxd eax,DWORD PTR [rax]
  45cfc5:	add    BYTE PTR [rax],al
  45cfc7:	add    BYTE PTR [rdi],ah
  45cfc9:	add    BYTE PTR [rax+0x51],dl
  45cfcc:	imul   bp,WORD PTR [rsi+0x69],0x6873
  45cfd2:	add    BYTE PTR [rax],al
  45cfd4:	sub    al,0x0
  45cfd6:	push   rax
  45cfd7:	push   rcx
  45cfd8:	data16 outs dx,BYTE PTR ds:[rsi]
  45cfda:	(bad)  
  45cfdb:	ins    DWORD PTR es:[rdi],dx
  45cfdc:	add    BYTE PTR gs:[rax],al
  45cfdf:	add    BYTE PTR [rsi],ch
  45cfe1:	add    BYTE PTR [rax+0x51],dl
  45cfe4:	data16 jb 0x45d04c
  45cfe7:	gs rex.XB (bad) 
  45cfea:	outs   dx,BYTE PTR ds:[rsi]
  45cfeb:	movsxd esp,DWORD PTR [rbp+0x6c]
  45cfee:	add    BYTE PTR [rax],al
  45cff0:	xor    BYTE PTR [rax],al
  45cff2:	push   rax
  45cff3:	push   rcx
  45cff4:	data16 jb 0x45d05c
  45cff7:	gs ins DWORD PTR es:[rdi],dx
  45cff9:	gs ins DWORD PTR es:[rdi],dx
  45cffb:	add    BYTE PTR [rax+rax*1],dh
  45cffe:	push   rax
  45cfff:	push   rcx
  45d000:	data16 je 0x45d07c
  45d003:	jo     0x45d06a
  45d005:	add    BYTE PTR [rax],al
  45d007:	add    BYTE PTR [rip+0x67515000],dh        # 0x6797200d
  45d00d:	gs je  0x45d053
  45d010:	(bad)  
  45d011:	outs   dx,BYTE PTR ds:[rsi]
  45d012:	movsxd esp,DWORD PTR [rbp+0x6c]
  45d015:	add    BYTE PTR [rax],al
  45d017:	add    BYTE PTR [rsi],dh
  45d019:	add    BYTE PTR [rax+0x51],dl
  45d01c:	addr32 gs je 0x45d063
  45d020:	outs   dx,DWORD PTR ds:[rsi]
  45d021:	jo     0x45d09c
  45d023:	rex.R (bad) 
  45d025:	je     0x45d088
  45d027:	add    BYTE PTR [rdi],dh
  45d029:	add    BYTE PTR [rax+0x51],dl
  45d02c:	addr32 gs je 0x45d082
  45d030:	gs jae 0x45d0a8
  45d033:	ins    BYTE PTR es:[rdi],dx
  45d034:	je     0x45d036
  45d036:	add    BYTE PTR [rax],al
  45d038:	cmp    BYTE PTR [rax],al
  45d03a:	push   rax
  45d03b:	push   rcx
  45d03c:	addr32 gs je 0x45d0a9
  45d040:	jae    0x45d0b0
  45d042:	jne    0x45d0b0
  45d044:	ins    BYTE PTR es:[rdi],dx
  45d045:	add    BYTE PTR [rax],al
  45d047:	add    BYTE PTR [rax+rax*1],bh
  45d04a:	push   rax
  45d04b:	push   rcx
  45d04c:	addr32 gs je 0x45d0c3
  45d050:	jae    0x45d0be
  45d052:	add    BYTE PTR [rax],al
  45d054:	cmp    eax,0x67515000
  45d059:	gs je  0x45d0d2
  45d05c:	(bad)  
  45d05d:	ins    BYTE PTR es:[rdi],dx
  45d05e:	jne    0x45d0c5
  45d060:	add    BYTE PTR [rax],al
  45d062:	add    BYTE PTR [rax],al
  45d064:	add    BYTE PTR ds:[rax+0x51],dl
  45d068:	push   0x74736f
  45d06d:	add    BYTE PTR [rax],al
  45d06f:	add    BYTE PTR [rdi+0x0],al
  45d072:	push   rax
  45d073:	push   rcx
  45d074:	ins    DWORD PTR es:[rdi],dx
  45d075:	(bad)  
  45d076:	ins    BYTE PTR es:[rdi],dx
  45d077:	outs   dx,BYTE PTR gs:[rsi]
  45d079:	add    BYTE PTR [rax],al
  45d07b:	add    BYTE PTR [rax+0x0],cl
  45d07e:	push   rax
  45d07f:	push   rcx
  45d080:	outs   dx,BYTE PTR ds:[rsi]
  45d081:	imul   sp,WORD PTR [rbp+0x6c],0x7364
  45d087:	add    BYTE PTR [rcx+0x0],cl
  45d08a:	push   rax
  45d08b:	push   rcx
  45d08c:	outs   dx,BYTE PTR ds:[rsi]
  45d08d:	outs   dx,DWORD PTR ds:[rsi]
  45d08e:	je     0x45d0f9
  45d090:	imul   sp,WORD PTR [rbp+0x73],0x0
  45d096:	add    BYTE PTR [rax],al
  45d098:	rex.WXB add BYTE PTR [r8+0x51],dl
  45d09c:	outs   dx,BYTE PTR ds:[rsi]
  45d09d:	je     0x45d114
  45d09f:	jo     0x45d10d
  45d0a1:	gs jae 0x45d0a4
  45d0a4:	rex.WRB add BYTE PTR [r8+0x51],r10b
  45d0a8:	outs   dx,DWORD PTR ds:[rsi]
  45d0a9:	imul   esp,DWORD PTR [rsi+rdx*2+0x61],0x65756c
  45d0b1:	add    BYTE PTR [rax],al
  45d0b3:	add    BYTE PTR [rdi+0x0],cl
  45d0b6:	push   rax
  45d0b7:	push   rcx
  45d0b8:	jo     0x45d11b
  45d0ba:	jb     0x45d11d
  45d0bc:	ins    DWORD PTR es:[rdi],dx
  45d0bd:	gs je  0x45d125
  45d0c0:	jb     0x45d115
  45d0c2:	je     0x45d125
  45d0c4:	je     0x45d13b
  45d0c6:	jae    0x45d0c8
  45d0c8:	push   rcx
  45d0c9:	add    BYTE PTR [rax+0x51],dl
  45d0cc:	jo     0x45d12f
  45d0ce:	jae    0x45d143
  45d0d0:	add    BYTE PTR [rax],al
  45d0d2:	add    BYTE PTR [rax],al
  45d0d4:	push   rsp
  45d0d5:	add    BYTE PTR [rax+0x51],dl
  45d0d8:	jo     0x45d149
  45d0da:	jb     0x45d150
  45d0dc:	add    BYTE PTR [rax],al
  45d0de:	add    BYTE PTR [rax],al
  45d0e0:	pop    rax
  45d0e1:	add    BYTE PTR [rax+0x51],dl
  45d0e4:	jo     0x45d158
  45d0e6:	outs   dx,DWORD PTR ds:[rsi]
  45d0e7:	je     0x45d158
  45d0e9:	movsxd ebp,DWORD PTR [rdi+0x6c]
  45d0ec:	push   rsi
  45d0ed:	gs jb  0x45d163
  45d0f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x50005900
  45d0f7:	push   rcx
  45d0f8:	jo     0x45d16f
  45d0fa:	je     0x45d13f
  45d0fc:	outs   dx,DWORD PTR ds:[rsi]
  45d0fd:	jo     0x45d178
  45d0ff:	rex.R (bad) 
  45d101:	je     0x45d164
  45d103:	add    BYTE PTR [rdx+0x0],bl
  45d106:	push   rax
  45d107:	push   rcx
  45d108:	jo     0x45d17f
  45d10a:	je     0x45d14f
  45d10c:	outs   dx,DWORD PTR ds:[rsi]
  45d10d:	jo     0x45d188
  45d10f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45d111:	add    BYTE PTR fs:[rax],al
  45d114:	(bad)  
  45d115:	add    BYTE PTR [rax+0x51],dl
  45d118:	jb     0x45d17f
  45d11a:	jae    0x45d181
  45d11c:	je     0x45d11e
  45d11e:	add    BYTE PTR [rax],al
  45d120:	add    BYTE PTR gs:[rax+0x51],dl
  45d124:	jb     0x45d18b
  45d126:	jae    0x45d19d
  45d128:	ins    BYTE PTR es:[rdi],dx
  45d129:	je     0x45d170
  45d12b:	jb     0x45d19f
  45d12d:	outs   dx,DWORD PTR ds:[rsi]
  45d12e:	jb     0x45d176
  45d130:	imul   esp,DWORD PTR [rbp+0x6c],0x64
  45d137:	add    BYTE PTR [rcx+0x0],ch
  45d13a:	push   rax
  45d13b:	push   rcx
  45d13c:	jb     0x45d1a3
  45d13e:	jae    0x45d1b5
  45d140:	ins    BYTE PTR es:[rdi],dx
  45d141:	je     0x45d196
  45d143:	je     0x45d1a6
  45d145:	je     0x45d1bc
  45d147:	jae    0x45d149
  45d149:	add    BYTE PTR [rax],al
  45d14b:	add    BYTE PTR [rax+0x0],dh
  45d14e:	push   rax
  45d14f:	push   rcx
  45d150:	jae    0x45d1b7
  45d152:	jb     0x45d1ca
  45d154:	gs jb  0x45d1ad
  45d157:	gs jb  0x45d1cd
  45d15a:	imul   ebp,DWORD PTR [rdi+0x6e],0x71000000
  45d161:	add    BYTE PTR [rax+0x51],dl
  45d164:	jae    0x45d1cb
  45d166:	je     0x45d1ab
  45d168:	ins    BYTE PTR es:[rdi],dx
  45d169:	imul   esp,DWORD PTR [rbp+0x6e],0x636e4574
  45d170:	outs   dx,DWORD PTR ds:[rsi]
  45d171:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72000000
  45d179:	add    BYTE PTR [rax+0x51],dl
  45d17c:	jae    0x45d1e3
  45d17e:	je     0x45d1c5
  45d180:	jb     0x45d1f4
  45d182:	outs   dx,DWORD PTR ds:[rsi]
  45d183:	jb     0x45d1db
  45d185:	gs jb  0x45d1ea
  45d188:	outs   dx,DWORD PTR ds:[rsi]
  45d189:	jae    0x45d1f4
  45d18b:	je     0x45d206
  45d18d:	add    BYTE PTR [rax],al
  45d18f:	add    BYTE PTR [rax+rax*1+0x50],dh
  45d193:	push   rcx
  45d194:	jae    0x45d1fb
  45d196:	je     0x45d1e6
  45d198:	outs   dx,DWORD PTR ds:[rsi]
  45d199:	je     0x45d204
  45d19b:	movsxd esp,DWORD PTR [rbp+0x50]
  45d19e:	jb     0x45d20f
  45d1a0:	movsxd esp,DWORD PTR [rbp+0x73]
  45d1a3:	jae    0x45d214
  45d1a5:	jb     0x45d1a7
  45d1a7:	add    BYTE PTR [rax+rax*1+0x50],bh
  45d1ab:	push   rcx
  45d1ac:	jae    0x45d222
  45d1ae:	(bad)  
  45d1af:	je     0x45d226
  45d1b1:	jae    0x45d1b3
  45d1b3:	add    BYTE PTR [rsi+0x0],bh
  45d1b6:	push   rax
  45d1b7:	push   rcx
  45d1b8:	je     0x45d22c
  45d1ba:	(bad)  
  45d1bb:	outs   dx,BYTE PTR ds:[rsi]
  45d1bc:	jae    0x45d21f
  45d1be:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  45d1c2:	outs   dx,BYTE PTR ds:[rsi]
  45d1c3:	push   rbx
  45d1c4:	je     0x45d227
  45d1c6:	je     0x45d23d
  45d1c8:	jae    0x45d1ca
  45d1ca:	add    BYTE PTR [rax],al
  45d1cc:	(bad)  
  45d1cd:	add    BYTE PTR [rax+0x51],dl
  45d1d0:	jne    0x45d245
  45d1d2:	gs jb  0x45d1d5
  45d1d5:	add    BYTE PTR [rax],al
  45d1d7:	add    BYTE PTR [rbx+0x70706100],al
  45d1dd:	outs   dx,BYTE PTR gs:[rsi]
  45d1df:	rex.X imul ebp,DWORD PTR fs:[rsi+0x61],0x51507972
  45d1e8:	rex.RB js 0x45d25b
  45d1eb:	rex.X jne 0x45d254
  45d1ee:	data16 gs jb 0x45d1f2
  45d1f2:	add    BYTE PTR [rax],al
  45d1f4:	test   BYTE PTR [rax],al
  45d1f6:	(bad)  
  45d1f7:	jo     0x45d269
  45d1f9:	outs   dx,BYTE PTR gs:[rsi]
  45d1fb:	fs push rax
  45d1fd:	push   rcx
  45d1fe:	rex.RB js 0x45d271
  45d201:	rex.X jne 0x45d26a
  45d204:	data16 gs jb 0x45d208
  45d208:	test   DWORD PTR [rax],eax
  45d20a:	(bad)  
  45d20b:	jo     0x45d27d
  45d20d:	outs   dx,BYTE PTR gs:[rsi]
  45d20f:	fs push rax
  45d211:	push   rcx
  45d212:	rex.RB js 0x45d285
  45d215:	rex.X jne 0x45d27e
  45d218:	data16 gs jb 0x45d25f
  45d21c:	push   0xffffffff86007261
  45d221:	add    BYTE PTR [rcx+0x70],ah
  45d224:	jo     0x45d28b
  45d226:	outs   dx,BYTE PTR ds:[rsi]
  45d227:	fs push rax
  45d229:	push   rcx
  45d22a:	rex.RB js 0x45d29d
  45d22d:	rex.X jne 0x45d296
  45d230:	data16 gs jb 0x45d287
  45d234:	je     0x45d2a8
  45d236:	add    BYTE PTR [rax],al
  45d238:	xchg   DWORD PTR [rax],eax
  45d23a:	movsxd esi,DWORD PTR [rdx+0x65]
  45d23d:	(bad)  
  45d23e:	je     0x45d2a5
  45d240:	push   rax
  45d241:	push   rcx
  45d242:	rex.RB js 0x45d2b5
  45d245:	rex.X jne 0x45d2ae
  45d248:	data16 gs jb 0x45d24c
  45d24c:	mov    BYTE PTR [rax],al
  45d24e:	fs gs jae 0x45d2c6
  45d252:	jb     0x45d2c3
  45d254:	jns    0x45d2a6
  45d256:	push   rcx
  45d257:	rex.RB js 0x45d2ca
  45d25a:	rex.X jne 0x45d2c3
  45d25d:	data16 gs jb 0x45d261
  45d261:	add    BYTE PTR [rax],al
  45d263:	add    BYTE PTR [rcx+0x6c6e6500],cl
  45d269:	(bad)  
  45d26a:	jb     0x45d2d3
  45d26c:	gs push rax
  45d26e:	push   rcx
  45d26f:	rex.RB js 0x45d2e2
  45d272:	rex.X jne 0x45d2db
  45d275:	data16 gs jb 0x45d279
  45d279:	add    BYTE PTR [rax],al
  45d27b:	add    BYTE PTR [rdx+0x696e6900],cl
  45d281:	je     0x45d2d3
  45d283:	push   rcx
  45d284:	rex.RB js 0x45d2f7
  45d287:	rex.X jne 0x45d2f0
  45d28a:	data16 gs jb 0x45d28e
  45d28e:	add    BYTE PTR [rax],al
  45d290:	mov    es,WORD PTR [rax]
  45d292:	ins    BYTE PTR es:[rdi],dx
  45d293:	outs   dx,DWORD PTR ds:[rsi]
  45d294:	pop    rdi
  45d295:	gs js  0x45d308
  45d298:	outs   dx,DWORD PTR ds:[rsi]
  45d299:	jb     0x45d30f
  45d29b:	add    BYTE PTR [rdi+0x5f6f6c00],cl
  45d2a1:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  45d2a8:	cdq    
  45d2a9:	add    BYTE PTR [rdi+rbp*2+0x5f],ch
  45d2ad:	jne    0x45d31d
  45d2af:	ins    BYTE PTR es:[rdi],dx
  45d2b0:	imul   ebp,DWORD PTR [rsi+0x6b],0x70009b00
  45d2b7:	addr32 pop rdi
  45d2b9:	movsxd ebp,DWORD PTR [rax+0x61]
  45d2bc:	jb     0x45d31d
  45d2be:	je     0x45d32f
  45d2c0:	pop    rdi
  45d2c1:	outs   dx,BYTE PTR gs:[rsi]
  45d2c3:	movsxd ebp,DWORD PTR [rdi+0x64]
  45d2c6:	imul   ebp,DWORD PTR [rsi+0x67],0x9c000000
  45d2cd:	add    BYTE PTR [rax+0x67],dh
  45d2d0:	pop    rdi
  45d2d1:	outs   dx,BYTE PTR gs:[rsi]
  45d2d3:	movsxd ebp,DWORD PTR [rdi+0x64]
  45d2d6:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6f745f
  45d2dd:	movsxd ebp,DWORD PTR [rax+0x61]
  45d2e0:	jb     0x45d2e2
  45d2e2:	add    BYTE PTR [rax],al
  45d2e4:	lahf   
  45d2e5:	add    BYTE PTR [rax+0x67],dh
  45d2e8:	pop    rdi
  45d2e9:	jbe    0x45d34c
  45d2eb:	ins    BYTE PTR es:[rdi],dx
  45d2ec:	imul   esp,DWORD PTR [rdi+rbx*2+0x73],0x65767265
  45d2f4:	jb     0x45d355
  45d2f6:	outs   dx,BYTE PTR gs:[rsi]
  45d2f8:	movsxd ebp,DWORD PTR [rdi+0x64]
  45d2fb:	imul   ebp,DWORD PTR [rsi+0x67],0x64695f
  45d302:	add    BYTE PTR [rax],al
  45d304:	movabs ds:0x5066746e69727000,al
  45d30d:	push   rcx
  45d30e:	rex.RB js 0x45d381
  45d311:	rex.X jne 0x45d37a
  45d314:	data16 gs jb 0x45d318
  45d318:	movabs ds:0x5150746573657200,eax
  45d321:	rex.RB js 0x45d394
  45d324:	rex.X jne 0x45d38d
  45d327:	data16 gs jb 0x45d32b
  45d32b:	add    BYTE PTR [rax+rax*1+0x6d726574],ah
  45d332:	push   rax
  45d333:	push   rcx
  45d334:	rex.RB js 0x45d3a7
  45d337:	rex.X jne 0x45d3a0
  45d33a:	data16 gs jb 0x45d33e
  45d33e:	add    BYTE PTR [rax],al
  45d340:	adc    DWORD PTR [rax],eax
  45d342:	rex.B
  45d343:	fs movsxd esp,DWORD PTR fs:[r11+0x65]
  45d349:	jae    0x45d3be
  45d34b:	rex.B ins BYTE PTR es:[rdi],dx
  45d34d:	ins    BYTE PTR es:[rdi],dx
  45d34e:	outs   dx,DWORD PTR ds:[rsi]
  45d34f:	ja     0x45d3b6
  45d351:	movsxd esp,DWORD PTR fs:[r13+0x45]
  45d356:	js     0x45d358
  45d358:	(bad)  
  45d359:	add    BYTE PTR [rcx+0x64],al
  45d35c:	movsxd esp,DWORD PTR fs:[r13+0x0]
  45d361:	add    BYTE PTR [rbx],ah
  45d363:	add    DWORD PTR [rdi+0x65],eax
  45d366:	je     0x45d3a9
  45d368:	movsxd esp,DWORD PTR [rbp+0x0]
  45d36b:	add    BYTE PTR [rcx+rax*1],ah
  45d36e:	rex.RXB
  45d36f:	gs je  0x45d3b3
  45d372:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
  45d376:	outs   dx,WORD PTR ds:[rsi]
  45d378:	jb     0x45d3e7
  45d37a:	(bad)  
  45d37b:	je     0x45d3e6
  45d37d:	outs   dx,DWORD PTR ds:[rsi]
  45d37e:	outs   dx,BYTE PTR ds:[rsi]
  45d37f:	add    BYTE PTR [rsi],dh
  45d381:	add    DWORD PTR [rdi+0x65],eax
  45d384:	je     0x45d3d2
  45d386:	outs   dx,BYTE PTR gs:[rsi]
  45d388:	addr32 je 0x45d3f3
  45d38b:	push   rbx
  45d38c:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6547015a
  45d394:	je     0x45d3ea
  45d396:	outs   dx,DWORD PTR ds:[rsi]
  45d397:	imul   esp,DWORD PTR [rbp+0x6e],0x49
  45d39b:	outs   dx,BYTE PTR ds:[rsi]
  45d39c:	outs   dx,WORD PTR ds:[rsi]
  45d39e:	jb     0x45d40d
  45d3a0:	(bad)  
  45d3a1:	je     0x45d40c
  45d3a3:	outs   dx,DWORD PTR ds:[rsi]
  45d3a4:	outs   dx,BYTE PTR ds:[rsi]
  45d3a5:	add    BYTE PTR [rcx+rax*1+0x47],ah
  45d3a9:	gs je  0x45d401
  45d3ac:	jae    0x45d413
  45d3ae:	jb     0x45d3fe
  45d3b0:	(bad)  
  45d3b1:	ins    DWORD PTR es:[rdi],dx
  45d3b2:	add    BYTE PTR gs:[r8],al
  45d3b6:	jbe    0x45d3b9
  45d3b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d3ba:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  45d3c2:	movsxd ebp,DWORD PTR [r8+rax*1-0x3d]
  45d3c7:	add    dl,BYTE PTR [rbx+0x65]
  45d3ca:	je     0x45d420
  45d3cc:	outs   dx,DWORD PTR ds:[rsi]
  45d3cd:	imul   esp,DWORD PTR [rbp+0x6e],0x49
  45d3d1:	outs   dx,BYTE PTR ds:[rsi]
  45d3d2:	outs   dx,WORD PTR ds:[rsi]
  45d3d4:	jb     0x45d443
  45d3d6:	(bad)  
  45d3d7:	je     0x45d442
  45d3d9:	outs   dx,DWORD PTR ds:[rsi]
  45d3da:	outs   dx,BYTE PTR ds:[rsi]
  45d3db:	add    BYTE PTR [rbp+0x0],dl
  45d3de:	rex.XB ins BYTE PTR es:[rdi],dx
  45d3e0:	outs   dx,DWORD PTR ds:[rsi]
  45d3e1:	jae    0x45d448
  45d3e3:	rex.W (bad) 
  45d3e5:	outs   dx,BYTE PTR ds:[rsi]
  45d3e6:	fs ins BYTE PTR es:[rdi],dx
  45d3e8:	add    BYTE PTR gs:[rax+0x65724300],al
  45d3ef:	(bad)  
  45d3f0:	je     0x45d457
  45d3f2:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  45d3fa:	jns    0x45d43d
  45d3fc:	add    BYTE PTR [rax],al
  45d3fe:	lea    eax,[rax]
  45d400:	rex.XB jb 0x45d468
  45d403:	(bad)  
  45d404:	je     0x45d46b
  45d406:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4300a700
  45d40f:	jb     0x45d476
  45d411:	(bad)  
  45d412:	je     0x45d479
  45d414:	push   rax
  45d415:	imul   esi,DWORD PTR [rax+0x65],0xaa0000
  45d41c:	rex.XB jb 0x45d484
  45d41f:	(bad)  
  45d420:	je     0x45d487
  45d422:	push   rax
  45d423:	jb     0x45d494
  45d425:	movsxd esp,DWORD PTR [rbp+0x73]
  45d428:	jae    0x45d46b
  45d42a:	add    BYTE PTR [rax],al
  45d42c:	fadd   DWORD PTR [rax]
  45d42e:	rex.R
  45d42f:	gs ins BYTE PTR es:[rdi],dx
  45d431:	gs je  0x45d499
  45d434:	rex.XB jb 0x45d4a0
  45d437:	je     0x45d4a2
  45d439:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d43c:	push   rbx
  45d43d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d442:	outs   dx,BYTE PTR ds:[rsi]
  45d443:	add    bh,ah
  45d445:	add    BYTE PTR [rbp+riz*2+0x76],al
  45d449:	imul   esp,DWORD PTR [rbx+0x65],0x6f436f49
  45d450:	outs   dx,BYTE PTR ds:[rsi]
  45d451:	je     0x45d4c5
  45d453:	outs   dx,DWORD PTR ds:[rsi]
  45d454:	ins    BYTE PTR es:[rdi],dx
  45d455:	add    dl,dh
  45d457:	add    BYTE PTR [rbp+rsi*2+0x70],al
  45d45b:	ins    BYTE PTR es:[rdi],dx
  45d45c:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
  45d463:	outs   dx,BYTE PTR ds:[rsi]
  45d464:	fs ins BYTE PTR es:[rdi],dx
  45d466:	gs add al,bh
  45d469:	add    BYTE PTR [rbp+0x6e],al
  45d46c:	je     0x45d4d3
  45d46e:	jb     0x45d4b3
  45d470:	jb     0x45d4db
  45d472:	je     0x45d4dd
  45d474:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d477:	push   rbx
  45d478:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d47d:	outs   dx,BYTE PTR ds:[rsi]
  45d47e:	add    BYTE PTR [rax],al
  45d480:	imul   eax,DWORD PTR [rcx],0x6d726f46
  45d486:	(bad)  
  45d487:	je     0x45d4d6
  45d489:	gs jae 0x45d4ff
  45d48c:	(bad)  
  45d48d:	add    BYTE PTR gs:[r8d],al
  45d492:	je     0x45d495
  45d494:	rex.RXB
  45d495:	gs je  0x45d4d9
  45d498:	rex.XB push r8
  45d49a:	add    BYTE PTR [rax],al
  45d49c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  45d49d:	add    DWORD PTR [rdi+0x65],eax
  45d4a0:	je     0x45d4e5
  45d4a2:	outs   dx,DWORD PTR ds:[rsi]
  45d4a3:	outs   dx,BYTE PTR ds:[rsi]
  45d4a4:	jae    0x45d515
  45d4a6:	ins    BYTE PTR es:[rdi],dx
  45d4a7:	gs rex.XB push r8
  45d4aa:	add    BYTE PTR [rax],al
  45d4ac:	mov    ecx,0x74654701
  45d4b1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d4b3:	outs   dx,BYTE PTR ds:[rsi]
  45d4b4:	jae    0x45d525
  45d4b6:	ins    BYTE PTR es:[rdi],dx
  45d4b7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  45d4ba:	fs add BYTE PTR gs:[rax],al
  45d4be:	int    0x1
  45d4c0:	rex.RXB
  45d4c1:	gs je  0x45d507
  45d4c4:	jne    0x45d538
  45d4c6:	jb     0x45d52d
  45d4c8:	outs   dx,BYTE PTR ds:[rsi]
  45d4c9:	je     0x45d51b
  45d4cb:	jb     0x45d53c
  45d4cd:	movsxd esp,DWORD PTR [rbp+0x73]
  45d4d0:	jae    0x45d4d2
  45d4d2:	(bad)  
  45d4d3:	add    DWORD PTR [rdi+0x65],eax
  45d4d6:	je     0x45d51b
  45d4d8:	jne    0x45d54c
  45d4da:	jb     0x45d541
  45d4dc:	outs   dx,BYTE PTR ds:[rsi]
  45d4dd:	je     0x45d52f
  45d4df:	jb     0x45d550
  45d4e1:	movsxd esp,DWORD PTR [rbp+0x73]
  45d4e4:	jae    0x45d52f
  45d4e6:	fs add dl,dl
  45d4e9:	add    DWORD PTR [rdi+0x65],eax
  45d4ec:	je     0x45d531
  45d4ee:	jne    0x45d562
  45d4f0:	jb     0x45d557
  45d4f2:	outs   dx,BYTE PTR ds:[rsi]
  45d4f3:	je     0x45d549
  45d4f5:	push   0x64616572
  45d4fa:	rex.WB
  45d4fb:	add    BYTE PTR fs:[rax],al
  45d4fe:	hlt    
  45d4ff:	add    DWORD PTR [rdi+0x65],eax
  45d502:	je     0x45d54a
  45d504:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  45d50c:	(bad)  
  45d50d:	jne    0x45d583
  45d50f:	gs jae 0x45d553
  45d512:	add    BYTE PTR [rax],al
  45d514:	cmc    
  45d515:	add    DWORD PTR [rdi+0x65],eax
  45d518:	je     0x45d560
  45d51a:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  45d522:	(bad)  
  45d523:	jne    0x45d599
  45d525:	gs jae 0x45d56d
  45d528:	js     0x45d56b
  45d52a:	add    BYTE PTR [rax],al
  45d52c:	adc    BYTE PTR [rdx],al
  45d52e:	rex.RXB
  45d52f:	gs je  0x45d57e
  45d532:	(bad)  
  45d533:	jae    0x45d5a9
  45d535:	rex.RB jb 0x45d5aa
  45d538:	outs   dx,DWORD PTR ds:[rsi]
  45d539:	jb     0x45d53b
  45d53b:	add    BYTE PTR [rbx+0x2],dh
  45d53e:	rex.RXB
  45d53f:	gs je  0x45d595
  45d542:	je     0x45d5a5
  45d544:	jb     0x45d5ba
  45d546:	jne    0x45d5b8
  45d548:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d54a:	outs   dx,WORD PTR ds:[rsi]
  45d54c:	add    BYTE PTR [r13+0x2],sil
  45d550:	rex.RXB
  45d551:	gs je  0x45d5a7
  45d554:	je     0x45d5ba
  45d556:	rex.W (bad) 
  45d558:	outs   dx,BYTE PTR ds:[rsi]
  45d559:	fs ins BYTE PTR es:[rdi],dx
  45d55b:	add    BYTE PTR gs:[rax],al
  45d55e:	mov    al,BYTE PTR [rdx]
  45d560:	rex.RXB
  45d561:	gs je  0x45d5b7
  45d564:	jns    0x45d5d9
  45d566:	je     0x45d5cd
  45d568:	ins    DWORD PTR es:[rdi],dx
  45d569:	push   rsp
  45d56a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  45d571:	ins    BYTE PTR es:[rdi],dx
  45d572:	gs push rsp
  45d574:	imul   ebp,DWORD PTR [rbp+0x65],0x47029600
  45d57b:	gs je  0x45d5d2
  45d57e:	gs ins DWORD PTR es:[rdi],dx
  45d580:	jo     0x45d5d2
  45d582:	(bad)  
  45d583:	je     0x45d5ed
  45d585:	add    BYTE PTR [r8],al
  45d588:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  45d589:	add    al,BYTE PTR [rdi+0x65]
  45d58c:	je     0x45d5e2
  45d58e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  45d595:	je     0x45d597
  45d597:	add    cl,bh
  45d599:	add    cl,BYTE PTR [rcx+0x6e]
  45d59c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  45d5a4:	rex.XB jb 0x45d610
  45d5a7:	je     0x45d612
  45d5a9:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d5ac:	push   rbx
  45d5ad:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d5b2:	outs   dx,BYTE PTR ds:[rsi]
  45d5b3:	add    BYTE PTR [rbx+0x3],cl
  45d5b6:	rex.WR
  45d5b7:	gs (bad) 
  45d5b9:	jbe    0x45d620
  45d5bb:	rex.XB jb 0x45d627
  45d5be:	je     0x45d629
  45d5c0:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d5c3:	push   rbx
  45d5c4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d5c9:	outs   dx,BYTE PTR ds:[rsi]
  45d5ca:	add    BYTE PTR [rax],al
  45d5cc:	push   rdi
  45d5cd:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  45d5d1:	(bad)  
  45d5d2:	ins    BYTE PTR es:[rdi],dx
  45d5d3:	rex.B ins BYTE PTR es:[rdi],dx
  45d5d5:	ins    BYTE PTR es:[rdi],dx
  45d5d6:	outs   dx,DWORD PTR ds:[rsi]
  45d5d7:	movsxd eax,DWORD PTR [rax]
  45d5d9:	add    BYTE PTR [rbx+0x3],bl
  45d5dc:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45d5de:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d5e1:	rex.RX jb 0x45d649
  45d5e4:	add    BYTE PTR gs:[rdx+0x3],dh
  45d5e8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45d5ea:	jbe    0x45d651
  45d5ec:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x7a004178
  45d5f5:	add    ecx,DWORD PTR [rbp+0x75]
  45d5f8:	ins    BYTE PTR es:[rdi],dx
  45d5f9:	je     0x45d664
  45d5fb:	rex.X jns 0x45d672
  45d5fe:	gs push rsp
  45d600:	outs   dx,DWORD PTR ds:[rsi]
  45d601:	push   rdi
  45d602:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  45d60a:	mov    ebx,0x65755103
  45d60f:	jb     0x45d68a
  45d611:	push   rax
  45d612:	gs jb  0x45d67b
  45d615:	outs   dx,DWORD PTR ds:[rsi]
  45d616:	jb     0x45d685
  45d618:	(bad)  
  45d619:	outs   dx,BYTE PTR ds:[rsi]
  45d61a:	movsxd esp,DWORD PTR [rbp+0x43]
  45d61d:	outs   dx,DWORD PTR ds:[rsi]
  45d61e:	jne    0x45d68e
  45d620:	je     0x45d687
  45d622:	jb     0x45d624
  45d624:	mov    esp,0x65755103
  45d629:	jb     0x45d6a4
  45d62b:	push   rax
  45d62c:	gs jb  0x45d695
  45d62f:	outs   dx,DWORD PTR ds:[rsi]
  45d630:	jb     0x45d69f
  45d632:	(bad)  
  45d633:	outs   dx,BYTE PTR ds:[rsi]
  45d634:	movsxd esp,DWORD PTR [rbp+0x46]
  45d637:	jb     0x45d69e
  45d639:	jno    0x45d6b0
  45d63b:	outs   dx,BYTE PTR gs:[rsi]
  45d63d:	movsxd edi,DWORD PTR [rcx+0x0]
  45d640:	(bad)  
  45d641:	add    edx,DWORD PTR [rdx+0x65]
  45d644:	(bad)  
  45d645:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x5203ed00
  45d64f:	gs ins DWORD PTR es:[rdi],dx
  45d651:	outs   dx,DWORD PTR ds:[rsi]
  45d652:	jbe    0x45d6b9
  45d654:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  45d65c:	jns    0x45d69f
  45d65e:	add    BYTE PTR [rax],al
  45d660:	add    DWORD PTR [rdx+rdx*2],eax
  45d663:	je     0x45d6d1
  45d665:	rex.B
  45d666:	fs fs rex.RX jne 0x45d6d9
  45d66b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  45d66f:	outs   dx,BYTE PTR ds:[rsi]
  45d670:	push   rsp
  45d671:	(bad)  
  45d672:	(bad)  
  45d673:	ins    BYTE PTR es:[rdi],dx
  45d674:	add    BYTE PTR gs:[rdx],al
  45d677:	add    al,0x52
  45d679:	je     0x45d6e7
  45d67b:	rex.XB (bad) 
  45d67d:	jo     0x45d6f3
  45d67f:	jne    0x45d6f3
  45d681:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45d684:	outs   dx,BYTE PTR ds:[rsi]
  45d685:	je     0x45d6ec
  45d687:	js     0x45d6fd
  45d689:	add    BYTE PTR [rcx],cl
  45d68b:	add    al,0x52
  45d68d:	je     0x45d6fb
  45d68f:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45d691:	outs   dx,DWORD PTR ds:[rsi]
  45d692:	imul   esi,DWORD PTR [rbp+0x70],0x46
  45d696:	jne    0x45d706
  45d698:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  45d69c:	outs   dx,BYTE PTR ds:[rsi]
  45d69d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45d69f:	je     0x45d713
  45d6a1:	jns    0x45d6a3
  45d6a3:	add    BYTE PTR [rax],dl
  45d6a5:	add    al,0x52
  45d6a7:	je     0x45d715
  45d6a9:	push   rsi
  45d6aa:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  45d6b1:	outs   dx,BYTE PTR ds:[rsi]
  45d6b2:	ja     0x45d71d
  45d6b4:	outs   dx,BYTE PTR ds:[rsi]
  45d6b5:	add    BYTE PTR fs:[rax],al
  45d6b8:	(bad)  
  45d6b9:	add    al,0x53
  45d6bb:	gs je  0x45d701
  45d6be:	outs   dx,DWORD PTR ds:[rsi]
  45d6bf:	outs   dx,BYTE PTR ds:[rsi]
  45d6c0:	jae    0x45d731
  45d6c2:	ins    BYTE PTR es:[rdi],dx
  45d6c3:	gs rex.XB je 0x45d739
  45d6c7:	ins    BYTE PTR es:[rdi],dx
  45d6c8:	rex.W (bad) 
  45d6ca:	outs   dx,BYTE PTR ds:[rsi]
  45d6cb:	fs ins BYTE PTR es:[rdi],dx
  45d6cd:	gs jb  0x45d6d0
  45d6d0:	(bad)  
  45d6d1:	add    al,0x53
  45d6d3:	gs je  0x45d719
  45d6d6:	outs   dx,DWORD PTR ds:[rsi]
  45d6d7:	outs   dx,BYTE PTR ds:[rsi]
  45d6d8:	jae    0x45d749
  45d6da:	ins    BYTE PTR es:[rdi],dx
  45d6db:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  45d6de:	fs add BYTE PTR gs:[rax],al
  45d6e2:	push   rax
  45d6e3:	add    al,0x53
  45d6e5:	gs je  0x45d72d
  45d6e8:	outs   dx,BYTE PTR ds:[rsi]
  45d6e9:	jbe    0x45d754
  45d6eb:	jb     0x45d75c
  45d6ed:	outs   dx,BYTE PTR ds:[rsi]
  45d6ee:	ins    DWORD PTR es:[rdi],dx
  45d6ef:	outs   dx,BYTE PTR gs:[rsi]
  45d6f1:	je     0x45d749
  45d6f3:	(bad)  
  45d6f4:	jb     0x45d75f
  45d6f6:	(bad)  
  45d6f7:	(bad)  
  45d6f8:	ins    BYTE PTR es:[rdi],dx
  45d6f9:	add    BYTE PTR gs:[r15+0x74655304],bl
  45d701:	push   rbp
  45d702:	outs   dx,BYTE PTR ds:[rsi]
  45d703:	push   0x6c646e61
  45d708:	gs fs rex.RB js 0x45d770
  45d70d:	gs jo  0x45d784
  45d710:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  45d717:	gs jb  0x45d71a
  45d71a:	lods   al,BYTE PTR ds:[rsi]
  45d71b:	add    al,0x53
  45d71d:	ins    BYTE PTR es:[rdi],dx
  45d71e:	gs gs jo 0x45d722
  45d722:	scas   eax,DWORD PTR es:[rdi]
  45d723:	add    al,0x53
  45d725:	ins    BYTE PTR es:[rdi],dx
  45d726:	gs gs jo 0x45d76f
  45d72a:	js     0x45d72c
  45d72c:	mov    edx,0x72655404
  45d731:	ins    DWORD PTR es:[rdi],dx
  45d732:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  45d739:	outs   dx,DWORD PTR ds:[rsi]
  45d73a:	movsxd esp,DWORD PTR [rbp+0x73]
  45d73d:	jae    0x45d73f
  45d73f:	add    cl,al
  45d741:	add    al,0x54
  45d743:	ins    BYTE PTR es:[rdi],dx
  45d744:	jae    0x45d78d
  45d746:	gs je  0x45d79f
  45d749:	(bad)  
  45d74a:	ins    BYTE PTR es:[rdi],dx
  45d74b:	jne    0x45d7b2
  45d74d:	add    dh,cl
  45d74f:	add    al,0x55
  45d751:	outs   dx,BYTE PTR ds:[rsi]
  45d752:	push   0x6c646e61
  45d757:	gs fs rex.RB js 0x45d7bf
  45d75c:	gs jo  0x45d7d3
  45d75f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  45d766:	gs jb  0x45d769
  45d769:	add    ah,ch
  45d76b:	add    al,0x56
  45d76d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  45d774:	jb     0x45d7e5
  45d776:	je     0x45d7dd
  45d778:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  45d77c:	out    dx,al
  45d77d:	add    al,0x56
  45d77f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  45d786:	jne    0x45d7ed
  45d788:	jb     0x45d803
  45d78a:	add    BYTE PTR [rax],al
  45d78c:	test   BYTE PTR [rdi+rdx*2],0x61
  45d790:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  45d798:	ins    BYTE PTR es:[edi],dx
  45d79a:	gs rex.WRXB (bad) 
  45d79d:	push   0x65
  45d79f:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  45d7a3:	add    eax,0x65646957
  45d7a8:	rex.XB push 0x6f547261
  45d7ae:	rex.WRB jne 0x45d81d
  45d7b1:	je     0x45d81c
  45d7b3:	rex.X jns 0x45d82a
  45d7b6:	add    BYTE PTR gs:[rdi],dh
  45d7b9:	add    BYTE PTR [rdi+0x5f],bl
  45d7bc:	rex.XB pop r15
  45d7be:	jae    0x45d830
  45d7c0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  45d7c4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  45d7cb:	ins    BYTE PTR es:[rdi],dx
  45d7cc:	gs jb  0x45d7cf
  45d7cf:	add    BYTE PTR [rsi+0x0],al
  45d7d2:	pop    rdi
  45d7d3:	pop    rdi
  45d7d4:	(bad)  
  45d7d5:	jb     0x45d83e
  45d7d7:	jbe    0x45d7d9
  45d7d9:	add    BYTE PTR [rsi+0x0],cl
  45d7dc:	pop    rdi
  45d7dd:	pop    rdi
  45d7de:	fs ins BYTE PTR es:[rdi],dx
  45d7e0:	ins    BYTE PTR es:[rdi],dx
  45d7e1:	outs   dx,DWORD PTR ds:[rsi]
  45d7e2:	outs   dx,BYTE PTR ds:[rsi]
  45d7e3:	gs js  0x45d84f
  45d7e6:	je     0x45d7e8
  45d7e8:	push   rcx
  45d7e9:	add    BYTE PTR [rdi+0x5f],bl
  45d7ec:	addr32 gs je 0x45d85d
  45d7f0:	(bad)  
  45d7f1:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  45d7f8:	push   rdx
  45d7f9:	add    BYTE PTR [rdi+0x5f],bl
  45d7fc:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  45d803:	add    BYTE PTR [rbx+0x0],dl
  45d806:	pop    rdi
  45d807:	pop    rdi
  45d808:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  45d80f:	movsxd eax,DWORD PTR [rax]
  45d811:	add    BYTE PTR [rdx+0x0],bl
  45d814:	pop    rdi
  45d815:	pop    rdi
  45d816:	ins    BYTE PTR es:[rdi],dx
  45d817:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45d81a:	jbe    0x45d87b
  45d81c:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  45d823:	add    BYTE PTR [rdi+0x5f],bl
  45d826:	jae    0x45d88d
  45d828:	je     0x45d889
  45d82a:	(bad)  
  45d82b:	jo     0x45d89d
  45d82d:	pop    rdi
  45d82e:	je     0x45d8a9
  45d830:	jo     0x45d897
  45d832:	add    BYTE PTR [rax],al
  45d834:	(bad)  
  45d835:	add    BYTE PTR [rdi+0x5f],bl
  45d838:	jae    0x45d89f
  45d83a:	je     0x45d8b1
  45d83c:	jae    0x45d8a3
  45d83e:	jb     0x45d8ad
  45d840:	(bad)  
  45d841:	je     0x45d8ab
  45d843:	gs jb  0x45d8b8
  45d846:	add    BYTE PTR [rax],al
  45d848:	jno    0x45d84a
  45d84a:	pop    rdi
  45d84b:	(bad)  
  45d84c:	movsxd ebp,DWORD PTR [rbp+0x64]
  45d84f:	ins    BYTE PTR es:[rdi],dx
  45d850:	outs   dx,BYTE PTR ds:[rsi]
  45d851:	add    BYTE PTR [rax+0x0],bh
  45d854:	pop    rdi
  45d855:	(bad)  
  45d856:	ins    DWORD PTR es:[rdi],dx
  45d857:	jae    0x45d8c0
  45d859:	pop    rdi
  45d85a:	gs js  0x45d8c6
  45d85d:	je     0x45d85f
  45d85f:	add    BYTE PTR [rdx+0x65635f00],cl
  45d865:	js     0x45d8d0
  45d867:	je     0x45d869
  45d869:	add    BYTE PTR [rdx+0x72655f00],bh
  45d86f:	jb     0x45d8df
  45d871:	outs   dx,DWORD PTR ds:[rsi]
  45d872:	add    BYTE PTR [rax],al
  45d874:	fiadd  DWORD PTR [rax]
  45d876:	pop    rdi
  45d877:	ins    WORD PTR es:[rdi],dx
  45d879:	outs   dx,DWORD PTR ds:[rsi]
  45d87a:	fs add BYTE PTR gs:[rax],al
  45d87e:	call   0x73ac3783
  45d883:	je     0x45d8e6
  45d885:	je     0x45d8bd
  45d887:	xor    al,0x0
  45d889:	add    BYTE PTR [rdx],bl
  45d88b:	add    DWORD PTR [rdi+0x69],ebx
  45d88e:	outs   dx,BYTE PTR ds:[rsi]
  45d88f:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7f006d72
  45d897:	add    DWORD PTR [rdi+0x6c],ebx
  45d89a:	outs   dx,DWORD PTR ds:[rsi]
  45d89b:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d89e:	je     0x45d909
  45d8a0:	ins    DWORD PTR es:[rdi],dx
  45d8a1:	gs ss xor al,0x0
  45d8a5:	add    BYTE PTR [rax+0x6f6c5f01],al
  45d8ab:	movsxd ebp,DWORD PTR [rbx+0x0]
  45d8ae:	and    eax,0x6e6f5f02
  45d8b3:	gs js  0x45d91f
  45d8b6:	je     0x45d8b8
  45d8b8:	sub    al,BYTE PTR [rdx]
  45d8ba:	pop    rdi
  45d8bb:	jo     0x45d920
  45d8bd:	ins    BYTE PTR es:[rdi],dx
  45d8be:	outs   dx,DWORD PTR ds:[rsi]
  45d8bf:	jae    0x45d926
  45d8c1:	add    BYTE PTR [rsi],ch
  45d8c3:	add    bl,BYTE PTR [rdi+0x70]
  45d8c6:	outs   dx,DWORD PTR ds:[rsi]
  45d8c7:	jo     0x45d92e
  45d8c9:	outs   dx,BYTE PTR ds:[rsi]
  45d8ca:	add    BYTE PTR [rax],al
  45d8cc:	xor    eax,0x75705f02
  45d8d1:	je     0x45d938
  45d8d3:	outs   dx,BYTE PTR ds:[rsi]
  45d8d4:	jbe    0x45d8d6
  45d8d6:	push   rdx
  45d8d7:	add    bl,BYTE PTR [rdi+0x73]
  45d8da:	gs je  0x45d947
  45d8dd:	ins    DWORD PTR es:[rdi],dx
  45d8de:	jo     0x45d8e0
  45d8e0:	scas   eax,DWORD PTR es:[rdi]
  45d8e1:	add    bl,BYTE PTR [rdi+0x74]
  45d8e4:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  45d8eb:	add    bl,BYTE PTR [rdi+0x75]
  45d8ee:	outs   dx,BYTE PTR ds:[rsi]
  45d8ef:	ins    BYTE PTR es:[rdi],dx
  45d8f0:	outs   dx,DWORD PTR ds:[rsi]
  45d8f1:	movsxd ebp,DWORD PTR [rbx+0x0]
  45d8f4:	pop    rax
  45d8f5:	add    ebx,DWORD PTR [rdi+0x77]
  45d8f8:	jb     0x45d963
  45d8fa:	je     0x45d961
  45d8fc:	add    BYTE PTR [rax],al
  45d8fe:	jg     0x45d903
  45d900:	(bad)  
  45d901:	(bad)  
  45d902:	outs   dx,DWORD PTR ds:[rsi]
  45d903:	jb     0x45d979
  45d905:	add    BYTE PTR [rbx+0x63736103],al
  45d90b:	je     0x45d976
  45d90d:	ins    DWORD PTR es:[rdi],dx
  45d90e:	add    BYTE PTR gs:[rbx+rax*1+0x696f7461],cl
  45d916:	add    BYTE PTR [rax],al
  45d918:	nop
  45d919:	add    esp,DWORD PTR [rbx+0x61]
  45d91c:	ins    BYTE PTR es:[rdi],dx
  45d91d:	ins    BYTE PTR es:[rdi],dx
  45d91e:	outs   dx,DWORD PTR ds:[rsi]
  45d91f:	movsxd eax,DWORD PTR [rax]
  45d921:	add    BYTE PTR [rbx+0x656c6303],dl
  45d927:	(bad)  
  45d928:	jb     0x45d98f
  45d92a:	jb     0x45d99e
  45d92c:	add    BYTE PTR [rax],al
  45d92e:	popf   
  45d92f:	add    esp,DWORD PTR [rbp+0x78]
  45d932:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x636603a1
  45d93a:	ins    BYTE PTR es:[rdi],dx
  45d93b:	outs   dx,DWORD PTR ds:[rsi]
  45d93c:	jae    0x45d9a3
  45d93e:	add    BYTE PTR [rax],al
  45d940:	movabs ds:0xa30000666f656603,al
  45d949:	add    esp,DWORD PTR [rsi+0x65]
  45d94c:	jb     0x45d9c0
  45d94e:	outs   dx,DWORD PTR ds:[rsi]
  45d94f:	jb     0x45d951
  45d951:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  45d958:	jae    0x45d9c2
  45d95a:	add    BYTE PTR [rax],al
  45d95c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  45d95d:	add    esp,DWORD PTR [rsi+0x67]
  45d960:	gs je  0x45d9d6
  45d963:	add    BYTE PTR [rsi+0x706f6603],ch
  45d969:	outs   dx,BYTE PTR gs:[rsi]
  45d96b:	add    BYTE PTR [rax+0x72706603],dh
  45d971:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  45d978:	data16 jo 0x45d9f0
  45d97b:	je     0x45d9e0
  45d97d:	add    BYTE PTR [rbx+0x75706603],dh
  45d983:	je     0x45d9f8
  45d985:	add    BYTE PTR [rsi+0x65726603],dh
  45d98b:	(bad)  
  45d98c:	add    BYTE PTR fs:[rdi+0x65726603],dh
  45d993:	add    BYTE PTR gs:[rax],al
  45d996:	ret    0x6603
  45d999:	ja     0x45da0d
  45d99b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c500
  45d9a3:	gs je  0x45da09
  45d9a6:	add    BYTE PTR [rax],al
  45d9a8:	mov    DWORD PTR [rbx],0x65746567
  45d9ae:	outs   dx,BYTE PTR ds:[rsi]
  45d9af:	jbe    0x45d9b1
  45d9b1:	add    bh,cl
  45d9b3:	add    ebp,DWORD PTR [rcx+0x73]
  45d9b6:	(bad)  
  45d9b7:	ins    BYTE PTR es:[rdi],dx
  45d9b8:	jo     0x45da22
  45d9ba:	(bad)  
  45d9bb:	add    ah,dl
  45d9bd:	add    ebp,DWORD PTR [rcx+0x73]
  45d9c0:	ins    BYTE PTR es:[rdi],dx
  45d9c1:	outs   dx,DWORD PTR ds:[rsi]
  45d9c2:	ja     0x45da29
  45d9c4:	jb     0x45d9c6
  45d9c6:	xlat   BYTE PTR ds:[rbx]
  45d9c7:	add    ebp,DWORD PTR [rcx+0x73]
  45d9ca:	jae    0x45da3c
  45d9cc:	(bad)  
  45d9cd:	movsxd esp,DWORD PTR [rbp+0x0]
  45d9d0:	fadd   DWORD PTR [rbx]
  45d9d2:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  45d9d9:	add    dl,ch
  45d9db:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  45d9df:	(bad)  
  45d9e0:	ins    BYTE PTR es:[rdi],dx
  45d9e1:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  45d9e5:	jbe    0x45d9e7
  45d9e7:	add    al,dh
  45d9e9:	add    ebp,DWORD PTR [rbp+0x61]
  45d9ec:	ins    BYTE PTR es:[rdi],dx
  45d9ed:	ins    BYTE PTR es:[rdi],dx
  45d9ee:	outs   dx,DWORD PTR ds:[rsi]
  45d9ef:	movsxd eax,DWORD PTR [rax]
  45d9f1:	add    bh,dh
  45d9f3:	add    ebp,DWORD PTR [rbp+0x65]
  45d9f6:	ins    DWORD PTR es:[rdi],dx
  45d9f7:	movsxd ebp,DWORD PTR [rbp+0x70]
  45d9fa:	add    BYTE PTR [rax],al
  45d9fc:	clc    
  45d9fd:	add    ebp,DWORD PTR [rbp+0x65]
  45da00:	ins    DWORD PTR es:[rdi],dx
  45da01:	movsxd esi,DWORD PTR [rax+0x79]
  45da04:	add    BYTE PTR [rax],al
  45da06:	stc    
  45da07:	add    ebp,DWORD PTR [rbp+0x65]
  45da0a:	ins    DWORD PTR es:[rdi],dx
  45da0b:	ins    DWORD PTR es:[rdi],dx
  45da0c:	outs   dx,DWORD PTR ds:[rsi]
  45da0d:	jbe    0x45da74
  45da0f:	add    dl,bh
  45da11:	add    ebp,DWORD PTR [rbp+0x65]
  45da14:	ins    DWORD PTR es:[rdi],dx
  45da15:	jae    0x45da7c
  45da17:	je     0x45da19
  45da19:	add    BYTE PTR [rbx],al
  45da1b:	add    al,0x70
  45da1d:	jne    0x45da93
  45da1f:	movsxd eax,DWORD PTR [rax]
  45da21:	add    BYTE PTR [rsp+rax*1],al
  45da24:	jo     0x45da9b
  45da26:	je     0x45da8b
  45da28:	push   0x5007261
  45da2d:	add    al,0x70
  45da2f:	jne    0x45daa5
  45da31:	jae    0x45da33
  45da33:	add    BYTE PTR [rsp+rax*1],cl
  45da36:	jb     0x45da9d
  45da38:	(bad)  
  45da39:	ins    BYTE PTR es:[rdi],dx
  45da3a:	ins    BYTE PTR es:[rdi],dx
  45da3b:	outs   dx,DWORD PTR ds:[rsi]
  45da3c:	movsxd eax,DWORD PTR [rax]
  45da3e:	or     eax,0x6d657204
  45da43:	outs   dx,DWORD PTR ds:[rsi]
  45da44:	jbe    0x45daab
  45da46:	add    BYTE PTR [rax],al
  45da48:	adc    al,0x4
  45da4a:	jae    0x45dab1
  45da4c:	je     0x45daba
  45da4e:	outs   dx,DWORD PTR ds:[rsi]
  45da4f:	movsxd esp,DWORD PTR [rcx+0x6c]
  45da52:	add    BYTE PTR gs:[rip+0x74657304],dl        # 0x74ab4d5d
  45da59:	jbe    0x45dabd
  45da5b:	jne    0x45dac3
  45da5d:	add    BYTE PTR [rsi],dl
  45da5f:	add    al,0x73
  45da61:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  45da68:	sbb    eax,DWORD PTR [rbx+rsi*2]
  45da6b:	jo     0x45dadf
  45da6d:	imul   ebp,DWORD PTR [rsi+0x74],0x4210066
  45da74:	jae    0x45daea
  45da76:	jb     0x45dadb
  45da78:	(bad)  
  45da79:	je     0x45da7b
  45da7b:	add    BYTE PTR [rbx],ah
  45da7d:	add    al,0x73
  45da7f:	je     0x45daf3
  45da81:	movsxd ebp,DWORD PTR [rax+0x72]
  45da84:	add    BYTE PTR [rax],al
  45da86:	and    al,0x4
  45da88:	jae    0x45dafe
  45da8a:	jb     0x45daef
  45da8c:	ins    DWORD PTR es:[rdi],dx
  45da8d:	jo     0x45da8f
  45da8f:	add    BYTE PTR [rsi],ah
  45da91:	add    al,0x73
  45da93:	je     0x45db07
  45da95:	movsxd esi,DWORD PTR [rax+0x79]
  45da98:	add    BYTE PTR [rax],al
  45da9a:	sub    BYTE PTR [rbx+rsi*2],al
  45da9d:	je     0x45db11
  45da9f:	movsxd esi,DWORD PTR [rbx+0x70]
  45daa2:	outs   dx,BYTE PTR ds:[rsi]
  45daa3:	add    BYTE PTR [rcx],ch
  45daa5:	add    al,0x73
  45daa7:	je     0x45db1b
  45daa9:	gs jb  0x45db1e
  45daac:	outs   dx,DWORD PTR ds:[rsi]
  45daad:	jb     0x45daaf
  45daaf:	add    BYTE PTR [rbx],ch
  45dab1:	add    al,0x73
  45dab3:	je     0x45db27
  45dab5:	ins    BYTE PTR es:[rdi],dx
  45dab6:	outs   dx,BYTE PTR gs:[rsi]
  45dab8:	add    BYTE PTR [rax],al
  45daba:	cs add al,0x73
  45dabd:	je     0x45db31
  45dabf:	outs   dx,BYTE PTR ds:[rsi]
  45dac0:	movsxd ebp,DWORD PTR [rbp+0x70]
  45dac3:	add    BYTE PTR [rdi],ch
  45dac5:	add    al,0x73
  45dac7:	je     0x45db3b
  45dac9:	outs   dx,BYTE PTR ds:[rsi]
  45daca:	movsxd esi,DWORD PTR [rax+0x79]
  45dacd:	add    BYTE PTR [rdx],dh
  45dacf:	add    al,0x73
  45dad1:	je     0x45db45
  45dad3:	jb     0x45db38
  45dad5:	push   0x4330072
  45dada:	jae    0x45db50
  45dadc:	jb     0x45db51
  45dade:	jo     0x45db4e
  45dae0:	add    BYTE PTR [rax],al
  45dae2:	xor    al,0x4
  45dae4:	jae    0x45db5a
  45dae6:	jb     0x45db5b
  45dae8:	je     0x45db5c
  45daea:	add    BYTE PTR [rax],al
  45daec:	cmp    BYTE PTR [rbx+rsi*2],al
  45daef:	je     0x45db63
  45daf1:	je     0x45db62
  45daf3:	ins    BYTE PTR es:[rdi],dx
  45daf4:	add    BYTE PTR [rax],al
  45daf6:	cmp    DWORD PTR [rbx+rsi*2],eax
  45daf9:	je     0x45db6d
  45dafb:	je     0x45db6c
  45dafd:	jne    0x45db6b
  45daff:	add    BYTE PTR [rax+0x4],al
  45db02:	jae    0x45db7d
  45db04:	jae    0x45db7a
  45db06:	gs ins DWORD PTR es:[rdi],dx
  45db08:	add    BYTE PTR [rax],al
  45db0a:	rex.W add al,0x74
  45db0d:	outs   dx,DWORD PTR ds:[rsi]
  45db0e:	ins    BYTE PTR es:[rdi],dx
  45db0f:	outs   dx,DWORD PTR ds:[rsi]
  45db10:	ja     0x45db77
  45db12:	jb     0x45db14
  45db14:	rex.WB add al,0x74
  45db17:	outs   dx,DWORD PTR ds:[rsi]
  45db18:	jne    0x45db8a
  45db1a:	jo     0x45db81
  45db1c:	jb     0x45db1e
  45db1e:	rex.WRX add al,0x76
  45db21:	data16 jo 0x45db96
  45db24:	imul   ebp,DWORD PTR [rsi+0x74],0x89000066
  45db2b:	add    al,0x5f
  45db2d:	jae    0x45dba3
  45db2f:	(bad)  
  45db30:	je     0x45db68
  45db32:	xor    al,0x0
  45db34:	scas   eax,DWORD PTR es:[rdi]
  45db35:	add    al,0x5f
  45db37:	jne    0x45dba7
  45db39:	ins    BYTE PTR es:[rdi],dx
  45db3a:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04be00
  45db41:	jae    0x45dbb7
  45db43:	jb     0x45dba9
  45db45:	jne    0x45dbb7
  45db47:	add    bl,dl
  45db49:	add    al,0x5f
  45db4b:	outs   dx,DWORD PTR ds:[rsi]
  45db4c:	jo     0x45dbb3
  45db4e:	outs   dx,BYTE PTR ds:[rsi]
  45db4f:	add    dh,bl
  45db51:	add    al,0x5f
  45db53:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  45db5a:	loope  0x45db60
  45db5c:	pop    rdi
  45db5d:	addr32 gs je 0x45dbd1
  45db61:	imul   esp,DWORD PTR [rax+rax*1-0x1e],0x65675f04
  45db69:	je     0x45dbce
  45db6b:	ja     0x45dbd1
  45db6d:	add    al,ch
  45db6f:	add    al,0x5f
  45db71:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  45db78:	in     al,dx
  45db79:	add    al,0x5f
  45db7b:	outs   dx,WORD PTR fs:[rsi]
  45db7e:	jo     0x45dbe5
  45db80:	outs   dx,BYTE PTR ds:[rsi]
  45db81:	add    bh,bh
  45db83:	add    al,0x5f
  45db85:	movsxd ebp,DWORD PTR [rax+0x64]
  45db88:	imul   esi,DWORD PTR [rdx+0x0],0x5f050000
  45db8f:	(bad)  
  45db90:	movsxd esp,DWORD PTR [rbx+0x65]
  45db93:	jae    0x45dc08
  45db95:	add    BYTE PTR [rax],al
  45db97:	add    BYTE PTR [rax],al
  45db99:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dba0
  45dba0:	add    al,al
  45dba2:	add    eax,0x5c00000
  45dba7:	add    BYTE PTR [rax],al
  45dba9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dbb0
  45dbb0:	add    al,al
  45dbb2:	add    eax,0x5c00000
  45dbb7:	add    BYTE PTR [rax],al
  45dbb9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dbc0
  45dbc0:	add    al,al
  45dbc2:	add    eax,0x5c00000
  45dbc7:	add    BYTE PTR [rax],al
  45dbc9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dbd0
  45dbd0:	add    al,al
  45dbd2:	add    eax,0x5c00000
  45dbd7:	add    BYTE PTR [rax],al
  45dbd9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dbe0
  45dbe0:	add    al,al
  45dbe2:	add    eax,0x5c00000
  45dbe7:	add    BYTE PTR [rax],al
  45dbe9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dbf0
  45dbf0:	add    al,al
  45dbf2:	add    eax,0x5c00000
  45dbf7:	add    BYTE PTR [rax],al
  45dbf9:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc00
  45dc00:	add    al,al
  45dc02:	add    eax,0x5c00000
  45dc07:	add    BYTE PTR [rax],al
  45dc09:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc10
  45dc10:	add    al,al
  45dc12:	add    eax,0x5c00000
  45dc17:	add    BYTE PTR [rax],al
  45dc19:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc20
  45dc20:	add    al,al
  45dc22:	add    eax,0x5c00000
  45dc27:	add    BYTE PTR [rax],al
  45dc29:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc30
  45dc30:	add    al,al
  45dc32:	add    eax,0x5c00000
  45dc37:	add    BYTE PTR [rax],al
  45dc39:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc40
  45dc40:	add    al,al
  45dc42:	add    eax,0x5c00000
  45dc47:	add    BYTE PTR [rax],al
  45dc49:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc50
  45dc50:	add    al,al
  45dc52:	add    eax,0x5c00000
  45dc57:	add    BYTE PTR [rax],al
  45dc59:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc60
  45dc60:	add    al,al
  45dc62:	add    eax,0x5c00000
  45dc67:	add    BYTE PTR [rax],al
  45dc69:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc70
  45dc70:	add    al,al
  45dc72:	add    eax,0x5c00000
  45dc77:	add    BYTE PTR [rax],al
  45dc79:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc80
  45dc80:	add    al,al
  45dc82:	add    eax,0x5c00000
  45dc87:	add    BYTE PTR [rax],al
  45dc89:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dc90
  45dc90:	add    al,al
  45dc92:	add    eax,0x5c00000
  45dc97:	add    BYTE PTR [rax],al
  45dc99:	rol    BYTE PTR [rip+0x5c00000],0x0        # 0x605dca0
  45dca0:	add    al,al
  45dca2:	add    eax,0x5c00000
  45dca7:	add    BYTE PTR [rcx+rcx*2+0x42],cl
  45dcab:	push   rax
  45dcac:	push   rcx
  45dcad:	cs fs ins BYTE PTR es:[rdi],dx
  45dcb0:	ins    BYTE PTR es:[rdi],dx
  45dcb1:	add    BYTE PTR [rax],al
  45dcb3:	add    BYTE PTR [rax+rax*8],dl
  45dcb6:	add    eax,0x5c01400
  45dcbb:	add    BYTE PTR [rax+rax*8],dl
  45dcbe:	add    eax,0x5c01400
  45dcc3:	add    BYTE PTR [rax+rax*8],dl
  45dcc6:	add    eax,0x5c01400
  45dccb:	add    BYTE PTR [rax+rax*8],dl
  45dcce:	add    eax,0x5c01400
  45dcd3:	add    BYTE PTR [rax+rax*8],dl
  45dcd6:	add    eax,0x56444100
  45dcdb:	push   r8
  45dcdd:	xor    rsi,QWORD PTR [r10]
  45dce0:	cs fs ins BYTE PTR es:[rdi],dx
  45dce3:	ins    BYTE PTR es:[rdi],dx
  45dce4:	add    BYTE PTR [rax],al
  45dce6:	add    BYTE PTR [rax],al
  45dce8:	sub    al,al
  45dcea:	add    eax,0x5c02800
  45dcef:	add    BYTE PTR [rax],ch
  45dcf1:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x60604f8
  45dcf8:	sub    al,al
  45dcfa:	add    eax,0x5c02800
  45dcff:	add    BYTE PTR [rax],ch
  45dd01:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060508
  45dd08:	sub    al,al
  45dd0a:	add    eax,0x5c02800
  45dd0f:	add    BYTE PTR [rax],ch
  45dd11:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060518
  45dd18:	sub    al,al
  45dd1a:	add    eax,0x5c02800
  45dd1f:	add    BYTE PTR [rax],ch
  45dd21:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060528
  45dd28:	sub    al,al
  45dd2a:	add    eax,0x5c02800
  45dd2f:	add    BYTE PTR [rax],ch
  45dd31:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060538
  45dd38:	sub    al,al
  45dd3a:	add    eax,0x5c02800
  45dd3f:	add    BYTE PTR [rax],ch
  45dd41:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060548
  45dd48:	sub    al,al
  45dd4a:	add    eax,0x5c02800
  45dd4f:	add    BYTE PTR [rax],ch
  45dd51:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060558
  45dd58:	sub    al,al
  45dd5a:	add    eax,0x5c02800
  45dd5f:	add    BYTE PTR [rax],ch
  45dd61:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060568
  45dd68:	sub    al,al
  45dd6a:	add    eax,0x5c02800
  45dd6f:	add    BYTE PTR [rax],ch
  45dd71:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060578
  45dd78:	sub    al,al
  45dd7a:	add    eax,0x5c02800
  45dd7f:	add    BYTE PTR [rax],ch
  45dd81:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060588
  45dd88:	sub    al,al
  45dd8a:	add    eax,0x5c02800
  45dd8f:	add    BYTE PTR [rax],ch
  45dd91:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x6060598
  45dd98:	sub    al,al
  45dd9a:	add    eax,0x5c02800
  45dd9f:	add    BYTE PTR [rax],ch
  45dda1:	rol    BYTE PTR [rip+0x5c02800],0x0        # 0x60605a8
  45dda8:	sub    al,al
  45ddaa:	add    eax,0x5c02800
  45ddaf:	add    BYTE PTR [rax],ch
  45ddb1:	rol    BYTE PTR [rip+0x52454b00],0x4e        # 0x528b28b8
  45ddb8:	rex.RB
  45ddb9:	xor    r14,QWORD PTR [rdx]
  45ddbc:	cs fs ins BYTE PTR es:[rdi],dx
  45ddbf:	ins    BYTE PTR es:[rdi],dx
  45ddc0:	add    BYTE PTR [rax],al
  45ddc2:	add    BYTE PTR [rax],al
  45ddc4:	cmp    al,0xc0
  45ddc6:	add    eax,0x5c03c00
  45ddcb:	add    BYTE PTR [rax+rax*8],bh
  45ddce:	add    eax,0x5c03c00
  45ddd3:	add    BYTE PTR [rax+rax*8],bh
  45ddd6:	add    eax,0x5c03c00
  45dddb:	add    BYTE PTR [rax+rax*8],bh
  45ddde:	add    eax,0x5c03c00
  45dde3:	add    BYTE PTR [rax+rax*8],bh
  45dde6:	add    eax,0x5c03c00
  45ddeb:	add    BYTE PTR [rax+rax*8],bh
  45ddee:	add    eax,0x5c03c00
  45ddf3:	add    BYTE PTR [rax+rax*8],bh
  45ddf6:	add    eax,0x5c03c00
  45ddfb:	add    BYTE PTR [rax+rax*8],bh
  45ddfe:	add    eax,0x5c03c00
  45de03:	add    BYTE PTR [rax+rax*8],bh
  45de06:	add    eax,0x5c03c00
  45de0b:	add    BYTE PTR [rax+rax*8],bh
  45de0e:	add    eax,0x5c03c00
  45de13:	add    BYTE PTR [rax+rax*8],bh
  45de16:	add    eax,0x5c03c00
  45de1b:	add    BYTE PTR [rax+rax*8],bh
  45de1e:	add    eax,0x5c03c00
  45de23:	add    BYTE PTR [rax+rax*8],bh
  45de26:	add    eax,0x5c03c00
  45de2b:	add    BYTE PTR [rax+rax*8],bh
  45de2e:	add    eax,0x5c03c00
  45de33:	add    BYTE PTR [rax+rax*8],bh
  45de36:	add    eax,0x5c03c00
  45de3b:	add    BYTE PTR [rax+rax*8],bh
  45de3e:	add    eax,0x5c03c00
  45de43:	add    BYTE PTR [rax+rax*8],bh
  45de46:	add    eax,0x5c03c00
  45de4b:	add    BYTE PTR [rax+rax*8],bh
  45de4e:	add    eax,0x5c03c00
  45de53:	add    BYTE PTR [rax+rax*8],bh
  45de56:	add    eax,0x5c03c00
  45de5b:	add    BYTE PTR [rax+rax*8],bh
  45de5e:	add    eax,0x5c03c00
  45de63:	add    BYTE PTR [rax+rax*8],bh
  45de66:	add    eax,0x5c03c00
  45de6b:	add    BYTE PTR [rax+rax*8],bh
  45de6e:	add    eax,0x5c03c00
  45de73:	add    BYTE PTR [rax+rax*8],bh
  45de76:	add    eax,0x5c03c00
  45de7b:	add    BYTE PTR [rax+rax*8],bh
  45de7e:	add    eax,0x5c03c00
  45de83:	add    BYTE PTR [rax+rax*8],bh
  45de86:	add    eax,0x5c03c00
  45de8b:	add    BYTE PTR [rax+rax*8],bh
  45de8e:	add    eax,0x5c03c00
  45de93:	add    BYTE PTR [rax+rax*8],bh
  45de96:	add    eax,0x5c03c00
  45de9b:	add    BYTE PTR [rax+rax*8],bh
  45de9e:	add    eax,0x5c03c00
  45dea3:	add    BYTE PTR [rax+rax*8],bh
  45dea6:	add    eax,0x5c03c00
  45deab:	add    BYTE PTR [rax+rax*8],bh
  45deae:	add    eax,0x5c03c00
  45deb3:	add    BYTE PTR [rax+rax*8],bh
  45deb6:	add    eax,0x5c03c00
  45debb:	add    BYTE PTR [rax+rax*8],bh
  45debe:	add    eax,0x5c03c00
  45dec3:	add    BYTE PTR [rax+rax*8],bh
  45dec6:	add    eax,0x5c03c00
  45decb:	add    BYTE PTR [rax+rax*8],bh
  45dece:	add    eax,0x5c03c00
  45ded3:	add    BYTE PTR [rax+rax*8],bh
  45ded6:	add    eax,0x5c03c00
  45dedb:	add    BYTE PTR [rax+rax*8],bh
  45dede:	add    eax,0x5c03c00
  45dee3:	add    BYTE PTR [rax+rax*8],bh
  45dee6:	add    eax,0x5c03c00
  45deeb:	add    BYTE PTR [rax+rax*8],bh
  45deee:	add    eax,0x5c03c00
  45def3:	add    BYTE PTR [rax+rax*8],bh
  45def6:	add    eax,0x5c03c00
  45defb:	add    BYTE PTR [rax+rax*8],bh
  45defe:	add    eax,0x5c03c00
  45df03:	add    BYTE PTR [rax+rax*8],bh
  45df06:	add    eax,0x5c03c00
  45df0b:	add    BYTE PTR [rax+rax*8],bh
  45df0e:	add    eax,0x5c03c00
  45df13:	add    BYTE PTR [rax+rax*8],bh
  45df16:	add    eax,0x5c03c00
  45df1b:	add    BYTE PTR [rax+rax*8],bh
  45df1e:	add    eax,0x5c03c00
  45df23:	add    BYTE PTR [rax+rax*8],bh
  45df26:	add    eax,0x5c03c00
  45df2b:	add    BYTE PTR [rax+rax*8],bh
  45df2e:	add    eax,0x5c03c00
  45df33:	add    BYTE PTR [rax+rax*8],bh
  45df36:	add    eax,0x5c03c00
  45df3b:	add    BYTE PTR [rbp+0x73],ch
  45df3e:	jbe    0x45dfa3
  45df40:	jb     0x45dfb6
  45df42:	cs fs ins BYTE PTR es:[rdi],dx
  45df45:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000045e000 <.CRT>:
	...
  45e008:	(bad)  
  45e009:	adc    DWORD PTR [rax+0x0],eax
	...
  45e020:	adc    BYTE PTR [rax],dl
  45e022:	add    BYTE PTR [rax],al
  45e025:	add    BYTE PTR [rax],al
  45e027:	add    BYTE PTR [rax],dl
  45e029:	add    DWORD PTR [rdx+0x0],0x0
	...
  45e040:	rex add DWORD PTR [rdx+0x0],0x0
  45e045:	add    BYTE PTR [rax],al
  45e047:	add    BYTE PTR [rax],dl
  45e049:	add    DWORD PTR [rdx+0x0],0x0
	...

Disassembly of section .tls:

000000000045f000 <.tls>:
	...
  45f020:	add    al,dh
  45f022:	add    BYTE PTR [r8],r8b
  45f025:	add    BYTE PTR [rax],al
  45f027:	add    BYTE PTR [rax-0x10],ah
  45f02a:	add    BYTE PTR [r8],r8b
  45f02d:	add    BYTE PTR [rax],al
  45f02f:	add    BYTE PTR [rbx+rbp*4+0x45],bl
  45f033:	add    BYTE PTR [rax],al
  45f035:	add    BYTE PTR [rax],al
  45f037:	add    BYTE PTR [rax-0x20],al
  45f03a:	add    BYTE PTR [r8],r8b
	...

Disassembly of section .rsrc:

0000000000460000 <.rsrc>:
	...
  46000c:	add    BYTE PTR [rax],al
  46000e:	add    eax,DWORD PTR [rax]
  460010:	add    eax,DWORD PTR [rax]
  460012:	add    BYTE PTR [rax],al
  460014:	sub    BYTE PTR [rax],al
  460016:	add    BYTE PTR [rax+0xe],al
  46001c:	clc    
  46001d:	add    BYTE PTR [rax],al
  46001f:	adc    BYTE PTR [rax],0x0
  460022:	add    BYTE PTR [rax],al
  460024:	sub    BYTE PTR [rcx],al
  460026:	add    BYTE PTR [rax+0x0],al
	...
  460034:	add    BYTE PTR [rax],al
  460036:	(bad)  
  460037:	add    BYTE PTR [rcx],al
  460039:	add    BYTE PTR [rax],al
  46003b:	add    BYTE PTR [rax+0x0],ch
  46003e:	add    BYTE PTR [rax+0x2],al
  460044:	add    BYTE PTR [rax],0x0
  460047:	add    BYTE PTR [rbx],0x0
  46004a:	add    BYTE PTR [rax],al
  46004c:	cwde   
  46004d:	add    BYTE PTR [rax],al
  46004f:	add    BYTE PTR [rax+rax*1],0x0
  460053:	add    BYTE PTR [rax+0x5800000],dh
  460059:	add    BYTE PTR [rax],al
  46005b:	add    al,cl
  46005d:	add    BYTE PTR [rax],al
  46005f:	add    BYTE PTR [rsi],0x0
  460062:	add    BYTE PTR [rax],al
  460064:	loopne 0x460066
  460066:	add    BYTE PTR [rax+0x0],al
	...
  460074:	add    BYTE PTR [rax],al
  460076:	add    DWORD PTR [rax],eax
  460078:	or     DWORD PTR [rax+rax*1],eax
  46007b:	add    BYTE PTR [rax+0x1],dh
	...
  46008e:	add    DWORD PTR [rax],eax
  460090:	or     DWORD PTR [rax+rax*1],eax
  460093:	add    BYTE PTR [rax+0x1],al
	...
  4600a5:	add    BYTE PTR [rcx],al
  4600a7:	add    BYTE PTR [rcx],cl
  4600a9:	add    al,0x0
  4600ab:	add    BYTE PTR [rax+0x1],dl
	...
  4600bd:	add    BYTE PTR [rcx],al
  4600bf:	add    BYTE PTR [rcx],cl
  4600c1:	add    al,0x0
  4600c3:	add    BYTE PTR [rax+0x1],ah
	...
  4600d5:	add    BYTE PTR [rcx],al
  4600d7:	add    BYTE PTR [rcx],cl
  4600d9:	add    al,0x0
  4600db:	add    BYTE PTR [rax+0x1],dh
	...
  4600ed:	add    BYTE PTR [rcx],al
  4600ef:	add    BYTE PTR [rcx],cl
  4600f1:	add    al,0x0
  4600f3:	add    al,al
  4600f5:	add    DWORD PTR [rax],eax
	...
  460103:	add    BYTE PTR [rcx],al
  460105:	add    BYTE PTR [rax],al
  460107:	add    BYTE PTR [rax+0x1],bl
  46010a:	add    BYTE PTR [rax-0x7ffffef0],al
	...
  46011c:	add    BYTE PTR [rax],al
  46011e:	add    DWORD PTR [rax],eax
  460120:	or     DWORD PTR [rax+rax*1],eax
  460123:	add    al,dl
  460125:	add    DWORD PTR [rax],eax
	...
  460133:	add    BYTE PTR [rax],al
  460135:	add    BYTE PTR [rcx],al
  460137:	add    BYTE PTR [rcx],al
  460139:	add    BYTE PTR [rax],al
  46013b:	add    BYTE PTR [rax+0x1],al
  46013e:	add    BYTE PTR [rax+0x0],al
	...
  46014c:	add    BYTE PTR [rax],al
  46014e:	add    DWORD PTR [rax],eax
  460150:	or     DWORD PTR [rax+rax*1],eax
  460153:	add    al,ah
  460155:	add    DWORD PTR [rax],eax
  460157:	add    BYTE PTR [rax],cl
  460159:	add    BYTE PTR [rcx+0x0],cl
  46015c:	add    BYTE PTR [rcx+0x0],r9b
  460160:	pop    rdi
  460161:	add    BYTE PTR [rcx+0x0],cl
  460164:	rex.XB add BYTE PTR [r15+0x0],cl
  460168:	rex.WRX add BYTE PTR [rax],r8b
  46016b:	add    BYTE PTR [rax],al
  46016d:	add    BYTE PTR [rax],al
  46016f:	add    al,dh
  460171:	add    DWORD PTR [rsi],eax
  460173:	add    BYTE PTR [rax+0x5],ch
	...
  46017e:	add    BYTE PTR [rax],al
  460180:	pop    rax
  460181:	(bad)  
  460182:	(bad)  
  460183:	add    BYTE PTR [rax+0x8],ch
	...
  460191:	adc    BYTE PTR [rsi],al
  460193:	add    BYTE PTR [rax+0xe],ch
  460199:	add    BYTE PTR [rax],al
  46019b:	add    BYTE PTR [rax],al
  46019d:	add    BYTE PTR [rax],al
  46019f:	add    BYTE PTR [rax+0x6800061e],ch
  4601a5:	add    al,0x0
	...
  4601af:	add    BYTE PTR [rax],dl
  4601b1:	and    eax,DWORD PTR [rsi]
  4601b3:	add    BYTE PTR [rax+0x10],ch
  4601b9:	add    BYTE PTR [rax],al
  4601bb:	add    BYTE PTR [rax],al
  4601bd:	add    BYTE PTR [rax],al
  4601bf:	add    BYTE PTR [rax-0x57fff9cd],bh
  4601c5:	and    eax,0x0
  4601ca:	add    BYTE PTR [rax],al
  4601cc:	add    BYTE PTR [rax],al
  4601ce:	add    BYTE PTR [rax],al
  4601d0:	(bad)  
  4601d1:	pop    rcx
  4601d2:	(bad)  
  4601d3:	add    BYTE PTR [rdx+0x0],bl
	...
  4601de:	add    BYTE PTR [rax],al
  4601e0:	rcr    BYTE PTR [rcx+0x6],0x0
  4601e4:	cwde   
  4601e5:	add    eax,DWORD PTR [rax]
	...
  4601ef:	add    BYTE PTR [rax],ch
  4601f1:	add    BYTE PTR [rax],al
  4601f3:	add    BYTE PTR [rax],dl
  4601f5:	add    BYTE PTR [rax],al
  4601f7:	add    BYTE PTR [rax],ah
  4601f9:	add    BYTE PTR [rax],al
  4601fb:	add    BYTE PTR [rcx],al
  4601fd:	add    BYTE PTR [rax],cl
  4601ff:	add    BYTE PTR [rax],al
  460201:	add    BYTE PTR [rax],al
  460203:	add    BYTE PTR [rax],al
  460205:	add    DWORD PTR [rax],eax
	...
  46020f:	add    BYTE PTR [rax],al
  460211:	add    DWORD PTR [rax],eax
  460213:	add    BYTE PTR [rax],al
  460215:	add    DWORD PTR [rax],eax
  460217:	add    BYTE PTR [rax],al
  460219:	add    BYTE PTR [rax],al
  46021b:	add    BYTE PTR [rdi+0x69],bh
  46021e:	add    BYTE PTR [r8-0x71ffd19f],r9b
  460225:	(bad)  
  460226:	(bad)  
  460227:	add    BYTE PTR [rbx-0x71ffd099],cl
  46022d:	data16 (bad) 
  46022f:	add    BYTE PTR [rbx-0x6effd198],cl
  460235:	gs (bad) 
  460237:	add    BYTE PTR [rbx-0x7affcd9f],al
  46023d:	(bad)  
  46023e:	xor    eax,0x34648300
  460243:	add    BYTE PTR [rsi-0x77ffc999],al
  460249:	(bad)  
  46024b:	add    BYTE PTR [rbp-0x75ffcd9e],cl
  460251:	xor    al,BYTE PTR fs:[rax]
  460254:	mov    fs,WORD PTR [rcx+rsi*1+0x0]
  460258:	mov    DWORD PTR [rdx+0x35],esp
  46025b:	add    BYTE PTR [rbx+riz*2+0x648e0035],cl
  460262:	add    BYTE PTR ss:[rcx-0x7bffc79f],al
  460269:	(bad)  
  46026a:	cmp    DWORD PTR [rax],eax
  46026c:	test   DWORD PTR [rcx+rdi*1+0x0],esp
  460270:	mov    ah,BYTE PTR [rbx+0x39]
  460273:	add    BYTE PTR [rdx-0x78ffc69b],cl
  460279:	imul   edi,DWORD PTR [rdi],0x38688900
  46027f:	add    BYTE PTR [rdi-0x76ffc598],cl
  460285:	push   0x6290003d
  46028a:	xor    al,BYTE PTR [rax]
  46028c:	xchg   ecx,eax
  46028d:	xor    DWORD PTR gs:[rax],eax
  460290:	xchg   esp,eax
  460291:	xor    BYTE PTR gs:[rax],al
  460294:	xchg   ecx,eax
  460295:	movsxd esi,DWORD PTR [rax+rax*1]
  460298:	nop
  460299:	push   0x6589003f
  46029e:	add    BYTE PTR [r9-0x75ffb993],cl
  4602a5:	imul   ecx,DWORD PTR [rax+0x0],0xffffff8a
  4602a9:	jo     0x4602f6
  4602ab:	add    BYTE PTR [rbp-0x66ffb78f],cl
  4602b1:	jb     0x4602fd
  4602b3:	add    BYTE PTR [rax-0x67ffa88a],cl
  4602b9:	jbe    0x460311
  4602bb:	add    BYTE PTR [rsi-0x67ffa684],dl
  4602c1:	jge    0x46031b
  4602c3:	add    BYTE PTR [rsi-0x63ffa283],bl
  4602c9:	sbb    BYTE PTR [rbp+0x0],0xa3
  4602cd:	sbb    DWORD PTR [rsi+0x0],0x608592
  4602d4:	pushf  
  4602d5:	and    DWORD PTR [rcx+0x0],0xffffffa2
  4602d9:	test   BYTE PTR [rcx+0x0],ah
  4602dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4602dd:	mov    BYTE PTR [rcx+0x0],ah
  4602e0:	movabs eax,ds:0xaa006e8ea0006b8e
  4602e9:	xchg   esi,eax
  4602ea:	outs   dx,BYTE PTR ds:[rsi]
  4602eb:	add    BYTE PTR [rcx-0x5aff8a70],ah
  4602f1:	xchg   esp,eax
  4602f2:	ja     0x4602f4
  4602f4:	stos   DWORD PTR es:[rdi],eax
  4602f5:	xchg   edi,eax
  4602f6:	jne    0x4602f8
  4602f8:	lods   eax,DWORD PTR ds:[rsi]
  4602f9:	xchg   esi,eax
  4602fa:	jne    0x4602fc
  4602fc:	mov    dl,0x9d
  4602fe:	jge    0x460300
  460300:	mov    ah,0xa1
  460302:	jl     0x460304
  460304:	movabs ds:0xad008aa1ae008495,eax
  46030d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  46030e:	mov    eax,DWORD PTR [rax]
  460310:	lods   al,BYTE PTR ds:[rsi]
  460311:	movabs ds:0xa9bd0086a9ba008f,eax
  46031a:	test   DWORD PTR [rax],eax
  46031c:	mov    dh,0xa4
  46031e:	mov    eax,DWORD PTR [rax]
  460320:	mov    eax,0xb4008da6
  460325:	stos   BYTE PTR es:[rdi],al
  460326:	pop    QWORD PTR [rax]
  460328:	mov    ebp,0xb4008ca9
  46032d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  46032e:	xchg   ebx,eax
  46032f:	add    BYTE PTR [rdi-0x47ff6e55],dh
  460335:	stos   BYTE PTR es:[rdi],al
  460336:	xchg   ecx,eax
  460337:	add    BYTE PTR [rbx-0x41ff6e54],bh
  46033d:	scas   eax,DWORD PTR es:[rdi]
  46033e:	xchg   ebp,eax
  46033f:	add    BYTE PTR [rbp-0x40ff6553],bh
  460345:	mov    al,0x92
  460347:	add    BYTE PTR [rax-0x43ff6a50],bh
  46034d:	mov    dl,0x95
  46034f:	add    al,al
  460351:	lods   al,BYTE PTR ds:[rsi]
  460352:	mov    WORD PTR [rax],es
  460354:	shr    DWORD PTR [rdi-0x4e3bff70],0x91
  46035b:	add    ah,al
  46035d:	mov    ch,0x93
  46035f:	add    al,al
  460361:	mov    ah,0x95
  460363:	add    ch,al
  460365:	mov    bh,0x94
  460367:	add    al,cl
  460369:	mov    ah,0x97
  46036b:	add    dl,al
  46036d:	mov    ch,0x98
  46036f:	add    ah,al
  460371:	mov    eax,0xb7c5009b
  460376:	movabs al,ds:0xa8bac700a7bfc700
  46037f:	add    bh,al
  460381:	mov    esi,0xbfc800a9
  460386:	scas   eax,DWORD PTR es:[rdi]
  460387:	add    cl,cl
  460389:	shl    BYTE PTR [rax+rax*1+0xb6c5c9],0xcb
  460391:	(bad)
  460394:	iret   
  460395:	leave  
  460396:	mov    esp,0xbbc9d300
  46039b:	add    ah,dl
  46039d:	int3   
  46039e:	mov    ebx,0xc1c6ca00
  4603a3:	add    bl,dl
  4603a5:	iret   
  4603a6:	ret    0xd500
  4603a9:	iret   
  4603aa:	rol    BYTE PTR [rax],0xdc
  4603ad:	(bad)  
  4603ae:	ret    
  4603af:	add    cl,bl
  4603b1:	rol    edi,1
  4603b3:	add    bh,bl
  4603b5:	(bad)  
  4603b7:	add    cl,ah
  4603b9:	fxch   st(6)
  4603bb:	add    cl,ah
  4603bd:	(bad)  
  4603bf:	add    ch,ah
  4603c1:	(bad)  
  4603c3:	add    dh,ah
  4603c5:	loope  0x46039e
  4603c7:	add    bl,ah
  4603c9:	loope  0x4603a4
  4603cb:	add    dh,ch
  4603cd:	jmp    0x4603b5
  4603cf:	add    dh,ch
  4603d1:	out    dx,al
  4603d2:	in     al,dx
  4603d3:	add    cl,dh
  4603d5:	in     eax,dx
  4603d6:	out    0x0,eax
  4603d8:	icebp  
  4603d9:	out    dx,al
  4603da:	jmp    0xffffffffeb36f6df
  4603df:	add    ah,dh
  4603e1:	repnz out dx,al
	...
  46061f:	add    BYTE PTR [rbx+riz*1+0x29],ah
  460623:	imul   eax,DWORD PTR [rax],0x0
	...
  46062e:	add    BYTE PTR [rax],al
  460630:	nop    DWORD PTR ss:[rdi]
	...
  460640:	xor    BYTE PTR [rdi],cl
  460642:	add    al,0x26
	...
  460650:	sub    eax,0x20041e
  460655:	add    BYTE PTR [rax],al
  460657:	add    BYTE PTR [rax],al
  460659:	add    BYTE PTR [rax],al
  46065b:	data16 add BYTE PTR [rcx+0x3e],ch
  46065f:	pop    rbp
  460660:	sub    ebx,DWORD PTR [rip+0x6f1606]        # 0xb51c6c
  460666:	add    BYTE PTR [rax],al
  460668:	add    BYTE PTR [rax],al
  46066a:	maxps  xmm0,XMMWORD PTR [r8]
  46066e:	ins    BYTE PTR es:[rdi],dx
  46066f:	sub    BYTE PTR ds:[rip+0x3b590f04],bl        # 0x3b9f157a
  460676:	(bad)  
  460677:	add    BYTE PTR [rax],al
  460679:	addr32 adc eax,0x415f220f
  46067f:	rex.WR (bad)         # 0xb44990
  460681:	nop    DWORD PTR [rdi]
  460684:	rex.XB outs dx,BYTE PTR ds:[rsi]
  460686:	add    BYTE PTR [rax],al
  460688:	add    BYTE PTR [rdx+0x1d],al
  46068b:	cmove  esp,DWORD PTR [rdx]
  46068e:	or     DWORD PTR [rdx+0xf],edx
  460691:	nop    DWORD PTR [rax]
  460694:	pop    rcx
  460695:	pop    rsi
  460696:	add    BYTE PTR [rax],al
  460698:	add    BYTE PTR [rsi+rbx*1],ch
  46069b:	rsqrtps xmm1,XMMWORD PTR [rcx]
  46069e:	(bad)  
  4606a0:	(bad)  
  4606a1:	sbb    eax,0x4627341d
  4606a6:	imul   eax,DWORD PTR [rax],0x1d0f0f71
  4606ac:	rex.WRX (bad) 
  4606ae:	getsec 
  4606b0:	and    DWORD PTR [rip+0x3a255215],ebx        # 0x3a6b58cb
  4606b6:	xor    eax,DWORD PTR [rax]
  4606b8:	nop    DWORD PTR fs:[rdi]
  4606bc:	push   rdx
  4606bd:	add    DWORD PTR [rdi],esi
  4606bf:	rex.WRB movlps xmm10,QWORD PTR [r14]
  4606c3:	rex.WRB
  4606c4:	rex str WORD PTR cs:[rdx+0xf]
  4606ca:	sbb    eax,0x56524e1d
  4606cf:	cmp    DWORD PTR [rdi],ecx
  4606d1:	sbb    eax,0x5659440f
  4606d6:	pcmpgtd mm0,QWORD PTR [rsi+0x1d]
  4606da:	(bad)  
  4606db:	(bad)  
  4606de:	add    cl,BYTE PTR [rdi]
  4606e0:	(bad)  
  4606e1:	nop    DWORD PTR [rdi]
  4606e4:	xor    eax,0x69561d30
  4606e9:	adc    ebx,DWORD PTR [rip+0x952010f]        # 0x99807fe
  4606ef:	(bad)  
  4606f0:	(bad)  
  4606f1:	(bad)          # 0x5f5b1638
  4606f2:	(bad)  
  4606f4:	rex.RX unpckhps xmm11,XMMWORD PTR [rdi+0x0]
  4606f9:	rex.RX (bad) 
  4606fb:	or     DWORD PTR [rcx],ecx
  4606fd:	rex.RB
  4606fe:	rex.XB adc eax,0x53331509
  460704:	or     DWORD PTR [rip+0x4a],edx        # 0x460754
  46070a:	jb     0x46077e
  46070c:	add    BYTE PTR [rax],al
  46070e:	add    BYTE PTR [rdx+0x6d],dh
  460711:	add    BYTE PTR [rax],al
  460713:	pop    rbp
  460714:	pop    rbx
  460715:	jb     0x460717
  460717:	add    bh,bh
  460719:	sldt   WORD PTR [rax]
  46071c:	dec    DWORD PTR [rdi]
  46071e:	add    BYTE PTR [rax],al
  460720:	dec    DWORD PTR [rdi]
  460722:	add    BYTE PTR [rax],al
  460724:	dec    DWORD PTR [rdi]
  460726:	add    BYTE PTR [rax],al
  460728:	call   0xffffffffc4460734
  46072d:	add    DWORD PTR [rax],eax
  46072f:	add    BYTE PTR [rax-0x7ffffffd],al
  460735:	add    eax,DWORD PTR [rax]
  460737:	add    BYTE PTR [rax+0x1],al
  46073d:	add    DWORD PTR [rax],eax
  46073f:	add    BYTE PTR [rax],al
  460741:	add    DWORD PTR [rax],eax
	...
  46074f:	add    BYTE PTR [rax-0x31ffffff],al
  460755:	movsxd eax,DWORD PTR [rax]
  460757:	add    BYTE PTR [rax],ch
  460759:	add    BYTE PTR [rax],al
  46075b:	add    BYTE PTR [rax],ah
  46075d:	add    BYTE PTR [rax],al
  46075f:	add    BYTE PTR [rax+0x0],al
  460762:	add    BYTE PTR [rax],al
  460764:	add    DWORD PTR [rax],eax
  460766:	or     BYTE PTR [rax],al
  460768:	add    BYTE PTR [rax],al
  46076a:	add    BYTE PTR [rax],al
  46076c:	add    BYTE PTR [rax+rax*1],al
	...
  460777:	add    BYTE PTR [rax],al
  460779:	add    DWORD PTR [rax],eax
  46077b:	add    BYTE PTR [rax],al
  46077d:	add    DWORD PTR [rax],eax
  46077f:	add    BYTE PTR [rax],al
  460781:	add    BYTE PTR [rax],al
  460783:	add    BYTE PTR [rcx+rbx*2+0x37],dh
  460787:	add    BYTE PTR [rsi+0x5a],bh
  46078a:	xor    al,BYTE PTR [rax]
  46078c:	jp     0x4607ed
  46078e:	xor    al,BYTE PTR [rax]
  460790:	jle    0x4607f1
  460792:	xor    BYTE PTR [rax],al
  460794:	jge    0x4607f1
  460796:	xor    al,0x0
  460798:	jge    0x4607f7
  46079a:	xor    eax,0x3a5d7400
  46079f:	add    BYTE PTR [rdx+0x5f],bh
  4607a2:	cmp    al,BYTE PTR [rax]
  4607a4:	jge    0x460807
  4607a6:	xor    eax,DWORD PTR [rax]
  4607a8:	ja     0x46080c
  4607aa:	cmp    al,0x0
  4607ac:	jl     0x460811
  4607ae:	cmp    eax,DWORD PTR [rax]
  4607b0:	ja     0x460811
  4607b2:	add    BYTE PTR [rbx+0x63],bpl
  4607b6:	add    BYTE PTR [r10+r12*2+0x46],r14b
  4607bb:	add    BYTE PTR [rbp+0x65],bh
  4607be:	add    BYTE PTR [r10+0x66],sil
  4607c2:	rex.WR add BYTE PTR [rax+0x64],r15b
  4607c6:	rex.WRX add BYTE PTR [rbp+0x6b],r15b
  4607ca:	rex.WXB add BYTE PTR [r13+r13*2+0x52],dil
  4607cf:	add    BYTE PTR [rsi+0x70],bh
  4607d2:	push   rdx
  4607d3:	add    BYTE PTR [rbx-0x7cffd0a2],al
  4607d9:	pop    rdi
  4607da:	xor    DWORD PTR [rax],eax
  4607dc:	xchg   BYTE PTR [rdi+0x31],bl
  4607df:	add    BYTE PTR [rcx-0x7effcaa5],al
  4607e5:	pop    rbp
  4607e6:	add    BYTE PTR ss:[rsi-0x73ffcaa4],al
  4607ed:	pop    rsi
  4607ee:	xor    eax,DWORD PTR [rax]
  4607f0:	mov    ebx,DWORD PTR [rdi+0x36]
  4607f3:	add    BYTE PTR [rdi-0x7affc8a1],cl
  4607f9:	pop    rsi
  4607fa:	cmp    al,BYTE PTR [rax]
  4607fc:	(bad)  
  4607fd:	pop    rsi
  4607fe:	cmp    eax,DWORD PTR [rax]
  460800:	nop
  460801:	pop    rsi
  460802:	xor    al,0x0
  460804:	and    DWORD PTR [rcx+0x2d],0x0
  460808:	(bad)  
  460809:	sub    eax,DWORD PTR fs:[rax]
  46080c:	mov    BYTE PTR [rax+0x2f],ah
  46080f:	add    BYTE PTR [rbp-0x76ffd39d],cl
  460815:	gs add BYTE PTR cs:[rbp-0x76ffd19a],cl
  46081d:	push   0x688c002e
  460822:	sub    eax,0x2e639100
  460827:	add    BYTE PTR [rbp-0x6effd09d],dl
  46082d:	gs add BYTE PTR cs:[rsi-0x66ffd19a],dl
  460835:	fs (bad) 
  460837:	add    BYTE PTR [rax-0x6bffd198],dl
  46083d:	push   0x6181002f
  460842:	xor    al,BYTE PTR [rax]
  460844:	test   DWORD PTR [rcx+0x31],esp
  460847:	add    BYTE PTR [rsp+riz*2+0x61820032],al
  46084e:	add    BYTE PTR ss:[rbp-0x79ffca9f],al
  460855:	gs (bad) 
  460857:	add    BYTE PTR [rcx-0x72ffce9e],cl
  46085d:	(bad)  
  46085f:	add    BYTE PTR [rdx-0x72ffcd9c],cl
  460865:	xor    DWORD PTR gs:[rax],eax
  460868:	mov    DWORD PTR [rcx+0x35],esp
  46086b:	add    BYTE PTR [rbp-0x76ffca9f],cl
  460871:	fs xor al,0x0
  460874:	lea    esp,[rsp+rsi*1+0x0]
  460878:	(bad)  
  460879:	movsxd edi,DWORD PTR [rcx]
  46087b:	add    BYTE PTR [rdx+riz*2+0x65830039],al
  460882:	cmp    DWORD PTR [rax],eax
  460884:	test   BYTE PTR [rbx+rdi*1+0x0],ah
  460888:	test   BYTE PTR [rbp+0x3e],ah
  46088b:	add    BYTE PTR [rdx-0x79ffc79e],cl
  460891:	push   0x688b003f
  460896:	cmp    eax,DWORD PTR [rax]
  460898:	xchg   ecx,eax
  460899:	(bad)  
  46089b:	add    BYTE PTR [rbx+riz*2+0x65910032],dl
  4608a2:	xor    DWORD PTR [rax],eax
  4608a4:	xchg   esp,eax
  4608a5:	xor    BYTE PTR gs:[rax],al
  4608a8:	xchg   edx,eax
  4608a9:	(bad)  
  4608aa:	xor    eax,0x35629500
  4608af:	add    BYTE PTR [rax-0x6affcb9c],dl
  4608b5:	gs add BYTE PTR ss:[rax-0x69ffce9d],bl
  4608bd:	push   0x62900032
  4608c2:	cmp    BYTE PTR [rax],al
  4608c4:	and    DWORD PTR [rbx+rax*2+0x0],0xffffff84
  4608c9:	imul   eax,DWORD PTR [rsi+0x0],0xffffff88
  4608cd:	imul   eax,DWORD PTR [rbx+0x0],0xffffff84
  4608d1:	imul   ecx,DWORD PTR [rax+rax*1-0x77],0x6c
  4608d6:	rex.WB add BYTE PTR [r14-0x72ffbe8f],cl
  4608dd:	jae    0x46092b
  4608df:	add    BYTE PTR [rax-0x6cffb68a],dl
  4608e5:	jae    0x460936
  4608e7:	add    BYTE PTR [rbx-0x63ffb18c],dl
  4608ed:	jp     0x46093e
  4608ef:	add    BYTE PTR [rcx-0x74ffaf91],al
  4608f5:	jbe    0x46094a
  4608f7:	add    BYTE PTR [rcx-0x73ffab8f],cl
  4608fd:	jno    0x460956
  4608ff:	add    BYTE PTR [rdi-0x7cffa78c],cl
  460905:	jge    0x460965
  460907:	add    BYTE PTR [rdx-0x6bffa485],cl
  46090d:	jnp    0x460964
  46090f:	add    BYTE PTR [rdx-0x6bffaa82],bl
  460915:	jbe    0x460970
  460917:	add    BYTE PTR [rcx-0x5effa482],bl
  46091d:	jg     0x46097b
  46091f:	add    BYTE PTR [rsi-0x75ff9f8b],al
  460925:	jne    0x460989
  460927:	add    BYTE PTR [rsi-0x70ff9f85],cl
  46092d:	jnp    0x460998
  46092f:	add    BYTE PTR [rsi-0x69ff9f81],bl
  460935:	sbb    DWORD PTR [rdx+0x0],0x5b829c
  46093c:	movabs eax,ds:0x93005984a5005680
  460945:	(bad)  
  460946:	add    BYTE PTR fs:[rcx-0x68ff9c7b],bl
  46094d:	xchg   BYTE PTR [rax+rax*1-0x67],ch
  460951:	(bad)  
  460952:	push   0x0
  460954:	pushf  
  460955:	sub    DWORD PTR [rcx+0x0],0x6a859a
  46095c:	popf   
  46095d:	test   DWORD PTR [rcx+0x0],ebp
  460960:	mov    al,BYTE PTR [rsi-0x766dff8d]
  460966:	jo     0x460968
  460968:	pushf  
  460969:	mov    esi,DWORD PTR [rax+0x0]
  46096c:	cwde   
  46096d:	mov    dh,BYTE PTR [rbp+0x0]
  460970:	cdq    
  460971:	mov    edi,DWORD PTR [rcx+0x0]
  460974:	sahf   
  460975:	xchg   ebx,eax
  460976:	ja     0x460978
  460978:	cwde   
  460979:	nop
  46097a:	jge    0x46097c
  46097c:	movabs eax,ds:0xa8006789a5006587
  460985:	mov    WORD PTR [rbx+0x0],fs
  460988:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  460989:	mov    WORD PTR [rbx+0x0],gs
  46098c:	stos   DWORD PTR es:[rdi],eax
  46098d:	xchg   ecx,eax
  46098e:	outs   dx,BYTE PTR ds:[rsi]
  46098f:	add    BYTE PTR [rdx-0x5aff8c72],ah
  460995:	mov    ?,WORD PTR [rax+0x0]
  460998:	movabs al,ds:0xab007494aa007392
  4609a1:	cwde   
  4609a2:	jno    0x4609a4
  4609a4:	movabs ds:0xac007d97aa007c92,eax
  4609ad:	cdq    
  4609ae:	jl     0x4609b0
  4609b0:	mov    dh,0xa4
  4609b2:	jle    0x4609b4
  4609b4:	cdq    
  4609b5:	xchg   edx,eax
  4609b6:	xchg   BYTE PTR [rax],al
  4609b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4609b9:	xchg   esi,eax
  4609ba:	add    DWORD PTR [rax],0xffffffa2
  4609bd:	sahf   
  4609be:	xchg   DWORD PTR [rax],eax
  4609c0:	stos   BYTE PTR es:[rdi],al
  4609c1:	fwait
  4609c2:	add    DWORD PTR [rax],0xffffffa5
  4609c5:	cdq    
  4609c6:	mov    al,BYTE PTR [rax]
  4609c8:	mov    dl,0x9c
  4609ca:	(bad)  
  4609cb:	add    BYTE PTR [rsi-0x53ff7c5c],ch
  4609d1:	movabs al,ds:0xa3b80086a5b6008e
  4609da:	xchg   BYTE PTR [rax],al
  4609dc:	mov    eax,0xb30085a8
  4609e1:	movabs ds:0xa8b40088a6bb008c,eax
  4609ea:	pop    QWORD PTR [rax]
  4609ec:	mov    eax,0xbf008ba8
  4609f1:	scas   al,BYTE PTR es:[rdi]
  4609f2:	mov    BYTE PTR [rax],al
  4609f4:	mov    esp,0xbe008daa
  4609f9:	mov    bl,0x8f
  4609fb:	add    BYTE PTR [rdi-0x4fff6e5f],ch
  460a01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  460a02:	xchg   ebx,eax
  460a03:	add    BYTE PTR [rbp-0x44ff6c54],dh
  460a09:	lods   al,BYTE PTR ds:[rsi]
  460a0a:	xchg   edx,eax
  460a0b:	add    BYTE PTR [rbx-0x43ff6b56],bh
  460a11:	scas   eax,DWORD PTR es:[rdi]
  460a12:	xchg   esp,eax
  460a13:	add    BYTE PTR [rsi-0x45ff6351],bh
  460a19:	mov    bl,0x96
  460a1b:	add    BYTE PTR [rax-0x4cff674d],bh
  460a21:	scas   eax,DWORD PTR es:[rdi]
  460a22:	stos   DWORD PTR es:[rdi],eax
  460a23:	add    BYTE PTR [rbx-0x3cff5d4c],bh
  460a29:	scas   eax,DWORD PTR es:[rdi]
  460a2a:	mov    eax,DWORD PTR [rax]
  460a2c:	(bad)  
  460a2d:	mov    ah,0x95
  460a2f:	add    bh,al
  460a31:	mov    edx,0xb7c10095
  460a36:	pushf  
  460a37:	add    dh,cl
  460a39:	mov    ebx,0xb6c5009b
  460a3e:	movabs eax,ds:0xa0bdc500a1b7c800
  460a47:	add    bh,al
  460a49:	ret    
  460a4a:	lods   al,BYTE PTR ds:[rsi]
  460a4b:	add    dl,cl
  460a4d:	shr    BYTE PTR [rsi-0x5b3c2f00],0x0
  460a54:	(bad)  
  460a55:	(bad)  
  460a56:	stos   DWORD PTR es:[rdi],eax
  460a57:	add    bl,dl
  460a59:	leave  
  460a5a:	stos   DWORD PTR es:[rdi],eax
  460a5b:	add    cl,bl
  460a5d:	(bad)  
  460a5e:	lods   eax,DWORD PTR ds:[rsi]
  460a5f:	add    bh,dl
  460a61:	shr    BYTE PTR [rax+rax*1+0xadd2db],1
  460a68:	int3   
  460a69:	ret    0xb1
  460a6c:	retf   
  460a6d:	(bad)
  460a70:	ror    cl,1
  460a72:	mov    ch,0x0
  460a74:	fcmove st,st(3)
  460a76:	mov    dl,0x0
  460a78:	ror    ecx,1
  460a7a:	mov    ecx,0xb9cdd400
  460a7f:	add    cl,dl
  460a81:	enter  0xbc,0xd5
  460a85:	retf   0xbc
  460a88:	(bad)  
  460a89:	(bad)  
  460a8a:	mov    edi,0xbbccd800
  460a8f:	add    dl,bl
  460a91:	shl    DWORD PTR [rdx-0x432c2400],1
  460a97:	add    bh,bl
  460a99:	fdivr  QWORD PTR [rdi-0x4b2a1e00]
  460a9f:	add    cl,ah
  460aa1:	fdiv   DWORD PTR [rdx-0x432a1f00]
  460aa7:	add    ch,ah
  460aa9:	fdivr  QWORD PTR [rdi-0x401f1a00]
  460aaf:	add    ch,cl
  460ab1:	(bad)  
  460ab2:	(bad)
  460ab5:	rol    edx,1
  460ab7:	add    bl,bl
  460ab9:	(bad)  
  460aba:	ret    
  460abb:	add    cl,bl
  460abd:	rol    edi,cl
  460abf:	add    bh,bl
  460ac1:	rol    ebp,cl
  460ac3:	add    ch,bl
  460ac5:	xlat   BYTE PTR ds:[rbx]
  460ac6:	mov    DWORD PTR [rax],0xcbd2d4
  460acc:	fcmovbe st,st(3)
  460ace:	retf   
  460acf:	add    ah,bl
  460ad1:	fcmove st,st(1)
  460ad3:	add    bh,bl
  460ad5:	fcmovbe st,st(1)
  460ad7:	add    bh,bl
  460ad9:	fstp   st(1)
  460adb:	add    dl,ah
  460add:	xlat   BYTE PTR ds:[rbx]
  460ade:	ret    
  460adf:	add    bl,ah
  460ae1:	fld    st(3)
  460ae3:	add    al,ch
  460ae5:	fcmovb st,st(0)
  460ae7:	add    ah,ah
  460ae9:	fmul   st(4),st
  460aeb:	add    cl,ah
  460aed:	(bad)  
  460aef:	add    ah,ah
  460af1:	(bad)  
  460af3:	add    dl,ah
  460af5:	(bad)  
  460af7:	add    al,ch
  460af9:	(bad)  
  460afb:	add    al,ah
  460afd:	(bad)  
  460aff:	add    bh,ah
  460b01:	loopne 0x460ac5
  460b03:	add    bl,ch
  460b05:	loopne 0x460ac9
  460b07:	add    ah,ah
  460b09:	loope  0x460ad6
  460b0b:	add    ah,ch
  460b0d:	in     al,0xcb
  460b0f:	add    ah,ah
  460b11:	loopne 0x460ae6
  460b13:	add    dl,ch
  460b15:	in     al,0xd3
  460b17:	add    ah,ah
  460b19:	jrcxz  0x460af9
  460b1b:	add    bl,ch
  460b1d:	in     eax,0xdb
  460b1f:	add    bh,ch
  460b21:	jmp    0xffffffffe9310c00
  460b26:	fild   WORD PTR [rax]
  460b28:	in     eax,dx
  460b29:	jmp    0xffffffffed380c0d
  460b2e:	fild   WORD PTR [rax]
  460b30:	(bad)  
  460b32:	loopne 0x460b34
  460b34:	out    0xe4,eax
  460b36:	loopne 0x460b38
  460b38:	jmp    0xffffffffec46f225
  460b3d:	(bad)  
  460b3e:	in     eax,0x0
  460b40:	out    dx,al
  460b41:	in     al,dx
  460b42:	in     al,0x0
  460b44:	jmp    0x460b31
  460b46:	jmp    0xffffffffe931f84b
  460b4b:	add    dh,ch
  460b4d:	in     eax,dx
  460b4e:	(bad)  
  460b4f:	add    al,dh
  460b51:	(bad)  
  460b52:	loope  0x460b54
  460b54:	lock out dx,eax
  460b56:	loopne 0x460b58
  460b58:	icebp  
  460b59:	out    dx,eax
  460b5a:	in     al,0x0
  460b5c:	icebp  
  460b5d:	in     eax,dx
  460b5e:	(bad)  
  460b5f:	add    ch,dh
  460b61:	icebp  
  460b62:	(bad)  
  460b63:	add    dl,dh
  460b65:	repz in al,dx
  460b67:	add    dl,bh
  460b69:	hlt    
  460b6a:	jmp    0x460b6c
  460b6c:	cmc    
  460b6d:	repz repnz add al,bh
  460b71:	div    cl
  460b73:	add    bl,bh
  460b75:	clc    
  460b76:	repnz add cl,bh
  460b79:	clc    
  460b7a:	hlt    
  460b7b:	add    ah,bh
  460b7d:	cld    
  460b7e:	hlt    
	...
  460b8f:	add    bl,dh
  460b91:	shl    DWORD PTR [rsi+rbx*2+0x74],1
  460b95:	movabs ds:0xf4,eax
	...
  460bae:	add    BYTE PTR [rax],al
  460bb0:	fdivr  QWORD PTR [rdx+0x2]
  460bb3:	(bad)  
  460bb4:	(bad)  
  460bb5:	xor    eax,DWORD PTR [rcx+rbp*8+0x0]
	...
  460bd0:	mov    edi,0x4839480f
  460bd5:	rex.W
  460bd6:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
  460bf0:	lods   eax,DWORD PTR ds:[rsi]
  460bf1:	cmovs  edi,DWORD PTR [rcx]
  460bf4:	cmp    DWORD PTR [rdi],ebp
  460bf6:	(bad)  
  460bf7:	mov    dh,bl
	...
  460c0d:	add    BYTE PTR [rax],al
  460c0f:	add    BYTE PTR [rbp+0x39393941],bl
  460c15:	(bad)  
  460c16:	cmp    DWORD PTR [rax+0xef],eax
	...
  460c30:	cdq    
  460c31:	sbb    al,0x25
  460c33:	cmp    QWORD PTR [rdi],rsp
  460c36:	and    BYTE PTR [rdi-0x7],ah
	...
  460c4d:	add    BYTE PTR [rax],al
  460c4f:	fist   WORD PTR [rsi+0x27483939]
  460c55:	(bad)  
  460c56:	rex.W pop rcx
  460c58:	std    
	...
  460c69:	add    BYTE PTR [rax],al
  460c6b:	repz out 0xef,al
  460c6e:	add    dl,dl
  460c70:	xchg   ebp,eax
  460c71:	(bad)  
  460c72:	sub    rax,0x55202748
  460c78:	out    0x0,eax
	...
  460c86:	sti    
  460c87:	add    BYTE PTR [rax],al
  460c89:	add    BYTE PTR [rax],al
  460c8b:	mov    ebx,0xccd5bfa9
  460c90:	xchg   edx,eax
  460c91:	and    BYTE PTR [rax+0x2d],cl
  460c94:	es es rex.W push rbx
  460c98:	(bad)  
	...
  460ca5:	fidiv  WORD PTR [rbp+rdx*4+0x0]
  460ca9:	add    bh,ch
  460cab:	mov    ebx,0xe2791391
  460cb0:	xchg   edx,eax
  460cb1:	(bad)  
  460cb2:	rex.W
  460cb3:	rex.W
  460cb4:	es cmp DWORD PTR es:[rsi],ebx
  460cb8:	fdiv   st(6),st
  460cba:	cli    
  460cbb:	cli    
	...
  460cc4:	out    0x72,eax
  460cc6:	(bad)  
  460cc7:	mov    r11b,0x0
  460cca:	add    bl,dh
  460ccc:	(bad)  
  460ccd:	mov    edi,0x1e95900d
  460cd2:	rex.W (bad) 
  460cd4:	(bad)  
  460cd5:	cmp    DWORD PTR es:[rdi],edx
  460cd8:	mov    edi,0x8d68119f
  460cdd:	test   al,0x0
  460cdf:	add    BYTE PTR [rax],al
  460ce1:	add    BYTE PTR [rax],al
  460ce3:	repz mov al,0x41
  460ce6:	and    al,0x39
  460ce8:	push   rsp
  460ce9:	ret    0x0
  460cec:	add    dh,ah
  460cee:	mov    dl,0xc3
  460cf0:	ins    BYTE PTR es:[rdi],dx
  460cf1:	(bad)  
  460cf2:	cmp    QWORD PTR [rdi],rsp
  460cf5:	(bad)  
  460cf6:	cmp    DWORD PTR [rcx],ebx
  460cf8:	scas   eax,DWORD PTR es:[rdi]
  460cf9:	mov    esp,0xe6e6d194
  460cfe:	add    BYTE PTR [rax],al
  460d00:	add    BYTE PTR [rax],al
  460d02:	sti    
  460d03:	fcom   QWORD PTR [rbx+0x39]
  460d06:	rex.W
  460d07:	rex.W (bad) 
  460d09:	adc    bl,dl
  460d0b:	out    0xd2,eax
  460d0d:	mov    edi,0x50397de2
  460d12:	push   rax
  460d13:	push   rax
  460d14:	rex.W
  460d15:	rex.W
  460d16:	cmp    QWORD PTR [rbx],rdx
  460d19:	mov    esp,0x0
  460d1e:	add    BYTE PTR [rax],al
  460d20:	add    BYTE PTR [rax],al
  460d22:	(bad)  
  460d23:	test   eax,0x2f394106
  460d28:	(bad)  
  460d29:	(bad)  
  460d2a:	fdivr  DWORD PTR [rdx+0xe]
  460d2d:	movsxd ebx,eax
  460d2f:	adc    al,0x50
  460d31:	rex.W
  460d32:	rex.W push rax
  460d34:	push   rax
  460d35:	sub    eax,0xe572392f
  460d3a:	(bad)  
  460d3c:	add    BYTE PTR [rax],al
  460d3e:	add    BYTE PTR [rax],al
  460d40:	add    BYTE PTR [rax],al
  460d42:	shl    BYTE PTR [rcx+rdi*1+0x2b],1
  460d46:	cmp    QWORD PTR [rdi-0x3d],rdx
  460d4a:	jge    0x460d65
  460d4c:	rex.B
  460d4d:	mov    r13d,0x392d2593
  460d53:	push   rax
  460d54:	rex.W
  460d55:	rex.W
  460d56:	rex.W push rax
  460d58:	mov    esp,0xd2d2c3
  460d5d:	add    BYTE PTR [rax],al
  460d5f:	add    BYTE PTR [rax],al
  460d61:	(bad)  
  460d62:	leave  
  460d63:	push   rbp
  460d64:	sub    rbp,QWORD PTR [rbx]
  460d67:	cmp    DWORD PTR [rdi-0x28],edi
  460d6a:	push   rcx
  460d6b:	(bad)  
  460d6c:	(bad)  
  460d6d:	(bad)  
  460d6e:	xchg   edx,eax
  460d6f:	mov    dh,0x4
  460d71:	sub    eax,0x2d483939
  460d76:	cmp    DWORD PTR [rdx-0x28],ebx
  460d79:	js     0x460d4f
  460d7b:	xchg   ecx,eax
  460d7c:	std    
  460d7d:	add    BYTE PTR [rax],al
  460d7f:	add    BYTE PTR [rax],al
  460d81:	rep stos DWORD PTR es:[rdi],eax
  460d83:	rex.B
  460d84:	sub    rbp,QWORD PTR [rbx]
  460d87:	cmp    DWORD PTR [rbx+0x393933c5],eax
  460d8d:	pop    r14
  460d8f:	(bad)
  460d92:	rex.W
  460d93:	sub    rax,0xffffffff8b9d4148
  460d99:	adc    dl,ah
  460d9b:	imul   eax,edx,0x0
  460da1:	stc    
  460da2:	add    BYTE PTR [rcx+0x2b],0x2b
  460da6:	sub    edi,DWORD PTR [rcx]
  460da8:	(bad)  
  460da9:	leave  
  460daa:	or     edx,DWORD PTR [rdi]
  460dac:	cmp    DWORD PTR [rcx],edi
  460dae:	push   rsp
  460daf:	mov    ah,0x51
  460db1:	push   rax
  460db2:	rex.W
  460db3:	rex.W
  460db4:	rex.W push rax
  460db6:	pop    rsi
  460db7:	mov    ecx,0x5fe05c51
  460dbc:	test   ebp,edi
  460dbe:	add    BYTE PTR [rax],al
  460dc0:	add    ch,ah
  460dc2:	push   rbp
  460dc3:	(bad)  
  460dc4:	sub    ebp,DWORD PTR [rbx]
  460dc6:	(bad)  
  460dc7:	cmp    DWORD PTR [rsi-0x27],esp
  460dca:	cmp    DWORD PTR [rax+0x50],r9d
  460dce:	push   rcx
  460dcf:	mov    ah,0x54
  460dd1:	(bad)  
  460dd2:	sub    rdx,QWORD PTR [rax+0xa]
  460dd6:	xchg   edi,eax
  460dd7:	mov    ah,0x2
  460dd9:	ins    DWORD PTR es:[rdi],dx
  460dda:	enter  0x5455,0xd2
  460dde:	add    BYTE PTR [rax],al
  460de0:	add    BYTE PTR [rdi+0x2b484818],bh
  460de6:	sub    edi,DWORD PTR [rcx]
  460de8:	movsxd ebx,ecx
  460dea:	push   rbx
  460deb:	cmp    DWORD PTR [rcx],edi
  460ded:	cmp    DWORD PTR [rbp-0x4b],edx
  460df0:	push   rbx
  460df1:	push   rax
  460df2:	cmp    DWORD PTR [rcx],edi
  460df4:	or     r8d,r13d
  460df7:	mov    BYTE PTR [rip+0x1745c572],ah        # 0x178bd36f
  460dfd:	xchg   BYTE PTR [rax],al
  460dff:	add    BYTE PTR [rax],al
  460e01:	lahf   
  460e02:	(bad)  
  460e03:	and    al,0x39
  460e05:	sub    rdi,QWORD PTR [rcx]
  460e08:	outs   dx,BYTE PTR ds:[rsi]
  460e09:	fmul   DWORD PTR [rdi]
  460e0b:	add    dl,BYTE PTR [rbx+0x6e]
  460e0e:	push   0xffffffffffffffb7
  460e10:	push   rax
  460e11:	cmp    DWORD PTR [rax+0x48],edx
  460e14:	(bad)  
  460e15:	push   rsp
  460e16:	loope  0x460e7a
  460e18:	xor    esp,DWORD PTR [rdx-0x38]
  460e1b:	push   rsi
  460e1c:	(bad)  
  460e1d:	push   rcx
  460e1e:	out    dx,eax
  460e1f:	add    ch,ch
  460e21:	mov    DWORD PTR [rcx],edi
  460e23:	cmp    DWORD PTR [rax+0x48],ecx
  460e26:	sub    edi,DWORD PTR [rcx]
  460e28:	outs   dx,BYTE PTR ds:[rsi]
  460e29:	jrcxz  0x460e9c
  460e2b:	or     al,BYTE PTR [rsi+0x17b8a7d8]
  460e31:	cmp    DWORD PTR [rax+0x48],edx
  460e34:	cmp    DWORD PTR [rbx-0x36],edx
  460e37:	jle    0x460dd7
  460e39:	(bad)  
  460e3a:	jrcxz  0x460e97
  460e3c:	sub    ebx,DWORD PTR [rcx]
  460e3e:	ret    
  460e3f:	add    bl,bl
  460e41:	je     0x460e93
  460e43:	and    al,0x48
  460e45:	sub    rdi,QWORD PTR [rcx]
  460e48:	outs   dx,BYTE PTR ds:[rsi]
  460e49:	jrcxz  0x460e15
  460e4b:	mov    dh,0xa6
  460e4d:	test   eax,0x48178cd8
  460e52:	rex.W
  460e53:	rex.W
  460e54:	rex.W (bad) 
  460e56:	lods   al,BYTE PTR ds:[rsi]
  460e57:	int    0xb1
  460e59:	(bad)  
  460e5a:	in     eax,0x70
  460e5c:	rex.W sbb al,0x9d
  460e5f:	add    bl,bl
  460e61:	gs rex.W (bad) 
  460e64:	cmp    DWORD PTR [rax+0x2b],ecx
  460e67:	cmp    DWORD PTR [rbx-0x27],esp
  460e6a:	jae    0x460df4
  460e6c:	scas   al,BYTE PTR es:[rdi]
  460e6d:	scas   al,BYTE PTR es:[rdi]
  460e6e:	xchg   DWORD PTR [rbx+0x39],edx
  460e71:	cmp    QWORD PTR [rcx],rdi
  460e74:	cmp    DWORD PTR [rcx],edi
  460e76:	push   rsi
  460e77:	xchg   edi,eax
  460e78:	(bad)
  460e7b:	jo     0x460ea8
  460e7d:	cmp    DWORD PTR [rdx+0x5065e3fd],eax
  460e83:	(bad)  
  460e84:	cmp    DWORD PTR [rax+0x39],ecx
  460e87:	cmp    DWORD PTR [rbx-0x30],edx
  460e8a:	jb     0x460e92
  460e8c:	(bad)  
  460e8d:	sbb    DWORD PTR [rcx],edi
  460e8f:	(bad)  
  460e90:	cmp    DWORD PTR [rcx],edi
  460e92:	cmp    DWORD PTR [rdi],edx
  460e94:	cmp    DWORD PTR [rdi+0x2b],ecx
  460e97:	and    eax,0x45b78e07
  460e9c:	cmp    DWORD PTR [rcx],edi
  460e9e:	pop    rbx
  460e9f:	out    dx,eax
  460ea0:	fidiv  DWORD PTR [rdx+0x39]
  460ea3:	sub    eax,0x17393939
  460ea8:	(bad)  
  460ea9:	lods   al,BYTE PTR ds:[rsi]
  460eaa:	stos   BYTE PTR es:[rdi],al
  460eab:	rex.B and al,0x24
  460eae:	cmp    DWORD PTR [rcx],edi
  460eb0:	cmp    DWORD PTR [rcx],edi
  460eb2:	push   rax
  460eb3:	(bad)  
  460eb4:	sub    rax,0xffffffffc3623948
  460eba:	cmp    DWORD PTR [rcx],0xe7633948
  460ec0:	jmp    0x507f155a
  460ec5:	push   rax
  460ec6:	cmp    DWORD PTR [rax+0x50],ecx
  460ec9:	(bad)  
  460eca:	loopne 0x460f2a
  460ecc:	(bad)  
  460ecd:	cmp    QWORD PTR [rcx],rdi
  460ed0:	cmp    DWORD PTR [rax+0x39],edx
  460ed3:	sub    rax,0xffffffffc30b4150
  460ed9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  460eda:	(bad)  
  460edb:	cmp    DWORD PTR [rax+0x50],ecx
  460ede:	push   0xffffffffffffffe7
  460ee0:	add    dl,al
  460ee2:	or     al,0x41
  460ee4:	cmp    DWORD PTR [rax+0x50],ecx
  460ee7:	cmp    DWORD PTR [rax+0xa],edx
  460eea:	mov    dh,0xa6
  460eec:	(bad)  
  460eed:	(bad)  
  460eee:	cmp    DWORD PTR [rax+0x39],edx
  460ef1:	(bad)  
  460ef2:	cmp    DWORD PTR [rax+0x2f],ecx
  460ef5:	rex.B (bad) 
  460ef7:	xchg   edx,eax
  460ef8:	mov    dh,0x54
  460efa:	rex.B (bad) 
  460efc:	push   rax
  460efd:	add    DWORD PTR [rdi-0x6008ff02],ebx
  460f03:	or     edi,DWORD PTR [rcx]
  460f05:	cmp    DWORD PTR [rcx],edi
  460f07:	cmp    DWORD PTR [rcx],edi
  460f09:	rex.B push 0xffffffffffffffd0
  460f0c:	xchg   BYTE PTR [rdi],cl
  460f0e:	(bad)  
  460f0f:	xor    eax,0x41391739
  460f14:	(bad)  
  460f15:	pop    rsp
  460f16:	lods   al,BYTE PTR ds:[rsi]
  460f17:	(bad)
  460f1a:	xor    eax,0xfe925141
  460f1f:	add    BYTE PTR [rax],al
  460f21:	add    bl,bl
  460f23:	mov    cl,0x57
  460f25:	xor    eax,DWORD PTR [rbx]
  460f27:	add    ecx,DWORD PTR [rbx]
  460f29:	push   rcx
  460f2a:	imul   edi,DWORD PTR [rdi+0x1752a6ef],0x33
  460f31:	xor    esi,DWORD PTR [rbx]
  460f33:	push   rcx
  460f34:	mov    eax,ebp
  460f36:	mov    ah,0x6e
  460f38:	add    al,0x32
  460f3a:	add    al,0x5c
  460f3c:	lods   eax,DWORD PTR ds:[rsi]
  460f3d:	test   DWORD PTR [rax],0x0
  460f43:	add    ah,dh
  460f45:	(bad)  
  460f46:	ret    0xd3c0
  460f49:	out    dx,eax
  460f4a:	add    BYTE PTR [rax],al
  460f4c:	add    BYTE PTR [rax],al
  460f4e:	jmp    0xffffffffdaf8c212
  460f53:	cmc    
  460f54:	(bad)  
  460f55:	loop   0x460fd1
  460f57:	jns    0x460edf
  460f59:	(bad)  
  460f5a:	mov    esp,0xf4
	...
  460f73:	add    BYTE PTR [rax],al
  460f75:	add    bl,bh
  460f77:	(bad)  
  460f79:	out    dx,eax
  460f7a:	add    BYTE PTR [rax],al
  460f7c:	add    BYTE PTR [rax],al
  460f7e:	add    BYTE PTR [rax],al
  460f80:	(bad)  
  460f81:	inc    DWORD PTR [rcx]
  460f83:	(bad)  
  460f84:	(bad)  
  460f85:	inc    DWORD PTR [rax]
  460f87:	(bad)  
  460f88:	(bad)  
  460f89:	inc    DWORD PTR [rax]
  460f8b:	(bad)  
  460f8c:	(bad)  
  460f8d:	inc    DWORD PTR [rax]
  460f8f:	jg     0x460f90
  460f91:	inc    DWORD PTR [rax]
  460f93:	jg     0x460f94
  460f95:	inc    DWORD PTR [rax]
  460f97:	jg     0x460f98
  460f99:	inc    BYTE PTR [rax]
  460f9b:	jg     0x460f9c
  460f9d:	loop   0x460f9f
  460f9f:	jg     0x460f9e
  460fa1:	loopne 0x460fa3
  460fa3:	jg     0x460f9d
  460fa5:	rol    BYTE PTR [rax],0xf
  460fa8:	lock (bad) 
  460faa:	add    BYTE PTR [rbx],al
  460fac:	loopne 0x460fe6
  460fae:	add    BYTE PTR [rbx],al
  460fb0:	rol    BYTE PTR [rax],0x0
  460fb3:	(bad)  
  460fb4:	rol    BYTE PTR [rax],0x0
  460fb7:	xadd   BYTE PTR [rax],al
  460fba:	add    BYTE PTR [rdi],cl
  460fbc:	add    BYTE PTR [rax],0x0
  460fbf:	(bad)  
  460fc0:	add    BYTE PTR [rax],0x0
  460fc3:	(bad)  
  460fc4:	add    BYTE PTR [rax],0x0
  460fc7:	add    eax,DWORD PTR [rax-0x7ffd0000]
  460fcd:	add    BYTE PTR [rax],al
  460fcf:	add    eax,DWORD PTR [rax+0x10000]
  460fd5:	add    BYTE PTR [rax],al
  460fd7:	add    DWORD PTR [rax],eax
  460fd9:	add    BYTE PTR [rax],al
  460fdb:	add    DWORD PTR [rax],eax
	...
  460fe9:	add    BYTE PTR [rax],al
  460feb:	add    BYTE PTR [rax-0x80000000],al
  460ff1:	add    BYTE PTR [rax],al
  460ff3:	add    eax,eax
  460ff5:	add    BYTE PTR [rax],al
  460ff7:	add    esi,eax
  460ff9:	cmp    al,0x0
  460ffb:	ud0    edi,edi
  460ffe:	cld    
  460fff:	(bad)  
  461000:	sub    BYTE PTR [rax],al
  461002:	add    BYTE PTR [rax],al
  461004:	xor    BYTE PTR [rax],al
  461006:	add    BYTE PTR [rax],al
  461008:	(bad)  
  461009:	add    BYTE PTR [rax],al
  46100b:	add    BYTE PTR [rcx],al
  46100d:	add    BYTE PTR [rax],cl
  46100f:	add    BYTE PTR [rax],al
  461011:	add    BYTE PTR [rax],al
  461013:	add    BYTE PTR [rax],al
  461015:	or     DWORD PTR [rax],eax
	...
  46101f:	add    BYTE PTR [rax],al
  461021:	add    DWORD PTR [rax],eax
  461023:	add    BYTE PTR [rax],al
  461025:	add    DWORD PTR [rax],eax
  461027:	add    BYTE PTR [rax],al
  461029:	add    BYTE PTR [rax],al
  46102b:	add    BYTE PTR [rsi+0x4d],bl
  46102e:	cmp    BYTE PTR [rax],al
  461030:	pop    rcx
  461031:	push   rbx
  461032:	xor    eax,0x2c5b7900
  461037:	add    BYTE PTR [rdi+0x53],ah
  46103a:	xor    eax,DWORD PTR [rax]
  46103c:	ins    DWORD PTR es:[rdi],dx
  46103d:	push   rbx
  46103e:	xor    eax,DWORD PTR [rax]
  461040:	ins    BYTE PTR es:[rdi],dx
  461041:	pop    rcx
  461042:	add    BYTE PTR ss:[rdi+rdx*2+0x38],ah
  461047:	add    BYTE PTR [rbx+0x55],ch
  46104a:	cmp    al,BYTE PTR [rax]
  46104c:	pop    dx
  46104e:	cmp    eax,0x395b6e00
  461053:	add    BYTE PTR [rbx+0x56],dh
  461056:	xor    al,BYTE PTR [rax]
  461058:	jge    0x4610b0
  46105a:	xor    al,0x0
  46105c:	je     0x4610b9
  46105e:	xor    al,0x0
  461060:	jp     0x4610bd
  461062:	xor    eax,DWORD PTR [rax]
  461064:	je     0x4610bc
  461066:	cmp    eax,DWORD PTR [rax]
  461068:	jnp    0x4610c0
  46106a:	cmp    DWORD PTR [rax],eax
  46106c:	je     0x4610cb
  46106e:	cmp    eax,DWORD PTR [rax]
  461070:	jnp    0x4610ce
  461072:	cmp    al,BYTE PTR [rax]
  461074:	jge    0x4610d8
  461076:	sub    al,0x0
  461078:	outs   dx,BYTE PTR ds:[rsi]
  461079:	movsxd esi,DWORD PTR [rax+rax*1]
  46107c:	jbe    0x4610e1
  46107e:	add    BYTE PTR ss:[rax+riz*2+0x33],bh
  461083:	add    BYTE PTR [rbp+0x61],dh
  461086:	cmp    eax,0x3b627b00
  46108b:	add    BYTE PTR [rdi+0x68],bh
  46108e:	cmp    eax,DWORD PTR [rax]
  461090:	imul   ebx,DWORD PTR [rax+0x41],0x425b7700
  461097:	add    BYTE PTR [rbx+0x60],ch
  46109a:	add    BYTE PTR [r9+r12*2+0x41],r14b
  46109f:	add    BYTE PTR [rbx+riz*2+0x43],bh
  4610a3:	add    BYTE PTR [rsi+0x69],bh
  4610a6:	rex.XB add BYTE PTR [r15+0x63],sil
  4610aa:	rex.WB add BYTE PTR [r11+rbp*2+0x4b],dil
  4610af:	add    BYTE PTR [rcx+rsi*2+0x4e],bh
  4610b3:	add    BYTE PTR [rsi+0x6a],ch
  4610b6:	push   rsp
  4610b7:	add    BYTE PTR [rbx+rbp*2+0x55],bh
  4610bb:	add    BYTE PTR [rdx+0x71],bh
  4610be:	pop    rcx
  4610bf:	add    BYTE PTR [rsi+rsi*2+0x64],bh
  4610c3:	add    BYTE PTR [rbp+rbx*2+0x5c80002c],al
  4610ca:	xor    al,BYTE PTR [rax]
  4610cc:	mov    DWORD PTR [rbx+0x33],ebx
  4610cf:	add    BYTE PTR [rax-0x7cffc6aa],al
  4610d5:	pop    rsp
  4610d6:	cmp    al,BYTE PTR [rax]
  4610d8:	lea    ebx,[rdi+0x3a]
  4610db:	add    BYTE PTR [rdi+rbx*2+0x62830036],dl
  4610e2:	add    BYTE PTR cs:[rdx+riz*2+0x6986002d],cl
  4610ea:	sub    eax,0x2d698b00
  4610ef:	add    BYTE PTR [rdx-0x65ffd29b],dl
  4610f5:	movsxd ebp,DWORD PTR [rsi]
  4610f7:	add    BYTE PTR [rax+rbp*2+0x6284002e],dl
  4610fe:	xor    al,0x0
  461100:	mov    esp,DWORD PTR [rbx+rsi*1+0x0]
  461104:	test   BYTE PTR [rax+0x31],ch
  461107:	add    BYTE PTR [rbx-0x7cffce98],cl
  46110d:	movsxd edi,DWORD PTR [rdx]
  46110f:	add    BYTE PTR [rbx-0x73ffc69d],cl
  461115:	imul   edi,DWORD PTR [rip+0x32649200],0x31649900        # 0x32aaa31f
  46111f:	add    BYTE PTR [rbx-0x66ffcd98],dl
  461125:	imul   esi,DWORD PTR [rbx],0x39619300
  46112b:	add    BYTE PTR [rax-0x6dffc69e],bl
  461131:	push   0x39
  461133:	add    BYTE PTR [rcx-0x7bffc796],bl
  461139:	push   0x46
  46113b:	add    BYTE PTR [rbx-0x7effb990],cl
  461141:	jo     0x46118b
  461143:	add    BYTE PTR [rax+rsi*2+0x6781004c],cl
  46114a:	push   rdx
  46114b:	add    BYTE PTR [rdx-0x73ffac94],al
  461151:	outs   dx,DWORD PTR ds:[rsi]
  461152:	push   rax
  461153:	add    BYTE PTR [rcx+rsi*2+0x738b0054],al
  46115a:	push   rdx
  46115b:	add    BYTE PTR [rsp+rdi*2+0x758c0055],cl
  461162:	pop    rbp
  461163:	add    BYTE PTR [rcx-0x6dffa484],cl
  461169:	jnp    0x4611bf
  46116b:	add    BYTE PTR [rsi+rdi*2+0x7c930051],bl
  461172:	pop    rdx
  461173:	add    BYTE PTR [rcx-0x78ffa582],bl
  461179:	jbe    0x4611df
  46117b:	add    BYTE PTR [rbx-0x70ff9d84],dl
  461181:	sbb    DWORD PTR [rsi+0x0],0x5d8294
  461188:	fwait
  461189:	sbb    DWORD PTR [rsi+0x0],0xffffffa2
  46118d:	test   DWORD PTR [rbp+0x0],ebx
  461190:	mov    al,BYTE PTR [rcx-0x7d6dff9b]
  461196:	add    BYTE PTR gs:[rbp-0x61ff9c7e],bl
  46119d:	mov    ah,BYTE PTR [rdi+0x0]
  4611a0:	xchg   ebx,eax
  4611a1:	sub    BYTE PTR [rdi+0x0],0x9b
  4611a5:	(bad)  
  4611a6:	push   0x0
  4611a8:	xchg   ebx,eax
  4611a9:	mov    ch,BYTE PTR [rdx+0x0]
  4611ac:	popf   
  4611ad:	mov    DWORD PTR [rax+rax*1-0x63],ebp
  4611b1:	xchg   edx,eax
  4611b2:	imul   eax,DWORD PTR [rax],0xffffff88
  4611b5:	xchg   BYTE PTR [rcx+0x0],bh
  4611b8:	xchg   ebx,eax
  4611b9:	test   BYTE PTR [rdx+0x0],dh
  4611bc:	xchg   esp,eax
  4611bd:	mov    esi,DWORD PTR [rbx+0x0]
  4611c0:	fwait
  4611c1:	mov    WORD PTR [rax+rax*1-0x70],?
  4611c5:	mov    DWORD PTR [rax+rax*1-0x61],edi
  4611c9:	lea    edi,[rbx+0x0]
  4611cc:	cwde   
  4611cd:	xchg   edx,eax
  4611ce:	jns    0x4611d0
  4611d0:	movabs eax,ds:0xa9006d8aa200648b
  4611d9:	(bad)  
  4611da:	outs   dx,BYTE PTR ds:[rsi]
  4611db:	add    BYTE PTR [rdx-0x5cff926d],ch
  4611e1:	lea    esi,[rax+rax*1-0x57]
  4611e5:	xchg   esp,eax
  4611e6:	jae    0x4611e8
  4611e8:	stos   DWORD PTR es:[rdi],eax
  4611e9:	fwait
  4611ea:	jno    0x4611ec
  4611ec:	movabs ds:0xa6007a94aa007a94,eax
  4611f5:	(bad)  
  4611f6:	jl     0x4611f8
  4611f8:	stos   DWORD PTR es:[rdi],eax
  4611f9:	(bad)  
  4611fa:	jl     0x4611fc
  4611fc:	mov    al,0x96
  4611fe:	jno    0x461200
  461200:	mov    ah,0x9c
  461202:	jnp    0x461204
  461204:	lods   al,BYTE PTR ds:[rsi]
  461205:	movabs al,ds:0x888b007da5b0007b
  46120e:	xchg   BYTE PTR [rax],al
  461210:	cwde   
  461211:	pop    QWORD PTR [rcx-0x796b6600]
  461217:	add    BYTE PTR [rbp-0x48ff7e67],ah
  46121d:	lahf   
  46121e:	mov    DWORD PTR [rax],eax
  461220:	test   eax,0xae00929c
  461225:	movabs eax,ds:0xa4bf0086a3b20089
  46122e:	add    DWORD PTR [rax],0xffffffb5
  461231:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  461232:	lea    eax,[rax]
  461234:	mov    eax,0xb50088a4
  461239:	test   al,0x8a
  46123b:	add    BYTE PTR [rdx-0x50ff7458],bh
  461241:	movabs ds:0xabbc0093aab30096,al
  46124a:	xchg   ebx,eax
  46124b:	add    BYTE PTR [rdi-0x41ff6052],dh
  461251:	scas   eax,DWORD PTR es:[rdi]
  461252:	(bad)  
  461253:	add    BYTE PTR [rbp-0x4cff6e50],bh
  461259:	mov    bl,0x9d
  46125b:	add    BYTE PTR [rcx+rsi*4-0x4741ff64],bh
  461262:	popf   
  461263:	add    BYTE PTR [rax-0x4dff5e5a],ch
  461269:	lods   eax,DWORD PTR ds:[rsi]
  46126a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  46126b:	add    BYTE PTR [rsi-0x42ff5c4d],dh
  461271:	mov    ch,0xa0
  461273:	add    BYTE PTR [rdx-0x48ff554d],dh
  461279:	mov    edx,0xb4b600af
  46127e:	mov    cl,0x0
  461280:	mov    ecx,0xbe00b2b4
  461285:	mov    ebx,0xabc200b7
  46128a:	mov    DWORD PTR [rax],eax
  46128c:	shr    DWORD PTR [rdi-0x4d3bff69],0x91
  461293:	add    cl,cl
  461295:	mov    bl,0x91
  461297:	add    bl,al
  461299:	mov    bl,0x9c
  46129b:	add    dh,cl
  46129d:	mov    dh,0x9c
  46129f:	add    dl,al
  4612a1:	mov    eax,0xbaca009d
  4612a6:	pushf  
  4612a7:	add    cl,dl
  4612a9:	mov    esp,0xbbc8009e
  4612ae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4612af:	add    al,dl
  4612b1:	mov    ebp,0xbfc100a6
  4612b6:	mov    ebp,0xbbbccb00
  4612bb:	add    dh,cl
  4612bd:	ret    0x9c
  4612c0:	rol    ah,cl
  4612c2:	lahf   
  4612c3:	add    ah,cl
  4612c5:	ret    
  4612c6:	test   al,0x0
  4612c8:	(bad)  
  4612c9:	ret    0xa5
  4612cc:	rol    ebp,cl
  4612ce:	test   eax,0xaac6d900
  4612d3:	add    bl,dl
  4612d5:	enter  0xad,0xdb
  4612d9:	int3   
  4612da:	lods   al,BYTE PTR ds:[rsi]
  4612db:	add    ah,cl
  4612dd:	leave  
  4612de:	mov    bl,0x0
  4612e0:	(bad)
  4612e4:	int    0xc8
  4612e6:	mov    ecx,0xb2c3d300
  4612eb:	add    dl,bl
  4612ed:	(bad)  
  4612ee:	mov    cl,0x0
  4612f0:	(bad)  
  4612f1:	retf   
  4612f2:	mov    dl,0x0
  4612f4:	fcmove st,st(4)
  4612f6:	mov    dl,0x0
  4612f8:	(bad)  
  4612f9:	(bad)  
  4612fa:	mov    edi,0xbbccd300
  4612ff:	add    ah,bl
  461301:	int    0xbb
  461303:	add    bl,dl
  461305:	shl    DWORD PTR [rdi-0x4a2d2400],1
  46130b:	add    al,dl
  46130d:	sar    DWORD PTR [rbx-0x412e2500],1
  461313:	add    bl,bl
  461315:	fnstcw WORD PTR [rbp-0x4d311e00]
  46131b:	add    al,ah
  46131d:	shl    DWORD PTR [rbp-0x4b251c00],cl
  461323:	add    al,ch
  461325:	fidiv  DWORD PTR [rdi-0x442a1e00]
  46132b:	add    dl,ah
  46132d:	fnstcw WORD PTR [rbx-0x431e1600]
  461333:	add    dh,al
  461335:	ret    0xc5
  461338:	(bad)  
  461339:	mov    bl,0x0
  46133c:	int3   
  46133d:	retf   0xc4
  461340:	(bad)  
  461341:	iret   
  461342:	retf   0xd100
  461345:	retf   
  461346:	(bad)
  461349:	(bad)  
  46134a:	retf   
  46134b:	add    ah,bl
  46134d:	rol    ebx,cl
  46134f:	add    ah,dl
  461351:	ror    esp,1
  461353:	add    bl,bl
  461355:	(bad)  
  461356:	retf   0xda00
  461359:	fxch   st(3)
  46135b:	add    ch,dl
  46135d:	(bad)  
  46135e:	rol    DWORD PTR [rax],cl
  461360:	(bad)  
  461362:	rol    BYTE PTR [rax],1
  461364:	fstp   st(2)
  461366:	rol    BYTE PTR [rax],cl
  461368:	(bad)  
  461369:	xlat   BYTE PTR ds:[rbx]
  46136a:	fadd   DWORD PTR [rax]
  46136c:	(bad)  
  46136e:	fild   DWORD PTR [rax]
  461370:	loopne 0x461348
  461372:	rol    DWORD PTR [rax],0xe4
  461375:	fcmovb st,st(2)
  461377:	add    bl,ch
  461379:	fcmovnb st,st(1)
  46137b:	add    bl,ah
  46137d:	xlat   BYTE PTR ds:[rbx]
  46137e:	enter  0xe200,0xda
  461382:	retf   
  461383:	add    bl,ch
  461385:	fmul   st(1),st
  461387:	add    bl,dh
  461389:	(bad)  
  46138b:	add    dl,ah
  46138d:	fst    st(3)
  46138f:	add    dh,bl
  461391:	jrcxz  0x46136f
  461393:	add    bl,ch
  461395:	jrcxz  0x46135b
  461397:	add    cl,ch
  461399:	jrcxz  0x461365
  46139b:	add    bh,ch
  46139d:	call   0xffffffffe9391471
  4613a2:	retf   0xe400
  4613a5:	in     al,0xd4
  4613a7:	add    bl,ch
  4613a9:	in     al,0xd2
  4613ab:	add    ch,ch
  4613ad:	jmp    0xffffffffe42a1485
  4613b2:	fild   DWORD PTR [rax]
  4613b4:	jmp    0x46139b
  4613b6:	fild   DWORD PTR [rax]
  4613b8:	jmp    0xfffffffff446f1a8
  4613bd:	out    0xd0,al
  4613bf:	add    ah,dh
  4613c1:	jmp    0x461397
  4613c3:	add    al,bh
  4613c5:	out    dx,al
  4613c6:	rol    DWORD PTR [rax],cl
  4613c8:	repz in al,dx
  4613ca:	fadd   QWORD PTR [rax]
  4613cc:	stc    
  4613cd:	in     eax,dx
  4613ce:	fiadd  WORD PTR [rax]
  4613d0:	in     al,dx
  4613d1:	lock (bad) 
  4613d3:	add    ah,bh
  4613d5:	neg    edx
  4613d7:	add    dh,ah
  4613d9:	in     al,0xe3
  4613db:	add    dl,ch
  4613dd:	out    0xe2,al
  4613df:	add    ah,ch
  4613e1:	in     eax,dx
  4613e2:	out    0x0,al
  4613e4:	jmp    0x4613d0
  4613e6:	jmp    0xffffffffe23305eb
  4613eb:	add    cl,dh
  4613ed:	out    dx,al
  4613ee:	jmp    0x4613f0
  4613f0:	stc    
  4613f1:	out    dx,eax
  4613f2:	out    dx,al
  4613f3:	add    ah,ch
  4613f5:	icebp  
  4613f6:	jrcxz  0x4613f8
  4613f8:	cmc    
  4613f9:	repnz in al,0x0
  4613fc:	cli    
  4613fd:	hlt    
  4613fe:	jrcxz  0x461400
  461400:	std    
  461401:	cli    
  461402:	jrcxz  0x461404
  461404:	hlt    
  461405:	bnd jmp 0x461408
  461408:	cli    
  461409:	cmc    
  46140a:	(bad)  
  46140b:	add    bl,dh
  46140d:	clc    
  46140e:	call   0xffffffffec441113
  461413:	add    ah,dh
  461415:	repz repnz add cl,bh
  461419:	cmc    
  46141a:	repnz add dh,dh
  46141d:	stc    
  46141e:	repnz add ch,bh
  461421:	sti    
  461422:	hlt    
  461423:	add    ch,bh
  461425:	cld    
  461426:	cli    
	...
  46143f:	add    BYTE PTR [rax],al
  461441:	iret   
  461442:	clc    
  461443:	mov    BYTE PTR [rbp+0x55],dl
  461446:	jno    0x4613d2
  461448:	loopne 0x461442
	...
  46146e:	add    BYTE PTR [rax],al
  461470:	(bad)  
  461471:	cmc    
  461472:	add    ax,0xe10
  461476:	(bad)  
  461477:	or     ebx,DWORD PTR [rsi]
  461479:	(bad)  
  46147a:	clc    
	...
  46149f:	add    bh,dh
  4614a1:	mov    ss,WORD PTR [rcx]
  4614a3:	sub    BYTE PTR [rsi],dh
  4614a5:	ss ss sub BYTE PTR ss:[rip+0xf788],cl        # 0x470c36
	...
  4614ce:	add    BYTE PTR [rax],al
  4614d0:	clc    
  4614d1:	pop    rbx
  4614d2:	or     eax,0x3c363d36
  4614d7:	cmp    al,0x3c
  4614d9:	xor    eax,0xd649
	...
  4614fe:	add    BYTE PTR [rax],al
  461500:	fmul   QWORD PTR [rbx+0xe]
  461503:	cmp    al,0x32
  461505:	ss ss ds ds ss (bad) 
  46150b:	mov    al,0xec
	...
  46152d:	add    BYTE PTR [rax],al
  46152f:	add    dl,dl
  461531:	and    DWORD PTR [rsi],ebx
  461533:	ss cmp eax,0x343e3a2b
  461539:	or     ecx,DWORD PTR ss:[rax+0xc7]
	...
  461560:	mov    eax,0x3136361e
  461565:	ss cmp BYTE PTR ss:[rsp+rdi*1],dh
  46156a:	sub    BYTE PTR [rbx+0xcb],al
	...
  461590:	mov    bl,0x3a
  461592:	sub    BYTE PTR [rax],bh
  461594:	xor    BYTE PTR [rip+0x3c30303c],bh        # 0x3c7645d6
  46159a:	sub    DWORD PTR [rsi-0x34],esi
	...
  4615bd:	add    BYTE PTR [rax],al
  4615bf:	loop   0x46156c
  4615c1:	sub    edi,DWORD PTR [rsi+rsi*1]
  4615c4:	xor    BYTE PTR [rip+0x3d383031],bh        # 0x3d7e45fb
  4615ca:	sub    DWORD PTR [rsp+riz*8+0x0],ebp
	...
  4615ee:	add    BYTE PTR [rsi+0x31402bab],ch
  4615f4:	xor    DWORD PTR [rip+0x3c38303c],edi        # 0x3c7e4636
  4615fa:	sub    DWORD PTR [rax-0x8],ebx
	...
  46161d:	add    BYTE PTR [rax],al
  46161f:	xchg   ebx,eax
  461620:	test   eax,0x3c3c3c2b
  461625:	xor    edi,DWORD PTR [rax+rsi*1]
  461628:	cmp    BYTE PTR [rip+0xfffffffff7f85229],bh        # 0xfffffffff83e6857
	...
  461646:	add    BYTE PTR [rax],al
  461648:	icebp  
  461649:	(bad)
  46164c:	(bad)  
  46164d:	add    bh,bh
  46164f:	xchg   ebx,eax
  461650:	stos   DWORD PTR es:[rdi],eax
  461651:	sub    eax,DWORD PTR [rcx+0x3c]
  461654:	xor    al,0x3d
  461656:	xor    al,0x30
  461658:	cmp    BYTE PTR [rcx+rbp*1],bh
  46165b:	rex.WX call 0x461705
	...
  461675:	add    ah,ch
  461677:	add    ch,ch
  461679:	jrcxz  0x461646
  46167b:	loope  0x461677
  46167d:	cld    
  46167e:	xchg   esi,eax
  46167f:	xchg   esp,eax
  461680:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  461681:	sub    edi,DWORD PTR [rdi*1+0x30363d3e]
  461688:	xor    DWORD PTR [rax+rax*2],edi
  46168b:	rex.R loopne 0x461652
	...
  46169e:	add    bh,ch
  4616a0:	repnz (bad) 
  4616a2:	xchg   esi,eax
  4616a3:	out    dx,eax
  4616a4:	add    BYTE PTR [rax],al
  4616a6:	rol    DWORD PTR [rax],1
  4616a8:	nop
  4616a9:	and    ebx,DWORD PTR es:[rbx+rbx*2]
  4616ad:	(bad)  
  4616ae:	std    
  4616af:	cld    
  4616b0:	mov    ?,WORD PTR [rdx]
  4616b2:	sub    eax,0x34333e3d
  4616b7:	xor    BYTE PTR [rsi],dh
  4616b9:	cmp    al,0x40
  4616bb:	(bad)  
  4616bc:	retf   
  4616bd:	out    dx,eax
	...
  4616ce:	add    bh,dh
  4616d0:	test   al,0x45
  4616d2:	adc    BYTE PTR [rdi-0x4],ch
  4616d5:	add    bh,ch
  4616d7:	jrcxz  0x4616ca
  4616d9:	loop   0x461690
  4616db:	data16 or BYTE PTR [rdi],al
  4616de:	imul   esi,esi,0x402c1ba2
  4616e4:	cmp    BYTE PTR ds:[rax],dh
  4616e7:	xor    BYTE PTR [rcx+rsi*1],dh
  4616ea:	cmp    bh,BYTE PTR [rdx]
  4616ec:	mov    al,0x0
  4616ee:	hlt    
  4616ef:	fsub   st,st(5)
  4616f1:	clc    
  4616f2:	cli    
	...
  4616fb:	add    BYTE PTR [rax],al
  4616fd:	add    cl,dh
  4616ff:	(bad)  
  461700:	sub    BYTE PTR [rcx],r14b
  461703:	sbb    BYTE PTR [rcx-0x11000000],ah
  461709:	scas   al,BYTE PTR es:[rdi]
  46170a:	retf   
  46170b:	clc    
  46170c:	jg     0x461717
  46170e:	add    ah,BYTE PTR [rdi+0x363a1bb1]
  461714:	cmp    al,0x38
  461716:	xor    BYTE PTR [rdx+rsi*1],dh
  461719:	xor    DWORD PTR [rdx],edi
  46171b:	sbb    BYTE PTR [rdx+0x494964f0],ah
  461721:	push   rsp
  461722:	jp     0x4616b4
  461724:	retf   0x0
  461727:	add    BYTE PTR [rax],al
  461729:	add    BYTE PTR [rax],al
  46172b:	add    BYTE PTR [rax],al
  46172d:	(bad)  
  46172e:	cld    
  46172f:	(bad)  
  461730:	(bad)  
  461731:	sub    DWORD PTR [rsi],esi
  461733:	sub    BYTE PTR [rax-0x4e],cl
  461736:	add    BYTE PTR [rax],al
  461738:	add    BYTE PTR [rax],al
  46173a:	out    dx,eax
  46173b:	scas   al,BYTE PTR es:[rdi]
  46173c:	imul   DWORD PTR [rcx+0x2]
  46173f:	mov    dl,0x9d
  461741:	sbb    BYTE PTR [rbx],ch
  461743:	cmp    al,0x3e
  461745:	cmp    BYTE PTR [rax],bh
  461747:	xor    BYTE PTR [rdi+rbp*1],dh
  46174a:	sub    BYTE PTR [rip+0x125f09c],dh        # 0x16c07ec
  461750:	and    al,0x5e
  461752:	movsxd edi,DWORD PTR [ecx-0x5d]
  461756:	add    BYTE PTR [rax],al
  461758:	add    BYTE PTR [rax],al
  46175a:	add    BYTE PTR [rax],al
  46175c:	add    bh,dh
  46175e:	lods   al,BYTE PTR ds:[rsi]
  46175f:	sbb    BYTE PTR [rdx],bh
  461761:	xor    DWORD PTR [rdx],esi
  461763:	sbb    BYTE PTR ds:[rdx-0x2e],cl
  461767:	add    BYTE PTR [rax],al
  461769:	add    BYTE PTR [rax],al
  46176b:	retf   0xe8ee
  46176e:	mov    ebx,0x3a2a5ce7
  461773:	cmp    al,0x36
  461776:	ss cmp al,0x34
  461779:	ds sub BYTE PTR ss:[rsi-0x8],ch
  46177e:	shl    BYTE PTR [rcx+0xffd6],cl
	...
  46178c:	(bad)  
  46178d:	hlt    
  46178e:	pop    rax
  46178f:	adc    BYTE PTR [rdx+rsi*1],bh
  461792:	xor    bh,BYTE PTR [rsi*1-0x1f33b7e2]
  461799:	add    BYTE PTR [rax],al
  46179b:	fxtract 
  46179d:	stc    
  46179e:	mov    bh,0x74
  4617a0:	sub    BYTE PTR [rax+0x3c],al
  4617a3:	cmp    al,0x38
  4617a5:	cmp    BYTE PTR [rsi],dil
  4617a8:	cmp    al,0x3c
  4617aa:	cmp    BYTE PTR [rip+0xe0691e],dh        # 0x12680ce
  4617b0:	in     al,dx
	...
  4617b9:	add    BYTE PTR [rax],al
  4617bb:	div    edi
  4617bd:	xchg   edx,eax
  4617be:	(bad)  
  4617bf:	ss ss cmp al,0x34
  4617c3:	xor    DWORD PTR ds:[rsi],ecx
  4617c6:	and    ebx,edx
  4617c8:	stc    
  4617c9:	pushf  
  4617ca:	es sbb al,0x98
  4617cd:	stc    
  4617ce:	rex.WRXB or BYTE PTR [r10],r15b
  4617d1:	cmp    al,0x3c
  4617d3:	cmp    dil,BYTE PTR [rdx]
  4617d6:	cmp    al,0x3c
  4617d8:	cmp    eax,0xd363c3e
  4617dd:	(bad)  
  4617de:	call   0x13518da
	...
  4617eb:	xchg   esi,eax
  4617ec:	cld    
  4617ed:	pop    rdx
  4617ee:	or     edi,DWORD PTR [rdx]
  4617f0:	xor    eax,0x313c3636
  4617f5:	cmp    ah,BYTE PTR [rcx+0x1d1a72f6]
  4617fb:	or     edx,DWORD PTR [rcx-0x15]
  4617fe:	mov    WORD PTR [rdx],cs
  461800:	rex.X cmp eax,0x40363e3c
  461806:	cmp    al,0x3d
  461809:	(bad)  
  46180a:	ds ss rex.RB sar r12b,cl
  46180f:	(bad)  
  461810:	rcl    al,1
	...
  46181a:	std    
  46181b:	(bad)  
  46181c:	fcomp  DWORD PTR [rbx]
  46181e:	ss cmp BYTE PTR ss:[rsi],bh
  461822:	cmp    al,0x36
  461824:	(bad)  
  461825:	imul   ebp,ebx,0xffffff9f
  461828:	(bad)  
  461829:	sbb    BYTE PTR [rdx],bh
  46182b:	(bad)  
  46182c:	cmp    edi,DWORD PTR [rcx+riz*8+0x33333546]
  461833:	cmp    bh,BYTE PTR ss:[rdx]
  461836:	rex.X cmp eax,0x283c3f34
  46183c:	cmp    ecx,0xfd8fdfe1
	...
  46184a:	(bad)  
  46184b:	call   0x348230db
  461850:	xor    dh,BYTE PTR [rdx+rsi*1]
  461853:	ss (bad) 
  461855:	lahf   
  461856:	clc    
  461857:	push   rdx
  461858:	(bad)  
  461859:	ss ss adc BYTE PTR ss:[rcx+rdi*8+0x77],ch
  461860:	add    esi,DWORD PTR [rbx+rsi*1]
  461863:	cmp    al,0x37
  461865:	ss cmp al,0x34
  461868:	xor    al,0x33
  46186a:	ss rex.RB fcom st(2)
  46186e:	addr32 stc 
  461870:	jnp    0x461836
  461872:	test   DWORD PTR [rax],0x0
  461878:	add    BYTE PTR [rax],al
  46187a:	xchg   edi,eax
  46187b:	clc    
  46187c:	pop    rsp
  46187d:	(bad)  
  46187e:	xor    dh,BYTE PTR ss:[rsp+rsi*1]
  461882:	ss ss rex.R (bad) 
  461886:	mov    edx,0x36363517
  46188b:	cmp    cl,BYTE PTR [rsi]
  46188d:	rex.R fsub DWORD PTR [rdi+0x3c3d3c13]
  461894:	xor    eax,0x3d3d3c3c
  461899:	sub    BYTE PTR ds:[rdx-0x7],ch
  46189d:	outs   dx,BYTE PTR ds:[rsi]
  46189e:	and    edi,ecx
  4618a0:	lea    edx,[rax+rdi*8+0x0]
  4618a4:	add    BYTE PTR [rax],al
  4618a6:	add    BYTE PTR [rax],al
  4618a8:	add    BYTE PTR [rax],al
  4618aa:	retf   
  4618ab:	fadd   DWORD PTR [rdx+rdi*1+0x3c]
  4618af:	cmp    al,0x34
  4618b1:	xor    al,0x32
  4618b3:	rex.RB fsub DWORD PTR ss:[r15+0x36363a11]
  4618bb:	sub    ecx,DWORD PTR ss:[rdi]
  4618be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4618bf:	ret    0x3619
  4618c2:	cmp    eax,0x3d3d353e
  4618c7:	(bad)  
  4618c8:	cmp    al,0x35
  4618ca:	(bad)  
  4618cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4618cc:	mov    esp,0xa1ea231d
  4618d1:	sbb    dh,BYTE PTR [rsp+rdi*8+0x0]
  4618d8:	add    BYTE PTR [rax],al
  4618da:	jrcxz  0x46187d
  4618dc:	sbb    BYTE PTR [rdx],bh
  4618de:	cmp    BYTE PTR [rdx],dh
  4618e0:	xor    dh,BYTE PTR [rsp+rdi*1]
  4618e3:	ss cmp eax,ebx
  4618e6:	mov    bl,0x11
  4618e8:	xor    eax,0x3a403136
  4618ed:	(bad)  
  4618ef:	fild   DWORD PTR [rsi+0x29]
  4618f2:	cmp    eax,0x3d3d383d
  4618f7:	cmp    al,0x3a
  4618f9:	(bad)  
  4618fa:	push   rdx
  4618fb:	fisubr WORD PTR [rbx+0xf]
  4618fe:	and    eax,0x5e0f9df9
  461903:	jmp    0x461908
  461908:	add    BYTE PTR [rax],al
  46190a:	jmp    0x3c7c2781
  46190f:	xor    dh,BYTE PTR [rdx]
  461911:	xor    bh,BYTE PTR [rsi+rsi*1]
  461914:	cmp    al,al
  461916:	rcr    BYTE PTR [rsi],cl
  461918:	xor    eax,0x3a363c32
  46191d:	sbb    BYTE PTR [rbx+rbx*8+0x21],bl
  461921:	sub    al,0x40
  461923:	cmp    al,0x3c
  461925:	cmp    eax,0xd3a403c
  46192a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  46192b:	ret    0xd44
  46192e:	rex.WRB neg BYTE PTR [r8+0xb31b0f]
  461935:	add    BYTE PTR [rax],al
  461937:	add    BYTE PTR [rax],al
  461939:	in     eax,dx
  46193a:	call   0x3282418f
  46193f:	xor    dh,BYTE PTR [rdx]
  461941:	xor    al,0x3c
  461943:	xor    eax,0x44dea81e
  461948:	cs (bad) 
  46194a:	ds cmp al,0x36
  46194d:	adc    BYTE PTR [rbp-0x24],dl
  461950:	rex.WXB sub rax,QWORD PTR [r9+0x3d]
  461954:	xor    al,0x32
  461956:	cmp    bl,BYTE PTR ss:[rip+0xea5e721]        # 0xeec007e
  46195d:	(bad)  
  46195e:	(bad)  
  46195f:	jmp    0x4619ce
  461961:	sub    ebx,DWORD PTR [rbx]
  461963:	jb     0x461961
  461965:	add    BYTE PTR [rax],al
  461967:	add    BYTE PTR [rax],al
  461969:	in     eax,dx
  46196a:	mov    dh,0x18
  46196c:	xor    bh,BYTE PTR ss:[rsi]
  46196f:	xor    dh,BYTE PTR [rdx]
  461971:	xor    al,0x3e
  461973:	ss (bad) 
  461975:	lahf   
  461976:	out    0x47,eax
  461978:	xor    bh,BYTE PTR ss:[rip+0x5c2a3a3c]        # 0x5c7053bb
  46197f:	fsub   DWORD PTR [rip+0x3c3c402b]        # 0x3c8259b0
  461985:	ds (bad) 
  461987:	(bad)  
  461988:	or     bl,BYTE PTR [rax+0x282859f6]
  46198e:	jo     0x46197b
  461990:	pop    rcx
  461991:	sub    edi,DWORD PTR [rdx]
  461993:	rex.RX mov ecx,0x0
  461999:	std    
  46199a:	(bad)  
  46199b:	adc    BYTE PTR [rdx+rsi*1],bh
  46199e:	cmp    al,0x3c
  4619a0:	cmp    al,0x34
  4619a2:	xor    DWORD PTR [rsi],esi
  4619a4:	(bad)  
  4619a5:	movabs al,ds:0xb2f3636362b45e5
  4619ae:	jno    0x46198b
  4619b0:	rex.RB
  4619b1:	cmp    bh,BYTE PTR ss:[rdx]
  4619b4:	cmp    bh,BYTE PTR [rsi]
  4619b6:	rex.X xor eax,0x19bfc11e
  4619bc:	cmp    BYTE PTR [rax],ch
  4619be:	je     0x4619b6
  4619c0:	push   rdi
  4619c1:	adc    ebp,DWORD PTR [rsi]
  4619c3:	add    edi,DWORD PTR [rsp+rdi*8+0x0]
  4619c7:	add    BYTE PTR [rax],al
  4619c9:	out    dx,al
  4619ca:	data16 sub bh,BYTE PTR [rcx+rsi*1]
  4619ce:	cmp    al,0x3c
  4619d0:	cmp    al,0x33
  4619d2:	xor    dh,BYTE PTR [rsi]
  4619d4:	(bad)  
  4619d5:	test   al,0xe5
  4619d7:	sbb    BYTE PTR [rax],r13b
  4619da:	sub    BYTE PTR [rip+0xffffffffc284043a],dh        # 0xffffffffc2ca1e1a
  4619e0:	rex.X
  4619e1:	cmp    al,BYTE PTR ss:[rax+0x3a]
  4619e5:	cmp    BYTE PTR ds:[rsi],cl
  4619e8:	rex.RXB out 0xa5,eax
  4619eb:	or     dl,BYTE PTR [rsi]
  4619ed:	sub    BYTE PTR [rcx-0xa],dh
  4619f0:	push   0x2e
  4619f2:	xor    BYTE PTR [rax],ch
  4619f4:	rex.WXB
  4619f5:	lock add BYTE PTR [rax],al
  4619f8:	add    bh,bl
  4619fa:	rex.WRX sub BYTE PTR [rax+0x36],r8b
  4619fe:	cmp    al,0x3c
  461a00:	ds xor al,0x31
  461a03:	xor    eax,0x1de5a635
  461a08:	(bad)  
  461a09:	(bad)  
  461a0a:	mov    r8d,eax
  461a0d:	pop    rdx
  461a0e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  461a0f:	shl    DWORD PTR [rip+0x40403c36],0x32        # 0x4086564c
  461a16:	cmp    al,0x3a
  461a18:	push   rdi
  461a19:	test   BYTE PTR [rbp+0x5a144d09],0xf9
  461a20:	jbe    0x461a50
  461a22:	xor    dh,BYTE PTR [rcx]
  461a24:	sbb    BYTE PTR [rbp-0x2925ff12],dh
  461a2a:	rex.R sub al,0x3c
  461a2d:	xor    BYTE PTR [rax+0x3e],al
  461a30:	cmp    al,0x32
  461a32:	xor    dh,BYTE PTR [rsi]
  461a34:	cmp    dh,BYTE PTR [rbx+0x42185f9]
  461a3a:	rex.WRB movabs r11,0x3d3c3c28a5dc87e1
  461a44:	xor    dil,BYTE PTR [rsi*1+0x67a7d845]
  461a4c:	fidivr WORD PTR [rax+0x23]
  461a4f:	stc    
  461a50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  461a51:	(bad)  
  461a52:	xor    bh,BYTE PTR [rax+rdx*1]
  461a55:	mov    al,bh
  461a57:	add    dl,ah
  461a59:	shl    BYTE PTR [rax],cl
  461a5b:	sub    eax,0x3c3c303c
  461a60:	xor    al,0x34
  461a62:	xor    dh,BYTE PTR [rip+0xfffffffff6f9ac16]        # 0xfffffffff73fc67e
  461a68:	ret    0x628d
  461a6b:	imul   edi,DWORD PTR [rbx-0x53],0x3c2770f6
  461a72:	cmp    al,0x3c
  461a74:	cmp    eax,0x16353e3c
  461a79:	mov    edi,ecx
  461a7b:	xchg   edx,eax
  461a7c:	mov    fs,WORD PTR [rdx+0x25]
  461a7f:	cmc    
  461a80:	stos   DWORD PTR es:[rdi],eax
  461a81:	(bad)  
  461a82:	cmp    eax,0xf86b2a3d
  461a87:	add    bh,dh
  461a89:	movabs eax,ds:0x343c3c3c303e2d10
  461a92:	xor    dh,BYTE PTR [rsi]
  461a94:	sub    BYTE PTR [rdi-0x18427f19],bl
  461a9a:	div    dh
  461a9c:	stc    
  461a9d:	neg    BYTE PTR [rax+0x3c3c3135]
  461aa3:	cmp    al,0x3c
  461aa5:	xor    DWORD PTR ss:[rsi+rsi*1],edi
  461aa9:	rex.RB lods al,BYTE PTR ds:[rsi]
  461aab:	stc    
  461aac:	fcmovnu st,st(3)
  461aae:	(bad)  
  461ab0:	stos   DWORD PTR es:[rdi],eax
  461ab1:	cmp    al,0x3c
  461ab3:	cmp    eax,0xdd453c
  461ab8:	test   DWORD PTR [rbp+0x343e402a],0x34323e3e
  461ac2:	xor    al,0x36
  461ac4:	(bad)  
  461ac5:	mov    edi,eax
  461ac7:	rex.WXB (bad) 
  461ac9:	push   rax
  461aca:	jne    0x461a4d
  461acc:	jbe    0x461b1f
  461ace:	(bad)  
  461acf:	sub    BYTE PTR [rsi+rsi*1],bh
  461ad2:	cmp    BYTE PTR [rax],bh
  461ad4:	xor    eax,0x34363c36
  461ad9:	cs (bad) 
  461adb:	jo     0x461a83
  461add:	lods   eax,DWORD PTR ds:[rsi]
  461ade:	sar    bh,cl
  461ae0:	lahf   
  461ae1:	xor    DWORD PTR [rdx],esi
  461ae3:	sub    DWORD PTR ss:[rsi],esi
  461ae6:	mov    ebx,0x2a8afa00
  461aeb:	rex.B
  461aec:	xor    DWORD PTR ds:[rax],edi
  461aef:	cmp    al,0x3e
  461af1:	xor    al,0x38
  461af3:	sub    BYTE PTR ss:[rax+rdi*8+0x72],dh
  461af8:	or     esi,DWORD PTR [rip+0x28282828]        # 0x286e4326
  461afe:	sub    al,0x3a
  461b00:	cmp    al,0x3e
  461b02:	cmp    BYTE PTR ss:[rdi],dh
  461b05:	ss ss ds xor al,0x32
  461b0a:	ss (bad) 
  461b0c:	sbb    BYTE PTR [rax],cl
  461b0e:	jle    0x461b08
  461b10:	imul   ebp,DWORD PTR [rax],0x32
  461b13:	xor    DWORD PTR ss:[rax],ebp
  461b16:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  461b17:	push   rsp
  461b19:	lahf   
  461b1a:	(bad)  
  461b1b:	cmp    esi,DWORD PTR [rbx]
  461b1d:	xor    edi,DWORD PTR [rax]
  461b1f:	cmp    BYTE PTR [rsi],dh
  461b21:	xor    eax,0x582e3736
  461b26:	out    0x9b,eax
  461b28:	add    esi,DWORD PTR [rip+0x3e2f3230]        # 0x3e754d5e
  461b2e:	cmp    al,0x42
  461b31:	ss cmp al,0x38
  461b34:	cmp    al,0x3a
  461b36:	ss cmp eax,0x3c32333d
  461b3c:	or     eax,0x3abfdc48
  461b41:	ss ss rex
  461b44:	sub    BYTE PTR ss:[rcx+0x1eb8e3f7],ah
  461b4b:	xor    eax,0x3a3e333c
  461b50:	ss cmp BYTE PTR ss:[rsi],dh
  461b54:	xor    DWORD PTR [rdx],edi
  461b56:	mov    bh,0xdb
  461b58:	rex.R xor eax,0x32323131
  461b5e:	cmp    BYTE PTR [rdx],bh
  461b60:	cmp    al,0x3c
  461b62:	ss cmp al,0x3a
  461b65:	ds cmp al,0x3d
  461b68:	cmp    eax,0x1d37403c
  461b6d:	lods   eax,DWORD PTR ds:[rsi]
  461b6e:	out    0x59,eax
  461b70:	sub    DWORD PTR [rsp+rdi*1],edi
  461b73:	ds ss (bad) 
  461b76:	mov    edi,esp
  461b78:	iret   
  461b79:	in     eax,0x4b
  461b7b:	(bad)  
  461b7c:	cmp    al,0x36
  461b7e:	cmp    al,0x3c
  461b80:	ss cmp al,0x36
  461b83:	cmp    al,0x3c
  461b85:	adc    DWORD PTR [rsi+rsi*8+0x76],esi
  461b89:	add    eax,0x3c333c35
  461b8e:	ss ss ss rex.X
  461b92:	ss cmp al,0x36
  461b95:	xor    al,0x33
  461b97:	cmp    al,0x3c
  461b99:	cmp    bh,BYTE PTR [rdx]
  461b9b:	or     eax,0xe83fa84
  461ba0:	ss ss cmp al,0x3c
  461ba4:	adc    DWORD PTR ss:[rcx+0x71fa00fd],esp
  461bab:	or     edi,DWORD PTR [rdx]
  461bad:	ss cmp al,0x3c
  461bb0:	cmp    al,0x3c
  461bb3:	cmp    al,0x40
  461bb5:	(bad)  
  461bb6:	and    bl,dh
  461bb8:	mov    esi,0x313a0e17
  461bbd:	cmp    al,0x36
  461bbf:	cmp    al,0x36
  461bc1:	ss ss ss cmp al,0x32
  461bc6:	(bad)  
  461bc7:	cmp    bh,BYTE PTR ds:[rdx]
  461bca:	or     dl,BYTE PTR [rdx-0x7]
  461bcd:	mov    bl,0x11
  461bcf:	sbb    BYTE PTR [rsi],dh
  461bd1:	ds cmp al,0x29
  461bd4:	cmp    cl,BYTE PTR [rcx]
  461bd6:	sar    ch,cl
  461bd8:	add    cl,bl
  461bda:	(bad)  
  461bdb:	and    BYTE PTR [rip+0x363c363a],bl        # 0x3682521b
  461be1:	cmp    al,0x40
  461be4:	ds xor eax,0x82fa7414
  461bea:	or     BYTE PTR [rsi],cl
  461bec:	cmp    dh,BYTE PTR [rsi]
  461bee:	cmp    esi,DWORD PTR ss:[rsi]
  461bf1:	ss ss ss ss rex.XB cmp al,0x3a
  461bf8:	(bad)  
  461bf9:	add    al,0x46
  461bfb:	sar    DWORD PTR [rdi+0x3a351e49],cl
  461c01:	xor    eax,0x7b083a36
  461c06:	clc    
  461c07:	add    BYTE PTR [rax],al
  461c09:	in     al,dx
  461c0a:	cld    
  461c0b:	mov    BYTE PTR [rsp+rdx*1],al
  461c0e:	ss ss cmp BYTE PTR ss:[rax],bh
  461c13:	cmp    BYTE PTR ss:[rdx],bh
  461c16:	sbb    BYTE PTR [rsi],bl
  461c18:	mov    edx,0x1e0565e8
  461c1d:	xor    eax,0x36383638
  461c22:	xor    eax,0x3a3a3636
  461c27:	(bad)  
  461c28:	adc    al,0x59
  461c2a:	rcr    esi,0x52
  461c2d:	sub    BYTE PTR [rbx],dl
  461c2f:	cmp    esi,DWORD PTR [rip+0x6e0f183b]        # 0x6e553470
  461c35:	cmc    
  461c36:	add    BYTE PTR [rax],al
  461c38:	add    BYTE PTR [rax],al
  461c3a:	xabort 0x78
  461c3d:	(bad)  
  461c3e:	(bad)  
  461c3f:	cmp    BYTE PTR [rax],bh
  461c41:	ss cmp BYTE PTR ss:[rsi],dh
  461c45:	cmp    cl,BYTE PTR ss:[rax]
  461c48:	push   rsp
  461c49:	in     al,0xdc
  461c4b:	(bad)  
  461c4c:	adc    al,0x13
  461c4e:	cmp    BYTE PTR ss:[rsi],dh
  461c51:	ss cs cs sbb BYTE PTR ss:[rdi],cl
  461c57:	rex.RX je 0x461c38
  461c5a:	jmp    0x461cc9
  461c5c:	(bad)  
  461c5d:	xor    BYTE PTR [rsi+rbp*1],bh
  461c60:	ss (bad) 
  461c62:	(bad)  
  461c63:	jge    0x461c4d
  461c65:	add    BYTE PTR [rax],al
  461c67:	add    BYTE PTR [rax],al
  461c69:	add    bh,bh
  461c6b:	(bad)  
  461c6c:	cli    
  461c6d:	stos   DWORD PTR es:[rdi],eax
  461c6e:	push   0x44
  461c70:	or     eax,0x140d140d
  461c75:	sbb    ecx,DWORD PTR [rax+0x5e]
  461c78:	(bad)  
  461c79:	fld    DWORD PTR [rax]
  461c7b:	stc    
  461c7c:	mov    ss,WORD PTR [rdi+0x35]
  461c7f:	(bad)  
  461c80:	(bad)  
  461c81:	add    edx,DWORD PTR [rsi]
  461c83:	(bad)  
  461c84:	xor    eax,0xf6d3804d
  461c89:	mov    esi,0x1335144d
  461c8e:	sub    BYTE PTR [rbx],dl
  461c90:	(bad)  
  461c91:	pop    rbx
  461c92:	mov    al,0xf8
	...
  461c9c:	add    ch,bh
  461c9e:	jmp    0x461c7c
  461ca0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  461ca1:	pushf  
  461ca2:	xchg   DWORD PTR [rdi-0x72e4a5f],eax
  461ca8:	push   rcx
  461caa:	add    BYTE PTR [rax],al
  461cac:	cld    
  461cad:	clc    
  461cae:	mov    eax,0x807c7c98
  461cb3:	lahf   
  461cb4:	mov    bl,0xe4
  461cb6:	stc    
  461cb7:	cli    
  461cb8:	mov    cs,WORD PTR [rax+0x1c]
  461cbb:	(bad)  
  461cbc:	(bad)  
  461cbd:	rex.RB
  461cbe:	rex.WRXB jl 0x461c73
  461cc1:	idiv   edi
	...
  461ccb:	add    BYTE PTR [rax],al
  461ccd:	add    ch,bh
  461ccf:	(bad)  
  461cd0:	icebp  
  461cd1:	(bad)  
  461cd2:	(bad)  
  461cd3:	(bad)  
  461cd4:	cld    
	...
  461cdd:	shl    edx,1
  461cdf:	cld    
  461ce0:	cld    
  461ce1:	(bad)  
  461ce2:	(bad)  
  461ce3:	inc    DWORD PTR [rax]
  461ce5:	add    BYTE PTR [rax],al
  461ce7:	add    al,dh
  461ce9:	retf   
  461cea:	rcl    dl,cl
  461cec:	fsub   st(0),st
  461cee:	cli    
  461cef:	cld    
  461cf0:	test   DWORD PTR [rax],0x0
	...
  461d1a:	add    bl,cl
  461d1c:	mov    bl,0xf1
	...
  461d27:	add    bh,bh
  461d29:	(bad)  
  461d2a:	inc    DWORD PTR [rax+0xff3f]
  461d30:	(bad)  
  461d31:	(bad)  
  461d32:	inc    DWORD PTR [rax]
  461d34:	(bad)  
  461d35:	inc    DWORD PTR [rax]
  461d37:	add    bh,bh
  461d39:	(bad)  
  461d3a:	inc    DWORD PTR [rax]
  461d3c:	ud0    eax,DWORD PTR [rax]
  461d3f:	add    bh,bh
  461d41:	(bad)  
  461d42:	inc    DWORD PTR [rax]
  461d44:	ud0    eax,DWORD PTR [rax]
  461d47:	add    bh,bh
  461d49:	(bad)  
  461d4a:	inc    DWORD PTR [rax]
  461d4c:	(bad)  
  461d4d:	inc    DWORD PTR [rax]
  461d4f:	add    bh,bh
  461d51:	(bad)  
  461d52:	inc    DWORD PTR [rax]
  461d54:	(bad)  
  461d55:	inc    DWORD PTR [rax]
  461d57:	add    bh,bh
  461d59:	(bad)  
  461d5a:	inc    DWORD PTR [rax]
  461d5c:	(bad)  
  461d5d:	inc    DWORD PTR [rax]
  461d5f:	add    bh,bh
  461d61:	(bad)  
  461d62:	inc    DWORD PTR [rax]
  461d64:	(bad)  
  461d65:	inc    DWORD PTR [rax]
  461d67:	add    bh,bh
  461d69:	(bad)  
  461d6a:	inc    BYTE PTR [rax]
  461d6c:	(bad)  
  461d6d:	inc    DWORD PTR [rax]
  461d6f:	add    bh,bh
  461d71:	(bad)  
  461d72:	inc    BYTE PTR [rax]
  461d74:	(bad)  
  461d75:	inc    DWORD PTR [rax]
  461d77:	add    bh,bh
  461d79:	(bad)  
  461d7a:	inc    BYTE PTR [rax]
  461d7c:	add    edi,edi
  461d7e:	add    BYTE PTR [rax],al
  461d80:	(bad)  
  461d81:	inc    DWORD PTR [rax+rax*1]
  461d84:	add    edi,edi
  461d86:	add    BYTE PTR [rax],al
  461d88:	(bad)  
  461d89:	std    
  461d8a:	add    BYTE PTR [rax],al
  461d8c:	add    edi,edi
  461d8e:	add    BYTE PTR [rax],al
  461d90:	dec    BYTE PTR [rip+0xffffffffff030000]        # 0xffffffffff491d96
  461d96:	add    BYTE PTR [rax],al
  461d98:	inc    BYTE PTR [rax+rax*1]
  461d9b:	add    BYTE PTR [rdi+rbx*1],al
  461d9e:	add    BYTE PTR [rax],al
  461da0:	cld    
  461da1:	(bad)  
  461da2:	add    BYTE PTR [rax],al
  461da4:	add    BYTE PTR [rdi],al
  461da6:	add    BYTE PTR [rax],al
  461da8:	clc    
  461da9:	add    eax,eax
  461dab:	add    BYTE PTR [rax],al
  461dad:	add    eax,DWORD PTR [rax]
  461daf:	add    al,bh
  461db1:	add    eax,esp
  461db3:	add    BYTE PTR [rax],al
  461db5:	(bad)  
  461db6:	add    BYTE PTR [rax],al
  461db8:	lock add BYTE PTR [rax+0x0],ah
  461dbc:	add    DWORD PTR [rdi+0x0],edi
  461dbf:	add    al,ah
  461dc1:	add    BYTE PTR [rax],al
  461dc3:	add    BYTE PTR [rax],al
  461dc5:	mov    edi,0xe00000
  461dca:	add    BYTE PTR [rax],al
  461dcc:	add    BYTE PTR [rdi],bh
  461dce:	add    BYTE PTR [rax],al
  461dd0:	rol    BYTE PTR [rax],0x0
  461dd3:	add    BYTE PTR [rax],al
  461dd5:	(bad)  
  461dd6:	add    BYTE PTR [rax],al
  461dd8:	rol    BYTE PTR [rax],0x0
  461ddb:	add    BYTE PTR [rax],al
  461ddd:	(bad)  
  461dde:	add    BYTE PTR [rax],al
  461de0:	rol    BYTE PTR [rax],0x0
  461de3:	add    BYTE PTR [rax],al
  461de5:	(bad)  
  461de6:	add    BYTE PTR [rax],al
  461de8:	rol    BYTE PTR [rax],0x0
  461deb:	add    BYTE PTR [rax],al
  461ded:	sldt   WORD PTR [rax]
  461df0:	rol    BYTE PTR [rax],0x0
  461df3:	add    BYTE PTR [rax],al
  461df5:	sldt   WORD PTR [rax]
  461df8:	rol    BYTE PTR [rax],0x0
  461dfb:	add    BYTE PTR [rax],al
  461dfd:	sldt   WORD PTR [rax]
  461e00:	add    BYTE PTR [rax],0x0
  461e03:	add    BYTE PTR [rax],al
  461e05:	(bad)  
  461e06:	add    BYTE PTR [rax],al
  461e08:	add    BYTE PTR [rax],0x0
  461e0b:	add    BYTE PTR [rax],al
  461e0d:	(bad)  
  461e0e:	add    BYTE PTR [rax],al
  461e10:	add    BYTE PTR [rax],0x0
  461e13:	add    BYTE PTR [rax],al
  461e15:	add    eax,DWORD PTR [rax]
  461e17:	add    BYTE PTR [rax+0x0],al
  461e1d:	add    eax,DWORD PTR [rax]
  461e1f:	add    BYTE PTR [rax+0x0],al
  461e25:	add    DWORD PTR [rax],eax
  461e27:	add    BYTE PTR [rax],al
  461e29:	add    BYTE PTR [rax],al
  461e2b:	add    BYTE PTR [rax],al
  461e2d:	add    DWORD PTR [rax],eax
  461e2f:	add    BYTE PTR [rax],al
  461e31:	add    BYTE PTR [rax],al
  461e33:	add    BYTE PTR [rax],al
  461e35:	add    DWORD PTR [rax],eax
  461e37:	add    BYTE PTR [rax],al
  461e39:	add    BYTE PTR [rax],al
  461e3b:	add    BYTE PTR [rax],al
  461e3d:	add    DWORD PTR [rax],eax
  461e3f:	add    BYTE PTR [rax],al
  461e41:	add    BYTE PTR [rax],al
  461e43:	add    BYTE PTR [rax],al
  461e45:	add    DWORD PTR [rax],eax
	...
  461e67:	add    BYTE PTR [rax+0x0],al
  461e6d:	add    BYTE PTR [rax],al
  461e6f:	add    BYTE PTR [rax+0x0],al
  461e75:	add    DWORD PTR [rax],eax
  461e77:	add    BYTE PTR [rax+0x0],al
  461e7d:	add    eax,DWORD PTR [rax]
  461e7f:	add    al,al
  461e81:	add    BYTE PTR [rax],al
  461e83:	add    BYTE PTR [rax],al
  461e85:	(bad)  
  461e86:	add    BYTE PTR [rax],al
  461e88:	rol    BYTE PTR [rax],0x20
  461e8b:	add    BYTE PTR [rax],al
  461e8d:	sldt   WORD PTR [rax]
  461e90:	clc    
  461e91:	add    BYTE PTR [rax],dh
  461e93:	add    BYTE PTR [rax],al
  461e95:	(bad)  
  461e96:	add    BYTE PTR [rax],al
  461e98:	cld    
  461e99:	(bad)  
  461e9a:	clc    
  461e9b:	(bad)  
  461e9d:	jg     0x461e9f
  461e9f:	add    bh,bh
  461ea1:	(bad)  
  461ea2:	(bad)  
  461ea3:	jmp    rcx
  461ea5:	inc    DWORD PTR [rax]
  461ea7:	add    BYTE PTR [rax],ch
  461ea9:	add    BYTE PTR [rax],al
  461eab:	add    BYTE PTR [rax],dl
  461ead:	add    BYTE PTR [rax],al
  461eaf:	add    BYTE PTR [rax],ah
  461eb1:	add    BYTE PTR [rax],al
  461eb3:	add    BYTE PTR [rcx],al
  461eb5:	add    BYTE PTR [rax],ah
  461eb7:	add    BYTE PTR [rax],al
  461eb9:	add    BYTE PTR [rax],al
  461ebb:	add    BYTE PTR [rax+0x4],al
	...
  461eee:	add    BYTE PTR [rax],al
  461ef0:	ror    cl,1
  461ef2:	mov    eax,0x486b8ae2
  461ef7:	call   QWORD PTR [rsi-0x2400a684]
  461efd:	rol    ebp,cl
  461eff:	lods   eax,DWORD PTR ds:[rsi]
	...
  461f2c:	(bad)  
  461f2d:	(bad)  
  461f2e:	inc    BYTE PTR [rsi]
  461f30:	movabs ds:0x90ff32638ef87492,eax
  461f39:	xor    di,di
  461f3c:	pushf  
  461f3d:	and    DWORD PTR [rcx-0x1],0xfffffff6
  461f41:	cmc    
  461f42:	hlt    
  461f43:	rex.X add BYTE PTR [rax],al
	...
  461f6a:	add    BYTE PTR [rax],al
  461f6c:	clc    
  461f6d:	clc    
  461f6e:	imul   BYTE PTR [rdi]
  461f70:	movabs ds:0x8bff30658dff6184,al
  461f79:	addr32 (bad) 
  461f7b:	call   FWORD PTR [rcx-0xc00b58e]
  461f81:	repnz in eax,dx
  461f83:	pop    rax
	...
  461fa4:	div    dh
  461fa6:	cmc    
  461fa7:	xor    ch,bh
  461fa9:	out    dx,al
  461faa:	in     al,dx
  461fab:	addr32 out 0xe7,eax
  461fae:	in     al,0x6e
  461fb0:	movabs ds:0x8bff2f6693ff5e81,eax
  461fb9:	addr32 (bad) 
  461fbb:	call   QWORD PTR [rax-0xb00c098]
  461fc1:	out    dx,eax
  461fc2:	(bad)  
  461fc3:	jle    0x461fc5
	...
  461fd5:	add    BYTE PTR [rax],al
  461fd7:	add    bl,dh
  461fd9:	out    dx,al
  461fda:	(bad)  
  461fdb:	pop    rbx
  461fdc:	retf   0xb0be
  461fdf:	mov    bl,0xef
  461fe1:	out    dx,al
  461fe2:	in     eax,dx
  461fe3:	rex.WRX fcmovbe st,st(6)
  461fe6:	(bad)  
  461fe7:	int3   
  461fe8:	stos   BYTE PTR es:[rdi],al
  461fe9:	movabs eax,ds:0x7d9ef8b4c4c8f88c
  461ff2:	pop    rbp
  461ff3:	call   QWORD PTR [rsi+riz*2+0x688bff31]
  461ffa:	dec    DWORD PTR cs:[rdx-0x1500c69d]
  462001:	in     eax,0xdc
  462003:	stos   BYTE PTR es:[rdi],al
  462004:	cld    
  462005:	div    eax
  462007:	push   rcx
  462008:	std    
  462009:	std    
  46200a:	sti    
  46200b:	and    al,BYTE PTR [rax]
  46200d:	add    BYTE PTR [rax],al
  46200f:	add    BYTE PTR [rax],al
  462011:	add    BYTE PTR [rax],al
  462013:	add    ch,dh
  462015:	hlt    
  462016:	repnz rex.W mov dl,0x9e
  46201a:	test   bh,ch
  46201c:	mov    BYTE PTR [rdx+0x32],ah
  46201f:	inc    ebp
  462021:	mov    eax,0xf1f2c0a5
  462026:	out    dx,al
  462027:	(bad)  
  462028:	(bad)  
  46202a:	rcr    ecx,cl
  46202c:	lods   eax,DWORD PTR ds:[rsi]
  46202d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  46202e:	mov    edi,edi
  462030:	cwde   
  462031:	jbe    0x462089
  462033:	dec    DWORD PTR [rdi-0x7100cc9a]
  462039:	addr32 (bad) 
  46203b:	dec    DWORD PTR [rax-0x3800cc9e]
  462041:	mov    edx,0x909fffa8
  462046:	jle    0x46203a
  462048:	mov    ebx,0xeec6b0b6
  46204d:	in     al,dx
  46204e:	jmp    0x461f9e
  462053:	or     al,0xd8
  462055:	(bad)  
  462056:	retf   0x86cc
  462059:	fs cmp edi,edi
  46205c:	nop
  46205d:	data16 xor bh,bh
  462060:	mov    ch,BYTE PTR [rsi+0x47]
  462063:	call   rcx
  462065:	enter  0xecb6,0xa9
  462069:	fwait
  46206a:	sub    edi,0xffffffb8
  46206d:	mov    al,0x95
  46206f:	call   QWORD PTR [rax-0x7100ca9d]
  462075:	fs call QWORD PTR ss:[rbx-0x7000cd9c]
  46207d:	gs xor bh,bh
  462080:	mov    ch,0xaa
  462082:	(bad)  
  462083:	jmp    rbx
  462085:	jrcxz  0x462067
  462087:	xchg   edi,eax
	...
  462090:	lock out dx,eax
  462092:	out    dx,eax
  462093:	pop    rax
  462094:	mov    eax,0x90ff8da6
  462099:	gs xor bh,bh
  46209c:	mov    fs,WORD PTR [rbp+0x31]
  46209f:	(bad)  
  4620a0:	mov    ebp,0x89ff8ca9
  4620a5:	ins    DWORD PTR es:[rdi],dx
  4620a6:	rex.RX inc DWORD PTR [rsi-0x3d00c89e]
  4620ad:	mov    ch,0x98
  4620af:	dec    DWORD PTR [rsi-0x7400d09e]
  4620b5:	fs xor edi,edi
  4620b8:	xchg   ebp,eax
  4620b9:	gs xor bh,bh
  4620bc:	(bad)
  4620c0:	(bad)  
  4620c1:	mov    esi,0xc4caffa9
  4620c6:	mov    ecx,0xf4f6f8f8
  4620cb:	xor    al,BYTE PTR [rax]
  4620cd:	add    BYTE PTR [rax],al
  4620cf:	add    ch,dh
  4620d1:	repz out dx,eax
  4620d3:	(bad)  
  4620d4:	pushf  
  4620d5:	sbb    BYTE PTR [rbp-0x1],0x91
  4620d9:	gs (bad) 
  4620db:	dec    DWORD PTR [rdi-0x3b00cf9b]
  4620e1:	mov    al,0x93
  4620e3:	inc    DWORD PTR [rdx+riz*2+0x638bff36]
  4620ea:	xor    al,0xff
  4620ec:	mov    cl,0x9d
  4620ee:	jle    0x4620ef
  4620f0:	mov    esp,DWORD PTR [rdx+rdi*1-0x1]
  4620f4:	xchg   ebx,eax
  4620f5:	fs xor edi,edi
  4620f8:	xchg   ecx,eax
  4620f9:	movsxd esi,DWORD PTR [rdi+rdi*8]
  4620fc:	stos   BYTE PTR es:[rdi],al
  4620fd:	xchg   esi,eax
  4620fe:	outs   dx,BYTE PTR ds:[rsi]
  4620ff:	dec    DWORD PTR [rax-0x4700a88a]
  462105:	stos   BYTE PTR es:[rdi],al
  462106:	xchg   ecx,eax
  462107:	(bad)  
  462108:	fxch   st(7)
  46210a:	shr    DWORD PTR [rdx+0x0],0xeb
  462111:	out    0xdd,al
  462113:	(bad)  
  462114:	mov    DWORD PTR [rbx+0x36],esp
  462117:	call   QWORD PTR [rcx-0x7000d09b]
  46211d:	gs xor bh,bh
  462120:	shr    BYTE PTR [rsp+rcx*4+0x39668aff],0xff
  462128:	mov    fs,WORD PTR [rbx+0x32]
  46212b:	jmp    FWORD PTR [rbp+rdx*4+0x6589ff77]
  462132:	call   QWORD PTR [r8-0x7d00ce9b]
  462139:	movsxd edi,DWORD PTR [rcx]
  46213b:	inc    esp
  46213d:	mov    ch,0x93
  46213f:	dec    DWORD PTR [rbp-0x4b00b78f]
  462145:	movabs eax,ds:0xfefef5698a9dff7c
  46214e:	std    
  46214f:	sbb    al,0xca
  462151:	(bad)  
  462152:	mov    ch,0xcf
  462154:	mov    WORD PTR [rdx+0x33],fs
  462157:	call   QWORD PTR [rdx-0x7100cd9b]
  46215d:	gs (bad) 
  46215f:	inc    esp
  462161:	mov    dl,0x90
  462163:	(bad)  
  462164:	jg     0x4621cf
  462166:	rex.RB jmp FWORD PTR [r11-0x42008a69]
  46216d:	mov    bl,0x94
  46216f:	dec    DWORD PTR [rbx+riz*2+0x6393ff34]
  462176:	xor    al,0xff
  462178:	mov    DWORD PTR [rax+0x3d],ebp
  46217b:	(bad)  
  46217c:	mov    esp,0x92ff97b2
  462181:	test   DWORD PTR [rax-0x1],esp
  462184:	mov    ebp,0x88ff85a9
  462189:	(bad)  
  46218a:	xor    eax,0xe0e9ecff
  46218f:	jle    0x46214e
  462191:	lods   eax,DWORD PTR ds:[rsi]
  462192:	(bad)  
  462193:	call   QWORD PTR [rax-0x6d00ce9a]
  462199:	gs xor bh,bh
  46219c:	(bad)  
  46219d:	data16 xor bh,bh
  4621a0:	shr    DWORD PTR [rdi-0x4f400070],0x92
  4621a7:	inc    esp
  4621a9:	mov    eax,0x9eb3ff9b
  4621ae:	jge    0x4621af
  4621b0:	mov    fs,WORD PTR [rax+rsi*1-0x1]
  4621b4:	(bad)  
  4621b5:	fs xor bh,bh
  4621b8:	mov    esp,DWORD PTR [rdx+rsi*1-0x1]
  4621bc:	mov    edx,0xc7ff86a9
  4621c1:	mov    edi,0xb4c8ffa7
  4621c6:	xchg   edi,eax
  4621c7:	call   QWORD PTR [rax-0x2e00ce9e]
  4621cd:	(bad)
  4621d0:	mov    esi,0x93ff95af
  4621d5:	fs xor bh,bh
  4621d8:	mov    WORD PTR [rbp+0x33],fs
  4621db:	dec    DWORD PTR [rdx-0x5100cd9b]
  4621e1:	xchg   edi,eax
  4621e2:	je     0x4621e3
  4621e4:	cwde   
  4621e5:	jge    0x46223f
  4621e7:	dec    DWORD PTR [rax-0x7200d19f]
  4621ed:	movsxd esi,DWORD PTR [rsi]
  4621ef:	dec    DWORD PTR [rdi-0x7400cc9b]
  4621f5:	gs xor edi,edi
  4621f8:	xchg   esp,eax
  4621f9:	fs xor edi,edi
  4621fc:	lea    esp,[rcx+rsi*1-0x1]
  462200:	movabs eax,ds:0x8dff6188a6ff7590
  462209:	fs xor edi,edi
  46220c:	mov    esi,0xd9e294ae
  462211:	rol    dl,1
  462213:	leave  
  462214:	and    BYTE PTR [rax+0x38],0xff
  462218:	nop
  462219:	movsxd esi,DWORD PTR [rbx]
  46221b:	call   QWORD PTR [rax-0x7800cc9d]
  462221:	imul   edi,DWORD PTR [rdi],0x95b4c0ff
  462227:	inc    DWORD PTR [rbp-0x7200caa0]
  46222d:	fs xor edi,edi
  462230:	mov    WORD PTR [rbx+rsi*1-0x1],fs
  462234:	nop
  462235:	gs xor bh,bh
  462238:	(bad)  
  462239:	gs xor edi,edi
  46223c:	mov    dh,BYTE PTR [rax+0x4b]
  46223f:	(bad)  
  462240:	mov    ebx,0x86ff91ac
  462245:	(bad)  
  462246:	xor    eax,0x356189ff
  46224b:	inc    ebp
  46224d:	mov    ebp,0xf2f4cfad
  462252:	icebp  
  462253:	pop    rax
  462254:	mov    ch,0xa9
  462256:	mov    ?,eax
  462258:	mov    DWORD PTR [rax+0x38],ebp
  46225b:	inc    DWORD PTR [rbx-0x7b00cc9e]
  462261:	(bad)  
  462262:	cmp    edi,edi
  462264:	mov    bl,0xa4
  462266:	xchg   edx,eax
  462267:	sti    
  462268:	scas   al,BYTE PTR es:[rdi]
  462269:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  46226a:	xchg   esp,ebp
  46226c:	xchg   BYTE PTR [rdi+0x36],ah
  46226f:	inc    DWORD PTR [rbx-0x7a00ce9f]
  462275:	fs cmp bh,bh
  462278:	movabs eax,ds:0x83ff94b7c5ff6b8e
  462281:	fs xor al,0xff
  462284:	test   DWORD PTR [rsi+0x3a],esp
  462287:	(bad)  
  462288:	mov    eax,0xfbe991a6
  46228d:	sti    
  46228e:	clc    
  46228f:	xor    al,BYTE PTR [rax]
  462291:	add    BYTE PTR [rax],al
  462293:	add    dl,bh
  462295:	cli    
  462296:	cli    
  462297:	(bad)  
  462298:	out    dx,al
  462299:	(bad)  
  46229a:	loope  0x46222c
  46229c:	out    0xe1,al
  46229e:	(bad)  [rbp+0x71e5ebee]
  4622a4:	sti    
  4622a5:	stc    
  4622a6:	div    BYTE PTR [rip+0x1cf6f7f8]        # 0x1d3d1aa4
  4622ac:	jmp    0x462294
  4622ae:	fcom   QWORD PTR [rdx+riz*8-0xe722d24]
  4622b5:	out    dx,eax
  4622b6:	in     al,0x74
  4622b8:	hlt    
  4622b9:	icebp  
  4622ba:	jmp    0xffffffffa7fce324
  4622bf:	fld    st(3)
  4622c1:	mov    ecx,0xe6eae9a8
  4622c6:	fiadd  WORD PTR [rcx+0x13fefefe]
  4622cc:	add    BYTE PTR [rax],al
  4622ce:	add    BYTE PTR [rax],al
  4622d0:	dec    DWORD PTR [rdi]
  4622d2:	add    BYTE PTR [rax],al
  4622d4:	inc    BYTE PTR [rdi]
  4622d6:	add    BYTE PTR [rax],al
  4622d8:	inc    BYTE PTR [rdi]
  4622da:	add    BYTE PTR [rax],al
  4622dc:	clc    
  4622dd:	(bad)  
  4622de:	add    BYTE PTR [rax],al
  4622e0:	rol    BYTE PTR [rcx],0x0
  4622e3:	add    BYTE PTR [rax+0x0],al
  4622e9:	add    eax,DWORD PTR [rax]
  4622eb:	add    BYTE PTR [rax],al
  4622ed:	add    DWORD PTR [rax],eax
  4622ef:	add    BYTE PTR [rax],al
  4622f1:	add    DWORD PTR [rax],eax
	...
  46230b:	add    BYTE PTR [rax+0x28000001],al
  462311:	add    BYTE PTR [rax],al
  462313:	add    BYTE PTR [rax],ah
  462315:	add    BYTE PTR [rax],al
  462317:	add    BYTE PTR [rax+0x0],al
  46231a:	add    BYTE PTR [rax],al
  46231c:	add    DWORD PTR [rax],eax
  46231e:	and    BYTE PTR [rax],al
  462320:	add    BYTE PTR [rax],al
  462322:	add    BYTE PTR [rax],al
  462324:	adc    BYTE PTR [rax],0x0
	...
  462377:	add    al,ch
  462379:	out    0xe0,al
  46237b:	mov    bl,0xdd
  46237d:	xlat   BYTE PTR ds:[rbx]
  46237e:	(bad)  
  46237f:	call   FWORD PTR [rcx-0x7600957e]
  462385:	jno    0x4623db
  462387:	call   FWORD PTR [rdx-0x4400957b]
  46238d:	stos   BYTE PTR es:[rdi],al
  46238e:	xchg   esp,eax
  46238f:	(bad)  
  462390:	jmp    0x462376
  462392:	xlat   BYTE PTR ds:[rbx]
  462393:	mov    ebp,0x3ff6fafb
	...
  4623f8:	(bad)  
  4623fa:	retf   0x9cd9
  4623fd:	mov    esi,DWORD PTR [rax-0x1]
  462400:	jle    0x46245c
  462402:	xor    bh,bh
  462404:	xchg   BYTE PTR [rdi+0x31],bl
  462407:	inc    DWORD PTR [rax+riz*2+0x5f80ff32]
  46240e:	jmp    QWORD PTR ss:[rcx-0x1a048e73]
  462415:	loopne 0x4623ec
  462417:	mov    ebp,0x0
	...
  462478:	ror    al,1
  46247a:	mov    cl,0xe6
  46247c:	jle    0x4624e4
  46247e:	rex.X call QWORD PTR [rcx-0x7000cd9b]
  462485:	fs xor bh,bh
  462488:	xchg   ecx,eax
  462489:	xor    di,di
  46248c:	xchg   ecx,eax
  46248d:	xor    di,di
  462490:	test   BYTE PTR [rbx+rdi*1-0x1],ah
  462494:	mov    esi,0xf6ff9caf
  462499:	cmc    
  46249a:	cmc    
  46249b:	pop    rax
	...
  4624f4:	(bad)  
  4624f5:	std    
  4624f6:	sti    
  4624f7:	sbb    ecx,eax
  4624f9:	mov    bh,0x9c
  4624fb:	(bad)  
  4624fc:	jl     0x462562
  4624fe:	rex call QWORD PTR [rax-0x7700cd9c]
  462505:	(bad)  
  462506:	xor    al,0xff
  462508:	mov    WORD PTR [rbp+0x34],fs
  46250b:	call   QWORD PTR [rax+rbp*2+0x6084ff2f]
  462512:	xor    bh,bh
  462514:	stos   BYTE PTR es:[rdi],al
  462515:	xchg   edi,eax
  462516:	jge    0x462517
  462518:	in     al,0xe1
  46251a:	(bad)  [rdx+0x6ffffff]
	...
  462574:	cmc    
  462575:	hlt    
  462576:	icebp  
  462577:	(bad)  
  462578:	mov    esp,0x85ff8daa
  46257d:	(bad)  
  46257e:	cmp    edi,edi
  462580:	mov    ah,BYTE PTR [rsi+0x31]
  462583:	dec    DWORD PTR [rbp-0x7400ce9d]
  462589:	data16 xor bh,bh
  46258c:	mov    WORD PTR [rax+0x2f],gs
  46258f:	dec    DWORD PTR [rbp-0x5a00cda0]
  462595:	mov    DWORD PTR [rdi-0x1],esp
  462598:	in     al,0xe3
  46259a:	fnstenv [rbx+0x9fdfdfd]
	...
  4625f4:	out    dx,eax
  4625f5:	out    dx,al
  4625f6:	jmp    0xffffffff88ece179
  4625fb:	dec    DWORD PTR [rbx-0x7600c9a1]
  462601:	addr32 (bad) 
  462603:	call   QWORD PTR [rbx-0x7200d09a]
  462609:	addr32 (bad) 
  46260b:	dec    DWORD PTR [rcx-0x6f00d098]
  462611:	(bad)  
  462612:	xor    edi,edi
  462614:	movabs eax,ds:0xfea0e1ecebff5c7f
  46261d:	(bad)  
  46261e:	inc    BYTE PTR [rbx]
	...
  462664:	(bad)  
  462665:	(bad)  
  462666:	dec    DWORD PTR [rdi+rdi*8]
  462669:	(bad)  
  46266a:	call   FWORD PTR [rdi+rdi*8]
  46266d:	(bad)  
  46266e:	dec    DWORD PTR [rcx]
  462670:	(bad)  
  462671:	(bad)  
  462672:	dec    DWORD PTR [rcx]
  462674:	rcl    edx,cl
  462676:	int    0xb3
  462678:	mov    eax,0x8eff86a3
  46267d:	(bad)  
  46267e:	(bad)  
  46267f:	dec    DWORD PTR [rbp-0x6a00d19b]
  462685:	data16 xor bh,bh
  462688:	lea    esp,[rdi+0x2f]
  46268b:	dec    DWORD PTR [rdx-0x6e00d097]
  462691:	(bad)  
  462692:	xor    edi,edi
  462694:	xchg   ebx,eax
  462695:	jae    0x4626e6
  462697:	(bad)  
  462698:	clc    
  462699:	repz call 0xfffffffffd43242c
  46269f:	sldt   WORD PTR [rax]
	...
  4626de:	add    BYTE PTR [rax],al
  4626e0:	stc    
  4626e1:	stc    
  4626e2:	clc    
  4626e3:	(bad)  
  4626e4:	jrcxz  0x4626c7
  4626e6:	fistp  WORD PTR [rbp-0x39282423]
  4626ec:	loopne 0x4626cd
  4626ee:	fdiv   QWORD PTR [rbx+0x29ffffff]
  4626f4:	retf   
  4626f5:	int3   
  4626f6:	(bad)  
  4626f7:	shl    DWORD PTR [rdi-0x7000795c],cl
  4626fd:	pop    rdi
  4626fe:	(bad)  
  4626ff:	call   QWORD PTR [rdx-0x6900cf99]
  462705:	gs (bad) 
  462707:	dec    DWORD PTR [rbp-0x7600d099]
  46270d:	push   0x5f90ff2e
  462712:	xor    bh,bh
  462714:	mov    WORD PTR [rax+rcx*2-0x1],gs
  462718:	in     al,dx
  462719:	loope  0x4626f1
  46271b:	in     al,dx
  46271c:	icebp  
  46271d:	in     eax,dx
  46271e:	in     eax,dx
  46271f:	outs   dx,BYTE PTR ds:[rsi]
	...
  462748:	sti    
  462749:	cli    
  46274a:	cli    
  46274b:	psubd  mm6,mm6
  46274e:	idiv   BYTE PTR [rsp+rbp*8]
  462751:	call   0xfffffffff036a93b
  462756:	in     eax,dx
  462757:	pop    rbx
  462758:	cli    
  462759:	cli    
  46275a:	stc    
  46275b:	(bad)  
  46275c:	in     al,0xe2
  46275e:	jrcxz  0x4627d7
  462760:	jmp    0x46274a
  462762:	in     al,0x6e
  462764:	int3   
  462765:	(bad)  
  462766:	mov    ebx,0xa2b3b9f8
  46276b:	call   rcx
  46276d:	retf   0xe6b3
  462770:	(bad)  
  462772:	int    0xe6
  462774:	int    0xce
  462776:	(bad)  
  462779:	lahf   
  46277a:	cmp    bh,0x90
  46277d:	pop    rsi
  46277e:	(bad)  
  46277f:	call   QWORD PTR [rsi-0x6800cf9a]
  462785:	gs xor bh,bh
  462788:	lea    esp,[rdi+0x2f]
  46278b:	dec    DWORD PTR [rcx-0x6c00d198]
  462791:	movsxd esi,DWORD PTR [rsi]
  462793:	inc    DWORD PTR [rdi-0x2000bd9a]
  462799:	fmul   st,st(6)
  46279b:	cmc    
  46279c:	icebp  
  46279d:	out    dx,eax
  46279e:	out    dx,al
  46279f:	pop    rax
	...
  4627c8:	icebp  
  4627c9:	out    dx,eax
  4627ca:	in     eax,dx
  4627cb:	rex.W in eax,0xd7
  4627ce:	leave  
  4627cf:	fstp   DWORD PTR [rbp-0x5100947a]
  4627d5:	pushf  
  4627d6:	test   edx,esi
  4627d8:	div    ebp
  4627da:	icebp  
  4627db:	rex.RB call 0xffffffffe8be0fc8
  4627e1:	in     eax,0xde
  4627e3:	int3   
  4627e4:	retf   0xbcc6
  4627e7:	jmp    QWORD PTR [rdx+rbx*4+0x6d7cff88]
  4627ee:	push   rdx
  4627ef:	call   QWORD PTR [rdx-0x1b008f77]
  4627f5:	loope  0x4627c5
  4627f7:	push   QWORD PTR [rcx-0x79007d65]
  4627fd:	pop    rbp
  4627fe:	cmp    edi,edi
  462800:	xchg   esp,eax
  462801:	gs xor edi,edi
  462804:	nop
  462805:	addr32 xor bh,bh
  462808:	mov    ebp,DWORD PTR [rax+0x2e]
  46280b:	dec    DWORD PTR [rax+rbp*2+0x628bff2e]
  462812:	xor    edi,edi
  462814:	test   BYTE PTR [rbx+0x3b],ah
  462817:	jmp    rcx
  462819:	fxch   st(3)
  46281b:	(bad)  
  46281c:	div    bl
  46281e:	(bad)  
  46281f:	test   dh,dh
  462821:	in     al,dx
  462822:	fisubr WORD PTR [rdx-0x621a0c05]
  462828:	std    
  462829:	sti    
  46282a:	hlt    
  46282b:	pop    rsi
  46282c:	sti    
  46282d:	sti    
  46282e:	stc    
  46282f:	sub    al,0x0
	...
  46283d:	add    BYTE PTR [rax],al
  46283f:	add    bh,bh
  462841:	(bad)  
  462842:	dec    DWORD PTR [rcx]
  462844:	icebp  
  462845:	out    dx,eax
  462846:	out    dx,al
  462847:	pop    rbx
  462848:	in     eax,0xdd
  46284a:	ror    ah,cl
  46284c:	cwde   
  46284d:	(bad)  
  46284e:	inc    DWORD PTR gs:[rbp-0x7c00cfa0]
  462855:	(bad)  
  462856:	(bad)  
  462857:	inc    ebx
  462859:	mov    eax,0xf5f8dfa5
  46285e:	out    dx,al
  46285f:	div    rdi
  462862:	neg    DWORD PTR [rdi]
  462864:	fstp   st(4)
  462866:	fst    DWORD PTR [rax-0x132b2221]
  46286c:	ror    dl,cl
  46286e:	mov    ecx,0x47636bff
  462873:	jmp    FWORD PTR [rcx-0x48007a61]
  462879:	sahf   
  46287a:	xchg   bh,bh
  46287c:	(bad)  
  46287d:	pop    rsi
  46287e:	cmp    edi,edi
  462880:	xchg   ecx,eax
  462881:	gs xor al,0xff
  462884:	mov    WORD PTR [rdi+0x30],fs
  462887:	dec    DWORD PTR [rbx-0x6f00d198]
  46288d:	push   0x6289ff2e
  462892:	xor    bh,bh
  462894:	test   BYTE PTR [rcx+0x36],ah
  462897:	(bad)  
  462898:	fxch   st(2)
  46289a:	mov    eax,0x91a1afff
  46289f:	(bad)  
  4628a0:	js     0x462906
  4628a2:	rex.WRX inc QWORD PTR [rsi-0x66009f8b]
  4628a9:	xchg   edx,eax
  4628aa:	xchg   bh,bh
  4628ac:	mov    bl,0xaf
  4628ae:	stos   DWORD PTR es:[rdi],eax
  4628af:	(bad)  
  4628b0:	out    dx,eax
  4628b1:	in     al,dx
  4628b2:	in     al,dx
  4628b3:	je     0x4628af
  4628b5:	clc    
  4628b6:	test   DWORD PTR [rdi],0x0
  4628bc:	add    BYTE PTR [rax],al
  4628be:	add    BYTE PTR [rax],al
  4628c0:	sti    
  4628c1:	sti    
  4628c2:	sti    
  4628c3:	(bad)  
  4628c4:	call   0xffffffffc6ee0aaf
  4628c9:	mov    ah,0x9c
  4628cb:	repnz test BYTE PTR [rbp+0x3e],ah
  4628cf:	dec    DWORD PTR [rbp-0x7200d39d]
  4628d5:	gs xor bh,bh
  4628d8:	xchg   DWORD PTR [rsi+0x4f],ebp
  4628db:	call   rdx
  4628dd:	(bad)  
  4628de:	mov    cl,0xd9
  4628e0:	stc    
  4628e1:	div    eax
  4628e3:	(bad)  
  4628e4:	stc    
  4628e5:	stc    
  4628e6:	stc    
  4628e7:	or     al,0xe6
  4628e9:	out    0xe4,al
  4628eb:	jp     0x4628d2
  4628ed:	in     al,0xdd
  4628ef:	inc    edi
  4628f1:	ret    
  4628f2:	lods   al,BYTE PTR ds:[rsi]
  4628f3:	(bad)  
  4628f4:	fcom   st(0)
  4628f6:	mov    ch,0xff
  4628f8:	sahf   
  4628f9:	jg     0x46295b
  4628fb:	inc    DWORD PTR [rdi-0x6e00c7a1]
  462901:	gs xor al,0xff
  462904:	mov    WORD PTR [rsi+0x32],fs
  462907:	dec    DWORD PTR [rbp-0x6e00cf9a]
  46290d:	dec    DWORD PTR cs:[esi-0x7c00cd9b]
  462915:	pop    rdi
  462916:	xor    edi,edi
  462918:	(bad)
  46291b:	call   rax
  46291d:	enter  0xffb6,0xac
  462921:	movabs al,ds:0xcfd4ccbac8d0ff8e
  46292a:	enter  0xce8d,0xc9
  46292e:	(bad)  
  46292f:	(bad)  
  462930:	jrcxz  0x462913
  462932:	fnstsw WORD PTR [rbx-0x13]
  462935:	jmp    0x465920
  46293a:	add    BYTE PTR [rax],al
  46293c:	(bad)  
  46293d:	(bad)  
  46293e:	inc    DWORD PTR [rsi]
  462940:	in     eax,dx
  462941:	in     al,dx
  462942:	(bad)  
  462943:	xchg   edi,ebx
  462945:	(bad)  
  462947:	in     al,dx
  462948:	mov    ch,BYTE PTR [rbp+rax*2-0x1]
  46294c:	mov    DWORD PTR [rsp+rsi*1-0x1],esp
  462950:	xchg   edx,eax
  462951:	sub    ax,0x92ff
  462955:	addr32 (bad) 
  462957:	inc    DWORD PTR [rdx+riz*2+0x687cff35]
  46295e:	rex.WB jmp r13
  462961:	fmul   st(1),st
  462963:	clc    
  462964:	jrcxz  0x462945
  462966:	(bad)  
  462967:	mov    edx,0xc0b6c2c8
  46296c:	(bad)  
  46296d:	int3   
  46296e:	mov    ebx,0xcce2e4ff
  462973:	jmp    QWORD PTR [rcx-0x7700886c]
  462979:	(bad)  
  46297a:	(bad)  
  46297b:	call   QWORD PTR [rcx-0x7000c99d]
  462981:	fs xor al,0xff
  462984:	lea    esp,[rsi+rsi*1-0x1]
  462988:	nop
  462989:	gs xor edi,edi
  46298c:	xchg   esp,eax
  46298d:	gs xor bh,bh
  462990:	xchg   ecx,eax
  462991:	gs xor bh,bh
  462994:	mov    DWORD PTR [rbx+0x33],esp
  462997:	inc    DWORD PTR [rcx-0x2e00af91]
  46299d:	retf   0xffb5
  4629a0:	repnz icebp 
  4629a2:	in     eax,dx
  4629a3:	pop    rsi
  4629a4:	jmp    0x9f1092
	...
  4629b9:	add    BYTE PTR [rax],al
  4629bb:	add    bh,bh
  4629bd:	(bad)  
  4629be:	jmp    FWORD PTR [rcx+rbx*8]
  4629c1:	(bad)  
  4629c2:	rcl    bl,1
  4629c4:	mov    edx,0x7dec9eb0
  4629c9:	pop    rbp
  4629ca:	xor    al,0xff
  4629cc:	mov    BYTE PTR [rbp+rsi*1-0x1],ah
  4629d0:	mov    fs,WORD PTR [rcx+rsi*1-0x1]
  4629d4:	nop
  4629d5:	addr32 xor edi,edi
  4629d8:	mov    BYTE PTR [rdx+0x31],ah
  4629db:	jmp    QWORD PTR [rcx-0x1b009474]
  4629e1:	fcmovnb st,st(4)
  4629e3:	call   FWORD PTR [rax+0x74ff758a]
  4629e9:	(bad)  
  4629ea:	rex.RX call QWORD PTR [rbp-0x2000a884]
  4629f1:	fdivr  QWORD PTR [rdi+0x52707eff]
  4629f7:	call   QWORD PTR [rdx-0x6a00c99b]
  4629fd:	fs xor edi,edi
  462a00:	(bad)  
  462a01:	fs xor al,0xff
  462a04:	mov    fs,WORD PTR [rdx+0x38]
  462a07:	call   QWORD PTR [rbx-0x6900ca9d]
  462a0d:	fs xor bh,bh
  462a10:	xchg   esi,eax
  462a11:	push   0x648bff32
  462a16:	xor    bh,bh
  462a18:	cdq    
  462a19:	xchg   DWORD PTR [rbx-0x1],esp
  462a1c:	jmp    0xffffffffdb45fe07
  462a21:	(bad)  
  462a23:	(bad)  
  462a24:	fcomp  st(0)
  462a26:	fxch   st(7)
	...
  462a38:	(bad)  
  462a39:	(bad)  
  462a3a:	inc    DWORD PTR [rsi]
  462a3c:	in     eax,dx
  462a3d:	in     al,dx
  462a3e:	in     al,dx
  462a3f:	jle    0x462a20
  462a41:	rol    ebp,cl
  462a43:	call   FWORD PTR [rbx-0x7400987c]
  462a49:	fs xor bh,bh
  462a4c:	(bad)  
  462a4d:	gs xor bh,bh
  462a50:	xchg   edx,eax
  462a51:	addr32 xor edi,edi
  462a54:	mov    esp,DWORD PTR [rbx+rsi*1-0x1]
  462a58:	mov    ?,WORD PTR [rcx+0x4a]
  462a5b:	jmp    rax
  462a5d:	(bad)  
  462a5e:	mov    ebp,0x6e8ea3ff
  462a63:	(bad)  
  462a64:	jle    0x462ac5
  462a66:	(bad)  
  462a67:	inc    DWORD PTR [rbp-0x7a00c79d]
  462a6d:	movsxd edi,DWORD PTR [rdx]
  462a6f:	(bad)  
  462a70:	fcmove st,st(3)
  462a72:	mov    al,0xff
  462a74:	scas   al,BYTE PTR es:[rdi]
  462a75:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  462a76:	cmp    edi,0xffffff86
  462a79:	(bad)  
  462a7a:	sub    eax,0x2f6499ff
  462a7f:	dec    DWORD PTR [rsp+riz*2+0x6489ff32]
  462a86:	call   QWORD PTR ss:[rdx-0x6800cd9b]
  462a8d:	call   WORD PTR cs:[rsi+riz*2+0x6188ff32]
  462a96:	ss (bad) 
  462a98:	fcmove st,st(0)
  462a9a:	mov    al,0xff
  462a9c:	(bad)  
  462a9d:	rol    al,cl
  462a9f:	call   rcx
  462aa1:	rol    esi,1
  462aa3:	call   rsp
  462aa5:	int    0xc8
  462aa7:	out    0xef,al
  462aa9:	in     eax,dx
  462aaa:	in     al,dx
  462aab:	(bad)  
	...
  462ab8:	(bad)  
  462ab9:	(bad)  
  462aba:	call   FWORD PTR [rcx]
  462abc:	(bad)  
  462abd:	(bad)  
  462abe:	rol    bl,cl
  462ac0:	(bad)  
  462ac2:	mov    esi,0x4a6d88ff
  462ac7:	call   QWORD PTR [rcx-0x6b00cf9b]
  462acd:	call   WORD PTR cs:[rdx-0x7500d19a]
  462ad5:	movsxd esi,DWORD PTR [rbx]
  462ad7:	jmp    QWORD PTR [rcx-0x1c009a79]
  462add:	fadd   st,st(3)
  462adf:	(bad)  
  462ae0:	jle    0x462b48
  462ae2:	rex.XB inc DWORD PTR [r15-0x7400cd9e]
  462ae9:	gs xor eax,0x365c80ff
  462aef:	push   QWORD PTR [rax-0x2d007e66]
  462af5:	retf   0xffab
  462af8:	and    DWORD PTR [rcx+0x2e],0x306399ff
  462aff:	dec    DWORD PTR [rbp+riz*2+0x648bff32]
  462b06:	xor    al,0xff
  462b08:	xchg   esp,eax
  462b09:	gs xor edi,edi
  462b0c:	xchg   esi,eax
  462b0d:	data16 (bad) 
  462b0f:	dec    DWORD PTR [rsi-0x6c00cd9d]
  462b15:	je     0x462b65
  462b17:	jmp    rdx
  462b19:	xlat   BYTE PTR ds:[rbx]
  462b1a:	ret    
  462b1b:	dec    DWORD PTR [rdx-0x23008c7a]
  462b21:	fmul   st(3),st
  462b23:	jmp    QWORD PTR [rsi-0x8007368]
  462b29:	icebp  
  462b2a:	jmp    0x462ab0
  462b2c:	cld    
  462b2d:	cld    
  462b2e:	sti    
  462b2f:	(bad)  
	...
  462b38:	(bad)  
  462b39:	(bad)  
  462b3a:	call   QWORD PTR [rdx]
  462b3c:	jmp    0xffffffffc4030b26
  462b41:	mov    al,0x96
  462b43:	inc    DWORD PTR [rbx-0x6e00c49d]
  462b49:	xor    di,di
  462b4c:	xchg   ebx,eax
  462b4d:	call   WORD PTR cs:[rbx-0x7500d19a]
  462b55:	movsxd esi,DWORD PTR [rdx]
  462b57:	jmp    FWORD PTR [rbx-0x2300916f]
  462b5d:	(bad)  
  462b5e:	mov    bh,0xff
  462b60:	jp     0x462bc1
  462b62:	cmp    bh,bh
  462b64:	mov    WORD PTR [rbp+0x34],fs
  462b67:	dec    DWORD PTR [rbx+riz*2+0x6185ff31]
  462b6e:	(bad)  
  462b6f:	dec    DWORD PTR [rdi-0x2400a78c]
  462b75:	shl    DWORD PTR [rax+0x396583ff],1
  462b7b:	call   QWORD PTR [rsi-0x6f00cb9d]
  462b81:	gs xor bh,bh
  462b84:	xchg   ebx,eax
  462b85:	movsxd esi,DWORD PTR [rax]
  462b87:	call   FWORD PTR [rax-0x6f00cd9c]
  462b8d:	fs xor edi,edi
  462b90:	(bad)  
  462b91:	movsxd esi,DWORD PTR [rdi]
  462b93:	(bad)  
  462b94:	mov    edi,0xaeff88ae
  462b99:	cwde   
  462b9a:	jle    0x462b9b
  462b9c:	jb     0x462c04
  462b9e:	rex.WR jmp rsp
  462ba1:	loopne 0x462b6b
  462ba3:	dec    DWORD PTR [rdx-0x2d009d8b]
  462ba9:	(bad)  
  462baa:	mov    ch,0xe2
  462bac:	cli    
  462bad:	cli    
  462bae:	cmc    
  462baf:	(bad)  
	...
  462bb8:	sti    
  462bb9:	sti    
  462bba:	cli    
  462bbb:	(bad)  
  462bbc:	repz in eax,dx
  462bbe:	jrcxz  0x462b70
  462bc0:	movabs ds:0x90ff356387ff6c8b,eax
  462bc9:	gs (bad) 
  462bcb:	call   QWORD PTR [rdx-0x6c00d29b]
  462bd1:	dec    WORD PTR cs:[rdx-0x5900cc9d]
  462bd9:	mov    ebp,DWORD PTR [rax-0x1]
  462bdc:	in     al,0xd6
  462bde:	mov    ebp,0x3b627eff
  462be3:	dec    DWORD PTR [rbx+riz*2+0x6490ff31]
  462bea:	xor    edi,edi
  462bec:	mov    ah,BYTE PTR [rdi+rsi*1-0x1]
  462bf0:	mov    BYTE PTR [rax+0x4a],ch
  462bf3:	call   rdx
  462bf5:	(bad)
  462bf8:	and    DWORD PTR [rdi+0x43],0x376092ff
  462bff:	call   QWORD PTR [rdx-0x6a00ce9b]
  462c05:	movsxd ebp,DWORD PTR [rdi]
  462c07:	call   QWORD PTR [rbx-0x7700cc9d]
  462c0d:	movsxd edi,DWORD PTR [rcx]
  462c0f:	dec    DWORD PTR [rbp+rsi*2-0x2d2400b1]
  462c16:	lods   eax,DWORD PTR ds:[rsi]
  462c17:	inc    DWORD PTR [rbx+0x7fff4769]
  462c1d:	outs   dx,DWORD PTR ds:[rsi]
  462c1e:	rex.WRB jmp r15
  462c21:	loopne 0x462be5
  462c23:	dec    DWORD PTR [rcx+rsi*2-0x725b00a9]
  462c2a:	jbe    0x462c27
  462c2c:	repz lock in al,0x8b
	...
  462c38:	div    esi
  462c3a:	hlt    
  462c3b:	rex.WXB (bad) 
  462c3d:	loop   0x462c14
  462c3f:	cmc    
  462c40:	xchg   BYTE PTR [rcx+0x45],ch
  462c43:	dec    DWORD PTR [rbp-0x6f00cf9d]
  462c49:	gs (bad) 
  462c4b:	call   QWORD PTR [rcx-0x6c00d39c]
  462c51:	addr32 (bad) 
  462c53:	dec    DWORD PTR [rbx-0x6600cc9c]
  462c59:	jle    0x462cb6
  462c5b:	(bad)  
  462c5c:	call   0xffffffff8745ed3c
  462c61:	push   0x658fff3f
  462c66:	xor    bh,bh
  462c68:	xchg   esp,eax
  462c69:	xor    di,di
  462c6c:	mov    esp,DWORD PTR [rbx+0x35]
  462c6f:	inc    DWORD PTR [rdi-0x2f00ba9c]
  462c75:	ret    0xffa6
  462c78:	sub    DWORD PTR [rdx+0x4d],0x3b5e8fff
  462c7f:	call   QWORD PTR [rbp+riz*2+0x6690ff31]
  462c86:	dec    DWORD PTR cs:[rax+0x7aff3564]
  462c8d:	(bad)  
  462c8e:	cmp    edi,edi
  462c90:	mov    dh,0xa6
  462c92:	xchg   bh,bh
  462c94:	rol    esp,cl
  462c96:	movabs al,ds:0x588096ff345b7dff
  462c9f:	jmp    rcx
  462ca1:	fdiv   DWORD PTR [rdx+0x4b6d8dff]
  462ca7:	inc    DWORD PTR [rsi-0x2f00b596]
  462cad:	retf   
  462cae:	mov    bh,0xd9
  462cb0:	(bad)  
  462cb1:	(bad)  
  462cb2:	(bad)  
  462cb3:	adc    al,BYTE PTR [rax]
  462cb5:	add    BYTE PTR [rax],al
  462cb7:	add    cl,bh
  462cb9:	cli    
  462cba:	idiv   DWORD PTR [rdi]
  462cbc:	rol    edi,1
  462cbe:	mov    dh,0xe9
  462cc0:	sbb    DWORD PTR [rbx+0x35],0x306590ff
  462cc7:	call   QWORD PTR [rcx-0x6d00cd9b]
  462ccd:	gs (bad) 
  462ccf:	call   QWORD PTR [rbx-0x7500d19a]
  462cd5:	movsxd esi,DWORD PTR [rcx]
  462cd7:	call   QWORD PTR [rsi-0x1600a984]
  462cdd:	fld    st(0)
  462cdf:	dec    DWORD PTR [rcx-0x7600ba96]
  462ce5:	(bad)  {k6}{z}
  462cea:	xor    bh,bh
  462cec:	mov    WORD PTR [rdx+0x31],fs
  462cef:	inc    DWORD PTR [rbp-0x2b00b697]
  462cf5:	(bad)  
  462cf6:	test   al,0xff
  462cf8:	mov    BYTE PTR [rdx+0x44],ch
  462cfb:	dec    DWORD PTR [rbx-0x7200c69f]
  462d01:	fs xor eax,0x32668fff
  462d07:	dec    DWORD PTR [rcx+0x7bff3868]
  462d0d:	(bad)  
  462d0e:	cmp    eax,0xb4d3deff
  462d13:	jmp    FWORD PTR [rbx-0x7b008e68]
  462d19:	(bad)  {k5}{z}
  462d1e:	(bad)  
  462d1f:	(bad)  
  462d20:	(bad)  
  462d22:	mov    bl,0xff
  462d24:	mov    BYTE PTR [rbx+0x40],ch
  462d27:	(bad)  
  462d28:	jg     0x462d8c
  462d2a:	xor    bh,bh
  462d2c:	movabs al,ds:0x5ef9fcfcff7291
  462d35:	add    BYTE PTR [rax],al
  462d37:	add    dl,dh
  462d39:	cmc    
  462d3a:	out    dx,al
  462d3b:	push   0xfffffffff892a7b3
  462d40:	xchg   BYTE PTR [rbp+rsi*1-0x1],bl
  462d44:	mov    fs,WORD PTR [rbp+0x30]
  462d47:	call   QWORD PTR [rax-0x6c00cb9c]
  462d4d:	gs xor bh,bh
  462d50:	xchg   edx,eax
  462d51:	dec    WORD PTR cs:[rdx-0x6400ce9c]
  462d59:	(bad)  
  462d5a:	pop    rdx
  462d5b:	(bad)  
  462d5c:	call   0x7d45ee3c
  462d61:	fs rex.X (bad) 
  462d64:	jl     0x462dc5
  462d66:	dec    DWORD PTR ss:[rcx-0x6000bd94]
  462d6d:	sbb    DWORD PTR [rsi-0x1],0xffffff8a
  462d71:	jl     0x462dd1
  462d73:	(bad)  
  462d74:	fcmove st,st(7)
  462d76:	lods   eax,DWORD PTR ds:[rsi]
  462d77:	dec    DWORD PTR [rcx-0x7200c79a]
  462d7d:	movsxd esi,DWORD PTR [rip+0x386290ff]        # 0x38a8be82
  462d83:	call   QWORD PTR [rdx-0x7700cd9c]
  462d89:	movsxd esi,DWORD PTR [rbx]
  462d8b:	dec    DWORD PTR [rax-0x1400b692]
  462d91:	loopne 0x462d55
  462d93:	dec    DWORD PTR [rax+0x7dff5c7a]
  462d99:	gs cmp bh,bh
  462d9c:	mov    WORD PTR [rbp+0x5b],?
  462d9f:	jmp    rax
  462da1:	(bad)  
  462da2:	mov    ebx,0x42718eff
  462da7:	dec    DWORD PTR [rcx-0x7d00d19c]
  462dad:	data16 rex.X (bad) 
  462db0:	(bad)  
  462db1:	in     eax,0xdb
  462db3:	mov    edx,0x1cf8fafa
  462db8:	loope  0x462d9e
  462dba:	fcmovu st,st(7)
  462dbc:	movabs ds:0x8eff37608cff7c92,eax
  462dc5:	addr32 (bad) 
  462dc7:	call   QWORD PTR [rax-0x6c00cb9b]
  462dcd:	gs xor bh,bh
  462dd0:	xchg   edx,eax
  462dd1:	sub    ax,0x8aff
  462dd5:	fs xor edi,edi
  462dd8:	sahf   
  462dd9:	test   BYTE PTR [rdi+rdi*8-0x12],bl
  462ddd:	in     eax,0xca
  462ddf:	call   QWORD PTR [rbx+0x72ff6283]
  462de5:	pop    rdi
  462de6:	cmp    edi,edi
  462de8:	movabs al,ds:0xb8ffc2dae3ff7292
  462df1:	mov    bl,0x98
  462df3:	call   rdi
  462df5:	shr    BYTE PTR [rdi+rdi*8-0xce9f7b],1
  462dfc:	xchg   ebx,eax
  462dfd:	movsxd esi,DWORD PTR [rdi+rdi*8]
  462e00:	xchg   esi,eax
  462e01:	(bad)  
  462e02:	call   QWORD PTR ss:[rsp+riz*2+0x648bff30]
  462e0a:	xor    edi,edi
  462e0c:	mov    DWORD PTR [rbp+0x45],ebp
  462e0f:	jmp    rbp
  462e11:	fadd   st(2),st
  462e13:	call   FWORD PTR [rax-0x41008270]
  462e19:	mov    bl,0x8f
  462e1b:	inc    DWORD PTR [rbx-0x1600a183]
  462e21:	loop   0x462dec
  462e23:	call   FWORD PTR [rdx+rdi*2+0x6392ff4f]
  462e2a:	(bad)  
  462e2b:	inc    DWORD PTR [rbx-0x2c00c9a4]
  462e31:	retf   0xe5b8
  462e34:	cli    
  462e35:	cli    
  462e36:	cmc    
  462e37:	cmp    esp,ecx
  462e39:	(bad)  
  462e3b:	call   FWORD PTR [rcx+rax*4+0x6190ff69]
  462e42:	xor    eax,0x2c688dff
  462e47:	call   QWORD PTR [rax-0x6c00cc9c]
  462e4d:	gs xor bh,bh
  462e50:	xchg   edx,eax
  462e51:	dec    WORD PTR cs:[rdx-0x6500ce9c]
  462e59:	sbb    DWORD PTR [rdx-0x1],0xffcfe6ee
  462e60:	in     eax,0xdc
  462e62:	mov    edi,0xaeced9ff
  462e67:	(bad)  
  462e68:	mov    edx,0xbaff96b3
  462e6d:	mov    ch,0xa1
  462e6f:	jmp    rcx
  462e71:	fcmovnb st,st(0)
  462e73:	push   QWORD PTR [rsi-0x7700815c]
  462e79:	(bad)  
  462e7a:	(bad)  
  462e7b:	call   QWORD PTR [rdx-0x6c00ce9c]
  462e81:	fs xor edi,edi
  462e84:	xchg   ecx,eax
  462e85:	movsxd esi,DWORD PTR [rax]
  462e87:	dec    DWORD PTR [rsi-0x7a00ce9b]
  462e8d:	(bad)  
  462e8e:	xor    eax,0x94b5c6ff
  462e93:	(bad)  
  462e94:	(bad)  
  462e96:	mov    edi,0xa0bec5ff
  462e9b:	jmp    QWORD PTR [rdx-0x14007862]
  462ea1:	in     eax,0xd2
  462ea3:	jmp    QWORD PTR [rbp-0x6800a67c]
  462ea9:	fs xor bh,bh
  462eac:	mov    WORD PTR [rsi+0x33],ds
  462eaf:	push   QWORD PTR [rdi-0xe07775a]
  462eb5:	out    dx,eax
  462eb6:	out    0x6e,al
  462eb8:	in     al,0xdf
  462eba:	sar    edi,1
  462ebc:	xchg   ebp,eax
  462ebd:	jne    0x462f1a
  462ebf:	call   QWORD PTR [rbx+riz*2+0x6b8eff35]
  462ec6:	sub    eax,0x336590ff
  462ecb:	call   QWORD PTR [rbx-0x6c00cf9b]
  462ed1:	dec    DWORD PTR cs:[ebp+eiz*2+0x7b94ff32]
  462eda:	push   rsp
  462edb:	jmp    rdi
  462edd:	fld    st(5)
  462edf:	call   QWORD PTR [rbx-0x5500997e]
  462ee5:	xchg   esi,eax
  462ee6:	je     0x462ee7
  462ee8:	int    0xba
  462eea:	cwde   
  462eeb:	dec    edi
  462eed:	mov    esp,0x93abff9f
  462ef2:	je     0x462ef3
  462ef4:	mov    ch,BYTE PTR [rax+0x42]
  462ef7:	dec    DWORD PTR [rsi-0x7000ce9b]
  462efd:	data16 xor bh,bh
  462f00:	mov    esp,DWORD PTR [rsi+0x32]
  462f03:	dec    DWORD PTR [rbx-0x7100cc9c]
  462f09:	gs xor bh,bh
  462f0c:	lea    esp,[rsi+0x30]
  462f0f:	dec    DWORD PTR [rdi-0x4700be8f]
  462f15:	test   al,0x85
  462f17:	(bad)  
  462f18:	fmul   st,st(5)
  462f1a:	mov    dl,0xff
  462f1c:	fcmovnbe st,st(4)
  462f1e:	ret    
  462f1f:	(bad)  
  462f20:	out    dx,eax
  462f21:	jmp    0xffffffff80e82f00
  462f26:	push   rsi
  462f27:	call   QWORD PTR [rcx-0x7200d19d]
  462f2d:	(bad)  {k7}{z}
  462f32:	push   0xffffffffffffffff
  462f34:	hlt    
  462f35:	icebp  
  462f36:	out    0x8d,al
  462f38:	out    0xdf,al
  462f3a:	iret   
  462f3b:	call   QWORD PTR [rdi+rsi*2+0x6595ff58]
  462f42:	call   QWORD PTR ss:[rdx-0x7200d399]
  462f49:	gs xor edi,edi
  462f4c:	mov    fs,WORD PTR [rbp+0x31]
  462f4f:	dec    DWORD PTR [rsi-0x7600cf9a]
  462f55:	gs xor bh,bh
  462f58:	mov    ch,BYTE PTR [rsi+0x44]
  462f5b:	jmp    rcx
  462f5d:	(bad)  
  462f5e:	mov    ebp,0x68859dff
  462f63:	(bad)  
  462f64:	jle    0x462fc4
  462f66:	inc    DWORD PTR ss:[rbx-0x7c00cfa1]
  462f6d:	pop    rsi
  462f6e:	(bad)  
  462f6f:	dec    DWORD PTR [rax-0x7200c79f]
  462f75:	(bad)  
  462f76:	cmp    bh,bh
  462f78:	nop
  462f79:	data16 xor bh,bh
  462f7c:	mov    fs,WORD PTR [rsi+0x31]
  462f7f:	dec    DWORD PTR [rax-0x7700cd99]
  462f85:	fs xor al,0xff
  462f88:	(bad)  
  462f89:	fs xor bh,bh
  462f8c:	xchg   edi,eax
  462f8d:	call   QWORD PTR cs:[ecx-0x7b00d19b]
  462f95:	movsxd esi,DWORD PTR [rcx]
  462f97:	push   QWORD PTR [rbp+0x5c]
  462f9a:	cmp    al,0xff
  462f9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  462f9d:	xchg   esi,eax
  462f9e:	cmp    edi,0xffffffd7
  462fa1:	(bad)  
  462fa2:	scas   eax,DWORD PTR es:[rdi]
  462fa3:	dec    DWORD PTR [rbp-0x7200c197]
  462fa9:	gs xor edi,edi
  462fac:	mov    ah,BYTE PTR [rbx+0x31]
  462faf:	call   FWORD PTR [rdx-0x1700aa82]
  462fb5:	jrcxz  0x462f8d
  462fb7:	(bad)  
  462fb8:	out    0xdf,al
  462fba:	int    0xff
  462fbc:	cwde   
  462fbd:	test   DWORD PTR [rax-0x1],esp
  462fc0:	lea    esp,[rbx+0x34]
  462fc3:	call   FWORD PTR [rcx-0x7300cf9e]
  462fc9:	addr32 xor al,0xff
  462fcc:	mov    ah,BYTE PTR [rbp+0x33]
  462fcf:	dec    DWORD PTR [rcx-0x7500cd9c]
  462fd5:	gs xor edi,edi
  462fd8:	mov    BYTE PTR [rbp+0x36],ah
  462fdb:	inc    ebp
  462fdd:	mov    bh,0x96
  462fdf:	inc    ebx
  462fe1:	scas   eax,DWORD PTR es:[rdi]
  462fe2:	mov    edi,edi
  462fe4:	and    DWORD PTR [rdx+0x36],0x2f648bff
  462feb:	dec    DWORD PTR [rdi-0x6e00d49c]
  462ff1:	gs xor bh,bh
  462ff4:	(bad)  
  462ff5:	fs xor al,0xff
  462ff8:	(bad)  
  462ff9:	gs xor al,0xff
  462ffc:	(bad)  
  462ffd:	gs xor al,0xff
  463000:	(bad)  
  463001:	gs xor al,0xff
  463004:	(bad)  
  463005:	gs xor bh,bh
  463008:	xchg   ebx,eax
  463009:	fs xor bh,bh
  46300c:	cwde   
  46300d:	movsxd esi,DWORD PTR [rdx]
  46300f:	call   QWORD PTR [rbx+riz*2+0x658cff32]
  463016:	xor    edi,edi
  463018:	mov    bh,BYTE PTR [rcx+0x59]
  46301b:	(bad)  
  46301c:	(bad)  
  46301e:	mov    edx,0x638ca8ff
  463023:	dec    DWORD PTR [rsp+riz*2+0x6590ff34]
  46302a:	xor    al,0xff
  46302c:	mov    WORD PTR [rbx+rsi*1-0x1],fs
  463030:	xchg   esp,eax
  463031:	jl     0x463088
  463033:	jmp    rsp
  463035:	fst    st(0)
  463037:	(bad)  
  463038:	out    0xe3,eax
  46303a:	fcom   st(3)
  46303c:	mov    dl,0xa2
  46303e:	mov    al,bh
  463040:	jge    0x46309f
  463042:	dec    DWORD PTR ss:[rdx+riz*2+0x6491ff32]
  46304a:	xor    al,0xff
  46304c:	xchg   ecx,eax
  46304d:	fs xor al,0xff
  463050:	(bad)  
  463051:	(bad)  {z}
  463056:	xor    edi,edi
  463058:	mov    ah,BYTE PTR [rdx+0x33]
  46305b:	dec    DWORD PTR [rbp-0x1900a583]
  463061:	loopne 0x463022
  463063:	dec    DWORD PTR [rbx-0x7a00ac8a]
  463069:	(bad)  
  46306a:	call   QWORD PTR ss:[rdx-0x7000ce9d]
  463071:	movsxd esi,DWORD PTR [rcx]
  463073:	dec    DWORD PTR [rbp+riz*2+0x648dff34]
  46307a:	xor    edi,edi
  46307c:	lea    esp,[rbx+rsi*1-0x1]
  463080:	lea    esp,[rbx+rsi*1-0x1]
  463084:	xchg   ebx,eax
  463085:	gs (bad) 
  463087:	call   QWORD PTR [rsi-0x6f00d09a]
  46308d:	fs xor edi,edi
  463090:	and    DWORD PTR [rax+0x37],0xffffffff
  463094:	jg     0x4630fa
  463096:	ds (bad) 
  463098:	fnop   
  46309a:	mov    ecx,0x92acbbff
  46309f:	(bad)  
  4630a0:	jle    0x463100
  4630a2:	xor    eax,0x32638bff
  4630a7:	call   QWORD PTR [rdx-0x7500ce9c]
  4630ad:	movsxd esi,DWORD PTR [rdi+rdi*8]
  4630b0:	mov    ?,WORD PTR [rbp+0x60]
  4630b3:	jmp    rbp
  4630b5:	(bad)  
  4630b7:	(bad)  
  4630b8:	repz lock in al,dx
  4630bb:	(bad)  
  4630bc:	fmul   st,st(4)
  4630be:	mov    ebp,0x405f77f8
  4630c3:	inc    DWORD PTR [rdx-0x6f00c79d]
  4630c9:	movsxd esi,DWORD PTR [rdx]
  4630cb:	call   QWORD PTR [rax-0x6e00cc9d]
  4630d1:	fs xor al,0xff
  4630d4:	nop
  4630d5:	fs xor edi,edi
  4630d8:	lea    esp,[rbx+0x34]
  4630db:	push   QWORD PTR [rdi+0x62]
  4630de:	cmp    al,0xff
  4630e0:	ror    ebx,cl
  4630e2:	scas   al,BYTE PTR es:[rdi]
  4630e3:	(bad)  
  4630e4:	mov    esp,0x74ff94af
  4630e9:	pop    rcx
  4630ea:	(bad)  
  4630eb:	inc    DWORD PTR [rdi-0x7400ca9f]
  4630f1:	fs xor bh,bh
  4630f4:	mov    WORD PTR [rbp+0x34],fs
  4630f7:	dec    DWORD PTR [rbx-0x7500cc9c]
  4630fd:	movsxd esi,DWORD PTR [rdx]
  4630ff:	dec    DWORD PTR [rbx-0x6b00cd9d]
  463105:	addr32 xor edi,edi
  463108:	nop
  463109:	gs xor edi,edi
  46310c:	xchg   BYTE PTR [rbp+0x37],ah
  46310f:	push   QWORD PTR [rdi+0x5e]
  463112:	cmp    edi,edi
  463114:	lods   eax,DWORD PTR ds:[rsi]
  463115:	pushf  
  463116:	jge    0x463117
  463118:	(bad)  
  463119:	enter  0xffad,0x84
  46311d:	outs   dx,BYTE PTR ds:[rsi]
  46311e:	rex.WRB inc QWORD PTR [r11-0x7500c89d]
  463125:	fs xor al,0xff
  463128:	mov    esp,DWORD PTR [rdx+0x36]
  46312b:	(bad)  
  46312c:	jge    0x46318a
  46312e:	(bad)  
  46312f:	jmp    FWORD PTR [rsi-0xa076f5c]
  463135:	repz in eax,dx
  463137:	xor    edi,0xec2cf5f6
  46313d:	out    0xe2,eax
  46313f:	mov    bh,0xb4
  463141:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  463142:	mov    ?,edi
  463144:	jp     0x4631ad
  463146:	cmp    eax,0x316388ff
  46314b:	dec    DWORD PTR [rbx-0x7400cc9b]
  463151:	fs xor bh,bh
  463154:	mov    WORD PTR [rsi+0x33],fs
  463157:	dec    DWORD PTR [rbx-0x7b00cb9b]
  46315d:	(bad)  
  46315e:	cmp    bh,bh
  463160:	mov    ?,WORD PTR [rcx+0x60]
  463163:	jmp    rax
  463165:	fadd   st,st(6)
  463167:	call   FWORD PTR [rsi+0x79ff7793]
  46316d:	addr32 cmp eax,0x326484ff
  463173:	dec    DWORD PTR [rdx-0x7600cc9b]
  463179:	gs xor edi,edi
  46317c:	xchg   DWORD PTR [rbx+0x31],esp
  46317f:	inc    DWORD PTR [rdi-0x7800ce9d]
  463185:	(bad)  
  463186:	ss (bad) 
  463188:	jg     0x4631ea
  46318a:	cmp    bh,bh
  46318c:	sub    DWORD PTR [rdi+0x47],0xffffffff
  463190:	(bad)  
  463191:	mov    edx,0xd5e2ff95
  463196:	mov    ah,0xff
  463198:	mov    BYTE PTR [rdx+0x40],ch
  46319b:	inc    DWORD PTR [rbx-0x7600cd9e]
  4631a1:	gs xor eax,0x386386ff
  4631a7:	inc    DWORD PTR [rcx-0x5300bb9d]
  4631ad:	cwde   
  4631ae:	(bad)  
  4631af:	push   rsi
  4631b1:	repz (bad) 
  4631b3:	popf   
  4631b4:	cld    
  4631b5:	cld    
  4631b6:	sti    
  4631b7:	sbb    edi,edi
  4631b9:	(bad)  
  4631ba:	inc    DWORD PTR [rsi]
  4631bc:	icebp  
  4631bd:	out    dx,eax
  4631be:	out    dx,al
  4631bf:	ja     0x4631a3
  4631c1:	(bad)  
  4631c3:	in     al,dx
  4631c4:	(bad)  
  4631c5:	mov    ebx,0x7690f89e
  4631ca:	rex.WB (bad) 
  4631cc:	jg     0x463231
  4631ce:	xor    eax,0x325f7aff
  4631d3:	(bad)  
  4631d4:	jnp    0x463236
  4631d6:	xor    edi,edi
  4631d8:	jge    0x46323a
  4631da:	xor    eax,0x456383ff
  4631df:	dec    DWORD PTR [rdi-0x30009685]
  4631e5:	(bad)  
  4631e6:	mov    ecx,0xdaeaecf2
  4631eb:	mov    edx,0xf88fadb4
  4631f0:	mov    BYTE PTR [rdi+0x43],ch
  4631f3:	inc    DWORD PTR [rcx+0x7eff3262]
  4631f9:	pop    rdi
  4631fa:	xor    bh,bh
  4631fc:	jle    0x46325d
  4631fe:	xor    bh,bh
  463200:	and    DWORD PTR [rcx+0x33],0x476b86ff
  463207:	jmp    FWORD PTR [rdx-0x26008567]
  46320d:	shl    BYTE PTR [rax-0x57352a01],1
  463213:	call   QWORD PTR [rsi-0x7f00a27e]
  463219:	(bad)  
  46321a:	xor    edi,edi
  46321c:	(bad)  
  46321d:	(bad)  
  46321e:	cs (bad) 
  463220:	jle    0x463282
  463222:	xor    edi,edi
  463224:	mov    BYTE PTR [rdi+0x4b],ch
  463227:	inc    esp
  463229:	mov    ah,0xa0
  46322b:	clc    
  46322c:	out    dx,eax
  46322d:	jmp    0xfffffffffe43e012
  463232:	cld    
  463233:	adc    al,BYTE PTR [rax]
	...
  46323d:	add    BYTE PTR [rax],al
  46323f:	add    dl,bh
  463241:	cli    
  463242:	cli    
  463243:	(bad)  
  463244:	icebp  
  463245:	icebp  
  463246:	lock push rdx
  463248:	lock jmp 0xffffffffd6220c28
  46324e:	(bad)  
  46324f:	in     al,dx
  463250:	ror    eax,1
  463252:	mov    bh,0xe2
  463254:	int3   
  463255:	ret    
  463256:	mov    bl,0xe2
  463258:	(bad)  
  46325a:	ret    0xe6d9
  46325d:	jrcxz  0x46323c
  46325f:	mov    bl,0xf9
  463261:	cmc    
  463262:	lock jno 0x463259
  463265:	icebp  
  463266:	in     al,dx
  463267:	fs stc 
  463269:	stc    
  46326a:	clc    
  46326b:	or     al,0xef
  46326d:	in     al,dx
  46326e:	(bad)  
  46326f:	pop    rsi
  463270:	jmp    0x463256
  463272:	(bad)  
  463273:	(bad)  
  463275:	enter  0xe9b4,0xc4
  463279:	mov    ecx,0xbdc8e2a4
  46327e:	test   eax,0xc0d4dee2
  463283:	shr    esp,cl
  463285:	jmp    0x46325e
  463287:	sar    dl,0xfb
  46328a:	jmp    0x463213
  46328c:	fst    st(6)
  46328e:	(bad)  
  46328f:	rcr    DWORD PTR [rcx-0x68008675],cl
  463295:	xchg   BYTE PTR [rdi+rdi*8-0x5f],ch
  463299:	xchg   ecx,eax
  46329a:	jno    0x46329b
  46329c:	scas   al,BYTE PTR es:[rdi]
  46329d:	movabs ds:0xe7eae2b0c2cbec86,al
  4632a6:	fadd   st(3),st
  4632a8:	std    
  4632a9:	std    
  4632aa:	sti    
  4632ab:	rex.RB (bad) 
  4632ad:	(bad)  
  4632ae:	inc    BYTE PTR [rsi]
	...
  4632c8:	div    ebp
  4632ca:	repz cmp esi,esi
  4632cd:	cmc    
  4632ce:	hlt    
  4632cf:	rex.X (bad) 
  4632d1:	std    
  4632d2:	cld    
  4632d3:	cmp    dh,bh
  4632d5:	std    
  4632d6:	cld    
  4632d7:	cmp    ah,bh
  4632d9:	cli    
  4632da:	stc    
  4632db:	(bad)  
  4632dc:	(bad)  
  4632dd:	(bad)  
  4632de:	dec    BYTE PTR [rcx]
	...
  4632ec:	stc    
  4632ed:	stc    
  4632ee:	clc    
  4632ef:	(bad)  
  4632f0:	repz repnz icebp 
  4632f3:	rex.WXB cli 
  4632f5:	cli    
  4632f6:	clc    
  4632f7:	(bad)  
  4632f8:	(bad)  
  4632f9:	(bad)  
  4632fa:	cld    
  4632fb:	cmp    dh,bh
  4632fd:	(bad)  
  4632fe:	std    
  4632ff:	cmp    dh,bh
  463301:	(bad)  
  463302:	std    
  463303:	sub    esp,edi
  463305:	std    
  463306:	sti    
  463307:	(bad)  
  463308:	(bad)  
  463309:	std    
  46330a:	cld    
  46330b:	add    edi,ecx
  46330d:	div    ebp
  46330f:	xor    eax,0x87e8ecf0
  463314:	loopne 0x4632f0
  463316:	rcr    bh,1
  463318:	(bad)  
  46331a:	retf   
  46331b:	jmp    rbp
  46331d:	loopne 0x4632fc
  46331f:	mov    ecx,0x38f7f9fc
  463324:	clc    
  463325:	div    esi
  463327:	and    eax,0x0
	...
  463338:	(bad)  
  463339:	inc    DWORD PTR [rax]
  46333b:	(bad)  
  46333c:	(bad)  
  46333d:	inc    DWORD PTR [rax]
  46333f:	(bad)  
  463340:	(bad)  
  463341:	inc    DWORD PTR [rax]
  463343:	jg     0x463344
  463345:	inc    BYTE PTR [rax]
  463347:	(bad)  
  463348:	(bad)  
  463349:	inc    BYTE PTR [rax]
  46334b:	(bad)  
  46334c:	(bad)  
  46334d:	inc    BYTE PTR [rax]
  46334f:	(bad)  
  463350:	jmp    rax
  463352:	add    BYTE PTR [rdi],bh
  463354:	inc    eax
  463356:	add    BYTE PTR [rdi],bh
  463358:	lock add BYTE PTR [rax],al
  46335b:	(bad)  
  46335c:	lock add BYTE PTR [rax],al
  46335f:	add    eax,eax
  463361:	add    BYTE PTR [rax],al
  463363:	add    al,al
  463365:	add    BYTE PTR [rax],al
  463367:	add    BYTE PTR [rax-0x7ff10000],al
  46336d:	add    BYTE PTR [rax],al
  46336f:	sldt   WORD PTR [rax]
  463372:	add    BYTE PTR [rdi],al
  463374:	add    BYTE PTR [rax],al
  463376:	add    BYTE PTR [rbx],al
  463378:	add    BYTE PTR [rax],al
  46337a:	add    BYTE PTR [rbx],al
  46337c:	add    BYTE PTR [rax],al
  46337e:	add    BYTE PTR [rbx],al
  463380:	add    BYTE PTR [rax],al
  463382:	add    BYTE PTR [rcx],al
  463384:	add    BYTE PTR [rax],al
  463386:	add    BYTE PTR [rcx],al
	...
  4633ac:	add    BYTE PTR [rax],al
  4633ae:	add    BYTE PTR [rcx],al
  4633b0:	rol    BYTE PTR [rax],0x0
  4633b3:	add    esi,eax
  4633b5:	cmp    BYTE PTR [rax],al
  4633b7:	movaps xmm0,XMMWORD PTR [rax]
  4633ba:	add    BYTE PTR [rax],al
  4633bc:	xor    BYTE PTR [rax],al
  4633be:	add    BYTE PTR [rax],al
  4633c0:	(bad)  
  4633c1:	add    BYTE PTR [rax],al
  4633c3:	add    BYTE PTR [rcx],al
  4633c5:	add    BYTE PTR [rax],ah
  4633c7:	add    BYTE PTR [rax],al
  4633c9:	add    BYTE PTR [rax],al
  4633cb:	add    BYTE PTR [rax+0x25],al
	...
  46343d:	add    BYTE PTR [rax],al
  46343f:	add    al,bh
  463441:	div    edi
  463443:	push   rbp
  463444:	fcmovnu st,st(2)
  463446:	iret   
  463447:	(bad)  
  463448:	stc    
  463449:	cmc    
  46344a:	call   0xffffffff96eff04e
  46344f:	call   QWORD PTR [rcx-0x6e009b87]
  463455:	jle    0x4634bd
  463457:	jmp    QWORD PTR [rbx-0x4000826e]
  46345d:	mov    al,0x9b
  46345f:	(bad)  
  463460:	in     al,dx
  463461:	loope  0x463435
  463463:	(bad)  
  463464:	stc    
  463465:	cmc    
  463466:	jmp    0xfffffffff8423132
  46346b:	push   rbp
	...
  463500:	ror    dh,1
  463502:	(bad)  
  463505:	repnz loopne 0x463507
  463508:	pushf  
  463509:	mov    esi,DWORD PTR [rbx-0x1]
  46350c:	outs   dx,DWORD PTR ds:[rsi]
  46350d:	push   rdx
  46350e:	xor    edi,edi
  463510:	jnp    0x46356a
  463512:	xor    al,0xff
  463514:	jl     0x463572
  463516:	xor    al,0xff
  463518:	jns    0x463574
  46351a:	xor    edi,edi
  46351c:	jae    0x463574
  46351e:	xor    bh,bh
  463520:	jp     0x463584
  463522:	rex.XB push QWORD PTR [r15-0x6007059]
  463529:	repnz jrcxz 0x46350f
  46352c:	cmc    
  46352d:	repz lock push rbp
	...
  4635c0:	lock in eax,dx
  4635c2:	fisubr WORD PTR [rdx-0x60483f]
  4635c8:	je     0x463626
  4635ca:	cmp    al,0xff
  4635cc:	sbb    BYTE PTR [rdx+rsi*1-0x1],0x8e
  4635d1:	(bad)  
  4635d2:	xor    bh,bh
  4635d4:	mov    esp,DWORD PTR [rbx+0x30]
  4635d7:	dec    DWORD PTR [rbx-0x7200cf9d]
  4635dd:	xor    ax,0x80ff
  4635e1:	pop    rsi
  4635e2:	xor    bh,bh
  4635e4:	je     0x46363e
  4635e6:	xor    eax,0x95acbdff
  4635eb:	(bad)  
  4635ec:	out    dx,al
  4635ed:	in     al,dx
  4635ee:	in     al,0xc7
	...
  463680:	clc    
  463681:	repz loope 0x46364b
  463684:	xchg   ecx,eax
  463685:	(bad)  
  463686:	push   WORD PTR [rbp+0x59]
  46368a:	xor    edi,edi
  46368c:	(bad)  
  46368d:	xor    ax,0x95ff
  463691:	gs xor bh,bh
  463694:	(bad)  
  463695:	gs xor edi,edi
  463698:	xchg   ecx,eax
  463699:	xor    di,di
  46369c:	xchg   ebx,eax
  46369d:	addr32 xor edi,edi
  4636a0:	(bad)  
  4636a1:	data16 xor bh,bh
  4636a4:	and    DWORD PTR [rcx+0x35],0xffffffff
  4636a8:	test   DWORD PTR [rsi+0x50],ebp
  4636ab:	jmp    rsp
  4636ad:	fcmovne st,st(7)
  4636af:	(bad)  
  4636b0:	cli    
  4636b1:	stc    
  4636b2:	stc    
  4636b3:	push   rbp
	...
  463740:	jmp    0xffffffff85460528
  463745:	jb     0x46379b
  463747:	(bad)  
  463748:	jnp    0x4637a8
  46374a:	(bad)  
  46374b:	call   QWORD PTR [rax-0x6b00cc9b]
  463751:	(bad)  
  463752:	sub    eax,0x336288ff
  463757:	dec    DWORD PTR [rsi-0x6c00cc9a]
  46375d:	push   0x6794ff31
  463762:	(bad)  
  463763:	dec    DWORD PTR [rbx+0x7cff3364]
  463769:	(bad)  
  46376a:	notrack call rax
  46376d:	ret    
  46376e:	mov    cl,0xff
  463770:	jrcxz  0x463753
  463772:	fsubrp st(3),st
	...
  4637fc:	(bad)  
  4637fd:	sti    
  4637fe:	idiv   DWORD PTR [rcx]
  463800:	loopne 0x4637db
  463802:	mov    edi,0x4b6a7aff
  463807:	(bad)  
  463808:	jge    0x46386b
  46380a:	cmp    bh,bh
  46380c:	mov    fs,WORD PTR [rbx+rsi*1-0x1]
  463810:	xchg   esi,eax
  463811:	gs xor bh,bh
  463814:	jg     0x463876
  463816:	cmp    edi,edi
  463818:	xchg   DWORD PTR [rax+rdi*1-0x1],esp
  46381c:	xchg   edx,eax
  46381d:	addr32 xor bh,bh
  463820:	xchg   edi,eax
  463821:	imul   ebp,DWORD PTR [rdi],0x31648cff
  463827:	push   QWORD PTR [rdi+rdx*2+0x30]
  46382b:	(bad)  
  46382c:	mov    esi,0xd1ff9aaf
  463831:	retf   
  463832:	(bad)  
  463835:	(bad)  
  463836:	call   FWORD PTR [rip+0x0]        # 0x46383c
	...
  4638bc:	repnz lock in al,dx
  4638bf:	push   rbp
  4638c0:	fcmovbe st,st(0)
  4638c2:	mov    ch,0xff
  4638c4:	jle    0x46392a
  4638c6:	rex.XB inc DWORD PTR [r15-0x7200c69e]
  4638cd:	addr32 xor al,0xff
  4638d0:	mov    ah,BYTE PTR [rbp+0x2e]
  4638d3:	dec    DWORD PTR [rbx-0x7400ca9f]
  4638d9:	gs xor eax,0x31688bff
  4638df:	call   QWORD PTR [rcx-0x6e00d098]
  4638e5:	fs xor bh,bh
  4638e8:	jg     0x463942
  4638ea:	xor    bh,bh
  4638ec:	mov    ecx,0xdaff88a5
  4638f1:	(bad)  
  4638f2:	retf   0xfcff
  4638f5:	cld    
  4638f6:	cld    
  4638f7:	sbb    eax,0x0
	...
  46397c:	out    dx,eax
  46397d:	in     eax,dx
  46397e:	out    0x72,eax
  463980:	fcmove st,st(4)
  463982:	mov    al,0xff
  463984:	test   DWORD PTR [rcx+0x3e],esp
  463987:	dec    DWORD PTR [rbx-0x7400cfa3]
  46398d:	addr32 xor bh,bh
  463990:	(bad)  
  463991:	imul   ebp,DWORD PTR [rip+0x30649bff],0x2f6691ff        # 0x30aad59a
  46399b:	inc    DWORD PTR [rsi-0x7500d197]
  4639a1:	push   0x6596ff2f
  4639a6:	xor    eax,0x315889ff
  4639ab:	push   QWORD PTR [rbp-0x26008765]
  4639b1:	fxch   st(0)
  4639b3:	(bad)  
  4639b4:	stc    
  4639b5:	stc    
  4639b6:	stc    
  4639b7:	sbb    eax,0x0
	...
  463a3c:	jrcxz  0x463a20
  463a3e:	(bad)  
  463a40:	(bad)  
  463a41:	enter  0xffad,0x84
  463a45:	(bad)  
  463a46:	cmp    eax,0x346190ff
  463a4b:	dec    DWORD PTR [rbp+riz*2+0x6a88ff2f]
  463a52:	(bad)  
  463a53:	call   FWORD PTR [rdx-0x6f00ce9b]
  463a59:	data16 xor bh,bh
  463a5c:	xchg   DWORD PTR [rcx+0x2e],ebp
  463a5f:	dec    DWORD PTR [rax+rbp*2+0x6494ff30]
  463a66:	xor    al,0xff
  463a68:	mov    DWORD PTR [rcx+0x33],ebx
  463a6b:	jmp    FWORD PTR [rcx-0x18009171]
  463a71:	jmp    0x471e4f
	...
  463afa:	add    BYTE PTR [rax],al
  463afc:	ret    0xb9c1
  463aff:	call   rsp
  463b01:	enter  0xffad,0x83
  463b05:	pop    rbp
  463b06:	cmp    edi,edi
  463b08:	xchg   esp,eax
  463b09:	(bad)  
  463b0a:	dec    DWORD PTR ss:[rdx+riz*2+0x6a8bff2d]
  463b12:	(bad)  
  463b13:	call   FWORD PTR [rdx-0x6f00ce9b]
  463b19:	data16 xor bh,bh
  463b1c:	xchg   DWORD PTR [rcx+0x2e],ebp
  463b1f:	dec    DWORD PTR [rcx+rbp*2+0x6394ff30]
  463b26:	xor    edi,edi
  463b28:	mov    ebx,DWORD PTR [rbx+0x35]
  463b2b:	call   FWORD PTR [rdx-0x900a07f]
  463b31:	repnz loope 0x463ade
	...
  463ba4:	(bad)  
  463ba5:	(bad)  
  463ba6:	(bad)  
  463ba7:	cmp    edi,edi
  463ba9:	(bad)  
  463baa:	call   QWORD PTR [rbp-0x1]
  463bad:	(bad)  
  463bae:	call   QWORD PTR [rbp+0x0]
  463bb1:	add    BYTE PTR [rax],al
  463bb3:	add    BYTE PTR [rax],al
  463bb5:	add    BYTE PTR [rax],al
  463bb7:	add    bh,bh
  463bb9:	(bad)  
  463bba:	call   QWORD PTR [rbp-0x4d]
  463bbd:	mov    bl,0xaa
  463bbf:	call   rax
  463bc1:	(bad)
  463bc4:	sbb    DWORD PTR [rsi+0x3c],0xffffffff
  463bc8:	xchg   esp,eax
  463bc9:	(bad)  
  463bca:	xor    eax,0x316693ff
  463bcf:	dec    DWORD PTR [rsi-0x6600d097]
  463bd5:	fs xor bh,bh
  463bd8:	nop
  463bd9:	data16 xor bh,bh
  463bdc:	xchg   DWORD PTR [rcx+0x2e],ebp
  463bdf:	dec    DWORD PTR [rcx+rbp*2+0x6595ff30]
  463be6:	xor    al,0xff
  463be8:	mov    DWORD PTR [rcx+0x33],ebx
  463beb:	call   QWORD PTR [rbp+rdi*2-0xd0300a6]
  463bf2:	loope  0x463bd7
  463bf4:	in     eax,dx
  463bf5:	out    0xe6,al
  463bf7:	mov    es,WORD PTR [rax]
	...
  463c5d:	add    BYTE PTR [rax],al
  463c5f:	add    al,ch
  463c61:	in     al,0xe1
  463c63:	mov    cs,ebp
  463c65:	retf   0xffc6
  463c68:	ror    ch,1
  463c6a:	(bad)  
  463c6b:	inc    edi
  463c6d:	(bad)
  463c70:	xlat   BYTE PTR ds:[rbx]
  463c71:	(bad)  
  463c72:	sar    edi,1
  463c74:	add    BYTE PTR [rax],al
  463c76:	add    BYTE PTR [rax],al
  463c78:	(bad)  
  463c79:	(bad)  
  463c7a:	dec    DWORD PTR [rsi-0x554b4e]
  463c80:	ror    cl,cl
  463c82:	lods   eax,DWORD PTR ds:[rsi]
  463c83:	inc    DWORD PTR [rbp+rbx*2+0x6096ff3b]
  463c8a:	xor    eax,0x316695ff
  463c8f:	call   QWORD PTR [rcx-0x6500cf97]
  463c95:	fs xor bh,bh
  463c98:	nop
  463c99:	data16 xor bh,bh
  463c9c:	xchg   DWORD PTR [rcx+0x2e],ebp
  463c9f:	dec    DWORD PTR [rbx-0x6d00d098]
  463ca5:	(bad)  
  463ca6:	xor    edi,edi
  463ca8:	mov    ebx,DWORD PTR [rbp+rsi*1-0x1]
  463cac:	mov    esi,DWORD PTR [rdx+0x4f]
  463caf:	push   rbp
  463cb1:	(bad)  
  463cb2:	(bad)  
  463cb4:	retf   
  463cb5:	mov    esp,0xffffffbb
  463cba:	call   QWORD PTR [rbp+0x0]
	...
  463d01:	add    BYTE PTR [rax],al
  463d03:	add    ah,bh
  463d05:	stc    
  463d06:	idiv   DWORD PTR [rcx]
  463d08:	clc    
  463d09:	div    bl
  463d0b:	push   rbp
	...
  463d18:	fcom   st(5)
  463d1a:	(bad)  
  463d1b:	stos   BYTE PTR es:[rdi],al
  463d1c:	lock in eax,dx
  463d1e:	jmp    0x463d3d
  463d20:	(bad)  
  463d21:	in     eax,0xdf
  463d23:	jrcxz  0x463d11
  463d25:	in     al,0xda
  463d27:	(bad)  
  463d28:	fcmovnbe st,st(7)
  463d2a:	leave  
  463d2b:	(bad)  
  463d2c:	jmp    0x463d14
  463d2e:	(bad)  
  463d2f:	(bad)  
  463d30:	(bad)  
  463d31:	cld    
  463d32:	out    0xc7,eax
  463d34:	cli    
  463d35:	cmc    
  463d36:	jmp    0x463cff
  463d38:	mov    dh,0xb4
  463d3a:	mov    cl,0xff
  463d3c:	mov    bh,0xba
  463d3e:	scas   eax,DWORD PTR es:[rdi]
  463d3f:	dec    ebp
  463d41:	(bad)  
  463d42:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  463d43:	inc    DWORD PTR [rbp+rbx*2+0x6096ff3b]
  463d4a:	xor    eax,0x316597ff
  463d4f:	call   QWORD PTR [rbx-0x6500cf97]
  463d55:	fs xor bh,bh
  463d58:	nop
  463d59:	data16 xor bh,bh
  463d5c:	xchg   DWORD PTR [rcx+0x2e],ebp
  463d5f:	dec    DWORD PTR [rbx-0x6b00d098]
  463d65:	fs xor al,0xff
  463d68:	xchg   edx,eax
  463d69:	(bad)  
  463d6a:	cmp    edi,edi
  463d6c:	test   BYTE PTR [rbx+0x48],ch
  463d6f:	(bad)  
  463d70:	jmp    0xffffffffd2460e54
  463d75:	enter  0xffc7,0xff
  463d79:	(bad)  
  463d7a:	call   FWORD PTR [rip+0x0]        # 0x463d80
	...
  463dbc:	loope  0x463d97
  463dbe:	fimul  DWORD PTR [rsi-0x38151408]
  463dc4:	(bad)  
  463dc6:	sar    bh,1
  463dc8:	mov    edx,0xe6ffb2b5
  463dcd:	in     eax,0xe2
  463dcf:	(bad)  
  463dd0:	(bad)  
  463dd1:	jmp    0x465bbe
  463dd6:	add    BYTE PTR [rax],al
  463dd8:	(bad)  
  463dd9:	rcl    ebp,cl
  463ddb:	(bad)  
  463ddc:	(bad)  
  463ddd:	(bad)  
  463dde:	cld    
  463ddf:	push   rbp
  463de0:	mov    ah,0xae
  463de2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  463de3:	(bad)  
  463de4:	jnp    0x463e58
  463de6:	jmp    DWORD PTR [rsi+0x65]
  463dea:	push   rdx
  463deb:	jmp    FWORD PTR [rbx+0x60]
  463dee:	rex.RXB dec DWORD PTR [r14-0x45009b7e]
  463df5:	mov    cl,0x9f
  463df7:	push   rbp
  463df9:	cmc    
  463dfa:	out    dx,eax
  463dfb:	(bad)  
  463dfc:	std    
  463dfd:	push   rbx
  463dff:	inc    edx
  463e01:	mov    eax,0x5d84ff9d
  463e06:	cmp    al,0xff
  463e08:	xchg   esi,eax
  463e09:	pop    rdi
  463e0a:	xor    eax,0x316598ff
  463e0f:	call   QWORD PTR [rax+rbp*2+0x6499ff30]
  463e16:	xor    bh,bh
  463e18:	nop
  463e19:	data16 xor bh,bh
  463e1c:	xchg   DWORD PTR [rcx+0x2e],ebp
  463e1f:	dec    DWORD PTR [rbx-0x6b00d098]
  463e25:	fs xor al,0xff
  463e28:	(bad)  
  463e29:	(bad)  
  463e2a:	cmp    edi,edi
  463e2c:	jg     0x463e93
  463e2e:	rex.XB (bad) 
  463e30:	fcmovnu st,st(1)
  463e32:	leave  
  463e33:	(bad)  
  463e34:	(bad)  
  463e36:	fisubr WORD PTR [rdx+0x0]
	...
  463e78:	in     eax,dx
  463e79:	in     eax,dx
  463e7a:	in     eax,dx
  463e7b:	sbb    eax,0xc7e7f0f3
  463e80:	xlat   BYTE PTR ds:[rbx]
  463e81:	ret    0xffa7
  463e84:	mov    ebp,DWORD PTR [rbx+0x45]
  463e87:	(bad)  
  463e88:	jp     0x463ee3
  463e8a:	xor    bh,bh
  463e8c:	test   eax,0xf9ff7693
  463e91:	cmc    
  463e92:	jmp    0x463e22
  463e94:	add    BYTE PTR [rax],al
  463e96:	add    BYTE PTR [rax],al
  463e98:	loop   0x463e7b
  463e9a:	fisubr WORD PTR [rdx-0x1c251c1a]
  463ea0:	lock out dx,eax
  463ea2:	in     eax,0xff
  463ea4:	out    0xe3,al
  463ea6:	fcos   
  463ea8:	ror    esp,cl
  463eaa:	mov    esp,0x778c99ff
  463eaf:	jmp    FWORD PTR [rdx+0x57]
  463eb2:	cmp    bh,bh
  463eb4:	fs push rdi
  463eb6:	cmp    bh,bh
  463eb8:	xchg   esi,eax
  463eb9:	xchg   ecx,eax
  463eba:	jne    0x463ebb
  463ebc:	cld    
  463ebd:	mul    cl
  463ebf:	call   rax
  463ec1:	mov    esp,0x5b79ffa7
  463ec6:	rex.X inc DWORD PTR [rdi-0x6d00c3a1]
  463ecd:	fs call QWORD PTR ss:[rbp-0x7600ce99]
  463ed5:	imul   esi,DWORD PTR [rax],0x2e6989ff
  463edb:	dec    DWORD PTR [rbp-0x7000d297]
  463ee1:	push   0x6289ff2f
  463ee6:	sub    al,0xff
  463ee8:	mov    BYTE PTR [rsi+rsi*1-0x1],ah
  463eec:	(bad)  
  463eed:	(bad)  
  463eee:	cmp    al,0xff
  463ef0:	xlat   BYTE PTR ds:[rbx]
  463ef1:	(bad)
  463ef4:	(bad)  
  463ef5:	push   rdi
  463ef7:	jb     0x463eed
  463ef9:	in     eax,dx
  463efa:	ffree  st(7)
  463efc:	icebp  
  463efd:	loop   0x463ecc
  463eff:	push   rbp
  463f01:	out    0xd0,eax
  463f03:	(bad)  
  463f04:	cld    
  463f05:	repnz fucom st(3)
  463f08:	(bad)  
  463f09:	stc    
  463f0a:	in     eax,dx
  463f0b:	stos   BYTE PTR es:[rdi],al
  463f0c:	cli    
  463f0d:	stc    
  463f0e:	hlt    
  463f0f:	push   rbp
  463f10:	cli    
  463f11:	stc    
  463f12:	stc    
  463f13:	cmp    DWORD PTR [rax],eax
	...
  463f31:	add    BYTE PTR [rax],al
  463f33:	add    cl,bh
  463f35:	clc    
  463f36:	idiv   DWORD PTR [rcx]
  463f38:	in     al,dx
  463f39:	out    0xe3,eax
  463f3b:	stos   BYTE PTR es:[rdi],al
  463f3c:	loop   0x463f17
  463f3e:	leave  
  463f3f:	inc    DWORD PTR [rdx-0x7e00b797]
  463f45:	pop    rbp
  463f46:	xor    bh,bh
  463f48:	mov    BYTE PTR [rdx+0x33],ah
  463f4b:	(bad)  
  463f4c:	jg     0x463fb0
  463f4e:	ds inc esi
  463f51:	mov    ebx,0xf9fcffab
  463f56:	in     al,dx
  463f57:	jb     0x463f59
  463f59:	add    BYTE PTR [rax],al
  463f5b:	add    BYTE PTR [rax],al
  463f5d:	add    BYTE PTR [rax],al
  463f5f:	add    bh,bl
  463f61:	fstp   st(3)
  463f63:	mov    es,ebx
  463f65:	ret    0xffbd
  463f68:	fcmovu st,st(0)
  463f6a:	(bad)  
  463f6b:	(bad)  
  463f6c:	cld    
  463f6d:	mul    ch
  463f6f:	jmp    FWORD PTR [rsi+0x65ff8ba1]
  463f75:	pop    rsp
  463f76:	(bad)  
  463f77:	call   QWORD PTR [rsi+0x50]
  463f7a:	xor    bh,bh
  463f7c:	rol    ah,1
  463f7e:	lods   al,BYTE PTR ds:[rsi]
  463f7f:	(bad)  
  463f80:	fcmovb st,st(6)
  463f82:	mov    cl,0xff
  463f84:	jp     0x463fe0
  463f86:	rex inc DWORD PTR [rbp-0x6e00c4a0]
  463f8d:	fs call QWORD PTR ss:[rsi+riz*2+0x6988ff32]
  463f96:	xor    bh,bh
  463f98:	mov    ch,BYTE PTR [rcx+0x2e]
  463f9b:	dec    DWORD PTR [rdi-0x6e00d298]
  463fa1:	push   0x638bff2f
  463fa6:	dec    DWORD PTR cs:[rcx-0x7d00c99c]
  463fad:	(bad)  
  463fae:	cmp    edi,edi
  463fb0:	sar    BYTE PTR [rbp-0x150c0057],1
  463fb6:	loopne 0x463fb7
  463fb8:	xchg   ebp,eax
  463fb9:	test   DWORD PTR [rdx-0x1],esi
  463fbc:	(bad)  
  463fbd:	ins    DWORD PTR es:[rdi],dx
  463fbe:	push   rdi
  463fbf:	inc    DWORD PTR [rcx-0x7700ab95]
  463fc5:	ja     0x464029
  463fc7:	call   FWORD PTR [rax-0x4f007e71]
  463fcd:	lods   al,BYTE PTR ds:[rsi]
  463fce:	movabs ds:0xf8f8fbffced1d5ff,eax
  463fd7:	jb     0x463fd9
	...
  463fed:	add    BYTE PTR [rax],al
  463fef:	add    bh,bh
  463ff1:	(bad)  
  463ff2:	call   QWORD PTR [rbp-0x32]
  463ff5:	mov    bl,0xff
  463ff8:	(bad)  
  463ff9:	stc    
  463ffa:	in     al,dx
  463ffb:	(bad)  
  463ffc:	pushf  
  463ffd:	mov    BYTE PTR [rdi-0x1],ch
  464000:	jl     0x46405f
  464002:	dec    DWORD PTR ss:[rcx-0x7100cf9e]
  464009:	gs xor bh,bh
  46400c:	sbb    DWORD PTR [rdi+0x34],0x4e697eff
  464013:	call   rdi
  464015:	retf   0xffb5
  464018:	clc    
  464019:	cmc    
  46401a:	jmp    0x464071
	...
  464028:	(bad)  
  46402a:	fld    TBYTE PTR [rdx-0x433d3c]
  464030:	clc    
  464031:	hlt    
  464032:	jmp    0x76d4d536
  464037:	call   FWORD PTR [rbp+0x57]
  46403a:	cmp    edi,edi
  46403c:	(bad)  
  46403d:	retf   
  46403e:	mov    al,0xff
  464040:	(bad)  
  464041:	mov    dh,0x9c
  464043:	(bad)  
  464044:	jl     0x4640a0
  464046:	cmp    edi,edi
  464048:	mov    DWORD PTR [rcx+0x39],esp
  46404b:	call   QWORD PTR [rcx-0x6c00c99b]
  464051:	addr32 xor bh,bh
  464054:	mov    DWORD PTR [rdi+0x31],esp
  464057:	dec    DWORD PTR [rbx-0x7000cf98]
  46405d:	push   0x6890ff2e
  464062:	dec    DWORD PTR cs:[rdx-0x7800d29e]
  464069:	(bad)  
  46406a:	xor    bh,bh
  46406c:	(bad)  
  46406d:	(bad)  
  46406e:	ss inc ebp
  464071:	mov    bl,0x9c
  464073:	push   rbp
  464075:	out    dx,al
  464076:	loopne 0x464077
  464078:	jl     0x4640e7
  46407a:	pop    rbx
  46407b:	call   FWORD PTR [rsi+0x4d]
  46407e:	cmp    bh,bh
  464080:	js     0x4640e9
  464082:	push   rcx
  464083:	call   QWORD PTR [rcx-0x6f008d7d]
  464089:	mov    BYTE PTR [rbp-0x1],bh
  46408c:	test   DWORD PTR [rcx-0x77740087],eax
  464092:	xchg   bh,bh
  464094:	sar    DWORD PTR [rdi-0x8030043],0xf4
  46409b:	push   rbp
  46409c:	jmp    0x464084
  46409e:	in     al,0x1d
	...
  4640b0:	lock lock out dx,eax
  4640b3:	cmp    ebp,ebp
  4640b5:	in     al,dx
  4640b6:	jrcxz  0x46407f
  4640b8:	fcmove st,st(0)
  4640ba:	mov    al,0xff
  4640bc:	jp     0x46411c
  4640be:	cmp    eax,0x376589ff
  4640c3:	dec    DWORD PTR [rbp-0x6c00d49e]
  4640c9:	gs sub edi,edi
  4640cc:	nop
  4640cd:	imul   esi,DWORD PTR [rdi],0x355a79ff
  4640d3:	dec    DWORD PTR [rax-0x1b00ab8f]
  4640d9:	fld    st(3)
  4640db:	(bad)  
  4640dc:	std    
  4640dd:	stc    
  4640de:	in     al,dx
  4640df:	jb     0x4640c9
  4640e1:	out    0xe5,eax
  4640e3:	cmp    DWORD PTR [rax],eax
  4640e5:	add    BYTE PTR [rax],al
  4640e7:	add    BYTE PTR [rax],al
  4640e9:	add    BYTE PTR [rax],al
  4640eb:	add    al,dl
  4640ed:	ror    ch,1
  4640ef:	push   rax
  4640f1:	out    dx,eax
  4640f2:	call   0xffffffffde3532f6
  4640f7:	(bad)  
  4640f8:	fcmovnu st,st(1)
  4640fa:	mov    ebp,0xd3eef8ff
  4640ff:	call   FWORD PTR [rsi-0x7d009e80]
  464105:	pop    rsp
  464106:	cmp    bh,bh
  464108:	mov    WORD PTR [rcx+0x38],fs
  46410b:	call   QWORD PTR [rcx-0x6e00c99b]
  464111:	xor    di,di
  464114:	mov    esp,DWORD PTR [rsi+0x34]
  464117:	dec    DWORD PTR [rsi+riz*2+0x6690ff32]
  46411e:	xor    bh,bh
  464120:	xchg   ebx,eax
  464121:	push   0x6994ff2f
  464126:	xor    al,0xff
  464128:	mov    esp,DWORD PTR [rbp+0x35]
  46412b:	inc    DWORD PTR [rax-0x5e00cda3]
  464131:	lea    esi,[rax-0x1]
  464134:	stc    
  464135:	cmc    
  464136:	in     al,0xff
  464138:	(bad)  
  46413a:	ret    
  46413b:	inc    esi
  46413d:	mov    edx,0xdce4ffa9
  464142:	(bad)  
  464143:	(bad)  
  464144:	std    
  464145:	cli    
  464146:	lock mov ?,ebx
  464149:	stc    
  46414a:	repnz push rbp
  46414c:	hlt    
  46414d:	in     eax,dx
  46414e:	jmp    0xffffffffe93130a8
  464153:	push   rbp
  464154:	in     al,0xe3
  464156:	fbstp  TBYTE PTR [rdx-0x7]
  464159:	div    cl
  46415b:	sbb    eax,0x39dee2e6
	...
  46416c:	(bad)  
  46416d:	(bad)  
  46416e:	(bad)  
  46416f:	cmp    esi,ecx
  464171:	iret   
  464172:	retf   0xf3ff
  464175:	hlt    
  464176:	out    0xe3,al
  464178:	cdq    
  464179:	jle    0x4641d6
  46417b:	(bad)  
  46417c:	jg     0x4641da
  46417e:	xor    bh,bh
  464180:	mov    fs,WORD PTR [rdi+0x35]
  464183:	call   QWORD PTR [rcx-0x6a00d39b]
  464189:	addr32 sub al,0xff
  46418c:	xchg   ecx,eax
  46418d:	addr32 xor bh,bh
  464190:	mov    DWORD PTR [rbp+0x36],esp
  464193:	(bad)  
  464194:	jns    0x4641f5
  464196:	cmp    edi,edi
  464198:	jg     0x464208
  46419a:	push   rbx
  46419b:	jmp    rax
  46419d:	(bad)  
  46419e:	sar    edi,0xe7
  4641a1:	jrcxz  0x464179
  4641a3:	jrcxz  0x464194
  4641a5:	out    dx,eax
  4641a6:	jmp    0x46421a
  4641a8:	stc    
  4641a9:	div    ecx
  4641ab:	jb     0x46418d
  4641ad:	fcmovnbe st,st(2)
  4641af:	push   rsp
  4641b1:	lock in al,0xff
  4641b4:	cli    
  4641b5:	clc    
  4641b6:	out    0xff,al
  4641b8:	rcl    ecx,cl
  4641ba:	mov    bh,0xff
  4641bc:	lods   al,BYTE PTR ds:[rsi]
  4641bd:	fwait
  4641be:	jge    0x4641bf
  4641c0:	jg     0x46421d
  4641c2:	dec    DWORD PTR ss:[rdi-0x6e00c69d]
  4641c9:	movsxd esi,DWORD PTR [rdi]
  4641cb:	call   QWORD PTR [rax-0x6f00ca9c]
  4641d1:	gs xor al,0xff
  4641d4:	lea    esp,[rbp+0x36]
  4641d7:	dec    DWORD PTR [rsi-0x6d00cb9b]
  4641dd:	data16 xor bh,bh
  4641e0:	xchg   esp,eax
  4641e1:	data16 xor bh,bh
  4641e4:	xchg   ecx,eax
  4641e5:	gs (bad) 
  4641e7:	dec    DWORD PTR [rsi-0x7900cb9a]
  4641ed:	(bad)  
  4641ee:	xor    al,0xff
  4641f0:	ja     0x464253
  4641f2:	rex call FWORD PTR [rbx-0x1300856f]
  4641f9:	out    0xd4,eax
  4641fb:	(bad)  
  4641fc:	(bad)  
  4641fd:	(bad)  
  4641fe:	(bad)  
  4641ff:	sbb    eax,0xaad5dadc
  464204:	div    dh
  464206:	hlt    
  464207:	sbb    eax,0x0
	...
  464228:	(bad)  
  464229:	(bad)  
  46422a:	call   FWORD PTR [rip+0xffffffff8ee4e5e5]        # 0xffffffff8f2b2815
  464230:	cmc    
  464231:	lock jrcxz 0x4641fb
  464234:	mov    ebp,0x79ffa0b5
  464239:	pop    rbx
  46423a:	xor    edi,edi
  46423c:	mov    ah,BYTE PTR [rsi+0x39]
  46423f:	dec    DWORD PTR [rbp+riz*2+0x6792ff34]
  464246:	xor    bh,bh
  464248:	xchg   ebx,eax
  464249:	addr32 xor bh,bh
  46424c:	xchg   ecx,eax
  46424d:	addr32 xor edi,edi
  464250:	(bad)  
  464251:	gs xor edi,edi
  464254:	js     0x4642b1
  464256:	xor    edi,edi
  464258:	jle    0x4642c6
  46425a:	push   rax
  46425b:	jmp    rcx
  46425d:	xlat   BYTE PTR ds:[rbx]
  46425e:	mov    edi,0xe5f8feff
  464263:	(bad)  
  464264:	mov    ebp,0x7eff9fb1
  464269:	jae    0x4642c9
  46426b:	jmp    FWORD PTR [rsp+rbx*2+0x42]
  46426f:	(bad)  
  464270:	mov    edi,0xfeff90ad
  464275:	cld    
  464276:	loop   0x464277
  464278:	jle    0x4642f5
  46427a:	(bad)  
  46427b:	jmp    FWORD PTR [rbx+0x58]
  46427e:	(bad)  
  46427f:	dec    DWORD PTR [rsi-0x6b00c59a]
  464285:	movsxd esi,DWORD PTR [rbx]
  464287:	call   QWORD PTR [rsp+riz*2+0x6590ff33]
  46428e:	xor    al,0xff
  464290:	lea    esp,[rsi+rsi*1-0x1]
  464294:	mov    fs,WORD PTR [rbx+0x38]
  464297:	call   QWORD PTR [rcx-0x6a00c99c]
  46429d:	gs xor bh,bh
  4642a0:	xchg   esi,eax
  4642a1:	gs xor bh,bh
  4642a4:	xchg   esi,eax
  4642a5:	addr32 xor edi,edi
  4642a8:	nop
  4642a9:	data16 xor bh,bh
  4642ac:	mov    ah,BYTE PTR [rbx+rsi*1-0x1]
  4642b0:	jbe    0x464311
  4642b2:	cmp    edi,edi
  4642b4:	xchg   ebx,eax
  4642b5:	mov    DWORD PTR [rbp-0x1],ebp
  4642b8:	repnz in eax,dx
  4642ba:	(bad)  
  4642bc:	lock out dx,eax
  4642be:	in     eax,0xaa
  4642c0:	lock out dx,eax
  4642c2:	jmp    0x4642fd
  4642c4:	(bad)  
  4642c6:	fisttp DWORD PTR [rsi+0x0]
	...
  4642e8:	(bad)  
  4642e9:	(bad)  
  4642ea:	call   QWORD PTR [rbp-0x47]
  4642ed:	mov    bl,0xb2
  4642ef:	(bad)  
  4642f0:	(bad)  
  4642f1:	std    
  4642f2:	repnz (bad) 
  4642f4:	mov    DWORD PTR [rax+0x62],edi
  4642f7:	(bad)  
  4642f8:	js     0x464353
  4642fa:	xor    bh,bh
  4642fc:	mov    BYTE PTR [rsi+0x3a],ah
  4642ff:	inc    DWORD PTR [rsi-0x7400cb9e]
  464305:	movsxd esi,DWORD PTR [rdx]
  464307:	dec    DWORD PTR [rsi-0x6f00ce9b]
  46430d:	push   0x628bff33
  464312:	sub    eax,0x3b6584ff
  464317:	dec    ebp
  464319:	mov    ebp,0xfaffffa0
  46431e:	loop   0x46431f
  464320:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  464321:	xchg   esi,eax
  464322:	jg     0x464323
  464324:	addr32 push rdi
  464326:	rex push QWORD PTR [rdx+0x60]
  46432a:	rex.XB push QWORD PTR [r11+0x5b]
  46432e:	(bad)  
  46432f:	call   FWORD PTR [rsi+rdi*2-0x60000af]
  464336:	xlat   BYTE PTR ds:[rbx]
  464337:	push   QWORD PTR [rbx+0x6eff9db3]
  46433d:	pop    rcx
  46433e:	(bad)  
  46433f:	call   QWORD PTR [rbx-0x6900c598]
  464345:	movsxd ebp,DWORD PTR [rdi]
  464347:	call   QWORD PTR [rsi-0x6f00ce9b]
  46434d:	gs xor edi,edi
  464350:	lea    esp,[rdi+rsi*1-0x1]
  464354:	(bad)  
  464355:	(bad)  
  464356:	cmp    edi,edi
  464358:	xchg   edx,eax
  464359:	(bad)  
  46435a:	cmp    bh,bh
  46435c:	xchg   esi,eax
  46435d:	fs xor edi,edi
  464360:	cwde   
  464361:	gs xor bh,bh
  464364:	cdq    
  464365:	push   0x34
  464367:	call   QWORD PTR [rbx-0x7700cc97]
  46436d:	(bad)  
  46436e:	dec    DWORD PTR cs:[rax-0x1d00b98f]
  464375:	faddp  st(2),st
  464377:	(bad)  
  464378:	(bad)  
  464379:	push   rdx
  46437b:	dec    esp
  46437d:	retf   
  46437e:	sar    edi,0xd5
  464381:	xlat   BYTE PTR ds:[rbx]
  464382:	fdivr  st,st(7)
  464384:	rcl    ebx,cl
  464386:	(bad)  
  464387:	inc    DWORD PTR [rax]
	...
  4643a5:	add    BYTE PTR [rax],al
  4643a7:	add    dl,dh
  4643a9:	icebp  
  4643aa:	icebp  
  4643ab:	mov    ss,esi
  4643ad:	retf   
  4643ae:	(bad)  
  4643af:	(bad)  
  4643b0:	jmp    0x46438e
  4643b2:	leave  
  4643b3:	(bad)  
  4643b4:	jnp    0x464418
  4643b6:	rex.RB inc DWORD PTR [r15-0x7400cb9d]
  4643bd:	fs xor edi,edi
  4643c0:	mov    fs,WORD PTR [rsi+0x32]
  4643c3:	call   QWORD PTR [rbx-0x7000cc98]
  4643c9:	xor    di,di
  4643cc:	mov    esp,DWORD PTR [rsp+rsi*1-0x1]
  4643d0:	sbb    BYTE PTR [rbp+0x30],0xff
  4643d4:	movabs ds:0xcbffdef3faff6b8b,eax
  4643dd:	mov    edx,0x5f77ff9e
  4643e2:	cmp    al,0xff
  4643e4:	jl     0x464445
  4643e6:	cmp    bh,bh
  4643e8:	test   DWORD PTR [rsi+0x3d],esp
  4643eb:	inc    DWORD PTR [rbx-0x7300c69e]
  4643f1:	imul   edi,DWORD PTR [rdi],0xb0cee2ff
  4643f7:	(bad)  
  4643f8:	in     al,dx
  4643f9:	jmp    0x4643cf
  4643fb:	(bad)  
  4643fc:	jle    0x46446c
  4643fe:	inc    QWORD PTR [rbx-0x6800d09f]
  464405:	gs xor bh,bh
  464408:	(bad)  
  464409:	fs (bad) 
  46440b:	dec    DWORD PTR [rdi-0x7800cd9c]
  464411:	gs dec DWORD PTR ss:[rbx+riz*2+0x6491ff38]
  46441a:	call   QWORD PTR ss:[rsi-0x6700cf9b]
  464421:	call   DWORD PTR cs:[rbx-0x7100cb96]
  464429:	movsxd esi,DWORD PTR [rcx]
  46442b:	inc    DWORD PTR [rdx-0x4000cea4]
  464431:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  464432:	xchg   bh,bh
  464434:	sti    
  464435:	mul    cl
  464437:	jmp    rsi
  464439:	in     al,0xd2
  46443b:	jmp    rdx
  46443d:	in     al,0xd8
  46443f:	jmp    FWORD PTR [rax-0x8005e5a]
  464445:	repnz icebp 
  464447:	(bad)  
  464448:	in     eax,0xe3
  46444a:	loop   0x464485
	...
  464464:	(bad)  
  464465:	(bad)  
  464466:	(bad)  
  464467:	cmp    ebx,ecx
  464469:	leave  
  46446a:	(bad)  
  46446b:	push   rdi
  46446d:	icebp  
  46446e:	(bad)  
  464470:	mov    edi,0x79ff91ad
  464475:	pop    rsp
  464476:	cmp    bh,bh
  464478:	xchg   edx,eax
  464479:	addr32 xor bh,bh
  46447c:	xchg   esp,eax
  46447d:	data16 (bad) 
  46447f:	call   QWORD PTR [rbp-0x6a00d299]
  464485:	push   0x658fff2e
  46448a:	(bad)  
  46448b:	dec    DWORD PTR [rcx+0x7bff3664]
  464491:	pop    rbp
  464492:	ss inc esi
  464495:	mov    dh,0x9f
  464497:	(bad)  
  464498:	cli    
  464499:	repz loopne 0x46449b
  46449c:	xchg   ebx,eax
  46449d:	jg     0x4644ff
  46449f:	(bad)  
  4644a0:	jl     0x464500
  4644a2:	xor    edi,edi
  4644a4:	mov    esp,DWORD PTR [rbx+0x31]
  4644a7:	dec    DWORD PTR [rcx-0x7600d09f]
  4644ad:	movsxd edi,DWORD PTR [rcx]
  4644af:	(bad)  
  4644b0:	jnp    0x46450a
  4644b2:	xor    eax,0x758da7ff
  4644b7:	(bad)  
  4644b8:	(bad)  
  4644b9:	(bad)  
  4644ba:	in     eax,0xff
  4644bc:	test   eax,0x75ff78a0
  4644c1:	pop    rsi
  4644c2:	sub    edi,edi
  4644c4:	xchg   ebp,eax
  4644c5:	gs (bad) 
  4644c7:	call   FWORD PTR [rsi-0x6f00d09d]
  4644cd:	fs xor edi,edi
  4644d0:	(bad)  
  4644d1:	addr32 xor al,0xff
  4644d4:	mov    WORD PTR [rbp+0x35],fs
  4644d7:	call   QWORD PTR [rcx-0x6900cd9a]
  4644dd:	call   FWORD PTR cs:[ecx-0x6b00d299]
  4644e5:	movsxd ebp,DWORD PTR [rsi]
  4644e7:	dec    DWORD PTR [rdx+riz*2+0x6c8fff36]
  4644ee:	rex.W push rbx
  4644f1:	(bad)  
  4644f3:	(bad)  
  4644f4:	fcmovbe st,st(3)
  4644f6:	ret    
  4644f7:	dec    DWORD PTR [rbx-0xc008574]
  4644fd:	clc    
  4644fe:	call   0xffffffff88dbe302
  464503:	call   rsi
  464505:	(bad)  
  464506:	mov    edi,0xe5eaeeff
  46450b:	stos   BYTE PTR es:[rdi],al
	...
  464524:	(bad)  
  464525:	(bad)  
  464526:	call   QWORD PTR [rbp-0x42]
  464529:	mov    ebx,0xf6feffb7
  46452e:	in     al,0xff
  464530:	popf   
  464531:	test   DWORD PTR [rax-0x1],ebp
  464534:	jns    0x464591
  464536:	xor    al,0xff
  464538:	(bad)  
  464539:	gs xor edi,edi
  46453c:	xchg   ebx,eax
  46453d:	data16 xor bh,bh
  464540:	xchg   esp,eax
  464541:	call   QWORD PTR cs:[edi+eiz*2+0x638eff2e]
  46454a:	dec    DWORD PTR cs:[rcx-0x7900c99c]
  464551:	addr32 rex (bad) 
  464554:	jmp    0x464530
  464556:	sar    edi,0xdc
  464559:	rol    eax,cl
  46455b:	push   QWORD PTR [rbp+0x60]
  46455e:	rex (bad) 
  464560:	jg     0x4645c2
  464562:	xor    eax,0x33658cff
  464567:	dec    DWORD PTR [rsi-0x7300ca99]
  46456d:	cmp    di,di
  464570:	jl     0x4645cb
  464572:	xor    al,0xff
  464574:	and    BYTE PTR [rcx+rcx*2-0x1],0xf2
  464579:	in     al,0xcd
  46457b:	dec    esp
  46457d:	(bad)  
  46457e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  46457f:	(bad)  
  464580:	jp     0x4645e3
  464582:	xor    bh,bh
  464584:	xchg   edx,eax
  464585:	movsxd esi,DWORD PTR [rcx]
  464587:	call   FWORD PTR [rbp-0x6d00ce9c]
  46458d:	data16 xor bh,bh
  464590:	test   BYTE PTR [rsi+0x32],ah
  464593:	call   QWORD PTR [rdx-0x6a00ca9d]
  464599:	gs xor bh,bh
  46459c:	xchg   edi,eax
  46459d:	gs xor bh,bh
  4645a0:	xchg   esi,eax
  4645a1:	data16 xor bh,bh
  4645a4:	xchg   ebx,eax
  4645a5:	push   0x5d81ff35
  4645aa:	xor    bh,bh
  4645ac:	movabs eax,ds:0x9fffe3f9ffff658a
  4645b5:	lea    edi,[rbx-0x1]
  4645b8:	ins    DWORD PTR es:[rdi],dx
  4645b9:	ins    DWORD PTR es:[rdi],dx
  4645ba:	pop    rax
  4645bb:	push   rsp
  4645bd:	mul    esp
  4645bf:	push   QWORD PTR [rdi-0x76006052]
  4645c5:	ja     0x464631
  4645c7:	(bad)  
  4645c8:	sti    
  4645c9:	icebp  
  4645ca:	out    0xc7,al
  4645cc:	hlt    
  4645cd:	repz icebp 
  4645cf:	sbb    eax,0x0
	...
  4645e4:	(bad)  
  4645e5:	(bad)  
  4645e6:	call   QWORD PTR [rbp-0x29]
  4645e9:	ror    ebx,cl
  4645eb:	push   rbx
  4645ed:	out    0xd1,al
  4645ef:	(bad)  
  4645f0:	jg     0x464657
  4645f2:	inc    DWORD PTR [r11+r12*2+0x6791ff3a]
  4645fa:	xor    bh,bh
  4645fc:	xchg   edx,eax
  4645fd:	data16 xor bh,bh
  464600:	xchg   esp,eax
  464601:	call   QWORD PTR cs:[ebp-0x7000d198]
  464609:	fs (bad) 
  46460b:	dec    DWORD PTR [rcx-0x7500ca9d]
  464611:	imul   eax,DWORD PTR [rdi+rdi*8-0xd],0xffffffe0
  464616:	(bad)  
  464617:	dec    edi
  464619:	(bad)  
  46461a:	scas   al,BYTE PTR es:[rdi]
  46461b:	push   QWORD PTR [rsi+rbx*2+0x3d]
  46461f:	inc    DWORD PTR [rbx+riz*2+0x6790ff37]
  464626:	xor    al,0xff
  464628:	lea    esp,[rax+rsi*1-0x1]
  46462c:	mov    DWORD PTR [rdx+0x36],esp
  46462f:	inc    DWORD PTR [rcx+0x76ff365e]
  464635:	push   rdi
  464636:	cmp    bh,bh
  464638:	retf   0xa1bc
  46463b:	jmp    rdi
  46463d:	loop   0x4645fb
  46463f:	(bad)  
  464640:	jg     0x4646aa
  464642:	cmp    edi,edi
  464644:	lea    esp,[rax+0x31]
  464647:	call   FWORD PTR [rbp-0x6b00ca9b]
  46464d:	addr32 xor al,0xff
  464650:	xchg   BYTE PTR [rdi+rbp*1-0x1],ah
  464654:	cdq    
  464655:	movsxd esi,DWORD PTR [rdx]
  464657:	call   FWORD PTR [rdx-0x6800cd9c]
  46465d:	gs xor bh,bh
  464660:	nop
  464661:	fs xor edi,edi
  464664:	xchg   DWORD PTR [rbx+0x33],esp
  464667:	(bad)  
  464668:	jnp    0x4646c9
  46466a:	xor    al,0xff
  46466c:	rol    ah,cl
  46466e:	lahf   
  46466f:	jmp    rdx
  464671:	iret   
  464672:	mov    ch,0xff
  464674:	jno    0x4646d0
  464676:	rex.XB jmp FWORD PTR [r14+0x6b]
  46467a:	push   rcx
  46467b:	push   rax
  46467d:	lock fdivr st,st(7)
  464680:	leave  
  464681:	mov    edi,0x526affab
  464686:	rex.X call rsi
  464689:	ret    
  46468a:	mov    ah,0xff
  46468c:	repz hlt 
  46468e:	jmp    0x46461e
	...
  4646a8:	out    dx,al
  4646a9:	out    0xdb,al
  4646ab:	dec    esi
  4646ad:	mov    ebx,0x5e7bffa3
  4646b2:	cmp    edi,edi
  4646b4:	mov    esp,DWORD PTR [rdi+0x39]
  4646b7:	call   QWORD PTR [rax-0x6d00ce9a]
  4646bd:	gs (bad) 
  4646bf:	call   QWORD PTR [rbx-0x6a00d29a]
  4646c5:	push   0x6590ff2f
  4646ca:	xor    bh,bh
  4646cc:	mov    BYTE PTR [rbx+0x34],ah
  4646cf:	inc    DWORD PTR [rdi-0x1100be98]
  4646d5:	ffree  st(3)
  4646d7:	(bad)  
  4646d8:	fmul   st,st(4)
  4646da:	mov    ch,0xff
  4646dc:	ja     0x46473d
  4646de:	cmp    al,0xff
  4646e0:	test   BYTE PTR [rdx+0x34],ah
  4646e3:	call   QWORD PTR [rax-0x7200cd9b]
  4646e9:	(bad)  
  4646ea:	dec    DWORD PTR cs:[rsi-0x7700c89b]
  4646f1:	fs cmp edi,edi
  4646f4:	js     0x46474d
  4646f6:	cmp    bh,bh
  4646f8:	lods   al,BYTE PTR ds:[rsi]
  4646f9:	xchg   ebp,eax
  4646fa:	jp     0x4646fb
  4646fc:	in     eax,dx
  4646fd:	in     eax,0xc3
  4646ff:	(bad)  
  464700:	jle    0x46476c
  464702:	rex.X dec DWORD PTR [rcx-0x6600cba1]
  464709:	fs call QWORD PTR ss:[rbp-0x7400cc9a]
  464711:	gs xor bh,bh
  464714:	pushf  
  464715:	movsxd esi,DWORD PTR [rcx]
  464717:	call   FWORD PTR [rcx-0x6c00cd9c]
  46471d:	movsxd esi,DWORD PTR [rip+0x37648bff]        # 0x37aad322
  464723:	(bad)  
  464724:	jnp    0x464782
  464726:	xor    edi,edi
  464728:	xchg   edx,eax
  464729:	jge    0x464780
  46472b:	push   rbp
  46472d:	in     eax,dx
  46472e:	enter  0xa2ff,0x8c
  464732:	ins    DWORD PTR es:[rdi],dx
  464733:	push   QWORD PTR [rbx+0x57]
  464736:	cmp    edi,edi
  464738:	jnp    0x4647ad
  46473a:	push   rsp
  46473b:	(bad)  
  46473c:	sti    
  46473d:	stc    
  46473e:	fdivp  st(7),st
  464740:	(bad)  
  464741:	mov    ch,0x9d
  464743:	push   QWORD PTR [rax+0x54]
  464746:	(bad)  
  464747:	call   FWORD PTR [rdx-0xa009280]
  46474d:	lock (bad) 
  464750:	cld    
  464751:	cld    
  464752:	cli    
  464753:	sbb    eax,0x0
	...
  464764:	out    dx,al
  464765:	in     eax,dx
  464766:	jmp    0x464785
  464768:	imul   ebp
  46476a:	fdivp  st(7),st
  46476c:	stos   DWORD PTR es:[rdi],eax
  46476d:	xchg   ebp,eax
  46476e:	jp     0x46476f
  464770:	jle    0x4647d0
  464772:	xor    eax,0x33658dff
  464777:	dec    DWORD PTR [rdi-0x6e00cf9b]
  46477d:	gs call QWORD PTR cs:[rdx-0x6a00d29b]
  464785:	call   QWORD PTR cs:[eax-0x7700cf9b]
  46478d:	movsxd esi,DWORD PTR [rip+0x3c6483ff]        # 0x3caacb92
  464793:	jmp    rdi
  464795:	(bad)  
  464796:	mov    edx,0xc3dbe6ff
  46479b:	(bad)  
  46479c:	jge    0x464802
  46479e:	rex inc DWORD PTR [rsi-0x6e00cb9d]
  4647a5:	fs (bad) 
  4647a7:	call   QWORD PTR [rbx-0x7100cf9a]
  4647ad:	fs xor al,0xff
  4647b0:	mov    DWORD PTR [rax+rdi*1-0x1],esp
  4647b4:	jle    0x464810
  4647b6:	cmp    bh,bh
  4647b8:	(bad)  
  4647b9:	and    DWORD PTR [rsi-0x1],0xffc6e5eb
  4647c0:	sub    BYTE PTR [rdi+0x4d],0xff
  4647c4:	xchg   BYTE PTR [rax+rdi*1-0x1],bl
  4647c8:	cwde   
  4647c9:	(bad)  
  4647ca:	cmp    bh,bh
  4647cc:	xchg   ebp,eax
  4647cd:	fs xor bh,bh
  4647d0:	nop
  4647d1:	xor    di,di
  4647d4:	cwde   
  4647d5:	movsxd ebp,DWORD PTR [rsi]
  4647d7:	call   QWORD PTR [rbp-0x7200cd9d]
  4647dd:	fs cmp bh,bh
  4647e0:	and    DWORD PTR [rbx+0x3c],0xffffffff
  4647e4:	je     0x464842
  4647e6:	(bad)  
  4647e7:	dec    ebx
  4647e9:	mov    esp,0xe5eaff98
  4647ee:	sar    bh,0x7e
  4647f1:	gs rex (bad) 
  4647f4:	js     0x46484f
  4647f6:	(bad)  
  4647f7:	dec    DWORD PTR [rcx-0x200a482]
  4647fd:	sti    
  4647fe:	(bad)  
  464800:	mov    ebx,0x76ff8aa8
  464805:	push   rbp
  464806:	cmp    bh,bh
  464808:	jnp    0x464867
  46480a:	rex.R (bad) 
  46480c:	fmul   st,st(4)
  46480e:	mov    dl,0xff
  464810:	cld    
  464811:	cld    
  464812:	hlt    
  464813:	jb     0x464815
	...
  464821:	add    BYTE PTR [rax],al
  464823:	add    bh,ah
  464825:	in     al,0xe1
  464827:	jrcxz  0x46481d
  464829:	jmp    0x464806
  46482b:	dec    DWORD PTR [rbp-0x7b00a88b]
  464831:	(bad)  
  464832:	xor    edi,edi
  464834:	nop
  464835:	gs (bad) 
  464837:	call   QWORD PTR [rax-0x6e00cf9b]
  46483d:	gs call QWORD PTR cs:[rdx-0x6a00d39b]
  464845:	push   0x6691ff2f
  46484a:	xor    edi,edi
  46484c:	mov    DWORD PTR [rbp+rsi*1-0x1],esp
  464850:	jle    0x4648b1
  464852:	cmp    bh,bh
  464854:	fld    st(6)
  464856:	stos   BYTE PTR es:[rdi],al
  464857:	push   rax
  464859:	in     eax,0xcb
  46485b:	inc    DWORD PTR [rdx+rbp*2+0x6084ff45]
  464862:	call   QWORD PTR cs:[rsi-0x6900cd97]
  464869:	push   0x6490ff31
  46486e:	xor    edi,edi
  464870:	mov    BYTE PTR [rdx+0x36],ah
  464873:	(bad)  
  464874:	jge    0x4648cd
  464876:	call   QWORD PTR ss:[rdi-0x13009e85]
  46487d:	in     eax,0xc8
  46487f:	inc    DWORD PTR [rdx-0x7c00a98d]
  464885:	pop    rbx
  464886:	cmp    al,0xff
  464888:	xchg   edi,eax
  464889:	(bad)  
  46488a:	cmp    edi,edi
  46488c:	xchg   esi,eax
  46488d:	fs xor bh,bh
  464890:	xchg   ecx,eax
  464891:	call   QWORD PTR cs:[ecx-0x7200d29c]
  464899:	movsxd esi,DWORD PTR [rdx]
  46489b:	inc    DWORD PTR [rsi+0x79ff3a65]
  4648a1:	(bad)  
  4648a2:	cmp    eax,0x4c6c82ff
  4648a7:	(bad)  
  4648a8:	cli    
  4648a9:	out    dx,al
  4648aa:	int    0xff
  4648ac:	iret   
  4648ad:	ret    0xff9c
  4648b0:	jns    0x46490c
  4648b2:	xor    al,0xff
  4648b4:	jle    0x464911
  4648b6:	call   FWORD PTR ss:[rsi-0x9770]
  4648bd:	(bad)  
  4648be:	xlat   BYTE PTR ds:[rbx]
  4648bf:	jmp    FWORD PTR [rbx-0x7e008e6c]
  4648c5:	pop    rsp
  4648c6:	cmp    eax,0x3c5a7bff
  4648cb:	jmp    QWORD PTR [rdi-0x4008769]
  4648d1:	std    
  4648d2:	repnz stos BYTE PTR es:[rdi],al
	...
  4648e4:	call   0xffffffffdd2a27cd
  4648e9:	int    0xbb
  4648eb:	(bad)  
  4648ec:	jp     0x46494d
  4648ee:	dec    DWORD PTR ds:[rax-0x6b00ce9f]
  4648f5:	addr32 (bad) 
  4648f7:	call   QWORD PTR [rdx-0x6f00cd99]
  4648fd:	fs call QWORD PTR cs:[rdx-0x6a00d39b]
  464905:	push   0x6691ff2f
  46490a:	xor    edi,edi
  46490c:	mov    DWORD PTR [rsi+rsi*1-0x1],esp
  464910:	js     0x46496b
  464912:	xor    bh,bh
  464914:	int    0xbb
  464916:	sahf   
  464917:	push   rsi
  464919:	in     eax,dx
  46491a:	sar    bh,cl
  46491c:	mov    WORD PTR [rax+0x4b],?
  46491f:	dec    DWORD PTR [rax-0x6c00ce9e]
  464925:	gs call QWORD PTR cs:[rsi-0x6d00cf99]
  46492d:	gs xor edi,edi
  464930:	mov    WORD PTR [rsi+rsi*1-0x1],fs
  464934:	sbb    BYTE PTR [rcx+0x37],0xff
  464938:	lahf   
  464939:	and    DWORD PTR [rsi-0x1],0xffffffeb
  46493d:	in     al,0xc8
  46493f:	(bad)  
  464940:	jg     0x4649b2
  464942:	push   rbp
  464943:	inc    DWORD PTR [rdx-0x6a00c0a5]
  464949:	(bad)  
  46494a:	cmp    al,0xff
  46494c:	xchg   esi,eax
  46494d:	fs xor edi,edi
  464950:	xchg   ebx,eax
  464951:	addr32 (bad) 
  464953:	dec    DWORD PTR [rdi-0x7700cf96]
  464959:	push   0x647dff35
  46495e:	cmp    edi,edi
  464960:	outs   dx,DWORD PTR ds:[rsi]
  464961:	pop    rbx
  464962:	cmp    bh,bh
  464964:	mov    bh,0xa8
  464966:	mov    edi,edi
  464968:	(bad)  
  464969:	cld    
  46496a:	fdivp  st(7),st
  46496c:	sahf   
  46496d:	test   DWORD PTR [rax-0x1],esp
  464970:	sbb    DWORD PTR [rsi+0x34],0xffffffff
  464974:	sbb    BYTE PTR [rbx+0x31],0xff
  464978:	stos   DWORD PTR es:[rdi],eax
  464979:	fwait
  46497a:	jno    0x46497b
  46497c:	(bad)  
  46497d:	cld    
  46497e:	(bad)  
  46497f:	call   FWORD PTR [rbp-0x7e00a17b]
  464985:	pop    rsp
  464986:	cmp    bh,bh
  464988:	(bad)  
  464989:	pop    rdi
  46498a:	cmp    eax,0x42677bff
  46498f:	call   rax
  464991:	sar    DWORD PTR [rbx-0x3010301],1
  464997:	push   rbp
	...
  4649a4:	repnz imul esp
  4649a7:	stos   BYTE PTR es:[rdi],al
  4649a8:	mov    dh,0xa6
  4649aa:	(bad)  
  4649ab:	(bad)  
  4649ac:	jl     0x464a03
  4649ae:	xor    edi,edi
  4649b0:	nop
  4649b1:	fs xor al,0xff
  4649b4:	nop
  4649b5:	data16 (bad) 
  4649b7:	call   QWORD PTR [rcx-0x6d00ca9b]
  4649bd:	gs xor bh,bh
  4649c0:	xchg   esp,eax
  4649c1:	data16 xor bh,bh
  4649c4:	xchg   ebp,eax
  4649c5:	dec    DWORD PTR cs:[esi-0x7700d29c]
  4649cd:	movsxd esi,DWORD PTR [rdx]
  4649cf:	(bad)  
  4649d0:	jnp    0x464a30
  4649d2:	xor    bh,bh
  4649d4:	sar    DWORD PTR [rdi+rbx*4-0x2f180901],1
  4649db:	dec    DWORD PTR [rdi+rbp*2+0x5f82ff50]
  4649e2:	(bad)  
  4649e3:	dec    DWORD PTR [rcx-0x7300cd9e]
  4649e9:	(bad)  
  4649ea:	xor    bh,bh
  4649ec:	mov    esp,DWORD PTR [rcx+0x30]
  4649ef:	dec    DWORD PTR [rcx+riz*2+0x5875ff30]
  4649f6:	xor    eax,0x7892a0ff
  4649fb:	push   rax
  4649fd:	jrcxz  0x4649c1
  4649ff:	dec    DWORD PTR [rdi-0x7800b990]
  464a05:	(bad)  
  464a06:	xor    eax,0x38648cff
  464a0b:	dec    DWORD PTR [rdx-0x7500c79c]
  464a11:	movsxd edi,DWORD PTR [rax]
  464a13:	call   QWORD PTR [rdx-0x6d00ce99]
  464a19:	ins    BYTE PTR es:[rdi],dx
  464a1a:	cmp    edi,edi
  464a1c:	(bad)  
  464a1d:	(bad)  
  464a1e:	cmp    edi,edi
  464a20:	jg     0x464a87
  464a22:	rex.XB jmp r11
  464a25:	fnstcw WORD PTR [rdx-0x431f1401]
  464a2b:	(bad)  
  464a2c:	jge    0x464a93
  464a2e:	cmp    bh,bh
  464a30:	mov    DWORD PTR [rax+0x35],ebp
  464a33:	(bad)  
  464a34:	jg     0x464a94
  464a36:	(bad)  
  464a37:	jmp    FWORD PTR [rbp-0x8163]
  464a3d:	sti    
  464a3e:	jrcxz  0x464a3f
  464a40:	xchg   ebp,eax
  464a41:	sbb    DWORD PTR [rdi-0x1],0xffffff80
  464a45:	(bad)  
  464a46:	sub    eax,0x2f6685ff
  464a4b:	push   QWORD PTR [rsi+0x5c]
  464a4e:	sub    edi,edi
  464a50:	test   al,0x98
  464a52:	cmp    bh,0xfb
  464a55:	stc    
  464a56:	hlt    
  464a57:	stos   BYTE PTR es:[rdi],al
	...
  464a64:	(bad)  
  464a65:	lock loopne 0x464a4b
  464a68:	lahf   
  464a69:	mov    WORD PTR [rsi-0x1],?
  464a6c:	jg     0x464ac4
  464a6e:	xor    edi,edi
  464a70:	xchg   ecx,eax
  464a71:	fs xor eax,0x2d648cff
  464a77:	call   QWORD PTR [rax-0x6d00ca9c]
  464a7d:	gs xor bh,bh
  464a80:	xchg   esp,eax
  464a81:	data16 xor bh,bh
  464a84:	xchg   ebp,eax
  464a85:	call   QWORD PTR cs:[eax-0x7600d09a]
  464a8d:	gs xor al,0xff
  464a90:	jle    0x464af4
  464a92:	xor    eax,0xa5c3d7ff
  464a97:	push   rbx
  464a99:	out    0xcf,eax
  464a9b:	inc    DWORD PTR [rbp+rbp*2+0x5c79ff4c]
  464aa2:	inc    DWORD PTR ss:[rdx-0x7e00cba0]
  464aa9:	(bad)  
  464aaa:	xor    edi,edi
  464aac:	test   BYTE PTR [rbx+0x37],ah
  464aaf:	inc    DWORD PTR [rdx+0x67ff3861]
  464ab5:	push   rcx
  464ab6:	xor    bh,bh
  464ab8:	mov    ah,0xa8
  464aba:	(bad)  
  464abb:	(bad)  
  464abc:	out    dx,al
  464abd:	loope  0x464a7c
  464abf:	dec    DWORD PTR [rdx+rbp*2+0x6389ff3e]
  464ac6:	xor    edi,edi
  464ac8:	mov    fs,WORD PTR [rdi+rsi*1-0x1]
  464acc:	mov    fs,WORD PTR [rbx+0x38]
  464acf:	dec    DWORD PTR [rsi-0x6b00c69d]
  464ad5:	xor    di,di
  464ad8:	lea    esp,[rsi+0x33]
  464adb:	(bad)  
  464adc:	jge    0x464b3b
  464ade:	xor    al,0xff
  464ae0:	mov    dh,BYTE PTR [rdx+0x50]
  464ae3:	(bad)  
  464ae4:	(bad)  
  464ae5:	lock sar edi,1
  464ae8:	retf   
  464ae9:	shl    DWORD PTR [rbx+0x365a6cff],0xff
  464af0:	jnp    0x464b52
  464af2:	xor    edi,edi
  464af4:	js     0x464b52
  464af6:	sub    eax,0x7894a1ff
  464afb:	(bad)  
  464afc:	(bad)  
  464afd:	clc    
  464afe:	loope  0x464aff
  464b00:	sahf   
  464b01:	mov    ah,BYTE PTR [rdi-0x1]
  464b04:	test   BYTE PTR [rbx+0x2e],ah
  464b07:	dec    DWORD PTR [rbx+0x7dff3068]
  464b0d:	pop    rsi
  464b0e:	sub    bh,bh
  464b10:	xchg   DWORD PTR [rax+0x55],esi
  464b13:	push   rax
  464b15:	(bad)  
  464b16:	fsubrp st(3),st
  464b18:	cmc    
  464b19:	cmc    
  464b1a:	repz sbb eax,0x0
  464b20:	(bad)  
  464b21:	out    dx,al
  464b22:	jmp    0xffffffffd62c2e99
  464b27:	dec    DWORD PTR [rbp+rsi*2+0x5c86ff5d]
  464b2e:	cmp    edi,edi
  464b30:	xchg   ebx,eax
  464b31:	dec    DWORD PTR ss:[esi-0x6f00d198]
  464b39:	gs xor eax,0x326592ff
  464b3f:	call   QWORD PTR [rsi+riz*2+0x6794ff30]
  464b46:	dec    DWORD PTR cs:[rsi-0x7800d29c]
  464b4d:	movsxd esi,DWORD PTR [rdx]
  464b4f:	(bad)  
  464b50:	jle    0x464bb3
  464b52:	xor    al,0xff
  464b54:	(bad)  
  464b55:	ret    
  464b56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  464b57:	(bad)  
  464b58:	out    dx,eax
  464b59:	call   0x60ba4b2d
  464b5e:	rex push QWORD PTR [rsi+0x60]
  464b62:	cmp    edi,edi
  464b64:	jp     0x464bc8
  464b66:	cmp    edi,edi
  464b68:	sub    DWORD PTR [rdi+rax*2-0x1],0xff90b1c3
  464b70:	jrcxz  0x464b46
  464b72:	mov    eax,0x66828dff
  464b77:	inc    esp
  464b79:	(bad)  
  464b7a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  464b7b:	jmp    rsp
  464b7d:	fidiv  DWORD PTR [rdi+rdi*8-0xc99c7b]
  464b84:	lea    esp,[rbx+0x33]
  464b87:	call   QWORD PTR [rdx-0x6b00ca9d]
  464b8d:	movsxd esi,DWORD PTR [rdi]
  464b8f:	call   QWORD PTR [rdx+riz*2+0x6493ff38]
  464b96:	sub    eax,0x30648dff
  464b9b:	inc    DWORD PTR [rbx-0x6a00c89f]
  464ba1:	jle    0x464bfe
  464ba3:	(bad)  
  464ba4:	(bad)  
  464ba5:	cli    
  464ba6:	fdiv   st(7),st
  464ba8:	mov    ebx,0x66ff98b1
  464bad:	pop    rbx
  464bae:	rex.R dec DWORD PTR [rsp+rdi*2+0x6476ff55]
  464bb6:	(bad)  
  464bb7:	inc    DWORD PTR [rbp-0x9a80]
  464bbd:	sti    
  464bbe:	jrcxz  0x464bbf
  464bc0:	mov    ch,0x9f
  464bc2:	jle    0x464bc3
  464bc4:	(bad)  
  464bc5:	pop    rbp
  464bc6:	sub    edi,edi
  464bc8:	nop
  464bc9:	gs xor bh,bh
  464bcc:	mov    fs,WORD PTR [rdx+rsi*1-0x1]
  464bd0:	jp     0x464c2e
  464bd2:	notrack call rsi
  464bd5:	int3   
  464bd6:	mov    esp,0xe0e8e7ff
  464bdb:	mov    DWORD PTR [rax],0xde000000
  464be1:	jrcxz  0x464bbf
  464be3:	jmp    rax
  464be5:	fmul   st(3),st
  464be7:	inc    DWORD PTR [rdx-0x7400b199]
  464bed:	pop    rdi
  464bee:	cmp    bh,bh
  464bf0:	xchg   ecx,eax
  464bf1:	fs xor edi,edi
  464bf4:	lea    ebp,[rcx+0x2e]
  464bf7:	call   QWORD PTR [rax-0x6d00ca9b]
  464bfd:	gs xor bh,bh
  464c00:	xchg   esp,eax
  464c01:	data16 xor bh,bh
  464c04:	xchg   esp,eax
  464c05:	call   QWORD PTR cs:[eax-0x7600d19a]
  464c0d:	gs xor al,0xff
  464c10:	and    DWORD PTR [rbx+0x37],0xadcdddff
  464c17:	(bad)  
  464c18:	(bad)  
  464c19:	cli    
  464c1a:	loopne 0x464c1b
  464c1c:	mov    dh,0xa8
  464c1e:	mov    bh,bh
  464c20:	jg     0x464c90
  464c22:	rex.WRB jmp QWORD PTR [r15+0x56]
  464c26:	xor    al,0xff
  464c28:	mov    BYTE PTR [rbx+0x5b],bh
  464c2b:	jmp    rax
  464c2d:	fdivr  DWORD PTR [rsi-0x29161201]
  464c33:	push   QWORD PTR [rbx-0x17006952]
  464c39:	out    0xc8,al
  464c3b:	dec    esi
  464c3d:	ret    
  464c3e:	pushf  
  464c3f:	(bad)  
  464c40:	jg     0x464c9e
  464c42:	sub    eax,0x356691ff
  464c47:	call   QWORD PTR [rsi-0x6800cb9d]
  464c4d:	movsxd esi,DWORD PTR [rip+0x376297ff]        # 0x37a8e452
  464c53:	call   QWORD PTR [rbp-0x6e00d19a]
  464c59:	addr32 xor edi,edi
  464c5c:	test   BYTE PTR [rcx+0x33],ah
  464c5f:	dec    DWORD PTR [rcx-0xe00b791]
  464c65:	out    0xcc,al
  464c67:	dec    edx
  464c69:	ret    0xffad
  464c6c:	xchg   ecx,eax
  464c6d:	mov    edi,DWORD PTR [rdi+rdi*8-0x10]
  464c71:	(bad)  
  464c72:	int    0xff
  464c74:	mov    al,0xa7
  464c76:	jl     0x464c77
  464c78:	outs   dx,DWORD PTR ds:[rsi]
  464c79:	outs   dx,BYTE PTR ds:[rsi]
  464c7a:	push   rsi
  464c7b:	(bad)  
  464c7c:	stc    
  464c7d:	stc    
  464c7e:	in     eax,0xff
  464c80:	sar    DWORD PTR [rbp+0x5f89ff9e],1
  464c86:	call   QWORD PTR cs:[rbx-0x6900d29e]
  464c8d:	data16 xor al,0xff
  464c90:	jl     0x464ce9
  464c92:	xor    eax,0x96adbdff
  464c97:	push   rbp
  464c99:	hlt    
  464c9a:	in     al,0xaa
  464c9c:	add    BYTE PTR [rax],al
  464c9e:	add    BYTE PTR [rax],al
  464ca0:	in     al,0xe6
  464ca2:	(bad)  
  464ca4:	(bad)  
  464ca6:	mov    esi,0x466082ff
  464cab:	dec    DWORD PTR [rdi-0x6f00c5a1]
  464cb1:	fs dec DWORD PTR cs:[rdx-0x6f00d598]
  464cb9:	fs xor al,0xff
  464cbc:	xchg   edx,eax
  464cbd:	gs xor bh,bh
  464cc0:	xchg   esp,eax
  464cc1:	data16 xor bh,bh
  464cc4:	xchg   ebp,eax
  464cc5:	push   0x648eff2e
  464cca:	sub    eax,0x346589ff
  464ccf:	inc    DWORD PTR [rax-0x2800c89d]
  464cd5:	(bad)  
  464cd6:	test   al,0xff
  464cd8:	(bad)  
  464cd9:	(bad)  
  464cda:	(bad)  
  464cdb:	(bad)  
  464cdc:	(bad)  
  464cdd:	cli    
  464cde:	fdivp  st(7),st
  464ce0:	jmp    0x464cc3
  464ce2:	sar    edi,0xbd
  464ce5:	mov    al,0x91
  464ce7:	call   FWORD PTR [rax-0x66008f72]
  464ced:	xchg   esp,eax
  464cee:	jl     0x464cef
  464cf0:	cwde   
  464cf1:	xchg   esp,eax
  464cf2:	test   bh,bh
  464cf4:	int3   
  464cf5:	leave  
  464cf6:	mov    bl,0xff
  464cf8:	(bad)  
  464cf9:	(bad)  
  464cfa:	(bad)  
  464cfc:	stos   BYTE PTR es:[rdi],al
  464cfd:	xchg   ebp,eax
  464cfe:	ins    DWORD PTR es:[rdi],dx
  464cff:	inc    DWORD PTR [rcx-0x6e00d3a4]
  464d05:	gs xor bh,bh
  464d08:	xchg   ebp,eax
  464d09:	fs xor bh,bh
  464d0c:	xchg   ebp,eax
  464d0d:	fs xor al,0xff
  464d10:	xchg   ebp,eax
  464d11:	movsxd esi,DWORD PTR [rip+0x2f6593ff]        # 0x2fabe116
  464d17:	call   QWORD PTR [rax-0x7500cf9a]
  464d1d:	fs xor al,0xff
  464d20:	jg     0x464d82
  464d22:	(bad)  
  464d23:	inc    esi
  464d25:	mov    ah,0x93
  464d27:	(bad)  
  464d28:	sti    
  464d29:	neg    dh
  464d2b:	push   QWORD PTR [rsi-0x41005c4d]
  464d31:	mov    eax,0x949dff9c
  464d36:	outs   dx,DWORD PTR ds:[rsi]
  464d37:	push   QWORD PTR [rcx+0x70]
  464d3a:	pop    rbp
  464d3b:	push   rax
  464d3d:	out    dx,eax
  464d3e:	(bad)  
  464d40:	fmul   st,st(2)
  464d42:	lods   eax,DWORD PTR ds:[rsi]
  464d43:	dec    DWORD PTR [rbx-0x6600d0a0]
  464d49:	gs xor bh,bh
  464d4c:	xchg   edi,eax
  464d4d:	vaddsd xmm14{k2}{z},xmm16,QWORD PTR [rcx]
  464d53:	call   FWORD PTR [rdi-0x7009576]
  464d59:	cmc    
  464d5a:	loopne 0x464d3f
  464d5c:	jmp    0x464d49
  464d5e:	jmp    0xffffffffea3b4080
  464d63:	inc    ebp
  464d65:	mov    ecx,0x5a7fffa5
  464d6a:	notrack call QWORD PTR [rdx-0x6c00c8a1]
  464d71:	push   0x6c8dff30
  464d76:	sub    al,0xff
  464d78:	nop
  464d79:	gs xor al,0xff
  464d7c:	xchg   edx,eax
  464d7d:	gs xor bh,bh
  464d80:	xchg   esp,eax
  464d81:	data16 xor bh,bh
  464d84:	xchg   ebp,eax
  464d85:	push   0x6690ff2f
  464d8a:	dec    DWORD PTR cs:[rax+0x79ff3264]
  464d91:	pop    rsp
  464d92:	(bad)  
  464d93:	dec    edi
  464d95:	mov    esi,0xecf4ffa1
  464d9a:	xlat   BYTE PTR ds:[rbx]
  464d9b:	jmp    FWORD PTR [rdi-0x1f00785e]
  464da1:	shl    DWORD PTR [rbp-0x2a0a0201],cl
  464da7:	(bad)  
  464da8:	(bad)  
  464da9:	cld    
  464daa:	fdiv   st(7),st
  464dac:	push   rdi
  464dae:	fdiv   st(7),st
  464db0:	(bad)  
  464db1:	cli    
  464db2:	in     eax,0xff
  464db4:	std    
  464db5:	cmc    
  464db6:	fdiv   st(7),st
  464db8:	ret    0x89ab
  464dbb:	inc    DWORD PTR [rbx-0x7400c29b]
  464dc1:	fs xor bh,bh
  464dc4:	nop
  464dc5:	data16 xor bh,bh
  464dc8:	xchg   edx,eax
  464dc9:	xor    di,di
  464dcc:	nop
  464dcd:	gs xor bh,bh
  464dd0:	nop
  464dd1:	gs xor al,0xff
  464dd4:	mov    WORD PTR [rcx+0x2e],fs
  464dd7:	dec    DWORD PTR [rsi-0x6f00d09c]
  464ddd:	addr32 xor al,0xff
  464de0:	mov    BYTE PTR [rsp+rsi*1-0x1],ah
  464de4:	mov    DWORD PTR [rbp+0x41],ebp
  464de7:	(bad)  
  464de8:	fmulp  st(7),st
  464dea:	lods   al,BYTE PTR ds:[rsi]
  464deb:	(bad)  
  464dec:	(bad)  
  464ded:	sti    
  464dee:	in     al,0xff
  464df0:	(bad)  
  464df1:	loop   0x464dba
  464df3:	(bad)  
  464df4:	in     eax,dx
  464df5:	jrcxz  0x464dbb
  464df7:	jmp    rbp
  464df9:	jrcxz  0x464dd0
  464dfb:	(bad)  
  464dfc:	(bad)  
  464dfd:	push   rbp
  464dff:	call   rsi
  464e01:	(bad)  
  464e02:	stos   BYTE PTR es:[rdi],al
  464e03:	dec    DWORD PTR [rdi-0x6800cb9b]
  464e09:	gs xor bh,bh
  464e0c:	xchg   esi,eax
  464e0d:	gs xor edi,edi
  464e10:	xchg   ecx,eax
  464e11:	gs cmp edi,edi
  464e14:	mov    ?,WORD PTR [rax+0x4a]
  464e17:	(bad)  
  464e18:	out    dx,eax
  464e19:	call   0xfffffffff83f4dee
  464e1e:	repz push rbp
  464e20:	div    edi
  464e22:	in     al,dx
  464e23:	inc    eax
  464e25:	mov    al,0x9b
  464e27:	(bad)  
  464e28:	jg     0x464e80
  464e2a:	cmp    edi,edi
  464e2c:	xchg   ebp,eax
  464e2d:	(bad)  
  464e2e:	(bad)  
  464e2f:	call   QWORD PTR [rbp-0x7400cd96]
  464e35:	ins    DWORD PTR es:[rdi],dx
  464e36:	sub    al,0xff
  464e38:	nop
  464e39:	gs xor al,0xff
  464e3c:	xchg   edx,eax
  464e3d:	gs xor bh,bh
  464e40:	xchg   esp,eax
  464e41:	data16 xor bh,bh
  464e44:	xchg   ebp,eax
  464e45:	push   0x6690ff2e
  464e4a:	(bad)  
  464e4b:	dec    DWORD PTR [rbx+0x7dff3566]
  464e51:	(bad)  
  464e52:	xor    al,0xff
  464e54:	ret    0x95af
  464e57:	(bad)  
  464e58:	stc    
  464e59:	in     eax,dx
  464e5a:	fdivp  st(7),st
  464e5c:	xor    DWORD PTR [rax+0x57],0x3e5e75ff
  464e63:	dec    DWORD PTR [rdi-0x4f00af8b]
  464e69:	xchg   esi,eax
  464e6a:	jno    0x464e6b
  464e6c:	mov    edi,0xb4ff81a4
  464e71:	fwait
  464e72:	jl     0x464e73
  464e74:	xchg   esp,eax
  464e75:	js     0x464ecf
  464e77:	(bad)  
  464e78:	jle    0x464ed5
  464e7a:	cmp    bh,bh
  464e7c:	xchg   BYTE PTR [rax+0x37],ah
  464e7f:	dec    DWORD PTR [rsi-0x6f00cd9b]
  464e85:	addr32 xor bh,bh
  464e88:	mov    fs,WORD PTR [rdi+0x30]
  464e8b:	dec    DWORD PTR [rbx-0x7800cd99]
  464e91:	data16 xor al,0xff
  464e94:	mov    WORD PTR [rbp+0x35],fs
  464e97:	dec    DWORD PTR [rsi-0x7000cd9a]
  464e9d:	data16 (bad) 
  464e9f:	dec    DWORD PTR [rdi-0x7a00d099]
  464ea5:	(bad)  
  464ea6:	sub    al,0xff
  464ea8:	(bad)  
  464ea9:	data16 cmp bh,bh
  464eac:	test   al,0x97
  464eae:	jae    0x464eaf
  464eb0:	iret   
  464eb1:	(bad)  
  464eb2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  464eb3:	dec    esi
  464eb5:	ret    0xffaa
  464eb8:	fcmovbe st,st(2)
  464eba:	(bad)  
  464ebb:	(bad)  
  464ebc:	(bad)  
  464ebd:	push   rdi
  464ebf:	dec    esp
  464ec1:	mov    eax,0x6088ff9d
  464ec6:	(bad)  
  464ec7:	call   QWORD PTR [rax-0x7100d39d]
  464ecd:	fs xor bh,bh
  464ed0:	mov    ah,BYTE PTR [rax+0x31]
  464ed3:	inc    DWORD PTR [rdi-0x1f00c79c]
  464ed9:	xlat   BYTE PTR ds:[rbx]
  464eda:	mov    ebx,0xfcffffff
  464edf:	push   rbp
  464ee0:	clc    
  464ee1:	imul   ah
  464ee3:	inc    eax
  464ee5:	scas   eax,DWORD PTR es:[rdi]
  464ee6:	(bad)  
  464ee7:	inc    DWORD PTR [rax-0x6700c6aa]
  464eed:	movsxd edi,DWORD PTR [rdx]
  464eef:	call   QWORD PTR [rsi-0x7500ce95]
  464ef5:	push   0x29
  464ef7:	dec    DWORD PTR [rdi-0x6e00cb9c]
  464efd:	gs xor bh,bh
  464f00:	xchg   ebx,eax
  464f01:	data16 xor bh,bh
  464f04:	xchg   esp,eax
  464f05:	push   0x6790ff2f
  464f0a:	xor    bh,bh
  464f0c:	mov    DWORD PTR [rbp+0x34],esp
  464f0f:	(bad)  
  464f10:	jns    0x464f6e
  464f12:	jmp    FWORD PTR cs:[rax+rbx*4-0x8000082]
  464f1a:	call   0x7cd9f81e
  464f1f:	push   QWORD PTR [rdx+0x56]
  464f22:	inc    DWORD PTR ss:[rcx-0x7f00c59f]
  464f29:	pop    rbp
  464f2a:	xor    bh,bh
  464f2c:	jle    0x464f89
  464f2e:	xor    edi,edi
  464f30:	jg     0x464f8e
  464f32:	xor    edi,edi
  464f34:	sbb    DWORD PTR [rax+rdi*1-0x1],0xff3f628a
  464f3c:	lea    esp,[rdx+0x39]
  464f3f:	call   QWORD PTR [rcx-0x6f00cc9a]
  464f45:	addr32 xor bh,bh
  464f48:	mov    WORD PTR [rdi+0x30],fs
  464f4b:	inc    DWORD PTR [rsi-0x7c00ce97]
  464f51:	push   0x6388ff32
  464f56:	xor    eax,0x32638dff
  464f5b:	call   QWORD PTR [rbx-0x6900d098]
  464f61:	imul   ebp,DWORD PTR [rdi+rdi*8],0xff2c6790
  464f68:	mov    DWORD PTR [rsi+0x32],esp
  464f6b:	(bad)  
  464f6c:	js     0x464fcd
  464f6e:	xor    edi,edi
  464f70:	js     0x464fd0
  464f72:	cmp    al,0xff
  464f74:	outs   dx,BYTE PTR ds:[rsi]
  464f75:	push   rbx
  464f76:	cmp    eax,0x929ca9ff
  464f7b:	(bad)  
  464f7c:	std    
  464f7d:	hlt    
  464f7e:	(bad)  
  464f7f:	jmp    QWORD PTR [rbx-0x7a009077]
  464f85:	pop    rsi
  464f86:	call   QWORD PTR cs:[rax-0x7300d09a]
  464f8d:	data16 xor bh,bh
  464f90:	mov    DWORD PTR [rcx+0x2f],esp
  464f93:	inc    DWORD PTR [rdx-0x3100d1a2]
  464f99:	ret    
  464f9a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  464f9b:	(bad)  
  464f9c:	clc    
  464f9d:	clc    
  464f9e:	rep stos BYTE PTR es:[rdi],al
  464fa0:	div    ah
  464fa2:	out    0xff,al
  464fa4:	retf   0x9ebf
  464fa7:	(bad)  
  464fa8:	js     0x465009
  464faa:	xor    eax,0x37678fff
  464faf:	call   FWORD PTR [rax-0x6000d09d]
  464fb5:	(bad)  
  464fb6:	(bad)  
  464fb7:	dec    DWORD PTR [rdx-0x7700cb99]
  464fbd:	addr32 xor eax,0x336587ff
  464fc3:	inc    DWORD PTR [rsi-0x7900cd9c]
  464fc9:	gs xor bh,bh
  464fcc:	xchg   BYTE PTR [rbp+0x33],ah
  464fcf:	inc    DWORD PTR [rbx-0x6600d19f]
  464fd5:	jg     0x465031
  464fd7:	(bad)  
  464fd8:	push   rbp
  464fda:	(bad)  
  464fdc:	leave  
  464fdd:	mov    bl,0x91
  464fdf:	push   QWORD PTR [rsi+0x57]
  464fe2:	dec    DWORD PTR cs:[rax-0x7300ca9a]
  464fe9:	addr32 (bad) 
  464feb:	dec    DWORD PTR [rbp-0x7200d49c]
  464ff1:	fs sub bh,bh
  464ff4:	xchg   ebx,eax
  464ff5:	imul   esi,DWORD PTR [rdi+rdi*8],0xff366590
  464ffc:	nop
  464ffd:	fs xor al,0xff
  465000:	xchg   ecx,eax
  465001:	xor    ax,0x90ff
  465005:	gs xor al,0xff
  465008:	nop
  465009:	gs xor al,0xff
  46500c:	nop
  46500d:	gs xor al,0xff
  465010:	(bad)  
  465011:	gs xor al,0xff
  465014:	mov    esp,DWORD PTR [rbp+rsi*1-0x1]
  465018:	(bad)  
  465019:	fs xor eax,0x346497ff
  46501f:	call   FWORD PTR [rbp-0x6400cd9c]
  465025:	movsxd ebp,DWORD PTR [rdi]
  465027:	call   QWORD PTR [rdi-0x6f00cf9b]
  46502d:	push   QWORD PTR cs:[ebp+0x5e]
  465032:	xor    al,0xff
  465034:	js     0x46509f
  465036:	rex.WRXB (bad) 
  465038:	in     al,dx
  465039:	in     eax,0xc7
  46503b:	(bad)  
  46503c:	call   0xffffffff8b46081b
  465041:	gs (bad) 
  465043:	dec    DWORD PTR [rbx+riz*2+0x628bff34]
  46504a:	xor    edi,edi
  46504c:	mov    fs,WORD PTR [rbp+0x39]
  46504f:	dec    DWORD PTR [rsp+riz*2+0x5d7cff34]
  465056:	sub    al,0xff
  465058:	sar    BYTE PTR [rsi-0x1110005e],1
  46505e:	call   0xffffffffda2c3a0d
  465063:	(bad)  
  465064:	(bad)  
  465066:	mov    ah,0xff
  465068:	jp     0x4650cf
  46506a:	inc    DWORD PTR ds:[rbp-0x6900ca9f]
  465071:	fs xor al,0xff
  465074:	cdq    
  465075:	(bad)  
  465076:	xor    bh,bh
  465078:	mov    fs,WORD PTR [rdi+0x34]
  46507b:	dec    DWORD PTR [rdi+riz*2+0x658bff35]
  465082:	xor    edi,edi
  465084:	mov    ah,BYTE PTR [rdx+rsi*1-0x1]
  465088:	lea    esp,[rdi+0x35]
  46508b:	dec    DWORD PTR [rsi+riz*2+0x628bff34]
  465092:	(bad)  
  465093:	inc    DWORD PTR [rcx-0x2800c19a]
  465099:	iret   
  46509a:	mov    cl,0xff
  46509c:	repz out 0xc3,eax
  46509f:	inc    DWORD PTR [rbx+rbp*2+0x607fff44]
  4650a6:	xor    edi,edi
  4650a8:	mov    ah,BYTE PTR [rcx+rsi*1-0x1]
  4650ac:	mov    fs,WORD PTR [rbp+0x2e]
  4650af:	call   QWORD PTR [rbx-0x6d00d39b]
  4650b5:	gs xor bh,bh
  4650b8:	(bad)  
  4650b9:	gs xor eax,0x34658fff
  4650bf:	dec    DWORD PTR [rdi-0x7000cb9b]
  4650c5:	gs xor al,0xff
  4650c8:	(bad)  
  4650c9:	gs xor al,0xff
  4650cc:	(bad)  
  4650cd:	gs xor al,0xff
  4650d0:	(bad)  
  4650d1:	gs xor al,0xff
  4650d4:	xchg   edx,eax
  4650d5:	data16 xor bh,bh
  4650d8:	xchg   ebx,eax
  4650d9:	gs xor edi,edi
  4650dc:	xchg   edi,eax
  4650dd:	fs xor bh,bh
  4650e0:	cwde   
  4650e1:	movsxd esi,DWORD PTR [rdx]
  4650e3:	call   QWORD PTR [rdx+riz*2+0x658fff33]
  4650ea:	inc    DWORD PTR ss:[rsi+0x77ff3264]
  4650f1:	gs rex.XB call r9
  4650f5:	enter  0xffb3,0xfa
  4650f9:	icebp  
  4650fa:	sar    edi,cl
  4650fc:	movabs ds:0x92ff316085ff5d85,al
  465105:	addr32 xor eax,0x346692ff
  46510b:	call   QWORD PTR [rbx-0x7500ca99]
  465111:	movsxd esi,DWORD PTR [rdx]
  465113:	(bad)  
  465114:	jp     0x465176
  465116:	xor    eax,0x98b2c3ff
  46511b:	push   rsp
  46511d:	repnz in al,dx
  46511f:	stos   BYTE PTR es:[rdi],al
  465120:	fstp   st(2)
  465122:	sar    bh,cl
  465124:	repz (bad) 
  465126:	sar    edi,cl
  465128:	xchg   BYTE PTR [rcx+0x52],dh
  46512b:	(bad)  
  46512c:	jnp    0x46518a
  46512e:	dec    DWORD PTR ss:[rbx+riz*2+0x608fff35]
  465136:	(bad)  
  465137:	call   QWORD PTR [rdx-0x6e00ca9a]
  46513d:	gs xor eax,0x33638fff
  465143:	dec    DWORD PTR [rsi-0x6f00cd9e]
  465149:	fs xor al,0xff
  46514c:	nop
  46514d:	fs xor edi,edi
  465150:	xchg   edx,eax
  465151:	fs xor bh,bh
  465154:	jns    0x4651b4
  465156:	jmp    QWORD PTR ss:[rbp-0x8364]
  46515d:	(bad)  
  46515e:	(bad)  
  465160:	lods   eax,DWORD PTR ds:[rsi]
  465161:	pushf  
  465162:	jns    0x465163
  465164:	jo     0x4651bc
  465166:	(bad)  
  465167:	inc    DWORD PTR [rbp-0x7000c89e]
  46516d:	fs xor edi,edi
  465170:	cwde   
  465171:	gs xor edi,edi
  465174:	xchg   ecx,eax
  465175:	movsxd esi,DWORD PTR [rax]
  465177:	dec    DWORD PTR [rbp+riz*2+0x658dff34]
  46517e:	xor    al,0xff
  465180:	lea    esp,[rbp+0x34]
  465183:	dec    DWORD PTR [rsi-0x7100cb9b]
  465189:	gs xor al,0xff
  46518c:	mov    fs,WORD PTR [rbp+0x34]
  46518f:	dec    DWORD PTR [rdi-0x6800cb9b]
  465195:	addr32 sub eax,0x2e6696ff
  46519b:	call   QWORD PTR [rsi-0x6d00cf9b]
  4651a1:	fs xor al,0xff
  4651a4:	mov    DWORD PTR [rcx+0x36],esp
  4651a7:	inc    DWORD PTR [rsi+0x76ff3c64]
  4651ad:	pop    rsp
  4651ae:	xor    al,0xff
  4651b0:	mov    ah,0xa7
  4651b2:	(bad)  
  4651b3:	(bad)  
  4651b4:	(bad)  
  4651b5:	cld    
  4651b6:	(bad)  
  4651b7:	(bad)  
  4651b8:	mov    eax,0x78ff88a4
  4651bd:	pop    rdx
  4651be:	xor    eax,0x346388ff
  4651c3:	dec    DWORD PTR [rbx-0x6b00d19f]
  4651c9:	addr32 xor edi,edi
  4651cc:	xchg   ebx,eax
  4651cd:	fs xor bh,bh
  4651d0:	mov    DWORD PTR [rbp+rsi*1-0x1],esp
  4651d4:	jno    0x465232
  4651d6:	cmp    edi,edi
  4651d8:	leave  
  4651d9:	mov    edx,0xedf0ffa4
  4651de:	call   0xffffffffe42e3b8d
  4651e3:	push   rbp
  4651e4:	sti    
  4651e5:	hlt    
  4651e6:	in     al,0xc7
  4651e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4651e9:	xchg   esp,eax
  4651ea:	jge    0x4651eb
  4651ec:	outs   dx,BYTE PTR ds:[rsi]
  4651ed:	push   rbp
  4651ee:	xor    eax,0x3c6586ff
  4651f3:	dec    DWORD PTR [rdx-0x6e00cb9c]
  4651f9:	(bad)  {k4}{z}
  4651fe:	xor    al,0xff
  465200:	xchg   esp,eax
  465201:	gs xor eax,0x336392ff
  465207:	call   QWORD PTR [rcx-0x6c00cd9e]
  46520d:	movsxd esi,DWORD PTR [rdi+rdi*8]
  465210:	xchg   edi,eax
  465211:	gs xor eax,0x335d7aff
  465217:	(bad)  
  465218:	jl     0x46528b
  46521a:	rex.WRX push rbx
  46521d:	out    dx,al
  46521e:	int    0xff
  465220:	(bad)  
  465222:	mov    bh,0xff
  465224:	jns    0x465289
  465226:	rex.XB (bad) 
  465228:	jp     0x465287
  46522a:	cmp    bh,bh
  46522c:	mov    esp,DWORD PTR [rcx+rdi*1-0x1]
  465230:	(bad)  
  465231:	(bad)  
  465232:	(bad)  
  465233:	call   QWORD PTR [rax-0x7200cd9c]
  465239:	gs xor al,0xff
  46523c:	lea    esp,[rbp+0x34]
  46523f:	dec    DWORD PTR [rbp-0x7300cb9b]
  465245:	fs xor edi,edi
  465248:	mov    WORD PTR [rbx+rsi*1-0x1],fs
  46524c:	mov    WORD PTR [rbx+rsi*1-0x1],fs
  465250:	lea    esp,[rbx+rsi*1-0x1]
  465254:	xchg   esi,eax
  465255:	gs sub al,0xff
  465258:	cdq    
  465259:	imul   esi,DWORD PTR [rdx],0x336792ff
  46525f:	dec    DWORD PTR [rcx-0x7f00c99d]
  465265:	(bad)  
  465266:	cmp    edi,edi
  465268:	jno    0x4652c2
  46526a:	xor    al,0xff
  46526c:	xchg   ecx,eax
  46526d:	jl     0x4652cb
  46526f:	(bad)  
  465270:	(bad)  
  465271:	cli    
  465272:	in     al,0xff
  465274:	(bad)  
  465275:	retf   0xffb4
  465278:	jae    0x4652d8
  46527a:	(bad)  
  46527b:	(bad)  
  46527c:	jge    0x4652dd
  46527e:	cmp    bh,bh
  465280:	mov    ah,BYTE PTR [rsi+0x37]
  465283:	call   QWORD PTR [rcx-0x6f00c998]
  465289:	fs xor edi,edi
  46528c:	mov    WORD PTR [rdi+0x2e],ds
  46528f:	inc    DWORD PTR [rsp+riz*2+0x5867ff3c]
  465296:	cmp    al,0xff
  465298:	(bad)  
  46529a:	ret    0xefff
  46529d:	out    dx,al
  46529e:	(bad)  
  46529f:	stos   BYTE PTR es:[rdi],al
  4652a0:	add    BYTE PTR [rax],al
  4652a2:	add    BYTE PTR [rax],al
  4652a4:	loope  0x465281
  4652a6:	(bad)  
  4652a7:	jmp    rsp
  4652a9:	fmul   st,st(1)
  4652ab:	push   QWORD PTR [rdi+0x63]
  4652ae:	rex.WB (bad) 
  4652b0:	jp     0x465314
  4652b2:	cmp    eax,0x376481ff
  4652b7:	call   QWORD PTR [rax-0x7100cc9c]
  4652bd:	(bad)  {k7}{z}
  4652c2:	xor    edi,edi
  4652c4:	xchg   edx,eax
  4652c5:	call   WORD PTR ss:[rax-0x6f00cb9b]
  4652cd:	gs xor al,0xff
  4652d0:	xchg   edx,eax
  4652d1:	fs xor edi,edi
  4652d4:	test   DWORD PTR [rbp+0x38],esp
  4652d7:	jmp    FWORD PTR [rsi+0x5b]
  4652da:	cmp    bh,bh
  4652dc:	stos   DWORD PTR es:[rdi],eax
  4652dd:	popf   
  4652de:	jg     0x4652df
  4652e0:	(bad)  
  4652e1:	(bad)  
  4652e2:	jmp    0xffffffff8beb07e6
  4652e7:	jmp    FWORD PTR [rdx+0x55]
  4652ea:	cmp    bh,bh
  4652ec:	jns    0x465349
  4652ee:	dec    DWORD PTR ss:[rbx-0x7600c89b]
  4652f5:	movsxd esi,DWORD PTR [rcx]
  4652f7:	dec    DWORD PTR [rsi+riz*2+0x668cff34]
  4652fe:	xor    al,0xff
  465300:	mov    WORD PTR [rsi+0x34],fs
  465303:	dec    DWORD PTR [rdx-0x7500cd9d]
  465309:	movsxd esi,DWORD PTR [rdx]
  46530b:	dec    DWORD PTR [rdx-0x7300cd9d]
  465311:	gs xor edi,edi
  465314:	cdq    
  465315:	push   0x38
  465317:	dec    DWORD PTR [rdi-0x7500cc9d]
  46531d:	addr32 cmp bh,bh
  465320:	and    DWORD PTR [rbp+0x39],0x335a71ff
  465327:	(bad)  
  465328:	jg     0x465394
  46532a:	rex.W jmp rbx
  46532d:	fdivr  DWORD PTR [rbx-0x3f231701]
  465333:	inc    DWORD PTR [rdx+0x7bff4d6e]
  465339:	(bad)  
  46533a:	cmp    edi,edi
  46533c:	(bad)  
  46533d:	movsxd edi,DWORD PTR [rax]
  46533f:	dec    DWORD PTR [rdx-0x7700c799]
  465345:	(bad)  
  465346:	xor    bh,bh
  465348:	mov    BYTE PTR [rcx+0x37],ah
  46534b:	dec    DWORD PTR [rbp+0x6fff3d65]
  465351:	push   rbx
  465352:	xor    al,0xff
  465354:	movabs eax,ds:0xfde3e8f4f9ff8397
  46535d:	std    
  46535e:	std    
  46535f:	sbb    eax,0x0
  465364:	fcmovnbe st,st(7)
  465366:	(bad)  
  465367:	stos   BYTE PTR es:[rdi],al
  465368:	(bad)  
  465369:	clc    
  46536a:	lock (bad) 
  46536c:	mov    eax,0x68ff95a9
  465371:	push   rbp
  465372:	xor    bh,bh
  465374:	ja     0x4653d8
  465376:	dec    DWORD PTR ss:[rbx-0x7300cb9a]
  46537d:	gs xor edi,edi
  465380:	mov    WORD PTR [rbp+0x34],fs
  465383:	dec    DWORD PTR [rbp+riz*2+0x668dff33]
  46538a:	xor    al,0xff
  46538c:	lea    esp,[rsi+0x34]
  46538f:	dec    DWORD PTR [rsi-0x7800cb9a]
  465395:	movsxd esi,DWORD PTR [rip+0x395d7cff]        # 0x39a3d09a
  46539b:	(bad)  
  46539c:	jp     0x465400
  46539e:	rex.RX (bad) 
  4653a0:	fst    st(2)
  4653a2:	mov    esi,0xd9ecf1ff
  4653a7:	call   QWORD PTR [rcx+rcx*4+0x596cff70]
  4653ae:	ss (bad) 
  4653b0:	jg     0x46541a
  4653b2:	cmp    edi,edi
  4653b4:	test   BYTE PTR [rbp+0x33],ah
  4653b7:	dec    DWORD PTR [rbx-0x7500cb9a]
  4653bd:	data16 xor al,0xff
  4653c0:	mov    ah,BYTE PTR [rsi+0x34]
  4653c3:	dec    DWORD PTR [rax-0x7700cd9c]
  4653c9:	fs xor bh,bh
  4653cc:	mov    BYTE PTR [rdx+rsi*1-0x1],ah
  4653d0:	mov    BYTE PTR [rbx+rsi*1-0x1],ah
  4653d4:	mov    ah,BYTE PTR [rdx+0x39]
  4653d7:	inc    DWORD PTR [rdi+0x7aff3c63]
  4653dd:	pop    rdi
  4653de:	push   QWORD PTR ss:[rbx+0x5f]
  4653e2:	call   QWORD PTR ss:[rdx+rax*4-0x241a00a4]
  4653ea:	mov    eax,0xceedf6ff
  4653ef:	call   QWORD PTR [rbx+0x78ff5479]
  4653f5:	pop    rsp
  4653f6:	xor    bh,bh
  4653f8:	and    DWORD PTR [rcx+0x34],0x3a698cff
  4653ff:	dec    DWORD PTR [rax-0x7600ca9d]
  465405:	addr32 cmp al,0xff
  465408:	jnp    0x465465
  46540a:	cmp    bh,bh
  46540c:	jbe    0x465465
  46540e:	cmp    bh,bh
  465410:	movabs eax,ds:0xf4ffdfeef3ff788f
  465419:	repnz in eax,dx
  46541b:	jb     0x46541d
  46541d:	add    BYTE PTR [rax],al
  46541f:	add    BYTE PTR [rax],al
  465421:	add    BYTE PTR [rax],al
  465423:	add    bh,bh
  465425:	(bad)  
  465426:	(bad)  
  465427:	cmp    eax,edx
  465429:	leave  
  46542a:	(bad)  
  46542b:	jrcxz  0x465428
  46542d:	cmc    
  46542e:	out    0xff,al
  465430:	scas   eax,DWORD PTR es:[rdi]
  465431:	movabs eax,ds:0x5d81ff376678ff7e
  46543a:	sub    bh,bh
  46543c:	mov    ah,BYTE PTR [rsi+0x32]
  46543f:	dec    DWORD PTR [rbx-0x7700cc99]
  465445:	movsxd esi,DWORD PTR [rax]
  465447:	dec    DWORD PTR [rdx-0x7500cc9a]
  46544d:	xor    di,di
  465450:	mov    DWORD PTR [rsi+0x32],esp
  465453:	dec    DWORD PTR [rdi-0x7100c99a]
  465459:	(bad)  
  46545a:	cmp    edi,edi
  46545c:	outs   dx,DWORD PTR ds:[rsi]
  46545d:	push   rcx
  46545e:	xor    eax,0x637385ff
  465463:	push   rax
  465465:	jmp    0x465443
  465467:	(bad)  
  465468:	(bad)  
  465469:	in     eax,0xd1
  46546b:	call   QWORD PTR [rbx+rcx*4+0x636eff68]
  465472:	xor    al,0xff
  465474:	jge    0x4654d8
  465476:	dec    DWORD PTR cs:[rdx-0x7500cd9b]
  46547d:	xor    di,di
  465480:	mov    ah,BYTE PTR [rsi+0x33]
  465483:	dec    DWORD PTR [rax-0x7800ce9c]
  465489:	movsxd esi,DWORD PTR [rax]
  46548b:	inc    DWORD PTR [rdi-0x7800cf9c]
  465491:	vmulsd xmm15{z},xmm16,QWORD PTR [rcx]
  465497:	(bad)  
  465498:	js     0x4654f3
  46549a:	cmp    bh,bh
  46549c:	jle    0x465506
  46549e:	rex.RB push QWORD PTR [r8-0x900815d]
  4654a5:	out    dx,eax
  4654a6:	leave  
  4654a7:	(bad)  
  4654a8:	cld    
  4654a9:	not    dl
  4654ab:	jmp    FWORD PTR [rdx+0x7fff6d92]
  4654b1:	pop    rsp
  4654b2:	xor    bh,bh
  4654b4:	mov    gs,WORD PTR [rax+0x34]
  4654b7:	dec    DWORD PTR [rsi-0x7800cd99]
  4654bd:	pop    rdi
  4654be:	sub    edi,edi
  4654c0:	mov    esp,DWORD PTR [rbp+0x35]
  4654c3:	(bad)  
  4654c4:	jg     0x465523
  4654c6:	ss (bad) 
  4654c8:	jg     0x46552b
  4654ca:	rex.RB push QWORD PTR [r15-0xc007661]
  4654d1:	(bad)  
  4654d2:	fdiv   st(7),st
  4654d4:	cli    
  4654d5:	stc    
  4654d6:	cmc    
  4654d7:	push   rbp
	...
  4654e8:	div    esi
  4654ea:	test   BYTE PTR [rsi-0x1c342d2b],0xff
  4654f1:	(bad)  
  4654f2:	in     eax,dx
  4654f3:	jrcxz  0x4654c7
  4654f5:	int3   
  4654f6:	mov    bl,0xff
  4654f8:	movabs eax,ds:0x75ff406b83ff638c
  465501:	pop    rbp
  465502:	xor    edi,edi
  465504:	je     0x465563
  465506:	xor    edi,edi
  465508:	je     0x465567
  46550a:	xor    edi,edi
  46550c:	jne    0x46556c
  46550e:	xor    al,0xff
  465510:	jne    0x465570
  465512:	xor    edi,edi
  465514:	jns    0x465575
  465516:	inc    DWORD PTR ds:[rcx-0x6c00ad99]
  46551d:	sub    BYTE PTR [rdi-0x1],0xaf
  465521:	movabs ds:0xffffe3cfdbe1ff96,al
  46552a:	stc    
  46552b:	jb     0x465525
  46552d:	cmc    
  46552e:	loop   0x465513
  465530:	mov    esi,0x93ff9eb8
  465535:	jg     0x465591
  465537:	inc    DWORD PTR [rax+0x7cff3362]
  46553d:	(bad)  
  46553e:	xor    bh,bh
  465540:	jp     0x46559f
  465542:	xor    bh,bh
  465544:	js     0x4655a1
  465546:	cs (bad) 
  465548:	jnp    0x4655a8
  46554a:	xor    edi,edi
  46554c:	jl     0x4655ad
  46554e:	xor    bh,bh
  465550:	(bad)  
  465551:	gs cmp edi,edi
  465554:	mov    edi,DWORD PTR [rbx+0x5b]
  465557:	push   QWORD PTR [rbx-0x1b00785a]
  46555d:	fstp   TBYTE PTR [rbp-0x20040001]
  465563:	(bad)  
  465564:	(bad)  
  465566:	mov    ah,0xff
  465568:	xchg   ebx,eax
  465569:	sbb    DWORD PTR [rsi-0x1],0xff395e76
  465570:	and    BYTE PTR [rbx+0x34],0xff
  465574:	jle    0x4655d8
  465576:	sub    edi,edi
  465578:	jnp    0x4655d8
  46557a:	sub    al,0xff
  46557c:	jp     0x4655de
  46557e:	xor    edi,edi
  465580:	js     0x4655e3
  465582:	cmp    edi,edi
  465584:	xchg   esp,eax
  465585:	(bad)  
  465586:	fs call rcx
  465589:	(bad)  
  46558a:	mov    al,0xff
  46558c:	clc    
  46558d:	repz call 0xfffffffff53e4d76
  465593:	push   rbp
	...
  4655b0:	(bad)  
  4655b1:	(bad)  
  4655b2:	jmp    0xffffffffea323fd4
  4655b7:	stos   BYTE PTR es:[rdi],al
  4655b8:	sti    
  4655b9:	repz (bad) 
  4655bc:	jmp    0xffffffffcd4622a4
  4655c1:	(bad)
  4655c4:	mov    edi,0xb5ff9bb3
  4655c9:	stos   BYTE PTR es:[rdi],al
  4655ca:	xchg   ebx,eax
  4655cb:	push   QWORD PTR [rbx-0x35006e58]
  4655d1:	mov    edi,0xc8cdffa6
  4655d6:	mov    ecx,0xd8dee0ff
  4655db:	push   rdx
  4655dd:	in     al,dx
  4655de:	in     al,0xaa
  4655e0:	(bad)  
  4655e1:	cli    
  4655e2:	rep stos BYTE PTR es:[rdi],al
  4655e4:	call   0xd531cb
  4655e9:	add    BYTE PTR [rax],al
  4655eb:	add    dh,ah
  4655ed:	in     al,0xe2
  4655ef:	cmp    ebp,esi
  4655f1:	icebp  
  4655f2:	in     eax,dx
  4655f3:	stos   BYTE PTR es:[rdi],al
  4655f4:	std    
  4655f5:	mul    ch
  4655f7:	(bad)  
  4655f8:	fmul   st(7),st
  4655fa:	mov    dl,0xff
  4655fc:	mov    ecx,0xa8ff8ca8
  465601:	cwde   
  465602:	jl     0x465603
  465604:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  465605:	cwde   
  465606:	jl     0x465607
  465608:	mov    cl,0xa1
  46560a:	test   edi,edi
  46560c:	enter  0x9cb9,0xff
  465610:	(bad)  
  465612:	mov    ah,0xff
  465614:	in     al,dx
  465615:	lock (bad) 
  465617:	(bad)  
  465618:	clc    
  465619:	sti    
  46561a:	jrcxz  0x4655e3
  46561c:	cld    
  46561d:	cli    
  46561e:	call   0xffffffffa4fe17ea
  465623:	(bad)  
  465624:	jl     0x465693
  465626:	pop    rdx
  465627:	jmp    FWORD PTR [rbp+0x5a]
  46562a:	push   QWORD PTR [r11+0x60]
  46562e:	(bad)  
  46562f:	push   QWORD PTR [rdi+0x64]
  465632:	cmp    eax,0x487081ff
  465637:	dec    DWORD PTR [rdi-0x5800a17f]
  46563d:	pushf  
  46563e:	cmp    bh,0xd2
  465641:	(bad)  
  465642:	mov    edx,0xe7f3f6ff
  465647:	jrcxz  0x465645
  465649:	std    
  46564a:	test   DWORD PTR [rsi+0x1dfefefe],0x0
	...
  465678:	out    dx,al
  465679:	jmp    0xffffffffd520e561
  46567e:	sar    bh,1
  465680:	in     eax,dx
  465681:	call   0xfffffffffb45016b
  465686:	imul   BYTE PTR [rdx-0x55060401]
  46568c:	std    
  46568d:	stc    
  46568e:	imul   BYTE PTR [rdx-0x5517130e]
  465694:	(bad)  
  465695:	cld    
  465696:	clc    
  465697:	push   rbp
	...
  4656b0:	out    0xe4,al
  4656b2:	jrcxz  0x4656d1
  4656b4:	(bad)  
  4656b6:	(bad)  
  4656b7:	jrcxz  0x465698
  4656b9:	(bad)  
  4656bb:	jrcxz  0x4656b9
  4656bd:	stc    
  4656be:	rep stos BYTE PTR es:[rdi],al
  4656c0:	std    
  4656c1:	sti    
  4656c2:	cmc    
  4656c3:	stos   BYTE PTR es:[rdi],al
  4656c4:	(bad)  
  4656c5:	(bad)  
  4656c6:	cli    
  4656c7:	stos   BYTE PTR es:[rdi],al
  4656c8:	(bad)  
  4656c9:	cld    
  4656ca:	stc    
  4656cb:	stos   BYTE PTR es:[rdi],al
  4656cc:	(bad)  
  4656cd:	cld    
  4656ce:	stc    
  4656cf:	mov    ?,edi
  4656d1:	(bad)  
  4656d2:	sti    
  4656d3:	push   rbp
  4656d4:	cmc    
  4656d5:	imul   edi
  4656d7:	cmp    DWORD PTR [rax],eax
  4656d9:	add    BYTE PTR [rax],al
  4656db:	add    bh,dh
  4656dd:	cmc    
  4656de:	in     al,dx
  4656df:	sbb    eax,0xe3dce3ec
  4656e4:	fst    st(4)
  4656e6:	retf   
  4656e7:	jmp    rbx
  4656e9:	xlat   BYTE PTR ds:[rbx]
  4656ea:	enter  0xe5ff,0xd9
  4656ee:	ret    
  4656ef:	(bad)  
  4656f0:	(bad)  
  4656f1:	loopne 0x4656c0
  4656f3:	push   rdi
  4656f5:	jmp    0x4656d6
  4656f7:	(bad)  
  4656f8:	clc    
  4656f9:	repz jmp 0xffffffffee3b53a9
  4656ff:	stos   BYTE PTR es:[rdi],al
  465700:	in     al,dx
  465701:	in     al,0xe2
  465703:	stos   BYTE PTR es:[rdi],al
  465704:	in     eax,dx
  465705:	(bad)  
  465706:	jmp    0x465760
	...
  4657a3:	add    bh,bh
  4657a5:	(bad)  
  4657a6:	(bad)  
  4657a7:	cmp    ebp,ebp
  4657a9:	in     al,dx
  4657aa:	jmp    0xffffffffcd1a2f21
  4657af:	call   rbx
  4657b1:	(bad)  
  4657b2:	retf   0xc6ff
  4657b5:	ret    0xffc5
  4657b8:	call   0xd53ba0
	...
  4657dd:	add    BYTE PTR [rax],al
  4657df:	add    bh,bh
  4657e1:	(bad)  
  4657e2:	inc    DWORD PTR [rax]
  4657e4:	(bad)  
  4657e5:	inc    DWORD PTR [rax]
  4657e7:	add    bh,bh
  4657e9:	(bad)  
  4657ea:	inc    DWORD PTR [rax]
  4657ec:	ud0    eax,DWORD PTR [rax]
  4657ef:	add    bh,bh
  4657f1:	(bad)  
  4657f2:	inc    DWORD PTR [rax]
  4657f4:	ud0    eax,DWORD PTR [rax]
  4657f7:	add    bh,bh
  4657f9:	(bad)  
  4657fa:	inc    DWORD PTR [rax]
  4657fc:	(bad)  
  4657fd:	inc    DWORD PTR [rax]
  4657ff:	add    bh,bh
  465801:	(bad)  
  465802:	inc    DWORD PTR [rax]
  465804:	(bad)  
  465805:	inc    DWORD PTR [rax]
  465807:	add    bh,bh
  465809:	(bad)  
  46580a:	inc    BYTE PTR [rax]
  46580c:	add    edi,edi
  46580e:	add    BYTE PTR [rax],al
  465810:	(bad)  
  465811:	(bad)  
  465812:	inc    BYTE PTR [rax]
  465814:	add    edi,edi
  465816:	add    BYTE PTR [rax],al
  465818:	(bad)  
  465819:	(bad)  
  46581a:	inc    BYTE PTR [rax]
  46581c:	add    edi,edi
  46581e:	add    BYTE PTR [rax],al
  465820:	(bad)  
  465821:	(bad)  
  465822:	inc    BYTE PTR [rax]
  465824:	(bad)  
  465825:	inc    DWORD PTR [rax]
  465827:	add    bh,bh
  465829:	(bad)  
  46582a:	inc    BYTE PTR [rax]
  46582c:	(bad)  
  46582d:	inc    DWORD PTR [rax]
  46582f:	add    bh,bh
  465831:	dec    DWORD PTR [rax+rax*1+0xff03]
  465838:	(bad)  
  465839:	inc    DWORD PTR [rax+rax*1]
  46583c:	add    edi,edi
  46583e:	add    BYTE PTR [rax],al
  465840:	call   FWORD PTR [rax+rax*1+0xff0100]
  465847:	add    dh,bh
  465849:	add    al,0x0
  46584b:	add    BYTE PTR [rbx],al
  46584d:	inc    DWORD PTR [rax]
  46584f:	add    ah,bh
  465851:	add    al,0x0
  465853:	add    BYTE PTR [rax],al
  465855:	(bad)  
  465856:	add    BYTE PTR [rax],al
  465858:	clc    
  465859:	add    eax,DWORD PTR [rax]
  46585b:	add    BYTE PTR [rax],al
  46585d:	add    eax,DWORD PTR [rax]
  46585f:	add    al,dh
  465861:	add    eax,eax
  465863:	add    BYTE PTR [rax],al
  465865:	add    BYTE PTR [rax],al
  465867:	add    al,dh
  465869:	add    BYTE PTR [rax+0x0],ah
  46586c:	add    BYTE PTR [rax],al
  46586e:	add    BYTE PTR [rax],al
  465870:	loopne 0x465872
  465872:	add    BYTE PTR [rax],al
  465874:	add    BYTE PTR [rdi],bh
  465876:	add    BYTE PTR [rax],al
  465878:	rol    BYTE PTR [rax],0x0
  46587b:	add    BYTE PTR [rax],al
  46587d:	(bad)  
  46587e:	add    BYTE PTR [rax],al
  465880:	rol    BYTE PTR [rax],0x0
  465883:	add    BYTE PTR [rax],al
  465885:	(bad)  
  465886:	add    BYTE PTR [rax],al
  465888:	rol    BYTE PTR [rax],0x0
  46588b:	add    BYTE PTR [rax],al
  46588d:	(bad)  
  46588e:	add    BYTE PTR [rax],al
  465890:	add    BYTE PTR [rax],0x0
  465893:	add    BYTE PTR [rax],al
  465895:	(bad)  
  465896:	add    BYTE PTR [rax],al
  465898:	add    BYTE PTR [rax],0x0
  46589b:	add    BYTE PTR [rax],al
  46589d:	sldt   WORD PTR [rax]
  4658a0:	add    BYTE PTR [rax],0x0
  4658a3:	add    BYTE PTR [rax],al
  4658a5:	sldt   WORD PTR [rax]
  4658a8:	rol    BYTE PTR [rax],0x0
  4658ab:	add    BYTE PTR [rax],al
  4658ad:	(bad)  
  4658ae:	add    BYTE PTR [rax],al
  4658b0:	add    BYTE PTR [rax],0x0
  4658b3:	add    BYTE PTR [rax],al
  4658b5:	(bad)  
  4658b6:	add    BYTE PTR [rax],al
  4658b8:	add    BYTE PTR [rax],0x0
  4658bb:	add    BYTE PTR [rax],al
  4658bd:	(bad)  
  4658be:	add    BYTE PTR [rax],al
  4658c0:	add    BYTE PTR [rax],0x0
  4658c3:	add    BYTE PTR [rax],al
  4658c5:	add    eax,DWORD PTR [rax]
  4658c7:	add    BYTE PTR [rax+0x0],al
  4658cd:	add    eax,DWORD PTR [rax]
  4658cf:	add    BYTE PTR [rax+0x0],al
  4658d5:	add    DWORD PTR [rax],eax
  4658d7:	add    BYTE PTR [rax],al
  4658d9:	add    BYTE PTR [rax],al
  4658db:	add    BYTE PTR [rax],al
  4658dd:	add    DWORD PTR [rax],eax
  4658df:	add    BYTE PTR [rax],al
  4658e1:	add    BYTE PTR [rax],al
  4658e3:	add    BYTE PTR [rax],al
  4658e5:	add    DWORD PTR [rax],eax
	...
  465927:	add    BYTE PTR [rax+0x0],al
  46592d:	add    BYTE PTR [rax],al
  46592f:	add    BYTE PTR [rax+0x0],al
  465935:	add    DWORD PTR [rax],eax
  465937:	add    BYTE PTR [rax+0x0],al
  46593d:	add    eax,DWORD PTR [rax]
  46593f:	add    al,al
  465941:	add    BYTE PTR [rax],al
  465943:	add    BYTE PTR [rax],al
  465945:	(bad)  
  465946:	add    BYTE PTR [rax],al
  465948:	lock add BYTE PTR [rax],ah
  46594b:	add    BYTE PTR [rax],al
  46594d:	sldt   WORD PTR [rax]
  465950:	cld    
  465951:	add    esi,eax
  465953:	add    al,BYTE PTR [rax]
  465955:	(bad)  
  465956:	add    BYTE PTR [rax],al
  465958:	(bad)  
  465959:	(bad)  
  46595a:	(bad)  
  46595b:	inc    DWORD PTR [rcx+0xff]
  465961:	add    BYTE PTR [rcx],al
  465963:	add    BYTE PTR [rsi],al
  465965:	add    BYTE PTR [rax],dl
  465967:	adc    BYTE PTR [rax],al
  465969:	add    BYTE PTR [rcx],al
  46596b:	add    BYTE PTR [rax],cl
  46596d:	add    BYTE PTR [rax+0x5],ch
  465970:	add    BYTE PTR [rax],al
  465972:	add    DWORD PTR [rax],eax
  465974:	and    BYTE PTR [rax],ah
  465976:	add    BYTE PTR [rax],al
  465978:	add    DWORD PTR [rax],eax
  46597a:	or     BYTE PTR [rax],al
  46597c:	test   al,0x8
  46597e:	add    BYTE PTR [rax],al
  465980:	add    al,BYTE PTR [rax]
  465982:	xor    BYTE PTR [rax],dh
  465984:	add    BYTE PTR [rax],al
  465986:	add    DWORD PTR [rax],eax
  465988:	or     BYTE PTR [rax],al
  46598a:	test   al,0xe
  46598c:	add    BYTE PTR [rax],al
  46598e:	add    eax,DWORD PTR [rax]
  465990:	adc    BYTE PTR [rax],dl
  465992:	add    BYTE PTR [rax],al
  465994:	add    DWORD PTR [rax],eax
  465996:	and    BYTE PTR [rax],al
  465998:	push   0x4000004
  46599d:	add    BYTE PTR [rax],ah
  46599f:	and    BYTE PTR [rax],al
  4659a1:	add    BYTE PTR [rcx],al
  4659a3:	add    BYTE PTR [rax],ah
  4659a5:	add    BYTE PTR [rax+0x5000010],ch
  4659ab:	add    BYTE PTR [rax],dh
  4659ad:	xor    BYTE PTR [rax],al
  4659af:	add    BYTE PTR [rcx],al
  4659b1:	add    BYTE PTR [rax],ah
  4659b3:	add    BYTE PTR [rax+0x6000025],ch
  4659b9:	add    BYTE PTR [rax],al
  4659bb:	add    BYTE PTR [rax],al
  4659bd:	add    BYTE PTR [rax],al
  4659bf:	add    BYTE PTR [rax+0x3403],bl
  4659c5:	add    BYTE PTR [rsi+0x0],dl
  4659c8:	push   rbx
  4659c9:	add    BYTE PTR [rdi+0x0],bl
  4659cc:	push   rsi
  4659cd:	add    BYTE PTR [rbp+0x0],al
  4659d0:	push   rdx
  4659d1:	add    BYTE PTR [rbx+0x0],dl
  4659d4:	rex.WB add BYTE PTR [r15+0x0],cl
  4659d8:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  4659dc:	rex.WB add BYTE PTR [r14+0x0],cl
  4659e0:	rex.RX add BYTE PTR [rdi+0x0],r9b
  4659e4:	add    BYTE PTR [rax],al
  4659e6:	add    BYTE PTR [rax],al
  4659e8:	mov    ebp,0xfeef04
  4659ed:	add    BYTE PTR [rcx],al
  4659ef:	add    BYTE PTR [rax+rax*1],al
  4659f2:	or     DWORD PTR [rax],eax
  4659f4:	sahf   
  4659f5:	rex.X add DWORD PTR [rax],eax
  4659f8:	add    al,0x0
  4659fa:	or     DWORD PTR [rax],eax
  4659fc:	sahf   
  4659fd:	rex.X add DWORD PTR [rax],eax
  465a00:	(bad)  
  465a01:	add    BYTE PTR [rax],al
  465a03:	add    BYTE PTR [rax],al
  465a05:	add    BYTE PTR [rax],al
  465a07:	add    BYTE PTR [rax+rax*1],al
  465a0a:	add    al,0x0
  465a0c:	add    DWORD PTR [rax],eax
	...
  465a1a:	add    BYTE PTR [rax],al
  465a1c:	clc    
  465a1d:	add    al,BYTE PTR [rax]
  465a1f:	add    BYTE PTR [rcx],al
  465a21:	add    BYTE PTR [rbx+0x0],dl
  465a24:	je     0x465a26
  465a26:	jb     0x465a28
  465a28:	imul   eax,DWORD PTR [rax],0x67006e
  465a2e:	rex.RX add BYTE PTR [rcx+0x0],r13b
  465a32:	ins    BYTE PTR es:[rdi],dx
  465a33:	add    BYTE PTR [rbp+0x0],ah
  465a36:	rex.WB add BYTE PTR [r14+0x0],bpl
  465a3a:	data16 add BYTE PTR [rdi+0x0],ch
  465a3e:	add    BYTE PTR [rax],al
  465a40:	(bad)  
  465a41:	add    al,BYTE PTR [rax]
  465a43:	add    BYTE PTR [rcx],al
  465a45:	add    BYTE PTR [rax],dh
  465a47:	add    BYTE PTR [rax],dh
  465a49:	add    BYTE PTR [rax],dh
  465a4b:	add    BYTE PTR [rax],dh
  465a4d:	add    BYTE PTR [rax],dh
  465a4f:	add    BYTE PTR [rax+rax*1],dh
  465a52:	(bad)  
  465a53:	add    BYTE PTR [rax],dh
  465a55:	add    BYTE PTR [rax],al
  465a57:	add    BYTE PTR [rax+0x0],ch
  465a5a:	and    al,0x0
  465a5c:	add    DWORD PTR [rax],eax
  465a5e:	rex.XB add BYTE PTR [r15+0x0],bpl
  465a62:	ins    DWORD PTR es:[rdi],dx
  465a63:	add    BYTE PTR [rax+0x0],dh
  465a66:	(bad)  
  465a67:	add    BYTE PTR [rsi+0x0],ch
  465a6a:	jns    0x465a6c
  465a6c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  465a70:	ins    DWORD PTR es:[rdi],dx
  465a71:	add    BYTE PTR [rbp+0x0],ah
  465a74:	add    BYTE PTR [rax],al
  465a76:	add    BYTE PTR [rax],al
  465a78:	push   rax
  465a79:	add    BYTE PTR [rdi+0x0],ch
  465a7c:	jae    0x465a7e
  465a7e:	je     0x465a80
  465a80:	add    BYTE PTR [edx+0x0],dh
  465a84:	add    BYTE PTR gs:[rbx+0x0],dl
  465a88:	push   rcx
  465a89:	add    BYTE PTR [rax+rax*1+0x20],cl
  465a8d:	add    BYTE PTR [rdi+0x0],al
  465a90:	ins    BYTE PTR es:[rdi],dx
  465a91:	add    BYTE PTR [rdi+0x0],ch
  465a94:	(bad)  
  465a95:	add    BYTE PTR [rcx+0x0],ah
  465a98:	ins    BYTE PTR es:[rdi],dx
  465a99:	add    BYTE PTR [rax],ah
  465a9b:	add    BYTE PTR [rax+rax*1+0x65],al
  465a9f:	add    BYTE PTR [rsi+0x0],dh
  465aa2:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
  465aa7:	add    BYTE PTR [rax+0x0],dh
  465aaa:	ins    DWORD PTR es:[rdi],dx
  465aab:	add    BYTE PTR [rbp+0x0],ah
  465aae:	outs   dx,BYTE PTR ds:[rsi]
  465aaf:	add    BYTE PTR [rax+rax*1+0x20],dh
  465ab3:	add    BYTE PTR [rdi+0x0],al
  465ab6:	jb     0x465ab8
  465ab8:	outs   dx,DWORD PTR ds:[rsi]
  465ab9:	add    BYTE PTR [rbp+0x0],dh
  465abc:	jo     0x465abe
  465abe:	add    BYTE PTR [rax],al
  465ac0:	jle    0x465ac2
  465ac2:	sub    eax,DWORD PTR [rax]
  465ac4:	add    DWORD PTR [rax],eax
  465ac6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  465aca:	ins    BYTE PTR es:[rdi],dx
  465acb:	add    BYTE PTR [rbp+0x0],ah
  465ace:	add    BYTE PTR [rbp+0x0],r12b
  465ad2:	jae    0x465ad4
  465ad4:	movsxd eax,DWORD PTR [rax]
  465ad6:	jb     0x465ad8
  465ad8:	imul   eax,DWORD PTR [rax],0x740070
  465ade:	imul   eax,DWORD PTR [rax],0x6e006f
  465ae4:	add    BYTE PTR [rax],al
  465ae6:	add    BYTE PTR [rax],al
  465ae8:	jo     0x465aea
  465aea:	jae    0x465aec
  465aec:	jno    0x465aee
  465aee:	ins    BYTE PTR es:[rdi],dx
  465aef:	add    BYTE PTR [rax],ah
  465af1:	add    BYTE PTR [rip+0x74002000],ch        # 0x74467af7
  465af7:	add    BYTE PTR [rax+0x0],ch
  465afa:	add    BYTE PTR gs:[rax],ah
  465afd:	add    BYTE PTR [rax+0x0],dl
  465b00:	outs   dx,DWORD PTR ds:[rsi]
  465b01:	add    BYTE PTR [rbx+0x0],dh
  465b04:	je     0x465b06
  465b06:	add    BYTE PTR [edx+0x0],dh
  465b0a:	add    BYTE PTR gs:[rbx+0x0],dl
  465b0e:	push   rcx
  465b0f:	add    BYTE PTR [rax+rax*1+0x20],cl
  465b13:	add    BYTE PTR [rcx+0x0],ch
  465b16:	outs   dx,BYTE PTR ds:[rsi]
  465b17:	add    BYTE PTR [rax+rax*1+0x65],dh
  465b1b:	add    BYTE PTR [rdx+0x0],dh
  465b1e:	(bad)  
  465b1f:	add    BYTE PTR [rbx+0x0],ah
  465b22:	je     0x465b24
  465b24:	imul   eax,DWORD PTR [rax],0x650076
  465b2a:	and    BYTE PTR [rax],al
  465b2c:	je     0x465b2e
  465b2e:	add    BYTE PTR gs:[rdx+0x0],dh
  465b32:	ins    DWORD PTR es:[rdi],dx
  465b33:	add    BYTE PTR [rcx+0x0],ch
  465b36:	outs   dx,BYTE PTR ds:[rsi]
  465b37:	add    BYTE PTR [rcx+0x0],ah
  465b3a:	ins    BYTE PTR es:[rdi],dx
  465b3b:	add    BYTE PTR [rax],al
  465b3d:	add    BYTE PTR [rax],al
  465b3f:	add    BYTE PTR [rax+rax*1],ch
  465b42:	(bad)  
  465b43:	add    BYTE PTR [rcx],al
  465b45:	add    BYTE PTR [rsi+0x0],al
  465b48:	imul   eax,DWORD PTR [rax],0x65006c
  465b4e:	push   rsi
  465b4f:	add    BYTE PTR [rbp+0x0],ah
  465b52:	jb     0x465b54
  465b54:	jae    0x465b56
  465b56:	imul   eax,DWORD PTR [rax],0x6e006f
  465b5c:	add    BYTE PTR [rax],al
  465b5e:	add    BYTE PTR [rax],al
  465b60:	cmp    DWORD PTR [rax],eax
  465b62:	add    BYTE PTR cs:[rax+rax*1],dh
  465b66:	add    BYTE PTR cs:[rcx],dh
  465b69:	add    BYTE PTR [rax],al
  465b6b:	add    BYTE PTR [rsi],bh
  465b6d:	add    DWORD PTR [rbp+0x4c000100],ecx
  465b73:	add    BYTE PTR [rbp+0x0],ah
  465b76:	add    BYTE PTR [ecx+0x0],ah
  465b7a:	ins    BYTE PTR es:[rdi],dx
  465b7b:	add    BYTE PTR [rbx+0x0],al
  465b7e:	outs   dx,DWORD PTR ds:[rsi]
  465b7f:	add    BYTE PTR [rax+0x0],dh
  465b82:	jns    0x465b84
  465b84:	jb     0x465b86
  465b86:	imul   eax,DWORD PTR [rax],0x680067
  465b8c:	je     0x465b8e
  465b8e:	add    BYTE PTR [rax],al
  465b90:	push   rax
  465b91:	add    BYTE PTR [rdi+0x0],ch
  465b94:	jb     0x465b96
  465b96:	je     0x465b98
  465b98:	imul   eax,DWORD PTR [rax],0x6e006f
  465b9e:	jae    0x465ba0
  465ba0:	and    BYTE PTR [rax],al
  465ba2:	rex.XB add BYTE PTR [r15+0x0],bpl
  465ba6:	jo     0x465ba8
  465ba8:	jns    0x465baa
  465baa:	jb     0x465bac
  465bac:	imul   eax,DWORD PTR [rax],0x680067
  465bb2:	je     0x465bb4
  465bb4:	and    BYTE PTR [rax],al
  465bb6:	sub    BYTE PTR [rax],al
  465bb8:	movsxd eax,DWORD PTR [rax]
  465bba:	sub    DWORD PTR [rax],eax
  465bbc:	and    BYTE PTR [rax],al
  465bbe:	xor    DWORD PTR [rax],eax
  465bc0:	cmp    DWORD PTR [rax],eax
  465bc2:	cmp    DWORD PTR [rax],eax
  465bc4:	add    BYTE PTR ss:[rip+0x30003200],ch        # 0x30468dcb
  465bcb:	add    BYTE PTR [rcx],dh
  465bcd:	add    BYTE PTR [rax+rax*1],dh
  465bd0:	sub    al,0x0
  465bd2:	and    BYTE PTR [rax],al
  465bd4:	push   rax
  465bd5:	add    BYTE PTR [rdi+0x0],ch
  465bd8:	jae    0x465bda
  465bda:	je     0x465bdc
  465bdc:	add    BYTE PTR [edx+0x0],dh
  465be0:	add    BYTE PTR gs:[rbx+0x0],dl
  465be4:	push   rcx
  465be5:	add    BYTE PTR [rax+rax*1+0x20],cl
  465be9:	add    BYTE PTR [rdi+0x0],al
  465bec:	ins    BYTE PTR es:[rdi],dx
  465bed:	add    BYTE PTR [rdi+0x0],ch
  465bf0:	(bad)  
  465bf1:	add    BYTE PTR [rcx+0x0],ah
  465bf4:	ins    BYTE PTR es:[rdi],dx
  465bf5:	add    BYTE PTR [rax],ah
  465bf7:	add    BYTE PTR [rax+rax*1+0x65],al
  465bfb:	add    BYTE PTR [rsi+0x0],dh
  465bfe:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
  465c03:	add    BYTE PTR [rax+0x0],dh
  465c06:	ins    DWORD PTR es:[rdi],dx
  465c07:	add    BYTE PTR [rbp+0x0],ah
  465c0a:	outs   dx,BYTE PTR ds:[rsi]
  465c0b:	add    BYTE PTR [rax+rax*1+0x20],dh
  465c0f:	add    BYTE PTR [rdi+0x0],al
  465c12:	jb     0x465c14
  465c14:	outs   dx,DWORD PTR ds:[rsi]
  465c15:	add    BYTE PTR [rbp+0x0],dh
  465c18:	jo     0x465c1a
  465c1a:	add    BYTE PTR cs:[rax],ah
  465c1d:	add    BYTE PTR [rax+0x0],dl
  465c20:	outs   dx,DWORD PTR ds:[rsi]
  465c21:	add    BYTE PTR [rdx+0x0],dh
  465c24:	je     0x465c26
  465c26:	imul   eax,DWORD PTR [rax],0x6e006f
  465c2c:	jae    0x465c2e
  465c2e:	and    BYTE PTR [rax],al
  465c30:	rex.XB add BYTE PTR [r15+0x0],bpl
  465c34:	jo     0x465c36
  465c36:	jns    0x465c38
  465c38:	jb     0x465c3a
  465c3a:	imul   eax,DWORD PTR [rax],0x680067
  465c40:	je     0x465c42
  465c42:	and    BYTE PTR [rax],al
  465c44:	sub    BYTE PTR [rax],al
  465c46:	movsxd eax,DWORD PTR [rax]
  465c48:	sub    DWORD PTR [rax],eax
  465c4a:	and    BYTE PTR [rax],al
  465c4c:	xor    DWORD PTR [rax],eax
  465c4e:	cmp    DWORD PTR [rax],eax
  465c50:	cmp    DWORD PTR [rax],eax
  465c52:	xor    al,0x0
  465c54:	sub    al,0x0
  465c56:	and    BYTE PTR [rax],al
  465c58:	push   rdx
  465c59:	add    BYTE PTR [rbp+0x0],ah
  465c5c:	add    BYTE PTR [ebp+0x0],ah
  465c60:	outs   dx,BYTE PTR ds:[rsi]
  465c61:	add    BYTE PTR [rax+rax*1+0x73],dh
  465c65:	add    BYTE PTR [rax],ah
  465c67:	add    BYTE PTR [rdi+0x0],ch
  465c6a:	data16 add BYTE PTR [rax],ah
  465c6d:	add    BYTE PTR [rax+rax*1+0x68],dh
  465c71:	add    BYTE PTR [rbp+0x0],ah
  465c74:	and    BYTE PTR [rax],al
  465c76:	push   rbp
  465c77:	add    BYTE PTR [rsi+0x0],ch
  465c7a:	imul   eax,DWORD PTR [rax],0x650076
  465c80:	jb     0x465c82
  465c82:	jae    0x465c84
  465c84:	imul   eax,DWORD PTR [rax],0x790074
  465c8a:	and    BYTE PTR [rax],al
  465c8c:	outs   dx,DWORD PTR ds:[rsi]
  465c8d:	add    BYTE PTR [rsi+0x0],ah
  465c90:	and    BYTE PTR [rax],al
  465c92:	rex.XB add BYTE PTR [r9+0x0],spl
  465c96:	ins    BYTE PTR es:[rdi],dx
  465c97:	add    BYTE PTR [rcx+0x0],ch
  465c9a:	data16 add BYTE PTR [rdi+0x0],ch
  465c9e:	jb     0x465ca0
  465ca0:	outs   dx,BYTE PTR ds:[rsi]
  465ca1:	add    BYTE PTR [rcx+0x0],ch
  465ca4:	(bad)  
  465ca5:	add    BYTE PTR [rsi],ch
  465ca7:	add    BYTE PTR [rax],al
  465ca9:	add    BYTE PTR [rax],al
  465cab:	add    BYTE PTR [rsi],dh
  465cad:	add    BYTE PTR [rbx],cl
  465caf:	add    BYTE PTR [rcx],al
  465cb1:	add    BYTE PTR [rax+0x0],dl
  465cb4:	jb     0x465cb6
  465cb6:	outs   dx,DWORD PTR ds:[rsi]
  465cb7:	add    BYTE PTR [rax+rax*1+0x75],ah
  465cbb:	add    BYTE PTR [rbx+0x0],ah
  465cbe:	je     0x465cc0
  465cc0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  465cc4:	ins    DWORD PTR es:[rdi],dx
  465cc5:	add    BYTE PTR [rbp+0x0],ah
  465cc8:	add    BYTE PTR [rax],al
  465cca:	add    BYTE PTR [rax],al
  465ccc:	push   rax
  465ccd:	add    BYTE PTR [rdi+0x0],ch
  465cd0:	jae    0x465cd2
  465cd2:	je     0x465cd4
  465cd4:	add    BYTE PTR [edx+0x0],dh
  465cd8:	add    BYTE PTR gs:[rbx+0x0],dl
  465cdc:	push   rcx
  465cdd:	add    BYTE PTR [rax+rax*1+0x0],cl
  465ce1:	add    BYTE PTR [rax],al
  465ce3:	add    BYTE PTR [rax],dh
  465ce5:	add    BYTE PTR [rsi],al
  465ce7:	add    BYTE PTR [rcx],al
  465ce9:	add    BYTE PTR [rax+0x0],dl
  465cec:	jb     0x465cee
  465cee:	outs   dx,DWORD PTR ds:[rsi]
  465cef:	add    BYTE PTR [rax+rax*1+0x75],ah
  465cf3:	add    BYTE PTR [rbx+0x0],ah
  465cf6:	je     0x465cf8
  465cf8:	push   rsi
  465cf9:	add    BYTE PTR [rbp+0x0],ah
  465cfc:	jb     0x465cfe
  465cfe:	jae    0x465d00
  465d00:	imul   eax,DWORD PTR [rax],0x6e006f
  465d06:	add    BYTE PTR [rax],al
  465d08:	cmp    DWORD PTR [rax],eax
  465d0a:	add    BYTE PTR cs:[rax+rax*1],dh
  465d0e:	add    BYTE PTR cs:[rcx],dh
  465d11:	add    BYTE PTR [rax],al
  465d13:	add    BYTE PTR [rax+rax*1+0x0],al
  465d17:	add    BYTE PTR [rcx],al
  465d19:	add    BYTE PTR [rsi+0x0],dl
  465d1c:	(bad)  
  465d1d:	add    BYTE PTR [rdx+0x0],dh
  465d20:	rex.RX add BYTE PTR [rcx+0x0],r13b
  465d24:	ins    BYTE PTR es:[rdi],dx
  465d25:	add    BYTE PTR [rbp+0x0],ah
  465d28:	rex.WB add BYTE PTR [r14+0x0],bpl
  465d2c:	data16 add BYTE PTR [rdi+0x0],ch
  465d30:	add    BYTE PTR [rax],al
  465d32:	add    BYTE PTR [rax],al
  465d34:	and    al,0x0
  465d36:	add    al,0x0
  465d38:	add    BYTE PTR [rax],al
  465d3a:	push   rsp
  465d3b:	add    BYTE PTR [rdx+0x0],dh
  465d3e:	(bad)  
  465d3f:	add    BYTE PTR [rsi+0x0],ch
  465d42:	jae    0x465d44
  465d44:	ins    BYTE PTR es:[rdi],dx
  465d45:	add    BYTE PTR [rcx+0x0],ah
  465d48:	je     0x465d4a
  465d4a:	imul   eax,DWORD PTR [rax],0x6e006f
  465d50:	add    BYTE PTR [rax],al
  465d52:	add    BYTE PTR [rax],al
  465d54:	add    BYTE PTR [rax],al
  465d56:	mov    al,0x4
