
20a80b9d290223a304c752287ea4ac7371f928c4455fcb29bf5224f1096f8530.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5f25]        # 0x406f40
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5f26]        # 0x406f50
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5f29]        # 0x406f60
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5eec]        # 0x406f30
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5d9f]        # 0x406df0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5ec1]        # 0x406f20
  40105f:	mov    DWORD PTR [rip+0x8fa3],edx        # 0x40a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4041f0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403150
  401081:	mov    rdx,QWORD PTR [rip+0x5df8]        # 0x406e80
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5dde]        # 0x406e70
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5e44]        # 0x406ee0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5d7b]        # 0x406e20
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402d30
  4010af:	mov    rax,QWORD PTR [rip+0x5cea]        # 0x406da0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4041f0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1f09]        # 0x403030
  401127:	call   0x403020
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5da5]        # 0x406f10
  40116b:	lea    r8,[rip+0x8ea6]        # 0x40a018
  401172:	lea    rdx,[rip+0x8ea7]        # 0x40a020
  401179:	lea    rcx,[rip+0x8ea8]        # 0x40a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x8e78],eax        # 0x40a000
  401188:	lea    rax,[rip+0x8e71]        # 0x40a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5d35]        # 0x406ed0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404208
  4011a3:	mov    DWORD PTR [rip+0x8e67],eax        # 0x40a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5d5a]        # 0x406f20
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5c5b]        # 0x406e50
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xa2f6]        # 0x40b4f8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5c37]        # 0x406e60
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x8dba],0x1        # 0x40a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x5b7c]        # 0x406de0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403340
  40127d:	lea    rcx,[rip+0x265c]        # 0x4038e0
  401284:	call   QWORD PTR [rip+0xa266]        # 0x40b4f0
  40128a:	mov    rdx,QWORD PTR [rip+0x5baf]        # 0x406e40
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4037f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x404230
  4012a5:	call   0x403130
  4012aa:	mov    rax,QWORD PTR [rip+0x5b3f]        # 0x406df0
  4012b1:	mov    QWORD PTR [rip+0x9750],rax        # 0x40aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x5b51]        # 0x406e10
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x96e9],rax        # 0x40aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x8ceb]        # 0x40a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404160
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x8cc2]        # 0x40a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404118
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404160
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404158
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x8c6a],rbp        # 0x40a020
  4013b6:	call   0x402d00
  4013bb:	mov    rax,QWORD PTR [rip+0x5a3e]        # 0x406e00
  4013c2:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x40a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x8c59]        # 0x40a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x8c3c]        # 0x40a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x8c3d]        # 0x40a020
  4013e3:	call   0x4029d7
  4013e8:	mov    ecx,DWORD PTR [rip+0x8c1a]        # 0x40a008
  4013ee:	mov    DWORD PTR [rip+0x8c18],eax        # 0x40a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x8c02]        # 0x40a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4041d8
  40140b:	mov    eax,DWORD PTR [rip+0x8bfb]        # 0x40a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x5a29]        # 0x406e60
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4041e0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x5a3d]        # 0x406ea0
  401463:	mov    rcx,QWORD PTR [rip+0x5a26]        # 0x406e90
  40146a:	call   0x4041c8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xa007]        # 0x40b4a0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x5a19]        # 0x406ec0
  4014a7:	mov    rcx,QWORD PTR [rip+0x5a02]        # 0x406eb0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4041c8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404188
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x5a45]        # 0x406f20
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402d40
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x5a15]        # 0x406f20
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402d40
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	sub    rsp,0x20
  401538:	mov    DWORD PTR [rbp+0x10],ecx
  40153b:	mov    rax,QWORD PTR [rip+0xa00e]        # 0x40b550
  401542:	call   rax
  401544:	add    rax,0x60
  401548:	mov    r9,rax
  40154b:	mov    r8d,0x12d
  401551:	mov    edx,0x1
  401556:	lea    rcx,[rip+0x4aa3]        # 0x406000
  40155d:	call   0x404168
  401562:	mov    ecx,DWORD PTR [rbp+0x10]
  401565:	call   0x404188
  40156a:	nop
  40156b:	push   rbp
  40156c:	mov    rbp,rsp
  40156f:	sub    rsp,0x20
  401573:	mov    DWORD PTR [rbp+0x10],ecx
  401576:	mov    rax,QWORD PTR [rip+0x9fd3]        # 0x40b550
  40157d:	call   rax
  40157f:	add    rax,0x60
  401583:	mov    r9,rax
  401586:	mov    r8d,0x122
  40158c:	mov    edx,0x1
  401591:	lea    rcx,[rip+0x4b98]        # 0x406130
  401598:	call   0x404168
  40159d:	mov    ecx,DWORD PTR [rbp+0x10]
  4015a0:	call   0x404188
  4015a5:	nop
  4015a6:	push   rbp
  4015a7:	mov    rbp,rsp
  4015aa:	sub    rsp,0x30
  4015ae:	mov    QWORD PTR [rbp+0x10],rcx
  4015b2:	mov    QWORD PTR [rbp+0x18],rdx
  4015b6:	mov    QWORD PTR [rbp+0x20],r8
  4015ba:	mov    rax,QWORD PTR [rbp+0x18]
  4015be:	mov    rcx,rax
  4015c1:	mov    rax,QWORD PTR [rip+0x9e40]        # 0x40b408
  4015c8:	call   rax
  4015ca:	cmp    eax,0x1
  4015cd:	je     0x4015d9
  4015cf:	mov    eax,0x1
  4015d4:	jmp    0x401664
  4015d9:	mov    eax,DWORD PTR [rip+0x3a31]        # 0x405010
  4015df:	test   eax,eax
  4015e1:	jle    0x4015f4
  4015e3:	mov    eax,DWORD PTR [rip+0x3a27]        # 0x405010
  4015e9:	mov    ecx,eax
  4015eb:	mov    rax,QWORD PTR [rip+0x9d76]        # 0x40b368
  4015f2:	call   rax
  4015f4:	mov    eax,DWORD PTR [rip+0x8a36]        # 0x40a030
  4015fa:	test   eax,eax
  4015fc:	jne    0x40165f
  4015fe:	mov    rax,QWORD PTR [rbp+0x18]
  401602:	mov    rcx,rax
  401605:	mov    rax,QWORD PTR [rip+0x9e0c]        # 0x40b418
  40160c:	call   rax
  40160e:	mov    QWORD PTR [rbp-0x8],rax
  401612:	cmp    QWORD PTR [rbp-0x8],0x0
  401617:	jne    0x401625
  401619:	lea    rcx,[rip+0x4c33]        # 0x406253
  401620:	call   0x402840
  401625:	mov    rax,QWORD PTR [rbp-0x8]
  401629:	mov    r8d,0x0
  40162f:	mov    rdx,rax
  401632:	mov    rcx,QWORD PTR [rbp+0x10]
  401636:	mov    rax,QWORD PTR [rip+0x9d73]        # 0x40b3b0
  40163d:	call   rax
  40163f:	test   eax,eax
  401641:	jne    0x40164f
  401643:	lea    rcx,[rip+0x4c1a]        # 0x406264
  40164a:	call   0x402840
  40164f:	mov    rax,QWORD PTR [rbp-0x8]
  401653:	mov    rcx,rax
  401656:	mov    rax,QWORD PTR [rip+0x9dcb]        # 0x40b428
  40165d:	call   rax
  40165f:	mov    eax,0x0
  401664:	add    rsp,0x30
  401668:	pop    rbp
  401669:	ret    
  40166a:	push   rbp
  40166b:	push   rsi
  40166c:	push   rbx
  40166d:	mov    rbp,rsp
  401670:	sub    rsp,0x50
  401674:	mov    DWORD PTR [rbp+0x20],ecx
  401677:	mov    QWORD PTR [rbp+0x28],rdx
  40167b:	mov    QWORD PTR [rbp-0x30],0x0
  401683:	mov    QWORD PTR [rbp-0x28],0x0
  40168b:	mov    QWORD PTR [rbp-0x20],0x0
  401693:	mov    QWORD PTR [rbp-0x18],0x0
  40169b:	movzx  eax,BYTE PTR [rbp-0x20]
  40169f:	or     eax,0x1
  4016a2:	mov    BYTE PTR [rbp-0x20],al
  4016a5:	lea    rax,[rbp-0x30]
  4016a9:	mov    rdx,rax
  4016ac:	mov    ecx,DWORD PTR [rbp+0x20]
  4016af:	mov    rax,QWORD PTR [rip+0x9cba]        # 0x40b370
  4016b6:	call   rax
  4016b8:	mov    QWORD PTR [rbp-0x8],rax
  4016bc:	cmp    QWORD PTR [rbp-0x8],0x0
  4016c1:	jne    0x401707
  4016c3:	mov    rsi,QWORD PTR [rbp-0x28]
  4016c7:	mov    rbx,QWORD PTR [rbp-0x30]
  4016cb:	mov    rax,QWORD PTR [rip+0x9e7e]        # 0x40b550
  4016d2:	call   rax
  4016d4:	add    rax,0x60
  4016d8:	mov    r9,rsi
  4016db:	mov    r8,rbx
  4016de:	lea    rdx,[rip+0x4b93]        # 0x406278
  4016e5:	mov    rcx,rax
  4016e8:	call   0x404180
  4016ed:	lea    rax,[rbp-0x30]
  4016f1:	mov    rcx,rax
  4016f4:	mov    rax,QWORD PTR [rip+0x9ccd]        # 0x40b3c8
  4016fb:	call   rax
  4016fd:	mov    ecx,0x1
  401702:	call   0x404188
  401707:	cmp    QWORD PTR [rbp+0x28],0x0
  40170c:	je     0x401760
  40170e:	mov    rdx,QWORD PTR [rbp+0x28]
  401712:	mov    rax,QWORD PTR [rbp-0x8]
  401716:	mov    r9d,0x0
  40171c:	mov    r8d,0x4
  401722:	mov    rcx,rax
  401725:	mov    rax,QWORD PTR [rip+0x9c5c]        # 0x40b388
  40172c:	call   rax
  40172e:	cmp    eax,0x1
  401731:	je     0x401778
  401733:	mov    rax,QWORD PTR [rip+0x9e16]        # 0x40b550
  40173a:	call   rax
  40173c:	add    rax,0x60
  401740:	mov    rdx,QWORD PTR [rbp+0x28]
  401744:	mov    r8,rdx
  401747:	lea    rdx,[rip+0x4b4c]        # 0x40629a
  40174e:	mov    rcx,rax
  401751:	call   0x404180
  401756:	mov    ecx,0x1
  40175b:	call   0x404188
  401760:	mov    rax,QWORD PTR [rbp-0x8]
  401764:	mov    rcx,rax
  401767:	mov    rax,QWORD PTR [rip+0x9c12]        # 0x40b380
  40176e:	call   rax
  401770:	mov    rcx,rax
  401773:	call   0x404148
  401778:	mov    rax,QWORD PTR [rbp-0x8]
  40177c:	mov    r9d,0x0
  401782:	mov    r8d,0x0
  401788:	lea    rdx,[rip+0xfffffffffffffe17]        # 0x4015a6
  40178f:	mov    rcx,rax
  401792:	mov    rax,QWORD PTR [rip+0x9bf7]        # 0x40b390
  401799:	call   rax
  40179b:	test   eax,eax
  40179d:	jne    0x4017ab
  40179f:	lea    rcx,[rip+0x4b10]        # 0x4062b6
  4017a6:	call   0x402840
  4017ab:	mov    rax,QWORD PTR [rbp-0x8]
  4017af:	add    rsp,0x50
  4017b3:	pop    rbx
  4017b4:	pop    rsi
  4017b5:	pop    rbp
  4017b6:	ret    
  4017b7:	push   rbp
  4017b8:	mov    rbp,rsp
  4017bb:	sub    rsp,0x40
  4017bf:	mov    DWORD PTR [rbp+0x10],ecx
  4017c2:	mov    QWORD PTR [rbp+0x18],rdx
  4017c6:	mov    DWORD PTR [rbp-0x4],0x0
  4017cd:	mov    QWORD PTR [rbp-0x10],0x0
  4017d5:	mov    DWORD PTR [rbp-0x8],0x2
  4017dc:	jmp    0x4018a5
  4017e1:	mov    eax,DWORD PTR [rbp-0x8]
  4017e4:	cdqe   
  4017e6:	lea    rdx,[rax*8+0x0]
  4017ee:	mov    rax,QWORD PTR [rbp+0x18]
  4017f2:	add    rax,rdx
  4017f5:	mov    rax,QWORD PTR [rax]
  4017f8:	mov    QWORD PTR [rbp-0x18],rax
  4017fc:	mov    rax,QWORD PTR [rbp-0x18]
  401800:	lea    rdx,[rip+0x4ac5]        # 0x4062cc
  401807:	mov    rcx,rax
  40180a:	call   0x404120
  40180f:	test   eax,eax
  401811:	jne    0x40181f
  401813:	mov    DWORD PTR [rbp-0x4],0x1
  40181a:	jmp    0x4018a1
  40181f:	mov    rax,QWORD PTR [rbp-0x18]
  401823:	lea    rdx,[rip+0x4aab]        # 0x4062d5
  40182a:	mov    rcx,rax
  40182d:	call   0x404120
  401832:	test   eax,eax
  401834:	jne    0x40183f
  401836:	mov    DWORD PTR [rbp-0x4],0x0
  40183d:	jmp    0x4018a1
  40183f:	mov    rax,QWORD PTR [rbp-0x18]
  401843:	lea    rdx,[rip+0x4a95]        # 0x4062df
  40184a:	mov    rcx,rax
  40184d:	call   0x404108
  401852:	cmp    rax,QWORD PTR [rbp-0x18]
  401856:	jne    0x401866
  401858:	mov    rax,QWORD PTR [rbp-0x18]
  40185c:	add    rax,0x7
  401860:	mov    QWORD PTR [rbp-0x10],rax
  401864:	jmp    0x4018a1
  401866:	mov    rax,QWORD PTR [rbp-0x18]
  40186a:	lea    rdx,[rip+0x4a76]        # 0x4062e7
  401871:	mov    rcx,rax
  401874:	call   0x404108
  401879:	cmp    rax,QWORD PTR [rbp-0x18]
  40187d:	jne    0x401897
  40187f:	mov    rax,QWORD PTR [rbp-0x18]
  401883:	add    rax,0xb
  401887:	mov    rcx,rax
  40188a:	call   0x404198
  40188f:	mov    DWORD PTR [rip+0x377b],eax        # 0x405010
  401895:	jmp    0x4018a1
  401897:	mov    ecx,0x2
  40189c:	call   0x401530
  4018a1:	add    DWORD PTR [rbp-0x8],0x1
  4018a5:	mov    eax,DWORD PTR [rbp-0x8]
  4018a8:	cmp    eax,DWORD PTR [rbp+0x10]
  4018ab:	jl     0x4017e1
  4018b1:	mov    rdx,QWORD PTR [rbp-0x10]
  4018b5:	mov    eax,DWORD PTR [rbp-0x4]
  4018b8:	mov    ecx,eax
  4018ba:	call   0x40166a
  4018bf:	mov    QWORD PTR [rbp-0x20],rax
  4018c3:	nop
  4018c4:	mov    rax,QWORD PTR [rbp-0x20]
  4018c8:	mov    edx,0xffffffff
  4018cd:	mov    rcx,rax
  4018d0:	mov    rax,QWORD PTR [rip+0x9ad1]        # 0x40b3a8
  4018d7:	call   rax
  4018d9:	test   eax,eax
  4018db:	jne    0x4018c4
  4018dd:	mov    rax,QWORD PTR [rbp-0x20]
  4018e1:	mov    rcx,rax
  4018e4:	mov    rax,QWORD PTR [rip+0x9ad5]        # 0x40b3c0
  4018eb:	call   rax
  4018ed:	mov    eax,0x0
  4018f2:	add    rsp,0x40
  4018f6:	pop    rbp
  4018f7:	ret    
  4018f8:	push   rbp
  4018f9:	mov    rbp,rsp
  4018fc:	sub    rsp,0x40
  401900:	mov    DWORD PTR [rbp+0x10],ecx
  401903:	mov    QWORD PTR [rbp+0x18],rdx
  401907:	mov    DWORD PTR [rbp-0x4],0x0
  40190e:	mov    QWORD PTR [rbp-0x10],0x0
  401916:	mov    DWORD PTR [rbp-0x8],0x2
  40191d:	jmp    0x4019d5
  401922:	mov    eax,DWORD PTR [rbp-0x8]
  401925:	cdqe   
  401927:	lea    rdx,[rax*8+0x0]
  40192f:	mov    rax,QWORD PTR [rbp+0x18]
  401933:	add    rax,rdx
  401936:	mov    rax,QWORD PTR [rax]
  401939:	mov    QWORD PTR [rbp-0x18],rax
  40193d:	mov    rax,QWORD PTR [rbp-0x18]
  401941:	lea    rdx,[rip+0x4984]        # 0x4062cc
  401948:	mov    rcx,rax
  40194b:	call   0x404120
  401950:	test   eax,eax
  401952:	jne    0x40195d
  401954:	mov    DWORD PTR [rbp-0x4],0x1
  40195b:	jmp    0x4019d1
  40195d:	mov    rax,QWORD PTR [rbp-0x18]
  401961:	lea    rdx,[rip+0x496d]        # 0x4062d5
  401968:	mov    rcx,rax
  40196b:	call   0x404120
  401970:	test   eax,eax
  401972:	jne    0x40197d
  401974:	mov    DWORD PTR [rbp-0x4],0x0
  40197b:	jmp    0x4019d1
  40197d:	mov    rax,QWORD PTR [rbp-0x18]
  401981:	lea    rdx,[rip+0x4957]        # 0x4062df
  401988:	mov    rcx,rax
  40198b:	call   0x404108
  401990:	cmp    rax,QWORD PTR [rbp-0x18]
  401994:	jne    0x4019a4
  401996:	mov    rax,QWORD PTR [rbp-0x18]
  40199a:	add    rax,0x7
  40199e:	mov    QWORD PTR [rbp-0x10],rax
  4019a2:	jmp    0x4019d1
  4019a4:	mov    rax,QWORD PTR [rbp-0x18]
  4019a8:	lea    rdx,[rip+0x4944]        # 0x4062f3
  4019af:	mov    rcx,rax
  4019b2:	call   0x404120
  4019b7:	test   eax,eax
  4019b9:	jne    0x4019c7
  4019bb:	mov    DWORD PTR [rip+0x866f],0x1        # 0x40a034
  4019c5:	jmp    0x4019d1
  4019c7:	mov    ecx,0x2
  4019cc:	call   0x40156b
  4019d1:	add    DWORD PTR [rbp-0x8],0x1
  4019d5:	mov    eax,DWORD PTR [rbp-0x8]
  4019d8:	cmp    eax,DWORD PTR [rbp+0x10]
  4019db:	jl     0x401922
  4019e1:	mov    rdx,QWORD PTR [rbp-0x10]
  4019e5:	mov    eax,DWORD PTR [rbp-0x4]
  4019e8:	mov    ecx,eax
  4019ea:	call   0x40166a
  4019ef:	mov    QWORD PTR [rbp-0x20],rax
  4019f3:	mov    eax,DWORD PTR [rip+0x863b]        # 0x40a034
  4019f9:	test   eax,eax
  4019fb:	je     0x401a0d
  4019fd:	mov    ecx,0xe10
  401a02:	mov    rax,QWORD PTR [rip+0x995f]        # 0x40b368
  401a09:	call   rax
  401a0b:	jmp    0x4019fd
  401a0d:	mov    DWORD PTR [rip+0x8619],0x1        # 0x40a030
  401a17:	nop
  401a18:	mov    rax,QWORD PTR [rbp-0x20]
  401a1c:	mov    edx,0xffffffff
  401a21:	mov    rcx,rax
  401a24:	mov    rax,QWORD PTR [rip+0x997d]        # 0x40b3a8
  401a2b:	call   rax
  401a2d:	test   eax,eax
  401a2f:	jne    0x401a18
  401a31:	mov    rax,QWORD PTR [rbp-0x20]
  401a35:	mov    rcx,rax
  401a38:	mov    rax,QWORD PTR [rip+0x9981]        # 0x40b3c0
  401a3f:	call   rax
  401a41:	mov    eax,0x0
  401a46:	add    rsp,0x40
  401a4a:	pop    rbp
  401a4b:	ret    
  401a4c:	nop
  401a4d:	nop
  401a4e:	nop
  401a4f:	nop
  401a50:	push   rbp
  401a51:	mov    rbp,rsp
  401a54:	sub    rsp,0x20
  401a58:	mov    DWORD PTR [rbp+0x10],ecx
  401a5b:	mov    rax,QWORD PTR [rip+0x9aee]        # 0x40b550
  401a62:	call   rax
  401a64:	add    rax,0x60
  401a68:	mov    r9,rax
  401a6b:	mov    r8d,0x4ca
  401a71:	mov    edx,0x1
  401a76:	lea    rcx,[rip+0x4883]        # 0x406300
  401a7d:	call   0x404168
  401a82:	mov    ecx,DWORD PTR [rbp+0x10]
  401a85:	call   0x404188
  401a8a:	nop
  401a8b:	push   rbp
  401a8c:	push   rdi
  401a8d:	push   rsi
  401a8e:	push   rbx
  401a8f:	sub    rsp,0x68
  401a93:	lea    rbp,[rsp+0x80]
  401a9b:	mov    QWORD PTR [rbp+0x10],rcx
  401a9f:	mov    QWORD PTR [rbp+0x18],rdx
  401aa3:	mov    rax,QWORD PTR [rbp+0x18]
  401aa7:	mov    QWORD PTR [rbp-0x28],rax
  401aab:	lea    rax,[rbp-0x50]
  401aaf:	mov    rcx,rax
  401ab2:	mov    rax,QWORD PTR [rip+0x9917]        # 0x40b3d0
  401ab9:	call   rax
  401abb:	mov    rcx,QWORD PTR [rbp+0x10]
  401abf:	mov    rax,QWORD PTR [rip+0x997a]        # 0x40b440
  401ac6:	call   rax
  401ac8:	mov    QWORD PTR [rbp-0x30],rax
  401acc:	mov    eax,DWORD PTR [rip+0x856e]        # 0x40a040
  401ad2:	test   eax,eax
  401ad4:	jne    0x401b34
  401ad6:	mov    rax,QWORD PTR [rbp-0x30]
  401ada:	mov    rcx,rax
  401add:	mov    rax,QWORD PTR [rip+0x9924]        # 0x40b408
  401ae4:	call   rax
  401ae6:	cmp    eax,0x3
  401ae9:	jne    0x401b34
  401aeb:	mov    rdx,QWORD PTR [rbp-0x30]
  401aef:	lea    rax,[rbp-0x50]
  401af3:	mov    rcx,rax
  401af6:	mov    rax,QWORD PTR [rip+0x995b]        # 0x40b458
  401afd:	call   rax
  401aff:	mov    rbx,QWORD PTR [rbp-0x48]
  401b03:	mov    rdi,QWORD PTR [rbp-0x50]
  401b07:	mov    rax,QWORD PTR [rbp-0x28]
  401b0b:	mov    esi,DWORD PTR [rax]
  401b0d:	mov    rax,QWORD PTR [rip+0x9a3c]        # 0x40b550
  401b14:	call   rax
  401b16:	add    rax,0x60
  401b1a:	mov    QWORD PTR [rsp+0x20],rbx
  401b1f:	mov    r9,rdi
  401b22:	mov    r8d,esi
  401b25:	lea    rdx,[rip+0x4ca4]        # 0x4067d0
  401b2c:	mov    rcx,rax
  401b2f:	call   0x404180
  401b34:	mov    rax,QWORD PTR [rbp-0x28]
  401b38:	mov    eax,DWORD PTR [rax]
  401b3a:	lea    edx,[rax+0x1]
  401b3d:	mov    rax,QWORD PTR [rbp-0x28]
  401b41:	mov    DWORD PTR [rax],edx
  401b43:	add    rsp,0x68
  401b47:	pop    rbx
  401b48:	pop    rsi
  401b49:	pop    rdi
  401b4a:	pop    rbp
  401b4b:	ret    
  401b4c:	push   rbp
  401b4d:	mov    rbp,rsp
  401b50:	sub    rsp,0x50
  401b54:	mov    QWORD PTR [rbp+0x10],rcx
  401b58:	mov    QWORD PTR [rbp+0x18],rdx
  401b5c:	mov    QWORD PTR [rbp-0x20],0x1000
  401b64:	mov    rax,QWORD PTR [rbp-0x20]
  401b68:	mov    QWORD PTR [rbp-0x8],rax
  401b6c:	mov    QWORD PTR [rbp-0x10],0x0
  401b74:	mov    rax,QWORD PTR [rbp-0x8]
  401b78:	mov    rcx,rax
  401b7b:	mov    rax,QWORD PTR [rip+0x985e]        # 0x40b3e0
  401b82:	call   rax
  401b84:	mov    QWORD PTR [rbp-0x18],rax
  401b88:	cmp    QWORD PTR [rbp-0x18],0x0
  401b8d:	jne    0x401b9b
  401b8f:	lea    rcx,[rip+0x4c5f]        # 0x4067f5
  401b96:	call   0x402840
  401b9b:	mov    rax,QWORD PTR [rbp-0x8]
  401b9f:	sub    rax,QWORD PTR [rbp-0x10]
  401ba3:	cmp    rax,QWORD PTR [rbp-0x20]
  401ba7:	jae    0x401beb
  401ba9:	mov    rdx,QWORD PTR [rbp-0x8]
  401bad:	mov    rax,QWORD PTR [rbp-0x20]
  401bb1:	add    rdx,rax
  401bb4:	mov    rax,QWORD PTR [rbp-0x18]
  401bb8:	mov    rcx,rax
  401bbb:	mov    rax,QWORD PTR [rip+0x988e]        # 0x40b450
  401bc2:	call   rax
  401bc4:	mov    QWORD PTR [rbp-0x28],rax
  401bc8:	cmp    QWORD PTR [rbp-0x28],0x0
  401bcd:	jne    0x401bdb
  401bcf:	lea    rcx,[rip+0x4c1f]        # 0x4067f5
  401bd6:	call   0x402840
  401bdb:	mov    rax,QWORD PTR [rbp-0x28]
  401bdf:	mov    QWORD PTR [rbp-0x18],rax
  401be3:	mov    rax,QWORD PTR [rbp-0x20]
  401be7:	add    QWORD PTR [rbp-0x8],rax
  401beb:	mov    rax,QWORD PTR [rip+0x995e]        # 0x40b550
  401bf2:	call   rax
  401bf4:	mov    r8,rax
  401bf7:	mov    rax,QWORD PTR [rbp-0x8]
  401bfb:	sub    rax,QWORD PTR [rbp-0x10]
  401bff:	mov    rdx,rax
  401c02:	mov    rcx,QWORD PTR [rbp-0x18]
  401c06:	mov    rax,QWORD PTR [rbp-0x10]
  401c0a:	add    rax,rcx
  401c0d:	mov    r9,r8
  401c10:	mov    r8,rdx
  401c13:	mov    edx,0x1
  401c18:	mov    rcx,rax
  401c1b:	call   0x404178
  401c20:	mov    QWORD PTR [rbp-0x30],rax
  401c24:	cmp    QWORD PTR [rbp-0x30],0x0
  401c29:	jne    0x401c2d
  401c2b:	jmp    0x401c3a
  401c2d:	mov    rax,QWORD PTR [rbp-0x30]
  401c31:	add    QWORD PTR [rbp-0x10],rax
  401c35:	jmp    0x401b9b
  401c3a:	mov    rax,QWORD PTR [rbp+0x18]
  401c3e:	mov    rdx,QWORD PTR [rbp-0x10]
  401c42:	mov    QWORD PTR [rax],rdx
  401c45:	mov    rax,QWORD PTR [rbp+0x10]
  401c49:	mov    rdx,QWORD PTR [rbp-0x18]
  401c4d:	mov    QWORD PTR [rax],rdx
  401c50:	add    rsp,0x50
  401c54:	pop    rbp
  401c55:	ret    
  401c56:	push   rbp
  401c57:	push   rsi
  401c58:	push   rbx
  401c59:	sub    rsp,0x110
  401c60:	lea    rbp,[rsp+0x80]
  401c68:	mov    DWORD PTR [rbp+0xb0],ecx
  401c6e:	mov    QWORD PTR [rbp+0xb8],rdx
  401c75:	mov    QWORD PTR [rbp+0x88],0x0
  401c80:	mov    QWORD PTR [rbp-0x20],0x0
  401c88:	mov    QWORD PTR [rbp-0x18],0x0
  401c90:	mov    QWORD PTR [rbp-0x10],0x0
  401c98:	mov    QWORD PTR [rbp-0x8],0x0
  401ca0:	movzx  eax,BYTE PTR [rbp-0x10]
  401ca4:	or     eax,0x1
  401ca7:	mov    BYTE PTR [rbp-0x10],al
  401caa:	mov    DWORD PTR [rbp+0x84],0x0
  401cb4:	lea    rax,[rip+0x4b55]        # 0x406810
  401cbb:	mov    QWORD PTR [rbp+0x78],rax
  401cbf:	mov    DWORD PTR [rbp+0x70],0x1
  401cc6:	mov    DWORD PTR [rbp+0x6c],0x0
  401ccd:	mov    DWORD PTR [rbp+0x68],0x0
  401cd4:	mov    DWORD PTR [rbp-0x24],0x0
  401cdb:	mov    DWORD PTR [rbp+0x64],0x0
  401ce2:	mov    DWORD PTR [rbp+0x60],0x1
  401ce9:	mov    QWORD PTR [rbp-0x30],0x0
  401cf1:	mov    QWORD PTR [rbp-0x38],0x0
  401cf9:	mov    DWORD PTR [rbp+0x5c],0x73
  401d00:	mov    QWORD PTR [rbp+0x50],0x0
  401d08:	mov    DWORD PTR [rbp+0x4c],0x0
  401d0f:	mov    DWORD PTR [rbp+0x48],0x0
  401d16:	mov    DWORD PTR [rbp+0x44],0x0
  401d1d:	mov    ecx,0x0
  401d22:	call   0x4040f0
  401d27:	mov    DWORD PTR [rbp+0x40],eax
  401d2a:	mov    DWORD PTR [rbp+0x3c],0x0
  401d31:	mov    QWORD PTR [rbp+0x30],0x0
  401d39:	mov    DWORD PTR [rbp+0x74],0x2
  401d40:	jmp    0x4022ff
  401d45:	mov    eax,DWORD PTR [rbp+0x74]
  401d48:	cdqe   
  401d4a:	lea    rdx,[rax*8+0x0]
  401d52:	mov    rax,QWORD PTR [rbp+0xb8]
  401d59:	add    rax,rdx
  401d5c:	mov    rax,QWORD PTR [rax]
  401d5f:	mov    QWORD PTR [rbp+0x8],rax
  401d63:	mov    rax,QWORD PTR [rbp+0x8]
  401d67:	lea    rdx,[rip+0x4ab7]        # 0x406825
  401d6e:	mov    rcx,rax
  401d71:	call   0x404120
  401d76:	test   eax,eax
  401d78:	jne    0x401d89
  401d7a:	mov    DWORD PTR [rbp+0x84],0x1
  401d84:	jmp    0x4022fb
  401d89:	mov    rax,QWORD PTR [rbp+0x8]
  401d8d:	lea    rdx,[rip+0x4a9a]        # 0x40682e
  401d94:	mov    rcx,rax
  401d97:	call   0x404120
  401d9c:	test   eax,eax
  401d9e:	jne    0x401daf
  401da0:	mov    DWORD PTR [rbp+0x84],0x0
  401daa:	jmp    0x4022fb
  401daf:	mov    rax,QWORD PTR [rbp+0x8]
  401db3:	lea    rdx,[rip+0x4a7e]        # 0x406838
  401dba:	mov    rcx,rax
  401dbd:	call   0x404108
  401dc2:	cmp    rax,QWORD PTR [rbp+0x8]
  401dc6:	jne    0x401df4
  401dc8:	mov    rax,QWORD PTR [rbp+0x8]
  401dcc:	add    rax,0x8
  401dd0:	mov    rcx,rax
  401dd3:	call   0x404198
  401dd8:	mov    DWORD PTR [rbp+0x70],eax
  401ddb:	cmp    DWORD PTR [rbp+0x70],0x0
  401ddf:	jg     0x4022fb
  401de5:	mov    ecx,0x2
  401dea:	call   0x401a50
  401def:	jmp    0x4022fb
  401df4:	mov    rax,QWORD PTR [rbp+0x8]
  401df8:	lea    rdx,[rip+0x4a42]        # 0x406841
  401dff:	mov    rcx,rax
  401e02:	call   0x404120
  401e07:	test   eax,eax
  401e09:	jne    0x401e1a
  401e0b:	mov    DWORD PTR [rip+0x822b],0x1        # 0x40a040
  401e15:	jmp    0x4022fb
  401e1a:	mov    rax,QWORD PTR [rbp+0x8]
  401e1e:	lea    rdx,[rip+0x4a2c]        # 0x406851
  401e25:	mov    rcx,rax
  401e28:	call   0x404108
  401e2d:	cmp    rax,QWORD PTR [rbp+0x8]
  401e31:	jne    0x401e44
  401e33:	mov    rax,QWORD PTR [rbp+0x8]
  401e37:	add    rax,0x7
  401e3b:	mov    QWORD PTR [rbp+0x78],rax
  401e3f:	jmp    0x4022fb
  401e44:	mov    rax,QWORD PTR [rbp+0x8]
  401e48:	lea    rdx,[rip+0x4a0a]        # 0x406859
  401e4f:	mov    rcx,rax
  401e52:	call   0x404108
  401e57:	cmp    rax,QWORD PTR [rbp+0x8]
  401e5b:	jne    0x401e6e
  401e5d:	mov    rax,QWORD PTR [rbp+0x8]
  401e61:	add    rax,0xa
  401e65:	mov    QWORD PTR [rbp-0x30],rax
  401e69:	jmp    0x4022fb
  401e6e:	mov    rax,QWORD PTR [rbp+0x8]
  401e72:	lea    rdx,[rip+0x49eb]        # 0x406864
  401e79:	mov    rcx,rax
  401e7c:	call   0x404120
  401e81:	test   eax,eax
  401e83:	jne    0x401ea2
  401e85:	lea    rdx,[rbp-0x40]
  401e89:	lea    rax,[rbp-0x38]
  401e8d:	mov    rcx,rax
  401e90:	call   0x401b4c
  401e95:	mov    rax,QWORD PTR [rbp-0x38]
  401e99:	mov    QWORD PTR [rbp-0x30],rax
  401e9d:	jmp    0x4022fb
  401ea2:	mov    rax,QWORD PTR [rbp+0x8]
  401ea6:	lea    rdx,[rip+0x49bf]        # 0x40686c
  401ead:	mov    rcx,rax
  401eb0:	call   0x404120
  401eb5:	test   eax,eax
  401eb7:	jne    0x401f7d
  401ebd:	lea    rdx,[rbp-0x40]
  401ec1:	lea    rax,[rbp-0x38]
  401ec5:	mov    rcx,rax
  401ec8:	call   0x401b4c
  401ecd:	mov    rax,QWORD PTR [rbp-0x38]
  401ed1:	mov    QWORD PTR [rbp-0x30],rax
  401ed5:	mov    rax,QWORD PTR [rbp-0x40]
  401ed9:	mov    ecx,eax
  401edb:	mov    rax,QWORD PTR [rbp-0x30]
  401edf:	lea    rdx,[rbp-0x20]
  401ee3:	mov    r8,rdx
  401ee6:	mov    edx,ecx
  401ee8:	mov    rcx,rax
  401eeb:	mov    rax,QWORD PTR [rip+0x950e]        # 0x40b400
  401ef2:	call   rax
  401ef4:	mov    QWORD PTR [rbp+0x50],rax
  401ef8:	cmp    QWORD PTR [rbp+0x50],0x0
  401efd:	jne    0x401f33
  401eff:	mov    rsi,QWORD PTR [rbp-0x18]
  401f03:	mov    rbx,QWORD PTR [rbp-0x20]
  401f07:	mov    rax,QWORD PTR [rip+0x9642]        # 0x40b550
  401f0e:	call   rax
  401f10:	add    rax,0x60
  401f14:	mov    r9,rsi
  401f17:	mov    r8,rbx
  401f1a:	lea    rdx,[rip+0x495f]        # 0x406880
  401f21:	mov    rcx,rax
  401f24:	call   0x404180
  401f29:	mov    ecx,0x1
  401f2e:	call   0x404188
  401f33:	mov    rax,QWORD PTR [rbp+0x50]
  401f37:	mov    rcx,rax
  401f3a:	mov    rax,QWORD PTR [rip+0x94c7]        # 0x40b408
  401f41:	call   rax
  401f43:	cmp    eax,0x1
  401f46:	je     0x4022fb
  401f4c:	mov    rax,QWORD PTR [rip+0x95fd]        # 0x40b550
  401f53:	call   rax
  401f55:	add    rax,0x60
  401f59:	mov    r9,rax
  401f5c:	mov    r8d,0x27
  401f62:	mov    edx,0x1
  401f67:	lea    rcx,[rip+0x4942]        # 0x4068b0
  401f6e:	call   0x404168
  401f73:	mov    ecx,0x1
  401f78:	call   0x404188
  401f7d:	mov    rax,QWORD PTR [rbp+0x8]
  401f81:	lea    rdx,[rip+0x4950]        # 0x4068d8
  401f88:	mov    rcx,rax
  401f8b:	call   0x404120
  401f90:	test   eax,eax
  401f92:	jne    0x40212c
  401f98:	mov    DWORD PTR [rbp+0x2c],0x0
  401f9f:	mov    DWORD PTR [rbp-0x48],0x0
  401fa6:	lea    rdx,[rbp-0x40]
  401faa:	lea    rax,[rbp-0x38]
  401fae:	mov    rcx,rax
  401fb1:	call   0x401b4c
  401fb6:	mov    rax,QWORD PTR [rbp-0x38]
  401fba:	mov    QWORD PTR [rbp+0x20],rax
  401fbe:	jmp    0x401ff4
  401fc0:	lea    rcx,[rbp-0x48]
  401fc4:	lea    rdx,[rbp-0x44]
  401fc8:	mov    rax,QWORD PTR [rbp+0x20]
  401fcc:	mov    r9,rcx
  401fcf:	mov    r8,rdx
  401fd2:	lea    rdx,[rip+0x490d]        # 0x4068e6
  401fd9:	mov    rcx,rax
  401fdc:	call   0x404128
  401fe1:	test   eax,eax
  401fe3:	jne    0x401fe7
  401fe5:	jmp    0x402005
  401fe7:	add    DWORD PTR [rbp+0x3c],0x1
  401feb:	mov    eax,DWORD PTR [rbp-0x48]
  401fee:	cdqe   
  401ff0:	add    QWORD PTR [rbp+0x20],rax
  401ff4:	mov    rdx,QWORD PTR [rbp-0x38]
  401ff8:	mov    rax,QWORD PTR [rbp-0x40]
  401ffc:	add    rax,rdx
  401fff:	cmp    rax,QWORD PTR [rbp+0x20]
  402003:	ja     0x401fc0
  402005:	mov    eax,DWORD PTR [rbp+0x3c]
  402008:	cdqe   
  40200a:	shl    rax,0x2
  40200e:	mov    rcx,rax
  402011:	mov    rax,QWORD PTR [rip+0x93d0]        # 0x40b3e8
  402018:	call   rax
  40201a:	mov    QWORD PTR [rbp+0x30],rax
  40201e:	cmp    QWORD PTR [rbp+0x30],0x0
  402023:	jne    0x402031
  402025:	lea    rcx,[rip+0x48c4]        # 0x4068f0
  40202c:	call   0x402840
  402031:	mov    rax,QWORD PTR [rbp-0x38]
  402035:	mov    QWORD PTR [rbp+0x20],rax
  402039:	mov    DWORD PTR [rbp+0x28],0x0
  402040:	jmp    0x402097
  402042:	lea    rcx,[rbp-0x48]
  402046:	lea    rdx,[rbp-0x44]
  40204a:	mov    rax,QWORD PTR [rbp+0x20]
  40204e:	mov    r9,rcx
  402051:	mov    r8,rdx
  402054:	lea    rdx,[rip+0x488b]        # 0x4068e6
  40205b:	mov    rcx,rax
  40205e:	call   0x404128
  402063:	mov    eax,DWORD PTR [rbp+0x28]
  402066:	cdqe   
  402068:	lea    rdx,[rax*4+0x0]
  402070:	mov    rax,QWORD PTR [rbp+0x30]
  402074:	add    rdx,rax
  402077:	mov    eax,DWORD PTR [rbp-0x44]
  40207a:	mov    DWORD PTR [rdx],eax
  40207c:	mov    eax,DWORD PTR [rbp-0x44]
  40207f:	cmp    eax,DWORD PTR [rbp+0x2c]
  402082:	jbe    0x40208a
  402084:	mov    eax,DWORD PTR [rbp-0x44]
  402087:	mov    DWORD PTR [rbp+0x2c],eax
  40208a:	mov    eax,DWORD PTR [rbp-0x48]
  40208d:	cdqe   
  40208f:	add    QWORD PTR [rbp+0x20],rax
  402093:	add    DWORD PTR [rbp+0x28],0x1
  402097:	mov    rdx,QWORD PTR [rbp-0x38]
  40209b:	mov    rax,QWORD PTR [rbp-0x40]
  40209f:	add    rax,rdx
  4020a2:	cmp    rax,QWORD PTR [rbp+0x20]
  4020a6:	jbe    0x4020b0
  4020a8:	mov    eax,DWORD PTR [rbp+0x28]
  4020ab:	cmp    eax,DWORD PTR [rbp+0x3c]
  4020ae:	jl     0x402042
  4020b0:	mov    rax,QWORD PTR [rbp-0x38]
  4020b4:	mov    rcx,rax
  4020b7:	mov    rax,QWORD PTR [rip+0x931a]        # 0x40b3d8
  4020be:	call   rax
  4020c0:	mov    eax,DWORD PTR [rbp+0x2c]
  4020c3:	add    eax,0x1
  4020c6:	mov    eax,eax
  4020c8:	mov    QWORD PTR [rbp-0x40],rax
  4020cc:	mov    rax,QWORD PTR [rbp-0x40]
  4020d0:	mov    rcx,rax
  4020d3:	mov    rax,QWORD PTR [rip+0x9306]        # 0x40b3e0
  4020da:	call   rax
  4020dc:	mov    QWORD PTR [rbp-0x38],rax
  4020e0:	mov    rax,QWORD PTR [rbp-0x38]
  4020e4:	mov    QWORD PTR [rbp-0x30],rax
  4020e8:	mov    rax,QWORD PTR [rbp-0x38]
  4020ec:	test   rax,rax
  4020ef:	jne    0x4020fd
  4020f1:	lea    rcx,[rip+0x4820]        # 0x406918
  4020f8:	call   0x402840
  4020fd:	mov    rdx,QWORD PTR [rbp-0x40]
  402101:	mov    rax,QWORD PTR [rbp-0x38]
  402105:	mov    r8,rdx
  402108:	mov    edx,0x58
  40210d:	mov    rcx,rax
  402110:	call   0x404150
  402115:	mov    rax,QWORD PTR [rbp-0x38]
  402119:	mov    rdx,QWORD PTR [rbp-0x40]
  40211d:	sub    rdx,0x1
  402121:	add    rax,rdx
  402124:	mov    BYTE PTR [rax],0x0
  402127:	jmp    0x4022fb
  40212c:	mov    rax,QWORD PTR [rbp+0x8]
  402130:	lea    rdx,[rip+0x4802]        # 0x406939
  402137:	mov    rcx,rax
  40213a:	call   0x404120
  40213f:	test   eax,eax
  402141:	jne    0x40214f
  402143:	mov    DWORD PTR [rbp+0x5c],0x0
  40214a:	jmp    0x4022fb
  40214f:	mov    rax,QWORD PTR [rbp+0x8]
  402153:	lea    rdx,[rip+0x47e7]        # 0x406941
  40215a:	mov    rcx,rax
  40215d:	call   0x404120
  402162:	test   eax,eax
  402164:	jne    0x402172
  402166:	mov    DWORD PTR [rbp+0x5c],0x73
  40216d:	jmp    0x4022fb
  402172:	mov    rax,QWORD PTR [rbp+0x8]
  402176:	lea    rdx,[rip+0x47cd]        # 0x40694a
  40217d:	mov    rcx,rax
  402180:	call   0x404120
  402185:	test   eax,eax
  402187:	jne    0x402195
  402189:	mov    DWORD PTR [rbp+0x5c],0x61
  402190:	jmp    0x4022fb
  402195:	mov    rax,QWORD PTR [rbp+0x8]
  402199:	lea    rdx,[rip+0x47b2]        # 0x406952
  4021a0:	mov    rcx,rax
  4021a3:	call   0x404120
  4021a8:	test   eax,eax
  4021aa:	jne    0x4021df
  4021ac:	cmp    DWORD PTR [rbp+0x60],0x1
  4021b0:	jle    0x4021bc
  4021b2:	mov    ecx,0x2
  4021b7:	call   0x401a50
  4021bc:	cmp    DWORD PTR [rbp+0x44],0x0
  4021c0:	je     0x4021cc
  4021c2:	mov    ecx,0x2
  4021c7:	call   0x401a50
  4021cc:	mov    DWORD PTR [rbp+0x4c],0x1
  4021d3:	mov    DWORD PTR [rbp+0x60],0xffffffff
  4021da:	jmp    0x4022fb
  4021df:	mov    rax,QWORD PTR [rbp+0x8]
  4021e3:	lea    rdx,[rip+0x4770]        # 0x40695a
  4021ea:	mov    rcx,rax
  4021ed:	call   0x404120
  4021f2:	test   eax,eax
  4021f4:	jne    0x402219
  4021f6:	cmp    DWORD PTR [rbp+0x60],0x1
  4021fa:	jle    0x402206
  4021fc:	mov    ecx,0x2
  402201:	call   0x401a50
  402206:	mov    DWORD PTR [rbp+0x60],0xffffffff
  40220d:	mov    DWORD PTR [rbp+0x48],0x1
  402214:	jmp    0x4022fb
  402219:	mov    rax,QWORD PTR [rbp+0x8]
  40221d:	lea    rdx,[rip+0x4741]        # 0x406965
  402224:	mov    rcx,rax
  402227:	call   0x404108
  40222c:	cmp    rax,QWORD PTR [rbp+0x8]
  402230:	jne    0x402274
  402232:	cmp    DWORD PTR [rbp+0x4c],0x0
  402236:	jne    0x40223e
  402238:	cmp    DWORD PTR [rbp+0x48],0x0
  40223c:	je     0x402248
  40223e:	mov    ecx,0x2
  402243:	call   0x401a50
  402248:	mov    rax,QWORD PTR [rbp+0x8]
  40224c:	add    rax,0x8
  402250:	mov    rcx,rax
  402253:	call   0x404198
  402258:	mov    DWORD PTR [rbp+0x60],eax
  40225b:	cmp    DWORD PTR [rbp+0x60],0x0
  40225f:	jg     0x4022fb
  402265:	mov    ecx,0x2
  40226a:	call   0x401a50
  40226f:	jmp    0x4022fb
  402274:	mov    rax,QWORD PTR [rbp+0x8]
  402278:	lea    rdx,[rip+0x46ef]        # 0x40696e
  40227f:	mov    rcx,rax
  402282:	call   0x404108
  402287:	cmp    rax,QWORD PTR [rbp+0x8]
  40228b:	jne    0x4022ad
  40228d:	mov    rax,QWORD PTR [rbp+0x8]
  402291:	add    rax,0x7
  402295:	mov    r8d,0xa
  40229b:	mov    edx,0x0
  4022a0:	mov    rcx,rax
  4022a3:	call   0x404100
  4022a8:	mov    DWORD PTR [rbp+0x40],eax
  4022ab:	jmp    0x4022fb
  4022ad:	mov    rax,QWORD PTR [rbp+0x8]
  4022b1:	lea    rdx,[rip+0x46be]        # 0x406976
  4022b8:	mov    rcx,rax
  4022bb:	call   0x404108
  4022c0:	cmp    rax,QWORD PTR [rbp+0x8]
  4022c4:	jne    0x4022f1
  4022c6:	mov    rax,QWORD PTR [rbp+0x8]
  4022ca:	add    rax,0x14
  4022ce:	mov    rcx,rax
  4022d1:	call   0x404198
  4022d6:	mov    DWORD PTR [rbp+0x44],eax
  4022d9:	cmp    DWORD PTR [rbp+0x44],0x0
  4022dd:	je     0x4022fb
  4022df:	cmp    DWORD PTR [rbp+0x4c],0x0
  4022e3:	je     0x4022fb
  4022e5:	mov    ecx,0x2
  4022ea:	call   0x401a50
  4022ef:	jmp    0x4022fb
  4022f1:	mov    ecx,0x2
  4022f6:	call   0x401a50
  4022fb:	add    DWORD PTR [rbp+0x74],0x1
  4022ff:	mov    eax,DWORD PTR [rbp+0x74]
  402302:	cmp    eax,DWORD PTR [rbp+0xb0]
  402308:	jl     0x401d45
  40230e:	mov    eax,DWORD PTR [rbp+0x40]
  402311:	mov    ecx,eax
  402313:	call   0x404130
  402318:	mov    rax,QWORD PTR [rbp-0x30]
  40231c:	test   rax,rax
  40231f:	jne    0x40233c
  402321:	lea    rax,[rip+0x4663]        # 0x40698b
  402328:	mov    QWORD PTR [rbp-0x30],rax
  40232c:	mov    rax,QWORD PTR [rbp-0x30]
  402330:	mov    rcx,rax
  402333:	call   0x404118
  402338:	mov    QWORD PTR [rbp-0x40],rax
  40233c:	jmp    0x40277e
  402341:	cmp    QWORD PTR [rbp+0x88],0x0
  402349:	je     0x402376
  40234b:	cmp    DWORD PTR [rbp+0x44],0x0
  40234f:	je     0x402450
  402355:	mov    eax,DWORD PTR [rbp+0x68]
  402358:	cmp    eax,DWORD PTR [rbp+0x44]
  40235b:	jne    0x402450
  402361:	cmp    DWORD PTR [rbp+0x48],0x0
  402365:	jne    0x402376
  402367:	mov    eax,DWORD PTR [rbp-0x24]
  40236a:	sub    eax,DWORD PTR [rbp+0x64]
  40236d:	cmp    eax,DWORD PTR [rbp+0x44]
  402370:	jne    0x402450
  402376:	cmp    QWORD PTR [rbp+0x88],0x0
  40237e:	je     0x4023b9
  402380:	mov    rax,QWORD PTR [rbp+0x88]
  402387:	mov    rcx,rax
  40238a:	mov    rax,QWORD PTR [rip+0x900f]        # 0x40b3a0
  402391:	call   rax
  402393:	mov    rax,QWORD PTR [rbp+0x88]
  40239a:	mov    rcx,rax
  40239d:	mov    rax,QWORD PTR [rip+0x8ff4]        # 0x40b398
  4023a4:	call   rax
  4023a6:	mov    rax,QWORD PTR [rbp+0x88]
  4023ad:	mov    rcx,rax
  4023b0:	mov    rax,QWORD PTR [rip+0x9009]        # 0x40b3c0
  4023b7:	call   rax
  4023b9:	lea    rdx,[rbp-0x20]
  4023bd:	mov    eax,DWORD PTR [rbp+0x84]
  4023c3:	mov    ecx,eax
  4023c5:	mov    rax,QWORD PTR [rip+0x8fac]        # 0x40b378
  4023cc:	call   rax
  4023ce:	mov    QWORD PTR [rbp+0x88],rax
  4023d5:	cmp    QWORD PTR [rbp+0x88],0x0
  4023dd:	jne    0x402443
  4023df:	mov    rsi,QWORD PTR [rbp-0x18]
  4023e3:	mov    rbx,QWORD PTR [rbp-0x20]
  4023e7:	mov    rax,QWORD PTR [rip+0x9162]        # 0x40b550
  4023ee:	call   rax
  4023f0:	add    rax,0x60
  4023f4:	mov    r9,rsi
  4023f7:	mov    r8,rbx
  4023fa:	lea    rdx,[rip+0x459f]        # 0x4069a0
  402401:	mov    rcx,rax
  402404:	call   0x404180
  402409:	lea    rax,[rbp-0x20]
  40240d:	mov    rcx,rax
  402410:	mov    rax,QWORD PTR [rip+0x8fb1]        # 0x40b3c8
  402417:	call   rax
  402419:	mov    rax,QWORD PTR [rbp+0x30]
  40241d:	mov    rcx,rax
  402420:	mov    rax,QWORD PTR [rip+0x8fb1]        # 0x40b3d8
  402427:	call   rax
  402429:	mov    rax,QWORD PTR [rbp-0x38]
  40242d:	mov    rcx,rax
  402430:	mov    rax,QWORD PTR [rip+0x8fa1]        # 0x40b3d8
  402437:	call   rax
  402439:	mov    eax,0x1
  40243e:	jmp    0x402828
  402443:	mov    DWORD PTR [rbp+0x68],0x0
  40244a:	mov    eax,DWORD PTR [rbp-0x24]
  40244d:	mov    DWORD PTR [rbp+0x64],eax
  402450:	jmp    0x4026fd
  402455:	cmp    QWORD PTR [rbp+0x50],0x0
  40245a:	je     0x40249b
  40245c:	mov    rax,QWORD PTR [rbp+0x50]
  402460:	mov    rcx,rax
  402463:	mov    rax,QWORD PTR [rip+0x8f8e]        # 0x40b3f8
  40246a:	call   rax
  40246c:	mov    QWORD PTR [rbp+0x18],rax
  402470:	cmp    QWORD PTR [rbp+0x18],0x0
  402475:	jne    0x402483
  402477:	lea    rcx,[rip+0x4544]        # 0x4069c2
  40247e:	call   0x402840
  402483:	mov    edx,DWORD PTR [rbp+0x48]
  402486:	mov    rax,QWORD PTR [rbp+0x18]
  40248a:	mov    rcx,rax
  40248d:	mov    rax,QWORD PTR [rip+0x8f8c]        # 0x40b420
  402494:	call   rax
  402496:	jmp    0x4025f2
  40249b:	mov    DWORD PTR [rbp+0x10],0x0
  4024a2:	mov    rax,QWORD PTR [rbp+0x78]
  4024a6:	lea    r9,[rip+0x4525]        # 0x4069d2
  4024ad:	lea    r8,[rip+0x4523]        # 0x4069d7
  4024b4:	lea    rdx,[rip+0x4528]        # 0x4069e3
  4024bb:	mov    rcx,rax
  4024be:	mov    rax,QWORD PTR [rip+0x8f4b]        # 0x40b410
  4024c5:	call   rax
  4024c7:	mov    QWORD PTR [rbp+0x18],rax
  4024cb:	cmp    QWORD PTR [rbp+0x18],0x0
  4024d0:	jne    0x4024de
  4024d2:	lea    rcx,[rip+0x450c]        # 0x4069e5
  4024d9:	call   0x402840
  4024de:	mov    edx,DWORD PTR [rbp+0x48]
  4024e1:	mov    rax,QWORD PTR [rbp+0x18]
  4024e5:	mov    rcx,rax
  4024e8:	mov    rax,QWORD PTR [rip+0x8f31]        # 0x40b420
  4024ef:	call   rax
  4024f1:	mov    eax,DWORD PTR [rbp+0x5c]
  4024f4:	cmp    eax,0x61
  4024f7:	je     0x402574
  4024f9:	cmp    eax,0x73
  4024fc:	jne    0x4025d9
  402502:	cmp    QWORD PTR [rbp+0x30],0x0
  402507:	je     0x402537
  402509:	call   0x404140
  40250e:	cdq    
  40250f:	idiv   DWORD PTR [rbp+0x3c]
  402512:	mov    eax,edx
  402514:	cdqe   
  402516:	lea    rdx,[rax*4+0x0]
  40251e:	mov    rax,QWORD PTR [rbp+0x30]
  402522:	add    rax,rdx
  402525:	mov    eax,DWORD PTR [rax]
  402527:	mov    DWORD PTR [rbp+0x10],eax
  40252a:	mov    rdx,QWORD PTR [rbp-0x38]
  40252e:	mov    eax,DWORD PTR [rbp+0x10]
  402531:	add    rax,rdx
  402534:	mov    BYTE PTR [rax],0x0
  402537:	lea    rdx,[rbp-0x30]
  40253b:	mov    rax,QWORD PTR [rbp+0x18]
  40253f:	mov    r9d,0x0
  402545:	mov    r8,rdx
  402548:	mov    edx,0x73
  40254d:	mov    rcx,rax
  402550:	mov    rax,QWORD PTR [rip+0x8e99]        # 0x40b3f0
  402557:	call   rax
  402559:	mov    DWORD PTR [rbp+0x14],eax
  40255c:	cmp    QWORD PTR [rbp+0x30],0x0
  402561:	je     0x402572
  402563:	mov    rdx,QWORD PTR [rbp-0x38]
  402567:	mov    eax,DWORD PTR [rbp+0x10]
  40256a:	add    rax,rdx
  40256d:	mov    BYTE PTR [rax],0x58
  402570:	jmp    0x4025e0
  402572:	jmp    0x4025e0
  402574:	mov    rax,QWORD PTR [rbp-0x40]
  402578:	mov    DWORD PTR [rbp+0x10],eax
  40257b:	cmp    QWORD PTR [rbp+0x30],0x0
  402580:	je     0x4025a3
  402582:	call   0x404140
  402587:	cdq    
  402588:	idiv   DWORD PTR [rbp+0x3c]
  40258b:	mov    eax,edx
  40258d:	cdqe   
  40258f:	lea    rdx,[rax*4+0x0]
  402597:	mov    rax,QWORD PTR [rbp+0x30]
  40259b:	add    rax,rdx
  40259e:	mov    eax,DWORD PTR [rax]
  4025a0:	mov    DWORD PTR [rbp+0x10],eax
  4025a3:	lea    rcx,[rbp-0x30]
  4025a7:	mov    rax,QWORD PTR [rbp+0x18]
  4025ab:	mov    DWORD PTR [rsp+0x28],0x0
  4025b3:	mov    edx,DWORD PTR [rbp+0x10]
  4025b6:	mov    DWORD PTR [rsp+0x20],edx
  4025ba:	mov    r9,rcx
  4025bd:	mov    r8d,0x79
  4025c3:	mov    edx,0x61
  4025c8:	mov    rcx,rax
  4025cb:	mov    rax,QWORD PTR [rip+0x8e1e]        # 0x40b3f0
  4025d2:	call   rax
  4025d4:	mov    DWORD PTR [rbp+0x14],eax
  4025d7:	jmp    0x4025e0
  4025d9:	mov    DWORD PTR [rbp+0x14],0x1
  4025e0:	cmp    DWORD PTR [rbp+0x14],0x0
  4025e4:	jne    0x4025f2
  4025e6:	lea    rcx,[rip+0x440b]        # 0x4069f8
  4025ed:	call   0x402840
  4025f2:	cmp    DWORD PTR [rbp+0x48],0x0
  4025f6:	je     0x402632
  4025f8:	mov    rdx,QWORD PTR [rbp+0x18]
  4025fc:	mov    rax,QWORD PTR [rbp+0x88]
  402603:	mov    r8d,0x0
  402609:	mov    rcx,rax
  40260c:	mov    rax,QWORD PTR [rip+0x8d9d]        # 0x40b3b0
  402613:	call   rax
  402615:	test   eax,eax
  402617:	jne    0x402625
  402619:	lea    rcx,[rip+0x43e9]        # 0x406a09
  402620:	call   0x402840
  402625:	add    DWORD PTR [rbp+0x6c],0x1
  402629:	add    DWORD PTR [rbp+0x68],0x1
  40262d:	jmp    0x4026ed
  402632:	lea    rcx,[rbp-0x50]
  402636:	mov    rdx,QWORD PTR [rbp+0x18]
  40263a:	mov    rax,QWORD PTR [rbp+0x88]
  402641:	mov    r9d,0x7fffffff
  402647:	mov    r8,rcx
  40264a:	mov    rcx,rax
  40264d:	mov    rax,QWORD PTR [rip+0x8d64]        # 0x40b3b8
  402654:	call   rax
  402656:	test   eax,eax
  402658:	jne    0x402666
  40265a:	lea    rcx,[rip+0x43a8]        # 0x406a09
  402661:	call   0x402840
  402666:	add    DWORD PTR [rbp+0x6c],0x1
  40266a:	add    DWORD PTR [rbp+0x68],0x1
  40266e:	mov    rax,QWORD PTR [rbp-0x50]
  402672:	test   rax,rax
  402675:	jne    0x402683
  402677:	lea    rcx,[rip+0x438b]        # 0x406a09
  40267e:	call   0x402840
  402683:	mov    rax,QWORD PTR [rbp-0x50]
  402687:	mov    rcx,rax
  40268a:	mov    rax,QWORD PTR [rip+0x8d9f]        # 0x40b430
  402691:	call   rax
  402693:	test   eax,eax
  402695:	je     0x4026a9
  402697:	mov    rax,QWORD PTR [rbp-0x50]
  40269b:	lea    rdx,[rbp-0x24]
  40269f:	mov    rcx,rax
  4026a2:	call   0x401a8b
  4026a7:	jmp    0x4026dd
  4026a9:	mov    rax,QWORD PTR [rbp-0x50]
  4026ad:	lea    rdx,[rbp-0x24]
  4026b1:	mov    r9d,0x0
  4026b7:	mov    r8,rdx
  4026ba:	lea    rdx,[rip+0xfffffffffffff3ca]        # 0x401a8b
  4026c1:	mov    rcx,rax
  4026c4:	mov    rax,QWORD PTR [rip+0x8d6d]        # 0x40b438
  4026cb:	call   rax
  4026cd:	test   eax,eax
  4026cf:	jne    0x4026dd
  4026d1:	lea    rcx,[rip+0x4341]        # 0x406a19
  4026d8:	call   0x402840
  4026dd:	mov    rax,QWORD PTR [rbp-0x50]
  4026e1:	mov    rcx,rax
  4026e4:	mov    rax,QWORD PTR [rip+0x8d5d]        # 0x40b448
  4026eb:	call   rax
  4026ed:	mov    rax,QWORD PTR [rbp+0x18]
  4026f1:	mov    rcx,rax
  4026f4:	mov    rax,QWORD PTR [rip+0x8d2d]        # 0x40b428
  4026fb:	call   rax
  4026fd:	mov    eax,DWORD PTR [rbp+0x6c]
  402700:	cmp    eax,DWORD PTR [rbp+0x70]
  402703:	jge    0x402731
  402705:	cmp    DWORD PTR [rbp+0x44],0x0
  402709:	je     0x402713
  40270b:	mov    eax,DWORD PTR [rbp+0x68]
  40270e:	cmp    eax,DWORD PTR [rbp+0x44]
  402711:	jae    0x402731
  402713:	cmp    DWORD PTR [rbp+0x60],0xffffffff
  402717:	je     0x402455
  40271d:	mov    edx,DWORD PTR [rbp-0x24]
  402720:	mov    eax,DWORD PTR [rbp+0x60]
  402723:	add    eax,edx
  402725:	sub    eax,DWORD PTR [rbp+0x64]
  402728:	cmp    eax,DWORD PTR [rbp+0x68]
  40272b:	ja     0x402455
  402731:	mov    rax,QWORD PTR [rbp+0x88]
  402738:	mov    edx,0xffffffff
  40273d:	mov    rcx,rax
  402740:	mov    rax,QWORD PTR [rip+0x8c61]        # 0x40b3a8
  402747:	call   rax
  402749:	test   eax,eax
  40274b:	jne    0x40277e
  40274d:	mov    rax,QWORD PTR [rip+0x8dfc]        # 0x40b550
  402754:	call   rax
  402756:	add    rax,0x60
  40275a:	mov    r9,rax
  40275d:	mov    r8d,0x16
  402763:	mov    edx,0x1
  402768:	lea    rcx,[rip+0x42c8]        # 0x406a37
  40276f:	call   0x404168
  402774:	mov    ecx,0x1
  402779:	call   0x404188
  40277e:	cmp    DWORD PTR [rbp+0x48],0x0
  402782:	je     0x40278f
  402784:	mov    eax,DWORD PTR [rbp+0x6c]
  402787:	cmp    eax,DWORD PTR [rbp+0x70]
  40278a:	setl   al
  40278d:	jmp    0x402798
  40278f:	mov    eax,DWORD PTR [rbp-0x24]
  402792:	cmp    eax,DWORD PTR [rbp+0x70]
  402795:	setl   al
  402798:	test   al,al
  40279a:	jne    0x402341
  4027a0:	cmp    QWORD PTR [rbp+0x88],0x0
  4027a8:	je     0x4027e3
  4027aa:	mov    rax,QWORD PTR [rbp+0x88]
  4027b1:	mov    rcx,rax
  4027b4:	mov    rax,QWORD PTR [rip+0x8be5]        # 0x40b3a0
  4027bb:	call   rax
  4027bd:	mov    rax,QWORD PTR [rbp+0x88]
  4027c4:	mov    rcx,rax
  4027c7:	mov    rax,QWORD PTR [rip+0x8bca]        # 0x40b398
  4027ce:	call   rax
  4027d0:	mov    rax,QWORD PTR [rbp+0x88]
  4027d7:	mov    rcx,rax
  4027da:	mov    rax,QWORD PTR [rip+0x8bdf]        # 0x40b3c0
  4027e1:	call   rax
  4027e3:	mov    rax,QWORD PTR [rbp-0x38]
  4027e7:	mov    rcx,rax
  4027ea:	mov    rax,QWORD PTR [rip+0x8be7]        # 0x40b3d8
  4027f1:	call   rax
  4027f3:	mov    rax,QWORD PTR [rbp+0x30]
  4027f7:	mov    rcx,rax
  4027fa:	mov    rax,QWORD PTR [rip+0x8bd7]        # 0x40b3d8
  402801:	call   rax
  402803:	cmp    QWORD PTR [rbp+0x50],0x0
  402808:	je     0x40281a
  40280a:	mov    rax,QWORD PTR [rbp+0x50]
  40280e:	mov    rcx,rax
  402811:	mov    rax,QWORD PTR [rip+0x8c10]        # 0x40b428
  402818:	call   rax
  40281a:	mov    rax,QWORD PTR [rip+0x8c3f]        # 0x40b460
  402821:	call   rax
  402823:	mov    eax,0x0
  402828:	add    rsp,0x110
  40282f:	pop    rbx
  402830:	pop    rsi
  402831:	pop    rbp
  402832:	ret    
  402833:	nop
  402834:	nop
  402835:	nop
  402836:	nop
  402837:	nop
  402838:	nop
  402839:	nop
  40283a:	nop
  40283b:	nop
  40283c:	nop
  40283d:	nop
  40283e:	nop
  40283f:	nop
  402840:	push   rbp
  402841:	mov    rbp,rsp
  402844:	sub    rsp,0x20
  402848:	mov    QWORD PTR [rbp+0x10],rcx
  40284c:	mov    rax,QWORD PTR [rip+0x8cfd]        # 0x40b550
  402853:	call   rax
  402855:	add    rax,0x60
  402859:	mov    r8,QWORD PTR [rbp+0x10]
  40285d:	lea    rdx,[rip+0x41ec]        # 0x406a50
  402864:	mov    rcx,rax
  402867:	call   0x404180
  40286c:	mov    ecx,0x1
  402871:	call   0x404188
  402876:	nop
  402877:	push   rbp
  402878:	mov    rbp,rsp
  40287b:	sub    rsp,0x40
  40287f:	mov    DWORD PTR [rbp+0x10],ecx
  402882:	mov    QWORD PTR [rbp+0x18],rdx
  402886:	mov    QWORD PTR [rbp+0x20],r8
  40288a:	mov    rax,QWORD PTR [rbp+0x18]
  40288e:	mov    QWORD PTR [rbp-0x8],rax
  402892:	mov    QWORD PTR [rbp-0x10],0x0
  40289a:	jmp    0x4028f9
  40289c:	mov    rax,QWORD PTR [rbp+0x20]
  4028a0:	mov    edx,eax
  4028a2:	mov    rax,QWORD PTR [rbp-0x10]
  4028a6:	sub    edx,eax
  4028a8:	mov    rax,QWORD PTR [rbp-0x8]
  4028ac:	mov    r8d,edx
  4028af:	mov    rdx,rax
  4028b2:	mov    ecx,DWORD PTR [rbp+0x10]
  4028b5:	mov    rax,QWORD PTR [rip+0x8cfc]        # 0x40b5b8
  4028bc:	call   rax
  4028be:	mov    DWORD PTR [rbp-0x14],eax
  4028c1:	cmp    DWORD PTR [rbp-0x14],0x0
  4028c5:	jns    0x4028e0
  4028c7:	mov    rax,QWORD PTR [rip+0x8cba]        # 0x40b588
  4028ce:	call   rax
  4028d0:	mov    eax,DWORD PTR [rax]
  4028d2:	cmp    eax,0x4
  4028d5:	jne    0x4028d9
  4028d7:	jmp    0x4028f9
  4028d9:	mov    eax,0x0
  4028de:	jmp    0x402908
  4028e0:	mov    eax,DWORD PTR [rbp-0x14]
  4028e3:	cdqe   
  4028e5:	mov    QWORD PTR [rbp-0x20],rax
  4028e9:	mov    rax,QWORD PTR [rbp-0x20]
  4028ed:	add    QWORD PTR [rbp-0x8],rax
  4028f1:	mov    rax,QWORD PTR [rbp-0x20]
  4028f5:	add    QWORD PTR [rbp-0x10],rax
  4028f9:	mov    rax,QWORD PTR [rbp+0x20]
  4028fd:	cmp    rax,QWORD PTR [rbp-0x10]
  402901:	ja     0x40289c
  402903:	mov    eax,0x1
  402908:	add    rsp,0x40
  40290c:	pop    rbp
  40290d:	ret    
  40290e:	nop
  40290f:	nop
  402910:	push   rbp
  402911:	push   rbx
  402912:	sub    rsp,0x38
  402916:	lea    rbp,[rsp+0x80]
  40291e:	mov    DWORD PTR [rbp-0x30],ecx
  402921:	mov    rax,QWORD PTR [rip+0x8c28]        # 0x40b550
  402928:	call   rax
  40292a:	add    rax,0x60
  40292e:	mov    r9,rax
  402931:	mov    r8d,0x44
  402937:	mov    edx,0x1
  40293c:	lea    rcx,[rip+0x4135]        # 0x406a78
  402943:	call   0x404168
  402948:	mov    DWORD PTR [rbp-0x54],0x0
  40294f:	jmp    0x40298b
  402951:	mov    eax,DWORD PTR [rbp-0x54]
  402954:	cdqe   
  402956:	shl    rax,0x4
  40295a:	mov    rdx,rax
  40295d:	lea    rax,[rip+0x26dc]        # 0x405040
  402964:	mov    rbx,QWORD PTR [rdx+rax*1]
  402968:	mov    rax,QWORD PTR [rip+0x8be1]        # 0x40b550
  40296f:	call   rax
  402971:	add    rax,0x60
  402975:	mov    r8,rbx
  402978:	lea    rdx,[rip+0x413e]        # 0x406abd
  40297f:	mov    rcx,rax
  402982:	call   0x404180
  402987:	add    DWORD PTR [rbp-0x54],0x1
  40298b:	mov    eax,DWORD PTR [rbp-0x54]
  40298e:	cdqe   
  402990:	shl    rax,0x4
  402994:	mov    rdx,rax
  402997:	lea    rax,[rip+0x26a2]        # 0x405040
  40299e:	mov    rax,QWORD PTR [rdx+rax*1]
  4029a2:	test   rax,rax
  4029a5:	jne    0x402951
  4029a7:	mov    rax,QWORD PTR [rip+0x8ba2]        # 0x40b550
  4029ae:	call   rax
  4029b0:	add    rax,0x60
  4029b4:	mov    r9,rax
  4029b7:	mov    r8d,0x38
  4029bd:	mov    edx,0x1
  4029c2:	lea    rcx,[rip+0x40ff]        # 0x406ac8
  4029c9:	call   0x404168
  4029ce:	mov    ecx,DWORD PTR [rbp-0x30]
  4029d1:	call   0x404188
  4029d6:	nop
  4029d7:	push   rbp
  4029d8:	mov    rbp,rsp
  4029db:	sub    rsp,0x30
  4029df:	mov    DWORD PTR [rbp+0x10],ecx
  4029e2:	mov    QWORD PTR [rbp+0x18],rdx
  4029e6:	call   0x402d00
  4029eb:	cmp    DWORD PTR [rbp+0x10],0x1
  4029ef:	jg     0x4029fb
  4029f1:	mov    ecx,0x2
  4029f6:	call   0x402910
  4029fb:	mov    DWORD PTR [rbp-0x4],0x0
  402a02:	jmp    0x402a59
  402a04:	mov    eax,DWORD PTR [rbp-0x4]
  402a07:	cdqe   
  402a09:	shl    rax,0x4
  402a0d:	mov    rdx,rax
  402a10:	lea    rax,[rip+0x2629]        # 0x405040
  402a17:	mov    rdx,QWORD PTR [rdx+rax*1]
  402a1b:	mov    rax,QWORD PTR [rbp+0x18]
  402a1f:	add    rax,0x8
  402a23:	mov    rax,QWORD PTR [rax]
  402a26:	mov    rcx,rax
  402a29:	call   0x404120
  402a2e:	test   eax,eax
  402a30:	jne    0x402a55
  402a32:	mov    eax,DWORD PTR [rbp-0x4]
  402a35:	cdqe   
  402a37:	shl    rax,0x4
  402a3b:	mov    rdx,rax
  402a3e:	lea    rax,[rip+0x25fb]        # 0x405040
  402a45:	mov    rax,QWORD PTR [rdx+rax*1+0x8]
  402a4a:	mov    rdx,QWORD PTR [rbp+0x18]
  402a4e:	mov    ecx,DWORD PTR [rbp+0x10]
  402a51:	call   rax
  402a53:	jmp    0x402a7f
  402a55:	add    DWORD PTR [rbp-0x4],0x1
  402a59:	mov    eax,DWORD PTR [rbp-0x4]
  402a5c:	cdqe   
  402a5e:	shl    rax,0x4
  402a62:	mov    rdx,rax
  402a65:	lea    rax,[rip+0x25d4]        # 0x405040
  402a6c:	mov    rax,QWORD PTR [rdx+rax*1]
  402a70:	test   rax,rax
  402a73:	jne    0x402a04
  402a75:	mov    ecx,0x2
  402a7a:	call   0x402910
  402a7f:	add    rsp,0x30
  402a83:	pop    rbp
  402a84:	ret    
  402a85:	nop
  402a86:	nop
  402a87:	nop
  402a88:	nop
  402a89:	nop
  402a8a:	nop
  402a8b:	nop
  402a8c:	nop
  402a8d:	nop
  402a8e:	nop
  402a8f:	nop
  402a90:	jmp    QWORD PTR [rip+0x89ca]        # 0x40b460
  402a96:	nop
  402a97:	nop
  402a98:	jmp    QWORD PTR [rip+0x89ba]        # 0x40b458
  402a9e:	nop
  402a9f:	nop
  402aa0:	jmp    QWORD PTR [rip+0x89aa]        # 0x40b450
  402aa6:	nop
  402aa7:	nop
  402aa8:	jmp    QWORD PTR [rip+0x899a]        # 0x40b448
  402aae:	nop
  402aaf:	nop
  402ab0:	jmp    QWORD PTR [rip+0x898a]        # 0x40b440
  402ab6:	nop
  402ab7:	nop
  402ab8:	jmp    QWORD PTR [rip+0x897a]        # 0x40b438
  402abe:	nop
  402abf:	nop
  402ac0:	jmp    QWORD PTR [rip+0x896a]        # 0x40b430
  402ac6:	nop
  402ac7:	nop
  402ac8:	jmp    QWORD PTR [rip+0x895a]        # 0x40b428
  402ace:	nop
  402acf:	nop
  402ad0:	jmp    QWORD PTR [rip+0x894a]        # 0x40b420
  402ad6:	nop
  402ad7:	nop
  402ad8:	jmp    QWORD PTR [rip+0x893a]        # 0x40b418
  402ade:	nop
  402adf:	nop
  402ae0:	jmp    QWORD PTR [rip+0x892a]        # 0x40b410
  402ae6:	nop
  402ae7:	nop
  402ae8:	jmp    QWORD PTR [rip+0x891a]        # 0x40b408
  402aee:	nop
  402aef:	nop
  402af0:	jmp    QWORD PTR [rip+0x890a]        # 0x40b400
  402af6:	nop
  402af7:	nop
  402af8:	jmp    QWORD PTR [rip+0x88fa]        # 0x40b3f8
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x88ea]        # 0x40b3f0
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x88da]        # 0x40b3e8
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x88ca]        # 0x40b3e0
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x88ba]        # 0x40b3d8
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x88aa]        # 0x40b3d0
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x889a]        # 0x40b3c8
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x888a]        # 0x40b3c0
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x887a]        # 0x40b3b8
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x886a]        # 0x40b3b0
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x885a]        # 0x40b3a8
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x884a]        # 0x40b3a0
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x883a]        # 0x40b398
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x882a]        # 0x40b390
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x881a]        # 0x40b388
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x880a]        # 0x40b380
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x87fa]        # 0x40b378
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x87ea]        # 0x40b370
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x87da]        # 0x40b368
  402b8e:	nop
  402b8f:	nop
  402b90:	push   rbx
  402b91:	sub    rsp,0x30
  402b95:	mov    rbx,rcx
  402b98:	mov    rcx,QWORD PTR [rip+0x7e71]        # 0x40aa10
  402b9f:	call   0x403140
  402ba4:	cmp    rax,0xffffffffffffffff
  402ba8:	mov    QWORD PTR [rsp+0x20],rax
  402bad:	je     0x402c25
  402baf:	mov    ecx,0x8
  402bb4:	call   0x4041c0
  402bb9:	mov    rcx,QWORD PTR [rip+0x7e50]        # 0x40aa10
  402bc0:	call   0x403140
  402bc5:	mov    rcx,QWORD PTR [rip+0x7e4c]        # 0x40aa18
  402bcc:	mov    QWORD PTR [rsp+0x20],rax
  402bd1:	call   0x403140
  402bd6:	lea    rdx,[rsp+0x20]
  402bdb:	lea    r8,[rsp+0x28]
  402be0:	mov    rcx,rbx
  402be3:	mov    QWORD PTR [rsp+0x28],rax
  402be8:	call   0x404210
  402bed:	mov    rcx,QWORD PTR [rsp+0x20]
  402bf2:	mov    rbx,rax
  402bf5:	call   0x403150
  402bfa:	mov    rcx,QWORD PTR [rsp+0x28]
  402bff:	mov    QWORD PTR [rip+0x7e0a],rax        # 0x40aa10
  402c06:	call   0x403150
  402c0b:	mov    ecx,0x8
  402c10:	mov    QWORD PTR [rip+0x7e01],rax        # 0x40aa18
  402c17:	call   0x4041b0
  402c1c:	mov    rax,rbx
  402c1f:	add    rsp,0x30
  402c23:	pop    rbx
  402c24:	ret    
  402c25:	mov    rax,QWORD PTR [rip+0x4204]        # 0x406e30
  402c2c:	mov    rcx,rbx
  402c2f:	call   QWORD PTR [rax]
  402c31:	add    rsp,0x30
  402c35:	pop    rbx
  402c36:	ret    
  402c37:	nop    WORD PTR [rax+rax*1+0x0]
  402c40:	sub    rsp,0x28
  402c44:	call   0x402b90
  402c49:	test   rax,rax
  402c4c:	sete   al
  402c4f:	movzx  eax,al
  402c52:	neg    eax
  402c54:	add    rsp,0x28
  402c58:	ret    
  402c59:	nop
  402c5a:	nop
  402c5b:	nop
  402c5c:	nop
  402c5d:	nop
  402c5e:	nop
  402c5f:	nop
  402c60:	sub    rsp,0x28
  402c64:	mov    rax,QWORD PTR [rip+0x2415]        # 0x405080
  402c6b:	mov    rax,QWORD PTR [rax]
  402c6e:	test   rax,rax
  402c71:	je     0x402c90
  402c73:	call   rax
  402c75:	mov    rax,QWORD PTR [rip+0x2404]        # 0x405080
  402c7c:	lea    rdx,[rax+0x8]
  402c80:	mov    rax,QWORD PTR [rax+0x8]
  402c84:	mov    QWORD PTR [rip+0x23f5],rdx        # 0x405080
  402c8b:	test   rax,rax
  402c8e:	jne    0x402c73
  402c90:	add    rsp,0x28
  402c94:	ret    
  402c95:	nop
  402c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ca0:	push   rsi
  402ca1:	push   rbx
  402ca2:	sub    rsp,0x28
  402ca6:	mov    rsi,QWORD PTR [rip+0x4103]        # 0x406db0
  402cad:	mov    rax,QWORD PTR [rsi]
  402cb0:	cmp    eax,0xffffffff
  402cb3:	mov    ebx,eax
  402cb5:	je     0x402ce0
  402cb7:	test   ebx,ebx
  402cb9:	je     0x402cca
  402cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	mov    eax,ebx
  402cc2:	call   QWORD PTR [rsi+rax*8]
  402cc5:	sub    ebx,0x1
  402cc8:	jne    0x402cc0
  402cca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402c60
  402cd1:	add    rsp,0x28
  402cd5:	pop    rbx
  402cd6:	pop    rsi
  402cd7:	jmp    0x402c40
  402cdc:	nop    DWORD PTR [rax+0x0]
  402ce0:	xor    ebx,ebx
  402ce2:	jmp    0x402ce6
  402ce4:	mov    ebx,eax
  402ce6:	lea    edx,[rbx+0x1]
  402ce9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  402cee:	mov    rax,rdx
  402cf1:	jne    0x402ce4
  402cf3:	jmp    0x402cb7
  402cf5:	nop
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	mov    eax,DWORD PTR [rip+0x734a]        # 0x40a050
  402d06:	test   eax,eax
  402d08:	je     0x402d10
  402d0a:	repz ret 
  402d0c:	nop    DWORD PTR [rax+0x0]
  402d10:	mov    DWORD PTR [rip+0x7336],0x1        # 0x40a050
  402d1a:	jmp    0x402ca0
  402d1c:	nop
  402d1d:	nop
  402d1e:	nop
  402d1f:	nop
  402d20:	mov    rax,QWORD PTR [rip+0x8831]        # 0x40b558
  402d27:	rex.W jmp rax
  402d2a:	nop
  402d2b:	nop
  402d2c:	nop
  402d2d:	nop
  402d2e:	nop
  402d2f:	nop
  402d30:	xor    eax,eax
  402d32:	ret    
  402d33:	nop
  402d34:	nop
  402d35:	nop
  402d36:	nop
  402d37:	nop
  402d38:	nop
  402d39:	nop
  402d3a:	nop
  402d3b:	nop
  402d3c:	nop
  402d3d:	nop
  402d3e:	nop
  402d3f:	nop
  402d40:	push   r12
  402d42:	push   rbp
  402d43:	push   rdi
  402d44:	push   rsi
  402d45:	push   rbx
  402d46:	sub    rsp,0x40
  402d4a:	mov    rbx,QWORD PTR [rip+0x238f]        # 0x4050e0
  402d51:	movabs rax,0x2b992ddfa232
  402d5b:	mov    QWORD PTR [rsp+0x20],0x0
  402d64:	cmp    rbx,rax
  402d67:	je     0x402d80
  402d69:	not    rbx
  402d6c:	mov    QWORD PTR [rip+0x237d],rbx        # 0x4050f0
  402d73:	add    rsp,0x40
  402d77:	pop    rbx
  402d78:	pop    rsi
  402d79:	pop    rdi
  402d7a:	pop    rbp
  402d7b:	pop    r12
  402d7d:	ret    
  402d7e:	xchg   ax,ax
  402d80:	lea    rcx,[rsp+0x20]
  402d85:	call   QWORD PTR [rip+0x871d]        # 0x40b4a8
  402d8b:	mov    r12,QWORD PTR [rsp+0x20]
  402d90:	call   QWORD PTR [rip+0x86f2]        # 0x40b488
  402d96:	mov    ebp,eax
  402d98:	call   QWORD PTR [rip+0x86f2]        # 0x40b490
  402d9e:	mov    edi,eax
  402da0:	call   QWORD PTR [rip+0x870a]        # 0x40b4b0
  402da6:	lea    rcx,[rsp+0x30]
  402dab:	mov    esi,eax
  402dad:	call   QWORD PTR [rip+0x8715]        # 0x40b4c8
  402db3:	xor    r12,QWORD PTR [rsp+0x30]
  402db8:	mov    edx,edi
  402dba:	movabs rax,0xffffffffffff
  402dc4:	xor    rbp,r12
  402dc7:	mov    rdi,rbp
  402dca:	xor    rdi,rdx
  402dcd:	mov    edx,esi
  402dcf:	xor    rdi,rdx
  402dd2:	mov    rsi,rdi
  402dd5:	and    rsi,rax
  402dd8:	cmp    rsi,rbx
  402ddb:	je     0x402e00
  402ddd:	mov    rax,rsi
  402de0:	not    rax
  402de3:	mov    QWORD PTR [rip+0x22f6],rsi        # 0x4050e0
  402dea:	mov    QWORD PTR [rip+0x22ff],rax        # 0x4050f0
  402df1:	add    rsp,0x40
  402df5:	pop    rbx
  402df6:	pop    rsi
  402df7:	pop    rdi
  402df8:	pop    rbp
  402df9:	pop    r12
  402dfb:	ret    
  402dfc:	nop    DWORD PTR [rax+0x0]
  402e00:	movabs rax,0xffffd466d2205dcc
  402e0a:	movabs rsi,0x2b992ddfa233
  402e14:	jmp    0x402de3
  402e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e20:	push   rbp
  402e21:	push   rsi
  402e22:	push   rbx
  402e23:	mov    rbp,rsp
  402e26:	sub    rsp,0x70
  402e2a:	mov    rsi,rcx
  402e2d:	lea    rcx,[rip+0x724c]        # 0x40a080
  402e34:	call   QWORD PTR [rip+0x869e]        # 0x40b4d8
  402e3a:	mov    rbx,QWORD PTR [rip+0x7337]        # 0x40a178
  402e41:	xor    r8d,r8d
  402e44:	lea    rdx,[rbp-0x28]
  402e48:	mov    rcx,rbx
  402e4b:	call   QWORD PTR [rip+0x868f]        # 0x40b4e0
  402e51:	test   rax,rax
  402e54:	mov    r9,rax
  402e57:	je     0x402f00
  402e5d:	lea    rax,[rbp-0x20]
  402e61:	mov    QWORD PTR [rsp+0x38],0x0
  402e6a:	mov    r8,rbx
  402e6d:	mov    rdx,QWORD PTR [rbp-0x28]
  402e71:	xor    ecx,ecx
  402e73:	mov    QWORD PTR [rsp+0x30],rax
  402e78:	lea    rax,[rbp-0x18]
  402e7c:	mov    QWORD PTR [rsp+0x28],rax
  402e81:	lea    rax,[rip+0x71f8]        # 0x40a080
  402e88:	mov    QWORD PTR [rsp+0x20],rax
  402e8d:	call   QWORD PTR [rip+0x8655]        # 0x40b4e8
  402e93:	mov    rax,QWORD PTR [rip+0x72de]        # 0x40a178
  402e9a:	xor    ecx,ecx
  402e9c:	mov    QWORD PTR [rip+0x725d],rsi        # 0x40a100
  402ea3:	mov    DWORD PTR [rip+0x76d3],0xc0000409        # 0x40a580
  402ead:	mov    DWORD PTR [rip+0x76cd],0x1        # 0x40a584
  402eb7:	mov    QWORD PTR [rip+0x76d2],rax        # 0x40a590
  402ebe:	mov    rax,QWORD PTR [rip+0x221b]        # 0x4050e0
  402ec5:	mov    QWORD PTR [rbp-0x10],rax
  402ec9:	mov    rax,QWORD PTR [rip+0x2220]        # 0x4050f0
  402ed0:	mov    QWORD PTR [rbp-0x8],rax
  402ed4:	call   QWORD PTR [rip+0x8616]        # 0x40b4f0
  402eda:	lea    rcx,[rip+0x3c2f]        # 0x406b10
  402ee1:	call   QWORD PTR [rip+0x8629]        # 0x40b510
  402ee7:	call   QWORD PTR [rip+0x8593]        # 0x40b480
  402eed:	mov    edx,0xc0000409
  402ef2:	mov    rcx,rax
  402ef5:	call   QWORD PTR [rip+0x8605]        # 0x40b500
  402efb:	call   0x4041a0
  402f00:	mov    rax,QWORD PTR [rbp+0x18]
  402f04:	mov    QWORD PTR [rip+0x726d],rax        # 0x40a178
  402f0b:	lea    rax,[rbp+0x8]
  402f0f:	mov    QWORD PTR [rip+0x7202],rax        # 0x40a118
  402f16:	jmp    0x402e93
  402f1b:	nop
  402f1c:	nop
  402f1d:	nop
  402f1e:	nop
  402f1f:	nop
  402f20:	sub    rsp,0x28
  402f24:	test   edx,edx
  402f26:	je     0x402f40
  402f28:	cmp    edx,0x3
  402f2b:	je     0x402f40
  402f2d:	mov    eax,0x1
  402f32:	add    rsp,0x28
  402f36:	ret    
  402f37:	nop    WORD PTR [rax+rax*1+0x0]
  402f40:	call   0x403c30
  402f45:	mov    eax,0x1
  402f4a:	add    rsp,0x28
  402f4e:	ret    
  402f4f:	nop
  402f50:	push   rsi
  402f51:	push   rbx
  402f52:	sub    rsp,0x28
  402f56:	mov    rax,QWORD PTR [rip+0x3e33]        # 0x406d90
  402f5d:	cmp    DWORD PTR [rax],0x2
  402f60:	je     0x402f68
  402f62:	mov    DWORD PTR [rax],0x2
  402f68:	cmp    edx,0x2
  402f6b:	je     0x402f80
  402f6d:	cmp    edx,0x1
  402f70:	je     0x402fb2
  402f72:	mov    eax,0x1
  402f77:	add    rsp,0x28
  402f7b:	pop    rbx
  402f7c:	pop    rsi
  402f7d:	ret    
  402f7e:	xchg   ax,ax
  402f80:	lea    rbx,[rip+0x90d9]        # 0x40c060
  402f87:	lea    rsi,[rip+0x90d2]        # 0x40c060
  402f8e:	cmp    rbx,rsi
  402f91:	je     0x402f72
  402f93:	mov    rax,QWORD PTR [rbx]
  402f96:	test   rax,rax
  402f99:	je     0x402f9d
  402f9b:	call   rax
  402f9d:	add    rbx,0x8
  402fa1:	cmp    rbx,rsi
  402fa4:	jne    0x402f93
  402fa6:	mov    eax,0x1
  402fab:	add    rsp,0x28
  402faf:	pop    rbx
  402fb0:	pop    rsi
  402fb1:	ret    
  402fb2:	call   0x403c30
  402fb7:	jmp    0x402f72
  402fb9:	nop    DWORD PTR [rax+0x0]
  402fc0:	xor    eax,eax
  402fc2:	ret    
  402fc3:	nop
  402fc4:	nop
  402fc5:	nop
  402fc6:	nop
  402fc7:	nop
  402fc8:	nop
  402fc9:	nop
  402fca:	nop
  402fcb:	nop
  402fcc:	nop
  402fcd:	nop
  402fce:	nop
  402fcf:	nop
  402fd0:	sub    rsp,0x58
  402fd4:	mov    rax,QWORD PTR [rip+0x7685]        # 0x40a660
  402fdb:	test   rax,rax
  402fde:	je     0x40300c
  402fe0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402fe9:	mov    DWORD PTR [rsp+0x20],ecx
  402fed:	lea    rcx,[rsp+0x20]
  402ff2:	mov    QWORD PTR [rsp+0x28],rdx
  402ff7:	movsd  QWORD PTR [rsp+0x30],xmm2
  402ffd:	movsd  QWORD PTR [rsp+0x38],xmm3
  403003:	movsd  QWORD PTR [rsp+0x40],xmm0
  403009:	call   rax
  40300b:	nop
  40300c:	add    rsp,0x58
  403010:	ret    
  403011:	nop    DWORD PTR [rax+rax*1+0x0]
  403016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403020:	mov    QWORD PTR [rip+0x7639],rcx        # 0x40a660
  403027:	jmp    0x4041e8
  40302c:	nop    DWORD PTR [rax+0x0]
  403030:	push   rsi
  403031:	push   rbx
  403032:	sub    rsp,0x78
  403036:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40303b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403040:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403046:	cmp    DWORD PTR [rcx],0x6
  403049:	ja     0x403120
  40304f:	mov    edx,DWORD PTR [rcx]
  403051:	lea    rax,[rip+0x3bfc]        # 0x406c54
  403058:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40305c:	add    rax,rdx
  40305f:	jmp    rax
  403061:	lea    rbx,[rip+0x3ac8]        # 0x406b30
  403068:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403076:	mov    rsi,QWORD PTR [rcx+0x8]
  40307a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40307f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403084:	call   0x404200
  403089:	movsd  QWORD PTR [rsp+0x30],xmm8
  403090:	lea    rcx,[rax+0x60]
  403094:	lea    rdx,[rip+0x3b8d]        # 0x406c28
  40309b:	movsd  QWORD PTR [rsp+0x28],xmm7
  4030a1:	mov    r9,rsi
  4030a4:	mov    r8,rbx
  4030a7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4030ad:	call   0x404180
  4030b2:	nop
  4030b3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4030b8:	xor    eax,eax
  4030ba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4030bf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4030c5:	add    rsp,0x78
  4030c9:	pop    rbx
  4030ca:	pop    rsi
  4030cb:	ret    
  4030cc:	nop    DWORD PTR [rax+0x0]
  4030d0:	lea    rbx,[rip+0x3a78]        # 0x406b4f
  4030d7:	jmp    0x403070
  4030d9:	nop    DWORD PTR [rax+0x0]
  4030e0:	lea    rbx,[rip+0x3a89]        # 0x406b70
  4030e7:	jmp    0x403070
  4030e9:	nop    DWORD PTR [rax+0x0]
  4030f0:	lea    rbx,[rip+0x3ae9]        # 0x406be0
  4030f7:	jmp    0x403070
  4030fc:	nop    DWORD PTR [rax+0x0]
  403100:	lea    rbx,[rip+0x3ab1]        # 0x406bb8
  403107:	jmp    0x403070
  40310c:	nop    DWORD PTR [rax+0x0]
  403110:	lea    rbx,[rip+0x3a79]        # 0x406b90
  403117:	jmp    0x403070
  40311c:	nop    DWORD PTR [rax+0x0]
  403120:	lea    rbx,[rip+0x3aef]        # 0x406c16
  403127:	jmp    0x403070
  40312c:	nop
  40312d:	nop
  40312e:	nop
  40312f:	nop
  403130:	fninit 
  403132:	ret    
  403133:	nop
  403134:	nop
  403135:	nop
  403136:	nop
  403137:	nop
  403138:	nop
  403139:	nop
  40313a:	nop
  40313b:	nop
  40313c:	nop
  40313d:	nop
  40313e:	nop
  40313f:	nop
  403140:	mov    rax,rcx
  403143:	ret    
  403144:	xchg   ax,ax
  403146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403150:	mov    rax,rcx
  403153:	ret    
  403154:	nop
  403155:	nop
  403156:	nop
  403157:	nop
  403158:	nop
  403159:	nop
  40315a:	nop
  40315b:	nop
  40315c:	nop
  40315d:	nop
  40315e:	nop
  40315f:	nop
  403160:	push   rsi
  403161:	push   rbx
  403162:	sub    rsp,0x38
  403166:	lea    rax,[rsp+0x58]
  40316b:	mov    rbx,rcx
  40316e:	mov    QWORD PTR [rsp+0x58],rdx
  403173:	mov    QWORD PTR [rsp+0x60],r8
  403178:	mov    QWORD PTR [rsp+0x68],r9
  40317d:	mov    QWORD PTR [rsp+0x28],rax
  403182:	call   0x404200
  403187:	lea    rcx,[rip+0x3ae2]        # 0x406c70
  40318e:	lea    r9,[rax+0x60]
  403192:	mov    r8d,0x1b
  403198:	mov    edx,0x1
  40319d:	call   0x404168
  4031a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4031a7:	call   0x404200
  4031ac:	lea    rcx,[rax+0x60]
  4031b0:	mov    rdx,rbx
  4031b3:	mov    r8,rsi
  4031b6:	call   0x4040f8
  4031bb:	call   0x4041a0
  4031c0:	nop
  4031c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031d0:	push   r13
  4031d2:	push   r12
  4031d4:	push   rbp
  4031d5:	push   rdi
  4031d6:	push   rsi
  4031d7:	push   rbx
  4031d8:	sub    rsp,0x58
  4031dc:	movsxd rbp,DWORD PTR [rip+0x74a1]        # 0x40a684
  4031e3:	mov    rbx,rcx
  4031e6:	mov    rsi,rdx
  4031e9:	mov    rdi,r8
  4031ec:	test   ebp,ebp
  4031ee:	jle    0x4032ea
  4031f4:	mov    rax,QWORD PTR [rip+0x748d]        # 0x40a688
  4031fb:	xor    r9d,r9d
  4031fe:	add    rax,0x8
  403202:	mov    r10,QWORD PTR [rax]
  403205:	cmp    rbx,r10
  403208:	jb     0x40321e
  40320a:	mov    rdx,QWORD PTR [rax+0x8]
  40320e:	mov    r11d,DWORD PTR [rdx+0x8]
  403212:	add    r10,r11
  403215:	cmp    rbx,r10
  403218:	jb     0x4032d0
  40321e:	add    r9d,0x1
  403222:	add    rax,0x18
  403226:	cmp    r9d,ebp
  403229:	jne    0x403202
  40322b:	mov    rcx,rbx
  40322e:	call   0x403e40
  403233:	test   rax,rax
  403236:	mov    r12,rax
  403239:	je     0x403322
  40323f:	lea    rbp,[rbp+rbp*2+0x0]
  403244:	shl    rbp,0x3
  403248:	mov    r13,rbp
  40324b:	add    r13,QWORD PTR [rip+0x7436]        # 0x40a688
  403252:	mov    QWORD PTR [r13+0x10],rax
  403256:	mov    DWORD PTR [r13+0x0],0x0
  40325e:	call   0x403f60
  403263:	mov    edx,DWORD PTR [r12+0xc]
  403268:	mov    r8d,0x30
  40326e:	add    rax,rdx
  403271:	lea    rdx,[rsp+0x20]
  403276:	mov    QWORD PTR [r13+0x8],rax
  40327a:	mov    rax,QWORD PTR [rip+0x7407]        # 0x40a688
  403281:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403286:	call   QWORD PTR [rip+0x8294]        # 0x40b520
  40328c:	test   rax,rax
  40328f:	je     0x403305
  403291:	mov    eax,DWORD PTR [rsp+0x44]
  403295:	lea    edx,[rax-0x4]
  403298:	and    edx,0xfffffffb
  40329b:	je     0x4032c9
  40329d:	sub    eax,0x40
  4032a0:	and    eax,0xffffffbf
  4032a3:	je     0x4032c9
  4032a5:	mov    r9,rbp
  4032a8:	add    r9,QWORD PTR [rip+0x73d9]        # 0x40a688
  4032af:	mov    r8d,0x40
  4032b5:	mov    rdx,QWORD PTR [rsp+0x38]
  4032ba:	mov    rcx,QWORD PTR [rsp+0x20]
  4032bf:	call   QWORD PTR [rip+0x8253]        # 0x40b518
  4032c5:	test   eax,eax
  4032c7:	je     0x4032f1
  4032c9:	add    DWORD PTR [rip+0x73b4],0x1        # 0x40a684
  4032d0:	mov    r8,rdi
  4032d3:	mov    rdx,rsi
  4032d6:	mov    rcx,rbx
  4032d9:	add    rsp,0x58
  4032dd:	pop    rbx
  4032de:	pop    rsi
  4032df:	pop    rdi
  4032e0:	pop    rbp
  4032e1:	pop    r12
  4032e3:	pop    r13
  4032e5:	jmp    0x404158
  4032ea:	xor    ebp,ebp
  4032ec:	jmp    0x40322b
  4032f1:	call   QWORD PTR [rip+0x81a1]        # 0x40b498
  4032f7:	lea    rcx,[rip+0x39ea]        # 0x406ce8
  4032fe:	mov    edx,eax
  403300:	call   0x403160
  403305:	mov    rax,QWORD PTR [rip+0x737c]        # 0x40a688
  40330c:	mov    edx,DWORD PTR [r12+0x8]
  403311:	lea    rcx,[rip+0x3998]        # 0x406cb0
  403318:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40331d:	call   0x403160
  403322:	lea    rcx,[rip+0x3967]        # 0x406c90
  403329:	mov    rdx,rbx
  40332c:	call   0x403160
  403331:	nop
  403332:	nop    DWORD PTR [rax+0x0]
  403336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403340:	push   rbp
  403341:	push   r14
  403343:	push   r13
  403345:	push   r12
  403347:	push   rdi
  403348:	push   rsi
  403349:	push   rbx
  40334a:	mov    rbp,rsp
  40334d:	sub    rsp,0x60
  403351:	mov    ebx,DWORD PTR [rip+0x7329]        # 0x40a680
  403357:	test   ebx,ebx
  403359:	je     0x403370
  40335b:	mov    rsp,rbp
  40335e:	pop    rbx
  40335f:	pop    rsi
  403360:	pop    rdi
  403361:	pop    r12
  403363:	pop    r13
  403365:	pop    r14
  403367:	pop    rbp
  403368:	ret    
  403369:	nop    DWORD PTR [rax+0x0]
  403370:	mov    DWORD PTR [rip+0x7306],0x1        # 0x40a680
  40337a:	call   0x403e90
  40337f:	cdqe   
  403381:	lea    rax,[rax+rax*2]
  403385:	lea    rax,[rax*8+0x1e]
  40338d:	and    rax,0xfffffffffffffff0
  403391:	call   0x4040b0
  403396:	mov    rsi,QWORD PTR [rip+0x3a23]        # 0x406dc0
  40339d:	mov    rbx,QWORD PTR [rip+0x3a2c]        # 0x406dd0
  4033a4:	sub    rsp,rax
  4033a7:	mov    DWORD PTR [rip+0x72d3],0x0        # 0x40a684
  4033b1:	lea    rax,[rsp+0x20]
  4033b6:	mov    QWORD PTR [rip+0x72cb],rax        # 0x40a688
  4033bd:	mov    rax,rsi
  4033c0:	sub    rax,rbx
  4033c3:	cmp    rax,0x7
  4033c7:	jle    0x40335b
  4033c9:	cmp    rax,0xb
  4033cd:	jle    0x4033f5
  4033cf:	mov    r11d,DWORD PTR [rbx]
  4033d2:	test   r11d,r11d
  4033d5:	jne    0x403520
  4033db:	mov    r10d,DWORD PTR [rbx+0x4]
  4033df:	test   r10d,r10d
  4033e2:	jne    0x403520
  4033e8:	mov    r9d,DWORD PTR [rbx+0x8]
  4033ec:	test   r9d,r9d
  4033ef:	jne    0x40340c
  4033f1:	add    rbx,0xc
  4033f5:	mov    r8d,DWORD PTR [rbx]
  4033f8:	test   r8d,r8d
  4033fb:	jne    0x403520
  403401:	mov    ecx,DWORD PTR [rbx+0x4]
  403404:	test   ecx,ecx
  403406:	jne    0x403520
  40340c:	mov    edx,DWORD PTR [rbx+0x8]
  40340f:	cmp    edx,0x1
  403412:	jne    0x40362c
  403418:	add    rbx,0xc
  40341c:	cmp    rbx,rsi
  40341f:	jae    0x40335b
  403425:	mov    r12,QWORD PTR [rip+0x39c4]        # 0x406df0
  40342c:	lea    r13,[rbp-0x30]
  403430:	movabs r14,0xffffffff00000000
  40343a:	mov    ecx,DWORD PTR [rbx+0x4]
  40343d:	mov    eax,DWORD PTR [rbx]
  40343f:	movzx  edx,BYTE PTR [rbx+0x8]
  403443:	add    rax,r12
  403446:	add    rcx,r12
  403449:	cmp    edx,0x10
  40344c:	mov    r8,QWORD PTR [rax]
  40344f:	je     0x403596
  403455:	jbe    0x40355d
  40345b:	cmp    edx,0x20
  40345e:	je     0x4035df
  403464:	cmp    edx,0x40
  403467:	jne    0x4035cb
  40346d:	sub    r8,rax
  403470:	mov    rdx,r13
  403473:	mov    rdi,r13
  403476:	mov    rax,r8
  403479:	add    rax,QWORD PTR [rcx]
  40347c:	mov    r8d,0x8
  403482:	mov    QWORD PTR [rbp-0x30],rax
  403486:	call   0x4031d0
  40348b:	add    rbx,0xc
  40348f:	cmp    rbx,rsi
  403492:	jb     0x40343a
  403494:	mov    eax,DWORD PTR [rip+0x71ea]        # 0x40a684
  40349a:	xor    ebx,ebx
  40349c:	xor    esi,esi
  40349e:	test   eax,eax
  4034a0:	jle    0x40335b
  4034a6:	mov    r14,QWORD PTR [rip+0x8073]        # 0x40b520
  4034ad:	lea    r13,[rbp-0x34]
  4034b1:	mov    r12,QWORD PTR [rip+0x8060]        # 0x40b518
  4034b8:	jmp    0x4034d3
  4034ba:	nop    WORD PTR [rax+rax*1+0x0]
  4034c0:	add    esi,0x1
  4034c3:	add    rbx,0x18
  4034c7:	cmp    esi,DWORD PTR [rip+0x71b7]        # 0x40a684
  4034cd:	jge    0x40335b
  4034d3:	mov    rax,rbx
  4034d6:	add    rax,QWORD PTR [rip+0x71ab]        # 0x40a688
  4034dd:	mov    edx,DWORD PTR [rax]
  4034df:	test   edx,edx
  4034e1:	je     0x4034c0
  4034e3:	mov    rcx,QWORD PTR [rax+0x8]
  4034e7:	mov    r8d,0x30
  4034ed:	mov    rdx,rdi
  4034f0:	call   r14
  4034f3:	test   rax,rax
  4034f6:	je     0x40360e
  4034fc:	mov    rax,QWORD PTR [rip+0x7185]        # 0x40a688
  403503:	mov    r9,r13
  403506:	mov    rdx,QWORD PTR [rbp-0x18]
  40350a:	mov    rcx,QWORD PTR [rbp-0x30]
  40350e:	mov    r8d,DWORD PTR [rax+rbx*1]
  403512:	call   r12
  403515:	jmp    0x4034c0
  403517:	nop    WORD PTR [rax+rax*1+0x0]
  403520:	cmp    rbx,rsi
  403523:	jae    0x40335b
  403529:	mov    r12,QWORD PTR [rip+0x38c0]        # 0x406df0
  403530:	lea    rdi,[rbp-0x30]
  403534:	mov    ecx,DWORD PTR [rbx+0x4]
  403537:	mov    eax,DWORD PTR [rbx]
  403539:	mov    r8d,0x4
  40353f:	mov    rdx,rdi
  403542:	add    rbx,0x8
  403546:	add    rcx,r12
  403549:	add    eax,DWORD PTR [rcx]
  40354b:	mov    DWORD PTR [rbp-0x30],eax
  40354e:	call   0x4031d0
  403553:	cmp    rbx,rsi
  403556:	jb     0x403534
  403558:	jmp    0x403494
  40355d:	cmp    edx,0x8
  403560:	jne    0x4035cb
  403562:	movzx  edx,BYTE PTR [rcx]
  403565:	mov    rdi,r13
  403568:	mov    r10,rdx
  40356b:	or     r10,0xffffffffffffff00
  403572:	test   dl,dl
  403574:	cmovs  rdx,r10
  403578:	sub    rdx,rax
  40357b:	lea    rax,[r8+rdx*1]
  40357f:	mov    r8d,0x1
  403585:	mov    rdx,r13
  403588:	mov    QWORD PTR [rbp-0x30],rax
  40358c:	call   0x4031d0
  403591:	jmp    0x40348b
  403596:	movzx  edx,WORD PTR [rcx]
  403599:	mov    rdi,r13
  40359c:	mov    r10,rdx
  40359f:	or     r10,0xffffffffffff0000
  4035a6:	test   dx,dx
  4035a9:	cmovs  rdx,r10
  4035ad:	sub    rdx,rax
  4035b0:	lea    rax,[r8+rdx*1]
  4035b4:	mov    r8d,0x2
  4035ba:	mov    rdx,r13
  4035bd:	mov    QWORD PTR [rbp-0x30],rax
  4035c1:	call   0x4031d0
  4035c6:	jmp    0x40348b
  4035cb:	lea    rcx,[rip+0x3776]        # 0x406d48
  4035d2:	mov    QWORD PTR [rbp-0x30],0x0
  4035da:	call   0x403160
  4035df:	mov    edx,DWORD PTR [rcx]
  4035e1:	mov    rdi,r13
  4035e4:	mov    r10,rdx
  4035e7:	or     r10,r14
  4035ea:	test   edx,edx
  4035ec:	cmovs  rdx,r10
  4035f0:	sub    rdx,rax
  4035f3:	lea    rax,[r8+rdx*1]
  4035f7:	mov    r8d,0x4
  4035fd:	mov    rdx,r13
  403600:	mov    QWORD PTR [rbp-0x30],rax
  403604:	call   0x4031d0
  403609:	jmp    0x40348b
  40360e:	add    rbx,QWORD PTR [rip+0x7073]        # 0x40a688
  403615:	lea    rcx,[rip+0x3694]        # 0x406cb0
  40361c:	mov    rax,QWORD PTR [rbx+0x10]
  403620:	mov    r8,QWORD PTR [rbx+0x8]
  403624:	mov    edx,DWORD PTR [rax+0x8]
  403627:	call   0x403160
  40362c:	lea    rcx,[rip+0x36dd]        # 0x406d10
  403633:	call   0x403160
  403638:	nop
  403639:	nop
  40363a:	nop
  40363b:	nop
  40363c:	nop
  40363d:	nop
  40363e:	nop
  40363f:	nop
  403640:	sub    rsp,0x28
  403644:	mov    eax,DWORD PTR [rcx]
  403646:	cmp    eax,0xc0000091
  40364b:	ja     0x4036b0
  40364d:	cmp    eax,0xc000008d
  403652:	jae    0x4036cf
  403654:	cmp    eax,0xc0000008
  403659:	je     0x403770
  40365f:	ja     0x403740
  403665:	cmp    eax,0x80000002
  40366a:	je     0x403770
  403670:	cmp    eax,0xc0000005
  403675:	jne    0x40374e
  40367b:	xor    edx,edx
  40367d:	mov    ecx,0xb
  403682:	call   0x404138
  403687:	cmp    rax,0x1
  40368b:	je     0x4037d0
  403691:	test   rax,rax
  403694:	je     0x4037b0
  40369a:	mov    ecx,0xb
  40369f:	call   rax
  4036a1:	xor    eax,eax
  4036a3:	add    rsp,0x28
  4036a7:	ret    
  4036a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036b0:	cmp    eax,0xc0000094
  4036b5:	je     0x403780
  4036bb:	ja     0x403700
  4036bd:	cmp    eax,0xc0000092
  4036c2:	je     0x403770
  4036c8:	cmp    eax,0xc0000093
  4036cd:	jne    0x40374e
  4036cf:	xor    edx,edx
  4036d1:	mov    ecx,0x8
  4036d6:	call   0x404138
  4036db:	cmp    rax,0x1
  4036df:	mov    rdx,rax
  4036e2:	je     0x403758
  4036e4:	test   rdx,rdx
  4036e7:	mov    eax,0x1
  4036ec:	je     0x4036a3
  4036ee:	mov    ecx,0x8
  4036f3:	call   rdx
  4036f5:	xor    eax,eax
  4036f7:	add    rsp,0x28
  4036fb:	ret    
  4036fc:	nop    DWORD PTR [rax+0x0]
  403700:	cmp    eax,0xc0000095
  403705:	je     0x403770
  403707:	cmp    eax,0xc0000096
  40370c:	jne    0x40374e
  40370e:	xor    edx,edx
  403710:	mov    ecx,0x4
  403715:	call   0x404138
  40371a:	cmp    rax,0x1
  40371e:	je     0x4037ba
  403724:	test   rax,rax
  403727:	je     0x4037b0
  40372d:	mov    ecx,0x4
  403732:	call   rax
  403734:	xor    eax,eax
  403736:	jmp    0x4036a3
  40373b:	nop    DWORD PTR [rax+rax*1+0x0]
  403740:	cmp    eax,0xc000001d
  403745:	je     0x40370e
  403747:	cmp    eax,0xc000008c
  40374c:	je     0x403770
  40374e:	mov    eax,0x1
  403753:	add    rsp,0x28
  403757:	ret    
  403758:	mov    edx,0x1
  40375d:	mov    ecx,0x8
  403762:	call   0x404138
  403767:	call   0x403130
  40376c:	nop    DWORD PTR [rax+0x0]
  403770:	xor    eax,eax
  403772:	add    rsp,0x28
  403776:	ret    
  403777:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	xor    edx,edx
  403782:	mov    ecx,0x8
  403787:	call   0x404138
  40378c:	cmp    rax,0x1
  403790:	mov    rdx,rax
  403793:	jne    0x4036e4
  403799:	mov    edx,0x1
  40379e:	mov    ecx,0x8
  4037a3:	call   0x404138
  4037a8:	xor    eax,eax
  4037aa:	jmp    0x4036a3
  4037af:	nop
  4037b0:	mov    eax,0x4
  4037b5:	add    rsp,0x28
  4037b9:	ret    
  4037ba:	mov    edx,0x1
  4037bf:	mov    ecx,0x4
  4037c4:	call   0x404138
  4037c9:	xor    eax,eax
  4037cb:	jmp    0x4036a3
  4037d0:	mov    edx,0x1
  4037d5:	mov    ecx,0xb
  4037da:	call   0x404138
  4037df:	xor    eax,eax
  4037e1:	jmp    0x4036a3
  4037e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037f0:	push   r12
  4037f2:	push   rbp
  4037f3:	push   rdi
  4037f4:	push   rsi
  4037f5:	push   rbx
  4037f6:	sub    rsp,0x20
  4037fa:	call   0x403f60
  4037ff:	mov    rbp,rax
  403802:	mov    eax,DWORD PTR [rip+0x6ec0]        # 0x40a6c8
  403808:	test   eax,eax
  40380a:	jne    0x403831
  40380c:	test   rbp,rbp
  40380f:	je     0x403831
  403811:	lea    rcx,[rip+0x3568]        # 0x406d80
  403818:	mov    DWORD PTR [rip+0x6ea6],0x1        # 0x40a6c8
  403822:	call   0x403da0
  403827:	test   rax,rax
  40382a:	je     0x403840
  40382c:	mov    eax,0x1
  403831:	add    rsp,0x20
  403835:	pop    rbx
  403836:	pop    rsi
  403837:	pop    rdi
  403838:	pop    rbp
  403839:	pop    r12
  40383b:	ret    
  40383c:	nop    DWORD PTR [rax+0x0]
  403840:	lea    rbx,[rip+0x6fb9]        # 0x40a800
  403847:	mov    ecx,0x30
  40384c:	lea    rdx,[rip+0x6ead]        # 0x40a700
  403853:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403640
  40385a:	xor    esi,esi
  40385c:	mov    rdi,rbx
  40385f:	rep stos QWORD PTR es:[rdi],rax
  403862:	mov    rdi,rdx
  403865:	sub    r12,rbp
  403868:	mov    cl,0x20
  40386a:	rep stos QWORD PTR es:[rdi],rax
  40386d:	mov    rdi,rdx
  403870:	jmp    0x4038a0
  403872:	mov    BYTE PTR [rdi],0x9
  403875:	mov    DWORD PTR [rdi+0x4],r12d
  403879:	add    rsi,0x1
  40387d:	mov    edx,DWORD PTR [rax+0xc]
  403880:	add    rbx,0xc
  403884:	mov    DWORD PTR [rbx-0xc],edx
  403887:	add    edx,DWORD PTR [rax+0x8]
  40388a:	mov    rax,rdi
  40388d:	sub    rax,rbp
  403890:	add    rdi,0x8
  403894:	mov    DWORD PTR [rbx-0x4],eax
  403897:	mov    DWORD PTR [rbx-0x8],edx
  40389a:	cmp    rsi,0x20
  40389e:	je     0x4038d5
  4038a0:	mov    rcx,rsi
  4038a3:	call   0x403ed0
  4038a8:	test   rax,rax
  4038ab:	jne    0x403872
  4038ad:	test   rsi,rsi
  4038b0:	je     0x40382c
  4038b6:	mov    edx,esi
  4038b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038c0:	mov    r8,rbp
  4038c3:	lea    rcx,[rip+0x6f36]        # 0x40a800
  4038ca:	call   QWORD PTR [rip+0x7c00]        # 0x40b4d0
  4038d0:	jmp    0x40382c
  4038d5:	mov    edx,0x20
  4038da:	jmp    0x4038c0
  4038dc:	nop    DWORD PTR [rax+0x0]
  4038e0:	push   rbx
  4038e1:	sub    rsp,0x20
  4038e5:	mov    rdx,QWORD PTR [rcx]
  4038e8:	mov    eax,DWORD PTR [rdx]
  4038ea:	mov    r8d,eax
  4038ed:	and    r8d,0x20ffffff
  4038f4:	cmp    r8d,0x20474343
  4038fb:	je     0x403a00
  403901:	cmp    eax,0xc0000091
  403906:	mov    rbx,rcx
  403909:	ja     0x403990
  40390f:	cmp    eax,0xc000008d
  403914:	jae    0x4039a7
  40391a:	cmp    eax,0xc0000008
  40391f:	je     0x403953
  403921:	ja     0x403960
  403923:	cmp    eax,0x80000002
  403928:	je     0x403953
  40392a:	cmp    eax,0xc0000005
  40392f:	jne    0x403972
  403931:	xor    edx,edx
  403933:	mov    ecx,0xb
  403938:	call   0x404138
  40393d:	cmp    rax,0x1
  403941:	je     0x403a70
  403947:	test   rax,rax
  40394a:	je     0x403972
  40394c:	mov    ecx,0xb
  403951:	call   rax
  403953:	mov    eax,0xffffffff
  403958:	add    rsp,0x20
  40395c:	pop    rbx
  40395d:	ret    
  40395e:	xchg   ax,ax
  403960:	cmp    eax,0xc000001d
  403965:	je     0x403a26
  40396b:	cmp    eax,0xc000008c
  403970:	je     0x403953
  403972:	mov    rax,QWORD PTR [rip+0x6d47]        # 0x40a6c0
  403979:	test   rax,rax
  40397c:	je     0x403958
  40397e:	mov    rcx,rbx
  403981:	add    rsp,0x20
  403985:	pop    rbx
  403986:	rex.W jmp rax
  403989:	nop    DWORD PTR [rax+0x0]
  403990:	cmp    eax,0xc0000094
  403995:	je     0x4039d2
  403997:	ja     0x403a10
  403999:	cmp    eax,0xc0000092
  40399e:	je     0x403953
  4039a0:	cmp    eax,0xc0000093
  4039a5:	jne    0x403972
  4039a7:	xor    edx,edx
  4039a9:	mov    ecx,0x8
  4039ae:	call   0x404138
  4039b3:	cmp    rax,0x1
  4039b7:	jne    0x4039e4
  4039b9:	mov    edx,0x1
  4039be:	mov    ecx,0x8
  4039c3:	call   0x404138
  4039c8:	call   0x403130
  4039cd:	jmp    0x403953
  4039d2:	xor    edx,edx
  4039d4:	mov    ecx,0x8
  4039d9:	call   0x404138
  4039de:	cmp    rax,0x1
  4039e2:	je     0x403a52
  4039e4:	test   rax,rax
  4039e7:	je     0x403972
  4039e9:	mov    ecx,0x8
  4039ee:	call   rax
  4039f0:	mov    eax,0xffffffff
  4039f5:	jmp    0x403958
  4039fa:	nop    WORD PTR [rax+rax*1+0x0]
  403a00:	test   BYTE PTR [rdx+0x4],0x1
  403a04:	jne    0x403901
  403a0a:	jmp    0x403953
  403a0f:	nop
  403a10:	cmp    eax,0xc0000095
  403a15:	je     0x403953
  403a1b:	cmp    eax,0xc0000096
  403a20:	jne    0x403972
  403a26:	xor    edx,edx
  403a28:	mov    ecx,0x4
  403a2d:	call   0x404138
  403a32:	cmp    rax,0x1
  403a36:	je     0x403a84
  403a38:	test   rax,rax
  403a3b:	je     0x403972
  403a41:	mov    ecx,0x4
  403a46:	call   rax
  403a48:	mov    eax,0xffffffff
  403a4d:	jmp    0x403958
  403a52:	mov    edx,0x1
  403a57:	mov    ecx,0x8
  403a5c:	call   0x404138
  403a61:	jmp    0x403953
  403a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a70:	mov    edx,0x1
  403a75:	mov    ecx,0xb
  403a7a:	call   0x404138
  403a7f:	jmp    0x403953
  403a84:	mov    edx,0x1
  403a89:	mov    ecx,0x4
  403a8e:	call   0x404138
  403a93:	jmp    0x403953
  403a98:	nop
  403a99:	nop
  403a9a:	nop
  403a9b:	nop
  403a9c:	nop
  403a9d:	nop
  403a9e:	nop
  403a9f:	nop
  403aa0:	push   rbp
  403aa1:	push   rdi
  403aa2:	push   rsi
  403aa3:	push   rbx
  403aa4:	sub    rsp,0x28
  403aa8:	lea    rcx,[rip+0x6ef1]        # 0x40a9a0
  403aaf:	call   QWORD PTR [rip+0x79c3]        # 0x40b478
  403ab5:	mov    rbx,QWORD PTR [rip+0x6ec4]        # 0x40a980
  403abc:	test   rbx,rbx
  403abf:	je     0x403af4
  403ac1:	mov    rbp,QWORD PTR [rip+0x7a40]        # 0x40b508
  403ac8:	mov    rdi,QWORD PTR [rip+0x79c9]        # 0x40b498
  403acf:	nop
  403ad0:	mov    ecx,DWORD PTR [rbx]
  403ad2:	call   rbp
  403ad4:	mov    rsi,rax
  403ad7:	call   rdi
  403ad9:	test   eax,eax
  403adb:	jne    0x403aeb
  403add:	test   rsi,rsi
  403ae0:	je     0x403aeb
  403ae2:	mov    rax,QWORD PTR [rbx+0x8]
  403ae6:	mov    rcx,rsi
  403ae9:	call   rax
  403aeb:	mov    rbx,QWORD PTR [rbx+0x10]
  403aef:	test   rbx,rbx
  403af2:	jne    0x403ad0
  403af4:	mov    rax,QWORD PTR [rip+0x79c5]        # 0x40b4c0
  403afb:	lea    rcx,[rip+0x6e9e]        # 0x40a9a0
  403b02:	add    rsp,0x28
  403b06:	pop    rbx
  403b07:	pop    rsi
  403b08:	pop    rdi
  403b09:	pop    rbp
  403b0a:	rex.W jmp rax
  403b0d:	nop    DWORD PTR [rax]
  403b10:	push   rdi
  403b11:	push   rsi
  403b12:	push   rbx
  403b13:	sub    rsp,0x20
  403b17:	mov    eax,DWORD PTR [rip+0x6e6b]        # 0x40a988
  403b1d:	test   eax,eax
  403b1f:	jne    0x403b30
  403b21:	add    rsp,0x20
  403b25:	pop    rbx
  403b26:	pop    rsi
  403b27:	pop    rdi
  403b28:	ret    
  403b29:	nop    DWORD PTR [rax+0x0]
  403b30:	mov    rsi,rdx
  403b33:	mov    edi,ecx
  403b35:	mov    edx,0x18
  403b3a:	mov    ecx,0x1
  403b3f:	call   0x404190
  403b44:	test   rax,rax
  403b47:	mov    rbx,rax
  403b4a:	je     0x403b88
  403b4c:	mov    DWORD PTR [rax],edi
  403b4e:	mov    QWORD PTR [rax+0x8],rsi
  403b52:	lea    rcx,[rip+0x6e47]        # 0x40a9a0
  403b59:	call   QWORD PTR [rip+0x7919]        # 0x40b478
  403b5f:	mov    rax,QWORD PTR [rip+0x6e1a]        # 0x40a980
  403b66:	lea    rcx,[rip+0x6e33]        # 0x40a9a0
  403b6d:	mov    QWORD PTR [rip+0x6e0c],rbx        # 0x40a980
  403b74:	mov    QWORD PTR [rbx+0x10],rax
  403b78:	call   QWORD PTR [rip+0x7942]        # 0x40b4c0
  403b7e:	xor    eax,eax
  403b80:	add    rsp,0x20
  403b84:	pop    rbx
  403b85:	pop    rsi
  403b86:	pop    rdi
  403b87:	ret    
  403b88:	mov    eax,0xffffffff
  403b8d:	jmp    0x403b21
  403b8f:	nop
  403b90:	push   rbx
  403b91:	sub    rsp,0x20
  403b95:	mov    eax,DWORD PTR [rip+0x6ded]        # 0x40a988
  403b9b:	test   eax,eax
  403b9d:	jne    0x403bb0
  403b9f:	xor    eax,eax
  403ba1:	add    rsp,0x20
  403ba5:	pop    rbx
  403ba6:	ret    
  403ba7:	nop    WORD PTR [rax+rax*1+0x0]
  403bb0:	mov    ebx,ecx
  403bb2:	lea    rcx,[rip+0x6de7]        # 0x40a9a0
  403bb9:	call   QWORD PTR [rip+0x78b9]        # 0x40b478
  403bbf:	mov    rdx,QWORD PTR [rip+0x6dba]        # 0x40a980
  403bc6:	test   rdx,rdx
  403bc9:	je     0x403be7
  403bcb:	mov    eax,DWORD PTR [rdx]
  403bcd:	cmp    eax,ebx
  403bcf:	jne    0x403bde
  403bd1:	jmp    0x403c1f
  403bd3:	mov    r8d,DWORD PTR [rax]
  403bd6:	cmp    r8d,ebx
  403bd9:	je     0x403c00
  403bdb:	mov    rdx,rax
  403bde:	mov    rax,QWORD PTR [rdx+0x10]
  403be2:	test   rax,rax
  403be5:	jne    0x403bd3
  403be7:	lea    rcx,[rip+0x6db2]        # 0x40a9a0
  403bee:	call   QWORD PTR [rip+0x78cc]        # 0x40b4c0
  403bf4:	xor    eax,eax
  403bf6:	add    rsp,0x20
  403bfa:	pop    rbx
  403bfb:	ret    
  403bfc:	nop    DWORD PTR [rax+0x0]
  403c00:	mov    rcx,rax
  403c03:	mov    rax,QWORD PTR [rax+0x10]
  403c07:	mov    QWORD PTR [rdx+0x10],rax
  403c0b:	call   0x404170
  403c10:	lea    rcx,[rip+0x6d89]        # 0x40a9a0
  403c17:	call   QWORD PTR [rip+0x78a3]        # 0x40b4c0
  403c1d:	jmp    0x403bf4
  403c1f:	mov    rax,QWORD PTR [rdx+0x10]
  403c23:	mov    rcx,rdx
  403c26:	mov    QWORD PTR [rip+0x6d53],rax        # 0x40a980
  403c2d:	jmp    0x403c0b
  403c2f:	nop
  403c30:	push   rbx
  403c31:	sub    rsp,0x20
  403c35:	cmp    edx,0x1
  403c38:	je     0x403cd0
  403c3e:	jb     0x403c70
  403c40:	cmp    edx,0x2
  403c43:	je     0x403c60
  403c45:	cmp    edx,0x3
  403c48:	jne    0x403c65
  403c4a:	mov    eax,DWORD PTR [rip+0x6d38]        # 0x40a988
  403c50:	test   eax,eax
  403c52:	je     0x403c65
  403c54:	call   0x403aa0
  403c59:	jmp    0x403c65
  403c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c60:	call   0x403130
  403c65:	mov    eax,0x1
  403c6a:	add    rsp,0x20
  403c6e:	pop    rbx
  403c6f:	ret    
  403c70:	mov    eax,DWORD PTR [rip+0x6d12]        # 0x40a988
  403c76:	test   eax,eax
  403c78:	jne    0x403d00
  403c7e:	mov    eax,DWORD PTR [rip+0x6d04]        # 0x40a988
  403c84:	cmp    eax,0x1
  403c87:	jne    0x403c65
  403c89:	mov    rcx,QWORD PTR [rip+0x6cf0]        # 0x40a980
  403c90:	test   rcx,rcx
  403c93:	je     0x403ca6
  403c95:	mov    rbx,QWORD PTR [rcx+0x10]
  403c99:	call   0x404170
  403c9e:	test   rbx,rbx
  403ca1:	mov    rcx,rbx
  403ca4:	jne    0x403c95
  403ca6:	lea    rcx,[rip+0x6cf3]        # 0x40a9a0
  403cad:	mov    QWORD PTR [rip+0x6cc8],0x0        # 0x40a980
  403cb8:	mov    DWORD PTR [rip+0x6cc6],0x0        # 0x40a988
  403cc2:	call   QWORD PTR [rip+0x77a8]        # 0x40b470
  403cc8:	jmp    0x403c65
  403cca:	nop    WORD PTR [rax+rax*1+0x0]
  403cd0:	mov    eax,DWORD PTR [rip+0x6cb2]        # 0x40a988
  403cd6:	test   eax,eax
  403cd8:	je     0x403cf0
  403cda:	mov    eax,0x1
  403cdf:	mov    DWORD PTR [rip+0x6c9f],0x1        # 0x40a988
  403ce9:	add    rsp,0x20
  403ced:	pop    rbx
  403cee:	ret    
  403cef:	nop
  403cf0:	lea    rcx,[rip+0x6ca9]        # 0x40a9a0
  403cf7:	call   QWORD PTR [rip+0x77bb]        # 0x40b4b8
  403cfd:	jmp    0x403cda
  403cff:	nop
  403d00:	call   0x403aa0
  403d05:	jmp    0x403c7e
  403d0a:	nop
  403d0b:	nop
  403d0c:	nop
  403d0d:	nop
  403d0e:	nop
  403d0f:	nop
  403d10:	movsxd rax,DWORD PTR [rcx+0x3c]
  403d14:	add    rcx,rax
  403d17:	xor    eax,eax
  403d19:	cmp    DWORD PTR [rcx],0x4550
  403d1f:	je     0x403d23
  403d21:	repz ret 
  403d23:	xor    eax,eax
  403d25:	cmp    WORD PTR [rcx+0x18],0x20b
  403d2b:	sete   al
  403d2e:	ret    
  403d2f:	nop
  403d30:	cmp    WORD PTR [rcx],0x5a4d
  403d35:	je     0x403d40
  403d37:	xor    eax,eax
  403d39:	ret    
  403d3a:	nop    WORD PTR [rax+rax*1+0x0]
  403d40:	jmp    0x403d10
  403d42:	nop    DWORD PTR [rax+0x0]
  403d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d50:	movsxd rax,DWORD PTR [rcx+0x3c]
  403d54:	add    rcx,rax
  403d57:	movzx  eax,WORD PTR [rcx+0x14]
  403d5b:	lea    rax,[rcx+rax*1+0x18]
  403d60:	movzx  ecx,WORD PTR [rcx+0x6]
  403d64:	test   ecx,ecx
  403d66:	je     0x403d91
  403d68:	sub    ecx,0x1
  403d6b:	lea    rcx,[rcx+rcx*4]
  403d6f:	lea    r9,[rax+rcx*8+0x28]
  403d74:	mov    r8d,DWORD PTR [rax+0xc]
  403d78:	cmp    r8,rdx
  403d7b:	mov    rcx,r8
  403d7e:	ja     0x403d88
  403d80:	add    ecx,DWORD PTR [rax+0x8]
  403d83:	cmp    rdx,rcx
  403d86:	jb     0x403d93
  403d88:	add    rax,0x28
  403d8c:	cmp    rax,r9
  403d8f:	jne    0x403d74
  403d91:	xor    eax,eax
  403d93:	repz ret 
  403d95:	nop
  403d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403da0:	push   rdi
  403da1:	push   rsi
  403da2:	push   rbx
  403da3:	sub    rsp,0x20
  403da7:	mov    rsi,rcx
  403daa:	call   0x404118
  403daf:	cmp    rax,0x8
  403db3:	ja     0x403dd0
  403db5:	mov    rbx,QWORD PTR [rip+0x3034]        # 0x406df0
  403dbc:	xor    edi,edi
  403dbe:	cmp    WORD PTR [rbx],0x5a4d
  403dc3:	je     0x403de0
  403dc5:	mov    rax,rdi
  403dc8:	add    rsp,0x20
  403dcc:	pop    rbx
  403dcd:	pop    rsi
  403dce:	pop    rdi
  403dcf:	ret    
  403dd0:	xor    edi,edi
  403dd2:	mov    rax,rdi
  403dd5:	add    rsp,0x20
  403dd9:	pop    rbx
  403dda:	pop    rsi
  403ddb:	pop    rdi
  403ddc:	ret    
  403ddd:	nop    DWORD PTR [rax]
  403de0:	mov    rcx,rbx
  403de3:	call   0x403d10
  403de8:	test   eax,eax
  403dea:	je     0x403dc5
  403dec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  403df0:	add    rdx,rbx
  403df3:	movzx  eax,WORD PTR [rdx+0x14]
  403df7:	lea    rbx,[rdx+rax*1+0x18]
  403dfc:	movzx  eax,WORD PTR [rdx+0x6]
  403e00:	test   eax,eax
  403e02:	je     0x403dc5
  403e04:	sub    eax,0x1
  403e07:	lea    rax,[rax+rax*4]
  403e0b:	lea    rdi,[rbx+rax*8+0x28]
  403e10:	jmp    0x403e1b
  403e12:	add    rbx,0x28
  403e16:	cmp    rbx,rdi
  403e19:	je     0x403dd0
  403e1b:	mov    r8d,0x8
  403e21:	mov    rdx,rsi
  403e24:	mov    rcx,rbx
  403e27:	call   0x404110
  403e2c:	test   eax,eax
  403e2e:	jne    0x403e12
  403e30:	mov    rdi,rbx
  403e33:	mov    rax,rdi
  403e36:	add    rsp,0x20
  403e3a:	pop    rbx
  403e3b:	pop    rsi
  403e3c:	pop    rdi
  403e3d:	ret    
  403e3e:	xchg   ax,ax
  403e40:	push   rsi
  403e41:	push   rbx
  403e42:	sub    rsp,0x28
  403e46:	mov    rbx,QWORD PTR [rip+0x2fa3]        # 0x406df0
  403e4d:	cmp    WORD PTR [rbx],0x5a4d
  403e52:	je     0x403e60
  403e54:	xor    eax,eax
  403e56:	add    rsp,0x28
  403e5a:	pop    rbx
  403e5b:	pop    rsi
  403e5c:	ret    
  403e5d:	nop    DWORD PTR [rax]
  403e60:	mov    rsi,rcx
  403e63:	mov    rcx,rbx
  403e66:	call   0x403d10
  403e6b:	test   eax,eax
  403e6d:	je     0x403e54
  403e6f:	sub    rsi,rbx
  403e72:	mov    rcx,rbx
  403e75:	mov    rdx,rsi
  403e78:	add    rsp,0x28
  403e7c:	pop    rbx
  403e7d:	pop    rsi
  403e7e:	jmp    0x403d50
  403e83:	nop    DWORD PTR [rax]
  403e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e90:	push   rbx
  403e91:	sub    rsp,0x20
  403e95:	mov    rbx,QWORD PTR [rip+0x2f54]        # 0x406df0
  403e9c:	xor    eax,eax
  403e9e:	cmp    WORD PTR [rbx],0x5a4d
  403ea3:	je     0x403eb0
  403ea5:	add    rsp,0x20
  403ea9:	pop    rbx
  403eaa:	ret    
  403eab:	nop    DWORD PTR [rax+rax*1+0x0]
  403eb0:	mov    rcx,rbx
  403eb3:	call   0x403d10
  403eb8:	test   eax,eax
  403eba:	je     0x403ea5
  403ebc:	movsxd rax,DWORD PTR [rbx+0x3c]
  403ec0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403ec5:	add    rsp,0x20
  403ec9:	pop    rbx
  403eca:	ret    
  403ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ed0:	push   rdi
  403ed1:	push   rsi
  403ed2:	push   rbx
  403ed3:	sub    rsp,0x20
  403ed7:	mov    rsi,QWORD PTR [rip+0x2f12]        # 0x406df0
  403ede:	xor    edi,edi
  403ee0:	mov    rbx,rcx
  403ee3:	cmp    WORD PTR [rsi],0x5a4d
  403ee8:	je     0x403ef5
  403eea:	mov    rax,rdi
  403eed:	add    rsp,0x20
  403ef1:	pop    rbx
  403ef2:	pop    rsi
  403ef3:	pop    rdi
  403ef4:	ret    
  403ef5:	mov    rcx,rsi
  403ef8:	call   0x403d10
  403efd:	test   eax,eax
  403eff:	je     0x403eea
  403f01:	movsxd rax,DWORD PTR [rsi+0x3c]
  403f05:	add    rsi,rax
  403f08:	movzx  eax,WORD PTR [rsi+0x14]
  403f0c:	lea    rdx,[rsi+rax*1+0x18]
  403f11:	movzx  eax,WORD PTR [rsi+0x6]
  403f15:	test   eax,eax
  403f17:	je     0x403eea
  403f19:	sub    eax,0x1
  403f1c:	lea    rax,[rax+rax*4]
  403f20:	lea    rax,[rdx+rax*8+0x28]
  403f25:	test   BYTE PTR [rdx+0x27],0x20
  403f29:	je     0x403f34
  403f2b:	test   rbx,rbx
  403f2e:	je     0x403f50
  403f30:	sub    rbx,0x1
  403f34:	add    rdx,0x28
  403f38:	cmp    rdx,rax
  403f3b:	jne    0x403f25
  403f3d:	xor    edi,edi
  403f3f:	mov    rax,rdi
  403f42:	add    rsp,0x20
  403f46:	pop    rbx
  403f47:	pop    rsi
  403f48:	pop    rdi
  403f49:	ret    
  403f4a:	nop    WORD PTR [rax+rax*1+0x0]
  403f50:	mov    rdi,rdx
  403f53:	mov    rax,rdi
  403f56:	add    rsp,0x20
  403f5a:	pop    rbx
  403f5b:	pop    rsi
  403f5c:	pop    rdi
  403f5d:	ret    
  403f5e:	xchg   ax,ax
  403f60:	push   rsi
  403f61:	push   rbx
  403f62:	sub    rsp,0x28
  403f66:	mov    rsi,QWORD PTR [rip+0x2e83]        # 0x406df0
  403f6d:	xor    ebx,ebx
  403f6f:	cmp    WORD PTR [rsi],0x5a4d
  403f74:	je     0x403f80
  403f76:	mov    rax,rbx
  403f79:	add    rsp,0x28
  403f7d:	pop    rbx
  403f7e:	pop    rsi
  403f7f:	ret    
  403f80:	mov    rcx,rsi
  403f83:	call   0x403d10
  403f88:	test   eax,eax
  403f8a:	cmovne rbx,rsi
  403f8e:	mov    rax,rbx
  403f91:	add    rsp,0x28
  403f95:	pop    rbx
  403f96:	pop    rsi
  403f97:	ret    
  403f98:	nop    DWORD PTR [rax+rax*1+0x0]
  403fa0:	push   rsi
  403fa1:	push   rbx
  403fa2:	sub    rsp,0x28
  403fa6:	mov    rbx,QWORD PTR [rip+0x2e43]        # 0x406df0
  403fad:	xor    eax,eax
  403faf:	cmp    WORD PTR [rbx],0x5a4d
  403fb4:	je     0x403fc0
  403fb6:	add    rsp,0x28
  403fba:	pop    rbx
  403fbb:	pop    rsi
  403fbc:	ret    
  403fbd:	nop    DWORD PTR [rax]
  403fc0:	mov    rsi,rcx
  403fc3:	mov    rcx,rbx
  403fc6:	call   0x403d10
  403fcb:	test   eax,eax
  403fcd:	je     0x403fb6
  403fcf:	sub    rsi,rbx
  403fd2:	mov    rcx,rbx
  403fd5:	mov    rdx,rsi
  403fd8:	call   0x403d50
  403fdd:	test   rax,rax
  403fe0:	je     0x403ff1
  403fe2:	mov    eax,DWORD PTR [rax+0x24]
  403fe5:	not    eax
  403fe7:	shr    eax,0x1f
  403fea:	add    rsp,0x28
  403fee:	pop    rbx
  403fef:	pop    rsi
  403ff0:	ret    
  403ff1:	xor    eax,eax
  403ff3:	jmp    0x403fb6
  403ff5:	nop
  403ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404000:	push   rbp
  404001:	push   rdi
  404002:	push   rsi
  404003:	push   rbx
  404004:	sub    rsp,0x28
  404008:	mov    rdi,QWORD PTR [rip+0x2de1]        # 0x406df0
  40400f:	xor    ebp,ebp
  404011:	mov    esi,ecx
  404013:	cmp    WORD PTR [rdi],0x5a4d
  404018:	je     0x404030
  40401a:	mov    rax,rbp
  40401d:	add    rsp,0x28
  404021:	pop    rbx
  404022:	pop    rsi
  404023:	pop    rdi
  404024:	pop    rbp
  404025:	ret    
  404026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404030:	mov    rcx,rdi
  404033:	call   0x403d10
  404038:	test   eax,eax
  40403a:	je     0x40401a
  40403c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404040:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404047:	test   edx,edx
  404049:	je     0x40401a
  40404b:	mov    ebx,edx
  40404d:	mov    rcx,rdi
  404050:	mov    rdx,rbx
  404053:	call   0x403d50
  404058:	test   rax,rax
  40405b:	je     0x40401a
  40405d:	add    rbx,rdi
  404060:	mov    rdx,rbx
  404063:	jne    0x404077
  404065:	jmp    0x40401a
  404067:	nop    WORD PTR [rax+rax*1+0x0]
  404070:	sub    esi,0x1
  404073:	add    rdx,0x14
  404077:	mov    ecx,DWORD PTR [rdx+0x4]
  40407a:	test   ecx,ecx
  40407c:	jne    0x404085
  40407e:	mov    eax,DWORD PTR [rdx+0xc]
  404081:	test   eax,eax
  404083:	je     0x4040a0
  404085:	test   esi,esi
  404087:	jg     0x404070
  404089:	mov    ebp,DWORD PTR [rdx+0xc]
  40408c:	add    rbp,rdi
  40408f:	mov    rax,rbp
  404092:	add    rsp,0x28
  404096:	pop    rbx
  404097:	pop    rsi
  404098:	pop    rdi
  404099:	pop    rbp
  40409a:	ret    
  40409b:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	xor    ebp,ebp
  4040a2:	mov    rax,rbp
  4040a5:	add    rsp,0x28
  4040a9:	pop    rbx
  4040aa:	pop    rsi
  4040ab:	pop    rdi
  4040ac:	pop    rbp
  4040ad:	ret    
  4040ae:	nop
  4040af:	nop
  4040b0:	push   rcx
  4040b1:	push   rax
  4040b2:	cmp    rax,0x1000
  4040b8:	lea    rcx,[rsp+0x18]
  4040bd:	jb     0x4040d8
  4040bf:	sub    rcx,0x1000
  4040c6:	or     QWORD PTR [rcx],0x0
  4040ca:	sub    rax,0x1000
  4040d0:	cmp    rax,0x1000
  4040d6:	ja     0x4040bf
  4040d8:	sub    rcx,rax
  4040db:	or     QWORD PTR [rcx],0x0
  4040df:	pop    rax
  4040e0:	pop    rcx
  4040e1:	ret    
  4040e2:	nop
  4040e3:	nop
  4040e4:	nop
  4040e5:	nop
  4040e6:	nop
  4040e7:	nop
  4040e8:	nop
  4040e9:	nop
  4040ea:	nop
  4040eb:	nop
  4040ec:	nop
  4040ed:	nop
  4040ee:	nop
  4040ef:	nop
  4040f0:	jmp    QWORD PTR [rip+0x757a]        # 0x40b670
  4040f6:	nop
  4040f7:	nop
  4040f8:	jmp    QWORD PTR [rip+0x756a]        # 0x40b668
  4040fe:	nop
  4040ff:	nop
  404100:	jmp    QWORD PTR [rip+0x755a]        # 0x40b660
  404106:	nop
  404107:	nop
  404108:	jmp    QWORD PTR [rip+0x754a]        # 0x40b658
  40410e:	nop
  40410f:	nop
  404110:	jmp    QWORD PTR [rip+0x753a]        # 0x40b650
  404116:	nop
  404117:	nop
  404118:	jmp    QWORD PTR [rip+0x752a]        # 0x40b648
  40411e:	nop
  40411f:	nop
  404120:	jmp    QWORD PTR [rip+0x751a]        # 0x40b640
  404126:	nop
  404127:	nop
  404128:	jmp    QWORD PTR [rip+0x750a]        # 0x40b638
  40412e:	nop
  40412f:	nop
  404130:	jmp    QWORD PTR [rip+0x74fa]        # 0x40b630
  404136:	nop
  404137:	nop
  404138:	jmp    QWORD PTR [rip+0x74ea]        # 0x40b628
  40413e:	nop
  40413f:	nop
  404140:	jmp    QWORD PTR [rip+0x74da]        # 0x40b620
  404146:	nop
  404147:	nop
  404148:	jmp    QWORD PTR [rip+0x74ca]        # 0x40b618
  40414e:	nop
  40414f:	nop
  404150:	jmp    QWORD PTR [rip+0x74ba]        # 0x40b610
  404156:	nop
  404157:	nop
  404158:	jmp    QWORD PTR [rip+0x74aa]        # 0x40b608
  40415e:	nop
  40415f:	nop
  404160:	jmp    QWORD PTR [rip+0x749a]        # 0x40b600
  404166:	nop
  404167:	nop
  404168:	jmp    QWORD PTR [rip+0x748a]        # 0x40b5f8
  40416e:	nop
  40416f:	nop
  404170:	jmp    QWORD PTR [rip+0x747a]        # 0x40b5f0
  404176:	nop
  404177:	nop
  404178:	jmp    QWORD PTR [rip+0x746a]        # 0x40b5e8
  40417e:	nop
  40417f:	nop
  404180:	jmp    QWORD PTR [rip+0x745a]        # 0x40b5e0
  404186:	nop
  404187:	nop
  404188:	jmp    QWORD PTR [rip+0x744a]        # 0x40b5d8
  40418e:	nop
  40418f:	nop
  404190:	jmp    QWORD PTR [rip+0x743a]        # 0x40b5d0
  404196:	nop
  404197:	nop
  404198:	jmp    QWORD PTR [rip+0x742a]        # 0x40b5c8
  40419e:	nop
  40419f:	nop
  4041a0:	jmp    QWORD PTR [rip+0x741a]        # 0x40b5c0
  4041a6:	nop
  4041a7:	nop
  4041a8:	jmp    QWORD PTR [rip+0x740a]        # 0x40b5b8
  4041ae:	nop
  4041af:	nop
  4041b0:	jmp    QWORD PTR [rip+0x73fa]        # 0x40b5b0
  4041b6:	nop
  4041b7:	nop
  4041b8:	jmp    QWORD PTR [rip+0x73ea]        # 0x40b5a8
  4041be:	nop
  4041bf:	nop
  4041c0:	jmp    QWORD PTR [rip+0x73da]        # 0x40b5a0
  4041c6:	nop
  4041c7:	nop
  4041c8:	jmp    QWORD PTR [rip+0x73ca]        # 0x40b598
  4041ce:	nop
  4041cf:	nop
  4041d0:	jmp    QWORD PTR [rip+0x73b2]        # 0x40b588
  4041d6:	nop
  4041d7:	nop
  4041d8:	jmp    QWORD PTR [rip+0x73a2]        # 0x40b580
  4041de:	nop
  4041df:	nop
  4041e0:	jmp    QWORD PTR [rip+0x7392]        # 0x40b578
  4041e6:	nop
  4041e7:	nop
  4041e8:	jmp    QWORD PTR [rip+0x737a]        # 0x40b568
  4041ee:	nop
  4041ef:	nop
  4041f0:	jmp    QWORD PTR [rip+0x736a]        # 0x40b560
  4041f6:	nop
  4041f7:	nop
  4041f8:	jmp    QWORD PTR [rip+0x735a]        # 0x40b558
  4041fe:	nop
  4041ff:	nop
  404200:	jmp    QWORD PTR [rip+0x734a]        # 0x40b550
  404206:	nop
  404207:	nop
  404208:	jmp    QWORD PTR [rip+0x7332]        # 0x40b540
  40420e:	nop
  40420f:	nop
  404210:	jmp    QWORD PTR [rip+0x7322]        # 0x40b538
  404216:	nop
  404217:	nop
  404218:	jmp    QWORD PTR [rip+0x7312]        # 0x40b530
  40421e:	nop
  40421f:	nop
  404220:	mov    rax,QWORD PTR [rip+0x67c9]        # 0x40a9f0
  404227:	ret    
  404228:	nop    DWORD PTR [rax+rax*1+0x0]
  404230:	mov    rax,rcx
  404233:	xchg   QWORD PTR [rip+0x67b6],rax        # 0x40a9f0
  40423a:	ret    
  40423b:	nop
  40423c:	nop
  40423d:	nop
  40423e:	nop
  40423f:	nop
  404240:	jmp    QWORD PTR [rip+0x72da]        # 0x40b520
  404246:	nop
  404247:	nop
  404248:	jmp    QWORD PTR [rip+0x72ca]        # 0x40b518
  40424e:	nop
  40424f:	nop
  404250:	jmp    QWORD PTR [rip+0x72ba]        # 0x40b510
  404256:	nop
  404257:	nop
  404258:	jmp    QWORD PTR [rip+0x72aa]        # 0x40b508
  40425e:	nop
  40425f:	nop
  404260:	jmp    QWORD PTR [rip+0x729a]        # 0x40b500
  404266:	nop
  404267:	nop
  404268:	jmp    QWORD PTR [rip+0x728a]        # 0x40b4f8
  40426e:	nop
  40426f:	nop
  404270:	jmp    QWORD PTR [rip+0x727a]        # 0x40b4f0
  404276:	nop
  404277:	nop
  404278:	jmp    QWORD PTR [rip+0x726a]        # 0x40b4e8
  40427e:	nop
  40427f:	nop
  404280:	jmp    QWORD PTR [rip+0x725a]        # 0x40b4e0
  404286:	nop
  404287:	nop
  404288:	jmp    QWORD PTR [rip+0x724a]        # 0x40b4d8
  40428e:	nop
  40428f:	nop
  404290:	jmp    QWORD PTR [rip+0x723a]        # 0x40b4d0
  404296:	nop
  404297:	nop
  404298:	jmp    QWORD PTR [rip+0x722a]        # 0x40b4c8
  40429e:	nop
  40429f:	nop
  4042a0:	jmp    QWORD PTR [rip+0x721a]        # 0x40b4c0
  4042a6:	nop
  4042a7:	nop
  4042a8:	jmp    QWORD PTR [rip+0x720a]        # 0x40b4b8
  4042ae:	nop
  4042af:	nop
  4042b0:	jmp    QWORD PTR [rip+0x71fa]        # 0x40b4b0
  4042b6:	nop
  4042b7:	nop
  4042b8:	jmp    QWORD PTR [rip+0x71ea]        # 0x40b4a8
  4042be:	nop
  4042bf:	nop
  4042c0:	jmp    QWORD PTR [rip+0x71da]        # 0x40b4a0
  4042c6:	nop
  4042c7:	nop
  4042c8:	jmp    QWORD PTR [rip+0x71ca]        # 0x40b498
  4042ce:	nop
  4042cf:	nop
  4042d0:	jmp    QWORD PTR [rip+0x71ba]        # 0x40b490
  4042d6:	nop
  4042d7:	nop
  4042d8:	jmp    QWORD PTR [rip+0x71aa]        # 0x40b488
  4042de:	nop
  4042df:	nop
  4042e0:	jmp    QWORD PTR [rip+0x719a]        # 0x40b480
  4042e6:	nop
  4042e7:	nop
  4042e8:	jmp    QWORD PTR [rip+0x718a]        # 0x40b478
  4042ee:	nop
  4042ef:	nop
  4042f0:	jmp    QWORD PTR [rip+0x717a]        # 0x40b470
  4042f6:	nop
  4042f7:	nop
  4042f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	(bad)  
  404301:	(bad)  
  404302:	(bad)  
  404303:	(bad)  
  404304:	(bad)  
  404305:	(bad)  
  404306:	(bad)  
  404307:	inc    DWORD PTR [rax]
  404309:	add    BYTE PTR [rax],al
  40430b:	add    BYTE PTR [rax],al
  40430d:	add    BYTE PTR [rax],al
  40430f:	add    bh,bh
  404311:	(bad)  
  404312:	(bad)  
  404313:	(bad)  
  404314:	(bad)  
  404315:	(bad)  
  404316:	(bad)  
  404317:	inc    DWORD PTR [rax]
  404319:	add    BYTE PTR [rax],al
  40431b:	add    BYTE PTR [rax],al
  40431d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	(bad)  
  405011:	(bad)  
  405012:	(bad)  
  405013:	inc    DWORD PTR [rax]
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rax+0x6a],ah
  405042:	add    BYTE PTR [rax],al
  405045:	add    BYTE PTR [rax],al
  405047:	add    al,bh
  405049:	sbb    BYTE PTR [rax+0x0],al
  40504c:	add    BYTE PTR [rax],al
  40504e:	add    BYTE PTR [rax],al
  405050:	imul   ebp,DWORD PTR [rdx+0x40],0x0
  405054:	add    BYTE PTR [rax],al
  405056:	add    BYTE PTR [rax],al
  405058:	mov    bh,0x17
  40505a:	add    BYTE PTR [rax],al
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rax+0x6a],dh
  405062:	add    BYTE PTR [rax],al
  405065:	add    BYTE PTR [rax],al
  405067:	add    BYTE PTR [rsi+0x1c],dl
  40506a:	add    BYTE PTR [rax],al
	...
  40507d:	add    BYTE PTR [rax],al
  40507f:	add    BYTE PTR [rax],bl
  405081:	rex.XB
  405082:	add    BYTE PTR [rax],al
	...
  40508d:	add    BYTE PTR [rax],al
  40508f:	add    bh,bh
  405091:	(bad)  
  405092:	(bad)  
  405093:	(bad)  
  405094:	(bad)  
  405095:	(bad)  
  405096:	(bad)  
  405097:	inc    DWORD PTR [rax]
  405099:	add    BYTE PTR [rax],al
  40509b:	add    BYTE PTR [rax],al
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    bh,bh
	...
  4050ad:	add    BYTE PTR [rax],al
  4050af:	add    BYTE PTR [rdx],al
	...
  4050bd:	add    BYTE PTR [rax],al
  4050bf:	add    bh,bh
  4050c1:	(bad)  
  4050c2:	(bad)  
  4050c3:	inc    DWORD PTR [rax]
	...
  4050cd:	add    BYTE PTR [rax],al
  4050cf:	add    BYTE PTR [rax],ah
  4050d1:	rex.X
  4050d2:	add    BYTE PTR [rax],al
  4050d5:	add    BYTE PTR [rax],al
  4050d7:	add    BYTE PTR [rax],dh
  4050d9:	rex.X
  4050da:	add    BYTE PTR [rax],al
  4050dd:	add    BYTE PTR [rax],al
  4050df:	add    BYTE PTR [rdx],dh
  4050e1:	movabs ds:0x2b992ddf,al
  4050ea:	add    BYTE PTR [rax],al
  4050ec:	add    BYTE PTR [rax],al
  4050ee:	add    BYTE PTR [rax],al
  4050f0:	int    0x5d
  4050f2:	and    dl,dl
  4050f4:	data16 (bad) 
  4050f6:	(bad)  
  4050f7:	inc    DWORD PTR [rax]
  4050f9:	add    BYTE PTR [rax],al
  4050fb:	add    BYTE PTR [rax],al
  4050fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	push   rbp
  406001:	jae    0x406064
  406003:	cmp    ah,BYTE PTR gs:[eax]
  406007:	fs (bad) 
  406009:	jne    0x40607e
  40600b:	sub    eax,0x74736574
  406010:	sub    eax,0x6c6f6f74
  406015:	and    BYTE PTR [rbp+0x63],ah
  406018:	push   0x4f5b206f
  40601d:	push   rax
  40601e:	push   rsp
  40601f:	rex.WB
  406020:	rex.WRXB
  406021:	rex.WRX push rbx
  406023:	pop    rbp
  406024:	or     cl,BYTE PTR [rdx]
  406026:	push   rdx
  406027:	gs jae 0x40609a
  40602a:	outs   dx,DWORD PTR ds:[rsi]
  40602b:	outs   dx,BYTE PTR ds:[rsi]
  40602c:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  406031:	(bad)  
  406032:	ins    BYTE PTR es:[rdi],dx
  406033:	ins    BYTE PTR es:[rdi],dx
  406034:	and    BYTE PTR [rbp+0x65],ch
  406037:	je     0x4060a1
  406039:	outs   dx,DWORD PTR ds:[rsi]
  40603a:	and    BYTE PTR fs:[rbx+0x61],ah
  40603e:	ins    BYTE PTR es:[rdi],dx
  40603f:	ins    BYTE PTR es:[rdi],dx
  406040:	jae    0x406062
  406042:	ja     0x4060ad
  406044:	je     0x4060ae
  406046:	and    BYTE PTR [rcx+0x6e],ah
  406049:	and    BYTE PTR [rbp+0x6d],ah
  40604c:	jo     0x4060c2
  40604e:	jns    0x406070
  406050:	jb     0x4060b7
  406052:	jo     0x4060c0
  406054:	jns    0x406084
  406056:	or     cl,BYTE PTR [rdx]
  406058:	rex.WRXB jo 0x4060cf
  40605b:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  406062:	and    BYTE PTR [rax],ah
  406064:	and    BYTE PTR [rax],ah
  406066:	sub    eax,0x6d616e2d
  40606b:	gs cmp eax,0x454d414e
  406071:	and    BYTE PTR [rax],ah
  406073:	and    BYTE PTR [rbx+0x6c],ah
  406076:	(bad)  
  406077:	imul   ebp,DWORD PTR [rbp+0x20],0x73696874
  40607e:	and    BYTE PTR [rdi+0x65],dh
  406081:	ins    BYTE PTR es:[rdi],dx
  406082:	ins    BYTE PTR es:[rdi],dx
  406083:	sub    eax,0x776f6e6b
  406088:	outs   dx,BYTE PTR ds:[rsi]
  406089:	and    BYTE PTR [rsi+0x61],ch
  40608c:	ins    DWORD PTR es:[rdi],dx
  40608d:	and    BYTE PTR gs:[rsi+0x69],ah
  406091:	jb     0x406106
  406093:	je     0x40609f
  406095:	or     ah,BYTE PTR [rax]
  406097:	and    BYTE PTR [rax],ah
  406099:	and    BYTE PTR [rip+0x656c732d],ch        # 0x65acd3cc
  40609f:	gs jo  0x4060df
  4060a2:	rex.WRX and BYTE PTR [rax],r12b
  4060a5:	and    BYTE PTR [rax],ah
  4060a7:	and    BYTE PTR [rbx+0x6c],dh
  4060aa:	gs gs jo 0x4060ce
  4060ae:	rex.WRX and BYTE PTR [rbp+0x69],r13b
  4060b2:	ins    BYTE PTR es:[rdi],dx
  4060b3:	ins    BYTE PTR es:[rdi],dx
  4060b4:	imul   esi,DWORD PTR [rbx+0x65],0x646e6f63
  4060bb:	jae    0x4060dd
  4060bd:	(bad)  
  4060be:	outs   dx,WORD PTR gs:[rsi]
  4060c1:	jb     0x406128
  4060c3:	and    BYTE PTR [rbx+0x65],dh
  4060c6:	outs   dx,BYTE PTR ds:[rsi]
  4060c7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x63616520
  4060cf:	push   0x70657220
  4060d4:	ins    BYTE PTR es:[rdi],dx
  4060d5:	jns    0x4060e1
  4060d7:	or     ah,BYTE PTR [rax]
  4060d9:	and    BYTE PTR [rax],ah
  4060db:	and    BYTE PTR [rip+0x7365732d],ch        # 0x73a5d40e
  4060e1:	jae    0x40614c
  4060e3:	outs   dx,DWORD PTR ds:[rsi]
  4060e4:	outs   dx,BYTE PTR ds:[rsi]
  4060e5:	and    BYTE PTR [rax],ah
  4060e7:	and    BYTE PTR [rax],ah
  4060e9:	and    BYTE PTR [rbp+0x73],dh
  4060ec:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4060f1:	and    BYTE PTR [rbx+0x65],dh
  4060f4:	jae    0x406169
  4060f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x73756220
  4060fd:	and    BYTE PTR [rax],ch
  4060ff:	fs gs data16 (bad) 
  406103:	jne    0x406171
  406105:	je     0x406130
  406107:	or     ah,BYTE PTR [rax]
  406109:	and    BYTE PTR [rax],ah
  40610b:	and    BYTE PTR [rip+0x7379732d],ch        # 0x73b9d43e
  406111:	je     0x406178
  406113:	ins    DWORD PTR es:[rdi],dx
  406114:	and    BYTE PTR [rax],ah
  406116:	and    BYTE PTR [rax],ah
  406118:	and    BYTE PTR [rax],ah
  40611a:	jne    0x40618f
  40611c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  406121:	and    BYTE PTR [rbx+0x79],dh
  406124:	jae    0x40619a
  406126:	gs ins DWORD PTR es:[rdi],dx
  406128:	and    BYTE PTR [rdx+0x75],ah
  40612b:	jae    0x406137
  40612d:	add    BYTE PTR [rax],al
  40612f:	add    BYTE PTR [rbp+0x73],dl
  406132:	(bad)  
  406133:	cmp    ah,BYTE PTR gs:[eax]
  406137:	fs (bad) 
  406139:	jne    0x4061ae
  40613b:	sub    eax,0x74736574
  406140:	sub    eax,0x6c6f6f74
  406145:	and    BYTE PTR [rdx+0x6c],ah
  406148:	(bad)  
  406149:	movsxd ebp,DWORD PTR [rbx+0x2d]
  40614c:	push   0x20656c6f
  406151:	pop    rbx
  406152:	rex.WRXB push r8
  406154:	push   rsp
  406155:	rex.WB
  406156:	rex.WRXB
  406157:	rex.WRX push rbx
  406159:	pop    rbp
  40615a:	or     cl,BYTE PTR [rdx]
  40615c:	push   rdx
  40615d:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  406161:	jbe    0x4061c8
  406163:	and    BYTE PTR [rbp+0x65],ch
  406166:	je     0x4061d0
  406168:	outs   dx,DWORD PTR ds:[rsi]
  406169:	and    BYTE PTR fs:[rbx+0x61],ah
  40616d:	ins    BYTE PTR es:[rdi],dx
  40616e:	ins    BYTE PTR es:[rdi],dx
  40616f:	jae    0x406191
  406171:	(bad)  
  406172:	jne    0x4061e8
  406174:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  406178:	outs   dx,BYTE PTR ds:[rsi]
  406179:	outs   dx,DWORD PTR ds:[rsi]
  40617a:	je     0x40619c
  40617c:	jb     0x4061e3
  40617e:	jo     0x4061ec
  406180:	jns    0x4061b0
  406182:	or     cl,BYTE PTR [rdx]
  406184:	rex.WRXB jo 0x4061fb
  406187:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  40618e:	and    BYTE PTR [rax],ah
  406190:	and    BYTE PTR [rax],ah
  406192:	sub    eax,0x6d616e2d
  406197:	gs cmp eax,0x454d414e
  40619d:	and    BYTE PTR [rax],ah
  40619f:	and    BYTE PTR [rbx+0x6c],ah
  4061a2:	(bad)  
  4061a3:	imul   ebp,DWORD PTR [rbp+0x20],0x73696874
  4061aa:	and    BYTE PTR [rdi+0x65],dh
  4061ad:	ins    BYTE PTR es:[rdi],dx
  4061ae:	ins    BYTE PTR es:[rdi],dx
  4061af:	sub    eax,0x776f6e6b
  4061b4:	outs   dx,BYTE PTR ds:[rsi]
  4061b5:	and    BYTE PTR [rsi+0x61],ch
  4061b8:	ins    DWORD PTR es:[rdi],dx
  4061b9:	and    BYTE PTR gs:[rsi+0x69],ah
  4061bd:	jb     0x406232
  4061bf:	je     0x4061cb
  4061c1:	or     ah,BYTE PTR [rax]
  4061c3:	and    BYTE PTR [rax],ah
  4061c5:	and    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2dafcff8
  4061cb:	jb     0x406232
  4061cd:	(bad)  
  4061ce:	and    BYTE PTR fs:[rax],ah
  4061d1:	and    BYTE PTR [rax],ah
  4061d3:	and    BYTE PTR [rdi+rbp*2+0x6e],ah
  4061d7:	(bad)  
  4061d8:	je     0x4061fa
  4061da:	jb     0x406241
  4061dc:	(bad)  
  4061dd:	and    BYTE PTR fs:[rcx+0x6e],ah
  4061e1:	jns    0x406257
  4061e3:	push   0x20676e69
  4061e8:	outs   dx,DWORD PTR ds:[rsi]
  4061e9:	outs   dx,BYTE PTR ds:[rsi]
  4061ea:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4061ee:	and    BYTE PTR [rbp+rbp*1+0x42],al
  4061f2:	jne    0x406267
  4061f4:	and    BYTE PTR [rbx+0x6f],dh
  4061f7:	movsxd ebp,DWORD PTR [rbx+0x65]
  4061fa:	je     0x406206
  4061fc:	or     ah,BYTE PTR [rax]
  4061fe:	and    BYTE PTR [rax],ah
  406200:	and    BYTE PTR [rip+0x7365732d],ch        # 0x73a5d533
  406206:	jae    0x406271
  406208:	outs   dx,DWORD PTR ds:[rsi]
  406209:	outs   dx,BYTE PTR ds:[rsi]
  40620a:	and    BYTE PTR [rax],ah
  40620c:	and    BYTE PTR [rax],ah
  40620e:	and    BYTE PTR [rbp+0x73],dh
  406211:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  406216:	and    BYTE PTR [rbx+0x65],dh
  406219:	jae    0x40628e
  40621b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73756220
  406222:	and    BYTE PTR [rax],ch
  406224:	fs gs data16 (bad) 
  406228:	jne    0x406296
  40622a:	je     0x406255
  40622c:	or     ah,BYTE PTR [rax]
  40622e:	and    BYTE PTR [rax],ah
  406230:	and    BYTE PTR [rip+0x7379732d],ch        # 0x73b9d563
  406236:	je     0x40629d
  406238:	ins    DWORD PTR es:[rdi],dx
  406239:	and    BYTE PTR [rax],ah
  40623b:	and    BYTE PTR [rax],ah
  40623d:	and    BYTE PTR [rax],ah
  40623f:	jne    0x4062b4
  406241:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  406246:	and    BYTE PTR [rbx+0x79],dh
  406249:	jae    0x4062bf
  40624b:	gs ins DWORD PTR es:[rdi],dx
  40624d:	and    BYTE PTR [rdx+0x75],ah
  406250:	jae    0x40625c
  406252:	add    BYTE PTR [rcx+0x6c],ah
  406255:	ins    BYTE PTR es:[rdi],dx
  406256:	outs   dx,DWORD PTR ds:[rsi]
  406257:	movsxd esp,DWORD PTR [rcx+0x74]
  40625a:	imul   ebp,DWORD PTR [rsi+0x67],0x70657220
  406261:	ins    BYTE PTR es:[rdi],dx
  406262:	jns    0x406264
  406264:	jae    0x4062cb
  406266:	outs   dx,BYTE PTR ds:[rsi]
  406267:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70657220
  40626f:	ins    BYTE PTR es:[rdi],dx
  406270:	jns    0x406272
  406272:	add    BYTE PTR [rax],al
  406274:	add    BYTE PTR [rax],al
  406276:	add    BYTE PTR [rax],al
  406278:	rex.RX (bad) 
  40627a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  406282:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406285:	outs   dx,BYTE PTR ds:[rsi]
  406286:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  40628b:	outs   dx,DWORD PTR ds:[rsi]
  40628c:	and    BYTE PTR [rdx+0x75],ah
  40628f:	jae    0x4062cb
  406291:	and    BYTE PTR [rip+0x25203a73],ah        # 0x25609d0a
  406297:	jae    0x4062a3
  406299:	add    BYTE PTR [rsi+0x61],ah
  40629c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4062a4:	je     0x406307
  4062a6:	imul   esp,DWORD PTR [rbp+0x20],0x62
  4062aa:	jne    0x40631f
  4062ac:	and    BYTE PTR [rsi+0x61],ch
  4062af:	ins    DWORD PTR es:[rdi],dx
  4062b0:	and    BYTE PTR gs:[rip+0x61000a73],ah        # 0x61406d2a
  4062b7:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x73656d20
  4062c0:	jae    0x406323
  4062c2:	and    BYTE PTR gs:[esi+0x69],ah
  4062c7:	ins    BYTE PTR es:[rdi],dx
  4062c8:	je     0x40632f
  4062ca:	jb     0x4062cc
  4062cc:	sub    eax,0x7379732d
  4062d1:	je     0x406338
  4062d3:	ins    DWORD PTR es:[rdi],dx
  4062d4:	add    BYTE PTR [rip+0x7365732d],ch        # 0x73a5d607
  4062da:	jae    0x406345
  4062dc:	outs   dx,DWORD PTR ds:[rsi]
  4062dd:	outs   dx,BYTE PTR ds:[rsi]
  4062de:	add    BYTE PTR [rip+0x6d616e2d],ch        # 0x6da1d111
  4062e4:	gs cmp eax,0x732d2d00
  4062ea:	ins    BYTE PTR es:[rdi],dx
  4062eb:	gs gs jo 0x40631c
  4062ef:	ins    DWORD PTR es:[rdi],dx
  4062f0:	jae    0x40632f
  4062f2:	add    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2dafd125
  4062f8:	jb     0x40635f
  4062fa:	(bad)  
  4062fb:	add    BYTE PTR fs:[rax],al
  4062fe:	add    BYTE PTR [rax],al
  406300:	push   rbp
  406301:	jae    0x406364
  406303:	cmp    ah,BYTE PTR gs:[eax]
  406307:	fs (bad) 
  406309:	jne    0x40637e
  40630b:	sub    eax,0x74736574
  406310:	sub    eax,0x6c6f6f74
  406315:	and    BYTE PTR [rbx+0x70],dh
  406318:	(bad)  
  406319:	ins    DWORD PTR es:[rdi],dx
  40631a:	and    BYTE PTR [rbx+0x4f],bl
  40631d:	push   rax
  40631e:	push   rsp
  40631f:	rex.WB
  406320:	rex.WRXB
  406321:	rex.WRX push rbx
  406323:	pop    rbp
  406324:	or     cl,BYTE PTR [rdx]
  406326:	push   rdx
  406327:	gs jo  0x40638f
  40632a:	(bad)  
  40632b:	je     0x406392
  40632d:	fs ins BYTE PTR es:[rdi],dx
  40632f:	jns    0x406351
  406331:	movsxd esp,DWORD PTR [rcx+0x6c]
  406334:	ins    BYTE PTR es:[rdi],dx
  406335:	and    BYTE PTR [rbx+0x6f],ah
  406338:	ins    DWORD PTR es:[rdi],dx
  406339:	cs gs js 0x40639e
  40633d:	ins    DWORD PTR es:[rdi],dx
  40633e:	jo     0x4063ac
  406340:	gs cs push rbx
  406343:	jo     0x4063a6
  406345:	ins    DWORD PTR es:[rdi],dx
  406346:	sub    BYTE PTR [rcx],ch
  406348:	and    BYTE PTR [rdi+0x6e],ch
  40634b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40634f:	and    BYTE PTR [rdi+0x69],ah
  406352:	jbe    0x4063b9
  406354:	outs   dx,BYTE PTR ds:[rsi]
  406355:	and    BYTE PTR [rbp+rbp*1+0x42],al
  406359:	jne    0x4063ce
  40635b:	and    BYTE PTR [rbx+0x65],dh
  40635e:	jb     0x4063d6
  406360:	imul   esp,DWORD PTR [rbx+0x65],0x4f0a0a2e
  406367:	jo     0x4063dd
  406369:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  406370:	and    BYTE PTR [rax],ah
  406372:	and    BYTE PTR [rax],ah
  406374:	sub    eax,0x7365732d
  406379:	jae    0x4063e4
  40637b:	outs   dx,DWORD PTR ds:[rsi]
  40637c:	outs   dx,BYTE PTR ds:[rsi]
  40637d:	and    BYTE PTR [rax],ah
  40637f:	and    BYTE PTR [rax],ah
  406381:	and    BYTE PTR [rbp+0x73],dh
  406384:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  406389:	and    BYTE PTR [rbx+0x65],dh
  40638c:	jae    0x406401
  40638e:	imul   ebp,DWORD PTR [rdi+0x6e],0x73756220
  406395:	and    BYTE PTR [rax],ch
  406397:	fs gs data16 (bad) 
  40639b:	jne    0x406409
  40639d:	je     0x4063c8
  40639f:	or     ah,BYTE PTR [rax]
  4063a1:	and    BYTE PTR [rax],ah
  4063a3:	and    BYTE PTR [rip+0x7379732d],ch        # 0x73b9d6d6
  4063a9:	je     0x406410
  4063ab:	ins    DWORD PTR es:[rdi],dx
  4063ac:	and    BYTE PTR [rax],ah
  4063ae:	and    BYTE PTR [rax],ah
  4063b0:	and    BYTE PTR [rax],ah
  4063b2:	jne    0x406427
  4063b4:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4063b9:	and    BYTE PTR [rbx+0x79],dh
  4063bc:	jae    0x406432
  4063be:	gs ins DWORD PTR es:[rdi],dx
  4063c0:	and    BYTE PTR [rdx+0x75],ah
  4063c3:	jae    0x4063cf
  4063c5:	or     ah,BYTE PTR [rax]
  4063c7:	and    BYTE PTR [rax],ah
  4063c9:	and    BYTE PTR [rip+0x6e67692d],ch        # 0x6ea7ccfc
  4063cf:	outs   dx,DWORD PTR ds:[rsi]
  4063d0:	jb     0x406437
  4063d2:	sub    eax,0x6f727265
  4063d7:	jb     0x40644c
  4063d9:	and    BYTE PTR [rax],ah
  4063db:	and    BYTE PTR [rax],ah
  4063dd:	imul   esp,DWORD PTR [rdi+0x6e],0x2065726f
  4063e4:	gs jb  0x406459
  4063e7:	outs   dx,DWORD PTR ds:[rsi]
  4063e8:	jb     0x40645d
  4063ea:	or     ah,BYTE PTR [rax]
  4063ec:	and    BYTE PTR [rax],ah
  4063ee:	and    BYTE PTR [rip+0x7365642d],ch        # 0x73a5c821
  4063f4:	je     0x406433
  4063f6:	rex.WRX
  4063f7:	rex.B
  4063f8:	rex.WRB
  4063f9:	and    BYTE PTR [r8],r12b
  4063fc:	and    BYTE PTR [rbx+0x61],ah
  4063ff:	ins    BYTE PTR es:[rdi],dx
  406400:	ins    BYTE PTR es:[rdi],dx
  406401:	and    BYTE PTR [rbp+0x65],ch
  406404:	je     0x40646e
  406406:	outs   dx,DWORD PTR ds:[rsi]
  406407:	fs jae 0x40642a
  40640a:	outs   dx,DWORD PTR ds:[rsi]
  40640b:	outs   dx,BYTE PTR ds:[rsi]
  40640c:	and    BYTE PTR [rsi+0x41],cl
  40640f:	rex.WRB
  406410:	and    BYTE PTR [r8],r13b
  406413:	fs gs data16 (bad) 
  406417:	jne    0x406485
  406419:	je     0x40643b
  40641b:	outs   dx,DWORD PTR ds:[rsi]
  40641c:	jb     0x406485
  40641e:	cs data16 jb 0x406487
  406422:	gs fs gs jae 0x406492
  406427:	je     0x406498
  406429:	jo     0x406459
  40642b:	rex.R
  40642c:	rex.X jne 0x4064a2
  40642f:	sub    DWORD PTR [rdx],ecx
  406431:	or     ah,BYTE PTR [rax]
  406433:	and    BYTE PTR [rax],ah
  406435:	and    BYTE PTR [rip+0x756f632d],ch        # 0x75afc768
  40643b:	outs   dx,BYTE PTR ds:[rsi]
  40643c:	je     0x40647b
  40643e:	rex.WRX and BYTE PTR [rax],r12b
  406441:	and    BYTE PTR [rax],ah
  406443:	and    BYTE PTR [rbx+0x65],dh
  406446:	outs   dx,BYTE PTR ds:[rsi]
  406447:	and    BYTE PTR fs:[rsi+0x20],cl
  40644b:	ins    DWORD PTR es:[rdi],dx
  40644c:	gs jae 0x4064c2
  40644f:	(bad)  
  406450:	addr32 gs jae 0x406474
  406454:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  406458:	(bad)  
  406459:	jne    0x4064c7
  40645b:	je     0x40647d
  40645d:	xor    DWORD PTR [rcx],ebp
  40645f:	or     ah,BYTE PTR [rax]
  406461:	and    BYTE PTR [rax],ah
  406463:	and    BYTE PTR [rip+0x6575712d],ch        # 0x65b5d596
  406469:	jne    0x4064d0
  40646b:	cmp    eax,0x2020204e
  406470:	and    BYTE PTR [rax],ah
  406472:	jno    0x4064e9
  406474:	gs jne 0x4064dc
  406477:	and    BYTE PTR [rbp+0x70],dh
  40647a:	and    BYTE PTR [rsi+0x20],cl
  40647d:	ins    DWORD PTR es:[rdi],dx
  40647e:	gs jae 0x4064f4
  406481:	(bad)  
  406482:	addr32 gs jae 0x4064a6
  406486:	(bad)  
  406487:	je     0x4064a9
  406489:	(bad)  
  40648a:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  40648e:	and    BYTE PTR gs:[rax],ch
  406491:	fs gs data16 (bad) 
  406495:	jne    0x406503
  406497:	je     0x4064b9
  406499:	xor    DWORD PTR [rcx],ebp
  40649b:	or     ah,BYTE PTR [rax]
  40649d:	and    BYTE PTR [rax],ah
  40649f:	and    BYTE PTR [rip+0x6f6c662d],ch        # 0x6faccad2
  4064a5:	outs   dx,DWORD PTR ds:[rsi]
  4064a6:	and    BYTE PTR fs:[rax],ah
  4064a9:	and    BYTE PTR [rax],ah
  4064ab:	and    BYTE PTR [rax],ah
  4064ad:	and    BYTE PTR [rbx+0x65],dh
  4064b0:	outs   dx,BYTE PTR ds:[rsi]
  4064b1:	and    BYTE PTR fs:[rcx+0x6c],ah
  4064b5:	ins    BYTE PTR es:[rdi],dx
  4064b6:	and    BYTE PTR [rbp+0x65],ch
  4064b9:	jae    0x40652e
  4064bb:	(bad)  
  4064bc:	addr32 gs jae 0x4064e0
  4064c0:	imul   ebp,DWORD PTR [rbp+0x6d],0x61696465
  4064c7:	je     0x40652e
  4064c9:	ins    BYTE PTR es:[rdi],dx
  4064ca:	jns    0x4064d6
  4064cc:	and    BYTE PTR [rax],ah
  4064ce:	and    BYTE PTR [rax],ah
  4064d0:	sub    eax,0x2d6f6e2d
  4064d5:	jb     0x40653c
  4064d7:	jo     0x406545
  4064d9:	jns    0x4064fb
  4064db:	and    BYTE PTR [rax],ah
  4064dd:	and    BYTE PTR [rbx+0x65],dh
  4064e0:	je     0x406502
  4064e2:	je     0x40654c
  4064e4:	and    BYTE PTR gs:[rsi+0x4f],cl
  4064e8:	pop    rdi
  4064e9:	push   rdx
  4064ea:	rex.RB push r8
  4064ec:	rex.WR pop rcx
  4064ee:	and    BYTE PTR [rsi+0x6c],ah
  4064f1:	(bad)  
  4064f2:	and    BYTE PTR [eax],ch
  4064f5:	imul   ebp,DWORD PTR [rbp+0x70],0x7365696c
  4064fc:	and    BYTE PTR [rip+0x6f6c662d],ch        # 0x6faccb2f
  406502:	outs   dx,DWORD PTR ds:[rsi]
  406503:	sub    DWORD PTR fs:[rdx],ecx
  406506:	and    BYTE PTR [rax],ah
  406508:	and    BYTE PTR [rax],ah
  40650a:	sub    eax,0x73656d2d
  40650f:	jae    0x406572
  406511:	addr32 gs jae 0x406542
  406515:	jo     0x40657c
  406517:	jb     0x406546
  406519:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40651c:	outs   dx,BYTE PTR ds:[rsi]
  40651d:	cmp    eax,0x2020204e
  406522:	(bad)  
  406523:	data16 je 0x40658b
  406526:	jb     0x406548
  406528:	jae    0x40658f
  40652a:	outs   dx,BYTE PTR ds:[rsi]
  40652b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73656d20
  406533:	jae    0x406596
  406535:	addr32 gs jae 0x406566
  406539:	jo     0x4065a0
  40653b:	jb     0x40656a
  40653d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406540:	outs   dx,BYTE PTR ds:[rsi]
  406541:	sub    al,0x20
  406543:	ja     0x4065a6
  406545:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x20202020
  40654d:	and    BYTE PTR [rax],ah
  40654f:	and    BYTE PTR [rax],ah
  406551:	and    BYTE PTR [rax],ah
  406553:	and    BYTE PTR [rax],ah
  406555:	and    BYTE PTR [rax],ah
  406557:	and    BYTE PTR [rax],ah
  406559:	and    BYTE PTR [rsi+0x6f],ah
  40655c:	jb     0x40657e
  40655e:	je     0x4065c8
  406560:	and    BYTE PTR gs:[rax+0x65],dh
  406564:	outs   dx,BYTE PTR ds:[rsi]
  406565:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70657220
  40656d:	ins    BYTE PTR es:[rdi],dx
  40656e:	imul   esp,DWORD PTR [rbp+0x73],0x20666920
  406575:	(bad)  
  406576:	outs   dx,BYTE PTR ds:[rsi]
  406577:	jns    0x4065a5
  406579:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40657d:	outs   dx,BYTE PTR ds:[rsi]
  40657e:	and    BYTE PTR [rdx+0x65],dh
  406581:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406584:	outs   dx,BYTE PTR ds:[rsi]
  406585:	movsxd esi,DWORD PTR gs:[rdx+rcx*1+0x20]
  40658a:	and    BYTE PTR [rax],ah
  40658c:	and    BYTE PTR [rax],ah
  40658e:	and    BYTE PTR [rax],ah
  406590:	and    BYTE PTR [rax],ah
  406592:	and    BYTE PTR [rax],ah
  406594:	and    BYTE PTR [rax],ah
  406596:	and    BYTE PTR [rax],ah
  406598:	and    BYTE PTR [rax],ah
  40659a:	and    BYTE PTR [rax],ch
  40659c:	fs gs data16 (bad) 
  4065a0:	jne    0x40660e
  4065a2:	je     0x4065de
  4065a4:	and    BYTE PTR [rdi+rbp*2+0x6e],ah
  4065a8:	(bad)  
  4065a9:	je     0x4065cb
  4065ab:	jb     0x406612
  4065ad:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4065b0:	outs   dx,BYTE PTR ds:[rsi]
  4065b1:	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0xa]
  4065b6:	or     ah,BYTE PTR [rax]
  4065b8:	and    BYTE PTR [rax],ah
  4065ba:	and    BYTE PTR [rip+0x7274732d],ch        # 0x72b4d8ed
  4065c0:	imul   ebp,DWORD PTR [rsi+0x67],0x20202020
  4065c7:	and    BYTE PTR [rax],ah
  4065c9:	jae    0x406630
  4065cb:	outs   dx,BYTE PTR ds:[rsi]
  4065cc:	and    BYTE PTR fs:[rax+0x61],dh
  4065d0:	jns    0x40663e
  4065d2:	outs   dx,DWORD PTR ds:[rsi]
  4065d3:	(bad)  
  4065d4:	and    BYTE PTR fs:[rcx+0x73],ah
  4065d8:	and    BYTE PTR [rcx+0x20],ah
  4065db:	jae    0x406651
  4065dd:	jb     0x406648
  4065df:	outs   dx,BYTE PTR ds:[rsi]
  4065e0:	and    BYTE PTR [eax],ch
  4065e3:	fs gs data16 (bad) 
  4065e7:	jne    0x406655
  4065e9:	je     0x406614
  4065eb:	or     ah,BYTE PTR [rax]
  4065ed:	and    BYTE PTR [rax],ah
  4065ef:	and    BYTE PTR [rip+0x7479622d],ch        # 0x74b9c822
  4065f5:	gs jae 0x406618
  4065f8:	and    BYTE PTR [rax],ah
  4065fa:	and    BYTE PTR [rax],ah
  4065fc:	and    BYTE PTR [rax],ah
  4065fe:	jae    0x406665
  406600:	outs   dx,BYTE PTR ds:[rsi]
  406601:	and    BYTE PTR fs:[rax+0x61],dh
  406605:	jns    0x406673
  406607:	outs   dx,DWORD PTR ds:[rsi]
  406608:	(bad)  
  406609:	and    BYTE PTR fs:[rcx+0x73],ah
  40660d:	and    BYTE PTR [rcx+0x20],ah
  406610:	(bad)  
  406611:	jns    0x406687
  406613:	gs sub eax,0x61727261
  406619:	jns    0x406625
  40661b:	and    BYTE PTR [rax],ah
  40661d:	and    BYTE PTR [rax],ah
  40661f:	sub    eax,0x706d652d
  406624:	je     0x40669f
  406626:	and    BYTE PTR [rax],ah
  406628:	and    BYTE PTR [rax],ah
  40662a:	and    BYTE PTR [rax],ah
  40662c:	and    BYTE PTR [rbx+0x65],dh
  40662f:	outs   dx,BYTE PTR ds:[rsi]
  406630:	and    BYTE PTR fs:[rcx+0x6e],ah
  406634:	and    BYTE PTR [rbp+0x6d],ah
  406637:	jo     0x4066ad
  406639:	jns    0x40665b
  40663b:	jo     0x40669e
  40663d:	jns    0x4066ab
  40663f:	outs   dx,DWORD PTR ds:[rsi]
  406640:	(bad)  
  406641:	or     cl,BYTE PTR fs:[rdx]
  406644:	and    BYTE PTR [rax],ah
  406646:	and    BYTE PTR [rax],ah
  406648:	sub    eax,0x7961702d
  40664d:	ins    BYTE PTR es:[rdi],dx
  40664e:	outs   dx,DWORD PTR ds:[rsi]
  40664f:	(bad)  
  406650:	fs cmp eax,0x20202053
  406656:	jne    0x4066cb
  406658:	and    BYTE PTR gs:[rbx+0x20],dl
  40665c:	(bad)  
  40665d:	jae    0x40667f
  40665f:	jo     0x4066c2
  406661:	jns    0x4066cf
  406663:	outs   dx,DWORD PTR ds:[rsi]
  406664:	(bad)  
  406665:	and    BYTE PTR fs:[rax],ch
  406668:	fs gs data16 (bad) 
  40666c:	jne    0x4066da
  40666e:	je     0x406690
  406670:	and    ch,BYTE PTR [rax+0x65]
  406673:	ins    BYTE PTR es:[rdi],dx
  406674:	ins    BYTE PTR es:[rdi],dx
  406675:	outs   dx,DWORD PTR ds:[rsi]
  406676:	sub    al,0x20
  406678:	ja     0x4066e9
  40667a:	jb     0x4066e8
  40667c:	and    DWORD PTR fs:[rdx],esp
  40667f:	sub    DWORD PTR [rdx],ecx
  406681:	and    BYTE PTR [rax],ah
  406683:	and    BYTE PTR [rax],ah
  406685:	sub    eax,0x6474732d
  40668a:	imul   ebp,DWORD PTR [rsi+0x20],0x20202020
  406691:	and    BYTE PTR [rax],ah
  406693:	jb     0x4066fa
  406695:	(bad)  
  406696:	and    BYTE PTR fs:[rax+0x61],dh
  40669a:	jns    0x406708
  40669c:	outs   dx,DWORD PTR ds:[rsi]
  40669d:	(bad)  
  40669e:	and    BYTE PTR fs:[rsi+0x72],ah
  4066a2:	outs   dx,DWORD PTR ds:[rsi]
  4066a3:	ins    DWORD PTR es:[rdi],dx
  4066a4:	and    BYTE PTR [rbx+0x74],dh
  4066a7:	imul   ebp,DWORD PTR fs:[rsi+0x2c],0x746e7520
  4066af:	imul   ebp,DWORD PTR [rax+riz*1+0x45],0x200a464f
  4066b7:	and    BYTE PTR [rax],ah
  4066b9:	and    BYTE PTR [rip+0x73656d2d],ch        # 0x73a5d3ec
  4066bf:	jae    0x406722
  4066c1:	addr32 gs sub eax,0x69647473
  4066c8:	outs   dx,BYTE PTR ds:[rsi]
  4066c9:	and    BYTE PTR [rax],ah
  4066cb:	and    BYTE PTR [rdx+0x65],dh
  4066ce:	(bad)  
  4066cf:	and    BYTE PTR fs:[rcx+0x20],ah
  4066d3:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4066d6:	jo     0x406744
  4066d8:	gs je  0x406740
  4066db:	and    BYTE PTR [rbp+rbp*1+0x42],al
  4066df:	jne    0x406754
  4066e1:	and    BYTE PTR [rbp+0x65],ch
  4066e4:	jae    0x406759
  4066e6:	(bad)  
  4066e7:	and    BYTE PTR gs:[esi+0x72],ah
  4066ec:	outs   dx,DWORD PTR ds:[rsi]
  4066ed:	ins    DWORD PTR es:[rdi],dx
  4066ee:	and    BYTE PTR [rbx+0x74],dh
  4066f1:	imul   ebp,DWORD PTR fs:[rsi+0xa],0x20202020
  4066f9:	sub    eax,0x6e61722d
  4066fe:	outs   dx,DWORD PTR fs:[rsi]
  406700:	ins    DWORD PTR es:[rdi],dx
  406701:	sub    eax,0x657a6973
  406706:	and    BYTE PTR [rdx+0x65],dh
  406709:	(bad)  
  40670a:	and    BYTE PTR fs:[rdi+0x68],dh
  40670e:	imul   esi,DWORD PTR [rbp+riz*2+0x73],0x65636170
  406716:	sub    eax,0x61706573
  40671b:	jb     0x40677e
  40671d:	je     0x406784
  40671f:	and    BYTE PTR fs:[rcx+0x53],al
  406723:	rex.XB
  406724:	rex.WB
  406725:	rex.WB and BYTE PTR [r13+riz*2+0x63],spl
  40672a:	imul   ebp,DWORD PTR [rbp+0x61],0x20200a6c
  406731:	and    BYTE PTR [rax],ah
  406733:	and    BYTE PTR [rax],ah
  406735:	and    BYTE PTR [rax],ah
  406737:	and    BYTE PTR [rax],ah
  406739:	and    BYTE PTR [rax],ah
  40673b:	and    BYTE PTR [rax],ah
  40673d:	and    BYTE PTR [rax],ah
  40673f:	and    BYTE PTR [rax],ah
  406741:	jo     0x4067a4
  406743:	jns    0x4067b1
  406745:	outs   dx,DWORD PTR ds:[rsi]
  406746:	(bad)  
  406747:	and    BYTE PTR fs:[rbx+0x69],dh
  40674b:	jp     0x4067b2
  40674d:	jae    0x40676f
  40674f:	data16 jb 0x4067c1
  406752:	ins    DWORD PTR es:[rdi],dx
  406753:	and    BYTE PTR [rbx+0x74],dh
  406756:	imul   ebp,DWORD PTR fs:[rsi+0x20],0x20646e61
  40675e:	jo     0x4067c9
  406760:	movsxd ebp,DWORD PTR [rbx+0x20]
  406763:	outs   dx,DWORD PTR ds:[rsi]
  406764:	outs   dx,BYTE PTR ds:[rsi]
  406765:	and    BYTE PTR gs:[rdx+0x61],dh
  406769:	outs   dx,BYTE PTR ds:[rsi]
  40676a:	outs   dx,DWORD PTR fs:[rsi]
  40676c:	ins    DWORD PTR es:[rdi],dx
  40676d:	ins    BYTE PTR es:[rdi],dx
  40676e:	jns    0x40677a
  406770:	and    BYTE PTR [rax],ah
  406772:	and    BYTE PTR [rax],ah
  406774:	and    BYTE PTR [rax],ah
  406776:	and    BYTE PTR [rax],ah
  406778:	and    BYTE PTR [rax],ah
  40677a:	and    BYTE PTR [rax],ah
  40677c:	and    BYTE PTR [rax],ah
  40677e:	and    BYTE PTR [rax],ah
  406780:	and    BYTE PTR [rax],ah
  406782:	outs   dx,WORD PTR ds:[rsi]
  406784:	jb     0x4067a6
  406786:	gs (bad) 
  406788:	movsxd ebp,DWORD PTR [rax+0x20]
  40678b:	ins    DWORD PTR es:[rdi],dx
  40678c:	gs jae 0x406802
  40678f:	(bad)  
  406790:	or     cl,BYTE PTR gs:[edx]
  406794:	and    BYTE PTR [rax],ah
  406796:	and    BYTE PTR [rax],ah
  406798:	sub    eax,0x6565732d
  40679d:	fs cmp eax,0x44454553
  4067a3:	and    BYTE PTR [rax],ah
  4067a5:	and    BYTE PTR [rbx+0x65],dh
  4067a8:	gs and BYTE PTR fs:[rsi+0x6f],ah
  4067ad:	jb     0x4067cf
  4067af:	jae    0x406823
  4067b1:	(bad)  
  4067b2:	outs   dx,BYTE PTR ds:[rsi]
  4067b3:	and    BYTE PTR fs:[rax],ch
  4067b6:	fs gs data16 (bad) 
  4067ba:	jne    0x406828
  4067bc:	je     0x4067de
  4067be:	imul   esi,DWORD PTR [rbx+0x20],0x656d6974
  4067c5:	sub    BYTE PTR [rcx],ch
  4067c7:	sub    DWORD PTR [rdx],ecx
  4067c9:	or     al,BYTE PTR [rax]
  4067cb:	add    BYTE PTR [rax],al
  4067cd:	add    BYTE PTR [rax],al
  4067cf:	add    BYTE PTR [rsi+0x61],al
  4067d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4067da:	jb     0x406841
  4067dc:	movsxd esp,DWORD PTR [rbp+0x69]
  4067df:	jbe    0x406846
  4067e1:	and    BYTE PTR [rdx+0x65],dh
  4067e4:	jo     0x406852
  4067e6:	jns    0x406808
  4067e8:	and    esp,DWORD PTR [rip+0x25203a64]        # 0x2560a252
  4067ee:	jae    0x40682a
  4067f0:	and    BYTE PTR [rip+0x72000a73],ah        # 0x72407269
  4067f6:	gs (bad) 
  4067f8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x79617020
  406800:	ins    BYTE PTR es:[rdi],dx
  406801:	outs   dx,DWORD PTR ds:[rsi]
  406802:	(bad)  
  406803:	and    BYTE PTR fs:[rsi+0x72],ah
  406807:	outs   dx,DWORD PTR ds:[rsi]
  406808:	ins    DWORD PTR es:[rdi],dx
  406809:	and    BYTE PTR [rbx+0x74],dh
  40680c:	imul   ebp,DWORD PTR fs:[rsi+0x0],0x2e67726f
  406814:	data16 jb 0x40687c
  406817:	gs fs gs jae 0x406887
  40681c:	je     0x40688d
  40681e:	jo     0x40684e
  406820:	rex.R
  406821:	rex.X jne 0x406897
  406824:	add    BYTE PTR [rip+0x7379732d],ch        # 0x73b9db57
  40682a:	je     0x406891
  40682c:	ins    DWORD PTR es:[rdi],dx
  40682d:	add    BYTE PTR [rip+0x7365732d],ch        # 0x73a5db60
  406833:	jae    0x40689e
  406835:	outs   dx,DWORD PTR ds:[rsi]
  406836:	outs   dx,BYTE PTR ds:[rsi]
  406837:	add    BYTE PTR [rip+0x756f632d],ch        # 0x75afcb6a
  40683d:	outs   dx,BYTE PTR ds:[rsi]
  40683e:	je     0x40687d
  406840:	add    BYTE PTR [rip+0x6e67692d],ch        # 0x6ea7d173
  406846:	outs   dx,DWORD PTR ds:[rsi]
  406847:	jb     0x4068ae
  406849:	sub    eax,0x6f727265
  40684e:	jb     0x4068c3
  406850:	add    BYTE PTR [rip+0x7365642d],ch        # 0x73a5cc83
  406856:	je     0x406895
  406858:	add    BYTE PTR [rip+0x7961702d],ch        # 0x79a1d88b
  40685e:	ins    BYTE PTR es:[rdi],dx
  40685f:	outs   dx,DWORD PTR ds:[rsi]
  406860:	(bad)  
  406861:	fs cmp eax,0x732d2d00
  406867:	je     0x4068cd
  406869:	imul   ebp,DWORD PTR [rsi+0x0],0x656d2d2d
  406870:	jae    0x4068e5
  406872:	(bad)  
  406873:	addr32 gs sub eax,0x69647473
  40687a:	outs   dx,BYTE PTR ds:[rsi]
  40687b:	add    BYTE PTR [rax],al
  40687d:	add    BYTE PTR [rax],al
  40687f:	add    BYTE PTR [rbp+0x6e],dl
  406882:	(bad)  
  406883:	(bad)  
  406884:	ins    BYTE PTR es:[rdi],dx
  406885:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40688a:	fs gs ins DWORD PTR es:[rdi],dx
  40688d:	(bad)  
  40688e:	jb     0x406903
  406890:	push   0x74206c61
  406895:	gs ins DWORD PTR es:[rdi],dx
  406897:	jo     0x406905
  406899:	(bad)  
  40689a:	je     0x406901
  40689c:	and    BYTE PTR [rbp+0x65],ch
  40689f:	jae    0x406914
  4068a1:	(bad)  
  4068a2:	cmp    ah,BYTE PTR gs:[eax]
  4068a6:	and    eax,0x25203a73
  4068ab:	jae    0x4068ad
  4068ad:	add    BYTE PTR [rax],al
  4068af:	add    BYTE PTR [rbp+riz*2+0x6d],dl
  4068b3:	jo     0x406921
  4068b5:	(bad)  
  4068b6:	je     0x40691d
  4068b8:	and    BYTE PTR [rbp+0x65],ch
  4068bb:	jae    0x406930
  4068bd:	(bad)  
  4068be:	and    BYTE PTR gs:[ebp+0x75],ch
  4068c3:	jae    0x406939
  4068c5:	and    BYTE PTR [rdx+0x65],ah
  4068c8:	and    BYTE PTR [rcx+0x20],ah
  4068cb:	ins    DWORD PTR es:[rdi],dx
  4068cc:	gs je  0x406937
  4068cf:	outs   dx,DWORD PTR ds:[rsi]
  4068d0:	and    BYTE PTR fs:[rbx+0x61],ah
  4068d4:	ins    BYTE PTR es:[rdi],dx
  4068d5:	ins    BYTE PTR es:[rdi],dx
  4068d6:	or     al,BYTE PTR [rax]
  4068d8:	sub    eax,0x6e61722d
  4068dd:	outs   dx,DWORD PTR fs:[rsi]
  4068df:	ins    DWORD PTR es:[rdi],dx
  4068e0:	sub    eax,0x657a6973
  4068e5:	add    BYTE PTR [rax],ah
  4068e7:	and    eax,0x6e252075
  4068ec:	add    BYTE PTR [rax],al
  4068ee:	add    BYTE PTR [rax],al
  4068f0:	(bad)  
  4068f1:	ins    BYTE PTR es:[rdi],dx
  4068f2:	ins    BYTE PTR es:[rdi],dx
  4068f3:	outs   dx,DWORD PTR ds:[rsi]
  4068f4:	movsxd esp,DWORD PTR [rcx+0x74]
  4068f7:	imul   ebp,DWORD PTR [rsi+0x67],0x72726120
  4068fe:	(bad)  
  4068ff:	jns    0x406921
  406901:	outs   dx,DWORD PTR ds:[rsi]
  406902:	data16 and BYTE PTR [rbp+0x65],ch
  406906:	jae    0x40697b
  406908:	(bad)  
  406909:	and    BYTE PTR gs:[ebp+eiz*2+0x6e],ch
  40690f:	addr32 je 0x40697a
  406912:	jae    0x406914
  406914:	add    BYTE PTR [rax],al
  406916:	add    BYTE PTR [rax],al
  406918:	(bad)  
  406919:	ins    BYTE PTR es:[rdi],dx
  40691a:	ins    BYTE PTR es:[rdi],dx
  40691b:	outs   dx,DWORD PTR ds:[rsi]
  40691c:	movsxd esp,DWORD PTR [rcx+0x74]
  40691f:	imul   ebp,DWORD PTR [rsi+0x67],0x78616d20
  406926:	imul   ebp,DWORD PTR [rbp+0x75],0x69732d6d
  40692d:	jp     0x406994
  40692f:	and    BYTE PTR fs:[rax+0x61],dh
  406933:	jns    0x4069a1
  406935:	outs   dx,DWORD PTR ds:[rsi]
  406936:	(bad)  
  406937:	add    BYTE PTR fs:[rip+0x706d652d],ch        # 0x70adce6b
  40693e:	je     0x4069b9
  406940:	add    BYTE PTR [rip+0x7274732d],ch        # 0x72b4dc73
  406946:	imul   ebp,DWORD PTR [rsi+0x67],0x622d2d00
  40694d:	jns    0x4069c3
  40694f:	gs jae 0x406952
  406952:	sub    eax,0x6f6c662d
  406957:	outs   dx,DWORD PTR ds:[rsi]
  406958:	add    BYTE PTR fs:[rip+0x2d6f6e2d],ch        # 0x2dafd78c
  40695f:	jb     0x4069c6
  406961:	jo     0x4069cf
  406963:	jns    0x406965
  406965:	sub    eax,0x6575712d
  40696a:	jne    0x4069d1
  40696c:	cmp    eax,0x732d2d00
  406971:	gs gs fs cmp eax,0x6d2d2d00
  406979:	gs jae 0x4069ef
  40697c:	(bad)  
  40697d:	addr32 gs jae 0x4069ae
  406981:	jo     0x4069e8
  406983:	jb     0x4069b2
  406985:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406988:	outs   dx,BYTE PTR ds:[rsi]
  406989:	cmp    eax,0x6c656800
  40698e:	ins    BYTE PTR es:[rdi],dx
  40698f:	outs   dx,DWORD PTR ds:[rsi]
  406990:	sub    al,0x20
  406992:	ja     0x406a03
  406994:	jb     0x406a02
  406996:	and    DWORD PTR fs:[rax],eax
  406999:	add    BYTE PTR [rax],al
  40699b:	add    BYTE PTR [rax],al
  40699d:	add    BYTE PTR [rax],al
  40699f:	add    BYTE PTR [rsi+0x61],al
  4069a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4069aa:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4069ad:	outs   dx,BYTE PTR ds:[rsi]
  4069ae:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4069b3:	outs   dx,DWORD PTR ds:[rsi]
  4069b4:	and    BYTE PTR [rdx+0x75],ah
  4069b7:	jae    0x4069f3
  4069b9:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2560a432
  4069bf:	jae    0x4069cb
  4069c1:	add    BYTE PTR [rbx+0x6f],ah
  4069c4:	jo     0x406a3f
  4069c6:	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
  4069cd:	jae    0x406a30
  4069cf:	add    BYTE PTR gs:[ebx+0x70],dl
  4069d4:	(bad)  
  4069d5:	ins    DWORD PTR es:[rdi],dx
  4069d6:	add    BYTE PTR [rbx+0x6f],ah
  4069d9:	ins    DWORD PTR es:[rdi],dx
  4069da:	cs gs js 0x406a3f
  4069de:	ins    DWORD PTR es:[rdi],dx
  4069df:	jo     0x406a4d
  4069e1:	add    BYTE PTR gs:[rdi],ch
  4069e4:	add    BYTE PTR [rcx+0x6c],ah
  4069e7:	ins    BYTE PTR es:[rdi],dx
  4069e8:	outs   dx,DWORD PTR ds:[rsi]
  4069e9:	movsxd esp,DWORD PTR [rcx+0x74]
  4069ec:	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
  4069f3:	jae    0x406a56
  4069f5:	add    BYTE PTR gs:[edx+0x75],ah
  4069fa:	imul   ebp,DWORD PTR [rsp+riz*2+0x69],0x6d20676e
  406a02:	gs jae 0x406a78
  406a05:	(bad)  
  406a06:	add    BYTE PTR gs:[ebx+0x65],dh
  406a0b:	outs   dx,BYTE PTR ds:[rsi]
  406a0c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73656d20
  406a14:	jae    0x406a77
  406a16:	add    BYTE PTR gs:[ebx+0x65],dh
  406a1b:	je     0x406a91
  406a1d:	imul   ebp,DWORD PTR [rsi+0x67],0x6e657020
  406a24:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c616320
  406a2c:	ins    BYTE PTR es:[rdi],dx
  406a2d:	and    BYTE PTR [rsi+0x6f],ch
  406a30:	je     0x406a9b
  406a32:	imul   sp,WORD PTR [rbp+0x72],0x4400
  406a38:	imul   esi,DWORD PTR [rbx+0x63],0x656e6e6f
  406a3f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  406a43:	and    BYTE PTR [rsi+0x72],ah
  406a46:	outs   dx,DWORD PTR ds:[rsi]
  406a47:	ins    DWORD PTR es:[rdi],dx
  406a48:	and    BYTE PTR [rdx+0x75],ah
  406a4b:	jae    0x406a57
  406a4d:	add    BYTE PTR [rax],al
  406a4f:	add    BYTE PTR [rdi+0x4f],cl
  406a52:	rex.WRB and BYTE PTR [r15+0x68],r14b
  406a56:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa7325
  406a5e:	add    BYTE PTR [rax],al
  406a60:	(bad)  
  406a61:	ins    BYTE PTR es:[rdi],dx
  406a62:	(bad)  
  406a63:	movsxd ebp,DWORD PTR [rbx+0x2d]
  406a66:	push   0x656c6f
  406a6b:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  406a6f:	add    BYTE PTR [rbx+0x70],dh
  406a72:	(bad)  
  406a73:	ins    DWORD PTR es:[rdi],dx
  406a74:	add    BYTE PTR [rax],al
  406a76:	add    BYTE PTR [rax],al
  406a78:	push   rbp
  406a79:	jae    0x406adc
  406a7b:	cmp    ah,BYTE PTR gs:[eax]
  406a7f:	fs (bad) 
  406a81:	jne    0x406af6
  406a83:	sub    eax,0x74736574
  406a88:	sub    eax,0x6c6f6f74
  406a8d:	and    BYTE PTR [rbx+0x55],dl
  406a90:	rex.X
  406a91:	rex.XB
  406a92:	rex.WRXB
  406a93:	rex.WRB
  406a94:	rex.WRB
  406a95:	rex.B
  406a96:	rex.WRX
  406a97:	and    BYTE PTR [rbx+0x4f],r11b
  406a9b:	push   rax
  406a9c:	push   rsp
  406a9d:	rex.WB
  406a9e:	rex.WRXB
  406a9f:	rex.WRX push rbx
  406aa1:	pop    rbp
  406aa2:	or     cl,BYTE PTR [rdx]
  406aa4:	rex.WXB outs dx,BYTE PTR ds:[rsi]
  406aa6:	outs   dx,DWORD PTR ds:[rsi]
  406aa7:	ja     0x406b17
  406aa9:	and    BYTE PTR [rbx+0x55],dl
  406aac:	rex.X
  406aad:	rex.XB
  406aae:	rex.WRXB
  406aaf:	rex.WRB
  406ab0:	rex.WRB
  406ab1:	rex.B
  406ab2:	rex.WRX
  406ab3:	rex.R jae 0x406ad6
  406ab6:	(bad)  
  406ab7:	jb     0x406b1e
  406ab9:	cmp    cl,BYTE PTR [rdx]
  406abb:	or     al,BYTE PTR [rax]
  406abd:	sub    eax,0xa732520
  406ac2:	add    BYTE PTR [rax],al
  406ac4:	add    BYTE PTR [rax],al
  406ac6:	add    BYTE PTR [rax],al
  406ac8:	or     al,BYTE PTR [rsi+0x6f]
  406acb:	jb     0x406aed
  406acd:	ins    DWORD PTR es:[rdi],dx
  406ace:	outs   dx,DWORD PTR ds:[rsi]
  406acf:	jb     0x406b36
  406ad1:	and    BYTE PTR [rcx+0x6e],ch
  406ad4:	outs   dx,WORD PTR ds:[rsi]
  406ad6:	jb     0x406b45
  406ad8:	(bad)  
  406ad9:	je     0x406b44
  406adb:	outs   dx,DWORD PTR ds:[rsi]
  406adc:	outs   dx,BYTE PTR ds:[rsi]
  406add:	cmp    ah,BYTE PTR [rax]
  406adf:	fs (bad) 
  406ae1:	jne    0x406b56
  406ae3:	sub    eax,0x74736574
  406ae8:	sub    eax,0x6c6f6f74
  406aed:	and    BYTE PTR [rbx+0x55],dl
  406af0:	rex.X
  406af1:	rex.XB
  406af2:	rex.WRXB
  406af3:	rex.WRB
  406af4:	rex.WRB
  406af5:	rex.B
  406af6:	rex.WRX
  406af7:	and    BYTE PTR [rip+0x6c65682d],r13b        # 0x6ca5d32b
  406afe:	jo     0x406b0a
	...
  406b10:	and    BYTE PTR [rbp+0x40],0x0
  406b17:	add    BYTE PTR [rax+0x40a0],al
  406b1d:	add    BYTE PTR [rax],al
  406b1f:	add    BYTE PTR [rax+0x2f],dl
  406b22:	add    BYTE PTR [rax],al
	...
  406b2d:	add    BYTE PTR [rax],al
  406b2f:	add    BYTE PTR [rcx+0x72],al
  406b32:	addr32 jne 0x406ba2
  406b35:	outs   dx,BYTE PTR gs:[rsi]
  406b37:	je     0x406b59
  406b39:	outs   dx,DWORD PTR fs:[rsi]
  406b3b:	ins    DWORD PTR es:[rdi],dx
  406b3c:	(bad)  
  406b3d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  406b44:	jb     0x406b66
  406b46:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  406b4a:	rex.B
  406b4b:	rex.WB
  406b4c:	rex.WRX sub QWORD PTR [rax],r8
  406b4f:	rex.B jb 0x406bb9
  406b52:	jne    0x406bc1
  406b54:	outs   dx,BYTE PTR gs:[rsi]
  406b56:	je     0x406b78
  406b58:	jae    0x406bc3
  406b5a:	outs   dx,BYTE PTR ds:[rsi]
  406b5b:	addr32 jne 0x406bca
  406b5e:	(bad)  
  406b5f:	jb     0x406bca
  406b61:	je     0x406bdc
  406b63:	and    BYTE PTR [rax],ch
  406b65:	push   rbx
  406b66:	rex.WB
  406b67:	rex.RXB
  406b68:	rex.WRX sub QWORD PTR [rax],r8
  406b6b:	add    BYTE PTR [rax],al
  406b6d:	add    BYTE PTR [rax],al
  406b6f:	add    BYTE PTR [rdi+0x76],cl
  406b72:	gs jb  0x406bdb
  406b75:	ins    BYTE PTR es:[rdi],dx
  406b76:	outs   dx,DWORD PTR ds:[rsi]
  406b77:	ja     0x406b99
  406b79:	jb     0x406bdc
  406b7b:	outs   dx,BYTE PTR ds:[rsi]
  406b7c:	and    BYTE PTR gs:[ebp+0x72],ah
  406b81:	jb     0x406bf2
  406b83:	jb     0x406ba5
  406b85:	sub    BYTE PTR [rdi+0x56],cl
  406b88:	rex.RB push r10
  406b8a:	rex.RX
  406b8b:	rex.WR
  406b8c:	rex.WRXB push r15
  406b8e:	sub    DWORD PTR [rax],eax
  406b90:	push   rax
  406b91:	(bad)  
  406b92:	jb     0x406c08
  406b94:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  406b9b:	jae    0x406bbd
  406b9d:	outs   dx,DWORD PTR ds:[rsi]
  406b9e:	data16 and BYTE PTR [rbx+0x69],dh
  406ba2:	outs   dx,BYTE PTR ds:[esi]
  406ba4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406bab:	and    BYTE PTR gs:[rax],ch
  406bae:	push   rax
  406baf:	rex.WR
  406bb0:	rex.WRXB push r11
  406bb2:	push   rbx
  406bb3:	sub    DWORD PTR [rax],eax
  406bb5:	add    BYTE PTR [rax],al
  406bb7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  406bbb:	(bad)  
  406bbc:	ins    BYTE PTR es:[rdi],dx
  406bbd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406bc1:	jae    0x406be3
  406bc3:	outs   dx,DWORD PTR ds:[rsi]
  406bc4:	data16 and BYTE PTR [rbx+0x69],dh
  406bc8:	outs   dx,BYTE PTR ds:[esi]
  406bca:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406bd1:	and    BYTE PTR gs:[rax],ch
  406bd4:	push   rsp
  406bd5:	rex.WR
  406bd6:	rex.WRXB push r11
  406bd8:	push   rbx
  406bd9:	sub    DWORD PTR [rax],eax
  406bdb:	add    BYTE PTR [rax],al
  406bdd:	add    BYTE PTR [rax],al
  406bdf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406be3:	and    BYTE PTR [rdx+0x65],dh
  406be6:	jae    0x406c5d
  406be8:	ins    BYTE PTR es:[rdi],dx
  406be9:	je     0x406c0b
  406beb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406bf2:	jae    0x406c61
  406bf4:	(bad)  
  406bf5:	ins    BYTE PTR es:[rdi],dx
  406bf6:	ins    BYTE PTR es:[rdi],dx
  406bf7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406bfb:	(bad)  
  406bfc:	and    BYTE PTR gs:[rdx+0x65],dh
  406c00:	jo     0x406c74
  406c02:	gs jae 0x406c6a
  406c05:	outs   dx,BYTE PTR ds:[rsi]
  406c06:	je     0x406c6d
  406c08:	and    BYTE PTR fs:[rax],ch
  406c0b:	push   rbp
  406c0c:	rex.WRX
  406c0d:	rex.R
  406c0e:	rex.RB push r10
  406c10:	rex.RX
  406c11:	rex.WR
  406c12:	rex.WRXB push r15
  406c14:	sub    DWORD PTR [rax],eax
  406c16:	push   rbp
  406c17:	outs   dx,BYTE PTR ds:[rsi]
  406c18:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406c1c:	outs   dx,BYTE PTR ds:[rsi]
  406c1d:	and    BYTE PTR [rbp+0x72],ah
  406c20:	jb     0x406c91
  406c22:	jb     0x406c24
  406c24:	add    BYTE PTR [rax],al
  406c26:	add    BYTE PTR [rax],al
  406c28:	pop    rdi
  406c29:	ins    DWORD PTR es:[rdi],dx
  406c2a:	(bad)  
  406c2b:	je     0x406c95
  406c2d:	gs jb  0x406ca2
  406c30:	sub    BYTE PTR [rcx],ch
  406c32:	cmp    ah,BYTE PTR [rax]
  406c34:	and    eax,0x6e692073
  406c39:	and    BYTE PTR [rip+0x67252873],ah        # 0x676594b2
  406c3f:	sub    al,0x20
  406c41:	and    eax,0x20202967
  406c46:	sub    BYTE PTR [rdx+0x65],dh
  406c49:	je     0x406cc1
  406c4b:	(bad)  
  406c4c:	ins    BYTE PTR es:[rdi],dx
  406c4d:	cmp    eax,0xa296725
  406c52:	add    BYTE PTR [rax],al
  406c54:	int3   
  406c55:	(bad)  
  406c56:	(bad)  
  406c57:	dec    DWORD PTR [rip+0x7cffffc4]        # 0x7d406c21
  406c5d:	(bad)  
  406c5e:	(bad)  
  406c5f:	dec    DWORD PTR [rsp+rax*8-0x3b630001]
  406c66:	(bad)  
  406c67:	jmp    FWORD PTR [rsp+rax*8-0x3b430001]
  406c6e:	(bad)  
  406c6f:	dec    DWORD PTR [rbp+0x69]
  406c72:	outs   dx,BYTE PTR ds:[rsi]
  406c73:	addr32 ja 0x406ca3
  406c76:	ja     0x406cae
  406c78:	xor    al,0x20
  406c7a:	jb     0x406cf1
  406c7c:	outs   dx,BYTE PTR ds:[rsi]
  406c7d:	je     0x406ce8
  406c7f:	ins    DWORD PTR es:[rdi],dx
  406c80:	and    BYTE PTR gs:[rsi+0x61],ah
  406c84:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  406c8c:	add    BYTE PTR [rax],al
  406c8e:	add    BYTE PTR [rax],al
  406c90:	rex.B
  406c91:	fs fs jb 0x406cfa
  406c95:	jae    0x406d0a
  406c97:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a88d0d
  406c9d:	jae    0x406cbf
  406c9f:	outs   dx,BYTE PTR ds:[rsi]
  406ca0:	outs   dx,DWORD PTR ds:[rsi]
  406ca1:	and    BYTE PTR [rcx+0x6d],ch
  406ca4:	(bad)  
  406ca5:	addr32 gs sub eax,0x74636573
  406cac:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406cb3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  406cba:	jne    0x406d21
  406cbc:	jb     0x406d37
  406cbe:	and    BYTE PTR [rsi+0x61],ah
  406cc1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406cc9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a28d33
  406ccf:	je     0x406d36
  406cd1:	jae    0x406cf3
  406cd3:	(bad)  
  406cd4:	je     0x406cf6
  406cd6:	(bad)  
  406cd7:	fs fs jb 0x406d40
  406cdb:	jae    0x406d50
  406cdd:	and    BYTE PTR [rip+0x70],ah        # 0x406d53
  406ce3:	add    BYTE PTR [rax],al
  406ce5:	add    BYTE PTR [rax],al
  406ce7:	add    BYTE PTR [rax],ah
  406ce9:	and    BYTE PTR [rsi+0x69],dl
  406cec:	jb     0x406d62
  406cee:	jne    0x406d51
  406cf0:	ins    BYTE PTR es:[rdi],dx
  406cf1:	push   rax
  406cf2:	jb     0x406d63
  406cf4:	je     0x406d5b
  406cf6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  406cfa:	(bad)  
  406cfb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406d03:	push   0x646f6320
  406d08:	and    BYTE PTR gs:[rax],dh
  406d0b:	js     0x406d32
  406d0d:	js     0x406d0f
  406d0f:	add    BYTE PTR [rax],ah
  406d11:	and    BYTE PTR [rbp+0x6e],dl
  406d14:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406d18:	outs   dx,BYTE PTR ds:[rsi]
  406d19:	and    BYTE PTR [rax+0x73],dh
  406d1c:	gs jne 0x406d83
  406d1f:	outs   dx,DWORD PTR ds:[rsi]
  406d20:	and    BYTE PTR [rdx+0x65],dh
  406d23:	ins    BYTE PTR es:[rdi],dx
  406d24:	outs   dx,DWORD PTR ds:[rsi]
  406d25:	movsxd esp,DWORD PTR [rcx+0x74]
  406d28:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  406d2f:	je     0x406da0
  406d31:	movsxd ebp,DWORD PTR [rdi+0x6c]
  406d34:	and    BYTE PTR [rsi+0x65],dh
  406d37:	jb     0x406dac
  406d39:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  406d40:	or     al,BYTE PTR [rax]
  406d42:	add    BYTE PTR [rax],al
  406d44:	add    BYTE PTR [rax],al
  406d46:	add    BYTE PTR [rax],al
  406d48:	and    BYTE PTR [rax],ah
  406d4a:	push   rbp
  406d4b:	outs   dx,BYTE PTR ds:[rsi]
  406d4c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406d50:	outs   dx,BYTE PTR ds:[rsi]
  406d51:	and    BYTE PTR [rax+0x73],dh
  406d54:	gs jne 0x406dbb
  406d57:	outs   dx,DWORD PTR ds:[rsi]
  406d58:	and    BYTE PTR [rdx+0x65],dh
  406d5b:	ins    BYTE PTR es:[rdi],dx
  406d5c:	outs   dx,DWORD PTR ds:[rsi]
  406d5d:	movsxd esp,DWORD PTR [rcx+0x74]
  406d60:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  406d67:	and    BYTE PTR [rbx+0x69],dh
  406d6a:	jp     0x406dd1
  406d6c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9bd6
	...
  406d7e:	add    BYTE PTR [rax],al
  406d80:	cs jo  0x406de7
  406d83:	(bad)  
  406d84:	je     0x406de7
	...
  406d8e:	add    BYTE PTR [rax],al
  406d90:	mov    al,0x50
  406d92:	add    BYTE PTR [rax],al
	...
  406d9d:	add    BYTE PTR [rax],al
  406d9f:	add    al,al
  406da1:	push   rax
  406da2:	add    BYTE PTR [rax],al
	...
  406db1:	rex.XB
  406db2:	add    BYTE PTR [rax],al
	...
  406dbd:	add    BYTE PTR [rax],al
  406dbf:	add    BYTE PTR [rax],dh
  406dc1:	jae    0x406e03
	...
  406dcf:	add    BYTE PTR [rax],dh
  406dd1:	jae    0x406e13
	...
  406ddf:	add    BYTE PTR [rax],ah
  406de1:	imul   eax,DWORD PTR [rax+0x0],0x0
	...
  406df1:	add    BYTE PTR [rax+0x0],al
	...
  406e00:	rex.W mov bpl,0x40
	...
  406e0f:	add    BYTE PTR [rax-0x4b],dh
  406e12:	add    BYTE PTR [rax],al
	...
  406e1d:	add    BYTE PTR [rax],al
  406e1f:	add    BYTE PTR [rax+0x40b5],dl
	...
  406e2d:	add    BYTE PTR [rax],al
  406e2f:	add    BYTE PTR [rax+0x40b5],ch
	...
  406e3d:	add    BYTE PTR [rax],al
  406e3f:	add    al,al
  406e41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e42:	add    BYTE PTR [rax],al
	...
  406e4d:	add    BYTE PTR [rax],al
  406e4f:	add    BYTE PTR [rax],ch
  406e51:	stos   BYTE PTR es:[rdi],al
  406e52:	add    BYTE PTR [rax],al
	...
  406e5d:	add    BYTE PTR [rax],al
  406e5f:	add    BYTE PTR [rax],ah
  406e61:	stos   BYTE PTR es:[rdi],al
  406e62:	add    BYTE PTR [rax],al
	...
  406e6d:	add    BYTE PTR [rax],al
  406e6f:	add    BYTE PTR [rax],dl
  406e71:	stos   BYTE PTR es:[rdi],al
  406e72:	add    BYTE PTR [rax],al
	...
  406e7d:	add    BYTE PTR [rax],al
  406e7f:	add    BYTE PTR [rax],bl
  406e81:	stos   BYTE PTR es:[rdi],al
  406e82:	add    BYTE PTR [rax],al
	...
  406e91:	rol    BYTE PTR [rax+0x0],0x0
	...
  406e9d:	add    BYTE PTR [rax],al
  406e9f:	add    BYTE PTR [rax],dl
  406ea1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406ead:	add    BYTE PTR [rax],al
  406eaf:	add    BYTE PTR [rax],bl
  406eb1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406ebd:	add    BYTE PTR [rax],al
  406ebf:	add    BYTE PTR [rax],dh
  406ec1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406ecd:	add    BYTE PTR [rax],al
  406ecf:	add    BYTE PTR [rax-0x60],ah
  406ed2:	add    BYTE PTR [rax],al
	...
  406edd:	add    BYTE PTR [rax],al
  406edf:	add    BYTE PTR [rax+0x40a6],dl
	...
  406eed:	add    BYTE PTR [rax],al
  406eef:	add    al,ah
  406ef1:	cmp    BYTE PTR [rax+0x0],al
	...
  406f00:	xor    BYTE PTR [rax],dh
  406f02:	add    BYTE PTR [rax],al
	...
  406f0d:	add    BYTE PTR [rax],al
  406f0f:	add    BYTE PTR [rax-0x5a],al
  406f12:	add    BYTE PTR [rax],al
	...
  406f1d:	add    BYTE PTR [rax],al
  406f1f:	add    BYTE PTR [rax-0x5a],dh
  406f22:	add    BYTE PTR [rax],al
	...
  406f2d:	add    BYTE PTR [rax],al
  406f2f:	add    BYTE PTR [rax-0x60],dh
  406f32:	add    BYTE PTR [rax],al
	...
  406f3d:	add    BYTE PTR [rax],al
  406f3f:	add    BYTE PTR [rax-0x5a],bl
  406f42:	add    BYTE PTR [rax],al
	...
  406f4d:	add    BYTE PTR [rax],al
  406f4f:	add    BYTE PTR [rsi+riz*4+0x40],dl
	...
  406f5f:	add    BYTE PTR [rax-0x5a],dl
  406f62:	add    BYTE PTR [rax],al
	...
  406f6d:	add    BYTE PTR [rax],al
  406f6f:	add    BYTE PTR [rdi+0x43],al
  406f72:	rex.XB cmp spl,BYTE PTR [r8]
  406f75:	sub    BYTE PTR [rdi+0x4e],al
  406f78:	push   rbp
  406f79:	sub    DWORD PTR [rax],esp
  406f7b:	xor    al,0x2e
  406f7d:	cmp    DWORD PTR [rsi],ebp
  406f7f:	xor    al,0x0
	...
  406f8d:	add    BYTE PTR [rax],al
  406f8f:	add    BYTE PTR [rdi+0x43],al
  406f92:	rex.XB cmp spl,BYTE PTR [r8]
  406f95:	sub    BYTE PTR [rdi+0x4e],al
  406f98:	push   rbp
  406f99:	sub    DWORD PTR [rax],esp
  406f9b:	xor    al,0x2e
  406f9d:	cmp    DWORD PTR [rsi],ebp
  406f9f:	xor    al,0x0
	...
  406fad:	add    BYTE PTR [rax],al
  406faf:	add    BYTE PTR [rdi+0x43],al
  406fb2:	rex.XB cmp spl,BYTE PTR [r8]
  406fb5:	sub    BYTE PTR [rdi+0x4e],al
  406fb8:	push   rbp
  406fb9:	sub    DWORD PTR [rax],esp
  406fbb:	xor    al,0x2e
  406fbd:	cmp    DWORD PTR [rsi],ebp
  406fbf:	xor    al,0x0
	...
  406fcd:	add    BYTE PTR [rax],al
  406fcf:	add    BYTE PTR [rdi+0x43],al
  406fd2:	rex.XB cmp spl,BYTE PTR [r8]
  406fd5:	sub    BYTE PTR [rdi+0x4e],al
  406fd8:	push   rbp
  406fd9:	sub    DWORD PTR [rax],esp
  406fdb:	xor    al,0x2e
  406fdd:	cmp    DWORD PTR [rsi],ebp
  406fdf:	xor    al,0x0
	...
  406fed:	add    BYTE PTR [rax],al
  406fef:	add    BYTE PTR [rdi+0x43],al
  406ff2:	rex.XB cmp spl,BYTE PTR [r8]
  406ff5:	sub    BYTE PTR [rdi+0x4e],al
  406ff8:	push   rbp
  406ff9:	sub    DWORD PTR [rax],esp
  406ffb:	xor    al,0x2e
  406ffd:	cmp    DWORD PTR [rsi],ebp
  406fff:	xor    al,0x0
	...
  40700d:	add    BYTE PTR [rax],al
  40700f:	add    BYTE PTR [rdi+0x43],al
  407012:	rex.XB cmp spl,BYTE PTR [r8]
  407015:	sub    BYTE PTR [rdi+0x4e],al
  407018:	push   rbp
  407019:	sub    DWORD PTR [rax],esp
  40701b:	xor    al,0x2e
  40701d:	cmp    DWORD PTR [rsi],ebp
  40701f:	xor    al,0x0
	...
  40702d:	add    BYTE PTR [rax],al
  40702f:	add    BYTE PTR [rdi+0x43],al
  407032:	rex.XB cmp spl,BYTE PTR [r8]
  407035:	sub    BYTE PTR [rdi+0x4e],al
  407038:	push   rbp
  407039:	sub    DWORD PTR [rax],esp
  40703b:	xor    al,0x2e
  40703d:	cmp    DWORD PTR [rsi],ebp
  40703f:	xor    al,0x0
	...
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rdi+0x43],al
  407052:	rex.XB cmp spl,BYTE PTR [r8]
  407055:	sub    BYTE PTR [rdi+0x4e],al
  407058:	push   rbp
  407059:	sub    DWORD PTR [rax],esp
  40705b:	xor    al,0x2e
  40705d:	cmp    DWORD PTR [rsi],ebp
  40705f:	xor    al,0x0
	...
  40706d:	add    BYTE PTR [rax],al
  40706f:	add    BYTE PTR [rdi+0x43],al
  407072:	rex.XB cmp spl,BYTE PTR [r8]
  407075:	sub    BYTE PTR [rdi+0x4e],al
  407078:	push   rbp
  407079:	sub    DWORD PTR [rax],esp
  40707b:	xor    al,0x2e
  40707d:	cmp    DWORD PTR [rsi],ebp
  40707f:	xor    al,0x0
	...
  40708d:	add    BYTE PTR [rax],al
  40708f:	add    BYTE PTR [rdi+0x43],al
  407092:	rex.XB cmp spl,BYTE PTR [r8]
  407095:	sub    BYTE PTR [rdi+0x4e],al
  407098:	push   rbp
  407099:	sub    DWORD PTR [rax],esp
  40709b:	xor    al,0x2e
  40709d:	cmp    DWORD PTR [rsi],ebp
  40709f:	xor    al,0x0
	...
  4070ad:	add    BYTE PTR [rax],al
  4070af:	add    BYTE PTR [rdi+0x43],al
  4070b2:	rex.XB cmp spl,BYTE PTR [r8]
  4070b5:	sub    BYTE PTR [rdi+0x4e],al
  4070b8:	push   rbp
  4070b9:	sub    DWORD PTR [rax],esp
  4070bb:	xor    al,0x2e
  4070bd:	cmp    DWORD PTR [rsi],ebp
  4070bf:	xor    al,0x0
	...
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rdi+0x43],al
  4070d2:	rex.XB cmp spl,BYTE PTR [r8]
  4070d5:	sub    BYTE PTR [rdi+0x4e],al
  4070d8:	push   rbp
  4070d9:	sub    DWORD PTR [rax],esp
  4070db:	xor    al,0x2e
  4070dd:	cmp    DWORD PTR [rsi],ebp
  4070df:	xor    al,0x0
	...
  4070ed:	add    BYTE PTR [rax],al
  4070ef:	add    BYTE PTR [rdi+0x43],al
  4070f2:	rex.XB cmp spl,BYTE PTR [r8]
  4070f5:	sub    BYTE PTR [rdi+0x4e],al
  4070f8:	push   rbp
  4070f9:	sub    DWORD PTR [rax],esp
  4070fb:	xor    al,0x2e
  4070fd:	cmp    DWORD PTR [rsi],ebp
  4070ff:	xor    al,0x0
	...
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rdi+0x43],al
  407112:	rex.XB cmp spl,BYTE PTR [r8]
  407115:	sub    BYTE PTR [rdi+0x4e],al
  407118:	push   rbp
  407119:	sub    DWORD PTR [rax],esp
  40711b:	xor    al,0x2e
  40711d:	cmp    DWORD PTR [rsi],ebp
  40711f:	xor    al,0x0
	...
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rdi+0x43],al
  407132:	rex.XB cmp spl,BYTE PTR [r8]
  407135:	sub    BYTE PTR [rdi+0x4e],al
  407138:	push   rbp
  407139:	sub    DWORD PTR [rax],esp
  40713b:	xor    al,0x2e
  40713d:	cmp    DWORD PTR [rsi],ebp
  40713f:	xor    al,0x0
	...
  40714d:	add    BYTE PTR [rax],al
  40714f:	add    BYTE PTR [rdi+0x43],al
  407152:	rex.XB cmp spl,BYTE PTR [r8]
  407155:	sub    BYTE PTR [rdi+0x4e],al
  407158:	push   rbp
  407159:	sub    DWORD PTR [rax],esp
  40715b:	xor    al,0x2e
  40715d:	cmp    DWORD PTR [rsi],ebp
  40715f:	xor    al,0x0
	...
  40716d:	add    BYTE PTR [rax],al
  40716f:	add    BYTE PTR [rdi+0x43],al
  407172:	rex.XB cmp spl,BYTE PTR [r8]
  407175:	sub    BYTE PTR [rdi+0x4e],al
  407178:	push   rbp
  407179:	sub    DWORD PTR [rax],esp
  40717b:	xor    al,0x2e
  40717d:	cmp    DWORD PTR [rsi],ebp
  40717f:	xor    al,0x0
	...
  40718d:	add    BYTE PTR [rax],al
  40718f:	add    BYTE PTR [rdi+0x43],al
  407192:	rex.XB cmp spl,BYTE PTR [r8]
  407195:	sub    BYTE PTR [rdi+0x4e],al
  407198:	push   rbp
  407199:	sub    DWORD PTR [rax],esp
  40719b:	xor    al,0x2e
  40719d:	cmp    DWORD PTR [rsi],ebp
  40719f:	xor    al,0x0
	...
  4071ad:	add    BYTE PTR [rax],al
  4071af:	add    BYTE PTR [rdi+0x43],al
  4071b2:	rex.XB cmp spl,BYTE PTR [r8]
  4071b5:	sub    BYTE PTR [rdi+0x4e],al
  4071b8:	push   rbp
  4071b9:	sub    DWORD PTR [rax],esp
  4071bb:	xor    al,0x2e
  4071bd:	cmp    DWORD PTR [rsi],ebp
  4071bf:	xor    al,0x0
	...
  4071cd:	add    BYTE PTR [rax],al
  4071cf:	add    BYTE PTR [rdi+0x43],al
  4071d2:	rex.XB cmp spl,BYTE PTR [r8]
  4071d5:	sub    BYTE PTR [rdi+0x4e],al
  4071d8:	push   rbp
  4071d9:	sub    DWORD PTR [rax],esp
  4071db:	xor    al,0x2e
  4071dd:	cmp    DWORD PTR [rsi],ebp
  4071df:	xor    al,0x0
	...
  4071ed:	add    BYTE PTR [rax],al
  4071ef:	add    BYTE PTR [rdi+0x43],al
  4071f2:	rex.XB cmp spl,BYTE PTR [r8]
  4071f5:	sub    BYTE PTR [rdi+0x4e],al
  4071f8:	push   rbp
  4071f9:	sub    DWORD PTR [rax],esp
  4071fb:	xor    al,0x2e
  4071fd:	cmp    DWORD PTR [rsi],ebp
  4071ff:	xor    al,0x0
	...
  40720d:	add    BYTE PTR [rax],al
  40720f:	add    BYTE PTR [rdi+0x43],al
  407212:	rex.XB cmp spl,BYTE PTR [r8]
  407215:	sub    BYTE PTR [rdi+0x4e],al
  407218:	push   rbp
  407219:	sub    DWORD PTR [rax],esp
  40721b:	xor    al,0x2e
  40721d:	cmp    DWORD PTR [rsi],ebp
  40721f:	xor    al,0x0
	...
  40722d:	add    BYTE PTR [rax],al
  40722f:	add    BYTE PTR [rdi+0x43],al
  407232:	rex.XB cmp spl,BYTE PTR [r8]
  407235:	sub    BYTE PTR [rdi+0x4e],al
  407238:	push   rbp
  407239:	sub    DWORD PTR [rax],esp
  40723b:	xor    al,0x2e
  40723d:	cmp    DWORD PTR [rsi],ebp
  40723f:	xor    al,0x0
	...
  40724d:	add    BYTE PTR [rax],al
  40724f:	add    BYTE PTR [rdi+0x43],al
  407252:	rex.XB cmp spl,BYTE PTR [r8]
  407255:	sub    BYTE PTR [rdi+0x4e],al
  407258:	push   rbp
  407259:	sub    DWORD PTR [rax],esp
  40725b:	xor    al,0x2e
  40725d:	cmp    DWORD PTR [rsi],ebp
  40725f:	xor    al,0x0
	...
  40726d:	add    BYTE PTR [rax],al
  40726f:	add    BYTE PTR [rdi+0x43],al
  407272:	rex.XB cmp spl,BYTE PTR [r8]
  407275:	sub    BYTE PTR [rdi+0x4e],al
  407278:	push   rbp
  407279:	sub    DWORD PTR [rax],esp
  40727b:	xor    al,0x2e
  40727d:	cmp    DWORD PTR [rsi],ebp
  40727f:	xor    al,0x0
	...
  40728d:	add    BYTE PTR [rax],al
  40728f:	add    BYTE PTR [rdi+0x43],al
  407292:	rex.XB cmp spl,BYTE PTR [r8]
  407295:	sub    BYTE PTR [rdi+0x4e],al
  407298:	push   rbp
  407299:	sub    DWORD PTR [rax],esp
  40729b:	xor    al,0x2e
  40729d:	cmp    DWORD PTR [rsi],ebp
  40729f:	xor    al,0x0
	...
  4072ad:	add    BYTE PTR [rax],al
  4072af:	add    BYTE PTR [rdi+0x43],al
  4072b2:	rex.XB cmp spl,BYTE PTR [r8]
  4072b5:	sub    BYTE PTR [rdi+0x4e],al
  4072b8:	push   rbp
  4072b9:	sub    DWORD PTR [rax],esp
  4072bb:	xor    al,0x2e
  4072bd:	cmp    DWORD PTR [rsi],ebp
  4072bf:	xor    al,0x0
	...
  4072cd:	add    BYTE PTR [rax],al
  4072cf:	add    BYTE PTR [rdi+0x43],al
  4072d2:	rex.XB cmp spl,BYTE PTR [r8]
  4072d5:	sub    BYTE PTR [rdi+0x4e],al
  4072d8:	push   rbp
  4072d9:	sub    DWORD PTR [rax],esp
  4072db:	xor    al,0x2e
  4072dd:	cmp    DWORD PTR [rsi],ebp
  4072df:	xor    al,0x0
	...
  4072ed:	add    BYTE PTR [rax],al
  4072ef:	add    BYTE PTR [rdi+0x43],al
  4072f2:	rex.XB cmp spl,BYTE PTR [r8]
  4072f5:	sub    BYTE PTR [rdi+0x4e],al
  4072f8:	push   rbp
  4072f9:	sub    DWORD PTR [rax],esp
  4072fb:	xor    al,0x2e
  4072fd:	cmp    DWORD PTR [rsi],ebp
  4072ff:	xor    al,0x0
	...
  40730d:	add    BYTE PTR [rax],al
  40730f:	add    BYTE PTR [rdi+0x43],al
  407312:	rex.XB cmp spl,BYTE PTR [r8]
  407315:	sub    BYTE PTR [rdi+0x4e],al
  407318:	push   rbp
  407319:	sub    DWORD PTR [rax],esp
  40731b:	xor    al,0x2e
  40731d:	cmp    DWORD PTR [rsi],ebp
  40731f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000408000 <.pdata>:
  408000:	add    BYTE PTR [rax],dl
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rax],edx
  408006:	add    BYTE PTR [rax],al
  408008:	add    BYTE PTR [rax+0x10100000],dl
  40800e:	add    BYTE PTR [rax],al
  408010:	push   rcx
  408011:	adc    DWORD PTR [rax],eax
  408013:	add    BYTE PTR [rax+rdx*4],al
  408016:	add    BYTE PTR [rax],al
  408018:	(bad)  
  408019:	adc    DWORD PTR [rax],eax
  40801b:	add    BYTE PTR [rsi+0xc000011],ch
  408021:	nop
  408022:	add    BYTE PTR [rax],al
  408024:	mov    al,0x11
  408026:	add    BYTE PTR [rax],al
  408028:	(bad)  
  408029:	adc    al,0x0
  40802b:	add    BYTE PTR [rax+rdx*4],dl
  40802e:	add    BYTE PTR [rax],al
  408030:	rcl    BYTE PTR [rax+rax*1],1
  408033:	add    dl,dh
  408035:	adc    al,0x0
  408037:	add    BYTE PTR [rax],ch
  408039:	nop
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15628042
  408042:	add    BYTE PTR [rax],al
  408044:	rex.W nop
  408046:	add    BYTE PTR [rax],al
  408048:	xor    BYTE PTR [rip+0x156b0000],dl        # 0x15ab804e
  40804e:	add    BYTE PTR [rax],al
  408050:	push   0x6b000090
  408055:	adc    eax,0x15a60000
  40805a:	add    BYTE PTR [rax],al
  40805c:	je     0x407fee
  40805e:	add    BYTE PTR [rax],al
  408060:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408061:	adc    eax,0x166a0000
  408066:	add    BYTE PTR [rax],al
  408068:	adc    BYTE PTR [rax+0x166a0000],0x0
  40806f:	add    BYTE PTR [rdi-0x73ffffe9],dh
  408075:	nop
  408076:	add    BYTE PTR [rax],al
  408078:	mov    bh,0x17
  40807a:	add    BYTE PTR [rax],al
  40807c:	clc    
  40807d:	sbb    BYTE PTR [rax],al
  40807f:	add    BYTE PTR [rax+rdx*4+0x18f80000],bl
  408086:	add    BYTE PTR [rax],al
  408088:	rex.WR sbb r8b,BYTE PTR [rax]
  40808b:	add    BYTE PTR [rax+0x50000090],ch
  408091:	sbb    al,BYTE PTR [rax]
  408093:	add    BYTE PTR [rbx-0x4bffffe6],cl
  408099:	nop
  40809a:	add    BYTE PTR [rax],al
  40809c:	mov    ebx,DWORD PTR [rdx]
  40809e:	add    BYTE PTR [rax],al
  4080a0:	sbb    r8,QWORD PTR [rax]
  4080a3:	add    al,al
  4080a5:	nop
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	sbb    r8,QWORD PTR [rax]
  4080ab:	add    BYTE PTR [rsi+0x1c],dl
  4080ae:	add    BYTE PTR [rax],al
  4080b0:	rcl    BYTE PTR [rax+0x1c560000],1
  4080b6:	add    BYTE PTR [rax],al
  4080b8:	xor    ebp,DWORD PTR [rax]
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	fcom   QWORD PTR [rax+0x28400000]
  4080c2:	add    BYTE PTR [rax],al
  4080c4:	ja     0x4080ee
  4080c6:	add    BYTE PTR [rax],al
  4080c8:	in     al,dx
  4080c9:	nop
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	ja     0x4080f6
  4080ce:	add    BYTE PTR [rax],al
  4080d0:	(bad)  
  4080d1:	sub    DWORD PTR [rax],eax
  4080d3:	add    al,bh
  4080d5:	nop
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	adc    BYTE PTR [rcx],ch
  4080da:	add    BYTE PTR [rax],al
  4080dc:	xlat   BYTE PTR ds:[rbx]
  4080dd:	sub    DWORD PTR [rax],eax
  4080df:	add    BYTE PTR [rcx+rdx*4],al
  4080e2:	add    BYTE PTR [rax],al
  4080e4:	xlat   BYTE PTR ds:[rbx]
  4080e5:	sub    DWORD PTR [rax],eax
  4080e7:	add    BYTE PTR [rbp+0x1000002a],al
  4080ed:	xchg   ecx,eax
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	nop
  4080f1:	sub    eax,DWORD PTR [rax]
  4080f3:	add    BYTE PTR [rdi],dh
  4080f5:	sub    al,0x0
  4080f7:	add    BYTE PTR [rcx+rdx*4],bl
  4080fa:	add    BYTE PTR [rax],al
  4080fc:	sub    al,0x0
  4080ff:	add    BYTE PTR [rcx+0x2c],bl
  408102:	add    BYTE PTR [rax],al
  408104:	and    al,0x91
  408106:	add    BYTE PTR [rax],al
  408108:	(bad)  
  408109:	sub    al,0x0
  40810b:	add    BYTE PTR [rbp+0x2c00002c],dl
  408111:	xchg   ecx,eax
  408112:	add    BYTE PTR [rax],al
  408114:	movabs al,ds:0x3400002cf500002c
  40811d:	xchg   ecx,eax
  40811e:	add    BYTE PTR [rax],al
  408120:	add    BYTE PTR [rip+0x2d1c0000],ch        # 0x2d5c8126
  408126:	add    BYTE PTR [rax],al
  408128:	rex xchg ecx,eax
  40812a:	add    BYTE PTR [rax],al
  40812c:	and    BYTE PTR [rip+0x2d2a0000],ch        # 0x2d6a8132
  408132:	add    BYTE PTR [rax],al
  408134:	rex.R xchg ecx,eax
  408136:	add    BYTE PTR [rax],al
  408138:	xor    BYTE PTR [rip+0x2d330000],ch        # 0x2d73813e
  40813e:	add    BYTE PTR [rax],al
  408140:	xchg   rcx,rax
  408142:	add    BYTE PTR [rax],al
  408144:	rex sub eax,0x2e160000
  40814a:	add    BYTE PTR [rax],al
  40814c:	rex.WR xchg rcx,rax
  40814e:	add    BYTE PTR [rax],al
  408150:	and    BYTE PTR [rsi],ch
  408152:	add    BYTE PTR [rax],al
  408154:	sbb    ebp,DWORD PTR [rdi]
  408156:	add    BYTE PTR [rax],al
  408158:	pop    rsp
  408159:	xchg   ecx,eax
  40815a:	add    BYTE PTR [rax],al
  40815c:	and    BYTE PTR [rdi],ch
  40815e:	add    BYTE PTR [rax],al
  408160:	rex.WRXB (bad) 
  408162:	add    BYTE PTR [rax],al
  408164:	ins    BYTE PTR es:[rdi],dx
  408165:	xchg   ecx,eax
  408166:	add    BYTE PTR [rax],al
  408168:	push   rax
  408169:	(bad)  
  40816a:	add    BYTE PTR [rax],al
  40816c:	mov    ecx,0x7400002f
  408171:	xchg   ecx,eax
  408172:	add    BYTE PTR [rax],al
  408174:	shr    BYTE PTR [rdi],0x0
  408177:	add    bl,al
  408179:	(bad)  
  40817a:	add    BYTE PTR [rax],al
  40817c:	adc    BYTE PTR [rcx+0x2fd00000],0x0
  408183:	add    BYTE PTR [rcx],dl
  408185:	xor    BYTE PTR [rax],al
  408187:	add    BYTE PTR [rcx+rdx*4+0x30200000],al
  40818e:	add    BYTE PTR [rax],al
  408190:	sub    al,0x30
  408192:	add    BYTE PTR [rax],al
  408194:	mov    WORD PTR [rcx+0x30300000],ss
  40819a:	add    BYTE PTR [rax],al
  40819c:	sub    al,0x31
  40819e:	add    BYTE PTR [rax],al
  4081a0:	nop
  4081a1:	xchg   ecx,eax
  4081a2:	add    BYTE PTR [rax],al
  4081a4:	xor    BYTE PTR [rcx],dh
  4081a6:	add    BYTE PTR [rax],al
  4081a8:	xor    esi,DWORD PTR [rcx]
  4081aa:	add    BYTE PTR [rax],al
  4081ac:	test   al,0x91
  4081ae:	add    BYTE PTR [rax],al
  4081b0:	rex xor DWORD PTR [rax],eax
  4081b3:	add    BYTE PTR [rcx+rsi*1+0x0],al
  4081b7:	add    BYTE PTR [rcx+rdx*4+0x31500000],ch
  4081be:	add    BYTE PTR [rax],al
  4081c0:	push   rsp
  4081c1:	xor    DWORD PTR [rax],eax
  4081c3:	add    BYTE PTR [rax+0x60000091],dh
  4081c9:	xor    DWORD PTR [rax],eax
  4081cb:	add    cl,al
  4081cd:	xor    DWORD PTR [rax],eax
  4081cf:	add    BYTE PTR [rcx+rdx*4+0x31d00000],dh
  4081d6:	add    BYTE PTR [rax],al
  4081d8:	xor    dh,BYTE PTR [rbx]
  4081da:	add    BYTE PTR [rax],al
  4081dc:	rcl    BYTE PTR [rcx+0x33400000],0x0
  4081e3:	add    BYTE PTR [rcx],bh
  4081e5:	add    BYTE PTR ss:[rax],al
  4081e8:	(bad)  
  4081e9:	xchg   ecx,eax
  4081ea:	add    BYTE PTR [rax],al
  4081ec:	rex
  4081ed:	add    BYTE PTR ss:[rax],al
  4081f0:	out    0x37,al
  4081f2:	add    BYTE PTR [rax],al
  4081f4:	in     al,dx
  4081f5:	xchg   ecx,eax
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	lock (bad) 
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	fdivr  QWORD PTR [rax]
  4081fe:	add    BYTE PTR [rax],al
  408200:	hlt    
  408201:	xchg   ecx,eax
  408202:	add    BYTE PTR [rax],al
  408204:	loopne 0x40823e
  408206:	add    BYTE PTR [rax],al
  408208:	cwde   
  408209:	cmp    al,BYTE PTR [rax]
  40820b:	add    BYTE PTR [rdx+rdx*4],al
  40820e:	add    BYTE PTR [rax],al
  408210:	movabs al,ds:0xc00003b0d00003a
  408219:	xchg   edx,eax
  40821a:	add    BYTE PTR [rax],al
  40821c:	adc    BYTE PTR [rbx],bh
  40821e:	add    BYTE PTR [rax],al
  408220:	(bad)  
  408221:	cmp    eax,DWORD PTR [rax]
  408223:	add    BYTE PTR [rdx+rdx*4],bl
  408226:	add    BYTE PTR [rax],al
  408228:	nop
  408229:	cmp    eax,DWORD PTR [rax]
  40822b:	add    BYTE PTR [rdi],ch
  40822d:	cmp    al,0x0
  40822f:	add    BYTE PTR [rax],ch
  408231:	xchg   edx,eax
  408232:	add    BYTE PTR [rax],al
  408234:	xor    BYTE PTR [rax+rax*1],bh
  408237:	add    BYTE PTR [rdx],cl
  408239:	cmp    eax,0x92300000
  40823e:	add    BYTE PTR [rax],al
  408240:	adc    BYTE PTR [rip+0x3d2f0000],bh        # 0x3d6f8246
  408246:	add    BYTE PTR [rax],al
  408248:	cmp    BYTE PTR [rdx+0x3d300000],dl
  40824e:	add    BYTE PTR [rax],al
  408250:	rex.X cmp eax,0x923c0000
  408256:	add    BYTE PTR [rax],al
  408258:	push   rax
  408259:	cmp    eax,0x3d950000
  40825e:	add    BYTE PTR [rax],al
  408260:	rex xchg edx,eax
  408262:	add    BYTE PTR [rax],al
  408264:	movabs al,ds:0x4400003e3e00003d
  40826d:	xchg   edx,eax
  40826e:	add    BYTE PTR [rax],al
  408270:	rex
  408271:	add    BYTE PTR ds:[rax],al
  408274:	cmp    DWORD PTR [rsi],0x0
  408277:	add    BYTE PTR [rax-0x6e],dl
  40827a:	add    BYTE PTR [rax],al
  40827c:	nop
  40827d:	add    BYTE PTR ds:[rax],al
  408280:	retf   
  408281:	add    BYTE PTR ds:[rax],al
  408284:	pop    rsp
  408285:	xchg   edx,eax
  408286:	add    BYTE PTR [rax],al
  408288:	sar    BYTE PTR [rsi],1
  40828a:	add    BYTE PTR [rax],al
  40828c:	pop    rsi
  40828d:	(bad)  
  40828e:	add    BYTE PTR [rax],al
  408290:	fs xchg edx,eax
  408292:	add    BYTE PTR [rax],al
  408294:	(bad)  
  408295:	(bad)  
  408296:	add    BYTE PTR [rax],al
  408298:	cwde   
  408299:	(bad)  
  40829a:	add    BYTE PTR [rax],al
  40829c:	jo     0x408230
  40829e:	add    BYTE PTR [rax],al
  4082a0:	movabs al,ds:0x7c00003ff500003f
  4082a9:	xchg   edx,eax
  4082aa:	add    BYTE PTR [rax],al
  4082ac:	add    BYTE PTR [rax+0x0],al
  4082af:	add    BYTE PTR [rsi-0x77ffffc0],ch
  4082b5:	xchg   edx,eax
  4082b6:	add    BYTE PTR [rax],al
  4082b8:	and    BYTE PTR [rdx+0x0],al
  4082bb:	add    BYTE PTR [rax],ch
  4082bd:	rex.X add BYTE PTR [rax],al
  4082c0:	cwde   
  4082c1:	xchg   edx,eax
  4082c2:	add    BYTE PTR [rax],al
  4082c4:	xor    BYTE PTR [rdx+0x0],al
  4082c7:	add    BYTE PTR [rbx],bh
  4082c9:	rex.X add BYTE PTR [rax],al
  4082cc:	pushf  
  4082cd:	xchg   edx,eax
	...

Disassembly of section .xdata:

0000000000409000 <.xdata>:
  409000:	add    DWORD PTR [rax],eax
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rcx+rax*1],eax
  409007:	add    BYTE PTR [rdx+rax*2],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	add    DWORD PTR [rcx+rax*1],eax
  40900f:	add    BYTE PTR [rdx+riz*2],al
  409012:	add    BYTE PTR [rax],al
  409014:	add    DWORD PTR [rdi],ecx
  409016:	or     BYTE PTR [rax],al
  409018:	lgdt   [rbx]
  40901b:	add    BYTE PTR [rax],cl
  40901d:	xor    BYTE PTR [rdi],al
  40901f:	(bad)  
  409020:	(bad)  
  409021:	jo     0x409028
  409023:	push   rax
  409024:	add    al,0xc0
  409026:	add    dl,al
  409028:	or     DWORD PTR [rcx+rax*1],eax
  40902b:	add    BYTE PTR [rdx+rax*2],al
  40902e:	add    BYTE PTR [rax],al
  409030:	sbb    BYTE PTR [rdx+0x0],al
  409033:	add    BYTE PTR [rcx],al
  409035:	add    BYTE PTR [rax],al
  409037:	add    ah,dl
  409039:	adc    al,0x0
  40903b:	add    ah,ch
  40903d:	adc    al,0x0
  40903f:	add    al,ah
  409041:	cmp    BYTE PTR [rax],al
  409043:	add    ah,ch
  409045:	adc    al,0x0
  409047:	add    BYTE PTR [rcx],cl
  409049:	add    al,0x1
  40904b:	add    BYTE PTR [rdx+rax*2],al
  40904e:	add    BYTE PTR [rax],al
  409050:	sbb    BYTE PTR [rdx+0x0],al
  409053:	add    BYTE PTR [rcx],al
  409055:	add    BYTE PTR [rax],al
  409057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40905e:	add    BYTE PTR [rax],al
  409060:	loopne 0x40909a
  409062:	add    BYTE PTR [rax],al
  409064:	sbb    al,0x15
  409066:	add    BYTE PTR [rax],al
  409068:	add    DWORD PTR [rax],ecx
  40906a:	add    eax,DWORD PTR [rip+0x3043208]        # 0x344c278
  409070:	add    DWORD PTR [rax+0x0],edx
  409073:	add    BYTE PTR [rcx],al
  409075:	or     BYTE PTR [rbx],al
  409077:	add    eax,0x3043208
  40907c:	add    DWORD PTR [rax+0x0],edx
  40907f:	add    BYTE PTR [rcx],al
  409081:	or     BYTE PTR [rbx],al
  409083:	add    eax,0x3045208
  409088:	add    DWORD PTR [rax+0x0],edx
  40908b:	add    BYTE PTR [rcx],al
  40908d:	or     al,BYTE PTR [rip+0x6920a05]        # 0x6d29a98
  409093:	add    eax,DWORD PTR [rbx]
  409095:	xor    BYTE PTR [rdx],al
  409097:	(bad)  
  409098:	add    DWORD PTR [rax+0x0],edx
  40909b:	add    BYTE PTR [rcx],al
  40909d:	or     BYTE PTR [rbx],al
  40909f:	add    eax,0x3047208
  4090a4:	add    DWORD PTR [rax+0x0],edx
  4090a7:	add    BYTE PTR [rcx],al
  4090a9:	or     BYTE PTR [rbx],al
  4090ab:	add    eax,0x3047208
  4090b0:	add    DWORD PTR [rax+0x0],edx
  4090b3:	add    BYTE PTR [rcx],al
  4090b5:	or     BYTE PTR [rbx],al
  4090b7:	add    eax,0x3043208
  4090bc:	add    DWORD PTR [rax+0x0],edx
  4090bf:	add    BYTE PTR [rcx],al
  4090c1:	adc    BYTE PTR [rsi],al
  4090c3:	test   DWORD PTR [rax],edx
  4090c5:	add    ecx,DWORD PTR [rax]
  4090c7:	ret    0x3004
  4090ca:	add    esp,DWORD PTR [rax+0x2]
  4090cd:	jo     0x4090d0
  4090cf:	push   rax
  4090d0:	add    DWORD PTR [rax],ecx
  4090d2:	add    eax,DWORD PTR [rip+0x3049208]        # 0x34522e0
  4090d8:	add    DWORD PTR [rax+0x0],edx
  4090db:	add    BYTE PTR [rcx],al
  4090dd:	adc    al,BYTE PTR [rsi]
  4090df:	test   DWORD PTR [rdx],edx
  4090e1:	add    ecx,DWORD PTR [rdx]
  4090e3:	add    DWORD PTR [rdx],esp
  4090e5:	add    BYTE PTR [rbx],al
  4090e7:	xor    BYTE PTR [rdx],al
  4090e9:	(bad)  
  4090ea:	add    DWORD PTR [rax+0x1],edx
  4090ed:	or     BYTE PTR [rbx],al
  4090ef:	add    eax,0x3043208
  4090f4:	add    DWORD PTR [rax+0x0],edx
  4090f7:	add    BYTE PTR [rcx],al
  4090f9:	or     BYTE PTR [rbx],al
  4090fb:	add    eax,0x3047208
  409100:	add    DWORD PTR [rax+0x0],edx
  409103:	add    BYTE PTR [rcx],al
  409105:	(bad)  
  409106:	add    al,0x85
  409108:	(bad)  
  409109:	add    eax,DWORD PTR [rsi]
  40910b:	(bad)  
  40910d:	xor    BYTE PTR [rcx],al
  40910f:	push   rax
  409110:	add    DWORD PTR [rax],ecx
  409112:	add    eax,DWORD PTR [rip+0x3045208]        # 0x344e320
  409118:	add    DWORD PTR [rax+0x0],edx
  40911b:	add    BYTE PTR [rcx],al
  40911d:	add    eax,0x52050002
  409122:	add    DWORD PTR [rax],esi
  409124:	add    DWORD PTR [rcx+rax*1],eax
  409127:	add    BYTE PTR [rdx+rax*2],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    DWORD PTR [rcx+rax*1],eax
  40912f:	add    BYTE PTR [rdx+rax*2],al
  409132:	add    BYTE PTR [rax],al
  409134:	add    DWORD PTR [rsi],eax
  409136:	add    eax,DWORD PTR [rax]
  409138:	(bad)  
  409139:	rex.X add sil,BYTE PTR [rax]
  40913c:	add    DWORD PTR [rax+0x0],esp
  40913f:	add    BYTE PTR [rcx],al
  409141:	add    BYTE PTR [rax],al
  409143:	add    BYTE PTR [rcx],al
  409145:	add    BYTE PTR [rax],al
  409147:	add    BYTE PTR [rcx],al
  409149:	add    BYTE PTR [rax],al
  40914b:	add    BYTE PTR [rcx],al
  40914d:	or     al,BYTE PTR [rsi]
  40914f:	add    BYTE PTR [rdx],cl
  409151:	jb     0x409159
  409153:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095b9
  409159:	push   rax
  40915a:	add    al,al
  40915c:	add    DWORD PTR [rdx],ecx
  40915e:	add    eax,0x6d20a05
  409163:	add    eax,DWORD PTR [rbx]
  409165:	xor    BYTE PTR [rdx],al
  409167:	(bad)  
  409168:	add    DWORD PTR [rax+0x0],edx
  40916b:	add    BYTE PTR [rcx],al
  40916d:	add    al,0x1
  40916f:	add    BYTE PTR [rdx+rax*2],al
  409172:	add    BYTE PTR [rax],al
  409174:	add    DWORD PTR [rsi],eax
  409176:	add    eax,DWORD PTR [rax]
  409178:	(bad)  
  409179:	rex.X add sil,BYTE PTR [rax]
  40917c:	add    DWORD PTR [rax+0x0],esp
  40917f:	add    BYTE PTR [rcx],al
  409181:	add    BYTE PTR [rax],al
  409183:	add    BYTE PTR [rcx],al
  409185:	add    al,0x1
  409187:	add    BYTE PTR [rdx+riz*4],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    DWORD PTR [rax],eax
  40918e:	add    BYTE PTR [rax],al
  409190:	add    DWORD PTR [rsi],edx
  409192:	or     DWORD PTR [rax],eax
  409194:	(bad)  
  409195:	mov    BYTE PTR [rsi],al
  409197:	add    BYTE PTR [rax],dl
  409199:	js     0x4091a0
  40919b:	add    BYTE PTR [rbx],cl
  40919d:	push   0xffffffffe2060004
  4091a2:	add    dh,BYTE PTR [rax]
  4091a4:	add    DWORD PTR [rax+0x0],esp
  4091a7:	add    BYTE PTR [rcx],al
  4091a9:	add    BYTE PTR [rax],al
  4091ab:	add    BYTE PTR [rcx],al
  4091ad:	add    BYTE PTR [rax],al
  4091af:	add    BYTE PTR [rcx],al
  4091b1:	add    BYTE PTR [rax],al
  4091b3:	add    BYTE PTR [rcx],al
  4091b5:	(bad)  
  4091b6:	add    eax,DWORD PTR [rax]
  4091b8:	(bad)  
  4091b9:	(bad)  
  4091bb:	xor    BYTE PTR [rcx],al
  4091bd:	(bad)  
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    DWORD PTR [rdi+rax*1],ecx
  4091c3:	add    BYTE PTR [rdx+riz*4],cl
  4091c6:	or     BYTE PTR [rax],dh
  4091c8:	(bad)  
  4091c9:	(bad)  
  4091ca:	(bad)  
  4091cb:	jo     0x4091d2
  4091cd:	push   rax
  4091ce:	add    al,0xc0
  4091d0:	add    dl,al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    DWORD PTR [rcx],edx
  4091d6:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e43ed
  4091dc:	or     dh,BYTE PTR [rax]
  4091de:	or     DWORD PTR [rax+0x8],esp
  4091e1:	jo     0x4091ea
  4091e3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22095ba
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    DWORD PTR [rcx+rax*1],eax
  4091ef:	add    BYTE PTR [rdx+rax*2],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    DWORD PTR [rdx],ecx
  4091f6:	(bad)  
  4091f7:	add    BYTE PTR [rdx],cl
  4091f9:	xor    al,BYTE PTR [rsi]
  4091fb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b09661
  409201:	push   rax
  409202:	add    al,al
  409204:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245920c
  40920a:	add    DWORD PTR [rax],esi
  40920c:	add    DWORD PTR [rax],ecx
  40920e:	add    eax,0x4420800
  409213:	xor    BYTE PTR [rbx],al
  409215:	(bad)  
  409216:	add    dh,BYTE PTR [rax+0x1]
  409219:	push   rax
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    DWORD PTR [rdi],eax
  40921e:	add    al,0x0
  409220:	(bad)  
  409221:	xor    al,BYTE PTR [rbx]
  409223:	xor    BYTE PTR [rdx],al
  409225:	(bad)  
  409226:	add    DWORD PTR [rax+0x1],esi
  409229:	add    eax,0x32050002
  40922e:	add    DWORD PTR [rax],esi
  409230:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459238
  409236:	add    DWORD PTR [rax],esi
  409238:	add    DWORD PTR [rax],eax
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    DWORD PTR [rax],eax
  40923e:	add    BYTE PTR [rax],al
  409240:	add    DWORD PTR [rax],eax
  409242:	add    BYTE PTR [rax],al
  409244:	add    DWORD PTR [rdi],eax
  409246:	add    al,0x0
  409248:	(bad)  
  409249:	xor    al,BYTE PTR [rbx]
  40924b:	xor    BYTE PTR [rdx],al
  40924d:	(bad)  
  40924e:	add    DWORD PTR [rax+0x1],esi
  409251:	(bad)  
  409252:	add    eax,DWORD PTR [rax]
  409254:	(bad)  
  409255:	rex.X add sil,BYTE PTR [rax]
  409258:	add    DWORD PTR [rax+0x0],esp
  40925b:	add    BYTE PTR [rcx],al
  40925d:	add    eax,0x32050002
  409262:	add    DWORD PTR [rax],esi
  409264:	add    DWORD PTR [rdi],eax
  409266:	add    al,0x0
  409268:	(bad)  
  409269:	xor    al,BYTE PTR [rbx]
  40926b:	xor    BYTE PTR [rdx],al
  40926d:	(bad)  
  40926e:	add    DWORD PTR [rax+0x1],esi
  409271:	(bad)  
  409272:	add    eax,DWORD PTR [rax]
  409274:	(bad)  
  409275:	rex.X add sil,BYTE PTR [rax]
  409278:	add    DWORD PTR [rax+0x0],esp
  40927b:	add    BYTE PTR [rcx],al
  40927d:	(bad)  
  40927e:	add    eax,DWORD PTR [rax]
  409280:	(bad)  
  409281:	rex.X add sil,BYTE PTR [rax]
  409284:	add    DWORD PTR [rax+0x0],esp
  409287:	add    BYTE PTR [rcx],al
  409289:	or     BYTE PTR [rip+0x4420800],al        # 0x4829a8f
  40928f:	xor    BYTE PTR [rbx],al
  409291:	(bad)  
  409292:	add    dh,BYTE PTR [rax+0x1]
  409295:	push   rax
  409296:	add    BYTE PTR [rax],al
  409298:	add    DWORD PTR [rax],eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040a000 <.bss>:
	...

Disassembly of section .idata:

000000000040b000 <.idata>:
  40b000:	push   rax
  40b001:	mov    al,0x0
	...
  40b00b:	add    ah,ah
  40b00d:	mov    ebp,0xb3680000
  40b012:	add    BYTE PTR [rax],al
  40b014:	pop    rax
  40b015:	mov    cl,0x0
	...
  40b01f:	add    BYTE PTR [rax-0x42],dl
  40b022:	add    BYTE PTR [rax],al
  40b024:	jo     0x40afda
  40b026:	add    BYTE PTR [rax],al
  40b028:	sbb    BYTE PTR [rdx+0x0],dh
  40b02e:	add    BYTE PTR [rax],al
  40b030:	add    BYTE PTR [rax],al
  40b032:	add    BYTE PTR [rax],al
  40b034:	add    al,0xbf
  40b036:	add    BYTE PTR [rax],al
  40b038:	xor    BYTE PTR [rbp+0x0],dh
	...
  40b04e:	add    BYTE PTR [rax],al
  40b050:	xor    BYTE PTR [rsi+0x0],0x0
  40b057:	add    BYTE PTR [rsi+rsi*4+0x0],bl
  40b05e:	add    BYTE PTR [rax],al
  40b060:	lods   al,BYTE PTR ds:[rsi]
  40b061:	mov    dh,0x0
  40b063:	add    BYTE PTR [rax],al
  40b065:	add    BYTE PTR [rax],al
  40b067:	add    ah,al
  40b069:	mov    dh,0x0
  40b06b:	add    BYTE PTR [rax],al
  40b06d:	add    BYTE PTR [rax],al
  40b06f:	add    al,ah
  40b071:	mov    dh,0x0
  40b073:	add    BYTE PTR [rax],al
  40b075:	add    BYTE PTR [rax],al
  40b077:	add    al,bh
  40b079:	mov    dh,0x0
  40b07b:	add    BYTE PTR [rax],al
  40b07d:	add    BYTE PTR [rax],al
  40b07f:	add    BYTE PTR [rax],bl
  40b081:	mov    bh,0x0
  40b083:	add    BYTE PTR [rax],al
  40b085:	add    BYTE PTR [rax],al
  40b087:	add    BYTE PTR [rax],dh
  40b089:	mov    bh,0x0
  40b08b:	add    BYTE PTR [rax],al
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    BYTE PTR [rax-0x49],cl
  40b092:	add    BYTE PTR [rax],al
  40b094:	add    BYTE PTR [rax],al
  40b096:	add    BYTE PTR [rax],al
  40b098:	jo     0x40b051
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	add    BYTE PTR [rax],al
  40b09e:	add    BYTE PTR [rax],al
  40b0a0:	mov    BYTE PTR [rdi+0x0],dh
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	lods   al,BYTE PTR ds:[rsi]
  40b0a9:	mov    bh,0x0
  40b0ab:	add    BYTE PTR [rax],al
  40b0ad:	add    BYTE PTR [rax],al
  40b0af:	add    ah,al
  40b0b1:	mov    bh,0x0
  40b0b3:	add    BYTE PTR [rax],al
  40b0b5:	add    BYTE PTR [rax],al
  40b0b7:	add    al,bl
  40b0b9:	mov    bh,0x0
  40b0bb:	add    BYTE PTR [rax],al
  40b0bd:	add    BYTE PTR [rax],al
  40b0bf:	add    ah,ch
  40b0c1:	mov    bh,0x0
  40b0c3:	add    BYTE PTR [rax],al
  40b0c5:	add    BYTE PTR [rax],al
  40b0c7:	add    al,bh
  40b0c9:	mov    bh,0x0
  40b0cb:	add    BYTE PTR [rax],al
  40b0cd:	add    BYTE PTR [rax],al
  40b0cf:	add    BYTE PTR [rax],cl
  40b0d1:	mov    eax,0x0
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	sbb    BYTE PTR [rax+0x0],bh
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	xor    al,0xb8
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	add    BYTE PTR [rax],al
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	movabs rax,0xb864000000000000
  40b0f2:	add    BYTE PTR [rax],al
  40b0f4:	add    BYTE PTR [rax],al
  40b0f6:	add    BYTE PTR [rax],al
  40b0f8:	jl     0x40b0b2
  40b0fa:	add    BYTE PTR [rax],al
  40b0fc:	add    BYTE PTR [rax],al
  40b0fe:	add    BYTE PTR [rax],al
  40b100:	pushf  
  40b101:	mov    eax,0x0
  40b106:	add    BYTE PTR [rax],al
  40b108:	sar    BYTE PTR [rax+0x0],0x0
  40b10f:	add    ah,bl
  40b111:	mov    eax,0x0
  40b116:	add    BYTE PTR [rax],al
  40b118:	hlt    
  40b119:	mov    eax,0x0
  40b11e:	add    BYTE PTR [rax],al
  40b120:	sbb    BYTE PTR [rcx+0x0],bh
  40b126:	add    BYTE PTR [rax],al
  40b128:	cmp    BYTE PTR [rcx+0x0],bh
  40b12e:	add    BYTE PTR [rax],al
  40b130:	pop    rax
  40b131:	mov    ecx,0x0
  40b136:	add    BYTE PTR [rax],al
  40b138:	je     0x40b0f3
  40b13a:	add    BYTE PTR [rax],al
  40b13c:	add    BYTE PTR [rax],al
  40b13e:	add    BYTE PTR [rax],al
  40b140:	test   BYTE PTR [rcx+0x0],bh
  40b146:	add    BYTE PTR [rax],al
  40b148:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b149:	mov    ecx,0x0
	...
  40b156:	add    BYTE PTR [rax],al
  40b158:	mov    ah,0xb9
  40b15a:	add    BYTE PTR [rax],al
  40b15c:	add    BYTE PTR [rax],al
  40b15e:	add    BYTE PTR [rax],al
  40b160:	int3   
  40b161:	mov    ecx,0x0
  40b166:	add    BYTE PTR [rax],al
  40b168:	in     al,0xb9
  40b16a:	add    BYTE PTR [rax],al
  40b16c:	add    BYTE PTR [rax],al
  40b16e:	add    BYTE PTR [rax],al
  40b170:	clc    
  40b171:	mov    ecx,0x0
  40b176:	add    BYTE PTR [rax],al
  40b178:	(bad)  
  40b179:	mov    edx,0x0
  40b17e:	add    BYTE PTR [rax],al
  40b180:	and    al,0xba
  40b182:	add    BYTE PTR [rax],al
  40b184:	add    BYTE PTR [rax],al
  40b186:	add    BYTE PTR [rax],al
  40b188:	xor    al,0xba
  40b18a:	add    BYTE PTR [rax],al
  40b18c:	add    BYTE PTR [rax],al
  40b18e:	add    BYTE PTR [rax],al
  40b190:	rex.RX mov edx,0x0
  40b196:	add    BYTE PTR [rax],al
  40b198:	(bad)  
  40b199:	mov    edx,0x0
  40b19e:	add    BYTE PTR [rax],al
  40b1a0:	jo     0x40b15c
  40b1a2:	add    BYTE PTR [rax],al
  40b1a4:	add    BYTE PTR [rax],al
  40b1a6:	add    BYTE PTR [rax],al
  40b1a8:	mov    WORD PTR [rdx+0x0],?
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b1b1:	mov    edx,0x0
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	mov    esi,0xba
  40b1bd:	add    BYTE PTR [rax],al
  40b1bf:	add    ah,dl
  40b1c1:	mov    edx,0x0
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	call   0x40b287
  40b1cd:	add    BYTE PTR [rax],al
  40b1cf:	add    BYTE PTR [rdx],al
  40b1d1:	mov    ebx,0x0
  40b1d6:	add    BYTE PTR [rax],al
  40b1d8:	(bad)  
  40b1d9:	mov    ebx,0x0
  40b1de:	add    BYTE PTR [rax],al
  40b1e0:	xor    al,0xbb
  40b1e2:	add    BYTE PTR [rax],al
  40b1e4:	add    BYTE PTR [rax],al
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	cmp    al,0xbb
  40b1ea:	add    BYTE PTR [rax],al
  40b1ec:	add    BYTE PTR [rax],al
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	push   rax
  40b1f1:	mov    ebx,0x0
  40b1f6:	add    BYTE PTR [rax],al
  40b1f8:	pop    rsi
  40b1f9:	mov    ebx,0x0
  40b1fe:	add    BYTE PTR [rax],al
  40b200:	jp     0x40b1bd
  40b202:	add    BYTE PTR [rax],al
  40b204:	add    BYTE PTR [rax],al
  40b206:	add    BYTE PTR [rax],al
  40b208:	mov    WORD PTR [rbx+0x0],?
	...
  40b216:	add    BYTE PTR [rax],al
  40b218:	pushf  
  40b219:	mov    ebx,0x0
  40b21e:	add    BYTE PTR [rax],al
  40b220:	mov    ah,0xbb
  40b222:	add    BYTE PTR [rax],al
  40b224:	add    BYTE PTR [rax],al
  40b226:	add    BYTE PTR [rax],al
  40b228:	ret    0xbb
  40b22b:	add    BYTE PTR [rax],al
  40b22d:	add    BYTE PTR [rax],al
  40b22f:	add    dl,dl
  40b231:	mov    ebx,0x0
  40b236:	add    BYTE PTR [rax],al
  40b238:	fidivr WORD PTR [rbx+0x0]
  40b23e:	add    BYTE PTR [rax],al
  40b240:	in     al,dx
  40b241:	mov    ebx,0x0
  40b246:	add    BYTE PTR [rax],al
  40b248:	cld    
  40b249:	mov    ebx,0x0
  40b24e:	add    BYTE PTR [rax],al
  40b250:	(bad)  
  40b251:	mov    esp,0x0
  40b256:	add    BYTE PTR [rax],al
  40b258:	and    bh,BYTE PTR [rax+rax*1+0x0]
  40b25f:	add    BYTE PTR [rsp+rdi*4],ch
  40b262:	add    BYTE PTR [rax],al
  40b264:	add    BYTE PTR [rax],al
  40b266:	add    BYTE PTR [rax],al
  40b268:	cmp    bh,BYTE PTR [rax+rax*1+0x0]
  40b26f:	add    BYTE PTR [rsp+rdi*4+0x0],al
  40b273:	add    BYTE PTR [rax],al
  40b275:	add    BYTE PTR [rax],al
  40b277:	add    BYTE PTR [rsi-0x44],cl
  40b27a:	add    BYTE PTR [rax],al
  40b27c:	add    BYTE PTR [rax],al
  40b27e:	add    BYTE PTR [rax],al
  40b280:	pop    rax
  40b281:	mov    esp,0x0
  40b286:	add    BYTE PTR [rax],al
  40b288:	fs mov esp,0x0
  40b28e:	add    BYTE PTR [rax],al
  40b290:	ins    BYTE PTR es:[rdi],dx
  40b291:	mov    esp,0x0
  40b296:	add    BYTE PTR [rax],al
  40b298:	jbe    0x40b256
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	add    BYTE PTR [rax],al
  40b29e:	add    BYTE PTR [rax],al
  40b2a0:	cmp    BYTE PTR [rax+rax*1+0x0],0x0
  40b2a8:	mov    bh,BYTE PTR [rax+rax*1+0x0]
  40b2af:	add    BYTE PTR [rdx+0xbc],dl
  40b2b5:	add    BYTE PTR [rax],al
  40b2b7:	add    BYTE PTR [rdx+0xbc],bl
  40b2bd:	add    BYTE PTR [rax],al
  40b2bf:	add    BYTE PTR [rsp+rdi*4+0x0],ah
  40b2c6:	add    BYTE PTR [rax],al
  40b2c8:	lods   al,BYTE PTR ds:[rsi]
  40b2c9:	mov    esp,0x0
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	mov    dh,0xbc
  40b2d2:	add    BYTE PTR [rax],al
  40b2d4:	add    BYTE PTR [rax],al
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	mov    esi,0xbc
  40b2dd:	add    BYTE PTR [rax],al
  40b2df:	add    dh,al
  40b2e1:	mov    esp,0x0
  40b2e6:	add    BYTE PTR [rax],al
  40b2e8:	sar    BYTE PTR [rax+rax*1+0x0],1
  40b2ef:	add    dl,bl
  40b2f1:	mov    esp,0x0
  40b2f6:	add    BYTE PTR [rax],al
  40b2f8:	in     al,0xbc
  40b2fa:	add    BYTE PTR [rax],al
  40b2fc:	add    BYTE PTR [rax],al
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	out    dx,al
  40b301:	mov    esp,0x0
  40b306:	add    BYTE PTR [rax],al
  40b308:	idiv   BYTE PTR [rax+rax*1+0x0]
  40b30f:	add    dh,bh
  40b311:	mov    esp,0x0
  40b316:	add    BYTE PTR [rax],al
  40b318:	or     BYTE PTR [rbp+0x0],bh
  40b31e:	add    BYTE PTR [rax],al
  40b320:	adc    BYTE PTR [rbp+0x0],bh
  40b326:	add    BYTE PTR [rax],al
  40b328:	sbb    bh,BYTE PTR [rbp+0x0]
  40b32e:	add    BYTE PTR [rax],al
  40b330:	and    al,0xbd
  40b332:	add    BYTE PTR [rax],al
  40b334:	add    BYTE PTR [rax],al
  40b336:	add    BYTE PTR [rax],al
  40b338:	cs mov ebp,0x0
  40b33e:	add    BYTE PTR [rax],al
  40b340:	cmp    BYTE PTR [rbp+0x0],bh
  40b346:	add    BYTE PTR [rax],al
  40b348:	rex.X mov ebp,0x0
  40b34e:	add    BYTE PTR [rax],al
  40b350:	rex.WR movabs rbp,0xbd58000000000000
	...
  40b366:	add    BYTE PTR [rax],al
  40b368:	xor    BYTE PTR [rsi+0x0],0x0
  40b36f:	add    BYTE PTR [rsi+rsi*4+0x0],bl
  40b376:	add    BYTE PTR [rax],al
  40b378:	lods   al,BYTE PTR ds:[rsi]
  40b379:	mov    dh,0x0
  40b37b:	add    BYTE PTR [rax],al
  40b37d:	add    BYTE PTR [rax],al
  40b37f:	add    ah,al
  40b381:	mov    dh,0x0
  40b383:	add    BYTE PTR [rax],al
  40b385:	add    BYTE PTR [rax],al
  40b387:	add    al,ah
  40b389:	mov    dh,0x0
  40b38b:	add    BYTE PTR [rax],al
  40b38d:	add    BYTE PTR [rax],al
  40b38f:	add    al,bh
  40b391:	mov    dh,0x0
  40b393:	add    BYTE PTR [rax],al
  40b395:	add    BYTE PTR [rax],al
  40b397:	add    BYTE PTR [rax],bl
  40b399:	mov    bh,0x0
  40b39b:	add    BYTE PTR [rax],al
  40b39d:	add    BYTE PTR [rax],al
  40b39f:	add    BYTE PTR [rax],dh
  40b3a1:	mov    bh,0x0
  40b3a3:	add    BYTE PTR [rax],al
  40b3a5:	add    BYTE PTR [rax],al
  40b3a7:	add    BYTE PTR [rax-0x49],cl
  40b3aa:	add    BYTE PTR [rax],al
  40b3ac:	add    BYTE PTR [rax],al
  40b3ae:	add    BYTE PTR [rax],al
  40b3b0:	jo     0x40b369
  40b3b2:	add    BYTE PTR [rax],al
  40b3b4:	add    BYTE PTR [rax],al
  40b3b6:	add    BYTE PTR [rax],al
  40b3b8:	mov    BYTE PTR [rdi+0x0],dh
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	lods   al,BYTE PTR ds:[rsi]
  40b3c1:	mov    bh,0x0
  40b3c3:	add    BYTE PTR [rax],al
  40b3c5:	add    BYTE PTR [rax],al
  40b3c7:	add    ah,al
  40b3c9:	mov    bh,0x0
  40b3cb:	add    BYTE PTR [rax],al
  40b3cd:	add    BYTE PTR [rax],al
  40b3cf:	add    al,bl
  40b3d1:	mov    bh,0x0
  40b3d3:	add    BYTE PTR [rax],al
  40b3d5:	add    BYTE PTR [rax],al
  40b3d7:	add    ah,ch
  40b3d9:	mov    bh,0x0
  40b3db:	add    BYTE PTR [rax],al
  40b3dd:	add    BYTE PTR [rax],al
  40b3df:	add    al,bh
  40b3e1:	mov    bh,0x0
  40b3e3:	add    BYTE PTR [rax],al
  40b3e5:	add    BYTE PTR [rax],al
  40b3e7:	add    BYTE PTR [rax],cl
  40b3e9:	mov    eax,0x0
  40b3ee:	add    BYTE PTR [rax],al
  40b3f0:	sbb    BYTE PTR [rax+0x0],bh
  40b3f6:	add    BYTE PTR [rax],al
  40b3f8:	xor    al,0xb8
  40b3fa:	add    BYTE PTR [rax],al
  40b3fc:	add    BYTE PTR [rax],al
  40b3fe:	add    BYTE PTR [rax],al
  40b400:	movabs rax,0xb864000000000000
  40b40a:	add    BYTE PTR [rax],al
  40b40c:	add    BYTE PTR [rax],al
  40b40e:	add    BYTE PTR [rax],al
  40b410:	jl     0x40b3ca
  40b412:	add    BYTE PTR [rax],al
  40b414:	add    BYTE PTR [rax],al
  40b416:	add    BYTE PTR [rax],al
  40b418:	pushf  
  40b419:	mov    eax,0x0
  40b41e:	add    BYTE PTR [rax],al
  40b420:	sar    BYTE PTR [rax+0x0],0x0
  40b427:	add    ah,bl
  40b429:	mov    eax,0x0
  40b42e:	add    BYTE PTR [rax],al
  40b430:	hlt    
  40b431:	mov    eax,0x0
  40b436:	add    BYTE PTR [rax],al
  40b438:	sbb    BYTE PTR [rcx+0x0],bh
  40b43e:	add    BYTE PTR [rax],al
  40b440:	cmp    BYTE PTR [rcx+0x0],bh
  40b446:	add    BYTE PTR [rax],al
  40b448:	pop    rax
  40b449:	mov    ecx,0x0
  40b44e:	add    BYTE PTR [rax],al
  40b450:	je     0x40b40b
  40b452:	add    BYTE PTR [rax],al
  40b454:	add    BYTE PTR [rax],al
  40b456:	add    BYTE PTR [rax],al
  40b458:	test   BYTE PTR [rcx+0x0],bh
  40b45e:	add    BYTE PTR [rax],al
  40b460:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b461:	mov    ecx,0x0
	...
  40b46e:	add    BYTE PTR [rax],al
  40b470:	mov    ah,0xb9
  40b472:	add    BYTE PTR [rax],al
  40b474:	add    BYTE PTR [rax],al
  40b476:	add    BYTE PTR [rax],al
  40b478:	int3   
  40b479:	mov    ecx,0x0
  40b47e:	add    BYTE PTR [rax],al
  40b480:	in     al,0xb9
  40b482:	add    BYTE PTR [rax],al
  40b484:	add    BYTE PTR [rax],al
  40b486:	add    BYTE PTR [rax],al
  40b488:	clc    
  40b489:	mov    ecx,0x0
  40b48e:	add    BYTE PTR [rax],al
  40b490:	(bad)  
  40b491:	mov    edx,0x0
  40b496:	add    BYTE PTR [rax],al
  40b498:	and    al,0xba
  40b49a:	add    BYTE PTR [rax],al
  40b49c:	add    BYTE PTR [rax],al
  40b49e:	add    BYTE PTR [rax],al
  40b4a0:	xor    al,0xba
  40b4a2:	add    BYTE PTR [rax],al
  40b4a4:	add    BYTE PTR [rax],al
  40b4a6:	add    BYTE PTR [rax],al
  40b4a8:	rex.RX mov edx,0x0
  40b4ae:	add    BYTE PTR [rax],al
  40b4b0:	(bad)  
  40b4b1:	mov    edx,0x0
  40b4b6:	add    BYTE PTR [rax],al
  40b4b8:	jo     0x40b474
  40b4ba:	add    BYTE PTR [rax],al
  40b4bc:	add    BYTE PTR [rax],al
  40b4be:	add    BYTE PTR [rax],al
  40b4c0:	mov    WORD PTR [rdx+0x0],?
  40b4c6:	add    BYTE PTR [rax],al
  40b4c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b4c9:	mov    edx,0x0
  40b4ce:	add    BYTE PTR [rax],al
  40b4d0:	mov    esi,0xba
  40b4d5:	add    BYTE PTR [rax],al
  40b4d7:	add    ah,dl
  40b4d9:	mov    edx,0x0
  40b4de:	add    BYTE PTR [rax],al
  40b4e0:	call   0x40b59f
  40b4e5:	add    BYTE PTR [rax],al
  40b4e7:	add    BYTE PTR [rdx],al
  40b4e9:	mov    ebx,0x0
  40b4ee:	add    BYTE PTR [rax],al
  40b4f0:	(bad)  
  40b4f1:	mov    ebx,0x0
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	xor    al,0xbb
  40b4fa:	add    BYTE PTR [rax],al
  40b4fc:	add    BYTE PTR [rax],al
  40b4fe:	add    BYTE PTR [rax],al
  40b500:	cmp    al,0xbb
  40b502:	add    BYTE PTR [rax],al
  40b504:	add    BYTE PTR [rax],al
  40b506:	add    BYTE PTR [rax],al
  40b508:	push   rax
  40b509:	mov    ebx,0x0
  40b50e:	add    BYTE PTR [rax],al
  40b510:	pop    rsi
  40b511:	mov    ebx,0x0
  40b516:	add    BYTE PTR [rax],al
  40b518:	jp     0x40b4d5
  40b51a:	add    BYTE PTR [rax],al
  40b51c:	add    BYTE PTR [rax],al
  40b51e:	add    BYTE PTR [rax],al
  40b520:	mov    WORD PTR [rbx+0x0],?
	...
  40b52e:	add    BYTE PTR [rax],al
  40b530:	pushf  
  40b531:	mov    ebx,0x0
  40b536:	add    BYTE PTR [rax],al
  40b538:	mov    ah,0xbb
  40b53a:	add    BYTE PTR [rax],al
  40b53c:	add    BYTE PTR [rax],al
  40b53e:	add    BYTE PTR [rax],al
  40b540:	ret    0xbb
  40b543:	add    BYTE PTR [rax],al
  40b545:	add    BYTE PTR [rax],al
  40b547:	add    dl,dl
  40b549:	mov    ebx,0x0
  40b54e:	add    BYTE PTR [rax],al
  40b550:	fidivr WORD PTR [rbx+0x0]
  40b556:	add    BYTE PTR [rax],al
  40b558:	in     al,dx
  40b559:	mov    ebx,0x0
  40b55e:	add    BYTE PTR [rax],al
  40b560:	cld    
  40b561:	mov    ebx,0x0
  40b566:	add    BYTE PTR [rax],al
  40b568:	(bad)  
  40b569:	mov    esp,0x0
  40b56e:	add    BYTE PTR [rax],al
  40b570:	and    bh,BYTE PTR [rax+rax*1+0x0]
  40b577:	add    BYTE PTR [rsp+rdi*4],ch
  40b57a:	add    BYTE PTR [rax],al
  40b57c:	add    BYTE PTR [rax],al
  40b57e:	add    BYTE PTR [rax],al
  40b580:	cmp    bh,BYTE PTR [rax+rax*1+0x0]
  40b587:	add    BYTE PTR [rsp+rdi*4+0x0],al
  40b58b:	add    BYTE PTR [rax],al
  40b58d:	add    BYTE PTR [rax],al
  40b58f:	add    BYTE PTR [rsi-0x44],cl
  40b592:	add    BYTE PTR [rax],al
  40b594:	add    BYTE PTR [rax],al
  40b596:	add    BYTE PTR [rax],al
  40b598:	pop    rax
  40b599:	mov    esp,0x0
  40b59e:	add    BYTE PTR [rax],al
  40b5a0:	fs mov esp,0x0
  40b5a6:	add    BYTE PTR [rax],al
  40b5a8:	ins    BYTE PTR es:[rdi],dx
  40b5a9:	mov    esp,0x0
  40b5ae:	add    BYTE PTR [rax],al
  40b5b0:	jbe    0x40b56e
  40b5b2:	add    BYTE PTR [rax],al
  40b5b4:	add    BYTE PTR [rax],al
  40b5b6:	add    BYTE PTR [rax],al
  40b5b8:	cmp    BYTE PTR [rax+rax*1+0x0],0x0
  40b5c0:	mov    bh,BYTE PTR [rax+rax*1+0x0]
  40b5c7:	add    BYTE PTR [rdx+0xbc],dl
  40b5cd:	add    BYTE PTR [rax],al
  40b5cf:	add    BYTE PTR [rdx+0xbc],bl
  40b5d5:	add    BYTE PTR [rax],al
  40b5d7:	add    BYTE PTR [rsp+rdi*4+0x0],ah
  40b5de:	add    BYTE PTR [rax],al
  40b5e0:	lods   al,BYTE PTR ds:[rsi]
  40b5e1:	mov    esp,0x0
  40b5e6:	add    BYTE PTR [rax],al
  40b5e8:	mov    dh,0xbc
  40b5ea:	add    BYTE PTR [rax],al
  40b5ec:	add    BYTE PTR [rax],al
  40b5ee:	add    BYTE PTR [rax],al
  40b5f0:	mov    esi,0xbc
  40b5f5:	add    BYTE PTR [rax],al
  40b5f7:	add    dh,al
  40b5f9:	mov    esp,0x0
  40b5fe:	add    BYTE PTR [rax],al
  40b600:	sar    BYTE PTR [rax+rax*1+0x0],1
  40b607:	add    dl,bl
  40b609:	mov    esp,0x0
  40b60e:	add    BYTE PTR [rax],al
  40b610:	in     al,0xbc
  40b612:	add    BYTE PTR [rax],al
  40b614:	add    BYTE PTR [rax],al
  40b616:	add    BYTE PTR [rax],al
  40b618:	out    dx,al
  40b619:	mov    esp,0x0
  40b61e:	add    BYTE PTR [rax],al
  40b620:	idiv   BYTE PTR [rax+rax*1+0x0]
  40b627:	add    dh,bh
  40b629:	mov    esp,0x0
  40b62e:	add    BYTE PTR [rax],al
  40b630:	or     BYTE PTR [rbp+0x0],bh
  40b636:	add    BYTE PTR [rax],al
  40b638:	adc    BYTE PTR [rbp+0x0],bh
  40b63e:	add    BYTE PTR [rax],al
  40b640:	sbb    bh,BYTE PTR [rbp+0x0]
  40b646:	add    BYTE PTR [rax],al
  40b648:	and    al,0xbd
  40b64a:	add    BYTE PTR [rax],al
  40b64c:	add    BYTE PTR [rax],al
  40b64e:	add    BYTE PTR [rax],al
  40b650:	cs mov ebp,0x0
  40b656:	add    BYTE PTR [rax],al
  40b658:	cmp    BYTE PTR [rbp+0x0],bh
  40b65e:	add    BYTE PTR [rax],al
  40b660:	rex.X mov ebp,0x0
  40b666:	add    BYTE PTR [rax],al
  40b668:	rex.WR movabs rbp,0xbd58000000000000
	...
  40b67e:	add    BYTE PTR [rax],al
  40b680:	movabs eax,ds:0x735f737562645f00
  40b689:	ins    BYTE PTR es:[rdi],dx
  40b68a:	gs gs jo 0x40b6ed
  40b68e:	ins    DWORD PTR es:[rdi],dx
  40b68f:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x6f636573
  40b697:	outs   dx,BYTE PTR ds:[rsi]
  40b698:	fs jae 0x40b69b
  40b69b:	add    BYTE PTR [rbx],dl
  40b69d:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b6a1:	jae    0x40b702
  40b6a3:	(bad)  
  40b6a4:	jne    0x40b719
  40b6a6:	pop    rdi
  40b6a7:	addr32 gs je 0x40b6ab
  40b6ab:	add    BYTE PTR [rip+0x75626401],dl        # 0x75a31ab2
  40b6b1:	jae    0x40b712
  40b6b3:	(bad)  
  40b6b4:	jne    0x40b729
  40b6b6:	pop    rdi
  40b6b7:	addr32 gs je 0x40b71a
  40b6bb:	jo     0x40b72f
  40b6bd:	imul   esi,DWORD PTR [rsi+0x61],0x6574
  40b6c4:	(bad)  
  40b6c5:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b6c9:	jae    0x40b72a
  40b6cb:	(bad)  
  40b6cc:	jne    0x40b741
  40b6ce:	pop    rdi
  40b6cf:	addr32 gs je 0x40b732
  40b6d3:	jne    0x40b743
  40b6d5:	imul   esi,DWORD PTR [rcx+0x75],0x616e5f65
  40b6dc:	ins    DWORD PTR es:[rdi],dx
  40b6dd:	add    BYTE PTR gs:[rax],al
  40b6e0:	sbb    al,0x1
  40b6e2:	fs (bad) 
  40b6e4:	jne    0x40b759
  40b6e6:	pop    rdi
  40b6e7:	(bad)  
  40b6e8:	jne    0x40b75d
  40b6ea:	pop    rdi
  40b6eb:	jb     0x40b752
  40b6ed:	jno    0x40b764
  40b6ef:	gs jae 0x40b766
  40b6f2:	pop    rdi
  40b6f3:	outs   dx,BYTE PTR ds:[rsi]
  40b6f4:	(bad)  
  40b6f5:	ins    DWORD PTR es:[rdi],dx
  40b6f6:	add    BYTE PTR gs:[rdi],bl
  40b6f9:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b6fd:	jae    0x40b75e
  40b6ff:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b702:	outs   dx,BYTE PTR ds:[rsi]
  40b703:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b708:	outs   dx,BYTE PTR ds:[rsi]
  40b709:	pop    rdi
  40b70a:	(bad)  
  40b70b:	fs fs pop rdi
  40b70e:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  40b715:	add    BYTE PTR [rax],al
  40b717:	add    BYTE PTR [rbx],ah
  40b719:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b71d:	jae    0x40b77e
  40b71f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b722:	outs   dx,BYTE PTR ds:[rsi]
  40b723:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b728:	outs   dx,BYTE PTR ds:[rsi]
  40b729:	pop    rdi
  40b72a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40b72e:	add    BYTE PTR gs:[rip+0x75626401],ah        # 0x75a31b36
  40b735:	jae    0x40b796
  40b737:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b73a:	outs   dx,BYTE PTR ds:[rsi]
  40b73b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b740:	outs   dx,BYTE PTR ds:[rsi]
  40b741:	pop    rdi
  40b742:	data16 ins BYTE PTR es:[rdi],dx
  40b744:	jne    0x40b7b9
  40b746:	push   0x64014200
  40b74b:	(bad)  
  40b74c:	jne    0x40b7c1
  40b74e:	pop    rdi
  40b74f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b752:	outs   dx,BYTE PTR ds:[rsi]
  40b753:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b758:	outs   dx,BYTE PTR ds:[rsi]
  40b759:	pop    rdi
  40b75a:	jb     0x40b7c1
  40b75c:	(bad)  
  40b75d:	fs pop rdi
  40b75f:	ja     0x40b7d3
  40b761:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x70736964
  40b769:	(bad)  
  40b76a:	je     0x40b7cf
  40b76c:	push   0x48000000
  40b771:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b775:	jae    0x40b7d6
  40b777:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b77a:	outs   dx,BYTE PTR ds:[rsi]
  40b77b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b780:	outs   dx,BYTE PTR ds:[rsi]
  40b781:	pop    rdi
  40b782:	jae    0x40b7e9
  40b784:	outs   dx,BYTE PTR ds:[rsi]
  40b785:	add    BYTE PTR fs:[rax],al
  40b788:	add    QWORD PTR [rdx+r12*2+0x75],rsp
  40b78d:	jae    0x40b7ee
  40b78f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b792:	outs   dx,BYTE PTR ds:[rsi]
  40b793:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b798:	outs   dx,BYTE PTR ds:[rsi]
  40b799:	pop    rdi
  40b79a:	jae    0x40b801
  40b79c:	outs   dx,BYTE PTR ds:[rsi]
  40b79d:	fs pop rdi
  40b79f:	ja     0x40b80a
  40b7a1:	je     0x40b80b
  40b7a3:	pop    rdi
  40b7a4:	jb     0x40b80b
  40b7a6:	jo     0x40b814
  40b7a8:	jns    0x40b7aa
  40b7aa:	add    BYTE PTR [rax],al
  40b7ac:	pop    rsi
  40b7ad:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b7b1:	jae    0x40b812
  40b7b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b7b6:	outs   dx,BYTE PTR ds:[rsi]
  40b7b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b7bc:	outs   dx,BYTE PTR ds:[rsi]
  40b7bd:	pop    rdi
  40b7be:	jne    0x40b82e
  40b7c0:	jb     0x40b827
  40b7c2:	data16 add BYTE PTR [rax+0x1],ah
  40b7c6:	fs (bad) 
  40b7c8:	jne    0x40b83d
  40b7ca:	pop    rdi
  40b7cb:	gs jb  0x40b840
  40b7ce:	outs   dx,DWORD PTR ds:[rsi]
  40b7cf:	jb     0x40b830
  40b7d1:	data16 jb 0x40b839
  40b7d4:	add    BYTE PTR gs:[rax],al
  40b7d7:	add    BYTE PTR [rdx+0x1],ah
  40b7da:	fs (bad) 
  40b7dc:	jne    0x40b851
  40b7de:	pop    rdi
  40b7df:	gs jb  0x40b854
  40b7e2:	outs   dx,DWORD PTR ds:[rsi]
  40b7e3:	jb     0x40b844
  40b7e5:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40b7ec:	add    DWORD PTR fs:[rdx+riz*2+0x75],esp
  40b7f1:	jae    0x40b852
  40b7f3:	data16 jb 0x40b85b
  40b7f6:	add    BYTE PTR gs:[rax+0x1],ch
  40b7fa:	fs (bad) 
  40b7fc:	jne    0x40b871
  40b7fe:	pop    rdi
  40b7ff:	ins    DWORD PTR es:[rdi],dx
  40b800:	(bad)  
  40b801:	ins    BYTE PTR es:[rdi],dx
  40b802:	ins    BYTE PTR es:[rdi],dx
  40b803:	outs   dx,DWORD PTR ds:[rsi]
  40b804:	movsxd eax,DWORD PTR [rax]
  40b806:	add    BYTE PTR [rax],al
  40b808:	imul   eax,DWORD PTR [rcx],0x73756264
  40b80e:	pop    rdi
  40b80f:	ins    DWORD PTR es:[rdi],dx
  40b810:	(bad)  
  40b811:	ins    BYTE PTR es:[rdi],dx
  40b812:	ins    BYTE PTR es:[rdi],dx
  40b813:	outs   dx,DWORD PTR ds:[rsi]
  40b814:	movsxd esi,DWORD PTR [rax]
  40b816:	add    BYTE PTR [rax],al
  40b818:	imul   eax,DWORD PTR [rcx],0x64
  40b81b:	(bad)  
  40b81c:	jne    0x40b891
  40b81e:	pop    rdi
  40b81f:	ins    DWORD PTR es:[rdi],dx
  40b820:	gs jae 0x40b896
  40b823:	(bad)  
  40b824:	addr32 gs pop rdi
  40b827:	(bad)  
  40b828:	jo     0x40b89a
  40b82a:	outs   dx,BYTE PTR gs:[rsi]
  40b82c:	fs pop rdi
  40b82e:	(bad)  
  40b82f:	jb     0x40b898
  40b831:	jae    0x40b833
  40b833:	add    BYTE PTR [rsi+0x1],ch
  40b836:	fs (bad) 
  40b838:	jne    0x40b8ad
  40b83a:	pop    rdi
  40b83b:	ins    DWORD PTR es:[rdi],dx
  40b83c:	gs jae 0x40b8b2
  40b83f:	(bad)  
  40b840:	addr32 gs pop rdi
  40b843:	movsxd ebp,DWORD PTR [rdi+0x70]
  40b846:	jns    0x40b848
  40b848:	outs   dx,DWORD PTR ds:[rsi]
  40b849:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b84d:	jae    0x40b8ae
  40b84f:	ins    DWORD PTR es:[rdi],dx
  40b850:	gs jae 0x40b8c6
  40b853:	(bad)  
  40b854:	addr32 gs pop rdi
  40b857:	fs gs ins DWORD PTR es:[rdi],dx
  40b85a:	(bad)  
  40b85b:	jb     0x40b8d0
  40b85d:	push   0x6c61
  40b862:	add    BYTE PTR [rax],al
  40b864:	(bad)  
  40b865:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b869:	jae    0x40b8ca
  40b86b:	ins    DWORD PTR es:[rdi],dx
  40b86c:	gs jae 0x40b8e2
  40b86f:	(bad)  
  40b870:	addr32 gs pop rdi
  40b873:	addr32 gs je 0x40b8d6
  40b877:	je     0x40b8f2
  40b879:	jo     0x40b8e0
  40b87b:	add    BYTE PTR [rdx+0x75626401],ah
  40b881:	jae    0x40b8e2
  40b883:	ins    DWORD PTR es:[rdi],dx
  40b884:	gs jae 0x40b8fa
  40b887:	(bad)  
  40b888:	addr32 gs pop rdi
  40b88b:	outs   dx,BYTE PTR ds:[rsi]
  40b88c:	gs ja  0x40b8ee
  40b88f:	ins    DWORD PTR es:[rdi],dx
  40b890:	gs je  0x40b8fb
  40b893:	outs   dx,DWORD PTR ds:[rsi]
  40b894:	fs pop rdi
  40b896:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b899:	ins    BYTE PTR es:[rdi],dx
  40b89a:	add    BYTE PTR [rax],al
  40b89c:	movabs ds:0x656d5f7375626401,eax
  40b8a5:	jae    0x40b91a
  40b8a7:	(bad)  
  40b8a8:	addr32 gs pop rdi
  40b8ab:	outs   dx,BYTE PTR ds:[rsi]
  40b8ac:	gs ja  0x40b90e
  40b8af:	ins    DWORD PTR es:[rdi],dx
  40b8b0:	gs je  0x40b91b
  40b8b3:	outs   dx,DWORD PTR ds:[rsi]
  40b8b4:	fs pop rdi
  40b8b6:	jb     0x40b91d
  40b8b8:	je     0x40b92f
  40b8ba:	jb     0x40b92a
  40b8bc:	add    BYTE PTR [rax],al
  40b8be:	add    BYTE PTR [rax],al
  40b8c0:	lods   eax,DWORD PTR ds:[rsi]
  40b8c1:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b8c5:	jae    0x40b926
  40b8c7:	ins    DWORD PTR es:[rdi],dx
  40b8c8:	gs jae 0x40b93e
  40b8cb:	(bad)  
  40b8cc:	addr32 gs pop rdi
  40b8cf:	jae    0x40b936
  40b8d1:	je     0x40b932
  40b8d3:	outs   dx,BYTE PTR ds:[rsi]
  40b8d4:	outs   dx,DWORD PTR ds:[rsi]
  40b8d5:	pop    rdi
  40b8d6:	jb     0x40b93d
  40b8d8:	jo     0x40b946
  40b8da:	jns    0x40b8dc
  40b8dc:	mov    ah,0x1
  40b8de:	fs (bad) 
  40b8e0:	jne    0x40b955
  40b8e2:	pop    rdi
  40b8e3:	ins    DWORD PTR es:[rdi],dx
  40b8e4:	gs jae 0x40b95a
  40b8e7:	(bad)  
  40b8e8:	addr32 gs pop rdi
  40b8eb:	jne    0x40b95b
  40b8ed:	jb     0x40b954
  40b8ef:	data16 add BYTE PTR [rax],al
  40b8f2:	add    BYTE PTR [rax],al
  40b8f4:	mov    ebx,0x75626401
  40b8f9:	jae    0x40b95a
  40b8fb:	jo     0x40b962
  40b8fd:	outs   dx,BYTE PTR ds:[rsi]
  40b8fe:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c61635f
  40b906:	ins    BYTE PTR es:[rdi],dx
  40b907:	pop    rdi
  40b908:	addr32 gs je 0x40b96b
  40b90c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40b90f:	jo     0x40b97d
  40b911:	gs je  0x40b979
  40b914:	add    BYTE PTR fs:[rax],al
  40b917:	add    BYTE PTR [rdi+0x75626401],bh
  40b91d:	jae    0x40b97e
  40b91f:	jo     0x40b986
  40b921:	outs   dx,BYTE PTR ds:[rsi]
  40b922:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c61635f
  40b92a:	ins    BYTE PTR es:[rdi],dx
  40b92b:	pop    rdi
  40b92c:	jae    0x40b993
  40b92e:	je     0x40b98f
  40b930:	outs   dx,BYTE PTR ds:[rsi]
  40b931:	outs   dx,DWORD PTR ds:[rsi]
  40b932:	je     0x40b99d
  40b934:	data16 jns 0x40b937
  40b937:	add    al,al
  40b939:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b93d:	jae    0x40b99e
  40b93f:	jo     0x40b9a6
  40b941:	outs   dx,BYTE PTR ds:[rsi]
  40b942:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c61635f
  40b94a:	ins    BYTE PTR es:[rdi],dx
  40b94b:	pop    rdi
  40b94c:	jae    0x40b9c2
  40b94e:	gs (bad) 
  40b950:	ins    BYTE PTR es:[rdi],dx
  40b951:	pop    rdi
  40b952:	jb     0x40b9b9
  40b954:	jo     0x40b9c2
  40b956:	jns    0x40b958
  40b958:	rol    DWORD PTR [rcx],0x64
  40b95b:	(bad)  
  40b95c:	jne    0x40b9d1
  40b95e:	pop    rdi
  40b95f:	jo     0x40b9c6
  40b961:	outs   dx,BYTE PTR ds:[rsi]
  40b962:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c61635f
  40b96a:	ins    BYTE PTR es:[rdi],dx
  40b96b:	pop    rdi
  40b96c:	jne    0x40b9dc
  40b96e:	jb     0x40b9d5
  40b970:	data16 add BYTE PTR [rax],al
  40b973:	add    dl,al
  40b975:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b979:	jae    0x40b9da
  40b97b:	jb     0x40b9e2
  40b97d:	(bad)  
  40b97e:	ins    BYTE PTR es:[rdi],dx
  40b97f:	ins    BYTE PTR es:[rdi],dx
  40b980:	outs   dx,DWORD PTR ds:[rsi]
  40b981:	movsxd eax,DWORD PTR [rax]
  40b983:	add    ah,dl
  40b985:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b989:	jae    0x40b9ea
  40b98b:	jae    0x40b9f2
  40b98d:	je     0x40b9ee
  40b98f:	gs jb  0x40ba04
  40b992:	outs   dx,DWORD PTR ds:[rsi]
  40b993:	jb     0x40b9f4
  40b995:	data16 jb 0x40ba07
  40b998:	ins    DWORD PTR es:[rdi],dx
  40b999:	pop    rdi
  40b99a:	ins    DWORD PTR es:[rdi],dx
  40b99b:	gs jae 0x40ba11
  40b99e:	(bad)  
  40b99f:	add    BYTE PTR gs:[eax],al
  40b9a3:	add    dh,dl
  40b9a5:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40b9a9:	jae    0x40ba0a
  40b9ab:	jae    0x40ba15
  40b9ad:	jne    0x40ba23
  40b9af:	outs   dx,DWORD PTR fs:[rsi]
  40b9b1:	ja     0x40ba21
  40b9b3:	add    al,bl
  40b9b5:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40b9b9:	gs je  0x40ba21
  40b9bc:	rex.XB jb 0x40ba28
  40b9bf:	je     0x40ba2a
  40b9c1:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b9c4:	push   rbx
  40b9c5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b9ca:	outs   dx,BYTE PTR ds:[rsi]
  40b9cb:	add    al,bh
  40b9cd:	add    BYTE PTR [rbp+0x6e],al
  40b9d0:	je     0x40ba37
  40b9d2:	jb     0x40ba17
  40b9d4:	jb     0x40ba3f
  40b9d6:	je     0x40ba41
  40b9d8:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b9db:	push   rbx
  40b9dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b9e1:	outs   dx,BYTE PTR ds:[rsi]
  40b9e2:	add    BYTE PTR [rax],al
  40b9e4:	int    0x1
  40b9e6:	rex.RXB
  40b9e7:	gs je  0x40ba2d
  40b9ea:	jne    0x40ba5e
  40b9ec:	jb     0x40ba53
  40b9ee:	outs   dx,BYTE PTR ds:[rsi]
  40b9ef:	je     0x40ba41
  40b9f1:	jb     0x40ba62
  40b9f3:	movsxd esp,DWORD PTR [rbp+0x73]
  40b9f6:	jae    0x40b9f8
  40b9f8:	(bad)  
  40b9f9:	add    DWORD PTR [rdi+0x65],eax
  40b9fc:	je     0x40ba41
  40b9fe:	jne    0x40ba72
  40ba00:	jb     0x40ba67
  40ba02:	outs   dx,BYTE PTR ds:[rsi]
  40ba03:	je     0x40ba55
  40ba05:	jb     0x40ba76
  40ba07:	movsxd esp,DWORD PTR [rbp+0x73]
  40ba0a:	jae    0x40ba55
  40ba0c:	fs add dl,dl
  40ba0f:	add    DWORD PTR [rdi+0x65],eax
  40ba12:	je     0x40ba57
  40ba14:	jne    0x40ba88
  40ba16:	jb     0x40ba7d
  40ba18:	outs   dx,BYTE PTR ds:[rsi]
  40ba19:	je     0x40ba6f
  40ba1b:	push   0x64616572
  40ba20:	rex.WB
  40ba21:	add    BYTE PTR fs:[rax],al
  40ba24:	adc    BYTE PTR [rdx],al
  40ba26:	rex.RXB
  40ba27:	gs je  0x40ba76
  40ba2a:	(bad)  
  40ba2b:	jae    0x40baa1
  40ba2d:	rex.RB jb 0x40baa2
  40ba30:	outs   dx,DWORD PTR ds:[rsi]
  40ba31:	jb     0x40ba33
  40ba33:	add    BYTE PTR [rbx+0x2],dh
  40ba36:	rex.RXB
  40ba37:	gs je  0x40ba8d
  40ba3a:	je     0x40ba9d
  40ba3c:	jb     0x40bab2
  40ba3e:	jne    0x40bab0
  40ba40:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40ba42:	outs   dx,WORD PTR ds:[rsi]
  40ba44:	add    BYTE PTR [r10+0x74654702],cl
  40ba4b:	push   rbx
  40ba4c:	jns    0x40bac1
  40ba4e:	je     0x40bab5
  40ba50:	ins    DWORD PTR es:[rdi],dx
  40ba51:	push   rsp
  40ba52:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40ba59:	ins    BYTE PTR es:[rdi],dx
  40ba5a:	gs push rsp
  40ba5c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40ba63:	gs je  0x40baba
  40ba66:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40ba6d:	je     0x40ba6f
  40ba6f:	add    cl,bh
  40ba71:	add    cl,BYTE PTR [rcx+0x6e]
  40ba74:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40ba7c:	rex.XB jb 0x40bae8
  40ba7f:	je     0x40baea
  40ba81:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ba84:	push   rbx
  40ba85:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40ba8a:	outs   dx,BYTE PTR ds:[rsi]
  40ba8b:	add    BYTE PTR [rbx+0x3],cl
  40ba8e:	rex.WR
  40ba8f:	gs (bad) 
  40ba91:	jbe    0x40baf8
  40ba93:	rex.XB jb 0x40baff
  40ba96:	je     0x40bb01
  40ba98:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ba9b:	push   rbx
  40ba9c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40baa1:	outs   dx,BYTE PTR ds:[rsi]
  40baa2:	add    BYTE PTR [rax],al
  40baa4:	mov    ebx,0x65755103
  40baa9:	jb     0x40bb24
  40baab:	push   rax
  40baac:	gs jb  0x40bb15
  40baaf:	outs   dx,DWORD PTR ds:[rsi]
  40bab0:	jb     0x40bb1f
  40bab2:	(bad)  
  40bab3:	outs   dx,BYTE PTR ds:[rsi]
  40bab4:	movsxd esp,DWORD PTR [rbp+0x43]
  40bab7:	outs   dx,DWORD PTR ds:[rsi]
  40bab8:	jne    0x40bb28
  40baba:	je     0x40bb21
  40babc:	jb     0x40babe
  40babe:	add    DWORD PTR [rdx+rdx*2],eax
  40bac1:	je     0x40bb2f
  40bac3:	rex.B
  40bac4:	fs fs rex.RX jne 0x40bb37
  40bac9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bacd:	outs   dx,BYTE PTR ds:[rsi]
  40bace:	push   rsp
  40bacf:	(bad)  
  40bad0:	(bad)  
  40bad1:	ins    BYTE PTR es:[rdi],dx
  40bad2:	add    BYTE PTR gs:[rdx],al
  40bad5:	add    al,0x52
  40bad7:	je     0x40bb45
  40bad9:	rex.XB (bad) 
  40badb:	jo     0x40bb51
  40badd:	jne    0x40bb51
  40badf:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40bae2:	outs   dx,BYTE PTR ds:[rsi]
  40bae3:	je     0x40bb4a
  40bae5:	js     0x40bb5b
  40bae7:	add    BYTE PTR [rcx],cl
  40bae9:	add    al,0x52
  40baeb:	je     0x40bb59
  40baed:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40baef:	outs   dx,DWORD PTR ds:[rsi]
  40baf0:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40baf4:	jne    0x40bb64
  40baf6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bafa:	outs   dx,BYTE PTR ds:[rsi]
  40bafb:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40bafd:	je     0x40bb71
  40baff:	jns    0x40bb01
  40bb01:	add    BYTE PTR [rax],dl
  40bb03:	add    al,0x52
  40bb05:	je     0x40bb73
  40bb07:	push   rsi
  40bb08:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40bb0f:	outs   dx,BYTE PTR ds:[rsi]
  40bb10:	ja     0x40bb7b
  40bb12:	outs   dx,BYTE PTR ds:[rsi]
  40bb13:	add    BYTE PTR fs:[rax],al
  40bb16:	lahf   
  40bb17:	add    al,0x53
  40bb19:	gs je  0x40bb71
  40bb1c:	outs   dx,BYTE PTR ds:[rsi]
  40bb1d:	push   0x6c646e61
  40bb22:	gs fs rex.RB js 0x40bb8a
  40bb27:	gs jo  0x40bb9e
  40bb2a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40bb31:	gs jb  0x40bb34
  40bb34:	lods   al,BYTE PTR ds:[rsi]
  40bb35:	add    al,0x53
  40bb37:	ins    BYTE PTR es:[rdi],dx
  40bb38:	gs gs jo 0x40bb3c
  40bb3c:	mov    edx,0x72655404
  40bb41:	ins    DWORD PTR es:[rdi],dx
  40bb42:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40bb49:	outs   dx,DWORD PTR ds:[rsi]
  40bb4a:	movsxd esp,DWORD PTR [rbp+0x73]
  40bb4d:	jae    0x40bb4f
  40bb4f:	add    cl,al
  40bb51:	add    al,0x54
  40bb53:	ins    BYTE PTR es:[rdi],dx
  40bb54:	jae    0x40bb9d
  40bb56:	gs je  0x40bbaf
  40bb59:	(bad)  
  40bb5a:	ins    BYTE PTR es:[rdi],dx
  40bb5b:	jne    0x40bbc2
  40bb5d:	add    dh,cl
  40bb5f:	add    al,0x55
  40bb61:	outs   dx,BYTE PTR ds:[rsi]
  40bb62:	push   0x6c646e61
  40bb67:	gs fs rex.RB js 0x40bbcf
  40bb6c:	gs jo  0x40bbe3
  40bb6f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40bb76:	gs jb  0x40bb79
  40bb79:	add    ah,ch
  40bb7b:	add    al,0x56
  40bb7d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40bb84:	jb     0x40bbf5
  40bb86:	je     0x40bbed
  40bb88:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40bb8c:	out    dx,al
  40bb8d:	add    al,0x56
  40bb8f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40bb96:	jne    0x40bbfd
  40bb98:	jb     0x40bc13
  40bb9a:	add    BYTE PTR [rax],al
  40bb9c:	(bad)  
  40bb9d:	add    BYTE PTR [rdi+0x5f],bl
  40bba0:	rex.XB pop r15
  40bba2:	jae    0x40bc14
  40bba4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40bba8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40bbaf:	ins    BYTE PTR es:[rdi],dx
  40bbb0:	gs jb  0x40bbb3
  40bbb3:	add    BYTE PTR [rsi+0x0],cl
  40bbb6:	pop    rdi
  40bbb7:	pop    rdi
  40bbb8:	fs ins BYTE PTR es:[rdi],dx
  40bbba:	ins    BYTE PTR es:[rdi],dx
  40bbbb:	outs   dx,DWORD PTR ds:[rsi]
  40bbbc:	outs   dx,BYTE PTR ds:[rsi]
  40bbbd:	gs js  0x40bc29
  40bbc0:	je     0x40bbc2
  40bbc2:	push   rcx
  40bbc3:	add    BYTE PTR [rdi+0x5f],bl
  40bbc6:	addr32 gs je 0x40bc37
  40bbca:	(bad)  
  40bbcb:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40bbd2:	push   rdx
  40bbd3:	add    BYTE PTR [rdi+0x5f],bl
  40bbd6:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40bbdd:	add    BYTE PTR [rbx+0x0],dl
  40bbe0:	pop    rdi
  40bbe1:	pop    rdi
  40bbe2:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40bbe9:	movsxd eax,DWORD PTR [rax]
  40bbeb:	add    BYTE PTR [rdx+0x0],bl
  40bbee:	pop    rdi
  40bbef:	pop    rdi
  40bbf0:	ins    BYTE PTR es:[rdi],dx
  40bbf1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40bbf4:	jbe    0x40bc55
  40bbf6:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40bbfd:	add    BYTE PTR [rdi+0x5f],bl
  40bc00:	jae    0x40bc67
  40bc02:	je     0x40bc63
  40bc04:	(bad)  
  40bc05:	jo     0x40bc77
  40bc07:	pop    rdi
  40bc08:	je     0x40bc83
  40bc0a:	jo     0x40bc71
  40bc0c:	add    BYTE PTR [rax],al
  40bc0e:	(bad)  
  40bc0f:	add    BYTE PTR [rdi+0x5f],bl
  40bc12:	jae    0x40bc79
  40bc14:	je     0x40bc8b
  40bc16:	jae    0x40bc7d
  40bc18:	jb     0x40bc87
  40bc1a:	(bad)  
  40bc1b:	je     0x40bc85
  40bc1d:	gs jb  0x40bc92
  40bc20:	add    BYTE PTR [rax],al
  40bc22:	jno    0x40bc24
  40bc24:	pop    rdi
  40bc25:	(bad)  
  40bc26:	movsxd ebp,DWORD PTR [rbp+0x64]
  40bc29:	ins    BYTE PTR es:[rdi],dx
  40bc2a:	outs   dx,BYTE PTR ds:[rsi]
  40bc2b:	add    BYTE PTR [rax+0x0],bh
  40bc2e:	pop    rdi
  40bc2f:	(bad)  
  40bc30:	ins    DWORD PTR es:[rdi],dx
  40bc31:	jae    0x40bc9a
  40bc33:	pop    rdi
  40bc34:	gs js  0x40bca0
  40bc37:	je     0x40bc39
  40bc39:	add    BYTE PTR [rdx+0x65635f00],cl
  40bc3f:	js     0x40bcaa
  40bc41:	je     0x40bc43
  40bc43:	add    BYTE PTR [rdx+0x72655f00],bh
  40bc49:	jb     0x40bcb9
  40bc4b:	outs   dx,DWORD PTR ds:[rsi]
  40bc4c:	add    BYTE PTR [rax],al
  40bc4e:	fiadd  DWORD PTR [rax]
  40bc50:	pop    rdi
  40bc51:	ins    WORD PTR es:[rdi],dx
  40bc53:	outs   dx,DWORD PTR ds:[rsi]
  40bc54:	fs add BYTE PTR gs:[rax],al
  40bc58:	sbb    al,BYTE PTR [rcx]
  40bc5a:	pop    rdi
  40bc5b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40bc62:	ins    DWORD PTR es:[rdi],dx
  40bc63:	add    BYTE PTR [rax+0x6f6c5f01],al
  40bc69:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bc6c:	and    eax,0x6e6f5f02
  40bc71:	gs js  0x40bcdd
  40bc74:	je     0x40bc76
  40bc76:	(bad)
  40bc7a:	outs   dx,BYTE PTR ds:[rsi]
  40bc7b:	ins    BYTE PTR es:[rdi],dx
  40bc7c:	outs   dx,DWORD PTR ds:[rsi]
  40bc7d:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bc80:	pop    rax
  40bc81:	add    ebx,DWORD PTR [rdi+0x77]
  40bc84:	jb     0x40bcef
  40bc86:	je     0x40bced
  40bc88:	add    BYTE PTR [rax],al
  40bc8a:	jg     0x40bc8f
  40bc8c:	(bad)  
  40bc8d:	(bad)  
  40bc8e:	outs   dx,DWORD PTR ds:[rsi]
  40bc8f:	jb     0x40bd05
  40bc91:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  40bc98:	add    BYTE PTR [rax],al
  40bc9a:	nop
  40bc9b:	add    esp,DWORD PTR [rbx+0x61]
  40bc9e:	ins    BYTE PTR es:[rdi],dx
  40bc9f:	ins    BYTE PTR es:[rdi],dx
  40bca0:	outs   dx,DWORD PTR ds:[rsi]
  40bca1:	movsxd eax,DWORD PTR [rax]
  40bca3:	add    BYTE PTR [rbp+0x69786503],bl
  40bca9:	je     0x40bcab
  40bcab:	add    BYTE PTR [rax+0x72706603],dh
  40bcb1:	imul   ebp,DWORD PTR [rsi+0x74],0x3b60066
  40bcb8:	data16 jb 0x40bd20
  40bcbb:	(bad)  
  40bcbc:	add    BYTE PTR fs:[rdi+0x65726603],dh
  40bcc3:	add    BYTE PTR gs:[rax],al
  40bcc6:	ret    0x6603
  40bcc9:	ja     0x40bd3d
  40bccb:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40bcd3:	(bad)  
  40bcd4:	ins    BYTE PTR es:[rdi],dx
  40bcd5:	ins    BYTE PTR es:[rdi],dx
  40bcd6:	outs   dx,DWORD PTR ds:[rsi]
  40bcd7:	movsxd eax,DWORD PTR [rax]
  40bcd9:	add    al,bh
  40bcdb:	add    ebp,DWORD PTR [rbp+0x65]
  40bcde:	ins    DWORD PTR es:[rdi],dx
  40bcdf:	movsxd esi,DWORD PTR [rax+0x79]
  40bce2:	add    BYTE PTR [rax],al
  40bce4:	cli    
  40bce5:	add    ebp,DWORD PTR [rbp+0x65]
  40bce8:	ins    DWORD PTR es:[rdi],dx
  40bce9:	jae    0x40bd50
  40bceb:	je     0x40bced
  40bced:	add    BYTE PTR [rip+0x74757004],al        # 0x74b62cf7
  40bcf3:	jae    0x40bcf5
  40bcf5:	add    BYTE PTR [rbx],cl
  40bcf7:	add    al,0x72
  40bcf9:	(bad)  
  40bcfa:	outs   dx,BYTE PTR ds:[rsi]
  40bcfb:	add    BYTE PTR fs:[rax],al
  40bcfe:	(bad)  
  40bcff:	add    al,0x73
  40bd01:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40bd08:	(bad)  
  40bd09:	add    al,0x73
  40bd0b:	jb     0x40bd6e
  40bd0d:	outs   dx,BYTE PTR ds:[rsi]
  40bd0e:	add    BYTE PTR fs:[rdi],bl
  40bd11:	add    al,0x73
  40bd13:	jae    0x40bd78
  40bd15:	(bad)  
  40bd16:	outs   dx,BYTE PTR ds:[rsi]
  40bd17:	data16 add BYTE PTR [rax],al
  40bd1a:	and    al,0x4
  40bd1c:	jae    0x40bd92
  40bd1e:	jb     0x40bd83
  40bd20:	ins    DWORD PTR es:[rdi],dx
  40bd21:	jo     0x40bd23
  40bd23:	add    BYTE PTR [rbx],ch
  40bd25:	add    al,0x73
  40bd27:	je     0x40bd9b
  40bd29:	ins    BYTE PTR es:[rdi],dx
  40bd2a:	outs   dx,BYTE PTR gs:[rsi]
  40bd2c:	add    BYTE PTR [rax],al
  40bd2e:	cs add al,0x73
  40bd31:	je     0x40bda5
  40bd33:	outs   dx,BYTE PTR ds:[rsi]
  40bd34:	movsxd ebp,DWORD PTR [rbp+0x70]
  40bd37:	add    BYTE PTR [rsp+rax*1],dh
  40bd3a:	jae    0x40bdb0
  40bd3c:	jb     0x40bdb1
  40bd3e:	je     0x40bdb2
  40bd40:	add    BYTE PTR [rax],al
  40bd42:	cmp    DWORD PTR [rbx+rsi*2],eax
  40bd45:	je     0x40bdb9
  40bd47:	je     0x40bdb8
  40bd49:	jne    0x40bdb7
  40bd4b:	add    BYTE PTR [rsi+0x4],cl
  40bd4e:	jbe    0x40bdb6
  40bd50:	jo     0x40bdc4
  40bd52:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  40bd59:	add    al,0x5f
  40bd5b:	je     0x40bdc6
  40bd5d:	ins    DWORD PTR es:[rdi],dx
  40bd5e:	gs ss xor al,0x0
  40bd62:	add    BYTE PTR [rax],al
  40bd64:	add    BYTE PTR [rax-0x50000000],dh
  40bd6a:	add    BYTE PTR [rax],al
  40bd6c:	add    BYTE PTR [rax-0x50000000],dh
  40bd72:	add    BYTE PTR [rax],al
  40bd74:	add    BYTE PTR [rax-0x50000000],dh
  40bd7a:	add    BYTE PTR [rax],al
  40bd7c:	add    BYTE PTR [rax-0x50000000],dh
  40bd82:	add    BYTE PTR [rax],al
  40bd84:	add    BYTE PTR [rax-0x50000000],dh
  40bd8a:	add    BYTE PTR [rax],al
  40bd8c:	add    BYTE PTR [rax-0x50000000],dh
  40bd92:	add    BYTE PTR [rax],al
  40bd94:	add    BYTE PTR [rax-0x50000000],dh
  40bd9a:	add    BYTE PTR [rax],al
  40bd9c:	add    BYTE PTR [rax-0x50000000],dh
  40bda2:	add    BYTE PTR [rax],al
  40bda4:	add    BYTE PTR [rax-0x50000000],dh
  40bdaa:	add    BYTE PTR [rax],al
  40bdac:	add    BYTE PTR [rax-0x50000000],dh
  40bdb2:	add    BYTE PTR [rax],al
  40bdb4:	add    BYTE PTR [rax-0x50000000],dh
  40bdba:	add    BYTE PTR [rax],al
  40bdbc:	add    BYTE PTR [rax-0x50000000],dh
  40bdc2:	add    BYTE PTR [rax],al
  40bdc4:	add    BYTE PTR [rax-0x50000000],dh
  40bdca:	add    BYTE PTR [rax],al
  40bdcc:	add    BYTE PTR [rax-0x50000000],dh
  40bdd2:	add    BYTE PTR [rax],al
  40bdd4:	add    BYTE PTR [rax-0x50000000],dh
  40bdda:	add    BYTE PTR [rax],al
  40bddc:	add    BYTE PTR [rax-0x50000000],dh
  40bde2:	add    BYTE PTR [rax],al
  40bde4:	ins    BYTE PTR es:[rdi],dx
  40bde5:	imul   esp,DWORD PTR [rdx+0x64],0x2d737562
  40bdec:	xor    DWORD PTR [rip+0x6c642e33],ebp        # 0x6ca4ec25
  40bdf2:	ins    BYTE PTR es:[rdi],dx
  40bdf3:	add    BYTE PTR [rax+rsi*4],dl
  40bdf6:	add    BYTE PTR [rax],al
  40bdf8:	adc    al,0xb0
  40bdfa:	add    BYTE PTR [rax],al
  40bdfc:	adc    al,0xb0
  40bdfe:	add    BYTE PTR [rax],al
  40be00:	adc    al,0xb0
  40be02:	add    BYTE PTR [rax],al
  40be04:	adc    al,0xb0
  40be06:	add    BYTE PTR [rax],al
  40be08:	adc    al,0xb0
  40be0a:	add    BYTE PTR [rax],al
  40be0c:	adc    al,0xb0
  40be0e:	add    BYTE PTR [rax],al
  40be10:	adc    al,0xb0
  40be12:	add    BYTE PTR [rax],al
  40be14:	adc    al,0xb0
  40be16:	add    BYTE PTR [rax],al
  40be18:	adc    al,0xb0
  40be1a:	add    BYTE PTR [rax],al
  40be1c:	adc    al,0xb0
  40be1e:	add    BYTE PTR [rax],al
  40be20:	adc    al,0xb0
  40be22:	add    BYTE PTR [rax],al
  40be24:	adc    al,0xb0
  40be26:	add    BYTE PTR [rax],al
  40be28:	adc    al,0xb0
  40be2a:	add    BYTE PTR [rax],al
  40be2c:	adc    al,0xb0
  40be2e:	add    BYTE PTR [rax],al
  40be30:	adc    al,0xb0
  40be32:	add    BYTE PTR [rax],al
  40be34:	adc    al,0xb0
  40be36:	add    BYTE PTR [rax],al
  40be38:	adc    al,0xb0
  40be3a:	add    BYTE PTR [rax],al
  40be3c:	adc    al,0xb0
  40be3e:	add    BYTE PTR [rax],al
  40be40:	adc    al,0xb0
  40be42:	add    BYTE PTR [rax],al
  40be44:	adc    al,0xb0
  40be46:	add    BYTE PTR [rax],al
  40be48:	adc    al,0xb0
  40be4a:	add    BYTE PTR [rax],al
  40be4c:	adc    al,0xb0
  40be4e:	add    BYTE PTR [rax],al
  40be50:	rex.WXB
  40be51:	rex.RB push r10
  40be53:	rex.WRX
  40be54:	rex.RB
  40be55:	xor    r14,QWORD PTR [rdx]
  40be58:	cs fs ins BYTE PTR es:[rdi],dx
  40be5b:	ins    BYTE PTR es:[rdi],dx
  40be5c:	add    BYTE PTR [rax],al
  40be5e:	add    BYTE PTR [rax],al
  40be60:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be66:	add    BYTE PTR [rax],al
  40be68:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be6e:	add    BYTE PTR [rax],al
  40be70:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be76:	add    BYTE PTR [rax],al
  40be78:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be7e:	add    BYTE PTR [rax],al
  40be80:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be86:	add    BYTE PTR [rax],al
  40be88:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be8e:	add    BYTE PTR [rax],al
  40be90:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be96:	add    BYTE PTR [rax],al
  40be98:	sub    BYTE PTR [rax-0x4fd80000],dh
  40be9e:	add    BYTE PTR [rax],al
  40bea0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bea6:	add    BYTE PTR [rax],al
  40bea8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40beae:	add    BYTE PTR [rax],al
  40beb0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40beb6:	add    BYTE PTR [rax],al
  40beb8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bebe:	add    BYTE PTR [rax],al
  40bec0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bec6:	add    BYTE PTR [rax],al
  40bec8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bece:	add    BYTE PTR [rax],al
  40bed0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bed6:	add    BYTE PTR [rax],al
  40bed8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bede:	add    BYTE PTR [rax],al
  40bee0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bee6:	add    BYTE PTR [rax],al
  40bee8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40beee:	add    BYTE PTR [rax],al
  40bef0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bef6:	add    BYTE PTR [rax],al
  40bef8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40befe:	add    BYTE PTR [rax],al
  40bf00:	sub    BYTE PTR [rax+0x736d0000],dh
  40bf06:	jbe    0x40bf6b
  40bf08:	jb     0x40bf7e
  40bf0a:	cs fs ins BYTE PTR es:[rdi],dx
  40bf0d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040c000 <.CRT>:
	...
  40c008:	(bad)  
  40c009:	adc    DWORD PTR [rax+0x0],eax
	...
  40c020:	adc    BYTE PTR [rax],dl
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax],ah
  40c029:	sub    eax,0x40
	...
  40c03e:	add    BYTE PTR [rax],al
  40c040:	push   rax
  40c041:	(bad)  
  40c042:	add    BYTE PTR [rax],al
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rax],ah
  40c049:	(bad)  
  40c04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040d000 <.tls>:
	...
  40d020:	add    al,dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax-0x30],ah
  40d02a:	add    BYTE PTR [rax],al
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rsi+riz*4+0x40],bl
  40d033:	add    BYTE PTR [rax],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x40],al
  40d03a:	add    BYTE PTR [rax],al
	...
