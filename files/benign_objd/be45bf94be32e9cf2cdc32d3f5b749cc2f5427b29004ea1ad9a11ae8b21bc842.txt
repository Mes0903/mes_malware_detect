
be45bf94be32e9cf2cdc32d3f5b749cc2f5427b29004ea1ad9a11ae8b21bc842.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x17715]        # 0x418730
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x17716]        # 0x418740
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x17719]        # 0x418750
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x176dc]        # 0x418720
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1754f]        # 0x4185a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x176b1]        # 0x418710
  40105f:	mov    DWORD PTR [rip+0x1afa3],edx        # 0x41c008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x411500
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x40b5f0
  401081:	mov    rdx,QWORD PTR [rip+0x175b8]        # 0x418640
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1759e]        # 0x418630
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x17614]        # 0x4186b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1753b]        # 0x4185e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40b1d0
  4010af:	mov    rax,QWORD PTR [rip+0x1749a]        # 0x418550
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x411500
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa3a9]        # 0x40b4d0
  401127:	call   0x40b4c0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x17575]        # 0x4186e0
  40116b:	lea    r8,[rip+0x1aea6]        # 0x41c018
  401172:	lea    rdx,[rip+0x1aea7]        # 0x41c020
  401179:	lea    rcx,[rip+0x1aea8]        # 0x41c028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x1ae78],eax        # 0x41c000
  401188:	lea    rax,[rip+0x1ae71]        # 0x41c000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x17505]        # 0x4186a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x411518
  4011a3:	mov    DWORD PTR [rip+0x1ae67],eax        # 0x41c010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1754a]        # 0x418710
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1741b]        # 0x418610
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1e35e]        # 0x41f560
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x173f7]        # 0x418620
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x1adba],0x1        # 0x41c004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1732c]        # 0x418590
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x40b7e0
  40127d:	lea    rcx,[rip+0xaafc]        # 0x40bd80
  401284:	call   QWORD PTR [rip+0x1e2ce]        # 0x41f558
  40128a:	mov    rdx,QWORD PTR [rip+0x1736f]        # 0x418600
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x40bc90
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x411550
  4012a5:	call   0x40b5d0
  4012aa:	mov    rax,QWORD PTR [rip+0x172ef]        # 0x4185a0
  4012b1:	mov    QWORD PTR [rip+0x1d430],rax        # 0x41e6e8
  4012b8:	mov    rax,QWORD PTR [rip+0x17311]        # 0x4185d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1d3c9],rax        # 0x41e6e0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x10cca],eax        # 0x412000
  401336:	mov    r12d,DWORD PTR [rip+0x1aceb]        # 0x41c028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x411418
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x1acc2]        # 0x41c020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4113a8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x411418
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x411408
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x1ac6a],rbp        # 0x41c020
  4013b6:	call   0x40b1a0
  4013bb:	mov    rax,QWORD PTR [rip+0x171ee]        # 0x4185b0
  4013c2:	mov    rdx,QWORD PTR [rip+0x1ac4f]        # 0x41c018
  4013c9:	mov    ecx,DWORD PTR [rip+0x1ac59]        # 0x41c028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x1ac3c]        # 0x41c018
  4013dc:	mov    rdx,QWORD PTR [rip+0x1ac3d]        # 0x41c020
  4013e3:	call   0x411780
  4013e8:	mov    ecx,DWORD PTR [rip+0x1ac1a]        # 0x41c008
  4013ee:	mov    DWORD PTR [rip+0x1ac18],eax        # 0x41c00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x1ac02]        # 0x41c004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4114e8
  40140b:	mov    eax,DWORD PTR [rip+0x1abfb]        # 0x41c00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x171e9]        # 0x418620
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4114f0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1720d]        # 0x418670
  401463:	mov    rcx,QWORD PTR [rip+0x171f6]        # 0x418660
  40146a:	call   0x4114c8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1e047]        # 0x41f4e0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x171e9]        # 0x418690
  4014a7:	mov    rcx,QWORD PTR [rip+0x171d2]        # 0x418680
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4114c8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x411490
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x17235]        # 0x418710
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40b1e0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x17205]        # 0x418710
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40b1e0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rdi
  401532:	push   rsi
  401533:	push   rbx
  401534:	sub    rsp,0x28
  401538:	mov    rbp,rcx
  40153b:	lea    rsi,[rcx+0x1]
  40153f:	jmp    0x40154a
  401541:	test   r8b,r8b
  401544:	je     0x401559
  401546:	add    rsi,0x1
  40154a:	movzx  r8d,BYTE PTR [rsi-0x1]
  40154f:	lea    rbx,[rsi-0x1]
  401553:	cmp    r8b,0x5c
  401557:	jne    0x401541
  401559:	test   r8b,r8b
  40155c:	je     0x4015d0
  40155e:	movsx  edx,BYTE PTR [rsi]
  401561:	test   dl,dl
  401563:	je     0x4015d0
  401565:	lea    rcx,[rip+0x11a94]        # 0x413000
  40156c:	call   0x4113c8
  401571:	test   rax,rax
  401574:	je     0x401546
  401576:	xor    eax,eax
  401578:	or     rcx,0xffffffffffffffff
  40157c:	mov    rdi,rbp
  40157f:	repnz scas al,BYTE PTR es:[rdi]
  401581:	not    rcx
  401584:	sub    rcx,0x1
  401588:	call   0x402ec0
  40158d:	mov    r8,rbx
  401590:	mov    rdx,rbp
  401593:	mov    rcx,rax
  401596:	sub    r8,rbp
  401599:	lea    rsi,[rax+r8*1]
  40159d:	call   0x411408
  4015a2:	mov    r9,rax
  4015a5:	lea    rax,[rip+0x11a68]        # 0x413014
  4015ac:	nop    DWORD PTR [rax+0x0]
  4015b0:	movzx  r8d,BYTE PTR [rbx+0x1]
  4015b5:	lea    edx,[r8-0x30]
  4015b9:	cmp    dl,0x46
  4015bc:	ja     0x40169c
  4015c2:	movzx  edx,dl
  4015c5:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4015c9:	add    rdx,rax
  4015cc:	jmp    rdx
  4015ce:	xchg   ax,ax
  4015d0:	mov    rax,rbp
  4015d3:	add    rsp,0x28
  4015d7:	pop    rbx
  4015d8:	pop    rsi
  4015d9:	pop    rdi
  4015da:	pop    rbp
  4015db:	ret    
  4015dc:	mov    BYTE PTR [rsi],0xb
  4015df:	add    rbx,0x2
  4015e3:	add    rsi,0x1
  4015e7:	jmp    0x4015ff
  4015e9:	nop    DWORD PTR [rax+0x0]
  4015f0:	test   dl,dl
  4015f2:	je     0x401607
  4015f4:	add    rsi,0x1
  4015f8:	add    rbx,0x1
  4015fc:	mov    BYTE PTR [rsi-0x1],dl
  4015ff:	movzx  edx,BYTE PTR [rbx]
  401602:	cmp    dl,0x5c
  401605:	jne    0x4015f0
  401607:	test   dl,dl
  401609:	jne    0x4015b0
  40160b:	mov    BYTE PTR [rsi],0x0
  40160e:	mov    rax,r9
  401611:	jmp    0x4015d3
  401613:	mov    BYTE PTR [rsi],0x9
  401616:	add    rbx,0x2
  40161a:	add    rsi,0x1
  40161e:	jmp    0x4015ff
  401620:	mov    BYTE PTR [rsi],0xd
  401623:	add    rbx,0x2
  401627:	add    rsi,0x1
  40162b:	jmp    0x4015ff
  40162d:	mov    BYTE PTR [rsi],0xa
  401630:	add    rbx,0x2
  401634:	add    rsi,0x1
  401638:	jmp    0x4015ff
  40163a:	mov    BYTE PTR [rsi],0xc
  40163d:	add    rbx,0x2
  401641:	add    rsi,0x1
  401645:	jmp    0x4015ff
  401647:	mov    BYTE PTR [rsi],0x8
  40164a:	add    rbx,0x2
  40164e:	add    rsi,0x1
  401652:	jmp    0x4015ff
  401654:	mov    BYTE PTR [rsi],0x7
  401657:	add    rbx,0x2
  40165b:	add    rsi,0x1
  40165f:	jmp    0x4015ff
  401661:	mov    BYTE PTR [rsi],0x5c
  401664:	add    rbx,0x2
  401668:	jmp    0x4015ff
  40166a:	movsx  ecx,BYTE PTR [rbx+0x2]
  40166e:	movsx  edx,r8b
  401672:	sub    edx,0x30
  401675:	lea    r8d,[rcx-0x30]
  401679:	cmp    r8b,0x7
  40167d:	ja     0x4016a8
  40167f:	lea    edx,[rcx+rdx*8-0x30]
  401683:	movsx  ecx,BYTE PTR [rbx+0x3]
  401687:	lea    r8d,[rcx-0x30]
  40168b:	cmp    r8b,0x7
  40168f:	jbe    0x4016b3
  401691:	add    rbx,0x3
  401695:	mov    BYTE PTR [rsi],dl
  401697:	jmp    0x4015ff
  40169c:	add    rbx,0x1
  4016a0:	mov    BYTE PTR [rsi],0x5c
  4016a3:	jmp    0x4015ff
  4016a8:	add    rbx,0x2
  4016ac:	mov    BYTE PTR [rsi],dl
  4016ae:	jmp    0x4015ff
  4016b3:	lea    edx,[rcx+rdx*8-0x30]
  4016b7:	add    rbx,0x4
  4016bb:	mov    BYTE PTR [rsi],dl
  4016bd:	jmp    0x4015ff
  4016c2:	nop
  4016c3:	nop
  4016c4:	nop
  4016c5:	nop
  4016c6:	nop
  4016c7:	nop
  4016c8:	nop
  4016c9:	nop
  4016ca:	nop
  4016cb:	nop
  4016cc:	nop
  4016cd:	nop
  4016ce:	nop
  4016cf:	nop
  4016d0:	sub    rsp,0x38
  4016d4:	movzx  edx,BYTE PTR [rcx]
  4016d7:	xor    eax,eax
  4016d9:	and    edx,0xffffffdf
  4016dc:	sub    edx,0x41
  4016df:	cmp    dl,0x19
  4016e2:	ja     0x4016f0
  4016e4:	xor    eax,eax
  4016e6:	cmp    BYTE PTR [rcx+0x1],0x3a
  4016ea:	sete   al
  4016ed:	add    rax,rax
  4016f0:	add    rax,rcx
  4016f3:	movzx  r10d,BYTE PTR [rax]
  4016f7:	test   r10b,r10b
  4016fa:	je     0x40175a
  4016fc:	lea    rdx,[rax+0x1]
  401700:	mov    r8d,r10d
  401703:	mov    r9d,0x1
  401709:	jmp    0x401729
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	cmp    r8b,0x2f
  401714:	je     0x40172f
  401716:	movzx  r8d,BYTE PTR [rdx]
  40171a:	mov    rcx,rdx
  40171d:	xor    r9d,r9d
  401720:	add    rdx,0x1
  401724:	test   r8b,r8b
  401727:	je     0x401742
  401729:	cmp    r8b,0x5c
  40172d:	jne    0x401710
  40172f:	movzx  r8d,BYTE PTR [rdx]
  401733:	mov    rax,rdx
  401736:	mov    rcx,rdx
  401739:	add    rdx,0x1
  40173d:	test   r8b,r8b
  401740:	jne    0x401729
  401742:	cmp    BYTE PTR [rax],0x0
  401745:	je     0x401790
  401747:	test   r9d,r9d
  40174a:	jne    0x40175a
  40174c:	movzx  edx,BYTE PTR [rcx-0x1]
  401750:	cmp    dl,0x5c
  401753:	je     0x401760
  401755:	cmp    dl,0x2f
  401758:	je     0x401760
  40175a:	add    rsp,0x38
  40175e:	ret    
  40175f:	nop
  401760:	lea    rdx,[rip+0x120d9]        # 0x413840
  401767:	lea    rcx,[rip+0x120e2]        # 0x413850
  40176e:	mov    r8d,0x50
  401774:	mov    QWORD PTR [rsp+0x28],rax
  401779:	call   0x40ca80
  40177e:	mov    rax,QWORD PTR [rsp+0x28]
  401783:	add    rsp,0x38
  401787:	ret    
  401788:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	cmp    r10b,0x5c
  401794:	je     0x40179c
  401796:	cmp    r10b,0x2f
  40179a:	jne    0x401747
  40179c:	test   r9d,r9d
  40179f:	je     0x40174c
  4017a1:	sub    rax,0x1
  4017a5:	add    rsp,0x38
  4017a9:	ret    
  4017aa:	nop
  4017ab:	nop
  4017ac:	nop
  4017ad:	nop
  4017ae:	nop
  4017af:	nop
  4017b0:	push   rdi
  4017b1:	push   rsi
  4017b2:	push   rbx
  4017b3:	sub    rsp,0x20
  4017b7:	mov    rbx,QWORD PTR [rip+0x1de12]        # 0x41f5d0
  4017be:	call   rbx
  4017c0:	lea    rcx,[rax+0x30]
  4017c4:	call   0x401960
  4017c9:	test   eax,eax
  4017cb:	mov    rsi,QWORD PTR [rip+0x1de3e]        # 0x41f610
  4017d2:	jne    0x401822
  4017d4:	call   rsi
  4017d6:	mov    DWORD PTR [rax],0x0
  4017dc:	call   rbx
  4017de:	lea    rcx,[rax+0x60]
  4017e2:	call   0x411480
  4017e7:	test   eax,eax
  4017e9:	jne    0x40184b
  4017eb:	call   rbx
  4017ed:	lea    rcx,[rax+0x60]
  4017f1:	call   0x411478
  4017f6:	test   eax,eax
  4017f8:	jne    0x40184b
  4017fa:	call   rbx
  4017fc:	lea    rcx,[rax+0x60]
  401800:	call   0x411488
  401805:	test   eax,eax
  401807:	jne    0x401811
  401809:	add    rsp,0x20
  40180d:	pop    rbx
  40180e:	pop    rsi
  40180f:	pop    rdi
  401810:	ret    
  401811:	call   rsi
  401813:	cmp    DWORD PTR [rax],0x9
  401816:	je     0x401809
  401818:	mov    ecx,0x1
  40181d:	call   0x411490
  401822:	lea    rcx,[rip+0x12057]        # 0x413880
  401829:	call   0x40b000
  40182e:	mov    rdi,rax
  401831:	call   rsi
  401833:	mov    edx,DWORD PTR [rax]
  401835:	lea    r8,[rip+0x12050]        # 0x41388c
  40183c:	mov    r9,rdi
  40183f:	mov    ecx,0x1
  401844:	call   0x4031b0
  401849:	jmp    0x4017d4
  40184b:	call   rbx
  40184d:	lea    rcx,[rax+0x60]
  401851:	call   0x411488
  401856:	mov    ecx,0x1
  40185b:	call   0x411490
  401860:	nop
  401861:	nop
  401862:	nop
  401863:	nop
  401864:	nop
  401865:	nop
  401866:	nop
  401867:	nop
  401868:	nop
  401869:	nop
  40186a:	nop
  40186b:	nop
  40186c:	nop
  40186d:	nop
  40186e:	nop
  40186f:	nop
  401870:	push   rdi
  401871:	push   rsi
  401872:	push   rbx
  401873:	sub    rsp,0x20
  401877:	mov    rbx,rcx
  40187a:	mov    edi,edx
  40187c:	call   QWORD PTR [rip+0x1dd4e]        # 0x41f5d0
  401882:	add    rax,0x30
  401886:	cmp    rbx,rax
  401889:	je     0x4018f3
  40188b:	mov    rsi,QWORD PTR [rip+0x1dd7e]        # 0x41f610
  401892:	call   rsi
  401894:	mov    rcx,rbx
  401897:	mov    DWORD PTR [rax],0x0
  40189d:	call   0x411480
  4018a2:	test   eax,eax
  4018a4:	mov    rcx,rbx
  4018a7:	jne    0x401905
  4018a9:	test   dil,dil
  4018ac:	je     0x4018e0
  4018ae:	call   0x411478
  4018b3:	test   eax,eax
  4018b5:	je     0x401933
  4018b7:	call   rsi
  4018b9:	mov    edi,DWORD PTR [rax]
  4018bb:	mov    rcx,rbx
  4018be:	call   0x411488
  4018c3:	call   rsi
  4018c5:	mov    DWORD PTR [rax],edi
  4018c7:	call   rsi
  4018c9:	cmp    DWORD PTR [rax],0x20
  4018cc:	setne  al
  4018cf:	movzx  eax,al
  4018d2:	neg    eax
  4018d4:	add    rsp,0x20
  4018d8:	pop    rbx
  4018d9:	pop    rsi
  4018da:	pop    rdi
  4018db:	ret    
  4018dc:	nop    DWORD PTR [rax+0x0]
  4018e0:	call   0x411488
  4018e5:	test   eax,eax
  4018e7:	jne    0x4018c7
  4018e9:	xor    eax,eax
  4018eb:	add    rsp,0x20
  4018ef:	pop    rbx
  4018f0:	pop    rsi
  4018f1:	pop    rdi
  4018f2:	ret    
  4018f3:	cmp    BYTE PTR [rip+0x1a746],0x0        # 0x41c040
  4018fa:	jne    0x4018e9
  4018fc:	mov    BYTE PTR [rip+0x1a73d],0x1        # 0x41c040
  401903:	jmp    0x40188b
  401905:	call   0x411478
  40190a:	test   eax,eax
  40190c:	jne    0x4018b7
  40190e:	xor    ecx,ecx
  401910:	mov    rdx,rbx
  401913:	call   0x4050b0
  401918:	cmp    eax,0xffffffff
  40191b:	je     0x4018b7
  40191d:	mov    rcx,rbx
  401920:	call   0x411478
  401925:	test   eax,eax
  401927:	jne    0x4018b7
  401929:	call   rsi
  40192b:	mov    DWORD PTR [rax],0x0
  401931:	jmp    0x4018b7
  401933:	mov    rcx,rbx
  401936:	call   0x411488
  40193b:	test   eax,eax
  40193d:	je     0x4018e9
  40193f:	call   rsi
  401941:	cmp    DWORD PTR [rax],0x9
  401944:	jne    0x4018c7
  401946:	xor    eax,eax
  401948:	jmp    0x4018eb
  40194a:	nop    WORD PTR [rax+rax*1+0x0]
  401950:	xor    edx,edx
  401952:	jmp    0x401870
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	mov    edx,0x1
  401965:	jmp    0x401870
  40196a:	nop
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	push   rdi
  401971:	push   rsi
  401972:	push   rbx
  401973:	sub    rsp,0x20
  401977:	test   rcx,rcx
  40197a:	mov    rbx,rcx
  40197d:	je     0x4019e7
  40197f:	mov    edx,0x2f
  401984:	call   0x411390
  401989:	test   rax,rax
  40198c:	je     0x4019d8
  40198e:	lea    rdx,[rax+0x1]
  401992:	mov    rcx,rdx
  401995:	sub    rcx,rbx
  401998:	cmp    rcx,0x6
  40199c:	jle    0x4019d8
  40199e:	lea    rsi,[rax-0x6]
  4019a2:	lea    rdi,[rip+0x11f1f]        # 0x4138c8
  4019a9:	mov    ecx,0x7
  4019ae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019b0:	jne    0x4019d8
  4019b2:	lea    rdi,[rip+0x11f17]        # 0x4138d0
  4019b9:	mov    ecx,0x3
  4019be:	mov    rsi,rdx
  4019c1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019c3:	seta   r8b
  4019c7:	setb   cl
  4019ca:	add    rax,0x4
  4019ce:	cmp    r8b,cl
  4019d1:	cmovne rax,rdx
  4019d5:	mov    rbx,rax
  4019d8:	mov    QWORD PTR [rip+0x1a671],rbx        # 0x41c050
  4019df:	add    rsp,0x20
  4019e3:	pop    rbx
  4019e4:	pop    rsi
  4019e5:	pop    rdi
  4019e6:	ret    
  4019e7:	call   QWORD PTR [rip+0x1dbe3]        # 0x41f5d0
  4019ed:	lea    rcx,[rip+0x11e9c]        # 0x413890
  4019f4:	lea    rdx,[rax+0x60]
  4019f8:	call   0x405180
  4019fd:	call   0x4114a0
  401a02:	nop
  401a03:	nop
  401a04:	nop
  401a05:	nop
  401a06:	nop
  401a07:	nop
  401a08:	nop
  401a09:	nop
  401a0a:	nop
  401a0b:	nop
  401a0c:	nop
  401a0d:	nop
  401a0e:	nop
  401a0f:	nop
  401a10:	push   r15
  401a12:	push   r14
  401a14:	push   r13
  401a16:	push   r12
  401a18:	push   rbp
  401a19:	push   rdi
  401a1a:	push   rsi
  401a1b:	push   rbx
  401a1c:	sub    rsp,0xc8
  401a23:	lea    rbx,[rsp+0x40]
  401a28:	mov    r12,rcx
  401a2b:	mov    rcx,rdx
  401a2e:	mov    edx,0x2
  401a33:	lea    rbp,[rsp+0x80]
  401a3b:	call   0x4027e0
  401a40:	mov    QWORD PTR [rsp+0x28],rax
  401a45:	lea    rax,[rbx+0x4]
  401a49:	mov    rdi,QWORD PTR [rip+0x16b70]        # 0x4185c0
  401a50:	mov    QWORD PTR [rsp+0x20],rax
  401a55:	lea    rax,[rbp+0x4]
  401a59:	mov    QWORD PTR [rsp+0x30],rax
  401a5e:	xchg   ax,ax
  401a60:	cmp    BYTE PTR [r12],0x0
  401a65:	je     0x401d3e
  401a6b:	mov    rdx,QWORD PTR [rsp+0x28]
  401a70:	mov    rcx,r12
  401a73:	call   0x408a30
  401a78:	test   rax,rax
  401a7b:	mov    rsi,rax
  401a7e:	je     0x401d3e
  401a84:	mov    rax,QWORD PTR [rdi]
  401a87:	cmp    DWORD PTR [rax],0x1
  401a8a:	jle    0x402220
  401a90:	cmp    r12,rsi
  401a93:	mov    QWORD PTR [rsp+0x50],r12
  401a98:	mov    BYTE PTR [rsp+0x40],0x0
  401a9d:	mov    DWORD PTR [rsp+0x44],0x0
  401aa5:	mov    BYTE PTR [rsp+0x48],0x0
  401aaa:	jae    0x401bea
  401ab0:	mov    r12,QWORD PTR [rip+0x16c49]        # 0x418700
  401ab7:	nop    WORD PTR [rax+rax*1+0x0]
  401ac0:	cmp    BYTE PTR [rsp+0x40],0x0
  401ac5:	jne    0x401b28
  401ac7:	mov    r13,QWORD PTR [rsp+0x50]
  401acc:	movzx  eax,BYTE PTR [r13+0x0]
  401ad1:	mov    edx,eax
  401ad3:	and    eax,0x1f
  401ad6:	shr    dl,0x5
  401ad9:	and    edx,0x7
  401adc:	mov    edx,DWORD PTR [r12+rdx*4]
  401ae0:	bt     edx,eax
  401ae3:	jae    0x401b11
  401ae5:	mov    QWORD PTR [rsp+0x58],0x1
  401aee:	movsx  cx,BYTE PTR [r13+0x0]
  401af4:	mov    BYTE PTR [rsp+0x60],0x1
  401af9:	mov    BYTE PTR [rsp+0x48],0x1
  401afe:	mov    WORD PTR [rsp+0x62],cx
  401b03:	test   cx,cx
  401b06:	jne    0x401bbd
  401b0c:	call   0x4114a0
  401b11:	mov    rcx,QWORD PTR [rsp+0x20]
  401b16:	call   0x404620
  401b1b:	test   eax,eax
  401b1d:	je     0x402270
  401b23:	mov    BYTE PTR [rsp+0x40],0x1
  401b28:	mov    rax,QWORD PTR [rdi]
  401b2b:	mov    r13,QWORD PTR [rsp+0x50]
  401b30:	movsxd rdx,DWORD PTR [rax]
  401b33:	mov    rcx,r13
  401b36:	call   0x4027a0
  401b3b:	lea    rcx,[rbx+0x22]
  401b3f:	lea    r9,[rbx+0x4]
  401b43:	mov    r8,rax
  401b46:	mov    rdx,r13
  401b49:	call   0x404510
  401b4e:	cmp    rax,0xffffffffffffffff
  401b52:	mov    QWORD PTR [rsp+0x58],rax
  401b57:	je     0x4020c0
  401b5d:	cmp    rax,0xfffffffffffffffe
  401b61:	je     0x402120
  401b67:	test   rax,rax
  401b6a:	jne    0x401b8f
  401b6c:	mov    rax,QWORD PTR [rsp+0x50]
  401b71:	mov    QWORD PTR [rsp+0x58],0x1
  401b7a:	cmp    BYTE PTR [rax],0x0
  401b7d:	jne    0x402351
  401b83:	cmp    WORD PTR [rsp+0x62],0x0
  401b89:	jne    0x402333
  401b8f:	lea    rcx,[rbx+0x4]
  401b93:	mov    BYTE PTR [rsp+0x60],0x1
  401b98:	call   0x404620
  401b9d:	test   eax,eax
  401b9f:	je     0x401ba6
  401ba1:	mov    BYTE PTR [rsp+0x40],0x0
  401ba6:	movzx  eax,BYTE PTR [rsp+0x60]
  401bab:	movzx  ecx,WORD PTR [rsp+0x62]
  401bb0:	mov    BYTE PTR [rsp+0x48],0x1
  401bb5:	test   al,al
  401bb7:	jne    0x401b03
  401bbd:	mov    r13,QWORD PTR [rsp+0x50]
  401bc2:	mov    rax,r13
  401bc5:	add    rax,QWORD PTR [rsp+0x58]
  401bca:	movzx  edx,BYTE PTR [rsp+0x60]
  401bcf:	mov    BYTE PTR [rsp+0x48],0x0
  401bd4:	cmp    rsi,rax
  401bd7:	mov    QWORD PTR [rsp+0x50],rax
  401bdc:	ja     0x401ac0
  401be2:	test   dl,dl
  401be4:	jne    0x40236f
  401bea:	mov    BYTE PTR [rsp+0x3f],0x1
  401bef:	mov    rax,QWORD PTR [rsp+0x28]
  401bf4:	mov    r12,QWORD PTR [rip+0x16b05]        # 0x418700
  401bfb:	mov    QWORD PTR [rsp+0x50],rsi
  401c00:	mov    BYTE PTR [rsp+0x40],0x0
  401c05:	mov    DWORD PTR [rsp+0x44],0x0
  401c0d:	mov    BYTE PTR [rsp+0x48],0x0
  401c12:	mov    QWORD PTR [rsp+0x90],rax
  401c1a:	mov    BYTE PTR [rsp+0x80],0x0
  401c22:	mov    r13,r12
  401c25:	mov    DWORD PTR [rsp+0x84],0x0
  401c30:	mov    BYTE PTR [rsp+0x88],0x0
  401c38:	nop    DWORD PTR [rax+rax*1+0x0]
  401c40:	cmp    BYTE PTR [rsp+0x80],0x0
  401c48:	jne    0x401e5a
  401c4e:	mov    rcx,QWORD PTR [rsp+0x90]
  401c56:	movzx  eax,BYTE PTR [rcx]
  401c59:	mov    edx,eax
  401c5b:	and    eax,0x1f
  401c5e:	shr    dl,0x5
  401c61:	and    edx,0x7
  401c64:	mov    edx,DWORD PTR [r12+rdx*4]
  401c68:	bt     edx,eax
  401c6b:	jae    0x401e40
  401c71:	mov    QWORD PTR [rsp+0x98],0x1
  401c7d:	movsx  ax,BYTE PTR [rcx]
  401c81:	mov    BYTE PTR [rsp+0xa0],0x1
  401c89:	mov    BYTE PTR [rsp+0x88],0x1
  401c91:	mov    WORD PTR [rsp+0xa2],ax
  401c99:	cmp    WORD PTR [rsp+0xa2],0x0
  401ca2:	jne    0x401f05
  401ca8:	movzx  r12d,BYTE PTR [rsp+0x48]
  401cae:	test   r12b,r12b
  401cb1:	je     0x402141
  401cb7:	movzx  eax,WORD PTR [rsp+0x62]
  401cbc:	movzx  r12d,BYTE PTR [rsp+0x60]
  401cc2:	test   r12b,r12b
  401cc5:	je     0x401ccc
  401cc7:	test   ax,ax
  401cca:	je     0x401cd7
  401ccc:	cmp    BYTE PTR [rsp+0x60],0x0
  401cd1:	jne    0x402388
  401cd7:	cmp    BYTE PTR [rsp+0x3f],0x0
  401cdc:	jne    0x402252
  401ce2:	mov    QWORD PTR [rsp+0x50],rsi
  401ce7:	mov    BYTE PTR [rsp+0x40],0x0
  401cec:	mov    DWORD PTR [rsp+0x44],0x0
  401cf4:	mov    BYTE PTR [rsp+0x48],0x0
  401cf9:	movzx  eax,BYTE PTR [rsi]
  401cfc:	mov    rcx,QWORD PTR [rip+0x169fd]        # 0x418700
  401d03:	mov    edx,eax
  401d05:	and    eax,0x1f
  401d08:	shr    dl,0x5
  401d0b:	and    edx,0x7
  401d0e:	mov    edx,DWORD PTR [rcx+rdx*4]
  401d11:	bt     edx,eax
  401d14:	jae    0x401d60
  401d16:	mov    QWORD PTR [rsp+0x58],0x1
  401d1f:	movsx  ax,BYTE PTR [rsi]
  401d23:	mov    BYTE PTR [rsp+0x60],0x1
  401d28:	mov    BYTE PTR [rsp+0x48],0x1
  401d2d:	mov    WORD PTR [rsp+0x62],ax
  401d32:	cmp    WORD PTR [rsp+0x62],0x0
  401d38:	jne    0x401e33
  401d3e:	xor    ebx,ebx
  401d40:	mov    rcx,QWORD PTR [rsp+0x28]
  401d45:	call   0x411458
  401d4a:	mov    eax,ebx
  401d4c:	add    rsp,0xc8
  401d53:	pop    rbx
  401d54:	pop    rsi
  401d55:	pop    rdi
  401d56:	pop    rbp
  401d57:	pop    r12
  401d59:	pop    r13
  401d5b:	pop    r14
  401d5d:	pop    r15
  401d5f:	ret    
  401d60:	mov    rcx,QWORD PTR [rsp+0x20]
  401d65:	call   0x404620
  401d6a:	test   eax,eax
  401d6c:	je     0x4023a2
  401d72:	mov    rax,QWORD PTR [rdi]
  401d75:	mov    r12,QWORD PTR [rsp+0x50]
  401d7a:	mov    BYTE PTR [rsp+0x40],0x1
  401d7f:	movsxd rdx,DWORD PTR [rax]
  401d82:	mov    rcx,r12
  401d85:	call   0x4027a0
  401d8a:	mov    r9,QWORD PTR [rsp+0x20]
  401d8f:	lea    rcx,[rbx+0x22]
  401d93:	mov    r8,rax
  401d96:	mov    rdx,r12
  401d99:	call   0x404510
  401d9e:	cmp    rax,0xffffffffffffffff
  401da2:	mov    QWORD PTR [rsp+0x58],rax
  401da7:	je     0x4023c0
  401dad:	cmp    rax,0xfffffffffffffffe
  401db1:	je     0x4023ee
  401db7:	test   rax,rax
  401dba:	jne    0x401e09
  401dbc:	mov    rax,QWORD PTR [rsp+0x50]
  401dc1:	mov    QWORD PTR [rsp+0x58],0x1
  401dca:	cmp    BYTE PTR [rax],0x0
  401dcd:	je     0x401de8
  401dcf:	lea    rdx,[rip+0x11b0a]        # 0x4138e0
  401dd6:	lea    rcx,[rip+0x11b24]        # 0x413901
  401ddd:	mov    r8d,0xb2
  401de3:	call   0x40ca80
  401de8:	cmp    WORD PTR [rsp+0x62],0x0
  401dee:	je     0x401e09
  401df0:	lea    rdx,[rip+0x11ae9]        # 0x4138e0
  401df7:	lea    rcx,[rip+0x11b1a]        # 0x413918
  401dfe:	mov    r8d,0xb3
  401e04:	call   0x40ca80
  401e09:	mov    rcx,QWORD PTR [rsp+0x20]
  401e0e:	mov    BYTE PTR [rsp+0x60],0x1
  401e13:	call   0x404620
  401e18:	test   eax,eax
  401e1a:	je     0x401e21
  401e1c:	mov    BYTE PTR [rsp+0x40],0x0
  401e21:	movzx  eax,BYTE PTR [rsp+0x60]
  401e26:	mov    BYTE PTR [rsp+0x48],0x1
  401e2b:	test   al,al
  401e2d:	jne    0x401d32
  401e33:	add    rsi,QWORD PTR [rsp+0x58]
  401e38:	mov    r12,rsi
  401e3b:	jmp    0x401a60
  401e40:	mov    rcx,QWORD PTR [rsp+0x30]
  401e45:	call   0x404620
  401e4a:	test   eax,eax
  401e4c:	je     0x4020e0
  401e52:	mov    BYTE PTR [rsp+0x80],0x1
  401e5a:	mov    rax,QWORD PTR [rdi]
  401e5d:	mov    r14,QWORD PTR [rsp+0x90]
  401e65:	movsxd rdx,DWORD PTR [rax]
  401e68:	mov    rcx,r14
  401e6b:	call   0x4027a0
  401e70:	lea    rcx,[rbp+0x22]
  401e74:	lea    r9,[rbp+0x4]
  401e78:	mov    r8,rax
  401e7b:	mov    rdx,r14
  401e7e:	call   0x404510
  401e83:	cmp    rax,0xffffffffffffffff
  401e87:	mov    QWORD PTR [rsp+0x98],rax
  401e8f:	je     0x402050
  401e95:	cmp    rax,0xfffffffffffffffe
  401e99:	je     0x402084
  401e9f:	test   rax,rax
  401ea2:	jne    0x401ed0
  401ea4:	mov    rax,QWORD PTR [rsp+0x90]
  401eac:	mov    QWORD PTR [rsp+0x98],0x1
  401eb8:	cmp    BYTE PTR [rax],0x0
  401ebb:	jne    0x4021c0
  401ec1:	cmp    WORD PTR [rsp+0xa2],0x0
  401eca:	jne    0x4021a0
  401ed0:	lea    rcx,[rbp+0x4]
  401ed4:	mov    BYTE PTR [rsp+0xa0],0x1
  401edc:	call   0x404620
  401ee1:	test   eax,eax
  401ee3:	je     0x401eed
  401ee5:	mov    BYTE PTR [rsp+0x80],0x0
  401eed:	movzx  eax,BYTE PTR [rsp+0xa0]
  401ef5:	mov    BYTE PTR [rsp+0x88],0x1
  401efd:	test   al,al
  401eff:	jne    0x401c99
  401f05:	movzx  r14d,BYTE PTR [rsp+0x48]
  401f0b:	test   r14b,r14b
  401f0e:	je     0x401f50
  401f10:	movzx  r14d,BYTE PTR [rsp+0x60]
  401f16:	test   r14b,r14b
  401f19:	jne    0x401f9b
  401f1f:	mov    rax,QWORD PTR [rsp+0x58]
  401f24:	mov    BYTE PTR [rsp+0x48],0x0
  401f29:	add    QWORD PTR [rsp+0x50],rax
  401f2e:	mov    BYTE PTR [rsp+0x88],0x0
  401f36:	mov    rax,QWORD PTR [rsp+0x98]
  401f3e:	add    QWORD PTR [rsp+0x90],rax
  401f46:	jmp    0x401c40
  401f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f50:	cmp    BYTE PTR [rsp+0x40],0x0
  401f55:	jne    0x401fc7
  401f57:	mov    rcx,QWORD PTR [rsp+0x50]
  401f5c:	movzx  eax,BYTE PTR [rcx]
  401f5f:	mov    edx,eax
  401f61:	and    eax,0x1f
  401f64:	shr    dl,0x5
  401f67:	and    edx,0x7
  401f6a:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  401f6f:	bt     edx,eax
  401f72:	jae    0x401fb0
  401f74:	mov    QWORD PTR [rsp+0x58],0x1
  401f7d:	movsx  ax,BYTE PTR [rcx]
  401f81:	mov    r14d,0x1
  401f87:	mov    BYTE PTR [rsp+0x60],0x1
  401f8c:	mov    WORD PTR [rsp+0x62],ax
  401f91:	test   r14b,r14b
  401f94:	mov    BYTE PTR [rsp+0x48],0x1
  401f99:	je     0x401f1f
  401f9b:	cmp    WORD PTR [rsp+0x62],0x0
  401fa1:	je     0x401b0c
  401fa7:	jmp    0x401f1f
  401fac:	nop    DWORD PTR [rax+0x0]
  401fb0:	mov    rcx,QWORD PTR [rsp+0x20]
  401fb5:	call   0x404620
  401fba:	test   eax,eax
  401fbc:	je     0x402100
  401fc2:	mov    BYTE PTR [rsp+0x40],0x1
  401fc7:	mov    rax,QWORD PTR [rdi]
  401fca:	mov    r15,QWORD PTR [rsp+0x50]
  401fcf:	movsxd rdx,DWORD PTR [rax]
  401fd2:	mov    rcx,r15
  401fd5:	call   0x4027a0
  401fda:	lea    rcx,[rbx+0x22]
  401fde:	lea    r9,[rbx+0x4]
  401fe2:	mov    r8,rax
  401fe5:	mov    rdx,r15
  401fe8:	call   0x404510
  401fed:	cmp    rax,0xffffffffffffffff
  401ff1:	mov    QWORD PTR [rsp+0x58],rax
  401ff6:	je     0x402071
  401ff8:	cmp    rax,0xfffffffffffffffe
  401ffc:	je     0x4020a3
  402002:	test   rax,rax
  402005:	jne    0x40202a
  402007:	mov    rax,QWORD PTR [rsp+0x50]
  40200c:	mov    QWORD PTR [rsp+0x58],0x1
  402015:	cmp    BYTE PTR [rax],0x0
  402018:	jne    0x402200
  40201e:	cmp    WORD PTR [rsp+0x62],0x0
  402024:	jne    0x4021e0
  40202a:	lea    rcx,[rbx+0x4]
  40202e:	mov    BYTE PTR [rsp+0x60],0x1
  402033:	call   0x404620
  402038:	test   eax,eax
  40203a:	je     0x402041
  40203c:	mov    BYTE PTR [rsp+0x40],0x0
  402041:	movzx  r14d,BYTE PTR [rsp+0x60]
  402047:	jmp    0x401f91
  40204c:	nop    DWORD PTR [rax+0x0]
  402050:	mov    QWORD PTR [rsp+0x98],0x1
  40205c:	mov    BYTE PTR [rsp+0xa0],0x0
  402064:	mov    BYTE PTR [rsp+0x88],0x1
  40206c:	jmp    0x401f05
  402071:	mov    QWORD PTR [rsp+0x58],0x1
  40207a:	mov    BYTE PTR [rsp+0x60],0x0
  40207f:	jmp    0x401f91
  402084:	mov    rcx,QWORD PTR [rsp+0x90]
  40208c:	call   0x4113a8
  402091:	mov    BYTE PTR [rsp+0xa0],0x0
  402099:	mov    QWORD PTR [rsp+0x98],rax
  4020a1:	jmp    0x402064
  4020a3:	mov    rcx,QWORD PTR [rsp+0x50]
  4020a8:	call   0x4113a8
  4020ad:	mov    BYTE PTR [rsp+0x60],0x0
  4020b2:	mov    QWORD PTR [rsp+0x58],rax
  4020b7:	jmp    0x401f91
  4020bc:	nop    DWORD PTR [rax+0x0]
  4020c0:	mov    QWORD PTR [rsp+0x58],0x1
  4020c9:	mov    BYTE PTR [rsp+0x60],0x0
  4020ce:	movzx  ecx,WORD PTR [rsp+0x62]
  4020d3:	mov    r13,QWORD PTR [rsp+0x50]
  4020d8:	jmp    0x401bc2
  4020dd:	nop    DWORD PTR [rax]
  4020e0:	lea    rdx,[rip+0x117f9]        # 0x4138e0
  4020e7:	lea    rcx,[rip+0x117fc]        # 0x4138ea
  4020ee:	mov    r8d,0x96
  4020f4:	call   0x40ca80
  4020f9:	jmp    0x401e52
  4020fe:	xchg   ax,ax
  402100:	lea    rdx,[rip+0x117d9]        # 0x4138e0
  402107:	lea    rcx,[rip+0x117dc]        # 0x4138ea
  40210e:	mov    r8d,0x96
  402114:	call   0x40ca80
  402119:	jmp    0x401fc2
  40211e:	xchg   ax,ax
  402120:	mov    r13,QWORD PTR [rsp+0x50]
  402125:	mov    rcx,r13
  402128:	call   0x4113a8
  40212d:	mov    BYTE PTR [rsp+0x60],0x0
  402132:	mov    QWORD PTR [rsp+0x58],rax
  402137:	movzx  ecx,WORD PTR [rsp+0x62]
  40213c:	jmp    0x401bc2
  402141:	cmp    BYTE PTR [rsp+0x40],0x0
  402146:	jne    0x4022a5
  40214c:	mov    rcx,QWORD PTR [rsp+0x50]
  402151:	mov    r8,QWORD PTR [rip+0x165a8]        # 0x418700
  402158:	movzx  eax,BYTE PTR [rcx]
  40215b:	mov    edx,eax
  40215d:	and    eax,0x1f
  402160:	shr    dl,0x5
  402163:	and    edx,0x7
  402166:	mov    edx,DWORD PTR [r8+rdx*4]
  40216a:	bt     edx,eax
  40216d:	jae    0x40228e
  402173:	mov    QWORD PTR [rsp+0x58],0x1
  40217c:	movsx  ax,BYTE PTR [rcx]
  402180:	mov    r12d,0x1
  402186:	mov    BYTE PTR [rsp+0x60],0x1
  40218b:	mov    WORD PTR [rsp+0x62],ax
  402190:	mov    BYTE PTR [rsp+0x48],0x1
  402195:	jmp    0x401cc2
  40219a:	nop    WORD PTR [rax+rax*1+0x0]
  4021a0:	lea    rdx,[rip+0x11739]        # 0x4138e0
  4021a7:	lea    rcx,[rip+0x1176a]        # 0x413918
  4021ae:	mov    r8d,0xb3
  4021b4:	call   0x40ca80
  4021b9:	jmp    0x401ed0
  4021be:	xchg   ax,ax
  4021c0:	lea    rdx,[rip+0x11719]        # 0x4138e0
  4021c7:	lea    rcx,[rip+0x11733]        # 0x413901
  4021ce:	mov    r8d,0xb2
  4021d4:	call   0x40ca80
  4021d9:	jmp    0x401ec1
  4021de:	xchg   ax,ax
  4021e0:	lea    rdx,[rip+0x116f9]        # 0x4138e0
  4021e7:	lea    rcx,[rip+0x1172a]        # 0x413918
  4021ee:	mov    r8d,0xb3
  4021f4:	call   0x40ca80
  4021f9:	jmp    0x40202a
  4021fe:	xchg   ax,ax
  402200:	lea    rdx,[rip+0x116d9]        # 0x4138e0
  402207:	lea    rcx,[rip+0x116f3]        # 0x413901
  40220e:	mov    r8d,0xb2
  402214:	call   0x40ca80
  402219:	jmp    0x40201e
  40221e:	xchg   ax,ax
  402220:	cmp    r12,rsi
  402223:	jae    0x402233
  402225:	movzx  ecx,BYTE PTR [rsi-0x1]
  402229:	call   QWORD PTR [rip+0x1d491]        # 0x41f6c0
  40222f:	test   eax,eax
  402231:	jne    0x40225c
  402233:	mov    rcx,QWORD PTR [rsp+0x28]
  402238:	call   0x4113a8
  40223d:	movzx  eax,BYTE PTR [rsi+rax*1]
  402241:	test   al,al
  402243:	je     0x402252
  402245:	movzx  ecx,al
  402248:	call   QWORD PTR [rip+0x1d472]        # 0x41f6c0
  40224e:	test   eax,eax
  402250:	jne    0x40225c
  402252:	mov    ebx,0x1
  402257:	jmp    0x401d40
  40225c:	cmp    BYTE PTR [rsi],0x0
  40225f:	je     0x401d3e
  402265:	lea    r12,[rsi+0x1]
  402269:	jmp    0x401a60
  40226e:	xchg   ax,ax
  402270:	lea    rdx,[rip+0x11669]        # 0x4138e0
  402277:	lea    rcx,[rip+0x1166c]        # 0x4138ea
  40227e:	mov    r8d,0x96
  402284:	call   0x40ca80
  402289:	jmp    0x401b23
  40228e:	mov    rcx,QWORD PTR [rsp+0x20]
  402293:	call   0x404620
  402298:	test   eax,eax
  40229a:	je     0x402428
  4022a0:	mov    BYTE PTR [rsp+0x40],0x1
  4022a5:	mov    rax,QWORD PTR [rdi]
  4022a8:	mov    r13,QWORD PTR [rsp+0x50]
  4022ad:	movsxd rdx,DWORD PTR [rax]
  4022b0:	mov    rcx,r13
  4022b3:	call   0x4027a0
  4022b8:	lea    rcx,[rbx+0x22]
  4022bc:	lea    r9,[rbx+0x4]
  4022c0:	mov    r8,rax
  4022c3:	mov    rdx,r13
  4022c6:	call   0x404510
  4022cb:	cmp    rax,0xffffffffffffffff
  4022cf:	mov    QWORD PTR [rsp+0x58],rax
  4022d4:	je     0x4023d6
  4022da:	cmp    rax,0xfffffffffffffffe
  4022de:	je     0x40240a
  4022e4:	test   rax,rax
  4022e7:	jne    0x40230c
  4022e9:	mov    rax,QWORD PTR [rsp+0x50]
  4022ee:	mov    QWORD PTR [rsp+0x58],0x1
  4022f7:	cmp    BYTE PTR [rax],0x0
  4022fa:	jne    0x402446
  402300:	cmp    WORD PTR [rsp+0x62],0x0
  402306:	jne    0x40246b
  40230c:	lea    rcx,[rbx+0x4]
  402310:	mov    BYTE PTR [rsp+0x60],0x1
  402315:	call   0x404620
  40231a:	test   eax,eax
  40231c:	je     0x402323
  40231e:	mov    BYTE PTR [rsp+0x40],0x0
  402323:	movzx  eax,WORD PTR [rsp+0x62]
  402328:	movzx  r12d,BYTE PTR [rsp+0x60]
  40232e:	jmp    0x402190
  402333:	lea    rdx,[rip+0x115a6]        # 0x4138e0
  40233a:	lea    rcx,[rip+0x115d7]        # 0x413918
  402341:	mov    r8d,0xb3
  402347:	call   0x40ca80
  40234c:	jmp    0x401b8f
  402351:	lea    rdx,[rip+0x11588]        # 0x4138e0
  402358:	lea    rcx,[rip+0x115a2]        # 0x413901
  40235f:	mov    r8d,0xb2
  402365:	call   0x40ca80
  40236a:	jmp    0x401b83
  40236f:	movzx  ecx,cx
  402372:	mov    edx,0x107
  402377:	call   0x411428
  40237c:	test   eax,eax
  40237e:	sete   BYTE PTR [rsp+0x3f]
  402383:	jmp    0x401bef
  402388:	movzx  ecx,ax
  40238b:	mov    edx,0x107
  402390:	call   0x411428
  402395:	test   eax,eax
  402397:	je     0x401cd7
  40239d:	jmp    0x401ce2
  4023a2:	lea    rdx,[rip+0x11537]        # 0x4138e0
  4023a9:	lea    rcx,[rip+0x1153a]        # 0x4138ea
  4023b0:	mov    r8d,0x96
  4023b6:	call   0x40ca80
  4023bb:	jmp    0x401d72
  4023c0:	mov    QWORD PTR [rsp+0x58],0x1
  4023c9:	add    rsi,QWORD PTR [rsp+0x58]
  4023ce:	mov    r12,rsi
  4023d1:	jmp    0x401a60
  4023d6:	mov    QWORD PTR [rsp+0x58],0x1
  4023df:	mov    BYTE PTR [rsp+0x60],0x0
  4023e4:	movzx  eax,WORD PTR [rsp+0x62]
  4023e9:	jmp    0x402190
  4023ee:	mov    rcx,QWORD PTR [rsp+0x50]
  4023f3:	call   0x4113a8
  4023f8:	mov    QWORD PTR [rsp+0x58],rax
  4023fd:	add    rsi,QWORD PTR [rsp+0x58]
  402402:	mov    r12,rsi
  402405:	jmp    0x401a60
  40240a:	mov    rcx,QWORD PTR [rsp+0x50]
  40240f:	call   0x4113a8
  402414:	mov    BYTE PTR [rsp+0x60],0x0
  402419:	mov    QWORD PTR [rsp+0x58],rax
  40241e:	movzx  eax,WORD PTR [rsp+0x62]
  402423:	jmp    0x402190
  402428:	lea    rdx,[rip+0x114b1]        # 0x4138e0
  40242f:	lea    rcx,[rip+0x114b4]        # 0x4138ea
  402436:	mov    r8d,0x96
  40243c:	call   0x40ca80
  402441:	jmp    0x4022a0
  402446:	lea    rdx,[rip+0x11493]        # 0x4138e0
  40244d:	lea    rcx,[rip+0x114ad]        # 0x413901
  402454:	mov    r8d,0xb2
  40245a:	call   0x40ca80
  40245f:	cmp    WORD PTR [rsp+0x62],0x0
  402465:	je     0x40230c
  40246b:	lea    rdx,[rip+0x1146e]        # 0x4138e0
  402472:	lea    rcx,[rip+0x1149f]        # 0x413918
  402479:	mov    r8d,0xb3
  40247f:	call   0x40ca80
  402484:	jmp    0x40230c
  402489:	nop    DWORD PTR [rax+0x0]
  402490:	push   rdi
  402491:	push   rsi
  402492:	push   rbx
  402493:	sub    rsp,0x20
  402497:	mov    rsi,rcx
  40249a:	call   0x40b000
  40249f:	cmp    rax,rsi
  4024a2:	mov    rbx,rax
  4024a5:	je     0x4024b6
  4024a7:	mov    rdx,rsi
  4024aa:	mov    rcx,rax
  4024ad:	call   0x401a10
  4024b2:	test   al,al
  4024b4:	je     0x4024c1
  4024b6:	mov    rax,rbx
  4024b9:	add    rsp,0x20
  4024bd:	pop    rbx
  4024be:	pop    rsi
  4024bf:	pop    rdi
  4024c0:	ret    
  4024c1:	mov    rcx,rbx
  4024c4:	call   0x4113a8
  4024c9:	mov    rcx,rsi
  4024cc:	mov    rdi,rax
  4024cf:	call   0x4113a8
  4024d4:	lea    rcx,[rdi+rax*1+0x4]
  4024d9:	call   0x402ec0
  4024de:	lea    rdx,[rip+0x11445]        # 0x41392a
  4024e5:	mov    rdi,rax
  4024e8:	mov    r8,rbx
  4024eb:	mov    r9,rsi
  4024ee:	mov    rcx,rax
  4024f1:	mov    rbx,rdi
  4024f4:	call   0x40aff8
  4024f9:	mov    rax,rbx
  4024fc:	add    rsp,0x20
  402500:	pop    rbx
  402501:	pop    rsi
  402502:	pop    rdi
  402503:	ret    
  402504:	xchg   ax,ax
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	push   r14
  402512:	push   r13
  402514:	push   r12
  402516:	push   rbp
  402517:	push   rdi
  402518:	push   rsi
  402519:	push   rbx
  40251a:	sub    rsp,0x30
  40251e:	mov    rsi,rcx
  402521:	mov    rdi,rdx
  402524:	call   0x40b000
  402529:	mov    r12,rax
  40252c:	call   0x405950
  402531:	lea    rdx,[rip+0x113fa]        # 0x413932
  402538:	mov    rcx,rax
  40253b:	mov    rbx,rax
  40253e:	call   0x4058c0
  402543:	test   eax,eax
  402545:	jne    0x402580
  402547:	test   rdi,rdi
  40254a:	je     0x402760
  402550:	mov    r14,rdi
  402553:	mov    rbx,rdi
  402556:	xor    r13d,r13d
  402559:	xor    ebp,ebp
  40255b:	mov    rdx,rsi
  40255e:	mov    rcx,r12
  402561:	call   0x4113c0
  402566:	test   eax,eax
  402568:	jne    0x402661
  40256e:	mov    rax,rbx
  402571:	add    rsp,0x30
  402575:	pop    rbx
  402576:	pop    rsi
  402577:	pop    rdi
  402578:	pop    rbp
  402579:	pop    r12
  40257b:	pop    r13
  40257d:	pop    r14
  40257f:	ret    
  402580:	lea    rdx,[rip+0x113ab]        # 0x413932
  402587:	mov    r8,rbx
  40258a:	mov    rcx,rdi
  40258d:	call   0x403060
  402592:	mov    rcx,rbx
  402595:	mov    rbp,rax
  402598:	call   0x4113a8
  40259d:	lea    rcx,[rax+0xb]
  4025a1:	mov    r13,rax
  4025a4:	call   0x402ec0
  4025a9:	mov    r8,r13
  4025ac:	mov    r14,rax
  4025af:	mov    rdx,rbx
  4025b2:	mov    rcx,rax
  4025b5:	add    r13,r14
  4025b8:	call   0x411408
  4025bd:	movabs rax,0x4c534e4152542f2f
  4025c7:	lea    rdx,[rip+0x11364]        # 0x413932
  4025ce:	mov    BYTE PTR [r13+0xa],0x0
  4025d3:	mov    QWORD PTR [r13+0x0],rax
  4025d7:	mov    eax,0x5449
  4025dc:	mov    r8,r14
  4025df:	mov    WORD PTR [r13+0x8],ax
  4025e4:	mov    rcx,rdi
  4025e7:	call   0x403060
  4025ec:	mov    rcx,r14
  4025ef:	mov    r13,rax
  4025f2:	call   0x411458
  4025f7:	test   r13,r13
  4025fa:	je     0x402770
  402600:	test   rbp,rbp
  402603:	je     0x402640
  402605:	mov    rdx,rsi
  402608:	mov    rcx,r12
  40260b:	mov    r14,r13
  40260e:	call   0x4113c0
  402613:	test   eax,eax
  402615:	mov    rdi,rbp
  402618:	mov    rbx,rbp
  40261b:	jne    0x402661
  40261d:	cmp    r13,rbp
  402620:	je     0x402790
  402626:	mov    rcx,r13
  402629:	call   0x411458
  40262e:	mov    rax,rbp
  402631:	add    rsp,0x30
  402635:	pop    rbx
  402636:	pop    rsi
  402637:	pop    rdi
  402638:	pop    rbp
  402639:	pop    r12
  40263b:	pop    r13
  40263d:	pop    r14
  40263f:	ret    
  402640:	mov    rdx,rsi
  402643:	mov    rcx,r12
  402646:	call   0x4113c0
  40264b:	test   eax,eax
  40264d:	jne    0x402690
  40264f:	mov    rax,r13
  402652:	add    rsp,0x30
  402656:	pop    rbx
  402657:	pop    rsi
  402658:	pop    rdi
  402659:	pop    rbp
  40265a:	pop    r12
  40265c:	pop    r13
  40265e:	pop    r14
  402660:	ret    
  402661:	mov    rdx,rsi
  402664:	mov    rcx,r12
  402667:	call   0x401a10
  40266c:	test   al,al
  40266e:	jne    0x4026c0
  402670:	test   rdi,rdi
  402673:	je     0x402684
  402675:	mov    rdx,rdi
  402678:	mov    rcx,r12
  40267b:	call   0x401a10
  402680:	test   al,al
  402682:	jne    0x4026c0
  402684:	mov    rsi,r13
  402687:	mov    r13,rbx
  40268a:	jmp    0x4026a5
  40268c:	nop    DWORD PTR [rax+0x0]
  402690:	mov    rdx,rsi
  402693:	mov    rcx,r12
  402696:	call   0x401a10
  40269b:	test   al,al
  40269d:	jne    0x4026d9
  40269f:	mov    rsi,r13
  4026a2:	mov    r14,r13
  4026a5:	test   r14,r14
  4026a8:	je     0x4026f3
  4026aa:	mov    rdx,r14
  4026ad:	mov    rcx,r12
  4026b0:	call   0x401a10
  4026b5:	test   al,al
  4026b7:	je     0x4026f3
  4026b9:	mov    r13,rsi
  4026bc:	nop    DWORD PTR [rax+0x0]
  4026c0:	test   rbp,rbp
  4026c3:	je     0x4026cd
  4026c5:	mov    rcx,rbp
  4026c8:	call   0x411458
  4026cd:	test   r13,r13
  4026d0:	mov    rax,r12
  4026d3:	je     0x402571
  4026d9:	mov    rcx,r13
  4026dc:	call   0x411458
  4026e1:	mov    rax,r12
  4026e4:	add    rsp,0x30
  4026e8:	pop    rbx
  4026e9:	pop    rsi
  4026ea:	pop    rdi
  4026eb:	pop    rbp
  4026ec:	pop    r12
  4026ee:	pop    r13
  4026f0:	pop    r14
  4026f2:	ret    
  4026f3:	mov    rcx,r12
  4026f6:	call   0x4113a8
  4026fb:	mov    rcx,r13
  4026fe:	mov    rbx,rax
  402701:	call   0x4113a8
  402706:	lea    rcx,[rbx+rax*1+0x4]
  40270b:	call   0x402ec0
  402710:	lea    rdx,[rip+0x11213]        # 0x41392a
  402717:	mov    r9,r13
  40271a:	mov    r8,r12
  40271d:	mov    rcx,rax
  402720:	mov    rbx,rax
  402723:	call   0x40aff8
  402728:	test   rbp,rbp
  40272b:	je     0x402735
  40272d:	mov    rcx,rbp
  402730:	call   0x411458
  402735:	test   rsi,rsi
  402738:	mov    rax,rbx
  40273b:	je     0x402571
  402741:	mov    rcx,rsi
  402744:	mov    QWORD PTR [rsp+0x28],rbx
  402749:	call   0x411458
  40274e:	mov    rax,QWORD PTR [rsp+0x28]
  402753:	jmp    0x402571
  402758:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	xor    r14d,r14d
  402763:	xor    r13d,r13d
  402766:	xor    ebp,ebp
  402768:	mov    rbx,rsi
  40276b:	jmp    0x40255b
  402770:	xor    r14d,r14d
  402773:	test   rbp,rbp
  402776:	je     0x402783
  402778:	mov    rdi,rbp
  40277b:	mov    rbx,rbp
  40277e:	jmp    0x40255b
  402783:	xor    edi,edi
  402785:	mov    r13,rbp
  402788:	mov    rbx,rsi
  40278b:	jmp    0x40255b
  402790:	mov    rax,rbp
  402793:	jmp    0x402571
  402798:	nop
  402799:	nop
  40279a:	nop
  40279b:	nop
  40279c:	nop
  40279d:	nop
  40279e:	nop
  40279f:	nop
  4027a0:	push   rsi
  4027a1:	push   rbx
  4027a2:	sub    rsp,0x28
  4027a6:	mov    r8,rdx
  4027a9:	mov    rsi,rdx
  4027ac:	xor    edx,edx
  4027ae:	mov    rbx,rcx
  4027b1:	call   0x404640
  4027b6:	test   rax,rax
  4027b9:	je     0x4027d0
  4027bb:	sub    rax,rbx
  4027be:	add    rax,0x1
  4027c2:	add    rsp,0x28
  4027c6:	pop    rbx
  4027c7:	pop    rsi
  4027c8:	ret    
  4027c9:	nop    DWORD PTR [rax+0x0]
  4027d0:	mov    rax,rsi
  4027d3:	add    rsp,0x28
  4027d7:	pop    rbx
  4027d8:	pop    rsi
  4027d9:	ret    
  4027da:	nop
  4027db:	nop
  4027dc:	nop
  4027dd:	nop
  4027de:	nop
  4027df:	nop
  4027e0:	push   r14
  4027e2:	push   r13
  4027e4:	push   r12
  4027e6:	push   rbp
  4027e7:	push   rdi
  4027e8:	push   rsi
  4027e9:	push   rbx
  4027ea:	sub    rsp,0x70
  4027ee:	mov    ebp,edx
  4027f0:	call   0x411368
  4027f5:	test   rax,rax
  4027f8:	mov    rsi,rax
  4027fb:	je     0x402e4e
  402801:	mov    rax,QWORD PTR [rip+0x15db8]        # 0x4185c0
  402808:	mov    rax,QWORD PTR [rax]
  40280b:	cmp    DWORD PTR [rax],0x1
  40280e:	jle    0x402c40
  402814:	test   ebp,ebp
  402816:	je     0x4029c8
  40281c:	mov    QWORD PTR [rsp+0x38],rsi
  402821:	mov    rdx,rsi
  402824:	mov    ecx,DWORD PTR [rdx]
  402826:	add    rdx,0x4
  40282a:	lea    eax,[rcx-0x1010101]
  402830:	not    ecx
  402832:	and    eax,ecx
  402834:	and    eax,0x80808080
  402839:	je     0x402824
  40283b:	mov    ecx,eax
  40283d:	mov    BYTE PTR [rsp+0x28],0x0
  402842:	mov    DWORD PTR [rsp+0x2c],0x0
  40284a:	shr    ecx,0x10
  40284d:	test   eax,0x8080
  402852:	mov    BYTE PTR [rsp+0x30],0x0
  402857:	cmove  eax,ecx
  40285a:	lea    rcx,[rdx+0x2]
  40285e:	mov    rbx,rsi
  402861:	cmove  rdx,rcx
  402865:	add    al,al
  402867:	sbb    rdx,0x3
  40286b:	cmp    rsi,rdx
  40286e:	mov    QWORD PTR [rsp+0x20],rdx
  402873:	jae    0x4029a8
  402879:	lea    rdi,[rsp+0x20]
  40287e:	mov    r13,QWORD PTR [rip+0x15e7b]        # 0x418700
  402885:	lea    r14,[rdi+0xc]
  402889:	jmp    0x4028fe
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	movzx  eax,BYTE PTR [rbx]
  402893:	mov    edx,eax
  402895:	and    eax,0x1f
  402898:	shr    dl,0x5
  40289b:	and    edx,0x7
  40289e:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  4028a3:	bt     edx,eax
  4028a6:	jae    0x402d50
  4028ac:	mov    QWORD PTR [rsp+0x40],0x1
  4028b5:	movsx  ax,BYTE PTR [rbx]
  4028b9:	mov    BYTE PTR [rsp+0x48],0x1
  4028be:	mov    BYTE PTR [rsp+0x30],0x1
  4028c3:	mov    WORD PTR [rsp+0x4a],ax
  4028c8:	movzx  ecx,WORD PTR [rsp+0x4a]
  4028cd:	mov    edx,0x8
  4028d2:	call   0x411428
  4028d7:	test   eax,eax
  4028d9:	je     0x4029a3
  4028df:	mov    rbx,QWORD PTR [rsp+0x40]
  4028e4:	add    rbx,QWORD PTR [rsp+0x38]
  4028e9:	cmp    QWORD PTR [rsp+0x20],rbx
  4028ee:	mov    BYTE PTR [rsp+0x30],0x0
  4028f3:	mov    QWORD PTR [rsp+0x38],rbx
  4028f8:	jbe    0x4029a8
  4028fe:	cmp    BYTE PTR [rsp+0x28],0x0
  402903:	je     0x402890
  402905:	mov    rdx,QWORD PTR [rsp+0x38]
  40290a:	mov    r8,QWORD PTR [rsp+0x20]
  40290f:	lea    rcx,[rdi+0x2a]
  402913:	lea    r9,[rdi+0xc]
  402917:	sub    r8,rdx
  40291a:	call   0x404510
  40291f:	cmp    rax,0xffffffffffffffff
  402923:	mov    QWORD PTR [rsp+0x40],rax
  402928:	je     0x402990
  40292a:	cmp    rax,0xfffffffffffffffe
  40292e:	je     0x402d70
  402934:	test   rax,rax
  402937:	jne    0x40295c
  402939:	mov    rax,QWORD PTR [rsp+0x38]
  40293e:	mov    QWORD PTR [rsp+0x40],0x1
  402947:	cmp    BYTE PTR [rax],0x0
  40294a:	jne    0x402e30
  402950:	cmp    WORD PTR [rsp+0x4a],0x0
  402956:	jne    0x402e10
  40295c:	lea    rcx,[rdi+0xc]
  402960:	mov    BYTE PTR [rsp+0x48],0x1
  402965:	call   0x404620
  40296a:	test   eax,eax
  40296c:	je     0x402973
  40296e:	mov    BYTE PTR [rsp+0x28],0x0
  402973:	movzx  eax,BYTE PTR [rsp+0x48]
  402978:	mov    BYTE PTR [rsp+0x30],0x1
  40297d:	test   al,al
  40297f:	jne    0x4028c8
  402985:	jmp    0x4029a3
  402987:	nop    WORD PTR [rax+rax*1+0x0]
  402990:	mov    QWORD PTR [rsp+0x40],0x1
  402999:	mov    BYTE PTR [rsp+0x48],0x0
  40299e:	mov    BYTE PTR [rsp+0x30],0x1
  4029a3:	mov    rbx,QWORD PTR [rsp+0x38]
  4029a8:	mov    rcx,rbx
  4029ab:	call   0x4113a8
  4029b0:	lea    r8,[rax+0x1]
  4029b4:	mov    rdx,rbx
  4029b7:	mov    rcx,rsi
  4029ba:	call   0x411400
  4029bf:	cmp    ebp,0x1
  4029c2:	je     0x402b8a
  4029c8:	mov    QWORD PTR [rsp+0x38],rsi
  4029cd:	mov    rdx,rsi
  4029d0:	mov    ecx,DWORD PTR [rdx]
  4029d2:	add    rdx,0x4
  4029d6:	lea    eax,[rcx-0x1010101]
  4029dc:	not    ecx
  4029de:	and    eax,ecx
  4029e0:	and    eax,0x80808080
  4029e5:	je     0x4029d0
  4029e7:	mov    ecx,eax
  4029e9:	mov    BYTE PTR [rsp+0x28],0x0
  4029ee:	mov    DWORD PTR [rsp+0x2c],0x0
  4029f6:	shr    ecx,0x10
  4029f9:	test   eax,0x8080
  4029fe:	mov    BYTE PTR [rsp+0x30],0x0
  402a03:	cmove  eax,ecx
  402a06:	lea    rcx,[rdx+0x2]
  402a0a:	cmove  rdx,rcx
  402a0e:	add    al,al
  402a10:	mov    rax,rdx
  402a13:	mov    rdx,rsi
  402a16:	sbb    rax,0x3
  402a1a:	xor    ebx,ebx
  402a1c:	cmp    rsi,rax
  402a1f:	mov    QWORD PTR [rsp+0x20],rax
  402a24:	jae    0x402b8a
  402a2a:	lea    rdi,[rsp+0x20]
  402a2f:	mov    rbp,QWORD PTR [rip+0x15cca]        # 0x418700
  402a36:	lea    r13,[rdi+0xc]
  402a3a:	jmp    0x402aae
  402a3c:	nop    DWORD PTR [rax+0x0]
  402a40:	movzx  eax,BYTE PTR [rdx]
  402a43:	mov    ecx,eax
  402a45:	and    eax,0x1f
  402a48:	shr    cl,0x5
  402a4b:	and    ecx,0x7
  402a4e:	mov    ecx,DWORD PTR [rbp+rcx*4+0x0]
  402a52:	bt     ecx,eax
  402a55:	jae    0x402bf1
  402a5b:	mov    QWORD PTR [rsp+0x40],0x1
  402a64:	movsx  ax,BYTE PTR [rdx]
  402a68:	mov    BYTE PTR [rsp+0x48],0x1
  402a6d:	mov    WORD PTR [rsp+0x4a],ax
  402a72:	test   ebx,ebx
  402a74:	mov    BYTE PTR [rsp+0x30],0x1
  402a79:	jne    0x402b40
  402a7f:	cmp    BYTE PTR [rsp+0x48],0x0
  402a84:	jne    0x402bb5
  402a8a:	mov    rdx,QWORD PTR [rsp+0x38]
  402a8f:	mov    ebx,0x1
  402a94:	add    rdx,QWORD PTR [rsp+0x40]
  402a99:	mov    BYTE PTR [rsp+0x30],0x0
  402a9e:	cmp    QWORD PTR [rsp+0x20],rdx
  402aa3:	mov    QWORD PTR [rsp+0x38],rdx
  402aa8:	jbe    0x402b80
  402aae:	cmp    BYTE PTR [rsp+0x28],0x0
  402ab3:	je     0x402a40
  402ab5:	mov    rdx,QWORD PTR [rsp+0x38]
  402aba:	mov    r8,QWORD PTR [rsp+0x20]
  402abf:	lea    rcx,[rdi+0x2a]
  402ac3:	lea    r9,[rdi+0xc]
  402ac7:	sub    r8,rdx
  402aca:	call   0x404510
  402acf:	cmp    rax,0xffffffffffffffff
  402ad3:	mov    QWORD PTR [rsp+0x40],rax
  402ad8:	je     0x402c10
  402ade:	cmp    rax,0xfffffffffffffffe
  402ae2:	je     0x402c23
  402ae8:	test   rax,rax
  402aeb:	jne    0x402b10
  402aed:	mov    rax,QWORD PTR [rsp+0x38]
  402af2:	mov    QWORD PTR [rsp+0x40],0x1
  402afb:	cmp    BYTE PTR [rax],0x0
  402afe:	jne    0x402df0
  402b04:	cmp    WORD PTR [rsp+0x4a],0x0
  402b0a:	jne    0x402dd0
  402b10:	lea    rcx,[rdi+0xc]
  402b14:	mov    BYTE PTR [rsp+0x48],0x1
  402b19:	call   0x404620
  402b1e:	test   eax,eax
  402b20:	je     0x402a72
  402b26:	test   ebx,ebx
  402b28:	mov    BYTE PTR [rsp+0x28],0x0
  402b2d:	mov    BYTE PTR [rsp+0x30],0x1
  402b32:	je     0x402a7f
  402b38:	nop    DWORD PTR [rax+rax*1+0x0]
  402b40:	cmp    ebx,0x1
  402b43:	je     0x402ba0
  402b45:	cmp    ebx,0x2
  402b48:	jne    0x402a8a
  402b4e:	cmp    BYTE PTR [rsp+0x48],0x0
  402b53:	je     0x402a8a
  402b59:	movzx  ecx,WORD PTR [rsp+0x4a]
  402b5e:	mov    edx,0x8
  402b63:	call   0x411428
  402b68:	test   eax,eax
  402b6a:	mov    rdx,QWORD PTR [rsp+0x38]
  402b6f:	jne    0x402a94
  402b75:	mov    ebx,0x1
  402b7a:	jmp    0x402a94
  402b7f:	nop
  402b80:	cmp    ebx,0x2
  402b83:	jne    0x402b8a
  402b85:	mov    BYTE PTR [r12],0x0
  402b8a:	mov    rax,rsi
  402b8d:	add    rsp,0x70
  402b91:	pop    rbx
  402b92:	pop    rsi
  402b93:	pop    rdi
  402b94:	pop    rbp
  402b95:	pop    r12
  402b97:	pop    r13
  402b99:	pop    r14
  402b9b:	ret    
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	cmp    BYTE PTR [rsp+0x48],0x0
  402ba5:	jne    0x402d00
  402bab:	mov    rdx,QWORD PTR [rsp+0x38]
  402bb0:	jmp    0x402a94
  402bb5:	movzx  ecx,WORD PTR [rsp+0x4a]
  402bba:	mov    edx,0x8
  402bbf:	call   0x411428
  402bc4:	test   eax,eax
  402bc6:	jne    0x402bab
  402bc8:	cmp    BYTE PTR [rsp+0x48],0x0
  402bcd:	je     0x402a8a
  402bd3:	movzx  ecx,WORD PTR [rsp+0x4a]
  402bd8:	mov    edx,0x8
  402bdd:	mov    ebx,0x1
  402be2:	call   0x411428
  402be7:	mov    rdx,QWORD PTR [rsp+0x38]
  402bec:	jmp    0x402a94
  402bf1:	mov    rcx,r13
  402bf4:	call   0x404620
  402bf9:	test   eax,eax
  402bfb:	je     0x402d90
  402c01:	mov    BYTE PTR [rsp+0x28],0x1
  402c06:	jmp    0x402ab5
  402c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c10:	mov    QWORD PTR [rsp+0x40],0x1
  402c19:	mov    BYTE PTR [rsp+0x48],0x0
  402c1e:	jmp    0x402a72
  402c23:	mov    rax,QWORD PTR [rsp+0x20]
  402c28:	sub    rax,QWORD PTR [rsp+0x38]
  402c2d:	mov    BYTE PTR [rsp+0x48],0x0
  402c32:	mov    QWORD PTR [rsp+0x40],rax
  402c37:	jmp    0x402a72
  402c3c:	nop    DWORD PTR [rax+0x0]
  402c40:	test   ebp,ebp
  402c42:	je     0x402c94
  402c44:	movzx  eax,BYTE PTR [rsi]
  402c47:	mov    rbx,rsi
  402c4a:	mov    rdi,QWORD PTR [rip+0x1ca77]        # 0x41f6c8
  402c51:	test   al,al
  402c53:	jne    0x402c6b
  402c55:	jmp    0x402c74
  402c57:	nop    WORD PTR [rax+rax*1+0x0]
  402c60:	add    rbx,0x1
  402c64:	movzx  eax,BYTE PTR [rbx]
  402c67:	test   al,al
  402c69:	je     0x402c74
  402c6b:	movzx  ecx,al
  402c6e:	call   rdi
  402c70:	test   eax,eax
  402c72:	jne    0x402c60
  402c74:	mov    rcx,rbx
  402c77:	call   0x4113a8
  402c7c:	lea    r8,[rax+0x1]
  402c80:	mov    rdx,rbx
  402c83:	mov    rcx,rsi
  402c86:	call   0x411400
  402c8b:	cmp    ebp,0x1
  402c8e:	je     0x402b8a
  402c94:	mov    rdx,rsi
  402c97:	mov    ecx,DWORD PTR [rdx]
  402c99:	add    rdx,0x4
  402c9d:	lea    eax,[rcx-0x1010101]
  402ca3:	not    ecx
  402ca5:	and    eax,ecx
  402ca7:	and    eax,0x80808080
  402cac:	je     0x402c97
  402cae:	mov    ecx,eax
  402cb0:	mov    rdi,QWORD PTR [rip+0x1ca11]        # 0x41f6c8
  402cb7:	shr    ecx,0x10
  402cba:	test   eax,0x8080
  402cbf:	cmove  eax,ecx
  402cc2:	lea    rcx,[rdx+0x2]
  402cc6:	cmove  rdx,rcx
  402cca:	add    al,al
  402ccc:	sbb    rdx,0x3
  402cd0:	lea    rbx,[rdx-0x1]
  402cd4:	cmp    rsi,rbx
  402cd7:	jbe    0x402cf0
  402cd9:	jmp    0x402b8a
  402cde:	xchg   ax,ax
  402ce0:	mov    BYTE PTR [rbx],0x0
  402ce3:	sub    rbx,0x1
  402ce7:	cmp    rsi,rbx
  402cea:	ja     0x402b8a
  402cf0:	movzx  ecx,BYTE PTR [rbx]
  402cf3:	call   rdi
  402cf5:	test   eax,eax
  402cf7:	jne    0x402ce0
  402cf9:	jmp    0x402b8a
  402cfe:	xchg   ax,ax
  402d00:	movzx  ecx,WORD PTR [rsp+0x4a]
  402d05:	mov    edx,0x8
  402d0a:	call   0x411428
  402d0f:	test   eax,eax
  402d11:	je     0x402bab
  402d17:	cmp    BYTE PTR [rsp+0x48],0x0
  402d1c:	je     0x402bab
  402d22:	movzx  ecx,WORD PTR [rsp+0x4a]
  402d27:	mov    edx,0x8
  402d2c:	call   0x411428
  402d31:	test   eax,eax
  402d33:	je     0x402bab
  402d39:	mov    r12,QWORD PTR [rsp+0x38]
  402d3e:	mov    ebx,0x2
  402d43:	mov    rdx,r12
  402d46:	jmp    0x402a94
  402d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d50:	mov    rcx,r14
  402d53:	call   0x404620
  402d58:	test   eax,eax
  402d5a:	je     0x402db0
  402d5c:	mov    BYTE PTR [rsp+0x28],0x1
  402d61:	jmp    0x402905
  402d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d70:	mov    rax,QWORD PTR [rsp+0x20]
  402d75:	sub    rax,QWORD PTR [rsp+0x38]
  402d7a:	mov    BYTE PTR [rsp+0x48],0x0
  402d7f:	mov    QWORD PTR [rsp+0x40],rax
  402d84:	jmp    0x40299e
  402d89:	nop    DWORD PTR [rax+0x0]
  402d90:	lea    rdx,[rip+0x10ba9]        # 0x413940
  402d97:	lea    rcx,[rip+0x10bab]        # 0x413949
  402d9e:	mov    r8d,0x8e
  402da4:	call   0x40ca80
  402da9:	jmp    0x402c01
  402dae:	xchg   ax,ax
  402db0:	lea    rdx,[rip+0x10b89]        # 0x413940
  402db7:	lea    rcx,[rip+0x10b8b]        # 0x413949
  402dbe:	mov    r8d,0x8e
  402dc4:	call   0x40ca80
  402dc9:	jmp    0x402d5c
  402dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  402dd0:	lea    rdx,[rip+0x10b69]        # 0x413940
  402dd7:	lea    rcx,[rip+0x10b99]        # 0x413977
  402dde:	mov    r8d,0xaa
  402de4:	call   0x40ca80
  402de9:	jmp    0x402b10
  402dee:	xchg   ax,ax
  402df0:	lea    rdx,[rip+0x10b49]        # 0x413940
  402df7:	lea    rcx,[rip+0x10b62]        # 0x413960
  402dfe:	mov    r8d,0xa9
  402e04:	call   0x40ca80
  402e09:	jmp    0x402b04
  402e0e:	xchg   ax,ax
  402e10:	lea    rdx,[rip+0x10b29]        # 0x413940
  402e17:	lea    rcx,[rip+0x10b59]        # 0x413977
  402e1e:	mov    r8d,0xaa
  402e24:	call   0x40ca80
  402e29:	jmp    0x40295c
  402e2e:	xchg   ax,ax
  402e30:	lea    rdx,[rip+0x10b09]        # 0x413940
  402e37:	lea    rcx,[rip+0x10b22]        # 0x413960
  402e3e:	mov    r8d,0xa9
  402e44:	call   0x40ca80
  402e49:	jmp    0x402950
  402e4e:	call   0x402e60
  402e53:	nop
  402e54:	nop
  402e55:	nop
  402e56:	nop
  402e57:	nop
  402e58:	nop
  402e59:	nop
  402e5a:	nop
  402e5b:	nop
  402e5c:	nop
  402e5d:	nop
  402e5e:	nop
  402e5f:	nop
  402e60:	sub    rsp,0x28
  402e64:	lea    rcx,[rip+0x10b25]        # 0x413990
  402e6b:	call   0x40b000
  402e70:	mov    ecx,DWORD PTR [rip+0xf19a]        # 0x412010
  402e76:	mov    r8,rax
  402e79:	xor    edx,edx
  402e7b:	call   0x4031b0
  402e80:	mov    ecx,0x1
  402e85:	call   0x411490
  402e8a:	nop
  402e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e90:	sub    rsp,0x28
  402e94:	test   rcx,rcx
  402e97:	jne    0x402eb0
  402e99:	mov    ecx,0x1
  402e9e:	call   0x411418
  402ea3:	test   rax,rax
  402ea6:	je     0x402eb0
  402ea8:	add    rsp,0x28
  402eac:	ret    
  402ead:	nop    DWORD PTR [rax]
  402eb0:	call   0x402e60
  402eb5:	nop
  402eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ec0:	push   rbx
  402ec1:	sub    rsp,0x20
  402ec5:	mov    rbx,rcx
  402ec8:	call   0x411418
  402ecd:	test   rax,rax
  402ed0:	je     0x402ee0
  402ed2:	add    rsp,0x20
  402ed6:	pop    rbx
  402ed7:	ret    
  402ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ee0:	mov    rcx,rbx
  402ee3:	add    rsp,0x20
  402ee7:	pop    rbx
  402ee8:	jmp    0x402e90
  402eea:	nop    WORD PTR [rax+rax*1+0x0]
  402ef0:	push   rbx
  402ef1:	sub    rsp,0x20
  402ef5:	mov    rax,0xffffffffffffffff
  402efc:	mov    rbx,rdx
  402eff:	xor    edx,edx
  402f01:	div    rbx
  402f04:	cmp    rax,rcx
  402f07:	jb     0x402f2d
  402f09:	imul   rbx,rcx
  402f0d:	mov    rcx,rbx
  402f10:	call   0x411418
  402f15:	test   rax,rax
  402f18:	je     0x402f20
  402f1a:	add    rsp,0x20
  402f1e:	pop    rbx
  402f1f:	ret    
  402f20:	mov    rcx,rbx
  402f23:	add    rsp,0x20
  402f27:	pop    rbx
  402f28:	jmp    0x402e90
  402f2d:	call   0x402e60
  402f32:	nop
  402f33:	nop    DWORD PTR [rax]
  402f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f40:	push   rsi
  402f41:	push   rbx
  402f42:	sub    rsp,0x28
  402f46:	mov    rsi,rcx
  402f49:	call   0x402ec0
  402f4e:	mov    r8,rsi
  402f51:	mov    rbx,rax
  402f54:	xor    edx,edx
  402f56:	mov    rcx,rax
  402f59:	call   0x4113f8
  402f5e:	mov    rax,rbx
  402f61:	add    rsp,0x28
  402f65:	pop    rbx
  402f66:	pop    rsi
  402f67:	ret    
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	push   rbx
  402f71:	sub    rsp,0x20
  402f75:	mov    rbx,rcx
  402f78:	call   0x411498
  402f7d:	test   rax,rax
  402f80:	je     0x402f90
  402f82:	add    rsp,0x20
  402f86:	pop    rbx
  402f87:	ret    
  402f88:	nop    DWORD PTR [rax+rax*1+0x0]
  402f90:	mov    rcx,rbx
  402f93:	add    rsp,0x20
  402f97:	pop    rbx
  402f98:	jmp    0x402e90
  402f9d:	nop    DWORD PTR [rax]
  402fa0:	push   rbx
  402fa1:	sub    rsp,0x20
  402fa5:	test   rcx,rcx
  402fa8:	je     0x402fc0
  402faa:	mov    rbx,rdx
  402fad:	call   0x4113e0
  402fb2:	test   rax,rax
  402fb5:	je     0x402fd0
  402fb7:	add    rsp,0x20
  402fbb:	pop    rbx
  402fbc:	ret    
  402fbd:	nop    DWORD PTR [rax]
  402fc0:	mov    rcx,rdx
  402fc3:	add    rsp,0x20
  402fc7:	pop    rbx
  402fc8:	jmp    0x402ec0
  402fcd:	nop    DWORD PTR [rax]
  402fd0:	mov    rcx,rbx
  402fd3:	add    rsp,0x20
  402fd7:	pop    rbx
  402fd8:	jmp    0x402e90
  402fdd:	nop
  402fde:	nop
  402fdf:	nop
  402fe0:	push   rbx
  402fe1:	sub    rsp,0x30
  402fe5:	mov    rax,QWORD PTR [rsp+0x60]
  402fea:	mov    QWORD PTR [rsp+0x20],rax
  402fef:	call   0x409d10
  402ff4:	test   eax,eax
  402ff6:	mov    ebx,eax
  402ff8:	js     0x403002
  402ffa:	mov    eax,ebx
  402ffc:	add    rsp,0x30
  403000:	pop    rbx
  403001:	ret    
  403002:	call   QWORD PTR [rip+0x1c608]        # 0x41f610
  403008:	cmp    DWORD PTR [rax],0xc
  40300b:	jne    0x402ffa
  40300d:	call   0x402e60
  403012:	nop
  403013:	nop    DWORD PTR [rax]
  403016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403020:	push   rbx
  403021:	sub    rsp,0x20
  403025:	call   0x409fa0
  40302a:	test   rax,rax
  40302d:	mov    rbx,rax
  403030:	je     0x403040
  403032:	mov    rax,rbx
  403035:	add    rsp,0x20
  403039:	pop    rbx
  40303a:	ret    
  40303b:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	call   QWORD PTR [rip+0x1c5ca]        # 0x41f610
  403046:	cmp    DWORD PTR [rax],0xc
  403049:	jne    0x403032
  40304b:	call   0x402e60
  403050:	nop
  403051:	nop    DWORD PTR [rax+rax*1+0x0]
  403056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403060:	push   rbx
  403061:	sub    rsp,0x20
  403065:	call   0x40a1a0
  40306a:	test   rax,rax
  40306d:	mov    rbx,rax
  403070:	je     0x403080
  403072:	mov    rax,rbx
  403075:	add    rsp,0x20
  403079:	pop    rbx
  40307a:	ret    
  40307b:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	call   QWORD PTR [rip+0x1c58a]        # 0x41f610
  403086:	cmp    DWORD PTR [rax],0xc
  403089:	jne    0x403072
  40308b:	call   0x402e60
  403090:	nop
  403091:	nop
  403092:	nop
  403093:	nop
  403094:	nop
  403095:	nop
  403096:	nop
  403097:	nop
  403098:	nop
  403099:	nop
  40309a:	nop
  40309b:	nop
  40309c:	nop
  40309d:	nop
  40309e:	nop
  40309f:	nop
  4030a0:	push   r12
  4030a2:	push   rbp
  4030a3:	push   rdi
  4030a4:	push   rsi
  4030a5:	push   rbx
  4030a6:	sub    rsp,0x20
  4030aa:	mov    rbx,QWORD PTR [rip+0x1c51f]        # 0x41f5d0
  4030b1:	mov    edi,edx
  4030b3:	mov    rbp,r8
  4030b6:	mov    r12,r9
  4030b9:	mov    esi,ecx
  4030bb:	mov    QWORD PTR [rsp+0x68],r9
  4030c0:	call   rbx
  4030c2:	lea    rcx,[rax+0x60]
  4030c6:	mov    r8,r12
  4030c9:	mov    rdx,rbp
  4030cc:	call   0x404f60
  4030d1:	add    DWORD PTR [rip+0x1b618],0x1        # 0x41e6f0
  4030d8:	test   edi,edi
  4030da:	jne    0x403110
  4030dc:	call   rbx
  4030de:	lea    rdx,[rax+0x60]
  4030e2:	mov    ecx,0xa
  4030e7:	call   0x4050b0
  4030ec:	call   rbx
  4030ee:	lea    rcx,[rax+0x60]
  4030f2:	call   0x411478
  4030f7:	test   esi,esi
  4030f9:	jne    0x403151
  4030fb:	add    rsp,0x20
  4030ff:	pop    rbx
  403100:	pop    rsi
  403101:	pop    rdi
  403102:	pop    rbp
  403103:	pop    r12
  403105:	ret    
  403106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403110:	mov    ecx,edi
  403112:	call   0x4053e0
  403117:	test   rax,rax
  40311a:	mov    rdi,rax
  40311d:	je     0x403140
  40311f:	call   rbx
  403121:	lea    rdx,[rip+0x1089d]        # 0x4139c5
  403128:	lea    rcx,[rax+0x60]
  40312c:	mov    r8,rdi
  40312f:	call   0x405050
  403134:	jmp    0x4030dc
  403136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403140:	lea    rcx,[rip+0x10869]        # 0x4139b0
  403147:	call   0x40b000
  40314c:	mov    rdi,rax
  40314f:	jmp    0x40311f
  403151:	mov    ecx,esi
  403153:	call   0x411490
  403158:	nop
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	push   rbx
  403161:	sub    rsp,0x20
  403165:	mov    rbx,QWORD PTR [rip+0x1c464]        # 0x41f5d0
  40316c:	call   rbx
  40316e:	lea    rcx,[rax+0x30]
  403172:	call   0x411360
  403177:	test   eax,eax
  403179:	js     0x4031a0
  40317b:	mov    ecx,eax
  40317d:	call   0x4046f0
  403182:	cmp    rax,0xffffffffffffffff
  403186:	je     0x4031a0
  403188:	call   rbx
  40318a:	lea    rcx,[rax+0x30]
  40318e:	add    rsp,0x20
  403192:	pop    rbx
  403193:	jmp    0x411478
  403198:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	add    rsp,0x20
  4031a4:	pop    rbx
  4031a5:	ret    
  4031a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031b0:	push   rbp
  4031b1:	push   rdi
  4031b2:	push   rsi
  4031b3:	push   rbx
  4031b4:	sub    rsp,0x38
  4031b8:	mov    ebx,ecx
  4031ba:	mov    esi,edx
  4031bc:	mov    QWORD PTR [rsp+0x78],r9
  4031c1:	mov    rdi,r8
  4031c4:	call   0x403160
  4031c9:	mov    rax,QWORD PTR [rip+0x1b528]        # 0x41e6f8
  4031d0:	test   rax,rax
  4031d3:	je     0x403200
  4031d5:	call   rax
  4031d7:	lea    r9,[rsp+0x78]
  4031dc:	mov    r8,rdi
  4031df:	mov    edx,esi
  4031e1:	mov    ecx,ebx
  4031e3:	mov    QWORD PTR [rsp+0x28],r9
  4031e8:	call   0x4030a0
  4031ed:	nop
  4031ee:	add    rsp,0x38
  4031f2:	pop    rbx
  4031f3:	pop    rsi
  4031f4:	pop    rdi
  4031f5:	pop    rbp
  4031f6:	ret    
  4031f7:	nop    WORD PTR [rax+rax*1+0x0]
  403200:	mov    rax,QWORD PTR [rip+0x15559]        # 0x418760
  403207:	mov    rbp,QWORD PTR [rax]
  40320a:	call   QWORD PTR [rip+0x1c3c0]        # 0x41f5d0
  403210:	lea    rdx,[rip+0x107b3]        # 0x4139ca
  403217:	lea    rcx,[rax+0x60]
  40321b:	mov    r8,rbp
  40321e:	call   0x405050
  403223:	jmp    0x4031d7
  403225:	nop
  403226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403230:	push   r13
  403232:	push   r12
  403234:	push   rbp
  403235:	push   rdi
  403236:	push   rsi
  403237:	push   rbx
  403238:	sub    rsp,0x38
  40323c:	mov    eax,DWORD PTR [rip+0x1b4be]        # 0x41e700
  403242:	mov    ebp,ecx
  403244:	mov    r12d,edx
  403247:	mov    rbx,r8
  40324a:	mov    edi,r9d
  40324d:	test   eax,eax
  40324f:	je     0x40326b
  403251:	cmp    DWORD PTR [rip+0x18e10],r9d        # 0x41c068
  403258:	je     0x4032e0
  40325e:	mov    QWORD PTR [rip+0x18dfb],rbx        # 0x41c060
  403265:	mov    DWORD PTR [rip+0x18dfd],edi        # 0x41c068
  40326b:	call   0x403160
  403270:	mov    rax,QWORD PTR [rip+0x1b481]        # 0x41e6f8
  403277:	test   rax,rax
  40327a:	je     0x403310
  403280:	call   rax
  403282:	mov    r13,QWORD PTR [rip+0x1c347]        # 0x41f5d0
  403289:	lea    rax,[rip+0x1073f]        # 0x4139cf
  403290:	lea    rsi,[rip+0x10740]        # 0x4139d7
  403297:	test   rbx,rbx
  40329a:	cmovne rsi,rax
  40329e:	call   r13
  4032a1:	lea    rcx,[rax+0x60]
  4032a5:	mov    r9d,edi
  4032a8:	mov    r8,rbx
  4032ab:	mov    rdx,rsi
  4032ae:	call   0x405050
  4032b3:	mov    r8,QWORD PTR [rsp+0x90]
  4032bb:	lea    r9,[rsp+0x98]
  4032c3:	mov    edx,r12d
  4032c6:	mov    ecx,ebp
  4032c8:	mov    QWORD PTR [rsp+0x28],r9
  4032cd:	call   0x4030a0
  4032d2:	nop
  4032d3:	add    rsp,0x38
  4032d7:	pop    rbx
  4032d8:	pop    rsi
  4032d9:	pop    rdi
  4032da:	pop    rbp
  4032db:	pop    r12
  4032dd:	pop    r13
  4032df:	ret    
  4032e0:	mov    rcx,QWORD PTR [rip+0x18d79]        # 0x41c060
  4032e7:	cmp    r8,rcx
  4032ea:	je     0x4032d3
  4032ec:	test   r8,r8
  4032ef:	je     0x40325e
  4032f5:	test   rcx,rcx
  4032f8:	je     0x40325e
  4032fe:	mov    rdx,r8
  403301:	call   0x4113c0
  403306:	test   eax,eax
  403308:	je     0x4032d3
  40330a:	jmp    0x40325e
  40330f:	nop
  403310:	mov    rax,QWORD PTR [rip+0x15449]        # 0x418760
  403317:	mov    r13,QWORD PTR [rip+0x1c2b2]        # 0x41f5d0
  40331e:	mov    rsi,QWORD PTR [rax]
  403321:	call   r13
  403324:	lea    rdx,[rip+0x106ae]        # 0x4139d9
  40332b:	lea    rcx,[rax+0x60]
  40332f:	mov    r8,rsi
  403332:	call   0x405050
  403337:	jmp    0x403289
  40333c:	nop
  40333d:	nop
  40333e:	nop
  40333f:	nop
  403340:	push   r14
  403342:	push   r13
  403344:	push   r12
  403346:	push   rbp
  403347:	push   rdi
  403348:	push   rsi
  403349:	push   rbx
  40334a:	movsxd rax,DWORD PTR [rdx+0x34]
  40334e:	mov    r12d,DWORD PTR [rdx+0x30]
  403352:	mov    ebp,DWORD PTR [rdx]
  403354:	mov    esi,r12d
  403357:	lea    r10,[rcx+rax*8]
  40335b:	mov    rbx,rax
  40335e:	mov    edi,ebp
  403360:	cmp    ebx,esi
  403362:	jle    0x4033b0
  403364:	cmp    edi,ebx
  403366:	jle    0x4033b0
  403368:	mov    r13d,edi
  40336b:	mov    r14d,ebx
  40336e:	sub    r13d,ebx
  403371:	sub    r14d,esi
  403374:	cmp    r13d,r14d
  403377:	jg     0x4033d0
  403379:	test   r13d,r13d
  40337c:	jle    0x4033a9
  40337e:	movsxd rax,esi
  403381:	lea    r8,[rcx+rax*8]
  403385:	xor    eax,eax
  403387:	nop    WORD PTR [rax+rax*1+0x0]
  403390:	mov    r9,QWORD PTR [r8+rax*8]
  403394:	mov    r11,QWORD PTR [r10+rax*8]
  403398:	mov    QWORD PTR [r8+rax*8],r11
  40339c:	mov    QWORD PTR [r10+rax*8],r9
  4033a0:	add    rax,0x1
  4033a4:	cmp    r13d,eax
  4033a7:	jg     0x403390
  4033a9:	add    esi,r13d
  4033ac:	cmp    ebx,esi
  4033ae:	jg     0x403364
  4033b0:	mov    eax,ebp
  4033b2:	mov    DWORD PTR [rdx+0x34],ebp
  4033b5:	sub    eax,ebx
  4033b7:	add    r12d,eax
  4033ba:	mov    DWORD PTR [rdx+0x30],r12d
  4033be:	pop    rbx
  4033bf:	pop    rsi
  4033c0:	pop    rdi
  4033c1:	pop    rbp
  4033c2:	pop    r12
  4033c4:	pop    r13
  4033c6:	pop    r14
  4033c8:	ret    
  4033c9:	nop    DWORD PTR [rax+0x0]
  4033d0:	test   r14d,r14d
  4033d3:	jle    0x403409
  4033d5:	movsxd rax,esi
  4033d8:	lea    r9,[rcx+rax*8]
  4033dc:	mov    eax,esi
  4033de:	sub    eax,ebx
  4033e0:	add    eax,edi
  4033e2:	cdqe   
  4033e4:	lea    r8,[rcx+rax*8]
  4033e8:	xor    eax,eax
  4033ea:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	mov    r11,QWORD PTR [r9+rax*8]
  4033f4:	mov    r13,QWORD PTR [r8+rax*8]
  4033f8:	mov    QWORD PTR [r9+rax*8],r13
  4033fc:	mov    QWORD PTR [r8+rax*8],r11
  403400:	add    rax,0x1
  403404:	cmp    r14d,eax
  403407:	jg     0x4033f0
  403409:	sub    edi,r14d
  40340c:	jmp    0x403360
  403411:	nop    DWORD PTR [rax+rax*1+0x0]
  403416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403420:	push   r15
  403422:	push   r14
  403424:	push   r13
  403426:	push   r12
  403428:	push   rbp
  403429:	push   rdi
  40342a:	push   rsi
  40342b:	push   rbx
  40342c:	sub    rsp,0x68
  403430:	mov    r15,QWORD PTR [rsp+0xe0]
  403438:	test   ecx,ecx
  40343a:	mov    ebp,ecx
  40343c:	mov    QWORD PTR [rsp+0xb8],rdx
  403444:	mov    r13,r8
  403447:	mov    QWORD PTR [rsp+0xc8],r9
  40344f:	mov    eax,DWORD PTR [r15+0x4]
  403453:	mov    DWORD PTR [rsp+0x3c],eax
  403457:	jle    0x4038ac
  40345d:	mov    eax,DWORD PTR [r15]
  403460:	mov    QWORD PTR [r15+0x10],0x0
  403468:	test   eax,eax
  40346a:	jne    0x403744
  403470:	mov    DWORD PTR [r15],0x1
  403477:	mov    eax,0x1
  40347c:	mov    r9d,DWORD PTR [rsp+0xe8]
  403484:	mov    DWORD PTR [r15+0x34],eax
  403488:	mov    DWORD PTR [r15+0x30],eax
  40348c:	mov    QWORD PTR [r15+0x20],0x0
  403494:	mov    eax,0x1
  403499:	test   r9d,r9d
  40349c:	je     0x4038c0
  4034a2:	mov    DWORD PTR [r15+0x2c],eax
  4034a6:	movzx  edx,BYTE PTR [r13+0x0]
  4034ab:	cmp    dl,0x2d
  4034ae:	je     0x4038e7
  4034b4:	cmp    dl,0x2b
  4034b7:	je     0x403a20
  4034bd:	xor    eax,0x1
  4034c0:	mov    DWORD PTR [r15+0x28],eax
  4034c4:	mov    DWORD PTR [r15+0x18],0x1
  4034cc:	movzx  eax,BYTE PTR [r13+0x0]
  4034d1:	cmp    al,0x3a
  4034d3:	mov    rbx,QWORD PTR [r15+0x20]
  4034d7:	mov    eax,0x0
  4034dc:	cmovne eax,DWORD PTR [rsp+0x3c]
  4034e1:	test   rbx,rbx
  4034e4:	mov    DWORD PTR [rsp+0x3c],eax
  4034e8:	je     0x403820
  4034ee:	cmp    BYTE PTR [rbx],0x0
  4034f1:	je     0x403820
  4034f7:	cmp    QWORD PTR [rsp+0xc8],0x0
  403500:	je     0x403772
  403506:	movsxd rax,DWORD PTR [r15]
  403509:	mov    rdi,QWORD PTR [rsp+0xb8]
  403511:	mov    r8,rax
  403514:	mov    rax,QWORD PTR [rdi+rax*8]
  403518:	movsx  edx,BYTE PTR [rax+0x1]
  40351c:	cmp    dl,0x2d
  40351f:	je     0x403554
  403521:	mov    ecx,DWORD PTR [rsp+0xd8]
  403528:	test   ecx,ecx
  40352a:	je     0x403772
  403530:	cmp    BYTE PTR [rax+0x2],0x0
  403534:	jne    0x403554
  403536:	mov    rcx,r13
  403539:	mov    DWORD PTR [rsp+0x40],r8d
  40353e:	mov    rdi,rbx
  403541:	call   0x4113c8
  403546:	test   rax,rax
  403549:	mov    r8d,DWORD PTR [rsp+0x40]
  40354e:	jne    0x403775
  403554:	movzx  eax,BYTE PTR [rbx]
  403557:	mov    rdi,rbx
  40355a:	cmp    al,0x3d
  40355c:	je     0x403e23
  403562:	test   al,al
  403564:	jne    0x403574
  403566:	jmp    0x403e23
  40356b:	nop    DWORD PTR [rax+rax*1+0x0]
  403570:	test   al,al
  403572:	je     0x40357f
  403574:	add    rdi,0x1
  403578:	movzx  eax,BYTE PTR [rdi]
  40357b:	cmp    al,0x3d
  40357d:	jne    0x403570
  40357f:	mov    rax,rdi
  403582:	sub    rax,rbx
  403585:	mov    r11d,eax
  403588:	mov    rsi,QWORD PTR [rsp+0xc8]
  403590:	mov    r14,QWORD PTR [rsi]
  403593:	test   r14,r14
  403596:	je     0x4036ad
  40359c:	mov    eax,eax
  40359e:	xor    ecx,ecx
  4035a0:	mov    rdx,rbx
  4035a3:	mov    QWORD PTR [rsp+0x48],rdi
  4035a8:	mov    DWORD PTR [rsp+0xb0],ebp
  4035af:	xor    r12d,r12d
  4035b2:	mov    QWORD PTR [rsp+0xc0],r13
  4035ba:	mov    DWORD PTR [rsp+0x44],0xffffffff
  4035c2:	mov    r13,r14
  4035c5:	mov    DWORD PTR [rsp+0x40],0x0
  4035cd:	xor    ebx,ebx
  4035cf:	mov    rdi,rax
  4035d2:	mov    ebp,r11d
  4035d5:	mov    r14,rcx
  4035d8:	jmp    0x403634
  4035da:	nop    WORD PTR [rax+rax*1+0x0]
  4035e0:	mov    eax,DWORD PTR [rsp+0x40]
  4035e4:	test   eax,eax
  4035e6:	jne    0x403620
  4035e8:	mov    eax,DWORD PTR [rsp+0xd8]
  4035ef:	test   eax,eax
  4035f1:	jne    0x403600
  4035f3:	mov    eax,DWORD PTR [rsi+0x8]
  4035f6:	cmp    DWORD PTR [r14+0x8],eax
  4035fa:	je     0x403a31
  403600:	mov    ecx,0x10
  403605:	call   0x411418
  40360a:	test   rax,rax
  40360d:	je     0x403a51
  403613:	mov    QWORD PTR [rax+0x8],rbx
  403617:	mov    QWORD PTR [rax],rsi
  40361a:	mov    rbx,rax
  40361d:	nop    DWORD PTR [rax]
  403620:	add    rsi,0x20
  403624:	mov    r13,QWORD PTR [rsi]
  403627:	add    r12d,0x1
  40362b:	test   r13,r13
  40362e:	je     0x403670
  403630:	mov    rdx,QWORD PTR [r15+0x20]
  403634:	mov    r8,rdi
  403637:	mov    rcx,r13
  40363a:	call   0x4113a0
  40363f:	test   eax,eax
  403641:	jne    0x403620
  403643:	mov    rcx,r13
  403646:	call   0x4113a8
  40364b:	cmp    ebp,eax
  40364d:	je     0x403a80
  403653:	test   r14,r14
  403656:	jne    0x4035e0
  403658:	mov    r14,rsi
  40365b:	add    rsi,0x20
  40365f:	mov    r13,QWORD PTR [rsi]
  403662:	mov    DWORD PTR [rsp+0x44],r12d
  403667:	add    r12d,0x1
  40366b:	test   r13,r13
  40366e:	jne    0x403630
  403670:	test   rbx,rbx
  403673:	mov    rcx,r14
  403676:	mov    rdi,QWORD PTR [rsp+0x48]
  40367b:	mov    ebp,DWORD PTR [rsp+0xb0]
  403682:	mov    r13,QWORD PTR [rsp+0xc0]
  40368a:	setne  sil
  40368e:	movzx  eax,BYTE PTR [rsp+0x40]
  403693:	jne    0x403d70
  403699:	test   al,al
  40369b:	jne    0x403d70
  4036a1:	mov    r8d,DWORD PTR [r15]
  4036a4:	test   rcx,rcx
  4036a7:	jne    0x4042e6
  4036ad:	mov    ebx,DWORD PTR [rsp+0xd8]
  4036b4:	test   ebx,ebx
  4036b6:	jne    0x403d17
  4036bc:	mov    r11d,DWORD PTR [rsp+0x3c]
  4036c1:	test   r11d,r11d
  4036c4:	je     0x403720
  4036c6:	mov    rax,QWORD PTR [rsp+0xb8]
  4036ce:	movsxd r14,r8d
  4036d1:	mov    rsi,QWORD PTR [rax+r14*8]
  4036d5:	cmp    BYTE PTR [rsi+0x1],0x2d
  4036d9:	je     0x403f7e
  4036df:	mov    rbx,QWORD PTR [r15+0x20]
  4036e3:	mov    rax,QWORD PTR [rsp+0xb8]
  4036eb:	movsx  ebp,BYTE PTR [rsi]
  4036ee:	lea    rcx,[rip+0x10403]        # 0x413af8
  4036f5:	mov    rdi,QWORD PTR [rax]
  4036f8:	call   0x40b000
  4036fd:	mov    rsi,rax
  403700:	call   QWORD PTR [rip+0x1beca]        # 0x41f5d0
  403706:	lea    rcx,[rax+0x60]
  40370a:	mov    r8,rdi
  40370d:	mov    QWORD PTR [rsp+0x20],rbx
  403712:	mov    r9d,ebp
  403715:	mov    rdx,rsi
  403718:	call   0x405050
  40371d:	mov    r8d,DWORD PTR [r15]
  403720:	lea    rax,[rip+0x103f1]        # 0x413b18
  403727:	lea    r14d,[r8+0x1]
  40372b:	mov    DWORD PTR [r15+0x8],0x0
  403733:	mov    ebx,0x3f
  403738:	mov    QWORD PTR [r15+0x20],rax
  40373c:	mov    DWORD PTR [r15],r14d
  40373f:	jmp    0x40380c
  403744:	mov    r10d,DWORD PTR [r15+0x18]
  403748:	test   r10d,r10d
  40374b:	je     0x40347c
  403751:	movzx  eax,BYTE PTR [r8]
  403755:	lea    edx,[rax-0x2b]
  403758:	and    edx,0xfd
  40375e:	jne    0x4034d1
  403764:	movzx  eax,BYTE PTR [r8+0x1]
  403769:	add    r13,0x1
  40376d:	jmp    0x4034d1
  403772:	mov    rdi,rbx
  403775:	lea    r12,[rdi+0x1]
  403779:	mov    rcx,r13
  40377c:	mov    QWORD PTR [r15+0x20],r12
  403780:	movsx  ebx,BYTE PTR [rdi]
  403783:	mov    edx,ebx
  403785:	mov    esi,ebx
  403787:	call   0x4113c8
  40378c:	cmp    BYTE PTR [rdi+0x1],0x0
  403790:	je     0x403922
  403796:	sub    esi,0x3a
  403799:	cmp    sil,0x1
  40379d:	jbe    0x4037f5
  40379f:	test   rax,rax
  4037a2:	je     0x4037f5
  4037a4:	cmp    BYTE PTR [rax],0x57
  4037a7:	movzx  edx,BYTE PTR [rax+0x1]
  4037ab:	je     0x403bfb
  4037b1:	cmp    dl,0x3a
  4037b4:	jne    0x40380c
  4037b6:	cmp    BYTE PTR [rax+0x2],0x3a
  4037ba:	je     0x403f5f
  4037c0:	cmp    BYTE PTR [rdi+0x1],0x0
  4037c4:	jne    0x403f52
  4037ca:	movsxd rax,DWORD PTR [r15]
  4037cd:	cmp    eax,ebp
  4037cf:	je     0x4040a4
  4037d5:	mov    rsi,QWORD PTR [rsp+0xb8]
  4037dd:	lea    edx,[rax+0x1]
  4037e0:	mov    DWORD PTR [r15],edx
  4037e3:	mov    rax,QWORD PTR [rsi+rax*8]
  4037e7:	mov    QWORD PTR [r15+0x10],rax
  4037eb:	mov    QWORD PTR [r15+0x20],0x0
  4037f3:	jmp    0x40380c
  4037f5:	mov    r10d,DWORD PTR [rsp+0x3c]
  4037fa:	test   r10d,r10d
  4037fd:	jne    0x403930
  403803:	mov    DWORD PTR [r15+0x8],ebx
  403807:	mov    ebx,0x3f
  40380c:	mov    eax,ebx
  40380e:	add    rsp,0x68
  403812:	pop    rbx
  403813:	pop    rsi
  403814:	pop    rdi
  403815:	pop    rbp
  403816:	pop    r12
  403818:	pop    r13
  40381a:	pop    r14
  40381c:	pop    r15
  40381e:	ret    
  40381f:	nop
  403820:	mov    edx,DWORD PTR [r15]
  403823:	cmp    DWORD PTR [r15+0x34],edx
  403827:	jle    0x40382d
  403829:	mov    DWORD PTR [r15+0x34],edx
  40382d:	cmp    edx,DWORD PTR [r15+0x30]
  403831:	jge    0x403837
  403833:	mov    DWORD PTR [r15+0x30],edx
  403837:	cmp    DWORD PTR [r15+0x28],0x1
  40383c:	je     0x4039a0
  403842:	cmp    ebp,edx
  403844:	je     0x403a01
  40384a:	mov    rdi,QWORD PTR [rsp+0xb8]
  403852:	movsxd rax,edx
  403855:	mov    ecx,0x3
  40385a:	mov    rax,QWORD PTR [rdi+rax*8]
  40385e:	lea    rdi,[rip+0x1018b]        # 0x4139f0
  403865:	mov    rsi,rax
  403868:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40386a:	jne    0x403900
  403870:	mov    eax,DWORD PTR [r15+0x30]
  403874:	mov    ecx,DWORD PTR [r15+0x34]
  403878:	add    edx,0x1
  40387b:	mov    DWORD PTR [r15],edx
  40387e:	cmp    eax,ecx
  403880:	je     0x403bc0
  403886:	cmp    edx,ecx
  403888:	je     0x40389e
  40388a:	mov    rcx,QWORD PTR [rsp+0xb8]
  403892:	mov    rdx,r15
  403895:	call   0x403340
  40389a:	mov    eax,DWORD PTR [r15+0x30]
  40389e:	mov    DWORD PTR [r15+0x34],ebp
  4038a2:	mov    DWORD PTR [r15],ebp
  4038a5:	cmp    ebp,eax
  4038a7:	je     0x4038ac
  4038a9:	mov    DWORD PTR [r15],eax
  4038ac:	mov    ebx,0xffffffff
  4038b1:	jmp    0x40380c
  4038b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038c0:	lea    rcx,[rip+0x10119]        # 0x4139e0
  4038c7:	call   0x411440
  4038cc:	test   rax,rax
  4038cf:	setne  al
  4038d2:	movzx  eax,al
  4038d5:	mov    DWORD PTR [r15+0x2c],eax
  4038d9:	movzx  edx,BYTE PTR [r13+0x0]
  4038de:	cmp    dl,0x2d
  4038e1:	jne    0x4034b4
  4038e7:	mov    DWORD PTR [r15+0x28],0x2
  4038ef:	add    r13,0x1
  4038f3:	jmp    0x4034c4
  4038f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403900:	cmp    BYTE PTR [rax],0x2d
  403903:	je     0x403970
  403905:	mov    r8d,DWORD PTR [r15+0x28]
  403909:	test   r8d,r8d
  40390c:	je     0x4038ac
  40390e:	add    edx,0x1
  403911:	mov    QWORD PTR [r15+0x10],rax
  403915:	mov    ebx,0x1
  40391a:	mov    DWORD PTR [r15],edx
  40391d:	jmp    0x40380c
  403922:	add    DWORD PTR [r15],0x1
  403926:	jmp    0x403796
  40392b:	nop    DWORD PTR [rax+rax*1+0x0]
  403930:	mov    rax,QWORD PTR [rsp+0xb8]
  403938:	lea    rcx,[rip+0x101da]        # 0x413b19
  40393f:	mov    rdi,QWORD PTR [rax]
  403942:	call   0x40b000
  403947:	mov    rsi,rax
  40394a:	call   QWORD PTR [rip+0x1bc80]        # 0x41f5d0
  403950:	lea    rcx,[rax+0x60]
  403954:	mov    r9d,ebx
  403957:	mov    r8,rdi
  40395a:	mov    rdx,rsi
  40395d:	call   0x405050
  403962:	jmp    0x403803
  403967:	nop    WORD PTR [rax+rax*1+0x0]
  403970:	movzx  ecx,BYTE PTR [rax+0x1]
  403974:	test   cl,cl
  403976:	je     0x403905
  403978:	cmp    cl,0x2d
  40397b:	sete   dl
  40397e:	xor    ecx,ecx
  403980:	cmp    QWORD PTR [rsp+0xc8],0x0
  403989:	setne  cl
  40398c:	and    rdx,rcx
  40398f:	lea    rbx,[rax+rdx*1+0x1]
  403994:	mov    QWORD PTR [r15+0x20],rbx
  403998:	jmp    0x4034f7
  40399d:	nop    DWORD PTR [rax]
  4039a0:	mov    eax,DWORD PTR [r15+0x34]
  4039a4:	cmp    DWORD PTR [r15+0x30],eax
  4039a8:	je     0x403e10
  4039ae:	cmp    edx,eax
  4039b0:	je     0x4039c5
  4039b2:	mov    rcx,QWORD PTR [rsp+0xb8]
  4039ba:	mov    rdx,r15
  4039bd:	call   0x403340
  4039c2:	mov    eax,DWORD PTR [r15]
  4039c5:	cmp    ebp,eax
  4039c7:	jle    0x403a10
  4039c9:	mov    rsi,QWORD PTR [rsp+0xb8]
  4039d1:	movsxd rdx,eax
  4039d4:	lea    rdx,[rsi+rdx*8]
  4039d8:	jmp    0x4039ee
  4039da:	nop    WORD PTR [rax+rax*1+0x0]
  4039e0:	add    eax,0x1
  4039e3:	add    rdx,0x8
  4039e7:	cmp    eax,ebp
  4039e9:	mov    DWORD PTR [r15],eax
  4039ec:	je     0x403a10
  4039ee:	mov    rcx,QWORD PTR [rdx]
  4039f1:	cmp    BYTE PTR [rcx],0x2d
  4039f4:	jne    0x4039e0
  4039f6:	cmp    BYTE PTR [rcx+0x1],0x0
  4039fa:	je     0x4039e0
  4039fc:	mov    edx,DWORD PTR [r15]
  4039ff:	jmp    0x403a12
  403a01:	mov    ebp,DWORD PTR [r15+0x34]
  403a05:	mov    eax,DWORD PTR [r15+0x30]
  403a09:	jmp    0x4038a5
  403a0e:	xchg   ax,ax
  403a10:	mov    edx,eax
  403a12:	mov    DWORD PTR [r15+0x34],eax
  403a16:	jmp    0x403842
  403a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a20:	mov    DWORD PTR [r15+0x28],0x0
  403a28:	add    r13,0x1
  403a2c:	jmp    0x4034c4
  403a31:	mov    rax,QWORD PTR [rsi+0x10]
  403a35:	cmp    QWORD PTR [r14+0x10],rax
  403a39:	jne    0x403600
  403a3f:	mov    eax,DWORD PTR [rsi+0x18]
  403a42:	cmp    DWORD PTR [r14+0x18],eax
  403a46:	jne    0x403600
  403a4c:	jmp    0x403620
  403a51:	test   rbx,rbx
  403a54:	je     0x403a71
  403a56:	mov    rcx,rbx
  403a59:	nop    DWORD PTR [rax+0x0]
  403a60:	mov    rbx,QWORD PTR [rbx+0x8]
  403a64:	call   0x411458
  403a69:	test   rbx,rbx
  403a6c:	mov    rcx,rbx
  403a6f:	jne    0x403a60
  403a71:	mov    DWORD PTR [rsp+0x40],0x1
  403a79:	jmp    0x403620
  403a7e:	xchg   ax,ax
  403a80:	test   rbx,rbx
  403a83:	mov    rdi,QWORD PTR [rsp+0x48]
  403a88:	mov    ebp,DWORD PTR [rsp+0xb0]
  403a8f:	mov    r13,QWORD PTR [rsp+0xc0]
  403a97:	mov    rcx,rbx
  403a9a:	jne    0x403ab4
  403a9c:	mov    eax,DWORD PTR [rsp+0x40]
  403aa0:	mov    r8d,DWORD PTR [r15]
  403aa3:	test   eax,eax
  403aa5:	jne    0x403ac8
  403aa7:	mov    DWORD PTR [rsp+0x44],r12d
  403aac:	mov    rcx,rsi
  403aaf:	jmp    0x4036a4
  403ab4:	mov    rbx,QWORD PTR [rcx+0x8]
  403ab8:	call   0x411458
  403abd:	test   rbx,rbx
  403ac0:	mov    rcx,rbx
  403ac3:	jne    0x403ab4
  403ac5:	mov    r8d,DWORD PTR [r15]
  403ac8:	lea    eax,[r8+0x1]
  403acc:	mov    DWORD PTR [r15],eax
  403acf:	cmp    BYTE PTR [rdi],0x0
  403ad2:	je     0x403b70
  403ad8:	mov    r13d,DWORD PTR [rsi+0x8]
  403adc:	test   r13d,r13d
  403adf:	jne    0x403bcb
  403ae5:	mov    ebp,DWORD PTR [rsp+0x3c]
  403ae9:	test   ebp,ebp
  403aeb:	je     0x403b43
  403aed:	mov    rdi,QWORD PTR [rsp+0xb8]
  403af5:	cdqe   
  403af7:	mov    rax,QWORD PTR [rdi+rax*8-0x8]
  403afc:	cmp    BYTE PTR [rax+0x1],0x2d
  403b00:	je     0x403f20
  403b06:	movsx  ebp,BYTE PTR [rax]
  403b09:	mov    rax,QWORD PTR [rsp+0xb8]
  403b11:	lea    rcx,[rip+0xff68]        # 0x413a80
  403b18:	mov    r12,QWORD PTR [rsi]
  403b1b:	mov    rdi,QWORD PTR [rax]
  403b1e:	call   0x40b000
  403b23:	mov    rbx,rax
  403b26:	call   QWORD PTR [rip+0x1baa4]        # 0x41f5d0
  403b2c:	lea    rcx,[rax+0x60]
  403b30:	mov    QWORD PTR [rsp+0x20],r12
  403b35:	mov    r9d,ebp
  403b38:	mov    r8,rdi
  403b3b:	mov    rdx,rbx
  403b3e:	call   0x405050
  403b43:	mov    rbx,QWORD PTR [r15+0x20]
  403b47:	mov    rcx,rbx
  403b4a:	call   0x4113a8
  403b4f:	add    rax,rbx
  403b52:	mov    QWORD PTR [r15+0x20],rax
  403b56:	mov    eax,DWORD PTR [rsi+0x18]
  403b59:	mov    DWORD PTR [r15+0x8],eax
  403b5d:	mov    ebx,0x3f
  403b62:	jmp    0x40380c
  403b67:	nop    WORD PTR [rax+rax*1+0x0]
  403b70:	cmp    DWORD PTR [rsi+0x8],0x1
  403b74:	je     0x403bd5
  403b76:	mov    rbx,QWORD PTR [r15+0x20]
  403b7a:	mov    rcx,rbx
  403b7d:	call   0x4113a8
  403b82:	add    rax,rbx
  403b85:	cmp    QWORD PTR [rsp+0xd0],0x0
  403b8e:	mov    QWORD PTR [r15+0x20],rax
  403b92:	je     0x403b9f
  403b94:	mov    rax,QWORD PTR [rsp+0xd0]
  403b9c:	mov    DWORD PTR [rax],r12d
  403b9f:	mov    rax,QWORD PTR [rsi+0x10]
  403ba3:	test   rax,rax
  403ba6:	je     0x403edd
  403bac:	mov    edx,DWORD PTR [rsi+0x18]
  403baf:	xor    ebx,ebx
  403bb1:	mov    DWORD PTR [rax],edx
  403bb3:	jmp    0x40380c
  403bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bc0:	mov    DWORD PTR [r15+0x30],edx
  403bc4:	mov    eax,edx
  403bc6:	jmp    0x40389e
  403bcb:	add    rdi,0x1
  403bcf:	mov    QWORD PTR [r15+0x10],rdi
  403bd3:	jmp    0x403b76
  403bd5:	cmp    ebp,eax
  403bd7:	jle    0x403ee5
  403bdd:	mov    rdi,QWORD PTR [rsp+0xb8]
  403be5:	cdqe   
  403be7:	lea    r14d,[r8+0x2]
  403beb:	mov    DWORD PTR [r15],r14d
  403bee:	mov    rax,QWORD PTR [rdi+rax*8]
  403bf2:	mov    QWORD PTR [r15+0x10],rax
  403bf6:	jmp    0x403b76
  403bfb:	cmp    dl,0x3b
  403bfe:	jne    0x4037b1
  403c04:	cmp    QWORD PTR [rsp+0xc8],0x0
  403c0d:	je     0x4040ed
  403c13:	cmp    BYTE PTR [rdi+0x1],0x0
  403c17:	je     0x4040c7
  403c1d:	add    DWORD PTR [r15],0x1
  403c21:	mov    QWORD PTR [r15+0x10],r12
  403c25:	mov    QWORD PTR [r15+0x20],r12
  403c29:	movzx  edi,BYTE PTR [r12]
  403c2e:	mov    rbx,r12
  403c31:	cmp    dil,0x3d
  403c35:	jne    0x403c4d
  403c37:	jmp    0x403c52
  403c39:	nop    DWORD PTR [rax+0x0]
  403c40:	add    rbx,0x1
  403c44:	movzx  edi,BYTE PTR [rbx]
  403c47:	cmp    dil,0x3d
  403c4b:	je     0x403c52
  403c4d:	test   dil,dil
  403c50:	jne    0x403c40
  403c52:	mov    rax,QWORD PTR [rsp+0xc8]
  403c5a:	mov    r14,QWORD PTR [rax]
  403c5d:	test   r14,r14
  403c60:	je     0x4040ed
  403c66:	mov    rax,rbx
  403c69:	xor    r10d,r10d
  403c6c:	xor    ecx,ecx
  403c6e:	sub    rax,r12
  403c71:	mov    BYTE PTR [rsp+0x44],dil
  403c76:	mov    QWORD PTR [rsp+0x48],rbx
  403c7b:	mov    edx,eax
  403c7d:	mov    DWORD PTR [rsp+0xb0],ebp
  403c84:	mov    QWORD PTR [rsp+0xc0],r13
  403c8c:	mov    QWORD PTR [rsp+0xe0],r15
  403c94:	xor    esi,esi
  403c96:	mov    DWORD PTR [rsp+0x40],0x0
  403c9e:	mov    rdi,rax
  403ca1:	mov    rbp,rcx
  403ca4:	mov    r13d,r10d
  403ca7:	mov    rbx,QWORD PTR [rsp+0xc8]
  403caf:	mov    r15,rdx
  403cb2:	jmp    0x403ce6
  403cb4:	mov    r9d,DWORD PTR [rsp+0xd8]
  403cbc:	test   r9d,r9d
  403cbf:	jne    0x403ccd
  403cc1:	mov    eax,DWORD PTR [rbx+0x8]
  403cc4:	cmp    DWORD PTR [rbp+0x8],eax
  403cc7:	je     0x403ff6
  403ccd:	mov    r13d,0x1
  403cd3:	add    rbx,0x20
  403cd7:	mov    r14,QWORD PTR [rbx]
  403cda:	add    esi,0x1
  403cdd:	test   r14,r14
  403ce0:	je     0x404018
  403ce6:	mov    r8,rdi
  403ce9:	mov    rdx,r12
  403cec:	mov    rcx,r14
  403cef:	call   0x4113a0
  403cf4:	test   eax,eax
  403cf6:	jne    0x403cd3
  403cf8:	mov    rcx,r14
  403cfb:	call   0x4113a8
  403d00:	cmp    r15,rax
  403d03:	je     0x4040ff
  403d09:	test   rbp,rbp
  403d0c:	jne    0x403cb4
  403d0e:	mov    DWORD PTR [rsp+0x40],esi
  403d12:	mov    rbp,rbx
  403d15:	jmp    0x403cd3
  403d17:	mov    rsi,QWORD PTR [rsp+0xb8]
  403d1f:	movsxd rax,r8d
  403d22:	mov    rsi,QWORD PTR [rsi+rax*8]
  403d26:	cmp    BYTE PTR [rsi+0x1],0x2d
  403d2a:	je     0x403f72
  403d30:	mov    rbx,QWORD PTR [r15+0x20]
  403d34:	mov    rcx,r13
  403d37:	mov    DWORD PTR [rsp+0x40],r8d
  403d3c:	movsx  edx,BYTE PTR [rbx]
  403d3f:	mov    rdi,rbx
  403d42:	call   0x4113c8
  403d47:	test   rax,rax
  403d4a:	mov    r8d,DWORD PTR [rsp+0x40]
  403d4f:	jne    0x403775
  403d55:	mov    edx,DWORD PTR [rsp+0x3c]
  403d59:	test   edx,edx
  403d5b:	jne    0x4036e3
  403d61:	jmp    0x403720
  403d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d70:	mov    r14d,DWORD PTR [rsp+0x3c]
  403d75:	test   r14d,r14d
  403d78:	setne  dl
  403d7b:	test   sil,sil
  403d7e:	je     0x403d88
  403d80:	test   dl,dl
  403d82:	jne    0x403e2d
  403d88:	test   al,al
  403d8a:	je     0x403dc9
  403d8c:	test   dl,dl
  403d8e:	je     0x403dc9
  403d90:	movsxd rax,DWORD PTR [r15]
  403d93:	mov    rdi,QWORD PTR [rsp+0xb8]
  403d9b:	lea    rcx,[rip+0xfc8b]        # 0x413a2d
  403da2:	mov    rbp,QWORD PTR [rdi]
  403da5:	mov    r12,QWORD PTR [rdi+rax*8]
  403da9:	call   0x40b000
  403dae:	mov    rdi,rax
  403db1:	call   QWORD PTR [rip+0x1b819]        # 0x41f5d0
  403db7:	lea    rcx,[rax+0x60]
  403dbb:	mov    r9,r12
  403dbe:	mov    r8,rbp
  403dc1:	mov    rdx,rdi
  403dc4:	call   0x405050
  403dc9:	mov    rdi,QWORD PTR [r15+0x20]
  403dcd:	mov    rcx,rdi
  403dd0:	call   0x4113a8
  403dd5:	add    DWORD PTR [r15],0x1
  403dd9:	add    rax,rdi
  403ddc:	test   sil,sil
  403ddf:	mov    QWORD PTR [r15+0x20],rax
  403de3:	mov    DWORD PTR [r15+0x8],0x0
  403deb:	je     0x403b5d
  403df1:	mov    rcx,rbx
  403df4:	mov    rbx,QWORD PTR [rcx+0x8]
  403df8:	call   0x411458
  403dfd:	test   rbx,rbx
  403e00:	mov    rcx,rbx
  403e03:	jne    0x403df4
  403e05:	jmp    0x403b5d
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	cmp    edx,eax
  403e12:	je     0x4039c5
  403e18:	mov    DWORD PTR [r15+0x30],edx
  403e1c:	mov    eax,edx
  403e1e:	jmp    0x4039c5
  403e23:	xor    r11d,r11d
  403e26:	xor    eax,eax
  403e28:	jmp    0x403588
  403e2d:	movsxd rax,DWORD PTR [r15]
  403e30:	mov    rsi,QWORD PTR [rsp+0xb8]
  403e38:	mov    r14,rcx
  403e3b:	mov    QWORD PTR [rsp+0x50],rcx
  403e40:	lea    rcx,[rip+0xfbb1]        # 0x4139f8
  403e47:	mov    QWORD PTR [rsp+0x58],rbx
  403e4c:	mov    rbp,QWORD PTR [rsi+rax*8]
  403e50:	mov    rsi,QWORD PTR [rsi]
  403e53:	call   0x40b000
  403e58:	mov    rdi,QWORD PTR [rip+0x1b771]        # 0x41f5d0
  403e5f:	mov    rbx,rax
  403e62:	call   rdi
  403e64:	lea    rcx,[rax+0x60]
  403e68:	mov    rdx,rbx
  403e6b:	mov    r9,rbp
  403e6e:	mov    r8,rsi
  403e71:	lea    rbx,[rsp+0x50]
  403e76:	call   0x405050
  403e7b:	mov    rax,r14
  403e7e:	jmp    0x403e83
  403e80:	mov    rax,QWORD PTR [rbx]
  403e83:	mov    rsi,QWORD PTR [rax]
  403e86:	call   rdi
  403e88:	lea    rdx,[rip+0xfb96]        # 0x413a25
  403e8f:	lea    rcx,[rax+0x60]
  403e93:	mov    r8,rsi
  403e96:	call   0x405050
  403e9b:	mov    rbx,QWORD PTR [rbx+0x8]
  403e9f:	test   rbx,rbx
  403ea2:	jne    0x403e80
  403ea4:	call   rdi
  403ea6:	lea    rdx,[rax+0x60]
  403eaa:	mov    ecx,0xa
  403eaf:	call   0x4050b0
  403eb4:	mov    rbx,QWORD PTR [r15+0x20]
  403eb8:	mov    rcx,rbx
  403ebb:	call   0x4113a8
  403ec0:	add    rax,rbx
  403ec3:	add    DWORD PTR [r15],0x1
  403ec7:	mov    DWORD PTR [r15+0x8],0x0
  403ecf:	mov    QWORD PTR [r15+0x20],rax
  403ed3:	mov    ebx,0x3f
  403ed8:	jmp    0x40380c
  403edd:	mov    ebx,DWORD PTR [rsi+0x18]
  403ee0:	jmp    0x40380c
  403ee5:	mov    edi,DWORD PTR [rsp+0x3c]
  403ee9:	test   edi,edi
  403eeb:	jne    0x403fbc
  403ef1:	mov    rbx,QWORD PTR [r15+0x20]
  403ef5:	mov    rcx,rbx
  403ef8:	call   0x4113a8
  403efd:	add    rax,rbx
  403f00:	mov    QWORD PTR [r15+0x20],rax
  403f04:	mov    eax,DWORD PTR [rsi+0x18]
  403f07:	mov    DWORD PTR [r15+0x8],eax
  403f0b:	cmp    BYTE PTR [r13+0x0],0x3a
  403f10:	jne    0x403b5d
  403f16:	mov    ebx,0x3a
  403f1b:	jmp    0x40380c
  403f20:	mov    rbp,QWORD PTR [rsi]
  403f23:	mov    rdi,QWORD PTR [rdi]
  403f26:	lea    rcx,[rip+0xfb23]        # 0x413a50
  403f2d:	call   0x40b000
  403f32:	mov    rbx,rax
  403f35:	call   QWORD PTR [rip+0x1b695]        # 0x41f5d0
  403f3b:	lea    rcx,[rax+0x60]
  403f3f:	mov    r9,rbp
  403f42:	mov    r8,rdi
  403f45:	mov    rdx,rbx
  403f48:	call   0x405050
  403f4d:	jmp    0x403b43
  403f52:	mov    QWORD PTR [r15+0x10],r12
  403f56:	add    DWORD PTR [r15],0x1
  403f5a:	jmp    0x4037eb
  403f5f:	cmp    BYTE PTR [rdi+0x1],0x0
  403f63:	jne    0x403f52
  403f65:	mov    QWORD PTR [r15+0x10],0x0
  403f6d:	jmp    0x4037eb
  403f72:	mov    eax,DWORD PTR [rsp+0x3c]
  403f76:	test   eax,eax
  403f78:	je     0x403720
  403f7e:	mov    rax,QWORD PTR [rsp+0xb8]
  403f86:	lea    rcx,[rip+0xfb4b]        # 0x413ad8
  403f8d:	mov    rdi,QWORD PTR [r15+0x20]
  403f91:	mov    rsi,QWORD PTR [rax]
  403f94:	call   0x40b000
  403f99:	mov    rbx,rax
  403f9c:	call   QWORD PTR [rip+0x1b62e]        # 0x41f5d0
  403fa2:	lea    rcx,[rax+0x60]
  403fa6:	mov    r8,rsi
  403fa9:	mov    r9,rdi
  403fac:	mov    rdx,rbx
  403faf:	call   0x405050
  403fb4:	mov    r8d,DWORD PTR [r15]
  403fb7:	jmp    0x403720
  403fbc:	mov    rax,QWORD PTR [rsp+0xb8]
  403fc4:	mov    rbp,QWORD PTR [rsi]
  403fc7:	lea    rcx,[rip+0xfae2]        # 0x413ab0
  403fce:	mov    rdi,QWORD PTR [rax]
  403fd1:	call   0x40b000
  403fd6:	mov    rbx,rax
  403fd9:	call   QWORD PTR [rip+0x1b5f1]        # 0x41f5d0
  403fdf:	lea    rcx,[rax+0x60]
  403fe3:	mov    r9,rbp
  403fe6:	mov    r8,rdi
  403fe9:	mov    rdx,rbx
  403fec:	call   0x405050
  403ff1:	jmp    0x403ef1
  403ff6:	mov    rax,QWORD PTR [rbx+0x10]
  403ffa:	cmp    QWORD PTR [rbp+0x10],rax
  403ffe:	jne    0x403ccd
  404004:	mov    eax,DWORD PTR [rbx+0x18]
  404007:	cmp    DWORD PTR [rbp+0x18],eax
  40400a:	mov    eax,0x1
  40400f:	cmovne r13d,eax
  404013:	jmp    0x403cd3
  404018:	mov    eax,r13d
  40401b:	mov    rsi,rbp
  40401e:	movzx  edi,BYTE PTR [rsp+0x44]
  404023:	test   eax,eax
  404025:	mov    rbx,QWORD PTR [rsp+0x48]
  40402a:	mov    ebp,DWORD PTR [rsp+0xb0]
  404031:	mov    r13,QWORD PTR [rsp+0xc0]
  404039:	mov    r15,QWORD PTR [rsp+0xe0]
  404041:	je     0x404176
  404047:	mov    r8d,DWORD PTR [rsp+0x3c]
  40404c:	test   r8d,r8d
  40404f:	je     0x404087
  404051:	mov    rax,QWORD PTR [rsp+0xb8]
  404059:	lea    rcx,[rip+0xfb08]        # 0x413b68
  404060:	mov    rsi,QWORD PTR [rax]
  404063:	call   0x40b000
  404068:	mov    rbx,rax
  40406b:	call   QWORD PTR [rip+0x1b55f]        # 0x41f5d0
  404071:	lea    rcx,[rax+0x60]
  404075:	mov    r9,r12
  404078:	mov    r8,rsi
  40407b:	mov    rdx,rbx
  40407e:	call   0x405050
  404083:	mov    r12,QWORD PTR [r15+0x20]
  404087:	mov    rcx,r12
  40408a:	mov    ebx,0x3f
  40408f:	call   0x4113a8
  404094:	add    r12,rax
  404097:	add    DWORD PTR [r15],0x1
  40409b:	mov    QWORD PTR [r15+0x20],r12
  40409f:	jmp    0x40380c
  4040a4:	mov    ecx,DWORD PTR [rsp+0x3c]
  4040a8:	test   ecx,ecx
  4040aa:	jne    0x404190
  4040b0:	mov    DWORD PTR [r15+0x8],ebx
  4040b4:	xor    ebx,ebx
  4040b6:	cmp    BYTE PTR [r13+0x0],0x3a
  4040bb:	setne  bl
  4040be:	lea    ebx,[rbx+rbx*4+0x3a]
  4040c2:	jmp    0x4037eb
  4040c7:	movsxd rax,DWORD PTR [r15]
  4040ca:	cmp    eax,ebp
  4040cc:	je     0x4041c7
  4040d2:	mov    rsi,QWORD PTR [rsp+0xb8]
  4040da:	lea    edx,[rax+0x1]
  4040dd:	mov    DWORD PTR [r15],edx
  4040e0:	mov    r12,QWORD PTR [rsi+rax*8]
  4040e4:	mov    QWORD PTR [r15+0x10],r12
  4040e8:	jmp    0x403c25
  4040ed:	mov    QWORD PTR [r15+0x20],0x0
  4040f5:	mov    ebx,0x57
  4040fa:	jmp    0x40380c
  4040ff:	movzx  edi,BYTE PTR [rsp+0x44]
  404104:	mov    QWORD PTR [rsp+0xc8],rbx
  40410c:	mov    ebp,DWORD PTR [rsp+0xb0]
  404113:	mov    r13,QWORD PTR [rsp+0xc0]
  40411b:	mov    rbx,QWORD PTR [rsp+0x48]
  404120:	mov    r15,QWORD PTR [rsp+0xe0]
  404128:	test   dil,dil
  40412b:	mov    rax,QWORD PTR [rsp+0xc8]
  404133:	je     0x4041ea
  404139:	cmp    DWORD PTR [rax+0x8],0x0
  40413d:	jne    0x404335
  404143:	cmp    DWORD PTR [rsp+0x3c],0x0
  404148:	jne    0x4042f3
  40414e:	mov    rdx,QWORD PTR [r15+0x20]
  404152:	xor    eax,eax
  404154:	or     rcx,0xffffffffffffffff
  404158:	mov    ebx,0x3f
  40415d:	mov    rdi,rdx
  404160:	repnz scas al,BYTE PTR es:[rdi]
  404162:	mov    rax,rcx
  404165:	not    rax
  404168:	lea    rax,[rdx+rax*1-0x1]
  40416d:	mov    QWORD PTR [r15+0x20],rax
  404171:	jmp    0x40380c
  404176:	test   rsi,rsi
  404179:	mov    rax,rsi
  40417c:	je     0x4040ed
  404182:	mov    esi,DWORD PTR [rsp+0x40]
  404186:	mov    QWORD PTR [rsp+0xc8],rax
  40418e:	jmp    0x404128
  404190:	mov    rax,QWORD PTR [rsp+0xb8]
  404198:	lea    rcx,[rip+0xf999]        # 0x413b38
  40419f:	mov    rdi,QWORD PTR [rax]
  4041a2:	call   0x40b000
  4041a7:	mov    rsi,rax
  4041aa:	call   QWORD PTR [rip+0x1b420]        # 0x41f5d0
  4041b0:	lea    rcx,[rax+0x60]
  4041b4:	mov    r9d,ebx
  4041b7:	mov    r8,rdi
  4041ba:	mov    rdx,rsi
  4041bd:	call   0x405050
  4041c2:	jmp    0x4040b0
  4041c7:	cmp    DWORD PTR [rsp+0x3c],0x0
  4041cc:	jne    0x404342
  4041d2:	mov    DWORD PTR [r15+0x8],ebx
  4041d6:	cmp    BYTE PTR [r13+0x0],0x3a
  4041db:	setne  bl
  4041de:	lea    ebx,[rbx+rbx*4+0x3a]
  4041e2:	movsx  ebx,bl
  4041e5:	jmp    0x40380c
  4041ea:	cmp    DWORD PTR [rax+0x8],0x1
  4041ee:	je     0x404245
  4041f0:	mov    QWORD PTR [r15+0x10],0x0
  4041f8:	xor    eax,eax
  4041fa:	or     rcx,0xffffffffffffffff
  4041fe:	mov    rdi,r12
  404201:	repnz scas al,BYTE PTR es:[rdi]
  404203:	cmp    QWORD PTR [rsp+0xd0],0x0
  40420c:	mov    rax,rcx
  40420f:	not    rax
  404212:	lea    rax,[r12+rax*1-0x1]
  404217:	mov    QWORD PTR [r15+0x20],rax
  40421b:	je     0x404227
  40421d:	mov    rax,QWORD PTR [rsp+0xd0]
  404225:	mov    DWORD PTR [rax],esi
  404227:	mov    rax,QWORD PTR [rsp+0xc8]
  40422f:	mov    rax,QWORD PTR [rax+0x10]
  404233:	test   rax,rax
  404236:	je     0x404264
  404238:	mov    rsi,QWORD PTR [rsp+0xc8]
  404240:	jmp    0x403bac
  404245:	movsxd rax,DWORD PTR [r15]
  404248:	cmp    ebp,eax
  40424a:	jle    0x404274
  40424c:	mov    rdi,QWORD PTR [rsp+0xb8]
  404254:	lea    edx,[rax+0x1]
  404257:	mov    DWORD PTR [r15],edx
  40425a:	mov    rax,QWORD PTR [rdi+rax*8]
  40425e:	mov    QWORD PTR [r15+0x10],rax
  404262:	jmp    0x4041f8
  404264:	mov    rax,QWORD PTR [rsp+0xc8]
  40426c:	mov    ebx,DWORD PTR [rax+0x18]
  40426f:	jmp    0x40380c
  404274:	cmp    DWORD PTR [rsp+0x3c],0x0
  404279:	je     0x4042b8
  40427b:	mov    rax,QWORD PTR [rsp+0xc8]
  404283:	lea    rcx,[rip+0xf936]        # 0x413bc0
  40428a:	mov    rdi,QWORD PTR [rax]
  40428d:	mov    rax,QWORD PTR [rsp+0xb8]
  404295:	mov    rsi,QWORD PTR [rax]
  404298:	call   0x40b000
  40429d:	mov    rbx,rax
  4042a0:	call   QWORD PTR [rip+0x1b32a]        # 0x41f5d0
  4042a6:	lea    rcx,[rax+0x60]
  4042aa:	mov    r9,rdi
  4042ad:	mov    r8,rsi
  4042b0:	mov    rdx,rbx
  4042b3:	call   0x405050
  4042b8:	mov    rdx,QWORD PTR [r15+0x20]
  4042bc:	xor    eax,eax
  4042be:	or     rcx,0xffffffffffffffff
  4042c2:	mov    rdi,rdx
  4042c5:	repnz scas al,BYTE PTR es:[rdi]
  4042c7:	mov    rax,rcx
  4042ca:	not    rax
  4042cd:	lea    rax,[rdx+rax*1-0x1]
  4042d2:	mov    QWORD PTR [r15+0x20],rax
  4042d6:	cmp    BYTE PTR [r13+0x0],0x3a
  4042db:	jne    0x403b5d
  4042e1:	jmp    0x403f16
  4042e6:	mov    rsi,rcx
  4042e9:	mov    r12d,DWORD PTR [rsp+0x44]
  4042ee:	jmp    0x403ac8
  4042f3:	mov    rax,QWORD PTR [rsp+0xc8]
  4042fb:	lea    rcx,[rip+0xf88e]        # 0x413b90
  404302:	mov    rdi,QWORD PTR [rax]
  404305:	mov    rax,QWORD PTR [rsp+0xb8]
  40430d:	mov    rsi,QWORD PTR [rax]
  404310:	call   0x40b000
  404315:	mov    rbx,rax
  404318:	call   QWORD PTR [rip+0x1b2b2]        # 0x41f5d0
  40431e:	lea    rcx,[rax+0x60]
  404322:	mov    r9,rdi
  404325:	mov    r8,rsi
  404328:	mov    rdx,rbx
  40432b:	call   0x405050
  404330:	jmp    0x40414e
  404335:	add    rbx,0x1
  404339:	mov    QWORD PTR [r15+0x10],rbx
  40433d:	jmp    0x4041f8
  404342:	mov    rax,QWORD PTR [rsp+0xb8]
  40434a:	lea    rcx,[rip+0xf7e7]        # 0x413b38
  404351:	mov    rdi,QWORD PTR [rax]
  404354:	call   0x40b000
  404359:	mov    rsi,rax
  40435c:	call   QWORD PTR [rip+0x1b26e]        # 0x41f5d0
  404362:	lea    rcx,[rax+0x60]
  404366:	mov    r9d,ebx
  404369:	mov    r8,rdi
  40436c:	mov    rdx,rsi
  40436f:	call   0x405050
  404374:	jmp    0x4041d2
  404379:	nop    DWORD PTR [rax+0x0]
  404380:	sub    rsp,0x48
  404384:	mov    eax,DWORD PTR [rip+0xdc9e]        # 0x412028
  40438a:	mov    DWORD PTR [rip+0x17cf0],eax        # 0x41c080
  404390:	mov    eax,DWORD PTR [rip+0xdc8e]        # 0x412024
  404396:	mov    DWORD PTR [rip+0x17ce8],eax        # 0x41c084
  40439c:	mov    eax,DWORD PTR [rsp+0x80]
  4043a3:	mov    DWORD PTR [rsp+0x38],eax
  4043a7:	lea    rax,[rip+0x17cd2]        # 0x41c080
  4043ae:	mov    QWORD PTR [rsp+0x30],rax
  4043b3:	mov    eax,DWORD PTR [rsp+0x78]
  4043b7:	mov    DWORD PTR [rsp+0x28],eax
  4043bb:	mov    rax,QWORD PTR [rsp+0x70]
  4043c0:	mov    QWORD PTR [rsp+0x20],rax
  4043c5:	call   0x403420
  4043ca:	mov    edx,DWORD PTR [rip+0x17cb0]        # 0x41c080
  4043d0:	mov    DWORD PTR [rip+0xdc52],edx        # 0x412028
  4043d6:	mov    rdx,QWORD PTR [rip+0x17cb3]        # 0x41c090
  4043dd:	mov    QWORD PTR [rip+0x1a324],rdx        # 0x41e708
  4043e4:	mov    edx,DWORD PTR [rip+0x17c9e]        # 0x41c088
  4043ea:	mov    DWORD PTR [rip+0xdc30],edx        # 0x412020
  4043f0:	add    rsp,0x48
  4043f4:	ret    
  4043f5:	nop
  4043f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404400:	sub    rsp,0x48
  404404:	xor    r9d,r9d
  404407:	mov    DWORD PTR [rsp+0x30],0x1
  40440f:	mov    DWORD PTR [rsp+0x28],0x0
  404417:	mov    QWORD PTR [rsp+0x20],0x0
  404420:	call   0x404380
  404425:	add    rsp,0x48
  404429:	ret    
  40442a:	nop
  40442b:	nop
  40442c:	nop
  40442d:	nop
  40442e:	nop
  40442f:	nop
  404430:	sub    rsp,0x48
  404434:	mov    rax,QWORD PTR [rsp+0x70]
  404439:	mov    DWORD PTR [rsp+0x30],0x0
  404441:	mov    DWORD PTR [rsp+0x28],0x0
  404449:	mov    QWORD PTR [rsp+0x20],rax
  40444e:	call   0x404380
  404453:	add    rsp,0x48
  404457:	ret    
  404458:	nop    DWORD PTR [rax+rax*1+0x0]
  404460:	sub    rsp,0x48
  404464:	mov    rax,QWORD PTR [rsp+0x78]
  404469:	mov    DWORD PTR [rsp+0x38],0x0
  404471:	mov    DWORD PTR [rsp+0x28],0x0
  404479:	mov    QWORD PTR [rsp+0x30],rax
  40447e:	mov    rax,QWORD PTR [rsp+0x70]
  404483:	mov    QWORD PTR [rsp+0x20],rax
  404488:	call   0x403420
  40448d:	add    rsp,0x48
  404491:	ret    
  404492:	nop    DWORD PTR [rax+0x0]
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	sub    rsp,0x48
  4044a4:	mov    rax,QWORD PTR [rsp+0x70]
  4044a9:	mov    DWORD PTR [rsp+0x30],0x0
  4044b1:	mov    DWORD PTR [rsp+0x28],0x1
  4044b9:	mov    QWORD PTR [rsp+0x20],rax
  4044be:	call   0x404380
  4044c3:	add    rsp,0x48
  4044c7:	ret    
  4044c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044d0:	sub    rsp,0x48
  4044d4:	mov    rax,QWORD PTR [rsp+0x78]
  4044d9:	mov    DWORD PTR [rsp+0x38],0x0
  4044e1:	mov    DWORD PTR [rsp+0x28],0x1
  4044e9:	mov    QWORD PTR [rsp+0x30],rax
  4044ee:	mov    rax,QWORD PTR [rsp+0x70]
  4044f3:	mov    QWORD PTR [rsp+0x20],rax
  4044f8:	call   0x403420
  4044fd:	add    rsp,0x48
  404501:	ret    
  404502:	nop
  404503:	nop
  404504:	nop
  404505:	nop
  404506:	nop
  404507:	nop
  404508:	nop
  404509:	nop
  40450a:	nop
  40450b:	nop
  40450c:	nop
  40450d:	nop
  40450e:	nop
  40450f:	nop
  404510:	push   r13
  404512:	push   r12
  404514:	push   rbp
  404515:	push   rdi
  404516:	push   rsi
  404517:	push   rbx
  404518:	sub    rsp,0x38
  40451c:	test   rdx,rdx
  40451f:	mov    r13,rcx
  404522:	mov    rdi,rdx
  404525:	mov    rbp,r8
  404528:	mov    rsi,r9
  40452b:	je     0x404600
  404531:	lea    rax,[rip+0x17b88]        # 0x41c0c0
  404538:	test   rsi,rsi
  40453b:	cmove  rsi,rax
  40453f:	mov    rcx,rsi
  404542:	call   0x404620
  404547:	test   eax,eax
  404549:	jne    0x4045a0
  40454b:	xor    ebx,ebx
  40454d:	test   rbp,rbp
  404550:	lea    r12,[rsp+0x2e]
  404555:	jne    0x40456f
  404557:	jmp    0x4045c0
  404559:	nop    DWORD PTR [rax+0x0]
  404560:	add    rbx,0x1
  404564:	cmp    rax,0xfffffffffffffffe
  404568:	jne    0x4045d4
  40456a:	cmp    rbp,rbx
  40456d:	je     0x4045c0
  40456f:	lea    rdx,[rdi+rbx*1]
  404573:	mov    r9,rsi
  404576:	mov    r8d,0x1
  40457c:	mov    rcx,r12
  40457f:	call   0x40c700
  404584:	cmp    rax,0xffffffffffffffff
  404588:	jne    0x404560
  40458a:	add    rsp,0x38
  40458e:	pop    rbx
  40458f:	pop    rsi
  404590:	pop    rdi
  404591:	pop    rbp
  404592:	pop    r12
  404594:	pop    r13
  404596:	ret    
  404597:	nop    WORD PTR [rax+rax*1+0x0]
  4045a0:	mov    r9,rsi
  4045a3:	mov    r8,rbp
  4045a6:	mov    rdx,rdi
  4045a9:	mov    rcx,r13
  4045ac:	call   0x40c700
  4045b1:	add    rsp,0x38
  4045b5:	pop    rbx
  4045b6:	pop    rsi
  4045b7:	pop    rdi
  4045b8:	pop    rbp
  4045b9:	pop    r12
  4045bb:	pop    r13
  4045bd:	ret    
  4045be:	xchg   ax,ax
  4045c0:	mov    rax,0xfffffffffffffffe
  4045c7:	add    rsp,0x38
  4045cb:	pop    rbx
  4045cc:	pop    rsi
  4045cd:	pop    rdi
  4045ce:	pop    rbp
  4045cf:	pop    r12
  4045d1:	pop    r13
  4045d3:	ret    
  4045d4:	test   r13,r13
  4045d7:	movzx  eax,WORD PTR [rsp+0x2e]
  4045dc:	je     0x4045e3
  4045de:	mov    WORD PTR [r13+0x0],ax
  4045e3:	test   ax,ax
  4045e6:	mov    eax,0x0
  4045eb:	cmovne rax,rbx
  4045ef:	add    rsp,0x38
  4045f3:	pop    rbx
  4045f4:	pop    rsi
  4045f5:	pop    rdi
  4045f6:	pop    rbp
  4045f7:	pop    r12
  4045f9:	pop    r13
  4045fb:	ret    
  4045fc:	nop    DWORD PTR [rax+0x0]
  404600:	mov    ebp,0x1
  404605:	lea    rdi,[rip+0xf5e4]        # 0x413bf0
  40460c:	xor    r13d,r13d
  40460f:	jmp    0x404531
  404614:	nop
  404615:	nop
  404616:	nop
  404617:	nop
  404618:	nop
  404619:	nop
  40461a:	nop
  40461b:	nop
  40461c:	nop
  40461d:	nop
  40461e:	nop
  40461f:	nop
  404620:	test   rcx,rcx
  404623:	je     0x404630
  404625:	mov    edx,DWORD PTR [rcx]
  404627:	xor    eax,eax
  404629:	test   edx,edx
  40462b:	sete   al
  40462e:	ret    
  40462f:	nop
  404630:	mov    eax,0x1
  404635:	ret    
  404636:	nop
  404637:	nop
  404638:	nop
  404639:	nop
  40463a:	nop
  40463b:	nop
  40463c:	nop
  40463d:	nop
  40463e:	nop
  40463f:	nop
  404640:	test   r8,r8
  404643:	mov    r9d,edx
  404646:	je     0x404667
  404648:	test   cl,0x3
  40464b:	je     0x404674
  40464d:	cmp    BYTE PTR [rcx],dl
  40464f:	jne    0x40465d
  404651:	jmp    0x404670
  404653:	test   cl,0x3
  404656:	je     0x404674
  404658:	cmp    BYTE PTR [rcx],r9b
  40465b:	je     0x404670
  40465d:	add    rcx,0x1
  404661:	sub    r8,0x1
  404665:	jne    0x404653
  404667:	xor    eax,eax
  404669:	ret    
  40466a:	nop    WORD PTR [rax+rax*1+0x0]
  404670:	mov    rax,rcx
  404673:	ret    
  404674:	movzx  eax,dl
  404677:	mov    r11d,eax
  40467a:	shl    r11d,0x8
  40467e:	or     r11d,eax
  404681:	mov    eax,r11d
  404684:	shl    eax,0x10
  404687:	or     r11d,eax
  40468a:	cmp    r8,0x3
  40468e:	ja     0x4046a0
  404690:	jmp    0x4046b8
  404692:	sub    r8,0x4
  404696:	add    rcx,0x4
  40469a:	cmp    r8,0x3
  40469e:	jbe    0x4046e0
  4046a0:	mov    eax,DWORD PTR [rcx]
  4046a2:	xor    eax,r11d
  4046a5:	lea    r10d,[rax-0x1010101]
  4046ac:	not    eax
  4046ae:	and    eax,r10d
  4046b1:	test   eax,0x80808080
  4046b6:	je     0x404692
  4046b8:	add    r8,rcx
  4046bb:	cmp    BYTE PTR [rcx],dl
  4046bd:	lea    rax,[rcx+0x1]
  4046c1:	jne    0x4046cf
  4046c3:	jmp    0x404670
  4046c5:	add    rax,0x1
  4046c9:	cmp    BYTE PTR [rax-0x1],r9b
  4046cd:	je     0x404670
  4046cf:	cmp    rax,r8
  4046d2:	mov    rcx,rax
  4046d5:	jne    0x4046c5
  4046d7:	xor    eax,eax
  4046d9:	ret    
  4046da:	nop    WORD PTR [rax+rax*1+0x0]
  4046e0:	test   r8,r8
  4046e3:	jne    0x4046b8
  4046e5:	jmp    0x404667
  4046e7:	nop
  4046e8:	nop
  4046e9:	nop
  4046ea:	nop
  4046eb:	nop
  4046ec:	nop
  4046ed:	nop
  4046ee:	nop
  4046ef:	nop
  4046f0:	push   rbx
  4046f1:	sub    rsp,0x20
  4046f5:	mov    ebx,ecx
  4046f7:	call   0x40a270
  4046fc:	mov    rax,QWORD PTR [rip+0x1af25]        # 0x41f628
  404703:	mov    ecx,ebx
  404705:	add    rsp,0x20
  404709:	pop    rbx
  40470a:	rex.W jmp rax
  40470d:	nop
  40470e:	nop
  40470f:	nop
  404710:	push   r15
  404712:	push   r14
  404714:	push   r13
  404716:	push   r12
  404718:	push   rbp
  404719:	push   rdi
  40471a:	push   rsi
  40471b:	push   rbx
  40471c:	sub    rsp,0x28
  404720:	xor    edi,edi
  404722:	test   rdx,rdx
  404725:	mov    r13,rcx
  404728:	mov    rsi,rdx
  40472b:	mov    r12,r8
  40472e:	mov    QWORD PTR [rsp+0x88],r9
  404736:	jne    0x40474a
  404738:	jmp    0x404772
  40473a:	nop    WORD PTR [rax+rax*1+0x0]
  404740:	je     0x404792
  404742:	mov    rsi,rbx
  404745:	cmp    rdi,rsi
  404748:	jae    0x404772
  40474a:	lea    rbx,[rsi+rdi*1]
  40474e:	mov    rdx,r12
  404751:	shr    rbx,1
  404754:	mov    rbp,rbx
  404757:	shl    rbp,0x4
  40475b:	mov    rcx,QWORD PTR [r13+rbp*1+0x0]
  404760:	call   0x4113c0
  404765:	test   eax,eax
  404767:	jns    0x404740
  404769:	lea    rdi,[rbx+0x1]
  40476d:	cmp    rdi,rsi
  404770:	jb     0x40474a
  404772:	mov    rax,QWORD PTR [rsp+0x88]
  40477a:	mov    QWORD PTR [rax],rdi
  40477d:	mov    QWORD PTR [rax+0x8],rsi
  404781:	add    rsp,0x28
  404785:	pop    rbx
  404786:	pop    rsi
  404787:	pop    rdi
  404788:	pop    rbp
  404789:	pop    r12
  40478b:	pop    r13
  40478d:	pop    r14
  40478f:	pop    r15
  404791:	ret    
  404792:	cmp    rdi,rbx
  404795:	jae    0x4047c3
  404797:	lea    r14,[r13+rbp*1-0x10]
  40479c:	mov    rbp,rbx
  40479f:	jmp    0x4047ad
  4047a1:	sub    r14,0x10
  4047a5:	cmp    r15,rdi
  4047a8:	mov    rbp,r15
  4047ab:	jbe    0x4047c3
  4047ad:	mov    rcx,QWORD PTR [r14]
  4047b0:	mov    rdx,r12
  4047b3:	lea    r15,[rbp-0x1]
  4047b7:	call   0x4113c0
  4047bc:	test   eax,eax
  4047be:	jns    0x4047a1
  4047c0:	mov    rdi,rbp
  4047c3:	lea    rbp,[rbx+0x1]
  4047c7:	mov    rax,rbp
  4047ca:	shl    rax,0x4
  4047ce:	add    r13,rax
  4047d1:	cmp    rsi,rbx
  4047d4:	ja     0x4047e4
  4047d6:	jmp    0x404772
  4047d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4047e0:	add    rbp,0x1
  4047e4:	cmp    rbp,rsi
  4047e7:	je     0x404772
  4047e9:	mov    rcx,QWORD PTR [r13+0x0]
  4047ed:	mov    rdx,r12
  4047f0:	add    r13,0x10
  4047f4:	call   0x4113c0
  4047f9:	test   eax,eax
  4047fb:	jle    0x4047e0
  4047fd:	mov    rsi,rbp
  404800:	jmp    0x404772
  404805:	nop
  404806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404810:	push   r15
  404812:	push   r14
  404814:	push   r13
  404816:	push   r12
  404818:	push   rbp
  404819:	push   rdi
  40481a:	push   rsi
  40481b:	push   rbx
  40481c:	sub    rsp,0x1a8
  404823:	mov    ebx,ecx
  404825:	mov    rdi,rdx
  404828:	call   0x4113d8
  40482d:	test   rax,rax
  404830:	mov    rbp,rax
  404833:	je     0x404850
  404835:	mov    rax,rbp
  404838:	add    rsp,0x1a8
  40483f:	pop    rbx
  404840:	pop    rsi
  404841:	pop    rdi
  404842:	pop    rbp
  404843:	pop    r12
  404845:	pop    r13
  404847:	pop    r14
  404849:	pop    r15
  40484b:	ret    
  40484c:	nop    DWORD PTR [rax+0x0]
  404850:	mov    rcx,rdi
  404853:	call   0x4113a8
  404858:	cmp    rax,0x3f
  40485c:	ja     0x404835
  40485e:	movzx  eax,BYTE PTR [rdi]
  404861:	lea    rsi,[rsp+0x60]
  404866:	mov    r9,rdi
  404869:	mov    rdx,rsi
  40486c:	cmp    al,0x2e
  40486e:	jne    0x404884
  404870:	jmp    0x404888
  404872:	add    r9,0x1
  404876:	mov    BYTE PTR [rdx],al
  404878:	add    rdx,0x1
  40487c:	movzx  eax,BYTE PTR [r9]
  404880:	cmp    al,0x2e
  404882:	je     0x404888
  404884:	test   al,al
  404886:	jne    0x404872
  404888:	cmp    al,0x2e
  40488a:	jne    0x40489f
  40488c:	jmp    0x404950
  404891:	add    r9,0x1
  404895:	mov    BYTE PTR [rdx],al
  404897:	add    rdx,0x1
  40489b:	movzx  eax,BYTE PTR [r9]
  40489f:	test   al,al
  4048a1:	jne    0x404891
  4048a3:	mov    BYTE PTR [rdx],0x0
  4048a6:	mov    rcx,rsi
  4048a9:	mov    rdx,rdi
  4048ac:	call   0x4113c0
  4048b1:	test   eax,eax
  4048b3:	je     0x4048d0
  4048b5:	mov    rdx,rsi
  4048b8:	mov    ecx,ebx
  4048ba:	call   0x4113d8
  4048bf:	test   rax,rax
  4048c2:	mov    rbp,rax
  4048c5:	jne    0x404835
  4048cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4048d0:	lea    rdi,[rsp+0x120]
  4048d8:	lea    rcx,[rip+0x10be1]        # 0x4154c0
  4048df:	mov    edx,0xa4
  4048e4:	mov    r8,rsi
  4048e7:	mov    r9,rdi
  4048ea:	call   0x404710
  4048ef:	mov    rbp,QWORD PTR [rsp+0x120]
  4048f7:	lea    rdx,[rip+0x10bc2]        # 0x4154c0
  4048fe:	mov    rax,rbp
  404901:	shl    rax,0x4
  404905:	cmp    rbp,QWORD PTR [rsp+0x128]
  40490d:	lea    r12,[rdx+rax*1+0x8]
  404912:	jb     0x404932
  404914:	jmp    0x404971
  404916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404920:	add    rbp,0x1
  404924:	add    r12,0x10
  404928:	cmp    rbp,QWORD PTR [rsp+0x128]
  404930:	jae    0x404971
  404932:	mov    rdx,QWORD PTR [r12]
  404936:	mov    ecx,ebx
  404938:	call   0x4113d8
  40493d:	test   rax,rax
  404940:	je     0x404920
  404942:	mov    rbp,rax
  404945:	jmp    0x404835
  40494a:	nop    WORD PTR [rax+rax*1+0x0]
  404950:	add    r9,0x1
  404954:	movzx  eax,BYTE PTR [r9]
  404958:	test   al,0xbf
  40495a:	je     0x40489f
  404960:	add    r9,0x1
  404964:	movzx  eax,BYTE PTR [r9]
  404968:	test   al,0xbf
  40496a:	jne    0x404950
  40496c:	jmp    0x40489f
  404971:	mov    edx,0x5f
  404976:	mov    rcx,rsi
  404979:	call   0x4113c8
  40497e:	test   rax,rax
  404981:	mov    rbp,rax
  404984:	je     0x404835
  40498a:	lea    r13,[rax+0x1]
  40498e:	mov    edx,0x40
  404993:	mov    rcx,r13
  404996:	call   0x4113c8
  40499b:	test   rax,rax
  40499e:	mov    r12,rax
  4049a1:	je     0x404b8b
  4049a7:	lea    r14,[rsp+0xa0]
  4049af:	sub    rbp,rsi
  4049b2:	mov    rdx,rsi
  4049b5:	mov    r8,rbp
  4049b8:	lea    rsi,[rsp+0xe0]
  4049c0:	mov    rcx,r14
  4049c3:	call   0x411408
  4049c8:	lea    rcx,[r14+rbp*1]
  4049cc:	mov    rdx,r12
  4049cf:	sub    r12,r13
  4049d2:	call   0x4113b8
  4049d7:	mov    r8,r12
  4049da:	mov    rdx,r13
  4049dd:	mov    rcx,rsi
  4049e0:	call   0x411408
  4049e5:	lea    r9,[rsp+0x40]
  4049ea:	lea    rcx,[rip+0x10acf]        # 0x4154c0
  4049f1:	mov    r8,r14
  4049f4:	mov    edx,0xa4
  4049f9:	mov    BYTE PTR [rsp+r12*1+0xe0],0x0
  404a02:	call   0x404710
  404a07:	mov    rax,QWORD PTR [rsp+0x48]
  404a0c:	cmp    QWORD PTR [rsp+0x40],rax
  404a11:	jae    0x404a83
  404a13:	lea    r9,[rsp+0x50]
  404a18:	lea    rcx,[rip+0xf9a1]        # 0x4143c0
  404a1f:	mov    r8,rsi
  404a22:	mov    edx,0x8f
  404a27:	call   0x404710
  404a2c:	mov    rbp,QWORD PTR [rsp+0x50]
  404a31:	mov    rax,QWORD PTR [rsp+0x58]
  404a36:	cmp    rbp,rax
  404a39:	jb     0x404a90
  404a3b:	mov    rsi,QWORD PTR [rsp+0x40]
  404a40:	cmp    rsi,QWORD PTR [rsp+0x48]
  404a45:	jae    0x404a83
  404a47:	mov    rax,rsi
  404a4a:	lea    rdx,[rip+0x10a6f]        # 0x4154c0
  404a51:	shl    rax,0x4
  404a55:	lea    rdi,[rdx+rax*1+0x8]
  404a5a:	jmp    0x404a6f
  404a5c:	nop    DWORD PTR [rax+0x0]
  404a60:	add    rsi,0x1
  404a64:	add    rdi,0x10
  404a68:	cmp    rsi,QWORD PTR [rsp+0x48]
  404a6d:	jae    0x404a83
  404a6f:	mov    rdx,QWORD PTR [rdi]
  404a72:	mov    ecx,ebx
  404a74:	call   0x4113d8
  404a79:	test   rax,rax
  404a7c:	je     0x404a60
  404a7e:	jmp    0x404942
  404a83:	xor    ebp,ebp
  404a85:	jmp    0x404835
  404a8a:	nop    WORD PTR [rax+rax*1+0x0]
  404a90:	mov    rsi,QWORD PTR [rsp+0x40]
  404a95:	cmp    rsi,QWORD PTR [rsp+0x48]
  404a9a:	mov    QWORD PTR [rsp+0x30],rsi
  404a9f:	jae    0x404a83
  404aa1:	mov    rdx,rsi
  404aa4:	lea    rcx,[rip+0x10a15]        # 0x4154c0
  404aab:	shl    rdx,0x4
  404aaf:	lea    rsi,[rcx+rdx*1+0x8]
  404ab4:	mov    QWORD PTR [rsp+0x38],rsi
  404ab9:	cmp    rbp,rax
  404abc:	jae    0x404b60
  404ac2:	mov    rax,QWORD PTR [rsp+0x38]
  404ac7:	lea    rsi,[rip+0xf8f2]        # 0x4143c0
  404ace:	mov    rax,QWORD PTR [rax]
  404ad1:	mov    QWORD PTR [rsp+0x28],rax
  404ad6:	mov    rax,rbp
  404ad9:	shl    rax,0x4
  404add:	lea    r13,[rsi+rax*1+0x8]
  404ae2:	jmp    0x404af3
  404ae4:	add    rbp,0x1
  404ae8:	add    r13,0x10
  404aec:	cmp    rbp,QWORD PTR [rsp+0x58]
  404af1:	jae    0x404b60
  404af3:	mov    rcx,QWORD PTR [rsp+0x28]
  404af8:	call   0x4113a8
  404afd:	mov    r12,QWORD PTR [r13+0x0]
  404b01:	mov    rsi,rax
  404b04:	lea    r14,[rsi+0x1]
  404b08:	mov    rcx,r12
  404b0b:	call   0x4113a8
  404b10:	lea    r15,[rax+0x1]
  404b14:	lea    rax,[r14+r15*1]
  404b18:	cmp    rax,0x80
  404b1e:	ja     0x404b9d
  404b20:	mov    rdx,QWORD PTR [rsp+0x28]
  404b25:	mov    r8,rsi
  404b28:	mov    rcx,rdi
  404b2b:	call   0x411408
  404b30:	lea    rcx,[rdi+r14*1]
  404b34:	mov    r8,r15
  404b37:	mov    rdx,r12
  404b3a:	mov    BYTE PTR [rsp+rsi*1+0x120],0x5f
  404b42:	call   0x411408
  404b47:	mov    rdx,rdi
  404b4a:	mov    ecx,ebx
  404b4c:	call   0x4113d8
  404b51:	test   rax,rax
  404b54:	je     0x404ae4
  404b56:	jmp    0x404942
  404b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b60:	add    QWORD PTR [rsp+0x30],0x1
  404b66:	add    QWORD PTR [rsp+0x38],0x10
  404b6c:	mov    rax,QWORD PTR [rsp+0x30]
  404b71:	cmp    rax,QWORD PTR [rsp+0x48]
  404b76:	jae    0x404a3b
  404b7c:	mov    rax,QWORD PTR [rsp+0x58]
  404b81:	mov    rbp,QWORD PTR [rsp+0x50]
  404b86:	jmp    0x404ab9
  404b8b:	mov    rcx,r13
  404b8e:	call   0x4113a8
  404b93:	lea    r12,[r13+rax*1+0x0]
  404b98:	jmp    0x4049a7
  404b9d:	call   0x4114a0
  404ba2:	nop
  404ba3:	nop    DWORD PTR [rax]
  404ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bb0:	sub    rsp,0x28
  404bb4:	cmp    ecx,0x6c1
  404bba:	je     0x404bc5
  404bbc:	add    rsp,0x28
  404bc0:	jmp    0x404810
  404bc5:	test   rdx,rdx
  404bc8:	je     0x404be3
  404bca:	lea    rcx,[rip+0xd46f]        # 0x412040
  404bd1:	mov    r8d,0x3f
  404bd7:	mov    BYTE PTR [rip+0xd4a1],0x0        # 0x41207f
  404bde:	call   0x411398
  404be3:	lea    rax,[rip+0xd456]        # 0x412040
  404bea:	add    rsp,0x28
  404bee:	ret    
  404bef:	nop
  404bf0:	push   r13
  404bf2:	push   r12
  404bf4:	push   rbp
  404bf5:	push   rdi
  404bf6:	push   rsi
  404bf7:	push   rbx
  404bf8:	sub    rsp,0x28
  404bfc:	test   rdx,rdx
  404bff:	mov    esi,ecx
  404c01:	mov    rbx,rdx
  404c04:	je     0x404d20
  404c0a:	cmp    BYTE PTR [rdx],0x0
  404c0d:	je     0x404cb0
  404c13:	test   ecx,ecx
  404c15:	jne    0x404d20
  404c1b:	mov    edx,0x2e
  404c20:	mov    rcx,rbx
  404c23:	call   0x4113c8
  404c28:	test   rax,rax
  404c2b:	je     0x404d20
  404c31:	xor    edx,edx
  404c33:	xor    ecx,ecx
  404c35:	call   0x4113d8
  404c3a:	test   rax,rax
  404c3d:	je     0x404ec0
  404c43:	mov    rcx,rax
  404c46:	call   0x411368
  404c4b:	test   rax,rax
  404c4e:	mov    rbp,rax
  404c51:	je     0x404ec0
  404c57:	xor    ecx,ecx
  404c59:	mov    rdx,rbx
  404c5c:	call   0x404810
  404c61:	test   rax,rax
  404c64:	je     0x404f20
  404c6a:	xor    edx,edx
  404c6c:	mov    ecx,0x2
  404c71:	lea    rdi,[rip+0xefce]        # 0x413c46
  404c78:	call   0x4113d8
  404c7d:	mov    ecx,0x2
  404c82:	mov    rsi,rax
  404c85:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c87:	je     0x404f10
  404c8d:	mov    rcx,rbp
  404c90:	call   0x411458
  404c95:	xor    edx,edx
  404c97:	xor    ecx,ecx
  404c99:	add    rsp,0x28
  404c9d:	pop    rbx
  404c9e:	pop    rsi
  404c9f:	pop    rdi
  404ca0:	pop    rbp
  404ca1:	pop    r12
  404ca3:	pop    r13
  404ca5:	jmp    0x4113d8
  404caa:	nop    WORD PTR [rax+rax*1+0x0]
  404cb0:	test   ecx,ecx
  404cb2:	je     0x404d50
  404cb8:	cmp    ecx,0x3
  404cbb:	lea    rdx,[rip+0xef52]        # 0x413c14
  404cc2:	je     0x404cf0
  404cc4:	jle    0x404d25
  404cc6:	cmp    ecx,0x5
  404cc9:	lea    rdx,[rip+0xef5b]        # 0x413c2b
  404cd0:	je     0x404cf0
  404cd2:	lea    rdx,[rip+0xef47]        # 0x413c20
  404cd9:	jl     0x404cf0
  404cdb:	cmp    ecx,0x6c1
  404ce1:	lea    rdx,[rip+0xef52]        # 0x413c3a
  404ce8:	jne    0x404d3d
  404cea:	nop    WORD PTR [rax+rax*1+0x0]
  404cf0:	mov    ecx,esi
  404cf2:	call   0x407430
  404cf7:	test   rax,rax
  404cfa:	je     0x404f40
  404d00:	mov    rdx,rax
  404d03:	mov    ecx,esi
  404d05:	add    rsp,0x28
  404d09:	pop    rbx
  404d0a:	pop    rsi
  404d0b:	pop    rdi
  404d0c:	pop    rbp
  404d0d:	pop    r12
  404d0f:	pop    r13
  404d11:	jmp    0x404bb0
  404d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d20:	mov    rdx,rbx
  404d23:	jmp    0x404d03
  404d25:	cmp    ecx,0x1
  404d28:	lea    rdx,[rip+0xeed1]        # 0x413c00
  404d2f:	je     0x404cf0
  404d31:	cmp    ecx,0x2
  404d34:	lea    rdx,[rip+0xeed0]        # 0x413c0b
  404d3b:	je     0x404cf0
  404d3d:	lea    rdx,[rip+0xeeef]        # 0x413c33
  404d44:	jmp    0x404cf0
  404d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d50:	xor    edx,edx
  404d52:	xor    ecx,ecx
  404d54:	call   0x4113d8
  404d59:	test   rax,rax
  404d5c:	je     0x404ec0
  404d62:	mov    rcx,rax
  404d65:	call   0x411368
  404d6a:	test   rax,rax
  404d6d:	mov    r12,rax
  404d70:	je     0x404ec0
  404d76:	lea    rdx,[rip+0xee8e]        # 0x413c0b
  404d7d:	mov    ecx,0x2
  404d82:	call   0x407430
  404d87:	test   rax,rax
  404d8a:	mov    rbp,rax
  404d8d:	je     0x404f4a
  404d93:	xor    ecx,ecx
  404d95:	mov    rdx,rbp
  404d98:	call   0x404810
  404d9d:	test   rax,rax
  404da0:	je     0x404ea0
  404da6:	mov    edx,0x2e
  404dab:	mov    rcx,rbp
  404dae:	call   0x4113c8
  404db3:	test   rax,rax
  404db6:	je     0x404ddb
  404db8:	xor    edx,edx
  404dba:	mov    ecx,0x2
  404dbf:	lea    rdi,[rip+0xee80]        # 0x413c46
  404dc6:	call   0x4113d8
  404dcb:	mov    ecx,0x2
  404dd0:	mov    rsi,rax
  404dd3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404dd5:	je     0x404ea0
  404ddb:	lea    rsi,[rip+0xee6e]        # 0x413c50
  404de2:	lea    r13,[rip+0xee7b]        # 0x413c64
  404de9:	jmp    0x404e40
  404deb:	nop    DWORD PTR [rax+rax*1+0x0]
  404df0:	cmp    ebx,0x5
  404df3:	je     0x404ef0
  404df9:	jl     0x404ee0
  404dff:	cmp    ebx,0x6c1
  404e05:	jne    0x404ed0
  404e0b:	lea    rdx,[rip+0xee28]        # 0x413c3a
  404e12:	mov    ecx,0x6c1
  404e17:	call   0x407430
  404e1c:	test   rax,rax
  404e1f:	mov    rdi,rax
  404e22:	je     0x404f30
  404e28:	mov    rdx,rdi
  404e2b:	mov    ecx,ebx
  404e2d:	call   0x404bb0
  404e32:	test   rax,rax
  404e35:	je     0x404ea0
  404e37:	add    rsi,0x4
  404e3b:	cmp    rsi,r13
  404e3e:	je     0x404e98
  404e40:	mov    ebx,DWORD PTR [rsi]
  404e42:	cmp    ebx,0x3
  404e45:	je     0x404f00
  404e4b:	jg     0x404df0
  404e4d:	cmp    ebx,0x1
  404e50:	lea    rdx,[rip+0xeda9]        # 0x413c00
  404e57:	je     0x404e65
  404e59:	cmp    ebx,0x2
  404e5c:	lea    rdx,[rip+0xeda8]        # 0x413c0b
  404e63:	jne    0x404ed0
  404e65:	mov    ecx,ebx
  404e67:	call   0x407430
  404e6c:	test   rax,rax
  404e6f:	mov    rdi,rax
  404e72:	je     0x404f30
  404e78:	mov    rdx,rbp
  404e7b:	mov    rcx,rdi
  404e7e:	call   0x4113c0
  404e83:	test   eax,eax
  404e85:	jne    0x404e28
  404e87:	cmp    ebx,0x6c1
  404e8d:	je     0x404e28
  404e8f:	add    rsi,0x4
  404e93:	cmp    rsi,r13
  404e96:	jne    0x404e40
  404e98:	mov    rcx,r12
  404e9b:	jmp    0x404c90
  404ea0:	cmp    BYTE PTR [r12],0x0
  404ea5:	je     0x404eb1
  404ea7:	mov    rdx,r12
  404eaa:	xor    ecx,ecx
  404eac:	call   0x4113d8
  404eb1:	mov    rcx,r12
  404eb4:	call   0x411458
  404eb9:	nop    DWORD PTR [rax+0x0]
  404ec0:	xor    eax,eax
  404ec2:	add    rsp,0x28
  404ec6:	pop    rbx
  404ec7:	pop    rsi
  404ec8:	pop    rdi
  404ec9:	pop    rbp
  404eca:	pop    r12
  404ecc:	pop    r13
  404ece:	ret    
  404ecf:	nop
  404ed0:	lea    rdx,[rip+0xed5c]        # 0x413c33
  404ed7:	jmp    0x404e65
  404ed9:	nop    DWORD PTR [rax+0x0]
  404ee0:	lea    rdx,[rip+0xed39]        # 0x413c20
  404ee7:	jmp    0x404e65
  404eec:	nop    DWORD PTR [rax+0x0]
  404ef0:	lea    rdx,[rip+0xed34]        # 0x413c2b
  404ef7:	jmp    0x404e65
  404efc:	nop    DWORD PTR [rax+0x0]
  404f00:	lea    rdx,[rip+0xed0d]        # 0x413c14
  404f07:	jmp    0x404e65
  404f0c:	nop    DWORD PTR [rax+0x0]
  404f10:	cmp    BYTE PTR [rbp+0x0],0x0
  404f14:	je     0x404f20
  404f16:	mov    rdx,rbp
  404f19:	xor    ecx,ecx
  404f1b:	call   0x4113d8
  404f20:	mov    rcx,rbp
  404f23:	call   0x411458
  404f28:	jmp    0x404ec0
  404f2a:	nop    WORD PTR [rax+rax*1+0x0]
  404f30:	call   0x4074a0
  404f35:	mov    rdi,rax
  404f38:	jmp    0x404e78
  404f3d:	nop    DWORD PTR [rax]
  404f40:	call   0x4074a0
  404f45:	jmp    0x404d00
  404f4a:	call   0x4074a0
  404f4f:	mov    rbp,rax
  404f52:	jmp    0x404d93
  404f57:	nop
  404f58:	nop
  404f59:	nop
  404f5a:	nop
  404f5b:	nop
  404f5c:	nop
  404f5d:	nop
  404f5e:	nop
  404f5f:	nop
  404f60:	push   rdi
  404f61:	push   rsi
  404f62:	push   rbx
  404f63:	sub    rsp,0x20
  404f67:	mov    rbx,rcx
  404f6a:	mov    rsi,rdx
  404f6d:	mov    rdi,r8
  404f70:	call   0x411480
  404f75:	test   eax,eax
  404f77:	jne    0x404fa0
  404f79:	xor    ecx,ecx
  404f7b:	call   QWORD PTR [rip+0x1a5cf]        # 0x41f550
  404f81:	mov    rdx,rsi
  404f84:	mov    r8,rdi
  404f87:	mov    rcx,rbx
  404f8a:	call   0x40cb40
  404f8f:	cmp    eax,0xffffffff
  404f92:	mov    esi,eax
  404f94:	je     0x404fb5
  404f96:	mov    eax,esi
  404f98:	add    rsp,0x20
  404f9c:	pop    rbx
  404f9d:	pop    rsi
  404f9e:	pop    rdi
  404f9f:	ret    
  404fa0:	mov    r8,rdi
  404fa3:	mov    rdx,rsi
  404fa6:	mov    rcx,rbx
  404fa9:	add    rsp,0x20
  404fad:	pop    rbx
  404fae:	pop    rsi
  404faf:	pop    rdi
  404fb0:	jmp    0x40cb40
  404fb5:	call   QWORD PTR [rip+0x1a4fd]        # 0x41f4b8
  404fbb:	cmp    eax,0xe8
  404fc0:	jne    0x404f96
  404fc2:	mov    rcx,rbx
  404fc5:	call   0x411480
  404fca:	test   eax,eax
  404fcc:	je     0x404f96
  404fce:	mov    rcx,rbx
  404fd1:	call   0x411360
  404fd6:	test   eax,eax
  404fd8:	js     0x404f96
  404fda:	mov    ecx,eax
  404fdc:	call   0x4046f0
  404fe1:	mov    rcx,rax
  404fe4:	call   QWORD PTR [rip+0x1a4c6]        # 0x41f4b0
  404fea:	cmp    eax,0x3
  404fed:	jne    0x404f96
  404fef:	mov    ecx,0xd
  404ff4:	call   0x40a2a0
  404ff9:	call   QWORD PTR [rip+0x1a611]        # 0x41f610
  404fff:	mov    DWORD PTR [rax],0x20
  405005:	jmp    0x404f96
  405007:	nop    WORD PTR [rax+rax*1+0x0]
  405010:	push   rsi
  405011:	push   rbx
  405012:	sub    rsp,0x38
  405016:	lea    rbx,[rsp+0x58]
  40501b:	mov    rsi,rcx
  40501e:	mov    QWORD PTR [rsp+0x58],rdx
  405023:	mov    QWORD PTR [rsp+0x60],r8
  405028:	mov    QWORD PTR [rsp+0x68],r9
  40502d:	mov    QWORD PTR [rsp+0x28],rbx
  405032:	call   QWORD PTR [rip+0x1a598]        # 0x41f5d0
  405038:	lea    rcx,[rax+0x30]
  40503c:	mov    r8,rbx
  40503f:	mov    rdx,rsi
  405042:	call   0x404f60
  405047:	add    rsp,0x38
  40504b:	pop    rbx
  40504c:	pop    rsi
  40504d:	ret    
  40504e:	xchg   ax,ax
  405050:	sub    rsp,0x38
  405054:	mov    QWORD PTR [rsp+0x50],r8
  405059:	lea    r8,[rsp+0x50]
  40505e:	mov    QWORD PTR [rsp+0x58],r9
  405063:	mov    QWORD PTR [rsp+0x28],r8
  405068:	call   0x404f60
  40506d:	add    rsp,0x38
  405071:	ret    
  405072:	nop    DWORD PTR [rax+0x0]
  405076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405080:	push   rsi
  405081:	push   rbx
  405082:	sub    rsp,0x28
  405086:	mov    rbx,rcx
  405089:	mov    rsi,rdx
  40508c:	call   QWORD PTR [rip+0x1a53e]        # 0x41f5d0
  405092:	lea    rcx,[rax+0x30]
  405096:	mov    r8,rsi
  405099:	mov    rdx,rbx
  40509c:	add    rsp,0x28
  4050a0:	pop    rbx
  4050a1:	pop    rsi
  4050a2:	jmp    0x404f60
  4050a7:	nop    WORD PTR [rax+rax*1+0x0]
  4050b0:	push   rsi
  4050b1:	push   rbx
  4050b2:	sub    rsp,0x28
  4050b6:	mov    esi,ecx
  4050b8:	mov    rcx,rdx
  4050bb:	mov    rbx,rdx
  4050be:	call   0x411480
  4050c3:	test   eax,eax
  4050c5:	jne    0x4050f0
  4050c7:	xor    ecx,ecx
  4050c9:	call   QWORD PTR [rip+0x1a481]        # 0x41f550
  4050cf:	mov    ecx,esi
  4050d1:	mov    rdx,rbx
  4050d4:	call   0x411468
  4050d9:	cmp    eax,0xffffffff
  4050dc:	mov    esi,eax
  4050de:	je     0x405100
  4050e0:	mov    eax,esi
  4050e2:	add    rsp,0x28
  4050e6:	pop    rbx
  4050e7:	pop    rsi
  4050e8:	ret    
  4050e9:	nop    DWORD PTR [rax+0x0]
  4050f0:	mov    rdx,rbx
  4050f3:	mov    ecx,esi
  4050f5:	add    rsp,0x28
  4050f9:	pop    rbx
  4050fa:	pop    rsi
  4050fb:	jmp    0x411468
  405100:	call   QWORD PTR [rip+0x1a3b2]        # 0x41f4b8
  405106:	cmp    eax,0xe8
  40510b:	je     0x405114
  40510d:	mov    esi,0xffffffff
  405112:	jmp    0x4050e0
  405114:	mov    rcx,rbx
  405117:	call   0x411480
  40511c:	test   eax,eax
  40511e:	je     0x40510d
  405120:	mov    rcx,rbx
  405123:	call   0x411360
  405128:	test   eax,eax
  40512a:	js     0x40510d
  40512c:	mov    ecx,eax
  40512e:	call   0x4046f0
  405133:	mov    rcx,rax
  405136:	call   QWORD PTR [rip+0x1a374]        # 0x41f4b0
  40513c:	cmp    eax,0x3
  40513f:	jne    0x40510d
  405141:	mov    ecx,0xd
  405146:	call   0x40a2a0
  40514b:	call   QWORD PTR [rip+0x1a4bf]        # 0x41f610
  405151:	mov    DWORD PTR [rax],0x20
  405157:	jmp    0x4050e0
  405159:	nop    DWORD PTR [rax+0x0]
  405160:	push   rbx
  405161:	sub    rsp,0x20
  405165:	mov    ebx,ecx
  405167:	call   QWORD PTR [rip+0x1a463]        # 0x41f5d0
  40516d:	lea    rdx,[rax+0x30]
  405171:	mov    ecx,ebx
  405173:	add    rsp,0x20
  405177:	pop    rbx
  405178:	jmp    0x4050b0
  40517d:	nop    DWORD PTR [rax]
  405180:	push   rsi
  405181:	push   rbx
  405182:	sub    rsp,0x28
  405186:	mov    rsi,rcx
  405189:	mov    rcx,rdx
  40518c:	mov    rbx,rdx
  40518f:	call   0x411480
  405194:	test   eax,eax
  405196:	jne    0x4051c0
  405198:	xor    ecx,ecx
  40519a:	call   QWORD PTR [rip+0x1a3b0]        # 0x41f550
  4051a0:	mov    rcx,rsi
  4051a3:	mov    rdx,rbx
  4051a6:	call   0x411460
  4051ab:	cmp    eax,0xffffffff
  4051ae:	mov    esi,eax
  4051b0:	je     0x4051d1
  4051b2:	mov    eax,esi
  4051b4:	add    rsp,0x28
  4051b8:	pop    rbx
  4051b9:	pop    rsi
  4051ba:	ret    
  4051bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4051c0:	mov    rdx,rbx
  4051c3:	mov    rcx,rsi
  4051c6:	add    rsp,0x28
  4051ca:	pop    rbx
  4051cb:	pop    rsi
  4051cc:	jmp    0x411460
  4051d1:	call   QWORD PTR [rip+0x1a2e1]        # 0x41f4b8
  4051d7:	cmp    eax,0xe8
  4051dc:	je     0x4051e5
  4051de:	mov    esi,0xffffffff
  4051e3:	jmp    0x4051b2
  4051e5:	mov    rcx,rbx
  4051e8:	call   0x411480
  4051ed:	test   eax,eax
  4051ef:	je     0x4051de
  4051f1:	mov    rcx,rbx
  4051f4:	call   0x411360
  4051f9:	test   eax,eax
  4051fb:	js     0x4051de
  4051fd:	mov    ecx,eax
  4051ff:	call   0x4046f0
  405204:	mov    rcx,rax
  405207:	call   QWORD PTR [rip+0x1a2a3]        # 0x41f4b0
  40520d:	cmp    eax,0x3
  405210:	jne    0x4051de
  405212:	mov    ecx,0xd
  405217:	call   0x40a2a0
  40521c:	call   QWORD PTR [rip+0x1a3ee]        # 0x41f610
  405222:	mov    DWORD PTR [rax],0x20
  405228:	jmp    0x4051b2
  40522a:	nop    WORD PTR [rax+rax*1+0x0]
  405230:	push   rsi
  405231:	push   rbx
  405232:	sub    rsp,0x28
  405236:	mov    rsi,rcx
  405239:	call   QWORD PTR [rip+0x1a391]        # 0x41f5d0
  40523f:	lea    rbx,[rax+0x30]
  405243:	mov    rcx,rbx
  405246:	call   0x411480
  40524b:	test   eax,eax
  40524d:	jne    0x405270
  40524f:	xor    ecx,ecx
  405251:	call   QWORD PTR [rip+0x1a2f9]        # 0x41f550
  405257:	mov    rcx,rsi
  40525a:	call   0x4113f0
  40525f:	cmp    eax,0xffffffff
  405262:	mov    esi,eax
  405264:	je     0x405280
  405266:	mov    eax,esi
  405268:	add    rsp,0x28
  40526c:	pop    rbx
  40526d:	pop    rsi
  40526e:	ret    
  40526f:	nop
  405270:	mov    rcx,rsi
  405273:	add    rsp,0x28
  405277:	pop    rbx
  405278:	pop    rsi
  405279:	jmp    0x4113f0
  40527e:	xchg   ax,ax
  405280:	call   QWORD PTR [rip+0x1a232]        # 0x41f4b8
  405286:	cmp    eax,0xe8
  40528b:	je     0x405294
  40528d:	mov    esi,0xffffffff
  405292:	jmp    0x405266
  405294:	mov    rcx,rbx
  405297:	call   0x411480
  40529c:	test   eax,eax
  40529e:	je     0x40528d
  4052a0:	mov    rcx,rbx
  4052a3:	call   0x411360
  4052a8:	test   eax,eax
  4052aa:	js     0x40528d
  4052ac:	mov    ecx,eax
  4052ae:	call   0x4046f0
  4052b3:	mov    rcx,rax
  4052b6:	call   QWORD PTR [rip+0x1a1f4]        # 0x41f4b0
  4052bc:	cmp    eax,0x3
  4052bf:	jne    0x40528d
  4052c1:	mov    ecx,0xd
  4052c6:	call   0x40a2a0
  4052cb:	call   QWORD PTR [rip+0x1a33f]        # 0x41f610
  4052d1:	mov    DWORD PTR [rax],0x20
  4052d7:	jmp    0x405266
  4052d9:	nop    DWORD PTR [rax+0x0]
  4052e0:	push   rbp
  4052e1:	push   rdi
  4052e2:	push   rsi
  4052e3:	push   rbx
  4052e4:	sub    rsp,0x28
  4052e8:	mov    rdi,rcx
  4052eb:	mov    rcx,r9
  4052ee:	mov    rbp,rdx
  4052f1:	mov    rsi,r8
  4052f4:	mov    rbx,r9
  4052f7:	call   0x411480
  4052fc:	test   eax,eax
  4052fe:	jne    0x405330
  405300:	xor    ecx,ecx
  405302:	call   QWORD PTR [rip+0x1a248]        # 0x41f550
  405308:	mov    rcx,rdi
  40530b:	mov    r9,rbx
  40530e:	mov    r8,rsi
  405311:	mov    rdx,rbp
  405314:	call   0x411448
  405319:	cmp    rsi,rax
  40531c:	mov    rdi,rax
  40531f:	ja     0x405350
  405321:	mov    rax,rdi
  405324:	add    rsp,0x28
  405328:	pop    rbx
  405329:	pop    rsi
  40532a:	pop    rdi
  40532b:	pop    rbp
  40532c:	ret    
  40532d:	nop    DWORD PTR [rax]
  405330:	mov    r9,rbx
  405333:	mov    r8,rsi
  405336:	mov    rdx,rbp
  405339:	mov    rcx,rdi
  40533c:	add    rsp,0x28
  405340:	pop    rbx
  405341:	pop    rsi
  405342:	pop    rdi
  405343:	pop    rbp
  405344:	jmp    0x411448
  405349:	nop    DWORD PTR [rax+0x0]
  405350:	call   QWORD PTR [rip+0x1a162]        # 0x41f4b8
  405356:	cmp    eax,0xe8
  40535b:	jne    0x405321
  40535d:	mov    rcx,rbx
  405360:	call   0x411480
  405365:	test   eax,eax
  405367:	je     0x405321
  405369:	mov    rcx,rbx
  40536c:	call   0x411360
  405371:	test   eax,eax
  405373:	js     0x405321
  405375:	mov    ecx,eax
  405377:	call   0x4046f0
  40537c:	mov    rcx,rax
  40537f:	call   QWORD PTR [rip+0x1a12b]        # 0x41f4b0
  405385:	cmp    eax,0x3
  405388:	jne    0x405321
  40538a:	mov    ecx,0xd
  40538f:	call   0x40a2a0
  405394:	call   QWORD PTR [rip+0x1a276]        # 0x41f610
  40539a:	mov    DWORD PTR [rax],0x20
  4053a0:	jmp    0x405321
  4053a5:	nop
  4053a6:	nop
  4053a7:	nop
  4053a8:	nop
  4053a9:	nop
  4053aa:	nop
  4053ab:	nop
  4053ac:	nop
  4053ad:	nop
  4053ae:	nop
  4053af:	nop
  4053b0:	sub    rsp,0x38
  4053b4:	lea    rdx,[rip+0x10b45]        # 0x415f00
  4053bb:	lea    rcx,[rip+0x16d3e]        # 0x41c100
  4053c2:	mov    QWORD PTR [rsp+0x50],r8
  4053c7:	lea    r8,[rsp+0x50]
  4053cc:	mov    QWORD PTR [rsp+0x58],r9
  4053d1:	mov    QWORD PTR [rsp+0x28],r8
  4053d6:	call   0x40cb70
  4053db:	add    rsp,0x38
  4053df:	ret    
  4053e0:	push   rdi
  4053e1:	push   rsi
  4053e2:	push   rbx
  4053e3:	sub    rsp,0x20
  4053e7:	mov    ebx,ecx
  4053e9:	call   0x4054d0
  4053ee:	test   rax,rax
  4053f1:	je     0x405400
  4053f3:	add    rsp,0x20
  4053f7:	pop    rbx
  4053f8:	pop    rsi
  4053f9:	pop    rdi
  4053fa:	ret    
  4053fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405400:	mov    ecx,ebx
  405402:	call   0x4113b0
  405407:	test   rax,rax
  40540a:	mov    rsi,rax
  40540d:	je     0x405490
  405413:	cmp    BYTE PTR [rax],0x0
  405416:	je     0x405490
  405418:	mov    rcx,rax
  40541b:	call   0x4113a8
  405420:	cmp    rax,0xff
  405426:	ja     0x4054be
  40542c:	add    rax,0x1
  405430:	lea    rdi,[rip+0x16cc9]        # 0x41c100
  405437:	cmp    eax,0x8
  40543a:	jae    0x405480
  40543c:	xor    edx,edx
  40543e:	test   al,0x4
  405440:	jne    0x405470
  405442:	test   al,0x2
  405444:	jne    0x405460
  405446:	test   al,0x1
  405448:	jne    0x405453
  40544a:	lea    rax,[rip+0x16caf]        # 0x41c100
  405451:	jmp    0x4053f3
  405453:	movzx  eax,BYTE PTR [rsi+rdx*1]
  405457:	mov    BYTE PTR [rdi+rdx*1],al
  40545a:	jmp    0x40544a
  40545c:	nop    DWORD PTR [rax+0x0]
  405460:	movzx  ecx,WORD PTR [rsi+rdx*1]
  405464:	mov    WORD PTR [rdi+rdx*1],cx
  405468:	add    rdx,0x2
  40546c:	jmp    0x405446
  40546e:	xchg   ax,ax
  405470:	mov    edx,DWORD PTR [rsi]
  405472:	mov    DWORD PTR [rdi],edx
  405474:	mov    edx,0x4
  405479:	jmp    0x405442
  40547b:	nop    DWORD PTR [rax+rax*1+0x0]
  405480:	mov    ecx,eax
  405482:	shr    ecx,0x3
  405485:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405488:	jmp    0x40543c
  40548a:	nop    WORD PTR [rax+rax*1+0x0]
  405490:	lea    rdx,[rip+0x10a69]        # 0x415f00
  405497:	lea    rcx,[rip+0x16c62]        # 0x41c100
  40549e:	mov    r8d,ebx
  4054a1:	call   0x4053b0
  4054a6:	call   QWORD PTR [rip+0x1a164]        # 0x41f610
  4054ac:	mov    DWORD PTR [rax],0x16
  4054b2:	lea    rax,[rip+0x16c47]        # 0x41c100
  4054b9:	jmp    0x4053f3
  4054be:	call   0x4114a0
  4054c3:	nop
  4054c4:	nop
  4054c5:	nop
  4054c6:	nop
  4054c7:	nop
  4054c8:	nop
  4054c9:	nop
  4054ca:	nop
  4054cb:	nop
  4054cc:	nop
  4054cd:	nop
  4054ce:	nop
  4054cf:	nop
  4054d0:	cmp    ecx,0x2754
  4054d6:	je     0x405880
  4054dc:	jg     0x405532
  4054de:	cmp    ecx,0x89
  4054e4:	je     0x405860
  4054ea:	jg     0x405593
  4054f0:	cmp    ecx,0x79
  4054f3:	je     0x405890
  4054f9:	jle    0x4056c1
  4054ff:	cmp    ecx,0x7d
  405502:	lea    rax,[rip+0x10a59]        # 0x415f62
  405509:	je     0x405530
  40550b:	jle    0x4057d0
  405511:	cmp    ecx,0x7f
  405514:	lea    rax,[rip+0x10e45]        # 0x416360
  40551b:	je     0x405530
  40551d:	cmp    ecx,0x83
  405523:	lea    rax,[rip+0x10a5a]        # 0x415f84
  40552a:	jne    0x405590
  40552c:	nop    DWORD PTR [rax+0x0]
  405530:	repz ret 
  405532:	cmp    ecx,0x2779
  405538:	je     0x405870
  40553e:	jg     0x4055e2
  405544:	cmp    ecx,0x276c
  40554a:	je     0x405851
  405550:	jg     0x405700
  405556:	cmp    ecx,0x2756
  40555c:	lea    rax,[rip+0x10afb]        # 0x41605e
  405563:	je     0x405530
  405565:	lea    rax,[rip+0x10ade]        # 0x41604a
  40556c:	jl     0x405530
  40556e:	cmp    ecx,0x2757
  405574:	lea    rax,[rip+0x10af9]        # 0x416074
  40557b:	je     0x405530
  40557d:	cmp    ecx,0x276b
  405583:	lea    rax,[rip+0x10b86]        # 0x416110
  40558a:	je     0x405530
  40558c:	nop    DWORD PTR [rax+0x0]
  405590:	xor    eax,eax
  405592:	ret    
  405593:	cmp    ecx,0x273c
  405599:	je     0x4058b0
  40559f:	jle    0x405635
  4055a5:	cmp    ecx,0x274b
  4055ab:	lea    rax,[rip+0x10a46]        # 0x415ff8
  4055b2:	je     0x405530
  4055b8:	jle    0x405740
  4055be:	cmp    ecx,0x2750
  4055c4:	lea    rax,[rip+0x10a50]        # 0x41601b
  4055cb:	je     0x405530
  4055d1:	cmp    ecx,0x2753
  4055d7:	lea    rax,[rip+0x10a4a]        # 0x416028
  4055de:	jne    0x405590
  4055e0:	repz ret 
  4055e2:	cmp    ecx,0x277f
  4055e8:	je     0x4058a0
  4055ee:	jle    0x405680
  4055f4:	cmp    ecx,0x2afa
  4055fa:	lea    rax,[rip+0x10c97]        # 0x416298
  405601:	je     0x405530
  405607:	jle    0x4057a0
  40560d:	cmp    ecx,0x2afb
  405613:	lea    rax,[rip+0x10c9e]        # 0x4162b8
  40561a:	je     0x405530
  405620:	cmp    ecx,0x2afc
  405626:	lea    rax,[rip+0x10ca3]        # 0x4162d0
  40562d:	jne    0x405590
  405633:	repz ret 
  405635:	cmp    ecx,0x3e4
  40563b:	lea    rax,[rip+0x10a66]        # 0x4160a8
  405642:	je     0x405530
  405648:	jle    0x405770
  40564e:	cmp    ecx,0x3e5
  405654:	lea    rax,[rip+0x10a85]        # 0x4160e0
  40565b:	je     0x405530
  405661:	cmp    ecx,0x7d4
  405667:	lea    rax,[rip+0x10cd3]        # 0x416341
  40566e:	jne    0x405590
  405674:	repz ret 
  405676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405680:	cmp    ecx,0x277c
  405686:	lea    rax,[rip+0x10bb5]        # 0x416242
  40568d:	je     0x405530
  405693:	jg     0x405813
  405699:	cmp    ecx,0x277a
  40569f:	lea    rax,[rip+0x10b62]        # 0x416208
  4056a6:	je     0x405530
  4056ac:	cmp    ecx,0x277b
  4056b2:	lea    rax,[rip+0x10b75]        # 0x41622e
  4056b9:	jne    0x405590
  4056bf:	repz ret 
  4056c1:	cmp    ecx,0x68
  4056c4:	lea    rax,[rip+0x10c89]        # 0x416354
  4056cb:	je     0x405530
  4056d1:	jle    0x405840
  4056d7:	cmp    ecx,0x6f
  4056da:	lea    rax,[rip+0x10c37]        # 0x416318
  4056e1:	je     0x405530
  4056e7:	cmp    ecx,0x78
  4056ea:	lea    rax,[rip+0x10846]        # 0x415f37
  4056f1:	jne    0x405590
  4056f7:	repz ret 
  4056f9:	nop    DWORD PTR [rax+0x0]
  405700:	cmp    ecx,0x2776
  405706:	je     0x405832
  40570c:	jg     0x4057f2
  405712:	cmp    ecx,0x276d
  405718:	lea    rax,[rip+0x10a41]        # 0x416160
  40571f:	je     0x405530
  405725:	cmp    ecx,0x2775
  40572b:	lea    rax,[rip+0x10a56]        # 0x416188
  405732:	jne    0x405590
  405738:	repz ret 
  40573a:	nop    WORD PTR [rax+rax*1+0x0]
  405740:	cmp    ecx,0x273e
  405746:	lea    rax,[rip+0x1085d]        # 0x415faa
  40574d:	je     0x405530
  405753:	cmp    ecx,0x274a
  405759:	lea    rax,[rip+0x10868]        # 0x415fc8
  405760:	jne    0x405590
  405766:	repz ret 
  405768:	nop    DWORD PTR [rax+rax*1+0x0]
  405770:	cmp    ecx,0x8b
  405776:	lea    rax,[rip+0x107ab]        # 0x415f28
  40577d:	je     0x405530
  405783:	cmp    ecx,0x3e3
  405789:	lea    rax,[rip+0x108f5]        # 0x416085
  405790:	jne    0x405590
  405796:	repz ret 
  405798:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a0:	cmp    ecx,0x2780
  4057a6:	lea    rax,[rip+0x10abc]        # 0x416269
  4057ad:	je     0x405530
  4057b3:	cmp    ecx,0x2af9
  4057b9:	lea    rax,[rip+0x10ac4]        # 0x416284
  4057c0:	jne    0x405590
  4057c6:	repz ret 
  4057c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4057d0:	cmp    ecx,0x7a
  4057d3:	lea    rax,[rip+0x10b23]        # 0x4162fd
  4057da:	je     0x405530
  4057e0:	cmp    ecx,0x7c
  4057e3:	lea    rax,[rip+0x1075f]        # 0x415f49
  4057ea:	jne    0x405590
  4057f0:	repz ret 
  4057f2:	cmp    ecx,0x2777
  4057f8:	je     0x4058a0
  4057fe:	cmp    ecx,0x2778
  405804:	lea    rax,[rip+0x109bd]        # 0x4161c8
  40580b:	jne    0x405590
  405811:	repz ret 
  405813:	cmp    ecx,0x277d
  405819:	lea    rax,[rip+0x10a34]        # 0x416254
  405820:	je     0x405530
  405826:	cmp    ecx,0x277e
  40582c:	jne    0x405590
  405832:	lea    rax,[rip+0x1096d]        # 0x4161a6
  405839:	ret    
  40583a:	nop    WORD PTR [rax+rax*1+0x0]
  405840:	test   ecx,ecx
  405842:	lea    rax,[rip+0x106d7]        # 0x415f20
  405849:	jne    0x405590
  40584f:	repz ret 
  405851:	lea    rax,[rip+0x108e0]        # 0x416138
  405858:	ret    
  405859:	nop    DWORD PTR [rax+0x0]
  405860:	lea    rax,[rip+0x1070f]        # 0x415f76
  405867:	ret    
  405868:	nop    DWORD PTR [rax+rax*1+0x0]
  405870:	lea    rax,[rip+0x10971]        # 0x4161e8
  405877:	ret    
  405878:	nop    DWORD PTR [rax+rax*1+0x0]
  405880:	lea    rax,[rip+0x107b4]        # 0x41603b
  405887:	ret    
  405888:	nop    DWORD PTR [rax+rax*1+0x0]
  405890:	lea    rax,[rip+0x10a94]        # 0x41632b
  405897:	ret    
  405898:	nop    DWORD PTR [rax+rax*1+0x0]
  4058a0:	lea    rax,[rip+0x1090f]        # 0x4161b6
  4058a7:	ret    
  4058a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058b0:	lea    rax,[rip+0x106d9]        # 0x415f90
  4058b7:	ret    
  4058b8:	nop
  4058b9:	nop
  4058ba:	nop
  4058bb:	nop
  4058bc:	nop
  4058bd:	nop
  4058be:	nop
  4058bf:	nop
  4058c0:	cmp    rcx,rdx
  4058c3:	jne    0x4058dd
  4058c5:	jmp    0x405914
  4058c7:	nop    WORD PTR [rax+rax*1+0x0]
  4058d0:	add    rcx,0x1
  4058d4:	add    rdx,0x1
  4058d8:	cmp    al,r8b
  4058db:	jne    0x405909
  4058dd:	movzx  r8d,BYTE PTR [rcx]
  4058e1:	lea    r9d,[r8-0x41]
  4058e5:	lea    eax,[r8+0x20]
  4058e9:	cmp    r9d,0x19
  4058ed:	movzx  r9d,BYTE PTR [rdx]
  4058f1:	cmova  eax,r8d
  4058f5:	lea    r11d,[r9-0x41]
  4058f9:	lea    r8d,[r9+0x20]
  4058fd:	cmp    r11d,0x19
  405901:	cmova  r8d,r9d
  405905:	test   al,al
  405907:	jne    0x4058d0
  405909:	movzx  r8d,r8b
  40590d:	movzx  eax,al
  405910:	sub    eax,r8d
  405913:	ret    
  405914:	xor    eax,eax
  405916:	ret    
  405917:	nop
  405918:	nop
  405919:	nop
  40591a:	nop
  40591b:	nop
  40591c:	nop
  40591d:	nop
  40591e:	nop
  40591f:	nop
  405920:	sub    rsp,0x38
  405924:	lea    rcx,[rip+0x168d5]        # 0x41c200
  40592b:	mov    QWORD PTR [rsp+0x50],r8
  405930:	lea    r8,[rsp+0x50]
  405935:	mov    QWORD PTR [rsp+0x58],r9
  40593a:	mov    QWORD PTR [rsp+0x28],r8
  40593f:	call   0x40cb70
  405944:	add    rsp,0x38
  405948:	ret    
  405949:	nop    DWORD PTR [rax+0x0]
  405950:	push   rsi
  405951:	push   rbx
  405952:	sub    rsp,0x28
  405956:	xor    edx,edx
  405958:	xor    ecx,ecx
  40595a:	call   0x404bf0
  40595f:	mov    edx,0x3b
  405964:	mov    rcx,rax
  405967:	mov    rbx,rax
  40596a:	call   0x4113c8
  40596f:	test   rax,rax
  405972:	je     0x405983
  405974:	xor    edx,edx
  405976:	mov    ecx,0x2
  40597b:	call   0x404bf0
  405980:	mov    rbx,rax
  405983:	mov    edx,0x2e
  405988:	mov    rcx,rbx
  40598b:	call   0x411390
  405990:	test   rax,rax
  405993:	je     0x405a43
  405999:	lea    r8,[rax+0x1]
  40599d:	lea    rdx,[rip+0x10b62]        # 0x416506
  4059a4:	lea    rcx,[rip+0x16855]        # 0x41c200
  4059ab:	call   0x405920
  4059b0:	mov    rbx,QWORD PTR [rip+0x16859]        # 0x41c210
  4059b7:	test   rbx,rbx
  4059ba:	jne    0x4059da
  4059bc:	jmp    0x405a30
  4059be:	xchg   ax,ax
  4059c0:	mov    rcx,rbx
  4059c3:	call   0x4113a8
  4059c8:	lea    rbx,[rbx+rax*1+0x1]
  4059cd:	mov    rcx,rbx
  4059d0:	call   0x4113a8
  4059d5:	lea    rbx,[rbx+rax*1+0x1]
  4059da:	movzx  esi,BYTE PTR [rbx]
  4059dd:	test   sil,sil
  4059e0:	je     0x405a23
  4059e2:	lea    rcx,[rip+0x16817]        # 0x41c200
  4059e9:	mov    rdx,rbx
  4059ec:	call   0x4113c0
  4059f1:	test   eax,eax
  4059f3:	je     0x405a01
  4059f5:	cmp    sil,0x2a
  4059f9:	jne    0x4059c0
  4059fb:	cmp    BYTE PTR [rbx+0x1],0x0
  4059ff:	jne    0x4059c0
  405a01:	mov    rcx,rbx
  405a04:	call   0x4113a8
  405a09:	lea    rax,[rbx+rax*1+0x1]
  405a0e:	cmp    BYTE PTR [rax],0x0
  405a11:	lea    rdx,[rip+0x10ae8]        # 0x416500
  405a18:	cmove  rax,rdx
  405a1c:	add    rsp,0x28
  405a20:	pop    rbx
  405a21:	pop    rsi
  405a22:	ret    
  405a23:	lea    rax,[rip+0x167d6]        # 0x41c200
  405a2a:	jmp    0x405a0e
  405a2c:	nop    DWORD PTR [rax+0x0]
  405a30:	lea    rax,[rip+0x10949]        # 0x416380
  405a37:	mov    QWORD PTR [rip+0x167d2],rax        # 0x41c210
  405a3e:	mov    rbx,rax
  405a41:	jmp    0x4059da
  405a43:	call   QWORD PTR [rip+0x19a47]        # 0x41f490
  405a49:	lea    rdx,[rip+0x10abb]        # 0x41650b
  405a50:	lea    rcx,[rip+0x167a9]        # 0x41c200
  405a57:	mov    r8d,eax
  405a5a:	call   0x405920
  405a5f:	jmp    0x4059b0
  405a64:	nop
  405a65:	nop
  405a66:	nop
  405a67:	nop
  405a68:	nop
  405a69:	nop
  405a6a:	nop
  405a6b:	nop
  405a6c:	nop
  405a6d:	nop
  405a6e:	nop
  405a6f:	nop
  405a70:	push   rdi
  405a71:	push   rsi
  405a72:	push   rbx
  405a73:	sub    rsp,0xe0
  405a7a:	mov    r8d,0x10
  405a80:	lea    rdx,[rsp+0x28]
  405a85:	lea    rbx,[rsp+0x30]
  405a8a:	call   0x411388
  405a8f:	mov    r9d,0x55
  405a95:	mov    esi,eax
  405a97:	mov    r8,rbx
  405a9a:	mov    edx,0x1001
  405a9f:	mov    ecx,eax
  405aa1:	mov    rdi,QWORD PTR [rip+0x19a18]        # 0x41f4c0
  405aa8:	call   rdi
  405aaa:	test   eax,eax
  405aac:	jne    0x405ac0
  405aae:	mov    eax,0x1
  405ab3:	add    rsp,0xe0
  405aba:	pop    rbx
  405abb:	pop    rsi
  405abc:	pop    rdi
  405abd:	ret    
  405abe:	xchg   ax,ax
  405ac0:	mov    r8,rbx
  405ac3:	mov    eax,DWORD PTR [r8]
  405ac6:	add    r8,0x4
  405aca:	lea    edx,[rax-0x1010101]
  405ad0:	not    eax
  405ad2:	and    edx,eax
  405ad4:	and    edx,0x80808080
  405ada:	je     0x405ac3
  405adc:	mov    eax,edx
  405ade:	mov    r9d,0x55
  405ae4:	mov    ecx,esi
  405ae6:	shr    eax,0x10
  405ae9:	test   edx,0x8080
  405aef:	cmove  edx,eax
  405af2:	lea    rax,[r8+0x2]
  405af6:	cmove  r8,rax
  405afa:	add    dl,dl
  405afc:	mov    eax,0x5f
  405b01:	sbb    r8,0x3
  405b05:	mov    edx,0x1002
  405b0a:	sub    r8,rbx
  405b0d:	mov    WORD PTR [rbx+r8*1],ax
  405b12:	lea    r8,[rbx+r8*1+0x1]
  405b17:	call   rdi
  405b19:	test   eax,eax
  405b1b:	je     0x405aae
  405b1d:	mov    rdi,rbx
  405b20:	mov    eax,DWORD PTR [rdi]
  405b22:	add    rdi,0x4
  405b26:	lea    edx,[rax-0x1010101]
  405b2c:	not    eax
  405b2e:	and    edx,eax
  405b30:	and    edx,0x80808080
  405b36:	je     0x405b20
  405b38:	mov    eax,edx
  405b3a:	mov    rcx,rbx
  405b3d:	shr    eax,0x10
  405b40:	test   edx,0x8080
  405b46:	cmove  edx,eax
  405b49:	lea    rax,[rdi+0x2]
  405b4d:	cmove  rdi,rax
  405b51:	add    dl,dl
  405b53:	lea    rdx,[rip+0x16be6]        # 0x41c740
  405b5a:	sbb    rdi,0x3
  405b5e:	sub    rdi,rbx
  405b61:	mov    r8,rdi
  405b64:	call   0x4113a0
  405b69:	test   eax,eax
  405b6b:	jne    0x405aae
  405b71:	lea    rdx,[rip+0x16bc8]        # 0x41c740
  405b78:	movzx  edx,BYTE PTR [rdx+rdi*1]
  405b7c:	test   dl,dl
  405b7e:	je     0x405b89
  405b80:	cmp    dl,0x2e
  405b83:	jne    0x405aae
  405b89:	mov    DWORD PTR [rip+0x16d61],esi        # 0x41c8f0
  405b8f:	jmp    0x405ab3
  405b94:	xchg   ax,ax
  405b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ba0:	push   rbx
  405ba1:	sub    rsp,0x20
  405ba5:	mov    ebx,ecx
  405ba7:	lea    rcx,[rip+0x111d6]        # 0x416d84
  405bae:	call   0x411440
  405bb3:	test   rax,rax
  405bb6:	je     0x405bd7
  405bb8:	movzx  ecx,bx
  405bbb:	mov    r9d,0xff
  405bc1:	lea    r8,[rip+0x16678]        # 0x41c240
  405bc8:	mov    edx,0x5c
  405bcd:	call   QWORD PTR [rip+0x198ed]        # 0x41f4c0
  405bd3:	test   eax,eax
  405bd5:	jne    0x405c00
  405bd7:	mov    edx,ebx
  405bd9:	and    bx,0x3ff
  405bde:	shr    dx,0xa
  405be2:	cmp    bx,0x91
  405be7:	ja     0x406cf7
  405bed:	lea    rax,[rip+0x1119c]        # 0x416d90
  405bf4:	movzx  ebx,bx
  405bf7:	movsxd rcx,DWORD PTR [rax+rbx*4]
  405bfb:	add    rax,rcx
  405bfe:	jmp    rax
  405c00:	movzx  eax,BYTE PTR [rip+0x16639]        # 0x41c240
  405c07:	test   al,al
  405c09:	je     0x405c30
  405c0b:	cmp    al,0x2d
  405c0d:	lea    rax,[rip+0x1662c]        # 0x41c240
  405c14:	jne    0x405c25
  405c16:	jmp    0x405c50
  405c18:	nop    DWORD PTR [rax+rax*1+0x0]
  405c20:	cmp    dl,0x2d
  405c23:	je     0x405c50
  405c25:	add    rax,0x1
  405c29:	movzx  edx,BYTE PTR [rax]
  405c2c:	test   dl,dl
  405c2e:	jne    0x405c20
  405c30:	lea    rax,[rip+0x16609]        # 0x41c240
  405c37:	nop    WORD PTR [rax+rax*1+0x0]
  405c40:	add    rsp,0x20
  405c44:	pop    rbx
  405c45:	ret    
  405c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c50:	mov    BYTE PTR [rax],0x5f
  405c53:	lea    rdx,[rax+0x1]
  405c57:	movzx  eax,BYTE PTR [rax+0x1]
  405c5b:	test   al,al
  405c5d:	jne    0x405c75
  405c5f:	jmp    0x405c30
  405c61:	cmp    BYTE PTR [rdx],0x2d
  405c64:	je     0x4072a0
  405c6a:	add    rdx,0x1
  405c6e:	movzx  eax,BYTE PTR [rdx]
  405c71:	test   al,al
  405c73:	je     0x405c30
  405c75:	lea    ecx,[rax-0x61]
  405c78:	cmp    cl,0x19
  405c7b:	ja     0x405c61
  405c7d:	sub    eax,0x20
  405c80:	mov    BYTE PTR [rdx],al
  405c82:	jmp    0x405c6a
  405c84:	cmp    dx,0x1
  405c88:	lea    rax,[rip+0x10bb5]        # 0x416844
  405c8f:	lea    rdx,[rip+0x10ead]        # 0x416b43
  405c96:	cmovne rax,rdx
  405c9a:	jmp    0x405c40
  405c9c:	cmp    dx,0x1
  405ca0:	lea    rax,[rip+0x10a6d]        # 0x416714
  405ca7:	lea    rdx,[rip+0x10a6d]        # 0x41671b
  405cae:	cmovne rax,rdx
  405cb2:	jmp    0x405c40
  405cb4:	cmp    dx,0x1
  405cb8:	lea    rax,[rip+0x1109f]        # 0x416d5e
  405cbf:	lea    rdx,[rip+0x1109e]        # 0x416d64
  405cc6:	cmovne rax,rdx
  405cca:	jmp    0x405c40
  405ccf:	cmp    dx,0x1
  405cd3:	lea    rax,[rip+0x10c99]        # 0x416973
  405cda:	lea    rdx,[rip+0x10c98]        # 0x416979
  405ce1:	cmovne rax,rdx
  405ce5:	jmp    0x405c40
  405cea:	cmp    dx,0x1
  405cee:	lea    rax,[rip+0x10c73]        # 0x416968
  405cf5:	lea    rdx,[rip+0x10c73]        # 0x41696f
  405cfc:	cmovne rax,rdx
  405d00:	jmp    0x405c40
  405d05:	cmp    dx,0x1
  405d09:	lea    rax,[rip+0x11060]        # 0x416d70
  405d10:	lea    rdx,[rip+0x11060]        # 0x416d77
  405d17:	cmovne rax,rdx
  405d1b:	jmp    0x405c40
  405d20:	cmp    dx,0x1
  405d24:	lea    rax,[rip+0x107f7]        # 0x416522
  405d2b:	lea    rdx,[rip+0x107f7]        # 0x416529
  405d32:	cmovne rax,rdx
  405d36:	jmp    0x405c40
  405d3b:	cmp    dx,0x1
  405d3f:	lea    rax,[rip+0x1091b]        # 0x416661
  405d46:	lea    rdx,[rip+0x1091a]        # 0x416667
  405d4d:	cmovne rax,rdx
  405d51:	jmp    0x405c40
  405d56:	cmp    dx,0x1
  405d5a:	lea    rax,[rip+0x10cf5]        # 0x416a56
  405d61:	lea    rdx,[rip+0x10cf4]        # 0x416a5c
  405d68:	cmovne rax,rdx
  405d6c:	jmp    0x405c40
  405d71:	cmp    dx,0x1
  405d75:	lea    rax,[rip+0x10c7f]        # 0x4169fb
  405d7c:	lea    rdx,[rip+0x10c7e]        # 0x416a01
  405d83:	cmovne rax,rdx
  405d87:	jmp    0x405c40
  405d8c:	cmp    dx,0x1
  405d90:	lea    rax,[rip+0x10f61]        # 0x416cf8
  405d97:	lea    rdx,[rip+0x10f60]        # 0x416cfe
  405d9e:	cmovne rax,rdx
  405da2:	jmp    0x405c40
  405da7:	cmp    dx,0x1
  405dab:	lea    rax,[rip+0x10856]        # 0x416608
  405db2:	lea    rdx,[rip+0x10855]        # 0x41660e
  405db9:	cmovne rax,rdx
  405dbd:	jmp    0x405c40
  405dc2:	cmp    dx,0x1
  405dc6:	lea    rax,[rip+0x10c4b]        # 0x416a18
  405dcd:	lea    rdx,[rip+0x10c4b]        # 0x416a1f
  405dd4:	cmovne rax,rdx
  405dd8:	jmp    0x405c40
  405ddd:	cmp    dx,0x1
  405de1:	lea    rax,[rip+0x10c1c]        # 0x416a04
  405de8:	lea    rdx,[rip+0x10c1c]        # 0x416a0b
  405def:	cmovne rax,rdx
  405df3:	jmp    0x405c40
  405df8:	cmp    dx,0x1
  405dfc:	lea    rax,[rip+0x10c6e]        # 0x416a71
  405e03:	lea    rdx,[rip+0x10c6e]        # 0x416a78
  405e0a:	cmovne rax,rdx
  405e0e:	jmp    0x405c40
  405e13:	cmp    dx,0x1
  405e17:	lea    rax,[rip+0x10f5d]        # 0x416d7b
  405e1e:	lea    rdx,[rip+0x10f5c]        # 0x416d81
  405e25:	cmovne rax,rdx
  405e29:	jmp    0x405c40
  405e2e:	cmp    dx,0x1
  405e32:	lea    rax,[rip+0x10d37]        # 0x416b70
  405e39:	lea    rdx,[rip+0x10d36]        # 0x416b76
  405e40:	cmovne rax,rdx
  405e44:	jmp    0x405c40
  405e49:	cmp    dx,0x1
  405e4d:	lea    rax,[rip+0x10b4e]        # 0x4169a2
  405e54:	lea    rdx,[rip+0x10b4d]        # 0x4169a8
  405e5b:	cmovne rax,rdx
  405e5f:	jmp    0x405c40
  405e64:	cmp    dx,0x1
  405e68:	lea    rax,[rip+0x10a47]        # 0x4168b6
  405e6f:	lea    rdx,[rip+0x10a47]        # 0x4168bd
  405e76:	cmovne rax,rdx
  405e7a:	jmp    0x405c40
  405e7f:	cmp    dx,0x1
  405e83:	lea    rax,[rip+0x10a0e]        # 0x416898
  405e8a:	lea    rdx,[rip+0x10a0d]        # 0x41689e
  405e91:	cmovne rax,rdx
  405e95:	jmp    0x405c40
  405e9a:	cmp    dx,0x1
  405e9e:	lea    rax,[rip+0x10e20]        # 0x416cc5
  405ea5:	je     0x405c40
  405eab:	cmp    dx,0x2
  405eaf:	lea    rax,[rip+0x10e15]        # 0x416ccb
  405eb6:	lea    rdx,[rip+0x10e14]        # 0x416cd1
  405ebd:	cmovne rax,rdx
  405ec1:	jmp    0x405c40
  405ec6:	cmp    dx,0x1
  405eca:	lea    rax,[rip+0x10b97]        # 0x416a68
  405ed1:	lea    rdx,[rip+0x10b96]        # 0x416a6e
  405ed8:	cmovne rax,rdx
  405edc:	jmp    0x405c40
  405ee1:	cmp    dx,0x1
  405ee5:	lea    rax,[rip+0x10a5b]        # 0x416947
  405eec:	lea    rdx,[rip+0x10a5a]        # 0x41694d
  405ef3:	cmovne rax,rdx
  405ef7:	jmp    0x405c40
  405efc:	cmp    dx,0x1
  405f00:	lea    rax,[rip+0x109e9]        # 0x4168f0
  405f07:	lea    rdx,[rip+0x109e8]        # 0x4168f6
  405f0e:	cmovne rax,rdx
  405f12:	jmp    0x405c40
  405f17:	cmp    dx,0x1
  405f1b:	lea    rax,[rip+0x1096d]        # 0x41688f
  405f22:	lea    rdx,[rip+0x1096c]        # 0x416895
  405f29:	cmovne rax,rdx
  405f2d:	jmp    0x405c40
  405f32:	cmp    dx,0x1
  405f36:	lea    rax,[rip+0x10a80]        # 0x4169bd
  405f3d:	lea    rdx,[rip+0x10a7f]        # 0x4169c3
  405f44:	cmovne rax,rdx
  405f48:	jmp    0x405c40
  405f4d:	cmp    dx,0x1
  405f51:	lea    rax,[rip+0x10686]        # 0x4165de
  405f58:	lea    rdx,[rip+0x10685]        # 0x4165e4
  405f5f:	cmovne rax,rdx
  405f63:	jmp    0x405c40
  405f68:	cmp    dx,0x1
  405f6c:	lea    rax,[rip+0x10c20]        # 0x416b93
  405f73:	lea    rdx,[rip+0x10c20]        # 0x416b9a
  405f7a:	cmovne rax,rdx
  405f7e:	jmp    0x405c40
  405f83:	cmp    dx,0x2
  405f87:	lea    rax,[rip+0x10b24]        # 0x416ab2
  405f8e:	je     0x405c40
  405f94:	cmp    dx,0x3
  405f98:	lea    rax,[rip+0x10b19]        # 0x416ab8
  405f9f:	je     0x405c40
  405fa5:	cmp    dx,0x1
  405fa9:	lea    rax,[rip+0x10afc]        # 0x416aac
  405fb0:	lea    rdx,[rip+0x10b07]        # 0x416abe
  405fb7:	cmovne rax,rdx
  405fbb:	jmp    0x405c40
  405fc0:	cmp    dx,0x1
  405fc4:	lea    rax,[rip+0x10c9b]        # 0x416c66
  405fcb:	lea    rdx,[rip+0x10b65]        # 0x416b37
  405fd2:	cmovne rax,rdx
  405fd6:	jmp    0x405c40
  405fdb:	cmp    dx,0x1
  405fdf:	lea    rax,[rip+0x108f6]        # 0x4168dc
  405fe6:	lea    rdx,[rip+0x108f6]        # 0x4168e3
  405fed:	cmovne rax,rdx
  405ff1:	jmp    0x405c40
  405ff6:	cmp    dx,0x1
  405ffa:	lea    rax,[rip+0x108ac]        # 0x4168ad
  406001:	lea    rdx,[rip+0x108a2]        # 0x4168aa
  406008:	cmovne rax,rdx
  40600c:	jmp    0x405c40
  406011:	cmp    dx,0x1
  406015:	lea    rax,[rip+0x1081f]        # 0x41683b
  40601c:	lea    rdx,[rip+0x1081e]        # 0x416841
  406023:	cmovne rax,rdx
  406027:	jmp    0x405c40
  40602c:	cmp    dx,0x1
  406030:	lea    rax,[rip+0x10706]        # 0x41673d
  406037:	lea    rdx,[rip+0x10706]        # 0x416744
  40603e:	cmovne rax,rdx
  406042:	jmp    0x405c40
  406047:	cmp    dx,0x1
  40604b:	lea    rax,[rip+0x106cd]        # 0x41671f
  406052:	lea    rdx,[rip+0x106cc]        # 0x416725
  406059:	cmovne rax,rdx
  40605d:	jmp    0x405c40
  406062:	cmp    dx,0x1
  406066:	lea    rax,[rip+0x10be7]        # 0x416c54
  40606d:	lea    rdx,[rip+0x10be6]        # 0x416c5a
  406074:	cmovne rax,rdx
  406078:	jmp    0x405c40
  40607d:	cmp    dx,0x1
  406081:	lea    rax,[rip+0x109f4]        # 0x416a7c
  406088:	lea    rdx,[rip+0x109f3]        # 0x416a82
  40608f:	cmovne rax,rdx
  406093:	jmp    0x405c40
  406098:	cmp    dx,0x1
  40609c:	lea    rax,[rip+0x1078f]        # 0x416832
  4060a3:	lea    rdx,[rip+0x1078e]        # 0x416838
  4060aa:	cmovne rax,rdx
  4060ae:	jmp    0x405c40
  4060b3:	cmp    dx,0x1
  4060b7:	lea    rax,[rip+0x10974]        # 0x416a32
  4060be:	je     0x405c40
  4060c4:	cmp    dx,0x2
  4060c8:	lea    rax,[rip+0x10969]        # 0x416a38
  4060cf:	lea    rdx,[rip+0x10968]        # 0x416a3e
  4060d6:	cmovne rax,rdx
  4060da:	jmp    0x405c40
  4060df:	cmp    dx,0x1
  4060e3:	lea    rax,[rip+0x10866]        # 0x416950
  4060ea:	je     0x405c40
  4060f0:	cmp    dx,0x2
  4060f4:	lea    rax,[rip+0x1085b]        # 0x416956
  4060fb:	lea    rdx,[rip+0x1085a]        # 0x41695c
  406102:	cmovne rax,rdx
  406106:	jmp    0x405c40
  40610b:	cmp    dx,0x2
  40610f:	lea    rax,[rip+0x10b6e]        # 0x416c84
  406116:	je     0x405c40
  40611c:	cmp    dx,0x1f
  406120:	lea    rax,[rip+0x10b53]        # 0x416c7a
  406127:	je     0x405c40
  40612d:	cmp    dx,0x1
  406131:	lea    rax,[rip+0x10b34]        # 0x416c6c
  406138:	lea    rdx,[rip+0x10b52]        # 0x416c91
  40613f:	cmovne rax,rdx
  406143:	jmp    0x405c40
  406148:	cmp    dx,0x1
  40614c:	lea    rax,[rip+0x103da]        # 0x41652d
  406153:	lea    rdx,[rip+0x103d9]        # 0x416533
  40615a:	cmovne rax,rdx
  40615e:	jmp    0x405c40
  406163:	cmp    dx,0x2
  406167:	lea    rax,[rip+0x107a6]        # 0x416914
  40616e:	je     0x405c40
  406174:	cmp    dx,0x1f
  406178:	lea    rax,[rip+0x1078c]        # 0x41690b
  40617f:	je     0x405c40
  406185:	cmp    dx,0x1
  406189:	lea    rax,[rip+0x10775]        # 0x416905
  406190:	lea    rdx,[rip+0x1076b]        # 0x416902
  406197:	cmovne rax,rdx
  40619b:	jmp    0x405c40
  4061a0:	cmp    dx,0x1
  4061a4:	lea    rax,[rip+0x1048a]        # 0x416635
  4061ab:	lea    rdx,[rip+0x1048a]        # 0x41663c
  4061b2:	cmovne rax,rdx
  4061b6:	jmp    0x405c40
  4061bb:	cmp    dx,0x1
  4061bf:	lea    rax,[rip+0x1098f]        # 0x416b55
  4061c6:	lea    rdx,[rip+0x1098e]        # 0x416b5b
  4061cd:	cmovne rax,rdx
  4061d1:	jmp    0x405c40
  4061d6:	cmp    dx,0x1
  4061da:	lea    rax,[rip+0x10a68]        # 0x416c49
  4061e1:	lea    rdx,[rip+0x10a68]        # 0x416c50
  4061e8:	cmovne rax,rdx
  4061ec:	jmp    0x405c40
  4061f1:	cmp    dx,0x1
  4061f5:	lea    rax,[rip+0x1094a]        # 0x416b46
  4061fc:	je     0x405c40
  406202:	cmp    dx,0x2
  406206:	lea    rax,[rip+0x1093f]        # 0x416b4c
  40620d:	lea    rdx,[rip+0x1093e]        # 0x416b52
  406214:	cmovne rax,rdx
  406218:	jmp    0x405c40
  40621d:	cmp    dx,0x1
  406221:	lea    rax,[rip+0x107c8]        # 0x4169f0
  406228:	lea    rdx,[rip+0x107c8]        # 0x4169f7
  40622f:	cmovne rax,rdx
  406233:	jmp    0x405c40
  406238:	cmp    dx,0x1
  40623c:	lea    rax,[rip+0x10739]        # 0x41697c
  406243:	lea    rdx,[rip+0x10739]        # 0x416983
  40624a:	cmovne rax,rdx
  40624e:	jmp    0x405c40
  406253:	cmp    dx,0x1
  406257:	lea    rax,[rip+0x105f5]        # 0x416853
  40625e:	lea    rdx,[rip+0x105f4]        # 0x416859
  406265:	cmovne rax,rdx
  406269:	jmp    0x405c40
  40626e:	cmp    dx,0x1
  406272:	lea    rax,[rip+0x103a1]        # 0x41661a
  406279:	lea    rdx,[rip+0x103a0]        # 0x416620
  406280:	cmovne rax,rdx
  406284:	jmp    0x405c40
  406289:	cmp    dx,0x1
  40628d:	lea    rax,[rip+0x10705]        # 0x416999
  406294:	lea    rdx,[rip+0x10704]        # 0x41699f
  40629b:	cmovne rax,rdx
  40629f:	jmp    0x405c40
  4062a4:	cmp    dx,0x1
  4062a8:	lea    rax,[rip+0x10374]        # 0x416623
  4062af:	lea    rdx,[rip+0x10373]        # 0x416629
  4062b6:	cmovne rax,rdx
  4062ba:	jmp    0x405c40
  4062bf:	cmp    dx,0x1
  4062c3:	lea    rax,[rip+0x10a8b]        # 0x416d55
  4062ca:	lea    rdx,[rip+0x10a8a]        # 0x416d5b
  4062d1:	cmovne rax,rdx
  4062d5:	jmp    0x405c40
  4062da:	cmp    dx,0x2
  4062de:	lea    rax,[rip+0x109d7]        # 0x416cbc
  4062e5:	lea    rdx,[rip+0x109cd]        # 0x416cb9
  4062ec:	cmovne rax,rdx
  4062f0:	jmp    0x405c40
  4062f5:	cmp    dx,0x2
  4062f9:	je     0x406315
  4062fb:	jbe    0x4072af
  406301:	cmp    dx,0x1e
  406305:	je     0x4072c1
  40630b:	cmp    dx,0x1f
  40630f:	jne    0x4072b5
  406315:	lea    rax,[rip+0x1070d]        # 0x416a29
  40631c:	jmp    0x405c40
  406321:	cmp    dx,0x1
  406325:	lea    rax,[rip+0x1080e]        # 0x416b3a
  40632c:	lea    rdx,[rip+0x1080d]        # 0x416b40
  406333:	cmovne rax,rdx
  406337:	jmp    0x405c40
  40633c:	cmp    dx,0x1
  406340:	lea    rax,[rip+0x106c8]        # 0x416a0f
  406347:	lea    rdx,[rip+0x106c7]        # 0x416a15
  40634e:	cmovne rax,rdx
  406352:	jmp    0x405c40
  406357:	cmp    dx,0x1
  40635b:	lea    rax,[rip+0x10240]        # 0x4165a2
  406362:	lea    rdx,[rip+0x1023f]        # 0x4165a8
  406369:	cmovne rax,rdx
  40636d:	jmp    0x405c40
  406372:	cmp    dx,0x1
  406376:	lea    rax,[rip+0x10661]        # 0x4169de
  40637d:	lea    rdx,[rip+0x10660]        # 0x4169e4
  406384:	cmovne rax,rdx
  406388:	jmp    0x405c40
  40638d:	cmp    dx,0x1
  406391:	lea    rax,[rip+0x105a6]        # 0x41693e
  406398:	lea    rdx,[rip+0x105a5]        # 0x416944
  40639f:	cmovne rax,rdx
  4063a3:	jmp    0x405c40
  4063a8:	cmp    dx,0x1
  4063ac:	lea    rax,[rip+0x108f4]        # 0x416ca7
  4063b3:	lea    rdx,[rip+0x108f3]        # 0x416cad
  4063ba:	cmovne rax,rdx
  4063be:	jmp    0x405c40
  4063c3:	cmp    dx,0x1
  4063c7:	lea    rax,[rip+0x108c7]        # 0x416c95
  4063ce:	lea    rdx,[rip+0x108c6]        # 0x416c9b
  4063d5:	cmovne rax,rdx
  4063d9:	jmp    0x405c40
  4063de:	cmp    dx,0x1
  4063e2:	lea    rax,[rip+0x10676]        # 0x416a5f
  4063e9:	lea    rdx,[rip+0x10675]        # 0x416a65
  4063f0:	cmovne rax,rdx
  4063f4:	jmp    0x405c40
  4063f9:	cmp    dx,0x1
  4063fd:	lea    rax,[rip+0x1049d]        # 0x4168a1
  406404:	lea    rdx,[rip+0x1049c]        # 0x4168a7
  40640b:	cmovne rax,rdx
  40640f:	jmp    0x405c40
  406414:	cmp    dx,0x1
  406418:	lea    rax,[rip+0x1067e]        # 0x416a9d
  40641f:	je     0x405c40
  406425:	cmp    dx,0x2
  406429:	lea    rax,[rip+0x10673]        # 0x416aa3
  406430:	lea    rdx,[rip+0x10672]        # 0x416aa9
  406437:	cmovne rax,rdx
  40643b:	jmp    0x405c40
  406440:	cmp    dx,0x1
  406444:	lea    rax,[rip+0x101ae]        # 0x4165f9
  40644b:	je     0x405c40
  406451:	cmp    dx,0x2
  406455:	lea    rax,[rip+0x101a3]        # 0x4165ff
  40645c:	lea    rdx,[rip+0x101a2]        # 0x416605
  406463:	cmovne rax,rdx
  406467:	jmp    0x405c40
  40646c:	cmp    dx,0x1
  406470:	lea    rax,[rip+0x10827]        # 0x416c9e
  406477:	lea    rdx,[rip+0x10826]        # 0x416ca4
  40647e:	cmovne rax,rdx
  406482:	jmp    0x405c40
  406487:	cmp    dx,0x2
  40648b:	lea    rax,[rip+0x1089c]        # 0x416d2e
  406492:	je     0x405c40
  406498:	cmp    dx,0x1e
  40649c:	lea    rax,[rip+0x1087f]        # 0x416d22
  4064a3:	je     0x405c40
  4064a9:	cmp    dx,0x1
  4064ad:	lea    rax,[rip+0x10868]        # 0x416d1c
  4064b4:	lea    rdx,[rip+0x1085e]        # 0x416d19
  4064bb:	cmovne rax,rdx
  4064bf:	jmp    0x405c40
  4064c4:	cmp    dx,0x1
  4064c8:	lea    rax,[rip+0x10820]        # 0x416cef
  4064cf:	lea    rdx,[rip+0x1081f]        # 0x416cf5
  4064d6:	cmovne rax,rdx
  4064da:	jmp    0x405c40
  4064df:	cmp    dx,0x1
  4064e3:	lea    rax,[rip+0x10747]        # 0x416c31
  4064ea:	lea    rdx,[rip+0x10746]        # 0x416c37
  4064f1:	cmovne rax,rdx
  4064f5:	jmp    0x405c40
  4064fa:	cmp    dx,0x1
  4064fe:	lea    rax,[rip+0x1048b]        # 0x416990
  406505:	lea    rdx,[rip+0x1048a]        # 0x416996
  40650c:	cmovne rax,rdx
  406510:	jmp    0x405c40
  406515:	cmp    dx,0x1
  406519:	lea    rax,[rip+0x1043f]        # 0x41695f
  406520:	lea    rdx,[rip+0x1043e]        # 0x416965
  406527:	cmovne rax,rdx
  40652b:	jmp    0x405c40
  406530:	cmp    dx,0x1
  406534:	lea    rax,[rip+0x10494]        # 0x4169cf
  40653b:	je     0x405c40
  406541:	cmp    dx,0x2
  406545:	lea    rax,[rip+0x10489]        # 0x4169d5
  40654c:	lea    rdx,[rip+0x10488]        # 0x4169db
  406553:	cmovne rax,rdx
  406557:	jmp    0x405c40
  40655c:	cmp    dx,0x1
  406560:	lea    rax,[rip+0x107d6]        # 0x416d3d
  406567:	lea    rdx,[rip+0x10754]        # 0x416cc2
  40656e:	cmovne rax,rdx
  406572:	jmp    0x405c40
  406577:	cmp    dx,0x1
  40657b:	lea    rax,[rip+0x102c2]        # 0x416844
  406582:	je     0x405c40
  406588:	cmp    dx,0x2
  40658c:	lea    rax,[rip+0x102b7]        # 0x41684a
  406593:	lea    rdx,[rip+0x102b6]        # 0x416850
  40659a:	cmovne rax,rdx
  40659e:	jmp    0x405c40
  4065a3:	cmp    dx,0x1f
  4065a7:	ja     0x406dab
  4065ad:	lea    rax,[rip+0x10a24]        # 0x416fd8
  4065b4:	movzx  edx,dx
  4065b7:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4065bb:	add    rax,rdx
  4065be:	jmp    rax
  4065c0:	cmp    dx,0x1
  4065c4:	lea    rax,[rip+0x1041c]        # 0x4169e7
  4065cb:	lea    rdx,[rip+0x1041b]        # 0x4169ed
  4065d2:	cmovne rax,rdx
  4065d6:	jmp    0x405c40
  4065db:	cmp    dx,0x1
  4065df:	lea    rax,[rip+0x102e4]        # 0x4168ca
  4065e6:	lea    rdx,[rip+0x102e3]        # 0x4168d0
  4065ed:	cmovne rax,rdx
  4065f1:	jmp    0x405c40
  4065f6:	cmp    dx,0x1
  4065fa:	lea    rax,[rip+0x101bf]        # 0x4167c0
  406601:	lea    rdx,[rip+0x101be]        # 0x4167c6
  406608:	cmovne rax,rdx
  40660c:	jmp    0x405c40
  406611:	cmp    dx,0x1
  406615:	lea    rax,[rip+0x10240]        # 0x41685c
  40661c:	lea    rdx,[rip+0x1023f]        # 0x416862
  406623:	cmovne rax,rdx
  406627:	jmp    0x405c40
  40662c:	cmp    dx,0x1
  406630:	lea    rax,[rip+0xfed9]        # 0x416510
  406637:	lea    rdx,[rip+0xfed8]        # 0x416516
  40663e:	cmovne rax,rdx
  406642:	jmp    0x405c40
  406647:	cmp    dx,0x1
  40664b:	lea    rax,[rip+0x102ce]        # 0x416920
  406652:	lea    rdx,[rip+0x1025a]        # 0x4168b3
  406659:	cmovne rax,rdx
  40665d:	jmp    0x405c40
  406662:	cmp    dx,0x1
  406666:	lea    rax,[rip+0x106fa]        # 0x416d67
  40666d:	lea    rdx,[rip+0x106f9]        # 0x416d6d
  406674:	cmovne rax,rdx
  406678:	jmp    0x405c40
  40667d:	cmp    dx,0x1
  406681:	lea    rax,[rip+0x106bb]        # 0x416d43
  406688:	lea    rdx,[rip+0x106ba]        # 0x416d49
  40668f:	cmovne rax,rdx
  406693:	jmp    0x405c40
  406698:	cmp    dx,0x1
  40669c:	lea    rax,[rip+0x1063a]        # 0x416cdd
  4066a3:	lea    rdx,[rip+0x10639]        # 0x416ce3
  4066aa:	cmovne rax,rdx
  4066ae:	jmp    0x405c40
  4066b3:	cmp    dx,0x1
  4066b7:	lea    rax,[rip+0x10616]        # 0x416cd4
  4066be:	lea    rdx,[rip+0x10615]        # 0x416cda
  4066c5:	cmovne rax,rdx
  4066c9:	jmp    0x405c40
  4066ce:	cmp    dx,0x1
  4066d2:	lea    rax,[rip+0x1054d]        # 0x416c26
  4066d9:	lea    rdx,[rip+0x1054d]        # 0x416c2d
  4066e0:	cmovne rax,rdx
  4066e4:	jmp    0x405c40
  4066e9:	cmp    dx,0x1
  4066ed:	lea    rax,[rip+0x102d2]        # 0x4169c6
  4066f4:	lea    rdx,[rip+0x102d1]        # 0x4169cc
  4066fb:	cmovne rax,rdx
  4066ff:	jmp    0x405c40
  406704:	cmp    dx,0x1
  406708:	lea    rax,[rip+0x1046e]        # 0x416b7d
  40670f:	je     0x405c40
  406715:	lea    rax,[rip+0x1045d]        # 0x416b79
  40671c:	jb     0x405c40
  406722:	cmp    dx,0x2
  406726:	lea    rax,[rip+0x1045b]        # 0x416b88
  40672d:	je     0x405c40
  406733:	cmp    dx,0x1f
  406737:	lea    rax,[rip+0x10446]        # 0x416b84
  40673e:	lea    rdx,[rip+0x1044a]        # 0x416b8f
  406745:	cmovne rax,rdx
  406749:	jmp    0x405c40
  40674e:	cmp    dx,0x1
  406752:	lea    rax,[rip+0xfe8e]        # 0x4165e7
  406759:	lea    rdx,[rip+0xfe8d]        # 0x4165ed
  406760:	cmovne rax,rdx
  406764:	jmp    0x405c40
  406769:	cmp    dx,0x2
  40676d:	lea    rax,[rip+0xfe58]        # 0x4165cc
  406774:	je     0x405c40
  40677a:	jbe    0x4072e3
  406780:	cmp    dx,0x1d
  406784:	lea    rax,[rip+0xfe35]        # 0x4165c0
  40678b:	je     0x405c40
  406791:	cmp    dx,0x1e
  406795:	lea    rax,[rip+0xfe0f]        # 0x4165ab
  40679c:	je     0x405c40
  4067a2:	lea    rax,[rip+0xfe32]        # 0x4165db
  4067a9:	jmp    0x405c40
  4067ae:	cmp    dx,0x1
  4067b2:	lea    rax,[rip+0xfde0]        # 0x416599
  4067b9:	lea    rdx,[rip+0xfddf]        # 0x41659f
  4067c0:	cmovne rax,rdx
  4067c4:	jmp    0x405c40
  4067c9:	cmp    dx,0x1
  4067cd:	lea    rax,[rip+0x10578]        # 0x416d4c
  4067d4:	lea    rdx,[rip+0x10577]        # 0x416d52
  4067db:	cmovne rax,rdx
  4067df:	jmp    0x405c40
  4067e4:	cmp    dx,0x1
  4067e8:	lea    rax,[rip+0xffda]        # 0x4167c9
  4067ef:	lea    rdx,[rip+0xffd9]        # 0x4167cf
  4067f6:	cmovne rax,rdx
  4067fa:	jmp    0x405c40
  4067ff:	cmp    dx,0x1
  406803:	lea    rax,[rip+0x10456]        # 0x416c60
  40680a:	lea    rdx,[rip+0x1044c]        # 0x416c5d
  406811:	cmovne rax,rdx
  406815:	jmp    0x405c40
  40681a:	cmp    dx,0x1
  40681e:	lea    rax,[rip+0x1018f]        # 0x4169b4
  406825:	lea    rdx,[rip+0x1018e]        # 0x4169ba
  40682c:	cmovne rax,rdx
  406830:	jmp    0x405c40
  406835:	cmp    dx,0x1
  406839:	lea    rax,[rip+0x1016b]        # 0x4169ab
  406840:	lea    rdx,[rip+0x1016a]        # 0x4169b1
  406847:	cmovne rax,rdx
  40684b:	jmp    0x405c40
  406850:	cmp    dx,0x1
  406854:	lea    rax,[rip+0xff5c]        # 0x4167b7
  40685b:	lea    rdx,[rip+0xff5b]        # 0x4167bd
  406862:	cmovne rax,rdx
  406866:	jmp    0x405c40
  40686b:	cmp    dx,0x1
  40686f:	lea    rax,[rip+0x102f1]        # 0x416b67
  406876:	lea    rdx,[rip+0x102f0]        # 0x416b6d
  40687d:	cmovne rax,rdx
  406881:	jmp    0x405c40
  406886:	cmp    dx,0x1
  40688a:	lea    rax,[rip+0xfd5f]        # 0x4165f0
  406891:	lea    rdx,[rip+0xfd5e]        # 0x4165f6
  406898:	cmovne rax,rdx
  40689c:	jmp    0x405c40
  4068a1:	cmp    dx,0x1
  4068a5:	lea    rax,[rip+0x10455]        # 0x416d01
  4068ac:	lea    rdx,[rip+0x10454]        # 0x416d07
  4068b3:	cmovne rax,rdx
  4068b7:	jmp    0x405c40
  4068bc:	cmp    dx,0x1
  4068c0:	lea    rax,[rip+0x10032]        # 0x4168f9
  4068c7:	lea    rdx,[rip+0x10031]        # 0x4168ff
  4068ce:	cmovne rax,rdx
  4068d2:	jmp    0x405c40
  4068d7:	cmp    dx,0x1
  4068db:	lea    rax,[rip+0x10428]        # 0x416d0a
  4068e2:	je     0x405c40
  4068e8:	cmp    dx,0x2
  4068ec:	lea    rax,[rip+0x1041d]        # 0x416d10
  4068f3:	lea    rdx,[rip+0x1041c]        # 0x416d16
  4068fa:	cmovne rax,rdx
  4068fe:	jmp    0x405c40
  406903:	cmp    dx,0x1
  406907:	lea    rax,[rip+0x103d8]        # 0x416ce6
  40690e:	lea    rdx,[rip+0x103d7]        # 0x416cec
  406915:	cmovne rax,rdx
  406919:	jmp    0x405c40
  40691e:	cmp    dx,0x1
  406922:	lea    rax,[rip+0x10387]        # 0x416cb0
  406929:	lea    rdx,[rip+0x10386]        # 0x416cb6
  406930:	cmovne rax,rdx
  406934:	jmp    0x405c40
  406939:	cmp    dx,0x1
  40693d:	lea    rax,[rip+0x102f6]        # 0x416c3a
  406944:	je     0x405c40
  40694a:	cmp    dx,0x2
  40694e:	lea    rax,[rip+0x102eb]        # 0x416c40
  406955:	lea    rdx,[rip+0x102ea]        # 0x416c46
  40695c:	cmovne rax,rdx
  406960:	jmp    0x405c40
  406965:	cmp    dx,0x1
  406969:	lea    rax,[rip+0xfba9]        # 0x416519
  406970:	lea    rdx,[rip+0xfba8]        # 0x41651f
  406977:	cmovne rax,rdx
  40697b:	jmp    0x405c40
  406980:	cmp    dx,0x1
  406984:	lea    rax,[rip+0x101d3]        # 0x416b5e
  40698b:	lea    rdx,[rip+0x101d2]        # 0x416b64
  406992:	cmovne rax,rdx
  406996:	jmp    0x405c40
  40699b:	cmp    dx,0x1f
  40699f:	ja     0x407093
  4069a5:	lea    rax,[rip+0x106ac]        # 0x417058
  4069ac:	movzx  edx,dx
  4069af:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4069b3:	add    rax,rdx
  4069b6:	jmp    rax
  4069b8:	cmp    dx,0x1
  4069bc:	lea    rax,[rip+0x10116]        # 0x416ad9
  4069c3:	je     0x405c40
  4069c9:	cmp    dx,0x2
  4069cd:	lea    rax,[rip+0x1010b]        # 0x416adf
  4069d4:	lea    rdx,[rip+0x1010a]        # 0x416ae5
  4069db:	cmovne rax,rdx
  4069df:	jmp    0x405c40
  4069e4:	cmp    dx,0x1
  4069e8:	lea    rax,[rip+0x100d2]        # 0x416ac1
  4069ef:	je     0x405c40
  4069f5:	cmp    dx,0x2
  4069f9:	lea    rax,[rip+0x100c7]        # 0x416ac7
  406a00:	lea    rdx,[rip+0x100c6]        # 0x416acd
  406a07:	cmovne rax,rdx
  406a0b:	jmp    0x405c40
  406a10:	cmp    dx,0x1
  406a14:	lea    rax,[rip+0x100b5]        # 0x416ad0
  406a1b:	lea    rdx,[rip+0x100b4]        # 0x416ad6
  406a22:	cmovne rax,rdx
  406a26:	jmp    0x405c40
  406a2b:	cmp    dx,0x1
  406a2f:	lea    rax,[rip+0x10058]        # 0x416a8e
  406a36:	je     0x405c40
  406a3c:	cmp    dx,0x2
  406a40:	lea    rax,[rip+0x1004d]        # 0x416a94
  406a47:	lea    rdx,[rip+0x1004c]        # 0x416a9a
  406a4e:	cmovne rax,rdx
  406a52:	jmp    0x405c40
  406a57:	cmp    dx,0x1
  406a5b:	lea    rax,[rip+0x10023]        # 0x416a85
  406a62:	lea    rdx,[rip+0x10022]        # 0x416a8b
  406a69:	cmovne rax,rdx
  406a6d:	jmp    0x405c40
  406a72:	cmp    dx,0x2
  406a76:	lea    rax,[rip+0xffd0]        # 0x416a4d
  406a7d:	je     0x405c40
  406a83:	jbe    0x4072cd
  406a89:	cmp    dx,0x1e
  406a8d:	lea    rax,[rip+0xffb6]        # 0x416a4a
  406a94:	je     0x405c40
  406a9a:	cmp    dx,0x1f
  406a9e:	lea    rax,[rip+0xff9c]        # 0x416a41
  406aa5:	je     0x405c40
  406aab:	lea    rax,[rip+0xffa1]        # 0x416a53
  406ab2:	jmp    0x405c40
  406ab7:	cmp    dx,0x2
  406abb:	lea    rax,[rip+0xfc6c]        # 0x41672e
  406ac2:	je     0x405c40
  406ac8:	cmp    dx,0x3
  406acc:	lea    rax,[rip+0xfc61]        # 0x416734
  406ad3:	je     0x405c40
  406ad9:	cmp    dx,0x1
  406add:	lea    rax,[rip+0xfc44]        # 0x416728
  406ae4:	lea    rdx,[rip+0xfc4f]        # 0x41673a
  406aeb:	cmovne rax,rdx
  406aef:	jmp    0x405c40
  406af4:	cmp    dx,0x1
  406af8:	lea    rax,[rip+0xfe88]        # 0x416987
  406aff:	lea    rdx,[rip+0xfe87]        # 0x41698d
  406b06:	cmovne rax,rdx
  406b0a:	jmp    0x405c40
  406b0f:	cmp    dx,0x1
  406b13:	lea    rax,[rip+0xfe1b]        # 0x416935
  406b1a:	lea    rdx,[rip+0xfe1a]        # 0x41693b
  406b21:	cmovne rax,rdx
  406b25:	jmp    0x405c40
  406b2a:	cmp    dx,0x1
  406b2e:	lea    rax,[rip+0xfdf1]        # 0x416926
  406b35:	je     0x405c40
  406b3b:	cmp    dx,0x2
  406b3f:	lea    rax,[rip+0xfde6]        # 0x41692c
  406b46:	lea    rdx,[rip+0xfde5]        # 0x416932
  406b4d:	cmovne rax,rdx
  406b51:	jmp    0x405c40
  406b56:	cmp    dx,0x1
  406b5a:	lea    rax,[rip+0xfd86]        # 0x4168e7
  406b61:	lea    rdx,[rip+0xfd85]        # 0x4168ed
  406b68:	cmovne rax,rdx
  406b6c:	jmp    0x405c40
  406b71:	cmp    dx,0x1
  406b75:	lea    rax,[rip+0xfd57]        # 0x4168d3
  406b7c:	lea    rdx,[rip+0xfd56]        # 0x4168d9
  406b83:	cmovne rax,rdx
  406b87:	jmp    0x405c40
  406b8c:	cmp    dx,0x1
  406b90:	lea    rax,[rip+0xfd2a]        # 0x4168c1
  406b97:	lea    rdx,[rip+0xfd29]        # 0x4168c7
  406b9e:	cmovne rax,rdx
  406ba2:	jmp    0x405c40
  406ba7:	cmp    dx,0xf
  406bab:	ja     0x40727f
  406bb1:	lea    rax,[rip+0x10520]        # 0x4170d8
  406bb8:	movzx  edx,dx
  406bbb:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406bbf:	add    rax,rdx
  406bc2:	jmp    rax
  406bc4:	cmp    dx,0x1
  406bc8:	lea    rax,[rip+0xfc03]        # 0x4167d2
  406bcf:	lea    rdx,[rip+0xfc02]        # 0x4167d8
  406bd6:	cmovne rax,rdx
  406bda:	jmp    0x405c40
  406bdf:	cmp    dx,0x15
  406be3:	ja     0x407267
  406be9:	lea    rax,[rip+0x10528]        # 0x417118
  406bf0:	movzx  edx,dx
  406bf3:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406bf7:	add    rax,rdx
  406bfa:	jmp    rax
  406bfc:	cmp    dx,0x12
  406c00:	ja     0x40728b
  406c06:	lea    rax,[rip+0x10563]        # 0x417170
  406c0d:	movzx  edx,dx
  406c10:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c14:	add    rax,rdx
  406c17:	jmp    rax
  406c19:	cmp    dx,0x1
  406c1d:	lea    rax,[rip+0xfc62]        # 0x416886
  406c24:	lea    rdx,[rip+0xfc61]        # 0x41688c
  406c2b:	cmovne rax,rdx
  406c2f:	jmp    0x405c40
  406c34:	cmp    dx,0x1
  406c38:	lea    rax,[rip+0xfacc]        # 0x41670b
  406c3f:	lea    rdx,[rip+0xfacb]        # 0x416711
  406c46:	cmovne rax,rdx
  406c4a:	jmp    0x405c40
  406c4f:	cmp    dx,0x1
  406c53:	lea    rax,[rip+0xfaa8]        # 0x416702
  406c5a:	lea    rdx,[rip+0xfaa7]        # 0x416708
  406c61:	cmovne rax,rdx
  406c65:	jmp    0x405c40
  406c6a:	cmp    dx,0x1f
  406c6e:	ja     0x406d7b
  406c74:	lea    rax,[rip+0x10541]        # 0x4171bc
  406c7b:	movzx  edx,dx
  406c7e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c82:	add    rax,rdx
  406c85:	jmp    rax
  406c87:	cmp    dx,0x1
  406c8b:	lea    rax,[rip+0xf99a]        # 0x41662c
  406c92:	lea    rdx,[rip+0xf999]        # 0x416632
  406c99:	cmovne rax,rdx
  406c9d:	jmp    0x405c40
  406ca2:	cmp    dx,0x1
  406ca6:	lea    rax,[rip+0xf964]        # 0x416611
  406cad:	lea    rdx,[rip+0xf963]        # 0x416617
  406cb4:	cmovne rax,rdx
  406cb8:	jmp    0x405c40
  406cbd:	cmp    dx,0x10
  406cc1:	ja     0x40725b
  406cc7:	lea    rax,[rip+0x1056e]        # 0x41723c
  406cce:	movzx  edx,dx
  406cd1:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406cd5:	add    rax,rdx
  406cd8:	jmp    rax
  406cda:	cmp    dx,0x5
  406cde:	ja     0x406d87
  406ce4:	lea    rax,[rip+0x10595]        # 0x417280
  406ceb:	movzx  edx,dx
  406cee:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406cf2:	add    rax,rdx
  406cf5:	jmp    rax
  406cf7:	lea    rax,[rip+0xfa02]        # 0x416700
  406cfe:	jmp    0x405c40
  406d03:	lea    rax,[rip+0xf936]        # 0x416640
  406d0a:	jmp    0x405c40
  406d0f:	lea    rax,[rip+0xf930]        # 0x416646
  406d16:	jmp    0x405c40
  406d1b:	lea    rax,[rip+0xfb49]        # 0x41686b
  406d22:	jmp    0x405c40
  406d27:	lea    rax,[rip+0xfb37]        # 0x416865
  406d2e:	jmp    0x405c40
  406d33:	lea    rax,[rip+0xf912]        # 0x41664c
  406d3a:	jmp    0x405c40
  406d3f:	lea    rax,[rip+0xfb2b]        # 0x416871
  406d46:	jmp    0x405c40
  406d4b:	lea    rax,[rip+0xfb2b]        # 0x41687d
  406d52:	jmp    0x405c40
  406d57:	lea    rax,[rip+0xfb19]        # 0x416877
  406d5e:	jmp    0x405c40
  406d63:	lea    rax,[rip+0xf8ee]        # 0x416658
  406d6a:	jmp    0x405c40
  406d6f:	lea    rax,[rip+0xf8dc]        # 0x416652
  406d76:	jmp    0x405c40
  406d7b:	lea    rax,[rip+0xf8dc]        # 0x41665e
  406d82:	jmp    0x405c40
  406d87:	lea    rax,[rip+0xfaf5]        # 0x416883
  406d8e:	jmp    0x405c40
  406d93:	lea    rax,[rip+0xfd57]        # 0x416af1
  406d9a:	jmp    0x405c40
  406d9f:	lea    rax,[rip+0xfd45]        # 0x416aeb
  406da6:	jmp    0x405c40
  406dab:	lea    rax,[rip+0xfd36]        # 0x416ae8
  406db2:	jmp    0x405c40
  406db7:	lea    rax,[rip+0xfd6e]        # 0x416b2c
  406dbe:	jmp    0x405c40
  406dc3:	lea    rax,[rip+0xfd66]        # 0x416b30
  406dca:	jmp    0x405c40
  406dcf:	lea    rax,[rip+0xfd4f]        # 0x416b25
  406dd6:	jmp    0x405c40
  406ddb:	lea    rax,[rip+0xfd38]        # 0x416b1a
  406de2:	jmp    0x405c40
  406de7:	lea    rax,[rip+0xfd25]        # 0x416b13
  406dee:	jmp    0x405c40
  406df3:	lea    rax,[rip+0xfd0e]        # 0x416b08
  406dfa:	jmp    0x405c40
  406dff:	lea    rax,[rip+0xfcfb]        # 0x416b01
  406e06:	jmp    0x405c40
  406e0b:	lea    rax,[rip+0xfce5]        # 0x416af7
  406e12:	jmp    0x405c40
  406e17:	lea    rax,[rip+0xfcf1]        # 0x416b0f
  406e1e:	jmp    0x405c40
  406e23:	lea    rax,[rip+0xfcf7]        # 0x416b21
  406e2a:	jmp    0x405c40
  406e2f:	lea    rax,[rip+0xf9a5]        # 0x4167db
  406e36:	jmp    0x405c40
  406e3b:	lea    rax,[rip+0xf9ea]        # 0x41682c
  406e42:	jmp    0x405c40
  406e47:	lea    rax,[rip+0xf9d8]        # 0x416826
  406e4e:	jmp    0x405c40
  406e53:	lea    rax,[rip+0xf942]        # 0x41679c
  406e5a:	jmp    0x405c40
  406e5f:	lea    rax,[rip+0xf930]        # 0x416796
  406e66:	jmp    0x405c40
  406e6b:	lea    rax,[rip+0xf91e]        # 0x416790
  406e72:	jmp    0x405c40
  406e77:	lea    rax,[rip+0xf90c]        # 0x41678a
  406e7e:	jmp    0x405c40
  406e83:	lea    rax,[rip+0xf8fa]        # 0x416784
  406e8a:	jmp    0x405c40
  406e8f:	lea    rax,[rip+0xf8e8]        # 0x41677e
  406e96:	jmp    0x405c40
  406e9b:	lea    rax,[rip+0xf8d6]        # 0x416778
  406ea2:	jmp    0x405c40
  406ea7:	lea    rax,[rip+0xf8c4]        # 0x416772
  406eae:	jmp    0x405c40
  406eb3:	lea    rax,[rip+0xf8b2]        # 0x41676c
  406eba:	jmp    0x405c40
  406ebf:	lea    rax,[rip+0xf8a0]        # 0x416766
  406ec6:	jmp    0x405c40
  406ecb:	lea    rax,[rip+0xf88e]        # 0x416760
  406ed2:	jmp    0x405c40
  406ed7:	lea    rax,[rip+0xf87c]        # 0x41675a
  406ede:	jmp    0x405c40
  406ee3:	lea    rax,[rip+0xf86a]        # 0x416754
  406eea:	jmp    0x405c40
  406eef:	lea    rax,[rip+0xf858]        # 0x41674e
  406ef6:	jmp    0x405c40
  406efb:	lea    rax,[rip+0xf846]        # 0x416748
  406f02:	jmp    0x405c40
  406f07:	lea    rax,[rip+0xfceb]        # 0x416bf9
  406f0e:	jmp    0x405c40
  406f13:	lea    rax,[rip+0xfcd9]        # 0x416bf3
  406f1a:	jmp    0x405c40
  406f1f:	lea    rax,[rip+0xfcc7]        # 0x416bed
  406f26:	jmp    0x405c40
  406f2b:	lea    rax,[rip+0xfcb5]        # 0x416be7
  406f32:	jmp    0x405c40
  406f37:	lea    rax,[rip+0xfca3]        # 0x416be1
  406f3e:	jmp    0x405c40
  406f43:	lea    rax,[rip+0xfc91]        # 0x416bdb
  406f4a:	jmp    0x405c40
  406f4f:	lea    rax,[rip+0xfc7f]        # 0x416bd5
  406f56:	jmp    0x405c40
  406f5b:	lea    rax,[rip+0xfc6d]        # 0x416bcf
  406f62:	jmp    0x405c40
  406f67:	lea    rax,[rip+0xfc5b]        # 0x416bc9
  406f6e:	jmp    0x405c40
  406f73:	lea    rax,[rip+0xfc49]        # 0x416bc3
  406f7a:	jmp    0x405c40
  406f7f:	lea    rax,[rip+0xfc37]        # 0x416bbd
  406f86:	jmp    0x405c40
  406f8b:	lea    rax,[rip+0xfc25]        # 0x416bb7
  406f92:	jmp    0x405c40
  406f97:	lea    rax,[rip+0xfc0c]        # 0x416baa
  406f9e:	jmp    0x405c40
  406fa3:	lea    rax,[rip+0xfbfa]        # 0x416ba4
  406faa:	jmp    0x405c40
  406faf:	lea    rax,[rip+0xfbe8]        # 0x416b9e
  406fb6:	jmp    0x405c40
  406fbb:	lea    rax,[rip+0xfc4f]        # 0x416c11
  406fc2:	jmp    0x405c40
  406fc7:	lea    rax,[rip+0xfc3d]        # 0x416c0b
  406fce:	jmp    0x405c40
  406fd3:	lea    rax,[rip+0xfc2b]        # 0x416c05
  406fda:	jmp    0x405c40
  406fdf:	lea    rax,[rip+0xfc19]        # 0x416bff
  406fe6:	jmp    0x405c40
  406feb:	lea    rax,[rip+0xf801]        # 0x4167f3
  406ff2:	jmp    0x405c40
  406ff7:	lea    rax,[rip+0xf7ef]        # 0x4167ed
  406ffe:	jmp    0x405c40
  407003:	lea    rax,[rip+0xf7dd]        # 0x4167e7
  40700a:	jmp    0x405c40
  40700f:	lea    rax,[rip+0xf7cb]        # 0x4167e1
  407016:	jmp    0x405c40
  40701b:	lea    rax,[rip+0xf7fe]        # 0x416820
  407022:	jmp    0x405c40
  407027:	lea    rax,[rip+0xf7ec]        # 0x41681a
  40702e:	jmp    0x405c40
  407033:	lea    rax,[rip+0xf7da]        # 0x416814
  40703a:	jmp    0x405c40
  40703f:	lea    rax,[rip+0xf7c8]        # 0x41680e
  407046:	jmp    0x405c40
  40704b:	lea    rax,[rip+0xf7b6]        # 0x416808
  407052:	jmp    0x405c40
  407057:	lea    rax,[rip+0xf7a4]        # 0x416802
  40705e:	jmp    0x405c40
  407063:	lea    rax,[rip+0xf795]        # 0x4167ff
  40706a:	jmp    0x405c40
  40706f:	lea    rax,[rip+0xf783]        # 0x4167f9
  407076:	jmp    0x405c40
  40707b:	lea    rax,[rip+0xf5fa]        # 0x41667c
  407082:	jmp    0x405c40
  407087:	lea    rax,[rip+0xf5df]        # 0x41666d
  40708e:	jmp    0x405c40
  407093:	lea    rax,[rip+0xf5d0]        # 0x41666a
  40709a:	jmp    0x405c40
  40709f:	lea    rax,[rip+0xf5d3]        # 0x416679
  4070a6:	jmp    0x405c40
  4070ab:	lea    rax,[rip+0xf5e2]        # 0x416694
  4070b2:	jmp    0x405c40
  4070b7:	lea    rax,[rip+0xf61e]        # 0x4166dc
  4070be:	jmp    0x405c40
  4070c3:	lea    rax,[rip+0xf612]        # 0x4166dc
  4070ca:	jmp    0x405c40
  4070cf:	lea    rax,[rip+0xf60f]        # 0x4166e5
  4070d6:	jmp    0x405c40
  4070db:	lea    rax,[rip+0xf5dc]        # 0x4166be
  4070e2:	jmp    0x405c40
  4070e7:	lea    rax,[rip+0xf59a]        # 0x416688
  4070ee:	jmp    0x405c40
  4070f3:	lea    rax,[rip+0xfb23]        # 0x416c1d
  4070fa:	jmp    0x405c40
  4070ff:	lea    rax,[rip+0xfb11]        # 0x416c17
  407106:	jmp    0x405c40
  40710b:	lea    rax,[rip+0xf696]        # 0x4167a8
  407112:	jmp    0x405c40
  407117:	lea    rax,[rip+0xf684]        # 0x4167a2
  40711e:	jmp    0x405c40
  407123:	lea    rax,[rip+0xf684]        # 0x4167ae
  40712a:	jmp    0x405c40
  40712f:	lea    rax,[rip+0xf45a]        # 0x416590
  407136:	jmp    0x405c40
  40713b:	lea    rax,[rip+0xf56d]        # 0x4166af
  407142:	jmp    0x405c40
  407147:	lea    rax,[rip+0xf534]        # 0x416682
  40714e:	jmp    0x405c40
  407153:	lea    rax,[rip+0xf597]        # 0x4166f1
  40715a:	jmp    0x405c40
  40715f:	lea    rax,[rip+0xf567]        # 0x4166cd
  407166:	jmp    0x405c40
  40716b:	lea    rax,[rip+0xf51c]        # 0x41668e
  407172:	jmp    0x405c40
  407177:	lea    rax,[rip+0xf561]        # 0x4166df
  40717e:	jmp    0x405c40
  407183:	lea    rax,[rip+0xf4e9]        # 0x416673
  40718a:	jmp    0x405c40
  40718f:	lea    rax,[rip+0xf50a]        # 0x4166a0
  407196:	jmp    0x405c40
  40719b:	lea    rax,[rip+0xf3e8]        # 0x41658a
  4071a2:	jmp    0x405c40
  4071a7:	lea    rax,[rip+0xf3d6]        # 0x416584
  4071ae:	jmp    0x405c40
  4071b3:	lea    rax,[rip+0xf3c4]        # 0x41657e
  4071ba:	jmp    0x405c40
  4071bf:	lea    rax,[rip+0xf3b2]        # 0x416578
  4071c6:	jmp    0x405c40
  4071cb:	lea    rax,[rip+0xf3a0]        # 0x416572
  4071d2:	jmp    0x405c40
  4071d7:	lea    rax,[rip+0xf38e]        # 0x41656c
  4071de:	jmp    0x405c40
  4071e3:	lea    rax,[rip+0xf37c]        # 0x416566
  4071ea:	jmp    0x405c40
  4071ef:	lea    rax,[rip+0xf36a]        # 0x416560
  4071f6:	jmp    0x405c40
  4071fb:	lea    rax,[rip+0xf358]        # 0x41655a
  407202:	jmp    0x405c40
  407207:	lea    rax,[rip+0xf346]        # 0x416554
  40720e:	jmp    0x405c40
  407213:	lea    rax,[rip+0xf334]        # 0x41654e
  40721a:	jmp    0x405c40
  40721f:	lea    rax,[rip+0xf322]        # 0x416548
  407226:	jmp    0x405c40
  40722b:	lea    rax,[rip+0xf310]        # 0x416542
  407232:	jmp    0x405c40
  407237:	lea    rax,[rip+0xf2fe]        # 0x41653c
  40723e:	jmp    0x405c40
  407243:	lea    rax,[rip+0xf2ec]        # 0x416536
  40724a:	jmp    0x405c40
  40724f:	lea    rax,[rip+0xf8a7]        # 0x416afd
  407256:	jmp    0x405c40
  40725b:	lea    rax,[rip+0xf334]        # 0x416596
  407262:	jmp    0x405c40
  407267:	lea    rax,[rip+0xf9b5]        # 0x416c23
  40726e:	jmp    0x405c40
  407273:	lea    rax,[rip+0xf3ff]        # 0x416679
  40727a:	jmp    0x405c40
  40727f:	lea    rax,[rip+0xf579]        # 0x4167ff
  407286:	jmp    0x405c40
  40728b:	lea    rax,[rip+0xf522]        # 0x4167b4
  407292:	jmp    0x405c40
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	mov    BYTE PTR [rdx],0x0
  4072a3:	lea    rax,[rip+0x14f96]        # 0x41c240
  4072aa:	jmp    0x405c40
  4072af:	cmp    dx,0x1
  4072b3:	je     0x4072c1
  4072b5:	lea    rax,[rip+0xf773]        # 0x416a2f
  4072bc:	jmp    0x405c40
  4072c1:	lea    rax,[rip+0xf75b]        # 0x416a23
  4072c8:	jmp    0x405c40
  4072cd:	cmp    dx,0x1
  4072d1:	lea    rax,[rip+0xf76c]        # 0x416a44
  4072d8:	je     0x405c40
  4072de:	jmp    0x406aab
  4072e3:	cmp    dx,0x1
  4072e7:	lea    rax,[rip+0xf2c6]        # 0x4165b4
  4072ee:	je     0x405c40
  4072f4:	jmp    0x4067a2
  4072f9:	nop    DWORD PTR [rax+0x0]
  407300:	push   rbx
  407301:	sub    rsp,0x20
  407305:	cmp    ecx,0x5
  407308:	ja     0x4073e0
  40730e:	xor    edx,edx
  407310:	call   0x404bf0
  407315:	mov    edx,0x3b
  40731a:	mov    rcx,rax
  40731d:	mov    rbx,rax
  407320:	call   0x4113c8
  407325:	test   rax,rax
  407328:	je     0x407339
  40732a:	xor    edx,edx
  40732c:	mov    ecx,0x2
  407331:	call   0x404bf0
  407336:	mov    rbx,rax
  407339:	lea    rcx,[rip+0xad40]        # 0x412080
  407340:	call   0x407620
  407345:	test   eax,eax
  407347:	jne    0x407428
  40734d:	mov    eax,DWORD PTR [rip+0x153d5]        # 0x41c728
  407353:	test   eax,eax
  407355:	je     0x40736e
  407357:	lea    rdx,[rip+0x14fe2]        # 0x41c340
  40735e:	mov    rcx,rbx
  407361:	call   0x4113c0
  407366:	test   eax,eax
  407368:	je     0x407410
  40736e:	lea    rcx,[rip+0x153cb]        # 0x41c740
  407375:	mov    r8d,0x1ae
  40737b:	mov    rdx,rbx
  40737e:	call   0x411398
  407383:	mov    BYTE PTR [rip+0x15564],0x0        # 0x41c8ee
  40738a:	mov    DWORD PTR [rip+0x1555c],0x0        # 0x41c8f0
  407394:	mov    edx,0x2
  407399:	lea    rcx,[rip+0xffffffffffffe6d0]        # 0x405a70
  4073a0:	call   QWORD PTR [rip+0x180e2]        # 0x41f488
  4073a6:	mov    eax,DWORD PTR [rip+0x15544]        # 0x41c8f0
  4073ac:	test   eax,eax
  4073ae:	jne    0x4073f0
  4073b0:	lea    rcx,[rip+0xacc9]        # 0x412080
  4073b7:	call   0x407690
  4073bc:	test   eax,eax
  4073be:	jne    0x407428
  4073c0:	mov    ecx,DWORD PTR [rip+0x1552a]        # 0x41c8f0
  4073c6:	test   ecx,ecx
  4073c8:	je     0x4073e0
  4073ca:	movzx  ecx,cx
  4073cd:	add    rsp,0x20
  4073d1:	pop    rbx
  4073d2:	jmp    0x405ba0
  4073d7:	nop    WORD PTR [rax+rax*1+0x0]
  4073e0:	xor    eax,eax
  4073e2:	add    rsp,0x20
  4073e6:	pop    rbx
  4073e7:	ret    
  4073e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4073f0:	lea    rcx,[rip+0x14f49]        # 0x41c340
  4073f7:	mov    rdx,rbx
  4073fa:	mov    DWORD PTR [rip+0x15328],eax        # 0x41c728
  407400:	call   0x4113b8
  407405:	jmp    0x4073b0
  407407:	nop    WORD PTR [rax+rax*1+0x0]
  407410:	lea    rcx,[rip+0xac69]        # 0x412080
  407417:	call   0x407690
  40741c:	test   eax,eax
  40741e:	jne    0x407428
  407420:	mov    ecx,DWORD PTR [rip+0x15302]        # 0x41c728
  407426:	jmp    0x4073c6
  407428:	call   0x4114a0
  40742d:	nop
  40742e:	xchg   ax,ax
  407430:	push   rbx
  407431:	sub    rsp,0x20
  407435:	lea    rcx,[rip+0xfe5c]        # 0x417298
  40743c:	mov    rbx,rdx
  40743f:	call   0x411440
  407444:	test   rax,rax
  407447:	je     0x40744e
  407449:	cmp    BYTE PTR [rax],0x0
  40744c:	jne    0x40747d
  40744e:	mov    rcx,rbx
  407451:	call   0x411440
  407456:	test   rax,rax
  407459:	je     0x407460
  40745b:	cmp    BYTE PTR [rax],0x0
  40745e:	jne    0x40747d
  407460:	lea    rcx,[rip+0xfe38]        # 0x41729f
  407467:	call   0x411440
  40746c:	test   rax,rax
  40746f:	je     0x407483
  407471:	cmp    BYTE PTR [rax],0x0
  407474:	mov    edx,0x0
  407479:	cmove  rax,rdx
  40747d:	add    rsp,0x20
  407481:	pop    rbx
  407482:	ret    
  407483:	xor    eax,eax
  407485:	jmp    0x40747d
  407487:	nop    WORD PTR [rax+rax*1+0x0]
  407490:	jmp    0x407430
  407492:	nop    DWORD PTR [rax+0x0]
  407496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074a0:	sub    rsp,0x28
  4074a4:	call   QWORD PTR [rip+0x18046]        # 0x41f4f0
  4074aa:	movzx  ecx,ax
  4074ad:	add    rsp,0x28
  4074b1:	jmp    0x405ba0
  4074b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074c0:	push   rsi
  4074c1:	push   rbx
  4074c2:	sub    rsp,0x28
  4074c6:	mov    ebx,ecx
  4074c8:	mov    rsi,rdx
  4074cb:	call   0x407300
  4074d0:	test   rax,rax
  4074d3:	je     0x4074e0
  4074d5:	add    rsp,0x28
  4074d9:	pop    rbx
  4074da:	pop    rsi
  4074db:	ret    
  4074dc:	nop    DWORD PTR [rax+0x0]
  4074e0:	mov    rdx,rsi
  4074e3:	mov    ecx,ebx
  4074e5:	call   0x407430
  4074ea:	test   rax,rax
  4074ed:	jne    0x4074d5
  4074ef:	add    rsp,0x28
  4074f3:	pop    rbx
  4074f4:	pop    rsi
  4074f5:	jmp    0x4074a0
  4074f7:	nop
  4074f8:	nop
  4074f9:	nop
  4074fa:	nop
  4074fb:	nop
  4074fc:	nop
  4074fd:	nop
  4074fe:	nop
  4074ff:	nop
  407500:	push   rdi
  407501:	push   rsi
  407502:	push   rbx
  407503:	sub    rsp,0x20
  407507:	mov    eax,DWORD PTR [rcx+0x8]
  40750a:	cmp    eax,DWORD PTR [rcx+0xc]
  40750d:	mov    rbx,rcx
  407510:	je     0x407560
  407512:	xor    r9d,r9d
  407515:	xor    r8d,r8d
  407518:	xor    ecx,ecx
  40751a:	mov    edx,0x1
  40751f:	call   QWORD PTR [rip+0x17f4b]        # 0x41f470
  407525:	cmp    rax,0xffffffffffffffff
  407529:	je     0x4075f0
  40752f:	mov    ecx,DWORD PTR [rbx+0x8]
  407532:	mov    r8d,DWORD PTR [rbx+0xc]
  407536:	mov    edx,ecx
  407538:	add    edx,DWORD PTR [rbx+0x10]
  40753b:	mov    r9d,edx
  40753e:	sub    r9d,r8d
  407541:	cmp    edx,r8d
  407544:	mov    r8,QWORD PTR [rbx]
  407547:	cmovae rdx,r9
  40754b:	add    ecx,0x1
  40754e:	mov    QWORD PTR [r8+rdx*8],rax
  407552:	mov    DWORD PTR [rbx+0x8],ecx
  407555:	add    rsp,0x20
  407559:	pop    rbx
  40755a:	pop    rsi
  40755b:	pop    rdi
  40755c:	ret    
  40755d:	nop    DWORD PTR [rax]
  407560:	lea    edx,[rax+rax*1+0x1]
  407564:	mov    rcx,QWORD PTR [rcx]
  407567:	mov    rsi,rdx
  40756a:	shl    rdx,0x3
  40756e:	call   0x4113e0
  407573:	test   rax,rax
  407576:	je     0x4075f0
  407578:	mov    r8d,DWORD PTR [rbx+0x10]
  40757c:	test   r8d,r8d
  40757f:	je     0x4075dc
  407581:	mov    r9d,DWORD PTR [rbx+0x8]
  407585:	mov    edi,DWORD PTR [rbx+0xc]
  407588:	lea    r11d,[r9+r8*1]
  40758c:	cmp    edi,r11d
  40758f:	jae    0x4075b4
  407591:	sub    r11d,edi
  407594:	je     0x4075b4
  407596:	xor    edx,edx
  407598:	nop    DWORD PTR [rax+rax*1+0x0]
  4075a0:	mov    r10,QWORD PTR [rax+rdx*8]
  4075a4:	lea    ecx,[rdi+rdx*1]
  4075a7:	add    rdx,0x1
  4075ab:	cmp    r11d,edx
  4075ae:	mov    QWORD PTR [rax+rcx*8],r10
  4075b2:	ja     0x4075a0
  4075b4:	xor    edx,edx
  4075b6:	test   r9d,r9d
  4075b9:	je     0x4075d5
  4075bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4075c0:	lea    ecx,[r8+rdx*1]
  4075c4:	mov    rcx,QWORD PTR [rax+rcx*8]
  4075c8:	mov    QWORD PTR [rax+rdx*8],rcx
  4075cc:	add    rdx,0x1
  4075d0:	cmp    r9d,edx
  4075d3:	ja     0x4075c0
  4075d5:	mov    DWORD PTR [rbx+0x10],0x0
  4075dc:	mov    QWORD PTR [rbx],rax
  4075df:	mov    DWORD PTR [rbx+0xc],esi
  4075e2:	jmp    0x407512
  4075e7:	nop    WORD PTR [rax+rax*1+0x0]
  4075f0:	mov    rax,0xffffffffffffffff
  4075f7:	add    rsp,0x20
  4075fb:	pop    rbx
  4075fc:	pop    rsi
  4075fd:	pop    rdi
  4075fe:	ret    
  4075ff:	nop
  407600:	push   rbx
  407601:	sub    rsp,0x20
  407605:	mov    rbx,rcx
  407608:	lea    rcx,[rcx+0x8]
  40760c:	call   QWORD PTR [rip+0x17eee]        # 0x41f500
  407612:	mov    DWORD PTR [rbx],0x1
  407618:	add    rsp,0x20
  40761c:	pop    rbx
  40761d:	ret    
  40761e:	xchg   ax,ax
  407620:	push   rsi
  407621:	push   rbx
  407622:	sub    rsp,0x28
  407626:	mov    eax,DWORD PTR [rcx]
  407628:	mov    rbx,rcx
  40762b:	test   eax,eax
  40762d:	je     0x407645
  40762f:	lea    rsi,[rbx+0x8]
  407633:	mov    rcx,rsi
  407636:	call   QWORD PTR [rip+0x17e44]        # 0x41f480
  40763c:	xor    eax,eax
  40763e:	add    rsp,0x28
  407642:	pop    rbx
  407643:	pop    rsi
  407644:	ret    
  407645:	lock add DWORD PTR [rcx+0x4],0x1
  40764a:	je     0x407670
  40764c:	mov    eax,DWORD PTR [rcx]
  40764e:	mov    rsi,QWORD PTR [rip+0x17f0b]        # 0x41f560
  407655:	test   eax,eax
  407657:	jne    0x40762f
  407659:	nop    DWORD PTR [rax+0x0]
  407660:	xor    ecx,ecx
  407662:	call   rsi
  407664:	mov    eax,DWORD PTR [rbx]
  407666:	test   eax,eax
  407668:	je     0x407660
  40766a:	jmp    0x40762f
  40766c:	nop    DWORD PTR [rax+0x0]
  407670:	lea    rsi,[rcx+0x8]
  407674:	mov    rcx,rsi
  407677:	call   QWORD PTR [rip+0x17e83]        # 0x41f500
  40767d:	mov    DWORD PTR [rbx],0x1
  407683:	jmp    0x407633
  407685:	nop
  407686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407690:	sub    rsp,0x28
  407694:	mov    edx,DWORD PTR [rcx]
  407696:	mov    eax,0x16
  40769b:	test   edx,edx
  40769d:	jne    0x4076a4
  40769f:	add    rsp,0x28
  4076a3:	ret    
  4076a4:	add    rcx,0x8
  4076a8:	call   QWORD PTR [rip+0x17e62]        # 0x41f510
  4076ae:	xor    eax,eax
  4076b0:	add    rsp,0x28
  4076b4:	ret    
  4076b5:	nop
  4076b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076c0:	push   rbx
  4076c1:	sub    rsp,0x20
  4076c5:	mov    edx,DWORD PTR [rcx]
  4076c7:	mov    eax,0x16
  4076cc:	test   edx,edx
  4076ce:	jne    0x4076e0
  4076d0:	add    rsp,0x20
  4076d4:	pop    rbx
  4076d5:	ret    
  4076d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076e0:	mov    rbx,rcx
  4076e3:	lea    rcx,[rcx+0x8]
  4076e7:	call   QWORD PTR [rip+0x17d8b]        # 0x41f478
  4076ed:	xor    eax,eax
  4076ef:	mov    DWORD PTR [rbx],0x0
  4076f5:	add    rsp,0x20
  4076f9:	pop    rbx
  4076fa:	ret    
  4076fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407700:	push   rbx
  407701:	sub    rsp,0x20
  407705:	mov    rbx,rcx
  407708:	lea    rcx,[rcx+0x8]
  40770c:	call   QWORD PTR [rip+0x17dee]        # 0x41f500
  407712:	mov    QWORD PTR [rbx+0x30],0x0
  40771a:	mov    DWORD PTR [rbx+0x38],0x0
  407721:	mov    DWORD PTR [rbx+0x3c],0x0
  407728:	mov    DWORD PTR [rbx+0x40],0x0
  40772f:	mov    QWORD PTR [rbx+0x48],0x0
  407737:	mov    DWORD PTR [rbx+0x50],0x0
  40773e:	mov    DWORD PTR [rbx+0x54],0x0
  407745:	mov    DWORD PTR [rbx+0x58],0x0
  40774c:	mov    DWORD PTR [rbx+0x60],0x0
  407753:	mov    DWORD PTR [rbx],0x1
  407759:	add    rsp,0x20
  40775d:	pop    rbx
  40775e:	ret    
  40775f:	nop
  407760:	push   r12
  407762:	push   rbp
  407763:	push   rdi
  407764:	push   rsi
  407765:	push   rbx
  407766:	sub    rsp,0x20
  40776a:	mov    eax,DWORD PTR [rcx]
  40776c:	mov    rbx,rcx
  40776f:	test   eax,eax
  407771:	je     0x4077b0
  407773:	lea    rsi,[rbx+0x8]
  407777:	mov    rcx,rsi
  40777a:	mov    rbp,QWORD PTR [rip+0x17cff]        # 0x41f480
  407781:	call   rbp
  407783:	mov    eax,DWORD PTR [rbx+0x60]
  407786:	mov    r12,QWORD PTR [rip+0x17d83]        # 0x41f510
  40778d:	test   eax,eax
  40778f:	js     0x4077f0
  407791:	add    eax,0x1
  407794:	mov    rcx,rsi
  407797:	mov    DWORD PTR [rbx+0x60],eax
  40779a:	call   r12
  40779d:	xor    eax,eax
  40779f:	add    rsp,0x20
  4077a3:	pop    rbx
  4077a4:	pop    rsi
  4077a5:	pop    rdi
  4077a6:	pop    rbp
  4077a7:	pop    r12
  4077a9:	ret    
  4077aa:	nop    WORD PTR [rax+rax*1+0x0]
  4077b0:	lock add DWORD PTR [rcx+0x4],0x1
  4077b5:	je     0x407870
  4077bb:	mov    eax,DWORD PTR [rcx]
  4077bd:	mov    rdi,QWORD PTR [rip+0x17d9c]        # 0x41f560
  4077c4:	test   eax,eax
  4077c6:	jne    0x407773
  4077c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4077d0:	xor    ecx,ecx
  4077d2:	call   rdi
  4077d4:	mov    eax,DWORD PTR [rbx]
  4077d6:	test   eax,eax
  4077d8:	jne    0x407773
  4077da:	xor    ecx,ecx
  4077dc:	call   rdi
  4077de:	mov    eax,DWORD PTR [rbx]
  4077e0:	test   eax,eax
  4077e2:	je     0x4077d0
  4077e4:	jmp    0x407773
  4077e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077f0:	lea    rcx,[rbx+0x30]
  4077f4:	call   0x407500
  4077f9:	cmp    rax,0xffffffffffffffff
  4077fd:	mov    rdi,rax
  407800:	je     0x407840
  407802:	mov    rcx,rsi
  407805:	call   r12
  407808:	mov    edx,0xffffffff
  40780d:	mov    rcx,rdi
  407810:	call   QWORD PTR [rip+0x17d7a]        # 0x41f590
  407816:	cmp    eax,0x102
  40781b:	je     0x407836
  40781d:	cmp    eax,0xffffffff
  407820:	je     0x407836
  407822:	mov    rcx,rdi
  407825:	call   QWORD PTR [rip+0x17c3d]        # 0x41f468
  40782b:	mov    eax,DWORD PTR [rbx+0x60]
  40782e:	test   eax,eax
  407830:	jg     0x40779d
  407836:	call   0x4114a0
  40783b:	nop    DWORD PTR [rax+rax*1+0x0]
  407840:	mov    rdi,QWORD PTR [rip+0x17d19]        # 0x41f560
  407847:	nop    WORD PTR [rax+rax*1+0x0]
  407850:	mov    rcx,rsi
  407853:	call   r12
  407856:	mov    ecx,0x1
  40785b:	call   rdi
  40785d:	mov    rcx,rsi
  407860:	call   rbp
  407862:	mov    eax,DWORD PTR [rbx+0x60]
  407865:	test   eax,eax
  407867:	js     0x407850
  407869:	jmp    0x407791
  40786e:	xchg   ax,ax
  407870:	lea    rsi,[rcx+0x8]
  407874:	mov    rcx,rsi
  407877:	call   QWORD PTR [rip+0x17c83]        # 0x41f500
  40787d:	mov    QWORD PTR [rbx+0x30],0x0
  407885:	mov    DWORD PTR [rbx+0x38],0x0
  40788c:	mov    DWORD PTR [rbx+0x3c],0x0
  407893:	mov    DWORD PTR [rbx+0x40],0x0
  40789a:	mov    QWORD PTR [rbx+0x48],0x0
  4078a2:	mov    DWORD PTR [rbx+0x50],0x0
  4078a9:	mov    DWORD PTR [rbx+0x54],0x0
  4078b0:	mov    DWORD PTR [rbx+0x58],0x0
  4078b7:	mov    DWORD PTR [rbx+0x60],0x0
  4078be:	mov    DWORD PTR [rbx],0x1
  4078c4:	jmp    0x407777
  4078c9:	nop    DWORD PTR [rax+0x0]
  4078d0:	push   r12
  4078d2:	push   rbp
  4078d3:	push   rdi
  4078d4:	push   rsi
  4078d5:	push   rbx
  4078d6:	sub    rsp,0x20
  4078da:	mov    eax,DWORD PTR [rcx]
  4078dc:	mov    rbx,rcx
  4078df:	test   eax,eax
  4078e1:	je     0x407993
  4078e7:	lea    rsi,[rbx+0x8]
  4078eb:	mov    rcx,rsi
  4078ee:	mov    rbp,QWORD PTR [rip+0x17b8b]        # 0x41f480
  4078f5:	call   rbp
  4078f7:	mov    edx,DWORD PTR [rbx+0x60]
  4078fa:	mov    r12,QWORD PTR [rip+0x17c0f]        # 0x41f510
  407901:	test   edx,edx
  407903:	je     0x407979
  407905:	lea    rcx,[rbx+0x48]
  407909:	call   0x407500
  40790e:	cmp    rax,0xffffffffffffffff
  407912:	mov    rdi,rax
  407915:	je     0x407950
  407917:	mov    rcx,rsi
  40791a:	call   QWORD PTR [rip+0x17bf0]        # 0x41f510
  407920:	mov    edx,0xffffffff
  407925:	mov    rcx,rdi
  407928:	call   QWORD PTR [rip+0x17c62]        # 0x41f590
  40792e:	cmp    eax,0x102
  407933:	je     0x407949
  407935:	cmp    eax,0xffffffff
  407938:	je     0x407949
  40793a:	mov    rcx,rdi
  40793d:	call   QWORD PTR [rip+0x17b25]        # 0x41f468
  407943:	cmp    DWORD PTR [rbx+0x60],0xffffffff
  407947:	je     0x407986
  407949:	call   0x4114a0
  40794e:	xchg   ax,ax
  407950:	mov    rdi,QWORD PTR [rip+0x17c09]        # 0x41f560
  407957:	mov    r12,QWORD PTR [rip+0x17bb2]        # 0x41f510
  40795e:	xchg   ax,ax
  407960:	mov    rcx,rsi
  407963:	call   r12
  407966:	mov    ecx,0x1
  40796b:	call   rdi
  40796d:	mov    rcx,rsi
  407970:	call   rbp
  407972:	mov    eax,DWORD PTR [rbx+0x60]
  407975:	test   eax,eax
  407977:	jne    0x407960
  407979:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407980:	mov    rcx,rsi
  407983:	call   r12
  407986:	xor    eax,eax
  407988:	add    rsp,0x20
  40798c:	pop    rbx
  40798d:	pop    rsi
  40798e:	pop    rdi
  40798f:	pop    rbp
  407990:	pop    r12
  407992:	ret    
  407993:	lock add DWORD PTR [rcx+0x4],0x1
  407998:	je     0x4079d0
  40799a:	mov    eax,DWORD PTR [rcx]
  40799c:	mov    rdi,QWORD PTR [rip+0x17bbd]        # 0x41f560
  4079a3:	test   eax,eax
  4079a5:	jne    0x4078e7
  4079ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4079b0:	xor    ecx,ecx
  4079b2:	call   rdi
  4079b4:	mov    eax,DWORD PTR [rbx]
  4079b6:	test   eax,eax
  4079b8:	jne    0x4078e7
  4079be:	xor    ecx,ecx
  4079c0:	call   rdi
  4079c2:	mov    eax,DWORD PTR [rbx]
  4079c4:	test   eax,eax
  4079c6:	je     0x4079b0
  4079c8:	jmp    0x4078e7
  4079cd:	nop    DWORD PTR [rax]
  4079d0:	lea    rsi,[rcx+0x8]
  4079d4:	mov    rcx,rsi
  4079d7:	call   QWORD PTR [rip+0x17b23]        # 0x41f500
  4079dd:	mov    QWORD PTR [rbx+0x30],0x0
  4079e5:	mov    DWORD PTR [rbx+0x38],0x0
  4079ec:	mov    DWORD PTR [rbx+0x3c],0x0
  4079f3:	mov    DWORD PTR [rbx+0x40],0x0
  4079fa:	mov    QWORD PTR [rbx+0x48],0x0
  407a02:	mov    DWORD PTR [rbx+0x50],0x0
  407a09:	mov    DWORD PTR [rbx+0x54],0x0
  407a10:	mov    DWORD PTR [rbx+0x58],0x0
  407a17:	mov    DWORD PTR [rbx+0x60],0x0
  407a1e:	mov    DWORD PTR [rbx],0x1
  407a24:	jmp    0x4078eb
  407a29:	nop    DWORD PTR [rax+0x0]
  407a30:	push   rbp
  407a31:	push   rdi
  407a32:	push   rsi
  407a33:	push   rbx
  407a34:	sub    rsp,0x28
  407a38:	mov    edx,DWORD PTR [rcx]
  407a3a:	mov    eax,0x16
  407a3f:	test   edx,edx
  407a41:	jne    0x407a50
  407a43:	add    rsp,0x28
  407a47:	pop    rbx
  407a48:	pop    rsi
  407a49:	pop    rdi
  407a4a:	pop    rbp
  407a4b:	ret    
  407a4c:	nop    DWORD PTR [rax+0x0]
  407a50:	lea    rdi,[rcx+0x8]
  407a54:	mov    rbx,rcx
  407a57:	mov    rcx,rdi
  407a5a:	call   QWORD PTR [rip+0x17a20]        # 0x41f480
  407a60:	mov    eax,DWORD PTR [rbx+0x60]
  407a63:	test   eax,eax
  407a65:	js     0x407a90
  407a67:	je     0x407b30
  407a6d:	sub    eax,0x1
  407a70:	test   eax,eax
  407a72:	mov    DWORD PTR [rbx+0x60],eax
  407a75:	je     0x407aa0
  407a77:	mov    rcx,rdi
  407a7a:	call   QWORD PTR [rip+0x17a90]        # 0x41f510
  407a80:	xor    eax,eax
  407a82:	add    rsp,0x28
  407a86:	pop    rbx
  407a87:	pop    rsi
  407a88:	pop    rdi
  407a89:	pop    rbp
  407a8a:	ret    
  407a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a90:	cmp    eax,0xffffffff
  407a93:	jne    0x407b43
  407a99:	mov    DWORD PTR [rbx+0x60],0x0
  407aa0:	mov    eax,DWORD PTR [rbx+0x50]
  407aa3:	test   eax,eax
  407aa5:	je     0x407ae0
  407aa7:	mov    edx,DWORD PTR [rbx+0x58]
  407aaa:	mov    rax,QWORD PTR [rbx+0x48]
  407aae:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407ab5:	mov    rcx,QWORD PTR [rax+rdx*8]
  407ab9:	call   QWORD PTR [rip+0x17a89]        # 0x41f548
  407abf:	mov    eax,DWORD PTR [rbx+0x58]
  407ac2:	sub    DWORD PTR [rbx+0x50],0x1
  407ac6:	lea    edx,[rax+0x1]
  407ac9:	mov    DWORD PTR [rbx+0x58],edx
  407acc:	je     0x407ad3
  407ace:	cmp    edx,DWORD PTR [rbx+0x54]
  407ad1:	jne    0x407a77
  407ad3:	mov    DWORD PTR [rbx+0x58],0x0
  407ada:	jmp    0x407a77
  407adc:	nop    DWORD PTR [rax+0x0]
  407ae0:	mov    eax,DWORD PTR [rbx+0x38]
  407ae3:	xor    esi,esi
  407ae5:	mov    rbp,QWORD PTR [rip+0x17a5c]        # 0x41f548
  407aec:	test   eax,eax
  407aee:	mov    DWORD PTR [rbx+0x60],eax
  407af1:	je     0x407b17
  407af3:	mov    eax,esi
  407af5:	add    eax,DWORD PTR [rbx+0x40]
  407af8:	mov    edx,DWORD PTR [rbx+0x3c]
  407afb:	mov    ecx,eax
  407afd:	sub    ecx,edx
  407aff:	cmp    eax,edx
  407b01:	mov    rdx,QWORD PTR [rbx+0x30]
  407b05:	cmovae rax,rcx
  407b09:	add    esi,0x1
  407b0c:	mov    rcx,QWORD PTR [rdx+rax*8]
  407b10:	call   rbp
  407b12:	cmp    esi,DWORD PTR [rbx+0x38]
  407b15:	jb     0x407af3
  407b17:	mov    DWORD PTR [rbx+0x38],0x0
  407b1e:	mov    DWORD PTR [rbx+0x40],0x0
  407b25:	jmp    0x407a77
  407b2a:	nop    WORD PTR [rax+rax*1+0x0]
  407b30:	mov    rcx,rdi
  407b33:	call   QWORD PTR [rip+0x179d7]        # 0x41f510
  407b39:	mov    eax,0x1
  407b3e:	jmp    0x407a43
  407b43:	call   0x4114a0
  407b48:	nop
  407b49:	nop    DWORD PTR [rax+0x0]
  407b50:	push   rbx
  407b51:	sub    rsp,0x30
  407b55:	mov    edx,DWORD PTR [rcx]
  407b57:	mov    eax,0x16
  407b5c:	test   edx,edx
  407b5e:	jne    0x407b70
  407b60:	add    rsp,0x30
  407b64:	pop    rbx
  407b65:	ret    
  407b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b70:	mov    eax,DWORD PTR [rcx+0x60]
  407b73:	test   eax,eax
  407b75:	je     0x407b82
  407b77:	mov    eax,0x10
  407b7c:	add    rsp,0x30
  407b80:	pop    rbx
  407b81:	ret    
  407b82:	mov    rbx,rcx
  407b85:	mov    DWORD PTR [rsp+0x2c],eax
  407b89:	lea    rcx,[rcx+0x8]
  407b8d:	call   QWORD PTR [rip+0x178e5]        # 0x41f478
  407b93:	mov    rcx,QWORD PTR [rbx+0x30]
  407b97:	mov    eax,DWORD PTR [rsp+0x2c]
  407b9b:	test   rcx,rcx
  407b9e:	je     0x407ba9
  407ba0:	call   0x411458
  407ba5:	mov    eax,DWORD PTR [rsp+0x2c]
  407ba9:	mov    rcx,QWORD PTR [rbx+0x48]
  407bad:	test   rcx,rcx
  407bb0:	je     0x407bbf
  407bb2:	mov    DWORD PTR [rsp+0x2c],eax
  407bb6:	call   0x411458
  407bbb:	mov    eax,DWORD PTR [rsp+0x2c]
  407bbf:	mov    DWORD PTR [rbx],0x0
  407bc5:	jmp    0x407b60
  407bc7:	nop    WORD PTR [rax+rax*1+0x0]
  407bd0:	push   rbx
  407bd1:	sub    rsp,0x20
  407bd5:	mov    rbx,rcx
  407bd8:	mov    DWORD PTR [rcx+0x8],0x0
  407bdf:	mov    DWORD PTR [rcx+0xc],0x0
  407be6:	lea    rcx,[rcx+0x10]
  407bea:	call   QWORD PTR [rip+0x17910]        # 0x41f500
  407bf0:	mov    DWORD PTR [rbx],0x1
  407bf6:	add    rsp,0x20
  407bfa:	pop    rbx
  407bfb:	ret    
  407bfc:	nop    DWORD PTR [rax+0x0]
  407c00:	push   rsi
  407c01:	push   rbx
  407c02:	sub    rsp,0x28
  407c06:	mov    eax,DWORD PTR [rcx]
  407c08:	mov    rbx,rcx
  407c0b:	test   eax,eax
  407c0d:	je     0x407c50
  407c0f:	call   QWORD PTR [rip+0x17893]        # 0x41f4a8
  407c15:	cmp    DWORD PTR [rbx+0x8],eax
  407c18:	mov    esi,eax
  407c1a:	je     0x407c29
  407c1c:	lea    rcx,[rbx+0x10]
  407c20:	call   QWORD PTR [rip+0x1785a]        # 0x41f480
  407c26:	mov    DWORD PTR [rbx+0x8],esi
  407c29:	mov    edx,DWORD PTR [rbx+0xc]
  407c2c:	mov    eax,0xb
  407c31:	add    edx,0x1
  407c34:	jne    0x407c40
  407c36:	add    rsp,0x28
  407c3a:	pop    rbx
  407c3b:	pop    rsi
  407c3c:	ret    
  407c3d:	nop    DWORD PTR [rax]
  407c40:	xor    al,al
  407c42:	mov    DWORD PTR [rbx+0xc],edx
  407c45:	add    rsp,0x28
  407c49:	pop    rbx
  407c4a:	pop    rsi
  407c4b:	ret    
  407c4c:	nop    DWORD PTR [rax+0x0]
  407c50:	mov    al,0x1
  407c52:	lock xadd DWORD PTR [rcx+0x4],eax
  407c57:	cmp    eax,0xffffffff
  407c5a:	je     0x407c90
  407c5c:	mov    eax,DWORD PTR [rcx]
  407c5e:	mov    rsi,QWORD PTR [rip+0x178fb]        # 0x41f560
  407c65:	test   eax,eax
  407c67:	jne    0x407c0f
  407c69:	nop    DWORD PTR [rax+0x0]
  407c70:	xor    ecx,ecx
  407c72:	call   rsi
  407c74:	mov    eax,DWORD PTR [rbx]
  407c76:	test   eax,eax
  407c78:	jne    0x407c0f
  407c7a:	xor    ecx,ecx
  407c7c:	call   rsi
  407c7e:	mov    eax,DWORD PTR [rbx]
  407c80:	test   eax,eax
  407c82:	je     0x407c70
  407c84:	jmp    0x407c0f
  407c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c90:	mov    DWORD PTR [rcx+0x8],0x0
  407c97:	mov    DWORD PTR [rcx+0xc],0x0
  407c9e:	lea    rcx,[rcx+0x10]
  407ca2:	call   QWORD PTR [rip+0x17858]        # 0x41f500
  407ca8:	mov    DWORD PTR [rbx],0x1
  407cae:	jmp    0x407c0f
  407cb3:	nop    DWORD PTR [rax]
  407cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cc0:	push   rdi
  407cc1:	push   rsi
  407cc2:	push   rbx
  407cc3:	sub    rsp,0x20
  407cc7:	mov    edi,DWORD PTR [rcx+0x8]
  407cca:	mov    esi,0x1
  407ccf:	mov    rbx,rcx
  407cd2:	call   QWORD PTR [rip+0x177d0]        # 0x41f4a8
  407cd8:	cmp    edi,eax
  407cda:	je     0x407cf0
  407cdc:	mov    eax,esi
  407cde:	add    rsp,0x20
  407ce2:	pop    rbx
  407ce3:	pop    rsi
  407ce4:	pop    rdi
  407ce5:	ret    
  407ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cf0:	mov    eax,DWORD PTR [rbx+0xc]
  407cf3:	mov    sil,0x16
  407cf6:	test   eax,eax
  407cf8:	je     0x407cdc
  407cfa:	sub    eax,0x1
  407cfd:	xor    sil,sil
  407d00:	test   eax,eax
  407d02:	mov    DWORD PTR [rbx+0xc],eax
  407d05:	jne    0x407cdc
  407d07:	mov    DWORD PTR [rbx+0x8],0x0
  407d0e:	lea    rcx,[rbx+0x10]
  407d12:	call   QWORD PTR [rip+0x177f8]        # 0x41f510
  407d18:	jmp    0x407cdc
  407d1a:	nop    WORD PTR [rax+rax*1+0x0]
  407d20:	push   rbx
  407d21:	sub    rsp,0x20
  407d25:	mov    edx,DWORD PTR [rcx+0x8]
  407d28:	mov    eax,0x10
  407d2d:	test   edx,edx
  407d2f:	je     0x407d40
  407d31:	add    rsp,0x20
  407d35:	pop    rbx
  407d36:	ret    
  407d37:	nop    WORD PTR [rax+rax*1+0x0]
  407d40:	mov    rbx,rcx
  407d43:	lea    rcx,[rcx+0x10]
  407d47:	call   QWORD PTR [rip+0x1772b]        # 0x41f478
  407d4d:	xor    eax,eax
  407d4f:	mov    DWORD PTR [rbx],0x0
  407d55:	add    rsp,0x20
  407d59:	pop    rbx
  407d5a:	ret    
  407d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	push   rdi
  407d61:	push   rsi
  407d62:	push   rbx
  407d63:	sub    rsp,0x20
  407d67:	mov    eax,DWORD PTR [rcx]
  407d69:	test   eax,eax
  407d6b:	jle    0x407d75
  407d6d:	add    rsp,0x20
  407d71:	pop    rbx
  407d72:	pop    rsi
  407d73:	pop    rdi
  407d74:	ret    
  407d75:	lea    rax,[rcx+0x4]
  407d79:	mov    rsi,rdx
  407d7c:	mov    rbx,rcx
  407d7f:	lock add DWORD PTR [rax],0x1
  407d83:	je     0x407dd1
  407d85:	lock sub DWORD PTR [rax],0x1
  407d89:	mov    eax,DWORD PTR [rcx]
  407d8b:	mov    rsi,QWORD PTR [rip+0x177ce]        # 0x41f560
  407d92:	test   eax,eax
  407d94:	jns    0x407daa
  407d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407da0:	xor    ecx,ecx
  407da2:	call   rsi
  407da4:	mov    eax,DWORD PTR [rbx]
  407da6:	test   eax,eax
  407da8:	js     0x407da0
  407daa:	mov    eax,DWORD PTR [rbx]
  407dac:	test   eax,eax
  407dae:	jg     0x407d6d
  407db0:	lea    rsi,[rbx+0x8]
  407db4:	mov    rcx,rsi
  407db7:	call   QWORD PTR [rip+0x176c3]        # 0x41f480
  407dbd:	mov    rcx,rsi
  407dc0:	call   QWORD PTR [rip+0x1774a]        # 0x41f510
  407dc6:	mov    eax,DWORD PTR [rbx]
  407dc8:	test   eax,eax
  407dca:	jg     0x407d6d
  407dcc:	call   0x4114a0
  407dd1:	lea    rdi,[rcx+0x8]
  407dd5:	mov    rcx,rdi
  407dd8:	call   QWORD PTR [rip+0x17722]        # 0x41f500
  407dde:	mov    rcx,rdi
  407de1:	call   QWORD PTR [rip+0x17699]        # 0x41f480
  407de7:	mov    DWORD PTR [rbx],0x0
  407ded:	call   rsi
  407def:	mov    rax,QWORD PTR [rip+0x1771a]        # 0x41f510
  407df6:	mov    rcx,rdi
  407df9:	mov    DWORD PTR [rbx],0x1
  407dff:	add    rsp,0x20
  407e03:	pop    rbx
  407e04:	pop    rsi
  407e05:	pop    rdi
  407e06:	rex.W jmp rax
  407e09:	nop
  407e0a:	nop
  407e0b:	nop
  407e0c:	nop
  407e0d:	nop
  407e0e:	nop
  407e0f:	nop
  407e10:	push   rbx
  407e11:	sub    rsp,0x20
  407e15:	movzx  ebx,cx
  407e18:	mov    ecx,ebx
  407e1a:	call   0x40a710
  407e1f:	test   eax,eax
  407e21:	js     0x407e30
  407e23:	add    rsp,0x20
  407e27:	pop    rbx
  407e28:	ret    
  407e29:	nop    DWORD PTR [rax+0x0]
  407e30:	mov    edx,0x20
  407e35:	mov    ecx,ebx
  407e37:	call   0x411428
  407e3c:	test   eax,eax
  407e3e:	sete   al
  407e41:	movzx  eax,al
  407e44:	add    rsp,0x20
  407e48:	pop    rbx
  407e49:	ret    
  407e4a:	nop    WORD PTR [rax+rax*1+0x0]
  407e50:	push   rsi
  407e51:	push   rbx
  407e52:	sub    rsp,0x28
  407e56:	mov    rbx,rdx
  407e59:	mov    rdx,QWORD PTR [rdx]
  407e5c:	mov    rsi,rcx
  407e5f:	lea    rax,[rbx+0x14]
  407e63:	cmp    rdx,rax
  407e66:	je     0x407e90
  407e68:	mov    QWORD PTR [rcx],rdx
  407e6b:	mov    rax,QWORD PTR [rbx+0x8]
  407e6f:	mov    QWORD PTR [rsi+0x8],rax
  407e73:	movzx  eax,BYTE PTR [rbx+0x10]
  407e77:	test   al,al
  407e79:	mov    BYTE PTR [rsi+0x10],al
  407e7c:	je     0x407e86
  407e7e:	movzx  eax,WORD PTR [rbx+0x12]
  407e82:	mov    WORD PTR [rsi+0x12],ax
  407e86:	add    rsp,0x28
  407e8a:	pop    rbx
  407e8b:	pop    rsi
  407e8c:	ret    
  407e8d:	nop    DWORD PTR [rax]
  407e90:	lea    r9,[rcx+0x14]
  407e94:	mov    r8,QWORD PTR [rbx+0x8]
  407e98:	mov    rcx,r9
  407e9b:	call   0x411408
  407ea0:	mov    QWORD PTR [rsi],rax
  407ea3:	jmp    0x407e6b
  407ea5:	nop
  407ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407eb0:	lea    rdx,[rip+0xf409]        # 0x4172c0
  407eb7:	mov    eax,ecx
  407eb9:	and    ecx,0x1f
  407ebc:	shr    al,0x5
  407ebf:	and    eax,0x7
  407ec2:	mov    eax,DWORD PTR [rdx+rax*4]
  407ec5:	shr    eax,cl
  407ec7:	and    eax,0x1
  407eca:	ret    
  407ecb:	nop
  407ecc:	nop
  407ecd:	nop
  407ece:	nop
  407ecf:	nop
  407ed0:	push   rbp
  407ed1:	push   rsi
  407ed2:	push   rbx
  407ed3:	mov    rbp,rsp
  407ed6:	sub    rsp,0x40
  407eda:	movabs rax,0x1fffffffffffffff
  407ee4:	cmp    r8,rax
  407ee7:	mov    rsi,rcx
  407eea:	jbe    0x407ef5
  407eec:	xor    eax,eax
  407eee:	mov    rsp,rbp
  407ef1:	pop    rbx
  407ef2:	pop    rsi
  407ef3:	pop    rbp
  407ef4:	ret    
  407ef5:	lea    rcx,[r8*8+0x0]
  407efd:	cmp    rcx,0xfaf
  407f04:	jbe    0x407fc3
  407f0a:	mov    QWORD PTR [rbp-0x18],r9
  407f0e:	mov    QWORD PTR [rbp-0x10],r8
  407f12:	mov    QWORD PTR [rbp-0x8],rdx
  407f16:	call   0x40a780
  407f1b:	mov    r9,QWORD PTR [rbp-0x18]
  407f1f:	mov    r8,QWORD PTR [rbp-0x10]
  407f23:	mov    rdx,QWORD PTR [rbp-0x8]
  407f27:	test   rax,rax
  407f2a:	je     0x407eec
  407f2c:	xor    r10d,r10d
  407f2f:	cmp    r8,0x2
  407f33:	mov    QWORD PTR [rax+0x8],0x1
  407f3b:	mov    ebx,0x2
  407f40:	jbe    0x407f76
  407f42:	movzx  r11d,BYTE PTR [rdx+rbx*1-0x1]
  407f48:	cmp    BYTE PTR [rdx+r10*1],r11b
  407f4c:	jne    0x407f61
  407f4e:	jmp    0x407ff0
  407f53:	sub    r10,QWORD PTR [rax+r10*8]
  407f57:	cmp    BYTE PTR [rdx+r10*1],r11b
  407f5b:	je     0x407ff0
  407f61:	test   r10,r10
  407f64:	jne    0x407f53
  407f66:	mov    QWORD PTR [rax+rbx*8],rbx
  407f6a:	xor    r10d,r10d
  407f6d:	add    rbx,0x1
  407f71:	cmp    rbx,r8
  407f74:	jne    0x407f42
  407f76:	mov    QWORD PTR [r9],0x0
  407f7d:	movzx  r11d,BYTE PTR [rsi]
  407f81:	mov    rbx,rsi
  407f84:	xor    r10d,r10d
  407f87:	nop    WORD PTR [rax+rax*1+0x0]
  407f90:	test   r11b,r11b
  407f93:	je     0x407faf
  407f95:	cmp    BYTE PTR [rdx+r10*1],r11b
  407f99:	je     0x408003
  407f9b:	test   r10,r10
  407f9e:	je     0x407fe0
  407fa0:	mov    rcx,QWORD PTR [rax+r10*8]
  407fa4:	add    rsi,rcx
  407fa7:	sub    r10,rcx
  407faa:	test   r11b,r11b
  407fad:	jne    0x407f95
  407faf:	mov    rcx,rax
  407fb2:	call   0x40a800
  407fb7:	mov    eax,0x1
  407fbc:	mov    rsp,rbp
  407fbf:	pop    rbx
  407fc0:	pop    rsi
  407fc1:	pop    rbp
  407fc2:	ret    
  407fc3:	lea    rax,[rcx+0x2e]
  407fc7:	and    rax,0xfffffffffffffff0
  407fcb:	call   0x40c550
  407fd0:	sub    rsp,rax
  407fd3:	lea    rax,[rsp+0x30]
  407fd8:	jmp    0x407f27
  407fdd:	nop    DWORD PTR [rax]
  407fe0:	movzx  r11d,BYTE PTR [rbx+0x1]
  407fe5:	add    rsi,0x1
  407fe9:	add    rbx,0x1
  407fed:	jmp    0x407f90
  407fef:	nop
  407ff0:	add    r10,0x1
  407ff4:	mov    rcx,rbx
  407ff7:	sub    rcx,r10
  407ffa:	mov    QWORD PTR [rax+rbx*8],rcx
  407ffe:	jmp    0x407f6d
  408003:	add    r10,0x1
  408007:	lea    rcx,[rbx+0x1]
  40800b:	cmp    r8,r10
  40800e:	je     0x40801d
  408010:	movzx  r11d,BYTE PTR [rbx+0x1]
  408015:	mov    rbx,rcx
  408018:	jmp    0x407f90
  40801d:	mov    rcx,rax
  408020:	mov    QWORD PTR [r9],rsi
  408023:	call   0x40a800
  408028:	mov    eax,0x1
  40802d:	jmp    0x407fbc
  40802f:	nop
  408030:	push   rbp
  408031:	push   r15
  408033:	push   r14
  408035:	push   r13
  408037:	push   r12
  408039:	push   rdi
  40803a:	push   rsi
  40803b:	push   rbx
  40803c:	sub    rsp,0xd8
  408043:	lea    rbp,[rsp+0x80]
  40804b:	mov    rdi,rcx
  40804e:	mov    rcx,rdx
  408051:	mov    rbx,rdx
  408054:	mov    QWORD PTR [rbp+0xb0],r8
  40805b:	call   0x40a880
  408060:	mov    rsi,rax
  408063:	mov    QWORD PTR [rbp-0x48],rax
  408067:	movabs rax,0x492492492492492
  408071:	cmp    rsi,rax
  408074:	jbe    0x408089
  408076:	xor    eax,eax
  408078:	lea    rsp,[rbp+0x58]
  40807c:	pop    rbx
  40807d:	pop    rsi
  40807e:	pop    rdi
  40807f:	pop    r12
  408081:	pop    r13
  408083:	pop    r14
  408085:	pop    r15
  408087:	pop    rbp
  408088:	ret    
  408089:	mov    rcx,QWORD PTR [rbp-0x48]
  40808d:	mov    rax,rcx
  408090:	shl    rcx,0x6
  408094:	shl    rax,0x3
  408098:	sub    rcx,rax
  40809b:	cmp    rcx,0xfaf
  4080a2:	jbe    0x408227
  4080a8:	call   0x40a780
  4080ad:	mov    rsi,rax
  4080b0:	test   rsi,rsi
  4080b3:	je     0x408076
  4080b5:	mov    QWORD PTR [rbp+0x20],rbx
  4080b9:	mov    BYTE PTR [rbp+0x10],0x0
  4080bd:	lea    rbx,[rsi+0x14]
  4080c1:	mov    DWORD PTR [rbp+0x14],0x0
  4080c8:	mov    BYTE PTR [rbp+0x18],0x0
  4080cc:	mov    r13,QWORD PTR [rip+0x104ed]        # 0x4185c0
  4080d3:	mov    r12,QWORD PTR [rip+0x10626]        # 0x418700
  4080da:	jmp    0x408167
  4080df:	nop
  4080e0:	mov    rcx,QWORD PTR [rbp+0x20]
  4080e4:	movzx  eax,BYTE PTR [rcx]
  4080e7:	mov    edx,eax
  4080e9:	and    eax,0x1f
  4080ec:	shr    dl,0x5
  4080ef:	and    edx,0x7
  4080f2:	mov    edx,DWORD PTR [r12+rdx*4]
  4080f6:	bt     edx,eax
  4080f9:	jae    0x408241
  4080ff:	mov    QWORD PTR [rbp+0x28],0x1
  408107:	movsx  ax,BYTE PTR [rcx]
  40810b:	mov    BYTE PTR [rbp+0x30],0x1
  40810f:	mov    BYTE PTR [rbp+0x18],0x1
  408113:	mov    WORD PTR [rbp+0x32],ax
  408117:	cmp    WORD PTR [rbp+0x32],0x0
  40811c:	je     0x408289
  408122:	lea    r14,[rbp+0x10]
  408126:	mov    eax,0x1
  40812b:	mov    rdx,QWORD PTR [rbp+0x20]
  40812f:	add    r14,0x24
  408133:	cmp    rdx,r14
  408136:	je     0x40820e
  40813c:	mov    QWORD PTR [rbx-0x14],rdx
  408140:	mov    rdx,QWORD PTR [rbp+0x28]
  408144:	test   al,al
  408146:	mov    BYTE PTR [rbx-0x4],al
  408149:	mov    QWORD PTR [rbx-0xc],rdx
  40814d:	je     0x408157
  40814f:	movzx  eax,WORD PTR [rbp+0x32]
  408153:	mov    WORD PTR [rbx-0x2],ax
  408157:	mov    rax,QWORD PTR [rbp+0x28]
  40815b:	add    QWORD PTR [rbp+0x20],rax
  40815f:	add    rbx,0x30
  408163:	mov    BYTE PTR [rbp+0x18],0x0
  408167:	cmp    BYTE PTR [rbp+0x10],0x0
  40816b:	lea    r14,[rbp+0x10]
  40816f:	je     0x4080e0
  408175:	mov    rax,QWORD PTR [r13+0x0]
  408179:	mov    r15,QWORD PTR [rbp+0x20]
  40817d:	movsxd rdx,DWORD PTR [rax]
  408180:	mov    rcx,r15
  408183:	call   0x4027a0
  408188:	lea    rcx,[r14+0x22]
  40818c:	lea    r9,[r14+0x4]
  408190:	mov    r8,rax
  408193:	mov    rdx,r15
  408196:	call   0x404510
  40819b:	cmp    rax,0xffffffffffffffff
  40819f:	mov    QWORD PTR [rbp+0x28],rax
  4081a3:	je     0x40825f
  4081a9:	cmp    rax,0xfffffffffffffffe
  4081ad:	je     0x408276
  4081b3:	test   rax,rax
  4081b6:	jne    0x4081d8
  4081b8:	mov    rax,QWORD PTR [rbp+0x20]
  4081bc:	mov    QWORD PTR [rbp+0x28],0x1
  4081c4:	cmp    BYTE PTR [rax],0x0
  4081c7:	jne    0x4089c8
  4081cd:	cmp    WORD PTR [rbp+0x32],0x0
  4081d2:	jne    0x4089aa
  4081d8:	lea    rcx,[r14+0x4]
  4081dc:	mov    BYTE PTR [rbp+0x30],0x1
  4081e0:	call   0x404620
  4081e5:	test   eax,eax
  4081e7:	je     0x4081ed
  4081e9:	mov    BYTE PTR [rbp+0x10],0x0
  4081ed:	movzx  eax,BYTE PTR [rbp+0x30]
  4081f1:	mov    BYTE PTR [rbp+0x18],0x1
  4081f5:	test   al,al
  4081f7:	jne    0x408117
  4081fd:	mov    rdx,QWORD PTR [rbp+0x20]
  408201:	add    r14,0x24
  408205:	cmp    rdx,r14
  408208:	jne    0x40813c
  40820e:	mov    r8,QWORD PTR [rbp+0x28]
  408212:	mov    rcx,rbx
  408215:	call   0x411408
  40821a:	mov    QWORD PTR [rbx-0x14],rbx
  40821e:	movzx  eax,BYTE PTR [rbp+0x30]
  408222:	jmp    0x408140
  408227:	lea    rax,[rcx+0x2e]
  40822b:	and    rax,0xfffffffffffffff0
  40822f:	call   0x40c550
  408234:	sub    rsp,rax
  408237:	lea    rsi,[rsp+0x30]
  40823c:	jmp    0x4080b0
  408241:	lea    r14,[rbp+0x10]
  408245:	lea    rcx,[r14+0x4]
  408249:	call   0x404620
  40824e:	test   eax,eax
  408250:	je     0x408957
  408256:	mov    BYTE PTR [rbp+0x10],0x1
  40825a:	jmp    0x408175
  40825f:	mov    QWORD PTR [rbp+0x28],0x1
  408267:	mov    BYTE PTR [rbp+0x30],0x0
  40826b:	mov    BYTE PTR [rbp+0x18],0x1
  40826f:	xor    eax,eax
  408271:	jmp    0x40812b
  408276:	mov    rcx,QWORD PTR [rbp+0x20]
  40827a:	call   0x4113a8
  40827f:	mov    BYTE PTR [rbp+0x30],0x0
  408283:	mov    QWORD PTR [rbp+0x28],rax
  408287:	jmp    0x40826b
  408289:	mov    rax,QWORD PTR [rbp-0x48]
  40828d:	lea    r12,[rax+rax*2]
  408291:	shl    r12,0x4
  408295:	add    r12,rsi
  408298:	cmp    rax,0x2
  40829c:	mov    QWORD PTR [r12+0x8],0x1
  4082a5:	jbe    0x40835b
  4082ab:	lea    r14,[rsi+0x40]
  4082af:	mov    QWORD PTR [rbp+0xa0],rdi
  4082b6:	xor    r13d,r13d
  4082b9:	mov    rdi,r12
  4082bc:	mov    ebx,0x2
  4082c1:	mov    r15,rax
  4082c4:	mov    r12,rsi
  4082c7:	nop    WORD PTR [rax+rax*1+0x0]
  4082d0:	movzx  esi,BYTE PTR [r14]
  4082d4:	jmp    0x408303
  4082d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082e0:	cmp    BYTE PTR [rax+0x10],0x0
  4082e4:	je     0x408314
  4082e6:	movzx  eax,WORD PTR [rax+0x12]
  4082ea:	cmp    WORD PTR [r14+0x2],ax
  4082ef:	sete   al
  4082f2:	test   al,al
  4082f4:	jne    0x408333
  4082f6:	test   r13,r13
  4082f9:	je     0x408710
  4082ff:	sub    r13,QWORD PTR [rdi+r13*8]
  408303:	lea    rax,[r13+r13*2+0x0]
  408308:	shl    rax,0x4
  40830c:	add    rax,r12
  40830f:	test   sil,sil
  408312:	jne    0x4082e0
  408314:	mov    r8,QWORD PTR [r14-0x8]
  408318:	cmp    r8,QWORD PTR [rax+0x8]
  40831c:	jne    0x4082f6
  40831e:	mov    rcx,QWORD PTR [r14-0x10]
  408322:	mov    rdx,QWORD PTR [rax]
  408325:	call   0x411410
  40832a:	test   eax,eax
  40832c:	sete   al
  40832f:	test   al,al
  408331:	je     0x4082f6
  408333:	add    r13,0x1
  408337:	mov    rax,rbx
  40833a:	sub    rax,r13
  40833d:	mov    QWORD PTR [rdi+rbx*8],rax
  408341:	add    rbx,0x1
  408345:	add    r14,0x30
  408349:	cmp    rbx,r15
  40834c:	jne    0x4082d0
  40834e:	mov    rsi,r12
  408351:	mov    r12,rdi
  408354:	mov    rdi,QWORD PTR [rbp+0xa0]
  40835b:	mov    rax,QWORD PTR [rbp+0xb0]
  408362:	lea    r13,[rbp-0x30]
  408366:	mov    QWORD PTR [rbp-0x20],rdi
  40836a:	mov    QWORD PTR [rbp+0x20],rdi
  40836e:	mov    BYTE PTR [rbp-0x30],0x0
  408372:	xor    ebx,ebx
  408374:	mov    DWORD PTR [rbp-0x2c],0x0
  40837b:	mov    BYTE PTR [rbp-0x28],0x0
  40837f:	xor    edi,edi
  408381:	mov    QWORD PTR [rax],0x0
  408388:	lea    rax,[rbp+0x10]
  40838c:	mov    BYTE PTR [rbp+0x10],0x0
  408390:	mov    DWORD PTR [rbp+0x14],0x0
  408397:	mov    BYTE PTR [rbp+0x18],0x0
  40839b:	mov    QWORD PTR [rbp-0x50],rax
  40839f:	lea    rax,[rbp+0x14]
  4083a3:	mov    QWORD PTR [rbp-0x38],rsi
  4083a7:	mov    QWORD PTR [rbp-0x58],r12
  4083ab:	mov    QWORD PTR [rbp-0x60],rax
  4083af:	lea    rax,[r13+0x4]
  4083b3:	mov    QWORD PTR [rbp-0x40],rax
  4083b7:	nop    WORD PTR [rax+rax*1+0x0]
  4083c0:	test   bl,bl
  4083c2:	je     0x408575
  4083c8:	movzx  ebx,BYTE PTR [rbp+0x30]
  4083cc:	test   bl,bl
  4083ce:	jne    0x4085c9
  4083d4:	lea    rax,[rdi+rdi*2]
  4083d8:	shl    rax,0x4
  4083dc:	add    rax,QWORD PTR [rbp-0x38]
  4083e0:	mov    r8,QWORD PTR [rax+0x8]
  4083e4:	xor    ebx,ebx
  4083e6:	cmp    r8,QWORD PTR [rbp+0x28]
  4083ea:	je     0x408540
  4083f0:	test   rdi,rdi
  4083f3:	je     0x4086c4
  4083f9:	mov    rax,QWORD PTR [rbp-0x58]
  4083fd:	movzx  r12d,BYTE PTR [rbp-0x28]
  408402:	mov    rbx,QWORD PTR [rax+rdi*8]
  408406:	sub    rdi,rbx
  408409:	test   rbx,rbx
  40840c:	je     0x408700
  408412:	test   r12b,r12b
  408415:	mov    r15,QWORD PTR [rip+0x101a4]        # 0x4185c0
  40841c:	mov    r14,QWORD PTR [rip+0x102dd]        # 0x418700
  408423:	je     0x408448
  408425:	movzx  r12d,BYTE PTR [rbp-0x10]
  40842a:	test   r12b,r12b
  40842d:	jne    0x40848c
  40842f:	mov    rax,QWORD PTR [rbp-0x18]
  408433:	add    QWORD PTR [rbp-0x20],rax
  408437:	sub    rbx,0x1
  40843b:	mov    BYTE PTR [rbp-0x28],0x0
  40843f:	je     0x408700
  408445:	xor    r12d,r12d
  408448:	cmp    BYTE PTR [rbp-0x30],0x0
  40844c:	jne    0x4084b5
  40844e:	mov    rcx,QWORD PTR [rbp-0x20]
  408452:	movzx  eax,BYTE PTR [rcx]
  408455:	mov    edx,eax
  408457:	and    eax,0x1f
  40845a:	shr    dl,0x5
  40845d:	and    edx,0x7
  408460:	mov    edx,DWORD PTR [r14+rdx*4]
  408464:	bt     edx,eax
  408467:	jae    0x4084a0
  408469:	mov    QWORD PTR [rbp-0x18],0x1
  408471:	movsx  ax,BYTE PTR [rcx]
  408475:	mov    r12d,0x1
  40847b:	mov    BYTE PTR [rbp-0x10],0x1
  40847f:	mov    WORD PTR [rbp-0xe],ax
  408483:	test   r12b,r12b
  408486:	mov    BYTE PTR [rbp-0x28],0x1
  40848a:	je     0x40842f
  40848c:	cmp    WORD PTR [rbp-0xe],0x0
  408491:	jne    0x40842f
  408493:	call   0x4114a0
  408498:	nop    DWORD PTR [rax+rax*1+0x0]
  4084a0:	mov    rcx,QWORD PTR [rbp-0x40]
  4084a4:	call   0x404620
  4084a9:	test   eax,eax
  4084ab:	je     0x408720
  4084b1:	mov    BYTE PTR [rbp-0x30],0x1
  4084b5:	mov    rax,QWORD PTR [r15]
  4084b8:	mov    rsi,QWORD PTR [rbp-0x20]
  4084bc:	movsxd rdx,DWORD PTR [rax]
  4084bf:	mov    rcx,rsi
  4084c2:	call   0x4027a0
  4084c7:	lea    rcx,[r13+0x22]
  4084cb:	lea    r9,[r13+0x4]
  4084cf:	mov    r8,rax
  4084d2:	mov    rdx,rsi
  4084d5:	call   0x404510
  4084da:	cmp    rax,0xffffffffffffffff
  4084de:	mov    QWORD PTR [rbp-0x18],rax
  4084e2:	je     0x4085f0
  4084e8:	cmp    rax,0xfffffffffffffffe
  4084ec:	je     0x408601
  4084f2:	test   rax,rax
  4084f5:	jne    0x408517
  4084f7:	mov    rax,QWORD PTR [rbp-0x20]
  4084fb:	mov    QWORD PTR [rbp-0x18],0x1
  408503:	cmp    BYTE PTR [rax],0x0
  408506:	jne    0x4087d0
  40850c:	cmp    WORD PTR [rbp-0xe],0x0
  408511:	jne    0x4087b0
  408517:	lea    rcx,[r13+0x4]
  40851b:	mov    BYTE PTR [rbp-0x10],0x1
  40851f:	call   0x404620
  408524:	test   eax,eax
  408526:	je     0x40852c
  408528:	mov    BYTE PTR [rbp-0x30],0x0
  40852c:	movzx  r12d,BYTE PTR [rbp-0x10]
  408531:	jmp    0x408483
  408536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408540:	mov    rdx,QWORD PTR [rbp+0x20]
  408544:	mov    rcx,QWORD PTR [rax]
  408547:	call   0x411410
  40854c:	test   eax,eax
  40854e:	sete   bl
  408551:	test   bl,bl
  408553:	je     0x4083f0
  408559:	add    rdi,0x1
  40855d:	mov    rax,QWORD PTR [rbp+0x28]
  408561:	add    QWORD PTR [rbp+0x20],rax
  408565:	cmp    rdi,QWORD PTR [rbp-0x48]
  408569:	mov    BYTE PTR [rbp+0x18],0x0
  40856d:	je     0x408975
  408573:	xor    ebx,ebx
  408575:	cmp    BYTE PTR [rbp+0x10],0x0
  408579:	jne    0x408635
  40857f:	mov    rcx,QWORD PTR [rbp+0x20]
  408583:	mov    rsi,QWORD PTR [rip+0x10176]        # 0x418700
  40858a:	movzx  eax,BYTE PTR [rcx]
  40858d:	mov    edx,eax
  40858f:	and    eax,0x1f
  408592:	shr    dl,0x5
  408595:	and    edx,0x7
  408598:	mov    edx,DWORD PTR [rsi+rdx*4]
  40859b:	bt     edx,eax
  40859e:	jae    0x408620
  4085a4:	mov    QWORD PTR [rbp+0x28],0x1
  4085ac:	movsx  ax,BYTE PTR [rcx]
  4085b0:	mov    ebx,0x1
  4085b5:	mov    BYTE PTR [rbp+0x30],0x1
  4085b9:	mov    WORD PTR [rbp+0x32],ax
  4085bd:	test   bl,bl
  4085bf:	mov    BYTE PTR [rbp+0x18],0x1
  4085c3:	je     0x4083d4
  4085c9:	movzx  edx,WORD PTR [rbp+0x32]
  4085cd:	test   dx,dx
  4085d0:	jne    0x4088b4
  4085d6:	mov    rsi,QWORD PTR [rbp-0x38]
  4085da:	mov    rcx,rsi
  4085dd:	call   0x40a800
  4085e2:	mov    eax,0x1
  4085e7:	jmp    0x408078
  4085ec:	nop    DWORD PTR [rax+0x0]
  4085f0:	mov    QWORD PTR [rbp-0x18],0x1
  4085f8:	mov    BYTE PTR [rbp-0x10],0x0
  4085fc:	jmp    0x408483
  408601:	mov    rcx,QWORD PTR [rbp-0x20]
  408605:	call   0x4113a8
  40860a:	mov    BYTE PTR [rbp-0x10],0x0
  40860e:	mov    QWORD PTR [rbp-0x18],rax
  408612:	jmp    0x408483
  408617:	nop    WORD PTR [rax+rax*1+0x0]
  408620:	mov    rcx,QWORD PTR [rbp-0x60]
  408624:	call   0x404620
  408629:	test   eax,eax
  40862b:	je     0x4088d6
  408631:	mov    BYTE PTR [rbp+0x10],0x1
  408635:	mov    rax,QWORD PTR [rip+0xff84]        # 0x4185c0
  40863c:	mov    r14,QWORD PTR [rbp+0x20]
  408640:	mov    rax,QWORD PTR [rax]
  408643:	mov    rcx,r14
  408646:	movsxd rdx,DWORD PTR [rax]
  408649:	call   0x4027a0
  40864e:	mov    r8,rax
  408651:	mov    rax,QWORD PTR [rbp-0x50]
  408655:	mov    rdx,r14
  408658:	lea    rcx,[rax+0x22]
  40865c:	lea    r9,[rax+0x4]
  408660:	call   0x404510
  408665:	cmp    rax,0xffffffffffffffff
  408669:	mov    QWORD PTR [rbp+0x28],rax
  40866d:	je     0x4087f0
  408673:	cmp    rax,0xfffffffffffffffe
  408677:	je     0x40889e
  40867d:	test   rax,rax
  408680:	jne    0x4086a2
  408682:	mov    rax,QWORD PTR [rbp+0x20]
  408686:	mov    QWORD PTR [rbp+0x28],0x1
  40868e:	cmp    BYTE PTR [rax],0x0
  408691:	jne    0x408912
  408697:	cmp    WORD PTR [rbp+0x32],0x0
  40869c:	jne    0x4088f4
  4086a2:	mov    rax,QWORD PTR [rbp-0x50]
  4086a6:	mov    BYTE PTR [rbp+0x30],0x1
  4086aa:	lea    rcx,[rax+0x4]
  4086ae:	call   0x404620
  4086b3:	test   eax,eax
  4086b5:	je     0x4086bb
  4086b7:	mov    BYTE PTR [rbp+0x10],0x0
  4086bb:	movzx  ebx,BYTE PTR [rbp+0x30]
  4086bf:	jmp    0x4085bd
  4086c4:	movzx  r14d,BYTE PTR [rbp-0x28]
  4086c9:	test   r14b,r14b
  4086cc:	je     0x408740
  4086ce:	movzx  r14d,BYTE PTR [rbp-0x10]
  4086d3:	test   r14b,r14b
  4086d6:	jne    0x408797
  4086dc:	mov    rax,QWORD PTR [rbp-0x18]
  4086e0:	mov    BYTE PTR [rbp-0x28],0x0
  4086e4:	add    QWORD PTR [rbp-0x20],rax
  4086e8:	mov    BYTE PTR [rbp+0x18],0x0
  4086ec:	mov    rax,QWORD PTR [rbp+0x28]
  4086f0:	add    QWORD PTR [rbp+0x20],rax
  4086f4:	jmp    0x408575
  4086f9:	nop    DWORD PTR [rax+0x0]
  408700:	movzx  ebx,BYTE PTR [rbp+0x18]
  408704:	jmp    0x4083c0
  408709:	nop    DWORD PTR [rax+0x0]
  408710:	mov    QWORD PTR [rdi+rbx*8],rbx
  408714:	jmp    0x408341
  408719:	nop    DWORD PTR [rax+0x0]
  408720:	lea    rdx,[rip+0xebb9]        # 0x4172e0
  408727:	lea    rcx,[rip+0xebbc]        # 0x4172ea
  40872e:	mov    r8d,0x96
  408734:	call   0x40ca80
  408739:	jmp    0x4084b1
  40873e:	xchg   ax,ax
  408740:	cmp    BYTE PTR [rbp-0x30],0x0
  408744:	jne    0x408816
  40874a:	mov    rcx,QWORD PTR [rbp-0x20]
  40874e:	mov    r8,QWORD PTR [rip+0xffab]        # 0x418700
  408755:	movzx  eax,BYTE PTR [rcx]
  408758:	mov    edx,eax
  40875a:	and    eax,0x1f
  40875d:	shr    dl,0x5
  408760:	and    edx,0x7
  408763:	mov    edx,DWORD PTR [r8+rdx*4]
  408767:	bt     edx,eax
  40876a:	jae    0x408801
  408770:	mov    QWORD PTR [rbp-0x18],0x1
  408778:	movsx  ax,BYTE PTR [rcx]
  40877c:	mov    r14d,0x1
  408782:	mov    BYTE PTR [rbp-0x10],0x1
  408786:	mov    WORD PTR [rbp-0xe],ax
  40878a:	test   r14b,r14b
  40878d:	mov    BYTE PTR [rbp-0x28],0x1
  408791:	je     0x4086dc
  408797:	cmp    WORD PTR [rbp-0xe],0x0
  40879c:	jne    0x4086dc
  4087a2:	jmp    0x408493
  4087a7:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	lea    rdx,[rip+0xeb29]        # 0x4172e0
  4087b7:	lea    rcx,[rip+0xeb5a]        # 0x417318
  4087be:	mov    r8d,0xb3
  4087c4:	call   0x40ca80
  4087c9:	jmp    0x408517
  4087ce:	xchg   ax,ax
  4087d0:	lea    rdx,[rip+0xeb09]        # 0x4172e0
  4087d7:	lea    rcx,[rip+0xeb23]        # 0x417301
  4087de:	mov    r8d,0xb2
  4087e4:	call   0x40ca80
  4087e9:	jmp    0x40850c
  4087ee:	xchg   ax,ax
  4087f0:	mov    QWORD PTR [rbp+0x28],0x1
  4087f8:	mov    BYTE PTR [rbp+0x30],0x0
  4087fc:	jmp    0x4085bd
  408801:	mov    rcx,QWORD PTR [rbp-0x40]
  408805:	call   0x404620
  40880a:	test   eax,eax
  40880c:	je     0x40898c
  408812:	mov    BYTE PTR [rbp-0x30],0x1
  408816:	mov    rax,QWORD PTR [rip+0xfda3]        # 0x4185c0
  40881d:	mov    r15,QWORD PTR [rbp-0x20]
  408821:	mov    rax,QWORD PTR [rax]
  408824:	mov    rcx,r15
  408827:	movsxd rdx,DWORD PTR [rax]
  40882a:	call   0x4027a0
  40882f:	lea    rcx,[r13+0x22]
  408833:	lea    r9,[r13+0x4]
  408837:	mov    r8,rax
  40883a:	mov    rdx,r15
  40883d:	call   0x404510
  408842:	cmp    rax,0xffffffffffffffff
  408846:	mov    QWORD PTR [rbp-0x18],rax
  40884a:	je     0x408930
  408850:	cmp    rax,0xfffffffffffffffe
  408854:	je     0x408941
  40885a:	test   rax,rax
  40885d:	jne    0x40887f
  40885f:	mov    rax,QWORD PTR [rbp-0x20]
  408863:	mov    QWORD PTR [rbp-0x18],0x1
  40886b:	cmp    BYTE PTR [rax],0x0
  40886e:	jne    0x4089e6
  408874:	cmp    WORD PTR [rbp-0xe],0x0
  408879:	jne    0x408a0a
  40887f:	lea    rcx,[r13+0x4]
  408883:	mov    BYTE PTR [rbp-0x10],0x1
  408887:	call   0x404620
  40888c:	test   eax,eax
  40888e:	je     0x408894
  408890:	mov    BYTE PTR [rbp-0x30],0x0
  408894:	movzx  r14d,BYTE PTR [rbp-0x10]
  408899:	jmp    0x40878a
  40889e:	mov    rcx,QWORD PTR [rbp+0x20]
  4088a2:	call   0x4113a8
  4088a7:	mov    BYTE PTR [rbp+0x30],0x0
  4088ab:	mov    QWORD PTR [rbp+0x28],rax
  4088af:	jmp    0x4085bd
  4088b4:	lea    rax,[rdi+rdi*2]
  4088b8:	shl    rax,0x4
  4088bc:	add    rax,QWORD PTR [rbp-0x38]
  4088c0:	cmp    BYTE PTR [rax+0x10],0x0
  4088c4:	je     0x4083e0
  4088ca:	cmp    dx,WORD PTR [rax+0x12]
  4088ce:	sete   bl
  4088d1:	jmp    0x408551
  4088d6:	lea    rdx,[rip+0xea03]        # 0x4172e0
  4088dd:	lea    rcx,[rip+0xea06]        # 0x4172ea
  4088e4:	mov    r8d,0x96
  4088ea:	call   0x40ca80
  4088ef:	jmp    0x408631
  4088f4:	lea    rdx,[rip+0xe9e5]        # 0x4172e0
  4088fb:	lea    rcx,[rip+0xea16]        # 0x417318
  408902:	mov    r8d,0xb3
  408908:	call   0x40ca80
  40890d:	jmp    0x4086a2
  408912:	lea    rdx,[rip+0xe9c7]        # 0x4172e0
  408919:	lea    rcx,[rip+0xe9e1]        # 0x417301
  408920:	mov    r8d,0xb2
  408926:	call   0x40ca80
  40892b:	jmp    0x408697
  408930:	mov    QWORD PTR [rbp-0x18],0x1
  408938:	mov    BYTE PTR [rbp-0x10],0x0
  40893c:	jmp    0x40878a
  408941:	mov    rcx,QWORD PTR [rbp-0x20]
  408945:	call   0x4113a8
  40894a:	mov    BYTE PTR [rbp-0x10],0x0
  40894e:	mov    QWORD PTR [rbp-0x18],rax
  408952:	jmp    0x40878a
  408957:	lea    rdx,[rip+0xe982]        # 0x4172e0
  40895e:	lea    rcx,[rip+0xe985]        # 0x4172ea
  408965:	mov    r8d,0x96
  40896b:	call   0x40ca80
  408970:	jmp    0x408256
  408975:	mov    rax,QWORD PTR [rbp-0x20]
  408979:	mov    rdi,QWORD PTR [rbp+0xb0]
  408980:	mov    rsi,QWORD PTR [rbp-0x38]
  408984:	mov    QWORD PTR [rdi],rax
  408987:	jmp    0x4085da
  40898c:	lea    rdx,[rip+0xe94d]        # 0x4172e0
  408993:	lea    rcx,[rip+0xe950]        # 0x4172ea
  40899a:	mov    r8d,0x96
  4089a0:	call   0x40ca80
  4089a5:	jmp    0x408812
  4089aa:	lea    rdx,[rip+0xe92f]        # 0x4172e0
  4089b1:	lea    rcx,[rip+0xe960]        # 0x417318
  4089b8:	mov    r8d,0xb3
  4089be:	call   0x40ca80
  4089c3:	jmp    0x4081d8
  4089c8:	lea    rdx,[rip+0xe911]        # 0x4172e0
  4089cf:	lea    rcx,[rip+0xe92b]        # 0x417301
  4089d6:	mov    r8d,0xb2
  4089dc:	call   0x40ca80
  4089e1:	jmp    0x4081cd
  4089e6:	lea    rdx,[rip+0xe8f3]        # 0x4172e0
  4089ed:	lea    rcx,[rip+0xe90d]        # 0x417301
  4089f4:	mov    r8d,0xb2
  4089fa:	call   0x40ca80
  4089ff:	cmp    WORD PTR [rbp-0xe],0x0
  408a04:	je     0x40887f
  408a0a:	lea    rdx,[rip+0xe8cf]        # 0x4172e0
  408a11:	lea    rcx,[rip+0xe900]        # 0x417318
  408a18:	mov    r8d,0xb3
  408a1e:	call   0x40ca80
  408a23:	jmp    0x40887f
  408a28:	nop    DWORD PTR [rax+rax*1+0x0]
  408a30:	push   r15
  408a32:	push   r14
  408a34:	push   r13
  408a36:	push   r12
  408a38:	push   rbp
  408a39:	push   rdi
  408a3a:	push   rsi
  408a3b:	push   rbx
  408a3c:	sub    rsp,0x1a8
  408a43:	mov    rbp,QWORD PTR [rip+0xfb76]        # 0x4185c0
  408a4a:	mov    QWORD PTR [rsp+0x1f0],rcx
  408a52:	mov    r14,rdx
  408a55:	mov    rax,QWORD PTR [rbp+0x0]
  408a59:	cmp    DWORD PTR [rax],0x1
  408a5c:	jle    0x408d50
  408a62:	movsx  ax,BYTE PTR [rdx]
  408a66:	mov    QWORD PTR [rsp+0x70],rdx
  408a6b:	mov    rsi,QWORD PTR [rip+0xfc8e]        # 0x418700
  408a72:	mov    BYTE PTR [rsp+0x60],0x0
  408a77:	mov    DWORD PTR [rsp+0x64],0x0
  408a7f:	mov    BYTE PTR [rsp+0x68],0x0
  408a84:	mov    edx,eax
  408a86:	mov    ecx,eax
  408a88:	shr    dl,0x5
  408a8b:	and    ecx,0x1f
  408a8e:	and    edx,0x7
  408a91:	mov    edx,DWORD PTR [rsi+rdx*4]
  408a94:	bt     edx,ecx
  408a97:	jae    0x408e30
  408a9d:	mov    QWORD PTR [rsp+0x78],0x1
  408aa6:	mov    WORD PTR [rsp+0x82],ax
  408aae:	mov    BYTE PTR [rsp+0x80],0x1
  408ab6:	mov    BYTE PTR [rsp+0x68],0x1
  408abb:	cmp    WORD PTR [rsp+0x82],0x0
  408ac4:	je     0x408ef0
  408aca:	mov    rax,QWORD PTR [rsp+0x1f0]
  408ad2:	lea    r12,[rsp+0x160]
  408ada:	lea    r13,[rsp+0x120]
  408ae2:	mov    QWORD PTR [rsp+0xb0],r14
  408aea:	mov    BYTE PTR [rsp+0xa0],0x0
  408af2:	xor    edi,edi
  408af4:	mov    DWORD PTR [rsp+0xa4],0x0
  408aff:	mov    BYTE PTR [rsp+0xa8],0x0
  408b07:	mov    QWORD PTR [rsp+0xf0],rax
  408b0f:	lea    rax,[r12+0x4]
  408b14:	mov    BYTE PTR [rsp+0xe0],0x0
  408b1c:	mov    DWORD PTR [rsp+0xe4],0x0
  408b27:	mov    BYTE PTR [rsp+0xe8],0x0
  408b2f:	mov    QWORD PTR [rsp+0x40],rax
  408b34:	lea    rax,[rsp+0xa0]
  408b3c:	mov    QWORD PTR [rsp+0x28],0x0
  408b45:	mov    QWORD PTR [rsp+0x20],0x0
  408b4e:	mov    BYTE PTR [rsp+0x3f],0x1
  408b53:	mov    QWORD PTR [rsp+0x30],rax
  408b58:	lea    rax,[rsp+0xa4]
  408b60:	mov    QWORD PTR [rsp+0x1f8],r14
  408b68:	mov    QWORD PTR [rsp+0x50],rax
  408b6d:	lea    rax,[rsp+0xe0]
  408b75:	mov    QWORD PTR [rsp+0x48],rax
  408b7a:	cmp    BYTE PTR [rsp+0xe0],0x0
  408b82:	jne    0x408c1e
  408b88:	mov    rcx,QWORD PTR [rsp+0xf0]
  408b90:	movzx  eax,BYTE PTR [rcx]
  408b93:	mov    edx,eax
  408b95:	and    eax,0x1f
  408b98:	shr    dl,0x5
  408b9b:	and    edx,0x7
  408b9e:	mov    edx,DWORD PTR [rsi+rdx*4]
  408ba1:	bt     edx,eax
  408ba4:	jae    0x408c00
  408ba6:	mov    QWORD PTR [rsp+0xf8],0x1
  408bb2:	movsx  ax,BYTE PTR [rcx]
  408bb6:	mov    BYTE PTR [rsp+0x100],0x1
  408bbe:	mov    BYTE PTR [rsp+0xe8],0x1
  408bc6:	mov    WORD PTR [rsp+0x102],ax
  408bce:	cmp    WORD PTR [rsp+0x102],0x0
  408bd7:	jne    0x408f7a
  408bdd:	nop    DWORD PTR [rax]
  408be0:	xor    eax,eax
  408be2:	add    rsp,0x1a8
  408be9:	pop    rbx
  408bea:	pop    rsi
  408beb:	pop    rdi
  408bec:	pop    rbp
  408bed:	pop    r12
  408bef:	pop    r13
  408bf1:	pop    r14
  408bf3:	pop    r15
  408bf5:	ret    
  408bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c00:	mov    rax,QWORD PTR [rsp+0x48]
  408c05:	lea    rcx,[rax+0x4]
  408c09:	call   0x404620
  408c0e:	test   eax,eax
  408c10:	je     0x409bec
  408c16:	mov    BYTE PTR [rsp+0xe0],0x1
  408c1e:	mov    rax,QWORD PTR [rbp+0x0]
  408c22:	mov    rbx,QWORD PTR [rsp+0xf0]
  408c2a:	movsxd rdx,DWORD PTR [rax]
  408c2d:	mov    rcx,rbx
  408c30:	call   0x4027a0
  408c35:	mov    r8,rax
  408c38:	mov    rax,QWORD PTR [rsp+0x48]
  408c3d:	mov    rdx,rbx
  408c40:	lea    rcx,[rax+0x22]
  408c44:	lea    r9,[rax+0x4]
  408c48:	call   0x404510
  408c4d:	cmp    rax,0xffffffffffffffff
  408c51:	mov    QWORD PTR [rsp+0xf8],rax
  408c59:	je     0x409a00
  408c5f:	cmp    rax,0xfffffffffffffffe
  408c63:	je     0x408efd
  408c69:	test   rax,rax
  408c6c:	jne    0x408c9a
  408c6e:	mov    rax,QWORD PTR [rsp+0xf0]
  408c76:	mov    QWORD PTR [rsp+0xf8],0x1
  408c82:	cmp    BYTE PTR [rax],0x0
  408c85:	jne    0x409c4a
  408c8b:	cmp    WORD PTR [rsp+0x102],0x0
  408c94:	jne    0x409c2c
  408c9a:	mov    rax,QWORD PTR [rsp+0x48]
  408c9f:	mov    BYTE PTR [rsp+0x100],0x1
  408ca7:	lea    rcx,[rax+0x4]
  408cab:	call   0x404620
  408cb0:	test   eax,eax
  408cb2:	je     0x408cbc
  408cb4:	mov    BYTE PTR [rsp+0xe0],0x0
  408cbc:	movzx  eax,BYTE PTR [rsp+0x100]
  408cc4:	mov    BYTE PTR [rsp+0xe8],0x1
  408ccc:	test   al,al
  408cce:	jne    0x408bce
  408cd4:	cmp    QWORD PTR [rsp+0x28],0x9
  408cda:	jbe    0x408f2e
  408ce0:	cmp    BYTE PTR [rsp+0x3f],0x0
  408ce5:	je     0x408f2e
  408ceb:	mov    rax,QWORD PTR [rsp+0x28]
  408cf0:	lea    rax,[rax+rax*4]
  408cf4:	cmp    QWORD PTR [rsp+0x20],rax
  408cf9:	jae    0x408fc0
  408cff:	mov    rbx,QWORD PTR [rsp+0x20]
  408d04:	mov    BYTE PTR [rsp+0x3f],0x1
  408d09:	mov    QWORD PTR [rsp+0x20],rdi
  408d0e:	add    rbx,0x1
  408d12:	mov    r8,QWORD PTR [rsp+0xf8]
  408d1a:	cmp    r8,QWORD PTR [rsp+0x78]
  408d1f:	je     0x409732
  408d25:	mov    rdi,QWORD PTR [rsp+0x20]
  408d2a:	add    QWORD PTR [rsp+0xf0],r8
  408d32:	mov    BYTE PTR [rsp+0xe8],0x0
  408d3a:	add    QWORD PTR [rsp+0x28],0x1
  408d40:	mov    QWORD PTR [rsp+0x20],rbx
  408d45:	jmp    0x408b7a
  408d4a:	nop    WORD PTR [rax+rax*1+0x0]
  408d50:	movzx  r12d,BYTE PTR [rdx]
  408d54:	mov    rax,QWORD PTR [rsp+0x1f0]
  408d5c:	test   r12b,r12b
  408d5f:	je     0x408be2
  408d65:	cmp    BYTE PTR [rax],0x0
  408d68:	je     0x408be0
  408d6e:	mov    rax,QWORD PTR [rsp+0x1f0]
  408d76:	lea    rsi,[rsp+0x160]
  408d7e:	mov    rbp,rdx
  408d81:	xor    r13d,r13d
  408d84:	xor    r15d,r15d
  408d87:	xor    edi,edi
  408d89:	mov    QWORD PTR [rsp+0x20],rsi
  408d8e:	lea    rbx,[rax+0x1]
  408d92:	mov    eax,0x1
  408d97:	cmp    rdi,0x9
  408d9b:	lea    rsi,[rbx-0x1]
  408d9f:	jbe    0x408e00
  408da1:	test   al,al
  408da3:	je     0x408e00
  408da5:	lea    rax,[rdi+rdi*4]
  408da9:	cmp    r15,rax
  408dac:	jb     0x4096c2
  408db2:	test   rbp,rbp
  408db5:	je     0x408dd5
  408db7:	mov    rdx,r15
  408dba:	mov    rcx,rbp
  408dbd:	sub    rdx,r13
  408dc0:	mov    r13,r15
  408dc3:	call   0x40c900
  408dc8:	add    rbp,rax
  408dcb:	cmp    BYTE PTR [rbp+0x0],0x0
  408dcf:	jne    0x4096c2
  408dd5:	mov    rcx,r14
  408dd8:	call   0x4113a8
  408ddd:	mov    r9,QWORD PTR [rsp+0x20]
  408de2:	mov    r8,rax
  408de5:	mov    rdx,r14
  408de8:	mov    rcx,rsi
  408deb:	call   0x407ed0
  408df0:	test   al,al
  408df2:	jne    0x409cfb
  408df8:	xor    ebp,ebp
  408dfa:	xor    eax,eax
  408dfc:	nop    DWORD PTR [rax+0x0]
  408e00:	add    rdi,0x1
  408e04:	cmp    r12b,BYTE PTR [rbx-0x1]
  408e08:	lea    r8,[r15+0x1]
  408e0c:	je     0x4096d9
  408e12:	cmp    BYTE PTR [rbx],0x0
  408e15:	je     0x408be0
  408e1b:	add    rbx,0x1
  408e1f:	mov    r15,r8
  408e22:	jmp    0x408d97
  408e27:	nop    WORD PTR [rax+rax*1+0x0]
  408e30:	lea    rbx,[rsp+0x60]
  408e35:	lea    rcx,[rbx+0x4]
  408e39:	call   0x404620
  408e3e:	test   eax,eax
  408e40:	je     0x408f41
  408e46:	mov    rax,QWORD PTR [rbp+0x0]
  408e4a:	mov    rdi,QWORD PTR [rsp+0x70]
  408e4f:	mov    BYTE PTR [rsp+0x60],0x1
  408e54:	movsxd rdx,DWORD PTR [rax]
  408e57:	mov    rcx,rdi
  408e5a:	call   0x4027a0
  408e5f:	lea    rcx,[rbx+0x22]
  408e63:	lea    r9,[rbx+0x4]
  408e67:	mov    r8,rax
  408e6a:	mov    rdx,rdi
  408e6d:	call   0x404510
  408e72:	cmp    rax,0xffffffffffffffff
  408e76:	mov    QWORD PTR [rsp+0x78],rax
  408e7b:	je     0x408f5f
  408e81:	cmp    rax,0xfffffffffffffffe
  408e85:	je     0x409bd0
  408e8b:	test   rax,rax
  408e8e:	jne    0x408eb6
  408e90:	mov    rax,QWORD PTR [rsp+0x70]
  408e95:	mov    QWORD PTR [rsp+0x78],0x1
  408e9e:	cmp    BYTE PTR [rax],0x0
  408ea1:	jne    0x409b74
  408ea7:	cmp    WORD PTR [rsp+0x82],0x0
  408eb0:	jne    0x409b56
  408eb6:	lea    rcx,[rbx+0x4]
  408eba:	mov    BYTE PTR [rsp+0x80],0x1
  408ec2:	call   0x404620
  408ec7:	test   eax,eax
  408ec9:	je     0x408ed0
  408ecb:	mov    BYTE PTR [rsp+0x60],0x0
  408ed0:	movzx  eax,BYTE PTR [rsp+0x80]
  408ed8:	mov    BYTE PTR [rsp+0x68],0x1
  408edd:	test   al,al
  408edf:	je     0x408aca
  408ee5:	jmp    0x408abb
  408eea:	nop    WORD PTR [rax+rax*1+0x0]
  408ef0:	mov    rax,QWORD PTR [rsp+0x1f0]
  408ef8:	jmp    0x408be2
  408efd:	mov    rcx,QWORD PTR [rsp+0xf0]
  408f05:	call   0x4113a8
  408f0a:	mov    BYTE PTR [rsp+0x100],0x0
  408f12:	mov    QWORD PTR [rsp+0xf8],rax
  408f1a:	cmp    QWORD PTR [rsp+0x28],0x9
  408f20:	mov    BYTE PTR [rsp+0xe8],0x1
  408f28:	ja     0x408ce0
  408f2e:	mov    rbx,QWORD PTR [rsp+0x20]
  408f33:	mov    QWORD PTR [rsp+0x20],rdi
  408f38:	add    rbx,0x1
  408f3c:	jmp    0x408d12
  408f41:	lea    rdx,[rip+0xe398]        # 0x4172e0
  408f48:	lea    rcx,[rip+0xe39b]        # 0x4172ea
  408f4f:	mov    r8d,0x96
  408f55:	call   0x40ca80
  408f5a:	jmp    0x408e46
  408f5f:	mov    QWORD PTR [rsp+0x78],0x1
  408f68:	mov    BYTE PTR [rsp+0x80],0x0
  408f70:	mov    BYTE PTR [rsp+0x68],0x1
  408f75:	jmp    0x408aca
  408f7a:	cmp    QWORD PTR [rsp+0x28],0x9
  408f80:	jbe    0x409bb6
  408f86:	cmp    BYTE PTR [rsp+0x3f],0x0
  408f8b:	je     0x409bb6
  408f91:	mov    rax,QWORD PTR [rsp+0x28]
  408f96:	lea    rax,[rax+rax*4]
  408f9a:	cmp    QWORD PTR [rsp+0x20],rax
  408f9f:	jae    0x408fc0
  408fa1:	mov    rbx,QWORD PTR [rsp+0x20]
  408fa6:	mov    BYTE PTR [rsp+0x3f],0x1
  408fab:	mov    QWORD PTR [rsp+0x20],rdi
  408fb0:	add    rbx,0x1
  408fb4:	jmp    0x4090d9
  408fb9:	nop    DWORD PTR [rax+0x0]
  408fc0:	mov    r14,QWORD PTR [rsp+0x20]
  408fc5:	sub    r14,rdi
  408fc8:	je     0x4098c2
  408fce:	movzx  edi,BYTE PTR [rsp+0xa8]
  408fd6:	test   dil,dil
  408fd9:	je     0x409018
  408fdb:	movzx  edi,BYTE PTR [rsp+0xc0]
  408fe3:	test   dil,dil
  408fe6:	jne    0x40907e
  408fec:	mov    rbx,QWORD PTR [rsp+0xb8]
  408ff4:	add    rbx,QWORD PTR [rsp+0xb0]
  408ffc:	xor    edi,edi
  408ffe:	sub    r14,0x1
  409002:	mov    BYTE PTR [rsp+0xa8],0x0
  40900a:	mov    QWORD PTR [rsp+0xb0],rbx
  409012:	je     0x409901
  409018:	cmp    BYTE PTR [rsp+0xa0],0x0
  409020:	jne    0x40958a
  409026:	mov    rcx,QWORD PTR [rsp+0xb0]
  40902e:	movzx  eax,BYTE PTR [rcx]
  409031:	mov    edx,eax
  409033:	and    eax,0x1f
  409036:	shr    dl,0x5
  409039:	and    edx,0x7
  40903c:	mov    edx,DWORD PTR [rsi+rdx*4]
  40903f:	bt     edx,eax
  409042:	jae    0x409570
  409048:	mov    QWORD PTR [rsp+0xb8],0x1
  409054:	movsx  ax,BYTE PTR [rcx]
  409058:	mov    edi,0x1
  40905d:	mov    BYTE PTR [rsp+0xc0],0x1
  409065:	mov    WORD PTR [rsp+0xc2],ax
  40906d:	test   dil,dil
  409070:	mov    BYTE PTR [rsp+0xa8],0x1
  409078:	je     0x408fec
  40907e:	cmp    WORD PTR [rsp+0xc2],0x0
  409087:	jne    0x408fec
  40908d:	cmp    BYTE PTR [rsp+0xa8],0x0
  409095:	je     0x4098f9
  40909b:	mov    rdx,QWORD PTR [rsp+0x1f8]
  4090a3:	mov    rcx,QWORD PTR [rsp+0x1f0]
  4090ab:	mov    r8,r12
  4090ae:	call   0x408030
  4090b3:	test   al,al
  4090b5:	jne    0x409cfb
  4090bb:	movzx  eax,BYTE PTR [rsp+0x100]
  4090c3:	mov    BYTE PTR [rsp+0x3f],0x0
  4090c8:	mov    rdi,QWORD PTR [rsp+0x20]
  4090cd:	test   al,al
  4090cf:	lea    rbx,[rdi+0x1]
  4090d3:	je     0x408d12
  4090d9:	cmp    BYTE PTR [rsp+0x80],0x0
  4090e1:	je     0x408d12
  4090e7:	movzx  eax,WORD PTR [rsp+0x82]
  4090ef:	cmp    WORD PTR [rsp+0x102],ax
  4090f7:	sete   dil
  4090fb:	test   dil,dil
  4090fe:	je     0x409480
  409104:	mov    rax,QWORD PTR [rsp+0xe0]
  40910c:	mov    rdx,QWORD PTR [rsp+0x100]
  409114:	mov    BYTE PTR [rsp+0x160],0x0
  40911c:	mov    DWORD PTR [rsp+0x164],0x0
  409127:	mov    BYTE PTR [rsp+0x168],0x0
  40912f:	mov    QWORD PTR [rsp+0x120],rax
  409137:	mov    rax,QWORD PTR [rsp+0xe8]
  40913f:	mov    QWORD PTR [rsp+0x140],rdx
  409147:	mov    rdx,QWORD PTR [rsp+0x108]
  40914f:	mov    QWORD PTR [rsp+0x128],rax
  409157:	mov    rax,QWORD PTR [rsp+0xf0]
  40915f:	mov    QWORD PTR [rsp+0x148],rdx
  409167:	mov    rdx,QWORD PTR [rsp+0x110]
  40916f:	mov    BYTE PTR [rsp+0x128],0x0
  409177:	mov    QWORD PTR [rsp+0x130],rax
  40917f:	mov    rax,QWORD PTR [rsp+0xf8]
  409187:	add    QWORD PTR [rsp+0x130],rax
  40918f:	mov    QWORD PTR [rsp+0x150],rdx
  409197:	mov    rdx,QWORD PTR [rsp+0x118]
  40919f:	mov    QWORD PTR [rsp+0x138],rax
  4091a7:	mov    rax,QWORD PTR [rsp+0x1f8]
  4091af:	mov    QWORD PTR [rsp+0x158],rdx
  4091b7:	mov    QWORD PTR [rsp+0x170],rax
  4091bf:	movsx  ax,BYTE PTR [rax]
  4091c3:	mov    edx,eax
  4091c5:	mov    ecx,eax
  4091c7:	shr    dl,0x5
  4091ca:	and    ecx,0x1f
  4091cd:	and    edx,0x7
  4091d0:	mov    edx,DWORD PTR [rsi+rdx*4]
  4091d3:	bt     edx,ecx
  4091d6:	jae    0x4097b0
  4091dc:	mov    QWORD PTR [rsp+0x178],0x1
  4091e8:	mov    WORD PTR [rsp+0x182],ax
  4091f0:	mov    BYTE PTR [rsp+0x180],0x1
  4091f8:	mov    BYTE PTR [rsp+0x168],0x1
  409200:	cmp    WORD PTR [rsp+0x182],0x0
  409209:	je     0x409b51
  40920f:	nop
  409210:	mov    rax,QWORD PTR [rsp+0x178]
  409218:	add    QWORD PTR [rsp+0x170],rax
  409220:	add    rbx,0x1
  409224:	mov    BYTE PTR [rsp+0x168],0x0
  40922c:	nop    DWORD PTR [rax+0x0]
  409230:	cmp    BYTE PTR [rsp+0x160],0x0
  409238:	jne    0x4092ba
  40923e:	mov    rcx,QWORD PTR [rsp+0x170]
  409246:	movzx  eax,BYTE PTR [rcx]
  409249:	mov    edx,eax
  40924b:	and    eax,0x1f
  40924e:	shr    dl,0x5
  409251:	and    edx,0x7
  409254:	mov    edx,DWORD PTR [rsi+rdx*4]
  409257:	bt     edx,eax
  40925a:	jae    0x4092a0
  40925c:	mov    QWORD PTR [rsp+0x178],0x1
  409268:	movsx  ax,BYTE PTR [rcx]
  40926c:	mov    BYTE PTR [rsp+0x180],0x1
  409274:	mov    BYTE PTR [rsp+0x168],0x1
  40927c:	mov    WORD PTR [rsp+0x182],ax
  409284:	cmp    WORD PTR [rsp+0x182],0x0
  40928d:	jne    0x409369
  409293:	mov    rax,QWORD PTR [rsp+0xf0]
  40929b:	jmp    0x408be2
  4092a0:	mov    rcx,QWORD PTR [rsp+0x40]
  4092a5:	call   0x404620
  4092aa:	test   eax,eax
  4092ac:	je     0x409770
  4092b2:	mov    BYTE PTR [rsp+0x160],0x1
  4092ba:	mov    rax,QWORD PTR [rbp+0x0]
  4092be:	mov    r14,QWORD PTR [rsp+0x170]
  4092c6:	movsxd rdx,DWORD PTR [rax]
  4092c9:	mov    rcx,r14
  4092cc:	call   0x4027a0
  4092d1:	lea    rcx,[r12+0x22]
  4092d6:	lea    r9,[r12+0x4]
  4092db:	mov    r8,rax
  4092de:	mov    rdx,r14
  4092e1:	call   0x404510
  4092e6:	cmp    rax,0xffffffffffffffff
  4092ea:	mov    QWORD PTR [rsp+0x178],rax
  4092f2:	je     0x409635
  4092f8:	cmp    rax,0xfffffffffffffffe
  4092fc:	je     0x409680
  409302:	test   rax,rax
  409305:	jne    0x409333
  409307:	mov    rax,QWORD PTR [rsp+0x170]
  40930f:	mov    QWORD PTR [rsp+0x178],0x1
  40931b:	cmp    BYTE PTR [rax],0x0
  40931e:	jne    0x409980
  409324:	cmp    WORD PTR [rsp+0x182],0x0
  40932d:	jne    0x409960
  409333:	lea    rcx,[r12+0x4]
  409338:	mov    BYTE PTR [rsp+0x180],0x1
  409340:	call   0x404620
  409345:	test   eax,eax
  409347:	je     0x409351
  409349:	mov    BYTE PTR [rsp+0x160],0x0
  409351:	movzx  eax,BYTE PTR [rsp+0x180]
  409359:	mov    BYTE PTR [rsp+0x168],0x1
  409361:	test   al,al
  409363:	jne    0x409284
  409369:	movzx  r14d,BYTE PTR [rsp+0x128]
  409372:	test   r14b,r14b
  409375:	je     0x4093e5
  409377:	movzx  r14d,BYTE PTR [rsp+0x140]
  409380:	test   r14b,r14b
  409383:	jne    0x409445
  409389:	mov    r8,QWORD PTR [rsp+0x138]
  409391:	cmp    r8,QWORD PTR [rsp+0x178]
  409399:	mov    eax,edi
  40939b:	je     0x409550
  4093a1:	test   al,al
  4093a3:	lea    rdx,[rbx+0x1]
  4093a7:	jne    0x409480
  4093ad:	mov    rax,QWORD PTR [rsp+0x138]
  4093b5:	mov    BYTE PTR [rsp+0x128],0x0
  4093bd:	mov    rbx,rdx
  4093c0:	add    QWORD PTR [rsp+0x130],rax
  4093c8:	mov    BYTE PTR [rsp+0x168],0x0
  4093d0:	mov    rax,QWORD PTR [rsp+0x178]
  4093d8:	add    QWORD PTR [rsp+0x170],rax
  4093e0:	jmp    0x409230
  4093e5:	cmp    BYTE PTR [rsp+0x120],0x0
  4093ed:	jne    0x4094a9
  4093f3:	mov    rcx,QWORD PTR [rsp+0x130]
  4093fb:	movzx  eax,BYTE PTR [rcx]
  4093fe:	mov    edx,eax
  409400:	and    eax,0x1f
  409403:	shr    dl,0x5
  409406:	and    edx,0x7
  409409:	mov    edx,DWORD PTR [rsi+rdx*4]
  40940c:	bt     edx,eax
  40940f:	jae    0x409490
  409411:	mov    QWORD PTR [rsp+0x138],0x1
  40941d:	movsx  ax,BYTE PTR [rcx]
  409421:	mov    r14d,edi
  409424:	mov    BYTE PTR [rsp+0x140],0x1
  40942c:	mov    WORD PTR [rsp+0x142],ax
  409434:	test   r14b,r14b
  409437:	mov    BYTE PTR [rsp+0x128],0x1
  40943f:	je     0x409389
  409445:	movzx  eax,WORD PTR [rsp+0x142]
  40944d:	test   ax,ax
  409450:	je     0x408be0
  409456:	cmp    BYTE PTR [rsp+0x180],0x0
  40945e:	je     0x409389
  409464:	cmp    ax,WORD PTR [rsp+0x182]
  40946c:	lea    rdx,[rbx+0x1]
  409470:	setne  al
  409473:	test   al,al
  409475:	je     0x4093ad
  40947b:	nop    DWORD PTR [rax+rax*1+0x0]
  409480:	mov    r8,QWORD PTR [rsp+0xf8]
  409488:	jmp    0x408d25
  40948d:	nop    DWORD PTR [rax]
  409490:	lea    rcx,[r13+0x4]
  409494:	call   0x404620
  409499:	test   eax,eax
  40949b:	je     0x409790
  4094a1:	mov    BYTE PTR [rsp+0x120],0x1
  4094a9:	mov    rax,QWORD PTR [rbp+0x0]
  4094ad:	mov    r15,QWORD PTR [rsp+0x130]
  4094b5:	movsxd rdx,DWORD PTR [rax]
  4094b8:	mov    rcx,r15
  4094bb:	call   0x4027a0
  4094c0:	lea    rcx,[r13+0x22]
  4094c4:	lea    r9,[r13+0x4]
  4094c8:	mov    r8,rax
  4094cb:	mov    rdx,r15
  4094ce:	call   0x404510
  4094d3:	cmp    rax,0xffffffffffffffff
  4094d7:	mov    QWORD PTR [rsp+0x138],rax
  4094df:	je     0x409660
  4094e5:	cmp    rax,0xfffffffffffffffe
  4094e9:	je     0x4096a0
  4094ef:	test   rax,rax
  4094f2:	jne    0x409520
  4094f4:	mov    rax,QWORD PTR [rsp+0x130]
  4094fc:	mov    QWORD PTR [rsp+0x138],0x1
  409508:	cmp    BYTE PTR [rax],0x0
  40950b:	jne    0x4099c0
  409511:	cmp    WORD PTR [rsp+0x142],0x0
  40951a:	jne    0x4099a0
  409520:	lea    rcx,[r13+0x4]
  409524:	mov    BYTE PTR [rsp+0x140],0x1
  40952c:	call   0x404620
  409531:	test   eax,eax
  409533:	je     0x40953d
  409535:	mov    BYTE PTR [rsp+0x120],0x0
  40953d:	movzx  r14d,BYTE PTR [rsp+0x140]
  409546:	jmp    0x409434
  40954b:	nop    DWORD PTR [rax+rax*1+0x0]
  409550:	mov    rdx,QWORD PTR [rsp+0x170]
  409558:	mov    rcx,QWORD PTR [rsp+0x130]
  409560:	call   0x411410
  409565:	test   eax,eax
  409567:	setne  al
  40956a:	jmp    0x4093a1
  40956f:	nop
  409570:	mov    rcx,QWORD PTR [rsp+0x50]
  409575:	call   0x404620
  40957a:	test   eax,eax
  40957c:	je     0x4099e0
  409582:	mov    BYTE PTR [rsp+0xa0],0x1
  40958a:	mov    rax,QWORD PTR [rbp+0x0]
  40958e:	mov    rbx,QWORD PTR [rsp+0xb0]
  409596:	movsxd rdx,DWORD PTR [rax]
  409599:	mov    rcx,rbx
  40959c:	call   0x4027a0
  4095a1:	mov    r8,rax
  4095a4:	mov    rax,QWORD PTR [rsp+0x30]
  4095a9:	mov    rdx,rbx
  4095ac:	lea    rcx,[rax+0x22]
  4095b0:	lea    r9,[rax+0x4]
  4095b4:	call   0x404510
  4095b9:	cmp    rax,0xffffffffffffffff
  4095bd:	mov    QWORD PTR [rsp+0xb8],rax
  4095c5:	je     0x409750
  4095cb:	cmp    rax,0xfffffffffffffffe
  4095cf:	je     0x4098a0
  4095d5:	test   rax,rax
  4095d8:	jne    0x409606
  4095da:	mov    rax,QWORD PTR [rsp+0xb0]
  4095e2:	mov    QWORD PTR [rsp+0xb8],0x1
  4095ee:	cmp    BYTE PTR [rax],0x0
  4095f1:	jne    0x409afc
  4095f7:	cmp    WORD PTR [rsp+0xc2],0x0
  409600:	jne    0x409ade
  409606:	mov    rax,QWORD PTR [rsp+0x30]
  40960b:	mov    BYTE PTR [rsp+0xc0],0x1
  409613:	lea    rcx,[rax+0x4]
  409617:	call   0x404620
  40961c:	test   eax,eax
  40961e:	je     0x409628
  409620:	mov    BYTE PTR [rsp+0xa0],0x0
  409628:	movzx  edi,BYTE PTR [rsp+0xc0]
  409630:	jmp    0x40906d
  409635:	mov    QWORD PTR [rsp+0x178],0x1
  409641:	mov    BYTE PTR [rsp+0x180],0x0
  409649:	mov    BYTE PTR [rsp+0x168],0x1
  409651:	jmp    0x409369
  409656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409660:	mov    QWORD PTR [rsp+0x138],0x1
  40966c:	mov    BYTE PTR [rsp+0x140],0x0
  409674:	jmp    0x409434
  409679:	nop    DWORD PTR [rax+0x0]
  409680:	mov    rcx,QWORD PTR [rsp+0x170]
  409688:	call   0x4113a8
  40968d:	mov    BYTE PTR [rsp+0x180],0x0
  409695:	mov    QWORD PTR [rsp+0x178],rax
  40969d:	jmp    0x409649
  40969f:	nop
  4096a0:	mov    rcx,QWORD PTR [rsp+0x130]
  4096a8:	call   0x4113a8
  4096ad:	mov    BYTE PTR [rsp+0x140],0x0
  4096b5:	mov    QWORD PTR [rsp+0x138],rax
  4096bd:	jmp    0x409434
  4096c2:	add    rdi,0x1
  4096c6:	cmp    r12b,BYTE PTR [rbx-0x1]
  4096ca:	mov    eax,0x1
  4096cf:	lea    r8,[r15+0x1]
  4096d3:	jne    0x408e12
  4096d9:	movzx  edx,BYTE PTR [r14+0x1]
  4096de:	test   dl,dl
  4096e0:	je     0x40972a
  4096e2:	movzx  ecx,BYTE PTR [rbx]
  4096e5:	test   cl,cl
  4096e7:	je     0x408be0
  4096ed:	cmp    dl,cl
  4096ef:	lea    r8,[r15+0x2]
  4096f3:	jne    0x408e1b
  4096f9:	neg    r15
  4096fc:	lea    rdx,[r14+r15*1]
  409700:	add    r15,rsi
  409703:	jmp    0x409720
  409705:	movzx  r10d,BYTE PTR [r15+r8*1]
  40970a:	test   r10b,r10b
  40970d:	je     0x408be0
  409713:	add    r8,0x1
  409717:	cmp    r9b,r10b
  40971a:	jne    0x408e1b
  409720:	movzx  r9d,BYTE PTR [rdx+r8*1]
  409725:	test   r9b,r9b
  409728:	jne    0x409705
  40972a:	mov    rax,rsi
  40972d:	jmp    0x408be2
  409732:	mov    rdx,QWORD PTR [rsp+0x70]
  409737:	mov    rcx,QWORD PTR [rsp+0xf0]
  40973f:	call   0x411410
  409744:	test   eax,eax
  409746:	sete   dil
  40974a:	jmp    0x4090fb
  40974f:	nop
  409750:	mov    QWORD PTR [rsp+0xb8],0x1
  40975c:	mov    BYTE PTR [rsp+0xc0],0x0
  409764:	jmp    0x40906d
  409769:	nop    DWORD PTR [rax+0x0]
  409770:	lea    rdx,[rip+0xdb69]        # 0x4172e0
  409777:	lea    rcx,[rip+0xdb6c]        # 0x4172ea
  40977e:	mov    r8d,0x96
  409784:	call   0x40ca80
  409789:	jmp    0x4092b2
  40978e:	xchg   ax,ax
  409790:	lea    rdx,[rip+0xdb49]        # 0x4172e0
  409797:	lea    rcx,[rip+0xdb4c]        # 0x4172ea
  40979e:	mov    r8d,0x96
  4097a4:	call   0x40ca80
  4097a9:	jmp    0x4094a1
  4097ae:	xchg   ax,ax
  4097b0:	mov    rcx,QWORD PTR [rsp+0x40]
  4097b5:	call   0x404620
  4097ba:	test   eax,eax
  4097bc:	je     0x409b1a
  4097c2:	mov    rax,QWORD PTR [rbp+0x0]
  4097c6:	mov    r10,QWORD PTR [rsp+0x170]
  4097ce:	mov    BYTE PTR [rsp+0x160],0x1
  4097d6:	movsxd rdx,DWORD PTR [rax]
  4097d9:	mov    rcx,r10
  4097dc:	mov    QWORD PTR [rsp+0x58],r10
  4097e1:	call   0x4027a0
  4097e6:	mov    r10,QWORD PTR [rsp+0x58]
  4097eb:	mov    r9,QWORD PTR [rsp+0x40]
  4097f0:	lea    rcx,[r12+0x22]
  4097f5:	mov    r8,rax
  4097f8:	mov    rdx,r10
  4097fb:	call   0x404510
  409800:	cmp    rax,0xffffffffffffffff
  409804:	mov    QWORD PTR [rsp+0x178],rax
  40980c:	je     0x409b38
  409812:	cmp    rax,0xfffffffffffffffe
  409816:	je     0x409c0a
  40981c:	test   rax,rax
  40981f:	jne    0x409862
  409821:	mov    rax,QWORD PTR [rsp+0x170]
  409829:	mov    QWORD PTR [rsp+0x178],0x1
  409835:	cmp    BYTE PTR [rax],0x0
  409838:	jne    0x409c83
  40983e:	cmp    WORD PTR [rsp+0x182],0x0
  409847:	je     0x409862
  409849:	lea    rdx,[rip+0xda90]        # 0x4172e0
  409850:	lea    rcx,[rip+0xdac1]        # 0x417318
  409857:	mov    r8d,0xb3
  40985d:	call   0x40ca80
  409862:	mov    rcx,QWORD PTR [rsp+0x40]
  409867:	mov    BYTE PTR [rsp+0x180],0x1
  40986f:	call   0x404620
  409874:	test   eax,eax
  409876:	je     0x409880
  409878:	mov    BYTE PTR [rsp+0x160],0x0
  409880:	movzx  eax,BYTE PTR [rsp+0x180]
  409888:	mov    BYTE PTR [rsp+0x168],0x1
  409890:	test   al,al
  409892:	je     0x409210
  409898:	jmp    0x409200
  40989d:	nop    DWORD PTR [rax]
  4098a0:	mov    rcx,QWORD PTR [rsp+0xb0]
  4098a8:	call   0x4113a8
  4098ad:	mov    BYTE PTR [rsp+0xc0],0x0
  4098b5:	mov    QWORD PTR [rsp+0xb8],rax
  4098bd:	jmp    0x40906d
  4098c2:	cmp    BYTE PTR [rsp+0xa8],0x0
  4098ca:	je     0x4098f9
  4098cc:	movzx  eax,BYTE PTR [rsp+0xc0]
  4098d4:	test   al,al
  4098d6:	je     0x4098e7
  4098d8:	cmp    WORD PTR [rsp+0xc2],0x0
  4098e1:	je     0x40909b
  4098e7:	movzx  eax,BYTE PTR [rsp+0x100]
  4098ef:	mov    BYTE PTR [rsp+0x3f],0x1
  4098f4:	jmp    0x4090c8
  4098f9:	mov    rbx,QWORD PTR [rsp+0xb0]
  409901:	cmp    BYTE PTR [rsp+0xa0],0x0
  409909:	jne    0x409a3b
  40990f:	movzx  eax,BYTE PTR [rbx]
  409912:	mov    edx,eax
  409914:	and    eax,0x1f
  409917:	shr    dl,0x5
  40991a:	and    edx,0x7
  40991d:	mov    edx,DWORD PTR [rsi+rdx*4]
  409920:	bt     edx,eax
  409923:	jae    0x409a19
  409929:	mov    QWORD PTR [rsp+0xb8],0x1
  409935:	movsx  ax,BYTE PTR [rbx]
  409939:	mov    BYTE PTR [rsp+0xc0],0x1
  409941:	mov    WORD PTR [rsp+0xc2],ax
  409949:	mov    eax,0x1
  40994e:	mov    BYTE PTR [rsp+0xa8],0x1
  409956:	jmp    0x4098d4
  40995b:	nop    DWORD PTR [rax+rax*1+0x0]
  409960:	lea    rdx,[rip+0xd979]        # 0x4172e0
  409967:	lea    rcx,[rip+0xd9aa]        # 0x417318
  40996e:	mov    r8d,0xb3
  409974:	call   0x40ca80
  409979:	jmp    0x409333
  40997e:	xchg   ax,ax
  409980:	lea    rdx,[rip+0xd959]        # 0x4172e0
  409987:	lea    rcx,[rip+0xd973]        # 0x417301
  40998e:	mov    r8d,0xb2
  409994:	call   0x40ca80
  409999:	jmp    0x409324
  40999e:	xchg   ax,ax
  4099a0:	lea    rdx,[rip+0xd939]        # 0x4172e0
  4099a7:	lea    rcx,[rip+0xd96a]        # 0x417318
  4099ae:	mov    r8d,0xb3
  4099b4:	call   0x40ca80
  4099b9:	jmp    0x409520
  4099be:	xchg   ax,ax
  4099c0:	lea    rdx,[rip+0xd919]        # 0x4172e0
  4099c7:	lea    rcx,[rip+0xd933]        # 0x417301
  4099ce:	mov    r8d,0xb2
  4099d4:	call   0x40ca80
  4099d9:	jmp    0x409511
  4099de:	xchg   ax,ax
  4099e0:	lea    rdx,[rip+0xd8f9]        # 0x4172e0
  4099e7:	lea    rcx,[rip+0xd8fc]        # 0x4172ea
  4099ee:	mov    r8d,0x96
  4099f4:	call   0x40ca80
  4099f9:	jmp    0x409582
  4099fe:	xchg   ax,ax
  409a00:	mov    QWORD PTR [rsp+0xf8],0x1
  409a0c:	mov    BYTE PTR [rsp+0x100],0x0
  409a14:	jmp    0x408f1a
  409a19:	mov    rcx,QWORD PTR [rsp+0x50]
  409a1e:	call   0x404620
  409a23:	test   eax,eax
  409a25:	je     0x409ca1
  409a2b:	mov    rbx,QWORD PTR [rsp+0xb0]
  409a33:	mov    BYTE PTR [rsp+0xa0],0x1
  409a3b:	mov    rax,QWORD PTR [rbp+0x0]
  409a3f:	mov    rcx,rbx
  409a42:	movsxd rdx,DWORD PTR [rax]
  409a45:	call   0x4027a0
  409a4a:	mov    r8,rax
  409a4d:	mov    rax,QWORD PTR [rsp+0x30]
  409a52:	mov    rdx,rbx
  409a55:	lea    rcx,[rax+0x22]
  409a59:	lea    r9,[rax+0x4]
  409a5d:	call   0x404510
  409a62:	cmp    rax,0xffffffffffffffff
  409a66:	mov    QWORD PTR [rsp+0xb8],rax
  409a6e:	je     0x409c68
  409a74:	cmp    rax,0xfffffffffffffffe
  409a78:	je     0x409b92
  409a7e:	test   rax,rax
  409a81:	jne    0x409aaf
  409a83:	mov    rax,QWORD PTR [rsp+0xb0]
  409a8b:	mov    QWORD PTR [rsp+0xb8],0x1
  409a97:	cmp    BYTE PTR [rax],0x0
  409a9a:	jne    0x409cdd
  409aa0:	cmp    WORD PTR [rsp+0xc2],0x0
  409aa9:	jne    0x409cbf
  409aaf:	mov    rax,QWORD PTR [rsp+0x30]
  409ab4:	mov    BYTE PTR [rsp+0xc0],0x1
  409abc:	lea    rcx,[rax+0x4]
  409ac0:	call   0x404620
  409ac5:	test   eax,eax
  409ac7:	je     0x409ad1
  409ac9:	mov    BYTE PTR [rsp+0xa0],0x0
  409ad1:	movzx  eax,BYTE PTR [rsp+0xc0]
  409ad9:	jmp    0x40994e
  409ade:	lea    rdx,[rip+0xd7fb]        # 0x4172e0
  409ae5:	lea    rcx,[rip+0xd82c]        # 0x417318
  409aec:	mov    r8d,0xb3
  409af2:	call   0x40ca80
  409af7:	jmp    0x409606
  409afc:	lea    rdx,[rip+0xd7dd]        # 0x4172e0
  409b03:	lea    rcx,[rip+0xd7f7]        # 0x417301
  409b0a:	mov    r8d,0xb2
  409b10:	call   0x40ca80
  409b15:	jmp    0x4095f7
  409b1a:	lea    rdx,[rip+0xd7bf]        # 0x4172e0
  409b21:	lea    rcx,[rip+0xd7c2]        # 0x4172ea
  409b28:	mov    r8d,0x96
  409b2e:	call   0x40ca80
  409b33:	jmp    0x4097c2
  409b38:	mov    QWORD PTR [rsp+0x178],0x1
  409b44:	mov    BYTE PTR [rsp+0x180],0x0
  409b4c:	jmp    0x409210
  409b51:	call   0x4114a0
  409b56:	lea    rdx,[rip+0xd783]        # 0x4172e0
  409b5d:	lea    rcx,[rip+0xd7b4]        # 0x417318
  409b64:	mov    r8d,0xb3
  409b6a:	call   0x40ca80
  409b6f:	jmp    0x408eb6
  409b74:	lea    rdx,[rip+0xd765]        # 0x4172e0
  409b7b:	lea    rcx,[rip+0xd77f]        # 0x417301
  409b82:	mov    r8d,0xb2
  409b88:	call   0x40ca80
  409b8d:	jmp    0x408ea7
  409b92:	mov    rcx,QWORD PTR [rsp+0xb0]
  409b9a:	call   0x4113a8
  409b9f:	mov    BYTE PTR [rsp+0xc0],0x0
  409ba7:	mov    QWORD PTR [rsp+0xb8],rax
  409baf:	xor    eax,eax
  409bb1:	jmp    0x40994e
  409bb6:	mov    rbx,QWORD PTR [rsp+0x20]
  409bbb:	mov    QWORD PTR [rsp+0x20],rdi
  409bc0:	add    rbx,0x1
  409bc4:	jmp    0x4090d9
  409bc9:	nop    DWORD PTR [rax+0x0]
  409bd0:	mov    rcx,QWORD PTR [rsp+0x70]
  409bd5:	call   0x4113a8
  409bda:	mov    BYTE PTR [rsp+0x80],0x0
  409be2:	mov    QWORD PTR [rsp+0x78],rax
  409be7:	jmp    0x408f70
  409bec:	lea    rdx,[rip+0xd6ed]        # 0x4172e0
  409bf3:	lea    rcx,[rip+0xd6f0]        # 0x4172ea
  409bfa:	mov    r8d,0x96
  409c00:	call   0x40ca80
  409c05:	jmp    0x408c16
  409c0a:	mov    rcx,QWORD PTR [rsp+0x170]
  409c12:	call   0x4113a8
  409c17:	mov    BYTE PTR [rsp+0x180],0x0
  409c1f:	mov    QWORD PTR [rsp+0x178],rax
  409c27:	jmp    0x409210
  409c2c:	lea    rdx,[rip+0xd6ad]        # 0x4172e0
  409c33:	lea    rcx,[rip+0xd6de]        # 0x417318
  409c3a:	mov    r8d,0xb3
  409c40:	call   0x40ca80
  409c45:	jmp    0x408c9a
  409c4a:	lea    rdx,[rip+0xd68f]        # 0x4172e0
  409c51:	lea    rcx,[rip+0xd6a9]        # 0x417301
  409c58:	mov    r8d,0xb2
  409c5e:	call   0x40ca80
  409c63:	jmp    0x408c8b
  409c68:	mov    QWORD PTR [rsp+0xb8],0x1
  409c74:	mov    BYTE PTR [rsp+0xc0],0x0
  409c7c:	xor    eax,eax
  409c7e:	jmp    0x40994e
  409c83:	lea    rdx,[rip+0xd656]        # 0x4172e0
  409c8a:	lea    rcx,[rip+0xd670]        # 0x417301
  409c91:	mov    r8d,0xb2
  409c97:	call   0x40ca80
  409c9c:	jmp    0x40983e
  409ca1:	lea    rdx,[rip+0xd638]        # 0x4172e0
  409ca8:	lea    rcx,[rip+0xd63b]        # 0x4172ea
  409caf:	mov    r8d,0x96
  409cb5:	call   0x40ca80
  409cba:	jmp    0x409a2b
  409cbf:	lea    rdx,[rip+0xd61a]        # 0x4172e0
  409cc6:	lea    rcx,[rip+0xd64b]        # 0x417318
  409ccd:	mov    r8d,0xb3
  409cd3:	call   0x40ca80
  409cd8:	jmp    0x409aaf
  409cdd:	lea    rdx,[rip+0xd5fc]        # 0x4172e0
  409ce4:	lea    rcx,[rip+0xd616]        # 0x417301
  409ceb:	mov    r8d,0xb2
  409cf1:	call   0x40ca80
  409cf6:	jmp    0x409aa0
  409cfb:	mov    rax,QWORD PTR [rsp+0x160]
  409d03:	jmp    0x408be2
  409d08:	nop
  409d09:	nop
  409d0a:	nop
  409d0b:	nop
  409d0c:	nop
  409d0d:	nop
  409d0e:	nop
  409d0f:	nop
  409d10:	push   r15
  409d12:	push   r14
  409d14:	mov    eax,0x1058
  409d19:	push   r13
  409d1b:	push   r12
  409d1d:	push   rbp
  409d1e:	push   rdi
  409d1f:	push   rsi
  409d20:	push   rbx
  409d21:	call   0x40c550
  409d26:	sub    rsp,rax
  409d29:	xor    esi,esi
  409d2b:	mov    rdi,r8
  409d2e:	mov    r15,rdx
  409d31:	mov    QWORD PTR [rsp+0x10a0],rcx
  409d39:	mov    QWORD PTR [rsp+0x10b8],r9
  409d41:	xor    r8d,r8d
  409d44:	xor    r9d,r9d
  409d47:	xor    edx,edx
  409d49:	mov    QWORD PTR [rsp+0x20],0x0
  409d52:	mov    rcx,rdi
  409d55:	call   0x40b028
  409d5a:	mov    rax,QWORD PTR [rsp+0x10a0]
  409d62:	test   r15,r15
  409d65:	mov    QWORD PTR [rsp+0x38],r15
  409d6a:	lea    rbx,[rsp+0x50]
  409d6f:	lea    r12,[rsp+0x40]
  409d74:	mov    QWORD PTR [rsp+0x30],rax
  409d79:	je     0x409f90
  409d7f:	lea    r14,[rsp+0x38]
  409d84:	lea    r13,[rsp+0x30]
  409d89:	lea    rbp,[rsp+0x48]
  409d8e:	jmp    0x409da3
  409d90:	mov    rax,QWORD PTR [rsp+0x40]
  409d95:	sub    rax,rbx
  409d98:	add    rsi,rax
  409d9b:	cmp    QWORD PTR [rsp+0x38],0x0
  409da1:	je     0x409df0
  409da3:	mov    QWORD PTR [rsp+0x20],rbp
  409da8:	mov    r9,r12
  409dab:	mov    r8,r14
  409dae:	mov    rdx,r13
  409db1:	mov    rcx,rdi
  409db4:	mov    QWORD PTR [rsp+0x40],rbx
  409db9:	mov    QWORD PTR [rsp+0x48],0x1000
  409dc2:	call   0x40b028
  409dc7:	cmp    rax,0xffffffffffffffff
  409dcb:	jne    0x409d90
  409dcd:	call   QWORD PTR [rip+0x1583d]        # 0x41f610
  409dd3:	cmp    DWORD PTR [rax],0x7
  409dd6:	je     0x409d90
  409dd8:	call   QWORD PTR [rip+0x15832]        # 0x41f610
  409dde:	cmp    DWORD PTR [rax],0x16
  409de1:	jne    0x409f33
  409de7:	nop    WORD PTR [rax+rax*1+0x0]
  409df0:	xor    r8d,r8d
  409df3:	xor    edx,edx
  409df5:	mov    QWORD PTR [rsp+0x20],rbp
  409dfa:	mov    r9,r12
  409dfd:	mov    rcx,rdi
  409e00:	mov    QWORD PTR [rsp+0x40],rbx
  409e05:	mov    QWORD PTR [rsp+0x48],0x1000
  409e0e:	call   0x40b028
  409e13:	cmp    rax,0xffffffffffffffff
  409e17:	je     0x409f33
  409e1d:	mov    rax,QWORD PTR [rsp+0x40]
  409e22:	sub    rax,rbx
  409e25:	add    rsi,rax
  409e28:	je     0x409f40
  409e2e:	mov    rax,QWORD PTR [rsp+0x10b8]
  409e36:	mov    r13,QWORD PTR [rax]
  409e39:	test   r13,r13
  409e3c:	je     0x409f13
  409e42:	mov    rax,QWORD PTR [rsp+0x10c0]
  409e4a:	cmp    rsi,QWORD PTR [rax]
  409e4d:	ja     0x409f13
  409e53:	mov    QWORD PTR [rsp+0x20],0x0
  409e5c:	xor    r9d,r9d
  409e5f:	xor    r8d,r8d
  409e62:	xor    edx,edx
  409e64:	mov    rcx,rdi
  409e67:	lea    r14,[rsp+0x38]
  409e6c:	call   0x40b028
  409e71:	mov    rax,QWORD PTR [rsp+0x10a0]
  409e79:	mov    QWORD PTR [rsp+0x40],r15
  409e7e:	mov    QWORD PTR [rsp+0x48],r13
  409e83:	mov    QWORD PTR [rsp+0x50],rsi
  409e88:	mov    QWORD PTR [rsp+0x38],rax
  409e8d:	jmp    0x409eb5
  409e8f:	nop
  409e90:	mov    QWORD PTR [rsp+0x20],rbx
  409e95:	mov    r9,rbp
  409e98:	mov    r8,r12
  409e9b:	mov    rdx,r14
  409e9e:	mov    rcx,rdi
  409ea1:	call   0x40b028
  409ea6:	cmp    rax,0xffffffffffffffff
  409eaa:	je     0x409f53
  409eb0:	mov    r15,QWORD PTR [rsp+0x40]
  409eb5:	test   r15,r15
  409eb8:	jne    0x409e90
  409eba:	xor    r8d,r8d
  409ebd:	xor    edx,edx
  409ebf:	mov    QWORD PTR [rsp+0x20],rbx
  409ec4:	mov    r9,rbp
  409ec7:	mov    rcx,rdi
  409eca:	call   0x40b028
  409ecf:	cmp    rax,0xffffffffffffffff
  409ed3:	je     0x409f62
  409ed9:	cmp    QWORD PTR [rsp+0x50],0x0
  409edf:	jne    0x409f9a
  409ee5:	mov    rax,QWORD PTR [rsp+0x10b8]
  409eed:	xor    ebx,ebx
  409eef:	mov    QWORD PTR [rax],r13
  409ef2:	mov    rax,QWORD PTR [rsp+0x10c0]
  409efa:	mov    QWORD PTR [rax],rsi
  409efd:	mov    eax,ebx
  409eff:	add    rsp,0x1058
  409f06:	pop    rbx
  409f07:	pop    rsi
  409f08:	pop    rdi
  409f09:	pop    rbp
  409f0a:	pop    r12
  409f0c:	pop    r13
  409f0e:	pop    r14
  409f10:	pop    r15
  409f12:	ret    
  409f13:	mov    rcx,rsi
  409f16:	call   0x411418
  409f1b:	test   rax,rax
  409f1e:	mov    r13,rax
  409f21:	jne    0x409e53
  409f27:	call   QWORD PTR [rip+0x156e3]        # 0x41f610
  409f2d:	mov    DWORD PTR [rax],0xc
  409f33:	mov    ebx,0xffffffff
  409f38:	jmp    0x409efd
  409f3a:	nop    WORD PTR [rax+rax*1+0x0]
  409f40:	mov    rax,QWORD PTR [rsp+0x10c0]
  409f48:	xor    ebx,ebx
  409f4a:	mov    QWORD PTR [rax],0x0
  409f51:	jmp    0x409efd
  409f53:	call   QWORD PTR [rip+0x156b7]        # 0x41f610
  409f59:	cmp    DWORD PTR [rax],0x16
  409f5c:	je     0x409eba
  409f62:	mov    rax,QWORD PTR [rsp+0x10b8]
  409f6a:	mov    ebx,0xffffffff
  409f6f:	cmp    QWORD PTR [rax],r13
  409f72:	je     0x409efd
  409f74:	mov    rsi,QWORD PTR [rip+0x15695]        # 0x41f610
  409f7b:	call   rsi
  409f7d:	mov    edi,DWORD PTR [rax]
  409f7f:	mov    rcx,r13
  409f82:	call   0x411458
  409f87:	call   rsi
  409f89:	mov    DWORD PTR [rax],edi
  409f8b:	jmp    0x409efd
  409f90:	lea    rbp,[rsp+0x48]
  409f95:	jmp    0x409df0
  409f9a:	call   0x4114a0
  409f9f:	nop
  409fa0:	push   r15
  409fa2:	push   r14
  409fa4:	push   r13
  409fa6:	push   r12
  409fa8:	push   rbp
  409fa9:	push   rdi
  409faa:	push   rsi
  409fab:	push   rbx
  409fac:	sub    rsp,0x68
  409fb0:	mov    rbp,rdx
  409fb3:	mov    QWORD PTR [rsp+0x40],rcx
  409fb8:	call   0x4113a8
  409fbd:	cmp    rax,0x33333333
  409fc3:	mov    rdi,rax
  409fc6:	mov    QWORD PTR [rsp+0x48],rax
  409fcb:	lea    rax,[rax+rax*4]
  409fcf:	cmovbe rdi,rax
  409fd3:	lea    rsi,[rdi+0x1]
  409fd7:	mov    rcx,rsi
  409fda:	call   0x411418
  409fdf:	test   rax,rax
  409fe2:	mov    rbx,rax
  409fe5:	je     0x40a18b
  409feb:	mov    QWORD PTR [rsp+0x20],0x0
  409ff4:	xor    r9d,r9d
  409ff7:	xor    r8d,r8d
  409ffa:	xor    edx,edx
  409ffc:	mov    rcx,rbp
  409fff:	lea    r12,[rsp+0x50]
  40a004:	call   0x40b028
  40a009:	lea    rax,[rsp+0x48]
  40a00e:	mov    QWORD PTR [rsp+0x50],rbx
  40a013:	mov    QWORD PTR [rsp+0x58],rdi
  40a018:	lea    r13,[rsp+0x58]
  40a01d:	mov    QWORD PTR [rsp+0x30],rax
  40a022:	lea    rax,[rsp+0x40]
  40a027:	mov    QWORD PTR [rsp+0x38],rax
  40a02c:	jmp    0x40a091
  40a02e:	xchg   ax,ax
  40a030:	mov    rdi,QWORD PTR [rip+0x155d9]        # 0x41f610
  40a037:	call   rdi
  40a039:	cmp    DWORD PTR [rax],0x16
  40a03c:	je     0x40a10e
  40a042:	call   rdi
  40a044:	cmp    DWORD PTR [rax],0x7
  40a047:	jne    0x40a168
  40a04d:	mov    r15,QWORD PTR [rsp+0x50]
  40a052:	lea    r14,[rsi+rsi*1]
  40a056:	sub    r15,rbx
  40a059:	cmp    rsi,r14
  40a05c:	jae    0x40a160
  40a062:	mov    rdx,r14
  40a065:	mov    rcx,rbx
  40a068:	call   0x4113e0
  40a06d:	test   rax,rax
  40a070:	je     0x40a160
  40a076:	lea    rdx,[rax+r15*1]
  40a07a:	mov    rsi,r14
  40a07d:	mov    rbx,rax
  40a080:	mov    QWORD PTR [rsp+0x50],rdx
  40a085:	lea    rdx,[r14-0x1]
  40a089:	sub    rdx,r15
  40a08c:	mov    QWORD PTR [rsp+0x58],rdx
  40a091:	mov    r8,QWORD PTR [rsp+0x30]
  40a096:	mov    rdx,QWORD PTR [rsp+0x38]
  40a09b:	mov    r9,r12
  40a09e:	mov    QWORD PTR [rsp+0x20],r13
  40a0a3:	mov    rcx,rbp
  40a0a6:	call   0x40b028
  40a0ab:	cmp    rax,0xffffffffffffffff
  40a0af:	je     0x40a030
  40a0b5:	jmp    0x40a10e
  40a0b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0c0:	mov    rdi,QWORD PTR [rip+0x15549]        # 0x41f610
  40a0c7:	call   rdi
  40a0c9:	cmp    DWORD PTR [rax],0x7
  40a0cc:	jne    0x40a168
  40a0d2:	mov    r14,QWORD PTR [rsp+0x50]
  40a0d7:	lea    r15,[rsi+rsi*1]
  40a0db:	sub    r14,rbx
  40a0de:	cmp    rsi,r15
  40a0e1:	jae    0x40a160
  40a0e3:	mov    rdx,r15
  40a0e6:	mov    rcx,rbx
  40a0e9:	call   0x4113e0
  40a0ee:	test   rax,rax
  40a0f1:	je     0x40a160
  40a0f3:	lea    rdx,[rax+r14*1]
  40a0f7:	mov    rsi,r15
  40a0fa:	mov    rbx,rax
  40a0fd:	mov    QWORD PTR [rsp+0x50],rdx
  40a102:	lea    rdx,[r15-0x1]
  40a106:	sub    rdx,r14
  40a109:	mov    QWORD PTR [rsp+0x58],rdx
  40a10e:	xor    r8d,r8d
  40a111:	xor    edx,edx
  40a113:	mov    QWORD PTR [rsp+0x20],r13
  40a118:	mov    r9,r12
  40a11b:	mov    rcx,rbp
  40a11e:	call   0x40b028
  40a123:	cmp    rax,0xffffffffffffffff
  40a127:	je     0x40a0c0
  40a129:	mov    rax,QWORD PTR [rsp+0x50]
  40a12e:	lea    rdx,[rax+0x1]
  40a132:	mov    QWORD PTR [rsp+0x50],rdx
  40a137:	mov    BYTE PTR [rax],0x0
  40a13a:	mov    rax,rbx
  40a13d:	mov    rdx,QWORD PTR [rsp+0x50]
  40a142:	sub    rdx,rbx
  40a145:	cmp    rdx,rsi
  40a148:	jae    0x40a17a
  40a14a:	mov    rcx,rbx
  40a14d:	call   0x4113e0
  40a152:	test   rax,rax
  40a155:	cmove  rax,rbx
  40a159:	jmp    0x40a17a
  40a15b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a160:	call   rdi
  40a162:	mov    DWORD PTR [rax],0xc
  40a168:	call   rdi
  40a16a:	mov    esi,DWORD PTR [rax]
  40a16c:	mov    rcx,rbx
  40a16f:	call   0x411458
  40a174:	call   rdi
  40a176:	mov    DWORD PTR [rax],esi
  40a178:	xor    eax,eax
  40a17a:	add    rsp,0x68
  40a17e:	pop    rbx
  40a17f:	pop    rsi
  40a180:	pop    rdi
  40a181:	pop    rbp
  40a182:	pop    r12
  40a184:	pop    r13
  40a186:	pop    r14
  40a188:	pop    r15
  40a18a:	ret    
  40a18b:	call   QWORD PTR [rip+0x1547f]        # 0x41f610
  40a191:	mov    DWORD PTR [rax],0xc
  40a197:	xor    eax,eax
  40a199:	jmp    0x40a17a
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	push   rdi
  40a1a1:	push   rsi
  40a1a2:	push   rbx
  40a1a3:	sub    rsp,0x20
  40a1a7:	cmp    BYTE PTR [rcx],0x0
  40a1aa:	mov    rbx,rcx
  40a1ad:	mov    rdi,rdx
  40a1b0:	mov    rsi,r8
  40a1b3:	je     0x40a1c4
  40a1b5:	mov    rdx,r8
  40a1b8:	mov    rcx,rdi
  40a1bb:	call   0x4058c0
  40a1c0:	test   eax,eax
  40a1c2:	jne    0x40a1e0
  40a1c4:	mov    rcx,rbx
  40a1c7:	call   0x411368
  40a1cc:	test   rax,rax
  40a1cf:	mov    rbx,rax
  40a1d2:	je     0x40a230
  40a1d4:	mov    rax,rbx
  40a1d7:	add    rsp,0x20
  40a1db:	pop    rbx
  40a1dc:	pop    rsi
  40a1dd:	pop    rdi
  40a1de:	ret    
  40a1df:	nop
  40a1e0:	mov    rcx,rsi
  40a1e3:	mov    rdx,rdi
  40a1e6:	call   0x40b018
  40a1eb:	cmp    rax,0xffffffffffffffff
  40a1ef:	mov    rsi,rax
  40a1f2:	je     0x40a23e
  40a1f4:	mov    rcx,rbx
  40a1f7:	mov    rdx,rax
  40a1fa:	call   0x409fa0
  40a1ff:	test   rax,rax
  40a202:	mov    rbx,rax
  40a205:	je     0x40a242
  40a207:	mov    rcx,rsi
  40a20a:	call   0x40b020
  40a20f:	test   eax,eax
  40a211:	jns    0x40a1d4
  40a213:	mov    rsi,QWORD PTR [rip+0x153f6]        # 0x41f610
  40a21a:	call   rsi
  40a21c:	mov    edi,DWORD PTR [rax]
  40a21e:	mov    rcx,rbx
  40a221:	xor    ebx,ebx
  40a223:	call   0x411458
  40a228:	call   rsi
  40a22a:	mov    DWORD PTR [rax],edi
  40a22c:	jmp    0x40a1d4
  40a22e:	xchg   ax,ax
  40a230:	call   QWORD PTR [rip+0x153da]        # 0x41f610
  40a236:	mov    DWORD PTR [rax],0xc
  40a23c:	jmp    0x40a1d4
  40a23e:	xor    ebx,ebx
  40a240:	jmp    0x40a1d4
  40a242:	mov    rbx,QWORD PTR [rip+0x153c7]        # 0x41f610
  40a249:	call   rbx
  40a24b:	mov    edi,DWORD PTR [rax]
  40a24d:	mov    rcx,rsi
  40a250:	call   0x40b020
  40a255:	call   rbx
  40a257:	xor    ebx,ebx
  40a259:	mov    DWORD PTR [rax],edi
  40a25b:	jmp    0x40a1d4
  40a260:	ret    
  40a261:	nop    DWORD PTR [rax+rax*1+0x0]
  40a266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a270:	sub    rsp,0x28
  40a274:	mov    eax,DWORD PTR [rip+0x12686]        # 0x41c900
  40a27a:	test   eax,eax
  40a27c:	jne    0x40a295
  40a27e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x40a260
  40a285:	call   QWORD PTR [rip+0x7ebd]        # 0x412148
  40a28b:	mov    DWORD PTR [rip+0x1266b],0x1        # 0x41c900
  40a295:	add    rsp,0x28
  40a299:	ret    
  40a29a:	nop
  40a29b:	nop
  40a29c:	nop
  40a29d:	nop
  40a29e:	nop
  40a29f:	nop
  40a2a0:	push   rbx
  40a2a1:	sub    rsp,0x20
  40a2a5:	cmp    ecx,0xd
  40a2a8:	je     0x40a2c0
  40a2aa:	mov    ebx,ecx
  40a2ac:	call   0x40a270
  40a2b1:	mov    ecx,ebx
  40a2b3:	add    rsp,0x20
  40a2b7:	pop    rbx
  40a2b8:	jmp    0x4113e8
  40a2bd:	nop    DWORD PTR [rax]
  40a2c0:	add    rsp,0x20
  40a2c4:	pop    rbx
  40a2c5:	jmp    0x40a6c0
  40a2ca:	nop
  40a2cb:	nop
  40a2cc:	nop
  40a2cd:	nop
  40a2ce:	nop
  40a2cf:	nop
  40a2d0:	push   rsi
  40a2d1:	push   rbx
  40a2d2:	sub    rsp,0x28
  40a2d6:	cmp    ecx,0xd
  40a2d9:	jne    0x40a2f0
  40a2db:	mov    rax,QWORD PTR [rip+0x1277e]        # 0x41ca60
  40a2e2:	mov    QWORD PTR [rip+0x12777],rdx        # 0x41ca60
  40a2e9:	add    rsp,0x28
  40a2ed:	pop    rbx
  40a2ee:	pop    rsi
  40a2ef:	ret    
  40a2f0:	mov    rsi,rdx
  40a2f3:	mov    ebx,ecx
  40a2f5:	call   0x40a270
  40a2fa:	mov    rdx,rsi
  40a2fd:	mov    ecx,ebx
  40a2ff:	add    rsp,0x28
  40a303:	pop    rbx
  40a304:	pop    rsi
  40a305:	jmp    0x4113d0
  40a30a:	nop    WORD PTR [rax+rax*1+0x0]
  40a310:	push   rbx
  40a311:	sub    rsp,0x20
  40a315:	lea    rdx,[rip+0xfffffffffffffff4]        # 0x40a310
  40a31c:	movsxd rbx,ecx
  40a31f:	mov    ecx,ebx
  40a321:	call   0x40a2d0
  40a326:	cmp    ebx,0x16
  40a329:	ja     0x40a339
  40a32b:	lea    rax,[rip+0x126ce]        # 0x41ca00
  40a332:	mov    DWORD PTR [rax+rbx*4],0x1
  40a339:	add    rsp,0x20
  40a33d:	pop    rbx
  40a33e:	ret    
  40a33f:	nop
  40a340:	xor    eax,eax
  40a342:	cmp    edx,0x16
  40a345:	ja     0x40a358
  40a347:	cmp    edx,0x6
  40a34a:	mov    al,0x16
  40a34c:	cmove  edx,eax
  40a34f:	mov    eax,DWORD PTR [rcx]
  40a351:	mov    ecx,edx
  40a353:	shr    eax,cl
  40a355:	and    eax,0x1
  40a358:	repz ret 
  40a35a:	nop    WORD PTR [rax+rax*1+0x0]
  40a360:	xor    eax,eax
  40a362:	mov    DWORD PTR [rcx],0x0
  40a368:	ret    
  40a369:	nop    DWORD PTR [rax+0x0]
  40a370:	sub    rsp,0x28
  40a374:	cmp    edx,0x16
  40a377:	mov    r8,rcx
  40a37a:	ja     0x40a3a0
  40a37c:	cmp    edx,0x6
  40a37f:	mov    eax,0x400000
  40a384:	je     0x40a38f
  40a386:	mov    eax,0x1
  40a38b:	mov    ecx,edx
  40a38d:	shl    eax,cl
  40a38f:	or     DWORD PTR [r8],eax
  40a392:	xor    eax,eax
  40a394:	add    rsp,0x28
  40a398:	ret    
  40a399:	nop    DWORD PTR [rax+0x0]
  40a3a0:	call   QWORD PTR [rip+0x1526a]        # 0x41f610
  40a3a6:	mov    DWORD PTR [rax],0x16
  40a3ac:	mov    eax,0xffffffff
  40a3b1:	jmp    0x40a394
  40a3b3:	nop    DWORD PTR [rax]
  40a3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3c0:	sub    rsp,0x28
  40a3c4:	cmp    edx,0x16
  40a3c7:	mov    r8,rcx
  40a3ca:	ja     0x40a3f0
  40a3cc:	cmp    edx,0x6
  40a3cf:	mov    eax,0xffbfffff
  40a3d4:	je     0x40a3df
  40a3d6:	mov    eax,0xfffffffe
  40a3db:	mov    ecx,edx
  40a3dd:	rol    eax,cl
  40a3df:	and    DWORD PTR [r8],eax
  40a3e2:	xor    eax,eax
  40a3e4:	add    rsp,0x28
  40a3e8:	ret    
  40a3e9:	nop    DWORD PTR [rax+0x0]
  40a3f0:	call   QWORD PTR [rip+0x1521a]        # 0x41f610
  40a3f6:	mov    DWORD PTR [rax],0x16
  40a3fc:	mov    eax,0xffffffff
  40a401:	jmp    0x40a3e4
  40a403:	nop    DWORD PTR [rax]
  40a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a410:	xor    eax,eax
  40a412:	mov    DWORD PTR [rcx],0x7fffbf
  40a418:	ret    
  40a419:	nop    DWORD PTR [rax+0x0]
  40a420:	lea    r8,[rip+0x125d9]        # 0x41ca00
  40a427:	xor    edx,edx
  40a429:	mov    r9d,0x1
  40a42f:	mov    r10,rcx
  40a432:	xor    ecx,ecx
  40a434:	movsxd rax,ecx
  40a437:	mov    eax,DWORD PTR [r8+rax*4]
  40a43b:	test   eax,eax
  40a43d:	je     0x40a446
  40a43f:	mov    eax,r9d
  40a442:	shl    eax,cl
  40a444:	or     edx,eax
  40a446:	add    ecx,0x1
  40a449:	cmp    ecx,0x17
  40a44c:	jne    0x40a434
  40a44e:	mov    DWORD PTR [r10],edx
  40a451:	xor    eax,eax
  40a453:	ret    
  40a454:	xchg   ax,ax
  40a456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a460:	push   r14
  40a462:	push   r13
  40a464:	push   r12
  40a466:	push   rbp
  40a467:	push   rdi
  40a468:	push   rsi
  40a469:	push   rbx
  40a46a:	add    rsp,0xffffffffffffff80
  40a46e:	test   r8,r8
  40a471:	je     0x40a47c
  40a473:	mov    eax,DWORD PTR [rip+0x125e3]        # 0x41ca5c
  40a479:	mov    DWORD PTR [r8],eax
  40a47c:	test   rdx,rdx
  40a47f:	je     0x40a4c0
  40a481:	cmp    ecx,0x1
  40a484:	je     0x40a620
  40a48a:	cmp    ecx,0x2
  40a48d:	je     0x40a4d1
  40a48f:	test   ecx,ecx
  40a491:	je     0x40a630
  40a497:	call   QWORD PTR [rip+0x15173]        # 0x41f610
  40a49d:	mov    DWORD PTR [rax],0x16
  40a4a3:	mov    eax,0xffffffff
  40a4a8:	sub    rsp,0xffffffffffffff80
  40a4ac:	pop    rbx
  40a4ad:	pop    rsi
  40a4ae:	pop    rdi
  40a4af:	pop    rbp
  40a4b0:	pop    r12
  40a4b2:	pop    r13
  40a4b4:	pop    r14
  40a4b6:	ret    
  40a4b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a4c0:	xor    eax,eax
  40a4c2:	sub    rsp,0xffffffffffffff80
  40a4c6:	pop    rbx
  40a4c7:	pop    rsi
  40a4c8:	pop    rdi
  40a4c9:	pop    rbp
  40a4ca:	pop    r12
  40a4cc:	pop    r13
  40a4ce:	pop    r14
  40a4d0:	ret    
  40a4d1:	mov    esi,DWORD PTR [rdx]
  40a4d3:	mov    ecx,DWORD PTR [rip+0x12583]        # 0x41ca5c
  40a4d9:	not    esi
  40a4db:	mov    eax,esi
  40a4dd:	and    eax,ecx
  40a4df:	mov    edx,DWORD PTR [rip+0x12577]        # 0x41ca5c
  40a4e5:	mov    esi,DWORD PTR [rip+0x12571]        # 0x41ca5c
  40a4eb:	mov    ebp,eax
  40a4ed:	not    ebp
  40a4ef:	not    esi
  40a4f1:	and    ebp,edx
  40a4f3:	and    esi,eax
  40a4f5:	je     0x40a560
  40a4f7:	xor    ebx,ebx
  40a4f9:	mov    r12d,0x1
  40a4ff:	jmp    0x40a509
  40a501:	add    ebx,0x1
  40a504:	cmp    ebx,0x17
  40a507:	je     0x40a560
  40a509:	bt     esi,ebx
  40a50c:	jae    0x40a501
  40a50e:	lea    rax,[rip+0x124eb]        # 0x41ca00
  40a515:	lea    rdx,[rip+0xfffffffffffffdf4]        # 0x40a310
  40a51c:	movsxd rdi,ebx
  40a51f:	mov    ecx,ebx
  40a521:	mov    DWORD PTR [rax+rdi*4],0x0
  40a528:	call   0x40a2d0
  40a52d:	lea    rdx,[rip+0x1240c]        # 0x41c940
  40a534:	cmp    rax,0xffffffffffffffff
  40a538:	mov    QWORD PTR [rdx+rdi*8],rax
  40a53c:	je     0x40a501
  40a53e:	mov    eax,DWORD PTR [rip+0x12518]        # 0x41ca5c
  40a544:	mov    ecx,ebx
  40a546:	mov    edx,r12d
  40a549:	shl    edx,cl
  40a54b:	add    ebx,0x1
  40a54e:	or     eax,edx
  40a550:	cmp    ebx,0x17
  40a553:	mov    DWORD PTR [rip+0x12503],eax        # 0x41ca5c
  40a559:	jne    0x40a509
  40a55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a560:	xor    ebx,ebx
  40a562:	test   ebp,ebp
  40a564:	lea    r14,[rip+0xfffffffffffffda5]        # 0x40a310
  40a56b:	mov    r13d,0x1
  40a571:	jne    0x40a597
  40a573:	jmp    0x40a4c0
  40a578:	nop    DWORD PTR [rax+rax*1+0x0]
  40a580:	mov    DWORD PTR [rsp+rbx*4+0x20],0x0
  40a588:	add    rbx,0x1
  40a58c:	lea    rsi,[rsp+0x20]
  40a591:	cmp    rbx,0x17
  40a595:	je     0x40a5f7
  40a597:	bt     ebp,ebx
  40a59a:	jae    0x40a580
  40a59c:	lea    rax,[rip+0x1239d]        # 0x41c940
  40a5a3:	movsxd r12,ebx
  40a5a6:	mov    ecx,ebx
  40a5a8:	mov    rdx,QWORD PTR [rax+r12*8]
  40a5ac:	call   0x40a2d0
  40a5b1:	cmp    rax,r14
  40a5b4:	jne    0x40a63f
  40a5ba:	lea    r8,[rip+0x1243f]        # 0x41ca00
  40a5c1:	mov    ecx,ebx
  40a5c3:	mov    edx,r13d
  40a5c6:	shl    edx,cl
  40a5c8:	lea    rsi,[rsp+0x20]
  40a5cd:	mov    eax,DWORD PTR [r8+r12*4]
  40a5d1:	not    edx
  40a5d3:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
  40a5d7:	mov    eax,DWORD PTR [rip+0x1247f]        # 0x41ca5c
  40a5dd:	add    rbx,0x1
  40a5e1:	and    eax,edx
  40a5e3:	cmp    rbx,0x17
  40a5e7:	mov    DWORD PTR [rip+0x1246f],eax        # 0x41ca5c
  40a5ed:	mov    DWORD PTR [r8+r12*4],0x0
  40a5f5:	jne    0x40a597
  40a5f7:	xor    bl,bl
  40a5f9:	jmp    0x40a60e
  40a5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a600:	add    rbx,0x1
  40a604:	cmp    rbx,0x17
  40a608:	je     0x40a4c0
  40a60e:	mov    eax,DWORD PTR [rsi+rbx*4]
  40a611:	test   eax,eax
  40a613:	je     0x40a600
  40a615:	mov    ecx,ebx
  40a617:	call   0x40a2a0
  40a61c:	jmp    0x40a600
  40a61e:	xchg   ax,ax
  40a620:	mov    eax,DWORD PTR [rdx]
  40a622:	jmp    0x40a4df
  40a627:	nop    WORD PTR [rax+rax*1+0x0]
  40a630:	mov    esi,DWORD PTR [rip+0x12426]        # 0x41ca5c
  40a636:	mov    eax,DWORD PTR [rdx]
  40a638:	or     eax,esi
  40a63a:	jmp    0x40a4df
  40a63f:	call   0x4114a0
  40a644:	nop
  40a645:	nop
  40a646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a650:	sub    rsp,0x28
  40a654:	cmp    ecx,0x16
  40a657:	ja     0x40a690
  40a659:	cmp    rdx,0xffffffffffffffff
  40a65d:	je     0x40a690
  40a65f:	cmp    ecx,0x6
  40a662:	mov    eax,0x16
  40a667:	cmove  ecx,eax
  40a66a:	mov    eax,DWORD PTR [rip+0x123ec]        # 0x41ca5c
  40a670:	bt     eax,ecx
  40a673:	jae    0x40a6b0
  40a675:	lea    r8,[rip+0x122c4]        # 0x41c940
  40a67c:	movsxd rcx,ecx
  40a67f:	mov    rax,QWORD PTR [r8+rcx*8]
  40a683:	mov    QWORD PTR [r8+rcx*8],rdx
  40a687:	add    rsp,0x28
  40a68b:	ret    
  40a68c:	nop    DWORD PTR [rax+0x0]
  40a690:	call   QWORD PTR [rip+0x14f7a]        # 0x41f610
  40a696:	mov    DWORD PTR [rax],0x16
  40a69c:	mov    rax,0xffffffffffffffff
  40a6a3:	add    rsp,0x28
  40a6a7:	ret    
  40a6a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6b0:	add    rsp,0x28
  40a6b4:	jmp    0x40a2d0
  40a6b9:	nop    DWORD PTR [rax+0x0]
  40a6c0:	sub    rsp,0x28
  40a6c4:	mov    eax,DWORD PTR [rip+0x12392]        # 0x41ca5c
  40a6ca:	test   ah,0x20
  40a6cd:	jne    0x40a6f0
  40a6cf:	mov    rax,QWORD PTR [rip+0x1238a]        # 0x41ca60
  40a6d6:	test   rax,rax
  40a6d9:	je     0x40a701
  40a6db:	cmp    rax,0x1
  40a6df:	je     0x40a6e8
  40a6e1:	mov    ecx,0xd
  40a6e6:	call   rax
  40a6e8:	xor    eax,eax
  40a6ea:	add    rsp,0x28
  40a6ee:	ret    
  40a6ef:	nop
  40a6f0:	xor    eax,eax
  40a6f2:	mov    DWORD PTR [rip+0x12338],0x1        # 0x41ca34
  40a6fc:	add    rsp,0x28
  40a700:	ret    
  40a701:	mov    ecx,0x8d
  40a706:	call   0x411490
  40a70b:	nop
  40a70c:	nop
  40a70d:	nop
  40a70e:	nop
  40a70f:	nop
  40a710:	push   rbx
  40a711:	sub    rsp,0x20
  40a715:	mov    ebx,ecx
  40a717:	call   0x405950
  40a71c:	cmp    BYTE PTR [rax],0x55
  40a71f:	je     0x40a730
  40a721:	test   bx,bx
  40a724:	jne    0x40a760
  40a726:	xor    eax,eax
  40a728:	add    rsp,0x20
  40a72c:	pop    rbx
  40a72d:	ret    
  40a72e:	xchg   ax,ax
  40a730:	cmp    BYTE PTR [rax+0x1],0x54
  40a734:	jne    0x40a721
  40a736:	cmp    BYTE PTR [rax+0x2],0x46
  40a73a:	jne    0x40a721
  40a73c:	cmp    BYTE PTR [rax+0x3],0x2d
  40a740:	jne    0x40a721
  40a742:	cmp    BYTE PTR [rax+0x4],0x38
  40a746:	jne    0x40a721
  40a748:	cmp    BYTE PTR [rax+0x5],0x0
  40a74c:	jne    0x40a721
  40a74e:	movzx  ecx,bx
  40a751:	mov    rdx,rax
  40a754:	add    rsp,0x20
  40a758:	pop    rbx
  40a759:	jmp    0x40ab70
  40a75e:	xchg   ax,ax
  40a760:	movzx  ecx,bx
  40a763:	mov    edx,0x157
  40a768:	call   0x411428
  40a76d:	cmp    eax,0x1
  40a770:	sbb    eax,eax
  40a772:	or     eax,0x1
  40a775:	add    rsp,0x20
  40a779:	pop    rbx
  40a77a:	ret    
  40a77b:	nop
  40a77c:	nop
  40a77d:	nop
  40a77e:	nop
  40a77f:	nop
  40a780:	sub    rsp,0x28
  40a784:	mov    rax,rcx
  40a787:	lea    rcx,[rcx+0x10]
  40a78b:	cmp    rax,rcx
  40a78e:	ja     0x40a7f0
  40a790:	call   0x411418
  40a795:	test   rax,rax
  40a798:	mov    r8,rax
  40a79b:	je     0x40a7f0
  40a79d:	lea    rcx,[rax+0x10]
  40a7a1:	mov    DWORD PTR [rax+0xc],0x1415fb4a
  40a7a8:	movabs rdx,0xff00ff00ff00ff01
  40a7b2:	mov    rax,rcx
  40a7b5:	mul    rdx
  40a7b8:	shr    rdx,0x8
  40a7bc:	mov    rax,rdx
  40a7bf:	shl    rax,0x8
  40a7c3:	add    rdx,rax
  40a7c6:	mov    rax,rcx
  40a7c9:	sub    rax,rdx
  40a7cc:	mov    rdx,rax
  40a7cf:	lea    rax,[rip+0x122aa]        # 0x41ca80
  40a7d6:	mov    r9,QWORD PTR [rax+rdx*8]
  40a7da:	mov    QWORD PTR [rax+rdx*8],rcx
  40a7de:	mov    rax,rcx
  40a7e1:	mov    QWORD PTR [r8],r9
  40a7e4:	add    rsp,0x28
  40a7e8:	ret    
  40a7e9:	nop    DWORD PTR [rax+0x0]
  40a7f0:	xor    eax,eax
  40a7f2:	add    rsp,0x28
  40a7f6:	ret    
  40a7f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a800:	test   rcx,rcx
  40a803:	je     0x40a80e
  40a805:	cmp    DWORD PTR [rcx-0x4],0x1415fb4a
  40a80c:	je     0x40a810
  40a80e:	repz ret 
  40a810:	mov    rax,rcx
  40a813:	movabs rdx,0xff00ff00ff00ff01
  40a81d:	mul    rdx
  40a820:	shr    rdx,0x8
  40a824:	mov    rax,rdx
  40a827:	shl    rax,0x8
  40a82b:	add    rdx,rax
  40a82e:	mov    rax,rcx
  40a831:	sub    rax,rdx
  40a834:	mov    rdx,rax
  40a837:	lea    rax,[rip+0x12242]        # 0x41ca80
  40a83e:	mov    r8,QWORD PTR [rax+rdx*8]
  40a842:	test   r8,r8
  40a845:	je     0x40a80e
  40a847:	cmp    rcx,r8
  40a84a:	jne    0x40a858
  40a84c:	jmp    0x40a877
  40a84e:	xchg   ax,ax
  40a850:	cmp    rcx,rdx
  40a853:	je     0x40a863
  40a855:	mov    r8,rdx
  40a858:	mov    rdx,QWORD PTR [r8-0x10]
  40a85c:	test   rdx,rdx
  40a85f:	jne    0x40a850
  40a861:	jmp    0x40a80e
  40a863:	sub    r8,0x10
  40a867:	mov    rax,QWORD PTR [rcx-0x10]
  40a86b:	sub    rcx,0x10
  40a86f:	mov    QWORD PTR [r8],rax
  40a872:	jmp    0x411458
  40a877:	lea    r8,[rax+rdx*8]
  40a87b:	jmp    0x40a867
  40a87d:	nop
  40a87e:	nop
  40a87f:	nop
  40a880:	push   r13
  40a882:	push   r12
  40a884:	push   rbp
  40a885:	push   rdi
  40a886:	push   rsi
  40a887:	push   rbx
  40a888:	sub    rsp,0x68
  40a88c:	mov    rdi,QWORD PTR [rip+0xdd2d]        # 0x4185c0
  40a893:	mov    rax,QWORD PTR [rdi]
  40a896:	cmp    DWORD PTR [rax],0x1
  40a899:	jle    0x40aa50
  40a89f:	lea    rsi,[rsp+0x20]
  40a8a4:	mov    rbp,QWORD PTR [rip+0xde55]        # 0x418700
  40a8ab:	mov    QWORD PTR [rsp+0x30],rcx
  40a8b0:	mov    BYTE PTR [rsp+0x20],0x0
  40a8b5:	mov    DWORD PTR [rsp+0x24],0x0
  40a8bd:	xor    ebx,ebx
  40a8bf:	lea    r12,[rsi+0x4]
  40a8c3:	mov    BYTE PTR [rsp+0x28],0x0
  40a8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8d0:	cmp    BYTE PTR [rsp+0x20],0x0
  40a8d5:	jne    0x40a945
  40a8d7:	mov    rcx,QWORD PTR [rsp+0x30]
  40a8dc:	movzx  eax,BYTE PTR [rcx]
  40a8df:	mov    edx,eax
  40a8e1:	and    eax,0x1f
  40a8e4:	shr    dl,0x5
  40a8e7:	and    edx,0x7
  40a8ea:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  40a8ee:	bt     edx,eax
  40a8f1:	jae    0x40a930
  40a8f3:	mov    QWORD PTR [rsp+0x38],0x1
  40a8fc:	movsx  ax,BYTE PTR [rcx]
  40a900:	mov    BYTE PTR [rsp+0x40],0x1
  40a905:	mov    WORD PTR [rsp+0x42],ax
  40a90a:	cmp    WORD PTR [rsp+0x42],0x0
  40a910:	jne    0x40aa04
  40a916:	mov    rax,rbx
  40a919:	add    rsp,0x68
  40a91d:	pop    rbx
  40a91e:	pop    rsi
  40a91f:	pop    rdi
  40a920:	pop    rbp
  40a921:	pop    r12
  40a923:	pop    r13
  40a925:	ret    
  40a926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a930:	mov    rcx,r12
  40a933:	call   0x404620
  40a938:	test   eax,eax
  40a93a:	je     0x40aa62
  40a940:	mov    BYTE PTR [rsp+0x20],0x1
  40a945:	mov    rax,QWORD PTR [rdi]
  40a948:	mov    r13,QWORD PTR [rsp+0x30]
  40a94d:	movsxd rdx,DWORD PTR [rax]
  40a950:	mov    rcx,r13
  40a953:	call   0x4027a0
  40a958:	lea    rcx,[rsi+0x22]
  40a95c:	lea    r9,[rsi+0x4]
  40a960:	mov    r8,rax
  40a963:	mov    rdx,r13
  40a966:	call   0x404510
  40a96b:	cmp    rax,0xffffffffffffffff
  40a96f:	mov    QWORD PTR [rsp+0x38],rax
  40a974:	je     0x40aa20
  40a97a:	cmp    rax,0xfffffffffffffffe
  40a97e:	je     0x40aa30
  40a984:	test   rax,rax
  40a987:	jne    0x40a9e0
  40a989:	mov    rax,QWORD PTR [rsp+0x30]
  40a98e:	mov    QWORD PTR [rsp+0x38],0x1
  40a997:	cmp    BYTE PTR [rax],0x0
  40a99a:	je     0x40a9b5
  40a99c:	lea    rdx,[rip+0xc98d]        # 0x417330
  40a9a3:	lea    rcx,[rip+0xc9a7]        # 0x417351
  40a9aa:	mov    r8d,0xb2
  40a9b0:	call   0x40ca80
  40a9b5:	cmp    WORD PTR [rsp+0x42],0x0
  40a9bb:	je     0x40a9e0
  40a9bd:	lea    rdx,[rip+0xc96c]        # 0x417330
  40a9c4:	lea    rcx,[rip+0xc99d]        # 0x417368
  40a9cb:	mov    r8d,0xb3
  40a9d1:	call   0x40ca80
  40a9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9e0:	lea    rcx,[rsi+0x4]
  40a9e4:	mov    BYTE PTR [rsp+0x40],0x1
  40a9e9:	call   0x404620
  40a9ee:	test   eax,eax
  40a9f0:	je     0x40a9f7
  40a9f2:	mov    BYTE PTR [rsp+0x20],0x0
  40a9f7:	movzx  eax,BYTE PTR [rsp+0x40]
  40a9fc:	test   al,al
  40a9fe:	jne    0x40a90a
  40aa04:	mov    rax,QWORD PTR [rsp+0x38]
  40aa09:	add    rbx,0x1
  40aa0d:	add    QWORD PTR [rsp+0x30],rax
  40aa12:	mov    BYTE PTR [rsp+0x28],0x0
  40aa17:	jmp    0x40a8d0
  40aa1c:	nop    DWORD PTR [rax+0x0]
  40aa20:	mov    QWORD PTR [rsp+0x38],0x1
  40aa29:	mov    BYTE PTR [rsp+0x40],0x0
  40aa2e:	jmp    0x40aa04
  40aa30:	mov    rcx,QWORD PTR [rsp+0x30]
  40aa35:	call   0x4113a8
  40aa3a:	mov    BYTE PTR [rsp+0x40],0x0
  40aa3f:	mov    QWORD PTR [rsp+0x38],rax
  40aa44:	jmp    0x40aa04
  40aa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa50:	call   0x4113a8
  40aa55:	add    rsp,0x68
  40aa59:	pop    rbx
  40aa5a:	pop    rsi
  40aa5b:	pop    rdi
  40aa5c:	pop    rbp
  40aa5d:	pop    r12
  40aa5f:	pop    r13
  40aa61:	ret    
  40aa62:	lea    rdx,[rip+0xc8c7]        # 0x417330
  40aa69:	lea    rcx,[rip+0xc8ca]        # 0x41733a
  40aa70:	mov    r8d,0x96
  40aa76:	call   0x40ca80
  40aa7b:	jmp    0x40a940
  40aa80:	sub    rsp,0x28
  40aa84:	movzx  r10d,BYTE PTR [rcx+0x6]
  40aa89:	xor    eax,eax
  40aa8b:	mov    r11d,DWORD PTR [rsp+0x50]
  40aa90:	cmp    r10b,r8b
  40aa93:	je     0x40aaa0
  40aa95:	add    rsp,0x28
  40aa99:	ret    
  40aa9a:	nop    WORD PTR [rax+rax*1+0x0]
  40aaa0:	test   r10b,r10b
  40aaa3:	mov    al,0x1
  40aaa5:	je     0x40aa95
  40aaa7:	xor    al,al
  40aaa9:	cmp    r9b,BYTE PTR [rcx+0x7]
  40aaad:	jne    0x40aa95
  40aaaf:	test   r9b,r9b
  40aab2:	mov    al,0x1
  40aab4:	je     0x40aa95
  40aab6:	xor    al,al
  40aab8:	cmp    r11b,BYTE PTR [rcx+0x8]
  40aabc:	jne    0x40aa95
  40aabe:	test   r11b,r11b
  40aac1:	mov    al,0x1
  40aac3:	je     0x40aa95
  40aac5:	add    rdx,0x9
  40aac9:	add    rcx,0x9
  40aacd:	call   0x4113c0
  40aad2:	test   eax,eax
  40aad4:	sete   al
  40aad7:	movzx  eax,al
  40aada:	jmp    0x40aa95
  40aadc:	nop    DWORD PTR [rax+0x0]
  40aae0:	push   rsi
  40aae1:	push   rbx
  40aae2:	sub    rsp,0x28
  40aae6:	movzx  r10d,BYTE PTR [rcx+0x4]
  40aaeb:	xor    eax,eax
  40aaed:	mov    r11d,DWORD PTR [rsp+0x60]
  40aaf2:	mov    ebx,DWORD PTR [rsp+0x68]
  40aaf6:	mov    esi,DWORD PTR [rsp+0x70]
  40aafa:	cmp    r10b,r8b
  40aafd:	je     0x40ab10
  40aaff:	add    rsp,0x28
  40ab03:	pop    rbx
  40ab04:	pop    rsi
  40ab05:	ret    
  40ab06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab10:	test   r10b,r10b
  40ab13:	mov    al,0x1
  40ab15:	je     0x40aaff
  40ab17:	xor    al,al
  40ab19:	cmp    r9b,BYTE PTR [rcx+0x5]
  40ab1d:	jne    0x40aaff
  40ab1f:	test   r9b,r9b
  40ab22:	mov    al,0x1
  40ab24:	je     0x40aaff
  40ab26:	xor    al,al
  40ab28:	cmp    r11b,BYTE PTR [rcx+0x6]
  40ab2c:	jne    0x40aaff
  40ab2e:	test   r11b,r11b
  40ab31:	mov    al,0x1
  40ab33:	je     0x40aaff
  40ab35:	xor    al,al
  40ab37:	cmp    bl,BYTE PTR [rcx+0x7]
  40ab3a:	jne    0x40aaff
  40ab3c:	test   bl,bl
  40ab3e:	mov    al,0x1
  40ab40:	je     0x40aaff
  40ab42:	xor    al,al
  40ab44:	cmp    sil,BYTE PTR [rcx+0x8]
  40ab48:	jne    0x40aaff
  40ab4a:	test   sil,sil
  40ab4d:	mov    al,0x1
  40ab4f:	je     0x40aaff
  40ab51:	add    rdx,0x9
  40ab55:	add    rcx,0x9
  40ab59:	call   0x4113c0
  40ab5e:	test   eax,eax
  40ab60:	sete   al
  40ab63:	movzx  eax,al
  40ab66:	jmp    0x40aaff
  40ab68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab70:	push   rbx
  40ab71:	sub    rsp,0x40
  40ab75:	mov    eax,ecx
  40ab77:	shr    eax,0x9
  40ab7a:	cmp    eax,0xf7
  40ab7f:	ja     0x40ac40
  40ab85:	lea    r8,[rip+0xc834]        # 0x4173c0
  40ab8c:	movsx  eax,BYTE PTR [r8+rax*1]
  40ab91:	test   eax,eax
  40ab93:	js     0x40abc1
  40ab95:	mov    r8d,ecx
  40ab98:	shl    eax,0x6
  40ab9b:	shr    r8d,0x3
  40ab9f:	and    r8d,0x3f
  40aba3:	add    eax,r8d
  40aba6:	lea    r8,[rip+0xc913]        # 0x4174c0
  40abad:	movzx  r8d,BYTE PTR [r8+rax*1]
  40abb2:	mov    eax,ecx
  40abb4:	and    eax,0x7
  40abb7:	bt     r8d,eax
  40abbb:	jb     0x40ac65
  40abc1:	cmp    ecx,0x10ff
  40abc7:	ja     0x40ac47
  40abc9:	lea    eax,[rcx-0xa1]
  40abcf:	cmp    eax,0xfebf
  40abd4:	ja     0x40ad50
  40abda:	cmp    ecx,0x20a9
  40abe0:	je     0x40ad50
  40abe6:	mov    rbx,rdx
  40abe9:	movzx  edx,BYTE PTR [rdx]
  40abec:	cmp    dl,0x45
  40abef:	je     0x40ad90
  40abf5:	cmp    dl,0x47
  40abf8:	je     0x40ae70
  40abfe:	cmp    dl,0x42
  40ac01:	je     0x40ae20
  40ac07:	cmp    dl,0x43
  40ac0a:	mov    eax,0x1
  40ac0f:	je     0x40af00
  40ac15:	cmp    dl,0x4a
  40ac18:	jne    0x40ac5f
  40ac1a:	cmp    BYTE PTR [rbx+0x1],0x4f
  40ac1e:	jne    0x40ac5f
  40ac20:	cmp    BYTE PTR [rbx+0x2],0x48
  40ac24:	jne    0x40ac5f
  40ac26:	cmp    BYTE PTR [rbx+0x3],0x41
  40ac2a:	jne    0x40ac5f
  40ac2c:	cmp    BYTE PTR [rbx+0x4],0x42
  40ac30:	jne    0x40ac5f
  40ac32:	cmp    BYTE PTR [rbx+0x5],0x1
  40ac36:	sbb    eax,eax
  40ac38:	not    eax
  40ac3a:	add    eax,0x2
  40ac3d:	jmp    0x40ac5f
  40ac3f:	nop
  40ac40:	cmp    eax,0x700
  40ac45:	je     0x40ac80
  40ac47:	lea    eax,[rcx-0x2329]
  40ac4d:	cmp    eax,0x1
  40ac50:	jbe    0x40ac5a
  40ac52:	cmp    ecx,0x115f
  40ac58:	ja     0x40aca0
  40ac5a:	mov    eax,0x2
  40ac5f:	add    rsp,0x40
  40ac63:	pop    rbx
  40ac64:	ret    
  40ac65:	sub    ecx,0x1
  40ac68:	xor    eax,eax
  40ac6a:	cmp    ecx,0x9e
  40ac70:	setbe  al
  40ac73:	neg    eax
  40ac75:	add    rsp,0x40
  40ac79:	pop    rbx
  40ac7a:	ret    
  40ac7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac80:	cmp    ecx,0xe00ff
  40ac86:	jbe    0x40ad60
  40ac8c:	xor    ax,ax
  40ac8f:	cmp    ecx,0xe01ef
  40ac95:	ja     0x40ac47
  40ac97:	jmp    0x40ac5f
  40ac99:	nop    DWORD PTR [rax+0x0]
  40aca0:	lea    eax,[rcx-0x2e80]
  40aca6:	cmp    eax,0x764f
  40acab:	ja     0x40acc7
  40acad:	cmp    ecx,0x303f
  40acb3:	je     0x40acc7
  40acb5:	lea    r8d,[rcx-0x4dc0]
  40acbc:	mov    eax,0x2
  40acc1:	cmp    r8d,0x3f
  40acc5:	ja     0x40ac5f
  40acc7:	lea    r8d,[rcx-0xac00]
  40acce:	mov    eax,0x2
  40acd3:	cmp    r8d,0x2ba3
  40acda:	jbe    0x40ac5f
  40acdc:	lea    r8d,[rcx-0xf900]
  40ace3:	cmp    r8d,0x1ff
  40acea:	jbe    0x40ac5f
  40acf0:	lea    r8d,[rcx-0xfe10]
  40acf7:	cmp    r8d,0xf
  40acfb:	jbe    0x40ac5f
  40ad01:	lea    r8d,[rcx-0xfe30]
  40ad08:	cmp    r8d,0x3f
  40ad0c:	jbe    0x40ac5f
  40ad12:	lea    r8d,[rcx-0xff00]
  40ad19:	cmp    r8d,0x60
  40ad1d:	jbe    0x40ac5f
  40ad23:	lea    r8d,[rcx-0xffe0]
  40ad2a:	cmp    r8d,0x6
  40ad2e:	jbe    0x40ac5f
  40ad34:	lea    r8d,[rcx-0x20000]
  40ad3b:	cmp    r8d,0x1ffff
  40ad42:	jbe    0x40ac5f
  40ad48:	jmp    0x40abc9
  40ad4d:	nop    DWORD PTR [rax]
  40ad50:	mov    eax,0x1
  40ad55:	add    rsp,0x40
  40ad59:	pop    rbx
  40ad5a:	ret    
  40ad5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad60:	cmp    ecx,0xe001f
  40ad66:	ja     0x40ae10
  40ad6c:	cmp    ecx,0xe0001
  40ad72:	sete   r8b
  40ad76:	xor    eax,eax
  40ad78:	test   r8b,r8b
  40ad7b:	je     0x40ac47
  40ad81:	jmp    0x40ac5f
  40ad86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad90:	cmp    BYTE PTR [rbx+0x1],0x55
  40ad94:	mov    eax,0x1
  40ad99:	jne    0x40ac5f
  40ad9f:	cmp    BYTE PTR [rbx+0x2],0x43
  40ada3:	je     0x40aea8
  40ada9:	cmp    BYTE PTR [rbx+0x2],0x43
  40adad:	je     0x40afa1
  40adb3:	cmp    BYTE PTR [rbx+0x2],0x43
  40adb7:	mov    eax,0x1
  40adbc:	jne    0x40ac5f
  40adc2:	cmp    BYTE PTR [rbx+0x3],0x2d
  40adc6:	jne    0x40ac5f
  40adcc:	lea    rdx,[rip+0xc5c7]        # 0x41739a
  40add3:	mov    DWORD PTR [rsp+0x30],0x0
  40addb:	mov    DWORD PTR [rsp+0x28],0x0
  40ade3:	mov    DWORD PTR [rsp+0x20],0x0
  40adeb:	mov    r9d,0x52
  40adf1:	mov    r8d,0x4b
  40adf7:	mov    rcx,rbx
  40adfa:	call   0x40aae0
  40adff:	cmp    eax,0x1
  40ae02:	sbb    eax,eax
  40ae04:	add    eax,0x2
  40ae07:	jmp    0x40ac5f
  40ae0c:	nop    DWORD PTR [rax+0x0]
  40ae10:	cmp    ecx,0xe007f
  40ae16:	setbe  r8b
  40ae1a:	jmp    0x40ad76
  40ae1f:	nop
  40ae20:	cmp    BYTE PTR [rbx+0x1],0x49
  40ae24:	mov    eax,0x1
  40ae29:	jne    0x40ac5f
  40ae2f:	cmp    BYTE PTR [rbx+0x2],0x47
  40ae33:	jne    0x40ac5f
  40ae39:	cmp    BYTE PTR [rbx+0x3],0x35
  40ae3d:	jne    0x40ac5f
  40ae43:	mov    DWORD PTR [rsp+0x30],0x0
  40ae4b:	mov    DWORD PTR [rsp+0x28],0x0
  40ae53:	xor    r9d,r9d
  40ae56:	mov    DWORD PTR [rsp+0x20],0x0
  40ae5e:	xor    r8d,r8d
  40ae61:	lea    rdx,[rip+0xc52d]        # 0x417395
  40ae68:	jmp    0x40adf7
  40ae6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae70:	cmp    BYTE PTR [rbx+0x1],0x42
  40ae74:	mov    eax,0x1
  40ae79:	jne    0x40ac5f
  40ae7f:	cmp    BYTE PTR [rbx+0x2],0x32
  40ae83:	je     0x40af50
  40ae89:	cmp    BYTE PTR [rbx+0x2],0x4b
  40ae8d:	mov    eax,0x1
  40ae92:	jne    0x40ac5f
  40ae98:	cmp    BYTE PTR [rbx+0x3],0x1
  40ae9c:	sbb    eax,eax
  40ae9e:	not    eax
  40aea0:	add    eax,0x2
  40aea3:	jmp    0x40ac5f
  40aea8:	cmp    BYTE PTR [rbx+0x3],0x2d
  40aeac:	jne    0x40ada9
  40aeb2:	lea    rdx,[rip+0xc4c7]        # 0x417380
  40aeb9:	mov    DWORD PTR [rsp+0x30],0x0
  40aec1:	mov    DWORD PTR [rsp+0x28],0x0
  40aec9:	mov    DWORD PTR [rsp+0x20],0x0
  40aed1:	mov    r9d,0x50
  40aed7:	mov    r8d,0x4a
  40aedd:	mov    rcx,rbx
  40aee0:	call   0x40aae0
  40aee5:	mov    edx,eax
  40aee7:	mov    eax,0x2
  40aeec:	test   edx,edx
  40aeee:	jne    0x40ac5f
  40aef4:	jmp    0x40ada9
  40aef9:	nop    DWORD PTR [rax+0x0]
  40af00:	cmp    BYTE PTR [rbx+0x1],0x50
  40af04:	jne    0x40ac5f
  40af0a:	cmp    BYTE PTR [rbx+0x2],0x39
  40af0e:	jne    0x40ac5f
  40af14:	cmp    BYTE PTR [rbx+0x3],0x34
  40af18:	jne    0x40ac5f
  40af1e:	mov    DWORD PTR [rsp+0x30],0x0
  40af26:	mov    DWORD PTR [rsp+0x28],0x0
  40af2e:	xor    r9d,r9d
  40af31:	mov    DWORD PTR [rsp+0x20],0x0
  40af39:	mov    r8d,0x39
  40af3f:	lea    rdx,[rip+0xc45b]        # 0x4173a1
  40af46:	jmp    0x40adf7
  40af4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af50:	cmp    BYTE PTR [rbx+0x3],0x33
  40af54:	jne    0x40ae89
  40af5a:	lea    rdx,[rip+0xc426]        # 0x417387
  40af61:	mov    DWORD PTR [rsp+0x30],0x0
  40af69:	mov    DWORD PTR [rsp+0x28],0x0
  40af71:	mov    DWORD PTR [rsp+0x20],0x0
  40af79:	mov    r9d,0x32
  40af7f:	mov    r8d,0x31
  40af85:	mov    rcx,rbx
  40af88:	call   0x40aae0
  40af8d:	mov    edx,eax
  40af8f:	mov    eax,0x2
  40af94:	test   edx,edx
  40af96:	jne    0x40ac5f
  40af9c:	jmp    0x40ae89
  40afa1:	cmp    BYTE PTR [rbx+0x3],0x2d
  40afa5:	jne    0x40adb3
  40afab:	cmp    BYTE PTR [rbx+0x4],0x54
  40afaf:	jne    0x40adb3
  40afb5:	cmp    BYTE PTR [rbx+0x5],0x57
  40afb9:	jne    0x40adb3
  40afbf:	lea    rdx,[rip+0xc3c8]        # 0x41738e
  40afc6:	xor    r9d,r9d
  40afc9:	xor    r8d,r8d
  40afcc:	mov    DWORD PTR [rsp+0x20],0x0
  40afd4:	mov    rcx,rbx
  40afd7:	call   0x40aa80
  40afdc:	mov    edx,eax
  40afde:	mov    eax,0x2
  40afe3:	test   edx,edx
  40afe5:	jne    0x40ac5f
  40afeb:	jmp    0x40adb3
  40aff0:	jmp    QWORD PTR [rip+0x14442]        # 0x41f438
  40aff6:	nop
  40aff7:	nop
  40aff8:	jmp    QWORD PTR [rip+0x14432]        # 0x41f430
  40affe:	nop
  40afff:	nop
  40b000:	jmp    QWORD PTR [rip+0x14422]        # 0x41f428
  40b006:	nop
  40b007:	nop
  40b008:	jmp    QWORD PTR [rip+0x14412]        # 0x41f420
  40b00e:	nop
  40b00f:	nop
  40b010:	jmp    QWORD PTR [rip+0x14402]        # 0x41f418
  40b016:	nop
  40b017:	nop
  40b018:	jmp    QWORD PTR [rip+0x1443a]        # 0x41f458
  40b01e:	nop
  40b01f:	nop
  40b020:	jmp    QWORD PTR [rip+0x1442a]        # 0x41f450
  40b026:	nop
  40b027:	nop
  40b028:	jmp    QWORD PTR [rip+0x1441a]        # 0x41f448
  40b02e:	nop
  40b02f:	nop
  40b030:	push   rbx
  40b031:	sub    rsp,0x30
  40b035:	mov    rbx,rcx
  40b038:	mov    rcx,QWORD PTR [rip+0x136d1]        # 0x41e710
  40b03f:	call   0x40b5e0
  40b044:	cmp    rax,0xffffffffffffffff
  40b048:	mov    QWORD PTR [rsp+0x20],rax
  40b04d:	je     0x40b0c5
  40b04f:	mov    ecx,0x8
  40b054:	call   0x4114c0
  40b059:	mov    rcx,QWORD PTR [rip+0x136b0]        # 0x41e710
  40b060:	call   0x40b5e0
  40b065:	mov    rcx,QWORD PTR [rip+0x136ac]        # 0x41e718
  40b06c:	mov    QWORD PTR [rsp+0x20],rax
  40b071:	call   0x40b5e0
  40b076:	lea    rdx,[rsp+0x20]
  40b07b:	lea    r8,[rsp+0x28]
  40b080:	mov    rcx,rbx
  40b083:	mov    QWORD PTR [rsp+0x28],rax
  40b088:	call   0x411520
  40b08d:	mov    rcx,QWORD PTR [rsp+0x20]
  40b092:	mov    rbx,rax
  40b095:	call   0x40b5f0
  40b09a:	mov    rcx,QWORD PTR [rsp+0x28]
  40b09f:	mov    QWORD PTR [rip+0x1366a],rax        # 0x41e710
  40b0a6:	call   0x40b5f0
  40b0ab:	mov    ecx,0x8
  40b0b0:	mov    QWORD PTR [rip+0x13661],rax        # 0x41e718
  40b0b7:	call   0x4114a8
  40b0bc:	mov    rax,rbx
  40b0bf:	add    rsp,0x30
  40b0c3:	pop    rbx
  40b0c4:	ret    
  40b0c5:	mov    rax,QWORD PTR [rip+0xd524]        # 0x4185f0
  40b0cc:	mov    rcx,rbx
  40b0cf:	call   QWORD PTR [rax]
  40b0d1:	add    rsp,0x30
  40b0d5:	pop    rbx
  40b0d6:	ret    
  40b0d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b0e0:	sub    rsp,0x28
  40b0e4:	call   0x40b030
  40b0e9:	test   rax,rax
  40b0ec:	sete   al
  40b0ef:	movzx  eax,al
  40b0f2:	neg    eax
  40b0f4:	add    rsp,0x28
  40b0f8:	ret    
  40b0f9:	nop
  40b0fa:	nop
  40b0fb:	nop
  40b0fc:	nop
  40b0fd:	nop
  40b0fe:	nop
  40b0ff:	nop
  40b100:	sub    rsp,0x28
  40b104:	mov    rax,QWORD PTR [rip+0x6fb5]        # 0x4120c0
  40b10b:	mov    rax,QWORD PTR [rax]
  40b10e:	test   rax,rax
  40b111:	je     0x40b130
  40b113:	call   rax
  40b115:	mov    rax,QWORD PTR [rip+0x6fa4]        # 0x4120c0
  40b11c:	lea    rdx,[rax+0x8]
  40b120:	mov    rax,QWORD PTR [rax+0x8]
  40b124:	mov    QWORD PTR [rip+0x6f95],rdx        # 0x4120c0
  40b12b:	test   rax,rax
  40b12e:	jne    0x40b113
  40b130:	add    rsp,0x28
  40b134:	ret    
  40b135:	nop
  40b136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b140:	push   rsi
  40b141:	push   rbx
  40b142:	sub    rsp,0x28
  40b146:	mov    rsi,QWORD PTR [rip+0xd413]        # 0x418560
  40b14d:	mov    rax,QWORD PTR [rsi]
  40b150:	cmp    eax,0xffffffff
  40b153:	mov    ebx,eax
  40b155:	je     0x40b180
  40b157:	test   ebx,ebx
  40b159:	je     0x40b16a
  40b15b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b160:	mov    eax,ebx
  40b162:	call   QWORD PTR [rsi+rax*8]
  40b165:	sub    ebx,0x1
  40b168:	jne    0x40b160
  40b16a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40b100
  40b171:	add    rsp,0x28
  40b175:	pop    rbx
  40b176:	pop    rsi
  40b177:	jmp    0x40b0e0
  40b17c:	nop    DWORD PTR [rax+0x0]
  40b180:	xor    ebx,ebx
  40b182:	jmp    0x40b186
  40b184:	mov    ebx,eax
  40b186:	lea    edx,[rbx+0x1]
  40b189:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40b18e:	mov    rax,rdx
  40b191:	jne    0x40b184
  40b193:	jmp    0x40b157
  40b195:	nop
  40b196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1a0:	mov    eax,DWORD PTR [rip+0x1211a]        # 0x41d2c0
  40b1a6:	test   eax,eax
  40b1a8:	je     0x40b1b0
  40b1aa:	repz ret 
  40b1ac:	nop    DWORD PTR [rax+0x0]
  40b1b0:	mov    DWORD PTR [rip+0x12106],0x1        # 0x41d2c0
  40b1ba:	jmp    0x40b140
  40b1bc:	nop
  40b1bd:	nop
  40b1be:	nop
  40b1bf:	nop
  40b1c0:	mov    rax,QWORD PTR [rip+0x14411]        # 0x41f5d8
  40b1c7:	rex.W jmp rax
  40b1ca:	nop
  40b1cb:	nop
  40b1cc:	nop
  40b1cd:	nop
  40b1ce:	nop
  40b1cf:	nop
  40b1d0:	xor    eax,eax
  40b1d2:	ret    
  40b1d3:	nop
  40b1d4:	nop
  40b1d5:	nop
  40b1d6:	nop
  40b1d7:	nop
  40b1d8:	nop
  40b1d9:	nop
  40b1da:	nop
  40b1db:	nop
  40b1dc:	nop
  40b1dd:	nop
  40b1de:	nop
  40b1df:	nop
  40b1e0:	push   r12
  40b1e2:	push   rbp
  40b1e3:	push   rdi
  40b1e4:	push   rsi
  40b1e5:	push   rbx
  40b1e6:	sub    rsp,0x40
  40b1ea:	mov    rbx,QWORD PTR [rip+0x6f6f]        # 0x412160
  40b1f1:	movabs rax,0x2b992ddfa232
  40b1fb:	mov    QWORD PTR [rsp+0x20],0x0
  40b204:	cmp    rbx,rax
  40b207:	je     0x40b220
  40b209:	not    rbx
  40b20c:	mov    QWORD PTR [rip+0x6f5d],rbx        # 0x412170
  40b213:	add    rsp,0x40
  40b217:	pop    rbx
  40b218:	pop    rsi
  40b219:	pop    rdi
  40b21a:	pop    rbp
  40b21b:	pop    r12
  40b21d:	ret    
  40b21e:	xchg   ax,ax
  40b220:	lea    rcx,[rsp+0x20]
  40b225:	call   QWORD PTR [rip+0x142bd]        # 0x41f4e8
  40b22b:	mov    r12,QWORD PTR [rsp+0x20]
  40b230:	call   QWORD PTR [rip+0x1426a]        # 0x41f4a0
  40b236:	mov    ebp,eax
  40b238:	call   QWORD PTR [rip+0x1426a]        # 0x41f4a8
  40b23e:	mov    edi,eax
  40b240:	call   QWORD PTR [rip+0x142b2]        # 0x41f4f8
  40b246:	lea    rcx,[rsp+0x30]
  40b24b:	mov    esi,eax
  40b24d:	call   QWORD PTR [rip+0x142cd]        # 0x41f520
  40b253:	xor    r12,QWORD PTR [rsp+0x30]
  40b258:	mov    edx,edi
  40b25a:	movabs rax,0xffffffffffff
  40b264:	xor    rbp,r12
  40b267:	mov    rdi,rbp
  40b26a:	xor    rdi,rdx
  40b26d:	mov    edx,esi
  40b26f:	xor    rdi,rdx
  40b272:	mov    rsi,rdi
  40b275:	and    rsi,rax
  40b278:	cmp    rsi,rbx
  40b27b:	je     0x40b2a0
  40b27d:	mov    rax,rsi
  40b280:	not    rax
  40b283:	mov    QWORD PTR [rip+0x6ed6],rsi        # 0x412160
  40b28a:	mov    QWORD PTR [rip+0x6edf],rax        # 0x412170
  40b291:	add    rsp,0x40
  40b295:	pop    rbx
  40b296:	pop    rsi
  40b297:	pop    rdi
  40b298:	pop    rbp
  40b299:	pop    r12
  40b29b:	ret    
  40b29c:	nop    DWORD PTR [rax+0x0]
  40b2a0:	movabs rax,0xffffd466d2205dcc
  40b2aa:	movabs rsi,0x2b992ddfa233
  40b2b4:	jmp    0x40b283
  40b2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2c0:	push   rbp
  40b2c1:	push   rsi
  40b2c2:	push   rbx
  40b2c3:	mov    rbp,rsp
  40b2c6:	sub    rsp,0x70
  40b2ca:	mov    rsi,rcx
  40b2cd:	lea    rcx,[rip+0x1202c]        # 0x41d300
  40b2d4:	call   QWORD PTR [rip+0x14256]        # 0x41f530
  40b2da:	mov    rbx,QWORD PTR [rip+0x12117]        # 0x41d3f8
  40b2e1:	xor    r8d,r8d
  40b2e4:	lea    rdx,[rbp-0x28]
  40b2e8:	mov    rcx,rbx
  40b2eb:	call   QWORD PTR [rip+0x14247]        # 0x41f538
  40b2f1:	test   rax,rax
  40b2f4:	mov    r9,rax
  40b2f7:	je     0x40b3a0
  40b2fd:	lea    rax,[rbp-0x20]
  40b301:	mov    QWORD PTR [rsp+0x38],0x0
  40b30a:	mov    r8,rbx
  40b30d:	mov    rdx,QWORD PTR [rbp-0x28]
  40b311:	xor    ecx,ecx
  40b313:	mov    QWORD PTR [rsp+0x30],rax
  40b318:	lea    rax,[rbp-0x18]
  40b31c:	mov    QWORD PTR [rsp+0x28],rax
  40b321:	lea    rax,[rip+0x11fd8]        # 0x41d300
  40b328:	mov    QWORD PTR [rsp+0x20],rax
  40b32d:	call   QWORD PTR [rip+0x1420d]        # 0x41f540
  40b333:	mov    rax,QWORD PTR [rip+0x120be]        # 0x41d3f8
  40b33a:	xor    ecx,ecx
  40b33c:	mov    QWORD PTR [rip+0x1203d],rsi        # 0x41d380
  40b343:	mov    DWORD PTR [rip+0x124b3],0xc0000409        # 0x41d800
  40b34d:	mov    DWORD PTR [rip+0x124ad],0x1        # 0x41d804
  40b357:	mov    QWORD PTR [rip+0x124b2],rax        # 0x41d810
  40b35e:	mov    rax,QWORD PTR [rip+0x6dfb]        # 0x412160
  40b365:	mov    QWORD PTR [rbp-0x10],rax
  40b369:	mov    rax,QWORD PTR [rip+0x6e00]        # 0x412170
  40b370:	mov    QWORD PTR [rbp-0x8],rax
  40b374:	call   QWORD PTR [rip+0x141de]        # 0x41f558
  40b37a:	lea    rcx,[rip+0xca3f]        # 0x417dc0
  40b381:	call   QWORD PTR [rip+0x141f1]        # 0x41f578
  40b387:	call   QWORD PTR [rip+0x1410b]        # 0x41f498
  40b38d:	mov    edx,0xc0000409
  40b392:	mov    rcx,rax
  40b395:	call   QWORD PTR [rip+0x141cd]        # 0x41f568
  40b39b:	call   0x4114a0
  40b3a0:	mov    rax,QWORD PTR [rbp+0x18]
  40b3a4:	mov    QWORD PTR [rip+0x1204d],rax        # 0x41d3f8
  40b3ab:	lea    rax,[rbp+0x8]
  40b3af:	mov    QWORD PTR [rip+0x11fe2],rax        # 0x41d398
  40b3b6:	jmp    0x40b333
  40b3bb:	nop
  40b3bc:	nop
  40b3bd:	nop
  40b3be:	nop
  40b3bf:	nop
  40b3c0:	sub    rsp,0x28
  40b3c4:	test   edx,edx
  40b3c6:	je     0x40b3e0
  40b3c8:	cmp    edx,0x3
  40b3cb:	je     0x40b3e0
  40b3cd:	mov    eax,0x1
  40b3d2:	add    rsp,0x28
  40b3d6:	ret    
  40b3d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b3e0:	call   0x40c0d0
  40b3e5:	mov    eax,0x1
  40b3ea:	add    rsp,0x28
  40b3ee:	ret    
  40b3ef:	nop
  40b3f0:	push   rsi
  40b3f1:	push   rbx
  40b3f2:	sub    rsp,0x28
  40b3f6:	mov    rax,QWORD PTR [rip+0xd143]        # 0x418540
  40b3fd:	cmp    DWORD PTR [rax],0x2
  40b400:	je     0x40b408
  40b402:	mov    DWORD PTR [rax],0x2
  40b408:	cmp    edx,0x2
  40b40b:	je     0x40b420
  40b40d:	cmp    edx,0x1
  40b410:	je     0x40b452
  40b412:	mov    eax,0x1
  40b417:	add    rsp,0x28
  40b41b:	pop    rbx
  40b41c:	pop    rsi
  40b41d:	ret    
  40b41e:	xchg   ax,ax
  40b420:	lea    rbx,[rip+0x15c39]        # 0x421060
  40b427:	lea    rsi,[rip+0x15c32]        # 0x421060
  40b42e:	cmp    rbx,rsi
  40b431:	je     0x40b412
  40b433:	mov    rax,QWORD PTR [rbx]
  40b436:	test   rax,rax
  40b439:	je     0x40b43d
  40b43b:	call   rax
  40b43d:	add    rbx,0x8
  40b441:	cmp    rbx,rsi
  40b444:	jne    0x40b433
  40b446:	mov    eax,0x1
  40b44b:	add    rsp,0x28
  40b44f:	pop    rbx
  40b450:	pop    rsi
  40b451:	ret    
  40b452:	call   0x40c0d0
  40b457:	jmp    0x40b412
  40b459:	nop    DWORD PTR [rax+0x0]
  40b460:	xor    eax,eax
  40b462:	ret    
  40b463:	nop
  40b464:	nop
  40b465:	nop
  40b466:	nop
  40b467:	nop
  40b468:	nop
  40b469:	nop
  40b46a:	nop
  40b46b:	nop
  40b46c:	nop
  40b46d:	nop
  40b46e:	nop
  40b46f:	nop
  40b470:	sub    rsp,0x58
  40b474:	mov    rax,QWORD PTR [rip+0x12465]        # 0x41d8e0
  40b47b:	test   rax,rax
  40b47e:	je     0x40b4ac
  40b480:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40b489:	mov    DWORD PTR [rsp+0x20],ecx
  40b48d:	lea    rcx,[rsp+0x20]
  40b492:	mov    QWORD PTR [rsp+0x28],rdx
  40b497:	movsd  QWORD PTR [rsp+0x30],xmm2
  40b49d:	movsd  QWORD PTR [rsp+0x38],xmm3
  40b4a3:	movsd  QWORD PTR [rsp+0x40],xmm0
  40b4a9:	call   rax
  40b4ab:	nop
  40b4ac:	add    rsp,0x58
  40b4b0:	ret    
  40b4b1:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4c0:	mov    QWORD PTR [rip+0x12419],rcx        # 0x41d8e0
  40b4c7:	jmp    0x4114f8
  40b4cc:	nop    DWORD PTR [rax+0x0]
  40b4d0:	push   rsi
  40b4d1:	push   rbx
  40b4d2:	sub    rsp,0x78
  40b4d6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40b4db:	movaps XMMWORD PTR [rsp+0x50],xmm7
  40b4e0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  40b4e6:	cmp    DWORD PTR [rcx],0x6
  40b4e9:	ja     0x40b5c0
  40b4ef:	mov    edx,DWORD PTR [rcx]
  40b4f1:	lea    rax,[rip+0xca0c]        # 0x417f04
  40b4f8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40b4fc:	add    rax,rdx
  40b4ff:	jmp    rax
  40b501:	lea    rbx,[rip+0xc8d8]        # 0x417de0
  40b508:	nop    DWORD PTR [rax+rax*1+0x0]
  40b510:	movsd  xmm8,QWORD PTR [rcx+0x20]
  40b516:	mov    rsi,QWORD PTR [rcx+0x8]
  40b51a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40b51f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  40b524:	call   0x411510
  40b529:	movsd  QWORD PTR [rsp+0x30],xmm8
  40b530:	lea    rcx,[rax+0x60]
  40b534:	lea    rdx,[rip+0xc99d]        # 0x417ed8
  40b53b:	movsd  QWORD PTR [rsp+0x28],xmm7
  40b541:	mov    r9,rsi
  40b544:	mov    r8,rbx
  40b547:	movsd  QWORD PTR [rsp+0x20],xmm6
  40b54d:	call   0x411470
  40b552:	nop
  40b553:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40b558:	xor    eax,eax
  40b55a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40b55f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  40b565:	add    rsp,0x78
  40b569:	pop    rbx
  40b56a:	pop    rsi
  40b56b:	ret    
  40b56c:	nop    DWORD PTR [rax+0x0]
  40b570:	lea    rbx,[rip+0xc888]        # 0x417dff
  40b577:	jmp    0x40b510
  40b579:	nop    DWORD PTR [rax+0x0]
  40b580:	lea    rbx,[rip+0xc899]        # 0x417e20
  40b587:	jmp    0x40b510
  40b589:	nop    DWORD PTR [rax+0x0]
  40b590:	lea    rbx,[rip+0xc8f9]        # 0x417e90
  40b597:	jmp    0x40b510
  40b59c:	nop    DWORD PTR [rax+0x0]
  40b5a0:	lea    rbx,[rip+0xc8c1]        # 0x417e68
  40b5a7:	jmp    0x40b510
  40b5ac:	nop    DWORD PTR [rax+0x0]
  40b5b0:	lea    rbx,[rip+0xc889]        # 0x417e40
  40b5b7:	jmp    0x40b510
  40b5bc:	nop    DWORD PTR [rax+0x0]
  40b5c0:	lea    rbx,[rip+0xc8ff]        # 0x417ec6
  40b5c7:	jmp    0x40b510
  40b5cc:	nop
  40b5cd:	nop
  40b5ce:	nop
  40b5cf:	nop
  40b5d0:	fninit 
  40b5d2:	ret    
  40b5d3:	nop
  40b5d4:	nop
  40b5d5:	nop
  40b5d6:	nop
  40b5d7:	nop
  40b5d8:	nop
  40b5d9:	nop
  40b5da:	nop
  40b5db:	nop
  40b5dc:	nop
  40b5dd:	nop
  40b5de:	nop
  40b5df:	nop
  40b5e0:	mov    rax,rcx
  40b5e3:	ret    
  40b5e4:	xchg   ax,ax
  40b5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5f0:	mov    rax,rcx
  40b5f3:	ret    
  40b5f4:	nop
  40b5f5:	nop
  40b5f6:	nop
  40b5f7:	nop
  40b5f8:	nop
  40b5f9:	nop
  40b5fa:	nop
  40b5fb:	nop
  40b5fc:	nop
  40b5fd:	nop
  40b5fe:	nop
  40b5ff:	nop
  40b600:	push   rsi
  40b601:	push   rbx
  40b602:	sub    rsp,0x38
  40b606:	lea    rax,[rsp+0x58]
  40b60b:	mov    rbx,rcx
  40b60e:	mov    QWORD PTR [rsp+0x58],rdx
  40b613:	mov    QWORD PTR [rsp+0x60],r8
  40b618:	mov    QWORD PTR [rsp+0x68],r9
  40b61d:	mov    QWORD PTR [rsp+0x28],rax
  40b622:	call   0x411510
  40b627:	lea    rcx,[rip+0xc8f2]        # 0x417f20
  40b62e:	lea    r9,[rax+0x60]
  40b632:	mov    r8d,0x1b
  40b638:	mov    edx,0x1
  40b63d:	call   0x411448
  40b642:	mov    rsi,QWORD PTR [rsp+0x28]
  40b647:	call   0x411510
  40b64c:	lea    rcx,[rax+0x60]
  40b650:	mov    rdx,rbx
  40b653:	mov    r8,rsi
  40b656:	call   0x411380
  40b65b:	call   0x4114a0
  40b660:	nop
  40b661:	nop    DWORD PTR [rax+rax*1+0x0]
  40b666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b670:	push   r13
  40b672:	push   r12
  40b674:	push   rbp
  40b675:	push   rdi
  40b676:	push   rsi
  40b677:	push   rbx
  40b678:	sub    rsp,0x58
  40b67c:	movsxd rbp,DWORD PTR [rip+0x12281]        # 0x41d904
  40b683:	mov    rbx,rcx
  40b686:	mov    rsi,rdx
  40b689:	mov    rdi,r8
  40b68c:	test   ebp,ebp
  40b68e:	jle    0x40b78a
  40b694:	mov    rax,QWORD PTR [rip+0x1226d]        # 0x41d908
  40b69b:	xor    r9d,r9d
  40b69e:	add    rax,0x8
  40b6a2:	mov    r10,QWORD PTR [rax]
  40b6a5:	cmp    rbx,r10
  40b6a8:	jb     0x40b6be
  40b6aa:	mov    rdx,QWORD PTR [rax+0x8]
  40b6ae:	mov    r11d,DWORD PTR [rdx+0x8]
  40b6b2:	add    r10,r11
  40b6b5:	cmp    rbx,r10
  40b6b8:	jb     0x40b770
  40b6be:	add    r9d,0x1
  40b6c2:	add    rax,0x18
  40b6c6:	cmp    r9d,ebp
  40b6c9:	jne    0x40b6a2
  40b6cb:	mov    rcx,rbx
  40b6ce:	call   0x40c2e0
  40b6d3:	test   rax,rax
  40b6d6:	mov    r12,rax
  40b6d9:	je     0x40b7c2
  40b6df:	lea    rbp,[rbp+rbp*2+0x0]
  40b6e4:	shl    rbp,0x3
  40b6e8:	mov    r13,rbp
  40b6eb:	add    r13,QWORD PTR [rip+0x12216]        # 0x41d908
  40b6f2:	mov    QWORD PTR [r13+0x10],rax
  40b6f6:	mov    DWORD PTR [r13+0x0],0x0
  40b6fe:	call   0x40c400
  40b703:	mov    edx,DWORD PTR [r12+0xc]
  40b708:	mov    r8d,0x30
  40b70e:	add    rax,rdx
  40b711:	lea    rdx,[rsp+0x20]
  40b716:	mov    QWORD PTR [r13+0x8],rax
  40b71a:	mov    rax,QWORD PTR [rip+0x121e7]        # 0x41d908
  40b721:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  40b726:	call   QWORD PTR [rip+0x13e5c]        # 0x41f588
  40b72c:	test   rax,rax
  40b72f:	je     0x40b7a5
  40b731:	mov    eax,DWORD PTR [rsp+0x44]
  40b735:	lea    edx,[rax-0x4]
  40b738:	and    edx,0xfffffffb
  40b73b:	je     0x40b769
  40b73d:	sub    eax,0x40
  40b740:	and    eax,0xffffffbf
  40b743:	je     0x40b769
  40b745:	mov    r9,rbp
  40b748:	add    r9,QWORD PTR [rip+0x121b9]        # 0x41d908
  40b74f:	mov    r8d,0x40
  40b755:	mov    rdx,QWORD PTR [rsp+0x38]
  40b75a:	mov    rcx,QWORD PTR [rsp+0x20]
  40b75f:	call   QWORD PTR [rip+0x13e1b]        # 0x41f580
  40b765:	test   eax,eax
  40b767:	je     0x40b791
  40b769:	add    DWORD PTR [rip+0x12194],0x1        # 0x41d904
  40b770:	mov    r8,rdi
  40b773:	mov    rdx,rsi
  40b776:	mov    rcx,rbx
  40b779:	add    rsp,0x58
  40b77d:	pop    rbx
  40b77e:	pop    rsi
  40b77f:	pop    rdi
  40b780:	pop    rbp
  40b781:	pop    r12
  40b783:	pop    r13
  40b785:	jmp    0x411408
  40b78a:	xor    ebp,ebp
  40b78c:	jmp    0x40b6cb
  40b791:	call   QWORD PTR [rip+0x13d21]        # 0x41f4b8
  40b797:	lea    rcx,[rip+0xc7fa]        # 0x417f98
  40b79e:	mov    edx,eax
  40b7a0:	call   0x40b600
  40b7a5:	mov    rax,QWORD PTR [rip+0x1215c]        # 0x41d908
  40b7ac:	mov    edx,DWORD PTR [r12+0x8]
  40b7b1:	lea    rcx,[rip+0xc7a8]        # 0x417f60
  40b7b8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40b7bd:	call   0x40b600
  40b7c2:	lea    rcx,[rip+0xc777]        # 0x417f40
  40b7c9:	mov    rdx,rbx
  40b7cc:	call   0x40b600
  40b7d1:	nop
  40b7d2:	nop    DWORD PTR [rax+0x0]
  40b7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7e0:	push   rbp
  40b7e1:	push   r14
  40b7e3:	push   r13
  40b7e5:	push   r12
  40b7e7:	push   rdi
  40b7e8:	push   rsi
  40b7e9:	push   rbx
  40b7ea:	mov    rbp,rsp
  40b7ed:	sub    rsp,0x60
  40b7f1:	mov    ebx,DWORD PTR [rip+0x12109]        # 0x41d900
  40b7f7:	test   ebx,ebx
  40b7f9:	je     0x40b810
  40b7fb:	mov    rsp,rbp
  40b7fe:	pop    rbx
  40b7ff:	pop    rsi
  40b800:	pop    rdi
  40b801:	pop    r12
  40b803:	pop    r13
  40b805:	pop    r14
  40b807:	pop    rbp
  40b808:	ret    
  40b809:	nop    DWORD PTR [rax+0x0]
  40b810:	mov    DWORD PTR [rip+0x120e6],0x1        # 0x41d900
  40b81a:	call   0x40c330
  40b81f:	cdqe   
  40b821:	lea    rax,[rax+rax*2]
  40b825:	lea    rax,[rax*8+0x1e]
  40b82d:	and    rax,0xfffffffffffffff0
  40b831:	call   0x40c550
  40b836:	mov    rsi,QWORD PTR [rip+0xcd33]        # 0x418570
  40b83d:	mov    rbx,QWORD PTR [rip+0xcd3c]        # 0x418580
  40b844:	sub    rsp,rax
  40b847:	mov    DWORD PTR [rip+0x120b3],0x0        # 0x41d904
  40b851:	lea    rax,[rsp+0x20]
  40b856:	mov    QWORD PTR [rip+0x120ab],rax        # 0x41d908
  40b85d:	mov    rax,rsi
  40b860:	sub    rax,rbx
  40b863:	cmp    rax,0x7
  40b867:	jle    0x40b7fb
  40b869:	cmp    rax,0xb
  40b86d:	jle    0x40b895
  40b86f:	mov    r11d,DWORD PTR [rbx]
  40b872:	test   r11d,r11d
  40b875:	jne    0x40b9c0
  40b87b:	mov    r10d,DWORD PTR [rbx+0x4]
  40b87f:	test   r10d,r10d
  40b882:	jne    0x40b9c0
  40b888:	mov    r9d,DWORD PTR [rbx+0x8]
  40b88c:	test   r9d,r9d
  40b88f:	jne    0x40b8ac
  40b891:	add    rbx,0xc
  40b895:	mov    r8d,DWORD PTR [rbx]
  40b898:	test   r8d,r8d
  40b89b:	jne    0x40b9c0
  40b8a1:	mov    ecx,DWORD PTR [rbx+0x4]
  40b8a4:	test   ecx,ecx
  40b8a6:	jne    0x40b9c0
  40b8ac:	mov    edx,DWORD PTR [rbx+0x8]
  40b8af:	cmp    edx,0x1
  40b8b2:	jne    0x40bacc
  40b8b8:	add    rbx,0xc
  40b8bc:	cmp    rbx,rsi
  40b8bf:	jae    0x40b7fb
  40b8c5:	mov    r12,QWORD PTR [rip+0xccd4]        # 0x4185a0
  40b8cc:	lea    r13,[rbp-0x30]
  40b8d0:	movabs r14,0xffffffff00000000
  40b8da:	mov    ecx,DWORD PTR [rbx+0x4]
  40b8dd:	mov    eax,DWORD PTR [rbx]
  40b8df:	movzx  edx,BYTE PTR [rbx+0x8]
  40b8e3:	add    rax,r12
  40b8e6:	add    rcx,r12
  40b8e9:	cmp    edx,0x10
  40b8ec:	mov    r8,QWORD PTR [rax]
  40b8ef:	je     0x40ba36
  40b8f5:	jbe    0x40b9fd
  40b8fb:	cmp    edx,0x20
  40b8fe:	je     0x40ba7f
  40b904:	cmp    edx,0x40
  40b907:	jne    0x40ba6b
  40b90d:	sub    r8,rax
  40b910:	mov    rdx,r13
  40b913:	mov    rdi,r13
  40b916:	mov    rax,r8
  40b919:	add    rax,QWORD PTR [rcx]
  40b91c:	mov    r8d,0x8
  40b922:	mov    QWORD PTR [rbp-0x30],rax
  40b926:	call   0x40b670
  40b92b:	add    rbx,0xc
  40b92f:	cmp    rbx,rsi
  40b932:	jb     0x40b8da
  40b934:	mov    eax,DWORD PTR [rip+0x11fca]        # 0x41d904
  40b93a:	xor    ebx,ebx
  40b93c:	xor    esi,esi
  40b93e:	test   eax,eax
  40b940:	jle    0x40b7fb
  40b946:	mov    r14,QWORD PTR [rip+0x13c3b]        # 0x41f588
  40b94d:	lea    r13,[rbp-0x34]
  40b951:	mov    r12,QWORD PTR [rip+0x13c28]        # 0x41f580
  40b958:	jmp    0x40b973
  40b95a:	nop    WORD PTR [rax+rax*1+0x0]
  40b960:	add    esi,0x1
  40b963:	add    rbx,0x18
  40b967:	cmp    esi,DWORD PTR [rip+0x11f97]        # 0x41d904
  40b96d:	jge    0x40b7fb
  40b973:	mov    rax,rbx
  40b976:	add    rax,QWORD PTR [rip+0x11f8b]        # 0x41d908
  40b97d:	mov    edx,DWORD PTR [rax]
  40b97f:	test   edx,edx
  40b981:	je     0x40b960
  40b983:	mov    rcx,QWORD PTR [rax+0x8]
  40b987:	mov    r8d,0x30
  40b98d:	mov    rdx,rdi
  40b990:	call   r14
  40b993:	test   rax,rax
  40b996:	je     0x40baae
  40b99c:	mov    rax,QWORD PTR [rip+0x11f65]        # 0x41d908
  40b9a3:	mov    r9,r13
  40b9a6:	mov    rdx,QWORD PTR [rbp-0x18]
  40b9aa:	mov    rcx,QWORD PTR [rbp-0x30]
  40b9ae:	mov    r8d,DWORD PTR [rax+rbx*1]
  40b9b2:	call   r12
  40b9b5:	jmp    0x40b960
  40b9b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b9c0:	cmp    rbx,rsi
  40b9c3:	jae    0x40b7fb
  40b9c9:	mov    r12,QWORD PTR [rip+0xcbd0]        # 0x4185a0
  40b9d0:	lea    rdi,[rbp-0x30]
  40b9d4:	mov    ecx,DWORD PTR [rbx+0x4]
  40b9d7:	mov    eax,DWORD PTR [rbx]
  40b9d9:	mov    r8d,0x4
  40b9df:	mov    rdx,rdi
  40b9e2:	add    rbx,0x8
  40b9e6:	add    rcx,r12
  40b9e9:	add    eax,DWORD PTR [rcx]
  40b9eb:	mov    DWORD PTR [rbp-0x30],eax
  40b9ee:	call   0x40b670
  40b9f3:	cmp    rbx,rsi
  40b9f6:	jb     0x40b9d4
  40b9f8:	jmp    0x40b934
  40b9fd:	cmp    edx,0x8
  40ba00:	jne    0x40ba6b
  40ba02:	movzx  edx,BYTE PTR [rcx]
  40ba05:	mov    rdi,r13
  40ba08:	mov    r10,rdx
  40ba0b:	or     r10,0xffffffffffffff00
  40ba12:	test   dl,dl
  40ba14:	cmovs  rdx,r10
  40ba18:	sub    rdx,rax
  40ba1b:	lea    rax,[r8+rdx*1]
  40ba1f:	mov    r8d,0x1
  40ba25:	mov    rdx,r13
  40ba28:	mov    QWORD PTR [rbp-0x30],rax
  40ba2c:	call   0x40b670
  40ba31:	jmp    0x40b92b
  40ba36:	movzx  edx,WORD PTR [rcx]
  40ba39:	mov    rdi,r13
  40ba3c:	mov    r10,rdx
  40ba3f:	or     r10,0xffffffffffff0000
  40ba46:	test   dx,dx
  40ba49:	cmovs  rdx,r10
  40ba4d:	sub    rdx,rax
  40ba50:	lea    rax,[r8+rdx*1]
  40ba54:	mov    r8d,0x2
  40ba5a:	mov    rdx,r13
  40ba5d:	mov    QWORD PTR [rbp-0x30],rax
  40ba61:	call   0x40b670
  40ba66:	jmp    0x40b92b
  40ba6b:	lea    rcx,[rip+0xc586]        # 0x417ff8
  40ba72:	mov    QWORD PTR [rbp-0x30],0x0
  40ba7a:	call   0x40b600
  40ba7f:	mov    edx,DWORD PTR [rcx]
  40ba81:	mov    rdi,r13
  40ba84:	mov    r10,rdx
  40ba87:	or     r10,r14
  40ba8a:	test   edx,edx
  40ba8c:	cmovs  rdx,r10
  40ba90:	sub    rdx,rax
  40ba93:	lea    rax,[r8+rdx*1]
  40ba97:	mov    r8d,0x4
  40ba9d:	mov    rdx,r13
  40baa0:	mov    QWORD PTR [rbp-0x30],rax
  40baa4:	call   0x40b670
  40baa9:	jmp    0x40b92b
  40baae:	add    rbx,QWORD PTR [rip+0x11e53]        # 0x41d908
  40bab5:	lea    rcx,[rip+0xc4a4]        # 0x417f60
  40babc:	mov    rax,QWORD PTR [rbx+0x10]
  40bac0:	mov    r8,QWORD PTR [rbx+0x8]
  40bac4:	mov    edx,DWORD PTR [rax+0x8]
  40bac7:	call   0x40b600
  40bacc:	lea    rcx,[rip+0xc4ed]        # 0x417fc0
  40bad3:	call   0x40b600
  40bad8:	nop
  40bad9:	nop
  40bada:	nop
  40badb:	nop
  40badc:	nop
  40badd:	nop
  40bade:	nop
  40badf:	nop
  40bae0:	sub    rsp,0x28
  40bae4:	mov    eax,DWORD PTR [rcx]
  40bae6:	cmp    eax,0xc0000091
  40baeb:	ja     0x40bb50
  40baed:	cmp    eax,0xc000008d
  40baf2:	jae    0x40bb6f
  40baf4:	cmp    eax,0xc0000008
  40baf9:	je     0x40bc10
  40baff:	ja     0x40bbe0
  40bb05:	cmp    eax,0x80000002
  40bb0a:	je     0x40bc10
  40bb10:	cmp    eax,0xc0000005
  40bb15:	jne    0x40bbee
  40bb1b:	xor    edx,edx
  40bb1d:	mov    ecx,0xb
  40bb22:	call   0x4113d0
  40bb27:	cmp    rax,0x1
  40bb2b:	je     0x40bc70
  40bb31:	test   rax,rax
  40bb34:	je     0x40bc50
  40bb3a:	mov    ecx,0xb
  40bb3f:	call   rax
  40bb41:	xor    eax,eax
  40bb43:	add    rsp,0x28
  40bb47:	ret    
  40bb48:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb50:	cmp    eax,0xc0000094
  40bb55:	je     0x40bc20
  40bb5b:	ja     0x40bba0
  40bb5d:	cmp    eax,0xc0000092
  40bb62:	je     0x40bc10
  40bb68:	cmp    eax,0xc0000093
  40bb6d:	jne    0x40bbee
  40bb6f:	xor    edx,edx
  40bb71:	mov    ecx,0x8
  40bb76:	call   0x4113d0
  40bb7b:	cmp    rax,0x1
  40bb7f:	mov    rdx,rax
  40bb82:	je     0x40bbf8
  40bb84:	test   rdx,rdx
  40bb87:	mov    eax,0x1
  40bb8c:	je     0x40bb43
  40bb8e:	mov    ecx,0x8
  40bb93:	call   rdx
  40bb95:	xor    eax,eax
  40bb97:	add    rsp,0x28
  40bb9b:	ret    
  40bb9c:	nop    DWORD PTR [rax+0x0]
  40bba0:	cmp    eax,0xc0000095
  40bba5:	je     0x40bc10
  40bba7:	cmp    eax,0xc0000096
  40bbac:	jne    0x40bbee
  40bbae:	xor    edx,edx
  40bbb0:	mov    ecx,0x4
  40bbb5:	call   0x4113d0
  40bbba:	cmp    rax,0x1
  40bbbe:	je     0x40bc5a
  40bbc4:	test   rax,rax
  40bbc7:	je     0x40bc50
  40bbcd:	mov    ecx,0x4
  40bbd2:	call   rax
  40bbd4:	xor    eax,eax
  40bbd6:	jmp    0x40bb43
  40bbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbe0:	cmp    eax,0xc000001d
  40bbe5:	je     0x40bbae
  40bbe7:	cmp    eax,0xc000008c
  40bbec:	je     0x40bc10
  40bbee:	mov    eax,0x1
  40bbf3:	add    rsp,0x28
  40bbf7:	ret    
  40bbf8:	mov    edx,0x1
  40bbfd:	mov    ecx,0x8
  40bc02:	call   0x4113d0
  40bc07:	call   0x40b5d0
  40bc0c:	nop    DWORD PTR [rax+0x0]
  40bc10:	xor    eax,eax
  40bc12:	add    rsp,0x28
  40bc16:	ret    
  40bc17:	nop    WORD PTR [rax+rax*1+0x0]
  40bc20:	xor    edx,edx
  40bc22:	mov    ecx,0x8
  40bc27:	call   0x4113d0
  40bc2c:	cmp    rax,0x1
  40bc30:	mov    rdx,rax
  40bc33:	jne    0x40bb84
  40bc39:	mov    edx,0x1
  40bc3e:	mov    ecx,0x8
  40bc43:	call   0x4113d0
  40bc48:	xor    eax,eax
  40bc4a:	jmp    0x40bb43
  40bc4f:	nop
  40bc50:	mov    eax,0x4
  40bc55:	add    rsp,0x28
  40bc59:	ret    
  40bc5a:	mov    edx,0x1
  40bc5f:	mov    ecx,0x4
  40bc64:	call   0x4113d0
  40bc69:	xor    eax,eax
  40bc6b:	jmp    0x40bb43
  40bc70:	mov    edx,0x1
  40bc75:	mov    ecx,0xb
  40bc7a:	call   0x4113d0
  40bc7f:	xor    eax,eax
  40bc81:	jmp    0x40bb43
  40bc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc90:	push   r12
  40bc92:	push   rbp
  40bc93:	push   rdi
  40bc94:	push   rsi
  40bc95:	push   rbx
  40bc96:	sub    rsp,0x20
  40bc9a:	call   0x40c400
  40bc9f:	mov    rbp,rax
  40bca2:	mov    eax,DWORD PTR [rip+0x11ca0]        # 0x41d948
  40bca8:	test   eax,eax
  40bcaa:	jne    0x40bcd1
  40bcac:	test   rbp,rbp
  40bcaf:	je     0x40bcd1
  40bcb1:	lea    rcx,[rip+0xc378]        # 0x418030
  40bcb8:	mov    DWORD PTR [rip+0x11c86],0x1        # 0x41d948
  40bcc2:	call   0x40c240
  40bcc7:	test   rax,rax
  40bcca:	je     0x40bce0
  40bccc:	mov    eax,0x1
  40bcd1:	add    rsp,0x20
  40bcd5:	pop    rbx
  40bcd6:	pop    rsi
  40bcd7:	pop    rdi
  40bcd8:	pop    rbp
  40bcd9:	pop    r12
  40bcdb:	ret    
  40bcdc:	nop    DWORD PTR [rax+0x0]
  40bce0:	lea    rbx,[rip+0x11d99]        # 0x41da80
  40bce7:	mov    ecx,0x30
  40bcec:	lea    rdx,[rip+0x11c8d]        # 0x41d980
  40bcf3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x40bae0
  40bcfa:	xor    esi,esi
  40bcfc:	mov    rdi,rbx
  40bcff:	rep stos QWORD PTR es:[rdi],rax
  40bd02:	mov    rdi,rdx
  40bd05:	sub    r12,rbp
  40bd08:	mov    cl,0x20
  40bd0a:	rep stos QWORD PTR es:[rdi],rax
  40bd0d:	mov    rdi,rdx
  40bd10:	jmp    0x40bd40
  40bd12:	mov    BYTE PTR [rdi],0x9
  40bd15:	mov    DWORD PTR [rdi+0x4],r12d
  40bd19:	add    rsi,0x1
  40bd1d:	mov    edx,DWORD PTR [rax+0xc]
  40bd20:	add    rbx,0xc
  40bd24:	mov    DWORD PTR [rbx-0xc],edx
  40bd27:	add    edx,DWORD PTR [rax+0x8]
  40bd2a:	mov    rax,rdi
  40bd2d:	sub    rax,rbp
  40bd30:	add    rdi,0x8
  40bd34:	mov    DWORD PTR [rbx-0x4],eax
  40bd37:	mov    DWORD PTR [rbx-0x8],edx
  40bd3a:	cmp    rsi,0x20
  40bd3e:	je     0x40bd75
  40bd40:	mov    rcx,rsi
  40bd43:	call   0x40c370
  40bd48:	test   rax,rax
  40bd4b:	jne    0x40bd12
  40bd4d:	test   rsi,rsi
  40bd50:	je     0x40bccc
  40bd56:	mov    edx,esi
  40bd58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd60:	mov    r8,rbp
  40bd63:	lea    rcx,[rip+0x11d16]        # 0x41da80
  40bd6a:	call   QWORD PTR [rip+0x137b8]        # 0x41f528
  40bd70:	jmp    0x40bccc
  40bd75:	mov    edx,0x20
  40bd7a:	jmp    0x40bd60
  40bd7c:	nop    DWORD PTR [rax+0x0]
  40bd80:	push   rbx
  40bd81:	sub    rsp,0x20
  40bd85:	mov    rdx,QWORD PTR [rcx]
  40bd88:	mov    eax,DWORD PTR [rdx]
  40bd8a:	mov    r8d,eax
  40bd8d:	and    r8d,0x20ffffff
  40bd94:	cmp    r8d,0x20474343
  40bd9b:	je     0x40bea0
  40bda1:	cmp    eax,0xc0000091
  40bda6:	mov    rbx,rcx
  40bda9:	ja     0x40be30
  40bdaf:	cmp    eax,0xc000008d
  40bdb4:	jae    0x40be47
  40bdba:	cmp    eax,0xc0000008
  40bdbf:	je     0x40bdf3
  40bdc1:	ja     0x40be00
  40bdc3:	cmp    eax,0x80000002
  40bdc8:	je     0x40bdf3
  40bdca:	cmp    eax,0xc0000005
  40bdcf:	jne    0x40be12
  40bdd1:	xor    edx,edx
  40bdd3:	mov    ecx,0xb
  40bdd8:	call   0x4113d0
  40bddd:	cmp    rax,0x1
  40bde1:	je     0x40bf10
  40bde7:	test   rax,rax
  40bdea:	je     0x40be12
  40bdec:	mov    ecx,0xb
  40bdf1:	call   rax
  40bdf3:	mov    eax,0xffffffff
  40bdf8:	add    rsp,0x20
  40bdfc:	pop    rbx
  40bdfd:	ret    
  40bdfe:	xchg   ax,ax
  40be00:	cmp    eax,0xc000001d
  40be05:	je     0x40bec6
  40be0b:	cmp    eax,0xc000008c
  40be10:	je     0x40bdf3
  40be12:	mov    rax,QWORD PTR [rip+0x11b27]        # 0x41d940
  40be19:	test   rax,rax
  40be1c:	je     0x40bdf8
  40be1e:	mov    rcx,rbx
  40be21:	add    rsp,0x20
  40be25:	pop    rbx
  40be26:	rex.W jmp rax
  40be29:	nop    DWORD PTR [rax+0x0]
  40be30:	cmp    eax,0xc0000094
  40be35:	je     0x40be72
  40be37:	ja     0x40beb0
  40be39:	cmp    eax,0xc0000092
  40be3e:	je     0x40bdf3
  40be40:	cmp    eax,0xc0000093
  40be45:	jne    0x40be12
  40be47:	xor    edx,edx
  40be49:	mov    ecx,0x8
  40be4e:	call   0x4113d0
  40be53:	cmp    rax,0x1
  40be57:	jne    0x40be84
  40be59:	mov    edx,0x1
  40be5e:	mov    ecx,0x8
  40be63:	call   0x4113d0
  40be68:	call   0x40b5d0
  40be6d:	jmp    0x40bdf3
  40be72:	xor    edx,edx
  40be74:	mov    ecx,0x8
  40be79:	call   0x4113d0
  40be7e:	cmp    rax,0x1
  40be82:	je     0x40bef2
  40be84:	test   rax,rax
  40be87:	je     0x40be12
  40be89:	mov    ecx,0x8
  40be8e:	call   rax
  40be90:	mov    eax,0xffffffff
  40be95:	jmp    0x40bdf8
  40be9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bea0:	test   BYTE PTR [rdx+0x4],0x1
  40bea4:	jne    0x40bda1
  40beaa:	jmp    0x40bdf3
  40beaf:	nop
  40beb0:	cmp    eax,0xc0000095
  40beb5:	je     0x40bdf3
  40bebb:	cmp    eax,0xc0000096
  40bec0:	jne    0x40be12
  40bec6:	xor    edx,edx
  40bec8:	mov    ecx,0x4
  40becd:	call   0x4113d0
  40bed2:	cmp    rax,0x1
  40bed6:	je     0x40bf24
  40bed8:	test   rax,rax
  40bedb:	je     0x40be12
  40bee1:	mov    ecx,0x4
  40bee6:	call   rax
  40bee8:	mov    eax,0xffffffff
  40beed:	jmp    0x40bdf8
  40bef2:	mov    edx,0x1
  40bef7:	mov    ecx,0x8
  40befc:	call   0x4113d0
  40bf01:	jmp    0x40bdf3
  40bf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf10:	mov    edx,0x1
  40bf15:	mov    ecx,0xb
  40bf1a:	call   0x4113d0
  40bf1f:	jmp    0x40bdf3
  40bf24:	mov    edx,0x1
  40bf29:	mov    ecx,0x4
  40bf2e:	call   0x4113d0
  40bf33:	jmp    0x40bdf3
  40bf38:	nop
  40bf39:	nop
  40bf3a:	nop
  40bf3b:	nop
  40bf3c:	nop
  40bf3d:	nop
  40bf3e:	nop
  40bf3f:	nop
  40bf40:	push   rbp
  40bf41:	push   rdi
  40bf42:	push   rsi
  40bf43:	push   rbx
  40bf44:	sub    rsp,0x28
  40bf48:	lea    rcx,[rip+0x11cd1]        # 0x41dc20
  40bf4f:	call   QWORD PTR [rip+0x1352b]        # 0x41f480
  40bf55:	mov    rbx,QWORD PTR [rip+0x11ca4]        # 0x41dc00
  40bf5c:	test   rbx,rbx
  40bf5f:	je     0x40bf94
  40bf61:	mov    rbp,QWORD PTR [rip+0x13608]        # 0x41f570
  40bf68:	mov    rdi,QWORD PTR [rip+0x13549]        # 0x41f4b8
  40bf6f:	nop
  40bf70:	mov    ecx,DWORD PTR [rbx]
  40bf72:	call   rbp
  40bf74:	mov    rsi,rax
  40bf77:	call   rdi
  40bf79:	test   eax,eax
  40bf7b:	jne    0x40bf8b
  40bf7d:	test   rsi,rsi
  40bf80:	je     0x40bf8b
  40bf82:	mov    rax,QWORD PTR [rbx+0x8]
  40bf86:	mov    rcx,rsi
  40bf89:	call   rax
  40bf8b:	mov    rbx,QWORD PTR [rbx+0x10]
  40bf8f:	test   rbx,rbx
  40bf92:	jne    0x40bf70
  40bf94:	mov    rax,QWORD PTR [rip+0x13575]        # 0x41f510
  40bf9b:	lea    rcx,[rip+0x11c7e]        # 0x41dc20
  40bfa2:	add    rsp,0x28
  40bfa6:	pop    rbx
  40bfa7:	pop    rsi
  40bfa8:	pop    rdi
  40bfa9:	pop    rbp
  40bfaa:	rex.W jmp rax
  40bfad:	nop    DWORD PTR [rax]
  40bfb0:	push   rdi
  40bfb1:	push   rsi
  40bfb2:	push   rbx
  40bfb3:	sub    rsp,0x20
  40bfb7:	mov    eax,DWORD PTR [rip+0x11c4b]        # 0x41dc08
  40bfbd:	test   eax,eax
  40bfbf:	jne    0x40bfd0
  40bfc1:	add    rsp,0x20
  40bfc5:	pop    rbx
  40bfc6:	pop    rsi
  40bfc7:	pop    rdi
  40bfc8:	ret    
  40bfc9:	nop    DWORD PTR [rax+0x0]
  40bfd0:	mov    rsi,rdx
  40bfd3:	mov    edi,ecx
  40bfd5:	mov    edx,0x18
  40bfda:	mov    ecx,0x1
  40bfdf:	call   0x411498
  40bfe4:	test   rax,rax
  40bfe7:	mov    rbx,rax
  40bfea:	je     0x40c028
  40bfec:	mov    DWORD PTR [rax],edi
  40bfee:	mov    QWORD PTR [rax+0x8],rsi
  40bff2:	lea    rcx,[rip+0x11c27]        # 0x41dc20
  40bff9:	call   QWORD PTR [rip+0x13481]        # 0x41f480
  40bfff:	mov    rax,QWORD PTR [rip+0x11bfa]        # 0x41dc00
  40c006:	lea    rcx,[rip+0x11c13]        # 0x41dc20
  40c00d:	mov    QWORD PTR [rip+0x11bec],rbx        # 0x41dc00
  40c014:	mov    QWORD PTR [rbx+0x10],rax
  40c018:	call   QWORD PTR [rip+0x134f2]        # 0x41f510
  40c01e:	xor    eax,eax
  40c020:	add    rsp,0x20
  40c024:	pop    rbx
  40c025:	pop    rsi
  40c026:	pop    rdi
  40c027:	ret    
  40c028:	mov    eax,0xffffffff
  40c02d:	jmp    0x40bfc1
  40c02f:	nop
  40c030:	push   rbx
  40c031:	sub    rsp,0x20
  40c035:	mov    eax,DWORD PTR [rip+0x11bcd]        # 0x41dc08
  40c03b:	test   eax,eax
  40c03d:	jne    0x40c050
  40c03f:	xor    eax,eax
  40c041:	add    rsp,0x20
  40c045:	pop    rbx
  40c046:	ret    
  40c047:	nop    WORD PTR [rax+rax*1+0x0]
  40c050:	mov    ebx,ecx
  40c052:	lea    rcx,[rip+0x11bc7]        # 0x41dc20
  40c059:	call   QWORD PTR [rip+0x13421]        # 0x41f480
  40c05f:	mov    rdx,QWORD PTR [rip+0x11b9a]        # 0x41dc00
  40c066:	test   rdx,rdx
  40c069:	je     0x40c087
  40c06b:	mov    eax,DWORD PTR [rdx]
  40c06d:	cmp    eax,ebx
  40c06f:	jne    0x40c07e
  40c071:	jmp    0x40c0bf
  40c073:	mov    r8d,DWORD PTR [rax]
  40c076:	cmp    r8d,ebx
  40c079:	je     0x40c0a0
  40c07b:	mov    rdx,rax
  40c07e:	mov    rax,QWORD PTR [rdx+0x10]
  40c082:	test   rax,rax
  40c085:	jne    0x40c073
  40c087:	lea    rcx,[rip+0x11b92]        # 0x41dc20
  40c08e:	call   QWORD PTR [rip+0x1347c]        # 0x41f510
  40c094:	xor    eax,eax
  40c096:	add    rsp,0x20
  40c09a:	pop    rbx
  40c09b:	ret    
  40c09c:	nop    DWORD PTR [rax+0x0]
  40c0a0:	mov    rcx,rax
  40c0a3:	mov    rax,QWORD PTR [rax+0x10]
  40c0a7:	mov    QWORD PTR [rdx+0x10],rax
  40c0ab:	call   0x411458
  40c0b0:	lea    rcx,[rip+0x11b69]        # 0x41dc20
  40c0b7:	call   QWORD PTR [rip+0x13453]        # 0x41f510
  40c0bd:	jmp    0x40c094
  40c0bf:	mov    rax,QWORD PTR [rdx+0x10]
  40c0c3:	mov    rcx,rdx
  40c0c6:	mov    QWORD PTR [rip+0x11b33],rax        # 0x41dc00
  40c0cd:	jmp    0x40c0ab
  40c0cf:	nop
  40c0d0:	push   rbx
  40c0d1:	sub    rsp,0x20
  40c0d5:	cmp    edx,0x1
  40c0d8:	je     0x40c170
  40c0de:	jb     0x40c110
  40c0e0:	cmp    edx,0x2
  40c0e3:	je     0x40c100
  40c0e5:	cmp    edx,0x3
  40c0e8:	jne    0x40c105
  40c0ea:	mov    eax,DWORD PTR [rip+0x11b18]        # 0x41dc08
  40c0f0:	test   eax,eax
  40c0f2:	je     0x40c105
  40c0f4:	call   0x40bf40
  40c0f9:	jmp    0x40c105
  40c0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c100:	call   0x40b5d0
  40c105:	mov    eax,0x1
  40c10a:	add    rsp,0x20
  40c10e:	pop    rbx
  40c10f:	ret    
  40c110:	mov    eax,DWORD PTR [rip+0x11af2]        # 0x41dc08
  40c116:	test   eax,eax
  40c118:	jne    0x40c1a0
  40c11e:	mov    eax,DWORD PTR [rip+0x11ae4]        # 0x41dc08
  40c124:	cmp    eax,0x1
  40c127:	jne    0x40c105
  40c129:	mov    rcx,QWORD PTR [rip+0x11ad0]        # 0x41dc00
  40c130:	test   rcx,rcx
  40c133:	je     0x40c146
  40c135:	mov    rbx,QWORD PTR [rcx+0x10]
  40c139:	call   0x411458
  40c13e:	test   rbx,rbx
  40c141:	mov    rcx,rbx
  40c144:	jne    0x40c135
  40c146:	lea    rcx,[rip+0x11ad3]        # 0x41dc20
  40c14d:	mov    QWORD PTR [rip+0x11aa8],0x0        # 0x41dc00
  40c158:	mov    DWORD PTR [rip+0x11aa6],0x0        # 0x41dc08
  40c162:	call   QWORD PTR [rip+0x13310]        # 0x41f478
  40c168:	jmp    0x40c105
  40c16a:	nop    WORD PTR [rax+rax*1+0x0]
  40c170:	mov    eax,DWORD PTR [rip+0x11a92]        # 0x41dc08
  40c176:	test   eax,eax
  40c178:	je     0x40c190
  40c17a:	mov    eax,0x1
  40c17f:	mov    DWORD PTR [rip+0x11a7f],0x1        # 0x41dc08
  40c189:	add    rsp,0x20
  40c18d:	pop    rbx
  40c18e:	ret    
  40c18f:	nop
  40c190:	lea    rcx,[rip+0x11a89]        # 0x41dc20
  40c197:	call   QWORD PTR [rip+0x13363]        # 0x41f500
  40c19d:	jmp    0x40c17a
  40c19f:	nop
  40c1a0:	call   0x40bf40
  40c1a5:	jmp    0x40c11e
  40c1aa:	nop
  40c1ab:	nop
  40c1ac:	nop
  40c1ad:	nop
  40c1ae:	nop
  40c1af:	nop
  40c1b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c1b4:	add    rcx,rax
  40c1b7:	xor    eax,eax
  40c1b9:	cmp    DWORD PTR [rcx],0x4550
  40c1bf:	je     0x40c1c3
  40c1c1:	repz ret 
  40c1c3:	xor    eax,eax
  40c1c5:	cmp    WORD PTR [rcx+0x18],0x20b
  40c1cb:	sete   al
  40c1ce:	ret    
  40c1cf:	nop
  40c1d0:	cmp    WORD PTR [rcx],0x5a4d
  40c1d5:	je     0x40c1e0
  40c1d7:	xor    eax,eax
  40c1d9:	ret    
  40c1da:	nop    WORD PTR [rax+rax*1+0x0]
  40c1e0:	jmp    0x40c1b0
  40c1e2:	nop    DWORD PTR [rax+0x0]
  40c1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c1f4:	add    rcx,rax
  40c1f7:	movzx  eax,WORD PTR [rcx+0x14]
  40c1fb:	lea    rax,[rcx+rax*1+0x18]
  40c200:	movzx  ecx,WORD PTR [rcx+0x6]
  40c204:	test   ecx,ecx
  40c206:	je     0x40c231
  40c208:	sub    ecx,0x1
  40c20b:	lea    rcx,[rcx+rcx*4]
  40c20f:	lea    r9,[rax+rcx*8+0x28]
  40c214:	mov    r8d,DWORD PTR [rax+0xc]
  40c218:	cmp    r8,rdx
  40c21b:	mov    rcx,r8
  40c21e:	ja     0x40c228
  40c220:	add    ecx,DWORD PTR [rax+0x8]
  40c223:	cmp    rdx,rcx
  40c226:	jb     0x40c233
  40c228:	add    rax,0x28
  40c22c:	cmp    rax,r9
  40c22f:	jne    0x40c214
  40c231:	xor    eax,eax
  40c233:	repz ret 
  40c235:	nop
  40c236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c240:	push   rdi
  40c241:	push   rsi
  40c242:	push   rbx
  40c243:	sub    rsp,0x20
  40c247:	mov    rsi,rcx
  40c24a:	call   0x4113a8
  40c24f:	cmp    rax,0x8
  40c253:	ja     0x40c270
  40c255:	mov    rbx,QWORD PTR [rip+0xc344]        # 0x4185a0
  40c25c:	xor    edi,edi
  40c25e:	cmp    WORD PTR [rbx],0x5a4d
  40c263:	je     0x40c280
  40c265:	mov    rax,rdi
  40c268:	add    rsp,0x20
  40c26c:	pop    rbx
  40c26d:	pop    rsi
  40c26e:	pop    rdi
  40c26f:	ret    
  40c270:	xor    edi,edi
  40c272:	mov    rax,rdi
  40c275:	add    rsp,0x20
  40c279:	pop    rbx
  40c27a:	pop    rsi
  40c27b:	pop    rdi
  40c27c:	ret    
  40c27d:	nop    DWORD PTR [rax]
  40c280:	mov    rcx,rbx
  40c283:	call   0x40c1b0
  40c288:	test   eax,eax
  40c28a:	je     0x40c265
  40c28c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40c290:	add    rdx,rbx
  40c293:	movzx  eax,WORD PTR [rdx+0x14]
  40c297:	lea    rbx,[rdx+rax*1+0x18]
  40c29c:	movzx  eax,WORD PTR [rdx+0x6]
  40c2a0:	test   eax,eax
  40c2a2:	je     0x40c265
  40c2a4:	sub    eax,0x1
  40c2a7:	lea    rax,[rax+rax*4]
  40c2ab:	lea    rdi,[rbx+rax*8+0x28]
  40c2b0:	jmp    0x40c2bb
  40c2b2:	add    rbx,0x28
  40c2b6:	cmp    rbx,rdi
  40c2b9:	je     0x40c270
  40c2bb:	mov    r8d,0x8
  40c2c1:	mov    rdx,rsi
  40c2c4:	mov    rcx,rbx
  40c2c7:	call   0x4113a0
  40c2cc:	test   eax,eax
  40c2ce:	jne    0x40c2b2
  40c2d0:	mov    rdi,rbx
  40c2d3:	mov    rax,rdi
  40c2d6:	add    rsp,0x20
  40c2da:	pop    rbx
  40c2db:	pop    rsi
  40c2dc:	pop    rdi
  40c2dd:	ret    
  40c2de:	xchg   ax,ax
  40c2e0:	push   rsi
  40c2e1:	push   rbx
  40c2e2:	sub    rsp,0x28
  40c2e6:	mov    rbx,QWORD PTR [rip+0xc2b3]        # 0x4185a0
  40c2ed:	cmp    WORD PTR [rbx],0x5a4d
  40c2f2:	je     0x40c300
  40c2f4:	xor    eax,eax
  40c2f6:	add    rsp,0x28
  40c2fa:	pop    rbx
  40c2fb:	pop    rsi
  40c2fc:	ret    
  40c2fd:	nop    DWORD PTR [rax]
  40c300:	mov    rsi,rcx
  40c303:	mov    rcx,rbx
  40c306:	call   0x40c1b0
  40c30b:	test   eax,eax
  40c30d:	je     0x40c2f4
  40c30f:	sub    rsi,rbx
  40c312:	mov    rcx,rbx
  40c315:	mov    rdx,rsi
  40c318:	add    rsp,0x28
  40c31c:	pop    rbx
  40c31d:	pop    rsi
  40c31e:	jmp    0x40c1f0
  40c323:	nop    DWORD PTR [rax]
  40c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c330:	push   rbx
  40c331:	sub    rsp,0x20
  40c335:	mov    rbx,QWORD PTR [rip+0xc264]        # 0x4185a0
  40c33c:	xor    eax,eax
  40c33e:	cmp    WORD PTR [rbx],0x5a4d
  40c343:	je     0x40c350
  40c345:	add    rsp,0x20
  40c349:	pop    rbx
  40c34a:	ret    
  40c34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c350:	mov    rcx,rbx
  40c353:	call   0x40c1b0
  40c358:	test   eax,eax
  40c35a:	je     0x40c345
  40c35c:	movsxd rax,DWORD PTR [rbx+0x3c]
  40c360:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40c365:	add    rsp,0x20
  40c369:	pop    rbx
  40c36a:	ret    
  40c36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c370:	push   rdi
  40c371:	push   rsi
  40c372:	push   rbx
  40c373:	sub    rsp,0x20
  40c377:	mov    rsi,QWORD PTR [rip+0xc222]        # 0x4185a0
  40c37e:	xor    edi,edi
  40c380:	mov    rbx,rcx
  40c383:	cmp    WORD PTR [rsi],0x5a4d
  40c388:	je     0x40c395
  40c38a:	mov    rax,rdi
  40c38d:	add    rsp,0x20
  40c391:	pop    rbx
  40c392:	pop    rsi
  40c393:	pop    rdi
  40c394:	ret    
  40c395:	mov    rcx,rsi
  40c398:	call   0x40c1b0
  40c39d:	test   eax,eax
  40c39f:	je     0x40c38a
  40c3a1:	movsxd rax,DWORD PTR [rsi+0x3c]
  40c3a5:	add    rsi,rax
  40c3a8:	movzx  eax,WORD PTR [rsi+0x14]
  40c3ac:	lea    rdx,[rsi+rax*1+0x18]
  40c3b1:	movzx  eax,WORD PTR [rsi+0x6]
  40c3b5:	test   eax,eax
  40c3b7:	je     0x40c38a
  40c3b9:	sub    eax,0x1
  40c3bc:	lea    rax,[rax+rax*4]
  40c3c0:	lea    rax,[rdx+rax*8+0x28]
  40c3c5:	test   BYTE PTR [rdx+0x27],0x20
  40c3c9:	je     0x40c3d4
  40c3cb:	test   rbx,rbx
  40c3ce:	je     0x40c3f0
  40c3d0:	sub    rbx,0x1
  40c3d4:	add    rdx,0x28
  40c3d8:	cmp    rdx,rax
  40c3db:	jne    0x40c3c5
  40c3dd:	xor    edi,edi
  40c3df:	mov    rax,rdi
  40c3e2:	add    rsp,0x20
  40c3e6:	pop    rbx
  40c3e7:	pop    rsi
  40c3e8:	pop    rdi
  40c3e9:	ret    
  40c3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c3f0:	mov    rdi,rdx
  40c3f3:	mov    rax,rdi
  40c3f6:	add    rsp,0x20
  40c3fa:	pop    rbx
  40c3fb:	pop    rsi
  40c3fc:	pop    rdi
  40c3fd:	ret    
  40c3fe:	xchg   ax,ax
  40c400:	push   rsi
  40c401:	push   rbx
  40c402:	sub    rsp,0x28
  40c406:	mov    rsi,QWORD PTR [rip+0xc193]        # 0x4185a0
  40c40d:	xor    ebx,ebx
  40c40f:	cmp    WORD PTR [rsi],0x5a4d
  40c414:	je     0x40c420
  40c416:	mov    rax,rbx
  40c419:	add    rsp,0x28
  40c41d:	pop    rbx
  40c41e:	pop    rsi
  40c41f:	ret    
  40c420:	mov    rcx,rsi
  40c423:	call   0x40c1b0
  40c428:	test   eax,eax
  40c42a:	cmovne rbx,rsi
  40c42e:	mov    rax,rbx
  40c431:	add    rsp,0x28
  40c435:	pop    rbx
  40c436:	pop    rsi
  40c437:	ret    
  40c438:	nop    DWORD PTR [rax+rax*1+0x0]
  40c440:	push   rsi
  40c441:	push   rbx
  40c442:	sub    rsp,0x28
  40c446:	mov    rbx,QWORD PTR [rip+0xc153]        # 0x4185a0
  40c44d:	xor    eax,eax
  40c44f:	cmp    WORD PTR [rbx],0x5a4d
  40c454:	je     0x40c460
  40c456:	add    rsp,0x28
  40c45a:	pop    rbx
  40c45b:	pop    rsi
  40c45c:	ret    
  40c45d:	nop    DWORD PTR [rax]
  40c460:	mov    rsi,rcx
  40c463:	mov    rcx,rbx
  40c466:	call   0x40c1b0
  40c46b:	test   eax,eax
  40c46d:	je     0x40c456
  40c46f:	sub    rsi,rbx
  40c472:	mov    rcx,rbx
  40c475:	mov    rdx,rsi
  40c478:	call   0x40c1f0
  40c47d:	test   rax,rax
  40c480:	je     0x40c491
  40c482:	mov    eax,DWORD PTR [rax+0x24]
  40c485:	not    eax
  40c487:	shr    eax,0x1f
  40c48a:	add    rsp,0x28
  40c48e:	pop    rbx
  40c48f:	pop    rsi
  40c490:	ret    
  40c491:	xor    eax,eax
  40c493:	jmp    0x40c456
  40c495:	nop
  40c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4a0:	push   rbp
  40c4a1:	push   rdi
  40c4a2:	push   rsi
  40c4a3:	push   rbx
  40c4a4:	sub    rsp,0x28
  40c4a8:	mov    rdi,QWORD PTR [rip+0xc0f1]        # 0x4185a0
  40c4af:	xor    ebp,ebp
  40c4b1:	mov    esi,ecx
  40c4b3:	cmp    WORD PTR [rdi],0x5a4d
  40c4b8:	je     0x40c4d0
  40c4ba:	mov    rax,rbp
  40c4bd:	add    rsp,0x28
  40c4c1:	pop    rbx
  40c4c2:	pop    rsi
  40c4c3:	pop    rdi
  40c4c4:	pop    rbp
  40c4c5:	ret    
  40c4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4d0:	mov    rcx,rdi
  40c4d3:	call   0x40c1b0
  40c4d8:	test   eax,eax
  40c4da:	je     0x40c4ba
  40c4dc:	movsxd rax,DWORD PTR [rdi+0x3c]
  40c4e0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40c4e7:	test   edx,edx
  40c4e9:	je     0x40c4ba
  40c4eb:	mov    ebx,edx
  40c4ed:	mov    rcx,rdi
  40c4f0:	mov    rdx,rbx
  40c4f3:	call   0x40c1f0
  40c4f8:	test   rax,rax
  40c4fb:	je     0x40c4ba
  40c4fd:	add    rbx,rdi
  40c500:	mov    rdx,rbx
  40c503:	jne    0x40c517
  40c505:	jmp    0x40c4ba
  40c507:	nop    WORD PTR [rax+rax*1+0x0]
  40c510:	sub    esi,0x1
  40c513:	add    rdx,0x14
  40c517:	mov    ecx,DWORD PTR [rdx+0x4]
  40c51a:	test   ecx,ecx
  40c51c:	jne    0x40c525
  40c51e:	mov    eax,DWORD PTR [rdx+0xc]
  40c521:	test   eax,eax
  40c523:	je     0x40c540
  40c525:	test   esi,esi
  40c527:	jg     0x40c510
  40c529:	mov    ebp,DWORD PTR [rdx+0xc]
  40c52c:	add    rbp,rdi
  40c52f:	mov    rax,rbp
  40c532:	add    rsp,0x28
  40c536:	pop    rbx
  40c537:	pop    rsi
  40c538:	pop    rdi
  40c539:	pop    rbp
  40c53a:	ret    
  40c53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c540:	xor    ebp,ebp
  40c542:	mov    rax,rbp
  40c545:	add    rsp,0x28
  40c549:	pop    rbx
  40c54a:	pop    rsi
  40c54b:	pop    rdi
  40c54c:	pop    rbp
  40c54d:	ret    
  40c54e:	nop
  40c54f:	nop
  40c550:	push   rcx
  40c551:	push   rax
  40c552:	cmp    rax,0x1000
  40c558:	lea    rcx,[rsp+0x18]
  40c55d:	jb     0x40c578
  40c55f:	sub    rcx,0x1000
  40c566:	or     QWORD PTR [rcx],0x0
  40c56a:	sub    rax,0x1000
  40c570:	cmp    rax,0x1000
  40c576:	ja     0x40c55f
  40c578:	sub    rcx,rax
  40c57b:	or     QWORD PTR [rcx],0x0
  40c57f:	pop    rax
  40c580:	pop    rcx
  40c581:	ret    
  40c582:	nop
  40c583:	nop
  40c584:	nop
  40c585:	nop
  40c586:	nop
  40c587:	nop
  40c588:	nop
  40c589:	nop
  40c58a:	nop
  40c58b:	nop
  40c58c:	nop
  40c58d:	nop
  40c58e:	nop
  40c58f:	nop
  40c590:	push   rbp
  40c591:	push   rdi
  40c592:	push   rsi
  40c593:	push   rbx
  40c594:	sub    rsp,0x48
  40c598:	test   rdx,rdx
  40c59b:	je     0x40c6c3
  40c5a1:	test   r8,r8
  40c5a4:	je     0x40c6d0
  40c5aa:	mov    eax,DWORD PTR [r9]
  40c5ad:	mov    DWORD PTR [r9],0x0
  40c5b4:	mov    DWORD PTR [rsp+0x30],eax
  40c5b8:	movzx  eax,BYTE PTR [rdx]
  40c5bb:	test   al,al
  40c5bd:	je     0x40c660
  40c5c3:	cmp    DWORD PTR [rsp+0x98],0x1
  40c5cb:	mov    rsi,r9
  40c5ce:	mov    rdi,r8
  40c5d1:	mov    rbx,rdx
  40c5d4:	mov    rbp,rcx
  40c5d7:	jbe    0x40c640
  40c5d9:	cmp    BYTE PTR [rsp+0x30],0x0
  40c5de:	jne    0x40c670
  40c5e4:	movzx  edx,al
  40c5e7:	mov    ecx,DWORD PTR [rsp+0x90]
  40c5ee:	call   QWORD PTR [rip+0x12f14]        # 0x41f508
  40c5f4:	test   eax,eax
  40c5f6:	je     0x40c640
  40c5f8:	cmp    rdi,0x1
  40c5fc:	jbe    0x40c6ec
  40c602:	mov    DWORD PTR [rsp+0x28],0x1
  40c60a:	mov    QWORD PTR [rsp+0x20],rbp
  40c60f:	mov    r9d,0x2
  40c615:	mov    r8,rbx
  40c618:	mov    edx,0x8
  40c61d:	mov    ecx,DWORD PTR [rsp+0x90]
  40c624:	call   QWORD PTR [rip+0x12eee]        # 0x41f518
  40c62a:	test   eax,eax
  40c62c:	je     0x40c6d7
  40c632:	mov    eax,0x2
  40c637:	add    rsp,0x48
  40c63b:	pop    rbx
  40c63c:	pop    rsi
  40c63d:	pop    rdi
  40c63e:	pop    rbp
  40c63f:	ret    
  40c640:	mov    eax,DWORD PTR [rsp+0x90]
  40c647:	test   eax,eax
  40c649:	jne    0x40c690
  40c64b:	movzx  eax,BYTE PTR [rbx]
  40c64e:	mov    WORD PTR [rbp+0x0],ax
  40c652:	mov    eax,0x1
  40c657:	add    rsp,0x48
  40c65b:	pop    rbx
  40c65c:	pop    rsi
  40c65d:	pop    rdi
  40c65e:	pop    rbp
  40c65f:	ret    
  40c660:	xor    edx,edx
  40c662:	xor    eax,eax
  40c664:	mov    WORD PTR [rcx],dx
  40c667:	add    rsp,0x48
  40c66b:	pop    rbx
  40c66c:	pop    rsi
  40c66d:	pop    rdi
  40c66e:	pop    rbp
  40c66f:	ret    
  40c670:	mov    BYTE PTR [rsp+0x31],al
  40c674:	mov    DWORD PTR [rsp+0x28],0x1
  40c67c:	mov    r9d,0x2
  40c682:	mov    QWORD PTR [rsp+0x20],rcx
  40c687:	lea    r8,[rsp+0x30]
  40c68c:	jmp    0x40c618
  40c68e:	xchg   ax,ax
  40c690:	mov    DWORD PTR [rsp+0x28],0x1
  40c698:	mov    QWORD PTR [rsp+0x20],rbp
  40c69d:	mov    r9d,0x1
  40c6a3:	mov    r8,rbx
  40c6a6:	mov    edx,0x8
  40c6ab:	mov    ecx,DWORD PTR [rsp+0x90]
  40c6b2:	call   QWORD PTR [rip+0x12e60]        # 0x41f518
  40c6b8:	test   eax,eax
  40c6ba:	je     0x40c6d7
  40c6bc:	mov    eax,0x1
  40c6c1:	jmp    0x40c667
  40c6c3:	xor    eax,eax
  40c6c5:	add    rsp,0x48
  40c6c9:	pop    rbx
  40c6ca:	pop    rsi
  40c6cb:	pop    rdi
  40c6cc:	pop    rbp
  40c6cd:	ret    
  40c6ce:	xchg   ax,ax
  40c6d0:	mov    eax,0xfffffffe
  40c6d5:	jmp    0x40c667
  40c6d7:	call   0x4114e0
  40c6dc:	mov    DWORD PTR [rax],0x2a
  40c6e2:	mov    eax,0xffffffff
  40c6e7:	jmp    0x40c667
  40c6ec:	movzx  eax,BYTE PTR [rbx]
  40c6ef:	mov    BYTE PTR [rsi],al
  40c6f1:	mov    eax,0xfffffffe
  40c6f6:	jmp    0x40c667
  40c6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c700:	push   rbp
  40c701:	push   rdi
  40c702:	push   rsi
  40c703:	push   rbx
  40c704:	sub    rsp,0x58
  40c708:	xor    eax,eax
  40c70a:	mov    WORD PTR [rsp+0x4e],ax
  40c70f:	lea    rax,[rsp+0x4e]
  40c714:	test   rcx,rcx
  40c717:	mov    rbx,rcx
  40c71a:	mov    rsi,r9
  40c71d:	mov    rdi,rdx
  40c720:	cmove  rbx,rax
  40c724:	mov    rax,QWORD PTR [rip+0xbe95]        # 0x4185c0
  40c72b:	mov    QWORD PTR [rsp+0x38],r8
  40c730:	mov    rax,QWORD PTR [rax]
  40c733:	mov    ebp,DWORD PTR [rax]
  40c735:	call   0x411528
  40c73a:	mov    r8,QWORD PTR [rsp+0x38]
  40c73f:	lea    r9,[rip+0x11532]        # 0x41dc78
  40c746:	test   rsi,rsi
  40c749:	mov    DWORD PTR [rsp+0x28],ebp
  40c74d:	mov    DWORD PTR [rsp+0x20],eax
  40c751:	mov    rdx,rdi
  40c754:	cmovne r9,rsi
  40c758:	mov    rcx,rbx
  40c75b:	call   0x40c590
  40c760:	cdqe   
  40c762:	add    rsp,0x58
  40c766:	pop    rbx
  40c767:	pop    rsi
  40c768:	pop    rdi
  40c769:	pop    rbp
  40c76a:	ret    
  40c76b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c770:	push   r15
  40c772:	push   r14
  40c774:	push   r13
  40c776:	push   r12
  40c778:	push   rbp
  40c779:	push   rdi
  40c77a:	push   rsi
  40c77b:	push   rbx
  40c77c:	sub    rsp,0x48
  40c780:	lea    rax,[rip+0x114ed]        # 0x41dc74
  40c787:	test   r9,r9
  40c78a:	mov    rdi,r9
  40c78d:	mov    r13,rdx
  40c790:	cmove  rdi,rax
  40c794:	mov    r14,rcx
  40c797:	mov    rsi,r8
  40c79a:	call   0x411528
  40c79f:	mov    r12d,eax
  40c7a2:	mov    rax,QWORD PTR [rip+0xbe17]        # 0x4185c0
  40c7a9:	test   r13,r13
  40c7ac:	mov    rax,QWORD PTR [rax]
  40c7af:	mov    ebp,DWORD PTR [rax]
  40c7b1:	je     0x40c835
  40c7b7:	mov    rdx,QWORD PTR [r13+0x0]
  40c7bb:	test   rdx,rdx
  40c7be:	je     0x40c835
  40c7c0:	test   r14,r14
  40c7c3:	je     0x40c840
  40c7c5:	xor    ebx,ebx
  40c7c7:	test   rsi,rsi
  40c7ca:	jne    0x40c7ea
  40c7cc:	jmp    0x40c835
  40c7ce:	xchg   ax,ax
  40c7d0:	movsxd r10,eax
  40c7d3:	add    r14,0x2
  40c7d7:	mov    rdx,r10
  40c7da:	add    rdx,QWORD PTR [r13+0x0]
  40c7de:	add    rbx,r10
  40c7e1:	cmp    rsi,rbx
  40c7e4:	mov    QWORD PTR [r13+0x0],rdx
  40c7e8:	jbe    0x40c830
  40c7ea:	mov    r8,rsi
  40c7ed:	mov    DWORD PTR [rsp+0x28],ebp
  40c7f1:	mov    DWORD PTR [rsp+0x20],r12d
  40c7f6:	sub    r8,rbx
  40c7f9:	mov    r9,rdi
  40c7fc:	mov    rcx,r14
  40c7ff:	call   0x40c590
  40c804:	cmp    eax,0x0
  40c807:	jg     0x40c7d0
  40c809:	jne    0x40c830
  40c80b:	cmp    rbx,rsi
  40c80e:	jae    0x40c830
  40c810:	mov    QWORD PTR [r13+0x0],0x0
  40c818:	mov    rax,rbx
  40c81b:	add    rsp,0x48
  40c81f:	pop    rbx
  40c820:	pop    rsi
  40c821:	pop    rdi
  40c822:	pop    rbp
  40c823:	pop    r12
  40c825:	pop    r13
  40c827:	pop    r14
  40c829:	pop    r15
  40c82b:	ret    
  40c82c:	xor    ebx,ebx
  40c82e:	xchg   ax,ax
  40c830:	mov    rax,rbx
  40c833:	jmp    0x40c81b
  40c835:	xor    eax,eax
  40c837:	jmp    0x40c81b
  40c839:	nop    DWORD PTR [rax+0x0]
  40c840:	xor    eax,eax
  40c842:	test   rsi,rsi
  40c845:	mov    WORD PTR [rsp+0x3e],ax
  40c84a:	je     0x40c82c
  40c84c:	mov    r15d,ebp
  40c84f:	xor    ebx,ebx
  40c851:	lea    r14,[rsp+0x3e]
  40c856:	jmp    0x40c875
  40c858:	nop    DWORD PTR [rax+rax*1+0x0]
  40c860:	cdqe   
  40c862:	mov    rdx,rax
  40c865:	add    rdx,QWORD PTR [r13+0x0]
  40c869:	add    rbx,rax
  40c86c:	cmp    rsi,rbx
  40c86f:	mov    QWORD PTR [r13+0x0],rdx
  40c873:	jbe    0x40c830
  40c875:	mov    DWORD PTR [rsp+0x28],ebp
  40c879:	mov    DWORD PTR [rsp+0x20],r12d
  40c87e:	mov    r9,rdi
  40c881:	mov    r8,r15
  40c884:	mov    rcx,r14
  40c887:	call   0x40c590
  40c88c:	test   eax,eax
  40c88e:	jg     0x40c860
  40c890:	jmp    0x40c830
  40c892:	nop    DWORD PTR [rax+0x0]
  40c896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8a0:	push   rbp
  40c8a1:	push   rdi
  40c8a2:	push   rsi
  40c8a3:	push   rbx
  40c8a4:	sub    rsp,0x48
  40c8a8:	xor    eax,eax
  40c8aa:	mov    WORD PTR [rsp+0x3e],ax
  40c8af:	mov    rax,QWORD PTR [rip+0xbd0a]        # 0x4185c0
  40c8b6:	mov    rbx,r8
  40c8b9:	mov    rsi,rcx
  40c8bc:	mov    rdi,rdx
  40c8bf:	mov    rax,QWORD PTR [rax]
  40c8c2:	mov    ebp,DWORD PTR [rax]
  40c8c4:	call   0x411528
  40c8c9:	lea    r9,[rip+0x113a0]        # 0x41dc70
  40c8d0:	test   rbx,rbx
  40c8d3:	lea    rcx,[rsp+0x3e]
  40c8d8:	mov    DWORD PTR [rsp+0x28],ebp
  40c8dc:	mov    DWORD PTR [rsp+0x20],eax
  40c8e0:	mov    r8,rdi
  40c8e3:	cmovne r9,rbx
  40c8e7:	mov    rdx,rsi
  40c8ea:	call   0x40c590
  40c8ef:	cdqe   
  40c8f1:	add    rsp,0x48
  40c8f5:	pop    rbx
  40c8f6:	pop    rsi
  40c8f7:	pop    rdi
  40c8f8:	pop    rbp
  40c8f9:	ret    
  40c8fa:	nop
  40c8fb:	nop
  40c8fc:	nop
  40c8fd:	nop
  40c8fe:	nop
  40c8ff:	nop
  40c900:	test   rdx,rdx
  40c903:	mov    r8,rcx
  40c906:	je     0x40c932
  40c908:	cmp    BYTE PTR [rcx],0x0
  40c90b:	jne    0x40c915
  40c90d:	jmp    0x40c932
  40c90f:	nop
  40c910:	cmp    BYTE PTR [rcx],0x0
  40c913:	je     0x40c930
  40c915:	add    rcx,0x1
  40c919:	mov    rax,rcx
  40c91c:	sub    rax,r8
  40c91f:	cmp    rax,rdx
  40c922:	jb     0x40c910
  40c924:	repz ret 
  40c926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c930:	repz ret 
  40c932:	xor    eax,eax
  40c934:	ret    
  40c935:	nop
  40c936:	nop
  40c937:	nop
  40c938:	nop
  40c939:	nop
  40c93a:	nop
  40c93b:	nop
  40c93c:	nop
  40c93d:	nop
  40c93e:	nop
  40c93f:	nop
  40c940:	push   r12
  40c942:	push   rbp
  40c943:	push   rdi
  40c944:	push   rsi
  40c945:	push   rbx
  40c946:	sub    rsp,0x250
  40c94d:	mov    rbx,rdx
  40c950:	mov    rsi,rcx
  40c953:	mov    ecx,0x4000
  40c958:	mov    r12d,r8d
  40c95b:	call   0x411418
  40c960:	test   rbx,rbx
  40c963:	mov    rbp,rax
  40c966:	je     0x40ca30
  40c96c:	cmp    WORD PTR [rbx],0x0
  40c970:	lea    rax,[rip+0xb6c9]        # 0x418040
  40c977:	cmove  rbx,rax
  40c97b:	test   rsi,rsi
  40c97e:	je     0x40ca21
  40c984:	cmp    WORD PTR [rsi],0x0
  40c988:	lea    rax,[rip+0xb6c5]        # 0x418054
  40c98f:	cmove  rsi,rax
  40c993:	lea    rdi,[rsp+0x40]
  40c998:	xor    ecx,ecx
  40c99a:	mov    r8d,0x104
  40c9a0:	mov    rdx,rdi
  40c9a3:	call   QWORD PTR [rip+0x12b1f]        # 0x41f4c8
  40c9a9:	test   eax,eax
  40c9ab:	je     0x40ca10
  40c9ad:	lea    r8,[rip+0xb6a4]        # 0x418058
  40c9b4:	mov    QWORD PTR [rsp+0x30],rsi
  40c9b9:	mov    DWORD PTR [rsp+0x28],r12d
  40c9be:	mov    QWORD PTR [rsp+0x20],rbx
  40c9c3:	mov    r9,rdi
  40c9c6:	mov    edx,0x1fff
  40c9cb:	mov    rcx,rbp
  40c9ce:	call   0x4114b0
  40c9d3:	mov    rax,QWORD PTR [rip+0xbd36]        # 0x418710
  40c9da:	mov    eax,DWORD PTR [rax]
  40c9dc:	test   eax,eax
  40c9de:	je     0x40ca55
  40c9e0:	xor    ecx,ecx
  40c9e2:	mov    r9d,0x12012
  40c9e8:	lea    r8,[rip+0xb701]        # 0x4180f0
  40c9ef:	mov    rdx,rbp
  40c9f2:	call   QWORD PTR [rip+0x12db0]        # 0x41f7a8
  40c9f8:	cmp    eax,0x3
  40c9fb:	je     0x40ca41
  40c9fd:	cmp    eax,0x5
  40ca00:	jne    0x40ca3c
  40ca02:	add    rsp,0x250
  40ca09:	pop    rbx
  40ca0a:	pop    rsi
  40ca0b:	pop    rdi
  40ca0c:	pop    rbp
  40ca0d:	pop    r12
  40ca0f:	ret    
  40ca10:	lea    rdx,[rip+0xb629]        # 0x418040
  40ca17:	mov    rcx,rdi
  40ca1a:	call   0x411378
  40ca1f:	jmp    0x40c9ad
  40ca21:	lea    rsi,[rip+0xb62c]        # 0x418054
  40ca28:	jmp    0x40c993
  40ca2d:	nop    DWORD PTR [rax]
  40ca30:	lea    rbx,[rip+0xb609]        # 0x418040
  40ca37:	jmp    0x40c97b
  40ca3c:	call   0x4114a0
  40ca41:	mov    ecx,0x16
  40ca46:	call   0x4113e8
  40ca4b:	mov    ecx,0x3
  40ca50:	call   0x4114d8
  40ca55:	call   0x411510
  40ca5a:	lea    rdx,[rip+0xb67f]        # 0x4180e0
  40ca61:	lea    rcx,[rax+0x60]
  40ca65:	mov    r8,rbp
  40ca68:	call   0x411450
  40ca6d:	call   0x4114a0
  40ca72:	nop
  40ca73:	nop    DWORD PTR [rax]
  40ca76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca80:	push   rbp
  40ca81:	push   rdi
  40ca82:	push   rsi
  40ca83:	push   rbx
  40ca84:	sub    rsp,0x38
  40ca88:	mov    rdi,rdx
  40ca8b:	mov    DWORD PTR [rsp+0x2c],r8d
  40ca90:	mov    rbp,rcx
  40ca93:	call   0x4113a8
  40ca98:	lea    rcx,[rax+rax*1+0x2]
  40ca9d:	call   0x411418
  40caa2:	mov    rcx,rdi
  40caa5:	mov    rsi,rax
  40caa8:	call   0x4113a8
  40caad:	lea    rcx,[rax+rax*1+0x2]
  40cab2:	call   0x411418
  40cab7:	movzx  r9d,BYTE PTR [rbp+0x0]
  40cabc:	xor    r10d,r10d
  40cabf:	mov    rbx,rax
  40cac2:	mov    r8d,DWORD PTR [rsp+0x2c]
  40cac7:	test   r9b,r9b
  40caca:	je     0x40cae7
  40cacc:	nop    DWORD PTR [rax+0x0]
  40cad0:	mov    WORD PTR [rsi+r10*2],r9w
  40cad5:	add    r10,0x1
  40cad9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  40cadf:	test   r9b,r9b
  40cae2:	jne    0x40cad0
  40cae4:	add    r10,r10
  40cae7:	movzx  r9d,BYTE PTR [rdi]
  40caeb:	xor    edx,edx
  40caed:	mov    WORD PTR [rsi+r10*1],dx
  40caf2:	xor    r10d,r10d
  40caf5:	test   r9b,r9b
  40caf8:	je     0x40cb16
  40cafa:	nop    WORD PTR [rax+rax*1+0x0]
  40cb00:	mov    WORD PTR [rbx+r10*2],r9w
  40cb05:	add    r10,0x1
  40cb09:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40cb0e:	test   r9b,r9b
  40cb11:	jne    0x40cb00
  40cb13:	add    r10,r10
  40cb16:	xor    eax,eax
  40cb18:	mov    rdx,rbx
  40cb1b:	mov    rcx,rsi
  40cb1e:	mov    WORD PTR [rbx+r10*1],ax
  40cb23:	call   0x40c940
  40cb28:	mov    rcx,rsi
  40cb2b:	call   0x411458
  40cb30:	mov    rcx,rbx
  40cb33:	add    rsp,0x38
  40cb37:	pop    rbx
  40cb38:	pop    rsi
  40cb39:	pop    rdi
  40cb3a:	pop    rbp
  40cb3b:	jmp    0x411458
  40cb40:	sub    rsp,0x38
  40cb44:	mov    r9,rdx
  40cb47:	mov    QWORD PTR [rsp+0x20],r8
  40cb4c:	mov    rdx,rcx
  40cb4f:	xor    r8d,r8d
  40cb52:	mov    ecx,0x6000
  40cb57:	call   0x40e3d0
  40cb5c:	add    rsp,0x38
  40cb60:	ret    
  40cb61:	nop
  40cb62:	nop
  40cb63:	nop
  40cb64:	nop
  40cb65:	nop
  40cb66:	nop
  40cb67:	nop
  40cb68:	nop
  40cb69:	nop
  40cb6a:	nop
  40cb6b:	nop
  40cb6c:	nop
  40cb6d:	nop
  40cb6e:	nop
  40cb6f:	nop
  40cb70:	push   rbx
  40cb71:	sub    rsp,0x30
  40cb75:	mov    rbx,rcx
  40cb78:	mov    r9,rdx
  40cb7b:	mov    QWORD PTR [rsp+0x20],r8
  40cb80:	mov    rdx,rcx
  40cb83:	xor    r8d,r8d
  40cb86:	mov    ecx,0x4000
  40cb8b:	call   0x40e3d0
  40cb90:	movsxd rdx,eax
  40cb93:	mov    BYTE PTR [rbx+rdx*1],0x0
  40cb97:	add    rsp,0x30
  40cb9b:	pop    rbx
  40cb9c:	ret    
  40cb9d:	nop
  40cb9e:	nop
  40cb9f:	nop
  40cba0:	sub    rsp,0x58
  40cba4:	mov    rax,QWORD PTR [rdx]
  40cba7:	mov    r11,rdx
  40cbaa:	mov    edx,DWORD PTR [rdx+0x8]
  40cbad:	mov    r10,rdx
  40cbb0:	and    r10w,0x7fff
  40cbb6:	jne    0x40cbd4
  40cbb8:	mov    rdx,rax
  40cbbb:	shr    rdx,0x20
  40cbbf:	or     eax,edx
  40cbc1:	jne    0x40cc40
  40cbc3:	mov    DWORD PTR [rsp+0x44],0x0
  40cbcb:	movzx  eax,WORD PTR [r11+0x8]
  40cbd0:	xor    edx,edx
  40cbd2:	jmp    0x40cbfb
  40cbd4:	cmp    r10w,0x7fff
  40cbda:	je     0x40cc60
  40cbe0:	movzx  eax,WORD PTR [r11+0x8]
  40cbe5:	mov    DWORD PTR [rsp+0x44],0x1
  40cbed:	mov    edx,eax
  40cbef:	and    edx,0x7fff
  40cbf5:	sub    edx,0x403e
  40cbfb:	and    eax,0x8000
  40cc00:	mov    r10,QWORD PTR [rsp+0x80]
  40cc08:	mov    DWORD PTR [r10],eax
  40cc0b:	lea    rax,[rsp+0x48]
  40cc10:	mov    QWORD PTR [rsp+0x30],r9
  40cc15:	mov    DWORD PTR [rsp+0x20],ecx
  40cc19:	lea    r9,[rsp+0x44]
  40cc1e:	lea    rcx,[rip+0x54eb]        # 0x412110
  40cc25:	mov    DWORD PTR [rsp+0x28],r8d
  40cc2a:	mov    QWORD PTR [rsp+0x38],rax
  40cc2f:	mov    r8,r11
  40cc32:	call   0x40f050
  40cc37:	add    rsp,0x58
  40cc3b:	ret    
  40cc3c:	nop    DWORD PTR [rax+0x0]
  40cc40:	test   edx,edx
  40cc42:	js     0x40cbe0
  40cc44:	mov    DWORD PTR [rsp+0x44],0x2
  40cc4c:	movzx  eax,WORD PTR [r11+0x8]
  40cc51:	mov    edx,0xffffbfc3
  40cc56:	jmp    0x40cbfb
  40cc58:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc60:	mov    rdx,rax
  40cc63:	shr    rdx,0x20
  40cc67:	and    edx,0x7fffffff
  40cc6d:	or     edx,eax
  40cc6f:	jne    0x40cc85
  40cc71:	mov    DWORD PTR [rsp+0x44],0x3
  40cc79:	movzx  eax,WORD PTR [r11+0x8]
  40cc7e:	xor    edx,edx
  40cc80:	jmp    0x40cbfb
  40cc85:	mov    DWORD PTR [rsp+0x44],0x4
  40cc8d:	xor    edx,edx
  40cc8f:	xor    eax,eax
  40cc91:	jmp    0x40cc00
  40cc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cca0:	push   rbx
  40cca1:	sub    rsp,0x20
  40cca5:	mov    rbx,rdx
  40cca8:	mov    edx,DWORD PTR [rdx+0x8]
  40ccab:	test   dh,0x40
  40ccae:	jne    0x40ccb8
  40ccb0:	mov    eax,DWORD PTR [rbx+0x24]
  40ccb3:	cmp    DWORD PTR [rbx+0x28],eax
  40ccb6:	jle    0x40ccca
  40ccb8:	and    dh,0x20
  40ccbb:	jne    0x40cce0
  40ccbd:	movsxd rax,DWORD PTR [rbx+0x24]
  40ccc1:	mov    rdx,QWORD PTR [rbx]
  40ccc4:	mov    BYTE PTR [rdx+rax*1],cl
  40ccc7:	mov    eax,DWORD PTR [rbx+0x24]
  40ccca:	add    eax,0x1
  40cccd:	mov    DWORD PTR [rbx+0x24],eax
  40ccd0:	add    rsp,0x20
  40ccd4:	pop    rbx
  40ccd5:	ret    
  40ccd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cce0:	mov    rdx,QWORD PTR [rbx]
  40cce3:	call   0x411468
  40cce8:	mov    eax,DWORD PTR [rbx+0x24]
  40cceb:	add    eax,0x1
  40ccee:	mov    DWORD PTR [rbx+0x24],eax
  40ccf1:	add    rsp,0x20
  40ccf5:	pop    rbx
  40ccf6:	ret    
  40ccf7:	nop    WORD PTR [rax+rax*1+0x0]
  40cd00:	push   r14
  40cd02:	push   r13
  40cd04:	push   r12
  40cd06:	push   rbp
  40cd07:	push   rdi
  40cd08:	push   rsi
  40cd09:	push   rbx
  40cd0a:	sub    rsp,0x40
  40cd0e:	lea    r14,[rsp+0x2c]
  40cd13:	lea    r13,[rsp+0x30]
  40cd18:	mov    ebx,edx
  40cd1a:	mov    rsi,r8
  40cd1d:	xor    edx,edx
  40cd1f:	mov    r12,rcx
  40cd22:	mov    r8,r14
  40cd25:	mov    rcx,r13
  40cd28:	call   0x4111c0
  40cd2d:	mov    ebp,DWORD PTR [rsi+0x10]
  40cd30:	cmp    ebp,ebx
  40cd32:	jge    0x40cdd9
  40cd38:	test   ebp,ebp
  40cd3a:	js     0x40cdd9
  40cd40:	mov    eax,DWORD PTR [rsi+0xc]
  40cd43:	cmp    ebp,eax
  40cd45:	jge    0x40cde6
  40cd4b:	sub    eax,ebp
  40cd4d:	test   eax,eax
  40cd4f:	mov    DWORD PTR [rsi+0xc],eax
  40cd52:	jle    0x40cd60
  40cd54:	test   BYTE PTR [rsi+0x9],0x4
  40cd58:	je     0x40cdf2
  40cd5e:	xchg   ax,ax
  40cd60:	test   ebp,ebp
  40cd62:	jle    0x40cdbd
  40cd64:	add    r12,0x2
  40cd68:	movzx  edx,WORD PTR [r12-0x2]
  40cd6e:	mov    r8,r14
  40cd71:	mov    rcx,r13
  40cd74:	call   0x4111c0
  40cd79:	test   eax,eax
  40cd7b:	jle    0x40cdbd
  40cd7d:	sub    eax,0x1
  40cd80:	mov    rbx,r13
  40cd83:	lea    rdi,[r13+rax*1+0x1]
  40cd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd90:	add    rbx,0x1
  40cd94:	movsx  ecx,BYTE PTR [rbx-0x1]
  40cd98:	mov    rdx,rsi
  40cd9b:	call   0x40cca0
  40cda0:	cmp    rbx,rdi
  40cda3:	jne    0x40cd90
  40cda5:	sub    ebp,0x1
  40cda8:	jmp    0x40cd60
  40cdaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cdb0:	mov    rdx,rsi
  40cdb3:	mov    ecx,0x20
  40cdb8:	call   0x40cca0
  40cdbd:	mov    eax,DWORD PTR [rsi+0xc]
  40cdc0:	lea    edx,[rax-0x1]
  40cdc3:	test   eax,eax
  40cdc5:	mov    DWORD PTR [rsi+0xc],edx
  40cdc8:	jg     0x40cdb0
  40cdca:	add    rsp,0x40
  40cdce:	pop    rbx
  40cdcf:	pop    rsi
  40cdd0:	pop    rdi
  40cdd1:	pop    rbp
  40cdd2:	pop    r12
  40cdd4:	pop    r13
  40cdd6:	pop    r14
  40cdd8:	ret    
  40cdd9:	mov    eax,DWORD PTR [rsi+0xc]
  40cddc:	mov    ebp,ebx
  40cdde:	cmp    ebp,eax
  40cde0:	jl     0x40cd4b
  40cde6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40cded:	jmp    0x40cd60
  40cdf2:	sub    eax,0x1
  40cdf5:	mov    DWORD PTR [rsi+0xc],eax
  40cdf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce00:	mov    rdx,rsi
  40ce03:	mov    ecx,0x20
  40ce08:	call   0x40cca0
  40ce0d:	mov    eax,DWORD PTR [rsi+0xc]
  40ce10:	lea    edx,[rax-0x1]
  40ce13:	test   eax,eax
  40ce15:	mov    DWORD PTR [rsi+0xc],edx
  40ce18:	jne    0x40ce00
  40ce1a:	jmp    0x40cd60
  40ce1f:	nop
  40ce20:	push   rdi
  40ce21:	push   rsi
  40ce22:	push   rbx
  40ce23:	sub    rsp,0x20
  40ce27:	mov    edi,DWORD PTR [r8+0x10]
  40ce2b:	mov    rsi,rcx
  40ce2e:	mov    rbx,r8
  40ce31:	cmp    edi,edx
  40ce33:	jge    0x40ceb0
  40ce35:	test   edi,edi
  40ce37:	js     0x40ceb0
  40ce39:	mov    eax,DWORD PTR [rbx+0xc]
  40ce3c:	cmp    edi,eax
  40ce3e:	jge    0x40ceb9
  40ce40:	sub    eax,edi
  40ce42:	test   eax,eax
  40ce44:	mov    DWORD PTR [rbx+0xc],eax
  40ce47:	jle    0x40cf12
  40ce4d:	test   BYTE PTR [rbx+0x9],0x4
  40ce51:	jne    0x40cee0
  40ce57:	sub    eax,0x1
  40ce5a:	mov    DWORD PTR [rbx+0xc],eax
  40ce5d:	nop    DWORD PTR [rax]
  40ce60:	mov    rdx,rbx
  40ce63:	mov    ecx,0x20
  40ce68:	call   0x40cca0
  40ce6d:	mov    eax,DWORD PTR [rbx+0xc]
  40ce70:	mov    edx,eax
  40ce72:	sub    eax,0x1
  40ce75:	test   edx,edx
  40ce77:	mov    DWORD PTR [rbx+0xc],eax
  40ce7a:	jne    0x40ce60
  40ce7c:	test   edi,edi
  40ce7e:	lea    edx,[rdi-0x1]
  40ce81:	je     0x40cf00
  40ce83:	lea    rdi,[rsi+rdx*1+0x1]
  40ce88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce90:	add    rsi,0x1
  40ce94:	movsx  ecx,BYTE PTR [rsi-0x1]
  40ce98:	mov    rdx,rbx
  40ce9b:	call   0x40cca0
  40cea0:	cmp    rsi,rdi
  40cea3:	jne    0x40ce90
  40cea5:	jmp    0x40cefd
  40cea7:	nop    WORD PTR [rax+rax*1+0x0]
  40ceb0:	mov    eax,DWORD PTR [rbx+0xc]
  40ceb3:	mov    edi,edx
  40ceb5:	cmp    edi,eax
  40ceb7:	jl     0x40ce40
  40ceb9:	test   edi,edi
  40cebb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40cec2:	lea    edx,[rdi-0x1]
  40cec5:	jne    0x40ce83
  40cec7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  40cece:	add    rsp,0x20
  40ced2:	pop    rbx
  40ced3:	pop    rsi
  40ced4:	pop    rdi
  40ced5:	ret    
  40ced6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cee0:	test   edi,edi
  40cee2:	lea    edx,[rdi-0x1]
  40cee5:	jne    0x40ce83
  40cee7:	sub    eax,0x1
  40ceea:	mov    DWORD PTR [rbx+0xc],eax
  40ceed:	nop    DWORD PTR [rax]
  40cef0:	mov    rdx,rbx
  40cef3:	mov    ecx,0x20
  40cef8:	call   0x40cca0
  40cefd:	mov    eax,DWORD PTR [rbx+0xc]
  40cf00:	lea    edx,[rax-0x1]
  40cf03:	test   eax,eax
  40cf05:	mov    DWORD PTR [rbx+0xc],edx
  40cf08:	jg     0x40cef0
  40cf0a:	add    rsp,0x20
  40cf0e:	pop    rbx
  40cf0f:	pop    rsi
  40cf10:	pop    rdi
  40cf11:	ret    
  40cf12:	test   edi,edi
  40cf14:	lea    edx,[rdi-0x1]
  40cf17:	jne    0x40ce83
  40cf1d:	sub    eax,0x1
  40cf20:	mov    DWORD PTR [rbx+0xc],eax
  40cf23:	jmp    0x40cece
  40cf25:	nop
  40cf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf30:	sub    rsp,0x38
  40cf34:	test   ecx,ecx
  40cf36:	mov    DWORD PTR [r8+0x10],0xffffffff
  40cf3e:	je     0x40cf84
  40cf40:	lea    rcx,[rsp+0x20]
  40cf45:	mov    r11d,DWORD PTR [r8+0x8]
  40cf49:	mov    BYTE PTR [rsp+0x20],0x2d
  40cf4e:	lea    r10,[rcx+0x1]
  40cf52:	and    r11d,0x20
  40cf56:	xor    r9d,r9d
  40cf59:	movzx  eax,BYTE PTR [rdx+r9*1]
  40cf5e:	and    eax,0xffffffdf
  40cf61:	or     eax,r11d
  40cf64:	mov    BYTE PTR [r10+r9*1],al
  40cf68:	add    r9,0x1
  40cf6c:	cmp    r9,0x3
  40cf70:	jne    0x40cf59
  40cf72:	lea    rdx,[r10+0x3]
  40cf76:	sub    rdx,rcx
  40cf79:	call   0x40ce20
  40cf7e:	nop
  40cf7f:	add    rsp,0x38
  40cf83:	ret    
  40cf84:	mov    r11d,DWORD PTR [r8+0x8]
  40cf88:	test   r11d,0x100
  40cf8f:	je     0x40cfa1
  40cf91:	lea    rcx,[rsp+0x20]
  40cf96:	mov    BYTE PTR [rsp+0x20],0x2b
  40cf9b:	lea    r10,[rcx+0x1]
  40cf9f:	jmp    0x40cf52
  40cfa1:	test   r11b,0x40
  40cfa5:	je     0x40cfc0
  40cfa7:	lea    rcx,[rsp+0x20]
  40cfac:	mov    BYTE PTR [rsp+0x20],0x20
  40cfb1:	lea    r10,[rcx+0x1]
  40cfb5:	jmp    0x40cf52
  40cfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40cfc0:	lea    rcx,[rsp+0x20]
  40cfc5:	mov    r10,rcx
  40cfc8:	jmp    0x40cf52
  40cfca:	nop    WORD PTR [rax+rax*1+0x0]
  40cfd0:	push   rbp
  40cfd1:	push   r12
  40cfd3:	push   rdi
  40cfd4:	push   rsi
  40cfd5:	push   rbx
  40cfd6:	mov    rbp,rsp
  40cfd9:	sub    rsp,0x30
  40cfdd:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  40cfe1:	mov    rsi,rcx
  40cfe4:	je     0x40d080
  40cfea:	movzx  edx,WORD PTR [rcx+0x18]
  40cfee:	test   dx,dx
  40cff1:	je     0x40d052
  40cff3:	movsxd rax,DWORD PTR [rsi+0x14]
  40cff7:	mov    r12,rsp
  40cffa:	add    rax,0xf
  40cffe:	and    rax,0xfffffffffffffff0
  40d002:	call   0x40c550
  40d007:	sub    rsp,rax
  40d00a:	lea    r8,[rbp-0x4]
  40d00e:	mov    DWORD PTR [rbp-0x4],0x0
  40d015:	lea    rbx,[rsp+0x20]
  40d01a:	mov    rcx,rbx
  40d01d:	call   0x4111c0
  40d022:	test   eax,eax
  40d024:	jle    0x40d070
  40d026:	sub    eax,0x1
  40d029:	lea    rdi,[rbx+rax*1+0x1]
  40d02e:	xchg   ax,ax
  40d030:	add    rbx,0x1
  40d034:	movsx  ecx,BYTE PTR [rbx-0x1]
  40d038:	mov    rdx,rsi
  40d03b:	call   0x40cca0
  40d040:	cmp    rbx,rdi
  40d043:	jne    0x40d030
  40d045:	mov    rsp,r12
  40d048:	mov    rsp,rbp
  40d04b:	pop    rbx
  40d04c:	pop    rsi
  40d04d:	pop    rdi
  40d04e:	pop    r12
  40d050:	pop    rbp
  40d051:	ret    
  40d052:	mov    rdx,rsi
  40d055:	mov    ecx,0x2e
  40d05a:	call   0x40cca0
  40d05f:	nop
  40d060:	mov    rsp,rbp
  40d063:	pop    rbx
  40d064:	pop    rsi
  40d065:	pop    rdi
  40d066:	pop    r12
  40d068:	pop    rbp
  40d069:	ret    
  40d06a:	nop    WORD PTR [rax+rax*1+0x0]
  40d070:	mov    rdx,rsi
  40d073:	mov    ecx,0x2e
  40d078:	call   0x40cca0
  40d07d:	jmp    0x40d045
  40d07f:	nop
  40d080:	mov    DWORD PTR [rbp-0x4],0x0
  40d087:	call   0x411420
  40d08c:	mov    rdx,QWORD PTR [rax]
  40d08f:	lea    rcx,[rbp-0x6]
  40d093:	lea    r9,[rbp-0x4]
  40d097:	mov    r8d,0x10
  40d09d:	call   0x40c700
  40d0a2:	test   eax,eax
  40d0a4:	jle    0x40d0b6
  40d0a6:	movzx  edx,WORD PTR [rbp-0x6]
  40d0aa:	mov    WORD PTR [rsi+0x18],dx
  40d0ae:	mov    DWORD PTR [rsi+0x14],eax
  40d0b1:	jmp    0x40cfee
  40d0b6:	movzx  edx,WORD PTR [rsi+0x18]
  40d0ba:	jmp    0x40d0ae
  40d0bc:	nop    DWORD PTR [rax+0x0]
  40d0c0:	push   r12
  40d0c2:	push   rbp
  40d0c3:	push   rdi
  40d0c4:	push   rsi
  40d0c5:	push   rbx
  40d0c6:	sub    rsp,0x20
  40d0ca:	mov    esi,r8d
  40d0cd:	mov    ebp,ecx
  40d0cf:	mov    rdi,rdx
  40d0d2:	test   esi,esi
  40d0d4:	mov    rbx,r9
  40d0d7:	mov    r8d,DWORD PTR [r9+0xc]
  40d0db:	jle    0x40d2b2
  40d0e1:	cmp    esi,r8d
  40d0e4:	jg     0x40d220
  40d0ea:	sub    r8d,esi
  40d0ed:	mov    DWORD PTR [r9+0xc],r8d
  40d0f1:	test   r8d,r8d
  40d0f4:	js     0x40d220
  40d0fa:	mov    eax,DWORD PTR [rbx+0x10]
  40d0fd:	cmp    eax,r8d
  40d100:	jge    0x40d220
  40d106:	sub    r8d,eax
  40d109:	test   r8d,r8d
  40d10c:	mov    DWORD PTR [rbx+0xc],r8d
  40d110:	jle    0x40d22d
  40d116:	test   eax,eax
  40d118:	jle    0x40d365
  40d11e:	sub    r8d,0x1
  40d122:	test   esi,esi
  40d124:	mov    DWORD PTR [rbx+0xc],r8d
  40d128:	jle    0x40d134
  40d12a:	test   BYTE PTR [rbx+0x9],0x10
  40d12e:	jne    0x40d23f
  40d134:	test   r8d,r8d
  40d137:	jle    0x40d17d
  40d139:	test   ebp,ebp
  40d13b:	jne    0x40d14b
  40d13d:	mov    eax,DWORD PTR [rbx+0x8]
  40d140:	test   eax,0x1c0
  40d145:	je     0x40d345
  40d14b:	sub    r8d,0x1
  40d14f:	test   r8d,r8d
  40d152:	mov    DWORD PTR [rbx+0xc],r8d
  40d156:	jle    0x40d17d
  40d158:	test   DWORD PTR [rbx+0x8],0x600
  40d15f:	jne    0x40d17d
  40d161:	jmp    0x40d170
  40d163:	mov    rdx,rbx
  40d166:	mov    ecx,0x20
  40d16b:	call   0x40cca0
  40d170:	mov    eax,DWORD PTR [rbx+0xc]
  40d173:	lea    edx,[rax-0x1]
  40d176:	test   eax,eax
  40d178:	mov    DWORD PTR [rbx+0xc],edx
  40d17b:	jg     0x40d163
  40d17d:	test   ebp,ebp
  40d17f:	jne    0x40d2a0
  40d185:	mov    eax,DWORD PTR [rbx+0x8]
  40d188:	test   ah,0x1
  40d18b:	jne    0x40d2d0
  40d191:	test   al,0x40
  40d193:	jne    0x40d353
  40d199:	mov    edx,DWORD PTR [rbx+0xc]
  40d19c:	test   edx,edx
  40d19e:	jle    0x40d1b3
  40d1a0:	mov    eax,DWORD PTR [rbx+0x8]
  40d1a3:	and    eax,0x600
  40d1a8:	cmp    eax,0x200
  40d1ad:	je     0x40d2e2
  40d1b3:	test   esi,esi
  40d1b5:	jle    0x40d312
  40d1bb:	lea    r12,[rbx+0x20]
  40d1bf:	mov    ebp,0x55555556
  40d1c4:	movzx  eax,BYTE PTR [rdi]
  40d1c7:	mov    ecx,0x30
  40d1cc:	test   al,al
  40d1ce:	je     0x40d1d7
  40d1d0:	add    rdi,0x1
  40d1d4:	movsx  ecx,al
  40d1d7:	mov    rdx,rbx
  40d1da:	call   0x40cca0
  40d1df:	sub    esi,0x1
  40d1e2:	je     0x40d400
  40d1e8:	test   BYTE PTR [rbx+0x9],0x10
  40d1ec:	je     0x40d1c4
  40d1ee:	cmp    WORD PTR [rbx+0x20],0x0
  40d1f3:	je     0x40d1c4
  40d1f5:	mov    eax,esi
  40d1f7:	imul   ebp
  40d1f9:	mov    eax,esi
  40d1fb:	sar    eax,0x1f
  40d1fe:	sub    edx,eax
  40d200:	lea    eax,[rdx+rdx*2]
  40d203:	cmp    esi,eax
  40d205:	jne    0x40d1c4
  40d207:	mov    r8,rbx
  40d20a:	mov    edx,0x1
  40d20f:	mov    rcx,r12
  40d212:	call   0x40cd00
  40d217:	jmp    0x40d1c4
  40d219:	nop    DWORD PTR [rax+0x0]
  40d220:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40d227:	mov    r8d,0xffffffff
  40d22d:	test   esi,esi
  40d22f:	jle    0x40d17d
  40d235:	test   BYTE PTR [rbx+0x9],0x10
  40d239:	je     0x40d17d
  40d23f:	cmp    WORD PTR [rbx+0x20],0x0
  40d244:	je     0x40d134
  40d24a:	lea    ecx,[rsi+0x2]
  40d24d:	mov    edx,0x55555556
  40d252:	mov    eax,ecx
  40d254:	sar    ecx,0x1f
  40d257:	imul   edx
  40d259:	sub    edx,ecx
  40d25b:	cmp    edx,0x1
  40d25e:	jle    0x40d134
  40d264:	test   r8d,r8d
  40d267:	jle    0x40d17d
  40d26d:	mov    eax,r8d
  40d270:	sub    eax,edx
  40d272:	add    eax,0x1
  40d275:	jmp    0x40d289
  40d277:	nop    WORD PTR [rax+rax*1+0x0]
  40d280:	test   r8d,r8d
  40d283:	je     0x40d3f4
  40d289:	sub    r8d,0x1
  40d28d:	cmp    r8d,eax
  40d290:	jne    0x40d280
  40d292:	mov    DWORD PTR [rbx+0xc],r8d
  40d296:	jmp    0x40d134
  40d29b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2a0:	mov    rdx,rbx
  40d2a3:	mov    ecx,0x2d
  40d2a8:	call   0x40cca0
  40d2ad:	jmp    0x40d199
  40d2b2:	test   r8d,r8d
  40d2b5:	jle    0x40d0f1
  40d2bb:	sub    r8d,0x1
  40d2bf:	mov    DWORD PTR [r9+0xc],r8d
  40d2c3:	jmp    0x40d0fa
  40d2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2d0:	mov    rdx,rbx
  40d2d3:	mov    ecx,0x2b
  40d2d8:	call   0x40cca0
  40d2dd:	jmp    0x40d199
  40d2e2:	sub    edx,0x1
  40d2e5:	mov    DWORD PTR [rbx+0xc],edx
  40d2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2f0:	mov    rdx,rbx
  40d2f3:	mov    ecx,0x30
  40d2f8:	call   0x40cca0
  40d2fd:	mov    eax,DWORD PTR [rbx+0xc]
  40d300:	lea    edx,[rax-0x1]
  40d303:	test   eax,eax
  40d305:	mov    DWORD PTR [rbx+0xc],edx
  40d308:	jg     0x40d2f0
  40d30a:	test   esi,esi
  40d30c:	jg     0x40d1bb
  40d312:	mov    rdx,rbx
  40d315:	mov    ecx,0x30
  40d31a:	call   0x40cca0
  40d31f:	mov    eax,DWORD PTR [rbx+0x10]
  40d322:	test   eax,eax
  40d324:	jg     0x40d392
  40d326:	test   BYTE PTR [rbx+0x9],0x8
  40d32a:	jne    0x40d392
  40d32c:	test   esi,esi
  40d32e:	jne    0x40d3d6
  40d334:	sub    eax,0x1
  40d337:	mov    DWORD PTR [rbx+0x10],eax
  40d33a:	add    rsp,0x20
  40d33e:	pop    rbx
  40d33f:	pop    rsi
  40d340:	pop    rdi
  40d341:	pop    rbp
  40d342:	pop    r12
  40d344:	ret    
  40d345:	test   ah,0x6
  40d348:	je     0x40d170
  40d34e:	jmp    0x40d188
  40d353:	mov    rdx,rbx
  40d356:	mov    ecx,0x20
  40d35b:	call   0x40cca0
  40d360:	jmp    0x40d199
  40d365:	mov    eax,DWORD PTR [rbx+0x8]
  40d368:	test   ah,0x8
  40d36b:	jne    0x40d11e
  40d371:	test   esi,esi
  40d373:	jle    0x40d139
  40d379:	test   ah,0x10
  40d37c:	je     0x40d139
  40d382:	cmp    WORD PTR [rbx+0x20],0x0
  40d387:	jne    0x40d24a
  40d38d:	jmp    0x40d139
  40d392:	mov    rcx,rbx
  40d395:	call   0x40cfd0
  40d39a:	test   esi,esi
  40d39c:	je     0x40d3bb
  40d39e:	jmp    0x40d3d3
  40d3a0:	movzx  eax,BYTE PTR [rdi]
  40d3a3:	mov    ecx,0x30
  40d3a8:	test   al,al
  40d3aa:	je     0x40d3b3
  40d3ac:	add    rdi,0x1
  40d3b0:	movsx  ecx,al
  40d3b3:	mov    rdx,rbx
  40d3b6:	call   0x40cca0
  40d3bb:	mov    eax,DWORD PTR [rbx+0x10]
  40d3be:	lea    edx,[rax-0x1]
  40d3c1:	test   eax,eax
  40d3c3:	mov    DWORD PTR [rbx+0x10],edx
  40d3c6:	jg     0x40d3a0
  40d3c8:	add    rsp,0x20
  40d3cc:	pop    rbx
  40d3cd:	pop    rsi
  40d3ce:	pop    rdi
  40d3cf:	pop    rbp
  40d3d0:	pop    r12
  40d3d2:	ret    
  40d3d3:	mov    eax,DWORD PTR [rbx+0x10]
  40d3d6:	add    eax,esi
  40d3d8:	mov    DWORD PTR [rbx+0x10],eax
  40d3db:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3e0:	mov    rdx,rbx
  40d3e3:	mov    ecx,0x30
  40d3e8:	call   0x40cca0
  40d3ed:	add    esi,0x1
  40d3f0:	jne    0x40d3e0
  40d3f2:	jmp    0x40d3bb
  40d3f4:	mov    DWORD PTR [rbx+0xc],0x0
  40d3fb:	jmp    0x40d17d
  40d400:	mov    eax,DWORD PTR [rbx+0x10]
  40d403:	test   eax,eax
  40d405:	jle    0x40d411
  40d407:	mov    rcx,rbx
  40d40a:	call   0x40cfd0
  40d40f:	jmp    0x40d3bb
  40d411:	test   BYTE PTR [rbx+0x9],0x8
  40d415:	jne    0x40d407
  40d417:	jmp    0x40d334
  40d41c:	nop    DWORD PTR [rax+0x0]
  40d420:	push   rsi
  40d421:	push   rbx
  40d422:	sub    rsp,0x68
  40d426:	mov    r8d,DWORD PTR [rdx+0x10]
  40d42a:	fld    TBYTE PTR [rcx]
  40d42c:	mov    rbx,rdx
  40d42f:	test   r8d,r8d
  40d432:	js     0x40d4d0
  40d438:	lea    rdx,[rsp+0x30]
  40d43d:	lea    r9,[rsp+0x4c]
  40d442:	mov    ecx,0x3
  40d447:	fstp   TBYTE PTR [rsp+0x50]
  40d44b:	mov    rax,QWORD PTR [rsp+0x50]
  40d450:	mov    QWORD PTR [rsp+0x30],rax
  40d455:	mov    rax,QWORD PTR [rsp+0x58]
  40d45a:	mov    QWORD PTR [rsp+0x38],rax
  40d45f:	lea    rax,[rsp+0x48]
  40d464:	mov    QWORD PTR [rsp+0x20],rax
  40d469:	call   0x40cba0
  40d46e:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d473:	mov    rsi,rax
  40d476:	cmp    r8d,0xffff8000
  40d47d:	je     0x40d4e2
  40d47f:	mov    ecx,DWORD PTR [rsp+0x48]
  40d483:	mov    rdx,rax
  40d486:	mov    r9,rbx
  40d489:	call   0x40d0c0
  40d48e:	mov    eax,DWORD PTR [rbx+0xc]
  40d491:	lea    edx,[rax-0x1]
  40d494:	test   eax,eax
  40d496:	mov    DWORD PTR [rbx+0xc],edx
  40d499:	jle    0x40d4be
  40d49b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4a0:	mov    rdx,rbx
  40d4a3:	mov    ecx,0x20
  40d4a8:	call   0x40cca0
  40d4ad:	mov    r8d,DWORD PTR [rbx+0xc]
  40d4b1:	lea    r9d,[r8-0x1]
  40d4b5:	test   r8d,r8d
  40d4b8:	mov    DWORD PTR [rbx+0xc],r9d
  40d4bc:	jg     0x40d4a0
  40d4be:	mov    rcx,rsi
  40d4c1:	call   0x40eeb0
  40d4c6:	nop
  40d4c7:	add    rsp,0x68
  40d4cb:	pop    rbx
  40d4cc:	pop    rsi
  40d4cd:	ret    
  40d4ce:	xchg   ax,ax
  40d4d0:	mov    DWORD PTR [rdx+0x10],0x6
  40d4d7:	mov    r8d,0x6
  40d4dd:	jmp    0x40d438
  40d4e2:	mov    ecx,DWORD PTR [rsp+0x48]
  40d4e6:	mov    r8,rbx
  40d4e9:	mov    rdx,rax
  40d4ec:	call   0x40cf30
  40d4f1:	mov    rcx,rsi
  40d4f4:	call   0x40eeb0
  40d4f9:	nop
  40d4fa:	add    rsp,0x68
  40d4fe:	pop    rbx
  40d4ff:	pop    rsi
  40d500:	ret    
  40d501:	nop    DWORD PTR [rax+rax*1+0x0]
  40d506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d510:	push   rbp
  40d511:	push   r13
  40d513:	push   r12
  40d515:	push   rdi
  40d516:	push   rsi
  40d517:	push   rbx
  40d518:	sub    rsp,0x28
  40d51c:	lea    rbp,[rsp+0x80]
  40d524:	mov    ebx,DWORD PTR [rdx+0x10]
  40d527:	mov    r11d,DWORD PTR [rdx+0x8]
  40d52b:	mov    r8d,0x0
  40d531:	mov    rsi,rdx
  40d534:	test   ebx,ebx
  40d536:	cmovns r8d,ebx
  40d53a:	add    r8d,0x17
  40d53e:	test   r11d,0x1000
  40d545:	je     0x40d552
  40d547:	cmp    WORD PTR [rdx+0x20],0x0
  40d54c:	jne    0x40d742
  40d552:	movsxd r13,DWORD PTR [rsi+0xc]
  40d556:	movsxd rax,r8d
  40d559:	cmp    r8d,r13d
  40d55c:	cmovl  rax,r13
  40d560:	add    rax,0x1e
  40d564:	and    rax,0xfffffffffffffff0
  40d568:	call   0x40c550
  40d56d:	sub    rsp,rax
  40d570:	test   r11b,0x80
  40d574:	lea    r12,[rsp+0x20]
  40d579:	je     0x40d58c
  40d57b:	test   rcx,rcx
  40d57e:	js     0x40d7d0
  40d584:	and    r11b,0x7f
  40d588:	mov    DWORD PTR [rsi+0x8],r11d
  40d58c:	test   rcx,rcx
  40d58f:	je     0x40d7d8
  40d595:	mov    r10d,r11d
  40d598:	mov    r8,r12
  40d59b:	movabs r9,0xcccccccccccccccd
  40d5a5:	and    r10d,0x1000
  40d5ac:	jmp    0x40d5e3
  40d5ae:	xchg   ax,ax
  40d5b0:	cmp    r12,rdi
  40d5b3:	je     0x40d5e0
  40d5b5:	test   r10d,r10d
  40d5b8:	je     0x40d5e0
  40d5ba:	cmp    WORD PTR [rsi+0x20],0x0
  40d5bf:	je     0x40d5e0
  40d5c1:	mov    rax,rdi
  40d5c4:	sub    rax,r12
  40d5c7:	cqo    
  40d5c9:	shr    rdx,0x3e
  40d5cd:	add    rax,rdx
  40d5d0:	and    eax,0x3
  40d5d3:	sub    rax,rdx
  40d5d6:	cmp    rax,0x3
  40d5da:	je     0x40d720
  40d5e0:	mov    r8,rdi
  40d5e3:	mov    rax,rcx
  40d5e6:	lea    rdi,[r8+0x1]
  40d5ea:	mul    r9
  40d5ed:	shr    rdx,0x3
  40d5f1:	lea    rax,[rdx+rdx*4]
  40d5f5:	add    rax,rax
  40d5f8:	sub    rcx,rax
  40d5fb:	add    ecx,0x30
  40d5fe:	test   rdx,rdx
  40d601:	mov    BYTE PTR [r8],cl
  40d604:	mov    rcx,rdx
  40d607:	jne    0x40d5b0
  40d609:	test   ebx,ebx
  40d60b:	jle    0x40d645
  40d60d:	mov    rax,r12
  40d610:	sub    rax,rdi
  40d613:	add    eax,ebx
  40d615:	test   eax,eax
  40d617:	jle    0x40d645
  40d619:	sub    eax,0x1
  40d61c:	mov    rdx,rax
  40d61f:	lea    rcx,[rdi+rax*1+0x1]
  40d624:	mov    rax,rdi
  40d627:	nop    WORD PTR [rax+rax*1+0x0]
  40d630:	add    rax,0x1
  40d634:	mov    BYTE PTR [rax-0x1],0x30
  40d638:	cmp    rax,rcx
  40d63b:	jne    0x40d630
  40d63d:	movsxd rax,edx
  40d640:	lea    rdi,[rdi+rax*1+0x1]
  40d645:	cmp    r12,rdi
  40d648:	jne    0x40d655
  40d64a:	test   ebx,ebx
  40d64c:	je     0x40d655
  40d64e:	mov    BYTE PTR [rdi],0x30
  40d651:	add    rdi,0x1
  40d655:	test   r13d,r13d
  40d658:	jle    0x40d6be
  40d65a:	mov    rax,r12
  40d65d:	sub    rax,rdi
  40d660:	add    r13d,eax
  40d663:	test   r13d,r13d
  40d666:	mov    DWORD PTR [rsi+0xc],r13d
  40d66a:	jle    0x40d6be
  40d66c:	test   r11d,0x1c0
  40d673:	je     0x40d67d
  40d675:	sub    r13d,0x1
  40d679:	mov    DWORD PTR [rsi+0xc],r13d
  40d67d:	test   ebx,ebx
  40d67f:	js     0x40d780
  40d685:	test   r11d,0x400
  40d68c:	jne    0x40d6be
  40d68e:	mov    eax,DWORD PTR [rsi+0xc]
  40d691:	lea    edx,[rax-0x1]
  40d694:	test   eax,eax
  40d696:	mov    DWORD PTR [rsi+0xc],edx
  40d699:	jle    0x40d6be
  40d69b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6a0:	mov    rdx,rsi
  40d6a3:	mov    ecx,0x20
  40d6a8:	call   0x40cca0
  40d6ad:	mov    eax,DWORD PTR [rsi+0xc]
  40d6b0:	lea    edx,[rax-0x1]
  40d6b3:	test   eax,eax
  40d6b5:	mov    DWORD PTR [rsi+0xc],edx
  40d6b8:	jg     0x40d6a0
  40d6ba:	mov    r11d,DWORD PTR [rsi+0x8]
  40d6be:	test   r11b,0x80
  40d6c2:	je     0x40d730
  40d6c4:	lea    rbx,[rdi+0x1]
  40d6c8:	mov    BYTE PTR [rdi],0x2d
  40d6cb:	cmp    r12,rbx
  40d6ce:	jae    0x40d6fe
  40d6d0:	sub    rbx,0x1
  40d6d4:	movsx  ecx,BYTE PTR [rbx]
  40d6d7:	mov    rdx,rsi
  40d6da:	call   0x40cca0
  40d6df:	cmp    rbx,r12
  40d6e2:	jne    0x40d6d0
  40d6e4:	mov    eax,DWORD PTR [rsi+0xc]
  40d6e7:	lea    edx,[rax-0x1]
  40d6ea:	test   eax,eax
  40d6ec:	mov    DWORD PTR [rsi+0xc],edx
  40d6ef:	jle    0x40d70b
  40d6f1:	mov    rdx,rsi
  40d6f4:	mov    ecx,0x20
  40d6f9:	call   0x40cca0
  40d6fe:	mov    eax,DWORD PTR [rsi+0xc]
  40d701:	lea    edx,[rax-0x1]
  40d704:	test   eax,eax
  40d706:	mov    DWORD PTR [rsi+0xc],edx
  40d709:	jg     0x40d6f1
  40d70b:	lea    rsp,[rbp-0x58]
  40d70f:	pop    rbx
  40d710:	pop    rsi
  40d711:	pop    rdi
  40d712:	pop    r12
  40d714:	pop    r13
  40d716:	pop    rbp
  40d717:	ret    
  40d718:	nop    DWORD PTR [rax+rax*1+0x0]
  40d720:	lea    rdi,[r8+0x2]
  40d724:	mov    BYTE PTR [r8+0x1],0x2c
  40d729:	jmp    0x40d5e0
  40d72e:	xchg   ax,ax
  40d730:	test   r11d,0x100
  40d737:	je     0x40d760
  40d739:	lea    rbx,[rdi+0x1]
  40d73d:	mov    BYTE PTR [rdi],0x2b
  40d740:	jmp    0x40d6cb
  40d742:	mov    eax,r8d
  40d745:	mov    edx,0x55555556
  40d74a:	imul   edx
  40d74c:	mov    eax,r8d
  40d74f:	sar    eax,0x1f
  40d752:	sub    edx,eax
  40d754:	add    r8d,edx
  40d757:	jmp    0x40d552
  40d75c:	nop    DWORD PTR [rax+0x0]
  40d760:	and    r11d,0x40
  40d764:	mov    rbx,rdi
  40d767:	je     0x40d6cb
  40d76d:	add    rbx,0x1
  40d771:	mov    BYTE PTR [rdi],0x20
  40d774:	jmp    0x40d6cb
  40d779:	nop    DWORD PTR [rax+0x0]
  40d780:	mov    eax,r11d
  40d783:	and    eax,0x600
  40d788:	cmp    eax,0x200
  40d78d:	jne    0x40d685
  40d793:	mov    eax,DWORD PTR [rsi+0xc]
  40d796:	lea    ecx,[rax-0x1]
  40d799:	test   eax,eax
  40d79b:	mov    DWORD PTR [rsi+0xc],ecx
  40d79e:	jle    0x40d6be
  40d7a4:	lea    rdx,[rdi+rcx*1+0x1]
  40d7a9:	mov    rax,rdi
  40d7ac:	nop    DWORD PTR [rax+0x0]
  40d7b0:	add    rax,0x1
  40d7b4:	mov    BYTE PTR [rax-0x1],0x30
  40d7b8:	cmp    rax,rdx
  40d7bb:	jne    0x40d7b0
  40d7bd:	lea    rdi,[rdi+rcx*1+0x1]
  40d7c2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d7c9:	jmp    0x40d6be
  40d7ce:	xchg   ax,ax
  40d7d0:	neg    rcx
  40d7d3:	jmp    0x40d58c
  40d7d8:	mov    rdi,r12
  40d7db:	jmp    0x40d609
  40d7e0:	push   rdi
  40d7e1:	push   rsi
  40d7e2:	push   rbx
  40d7e3:	sub    rsp,0x20
  40d7e7:	mov    rsi,r9
  40d7ea:	lea    r9d,[r8-0x1]
  40d7ee:	mov    r8d,0x66666667
  40d7f4:	mov    r10,rdx
  40d7f7:	mov    eax,r9d
  40d7fa:	movsxd rbx,r9d
  40d7fd:	sar    r9d,0x1f
  40d801:	imul   r8d
  40d804:	sar    edx,0x2
  40d807:	mov    r8d,edx
  40d80a:	sub    r8d,r9d
  40d80d:	mov    r9d,0x1
  40d813:	je     0x40d83b
  40d815:	mov    r11d,0x66666667
  40d81b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d820:	mov    eax,r8d
  40d823:	sar    r8d,0x1f
  40d827:	add    r9d,0x1
  40d82b:	imul   r11d
  40d82e:	mov    eax,edx
  40d830:	sar    eax,0x2
  40d833:	sub    eax,r8d
  40d836:	mov    r8d,eax
  40d839:	jne    0x40d820
  40d83b:	mov    edi,DWORD PTR [rsi+0x2c]
  40d83e:	mov    eax,DWORD PTR [rsi+0xc]
  40d841:	cmp    r9d,edi
  40d844:	cmovge edi,r9d
  40d848:	lea    edx,[rdi+0x2]
  40d84b:	cmp    eax,edx
  40d84d:	jg     0x40d8a2
  40d84f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d856:	mov    r9,rsi
  40d859:	mov    rdx,r10
  40d85c:	mov    r8d,0x1
  40d862:	call   0x40d0c0
  40d867:	mov    ecx,DWORD PTR [rsi+0x8]
  40d86a:	mov    eax,DWORD PTR [rsi+0x2c]
  40d86d:	mov    rdx,rsi
  40d870:	mov    DWORD PTR [rsi+0x10],eax
  40d873:	mov    eax,ecx
  40d875:	and    ecx,0x20
  40d878:	or     eax,0x1c0
  40d87d:	or     ecx,0x45
  40d880:	mov    DWORD PTR [rsi+0x8],eax
  40d883:	call   0x40cca0
  40d888:	lea    r9d,[rdi+0x1]
  40d88c:	add    DWORD PTR [rsi+0xc],r9d
  40d890:	mov    rdx,rsi
  40d893:	mov    rcx,rbx
  40d896:	add    rsp,0x20
  40d89a:	pop    rbx
  40d89b:	pop    rsi
  40d89c:	pop    rdi
  40d89d:	jmp    0x40d510
  40d8a2:	sub    eax,edx
  40d8a4:	mov    DWORD PTR [rsi+0xc],eax
  40d8a7:	jmp    0x40d856
  40d8a9:	nop    DWORD PTR [rax+0x0]
  40d8b0:	push   rsi
  40d8b1:	push   rbx
  40d8b2:	sub    rsp,0x68
  40d8b6:	mov    eax,DWORD PTR [rdx+0x10]
  40d8b9:	fld    TBYTE PTR [rcx]
  40d8bb:	mov    rbx,rdx
  40d8be:	test   eax,eax
  40d8c0:	lea    r8d,[rax+0x1]
  40d8c4:	js     0x40d930
  40d8c6:	lea    rdx,[rsp+0x30]
  40d8cb:	lea    r9,[rsp+0x4c]
  40d8d0:	mov    ecx,0x2
  40d8d5:	fstp   TBYTE PTR [rsp+0x50]
  40d8d9:	mov    rax,QWORD PTR [rsp+0x50]
  40d8de:	mov    QWORD PTR [rsp+0x30],rax
  40d8e3:	mov    rax,QWORD PTR [rsp+0x58]
  40d8e8:	mov    QWORD PTR [rsp+0x38],rax
  40d8ed:	lea    rax,[rsp+0x48]
  40d8f2:	mov    QWORD PTR [rsp+0x20],rax
  40d8f7:	call   0x40cba0
  40d8fc:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d901:	mov    rsi,rax
  40d904:	cmp    r8d,0xffff8000
  40d90b:	je     0x40d940
  40d90d:	mov    ecx,DWORD PTR [rsp+0x48]
  40d911:	mov    r9,rbx
  40d914:	mov    rdx,rax
  40d917:	call   0x40d7e0
  40d91c:	mov    rcx,rsi
  40d91f:	call   0x40eeb0
  40d924:	nop
  40d925:	add    rsp,0x68
  40d929:	pop    rbx
  40d92a:	pop    rsi
  40d92b:	ret    
  40d92c:	nop    DWORD PTR [rax+0x0]
  40d930:	mov    DWORD PTR [rdx+0x10],0x6
  40d937:	mov    r8d,0x7
  40d93d:	jmp    0x40d8c6
  40d93f:	nop
  40d940:	mov    ecx,DWORD PTR [rsp+0x48]
  40d944:	mov    r8,rbx
  40d947:	mov    rdx,rax
  40d94a:	call   0x40cf30
  40d94f:	mov    rcx,rsi
  40d952:	call   0x40eeb0
  40d957:	nop
  40d958:	add    rsp,0x68
  40d95c:	pop    rbx
  40d95d:	pop    rsi
  40d95e:	ret    
  40d95f:	nop
  40d960:	push   rsi
  40d961:	push   rbx
  40d962:	sub    rsp,0x78
  40d966:	mov    r8d,DWORD PTR [rdx+0x10]
  40d96a:	fld    TBYTE PTR [rcx]
  40d96c:	mov    rbx,rdx
  40d96f:	test   r8d,r8d
  40d972:	js     0x40dab0
  40d978:	je     0x40da90
  40d97e:	lea    rdx,[rsp+0x40]
  40d983:	lea    r9,[rsp+0x5c]
  40d988:	mov    ecx,0x2
  40d98d:	fstp   TBYTE PTR [rsp+0x60]
  40d991:	mov    rax,QWORD PTR [rsp+0x60]
  40d996:	mov    QWORD PTR [rsp+0x40],rax
  40d99b:	mov    rax,QWORD PTR [rsp+0x68]
  40d9a0:	mov    QWORD PTR [rsp+0x48],rax
  40d9a5:	lea    rax,[rsp+0x58]
  40d9aa:	mov    QWORD PTR [rsp+0x20],rax
  40d9af:	call   0x40cba0
  40d9b4:	mov    r8d,DWORD PTR [rsp+0x5c]
  40d9b9:	mov    rsi,rax
  40d9bc:	cmp    r8d,0xffff8000
  40d9c3:	je     0x40dad0
  40d9c9:	cmp    r8d,0xfffffffd
  40d9cd:	jl     0x40da50
  40d9d3:	mov    eax,DWORD PTR [rbx+0x10]
  40d9d6:	cmp    r8d,eax
  40d9d9:	jg     0x40da50
  40d9db:	test   BYTE PTR [rbx+0x9],0x8
  40d9df:	jne    0x40dac2
  40d9e5:	mov    rcx,rsi
  40d9e8:	mov    DWORD PTR [rsp+0x3c],r8d
  40d9ed:	call   0x4113a8
  40d9f2:	mov    r8d,DWORD PTR [rsp+0x3c]
  40d9f7:	sub    eax,r8d
  40d9fa:	test   eax,eax
  40d9fc:	mov    DWORD PTR [rbx+0x10],eax
  40d9ff:	js     0x40dae1
  40da05:	mov    ecx,DWORD PTR [rsp+0x58]
  40da09:	mov    rdx,rsi
  40da0c:	mov    r9,rbx
  40da0f:	call   0x40d0c0
  40da14:	mov    eax,DWORD PTR [rbx+0xc]
  40da17:	lea    edx,[rax-0x1]
  40da1a:	test   eax,eax
  40da1c:	mov    DWORD PTR [rbx+0xc],edx
  40da1f:	jle    0x40da7d
  40da21:	mov    rdx,rbx
  40da24:	mov    ecx,0x20
  40da29:	call   0x40cca0
  40da2e:	mov    r8d,DWORD PTR [rbx+0xc]
  40da32:	lea    r9d,[r8-0x1]
  40da36:	test   r8d,r8d
  40da39:	mov    DWORD PTR [rbx+0xc],r9d
  40da3d:	jg     0x40da21
  40da3f:	mov    rcx,rsi
  40da42:	call   0x40eeb0
  40da47:	nop
  40da48:	add    rsp,0x78
  40da4c:	pop    rbx
  40da4d:	pop    rsi
  40da4e:	ret    
  40da4f:	nop
  40da50:	test   BYTE PTR [rbx+0x9],0x8
  40da54:	jne    0x40daa2
  40da56:	mov    rcx,rsi
  40da59:	mov    DWORD PTR [rsp+0x3c],r8d
  40da5e:	call   0x4113a8
  40da63:	mov    r8d,DWORD PTR [rsp+0x3c]
  40da68:	sub    eax,0x1
  40da6b:	mov    DWORD PTR [rbx+0x10],eax
  40da6e:	mov    ecx,DWORD PTR [rsp+0x58]
  40da72:	mov    r9,rbx
  40da75:	mov    rdx,rsi
  40da78:	call   0x40d7e0
  40da7d:	mov    rcx,rsi
  40da80:	call   0x40eeb0
  40da85:	nop
  40da86:	add    rsp,0x78
  40da8a:	pop    rbx
  40da8b:	pop    rsi
  40da8c:	ret    
  40da8d:	nop    DWORD PTR [rax]
  40da90:	mov    DWORD PTR [rdx+0x10],0x1
  40da97:	mov    r8d,0x1
  40da9d:	jmp    0x40d97e
  40daa2:	sub    DWORD PTR [rbx+0x10],0x1
  40daa6:	jmp    0x40da6e
  40daa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dab0:	mov    DWORD PTR [rdx+0x10],0x6
  40dab7:	mov    r8d,0x6
  40dabd:	jmp    0x40d97e
  40dac2:	sub    eax,r8d
  40dac5:	mov    DWORD PTR [rbx+0x10],eax
  40dac8:	jmp    0x40da05
  40dacd:	nop    DWORD PTR [rax]
  40dad0:	mov    ecx,DWORD PTR [rsp+0x58]
  40dad4:	mov    r8,rbx
  40dad7:	mov    rdx,rax
  40dada:	call   0x40cf30
  40dadf:	jmp    0x40da7d
  40dae1:	mov    edx,DWORD PTR [rbx+0xc]
  40dae4:	test   edx,edx
  40dae6:	jle    0x40da05
  40daec:	add    eax,edx
  40daee:	mov    DWORD PTR [rbx+0xc],eax
  40daf1:	jmp    0x40da05
  40daf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db00:	push   rbp
  40db01:	push   r14
  40db03:	push   r13
  40db05:	push   r12
  40db07:	push   rdi
  40db08:	push   rsi
  40db09:	push   rbx
  40db0a:	mov    rbp,rsp
  40db0d:	sub    rsp,0x20
  40db11:	mov    r10d,0x12
  40db17:	mov    eax,0x18
  40db1c:	cmp    ecx,0x6f
  40db1f:	mov    rbx,r8
  40db22:	mov    r8d,DWORD PTR [r8+0x10]
  40db26:	mov    r11d,ecx
  40db29:	setne  cl
  40db2c:	mov    edi,DWORD PTR [rbx+0x8]
  40db2f:	movzx  ecx,cl
  40db32:	cmovne eax,r10d
  40db36:	mov    r10b,0x0
  40db39:	add    ecx,0x3
  40db3c:	test   r8d,r8d
  40db3f:	mov    r9,rdx
  40db42:	cmovns r10d,r8d
  40db46:	add    r10d,eax
  40db49:	test   edi,0x1000
  40db4f:	je     0x40db5c
  40db51:	cmp    WORD PTR [rbx+0x20],0x0
  40db56:	jne    0x40dd23
  40db5c:	movsxd r12,DWORD PTR [rbx+0xc]
  40db60:	movsxd rax,r10d
  40db63:	cmp    r10d,r12d
  40db66:	cmovl  rax,r12
  40db6a:	add    rax,0x1e
  40db6e:	and    rax,0xfffffffffffffff0
  40db72:	call   0x40c550
  40db77:	xor    edx,edx
  40db79:	sub    rsp,rax
  40db7c:	cmp    r11d,0x6f
  40db80:	lea    rsi,[rsp+0x20]
  40db85:	setne  dl
  40db88:	test   r9,r9
  40db8b:	lea    edx,[rdx*8+0x7]
  40db92:	mov    r10,rsi
  40db95:	je     0x40de42
  40db9b:	mov    r13d,r11d
  40db9e:	and    r13d,0x20
  40dba2:	jmp    0x40dbb0
  40dba4:	shr    r9,cl
  40dba7:	mov    BYTE PTR [r10-0x1],r14b
  40dbab:	test   r9,r9
  40dbae:	je     0x40dbd5
  40dbb0:	mov    eax,edx
  40dbb2:	add    r10,0x1
  40dbb6:	and    eax,r9d
  40dbb9:	lea    r14d,[rax+0x30]
  40dbbd:	cmp    r14b,0x39
  40dbc1:	jbe    0x40dba4
  40dbc3:	add    eax,0x37
  40dbc6:	shr    r9,cl
  40dbc9:	or     eax,r13d
  40dbcc:	test   r9,r9
  40dbcf:	mov    BYTE PTR [r10-0x1],al
  40dbd3:	jne    0x40dbb0
  40dbd5:	cmp    rsi,r10
  40dbd8:	je     0x40de42
  40dbde:	test   r8d,r8d
  40dbe1:	jle    0x40dda2
  40dbe7:	mov    rax,rsi
  40dbea:	sub    rax,r10
  40dbed:	add    eax,r8d
  40dbf0:	test   eax,eax
  40dbf2:	jle    0x40dda2
  40dbf8:	sub    eax,0x1
  40dbfb:	mov    rdx,rax
  40dbfe:	lea    rcx,[r10+rax*1+0x1]
  40dc03:	mov    rax,r10
  40dc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc10:	add    rax,0x1
  40dc14:	mov    BYTE PTR [rax-0x1],0x30
  40dc18:	cmp    rax,rcx
  40dc1b:	jne    0x40dc10
  40dc1d:	movsxd rax,edx
  40dc20:	lea    r10,[r10+rax*1+0x1]
  40dc25:	cmp    rsi,r10
  40dc28:	jne    0x40dc40
  40dc2a:	test   r8d,r8d
  40dc2d:	je     0x40dc40
  40dc2f:	mov    BYTE PTR [r10],0x30
  40dc33:	add    r10,0x1
  40dc37:	nop    WORD PTR [rax+rax*1+0x0]
  40dc40:	mov    rax,r10
  40dc43:	sub    rax,rsi
  40dc46:	cmp    r12d,eax
  40dc49:	jle    0x40dd70
  40dc4f:	sub    r12d,eax
  40dc52:	test   r12d,r12d
  40dc55:	mov    DWORD PTR [rbx+0xc],r12d
  40dc59:	jle    0x40dea7
  40dc5f:	cmp    r11d,0x6f
  40dc63:	mov    edx,DWORD PTR [rbx+0x8]
  40dc66:	je     0x40de30
  40dc6c:	test   dh,0x8
  40dc6f:	je     0x40ddf0
  40dc75:	lea    r13d,[r12-0x2]
  40dc7a:	test   r13d,r13d
  40dc7d:	jle    0x40dc88
  40dc7f:	test   r8d,r8d
  40dc82:	js     0x40dd3d
  40dc88:	test   r13d,r13d
  40dc8b:	mov    BYTE PTR [r10],r11b
  40dc8e:	lea    rdi,[r10+0x2]
  40dc92:	mov    BYTE PTR [r10+0x1],0x30
  40dc97:	jle    0x40dd98
  40dc9d:	and    dh,0x4
  40dca0:	jne    0x40ddc3
  40dca6:	lea    r14d,[r13-0x1]
  40dcaa:	mov    r12d,r14d
  40dcad:	nop    DWORD PTR [rax]
  40dcb0:	sub    r12d,0x1
  40dcb4:	mov    rdx,rbx
  40dcb7:	mov    ecx,0x20
  40dcbc:	call   0x40cca0
  40dcc1:	lea    eax,[r12+0x1]
  40dcc6:	test   eax,eax
  40dcc8:	jg     0x40dcb0
  40dcca:	test   r14d,r14d
  40dccd:	lea    r13d,[r14-0x1]
  40dcd1:	mov    r12d,0x0
  40dcd7:	cmovns r12d,r14d
  40dcdb:	sub    r13d,r12d
  40dcde:	cmp    rsi,rdi
  40dce1:	jb     0x40ddd0
  40dce7:	nop    WORD PTR [rax+rax*1+0x0]
  40dcf0:	test   r13d,r13d
  40dcf3:	lea    esi,[r13-0x1]
  40dcf7:	jle    0x40dd15
  40dcf9:	nop    DWORD PTR [rax+0x0]
  40dd00:	mov    rdx,rbx
  40dd03:	mov    ecx,0x20
  40dd08:	sub    esi,0x1
  40dd0b:	call   0x40cca0
  40dd10:	cmp    esi,0xffffffff
  40dd13:	jne    0x40dd00
  40dd15:	mov    rsp,rbp
  40dd18:	pop    rbx
  40dd19:	pop    rsi
  40dd1a:	pop    rdi
  40dd1b:	pop    r12
  40dd1d:	pop    r13
  40dd1f:	pop    r14
  40dd21:	pop    rbp
  40dd22:	ret    
  40dd23:	mov    eax,r10d
  40dd26:	mov    edx,0x55555556
  40dd2b:	imul   edx
  40dd2d:	mov    eax,r10d
  40dd30:	sar    eax,0x1f
  40dd33:	sub    edx,eax
  40dd35:	add    r10d,edx
  40dd38:	jmp    0x40db5c
  40dd3d:	mov    eax,edx
  40dd3f:	and    eax,0x600
  40dd44:	cmp    eax,0x200
  40dd49:	je     0x40de50
  40dd4f:	mov    r12d,r13d
  40dd52:	test   dh,0x8
  40dd55:	mov    r13d,r12d
  40dd58:	mov    rdi,r10
  40dd5b:	je     0x40dc9d
  40dd61:	mov    r13d,r12d
  40dd64:	jmp    0x40dc88
  40dd69:	nop    DWORD PTR [rax+0x0]
  40dd70:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40dd77:	mov    r13d,0xffffffff
  40dd7d:	cmp    r11d,0x6f
  40dd81:	je     0x40dd95
  40dd83:	mov    edx,DWORD PTR [rbx+0x8]
  40dd86:	mov    eax,edx
  40dd88:	and    eax,0x800
  40dd8d:	test   eax,eax
  40dd8f:	jne    0x40dc88
  40dd95:	mov    rdi,r10
  40dd98:	cmp    rsi,rdi
  40dd9b:	jb     0x40ddd0
  40dd9d:	jmp    0x40dd15
  40dda2:	cmp    r11d,0x6f
  40dda6:	jne    0x40dc25
  40ddac:	test   BYTE PTR [rbx+0x9],0x8
  40ddb0:	je     0x40dc25
  40ddb6:	mov    BYTE PTR [r10],0x30
  40ddba:	add    r10,0x1
  40ddbe:	jmp    0x40dc25
  40ddc3:	cmp    rsi,rdi
  40ddc6:	jae    0x40deaf
  40ddcc:	nop    DWORD PTR [rax+0x0]
  40ddd0:	sub    rdi,0x1
  40ddd4:	movsx  ecx,BYTE PTR [rdi]
  40ddd7:	mov    rdx,rbx
  40ddda:	call   0x40cca0
  40dddf:	cmp    rsi,rdi
  40dde2:	jb     0x40ddd0
  40dde4:	jmp    0x40dcf0
  40dde9:	nop    DWORD PTR [rax+0x0]
  40ddf0:	test   r8d,r8d
  40ddf3:	jns    0x40dd52
  40ddf9:	mov    eax,edx
  40ddfb:	and    eax,0x600
  40de00:	cmp    eax,0x200
  40de05:	je     0x40de9e
  40de0b:	cmp    r11d,0x6f
  40de0f:	jne    0x40dd52
  40de15:	and    dh,0x4
  40de18:	jne    0x40de3a
  40de1a:	lea    r14d,[r12-0x1]
  40de1f:	mov    rdi,r10
  40de22:	jmp    0x40dcaa
  40de27:	nop    WORD PTR [rax+rax*1+0x0]
  40de30:	test   r8d,r8d
  40de33:	js     0x40ddf9
  40de35:	and    dh,0x4
  40de38:	je     0x40de1a
  40de3a:	mov    rdi,r10
  40de3d:	mov    r13d,r12d
  40de40:	jmp    0x40dddf
  40de42:	and    edi,0xfffff7ff
  40de48:	mov    DWORD PTR [rbx+0x8],edi
  40de4b:	jmp    0x40dbde
  40de50:	lea    r8d,[r12-0x3]
  40de55:	mov    r12d,r8d
  40de58:	mov    eax,r12d
  40de5b:	lea    rcx,[r10+rax*1+0x1]
  40de60:	mov    rax,r10
  40de63:	add    rax,0x1
  40de67:	mov    BYTE PTR [rax-0x1],0x30
  40de6b:	cmp    rax,rcx
  40de6e:	jne    0x40de63
  40de70:	movsxd rax,r8d
  40de73:	cmp    r11d,0x6f
  40de77:	lea    r10,[r10+rax*1+0x1]
  40de7c:	je     0x40de90
  40de7e:	mov    eax,edx
  40de80:	mov    r13d,0xffffffff
  40de86:	and    eax,0x800
  40de8b:	jmp    0x40dd8d
  40de90:	mov    rdi,r10
  40de93:	mov    r13d,0xffffffff
  40de99:	jmp    0x40dd98
  40de9e:	sub    r12d,0x1
  40dea2:	mov    r8d,r12d
  40dea5:	jmp    0x40de58
  40dea7:	mov    r13d,r12d
  40deaa:	jmp    0x40dd7d
  40deaf:	lea    esi,[r13-0x1]
  40deb3:	jmp    0x40dd00
  40deb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dec0:	push   r13
  40dec2:	push   r12
  40dec4:	push   rbp
  40dec5:	push   rdi
  40dec6:	push   rsi
  40dec7:	push   rbx
  40dec8:	sub    rsp,0x68
  40decc:	mov    r9,QWORD PTR [rcx]
  40decf:	mov    r10d,DWORD PTR [rcx+0x8]
  40ded3:	mov    rbx,rdx
  40ded6:	mov    rax,r9
  40ded9:	mov    QWORD PTR [rsp+0x30],r9
  40dede:	mov    DWORD PTR [rsp+0x38],r10d
  40dee3:	shr    rax,0x20
  40dee7:	mov    r8,r10
  40deea:	and    eax,0x7fffffff
  40deef:	or     r9d,eax
  40def2:	lea    eax,[r10+r10*1]
  40def6:	mov    edx,r9d
  40def9:	neg    edx
  40defb:	and    eax,0xfffe
  40df00:	or     edx,r9d
  40df03:	shr    edx,0x1f
  40df06:	or     edx,eax
  40df08:	mov    eax,0xfffe
  40df0d:	sub    eax,edx
  40df0f:	sar    eax,0x10
  40df12:	test   eax,eax
  40df14:	jne    0x40e300
  40df1a:	movzx  esi,WORD PTR [rsp+0x38]
  40df1f:	mov    ecx,esi
  40df21:	and    ecx,0x8000
  40df27:	je     0x40df30
  40df29:	or     DWORD PTR [rbx+0x8],0x80
  40df30:	and    r8w,0x7fff
  40df36:	cmp    r8w,0x7fff
  40df3c:	jne    0x40df60
  40df3e:	test   r9d,r9d
  40df41:	jne    0x40df60
  40df43:	lea    rdx,[rip+0xa1da]        # 0x418124
  40df4a:	mov    r8,rbx
  40df4d:	call   0x40cf30
  40df52:	jmp    0x40e2d5
  40df57:	nop    WORD PTR [rax+rax*1+0x0]
  40df60:	and    si,0x7fff
  40df65:	jne    0x40e090
  40df6b:	mov    rax,QWORD PTR [rsp+0x30]
  40df70:	test   rax,rax
  40df73:	jne    0x40e31f
  40df79:	mov    r9d,DWORD PTR [rbx+0x10]
  40df7d:	cmp    r9d,0xe
  40df81:	jbe    0x40e39c
  40df87:	xor    esi,esi
  40df89:	mov    r8d,DWORD PTR [rbx+0x8]
  40df8d:	lea    rbp,[rsp+0x40]
  40df92:	test   r9d,r9d
  40df95:	jle    0x40e3ac
  40df9b:	lea    rax,[rbp+0x1]
  40df9f:	mov    BYTE PTR [rsp+0x40],0x2e
  40dfa4:	mov    r10d,DWORD PTR [rbx+0xc]
  40dfa8:	lea    rdi,[rax+0x1]
  40dfac:	mov    BYTE PTR [rax],0x30
  40dfaf:	mov    r12d,0x2
  40dfb5:	test   r10d,r10d
  40dfb8:	jg     0x40e1bc
  40dfbe:	xchg   ax,ax
  40dfc0:	test   r8b,0x80
  40dfc4:	jne    0x40e280
  40dfca:	test   r8d,0x100
  40dfd1:	jne    0x40e370
  40dfd7:	and    r8d,0x40
  40dfdb:	jne    0x40e382
  40dfe1:	mov    rdx,rbx
  40dfe4:	mov    ecx,0x30
  40dfe9:	call   0x40cca0
  40dfee:	mov    ecx,DWORD PTR [rbx+0x8]
  40dff1:	mov    rdx,rbx
  40dff4:	and    ecx,0x20
  40dff7:	or     ecx,0x58
  40dffa:	call   0x40cca0
  40dfff:	mov    eax,DWORD PTR [rbx+0xc]
  40e002:	test   eax,eax
  40e004:	jle    0x40e02c
  40e006:	test   BYTE PTR [rbx+0x9],0x2
  40e00a:	je     0x40e02c
  40e00c:	sub    eax,0x1
  40e00f:	mov    DWORD PTR [rbx+0xc],eax
  40e012:	mov    rdx,rbx
  40e015:	mov    ecx,0x30
  40e01a:	call   0x40cca0
  40e01f:	mov    eax,DWORD PTR [rbx+0xc]
  40e022:	lea    edx,[rax-0x1]
  40e025:	test   eax,eax
  40e027:	mov    DWORD PTR [rbx+0xc],edx
  40e02a:	jg     0x40e012
  40e02c:	cmp    rdi,rbp
  40e02f:	lea    r13,[rsp+0x2e]
  40e034:	ja     0x40e069
  40e036:	jmp    0x40e29f
  40e03b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e040:	movzx  eax,WORD PTR [rbx+0x20]
  40e044:	test   ax,ax
  40e047:	mov    WORD PTR [rsp+0x2e],ax
  40e04c:	je     0x40e060
  40e04e:	mov    r8,rbx
  40e051:	mov    edx,0x1
  40e056:	mov    rcx,r13
  40e059:	call   0x40cd00
  40e05e:	xchg   ax,ax
  40e060:	cmp    rdi,rbp
  40e063:	je     0x40e29f
  40e069:	sub    rdi,0x1
  40e06d:	movsx  ecx,BYTE PTR [rdi]
  40e070:	cmp    ecx,0x2e
  40e073:	je     0x40e2e2
  40e079:	cmp    ecx,0x2c
  40e07c:	je     0x40e040
  40e07e:	mov    rdx,rbx
  40e081:	call   0x40cca0
  40e086:	jmp    0x40e060
  40e088:	nop    DWORD PTR [rax+rax*1+0x0]
  40e090:	mov    r9d,DWORD PTR [rbx+0x10]
  40e094:	sub    si,0x3fff
  40e099:	mov    rax,QWORD PTR [rsp+0x30]
  40e09e:	cmp    r9d,0xe
  40e0a2:	ja     0x40e34d
  40e0a8:	test   rax,rax
  40e0ab:	js     0x40e0b5
  40e0ad:	nop    DWORD PTR [rax]
  40e0b0:	add    rax,rax
  40e0b3:	jns    0x40e0b0
  40e0b5:	mov    ecx,0xe
  40e0ba:	mov    edx,0x4
  40e0bf:	shr    rax,1
  40e0c2:	sub    ecx,r9d
  40e0c5:	shl    ecx,0x2
  40e0c8:	shl    rdx,cl
  40e0cb:	add    rax,rdx
  40e0ce:	js     0x40e394
  40e0d4:	add    rax,rax
  40e0d7:	mov    ecx,0xf
  40e0dc:	sub    ecx,r9d
  40e0df:	shl    ecx,0x2
  40e0e2:	shr    rax,cl
  40e0e5:	mov    r8d,DWORD PTR [rbx+0x8]
  40e0e9:	lea    rbp,[rsp+0x40]
  40e0ee:	mov    rdi,rbp
  40e0f1:	mov    r11d,r8d
  40e0f4:	mov    r10d,r8d
  40e0f7:	and    r11d,0x800
  40e0fe:	and    r10d,0x20
  40e102:	jmp    0x40e133
  40e104:	mov    ecx,DWORD PTR [rbx+0x10]
  40e107:	test   ecx,ecx
  40e109:	jle    0x40e111
  40e10b:	sub    ecx,0x1
  40e10e:	mov    DWORD PTR [rbx+0x10],ecx
  40e111:	shr    rax,0x4
  40e115:	mov    r9,rdi
  40e118:	test   edx,edx
  40e11a:	je     0x40e184
  40e11c:	cmp    edx,0x9
  40e11f:	lea    rdi,[r9+0x1]
  40e123:	jle    0x40e197
  40e125:	add    edx,0x37
  40e128:	or     edx,r10d
  40e12b:	mov    BYTE PTR [r9],dl
  40e12e:	test   rax,rax
  40e131:	je     0x40e1a0
  40e133:	mov    edx,eax
  40e135:	and    edx,0xf
  40e138:	cmp    edx,eax
  40e13a:	jne    0x40e104
  40e13c:	cmp    rdi,rbp
  40e13f:	ja     0x40e152
  40e141:	test   r11d,r11d
  40e144:	jne    0x40e152
  40e146:	mov    r12d,DWORD PTR [rbx+0x10]
  40e14a:	mov    r9,rdi
  40e14d:	test   r12d,r12d
  40e150:	jle    0x40e159
  40e152:	lea    r9,[rdi+0x1]
  40e156:	mov    BYTE PTR [rdi],0x2e
  40e159:	cmp    rax,0x1
  40e15d:	jbe    0x40e369
  40e163:	lea    ecx,[rsi-0x1]
  40e166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e170:	shr    rax,1
  40e173:	mov    esi,ecx
  40e175:	cmp    rax,0x1
  40e179:	lea    ecx,[rsi-0x1]
  40e17c:	jne    0x40e170
  40e17e:	xor    al,al
  40e180:	test   edx,edx
  40e182:	jne    0x40e11c
  40e184:	cmp    r9,rbp
  40e187:	ja     0x40e193
  40e189:	mov    ecx,DWORD PTR [rbx+0x10]
  40e18c:	mov    rdi,r9
  40e18f:	test   ecx,ecx
  40e191:	js     0x40e12e
  40e193:	lea    rdi,[r9+0x1]
  40e197:	add    edx,0x30
  40e19a:	jmp    0x40e12b
  40e19c:	nop    DWORD PTR [rax+0x0]
  40e1a0:	cmp    rdi,rbp
  40e1a3:	je     0x40e3a3
  40e1a9:	mov    r10d,DWORD PTR [rbx+0xc]
  40e1ad:	mov    r12d,0x2
  40e1b3:	test   r10d,r10d
  40e1b6:	jle    0x40dfc0
  40e1bc:	mov    edx,DWORD PTR [rbx+0x10]
  40e1bf:	mov    rax,rdi
  40e1c2:	movsx  r11d,si
  40e1c6:	sub    rax,rbp
  40e1c9:	lea    ecx,[rdx+rax*1]
  40e1cc:	test   edx,edx
  40e1ce:	mov    edx,r8d
  40e1d1:	cmovg  eax,ecx
  40e1d4:	and    edx,0x1c0
  40e1da:	mov    ecx,0x66666667
  40e1df:	cmp    edx,0x1
  40e1e2:	sbb    edx,edx
  40e1e4:	lea    r9d,[rax+rdx*1+0x6]
  40e1e9:	mov    eax,r11d
  40e1ec:	imul   ecx
  40e1ee:	mov    eax,r11d
  40e1f1:	sar    eax,0x1f
  40e1f4:	mov    ecx,edx
  40e1f6:	sar    ecx,0x2
  40e1f9:	sub    ecx,eax
  40e1fb:	je     0x40e220
  40e1fd:	mov    r11d,0x66666667
  40e203:	mov    eax,ecx
  40e205:	sar    ecx,0x1f
  40e208:	add    r9d,0x1
  40e20c:	imul   r11d
  40e20f:	add    r12d,0x1
  40e213:	sar    edx,0x2
  40e216:	sub    edx,ecx
  40e218:	mov    ecx,edx
  40e21a:	jne    0x40e203
  40e21c:	movsx  r12d,r12w
  40e220:	cmp    r10d,r9d
  40e223:	jle    0x40e2f0
  40e229:	sub    r10d,r9d
  40e22c:	test   r8d,0x600
  40e233:	jne    0x40e360
  40e239:	lea    eax,[r10-0x1]
  40e23d:	test   r10d,r10d
  40e240:	mov    DWORD PTR [rbx+0xc],eax
  40e243:	jle    0x40dfc0
  40e249:	nop    DWORD PTR [rax+0x0]
  40e250:	mov    rdx,rbx
  40e253:	mov    ecx,0x20
  40e258:	call   0x40cca0
  40e25d:	mov    eax,DWORD PTR [rbx+0xc]
  40e260:	lea    edx,[rax-0x1]
  40e263:	test   eax,eax
  40e265:	mov    DWORD PTR [rbx+0xc],edx
  40e268:	jg     0x40e250
  40e26a:	mov    r8d,DWORD PTR [rbx+0x8]
  40e26e:	test   r8b,0x80
  40e272:	je     0x40dfca
  40e278:	nop    DWORD PTR [rax+rax*1+0x0]
  40e280:	mov    rdx,rbx
  40e283:	mov    ecx,0x2d
  40e288:	call   0x40cca0
  40e28d:	jmp    0x40dfe1
  40e292:	mov    rdx,rbx
  40e295:	mov    ecx,0x30
  40e29a:	call   0x40cca0
  40e29f:	mov    eax,DWORD PTR [rbx+0x10]
  40e2a2:	lea    edx,[rax-0x1]
  40e2a5:	test   eax,eax
  40e2a7:	mov    DWORD PTR [rbx+0x10],edx
  40e2aa:	jg     0x40e292
  40e2ac:	mov    ecx,DWORD PTR [rbx+0x8]
  40e2af:	mov    rdx,rbx
  40e2b2:	and    ecx,0x20
  40e2b5:	or     ecx,0x50
  40e2b8:	call   0x40cca0
  40e2bd:	add    DWORD PTR [rbx+0xc],r12d
  40e2c1:	or     DWORD PTR [rbx+0x8],0x1c0
  40e2c8:	movsx  rcx,si
  40e2cc:	mov    rdx,rbx
  40e2cf:	call   0x40d510
  40e2d4:	nop
  40e2d5:	add    rsp,0x68
  40e2d9:	pop    rbx
  40e2da:	pop    rsi
  40e2db:	pop    rdi
  40e2dc:	pop    rbp
  40e2dd:	pop    r12
  40e2df:	pop    r13
  40e2e1:	ret    
  40e2e2:	mov    rcx,rbx
  40e2e5:	call   0x40cfd0
  40e2ea:	jmp    0x40e060
  40e2ef:	nop
  40e2f0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40e2f7:	jmp    0x40dfc0
  40e2fc:	nop    DWORD PTR [rax+0x0]
  40e300:	lea    rdx,[rip+0x9e19]        # 0x418120
  40e307:	mov    r8,rbx
  40e30a:	xor    ecx,ecx
  40e30c:	call   0x40cf30
  40e311:	nop
  40e312:	add    rsp,0x68
  40e316:	pop    rbx
  40e317:	pop    rsi
  40e318:	pop    rdi
  40e319:	pop    rbp
  40e31a:	pop    r12
  40e31c:	pop    r13
  40e31e:	ret    
  40e31f:	js     0x40e3c1
  40e325:	mov    edx,0xffffc001
  40e32a:	nop    WORD PTR [rax+rax*1+0x0]
  40e330:	mov    esi,edx
  40e332:	sub    edx,0x1
  40e335:	add    rax,rax
  40e338:	jns    0x40e330
  40e33a:	mov    r9d,DWORD PTR [rbx+0x10]
  40e33e:	cmp    r9d,0xe
  40e342:	jbe    0x40e0b5
  40e348:	jmp    0x40e0e5
  40e34d:	test   rax,rax
  40e350:	jne    0x40e0e5
  40e356:	jmp    0x40df89
  40e35b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e360:	mov    DWORD PTR [rbx+0xc],r10d
  40e364:	jmp    0x40dfc0
  40e369:	xor    eax,eax
  40e36b:	jmp    0x40e118
  40e370:	mov    rdx,rbx
  40e373:	mov    ecx,0x2b
  40e378:	call   0x40cca0
  40e37d:	jmp    0x40dfe1
  40e382:	mov    rdx,rbx
  40e385:	mov    ecx,0x20
  40e38a:	call   0x40cca0
  40e38f:	jmp    0x40dfe1
  40e394:	add    esi,0x1
  40e397:	jmp    0x40e0d7
  40e39c:	xor    eax,eax
  40e39e:	jmp    0x40e0b0
  40e3a3:	mov    r9d,DWORD PTR [rbx+0x10]
  40e3a7:	jmp    0x40df92
  40e3ac:	test   r8d,0x800
  40e3b3:	mov    rax,rbp
  40e3b6:	je     0x40dfa4
  40e3bc:	jmp    0x40df9b
  40e3c1:	mov    esi,0xffffc002
  40e3c6:	jmp    0x40e33a
  40e3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3d0:	push   r15
  40e3d2:	push   r14
  40e3d4:	push   r13
  40e3d6:	push   r12
  40e3d8:	push   rbp
  40e3d9:	push   rdi
  40e3da:	push   rsi
  40e3db:	push   rbx
  40e3dc:	sub    rsp,0xb8
  40e3e3:	mov    r13,QWORD PTR [rsp+0x120]
  40e3eb:	mov    r15d,ecx
  40e3ee:	mov    rdi,rdx
  40e3f1:	mov    esi,r8d
  40e3f4:	mov    rbx,r9
  40e3f7:	and    r15d,0x6000
  40e3fe:	call   0x4114e0
  40e403:	mov    eax,DWORD PTR [rax]
  40e405:	lea    rcx,[rip+0x9d31]        # 0x41813d
  40e40c:	xor    edx,edx
  40e40e:	mov    QWORD PTR [rsp+0x80],rdi
  40e416:	mov    DWORD PTR [rsp+0x88],r15d
  40e41e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e429:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e434:	mov    DWORD PTR [rsp+0x34],eax
  40e438:	xor    eax,eax
  40e43a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  40e445:	mov    WORD PTR [rsp+0x98],ax
  40e44d:	mov    DWORD PTR [rsp+0x9c],0x0
  40e458:	mov    WORD PTR [rsp+0xa0],dx
  40e460:	mov    DWORD PTR [rsp+0xa4],0x0
  40e46b:	mov    DWORD PTR [rsp+0xa8],esi
  40e472:	call   0x411440
  40e477:	test   rax,rax
  40e47a:	je     0x40e48c
  40e47c:	movsx  edx,BYTE PTR [rax]
  40e47f:	mov    eax,0x2
  40e484:	sub    edx,0x30
  40e487:	cmp    edx,0x2
  40e48a:	jbe    0x40e499
  40e48c:	call   0x411620
  40e491:	and    eax,0x1
  40e494:	neg    eax
  40e496:	add    eax,0x3
  40e499:	lea    rdi,[rsp+0x70]
  40e49e:	mov    DWORD PTR [rsp+0xac],eax
  40e4a5:	movzx  eax,BYTE PTR [rbx]
  40e4a8:	lea    rsi,[rsp+0x6e]
  40e4ad:	lea    r12,[rsp+0x80]
  40e4b5:	lea    rbp,[rip+0x9c98]        # 0x418154
  40e4bc:	mov    QWORD PTR [rsp+0x28],rdi
  40e4c1:	lea    rdi,[rsp+0x50]
  40e4c6:	mov    QWORD PTR [rsp+0x38],rsi
  40e4cb:	mov    QWORD PTR [rsp+0x20],rdi
  40e4d0:	mov    edi,r15d
  40e4d3:	or     edi,0x200
  40e4d9:	mov    DWORD PTR [rsp+0x48],edi
  40e4dd:	nop    DWORD PTR [rax]
  40e4e0:	movsx  ecx,al
  40e4e3:	lea    rsi,[rbx+0x1]
  40e4e7:	test   ecx,ecx
  40e4e9:	je     0x40e56a
  40e4eb:	cmp    ecx,0x25
  40e4ee:	jne    0x40e550
  40e4f0:	movzx  eax,BYTE PTR [rbx+0x1]
  40e4f4:	xor    r10d,r10d
  40e4f7:	xor    r14d,r14d
  40e4fa:	mov    DWORD PTR [rsp+0x88],r15d
  40e502:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e50d:	mov    rdi,rsi
  40e510:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e51b:	lea    r11,[r12+0xc]
  40e520:	test   al,al
  40e522:	je     0x40e6cb
  40e528:	lea    edx,[rax-0x20]
  40e52b:	lea    rbx,[rdi+0x1]
  40e52f:	movsx  ecx,al
  40e532:	cmp    dl,0x5a
  40e535:	ja     0x40eb40
  40e53b:	movzx  edx,dl
  40e53e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  40e543:	add    rdx,rbp
  40e546:	jmp    rdx
  40e548:	nop    DWORD PTR [rax+rax*1+0x0]
  40e550:	mov    rdx,r12
  40e553:	call   0x40cca0
  40e558:	movzx  eax,BYTE PTR [rbx+0x1]
  40e55c:	mov    rbx,rsi
  40e55f:	lea    rsi,[rbx+0x1]
  40e563:	movsx  ecx,al
  40e566:	test   ecx,ecx
  40e568:	jne    0x40e4eb
  40e56a:	mov    eax,DWORD PTR [rsp+0xa4]
  40e571:	add    rsp,0xb8
  40e578:	pop    rbx
  40e579:	pop    rsi
  40e57a:	pop    rdi
  40e57b:	pop    rbp
  40e57c:	pop    r12
  40e57e:	pop    r13
  40e580:	pop    r14
  40e582:	pop    r15
  40e584:	ret    
  40e585:	sub    r10d,0x2
  40e589:	mov    rax,r13
  40e58c:	cmp    r10d,0x1
  40e590:	jbe    0x40eb83
  40e596:	mov    rsi,QWORD PTR [rax]
  40e599:	add    r13,0x8
  40e59d:	test   rsi,rsi
  40e5a0:	je     0x40e665
  40e5a6:	mov    rcx,rsi
  40e5a9:	call   0x4113a8
  40e5ae:	mov    edx,eax
  40e5b0:	mov    r8,r12
  40e5b3:	mov    rcx,rsi
  40e5b6:	call   0x40ce20
  40e5bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5c0:	movzx  eax,BYTE PTR [rbx]
  40e5c3:	jmp    0x40e4e0
  40e5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5d0:	test   r14d,r14d
  40e5d3:	jne    0x40e5e3
  40e5d5:	cmp    DWORD PTR [rsp+0x88],r15d
  40e5dd:	je     0x40ed4b
  40e5e3:	mov    rdx,QWORD PTR [r13+0x0]
  40e5e7:	lea    rsi,[r13+0x8]
  40e5eb:	mov    r8,r12
  40e5ee:	mov    ecx,0x78
  40e5f3:	mov    QWORD PTR [rsp+0x78],0x0
  40e5fc:	mov    r13,rsi
  40e5ff:	mov    QWORD PTR [rsp+0x70],rdx
  40e604:	call   0x40db00
  40e609:	jmp    0x40e5c0
  40e60b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e610:	cmp    r10d,0x5
  40e614:	mov    rax,QWORD PTR [r13+0x0]
  40e618:	je     0x40ec8a
  40e61e:	cmp    r10d,0x1
  40e622:	je     0x40ed14
  40e628:	cmp    r10d,0x2
  40e62c:	je     0x40e638
  40e62e:	cmp    r10d,0x3
  40e632:	je     0x40edbc
  40e638:	mov    edx,DWORD PTR [rsp+0xa4]
  40e63f:	add    r13,0x8
  40e643:	mov    DWORD PTR [rax],edx
  40e645:	jmp    0x40e5c0
  40e64a:	nop    WORD PTR [rax+rax*1+0x0]
  40e650:	mov    ecx,DWORD PTR [rsp+0x34]
  40e654:	call   0x4113b0
  40e659:	test   rax,rax
  40e65c:	mov    rsi,rax
  40e65f:	jne    0x40e5a6
  40e665:	mov    edx,0x6
  40e66a:	lea    rsi,[rip+0x9ac5]        # 0x418136
  40e671:	jmp    0x40e5b0
  40e676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e680:	movzx  eax,BYTE PTR [rdi+0x1]
  40e684:	mov    r10d,0x2
  40e68a:	mov    r14d,0x4
  40e690:	cmp    al,0x6c
  40e692:	jne    0x40e6c0
  40e694:	lea    rbx,[rdi+0x2]
  40e698:	movzx  eax,BYTE PTR [rdi+0x2]
  40e69c:	mov    r10d,0x3
  40e6a2:	mov    r14d,0x4
  40e6a8:	jmp    0x40e6c0
  40e6aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e6b0:	movzx  eax,BYTE PTR [rdi+0x1]
  40e6b4:	mov    r10d,0x3
  40e6ba:	mov    r14d,0x4
  40e6c0:	test   al,al
  40e6c2:	mov    rdi,rbx
  40e6c5:	jne    0x40e528
  40e6cb:	mov    rbx,rdi
  40e6ce:	jmp    0x40e4e0
  40e6d3:	mov    eax,DWORD PTR [rsp+0x88]
  40e6da:	mov    rdx,r13
  40e6dd:	add    r13,0x8
  40e6e1:	or     eax,0x20
  40e6e4:	test   al,0x4
  40e6e6:	mov    DWORD PTR [rsp+0x88],eax
  40e6ed:	je     0x40e94b
  40e6f3:	mov    rax,QWORD PTR [rdx]
  40e6f6:	mov    rcx,QWORD PTR [rsp+0x20]
  40e6fb:	mov    rdx,r12
  40e6fe:	fld    TBYTE PTR [rax]
  40e700:	fstp   TBYTE PTR [rsp+0x50]
  40e704:	call   0x40d960
  40e709:	jmp    0x40e5c0
  40e70e:	xchg   ax,ax
  40e710:	movzx  eax,BYTE PTR [rdi+0x1]
  40e714:	mov    r10d,0x1
  40e71a:	mov    r14d,0x4
  40e720:	cmp    al,0x68
  40e722:	jne    0x40e6c0
  40e724:	lea    rbx,[rdi+0x2]
  40e728:	movzx  eax,BYTE PTR [rdi+0x2]
  40e72c:	mov    r10d,0x5
  40e732:	mov    r14d,0x4
  40e738:	jmp    0x40e6c0
  40e73a:	nop    WORD PTR [rax+rax*1+0x0]
  40e740:	mov    eax,DWORD PTR [rsp+0x88]
  40e747:	mov    rdx,r13
  40e74a:	add    r13,0x8
  40e74e:	or     eax,0x20
  40e751:	test   al,0x4
  40e753:	mov    DWORD PTR [rsp+0x88],eax
  40e75a:	je     0x40e979
  40e760:	mov    rax,QWORD PTR [rdx]
  40e763:	mov    rcx,QWORD PTR [rsp+0x20]
  40e768:	mov    rdx,r12
  40e76b:	fld    TBYTE PTR [rax]
  40e76d:	fstp   TBYTE PTR [rsp+0x50]
  40e771:	call   0x40d420
  40e776:	jmp    0x40e5c0
  40e77b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e780:	mov    eax,DWORD PTR [rsp+0x88]
  40e787:	mov    rdx,r13
  40e78a:	add    r13,0x8
  40e78e:	or     eax,0x20
  40e791:	test   al,0x4
  40e793:	mov    DWORD PTR [rsp+0x88],eax
  40e79a:	je     0x40e9a7
  40e7a0:	mov    rax,QWORD PTR [rdx]
  40e7a3:	mov    rcx,QWORD PTR [rsp+0x20]
  40e7a8:	mov    rdx,r12
  40e7ab:	fld    TBYTE PTR [rax]
  40e7ad:	fstp   TBYTE PTR [rsp+0x50]
  40e7b1:	call   0x40d8b0
  40e7b6:	jmp    0x40e5c0
  40e7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7c0:	cmp    r10d,0x3
  40e7c4:	je     0x40ec9c
  40e7ca:	cmp    r10d,0x2
  40e7ce:	je     0x40ed39
  40e7d4:	mov    eax,DWORD PTR [r13+0x0]
  40e7d8:	cmp    r10d,0x1
  40e7dc:	lea    rdx,[r13+0x8]
  40e7e0:	mov    QWORD PTR [rsp+0x70],rax
  40e7e5:	je     0x40ed7b
  40e7eb:	cmp    r10d,0x5
  40e7ef:	mov    r13,rdx
  40e7f2:	je     0x40edd0
  40e7f8:	cmp    ecx,0x75
  40e7fb:	je     0x40ecdc
  40e801:	mov    r8,r12
  40e804:	mov    rdx,rax
  40e807:	call   0x40db00
  40e80c:	jmp    0x40e5c0
  40e811:	sub    r10d,0x2
  40e815:	mov    rax,r13
  40e818:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e823:	cmp    r10d,0x1
  40e827:	jbe    0x40e9cb
  40e82d:	mov    eax,DWORD PTR [rax]
  40e82f:	mov    rcx,QWORD PTR [rsp+0x28]
  40e834:	mov    r8,r12
  40e837:	mov    edx,0x1
  40e83c:	add    r13,0x8
  40e840:	mov    BYTE PTR [rsp+0x70],al
  40e844:	call   0x40ce20
  40e849:	jmp    0x40e5c0
  40e84e:	xchg   ax,ax
  40e850:	mov    eax,DWORD PTR [rsp+0x88]
  40e857:	mov    rdx,r13
  40e85a:	add    r13,0x8
  40e85e:	or     eax,0x20
  40e861:	test   al,0x4
  40e863:	mov    DWORD PTR [rsp+0x88],eax
  40e86a:	je     0x40ea08
  40e870:	mov    rax,QWORD PTR [rdx]
  40e873:	mov    rcx,QWORD PTR [rsp+0x20]
  40e878:	mov    rdx,r12
  40e87b:	fld    TBYTE PTR [rax]
  40e87d:	fstp   TBYTE PTR [rsp+0x50]
  40e881:	call   0x40dec0
  40e886:	jmp    0x40e5c0
  40e88b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e890:	or     DWORD PTR [rsp+0x88],0x80
  40e89b:	cmp    r10d,0x3
  40e89f:	je     0x40ec78
  40e8a5:	cmp    r10d,0x2
  40e8a9:	je     0x40ed27
  40e8af:	movsxd rcx,DWORD PTR [r13+0x0]
  40e8b3:	cmp    r10d,0x1
  40e8b7:	lea    rax,[r13+0x8]
  40e8bb:	mov    QWORD PTR [rsp+0x70],rcx
  40e8c0:	je     0x40ed8d
  40e8c6:	cmp    r10d,0x5
  40e8ca:	mov    r13,rax
  40e8cd:	je     0x40eddf
  40e8d3:	mov    rax,rcx
  40e8d6:	mov    rdx,r12
  40e8d9:	sar    rax,0x3f
  40e8dd:	mov    QWORD PTR [rsp+0x78],rax
  40e8e2:	call   0x40d510
  40e8e7:	jmp    0x40e5c0
  40e8ec:	nop    DWORD PTR [rax+0x0]
  40e8f0:	or     DWORD PTR [rsp+0x88],0x4
  40e8f8:	movzx  eax,BYTE PTR [rdi+0x1]
  40e8fc:	mov    r14d,0x4
  40e902:	jmp    0x40e6c0
  40e907:	nop    WORD PTR [rax+rax*1+0x0]
  40e910:	movzx  eax,BYTE PTR [rdi+0x1]
  40e914:	cmp    al,0x36
  40e916:	je     0x40ec58
  40e91c:	cmp    al,0x33
  40e91e:	je     0x40ecec
  40e924:	mov    r10d,0x3
  40e92a:	mov    r14d,0x4
  40e930:	jmp    0x40e6c0
  40e935:	mov    eax,DWORD PTR [rsp+0x88]
  40e93c:	mov    rdx,r13
  40e93f:	add    r13,0x8
  40e943:	test   al,0x4
  40e945:	jne    0x40e6f3
  40e94b:	mov    rcx,QWORD PTR [rsp+0x20]
  40e950:	fld    QWORD PTR [rdx]
  40e952:	mov    rdx,r12
  40e955:	fstp   TBYTE PTR [rsp+0x50]
  40e959:	call   0x40d960
  40e95e:	jmp    0x40e5c0
  40e963:	mov    eax,DWORD PTR [rsp+0x88]
  40e96a:	mov    rdx,r13
  40e96d:	add    r13,0x8
  40e971:	test   al,0x4
  40e973:	jne    0x40e760
  40e979:	mov    rcx,QWORD PTR [rsp+0x20]
  40e97e:	fld    QWORD PTR [rdx]
  40e980:	mov    rdx,r12
  40e983:	fstp   TBYTE PTR [rsp+0x50]
  40e987:	call   0x40d420
  40e98c:	jmp    0x40e5c0
  40e991:	mov    eax,DWORD PTR [rsp+0x88]
  40e998:	mov    rdx,r13
  40e99b:	add    r13,0x8
  40e99f:	test   al,0x4
  40e9a1:	jne    0x40e7a0
  40e9a7:	mov    rcx,QWORD PTR [rsp+0x20]
  40e9ac:	fld    QWORD PTR [rdx]
  40e9ae:	mov    rdx,r12
  40e9b1:	fstp   TBYTE PTR [rsp+0x50]
  40e9b5:	call   0x40d8b0
  40e9ba:	jmp    0x40e5c0
  40e9bf:	nop
  40e9c0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e9cb:	mov    eax,DWORD PTR [r13+0x0]
  40e9cf:	mov    rcx,QWORD PTR [rsp+0x28]
  40e9d4:	lea    rsi,[r13+0x8]
  40e9d8:	mov    r8,r12
  40e9db:	mov    edx,0x1
  40e9e0:	mov    r13,rsi
  40e9e3:	mov    WORD PTR [rsp+0x70],ax
  40e9e8:	call   0x40cd00
  40e9ed:	jmp    0x40e5c0
  40e9f2:	mov    eax,DWORD PTR [rsp+0x88]
  40e9f9:	mov    rdx,r13
  40e9fc:	add    r13,0x8
  40ea00:	test   al,0x4
  40ea02:	jne    0x40e870
  40ea08:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea0d:	fld    QWORD PTR [rdx]
  40ea0f:	mov    rdx,r12
  40ea12:	fstp   TBYTE PTR [rsp+0x50]
  40ea16:	call   0x40dec0
  40ea1b:	jmp    0x40e5c0
  40ea20:	test   r14d,r14d
  40ea23:	jne    0x40ebc0
  40ea29:	or     DWORD PTR [rsp+0x88],0x200
  40ea34:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea38:	jmp    0x40e6c0
  40ea3d:	nop    DWORD PTR [rax]
  40ea40:	cmp    r14d,0x1
  40ea44:	jbe    0x40ecae
  40ea4a:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea4e:	mov    r14d,0x4
  40ea54:	jmp    0x40e6c0
  40ea59:	nop    DWORD PTR [rax+0x0]
  40ea60:	test   r14d,r14d
  40ea63:	jne    0x40eae9
  40ea69:	or     DWORD PTR [rsp+0x88],0x400
  40ea74:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea78:	jmp    0x40e6c0
  40ea7d:	nop    DWORD PTR [rax]
  40ea80:	test   r14d,r14d
  40ea83:	jne    0x40eae9
  40ea85:	or     DWORD PTR [rsp+0x88],0x100
  40ea90:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea94:	jmp    0x40e6c0
  40ea99:	nop    DWORD PTR [rax+0x0]
  40eaa0:	test   r14d,r14d
  40eaa3:	jne    0x40eae9
  40eaa5:	or     DWORD PTR [rsp+0x88],0x800
  40eab0:	movzx  eax,BYTE PTR [rdi+0x1]
  40eab4:	jmp    0x40e6c0
  40eab9:	nop    DWORD PTR [rax+0x0]
  40eac0:	test   r14d,r14d
  40eac3:	jne    0x40eae9
  40eac5:	or     DWORD PTR [rsp+0x88],0x40
  40eacd:	movzx  eax,BYTE PTR [rdi+0x1]
  40ead1:	jmp    0x40e6c0
  40ead6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eae0:	test   r14d,r14d
  40eae3:	je     0x40ebf2
  40eae9:	movzx  eax,BYTE PTR [rdi+0x1]
  40eaed:	jmp    0x40e6c0
  40eaf2:	mov    rdx,r12
  40eaf5:	call   0x40cca0
  40eafa:	jmp    0x40e5c0
  40eaff:	nop
  40eb00:	test   r11,r11
  40eb03:	je     0x40ea4a
  40eb09:	test   r14d,0xfffffffd
  40eb10:	jne    0x40ebe0
  40eb16:	mov    eax,DWORD PTR [r13+0x0]
  40eb1a:	lea    rdx,[r13+0x8]
  40eb1e:	test   eax,eax
  40eb20:	mov    DWORD PTR [r11],eax
  40eb23:	js     0x40eda0
  40eb29:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb2d:	mov    r13,rdx
  40eb30:	xor    r11d,r11d
  40eb33:	jmp    0x40e6c0
  40eb38:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb40:	sub    eax,0x30
  40eb43:	cmp    al,0x9
  40eb45:	ja     0x40ed66
  40eb4b:	cmp    r14d,0x3
  40eb4f:	ja     0x40ed66
  40eb55:	test   r14d,r14d
  40eb58:	jne    0x40ebca
  40eb5a:	mov    r14d,0x1
  40eb60:	test   r11,r11
  40eb63:	je     0x40eae9
  40eb65:	mov    eax,DWORD PTR [r11]
  40eb68:	test   eax,eax
  40eb6a:	js     0x40eccd
  40eb70:	lea    eax,[rax+rax*4]
  40eb73:	lea    eax,[rcx+rax*2-0x30]
  40eb77:	mov    DWORD PTR [r11],eax
  40eb7a:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb7e:	jmp    0x40e6c0
  40eb83:	mov    rsi,QWORD PTR [r13+0x0]
  40eb87:	lea    rax,[rip+0x959a]        # 0x418128
  40eb8e:	lea    rdi,[r13+0x8]
  40eb92:	mov    r13,rdi
  40eb95:	test   rsi,rsi
  40eb98:	cmove  rsi,rax
  40eb9c:	mov    rcx,rsi
  40eb9f:	call   0x411370
  40eba4:	mov    r8,r12
  40eba7:	mov    edx,eax
  40eba9:	mov    rcx,rsi
  40ebac:	call   0x40cd00
  40ebb1:	jmp    0x40e5c0
  40ebb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ebc0:	cmp    r14d,0x3
  40ebc4:	ja     0x40ed66
  40ebca:	cmp    r14d,0x2
  40ebce:	mov    eax,0x3
  40ebd3:	cmove  r14d,eax
  40ebd7:	jmp    0x40eb60
  40ebd9:	nop    DWORD PTR [rax+0x0]
  40ebe0:	movzx  eax,BYTE PTR [rdi+0x1]
  40ebe4:	xor    r11d,r11d
  40ebe7:	mov    r14d,0x4
  40ebed:	jmp    0x40e6c0
  40ebf2:	mov    DWORD PTR [rsp+0x4c],r10d
  40ebf7:	mov    QWORD PTR [rsp+0x40],r11
  40ebfc:	or     DWORD PTR [rsp+0x88],0x1000
  40ec07:	mov    DWORD PTR [rsp+0x70],0x0
  40ec0f:	call   0x411420
  40ec14:	mov    r9,QWORD PTR [rsp+0x28]
  40ec19:	mov    rdx,QWORD PTR [rax+0x8]
  40ec1d:	mov    r8d,0x10
  40ec23:	mov    rcx,QWORD PTR [rsp+0x38]
  40ec28:	call   0x40c700
  40ec2d:	test   eax,eax
  40ec2f:	mov    r11,QWORD PTR [rsp+0x40]
  40ec34:	mov    r10d,DWORD PTR [rsp+0x4c]
  40ec39:	jle    0x40ec48
  40ec3b:	movzx  edx,WORD PTR [rsp+0x6e]
  40ec40:	mov    WORD PTR [rsp+0xa0],dx
  40ec48:	mov    DWORD PTR [rsp+0x9c],eax
  40ec4f:	movzx  eax,BYTE PTR [rdi+0x1]
  40ec53:	jmp    0x40e6c0
  40ec58:	cmp    BYTE PTR [rdi+0x2],0x34
  40ec5c:	je     0x40edef
  40ec62:	mov    eax,0x36
  40ec67:	mov    r10d,0x3
  40ec6d:	mov    r14d,0x4
  40ec73:	jmp    0x40e6c0
  40ec78:	mov    rcx,QWORD PTR [r13+0x0]
  40ec7c:	add    r13,0x8
  40ec80:	mov    QWORD PTR [rsp+0x70],rcx
  40ec85:	jmp    0x40e8d3
  40ec8a:	mov    edx,DWORD PTR [rsp+0xa4]
  40ec91:	add    r13,0x8
  40ec95:	mov    BYTE PTR [rax],dl
  40ec97:	jmp    0x40e5c0
  40ec9c:	mov    rax,QWORD PTR [r13+0x0]
  40eca0:	add    r13,0x8
  40eca4:	mov    QWORD PTR [rsp+0x70],rax
  40eca9:	jmp    0x40e7f8
  40ecae:	mov    DWORD PTR [rsp+0x90],0x0
  40ecb9:	movzx  eax,BYTE PTR [rdi+0x1]
  40ecbd:	lea    r11,[r12+0x10]
  40ecc2:	mov    r14d,0x2
  40ecc8:	jmp    0x40e6c0
  40eccd:	sub    ecx,0x30
  40ecd0:	movzx  eax,BYTE PTR [rdi+0x1]
  40ecd4:	mov    DWORD PTR [r11],ecx
  40ecd7:	jmp    0x40e6c0
  40ecdc:	mov    rdx,r12
  40ecdf:	mov    rcx,rax
  40ece2:	call   0x40d510
  40ece7:	jmp    0x40e5c0
  40ecec:	cmp    BYTE PTR [rdi+0x2],0x32
  40ecf0:	mov    eax,0x33
  40ecf5:	jne    0x40e924
  40ecfb:	lea    rbx,[rdi+0x3]
  40ecff:	movzx  eax,BYTE PTR [rdi+0x3]
  40ed03:	mov    r10d,0x2
  40ed09:	mov    r14d,0x4
  40ed0f:	jmp    0x40e6c0
  40ed14:	mov    edx,DWORD PTR [rsp+0xa4]
  40ed1b:	add    r13,0x8
  40ed1f:	mov    WORD PTR [rax],dx
  40ed22:	jmp    0x40e5c0
  40ed27:	movsxd rcx,DWORD PTR [r13+0x0]
  40ed2b:	add    r13,0x8
  40ed2f:	mov    QWORD PTR [rsp+0x70],rcx
  40ed34:	jmp    0x40e8d3
  40ed39:	mov    eax,DWORD PTR [r13+0x0]
  40ed3d:	add    r13,0x8
  40ed41:	mov    QWORD PTR [rsp+0x70],rax
  40ed46:	jmp    0x40e7f8
  40ed4b:	mov    eax,DWORD PTR [rsp+0x48]
  40ed4f:	mov    DWORD PTR [rsp+0x90],0x10
  40ed5a:	mov    DWORD PTR [rsp+0x88],eax
  40ed61:	jmp    0x40e5e3
  40ed66:	mov    rdx,r12
  40ed69:	mov    ecx,0x25
  40ed6e:	mov    rbx,rsi
  40ed71:	call   0x40cca0
  40ed76:	jmp    0x40e5c0
  40ed7b:	movzx  eax,WORD PTR [rsp+0x70]
  40ed80:	mov    r13,rdx
  40ed83:	mov    QWORD PTR [rsp+0x70],rax
  40ed88:	jmp    0x40e7f8
  40ed8d:	movsx  rcx,WORD PTR [rsp+0x70]
  40ed93:	mov    r13,rax
  40ed96:	mov    QWORD PTR [rsp+0x70],rcx
  40ed9b:	jmp    0x40e8d3
  40eda0:	test   r14d,r14d
  40eda3:	jne    0x40ee08
  40eda5:	or     DWORD PTR [rsp+0x88],0x400
  40edb0:	neg    DWORD PTR [rsp+0x8c]
  40edb7:	jmp    0x40eb29
  40edbc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  40edc4:	add    r13,0x8
  40edc8:	mov    QWORD PTR [rax],rdx
  40edcb:	jmp    0x40e5c0
  40edd0:	movzx  eax,BYTE PTR [rsp+0x70]
  40edd5:	mov    QWORD PTR [rsp+0x70],rax
  40edda:	jmp    0x40e7f8
  40eddf:	movsx  rcx,BYTE PTR [rsp+0x70]
  40ede5:	mov    QWORD PTR [rsp+0x70],rcx
  40edea:	jmp    0x40e8d3
  40edef:	lea    rbx,[rdi+0x3]
  40edf3:	movzx  eax,BYTE PTR [rdi+0x3]
  40edf7:	mov    r10d,0x3
  40edfd:	mov    r14d,0x4
  40ee03:	jmp    0x40e6c0
  40ee08:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40ee13:	movzx  eax,BYTE PTR [rdi+0x1]
  40ee17:	mov    r13,rdx
  40ee1a:	xor    r11d,r11d
  40ee1d:	jmp    0x40e6c0
  40ee22:	nop
  40ee23:	nop
  40ee24:	nop
  40ee25:	nop
  40ee26:	nop
  40ee27:	nop
  40ee28:	nop
  40ee29:	nop
  40ee2a:	nop
  40ee2b:	nop
  40ee2c:	nop
  40ee2d:	nop
  40ee2e:	nop
  40ee2f:	nop
  40ee30:	push   rbx
  40ee31:	sub    rsp,0x20
  40ee35:	xor    ebx,ebx
  40ee37:	cmp    ecx,0x1b
  40ee3a:	jle    0x40ee4d
  40ee3c:	mov    eax,0x4
  40ee41:	add    eax,eax
  40ee43:	add    ebx,0x1
  40ee46:	lea    edx,[rax+0x17]
  40ee49:	cmp    edx,ecx
  40ee4b:	jl     0x40ee41
  40ee4d:	mov    ecx,ebx
  40ee4f:	call   0x410720
  40ee54:	mov    DWORD PTR [rax],ebx
  40ee56:	add    rax,0x4
  40ee5a:	add    rsp,0x20
  40ee5e:	pop    rbx
  40ee5f:	ret    
  40ee60:	push   rsi
  40ee61:	push   rbx
  40ee62:	sub    rsp,0x28
  40ee66:	mov    rbx,rcx
  40ee69:	mov    ecx,r8d
  40ee6c:	mov    rsi,rdx
  40ee6f:	call   0x40ee30
  40ee74:	movzx  ecx,BYTE PTR [rbx]
  40ee77:	lea    r8,[rbx+0x1]
  40ee7b:	test   cl,cl
  40ee7d:	mov    BYTE PTR [rax],cl
  40ee7f:	mov    rcx,rax
  40ee82:	je     0x40ee99
  40ee84:	add    r8,0x1
  40ee88:	movzx  r9d,BYTE PTR [r8-0x1]
  40ee8d:	add    rcx,0x1
  40ee91:	test   r9b,r9b
  40ee94:	mov    BYTE PTR [rcx],r9b
  40ee97:	jne    0x40ee84
  40ee99:	test   rsi,rsi
  40ee9c:	je     0x40eea1
  40ee9e:	mov    QWORD PTR [rsi],rcx
  40eea1:	add    rsp,0x28
  40eea5:	pop    rbx
  40eea6:	pop    rsi
  40eea7:	ret    
  40eea8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eeb0:	mov    edx,0x1
  40eeb5:	mov    rax,rcx
  40eeb8:	mov    ecx,DWORD PTR [rcx-0x4]
  40eebb:	shl    edx,cl
  40eebd:	mov    DWORD PTR [rax+0x4],ecx
  40eec0:	lea    rcx,[rax-0x4]
  40eec4:	mov    DWORD PTR [rax+0x8],edx
  40eec7:	jmp    0x410830
  40eecc:	nop    DWORD PTR [rax+0x0]
  40eed0:	push   r15
  40eed2:	push   r14
  40eed4:	push   r13
  40eed6:	push   r12
  40eed8:	push   rbp
  40eed9:	push   rdi
  40eeda:	push   rsi
  40eedb:	push   rbx
  40eedc:	sub    rsp,0x38
  40eee0:	xor    eax,eax
  40eee2:	mov    edi,DWORD PTR [rdx+0x14]
  40eee5:	cmp    edi,DWORD PTR [rcx+0x14]
  40eee8:	mov    r15,rdx
  40eeeb:	jg     0x40f039
  40eef1:	sub    edi,0x1
  40eef4:	lea    rbx,[rdx+0x18]
  40eef8:	lea    r12,[rcx+0x18]
  40eefc:	movsxd r13,edi
  40eeff:	xor    edx,edx
  40ef01:	shl    r13,0x2
  40ef05:	lea    rbp,[rbx+r13*1]
  40ef09:	add    r13,r12
  40ef0c:	mov    eax,DWORD PTR [rbp+0x0]
  40ef0f:	lea    r8d,[rax+0x1]
  40ef13:	mov    eax,DWORD PTR [r13+0x0]
  40ef17:	div    r8d
  40ef1a:	test   eax,eax
  40ef1c:	mov    r14d,eax
  40ef1f:	mov    DWORD PTR [rsp+0x2c],eax
  40ef23:	je     0x40efb7
  40ef29:	mov    edx,eax
  40ef2b:	mov    rsi,rbx
  40ef2e:	mov    r11,r12
  40ef31:	xor    eax,eax
  40ef33:	xor    r10d,r10d
  40ef36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef40:	add    rsi,0x4
  40ef44:	mov    r8d,DWORD PTR [rsi-0x4]
  40ef48:	mov    r9d,DWORD PTR [r11]
  40ef4b:	add    r11,0x4
  40ef4f:	imul   r8,rdx
  40ef53:	add    r8,rax
  40ef56:	mov    rax,r8
  40ef59:	mov    r8d,r8d
  40ef5c:	sub    r9,r8
  40ef5f:	shr    rax,0x20
  40ef63:	sub    r9,r10
  40ef66:	mov    r10,r9
  40ef69:	mov    DWORD PTR [r11-0x4],r9d
  40ef6d:	shr    r10,0x20
  40ef71:	and    r10d,0x1
  40ef75:	cmp    rbp,rsi
  40ef78:	jae    0x40ef40
  40ef7a:	mov    r11d,DWORD PTR [r13+0x0]
  40ef7e:	test   r11d,r11d
  40ef81:	jne    0x40efb7
  40ef83:	lea    rax,[r13-0x4]
  40ef87:	cmp    r12,rax
  40ef8a:	jae    0x40efb4
  40ef8c:	mov    r10d,DWORD PTR [r13-0x4]
  40ef90:	test   r10d,r10d
  40ef93:	je     0x40efa8
  40ef95:	jmp    0x40efb4
  40ef97:	nop    WORD PTR [rax+rax*1+0x0]
  40efa0:	mov    r9d,DWORD PTR [rax]
  40efa3:	test   r9d,r9d
  40efa6:	jne    0x40efb4
  40efa8:	sub    rax,0x4
  40efac:	sub    edi,0x1
  40efaf:	cmp    r12,rax
  40efb2:	jb     0x40efa0
  40efb4:	mov    DWORD PTR [rcx+0x14],edi
  40efb7:	mov    rdx,r15
  40efba:	mov    rsi,rcx
  40efbd:	call   0x410d50
  40efc2:	test   eax,eax
  40efc4:	js     0x40f035
  40efc6:	lea    eax,[r14+0x1]
  40efca:	mov    rcx,r12
  40efcd:	xor    edx,edx
  40efcf:	mov    DWORD PTR [rsp+0x2c],eax
  40efd3:	add    rbx,0x4
  40efd7:	mov    eax,DWORD PTR [rcx]
  40efd9:	mov    r8d,DWORD PTR [rbx-0x4]
  40efdd:	add    rcx,0x4
  40efe1:	sub    rax,r8
  40efe4:	sub    rax,rdx
  40efe7:	mov    rdx,rax
  40efea:	mov    DWORD PTR [rcx-0x4],eax
  40efed:	shr    rdx,0x20
  40eff1:	and    edx,0x1
  40eff4:	cmp    rbp,rbx
  40eff7:	jae    0x40efd3
  40eff9:	movsxd rax,edi
  40effc:	lea    rdx,[r12+rax*4]
  40f000:	mov    r8d,DWORD PTR [rdx]
  40f003:	test   r8d,r8d
  40f006:	jne    0x40f035
  40f008:	lea    rax,[rdx-0x4]
  40f00c:	cmp    r12,rax
  40f00f:	jae    0x40f032
  40f011:	mov    ecx,DWORD PTR [rdx-0x4]
  40f014:	test   ecx,ecx
  40f016:	je     0x40f026
  40f018:	jmp    0x40f032
  40f01a:	nop    WORD PTR [rax+rax*1+0x0]
  40f020:	mov    edx,DWORD PTR [rax]
  40f022:	test   edx,edx
  40f024:	jne    0x40f032
  40f026:	sub    rax,0x4
  40f02a:	sub    edi,0x1
  40f02d:	cmp    r12,rax
  40f030:	jb     0x40f020
  40f032:	mov    DWORD PTR [rsi+0x14],edi
  40f035:	mov    eax,DWORD PTR [rsp+0x2c]
  40f039:	add    rsp,0x38
  40f03d:	pop    rbx
  40f03e:	pop    rsi
  40f03f:	pop    rdi
  40f040:	pop    rbp
  40f041:	pop    r12
  40f043:	pop    r13
  40f045:	pop    r14
  40f047:	pop    r15
  40f049:	ret    
  40f04a:	nop
  40f04b:	nop
  40f04c:	nop
  40f04d:	nop
  40f04e:	nop
  40f04f:	nop
  40f050:	push   r15
  40f052:	push   r14
  40f054:	push   r13
  40f056:	push   r12
  40f058:	push   rbp
  40f059:	push   rdi
  40f05a:	push   rsi
  40f05b:	push   rbx
  40f05c:	sub    rsp,0xb8
  40f063:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  40f06b:	mov    r12d,DWORD PTR [r9]
  40f06e:	mov    eax,r12d
  40f071:	and    eax,0xffffffcf
  40f074:	mov    DWORD PTR [r9],eax
  40f077:	mov    eax,r12d
  40f07a:	and    eax,0x7
  40f07d:	cmp    eax,0x4
  40f080:	ja     0x4104b3
  40f086:	mov    r13d,edx
  40f089:	lea    rdx,[rip+0x9240]        # 0x4182d0
  40f090:	mov    QWORD PTR [rsp+0x28],r9
  40f095:	mov    r15,r8
  40f098:	mov    rbp,rcx
  40f09b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f09f:	add    rdx,rax
  40f0a2:	jmp    rdx
  40f0a4:	mov    edi,DWORD PTR [rcx]
  40f0a6:	xor    ecx,ecx
  40f0a8:	cmp    edi,0x20
  40f0ab:	jle    0x40f0bb
  40f0ad:	mov    eax,0x20
  40f0b2:	add    eax,eax
  40f0b4:	add    ecx,0x1
  40f0b7:	cmp    edi,eax
  40f0b9:	jg     0x40f0b2
  40f0bb:	call   0x410720
  40f0c0:	mov    rsi,rax
  40f0c3:	lea    eax,[rdi-0x1]
  40f0c6:	lea    r9,[rsi+0x18]
  40f0ca:	sar    eax,0x5
  40f0cd:	cdqe   
  40f0cf:	mov    rdx,r9
  40f0d2:	lea    r11,[r15+rax*4]
  40f0d6:	mov    rax,r15
  40f0d9:	nop    DWORD PTR [rax+0x0]
  40f0e0:	mov    ecx,DWORD PTR [rax]
  40f0e2:	add    rax,0x4
  40f0e6:	add    rdx,0x4
  40f0ea:	cmp    r11,rax
  40f0ed:	mov    DWORD PTR [rdx-0x4],ecx
  40f0f0:	jae    0x40f0e0
  40f0f2:	sub    rdx,r9
  40f0f5:	sar    rdx,0x2
  40f0f9:	mov    r14d,edx
  40f0fc:	movsxd rdx,edx
  40f0ff:	lea    rax,[r9+rdx*4-0x4]
  40f104:	jmp    0x40f11f
  40f106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f110:	sub    rax,0x4
  40f114:	test   edx,edx
  40f116:	mov    r14d,edx
  40f119:	je     0x40f620
  40f11f:	mov    r8d,DWORD PTR [rax]
  40f122:	lea    edx,[r14-0x1]
  40f126:	test   r8d,r8d
  40f129:	je     0x40f110
  40f12b:	movsxd rdx,edx
  40f12e:	mov    DWORD PTR [rsi+0x14],r14d
  40f132:	shl    r14d,0x5
  40f136:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  40f13b:	xor    eax,0x1f
  40f13e:	sub    r14d,eax
  40f141:	mov    rcx,rsi
  40f144:	call   0x4105c0
  40f149:	test   eax,eax
  40f14b:	mov    DWORD PTR [rsp+0x9c],eax
  40f152:	mov    r11d,r13d
  40f155:	jne    0x40f630
  40f15b:	mov    ecx,DWORD PTR [rsi+0x14]
  40f15e:	test   ecx,ecx
  40f160:	jne    0x40f210
  40f166:	mov    rcx,rsi
  40f169:	call   0x410830
  40f16e:	mov    rax,QWORD PTR [rsp+0x130]
  40f176:	mov    rdx,QWORD PTR [rsp+0x138]
  40f17e:	lea    rcx,[rip+0x9148]        # 0x4182cd
  40f185:	mov    r8d,0x1
  40f18b:	mov    DWORD PTR [rax],0x1
  40f191:	call   0x40ee60
  40f196:	nop
  40f197:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  40f19f:	add    rsp,0xb8
  40f1a6:	pop    rbx
  40f1a7:	pop    rsi
  40f1a8:	pop    rdi
  40f1a9:	pop    rbp
  40f1aa:	pop    r12
  40f1ac:	pop    r13
  40f1ae:	pop    r14
  40f1b0:	pop    r15
  40f1b2:	ret    
  40f1b3:	mov    rax,QWORD PTR [rsp+0x130]
  40f1bb:	mov    rdx,QWORD PTR [rsp+0x138]
  40f1c3:	lea    rcx,[rip+0x90ff]        # 0x4182c9
  40f1ca:	mov    r8d,0x3
  40f1d0:	mov    DWORD PTR [rax],0xffff8000
  40f1d6:	call   0x40ee60
  40f1db:	jmp    0x40f197
  40f1dd:	nop    DWORD PTR [rax]
  40f1e0:	mov    rax,QWORD PTR [rsp+0x130]
  40f1e8:	mov    rdx,QWORD PTR [rsp+0x138]
  40f1f0:	lea    rcx,[rip+0x90c9]        # 0x4182c0
  40f1f7:	mov    r8d,0x8
  40f1fd:	mov    DWORD PTR [rax],0xffff8000
  40f203:	call   0x40ee60
  40f208:	jmp    0x40f197
  40f20a:	nop    WORD PTR [rax+rax*1+0x0]
  40f210:	lea    rdx,[rsp+0x9c]
  40f218:	mov    rcx,rsi
  40f21b:	mov    DWORD PTR [rsp+0x30],r11d
  40f220:	call   0x410ee0
  40f225:	movq   rdx,xmm0
  40f22a:	movq   r9,xmm0
  40f22f:	mov    r11d,DWORD PTR [rsp+0x30]
  40f234:	pxor   xmm0,xmm0
  40f238:	shr    rdx,0x20
  40f23c:	mov    r9d,r9d
  40f23f:	and    edx,0xfffff
  40f245:	lea    ecx,[r11+r14*1-0x1]
  40f24a:	or     edx,0x3ff00000
  40f250:	mov    rax,rdx
  40f253:	cvtsi2sd xmm0,ecx
  40f257:	shl    rax,0x20
  40f25b:	mov    ebx,ecx
  40f25d:	or     r9,rax
  40f260:	sar    ebx,0x1f
  40f263:	mov    QWORD PTR [rsp+0x30],r9
  40f268:	mov    eax,ebx
  40f26a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  40f270:	xor    eax,ecx
  40f272:	sub    eax,ebx
  40f274:	subsd  xmm1,QWORD PTR [rip+0x906c]        # 0x4182e8
  40f27c:	sub    eax,0x435
  40f281:	test   eax,eax
  40f283:	mulsd  xmm0,QWORD PTR [rip+0x9075]        # 0x418300
  40f28b:	mulsd  xmm1,QWORD PTR [rip+0x905d]        # 0x4182f0
  40f293:	addsd  xmm1,QWORD PTR [rip+0x905d]        # 0x4182f8
  40f29b:	addsd  xmm1,xmm0
  40f29f:	jle    0x40f2b5
  40f2a1:	pxor   xmm0,xmm0
  40f2a5:	cvtsi2sd xmm0,eax
  40f2a9:	mulsd  xmm0,QWORD PTR [rip+0x9057]        # 0x418308
  40f2b1:	addsd  xmm1,xmm0
  40f2b5:	cvttsd2si eax,xmm1
  40f2b9:	pxor   xmm6,xmm6
  40f2bd:	ucomisd xmm6,xmm1
  40f2c1:	mov    DWORD PTR [rsp+0x30],eax
  40f2c5:	ja     0x40fb53
  40f2cb:	mov    eax,ecx
  40f2cd:	mov    r9d,r9d
  40f2d0:	mov    DWORD PTR [rsp+0x6c],0x1
  40f2d8:	shl    eax,0x14
  40f2db:	add    eax,edx
  40f2dd:	shl    rax,0x20
  40f2e1:	or     r9,rax
  40f2e4:	cmp    DWORD PTR [rsp+0x30],0x16
  40f2e9:	mov    QWORD PTR [rsp+0x80],r9
  40f2f1:	ja     0x40f320
  40f2f3:	movsxd rax,DWORD PTR [rsp+0x30]
  40f2f8:	mov    rdx,QWORD PTR [rip+0x9351]        # 0x418650
  40f2ff:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  40f304:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  40f30d:	jbe    0x40f670
  40f313:	sub    DWORD PTR [rsp+0x30],0x1
  40f318:	mov    DWORD PTR [rsp+0x6c],0x0
  40f320:	mov    eax,r14d
  40f323:	mov    DWORD PTR [rsp+0x50],0x0
  40f32b:	sub    eax,ecx
  40f32d:	sub    eax,0x1
  40f330:	mov    DWORD PTR [rsp+0x40],eax
  40f334:	js     0x40fb40
  40f33a:	mov    eax,DWORD PTR [rsp+0x30]
  40f33e:	test   eax,eax
  40f340:	js     0x40fb20
  40f346:	add    DWORD PTR [rsp+0x40],eax
  40f34a:	mov    DWORD PTR [rsp+0x88],eax
  40f351:	mov    DWORD PTR [rsp+0x58],0x0
  40f359:	cmp    DWORD PTR [rsp+0x120],0x9
  40f361:	ja     0x40f650
  40f367:	cmp    DWORD PTR [rsp+0x120],0x5
  40f36f:	jle    0x40f65b
  40f375:	sub    DWORD PTR [rsp+0x120],0x4
  40f37d:	xor    eax,eax
  40f37f:	cmp    DWORD PTR [rsp+0x120],0x3
  40f387:	je     0x40fd14
  40f38d:	jle    0x40fa73
  40f393:	cmp    DWORD PTR [rsp+0x120],0x4
  40f39b:	mov    DWORD PTR [rsp+0x60],0x1
  40f3a3:	je     0x40f680
  40f3a9:	cmp    DWORD PTR [rsp+0x120],0x5
  40f3b1:	jne    0x40fa89
  40f3b7:	mov    ebx,DWORD PTR [rsp+0x30]
  40f3bb:	add    ebx,DWORD PTR [rsp+0x128]
  40f3c2:	mov    DWORD PTR [rsp+0x8c],ebx
  40f3c9:	add    ebx,0x1
  40f3cc:	test   ebx,ebx
  40f3ce:	mov    DWORD PTR [rsp+0x68],ebx
  40f3d2:	mov    ecx,ebx
  40f3d4:	jle    0x40ff50
  40f3da:	cmp    ebx,0xe
  40f3dd:	mov    DWORD PTR [rsp+0x9c],ebx
  40f3e4:	setbe  bl
  40f3e7:	and    ebx,eax
  40f3e9:	mov    QWORD PTR [rsp+0x78],r9
  40f3ee:	mov    DWORD PTR [rsp+0x70],r11d
  40f3f3:	call   0x40ee30
  40f3f8:	mov    QWORD PTR [rsp+0x48],rax
  40f3fd:	mov    eax,DWORD PTR [rbp+0xc]
  40f400:	mov    r11d,DWORD PTR [rsp+0x70]
  40f405:	mov    r9,QWORD PTR [rsp+0x78]
  40f40a:	sub    eax,0x1
  40f40d:	mov    DWORD PTR [rsp+0x38],eax
  40f411:	je     0x40f438
  40f413:	mov    ecx,DWORD PTR [rsp+0x38]
  40f417:	mov    eax,0x2
  40f41c:	test   ecx,ecx
  40f41e:	cmovns eax,ecx
  40f421:	and    r12d,0x8
  40f425:	mov    DWORD PTR [rsp+0x38],eax
  40f429:	je     0x40f438
  40f42b:	mov    eax,0x3
  40f430:	sub    eax,DWORD PTR [rsp+0x38]
  40f434:	mov    DWORD PTR [rsp+0x38],eax
  40f438:	test   bl,bl
  40f43a:	je     0x40f730
  40f440:	mov    eax,DWORD PTR [rsp+0x38]
  40f444:	or     eax,DWORD PTR [rsp+0x30]
  40f448:	jne    0x40f730
  40f44e:	mov    eax,DWORD PTR [rsp+0x6c]
  40f452:	mov    DWORD PTR [rsp+0x9c],0x0
  40f45d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  40f466:	test   eax,eax
  40f468:	je     0x40f47c
  40f46a:	movsd  xmm0,QWORD PTR [rip+0x8ea6]        # 0x418318
  40f472:	ucomisd xmm0,xmm4
  40f476:	ja     0x4102ab
  40f47c:	movapd xmm0,xmm4
  40f480:	mov    r12d,DWORD PTR [rsp+0x68]
  40f485:	addsd  xmm0,xmm4
  40f489:	addsd  xmm0,QWORD PTR [rip+0x8e9f]        # 0x418330
  40f491:	movq   rdx,xmm0
  40f496:	movq   rax,xmm0
  40f49b:	shr    rdx,0x20
  40f49f:	mov    eax,eax
  40f4a1:	sub    edx,0x3400000
  40f4a7:	shl    rdx,0x20
  40f4ab:	or     rax,rdx
  40f4ae:	test   r12d,r12d
  40f4b1:	je     0x40f6e7
  40f4b7:	mov    r9d,DWORD PTR [rsp+0x68]
  40f4bc:	movapd xmm0,xmm4
  40f4c0:	xor    ecx,ecx
  40f4c2:	mov    ebx,DWORD PTR [rsp+0x60]
  40f4c6:	lea    edx,[r9-0x1]
  40f4ca:	movsxd rdx,edx
  40f4cd:	test   ebx,ebx
  40f4cf:	je     0x40fff3
  40f4d5:	mov    r10,QWORD PTR [rip+0x9174]        # 0x418650
  40f4dc:	movsd  xmm1,QWORD PTR [rip+0x8e6c]        # 0x418350
  40f4e4:	mov    QWORD PTR [rsp+0x38],rax
  40f4e9:	cvttsd2si eax,xmm0
  40f4ed:	pxor   xmm2,xmm2
  40f4f1:	mov    DWORD PTR [rsp+0x9c],0x0
  40f4fc:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  40f502:	mov    rdx,QWORD PTR [rsp+0x48]
  40f507:	mov    rbx,rdx
  40f50a:	add    rbx,0x1
  40f50e:	cvtsi2sd xmm2,eax
  40f512:	add    eax,0x30
  40f515:	mov    BYTE PTR [rdx],al
  40f517:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f51d:	subsd  xmm0,xmm2
  40f521:	subsd  xmm1,xmm5
  40f525:	ucomisd xmm1,xmm0
  40f529:	ja     0x40f5c4
  40f52f:	movsd  xmm5,QWORD PTR [rip+0x8de1]        # 0x418318
  40f537:	movapd xmm2,xmm5
  40f53b:	subsd  xmm2,xmm0
  40f53f:	ucomisd xmm1,xmm2
  40f543:	ja     0x4100c7
  40f549:	mov    eax,DWORD PTR [rsp+0x9c]
  40f550:	movsd  xmm3,QWORD PTR [rip+0x8dc8]        # 0x418320
  40f558:	add    eax,0x1
  40f55b:	cmp    r9d,eax
  40f55e:	mov    DWORD PTR [rsp+0x9c],eax
  40f565:	jg     0x40f59c
  40f567:	jmp    0x40f71e
  40f56c:	nop    DWORD PTR [rax+0x0]
  40f570:	movapd xmm2,xmm5
  40f574:	subsd  xmm2,xmm0
  40f578:	ucomisd xmm1,xmm2
  40f57c:	ja     0x4100c7
  40f582:	mov    eax,DWORD PTR [rsp+0x9c]
  40f589:	add    eax,0x1
  40f58c:	cmp    r9d,eax
  40f58f:	mov    DWORD PTR [rsp+0x9c],eax
  40f596:	jle    0x40f71e
  40f59c:	mulsd  xmm0,xmm3
  40f5a0:	add    rbx,0x1
  40f5a4:	pxor   xmm2,xmm2
  40f5a8:	mulsd  xmm1,xmm3
  40f5ac:	cvttsd2si eax,xmm0
  40f5b0:	cvtsi2sd xmm2,eax
  40f5b4:	add    eax,0x30
  40f5b7:	mov    BYTE PTR [rbx-0x1],al
  40f5ba:	subsd  xmm0,xmm2
  40f5be:	ucomisd xmm1,xmm0
  40f5c2:	jbe    0x40f570
  40f5c4:	ucomisd xmm0,xmm6
  40f5c8:	lea    ebp,[rcx+0x1]
  40f5cb:	jp     0x40f5d3
  40f5cd:	je     0x40ff27
  40f5d3:	mov    r15d,0x10
  40f5d9:	nop    DWORD PTR [rax+0x0]
  40f5e0:	mov    rcx,rsi
  40f5e3:	call   0x410830
  40f5e8:	cmp    QWORD PTR [rsp+0x138],0x0
  40f5f1:	mov    rax,QWORD PTR [rsp+0x130]
  40f5f9:	mov    BYTE PTR [rbx],0x0
  40f5fc:	mov    DWORD PTR [rax],ebp
  40f5fe:	je     0x40f60b
  40f600:	mov    rax,QWORD PTR [rsp+0x138]
  40f608:	mov    QWORD PTR [rax],rbx
  40f60b:	mov    rax,QWORD PTR [rsp+0x28]
  40f610:	or     DWORD PTR [rax],r15d
  40f613:	mov    rax,QWORD PTR [rsp+0x48]
  40f618:	jmp    0x40f197
  40f61d:	nop    DWORD PTR [rax]
  40f620:	mov    DWORD PTR [rsi+0x14],0x0
  40f627:	jmp    0x40f141
  40f62c:	nop    DWORD PTR [rax+0x0]
  40f630:	mov    edx,eax
  40f632:	mov    rcx,rsi
  40f635:	call   0x4104c0
  40f63a:	mov    eax,DWORD PTR [rsp+0x9c]
  40f641:	lea    r11d,[r13+rax*1+0x0]
  40f646:	sub    r14d,eax
  40f649:	jmp    0x40f15b
  40f64e:	xchg   ax,ax
  40f650:	mov    DWORD PTR [rsp+0x120],0x0
  40f65b:	add    ecx,0x3fe
  40f661:	cmp    ecx,0x7f7
  40f667:	setbe  al
  40f66a:	jmp    0x40f37f
  40f66f:	nop
  40f670:	mov    DWORD PTR [rsp+0x6c],0x0
  40f678:	jmp    0x40f320
  40f67d:	nop    DWORD PTR [rax]
  40f680:	mov    edx,DWORD PTR [rsp+0x128]
  40f687:	test   edx,edx
  40f689:	jle    0x40ff3b
  40f68f:	cmp    DWORD PTR [rsp+0x128],0xe
  40f697:	setbe  bl
  40f69a:	mov    ecx,DWORD PTR [rsp+0x128]
  40f6a1:	and    ebx,eax
  40f6a3:	mov    DWORD PTR [rsp+0x9c],ecx
  40f6aa:	mov    DWORD PTR [rsp+0x8c],ecx
  40f6b1:	mov    DWORD PTR [rsp+0x68],ecx
  40f6b5:	jmp    0x40f3e9
  40f6ba:	movapd xmm0,xmm4
  40f6be:	addsd  xmm0,xmm4
  40f6c2:	addsd  xmm0,QWORD PTR [rip+0x8c66]        # 0x418330
  40f6ca:	movq   rdx,xmm0
  40f6cf:	movq   rax,xmm0
  40f6d4:	shr    rdx,0x20
  40f6d8:	mov    eax,eax
  40f6da:	sub    edx,0x3400000
  40f6e0:	shl    rdx,0x20
  40f6e4:	or     rax,rdx
  40f6e7:	movapd xmm1,xmm4
  40f6eb:	mov    QWORD PTR [rsp+0x38],rax
  40f6f0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40f6f6:	subsd  xmm1,QWORD PTR [rip+0x8c3a]        # 0x418338
  40f6fe:	ucomisd xmm1,xmm0
  40f702:	ja     0x40ffe4
  40f708:	movsd  xmm2,QWORD PTR [rip+0x8c30]        # 0x418340
  40f710:	xorpd  xmm0,xmm2
  40f714:	ucomisd xmm0,xmm1
  40f718:	ja     0x40fafd
  40f71e:	movq   r9,xmm4
  40f723:	mov    DWORD PTR [rsp+0x38],0x0
  40f72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f730:	test   r11d,r11d
  40f733:	js     0x40f7d2
  40f739:	movsxd rax,DWORD PTR [rsp+0x30]
  40f73e:	cmp    eax,DWORD PTR [rbp+0x14]
  40f741:	jg     0x40f7d2
  40f747:	mov    ebx,DWORD PTR [rsp+0x68]
  40f74b:	mov    rdx,QWORD PTR [rip+0x8efe]        # 0x418650
  40f752:	test   ebx,ebx
  40f754:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  40f759:	jg     0x40fe63
  40f75f:	mov    eax,DWORD PTR [rsp+0x128]
  40f766:	shr    eax,0x1f
  40f769:	test   al,al
  40f76b:	je     0x40fe63
  40f771:	test   ebx,ebx
  40f773:	jne    0x40fafd
  40f779:	mulsd  xmm2,QWORD PTR [rip+0x8bb7]        # 0x418338
  40f781:	mov    QWORD PTR [rsp+0x38],r9
  40f786:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f78c:	ucomisd xmm2,xmm5
  40f790:	jae    0x40fafd
  40f796:	mov    ebp,DWORD PTR [rsp+0x30]
  40f79a:	xor    r12d,r12d
  40f79d:	xor    edi,edi
  40f79f:	add    ebp,0x2
  40f7a2:	mov    rax,QWORD PTR [rsp+0x48]
  40f7a7:	mov    r15d,0x20
  40f7ad:	lea    rbx,[rax+0x1]
  40f7b1:	mov    BYTE PTR [rax],0x31
  40f7b4:	mov    rcx,r12
  40f7b7:	call   0x410830
  40f7bc:	test   rdi,rdi
  40f7bf:	je     0x40f5e0
  40f7c5:	mov    rcx,rdi
  40f7c8:	call   0x410830
  40f7cd:	jmp    0x40f5e0
  40f7d2:	mov    r9d,DWORD PTR [rsp+0x60]
  40f7d7:	test   r9d,r9d
  40f7da:	je     0x40fce0
  40f7e0:	mov    edx,DWORD PTR [rbp+0x4]
  40f7e3:	sub    edi,r14d
  40f7e6:	mov    ecx,r11d
  40f7e9:	lea    eax,[rdi+0x1]
  40f7ec:	sub    ecx,edi
  40f7ee:	cmp    ecx,edx
  40f7f0:	mov    DWORD PTR [rsp+0x9c],eax
  40f7f7:	jge    0x40f82c
  40f7f9:	mov    ebx,DWORD PTR [rsp+0x120]
  40f800:	lea    ecx,[rbx-0x3]
  40f803:	and    ecx,0xfffffffd
  40f806:	je     0x40f82c
  40f808:	mov    ebx,DWORD PTR [rsp+0x68]
  40f80c:	sub    r11d,edx
  40f80f:	lea    eax,[r11+0x1]
  40f813:	test   ebx,ebx
  40f815:	mov    DWORD PTR [rsp+0x9c],eax
  40f81c:	setg   cl
  40f81f:	cmp    ebx,eax
  40f821:	setl   dl
  40f824:	test   cl,dl
  40f826:	je     0x40ff6f
  40f82c:	cmp    DWORD PTR [rsp+0x120],0x1
  40f834:	jle    0x40ff6f
  40f83a:	mov    ebx,DWORD PTR [rsp+0x58]
  40f83e:	mov    eax,DWORD PTR [rsp+0x68]
  40f842:	mov    r12d,ebx
  40f845:	sub    eax,0x1
  40f848:	sub    r12d,eax
  40f84b:	cmp    ebx,eax
  40f84d:	jge    0x40f863
  40f84f:	mov    edx,eax
  40f851:	sub    edx,DWORD PTR [rsp+0x58]
  40f855:	xor    r12d,r12d
  40f858:	add    DWORD PTR [rsp+0x88],edx
  40f85f:	mov    DWORD PTR [rsp+0x58],eax
  40f863:	mov    eax,DWORD PTR [rsp+0x68]
  40f867:	test   eax,eax
  40f869:	js     0x410202
  40f86f:	mov    ebx,DWORD PTR [rsp+0x50]
  40f873:	mov    DWORD PTR [rsp+0x9c],eax
  40f87a:	mov    ecx,0x1
  40f87f:	add    DWORD PTR [rsp+0x50],eax
  40f883:	add    DWORD PTR [rsp+0x40],eax
  40f887:	call   0x410960
  40f88c:	mov    rdi,rax
  40f88f:	mov    ecx,DWORD PTR [rsp+0x40]
  40f893:	test   ecx,ecx
  40f895:	mov    eax,ecx
  40f897:	jle    0x40f8b5
  40f899:	test   ebx,ebx
  40f89b:	jle    0x40f8b5
  40f89d:	cmp    ecx,ebx
  40f89f:	cmovg  eax,ebx
  40f8a2:	sub    DWORD PTR [rsp+0x50],eax
  40f8a6:	sub    ecx,eax
  40f8a8:	mov    DWORD PTR [rsp+0x9c],eax
  40f8af:	sub    ebx,eax
  40f8b1:	mov    DWORD PTR [rsp+0x40],ecx
  40f8b5:	mov    r8d,DWORD PTR [rsp+0x58]
  40f8ba:	test   r8d,r8d
  40f8bd:	jle    0x40f90b
  40f8bf:	mov    ecx,DWORD PTR [rsp+0x60]
  40f8c3:	test   ecx,ecx
  40f8c5:	je     0x40fd00
  40f8cb:	test   r12d,r12d
  40f8ce:	jle    0x40f8fe
  40f8d0:	mov    rcx,rdi
  40f8d3:	mov    edx,r12d
  40f8d6:	call   0x410ac0
  40f8db:	mov    rdx,rsi
  40f8de:	mov    rcx,rax
  40f8e1:	mov    rdi,rax
  40f8e4:	call   0x410990
  40f8e9:	mov    rcx,rsi
  40f8ec:	mov    QWORD PTR [rsp+0x70],rax
  40f8f1:	call   0x410830
  40f8f6:	mov    rax,QWORD PTR [rsp+0x70]
  40f8fb:	mov    rsi,rax
  40f8fe:	mov    edx,DWORD PTR [rsp+0x58]
  40f902:	sub    edx,r12d
  40f905:	jne    0x40fd04
  40f90b:	mov    ecx,0x1
  40f910:	call   0x410960
  40f915:	mov    r12,rax
  40f918:	mov    eax,DWORD PTR [rsp+0x88]
  40f91f:	test   eax,eax
  40f921:	jle    0x40fa50
  40f927:	mov    rcx,r12
  40f92a:	mov    edx,eax
  40f92c:	call   0x410ac0
  40f931:	cmp    DWORD PTR [rsp+0x120],0x1
  40f939:	mov    r12,rax
  40f93c:	jg     0x40f948
  40f93e:	cmp    r14d,0x1
  40f942:	je     0x40fa0c
  40f948:	xor    ebp,ebp
  40f94a:	mov    eax,DWORD PTR [r12+0x14]
  40f94f:	sub    eax,0x1
  40f952:	cdqe   
  40f954:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  40f95a:	xor    eax,0x1f
  40f95d:	sub    eax,DWORD PTR [rsp+0x40]
  40f961:	mov    edx,DWORD PTR [rsp+0x50]
  40f965:	sub    eax,0x4
  40f968:	and    eax,0x1f
  40f96b:	add    edx,eax
  40f96d:	mov    r13d,eax
  40f970:	mov    DWORD PTR [rsp+0x9c],eax
  40f977:	test   edx,edx
  40f979:	mov    ecx,eax
  40f97b:	jle    0x40f98f
  40f97d:	mov    rcx,rsi
  40f980:	call   0x410c30
  40f985:	mov    ecx,DWORD PTR [rsp+0x9c]
  40f98c:	mov    rsi,rax
  40f98f:	mov    edx,DWORD PTR [rsp+0x40]
  40f993:	add    edx,ecx
  40f995:	test   edx,edx
  40f997:	jle    0x40f9a4
  40f999:	mov    rcx,r12
  40f99c:	call   0x410c30
  40f9a1:	mov    r12,rax
  40f9a4:	mov    eax,DWORD PTR [rsp+0x6c]
  40f9a8:	test   eax,eax
  40f9aa:	jne    0x40fd21
  40f9b0:	mov    r14d,DWORD PTR [rsp+0x68]
  40f9b5:	test   r14d,r14d
  40f9b8:	jg     0x40fb71
  40f9be:	cmp    DWORD PTR [rsp+0x120],0x2
  40f9c6:	jle    0x40fb71
  40f9cc:	mov    r11d,DWORD PTR [rsp+0x68]
  40f9d1:	test   r11d,r11d
  40f9d4:	jne    0x40fb02
  40f9da:	xor    r8d,r8d
  40f9dd:	mov    rcx,r12
  40f9e0:	mov    edx,0x5
  40f9e5:	call   0x4108a0
  40f9ea:	mov    rcx,rsi
  40f9ed:	mov    rdx,rax
  40f9f0:	mov    r12,rax
  40f9f3:	call   0x410d50
  40f9f8:	test   eax,eax
  40f9fa:	jle    0x40fb02
  40fa00:	mov    ebp,DWORD PTR [rsp+0x30]
  40fa04:	add    ebp,0x2
  40fa07:	jmp    0x40f7a2
  40fa0c:	mov    eax,DWORD PTR [rbp+0x4]
  40fa0f:	add    eax,0x1
  40fa12:	cmp    r13d,eax
  40fa15:	jle    0x40f948
  40fa1b:	add    DWORD PTR [rsp+0x50],0x1
  40fa20:	add    DWORD PTR [rsp+0x40],0x1
  40fa25:	mov    ebp,0x1
  40fa2a:	nop    WORD PTR [rax+rax*1+0x0]
  40fa30:	mov    edx,DWORD PTR [rsp+0x88]
  40fa37:	mov    eax,0x1f
  40fa3c:	test   edx,edx
  40fa3e:	je     0x40f95d
  40fa44:	jmp    0x40f94a
  40fa49:	nop    DWORD PTR [rax+0x0]
  40fa50:	cmp    DWORD PTR [rsp+0x120],0x1
  40fa58:	jg     0x40fa60
  40fa5a:	cmp    r14d,0x1
  40fa5e:	je     0x40fa64
  40fa60:	xor    ebp,ebp
  40fa62:	jmp    0x40fa30
  40fa64:	mov    eax,DWORD PTR [rbp+0x4]
  40fa67:	xor    ebp,ebp
  40fa69:	add    eax,0x1
  40fa6c:	cmp    r13d,eax
  40fa6f:	jle    0x40fa30
  40fa71:	jmp    0x40fa1b
  40fa73:	cmp    DWORD PTR [rsp+0x120],0x2
  40fa7b:	mov    DWORD PTR [rsp+0x60],0x0
  40fa83:	je     0x40f680
  40fa89:	pxor   xmm0,xmm0
  40fa8d:	mov    QWORD PTR [rsp+0x60],r9
  40fa92:	mov    DWORD PTR [rsp+0x68],r11d
  40fa97:	cvtsi2sd xmm0,edi
  40fa9b:	mulsd  xmm0,QWORD PTR [rip+0x886d]        # 0x418310
  40faa3:	cvttsd2si ecx,xmm0
  40faa7:	add    ecx,0x3
  40faaa:	mov    DWORD PTR [rsp+0x9c],ecx
  40fab1:	call   0x40ee30
  40fab6:	mov    QWORD PTR [rsp+0x48],rax
  40fabb:	mov    eax,DWORD PTR [rbp+0xc]
  40fabe:	mov    r11d,DWORD PTR [rsp+0x68]
  40fac3:	mov    r9,QWORD PTR [rsp+0x60]
  40fac8:	sub    eax,0x1
  40facb:	mov    DWORD PTR [rsp+0x38],eax
  40facf:	jne    0x40ff7d
  40fad5:	mov    eax,0xffffffff
  40fada:	mov    DWORD PTR [rsp+0x60],0x1
  40fae2:	mov    DWORD PTR [rsp+0x128],0x0
  40faed:	mov    DWORD PTR [rsp+0x8c],eax
  40faf4:	mov    DWORD PTR [rsp+0x68],eax
  40faf8:	jmp    0x40f730
  40fafd:	xor    r12d,r12d
  40fb00:	xor    edi,edi
  40fb02:	mov    ebp,DWORD PTR [rsp+0x128]
  40fb09:	mov    rbx,QWORD PTR [rsp+0x48]
  40fb0e:	mov    r15d,0x10
  40fb14:	neg    ebp
  40fb16:	jmp    0x40f7b4
  40fb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb20:	mov    eax,DWORD PTR [rsp+0x30]
  40fb24:	sub    DWORD PTR [rsp+0x50],eax
  40fb28:	mov    DWORD PTR [rsp+0x88],0x0
  40fb33:	neg    eax
  40fb35:	mov    DWORD PTR [rsp+0x58],eax
  40fb39:	jmp    0x40f359
  40fb3e:	xchg   ax,ax
  40fb40:	neg    eax
  40fb42:	mov    DWORD PTR [rsp+0x40],0x0
  40fb4a:	mov    DWORD PTR [rsp+0x50],eax
  40fb4e:	jmp    0x40f33a
  40fb53:	pxor   xmm0,xmm0
  40fb57:	cvtsi2sd xmm0,eax
  40fb5b:	ucomisd xmm0,xmm1
  40fb5f:	jp     0x40fb67
  40fb61:	je     0x40f2cb
  40fb67:	sub    DWORD PTR [rsp+0x30],0x1
  40fb6c:	jmp    0x40f2cb
  40fb71:	mov    r10d,DWORD PTR [rsp+0x60]
  40fb76:	test   r10d,r10d
  40fb79:	je     0x40fd80
  40fb7f:	lea    edx,[rbx+r13*1]
  40fb83:	test   edx,edx
  40fb85:	jle    0x40fb92
  40fb87:	mov    rcx,rdi
  40fb8a:	call   0x410c30
  40fb8f:	mov    rdi,rax
  40fb92:	test   ebp,ebp
  40fb94:	mov    r13,rdi
  40fb97:	jne    0x410235
  40fb9d:	mov    DWORD PTR [rsp+0x9c],0x1
  40fba8:	mov    rbx,QWORD PTR [rsp+0x48]
  40fbad:	mov    QWORD PTR [rsp+0x40],r12
  40fbb2:	mov    QWORD PTR [rsp+0x50],r15
  40fbb7:	jmp    0x40fc7e
  40fbbc:	nop    DWORD PTR [rax+0x0]
  40fbc0:	mov    rcx,r8
  40fbc3:	call   0x410830
  40fbc8:	mov    eax,r12d
  40fbcb:	or     eax,DWORD PTR [rsp+0x120]
  40fbd2:	jne    0x40fbea
  40fbd4:	mov    ecx,DWORD PTR [rsp+0x38]
  40fbd8:	test   ecx,ecx
  40fbda:	jne    0x40fbea
  40fbdc:	mov    rax,QWORD PTR [rsp+0x50]
  40fbe1:	test   BYTE PTR [rax],0x1
  40fbe4:	je     0x4103a5
  40fbea:	test   r14d,r14d
  40fbed:	js     0x410100
  40fbf3:	or     r14d,DWORD PTR [rsp+0x120]
  40fbfb:	jne    0x40fc0b
  40fbfd:	mov    rax,QWORD PTR [rsp+0x50]
  40fc02:	test   BYTE PTR [rax],0x1
  40fc05:	je     0x410100
  40fc0b:	test   r12d,r12d
  40fc0e:	jle    0x40fc1b
  40fc10:	cmp    DWORD PTR [rsp+0x38],0x2
  40fc15:	jne    0x41030f
  40fc1b:	add    rbx,0x1
  40fc1f:	mov    BYTE PTR [rbx-0x1],bpl
  40fc23:	mov    eax,DWORD PTR [rsp+0x68]
  40fc27:	cmp    DWORD PTR [rsp+0x9c],eax
  40fc2e:	je     0x41029b
  40fc34:	xor    r8d,r8d
  40fc37:	mov    rcx,rsi
  40fc3a:	mov    edx,0xa
  40fc3f:	call   0x4108a0
  40fc44:	xor    r8d,r8d
  40fc47:	cmp    rdi,r13
  40fc4a:	mov    rsi,rax
  40fc4d:	mov    edx,0xa
  40fc52:	mov    rcx,rdi
  40fc55:	je     0x40fcf0
  40fc5b:	call   0x4108a0
  40fc60:	mov    rcx,r13
  40fc63:	xor    r8d,r8d
  40fc66:	mov    edx,0xa
  40fc6b:	mov    rdi,rax
  40fc6e:	call   0x4108a0
  40fc73:	mov    r13,rax
  40fc76:	add    DWORD PTR [rsp+0x9c],0x1
  40fc7e:	mov    r12,QWORD PTR [rsp+0x40]
  40fc83:	mov    rcx,rsi
  40fc86:	mov    rdx,r12
  40fc89:	call   0x40eed0
  40fc8e:	mov    rdx,rdi
  40fc91:	mov    rcx,rsi
  40fc94:	mov    r15d,eax
  40fc97:	lea    ebp,[rax+0x30]
  40fc9a:	call   0x410d50
  40fc9f:	mov    rcx,r12
  40fca2:	mov    rdx,r13
  40fca5:	mov    r14d,eax
  40fca8:	call   0x410da0
  40fcad:	mov    r9d,DWORD PTR [rax+0x10]
  40fcb1:	mov    r8,rax
  40fcb4:	mov    r12d,0x1
  40fcba:	test   r9d,r9d
  40fcbd:	jne    0x40fbc0
  40fcc3:	mov    rdx,rax
  40fcc6:	mov    rcx,rsi
  40fcc9:	mov    QWORD PTR [rsp+0x58],rax
  40fcce:	call   0x410d50
  40fcd3:	mov    r8,QWORD PTR [rsp+0x58]
  40fcd8:	mov    r12d,eax
  40fcdb:	jmp    0x40fbc0
  40fce0:	mov    r12d,DWORD PTR [rsp+0x58]
  40fce5:	mov    ebx,DWORD PTR [rsp+0x50]
  40fce9:	xor    edi,edi
  40fceb:	jmp    0x40f88f
  40fcf0:	call   0x4108a0
  40fcf5:	mov    rdi,rax
  40fcf8:	mov    r13,rax
  40fcfb:	jmp    0x40fc76
  40fd00:	mov    edx,DWORD PTR [rsp+0x58]
  40fd04:	mov    rcx,rsi
  40fd07:	call   0x410ac0
  40fd0c:	mov    rsi,rax
  40fd0f:	jmp    0x40f90b
  40fd14:	mov    DWORD PTR [rsp+0x60],0x0
  40fd1c:	jmp    0x40f3b7
  40fd21:	mov    rdx,r12
  40fd24:	mov    rcx,rsi
  40fd27:	call   0x410d50
  40fd2c:	test   eax,eax
  40fd2e:	jns    0x40f9b0
  40fd34:	xor    r8d,r8d
  40fd37:	mov    rcx,rsi
  40fd3a:	mov    edx,0xa
  40fd3f:	sub    DWORD PTR [rsp+0x30],0x1
  40fd44:	call   0x4108a0
  40fd49:	mov    rsi,rax
  40fd4c:	mov    eax,DWORD PTR [rsp+0x60]
  40fd50:	test   eax,eax
  40fd52:	jne    0x410418
  40fd58:	mov    eax,DWORD PTR [rsp+0x8c]
  40fd5f:	test   eax,eax
  40fd61:	jg     0x40fd75
  40fd63:	cmp    DWORD PTR [rsp+0x120],0x2
  40fd6b:	mov    DWORD PTR [rsp+0x68],eax
  40fd6f:	jg     0x40f9cc
  40fd75:	mov    eax,DWORD PTR [rsp+0x8c]
  40fd7c:	mov    DWORD PTR [rsp+0x68],eax
  40fd80:	mov    DWORD PTR [rsp+0x9c],0x1
  40fd8b:	mov    rbx,QWORD PTR [rsp+0x48]
  40fd90:	mov    r13d,DWORD PTR [rsp+0x68]
  40fd95:	jmp    0x40fdbb
  40fd97:	nop    WORD PTR [rax+rax*1+0x0]
  40fda0:	mov    rcx,rsi
  40fda3:	xor    r8d,r8d
  40fda6:	mov    edx,0xa
  40fdab:	call   0x4108a0
  40fdb0:	add    DWORD PTR [rsp+0x9c],0x1
  40fdb8:	mov    rsi,rax
  40fdbb:	mov    rdx,r12
  40fdbe:	mov    rcx,rsi
  40fdc1:	add    rbx,0x1
  40fdc5:	call   0x40eed0
  40fdca:	lea    ebp,[rax+0x30]
  40fdcd:	mov    BYTE PTR [rbx-0x1],bpl
  40fdd1:	cmp    DWORD PTR [rsp+0x9c],r13d
  40fdd9:	jl     0x40fda0
  40fddb:	xor    r14d,r14d
  40fdde:	mov    eax,DWORD PTR [rsp+0x38]
  40fde2:	test   eax,eax
  40fde4:	je     0x4101ac
  40fdea:	cmp    eax,0x2
  40fded:	je     0x4101dc
  40fdf3:	cmp    DWORD PTR [rsi+0x14],0x1
  40fdf7:	jle    0x410373
  40fdfd:	movzx  edx,BYTE PTR [rbx-0x1]
  40fe01:	mov    rcx,QWORD PTR [rsp+0x48]
  40fe06:	jmp    0x40fe20
  40fe08:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe10:	cmp    rax,rcx
  40fe13:	je     0x40ffcc
  40fe19:	movzx  edx,BYTE PTR [rax-0x1]
  40fe1d:	mov    rbx,rax
  40fe20:	cmp    dl,0x39
  40fe23:	lea    rax,[rbx-0x1]
  40fe27:	je     0x40fe10
  40fe29:	add    edx,0x1
  40fe2c:	mov    r15d,0x20
  40fe32:	mov    BYTE PTR [rax],dl
  40fe34:	mov    rcx,r12
  40fe37:	call   0x410830
  40fe3c:	test   rdi,rdi
  40fe3f:	je     0x40ff2f
  40fe45:	cmp    r14,rdi
  40fe48:	je     0x40fe57
  40fe4a:	test   r14,r14
  40fe4d:	je     0x40fe57
  40fe4f:	mov    rcx,r14
  40fe52:	call   0x410830
  40fe57:	mov    ebp,DWORD PTR [rsp+0x30]
  40fe5b:	add    ebp,0x1
  40fe5e:	jmp    0x40f7c5
  40fe63:	mov    QWORD PTR [rsp+0x40],r9
  40fe68:	mov    rdi,QWORD PTR [rsp+0x48]
  40fe6d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  40fe73:	mov    DWORD PTR [rsp+0x9c],0x1
  40fe7e:	movapd xmm1,xmm0
  40fe82:	mov    rbx,rdi
  40fe85:	add    rbx,0x1
  40fe89:	divsd  xmm1,xmm2
  40fe8d:	cvttsd2si eax,xmm1
  40fe91:	pxor   xmm1,xmm1
  40fe95:	cvtsi2sd xmm1,eax
  40fe99:	lea    edx,[rax+0x30]
  40fe9c:	mov    BYTE PTR [rdi],dl
  40fe9e:	mulsd  xmm1,xmm2
  40fea2:	subsd  xmm0,xmm1
  40fea6:	ucomisd xmm0,xmm6
  40feaa:	jp     0x40feae
  40feac:	je     0x40ff20
  40feae:	mov    edx,DWORD PTR [rsp+0x9c]
  40feb5:	cmp    DWORD PTR [rsp+0x68],edx
  40feb9:	je     0x40ffa7
  40febf:	movsd  xmm3,QWORD PTR [rip+0x8459]        # 0x418320
  40fec7:	movapd xmm4,xmm6
  40fecb:	mov    ecx,DWORD PTR [rsp+0x68]
  40fecf:	jmp    0x40fee0
  40fed1:	mov    edx,DWORD PTR [rsp+0x9c]
  40fed8:	cmp    ecx,edx
  40feda:	je     0x40ffa7
  40fee0:	mulsd  xmm0,xmm3
  40fee4:	add    edx,0x1
  40fee7:	add    rbx,0x1
  40feeb:	mov    DWORD PTR [rsp+0x9c],edx
  40fef2:	movapd xmm1,xmm0
  40fef6:	divsd  xmm1,xmm2
  40fefa:	cvttsd2si eax,xmm1
  40fefe:	pxor   xmm1,xmm1
  40ff02:	cvtsi2sd xmm1,eax
  40ff06:	lea    edx,[rax+0x30]
  40ff09:	mov    BYTE PTR [rbx-0x1],dl
  40ff0c:	mulsd  xmm1,xmm2
  40ff10:	subsd  xmm0,xmm1
  40ff14:	ucomisd xmm0,xmm6
  40ff18:	jp     0x40fed1
  40ff1a:	ucomisd xmm0,xmm4
  40ff1e:	jne    0x40fed1
  40ff20:	mov    ebp,DWORD PTR [rsp+0x30]
  40ff24:	add    ebp,0x1
  40ff27:	xor    r15d,r15d
  40ff2a:	jmp    0x40f5e0
  40ff2f:	mov    ebp,DWORD PTR [rsp+0x30]
  40ff33:	add    ebp,0x1
  40ff36:	jmp    0x40f5e0
  40ff3b:	mov    ebx,0x1
  40ff40:	mov    DWORD PTR [rsp+0x128],0x1
  40ff4b:	jmp    0x40f69a
  40ff50:	cmp    DWORD PTR [rsp+0x68],0xe
  40ff55:	mov    DWORD PTR [rsp+0x9c],0x1
  40ff60:	mov    ecx,0x1
  40ff65:	setbe  bl
  40ff68:	and    ebx,eax
  40ff6a:	jmp    0x40f3e9
  40ff6f:	mov    r12d,DWORD PTR [rsp+0x58]
  40ff74:	mov    ebx,DWORD PTR [rsp+0x50]
  40ff78:	jmp    0x40f87a
  40ff7d:	mov    eax,0xffffffff
  40ff82:	xor    ebx,ebx
  40ff84:	mov    DWORD PTR [rsp+0x60],0x1
  40ff8c:	mov    DWORD PTR [rsp+0x8c],eax
  40ff93:	mov    DWORD PTR [rsp+0x68],eax
  40ff97:	mov    DWORD PTR [rsp+0x128],0x0
  40ffa2:	jmp    0x40f413
  40ffa7:	mov    r10d,DWORD PTR [rsp+0x38]
  40ffac:	test   r10d,r10d
  40ffaf:	je     0x41026e
  40ffb5:	cmp    DWORD PTR [rsp+0x38],0x1
  40ffba:	je     0x410361
  40ffc0:	mov    ebp,DWORD PTR [rsp+0x30]
  40ffc4:	add    ebp,0x1
  40ffc7:	jmp    0x40f5d3
  40ffcc:	mov    rax,QWORD PTR [rsp+0x48]
  40ffd1:	add    DWORD PTR [rsp+0x30],0x1
  40ffd6:	mov    r15d,0x20
  40ffdc:	mov    BYTE PTR [rax],0x31
  40ffdf:	jmp    0x40fe34
  40ffe4:	mov    ebp,0x2
  40ffe9:	xor    r12d,r12d
  40ffec:	xor    edi,edi
  40ffee:	jmp    0x40f7a2
  40fff3:	mov    r10,QWORD PTR [rip+0x8656]        # 0x418650
  40fffa:	mov    QWORD PTR [rsp+0x38],rax
  40ffff:	movsd  xmm3,QWORD PTR [rsp+0x38]
  410005:	mov    DWORD PTR [rsp+0x9c],0x1
  410010:	mov    rbx,QWORD PTR [rsp+0x48]
  410015:	movsd  xmm1,QWORD PTR [rip+0x8303]        # 0x418320
  41001d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  410023:	jmp    0x410033
  410025:	mulsd  xmm0,xmm1
  410029:	add    edx,0x1
  41002c:	mov    DWORD PTR [rsp+0x9c],edx
  410033:	cvttsd2si eax,xmm0
  410037:	test   eax,eax
  410039:	je     0x410047
  41003b:	pxor   xmm2,xmm2
  41003f:	cvtsi2sd xmm2,eax
  410043:	subsd  xmm0,xmm2
  410047:	add    rbx,0x1
  41004b:	add    eax,0x30
  41004e:	mov    BYTE PTR [rbx-0x1],al
  410051:	mov    edx,DWORD PTR [rsp+0x9c]
  410058:	cmp    edx,r9d
  41005b:	jne    0x410025
  41005d:	movsd  xmm1,QWORD PTR [rip+0x82eb]        # 0x418350
  410065:	movapd xmm2,xmm3
  410069:	addsd  xmm2,xmm1
  41006d:	ucomisd xmm0,xmm2
  410071:	ja     0x4100c7
  410073:	subsd  xmm1,xmm3
  410077:	ucomisd xmm1,xmm0
  41007b:	jbe    0x40f71e
  410081:	ucomisd xmm0,xmm6
  410085:	jp     0x41040d
  41008b:	jne    0x41040d
  410091:	xor    r15d,r15d
  410094:	jmp    0x4100a7
  410096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100a0:	movzx  eax,BYTE PTR [rbx-0x2]
  4100a4:	mov    rbx,rdx
  4100a7:	cmp    al,0x30
  4100a9:	lea    rdx,[rbx-0x1]
  4100ad:	je     0x4100a0
  4100af:	lea    ebp,[rcx+0x1]
  4100b2:	jmp    0x40f5e0
  4100b7:	test   al,0x1
  4100b9:	mov    ecx,DWORD PTR [rsp+0x30]
  4100bd:	movzx  eax,BYTE PTR [rbx-0x1]
  4100c1:	je     0x41040d
  4100c7:	mov    r8,QWORD PTR [rsp+0x48]
  4100cc:	jmp    0x4100e0
  4100ce:	xchg   ax,ax
  4100d0:	cmp    rdx,r8
  4100d3:	je     0x41021c
  4100d9:	movzx  eax,BYTE PTR [rdx-0x1]
  4100dd:	mov    rbx,rdx
  4100e0:	cmp    al,0x39
  4100e2:	lea    rdx,[rbx-0x1]
  4100e6:	je     0x4100d0
  4100e8:	mov    QWORD PTR [rsp+0x48],r8
  4100ed:	add    eax,0x1
  4100f0:	mov    BYTE PTR [rdx],al
  4100f2:	lea    ebp,[rcx+0x1]
  4100f5:	mov    r15d,0x20
  4100fb:	jmp    0x40f5e0
  410100:	mov    edx,DWORD PTR [rsp+0x38]
  410104:	mov    eax,r12d
  410107:	mov    r14d,ebp
  41010a:	mov    r12,QWORD PTR [rsp+0x40]
  41010f:	test   edx,edx
  410111:	je     0x410341
  410117:	cmp    DWORD PTR [rsi+0x14],0x1
  41011b:	jle    0x410337
  410121:	cmp    DWORD PTR [rsp+0x38],0x2
  410126:	jne    0x410177
  410128:	jmp    0x410356
  41012d:	nop    DWORD PTR [rax]
  410130:	add    rbx,0x1
  410134:	xor    r8d,r8d
  410137:	mov    rcx,r13
  41013a:	mov    BYTE PTR [rbx-0x1],r14b
  41013e:	mov    edx,0xa
  410143:	call   0x4108a0
  410148:	cmp    rdi,r13
  41014b:	mov    rcx,rsi
  41014e:	mov    edx,0xa
  410153:	cmove  rdi,rax
  410157:	xor    r8d,r8d
  41015a:	mov    rbp,rax
  41015d:	call   0x4108a0
  410162:	mov    rdx,r12
  410165:	mov    rcx,rax
  410168:	mov    rsi,rax
  41016b:	call   0x40eed0
  410170:	lea    r14d,[rax+0x30]
  410174:	mov    r13,rbp
  410177:	mov    rdx,r13
  41017a:	mov    rcx,r12
  41017d:	call   0x410d50
  410182:	test   eax,eax
  410184:	jg     0x410130
  410186:	cmp    r14d,0x39
  41018a:	je     0x410386
  410190:	add    r14d,0x1
  410194:	mov    r15d,0x20
  41019a:	mov    BYTE PTR [rbx],r14b
  41019d:	mov    r14,rdi
  4101a0:	add    rbx,0x1
  4101a4:	mov    rdi,r13
  4101a7:	jmp    0x40fe34
  4101ac:	mov    rcx,rsi
  4101af:	mov    edx,0x1
  4101b4:	call   0x410c30
  4101b9:	mov    rdx,r12
  4101bc:	mov    rcx,rax
  4101bf:	mov    rsi,rax
  4101c2:	call   0x410d50
  4101c7:	cmp    eax,0x0
  4101ca:	jg     0x40fdfd
  4101d0:	jne    0x4101dc
  4101d2:	and    bpl,0x1
  4101d6:	jne    0x40fdfd
  4101dc:	cmp    DWORD PTR [rsi+0x14],0x1
  4101e0:	mov    r15d,0x10
  4101e6:	jg     0x4101f3
  4101e8:	jmp    0x41047d
  4101ed:	nop    DWORD PTR [rax]
  4101f0:	mov    rbx,rax
  4101f3:	cmp    BYTE PTR [rbx-0x1],0x30
  4101f7:	lea    rax,[rbx-0x1]
  4101fb:	je     0x4101f0
  4101fd:	jmp    0x40fe34
  410202:	mov    ebx,DWORD PTR [rsp+0x50]
  410206:	mov    DWORD PTR [rsp+0x9c],0x0
  410211:	xor    eax,eax
  410213:	sub    ebx,DWORD PTR [rsp+0x68]
  410217:	jmp    0x40f87a
  41021c:	mov    QWORD PTR [rsp+0x48],r8
  410221:	add    ecx,0x1
  410224:	mov    BYTE PTR [r8],0x30
  410228:	mov    rdx,r8
  41022b:	mov    eax,0x31
  410230:	jmp    0x4100f0
  410235:	mov    ecx,DWORD PTR [rdi+0x8]
  410238:	call   0x410720
  41023d:	lea    rcx,[rax+0x10]
  410241:	mov    rbx,rax
  410244:	movsxd rax,DWORD PTR [rdi+0x14]
  410248:	lea    rdx,[rdi+0x10]
  41024c:	lea    r8,[rax*4+0x8]
  410254:	call   0x411408
  410259:	mov    edx,0x1
  41025e:	mov    rcx,rbx
  410261:	call   0x410c30
  410266:	mov    r13,rax
  410269:	jmp    0x40fb9d
  41026e:	addsd  xmm0,xmm0
  410272:	ucomisd xmm0,xmm2
  410276:	ja     0x410361
  41027c:	ucomisd xmm2,xmm0
  410280:	jp     0x410288
  410282:	je     0x4100b7
  410288:	movzx  eax,BYTE PTR [rbx-0x1]
  41028c:	mov    ecx,DWORD PTR [rsp+0x30]
  410290:	mov    r15d,0x10
  410296:	jmp    0x4100a7
  41029b:	mov    r14,rdi
  41029e:	mov    r12,QWORD PTR [rsp+0x40]
  4102a3:	mov    rdi,r13
  4102a6:	jmp    0x40fdde
  4102ab:	mov    eax,DWORD PTR [rsp+0x68]
  4102af:	test   eax,eax
  4102b1:	je     0x40f6ba
  4102b7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4102bf:	test   r9d,r9d
  4102c2:	jle    0x40f71e
  4102c8:	movsd  xmm0,QWORD PTR [rip+0x8050]        # 0x418320
  4102d0:	mov    ecx,0xffffffff
  4102d5:	movsd  xmm1,QWORD PTR [rip+0x804b]        # 0x418328
  4102dd:	mulsd  xmm0,xmm4
  4102e1:	mulsd  xmm1,xmm0
  4102e5:	addsd  xmm1,QWORD PTR [rip+0x8043]        # 0x418330
  4102ed:	movq   rdx,xmm1
  4102f2:	movq   rax,xmm1
  4102f7:	shr    rdx,0x20
  4102fb:	mov    eax,eax
  4102fd:	sub    edx,0x3400000
  410303:	shl    rdx,0x20
  410307:	or     rax,rdx
  41030a:	jmp    0x40f4c2
  41030f:	cmp    ebp,0x39
  410312:	mov    r12,QWORD PTR [rsp+0x40]
  410317:	mov    rax,rbx
  41031a:	je     0x410389
  41031c:	add    ebp,0x1
  41031f:	mov    r14,rdi
  410322:	add    rbx,0x1
  410326:	mov    BYTE PTR [rax],bpl
  410329:	mov    rdi,r13
  41032c:	mov    r15d,0x20
  410332:	jmp    0x40fe34
  410337:	cmp    DWORD PTR [rsi+0x18],0x0
  41033b:	jne    0x410121
  410341:	test   eax,eax
  410343:	jg     0x4103d9
  410349:	xor    r15d,r15d
  41034c:	cmp    DWORD PTR [rsi+0x14],0x1
  410350:	jle    0x410458
  410356:	mov    r15d,0x10
  41035c:	jmp    0x41019a
  410361:	movzx  eax,BYTE PTR [rbx-0x1]
  410365:	mov    ecx,DWORD PTR [rsp+0x30]
  410369:	mov    r8,QWORD PTR [rsp+0x48]
  41036e:	jmp    0x4100e0
  410373:	mov    eax,DWORD PTR [rsi+0x18]
  410376:	test   eax,eax
  410378:	jne    0x40fdfd
  41037e:	xor    r15d,r15d
  410381:	jmp    0x4101f3
  410386:	mov    rax,rbx
  410389:	mov    r14,rdi
  41038c:	add    rbx,0x1
  410390:	mov    rdi,r13
  410393:	mov    BYTE PTR [rax],0x39
  410396:	mov    edx,0x39
  41039b:	mov    rcx,QWORD PTR [rsp+0x48]
  4103a0:	jmp    0x40fe20
  4103a5:	cmp    ebp,0x39
  4103a8:	mov    r12,QWORD PTR [rsp+0x40]
  4103ad:	mov    rax,rbx
  4103b0:	je     0x410386
  4103b2:	test   r14d,r14d
  4103b5:	jle    0x410490
  4103bb:	mov    ebp,r15d
  4103be:	mov    r15d,0x20
  4103c4:	add    ebp,0x31
  4103c7:	mov    r14,rdi
  4103ca:	add    rbx,0x1
  4103ce:	mov    BYTE PTR [rax],bpl
  4103d1:	mov    rdi,r13
  4103d4:	jmp    0x40fe34
  4103d9:	mov    rcx,rsi
  4103dc:	mov    edx,0x1
  4103e1:	call   0x410c30
  4103e6:	mov    rdx,r12
  4103e9:	mov    rcx,rax
  4103ec:	mov    rsi,rax
  4103ef:	call   0x410d50
  4103f4:	cmp    eax,0x0
  4103f7:	jle    0x41046a
  4103f9:	cmp    ebp,0x39
  4103fc:	je     0x410386
  4103fe:	lea    r14d,[rbp+0x1]
  410402:	mov    r15d,0x20
  410408:	jmp    0x41034c
  41040d:	mov    r15d,0x10
  410413:	jmp    0x4100a7
  410418:	xor    r8d,r8d
  41041b:	mov    rcx,rdi
  41041e:	mov    edx,0xa
  410423:	call   0x4108a0
  410428:	mov    rdi,rax
  41042b:	mov    eax,DWORD PTR [rsp+0x8c]
  410432:	test   eax,eax
  410434:	jg     0x410448
  410436:	cmp    DWORD PTR [rsp+0x120],0x2
  41043e:	mov    DWORD PTR [rsp+0x68],eax
  410442:	jg     0x40f9cc
  410448:	mov    eax,DWORD PTR [rsp+0x8c]
  41044f:	mov    DWORD PTR [rsp+0x68],eax
  410453:	jmp    0x40fb7f
  410458:	cmp    DWORD PTR [rsi+0x18],0x0
  41045c:	mov    eax,0x10
  410461:	cmovne r15d,eax
  410465:	jmp    0x41019a
  41046a:	jne    0x410472
  41046c:	test   bpl,0x1
  410470:	jne    0x4103f9
  410472:	mov    r15d,0x20
  410478:	jmp    0x41034c
  41047d:	cmp    DWORD PTR [rsi+0x18],0x1
  410481:	sbb    r15d,r15d
  410484:	not    r15d
  410487:	and    r15d,0x10
  41048b:	jmp    0x4101f3
  410490:	cmp    DWORD PTR [rsi+0x14],0x1
  410494:	mov    r15d,0x10
  41049a:	jg     0x4103c7
  4104a0:	cmp    DWORD PTR [rsi+0x18],0x1
  4104a4:	sbb    r15d,r15d
  4104a7:	not    r15d
  4104aa:	and    r15d,0x10
  4104ae:	jmp    0x4103c7
  4104b3:	xor    eax,eax
  4104b5:	jmp    0x40f197
  4104ba:	nop
  4104bb:	nop
  4104bc:	nop
  4104bd:	nop
  4104be:	nop
  4104bf:	nop
  4104c0:	push   rbp
  4104c1:	push   rdi
  4104c2:	push   rsi
  4104c3:	push   rbx
  4104c4:	mov    rsi,rcx
  4104c7:	lea    r10,[rcx+0x18]
  4104cb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4104cf:	mov    eax,edx
  4104d1:	sar    eax,0x5
  4104d4:	cmp    eax,ecx
  4104d6:	jge    0x410560
  4104dc:	cdqe   
  4104de:	and    edx,0x1f
  4104e1:	lea    rbx,[r10+rcx*4]
  4104e5:	lea    rdi,[r10+rax*4]
  4104e9:	je     0x410573
  4104ef:	mov    r9d,DWORD PTR [rdi]
  4104f2:	lea    r8,[rdi+0x4]
  4104f6:	mov    ebp,0x20
  4104fb:	mov    ecx,edx
  4104fd:	sub    ebp,edx
  4104ff:	shr    r9d,cl
  410502:	cmp    rbx,r8
  410505:	jbe    0x4105b8
  41050b:	mov    r11,r10
  41050e:	xchg   ax,ax
  410510:	mov    eax,DWORD PTR [r8]
  410513:	mov    ecx,ebp
  410515:	add    r11,0x4
  410519:	add    r8,0x4
  41051d:	shl    eax,cl
  41051f:	mov    ecx,edx
  410521:	or     eax,r9d
  410524:	mov    DWORD PTR [r11-0x4],eax
  410528:	mov    r9d,DWORD PTR [r8-0x4]
  41052c:	shr    r9d,cl
  41052f:	cmp    rbx,r8
  410532:	ja     0x410510
  410534:	sub    rbx,rdi
  410537:	lea    rax,[rbx-0x5]
  41053b:	shr    rax,0x2
  41053f:	lea    rax,[r10+rax*4+0x4]
  410544:	test   r9d,r9d
  410547:	mov    DWORD PTR [rax],r9d
  41054a:	je     0x410550
  41054c:	add    rax,0x4
  410550:	sub    rax,r10
  410553:	shr    rax,0x2
  410557:	jmp    0x4105ac
  410559:	nop    DWORD PTR [rax+0x0]
  410560:	mov    DWORD PTR [rsi+0x14],0x0
  410567:	mov    DWORD PTR [rsi+0x18],0x0
  41056e:	pop    rbx
  41056f:	pop    rsi
  410570:	pop    rdi
  410571:	pop    rbp
  410572:	ret    
  410573:	cmp    rbx,rdi
  410576:	mov    rdx,r10
  410579:	mov    rax,rdi
  41057c:	jbe    0x410560
  41057e:	xchg   ax,ax
  410580:	add    rax,0x4
  410584:	mov    r8d,DWORD PTR [rax-0x4]
  410588:	add    rdx,0x4
  41058c:	cmp    rbx,rax
  41058f:	mov    DWORD PTR [rdx-0x4],r8d
  410593:	ja     0x410580
  410595:	not    rdi
  410598:	lea    rax,[rdi+rbx*1]
  41059c:	shr    rax,0x2
  4105a0:	lea    rax,[rax*4+0x4]
  4105a8:	shr    rax,0x2
  4105ac:	test   eax,eax
  4105ae:	mov    DWORD PTR [rsi+0x14],eax
  4105b1:	je     0x410567
  4105b3:	pop    rbx
  4105b4:	pop    rsi
  4105b5:	pop    rdi
  4105b6:	pop    rbp
  4105b7:	ret    
  4105b8:	mov    rax,r10
  4105bb:	jmp    0x410544
  4105bd:	nop    DWORD PTR [rax]
  4105c0:	movsxd rax,DWORD PTR [rcx+0x14]
  4105c4:	lea    rdx,[rcx+0x18]
  4105c8:	lea    r8,[rdx+rax*4]
  4105cc:	cmp    rdx,r8
  4105cf:	jae    0x4105fb
  4105d1:	mov    ecx,DWORD PTR [rcx+0x18]
  4105d4:	xor    eax,eax
  4105d6:	test   ecx,ecx
  4105d8:	je     0x4105e6
  4105da:	jmp    0x4105f4
  4105dc:	nop    DWORD PTR [rax+0x0]
  4105e0:	mov    ecx,DWORD PTR [rdx]
  4105e2:	test   ecx,ecx
  4105e4:	jne    0x4105f4
  4105e6:	add    rdx,0x4
  4105ea:	add    eax,0x20
  4105ed:	cmp    r8,rdx
  4105f0:	ja     0x4105e0
  4105f2:	repz ret 
  4105f4:	tzcnt  ecx,ecx
  4105f8:	add    eax,ecx
  4105fa:	ret    
  4105fb:	xor    eax,eax
  4105fd:	ret    
  4105fe:	nop
  4105ff:	nop
  410600:	push   rsi
  410601:	push   rbx
  410602:	sub    rsp,0x28
  410606:	mov    eax,DWORD PTR [rip+0xe004]        # 0x41e610
  41060c:	movsxd rsi,ecx
  41060f:	cmp    eax,0x2
  410612:	je     0x41067d
  410614:	test   eax,eax
  410616:	je     0x410642
  410618:	cmp    eax,0x1
  41061b:	jne    0x41063b
  41061d:	mov    rbx,QWORD PTR [rip+0xef3c]        # 0x41f560
  410624:	mov    ecx,0x1
  410629:	call   rbx
  41062b:	mov    eax,DWORD PTR [rip+0xdfdf]        # 0x41e610
  410631:	cmp    eax,0x1
  410634:	je     0x410624
  410636:	cmp    eax,0x2
  410639:	je     0x41067d
  41063b:	add    rsp,0x28
  41063f:	pop    rbx
  410640:	pop    rsi
  410641:	ret    
  410642:	mov    al,0x1
  410644:	xchg   DWORD PTR [rip+0xdfc6],eax        # 0x41e610
  41064a:	test   eax,eax
  41064c:	jne    0x4106a0
  41064e:	lea    rcx,[rip+0xdfeb]        # 0x41e640
  410655:	mov    rbx,QWORD PTR [rip+0xeea4]        # 0x41f500
  41065c:	call   rbx
  41065e:	lea    rcx,[rip+0xe003]        # 0x41e668
  410665:	call   rbx
  410667:	lea    rcx,[rip+0x62]        # 0x4106d0
  41066e:	call   0x40b0e0
  410673:	mov    DWORD PTR [rip+0xdf93],0x2        # 0x41e610
  41067d:	lea    rdx,[rsi+rsi*4]
  410681:	lea    rax,[rip+0xdfb8]        # 0x41e640
  410688:	lea    rcx,[rax+rdx*8]
  41068c:	mov    rax,QWORD PTR [rip+0xeded]        # 0x41f480
  410693:	add    rsp,0x28
  410697:	pop    rbx
  410698:	pop    rsi
  410699:	rex.W jmp rax
  41069c:	nop    DWORD PTR [rax+0x0]
  4106a0:	cmp    eax,0x2
  4106a3:	je     0x4106c0
  4106a5:	mov    eax,DWORD PTR [rip+0xdf65]        # 0x41e610
  4106ab:	cmp    eax,0x1
  4106ae:	je     0x41061d
  4106b4:	jmp    0x410636
  4106b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106c0:	mov    DWORD PTR [rip+0xdf46],0x2        # 0x41e610
  4106ca:	jmp    0x41067d
  4106cc:	nop    DWORD PTR [rax+0x0]
  4106d0:	push   rbx
  4106d1:	sub    rsp,0x20
  4106d5:	mov    eax,0x3
  4106da:	xchg   DWORD PTR [rip+0xdf30],eax        # 0x41e610
  4106e0:	cmp    eax,0x2
  4106e3:	je     0x4106f0
  4106e5:	add    rsp,0x20
  4106e9:	pop    rbx
  4106ea:	ret    
  4106eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4106f0:	mov    rbx,QWORD PTR [rip+0xed81]        # 0x41f478
  4106f7:	lea    rcx,[rip+0xdf42]        # 0x41e640
  4106fe:	call   rbx
  410700:	lea    rcx,[rip+0xdf61]        # 0x41e668
  410707:	mov    rax,rbx
  41070a:	add    rsp,0x20
  41070e:	pop    rbx
  41070f:	rex.W jmp rax
  410712:	nop    DWORD PTR [rax+0x0]
  410716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410720:	push   rdi
  410721:	push   rsi
  410722:	push   rbx
  410723:	sub    rsp,0x20
  410727:	mov    ebx,ecx
  410729:	xor    ecx,ecx
  41072b:	call   0x410600
  410730:	cmp    ebx,0x9
  410733:	jg     0x410770
  410735:	lea    rdx,[rip+0xde84]        # 0x41e5c0
  41073c:	movsxd rcx,ebx
  41073f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  410743:	test   rdi,rdi
  410746:	je     0x4107d0
  41074c:	cmp    DWORD PTR [rip+0xdebd],0x2        # 0x41e610
  410753:	mov    r8,QWORD PTR [rdi]
  410756:	mov    QWORD PTR [rdx+rcx*8],r8
  41075a:	jne    0x4107b6
  41075c:	lea    rcx,[rip+0xdedd]        # 0x41e640
  410763:	call   QWORD PTR [rip+0xeda7]        # 0x41f510
  410769:	jmp    0x4107b6
  41076b:	nop    DWORD PTR [rax+rax*1+0x0]
  410770:	mov    eax,0x1
  410775:	mov    ecx,ebx
  410777:	shl    eax,cl
  410779:	mov    esi,eax
  41077b:	lea    eax,[rax-0x1]
  41077e:	cdqe   
  410780:	lea    rdx,[rax*4+0x27]
  410788:	shr    rdx,0x3
  41078c:	mov    edx,edx
  41078e:	lea    rcx,[rdx*8+0x0]
  410796:	call   0x411418
  41079b:	test   rax,rax
  41079e:	mov    rdi,rax
  4107a1:	je     0x41082a
  4107a7:	cmp    DWORD PTR [rip+0xde62],0x2        # 0x41e610
  4107ae:	mov    DWORD PTR [rdi+0x8],ebx
  4107b1:	mov    DWORD PTR [rdi+0xc],esi
  4107b4:	je     0x41075c
  4107b6:	mov    DWORD PTR [rdi+0x14],0x0
  4107bd:	mov    DWORD PTR [rdi+0x10],0x0
  4107c4:	mov    rax,rdi
  4107c7:	add    rsp,0x20
  4107cb:	pop    rbx
  4107cc:	pop    rsi
  4107cd:	pop    rdi
  4107ce:	ret    
  4107cf:	nop
  4107d0:	mov    ecx,ebx
  4107d2:	mov    eax,0x1
  4107d7:	mov    rdi,QWORD PTR [rip+0x1952]        # 0x412130
  4107de:	shl    eax,cl
  4107e0:	lea    rcx,[rip+0xd4d9]        # 0x41dcc0
  4107e7:	lea    edx,[rax-0x1]
  4107ea:	mov    esi,eax
  4107ec:	mov    rax,rdi
  4107ef:	movsxd rdx,edx
  4107f2:	sub    rax,rcx
  4107f5:	lea    rdx,[rdx*4+0x27]
  4107fd:	mov    rcx,rax
  410800:	sar    rcx,0x3
  410804:	shr    rdx,0x3
  410808:	mov    edx,edx
  41080a:	add    rcx,rdx
  41080d:	cmp    rcx,0x120
  410814:	ja     0x41078e
  41081a:	lea    rdx,[rdi+rdx*8]
  41081e:	mov    QWORD PTR [rip+0x190b],rdx        # 0x412130
  410825:	jmp    0x4107a7
  41082a:	xor    eax,eax
  41082c:	jmp    0x4107c7
  41082e:	xchg   ax,ax
  410830:	push   rbx
  410831:	sub    rsp,0x20
  410835:	test   rcx,rcx
  410838:	je     0x410869
  41083a:	cmp    DWORD PTR [rcx+0x8],0x9
  41083e:	jg     0x410870
  410840:	mov    rbx,rcx
  410843:	xor    ecx,ecx
  410845:	call   0x410600
  41084a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41084e:	lea    rax,[rip+0xdd6b]        # 0x41e5c0
  410855:	cmp    DWORD PTR [rip+0xddb4],0x2        # 0x41e610
  41085c:	mov    rcx,QWORD PTR [rax+rdx*8]
  410860:	mov    QWORD PTR [rax+rdx*8],rbx
  410864:	mov    QWORD PTR [rbx],rcx
  410867:	je     0x410880
  410869:	add    rsp,0x20
  41086d:	pop    rbx
  41086e:	ret    
  41086f:	nop
  410870:	add    rsp,0x20
  410874:	pop    rbx
  410875:	jmp    0x411458
  41087a:	nop    WORD PTR [rax+rax*1+0x0]
  410880:	mov    rax,QWORD PTR [rip+0xec89]        # 0x41f510
  410887:	lea    rcx,[rip+0xddb2]        # 0x41e640
  41088e:	add    rsp,0x20
  410892:	pop    rbx
  410893:	rex.W jmp rax
  410896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108a0:	push   rbp
  4108a1:	push   rdi
  4108a2:	push   rsi
  4108a3:	push   rbx
  4108a4:	sub    rsp,0x28
  4108a8:	mov    esi,DWORD PTR [rcx+0x14]
  4108ab:	xor    r9d,r9d
  4108ae:	lea    r10,[rcx+0x18]
  4108b2:	mov    rdi,rcx
  4108b5:	movsxd rbx,r8d
  4108b8:	movsxd rdx,edx
  4108bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4108c0:	mov    eax,DWORD PTR [r10+r9*4]
  4108c4:	imul   rax,rdx
  4108c8:	add    rax,rbx
  4108cb:	mov    rbx,rax
  4108ce:	mov    DWORD PTR [r10+r9*4],eax
  4108d2:	add    r9,0x1
  4108d6:	shr    rbx,0x20
  4108da:	cmp    esi,r9d
  4108dd:	jg     0x4108c0
  4108df:	test   rbx,rbx
  4108e2:	mov    rax,rdi
  4108e5:	je     0x4108fc
  4108e7:	cmp    esi,DWORD PTR [rdi+0xc]
  4108ea:	jge    0x410905
  4108ec:	movsxd rax,esi
  4108ef:	add    esi,0x1
  4108f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4108f6:	mov    DWORD PTR [rdi+0x14],esi
  4108f9:	mov    rax,rdi
  4108fc:	add    rsp,0x28
  410900:	pop    rbx
  410901:	pop    rsi
  410902:	pop    rdi
  410903:	pop    rbp
  410904:	ret    
  410905:	mov    eax,DWORD PTR [rdi+0x8]
  410908:	lea    ecx,[rax+0x1]
  41090b:	call   0x410720
  410910:	test   rax,rax
  410913:	mov    rbp,rax
  410916:	je     0x41094e
  410918:	lea    rcx,[rax+0x10]
  41091c:	movsxd rax,DWORD PTR [rdi+0x14]
  410920:	lea    rdx,[rdi+0x10]
  410924:	lea    r8,[rax*4+0x8]
  41092c:	call   0x411408
  410931:	mov    rcx,rdi
  410934:	mov    rdi,rbp
  410937:	call   0x410830
  41093c:	movsxd rax,esi
  41093f:	add    esi,0x1
  410942:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  410946:	mov    DWORD PTR [rdi+0x14],esi
  410949:	mov    rax,rdi
  41094c:	jmp    0x4108fc
  41094e:	xor    eax,eax
  410950:	jmp    0x4108fc
  410952:	nop    DWORD PTR [rax+0x0]
  410956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410960:	push   rbx
  410961:	sub    rsp,0x20
  410965:	mov    ebx,ecx
  410967:	mov    ecx,0x1
  41096c:	call   0x410720
  410971:	test   rax,rax
  410974:	je     0x410980
  410976:	mov    DWORD PTR [rax+0x18],ebx
  410979:	mov    DWORD PTR [rax+0x14],0x1
  410980:	add    rsp,0x20
  410984:	pop    rbx
  410985:	ret    
  410986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410990:	push   r14
  410992:	push   r13
  410994:	push   r12
  410996:	push   rbp
  410997:	push   rdi
  410998:	push   rsi
  410999:	push   rbx
  41099a:	sub    rsp,0x20
  41099e:	movsxd r13,DWORD PTR [rcx+0x14]
  4109a2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4109a6:	mov    r12,rcx
  4109a9:	mov    r14,rdx
  4109ac:	cmp    r13d,ebx
  4109af:	jl     0x410ab1
  4109b5:	mov    eax,ebx
  4109b7:	movsxd rbx,r13d
  4109ba:	movsxd r13,eax
  4109bd:	xor    eax,eax
  4109bf:	lea    esi,[rbx+r13*1]
  4109c3:	cmp    esi,DWORD PTR [r12+0xc]
  4109c8:	setg   al
  4109cb:	add    eax,DWORD PTR [r12+0x8]
  4109d0:	mov    ecx,eax
  4109d2:	call   0x410720
  4109d7:	test   rax,rax
  4109da:	je     0x410abc
  4109e0:	lea    rdi,[rax+0x18]
  4109e4:	movsxd rdx,esi
  4109e7:	lea    rbp,[rdi+rdx*4]
  4109eb:	mov    r8,rdi
  4109ee:	cmp    rdi,rbp
  4109f1:	jae    0x410a03
  4109f3:	mov    DWORD PTR [r8],0x0
  4109fa:	add    r8,0x4
  4109fe:	cmp    rbp,r8
  410a01:	ja     0x4109f3
  410a03:	lea    rdx,[r14+0x18]
  410a07:	add    r12,0x18
  410a0b:	lea    rbx,[r12+rbx*4]
  410a0f:	lea    r13,[rdx+r13*4]
  410a13:	cmp    rdx,r13
  410a16:	jae    0x410a79
  410a18:	nop    DWORD PTR [rax+rax*1+0x0]
  410a20:	add    rdx,0x4
  410a24:	mov    r11d,DWORD PTR [rdx-0x4]
  410a28:	test   r11d,r11d
  410a2b:	je     0x410a70
  410a2d:	mov    r9,rdi
  410a30:	mov    r8,r12
  410a33:	xor    r10d,r10d
  410a36:	jmp    0x410a43
  410a38:	nop    DWORD PTR [rax+rax*1+0x0]
  410a40:	mov    r9,r14
  410a43:	add    r8,0x4
  410a47:	mov    ecx,DWORD PTR [r8-0x4]
  410a4b:	mov    r14d,DWORD PTR [r9]
  410a4e:	imul   rcx,r11
  410a52:	add    rcx,r14
  410a55:	lea    r14,[r9+0x4]
  410a59:	add    rcx,r10
  410a5c:	mov    r10,rcx
  410a5f:	mov    DWORD PTR [r14-0x4],ecx
  410a63:	shr    r10,0x20
  410a67:	cmp    rbx,r8
  410a6a:	ja     0x410a40
  410a6c:	mov    DWORD PTR [r9+0x4],r10d
  410a70:	add    rdi,0x4
  410a74:	cmp    r13,rdx
  410a77:	ja     0x410a20
  410a79:	test   esi,esi
  410a7b:	jle    0x410a9f
  410a7d:	mov    r8d,DWORD PTR [rbp-0x4]
  410a81:	lea    rdx,[rbp-0x4]
  410a85:	test   r8d,r8d
  410a88:	je     0x410a9a
  410a8a:	jmp    0x410a9f
  410a8c:	nop    DWORD PTR [rax+0x0]
  410a90:	sub    rdx,0x4
  410a94:	mov    ecx,DWORD PTR [rdx]
  410a96:	test   ecx,ecx
  410a98:	jne    0x410a9f
  410a9a:	sub    esi,0x1
  410a9d:	jne    0x410a90
  410a9f:	mov    DWORD PTR [rax+0x14],esi
  410aa2:	add    rsp,0x20
  410aa6:	pop    rbx
  410aa7:	pop    rsi
  410aa8:	pop    rdi
  410aa9:	pop    rbp
  410aaa:	pop    r12
  410aac:	pop    r13
  410aae:	pop    r14
  410ab0:	ret    
  410ab1:	mov    r12,rdx
  410ab4:	mov    r14,rcx
  410ab7:	jmp    0x4109bd
  410abc:	xor    eax,eax
  410abe:	jmp    0x410aa2
  410ac0:	push   rbp
  410ac1:	push   rdi
  410ac2:	push   rsi
  410ac3:	push   rbx
  410ac4:	sub    rsp,0x28
  410ac8:	mov    eax,edx
  410aca:	mov    rbp,rcx
  410acd:	mov    ebx,edx
  410acf:	and    eax,0x3
  410ad2:	jne    0x410b60
  410ad8:	sar    ebx,0x2
  410adb:	mov    rax,rbp
  410ade:	test   ebx,ebx
  410ae0:	je     0x410b2c
  410ae2:	mov    rdi,QWORD PTR [rip+0xd197]        # 0x41dc80
  410ae9:	test   rdi,rdi
  410aec:	jne    0x410b02
  410aee:	jmp    0x410bad
  410af3:	sar    ebx,1
  410af5:	je     0x410b29
  410af7:	mov    rsi,QWORD PTR [rdi]
  410afa:	test   rsi,rsi
  410afd:	je     0x410b35
  410aff:	mov    rdi,rsi
  410b02:	test   bl,0x1
  410b05:	je     0x410af3
  410b07:	mov    rdx,rdi
  410b0a:	mov    rcx,rbp
  410b0d:	call   0x410990
  410b12:	test   rax,rax
  410b15:	mov    rsi,rax
  410b18:	je     0x410b83
  410b1a:	mov    rcx,rbp
  410b1d:	mov    rbp,rsi
  410b20:	call   0x410830
  410b25:	sar    ebx,1
  410b27:	jne    0x410af7
  410b29:	mov    rax,rbp
  410b2c:	add    rsp,0x28
  410b30:	pop    rbx
  410b31:	pop    rsi
  410b32:	pop    rdi
  410b33:	pop    rbp
  410b34:	ret    
  410b35:	mov    ecx,0x1
  410b3a:	call   0x410600
  410b3f:	mov    rsi,QWORD PTR [rdi]
  410b42:	test   rsi,rsi
  410b45:	je     0x410b8e
  410b47:	cmp    DWORD PTR [rip+0xdac2],0x2        # 0x41e610
  410b4e:	jne    0x410aff
  410b50:	lea    rcx,[rip+0xdb11]        # 0x41e668
  410b57:	call   QWORD PTR [rip+0xe9b3]        # 0x41f510
  410b5d:	jmp    0x410aff
  410b5f:	nop
  410b60:	sub    eax,0x1
  410b63:	lea    rdx,[rip+0x7816]        # 0x418380
  410b6a:	xor    r8d,r8d
  410b6d:	cdqe   
  410b6f:	mov    edx,DWORD PTR [rdx+rax*4]
  410b72:	call   0x4108a0
  410b77:	test   rax,rax
  410b7a:	mov    rbp,rax
  410b7d:	jne    0x410ad8
  410b83:	xor    eax,eax
  410b85:	add    rsp,0x28
  410b89:	pop    rbx
  410b8a:	pop    rsi
  410b8b:	pop    rdi
  410b8c:	pop    rbp
  410b8d:	ret    
  410b8e:	mov    rdx,rdi
  410b91:	mov    rcx,rdi
  410b94:	call   0x410990
  410b99:	test   rax,rax
  410b9c:	mov    rsi,rax
  410b9f:	mov    QWORD PTR [rdi],rax
  410ba2:	je     0x410b83
  410ba4:	mov    QWORD PTR [rax],0x0
  410bab:	jmp    0x410b47
  410bad:	mov    ecx,0x1
  410bb2:	call   0x410600
  410bb7:	mov    rdi,QWORD PTR [rip+0xd0c2]        # 0x41dc80
  410bbe:	test   rdi,rdi
  410bc1:	je     0x410be2
  410bc3:	cmp    DWORD PTR [rip+0xda46],0x2        # 0x41e610
  410bca:	jne    0x410b02
  410bd0:	lea    rcx,[rip+0xda91]        # 0x41e668
  410bd7:	call   QWORD PTR [rip+0xe933]        # 0x41f510
  410bdd:	jmp    0x410b02
  410be2:	mov    ecx,0x1
  410be7:	call   0x410720
  410bec:	test   rax,rax
  410bef:	mov    rdi,rax
  410bf2:	je     0x410c12
  410bf4:	mov    DWORD PTR [rax+0x18],0x271
  410bfb:	mov    DWORD PTR [rax+0x14],0x1
  410c02:	mov    QWORD PTR [rip+0xd077],rax        # 0x41dc80
  410c09:	mov    QWORD PTR [rax],0x0
  410c10:	jmp    0x410bc3
  410c12:	mov    QWORD PTR [rip+0xd063],0x0        # 0x41dc80
  410c1d:	xor    eax,eax
  410c1f:	jmp    0x410b85
  410c24:	xchg   ax,ax
  410c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c30:	push   r13
  410c32:	push   r12
  410c34:	push   rbp
  410c35:	push   rdi
  410c36:	push   rsi
  410c37:	push   rbx
  410c38:	sub    rsp,0x28
  410c3c:	mov    rdi,rcx
  410c3f:	mov    ebp,edx
  410c41:	mov    esi,edx
  410c43:	mov    r12d,DWORD PTR [rdi+0x14]
  410c47:	sar    ebp,0x5
  410c4a:	mov    eax,DWORD PTR [rdi+0xc]
  410c4d:	mov    ecx,DWORD PTR [rcx+0x8]
  410c50:	add    r12d,ebp
  410c53:	lea    ebx,[r12+0x1]
  410c58:	cmp    ebx,eax
  410c5a:	jle    0x410c69
  410c5c:	nop    DWORD PTR [rax+0x0]
  410c60:	add    eax,eax
  410c62:	add    ecx,0x1
  410c65:	cmp    ebx,eax
  410c67:	jg     0x410c60
  410c69:	call   0x410720
  410c6e:	test   rax,rax
  410c71:	mov    r13,rax
  410c74:	je     0x410d3f
  410c7a:	test   ebp,ebp
  410c7c:	lea    r8,[rax+0x18]
  410c80:	jle    0x410d37
  410c86:	lea    eax,[rbp-0x1]
  410c89:	lea    r9,[r8+rax*4+0x4]
  410c8e:	xchg   ax,ax
  410c90:	add    r8,0x4
  410c94:	mov    DWORD PTR [r8-0x4],0x0
  410c9c:	cmp    r8,r9
  410c9f:	jne    0x410c90
  410ca1:	movsxd rax,DWORD PTR [rdi+0x14]
  410ca5:	lea    r8,[rdi+0x18]
  410ca9:	mov    edx,esi
  410cab:	and    edx,0x1f
  410cae:	lea    rbp,[r8+rax*4]
  410cb2:	je     0x410d20
  410cb4:	mov    eax,0x20
  410cb9:	xor    r11d,r11d
  410cbc:	sub    eax,edx
  410cbe:	jmp    0x410cc3
  410cc0:	mov    r9,rsi
  410cc3:	mov    r10d,DWORD PTR [r8]
  410cc6:	mov    ecx,edx
  410cc8:	lea    rsi,[r9+0x4]
  410ccc:	add    r8,0x4
  410cd0:	shl    r10d,cl
  410cd3:	mov    ecx,eax
  410cd5:	or     r10d,r11d
  410cd8:	mov    DWORD PTR [rsi-0x4],r10d
  410cdc:	mov    r11d,DWORD PTR [r8-0x4]
  410ce0:	shr    r11d,cl
  410ce3:	cmp    rbp,r8
  410ce6:	ja     0x410cc0
  410ce8:	add    r12d,0x2
  410cec:	test   r11d,r11d
  410cef:	mov    DWORD PTR [r9+0x4],r11d
  410cf3:	cmovne ebx,r12d
  410cf7:	sub    ebx,0x1
  410cfa:	mov    rcx,rdi
  410cfd:	mov    DWORD PTR [r13+0x14],ebx
  410d01:	call   0x410830
  410d06:	mov    rax,r13
  410d09:	add    rsp,0x28
  410d0d:	pop    rbx
  410d0e:	pop    rsi
  410d0f:	pop    rdi
  410d10:	pop    rbp
  410d11:	pop    r12
  410d13:	pop    r13
  410d15:	ret    
  410d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d20:	add    r8,0x4
  410d24:	mov    edx,DWORD PTR [r8-0x4]
  410d28:	add    r9,0x4
  410d2c:	cmp    rbp,r8
  410d2f:	mov    DWORD PTR [r9-0x4],edx
  410d33:	ja     0x410d20
  410d35:	jmp    0x410cf7
  410d37:	mov    r9,r8
  410d3a:	jmp    0x410ca1
  410d3f:	xor    eax,eax
  410d41:	jmp    0x410d09
  410d43:	nop    DWORD PTR [rax]
  410d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d50:	movsxd r8,DWORD PTR [rdx+0x14]
  410d54:	mov    eax,DWORD PTR [rcx+0x14]
  410d57:	sub    eax,r8d
  410d5a:	test   eax,eax
  410d5c:	jne    0x410d92
  410d5e:	shl    r8,0x2
  410d62:	add    rcx,0x18
  410d66:	lea    rax,[rcx+r8*1]
  410d6a:	lea    rdx,[rdx+r8*1+0x18]
  410d6f:	jmp    0x410d76
  410d71:	cmp    rcx,rax
  410d74:	jae    0x410d90
  410d76:	sub    rdx,0x4
  410d7a:	sub    rax,0x4
  410d7e:	mov    r9d,DWORD PTR [rdx]
  410d81:	cmp    DWORD PTR [rax],r9d
  410d84:	je     0x410d71
  410d86:	sbb    eax,eax
  410d88:	or     eax,0x1
  410d8b:	ret    
  410d8c:	nop    DWORD PTR [rax+0x0]
  410d90:	xor    eax,eax
  410d92:	repz ret 
  410d94:	xchg   ax,ax
  410d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410da0:	push   rdi
  410da1:	push   rsi
  410da2:	push   rbx
  410da3:	sub    rsp,0x20
  410da7:	mov    rsi,rcx
  410daa:	mov    rdi,rdx
  410dad:	call   0x410d50
  410db2:	test   eax,eax
  410db4:	je     0x410ea0
  410dba:	mov    ebx,0x0
  410dbf:	js     0x410ec2
  410dc5:	mov    ecx,DWORD PTR [rsi+0x8]
  410dc8:	call   0x410720
  410dcd:	test   rax,rax
  410dd0:	je     0x410ed2
  410dd6:	movsxd rdx,DWORD PTR [rsi+0x14]
  410dda:	lea    rcx,[rsi+0x18]
  410dde:	mov    DWORD PTR [rax+0x10],ebx
  410de1:	lea    r10,[rdi+0x18]
  410de5:	xor    r9d,r9d
  410de8:	mov    rbx,rdx
  410deb:	lea    rsi,[rcx+rdx*4]
  410def:	movsxd rdx,DWORD PTR [rdi+0x14]
  410df3:	lea    rdi,[r10+rdx*4]
  410df7:	lea    rdx,[rax+0x18]
  410dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  410e00:	add    rcx,0x4
  410e04:	add    r10,0x4
  410e08:	mov    r11d,DWORD PTR [r10-0x4]
  410e0c:	mov    r8d,DWORD PTR [rcx-0x4]
  410e10:	add    rdx,0x4
  410e14:	sub    r8,r11
  410e17:	sub    r8,r9
  410e1a:	mov    r9,r8
  410e1d:	mov    r11d,r8d
  410e20:	mov    DWORD PTR [rdx-0x4],r8d
  410e24:	shr    r9,0x20
  410e28:	and    r9d,0x1
  410e2c:	cmp    rdi,r10
  410e2f:	ja     0x410e00
  410e31:	cmp    rsi,rcx
  410e34:	mov    rdi,rdx
  410e37:	mov    r10,rcx
  410e3a:	jbe    0x410e76
  410e3c:	nop    DWORD PTR [rax+0x0]
  410e40:	add    rcx,0x4
  410e44:	mov    r8d,DWORD PTR [rcx-0x4]
  410e48:	add    rdx,0x4
  410e4c:	sub    r8,r9
  410e4f:	mov    r9,r8
  410e52:	mov    r11d,r8d
  410e55:	mov    DWORD PTR [rdx-0x4],r8d
  410e59:	shr    r9,0x20
  410e5d:	and    r9d,0x1
  410e61:	cmp    rsi,rcx
  410e64:	ja     0x410e40
  410e66:	not    r10
  410e69:	lea    rdx,[r10+rsi*1]
  410e6d:	shr    rdx,0x2
  410e71:	lea    rdx,[rdi+rdx*4+0x4]
  410e76:	sub    rdx,0x4
  410e7a:	test   r11d,r11d
  410e7d:	jne    0x410e8d
  410e7f:	nop
  410e80:	sub    rdx,0x4
  410e84:	mov    ecx,DWORD PTR [rdx]
  410e86:	sub    ebx,0x1
  410e89:	test   ecx,ecx
  410e8b:	je     0x410e80
  410e8d:	mov    DWORD PTR [rax+0x14],ebx
  410e90:	add    rsp,0x20
  410e94:	pop    rbx
  410e95:	pop    rsi
  410e96:	pop    rdi
  410e97:	ret    
  410e98:	nop    DWORD PTR [rax+rax*1+0x0]
  410ea0:	xor    ecx,ecx
  410ea2:	call   0x410720
  410ea7:	test   rax,rax
  410eaa:	je     0x410ed2
  410eac:	mov    DWORD PTR [rax+0x14],0x1
  410eb3:	mov    DWORD PTR [rax+0x18],0x0
  410eba:	add    rsp,0x20
  410ebe:	pop    rbx
  410ebf:	pop    rsi
  410ec0:	pop    rdi
  410ec1:	ret    
  410ec2:	mov    rax,rsi
  410ec5:	mov    bl,0x1
  410ec7:	mov    rsi,rdi
  410eca:	mov    rdi,rax
  410ecd:	jmp    0x410dc5
  410ed2:	xor    eax,eax
  410ed4:	jmp    0x410e90
  410ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ee0:	push   rsi
  410ee1:	push   rbx
  410ee2:	sub    rsp,0x18
  410ee6:	movsxd rax,DWORD PTR [rcx+0x14]
  410eea:	lea    r10,[rcx+0x18]
  410eee:	mov    ecx,0x20
  410ef3:	lea    r9,[r10+rax*4]
  410ef7:	mov    eax,DWORD PTR [r9-0x4]
  410efb:	lea    rbx,[r9-0x4]
  410eff:	bsr    r8d,eax
  410f03:	xor    r8d,0x1f
  410f07:	sub    ecx,r8d
  410f0a:	cmp    r8d,0xa
  410f0e:	mov    DWORD PTR [rdx],ecx
  410f10:	jg     0x410f60
  410f12:	mov    ecx,0xb
  410f17:	mov    r11d,eax
  410f1a:	xor    esi,esi
  410f1c:	sub    ecx,r8d
  410f1f:	shr    r11d,cl
  410f22:	or     r11d,0x3ff00000
  410f29:	shl    r11,0x20
  410f2d:	cmp    r10,rbx
  410f30:	jae    0x410f38
  410f32:	mov    esi,DWORD PTR [r9-0x8]
  410f36:	shr    esi,cl
  410f38:	lea    ecx,[r8+0x15]
  410f3c:	shl    eax,cl
  410f3e:	mov    edx,eax
  410f40:	mov    eax,esi
  410f42:	or     eax,edx
  410f44:	or     rax,r11
  410f47:	mov    QWORD PTR [rsp+0x8],rax
  410f4c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  410f52:	add    rsp,0x18
  410f56:	pop    rbx
  410f57:	pop    rsi
  410f58:	ret    
  410f59:	nop    DWORD PTR [rax+0x0]
  410f60:	cmp    r10,rbx
  410f63:	jae    0x410fc0
  410f65:	mov    r11d,r8d
  410f68:	lea    rsi,[r9-0x8]
  410f6c:	mov    edx,DWORD PTR [r9-0x8]
  410f70:	sub    r11d,0xb
  410f74:	je     0x410fe2
  410f76:	mov    ebx,0x2b
  410f7b:	mov    ecx,r11d
  410f7e:	sub    ebx,r8d
  410f81:	shl    eax,cl
  410f83:	mov    r8d,edx
  410f86:	mov    ecx,ebx
  410f88:	shr    r8d,cl
  410f8b:	or     eax,r8d
  410f8e:	xor    r8d,r8d
  410f91:	or     eax,0x3ff00000
  410f96:	shl    rax,0x20
  410f9a:	cmp    r10,rsi
  410f9d:	jae    0x410fa6
  410f9f:	mov    r8d,DWORD PTR [r9-0xc]
  410fa3:	shr    r8d,cl
  410fa6:	mov    ecx,r11d
  410fa9:	shl    edx,cl
  410fab:	or     r8d,edx
  410fae:	movabs rdx,0xffffffff00000000
  410fb8:	and    rax,rdx
  410fbb:	or     rax,r8
  410fbe:	jmp    0x410f47
  410fc0:	mov    r11d,r8d
  410fc3:	sub    r11d,0xb
  410fc7:	je     0x410fe0
  410fc9:	mov    ecx,r11d
  410fcc:	xor    r8d,r8d
  410fcf:	xor    edx,edx
  410fd1:	shl    eax,cl
  410fd3:	or     eax,0x3ff00000
  410fd8:	shl    rax,0x20
  410fdc:	jmp    0x410fa6
  410fde:	xchg   ax,ax
  410fe0:	xor    edx,edx
  410fe2:	or     eax,0x3ff00000
  410fe7:	shl    rax,0x20
  410feb:	or     rax,rdx
  410fee:	jmp    0x410f47
  410ff3:	nop    DWORD PTR [rax]
  410ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411000:	push   rdi
  411001:	push   rsi
  411002:	push   rbx
  411003:	sub    rsp,0x20
  411007:	mov    ecx,0x1
  41100c:	movq   rbx,xmm0
  411011:	mov    rdi,rdx
  411014:	mov    rsi,r8
  411017:	call   0x410720
  41101c:	test   rax,rax
  41101f:	je     0x411105
  411025:	mov    r9,rbx
  411028:	shr    r9,0x20
  41102c:	mov    r10d,r9d
  41102f:	and    r9d,0x7fffffff
  411036:	and    r10d,0xfffff
  41103d:	shr    r9d,0x14
  411041:	mov    edx,r10d
  411044:	or     edx,0x100000
  41104a:	test   r9d,r9d
  41104d:	cmovne r10d,edx
  411051:	test   ebx,ebx
  411053:	jne    0x411094
  411055:	xor    ecx,ecx
  411057:	mov    DWORD PTR [rax+0x14],0x1
  41105e:	mov    edx,0x1
  411063:	tzcnt  ecx,r10d
  411068:	shr    r10d,cl
  41106b:	test   r9d,r9d
  41106e:	lea    r11d,[rcx+0x20]
  411072:	mov    DWORD PTR [rax+0x18],r10d
  411076:	je     0x4110d3
  411078:	lea    edx,[r11+r9*1-0x433]
  411080:	mov    DWORD PTR [rdi],edx
  411082:	mov    edx,0x35
  411087:	sub    edx,r11d
  41108a:	mov    DWORD PTR [rsi],edx
  41108c:	add    rsp,0x20
  411090:	pop    rbx
  411091:	pop    rsi
  411092:	pop    rdi
  411093:	ret    
  411094:	xor    r11d,r11d
  411097:	tzcnt  r11d,ebx
  41109c:	mov    ecx,r11d
  41109f:	shr    ebx,cl
  4110a1:	test   r11d,r11d
  4110a4:	je     0x411100
  4110a6:	mov    ecx,0x20
  4110ab:	mov    edx,r10d
  4110ae:	sub    ecx,r11d
  4110b1:	shl    edx,cl
  4110b3:	mov    ecx,r11d
  4110b6:	or     ebx,edx
  4110b8:	shr    r10d,cl
  4110bb:	mov    DWORD PTR [rax+0x18],ebx
  4110be:	cmp    r10d,0x1
  4110c2:	mov    DWORD PTR [rax+0x1c],r10d
  4110c6:	sbb    edx,edx
  4110c8:	add    edx,0x2
  4110cb:	test   r9d,r9d
  4110ce:	mov    DWORD PTR [rax+0x14],edx
  4110d1:	jne    0x411078
  4110d3:	movsxd rcx,edx
  4110d6:	shl    edx,0x5
  4110d9:	sub    r11d,0x432
  4110e0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  4110e5:	mov    DWORD PTR [rdi],r11d
  4110e8:	xor    ecx,0x1f
  4110eb:	sub    edx,ecx
  4110ed:	mov    DWORD PTR [rsi],edx
  4110ef:	add    rsp,0x20
  4110f3:	pop    rbx
  4110f4:	pop    rsi
  4110f5:	pop    rdi
  4110f6:	ret    
  4110f7:	nop    WORD PTR [rax+rax*1+0x0]
  411100:	mov    DWORD PTR [rax+0x18],ebx
  411103:	jmp    0x4110be
  411105:	xor    eax,eax
  411107:	jmp    0x41108c
  411109:	nop    DWORD PTR [rax+0x0]
  411110:	mov    rax,rcx
  411113:	lea    rcx,[rdx+0x1]
  411117:	movzx  edx,BYTE PTR [rdx]
  41111a:	test   dl,dl
  41111c:	mov    BYTE PTR [rax],dl
  41111e:	je     0x411132
  411120:	add    rcx,0x1
  411124:	movzx  edx,BYTE PTR [rcx-0x1]
  411128:	add    rax,0x1
  41112c:	test   dl,dl
  41112e:	mov    BYTE PTR [rax],dl
  411130:	jne    0x411120
  411132:	repz ret 
  411134:	nop
  411135:	nop
  411136:	nop
  411137:	nop
  411138:	nop
  411139:	nop
  41113a:	nop
  41113b:	nop
  41113c:	nop
  41113d:	nop
  41113e:	nop
  41113f:	nop
  411140:	sub    rsp,0x58
  411144:	test   r8d,r8d
  411147:	mov    eax,r8d
  41114a:	mov    WORD PTR [rsp+0x68],dx
  41114f:	jne    0x411164
  411151:	cmp    dx,0xff
  411156:	ja     0x4111aa
  411158:	mov    BYTE PTR [rcx],dl
  41115a:	mov    eax,0x1
  41115f:	add    rsp,0x58
  411163:	ret    
  411164:	lea    rdx,[rsp+0x4c]
  411169:	mov    DWORD PTR [rsp+0x28],r9d
  41116e:	mov    QWORD PTR [rsp+0x20],rcx
  411173:	mov    DWORD PTR [rsp+0x4c],0x0
  41117b:	mov    QWORD PTR [rsp+0x30],0x0
  411184:	mov    r9d,0x1
  41118a:	mov    QWORD PTR [rsp+0x38],rdx
  41118f:	lea    r8,[rsp+0x68]
  411194:	xor    edx,edx
  411196:	mov    ecx,eax
  411198:	call   QWORD PTR [rip+0xe3fa]        # 0x41f598
  41119e:	test   eax,eax
  4111a0:	je     0x4111aa
  4111a2:	mov    edx,DWORD PTR [rsp+0x4c]
  4111a6:	test   edx,edx
  4111a8:	je     0x41115f
  4111aa:	call   0x4114e0
  4111af:	mov    DWORD PTR [rax],0x2a
  4111b5:	mov    eax,0xffffffff
  4111ba:	add    rsp,0x58
  4111be:	ret    
  4111bf:	nop
  4111c0:	push   rdi
  4111c1:	push   rsi
  4111c2:	push   rbx
  4111c3:	sub    rsp,0x30
  4111c7:	lea    rax,[rsp+0x20]
  4111cc:	test   rcx,rcx
  4111cf:	mov    rbx,rcx
  4111d2:	mov    esi,edx
  4111d4:	cmove  rbx,rax
  4111d8:	mov    rax,QWORD PTR [rip+0x73e1]        # 0x4185c0
  4111df:	mov    rax,QWORD PTR [rax]
  4111e2:	mov    edi,DWORD PTR [rax]
  4111e4:	call   0x411528
  4111e9:	movzx  edx,si
  4111ec:	mov    r8d,eax
  4111ef:	mov    rcx,rbx
  4111f2:	mov    r9d,edi
  4111f5:	call   0x411140
  4111fa:	cdqe   
  4111fc:	add    rsp,0x30
  411200:	pop    rbx
  411201:	pop    rsi
  411202:	pop    rdi
  411203:	ret    
  411204:	xchg   ax,ax
  411206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411210:	push   r14
  411212:	push   r13
  411214:	push   r12
  411216:	push   rbp
  411217:	push   rdi
  411218:	push   rsi
  411219:	push   rbx
  41121a:	sub    rsp,0x30
  41121e:	mov    r13,rdx
  411221:	mov    rbx,rcx
  411224:	mov    rdi,r8
  411227:	call   0x411528
  41122c:	mov    ebp,eax
  41122e:	mov    rax,QWORD PTR [rip+0x738b]        # 0x4185c0
  411235:	mov    r14,QWORD PTR [r13+0x0]
  411239:	mov    rax,QWORD PTR [rax]
  41123c:	test   r14,r14
  41123f:	mov    r12d,DWORD PTR [rax]
  411242:	je     0x411330
  411248:	xor    esi,esi
  41124a:	test   rbx,rbx
  41124d:	je     0x4112e0
  411253:	test   rdi,rdi
  411256:	jne    0x411278
  411258:	jmp    0x4112a4
  41125a:	nop    WORD PTR [rax+rax*1+0x0]
  411260:	movsxd r10,eax
  411263:	add    rbx,r10
  411266:	add    rsi,r10
  411269:	cmp    BYTE PTR [rbx-0x1],0x0
  41126d:	je     0x4112c0
  41126f:	add    r14,0x2
  411273:	cmp    rdi,rsi
  411276:	jbe    0x4112a4
  411278:	movzx  edx,WORD PTR [r14]
  41127c:	mov    r9d,r12d
  41127f:	mov    r8d,ebp
  411282:	mov    rcx,rbx
  411285:	call   0x411140
  41128a:	test   eax,eax
  41128c:	jg     0x411260
  41128e:	mov    rax,0xffffffffffffffff
  411295:	add    rsp,0x30
  411299:	pop    rbx
  41129a:	pop    rsi
  41129b:	pop    rdi
  41129c:	pop    rbp
  41129d:	pop    r12
  41129f:	pop    r13
  4112a1:	pop    r14
  4112a3:	ret    
  4112a4:	mov    rax,rsi
  4112a7:	mov    QWORD PTR [r13+0x0],r14
  4112ab:	add    rsp,0x30
  4112af:	pop    rbx
  4112b0:	pop    rsi
  4112b1:	pop    rdi
  4112b2:	pop    rbp
  4112b3:	pop    r12
  4112b5:	pop    r13
  4112b7:	pop    r14
  4112b9:	ret    
  4112ba:	nop    WORD PTR [rax+rax*1+0x0]
  4112c0:	lea    rax,[rsi-0x1]
  4112c4:	mov    QWORD PTR [r13+0x0],0x0
  4112cc:	add    rsp,0x30
  4112d0:	pop    rbx
  4112d1:	pop    rsi
  4112d2:	pop    rdi
  4112d3:	pop    rbp
  4112d4:	pop    r12
  4112d6:	pop    r13
  4112d8:	pop    r14
  4112da:	ret    
  4112db:	nop    DWORD PTR [rax+rax*1+0x0]
  4112e0:	test   rdi,rdi
  4112e3:	lea    rbx,[rsp+0x20]
  4112e8:	jne    0x41130b
  4112ea:	jmp    0x411341
  4112ec:	nop    DWORD PTR [rax+0x0]
  4112f0:	movsxd rdx,eax
  4112f3:	sub    eax,0x1
  4112f6:	cdqe   
  4112f8:	add    rsi,rdx
  4112fb:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  411300:	je     0x411349
  411302:	add    r14,0x2
  411306:	cmp    rdi,rsi
  411309:	jbe    0x411341
  41130b:	movzx  edx,WORD PTR [r14]
  41130f:	mov    r9d,r12d
  411312:	mov    r8d,ebp
  411315:	mov    rcx,rbx
  411318:	call   0x411140
  41131d:	test   eax,eax
  41131f:	jg     0x4112f0
  411321:	jmp    0x41128e
  411326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411330:	xor    eax,eax
  411332:	add    rsp,0x30
  411336:	pop    rbx
  411337:	pop    rsi
  411338:	pop    rdi
  411339:	pop    rbp
  41133a:	pop    r12
  41133c:	pop    r13
  41133e:	pop    r14
  411340:	ret    
  411341:	mov    rax,rsi
  411344:	jmp    0x411295
  411349:	lea    rax,[rsi-0x1]
  41134d:	jmp    0x411295
  411352:	nop
  411353:	nop
  411354:	nop
  411355:	nop
  411356:	nop
  411357:	nop
  411358:	nop
  411359:	nop
  41135a:	nop
  41135b:	nop
  41135c:	nop
  41135d:	nop
  41135e:	nop
  41135f:	nop
  411360:	jmp    QWORD PTR [rip+0xe432]        # 0x41f798
  411366:	nop
  411367:	nop
  411368:	jmp    QWORD PTR [rip+0xe422]        # 0x41f790
  41136e:	nop
  41136f:	nop
  411370:	jmp    QWORD PTR [rip+0xe412]        # 0x41f788
  411376:	nop
  411377:	nop
  411378:	jmp    QWORD PTR [rip+0xe402]        # 0x41f780
  41137e:	nop
  41137f:	nop
  411380:	jmp    QWORD PTR [rip+0xe3f2]        # 0x41f778
  411386:	nop
  411387:	nop
  411388:	jmp    QWORD PTR [rip+0xe3e2]        # 0x41f770
  41138e:	nop
  41138f:	nop
  411390:	jmp    QWORD PTR [rip+0xe3d2]        # 0x41f768
  411396:	nop
  411397:	nop
  411398:	jmp    QWORD PTR [rip+0xe3c2]        # 0x41f760
  41139e:	nop
  41139f:	nop
  4113a0:	jmp    QWORD PTR [rip+0xe3b2]        # 0x41f758
  4113a6:	nop
  4113a7:	nop
  4113a8:	jmp    QWORD PTR [rip+0xe3a2]        # 0x41f750
  4113ae:	nop
  4113af:	nop
  4113b0:	jmp    QWORD PTR [rip+0xe392]        # 0x41f748
  4113b6:	nop
  4113b7:	nop
  4113b8:	jmp    QWORD PTR [rip+0xe382]        # 0x41f740
  4113be:	nop
  4113bf:	nop
  4113c0:	jmp    QWORD PTR [rip+0xe372]        # 0x41f738
  4113c6:	nop
  4113c7:	nop
  4113c8:	jmp    QWORD PTR [rip+0xe362]        # 0x41f730
  4113ce:	nop
  4113cf:	nop
  4113d0:	jmp    QWORD PTR [rip+0xe352]        # 0x41f728
  4113d6:	nop
  4113d7:	nop
  4113d8:	jmp    QWORD PTR [rip+0xe342]        # 0x41f720
  4113de:	nop
  4113df:	nop
  4113e0:	jmp    QWORD PTR [rip+0xe332]        # 0x41f718
  4113e6:	nop
  4113e7:	nop
  4113e8:	jmp    QWORD PTR [rip+0xe322]        # 0x41f710
  4113ee:	nop
  4113ef:	nop
  4113f0:	jmp    QWORD PTR [rip+0xe312]        # 0x41f708
  4113f6:	nop
  4113f7:	nop
  4113f8:	jmp    QWORD PTR [rip+0xe302]        # 0x41f700
  4113fe:	nop
  4113ff:	nop
  411400:	jmp    QWORD PTR [rip+0xe2f2]        # 0x41f6f8
  411406:	nop
  411407:	nop
  411408:	jmp    QWORD PTR [rip+0xe2e2]        # 0x41f6f0
  41140e:	nop
  41140f:	nop
  411410:	jmp    QWORD PTR [rip+0xe2d2]        # 0x41f6e8
  411416:	nop
  411417:	nop
  411418:	jmp    QWORD PTR [rip+0xe2c2]        # 0x41f6e0
  41141e:	nop
  41141f:	nop
  411420:	jmp    QWORD PTR [rip+0xe2b2]        # 0x41f6d8
  411426:	nop
  411427:	nop
  411428:	jmp    QWORD PTR [rip+0xe2a2]        # 0x41f6d0
  41142e:	nop
  41142f:	nop
  411430:	jmp    QWORD PTR [rip+0xe292]        # 0x41f6c8
  411436:	nop
  411437:	nop
  411438:	jmp    QWORD PTR [rip+0xe282]        # 0x41f6c0
  41143e:	nop
  41143f:	nop
  411440:	jmp    QWORD PTR [rip+0xe272]        # 0x41f6b8
  411446:	nop
  411447:	nop
  411448:	jmp    QWORD PTR [rip+0xe262]        # 0x41f6b0
  41144e:	nop
  41144f:	nop
  411450:	jmp    QWORD PTR [rip+0xe252]        # 0x41f6a8
  411456:	nop
  411457:	nop
  411458:	jmp    QWORD PTR [rip+0xe242]        # 0x41f6a0
  41145e:	nop
  41145f:	nop
  411460:	jmp    QWORD PTR [rip+0xe232]        # 0x41f698
  411466:	nop
  411467:	nop
  411468:	jmp    QWORD PTR [rip+0xe222]        # 0x41f690
  41146e:	nop
  41146f:	nop
  411470:	jmp    QWORD PTR [rip+0xe212]        # 0x41f688
  411476:	nop
  411477:	nop
  411478:	jmp    QWORD PTR [rip+0xe202]        # 0x41f680
  41147e:	nop
  41147f:	nop
  411480:	jmp    QWORD PTR [rip+0xe1f2]        # 0x41f678
  411486:	nop
  411487:	nop
  411488:	jmp    QWORD PTR [rip+0xe1e2]        # 0x41f670
  41148e:	nop
  41148f:	nop
  411490:	jmp    QWORD PTR [rip+0xe1d2]        # 0x41f668
  411496:	nop
  411497:	nop
  411498:	jmp    QWORD PTR [rip+0xe1c2]        # 0x41f660
  41149e:	nop
  41149f:	nop
  4114a0:	jmp    QWORD PTR [rip+0xe1b2]        # 0x41f658
  4114a6:	nop
  4114a7:	nop
  4114a8:	jmp    QWORD PTR [rip+0xe1a2]        # 0x41f650
  4114ae:	nop
  4114af:	nop
  4114b0:	jmp    QWORD PTR [rip+0xe192]        # 0x41f648
  4114b6:	nop
  4114b7:	nop
  4114b8:	jmp    QWORD PTR [rip+0xe182]        # 0x41f640
  4114be:	nop
  4114bf:	nop
  4114c0:	jmp    QWORD PTR [rip+0xe172]        # 0x41f638
  4114c6:	nop
  4114c7:	nop
  4114c8:	jmp    QWORD PTR [rip+0xe162]        # 0x41f630
  4114ce:	nop
  4114cf:	nop
  4114d0:	jmp    QWORD PTR [rip+0xe152]        # 0x41f628
  4114d6:	nop
  4114d7:	nop
  4114d8:	jmp    QWORD PTR [rip+0xe13a]        # 0x41f618
  4114de:	nop
  4114df:	nop
  4114e0:	jmp    QWORD PTR [rip+0xe12a]        # 0x41f610
  4114e6:	nop
  4114e7:	nop
  4114e8:	jmp    QWORD PTR [rip+0xe11a]        # 0x41f608
  4114ee:	nop
  4114ef:	nop
  4114f0:	jmp    QWORD PTR [rip+0xe10a]        # 0x41f600
  4114f6:	nop
  4114f7:	nop
  4114f8:	jmp    QWORD PTR [rip+0xe0f2]        # 0x41f5f0
  4114fe:	nop
  4114ff:	nop
  411500:	jmp    QWORD PTR [rip+0xe0e2]        # 0x41f5e8
  411506:	nop
  411507:	nop
  411508:	jmp    QWORD PTR [rip+0xe0ca]        # 0x41f5d8
  41150e:	nop
  41150f:	nop
  411510:	jmp    QWORD PTR [rip+0xe0ba]        # 0x41f5d0
  411516:	nop
  411517:	nop
  411518:	jmp    QWORD PTR [rip+0xe0a2]        # 0x41f5c0
  41151e:	nop
  41151f:	nop
  411520:	jmp    QWORD PTR [rip+0xe092]        # 0x41f5b8
  411526:	nop
  411527:	nop
  411528:	jmp    QWORD PTR [rip+0xe082]        # 0x41f5b0
  41152e:	nop
  41152f:	nop
  411530:	jmp    QWORD PTR [rip+0xe072]        # 0x41f5a8
  411536:	nop
  411537:	nop
  411538:	nop    DWORD PTR [rax+rax*1+0x0]
  411540:	mov    rax,QWORD PTR [rip+0xd179]        # 0x41e6c0
  411547:	ret    
  411548:	nop    DWORD PTR [rax+rax*1+0x0]
  411550:	mov    rax,rcx
  411553:	xchg   QWORD PTR [rip+0xd166],rax        # 0x41e6c0
  41155a:	ret    
  41155b:	nop
  41155c:	nop
  41155d:	nop
  41155e:	nop
  41155f:	nop
  411560:	mov    eax,DWORD PTR [rip+0xd16a]        # 0x41e6d0
  411566:	ret    
  411567:	nop    WORD PTR [rax+rax*1+0x0]
  411570:	mov    eax,ecx
  411572:	xchg   DWORD PTR [rip+0xd158],eax        # 0x41e6d0
  411578:	ret    
  411579:	nop    DWORD PTR [rax+0x0]
  411580:	push   rbx
  411581:	sub    rsp,0x20
  411585:	mov    ebx,ecx
  411587:	lea    rcx,[rip+0x6f72]        # 0x418500
  41158e:	call   QWORD PTR [rip+0xdf3c]        # 0x41f4d0
  411594:	lea    rdx,[rip+0x6f7b]        # 0x418516
  41159b:	mov    rcx,rax
  41159e:	call   QWORD PTR [rip+0xdf34]        # 0x41f4d8
  4115a4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x411570
  4115ab:	test   rax,rax
  4115ae:	mov    ecx,ebx
  4115b0:	cmove  rax,rdx
  4115b4:	mov    QWORD PTR [rip+0xb9d],rax        # 0x412158
  4115bb:	add    rsp,0x20
  4115bf:	pop    rbx
  4115c0:	rex.W jmp rax
  4115c3:	nop    DWORD PTR [rax]
  4115c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115d0:	sub    rsp,0x28
  4115d4:	lea    rcx,[rip+0x6f25]        # 0x418500
  4115db:	call   QWORD PTR [rip+0xdeef]        # 0x41f4d0
  4115e1:	lea    rdx,[rip+0x6f41]        # 0x418529
  4115e8:	mov    rcx,rax
  4115eb:	call   QWORD PTR [rip+0xdee7]        # 0x41f4d8
  4115f1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x411560
  4115f8:	test   rax,rax
  4115fb:	cmove  rax,rdx
  4115ff:	mov    QWORD PTR [rip+0xb4a],rax        # 0x412150
  411606:	add    rsp,0x28
  41160a:	rex.W jmp rax
  41160d:	nop    DWORD PTR [rax]
  411610:	mov    rax,QWORD PTR [rip+0xb41]        # 0x412158
  411617:	rex.W jmp rax
  41161a:	nop    WORD PTR [rax+rax*1+0x0]
  411620:	mov    rax,QWORD PTR [rip+0xb29]        # 0x412150
  411627:	rex.W jmp rax
  41162a:	nop
  41162b:	nop
  41162c:	nop
  41162d:	nop
  41162e:	nop
  41162f:	nop
  411630:	jmp    QWORD PTR [rip+0xe172]        # 0x41f7a8
  411636:	nop
  411637:	nop
  411638:	nop    DWORD PTR [rax+rax*1+0x0]
  411640:	jmp    QWORD PTR [rip+0xdf52]        # 0x41f598
  411646:	nop
  411647:	nop
  411648:	jmp    QWORD PTR [rip+0xdf42]        # 0x41f590
  41164e:	nop
  41164f:	nop
  411650:	jmp    QWORD PTR [rip+0xdf32]        # 0x41f588
  411656:	nop
  411657:	nop
  411658:	jmp    QWORD PTR [rip+0xdf22]        # 0x41f580
  41165e:	nop
  41165f:	nop
  411660:	jmp    QWORD PTR [rip+0xdf12]        # 0x41f578
  411666:	nop
  411667:	nop
  411668:	jmp    QWORD PTR [rip+0xdf02]        # 0x41f570
  41166e:	nop
  41166f:	nop
  411670:	jmp    QWORD PTR [rip+0xdef2]        # 0x41f568
  411676:	nop
  411677:	nop
  411678:	jmp    QWORD PTR [rip+0xdee2]        # 0x41f560
  41167e:	nop
  41167f:	nop
  411680:	jmp    QWORD PTR [rip+0xded2]        # 0x41f558
  411686:	nop
  411687:	nop
  411688:	jmp    QWORD PTR [rip+0xdec2]        # 0x41f550
  41168e:	nop
  41168f:	nop
  411690:	jmp    QWORD PTR [rip+0xdeb2]        # 0x41f548
  411696:	nop
  411697:	nop
  411698:	jmp    QWORD PTR [rip+0xdea2]        # 0x41f540
  41169e:	nop
  41169f:	nop
  4116a0:	jmp    QWORD PTR [rip+0xde92]        # 0x41f538
  4116a6:	nop
  4116a7:	nop
  4116a8:	jmp    QWORD PTR [rip+0xde82]        # 0x41f530
  4116ae:	nop
  4116af:	nop
  4116b0:	jmp    QWORD PTR [rip+0xde72]        # 0x41f528
  4116b6:	nop
  4116b7:	nop
  4116b8:	jmp    QWORD PTR [rip+0xde62]        # 0x41f520
  4116be:	nop
  4116bf:	nop
  4116c0:	jmp    QWORD PTR [rip+0xde52]        # 0x41f518
  4116c6:	nop
  4116c7:	nop
  4116c8:	jmp    QWORD PTR [rip+0xde42]        # 0x41f510
  4116ce:	nop
  4116cf:	nop
  4116d0:	jmp    QWORD PTR [rip+0xde32]        # 0x41f508
  4116d6:	nop
  4116d7:	nop
  4116d8:	jmp    QWORD PTR [rip+0xde22]        # 0x41f500
  4116de:	nop
  4116df:	nop
  4116e0:	jmp    QWORD PTR [rip+0xde12]        # 0x41f4f8
  4116e6:	nop
  4116e7:	nop
  4116e8:	jmp    QWORD PTR [rip+0xde02]        # 0x41f4f0
  4116ee:	nop
  4116ef:	nop
  4116f0:	jmp    QWORD PTR [rip+0xddf2]        # 0x41f4e8
  4116f6:	nop
  4116f7:	nop
  4116f8:	jmp    QWORD PTR [rip+0xdde2]        # 0x41f4e0
  4116fe:	nop
  4116ff:	nop
  411700:	jmp    QWORD PTR [rip+0xddd2]        # 0x41f4d8
  411706:	nop
  411707:	nop
  411708:	jmp    QWORD PTR [rip+0xddc2]        # 0x41f4d0
  41170e:	nop
  41170f:	nop
  411710:	jmp    QWORD PTR [rip+0xddb2]        # 0x41f4c8
  411716:	nop
  411717:	nop
  411718:	jmp    QWORD PTR [rip+0xdda2]        # 0x41f4c0
  41171e:	nop
  41171f:	nop
  411720:	jmp    QWORD PTR [rip+0xdd92]        # 0x41f4b8
  411726:	nop
  411727:	nop
  411728:	jmp    QWORD PTR [rip+0xdd82]        # 0x41f4b0
  41172e:	nop
  41172f:	nop
  411730:	jmp    QWORD PTR [rip+0xdd72]        # 0x41f4a8
  411736:	nop
  411737:	nop
  411738:	jmp    QWORD PTR [rip+0xdd62]        # 0x41f4a0
  41173e:	nop
  41173f:	nop
  411740:	jmp    QWORD PTR [rip+0xdd52]        # 0x41f498
  411746:	nop
  411747:	nop
  411748:	jmp    QWORD PTR [rip+0xdd42]        # 0x41f490
  41174e:	nop
  41174f:	nop
  411750:	jmp    QWORD PTR [rip+0xdd32]        # 0x41f488
  411756:	nop
  411757:	nop
  411758:	jmp    QWORD PTR [rip+0xdd22]        # 0x41f480
  41175e:	nop
  41175f:	nop
  411760:	jmp    QWORD PTR [rip+0xdd12]        # 0x41f478
  411766:	nop
  411767:	nop
  411768:	jmp    QWORD PTR [rip+0xdd02]        # 0x41f470
  41176e:	nop
  41176f:	nop
  411770:	jmp    QWORD PTR [rip+0xdcf2]        # 0x41f468
  411776:	nop
  411777:	nop
  411778:	nop    DWORD PTR [rax+rax*1+0x0]
  411780:	push   r14
  411782:	push   r13
  411784:	push   r12
  411786:	push   rbp
  411787:	push   rdi
  411788:	push   rsi
  411789:	push   rbx
  41178a:	sub    rsp,0x40
  41178e:	xor    edi,edi
  411790:	xor    ebp,ebp
  411792:	mov    rbx,rdx
  411795:	mov    esi,ecx
  411797:	call   0x40b1a0
  41179c:	lea    rcx,[rip+0x19e2]        # 0x413185
  4117a3:	call   0x411440
  4117a8:	lea    rcx,[rip+0x19e1]        # 0x413190
  4117af:	mov    r12,rax
  4117b2:	call   0x411440
  4117b7:	mov    rcx,QWORD PTR [rbx]
  4117ba:	mov    r13,rax
  4117bd:	mov    DWORD PTR [rip+0xa869],0x0        # 0x41c030
  4117c7:	call   0x401970
  4117cc:	lea    rdx,[rip+0x19cb]        # 0x41319e
  4117d3:	xor    ecx,ecx
  4117d5:	call   0x404bf0
  4117da:	lea    rdx,[rip+0x194f]        # 0x413130
  4117e1:	lea    rcx,[rip+0x19b7]        # 0x41319f
  4117e8:	call   0x40b010
  4117ed:	lea    rcx,[rip+0x19ab]        # 0x41319f
  4117f4:	call   0x40aff0
  4117f9:	lea    rcx,[rip+0xfffffffffffeffb0]        # 0x4017b0
  411800:	call   0x40b0e0
  411805:	lea    r9,[rip+0x1fb4]        # 0x4137c0
  41180c:	lea    r8,[rip+0x19c4]        # 0x4131d7
  411813:	mov    QWORD PTR [rsp+0x20],0x0
  41181c:	mov    rdx,rbx
  41181f:	mov    ecx,esi
  411821:	call   0x404430
  411826:	cmp    eax,0xffffffff
  411829:	je     0x4118cf
  41182f:	cmp    eax,0x56
  411832:	je     0x411890
  411834:	jle    0x411881
  411836:	cmp    eax,0x65
  411839:	je     0x4118c0
  41183f:	cmp    eax,0x68
  411842:	je     0x4118b0
  411844:	cmp    eax,0x64
  411847:	je     0x4118a0
  411849:	mov    rax,QWORD PTR [rip+0x6f10]        # 0x418760
  411850:	lea    rcx,[rip+0x1959]        # 0x4131b0
  411857:	mov    rsi,QWORD PTR [rax]
  41185a:	call   0x40b000
  41185f:	mov    rbx,rax
  411862:	call   QWORD PTR [rip+0xdd68]        # 0x41f5d0
  411868:	lea    rcx,[rax+0x60]
  41186c:	mov    r8,rsi
  41186f:	mov    rdx,rbx
  411872:	call   0x405050
  411877:	mov    ecx,0x1
  41187c:	call   0x411490
  411881:	test   eax,eax
  411883:	je     0x411805
  411885:	cmp    eax,0x45
  411888:	je     0x411805
  41188e:	jmp    0x411849
  411890:	mov    edi,0x1
  411895:	jmp    0x411805
  41189a:	nop    WORD PTR [rax+rax*1+0x0]
  4118a0:	mov    rax,QWORD PTR [rip+0x6ec9]        # 0x418770
  4118a7:	mov    r12,QWORD PTR [rax]
  4118aa:	jmp    0x411805
  4118af:	nop
  4118b0:	mov    ebp,0x1
  4118b5:	jmp    0x411805
  4118ba:	nop    WORD PTR [rax+rax*1+0x0]
  4118c0:	mov    DWORD PTR [rip+0xa766],0x1        # 0x41c030
  4118ca:	jmp    0x411805
  4118cf:	test   dil,dil
  4118d2:	jne    0x411939
  4118d4:	test   bpl,bpl
  4118d7:	jne    0x4119d5
  4118dd:	mov    rdi,QWORD PTR [rip+0x6e9c]        # 0x418780
  4118e4:	mov    eax,esi
  4118e6:	sub    eax,DWORD PTR [rdi]
  4118e8:	cmp    eax,0x3
  4118eb:	je     0x411908
  4118ed:	jle    0x4119ad
  4118f3:	cmp    eax,0x4
  4118f6:	jne    0x411b2e
  4118fc:	movsxd rax,DWORD PTR [rdi]
  4118ff:	lea    edx,[rax+0x1]
  411902:	mov    r12,QWORD PTR [rbx+rax*8]
  411906:	mov    DWORD PTR [rdi],edx
  411908:	movsxd rax,DWORD PTR [rdi]
  41190b:	mov    r9,rax
  41190e:	lea    r10,[rax*8+0x0]
  411916:	mov    rbp,QWORD PTR [rbx+rax*8]
  41191a:	add    r9d,0x3
  41191e:	cmp    esi,r9d
  411921:	mov    r14,QWORD PTR [rbx+r10*1+0x8]
  411926:	mov    DWORD PTR [rdi],r9d
  411929:	mov    rbx,QWORD PTR [rbx+r10*1+0x10]
  41192e:	je     0x411aae
  411934:	call   0x4114a0
  411939:	mov    rax,QWORD PTR [rip+0x6e20]        # 0x418760
  411940:	mov    rcx,QWORD PTR [rax]
  411943:	call   0x4016d0
  411948:	lea    r9,[rip+0x1890]        # 0x4131df
  41194f:	lea    r8,[rip+0x1849]        # 0x41319f
  411956:	lea    rcx,[rip+0x188b]        # 0x4131e8
  41195d:	mov    rdx,rax
  411960:	call   0x405010
  411965:	lea    rcx,[rip+0x188c]        # 0x4131f8
  41196c:	call   0x40b000
  411971:	lea    rdx,[rip+0x1978]        # 0x4132f0
  411978:	mov    rcx,rax
  41197b:	call   0x405010
  411980:	lea    rcx,[rip+0x197e]        # 0x413305
  411987:	call   0x402490
  41198c:	lea    rcx,[rip+0x1981]        # 0x413314
  411993:	mov    rbx,rax
  411996:	call   0x40b000
  41199b:	mov    rdx,rbx
  41199e:	mov    rcx,rax
  4119a1:	call   0x405010
  4119a6:	xor    ecx,ecx
  4119a8:	call   0x411490
  4119ad:	test   eax,eax
  4119af:	js     0x411b2e
  4119b5:	lea    rcx,[rip+0x1da2]        # 0x41375e
  4119bc:	call   0x40b000
  4119c1:	xor    edx,edx
  4119c3:	mov    r8,rax
  4119c6:	mov    ecx,0x1
  4119cb:	call   0x4031b0
  4119d0:	jmp    0x411908
  4119d5:	mov    rax,QWORD PTR [rip+0x6d84]        # 0x418760
  4119dc:	lea    rcx,[rip+0x1945]        # 0x413328
  4119e3:	mov    rbx,QWORD PTR [rax]
  4119e6:	call   0x40b000
  4119eb:	mov    rcx,rax
  4119ee:	mov    rdx,rbx
  4119f1:	lea    rbx,[rip+0x1781]        # 0x413179
  4119f8:	call   0x405010
  4119fd:	lea    rcx,[rip+0x195e]        # 0x413362
  411a04:	call   0x405010
  411a09:	lea    rcx,[rip+0x1958]        # 0x413368
  411a10:	call   0x40b000
  411a15:	mov    rcx,rax
  411a18:	call   0x405010
  411a1d:	lea    rcx,[rip+0x193e]        # 0x413362
  411a24:	call   0x405010
  411a29:	lea    rcx,[rip+0x19a0]        # 0x4133d0
  411a30:	call   0x40b000
  411a35:	mov    rcx,rax
  411a38:	call   0x405010
  411a3d:	lea    rcx,[rip+0x191e]        # 0x413362
  411a44:	call   0x405010
  411a49:	lea    rcx,[rip+0x1ba2]        # 0x4135f2
  411a50:	call   0x411440
  411a55:	test   rax,rax
  411a58:	lea    rax,[rip+0x16d1]        # 0x413130
  411a5f:	lea    rcx,[rip+0x1b9a]        # 0x413600
  411a66:	cmove  rbx,rax
  411a6a:	call   0x40b000
  411a6f:	mov    rdx,rbx
  411a72:	mov    rcx,rax
  411a75:	call   0x405010
  411a7a:	lea    rcx,[rip+0x18e1]        # 0x413362
  411a81:	call   0x405010
  411a86:	call   QWORD PTR [rip+0xdb44]        # 0x41f5d0
  411a8c:	lea    rcx,[rip+0x1c8d]        # 0x413720
  411a93:	mov    rbx,rax
  411a96:	call   0x40b000
  411a9b:	lea    rdx,[rbx+0x30]
  411a9f:	mov    rcx,rax
  411aa2:	call   0x405180
  411aa7:	xor    ecx,ecx
  411aa9:	call   0x411490
  411aae:	mov    rdi,QWORD PTR [rip+0xdb5b]        # 0x41f610
  411ab5:	call   rdi
  411ab7:	lea    rdx,[rsp+0x38]
  411abc:	mov    r8d,0xa
  411ac2:	mov    rcx,rbx
  411ac5:	mov    DWORD PTR [rax],0x0
  411acb:	call   0x411388
  411ad0:	mov    esi,eax
  411ad2:	call   rdi
  411ad4:	cmp    DWORD PTR [rax],0x0
  411ad7:	jne    0x411b4e
  411ad9:	cmp    BYTE PTR [rbx],0x0
  411adc:	je     0x411b4e
  411ade:	mov    rax,QWORD PTR [rsp+0x38]
  411ae3:	cmp    BYTE PTR [rax],0x0
  411ae6:	mov    eax,0x63
  411aeb:	cmovne esi,eax
  411aee:	cmp    DWORD PTR [rip+0xa53b],0x0        # 0x41c030
  411af5:	jne    0x411b73
  411af7:	test   r12,r12
  411afa:	je     0x411b55
  411afc:	cmp    BYTE PTR [r12],0x0
  411b01:	je     0x411b55
  411b03:	test   r13,r13
  411b06:	je     0x411b0f
  411b08:	cmp    BYTE PTR [r13+0x0],0x0
  411b0d:	jne    0x411b8e
  411b0f:	call   QWORD PTR [rip+0xdabb]        # 0x41f5d0
  411b15:	mov    r9d,esi
  411b18:	mov    r8,r14
  411b1b:	mov    rdx,rbp
  411b1e:	mov    rcx,r12
  411b21:	mov    rbx,rax
  411b24:	call   0x40b008
  411b29:	jmp    0x411a9b
  411b2e:	lea    rcx,[rip+0x1c16]        # 0x41374b
  411b35:	call   0x40b000
  411b3a:	xor    edx,edx
  411b3c:	mov    r8,rax
  411b3f:	mov    ecx,0x1
  411b44:	call   0x4031b0
  411b49:	jmp    0x4118fc
  411b4e:	mov    esi,0x63
  411b53:	jmp    0x411aee
  411b55:	call   QWORD PTR [rip+0xda75]        # 0x41f5d0
  411b5b:	sub    esi,0x1
  411b5e:	mov    rcx,r14
  411b61:	lea    rdx,[rax+0x30]
  411b65:	cmove  rcx,rbp
  411b69:	call   0x405180
  411b6e:	jmp    0x411aa7
  411b73:	mov    rcx,rbp
  411b76:	call   0x401530
  411b7b:	mov    rcx,r14
  411b7e:	mov    rbp,rax
  411b81:	call   0x401530
  411b86:	mov    r14,rax
  411b89:	jmp    0x411af7
  411b8e:	mov    rdx,r13
  411b91:	mov    rcx,r12
  411b94:	call   0x40b010
  411b99:	jmp    0x411b0f
  411b9e:	nop
  411b9f:	nop
  411ba0:	(bad)  
  411ba1:	(bad)  
  411ba2:	(bad)  
  411ba3:	(bad)  
  411ba4:	(bad)  
  411ba5:	(bad)  
  411ba6:	(bad)  
  411ba7:	inc    DWORD PTR [rax]
  411ba9:	add    BYTE PTR [rax],al
  411bab:	add    BYTE PTR [rax],al
  411bad:	add    BYTE PTR [rax],al
  411baf:	add    bh,bh
  411bb1:	(bad)  
  411bb2:	(bad)  
  411bb3:	(bad)  
  411bb4:	(bad)  
  411bb5:	(bad)  
  411bb6:	(bad)  
  411bb7:	inc    DWORD PTR [rax]
  411bb9:	add    BYTE PTR [rax],al
  411bbb:	add    BYTE PTR [rax],al
  411bbd:	add    BYTE PTR [rax],al
	...
