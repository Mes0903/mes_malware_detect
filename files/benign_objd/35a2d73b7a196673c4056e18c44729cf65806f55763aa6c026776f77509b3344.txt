
35a2d73b7a196673c4056e18c44729cf65806f55763aa6c026776f77509b3344.exe:     file format pei-i386


Disassembly of section .rsrc:

10001000 <.rsrc>:
	...
1000100c:	add    BYTE PTR [eax],al
1000100e:	add    al,0x0
10001010:	add    eax,DWORD PTR [eax]
10001012:	add    BYTE PTR [eax],al
10001014:	xor    BYTE PTR [eax],al
10001016:	add    BYTE PTR [eax+0xe],al
1000101c:	mov    BYTE PTR [eax],al
1000101e:	add    BYTE PTR [eax+0x10],al
10001024:	mov    al,ds:0x18800000
10001029:	add    BYTE PTR [eax],al
1000102b:	add    BYTE PTR [eax+0x800000],bh
	...
1000103d:	add    BYTE PTR [ecx],cl
1000103f:	add    BYTE PTR [ecx],al
10001041:	add    BYTE PTR [eax],al
10001043:	add    al,dl
10001045:	add    BYTE PTR [eax],al
10001047:	add    BYTE PTR [edx],0x0
1000104a:	add    BYTE PTR [eax],al
1000104c:	call   0x13801051
10001051:	add    BYTE PTR [eax],al
10001053:	add    BYTE PTR [eax],al
10001055:	add    DWORD PTR [eax],eax
10001057:	add    BYTE PTR [eax+eax*1],0x0
1000105b:	add    BYTE PTR [eax],bl
1000105d:	add    DWORD PTR [eax],eax
1000105f:	add    BYTE PTR ds:0x30000000,0x1
10001066:	add    BYTE PTR [eax+0x6],al
1000106c:	dec    eax
1000106d:	add    DWORD PTR [eax],eax
1000106f:	add    BYTE PTR [edi],0x0
10001072:	add    BYTE PTR [eax],al
10001074:	pusha  
10001075:	add    DWORD PTR [eax],eax
10001077:	or     BYTE PTR [eax],0x0
1000107a:	add    BYTE PTR [eax],al
1000107c:	js     0x1000107f
1000107e:	add    BYTE PTR [eax+0x9],al
10001084:	nop
10001085:	add    DWORD PTR [eax],eax
10001087:	add    BYTE PTR [eax],0x0
	...
10001096:	add    DWORD PTR [eax],eax
10001098:	add    BYTE PTR fs:[eax],al
1000109b:	add    BYTE PTR [eax+0x800001],ch
	...
100010ad:	add    BYTE PTR [ecx],al
100010af:	add    BYTE PTR [ecx],al
100010b1:	add    BYTE PTR [eax],al
100010b3:	add    al,al
100010b5:	add    DWORD PTR [eax],eax
100010b7:	add    BYTE PTR [eax],0x0
	...
100010c6:	add    DWORD PTR [eax],eax
100010c8:	add    DWORD PTR [eax],eax
100010ca:	add    BYTE PTR [eax],al
100010cc:	fadd   DWORD PTR [ecx]
100010ce:	add    BYTE PTR [eax+0x0],al
	...
100010dc:	add    BYTE PTR [eax],al
100010de:	add    DWORD PTR [eax],eax
100010e0:	or     DWORD PTR [eax+eax*1],eax
100010e3:	add    al,dh
100010e5:	add    DWORD PTR [eax],eax
	...
100010f3:	add    BYTE PTR [eax],al
100010f5:	add    BYTE PTR [ecx],al
100010f7:	add    BYTE PTR [ecx],cl
100010f9:	add    al,0x0
100010fb:	add    BYTE PTR [eax],al
100010fd:	add    al,BYTE PTR [eax]
	...
1000110b:	add    BYTE PTR [eax],al
1000110d:	add    BYTE PTR [ecx],al
1000110f:	add    BYTE PTR [ecx],cl
10001111:	add    al,0x0
10001113:	add    BYTE PTR [eax],dl
10001115:	add    al,BYTE PTR [eax]
	...
10001123:	add    BYTE PTR [eax],al
10001125:	add    BYTE PTR [ecx],al
10001127:	add    BYTE PTR [ecx],cl
10001129:	add    al,0x0
1000112b:	add    BYTE PTR [eax],ah
1000112d:	add    al,BYTE PTR [eax]
	...
1000113b:	add    BYTE PTR [eax],al
1000113d:	add    BYTE PTR [ecx],al
1000113f:	add    BYTE PTR [ecx],cl
10001141:	add    al,0x0
10001143:	add    BYTE PTR [eax],dh
10001145:	add    al,BYTE PTR [eax]
	...
10001153:	add    BYTE PTR [eax],al
10001155:	add    BYTE PTR [ecx],al
10001157:	add    BYTE PTR [ecx],cl
10001159:	add    al,0x0
1000115b:	add    BYTE PTR [eax+0x2],al
	...
1000116e:	add    DWORD PTR [eax],eax
10001170:	or     DWORD PTR [eax+eax*1],eax
10001173:	add    BYTE PTR [eax+0x2],dl
	...
10001186:	add    DWORD PTR [eax],eax
10001188:	or     DWORD PTR [eax+eax*1],eax
1000118b:	add    BYTE PTR [eax+0x2],ah
	...
1000119e:	add    DWORD PTR [eax],eax
100011a0:	or     DWORD PTR [eax+eax*1],eax
100011a3:	add    BYTE PTR [eax+0x2],dh
	...
100011b6:	add    DWORD PTR [eax],eax
100011b8:	or     DWORD PTR [eax+eax*1],eax
100011bb:	add    BYTE PTR [eax+0x2],al
	...
100011cd:	add    BYTE PTR [ecx],al
100011cf:	add    BYTE PTR [ecx],cl
100011d1:	add    al,0x0
100011d3:	add    BYTE PTR [eax+0x2],dl
	...
100011e5:	add    BYTE PTR [ecx],al
100011e7:	add    BYTE PTR [ecx],cl
100011e9:	add    al,0x0
100011eb:	add    BYTE PTR [eax+0x58000002],ah
100011f1:	sbb    DWORD PTR [eax],eax
100011f3:	add    BYTE PTR [eax+0x6],ch
	...
100011fe:	add    BYTE PTR [eax],al
10001200:	rcr    BYTE PTR [edi],0x0
10001203:	add    al,ch
10001205:	add    al,BYTE PTR [eax]
	...
1000120f:	add    BYTE PTR [eax+0x28000022],ch
10001215:	add    DWORD PTR [eax],eax
	...
1000121f:	add    al,dl
10001221:	and    eax,DWORD PTR [eax]
10001223:	add    BYTE PTR [eax+0xe],ch
10001229:	add    BYTE PTR [eax],al
1000122b:	add    BYTE PTR [eax],al
1000122d:	add    BYTE PTR [eax],al
1000122f:	add    BYTE PTR [eax+0x32],bh
10001232:	add    BYTE PTR [eax],al
10001234:	test   al,0x8
	...
1000123e:	add    BYTE PTR [eax],al
10001240:	and    BYTE PTR [ebx],bh
10001242:	add    BYTE PTR [eax],al
10001244:	push   0x5
10001249:	add    BYTE PTR [eax],al
1000124b:	add    BYTE PTR [eax],al
1000124d:	add    BYTE PTR [eax],al
1000124f:	add    BYTE PTR [eax+0x68000040],cl
10001255:	add    eax,DWORD PTR [eax]
	...
1000125f:	add    al,dh
10001261:	inc    ebx
10001262:	add    BYTE PTR [eax],al
10001264:	test   al,0x25
	...
1000126e:	add    BYTE PTR [eax],al
10001270:	cwde   
10001271:	imul   eax,DWORD PTR [eax],0x10a800
	...
1000127f:	add    BYTE PTR [eax+0x7a],al
10001282:	add    BYTE PTR [eax],al
10001284:	test   BYTE PTR [eax],al
	...
1000128e:	add    BYTE PTR [eax],al
10001290:	mov    al,0x12
10001292:	add    BYTE PTR [eax],al
10001294:	test   al,0x4
	...
1000129e:	add    BYTE PTR [eax],al
100012a0:	pop    eax
100012a1:	pop    ss
100012a2:	add    BYTE PTR [eax],al
100012a4:	std    
100012a5:	add    DWORD PTR [eax],eax
	...
100012af:	add    BYTE PTR [eax+0x3404],ch
100012b5:	add    BYTE PTR [esi+0x0],dl
100012b8:	push   ebx
100012b9:	add    BYTE PTR [edi+0x0],bl
100012bc:	push   esi
100012bd:	add    BYTE PTR [ebp+0x0],al
100012c0:	push   edx
100012c1:	add    BYTE PTR [ebx+0x0],dl
100012c4:	dec    ecx
100012c5:	add    BYTE PTR [edi+0x0],cl
100012c8:	dec    esi
100012c9:	add    BYTE PTR [edi+0x0],bl
100012cc:	dec    ecx
100012cd:	add    BYTE PTR [esi+0x0],cl
100012d0:	inc    esi
100012d1:	add    BYTE PTR [edi+0x0],cl
100012d4:	add    BYTE PTR [eax],al
100012d6:	add    BYTE PTR [eax],al
100012d8:	mov    ebp,0xfeef04
100012dd:	add    BYTE PTR [ecx],al
100012df:	add    BYTE PTR [eax],al
100012e1:	add    BYTE PTR [esi],cl
100012e3:	add    al,ch
100012e5:	add    ebx,DWORD PTR [ecx+0xe000012]
100012eb:	add    BYTE PTR [eax],al
100012ed:	add    BYTE PTR [ecx+0x3f12],bl
100012f3:	add    BYTE PTR [eax],al
100012f5:	add    BYTE PTR [eax],al
100012f7:	add    BYTE PTR [eax+eax*1],al
100012fa:	add    al,0x0
	...
1000130c:	push   es
1000130d:	add    al,0x0
1000130f:	add    BYTE PTR [ecx],al
10001311:	add    BYTE PTR [ebx+0x0],dl
10001314:	je     0x10001316
10001316:	jb     0x10001318
10001318:	imul   eax,DWORD PTR [eax],0x67006e
1000131e:	inc    esi
1000131f:	add    BYTE PTR [ecx+0x0],ch
10001322:	ins    BYTE PTR es:[edi],dx
10001323:	add    BYTE PTR [ebp+0x0],ah
10001326:	dec    ecx
10001327:	add    BYTE PTR [esi+0x0],ch
1000132a:	data16 add BYTE PTR [edi+0x0],ch
1000132e:	add    BYTE PTR [eax],al
10001330:	loop   0x10001335
10001332:	add    BYTE PTR [eax],al
10001334:	add    DWORD PTR [eax],eax
10001336:	xor    BYTE PTR [eax],al
10001338:	xor    al,0x0
1000133a:	xor    BYTE PTR [eax],al
1000133c:	cmp    DWORD PTR [eax],eax
1000133e:	xor    BYTE PTR [eax],al
10001340:	xor    al,0x0
10001342:	inc    ebp
10001343:	add    BYTE PTR [eax+eax*1],dh
10001346:	add    BYTE PTR [eax],al
10001348:	dec    esp
10001349:	add    BYTE PTR [esi],dl
1000134b:	add    BYTE PTR [ecx],al
1000134d:	add    BYTE PTR [ebx+0x0],al
10001350:	outs   dx,DWORD PTR ds:[esi]
10001351:	add    BYTE PTR [ebp+0x0],ch
10001354:	jo     0x10001356
10001356:	popa   
10001357:	add    BYTE PTR [esi+0x0],ch
1000135a:	jns    0x1000135c
1000135c:	dec    esi
1000135d:	add    BYTE PTR [ecx+0x0],ah
10001360:	ins    DWORD PTR es:[edi],dx
10001361:	add    BYTE PTR [ebp+0x0],ah
10001364:	add    BYTE PTR [eax],al
10001366:	add    BYTE PTR [eax],al
10001368:	dec    ebp
10001369:	add    BYTE PTR [ecx+0x0],ch
1000136c:	arpl   WORD PTR [eax],ax
1000136e:	jb     0x10001370
10001370:	outs   dx,DWORD PTR ds:[esi]
10001371:	add    BYTE PTR [ebx+0x0],dh
10001374:	outs   dx,DWORD PTR ds:[esi]
10001375:	add    BYTE PTR [esi+0x0],ah
10001378:	je     0x1000137a
1000137a:	and    BYTE PTR [eax],al
1000137c:	inc    ebx
1000137d:	add    BYTE PTR [edi+0x0],ch
10001380:	jb     0x10001382
10001382:	jo     0x10001384
10001384:	outs   dx,DWORD PTR ds:[esi]
10001385:	add    BYTE PTR [edx+0x0],dh
10001388:	popa   
10001389:	add    BYTE PTR [eax+eax*1+0x69],dh
1000138d:	add    BYTE PTR [edi+0x0],ch
10001390:	outs   dx,BYTE PTR ds:[esi]
10001391:	add    BYTE PTR [eax],al
10001393:	add    BYTE PTR [eax+0x0],ch
10001396:	and    BYTE PTR [eax],al
10001398:	add    DWORD PTR [eax],eax
1000139a:	inc    esi
1000139b:	add    BYTE PTR [ecx+0x0],ch
1000139e:	ins    BYTE PTR es:[edi],dx
1000139f:	add    BYTE PTR [ebp+0x0],ah
100013a2:	inc    esp
100013a3:	add    BYTE PTR [ebp+0x0],ah
100013a6:	jae    0x100013a8
100013a8:	arpl   WORD PTR [eax],ax
100013aa:	jb     0x100013ac
100013ac:	imul   eax,DWORD PTR [eax],0x740070
100013b2:	imul   eax,DWORD PTR [eax],0x6e006f
100013b8:	add    BYTE PTR [eax],al
100013ba:	add    BYTE PTR [eax],al
100013bc:	dec    ebp
100013bd:	add    BYTE PTR [ecx+0x0],ch
100013c0:	arpl   WORD PTR [eax],ax
100013c2:	jb     0x100013c4
100013c4:	outs   dx,DWORD PTR ds:[esi]
100013c5:	add    BYTE PTR [ebx+0x0],dh
100013c8:	outs   dx,DWORD PTR ds:[esi]
100013c9:	add    BYTE PTR [esi+0x0],ah
100013cc:	je     0x100013ce
100013ce:	and    BYTE PTR [eax],al
100013d0:	dec    edi
100013d1:	add    BYTE PTR [esi+0x0],ah
100013d4:	data16 add BYTE PTR [ecx+0x0],ch
100013d8:	arpl   WORD PTR [eax],ax
100013da:	add    BYTE PTR gs:[eax],ah
100013dd:	add    BYTE PTR [edx],dh
100013df:	add    BYTE PTR [eax],dh
100013e1:	add    BYTE PTR [ecx],dh
100013e3:	add    BYTE PTR [eax],dh
100013e5:	add    BYTE PTR [eax],ah
100013e7:	add    BYTE PTR [ebx+0x0],ah
100013ea:	outs   dx,DWORD PTR ds:[esi]
100013eb:	add    BYTE PTR [ebp+0x0],ch
100013ee:	jo     0x100013f0
100013f0:	outs   dx,DWORD PTR ds:[esi]
100013f1:	add    BYTE PTR [esi+0x0],ch
100013f4:	add    BYTE PTR gs:[esi+0x0],ch
100013f8:	je     0x100013fa
100013fa:	add    BYTE PTR [eax],al
100013fc:	add    BYTE PTR ds:[edi],cl
100013ff:	add    BYTE PTR [ecx],al
10001401:	add    BYTE PTR [esi+0x0],al
10001404:	imul   eax,DWORD PTR [eax],0x65006c
1000140a:	push   esi
1000140b:	add    BYTE PTR [ebp+0x0],ah
1000140e:	jb     0x10001410
10001410:	jae    0x10001412
10001412:	imul   eax,DWORD PTR [eax],0x6e006f
10001418:	add    BYTE PTR [eax],al
1000141a:	add    BYTE PTR [eax],al
1000141c:	xor    DWORD PTR [eax],eax
1000141e:	xor    al,0x0
10001420:	add    BYTE PTR cs:[eax],dh
10001423:	add    BYTE PTR [esi],ch
10001425:	add    BYTE PTR [eax+eax*1],dh
10001428:	aaa    
10001429:	add    BYTE PTR [esi],dh
1000142b:	add    BYTE PTR [ecx],dh
1000142d:	add    BYTE PTR [esi],ch
1000142f:	add    BYTE PTR [ecx],dh
10001431:	add    BYTE PTR [eax],dh
10001433:	add    BYTE PTR [eax],dh
10001435:	add    BYTE PTR [eax],dh
10001437:	add    BYTE PTR [eax],al
10001439:	add    BYTE PTR [eax],al
1000143b:	add    BYTE PTR [eax+eax*1],dh
1000143e:	or     al,BYTE PTR [eax]
10001440:	add    DWORD PTR [eax],eax
10001442:	dec    ecx
10001443:	add    BYTE PTR [esi+0x0],ch
10001446:	je     0x10001448
10001448:	add    BYTE PTR gs:[edx+0x0],dh
1000144c:	outs   dx,BYTE PTR ds:[esi]
1000144d:	add    BYTE PTR [ecx+0x0],ah
10001450:	ins    BYTE PTR es:[edi],dx
10001451:	add    BYTE PTR [esi+0x0],cl
10001454:	popa   
10001455:	add    BYTE PTR [ebp+0x0],ch
10001458:	add    BYTE PTR gs:[eax],al
1000145b:	add    BYTE PTR [ecx+0x0],ch
1000145e:	arpl   WORD PTR [eax],ax
10001460:	outs   dx,DWORD PTR ds:[esi]
10001461:	add    BYTE PTR [esi+0x0],ch
10001464:	jae    0x10001466
10001466:	add    BYTE PTR cs:[ebp+0x0],ah
1000146a:	js     0x1000146c
1000146c:	add    BYTE PTR gs:[eax],al
1000146f:	add    BYTE PTR [eax+eax*1+0x10034],cl
10001476:	dec    esp
10001477:	add    BYTE PTR [ebp+0x0],ah
1000147a:	add    BYTE PTR [bx+di+0x0],ah
1000147e:	ins    BYTE PTR es:[edi],dx
1000147f:	add    BYTE PTR [ebx+0x0],al
10001482:	outs   dx,DWORD PTR ds:[esi]
10001483:	add    BYTE PTR [eax+0x0],dh
10001486:	jns    0x10001488
10001488:	jb     0x1000148a
1000148a:	imul   eax,DWORD PTR [eax],0x680067
10001490:	je     0x10001492
10001492:	add    BYTE PTR [eax],al
10001494:	test   eax,0x32002000
10001499:	add    BYTE PTR [eax],dh
1000149b:	add    BYTE PTR [ecx],dh
1000149d:	add    BYTE PTR [eax],dh
1000149f:	add    BYTE PTR [eax],ah
100014a1:	add    BYTE PTR [ebp+0x0],cl
100014a4:	imul   eax,DWORD PTR [eax],0x720063
100014aa:	outs   dx,DWORD PTR ds:[esi]
100014ab:	add    BYTE PTR [ebx+0x0],dh
100014ae:	outs   dx,DWORD PTR ds:[esi]
100014af:	add    BYTE PTR [esi+0x0],ah
100014b2:	je     0x100014b4
100014b4:	and    BYTE PTR [eax],al
100014b6:	inc    ebx
100014b7:	add    BYTE PTR [edi+0x0],ch
100014ba:	jb     0x100014bc
100014bc:	jo     0x100014be
100014be:	outs   dx,DWORD PTR ds:[esi]
100014bf:	add    BYTE PTR [edx+0x0],dh
100014c2:	popa   
100014c3:	add    BYTE PTR [eax+eax*1+0x69],dh
100014c7:	add    BYTE PTR [edi+0x0],ch
100014ca:	outs   dx,BYTE PTR ds:[esi]
100014cb:	add    BYTE PTR [esi],ch
100014cd:	add    BYTE PTR [eax],ah
100014cf:	add    BYTE PTR [eax],ah
100014d1:	add    BYTE PTR [ecx+0x0],al
100014d4:	ins    BYTE PTR es:[edi],dx
100014d5:	add    BYTE PTR [eax+eax*1+0x20],ch
100014d9:	add    BYTE PTR [edx+0x0],dh
100014dc:	imul   eax,DWORD PTR [eax],0x680067
100014e2:	je     0x100014e4
100014e4:	jae    0x100014e6
100014e6:	and    BYTE PTR [eax],al
100014e8:	jb     0x100014ea
100014ea:	add    BYTE PTR gs:[ebx+0x0],dh
100014ee:	add    BYTE PTR gs:[edx+0x0],dh
100014f2:	jbe    0x100014f4
100014f4:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
100014f9:	add    BYTE PTR [eax],al
100014fb:	add    BYTE PTR [esi+0x1003f00],ah
10001501:	add    BYTE PTR [eax+eax*1+0x65],cl
10001505:	add    BYTE PTR [edi+0x0],ah
10001508:	popa   
10001509:	add    BYTE PTR [eax+eax*1+0x54],ch
1000150d:	add    BYTE PTR [edx+0x0],dh
10001510:	popa   
10001511:	add    BYTE PTR [eax+eax*1+0x65],ah
10001515:	add    BYTE PTR [ebp+0x0],ch
10001518:	popa   
10001519:	add    BYTE PTR [edx+0x0],dh
1000151c:	imul   eax,DWORD PTR [eax],0x73
1000151f:	add    BYTE PTR [ecx],dh
10001521:	add    BYTE PTR [eax],al
10001523:	add    BYTE PTR [ebp+0x0],cl
10001526:	imul   eax,DWORD PTR [eax],0x720063
1000152c:	outs   dx,DWORD PTR ds:[esi]
1000152d:	add    BYTE PTR [ebx+0x0],dh
10001530:	outs   dx,DWORD PTR ds:[esi]
10001531:	add    BYTE PTR [esi+0x0],ah
10001534:	je     0x10001536
10001536:	scas   al,BYTE PTR es:[edi]
10001537:	add    BYTE PTR [eax],ah
10001539:	add    BYTE PTR [ecx+0x0],ch
1000153c:	jae    0x1000153e
1000153e:	and    BYTE PTR [eax],al
10001540:	popa   
10001541:	add    BYTE PTR [eax],ah
10001543:	add    BYTE PTR [edx+0x0],dh
10001546:	add    BYTE PTR gs:[edi+0x0],ah
1000154a:	imul   eax,DWORD PTR [eax],0x740073
10001550:	add    BYTE PTR gs:[edx+0x0],dh
10001554:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
10001559:	add    BYTE PTR [eax+eax*1+0x72],dh
1000155d:	add    BYTE PTR [ecx+0x0],ah
10001560:	add    BYTE PTR fs:[ebp+0x0],ah
10001564:	ins    DWORD PTR es:[edi],dx
10001565:	add    BYTE PTR [ecx+0x0],ah
10001568:	jb     0x1000156a
1000156a:	imul   eax,DWORD PTR [eax],0x20
1000156d:	add    BYTE PTR [edi+0x0],ch
10001570:	data16 add BYTE PTR [eax],ah
10001573:	add    BYTE PTR [ebp+0x0],cl
10001576:	imul   eax,DWORD PTR [eax],0x720063
1000157c:	outs   dx,DWORD PTR ds:[esi]
1000157d:	add    BYTE PTR [ebx+0x0],dh
10001580:	outs   dx,DWORD PTR ds:[esi]
10001581:	add    BYTE PTR [esi+0x0],ah
10001584:	je     0x10001586
10001586:	and    BYTE PTR [eax],al
10001588:	inc    ebx
10001589:	add    BYTE PTR [edi+0x0],ch
1000158c:	jb     0x1000158e
1000158e:	jo     0x10001590
10001590:	outs   dx,DWORD PTR ds:[esi]
10001591:	add    BYTE PTR [edx+0x0],dh
10001594:	popa   
10001595:	add    BYTE PTR [eax+eax*1+0x69],dh
10001599:	add    BYTE PTR [edi+0x0],ch
1000159c:	outs   dx,BYTE PTR ds:[esi]
1000159d:	add    BYTE PTR [esi],ch
1000159f:	add    BYTE PTR [eax],al
100015a1:	add    BYTE PTR [eax],al
100015a3:	add    BYTE PTR [edx+0x1003d00],ah
100015a9:	add    BYTE PTR [eax+eax*1+0x65],cl
100015ad:	add    BYTE PTR [edi+0x0],ah
100015b0:	popa   
100015b1:	add    BYTE PTR [eax+eax*1+0x54],ch
100015b5:	add    BYTE PTR [edx+0x0],dh
100015b8:	popa   
100015b9:	add    BYTE PTR [eax+eax*1+0x65],ah
100015bd:	add    BYTE PTR [ebp+0x0],ch
100015c0:	popa   
100015c1:	add    BYTE PTR [edx+0x0],dh
100015c4:	imul   eax,DWORD PTR [eax],0x73
100015c7:	add    BYTE PTR [edx],dh
100015c9:	add    BYTE PTR [eax],al
100015cb:	add    BYTE PTR [edi+0x0],dl
100015ce:	imul   eax,DWORD PTR [eax],0x64006e
100015d4:	outs   dx,DWORD PTR ds:[esi]
100015d5:	add    BYTE PTR [edi+0x0],dh
100015d8:	jae    0x100015da
100015da:	scas   al,BYTE PTR es:[edi]
100015db:	add    BYTE PTR [eax],ah
100015dd:	add    BYTE PTR [ecx+0x0],ch
100015e0:	jae    0x100015e2
100015e2:	and    BYTE PTR [eax],al
100015e4:	popa   
100015e5:	add    BYTE PTR [eax],ah
100015e7:	add    BYTE PTR [edx+0x0],dh
100015ea:	add    BYTE PTR gs:[edi+0x0],ah
100015ee:	imul   eax,DWORD PTR [eax],0x740073
100015f4:	add    BYTE PTR gs:[edx+0x0],dh
100015f8:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
100015fd:	add    BYTE PTR [eax+eax*1+0x72],dh
10001601:	add    BYTE PTR [ecx+0x0],ah
10001604:	add    BYTE PTR fs:[ebp+0x0],ah
10001608:	ins    DWORD PTR es:[edi],dx
10001609:	add    BYTE PTR [ecx+0x0],ah
1000160c:	jb     0x1000160e
1000160e:	imul   eax,DWORD PTR [eax],0x20
10001611:	add    BYTE PTR [edi+0x0],ch
10001614:	data16 add BYTE PTR [eax],ah
10001617:	add    BYTE PTR [ebp+0x0],cl
1000161a:	imul   eax,DWORD PTR [eax],0x720063
10001620:	outs   dx,DWORD PTR ds:[esi]
10001621:	add    BYTE PTR [ebx+0x0],dh
10001624:	outs   dx,DWORD PTR ds:[esi]
10001625:	add    BYTE PTR [esi+0x0],ah
10001628:	je     0x1000162a
1000162a:	and    BYTE PTR [eax],al
1000162c:	inc    ebx
1000162d:	add    BYTE PTR [edi+0x0],ch
10001630:	jb     0x10001632
10001632:	jo     0x10001634
10001634:	outs   dx,DWORD PTR ds:[esi]
10001635:	add    BYTE PTR [edx+0x0],dh
10001638:	popa   
10001639:	add    BYTE PTR [eax+eax*1+0x69],dh
1000163d:	add    BYTE PTR [edi+0x0],ch
10001640:	outs   dx,BYTE PTR ds:[esi]
10001641:	add    BYTE PTR [esi],ch
10001643:	add    BYTE PTR [eax],al
10001645:	add    BYTE PTR [eax],al
10001647:	add    BYTE PTR [eax+eax*1],bh
1000164a:	or     al,BYTE PTR [eax]
1000164c:	add    DWORD PTR [eax],eax
1000164e:	dec    edi
1000164f:	add    BYTE PTR [edx+0x0],dh
10001652:	imul   eax,DWORD PTR [eax],0x690067
10001658:	outs   dx,BYTE PTR ds:[esi]
10001659:	add    BYTE PTR [ecx+0x0],ah
1000165c:	ins    BYTE PTR es:[edi],dx
1000165d:	add    BYTE PTR [esi+0x0],al
10001660:	imul   eax,DWORD PTR [eax],0x65006c
10001666:	outs   dx,BYTE PTR ds:[esi]
10001667:	add    BYTE PTR [ecx+0x0],ah
1000166a:	ins    DWORD PTR es:[edi],dx
1000166b:	add    BYTE PTR [ebp+0x0],ah
1000166e:	add    BYTE PTR [eax],al
10001670:	imul   eax,DWORD PTR [eax],0x6f0063
10001676:	outs   dx,BYTE PTR ds:[esi]
10001677:	add    BYTE PTR [ebx+0x0],dh
1000167a:	add    BYTE PTR cs:[ebp+0x0],ah
1000167e:	js     0x10001680
10001680:	add    BYTE PTR gs:[eax],al
10001683:	add    BYTE PTR [eax+eax*1+0x16],cl
10001687:	add    BYTE PTR [ecx],al
10001689:	add    BYTE PTR [eax+0x0],dl
1000168c:	jb     0x1000168e
1000168e:	outs   dx,DWORD PTR ds:[esi]
1000168f:	add    BYTE PTR [eax+eax*1+0x75],ah
10001693:	add    BYTE PTR [ebx+0x0],ah
10001696:	je     0x10001698
10001698:	dec    esi
10001699:	add    BYTE PTR [ecx+0x0],ah
1000169c:	ins    DWORD PTR es:[edi],dx
1000169d:	add    BYTE PTR [ebp+0x0],ah
100016a0:	add    BYTE PTR [eax],al
100016a2:	add    BYTE PTR [eax],al
100016a4:	dec    ebp
100016a5:	add    BYTE PTR [ecx+0x0],ch
100016a8:	arpl   WORD PTR [eax],ax
100016aa:	jb     0x100016ac
100016ac:	outs   dx,DWORD PTR ds:[esi]
100016ad:	add    BYTE PTR [ebx+0x0],dh
100016b0:	outs   dx,DWORD PTR ds:[esi]
100016b1:	add    BYTE PTR [esi+0x0],ah
100016b4:	je     0x100016b6
100016b6:	and    BYTE PTR [eax],al
100016b8:	dec    edi
100016b9:	add    BYTE PTR [esi+0x0],ah
100016bc:	data16 add BYTE PTR [ecx+0x0],ch
100016c0:	arpl   WORD PTR [eax],ax
100016c2:	add    BYTE PTR gs:[eax],ah
100016c5:	add    BYTE PTR [edx],dh
100016c7:	add    BYTE PTR [eax],dh
100016c9:	add    BYTE PTR [ecx],dh
100016cb:	add    BYTE PTR [eax],dh
100016cd:	add    BYTE PTR [eax],al
100016cf:	add    BYTE PTR [edx+0x0],al
100016d2:	sldt   WORD PTR [ecx]
100016d5:	add    BYTE PTR [eax+0x0],dl
100016d8:	jb     0x100016da
100016da:	outs   dx,DWORD PTR ds:[esi]
100016db:	add    BYTE PTR [eax+eax*1+0x75],ah
100016df:	add    BYTE PTR [ebx+0x0],ah
100016e2:	je     0x100016e4
100016e4:	push   esi
100016e5:	add    BYTE PTR [ebp+0x0],ah
100016e8:	jb     0x100016ea
100016ea:	jae    0x100016ec
100016ec:	imul   eax,DWORD PTR [eax],0x6e006f
100016f2:	add    BYTE PTR [eax],al
100016f4:	xor    DWORD PTR [eax],eax
100016f6:	xor    al,0x0
100016f8:	add    BYTE PTR cs:[eax],dh
100016fb:	add    BYTE PTR [esi],ch
100016fd:	add    BYTE PTR [eax+eax*1],dh
10001700:	aaa    
10001701:	add    BYTE PTR [esi],dh
10001703:	add    BYTE PTR [ecx],dh
10001705:	add    BYTE PTR [esi],ch
10001707:	add    BYTE PTR [ecx],dh
10001709:	add    BYTE PTR [eax],dh
1000170b:	add    BYTE PTR [eax],dh
1000170d:	add    BYTE PTR [eax],dh
1000170f:	add    BYTE PTR [eax],al
10001711:	add    BYTE PTR [eax],al
10001713:	add    BYTE PTR [eax+eax*1+0x0],al
10001717:	add    BYTE PTR [ecx],al
10001719:	add    BYTE PTR [esi+0x0],dl
1000171c:	popa   
1000171d:	add    BYTE PTR [edx+0x0],dh
10001720:	inc    esi
10001721:	add    BYTE PTR [ecx+0x0],ch
10001724:	ins    BYTE PTR es:[edi],dx
10001725:	add    BYTE PTR [ebp+0x0],ah
10001728:	dec    ecx
10001729:	add    BYTE PTR [esi+0x0],ch
1000172c:	data16 add BYTE PTR [edi+0x0],ch
10001730:	add    BYTE PTR [eax],al
10001732:	add    BYTE PTR [eax],al
10001734:	and    al,0x0
10001736:	add    al,0x0
10001738:	add    BYTE PTR [eax],al
1000173a:	push   esp
1000173b:	add    BYTE PTR [edx+0x0],dh
1000173e:	popa   
1000173f:	add    BYTE PTR [esi+0x0],ch
10001742:	jae    0x10001744
10001744:	ins    BYTE PTR es:[edi],dx
10001745:	add    BYTE PTR [ecx+0x0],ah
10001748:	je     0x1000174a
1000174a:	imul   eax,DWORD PTR [eax],0x6e006f
10001750:	add    BYTE PTR [eax],al
10001752:	add    BYTE PTR [eax],al
10001754:	add    BYTE PTR [eax],al
10001756:	in     al,0x4
10001758:	cmp    al,0x3f
1000175a:	js     0x100017c9
1000175c:	ins    BYTE PTR es:[edi],dx
1000175d:	and    BYTE PTR [esi+0x65],dh
10001760:	jb     0x100017d5
10001762:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
10001769:	xor    BYTE PTR [edx],ah
1000176b:	and    BYTE PTR [ebp+0x6e],ah
1000176e:	arpl   WORD PTR [edi+0x64],bp
10001771:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
10001778:	inc    esi
10001779:	sub    eax,0x73202238
1000177e:	je     0x100017e1
10001780:	outs   dx,BYTE PTR ds:[esi]
10001781:	fs popa 
10001783:	ins    BYTE PTR es:[edi],dx
10001784:	outs   dx,DWORD PTR ds:[esi]
10001785:	outs   dx,BYTE PTR ds:[esi]
10001786:	gs cmp eax,0x73657922
1000178c:	and    ah,BYTE PTR [eax]
1000178e:	aas    
1000178f:	ds or  eax,0x73613c0a
10001795:	jae    0x100017fc
10001797:	ins    DWORD PTR es:[edi],dx
10001798:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
1000179c:	js     0x1000180b
1000179e:	ins    BYTE PTR es:[edi],dx
1000179f:	outs   dx,BYTE PTR ds:[esi]
100017a0:	jae    0x100017df
100017a2:	and    dh,BYTE PTR [ebp+0x72]
100017a5:	outs   dx,BYTE PTR ds:[esi]
100017a6:	cmp    dh,BYTE PTR [ebx+0x63]
100017a9:	push   0x73616d65
100017ae:	sub    eax,0x7263696d
100017b3:	outs   dx,DWORD PTR ds:[esi]
100017b4:	jae    0x10001825
100017b6:	data16 je 0x100017e6
100017b9:	arpl   WORD PTR [edi+0x6d],bp
100017bc:	cmp    ah,BYTE PTR [ecx+0x73]
100017bf:	ins    DWORD PTR es:[edi],dx
100017c0:	cs jbe 0x100017f4
100017c3:	and    ah,BYTE PTR [eax]
100017c5:	ins    DWORD PTR es:[edi],dx
100017c6:	popa   
100017c7:	outs   dx,BYTE PTR ds:[esi]
100017c8:	imul   esp,DWORD PTR [esi+0x65],0x65567473
100017cf:	jb     0x10001844
100017d1:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
100017d8:	xor    BYTE PTR [edx],ah
100017da:	ds or  eax,0x6e3c090a
100017e0:	outs   dx,DWORD PTR ds:[esi]
100017e1:	dec    ecx
100017e2:	outs   dx,BYTE PTR ds:[esi]
100017e3:	push   0x74697265
100017e8:	and    BYTE PTR [edi],ch
100017ea:	ds or  eax,0x613c090a
100017f0:	jae    0x10001865
100017f2:	gs ins DWORD PTR es:[edi],dx
100017f4:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
100017f8:	fs outs dx,BYTE PTR gs:[esi]
100017fb:	je     0x10001866
100017fd:	je     0x10001878
100017ff:	and    BYTE PTR [eax+0x72],dh
10001802:	outs   dx,DWORD PTR ds:[esi]
10001803:	arpl   WORD PTR [ebp+0x73],sp
10001806:	jae    0x10001877
10001808:	jb     0x1000184b
1000180a:	jb     0x1000186f
1000180c:	push   0x63657469
10001811:	je     0x10001888
10001813:	jb     0x1000187a
10001815:	cmp    eax,0x36387822
1000181a:	and    ah,BYTE PTR [eax]
1000181c:	je     0x10001897
1000181e:	jo     0x10001885
10001820:	cmp    eax,0x6e697722
10001825:	xor    esi,DWORD PTR [edx]
10001827:	and    ah,BYTE PTR [eax]
10001829:	outs   dx,BYTE PTR ds:[esi]
1000182a:	popa   
1000182b:	ins    DWORD PTR es:[edi],dx
1000182c:	gs cmp eax,0x6f636922
10001832:	outs   dx,BYTE PTR ds:[esi]
10001833:	and    ah,BYTE PTR [eax]
10001835:	jbe    0x1000189c
10001837:	jb     0x100018ac
10001839:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
10001840:	xor    BYTE PTR [esi],ch
10001842:	xor    BYTE PTR [esi],ch
10001844:	xor    BYTE PTR [edx],ah
10001846:	and    BYTE PTR [edi],ch
10001848:	ds or  eax,0x643c090a
1000184e:	gs jae 0x100018b4
10001851:	jb     0x100018bc
10001853:	jo     0x100018c9
10001855:	imul   ebp,DWORD PTR [edi+0x6e],0x6f63693e
1000185c:	outs   dx,BYTE PTR ds:[esi]
1000185d:	cmp    al,0x2f
1000185f:	fs gs jae 0x100018c6
10001863:	jb     0x100018ce
10001865:	jo     0x100018db
10001867:	imul   ebp,DWORD PTR [edi+0x6e],0x90a0d3e
1000186e:	cmp    al,0x74
10001870:	jb     0x100018e7
10001872:	jae    0x100018e8
10001874:	dec    ecx
10001875:	outs   dx,BYTE PTR ds:[esi]
10001876:	outs   dx,WORD PTR ds:[esi]
10001878:	and    BYTE PTR [eax+0x6d],bh
1000187b:	ins    BYTE PTR es:[edi],dx
1000187c:	outs   dx,BYTE PTR ds:[esi]
1000187d:	jae    0x100018bc
1000187f:	and    dh,BYTE PTR [ebp+0x72]
10001882:	outs   dx,BYTE PTR ds:[esi]
10001883:	cmp    dh,BYTE PTR [ebx+0x63]
10001886:	push   0x73616d65
1000188b:	sub    eax,0x7263696d
10001890:	outs   dx,DWORD PTR ds:[esi]
10001891:	jae    0x10001902
10001893:	data16 je 0x100018c3
10001896:	arpl   WORD PTR [edi+0x6d],bp
10001899:	cmp    ah,BYTE PTR [ecx+0x73]
1000189c:	ins    DWORD PTR es:[edi],dx
1000189d:	cs jbe 0x100018d3
100018a0:	and    bh,BYTE PTR [esi]
100018a2:	or     eax,0x3c09090a
100018a7:	jae    0x1000190e
100018a9:	arpl   WORD PTR [ebp+0x72],si
100018ac:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x9090a0d
100018b4:	or     DWORD PTR [edx+esi*2],edi
100018b7:	gs jno 0x1000192f
100018ba:	gs jae 0x10001931
100018bd:	gs fs push eax
100018c0:	jb     0x1000192b
100018c2:	jbe    0x1000192d
100018c4:	ins    BYTE PTR es:[edi],dx
100018c5:	gs addr16 gs jae 0x10001908
100018ca:	or     eax,0x909090a
100018cf:	or     DWORD PTR [edx+esi*2],edi
100018d2:	gs jno 0x1000194a
100018d5:	gs jae 0x1000194c
100018d8:	gs fs inc ebp
100018db:	js     0x10001942
100018dd:	arpl   WORD PTR [ebp+0x74],si
100018e0:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
100018e7:	ins    BYTE PTR es:[edi],dx
100018e8:	and    BYTE PTR [ebp+eiz*2+0x76],ch
100018ec:	gs ins BYTE PTR es:[edi],dx
100018ee:	cmp    eax,0x49736122
100018f3:	outs   dx,BYTE PTR ds:[esi]
100018f4:	jbe    0x10001965
100018f6:	imul   esp,DWORD PTR [ebp+0x72],0x22
100018fa:	and    BYTE PTR [ebp+0x69],dh
100018fd:	inc    ecx
100018fe:	arpl   WORD PTR [ebx+0x65],sp
10001901:	jae    0x10001976
10001903:	cmp    eax,0x6c616622
10001908:	jae    0x1000196f
1000190a:	and    ch,BYTE PTR [edi]
1000190c:	ds or  eax,0x909090a
10001912:	cmp    al,0x2f
10001914:	jb     0x1000197b
10001916:	jno    0x1000198d
10001918:	gs jae 0x1000198f
1000191b:	gs fs push eax
1000191e:	jb     0x10001989
10001920:	jbe    0x1000198b
10001922:	ins    BYTE PTR es:[edi],dx
10001923:	gs addr16 gs jae 0x10001966
10001928:	or     eax,0x3c09090a
1000192d:	das    
1000192e:	jae    0x10001995
10001930:	arpl   WORD PTR [ebp+0x72],si
10001933:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x3c090a0d
1000193b:	das    
1000193c:	je     0x100019b0
1000193e:	jne    0x100019b3
10001940:	je     0x1000198b
10001942:	outs   dx,BYTE PTR ds:[esi]
10001943:	outs   dx,WORD PTR ds:[esi]
10001945:	ds or  eax,0x612f3c0a
1000194b:	jae    0x100019c0
1000194d:	gs ins DWORD PTR es:[edi],dx
1000194f:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
10001953:	or     eax,0xa
10001958:	sub    BYTE PTR [eax],al
1000195a:	add    BYTE PTR [eax],al
1000195c:	xor    BYTE PTR [eax],al
1000195e:	add    BYTE PTR [eax],al
10001960:	pusha  
10001961:	add    BYTE PTR [eax],al
10001963:	add    BYTE PTR [ecx],al
10001965:	add    BYTE PTR [eax+eax*1],al
	...
10001984:	add    BYTE PTR [eax],al
10001986:	add    BYTE PTR [eax],0x0
10001989:	add    BYTE PTR [eax],0x0
1000198c:	add    BYTE PTR [eax+0x800080],al
10001992:	add    BYTE PTR [eax],al
10001994:	add    BYTE PTR [eax],0x80
10001997:	add    BYTE PTR [eax-0x3fffff80],al
1000199d:	rol    al,0x0
100019a0:	add    BYTE PTR [eax+0x80],0xff
100019a7:	add    BYTE PTR [eax],al
100019a9:	inc    DWORD PTR [eax]
100019ab:	add    BYTE PTR [eax],al
100019ad:	(bad)  
100019ae:	inc    DWORD PTR [eax]
100019b0:	inc    DWORD PTR [eax]
100019b2:	add    BYTE PTR [eax],al
100019b4:	inc    DWORD PTR [eax]
100019b6:	inc    DWORD PTR [eax]
100019b8:	(bad)  
100019b9:	inc    DWORD PTR [eax]
100019bb:	add    bh,bh
100019bd:	(bad)  
100019be:	inc    DWORD PTR [eax]
100019c0:	xchg   ecx,eax
100019c1:	xchg   ecx,eax
100019c2:	xchg   ecx,eax
100019c3:	xchg   ecx,eax
100019c4:	xchg   ecx,eax
100019c5:	xchg   ecx,eax
100019c6:	xchg   ecx,eax
100019c7:	xchg   ecx,eax
100019c8:	xchg   ecx,eax
100019c9:	xchg   ecx,eax
100019ca:	xchg   ecx,eax
100019cb:	xchg   ecx,eax
100019cc:	xchg   ecx,eax
100019cd:	xchg   ecx,eax
100019ce:	xchg   ecx,eax
100019cf:	xchg   ecx,eax
100019d0:	xchg   ecx,eax
100019d1:	xchg   ecx,eax
100019d2:	xchg   ecx,eax
100019d3:	xchg   ecx,eax
100019d4:	xchg   ecx,eax
100019d5:	xchg   ecx,eax
100019d6:	xchg   ecx,eax
100019d7:	xchg   ecx,eax
100019d8:	sbb    DWORD PTR [ecx],ebx
100019da:	sbb    DWORD PTR [ecx],ebx
100019dc:	sbb    DWORD PTR [ecx],ebx
100019de:	sbb    DWORD PTR [ecx],ebx
100019e0:	sbb    DWORD PTR [ecx],ebx
100019e2:	sbb    DWORD PTR [ecx],ebx
100019e4:	sbb    DWORD PTR [ecx],ebx
100019e6:	sbb    DWORD PTR [ecx],ebx
100019e8:	sbb    DWORD PTR [ecx],ebx
100019ea:	sbb    DWORD PTR [ecx],ebx
100019ec:	sbb    DWORD PTR [ecx],ebx
100019ee:	sbb    DWORD PTR [ecx],ebx
100019f0:	xchg   ecx,eax
100019f1:	xchg   ecx,eax
100019f2:	xchg   ecx,eax
100019f3:	xchg   ecx,eax
100019f4:	xchg   ecx,eax
100019f5:	xchg   ecx,eax
100019f6:	xchg   ecx,eax
100019f7:	xchg   ecx,eax
100019f8:	xchg   ecx,eax
100019f9:	xchg   ecx,eax
100019fa:	xchg   ecx,eax
100019fb:	xchg   ecx,eax
100019fc:	xchg   ecx,eax
100019fd:	xchg   ecx,eax
100019fe:	xchg   ecx,eax
100019ff:	xchg   ecx,eax
10001a00:	xchg   ecx,eax
10001a01:	xchg   ecx,eax
10001a02:	xchg   ecx,eax
10001a03:	xchg   ecx,eax
10001a04:	xchg   ecx,eax
10001a05:	xchg   ecx,eax
10001a06:	xchg   ecx,eax
10001a07:	xchg   ecx,eax
10001a08:	sbb    DWORD PTR [ecx],ebx
10001a0a:	sbb    DWORD PTR [ecx],ebx
10001a0c:	sbb    DWORD PTR [ecx],ebx
10001a0e:	sbb    DWORD PTR [ecx],ebx
10001a10:	sbb    DWORD PTR [ecx],ebx
10001a12:	sbb    DWORD PTR [ecx],ebx
10001a14:	sbb    DWORD PTR [ecx],ebx
10001a16:	sbb    DWORD PTR [ecx],ebx
10001a18:	sbb    DWORD PTR [ecx],ebx
10001a1a:	sbb    DWORD PTR [ecx],ebx
10001a1c:	sbb    DWORD PTR [ecx],ebx
10001a1e:	sbb    DWORD PTR [ecx],ebx
10001a20:	xchg   ecx,eax
10001a21:	xchg   ecx,eax
10001a22:	(bad)  
10001a23:	(bad)  
10001a24:	(bad)  
10001a25:	(bad)  
10001a26:	(bad)  
10001a27:	(bad)  
10001a28:	(bad)  
10001a29:	(bad)  
10001a2a:	(bad)  
10001a2b:	(bad)  
10001a2c:	(bad)  
10001a2d:	(bad)  
10001a2e:	(bad)  
10001a2f:	(bad)  
10001a30:	(bad)  
10001a31:	(bad)  
10001a32:	(bad)  
10001a33:	(bad)  
10001a34:	(bad)  
10001a35:	call   DWORD PTR [ecx-0xe6e66f]
10001a3b:	(bad)  
10001a3c:	(bad)  
10001a3d:	(bad)  
10001a3e:	(bad)  
10001a3f:	(bad)  
10001a40:	(bad)  
10001a41:	(bad)  
10001a42:	(bad)  
10001a43:	(bad)  
10001a44:	(bad)  
10001a45:	(bad)  
10001a46:	(bad)  
10001a47:	(bad)  
10001a48:	(bad)  
10001a49:	(bad)  
10001a4a:	(bad)  
10001a4b:	(bad)  
10001a4c:	(bad)  
10001a4d:	call   FWORD PTR [ecx]
10001a4f:	sbb    DWORD PTR [ecx-0x6f],edx
10001a55:	(bad)  
10001a56:	(bad)  
10001a57:	(bad)  
10001a58:	(bad)  
10001a59:	(bad)  
10001a5a:	(bad)  
10001a5b:	(bad)  
10001a5c:	(bad)  
10001a5d:	(bad)  
10001a5e:	(bad)  
10001a5f:	(bad)  
10001a60:	(bad)  
10001a61:	(bad)  
10001a62:	(bad)  
10001a63:	(bad)  
10001a64:	(bad)  
10001a65:	call   DWORD PTR [ecx-0xe6e66f]
10001a6b:	stc    
10001a6c:	sbb    DWORD PTR [ecx],ebx
10001a6e:	sbb    DWORD PTR [ecx],ebx
10001a70:	sbb    DWORD PTR [ecx],ebx
10001a72:	sbb    DWORD PTR [ecx],ebx
10001a74:	sbb    DWORD PTR [ecx],ebx
10001a76:	sbb    DWORD PTR [ecx],ebx
10001a78:	sbb    DWORD PTR [ecx],ebx
10001a7a:	sbb    DWORD PTR [ecx],ebx
10001a7c:	pop    ds
10001a7d:	call   FWORD PTR [ecx]
10001a7f:	sbb    DWORD PTR [ecx-0x6e0e006f],edx
10001a85:	xchg   ecx,eax
10001a86:	xchg   ecx,eax
10001a87:	xchg   ecx,eax
10001a88:	xchg   ecx,eax
10001a89:	xchg   ecx,eax
10001a8a:	xchg   ecx,eax
10001a8b:	xchg   ecx,eax
10001a8c:	xchg   ecx,eax
10001a8d:	xchg   ecx,eax
10001a8e:	xchg   ecx,eax
10001a8f:	xchg   ecx,eax
10001a90:	xchg   ecx,eax
10001a91:	xchg   ecx,eax
10001a92:	xchg   ecx,eax
10001a93:	xchg   ecx,eax
10001a94:	lahf   
10001a95:	call   DWORD PTR [ecx-0xe6e66f]
10001a9b:	stc    
10001a9c:	sbb    DWORD PTR [ecx],ebx
10001a9e:	sbb    DWORD PTR [ecx],ebx
10001aa0:	sbb    DWORD PTR [ecx],ebx
10001aa2:	sbb    DWORD PTR [ecx],ebx
10001aa4:	sbb    DWORD PTR [ecx],ebx
10001aa6:	sbb    DWORD PTR [edi],ebx
10001aa8:	(bad)  
10001aa9:	call   FWORD PTR [ecx]
10001aab:	sbb    DWORD PTR [edi],ebx
10001aad:	call   FWORD PTR [ecx]
10001aaf:	sbb    DWORD PTR [ecx-0x6e0e006f],edx
10001ab5:	lahf   
10001ab6:	xchg   ecx,eax
10001ab7:	xchg   ecx,eax
10001ab8:	xchg   ecx,eax
10001ab9:	xchg   ecx,eax
10001aba:	xchg   ecx,eax
10001abb:	xchg   ecx,eax
10001abc:	xchg   ecx,eax
10001abd:	xchg   ecx,eax
10001abe:	xchg   ecx,eax
10001abf:	(bad)  
10001ac0:	(bad)  
10001ac1:	push   ecx
10001ac3:	xchg   ecx,eax
10001ac4:	lahf   
10001ac5:	call   DWORD PTR [ecx-0xe6e66f]
10001acb:	stc    
10001acc:	sbb    edi,edi
10001ace:	stc    
10001acf:	sbb    DWORD PTR [ecx],ebx
10001ad1:	sbb    DWORD PTR [ecx],ebx
10001ad3:	sbb    DWORD PTR [ecx],ebx
10001ad5:	sbb    DWORD PTR [edi],ebx
10001ad7:	(bad)  
10001ad8:	(bad)  
10001ad9:	(bad)  
10001ada:	call   FWORD PTR [ecx]
10001adc:	pop    ds
10001add:	call   FWORD PTR [ecx]
10001adf:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001ae5:	(bad)  
10001ae6:	call   DWORD PTR [ecx-0x6e6e6e6f]
10001aec:	xchg   ecx,eax
10001aed:	xchg   ecx,eax
10001aee:	(bad)  
10001aef:	(bad)  
10001af0:	(bad)  
10001af1:	(bad)  
10001af2:	push   ecx
10001af4:	lahf   
10001af5:	call   DWORD PTR [ecx-0xe6e66f]
10001afb:	stc    
10001afc:	pop    ds
10001afd:	(bad)  
10001afe:	(bad)  
10001aff:	stc    
10001b00:	sbb    DWORD PTR [ecx],ebx
10001b02:	sbb    DWORD PTR [ecx],ebx
10001b04:	sbb    DWORD PTR [edi],ebx
10001b06:	(bad)  
10001b07:	(bad)  
10001b08:	(bad)  
10001b09:	(bad)  
10001b0a:	(bad)  
10001b0b:	stc    
10001b0c:	pop    ds
10001b0d:	call   FWORD PTR [ecx]
10001b0f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001b15:	(bad)  
10001b16:	(bad)  
10001b17:	call   DWORD PTR [ecx-0x6e6e6e6f]
10001b1d:	(bad)  
10001b1e:	(bad)  
10001b1f:	(bad)  
10001b20:	(bad)  
10001b21:	(bad)  
10001b22:	push   ecx
10001b24:	lahf   
10001b25:	call   DWORD PTR [ecx-0xe6e66f]
10001b2b:	stc    
10001b2c:	pop    ds
10001b2d:	(bad)  
10001b2e:	(bad)  
10001b2f:	(bad)  
10001b30:	stc    
10001b31:	sbb    DWORD PTR [ecx],ebx
10001b33:	sbb    DWORD PTR [edi],ebx
10001b35:	(bad)  
10001b36:	(bad)  
10001b37:	(bad)  
10001b38:	(bad)  
10001b39:	(bad)  
10001b3a:	(bad)  
10001b3b:	stc    
10001b3c:	pop    ds
10001b3d:	call   FWORD PTR [ecx]
10001b3f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001b45:	(bad)  
10001b46:	(bad)  
10001b47:	(bad)  
10001b48:	call   DWORD PTR [ecx-0x600e6e6f]
10001b4e:	(bad)  
10001b4f:	(bad)  
10001b50:	(bad)  
10001b51:	(bad)  
10001b52:	push   ecx
10001b54:	lahf   
10001b55:	call   DWORD PTR [ecx-0xe6e66f]
10001b5b:	stc    
10001b5c:	pop    ds
10001b5d:	(bad)  
10001b5e:	(bad)  
10001b5f:	(bad)  
10001b60:	(bad)  
10001b61:	stc    
10001b62:	sbb    DWORD PTR [edi],ebx
10001b64:	stc    
10001b65:	sbb    edi,edi
10001b67:	(bad)  
10001b68:	(bad)  
10001b69:	(bad)  
10001b6a:	(bad)  
10001b6b:	stc    
10001b6c:	pop    ds
10001b6d:	call   FWORD PTR [ecx]
10001b6f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001b75:	(bad)  
10001b76:	(bad)  
10001b77:	(bad)  
10001b78:	(bad)  
10001b79:	call   DWORD PTR [ecx-0x606e0e01]
10001b7f:	(bad)  
10001b80:	(bad)  
10001b81:	(bad)  
10001b82:	push   ecx
10001b84:	lahf   
10001b85:	call   DWORD PTR [ecx-0xe6e66f]
10001b8b:	stc    
10001b8c:	pop    ds
10001b8d:	(bad)  
10001b8e:	(bad)  
10001b8f:	(bad)  
10001b90:	(bad)  
10001b91:	(bad)  
10001b92:	(bad)  
10001b93:	(bad)  
10001b94:	stc    
10001b95:	sbb    DWORD PTR [ecx],ebx
10001b97:	(bad)  
10001b98:	(bad)  
10001b99:	(bad)  
10001b9a:	(bad)  
10001b9b:	stc    
10001b9c:	pop    ds
10001b9d:	call   FWORD PTR [ecx]
10001b9f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001ba5:	(bad)  
10001ba6:	(bad)  
10001ba7:	(bad)  
10001ba8:	(bad)  
10001ba9:	(bad)  
10001baa:	(bad)  
10001bab:	push   ecx
10001bad:	xchg   ecx,eax
10001bae:	xchg   ecx,eax
10001baf:	lahf   
10001bb0:	(bad)  
10001bb1:	(bad)  
10001bb2:	push   ecx
10001bb4:	lahf   
10001bb5:	call   DWORD PTR [ecx-0xe6e66f]
10001bbb:	stc    
10001bbc:	pop    ds
10001bbd:	(bad)  
10001bbe:	(bad)  
10001bbf:	(bad)  
10001bc0:	(bad)  
10001bc1:	(bad)  
10001bc2:	(bad)  
10001bc3:	(bad)  
10001bc4:	stc    
10001bc5:	sbb    DWORD PTR [ecx],ebx
10001bc7:	pop    ds
10001bc8:	(bad)  
10001bc9:	(bad)  
10001bca:	(bad)  
10001bcb:	stc    
10001bcc:	pop    ds
10001bcd:	call   FWORD PTR [ecx]
10001bcf:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001bd5:	(bad)  
10001bd6:	(bad)  
10001bd7:	(bad)  
10001bd8:	(bad)  
10001bd9:	(bad)  
10001bda:	(bad)  
10001bdb:	push   ecx
10001bdd:	lahf   
10001bde:	push   ecx
10001be0:	lahf   
10001be1:	(bad)  
10001be2:	push   ecx
10001be4:	lahf   
10001be5:	call   DWORD PTR [ecx-0xe6e66f]
10001beb:	stc    
10001bec:	pop    ds
10001bed:	(bad)  
10001bee:	(bad)  
10001bef:	(bad)  
10001bf0:	(bad)  
10001bf1:	(bad)  
10001bf2:	(bad)  
10001bf3:	(bad)  
10001bf4:	stc    
10001bf5:	pop    ds
10001bf6:	(bad)  
10001bf7:	stc    
10001bf8:	pop    ds
10001bf9:	(bad)  
10001bfa:	(bad)  
10001bfb:	stc    
10001bfc:	pop    ds
10001bfd:	call   FWORD PTR [ecx]
10001bff:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001c05:	(bad)  
10001c06:	(bad)  
10001c07:	(bad)  
10001c08:	(bad)  
10001c09:	(bad)  
10001c0a:	(bad)  
10001c0b:	push   ecx
10001c0d:	lahf   
10001c0e:	push   ecx
10001c10:	lahf   
10001c11:	(bad)  
10001c12:	push   ecx
10001c14:	lahf   
10001c15:	call   DWORD PTR [ecx-0xe6e66f]
10001c1b:	stc    
10001c1c:	pop    ds
10001c1d:	(bad)  
10001c1e:	(bad)  
10001c1f:	(bad)  
10001c20:	(bad)  
10001c21:	(bad)  
10001c22:	(bad)  
10001c23:	(bad)  
10001c24:	stc    
10001c25:	pop    ds
10001c26:	(bad)  
10001c27:	stc    
10001c28:	pop    ds
10001c29:	(bad)  
10001c2a:	(bad)  
10001c2b:	stc    
10001c2c:	pop    ds
10001c2d:	call   FWORD PTR [ecx]
10001c2f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001c35:	(bad)  
10001c36:	(bad)  
10001c37:	(bad)  
10001c38:	(bad)  
10001c39:	(bad)  
10001c3a:	(bad)  
10001c3b:	(bad)  
10001c3c:	push   ecx
10001c3e:	lahf   
10001c3f:	push   ecx
10001c41:	lahf   
10001c42:	push   ecx
10001c44:	lahf   
10001c45:	call   DWORD PTR [ecx-0xe6e66f]
10001c4b:	stc    
10001c4c:	pop    ds
10001c4d:	(bad)  
10001c4e:	(bad)  
10001c4f:	(bad)  
10001c50:	(bad)  
10001c51:	(bad)  
10001c52:	(bad)  
10001c53:	(bad)  
10001c54:	(bad)  
10001c55:	stc    
10001c56:	pop    ds
10001c57:	(bad)  
10001c58:	stc    
10001c59:	pop    ds
10001c5a:	(bad)  
10001c5b:	stc    
10001c5c:	pop    ds
10001c5d:	call   FWORD PTR [ecx]
10001c5f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001c65:	(bad)  
10001c66:	call   FWORD PTR [ecx]
10001c68:	sbb    edi,edi
10001c6a:	(bad)  
10001c6b:	(bad)  
10001c6c:	push   ecx
10001c6e:	lahf   
10001c6f:	push   ecx
10001c71:	lahf   
10001c72:	push   ecx
10001c74:	lahf   
10001c75:	call   DWORD PTR [ecx-0xe6e66f]
10001c7b:	stc    
10001c7c:	pop    ds
10001c7d:	(bad)  
10001c7e:	call   DWORD PTR [ecx-0x6f]
10001c84:	(bad)  
10001c85:	stc    
10001c86:	pop    ds
10001c87:	(bad)  
10001c88:	stc    
10001c89:	pop    ds
10001c8a:	(bad)  
10001c8b:	stc    
10001c8c:	pop    ds
10001c8d:	call   FWORD PTR [ecx]
10001c8f:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001c95:	call   DWORD PTR [ecx-0x6e0001]
10001c9b:	(bad)  
10001c9c:	(bad)  
10001c9d:	(bad)  
10001c9e:	stc    
10001c9f:	sbb    DWORD PTR [edi],ebx
10001ca1:	stc    
10001ca2:	pop    ds
10001ca3:	icebp  
10001ca4:	lahf   
10001ca5:	call   DWORD PTR [ecx-0xe6e66f]
10001cab:	stc    
10001cac:	pop    ds
10001cad:	call   FWORD PTR [ecx]
10001caf:	(bad)  
10001cb0:	call   FWORD PTR [ecx]
10001cb2:	(bad)  
10001cb3:	(bad)  
10001cb4:	(bad)  
10001cb5:	push   ecx
10001cb7:	xchg   ecx,eax
10001cb8:	lahf   
10001cb9:	icebp  
10001cba:	lahf   
10001cbb:	stc    
10001cbc:	pop    ds
10001cbd:	call   FWORD PTR [ecx]
10001cbf:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001cc5:	call   DWORD PTR [ecx-0x6e0001]
10001ccb:	(bad)  
10001ccc:	(bad)  
10001ccd:	(bad)  
10001cce:	stc    
10001ccf:	pop    ds
10001cd0:	(bad)  
10001cd1:	stc    
10001cd2:	pop    ds
10001cd3:	icebp  
10001cd4:	lahf   
10001cd5:	call   DWORD PTR [ecx-0xe6e66f]
10001cdb:	stc    
10001cdc:	pop    ds
10001cdd:	call   FWORD PTR [ecx]
10001cdf:	(bad)  
10001ce0:	call   FWORD PTR [ecx]
10001ce2:	(bad)  
10001ce3:	(bad)  
10001ce4:	(bad)  
10001ce5:	push   ecx
10001ce7:	lahf   
10001ce8:	push   ecx
10001cea:	lahf   
10001ceb:	stc    
10001cec:	pop    ds
10001ced:	call   FWORD PTR [ecx]
10001cef:	sbb    DWORD PTR [ecx-0x600e006f],edx
10001cf5:	(bad)  
10001cf6:	call   DWORD PTR [ecx-0x6f]
10001cfc:	(bad)  
10001cfd:	(bad)  
10001cfe:	(bad)  
10001cff:	stc    
10001d00:	sbb    DWORD PTR [edi],ebx
10001d02:	push   ecx
10001d04:	lahf   
10001d05:	call   DWORD PTR [ecx-0xe6e66f]
10001d0b:	stc    
10001d0c:	pop    ds
10001d0d:	(bad)  
10001d0e:	call   FWORD PTR [ecx]
10001d10:	sbb    edi,edi
10001d12:	(bad)  
10001d13:	(bad)  
10001d14:	(bad)  
10001d15:	(bad)  
10001d16:	push   ecx
10001d18:	xchg   ecx,eax
10001d19:	lahf   
10001d1a:	(bad)  
10001d1b:	stc    
10001d1c:	pop    ds
10001d1d:	call   FWORD PTR [ecx]
10001d1f:	sbb    DWORD PTR [ecx-0x6e0e006f],edx
10001d25:	(bad)  
10001d26:	(bad)  
10001d27:	(bad)  
10001d28:	(bad)  
10001d29:	(bad)  
10001d2a:	(bad)  
10001d2b:	(bad)  
10001d2c:	(bad)  
10001d2d:	(bad)  
10001d2e:	(bad)  
10001d2f:	(bad)  
10001d30:	(bad)  
10001d31:	(bad)  
10001d32:	call   DWORD PTR [ecx-0x6e6e0061]
10001d38:	sbb    DWORD PTR [ecx],ebx
10001d3a:	(bad)  
10001d3b:	stc    
10001d3c:	sbb    DWORD PTR [edi],ebx
10001d3e:	(bad)  
10001d3f:	(bad)  
10001d40:	(bad)  
10001d41:	(bad)  
10001d42:	(bad)  
10001d43:	(bad)  
10001d44:	(bad)  
10001d45:	(bad)  
10001d46:	(bad)  
10001d47:	(bad)  
10001d48:	(bad)  
10001d49:	(bad)  
10001d4a:	stc    
10001d4b:	sbb    DWORD PTR [edi],ebx
10001d4d:	call   FWORD PTR [ecx]
10001d4f:	sbb    DWORD PTR [ecx-0x6e0e006f],edx
10001d55:	xchg   ecx,eax
10001d56:	(bad)  
10001d57:	(bad)  
10001d58:	(bad)  
10001d59:	(bad)  
10001d5a:	(bad)  
10001d5b:	(bad)  
10001d5c:	(bad)  
10001d5d:	(bad)  
10001d5e:	(bad)  
10001d5f:	(bad)  
10001d60:	(bad)  
10001d61:	call   DWORD PTR [ecx-0x6e00606f]
10001d67:	xchg   ecx,eax
10001d68:	sbb    DWORD PTR [ecx],ebx
10001d6a:	(bad)  
10001d6b:	stc    
10001d6c:	sbb    DWORD PTR [ecx],ebx
10001d6e:	sbb    DWORD PTR [ecx],ebx
10001d70:	sbb    DWORD PTR [ecx],ebx
10001d72:	sbb    DWORD PTR [ecx],ebx
10001d74:	sbb    DWORD PTR [ecx],ebx
10001d76:	sbb    DWORD PTR [ecx],ebx
10001d78:	sbb    DWORD PTR [ecx],ebx
10001d7a:	sbb    DWORD PTR [ecx],ebx
10001d7c:	pop    ds
10001d7d:	call   FWORD PTR [ecx]
10001d7f:	sbb    DWORD PTR [ecx-0x6e0e006f],edx
10001d85:	xchg   ecx,eax
10001d86:	xchg   ecx,eax
10001d87:	xchg   ecx,eax
10001d88:	xchg   ecx,eax
10001d89:	xchg   ecx,eax
10001d8a:	xchg   ecx,eax
10001d8b:	xchg   ecx,eax
10001d8c:	xchg   ecx,eax
10001d8d:	xchg   ecx,eax
10001d8e:	xchg   ecx,eax
10001d8f:	xchg   ecx,eax
10001d90:	xchg   ecx,eax
10001d91:	xchg   ecx,eax
10001d92:	xchg   ecx,eax
10001d93:	xchg   ecx,eax
10001d94:	lahf   
10001d95:	call   DWORD PTR [ecx-0xe6e66f]
10001d9b:	(bad)  
10001d9c:	(bad)  
10001d9d:	(bad)  
10001d9e:	(bad)  
10001d9f:	(bad)  
10001da0:	(bad)  
10001da1:	(bad)  
10001da2:	(bad)  
10001da3:	(bad)  
10001da4:	(bad)  
10001da5:	(bad)  
10001da6:	(bad)  
10001da7:	(bad)  
10001da8:	(bad)  
10001da9:	(bad)  
10001daa:	(bad)  
10001dab:	(bad)  
10001dac:	(bad)  
10001dad:	call   FWORD PTR [ecx]
10001daf:	sbb    DWORD PTR [ecx-0x6f],edx
10001db5:	(bad)  
10001db6:	(bad)  
10001db7:	(bad)  
10001db8:	(bad)  
10001db9:	(bad)  
10001dba:	(bad)  
10001dbb:	(bad)  
10001dbc:	(bad)  
10001dbd:	(bad)  
10001dbe:	(bad)  
10001dbf:	(bad)  
10001dc0:	(bad)  
10001dc1:	(bad)  
10001dc2:	(bad)  
10001dc3:	(bad)  
10001dc4:	(bad)  
10001dc5:	call   DWORD PTR [ecx-0xe6e66f]
10001dcb:	(bad)  
10001dcc:	(bad)  
10001dcd:	(bad)  
10001dce:	(bad)  
10001dcf:	(bad)  
10001dd0:	(bad)  
10001dd1:	(bad)  
10001dd2:	(bad)  
10001dd3:	(bad)  
10001dd4:	(bad)  
10001dd5:	(bad)  
10001dd6:	(bad)  
10001dd7:	(bad)  
10001dd8:	(bad)  
10001dd9:	(bad)  
10001dda:	(bad)  
10001ddb:	(bad)  
10001ddc:	(bad)  
10001ddd:	call   FWORD PTR [ecx]
10001ddf:	sbb    DWORD PTR [ecx-0x6e6e6e6f],edx
10001de5:	xchg   ecx,eax
10001de6:	xchg   ecx,eax
10001de7:	xchg   ecx,eax
10001de8:	xchg   ecx,eax
10001de9:	xchg   ecx,eax
10001dea:	xchg   ecx,eax
10001deb:	xchg   ecx,eax
10001dec:	xchg   ecx,eax
10001ded:	xchg   ecx,eax
10001dee:	xchg   ecx,eax
10001def:	xchg   ecx,eax
10001df0:	xchg   ecx,eax
10001df1:	xchg   ecx,eax
10001df2:	xchg   ecx,eax
10001df3:	xchg   ecx,eax
10001df4:	xchg   ecx,eax
10001df5:	xchg   ecx,eax
10001df6:	xchg   ecx,eax
10001df7:	xchg   ecx,eax
10001df8:	sbb    DWORD PTR [ecx],ebx
10001dfa:	sbb    DWORD PTR [ecx],ebx
10001dfc:	sbb    DWORD PTR [ecx],ebx
10001dfe:	sbb    DWORD PTR [ecx],ebx
10001e00:	sbb    DWORD PTR [ecx],ebx
10001e02:	sbb    DWORD PTR [ecx],ebx
10001e04:	sbb    DWORD PTR [ecx],ebx
10001e06:	sbb    DWORD PTR [ecx],ebx
10001e08:	sbb    DWORD PTR [ecx],ebx
10001e0a:	sbb    DWORD PTR [ecx],ebx
10001e0c:	sbb    DWORD PTR [ecx],ebx
10001e0e:	sbb    DWORD PTR [ecx],ebx
10001e10:	xchg   ecx,eax
10001e11:	xchg   ecx,eax
10001e12:	xchg   ecx,eax
10001e13:	xchg   ecx,eax
10001e14:	xchg   ecx,eax
10001e15:	xchg   ecx,eax
10001e16:	xchg   ecx,eax
10001e17:	xchg   ecx,eax
10001e18:	xchg   ecx,eax
10001e19:	xchg   ecx,eax
10001e1a:	xchg   ecx,eax
10001e1b:	xchg   ecx,eax
10001e1c:	xchg   ecx,eax
10001e1d:	xchg   ecx,eax
10001e1e:	xchg   ecx,eax
10001e1f:	xchg   ecx,eax
10001e20:	xchg   ecx,eax
10001e21:	xchg   ecx,eax
10001e22:	xchg   ecx,eax
10001e23:	xchg   ecx,eax
10001e24:	xchg   ecx,eax
10001e25:	xchg   ecx,eax
10001e26:	xchg   ecx,eax
10001e27:	xchg   ecx,eax
10001e28:	sbb    DWORD PTR [ecx],ebx
10001e2a:	sbb    DWORD PTR [ecx],ebx
10001e2c:	sbb    DWORD PTR [ecx],ebx
10001e2e:	sbb    DWORD PTR [ecx],ebx
10001e30:	sbb    DWORD PTR [ecx],ebx
10001e32:	sbb    DWORD PTR [ecx],ebx
10001e34:	sbb    DWORD PTR [ecx],ebx
10001e36:	sbb    DWORD PTR [ecx],ebx
10001e38:	sbb    DWORD PTR [ecx],ebx
10001e3a:	sbb    DWORD PTR [ecx],ebx
10001e3c:	sbb    DWORD PTR [ecx],ebx
10001e3e:	sbb    DWORD PTR [ecx],ebx
	...
10001fc0:	sub    BYTE PTR [eax],al
10001fc2:	add    BYTE PTR [eax],al
10001fc4:	and    BYTE PTR [eax],al
10001fc6:	add    BYTE PTR [eax],al
10001fc8:	inc    eax
10001fc9:	add    BYTE PTR [eax],al
10001fcb:	add    BYTE PTR [ecx],al
10001fcd:	add    BYTE PTR [eax+eax*1],al
	...
10001fec:	add    BYTE PTR [eax],al
10001fee:	add    BYTE PTR [eax],0x0
10001ff1:	add    BYTE PTR [eax],0x0
10001ff4:	add    BYTE PTR [eax+0x800080],al
10001ffa:	add    BYTE PTR [eax],al
10001ffc:	add    BYTE PTR [eax],0x80
10001fff:	add    BYTE PTR [eax-0x7fffff80],al
10002005:	add    BYTE PTR [eax-0x3f3f4000],0x0
1000200c:	add    BYTE PTR [eax],al
1000200e:	inc    DWORD PTR [eax]
10002010:	add    bh,bh
10002012:	add    BYTE PTR [eax],al
10002014:	add    bh,bh
10002016:	inc    DWORD PTR [eax]
10002018:	inc    DWORD PTR [eax]
1000201a:	add    BYTE PTR [eax],al
1000201c:	inc    DWORD PTR [eax]
1000201e:	inc    DWORD PTR [eax]
10002020:	(bad)  
10002021:	inc    DWORD PTR [eax]
10002023:	add    bh,bh
10002025:	(bad)  
10002026:	inc    DWORD PTR [eax]
10002028:	xchg   ecx,eax
10002029:	xchg   ecx,eax
1000202a:	xchg   ecx,eax
1000202b:	xchg   ecx,eax
1000202c:	xchg   ecx,eax
1000202d:	xchg   ecx,eax
1000202e:	xchg   ecx,eax
1000202f:	xchg   ecx,eax
10002030:	xchg   ecx,eax
10002031:	xchg   ecx,eax
10002032:	xchg   ecx,eax
10002033:	xchg   ecx,eax
10002034:	xchg   ecx,eax
10002035:	xchg   ecx,eax
10002036:	xchg   ecx,eax
10002037:	xchg   ecx,eax
10002038:	sbb    DWORD PTR [ecx],ebx
1000203a:	sbb    DWORD PTR [ecx],ebx
1000203c:	sbb    DWORD PTR [ecx],ebx
1000203e:	sbb    DWORD PTR [ecx],ebx
10002040:	sbb    DWORD PTR [ecx],ebx
10002042:	sbb    DWORD PTR [ecx],ebx
10002044:	sbb    DWORD PTR [ecx],ebx
10002046:	sbb    DWORD PTR [ecx],ebx
10002048:	xchg   ecx,eax
10002049:	xchg   ecx,eax
1000204a:	xchg   ecx,eax
1000204b:	xchg   ecx,eax
1000204c:	xchg   ecx,eax
1000204d:	xchg   ecx,eax
1000204e:	xchg   ecx,eax
1000204f:	xchg   ecx,eax
10002050:	xchg   ecx,eax
10002051:	xchg   ecx,eax
10002052:	xchg   ecx,eax
10002053:	xchg   ecx,eax
10002054:	xchg   ecx,eax
10002055:	xchg   ecx,eax
10002056:	xchg   ecx,eax
10002057:	xchg   ecx,eax
10002058:	sbb    DWORD PTR [edi],ebx
1000205a:	(bad)  
1000205b:	(bad)  
1000205c:	(bad)  
1000205d:	(bad)  
1000205e:	(bad)  
1000205f:	(bad)  
10002060:	(bad)  
10002061:	(bad)  
10002062:	(bad)  
10002063:	(bad)  
10002064:	(bad)  
10002065:	(bad)  
10002066:	stc    
10002067:	sbb    DWORD PTR [ecx-0x61],edx
1000206d:	(bad)  
1000206e:	(bad)  
1000206f:	(bad)  
10002070:	(bad)  
10002071:	(bad)  
10002072:	(bad)  
10002073:	(bad)  
10002074:	(bad)  
10002075:	push   ecx
10002077:	xchg   ecx,eax
10002078:	sbb    DWORD PTR [edi],ebx
1000207a:	(bad)  
1000207b:	(bad)  
1000207c:	(bad)  
1000207d:	(bad)  
1000207e:	(bad)  
1000207f:	(bad)  
10002080:	(bad)  
10002081:	(bad)  
10002082:	(bad)  
10002083:	(bad)  
10002084:	(bad)  
10002085:	(bad)  
10002086:	stc    
10002087:	sbb    DWORD PTR [ecx+0x1919f99f],edx
1000208d:	sbb    DWORD PTR [ecx],ebx
1000208f:	sbb    DWORD PTR [ecx],ebx
10002091:	sbb    DWORD PTR [ecx],ebx
10002093:	sbb    DWORD PTR [ecx],ebx
10002095:	pop    ds
10002096:	icebp  
10002097:	xchg   ecx,eax
10002098:	sbb    DWORD PTR [edi],ebx
1000209a:	icebp  
1000209b:	xchg   ecx,eax
1000209c:	xchg   ecx,eax
1000209d:	xchg   ecx,eax
1000209e:	xchg   ecx,eax
1000209f:	xchg   ecx,eax
100020a0:	xchg   ecx,eax
100020a1:	xchg   ecx,eax
100020a2:	push   ecx
100020a4:	xchg   ecx,eax
100020a5:	lahf   
100020a6:	stc    
100020a7:	sbb    DWORD PTR [ecx-0x6e60661],edx
100020ad:	sbb    DWORD PTR [ecx],ebx
100020af:	sbb    DWORD PTR [ecx],ebx
100020b1:	pop    ds
100020b2:	(bad)  
100020b3:	call   FWORD PTR [ecx]
100020b5:	pop    ds
100020b6:	icebp  
100020b7:	xchg   ecx,eax
100020b8:	sbb    DWORD PTR [edi],ebx
100020ba:	icebp  
100020bb:	lahf   
100020bc:	call   DWORD PTR [ecx-0x6e6e6f]
100020c2:	(bad)  
100020c3:	push   ecx
100020c5:	lahf   
100020c6:	stc    
100020c7:	sbb    DWORD PTR [ecx-0x661],edx
100020cd:	stc    
100020ce:	sbb    DWORD PTR [ecx],ebx
100020d0:	pop    ds
100020d1:	(bad)  
100020d2:	(bad)  
100020d3:	(bad)  
100020d4:	call   FWORD PTR [edi]
100020d6:	icebp  
100020d7:	xchg   ecx,eax
100020d8:	sbb    DWORD PTR [edi],ebx
100020da:	icebp  
100020db:	(bad)  
100020dc:	(bad)  
100020dd:	call   DWORD PTR [ecx-0xe6f]
100020e3:	(bad)  
100020e4:	call   FWORD PTR [edi-0x606ee607]
100020ea:	stc    
100020eb:	(bad)  
100020ec:	(bad)  
100020ed:	(bad)  
100020ee:	stc    
100020ef:	pop    ds
100020f0:	stc    
100020f1:	pop    ds
100020f2:	(bad)  
100020f3:	(bad)  
100020f4:	call   FWORD PTR [edi]
100020f6:	icebp  
100020f7:	xchg   ecx,eax
100020f8:	sbb    DWORD PTR [edi],ebx
100020fa:	icebp  
100020fb:	(bad)  
100020fc:	(bad)  
100020fd:	(bad)  
100020fe:	(bad)  
100020ff:	push   ecx
10002101:	xchg   ecx,eax
10002102:	(bad)  
10002103:	(bad)  
10002104:	call   FWORD PTR [edi-0x606ee607]
1000210a:	stc    
1000210b:	(bad)  
1000210c:	(bad)  
1000210d:	(bad)  
1000210e:	(bad)  
1000210f:	(bad)  
10002110:	stc    
10002111:	call   FWORD PTR [edi-0xee00001]
10002117:	xchg   ecx,eax
10002118:	sbb    DWORD PTR [edi],ebx
1000211a:	icebp  
1000211b:	(bad)  
1000211c:	(bad)  
1000211d:	(bad)  
1000211e:	(bad)  
1000211f:	push   ecx
10002121:	call   FWORD PTR [edi]
10002123:	(bad)  
10002124:	call   FWORD PTR [edi-0x606ee607]
1000212a:	stc    
1000212b:	(bad)  
1000212c:	(bad)  
1000212d:	(bad)  
1000212e:	(bad)  
1000212f:	(bad)  
10002130:	stc    
10002131:	call   FWORD PTR [edi-0xee00001]
10002137:	xchg   ecx,eax
10002138:	sbb    DWORD PTR [edi],ebx
1000213a:	icebp  
1000213b:	(bad)  
1000213c:	(bad)  
1000213d:	(bad)  
1000213e:	(bad)  
1000213f:	(bad)  
10002140:	call   FWORD PTR [edi]
10002142:	icebp  
10002143:	(bad)  
10002144:	call   FWORD PTR [edi-0x606ee607]
1000214a:	stc    
1000214b:	(bad)  
1000214c:	(bad)  
1000214d:	(bad)  
1000214e:	(bad)  
1000214f:	(bad)  
10002150:	call   FWORD PTR [edi+0x1ffffff9]
10002156:	icebp  
10002157:	xchg   ecx,eax
10002158:	sbb    DWORD PTR [edi],ebx
1000215a:	icebp  
1000215b:	(bad)  
1000215c:	call   DWORD PTR [ecx+0x1fffffff]
10002162:	icebp  
10002163:	(bad)  
10002164:	call   FWORD PTR [edi-0x606ee607]
1000216a:	stc    
1000216b:	push   ecx
1000216d:	call   FWORD PTR [edi-0x600e0001]
10002173:	lahf   
10002174:	call   FWORD PTR [edi]
10002176:	icebp  
10002177:	xchg   ecx,eax
10002178:	sbb    DWORD PTR [edi],ebx
1000217a:	icebp  
1000217b:	(bad)  
1000217c:	stc    
1000217d:	call   FWORD PTR [edi]
1000217f:	(bad)  
10002180:	(bad)  
10002181:	stc    
10002182:	call   FWORD PTR [edi]
10002184:	call   FWORD PTR [edi-0x606ee607]
1000218a:	stc    
1000218b:	pop    ds
1000218c:	call   FWORD PTR [ecx]
1000218e:	(bad)  
1000218f:	(bad)  
10002190:	(bad)  
10002191:	call   FWORD PTR [ecx]
10002193:	(bad)  
10002194:	stc    
10002195:	pop    ds
10002196:	icebp  
10002197:	xchg   ecx,eax
10002198:	sbb    DWORD PTR [edi],ebx
1000219a:	icebp  
1000219b:	xchg   ecx,eax
1000219c:	(bad)  
1000219d:	(bad)  
1000219e:	(bad)  
1000219f:	(bad)  
100021a0:	(bad)  
100021a1:	(bad)  
100021a2:	(bad)  
100021a3:	call   DWORD PTR [ecx-0x6ee60661]
100021a9:	lahf   
100021aa:	stc    
100021ab:	sbb    DWORD PTR [edi],ebx
100021ad:	pop    ds
100021ae:	(bad)  
100021af:	(bad)  
100021b0:	(bad)  
100021b1:	(bad)  
100021b2:	(bad)  
100021b3:	stc    
100021b4:	sbb    DWORD PTR [edi],ebx
100021b6:	icebp  
100021b7:	xchg   ecx,eax
100021b8:	sbb    DWORD PTR [edi],ebx
100021ba:	icebp  
100021bb:	xchg   ecx,eax
100021bc:	xchg   ecx,eax
100021bd:	xchg   ecx,eax
100021be:	xchg   ecx,eax
100021bf:	xchg   ecx,eax
100021c0:	xchg   ecx,eax
100021c1:	xchg   ecx,eax
100021c2:	xchg   ecx,eax
100021c3:	xchg   ecx,eax
100021c4:	xchg   ecx,eax
100021c5:	lahf   
100021c6:	stc    
100021c7:	sbb    DWORD PTR [ecx-0x61],edx
100021cd:	(bad)  
100021ce:	(bad)  
100021cf:	(bad)  
100021d0:	(bad)  
100021d1:	(bad)  
100021d2:	(bad)  
100021d3:	(bad)  
100021d4:	(bad)  
100021d5:	push   ecx
100021d7:	xchg   ecx,eax
100021d8:	sbb    DWORD PTR [edi],ebx
100021da:	(bad)  
100021db:	(bad)  
100021dc:	(bad)  
100021dd:	(bad)  
100021de:	(bad)  
100021df:	(bad)  
100021e0:	(bad)  
100021e1:	(bad)  
100021e2:	(bad)  
100021e3:	(bad)  
100021e4:	(bad)  
100021e5:	(bad)  
100021e6:	stc    
100021e7:	sbb    DWORD PTR [ecx-0x61],edx
100021ed:	(bad)  
100021ee:	(bad)  
100021ef:	(bad)  
100021f0:	(bad)  
100021f1:	(bad)  
100021f2:	(bad)  
100021f3:	(bad)  
100021f4:	(bad)  
100021f5:	push   ecx
100021f7:	xchg   ecx,eax
100021f8:	sbb    DWORD PTR [ecx],ebx
100021fa:	sbb    DWORD PTR [ecx],ebx
100021fc:	sbb    DWORD PTR [ecx],ebx
100021fe:	sbb    DWORD PTR [ecx],ebx
10002200:	sbb    DWORD PTR [ecx],ebx
10002202:	sbb    DWORD PTR [ecx],ebx
10002204:	sbb    DWORD PTR [ecx],ebx
10002206:	sbb    DWORD PTR [ecx],ebx
10002208:	xchg   ecx,eax
10002209:	xchg   ecx,eax
1000220a:	xchg   ecx,eax
1000220b:	xchg   ecx,eax
1000220c:	xchg   ecx,eax
1000220d:	xchg   ecx,eax
1000220e:	xchg   ecx,eax
1000220f:	xchg   ecx,eax
10002210:	xchg   ecx,eax
10002211:	xchg   ecx,eax
10002212:	xchg   ecx,eax
10002213:	xchg   ecx,eax
10002214:	xchg   ecx,eax
10002215:	xchg   ecx,eax
10002216:	xchg   ecx,eax
10002217:	xchg   ecx,eax
10002218:	sbb    DWORD PTR [ecx],ebx
1000221a:	sbb    DWORD PTR [ecx],ebx
1000221c:	sbb    DWORD PTR [ecx],ebx
1000221e:	sbb    DWORD PTR [ecx],ebx
10002220:	sbb    DWORD PTR [ecx],ebx
10002222:	sbb    DWORD PTR [ecx],ebx
10002224:	sbb    DWORD PTR [ecx],ebx
10002226:	sbb    DWORD PTR [ecx],ebx
	...
100022a8:	sub    BYTE PTR [eax],al
100022aa:	add    BYTE PTR [eax],al
100022ac:	adc    BYTE PTR [eax],al
100022ae:	add    BYTE PTR [eax],al
100022b0:	and    BYTE PTR [eax],al
100022b2:	add    BYTE PTR [eax],al
100022b4:	add    DWORD PTR [eax],eax
100022b6:	add    al,0x0
	...
100022d4:	add    BYTE PTR [eax],al
100022d6:	add    BYTE PTR [eax],0x0
100022d9:	add    BYTE PTR [eax],0x0
100022dc:	add    BYTE PTR [eax+0x800080],al
100022e2:	add    BYTE PTR [eax],al
100022e4:	add    BYTE PTR [eax],0x80
100022e7:	add    BYTE PTR [eax-0x7fffff80],al
100022ed:	add    BYTE PTR [eax-0x3f3f4000],0x0
100022f4:	add    BYTE PTR [eax],al
100022f6:	inc    DWORD PTR [eax]
100022f8:	add    bh,bh
100022fa:	add    BYTE PTR [eax],al
100022fc:	add    bh,bh
100022fe:	inc    DWORD PTR [eax]
10002300:	inc    DWORD PTR [eax]
10002302:	add    BYTE PTR [eax],al
10002304:	inc    DWORD PTR [eax]
10002306:	inc    DWORD PTR [eax]
10002308:	(bad)  
10002309:	inc    DWORD PTR [eax]
1000230b:	add    bh,bh
1000230d:	(bad)  
1000230e:	inc    DWORD PTR [eax]
10002310:	xchg   ecx,eax
10002311:	xchg   ecx,eax
10002312:	xchg   ecx,eax
10002313:	xchg   ecx,eax
10002314:	xchg   ecx,eax
10002315:	xchg   ecx,eax
10002316:	xchg   ecx,eax
10002317:	xchg   ecx,eax
10002318:	sbb    DWORD PTR [ecx],ebx
1000231a:	sbb    DWORD PTR [ecx],ebx
1000231c:	pop    ds
1000231d:	(bad)  
1000231e:	stc    
1000231f:	sbb    DWORD PTR [ecx-0x6e6e0f],edx
10002325:	(bad)  
10002326:	call   DWORD PTR [ecx+0x1f19ff1f]
1000232c:	pop    ds
1000232d:	(bad)  
1000232e:	(bad)  
1000232f:	stc    
10002330:	lahf   
10002331:	push   ecx
10002333:	call   DWORD PTR [ecx+0x1ff1ffff]
10002339:	(bad)  
1000233a:	(bad)  
1000233b:	call   FWORD PTR [ecx]
1000233d:	pop    ds
1000233e:	(bad)  
1000233f:	stc    
10002340:	lahf   
10002341:	(bad)  
10002342:	(bad)  
10002343:	call   FWORD PTR [edi+0x1ff1fff9]
10002349:	(bad)  
1000234a:	(bad)  
1000234b:	call   FWORD PTR [edi]
1000234d:	icebp  
1000234e:	(bad)  
1000234f:	stc    
10002350:	lahf   
10002351:	(bad)  
10002352:	(bad)  
10002353:	(bad)  
10002354:	stc    
10002355:	call   FWORD PTR [edi-0x6e00e00f]
1000235b:	push   ecx
1000235d:	call   FWORD PTR [edi]
1000235f:	stc    
10002360:	lahf   
10002361:	icebp  
10002362:	call   FWORD PTR [edi-0xe06e601]
10002368:	pop    ds
10002369:	stc    
1000236a:	call   FWORD PTR [edi]
1000236c:	call   FWORD PTR [edi-0x60060f]
10002372:	sbb    edi,edi
10002374:	push   ecx
10002376:	lahf   
10002377:	icebp  
10002378:	sbb    edi,edi
1000237a:	(bad)  
1000237b:	(bad)  
1000237c:	(bad)  
1000237d:	(bad)  
1000237e:	call   FWORD PTR [ecx]
10002380:	xchg   ecx,eax
10002381:	lahf   
10002382:	(bad)  
10002383:	(bad)  
10002384:	(bad)  
10002385:	push   ecx
10002387:	xchg   ecx,eax
10002388:	sbb    DWORD PTR [ecx],ebx
1000238a:	sbb    DWORD PTR [ecx],ebx
1000238c:	sbb    DWORD PTR [ecx],ebx
1000238e:	sbb    DWORD PTR [ecx],ebx
10002390:	add    BYTE PTR [eax],al
10002392:	stc    
10002393:	sbb    DWORD PTR [eax],eax
10002395:	add    BYTE PTR [ecx],bl
10002397:	sbb    DWORD PTR [eax],eax
10002399:	add    bh,bh
1000239b:	inc    DWORD PTR [eax]
1000239d:	add    cl,dh
1000239f:	xchg   ecx,eax
100023a0:	add    BYTE PTR [eax],al
100023a2:	icebp  
100023a3:	lahf   
100023a4:	add    BYTE PTR [eax],al
100023a6:	xchg   ecx,eax
100023a7:	xchg   ecx,eax
100023a8:	add    BYTE PTR [eax],al
100023aa:	(bad)  
100023ab:	inc    DWORD PTR [eax]
100023ad:	add    cl,bh
100023af:	sbb    DWORD PTR [eax],eax
100023b1:	add    cl,bh
100023b3:	inc    DWORD PTR [eax]
100023b5:	add    BYTE PTR [ecx],bl
100023b7:	sbb    DWORD PTR [eax],eax
100023b9:	add    bh,bh
100023bb:	inc    DWORD PTR [eax]
100023bd:	add    cl,dh
100023bf:	xchg   ecx,eax
100023c0:	add    BYTE PTR [eax],al
100023c2:	icebp  
100023c3:	inc    DWORD PTR [eax]
100023c5:	add    BYTE PTR [ecx-0xffff6f],dl
100023cb:	inc    DWORD PTR [eax]
100023cd:	add    cl,bh
100023cf:	sbb    DWORD PTR [eax],ebp
100023d1:	add    BYTE PTR [eax],al
100023d3:	add    BYTE PTR [eax],dh
100023d5:	add    BYTE PTR [eax],al
100023d7:	add    BYTE PTR [eax+0x0],ah
100023da:	add    BYTE PTR [eax],al
100023dc:	add    DWORD PTR [eax],eax
100023de:	or     BYTE PTR [eax],al
	...
100023fc:	(bad)  
100023fd:	(bad)  
100023fe:	inc    DWORD PTR [eax]
10002400:	or     BYTE PTR ds:0x191a009d,al
10002406:	cdq    
10002407:	add    BYTE PTR [ebx+esi*1],dh
1000240a:	fwait
1000240b:	add    BYTE PTR [edx],bh
1000240d:	cmp    DWORD PTR [eax-0x7fc4c400],ebp
10002413:	add    BYTE PTR [esi+0x5c],bl
10002416:	mov    esi,0xdb7d7f00
1000241b:	add    BYTE PTR [ebp-0x73ff1e7c],al
10002421:	mov    edx,esp
10002423:	add    BYTE PTR [ecx-0x65ff4d80],al
10002429:	cdq    
1000242a:	enter  0x9000,0x8f
1000242e:	mov    ebx,0xdaacad00
10002433:	add    BYTE PTR [edx],dl
10002435:	ja     0x9d12393b
1000243b:	add    BYTE PTR [esi],ch
1000243d:	sub    ebx,DWORD PTR [ecx+0x79282b00]
10002443:	add    BYTE PTR [ecx+0x45],cl
10002446:	mov    ah,0x0
10002448:	dec    edi
10002449:	dec    ebx
1000244a:	stos   DWORD PTR es:[edi],eax
1000244b:	add    BYTE PTR [esi],bh
1000244d:	cmp    eax,DWORD PTR [esi-0x7bc4c200]
10002453:	add    BYTE PTR [ebp+0x51],dl
10002456:	mov    dl,0x0
10002458:	cmp    eax,0x5a00823b
1000245d:	push   edi
1000245e:	mov    bh,0x0
10002460:	ja     0x100024d5
10002462:	(bad)  
10002463:	add    BYTE PTR [ebx+0x78],bh
10002466:	fld    DWORD PTR [eax]
10002468:	sbb    BYTE PTR [edx],dl
1000246a:	xchg   edx,eax
1000246b:	add    BYTE PTR [ecx],bl
1000246d:	adc    al,0x73
1000246f:	add    BYTE PTR ds:0x2d00b72c,dh
10002475:	and    eax,0x2c340098
1000247a:	lahf   
1000247b:	add    BYTE PTR [edx+0x3c],al
1000247e:	xchg   ebx,eax
1000247f:	add    BYTE PTR [edx+0x4d],dl
10002482:	mov    dh,0x0
10002484:	inc    eax
10002485:	cmp    al,0x8e
10002487:	add    BYTE PTR [edi],bh
10002489:	cmp    ecx,DWORD PTR [ecx-0x66bcb800]
1000248f:	add    BYTE PTR [ebx+0x65],ch
10002492:	int3   
10002493:	add    BYTE PTR [ecx+0x6c],dh
10002496:	rol    BYTE PTR [eax],cl
10002498:	fs pusha 
1000249a:	mov    bl,0x0
1000249c:	ins    BYTE PTR es:[edi],dx
1000249d:	addr16 mov esi,0xc8797d00
100024a3:	add    BYTE PTR [esi-0x36ff337f],al
100024a9:	(bad)  
100024aa:	out    0x0,eax
100024ac:	das    
100024ad:	es xchg ecx,eax
100024af:	add    BYTE PTR [ebp+0x3d],al
100024b2:	sahf   
100024b3:	add    BYTE PTR [esp+edi*1-0x66],al
100024b7:	add    BYTE PTR [ebx+0x3c],al
100024ba:	xchg   edi,eax
100024bb:	add    BYTE PTR [eax+0x41],cl
100024be:	mov    ds:0xa6454c00,al
100024c3:	add    BYTE PTR [esi+0x55],bl
100024c6:	lds    eax,FWORD PTR [eax]
100024c8:	gs pop esp
100024ca:	enter  0xc000,0xbd
100024ce:	fild   WORD PTR [eax]
100024d0:	and    DWORD PTR [edi],edx
100024d2:	bound  eax,QWORD PTR [eax]
100024d4:	xor    ecx,DWORD PTR ds:[eax+0x761f2c00]
100024db:	add    BYTE PTR [ecx],ch
100024dd:	sbb    ebp,DWORD PTR [ebx+0x0]
100024e0:	sub    DWORD PTR [ebx],ebx
100024e2:	data16 add BYTE PTR [esi],ah
100024e5:	sbb    BYTE PTR [ecx+0x0],ah
100024e8:	and    eax,0x23005a16
100024ed:	adc    eax,0x12210054
100024f2:	dec    ebp
100024f3:	add    BYTE PTR [esi],bl
100024f5:	cmove  eax,DWORD PTR [eax]
100024f8:	sbb    al,0xd
100024fa:	cmp    eax,DWORD PTR [eax]
100024fc:	sbb    DWORD PTR [edx],ecx
100024fe:	xor    eax,DWORD PTR [eax]
10002500:	push   ss
10002501:	pop    es
10002502:	sub    DWORD PTR [eax],eax
10002504:	(bad)  
10002505:	(bad)  
10002506:	inc    DWORD PTR [eax]
10002508:	cld    
10002509:	std    
1000250a:	inc    BYTE PTR [eax]
1000250c:	mov    esp,0xb600f8d4
10002511:	int    0xf7
10002513:	add    BYTE PTR [eax-0x55ff0939],dh
10002519:	shl    ah,0x0
1000251c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000251d:	mov    edx,0xcaba00f4
10002522:	clc    
10002523:	add    al,dl
10002525:	(bad)  
10002527:	add    cl,bl
10002529:	loop   0x10002526
1000252b:	add    ch,bl
1000252d:	in     eax,0xfb
1000252f:	add    ch,ah
10002531:	jmp    0x1000252f
10002533:	add    bl,ch
10002535:	lock std 
10002537:	add    BYTE PTR [ebp-0x40ff0735],bh
1000253d:	int    0xf9
1000253f:	add    al,al
10002541:	into   
10002542:	stc    
10002543:	add    dl,al
10002545:	iret   
10002546:	stc    
10002547:	add    ah,al
10002549:	sar    edx,1
1000254b:	add    bl,al
1000254d:	sar    cl,1
1000254f:	add    ch,al
10002551:	sar    cl,cl
10002553:	add    bh,al
10002555:	sar    edx,cl
10002557:	add    dh,al
10002559:	sar    cl,cl
1000255b:	add    cl,cl
1000255d:	aad    0xfa
1000255f:	add    dl,cl
10002561:	(bad)  
10002562:	stc    
10002563:	add    ah,cl
10002565:	xlat   BYTE PTR ds:[ebx]
10002566:	cli    
10002567:	add    ch,cl
10002569:	fdivr  st,st(2)
1000256b:	add    ch,dl
1000256d:	fdivp  st(3),st
1000256f:	add    bh,dl
10002571:	loopne 0x1000256e
10002573:	add    dl,bl
10002575:	loop   0x10002573
10002577:	add    al,ah
10002579:	out    0xfc,eax
1000257b:	add    bl,ah
1000257d:	jmp    0x5f2267e
10002582:	inc    BYTE PTR [eax]
10002584:	icebp  
10002585:	hlt    
10002586:	std    
10002587:	add    dh,dh
10002589:	clc    
1000258a:	inc    BYTE PTR [eax]
1000258c:	sti    
1000258d:	cld    
1000258e:	inc    DWORD PTR [eax]
10002590:	cli    
10002591:	sti    
10002592:	inc    BYTE PTR [eax]
10002594:	cwde   
10002595:	lods   al,BYTE PTR ds:[esi]
10002596:	lock add BYTE PTR [edi-0x3fff0d4e],bl
1000259d:	int    0xf8
1000259f:	add    ch,al
100025a1:	sar    ecx,1
100025a3:	add    al,cl
100025a5:	sar    ecx,cl
100025a7:	add    dl,cl
100025a9:	aad    0xfa
100025ab:	add    cl,cl
100025ad:	aam    0xf9
100025af:	add    bl,cl
100025b1:	(bad)  
100025b2:	cli    
100025b3:	add    dl,cl
100025b5:	aad    0xf9
100025b7:	add    bh,cl
100025b9:	fsqrt  
100025bb:	add    bl,dl
100025bd:	fdiv   st(3),st
100025bf:	add    ah,bl
100025c1:	jecxz  0x100025be
100025c3:	add    bh,ah
100025c5:	in     al,dx
100025c6:	std    
100025c7:	add    al,dh
100025c9:	repz std 
100025cb:	add    ch,dh
100025cd:	idiv   esi
100025cf:	add    BYTE PTR [esi-0x6cff1260],cl
100025d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100025d6:	lock add bh,bl
100025d9:	in     eax,0xfc
100025db:	add    cl,ch
100025dd:	in     eax,dx
100025de:	std    
100025df:	add    dh,ch
100025e1:	icebp  
100025e2:	std    
100025e3:	add    cl,bh
100025e5:	cli    
100025e6:	inc    BYTE PTR [eax]
100025e8:	test   DWORD PTR [esi-0x6375ff16],edx
100025ee:	jmp    0x100025f0
100025f0:	in     eax,dx
100025f1:	lock std 
100025f3:	add    al,bh
100025f5:	stc    
100025f6:	inc    BYTE PTR [eax]
100025f8:	jns    0x10002583
100025fa:	out    0x0,eax
100025fc:	adc    DWORD PTR [ecx+0x5c4900e8],0x604d00e7
10002606:	out    dx,al
10002607:	add    BYTE PTR [eax+0x64],dl
1000260a:	cmc    
1000260b:	add    BYTE PTR [eax+ebp*2-0x4],dl
1000260f:	add    BYTE PTR [edx-0x80],dh
10002612:	in     eax,0x0
10002614:	call   0x32011e03
10002619:	cs pushf 
1000261b:	add    BYTE PTR ds:0x2900a332,ah
10002621:	ss stos DWORD PTR es:[edi],eax
10002623:	add    BYTE PTR ds:0x3600b03a,ch
10002629:	inc    esi
1000262a:	ret    
1000262b:	add    BYTE PTR [edx],bh
1000262d:	dec    ecx
1000262e:	retf   
1000262f:	add    BYTE PTR [edi],bh
10002631:	push   eax
10002632:	aam    0x0
10002634:	ds dec esp
10002636:	rol    BYTE PTR [eax],1
10002638:	inc    ecx
10002639:	push   ecx
1000263a:	xlat   BYTE PTR ds:[ebx]
1000263b:	add    BYTE PTR [edi+0x57],al
1000263e:	loopne 0x10002640
10002640:	pop    ebx
10002641:	imul   esp,ebx,0xe6756700
10002647:	add    BYTE PTR [ecx-0x1eff1b4a],dh
1000264d:	jecxz  0x10002644
1000264f:	add    dl,ah
10002651:	in     al,0xf5
10002653:	add    cl,ah
10002655:	jecxz  0x1000264a
10002657:	add    BYTE PTR [edx],ch
10002659:	ss retf 0x2600
1000265d:	xor    BYTE PTR [edx-0x74d5e000],ch
10002663:	add    BYTE PTR [ebx],ah
10002665:	sub    eax,0x3d330092
1000266a:	mov    eax,0xbb433800
1000266f:	add    BYTE PTR [ebx+0x51],al
10002672:	fld    QWORD PTR [eax]
10002674:	push   ecx
10002675:	pop    esi
10002676:	loope  0x10002678
10002678:	dec    edi
10002679:	pop    eax
1000267a:	into   
1000267b:	add    BYTE PTR [edx+0x6a],ah
1000267e:	rol    BYTE PTR [eax],1
10002680:	imul   esi,DWORD PTR [ebp-0x24],0x0
10002684:	jge    0x1000260d
10002686:	inc    BYTE PTR [eax]
10002688:	or     BYTE PTR [ecx-0x7e86ff1c],0xd8
1000268f:	add    BYTE PTR [ebx+ecx*4-0x6f75ff25],al
10002696:	fld    QWORD PTR [eax]
10002698:	xchg   ebp,eax
10002699:	fwait
1000269a:	in     eax,0x0
1000269c:	cdq    
1000269d:	lahf   
1000269e:	jmp    0xb000:0xeaa6a000
100026a5:	mov    ch,0xf4
100026a7:	add    BYTE PTR [edx-0x51ff1049],dh
100026ad:	mov    bl,0xe5
100026af:	add    dl,al
100026b1:	(bad)  
100026b2:	stc    
100026b3:	add    BYTE PTR [ebp-0x46ff0e3f],bh
100026b9:	mov    ebp,0xc0bc00e7
100026be:	call   0xf9c2e5c3
100026c3:	add    dl,al
100026c5:	(bad)
100026c8:	(bad)  
100026c9:	leave  
100026ca:	jmp    0x100026cc
100026cc:	into   
100026cd:	shr    esi,1
100026cf:	add    dh,dl
100026d1:	fdiv   st,st(1)
100026d3:	add    bh,bl
100026d5:	loope  0x100026d0
100026d7:	add    dl,bl
100026d9:	fdivr  st(2),st
100026db:	add    dh,bl
100026dd:	loopne 0x100026d3
100026df:	add    dl,ch
100026e1:	jmp    0x100026db
100026e3:	add    ch,ch
100026e5:	out    dx,al
100026e6:	stc    
100026e7:	add    BYTE PTR [eax],ch
100026e9:	xor    BYTE PTR [ecx-0x3eccd500],bh
100026ef:	add    BYTE PTR [eax],dh
100026f1:	cmp    esp,ecx
100026f3:	add    BYTE PTR [edi*1+0x423700d2],dh
100026fa:	fld    DWORD PTR [eax]
100026fc:	ss inc eax
100026fe:	(bad)  
100026ff:	add    BYTE PTR [esi+edi*1],dh
10002702:	iret   
10002703:	add    BYTE PTR [ecx],bh
10002705:	inc    esp
10002706:	fild   DWORD PTR [eax]
10002708:	cmp    eax,DWORD PTR [ebx-0x2a]
1000270b:	add    BYTE PTR [esi],bh
1000270d:	dec    ecx
1000270e:	fadd   QWORD PTR [eax]
10002710:	cmp    al,0x43
10002712:	into   
10002713:	add    BYTE PTR ds:0x3300ab3b,dh
10002719:	cmp    DWORD PTR [ebx-0x40bbc300],esp
1000271f:	add    BYTE PTR [ecx],bh
10002721:	aas    
10002722:	mov    al,0x0
10002724:	inc    esp
10002725:	dec    esp
10002726:	rol    BYTE PTR [eax],1
10002728:	inc    ecx
10002729:	dec    ecx
1000272a:	rol    DWORD PTR [eax],0x4b
1000272d:	push   ebx
1000272e:	rol    BYTE PTR [eax],cl
10002730:	push   ebx
10002731:	pop    ebx
10002732:	aam    0x0
10002734:	dec    edx
10002735:	push   edx
10002736:	mov    esp,0xc4554f00
1000273b:	add    BYTE PTR [ebp+0x64],bl
1000273e:	xlat   BYTE PTR ds:[ebx]
1000273f:	add    BYTE PTR [ebp+0x6d],ah
10002742:	fiadd  DWORD PTR [eax]
10002744:	jae    0x100027be
10002746:	aad    0x0
10002748:	js     0x100027c8
1000274a:	fadd   QWORD PTR [eax]
1000274c:	jbe    0x100027c9
1000274e:	fadd   DWORD PTR [eax]
10002750:	jnp    0x100026d3
10002752:	loopne 0x10002754
10002754:	test   al,0xad
10002756:	icebp  
10002757:	add    BYTE PTR [edi-0x49ff2865],dl
1000275d:	mov    ecx,0xc8c500e6
10002762:	lock add ah,cl
10002765:	into   
10002766:	lock add bl,dl
10002769:	aad    0xf1
1000276b:	add    bh,ah
1000276d:	call   0xf6e5286b
10002772:	test   BYTE PTR [eax],0x17
10002775:	sbb    al,0xb9
10002777:	add    BYTE PTR [eax],dh
10002779:	xor    eax,0x3a3400c8
1000277e:	int3   
1000277f:	add    BYTE PTR [ecx],bh
10002781:	cmp    eax,0x2e2b00cc
10002786:	xchg   ecx,eax
10002787:	add    BYTE PTR [esi],ch
10002789:	xor    DWORD PTR [esi-0x5fc8ce00],edx
1000278f:	add    BYTE PTR [esi+0x4b],al
10002792:	mov    BYTE PTR [eax],0x6e
10002795:	jno    0x10002767
10002797:	add    BYTE PTR [ecx-0x6dff247c],al
1000279d:	xchg   esp,eax
1000279e:	loopne 0x100027a0
100027a0:	retf   
100027a1:	int3   
100027a2:	in     al,dx
100027a3:	add    BYTE PTR [esi],bl
100027a5:	push   ds
100027a6:	mov    ds:0xae252300,eax
100027ab:	add    BYTE PTR [edi],ah
100027ad:	sub    DWORD PTR [ebx-0x38d0d400],esi
100027b3:	add    BYTE PTR [ecx],ch
100027b5:	sub    al,BYTE PTR [esi-0x46abac00]
100027bb:	add    BYTE PTR [ecx+0x63],ah
100027be:	ret    
100027bf:	add    BYTE PTR [edi+0x68],ah
100027c2:	enter  0x6a00,0x6c
100027c6:	retf   
100027c7:	add    BYTE PTR [edx+0x73],dh
100027ca:	aam    0x0
100027cc:	mov    cl,BYTE PTR [ebx+0x6e6e00e3]
100027d2:	mov    bl,0x0
100027d4:	mov    ss,WORD PTR [eax-0x6b6dff1a]
100027da:	jmp    0xd200:0xed999700
100027e1:	shr    dh,cl
100027e3:	add    dl,dh
100027e5:	repnz cli 
100027e7:	add    ch,dh
100027e9:	cmc    
100027ea:	sti    
100027eb:	add    dl,bh
100027ed:	cli    
100027ee:	std    
100027ef:	add    ch,ch
100027f1:	in     eax,dx
100027f2:	lock add dh,bh
100027f5:	(bad)  
100027f6:	inc    DWORD PTR [eax]
	...
100028bc:	cmp    DWORD PTR cs:[ecx],edi
100028bf:	cmp    DWORD PTR [ecx],edi
100028c1:	cmp    DWORD PTR [edx],edi
100028c3:	cmp    bh,BYTE PTR [edx]
100028c5:	cmp    edi,DWORD PTR [ebx]
100028c7:	cmp    edi,DWORD PTR [ebx]
100028c9:	cmp    al,0x3c
100028cb:	cmp    eax,0x3e3e3d3d
100028d0:	ds ds aas 
100028d3:	aas    
100028d4:	aas    
100028d5:	aas    
100028d6:	inc    eax
100028d7:	inc    eax
100028d8:	inc    eax
100028d9:	inc    ecx
100028da:	inc    ecx
100028db:	inc    ecx
100028dc:	inc    ecx
100028dd:	inc    ecx
100028de:	inc    edx
100028df:	inc    edx
100028e0:	inc    edx
100028e1:	inc    edx
100028e2:	inc    edx
100028e3:	inc    edx
	...
100028ec:	cs ret 
100028ee:	rol    al,0xc1
100028f1:	sar    DWORD PTR [edi-0x41413d41],0xe0
100028f8:	loopne 0x100028b7
100028fa:	mov    ebp,0xedbcbcbd
100028ff:	in     eax,dx
10002900:	in     al,dx
10002901:	in     al,dx
10002902:	in     al,dx
10002903:	jmp    0x100028f0
10002905:	jmp    0x100028f2
10002907:	add    eax,DWORD PTR [ebx]
10002909:	add    ebx,DWORD PTR [esp+ebx*1]
1000290c:	sbb    al,0x10
1000290e:	adc    BYTE PTR [edi],cl
10002910:	(bad)  
10002911:	(bad)  
10002912:	cmovb  eax,DWORD PTR [eax]
10002915:	add    BYTE PTR [eax],al
10002917:	add    BYTE PTR [eax],al
10002919:	add    BYTE PTR [eax],al
1000291b:	add    BYTE PTR [ecx],dh
1000291d:	(bad)
10002920:	test   DWORD PTR [ebp-0x7b7b7b7b],eax
10002926:	add    DWORD PTR [ebx-0x6e6e7d7e],0xffffff9e
1000292d:	nop
1000292e:	mov    cs,WORD PTR [edi-0x73737273]
10002934:	popf   
10002935:	pushf  
10002936:	pushf  
10002937:	mov    ecx,DWORD PTR [ebx-0x76767576]
1000293d:	mov    DWORD PTR [eax+0xf888888],ecx
10002943:	inc    edx
	...
1000294c:	xor    ebp,eax
1000294e:	out    dx,al
1000294f:	xor    ebp,DWORD PTR [esi]
10002951:	cs cs das 
10002954:	das    
10002955:	das    
10002956:	das    
10002957:	das    
10002958:	xor    BYTE PTR [eax],dh
1000295a:	xor    BYTE PTR [ecx],ah
1000295c:	and    DWORD PTR [ecx],esp
1000295e:	and    DWORD PTR [ebx],esp
10002960:	and    esp,DWORD PTR [ebx]
10002962:	and    esp,DWORD PTR [esp]
10002965:	and    al,0x24
10002967:	and    al,0x15
10002969:	adc    eax,0x18181616
1000296e:	push   es
1000296f:	push   es
10002970:	push   es
10002971:	mov    BYTE PTR [edi],cl
10002973:	inc    edx
	...
1000297c:	xor    DWORD PTR [esi+0x727833e0],ebx
10002982:	pop    edi
10002983:	dec    esp
10002984:	pop    esi
10002985:	pop    esi
10002986:	pop    ebp
10002987:	pop    ebp
10002988:	jno    0x100029d5
1000298a:	jo     0x100029e8
1000298c:	pop    ebx
1000298d:	pop    ebx
1000298e:	pop    edx
1000298f:	ins    DWORD PTR es:[edi],dx
10002990:	push   edi
10002991:	pop    eax
10002992:	push   0x55
10002994:	push   ebx
10002995:	push   ebx
10002996:	imul   edx,DWORD PTR [ecx+0x51],0x4a4a5050
1000299d:	dec    edx
1000299e:	dec    edx
1000299f:	dec    edx
100029a0:	push   es
100029a1:	mov    BYTE PTR [edi],cl
100029a3:	inc    edx
	...
100029ac:	xor    bl,BYTE PTR [esi+0x4d7833e0]
100029b2:	jb     0x10002a00
100029b4:	dec    esp
100029b5:	pop    esi
100029b6:	pop    esi
100029b7:	pop    ebp
100029b8:	jno    0x10002a2b
100029ba:	dec    ebx
100029bb:	jo     0x10002a2d
100029bd:	pop    ebx
100029be:	pop    ebx
100029bf:	pop    ecx
100029c0:	push   edi
100029c1:	imul   ebx,DWORD PTR [eax+0x54],0x55
100029c5:	push   ebx
100029c6:	push   edx
100029c7:	push   edx
100029c8:	push   ecx
100029c9:	push   ecx
100029ca:	push   eax
100029cb:	push   eax
100029cc:	push   eax
100029cd:	dec    edx
100029ce:	dec    edx
100029cf:	dec    edx
100029d0:	push   es
100029d1:	mov    BYTE PTR [eax],dl
100029d3:	inc    edx
	...
100029dc:	xor    dl,BYTE PTR [ecx+0x4d6033e1]
100029e2:	dec    ebp
100029e3:	jb     0x10002a44
100029e5:	dec    esp
100029e6:	pop    esi
100029e7:	pop    ebp
100029e8:	pop    ebp
100029e9:	jno    0x10002a5c
100029eb:	dec    ebx
100029ec:	jo     0x10002a4a
100029ee:	pop    ebx
100029ef:	outs   dx,BYTE PTR ds:[esi]
100029f0:	ins    BYTE PTR es:[edi],dx
100029f1:	ins    DWORD PTR es:[edi],dx
100029f2:	push   edi
100029f3:	pop    eax
100029f4:	push   0x55
100029f6:	push   ebx
100029f7:	push   ebx
100029f8:	push   edx
100029f9:	push   ecx
100029fa:	push   ecx
100029fb:	push   ecx
100029fc:	push   eax
100029fd:	dec    edx
100029fe:	dec    edx
100029ff:	dec    edx
10002a00:	push   es
10002a01:	mov    BYTE PTR [eax],dl
10002a03:	inc    edx
	...
10002a0c:	xor    dl,BYTE PTR [ecx+0x606134e2]
10002a12:	js     0x100029ac
10002a14:	cwde   
10002a15:	cwde   
10002a16:	cwde   
10002a17:	cwde   
10002a18:	mov    ebp,0xbcbcbdbd
10002a1d:	mov    esp,0x999999bc
10002a22:	cdq    
10002a23:	mov    DWORD PTR [ecx-0x64777778],ecx
10002a29:	fwait
10002a2a:	fwait
10002a2b:	fwait
10002a2c:	call   0x1089:0x64a5050
10002a33:	inc    ecx
	...
10002a3c:	adc    al,0x9f
10002a3e:	(bad)  
10002a3f:	xor    al,0x61
10002a41:	popa   
10002a42:	pusha  
10002a43:	mov    esi,0xd6a8abac
10002a48:	mov    eax,ds:0x9c9dc9d0
10002a4d:	retf   0xc8c7
10002a50:	add    al,0xe3
10002a52:	out    dx,eax
10002a53:	adc    dl,BYTE PTR [edx]
10002a55:	sbb    eax,0x12efe33f
10002a5a:	adc    cl,BYTE PTR [edi]
10002a5c:	call   0x1c89:0x18505050
10002a63:	inc    ecx
	...
10002a6c:	adc    al,0x9f
10002a6e:	(bad)  
10002a6f:	xor    al,0x4e
10002a71:	popa   
10002a72:	popa   
10002a73:	ret    0xacd8
10002a76:	scas   al,BYTE PTR es:[edi]
10002a77:	xlat   BYTE PTR ds:[ebx]
10002a78:	test   eax,0xcca0d2a4
10002a7d:	leave  
10002a7e:	pushf  
10002a7f:	(bad)  
10002a80:	in     eax,0xe4
10002a82:	out    dx,eax
10002a83:	adc    bl,BYTE PTR ds:0xefe4e43d
10002a89:	out    dx,eax
10002a8a:	out    dx,eax
10002a8b:	sbb    eax,0x5050519a
10002a90:	sbb    BYTE PTR [ecx+0x411c],cl
10002a96:	add    BYTE PTR [eax],al
10002a98:	add    BYTE PTR [eax],al
10002a9a:	add    BYTE PTR [eax],al
10002a9c:	adc    al,0x9f
10002a9e:	retf   
10002a9f:	xor    al,0x73
10002aa1:	dec    esi
10002aa2:	popa   
10002aa3:	ret    0xd897
10002aa6:	lods   al,BYTE PTR ds:[esi]
10002aa7:	scas   al,BYTE PTR es:[edi]
10002aa8:	xlat   BYTE PTR ds:[ebx]
10002aa9:	test   eax,0xe6cea2a4
10002aae:	leave  
10002aaf:	retf   0xe4c8
10002ab2:	out    dx,eax
10002ab3:	sbb    eax,0xe513c83a
10002ab8:	jecxz  0x10002abe
10002aba:	neg    BYTE PTR ss:[edx+0x16505151]
10002ac1:	mov    al,BYTE PTR [ebx]
10002ac3:	inc    ecx
	...
10002acc:	pop    ss
10002acd:	xchg   edx,eax
10002ace:	retf   
10002acf:	es jae 0x10002b45
10002ad2:	dec    esi
10002ad3:	mov    BYTE PTR [ecx],0x97
10002ad6:	fsubr  DWORD PTR [esi+ebp*4-0x2d290755]
10002add:	into   
10002ade:	out    0x9d,al
10002ae0:	mov    DWORD PTR [edi+ebp*8],0xcfa51412
10002ae7:	enter  0x1d99,0xb
10002aeb:	lods   eax,DWORD PTR ds:[esi]
10002aec:	fwait
10002aed:	push   edx
10002aee:	push   ecx
10002aef:	push   ecx
10002af0:	adc    eax,0x41038a
10002af5:	add    BYTE PTR [eax],al
10002af7:	add    BYTE PTR [eax],al
10002af9:	add    BYTE PTR [eax],al
10002afb:	add    BYTE PTR [edi],dl
10002afd:	xchg   edx,eax
10002afe:	int    0x26
10002b00:	jns    0x10002b75
10002b02:	dec    esi
10002b03:	lea    eax,[ecx]
10002b05:	add    DWORD PTR [edi-0x54515328],edx
10002b0b:	not    esi
10002b0d:	shl    BYTE PTR [eax+0x2404cacc],cl
10002b13:	sub    BYTE PTR [eax+0x11c7d0a5],ch
10002b19:	or     ebx,ecx
10002b1b:	lods   eax,DWORD PTR ds:[esi]
10002b1c:	fwait
10002b1d:	push   ebx
10002b1e:	push   edx
10002b1f:	imul   edx,DWORD PTR ds:0x40038b,0x0
10002b29:	add    BYTE PTR [eax],al
10002b2b:	add    BYTE PTR [edi],dl
10002b2d:	xchg   ebx,eax
10002b2e:	int    0x26
10002b30:	jns    0x10002bab
10002b32:	jns    0x10002ac3
10002b34:	add    DWORD PTR [ecx],eax
10002b36:	add    DWORD PTR [edi-0x54515328],edx
10002b3c:	not    esp
10002b3e:	mov    eax,ds:0xf625cad0
10002b43:	stos   BYTE PTR es:[edi],al
10002b44:	jmp    0x1df0fb1c
10002b49:	mov    dl,0xb0
10002b4b:	xchg   esp,eax
10002b4c:	fwait
10002b4d:	push   ebx
10002b4e:	push   ebx
10002b4f:	push   ecx
10002b50:	adc    eax,0x40eb8b
10002b55:	add    BYTE PTR [eax],al
10002b57:	add    BYTE PTR [eax],al
10002b59:	add    BYTE PTR [eax],al
10002b5b:	add    BYTE PTR [edi],dl
10002b5d:	xchg   ebx,eax
10002b5e:	into   
10002b5f:	daa    
10002b60:	dec    edi
10002b61:	dec    edi
10002b62:	jns    0x10002b2f
10002b64:	add    DWORD PTR [ecx],eax
10002b66:	add    DWORD PTR [ecx],eax
10002b68:	xchg   edi,eax
10002b69:	fsubr  DWORD PTR [esi+ebp*4-0xe2a0a55]
10002b70:	adc    al,0xf6
10002b72:	xlat   BYTE PTR ds:[ebx]
10002b73:	test   eax,0xc07a1a6
10002b78:	jmp    0x5355:0x88d9b1b3
10002b7f:	push   ebx
10002b80:	and    al,0x9c
10002b82:	jmp    0x10002bc4
	...
10002b8c:	sbb    DWORD PTR [ebx+0x4f7a27ce],edx
10002b92:	jns    0x10002b61
10002b94:	add    DWORD PTR [ecx],eax
10002b96:	add    DWORD PTR [ecx],eax
10002b98:	add    DWORD PTR [edi-0x54515328],edx
10002b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002b9f:	pop    ss
10002ba0:	or     al,0xd7
10002ba2:	stos   BYTE PTR es:[edi],al
10002ba3:	test   al,0xa5
10002ba5:	pop    es
10002ba6:	or     al,0xb6
10002ba8:	mov    ch,0xb4
10002baa:	mov    dl,0xd9
10002bac:	mov    BYTE PTR [esi+0x54],dl
10002baf:	push   ebx
10002bb0:	and    al,0x9c
10002bb2:	jmp    0x10002bf4
	...
10002bbc:	sbb    DWORD PTR [esi+0x7a7a27d1],eax
10002bc2:	dec    edi
10002bc3:	int    0x1
10002bc5:	add    DWORD PTR [ecx],eax
10002bc7:	add    DWORD PTR [ecx],eax
10002bc9:	add    DWORD PTR [edi-0x17545328],edx
10002bcf:	push   cs
10002bd0:	xchg   edi,eax
10002bd1:	fsubr  QWORD PTR [edx-0x46f12c59]
10002bd7:	mov    dh,0xfa
10002bd9:	mov    ah,0xb3
10002bdb:	mov    al,0x89
10002bdd:	pop    eax
10002bde:	push   esi
10002bdf:	push   ebp
10002be0:	and    al,0x9d
10002be2:	jmp    0x10002c23
	...
10002bec:	pop    es
10002bed:	xchg   cl,dl
10002bef:	sbb    dh,BYTE PTR [edx+edi*2+0x7a]
10002bf3:	into   
10002bf4:	add    DWORD PTR [ecx],eax
10002bf6:	add    DWORD PTR [ecx],eax
10002bf8:	add    DWORD PTR [ecx],eax
10002bfa:	add    DWORD PTR [edi-0x168f528],edx
10002c00:	add    edi,edi
10002c02:	xchg   edi,eax
10002c03:	fdiv   st(2),st
10002c05:	mov    edx,0xeadcb896
10002c0a:	mov    bl,0xb1
10002c0c:	cdq    
10002c0d:	imul   ebx,DWORD PTR [eax+0x6a],0x23
10002c11:	mov    esp,gs
10002c13:	aas    
	...
10002c1c:	pop    es
10002c1d:	adc    dl,0x1a
10002c20:	arpl   WORD PTR [edx+edi*2-0x32],si
10002c24:	add    DWORD PTR [ecx],eax
10002c26:	add    DWORD PTR [ecx],eax
10002c28:	add    DWORD PTR [ecx],eax
10002c2a:	add    DWORD PTR [ecx],eax
10002c2c:	add    DWORD PTR [ecx],eax
10002c2e:	add    DWORD PTR [ecx],eax
10002c30:	add    DWORD PTR [ecx],eax
10002c32:	inc    esp
10002c33:	fs sti 
10002c35:	mov    ebx,0xb5b6b9de
10002c3a:	mov    ah,0xb2
10002c3c:	mov    ebx,DWORD PTR [ecx+0x57]
10002c3f:	pop    eax
10002c40:	and    ecx,DWORD PTR [esp+ebp*8+0x3f]
10002c47:	add    BYTE PTR [eax],al
10002c49:	add    BYTE PTR [eax],al
10002c4b:	add    BYTE PTR [edi],al
10002c4d:	adc    dl,0x1b
10002c50:	bound  esp,QWORD PTR [ebx+0x74]
10002c53:	rol    DWORD PTR [ecx],1
10002c55:	add    DWORD PTR [ecx],eax
10002c57:	add    DWORD PTR [ecx],eax
10002c59:	add    DWORD PTR [ecx],eax
10002c5b:	add    DWORD PTR [ecx],eax
10002c5d:	add    DWORD PTR [ecx],eax
10002c5f:	add    DWORD PTR [ecx],eax
10002c61:	add    DWORD PTR [ebp+edi*8-0x4],eax
10002c65:	mov    ebx,0xfab89587
10002c6a:	jmp    0x2357:0x6b6f9db3
10002c71:	(bad)  
10002c72:	in     al,dx
10002c73:	aas    
	...
10002c7c:	icebp  
10002c7d:	and    DWORD PTR [edx+0x6362751b],0x10101d1
10002c87:	add    DWORD PTR [ecx],eax
10002c89:	add    DWORD PTR [ecx],eax
10002c8b:	add    DWORD PTR [ecx],eax
10002c8d:	add    DWORD PTR [ecx],eax
10002c8f:	add    DWORD PTR [eax],edi
10002c91:	pop    ds
10002c92:	pushf  
10002c93:	sub    eax,0x96bafb0e
10002c98:	mov    eax,0xcfb4b5b6
10002c9d:	outs   dx,BYTE PTR ds:[esi]
10002c9e:	ins    BYTE PTR es:[edi],dx
10002c9f:	pop    ecx
10002ca0:	and    ecx,DWORD PTR [ebp+0x3eed]
10002ca6:	add    BYTE PTR [eax],al
10002ca8:	add    BYTE PTR [eax],al
10002caa:	add    BYTE PTR [eax],al
10002cac:	icebp  
10002cad:	jl     0x10002c51
10002caf:	or     BYTE PTR [ebp+0x62],dh
10002cb2:	(bad)  
10002cb4:	add    DWORD PTR [ecx],eax
10002cb6:	add    DWORD PTR [ecx],eax
10002cb8:	add    DWORD PTR [ecx],eax
10002cba:	add    DWORD PTR [ecx],eax
10002cbc:	add    DWORD PTR [ecx],eax
10002cbe:	add    DWORD PTR [ecx],eax
10002cc0:	xor    edi,esi
10002cc2:	pop    esp
10002cc3:	add    eax,0xdebb0e2d
10002cc8:	mov    ecx,0xf1b4b5b6
10002ccd:	pop    ebx
10002cce:	outs   dx,BYTE PTR ds:[esi]
10002ccf:	pop    ecx
10002cd0:	and    ecx,DWORD PTR [edi+0x3eed]
10002cd6:	add    BYTE PTR [eax],al
10002cd8:	add    BYTE PTR [eax],al
10002cda:	add    BYTE PTR [eax],al
10002cdc:	icebp  
10002cdd:	jge    0x10002c65
10002cdf:	or     BYTE PTR [ebp+esi*2+0x62],ah
10002ce3:	rol    BYTE PTR [ecx],cl
10002ce5:	add    DWORD PTR [ecx],eax
10002ce7:	sub    al,0x29
10002ce9:	and    BYTE PTR [edi],bl
10002ceb:	sub    BYTE PTR ds:0xf4010101,dh
10002cf1:	pop    esp
10002cf2:	push   edx
10002cf3:	mov    al,ds:0x870e2d05
10002cf8:	xchg   ebp,eax
10002cf9:	mov    eax,0x70d3eadc
10002cfe:	pop    ebx
10002cff:	pop    ebx
10002d00:	and    DWORD PTR [esi+0x3ebc],ecx
10002d06:	add    BYTE PTR [eax],al
10002d08:	add    BYTE PTR [eax],al
10002d0a:	add    BYTE PTR [eax],al
10002d0c:	bnd jbe 0x10002c95
10002d0f:	call   0xb2759178
10002d14:	add    DWORD PTR [ecx],eax
10002d16:	jmp    0x41c:0xebecec22
10002d1d:	xor    eax,0xaf0a0101
10002d22:	test   eax,0x2d05a0a3
10002d27:	push   cs
10002d28:	fidivr WORD PTR [ecx+0x70a6b5b6]
10002d2e:	pop    esp
10002d2f:	pop    ebx
10002d30:	and    DWORD PTR [eax+0x3dbc],edx
10002d36:	add    BYTE PTR [eax],al
10002d38:	add    BYTE PTR [eax],al
10002d3a:	add    BYTE PTR [eax],al
10002d3c:	bnd ja 0x10002cbf
10002d3f:	or     DWORD PTR [edi+0x64],edi
10002d42:	jne    0x10002d17
10002d44:	add    DWORD PTR [ecx],eax
10002d46:	sub    dl,al
10002d48:	into   
10002d49:	ret    0x2df
10002d4c:	sbb    al,0x28
10002d4e:	add    DWORD PTR [ecx],eax
10002d50:	mov    bh,0xa
10002d52:	scas   eax,DWORD PTR es:[edi]
10002d53:	test   eax,0x2d05a0a3
10002d58:	push   cs
10002d59:	mov    ecx,0x4ba8fab6
10002d5e:	jo     0x10002dbc
10002d60:	and    DWORD PTR [esi+0x3dbd],ebx
10002d66:	add    BYTE PTR [eax],al
10002d68:	add    BYTE PTR [eax],al
10002d6a:	add    BYTE PTR [eax],al
10002d6c:	repz ja 0x10002cef
10002d6f:	or     DWORD PTR [ebx+0x7f],edi
10002d72:	fs aad 0x1
10002d75:	add    DWORD PTR [ebx],edx
10002d77:	(bad)  
10002d78:	ja     0x10002d00
10002d7a:	(bad)  
10002d7b:	fucomip st,st(3)
10002d7d:	pop    ds
10002d7e:	add    DWORD PTR [ecx],eax
10002d80:	add    DWORD PTR [edi-0x5c5650f6],esi
10002d86:	mov    al,ds:0xb80e2d05
10002d8b:	fsubr  QWORD PTR [ebp+0x21704b71]
10002d91:	xchg   ecx,eax
10002d92:	mov    ebp,0x3d
10002d97:	add    BYTE PTR [eax],al
10002d99:	add    BYTE PTR [eax],al
10002d9b:	add    bl,dh
10002d9d:	addr16 xor ebp,0xa57b7b66
10002da4:	add    DWORD PTR [ecx],eax
10002da6:	and    dh,ch
10002da8:	stos   DWORD PTR es:[edi],eax
10002da9:	xlat   BYTE PTR ds:[ebx]
10002daa:	xchg   ebx,eax
10002dab:	mov    esi,0x10120ec
10002db0:	add    DWORD PTR [ecx],eax
10002db2:	mov    bh,0xa
10002db4:	scas   eax,DWORD PTR es:[edi]
10002db5:	test   eax,0x2d05a0a3
10002dba:	push   cs
10002dbb:	mov    dh,0xb5
10002dbd:	jno    0x10002e30
10002dbf:	dec    ebx
10002dc0:	xor    BYTE PTR [ecx+0x3cbd],dl
10002dc6:	add    BYTE PTR [eax],al
10002dc8:	add    BYTE PTR [eax],al
10002dca:	add    BYTE PTR [eax],al
10002dcc:	out    0x68,eax
10002dce:	xor    ebp,0xe87b6666
10002dd4:	add    DWORD PTR [ecx],eax
10002dd6:	sub    esp,DWORD PTR [esi]
10002dd8:	test   eax,0xedc4a3ab
10002ddd:	sub    DWORD PTR [ecx],eax
10002ddf:	add    DWORD PTR [ecx],eax
10002de1:	add    DWORD PTR [ecx],eax
10002de3:	mov    bh,0xa
10002de5:	scas   eax,DWORD PTR es:[edi]
10002de6:	test   eax,0x2d05a0a3
10002deb:	push   cs
10002dec:	fcomp  QWORD PTR [ebp+0x71]
10002def:	jno    0x10002e21
10002df1:	and    al,0x3c
	...
10002dfc:	out    0x68,eax
10002dfe:	jl     0x10002df7
10002e00:	gs gs jnp 0x10002daa
10002e04:	add    DWORD PTR [ecx],eax
10002e06:	cli    
10002e07:	sub    DWORD PTR [esi],esp
10002e09:	or     edx,edx
10002e0b:	out    0x22,al
10002e0d:	sub    al,0x1
10002e0f:	add    DWORD PTR [ecx],eax
10002e11:	add    DWORD PTR [ecx],eax
10002e13:	add    DWORD PTR [edi-0x5c5650f6],esi
10002e19:	mov    al,ds:0x5dd82d05
10002e1e:	pop    ebp
10002e1f:	jno    0x10002e51
10002e21:	cmp    BYTE PTR [esi+0x3c],0x0
10002e28:	add    BYTE PTR [eax],al
10002e2a:	add    BYTE PTR [eax],al
10002e2c:	out    0x49,eax
10002e2e:	jge    0x10002e27
10002e30:	inc    esp
10002e31:	inc    esp
10002e32:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002e34:	add    DWORD PTR [ecx],eax
10002e36:	add    edx,edi
10002e38:	sub    esp,DWORD PTR [edx]
10002e3a:	adc    ebp,DWORD PTR [edx]
10002e3c:	jmp    0x101:0x1010101
10002e43:	add    DWORD PTR [ecx],eax
10002e45:	mov    bh,0xa
10002e47:	scas   eax,DWORD PTR es:[edi]
10002e48:	test   eax,0x1d1da0a3
10002e4d:	fcomp  DWORD PTR [esi+0x5d]
10002e50:	das    
10002e51:	and    ecx,0x3b
	...
10002e5c:	hlt    
10002e5d:	dec    eax
10002e5e:	jbe    0x10002e57
10002e60:	inc    DWORD PTR [esp+eax*2-0x59]
10002e64:	add    DWORD PTR [ecx],eax
10002e66:	add    DWORD PTR [ecx],eax
10002e68:	add    DWORD PTR [ecx],eax
10002e6a:	add    DWORD PTR [ecx],eax
10002e6c:	add    DWORD PTR [ecx],eax
10002e6e:	add    DWORD PTR [ecx],eax
10002e70:	add    DWORD PTR [ecx],eax
10002e72:	add    DWORD PTR [ecx],eax
10002e74:	add    DWORD PTR [ecx],eax
10002e76:	mov    bh,0xa
10002e78:	scas   eax,DWORD PTR es:[edi]
10002e79:	test   eax,0x1d1c0504
10002e7e:	fcomp  DWORD PTR [ebp+0x2f]
10002e81:	and    ecx,0x3b
	...
10002e8c:	ror    DWORD PTR [eax+0x76],cl
10002e8f:	clc    
10002e90:	inc    DWORD PTR [esp+eax*2-0x59]
10002e94:	add    DWORD PTR [ecx],eax
10002e96:	add    DWORD PTR [ecx],eax
10002e98:	add    DWORD PTR [ecx],eax
10002e9a:	add    DWORD PTR [ecx],eax
10002e9c:	add    DWORD PTR [ecx],eax
10002e9e:	add    DWORD PTR [ecx],eax
10002ea0:	add    DWORD PTR [ecx],eax
10002ea2:	add    DWORD PTR [ecx],eax
10002ea4:	add    DWORD PTR [ecx],eax
10002ea6:	add    DWORD PTR [edi-0x2ef8fbf6],esi
10002eac:	adc    ebx,DWORD PTR [edi+esi*1]
10002eaf:	pop    esi
10002eb0:	das    
10002eb1:	cmp    DWORD PTR [edi+0x3b],0x0
10002eb8:	add    BYTE PTR [eax],al
10002eba:	add    BYTE PTR [eax],al
10002ebc:	rol    DWORD PTR [edi+0x77],cl
10002ebf:	clc    
10002ec0:	(bad)  
10002ec1:	inc    DWORD PTR [edi+eiz*4-0x59]
10002ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002ec9:	call   0xe5a5d4b6
10002ece:	aad    0xa5
10002ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002ed1:	jmp    0xc6dadb80
10002ed6:	fisttp QWORD PTR [esi-0x49]
10002ed9:	or     ch,cl
10002edb:	or     ecx,edx
10002edd:	push   ds
10002ede:	or     al,0x4c
10002ee0:	das    
10002ee1:	test   BYTE PTR [edi+0x3b],bh
10002ee7:	add    BYTE PTR [eax],al
10002ee9:	add    BYTE PTR [eax],al
10002eeb:	add    ch,dl
10002eed:	inc    edi
10002eee:	addr16 stc 
10002ef0:	add    edi,edi
10002ef2:	inc    esp
10002ef3:	inc    esp
10002ef4:	inc    esp
10002ef5:	gs gs data16 jnp 0x10002f79
10002efa:	fs fs jne 0x10002f60
10002efe:	bound  esp,QWORD PTR [ebx+0x74]
10002f01:	jp     0x10002f81
10002f03:	dec    edi
10002f04:	dec    edi
10002f05:	jns    0x10002f7a
10002f07:	dec    esi
10002f08:	dec    esi
10002f09:	popa   
10002f0a:	or     ch,cl
10002f0c:	daa    
10002f0d:	jmp    0x942f8e84
10002f12:	sar    DWORD PTR [edx],0x0
10002f15:	add    BYTE PTR [eax],al
10002f17:	add    BYTE PTR [eax],al
10002f19:	add    BYTE PTR [eax],al
10002f1b:	add    ch,dl
10002f1d:	inc    esi
10002f1e:	addr16 stc 
10002f20:	add    DWORD PTR [ecx],eax
10002f22:	(bad)  
10002f23:	(bad)  
10002f24:	inc    DWORD PTR [ebp+eiz*2+0x66]
10002f28:	jnp    0x10002fa5
10002f2a:	jnp    0x10002f90
10002f2c:	jne    0x10002fa3
10002f2e:	bound  esp,QWORD PTR [edx+0x63]
10002f31:	je     0x10002fa7
10002f33:	jle    0x10002f84
10002f35:	jns    0x10002fb0
10002f37:	jns    0x10002f87
10002f39:	dec    esi
10002f3a:	popa   
10002f3b:	push   cs
10002f3c:	fstp   TBYTE PTR [eax+0x4d]
10002f3f:	jb     0x10002f6f
10002f41:	test   ecx,eax
10002f43:	cmp    al,BYTE PTR [eax]
10002f45:	add    BYTE PTR [eax],al
10002f47:	add    BYTE PTR [eax],al
10002f49:	add    BYTE PTR [eax],al
10002f4b:	add    ah,dl
10002f4d:	inc    esi
10002f4e:	addr16 stc 
10002f50:	add    DWORD PTR [ecx],eax
10002f52:	add    DWORD PTR [ebx-0x1],eax
10002f55:	inc    DWORD PTR [ebp+eiz*2+0x66]
10002f59:	data16 jnp 0x10002fdb
10002f5c:	fs fs jne 0x10002fc2
10002f60:	bound  esp,QWORD PTR [ebx+0x74]
10002f63:	jp     0x10002fdf
10002f65:	dec    edi
10002f66:	dec    edi
10002f67:	jns    0x10002fe2
10002f69:	dec    esi
10002f6a:	dec    esi
10002f6b:	popa   
10002f6c:	popa   
10002f6d:	pusha  
10002f6e:	js     0x10002fe8
10002f70:	cs test eax,eax
10002f73:	cmp    al,BYTE PTR [eax]
10002f75:	add    BYTE PTR [eax],al
10002f77:	add    BYTE PTR [eax],al
10002f79:	add    BYTE PTR [eax],al
10002f7b:	add    ah,dl
10002f7d:	inc    ebp
10002f7e:	push   0xf8f9f9f9
10002f83:	clc    
10002f84:	clc    
10002f85:	clc    
10002f86:	div    edi
10002f88:	cmc    
10002f89:	cmc    
10002f8a:	or     DWORD PTR [ecx],ecx
10002f8c:	or     DWORD PTR [eax],ecx
10002f8e:	or     BYTE PTR [ebx],bl
10002f90:	sbb    ebx,DWORD PTR [edx]
10002f92:	sbb    ah,BYTE PTR [edi]
10002f94:	daa    
10002f95:	daa    
10002f96:	es es es xor al,0x34
10002f9b:	xor    al,0x34
10002f9d:	xor    esi,DWORD PTR [ebx]
10002f9f:	xor    esi,DWORD PTR [ebx]
10002fa1:	test   eax,eax
10002fa3:	cmp    DWORD PTR [eax],eax
10002fa5:	add    BYTE PTR [eax],al
10002fa7:	add    BYTE PTR [eax],al
10002fa9:	add    BYTE PTR [eax],al
10002fab:	add    ah,dl
10002fad:	inc    ebp
10002fae:	push   0x67676868
10002fb3:	addr16 ja 0x1000302c
10002fb6:	jge    0x10003035
10002fb8:	jl     0x10002f3b
10002fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002fbb:	add    BYTE PTR [esi-0x2d5d5d7a],0xd2
10002fc2:	rcl    ecx,1
10002fc4:	into   
10002fc5:	into   
10002fc6:	int    0xcb
10002fc8:	retf   
10002fc9:	mov    dh,0xe2
10002fcc:	loope  0x10002fae
10002fce:	loopne 0x10002fbe
10002fd0:	out    dx,al
10002fd1:	out    dx,al
10002fd2:	ret    
10002fd3:	cmp    DWORD PTR [eax],eax
10002fd5:	add    BYTE PTR [eax],al
10002fd7:	add    BYTE PTR [eax],al
10002fd9:	add    BYTE PTR [eax],al
10002fdb:	add    dh,dl
10002fdd:	inc    ebp
10002fde:	inc    ebp
10002fdf:	inc    ebp
10002fe0:	inc    ebp
10002fe1:	inc    esi
10002fe2:	inc    esi
10002fe3:	inc    edi
10002fe4:	inc    edi
10002fe5:	dec    eax
10002fe6:	dec    ecx
10002fe7:	dec    ecx
10002fe8:	push   0x76776767
10002fed:	jge    0x1000306b
10002fef:	add    DWORD PTR [eax-0x6c797980],0x92929293
10002ff9:	lahf   
10002ffa:	lahf   
10002ffb:	xchg   ecx,eax
10002ffc:	xchg   ecx,eax
10002ffd:	sahf   
10002ffe:	sahf   
10002fff:	(bad)
10003002:	ret    
10003003:	cmp    DWORD PTR [eax],eax
10003005:	add    BYTE PTR [eax],al
10003007:	add    BYTE PTR [eax],al
10003009:	add    BYTE PTR [eax],al
1000300b:	add    dh,dl
1000300d:	(bad)  
1000300e:	(bad)  
1000300f:	aam    0xd4
10003011:	aam    0xd5
10003013:	aad    0xd3
10003015:	shl    esp,cl
10003017:	out    0xe7,eax
10003019:	out    0xf3,eax
1000301b:	repz repnz repnz icebp 
1000301f:	icebp  
10003020:	icebp  
10003021:	pop    es
10003022:	pop    es
10003023:	sbb    DWORD PTR [ecx],ebx
10003025:	sbb    DWORD PTR [edi],edx
10003027:	pop    ss
10003028:	pop    ss
10003029:	adc    al,0x14
1000302b:	adc    al,0x32
1000302d:	xor    dh,BYTE PTR [edx]
1000302f:	xor    DWORD PTR [ecx],esi
10003031:	xor    DWORD PTR [esi],ebp
10003033:	add    BYTE PTR cs:[eax],al
	...
100030f6:	add    BYTE PTR [eax],al
100030f8:	(bad)  
100030f9:	(bad)  
100030fa:	(bad)  
100030fb:	(bad)  
100030fc:	(bad)  
100030fd:	inc    DWORD PTR [eax]
100030ff:	add    bh,bh
10003101:	(bad)  
10003102:	(bad)  
10003103:	(bad)  
10003104:	(bad)  
10003105:	inc    DWORD PTR [eax]
10003107:	add    bh,bh
10003109:	(bad)  
1000310a:	(bad)  
1000310b:	(bad)  
1000310c:	(bad)  
1000310d:	inc    DWORD PTR [eax]
1000310f:	add    bh,bh
10003111:	(bad)  
10003112:	(bad)  
10003113:	(bad)  
10003114:	(bad)  
10003115:	inc    DWORD PTR [eax]
10003117:	add    al,dh
10003119:	add    BYTE PTR [eax],al
1000311b:	add    BYTE PTR [eax],al
1000311d:	sldt   WORD PTR [eax]
10003120:	lock add BYTE PTR [eax],al
10003123:	add    BYTE PTR [eax],al
10003125:	sldt   WORD PTR [eax]
10003128:	lock add BYTE PTR [eax],al
1000312b:	add    BYTE PTR [eax],al
1000312d:	sldt   WORD PTR [eax]
10003130:	lock add BYTE PTR [eax],al
10003133:	add    BYTE PTR [eax],al
10003135:	sldt   WORD PTR [eax]
10003138:	lock add BYTE PTR [eax],al
1000313b:	add    BYTE PTR [eax],al
1000313d:	sldt   WORD PTR [eax]
10003140:	lock add BYTE PTR [eax],al
10003143:	add    BYTE PTR [eax],al
10003145:	sldt   WORD PTR [eax]
10003148:	lock add BYTE PTR [eax],al
1000314b:	add    BYTE PTR [eax],al
1000314d:	sldt   WORD PTR [eax]
10003150:	lock add BYTE PTR [eax],al
10003153:	add    BYTE PTR [eax],al
10003155:	sldt   WORD PTR [eax]
10003158:	lock add BYTE PTR [eax],al
1000315b:	add    BYTE PTR [eax],al
1000315d:	sldt   WORD PTR [eax]
10003160:	lock add BYTE PTR [eax],al
10003163:	add    BYTE PTR [eax],al
10003165:	sldt   WORD PTR [eax]
10003168:	lock add BYTE PTR [eax],al
1000316b:	add    BYTE PTR [eax],al
1000316d:	sldt   WORD PTR [eax]
10003170:	lock add BYTE PTR [eax],al
10003173:	add    BYTE PTR [eax],al
10003175:	sldt   WORD PTR [eax]
10003178:	lock add BYTE PTR [eax],al
1000317b:	add    BYTE PTR [eax],al
1000317d:	sldt   WORD PTR [eax]
10003180:	lock add BYTE PTR [eax],al
10003183:	add    BYTE PTR [eax],al
10003185:	sldt   WORD PTR [eax]
10003188:	lock add BYTE PTR [eax],al
1000318b:	add    BYTE PTR [eax],al
1000318d:	sldt   WORD PTR [eax]
10003190:	lock add BYTE PTR [eax],al
10003193:	add    BYTE PTR [eax],al
10003195:	sldt   WORD PTR [eax]
10003198:	lock add BYTE PTR [eax],al
1000319b:	add    BYTE PTR [eax],al
1000319d:	sldt   WORD PTR [eax]
100031a0:	lock add BYTE PTR [eax],al
100031a3:	add    BYTE PTR [eax],al
100031a5:	sldt   WORD PTR [eax]
100031a8:	lock add BYTE PTR [eax],al
100031ab:	add    BYTE PTR [eax],al
100031ad:	sldt   WORD PTR [eax]
100031b0:	lock add BYTE PTR [eax],al
100031b3:	add    BYTE PTR [eax],al
100031b5:	sldt   WORD PTR [eax]
100031b8:	lock add BYTE PTR [eax],al
100031bb:	add    BYTE PTR [eax],al
100031bd:	sldt   WORD PTR [eax]
100031c0:	lock add BYTE PTR [eax],al
100031c3:	add    BYTE PTR [eax],al
100031c5:	sldt   WORD PTR [eax]
100031c8:	lock add BYTE PTR [eax],al
100031cb:	add    BYTE PTR [eax],al
100031cd:	sldt   WORD PTR [eax]
100031d0:	lock add BYTE PTR [eax],al
100031d3:	add    BYTE PTR [eax],al
100031d5:	sldt   WORD PTR [eax]
100031d8:	lock add BYTE PTR [eax],al
100031db:	add    BYTE PTR [eax],al
100031dd:	sldt   WORD PTR [eax]
100031e0:	lock add BYTE PTR [eax],al
100031e3:	add    BYTE PTR [eax],al
100031e5:	sldt   WORD PTR [eax]
100031e8:	lock add BYTE PTR [eax],al
100031eb:	add    BYTE PTR [eax],al
100031ed:	sldt   WORD PTR [eax]
100031f0:	lock add BYTE PTR [eax],al
100031f3:	add    BYTE PTR [eax],al
100031f5:	sldt   WORD PTR [eax]
100031f8:	lock add BYTE PTR [eax],al
100031fb:	add    BYTE PTR [eax],al
100031fd:	sldt   WORD PTR [eax]
10003200:	lock add BYTE PTR [eax],al
10003203:	add    BYTE PTR [eax],al
10003205:	sldt   WORD PTR [eax]
10003208:	lock add BYTE PTR [eax],al
1000320b:	add    BYTE PTR [eax],al
1000320d:	sldt   WORD PTR [eax]
10003210:	lock add BYTE PTR [eax],al
10003213:	add    BYTE PTR [eax],al
10003215:	sldt   WORD PTR [eax]
10003218:	lock add BYTE PTR [eax],al
1000321b:	add    BYTE PTR [eax],al
1000321d:	sldt   WORD PTR [eax]
10003220:	lock add BYTE PTR [eax],al
10003223:	add    BYTE PTR [eax],al
10003225:	sldt   WORD PTR [eax]
10003228:	lock add BYTE PTR [eax],al
1000322b:	add    BYTE PTR [eax],al
1000322d:	sldt   WORD PTR [eax]
10003230:	lock add BYTE PTR [eax],al
10003233:	add    BYTE PTR [eax],al
10003235:	sldt   WORD PTR [eax]
10003238:	lock add BYTE PTR [eax],al
1000323b:	add    BYTE PTR [eax],al
1000323d:	sldt   WORD PTR [eax]
10003240:	lock add BYTE PTR [eax],al
10003243:	add    BYTE PTR [eax],al
10003245:	sldt   WORD PTR [eax]
10003248:	lock add BYTE PTR [eax],al
1000324b:	add    BYTE PTR [eax],al
1000324d:	sldt   WORD PTR [eax]
10003250:	lock add BYTE PTR [eax],al
10003253:	add    BYTE PTR [eax],al
10003255:	sldt   WORD PTR [eax]
10003258:	(bad)  
10003259:	(bad)  
1000325a:	(bad)  
1000325b:	(bad)  
1000325c:	(bad)  
1000325d:	inc    DWORD PTR [eax]
1000325f:	add    bh,bh
10003261:	(bad)  
10003262:	(bad)  
10003263:	(bad)  
10003264:	(bad)  
10003265:	inc    DWORD PTR [eax]
10003267:	add    bh,bh
10003269:	(bad)  
1000326a:	(bad)  
1000326b:	(bad)  
1000326c:	(bad)  
1000326d:	inc    DWORD PTR [eax]
1000326f:	add    bh,bh
10003271:	(bad)  
10003272:	(bad)  
10003273:	(bad)  
10003274:	(bad)  
10003275:	inc    DWORD PTR [eax]
10003277:	add    BYTE PTR [eax],ch
10003279:	add    BYTE PTR [eax],al
1000327b:	add    BYTE PTR [eax],ah
1000327d:	add    BYTE PTR [eax],al
1000327f:	add    BYTE PTR [eax+0x0],al
10003282:	add    BYTE PTR [eax],al
10003284:	add    DWORD PTR [eax],eax
10003286:	or     BYTE PTR [eax],al
	...
100032a4:	(bad)  
100032a5:	(bad)  
100032a6:	inc    DWORD PTR [eax]
100032a8:	adc    DWORD PTR [edi],ecx
100032aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100032ab:	add    BYTE PTR [ecx],dl
100032ad:	push   cs
100032ae:	fwait
100032af:	add    BYTE PTR [ecx+esi*1],dh
100032b2:	mov    esp,0xad434400
100032b7:	add    BYTE PTR [edi+0x55],dl
100032ba:	mov    ecx,0x803b3c00
100032bf:	add    BYTE PTR [ebp+0x5b],bl
100032c2:	mov    edi,0xcb646600
100032c7:	add    BYTE PTR [ebx+0x62],ah
100032ca:	les    eax,FWORD PTR [eax]
100032cc:	cmp    DWORD PTR [edi-0x23],0xdf838500
100032d3:	add    BYTE PTR [eax-0x73ff1d79],cl
100032d9:	mov    edx,esp
100032db:	add    BYTE PTR [ebp+0x1100dbac],ch
100032e1:	or     al,0x93
100032e3:	add    BYTE PTR [edi],cl
100032e5:	or     al,0x8b
100032e7:	add    BYTE PTR [ecx],dl
100032e9:	or     al,0x84
100032eb:	add    BYTE PTR [edx],bl
100032ed:	adc    eax,0x5457009f
100032f2:	mov    DWORD PTR [eax],0x863b3e
100032f8:	push   esi
100032f9:	push   edx
100032fa:	mov    dh,0x0
100032fc:	ds cmp al,0x84
100032ff:	add    BYTE PTR ds:0x5a00823b,bh
10003305:	push   esi
10003306:	mov    edx,0xd1707300
1000330b:	add    BYTE PTR [ebx+0x78],bh
1000330e:	fadd   DWORD PTR [eax]
10003310:	jle    0x1000338d
10003312:	fild   DWORD PTR [eax]
10003314:	imul   ebp,DWORD PTR [ecx-0x5c],0x0
10003318:	test   al,0xa6
1000331a:	fild   WORD PTR [eax]
1000331c:	mov    eax,ds:0x2400c8a0
10003321:	pop    ds
10003322:	ins    DWORD PTR es:[edi],dx
10003323:	add    BYTE PTR [ebp+eax*2-0x57],cl
10003327:	add    BYTE PTR [edx+0x3c],al
1000332a:	xchg   edx,eax
1000332b:	add    BYTE PTR [esi+0x48],cl
1000332e:	lods   al,BYTE PTR ds:[esi]
1000332f:	add    BYTE PTR [ecx+0x3c],al
10003332:	mov    es,WORD PTR [eax]
10003334:	aas    
10003335:	cmp    ecx,DWORD PTR [ebx-0x4fb3ae00]
1000333b:	add    BYTE PTR [edx+0x63],ch
1000333e:	int3   
1000333f:	add    BYTE PTR [edx+0x6c],dh
10003342:	rol    BYTE PTR [eax],cl
10003344:	jbe    0x100033b7
10003346:	aam    0x0
10003348:	jns    0x100033be
1000334a:	xlat   BYTE PTR ds:[ebx]
1000334b:	add    BYTE PTR [ebx+0x2f00cc90],dl
10003351:	es xchg ecx,eax
10003353:	add    BYTE PTR [ebp+0x3c],al
10003356:	sahf   
10003357:	add    BYTE PTR [ebp+0x3c],al
1000335a:	popf   
1000335b:	add    BYTE PTR [esp+edi*1-0x65],al
1000335f:	add    BYTE PTR [eax+0x3f],cl
10003362:	mov    eax,ds:0x983c4300
10003367:	add    BYTE PTR [edx+0x42],cl
1000336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000336b:	add    BYTE PTR [ebx+0x3c],al
1000336e:	xchg   esi,eax
1000336f:	add    BYTE PTR [edx+0x3b],al
10003372:	xchg   edx,eax
10003373:	add    BYTE PTR [edi+0x55],bl
10003376:	les    eax,FWORD PTR [eax]
10003378:	arpl   WORD PTR [edx-0x3a],bx
1000337b:	add    BYTE PTR [esi+0x5e],ah
1000337e:	leave  
1000337f:	add    BYTE PTR [edx+0x52],bl
10003382:	stos   BYTE PTR es:[edi],al
10003383:	add    BYTE PTR [ecx-0x13ff2b63],ah
10003389:	jmp    0x10003383
1000338b:	add    BYTE PTR [ecx+ebx*1],ah
1000338e:	mov    es,WORD PTR [eax]
10003390:	push   ebx
10003391:	dec    ecx
10003392:	mov    eax,ds:0x7d202d00
10003397:	add    BYTE PTR [ecx+0x35],al
1000339a:	nop
1000339b:	add    BYTE PTR [esi+ecx*4+0x1f2c00c1],dl
100033a2:	jbe    0x100033a4
100033a4:	sub    DWORD PTR [edx],ebx
100033a6:	ins    BYTE PTR es:[edi],dx
100033a7:	add    BYTE PTR [edx],ch
100033a9:	sbb    al,0x6d
100033ab:	add    BYTE PTR [esi],ah
100033ad:	push   ss
100033ae:	arpl   WORD PTR [eax],ax
100033b0:	sub    DWORD PTR [edx],ebx
100033b2:	push   0x0
100033b4:	sub    BYTE PTR [ecx],bl
100033b6:	data16 add cl,ch
100033b9:	out    0xf1,eax
100033bb:	add    BYTE PTR ds:0x21005e15,ah
100033c1:	adc    DWORD PTR [ebp+0x0],edx
100033c4:	and    al,0x12
100033c6:	pop    eax
100033c7:	add    BYTE PTR [ecx],ah
100033c9:	cmovge eax,DWORD PTR [eax]
100033cc:	and    BYTE PTR [edi],cl
100033ce:	dec    edx
100033cf:	add    BYTE PTR [edi],dl
100033d1:	or     DWORD PTR [eax+eax*1],esi
100033d4:	sbb    eax,0x2100410c
100033d9:	cmova  eax,DWORD PTR [eax]
100033dc:	sbb    al,0x9
100033de:	add    BYTE PTR ds:[edx],bl
100033e1:	or     DWORD PTR [eax],edi
100033e3:	add    BYTE PTR [esi],dl
100033e5:	push   es
100033e6:	xor    BYTE PTR [eax],al
100033e8:	adc    eax,0x14002c06
100033ed:	push   es
100033ee:	es add dh,bh
100033f1:	(bad)  
100033f2:	inc    DWORD PTR [eax]
100033f4:	sti    
100033f5:	std    
100033f6:	inc    DWORD PTR [eax]
100033f8:	std    
100033f9:	(bad)  
100033fa:	inc    DWORD PTR [eax]
100033fc:	idiv   dl
100033fe:	inc    DWORD PTR [eax]
10003400:	mov    dh,0xd1
10003402:	clc    
10003403:	add    BYTE PTR [ecx-0x42ff072d],bh
10003409:	(bad)  
1000340a:	stc    
1000340b:	add    al,al
1000340d:	fdivr  st,st(1)
1000340f:	add    BYTE PTR [edx-0x53ff0735],dh
10003415:	ret    0xf6
10003418:	retf   
10003419:	xlat   BYTE PTR ds:[ebx]
1000341a:	stc    
1000341b:	add    ch,dl
1000341d:	(bad)  
1000341f:	add    dl,bl
10003421:	jecxz  0x1000341e
10003423:	add    bh,ch
10003425:	repz inc BYTE PTR [eax]
10003428:	repz idiv dh
1000342b:	add    BYTE PTR [ecx+esi*4-0x3645ff0b],bl
10003432:	clc    
10003433:	add    BYTE PTR [ebp-0x41ff0634],bh
10003439:	int3   
1000343a:	stc    
1000343b:	add    cl,al
1000343d:	iret   
1000343e:	cli    
1000343f:	add    al,al
10003441:	into   
10003442:	stc    
10003443:	add    bl,al
10003445:	sar    dl,1
10003447:	add    ah,al
10003449:	sar    edx,1
1000344b:	add    dh,al
1000344d:	sar    edx,cl
1000344f:	add    bh,al
10003451:	aam    0xfa
10003453:	add    cl,cl
10003455:	aad    0xfa
10003457:	add    ch,cl
10003459:	fdivr  st,st(1)
1000345b:	add    bh,cl
1000345d:	(bad)  
1000345f:	add    cl,dl
10003461:	(bad)  
10003463:	add    bl,dl
10003465:	(bad)  
10003467:	add    bh,dl
10003469:	loopne 0x10003466
1000346b:	add    dh,bl
1000346d:	in     eax,0xfb
1000346f:	add    bl,ah
10003471:	jmp    0xfbe53572
10003476:	std    
10003477:	add    cl,ch
10003479:	out    dx,al
1000347a:	inc    BYTE PTR [eax]
1000347c:	idiv   al
1000347e:	inc    BYTE PTR [eax]
10003480:	xchg   ebp,eax
10003481:	stos   DWORD PTR es:[edi],eax
10003482:	cmc    
10003483:	add    bl,dl
10003485:	fcomi  st,st(6)
10003487:	add    cl,ah
10003489:	out    0xfc,eax
1000348b:	add    bh,ah
1000348d:	in     al,dx
1000348e:	inc    BYTE PTR [eax]
10003490:	test   DWORD PTR [ebx+esi*8-0xc5c7200],ebx
10003497:	add    bl,ch
10003499:	out    dx,eax
1000349a:	inc    BYTE PTR [eax]
1000349c:	cli    
1000349d:	sti    
1000349e:	inc    DWORD PTR [eax]
100034a0:	jne    0x1000342d
100034a2:	icebp  
100034a3:	add    BYTE PTR [esi-0x6d],bh
100034a6:	icebp  
100034a7:	add    bh,al
100034a9:	into   
100034aa:	out    dx,eax
100034ab:	add    dh,ch
100034ad:	icebp  
100034ae:	inc    BYTE PTR [eax]
100034b0:	repz cmc 
100034b2:	inc    BYTE PTR [eax]
100034b4:	out    dx,eax
100034b5:	icebp  
100034b6:	cli    
100034b7:	add    cl,bh
100034b9:	cli    
100034ba:	inc    DWORD PTR [eax]
100034bc:	push   0x6f00ee7b
100034c1:	xor    ecx,0x0
100034c4:	test   eax,0xf100f5b5
100034c9:	repz inc BYTE PTR [eax]
100034cc:	popa   
100034cd:	je     0x100034ba
100034cf:	add    cl,ch
100034d1:	jmp    0x100034cb
100034d3:	add    BYTE PTR ds:0x3500ce44,dh
100034d9:	inc    ecx
100034da:	mov    bl,0x0
100034dc:	inc    ebx
100034dd:	push   edx
100034de:	fild   WORD PTR [eax]
100034e0:	pop    eax
100034e1:	out    0x0,ax
100034e4:	lahf   
100034e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100034e6:	fiadd  WORD PTR [eax]
100034e8:	mov    cl,0xb6
100034ea:	in     al,0x0
100034ec:	mov    esi,0xbe00f1c3
100034f1:	ret    
100034f2:	out    dx,al
100034f3:	add    al,al
100034f5:	(bad)  
100034f6:	jmp    0xd100:0xedcdc900
100034fd:	aam    0xef
100034ff:	add    cl,bl
10003501:	fdivr  st(3),st
10003503:	add    al,ah
10003505:	loop   0x100034fa
10003507:	add    BYTE PTR [edi],ah
10003509:	xor    al,0xc9
1000350b:	add    BYTE PTR [esi],ah
1000350d:	xor    al,0xc1
1000350f:	add    BYTE PTR [esi],ah
10003511:	xor    dh,BYTE PTR [esi-0x56cedb00]
10003517:	add    BYTE PTR [edi+ebp*1],ah
1000351a:	mov    eax,ds:0x9a2f2500
1000351f:	add    BYTE PTR [ebp*1+0x342a0092],ah
10003526:	pushf  
10003527:	add    BYTE PTR [ecx+ecx*2],bh
1000352a:	fld    QWORD PTR [eax]
1000352c:	cmp    al,BYTE PTR [edi-0x30]
1000352f:	add    BYTE PTR [edi],ch
10003531:	cmp    BYTE PTR [edi-0x4bc1cc00],ah
10003537:	add    BYTE PTR [esi],bh
10003539:	dec    ebx
1000353a:	rol    BYTE PTR [eax],1
1000353c:	ds dec ecx
1000353e:	int3   
1000353f:	add    BYTE PTR [edx],bh
10003541:	inc    esp
10003542:	rol    BYTE PTR [eax],0x48
10003545:	push   ebp
10003546:	fild   WORD PTR [eax]
10003548:	inc    ebp
10003549:	push   eax
1000354a:	rol    DWORD PTR [eax],1
1000354c:	dec    edi
1000354d:	pop    esp
1000354e:	in     al,0x0
10003550:	inc    ebx
10003551:	dec    esp
10003552:	mov    esi,0xd3594d00
10003557:	add    BYTE PTR [ebp+edx*2-0x42],cl
1000355b:	add    BYTE PTR [edx+0x64],bl
1000355e:	aam    0x0
10003560:	push   0x6c00e571
10003565:	jne    0x1000354b
10003567:	add    BYTE PTR [edi+0x71],ah
1000356a:	xlat   BYTE PTR ds:[ebx]
1000356b:	add    BYTE PTR [edi+0x6f],ah
1000356e:	retf   
1000356f:	add    BYTE PTR [ebp-0x7b],bh
10003572:	jmp    0xea82af77
10003577:	add    BYTE PTR [eax-0x73ff2579],al
1000357d:	xchg   edx,eax
1000357e:	fadd   QWORD PTR [eax]
10003580:	xchg   esp,eax
10003581:	cdq    
10003582:	fiadd  DWORD PTR [eax]
10003584:	mov    ds:0xb100e1a7,al
10003589:	mov    dh,0xf0
1000358b:	add    BYTE PTR [edx-0x46ff0b41],bh
10003591:	mov    ebp,0xc6c200ef
10003596:	hlt    
10003597:	add    BYTE PTR [eax-0x20ff1944],bh
1000359d:	loope  0x10003598
1000359f:	add    bh,bl
100035a1:	loope  0x10003598
100035a3:	add    BYTE PTR [ecx],ch
100035a5:	xor    cl,ch
100035a7:	add    BYTE PTR [esi],ch
100035a9:	rol    BYTE PTR ss:[eax],cl
100035ac:	das    
100035ad:	cmp    cl,ch
100035af:	add    BYTE PTR [ebx],dh
100035b1:	cmp    eax,0x413700d7
100035b6:	fld    DWORD PTR [eax]
100035b8:	cmp    BYTE PTR [ebx-0x25],al
100035bb:	add    BYTE PTR [edx+ebp*1],ah
100035be:	mov    BYTE PTR [eax],al
100035c0:	xor    bh,BYTE PTR [edx]
100035c2:	lods   al,BYTE PTR ds:[esi]
100035c3:	add    BYTE PTR [ebx+0x4d],al
100035c6:	(bad)  
100035c7:	add    BYTE PTR [edx+0x5b],dl
100035ca:	fadd   DWORD PTR [eax]
100035cc:	dec    edx
100035cd:	push   edx
100035ce:	rol    BYTE PTR [eax],0x64
100035d1:	ins    BYTE PTR es:[edi],dx
100035d2:	jecxz  0x100035d4
100035d4:	bound  ebp,QWORD PTR [eax-0x2a]
100035d7:	add    BYTE PTR [edi+0x75],ch
100035da:	aad    0x0
100035dc:	je     0x10003657
100035de:	fiadd  DWORD PTR [eax]
100035e0:	jae    0x1000365a
100035e2:	xlat   BYTE PTR ds:[ebx]
100035e3:	add    BYTE PTR [esi+0x7d],dh
100035e6:	fiadd  DWORD PTR [eax]
100035e8:	jns    0x10003669
100035ea:	fld    QWORD PTR [eax]
100035ec:	jnp    0x1000356f
100035ee:	fild   WORD PTR [eax]
100035f0:	mov    BYTE PTR [esi-0x747aff14],cl
100035f6:	fild   DWORD PTR [eax]
100035f8:	popf   
100035f9:	mov    ds:0xaca700ef,al
100035fe:	repnz add BYTE PTR [ecx-0x50ff2963],bl
10003605:	mov    bl,0xe8
10003607:	add    ch,cl
10003609:	sar    al,1
1000360b:	add    dl,ah
1000360d:	jecxz  0x10003605
1000360f:	add    BYTE PTR ds:0x1a00bd1b,dl
10003615:	and    BYTE PTR [ebp-0x3ddce300],bh
1000361b:	add    BYTE PTR ds:0x2a00c92b,ah
10003621:	cs nop
10003623:	add    BYTE PTR [ebp-0x67ff1367],dl
10003629:	fwait
1000362a:	out    dx,al
1000362b:	add    BYTE PTR [ebp-0x6dff2271],cl
10003631:	xchg   ebp,eax
10003632:	aad    0x0
10003634:	xchg   esi,eax
10003635:	cdq    
10003636:	(bad)  
10003637:	add    bl,al
10003639:	(bad)  
1000363a:	in     eax,0x0
1000363c:	fcmovnu st,st(4)
1000363e:	clc    
1000363f:	add    ah,bl
10003641:	(bad)  
10003643:	add    BYTE PTR [edi],cl
10003645:	imul   eax,DWORD PTR [eax]
10003648:	adc    DWORD PTR [ebx],edx
1000364a:	mov    ch,0x0
1000364c:	and    al,0x27
1000364e:	mov    eax,0xc03e3e00
10003653:	add    BYTE PTR [esi+edi*1],bh
10003656:	mov    ecx,0x9c333300
1000365b:	add    BYTE PTR [esp+ebp*2-0x30],ch
1000365f:	add    BYTE PTR [edx+0x6a],ch
10003662:	int    0x0
10003664:	jle    0x100036e4
10003666:	fiadd  DWORD PTR [eax]
10003668:	jp     0x100036e4
1000366a:	aam    0x0
1000366c:	push   0x6a
1000366e:	scas   al,BYTE PTR es:[edi]
1000366f:	add    BYTE PTR [esp+ecx*4-0x6c6eff1c],cl
10003676:	jmp    0xfc97cb7b
1000367b:	add    BYTE PTR [eax-0x78ff3a80],al
10003681:	xchg   DWORD PTR [eax+eax*1+0xe5acac],edi
10003688:	fcmovnu st,st(3)
1000368a:	test   BYTE PTR [eax],0xdc
1000368d:	fdivr  st(6),st
1000368f:	add    dh,ch
10003691:	out    dx,al
10003692:	sti    
10003693:	add    bl,dh
10003695:	repz sti 
10003697:	add    dh,dh
10003699:	idiv   bl
1000369b:	add    bl,ch
1000369d:	jmp    0x1000368d
	...
100036df:	add    BYTE PTR [eax],al
100036e1:	add    BYTE PTR ds:0x45444141,ch
100036e7:	inc    ebp
100036e8:	inc    ebx
100036e9:	inc    ebx
100036ea:	inc    edi
100036eb:	inc    edi
100036ec:	dec    ecx
100036ed:	dec    eax
100036ee:	dec    eax
100036ef:	dec    edx
100036f0:	dec    edx
100036f1:	dec    ebx
100036f2:	dec    esi
100036f3:	dec    ebp
100036f4:	dec    ebp
100036f5:	dec    edi
100036f6:	push   eax
100036f7:	dec    esp
100036f8:	dec    esp
100036f9:	push   ecx
100036fa:	push   edx
100036fb:	push   edx
100036fc:	push   ebx
100036fd:	push   ebx
100036fe:	add    BYTE PTR [eax],al
10003700:	add    BYTE PTR [eax],al
10003702:	xor    dh,al
10003704:	mov    dh,0xc6
10003707:	(bad)
1000370a:	ret    0xc1c2
1000370d:	(bad)  
1000370f:	(bad)  
10003711:	(bad)  
10003713:	jmp    0x1003:0x30202e9
1000371a:	adc    DWORD PTR [ecx],edx
1000371c:	adc    dl,BYTE PTR [ebx+0x0]
1000371f:	add    BYTE PTR [eax],al
10003721:	add    BYTE PTR [eax],dh
10003723:	mov    ds:0x2e2d2d35,al
10003728:	cs das 
1000372a:	das    
1000372b:	xor    DWORD PTR [ebx],esi
1000372d:	xor    esp,DWORD PTR [edx]
1000372f:	and    ah,BYTE PTR [esp]
10003732:	and    eax,0x15151525
10003737:	pop    ss
10003738:	sbb    BYTE PTR [eax],bl
1000373a:	pop    es
1000373b:	pop    es
1000373c:	adc    DWORD PTR [edx+0x0],edx
1000373f:	add    BYTE PTR [eax],al
10003741:	add    BYTE PTR [edx],dh
10003743:	(bad)  
10003744:	xor    eax,0x72606073
10003749:	pop    edi
1000374a:	jno    0x100037bc
1000374c:	outs   dx,DWORD PTR ds:[esi]
1000374d:	outs   dx,BYTE PTR ds:[esi]
1000374e:	pop    esi
1000374f:	ins    DWORD PTR es:[edi],dx
10003750:	ins    BYTE PTR es:[edi],dx
10003751:	imul   ebp,DWORD PTR [edx+0x69],0x67
10003755:	push   0x64646566
1000375a:	fs pop es
1000375c:	adc    DWORD PTR [edx+0x0],edx
1000375f:	add    BYTE PTR [eax],al
10003761:	add    BYTE PTR [edx],dh
10003763:	test   eax,0x60737336
10003768:	pusha  
10003769:	jb     0x100037ca
1000376b:	jno    0x100037dd
1000376d:	outs   dx,DWORD PTR ds:[esi]
1000376e:	outs   dx,BYTE PTR ds:[esi]
1000376f:	pop    esi
10003770:	ins    DWORD PTR es:[edi],dx
10003771:	ins    BYTE PTR es:[edi],dx
10003772:	imul   ebp,DWORD PTR [edx+0x69],0x67
10003776:	push   0x64646566
1000377b:	pop    es
1000377c:	adc    BYTE PTR [ecx+0x0],dl
1000377f:	add    BYTE PTR [eax],al
10003781:	add    BYTE PTR [ecx],ah
10003783:	stos   DWORD PTR es:[edi],eax
10003784:	ss jp  0x100037fa
10003787:	rcr    DWORD PTR [edx-0x64656566],0x9b
1000378e:	pushf  
1000378f:	pushf  
10003790:	pushf  
10003791:	popf   
10003792:	popf   
10003793:	sahf   
10003794:	lahf   
10003795:	lahf   
10003796:	mov    al,ds:0x6465c7a0
1000379b:	sbb    BYTE PTR [ebx],al
1000379d:	dec    esp
1000379e:	add    BYTE PTR [eax],al
100037a0:	add    BYTE PTR [eax],al
100037a2:	and    edx,DWORD PTR [eax-0x3c858bc9]
100037a8:	mov    ebp,0xa9b1bada
100037ad:	leave  
100037ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100037af:	test   al,0xa5
100037b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100037b2:	mov    eax,ds:0xa5c85120
100037b7:	loopne 0x10003780
100037b9:	data16 sbb BYTE PTR gs:[ebx],al
100037bd:	dec    esp
100037be:	add    BYTE PTR [eax],al
100037c0:	add    BYTE PTR [eax],al
100037c2:	es nop
100037c4:	daa    
100037c5:	jne    0x1000383b
100037c7:	(bad)  
100037c8:	fdivr  DWORD PTR [ebp+edi*4-0x36564f2a]
100037cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100037d0:	test   al,0xa5
100037d2:	(bad)  
100037d3:	push   ecx
100037d4:	out    dx,al
100037d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100037d6:	out    dx,al
100037d7:	dec    eax
100037d8:	mov    al,ds:0x2176668
100037dd:	push   eax
100037de:	add    BYTE PTR [eax],al
100037e0:	add    BYTE PTR [eax],al
100037e2:	mov    esp,DWORD PTR es:[edi]
100037e5:	jnp    0x1000385c
100037e7:	mov    ds:0xbbbdd896,eax
100037ec:	loop   0x1000379e
100037ee:	test   eax,0x48eea7c9
100037f3:	repz loope 0x100037e3
100037f6:	and    BYTE PTR ds:0x156867a0,bl
100037fc:	add    cl,BYTE PTR [edi+0x0]
100037ff:	add    BYTE PTR [eax],al
10003801:	add    BYTE PTR [esi],dl
10003803:	xchg   edi,ebp
10003805:	jbe    0x10003882
10003807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003808:	add    DWORD PTR [ecx-0x29424228],ebx
1000380e:	mov    ah,0xe1
10003810:	in     eax,dx
10003811:	and    bh,dh
10003813:	mov    ebp,edx
10003815:	add    eax,0x699fb9f8
1000381a:	addr16 adc eax,0x4de9
10003820:	add    BYTE PTR [eax],al
10003822:	push   ss
10003823:	mov    BYTE PTR [eax],ch
10003825:	jle    0x1000389d
10003827:	stos   BYTE PTR es:[edi],al
10003828:	add    DWORD PTR [ecx],eax
1000382a:	cdq    
1000382b:	fdivr  DWORD PTR [ebx+0x5d589bb]
10003831:	or     bh,BYTE PTR [edx-0x6de0f929]
10003837:	stc    
10003838:	lahf   
10003839:	push   0x69
1000383b:	and    eax,0x4dea
10003840:	add    BYTE PTR [eax],al
10003842:	sbb    DWORD PTR [eax-0x52817cd7],eax
10003848:	add    DWORD PTR [ecx],eax
1000384a:	add    DWORD PTR [ecx+0x6d7bad8],ebx
10003850:	sub    edi,DWORD PTR [esi-0x6ae01b1b]
10003856:	mov    esi,0x6a6b9e92
1000385b:	and    eax,0x4edc
10003860:	add    BYTE PTR [eax],al
10003862:	or     BYTE PTR [ecx-0x357c9ed6],al
10003868:	add    DWORD PTR [ecx],eax
1000386a:	add    DWORD PTR [ecx],eax
1000386c:	cdq    
1000386d:	in     eax,0xe4
1000386f:	inc    BYTE PTR [ebp-0x68191774]
10003875:	xchg   esi,eax
10003876:	xchg   ebp,eax
10003877:	mov    esi,0x246b6c9d
1000387c:	fmul   QWORD PTR [ebx+0x0]
1000387f:	add    BYTE PTR [eax],al
10003881:	add    BYTE PTR [eax],cl
10003883:	jl     0x100038a0
10003885:	mov    ah,BYTE PTR [ecx-0x51]
10003888:	add    DWORD PTR [ecx],eax
1000388a:	add    DWORD PTR [ecx],eax
1000388c:	add    DWORD PTR [ecx],eax
1000388e:	add    DWORD PTR [edi-0x2],edi
10003891:	test   DWORD PTR [ebx+ebx*8-0x6a696868],ecx
10003898:	mov    gs,WORD PTR [ebp+0x6c]
1000389b:	and    al,0xdd
1000389d:	dec    edx
1000389e:	add    BYTE PTR [eax],al
100038a0:	add    BYTE PTR [eax],al
100038a2:	or     bh,BYTE PTR [ebp+0x1c]
100038a5:	test   BYTE PTR [edx+0x10101cd],cl
100038ab:	add    DWORD PTR [ecx],eax
100038ad:	add    DWORD PTR [ecx],eax
100038af:	add    DWORD PTR [eax+0x4],eax
100038b2:	sub    al,0xf
100038b4:	fistp  DWORD PTR [eax+0x5eae9697]
100038ba:	ins    DWORD PTR es:[edi],dx
100038bb:	and    al,0xde
100038bd:	dec    edx
100038be:	add    BYTE PTR [eax],al
100038c0:	add    BYTE PTR [eax],al
100038c2:	or     bh,BYTE PTR [eax+0xb]
100038c5:	bound  eax,QWORD PTR [edx+esi*4+0x38393a01]
100038cc:	cmp    al,0x3f
100038ce:	inc    esi
100038cf:	add    DWORD PTR [edi+edi*8],edx
100038d2:	lods   al,BYTE PTR ds:[esi]
100038d3:	adc    cl,BYTE PTR [edi]
100038d5:	fistp  DWORD PTR [eax+0x5e6eb397]
100038db:	xor    al,0xdf
100038dd:	dec    eax
100038de:	add    BYTE PTR [eax],al
100038e0:	add    BYTE PTR [eax],al
100038e2:	or     DWORD PTR [ebx+0xc],esp
100038e5:	ja     0x10003949
100038e7:	into   
100038e8:	add    DWORD PTR [esi],ebx
100038ea:	in     al,dx
100038eb:	jmp    0x10003900
100038ed:	cmp    edi,DWORD PTR [edi]
100038ef:	add    DWORD PTR [esi],ecx
100038f1:	fxch   st(4)
100038f3:	retf   
100038f4:	adc    cl,BYTE PTR [edi]
100038f6:	fistp  DWORD PTR [eax+0x346e6fd5]
100038fc:	fisttp WORD PTR [ecx+0x0]
100038ff:	add    BYTE PTR [eax],al
10003901:	add    al,dh
10003903:	mov    DWORD PTR ds:0x1d17757,ecx
10003909:	sbb    dl,ah
1000390b:	nop
1000390c:	fst    QWORD PTR [ebx]
1000390e:	cmp    al,0x1
10003910:	mov    edi,0xcbccd90e
10003915:	adc    cl,BYTE PTR [edi]
10003917:	fstp   TBYTE PTR [ecx-0x3ecc9090]
1000391d:	dec    ecx
1000391e:	add    BYTE PTR [eax],al
10003920:	add    BYTE PTR [eax],al
10003922:	out    dx,eax
10003923:	pop    ebp
10003924:	hlt    
10003925:	xchg   BYTE PTR [edi-0x4b],dl
10003928:	add    ecx,esi
1000392a:	xlat   BYTE PTR ds:[ebx]
1000392b:	mov    DWORD PTR [ebx+0x10138eb],ebp
10003931:	cli    
10003932:	push   cs
10003933:	fnstenv [ecx-0x6bf0ed35]
10003939:	jno    0x100039ab
1000393b:	xor    edx,eax
1000393d:	inc    edi
1000393e:	add    BYTE PTR [eax],al
10003940:	add    BYTE PTR [eax],al
10003942:	into   
10003943:	pop    ebp
10003944:	hlt    
10003945:	jg     0x100038cd
10003947:	mov    dh,0x1
10003949:	stc    
1000394a:	icebp  
1000394b:	xlat   BYTE PTR ds:[ebx]
1000394c:	int3   
1000394d:	in     al,dx
1000394e:	cmp    DWORD PTR [ecx],eax
10003950:	add    DWORD PTR [ecx],eax
10003952:	sti    
10003953:	push   cs
10003954:	fnstenv [ecx+0x5f3912cb]
1000395a:	jno    0x1000398d
1000395c:	ret    0x47
1000395f:	add    BYTE PTR [eax],al
10003961:	add    dh,cl
10003963:	pop    esp
10003964:	cmc    
10003965:	push   ebp
10003966:	jg     0x1000393d
10003968:	add    esp,edi
1000396a:	stc    
1000396b:	icebp  
1000396c:	sbb    bl,BYTE PTR [esi]
1000396e:	cmp    al,BYTE PTR [ecx]
10003970:	add    DWORD PTR [ecx],eax
10003972:	add    ebx,edi
10003974:	push   cs
10003975:	fxch   st(2)
10003977:	cmp    eax,0x2f5fb812
1000397c:	les    eax,FWORD PTR [ebx+0x0]
1000397f:	add    BYTE PTR [eax],al
10003981:	add    al,dl
10003983:	pop    eax
10003984:	cmc    
10003985:	push   esi
10003986:	push   ebp
10003987:	aad    0x1
10003989:	add    DWORD PTR [ecx],eax
1000398b:	add    DWORD PTR [ecx],eax
1000398d:	add    DWORD PTR [ecx],eax
1000398f:	add    DWORD PTR [ecx],eax
10003991:	add    DWORD PTR [ecx],eax
10003993:	add    edx,edi
10003995:	push   cs
10003996:	sub    eax,0x82123e09
1000399b:	das    
1000399c:	les    eax,FWORD PTR [ebp+0x0]
1000399f:	add    BYTE PTR [eax],al
100039a1:	add    bh,cl
100039a3:	pop    ecx
100039a4:	not    BYTE PTR [esi+edx*2-0x49]
100039a8:	aad    0xb6
100039aa:	mov    ch,0xd1
100039ac:	into   
100039ad:	mov    dl,0xcd
100039af:	mov    eax,0xc0969291
100039b4:	std    
100039b5:	out    0xe3,eax
100039b7:	hlt    
100039b8:	int    0xee
100039ba:	jns    0x100039eb
100039bc:	lds    eax,FWORD PTR [ebp+0x0]
100039bf:	add    BYTE PTR [eax],al
100039c1:	add    cl,dl
100039c3:	pop    edx
100039c4:	loope  0x100039c7
100039c6:	push   esp
100039c7:	push   esi
100039c8:	push   ebp
100039c9:	jg     0x10003951
100039cb:	push   edi
100039cc:	ja     0x10003a30
100039ce:	test   BYTE PTR [edx+0x767e8361],cl
100039d4:	jnp    0x10003a4b
100039d6:	xchg   ebx,eax
100039d7:	jecxz  0x100039cb
100039d9:	mov    ebp,0x45c62e60
100039de:	add    BYTE PTR [eax],al
100039e0:	add    BYTE PTR [eax],al
100039e2:	rcr    BYTE PTR [edx-0x1e],cl
100039e5:	add    DWORD PTR [ecx],eax
100039e7:	push   esp
100039e8:	push   esi
100039e9:	push   ebp
100039ea:	jg     0x10003972
100039ec:	push   edi
100039ed:	ja     0x10003a51
100039ef:	test   BYTE PTR [edx+0x767e8361],cl
100039f5:	jnp    0x10003a6c
100039f7:	je     0x10003a73
100039f9:	jae    0x10003a6e
100039fb:	sub    eax,0x44c6
10003a00:	add    BYTE PTR [eax],al
10003a02:	rcr    DWORD PTR [ebx-0x1e],cl
10003a05:	loop   0x100039e8
10003a07:	div    ch
10003a09:	cmc    
10003a0a:	hlt    
10003a0b:	hlt    
10003a0c:	or     eax,0x2a1c0b0c
10003a11:	sub    DWORD PTR [eax],ebp
10003a13:	out    dx,eax
10003a14:	daa    
10003a15:	daa    
10003a16:	aaa    
10003a17:	ss ss xor eax,0x41c62d35
10003a1e:	add    BYTE PTR [eax],al
10003a20:	add    BYTE PTR [eax],al
10003a22:	rcr    DWORD PTR [edx+0x5b],cl
10003a25:	pop    edx
10003a26:	pop    edx
10003a27:	pop    ecx
10003a28:	pop    eax
10003a29:	pop    esp
10003a2a:	pop    ebp
10003a2b:	pop    ebp
10003a2c:	mov    DWORD PTR [ebx+0x78],esp
10003a2f:	jge    0x10003aad
10003a31:	add    DWORD PTR [eax-0x6f747878],0x8fa9ab90
10003a3b:	mov    ds:0x42c6,al
10003a40:	add    BYTE PTR [eax],al
10003a42:	rcl    ebx,cl
10003a44:	rcl    edx,cl
10003a46:	ror    edi,1
10003a48:	ror    dh,1
10003a4a:	into   
10003a4b:	out    dx,eax
10003a4c:	lock or DWORD PTR [edx],ecx
10003a4f:	or     cl,BYTE PTR [eax]
10003a51:	or     BYTE PTR [ecx],bl
10003a53:	push   ss
10003a54:	push   ss
10003a55:	es and esp,DWORD PTR es:[ecx]
10003a59:	xor    dh,BYTE PTR [edx]
10003a5b:	xor    BYTE PTR [eax],dh
10003a5d:	sub    eax,0x0
	...
10003a9e:	add    BYTE PTR [eax],al
10003aa0:	(bad)  
10003aa1:	(bad)  
10003aa2:	(bad)  
10003aa3:	(bad)  
10003aa4:	(bad)  
10003aa5:	(bad)  
10003aa6:	(bad)  
10003aa7:	inc    eax
10003aa9:	add    BYTE PTR [eax],al
10003aab:	add    eax,eax
10003aad:	add    BYTE PTR [eax],al
10003aaf:	add    eax,eax
10003ab1:	add    BYTE PTR [eax],al
10003ab3:	add    eax,eax
10003ab5:	add    BYTE PTR [eax],al
10003ab7:	add    eax,eax
10003ab9:	add    BYTE PTR [eax],al
10003abb:	add    eax,eax
10003abd:	add    BYTE PTR [eax],al
10003abf:	add    eax,eax
10003ac1:	add    BYTE PTR [eax],al
10003ac3:	add    eax,eax
10003ac5:	add    BYTE PTR [eax],al
10003ac7:	add    eax,eax
10003ac9:	add    BYTE PTR [eax],al
10003acb:	add    eax,eax
10003acd:	add    BYTE PTR [eax],al
10003acf:	add    eax,eax
10003ad1:	add    BYTE PTR [eax],al
10003ad3:	add    eax,eax
10003ad5:	add    BYTE PTR [eax],al
10003ad7:	add    eax,eax
10003ad9:	add    BYTE PTR [eax],al
10003adb:	add    eax,eax
10003add:	add    BYTE PTR [eax],al
10003adf:	add    eax,eax
10003ae1:	add    BYTE PTR [eax],al
10003ae3:	add    eax,eax
10003ae5:	add    BYTE PTR [eax],al
10003ae7:	add    eax,eax
10003ae9:	add    BYTE PTR [eax],al
10003aeb:	add    eax,eax
10003aed:	add    BYTE PTR [eax],al
10003aef:	add    eax,eax
10003af1:	add    BYTE PTR [eax],al
10003af3:	add    eax,eax
10003af5:	add    BYTE PTR [eax],al
10003af7:	add    eax,eax
10003af9:	add    BYTE PTR [eax],al
10003afb:	add    eax,eax
10003afd:	add    BYTE PTR [eax],al
10003aff:	add    eax,eax
10003b01:	add    BYTE PTR [eax],al
10003b03:	add    eax,eax
10003b05:	add    BYTE PTR [eax],al
10003b07:	add    eax,eax
10003b09:	add    BYTE PTR [eax],al
10003b0b:	add    eax,eax
10003b0d:	add    BYTE PTR [eax],al
10003b0f:	add    eax,eax
10003b11:	add    BYTE PTR [eax],al
10003b13:	add    eax,eax
10003b15:	add    BYTE PTR [eax],al
10003b17:	add    edi,edi
10003b19:	(bad)  
10003b1a:	(bad)  
10003b1b:	(bad)  
10003b1c:	(bad)  
10003b1d:	(bad)  
10003b1e:	(bad)  
10003b1f:	jmp    FWORD PTR [eax]
10003b21:	add    BYTE PTR [eax],al
10003b23:	add    BYTE PTR [eax],dl
10003b25:	add    BYTE PTR [eax],al
10003b27:	add    BYTE PTR [eax],ah
10003b29:	add    BYTE PTR [eax],al
10003b2b:	add    BYTE PTR [ecx],al
10003b2d:	add    BYTE PTR [eax],cl
	...
10003b47:	add    BYTE PTR [ecx+0x5f],ah
10003b4a:	mov    ebp,0xbe606200
10003b4f:	add    BYTE PTR [edi+0x65],ah
10003b52:	ret    0x6a00
10003b55:	imul   eax,esi,0xc86b6d00
10003b5b:	add    BYTE PTR [edx+0x71],dh
10003b5e:	int    0x0
10003b60:	js     0x10003bd9
10003b62:	rol    BYTE PTR [eax],cl
10003b64:	lods   eax,DWORD PTR ds:[esi]
10003b65:	lods   al,BYTE PTR ds:[esi]
10003b66:	loop   0x10003b68
10003b68:	scas   eax,DWORD PTR es:[edi]
10003b69:	scas   al,BYTE PTR es:[edi]
10003b6a:	loop   0x10003b6c
10003b6c:	and    BYTE PTR [esi],bl
10003b6e:	outs   dx,DWORD PTR ds:[esi]
10003b6f:	add    BYTE PTR [eax+esi*1],dh
10003b72:	test   eax,0xa9363a00
10003b77:	add    BYTE PTR [edx+0x4e],dl
10003b7a:	scas   al,BYTE PTR es:[edi]
10003b7b:	add    BYTE PTR [eax+edx*2-0x4f],dl
10003b7f:	add    BYTE PTR [edi+0x53],dl
10003b82:	mov    bl,0x0
10003b84:	pop    ecx
10003b85:	push   esi
10003b86:	mov    dh,0x0
10003b88:	pop    edx
10003b89:	push   edi
10003b8a:	mov    dh,0x0
10003b8c:	pop    ebp
10003b8d:	pop    edx
10003b8e:	mov    edx,0xba5b5e00
10003b93:	add    BYTE PTR [esi+0x63],ah
10003b96:	ret    0x7100
10003b99:	ins    DWORD PTR es:[edi],dx
10003b9a:	mov    BYTE PTR [eax],0xdc
10003b9d:	fcomi  st,st(2)
10003b9f:	add    BYTE PTR [edx],ch
10003ba1:	and    edx,DWORD PTR [eax+eax*1+0xa0444a]
10003ba8:	dec    ebx
10003ba9:	inc    ebp
10003baa:	mov    ds:0xa7484e00,al
10003baf:	add    BYTE PTR [ebp+0x48],cl
10003bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003bb3:	add    BYTE PTR [eax+0x4b],dl
10003bb6:	stos   DWORD PTR es:[edi],eax
10003bb7:	add    BYTE PTR [eax+0x4b],dl
10003bba:	stos   BYTE PTR es:[edi],al
10003bbb:	add    BYTE PTR [ebx+0x4e],dl
10003bbe:	scas   al,BYTE PTR es:[edi]
10003bbf:	add    BYTE PTR [esi+0x69],ch
10003bc2:	mov    dh,0x0
10003bc4:	es pop ds
10003bc6:	outs   dx,DWORD PTR ds:[esi]
10003bc7:	add    BYTE PTR [ebp+0x3d],al
10003bca:	xchg   edi,eax
10003bcb:	add    BYTE PTR [eax+0x41],cl
10003bce:	popf   
10003bcf:	add    BYTE PTR [edi+0x40],al
10003bd2:	fwait
10003bd3:	add    BYTE PTR [edi+0x3e00cd9b],bl
10003bd9:	xor    al,0x8c
10003bdb:	add    BYTE PTR [ebx+esi*1],bh
10003bde:	mov    BYTE PTR [eax],al
10003be0:	inc    ecx
10003be1:	cmp    BYTE PTR [edx-0x70c8c000],dl
10003be7:	add    BYTE PTR [ebx+edi*1-0x6b],al
10003beb:	add    BYTE PTR [edi],dh
10003bed:	sub    al,0x80
10003bef:	add    BYTE PTR [ecx],bh
10003bf1:	add    DWORD PTR cs:[eax],0x3b
10003bf5:	xor    BYTE PTR [esi+0x76243100],al
10003bfb:	add    BYTE PTR [ecx],dh
10003bfd:	and    eax,0x29350076
10003c02:	jge    0x10003c04
10003c04:	xor    al,0x28
10003c06:	jp     0x10003c08
10003c08:	sub    al,0x1e
10003c0a:	ins    BYTE PTR es:[edi],dx
10003c0b:	add    BYTE PTR [edi],ch
10003c0d:	and    DWORD PTR [ecx+0x0],esi
10003c10:	das    
10003c11:	and    DWORD PTR [eax+0x0],esi
10003c14:	sub    bl,BYTE PTR [ebx]
10003c16:	imul   eax,DWORD PTR [eax],0xfcf7f8
10003c1c:	sti    
10003c1d:	cld    
10003c1e:	inc    BYTE PTR [eax]
10003c20:	mov    ah,0xc9
10003c22:	test   BYTE PTR [eax],0xed
10003c25:	repnz std 
10003c27:	add    BYTE PTR [edx-0x4aff083a],dh
10003c2d:	leave  
10003c2e:	test   DWORD PTR [eax],0xf7cab7
10003c34:	cmc    
10003c35:	clc    
10003c36:	inc    DWORD PTR [eax]
10003c38:	stos   DWORD PTR es:[edi],eax
10003c39:	mov    edi,0xc2af00f6
10003c3e:	test   BYTE PTR [eax],0xcc
10003c41:	fdivr  st,st(2)
10003c43:	add    bl,cl
10003c45:	xlat   BYTE PTR ds:[ebx]
10003c46:	stc    
10003c47:	add    dh,dl
10003c49:	loopne 0x10003c47
10003c4b:	add    ch,dl
10003c4d:	(bad)  
10003c4f:	add    dl,bl
10003c51:	jecxz  0x10003c4f
10003c53:	add    cl,bl
10003c55:	loop   0x10003c52
10003c57:	add    bh,bl
10003c59:	out    0xfc,eax
10003c5b:	add    cl,ah
10003c5d:	call   0xfae33d5e
10003c62:	std    
10003c63:	add    bl,ah
10003c65:	jmp    0xfd:0xefea00fc
10003c6c:	repz idiv dh
10003c6f:	add    BYTE PTR [ebx-0x58ff0b49],ah
10003c75:	mov    edx,0xbba800f5
10003c7a:	cmc    
10003c7b:	add    BYTE PTR [ebx-0x4fff0942],ch
10003c81:	ret    0xf6
10003c84:	(bad)  
10003c85:	sar    edx,1
10003c87:	add    dh,al
10003c89:	sar    ecx,cl
10003c8b:	add    bh,al
10003c8d:	sar    ecx,cl
10003c8f:	add    cl,cl
10003c91:	aad    0xf9
10003c93:	add    dh,cl
10003c95:	fsqrt  
10003c97:	add    bh,cl
10003c99:	(bad)  
10003c9b:	add    dl,dl
10003c9d:	fdiv   st(3),st
10003c9f:	add    cl,dl
10003ca1:	(bad)  
10003ca3:	add    bl,dl
10003ca5:	(bad)  
10003ca7:	add    ah,bl
10003ca9:	in     al,0xfc
10003cab:	add    al,ah
10003cad:	out    0xfc,eax
10003caf:	add    bh,ah
10003cb1:	in     al,dx
10003cb2:	cld    
10003cb3:	add    ch,ch
10003cb5:	icebp  
10003cb6:	std    
10003cb7:	add    bh,dh
10003cb9:	stc    
10003cba:	inc    DWORD PTR [eax]
10003cbc:	idiv   al
10003cbe:	inc    BYTE PTR [eax]
10003cc0:	cli    
10003cc1:	sti    
10003cc2:	inc    BYTE PTR [eax]
10003cc4:	fwait
10003cc5:	scas   al,BYTE PTR es:[edi]
10003cc6:	hlt    
10003cc7:	add    BYTE PTR [edi-0x5fff0a4d],bl
10003ccd:	mov    dl,0xf4
10003ccf:	add    BYTE PTR [esi+esi*4-0x2b36ff0b],ah
10003cd6:	cli    
10003cd7:	add    ch,bl
10003cd9:	in     al,0xfc
10003cdb:	add    cl,dh
10003cdd:	hlt    
10003cde:	inc    BYTE PTR [eax]
10003ce0:	lock repz std 
10003ce3:	add    BYTE PTR [ebx-0x6bff0c59],dl
10003ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10003cea:	repz add BYTE PTR [eax-0x67ff0b56],bl
10003cf1:	stos   BYTE PTR es:[edi],al
10003cf2:	repz add dl,ch
10003cf5:	out    dx,al
10003cf6:	std    
10003cf7:	add    cl,bh
10003cf9:	cli    
10003cfa:	inc    BYTE PTR [eax]
10003cfc:	idiv   eax
10003cfe:	cld    
10003cff:	add    BYTE PTR [ebp-0x7aff1168],al
10003d05:	xchg   edi,eax
10003d06:	in     eax,dx
10003d07:	add    BYTE PTR [ecx-0x76ff0e65],cl
10003d0d:	pushf  
10003d0e:	icebp  
10003d0f:	add    BYTE PTR [edi+ebx*4-0x5e70ff0d],cl
10003d16:	repz add BYTE PTR [ecx-0xcff0c5d],dl
10003d1d:	cmc    
10003d1e:	inc    BYTE PTR [eax]
10003d20:	imul   edi,DWORD PTR [ecx-0x26],0xde807000
10003d27:	add    BYTE PTR [ebp-0x7a],dh
10003d2a:	jecxz  0x10003d2c
10003d2c:	jnp    0x10003cba
10003d2e:	out    0x0,al
10003d30:	adc    DWORD PTR [edx-0x6d7eff15],0x615300ea
10003d3a:	leave  
10003d3b:	add    BYTE PTR [ecx+0x69],bl
10003d3e:	into   
10003d3f:	add    BYTE PTR [ecx+0x69],bl
10003d42:	int    0x0
10003d44:	pop    edi
10003d45:	ins    DWORD PTR es:[edi],dx
10003d46:	rol    DWORD PTR [eax],1
10003d48:	fs jae 0x10003d20
10003d4b:	add    BYTE PTR [edx+0x79],ch
10003d4e:	fld    DWORD PTR [eax]
10003d50:	push   esi
10003d51:	arpl   dx,cx
10003d53:	add    BYTE PTR [edi+0x64],dl
10003d56:	retf   0x7b00
10003d59:	or     edx,0x0
10003d5c:	scas   al,BYTE PTR es:[edi]
10003d5d:	mov    ah,0xe9
10003d5f:	add    cl,dh
10003d61:	repnz sti 
10003d63:	add    dl,dh
10003d65:	repz sti 
10003d67:	add    BYTE PTR [edi],bl
10003d69:	sub    DWORD PTR [ebp-0x31c1cf00],edx
10003d6f:	add    BYTE PTR [edi],ch
10003d71:	cmp    eax,0x342900c8
10003d76:	lods   eax,DWORD PTR ds:[esi]
10003d77:	add    BYTE PTR [esi],ch
10003d79:	cmp    al,al
10003d7b:	add    BYTE PTR [edi+esi*1],ch
10003d7e:	mov    bh,0x0
10003d80:	and    ebp,DWORD PTR ds:0x2f250091
10003d86:	cwde   
10003d87:	add    BYTE PTR [eax],ch
10003d89:	xor    DWORD PTR [edx-0x30b9c600],esp
10003d8f:	add    BYTE PTR [ecx+0x4c],al
10003d92:	rol    BYTE PTR [eax],1
10003d94:	xor    al,0x3e
10003d96:	mov    ds:0xd14f4500,al
10003d9b:	add    BYTE PTR [eax+0x54],cl
10003d9e:	rol    DWORD PTR [eax],1
10003da0:	pop    ecx
10003da1:	inc    DWORD PTR [bx+si]
10003da4:	dec    edi
10003da5:	pop    ebx
10003da6:	rol    BYTE PTR [eax],cl
10003da8:	push   edi
10003da9:	(bad)  
10003daa:	aam    0x0
10003dac:	pop    esi
10003dad:	push   0x564d00d5
10003db2:	scas   eax,DWORD PTR es:[edi]
10003db3:	add    BYTE PTR [ebp+0x6e],ah
10003db6:	(bad)  
10003db7:	add    BYTE PTR [edx+0x73],ch
10003dba:	(bad)  
10003dbb:	add    BYTE PTR [esi+0x77],ch
10003dbe:	xlat   BYTE PTR ds:[ebx]
10003dbf:	add    BYTE PTR [ebp-0x7b],bh
10003dc2:	jmp    0xcd6ea3c7
10003dc7:	add    BYTE PTR [edi+0x7f],dh
10003dca:	fiadd  DWORD PTR [eax]
10003dcc:	or     DWORD PTR [edx-0x7179ff23],0xffffffdd
10003dd3:	add    BYTE PTR [ecx-0x75ff1e68],dl
10003dd9:	nop
10003dda:	rol    DWORD PTR [eax],1
10003ddc:	mov    al,ds:0xa200e5a6
10003de1:	test   al,0xe3
10003de3:	add    ah,ch
10003de5:	in     eax,dx
10003de6:	clc    
10003de7:	add    BYTE PTR ds:0x4d009c3a,dh
10003ded:	push   ebp
10003dee:	fadd   DWORD PTR [eax]
10003df0:	pop    esi
10003df1:	rol    BYTE PTR gs:[eax],1
10003df4:	pop    ecx
10003df5:	pop    ebp
10003df6:	lods   eax,DWORD PTR ds:[esi]
10003df7:	add    BYTE PTR [ebx-0x80],bh
10003dfa:	aam    0x0
10003dfc:	test   eax,0x9800f1ad
10003e01:	pushf  
10003e02:	(bad)  
10003e03:	add    ch,ah
10003e05:	out    0xf6,al
10003e07:	add    BYTE PTR [ebx+0x66],ah
10003e0a:	mov    edx,0xe17c7900
10003e0f:	add    BYTE PTR [ebp+0x78],dh
10003e12:	ret    0x7d00
10003e15:	jg     0x10003dc9
10003e17:	add    BYTE PTR [eax+0x43],al
10003e1a:	out    dx,eax
10003e1b:	add    BYTE PTR [edi+0x6f],ch
10003e1e:	retf   0x7400
10003e21:	je     0x10003df2
10003e23:	add    BYTE PTR [ecx+0x79],bh
10003e26:	rol    DWORD PTR [eax],cl
10003e28:	add    DWORD PTR [ebp+0x7c7c00e2],0xffffffd6
10003e2f:	add    BYTE PTR [esi+0x7f],bh
10003e32:	fadd   DWORD PTR [eax]
10003e34:	add    BYTE PTR [edx-0x7c7cff25],0xdc
10003e3b:	add    BYTE PTR [esi-0x78ff2079],al
10003e41:	mov    bh,bl
10003e43:	add    BYTE PTR [edx-0x75ff1c75],cl
10003e49:	mov    ebx,fs
10003e4b:	add    BYTE PTR [ebp-0x6fff1971],cl
10003e51:	xchg   edx,eax
10003e52:	call   0xf690cc57
10003e57:	add    dl,al
10003e59:	ret    
10003e5a:	lock add dl,dh
10003e5d:	repnz cli 
10003e5f:	add    bh,dh
10003e61:	idiv   ebp
10003e63:	add    bh,dh
10003e65:	idiv   esp
10003e67:	add    ah,bh
10003e69:	cld    
10003e6a:	inc    DWORD PTR [eax]
10003e6c:	std    
10003e6d:	std    
10003e6e:	inc    DWORD PTR [eax]
10003e70:	(bad)  
10003e71:	(bad)  
10003e72:	inc    DWORD PTR [eax]
10003e74:	cld    
10003e75:	cld    
10003e76:	std    
10003e77:	add    bh,bh
10003e79:	(bad)  
10003e7a:	inc    DWORD PTR [eax]
	...
10003f48:	push   cs
10003f49:	or     eax,0x18191b1d
10003f4e:	and    DWORD PTR [eax],esp
10003f50:	es and al,0x2b
10003f53:	sub    DWORD PTR [edi],ebp
10003f55:	sub    al,0x32
10003f57:	xor    ecx,DWORD PTR [edi]
10003f59:	jae    0x10003fcd
10003f5b:	jo     0x10003fcc
10003f5d:	jnp    0x10003fd8
10003f5f:	js     0x10003fd8
10003f61:	add    DWORD PTR [eax+0x7c827e7f],0x47741130
10003f6b:	inc    ebp
10003f6c:	fs inc edx
10003f6e:	inc    eax
10003f6f:	push   edi
10003f70:	push   esi
10003f71:	push   ebx
10003f72:	aas    
10003f73:	arpl   WORD PTR [eax+0x4f],dx
10003f76:	xor    DWORD PTR [ecx],0x0
10003f79:	push   0x8a89895a
10003f7e:	mov    WORD PTR [ebp-0x71706f75],cs
10003f84:	mov    BYTE PTR [ecx+0x7d],dl
10003f87:	sub    eax,0x91486913
10003f8c:	scas   al,BYTE PTR es:[edi]
10003f8d:	lods   eax,DWORD PTR ds:[esi]
10003f8e:	lods   al,BYTE PTR ds:[esi]
10003f8f:	xchg   esp,eax
10003f90:	test   al,0x9
10003f92:	mov    bl,0xaa
10003f94:	xchg   ebx,eax
10003f95:	push   edx
10003f96:	jg     0x10003fc6
10003f98:	add    ebx,DWORD PTR [edi+0x37]
10003f9b:	xchg   edx,eax
10003f9c:	int3   
10003f9d:	scas   al,BYTE PTR es:[edi]
10003f9e:	lods   eax,DWORD PTR ds:[esi]
10003f9f:	sahf   
10003fa0:	or     DWORD PTR [ebx+0x3e9ab0a2],esi
10003fa6:	sub    BYTE PTR [edx],0xb5
10003fa9:	pusha  
10003faa:	gs xchg ebp,eax
10003fac:	int3   
10003fad:	int3   
10003fae:	scas   al,BYTE PTR es:[edi]
10003faf:	stos   DWORD PTR es:[edi],eax
10003fb0:	xor    al,0x86
10003fb2:	mov    dl,0xaf
10003fb4:	lahf   
10003fb5:	push   esp
10003fb6:	jbe    0x10003fdd
10003fb8:	mov    dh,0x4a
10003fba:	dec    ecx
10003fbb:	xchg   edi,eax
10003fbc:	int3   
10003fbd:	int3   
10003fbe:	int3   
10003fbf:	int3   
10003fc0:	xor    eax,0x84a7c56d
10003fc5:	push   ebp
10003fc6:	ja     0x10003fef
10003fc8:	mov    bh,0x4b
10003fca:	pop    ebp
10003fcb:	cwde   
10003fcc:	int3   
10003fcd:	or     BYTE PTR [ebx],cl
10003fcf:	and    ecx,esp
10003fd1:	retf   
10003fd2:	mov    BYTE PTR [edi+0x287841a4],0xba
10003fd9:	cmp    al,0x6c
10003fdb:	cdq    
10003fdc:	int3   
10003fdd:	mov    eax,0x1fcc0aa9
10003fe2:	push   ds
10003fe3:	(bad)  
10003fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003fe5:	inc    ebx
10003fe6:	jns    0x1000400a
10003fe8:	mov    esp,0xcc9b353d
10003fed:	les    esi,FWORD PTR [ecx+0x151ecc07]
10003ff3:	push   ss
10003ff4:	inc    esp
10003ff5:	pop    eax
10003ff6:	jp     0x1000400f
10003ff8:	mov    esi,0xcc9cc938
10003ffd:	int3   
10003ffe:	int3   
10003fff:	int3   
10004000:	int3   
10004001:	int3   
10004002:	adc    al,0x96
10004004:	push   ss
10004005:	pop    ecx
10004006:	outs   dx,BYTE PTR ds:[esi]
10004007:	sbb    al,al
10004009:	cmp    esp,ecx
1000400b:	popf   
1000400c:	popf   
1000400d:	mov    al,ds:0x85a5a3a1
10004012:	pop    ebx
10004013:	push   ss
10004014:	mov    ah,0x46
10004016:	jno    0x10004034
10004018:	ret    
10004019:	cmp    cl,ah
1000401b:	int3   
1000401c:	retf   0x5ec8
1000401f:	pop    esp
10004020:	cmp    esi,DWORD PTR [ebp+0x66]
10004023:	pop    ebx
10004024:	imul   ebx,DWORD PTR [edx+0x72],0xc
10004028:	ret    0x363a
1000402b:	cmp    BYTE PTR [esi+0x4d],cl
1000402e:	dec    esp
1000402f:	bound  esp,QWORD PTR [ecx+0x5f]
10004032:	push   0x67
10004034:	je     0x100040a9
10004036:	jb     0x10004045
10004038:	ret    0xc1c2
1000403b:	mov    edi,0x6b9bbbd
10004040:	add    eax,0x12010204
10004045:	adc    BYTE PTR [esi],cl
10004047:	or     eax,0x0
	...
10004088:	sub    BYTE PTR [eax],al
1000408a:	add    BYTE PTR [eax],al
1000408c:	adc    BYTE PTR [eax],al
1000408e:	add    BYTE PTR [eax],al
10004090:	and    BYTE PTR [eax],al
10004092:	add    BYTE PTR [eax],al
10004094:	add    DWORD PTR [eax],eax
10004096:	sbb    BYTE PTR [eax],al
	...
100040b0:	push   edi
100040b1:	push   ebx
100040b2:	mov    bl,0x54
100040b4:	push   eax
100040b5:	mov    cl,0x53
100040b7:	dec    esi
100040b8:	scas   al,BYTE PTR es:[edi]
100040b9:	push   eax
100040ba:	dec    ebx
100040bb:	stos   DWORD PTR es:[edi],eax
100040bc:	dec    esi
100040bd:	dec    eax
100040be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100040bf:	dec    ebx
100040c0:	inc    ebp
100040c1:	mov    ds:0x459d4148,al
100040c6:	cmp    eax,0x92384197
100040cb:	ds xor al,0x8c
100040ce:	cmp    esi,DWORD PTR [eax]
100040d0:	xchg   BYTE PTR [edi],dh
100040d2:	sub    al,0x80
100040d4:	xor    al,0x28
100040d6:	jp     0x10004109
100040d8:	and    al,0x76
100040da:	das    
100040db:	and    DWORD PTR [eax+0x2a],esi
100040de:	sbb    ebp,DWORD PTR [ecx+0x59]
100040e1:	push   esi
100040e2:	mov    dh,0x8f
100040e4:	mov    eax,ds:0xf39f8cf3
100040e9:	mov    DWORD PTR [ebx-0x12687a0f],ebx
100040ef:	adc    DWORD PTR [edx-0x19738416],0x70e38675
100040f9:	sbb    dh,0x6a
100040fc:	jns    0x100040d7
100040fe:	fs jae 0x100040d6
10004101:	pop    edi
10004102:	ins    DWORD PTR es:[edi],dx
10004103:	rcr    DWORD PTR [ecx+0x69],1
10004106:	int    0x56
10004108:	arpl   dx,cx
1000410a:	push   ebx
1000410b:	popa   
1000410c:	leave  
1000410d:	sub    al,0x1e
1000410f:	ins    BYTE PTR es:[edi],dx
10004110:	pop    ebp
10004111:	pop    edx
10004112:	mov    edx,0xe3f3a391
10004117:	jmp    0xe4dd:0xfce8e1fc
1000411e:	cld    
1000411f:	(bad)  
10004121:	cld    
10004122:	(bad)  
10004123:	loopne 0x10004121
10004125:	rcr    ebp,cl
10004127:	sti    
10004128:	rcr    ebx,1
1000412a:	cli    
1000412b:	into   
1000412c:	fsqrt  
1000412e:	retf   
1000412f:	xlat   BYTE PTR ds:[ebx]
10004130:	stc    
10004131:	leave  
10004132:	aam    0xfa
10004134:	(bad)  
10004135:	sar    ecx,cl
10004137:	(bad)  
10004138:	sar    edx,1
1000413a:	push   edi
1000413b:	fs retf 0x212f
1000413f:	jno    0x100041a2
10004141:	pop    edi
10004142:	mov    ebp,0xe7f3a794
10004147:	in     al,dx
10004148:	cld    
10004149:	xor    DWORD PTR [esi],edi
1000414b:	into   
1000414c:	xor    DWORD PTR [esi],edi
1000414e:	into   
1000414f:	das    
10004150:	cmp    eax,0xc03a2ec8
10004155:	sub    al,0x37
10004157:	mov    bh,0x29
10004159:	xor    al,0xad
1000415b:	sub    BYTE PTR [ecx],dh
1000415d:	mov    ds:0x23982f25,al
10004162:	sub    eax,0x95291f91
10004167:	(bad)  
10004168:	sar    ecx,cl
1000416a:	pop    ecx
1000416b:	imul   ecx,esi,0x66762531
10004171:	arpl   dx,ax
10004173:	cwde   
10004174:	stos   BYTE PTR es:[edi],al
10004175:	hlt    
10004176:	jmp    0x98cf:0x463afdef
1000417d:	pushf  
1000417e:	(bad)  
1000417f:	test   eax,0x807bf1ad
10004184:	aam    0x45
10004186:	dec    edi
10004187:	shl    DWORD PTR ds:0x1e209c3a,1
1000418d:	outs   dx,DWORD PTR ds:[esi]
1000418e:	jge    0x1000420f
10004190:	mov    dl,0x5e
10004192:	shl    BYTE PTR gs:[esi+edi*1],1
10004196:	mov    ds:0x5ff9d5c9,al
1000419b:	ins    DWORD PTR es:[edi],dx
1000419c:	shl    DWORD PTR ds:0x696a7d29,1
100041a2:	(bad)  
100041a3:	fwait
100041a4:	scas   al,BYTE PTR es:[edi]
100041a5:	hlt    
100041a6:	in     eax,dx
100041a7:	repnz std 
100041a9:	inc    ecx
100041aa:	dec    esp
100041ab:	sar    bh,1
100041ad:	(bad)  
100041ae:	call   FWORD PTR [eax-0x52562964]
100041b4:	icebp  
100041b5:	jge    0x1000413c
100041b7:	jmp    0x8d6f5fdc
100041bc:	jg     0x10004170
100041be:	xchg   BYTE PTR [esi-0x45999c23],cl
100041c4:	dec    ebp
100041c5:	push   esi
100041c6:	scas   eax,DWORD PTR es:[edi]
100041c7:	int3   
100041c8:	fdivr  st,st(2)
100041ca:	fs jae 0x100041a2
100041cd:	cmp    DWORD PTR [esi],ebp
100041cf:	sub    DWORD PTR [edi+0x6f],0xffffffca
100041d3:	lahf   
100041d4:	mov    bl,0xf5
100041d6:	icebp  
100041d7:	hlt    
100041d8:	dec    BYTE PTR [eax+0x54]
100041db:	sar    edi,1
100041dd:	(bad)  
100041de:	(bad)  
100041df:	(bad)  
100041e0:	(bad)  
100041e1:	call   FWORD PTR [eax+0x5d59d69c]
100041e7:	lods   eax,DWORD PTR ds:[esi]
100041e8:	clc    
100041e9:	idiv   esp
100041eb:	icebp  
100041ec:	repnz sti 
100041ee:	jne    0x10004268
100041f0:	ret    0xe6e5
100041f3:	mul    BYTE PTR [esi+0x6e]
100041f6:	mov    ebp,0x69fadacf
100041fb:	jns    0x100041d7
100041fd:	cmp    al,0x33
100041ff:	mov    BYTE PTR [esp+esi*2-0x31],dh
10004203:	mov    ds:0xf6f3f4b7,eax
10004208:	dec    BYTE PTR [edi+0x5b]
1000420b:	sar    bh,cl
1000420d:	(bad)  
1000420e:	(bad)  
1000420f:	(bad)  
10004210:	(bad)  
10004211:	(bad)  
10004212:	(bad)  
10004213:	(bad)  
10004214:	(bad)  
10004215:	(bad)  
10004216:	(bad)  
10004217:	(bad)  
10004218:	sti    
10004219:	cld    
1000421a:	(bad)  
1000421b:	idiv   eax
1000421d:	cld    
1000421e:	repnz repnz cli 
10004221:	in     al,dx
10004222:	in     eax,dx
10004223:	clc    
10004224:	jnp    0x100041a9
10004226:	retf   0xdcd2
10004229:	sti    
1000422a:	jo     0x100041ac
1000422c:	fiadd  WORD PTR [eax+0x37]
1000422f:	(bad)  
10004230:	jns    0x100042ab
10004232:	shl    DWORD PTR [edi-0x7090a46],cl
10004238:	(bad)  
10004239:	push   edi
1000423a:	(bad)  
1000423b:	aam    0xff
1000423d:	(bad)  
1000423e:	jmp    FWORD PTR [edi+0x363ae2ae]
10004244:	test   eax,0xffcd9b9f
10004249:	(bad)  
1000424a:	(bad)  
1000424b:	cld    
1000424c:	cld    
1000424d:	std    
1000424e:	div    edi
10004250:	std    
10004251:	repnz repz sti 
10004254:	mov    dl,BYTE PTR [eax-0x4202a2f]
1000425a:	jne    0x100041e2
1000425c:	jecxz  0x100042a2
1000425e:	cmp    edx,DWORD PTR [ebp-0x54278082]
10004264:	mov    edi,0xfefaf9f6
10004269:	pop    esi
1000426a:	push   0xffffffd5
1000426f:	add    DWORD PTR [ebp-0x27aab21e],0x34
10004276:	xor    BYTE PTR [ecx+0x26ffffff],ch
1000427c:	pop    ds
1000427d:	outs   dx,DWORD PTR ds:[esi]
1000427e:	outs   dx,BYTE PTR ds:[esi]
1000427f:	imul   esi,DWORD PTR [esi-0x5d030809],0xe2d9e3a8
10004289:	sti    
1000428a:	jnp    0x10004218
1000428c:	out    0x47,al
1000428e:	inc    eax
1000428f:	fwait
10004290:	add    DWORD PTR [ebx-0x93d5024],0xfffffffb
10004297:	cld    
10004298:	(bad)  
10004299:	outs   dx,BYTE PTR gs:[esi]
1000429b:	(bad)  
1000429c:	(bad)  
1000429d:	(bad)  
1000429e:	inc    edx
100042a0:	ret    
100042a1:	lock jns 0x10004320
100042a4:	loope  0x10004253
100042a6:	lods   al,BYTE PTR ds:[esi]
100042a7:	loop   0x100042a8
100042a9:	(bad)  
100042aa:	jmp    FWORD PTR [esi+0x69]
100042ad:	mov    dh,0xdc
100042af:	fcomi  st,st(2)
100042b1:	sub    ah,BYTE PTR [ebx]
100042b3:	xchg   esp,eax
100042b4:	(bad)  
100042b6:	cld    
100042b7:	fsubr  st(4),st
100042b9:	cld    
100042ba:	adc    DWORD PTR [edx-0x5fbbb515],0xb2df8887
100042c4:	(bad)  
100042c5:	idiv   ebp
100042c7:	std    
100042c8:	jmp    FWORD PTR [edx+0x73]
100042cb:	(bad)  
100042cc:	(bad)  
100042cd:	(bad)  
100042ce:	(bad)  
100042cf:	(bad)  
100042d0:	(bad)  
100042d1:	(bad)  
100042d2:	(bad)  
100042d3:	(bad)  
100042d4:	(bad)  
100042d5:	(bad)  
100042d6:	(bad)  
100042d7:	(bad)  
100042d8:	(bad)  
100042d9:	(bad)  
100042da:	(bad)  
100042db:	(bad)  
100042dc:	(bad)  
100042dd:	push   DWORD PTR [ecx+0x6d]
100042e0:	(bad)  
100042e1:	pop    ecx
100042e2:	jmp    FWORD PTR [bp+si]
100042e5:	and    edx,DWORD PTR [eax+eiz*8-0x677a0319]
100042ec:	out    dx,al
100042ed:	dec    ebp
100042ee:	dec    eax
100042ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100042f0:	mov    cl,BYTE PTR [ebx+eiz*8-0x8364b]
100042f7:	(bad)  
100042f8:	jmp    FWORD PTR [esi+0x77]
100042fb:	xlat   BYTE PTR ds:[ebx]
100042fc:	outs   dx,BYTE PTR ds:[esi]
100042fd:	ja     0x100042d6
100042ff:	ja     0x10004380
10004301:	fiadd  DWORD PTR [ebx-0x676e2276]
10004307:	loope  0x100042a9
10004309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000430a:	in     eax,0xae
1000430c:	mov    ah,0xe9
1000430e:	in     eax,dx
1000430f:	icebp  
10004310:	std    
10004311:	sub    ah,BYTE PTR [ebx]
10004313:	xchg   esp,eax
10004314:	inc    eax
10004315:	inc    ebx
10004316:	out    dx,eax
10004317:	jecxz  0x10004303
10004319:	std    
1000431a:	mov    DWORD PTR [ecx+esi*8-0x7155b4b0],ebx
10004321:	nop
10004322:	out    0xb7,al
10004324:	retf   0xfff7
10004327:	(bad)  
10004328:	(bad)  
10004329:	(bad)  
1000432a:	(bad)  
1000432b:	(bad)  
1000432c:	(bad)  
1000432d:	(bad)  
1000432e:	(bad)  
1000432f:	cld    
10004330:	cld    
10004331:	(bad)  
10004332:	cli    
10004333:	sti    
10004334:	(bad)  
10004335:	idiv   ecx
10004337:	push   ebp
10004339:	clc    
1000433a:	push   ebx
1000433c:	cmc    
1000433d:	(bad)  
1000433e:	lock repz std 
10004341:	in     eax,dx
10004342:	icebp  
10004343:	std    
10004344:	jmp    0x8cfc:0xece7fdee
1000434b:	lahf   
1000434c:	repz push edx
1000434e:	dec    esi
1000434f:	scas   al,BYTE PTR es:[edi]
10004350:	nop
10004351:	xchg   edx,eax
10004352:	call   0xc4f80e0e
10004357:	leave  
10004358:	div    BYTE PTR [edx-0x3d4f083a]
1000435e:	imul   BYTE PTR [ebx-0x44570942]
10004364:	cmc    
10004365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10004366:	mov    dh,0xf5
10004368:	mov    al,ds:0xae9bf4b2
1000436d:	hlt    
1000436e:	cwde   
1000436f:	stos   BYTE PTR es:[edi],al
10004370:	repz xchg ebx,eax
10004372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004373:	repz xchg ecx,eax
10004375:	mov    ds:0xf3a18ff3,eax
1000437a:	mov    WORD PTR [edi-0x4eafab0d],ds
10004380:	nop
10004381:	xchg   edx,eax
10004382:	call   0x9de8d617
10004387:	(bad)  
10004388:	out    0x8a,al
1000438a:	mov    esp,ebx
1000438c:	xchg   BYTE PTR [edi-0x247d7d21],al
10004392:	jl     0x10004410
10004394:	(bad)  
10004395:	js     0x1000440e
10004397:	shl    BYTE PTR [edx+0x71],cl
1000439a:	int    0x6d
1000439c:	imul   ecx,eax,0x67
1000439f:	gs ret 0x6062
100043a3:	mov    esi,0x5aba5b5e
100043a8:	push   edi
100043a9:	mov    dh,0x57
100043ab:	push   ebx
100043ac:	mov    bl,0x54
100043ae:	push   eax
100043af:	mov    cl,0x0
	...
100043ed:	add    BYTE PTR [eax],al
100043ef:	add    BYTE PTR [eax],ch
100043f1:	add    BYTE PTR [eax],al
100043f3:	add    BYTE PTR [eax],dh
100043f5:	add    BYTE PTR [eax],al
100043f7:	add    BYTE PTR [eax+0x0],ah
100043fa:	add    BYTE PTR [eax],al
100043fc:	add    DWORD PTR [eax],eax
100043fe:	and    BYTE PTR [eax],al
	...
10004728:	inc    esi
10004729:	cmp    eax,0x1c2aff9f
1000472e:	ins    DWORD PTR es:[edi],dx
1000472f:	jmp    FWORD PTR [edx]
10004731:	sbb    al,0x6d
10004733:	jmp    FWORD PTR [ecx]
10004735:	sbb    al,0x6c
10004737:	jmp    FWORD PTR [ecx]
10004739:	sbb    ebp,DWORD PTR [ebx-0x1]
1000473c:	sub    DWORD PTR [ebx],ebx
1000473e:	imul   edi,edi,0xff681a28
10004744:	sub    BYTE PTR [edx],bl
10004746:	jmp    WORD PTR [edi]
10004749:	sbb    ah,BYTE PTR [edi+edi*8+0x27]
1000474d:	sbb    DWORD PTR [ebx-0x1],esp
10004750:	sbb    BYTE PTR es:[edx-0x1],ah
10004754:	sbb    BYTE PTR es:[eax-0x1],ah
10004758:	and    eax,0x25ff5e18
1000475d:	pop    ss
1000475e:	pop    ebx
1000475f:	jmp    DWORD PTR [esi+edx*1]
10004762:	pop    ecx
10004763:	jmp    DWORD PTR [ebx]
10004765:	push   ss
10004766:	push   edi
10004767:	jmp    DWORD PTR [ebx]
10004769:	adc    eax,0x1422ff54
1000476e:	push   edx
1000476f:	jmp    DWORD PTR [ecx]
10004771:	adc    edx,DWORD PTR [eax-0x1]
10004774:	and    DWORD PTR [edx],edx
10004776:	dec    esi
10004777:	jmp    DWORD PTR [eax]
10004779:	adc    cl,BYTE PTR [ebx-0x1]
1000477c:	pop    ds
1000477d:	adc    DWORD PTR [ecx-0x1],ecx
10004780:	pop    ds
10004781:	adc    BYTE PTR [esi-0x1],al
10004784:	push   ds
10004785:	adc    BYTE PTR [edi+edi*8+0x1e],al
10004789:	push   cs
1000478a:	inc    edx
1000478b:	call   FWORD PTR ds:0x1cff400e
10004791:	push   cs
10004792:	cmp    eax,0x3c0c1bff
10004797:	call   FWORD PTR [ebx]
10004799:	or     al,0x39
1000479b:	call   FWORD PTR [edx]
1000479d:	or     al,0x36
1000479f:	call   FWORD PTR [edx]
100047a1:	or     dh,BYTE PTR ds:0x330a19ff
100047a7:	call   FWORD PTR [eax]
100047a9:	or     DWORD PTR [ecx],esi
100047ab:	call   DWORD PTR [edi]
100047ad:	or     DWORD PTR [edi],ebp
100047af:	call   DWORD PTR [edi]
100047b1:	or     BYTE PTR ds:0x2b0817ff,ch
100047b7:	call   DWORD PTR [esi]
100047b9:	pop    es
100047ba:	sub    bh,bh
100047bc:	push   ss
100047bd:	pop    es
100047be:	sub    bh,bh
100047c0:	push   ss
100047c1:	push   es
100047c2:	daa    
100047c3:	call   DWORD PTR ds:0xff2506
	...
100047e5:	add    BYTE PTR [eax],al
100047e7:	add    BYTE PTR [edi+0x3e],al
100047ea:	mov    al,ds:0xdb4539ff
100047ef:	push   DWORD PTR [edi]
100047f1:	inc    ebx
100047f2:	(bad)  
100047f4:	aaa    
100047f5:	inc    ecx
100047f6:	fcos   
100047f8:	ss inc ecx
100047fa:	(bad)  
100047fb:	push   DWORD PTR [esi]
100047fd:	aas    
100047fe:	aad    0xff
10004800:	xor    al,0x3e
10004802:	aam    0xff
10004804:	xor    edi,DWORD PTR ds:0x3c33ffd1
1000480a:	iret   
1000480b:	push   DWORD PTR [ecx]
1000480d:	cmp    cl,ah
1000480f:	push   DWORD PTR [ecx]
10004811:	cmp    ebx,ecx
10004813:	jmp    FWORD PTR [edi]
10004815:	cmp    al,cl
10004817:	jmp    FWORD PTR [edi]
10004819:	xor    eax,0x342effc6
1000481e:	ret    
1000481f:	jmp    FWORD PTR [edx+esi*1]
10004822:	sar    bh,0x2a
10004825:	xor    BYTE PTR [esi-0x44d1d601],bh
1000482b:	jmp    FWORD PTR [ecx]
1000482d:	sub    al,0xb8
1000482f:	jmp    DWORD PTR [edi]
10004831:	sub    esi,DWORD PTR [ebp-0x4dd5d901]
10004837:	jmp    DWORD PTR [eax+ebp*1]
1000483a:	scas   eax,DWORD PTR es:[edi]
1000483b:	jmp    DWORD PTR [esi+eiz*1]
1000483e:	lods   eax,DWORD PTR ds:[esi]
1000483f:	jmp    DWORD PTR [edx]
10004841:	and    al,0xa9
10004843:	jmp    DWORD PTR [eax]
10004845:	and    esp,DWORD PTR [edi-0x5adfe001]
1000484b:	call   FWORD PTR [edi]
1000484d:	push   ds
1000484e:	mov    eax,ds:0x9f1d1dff
10004853:	call   FWORD PTR [ebx+ebx*1]
10004856:	pushf  
10004857:	call   FWORD PTR [ebx]
10004859:	sbb    bl,BYTE PTR [edx-0x68e7e601]
1000485f:	call   FWORD PTR [eax]
10004861:	push   ss
10004862:	xchg   ebp,eax
10004863:	call   FWORD PTR [eax]
10004865:	adc    eax,0x1316ff92
1000486a:	nop
1000486b:	call   DWORD PTR ds:0x14ff8e12
10004871:	adc    DWORD PTR [edi+edi*8-0x75f0ed],ecx
10004878:	adc    ecx,DWORD PTR [edi]
1000487a:	mov    edi,edi
1000487c:	adc    ecx,DWORD PTR [esi]
1000487e:	xchg   edi,edi
10004880:	adc    DWORD PTR [esp+eax*4],ecx
10004883:	call   DWORD PTR ds:0xff2606
	...
100048a5:	add    BYTE PTR [eax],al
100048a7:	add    BYTE PTR [edi+0x3f],al
100048aa:	mov    eax,ds:0xdc473cff
100048af:	jmp    FWORD PTR [esi+ebp*1]
100048b2:	(bad)  
100048b3:	call   DWORD PTR [esi+0x6a]
100048b6:	(bad)  
100048b7:	call   DWORD PTR [ebp+0x69]
100048ba:	std    
100048bb:	call   DWORD PTR [edi+eiz*2-0x5]
100048bf:	call   DWORD PTR [ebx+0x67]
100048c2:	cli    
100048c3:	call   DWORD PTR [edx+0x65]
100048c6:	idiv   edi
100048c8:	push   eax
100048c9:	fs cmc 
100048cb:	dec    DWORD PTR [edi+0x61]
100048ce:	repnz dec DWORD PTR [ebp+0x61]
100048d2:	out    dx,eax
100048d3:	dec    DWORD PTR [edi+ebx*2-0x14]
100048d7:	dec    DWORD PTR [edx+0x5d]
100048da:	call   0xf65b92de
100048df:	inc    DWORD PTR [esi+0x59]
100048e2:	loop   0x100048e3
100048e4:	inc    ebp
100048e5:	push   esi
100048e6:	fdivp  st(7),st
100048e8:	inc    ebx
100048e9:	push   esp
100048ea:	(bad)  
100048ec:	inc    ecx
100048ed:	push   ecx
100048ee:	xlat   BYTE PTR ds:[ebx]
100048ef:	(bad)  
100048f0:	aas    
100048f1:	dec    edi
100048f2:	sar    edi,cl
100048f4:	cmp    eax,0x3bffcf4d
100048f9:	dec    ebx
100048fa:	int3   
100048fb:	(bad)  
100048fc:	cmp    DWORD PTR [eax-0x37],ecx
100048ff:	(bad)  
10004900:	cmp    BYTE PTR [edi-0x3c],al
10004903:	push   DWORD PTR ds:0x33ffc044
10004909:	inc    edx
1000490a:	mov    ebp,0xba4031ff
1000490f:	push   DWORD PTR [eax]
10004911:	ds mov dh,0xff
10004914:	sub    eax,0x2cffb33b
10004919:	cmp    DWORD PTR [edi-0x53c8d501],ebp
1000491f:	jmp    FWORD PTR [eax]
10004921:	xor    eax,0x3427ffa9
10004926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004927:	jmp    DWORD PTR ds:0x25ffa333
1000492d:	xor    DWORD PTR [eax-0x60cfdc01],esp
10004933:	jmp    DWORD PTR [ecx]
10004935:	cs popf 
10004937:	jmp    DWORD PTR [ecx]
10004939:	sub    eax,0x2c20ff9b
1000493e:	cdq    
1000493f:	call   DWORD PTR [ecx]
10004941:	or     eax,0x716ff86
10004946:	daa    
10004947:	inc    DWORD PTR [eax]
	...
10004965:	add    BYTE PTR [eax],al
10004967:	add    BYTE PTR [ecx+0x40],cl
1000496a:	mov    ds:0xdc4a3eff,al
1000496f:	jmp    FWORD PTR [esi]
10004971:	xor    bh,al
10004973:	call   FWORD PTR [esi+0x54]
10004976:	ret    
10004977:	inc    DWORD PTR [ebp+0x3c]
1000497a:	sahf   
1000497b:	inc    DWORD PTR [ebp+0x3c]
1000497e:	popf   
1000497f:	inc    DWORD PTR [esp+edi*1-0x63]
10004983:	inc    DWORD PTR [esp+edi*1-0x64]
10004987:	inc    DWORD PTR [esp+edi*1-0x65]
1000498b:	inc    DWORD PTR [esp+edi*1-0x65]
1000498f:	inc    DWORD PTR [esp+edi*1-0x66]
10004993:	inc    DWORD PTR [esp+edi*1-0x67]
10004997:	inc    DWORD PTR [esp+edi*1-0x68]
1000499b:	inc    DWORD PTR [ebx+0x3c]
1000499e:	xchg   edi,eax
1000499f:	inc    DWORD PTR [ebx+0x3c]
100049a2:	xchg   esi,eax
100049a3:	inc    DWORD PTR [edx+0x3b]
100049a6:	xchg   ebp,eax
100049a7:	inc    DWORD PTR [edx+0x3c]
100049aa:	xchg   ebx,eax
100049ab:	inc    DWORD PTR [edx+0x3c]
100049ae:	xchg   ebx,eax
100049af:	inc    DWORD PTR [ecx+0x3c]
100049b2:	xchg   ecx,eax
100049b3:	inc    DWORD PTR [ecx+0x3c]
100049b6:	nop
100049b7:	inc    DWORD PTR [ecx+0x3c]
100049ba:	(bad)  
100049bb:	inc    DWORD PTR [eax+0x3c]
100049be:	mov    ?,edi
100049c0:	inc    eax
100049c1:	cmp    ecx,DWORD PTR [ebp-0x74c4bf01]
100049c7:	(bad)  
100049c8:	aas    
100049c9:	cmp    al,0x8a
100049cb:	(bad)  
100049cc:	aas    
100049cd:	cmp    ecx,DWORD PTR [ecx-0x77c4c001]
100049d3:	(bad)  
100049d4:	cmp    ecx,DWORD PTR ds:[eax-0x79c4c101]
100049db:	(bad)  
100049dc:	ds cmp al,0x85
100049df:	(bad)  
100049e0:	cmp    eax,DWORD PTR ds:[edi+edi*8-0x7cc4c2]
100049e8:	cmp    eax,0x3dff823b
100049ed:	cmp    al,0x81
100049ef:	(bad)  
100049f0:	cmp    al,0x3b
100049f2:	cmp    edi,0xff803b3c
100049f8:	cmp    al,0x3b
100049fa:	jg     0x100049fb
100049fc:	and    BYTE PTR [ecx+ebx*4],ch
100049ff:	call   DWORD PTR [edx]
10004a01:	push   cs
10004a02:	xchg   edi,edi
10004a04:	push   ss
10004a05:	pop    es
10004a06:	sub    bh,bh
	...
10004a28:	dec    ecx
10004a29:	inc    edx
10004a2a:	mov    ds:0xdd4e41ff,eax
10004a2f:	push   DWORD PTR [eax]
10004a31:	xor    ecx,ecx
10004a33:	call   FWORD PTR [edi+0x55]
10004a36:	(bad)  
10004a37:	(bad)  
10004a38:	fsubrp st(5),st
10004a3a:	cld    
10004a3b:	(bad)  
10004a3c:	fsubr  st(4),st
10004a3e:	sti    
10004a3f:	(bad)  
10004a40:	(bad)  
10004a42:	cld    
10004a43:	(bad)  
10004a44:	fabs   
10004a46:	cld    
10004a47:	call   edi
10004a49:	loopne 0x10004a46
10004a4b:	call   edi
10004a4d:	(bad)  
10004a4f:	call   esp
10004a51:	fdivp  st(3),st
10004a53:	call   esp
10004a55:	(bad)  
10004a57:	call   edx
10004a59:	fdiv   st(2),st
10004a5b:	call   eax
10004a5d:	(bad)  
10004a5f:	dec    edi
10004a61:	(bad)  
10004a63:	dec    esi
10004a65:	fdivr  st,st(2)
10004a67:	dec    esp
10004a69:	xlat   BYTE PTR ds:[ebx]
10004a6a:	cli    
10004a6b:	dec    ebx
10004a6d:	xlat   BYTE PTR ds:[ebx]
10004a6e:	cli    
10004a6f:	dec    edx
10004a71:	(bad)  
10004a72:	stc    
10004a73:	dec    ecx
10004a75:	aam    0xf9
10004a77:	inc    edi
10004a79:	sar    edx,cl
10004a7b:	inc    esi
10004a7d:	sar    cl,cl
10004a7f:	inc    ebp
10004a81:	sar    ecx,1
10004a83:	inc    ebx
10004a85:	sar    cl,1
10004a87:	inc    edx
10004a89:	iret   
10004a8a:	stc    
10004a8b:	inc    edx
10004a8d:	iret   
10004a8e:	stc    
10004a8f:	inc    ecx
10004a91:	int    0xf8
10004a93:	(bad)  
10004a94:	mov    edi,0xbefff9cd
10004a99:	int    0xf8
10004a9b:	(bad)  
10004a9c:	mov    ebp,0xbdfff9cb
10004aa1:	retf   
10004aa2:	clc    
10004aa3:	(bad)  
10004aa4:	mov    ebx,0xbbfff8cb
10004aa9:	retf   0xfff8
10004aac:	mov    ebx,0xbafff8c9
10004ab1:	leave  
10004ab2:	clc    
10004ab3:	(bad)  
10004ab4:	mov    ecx,0x3cfff8c8
10004ab9:	cmp    eax,DWORD PTR [eax-0x64d2de01]
10004abf:	call   DWORD PTR [ebx]
10004ac1:	js     0x3a0761c6
10004ac7:	inc    DWORD PTR [eax]
	...
10004ae5:	add    BYTE PTR [eax],al
10004ae7:	add    BYTE PTR [edx+0x43],cl
10004aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004aeb:	inc    DWORD PTR [eax+edx*2-0x22]
10004aef:	push   DWORD PTR [edx]
10004af1:	ss leave 
10004af3:	jmp    DWORD PTR [eax+0x56]
10004af6:	(bad)  
10004af9:	out    0xfc,al
10004afb:	(bad)  
10004afc:	fucom  st(5)
10004afe:	sti    
10004aff:	(bad)  
10004b00:	fsubr  st(4),st
10004b02:	sti    
10004b03:	(bad)  
10004b04:	(bad)  
10004b06:	sti    
10004b07:	(bad)  
10004b08:	fabs   
10004b0a:	sti    
10004b0b:	call   edi
10004b0d:	loopne 0x10004b0a
10004b0f:	call   edi
10004b11:	(bad)  
10004b13:	call   esp
10004b15:	fdivp  st(3),st
10004b17:	call   ebx
10004b19:	(bad)  
10004b1b:	call   edx
10004b1d:	fdiv   st(3),st
10004b1f:	call   eax
10004b21:	(bad)  
10004b23:	dec    edi
10004b25:	(bad)  
10004b27:	dec    esi
10004b29:	fsqrt  
10004b2b:	dec    esp
10004b2d:	xlat   BYTE PTR ds:[ebx]
10004b2e:	cli    
10004b2f:	dec    ebx
10004b31:	xlat   BYTE PTR ds:[ebx]
10004b32:	cli    
10004b33:	dec    ecx
10004b35:	aad    0xfa
10004b37:	dec    eax
10004b39:	aam    0xfa
10004b3b:	dec    eax
10004b3d:	sar    ecx,cl
10004b3f:	inc    esi
10004b41:	sar    cl,cl
10004b43:	inc    esp
10004b45:	sar    edx,1
10004b47:	inc    esp
10004b49:	sar    cl,1
10004b4b:	inc    edx
10004b4d:	iret   
10004b4e:	clc    
10004b4f:	inc    ecx
10004b51:	into   
10004b52:	stc    
10004b53:	inc    eax
10004b55:	into   
10004b56:	clc    
10004b57:	(bad)  
10004b58:	mov    edi,0xbefff9cd
10004b5d:	int3   
10004b5e:	stc    
10004b5f:	(bad)  
10004b60:	mov    esi,0xbcfff9cb
10004b65:	retf   
10004b66:	stc    
10004b67:	(bad)  
10004b68:	mov    esp,0xbbfff8ca
10004b6d:	retf   0xfff8
10004b70:	mov    edx,0xb9fff8c9
10004b75:	leave  
10004b76:	clc    
10004b77:	(bad)  
10004b78:	cmp    al,0x3b
10004b7a:	cmp    bh,0x22
10004b7d:	das    
10004b7e:	pushf  
10004b7f:	call   DWORD PTR [eax+edx*1]
10004b82:	mov    edi,edi
10004b84:	pop    ss
10004b85:	or     BYTE PTR [ebx],ch
10004b87:	inc    DWORD PTR [eax]
	...
10004ba5:	add    BYTE PTR [eax],al
10004ba7:	add    BYTE PTR [ebp+eax*2-0x59],cl
10004bab:	inc    DWORD PTR [edi+0x53]
10004bae:	fdivp  st(7),st
10004bb0:	ss cmp edx,ecx
10004bb3:	jmp    DWORD PTR [ecx+0x58]
10004bb6:	(bad)  
10004bb9:	out    0xfc,eax
10004bbb:	(bad)  
10004bbc:	fsubrp st(5),st
10004bbe:	sti    
10004bbf:	(bad)  
10004bc0:	fucom  st(5)
10004bc2:	sti    
10004bc3:	(bad)  
10004bc4:	fsubr  st(3),st
10004bc6:	sti    
10004bc7:	(bad)  
10004bc8:	fnclex 
10004bca:	sti    
10004bcb:	(bad)  
10004bcc:	(bad)  
10004bce:	sti    
10004bcf:	(bad)  
10004bd0:	fsub   st,st(0)
10004bd2:	sti    
10004bd3:	call   esi
10004bd5:	(bad)  
10004bd7:	call   ebp
10004bd9:	fdivp  st(3),st
10004bdb:	call   ebx
10004bdd:	(bad)  
10004bdf:	call   edx
10004be1:	fdiv   st(3),st
10004be3:	call   ecx
10004be5:	(bad)  
10004be7:	dec    edi
10004be9:	fsqrt  
10004beb:	dec    ebp
10004bed:	fdivr  st,st(2)
10004bef:	dec    esp
10004bf1:	xlat   BYTE PTR ds:[ebx]
10004bf2:	cli    
10004bf3:	dec    ebx
10004bf5:	(bad)  
10004bf6:	cli    
10004bf7:	dec    edx
10004bf9:	aad    0xfa
10004bfb:	dec    ecx
10004bfd:	aam    0xf9
10004bff:	inc    edi
10004c01:	sar    ecx,cl
10004c03:	inc    esi
10004c05:	sar    cl,cl
10004c07:	inc    ebp
10004c09:	sar    ecx,1
10004c0b:	inc    ebx
10004c0d:	sar    cl,1
10004c0f:	inc    ebx
10004c11:	iret   
10004c12:	stc    
10004c13:	inc    ecx
10004c15:	iret   
10004c16:	clc    
10004c17:	inc    eax
10004c19:	into   
10004c1a:	stc    
10004c1b:	(bad)  
10004c1c:	mov    edi,0xbffff8cd
10004c21:	int3   
10004c22:	clc    
10004c23:	(bad)  
10004c24:	mov    esi,0xbcfff9cc
10004c29:	retf   
10004c2a:	clc    
10004c2b:	(bad)  
10004c2c:	mov    ebx,0xbbfff8ca
10004c31:	retf   0xfff8
10004c34:	mov    edx,0x3dfff9c9
10004c39:	cmp    eax,DWORD PTR [eax-0x60cfdc01]
10004c3f:	call   DWORD PTR ds:0x17ff8d12
10004c45:	or     BYTE PTR ds:0xff,ch
	...
10004c67:	add    BYTE PTR [ebp+0x46],cl
10004c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004c6b:	dec    DWORD PTR [edx+0x57]
10004c6e:	(bad)  
10004c70:	cmp    BYTE PTR [ebx+ecx*8],bh
10004c73:	jmp    DWORD PTR [edx+0x5a]
10004c76:	(bad)  
10004c77:	jmp    edx
10004c79:	call   0xf7e14c7a
10004c7e:	cld    
10004c7f:	(bad)  
10004c80:	(bad)  
10004c82:	cld    
10004c83:	jmp    FWORD PTR [edx]
10004c85:	aaa    
10004c86:	int    0xff
10004c88:	sub    dh,BYTE PTR [edi]
10004c8a:	int3   
10004c8b:	jmp    FWORD PTR [edx]
10004c8d:	ss retf 0x2aff
10004c91:	ss enter 0x29ff,0x36
10004c96:	(bad)  
10004c97:	jmp    FWORD PTR [ecx]
10004c99:	xor    eax,0x3528ffc4
10004c9e:	sar    edi,0x28
10004ca1:	xor    al,0xbf
10004ca3:	jmp    FWORD PTR [eax]
10004ca5:	xor    al,0xbc
10004ca7:	jmp    DWORD PTR [edi]
10004ca9:	xor    al,0xba
10004cab:	jmp    DWORD PTR [edi]
10004cad:	xor    esi,DWORD PTR [edi-0x4ccdd801]
10004cb3:	jmp    DWORD PTR [esi]
10004cb5:	xor    dh,BYTE PTR [eax-0x52cdd901]
10004cbb:	jmp    DWORD PTR ds:0x25ffaa31
10004cc1:	xor    BYTE PTR [eax-0x5bd0da01],ch
10004cc7:	jmp    DWORD PTR [edi+ebp*1]
10004cca:	mov    ds:0x9e2f25ff,al
10004ccf:	jmp    DWORD PTR [esi+ebp*1]
10004cd2:	pushf  
10004cd3:	jmp    DWORD PTR [ebx]
10004cd5:	cs cdq 
10004cd7:	jmp    DWORD PTR [ebp*1+0x2d23ff97]
10004cde:	xchg   ebp,eax
10004cdf:	jmp    DWORD PTR [ebx]
10004ce1:	sub    eax,0x2c23ff92
10004ce6:	nop
10004ce7:	call   FWORD PTR [edi]
10004ce9:	sub    DWORD PTR [edx-0x7344201],ecx
10004cef:	(bad)  
10004cf0:	mov    esp,0xbbfff8ca
10004cf5:	retf   0xfff9
10004cf8:	cmp    al,0x3b
10004cfa:	cmp    edi,0xffa13124
10004d00:	push   ss
10004d01:	adc    ecx,DWORD PTR [esi+0x2e0918ff]
10004d07:	inc    DWORD PTR [eax]
	...
10004d25:	add    BYTE PTR [eax],al
10004d27:	add    BYTE PTR [esi+0x48],cl
10004d2a:	stos   BYTE PTR es:[edi],al
10004d2b:	dec    DWORD PTR [esi+0x5a]
10004d2e:	loopne 0x10004d2f
10004d30:	cmp    eax,DWORD PTR [eax-0x33]
10004d33:	jmp    DWORD PTR [ebx+ebx*2-0x39]
10004d37:	jmp    ebx
10004d39:	jmp    0xf8e34d3a
10004d3e:	cld    
10004d3f:	jmp    eax
10004d41:	out    0xfc,eax
10004d43:	jmp    FWORD PTR [esi]
10004d45:	cmp    ecx,ebp
10004d47:	push   DWORD PTR [edx-0x4f001049]
10004d4d:	mov    ah,0xf3
10004d4f:	call   DWORD PTR [esi+0x7bffe79b]
10004d55:	sbb    ebp,0xd2685fff
10004d5b:	dec    DWORD PTR [edx+0x53]
10004d5e:	(bad)  
10004d5f:	(bad)  
10004d60:	ds inc esi
10004d62:	sar    bh,0x39
10004d65:	inc    ebx
10004d66:	mov    edx,0xb63f37ff
10004d6b:	push   DWORD PTR [edi]
10004d6d:	ds mov al,0xff
10004d70:	xor    eax,0x32ffac3c
10004d75:	cmp    BYTE PTR [ebx-0x64cbcf01],ah
10004d7b:	jmp    FWORD PTR [eax+esi*1]
10004d7e:	xchg   ecx,eax
10004d7f:	jmp    FWORD PTR [eax]
10004d81:	sub    eax,DWORD PTR [edi+0x7f2826ff]
10004d87:	jmp    DWORD PTR [eiz*1+0x1715ff79]
10004d8e:	outs   dx,BYTE PTR ds:[esi]
10004d8f:	call   FWORD PTR [edi]
10004d91:	adc    BYTE PTR [edx-0x1],al
10004d94:	sub    ebp,DWORD PTR ds:0x282aff91
10004d9a:	test   bh,bh
10004d9c:	sub    ah,BYTE PTR [edi]
10004d9e:	jl     0x10004d9f
10004da0:	sub    esp,DWORD PTR ds:0x1811ff75
10004da6:	cmp    bh,0x1f
10004da9:	sub    DWORD PTR [edx-0x7334201],ecx
10004daf:	(bad)  
10004db0:	mov    ebp,0xbcfff8cb
10004db5:	retf   0xfff8
10004db8:	cmp    al,0x3b
10004dba:	cmp    bh,0x25
10004dbd:	xor    ah,BYTE PTR [ebx-0x6eebe801]
10004dc3:	call   FWORD PTR [eax]
10004dc5:	or     dh,BYTE PTR [eax]
10004dc7:	inc    DWORD PTR [eax]
	...
10004de5:	add    BYTE PTR [eax],al
10004de7:	add    BYTE PTR [eax+0x4a],dl
10004dea:	stos   DWORD PTR es:[edi],eax
10004deb:	call   DWORD PTR [ecx+0x5e]
10004dee:	loope  0x10004def
10004df0:	ds inc esp
10004df2:	int    0xff
10004df4:	pop    si
10004df6:	leave  
10004df7:	jmp    ebp
10004df9:	jmp    0xfffc:0xe9e4fffc
10004e00:	loop   0x10004dea
10004e02:	cld    
10004e03:	push   DWORD PTR [edx]
10004e05:	ds into 
10004e07:	call   FWORD PTR [eax-0x4d002964]
10004e0d:	mov    bh,0xef
10004e0f:	inc    edx
10004e11:	(bad)  
10004e12:	stc    
10004e13:	jmp    FWORD PTR [eax-0x67000f54]
10004e19:	popf   
10004e1a:	jmp    0x10004e1b
10004e1c:	or     DWORD PTR [eax+0x6c65ffe3],0x544bffd7
10004e26:	retf   0x3fff
10004e29:	dec    eax
10004e2a:	(bad)  
10004e2b:	(bad)  
10004e2c:	cmp    eax,DWORD PTR [edx-0x43]
10004e2f:	push   DWORD PTR [edi]
10004e31:	ds mov ch,0xff
10004e34:	xor    eax,0x31ffab3b
10004e39:	mov    al,ss:0x94312dff
10004e3f:	jmp    FWORD PTR [ecx]
10004e41:	sub    eax,DWORD PTR [edi+0x7d2726ff]
10004e47:	call   FWORD PTR [ebx]
10004e49:	sbb    eax,0x1826ff79
10004e4e:	push   ecx
10004e4f:	jmp    FWORD PTR [eax+esi*1]
10004e52:	xchg   edi,eax
10004e53:	jmp    FWORD PTR [edi]
10004e55:	xor    dl,BYTE PTR [edi-0x76d4d401]
10004e5b:	jmp    FWORD PTR [edx]
10004e5d:	daa    
10004e5e:	cmp    edi,0xff892828
10004e64:	pop    ss
10004e65:	pop    ss
10004e66:	jne    0x10004e67
10004e68:	and    DWORD PTR [ebx],ebp
10004e6a:	mov    edi,?
10004e6c:	mov    esi,0xbefff9cc
10004e71:	retf   
10004e72:	clc    
10004e73:	(bad)  
10004e74:	mov    ebp,0x3dfff9cb
10004e79:	cmp    eax,DWORD PTR [ebx-0x59cbd801]
10004e7f:	call   FWORD PTR [eax]
10004e81:	push   ss
10004e82:	xchg   ebx,eax
10004e83:	call   FWORD PTR [ecx]
10004e85:	or     dh,BYTE PTR [edx]
10004e87:	inc    DWORD PTR [eax]
	...
10004ea5:	add    BYTE PTR [eax],al
10004ea7:	add    BYTE PTR [ecx+0x4c],dl
10004eaa:	lods   eax,DWORD PTR ds:[esi]
10004eab:	call   DWORD PTR [ebp+0x63]
10004eae:	loop   0x10004eaf
10004eb0:	inc    edx
10004eb1:	inc    edi
10004eb2:	iret   
10004eb3:	jmp    FWORD PTR [eax+0x5f]
10004eb6:	retf   0xe7ff
10004eb9:	in     al,dx
10004eba:	std    
10004ebb:	jmp    esp
10004ebd:	jmp    0x10004ebc
10004ebf:	jmp    ebx
10004ec1:	jmp    0x51354ec2
10004ec6:	iret   
10004ec7:	jmp    ecx
10004ec9:	jecxz  0x10004ebe
10004ecb:	call   FWORD PTR [eax-0x4d002964]
10004ed1:	mov    bh,0xef
10004ed3:	inc    edx
10004ed5:	(bad)  
10004ed6:	stc    
10004ed7:	jmp    DWORD PTR [esi-0x67000f55]
10004edd:	popf   
10004ede:	jmp    0x10004edf
10004ee0:	or     BYTE PTR [eax+0x716bffe4],0xdb
10004ee7:	call   DWORD PTR [ebp+0x5e]
10004eea:	sar    edi,cl
10004eec:	inc    ebp
10004eed:	dec    esp
10004eee:	enter  0x3dff,0x45
10004ef2:	mov    edi,0xb23e37ff
10004ef7:	push   DWORD PTR [edx]
10004ef9:	cmp    DWORD PTR [esi-0x69cdd101],esp
10004eff:	jmp    FWORD PTR [ecx]
10004f01:	sub    al,0x88
10004f03:	call   FWORD PTR [ebx]
10004f05:	sbb    eax,0x232eff79
10004f0a:	(bad)  
10004f0b:	push   DWORD PTR ds:0x46ffa039
10004f11:	dec    esp
10004f12:	mov    dl,0xff
10004f14:	xor    dh,BYTE PTR [edi]
10004f16:	lahf   
10004f17:	jmp    FWORD PTR [ebx]
10004f19:	cs nop
10004f1b:	push   DWORD PTR [eax]
10004f1d:	xor    ebx,DWORD PTR [edi+edi*8-0x9de8df]
10004f24:	je     0x10004f98
10004f26:	test   eax,0x8e2c22ff
10004f2b:	(bad)  
10004f2c:	mov    edi,0xbffff9cd
10004f31:	int    0xf9
10004f33:	(bad)  
10004f34:	mov    ebp,0x3efff9cb
10004f39:	cmp    eax,DWORD PTR [edi+edi*8-0x56c9d7]
10004f40:	sbb    DWORD PTR [edi],edx
10004f42:	xchg   esi,eax
10004f43:	call   FWORD PTR [ecx]
10004f45:	or     dh,BYTE PTR [edi+edi*8]
	...
10004f68:	push   ebx
10004f69:	dec    esi
10004f6a:	scas   eax,DWORD PTR es:[edi]
10004f6b:	call   FWORD PTR [ecx+0x67]
10004f6e:	loop   0x10004f6f
10004f70:	inc    ebp
10004f71:	dec    esp
10004f72:	sar    edi,1
10004f74:	imul   esp,DWORD PTR [edx-0x35],0xfcede7ff
10004f7b:	jmp    esi
10004f7d:	in     al,dx
10004f7e:	std    
10004f7f:	jmp    ebp
10004f81:	jmp    0xffcf:0x4438fffc
10004f88:	(bad)  
10004f89:	(bad)  
10004f8a:	(bad)  
10004f8b:	jmp    ecx
10004f8d:	jecxz  0x10004f82
10004f8f:	call   FWORD PTR [eax-0x4d002964]
10004f95:	mov    bh,0xef
10004f97:	inc    edx
10004f99:	(bad)  
10004f9a:	stc    
10004f9b:	push   DWORD PTR [eax-0x6f000c4c]
10004fa1:	xchg   esi,eax
10004fa2:	call   0xf284cda6
10004fa7:	jmp    FWORD PTR [eax+0x6f]
10004faa:	(bad)  
10004fac:	push   ebx
10004fad:	pop    ebx
10004fae:	sar    edi,1
10004fb0:	inc    esi
10004fb1:	dec    esi
10004fb2:	(bad)  
10004fb3:	(bad)  
10004fb4:	cmp    al,0x43
10004fb6:	mov    edx,0xac3b36ff
10004fbb:	push   DWORD PTR [eax]
10004fbd:	xor    al,0x9a
10004fbf:	jmp    FWORD PTR [ecx]
10004fc1:	sub    al,0x8a
10004fc3:	push   DWORD PTR [edi]
10004fc5:	cs jne 0x10004fc7
10004fc8:	dec    ebx
10004fc9:	dec    esi
10004fca:	lods   al,BYTE PTR ds:[esi]
10004fcb:	(bad)  
10004fcc:	js     0x1000504d
10004fce:	(bad)  
10004fcf:	dec    DWORD PTR [ebx+edx*2-0x46]
10004fd3:	push   DWORD PTR [edx+edi*1]
10004fd6:	mov    ds:0xa72c2aff,eax
10004fdb:	call   FWORD PTR [esi]
10004fdd:	sbb    DWORD PTR [edx-0x1],esi
10004fe0:	jl     0x1000505d
10004fe2:	scas   eax,DWORD PTR es:[edi]
10004fe3:	jmp    FWORD PTR [ebp+0x23ffe3b2]
10004fe9:	cs (bad) 
10004feb:	inc    ecx
10004fed:	into   
10004fee:	stc    
10004fef:	(bad)  
10004ff0:	mov    edi,0xbffff9cd
10004ff5:	int3   
10004ff6:	clc    
10004ff7:	(bad)  
10004ff8:	cmp    eax,DWORD PTR ds:[ebp-0x53c8d501]
10004fff:	call   FWORD PTR [edx]
10005001:	sbb    BYTE PTR [ecx+0x370b1aff],bl
10005007:	inc    DWORD PTR [eax]
	...
10005025:	add    BYTE PTR [eax],al
10005027:	add    BYTE PTR [ebp+0x50],dl
1000502a:	mov    al,0xff
1000502c:	pop    ebp
1000502d:	imul   esp,ebx,0xffffffff
10005030:	dec    ecx
10005031:	push   eax
10005032:	sar    bh,cl
10005034:	imul   esp,DWORD PTR [ebp-0x34],0xffffffff
10005038:	jmp    0xf8004e2a
1000503d:	in     al,dx
1000503e:	std    
1000503f:	jmp    esi
10005041:	in     al,dx
10005042:	cld    
10005043:	(bad)  
10005044:	cmp    al,0x48
10005046:	iret   
10005047:	(bad)  
10005048:	(bad)  
10005049:	(bad)  
1000504a:	(bad)  
1000504b:	(bad)  
1000504c:	(bad)  
1000504d:	(bad)  
1000504e:	(bad)  
1000504f:	jmp    ecx
10005051:	jecxz  0x10005046
10005053:	call   FWORD PTR [eax-0x4d002964]
10005059:	mov    bh,0xef
1000505b:	inc    edx
1000505d:	(bad)  
1000505e:	stc    
1000505f:	push   DWORD PTR [eax-0x73000c4c]
10005065:	xchg   edx,eax
10005066:	out    0xff,eax
10005068:	jp     0x10004feb
1000506a:	loope  0x1000506b
1000506c:	ins    WORD PTR es:[edi],dx
1000506e:	fdivr  st,st(7)
10005070:	push   ebx
10005071:	pop    ebx
10005072:	int3   
10005073:	inc    DWORD PTR [ebx+0x4a]
10005076:	mov    ebp,0xae3e38ff
1000507b:	push   DWORD PTR [ecx]
1000507d:	xor    eax,0x3840ff9b
10005082:	mov    bh,bh
10005084:	fs gs mov bh,0xff
10005088:	xchg   edi,eax
10005089:	popf   
1000508a:	out    0xff,eax
1000508c:	jp     0x1000500f
1000508e:	fdivr  st,st(7)
10005090:	push   eax
10005091:	pop    eax
10005092:	sar    bh,0x32
10005095:	cmp    DWORD PTR [eax-0x66d4d101],ebp
1000509b:	inc    DWORD PTR [esi-0x49004a7c]
100050a1:	mov    edx,0xb3afffe6
100050a6:	jecxz  0x100050a7
100050a8:	and    ebp,DWORD PTR [esi]
100050aa:	xchg   ecx,eax
100050ab:	inc    edx
100050ad:	into   
100050ae:	stc    
100050af:	inc    eax
100050b1:	into   
100050b2:	stc    
100050b3:	inc    eax
100050b5:	int    0xf8
100050b7:	(bad)  
100050b8:	cmp    eax,DWORD PTR ds:[esi-0x50c6d301]
100050bf:	call   FWORD PTR [ebx]
100050c1:	sbb    bl,BYTE PTR [ebx+0x380c1bff]
100050c7:	inc    DWORD PTR [eax]
	...
100050e5:	add    BYTE PTR [eax],al
100050e7:	add    BYTE PTR [esi+0x52],dl
100050ea:	mov    dl,0xff
100050ec:	popa   
100050ed:	jno    0x100050d3
100050ef:	dec    DWORD PTR [ebp+0x54]
100050f2:	sar    edi,cl
100050f4:	ins    DWORD PTR es:[edi],dx
100050f5:	data16 into 
100050f7:	(bad)  
100050f8:	jmp    0xfced:0xe9fffdee
100050ff:	(bad)  
10005100:	call   0x51004df2
10005105:	dec    ebx
10005106:	sar    bh,1
10005108:	(bad)  
10005109:	(bad)  
1000510a:	(bad)  
1000510b:	(bad)  
1000510c:	(bad)  
1000510d:	(bad)  
1000510e:	(bad)  
1000510f:	(bad)  
10005110:	(bad)  
10005111:	(bad)  
10005112:	(bad)  
10005113:	jmp    ecx
10005115:	jecxz  0x1000510a
10005117:	call   FWORD PTR [eax-0x4d002964]
1000511d:	mov    bh,0xef
1000511f:	inc    edx
10005121:	(bad)  
10005122:	stc    
10005123:	push   DWORD PTR [eax-0x75000c4c]
10005129:	nop
1000512a:	in     eax,0xff
1000512c:	jns    0x100051ad
1000512e:	fdivp  st(7),st
10005130:	arpl   WORD PTR [edx-0x2f],bp
10005133:	dec    DWORD PTR [esi+0x54]
10005136:	ret    0x3dff
10005139:	inc    ebx
1000513a:	scas   eax,DWORD PTR es:[edi]
1000513b:	dec    DWORD PTR [eax+0x43]
1000513e:	cdq    
1000513f:	jmp    FWORD PTR [esi+0x6e]
10005142:	mov    ecx,0xeda7a1ff
10005147:	dec    DWORD PTR [esi+0x73ffe394]
1000514d:	jp     0x10005124
1000514f:	dec    DWORD PTR [ecx+0x51]
10005152:	mov    ebp,0xb95454ff
10005157:	call   DWORD PTR [eax-0x40004471]
1000515d:	ret    
1000515e:	jmp    0xf6bd0b62
10005163:	push   DWORD PTR [ecx+0x25ffe4b6]
10005169:	das    
1000516a:	xchg   esp,eax
1000516b:	inc    edx
1000516d:	sar    cl,1
1000516f:	inc    edx
10005171:	into   
10005172:	stc    
10005173:	inc    eax
10005175:	int    0xf9
10005177:	(bad)  
10005178:	cmp    eax,DWORD PTR ds:[edi-0x4dc3d101]
1000517f:	call   FWORD PTR [ebx*1+0xc1bff9e]
10005186:	cmp    bh,bh
	...
100051a8:	push   edi
100051a9:	push   ebx
100051aa:	mov    ch,0xff
100051ac:	data16 jne 0x10005194
100051af:	call   DWORD PTR [eax+0x58]
100051b2:	aad    0xff
100051b4:	outs   dx,DWORD PTR ds:[esi]
100051b5:	imul   edx,eax,0xfdf0ebff
100051bb:	(bad)  
100051bc:	jmp    0xfced:0xe9fffdef
100051c3:	inc    DWORD PTR [eax+edx*2-0x2f]
100051c7:	(bad)  
100051c8:	(bad)  
100051c9:	(bad)  
100051ca:	(bad)  
100051cb:	(bad)  
100051cc:	(bad)  
100051cd:	(bad)  
100051ce:	(bad)  
100051cf:	(bad)  
100051d0:	(bad)  
100051d1:	(bad)  
100051d2:	(bad)  
100051d3:	(bad)  
100051d4:	(bad)  
100051d5:	(bad)  
100051d6:	(bad)  
100051d7:	jmp    ecx
100051d9:	jecxz  0x100051ce
100051db:	call   FWORD PTR [eax-0x4d002964]
100051e1:	mov    bh,0xef
100051e3:	inc    edx
100051e5:	(bad)  
100051e6:	stc    
100051e7:	push   DWORD PTR [eax-0x76000c4c]
100051ed:	mov    fs,edx
100051ef:	push   DWORD PTR [ebp+0x7b]
100051f2:	xlat   BYTE PTR ds:[ebx]
100051f3:	call   FWORD PTR [esi+0x63]
100051f6:	(bad)  
100051f7:	dec    DWORD PTR [edi+0x4c]
100051fa:	test   al,0xff
100051fc:	imul   ebp,DWORD PTR [ecx-0x4a],0xf1aea9ff
10005203:	call   FWORD PTR [edx-0x7a001660]
10005209:	mov    esi,ds
1000520b:	jmp    DWORD PTR [ebx+ebp*2-0x33]
1000520f:	call   FWORD PTR [ebx+ebx*2-0x3f]
10005213:	call   FWORD PTR [eax-0x35003f69]
10005219:	int    0xed
1000521b:	inc    edx
1000521d:	(bad)
10005220:	mov    ebx,0xb4ffe8bf
10005225:	mov    eax,0x3024ffe5
1000522a:	cdq    
1000522b:	inc    ebx
1000522d:	sar    ecx,1
1000522f:	inc    ebx
10005231:	iret   
10005232:	stc    
10005233:	inc    edx
10005235:	iret   
10005236:	stc    
10005237:	(bad)  
10005238:	cmp    ecx,DWORD PTR ds:[ecx-0x49c2d001]
1000523f:	call   FWORD PTR [esi]
10005241:	push   ds
10005242:	mov    eax,ds:0x3d0d1cff
10005247:	inc    DWORD PTR [eax]
	...
10005265:	add    BYTE PTR [eax],al
10005267:	add    BYTE PTR [ecx+0x56],bl
1000526a:	mov    bh,0xff
1000526c:	push   0x7a
1000526e:	out    0xff,al
10005270:	push   ebp
10005271:	pop    ebp
10005272:	(bad)  
10005273:	push   DWORD PTR [ecx+0x6c]
10005276:	sar    bh,cl
10005278:	in     eax,dx
10005279:	icebp  
1000527a:	std    
1000527b:	(bad)  
1000527c:	jmp    0x1000526e
1000527e:	std    
1000527f:	(bad)  
10005280:	jmp    0xd153:0x48fffdee
10005287:	(bad)  
10005288:	(bad)  
10005289:	(bad)  
1000528a:	(bad)  
1000528b:	(bad)  
1000528c:	(bad)  
1000528d:	(bad)  
1000528e:	(bad)  
1000528f:	(bad)  
10005290:	(bad)  
10005291:	(bad)  
10005292:	(bad)  
10005293:	(bad)  
10005294:	(bad)  
10005295:	(bad)  
10005296:	(bad)  
10005297:	(bad)  
10005298:	(bad)  
10005299:	(bad)  
1000529a:	(bad)  
1000529b:	jmp    ecx
1000529d:	jecxz  0x10005292
1000529f:	call   FWORD PTR [eax-0x4d002964]
100052a5:	mov    bh,0xef
100052a7:	inc    edx
100052a9:	(bad)  
100052aa:	stc    
100052ab:	push   DWORD PTR [eax-0x7a000c4c]
100052b1:	mov    bl,ah
100052b3:	call   DWORD PTR [ebp+0x52]
100052b6:	mov    ch,0xff
100052b8:	fwait
100052b9:	fwait
100052ba:	into   
100052bb:	jmp    FWORD PTR [ecx-0x5b000e52]
100052c1:	test   eax,0x9993ffee
100052c6:	in     eax,0xff
100052c8:	jp     0x1000524b
100052ca:	aad    0xff
100052cc:	pop    esp
100052cd:	pop    ebx
100052ce:	sar    edi,0x9e
100052d1:	sahf   
100052d2:	(bad)  
100052d5:	xlat   BYTE PTR ds:[ebx]
100052d6:	icebp  
100052d7:	dec    ebp
100052d9:	shr    ch,1
100052db:	inc    ebp
100052dd:	enter  0xffeb,0xbe
100052e1:	ret    0xffe9
100052e4:	mov    bh,0xba
100052e6:	out    0xff,al
100052e8:	and    eax,0xc5ff9d31
100052ed:	sar    cl,cl
100052ef:	inc    esp
100052f1:	sar    ecx,1
100052f3:	inc    edx
100052f5:	iret   
100052f6:	stc    
100052f7:	(bad)  
100052f8:	aas    
100052f9:	cmp    ecx,DWORD PTR [ecx-0x45bfce01]
100052ff:	call   FWORD PTR [edi]
10005301:	and    BYTE PTR [edi+edi*8-0xc0f1e3],ah
	...
10005328:	pop    ebx
10005329:	pop    eax
1000532a:	mov    eax,0xe77e6eff
1000532f:	call   FWORD PTR [eax+0x62]
10005332:	xlat   BYTE PTR ds:[ebx]
10005333:	push   DWORD PTR [esi+ebp*2-0x2d]
10005337:	(bad)  
10005338:	out    dx,al
10005339:	repnz std 
1000533b:	(bad)  
1000533c:	in     eax,dx
1000533d:	icebp  
1000533e:	(bad)  
1000533f:	(bad)  
10005340:	jmp    0x10005332
10005342:	std    
10005343:	dec    DWORD PTR [ebp+0x57]
10005346:	sar    bh,cl
10005348:	(bad)  
10005349:	(bad)  
1000534a:	(bad)  
1000534b:	(bad)  
1000534c:	(bad)  
1000534d:	(bad)  
1000534e:	(bad)  
1000534f:	(bad)  
10005350:	(bad)  
10005351:	(bad)  
10005352:	(bad)  
10005353:	(bad)  
10005354:	(bad)  
10005355:	(bad)  
10005356:	(bad)  
10005357:	(bad)  
10005358:	(bad)  
10005359:	(bad)  
1000535a:	(bad)  
1000535b:	(bad)  
1000535c:	(bad)  
1000535d:	(bad)  
1000535e:	(bad)  
1000535f:	jmp    ecx
10005361:	jecxz  0x10005356
10005363:	call   FWORD PTR [eax-0x4d002964]
10005369:	mov    bh,0xef
1000536b:	jmp    FWORD PTR [edi-0x7c000c4c]
10005371:	test   eax,ebx
10005373:	push   DWORD PTR [edx-0x1e00264e]
10005379:	jecxz  0x1000536e
1000537b:	call   edx
1000537d:	aad    0xf6
1000537f:	call   FWORD PTR [esi-0x7500145c]
10005385:	nop
10005386:	loopne 0x10005387
10005388:	jb     0x10005403
1000538a:	aam    0xff
1000538c:	mov    ah,0xb3
1000538e:	sar    edi,1
10005390:	loopne 0x10005373
10005392:	hlt    
10005393:	(bad)  
10005394:	fcomp  st(1)
10005396:	bnd call eax
10005399:	shr    edi,cl
1000539b:	dec    eax
1000539d:	retf   
1000539e:	in     al,dx
1000539f:	inc    ecx
100053a1:	(bad)  
100053a2:	jmp    0xf7be0da6
100053a7:	jmp    DWORD PTR [esi]
100053a9:	xor    DWORD PTR [edx-0x62d3901],esp
100053af:	inc    ebp
100053b1:	sar    cl,cl
100053b3:	inc    esp
100053b5:	sar    cl,1
100053b7:	inc    DWORD PTR [eax+0x3b]
100053ba:	mov    bh,bh
100053bc:	xor    eax,DWORD PTR [edx-0x43]
100053bf:	jmp    DWORD PTR [ecx]
100053c1:	and    ah,BYTE PTR [edi+0x410f1dff]
100053c7:	inc    DWORD PTR [eax]
	...
100053e5:	add    BYTE PTR [eax],al
100053e7:	add    BYTE PTR [ebp+0x5b],bl
100053ea:	mov    edx,0xe88372ff
100053ef:	call   FWORD PTR [esi+eiz*2-0x27]
100053f3:	push   DWORD PTR [esi+0x71]
100053f6:	aad    0xff
100053f8:	lock repnz std 
100053fb:	(bad)  
100053fc:	out    dx,al
100053fd:	icebp  
100053fe:	std    
100053ff:	(bad)  
10005400:	in     eax,dx
10005401:	icebp  
10005402:	std    
10005403:	call   DWORD PTR [edx+0x5c]
10005406:	sar    edi,cl
10005408:	(bad)  
10005409:	(bad)  
1000540a:	(bad)  
1000540b:	(bad)  
1000540c:	(bad)  
1000540d:	(bad)  
1000540e:	(bad)  
1000540f:	(bad)  
10005410:	(bad)  
10005411:	(bad)  
10005412:	(bad)  
10005413:	(bad)  
10005414:	(bad)  
10005415:	(bad)  
10005416:	(bad)  
10005417:	(bad)  
10005418:	(bad)  
10005419:	(bad)  
1000541a:	(bad)  
1000541b:	(bad)  
1000541c:	(bad)  
1000541d:	(bad)  
1000541e:	(bad)  
1000541f:	(bad)  
10005420:	(bad)  
10005421:	(bad)  
10005422:	(bad)  
10005423:	jmp    ecx
10005425:	jecxz  0x1000541a
10005427:	call   FWORD PTR [eax-0x73002964]
1000542d:	(bad)  
1000542e:	(bad)  
1000542f:	jmp    ecx
10005431:	jecxz  0x10005426
10005433:	(bad)  
10005434:	out    dx,al
10005435:	out    dx,al
10005436:	icebp  
10005437:	(bad)  
10005438:	(bad)  
10005439:	(bad)  
1000543a:	(bad)  
1000543b:	(bad)  
1000543c:	(bad)  
1000543d:	(bad)  
1000543e:	(bad)  
1000543f:	jmp    ecx
10005441:	jecxz  0x10005436
10005443:	call   edx
10005445:	aam    0xf0
10005447:	call   ebx
10005449:	aam    0xee
1000544b:	(bad)  
1000544c:	jmp    0xf5e4:0xe2fff7ea
10005453:	(bad)  
10005454:	fcmovu st,st(4)
10005456:	repz call ebx
10005459:	aad    0xf0
1000545b:	dec    ebx
1000545d:	into   
1000545e:	in     eax,dx
1000545f:	inc    ebx
10005461:	(bad)  
10005462:	jmp    0x10005463
10005464:	mov    esp,0x25ffe8c0
10005469:	xor    DWORD PTR [edi-0x62c3701],esp
1000546f:	inc    esi
10005471:	sar    cl,cl
10005473:	inc    ebp
10005475:	sar    ecx,1
10005477:	(bad)  
10005478:	aas    
10005479:	cmp    al,0x8c
1000547b:	push   DWORD PTR ds:0x22ffc144
10005481:	and    al,0xaa
10005483:	call   FWORD PTR [esi]
10005485:	cmovae edi,edi
	...
100054a8:	pop    esi
100054a9:	pop    ebp
100054aa:	mov    esp,0xe98877ff
100054af:	jmp    DWORD PTR [eax+0x6b]
100054b2:	(bad)  
100054b4:	ja     0x10005529
100054b6:	(bad)  
100054b7:	push   ecx
100054b9:	repz std 
100054bb:	push   eax
100054bd:	repz (bad) 
100054bf:	(bad)  
100054c0:	out    dx,al
100054c1:	repnz (bad) 
100054c3:	call   DWORD PTR [esi+0x60]
100054c6:	aam    0xff
100054c8:	(bad)  
100054c9:	(bad)  
100054ca:	(bad)  
100054cb:	(bad)  
100054cc:	(bad)  
100054cd:	(bad)  
100054ce:	(bad)  
100054cf:	(bad)  
100054d0:	(bad)  
100054d1:	(bad)  
100054d2:	(bad)  
100054d3:	(bad)  
100054d4:	(bad)  
100054d5:	(bad)  
100054d6:	(bad)  
100054d7:	(bad)  
100054d8:	(bad)  
100054d9:	(bad)  
100054da:	(bad)  
100054db:	(bad)  
100054dc:	(bad)  
100054dd:	(bad)  
100054de:	(bad)  
100054df:	(bad)  
100054e0:	(bad)  
100054e1:	(bad)  
100054e2:	(bad)  
100054e3:	(bad)  
100054e4:	(bad)  
100054e5:	(bad)  
100054e6:	(bad)  
100054e7:	(bad)  
100054e8:	(bad)  
100054e9:	(bad)  
100054ea:	(bad)  
100054eb:	(bad)  
100054ec:	(bad)  
100054ed:	(bad)  
100054ee:	(bad)  
100054ef:	(bad)  
100054f0:	(bad)  
100054f1:	(bad)  
100054f2:	(bad)  
100054f3:	(bad)  
100054f4:	(bad)  
100054f5:	(bad)  
100054f6:	(bad)  
100054f7:	(bad)  
100054f8:	(bad)  
100054f9:	(bad)  
100054fa:	(bad)  
100054fb:	(bad)  
100054fc:	(bad)  
100054fd:	(bad)  
100054fe:	(bad)  
100054ff:	(bad)  
10005500:	std    
10005501:	cld    
10005502:	(bad)  
10005503:	push   edi
10005505:	clc    
10005506:	std    
10005507:	push   edx
10005509:	repz cli 
1000550b:	(bad)  
1000550c:	in     al,dx
1000550d:	in     eax,dx
1000550e:	clc    
1000550f:	jmp    ebp
10005511:	out    0xf6,al
10005513:	(bad)  
10005514:	fstp   st(7)
10005516:	hlt    
10005517:	call   esi
10005519:	fdiv   st,st(1)
1000551b:	dec    edi
1000551d:	shr    esi,1
1000551f:	inc    edi
10005521:	leave  
10005522:	jmp    0x10005523
10005524:	mov    edi,0x2dffe8c2
10005529:	cmp    DWORD PTR [esi-0x52a3701],ebp
1000552f:	inc    edi
10005531:	sar    ecx,cl
10005533:	inc    esi
10005535:	sar    dl,cl
10005537:	inc    DWORD PTR [eax+0x3b]
1000553a:	(bad)  
1000553b:	push   DWORD PTR [edi]
1000553d:	inc    edi
1000553e:	(bad)  
10005541:	lods   al,BYTE PTR es:[esi]
10005543:	call   FWORD PTR [edi]
10005545:	adc    BYTE PTR [esi-0x1],al
	...
10005568:	pusha  
10005569:	pop    esi
1000556a:	mov    edi,0xea8c7bff
1000556f:	jmp    DWORD PTR [eax+esi*2-0x24]
10005573:	(bad)  
10005574:	jp     0x100055ec
10005576:	fdivr  st,st(7)
10005578:	repnz cmc 
1000557a:	std    
1000557b:	push   ecx
1000557d:	hlt    
1000557e:	std    
1000557f:	push   eax
10005581:	repz std 
10005583:	call   FWORD PTR [ebx+0x65]
10005586:	aad    0xff
10005588:	(bad)  
10005589:	(bad)  
1000558a:	(bad)  
1000558b:	(bad)  
1000558c:	(bad)  
1000558d:	(bad)  
1000558e:	(bad)  
1000558f:	(bad)  
10005590:	(bad)  
10005591:	(bad)  
10005592:	(bad)  
10005593:	(bad)  
10005594:	(bad)  
10005595:	(bad)  
10005596:	(bad)  
10005597:	(bad)  
10005598:	(bad)  
10005599:	(bad)  
1000559a:	(bad)  
1000559b:	(bad)  
1000559c:	(bad)  
1000559d:	(bad)  
1000559e:	(bad)  
1000559f:	(bad)  
100055a0:	(bad)  
100055a1:	(bad)  
100055a2:	(bad)  
100055a3:	(bad)  
100055a4:	(bad)  
100055a5:	(bad)  
100055a6:	(bad)  
100055a7:	(bad)  
100055a8:	(bad)  
100055a9:	(bad)  
100055aa:	(bad)  
100055ab:	(bad)  
100055ac:	(bad)  
100055ad:	(bad)  
100055ae:	(bad)  
100055af:	(bad)  
100055b0:	(bad)  
100055b1:	(bad)  
100055b2:	(bad)  
100055b3:	(bad)  
100055b4:	(bad)  
100055b5:	(bad)  
100055b6:	(bad)  
100055b7:	(bad)  
100055b8:	(bad)  
100055b9:	(bad)  
100055ba:	(bad)  
100055bb:	(bad)  
100055bc:	(bad)  
100055bd:	(bad)  
100055be:	(bad)  
100055bf:	(bad)  
100055c0:	std    
100055c1:	(bad)  
100055c2:	(bad)  
100055c3:	(bad)  
100055c4:	cli    
100055c5:	cli    
100055c6:	std    
100055c7:	push   ebp
100055c9:	cmc    
100055ca:	sti    
100055cb:	(bad)  
100055cc:	out    dx,eax
100055cd:	out    dx,eax
100055ce:	stc    
100055cf:	jmp    edi
100055d1:	jmp    0xf2e255cd
100055d6:	cmc    
100055d7:	(bad)  
100055d8:	(bad)  
100055da:	bnd call ecx
100055dd:	aam    0xef
100055df:	dec    edx
100055e1:	int3   
100055e2:	in     eax,dx
100055e3:	inc    ecx
100055e5:	(bad)
100055e8:	cmp    al,0x47
100055ea:	mov    bh,0xff
100055ec:	retf   0xf9d5
100055ef:	dec    eax
100055f1:	aam    0xf9
100055f3:	inc    edi
100055f5:	sar    ecx,cl
100055f7:	inc    DWORD PTR [eax+0x3c]
100055fa:	mov    ?,edi
100055fc:	cmp    DWORD PTR [ecx-0x37],ecx
100055ff:	jmp    DWORD PTR [eax+ebp*1]
10005602:	scas   eax,DWORD PTR es:[edi]
10005603:	call   FWORD PTR [edi]
10005605:	adc    DWORD PTR [eax-0x1],ecx
	...
10005628:	bound  esp,QWORD PTR [eax-0x40]
1000562b:	inc    DWORD PTR [eax+0x68ffeb91]
10005631:	je     0x10005610
10005633:	(bad)  
10005634:	jl     0x100056af
10005636:	fcos   
10005638:	hlt    
10005639:	idiv   dh
1000563b:	push   edx
1000563d:	cmc    
1000563e:	(bad)  
1000563f:	push   ecx
10005641:	hlt    
10005642:	std    
10005643:	call   FWORD PTR [edi+0x69]
10005646:	aad    0xff
10005648:	(bad)  
10005649:	(bad)  
1000564a:	(bad)  
1000564b:	(bad)  
1000564c:	(bad)  
1000564d:	(bad)  
1000564e:	(bad)  
1000564f:	(bad)  
10005650:	(bad)  
10005651:	(bad)  
10005652:	(bad)  
10005653:	(bad)  
10005654:	(bad)  
10005655:	(bad)  
10005656:	(bad)  
10005657:	(bad)  
10005658:	(bad)  
10005659:	(bad)  
1000565a:	(bad)  
1000565b:	(bad)  
1000565c:	(bad)  
1000565d:	(bad)  
1000565e:	(bad)  
1000565f:	(bad)  
10005660:	(bad)  
10005661:	(bad)  
10005662:	(bad)  
10005663:	(bad)  
10005664:	(bad)  
10005665:	(bad)  
10005666:	(bad)  
10005667:	(bad)  
10005668:	(bad)  
10005669:	(bad)  
1000566a:	(bad)  
1000566b:	(bad)  
1000566c:	(bad)  
1000566d:	(bad)  
1000566e:	(bad)  
1000566f:	(bad)  
10005670:	(bad)  
10005671:	(bad)  
10005672:	(bad)  
10005673:	(bad)  
10005674:	(bad)  
10005675:	(bad)  
10005676:	(bad)  
10005677:	jmp    FWORD PTR [edi+ebx*1]
1000567a:	jbe    0x1000567b
1000567c:	sub    ah,BYTE PTR [edx]
1000567e:	xchg   esi,eax
1000567f:	(bad)  
10005680:	cmp    BYTE PTR [esi],dh
10005682:	mov    ebp,0x91262fff
10005687:	jmp    FWORD PTR [ebx-0xe002556]
1000568d:	icebp  
1000568e:	cli    
1000568f:	(bad)  
10005690:	jmp    0xf5e4:0xe4fff8ec
10005697:	(bad)  
10005698:	fcmovnu st,st(6)
1000569a:	repz call ebp
1000569d:	xlat   BYTE PTR ds:[ebx]
1000569e:	lock dec ebp
100056a1:	iret   
100056a2:	in     eax,dx
100056a3:	inc    ebp
100056a5:	enter  0xffeb,0x49
100056a9:	push   ebx
100056aa:	mov    ebp,0xfad6cbff
100056af:	dec    edx
100056b1:	aad    0xfa
100056b3:	dec    ecx
100056b5:	aam    0xfa
100056b7:	inc    DWORD PTR [ecx+0x3c]
100056ba:	(bad)  
100056bb:	(bad)  
100056bc:	cmp    ecx,DWORD PTR [ebx-0x34]
100056bf:	jmp    DWORD PTR [esi]
100056c1:	sub    dh,BYTE PTR [ebx+0x4a1220ff]
100056c7:	inc    DWORD PTR [eax]
	...
100056e5:	add    BYTE PTR [eax],al
100056e7:	add    BYTE PTR [ebx+0x63],ah
100056ea:	ret    
100056eb:	inc    DWORD PTR [esi+edx*4+0x796dffec]
100056f2:	(bad)  
100056f4:	jle    0x10005771
100056f6:	(bad)  
100056f8:	cmc    
100056f9:	idiv   dh
100056fb:	push   ebx
100056fd:	idiv   dh
100056ff:	push   edx
10005701:	cmc    
10005702:	(bad)  
10005703:	jmp    DWORD PTR [ebp+0x6d]
10005706:	(bad)  
10005707:	(bad)  
10005708:	(bad)  
10005709:	(bad)  
1000570a:	(bad)  
1000570b:	(bad)  
1000570c:	(bad)  
1000570d:	(bad)  
1000570e:	(bad)  
1000570f:	(bad)  
10005710:	(bad)  
10005711:	(bad)  
10005712:	(bad)  
10005713:	(bad)  
10005714:	(bad)  
10005715:	(bad)  
10005716:	(bad)  
10005717:	(bad)  
10005718:	(bad)  
10005719:	(bad)  
1000571a:	(bad)  
1000571b:	(bad)  
1000571c:	(bad)  
1000571d:	(bad)  
1000571e:	(bad)  
1000571f:	(bad)  
10005720:	(bad)  
10005721:	(bad)  
10005722:	(bad)  
10005723:	(bad)  
10005724:	(bad)  
10005725:	(bad)  
10005726:	(bad)  
10005727:	(bad)  
10005728:	(bad)  
10005729:	(bad)  
1000572a:	(bad)  
1000572b:	(bad)  
1000572c:	(bad)  
1000572d:	(bad)  
1000572e:	(bad)  
1000572f:	(bad)  
10005730:	(bad)  
10005731:	(bad)  
10005732:	(bad)  
10005733:	(bad)  
10005734:	(bad)  
10005735:	(bad)  
10005736:	(bad)  
10005737:	call   DWORD PTR [edi+0x54]
1000573a:	(bad)  
1000573b:	(bad)  
1000573c:	jmp    0x10005729
1000573e:	out    dx,al
1000573f:	dec    ebp
10005741:	fdivr  st,st(1)
10005743:	(bad)  
10005744:	cmp    DWORD PTR [ecx],edi
10005746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005747:	jmp    FWORD PTR [edi]
10005749:	es xchg ecx,eax
1000574b:	jmp    FWORD PTR [ebx-0x12002556]
10005751:	out    dx,al
10005752:	stc    
10005753:	jmp    esi
10005755:	out    0xf6,eax
10005757:	(bad)  
10005758:	fnstsw ax
1000575a:	hlt    
1000575b:	call   edi
1000575d:	fyl2x  
1000575f:	dec    edi
10005761:	shr    dh,cl
10005763:	inc    edi
10005765:	retf   0xffec
10005768:	pop    ebx
10005769:	fs (bad) 
1000576b:	dec    esp
1000576d:	fdivr  st,st(2)
1000576f:	dec    ebx
10005771:	(bad)  
10005772:	cli    
10005773:	dec    ecx
10005775:	aad    0xf9
10005777:	inc    DWORD PTR [ecx+0x3c]
1000577a:	nop
1000577b:	(bad)  
1000577c:	cmp    eax,0x27ffd04d
10005781:	sub    esi,DWORD PTR [esi+0x4c1221ff]
10005787:	inc    DWORD PTR [eax]
	...
100057a5:	add    BYTE PTR [eax],al
100057a7:	add    BYTE PTR [ebp+0x65],ah
100057aa:	(bad)  
100057ab:	dec    DWORD PTR [ecx+0x71ffed9b]
100057b1:	jle    0x10005793
100057b3:	inc    DWORD PTR [ecx-0x9002382]
100057b9:	clc    
100057ba:	(bad)  
100057bb:	push   esp
100057bd:	idiv   esi
100057bf:	push   ebx
100057c1:	idiv   ch
100057c3:	jmp    FWORD PTR [ecx+0x71]
100057c6:	xlat   BYTE PTR ds:[ebx]
100057c7:	(bad)  
100057c8:	(bad)  
100057c9:	(bad)  
100057ca:	(bad)  
100057cb:	(bad)  
100057cc:	(bad)  
100057cd:	(bad)  
100057ce:	(bad)  
100057cf:	(bad)  
100057d0:	(bad)  
100057d1:	(bad)  
100057d2:	(bad)  
100057d3:	dec    ecx
100057d5:	(bad)  
100057d6:	out    0xff,eax
100057d8:	outs   dx,BYTE PTR ds:[esi]
100057d9:	push   0x2c34ffbd
100057de:	lahf   
100057df:	jmp    FWORD PTR [esi]
100057e1:	es cdq 
100057e3:	jmp    DWORD PTR [ebp+ebx*2-0x4f]
100057e7:	inc    eax
100057e9:	mov    ebp,0xffffffdf
100057ee:	(bad)  
100057ef:	(bad)  
100057f0:	(bad)  
100057f1:	(bad)  
100057f2:	(bad)  
100057f3:	(bad)  
100057f4:	(bad)  
100057f5:	(bad)  
100057f6:	(bad)  
100057f7:	push   DWORD PTR [ecx+0x70]
100057fa:	(bad)  
100057fb:	dec    ebp
100057fd:	fdivr  st,st(1)
100057ff:	inc    eax
10005801:	into   
10005802:	stc    
10005803:	dec    DWORD PTR [edi+0x58]
10005806:	iret   
10005807:	(bad)  
10005808:	cmp    DWORD PTR [ecx],edi
1000580a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000580b:	jmp    FWORD PTR [edi]
1000580d:	es xchg ecx,eax
1000580f:	jmp    FWORD PTR [ebx-0x16002556]
10005815:	jmp    0xfff5:0xe3e1fff7
1000581c:	fcmovu st,st(4)
1000581e:	bnd call edx
10005821:	aad    0xf0
10005823:	dec    ebx
10005825:	int    0xed
10005827:	push   DWORD PTR [eax+0x78]
1000582a:	sar    bh,1
1000582c:	into   
1000582d:	fsincos 
1000582f:	dec    esp
10005831:	xlat   BYTE PTR ds:[ebx]
10005832:	stc    
10005833:	dec    esp
10005835:	(bad)  
10005836:	cli    
10005837:	inc    DWORD PTR [ecx+0x3c]
1000583a:	xchg   ecx,eax
1000583b:	(bad)  
1000583c:	ds push eax
1000583e:	aam    0xff
10005840:	sub    DWORD PTR ds:0x1321ffb8,ebp
10005846:	dec    edi
10005847:	inc    DWORD PTR [eax]
	...
10005865:	add    BYTE PTR [eax],al
10005867:	add    BYTE PTR [edi+0x68],ah
1000586a:	(bad)  
1000586b:	dec    DWORD PTR [edi+ebx*4-0x7d8a0012]
10005872:	jecxz  0x10005873
10005874:	add    BYTE PTR [ecx-0x6090022],0xfe
1000587b:	push   ebp
1000587d:	clc    
1000587e:	(bad)  
1000587f:	push   esp
10005881:	idiv   dh
10005883:	jmp    FWORD PTR [ebp+0x76]
10005886:	fdivr  st,st(7)
10005888:	(bad)  
10005889:	(bad)  
1000588a:	(bad)  
1000588b:	(bad)  
1000588c:	(bad)  
1000588d:	(bad)  
1000588e:	(bad)  
1000588f:	dec    esp
10005891:	retf   
10005892:	jmp    0xc64dab96
10005897:	jmp    DWORD PTR [edi]
10005899:	and    eax,0x2322ffb0
1000589e:	mov    cl,0xff
100058a0:	sbb    edx,DWORD PTR [edi]
100058a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100058a3:	call   FWORD PTR [ecx]
100058a5:	setb   bh
100058a8:	cmp    al,0x33
100058aa:	sahf   
100058ab:	inc    eax
100058ad:	mov    ebp,0xffffffdf
100058b2:	(bad)  
100058b3:	(bad)  
100058b4:	(bad)  
100058b5:	(bad)  
100058b6:	(bad)  
100058b7:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
100058be:	icebp  
100058bf:	call   FWORD PTR [ecx+0x7dffea9f]
100058c5:	xchg   edi,edi
100058c7:	dec    DWORD PTR [edi+0x58]
100058ca:	iret   
100058cb:	(bad)  
100058cc:	cmp    DWORD PTR [ecx],edi
100058ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100058cf:	jmp    FWORD PTR [edi]
100058d1:	es xchg ecx,eax
100058d3:	jmp    FWORD PTR [ebx-0x1b002556]
100058d9:	out    0xf5,al
100058db:	(bad)  
100058dc:	fstp   st(7)
100058de:	hlt    
100058df:	call   esi
100058e1:	xlat   BYTE PTR ds:[ebx]
100058e2:	lock dec ebp
100058e5:	shr    dh,1
100058e7:	inc    DWORD PTR [ecx-0x30002776]
100058ed:	(bad)  
100058ef:	dec    ebp
100058f1:	fsqrt  
100058f3:	dec    esp
100058f5:	fdivr  st,st(2)
100058f7:	inc    DWORD PTR [edx+0x3b]
100058fa:	xchg   edx,eax
100058fb:	inc    DWORD PTR [ecx+0x51]
100058fe:	xlat   BYTE PTR ds:[ebx]
100058ff:	jmp    FWORD PTR [edx]
10005901:	das    
10005902:	mov    ebx,0x511322ff
10005907:	inc    DWORD PTR [eax]
	...
10005925:	add    BYTE PTR [eax],al
10005927:	add    BYTE PTR [eax+0x6a],ch
1000592a:	leave  
1000592b:	call   DWORD PTR [ecx+0x78ffefa5]
10005931:	xchg   ah,ah
10005933:	inc    DWORD PTR [ebx+eax*4-0x6080021]
1000593a:	(bad)  
1000593b:	push   edi
1000593d:	clc    
1000593e:	(bad)  
1000593f:	push   ebp
10005941:	idiv   esi
10005943:	push   DWORD PTR [edx+0x79]
10005946:	fdivr  st,st(7)
10005948:	(bad)  
10005949:	(bad)  
1000594a:	(bad)  
1000594b:	(bad)  
1000594c:	(bad)  
1000594d:	(bad)  
1000594e:	(bad)  
1000594f:	(bad)  
10005950:	jge    0x100059cb
10005952:	enter  0x55ff,0x54
10005956:	(bad)  
10005957:	call   DWORD PTR [ecx+0x59]
1000595a:	fdivr  st,st(7)
1000595c:	ss ds iret 
1000595f:	call   FWORD PTR [eax]
10005961:	sbb    eax,0x508ffb9
10005966:	popf   
10005967:	call   FWORD PTR [eax]
10005969:	adc    BYTE PTR [edx-0x4ea29b01],dl
1000596f:	(bad)  
10005970:	(bad)  
10005971:	(bad)  
10005972:	(bad)  
10005973:	(bad)  
10005974:	(bad)  
10005975:	(bad)  
10005976:	(bad)  
10005977:	(bad)  
10005978:	(bad)  
1000597a:	stc    
1000597b:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005982:	icebp  
10005983:	call   FWORD PTR [ecx+0x7dffea9f]
10005989:	xchg   edi,edi
1000598b:	dec    DWORD PTR [edi+0x58]
1000598e:	iret   
1000598f:	(bad)  
10005990:	cmp    DWORD PTR [ecx],edi
10005992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005993:	jmp    FWORD PTR [edi]
10005995:	es xchg ecx,eax
10005997:	jmp    FWORD PTR [ebx-0x20002556]
1000599d:	loop   0x10005993
1000599f:	(bad)  
100059a0:	fcomp  st(2)
100059a2:	icebp  
100059a3:	call   ecx
100059a5:	shr    edi,cl
100059a7:	call   DWORD PTR [ebx+ebx*4-0x242f0021]
100059ae:	cli    
100059af:	dec    edi
100059b1:	fsqrt  
100059b3:	dec    ebp
100059b5:	fdivr  st,st(2)
100059b7:	inc    DWORD PTR [edx+0x3b]
100059ba:	xchg   esp,eax
100059bb:	inc    DWORD PTR [ebx+0x54]
100059be:	(bad)  
100059c0:	sub    esi,DWORD PTR [ecx]
100059c2:	mov    esi,0x541422ff
100059c7:	inc    DWORD PTR [eax]
	...
100059e5:	add    BYTE PTR [eax],al
100059e7:	add    BYTE PTR [edx+0x6b],ch
100059ea:	retf   0x95ff
100059ed:	test   al,0xf0
100059ef:	(bad)  
100059f0:	jl     0x1000597d
100059f2:	in     eax,0xff
100059f4:	xchg   DWORD PTR [esi-0x507001e],eax
100059fa:	(bad)  
100059fb:	(bad)  
100059fc:	clc    
100059fd:	stc    
100059fe:	(bad)  
100059ff:	push   edi
10005a01:	clc    
10005a02:	(bad)  
10005a03:	push   DWORD PTR [esi+0x7e]
10005a06:	fcos   
10005a08:	(bad)  
10005a09:	(bad)  
10005a0a:	(bad)  
10005a0b:	(bad)  
10005a0c:	(bad)  
10005a0d:	(bad)  
10005a0e:	(bad)  
10005a0f:	dec    DWORD PTR [ebx+0x45]
10005a12:	mov    bl,0xff
10005a14:	jg     0x10005998
10005a16:	loope  0x10005a17
10005a18:	cwde   
10005a19:	mov    eax,ds:0x7d74fff7
10005a1e:	in     al,dx
10005a1f:	(bad)  
10005a20:	cmp    al,0x45
10005a22:	aad    0xff
10005a24:	push   ss
10005a25:	sbb    edi,DWORD PTR [eax-0x5be7e401]
10005a2b:	jmp    FWORD PTR [esi]
10005a2d:	es cdq 
10005a2f:	(bad)  
10005a30:	(bad)  
10005a31:	(bad)  
10005a32:	(bad)  
10005a33:	(bad)  
10005a34:	(bad)  
10005a35:	(bad)  
10005a36:	(bad)  
10005a37:	(bad)  
10005a38:	(bad)  
10005a39:	(bad)  
10005a3a:	(bad)  
10005a3b:	(bad)  
10005a3c:	(bad)  
10005a3e:	stc    
10005a3f:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005a46:	icebp  
10005a47:	call   FWORD PTR [ecx+0x7dffea9f]
10005a4d:	xchg   edi,edi
10005a4f:	dec    DWORD PTR [edi+0x58]
10005a52:	iret   
10005a53:	(bad)  
10005a54:	cmp    DWORD PTR [ecx],edi
10005a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005a57:	jmp    FWORD PTR [edi]
10005a59:	es xchg ecx,eax
10005a5b:	jmp    FWORD PTR [ebx-0x24002556]
10005a61:	(bad)  
10005a63:	call   esp
10005a65:	aad    0xf0
10005a67:	jmp    FWORD PTR [ebp-0x2d00174d]
10005a6d:	fdiv   st(3),st
10005a6f:	call   eax
10005a71:	(bad)  
10005a73:	dec    edi
10005a75:	fsqrt  
10005a77:	inc    DWORD PTR [edx+0x3b]
10005a7a:	xchg   esp,eax
10005a7b:	inc    DWORD PTR [ebp+0x56]
10005a7e:	(bad)  
10005a80:	sub    al,0x32
10005a82:	ret    0x23ff
10005a85:	adc    al,0x56
10005a87:	inc    DWORD PTR [eax]
	...
10005aa5:	add    BYTE PTR [eax],al
10005aa7:	add    BYTE PTR [ebx+0x6d],ch
10005aaa:	int    0xff
10005aac:	cdq    
10005aad:	scas   al,BYTE PTR es:[edi]
10005aae:	icebp  
10005aaf:	inc    DWORD PTR [eax-0x76001971]
10005ab5:	mov    bl,ah
10005ab7:	(bad)  
10005ab8:	cli    
10005ab9:	sti    
10005aba:	(bad)  
10005abb:	(bad)  
10005abc:	stc    
10005abd:	cli    
10005abe:	(bad)  
10005abf:	(bad)  
10005ac0:	clc    
10005ac1:	cli    
10005ac2:	(bad)  
10005ac3:	(bad)  
10005ac4:	jp     0x10005a47
10005ac6:	(bad)  
10005ac8:	(bad)  
10005ac9:	(bad)  
10005aca:	(bad)  
10005acb:	(bad)  
10005acc:	(bad)  
10005acd:	(bad)  
10005ace:	(bad)  
10005acf:	call   DWORD PTR [ecx+0x4c]
10005ad2:	mov    dh,0xff
10005ad4:	mov    BYTE PTR [ebx-0x464c001e],cl
10005ada:	stc    
10005adb:	jmp    FWORD PTR [ecx+0x6bfff8b0]
10005ae1:	je     0x10005acd
10005ae3:	push   DWORD PTR [eax]
10005ae5:	aaa    
10005ae6:	into   
10005ae7:	jmp    DWORD PTR [edx]
10005ae9:	and    al,0xb1
10005aeb:	push   DWORD PTR [esp+ebp*1]
10005aee:	lahf   
10005aef:	(bad)  
10005af0:	(bad)  
10005af1:	(bad)  
10005af2:	(bad)  
10005af3:	(bad)  
10005af4:	(bad)  
10005af5:	(bad)  
10005af6:	(bad)  
10005af7:	(bad)  
10005af8:	(bad)  
10005af9:	(bad)  
10005afa:	(bad)  
10005afb:	(bad)  
10005afc:	(bad)  
10005afd:	(bad)  
10005afe:	(bad)  
10005aff:	(bad)  
10005b00:	(bad)  
10005b02:	stc    
10005b03:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005b0a:	icebp  
10005b0b:	call   FWORD PTR [ecx+0x7dffea9f]
10005b11:	xchg   edi,edi
10005b13:	dec    DWORD PTR [edi+0x58]
10005b16:	iret   
10005b17:	(bad)  
10005b18:	cmp    DWORD PTR [ecx],edi
10005b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005b1b:	jmp    FWORD PTR [edi]
10005b1d:	es xchg ecx,eax
10005b1f:	jmp    FWORD PTR [ebx-0x29002556]
10005b25:	fyl2x  
10005b27:	dec    esi
10005b29:	shr    dh,cl
10005b2b:	call   ebx
10005b2d:	fdiv   st(2),st
10005b2f:	call   edx
10005b31:	fdiv   st(3),st
10005b33:	call   eax
10005b35:	(bad)  
10005b37:	inc    DWORD PTR [ebx+0x3c]
10005b3a:	xchg   esi,eax
10005b3b:	inc    DWORD PTR [esi+0x58]
10005b3e:	loop   0x10005b3f
10005b40:	sub    eax,0x24ffc434
10005b45:	push   ss
10005b46:	push   edi
10005b47:	inc    DWORD PTR [eax]
	...
10005b65:	add    BYTE PTR [eax],al
10005b67:	add    BYTE PTR [ebp+0x6f],ch
10005b6a:	into   
10005b6b:	call   FWORD PTR [ebp-0x7c000d4f]
10005b71:	xchg   esp,eax
10005b72:	out    0xff,eax
10005b74:	mov    ecx,DWORD PTR [ebx-0x404001b]
10005b7a:	(bad)  
10005b7b:	(bad)  
10005b7c:	stc    
10005b7d:	sti    
10005b7e:	(bad)  
10005b7f:	(bad)  
10005b80:	stc    
10005b81:	cli    
10005b82:	(bad)  
10005b83:	(bad)  
10005b84:	jle    0x10005b0b
10005b86:	(bad)  
10005b88:	(bad)  
10005b89:	(bad)  
10005b8a:	(bad)  
10005b8b:	(bad)  
10005b8c:	(bad)  
10005b8d:	(bad)  
10005b8e:	(bad)  
10005b8f:	inc    DWORD PTR [esi+0x69ffcc81]
10005b95:	addr16 retf 
10005b97:	call   FWORD PTR [eax-0x51001664]
10005b9d:	mov    ch,0xf9
10005b9f:	(bad)  
10005ba0:	jns    0x10005b26
10005ba2:	hlt    
10005ba3:	(bad)  
10005ba4:	cmp    al,BYTE PTR [ecx-0x2a]
10005ba7:	jmp    DWORD PTR [edi]
10005ba9:	daa    
10005baa:	mov    al,0xff
10005bac:	outs   dx,BYTE PTR ds:[esi]
10005bad:	imul   edi,DWORD PTR [ebp-0x1],0xffffffff
10005bb7:	(bad)  
10005bb8:	(bad)  
10005bb9:	(bad)  
10005bba:	(bad)  
10005bbb:	(bad)  
10005bbc:	(bad)  
10005bbd:	(bad)  
10005bbe:	(bad)  
10005bbf:	(bad)  
10005bc0:	(bad)  
10005bc1:	(bad)  
10005bc2:	(bad)  
10005bc3:	(bad)  
10005bc4:	(bad)  
10005bc6:	stc    
10005bc7:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005bce:	icebp  
10005bcf:	call   FWORD PTR [ecx+0x7dffea9f]
10005bd5:	xchg   edi,edi
10005bd7:	dec    DWORD PTR [edi+0x58]
10005bda:	iret   
10005bdb:	(bad)  
10005bdc:	cmp    DWORD PTR [ecx],edi
10005bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005bdf:	jmp    FWORD PTR [edi]
10005be1:	es xchg ecx,eax
10005be3:	jmp    FWORD PTR [ebx-0x2d002556]
10005be9:	aam    0xf0
10005beb:	call   esp
10005bed:	(bad)  
10005bef:	call   ebx
10005bf1:	(bad)  
10005bf3:	call   edx
10005bf5:	fdiv   st(2),st
10005bf7:	inc    DWORD PTR [ebx+0x3c]
10005bfa:	xchg   edi,eax
10005bfb:	dec    DWORD PTR [eax+0x5b]
10005bfe:	in     eax,0xff
10005c00:	das    
10005c01:	ss (bad) 
10005c03:	jmp    DWORD PTR [esi+edx*1]
10005c06:	pop    ecx
10005c07:	inc    DWORD PTR [eax]
	...
10005c25:	add    BYTE PTR [eax],al
10005c27:	add    BYTE PTR [edi+0x71],ch
10005c2a:	sar    bh,1
10005c2c:	mov    eax,ds:0x87fff2b6
10005c31:	xchg   edi,eax
10005c32:	jmp    0xf58eea36
10005c37:	(bad)  
10005c38:	sti    
10005c39:	cld    
10005c3a:	(bad)  
10005c3b:	(bad)  
10005c3c:	sti    
10005c3d:	cld    
10005c3e:	(bad)  
10005c3f:	(bad)  
10005c40:	stc    
10005c41:	cli    
10005c42:	(bad)  
10005c43:	inc    DWORD PTR [edx-0x2578]
10005c49:	(bad)  
10005c4a:	(bad)  
10005c4b:	(bad)  
10005c4c:	(bad)  
10005c4d:	(bad)  
10005c4e:	(bad)  
10005c4f:	call   edx
10005c51:	shr    ah,1
10005c53:	jmp    FWORD PTR [ecx+0x64]
10005c56:	sar    bh,0x6a
10005c59:	addr16 retf 
10005c5b:	inc    DWORD PTR [edi+eax*4+0x6c68ffe2]
10005c62:	fdivp  st(7),st
10005c64:	inc    edi
10005c65:	inc    esi
10005c66:	(bad)  
10005c67:	call   DWORD PTR [ebx+0x4e]
10005c6a:	mov    dh,0xff
10005c6c:	leave  
10005c6d:	(bad)  
10005c6e:	out    0xff,eax
10005c70:	(bad)  
10005c71:	(bad)  
10005c72:	(bad)  
10005c73:	(bad)  
10005c74:	(bad)  
10005c75:	(bad)  
10005c76:	(bad)  
10005c77:	(bad)  
10005c78:	(bad)  
10005c79:	(bad)  
10005c7a:	(bad)  
10005c7b:	(bad)  
10005c7c:	(bad)  
10005c7d:	(bad)  
10005c7e:	(bad)  
10005c7f:	(bad)  
10005c80:	(bad)  
10005c81:	(bad)  
10005c82:	(bad)  
10005c83:	(bad)  
10005c84:	(bad)  
10005c85:	(bad)  
10005c86:	(bad)  
10005c87:	(bad)  
10005c88:	(bad)  
10005c8a:	stc    
10005c8b:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005c92:	icebp  
10005c93:	call   FWORD PTR [ecx+0x7dffea9f]
10005c99:	xchg   edi,edi
10005c9b:	dec    DWORD PTR [edi+0x58]
10005c9e:	iret   
10005c9f:	(bad)  
10005ca0:	cmp    DWORD PTR [ecx],edi
10005ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005ca3:	jmp    FWORD PTR [edi]
10005ca5:	es xchg ecx,eax
10005ca7:	call   DWORD PTR [ebp-0x29002567]
10005cad:	(bad)  
10005caf:	call   ebp
10005cb1:	fdivp  st(3),st
10005cb3:	call   ebx
10005cb5:	(bad)  
10005cb7:	inc    DWORD PTR [ebx+0x3c]
10005cba:	cwde   
10005cbb:	dec    DWORD PTR [edx+0x5d]
10005cbe:	call   0xda388dc2
10005cc3:	jmp    DWORD PTR ds:0xff5c16
	...
10005ce5:	add    BYTE PTR [eax],al
10005ce7:	add    BYTE PTR [eax+0x73],dh
10005cea:	sar    edi,1
10005cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005ced:	mov    ebx,0x9c8bfff4
10005cf2:	jmp    0xfcff:0xe78f8fff
10005cf9:	cld    
10005cfa:	(bad)  
10005cfb:	(bad)  
10005cfc:	cld    
10005cfd:	std    
10005cfe:	(bad)  
10005cff:	(bad)  
10005d00:	cli    
10005d01:	sti    
10005d02:	(bad)  
10005d03:	inc    DWORD PTR [ebp-0x2475]
10005d09:	(bad)  
10005d0a:	(bad)  
10005d0b:	(bad)  
10005d0c:	(bad)  
10005d0d:	(bad)  
10005d0e:	(bad)  
10005d0f:	(bad)  
10005d10:	(bad)  
10005d11:	(bad)  
10005d12:	(bad)  
10005d13:	call   edx
10005d15:	shr    ah,1
10005d17:	inc    DWORD PTR [esi+0x51ffcc81]
10005d1d:	dec    esp
10005d1e:	mov    dh,0xff
10005d20:	dec    ebx
10005d21:	inc    esi
10005d22:	mov    bl,0xff
10005d24:	jge    0x10005d9f
10005d26:	enter  0xccff,0xcb
10005d2a:	jmp    0x10005d2e
10005d2f:	(bad)  
10005d30:	(bad)  
10005d31:	(bad)  
10005d32:	(bad)  
10005d33:	(bad)  
10005d34:	(bad)  
10005d35:	(bad)  
10005d36:	(bad)  
10005d37:	(bad)  
10005d38:	(bad)  
10005d39:	(bad)  
10005d3a:	(bad)  
10005d3b:	(bad)  
10005d3c:	(bad)  
10005d3d:	(bad)  
10005d3e:	(bad)  
10005d3f:	(bad)  
10005d40:	(bad)  
10005d41:	(bad)  
10005d42:	(bad)  
10005d43:	(bad)  
10005d44:	(bad)  
10005d45:	(bad)  
10005d46:	(bad)  
10005d47:	(bad)  
10005d48:	(bad)  
10005d49:	(bad)  
10005d4a:	(bad)  
10005d4b:	(bad)  
10005d4c:	(bad)  
10005d4e:	stc    
10005d4f:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005d56:	icebp  
10005d57:	call   FWORD PTR [ecx+0x7dffea9f]
10005d5d:	xchg   edi,edi
10005d5f:	dec    DWORD PTR [edi+0x58]
10005d62:	iret   
10005d63:	call   DWORD PTR [edi]
10005d65:	or     dh,BYTE PTR [eax-0x1]
10005d68:	pop    ss
10005d69:	or     dh,BYTE PTR [eax-0x1]
10005d6c:	xchg   ebp,eax
10005d6d:	cdq    
10005d6e:	(bad)  
10005d70:	xlat   BYTE PTR ds:[ebx]
10005d71:	(bad)  
10005d73:	call   esp
10005d75:	fdivp  st(3),st
10005d77:	inc    DWORD PTR [ebx+0x3c]
10005d7a:	cdq    
10005d7b:	dec    DWORD PTR [edi+ebx*2-0x14]
10005d7f:	push   DWORD PTR [edx]
10005d81:	cmp    cl,ah
10005d83:	jmp    DWORD PTR ds:0xff5e17
	...
10005da5:	add    BYTE PTR [eax],al
10005da7:	add    BYTE PTR [ecx+0x74],dh
10005daa:	aam    0xff
10005dac:	test   eax,0x8efff4be
10005db1:	lahf   
10005db2:	in     al,dx
10005db3:	call   DWORD PTR [eax-0x200176f]
10005db9:	(bad)  
10005dba:	(bad)  
10005dbb:	(bad)  
10005dbc:	std    
10005dbd:	cld    
10005dbe:	(bad)  
10005dbf:	(bad)  
10005dc0:	cld    
10005dc1:	cld    
10005dc2:	(bad)  
10005dc3:	inc    DWORD PTR [edi-0x2372]
10005dc9:	(bad)  
10005dca:	(bad)  
10005dcb:	(bad)  
10005dcc:	(bad)  
10005dcd:	(bad)  
10005dce:	(bad)  
10005dcf:	(bad)  
10005dd0:	(bad)  
10005dd1:	(bad)  
10005dd2:	(bad)  
10005dd3:	(bad)  
10005dd4:	(bad)  
10005dd5:	(bad)  
10005dd6:	(bad)  
10005dd7:	(bad)  
10005dd8:	(bad)  
10005dd9:	(bad)  
10005dda:	(bad)  
10005ddb:	(bad)  
10005ddc:	(bad)  
10005ddd:	(bad)  
10005dde:	(bad)  
10005ddf:	(bad)  
10005de0:	(bad)  
10005de1:	(bad)  
10005de2:	(bad)  
10005de3:	(bad)  
10005de4:	(bad)  
10005de5:	(bad)  
10005de6:	(bad)  
10005de7:	(bad)  
10005de8:	(bad)  
10005de9:	(bad)  
10005dea:	(bad)  
10005deb:	(bad)  
10005dec:	(bad)  
10005ded:	(bad)  
10005dee:	(bad)  
10005def:	(bad)  
10005df0:	(bad)  
10005df1:	(bad)  
10005df2:	(bad)  
10005df3:	(bad)  
10005df4:	(bad)  
10005df5:	(bad)  
10005df6:	(bad)  
10005df7:	(bad)  
10005df8:	(bad)  
10005df9:	(bad)  
10005dfa:	(bad)  
10005dfb:	(bad)  
10005dfc:	(bad)  
10005dfd:	(bad)  
10005dfe:	(bad)  
10005dff:	(bad)  
10005e00:	(bad)  
10005e01:	(bad)  
10005e02:	(bad)  
10005e03:	(bad)  
10005e04:	(bad)  
10005e05:	(bad)  
10005e06:	(bad)  
10005e07:	(bad)  
10005e08:	(bad)  
10005e09:	(bad)  
10005e0a:	(bad)  
10005e0b:	(bad)  
10005e0c:	(bad)  
10005e0d:	(bad)  
10005e0e:	(bad)  
10005e0f:	(bad)  
10005e10:	(bad)  
10005e12:	stc    
10005e13:	dec    DWORD PTR [ebx+ecx*4-0x3e42002c]
10005e1a:	icebp  
10005e1b:	call   FWORD PTR [ecx+0x38ffea9f]
10005e21:	xor    BYTE PTR [eax-0x50c9be01],bl
10005e27:	call   FWORD PTR [ecx]
10005e29:	setb   bh
10005e2c:	pop    ss
10005e2d:	or     dh,BYTE PTR [eax-0x1]
10005e30:	xchg   ebp,eax
10005e31:	cdq    
10005e32:	(bad)  
10005e34:	(bad)  
10005e35:	(bad)  
10005e37:	inc    DWORD PTR [esp+edi*1-0x67]
10005e3b:	dec    DWORD PTR [esi+0x61]
10005e3e:	out    dx,eax
10005e3f:	push   DWORD PTR [edx]
10005e41:	cmp    ecx,esi
10005e43:	jmp    DWORD PTR [esi]
10005e45:	sbb    BYTE PTR [eax-0x1],ah
	...
10005e68:	jae    0x10005ee1
10005e6a:	aad    0xff
10005e6c:	stos   DWORD PTR es:[edi],eax
10005e6d:	ret    0xfff5
10005e70:	xchg   ecx,eax
10005e71:	mov    ds:0x9392ffec,eax
10005e76:	jmp    0xfdff:0xfffefeff
10005e7d:	(bad)  
10005e7e:	(bad)  
10005e7f:	(bad)  
10005e80:	cld    
10005e81:	std    
10005e82:	(bad)  
10005e83:	dec    DWORD PTR [edx-0x2370]
10005e89:	(bad)  
10005e8a:	(bad)  
10005e8b:	(bad)  
10005e8c:	(bad)  
10005e8d:	(bad)  
10005e8e:	(bad)  
10005e8f:	(bad)  
10005e90:	(bad)  
10005e91:	(bad)  
10005e92:	(bad)  
10005e93:	(bad)  
10005e94:	(bad)  
10005e95:	(bad)  
10005e96:	(bad)  
10005e97:	(bad)  
10005e98:	(bad)  
10005e99:	(bad)  
10005e9a:	(bad)  
10005e9b:	(bad)  
10005e9c:	(bad)  
10005e9d:	(bad)  
10005e9e:	(bad)  
10005e9f:	(bad)  
10005ea0:	(bad)  
10005ea1:	(bad)  
10005ea2:	(bad)  
10005ea3:	(bad)  
10005ea4:	(bad)  
10005ea5:	(bad)  
10005ea6:	(bad)  
10005ea7:	(bad)  
10005ea8:	(bad)  
10005ea9:	(bad)  
10005eaa:	(bad)  
10005eab:	(bad)  
10005eac:	(bad)  
10005ead:	(bad)  
10005eae:	(bad)  
10005eaf:	(bad)  
10005eb0:	(bad)  
10005eb1:	(bad)  
10005eb2:	(bad)  
10005eb3:	(bad)  
10005eb4:	(bad)  
10005eb5:	(bad)  
10005eb6:	(bad)  
10005eb7:	(bad)  
10005eb8:	(bad)  
10005eb9:	(bad)  
10005eba:	(bad)  
10005ebb:	(bad)  
10005ebc:	(bad)  
10005ebd:	(bad)  
10005ebe:	(bad)  
10005ebf:	(bad)  
10005ec0:	(bad)  
10005ec1:	(bad)  
10005ec2:	(bad)  
10005ec3:	(bad)  
10005ec4:	(bad)  
10005ec5:	(bad)  
10005ec6:	(bad)  
10005ec7:	(bad)  
10005ec8:	(bad)  
10005ec9:	(bad)  
10005eca:	(bad)  
10005ecb:	(bad)  
10005ecc:	(bad)  
10005ecd:	(bad)  
10005ece:	(bad)  
10005ecf:	(bad)  
10005ed0:	(bad)  
10005ed1:	(bad)  
10005ed2:	(bad)  
10005ed3:	(bad)  
10005ed4:	(bad)  
10005ed6:	stc    
10005ed7:	dec    DWORD PTR [ebx+ecx*4+0x3038ffd4]
10005ede:	cwde   
10005edf:	jmp    DWORD PTR [esp+ebx*2-0x43]
10005ee3:	jmp    DWORD PTR [ebx+0x63]
10005ee6:	fdivr  st,st(7)
10005ee8:	inc    esi
10005ee9:	cmp    al,0xb7
10005eeb:	call   FWORD PTR [ecx]
10005eed:	setb   bh
10005ef0:	xor    ecx,DWORD PTR ds:[eax-0x41f2701]
10005ef7:	inc    DWORD PTR [esp+edi*1-0x66]
10005efb:	dec    DWORD PTR [edi+0x62]
10005efe:	icebp  
10005eff:	push   DWORD PTR [ebx]
10005f01:	cmp    al,0xd1
10005f03:	jmp    DWORD PTR [edi]
10005f05:	sbb    BYTE PTR [ecx-0x1],ah
	...
10005f28:	je     0x10005fa2
10005f2a:	xlat   BYTE PTR ds:[ebx]
10005f2b:	jmp    FWORD PTR [edi-0x6b00093b]
10005f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10005f32:	out    dx,al
10005f33:	call   DWORD PTR [ebx-0x100156b]
10005f39:	(bad)  
10005f3a:	(bad)  
10005f3b:	(bad)  
10005f3c:	(bad)  
10005f3d:	(bad)  
10005f3e:	(bad)  
10005f3f:	(bad)  
10005f40:	std    
10005f41:	(bad)  
10005f42:	(bad)  
10005f43:	dec    DWORD PTR [edx+edx*4-0x6e750024]
10005f4a:	fdiv   st(7),st
10005f4c:	mov    DWORD PTR [eax-0x72780024],edx
10005f52:	(bad)  
10005f54:	test   DWORD PTR [ebx-0x757c0026],ecx
10005f5a:	(bad)  
10005f5c:	add    BYTE PTR [edi-0x7a820026],0xda
10005f63:	(bad)  
10005f64:	jp     0x10005ee8
10005f66:	(bad)  
10005f68:	js     0x10005eea
10005f6a:	fcos   
10005f6c:	jne    0x10005feb
10005f6e:	fcos   
10005f70:	jae    0x10005fec
10005f72:	fdivr  st,st(7)
10005f74:	jns    0x10005ef7
10005f76:	(bad)  
10005f78:	or     BYTE PTR [edx-0x686e0023],0xe1
10005f7f:	jmp    DWORD PTR [ecx-0x4c001a5a]
10005f85:	mov    bh,0xeb
10005f87:	inc    ebp
10005f89:	enter  0xfff0,0xd7
10005f8d:	fxtract 
10005f8f:	jmp    edi
10005f91:	call   0xfbe75f8f
10005f96:	cld    
10005f97:	(bad)  
10005f98:	(bad)  
10005f9a:	stc    
10005f9b:	dec    DWORD PTR [ebx+ecx*4-0x6d6d002c]
10005fa2:	loope  0x10005fa3
10005fa4:	add    DWORD PTR [ecx+0x6363ffe3],0x2c35ffd8
10005fae:	mov    bh,0xff
10005fb0:	xchg   ebp,eax
10005fb1:	xchg   ebx,eax
10005fb2:	retf   
10005fb3:	(bad)  
10005fb4:	(bad)  
10005fb6:	cld    
10005fb7:	inc    DWORD PTR [esp+edi*1-0x65]
10005fbb:	call   DWORD PTR [eax+0x64]
10005fbe:	cmc    
10005fbf:	push   DWORD PTR [edi*1+0x1928ffd2]
10005fc6:	arpl   di,di
	...
10005fe8:	jne    0x10006064
10005fea:	fdivr  st,st(7)
10005fec:	mov    dl,0xc9
10005fee:	idiv   bh
10005ff0:	xchg   esi,eax
10005ff1:	test   eax,0x9795ffef
10005ff6:	in     al,dx
10005ff7:	(bad)  
10005ff8:	(bad)  
10005ff9:	(bad)  
10005ffa:	(bad)  
10005ffb:	(bad)  
10005ffc:	(bad)  
10005ffd:	(bad)  
10005ffe:	(bad)  
10005fff:	(bad)  
10006000:	std    
10006001:	(bad)  
10006002:	(bad)  
10006003:	(bad)  
10006004:	std    
10006005:	std    
10006006:	(bad)  
10006007:	(bad)  
10006008:	cld    
10006009:	std    
1000600a:	(bad)  
1000600b:	(bad)  
1000600c:	sti    
1000600d:	cld    
1000600e:	(bad)  
1000600f:	(bad)  
10006010:	sti    
10006011:	sti    
10006012:	(bad)  
10006013:	(bad)  
10006014:	stc    
10006015:	sti    
10006016:	(bad)  
10006017:	(bad)  
10006018:	stc    
10006019:	cli    
1000601a:	(bad)  
1000601b:	(bad)  
1000601c:	clc    
1000601d:	stc    
1000601e:	(bad)  
1000601f:	push   esi
10006021:	clc    
10006022:	(bad)  
10006023:	push   ebp
10006025:	clc    
10006026:	(bad)  
10006027:	push   ebp
10006029:	idiv   esi
1000602b:	push   ebx
1000602d:	cmc    
1000602e:	(bad)  
1000602f:	push   edx
10006031:	cmc    
10006032:	(bad)  
10006033:	push   ecx
10006035:	hlt    
10006036:	(bad)  
10006037:	push   eax
10006039:	repnz (bad) 
1000603b:	(bad)  
1000603c:	out    dx,al
1000603d:	repnz std 
1000603f:	(bad)  
10006040:	in     eax,dx
10006041:	lock std 
10006043:	(bad)  
10006044:	jmp    0x10006036
10006046:	std    
10006047:	(bad)  
10006048:	jmp    0xfcee:0xe9fffdef
1000604f:	jmp    edi
10006051:	in     eax,dx
10006052:	std    
10006053:	jmp    esi
10006055:	jmp    0x10006053
10006057:	jmp    ebp
10006059:	jmp    0xfffc:0xe9e3fffc
10006060:	mov    WORD PTR [ebx-0x6d6d002c],cs
10006066:	loope  0x10006067
10006068:	outs   dx,BYTE PTR ds:[esi]
10006069:	outs   dx,BYTE PTR ds:[esi]
1000606a:	sar    edi,cl
1000606c:	xchg   edx,eax
1000606d:	xchg   ebx,eax
1000606e:	fdiv   st(7),st
10006070:	fsubr  st(4),st
10006072:	sti    
10006073:	(bad)  
10006074:	(bad)  
10006076:	cld    
10006077:	inc    DWORD PTR [esp+edi*1-0x64]
1000607b:	call   DWORD PTR [ecx+0x65]
1000607e:	idiv   edi
10006080:	xor    eax,0x27ffd53f
10006085:	sbb    DWORD PTR [esi-0x1],esp
	...
100060a8:	ja     0x10006125
100060aa:	fcos   
100060ac:	mov    ch,0xcc
100060ae:	idiv   edi
100060b0:	cdq    
100060b1:	lods   al,BYTE PTR ds:[esi]
100060b2:	lock call DWORD PTR [esi-0x1267]
100060b9:	(bad)  
100060ba:	(bad)  
100060bb:	(bad)  
100060bc:	(bad)  
100060bd:	(bad)  
100060be:	(bad)  
100060bf:	(bad)  
100060c0:	(bad)  
100060c1:	(bad)  
100060c2:	(bad)  
100060c3:	(bad)  
100060c4:	(bad)  
100060c5:	(bad)  
100060c6:	(bad)  
100060c7:	(bad)  
100060c8:	std    
100060c9:	(bad)  
100060ca:	(bad)  
100060cb:	(bad)  
100060cc:	cld    
100060cd:	std    
100060ce:	(bad)  
100060cf:	(bad)  
100060d0:	cld    
100060d1:	cld    
100060d2:	(bad)  
100060d3:	(bad)  
100060d4:	sti    
100060d5:	sti    
100060d6:	(bad)  
100060d7:	(bad)  
100060d8:	stc    
100060d9:	cli    
100060da:	(bad)  
100060db:	(bad)  
100060dc:	clc    
100060dd:	cli    
100060de:	(bad)  
100060df:	(bad)  
100060e0:	clc    
100060e1:	cli    
100060e2:	(bad)  
100060e3:	push   esi
100060e5:	clc    
100060e6:	(bad)  
100060e7:	push   ebp
100060e9:	idiv   edi
100060eb:	push   ebp
100060ed:	idiv   esi
100060ef:	push   ebx
100060f1:	idiv   dh
100060f3:	push   edx
100060f5:	cmc    
100060f6:	std    
100060f7:	push   ecx
100060f9:	hlt    
100060fa:	std    
100060fb:	push   eax
100060fd:	repz std 
100060ff:	(bad)  
10006100:	out    dx,eax
10006101:	repnz (bad) 
10006103:	(bad)  
10006104:	in     eax,dx
10006105:	lock std 
10006107:	(bad)  
10006108:	in     al,dx
10006109:	out    dx,eax
1000610a:	std    
1000610b:	(bad)  
1000610c:	jmp    0xfded:0xe9fffdee
10006113:	(bad)  
10006114:	call   0xf7005f06
10006119:	jmp    0x10006118
1000611b:	jmp    esp
1000611d:	jmp    0xfffc:0xe9e3fffc
10006124:	lods   eax,DWORD PTR ds:[esi]
10006125:	lods   al,BYTE PTR ds:[esi]
10006126:	loopne 0x10006127
10006128:	int3   
10006129:	into   
1000612a:	lock (bad) 
1000612c:	(bad)  
1000612e:	cld    
1000612f:	(bad)  
10006130:	fucom  st(5)
10006132:	cld    
10006133:	(bad)  
10006134:	fsubr  st(3),st
10006136:	cld    
10006137:	inc    DWORD PTR [esp+edi*1-0x63]
1000613b:	call   DWORD PTR [ebx+0x67]
1000613e:	cli    
1000613f:	push   DWORD PTR [esi]
10006141:	inc    eax
10006142:	xlat   BYTE PTR ds:[ebx]
10006143:	jmp    FWORD PTR [eax]
10006145:	sbb    ah,BYTE PTR [edi-0x1]
	...
10006168:	js     0x100061e6
1000616a:	(bad)  
1000616c:	mov    bh,0xcf
1000616e:	idiv   edi
10006170:	fwait
10006171:	scas   al,BYTE PTR es:[edi]
10006172:	icebp  
10006173:	call   DWORD PTR [edi-0x1266]
10006179:	(bad)  
1000617a:	(bad)  
1000617b:	(bad)  
1000617c:	(bad)  
1000617d:	(bad)  
1000617e:	(bad)  
1000617f:	(bad)  
10006180:	(bad)  
10006181:	(bad)  
10006182:	(bad)  
10006183:	(bad)  
10006184:	(bad)  
10006185:	(bad)  
10006186:	(bad)  
10006187:	(bad)  
10006188:	(bad)  
10006189:	(bad)  
1000618a:	(bad)  
1000618b:	(bad)  
1000618c:	std    
1000618d:	(bad)  
1000618e:	(bad)  
1000618f:	(bad)  
10006190:	cld    
10006191:	std    
10006192:	(bad)  
10006193:	(bad)  
10006194:	cld    
10006195:	cld    
10006196:	(bad)  
10006197:	(bad)  
10006198:	cli    
10006199:	sti    
1000619a:	(bad)  
1000619b:	(bad)  
1000619c:	cli    
1000619d:	sti    
1000619e:	(bad)  
1000619f:	(bad)  
100061a0:	stc    
100061a1:	cli    
100061a2:	(bad)  
100061a3:	push   edi
100061a5:	stc    
100061a6:	(bad)  
100061a7:	push   edi
100061a9:	clc    
100061aa:	(bad)  
100061ab:	push   esi
100061ad:	clc    
100061ae:	(bad)  
100061af:	push   esp
100061b1:	idiv   esi
100061b3:	push   ebx
100061b5:	cmc    
100061b6:	(bad)  
100061b7:	push   edx
100061b9:	cmc    
100061ba:	std    
100061bb:	push   eax
100061bd:	hlt    
100061be:	std    
100061bf:	(bad)  
100061c0:	out    dx,eax
100061c1:	repz std 
100061c3:	(bad)  
100061c4:	out    dx,al
100061c5:	repnz std 
100061c7:	(bad)  
100061c8:	in     eax,dx
100061c9:	icebp  
100061ca:	(bad)  
100061cb:	(bad)  
100061cc:	jmp    0x100061be
100061ce:	std    
100061cf:	(bad)  
100061d0:	jmp    0x100061c1
100061d2:	std    
100061d3:	(bad)  
100061d4:	jmp    0xf9005ec7
100061d9:	in     eax,dx
100061da:	std    
100061db:	jmp    esi
100061dd:	jmp    0x100061dc
100061df:	jmp    esp
100061e1:	jmp    0x100061df
100061e3:	jmp    esp
100061e5:	jmp    0xf8e361e6
100061ea:	cld    
100061eb:	jmp    eax
100061ed:	out    0xfb,eax
100061ef:	(bad)  
100061f0:	(bad)  
100061f2:	cld    
100061f3:	(bad)  
100061f4:	fsubrp st(4),st
100061f6:	cld    
100061f7:	inc    DWORD PTR [ebp+0x3c]
100061fa:	sahf   
100061fb:	call   DWORD PTR [eax+ebp*2-0x4]
100061ff:	push   DWORD PTR [edi]
10006201:	inc    ecx
10006202:	fdivr  st,st(7)
10006204:	sub    DWORD PTR [ebx],ebx
10006206:	push   0xff
	...
10006227:	add    BYTE PTR [eax+0x7e],bh
1000622a:	fdiv   st(7),st
1000622c:	mov    edx,0x9efff8d1
10006231:	mov    cl,0xf2
10006233:	call   FWORD PTR [eax-0x68001165]
10006239:	call   0xffec:0x9896ffee
10006240:	xchg   ebp,eax
10006241:	xchg   esi,eax
10006242:	jmp    0x10006243
10006244:	xchg   ebx,eax
10006245:	xchg   ebp,eax
10006246:	jmp    0x10006247
10006248:	xchg   edx,eax
10006249:	xchg   esp,eax
1000624a:	jmp    0x8fff:0xe89291ff
10006251:	(bad)  
10006252:	out    0xff,eax
10006254:	lea    ecx,[ebp-0x7474001b]
1000625a:	in     al,0xff
1000625c:	mov    DWORD PTR [eax-0x7978001d],ecx
10006262:	loope  0x10006263
10006264:	test   DWORD PTR [ebx-0x7e7c0020],eax
1000626a:	fdivp  st(7),st
1000626c:	cmp    BYTE PTR [esi-0x24],0xff
10006270:	jle    0x100062ee
10006272:	(bad)  
10006274:	jl     0x100062ef
10006276:	fcos   
10006278:	jns    0x100062f0
1000627a:	xlat   BYTE PTR ds:[ebx]
1000627b:	push   DWORD PTR [edi+0x73]
1000627e:	(bad)  
1000627f:	push   DWORD PTR [ebp+0x71]
10006282:	aam    0xff
10006284:	je     0x100062f4
10006286:	sar    edi,cl
10006288:	jno    0x100062f6
1000628a:	sar    bh,cl
1000628c:	outs   dx,DWORD PTR ds:[esi]
1000628d:	imul   ecx,edi,0xcf666dff
10006293:	jmp    FWORD PTR [ebx+0x64]
10006296:	int    0xff
10006298:	push   0x62
1000629a:	retf   
1000629b:	jmp    FWORD PTR [eax+0x5f]
1000629e:	retf   0x66ff
100062a1:	pop    ebp
100062a2:	leave  
100062a3:	jmp    DWORD PTR [ebp+0x5b]
100062a6:	enter  0x62ff,0x5a
100062aa:	(bad)  
100062ab:	jmp    DWORD PTR [edx+0x58]
100062ae:	(bad)  
100062b1:	push   esi
100062b2:	vmaxsd xmm2,xmm0,QWORD PTR [ebp-0x3c]
100062b7:	call   FWORD PTR [esi+0x54]
100062ba:	ret    
100062bb:	call   DWORD PTR [ebp+0x69]
100062be:	(bad)  
100062bf:	push   DWORD PTR [edi]
100062c1:	inc    edx
100062c2:	(bad)  
100062c4:	sub    DWORD PTR [edx],ebx
100062c6:	push   0xffffffff
	...
100062e8:	jns    0x10006369
100062ea:	(bad)  
100062ec:	mov    esp,0x9ffff8d4
100062f1:	mov    bl,0xf2
100062f3:	call   FWORD PTR [edi-0x61000d4d]
100062f9:	mov    al,0xf1
100062fb:	call   FWORD PTR [ebx-0x67000f52]
10006301:	stos   DWORD PTR es:[edi],eax
10006302:	lock call DWORD PTR [esi-0x6c001057]
10006309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000630a:	out    dx,al
1000630b:	call   DWORD PTR [eax-0x7300125f]
10006311:	sahf   
10006312:	jmp    0x10006313
10006314:	mov    DWORD PTR [edx-0x6a7a0017],ebx
1000631a:	call   0xf791e51e
1000631f:	(bad)  
10006320:	jle    0x100062ae
10006322:	in     eax,0xff
10006324:	jns    0x100062ae
10006326:	in     al,0xff
10006328:	jne    0x100062ad
1000632a:	jecxz  0x1000632b
1000632c:	jno    0x100063ad
1000632e:	loope  0x1000632f
10006330:	ins    DWORD PTR es:[edi],dx
10006331:	jp     0x10006312
10006333:	jmp    FWORD PTR [ecx+0x75]
10006336:	(bad)  
10006338:	outs   dx,DWORD PTR gs:[esi]
1000633a:	fdiv   st(7),st
1000633c:	pusha  
1000633d:	push   0xffffffdb
1000633f:	call   FWORD PTR [esi+eiz*2-0x27]
10006343:	call   DWORD PTR [edi+0x61]
10006346:	fdivr  st,st(7)
10006348:	push   ebx
10006349:	pop    esp
1000634a:	aad    0xff
1000634c:	push   eax
1000634d:	push   edi
1000634e:	aam    0xff
10006350:	dec    ebx
10006351:	push   ebx
10006352:	sar    bh,cl
10006354:	inc    edi
10006355:	dec    esi
10006356:	sar    edi,1
10006358:	inc    ebx
10006359:	dec    ecx
1000635a:	sar    bh,1
1000635c:	inc    eax
1000635d:	inc    ebp
1000635e:	into   
1000635f:	(bad)  
10006360:	cmp    eax,0x39ffcd41
10006365:	ds int3 
10006367:	push   DWORD PTR [esi]
10006369:	cmp    cl,dl
1000636b:	push   DWORD PTR [ebx]
1000636d:	ss retf 0x30ff
10006371:	xor    ecx,eax
10006373:	jmp    FWORD PTR [esi]
10006375:	xor    edi,eax
10006377:	jmp    FWORD PTR [esi+ebp*1]
1000637a:	(bad)  
1000637b:	jmp    FWORD PTR [edx]
1000637d:	sub    al,0xc6
1000637f:	(bad)  
10006380:	cmp    BYTE PTR [ebx-0x25],al
10006383:	jmp    FWORD PTR [ecx]
10006385:	sbb    ebp,DWORD PTR [ebx-0x1]
	...
100063a8:	jp     0x1000632a
100063aa:	fdivp  st(7),st
100063ac:	mov    esi,0xbefff9d6
100063b1:	(bad)  
100063b2:	stc    
100063b3:	(bad)  
100063b4:	mov    esp,0xbafff8d4
100063b9:	sar    al,cl
100063bb:	push   DWORD PTR [edi-0x4a000831]
100063c1:	retf   
100063c2:	idiv   edi
100063c4:	mov    cl,0xc7
100063c6:	idiv   edi
100063c8:	scas   al,BYTE PTR es:[edi]
100063c9:	(bad)
100063cc:	stos   BYTE PTR es:[edi],al
100063cd:	shl    esp,0xff
100063d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100063d1:	mov    esp,0xb8a3fff4
100063d6:	repz call FWORD PTR [edi-0x65000d4d]
100063dd:	scas   eax,DWORD PTR es:[edi]
100063de:	icebp  
100063df:	call   DWORD PTR [esi-0x6d000f55]
100063e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100063e6:	out    dx,eax
100063e7:	dec    DWORD PTR [ebp-0x76001160]
100063ed:	fwait
100063ee:	in     eax,dx
100063ef:	inc    DWORD PTR [edi+edx*4-0x6e7f0014]
100063f6:	jmp    0x100063f7
100063f8:	jnp    0x10006386
100063fa:	jmp    0x71ff:0xe98777ff
10006401:	sub    al,0xff
10006404:	ins    DWORD PTR es:[edi],dx
10006405:	jge    0x100063ee
10006407:	jmp    FWORD PTR [eax+0x78]
1000640a:	out    0xff,al
1000640c:	fs je  0x100063f4
1000640f:	jmp    DWORD PTR [eax+0x6f]
10006412:	in     al,0xff
10006414:	pop    esp
10006415:	push   0xffffffe3
10006417:	call   FWORD PTR [eax+0x65]
1000641a:	loop   0x1000641b
1000641c:	push   ebx
1000641d:	popa   
1000641e:	loope  0x1000641f
10006420:	push   eax
10006421:	pop    ebp
10006422:	loope  0x10006423
10006424:	dec    ebx
10006425:	pop    ecx
10006426:	(bad)  
10006428:	dec    eax
10006429:	push   ebp
1000642a:	(bad)  
1000642c:	inc    esp
1000642d:	push   ecx
1000642e:	fdivp  st(7),st
10006430:	inc    edx
10006431:	dec    esi
10006432:	(bad)  
10006434:	aas    
10006435:	dec    edx
10006436:	(bad)  
10006438:	cmp    eax,0x3affdc48
1000643d:	inc    ebp
1000643e:	(bad)  
10006440:	cmp    BYTE PTR [ebx-0x25],al
10006443:	jmp    FWORD PTR [edx]
10006445:	sbb    ebp,DWORD PTR [edi+edi*8+0x0]
	...
10006465:	add    BYTE PTR [eax],al
10006467:	add    BYTE PTR [ebx-0x7f],bh
1000646a:	(bad)  
1000646c:	jnp    0x100063ef
1000646e:	(bad)  
10006470:	jp     0x100063f2
10006472:	(bad)  
10006474:	jp     0x100064f5
10006476:	(bad)  
10006478:	js     0x100064f8
1000647a:	fdiv   st(7),st
1000647c:	ja     0x100064fb
1000647e:	(bad)  
10006480:	ja     0x100064fd
10006482:	fcos   
10006484:	jbe    0x10006500
10006486:	fdivr  st,st(7)
10006488:	je     0x10006502
1000648a:	(bad)  
1000648b:	push   DWORD PTR [edx+0x76]
1000648e:	aad    0xff
10006490:	jno    0x10006507
10006492:	sar    edi,cl
10006494:	jo     0x10006509
10006496:	sar    edi,1
10006498:	outs   dx,BYTE PTR ds:[esi]
10006499:	jno    0x1000646a
1000649b:	jmp    FWORD PTR [edi+ebp*2-0x32]
1000649f:	jmp    FWORD PTR [ebx+0x6c]
100064a2:	int3   
100064a3:	jmp    FWORD PTR [ecx+0x6b]
100064a6:	leave  
100064a7:	jmp    FWORD PTR [eax+0x68]
100064aa:	enter  0x66ff,0x67
100064ae:	(bad)  
100064af:	jmp    DWORD PTR [esp+eiz*2-0x3c]
100064b3:	jmp    DWORD PTR [ebx+0x62]
100064b6:	sar    edi,0x61
100064b9:	pusha  
100064ba:	mov    edi,0xbd5e5fff
100064bf:	call   FWORD PTR [ebp+0x5b]
100064c2:	mov    esp,0xb9595cff
100064c7:	call   FWORD PTR [edx+0x56]
100064ca:	mov    bh,0xff
100064cc:	pop    eax
100064cd:	push   ebp
100064ce:	mov    ch,0xff
100064d0:	push   esi
100064d1:	push   edx
100064d2:	mov    bl,0xff
100064d4:	push   ebp
100064d5:	push   eax
100064d6:	mov    cl,0xff
100064d8:	push   esp
100064d9:	dec    esi
100064da:	scas   eax,DWORD PTR es:[edi]
100064db:	call   DWORD PTR [edx+0x4c]
100064de:	scas   al,BYTE PTR es:[edi]
100064df:	call   DWORD PTR [eax+0x4b]
100064e2:	lods   al,BYTE PTR ds:[esi]
100064e3:	dec    DWORD PTR [edi+0x48]
100064e6:	stos   BYTE PTR es:[edi],al
100064e7:	dec    DWORD PTR [ebp+0x47]
100064ea:	test   al,0xff
100064ec:	dec    esp
100064ed:	inc    ebp
100064ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100064ef:	dec    DWORD PTR [ebx+0x44]
100064f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100064f3:	dec    DWORD PTR [ecx+0x42]
100064f6:	mov    ds:0xa24149ff,eax
100064fb:	inc    DWORD PTR [edi+0x3f]
100064fe:	mov    eax,ds:0xa03e47ff
10006503:	inc    DWORD PTR [ebp+0x3d]
10006506:	lahf   
10006507:	inc    DWORD PTR [eax]
	...
10006815:	add    BYTE PTR [eax],al
10006817:	add    bh,bh
10006819:	(bad)  
1000681a:	(bad)  
1000681b:	(bad)  
1000681c:	(bad)  
1000681d:	inc    DWORD PTR [eax]
1000681f:	add    bh,bh
10006821:	(bad)  
10006822:	(bad)  
10006823:	(bad)  
10006824:	(bad)  
10006825:	inc    DWORD PTR [eax]
10006827:	add    bh,bh
10006829:	(bad)  
1000682a:	(bad)  
1000682b:	(bad)  
1000682c:	(bad)  
1000682d:	inc    DWORD PTR [eax]
1000682f:	add    bh,bh
10006831:	(bad)  
10006832:	(bad)  
10006833:	(bad)  
10006834:	(bad)  
10006835:	inc    DWORD PTR [eax]
10006837:	add    al,dh
10006839:	add    BYTE PTR [eax],al
1000683b:	add    BYTE PTR [eax],al
1000683d:	sldt   WORD PTR [eax]
10006840:	lock add BYTE PTR [eax],al
10006843:	add    BYTE PTR [eax],al
10006845:	sldt   WORD PTR [eax]
10006848:	lock add BYTE PTR [eax],al
1000684b:	add    BYTE PTR [eax],al
1000684d:	sldt   WORD PTR [eax]
10006850:	lock add BYTE PTR [eax],al
10006853:	add    BYTE PTR [eax],al
10006855:	sldt   WORD PTR [eax]
10006858:	lock add BYTE PTR [eax],al
1000685b:	add    BYTE PTR [eax],al
1000685d:	sldt   WORD PTR [eax]
10006860:	lock add BYTE PTR [eax],al
10006863:	add    BYTE PTR [eax],al
10006865:	sldt   WORD PTR [eax]
10006868:	lock add BYTE PTR [eax],al
1000686b:	add    BYTE PTR [eax],al
1000686d:	sldt   WORD PTR [eax]
10006870:	lock add BYTE PTR [eax],al
10006873:	add    BYTE PTR [eax],al
10006875:	sldt   WORD PTR [eax]
10006878:	lock add BYTE PTR [eax],al
1000687b:	add    BYTE PTR [eax],al
1000687d:	sldt   WORD PTR [eax]
10006880:	lock add BYTE PTR [eax],al
10006883:	add    BYTE PTR [eax],al
10006885:	sldt   WORD PTR [eax]
10006888:	lock add BYTE PTR [eax],al
1000688b:	add    BYTE PTR [eax],al
1000688d:	sldt   WORD PTR [eax]
10006890:	lock add BYTE PTR [eax],al
10006893:	add    BYTE PTR [eax],al
10006895:	sldt   WORD PTR [eax]
10006898:	lock add BYTE PTR [eax],al
1000689b:	add    BYTE PTR [eax],al
1000689d:	sldt   WORD PTR [eax]
100068a0:	lock add BYTE PTR [eax],al
100068a3:	add    BYTE PTR [eax],al
100068a5:	sldt   WORD PTR [eax]
100068a8:	lock add BYTE PTR [eax],al
100068ab:	add    BYTE PTR [eax],al
100068ad:	sldt   WORD PTR [eax]
100068b0:	lock add BYTE PTR [eax],al
100068b3:	add    BYTE PTR [eax],al
100068b5:	sldt   WORD PTR [eax]
100068b8:	lock add BYTE PTR [eax],al
100068bb:	add    BYTE PTR [eax],al
100068bd:	sldt   WORD PTR [eax]
100068c0:	lock add BYTE PTR [eax],al
100068c3:	add    BYTE PTR [eax],al
100068c5:	sldt   WORD PTR [eax]
100068c8:	lock add BYTE PTR [eax],al
100068cb:	add    BYTE PTR [eax],al
100068cd:	sldt   WORD PTR [eax]
100068d0:	lock add BYTE PTR [eax],al
100068d3:	add    BYTE PTR [eax],al
100068d5:	sldt   WORD PTR [eax]
100068d8:	lock add BYTE PTR [eax],al
100068db:	add    BYTE PTR [eax],al
100068dd:	sldt   WORD PTR [eax]
100068e0:	lock add BYTE PTR [eax],al
100068e3:	add    BYTE PTR [eax],al
100068e5:	sldt   WORD PTR [eax]
100068e8:	lock add BYTE PTR [eax],al
100068eb:	add    BYTE PTR [eax],al
100068ed:	sldt   WORD PTR [eax]
100068f0:	lock add BYTE PTR [eax],al
100068f3:	add    BYTE PTR [eax],al
100068f5:	sldt   WORD PTR [eax]
100068f8:	lock add BYTE PTR [eax],al
100068fb:	add    BYTE PTR [eax],al
100068fd:	sldt   WORD PTR [eax]
10006900:	lock add BYTE PTR [eax],al
10006903:	add    BYTE PTR [eax],al
10006905:	sldt   WORD PTR [eax]
10006908:	lock add BYTE PTR [eax],al
1000690b:	add    BYTE PTR [eax],al
1000690d:	sldt   WORD PTR [eax]
10006910:	lock add BYTE PTR [eax],al
10006913:	add    BYTE PTR [eax],al
10006915:	sldt   WORD PTR [eax]
10006918:	lock add BYTE PTR [eax],al
1000691b:	add    BYTE PTR [eax],al
1000691d:	sldt   WORD PTR [eax]
10006920:	lock add BYTE PTR [eax],al
10006923:	add    BYTE PTR [eax],al
10006925:	sldt   WORD PTR [eax]
10006928:	lock add BYTE PTR [eax],al
1000692b:	add    BYTE PTR [eax],al
1000692d:	sldt   WORD PTR [eax]
10006930:	lock add BYTE PTR [eax],al
10006933:	add    BYTE PTR [eax],al
10006935:	sldt   WORD PTR [eax]
10006938:	lock add BYTE PTR [eax],al
1000693b:	add    BYTE PTR [eax],al
1000693d:	sldt   WORD PTR [eax]
10006940:	lock add BYTE PTR [eax],al
10006943:	add    BYTE PTR [eax],al
10006945:	sldt   WORD PTR [eax]
10006948:	lock add BYTE PTR [eax],al
1000694b:	add    BYTE PTR [eax],al
1000694d:	sldt   WORD PTR [eax]
10006950:	lock add BYTE PTR [eax],al
10006953:	add    BYTE PTR [eax],al
10006955:	sldt   WORD PTR [eax]
10006958:	lock add BYTE PTR [eax],al
1000695b:	add    BYTE PTR [eax],al
1000695d:	sldt   WORD PTR [eax]
10006960:	lock add BYTE PTR [eax],al
10006963:	add    BYTE PTR [eax],al
10006965:	sldt   WORD PTR [eax]
10006968:	lock add BYTE PTR [eax],al
1000696b:	add    BYTE PTR [eax],al
1000696d:	sldt   WORD PTR [eax]
10006970:	lock add BYTE PTR [eax],al
10006973:	add    BYTE PTR [eax],al
10006975:	sldt   WORD PTR [eax]
10006978:	(bad)  
10006979:	(bad)  
1000697a:	(bad)  
1000697b:	(bad)  
1000697c:	(bad)  
1000697d:	inc    DWORD PTR [eax]
1000697f:	add    bh,bh
10006981:	(bad)  
10006982:	(bad)  
10006983:	(bad)  
10006984:	(bad)  
10006985:	inc    DWORD PTR [eax]
10006987:	add    bh,bh
10006989:	(bad)  
1000698a:	(bad)  
1000698b:	(bad)  
1000698c:	(bad)  
1000698d:	inc    DWORD PTR [eax]
1000698f:	add    bh,bh
10006991:	(bad)  
10006992:	(bad)  
10006993:	(bad)  
10006994:	(bad)  
10006995:	inc    DWORD PTR [eax]
10006997:	add    BYTE PTR [eax],ch
10006999:	add    BYTE PTR [eax],al
1000699b:	add    BYTE PTR [eax],ah
1000699d:	add    BYTE PTR [eax],al
1000699f:	add    BYTE PTR [eax+0x0],al
100069a2:	add    BYTE PTR [eax],al
100069a4:	add    DWORD PTR [eax],eax
100069a6:	and    BYTE PTR [eax],al
	...
10006ac8:	inc    ebp
10006ac9:	cmp    al,0x9e
10006acb:	jmp    FWORD PTR [ecx]
10006acd:	sbb    ch,BYTE PTR [edi+edi*8+0x29]
10006ad1:	sbb    ch,BYTE PTR [ebx-0x1]
10006ad4:	sub    BYTE PTR [edx],bl
10006ad6:	push   0xffffffff
10006ad8:	daa    
10006ad9:	sbb    DWORD PTR [eax-0x1],ebp
10006adc:	sub    BYTE PTR [ecx],bl
10006ade:	jmp    WORD PTR [esi]
10006ae1:	pop    ss
10006ae2:	jmp    DWORD PTR fs:[esi]
10006ae5:	adc    eax,0x1524ff62
10006aea:	pop    esi
10006aeb:	jmp    DWORD PTR [esi]
10006aed:	adc    eax,0x1324ff5d
10006af2:	pop    ecx
10006af3:	jmp    DWORD PTR [edx]
10006af5:	adc    edx,DWORD PTR [esi-0x1]
10006af8:	and    al,0x11
10006afa:	push   esp
10006afb:	jmp    DWORD PTR [ecx]
10006afd:	cmovle edi,edi
10006b00:	and    DWORD PTR [edi],ecx
10006b02:	dec    esp
10006b03:	jmp    DWORD PTR [eax]
10006b05:	cmovp  edi,edi
10006b08:	and    DWORD PTR [edi],ecx
10006b0a:	inc    edi
10006b0b:	call   FWORD PTR ds:0x1dff430c
10006b11:	or     al,0x3f
10006b13:	call   FWORD PTR [ecx+ecx*1]
10006b16:	call   FWORD PTR ds:[edx]
10006b19:	or     DWORD PTR [eax],edi
10006b1b:	call   DWORD PTR [edi]
10006b1d:	or     DWORD PTR [edi+edi*8],esi
10006b20:	pop    ss
10006b21:	or     DWORD PTR [ebx],esi
10006b23:	call   DWORD PTR ds:0x15ff3006
10006b29:	push   es
10006b2a:	sub    al,0xff
10006b2c:	adc    eax,0x13ff2b06
10006b31:	push   es
10006b32:	daa    
10006b33:	call   DWORD PTR ds:0xff2506
	...
10006b45:	add    BYTE PTR [eax],al
10006b47:	add    BYTE PTR [ecx+0x3e],cl
10006b4a:	mov    al,ds:0xdb4338ff
10006b4f:	(bad)  
10006b50:	cmp    BYTE PTR [ebx-0x25],al
10006b53:	(bad)  
10006b54:	cmp    BYTE PTR [ebx-0x25],al
10006b57:	(bad)  
10006b58:	cmp    BYTE PTR [ebx-0x25],al
10006b5b:	push   DWORD PTR [edi]
10006b5d:	inc    ecx
10006b5e:	fcos   
10006b60:	xor    al,0x3e
10006b62:	fdivr  st,st(7)
10006b64:	xor    bh,BYTE PTR [edx*8-0x2cc8d001]
10006b6b:	jmp    FWORD PTR [esp+esi*1]
10006b6e:	sar    bh,1
10006b70:	sub    DWORD PTR [eax],esi
10006b72:	int    0xff
10006b74:	es cs retf 0x24ff
10006b79:	sub    bh,al
10006b7b:	call   FWORD PTR [edi]
10006b7d:	and    eax,0x201affc3
10006b82:	sar    edi,0x17
10006b85:	sbb    al,0xbe
10006b87:	call   DWORD PTR [ebx]
10006b89:	sbb    DWORD PTR [ebx-0x4aecee01],edi
10006b8f:	dec    DWORD PTR [edi]
10006b91:	imul   edi,edi
10006b94:	adc    DWORD PTR [edi],ecx
10006b96:	stos   BYTE PTR es:[edi],al
10006b97:	call   DWORD PTR [ecx]
10006b99:	bt     edi,edi
10006b9c:	adc    DWORD PTR [edi],ecx
10006b9e:	popf   
10006b9f:	call   DWORD PTR [ecx]
10006ba1:	or     al,0x98
10006ba3:	call   DWORD PTR [ecx]
10006ba5:	or     al,0x93
10006ba7:	dec    DWORD PTR [edi]
10006ba9:	or     al,0x8d
10006bab:	dec    DWORD PTR [edi]
10006bad:	or     al,0x88
10006baf:	call   DWORD PTR [ecx]
10006bb1:	or     al,0x84
10006bb3:	call   DWORD PTR [ebx]
10006bb5:	push   es
10006bb6:	daa    
10006bb7:	inc    DWORD PTR [eax]
	...
10006bc5:	add    BYTE PTR [eax],al
10006bc7:	add    BYTE PTR [eax+0x3f],cl
10006bca:	mov    eax,ds:0xdd493cff
10006bcf:	call   FWORD PTR [esi+0x54]
10006bd2:	ret    
10006bd3:	inc    DWORD PTR [ebp+0x3c]
10006bd6:	sahf   
10006bd7:	inc    DWORD PTR [ebp+0x3c]
10006bda:	sahf   
10006bdb:	inc    DWORD PTR [ebp+0x3c]
10006bde:	popf   
10006bdf:	inc    DWORD PTR [ebp+0x3c]
10006be2:	pushf  
10006be3:	inc    DWORD PTR [esp+edi*1-0x65]
10006be7:	inc    DWORD PTR [esp+edi*1-0x66]
10006beb:	inc    DWORD PTR [ebx+0x3c]
10006bee:	cwde   
10006bef:	inc    DWORD PTR [ebx+0x3c]
10006bf2:	xchg   esi,eax
10006bf3:	inc    DWORD PTR [edx+0x3c]
10006bf6:	xchg   ebp,eax
10006bf7:	inc    DWORD PTR [edx+0x3c]
10006bfa:	xchg   ebx,eax
10006bfb:	inc    DWORD PTR [edx+0x3c]
10006bfe:	xchg   ecx,eax
10006bff:	inc    DWORD PTR [ecx+0x3c]
10006c02:	(bad)  
10006c03:	inc    DWORD PTR [eax+0x3c]
10006c06:	mov    ?,edi
10006c08:	aas    
10006c09:	cmp    ecx,DWORD PTR [edi+edi*8-0x75c4c1]
10006c10:	ds cmp al,0x88
10006c13:	(bad)  
10006c14:	cmp    eax,DWORD PTR ds:[esi-0x7ac4c101]
10006c1b:	(bad)  
10006c1c:	cmp    eax,0x3dff843b
10006c21:	cmp    eax,DWORD PTR [edx-0x7ec4c201]
10006c27:	(bad)  
10006c28:	cmp    al,0x3b
10006c2a:	jg     0x10006c2b
10006c2c:	cmp    al,0x3b
10006c2e:	jg     0x10006c2f
10006c30:	(bad)  
10006c32:	mov    bh,bh
10006c34:	adc    eax,0xff2b06
	...
10006c45:	add    BYTE PTR [eax],al
10006c47:	add    BYTE PTR [edx+0x41],cl
10006c4a:	mov    ds:0xdf5243ff,eax
10006c4f:	call   FWORD PTR [edi+0x55]
10006c52:	(bad)  
10006c53:	(bad)  
10006c54:	fucom  st(4)
10006c56:	sti    
10006c57:	(bad)  
10006c58:	fninit 
10006c5a:	sti    
10006c5b:	(bad)  
10006c5c:	(bad)  
10006c5e:	sti    
10006c5f:	call   edi
10006c61:	loopne 0x10006c5e
10006c63:	call   ebp
10006c65:	(bad)  
10006c67:	call   ebx
10006c69:	(bad)  
10006c6b:	call   ecx
10006c6d:	(bad)  
10006c6f:	dec    edi
10006c71:	(bad)  
10006c73:	dec    ebp
10006c75:	fdivr  st,st(1)
10006c77:	dec    ebx
10006c79:	xlat   BYTE PTR ds:[ebx]
10006c7a:	stc    
10006c7b:	dec    ecx
10006c7d:	aad    0xfa
10006c7f:	inc    edi
10006c81:	aam    0xfa
10006c83:	inc    esi
10006c85:	sar    edx,cl
10006c87:	inc    esp
10006c89:	sar    edx,1
10006c8b:	inc    ebx
10006c8d:	sar    dl,1
10006c8f:	inc    ecx
10006c91:	iret   
10006c92:	cli    
10006c93:	inc    eax
10006c95:	into   
10006c96:	stc    
10006c97:	(bad)  
10006c98:	mov    esi,0xbdfff9cc
10006c9d:	int3   
10006c9e:	stc    
10006c9f:	(bad)  
10006ca0:	mov    ebx,0xbafff8ca
10006ca5:	leave  
10006ca6:	clc    
10006ca7:	(bad)  
10006ca8:	mov    ecx,0x3cfff8c8
10006cad:	cmp    eax,DWORD PTR [eax-0x72f3f001]
10006cb3:	call   DWORD PTR ds:0xff2e06
	...
10006cc5:	add    BYTE PTR [eax],al
10006cc7:	add    BYTE PTR [edx+0x43],cl
10006cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006ccb:	dec    DWORD PTR [eax+0x57]
10006cce:	loope  0x10006ccf
10006cd0:	popa   
10006cd1:	pop    eax
10006cd2:	(bad)  
10006cd3:	(bad)  
10006cd4:	(bad)  
10006cd6:	sti    
10006cd7:	(bad)  
10006cd8:	fucom  st(4)
10006cda:	sti    
10006cdb:	(bad)  
10006cdc:	fninit 
10006cde:	sti    
10006cdf:	(bad)  
10006ce0:	(bad)  
10006ce2:	sti    
10006ce3:	call   edi
10006ce5:	loopne 0x10006ce2
10006ce7:	call   ebp
10006ce9:	(bad)  
10006ceb:	call   ebx
10006ced:	(bad)  
10006cef:	call   ecx
10006cf1:	(bad)  
10006cf3:	dec    edi
10006cf5:	(bad)  
10006cf7:	dec    ebp
10006cf9:	fdivr  st,st(1)
10006cfb:	dec    ebx
10006cfd:	xlat   BYTE PTR ds:[ebx]
10006cfe:	stc    
10006cff:	dec    ecx
10006d01:	aad    0xfa
10006d03:	inc    edi
10006d05:	aam    0xfa
10006d07:	inc    esi
10006d09:	sar    edx,cl
10006d0b:	inc    esp
10006d0d:	sar    edx,1
10006d0f:	inc    ebx
10006d11:	sar    dl,1
10006d13:	inc    ecx
10006d15:	iret   
10006d16:	cli    
10006d17:	inc    eax
10006d19:	into   
10006d1a:	stc    
10006d1b:	(bad)  
10006d1c:	mov    esi,0xbdfff9cc
10006d21:	int3   
10006d22:	stc    
10006d23:	(bad)  
10006d24:	mov    ebx,0xbafff8ca
10006d29:	leave  
10006d2a:	clc    
10006d2b:	(bad)  
10006d2c:	cmp    al,0x3b
10006d2e:	cmp    edi,0xff930c11
10006d34:	adc    eax,0xff3006
	...
10006d45:	add    BYTE PTR [eax],al
10006d47:	add    BYTE PTR [ebx+0x44],cl
10006d4a:	test   eax,0xe65d4fff
10006d4f:	jmp    DWORD PTR [ebx+ebx*2-0x39]
10006d53:	jmp    ecx
10006d55:	out    0xfc,eax
10006d57:	(bad)  
10006d58:	(bad)  
10006d5a:	sti    
10006d5b:	jmp    FWORD PTR [edx]
10006d5d:	aaa    
10006d5e:	int    0xff
10006d60:	daa    
10006d61:	xor    al,0xca
10006d63:	jmp    DWORD PTR [edi]
10006d65:	xor    al,0xca
10006d67:	jmp    DWORD PTR [edi]
10006d69:	xor    al,0xca
10006d6b:	jmp    DWORD PTR [esi]
10006d6d:	xor    al,0xc7
10006d6f:	jmp    DWORD PTR [esi]
10006d71:	xor    al,0xc3
10006d73:	jmp    DWORD PTR [esi]
10006d75:	xor    al,0xbf
10006d77:	jmp    DWORD PTR [edi]
10006d79:	xor    al,0xbb
10006d7b:	jmp    DWORD PTR [esi]
10006d7d:	xor    dh,BYTE PTR [esi-0x4fceda01]
10006d83:	jmp    DWORD PTR ds:0x25ffac31
10006d89:	xor    DWORD PTR [edi-0x5ed0db01],esp
10006d8f:	jmp    DWORD PTR [esi+ebp*1]
10006d92:	call   0x24ff:0x982f25ff
10006d99:	cs xchg esp,eax
10006d9b:	jmp    DWORD PTR [esp+ebp*1]
10006d9e:	nop
10006d9f:	jmp    DWORD PTR [edx]
10006da1:	sub    ecx,DWORD PTR [ebx-0x6334201]
10006da7:	(bad)  
10006da8:	mov    ebx,0x3dfff8ca
10006dad:	cmp    eax,DWORD PTR [edx-0x67f3ee01]
10006db3:	call   DWORD PTR [edi]
10006db5:	or     DWORD PTR [ebx],esi
10006db7:	inc    DWORD PTR [eax]
	...
10006dc5:	add    BYTE PTR [eax],al
10006dc7:	add    BYTE PTR [esi+0x48],cl
10006dca:	lods   al,BYTE PTR ds:[esi]
10006dcb:	call   DWORD PTR [ebp+0x64]
10006dce:	out    0xff,eax
10006dd0:	pop    bp
10006dd2:	enter  0xe3ff,0xe9
10006dd6:	cld    
10006dd7:	jmp    ecx
10006dd9:	out    0xfc,eax
10006ddb:	jmp    FWORD PTR [edi]
10006ddd:	cmp    cl,ch
10006ddf:	inc    ebx
10006de1:	(bad)  
10006de2:	idiv   bh
10006de4:	int    0xd0
10006de6:	clc    
10006de7:	push   DWORD PTR [eax+0x6efff3b4]
10006ded:	ja     0x10006dd5
10006def:	dec    DWORD PTR [ecx+0x54]
10006df2:	fdivp  st(7),st
10006df4:	inc    ebx
10006df5:	dec    ebp
10006df6:	(bad)  
10006df7:	(bad)  
10006df8:	ds dec ecx
10006dfa:	int3   
10006dfb:	(bad)  
10006dfc:	cmp    al,BYTE PTR [eax+eax*8-0x1]
10006e00:	xor    al,0x3e
10006e02:	mov    ah,0xff
10006e04:	das    
10006e05:	cmp    BYTE PTR [edi-0x63cbd501],ah
10006e0b:	jmp    DWORD PTR [eax]
10006e0d:	pop    ds
10006e0e:	push   0xffffffff
10006e10:	pop    ss
10006e11:	push   es
10006e12:	xor    edi,edi
10006e14:	xor    bh,BYTE PTR [edx]
10006e16:	lods   al,BYTE PTR ds:[esi]
10006e17:	push   DWORD PTR [esi+edi*1]
10006e1a:	mov    ah,0xff
10006e1c:	sub    ch,BYTE PTR [esi]
10006e1e:	nop
10006e1f:	jmp    DWORD PTR [edx]
10006e21:	sub    ecx,DWORD PTR [ebp-0x6334101]
10006e27:	(bad)  
10006e28:	mov    ebp,0x3dfff9cc
10006e2d:	cmp    eax,DWORD PTR [ebx-0x62f0ee01]
10006e33:	call   DWORD PTR [edi]
10006e35:	or     DWORD PTR [edi+edi*8],esi
	...
10006e48:	push   edx
10006e49:	dec    ebx
10006e4a:	scas   eax,DWORD PTR es:[edi]
10006e4b:	call   FWORD PTR [edx+0x6a]
10006e4e:	jmp    0xda61d852
10006e53:	jmp    ebp
10006e55:	jmp    0x10006e54
10006e57:	jmp    ebx
10006e59:	jmp    0x54366e5a
10006e5e:	into   
10006e5f:	call   FWORD PTR [eax-0x46002964]
10006e65:	mov    ebp,0xc6c2ffef
10006e6a:	cmc    
10006e6b:	call   FWORD PTR [ebx+0x67ffefa0]
10006e71:	jo     0x10006e58
10006e73:	dec    DWORD PTR [eax+0x53]
10006e76:	(bad)  
10006e78:	inc    ebx
10006e79:	dec    ebp
10006e7a:	(bad)  
10006e7b:	(bad)  
10006e7c:	ds dec ecx
10006e7e:	int3   
10006e7f:	(bad)  
10006e80:	cmp    al,BYTE PTR [eax+eax*8-0x1]
10006e84:	xor    al,0x3e
10006e86:	mov    ah,0xff
10006e88:	daa    
10006e89:	daa    
10006e8a:	cmp    bh,0x17
10006e8d:	push   es
10006e8e:	xor    bh,bh
10006e90:	xor    dh,BYTE PTR ds:0x493eff9d
10006e96:	int3   
10006e97:	push   DWORD PTR [eax]
10006e99:	xor    ebx,DWORD PTR [edi+edi*8-0xa9eee3]
10006ea0:	and    al,0x2c
10006ea2:	nop
10006ea3:	inc    eax
10006ea5:	into   
10006ea6:	stc    
10006ea7:	(bad)  
10006ea8:	mov    esi,0x3efff9cc
10006ead:	cmp    al,0x84
10006eaf:	call   DWORD PTR [ecx]
10006eb1:	bt     edi,edi
10006eb4:	sbb    cl,BYTE PTR [ecx]
10006eb6:	cmp    bh,bh
	...
10006ec8:	push   ecx
10006ec9:	dec    ebp
10006eca:	mov    cl,0xff
10006ecc:	popa   
10006ecd:	je     0x10006eba
10006ecf:	jmp    FWORD PTR [ebx+0x64]
10006ed2:	int    0xff
10006ed4:	out    0xec,eax
10006ed6:	(bad)  
10006ed7:	jmp    ebp
10006ed9:	jmp    0x10006ed8
10006edb:	(bad)  
10006edc:	cmp    al,BYTE PTR [edi-0x30]
10006edf:	dec    edx
10006ee1:	int    0xea
10006ee3:	call   FWORD PTR [eax-0x3e002963]
10006ee9:	(bad)
10006eec:	mov    edx,0x96fff5be
10006ef1:	pushf  
10006ef2:	out    dx,al
10006ef3:	jmp    FWORD PTR [eax+0x71]
10006ef6:	in     eax,0xff
10006ef8:	inc    edi
10006ef9:	push   edx
10006efa:	(bad)  
10006efc:	inc    ebx
10006efd:	dec    ebp
10006efe:	(bad)  
10006eff:	(bad)  
10006f00:	ds dec ecx
10006f02:	int3   
10006f03:	push   DWORD PTR [eax]
10006f05:	xor    ebx,DWORD PTR [edi+edi*8-0xa9eee3]
10006f0c:	push   0x6a
10006f0e:	scas   al,BYTE PTR es:[edi]
10006f0f:	call   DWORD PTR [ebx+0x3cffeb99]
10006f15:	ds mov ecx,0x6f1f26ff
10006f1b:	jmp    FWORD PTR [ebx+0x69]
10006f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006f1f:	jmp    DWORD PTR [esi+ebp*1]
10006f22:	xchg   esp,eax
10006f23:	inc    ecx
10006f25:	iret   
10006f26:	cli    
10006f27:	inc    eax
10006f29:	into   
10006f2a:	stc    
10006f2b:	(bad)  
10006f2c:	cmp    eax,DWORD PTR ds:[esi-0x55f0ee01]
10006f33:	call   FWORD PTR [ecx+ecx*1]
10006f36:	inc    DWORD PTR ds:[eax]
	...
10006f45:	add    BYTE PTR [eax],al
10006f47:	add    BYTE PTR [esi+0x50],dl
10006f4a:	mov    ch,0xff
10006f4c:	push   0x6effee7b
10006f51:	push   0xeee9ffcf
10006f56:	(bad)  
10006f57:	jmp    edi
10006f59:	in     al,dx
10006f5a:	(bad)  
10006f5b:	(bad)  
10006f5c:	ds dec ebx
10006f5e:	sar    bh,1
10006f60:	(bad)  
10006f61:	(bad)  
10006f62:	(bad)  
10006f63:	jmp    eax
10006f65:	loop   0x10006f5a
10006f67:	call   FWORD PTR [ecx-0x3e002962]
10006f6d:	(bad)
10006f70:	ret    0xf5c6
10006f73:	call   FWORD PTR [esi+0x7dffefa3]
10006f79:	test   ecx,ebp
10006f7b:	call   DWORD PTR [ebx+0x3cffeb99]
10006f81:	ds mov ecx,0x6f1f26ff
10006f87:	inc    DWORD PTR [eax-0x52003a80]
10006f8d:	mov    dl,0xf3
10006f8f:	inc    DWORD PTR [edi+0x44ffdb8b]
10006f95:	inc    ebx
10006f96:	lods   eax,DWORD PTR ds:[esi]
10006f97:	inc    DWORD PTR [edi-0x5d004379]
10006f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006f9e:	(bad)  
10006fa0:	and    eax,0xc3ff982f
10006fa5:	sar    dl,1
10006fa7:	inc    ecx
10006fa9:	iret   
10006faa:	cli    
10006fab:	(bad)  
10006fac:	aas    
10006fad:	cmp    eax,DWORD PTR [edi-0x50f0f001]
10006fb3:	call   FWORD PTR ds:0xff3f0c
	...
10006fc5:	add    BYTE PTR [eax],al
10006fc7:	add    BYTE PTR [edi+0x53],dl
10006fca:	mov    bh,0xff
10006fcc:	outs   dx,DWORD PTR ds:[esi]
10006fcd:	xor    ecx,0xffffffff
10006fd0:	jno    0x1000703d
10006fd2:	sar    edi,1
10006fd4:	jmp    0x10006fc5
10006fd6:	(bad)  
10006fd7:	(bad)  
10006fd8:	jmp    0x56006ecb
10006fdd:	push   eax
10006fde:	sar    edi,1
10006fe0:	(bad)  
10006fe1:	(bad)  
10006fe2:	(bad)  
10006fe3:	(bad)  
10006fe4:	(bad)  
10006fe5:	(bad)  
10006fe6:	(bad)  
10006fe7:	jmp    eax
10006fe9:	loop   0x10006fde
10006feb:	call   FWORD PTR [ebx-0x45002861]
10006ff1:	mov    edi,0xbfbafff3
10006ff6:	cmc    
10006ff7:	jmp    FWORD PTR [ebp-0x78000c4e]
10006ffd:	mov    ebx,ebx
10006fff:	inc    DWORD PTR [ebx+eax*2-0x53]
10007003:	jmp    DWORD PTR [esi+0x66]
10007006:	mov    ebp,0xefb7b2ff
1000700b:	jmp    FWORD PTR [ecx+0x57fff1ae]
10007011:	push   ebp
10007012:	mov    ecx,0xc9a0a1ff
10007017:	push   DWORD PTR [eax-0x56001b4b]
1000701d:	lods   eax,DWORD PTR ds:[esi]
1000701e:	loop   0x1000701f
10007020:	and    al,0x2f
10007022:	popf   
10007023:	inc    esp
10007025:	sar    edx,1
10007027:	inc    ebx
10007029:	sar    dl,1
1000702b:	(bad)  
1000702c:	aas    
1000702d:	cmp    al,0x8a
1000702f:	call   DWORD PTR [ecx]
10007031:	adc    esi,DWORD PTR [ebp+0x430c1dff]
10007037:	inc    DWORD PTR [eax]
	...
10007045:	add    BYTE PTR [eax],al
10007047:	add    BYTE PTR [edx+0x56],bl
1000704a:	mov    edx,0xf18b75ff
1000704f:	push   DWORD PTR [ebp+0x70]
10007052:	sar    edi,cl
10007054:	out    dx,al
10007055:	icebp  
10007056:	(bad)  
10007057:	(bad)  
10007058:	jmp    0x10007049
1000705a:	(bad)  
1000705b:	dec    DWORD PTR [ebp+0x59]
1000705e:	sar    edi,cl
10007060:	(bad)  
10007061:	(bad)  
10007062:	(bad)  
10007063:	(bad)  
10007064:	(bad)  
10007065:	(bad)  
10007066:	(bad)  
10007067:	(bad)  
10007068:	(bad)  
10007069:	(bad)  
1000706a:	(bad)  
1000706b:	jmp    eax
1000706d:	loop   0x10007062
1000706f:	call   FWORD PTR [eax-0x4d002964]
10007075:	mov    bh,0xef
10007077:	jmp    FWORD PTR [ecx+0x57fff1ae]
1000707d:	push   ebp
1000707e:	mov    ecx,0xcc9093ff
10007083:	(bad)  
10007084:	mov    ecx,0x96ffe6bb
10007089:	cdq    
1000708a:	(bad)  
1000708b:	call   DWORD PTR [edx-0x5e002a6b]
10007091:	mov    al,ds:0xc4c0ffc6
10007096:	jmp    0xb0ff:0xe6bcb8ff
1000709d:	mov    ch,0xe4
1000709f:	jmp    DWORD PTR [edi+ebp*1]
100070a2:	mov    eax,ds:0xfad3c6ff
100070a7:	inc    esp
100070a9:	sar    edx,1
100070ab:	(bad)  
100070ac:	aas    
100070ad:	cmp    ecx,DWORD PTR [ebx-0x44e6ec01]
100070b3:	jmp    DWORD PTR [ecx]
100070b5:	cmova  edi,edi
	...
100070c8:	pop    esp
100070c9:	pop    ecx
100070ca:	mov    esi,0xf1937eff
100070cf:	(bad)  
100070d0:	js     0x10007145
100070d2:	(bad)  
100070d3:	(bad)  
100070d4:	out    dx,eax
100070d5:	repz (bad) 
100070d7:	(bad)  
100070d8:	out    dx,al
100070d9:	icebp  
100070da:	(bad)  
100070db:	call   DWORD PTR [ebx+0x5e]
100070de:	aam    0xff
100070e0:	(bad)  
100070e1:	(bad)  
100070e2:	(bad)  
100070e3:	(bad)  
100070e4:	(bad)  
100070e5:	(bad)  
100070e6:	(bad)  
100070e7:	(bad)  
100070e8:	(bad)  
100070e9:	(bad)  
100070ea:	(bad)  
100070eb:	(bad)  
100070ec:	(bad)  
100070ed:	(bad)  
100070ee:	(bad)  
100070ef:	jmp    ecx
100070f1:	jecxz  0x100070e6
100070f3:	call   DWORD PTR [esi-0x6d002967]
100070f9:	xchg   ebp,eax
100070fa:	aad    0xff
100070fc:	div    dh
100070fe:	sti    
100070ff:	(bad)  
10007100:	out    dx,eax
10007101:	icebp  
10007102:	cli    
10007103:	(bad)  
10007104:	jmp    0xed0069f4
10007109:	(bad)  
1000710b:	inc    ebx
1000710d:	(bad)  
1000710e:	in     eax,0xff
10007110:	rcl    esp,1
10007112:	out    dx,eax
10007113:	dec    ecx
10007115:	int    0xee
10007117:	inc    eax
10007119:	(bad)  
1000711a:	jmp    0x25ff:0xe6bcb8ff
10007121:	xor    DWORD PTR [edi-0x52b3801],esp
10007127:	inc    esi
10007129:	sar    edx,cl
1000712b:	inc    DWORD PTR [eax+0x3c]
1000712e:	(bad)  
1000712f:	call   DWORD PTR [edi]
10007131:	sbb    al,0xbe
10007133:	jmp    DWORD PTR [eax]
10007135:	cmovp  edi,edi
	...
10007148:	pop    ebp
10007149:	pop    esp
1000714a:	sar    bh,0x85
1000714d:	pushf  
1000714e:	repz (bad) 
10007150:	jnp    0x100071ca
10007152:	fdivr  st,st(7)
10007154:	icebp  
10007155:	repz (bad) 
10007157:	(bad)  
10007158:	out    dx,eax
10007159:	repz (bad) 
1000715b:	call   FWORD PTR [edx+0x64]
1000715e:	aam    0xff
10007160:	(bad)  
10007161:	(bad)  
10007162:	(bad)  
10007163:	(bad)  
10007164:	(bad)  
10007165:	(bad)  
10007166:	(bad)  
10007167:	(bad)  
10007168:	(bad)  
10007169:	(bad)  
1000716a:	(bad)  
1000716b:	(bad)  
1000716c:	(bad)  
1000716d:	(bad)  
1000716e:	(bad)  
1000716f:	(bad)  
10007170:	(bad)  
10007171:	(bad)  
10007172:	(bad)  
10007173:	(bad)  
10007174:	(bad)  
10007175:	(bad)  
10007176:	(bad)  
10007177:	(bad)  
10007178:	(bad)  
10007179:	(bad)  
1000717a:	(bad)  
1000717b:	(bad)  
1000717c:	sti    
1000717d:	sti    
1000717e:	(bad)  
1000717f:	push   esi
10007181:	idiv   bl
10007183:	(bad)  
10007184:	out    dx,eax
10007185:	icebp  
10007186:	cli    
10007187:	(bad)  
10007188:	jmp    0xf3006a78
1000718d:	jecxz  0x10007185
1000718f:	(bad)  
10007190:	(bad)  
10007192:	repz call ecx
10007195:	aam    0xef
10007197:	dec    ecx
10007199:	int    0xee
1000719b:	inc    eax
1000719d:	(bad)  
1000719e:	jmp    0xc9ff:0xb34135ff
100071a5:	aad    0xfa
100071a7:	inc    edi
100071a9:	aam    0xfa
100071ab:	inc    DWORD PTR [ecx+0x3c]
100071ae:	mov    ?,edi
100071b0:	sbb    ah,BYTE PTR [eax]
100071b2:	sar    edi,0x21
100071b5:	cmovl  edi,edi
	...
100071c8:	pusha  
100071c9:	pop    edi
100071ca:	(bad)  
100071cb:	dec    DWORD PTR [esi+0x7ffff3a3]
100071d1:	jnp    0x100071ae
100071d3:	push   ebx
100071d5:	cmc    
100071d6:	(bad)  
100071d7:	push   ecx
100071d9:	repz (bad) 
100071db:	jmp    DWORD PTR [ecx+0x6b]
100071de:	aad    0xff
100071e0:	(bad)  
100071e1:	(bad)  
100071e2:	(bad)  
100071e3:	(bad)  
100071e4:	(bad)  
100071e5:	(bad)  
100071e6:	(bad)  
100071e7:	(bad)  
100071e8:	(bad)  
100071e9:	(bad)  
100071ea:	(bad)  
100071eb:	(bad)  
100071ec:	(bad)  
100071ed:	(bad)  
100071ee:	(bad)  
100071ef:	(bad)  
100071f0:	(bad)  
100071f1:	(bad)  
100071f2:	(bad)  
100071f3:	(bad)  
100071f4:	(bad)  
100071f5:	(bad)  
100071f6:	(bad)  
100071f7:	(bad)  
100071f8:	(bad)  
100071f9:	(bad)  
100071fa:	(bad)  
100071fb:	(bad)  
100071fc:	(bad)  
100071fd:	(bad)  
100071fe:	(bad)  
100071ff:	jmp    FWORD PTR [edi+ebx*1]
10007202:	jbe    0x10007203
10007204:	xor    al,0x31
10007206:	mov    esp,0x91262fff
1000720b:	jmp    FWORD PTR [ebx-0x1d002556]
10007211:	jecxz  0x10007209
10007213:	(bad)  
10007214:	(bad)  
10007216:	repz call ecx
10007219:	aam    0xef
1000721b:	dec    ecx
1000721d:	int    0xee
1000721f:	dec    DWORD PTR [ebp+edx*2-0x42]
10007223:	dec    ebx
10007225:	xlat   BYTE PTR ds:[ebx]
10007226:	stc    
10007227:	dec    ecx
10007229:	aad    0xfa
1000722b:	inc    DWORD PTR [ecx+0x3b]
1000722e:	nop
1000722f:	call   FWORD PTR [edi]
10007231:	and    eax,0xf21ffc3
10007236:	dec    esi
10007237:	inc    DWORD PTR [eax]
	...
10007245:	add    BYTE PTR [eax],al
10007247:	add    BYTE PTR [edx+0x63],ah
1000724a:	(bad)  
1000724b:	call   DWORD PTR [ebp-0x7d000a55]
10007251:	sbb    dh,0xff
10007254:	repz idiv dh
10007257:	push   ebx
10007259:	cmc    
1000725a:	(bad)  
1000725b:	jmp    DWORD PTR [edi+0x71]
1000725e:	xlat   BYTE PTR ds:[ebx]
1000725f:	(bad)  
10007260:	(bad)  
10007261:	(bad)  
10007262:	(bad)  
10007263:	(bad)  
10007264:	in     al,dx
10007265:	jmp    0x1000725f
10007267:	jmp    DWORD PTR [ecx+0x5affd39c]
1000726d:	push   edx
1000726e:	stos   BYTE PTR es:[edi],al
1000726f:	call   DWORD PTR [ebx+0x49]
10007272:	mov    eax,ds:0xc18e94ff
10007277:	(bad)  
10007278:	jmp    0x10006464
1000727d:	(bad)  
1000727e:	(bad)  
1000727f:	call   DWORD PTR [edi+0x54]
10007282:	(bad)  
10007283:	(bad)  
10007284:	jmp    0x10007271
10007286:	out    dx,al
10007287:	inc    DWORD PTR [ebx+0x4c]
1000728a:	mov    esi,0x840c11ff
1000728f:	jmp    FWORD PTR [ebp-0x1d002454]
10007295:	jecxz  0x1000728d
10007297:	(bad)  
10007298:	(bad)  
1000729a:	repz call ecx
1000729d:	aam    0xef
1000729f:	jmp    DWORD PTR [edi+0x6f]
100072a2:	retf   
100072a3:	dec    ebp
100072a5:	fdivr  st,st(1)
100072a7:	dec    ebx
100072a9:	xlat   BYTE PTR ds:[ebx]
100072aa:	stc    
100072ab:	inc    DWORD PTR [edx+0x3b]
100072ae:	xchg   edx,eax
100072af:	jmp    DWORD PTR [eax+ebp*1]
100072b2:	(bad)  
100072b3:	jmp    DWORD PTR [ecx+edx*1]
100072b6:	push   esp
100072b7:	inc    DWORD PTR [eax]
	...
100072c5:	add    BYTE PTR [eax],al
100072c7:	add    BYTE PTR [ebp+0x65],ah
100072ca:	retf   0x9cff
100072cd:	mov    cl,0xf5
100072cf:	inc    DWORD PTR [ebp-0x9001f7d]
100072d5:	clc    
100072d6:	(bad)  
100072d7:	push   ebx
100072d9:	idiv   dh
100072db:	jmp    FWORD PTR [esi+0x77]
100072de:	xlat   BYTE PTR ds:[ebx]
100072df:	(bad)  
100072e0:	(bad)  
100072e1:	(bad)  
100072e2:	(bad)  
100072e3:	jmp    FWORD PTR [eax+0x3effdfa6]
100072e9:	ds sar bh,0x24
100072ed:	daa    
100072ee:	mov    eax,0x9f151aff
100072f3:	jmp    DWORD PTR [ecx+ebx*1]
100072f6:	mov    ?,edi
100072f8:	xchg   esp,eax
100072f9:	mov    es,ecx
100072fb:	(bad)  
100072fc:	(bad)  
100072fd:	(bad)  
100072fe:	(bad)  
100072ff:	dec    DWORD PTR [ebx+ecx*4-0x4c4c002c]
10007306:	call   0xf06dda0a
1000730b:	dec    DWORD PTR [ecx+0x52]
1000730e:	sar    bh,0x11
10007311:	or     al,0x84
10007313:	jmp    FWORD PTR [ebp-0x1d002454]
10007319:	jecxz  0x10007311
1000731b:	(bad)  
1000731c:	(bad)  
1000731e:	repz inc DWORD PTR [ebx+ecx*4-0x25300028]
10007326:	cli    
10007327:	dec    ebp
10007329:	fdivr  st,st(1)
1000732b:	inc    DWORD PTR [edx+0x3b]
1000732e:	xchg   ebx,eax
1000732f:	jmp    DWORD PTR [esi]
10007331:	cs retf 0x24ff
10007335:	adc    DWORD PTR [edi-0x1],edx
	...
10007348:	push   0xa4ffcc6b
1000734d:	mov    ecx,0x8788fff5
10007352:	loop   0x10007353
10007354:	idiv   dl
10007356:	(bad)  
10007357:	push   esi
10007359:	clc    
1000735a:	(bad)  
1000735b:	push   DWORD PTR [ebp+0x7d]
1000735e:	fcos   
10007360:	(bad)  
10007361:	(bad)  
10007362:	(bad)  
10007363:	push   DWORD PTR [ebx+0x70]
10007366:	sar    edi,1
10007368:	mov    BYTE PTR [esi+0x645bffec],cl
1000736e:	loop   0x1000736f
10007370:	sbb    ah,BYTE PTR [eax]
10007372:	mov    ebp,0x9f151aff
10007377:	call   DWORD PTR [ebx+0x49]
1000737a:	mov    eax,ds:0xffffffff
1000737f:	(bad)  
10007380:	(bad)  
10007382:	stc    
10007383:	dec    DWORD PTR [ebx+ecx*4-0x4c50002c]
1000738a:	call   0xf26cd78e
1000738f:	dec    DWORD PTR [eax+0x51]
10007392:	sar    bh,0x11
10007395:	or     al,0x84
10007397:	jmp    FWORD PTR [ebp-0x1d002353]
1000739d:	jecxz  0x10007395
1000739f:	jmp    DWORD PTR [ecx-0x2e001c59]
100073a5:	(bad)  
100073a7:	dec    edi
100073a9:	(bad)  
100073ab:	inc    DWORD PTR [ebx+0x3c]
100073ae:	xchg   esi,eax
100073af:	jmp    FWORD PTR [ecx]
100073b1:	xor    ch,cl
100073b3:	jmp    DWORD PTR ds:0xff5913
	...
100073c5:	add    BYTE PTR [eax],al
100073c7:	add    BYTE PTR [ebx+0x6e],ch
100073ca:	sar    bh,1
100073cc:	stos   BYTE PTR es:[edi],al
100073cd:	shl    dh,0xff
100073d0:	mov    ecx,DWORD PTR [ebx-0x506001c]
100073d6:	(bad)  
100073d7:	push   esi
100073d9:	cli    
100073da:	(bad)  
100073db:	(bad)  
100073dc:	jp     0x10007360
100073de:	(bad)  
100073e0:	(bad)  
100073e1:	(bad)  
100073e2:	(bad)  
100073e3:	(bad)  
100073e4:	jle    0x10007464
100073e6:	(bad)  
100073e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100073e9:	lods   al,BYTE PTR ds:[esi]
100073ea:	repz jmp FWORD PTR [ebp+0x50fff8b4]
100073f1:	pop    ecx
100073f2:	loopne 0x100073f3
100073f4:	and    al,0x27
100073f6:	mov    eax,0xaa525aff
100073fb:	(bad)  
100073fc:	(bad)  
100073fd:	(bad)  
100073fe:	(bad)  
100073ff:	(bad)  
10007400:	(bad)  
10007401:	(bad)  
10007402:	(bad)  
10007403:	(bad)  
10007404:	fcmovnu st,st(3)
10007406:	idiv   bh
10007408:	mov    WORD PTR [ebx-0x4c50002c],cs
1000740e:	call   0xf374e012
10007413:	dec    DWORD PTR [esp+edx*2-0x3f]
10007417:	call   DWORD PTR [ecx]
10007419:	or     al,0x84
1000741b:	jmp    FWORD PTR [ebp-0x41002353]
10007421:	ret    
10007422:	out    dx,al
10007423:	call   ebx
10007425:	(bad)  
10007427:	call   ecx
10007429:	(bad)  
1000742b:	inc    DWORD PTR [ebx+0x3c]
1000742e:	xchg   edi,eax
1000742f:	jmp    FWORD PTR [esp+esi*1]
10007432:	sar    bh,1
10007434:	es adc eax,0xff5d
	...
10007446:	add    BYTE PTR [eax],al
10007448:	outs   dx,BYTE PTR ds:[esi]
10007449:	jb     0x1000741d
1000744b:	jmp    FWORD PTR [esi-0x7200093c]
10007451:	(bad)  
10007452:	out    0xff,al
10007454:	cli    
10007455:	sti    
10007456:	(bad)  
10007457:	(bad)  
10007458:	stc    
10007459:	cli    
1000745a:	(bad)  
1000745b:	inc    DWORD PTR [eax-0x2579]
10007461:	(bad)  
10007462:	(bad)  
10007463:	jmp    FWORD PTR [ebp+0x7effe7ac]
10007469:	jle    0x10007445
1000746b:	jmp    DWORD PTR [ebx+0x62fff3a9]
10007471:	push   0xffffffe8
10007473:	(bad)  
10007474:	ds ds sar bh,0xa1
10007479:	pushf  
1000747a:	sar    edi,cl
1000747c:	(bad)  
1000747d:	(bad)  
1000747e:	(bad)  
1000747f:	(bad)  
10007480:	(bad)  
10007481:	(bad)  
10007482:	(bad)  
10007483:	(bad)  
10007484:	(bad)  
10007485:	(bad)  
10007486:	(bad)  
10007487:	(bad)  
10007488:	(bad)  
1000748a:	idiv   bh
1000748c:	mov    WORD PTR [ebx-0x4c52002c],cs
10007492:	call   0xf374e096
10007497:	dec    DWORD PTR [ecx+0x52]
1000749a:	sar    bh,0x11
1000749d:	or     al,0x84
1000749f:	jmp    DWORD PTR [eax-0x2a002a62]
100074a5:	(bad)  
100074a7:	call   ebx
100074a9:	(bad)  
100074ab:	inc    DWORD PTR [ebx+0x3c]
100074ae:	cwde   
100074af:	jmp    FWORD PTR [edi]
100074b1:	aaa    
100074b2:	sar    edi,cl
100074b4:	and    eax,0xff5f15
	...
100074c5:	add    BYTE PTR [eax],al
100074c7:	add    BYTE PTR [eax+0x74],dh
100074ca:	aad    0xff
100074cc:	mov    dl,0xcb
100074ce:	clc    
100074cf:	call   DWORD PTR [eax-0x400176e]
100074d5:	std    
100074d6:	(bad)  
100074d7:	(bad)  
100074d8:	cli    
100074d9:	sti    
100074da:	(bad)  
100074db:	inc    DWORD PTR [ebx+ecx*4-0x24]
100074e2:	(bad)  
100074e3:	(bad)  
100074e4:	out    dx,al
100074e5:	out    dx,al
100074e6:	sti    
100074e7:	jmp    FWORD PTR [ebp+0x7effe7ac]
100074ed:	jle    0x100074c9
100074ef:	push   DWORD PTR [ebx+0x70]
100074f2:	sar    edi,1
100074f4:	test   al,0xa6
100074f6:	(bad)  
100074f8:	in     al,dx
100074f9:	jmp    0x100074f3
100074fb:	(bad)  
100074fc:	(bad)  
100074fd:	(bad)  
100074fe:	(bad)  
100074ff:	(bad)  
10007500:	(bad)  
10007501:	(bad)  
10007502:	(bad)  
10007503:	(bad)  
10007504:	(bad)  
10007505:	(bad)  
10007506:	(bad)  
10007507:	(bad)  
10007508:	(bad)  
10007509:	(bad)  
1000750a:	(bad)  
1000750b:	(bad)  
1000750c:	(bad)  
1000750e:	idiv   bh
10007510:	mov    WORD PTR [ebx-0x4c50002c],cs
10007516:	call   0xec57c61a
1000751b:	jmp    FWORD PTR ds:0x11ff7d20
10007521:	or     al,0x84
10007523:	call   DWORD PTR [ebp-0x2a002567]
10007529:	(bad)  
1000752b:	inc    DWORD PTR [esp+edi*1-0x66]
1000752f:	push   DWORD PTR [edx]
10007531:	cmp    al,0xd5
10007533:	jmp    DWORD PTR [esi]
10007535:	adc    eax,0xff62
	...
10007546:	add    BYTE PTR [eax],al
10007548:	jae    0x100075c2
1000754a:	xlat   BYTE PTR ds:[ebx]
1000754b:	push   DWORD PTR [esi-0x6c00072f]
10007551:	xchg   ebp,eax
10007552:	jmp    0xfbff:0xfffefdff
10007559:	std    
1000755a:	(bad)  
1000755b:	dec    DWORD PTR [eax-0x2371]
10007561:	(bad)  
10007562:	(bad)  
10007563:	(bad)  
10007564:	(bad)  
10007565:	(bad)  
10007566:	(bad)  
10007567:	(bad)  
10007568:	(bad)  
10007569:	(bad)  
1000756a:	(bad)  
1000756b:	(bad)  
1000756c:	(bad)  
1000756d:	(bad)  
1000756e:	(bad)  
1000756f:	(bad)  
10007570:	(bad)  
10007571:	(bad)  
10007572:	(bad)  
10007573:	(bad)  
10007574:	(bad)  
10007575:	(bad)  
10007576:	(bad)  
10007577:	(bad)  
10007578:	(bad)  
10007579:	(bad)  
1000757a:	(bad)  
1000757b:	(bad)  
1000757c:	(bad)  
1000757d:	(bad)  
1000757e:	(bad)  
1000757f:	(bad)  
10007580:	(bad)  
10007581:	(bad)  
10007582:	(bad)  
10007583:	(bad)  
10007584:	(bad)  
10007585:	(bad)  
10007586:	(bad)  
10007587:	(bad)  
10007588:	(bad)  
10007589:	(bad)  
1000758a:	(bad)  
1000758b:	(bad)  
1000758c:	(bad)  
1000758d:	(bad)  
1000758e:	(bad)  
1000758f:	(bad)  
10007590:	fcmovnu st,st(3)
10007592:	idiv   bh
10007594:	mov    WORD PTR [ebx+0x3c45ffd4],cs
1000759a:	sahf   
1000759b:	jmp    DWORD PTR [ebp+0x62]
1000759e:	int3   
1000759f:	inc    DWORD PTR [ecx+0x35]
100075a2:	nop
100075a3:	call   DWORD PTR [ecx]
100075a5:	or     al,0x84
100075a7:	inc    edi
100075a9:	into   
100075aa:	out    dx,eax
100075ab:	inc    DWORD PTR [esp+edi*1-0x65]
100075af:	push   DWORD PTR [esi+edi*1]
100075b2:	fdivr  st,st(7)
100075b4:	sub    BYTE PTR [ecx],bl
100075b6:	inc    DWORD PTR fs:[eax]
	...
100075c5:	add    BYTE PTR [eax],al
100075c7:	add    BYTE PTR [edx+edi*2-0x27],dh
100075cb:	(bad)  
100075cc:	mov    ecx,0x95fff8d3
100075d1:	xchg   edi,eax
100075d2:	jmp    0x100075d3
100075d4:	(bad)  
100075d5:	(bad)  
100075d6:	(bad)  
100075d7:	(bad)  
100075d8:	std    
100075d9:	(bad)  
100075da:	(bad)  
100075db:	dec    DWORD PTR [edx+edx*4-0x747b0024]
100075e2:	fdiv   st(7),st
100075e4:	add    BYTE PTR [edi-0x7d850026],0xda
100075eb:	push   DWORD PTR [ebp+0x7d]
100075ee:	fcos   
100075f0:	outs   dx,BYTE PTR ds:[esi]
100075f1:	ja     0x100075ca
100075f3:	jmp    DWORD PTR [edi+0x71]
100075f6:	xlat   BYTE PTR ds:[ebx]
100075f7:	jmp    DWORD PTR [ecx+0x6b]
100075fa:	aad    0xff
100075fc:	xchg   ebx,eax
100075fd:	cdq    
100075fe:	(bad)  
10007600:	lahf   
10007601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007602:	fdivp  st(7),st
10007604:	mov    dl,0xb7
10007606:	in     eax,0xff
10007608:	leave  
10007609:	int    0xee
1000760b:	(bad)  
1000760c:	(bad)  
1000760e:	cmc    
1000760f:	push   ebx
10007611:	repz sti 
10007613:	(bad)  
10007614:	fcmovnu st,st(4)
10007616:	clc    
10007617:	dec    DWORD PTR [edi-0x73002271]
1000761d:	mov    ecx,fs
1000761f:	jmp    DWORD PTR [ebx+0x63]
10007622:	fdivr  st,st(7)
10007624:	cmp    BYTE PTR [eax],dh
10007626:	pushf  
10007627:	call   ebx
10007629:	fcomi  st,st(6)
1000762b:	inc    DWORD PTR [esp+edi*1-0x64]
1000762f:	push   DWORD PTR [edi]
10007631:	inc    ecx
10007632:	fcos   
10007634:	sub    BYTE PTR [ecx],bl
10007636:	inc    WORD PTR [eax]
	...
10007645:	add    BYTE PTR [eax],al
10007647:	add    BYTE PTR [esi+0x7c],dh
1000764a:	(bad)  
1000764c:	mov    esp,0x96fff9d6
10007651:	cdq    
10007652:	in     eax,dx
10007653:	(bad)  
10007654:	(bad)  
10007655:	(bad)  
10007656:	(bad)  
10007657:	(bad)  
10007658:	(bad)  
10007659:	(bad)  
1000765a:	(bad)  
1000765b:	(bad)  
1000765c:	std    
1000765d:	(bad)  
1000765e:	(bad)  
1000765f:	(bad)  
10007660:	sti    
10007661:	std    
10007662:	(bad)  
10007663:	(bad)  
10007664:	cli    
10007665:	sti    
10007666:	(bad)  
10007667:	(bad)  
10007668:	stc    
10007669:	cli    
1000766a:	(bad)  
1000766b:	push   esi
1000766d:	cli    
1000766e:	(bad)  
1000766f:	push   esi
10007671:	clc    
10007672:	(bad)  
10007673:	push   ebx
10007675:	idiv   dh
10007677:	push   ebx
10007679:	cmc    
1000767a:	(bad)  
1000767b:	push   ecx
1000767d:	repz (bad) 
1000767f:	(bad)  
10007680:	out    dx,eax
10007681:	repz (bad) 
10007683:	(bad)  
10007684:	out    dx,al
10007685:	icebp  
10007686:	(bad)  
10007687:	(bad)  
10007688:	jmp    0x10007679
1000768a:	(bad)  
1000768b:	(bad)  
1000768c:	jmp    0xf800757f
10007691:	in     al,dx
10007692:	(bad)  
10007693:	jmp    ebp
10007695:	jmp    0x10007694
10007697:	(bad)  
10007698:	mov    esi,0x8ffff1c3
1000769d:	(bad)  
1000769e:	(bad)  
100076a0:	jp     0x1000771c
100076a2:	aam    0xff
100076a4:	ret    0xf3c7
100076a7:	(bad)  
100076a8:	fninit 
100076aa:	sti    
100076ab:	inc    DWORD PTR [ebp+0x3c]
100076ae:	popf   
100076af:	(bad)  
100076b0:	cmp    BYTE PTR [ebx-0x25],al
100076b3:	jmp    DWORD PTR [edi]
100076b5:	sbb    DWORD PTR [eax-0x1],ebp
	...
100076c8:	jns    0x10007749
100076ca:	(bad)  
100076cc:	mov    esi,0x98fff9d6
100076d1:	fwait
100076d2:	out    dx,al
100076d3:	(bad)  
100076d4:	(bad)  
100076d5:	(bad)  
100076d6:	(bad)  
100076d7:	(bad)  
100076d8:	(bad)  
100076d9:	(bad)  
100076da:	(bad)  
100076db:	(bad)  
100076dc:	(bad)  
100076dd:	(bad)  
100076de:	(bad)  
100076df:	(bad)  
100076e0:	std    
100076e1:	(bad)  
100076e2:	(bad)  
100076e3:	(bad)  
100076e4:	sti    
100076e5:	std    
100076e6:	(bad)  
100076e7:	(bad)  
100076e8:	cli    
100076e9:	sti    
100076ea:	(bad)  
100076eb:	(bad)  
100076ec:	stc    
100076ed:	cli    
100076ee:	(bad)  
100076ef:	push   esi
100076f1:	cli    
100076f2:	(bad)  
100076f3:	push   esi
100076f5:	clc    
100076f6:	(bad)  
100076f7:	push   ebx
100076f9:	idiv   dh
100076fb:	push   ebx
100076fd:	cmc    
100076fe:	(bad)  
100076ff:	push   ecx
10007701:	repz (bad) 
10007703:	(bad)  
10007704:	out    dx,eax
10007705:	repz (bad) 
10007707:	(bad)  
10007708:	out    dx,al
10007709:	icebp  
1000770a:	(bad)  
1000770b:	(bad)  
1000770c:	jmp    0x100076fd
1000770e:	(bad)  
1000770f:	(bad)  
10007710:	jmp    0xf8007603
10007715:	in     al,dx
10007716:	(bad)  
10007717:	jmp    ebp
10007719:	jmp    0x10007718
1000771b:	jmp    ebx
1000771d:	jmp    0xf7e2771e
10007722:	cld    
10007723:	(bad)  
10007724:	(bad)  
10007726:	sti    
10007727:	(bad)  
10007728:	fucom  st(4)
1000772a:	sti    
1000772b:	inc    DWORD PTR [ebp+0x3c]
1000772e:	sahf   
1000772f:	(bad)  
10007730:	cmp    BYTE PTR [ebx-0x25],al
10007733:	jmp    FWORD PTR [ecx]
10007735:	sbb    ch,BYTE PTR [edx-0x1]
	...
10007748:	jp     0x100076ca
1000774a:	(bad)  
1000774c:	rcr    al,0xf9
1000774f:	call   FWORD PTR [eax-0x67001165]
10007755:	fwait
10007756:	out    dx,al
10007757:	call   DWORD PTR [esi-0x6a001267]
1000775d:	xchg   edi,eax
1000775e:	in     al,dx
1000775f:	call   DWORD PTR [edx-0x6f00166c]
10007765:	nop
10007766:	call   0xf68e056a
1000776b:	dec    DWORD PTR [edx-0x78001c76]
10007771:	xchg   cl,ah
10007773:	inc    DWORD PTR [edx+eax*4+0x7e80ffde]
1000777a:	fdiv   st(7),st
1000777c:	jge    0x100077f8
1000777e:	(bad)  
10007780:	jns    0x100077f7
10007782:	xlat   BYTE PTR ds:[ebx]
10007783:	push   DWORD PTR [esi+0x71]
10007786:	aam    0xff
10007788:	jb     0x100077f7
1000778a:	sar    edi,cl
1000778c:	outs   dx,DWORD PTR ds:[esi]
1000778d:	imul   edx,eax,0xcd656cff
10007793:	jmp    FWORD PTR [ecx+0x61]
10007796:	retf   
10007797:	jmp    DWORD PTR [esi+0x5e]
1000779a:	leave  
1000779b:	jmp    DWORD PTR [ebx+ebx*2-0x39]
1000779f:	jmp    DWORD PTR [edx+0x58]
100077a2:	vmaxsd xmm2,xmm0,QWORD PTR [esi-0x3c]
100077a7:	call   FWORD PTR [esi+0x54]
100077aa:	ret    
100077ab:	inc    DWORD PTR [ebp+0x3c]
100077ae:	sahf   
100077af:	(bad)  
100077b0:	cmp    BYTE PTR [ebx-0x25],al
100077b3:	jmp    FWORD PTR [ecx]
100077b5:	sbb    ch,BYTE PTR [edi+edi*8+0x0]
	...
100077c5:	add    BYTE PTR [eax],al
100077c7:	add    BYTE PTR [ebx-0x7f],bh
100077ca:	(bad)  
100077cc:	mov    esi,0xc0fff9d6
100077d1:	fdivr  st,st(1)
100077d3:	(bad)  
100077d4:	mov    esi,0xbcfff9d6
100077d9:	(bad)  
100077da:	stc    
100077db:	(bad)  
100077dc:	mov    ecx,0xb6fff8d3
100077e1:	sar    eax,1
100077e3:	push   DWORD PTR [edx-0x51000735]
100077e9:	(bad)  
100077ea:	idiv   bh
100077ec:	stos   BYTE PTR es:[edi],al
100077ed:	shl    dh,0xff
100077f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100077f1:	mov    ecx,0xb19cfff5
100077f6:	cmc    
100077f7:	call   DWORD PTR [ebp-0x71000a55]
100077fd:	mov    ds:0x9c85fff3,eax
10007802:	repz (bad) 
10007804:	jle    0x10007799
10007806:	icebp  
10007807:	push   DWORD PTR [ebp-0x75]
1000780a:	icebp  
1000780b:	jmp    FWORD PTR [edi-0x7d]
1000780e:	icebp  
1000780f:	jmp    FWORD PTR [eax+0x7b]
10007812:	out    dx,al
10007813:	jmp    DWORD PTR [ecx+0x74]
10007816:	jmp    0x10007817
10007818:	pop    edx
10007819:	push   0xffffffe9
1000781b:	call   DWORD PTR [ebp+0x64]
1000781e:	out    0xff,eax
10007820:	dec    edi
10007821:	pop    ebp
10007822:	out    0xff,al
10007824:	dec    eax
10007825:	push   edi
10007826:	loope  0x10007827
10007828:	inc    ebx
10007829:	push   edx
1000782a:	(bad)  
1000782c:	cmp    al,0x49
1000782e:	(bad)  
10007830:	cmp    BYTE PTR [ebx-0x25],al
10007833:	jmp    FWORD PTR [edx]
10007835:	sbb    al,0x6d
10007837:	inc    DWORD PTR [eax]
	...
10007845:	add    BYTE PTR [eax],al
10007847:	add    BYTE PTR [ebx-0x7f],bh
1000784a:	(bad)  
1000784c:	jl     0x100077d0
1000784e:	loopne 0x1000784f
10007850:	jnp    0x100077d3
10007852:	(bad)  
10007854:	jns    0x100078d5
10007856:	(bad)  
10007858:	jbe    0x100078d6
1000785a:	(bad)  
1000785c:	jae    0x100078d6
1000785e:	(bad)  
10007860:	jae    0x100078da
10007862:	xlat   BYTE PTR ds:[ebx]
10007863:	push   DWORD PTR [ecx+0x75]
10007866:	aad    0xff
10007868:	outs   dx,BYTE PTR ds:[esi]
10007869:	jb     0x1000783d
1000786b:	jmp    FWORD PTR [ebx+0x6e]
1000786e:	sar    bh,1
10007870:	push   0x67ffcd6a
10007875:	retfw  0x64ff
10007879:	arpl   di,ax
1000787b:	jmp    DWORD PTR [edx+0x60]
1000787e:	(bad)  
1000787f:	call   FWORD PTR [esi+0x5d]
10007882:	mov    edi,0xbe595cff
10007887:	call   FWORD PTR [ecx+0x56]
1000788a:	mov    edx,0xb75357ff
1000788f:	call   DWORD PTR [eax+edx*2-0x4b]
10007893:	call   DWORD PTR [ebx+0x4e]
10007896:	mov    al,0xff
10007898:	push   edx
10007899:	dec    ebx
1000789a:	scas   eax,DWORD PTR es:[edi]
1000789b:	dec    DWORD PTR [esi+0x48]
1000789e:	lods   al,BYTE PTR ds:[esi]
1000789f:	dec    DWORD PTR [ebp+0x45]
100078a2:	test   al,0xff
100078a4:	dec    edx
100078a5:	inc    ebx
100078a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100078a7:	dec    DWORD PTR [edx+0x41]
100078aa:	mov    ds:0xa13f48ff,eax
100078af:	inc    DWORD PTR [edi+0x3e]
100078b2:	mov    al,ds:0x9e3c45ff
100078b7:	inc    DWORD PTR [eax]
	...
100079bd:	add    BYTE PTR [eax],al
100079bf:	add    bh,bh
100079c1:	(bad)  
100079c2:	(bad)  
100079c3:	(bad)  
100079c4:	(bad)  
100079c5:	(bad)  
100079c6:	(bad)  
100079c7:	inc    eax
100079c9:	add    BYTE PTR [eax],al
100079cb:	add    eax,eax
100079cd:	add    BYTE PTR [eax],al
100079cf:	add    eax,eax
100079d1:	add    BYTE PTR [eax],al
100079d3:	add    eax,eax
100079d5:	add    BYTE PTR [eax],al
100079d7:	add    eax,eax
100079d9:	add    BYTE PTR [eax],al
100079db:	add    eax,eax
100079dd:	add    BYTE PTR [eax],al
100079df:	add    eax,eax
100079e1:	add    BYTE PTR [eax],al
100079e3:	add    eax,eax
100079e5:	add    BYTE PTR [eax],al
100079e7:	add    eax,eax
100079e9:	add    BYTE PTR [eax],al
100079eb:	add    eax,eax
100079ed:	add    BYTE PTR [eax],al
100079ef:	add    eax,eax
100079f1:	add    BYTE PTR [eax],al
100079f3:	add    eax,eax
100079f5:	add    BYTE PTR [eax],al
100079f7:	add    eax,eax
100079f9:	add    BYTE PTR [eax],al
100079fb:	add    eax,eax
100079fd:	add    BYTE PTR [eax],al
100079ff:	add    eax,eax
10007a01:	add    BYTE PTR [eax],al
10007a03:	add    eax,eax
10007a05:	add    BYTE PTR [eax],al
10007a07:	add    eax,eax
10007a09:	add    BYTE PTR [eax],al
10007a0b:	add    eax,eax
10007a0d:	add    BYTE PTR [eax],al
10007a0f:	add    eax,eax
10007a11:	add    BYTE PTR [eax],al
10007a13:	add    eax,eax
10007a15:	add    BYTE PTR [eax],al
10007a17:	add    eax,eax
10007a19:	add    BYTE PTR [eax],al
10007a1b:	add    eax,eax
10007a1d:	add    BYTE PTR [eax],al
10007a1f:	add    eax,eax
10007a21:	add    BYTE PTR [eax],al
10007a23:	add    eax,eax
10007a25:	add    BYTE PTR [eax],al
10007a27:	add    eax,eax
10007a29:	add    BYTE PTR [eax],al
10007a2b:	add    eax,eax
10007a2d:	add    BYTE PTR [eax],al
10007a2f:	add    eax,eax
10007a31:	add    BYTE PTR [eax],al
10007a33:	add    eax,eax
10007a35:	add    BYTE PTR [eax],al
10007a37:	add    edi,edi
10007a39:	(bad)  
10007a3a:	(bad)  
10007a3b:	(bad)  
10007a3c:	(bad)  
10007a3d:	(bad)  
10007a3e:	(bad)  
10007a3f:	inc    DWORD PTR [eax]
10007a41:	add    BYTE PTR [ecx],al
10007a43:	add    BYTE PTR [ecx],cl
10007a45:	add    BYTE PTR [eax],dh
10007a47:	xor    BYTE PTR [eax],dl
10007a49:	add    BYTE PTR [ecx],al
10007a4b:	add    BYTE PTR [eax+eax*1],al
10007a4e:	push   0x1000006
10007a53:	add    BYTE PTR [eax],ah
10007a55:	and    BYTE PTR [eax],dl
10007a57:	add    BYTE PTR [ecx],al
10007a59:	add    BYTE PTR [eax+eax*1],al
10007a5c:	call   0x12007a63
10007a61:	add    BYTE PTR [eax],dl
10007a63:	adc    BYTE PTR [eax],dl
10007a65:	add    BYTE PTR [ecx],al
10007a67:	add    BYTE PTR [eax+eax*1],al
10007a6a:	sub    BYTE PTR [ecx],al
10007a6c:	add    BYTE PTR [eax],al
10007a6e:	add    eax,DWORD PTR [eax]
10007a70:	xor    BYTE PTR [eax],dh
10007a72:	add    BYTE PTR [eax],al
10007a74:	add    DWORD PTR [eax],eax
10007a76:	or     BYTE PTR [eax],al
10007a78:	test   al,0xe
10007a7a:	add    BYTE PTR [eax],al
10007a7c:	add    al,0x0
10007a7e:	and    BYTE PTR [eax],ah
10007a80:	add    BYTE PTR [eax],al
10007a82:	add    DWORD PTR [eax],eax
10007a84:	or     BYTE PTR [eax],al
10007a86:	test   al,0x8
10007a88:	add    BYTE PTR [eax],al
10007a8a:	add    eax,0x101000
10007a8f:	add    BYTE PTR [ecx],al
10007a91:	add    BYTE PTR [eax],cl
10007a93:	add    BYTE PTR [eax+0x5],ch
10007a96:	add    BYTE PTR [eax],al
10007a98:	push   es
10007a99:	add    BYTE PTR [eax],dl
10007a9b:	adc    BYTE PTR [eax],al
10007a9d:	add    BYTE PTR [ecx],al
10007a9f:	add    BYTE PTR [eax],bl
10007aa1:	add    BYTE PTR [eax+0x3],ch
10007aa4:	add    BYTE PTR [eax],al
10007aa6:	pop    es
10007aa7:	add    BYTE PTR [eax],dh
10007aa9:	xor    BYTE PTR [eax],al
10007aab:	add    BYTE PTR [ecx],al
10007aad:	add    BYTE PTR [eax],ah
10007aaf:	add    BYTE PTR [eax+0x8000025],ch
10007ab5:	add    BYTE PTR [eax],ah
10007ab7:	and    BYTE PTR [eax],al
10007ab9:	add    BYTE PTR [ecx],al
10007abb:	add    BYTE PTR [eax],ah
10007abd:	add    BYTE PTR [eax+0x9000010],ch
10007ac3:	add    BYTE PTR [eax],al
10007ac5:	add    BYTE PTR [eax],al
	...
